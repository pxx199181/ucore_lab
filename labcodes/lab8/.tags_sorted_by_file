!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
.DEFAULT_GOAL	Makefile	/^.DEFAULT_GOAL := TARGETS$/;"	m
ALLDEPS	Makefile	/^ALLDEPS	:=$/;"	m
ALLOBJS	Makefile	/^ALLOBJS	:=$/;"	m
AWK	Makefile	/^AWK		:= awk$/;"	m
BINDIR	Makefile	/^BINDIR	:= bin$/;"	m
CC	Makefile	/^CC		:= $(GCCPREFIX)gcc$/;"	m
CC	Makefile	/^CC		:= clang$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -g -m32 -mno-sse -nostdinc $(DEFS)$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc $(DEFS)$/;"	m
COPY	Makefile	/^COPY	:= cp$/;"	m
CTYPE	Makefile	/^CTYPE	:= c S$/;"	m
EMPTY	Makefile	/^EMPTY	:=$/;"	m
GCCPREFIX	Makefile	/^GCCPREFIX := $(shell if i386-ucore-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GDB	Makefile	/^GDB		:= $(GCCPREFIX)gdb$/;"	m
GRADE_GDB_IN	Makefile	/^GRADE_GDB_IN	:= .gdb.in$/;"	m
GRADE_QEMU_OUT	Makefile	/^GRADE_QEMU_OUT	:= .qemu.out$/;"	m
HANDIN	Makefile	/^HANDIN			:= proj$(PROJ)-handin.tar.gz$/;"	m
HOSTCC	Makefile	/^HOSTCC		:= clang$/;"	m
HOSTCC	Makefile	/^HOSTCC		:= gcc$/;"	m
HOSTCFLAGS	Makefile	/^HOSTCFLAGS	:= -g -Wall -O2$/;"	m
IGNORE_ALLDEPS	Makefile	/^IGNORE_ALLDEPS	= clean \\$/;"	m
KOBJS	Makefile	/^KOBJS	= $(call read_packet,kernel libs)$/;"	m
LD	Makefile	/^LD      := $(GCCPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS	:= -m $(shell $(LD) -V | grep elf_i386 2>\/dev\/null)$/;"	m
MAKEOPTS	Makefile	/^MAKEOPTS		:= --quiet --no-print-directory$/;"	m
MAKEOPTS	Makefile	/^MAKEOPTS	:= --quiet --no-print-directory$/;"	m
MKDIR	Makefile	/^MKDIR   := mkdir -p$/;"	m
MV	Makefile	/^MV		:= mv$/;"	m
OBJCOPY	Makefile	/^OBJCOPY := $(GCCPREFIX)objcopy$/;"	m
OBJDIR	Makefile	/^OBJDIR	:= obj$/;"	m
OBJDUMP	Makefile	/^OBJDUMP := $(GCCPREFIX)objdump$/;"	m
PROJ	Makefile	/^PROJ	:= 8$/;"	m
QEMU	Makefile	/^QEMU := $(shell if which qemu-system-i386 > \/dev\/null; \\$/;"	m
QEMUOPTS	Makefile	/^QEMUOPTS = -hda $(UCOREIMG) -drive file=$(SWAPIMG),media=disk,cache=writeback -drive file=$(SFSIMG),media=disk,cache=writeback $/;"	m
RM	Makefile	/^RM		:= rm -f$/;"	m
RUN_PREFIX	Makefile	/^RUN_PREFIX	:= _binary_$(OBJDIR)_$(USER_PREFIX)$/;"	m
SED	Makefile	/^SED		:= sed$/;"	m
SFSBINS	Makefile	/^SFSBINS		:=$/;"	m
SFSIMG	Makefile	/^SFSIMG		:= $(call totarget,sfs.img)$/;"	m
SFSROOT	Makefile	/^SFSROOT		:= disk0$/;"	m
SH	Makefile	/^SH		:= sh$/;"	m
SLASH	Makefile	/^SLASH	:= \/$/;"	m
SPACE	Makefile	/^SPACE	:= $(EMPTY) $(EMPTY)$/;"	m
SWAPIMG	Makefile	/^SWAPIMG		:= $(call totarget,swap.img)$/;"	m
TARGETS	Makefile	/^TARGETS	:=$/;"	m
TERMINAL	Makefile	/^TERMINAL := gnome-terminal$/;"	m
TOUCH	Makefile	/^TOUCH	:= touch -c$/;"	m
TOUCH_FILES	Makefile	/^TOUCH_FILES		:= kern\/process\/proc.c$/;"	m
TR	Makefile	/^TR		:= tr$/;"	m
UCOREIMG	Makefile	/^UCOREIMG	:= $(call totarget,ucore.img)$/;"	m
UOBJS	Makefile	/^UOBJS	:= $(call read_packet,ulibs libs)$/;"	m
USER_BINS	Makefile	/^USER_BINS	:=$/;"	m
USER_PREFIX	Makefile	/^USER_PREFIX	:= __user_$/;"	m
V	Makefile	/^V       := @$/;"	m
add_files_cc	Makefile	/^add_files_cc = $(call add_files,$(1),$(CC),$(CFLAGS) $(3),$(2),$(4))$/;"	m
add_files_host	Makefile	/^add_files_host = $(call add_files,$(1),$(HOSTCC),$(HOSTCFLAGS),$(2),$(3))$/;"	m
asmfile	Makefile	/^asmfile = $(call cgtype,$(call toobj,$(1)),o,asm)$/;"	m
bootblock	Makefile	/^bootblock = $(call totarget,bootblock)$/;"	m
bootfiles	Makefile	/^bootfiles = $(call listf_cc,boot)$/;"	m
cgtype	Makefile	/^cgtype = $(patsubst %.$(2),%.$(3),$(1))$/;"	m
create_target_cc	Makefile	/^create_target_cc = $(call create_target,$(1),$(2),$(3),$(CC),$(CFLAGS))$/;"	m
create_target_host	Makefile	/^create_target_host = $(call create_target,$(1),$(2),$(3),$(HOSTCC),$(HOSTCFLAGS))$/;"	m
filename	Makefile	/^filename = $(basename $(notdir $(1)))$/;"	m
fscopy	Makefile	/^define fscopy$/;"	m
kernel	Makefile	/^kernel = $(call totarget,kernel)$/;"	m
listf_cc	Makefile	/^listf_cc = $(call listf,$(1),$(CTYPE))$/;"	m
match	Makefile	/^match = $(shell echo $(2) | $(AWK) '{for(i=1;i<=NF;i++){if(match("$(1)","^"$$(i)"$$")){exit 1;}}}'; echo $$?)$/;"	m
objfile	Makefile	/^objfile = $(call toobj,$(1))$/;"	m
outfile	Makefile	/^outfile = $(call cgtype,$(call toobj,$(1)),o,out)$/;"	m
symfile	Makefile	/^symfile = $(call cgtype,$(call toobj,$(1)),o,sym)$/;"	m
ubinfile	Makefile	/^ubinfile = $(call outfile,$(addprefix $(USER_PREFIX),$(call filename,$(1))))$/;"	m
uprog_ld	Makefile	/^define uprog_ld$/;"	m
SEG_ASM	boot/asm.h	11;"	d
SEG_NULLASM	boot/asm.h	7;"	d
STA_A	boot/asm.h	23;"	d
STA_C	boot/asm.h	20;"	d
STA_E	boot/asm.h	19;"	d
STA_R	boot/asm.h	22;"	d
STA_W	boot/asm.h	21;"	d
STA_X	boot/asm.h	18;"	d
__BOOT_ASM_H__	boot/asm.h	2;"	d
cont	boot/bootasm.S	/^cont:$/;"	l
finish_probe	boot/bootasm.S	/^finish_probe:$/;"	l
gdt	boot/bootasm.S	/^gdt:$/;"	l
gdtdesc	boot/bootasm.S	/^gdtdesc:$/;"	l
probe_memory	boot/bootasm.S	/^probe_memory:$/;"	l
protcseg	boot/bootasm.S	/^protcseg:$/;"	l
spin	boot/bootasm.S	/^spin:$/;"	l
start	boot/bootasm.S	/^start:$/;"	l
start_probe	boot/bootasm.S	/^start_probe:$/;"	l
ELFHDR	boot/bootmain.c	34;"	d	file:
SECTSIZE	boot/bootmain.c	33;"	d	file:
bootmain	boot/bootmain.c	/^bootmain(void) {$/;"	f
readsect	boot/bootmain.c	/^readsect(void *dst, uint32_t secno) {$/;"	f	file:
readseg	boot/bootmain.c	/^readseg(uintptr_t va, uint32_t count, uint32_t offset) {$/;"	f	file:
waitdisk	boot/bootmain.c	/^waitdisk(void) {$/;"	f	file:
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
__KERN_DEBUG_ASSERT_H__	kern/debug/assert.h	2;"	d
assert	kern/debug/assert.h	15;"	d
panic	kern/debug/assert.h	12;"	d
static_assert	kern/debug/assert.h	23;"	d
warn	kern/debug/assert.h	9;"	d
STACKFRAME_DEPTH	kern/debug/kdebug.c	14;"	d	file:
debuginfo_eip	kern/debug/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct eipdebuginfo *info) {$/;"	f
eip_file	kern/debug/kdebug.c	/^    const char *eip_file;                   \/\/ source code filename for eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_addr	kern/debug/kdebug.c	/^    uintptr_t eip_fn_addr;                  \/\/ start address of function$/;"	m	struct:eipdebuginfo	file:
eip_fn_name	kern/debug/kdebug.c	/^    const char *eip_fn_name;                \/\/ name of function containing eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_namelen	kern/debug/kdebug.c	/^    int eip_fn_namelen;                     \/\/ length of function's name$/;"	m	struct:eipdebuginfo	file:
eip_fn_narg	kern/debug/kdebug.c	/^    int eip_fn_narg;                        \/\/ number of function arguments$/;"	m	struct:eipdebuginfo	file:
eip_line	kern/debug/kdebug.c	/^    int eip_line;                           \/\/ source code line number for eip$/;"	m	struct:eipdebuginfo	file:
eipdebuginfo	kern/debug/kdebug.c	/^struct eipdebuginfo {$/;"	s	file:
print_debuginfo	kern/debug/kdebug.c	/^print_debuginfo(uintptr_t eip) {$/;"	f
print_kerninfo	kern/debug/kdebug.c	/^print_kerninfo(void) {$/;"	f
print_stackframe	kern/debug/kdebug.c	/^print_stackframe(void) {$/;"	f
read_eip	kern/debug/kdebug.c	/^read_eip(void) {$/;"	f	file:
stab_binsearch	kern/debug/kdebug.c	/^stab_binsearch(const struct stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/debug/kdebug.c	/^    const struct stab *stab_end;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stabs	kern/debug/kdebug.c	/^    const struct stab *stabs;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stabstr	kern/debug/kdebug.c	/^    const char *stabstr;$/;"	m	struct:userstabdata	file:
stabstr_end	kern/debug/kdebug.c	/^    const char *stabstr_end;$/;"	m	struct:userstabdata	file:
userstabdata	kern/debug/kdebug.c	/^struct userstabdata {$/;"	s	file:
__KERN_DEBUG_KDEBUG_H__	kern/debug/kdebug.h	2;"	d
MAXARGS	kern/debug/kmonitor.c	33;"	d	file:
NCOMMANDS	kern/debug/kmonitor.c	29;"	d	file:
WHITESPACE	kern/debug/kmonitor.c	34;"	d	file:
command	kern/debug/kmonitor.c	/^struct command {$/;"	s	file:
commands	kern/debug/kmonitor.c	/^static struct command commands[] = {$/;"	v	typeref:struct:command	file:
desc	kern/debug/kmonitor.c	/^    const char *desc;$/;"	m	struct:command	file:
func	kern/debug/kmonitor.c	/^    int(*func)(int argc, char **argv, struct trapframe *tf);$/;"	m	struct:command	file:
kmonitor	kern/debug/kmonitor.c	/^kmonitor(struct trapframe *tf) {$/;"	f
mon_backtrace	kern/debug/kmonitor.c	/^mon_backtrace(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_help	kern/debug/kmonitor.c	/^mon_help(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_kerninfo	kern/debug/kmonitor.c	/^mon_kerninfo(int argc, char **argv, struct trapframe *tf) {$/;"	f
name	kern/debug/kmonitor.c	/^    const char *name;$/;"	m	struct:command	file:
parse	kern/debug/kmonitor.c	/^parse(char *buf, char **argv) {$/;"	f	file:
runcmd	kern/debug/kmonitor.c	/^runcmd(char *buf, struct trapframe *tf) {$/;"	f	file:
__KERN_DEBUG_MONITOR_H__	kern/debug/kmonitor.h	2;"	d
__panic	kern/debug/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__warn	kern/debug/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
is_kernel_panic	kern/debug/panic.c	/^is_kernel_panic(void) {$/;"	f
is_panic	kern/debug/panic.c	/^static bool is_panic = 0;$/;"	v	file:
N_BCOMM	kern/debug/stab.h	39;"	d
N_BINCL	kern/debug/stab.h	31;"	d
N_BSLINE	kern/debug/stab.h	27;"	d
N_DSLINE	kern/debug/stab.h	26;"	d
N_ECOML	kern/debug/stab.h	41;"	d
N_ECOMM	kern/debug/stab.h	40;"	d
N_EINCL	kern/debug/stab.h	34;"	d
N_ENTRY	kern/debug/stab.h	35;"	d
N_EXCL	kern/debug/stab.h	37;"	d
N_FNAME	kern/debug/stab.h	18;"	d
N_FUN	kern/debug/stab.h	19;"	d
N_GSYM	kern/debug/stab.h	17;"	d
N_LBRAC	kern/debug/stab.h	36;"	d
N_LCSYM	kern/debug/stab.h	21;"	d
N_LENG	kern/debug/stab.h	42;"	d
N_LSYM	kern/debug/stab.h	30;"	d
N_MAIN	kern/debug/stab.h	22;"	d
N_PC	kern/debug/stab.h	23;"	d
N_PSYM	kern/debug/stab.h	33;"	d
N_RBRAC	kern/debug/stab.h	38;"	d
N_RSYM	kern/debug/stab.h	24;"	d
N_SLINE	kern/debug/stab.h	25;"	d
N_SO	kern/debug/stab.h	29;"	d
N_SOL	kern/debug/stab.h	32;"	d
N_SSYM	kern/debug/stab.h	28;"	d
N_STSYM	kern/debug/stab.h	20;"	d
__KERN_DEBUG_STAB_H__	kern/debug/stab.h	2;"	d
n_desc	kern/debug/stab.h	/^    uint16_t n_desc;        \/\/ description field$/;"	m	struct:stab
n_other	kern/debug/stab.h	/^    uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:stab
n_strx	kern/debug/stab.h	/^    uint32_t n_strx;        \/\/ index into string table of name$/;"	m	struct:stab
n_type	kern/debug/stab.h	/^    uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:stab
n_value	kern/debug/stab.h	/^    uintptr_t n_value;      \/\/ value of symbol$/;"	m	struct:stab
stab	kern/debug/stab.h	/^struct stab {$/;"	s
IO_TIMER1	kern/driver/clock.c	11;"	d	file:
SYSTEM_READ_TIMER	kern/driver/clock.c	/^long SYSTEM_READ_TIMER( void ){$/;"	f
TIMER_16BIT	kern/driver/clock.c	24;"	d	file:
TIMER_DIV	kern/driver/clock.c	19;"	d	file:
TIMER_FREQ	kern/driver/clock.c	18;"	d	file:
TIMER_MODE	kern/driver/clock.c	21;"	d	file:
TIMER_RATEGEN	kern/driver/clock.c	23;"	d	file:
TIMER_SEL0	kern/driver/clock.c	22;"	d	file:
clock_init	kern/driver/clock.c	/^clock_init(void) {$/;"	f
ticks	kern/driver/clock.c	/^volatile size_t ticks;$/;"	v
__KERN_DRIVER_CLOCK_H__	kern/driver/clock.h	2;"	d
ALT	kern/driver/console.c	260;"	d	file:
C	kern/driver/console.c	323;"	d	file:
CAPSLOCK	kern/driver/console.c	262;"	d	file:
CGA_BASE	kern/driver/console.c	45;"	d	file:
CGA_BUF	kern/driver/console.c	46;"	d	file:
COM1	kern/driver/console.c	21;"	d	file:
COM_DLL	kern/driver/console.c	25;"	d	file:
COM_DLM	kern/driver/console.c	26;"	d	file:
COM_FCR	kern/driver/console.c	30;"	d	file:
COM_IER	kern/driver/console.c	27;"	d	file:
COM_IER_RDI	kern/driver/console.c	28;"	d	file:
COM_IIR	kern/driver/console.c	29;"	d	file:
COM_LCR	kern/driver/console.c	31;"	d	file:
COM_LCR_DLAB	kern/driver/console.c	32;"	d	file:
COM_LCR_WLEN8	kern/driver/console.c	33;"	d	file:
COM_LSR	kern/driver/console.c	38;"	d	file:
COM_LSR_DATA	kern/driver/console.c	39;"	d	file:
COM_LSR_TSRE	kern/driver/console.c	41;"	d	file:
COM_LSR_TXRDY	kern/driver/console.c	40;"	d	file:
COM_MCR	kern/driver/console.c	34;"	d	file:
COM_MCR_DTR	kern/driver/console.c	36;"	d	file:
COM_MCR_OUT2	kern/driver/console.c	37;"	d	file:
COM_MCR_RTS	kern/driver/console.c	35;"	d	file:
COM_RX	kern/driver/console.c	23;"	d	file:
COM_TX	kern/driver/console.c	24;"	d	file:
CONSBUFSIZE	kern/driver/console.c	208;"	d	file:
CRT_COLS	kern/driver/console.c	48;"	d	file:
CRT_ROWS	kern/driver/console.c	47;"	d	file:
CRT_SIZE	kern/driver/console.c	49;"	d	file:
CTL	kern/driver/console.c	259;"	d	file:
E0ESC	kern/driver/console.c	266;"	d	file:
LPTPORT	kern/driver/console.c	51;"	d	file:
MONO_BASE	kern/driver/console.c	43;"	d	file:
MONO_BUF	kern/driver/console.c	44;"	d	file:
NO	kern/driver/console.c	256;"	d	file:
NUMLOCK	kern/driver/console.c	263;"	d	file:
SCROLLLOCK	kern/driver/console.c	264;"	d	file:
SHIFT	kern/driver/console.c	258;"	d	file:
addr_6845	kern/driver/console.c	/^static uint16_t addr_6845;$/;"	v	file:
buf	kern/driver/console.c	/^    uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon14	file:
cga_init	kern/driver/console.c	/^cga_init(void) {$/;"	f	file:
cga_putc	kern/driver/console.c	/^cga_putc(int c) {$/;"	f	file:
charcode	kern/driver/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
cons	kern/driver/console.c	/^} cons;$/;"	v	typeref:struct:__anon14	file:
cons_getc	kern/driver/console.c	/^cons_getc(void) {$/;"	f
cons_init	kern/driver/console.c	/^cons_init(void) {$/;"	f
cons_intr	kern/driver/console.c	/^cons_intr(int (*proc)(void)) {$/;"	f	file:
cons_putc	kern/driver/console.c	/^cons_putc(int c) {$/;"	f
crt_buf	kern/driver/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_pos	kern/driver/console.c	/^static uint16_t crt_pos;$/;"	v	file:
ctlmap	kern/driver/console.c	/^static uint8_t ctlmap[256] = {$/;"	v	file:
delay	kern/driver/console.c	/^delay(void) {$/;"	f	file:
kbd_init	kern/driver/console.c	/^kbd_init(void) {$/;"	f	file:
kbd_intr	kern/driver/console.c	/^kbd_intr(void) {$/;"	f	file:
kbd_proc_data	kern/driver/console.c	/^kbd_proc_data(void) {$/;"	f	file:
lpt_putc	kern/driver/console.c	/^lpt_putc(int c) {$/;"	f	file:
lpt_putc_sub	kern/driver/console.c	/^lpt_putc_sub(int c) {$/;"	f	file:
normalmap	kern/driver/console.c	/^static uint8_t normalmap[256] = {$/;"	v	file:
rpos	kern/driver/console.c	/^    uint32_t rpos;$/;"	m	struct:__anon14	file:
serial_exists	kern/driver/console.c	/^static bool serial_exists = 0;$/;"	v	file:
serial_init	kern/driver/console.c	/^serial_init(void) {$/;"	f	file:
serial_intr	kern/driver/console.c	/^serial_intr(void) {$/;"	f
serial_proc_data	kern/driver/console.c	/^serial_proc_data(void) {$/;"	f	file:
serial_putc	kern/driver/console.c	/^serial_putc(int c) {$/;"	f	file:
serial_putc_sub	kern/driver/console.c	/^serial_putc_sub(int c) {$/;"	f	file:
shiftcode	kern/driver/console.c	/^static uint8_t shiftcode[256] = {$/;"	v	file:
shiftmap	kern/driver/console.c	/^static uint8_t shiftmap[256] = {$/;"	v	file:
togglecode	kern/driver/console.c	/^static uint8_t togglecode[256] = {$/;"	v	file:
wpos	kern/driver/console.c	/^    uint32_t wpos;$/;"	m	struct:__anon14	file:
__KERN_DRIVER_CONSOLE_H__	kern/driver/console.h	2;"	d
IDE_BSY	kern/driver/ide.c	22;"	d	file:
IDE_CMD_IDENTIFY	kern/driver/ide.c	30;"	d	file:
IDE_CMD_READ	kern/driver/ide.c	28;"	d	file:
IDE_CMD_WRITE	kern/driver/ide.c	29;"	d	file:
IDE_DF	kern/driver/ide.c	24;"	d	file:
IDE_DRDY	kern/driver/ide.c	23;"	d	file:
IDE_DRQ	kern/driver/ide.c	25;"	d	file:
IDE_ERR	kern/driver/ide.c	26;"	d	file:
IDE_IDENT_CAPABILITIES	kern/driver/ide.c	34;"	d	file:
IDE_IDENT_CMDSETS	kern/driver/ide.c	35;"	d	file:
IDE_IDENT_MAX_LBA	kern/driver/ide.c	36;"	d	file:
IDE_IDENT_MAX_LBA_EXT	kern/driver/ide.c	37;"	d	file:
IDE_IDENT_MODEL	kern/driver/ide.c	33;"	d	file:
IDE_IDENT_SECTORS	kern/driver/ide.c	32;"	d	file:
IO_BASE	kern/driver/ide.c	57;"	d	file:
IO_BASE0	kern/driver/ide.c	39;"	d	file:
IO_BASE1	kern/driver/ide.c	40;"	d	file:
IO_CTRL	kern/driver/ide.c	58;"	d	file:
IO_CTRL0	kern/driver/ide.c	41;"	d	file:
IO_CTRL1	kern/driver/ide.c	42;"	d	file:
ISA_COMMAND	kern/driver/ide.c	19;"	d	file:
ISA_CTRL	kern/driver/ide.c	13;"	d	file:
ISA_CYL_HI	kern/driver/ide.c	17;"	d	file:
ISA_CYL_LO	kern/driver/ide.c	16;"	d	file:
ISA_DATA	kern/driver/ide.c	10;"	d	file:
ISA_ERROR	kern/driver/ide.c	11;"	d	file:
ISA_PRECOMP	kern/driver/ide.c	12;"	d	file:
ISA_SDH	kern/driver/ide.c	18;"	d	file:
ISA_SECCNT	kern/driver/ide.c	14;"	d	file:
ISA_SECTOR	kern/driver/ide.c	15;"	d	file:
ISA_STATUS	kern/driver/ide.c	20;"	d	file:
MAX_DISK_NSECS	kern/driver/ide.c	46;"	d	file:
MAX_IDE	kern/driver/ide.c	44;"	d	file:
MAX_NSECS	kern/driver/ide.c	45;"	d	file:
VALID_IDE	kern/driver/ide.c	47;"	d	file:
base	kern/driver/ide.c	/^    unsigned short base;        \/\/ I\/O Base$/;"	m	struct:__anon13	file:
channels	kern/driver/ide.c	/^} channels[2] = {$/;"	v	typeref:struct:__anon13	file:
ctrl	kern/driver/ide.c	/^    unsigned short ctrl;        \/\/ Control Base$/;"	m	struct:__anon13	file:
ide_device	kern/driver/ide.c	/^static struct ide_device {$/;"	s	file:
ide_device_size	kern/driver/ide.c	/^ide_device_size(unsigned short ideno) {$/;"	f
ide_device_valid	kern/driver/ide.c	/^ide_device_valid(unsigned short ideno) {$/;"	f
ide_devices	kern/driver/ide.c	/^} ide_devices[MAX_IDE];$/;"	v	typeref:struct:ide_device	file:
ide_init	kern/driver/ide.c	/^ide_init(void) {$/;"	f
ide_read_secs	kern/driver/ide.c	/^ide_read_secs(unsigned short ideno, uint32_t secno, void *dst, size_t nsecs) {$/;"	f
ide_wait_ready	kern/driver/ide.c	/^ide_wait_ready(unsigned short iobase, bool check_error) {$/;"	f	file:
ide_write_secs	kern/driver/ide.c	/^ide_write_secs(unsigned short ideno, uint32_t secno, const void *src, size_t nsecs) {$/;"	f
model	kern/driver/ide.c	/^    unsigned char model[41];    \/\/ Model in String$/;"	m	struct:ide_device	file:
sets	kern/driver/ide.c	/^    unsigned int sets;          \/\/ Commend Sets Supported$/;"	m	struct:ide_device	file:
size	kern/driver/ide.c	/^    unsigned int size;          \/\/ Size in Sectors$/;"	m	struct:ide_device	file:
valid	kern/driver/ide.c	/^    unsigned char valid;        \/\/ 0 or 1 (If Device Really Exists)$/;"	m	struct:ide_device	file:
__KERN_DRIVER_IDE_H__	kern/driver/ide.h	2;"	d
intr_disable	kern/driver/intr.c	/^intr_disable(void) {$/;"	f
intr_enable	kern/driver/intr.c	/^intr_enable(void) {$/;"	f
__KERN_DRIVER_INTR_H__	kern/driver/intr.h	2;"	d
BS_OCMD	kern/driver/kbdreg.h	23;"	d
CMDBYTE	kern/driver/kbdreg.h	60;"	d
KBCMDP	kern/driver/kbdreg.h	29;"	d
KBC_AUXDISABLE	kern/driver/kbdreg.h	32;"	d
KBC_AUXECHO	kern/driver/kbdreg.h	36;"	d
KBC_AUXENABLE	kern/driver/kbdreg.h	33;"	d
KBC_AUXTEST	kern/driver/kbdreg.h	34;"	d
KBC_AUXWRITE	kern/driver/kbdreg.h	37;"	d
KBC_DISABLE	kern/driver/kbdreg.h	66;"	d
KBC_ECHO	kern/driver/kbdreg.h	71;"	d
KBC_ENABLE	kern/driver/kbdreg.h	67;"	d
KBC_KBDDISABLE	kern/driver/kbdreg.h	40;"	d
KBC_KBDECHO	kern/driver/kbdreg.h	35;"	d
KBC_KBDENABLE	kern/driver/kbdreg.h	41;"	d
KBC_KBDTEST	kern/driver/kbdreg.h	39;"	d
KBC_MODEIND	kern/driver/kbdreg.h	70;"	d
KBC_PULSE0	kern/driver/kbdreg.h	42;"	d
KBC_PULSE1	kern/driver/kbdreg.h	43;"	d
KBC_PULSE2	kern/driver/kbdreg.h	44;"	d
KBC_PULSE3	kern/driver/kbdreg.h	45;"	d
KBC_RAMREAD	kern/driver/kbdreg.h	30;"	d
KBC_RAMWRITE	kern/driver/kbdreg.h	31;"	d
KBC_RESEND	kern/driver/kbdreg.h	64;"	d
KBC_RESET	kern/driver/kbdreg.h	63;"	d
KBC_SELFTEST	kern/driver/kbdreg.h	38;"	d
KBC_SETDEFAULT	kern/driver/kbdreg.h	65;"	d
KBC_SETTABLE	kern/driver/kbdreg.h	69;"	d
KBC_TYPEMATIC	kern/driver/kbdreg.h	68;"	d
KBDATAP	kern/driver/kbdreg.h	47;"	d
KBOUTP	kern/driver/kbdreg.h	48;"	d
KBR_ACK	kern/driver/kbdreg.h	76;"	d
KBR_BREAK	kern/driver/kbdreg.h	79;"	d
KBR_ECHO	kern/driver/kbdreg.h	81;"	d
KBR_EXTENDED	kern/driver/kbdreg.h	74;"	d
KBR_FAILURE	kern/driver/kbdreg.h	78;"	d
KBR_OVERRUN	kern/driver/kbdreg.h	77;"	d
KBR_RESEND	kern/driver/kbdreg.h	75;"	d
KBR_RSTDONE	kern/driver/kbdreg.h	80;"	d
KBSTATP	kern/driver/kbdreg.h	19;"	d
KBS_DIB	kern/driver/kbdreg.h	20;"	d
KBS_IBF	kern/driver/kbdreg.h	21;"	d
KBS_NOSEC	kern/driver/kbdreg.h	24;"	d
KBS_PERR	kern/driver/kbdreg.h	27;"	d
KBS_RERR	kern/driver/kbdreg.h	26;"	d
KBS_TERR	kern/driver/kbdreg.h	25;"	d
KBS_WARM	kern/driver/kbdreg.h	22;"	d
KC8_CPU	kern/driver/kbdreg.h	57;"	d
KC8_IGNSEC	kern/driver/kbdreg.h	56;"	d
KC8_KDISABLE	kern/driver/kbdreg.h	55;"	d
KC8_KENABLE	kern/driver/kbdreg.h	59;"	d
KC8_MDISABLE	kern/driver/kbdreg.h	54;"	d
KC8_MENABLE	kern/driver/kbdreg.h	58;"	d
KC8_TRANS	kern/driver/kbdreg.h	53;"	d
KEY_DEL	kern/driver/kbdreg.h	14;"	d
KEY_DN	kern/driver/kbdreg.h	8;"	d
KEY_END	kern/driver/kbdreg.h	6;"	d
KEY_HOME	kern/driver/kbdreg.h	5;"	d
KEY_INS	kern/driver/kbdreg.h	13;"	d
KEY_LF	kern/driver/kbdreg.h	9;"	d
KEY_PGDN	kern/driver/kbdreg.h	12;"	d
KEY_PGUP	kern/driver/kbdreg.h	11;"	d
KEY_RT	kern/driver/kbdreg.h	10;"	d
KEY_UP	kern/driver/kbdreg.h	7;"	d
K_LDCMDBYTE	kern/driver/kbdreg.h	51;"	d
K_RDCMDBYTE	kern/driver/kbdreg.h	50;"	d
__KERN_DRIVER_KBDREG_H__	kern/driver/kbdreg.h	2;"	d
IO_PIC1	kern/driver/picirq.c	6;"	d	file:
IO_PIC2	kern/driver/picirq.c	7;"	d	file:
IRQ_SLAVE	kern/driver/picirq.c	9;"	d	file:
did_init	kern/driver/picirq.c	/^static bool did_init = 0;$/;"	v	file:
irq_mask	kern/driver/picirq.c	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	v	file:
pic_enable	kern/driver/picirq.c	/^pic_enable(unsigned int irq) {$/;"	f
pic_init	kern/driver/picirq.c	/^pic_init(void) {$/;"	f
pic_setmask	kern/driver/picirq.c	/^pic_setmask(uint16_t mask) {$/;"	f	file:
IRQ_OFFSET	kern/driver/picirq.h	7;"	d
__KERN_DRIVER_PICIRQ_H__	kern/driver/picirq.h	2;"	d
dev_close	kern/fs/devs/dev.c	/^dev_close(struct inode *node) {$/;"	f	file:
dev_create_inode	kern/fs/devs/dev.c	/^dev_create_inode(void) {$/;"	f
dev_fstat	kern/fs/devs/dev.c	/^dev_fstat(struct inode *node, struct stat *stat) {$/;"	f	file:
dev_gettype	kern/fs/devs/dev.c	/^dev_gettype(struct inode *node, uint32_t *type_store) {$/;"	f	file:
dev_init	kern/fs/devs/dev.c	/^dev_init(void) {$/;"	f
dev_ioctl	kern/fs/devs/dev.c	/^dev_ioctl(struct inode *node, int op, void *data) {$/;"	f	file:
dev_lookup	kern/fs/devs/dev.c	/^dev_lookup(struct inode *node, char *path, struct inode **node_store) {$/;"	f	file:
dev_node_ops	kern/fs/devs/dev.c	/^static const struct inode_ops dev_node_ops = {$/;"	v	typeref:struct:inode_ops	file:
dev_open	kern/fs/devs/dev.c	/^dev_open(struct inode *node, uint32_t open_flags) {$/;"	f	file:
dev_read	kern/fs/devs/dev.c	/^dev_read(struct inode *node, struct iobuf *iob) {$/;"	f	file:
dev_tryseek	kern/fs/devs/dev.c	/^dev_tryseek(struct inode *node, off_t pos) {$/;"	f	file:
dev_write	kern/fs/devs/dev.c	/^dev_write(struct inode *node, struct iobuf *iob) {$/;"	f	file:
init_device	kern/fs/devs/dev.c	144;"	d	file:
__KERN_FS_DEVS_DEV_H__	kern/fs/devs/dev.h	2;"	d
d_blocks	kern/fs/devs/dev.h	/^    size_t d_blocks;$/;"	m	struct:device
d_blocksize	kern/fs/devs/dev.h	/^    size_t d_blocksize;$/;"	m	struct:device
d_close	kern/fs/devs/dev.h	/^    int (*d_close)(struct device *dev);$/;"	m	struct:device
d_io	kern/fs/devs/dev.h	/^    int (*d_io)(struct device *dev, struct iobuf *iob, bool write);$/;"	m	struct:device
d_ioctl	kern/fs/devs/dev.h	/^    int (*d_ioctl)(struct device *dev, int op, void *data);$/;"	m	struct:device
d_open	kern/fs/devs/dev.h	/^    int (*d_open)(struct device *dev, uint32_t open_flags);$/;"	m	struct:device
device	kern/fs/devs/dev.h	/^struct device {$/;"	s
dop_close	kern/fs/devs/dev.h	23;"	d
dop_io	kern/fs/devs/dev.h	24;"	d
dop_ioctl	kern/fs/devs/dev.h	25;"	d
dop_open	kern/fs/devs/dev.h	22;"	d
DISK0_BLKSIZE	kern/fs/devs/dev_disk0.c	13;"	d	file:
DISK0_BLK_NSECT	kern/fs/devs/dev_disk0.c	15;"	d	file:
DISK0_BUFSIZE	kern/fs/devs/dev_disk0.c	14;"	d	file:
dev_init_disk0	kern/fs/devs/dev_disk0.c	/^dev_init_disk0(void) {$/;"	f
disk0_buffer	kern/fs/devs/dev_disk0.c	/^static char *disk0_buffer;$/;"	v	file:
disk0_close	kern/fs/devs/dev_disk0.c	/^disk0_close(struct device *dev) {$/;"	f	file:
disk0_device_init	kern/fs/devs/dev_disk0.c	/^disk0_device_init(struct device *dev) {$/;"	f	file:
disk0_io	kern/fs/devs/dev_disk0.c	/^disk0_io(struct device *dev, struct iobuf *iob, bool write) {$/;"	f	file:
disk0_ioctl	kern/fs/devs/dev_disk0.c	/^disk0_ioctl(struct device *dev, int op, void *data) {$/;"	f	file:
disk0_open	kern/fs/devs/dev_disk0.c	/^disk0_open(struct device *dev, uint32_t open_flags) {$/;"	f	file:
disk0_read_blks_nolock	kern/fs/devs/dev_disk0.c	/^disk0_read_blks_nolock(uint32_t blkno, uint32_t nblks) {$/;"	f	file:
disk0_sem	kern/fs/devs/dev_disk0.c	/^static semaphore_t disk0_sem;$/;"	v	file:
disk0_write_blks_nolock	kern/fs/devs/dev_disk0.c	/^disk0_write_blks_nolock(uint32_t blkno, uint32_t nblks) {$/;"	f	file:
lock_disk0	kern/fs/devs/dev_disk0.c	/^lock_disk0(void) {$/;"	f	file:
unlock_disk0	kern/fs/devs/dev_disk0.c	/^unlock_disk0(void) {$/;"	f	file:
STDIN_BUFSIZE	kern/fs/devs/dev_stdin.c	15;"	d	file:
__wait_queue	kern/fs/devs/dev_stdin.c	/^static wait_queue_t __wait_queue, *wait_queue = &__wait_queue;$/;"	v	file:
dev_init_stdin	kern/fs/devs/dev_stdin.c	/^dev_init_stdin(void) {$/;"	f
dev_stdin_read	kern/fs/devs/dev_stdin.c	/^dev_stdin_read(char *buf, size_t len) {$/;"	f	file:
dev_stdin_write	kern/fs/devs/dev_stdin.c	/^dev_stdin_write(char c) {$/;"	f
p_rpos	kern/fs/devs/dev_stdin.c	/^static off_t p_rpos, p_wpos;$/;"	v	file:
p_wpos	kern/fs/devs/dev_stdin.c	/^static off_t p_rpos, p_wpos;$/;"	v	file:
stdin_buffer	kern/fs/devs/dev_stdin.c	/^static char stdin_buffer[STDIN_BUFSIZE];$/;"	v	file:
stdin_close	kern/fs/devs/dev_stdin.c	/^stdin_close(struct device *dev) {$/;"	f	file:
stdin_device_init	kern/fs/devs/dev_stdin.c	/^stdin_device_init(struct device *dev) {$/;"	f	file:
stdin_io	kern/fs/devs/dev_stdin.c	/^stdin_io(struct device *dev, struct iobuf *iob, bool write) {$/;"	f	file:
stdin_ioctl	kern/fs/devs/dev_stdin.c	/^stdin_ioctl(struct device *dev, int op, void *data) {$/;"	f	file:
stdin_open	kern/fs/devs/dev_stdin.c	/^stdin_open(struct device *dev, uint32_t open_flags) {$/;"	f	file:
wait_queue	kern/fs/devs/dev_stdin.c	/^static wait_queue_t __wait_queue, *wait_queue = &__wait_queue;$/;"	v	file:
dev_init_stdout	kern/fs/devs/dev_stdout.c	/^dev_init_stdout(void) {$/;"	f
stdout_close	kern/fs/devs/dev_stdout.c	/^stdout_close(struct device *dev) {$/;"	f	file:
stdout_device_init	kern/fs/devs/dev_stdout.c	/^stdout_device_init(struct device *dev) {$/;"	f	file:
stdout_io	kern/fs/devs/dev_stdout.c	/^stdout_io(struct device *dev, struct iobuf *iob, bool write) {$/;"	f	file:
stdout_ioctl	kern/fs/devs/dev_stdout.c	/^stdout_ioctl(struct device *dev, int op, void *data) {$/;"	f	file:
stdout_open	kern/fs/devs/dev_stdout.c	/^stdout_open(struct device *dev, uint32_t open_flags) {$/;"	f	file:
fd2file	kern/fs/file.c	/^fd2file(int fd, struct file **file_store) {$/;"	f	file:
fd_array_acquire	kern/fs/file.c	/^fd_array_acquire(struct file *file) {$/;"	f	file:
fd_array_alloc	kern/fs/file.c	/^fd_array_alloc(int fd, struct file **file_store) {$/;"	f	file:
fd_array_close	kern/fs/file.c	/^fd_array_close(struct file *file) {$/;"	f
fd_array_dup	kern/fs/file.c	/^fd_array_dup(struct file *to, struct file *from) {$/;"	f
fd_array_free	kern/fs/file.c	/^fd_array_free(struct file *file) {$/;"	f	file:
fd_array_init	kern/fs/file.c	/^fd_array_init(struct file *fd_array) {$/;"	f
fd_array_open	kern/fs/file.c	/^fd_array_open(struct file *file) {$/;"	f
fd_array_release	kern/fs/file.c	/^fd_array_release(struct file *file) {$/;"	f	file:
file_close	kern/fs/file.c	/^file_close(int fd) {$/;"	f
file_dup	kern/fs/file.c	/^file_dup(int fd1, int fd2) {$/;"	f
file_fstat	kern/fs/file.c	/^file_fstat(int fd, struct stat *stat) {$/;"	f
file_fsync	kern/fs/file.c	/^file_fsync(int fd) {$/;"	f
file_getdirentry	kern/fs/file.c	/^file_getdirentry(int fd, struct dirent *direntp) {$/;"	f
file_open	kern/fs/file.c	/^file_open(char *path, uint32_t open_flags) {$/;"	f
file_read	kern/fs/file.c	/^file_read(int fd, void *base, size_t len, size_t *copied_store) {$/;"	f
file_seek	kern/fs/file.c	/^file_seek(int fd, off_t pos, int whence) {$/;"	f
file_testfd	kern/fs/file.c	/^file_testfd(int fd, bool readable, bool writable) {$/;"	f
file_write	kern/fs/file.c	/^file_write(int fd, void *base, size_t len, size_t *copied_store) {$/;"	f
get_fd_array	kern/fs/file.c	/^get_fd_array(void) {$/;"	f	file:
testfd	kern/fs/file.c	14;"	d	file:
FD_CLOSED	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon9
FD_INIT	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon9
FD_NONE	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon9
FD_OPENED	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon9
__KERN_FS_FILE_H__	kern/fs/file.h	2;"	d
fd	kern/fs/file.h	/^    int fd;$/;"	m	struct:file
file	kern/fs/file.h	/^struct file {$/;"	s
fopen_count	kern/fs/file.h	/^fopen_count(struct file *file) {$/;"	f
fopen_count_dec	kern/fs/file.h	/^fopen_count_dec(struct file *file) {$/;"	f
fopen_count_inc	kern/fs/file.h	/^fopen_count_inc(struct file *file) {$/;"	f
node	kern/fs/file.h	/^    struct inode *node;$/;"	m	struct:file	typeref:struct:file::inode
open_count	kern/fs/file.h	/^    int open_count;$/;"	m	struct:file
pos	kern/fs/file.h	/^    off_t pos;$/;"	m	struct:file
readable	kern/fs/file.h	/^    bool readable;$/;"	m	struct:file
status	kern/fs/file.h	/^    } status;$/;"	m	struct:file	typeref:enum:file::__anon9
writable	kern/fs/file.h	/^    bool writable;$/;"	m	struct:file
dup_files	kern/fs/fs.c	/^dup_files(struct files_struct *to, struct files_struct *from) {$/;"	f
files_closeall	kern/fs/fs.c	/^files_closeall(struct files_struct *filesp) {$/;"	f
files_create	kern/fs/fs.c	/^files_create(void) {$/;"	f
files_destroy	kern/fs/fs.c	/^files_destroy(struct files_struct *filesp) {$/;"	f
fs_cleanup	kern/fs/fs.c	/^fs_cleanup(void) {$/;"	f
fs_init	kern/fs/fs.c	/^fs_init(void) {$/;"	f
lock_files	kern/fs/fs.c	/^lock_files(struct files_struct *filesp) {$/;"	f
unlock_files	kern/fs/fs.c	/^unlock_files(struct files_struct *filesp) {$/;"	f
DISK0_DEV_NO	kern/fs/fs.h	13;"	d
DISK1_DEV_NO	kern/fs/fs.h	14;"	d
FILES_STRUCT_BUFSIZE	kern/fs/fs.h	32;"	d
FILES_STRUCT_NENTRY	kern/fs/fs.h	33;"	d
PAGE_NSECT	kern/fs/fs.h	10;"	d
SECTSIZE	kern/fs/fs.h	9;"	d
SWAP_DEV_NO	kern/fs/fs.h	12;"	d
__KERN_FS_FS_H__	kern/fs/fs.h	2;"	d
fd_array	kern/fs/fs.h	/^    struct file *fd_array;  \/\/ opened files array$/;"	m	struct:files_struct	typeref:struct:files_struct::file
files_count	kern/fs/fs.h	/^    int files_count;        \/\/ the number of opened files$/;"	m	struct:files_struct
files_count	kern/fs/fs.h	/^files_count(struct files_struct *filesp) {$/;"	f
files_count_dec	kern/fs/fs.h	/^files_count_dec(struct files_struct *filesp) {$/;"	f
files_count_inc	kern/fs/fs.h	/^files_count_inc(struct files_struct *filesp) {$/;"	f
files_sem	kern/fs/fs.h	/^    semaphore_t files_sem;  \/\/ lock protect sem$/;"	m	struct:files_struct
files_struct	kern/fs/fs.h	/^struct files_struct {$/;"	s
pwd	kern/fs/fs.h	/^    struct inode *pwd;      \/\/ inode of present working directory$/;"	m	struct:files_struct	typeref:struct:files_struct::inode
iobuf_init	kern/fs/iobuf.c	/^iobuf_init(struct iobuf *iob, void *base, size_t len, off_t offset) {$/;"	f
iobuf_move	kern/fs/iobuf.c	/^iobuf_move(struct iobuf *iob, void *data, size_t len, bool m2b, size_t *copiedp) {$/;"	f
iobuf_move_zeros	kern/fs/iobuf.c	/^iobuf_move_zeros(struct iobuf *iob, size_t len, size_t *copiedp) {$/;"	f
iobuf_skip	kern/fs/iobuf.c	/^iobuf_skip(struct iobuf *iob, size_t n) {$/;"	f
__KERN_FS_IOBUF_H__	kern/fs/iobuf.h	2;"	d
io_base	kern/fs/iobuf.h	/^    void *io_base;     \/\/ the base addr of buffer (used for Rd\/Wr)$/;"	m	struct:iobuf
io_len	kern/fs/iobuf.h	/^    size_t io_len;     \/\/ the length of buffer  (used for Rd\/Wr)$/;"	m	struct:iobuf
io_offset	kern/fs/iobuf.h	/^    off_t io_offset;   \/\/ current Rd\/Wr position in buffer, will have been incremented by the amount transferred$/;"	m	struct:iobuf
io_resid	kern/fs/iobuf.h	/^    size_t io_resid;   \/\/ current resident length need to Rd\/Wr, will have been decremented by the amount transferred.$/;"	m	struct:iobuf
iobuf	kern/fs/iobuf.h	/^struct iobuf {$/;"	s
iobuf_used	kern/fs/iobuf.h	16;"	d
WORD_BITS	kern/fs/sfs/bitmap.c	9;"	d	file:
WORD_TYPE	kern/fs/sfs/bitmap.c	8;"	d	file:
bitmap	kern/fs/sfs/bitmap.c	/^struct bitmap {$/;"	s	file:
bitmap_alloc	kern/fs/sfs/bitmap.c	/^bitmap_alloc(struct bitmap *bitmap, uint32_t *index_store) {$/;"	f
bitmap_create	kern/fs/sfs/bitmap.c	/^bitmap_create(uint32_t nbits) {$/;"	f
bitmap_destroy	kern/fs/sfs/bitmap.c	/^bitmap_destroy(struct bitmap *bitmap) {$/;"	f
bitmap_free	kern/fs/sfs/bitmap.c	/^bitmap_free(struct bitmap *bitmap, uint32_t index) {$/;"	f
bitmap_getdata	kern/fs/sfs/bitmap.c	/^bitmap_getdata(struct bitmap *bitmap, size_t *len_store) {$/;"	f
bitmap_test	kern/fs/sfs/bitmap.c	/^bitmap_test(struct bitmap *bitmap, uint32_t index) {$/;"	f
bitmap_translate	kern/fs/sfs/bitmap.c	/^bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE **word, WORD_TYPE *mask) {$/;"	f	file:
map	kern/fs/sfs/bitmap.c	/^    WORD_TYPE *map;$/;"	m	struct:bitmap	file:
nbits	kern/fs/sfs/bitmap.c	/^    uint32_t nbits;$/;"	m	struct:bitmap	file:
nwords	kern/fs/sfs/bitmap.c	/^    uint32_t nwords;$/;"	m	struct:bitmap	file:
__KERN_FS_SFS_BITMAP_H__	kern/fs/sfs/bitmap.h	2;"	d
sfs_init	kern/fs/sfs/sfs.c	/^sfs_init(void) {$/;"	f
SFS_BLKBITS	kern/fs/sfs/sfs.h	26;"	d
SFS_BLKN_FREEMAP	kern/fs/sfs/sfs.h	23;"	d
SFS_BLKN_ROOT	kern/fs/sfs/sfs.h	22;"	d
SFS_BLKN_SUPER	kern/fs/sfs/sfs.h	21;"	d
SFS_BLKSIZE	kern/fs/sfs/sfs.h	16;"	d
SFS_BLK_NENTRY	kern/fs/sfs/sfs.h	29;"	d
SFS_HLIST_SHIFT	kern/fs/sfs/sfs.h	97;"	d
SFS_HLIST_SIZE	kern/fs/sfs/sfs.h	98;"	d
SFS_MAGIC	kern/fs/sfs/sfs.h	15;"	d
SFS_MAX_FILE_SIZE	kern/fs/sfs/sfs.h	20;"	d
SFS_MAX_FNAME_LEN	kern/fs/sfs/sfs.h	19;"	d
SFS_MAX_INFO_LEN	kern/fs/sfs/sfs.h	18;"	d
SFS_NDIRECT	kern/fs/sfs/sfs.h	17;"	d
SFS_TYPE_DIR	kern/fs/sfs/sfs.h	34;"	d
SFS_TYPE_FILE	kern/fs/sfs/sfs.h	33;"	d
SFS_TYPE_INVAL	kern/fs/sfs/sfs.h	32;"	d
SFS_TYPE_LINK	kern/fs/sfs/sfs.h	35;"	d
__KERN_FS_SFS_SFS_H__	kern/fs/sfs/sfs.h	2;"	d
blocks	kern/fs/sfs/sfs.h	/^    uint32_t blocks;                                \/* # of blocks *\/$/;"	m	struct:sfs_disk_inode
blocks	kern/fs/sfs/sfs.h	/^    uint32_t blocks;                                \/* # of blocks in fs *\/$/;"	m	struct:sfs_super
dev	kern/fs/sfs/sfs.h	/^    struct device *dev;                             \/* device mounted on *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::device
din	kern/fs/sfs/sfs.h	/^    struct sfs_disk_inode *din;                     \/* on-disk inode *\/$/;"	m	struct:sfs_inode	typeref:struct:sfs_inode::sfs_disk_inode
direct	kern/fs/sfs/sfs.h	/^    uint32_t direct[SFS_NDIRECT];                   \/* direct blocks *\/$/;"	m	struct:sfs_disk_inode
dirty	kern/fs/sfs/sfs.h	/^    bool dirty;                                     \/* true if inode modified *\/$/;"	m	struct:sfs_inode
freemap	kern/fs/sfs/sfs.h	/^    struct bitmap *freemap;                         \/* blocks in use are mared 0 *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::bitmap
fs_sem	kern/fs/sfs/sfs.h	/^    semaphore_t fs_sem;                             \/* semaphore for fs *\/$/;"	m	struct:sfs_fs
hash_link	kern/fs/sfs/sfs.h	/^    list_entry_t hash_link;                         \/* entry for hash linked-list in sfs_fs *\/$/;"	m	struct:sfs_inode
hash_list	kern/fs/sfs/sfs.h	/^    list_entry_t *hash_list;                        \/* inode hash linked-list *\/$/;"	m	struct:sfs_fs
indirect	kern/fs/sfs/sfs.h	/^    uint32_t indirect;                              \/* indirect blocks *\/$/;"	m	struct:sfs_disk_inode
info	kern/fs/sfs/sfs.h	/^    char info[SFS_MAX_INFO_LEN + 1];                \/* infomation for sfs  *\/$/;"	m	struct:sfs_super
ino	kern/fs/sfs/sfs.h	/^    uint32_t ino;                                   \/* inode number *\/$/;"	m	struct:sfs_disk_entry
ino	kern/fs/sfs/sfs.h	/^    uint32_t ino;                                   \/* inode number *\/$/;"	m	struct:sfs_inode
inode_link	kern/fs/sfs/sfs.h	/^    list_entry_t inode_link;                        \/* entry for linked-list in sfs_fs *\/$/;"	m	struct:sfs_inode
inode_list	kern/fs/sfs/sfs.h	/^    list_entry_t inode_list;                        \/* inode linked-list *\/$/;"	m	struct:sfs_fs
io_sem	kern/fs/sfs/sfs.h	/^    semaphore_t io_sem;                             \/* semaphore for io *\/$/;"	m	struct:sfs_fs
le2sin	kern/fs/sfs/sfs.h	79;"	d
magic	kern/fs/sfs/sfs.h	/^    uint32_t magic;                                 \/* magic number, should be SFS_MAGIC *\/$/;"	m	struct:sfs_super
mutex_sem	kern/fs/sfs/sfs.h	/^    semaphore_t mutex_sem;                          \/* semaphore for link\/unlink and rename *\/$/;"	m	struct:sfs_fs
name	kern/fs/sfs/sfs.h	/^    char name[SFS_MAX_FNAME_LEN + 1];               \/* file name *\/$/;"	m	struct:sfs_disk_entry
nlinks	kern/fs/sfs/sfs.h	/^    uint16_t nlinks;                                \/* # of hard links to this file *\/$/;"	m	struct:sfs_disk_inode
reclaim_count	kern/fs/sfs/sfs.h	/^    int reclaim_count;                              \/* kill inode if it hits zero *\/$/;"	m	struct:sfs_inode
sem	kern/fs/sfs/sfs.h	/^    semaphore_t sem;                                \/* semaphore for din *\/$/;"	m	struct:sfs_inode
sfs_buffer	kern/fs/sfs/sfs.h	/^    void *sfs_buffer;                               \/* buffer for non-block aligned io *\/$/;"	m	struct:sfs_fs
sfs_dentry_size	kern/fs/sfs/sfs.h	65;"	d
sfs_disk_entry	kern/fs/sfs/sfs.h	/^struct sfs_disk_entry {$/;"	s
sfs_disk_inode	kern/fs/sfs/sfs.h	/^struct sfs_disk_inode {$/;"	s
sfs_freemap_bits	kern/fs/sfs/sfs.h	102;"	d
sfs_freemap_blocks	kern/fs/sfs/sfs.h	105;"	d
sfs_fs	kern/fs/sfs/sfs.h	/^struct sfs_fs {$/;"	s
sfs_inode	kern/fs/sfs/sfs.h	/^struct sfs_inode {$/;"	s
sfs_super	kern/fs/sfs/sfs.h	/^struct sfs_super {$/;"	s
sin_hashfn	kern/fs/sfs/sfs.h	99;"	d
size	kern/fs/sfs/sfs.h	/^    uint32_t size;                                  \/* size of the file (in bytes) *\/$/;"	m	struct:sfs_disk_inode
super	kern/fs/sfs/sfs.h	/^    struct sfs_super super;                         \/* on-disk superblock *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::sfs_super
super_dirty	kern/fs/sfs/sfs.h	/^    bool super_dirty;                               \/* true if super\/freemap modified *\/$/;"	m	struct:sfs_fs
type	kern/fs/sfs/sfs.h	/^    uint16_t type;                                  \/* one of SYS_TYPE_* above *\/$/;"	m	struct:sfs_disk_inode
unused_blocks	kern/fs/sfs/sfs.h	/^    uint32_t unused_blocks;                         \/* # of unused blocks in fs *\/$/;"	m	struct:sfs_super
sfs_cleanup	kern/fs/sfs/sfs_fs.c	/^sfs_cleanup(struct fs *fs) {$/;"	f	file:
sfs_do_mount	kern/fs/sfs/sfs_fs.c	/^sfs_do_mount(struct device *dev, struct fs **fs_store) {$/;"	f	file:
sfs_get_root	kern/fs/sfs/sfs_fs.c	/^sfs_get_root(struct fs *fs) {$/;"	f	file:
sfs_init_freemap	kern/fs/sfs/sfs_fs.c	/^sfs_init_freemap(struct device *dev, struct bitmap *freemap, uint32_t blkno, uint32_t nblks, void *blk_buffer) {$/;"	f	file:
sfs_init_read	kern/fs/sfs/sfs_fs.c	/^sfs_init_read(struct device *dev, uint32_t blkno, void *blk_buffer) {$/;"	f	file:
sfs_mount	kern/fs/sfs/sfs_fs.c	/^sfs_mount(const char *devname) {$/;"	f
sfs_sync	kern/fs/sfs/sfs_fs.c	/^sfs_sync(struct fs *fs) {$/;"	f	file:
sfs_unmount	kern/fs/sfs/sfs_fs.c	/^sfs_unmount(struct fs *fs) {$/;"	f	file:
lock_sin	kern/fs/sfs/sfs_inode.c	/^lock_sin(struct sfs_inode *sin) {$/;"	f	file:
lookup_sfs_nolock	kern/fs/sfs/sfs_inode.c	/^lookup_sfs_nolock(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
set_pvalue	kern/fs/sfs/sfs_inode.c	448;"	d	file:
set_pvalue	kern/fs/sfs/sfs_inode.c	465;"	d	file:
sfs_block_alloc	kern/fs/sfs/sfs_inode.c	/^sfs_block_alloc(struct sfs_fs *sfs, uint32_t *ino_store) {$/;"	f	file:
sfs_block_free	kern/fs/sfs/sfs_inode.c	/^sfs_block_free(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
sfs_block_inuse	kern/fs/sfs/sfs_inode.c	/^sfs_block_inuse(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
sfs_bmap_free_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_free_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index) {$/;"	f	file:
sfs_bmap_free_sub_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_free_sub_nolock(struct sfs_fs *sfs, uint32_t ent, uint32_t index) {$/;"	f	file:
sfs_bmap_get_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_get_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index, bool create, uint32_t *ino_store) {$/;"	f	file:
sfs_bmap_get_sub_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_get_sub_nolock(struct sfs_fs *sfs, uint32_t *entp, uint32_t index, bool create, uint32_t *ino_store) {$/;"	f	file:
sfs_bmap_load_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_load_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index, uint32_t *ino_store) {$/;"	f	file:
sfs_bmap_truncate_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_truncate_nolock(struct sfs_fs *sfs, struct sfs_inode *sin) {$/;"	f	file:
sfs_close	kern/fs/sfs/sfs_inode.c	/^sfs_close(struct inode *node) {$/;"	f	file:
sfs_create_inode	kern/fs/sfs/sfs_inode.c	/^sfs_create_inode(struct sfs_fs *sfs, struct sfs_disk_inode *din, uint32_t ino, struct inode **node_store) {$/;"	f	file:
sfs_dirent_findino_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_dirent_findino_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t ino, struct sfs_disk_entry *entry) {$/;"	f	file:
sfs_dirent_link_nolock_check	kern/fs/sfs/sfs_inode.c	414;"	d	file:
sfs_dirent_read_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_dirent_read_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot, struct sfs_disk_entry *entry) {$/;"	f	file:
sfs_dirent_search_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_dirent_search_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, const char *name, uint32_t *ino_store, int *slot, int *empty_slot) {$/;"	f	file:
sfs_dirent_unlink_nolock_check	kern/fs/sfs/sfs_inode.c	422;"	d	file:
sfs_fstat	kern/fs/sfs/sfs_inode.c	/^sfs_fstat(struct inode *node, struct stat *stat) {$/;"	f	file:
sfs_fsync	kern/fs/sfs/sfs_inode.c	/^sfs_fsync(struct inode *node) {$/;"	f	file:
sfs_get_ops	kern/fs/sfs/sfs_inode.c	/^sfs_get_ops(uint16_t type) {$/;"	f	file:
sfs_getdirentry	kern/fs/sfs/sfs_inode.c	/^sfs_getdirentry(struct inode *node, struct iobuf *iob) {$/;"	f	file:
sfs_getdirentry_sub_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_getdirentry_sub_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot, struct sfs_disk_entry *entry) {$/;"	f	file:
sfs_gettype	kern/fs/sfs/sfs_inode.c	/^sfs_gettype(struct inode *node, uint32_t *type_store) {$/;"	f	file:
sfs_hash_list	kern/fs/sfs/sfs_inode.c	/^sfs_hash_list(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
sfs_io	kern/fs/sfs/sfs_inode.c	/^sfs_io(struct inode *node, struct iobuf *iob, bool write) {$/;"	f	file:
sfs_io_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf, off_t offset, size_t *alenp, bool write) {$/;"	f	file:
sfs_load_inode	kern/fs/sfs/sfs_inode.c	/^sfs_load_inode(struct sfs_fs *sfs, struct inode **node_store, uint32_t ino) {$/;"	f
sfs_lookup	kern/fs/sfs/sfs_inode.c	/^sfs_lookup(struct inode *node, char *path, struct inode **node_store) {$/;"	f	file:
sfs_lookup_once	kern/fs/sfs/sfs_inode.c	/^sfs_lookup_once(struct sfs_fs *sfs, struct sfs_inode *sin, const char *name, struct inode **node_store, int *slot) {$/;"	f	file:
sfs_namefile	kern/fs/sfs/sfs_inode.c	/^sfs_namefile(struct inode *node, struct iobuf *iob) {$/;"	f	file:
sfs_node_dirops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_dirops = {$/;"	v	typeref:struct:inode_ops	file:
sfs_node_dirops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_dirops;  \/\/ dir operations$/;"	v	typeref:struct:inode_ops	file:
sfs_node_fileops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_fileops = {$/;"	v	typeref:struct:inode_ops	file:
sfs_node_fileops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_fileops; \/\/ file operations$/;"	v	typeref:struct:inode_ops	file:
sfs_opendir	kern/fs/sfs/sfs_inode.c	/^sfs_opendir(struct inode *node, uint32_t open_flags) {$/;"	f	file:
sfs_openfile	kern/fs/sfs/sfs_inode.c	/^sfs_openfile(struct inode *node, uint32_t open_flags) {$/;"	f	file:
sfs_read	kern/fs/sfs/sfs_inode.c	/^sfs_read(struct inode *node, struct iobuf *iob) {$/;"	f	file:
sfs_reclaim	kern/fs/sfs/sfs_inode.c	/^sfs_reclaim(struct inode *node) {$/;"	f	file:
sfs_remove_links	kern/fs/sfs/sfs_inode.c	/^sfs_remove_links(struct sfs_inode *sin) {$/;"	f	file:
sfs_set_links	kern/fs/sfs/sfs_inode.c	/^sfs_set_links(struct sfs_fs *sfs, struct sfs_inode *sin) {$/;"	f	file:
sfs_truncfile	kern/fs/sfs/sfs_inode.c	/^sfs_truncfile(struct inode *node, off_t len) {$/;"	f	file:
sfs_tryseek	kern/fs/sfs/sfs_inode.c	/^sfs_tryseek(struct inode *node, off_t pos) {$/;"	f	file:
sfs_write	kern/fs/sfs/sfs_inode.c	/^sfs_write(struct inode *node, struct iobuf *iob) {$/;"	f	file:
unlock_sin	kern/fs/sfs/sfs_inode.c	/^unlock_sin(struct sfs_inode *sin) {$/;"	f	file:
sfs_clear_block	kern/fs/sfs/sfs_io.c	/^sfs_clear_block(struct sfs_fs *sfs, uint32_t blkno, uint32_t nblks) {$/;"	f
sfs_rblock	kern/fs/sfs/sfs_io.c	/^sfs_rblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks) {$/;"	f
sfs_rbuf	kern/fs/sfs/sfs_io.c	/^sfs_rbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno, off_t offset) {$/;"	f
sfs_rwblock	kern/fs/sfs/sfs_io.c	/^sfs_rwblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks, bool write) {$/;"	f	file:
sfs_rwblock_nolock	kern/fs/sfs/sfs_io.c	/^sfs_rwblock_nolock(struct sfs_fs *sfs, void *buf, uint32_t blkno, bool write, bool check) {$/;"	f	file:
sfs_sync_freemap	kern/fs/sfs/sfs_io.c	/^sfs_sync_freemap(struct sfs_fs *sfs) {$/;"	f
sfs_sync_super	kern/fs/sfs/sfs_io.c	/^sfs_sync_super(struct sfs_fs *sfs) {$/;"	f
sfs_wblock	kern/fs/sfs/sfs_io.c	/^sfs_wblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks) {$/;"	f
sfs_wbuf	kern/fs/sfs/sfs_io.c	/^sfs_wbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno, off_t offset) {$/;"	f
lock_sfs_fs	kern/fs/sfs/sfs_lock.c	/^lock_sfs_fs(struct sfs_fs *sfs) {$/;"	f
lock_sfs_io	kern/fs/sfs/sfs_lock.c	/^lock_sfs_io(struct sfs_fs *sfs) {$/;"	f
unlock_sfs_fs	kern/fs/sfs/sfs_lock.c	/^unlock_sfs_fs(struct sfs_fs *sfs) {$/;"	f
unlock_sfs_io	kern/fs/sfs/sfs_lock.c	/^unlock_sfs_io(struct sfs_fs *sfs) {$/;"	f
swapfs_init	kern/fs/swap/swapfs.c	/^swapfs_init(void) {$/;"	f
swapfs_read	kern/fs/swap/swapfs.c	/^swapfs_read(swap_entry_t entry, struct Page *page) {$/;"	f
swapfs_write	kern/fs/swap/swapfs.c	/^swapfs_write(swap_entry_t entry, struct Page *page) {$/;"	f
__KERN_FS_SWAP_SWAPFS_H__	kern/fs/swap/swapfs.h	2;"	d
IOBUF_SIZE	kern/fs/sysfile.c	16;"	d	file:
copy_path	kern/fs/sysfile.c	/^copy_path(char **to, const char *from) {$/;"	f	file:
sysfile_chdir	kern/fs/sysfile.c	/^sysfile_chdir(const char *__path) {$/;"	f
sysfile_close	kern/fs/sysfile.c	/^sysfile_close(int fd) {$/;"	f
sysfile_dup	kern/fs/sysfile.c	/^sysfile_dup(int fd1, int fd2) {$/;"	f
sysfile_fstat	kern/fs/sysfile.c	/^sysfile_fstat(int fd, struct stat *__stat) {$/;"	f
sysfile_fsync	kern/fs/sysfile.c	/^sysfile_fsync(int fd) {$/;"	f
sysfile_getcwd	kern/fs/sysfile.c	/^sysfile_getcwd(char *buf, size_t len) {$/;"	f
sysfile_getdirentry	kern/fs/sysfile.c	/^sysfile_getdirentry(int fd, struct dirent *__direntp) {$/;"	f
sysfile_link	kern/fs/sysfile.c	/^sysfile_link(const char *__path1, const char *__path2) {$/;"	f
sysfile_mkfifo	kern/fs/sysfile.c	/^sysfile_mkfifo(const char *__name, uint32_t open_flags) {$/;"	f
sysfile_open	kern/fs/sysfile.c	/^sysfile_open(const char *__path, uint32_t open_flags) {$/;"	f
sysfile_pipe	kern/fs/sysfile.c	/^sysfile_pipe(int *fd_store) {$/;"	f
sysfile_read	kern/fs/sysfile.c	/^sysfile_read(int fd, void *base, size_t len) {$/;"	f
sysfile_rename	kern/fs/sysfile.c	/^sysfile_rename(const char *__path1, const char *__path2) {$/;"	f
sysfile_seek	kern/fs/sysfile.c	/^sysfile_seek(int fd, off_t pos, int whence) {$/;"	f
sysfile_unlink	kern/fs/sysfile.c	/^sysfile_unlink(const char *__path) {$/;"	f
sysfile_write	kern/fs/sysfile.c	/^sysfile_write(int fd, void *base, size_t len) {$/;"	f
__KERN_FS_SYSFILE_H__	kern/fs/sysfile.h	2;"	d
__alloc_inode	kern/fs/vfs/inode.c	/^__alloc_inode(int type) {$/;"	f
inode_check	kern/fs/vfs/inode.c	/^inode_check(struct inode *node, const char *opstr) {$/;"	f
inode_init	kern/fs/vfs/inode.c	/^inode_init(struct inode *node, const struct inode_ops *ops, struct fs *fs) {$/;"	f
inode_kill	kern/fs/vfs/inode.c	/^inode_kill(struct inode *node) {$/;"	f
inode_open_dec	kern/fs/vfs/inode.c	/^inode_open_dec(struct inode *node) {$/;"	f
inode_open_inc	kern/fs/vfs/inode.c	/^inode_open_inc(struct inode *node) {$/;"	f
inode_ref_dec	kern/fs/vfs/inode.c	/^inode_ref_dec(struct inode *node) {$/;"	f
inode_ref_inc	kern/fs/vfs/inode.c	/^inode_ref_inc(struct inode *node) {$/;"	f
MAX_INODE_COUNT	kern/fs/vfs/inode.h	64;"	d
VOP_MAGIC	kern/fs/vfs/inode.h	74;"	d
__KERN_FS_VFS_INODE_H__	kern/fs/vfs/inode.h	2;"	d
__device_info	kern/fs/vfs/inode.h	/^        struct device __device_info;$/;"	m	union:inode::__anon7	typeref:struct:inode::__anon7::device
__in_type	kern/fs/vfs/inode.h	44;"	d
__sfs_inode_info	kern/fs/vfs/inode.h	/^        struct sfs_inode __sfs_inode_info;$/;"	m	union:inode::__anon7	typeref:struct:inode::__anon7::sfs_inode
__vop_info	kern/fs/vfs/inode.h	48;"	d
__vop_op	kern/fs/vfs/inode.h	193;"	d
alloc_inode	kern/fs/vfs/inode.h	62;"	d
check_inode_type	kern/fs/vfs/inode.h	46;"	d
in_fs	kern/fs/vfs/inode.h	/^    struct fs *in_fs;$/;"	m	struct:inode	typeref:struct:inode::fs
in_info	kern/fs/vfs/inode.h	/^    } in_info;$/;"	m	struct:inode	typeref:union:inode::__anon7
in_ops	kern/fs/vfs/inode.h	/^    const struct inode_ops *in_ops;$/;"	m	struct:inode	typeref:struct:inode::inode_ops
in_type	kern/fs/vfs/inode.h	/^    } in_type;$/;"	m	struct:inode	typeref:enum:inode::__anon8
info2node	kern/fs/vfs/inode.h	57;"	d
inode	kern/fs/vfs/inode.h	/^struct inode {$/;"	s
inode_open_count	kern/fs/vfs/inode.h	/^inode_open_count(struct inode *node) {$/;"	f
inode_ops	kern/fs/vfs/inode.h	/^struct inode_ops {$/;"	s
inode_ref_count	kern/fs/vfs/inode.h	/^inode_ref_count(struct inode *node) {$/;"	f
inode_type_device_info	kern/fs/vfs/inode.h	/^        inode_type_device_info = 0x1234,$/;"	e	enum:inode::__anon8
inode_type_sfs_inode_info	kern/fs/vfs/inode.h	/^        inode_type_sfs_inode_info,$/;"	e	enum:inode::__anon8
open_count	kern/fs/vfs/inode.h	/^    int open_count;$/;"	m	struct:inode
ref_count	kern/fs/vfs/inode.h	/^    int ref_count;$/;"	m	struct:inode
vop_close	kern/fs/vfs/inode.h	/^    int (*vop_close)(struct inode *node);$/;"	m	struct:inode_ops
vop_close	kern/fs/vfs/inode.h	202;"	d
vop_create	kern/fs/vfs/inode.h	/^    int (*vop_create)(struct inode *node, const char *name, bool excl, struct inode **node_store);$/;"	m	struct:inode_ops
vop_create	kern/fs/vfs/inode.h	214;"	d
vop_fs	kern/fs/vfs/inode.h	218;"	d
vop_fstat	kern/fs/vfs/inode.h	/^    int (*vop_fstat)(struct inode *node, struct stat *stat);$/;"	m	struct:inode_ops
vop_fstat	kern/fs/vfs/inode.h	205;"	d
vop_fsync	kern/fs/vfs/inode.h	/^    int (*vop_fsync)(struct inode *node);$/;"	m	struct:inode_ops
vop_fsync	kern/fs/vfs/inode.h	206;"	d
vop_getdirentry	kern/fs/vfs/inode.h	/^    int (*vop_getdirentry)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_getdirentry	kern/fs/vfs/inode.h	208;"	d
vop_gettype	kern/fs/vfs/inode.h	/^    int (*vop_gettype)(struct inode *node, uint32_t *type_store);$/;"	m	struct:inode_ops
vop_gettype	kern/fs/vfs/inode.h	211;"	d
vop_info	kern/fs/vfs/inode.h	55;"	d
vop_init	kern/fs/vfs/inode.h	219;"	d
vop_ioctl	kern/fs/vfs/inode.h	/^    int (*vop_ioctl)(struct inode *node, int op, void *data);$/;"	m	struct:inode_ops
vop_ioctl	kern/fs/vfs/inode.h	210;"	d
vop_kill	kern/fs/vfs/inode.h	220;"	d
vop_lookup	kern/fs/vfs/inode.h	/^    int (*vop_lookup)(struct inode *node, char *path, struct inode **node_store);$/;"	m	struct:inode_ops
vop_lookup	kern/fs/vfs/inode.h	215;"	d
vop_magic	kern/fs/vfs/inode.h	/^    unsigned long vop_magic;$/;"	m	struct:inode_ops
vop_namefile	kern/fs/vfs/inode.h	/^    int (*vop_namefile)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_namefile	kern/fs/vfs/inode.h	207;"	d
vop_open	kern/fs/vfs/inode.h	/^    int (*vop_open)(struct inode *node, uint32_t open_flags);$/;"	m	struct:inode_ops
vop_open	kern/fs/vfs/inode.h	201;"	d
vop_open_dec	kern/fs/vfs/inode.h	234;"	d
vop_open_inc	kern/fs/vfs/inode.h	233;"	d
vop_read	kern/fs/vfs/inode.h	/^    int (*vop_read)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_read	kern/fs/vfs/inode.h	203;"	d
vop_reclaim	kern/fs/vfs/inode.h	/^    int (*vop_reclaim)(struct inode *node);$/;"	m	struct:inode_ops
vop_reclaim	kern/fs/vfs/inode.h	209;"	d
vop_ref_dec	kern/fs/vfs/inode.h	226;"	d
vop_ref_inc	kern/fs/vfs/inode.h	225;"	d
vop_truncate	kern/fs/vfs/inode.h	/^    int (*vop_truncate)(struct inode *node, off_t len);$/;"	m	struct:inode_ops
vop_truncate	kern/fs/vfs/inode.h	213;"	d
vop_tryseek	kern/fs/vfs/inode.h	/^    int (*vop_tryseek)(struct inode *node, off_t pos);$/;"	m	struct:inode_ops
vop_tryseek	kern/fs/vfs/inode.h	212;"	d
vop_write	kern/fs/vfs/inode.h	/^    int (*vop_write)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_write	kern/fs/vfs/inode.h	204;"	d
__alloc_fs	kern/fs/vfs/vfs.c	/^__alloc_fs(int type) {$/;"	f
bootfs_node	kern/fs/vfs/vfs.c	/^static struct inode *bootfs_node = NULL;$/;"	v	typeref:struct:inode	file:
bootfs_sem	kern/fs/vfs/vfs.c	/^static semaphore_t bootfs_sem;$/;"	v	file:
change_bootfs	kern/fs/vfs/vfs.c	/^change_bootfs(struct inode *node) {$/;"	f	file:
lock_bootfs	kern/fs/vfs/vfs.c	/^lock_bootfs(void) {$/;"	f	file:
unlock_bootfs	kern/fs/vfs/vfs.c	/^unlock_bootfs(void) {$/;"	f	file:
vfs_get_bootfs	kern/fs/vfs/vfs.c	/^vfs_get_bootfs(struct inode **node_store) {$/;"	f
vfs_init	kern/fs/vfs/vfs.c	/^vfs_init(void) {$/;"	f
vfs_set_bootfs	kern/fs/vfs/vfs.c	/^vfs_set_bootfs(char *fsname) {$/;"	f
__KERN_FS_VFS_VFS_H__	kern/fs/vfs/vfs.h	2;"	d
__fs_type	kern/fs/vfs/vfs.h	48;"	d
__fsop_info	kern/fs/vfs/vfs.h	52;"	d
__sfs_info	kern/fs/vfs/vfs.h	/^        struct sfs_fs __sfs_info;                   $/;"	m	union:fs::__anon5	typeref:struct:fs::__anon5::sfs_fs
alloc_fs	kern/fs/vfs/vfs.h	65;"	d
check_fs_type	kern/fs/vfs/vfs.h	50;"	d
fs	kern/fs/vfs/vfs.h	/^struct fs {$/;"	s
fs_cleanup	kern/fs/vfs/vfs.h	/^    void (*fs_cleanup)(struct fs *fs);             \/\/ Cleanup of filesystem.???$/;"	m	struct:fs
fs_get_root	kern/fs/vfs/vfs.h	/^    struct inode *(*fs_get_root)(struct fs *fs);   \/\/ Return root inode of filesystem.$/;"	m	struct:fs	typeref:struct:fs::fs_get_root
fs_info	kern/fs/vfs/vfs.h	/^    } fs_info;                                     \/\/ filesystem-specific data $/;"	m	struct:fs	typeref:union:fs::__anon5
fs_sync	kern/fs/vfs/vfs.h	/^    int (*fs_sync)(struct fs *fs);                 \/\/ Flush all dirty buffers to disk $/;"	m	struct:fs
fs_type	kern/fs/vfs/vfs.h	/^    } fs_type;                                     \/\/ filesystem type $/;"	m	struct:fs	typeref:enum:fs::__anon6
fs_type_sfs_info	kern/fs/vfs/vfs.h	/^        fs_type_sfs_info,$/;"	e	enum:fs::__anon6
fs_unmount	kern/fs/vfs/vfs.h	/^    int (*fs_unmount)(struct fs *fs);              \/\/ Attempt unmount of filesystem.$/;"	m	struct:fs
fsop_cleanup	kern/fs/vfs/vfs.h	71;"	d
fsop_get_root	kern/fs/vfs/vfs.h	69;"	d
fsop_info	kern/fs/vfs/vfs.h	58;"	d
fsop_sync	kern/fs/vfs/vfs.h	68;"	d
fsop_unmount	kern/fs/vfs/vfs.h	70;"	d
info2fs	kern/fs/vfs/vfs.h	60;"	d
check_devname_conflict	kern/fs/vfs/vfsdev.c	/^check_devname_conflict(const char *devname) {$/;"	f	file:
devname	kern/fs/vfs/vfsdev.c	/^    const char *devname;$/;"	m	struct:__anon4	file:
devnode	kern/fs/vfs/vfsdev.c	/^    struct inode *devnode;$/;"	m	struct:__anon4	typeref:struct:__anon4::inode	file:
find_mount	kern/fs/vfs/vfsdev.c	/^find_mount(const char *devname, vfs_dev_t **vdev_store) {$/;"	f	file:
fs	kern/fs/vfs/vfsdev.c	/^    struct fs *fs;$/;"	m	struct:__anon4	typeref:struct:__anon4::fs	file:
le2vdev	kern/fs/vfs/vfsdev.c	23;"	d	file:
lock_vdev_list	kern/fs/vfs/vfsdev.c	/^lock_vdev_list(void) {$/;"	f	file:
mountable	kern/fs/vfs/vfsdev.c	/^    bool mountable;$/;"	m	struct:__anon4	file:
unlock_vdev_list	kern/fs/vfs/vfsdev.c	/^unlock_vdev_list(void) {$/;"	f	file:
vdev_link	kern/fs/vfs/vfsdev.c	/^    list_entry_t vdev_link;$/;"	m	struct:__anon4	file:
vdev_list	kern/fs/vfs/vfsdev.c	/^static list_entry_t vdev_list;     \/\/ device info list in vfs layer$/;"	v	file:
vdev_list_sem	kern/fs/vfs/vfsdev.c	/^static semaphore_t vdev_list_sem;$/;"	v	file:
vfs_add_dev	kern/fs/vfs/vfsdev.c	/^vfs_add_dev(const char *devname, struct inode *devnode, bool mountable) {$/;"	f
vfs_add_fs	kern/fs/vfs/vfsdev.c	/^vfs_add_fs(const char *devname, struct fs *fs) {$/;"	f
vfs_cleanup	kern/fs/vfs/vfsdev.c	/^vfs_cleanup(void) {$/;"	f
vfs_dev_t	kern/fs/vfs/vfsdev.c	/^} vfs_dev_t;$/;"	t	typeref:struct:__anon4	file:
vfs_devlist_init	kern/fs/vfs/vfsdev.c	/^vfs_devlist_init(void) {$/;"	f
vfs_do_add	kern/fs/vfs/vfsdev.c	/^vfs_do_add(const char *devname, struct inode *devnode, struct fs *fs, bool mountable) {$/;"	f	file:
vfs_get_devname	kern/fs/vfs/vfsdev.c	/^vfs_get_devname(struct fs *fs) {$/;"	f
vfs_get_root	kern/fs/vfs/vfsdev.c	/^vfs_get_root(const char *devname, struct inode **node_store) {$/;"	f
vfs_mount	kern/fs/vfs/vfsdev.c	/^vfs_mount(const char *devname, int (*mountfunc)(struct device *dev, struct fs **fs_store)) {$/;"	f
vfs_unmount	kern/fs/vfs/vfsdev.c	/^vfs_unmount(const char *devname) {$/;"	f
vfs_unmount_all	kern/fs/vfs/vfsdev.c	/^vfs_unmount_all(void) {$/;"	f
vfs_close	kern/fs/vfs/vfsfile.c	/^vfs_close(struct inode *node) {$/;"	f
vfs_link	kern/fs/vfs/vfsfile.c	/^vfs_link(char *old_path, char *new_path) {$/;"	f
vfs_mkdir	kern/fs/vfs/vfsfile.c	/^vfs_mkdir(char *path){$/;"	f
vfs_open	kern/fs/vfs/vfsfile.c	/^vfs_open(char *path, uint32_t open_flags, struct inode **node_store) {$/;"	f
vfs_readlink	kern/fs/vfs/vfsfile.c	/^vfs_readlink(char *path, struct iobuf *iob) {$/;"	f
vfs_rename	kern/fs/vfs/vfsfile.c	/^vfs_rename(char *old_path, char *new_path) {$/;"	f
vfs_symlink	kern/fs/vfs/vfsfile.c	/^vfs_symlink(char *old_path, char *new_path) {$/;"	f
vfs_unlink	kern/fs/vfs/vfsfile.c	/^vfs_unlink(char *path) {$/;"	f
get_device	kern/fs/vfs/vfslookup.c	/^get_device(char *path, char **subpath, struct inode **node_store) {$/;"	f	file:
vfs_lookup	kern/fs/vfs/vfslookup.c	/^vfs_lookup(char *path, struct inode **node_store) {$/;"	f
vfs_lookup_parent	kern/fs/vfs/vfslookup.c	/^vfs_lookup_parent(char *path, struct inode **node_store, char **endp){$/;"	f
get_cwd_nolock	kern/fs/vfs/vfspath.c	/^get_cwd_nolock(void) {$/;"	f	file:
lock_cfs	kern/fs/vfs/vfspath.c	/^lock_cfs(void) {$/;"	f	file:
set_cwd_nolock	kern/fs/vfs/vfspath.c	/^set_cwd_nolock(struct inode *pwd) {$/;"	f	file:
unlock_cfs	kern/fs/vfs/vfspath.c	/^unlock_cfs(void) {$/;"	f	file:
vfs_chdir	kern/fs/vfs/vfspath.c	/^vfs_chdir(char *path) {$/;"	f
vfs_get_curdir	kern/fs/vfs/vfspath.c	/^vfs_get_curdir(struct inode **dir_store) {$/;"	f
vfs_getcwd	kern/fs/vfs/vfspath.c	/^vfs_getcwd(struct iobuf *iob) {$/;"	f
vfs_set_curdir	kern/fs/vfs/vfspath.c	/^vfs_set_curdir(struct inode *dir) {$/;"	f
REALLOC	kern/init/entry.S	/^#define REALLOC(x) (x - KERNBASE)$/;"	d
__gdt	kern/init/entry.S	/^__gdt:$/;"	l
__gdtdesc	kern/init/entry.S	/^__gdtdesc:$/;"	l
bootstack	kern/init/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/init/entry.S	/^bootstacktop:$/;"	l
kern_entry	kern/init/entry.S	/^kern_entry:$/;"	l
relocated	kern/init/entry.S	/^relocated:$/;"	l
spin	kern/init/entry.S	/^spin:$/;"	l
grade_backtrace	kern/init/init.c	/^grade_backtrace(void) {$/;"	f
grade_backtrace0	kern/init/init.c	/^grade_backtrace0(int arg0, int arg1, int arg2) {$/;"	f
grade_backtrace1	kern/init/init.c	/^grade_backtrace1(int arg0, int arg1) {$/;"	f
grade_backtrace2	kern/init/init.c	/^grade_backtrace2(int arg0, int arg1, int arg2, int arg3) {$/;"	f
kern_init	kern/init/init.c	/^kern_init(void) {$/;"	f
lab1_print_cur_status	kern/init/init.c	/^lab1_print_cur_status(void) {$/;"	f	file:
lab1_switch_test	kern/init/init.c	/^lab1_switch_test(void) {$/;"	f	file:
lab1_switch_to_kernel	kern/init/init.c	/^lab1_switch_to_kernel(void) {$/;"	f	file:
lab1_switch_to_user	kern/init/init.c	/^lab1_switch_to_user(void) {$/;"	f	file:
BUFSIZE	kern/libs/readline.c	3;"	d	file:
buf	kern/libs/readline.c	/^static char buf[BUFSIZE];$/;"	v	file:
readline	kern/libs/readline.c	/^readline(const char *prompt) {$/;"	f
cprintf	kern/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cputch	kern/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputchar	kern/libs/stdio.c	/^cputchar(int c) {$/;"	f
cputs	kern/libs/stdio.c	/^cputs(const char *str) {$/;"	f
getchar	kern/libs/stdio.c	/^getchar(void) {$/;"	f
vcprintf	kern/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
stradd	kern/libs/string.c	/^stradd(const char *src1, const char *src2) {$/;"	f
strdup	kern/libs/string.c	/^strdup(const char *src) {$/;"	f
basic_check	kern/mm/default_pmm.c	/^basic_check(void) {$/;"	f	file:
default_alloc_pages	kern/mm/default_pmm.c	/^default_alloc_pages(size_t n) {$/;"	f	file:
default_check	kern/mm/default_pmm.c	/^default_check(void) {$/;"	f	file:
default_free_pages	kern/mm/default_pmm.c	/^default_free_pages(struct Page *base, size_t n) {$/;"	f	file:
default_init	kern/mm/default_pmm.c	/^default_init(void) {$/;"	f	file:
default_init_memmap	kern/mm/default_pmm.c	/^default_init_memmap(struct Page *base, size_t n) {$/;"	f	file:
default_nr_free_pages	kern/mm/default_pmm.c	/^default_nr_free_pages(void) {$/;"	f	file:
default_pmm_manager	kern/mm/default_pmm.c	/^const struct pmm_manager default_pmm_manager = {$/;"	v	typeref:struct:pmm_manager
free_area	kern/mm/default_pmm.c	/^free_area_t free_area;$/;"	v
free_list	kern/mm/default_pmm.c	59;"	d	file:
nr_free	kern/mm/default_pmm.c	60;"	d	file:
print_free_link	kern/mm/default_pmm.c	/^void print_free_link(){$/;"	f
__KERN_MM_DEFAULT_PMM_H__	kern/mm/default_pmm.h	2;"	d
ALIGN	kern/mm/kmalloc.c	55;"	d	file:
L1_CACHE_BYTES	kern/mm/kmalloc.c	51;"	d	file:
PAGE_SIZE	kern/mm/kmalloc.c	47;"	d	file:
SLOB_ALIGN	kern/mm/kmalloc.c	67;"	d	file:
SLOB_UNIT	kern/mm/kmalloc.c	65;"	d	file:
SLOB_UNITS	kern/mm/kmalloc.c	66;"	d	file:
__kmalloc	kern/mm/kmalloc.c	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	f	file:
__slob_free_pages	kern/mm/kmalloc.c	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	f	file:
__slob_get_free_page	kern/mm/kmalloc.c	89;"	d	file:
__slob_get_free_pages	kern/mm/kmalloc.c	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	f	file:
arena	kern/mm/kmalloc.c	/^static slob_t arena = { .next = &arena, .units = 1 };$/;"	v	file:
bigblock	kern/mm/kmalloc.c	/^struct bigblock {$/;"	s	file:
bigblock_t	kern/mm/kmalloc.c	/^typedef struct bigblock bigblock_t;$/;"	t	typeref:struct:bigblock	file:
bigblocks	kern/mm/kmalloc.c	/^static bigblock_t *bigblocks;$/;"	v	file:
find_order	kern/mm/kmalloc.c	/^static int find_order(int size)$/;"	f	file:
gfp_t	kern/mm/kmalloc.c	/^typedef unsigned int gfp_t;$/;"	t	file:
kallocated	kern/mm/kmalloc.c	/^kallocated(void) {$/;"	f
kfree	kern/mm/kmalloc.c	/^void kfree(void *block)$/;"	f
kmalloc	kern/mm/kmalloc.c	/^kmalloc(size_t size)$/;"	f
kmalloc_init	kern/mm/kmalloc.c	/^kmalloc_init(void) {$/;"	f
ksize	kern/mm/kmalloc.c	/^unsigned int ksize(const void *block)$/;"	f
next	kern/mm/kmalloc.c	/^	struct bigblock *next;$/;"	m	struct:bigblock	typeref:struct:bigblock::bigblock	file:
next	kern/mm/kmalloc.c	/^	struct slob_block *next;$/;"	m	struct:slob_block	typeref:struct:slob_block::slob_block	file:
order	kern/mm/kmalloc.c	/^	int order;$/;"	m	struct:bigblock	file:
pages	kern/mm/kmalloc.c	/^	void *pages;$/;"	m	struct:bigblock	file:
slob_alloc	kern/mm/kmalloc.c	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	f	file:
slob_allocated	kern/mm/kmalloc.c	/^slob_allocated(void) {$/;"	f
slob_block	kern/mm/kmalloc.c	/^struct slob_block {$/;"	s	file:
slob_free	kern/mm/kmalloc.c	/^static void slob_free(void *block, int size)$/;"	f	file:
slob_init	kern/mm/kmalloc.c	/^slob_init(void) {$/;"	f
slob_t	kern/mm/kmalloc.c	/^typedef struct slob_block slob_t;$/;"	t	typeref:struct:slob_block	file:
slobfree	kern/mm/kmalloc.c	/^static slob_t *slobfree = &arena;$/;"	v	file:
spin_lock_irqsave	kern/mm/kmalloc.c	43;"	d	file:
spin_unlock_irqrestore	kern/mm/kmalloc.c	44;"	d	file:
units	kern/mm/kmalloc.c	/^	int units;$/;"	m	struct:slob_block	file:
KMALLOC_MAX_ORDER	kern/mm/kmalloc.h	6;"	d
__KERN_MM_KMALLOC_H__	kern/mm/kmalloc.h	2;"	d
ClearPageProperty	kern/mm/memlayout.h	146;"	d
ClearPageReserved	kern/mm/memlayout.h	143;"	d
DPL_KERNEL	kern/mm/memlayout.h	20;"	d
DPL_USER	kern/mm/memlayout.h	21;"	d
E820MAX	kern/mm/memlayout.h	111;"	d
E820_ARM	kern/mm/memlayout.h	112;"	d
E820_ARR	kern/mm/memlayout.h	113;"	d
GD_KDATA	kern/mm/memlayout.h	15;"	d
GD_KTEXT	kern/mm/memlayout.h	14;"	d
GD_TSS	kern/mm/memlayout.h	18;"	d
GD_UDATA	kern/mm/memlayout.h	17;"	d
GD_UTEXT	kern/mm/memlayout.h	16;"	d
KERNBASE	kern/mm/memlayout.h	70;"	d
KERNEL_CS	kern/mm/memlayout.h	23;"	d
KERNEL_DS	kern/mm/memlayout.h	24;"	d
KERNTOP	kern/mm/memlayout.h	72;"	d
KERN_ACCESS	kern/mm/memlayout.h	97;"	d
KMEMSIZE	kern/mm/memlayout.h	71;"	d
KSTACKPAGE	kern/mm/memlayout.h	82;"	d
KSTACKSIZE	kern/mm/memlayout.h	83;"	d
PG_property	kern/mm/memlayout.h	140;"	d
PG_reserved	kern/mm/memlayout.h	139;"	d
Page	kern/mm/memlayout.h	/^struct Page {$/;"	s
PageProperty	kern/mm/memlayout.h	147;"	d
PageReserved	kern/mm/memlayout.h	144;"	d
SEG_KDATA	kern/mm/memlayout.h	8;"	d
SEG_KTEXT	kern/mm/memlayout.h	7;"	d
SEG_TSS	kern/mm/memlayout.h	11;"	d
SEG_UDATA	kern/mm/memlayout.h	10;"	d
SEG_UTEXT	kern/mm/memlayout.h	9;"	d
SetPageProperty	kern/mm/memlayout.h	145;"	d
SetPageReserved	kern/mm/memlayout.h	142;"	d
USERBASE	kern/mm/memlayout.h	90;"	d
USERTOP	kern/mm/memlayout.h	85;"	d
USER_ACCESS	kern/mm/memlayout.h	94;"	d
USER_CS	kern/mm/memlayout.h	25;"	d
USER_DS	kern/mm/memlayout.h	26;"	d
USTAB	kern/mm/memlayout.h	92;"	d
USTACKPAGE	kern/mm/memlayout.h	87;"	d
USTACKSIZE	kern/mm/memlayout.h	88;"	d
USTACKTOP	kern/mm/memlayout.h	86;"	d
UTEXT	kern/mm/memlayout.h	91;"	d
VPT	kern/mm/memlayout.h	80;"	d
__KERN_MM_MEMLAYOUT_H__	kern/mm/memlayout.h	2;"	d
addr	kern/mm/memlayout.h	/^        uint64_t addr;$/;"	m	struct:e820map::__anon11
e820map	kern/mm/memlayout.h	/^struct e820map {$/;"	s
flags	kern/mm/memlayout.h	/^    uint32_t flags;                 \/\/ array of flags that describe the status of the page frame$/;"	m	struct:Page
free_area_t	kern/mm/memlayout.h	/^} free_area_t;$/;"	t	typeref:struct:__anon12
free_list	kern/mm/memlayout.h	/^    list_entry_t free_list;         \/\/ the list header$/;"	m	struct:__anon12
le2page	kern/mm/memlayout.h	150;"	d
map	kern/mm/memlayout.h	/^    } __attribute__((packed)) map[E820MAX];$/;"	m	struct:e820map	typeref:struct:e820map::__anon11
nr_free	kern/mm/memlayout.h	/^    unsigned int nr_free;           \/\/ # of free pages in this free list$/;"	m	struct:__anon12
nr_map	kern/mm/memlayout.h	/^    int nr_map;$/;"	m	struct:e820map
page_link	kern/mm/memlayout.h	/^    list_entry_t page_link;         \/\/ free list link$/;"	m	struct:Page
pde_t	kern/mm/memlayout.h	/^typedef uintptr_t pde_t;$/;"	t
pra_page_link	kern/mm/memlayout.h	/^    list_entry_t pra_page_link;     \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
pra_vaddr	kern/mm/memlayout.h	/^    uintptr_t pra_vaddr;            \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
property	kern/mm/memlayout.h	/^    unsigned int property;          \/\/ the num of free block, used in first fit pm manager$/;"	m	struct:Page
pte_t	kern/mm/memlayout.h	/^typedef uintptr_t pte_t;$/;"	t
ref	kern/mm/memlayout.h	/^    int ref;                        \/\/ page frame's reference counter$/;"	m	struct:Page
size	kern/mm/memlayout.h	/^        uint64_t size;$/;"	m	struct:e820map::__anon11
swap_entry_t	kern/mm/memlayout.h	/^typedef pte_t swap_entry_t; \/\/the pte can also be a swap entry$/;"	t
type	kern/mm/memlayout.h	/^        uint32_t type;$/;"	m	struct:e820map::__anon11
CR0_AM	kern/mm/mmu.h	258;"	d
CR0_CD	kern/mm/mmu.h	260;"	d
CR0_EM	kern/mm/mmu.h	253;"	d
CR0_ET	kern/mm/mmu.h	255;"	d
CR0_MP	kern/mm/mmu.h	252;"	d
CR0_NE	kern/mm/mmu.h	256;"	d
CR0_NW	kern/mm/mmu.h	259;"	d
CR0_PE	kern/mm/mmu.h	251;"	d
CR0_PG	kern/mm/mmu.h	261;"	d
CR0_TS	kern/mm/mmu.h	254;"	d
CR0_WP	kern/mm/mmu.h	257;"	d
CR4_DE	kern/mm/mmu.h	266;"	d
CR4_MCE	kern/mm/mmu.h	264;"	d
CR4_PCE	kern/mm/mmu.h	263;"	d
CR4_PSE	kern/mm/mmu.h	265;"	d
CR4_PVI	kern/mm/mmu.h	268;"	d
CR4_TSD	kern/mm/mmu.h	267;"	d
CR4_VME	kern/mm/mmu.h	269;"	d
FL_AC	kern/mm/mmu.h	22;"	d
FL_AF	kern/mm/mmu.h	7;"	d
FL_CF	kern/mm/mmu.h	5;"	d
FL_DF	kern/mm/mmu.h	12;"	d
FL_ID	kern/mm/mmu.h	25;"	d
FL_IF	kern/mm/mmu.h	11;"	d
FL_IOPL_0	kern/mm/mmu.h	15;"	d
FL_IOPL_1	kern/mm/mmu.h	16;"	d
FL_IOPL_2	kern/mm/mmu.h	17;"	d
FL_IOPL_3	kern/mm/mmu.h	18;"	d
FL_IOPL_MASK	kern/mm/mmu.h	14;"	d
FL_NT	kern/mm/mmu.h	19;"	d
FL_OF	kern/mm/mmu.h	13;"	d
FL_PF	kern/mm/mmu.h	6;"	d
FL_RF	kern/mm/mmu.h	20;"	d
FL_SF	kern/mm/mmu.h	9;"	d
FL_TF	kern/mm/mmu.h	10;"	d
FL_VIF	kern/mm/mmu.h	23;"	d
FL_VIP	kern/mm/mmu.h	24;"	d
FL_VM	kern/mm/mmu.h	21;"	d
FL_ZF	kern/mm/mmu.h	8;"	d
NPDEENTRY	kern/mm/mmu.h	223;"	d
NPTEENTRY	kern/mm/mmu.h	224;"	d
PDE_ADDR	kern/mm/mmu.h	220;"	d
PDX	kern/mm/mmu.h	204;"	d
PDXSHIFT	kern/mm/mmu.h	232;"	d
PGADDR	kern/mm/mmu.h	216;"	d
PGOFF	kern/mm/mmu.h	213;"	d
PGSHIFT	kern/mm/mmu.h	227;"	d
PGSIZE	kern/mm/mmu.h	226;"	d
PPN	kern/mm/mmu.h	210;"	d
PTE_A	kern/mm/mmu.h	240;"	d
PTE_ADDR	kern/mm/mmu.h	219;"	d
PTE_AVAIL	kern/mm/mmu.h	244;"	d
PTE_D	kern/mm/mmu.h	241;"	d
PTE_MBZ	kern/mm/mmu.h	243;"	d
PTE_P	kern/mm/mmu.h	235;"	d
PTE_PCD	kern/mm/mmu.h	239;"	d
PTE_PS	kern/mm/mmu.h	242;"	d
PTE_PWT	kern/mm/mmu.h	238;"	d
PTE_U	kern/mm/mmu.h	237;"	d
PTE_USER	kern/mm/mmu.h	248;"	d
PTE_W	kern/mm/mmu.h	236;"	d
PTSHIFT	kern/mm/mmu.h	229;"	d
PTSIZE	kern/mm/mmu.h	228;"	d
PTX	kern/mm/mmu.h	207;"	d
PTXSHIFT	kern/mm/mmu.h	231;"	d
SEG	kern/mm/mmu.h	131;"	d
SEGTSS	kern/mm/mmu.h	139;"	d
SEG_ASM	kern/mm/mmu.h	55;"	d
SEG_NULL	kern/mm/mmu.h	128;"	d
SEG_NULL	kern/mm/mmu.h	51;"	d
SETCALLGATE	kern/mm/mmu.h	99;"	d
SETGATE	kern/mm/mmu.h	86;"	d
STA_A	kern/mm/mmu.h	33;"	d
STA_C	kern/mm/mmu.h	30;"	d
STA_E	kern/mm/mmu.h	29;"	d
STA_R	kern/mm/mmu.h	32;"	d
STA_W	kern/mm/mmu.h	31;"	d
STA_X	kern/mm/mmu.h	28;"	d
STS_CG16	kern/mm/mmu.h	39;"	d
STS_CG32	kern/mm/mmu.h	45;"	d
STS_IG16	kern/mm/mmu.h	41;"	d
STS_IG32	kern/mm/mmu.h	46;"	d
STS_LDT	kern/mm/mmu.h	37;"	d
STS_T16A	kern/mm/mmu.h	36;"	d
STS_T16B	kern/mm/mmu.h	38;"	d
STS_T32A	kern/mm/mmu.h	43;"	d
STS_T32B	kern/mm/mmu.h	44;"	d
STS_TG	kern/mm/mmu.h	40;"	d
STS_TG16	kern/mm/mmu.h	42;"	d
STS_TG32	kern/mm/mmu.h	47;"	d
__KERN_MM_MMU_H__	kern/mm/mmu.h	2;"	d
gatedesc	kern/mm/mmu.h	/^struct gatedesc {$/;"	s
gd_args	kern/mm/mmu.h	/^    unsigned gd_args : 5;           \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:gatedesc
gd_dpl	kern/mm/mmu.h	/^    unsigned gd_dpl : 2;            \/\/ descriptor(meaning new) privilege level$/;"	m	struct:gatedesc
gd_off_15_0	kern/mm/mmu.h	/^    unsigned gd_off_15_0 : 16;      \/\/ low 16 bits of offset in segment$/;"	m	struct:gatedesc
gd_off_31_16	kern/mm/mmu.h	/^    unsigned gd_off_31_16 : 16;     \/\/ high bits of offset in segment$/;"	m	struct:gatedesc
gd_p	kern/mm/mmu.h	/^    unsigned gd_p : 1;              \/\/ Present$/;"	m	struct:gatedesc
gd_rsv1	kern/mm/mmu.h	/^    unsigned gd_rsv1 : 3;           \/\/ reserved(should be zero I guess)$/;"	m	struct:gatedesc
gd_s	kern/mm/mmu.h	/^    unsigned gd_s : 1;              \/\/ must be 0 (system)$/;"	m	struct:gatedesc
gd_ss	kern/mm/mmu.h	/^    unsigned gd_ss : 16;            \/\/ segment selector$/;"	m	struct:gatedesc
gd_type	kern/mm/mmu.h	/^    unsigned gd_type : 4;           \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:gatedesc
sd_avl	kern/mm/mmu.h	/^    unsigned sd_avl : 1;            \/\/ unused (available for software use)$/;"	m	struct:segdesc
sd_base_15_0	kern/mm/mmu.h	/^    unsigned sd_base_15_0 : 16;     \/\/ low bits of segment base address$/;"	m	struct:segdesc
sd_base_23_16	kern/mm/mmu.h	/^    unsigned sd_base_23_16 : 8;     \/\/ middle bits of segment base address$/;"	m	struct:segdesc
sd_base_31_24	kern/mm/mmu.h	/^    unsigned sd_base_31_24 : 8;     \/\/ high bits of segment base address$/;"	m	struct:segdesc
sd_db	kern/mm/mmu.h	/^    unsigned sd_db : 1;             \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:segdesc
sd_dpl	kern/mm/mmu.h	/^    unsigned sd_dpl : 2;            \/\/ descriptor Privilege Level$/;"	m	struct:segdesc
sd_g	kern/mm/mmu.h	/^    unsigned sd_g : 1;              \/\/ granularity: limit scaled by 4K when set$/;"	m	struct:segdesc
sd_lim_15_0	kern/mm/mmu.h	/^    unsigned sd_lim_15_0 : 16;      \/\/ low bits of segment limit$/;"	m	struct:segdesc
sd_lim_19_16	kern/mm/mmu.h	/^    unsigned sd_lim_19_16 : 4;      \/\/ high bits of segment limit$/;"	m	struct:segdesc
sd_p	kern/mm/mmu.h	/^    unsigned sd_p : 1;              \/\/ present$/;"	m	struct:segdesc
sd_rsv1	kern/mm/mmu.h	/^    unsigned sd_rsv1 : 1;           \/\/ reserved$/;"	m	struct:segdesc
sd_s	kern/mm/mmu.h	/^    unsigned sd_s : 1;              \/\/ 0 = system, 1 = application$/;"	m	struct:segdesc
sd_type	kern/mm/mmu.h	/^    unsigned sd_type : 4;           \/\/ segment type (see STS_ constants)$/;"	m	struct:segdesc
segdesc	kern/mm/mmu.h	/^struct segdesc {$/;"	s
taskstate	kern/mm/mmu.h	/^struct taskstate {$/;"	s
ts_cr3	kern/mm/mmu.h	/^    uintptr_t ts_cr3;       \/\/ page directory base$/;"	m	struct:taskstate
ts_cs	kern/mm/mmu.h	/^    uint16_t ts_cs;$/;"	m	struct:taskstate
ts_ds	kern/mm/mmu.h	/^    uint16_t ts_ds;$/;"	m	struct:taskstate
ts_eax	kern/mm/mmu.h	/^    uint32_t ts_eax;        \/\/ more saved state (registers)$/;"	m	struct:taskstate
ts_ebp	kern/mm/mmu.h	/^    uintptr_t ts_ebp;$/;"	m	struct:taskstate
ts_ebx	kern/mm/mmu.h	/^    uint32_t ts_ebx;$/;"	m	struct:taskstate
ts_ecx	kern/mm/mmu.h	/^    uint32_t ts_ecx;$/;"	m	struct:taskstate
ts_edi	kern/mm/mmu.h	/^    uint32_t ts_edi;$/;"	m	struct:taskstate
ts_edx	kern/mm/mmu.h	/^    uint32_t ts_edx;$/;"	m	struct:taskstate
ts_eflags	kern/mm/mmu.h	/^    uint32_t ts_eflags;$/;"	m	struct:taskstate
ts_eip	kern/mm/mmu.h	/^    uintptr_t ts_eip;       \/\/ saved state from last task switch$/;"	m	struct:taskstate
ts_es	kern/mm/mmu.h	/^    uint16_t ts_es;         \/\/ even more saved state (segment selectors)$/;"	m	struct:taskstate
ts_esi	kern/mm/mmu.h	/^    uint32_t ts_esi;$/;"	m	struct:taskstate
ts_esp	kern/mm/mmu.h	/^    uintptr_t ts_esp;$/;"	m	struct:taskstate
ts_esp0	kern/mm/mmu.h	/^    uintptr_t ts_esp0;      \/\/ stack pointers and segment selectors$/;"	m	struct:taskstate
ts_esp1	kern/mm/mmu.h	/^    uintptr_t ts_esp1;$/;"	m	struct:taskstate
ts_esp2	kern/mm/mmu.h	/^    uintptr_t ts_esp2;$/;"	m	struct:taskstate
ts_fs	kern/mm/mmu.h	/^    uint16_t ts_fs;$/;"	m	struct:taskstate
ts_gs	kern/mm/mmu.h	/^    uint16_t ts_gs;$/;"	m	struct:taskstate
ts_iomb	kern/mm/mmu.h	/^    uint16_t ts_iomb;       \/\/ i\/o map base address$/;"	m	struct:taskstate
ts_ldt	kern/mm/mmu.h	/^    uint16_t ts_ldt;$/;"	m	struct:taskstate
ts_link	kern/mm/mmu.h	/^    uint32_t ts_link;       \/\/ old ts selector$/;"	m	struct:taskstate
ts_padding1	kern/mm/mmu.h	/^    uint16_t ts_padding1;$/;"	m	struct:taskstate
ts_padding10	kern/mm/mmu.h	/^    uint16_t ts_padding10;$/;"	m	struct:taskstate
ts_padding2	kern/mm/mmu.h	/^    uint16_t ts_padding2;$/;"	m	struct:taskstate
ts_padding3	kern/mm/mmu.h	/^    uint16_t ts_padding3;$/;"	m	struct:taskstate
ts_padding4	kern/mm/mmu.h	/^    uint16_t ts_padding4;$/;"	m	struct:taskstate
ts_padding5	kern/mm/mmu.h	/^    uint16_t ts_padding5;$/;"	m	struct:taskstate
ts_padding6	kern/mm/mmu.h	/^    uint16_t ts_padding6;$/;"	m	struct:taskstate
ts_padding7	kern/mm/mmu.h	/^    uint16_t ts_padding7;$/;"	m	struct:taskstate
ts_padding8	kern/mm/mmu.h	/^    uint16_t ts_padding8;$/;"	m	struct:taskstate
ts_padding9	kern/mm/mmu.h	/^    uint16_t ts_padding9;$/;"	m	struct:taskstate
ts_ss	kern/mm/mmu.h	/^    uint16_t ts_ss;$/;"	m	struct:taskstate
ts_ss0	kern/mm/mmu.h	/^    uint16_t ts_ss0;        \/\/ after an increase in privilege level$/;"	m	struct:taskstate
ts_ss1	kern/mm/mmu.h	/^    uint16_t ts_ss1;$/;"	m	struct:taskstate
ts_ss2	kern/mm/mmu.h	/^    uint16_t ts_ss2;$/;"	m	struct:taskstate
ts_t	kern/mm/mmu.h	/^    uint16_t ts_t;          \/\/ trap on task switch$/;"	m	struct:taskstate
alloc_pages	kern/mm/pmm.c	/^alloc_pages(size_t n) {$/;"	f
boot_alloc_page	kern/mm/pmm.c	/^boot_alloc_page(void) {$/;"	f	file:
boot_cr3	kern/mm/pmm.c	/^uintptr_t boot_cr3;$/;"	v
boot_map_segment	kern/mm/pmm.c	/^boot_map_segment(pde_t *pgdir, uintptr_t la, size_t size, uintptr_t pa, uint32_t perm) {$/;"	f	file:
boot_pgdir	kern/mm/pmm.c	/^pde_t *boot_pgdir = NULL;$/;"	v
check_alloc_page	kern/mm/pmm.c	/^check_alloc_page(void) {$/;"	f	file:
check_boot_pgdir	kern/mm/pmm.c	/^check_boot_pgdir(void) {$/;"	f	file:
check_pgdir	kern/mm/pmm.c	/^check_pgdir(void) {$/;"	f	file:
copy_range	kern/mm/pmm.c	/^copy_range(pde_t *to, pde_t *from, uintptr_t start, uintptr_t end, bool share) {$/;"	f
enable_paging	kern/mm/pmm.c	/^enable_paging(void) {$/;"	f	file:
exit_range	kern/mm/pmm.c	/^exit_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
free_pages	kern/mm/pmm.c	/^free_pages(struct Page *base, size_t n) {$/;"	f
gdt	kern/mm/pmm.c	/^static struct segdesc gdt[] = {$/;"	v	typeref:struct:segdesc	file:
gdt_init	kern/mm/pmm.c	/^gdt_init(void) {$/;"	f	file:
gdt_pd	kern/mm/pmm.c	/^static struct pseudodesc gdt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
get_page	kern/mm/pmm.c	/^get_page(pde_t *pgdir, uintptr_t la, pte_t **ptep_store) {$/;"	f
get_pgtable_items	kern/mm/pmm.c	/^get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t *table, size_t *left_store, size_t *right_store) {$/;"	f	file:
get_pte	kern/mm/pmm.c	/^get_pte(pde_t *pgdir, uintptr_t la, bool create) {$/;"	f
init_memmap	kern/mm/pmm.c	/^init_memmap(struct Page *base, size_t n) {$/;"	f	file:
init_pmm_manager	kern/mm/pmm.c	/^init_pmm_manager(void) {$/;"	f	file:
lgdt	kern/mm/pmm.c	/^lgdt(struct pseudodesc *pd) {$/;"	f	file:
load_esp0	kern/mm/pmm.c	/^load_esp0(uintptr_t esp0) {$/;"	f
npage	kern/mm/pmm.c	/^size_t npage = 0;$/;"	v
nr_free_pages	kern/mm/pmm.c	/^nr_free_pages(void) {$/;"	f
page_init	kern/mm/pmm.c	/^page_init(void) {$/;"	f	file:
page_insert	kern/mm/pmm.c	/^page_insert(pde_t *pgdir, struct Page *page, uintptr_t la, uint32_t perm) {$/;"	f
page_remove	kern/mm/pmm.c	/^page_remove(pde_t *pgdir, uintptr_t la) {$/;"	f
page_remove_pte	kern/mm/pmm.c	/^page_remove_pte(pde_t *pgdir, uintptr_t la, pte_t *ptep) {$/;"	f	file:
pages	kern/mm/pmm.c	/^struct Page *pages;$/;"	v	typeref:struct:Page
perm2str	kern/mm/pmm.c	/^perm2str(int perm) {$/;"	f	file:
pgdir_alloc_page	kern/mm/pmm.c	/^pgdir_alloc_page(pde_t *pgdir, uintptr_t la, uint32_t perm) {$/;"	f
pmm_init	kern/mm/pmm.c	/^pmm_init(void) {$/;"	f
pmm_manager	kern/mm/pmm.c	/^const struct pmm_manager *pmm_manager;$/;"	v	typeref:struct:pmm_manager
print_pgdir	kern/mm/pmm.c	/^print_pgdir(void) {$/;"	f
tlb_invalidate	kern/mm/pmm.c	/^tlb_invalidate(pde_t *pgdir, uintptr_t la) {$/;"	f
ts	kern/mm/pmm.c	/^static struct taskstate ts = {0};$/;"	v	typeref:struct:taskstate	file:
unmap_range	kern/mm/pmm.c	/^unmap_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
vpd	kern/mm/pmm.c	/^pde_t * const vpd = (pde_t *)PGADDR(PDX(VPT), PDX(VPT), 0);$/;"	v
vpt	kern/mm/pmm.c	/^pte_t * const vpt = (pte_t *)VPT;$/;"	v
KADDR	kern/mm/pmm.h	69;"	d
PADDR	kern/mm/pmm.h	57;"	d
__KERN_MM_PMM_H__	kern/mm/pmm.h	2;"	d
alloc_page	kern/mm/pmm.h	35;"	d
alloc_pages	kern/mm/pmm.h	/^    struct Page *(*alloc_pages)(size_t n);            \/\/ allocate >=n pages, depend on the allocation algorithm $/;"	m	struct:pmm_manager	typeref:struct:pmm_manager::alloc_pages
check	kern/mm/pmm.h	/^    void (*check)(void);                              \/\/ check the correctness of XXX_pmm_manager $/;"	m	struct:pmm_manager
free_page	kern/mm/pmm.h	36;"	d
free_pages	kern/mm/pmm.h	/^    void (*free_pages)(struct Page *base, size_t n);  \/\/ free >=n pages with "base" addr of Page descriptor structures(memlayout.h)$/;"	m	struct:pmm_manager
init	kern/mm/pmm.h	/^    void (*init)(void);                               \/\/ initialize internal description&management data structure$/;"	m	struct:pmm_manager
init_memmap	kern/mm/pmm.h	/^    void (*init_memmap)(struct Page *base, size_t n); \/\/ setup description&management data structcure according to$/;"	m	struct:pmm_manager
kva2page	kern/mm/pmm.h	/^kva2page(void *kva) {$/;"	f
name	kern/mm/pmm.h	/^    const char *name;                                 \/\/ XXX_pmm_manager's name$/;"	m	struct:pmm_manager
nr_free_pages	kern/mm/pmm.h	/^    size_t (*nr_free_pages)(void);                    \/\/ return the number of free pages $/;"	m	struct:pmm_manager
pa2page	kern/mm/pmm.h	/^pa2page(uintptr_t pa) {$/;"	f
page2kva	kern/mm/pmm.h	/^page2kva(struct Page *page) {$/;"	f
page2pa	kern/mm/pmm.h	/^page2pa(struct Page *page) {$/;"	f
page2ppn	kern/mm/pmm.h	/^page2ppn(struct Page *page) {$/;"	f
page_ref	kern/mm/pmm.h	/^page_ref(struct Page *page) {$/;"	f
page_ref_dec	kern/mm/pmm.h	/^page_ref_dec(struct Page *page) {$/;"	f
page_ref_inc	kern/mm/pmm.h	/^page_ref_inc(struct Page *page) {$/;"	f
pde2page	kern/mm/pmm.h	/^pde2page(pde_t pde) {$/;"	f
pmm_manager	kern/mm/pmm.h	/^struct pmm_manager {$/;"	s
pte2page	kern/mm/pmm.h	/^pte2page(pte_t pte) {$/;"	f
set_page_ref	kern/mm/pmm.h	/^set_page_ref(struct Page *page, int val) {$/;"	f
BEING_CHECK_VALID_VADDR	kern/mm/swap.c	14;"	d	file:
CHECK_VALID_PHY_PAGE_NUM	kern/mm/swap.c	17;"	d	file:
CHECK_VALID_VADDR	kern/mm/swap.c	15;"	d	file:
CHECK_VALID_VIR_PAGE_NUM	kern/mm/swap.c	13;"	d	file:
MAX_SEQ_NO	kern/mm/swap.c	19;"	d	file:
check_content_access	kern/mm/swap.c	/^check_content_access(void)$/;"	f	file:
check_content_set	kern/mm/swap.c	/^check_content_set(void)$/;"	f	file:
check_ptep	kern/mm/swap.c	/^pte_t * check_ptep[CHECK_VALID_PHY_PAGE_NUM];$/;"	v
check_rp	kern/mm/swap.c	/^struct Page * check_rp[CHECK_VALID_PHY_PAGE_NUM];$/;"	v	typeref:struct:Page
check_swap	kern/mm/swap.c	/^check_swap(void)$/;"	f	file:
check_swap_addr	kern/mm/swap.c	/^unsigned int check_swap_addr[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
free_list	kern/mm/swap.c	176;"	d	file:
max_swap_offset	kern/mm/swap.c	/^size_t max_swap_offset;$/;"	v
nr_free	kern/mm/swap.c	177;"	d	file:
sm	kern/mm/swap.c	/^static struct swap_manager *sm;$/;"	v	typeref:struct:swap_manager	file:
swap_in	kern/mm/swap.c	/^swap_in(struct mm_struct *mm, uintptr_t addr, struct Page **ptr_result)$/;"	f
swap_in_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_init	kern/mm/swap.c	/^swap_init(void)$/;"	f
swap_init_mm	kern/mm/swap.c	/^swap_init_mm(struct mm_struct *mm)$/;"	f
swap_init_ok	kern/mm/swap.c	/^volatile int swap_init_ok = 0;$/;"	v
swap_map_swappable	kern/mm/swap.c	/^swap_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f
swap_out	kern/mm/swap.c	/^swap_out(struct mm_struct *mm, int n, int in_tick)$/;"	f
swap_out_num	kern/mm/swap.c	/^volatile unsigned int swap_out_num=0;$/;"	v
swap_out_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_page	kern/mm/swap.c	/^unsigned int swap_page[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
swap_set_unswappable	kern/mm/swap.c	/^swap_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f
swap_tick_event	kern/mm/swap.c	/^swap_tick_event(struct mm_struct *mm)$/;"	f
MAX_SWAP_OFFSET_LIMIT	kern/mm/swap.h	17;"	d
__KERN_MM_SWAP_H__	kern/mm/swap.h	2;"	d
check_swap	kern/mm/swap.h	/^     int (*check_swap)(void);     $/;"	m	struct:swap_manager
init	kern/mm/swap.h	/^     int (*init)            (void);$/;"	m	struct:swap_manager
init_mm	kern/mm/swap.h	/^     int (*init_mm)         (struct mm_struct *mm);$/;"	m	struct:swap_manager
map_swappable	kern/mm/swap.h	/^     int (*map_swappable)   (struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in);$/;"	m	struct:swap_manager
name	kern/mm/swap.h	/^     const char *name;$/;"	m	struct:swap_manager
set_unswappable	kern/mm/swap.h	/^     int (*set_unswappable) (struct mm_struct *mm, uintptr_t addr);$/;"	m	struct:swap_manager
swap_manager	kern/mm/swap.h	/^struct swap_manager$/;"	s
swap_offset	kern/mm/swap.h	25;"	d
swap_out_victim	kern/mm/swap.h	/^     int (*swap_out_victim) (struct mm_struct *mm, struct Page **ptr_page, int in_tick);$/;"	m	struct:swap_manager
tick_event	kern/mm/swap.h	/^     int (*tick_event)      (struct mm_struct *mm);$/;"	m	struct:swap_manager
_fifo_check_swap	kern/mm/swap_fifo.c	/^_fifo_check_swap(void) {$/;"	f	file:
_fifo_init	kern/mm/swap_fifo.c	/^_fifo_init(void)$/;"	f	file:
_fifo_init_mm	kern/mm/swap_fifo.c	/^_fifo_init_mm(struct mm_struct *mm)$/;"	f	file:
_fifo_map_swappable	kern/mm/swap_fifo.c	/^_fifo_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f	file:
_fifo_set_unswappable	kern/mm/swap_fifo.c	/^_fifo_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f	file:
_fifo_swap_out_victim	kern/mm/swap_fifo.c	/^_fifo_swap_out_victim(struct mm_struct *mm, struct Page ** ptr_page, int in_tick)$/;"	f	file:
_fifo_tick_event	kern/mm/swap_fifo.c	/^_fifo_tick_event(struct mm_struct *mm)$/;"	f	file:
pra_list_head	kern/mm/swap_fifo.c	/^list_entry_t pra_list_head;$/;"	v
swap_manager_fifo	kern/mm/swap_fifo.c	/^struct swap_manager swap_manager_fifo =$/;"	v	typeref:struct:swap_manager
__KERN_MM_SWAP_FIFO_H__	kern/mm/swap_fifo.h	2;"	d
check_mm_struct	kern/mm/vmm.c	/^struct mm_struct *check_mm_struct;$/;"	v	typeref:struct:mm_struct
check_pgfault	kern/mm/vmm.c	/^check_pgfault(void) {$/;"	f	file:
check_vma_overlap	kern/mm/vmm.c	/^check_vma_overlap(struct vma_struct *prev, struct vma_struct *next) {$/;"	f	file:
check_vma_struct	kern/mm/vmm.c	/^check_vma_struct(void) {$/;"	f	file:
check_vmm	kern/mm/vmm.c	/^check_vmm(void) {$/;"	f	file:
copy_from_user	kern/mm/vmm.c	/^copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable) {$/;"	f
copy_string	kern/mm/vmm.c	/^copy_string(struct mm_struct *mm, char *dst, const char *src, size_t maxn) {$/;"	f
copy_to_user	kern/mm/vmm.c	/^copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len) {$/;"	f
do_pgfault	kern/mm/vmm.c	/^do_pgfault(struct mm_struct *mm, uint32_t error_code, uintptr_t addr) {$/;"	f
dup_mmap	kern/mm/vmm.c	/^dup_mmap(struct mm_struct *to, struct mm_struct *from) {$/;"	f
exit_mmap	kern/mm/vmm.c	/^exit_mmap(struct mm_struct *mm) {$/;"	f
find_vma	kern/mm/vmm.c	/^find_vma(struct mm_struct *mm, uintptr_t addr) {$/;"	f
insert_vma_struct	kern/mm/vmm.c	/^insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma) {$/;"	f
mm_create	kern/mm/vmm.c	/^mm_create(void) {$/;"	f
mm_destroy	kern/mm/vmm.c	/^mm_destroy(struct mm_struct *mm) {$/;"	f
mm_map	kern/mm/vmm.c	/^mm_map(struct mm_struct *mm, uintptr_t addr, size_t len, uint32_t vm_flags,$/;"	f
pgfault_num	kern/mm/vmm.c	/^volatile unsigned int pgfault_num=0;$/;"	v
user_mem_check	kern/mm/vmm.c	/^user_mem_check(struct mm_struct *mm, uintptr_t addr, size_t len, bool write) {$/;"	f
vma_create	kern/mm/vmm.c	/^vma_create(uintptr_t vm_start, uintptr_t vm_end, uint32_t vm_flags) {$/;"	f
vmm_init	kern/mm/vmm.c	/^vmm_init(void) {$/;"	f
VM_EXEC	kern/mm/vmm.h	29;"	d
VM_READ	kern/mm/vmm.h	27;"	d
VM_STACK	kern/mm/vmm.h	30;"	d
VM_WRITE	kern/mm/vmm.h	28;"	d
__KERN_MM_VMM_H__	kern/mm/vmm.h	2;"	d
le2vma	kern/mm/vmm.h	24;"	d
list_link	kern/mm/vmm.h	/^    list_entry_t list_link;  \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:vma_struct
lock_mm	kern/mm/vmm.h	/^lock_mm(struct mm_struct *mm) {$/;"	f
locked_by	kern/mm/vmm.h	/^    int locked_by;                 \/\/ the lock owner process's pid$/;"	m	struct:mm_struct
map_count	kern/mm/vmm.h	/^    int map_count;                 \/\/ the count of these vma$/;"	m	struct:mm_struct
mm_count	kern/mm/vmm.h	/^    int mm_count;                  \/\/ the number ofprocess which shared the mm$/;"	m	struct:mm_struct
mm_count	kern/mm/vmm.h	/^mm_count(struct mm_struct *mm) {$/;"	f
mm_count_dec	kern/mm/vmm.h	/^mm_count_dec(struct mm_struct *mm) {$/;"	f
mm_count_inc	kern/mm/vmm.h	/^mm_count_inc(struct mm_struct *mm) {$/;"	f
mm_sem	kern/mm/vmm.h	/^    semaphore_t mm_sem;            \/\/ mutex for using dup_mmap fun to duplicat the mm $/;"	m	struct:mm_struct
mm_struct	kern/mm/vmm.h	/^struct mm_struct {$/;"	s
mmap_cache	kern/mm/vmm.h	/^    struct vma_struct *mmap_cache; \/\/ current accessed vma, used for speed purpose$/;"	m	struct:mm_struct	typeref:struct:mm_struct::vma_struct
mmap_list	kern/mm/vmm.h	/^    list_entry_t mmap_list;        \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:mm_struct
pgdir	kern/mm/vmm.h	/^    pde_t *pgdir;                  \/\/ the PDT of these vma$/;"	m	struct:mm_struct
set_mm_count	kern/mm/vmm.h	/^set_mm_count(struct mm_struct *mm, int val) {$/;"	f
sm_priv	kern/mm/vmm.h	/^    void *sm_priv;                 \/\/ the private data for swap manager$/;"	m	struct:mm_struct
unlock_mm	kern/mm/vmm.h	/^unlock_mm(struct mm_struct *mm) {$/;"	f
vm_end	kern/mm/vmm.h	/^    uintptr_t vm_end;        \/\/ end addr of vma, not include the vm_end itself$/;"	m	struct:vma_struct
vm_flags	kern/mm/vmm.h	/^    uint32_t vm_flags;       \/\/ flags of vma$/;"	m	struct:vma_struct
vm_mm	kern/mm/vmm.h	/^    struct mm_struct *vm_mm; \/\/ the set of vma using the same PDT $/;"	m	struct:vma_struct	typeref:struct:vma_struct::mm_struct
vm_start	kern/mm/vmm.h	/^    uintptr_t vm_start;      \/\/ start addr of vma      $/;"	m	struct:vma_struct
vma_struct	kern/mm/vmm.h	/^struct vma_struct {$/;"	s
kernel_thread_entry	kern/process/entry.S	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
HASH_LIST_SIZE	kern/process/proc.c	69;"	d	file:
HASH_SHIFT	kern/process/proc.c	68;"	d	file:
KERNEL_EXECVE	kern/process/proc.c	842;"	d	file:
KERNEL_EXECVE2	kern/process/proc.c	844;"	d	file:
KERNEL_EXECVE3	kern/process/proc.c	848;"	d	file:
__KERNEL_EXECVE	kern/process/proc.c	835;"	d	file:
__KERNEL_EXECVE3	kern/process/proc.c	846;"	d	file:
alloc_proc	kern/process/proc.c	/^alloc_proc(void) {$/;"	f	file:
copy_files	kern/process/proc.c	/^copy_files(uint32_t clone_flags, struct proc_struct *proc) {$/;"	f	file:
copy_kargv	kern/process/proc.c	/^copy_kargv(struct mm_struct *mm, int argc, char **kargv, const char **argv) {$/;"	f	file:
copy_mm	kern/process/proc.c	/^copy_mm(uint32_t clone_flags, struct proc_struct *proc) {$/;"	f	file:
copy_thread	kern/process/proc.c	/^copy_thread(struct proc_struct *proc, uintptr_t esp, struct trapframe *tf) {$/;"	f	file:
cpu_idle	kern/process/proc.c	/^cpu_idle(void) {$/;"	f
current	kern/process/proc.c	/^struct proc_struct *current = NULL;$/;"	v	typeref:struct:proc_struct
do_execve	kern/process/proc.c	/^do_execve(const char *name, int argc, const char **argv) {$/;"	f
do_exit	kern/process/proc.c	/^do_exit(int error_code) {$/;"	f
do_fork	kern/process/proc.c	/^do_fork(uint32_t clone_flags, uintptr_t stack, struct trapframe *tf) {$/;"	f
do_kill	kern/process/proc.c	/^do_kill(int pid) {$/;"	f
do_sleep	kern/process/proc.c	/^do_sleep(unsigned int time) {$/;"	f
do_wait	kern/process/proc.c	/^do_wait(int pid, int *code_store) {$/;"	f
do_yield	kern/process/proc.c	/^do_yield(void) {$/;"	f
find_proc	kern/process/proc.c	/^find_proc(int pid) {$/;"	f
forkret	kern/process/proc.c	/^forkret(void) {$/;"	f	file:
get_pid	kern/process/proc.c	/^get_pid(void) {$/;"	f	file:
get_proc_name	kern/process/proc.c	/^get_proc_name(struct proc_struct *proc) {$/;"	f
hash_list	kern/process/proc.c	/^static list_entry_t hash_list[HASH_LIST_SIZE];$/;"	v	file:
hash_proc	kern/process/proc.c	/^hash_proc(struct proc_struct *proc) {$/;"	f	file:
idleproc	kern/process/proc.c	/^struct proc_struct *idleproc = NULL;$/;"	v	typeref:struct:proc_struct
init_main	kern/process/proc.c	/^init_main(void *arg) {$/;"	f	file:
initproc	kern/process/proc.c	/^struct proc_struct *initproc = NULL;$/;"	v	typeref:struct:proc_struct
kernel_execve	kern/process/proc.c	/^kernel_execve(const char *name, const char **argv) {$/;"	f	file:
kernel_thread	kern/process/proc.c	/^kernel_thread(int (*fn)(void *), void *arg, uint32_t clone_flags) {$/;"	f
lab6_set_priority	kern/process/proc.c	/^lab6_set_priority(uint32_t priority)$/;"	f
load_icode	kern/process/proc.c	/^load_icode(int fd, int argc, char **kargv) {$/;"	f	file:
load_icode_read	kern/process/proc.c	/^load_icode_read(int fd, void *buf, size_t len, off_t offset) {$/;"	f	file:
nr_process	kern/process/proc.c	/^static int nr_process = 0;$/;"	v	file:
pid_hashfn	kern/process/proc.c	70;"	d	file:
proc_init	kern/process/proc.c	/^proc_init(void) {$/;"	f
proc_list	kern/process/proc.c	/^list_entry_t proc_list;$/;"	v
proc_run	kern/process/proc.c	/^proc_run(struct proc_struct *proc) {$/;"	f
put_files	kern/process/proc.c	/^put_files(struct proc_struct *proc) {$/;"	f	file:
put_kargv	kern/process/proc.c	/^put_kargv(int argc, char **kargv) {$/;"	f	file:
put_kstack	kern/process/proc.c	/^put_kstack(struct proc_struct *proc) {$/;"	f	file:
put_pgdir	kern/process/proc.c	/^put_pgdir(struct mm_struct *mm) {$/;"	f	file:
remove_links	kern/process/proc.c	/^remove_links(struct proc_struct *proc) {$/;"	f	file:
set_links	kern/process/proc.c	/^set_links(struct proc_struct *proc) {$/;"	f	file:
set_proc_name	kern/process/proc.c	/^set_proc_name(struct proc_struct *proc, const char *name) {$/;"	f
setup_kstack	kern/process/proc.c	/^setup_kstack(struct proc_struct *proc) {$/;"	f	file:
setup_pgdir	kern/process/proc.c	/^setup_pgdir(struct mm_struct *mm) {$/;"	f	file:
unhash_proc	kern/process/proc.c	/^unhash_proc(struct proc_struct *proc) {$/;"	f	file:
user_main	kern/process/proc.c	/^user_main(void *arg) {$/;"	f	file:
MAX_PID	kern/process/proc.h	39;"	d
MAX_PROCESS	kern/process/proc.h	38;"	d
PF_EXITING	kern/process/proc.h	73;"	d
PROC_NAME_LEN	kern/process/proc.h	37;"	d
PROC_RUNNABLE	kern/process/proc.h	/^    PROC_RUNNABLE,    \/\/ runnable(maybe running)$/;"	e	enum:proc_state
PROC_SLEEPING	kern/process/proc.h	/^    PROC_SLEEPING,    \/\/ sleeping$/;"	e	enum:proc_state
PROC_UNINIT	kern/process/proc.h	/^    PROC_UNINIT = 0,  \/\/ uninitialized$/;"	e	enum:proc_state
PROC_ZOMBIE	kern/process/proc.h	/^    PROC_ZOMBIE,      \/\/ almost dead, and wait parent proc to reclaim his resource$/;"	e	enum:proc_state
WT_CHILD	kern/process/proc.h	76;"	d
WT_INTERRUPTED	kern/process/proc.h	75;"	d
WT_KBD	kern/process/proc.h	79;"	d
WT_KSEM	kern/process/proc.h	77;"	d
WT_TIMER	kern/process/proc.h	78;"	d
__KERN_PROCESS_PROC_H__	kern/process/proc.h	2;"	d
context	kern/process/proc.h	/^    struct context context;                     \/\/ Switch here to run process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::context
context	kern/process/proc.h	/^struct context {$/;"	s
cptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
cr3	kern/process/proc.h	/^    uintptr_t cr3;                              \/\/ CR3 register: the base addr of Page Directroy Table(PDT)$/;"	m	struct:proc_struct
ebp	kern/process/proc.h	/^    uint32_t ebp;$/;"	m	struct:context
ebx	kern/process/proc.h	/^    uint32_t ebx;$/;"	m	struct:context
ecx	kern/process/proc.h	/^    uint32_t ecx;$/;"	m	struct:context
edi	kern/process/proc.h	/^    uint32_t edi;$/;"	m	struct:context
edx	kern/process/proc.h	/^    uint32_t edx;$/;"	m	struct:context
eip	kern/process/proc.h	/^    uint32_t eip;$/;"	m	struct:context
esi	kern/process/proc.h	/^    uint32_t esi;$/;"	m	struct:context
esp	kern/process/proc.h	/^    uint32_t esp;$/;"	m	struct:context
exit_code	kern/process/proc.h	/^    int exit_code;                              \/\/ exit code (be sent to parent proc)$/;"	m	struct:proc_struct
filesp	kern/process/proc.h	/^    struct files_struct *filesp;                \/\/ the file related info(pwd, files_count, files_array, fs_semaphore) of process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::files_struct
flags	kern/process/proc.h	/^    uint32_t flags;                             \/\/ Process flag$/;"	m	struct:proc_struct
hash_link	kern/process/proc.h	/^    list_entry_t hash_link;                     \/\/ Process hash list$/;"	m	struct:proc_struct
kstack	kern/process/proc.h	/^    uintptr_t kstack;                           \/\/ Process kernel stack$/;"	m	struct:proc_struct
lab6_priority	kern/process/proc.h	/^    uint32_t lab6_priority;                     \/\/ FOR LAB6 ONLY: the priority of process, set by lab6_set_priority(uint32_t)$/;"	m	struct:proc_struct
lab6_run_pool	kern/process/proc.h	/^    skew_heap_entry_t lab6_run_pool;            \/\/ FOR LAB6 ONLY: the entry in the run pool$/;"	m	struct:proc_struct
lab6_stride	kern/process/proc.h	/^    uint32_t lab6_stride;                       \/\/ FOR LAB6 ONLY: the current stride of the process $/;"	m	struct:proc_struct
le2proc	kern/process/proc.h	81;"	d
list_link	kern/process/proc.h	/^    list_entry_t list_link;                     \/\/ Process link list $/;"	m	struct:proc_struct
mm	kern/process/proc.h	/^    struct mm_struct *mm;                       \/\/ Process's memory management field$/;"	m	struct:proc_struct	typeref:struct:proc_struct::mm_struct
name	kern/process/proc.h	/^    char name[PROC_NAME_LEN + 1];               \/\/ Process name$/;"	m	struct:proc_struct
need_resched	kern/process/proc.h	/^    volatile bool need_resched;                 \/\/ bool value: need to be rescheduled to release CPU?$/;"	m	struct:proc_struct
optr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
parent	kern/process/proc.h	/^    struct proc_struct *parent;                 \/\/ the parent process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
pid	kern/process/proc.h	/^    int pid;                                    \/\/ Process ID$/;"	m	struct:proc_struct
proc_state	kern/process/proc.h	/^enum proc_state {$/;"	g
proc_struct	kern/process/proc.h	/^struct proc_struct {$/;"	s
rq	kern/process/proc.h	/^    struct run_queue *rq;                       \/\/ running queue contains Process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::run_queue
run_link	kern/process/proc.h	/^    list_entry_t run_link;                      \/\/ the entry linked in run queue$/;"	m	struct:proc_struct
runs	kern/process/proc.h	/^    int runs;                                   \/\/ the running times of Proces$/;"	m	struct:proc_struct
state	kern/process/proc.h	/^    enum proc_state state;                      \/\/ Process state$/;"	m	struct:proc_struct	typeref:enum:proc_struct::proc_state
tf	kern/process/proc.h	/^    struct trapframe *tf;                       \/\/ Trap frame for current interrupt$/;"	m	struct:proc_struct	typeref:struct:proc_struct::trapframe
time_slice	kern/process/proc.h	/^    int time_slice;                             \/\/ time slice for occupying the CPU$/;"	m	struct:proc_struct
wait_state	kern/process/proc.h	/^    uint32_t wait_state;                        \/\/ waiting state$/;"	m	struct:proc_struct
yptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
switch_to	kern/process/switch.S	/^switch_to:                      # switch_to(from, to)$/;"	l
BIG_STRIDE	kern/schedule/default_sched_stride.c	12;"	d	file:
USE_SKEW_HEAP	kern/schedule/default_sched_stride.c	7;"	d	file:
default_sched_class	kern/schedule/default_sched_stride.c	/^struct sched_class default_sched_class = {$/;"	v	typeref:struct:sched_class
proc_stride_comp_f	kern/schedule/default_sched_stride.c	/^proc_stride_comp_f(void *a, void *b)$/;"	f	file:
stride_dequeue	kern/schedule/default_sched_stride.c	/^stride_dequeue(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
stride_enqueue	kern/schedule/default_sched_stride.c	/^stride_enqueue(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
stride_init	kern/schedule/default_sched_stride.c	/^stride_init(struct run_queue *rq) {$/;"	f	file:
stride_pick_next	kern/schedule/default_sched_stride.c	/^stride_pick_next(struct run_queue *rq) {$/;"	f	file:
stride_proc_tick	kern/schedule/default_sched_stride.c	/^stride_proc_tick(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
__KERN_SCHEDULE_SCHED_RR_H__	kern/schedule/default_sched_stride.h	2;"	d
__rq	kern/schedule/sched.c	/^static struct run_queue __rq;$/;"	v	typeref:struct:run_queue	file:
add_timer	kern/schedule/sched.c	/^add_timer(timer_t *timer) {$/;"	f
del_timer	kern/schedule/sched.c	/^del_timer(timer_t *timer) {$/;"	f
rq	kern/schedule/sched.c	/^static struct run_queue *rq;$/;"	v	typeref:struct:run_queue	file:
run_timer_list	kern/schedule/sched.c	/^run_timer_list(void) {$/;"	f
sched_class	kern/schedule/sched.c	/^static struct sched_class *sched_class;$/;"	v	typeref:struct:sched_class	file:
sched_class_dequeue	kern/schedule/sched.c	/^sched_class_dequeue(struct proc_struct *proc) {$/;"	f	file:
sched_class_enqueue	kern/schedule/sched.c	/^sched_class_enqueue(struct proc_struct *proc) {$/;"	f	file:
sched_class_pick_next	kern/schedule/sched.c	/^sched_class_pick_next(void) {$/;"	f	file:
sched_class_proc_tick	kern/schedule/sched.c	/^sched_class_proc_tick(struct proc_struct *proc) {$/;"	f	file:
sched_init	kern/schedule/sched.c	/^sched_init(void) {$/;"	f
schedule	kern/schedule/sched.c	/^schedule(void) {$/;"	f
timer_list	kern/schedule/sched.c	/^static list_entry_t timer_list;$/;"	v	file:
wakeup_proc	kern/schedule/sched.c	/^wakeup_proc(struct proc_struct *proc) {$/;"	f
MAX_TIME_SLICE	kern/schedule/sched.h	8;"	d
__KERN_SCHEDULE_SCHED_H__	kern/schedule/sched.h	2;"	d
dequeue	kern/schedule/sched.h	/^    void (*dequeue)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
enqueue	kern/schedule/sched.h	/^    void (*enqueue)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
expires	kern/schedule/sched.h	/^    unsigned int expires;       \/\/the expire time$/;"	m	struct:__anon10
init	kern/schedule/sched.h	/^    void (*init)(struct run_queue *rq);$/;"	m	struct:sched_class
lab6_run_pool	kern/schedule/sched.h	/^    skew_heap_entry_t *lab6_run_pool;$/;"	m	struct:run_queue
le2timer	kern/schedule/sched.h	18;"	d
max_time_slice	kern/schedule/sched.h	/^    int max_time_slice;$/;"	m	struct:run_queue
name	kern/schedule/sched.h	/^    const char *name;$/;"	m	struct:sched_class
pick_next	kern/schedule/sched.h	/^    struct proc_struct *(*pick_next)(struct run_queue *rq);$/;"	m	struct:sched_class	typeref:struct:sched_class::pick_next
proc	kern/schedule/sched.h	/^    struct proc_struct *proc;   \/\/the proc wait in this timer. If the expire time is end, then this proc will be scheduled$/;"	m	struct:__anon10	typeref:struct:__anon10::proc_struct
proc_num	kern/schedule/sched.h	/^    unsigned int proc_num;$/;"	m	struct:run_queue
proc_tick	kern/schedule/sched.h	/^    void (*proc_tick)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
run_list	kern/schedule/sched.h	/^    list_entry_t run_list;$/;"	m	struct:run_queue
run_queue	kern/schedule/sched.h	/^struct run_queue {$/;"	s
sched_class	kern/schedule/sched.h	/^struct sched_class {$/;"	s
timer_init	kern/schedule/sched.h	/^timer_init(timer_t *timer, struct proc_struct *proc, int expires) {$/;"	f
timer_link	kern/schedule/sched.h	/^    list_entry_t timer_link;    \/\/the timer list$/;"	m	struct:__anon10
timer_t	kern/schedule/sched.h	/^} timer_t;$/;"	t	typeref:struct:__anon10
EATING	kern/sync/check_sync.c	12;"	d	file:
HUNGRY	kern/sync/check_sync.c	11;"	d	file:
LEFT	kern/sync/check_sync.c	8;"	d	file:
N	kern/sync/check_sync.c	7;"	d	file:
RIGHT	kern/sync/check_sync.c	9;"	d	file:
SLEEP_TIME	kern/sync/check_sync.c	14;"	d	file:
THINKING	kern/sync/check_sync.c	10;"	d	file:
TIMES	kern/sync/check_sync.c	13;"	d	file:
check_sync	kern/sync/check_sync.c	/^void check_sync(void){$/;"	f
mt	kern/sync/check_sync.c	/^monitor_t mt, *mtp=&mt;                          \/\/ monitor$/;"	v
mtp	kern/sync/check_sync.c	/^monitor_t mt, *mtp=&mt;                          \/\/ monitor$/;"	v
mutex	kern/sync/check_sync.c	/^semaphore_t mutex; \/* 临界区互斥 *\/$/;"	v
phi_put_forks_condvar	kern/sync/check_sync.c	/^void phi_put_forks_condvar(int i) {$/;"	f
phi_put_forks_sema	kern/sync/check_sync.c	/^void phi_put_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	f
phi_take_forks_condvar	kern/sync/check_sync.c	/^void phi_take_forks_condvar(int i) {$/;"	f
phi_take_forks_sema	kern/sync/check_sync.c	/^void phi_take_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	f
phi_test_condvar	kern/sync/check_sync.c	/^void phi_test_condvar (i) { $/;"	f
phi_test_sema	kern/sync/check_sync.c	/^void phi_test_sema(i) \/* i：哲学家号码从0到N-1 *\/$/;"	f
philosopher_proc_condvar	kern/sync/check_sync.c	/^struct proc_struct *philosopher_proc_condvar[N]; \/\/ N philosopher$/;"	v	typeref:struct:proc_struct
philosopher_proc_sema	kern/sync/check_sync.c	/^struct proc_struct *philosopher_proc_sema[N];$/;"	v	typeref:struct:proc_struct
philosopher_using_condvar	kern/sync/check_sync.c	/^int philosopher_using_condvar(void * arg) { \/* arg is the No. of philosopher 0~N-1*\/$/;"	f
philosopher_using_semaphore	kern/sync/check_sync.c	/^int philosopher_using_semaphore(void * arg) \/* i：哲学家号码，从0到N-1 *\/$/;"	f
s	kern/sync/check_sync.c	/^semaphore_t s[N]; \/* 每个哲学家一个信号量 *\/$/;"	v
state_condvar	kern/sync/check_sync.c	/^int state_condvar[N];                            \/\/ the philosopher's state: EATING, HUNGARY, THINKING  $/;"	v
state_sema	kern/sync/check_sync.c	/^int state_sema[N]; \/* 记录每个人状态的数组 *\/$/;"	v
cond_signal	kern/sync/monitor.c	/^cond_signal (condvar_t *cvp) {$/;"	f
cond_wait	kern/sync/monitor.c	/^cond_wait (condvar_t *cvp) {$/;"	f
monitor_init	kern/sync/monitor.c	/^monitor_init (monitor_t * mtp, size_t num_cv) {$/;"	f
__KERN_SYNC_MOINTOR_CONDVAR_H__	kern/sync/monitor.h	2;"	d
condvar	kern/sync/monitor.h	/^typedef struct condvar{$/;"	s
condvar_t	kern/sync/monitor.h	/^} condvar_t;$/;"	t	typeref:struct:condvar
count	kern/sync/monitor.h	/^    int count;              \/\/ the number of waiters on condvar$/;"	m	struct:condvar
cv	kern/sync/monitor.h	/^    condvar_t *cv;          \/\/ the condvars in monitor$/;"	m	struct:monitor
monitor	kern/sync/monitor.h	/^typedef struct monitor{$/;"	s
monitor_t	kern/sync/monitor.h	/^typedef struct monitor monitor_t;$/;"	t	typeref:struct:monitor
monitor_t	kern/sync/monitor.h	/^} monitor_t;$/;"	t	typeref:struct:monitor
mutex	kern/sync/monitor.h	/^    semaphore_t mutex;      \/\/ the mutex lock for going into the routines in monitor, should be initialized to 1$/;"	m	struct:monitor
next	kern/sync/monitor.h	/^    semaphore_t next;       \/\/ the next semaphore is used to down the signaling proc itself, and the other OR wakeuped waiting proc should wake up the sleeped signaling proc.$/;"	m	struct:monitor
next_count	kern/sync/monitor.h	/^    int next_count;         \/\/ the number of of sleeped signaling proc$/;"	m	struct:monitor
owner	kern/sync/monitor.h	/^    monitor_t * owner;      \/\/ the owner(monitor) of this condvar$/;"	m	struct:condvar
sem	kern/sync/monitor.h	/^    semaphore_t sem;        \/\/ the sem semaphore  is used to down the waiting proc, and the signaling proc should up the waiting proc$/;"	m	struct:condvar
__down	kern/sync/sem.c	/^static __noinline uint32_t __down(semaphore_t *sem, uint32_t wait_state) {$/;"	f	file:
__up	kern/sync/sem.c	/^static __noinline void __up(semaphore_t *sem, uint32_t wait_state) {$/;"	f	file:
down	kern/sync/sem.c	/^down(semaphore_t *sem) {$/;"	f
sem_init	kern/sync/sem.c	/^sem_init(semaphore_t *sem, int value) {$/;"	f
try_down	kern/sync/sem.c	/^try_down(semaphore_t *sem) {$/;"	f
up	kern/sync/sem.c	/^up(semaphore_t *sem) {$/;"	f
__KERN_SYNC_SEM_H__	kern/sync/sem.h	2;"	d
semaphore_t	kern/sync/sem.h	/^} semaphore_t;$/;"	t	typeref:struct:__anon3
value	kern/sync/sem.h	/^    int value;$/;"	m	struct:__anon3
wait_queue	kern/sync/sem.h	/^    wait_queue_t wait_queue;$/;"	m	struct:__anon3
__KERN_SYNC_SYNC_H__	kern/sync/sync.h	2;"	d
__intr_restore	kern/sync/sync.h	/^__intr_restore(bool flag) {$/;"	f
__intr_save	kern/sync/sync.h	/^__intr_save(void) {$/;"	f
local_intr_restore	kern/sync/sync.h	28;"	d
local_intr_save	kern/sync/sync.h	27;"	d
wait_current_set	kern/sync/wait.c	/^wait_current_set(wait_queue_t *queue, wait_t *wait, uint32_t wait_state) {$/;"	f
wait_in_queue	kern/sync/wait.c	/^wait_in_queue(wait_t *wait) {$/;"	f
wait_init	kern/sync/wait.c	/^wait_init(wait_t *wait, struct proc_struct *proc) {$/;"	f
wait_queue_add	kern/sync/wait.c	/^wait_queue_add(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_del	kern/sync/wait.c	/^wait_queue_del(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_empty	kern/sync/wait.c	/^wait_queue_empty(wait_queue_t *queue) {$/;"	f
wait_queue_first	kern/sync/wait.c	/^wait_queue_first(wait_queue_t *queue) {$/;"	f
wait_queue_init	kern/sync/wait.c	/^wait_queue_init(wait_queue_t *queue) {$/;"	f
wait_queue_last	kern/sync/wait.c	/^wait_queue_last(wait_queue_t *queue) {$/;"	f
wait_queue_next	kern/sync/wait.c	/^wait_queue_next(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_prev	kern/sync/wait.c	/^wait_queue_prev(wait_queue_t *queue, wait_t *wait) {$/;"	f
wakeup_first	kern/sync/wait.c	/^wakeup_first(wait_queue_t *queue, uint32_t wakeup_flags, bool del) {$/;"	f
wakeup_queue	kern/sync/wait.c	/^wakeup_queue(wait_queue_t *queue, uint32_t wakeup_flags, bool del) {$/;"	f
wakeup_wait	kern/sync/wait.c	/^wakeup_wait(wait_queue_t *queue, wait_t *wait, uint32_t wakeup_flags, bool del) {$/;"	f
__KERN_SYNC_WAIT_H__	kern/sync/wait.h	2;"	d
le2wait	kern/sync/wait.h	19;"	d
proc	kern/sync/wait.h	/^    struct proc_struct *proc;$/;"	m	struct:__anon2	typeref:struct:__anon2::proc_struct
wait_current_del	kern/sync/wait.h	40;"	d
wait_head	kern/sync/wait.h	/^    list_entry_t wait_head;$/;"	m	struct:__anon1
wait_link	kern/sync/wait.h	/^    list_entry_t wait_link;$/;"	m	struct:__anon2
wait_queue	kern/sync/wait.h	/^    wait_queue_t *wait_queue;$/;"	m	struct:__anon2
wait_queue_t	kern/sync/wait.h	/^} wait_queue_t;$/;"	t	typeref:struct:__anon1
wait_t	kern/sync/wait.h	/^} wait_t;$/;"	t	typeref:struct:__anon2
wakeup_flags	kern/sync/wait.h	/^    uint32_t wakeup_flags;$/;"	m	struct:__anon2
NUM_SYSCALLS	kern/syscall/syscall.c	185;"	d	file:
sys_close	kern/syscall/syscall.c	/^sys_close(uint32_t arg[]) {$/;"	f	file:
sys_dup	kern/syscall/syscall.c	/^sys_dup(uint32_t arg[]) {$/;"	f	file:
sys_exec	kern/syscall/syscall.c	/^sys_exec(uint32_t arg[]) {$/;"	f	file:
sys_exit	kern/syscall/syscall.c	/^sys_exit(uint32_t arg[]) {$/;"	f	file:
sys_fork	kern/syscall/syscall.c	/^sys_fork(uint32_t arg[]) {$/;"	f	file:
sys_fstat	kern/syscall/syscall.c	/^sys_fstat(uint32_t arg[]) {$/;"	f	file:
sys_fsync	kern/syscall/syscall.c	/^sys_fsync(uint32_t arg[]) {$/;"	f	file:
sys_getcwd	kern/syscall/syscall.c	/^sys_getcwd(uint32_t arg[]) {$/;"	f	file:
sys_getdirentry	kern/syscall/syscall.c	/^sys_getdirentry(uint32_t arg[]) {$/;"	f	file:
sys_getpid	kern/syscall/syscall.c	/^sys_getpid(uint32_t arg[]) {$/;"	f	file:
sys_gettime	kern/syscall/syscall.c	/^sys_gettime(uint32_t arg[]) {$/;"	f	file:
sys_kill	kern/syscall/syscall.c	/^sys_kill(uint32_t arg[]) {$/;"	f	file:
sys_lab6_set_priority	kern/syscall/syscall.c	/^sys_lab6_set_priority(uint32_t arg[])$/;"	f	file:
sys_open	kern/syscall/syscall.c	/^sys_open(uint32_t arg[]) {$/;"	f	file:
sys_pgdir	kern/syscall/syscall.c	/^sys_pgdir(uint32_t arg[]) {$/;"	f	file:
sys_putc	kern/syscall/syscall.c	/^sys_putc(uint32_t arg[]) {$/;"	f	file:
sys_read	kern/syscall/syscall.c	/^sys_read(uint32_t arg[]) {$/;"	f	file:
sys_seek	kern/syscall/syscall.c	/^sys_seek(uint32_t arg[]) {$/;"	f	file:
sys_sleep	kern/syscall/syscall.c	/^sys_sleep(uint32_t arg[]) {$/;"	f	file:
sys_wait	kern/syscall/syscall.c	/^sys_wait(uint32_t arg[]) {$/;"	f	file:
sys_write	kern/syscall/syscall.c	/^sys_write(uint32_t arg[]) {$/;"	f	file:
sys_yield	kern/syscall/syscall.c	/^sys_yield(uint32_t arg[]) {$/;"	f	file:
syscall	kern/syscall/syscall.c	/^syscall(void) {$/;"	f
syscalls	kern/syscall/syscall.c	/^static int (*syscalls[])(uint32_t arg[]) = {$/;"	v	file:
__KERN_SYSCALL_SYSCALL_H__	kern/syscall/syscall.h	2;"	d
IA32flags	kern/trap/trap.c	/^static const char *IA32flags[] = {$/;"	v	file:
TICK_NUM	kern/trap/trap.c	20;"	d	file:
idt	kern/trap/trap.c	/^static struct gatedesc idt[256] = {{0}};$/;"	v	typeref:struct:gatedesc	file:
idt_init	kern/trap/trap.c	/^idt_init(void) {$/;"	f
idt_pd	kern/trap/trap.c	/^static struct pseudodesc idt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
in_swap_tick_event	kern/trap/trap.c	/^static volatile int in_swap_tick_event = 0;$/;"	v	file:
int_gate	kern/trap/trap.c	165;"	d	file:
pgfault_handler	kern/trap/trap.c	/^pgfault_handler(struct trapframe *tf) {$/;"	f	file:
print_pgfault	kern/trap/trap.c	/^print_pgfault(struct trapframe *tf) {$/;"	f	file:
print_regs	kern/trap/trap.c	/^print_regs(struct pushregs *regs) {$/;"	f
print_ticks	kern/trap/trap.c	/^static void print_ticks() {$/;"	f	file:
print_trapframe	kern/trap/trap.c	/^print_trapframe(struct trapframe *tf) {$/;"	f
tmp_kernel_frame	kern/trap/trap.c	/^struct trapframe *tmp_kernel_frame, tmp_user_frame;$/;"	v	typeref:struct:trapframe
tmp_user_frame	kern/trap/trap.c	/^struct trapframe *tmp_kernel_frame, tmp_user_frame;$/;"	v	typeref:struct:
trap	kern/trap/trap.c	/^trap(struct trapframe *tf) {$/;"	f
trap_dispatch	kern/trap/trap.c	/^trap_dispatch(struct trapframe *tf) {$/;"	f	file:
trap_in_kernel	kern/trap/trap.c	/^trap_in_kernel(struct trapframe *tf) {$/;"	f
trapname	kern/trap/trap.c	/^trapname(int trapno) {$/;"	f	file:
IRQ_COM1	kern/trap/trap.h	35;"	d
IRQ_ERROR	kern/trap/trap.h	38;"	d
IRQ_IDE1	kern/trap/trap.h	36;"	d
IRQ_IDE2	kern/trap/trap.h	37;"	d
IRQ_KBD	kern/trap/trap.h	34;"	d
IRQ_OFFSET	kern/trap/trap.h	31;"	d
IRQ_SPURIOUS	kern/trap/trap.h	39;"	d
IRQ_TIMER	kern/trap/trap.h	33;"	d
T_ALIGN	kern/trap/trap.h	26;"	d
T_BOUND	kern/trap/trap.h	14;"	d
T_BRKPT	kern/trap/trap.h	12;"	d
T_DBLFLT	kern/trap/trap.h	17;"	d
T_DEBUG	kern/trap/trap.h	10;"	d
T_DEVICE	kern/trap/trap.h	16;"	d
T_DIVIDE	kern/trap/trap.h	9;"	d
T_FPERR	kern/trap/trap.h	25;"	d
T_GPFLT	kern/trap/trap.h	22;"	d
T_ILLOP	kern/trap/trap.h	15;"	d
T_MCHK	kern/trap/trap.h	27;"	d
T_NMI	kern/trap/trap.h	11;"	d
T_OFLOW	kern/trap/trap.h	13;"	d
T_PGFLT	kern/trap/trap.h	23;"	d
T_SEGNP	kern/trap/trap.h	20;"	d
T_SIMDERR	kern/trap/trap.h	28;"	d
T_STACK	kern/trap/trap.h	21;"	d
T_SWITCH_TOK	kern/trap/trap.h	46;"	d
T_SWITCH_TOU	kern/trap/trap.h	45;"	d
T_TSS	kern/trap/trap.h	19;"	d
__KERN_TRAP_TRAP_H__	kern/trap/trap.h	2;"	d
pushregs	kern/trap/trap.h	/^struct pushregs {$/;"	s
reg_eax	kern/trap/trap.h	/^    uint32_t reg_eax;$/;"	m	struct:pushregs
reg_ebp	kern/trap/trap.h	/^    uint32_t reg_ebp;$/;"	m	struct:pushregs
reg_ebx	kern/trap/trap.h	/^    uint32_t reg_ebx;$/;"	m	struct:pushregs
reg_ecx	kern/trap/trap.h	/^    uint32_t reg_ecx;$/;"	m	struct:pushregs
reg_edi	kern/trap/trap.h	/^    uint32_t reg_edi;$/;"	m	struct:pushregs
reg_edx	kern/trap/trap.h	/^    uint32_t reg_edx;$/;"	m	struct:pushregs
reg_esi	kern/trap/trap.h	/^    uint32_t reg_esi;$/;"	m	struct:pushregs
reg_oesp	kern/trap/trap.h	/^    uint32_t reg_oesp;          \/* Useless *\/$/;"	m	struct:pushregs
tf_cs	kern/trap/trap.h	/^    uint16_t tf_cs;$/;"	m	struct:trapframe
tf_ds	kern/trap/trap.h	/^    uint16_t tf_ds;$/;"	m	struct:trapframe
tf_eflags	kern/trap/trap.h	/^    uint32_t tf_eflags;$/;"	m	struct:trapframe
tf_eip	kern/trap/trap.h	/^    uintptr_t tf_eip;$/;"	m	struct:trapframe
tf_err	kern/trap/trap.h	/^    uint32_t tf_err;$/;"	m	struct:trapframe
tf_es	kern/trap/trap.h	/^    uint16_t tf_es;$/;"	m	struct:trapframe
tf_esp	kern/trap/trap.h	/^    uintptr_t tf_esp;$/;"	m	struct:trapframe
tf_fs	kern/trap/trap.h	/^    uint16_t tf_fs;$/;"	m	struct:trapframe
tf_gs	kern/trap/trap.h	/^    uint16_t tf_gs;$/;"	m	struct:trapframe
tf_padding0	kern/trap/trap.h	/^    uint16_t tf_padding0;$/;"	m	struct:trapframe
tf_padding1	kern/trap/trap.h	/^    uint16_t tf_padding1;$/;"	m	struct:trapframe
tf_padding2	kern/trap/trap.h	/^    uint16_t tf_padding2;$/;"	m	struct:trapframe
tf_padding3	kern/trap/trap.h	/^    uint16_t tf_padding3;$/;"	m	struct:trapframe
tf_padding4	kern/trap/trap.h	/^    uint16_t tf_padding4;$/;"	m	struct:trapframe
tf_padding5	kern/trap/trap.h	/^    uint16_t tf_padding5;$/;"	m	struct:trapframe
tf_regs	kern/trap/trap.h	/^    struct pushregs tf_regs;$/;"	m	struct:trapframe	typeref:struct:trapframe::pushregs
tf_ss	kern/trap/trap.h	/^    uint16_t tf_ss;$/;"	m	struct:trapframe
tf_trapno	kern/trap/trap.h	/^    uint32_t tf_trapno;$/;"	m	struct:trapframe
trapframe	kern/trap/trap.h	/^struct trapframe {$/;"	s
__alltraps	kern/trap/trapentry.S	/^__alltraps:$/;"	l
__trapret	kern/trap/trapentry.S	/^__trapret:$/;"	l
forkrets	kern/trap/trapentry.S	/^forkrets:$/;"	l
__vectors	kern/trap/vectors.S	/^__vectors:$/;"	l
vector0	kern/trap/vectors.S	/^vector0:$/;"	l
vector1	kern/trap/vectors.S	/^vector1:$/;"	l
vector10	kern/trap/vectors.S	/^vector10:$/;"	l
vector100	kern/trap/vectors.S	/^vector100:$/;"	l
vector101	kern/trap/vectors.S	/^vector101:$/;"	l
vector102	kern/trap/vectors.S	/^vector102:$/;"	l
vector103	kern/trap/vectors.S	/^vector103:$/;"	l
vector104	kern/trap/vectors.S	/^vector104:$/;"	l
vector105	kern/trap/vectors.S	/^vector105:$/;"	l
vector106	kern/trap/vectors.S	/^vector106:$/;"	l
vector107	kern/trap/vectors.S	/^vector107:$/;"	l
vector108	kern/trap/vectors.S	/^vector108:$/;"	l
vector109	kern/trap/vectors.S	/^vector109:$/;"	l
vector11	kern/trap/vectors.S	/^vector11:$/;"	l
vector110	kern/trap/vectors.S	/^vector110:$/;"	l
vector111	kern/trap/vectors.S	/^vector111:$/;"	l
vector112	kern/trap/vectors.S	/^vector112:$/;"	l
vector113	kern/trap/vectors.S	/^vector113:$/;"	l
vector114	kern/trap/vectors.S	/^vector114:$/;"	l
vector115	kern/trap/vectors.S	/^vector115:$/;"	l
vector116	kern/trap/vectors.S	/^vector116:$/;"	l
vector117	kern/trap/vectors.S	/^vector117:$/;"	l
vector118	kern/trap/vectors.S	/^vector118:$/;"	l
vector119	kern/trap/vectors.S	/^vector119:$/;"	l
vector12	kern/trap/vectors.S	/^vector12:$/;"	l
vector120	kern/trap/vectors.S	/^vector120:$/;"	l
vector121	kern/trap/vectors.S	/^vector121:$/;"	l
vector122	kern/trap/vectors.S	/^vector122:$/;"	l
vector123	kern/trap/vectors.S	/^vector123:$/;"	l
vector124	kern/trap/vectors.S	/^vector124:$/;"	l
vector125	kern/trap/vectors.S	/^vector125:$/;"	l
vector126	kern/trap/vectors.S	/^vector126:$/;"	l
vector127	kern/trap/vectors.S	/^vector127:$/;"	l
vector128	kern/trap/vectors.S	/^vector128:$/;"	l
vector129	kern/trap/vectors.S	/^vector129:$/;"	l
vector13	kern/trap/vectors.S	/^vector13:$/;"	l
vector130	kern/trap/vectors.S	/^vector130:$/;"	l
vector131	kern/trap/vectors.S	/^vector131:$/;"	l
vector132	kern/trap/vectors.S	/^vector132:$/;"	l
vector133	kern/trap/vectors.S	/^vector133:$/;"	l
vector134	kern/trap/vectors.S	/^vector134:$/;"	l
vector135	kern/trap/vectors.S	/^vector135:$/;"	l
vector136	kern/trap/vectors.S	/^vector136:$/;"	l
vector137	kern/trap/vectors.S	/^vector137:$/;"	l
vector138	kern/trap/vectors.S	/^vector138:$/;"	l
vector139	kern/trap/vectors.S	/^vector139:$/;"	l
vector14	kern/trap/vectors.S	/^vector14:$/;"	l
vector140	kern/trap/vectors.S	/^vector140:$/;"	l
vector141	kern/trap/vectors.S	/^vector141:$/;"	l
vector142	kern/trap/vectors.S	/^vector142:$/;"	l
vector143	kern/trap/vectors.S	/^vector143:$/;"	l
vector144	kern/trap/vectors.S	/^vector144:$/;"	l
vector145	kern/trap/vectors.S	/^vector145:$/;"	l
vector146	kern/trap/vectors.S	/^vector146:$/;"	l
vector147	kern/trap/vectors.S	/^vector147:$/;"	l
vector148	kern/trap/vectors.S	/^vector148:$/;"	l
vector149	kern/trap/vectors.S	/^vector149:$/;"	l
vector15	kern/trap/vectors.S	/^vector15:$/;"	l
vector150	kern/trap/vectors.S	/^vector150:$/;"	l
vector151	kern/trap/vectors.S	/^vector151:$/;"	l
vector152	kern/trap/vectors.S	/^vector152:$/;"	l
vector153	kern/trap/vectors.S	/^vector153:$/;"	l
vector154	kern/trap/vectors.S	/^vector154:$/;"	l
vector155	kern/trap/vectors.S	/^vector155:$/;"	l
vector156	kern/trap/vectors.S	/^vector156:$/;"	l
vector157	kern/trap/vectors.S	/^vector157:$/;"	l
vector158	kern/trap/vectors.S	/^vector158:$/;"	l
vector159	kern/trap/vectors.S	/^vector159:$/;"	l
vector16	kern/trap/vectors.S	/^vector16:$/;"	l
vector160	kern/trap/vectors.S	/^vector160:$/;"	l
vector161	kern/trap/vectors.S	/^vector161:$/;"	l
vector162	kern/trap/vectors.S	/^vector162:$/;"	l
vector163	kern/trap/vectors.S	/^vector163:$/;"	l
vector164	kern/trap/vectors.S	/^vector164:$/;"	l
vector165	kern/trap/vectors.S	/^vector165:$/;"	l
vector166	kern/trap/vectors.S	/^vector166:$/;"	l
vector167	kern/trap/vectors.S	/^vector167:$/;"	l
vector168	kern/trap/vectors.S	/^vector168:$/;"	l
vector169	kern/trap/vectors.S	/^vector169:$/;"	l
vector17	kern/trap/vectors.S	/^vector17:$/;"	l
vector170	kern/trap/vectors.S	/^vector170:$/;"	l
vector171	kern/trap/vectors.S	/^vector171:$/;"	l
vector172	kern/trap/vectors.S	/^vector172:$/;"	l
vector173	kern/trap/vectors.S	/^vector173:$/;"	l
vector174	kern/trap/vectors.S	/^vector174:$/;"	l
vector175	kern/trap/vectors.S	/^vector175:$/;"	l
vector176	kern/trap/vectors.S	/^vector176:$/;"	l
vector177	kern/trap/vectors.S	/^vector177:$/;"	l
vector178	kern/trap/vectors.S	/^vector178:$/;"	l
vector179	kern/trap/vectors.S	/^vector179:$/;"	l
vector18	kern/trap/vectors.S	/^vector18:$/;"	l
vector180	kern/trap/vectors.S	/^vector180:$/;"	l
vector181	kern/trap/vectors.S	/^vector181:$/;"	l
vector182	kern/trap/vectors.S	/^vector182:$/;"	l
vector183	kern/trap/vectors.S	/^vector183:$/;"	l
vector184	kern/trap/vectors.S	/^vector184:$/;"	l
vector185	kern/trap/vectors.S	/^vector185:$/;"	l
vector186	kern/trap/vectors.S	/^vector186:$/;"	l
vector187	kern/trap/vectors.S	/^vector187:$/;"	l
vector188	kern/trap/vectors.S	/^vector188:$/;"	l
vector189	kern/trap/vectors.S	/^vector189:$/;"	l
vector19	kern/trap/vectors.S	/^vector19:$/;"	l
vector190	kern/trap/vectors.S	/^vector190:$/;"	l
vector191	kern/trap/vectors.S	/^vector191:$/;"	l
vector192	kern/trap/vectors.S	/^vector192:$/;"	l
vector193	kern/trap/vectors.S	/^vector193:$/;"	l
vector194	kern/trap/vectors.S	/^vector194:$/;"	l
vector195	kern/trap/vectors.S	/^vector195:$/;"	l
vector196	kern/trap/vectors.S	/^vector196:$/;"	l
vector197	kern/trap/vectors.S	/^vector197:$/;"	l
vector198	kern/trap/vectors.S	/^vector198:$/;"	l
vector199	kern/trap/vectors.S	/^vector199:$/;"	l
vector2	kern/trap/vectors.S	/^vector2:$/;"	l
vector20	kern/trap/vectors.S	/^vector20:$/;"	l
vector200	kern/trap/vectors.S	/^vector200:$/;"	l
vector201	kern/trap/vectors.S	/^vector201:$/;"	l
vector202	kern/trap/vectors.S	/^vector202:$/;"	l
vector203	kern/trap/vectors.S	/^vector203:$/;"	l
vector204	kern/trap/vectors.S	/^vector204:$/;"	l
vector205	kern/trap/vectors.S	/^vector205:$/;"	l
vector206	kern/trap/vectors.S	/^vector206:$/;"	l
vector207	kern/trap/vectors.S	/^vector207:$/;"	l
vector208	kern/trap/vectors.S	/^vector208:$/;"	l
vector209	kern/trap/vectors.S	/^vector209:$/;"	l
vector21	kern/trap/vectors.S	/^vector21:$/;"	l
vector210	kern/trap/vectors.S	/^vector210:$/;"	l
vector211	kern/trap/vectors.S	/^vector211:$/;"	l
vector212	kern/trap/vectors.S	/^vector212:$/;"	l
vector213	kern/trap/vectors.S	/^vector213:$/;"	l
vector214	kern/trap/vectors.S	/^vector214:$/;"	l
vector215	kern/trap/vectors.S	/^vector215:$/;"	l
vector216	kern/trap/vectors.S	/^vector216:$/;"	l
vector217	kern/trap/vectors.S	/^vector217:$/;"	l
vector218	kern/trap/vectors.S	/^vector218:$/;"	l
vector219	kern/trap/vectors.S	/^vector219:$/;"	l
vector22	kern/trap/vectors.S	/^vector22:$/;"	l
vector220	kern/trap/vectors.S	/^vector220:$/;"	l
vector221	kern/trap/vectors.S	/^vector221:$/;"	l
vector222	kern/trap/vectors.S	/^vector222:$/;"	l
vector223	kern/trap/vectors.S	/^vector223:$/;"	l
vector224	kern/trap/vectors.S	/^vector224:$/;"	l
vector225	kern/trap/vectors.S	/^vector225:$/;"	l
vector226	kern/trap/vectors.S	/^vector226:$/;"	l
vector227	kern/trap/vectors.S	/^vector227:$/;"	l
vector228	kern/trap/vectors.S	/^vector228:$/;"	l
vector229	kern/trap/vectors.S	/^vector229:$/;"	l
vector23	kern/trap/vectors.S	/^vector23:$/;"	l
vector230	kern/trap/vectors.S	/^vector230:$/;"	l
vector231	kern/trap/vectors.S	/^vector231:$/;"	l
vector232	kern/trap/vectors.S	/^vector232:$/;"	l
vector233	kern/trap/vectors.S	/^vector233:$/;"	l
vector234	kern/trap/vectors.S	/^vector234:$/;"	l
vector235	kern/trap/vectors.S	/^vector235:$/;"	l
vector236	kern/trap/vectors.S	/^vector236:$/;"	l
vector237	kern/trap/vectors.S	/^vector237:$/;"	l
vector238	kern/trap/vectors.S	/^vector238:$/;"	l
vector239	kern/trap/vectors.S	/^vector239:$/;"	l
vector24	kern/trap/vectors.S	/^vector24:$/;"	l
vector240	kern/trap/vectors.S	/^vector240:$/;"	l
vector241	kern/trap/vectors.S	/^vector241:$/;"	l
vector242	kern/trap/vectors.S	/^vector242:$/;"	l
vector243	kern/trap/vectors.S	/^vector243:$/;"	l
vector244	kern/trap/vectors.S	/^vector244:$/;"	l
vector245	kern/trap/vectors.S	/^vector245:$/;"	l
vector246	kern/trap/vectors.S	/^vector246:$/;"	l
vector247	kern/trap/vectors.S	/^vector247:$/;"	l
vector248	kern/trap/vectors.S	/^vector248:$/;"	l
vector249	kern/trap/vectors.S	/^vector249:$/;"	l
vector25	kern/trap/vectors.S	/^vector25:$/;"	l
vector250	kern/trap/vectors.S	/^vector250:$/;"	l
vector251	kern/trap/vectors.S	/^vector251:$/;"	l
vector252	kern/trap/vectors.S	/^vector252:$/;"	l
vector253	kern/trap/vectors.S	/^vector253:$/;"	l
vector254	kern/trap/vectors.S	/^vector254:$/;"	l
vector255	kern/trap/vectors.S	/^vector255:$/;"	l
vector26	kern/trap/vectors.S	/^vector26:$/;"	l
vector27	kern/trap/vectors.S	/^vector27:$/;"	l
vector28	kern/trap/vectors.S	/^vector28:$/;"	l
vector29	kern/trap/vectors.S	/^vector29:$/;"	l
vector3	kern/trap/vectors.S	/^vector3:$/;"	l
vector30	kern/trap/vectors.S	/^vector30:$/;"	l
vector31	kern/trap/vectors.S	/^vector31:$/;"	l
vector32	kern/trap/vectors.S	/^vector32:$/;"	l
vector33	kern/trap/vectors.S	/^vector33:$/;"	l
vector34	kern/trap/vectors.S	/^vector34:$/;"	l
vector35	kern/trap/vectors.S	/^vector35:$/;"	l
vector36	kern/trap/vectors.S	/^vector36:$/;"	l
vector37	kern/trap/vectors.S	/^vector37:$/;"	l
vector38	kern/trap/vectors.S	/^vector38:$/;"	l
vector39	kern/trap/vectors.S	/^vector39:$/;"	l
vector4	kern/trap/vectors.S	/^vector4:$/;"	l
vector40	kern/trap/vectors.S	/^vector40:$/;"	l
vector41	kern/trap/vectors.S	/^vector41:$/;"	l
vector42	kern/trap/vectors.S	/^vector42:$/;"	l
vector43	kern/trap/vectors.S	/^vector43:$/;"	l
vector44	kern/trap/vectors.S	/^vector44:$/;"	l
vector45	kern/trap/vectors.S	/^vector45:$/;"	l
vector46	kern/trap/vectors.S	/^vector46:$/;"	l
vector47	kern/trap/vectors.S	/^vector47:$/;"	l
vector48	kern/trap/vectors.S	/^vector48:$/;"	l
vector49	kern/trap/vectors.S	/^vector49:$/;"	l
vector5	kern/trap/vectors.S	/^vector5:$/;"	l
vector50	kern/trap/vectors.S	/^vector50:$/;"	l
vector51	kern/trap/vectors.S	/^vector51:$/;"	l
vector52	kern/trap/vectors.S	/^vector52:$/;"	l
vector53	kern/trap/vectors.S	/^vector53:$/;"	l
vector54	kern/trap/vectors.S	/^vector54:$/;"	l
vector55	kern/trap/vectors.S	/^vector55:$/;"	l
vector56	kern/trap/vectors.S	/^vector56:$/;"	l
vector57	kern/trap/vectors.S	/^vector57:$/;"	l
vector58	kern/trap/vectors.S	/^vector58:$/;"	l
vector59	kern/trap/vectors.S	/^vector59:$/;"	l
vector6	kern/trap/vectors.S	/^vector6:$/;"	l
vector60	kern/trap/vectors.S	/^vector60:$/;"	l
vector61	kern/trap/vectors.S	/^vector61:$/;"	l
vector62	kern/trap/vectors.S	/^vector62:$/;"	l
vector63	kern/trap/vectors.S	/^vector63:$/;"	l
vector64	kern/trap/vectors.S	/^vector64:$/;"	l
vector65	kern/trap/vectors.S	/^vector65:$/;"	l
vector66	kern/trap/vectors.S	/^vector66:$/;"	l
vector67	kern/trap/vectors.S	/^vector67:$/;"	l
vector68	kern/trap/vectors.S	/^vector68:$/;"	l
vector69	kern/trap/vectors.S	/^vector69:$/;"	l
vector7	kern/trap/vectors.S	/^vector7:$/;"	l
vector70	kern/trap/vectors.S	/^vector70:$/;"	l
vector71	kern/trap/vectors.S	/^vector71:$/;"	l
vector72	kern/trap/vectors.S	/^vector72:$/;"	l
vector73	kern/trap/vectors.S	/^vector73:$/;"	l
vector74	kern/trap/vectors.S	/^vector74:$/;"	l
vector75	kern/trap/vectors.S	/^vector75:$/;"	l
vector76	kern/trap/vectors.S	/^vector76:$/;"	l
vector77	kern/trap/vectors.S	/^vector77:$/;"	l
vector78	kern/trap/vectors.S	/^vector78:$/;"	l
vector79	kern/trap/vectors.S	/^vector79:$/;"	l
vector8	kern/trap/vectors.S	/^vector8:$/;"	l
vector80	kern/trap/vectors.S	/^vector80:$/;"	l
vector81	kern/trap/vectors.S	/^vector81:$/;"	l
vector82	kern/trap/vectors.S	/^vector82:$/;"	l
vector83	kern/trap/vectors.S	/^vector83:$/;"	l
vector84	kern/trap/vectors.S	/^vector84:$/;"	l
vector85	kern/trap/vectors.S	/^vector85:$/;"	l
vector86	kern/trap/vectors.S	/^vector86:$/;"	l
vector87	kern/trap/vectors.S	/^vector87:$/;"	l
vector88	kern/trap/vectors.S	/^vector88:$/;"	l
vector89	kern/trap/vectors.S	/^vector89:$/;"	l
vector9	kern/trap/vectors.S	/^vector9:$/;"	l
vector90	kern/trap/vectors.S	/^vector90:$/;"	l
vector91	kern/trap/vectors.S	/^vector91:$/;"	l
vector92	kern/trap/vectors.S	/^vector92:$/;"	l
vector93	kern/trap/vectors.S	/^vector93:$/;"	l
vector94	kern/trap/vectors.S	/^vector94:$/;"	l
vector95	kern/trap/vectors.S	/^vector95:$/;"	l
vector96	kern/trap/vectors.S	/^vector96:$/;"	l
vector97	kern/trap/vectors.S	/^vector97:$/;"	l
vector98	kern/trap/vectors.S	/^vector98:$/;"	l
vector99	kern/trap/vectors.S	/^vector99:$/;"	l
__LIBS_ATOMIC_H__	libs/atomic.h	2;"	d
change_bit	libs/atomic.h	/^change_bit(int nr, volatile void *addr) {$/;"	f
clear_bit	libs/atomic.h	/^clear_bit(int nr, volatile void *addr) {$/;"	f
set_bit	libs/atomic.h	/^set_bit(int nr, volatile void *addr) {$/;"	f
test_and_clear_bit	libs/atomic.h	/^test_and_clear_bit(int nr, volatile void *addr) {$/;"	f
test_and_set_bit	libs/atomic.h	/^test_and_set_bit(int nr, volatile void *addr) {$/;"	f
test_bit	libs/atomic.h	/^test_bit(int nr, volatile void *addr) {$/;"	f
CHAR_BIT	libs/defs.h	12;"	d
NULL	libs/defs.h	5;"	d
ROUNDDOWN	libs/defs.h	48;"	d
ROUNDUP	libs/defs.h	54;"	d
ROUNDUP_DIV	libs/defs.h	60;"	d
__LIBS_DEFS_H__	libs/defs.h	2;"	d
__always_inline	libs/defs.h	8;"	d
__noinline	libs/defs.h	9;"	d
__noreturn	libs/defs.h	10;"	d
bool	libs/defs.h	/^typedef int bool;$/;"	t
int16_t	libs/defs.h	/^typedef short int16_t;$/;"	t
int32_t	libs/defs.h	/^typedef int int32_t;$/;"	t
int64_t	libs/defs.h	/^typedef long long int64_t;$/;"	t
int8_t	libs/defs.h	/^typedef char int8_t;$/;"	t
intptr_t	libs/defs.h	/^typedef int32_t intptr_t;$/;"	t
off_t	libs/defs.h	/^typedef intptr_t off_t;$/;"	t
offsetof	libs/defs.h	66;"	d
ppn_t	libs/defs.h	/^typedef size_t ppn_t;$/;"	t
size_t	libs/defs.h	/^typedef uintptr_t size_t;$/;"	t
to_struct	libs/defs.h	75;"	d
uint16_t	libs/defs.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	libs/defs.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	libs/defs.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	libs/defs.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	libs/defs.h	/^typedef uint32_t uintptr_t;$/;"	t
__LIBS_DIRENT_H__	libs/dirent.h	2;"	d
dirent	libs/dirent.h	/^struct dirent {$/;"	s
name	libs/dirent.h	/^    char name[FS_MAX_FNAME_LEN + 1];$/;"	m	struct:dirent
offset	libs/dirent.h	/^    off_t offset;$/;"	m	struct:dirent
ELF_MAGIC	libs/elf.h	6;"	d
ELF_PF_R	libs/elf.h	45;"	d
ELF_PF_W	libs/elf.h	44;"	d
ELF_PF_X	libs/elf.h	43;"	d
ELF_PT_LOAD	libs/elf.h	40;"	d
__LIBS_ELF_H__	libs/elf.h	2;"	d
e_ehsize	libs/elf.h	/^    uint16_t e_ehsize;    \/\/ size of this elf header$/;"	m	struct:elfhdr
e_elf	libs/elf.h	/^    uint8_t e_elf[12];$/;"	m	struct:elfhdr
e_entry	libs/elf.h	/^    uint32_t e_entry;     \/\/ entry point if executable$/;"	m	struct:elfhdr
e_flags	libs/elf.h	/^    uint32_t e_flags;     \/\/ architecture-specific flags, usually 0$/;"	m	struct:elfhdr
e_machine	libs/elf.h	/^    uint16_t e_machine;   \/\/ 3=x86, 4=68K, etc.$/;"	m	struct:elfhdr
e_magic	libs/elf.h	/^    uint32_t e_magic;     \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
e_phentsize	libs/elf.h	/^    uint16_t e_phentsize; \/\/ size of an entry in program header$/;"	m	struct:elfhdr
e_phnum	libs/elf.h	/^    uint16_t e_phnum;     \/\/ number of entries in program header or 0$/;"	m	struct:elfhdr
e_phoff	libs/elf.h	/^    uint32_t e_phoff;     \/\/ file position of program header or 0$/;"	m	struct:elfhdr
e_shentsize	libs/elf.h	/^    uint16_t e_shentsize; \/\/ size of an entry in section header$/;"	m	struct:elfhdr
e_shnum	libs/elf.h	/^    uint16_t e_shnum;     \/\/ number of entries in section header or 0$/;"	m	struct:elfhdr
e_shoff	libs/elf.h	/^    uint32_t e_shoff;     \/\/ file position of section header or 0$/;"	m	struct:elfhdr
e_shstrndx	libs/elf.h	/^    uint16_t e_shstrndx;  \/\/ section number that contains section name strings$/;"	m	struct:elfhdr
e_type	libs/elf.h	/^    uint16_t e_type;      \/\/ 1=relocatable, 2=executable, 3=shared object, 4=core image$/;"	m	struct:elfhdr
e_version	libs/elf.h	/^    uint32_t e_version;   \/\/ file version, always 1$/;"	m	struct:elfhdr
elfhdr	libs/elf.h	/^struct elfhdr {$/;"	s
p_align	libs/elf.h	/^    uint32_t p_align;  \/\/ required alignment, invariably hardware page size$/;"	m	struct:proghdr
p_filesz	libs/elf.h	/^    uint32_t p_filesz; \/\/ size of segment in file$/;"	m	struct:proghdr
p_flags	libs/elf.h	/^    uint32_t p_flags;  \/\/ read\/write\/execute bits$/;"	m	struct:proghdr
p_memsz	libs/elf.h	/^    uint32_t p_memsz;  \/\/ size of segment in memory (bigger if contains bss）$/;"	m	struct:proghdr
p_offset	libs/elf.h	/^    uint32_t p_offset; \/\/ file offset of segment$/;"	m	struct:proghdr
p_pa	libs/elf.h	/^    uint32_t p_pa;     \/\/ physical address, not used$/;"	m	struct:proghdr
p_type	libs/elf.h	/^    uint32_t p_type;   \/\/ loadable code or data, dynamic linking info,etc.$/;"	m	struct:proghdr
p_va	libs/elf.h	/^    uint32_t p_va;     \/\/ virtual address to map segment$/;"	m	struct:proghdr
proghdr	libs/elf.h	/^struct proghdr {$/;"	s
E_BAD_PROC	libs/error.h	6;"	d
E_BUSY	libs/error.h	19;"	d
E_EXISTS	libs/error.h	27;"	d
E_FAULT	libs/error.h	10;"	d
E_INVAL	libs/error.h	7;"	d
E_INVAL_ELF	libs/error.h	12;"	d
E_ISDIR	libs/error.h	21;"	d
E_KILLED	libs/error.h	13;"	d
E_MAX_OPEN	libs/error.h	26;"	d
E_NA_DEV	libs/error.h	18;"	d
E_NOENT	libs/error.h	20;"	d
E_NOTDIR	libs/error.h	22;"	d
E_NOTEMPTY	libs/error.h	28;"	d
E_NO_DEV	libs/error.h	17;"	d
E_NO_FREE_PROC	libs/error.h	9;"	d
E_NO_MEM	libs/error.h	8;"	d
E_PANIC	libs/error.h	14;"	d
E_SEEK	libs/error.h	25;"	d
E_SWAP_FAULT	libs/error.h	11;"	d
E_TIMEOUT	libs/error.h	15;"	d
E_TOO_BIG	libs/error.h	16;"	d
E_UNIMP	libs/error.h	24;"	d
E_UNSPECIFIED	libs/error.h	5;"	d
E_XDEV	libs/error.h	23;"	d
MAXERROR	libs/error.h	30;"	d
__LIBS_ERROR_H__	libs/error.h	2;"	d
GOLDEN_RATIO_PRIME_32	libs/hash.c	4;"	d	file:
hash32	libs/hash.c	/^hash32(uint32_t val, unsigned int bits) {$/;"	f
__LIBS_LIST_H__	libs/list.h	2;"	d
__list_add	libs/list.h	/^__list_add(list_entry_t *elm, list_entry_t *prev, list_entry_t *next) {$/;"	f
__list_del	libs/list.h	/^__list_del(list_entry_t *prev, list_entry_t *next) {$/;"	f
list_add	libs/list.h	/^list_add(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_after	libs/list.h	/^list_add_after(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_before	libs/list.h	/^list_add_before(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_del	libs/list.h	/^list_del(list_entry_t *listelm) {$/;"	f
list_del_init	libs/list.h	/^list_del_init(list_entry_t *listelm) {$/;"	f
list_empty	libs/list.h	/^list_empty(list_entry_t *list) {$/;"	f
list_entry	libs/list.h	/^struct list_entry {$/;"	s
list_entry_t	libs/list.h	/^typedef struct list_entry list_entry_t;$/;"	t	typeref:struct:list_entry
list_init	libs/list.h	/^list_init(list_entry_t *elm) {$/;"	f
list_next	libs/list.h	/^list_next(list_entry_t *listelm) {$/;"	f
list_prev	libs/list.h	/^list_prev(list_entry_t *listelm) {$/;"	f
next	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::
prev	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::list_entry
buf	libs/printfmt.c	/^    char *buf;          \/\/ address pointer points to the first unused memory$/;"	m	struct:sprintbuf	file:
cnt	libs/printfmt.c	/^    int cnt;            \/\/ the number of characters that have been placed in this buffer$/;"	m	struct:sprintbuf	file:
ebuf	libs/printfmt.c	/^    char *ebuf;         \/\/ points the end of the buffer$/;"	m	struct:sprintbuf	file:
error_string	libs/printfmt.c	/^static const char * const error_string[MAXERROR + 1] = {$/;"	v	file:
getint	libs/printfmt.c	/^getint(va_list *ap, int lflag) {$/;"	f	file:
getuint	libs/printfmt.c	/^getuint(va_list *ap, int lflag) {$/;"	f	file:
printfmt	libs/printfmt.c	/^printfmt(void (*putch)(int, void*, int), int fd, void *putdat, const char *fmt, ...) {$/;"	f
printnum	libs/printfmt.c	/^printnum(void (*putch)(int, void*, int), int fd, void *putdat,$/;"	f	file:
snprintf	libs/printfmt.c	/^snprintf(char *str, size_t size, const char *fmt, ...) {$/;"	f
sprintbuf	libs/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	libs/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b) {$/;"	f	file:
vprintfmt	libs/printfmt.c	/^vprintfmt(void (*putch)(int, void*, int), int fd, void *putdat, const char *fmt, va_list ap) {$/;"	f
vsnprintf	libs/printfmt.c	/^vsnprintf(char *str, size_t size, const char *fmt, va_list ap) {$/;"	f
next	libs/rand.c	/^static unsigned long long next = 1;$/;"	v	file:
rand	libs/rand.c	/^rand(void) {$/;"	f
srand	libs/rand.c	/^srand(unsigned int seed) {$/;"	f
__LIBS_SKEW_HEAP_H__	libs/skew_heap.h	2;"	d
compare_f	libs/skew_heap.h	/^typedef int(*compare_f)(void *a, void *b);$/;"	t
left	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::
parent	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::skew_heap_entry
right	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::
skew_heap_entry	libs/skew_heap.h	/^struct skew_heap_entry {$/;"	s
skew_heap_entry_t	libs/skew_heap.h	/^typedef struct skew_heap_entry skew_heap_entry_t;$/;"	t	typeref:struct:skew_heap_entry
skew_heap_init	libs/skew_heap.h	/^skew_heap_init(skew_heap_entry_t *a)$/;"	f
skew_heap_insert	libs/skew_heap.h	/^skew_heap_insert(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
skew_heap_merge	libs/skew_heap.h	/^skew_heap_merge(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
skew_heap_remove	libs/skew_heap.h	/^skew_heap_remove(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
S_IFBLK	libs/stat.h	18;"	d
S_IFCHR	libs/stat.h	17;"	d
S_IFDIR	libs/stat.h	15;"	d
S_IFLNK	libs/stat.h	16;"	d
S_IFMT	libs/stat.h	13;"	d
S_IFREG	libs/stat.h	14;"	d
S_ISBLK	libs/stat.h	24;"	d
S_ISCHR	libs/stat.h	23;"	d
S_ISDIR	libs/stat.h	21;"	d
S_ISLNK	libs/stat.h	22;"	d
S_ISREG	libs/stat.h	20;"	d
__LIBS_STAT_H__	libs/stat.h	2;"	d
st_blocks	libs/stat.h	/^    size_t st_blocks;                   \/\/ number of blocks file is using$/;"	m	struct:stat
st_mode	libs/stat.h	/^    uint32_t st_mode;                   \/\/ protection mode and file type$/;"	m	struct:stat
st_nlinks	libs/stat.h	/^    size_t st_nlinks;                   \/\/ number of hard links$/;"	m	struct:stat
st_size	libs/stat.h	/^    size_t st_size;                     \/\/ file size (bytes)$/;"	m	struct:stat
stat	libs/stat.h	/^struct stat {$/;"	s
__LIBS_STDARG_H__	libs/stdarg.h	2;"	d
va_arg	libs/stdarg.h	8;"	d
va_end	libs/stdarg.h	9;"	d
va_list	libs/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	libs/stdarg.h	7;"	d
__LIBS_STDIO_H__	libs/stdio.h	2;"	d
RAND_MAX	libs/stdlib.h	7;"	d
__LIBS_STDLIB_H__	libs/stdlib.h	2;"	d
memcmp	libs/string.c	/^memcmp(const void *v1, const void *v2, size_t n) {$/;"	f
memcpy	libs/string.c	/^memcpy(void *dst, const void *src, size_t n) {$/;"	f
memmove	libs/string.c	/^memmove(void *dst, const void *src, size_t n) {$/;"	f
memset	libs/string.c	/^memset(void *s, char c, size_t n) {$/;"	f
strcat	libs/string.c	/^strcat(char *dst, const char *src) {$/;"	f
strchr	libs/string.c	/^strchr(const char *s, char c) {$/;"	f
strcmp	libs/string.c	/^strcmp(const char *s1, const char *s2) {$/;"	f
strcpy	libs/string.c	/^strcpy(char *dst, const char *src) {$/;"	f
strfind	libs/string.c	/^strfind(const char *s, char c) {$/;"	f
strlen	libs/string.c	/^strlen(const char *s) {$/;"	f
strncmp	libs/string.c	/^strncmp(const char *s1, const char *s2, size_t n) {$/;"	f
strncpy	libs/string.c	/^strncpy(char *dst, const char *src, size_t len) {$/;"	f
strnlen	libs/string.c	/^strnlen(const char *s, size_t len) {$/;"	f
strtol	libs/string.c	/^strtol(const char *s, char **endptr, int base) {$/;"	f
__LIBS_STRING_H__	libs/string.h	2;"	d
CLONE_FS	libs/unistd.h	38;"	d
CLONE_THREAD	libs/unistd.h	37;"	d
CLONE_VM	libs/unistd.h	36;"	d
EXEC_MAX_ARG_LEN	libs/unistd.h	65;"	d
EXEC_MAX_ARG_NUM	libs/unistd.h	64;"	d
FS_MAX_DNAME_LEN	libs/unistd.h	60;"	d
FS_MAX_FNAME_LEN	libs/unistd.h	61;"	d
FS_MAX_FPATH_LEN	libs/unistd.h	62;"	d
LSEEK_CUR	libs/unistd.h	57;"	d
LSEEK_END	libs/unistd.h	58;"	d
LSEEK_SET	libs/unistd.h	56;"	d
NO_FD	libs/unistd.h	53;"	d
O_ACCMODE	libs/unistd.h	51;"	d
O_APPEND	libs/unistd.h	49;"	d
O_CREAT	libs/unistd.h	46;"	d
O_EXCL	libs/unistd.h	47;"	d
O_RDONLY	libs/unistd.h	42;"	d
O_RDWR	libs/unistd.h	44;"	d
O_TRUNC	libs/unistd.h	48;"	d
O_WRONLY	libs/unistd.h	43;"	d
SYS_clone	libs/unistd.h	11;"	d
SYS_close	libs/unistd.h	23;"	d
SYS_dup	libs/unistd.h	31;"	d
SYS_exec	libs/unistd.h	10;"	d
SYS_exit	libs/unistd.h	7;"	d
SYS_fork	libs/unistd.h	8;"	d
SYS_fstat	libs/unistd.h	27;"	d
SYS_fsync	libs/unistd.h	28;"	d
SYS_getcwd	libs/unistd.h	29;"	d
SYS_getdirentry	libs/unistd.h	30;"	d
SYS_getpid	libs/unistd.h	16;"	d
SYS_gettime	libs/unistd.h	15;"	d
SYS_kill	libs/unistd.h	14;"	d
SYS_lab6_set_priority	libs/unistd.h	33;"	d
SYS_mmap	libs/unistd.h	17;"	d
SYS_munmap	libs/unistd.h	18;"	d
SYS_open	libs/unistd.h	22;"	d
SYS_pgdir	libs/unistd.h	21;"	d
SYS_putc	libs/unistd.h	20;"	d
SYS_read	libs/unistd.h	24;"	d
SYS_seek	libs/unistd.h	26;"	d
SYS_shmem	libs/unistd.h	19;"	d
SYS_sleep	libs/unistd.h	13;"	d
SYS_wait	libs/unistd.h	9;"	d
SYS_write	libs/unistd.h	25;"	d
SYS_yield	libs/unistd.h	12;"	d
T_SYSCALL	libs/unistd.h	4;"	d
__LIBS_UNISTD_H__	libs/unistd.h	2;"	d
__HAVE_ARCH_MEMCPY	libs/x86.h	291;"	d
__HAVE_ARCH_MEMMOVE	libs/x86.h	272;"	d
__HAVE_ARCH_MEMSET	libs/x86.h	258;"	d
__HAVE_ARCH_STRCMP	libs/x86.h	218;"	d
__HAVE_ARCH_STRCPY	libs/x86.h	242;"	d
__LIBS_X86_H__	libs/x86.h	2;"	d
__memcpy	libs/x86.h	/^__memcpy(void *dst, const void *src, size_t n) {$/;"	f
__memmove	libs/x86.h	/^__memmove(void *dst, const void *src, size_t n) {$/;"	f
__memset	libs/x86.h	/^__memset(void *s, char c, size_t n) {$/;"	f
__strcmp	libs/x86.h	/^__strcmp(const char *s1, const char *s2) {$/;"	f
__strcpy	libs/x86.h	/^__strcpy(char *dst, const char *src) {$/;"	f
barrier	libs/x86.h	21;"	d
breakpoint	libs/x86.h	/^breakpoint(void) {$/;"	f
cli	libs/x86.h	/^cli(void) {$/;"	f
do_div	libs/x86.h	6;"	d
inb	libs/x86.h	/^inb(uint16_t port) {$/;"	f
insl	libs/x86.h	/^insl(uint32_t port, void *addr, int cnt) {$/;"	f
invlpg	libs/x86.h	/^invlpg(void *addr) {$/;"	f
inw	libs/x86.h	/^inw(uint16_t port) {$/;"	f
lcr0	libs/x86.h	/^lcr0(uintptr_t cr0) {$/;"	f
lcr3	libs/x86.h	/^lcr3(uintptr_t cr3) {$/;"	f
lidt	libs/x86.h	/^lidt(struct pseudodesc *pd) {$/;"	f
ltr	libs/x86.h	/^ltr(uint16_t sel) {$/;"	f
outb	libs/x86.h	/^outb(uint16_t port, uint8_t data) {$/;"	f
outsl	libs/x86.h	/^outsl(uint32_t port, const void *addr, int cnt) {$/;"	f
outw	libs/x86.h	/^outw(uint16_t port, uint16_t data) {$/;"	f
pd_base	libs/x86.h	/^    uintptr_t pd_base;      \/\/ Base address$/;"	m	struct:pseudodesc
pd_lim	libs/x86.h	/^    uint16_t pd_lim;        \/\/ Limit$/;"	m	struct:pseudodesc
pseudodesc	libs/x86.h	/^struct pseudodesc {$/;"	s
rcr0	libs/x86.h	/^rcr0(void) {$/;"	f
rcr1	libs/x86.h	/^rcr1(void) {$/;"	f
rcr2	libs/x86.h	/^rcr2(void) {$/;"	f
rcr3	libs/x86.h	/^rcr3(void) {$/;"	f
read_dr	libs/x86.h	/^read_dr(unsigned regnum) {$/;"	f
read_ebp	libs/x86.h	/^read_ebp(void) {$/;"	f
read_eflags	libs/x86.h	/^read_eflags(void) {$/;"	f
sti	libs/x86.h	/^sti(void) {$/;"	f
write_dr	libs/x86.h	/^write_dr(unsigned regnum, uint32_t value) {$/;"	f
write_eflags	libs/x86.h	/^write_eflags(uint32_t eflags) {$/;"	f
Disassembly	obj/bootblock.asm	/^Disassembly of section .startup:$/;"	l
Disassembly	obj/bootblock.asm	/^Disassembly of section .text:$/;"	l
ELFHDR	obj/bootblock.asm	/^#define ELFHDR          ((struct elfhdr *)0x10000)      \/\/ scratch space$/;"	d
bad	obj/bootblock.asm	/^bad:$/;"	l
cont	obj/bootblock.asm	/^cont:$/;"	l
eph	obj/bootblock.asm	/^    eph = ph + ELFHDR->e_phnum;$/;"	d
ph	obj/bootblock.asm	/^    ph = (struct proghdr *)((uintptr_t)ELFHDR + ELFHDR->e_phoff);$/;"	d
probe_memory	obj/bootblock.asm	/^probe_memory:$/;"	l
protcseg	obj/bootblock.asm	/^protcseg:$/;"	l
spin	obj/bootblock.asm	/^spin:$/;"	l
start	obj/bootblock.asm	/^start:$/;"	l
start_probe	obj/bootblock.asm	/^start_probe:$/;"	l
static	obj/bootblock.asm	/^static inline uint8_t$/;"	l
static	obj/bootblock.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/bootblock.asm	/^static inline void$/;"	l
static	obj/bootblock.asm	/^static void$/;"	l
void	obj/bootblock.asm	/^void$/;"	l
Disassembly	obj/kernel.asm	/^Disassembly of section .text:$/;"	l
IOBUF_SIZE	obj/kernel.asm	/^#define IOBUF_SIZE                          4096$/;"	d
KERNEL_EXECVE3	obj/kernel.asm	/^#define KERNEL_EXECVE3(x, s, ...)               __KERNEL_EXECVE3(x, s, ##__VA_ARGS__)$/;"	d
MAXARGS	obj/kernel.asm	/^#define MAXARGS         16$/;"	d
NUM_SYSCALLS	obj/kernel.asm	/^#define NUM_SYSCALLS        ((sizeof(syscalls)) \/ (sizeof(syscalls[0])))$/;"	d
TICK_NUM	obj/kernel.asm	/^#define TICK_NUM 100$/;"	d
TIMER_16BIT	obj/kernel.asm	/^#define TIMER_16BIT     0x30                    \/\/ r\/w counter 16 bits, LSB first$/;"	d
TIMER_RATEGEN	obj/kernel.asm	/^#define TIMER_RATEGEN   0x04                    \/\/ mode 2, rate generator$/;"	d
WHITESPACE	obj/kernel.asm	/^#define WHITESPACE      " \\t\\n\\r"$/;"	d
__HAVE_ARCH_MEMCPY	obj/kernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/kernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/kernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/kernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/kernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__alltraps	obj/kernel.asm	/^__alltraps:$/;"	l
__slob_get_free_page	obj/kernel.asm	/^#define __slob_get_free_page(gfp) __slob_get_free_pages(gfp, 0)$/;"	d
__trapret	obj/kernel.asm	/^__trapret:$/;"	l
addr	obj/kernel.asm	/^    addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr_6845	obj/kernel.asm	/^        addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kernel.asm	/^        addr_6845 = MONO_BASE;$/;"	d
alen	obj/kernel.asm	/^                alen = resid;$/;"	d
alen	obj/kernel.asm	/^            alen = len;$/;"	d
alen	obj/kernel.asm	/^        alen = len;$/;"	d
alen	obj/kernel.asm	/^    alen = iob->io_resid - resid - 2;$/;"	d
aligned	obj/kernel.asm	/^			aligned = (slob_t *)ALIGN((unsigned long)cur, align);$/;"	d
altflag	obj/kernel.asm	/^            altflag = 1;$/;"	d
any_matches	obj/kernel.asm	/^        any_matches = 1;$/;"	d
bad_dup_cleanup_fs	obj/kernel.asm	/^bad_dup_cleanup_fs:$/;"	l
bad_dup_cleanup_mmap	obj/kernel.asm	/^bad_dup_cleanup_mmap:$/;"	l
bad_files_struct	obj/kernel.asm	/^bad_files_struct:$/;"	l
bad_fork_cleanup_fs	obj/kernel.asm	/^bad_fork_cleanup_fs:  \/\/for LAB8$/;"	l
bad_fork_cleanup_kstack	obj/kernel.asm	/^bad_fork_cleanup_kstack:$/;"	l
bad_fork_cleanup_proc	obj/kernel.asm	/^bad_fork_cleanup_proc:$/;"	l
bad_mm	obj/kernel.asm	/^bad_mm:$/;"	l
bad_pgdir_cleanup_mm	obj/kernel.asm	/^bad_pgdir_cleanup_mm:$/;"	l
base	obj/kernel.asm	/^            base = 10;$/;"	d
base	obj/kernel.asm	/^            base = 16;$/;"	d
base	obj/kernel.asm	/^            base = 8;$/;"	d
base	obj/kernel.asm	/^            base = p;$/;"	d
base	obj/kernel.asm	/^        base = 10;$/;"	d
bb	obj/kernel.asm	/^	bb = slob_alloc(sizeof(bigblock_t), gfp, 0);$/;"	d
begin	obj/kernel.asm	/^                begin = ROUNDUP(begin, PGSIZE);$/;"	d
begin	obj/kernel.asm	/^                begin = freemem;$/;"	d
bigblocks	obj/kernel.asm	/^		bigblocks = bb;$/;"	d
bool	obj/kernel.asm	/^bool copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable);$/;"	l
bool	obj/kernel.asm	/^bool copy_string(struct mm_struct *mm, char *dst, const char *src, size_t maxn);$/;"	l
bool	obj/kernel.asm	/^bool copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len);$/;"	l
bool	obj/kernel.asm	/^bool$/;"	l
boot_cr3	obj/kernel.asm	/^    boot_cr3 = PADDR(boot_pgdir);$/;"	d
boot_pgdir	obj/kernel.asm	/^    boot_pgdir = boot_alloc_page();$/;"	d
c	obj/kernel.asm	/^            c = cons.buf[cons.rpos ++];$/;"	d
c	obj/kernel.asm	/^        c = '\\b';$/;"	d
c	obj/kernel.asm	/^        c = cons_getc();$/;"	d
c	obj/kernel.asm	/^        c = getchar();$/;"	d
c	obj/kernel.asm	/^    c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c0100000	obj/kernel.asm	/^c0100000 <kern_entry>:$/;"	l
c0100000	obj/kernel.asm	/^c0100000:	0f 01 15 18 c0 14 00 	lgdtl  0x14c018$/;"	l
c0100007	obj/kernel.asm	/^c0100007:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c010000c	obj/kernel.asm	/^c010000c:	8e d8                	mov    %eax,%ds$/;"	l
c010000e	obj/kernel.asm	/^c010000e:	8e c0                	mov    %eax,%es$/;"	l
c0100010	obj/kernel.asm	/^c0100010:	8e d0                	mov    %eax,%ss$/;"	l
c0100012	obj/kernel.asm	/^c0100012:	ea 19 00 10 c0 08 00 	ljmp   $0x8,$0xc0100019$/;"	l
c0100019	obj/kernel.asm	/^c0100019 <relocated>:$/;"	l
c0100019	obj/kernel.asm	/^c0100019:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
c010001e	obj/kernel.asm	/^c010001e:	bc 00 c0 14 c0       	mov    $0xc014c000,%esp$/;"	l
c0100023	obj/kernel.asm	/^c0100023:	e8 02 00 00 00       	call   c010002a <kern_init>$/;"	l
c0100028	obj/kernel.asm	/^c0100028 <spin>:$/;"	l
c0100028	obj/kernel.asm	/^c0100028:	eb fe                	jmp    c0100028 <spin>$/;"	l
c010002a	obj/kernel.asm	/^c010002a <kern_init>:$/;"	l
c010002a	obj/kernel.asm	/^c010002a:	55                   	push   %ebp$/;"	l
c010002b	obj/kernel.asm	/^c010002b:	89 e5                	mov    %esp,%ebp$/;"	l
c010002d	obj/kernel.asm	/^c010002d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100030	obj/kernel.asm	/^c0100030:	ba e4 13 15 c0       	mov    $0xc01513e4,%edx$/;"	l
c0100035	obj/kernel.asm	/^c0100035:	b8 50 cf 14 c0       	mov    $0xc014cf50,%eax$/;"	l
c010003a	obj/kernel.asm	/^c010003a:	29 c2                	sub    %eax,%edx$/;"	l
c010003c	obj/kernel.asm	/^c010003c:	89 d0                	mov    %edx,%eax$/;"	l
c010003e	obj/kernel.asm	/^c010003e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100041	obj/kernel.asm	/^c0100041:	50                   	push   %eax$/;"	l
c0100042	obj/kernel.asm	/^c0100042:	6a 00                	push   $0x0$/;"	l
c0100044	obj/kernel.asm	/^c0100044:	68 50 cf 14 c0       	push   $0xc014cf50$/;"	l
c0100049	obj/kernel.asm	/^c0100049:	e8 9e 2f 01 00       	call   c0112fec <memset>$/;"	l
c010004e	obj/kernel.asm	/^c010004e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100051	obj/kernel.asm	/^c0100051:	e8 96 1e 00 00       	call   c0101eec <cons_init>$/;"	l
c0100056	obj/kernel.asm	/^c0100056:	c7 45 f4 c0 38 11 c0 	movl   $0xc01138c0,-0xc(%ebp)$/;"	l
c010005d	obj/kernel.asm	/^c010005d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100060	obj/kernel.asm	/^c0100060:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100063	obj/kernel.asm	/^c0100063:	68 dc 38 11 c0       	push   $0xc01138dc$/;"	l
c0100068	obj/kernel.asm	/^c0100068:	e8 fd 02 00 00       	call   c010036a <cprintf>$/;"	l
c010006d	obj/kernel.asm	/^c010006d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100070	obj/kernel.asm	/^c0100070:	e8 52 0a 00 00       	call   c0100ac7 <print_kerninfo>$/;"	l
c0100075	obj/kernel.asm	/^c0100075:	e8 92 00 00 00       	call   c010010c <grade_backtrace>$/;"	l
c010007a	obj/kernel.asm	/^c010007a:	e8 a2 3e 00 00       	call   c0103f21 <pmm_init>$/;"	l
c010007f	obj/kernel.asm	/^c010007f:	e8 d6 1f 00 00       	call   c010205a <pic_init>$/;"	l
c0100084	obj/kernel.asm	/^c0100084:	e8 33 21 00 00       	call   c01021bc <idt_init>$/;"	l
c0100089	obj/kernel.asm	/^c0100089:	e8 05 59 00 00       	call   c0105993 <vmm_init>$/;"	l
c010008e	obj/kernel.asm	/^c010008e:	e8 1c ce 00 00       	call   c010ceaf <sched_init>$/;"	l
c0100093	obj/kernel.asm	/^c0100093:	e8 82 ca 00 00       	call   c010cb1a <proc_init>$/;"	l
c0100098	obj/kernel.asm	/^c0100098:	e8 28 0e 00 00       	call   c0100ec5 <ide_init>$/;"	l
c010009d	obj/kernel.asm	/^c010009d:	e8 b6 63 00 00       	call   c0106458 <swap_init>$/;"	l
c01000a2	obj/kernel.asm	/^c01000a2:	e8 10 b0 00 00       	call   c010b0b7 <fs_init>$/;"	l
c01000a7	obj/kernel.asm	/^c01000a7:	e8 f9 15 00 00       	call   c01016a5 <clock_init>$/;"	l
c01000ac	obj/kernel.asm	/^c01000ac:	e8 e5 20 00 00       	call   c0102196 <intr_enable>$/;"	l
c01000b1	obj/kernel.asm	/^c01000b1:	e8 4d cc 00 00       	call   c010cd03 <cpu_idle>$/;"	l
c01000b6	obj/kernel.asm	/^c01000b6 <grade_backtrace2>:$/;"	l
c01000b6	obj/kernel.asm	/^c01000b6:	55                   	push   %ebp$/;"	l
c01000b7	obj/kernel.asm	/^c01000b7:	89 e5                	mov    %esp,%ebp$/;"	l
c01000b9	obj/kernel.asm	/^c01000b9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01000bc	obj/kernel.asm	/^c01000bc:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01000bf	obj/kernel.asm	/^c01000bf:	6a 00                	push   $0x0$/;"	l
c01000c1	obj/kernel.asm	/^c01000c1:	6a 00                	push   $0x0$/;"	l
c01000c3	obj/kernel.asm	/^c01000c3:	6a 00                	push   $0x0$/;"	l
c01000c5	obj/kernel.asm	/^c01000c5:	e8 8f 0d 00 00       	call   c0100e59 <mon_backtrace>$/;"	l
c01000ca	obj/kernel.asm	/^c01000ca:	83 c4 10             	add    $0x10,%esp$/;"	l
c01000cd	obj/kernel.asm	/^c01000cd:	c9                   	leave  $/;"	l
c01000ce	obj/kernel.asm	/^c01000ce:	c3                   	ret    $/;"	l
c01000cf	obj/kernel.asm	/^c01000cf <grade_backtrace1>:$/;"	l
c01000cf	obj/kernel.asm	/^c01000cf:	55                   	push   %ebp$/;"	l
c01000d0	obj/kernel.asm	/^c01000d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01000d2	obj/kernel.asm	/^c01000d2:	53                   	push   %ebx$/;"	l
c01000d3	obj/kernel.asm	/^c01000d3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01000d6	obj/kernel.asm	/^c01000d6:	8d 4d 0c             	lea    0xc(%ebp),%ecx$/;"	l
c01000d9	obj/kernel.asm	/^c01000d9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01000dc	obj/kernel.asm	/^c01000dc:	8d 5d 08             	lea    0x8(%ebp),%ebx$/;"	l
c01000df	obj/kernel.asm	/^c01000df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01000e2	obj/kernel.asm	/^c01000e2:	51                   	push   %ecx$/;"	l
c01000e3	obj/kernel.asm	/^c01000e3:	52                   	push   %edx$/;"	l
c01000e4	obj/kernel.asm	/^c01000e4:	53                   	push   %ebx$/;"	l
c01000e5	obj/kernel.asm	/^c01000e5:	50                   	push   %eax$/;"	l
c01000e6	obj/kernel.asm	/^c01000e6:	e8 cb ff ff ff       	call   c01000b6 <grade_backtrace2>$/;"	l
c01000eb	obj/kernel.asm	/^c01000eb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01000ee	obj/kernel.asm	/^c01000ee:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c01000f1	obj/kernel.asm	/^c01000f1:	c9                   	leave  $/;"	l
c01000f2	obj/kernel.asm	/^c01000f2:	c3                   	ret    $/;"	l
c01000f3	obj/kernel.asm	/^c01000f3 <grade_backtrace0>:$/;"	l
c01000f3	obj/kernel.asm	/^c01000f3:	55                   	push   %ebp$/;"	l
c01000f4	obj/kernel.asm	/^c01000f4:	89 e5                	mov    %esp,%ebp$/;"	l
c01000f6	obj/kernel.asm	/^c01000f6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01000f9	obj/kernel.asm	/^c01000f9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01000fc	obj/kernel.asm	/^c01000fc:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01000ff	obj/kernel.asm	/^c01000ff:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100102	obj/kernel.asm	/^c0100102:	e8 c8 ff ff ff       	call   c01000cf <grade_backtrace1>$/;"	l
c0100107	obj/kernel.asm	/^c0100107:	83 c4 10             	add    $0x10,%esp$/;"	l
c010010a	obj/kernel.asm	/^c010010a:	c9                   	leave  $/;"	l
c010010b	obj/kernel.asm	/^c010010b:	c3                   	ret    $/;"	l
c010010c	obj/kernel.asm	/^c010010c <grade_backtrace>:$/;"	l
c010010c	obj/kernel.asm	/^c010010c:	55                   	push   %ebp$/;"	l
c010010d	obj/kernel.asm	/^c010010d:	89 e5                	mov    %esp,%ebp$/;"	l
c010010f	obj/kernel.asm	/^c010010f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100112	obj/kernel.asm	/^c0100112:	b8 2a 00 10 c0       	mov    $0xc010002a,%eax$/;"	l
c0100117	obj/kernel.asm	/^c0100117:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010011a	obj/kernel.asm	/^c010011a:	68 00 00 ff ff       	push   $0xffff0000$/;"	l
c010011f	obj/kernel.asm	/^c010011f:	50                   	push   %eax$/;"	l
c0100120	obj/kernel.asm	/^c0100120:	6a 00                	push   $0x0$/;"	l
c0100122	obj/kernel.asm	/^c0100122:	e8 cc ff ff ff       	call   c01000f3 <grade_backtrace0>$/;"	l
c0100127	obj/kernel.asm	/^c0100127:	83 c4 10             	add    $0x10,%esp$/;"	l
c010012a	obj/kernel.asm	/^c010012a:	c9                   	leave  $/;"	l
c010012b	obj/kernel.asm	/^c010012b:	c3                   	ret    $/;"	l
c010012c	obj/kernel.asm	/^c010012c <lab1_print_cur_status>:$/;"	l
c010012c	obj/kernel.asm	/^c010012c:	55                   	push   %ebp$/;"	l
c010012d	obj/kernel.asm	/^c010012d:	89 e5                	mov    %esp,%ebp$/;"	l
c010012f	obj/kernel.asm	/^c010012f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100132	obj/kernel.asm	/^c0100132:	8c 4d f6             	mov    %cs,-0xa(%ebp)$/;"	l
c0100135	obj/kernel.asm	/^c0100135:	8c 5d f4             	mov    %ds,-0xc(%ebp)$/;"	l
c0100138	obj/kernel.asm	/^c0100138:	8c 45 f2             	mov    %es,-0xe(%ebp)$/;"	l
c010013b	obj/kernel.asm	/^c010013b:	8c 55 f0             	mov    %ss,-0x10(%ebp)$/;"	l
c010013e	obj/kernel.asm	/^c010013e:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100142	obj/kernel.asm	/^c0100142:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100145	obj/kernel.asm	/^c0100145:	83 e0 03             	and    $0x3,%eax$/;"	l
c0100148	obj/kernel.asm	/^c0100148:	89 c2                	mov    %eax,%edx$/;"	l
c010014a	obj/kernel.asm	/^c010014a:	a1 80 cf 14 c0       	mov    0xc014cf80,%eax$/;"	l
c010014f	obj/kernel.asm	/^c010014f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100152	obj/kernel.asm	/^c0100152:	52                   	push   %edx$/;"	l
c0100153	obj/kernel.asm	/^c0100153:	50                   	push   %eax$/;"	l
c0100154	obj/kernel.asm	/^c0100154:	68 e1 38 11 c0       	push   $0xc01138e1$/;"	l
c0100159	obj/kernel.asm	/^c0100159:	e8 0c 02 00 00       	call   c010036a <cprintf>$/;"	l
c010015e	obj/kernel.asm	/^c010015e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100161	obj/kernel.asm	/^c0100161:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100165	obj/kernel.asm	/^c0100165:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c0100168	obj/kernel.asm	/^c0100168:	a1 80 cf 14 c0       	mov    0xc014cf80,%eax$/;"	l
c010016d	obj/kernel.asm	/^c010016d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100170	obj/kernel.asm	/^c0100170:	52                   	push   %edx$/;"	l
c0100171	obj/kernel.asm	/^c0100171:	50                   	push   %eax$/;"	l
c0100172	obj/kernel.asm	/^c0100172:	68 ef 38 11 c0       	push   $0xc01138ef$/;"	l
c0100177	obj/kernel.asm	/^c0100177:	e8 ee 01 00 00       	call   c010036a <cprintf>$/;"	l
c010017c	obj/kernel.asm	/^c010017c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010017f	obj/kernel.asm	/^c010017f:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c0100183	obj/kernel.asm	/^c0100183:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c0100186	obj/kernel.asm	/^c0100186:	a1 80 cf 14 c0       	mov    0xc014cf80,%eax$/;"	l
c010018b	obj/kernel.asm	/^c010018b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010018e	obj/kernel.asm	/^c010018e:	52                   	push   %edx$/;"	l
c010018f	obj/kernel.asm	/^c010018f:	50                   	push   %eax$/;"	l
c0100190	obj/kernel.asm	/^c0100190:	68 fd 38 11 c0       	push   $0xc01138fd$/;"	l
c0100195	obj/kernel.asm	/^c0100195:	e8 d0 01 00 00       	call   c010036a <cprintf>$/;"	l
c010019a	obj/kernel.asm	/^c010019a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010019d	obj/kernel.asm	/^c010019d:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01001a1	obj/kernel.asm	/^c01001a1:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01001a4	obj/kernel.asm	/^c01001a4:	a1 80 cf 14 c0       	mov    0xc014cf80,%eax$/;"	l
c01001a9	obj/kernel.asm	/^c01001a9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01001ac	obj/kernel.asm	/^c01001ac:	52                   	push   %edx$/;"	l
c01001ad	obj/kernel.asm	/^c01001ad:	50                   	push   %eax$/;"	l
c01001ae	obj/kernel.asm	/^c01001ae:	68 0b 39 11 c0       	push   $0xc011390b$/;"	l
c01001b3	obj/kernel.asm	/^c01001b3:	e8 b2 01 00 00       	call   c010036a <cprintf>$/;"	l
c01001b8	obj/kernel.asm	/^c01001b8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01001bb	obj/kernel.asm	/^c01001bb:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c01001bf	obj/kernel.asm	/^c01001bf:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01001c2	obj/kernel.asm	/^c01001c2:	a1 80 cf 14 c0       	mov    0xc014cf80,%eax$/;"	l
c01001c7	obj/kernel.asm	/^c01001c7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01001ca	obj/kernel.asm	/^c01001ca:	52                   	push   %edx$/;"	l
c01001cb	obj/kernel.asm	/^c01001cb:	50                   	push   %eax$/;"	l
c01001cc	obj/kernel.asm	/^c01001cc:	68 19 39 11 c0       	push   $0xc0113919$/;"	l
c01001d1	obj/kernel.asm	/^c01001d1:	e8 94 01 00 00       	call   c010036a <cprintf>$/;"	l
c01001d6	obj/kernel.asm	/^c01001d6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01001d9	obj/kernel.asm	/^c01001d9:	a1 80 cf 14 c0       	mov    0xc014cf80,%eax$/;"	l
c01001de	obj/kernel.asm	/^c01001de:	83 c0 01             	add    $0x1,%eax$/;"	l
c01001e1	obj/kernel.asm	/^c01001e1:	a3 80 cf 14 c0       	mov    %eax,0xc014cf80$/;"	l
c01001e6	obj/kernel.asm	/^c01001e6:	c9                   	leave  $/;"	l
c01001e7	obj/kernel.asm	/^c01001e7:	c3                   	ret    $/;"	l
c01001e8	obj/kernel.asm	/^c01001e8 <lab1_switch_to_user>:$/;"	l
c01001e8	obj/kernel.asm	/^c01001e8:	55                   	push   %ebp$/;"	l
c01001e9	obj/kernel.asm	/^c01001e9:	89 e5                	mov    %esp,%ebp$/;"	l
c01001eb	obj/kernel.asm	/^c01001eb:	5d                   	pop    %ebp$/;"	l
c01001ec	obj/kernel.asm	/^c01001ec:	c3                   	ret    $/;"	l
c01001ed	obj/kernel.asm	/^c01001ed <lab1_switch_to_kernel>:$/;"	l
c01001ed	obj/kernel.asm	/^c01001ed:	55                   	push   %ebp$/;"	l
c01001ee	obj/kernel.asm	/^c01001ee:	89 e5                	mov    %esp,%ebp$/;"	l
c01001f0	obj/kernel.asm	/^c01001f0:	5d                   	pop    %ebp$/;"	l
c01001f1	obj/kernel.asm	/^c01001f1:	c3                   	ret    $/;"	l
c01001f2	obj/kernel.asm	/^c01001f2 <lab1_switch_test>:$/;"	l
c01001f2	obj/kernel.asm	/^c01001f2:	55                   	push   %ebp$/;"	l
c01001f3	obj/kernel.asm	/^c01001f3:	89 e5                	mov    %esp,%ebp$/;"	l
c01001f5	obj/kernel.asm	/^c01001f5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01001f8	obj/kernel.asm	/^c01001f8:	e8 2f ff ff ff       	call   c010012c <lab1_print_cur_status>$/;"	l
c01001fd	obj/kernel.asm	/^c01001fd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100200	obj/kernel.asm	/^c0100200:	68 28 39 11 c0       	push   $0xc0113928$/;"	l
c0100205	obj/kernel.asm	/^c0100205:	e8 60 01 00 00       	call   c010036a <cprintf>$/;"	l
c010020a	obj/kernel.asm	/^c010020a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010020d	obj/kernel.asm	/^c010020d:	e8 d6 ff ff ff       	call   c01001e8 <lab1_switch_to_user>$/;"	l
c0100212	obj/kernel.asm	/^c0100212:	e8 15 ff ff ff       	call   c010012c <lab1_print_cur_status>$/;"	l
c0100217	obj/kernel.asm	/^c0100217:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010021a	obj/kernel.asm	/^c010021a:	68 48 39 11 c0       	push   $0xc0113948$/;"	l
c010021f	obj/kernel.asm	/^c010021f:	e8 46 01 00 00       	call   c010036a <cprintf>$/;"	l
c0100224	obj/kernel.asm	/^c0100224:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100227	obj/kernel.asm	/^c0100227:	e8 c1 ff ff ff       	call   c01001ed <lab1_switch_to_kernel>$/;"	l
c010022c	obj/kernel.asm	/^c010022c:	e8 fb fe ff ff       	call   c010012c <lab1_print_cur_status>$/;"	l
c0100231	obj/kernel.asm	/^c0100231:	c9                   	leave  $/;"	l
c0100232	obj/kernel.asm	/^c0100232:	c3                   	ret    $/;"	l
c0100233	obj/kernel.asm	/^c0100233 <strdup>:$/;"	l
c0100233	obj/kernel.asm	/^c0100233:	55                   	push   %ebp$/;"	l
c0100234	obj/kernel.asm	/^c0100234:	89 e5                	mov    %esp,%ebp$/;"	l
c0100236	obj/kernel.asm	/^c0100236:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100239	obj/kernel.asm	/^c0100239:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010023c	obj/kernel.asm	/^c010023c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010023f	obj/kernel.asm	/^c010023f:	e8 4e 2a 01 00       	call   c0112c92 <strlen>$/;"	l
c0100244	obj/kernel.asm	/^c0100244:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100247	obj/kernel.asm	/^c0100247:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010024a	obj/kernel.asm	/^c010024a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010024d	obj/kernel.asm	/^c010024d:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100250	obj/kernel.asm	/^c0100250:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100253	obj/kernel.asm	/^c0100253:	50                   	push   %eax$/;"	l
c0100254	obj/kernel.asm	/^c0100254:	e8 46 72 00 00       	call   c010749f <kmalloc>$/;"	l
c0100259	obj/kernel.asm	/^c0100259:	83 c4 10             	add    $0x10,%esp$/;"	l
c010025c	obj/kernel.asm	/^c010025c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010025f	obj/kernel.asm	/^c010025f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0100263	obj/kernel.asm	/^c0100263:	74 1f                	je     c0100284 <strdup+0x51>$/;"	l
c0100265	obj/kernel.asm	/^c0100265:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100268	obj/kernel.asm	/^c0100268:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010026b	obj/kernel.asm	/^c010026b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010026e	obj/kernel.asm	/^c010026e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0100271	obj/kernel.asm	/^c0100271:	e8 59 2e 01 00       	call   c01130cf <memcpy>$/;"	l
c0100276	obj/kernel.asm	/^c0100276:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100279	obj/kernel.asm	/^c0100279:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010027c	obj/kernel.asm	/^c010027c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010027f	obj/kernel.asm	/^c010027f:	01 d0                	add    %edx,%eax$/;"	l
c0100281	obj/kernel.asm	/^c0100281:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100284	obj/kernel.asm	/^c0100284:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100287	obj/kernel.asm	/^c0100287:	c9                   	leave  $/;"	l
c0100288	obj/kernel.asm	/^c0100288:	c3                   	ret    $/;"	l
c0100289	obj/kernel.asm	/^c0100289 <stradd>:$/;"	l
c0100289	obj/kernel.asm	/^c0100289:	55                   	push   %ebp$/;"	l
c010028a	obj/kernel.asm	/^c010028a:	89 e5                	mov    %esp,%ebp$/;"	l
c010028c	obj/kernel.asm	/^c010028c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010028f	obj/kernel.asm	/^c010028f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100292	obj/kernel.asm	/^c0100292:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100295	obj/kernel.asm	/^c0100295:	e8 f8 29 01 00       	call   c0112c92 <strlen>$/;"	l
c010029a	obj/kernel.asm	/^c010029a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010029d	obj/kernel.asm	/^c010029d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01002a0	obj/kernel.asm	/^c01002a0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01002a3	obj/kernel.asm	/^c01002a3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01002a6	obj/kernel.asm	/^c01002a6:	e8 e7 29 01 00       	call   c0112c92 <strlen>$/;"	l
c01002ab	obj/kernel.asm	/^c01002ab:	83 c4 10             	add    $0x10,%esp$/;"	l
c01002ae	obj/kernel.asm	/^c01002ae:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01002b1	obj/kernel.asm	/^c01002b1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01002b4	obj/kernel.asm	/^c01002b4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01002b7	obj/kernel.asm	/^c01002b7:	01 d0                	add    %edx,%eax$/;"	l
c01002b9	obj/kernel.asm	/^c01002b9:	83 c0 01             	add    $0x1,%eax$/;"	l
c01002bc	obj/kernel.asm	/^c01002bc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01002bf	obj/kernel.asm	/^c01002bf:	50                   	push   %eax$/;"	l
c01002c0	obj/kernel.asm	/^c01002c0:	e8 da 71 00 00       	call   c010749f <kmalloc>$/;"	l
c01002c5	obj/kernel.asm	/^c01002c5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01002c8	obj/kernel.asm	/^c01002c8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01002cb	obj/kernel.asm	/^c01002cb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01002ce	obj/kernel.asm	/^c01002ce:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01002d1	obj/kernel.asm	/^c01002d1:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01002d5	obj/kernel.asm	/^c01002d5:	74 3a                	je     c0100311 <stradd+0x88>$/;"	l
c01002d7	obj/kernel.asm	/^c01002d7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01002da	obj/kernel.asm	/^c01002da:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01002dd	obj/kernel.asm	/^c01002dd:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01002e0	obj/kernel.asm	/^c01002e0:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01002e3	obj/kernel.asm	/^c01002e3:	e8 e7 2d 01 00       	call   c01130cf <memcpy>$/;"	l
c01002e8	obj/kernel.asm	/^c01002e8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01002eb	obj/kernel.asm	/^c01002eb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01002ee	obj/kernel.asm	/^c01002ee:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
c01002f1	obj/kernel.asm	/^c01002f1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01002f4	obj/kernel.asm	/^c01002f4:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01002f7	obj/kernel.asm	/^c01002f7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01002fa	obj/kernel.asm	/^c01002fa:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01002fd	obj/kernel.asm	/^c01002fd:	e8 cd 2d 01 00       	call   c01130cf <memcpy>$/;"	l
c0100302	obj/kernel.asm	/^c0100302:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100305	obj/kernel.asm	/^c0100305:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100308	obj/kernel.asm	/^c0100308:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
c010030b	obj/kernel.asm	/^c010030b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010030e	obj/kernel.asm	/^c010030e:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100311	obj/kernel.asm	/^c0100311:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100314	obj/kernel.asm	/^c0100314:	c9                   	leave  $/;"	l
c0100315	obj/kernel.asm	/^c0100315:	c3                   	ret    $/;"	l
c0100316	obj/kernel.asm	/^c0100316 <cputch>:$/;"	l
c0100316	obj/kernel.asm	/^c0100316:	55                   	push   %ebp$/;"	l
c0100317	obj/kernel.asm	/^c0100317:	89 e5                	mov    %esp,%ebp$/;"	l
c0100319	obj/kernel.asm	/^c0100319:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010031c	obj/kernel.asm	/^c010031c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010031f	obj/kernel.asm	/^c010031f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100322	obj/kernel.asm	/^c0100322:	e8 f5 1b 00 00       	call   c0101f1c <cons_putc>$/;"	l
c0100327	obj/kernel.asm	/^c0100327:	83 c4 10             	add    $0x10,%esp$/;"	l
c010032a	obj/kernel.asm	/^c010032a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010032d	obj/kernel.asm	/^c010032d:	8b 00                	mov    (%eax),%eax$/;"	l
c010032f	obj/kernel.asm	/^c010032f:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100332	obj/kernel.asm	/^c0100332:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100335	obj/kernel.asm	/^c0100335:	89 10                	mov    %edx,(%eax)$/;"	l
c0100337	obj/kernel.asm	/^c0100337:	c9                   	leave  $/;"	l
c0100338	obj/kernel.asm	/^c0100338:	c3                   	ret    $/;"	l
c0100339	obj/kernel.asm	/^c0100339 <vcprintf>:$/;"	l
c0100339	obj/kernel.asm	/^c0100339:	55                   	push   %ebp$/;"	l
c010033a	obj/kernel.asm	/^c010033a:	89 e5                	mov    %esp,%ebp$/;"	l
c010033c	obj/kernel.asm	/^c010033c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010033f	obj/kernel.asm	/^c010033f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100346	obj/kernel.asm	/^c0100346:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100349	obj/kernel.asm	/^c0100349:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010034c	obj/kernel.asm	/^c010034c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010034f	obj/kernel.asm	/^c010034f:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c0100352	obj/kernel.asm	/^c0100352:	50                   	push   %eax$/;"	l
c0100353	obj/kernel.asm	/^c0100353:	68 d9 6a ff ff       	push   $0xffff6ad9$/;"	l
c0100358	obj/kernel.asm	/^c0100358:	68 16 03 10 c0       	push   $0xc0100316$/;"	l
c010035d	obj/kernel.asm	/^c010035d:	e8 ca 2f 01 00       	call   c011332c <vprintfmt>$/;"	l
c0100362	obj/kernel.asm	/^c0100362:	83 c4 20             	add    $0x20,%esp$/;"	l
c0100365	obj/kernel.asm	/^c0100365:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100368	obj/kernel.asm	/^c0100368:	c9                   	leave  $/;"	l
c0100369	obj/kernel.asm	/^c0100369:	c3                   	ret    $/;"	l
c010036a	obj/kernel.asm	/^c010036a <cprintf>:$/;"	l
c010036a	obj/kernel.asm	/^c010036a:	55                   	push   %ebp$/;"	l
c010036b	obj/kernel.asm	/^c010036b:	89 e5                	mov    %esp,%ebp$/;"	l
c010036d	obj/kernel.asm	/^c010036d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100370	obj/kernel.asm	/^c0100370:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
c0100373	obj/kernel.asm	/^c0100373:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100376	obj/kernel.asm	/^c0100376:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100379	obj/kernel.asm	/^c0100379:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010037c	obj/kernel.asm	/^c010037c:	50                   	push   %eax$/;"	l
c010037d	obj/kernel.asm	/^c010037d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100380	obj/kernel.asm	/^c0100380:	e8 b4 ff ff ff       	call   c0100339 <vcprintf>$/;"	l
c0100385	obj/kernel.asm	/^c0100385:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100388	obj/kernel.asm	/^c0100388:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010038b	obj/kernel.asm	/^c010038b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010038e	obj/kernel.asm	/^c010038e:	c9                   	leave  $/;"	l
c010038f	obj/kernel.asm	/^c010038f:	c3                   	ret    $/;"	l
c0100390	obj/kernel.asm	/^c0100390 <cputchar>:$/;"	l
c0100390	obj/kernel.asm	/^c0100390:	55                   	push   %ebp$/;"	l
c0100391	obj/kernel.asm	/^c0100391:	89 e5                	mov    %esp,%ebp$/;"	l
c0100393	obj/kernel.asm	/^c0100393:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100396	obj/kernel.asm	/^c0100396:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100399	obj/kernel.asm	/^c0100399:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010039c	obj/kernel.asm	/^c010039c:	e8 7b 1b 00 00       	call   c0101f1c <cons_putc>$/;"	l
c01003a1	obj/kernel.asm	/^c01003a1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01003a4	obj/kernel.asm	/^c01003a4:	c9                   	leave  $/;"	l
c01003a5	obj/kernel.asm	/^c01003a5:	c3                   	ret    $/;"	l
c01003a6	obj/kernel.asm	/^c01003a6 <cputs>:$/;"	l
c01003a6	obj/kernel.asm	/^c01003a6:	55                   	push   %ebp$/;"	l
c01003a7	obj/kernel.asm	/^c01003a7:	89 e5                	mov    %esp,%ebp$/;"	l
c01003a9	obj/kernel.asm	/^c01003a9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01003ac	obj/kernel.asm	/^c01003ac:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01003b3	obj/kernel.asm	/^c01003b3:	eb 14                	jmp    c01003c9 <cputs+0x23>$/;"	l
c01003b5	obj/kernel.asm	/^c01003b5:	0f be 45 f7          	movsbl -0x9(%ebp),%eax$/;"	l
c01003b9	obj/kernel.asm	/^c01003b9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01003bc	obj/kernel.asm	/^c01003bc:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c01003bf	obj/kernel.asm	/^c01003bf:	52                   	push   %edx$/;"	l
c01003c0	obj/kernel.asm	/^c01003c0:	50                   	push   %eax$/;"	l
c01003c1	obj/kernel.asm	/^c01003c1:	e8 50 ff ff ff       	call   c0100316 <cputch>$/;"	l
c01003c6	obj/kernel.asm	/^c01003c6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01003c9	obj/kernel.asm	/^c01003c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01003cc	obj/kernel.asm	/^c01003cc:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01003cf	obj/kernel.asm	/^c01003cf:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c01003d2	obj/kernel.asm	/^c01003d2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01003d5	obj/kernel.asm	/^c01003d5:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c01003d8	obj/kernel.asm	/^c01003d8:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)$/;"	l
c01003dc	obj/kernel.asm	/^c01003dc:	75 d7                	jne    c01003b5 <cputs+0xf>$/;"	l
c01003de	obj/kernel.asm	/^c01003de:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01003e1	obj/kernel.asm	/^c01003e1:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c01003e4	obj/kernel.asm	/^c01003e4:	50                   	push   %eax$/;"	l
c01003e5	obj/kernel.asm	/^c01003e5:	6a 0a                	push   $0xa$/;"	l
c01003e7	obj/kernel.asm	/^c01003e7:	e8 2a ff ff ff       	call   c0100316 <cputch>$/;"	l
c01003ec	obj/kernel.asm	/^c01003ec:	83 c4 10             	add    $0x10,%esp$/;"	l
c01003ef	obj/kernel.asm	/^c01003ef:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01003f2	obj/kernel.asm	/^c01003f2:	c9                   	leave  $/;"	l
c01003f3	obj/kernel.asm	/^c01003f3:	c3                   	ret    $/;"	l
c01003f4	obj/kernel.asm	/^c01003f4 <getchar>:$/;"	l
c01003f4	obj/kernel.asm	/^c01003f4:	55                   	push   %ebp$/;"	l
c01003f5	obj/kernel.asm	/^c01003f5:	89 e5                	mov    %esp,%ebp$/;"	l
c01003f7	obj/kernel.asm	/^c01003f7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01003fa	obj/kernel.asm	/^c01003fa:	e8 65 1b 00 00       	call   c0101f64 <cons_getc>$/;"	l
c01003ff	obj/kernel.asm	/^c01003ff:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100402	obj/kernel.asm	/^c0100402:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100406	obj/kernel.asm	/^c0100406:	74 f2                	je     c01003fa <getchar+0x6>$/;"	l
c0100408	obj/kernel.asm	/^c0100408:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010040b	obj/kernel.asm	/^c010040b:	c9                   	leave  $/;"	l
c010040c	obj/kernel.asm	/^c010040c:	c3                   	ret    $/;"	l
c010040d	obj/kernel.asm	/^c010040d <readline>:$/;"	l
c010040d	obj/kernel.asm	/^c010040d:	55                   	push   %ebp$/;"	l
c010040e	obj/kernel.asm	/^c010040e:	89 e5                	mov    %esp,%ebp$/;"	l
c0100410	obj/kernel.asm	/^c0100410:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100413	obj/kernel.asm	/^c0100413:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100417	obj/kernel.asm	/^c0100417:	74 13                	je     c010042c <readline+0x1f>$/;"	l
c0100419	obj/kernel.asm	/^c0100419:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010041c	obj/kernel.asm	/^c010041c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010041f	obj/kernel.asm	/^c010041f:	68 67 39 11 c0       	push   $0xc0113967$/;"	l
c0100424	obj/kernel.asm	/^c0100424:	e8 41 ff ff ff       	call   c010036a <cprintf>$/;"	l
c0100429	obj/kernel.asm	/^c0100429:	83 c4 10             	add    $0x10,%esp$/;"	l
c010042c	obj/kernel.asm	/^c010042c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100433	obj/kernel.asm	/^c0100433:	e8 bc ff ff ff       	call   c01003f4 <getchar>$/;"	l
c0100438	obj/kernel.asm	/^c0100438:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010043b	obj/kernel.asm	/^c010043b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010043f	obj/kernel.asm	/^c010043f:	79 0a                	jns    c010044b <readline+0x3e>$/;"	l
c0100441	obj/kernel.asm	/^c0100441:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100446	obj/kernel.asm	/^c0100446:	e9 82 00 00 00       	jmp    c01004cd <readline+0xc0>$/;"	l
c010044b	obj/kernel.asm	/^c010044b:	83 7d f0 1f          	cmpl   $0x1f,-0x10(%ebp)$/;"	l
c010044f	obj/kernel.asm	/^c010044f:	7e 2b                	jle    c010047c <readline+0x6f>$/;"	l
c0100451	obj/kernel.asm	/^c0100451:	81 7d f4 fe 03 00 00 	cmpl   $0x3fe,-0xc(%ebp)$/;"	l
c0100458	obj/kernel.asm	/^c0100458:	7f 22                	jg     c010047c <readline+0x6f>$/;"	l
c010045a	obj/kernel.asm	/^c010045a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010045d	obj/kernel.asm	/^c010045d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0100460	obj/kernel.asm	/^c0100460:	e8 2b ff ff ff       	call   c0100390 <cputchar>$/;"	l
c0100465	obj/kernel.asm	/^c0100465:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100468	obj/kernel.asm	/^c0100468:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010046b	obj/kernel.asm	/^c010046b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010046e	obj/kernel.asm	/^c010046e:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0100471	obj/kernel.asm	/^c0100471:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100474	obj/kernel.asm	/^c0100474:	88 90 c0 cf 14 c0    	mov    %dl,-0x3feb3040(%eax)$/;"	l
c010047a	obj/kernel.asm	/^c010047a:	eb 4c                	jmp    c01004c8 <readline+0xbb>$/;"	l
c010047c	obj/kernel.asm	/^c010047c:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)$/;"	l
c0100480	obj/kernel.asm	/^c0100480:	75 1a                	jne    c010049c <readline+0x8f>$/;"	l
c0100482	obj/kernel.asm	/^c0100482:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100486	obj/kernel.asm	/^c0100486:	7e 14                	jle    c010049c <readline+0x8f>$/;"	l
c0100488	obj/kernel.asm	/^c0100488:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010048b	obj/kernel.asm	/^c010048b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010048e	obj/kernel.asm	/^c010048e:	e8 fd fe ff ff       	call   c0100390 <cputchar>$/;"	l
c0100493	obj/kernel.asm	/^c0100493:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100496	obj/kernel.asm	/^c0100496:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c010049a	obj/kernel.asm	/^c010049a:	eb 2c                	jmp    c01004c8 <readline+0xbb>$/;"	l
c010049c	obj/kernel.asm	/^c010049c:	83 7d f0 0a          	cmpl   $0xa,-0x10(%ebp)$/;"	l
c01004a0	obj/kernel.asm	/^c01004a0:	74 06                	je     c01004a8 <readline+0x9b>$/;"	l
c01004a2	obj/kernel.asm	/^c01004a2:	83 7d f0 0d          	cmpl   $0xd,-0x10(%ebp)$/;"	l
c01004a6	obj/kernel.asm	/^c01004a6:	75 20                	jne    c01004c8 <readline+0xbb>$/;"	l
c01004a8	obj/kernel.asm	/^c01004a8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01004ab	obj/kernel.asm	/^c01004ab:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01004ae	obj/kernel.asm	/^c01004ae:	e8 dd fe ff ff       	call   c0100390 <cputchar>$/;"	l
c01004b3	obj/kernel.asm	/^c01004b3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01004b6	obj/kernel.asm	/^c01004b6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01004b9	obj/kernel.asm	/^c01004b9:	05 c0 cf 14 c0       	add    $0xc014cfc0,%eax$/;"	l
c01004be	obj/kernel.asm	/^c01004be:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01004c1	obj/kernel.asm	/^c01004c1:	b8 c0 cf 14 c0       	mov    $0xc014cfc0,%eax$/;"	l
c01004c6	obj/kernel.asm	/^c01004c6:	eb 05                	jmp    c01004cd <readline+0xc0>$/;"	l
c01004c8	obj/kernel.asm	/^c01004c8:	e9 66 ff ff ff       	jmp    c0100433 <readline+0x26>$/;"	l
c01004cd	obj/kernel.asm	/^c01004cd:	c9                   	leave  $/;"	l
c01004ce	obj/kernel.asm	/^c01004ce:	c3                   	ret    $/;"	l
c01004cf	obj/kernel.asm	/^c01004cf <__panic>:$/;"	l
c01004cf	obj/kernel.asm	/^c01004cf:	55                   	push   %ebp$/;"	l
c01004d0	obj/kernel.asm	/^c01004d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01004d2	obj/kernel.asm	/^c01004d2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01004d5	obj/kernel.asm	/^c01004d5:	a1 c0 d3 14 c0       	mov    0xc014d3c0,%eax$/;"	l
c01004da	obj/kernel.asm	/^c01004da:	85 c0                	test   %eax,%eax$/;"	l
c01004dc	obj/kernel.asm	/^c01004dc:	74 02                	je     c01004e0 <__panic+0x11>$/;"	l
c01004de	obj/kernel.asm	/^c01004de:	eb 48                	jmp    c0100528 <__panic+0x59>$/;"	l
c01004e0	obj/kernel.asm	/^c01004e0:	c7 05 c0 d3 14 c0 01 	movl   $0x1,0xc014d3c0$/;"	l
c01004e7	obj/kernel.asm	/^c01004e7:	00 00 00 $/;"	l
c01004ea	obj/kernel.asm	/^c01004ea:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c01004ed	obj/kernel.asm	/^c01004ed:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01004f0	obj/kernel.asm	/^c01004f0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01004f3	obj/kernel.asm	/^c01004f3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01004f6	obj/kernel.asm	/^c01004f6:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01004f9	obj/kernel.asm	/^c01004f9:	68 6a 39 11 c0       	push   $0xc011396a$/;"	l
c01004fe	obj/kernel.asm	/^c01004fe:	e8 67 fe ff ff       	call   c010036a <cprintf>$/;"	l
c0100503	obj/kernel.asm	/^c0100503:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100506	obj/kernel.asm	/^c0100506:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100509	obj/kernel.asm	/^c0100509:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010050c	obj/kernel.asm	/^c010050c:	50                   	push   %eax$/;"	l
c010050d	obj/kernel.asm	/^c010050d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0100510	obj/kernel.asm	/^c0100510:	e8 24 fe ff ff       	call   c0100339 <vcprintf>$/;"	l
c0100515	obj/kernel.asm	/^c0100515:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100518	obj/kernel.asm	/^c0100518:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010051b	obj/kernel.asm	/^c010051b:	68 86 39 11 c0       	push   $0xc0113986$/;"	l
c0100520	obj/kernel.asm	/^c0100520:	e8 45 fe ff ff       	call   c010036a <cprintf>$/;"	l
c0100525	obj/kernel.asm	/^c0100525:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100528	obj/kernel.asm	/^c0100528:	e8 6f 1c 00 00       	call   c010219c <intr_disable>$/;"	l
c010052d	obj/kernel.asm	/^c010052d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100530	obj/kernel.asm	/^c0100530:	6a 00                	push   $0x0$/;"	l
c0100532	obj/kernel.asm	/^c0100532:	e8 47 08 00 00       	call   c0100d7e <kmonitor>$/;"	l
c0100537	obj/kernel.asm	/^c0100537:	83 c4 10             	add    $0x10,%esp$/;"	l
c010053a	obj/kernel.asm	/^c010053a:	eb f1                	jmp    c010052d <__panic+0x5e>$/;"	l
c010053c	obj/kernel.asm	/^c010053c <__warn>:$/;"	l
c010053c	obj/kernel.asm	/^c010053c:	55                   	push   %ebp$/;"	l
c010053d	obj/kernel.asm	/^c010053d:	89 e5                	mov    %esp,%ebp$/;"	l
c010053f	obj/kernel.asm	/^c010053f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100542	obj/kernel.asm	/^c0100542:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0100545	obj/kernel.asm	/^c0100545:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100548	obj/kernel.asm	/^c0100548:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010054b	obj/kernel.asm	/^c010054b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010054e	obj/kernel.asm	/^c010054e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100551	obj/kernel.asm	/^c0100551:	68 88 39 11 c0       	push   $0xc0113988$/;"	l
c0100556	obj/kernel.asm	/^c0100556:	e8 0f fe ff ff       	call   c010036a <cprintf>$/;"	l
c010055b	obj/kernel.asm	/^c010055b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010055e	obj/kernel.asm	/^c010055e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100561	obj/kernel.asm	/^c0100561:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100564	obj/kernel.asm	/^c0100564:	50                   	push   %eax$/;"	l
c0100565	obj/kernel.asm	/^c0100565:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0100568	obj/kernel.asm	/^c0100568:	e8 cc fd ff ff       	call   c0100339 <vcprintf>$/;"	l
c010056d	obj/kernel.asm	/^c010056d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100570	obj/kernel.asm	/^c0100570:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100573	obj/kernel.asm	/^c0100573:	68 86 39 11 c0       	push   $0xc0113986$/;"	l
c0100578	obj/kernel.asm	/^c0100578:	e8 ed fd ff ff       	call   c010036a <cprintf>$/;"	l
c010057d	obj/kernel.asm	/^c010057d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100580	obj/kernel.asm	/^c0100580:	c9                   	leave  $/;"	l
c0100581	obj/kernel.asm	/^c0100581:	c3                   	ret    $/;"	l
c0100582	obj/kernel.asm	/^c0100582 <is_kernel_panic>:$/;"	l
c0100582	obj/kernel.asm	/^c0100582:	55                   	push   %ebp$/;"	l
c0100583	obj/kernel.asm	/^c0100583:	89 e5                	mov    %esp,%ebp$/;"	l
c0100585	obj/kernel.asm	/^c0100585:	a1 c0 d3 14 c0       	mov    0xc014d3c0,%eax$/;"	l
c010058a	obj/kernel.asm	/^c010058a:	5d                   	pop    %ebp$/;"	l
c010058b	obj/kernel.asm	/^c010058b:	c3                   	ret    $/;"	l
c010058c	obj/kernel.asm	/^c010058c <stab_binsearch>:$/;"	l
c010058c	obj/kernel.asm	/^c010058c:	55                   	push   %ebp$/;"	l
c010058d	obj/kernel.asm	/^c010058d:	89 e5                	mov    %esp,%ebp$/;"	l
c010058f	obj/kernel.asm	/^c010058f:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0100592	obj/kernel.asm	/^c0100592:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100595	obj/kernel.asm	/^c0100595:	8b 00                	mov    (%eax),%eax$/;"	l
c0100597	obj/kernel.asm	/^c0100597:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010059a	obj/kernel.asm	/^c010059a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010059d	obj/kernel.asm	/^c010059d:	8b 00                	mov    (%eax),%eax$/;"	l
c010059f	obj/kernel.asm	/^c010059f:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01005a2	obj/kernel.asm	/^c01005a2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01005a9	obj/kernel.asm	/^c01005a9:	e9 d2 00 00 00       	jmp    c0100680 <stab_binsearch+0xf4>$/;"	l
c01005ae	obj/kernel.asm	/^c01005ae:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01005b1	obj/kernel.asm	/^c01005b1:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01005b4	obj/kernel.asm	/^c01005b4:	01 d0                	add    %edx,%eax$/;"	l
c01005b6	obj/kernel.asm	/^c01005b6:	89 c2                	mov    %eax,%edx$/;"	l
c01005b8	obj/kernel.asm	/^c01005b8:	c1 ea 1f             	shr    $0x1f,%edx$/;"	l
c01005bb	obj/kernel.asm	/^c01005bb:	01 d0                	add    %edx,%eax$/;"	l
c01005bd	obj/kernel.asm	/^c01005bd:	d1 f8                	sar    %eax$/;"	d
c01005bf	obj/kernel.asm	/^c01005bf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01005c2	obj/kernel.asm	/^c01005c2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01005c5	obj/kernel.asm	/^c01005c5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01005c8	obj/kernel.asm	/^c01005c8:	eb 04                	jmp    c01005ce <stab_binsearch+0x42>$/;"	l
c01005ca	obj/kernel.asm	/^c01005ca:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
c01005ce	obj/kernel.asm	/^c01005ce:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01005d1	obj/kernel.asm	/^c01005d1:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01005d4	obj/kernel.asm	/^c01005d4:	7c 1f                	jl     c01005f5 <stab_binsearch+0x69>$/;"	l
c01005d6	obj/kernel.asm	/^c01005d6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01005d9	obj/kernel.asm	/^c01005d9:	89 d0                	mov    %edx,%eax$/;"	l
c01005db	obj/kernel.asm	/^c01005db:	01 c0                	add    %eax,%eax$/;"	l
c01005dd	obj/kernel.asm	/^c01005dd:	01 d0                	add    %edx,%eax$/;"	l
c01005df	obj/kernel.asm	/^c01005df:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01005e2	obj/kernel.asm	/^c01005e2:	89 c2                	mov    %eax,%edx$/;"	l
c01005e4	obj/kernel.asm	/^c01005e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01005e7	obj/kernel.asm	/^c01005e7:	01 d0                	add    %edx,%eax$/;"	l
c01005e9	obj/kernel.asm	/^c01005e9:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01005ed	obj/kernel.asm	/^c01005ed:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01005f0	obj/kernel.asm	/^c01005f0:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c01005f3	obj/kernel.asm	/^c01005f3:	75 d5                	jne    c01005ca <stab_binsearch+0x3e>$/;"	l
c01005f5	obj/kernel.asm	/^c01005f5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01005f8	obj/kernel.asm	/^c01005f8:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01005fb	obj/kernel.asm	/^c01005fb:	7d 0b                	jge    c0100608 <stab_binsearch+0x7c>$/;"	l
c01005fd	obj/kernel.asm	/^c01005fd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100600	obj/kernel.asm	/^c0100600:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100603	obj/kernel.asm	/^c0100603:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100606	obj/kernel.asm	/^c0100606:	eb 78                	jmp    c0100680 <stab_binsearch+0xf4>$/;"	l
c0100608	obj/kernel.asm	/^c0100608:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010060f	obj/kernel.asm	/^c010060f:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100612	obj/kernel.asm	/^c0100612:	89 d0                	mov    %edx,%eax$/;"	l
c0100614	obj/kernel.asm	/^c0100614:	01 c0                	add    %eax,%eax$/;"	l
c0100616	obj/kernel.asm	/^c0100616:	01 d0                	add    %edx,%eax$/;"	l
c0100618	obj/kernel.asm	/^c0100618:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010061b	obj/kernel.asm	/^c010061b:	89 c2                	mov    %eax,%edx$/;"	l
c010061d	obj/kernel.asm	/^c010061d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100620	obj/kernel.asm	/^c0100620:	01 d0                	add    %edx,%eax$/;"	l
c0100622	obj/kernel.asm	/^c0100622:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100625	obj/kernel.asm	/^c0100625:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c0100628	obj/kernel.asm	/^c0100628:	73 13                	jae    c010063d <stab_binsearch+0xb1>$/;"	l
c010062a	obj/kernel.asm	/^c010062a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010062d	obj/kernel.asm	/^c010062d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100630	obj/kernel.asm	/^c0100630:	89 10                	mov    %edx,(%eax)$/;"	l
c0100632	obj/kernel.asm	/^c0100632:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100635	obj/kernel.asm	/^c0100635:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100638	obj/kernel.asm	/^c0100638:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010063b	obj/kernel.asm	/^c010063b:	eb 43                	jmp    c0100680 <stab_binsearch+0xf4>$/;"	l
c010063d	obj/kernel.asm	/^c010063d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100640	obj/kernel.asm	/^c0100640:	89 d0                	mov    %edx,%eax$/;"	l
c0100642	obj/kernel.asm	/^c0100642:	01 c0                	add    %eax,%eax$/;"	l
c0100644	obj/kernel.asm	/^c0100644:	01 d0                	add    %edx,%eax$/;"	l
c0100646	obj/kernel.asm	/^c0100646:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100649	obj/kernel.asm	/^c0100649:	89 c2                	mov    %eax,%edx$/;"	l
c010064b	obj/kernel.asm	/^c010064b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010064e	obj/kernel.asm	/^c010064e:	01 d0                	add    %edx,%eax$/;"	l
c0100650	obj/kernel.asm	/^c0100650:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100653	obj/kernel.asm	/^c0100653:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c0100656	obj/kernel.asm	/^c0100656:	76 16                	jbe    c010066e <stab_binsearch+0xe2>$/;"	l
c0100658	obj/kernel.asm	/^c0100658:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010065b	obj/kernel.asm	/^c010065b:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010065e	obj/kernel.asm	/^c010065e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100661	obj/kernel.asm	/^c0100661:	89 10                	mov    %edx,(%eax)$/;"	l
c0100663	obj/kernel.asm	/^c0100663:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100666	obj/kernel.asm	/^c0100666:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100669	obj/kernel.asm	/^c0100669:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010066c	obj/kernel.asm	/^c010066c:	eb 12                	jmp    c0100680 <stab_binsearch+0xf4>$/;"	l
c010066e	obj/kernel.asm	/^c010066e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100671	obj/kernel.asm	/^c0100671:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100674	obj/kernel.asm	/^c0100674:	89 10                	mov    %edx,(%eax)$/;"	l
c0100676	obj/kernel.asm	/^c0100676:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100679	obj/kernel.asm	/^c0100679:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010067c	obj/kernel.asm	/^c010067c:	83 45 18 01          	addl   $0x1,0x18(%ebp)$/;"	l
c0100680	obj/kernel.asm	/^c0100680:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100683	obj/kernel.asm	/^c0100683:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c0100686	obj/kernel.asm	/^c0100686:	0f 8e 22 ff ff ff    	jle    c01005ae <stab_binsearch+0x22>$/;"	l
c010068c	obj/kernel.asm	/^c010068c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100690	obj/kernel.asm	/^c0100690:	75 0f                	jne    c01006a1 <stab_binsearch+0x115>$/;"	l
c0100692	obj/kernel.asm	/^c0100692:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100695	obj/kernel.asm	/^c0100695:	8b 00                	mov    (%eax),%eax$/;"	l
c0100697	obj/kernel.asm	/^c0100697:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010069a	obj/kernel.asm	/^c010069a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010069d	obj/kernel.asm	/^c010069d:	89 10                	mov    %edx,(%eax)$/;"	l
c010069f	obj/kernel.asm	/^c010069f:	eb 3f                	jmp    c01006e0 <stab_binsearch+0x154>$/;"	l
c01006a1	obj/kernel.asm	/^c01006a1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01006a4	obj/kernel.asm	/^c01006a4:	8b 00                	mov    (%eax),%eax$/;"	l
c01006a6	obj/kernel.asm	/^c01006a6:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01006a9	obj/kernel.asm	/^c01006a9:	eb 04                	jmp    c01006af <stab_binsearch+0x123>$/;"	l
c01006ab	obj/kernel.asm	/^c01006ab:	83 6d fc 01          	subl   $0x1,-0x4(%ebp)$/;"	l
c01006af	obj/kernel.asm	/^c01006af:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01006b2	obj/kernel.asm	/^c01006b2:	8b 00                	mov    (%eax),%eax$/;"	l
c01006b4	obj/kernel.asm	/^c01006b4:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01006b7	obj/kernel.asm	/^c01006b7:	7d 1f                	jge    c01006d8 <stab_binsearch+0x14c>$/;"	l
c01006b9	obj/kernel.asm	/^c01006b9:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01006bc	obj/kernel.asm	/^c01006bc:	89 d0                	mov    %edx,%eax$/;"	l
c01006be	obj/kernel.asm	/^c01006be:	01 c0                	add    %eax,%eax$/;"	l
c01006c0	obj/kernel.asm	/^c01006c0:	01 d0                	add    %edx,%eax$/;"	l
c01006c2	obj/kernel.asm	/^c01006c2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01006c5	obj/kernel.asm	/^c01006c5:	89 c2                	mov    %eax,%edx$/;"	l
c01006c7	obj/kernel.asm	/^c01006c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01006ca	obj/kernel.asm	/^c01006ca:	01 d0                	add    %edx,%eax$/;"	l
c01006cc	obj/kernel.asm	/^c01006cc:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01006d0	obj/kernel.asm	/^c01006d0:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01006d3	obj/kernel.asm	/^c01006d3:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c01006d6	obj/kernel.asm	/^c01006d6:	75 d3                	jne    c01006ab <stab_binsearch+0x11f>$/;"	l
c01006d8	obj/kernel.asm	/^c01006d8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01006db	obj/kernel.asm	/^c01006db:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01006de	obj/kernel.asm	/^c01006de:	89 10                	mov    %edx,(%eax)$/;"	l
c01006e0	obj/kernel.asm	/^c01006e0:	c9                   	leave  $/;"	l
c01006e1	obj/kernel.asm	/^c01006e1:	c3                   	ret    $/;"	l
c01006e2	obj/kernel.asm	/^c01006e2 <debuginfo_eip>:$/;"	l
c01006e2	obj/kernel.asm	/^c01006e2:	55                   	push   %ebp$/;"	l
c01006e3	obj/kernel.asm	/^c01006e3:	89 e5                	mov    %esp,%ebp$/;"	l
c01006e5	obj/kernel.asm	/^c01006e5:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01006e8	obj/kernel.asm	/^c01006e8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01006eb	obj/kernel.asm	/^c01006eb:	c7 00 a8 39 11 c0    	movl   $0xc01139a8,(%eax)$/;"	l
c01006f1	obj/kernel.asm	/^c01006f1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01006f4	obj/kernel.asm	/^c01006f4:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c01006fb	obj/kernel.asm	/^c01006fb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01006fe	obj/kernel.asm	/^c01006fe:	c7 40 08 a8 39 11 c0 	movl   $0xc01139a8,0x8(%eax)$/;"	l
c0100705	obj/kernel.asm	/^c0100705:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100708	obj/kernel.asm	/^c0100708:	c7 40 0c 09 00 00 00 	movl   $0x9,0xc(%eax)$/;"	l
c010070f	obj/kernel.asm	/^c010070f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100712	obj/kernel.asm	/^c0100712:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100715	obj/kernel.asm	/^c0100715:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0100718	obj/kernel.asm	/^c0100718:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010071b	obj/kernel.asm	/^c010071b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c0100722	obj/kernel.asm	/^c0100722:	81 7d 08 ff ff ff bf 	cmpl   $0xbfffffff,0x8(%ebp)$/;"	l
c0100729	obj/kernel.asm	/^c0100729:	76 21                	jbe    c010074c <debuginfo_eip+0x6a>$/;"	l
c010072b	obj/kernel.asm	/^c010072b:	c7 45 f4 e0 7d 11 c0 	movl   $0xc0117de0,-0xc(%ebp)$/;"	l
c0100732	obj/kernel.asm	/^c0100732:	c7 45 f0 dc d3 13 c0 	movl   $0xc013d3dc,-0x10(%ebp)$/;"	l
c0100739	obj/kernel.asm	/^c0100739:	c7 45 ec dd d3 13 c0 	movl   $0xc013d3dd,-0x14(%ebp)$/;"	l
c0100740	obj/kernel.asm	/^c0100740:	c7 45 e8 fa 9a 14 c0 	movl   $0xc0149afa,-0x18(%ebp)$/;"	l
c0100747	obj/kernel.asm	/^c0100747:	e9 c3 00 00 00       	jmp    c010080f <debuginfo_eip+0x12d>$/;"	l
c010074c	obj/kernel.asm	/^c010074c:	c7 45 e4 00 00 20 00 	movl   $0x200000,-0x1c(%ebp)$/;"	l
c0100753	obj/kernel.asm	/^c0100753:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c0100758	obj/kernel.asm	/^c0100758:	85 c0                	test   %eax,%eax$/;"	l
c010075a	obj/kernel.asm	/^c010075a:	74 11                	je     c010076d <debuginfo_eip+0x8b>$/;"	l
c010075c	obj/kernel.asm	/^c010075c:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c0100761	obj/kernel.asm	/^c0100761:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0100764	obj/kernel.asm	/^c0100764:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100767	obj/kernel.asm	/^c0100767:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c010076b	obj/kernel.asm	/^c010076b:	75 0a                	jne    c0100777 <debuginfo_eip+0x95>$/;"	l
c010076d	obj/kernel.asm	/^c010076d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100772	obj/kernel.asm	/^c0100772:	e9 4e 03 00 00       	jmp    c0100ac5 <debuginfo_eip+0x3e3>$/;"	l
c0100777	obj/kernel.asm	/^c0100777:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010077a	obj/kernel.asm	/^c010077a:	6a 00                	push   $0x0$/;"	l
c010077c	obj/kernel.asm	/^c010077c:	6a 10                	push   $0x10$/;"	l
c010077e	obj/kernel.asm	/^c010077e:	50                   	push   %eax$/;"	l
c010077f	obj/kernel.asm	/^c010077f:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0100782	obj/kernel.asm	/^c0100782:	e8 6a 5a 00 00       	call   c01061f1 <user_mem_check>$/;"	l
c0100787	obj/kernel.asm	/^c0100787:	83 c4 10             	add    $0x10,%esp$/;"	l
c010078a	obj/kernel.asm	/^c010078a:	85 c0                	test   %eax,%eax$/;"	l
c010078c	obj/kernel.asm	/^c010078c:	75 0a                	jne    c0100798 <debuginfo_eip+0xb6>$/;"	l
c010078e	obj/kernel.asm	/^c010078e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100793	obj/kernel.asm	/^c0100793:	e9 2d 03 00 00       	jmp    c0100ac5 <debuginfo_eip+0x3e3>$/;"	l
c0100798	obj/kernel.asm	/^c0100798:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010079b	obj/kernel.asm	/^c010079b:	8b 00                	mov    (%eax),%eax$/;"	l
c010079d	obj/kernel.asm	/^c010079d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01007a0	obj/kernel.asm	/^c01007a0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01007a3	obj/kernel.asm	/^c01007a3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01007a6	obj/kernel.asm	/^c01007a6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01007a9	obj/kernel.asm	/^c01007a9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01007ac	obj/kernel.asm	/^c01007ac:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01007af	obj/kernel.asm	/^c01007af:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01007b2	obj/kernel.asm	/^c01007b2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01007b5	obj/kernel.asm	/^c01007b5:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01007b8	obj/kernel.asm	/^c01007b8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01007bb	obj/kernel.asm	/^c01007bb:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01007be	obj/kernel.asm	/^c01007be:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007c1	obj/kernel.asm	/^c01007c1:	29 c2                	sub    %eax,%edx$/;"	l
c01007c3	obj/kernel.asm	/^c01007c3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007c6	obj/kernel.asm	/^c01007c6:	6a 00                	push   $0x0$/;"	l
c01007c8	obj/kernel.asm	/^c01007c8:	52                   	push   %edx$/;"	l
c01007c9	obj/kernel.asm	/^c01007c9:	50                   	push   %eax$/;"	l
c01007ca	obj/kernel.asm	/^c01007ca:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01007cd	obj/kernel.asm	/^c01007cd:	e8 1f 5a 00 00       	call   c01061f1 <user_mem_check>$/;"	l
c01007d2	obj/kernel.asm	/^c01007d2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01007d5	obj/kernel.asm	/^c01007d5:	85 c0                	test   %eax,%eax$/;"	l
c01007d7	obj/kernel.asm	/^c01007d7:	75 0a                	jne    c01007e3 <debuginfo_eip+0x101>$/;"	l
c01007d9	obj/kernel.asm	/^c01007d9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01007de	obj/kernel.asm	/^c01007de:	e9 e2 02 00 00       	jmp    c0100ac5 <debuginfo_eip+0x3e3>$/;"	l
c01007e3	obj/kernel.asm	/^c01007e3:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01007e6	obj/kernel.asm	/^c01007e6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01007e9	obj/kernel.asm	/^c01007e9:	29 c2                	sub    %eax,%edx$/;"	l
c01007eb	obj/kernel.asm	/^c01007eb:	89 d0                	mov    %edx,%eax$/;"	l
c01007ed	obj/kernel.asm	/^c01007ed:	89 c2                	mov    %eax,%edx$/;"	l
c01007ef	obj/kernel.asm	/^c01007ef:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01007f2	obj/kernel.asm	/^c01007f2:	6a 00                	push   $0x0$/;"	l
c01007f4	obj/kernel.asm	/^c01007f4:	52                   	push   %edx$/;"	l
c01007f5	obj/kernel.asm	/^c01007f5:	50                   	push   %eax$/;"	l
c01007f6	obj/kernel.asm	/^c01007f6:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01007f9	obj/kernel.asm	/^c01007f9:	e8 f3 59 00 00       	call   c01061f1 <user_mem_check>$/;"	l
c01007fe	obj/kernel.asm	/^c01007fe:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100801	obj/kernel.asm	/^c0100801:	85 c0                	test   %eax,%eax$/;"	l
c0100803	obj/kernel.asm	/^c0100803:	75 0a                	jne    c010080f <debuginfo_eip+0x12d>$/;"	l
c0100805	obj/kernel.asm	/^c0100805:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010080a	obj/kernel.asm	/^c010080a:	e9 b6 02 00 00       	jmp    c0100ac5 <debuginfo_eip+0x3e3>$/;"	l
c010080f	obj/kernel.asm	/^c010080f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100812	obj/kernel.asm	/^c0100812:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0100815	obj/kernel.asm	/^c0100815:	76 0d                	jbe    c0100824 <debuginfo_eip+0x142>$/;"	l
c0100817	obj/kernel.asm	/^c0100817:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010081a	obj/kernel.asm	/^c010081a:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010081d	obj/kernel.asm	/^c010081d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100820	obj/kernel.asm	/^c0100820:	84 c0                	test   %al,%al$/;"	l
c0100822	obj/kernel.asm	/^c0100822:	74 0a                	je     c010082e <debuginfo_eip+0x14c>$/;"	l
c0100824	obj/kernel.asm	/^c0100824:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100829	obj/kernel.asm	/^c0100829:	e9 97 02 00 00       	jmp    c0100ac5 <debuginfo_eip+0x3e3>$/;"	l
c010082e	obj/kernel.asm	/^c010082e:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0100835	obj/kernel.asm	/^c0100835:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100838	obj/kernel.asm	/^c0100838:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010083b	obj/kernel.asm	/^c010083b:	29 c2                	sub    %eax,%edx$/;"	l
c010083d	obj/kernel.asm	/^c010083d:	89 d0                	mov    %edx,%eax$/;"	l
c010083f	obj/kernel.asm	/^c010083f:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c0100842	obj/kernel.asm	/^c0100842:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
c0100848	obj/kernel.asm	/^c0100848:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010084b	obj/kernel.asm	/^c010084b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010084e	obj/kernel.asm	/^c010084e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100851	obj/kernel.asm	/^c0100851:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100854	obj/kernel.asm	/^c0100854:	6a 64                	push   $0x64$/;"	l
c0100856	obj/kernel.asm	/^c0100856:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c0100859	obj/kernel.asm	/^c0100859:	50                   	push   %eax$/;"	l
c010085a	obj/kernel.asm	/^c010085a:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010085d	obj/kernel.asm	/^c010085d:	50                   	push   %eax$/;"	l
c010085e	obj/kernel.asm	/^c010085e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100861	obj/kernel.asm	/^c0100861:	e8 26 fd ff ff       	call   c010058c <stab_binsearch>$/;"	l
c0100866	obj/kernel.asm	/^c0100866:	83 c4 20             	add    $0x20,%esp$/;"	l
c0100869	obj/kernel.asm	/^c0100869:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010086c	obj/kernel.asm	/^c010086c:	85 c0                	test   %eax,%eax$/;"	l
c010086e	obj/kernel.asm	/^c010086e:	75 0a                	jne    c010087a <debuginfo_eip+0x198>$/;"	l
c0100870	obj/kernel.asm	/^c0100870:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100875	obj/kernel.asm	/^c0100875:	e9 4b 02 00 00       	jmp    c0100ac5 <debuginfo_eip+0x3e3>$/;"	l
c010087a	obj/kernel.asm	/^c010087a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010087d	obj/kernel.asm	/^c010087d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0100880	obj/kernel.asm	/^c0100880:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0100883	obj/kernel.asm	/^c0100883:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0100886	obj/kernel.asm	/^c0100886:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100889	obj/kernel.asm	/^c0100889:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010088c	obj/kernel.asm	/^c010088c:	6a 24                	push   $0x24$/;"	l
c010088e	obj/kernel.asm	/^c010088e:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
c0100891	obj/kernel.asm	/^c0100891:	50                   	push   %eax$/;"	l
c0100892	obj/kernel.asm	/^c0100892:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c0100895	obj/kernel.asm	/^c0100895:	50                   	push   %eax$/;"	l
c0100896	obj/kernel.asm	/^c0100896:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100899	obj/kernel.asm	/^c0100899:	e8 ee fc ff ff       	call   c010058c <stab_binsearch>$/;"	l
c010089e	obj/kernel.asm	/^c010089e:	83 c4 20             	add    $0x20,%esp$/;"	l
c01008a1	obj/kernel.asm	/^c01008a1:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01008a4	obj/kernel.asm	/^c01008a4:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01008a7	obj/kernel.asm	/^c01008a7:	39 c2                	cmp    %eax,%edx$/;"	l
c01008a9	obj/kernel.asm	/^c01008a9:	7f 7c                	jg     c0100927 <debuginfo_eip+0x245>$/;"	l
c01008ab	obj/kernel.asm	/^c01008ab:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01008ae	obj/kernel.asm	/^c01008ae:	89 c2                	mov    %eax,%edx$/;"	l
c01008b0	obj/kernel.asm	/^c01008b0:	89 d0                	mov    %edx,%eax$/;"	l
c01008b2	obj/kernel.asm	/^c01008b2:	01 c0                	add    %eax,%eax$/;"	l
c01008b4	obj/kernel.asm	/^c01008b4:	01 d0                	add    %edx,%eax$/;"	l
c01008b6	obj/kernel.asm	/^c01008b6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01008b9	obj/kernel.asm	/^c01008b9:	89 c2                	mov    %eax,%edx$/;"	l
c01008bb	obj/kernel.asm	/^c01008bb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01008be	obj/kernel.asm	/^c01008be:	01 d0                	add    %edx,%eax$/;"	l
c01008c0	obj/kernel.asm	/^c01008c0:	8b 00                	mov    (%eax),%eax$/;"	l
c01008c2	obj/kernel.asm	/^c01008c2:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c01008c5	obj/kernel.asm	/^c01008c5:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01008c8	obj/kernel.asm	/^c01008c8:	29 d1                	sub    %edx,%ecx$/;"	l
c01008ca	obj/kernel.asm	/^c01008ca:	89 ca                	mov    %ecx,%edx$/;"	l
c01008cc	obj/kernel.asm	/^c01008cc:	39 d0                	cmp    %edx,%eax$/;"	l
c01008ce	obj/kernel.asm	/^c01008ce:	73 22                	jae    c01008f2 <debuginfo_eip+0x210>$/;"	l
c01008d0	obj/kernel.asm	/^c01008d0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01008d3	obj/kernel.asm	/^c01008d3:	89 c2                	mov    %eax,%edx$/;"	l
c01008d5	obj/kernel.asm	/^c01008d5:	89 d0                	mov    %edx,%eax$/;"	l
c01008d7	obj/kernel.asm	/^c01008d7:	01 c0                	add    %eax,%eax$/;"	l
c01008d9	obj/kernel.asm	/^c01008d9:	01 d0                	add    %edx,%eax$/;"	l
c01008db	obj/kernel.asm	/^c01008db:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01008de	obj/kernel.asm	/^c01008de:	89 c2                	mov    %eax,%edx$/;"	l
c01008e0	obj/kernel.asm	/^c01008e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01008e3	obj/kernel.asm	/^c01008e3:	01 d0                	add    %edx,%eax$/;"	l
c01008e5	obj/kernel.asm	/^c01008e5:	8b 10                	mov    (%eax),%edx$/;"	l
c01008e7	obj/kernel.asm	/^c01008e7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01008ea	obj/kernel.asm	/^c01008ea:	01 c2                	add    %eax,%edx$/;"	l
c01008ec	obj/kernel.asm	/^c01008ec:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01008ef	obj/kernel.asm	/^c01008ef:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01008f2	obj/kernel.asm	/^c01008f2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01008f5	obj/kernel.asm	/^c01008f5:	89 c2                	mov    %eax,%edx$/;"	l
c01008f7	obj/kernel.asm	/^c01008f7:	89 d0                	mov    %edx,%eax$/;"	l
c01008f9	obj/kernel.asm	/^c01008f9:	01 c0                	add    %eax,%eax$/;"	l
c01008fb	obj/kernel.asm	/^c01008fb:	01 d0                	add    %edx,%eax$/;"	l
c01008fd	obj/kernel.asm	/^c01008fd:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100900	obj/kernel.asm	/^c0100900:	89 c2                	mov    %eax,%edx$/;"	l
c0100902	obj/kernel.asm	/^c0100902:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100905	obj/kernel.asm	/^c0100905:	01 d0                	add    %edx,%eax$/;"	l
c0100907	obj/kernel.asm	/^c0100907:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010090a	obj/kernel.asm	/^c010090a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010090d	obj/kernel.asm	/^c010090d:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0100910	obj/kernel.asm	/^c0100910:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100913	obj/kernel.asm	/^c0100913:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0100916	obj/kernel.asm	/^c0100916:	29 45 08             	sub    %eax,0x8(%ebp)$/;"	l
c0100919	obj/kernel.asm	/^c0100919:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010091c	obj/kernel.asm	/^c010091c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010091f	obj/kernel.asm	/^c010091f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100922	obj/kernel.asm	/^c0100922:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0100925	obj/kernel.asm	/^c0100925:	eb 15                	jmp    c010093c <debuginfo_eip+0x25a>$/;"	l
c0100927	obj/kernel.asm	/^c0100927:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010092a	obj/kernel.asm	/^c010092a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010092d	obj/kernel.asm	/^c010092d:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0100930	obj/kernel.asm	/^c0100930:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100933	obj/kernel.asm	/^c0100933:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100936	obj/kernel.asm	/^c0100936:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0100939	obj/kernel.asm	/^c0100939:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010093c	obj/kernel.asm	/^c010093c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010093f	obj/kernel.asm	/^c010093f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100942	obj/kernel.asm	/^c0100942:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100945	obj/kernel.asm	/^c0100945:	6a 3a                	push   $0x3a$/;"	l
c0100947	obj/kernel.asm	/^c0100947:	50                   	push   %eax$/;"	l
c0100948	obj/kernel.asm	/^c0100948:	e8 13 25 01 00       	call   c0112e60 <strfind>$/;"	l
c010094d	obj/kernel.asm	/^c010094d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100950	obj/kernel.asm	/^c0100950:	89 c2                	mov    %eax,%edx$/;"	l
c0100952	obj/kernel.asm	/^c0100952:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100955	obj/kernel.asm	/^c0100955:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100958	obj/kernel.asm	/^c0100958:	29 c2                	sub    %eax,%edx$/;"	l
c010095a	obj/kernel.asm	/^c010095a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010095d	obj/kernel.asm	/^c010095d:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0100960	obj/kernel.asm	/^c0100960:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100963	obj/kernel.asm	/^c0100963:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100966	obj/kernel.asm	/^c0100966:	6a 44                	push   $0x44$/;"	l
c0100968	obj/kernel.asm	/^c0100968:	8d 45 c8             	lea    -0x38(%ebp),%eax$/;"	l
c010096b	obj/kernel.asm	/^c010096b:	50                   	push   %eax$/;"	l
c010096c	obj/kernel.asm	/^c010096c:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c010096f	obj/kernel.asm	/^c010096f:	50                   	push   %eax$/;"	l
c0100970	obj/kernel.asm	/^c0100970:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100973	obj/kernel.asm	/^c0100973:	e8 14 fc ff ff       	call   c010058c <stab_binsearch>$/;"	l
c0100978	obj/kernel.asm	/^c0100978:	83 c4 20             	add    $0x20,%esp$/;"	l
c010097b	obj/kernel.asm	/^c010097b:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010097e	obj/kernel.asm	/^c010097e:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0100981	obj/kernel.asm	/^c0100981:	39 c2                	cmp    %eax,%edx$/;"	l
c0100983	obj/kernel.asm	/^c0100983:	7f 24                	jg     c01009a9 <debuginfo_eip+0x2c7>$/;"	l
c0100985	obj/kernel.asm	/^c0100985:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0100988	obj/kernel.asm	/^c0100988:	89 c2                	mov    %eax,%edx$/;"	l
c010098a	obj/kernel.asm	/^c010098a:	89 d0                	mov    %edx,%eax$/;"	l
c010098c	obj/kernel.asm	/^c010098c:	01 c0                	add    %eax,%eax$/;"	l
c010098e	obj/kernel.asm	/^c010098e:	01 d0                	add    %edx,%eax$/;"	l
c0100990	obj/kernel.asm	/^c0100990:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100993	obj/kernel.asm	/^c0100993:	89 c2                	mov    %eax,%edx$/;"	l
c0100995	obj/kernel.asm	/^c0100995:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100998	obj/kernel.asm	/^c0100998:	01 d0                	add    %edx,%eax$/;"	l
c010099a	obj/kernel.asm	/^c010099a:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c010099e	obj/kernel.asm	/^c010099e:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01009a1	obj/kernel.asm	/^c01009a1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01009a4	obj/kernel.asm	/^c01009a4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01009a7	obj/kernel.asm	/^c01009a7:	eb 13                	jmp    c01009bc <debuginfo_eip+0x2da>$/;"	l
c01009a9	obj/kernel.asm	/^c01009a9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01009ae	obj/kernel.asm	/^c01009ae:	e9 12 01 00 00       	jmp    c0100ac5 <debuginfo_eip+0x3e3>$/;"	l
c01009b3	obj/kernel.asm	/^c01009b3:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01009b6	obj/kernel.asm	/^c01009b6:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01009b9	obj/kernel.asm	/^c01009b9:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01009bc	obj/kernel.asm	/^c01009bc:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01009bf	obj/kernel.asm	/^c01009bf:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01009c2	obj/kernel.asm	/^c01009c2:	39 c2                	cmp    %eax,%edx$/;"	l
c01009c4	obj/kernel.asm	/^c01009c4:	7c 56                	jl     c0100a1c <debuginfo_eip+0x33a>$/;"	l
c01009c6	obj/kernel.asm	/^c01009c6:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01009c9	obj/kernel.asm	/^c01009c9:	89 c2                	mov    %eax,%edx$/;"	l
c01009cb	obj/kernel.asm	/^c01009cb:	89 d0                	mov    %edx,%eax$/;"	l
c01009cd	obj/kernel.asm	/^c01009cd:	01 c0                	add    %eax,%eax$/;"	l
c01009cf	obj/kernel.asm	/^c01009cf:	01 d0                	add    %edx,%eax$/;"	l
c01009d1	obj/kernel.asm	/^c01009d1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01009d4	obj/kernel.asm	/^c01009d4:	89 c2                	mov    %eax,%edx$/;"	l
c01009d6	obj/kernel.asm	/^c01009d6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01009d9	obj/kernel.asm	/^c01009d9:	01 d0                	add    %edx,%eax$/;"	l
c01009db	obj/kernel.asm	/^c01009db:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01009df	obj/kernel.asm	/^c01009df:	3c 84                	cmp    $0x84,%al$/;"	l
c01009e1	obj/kernel.asm	/^c01009e1:	74 39                	je     c0100a1c <debuginfo_eip+0x33a>$/;"	l
c01009e3	obj/kernel.asm	/^c01009e3:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01009e6	obj/kernel.asm	/^c01009e6:	89 c2                	mov    %eax,%edx$/;"	l
c01009e8	obj/kernel.asm	/^c01009e8:	89 d0                	mov    %edx,%eax$/;"	l
c01009ea	obj/kernel.asm	/^c01009ea:	01 c0                	add    %eax,%eax$/;"	l
c01009ec	obj/kernel.asm	/^c01009ec:	01 d0                	add    %edx,%eax$/;"	l
c01009ee	obj/kernel.asm	/^c01009ee:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01009f1	obj/kernel.asm	/^c01009f1:	89 c2                	mov    %eax,%edx$/;"	l
c01009f3	obj/kernel.asm	/^c01009f3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01009f6	obj/kernel.asm	/^c01009f6:	01 d0                	add    %edx,%eax$/;"	l
c01009f8	obj/kernel.asm	/^c01009f8:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01009fc	obj/kernel.asm	/^c01009fc:	3c 64                	cmp    $0x64,%al$/;"	l
c01009fe	obj/kernel.asm	/^c01009fe:	75 b3                	jne    c01009b3 <debuginfo_eip+0x2d1>$/;"	l
c0100a00	obj/kernel.asm	/^c0100a00:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100a03	obj/kernel.asm	/^c0100a03:	89 c2                	mov    %eax,%edx$/;"	l
c0100a05	obj/kernel.asm	/^c0100a05:	89 d0                	mov    %edx,%eax$/;"	l
c0100a07	obj/kernel.asm	/^c0100a07:	01 c0                	add    %eax,%eax$/;"	l
c0100a09	obj/kernel.asm	/^c0100a09:	01 d0                	add    %edx,%eax$/;"	l
c0100a0b	obj/kernel.asm	/^c0100a0b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100a0e	obj/kernel.asm	/^c0100a0e:	89 c2                	mov    %eax,%edx$/;"	l
c0100a10	obj/kernel.asm	/^c0100a10:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a13	obj/kernel.asm	/^c0100a13:	01 d0                	add    %edx,%eax$/;"	l
c0100a15	obj/kernel.asm	/^c0100a15:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100a18	obj/kernel.asm	/^c0100a18:	85 c0                	test   %eax,%eax$/;"	l
c0100a1a	obj/kernel.asm	/^c0100a1a:	74 97                	je     c01009b3 <debuginfo_eip+0x2d1>$/;"	l
c0100a1c	obj/kernel.asm	/^c0100a1c:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0100a1f	obj/kernel.asm	/^c0100a1f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100a22	obj/kernel.asm	/^c0100a22:	39 c2                	cmp    %eax,%edx$/;"	l
c0100a24	obj/kernel.asm	/^c0100a24:	7c 46                	jl     c0100a6c <debuginfo_eip+0x38a>$/;"	l
c0100a26	obj/kernel.asm	/^c0100a26:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100a29	obj/kernel.asm	/^c0100a29:	89 c2                	mov    %eax,%edx$/;"	l
c0100a2b	obj/kernel.asm	/^c0100a2b:	89 d0                	mov    %edx,%eax$/;"	l
c0100a2d	obj/kernel.asm	/^c0100a2d:	01 c0                	add    %eax,%eax$/;"	l
c0100a2f	obj/kernel.asm	/^c0100a2f:	01 d0                	add    %edx,%eax$/;"	l
c0100a31	obj/kernel.asm	/^c0100a31:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100a34	obj/kernel.asm	/^c0100a34:	89 c2                	mov    %eax,%edx$/;"	l
c0100a36	obj/kernel.asm	/^c0100a36:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a39	obj/kernel.asm	/^c0100a39:	01 d0                	add    %edx,%eax$/;"	l
c0100a3b	obj/kernel.asm	/^c0100a3b:	8b 00                	mov    (%eax),%eax$/;"	l
c0100a3d	obj/kernel.asm	/^c0100a3d:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c0100a40	obj/kernel.asm	/^c0100a40:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0100a43	obj/kernel.asm	/^c0100a43:	29 d1                	sub    %edx,%ecx$/;"	l
c0100a45	obj/kernel.asm	/^c0100a45:	89 ca                	mov    %ecx,%edx$/;"	l
c0100a47	obj/kernel.asm	/^c0100a47:	39 d0                	cmp    %edx,%eax$/;"	l
c0100a49	obj/kernel.asm	/^c0100a49:	73 21                	jae    c0100a6c <debuginfo_eip+0x38a>$/;"	l
c0100a4b	obj/kernel.asm	/^c0100a4b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100a4e	obj/kernel.asm	/^c0100a4e:	89 c2                	mov    %eax,%edx$/;"	l
c0100a50	obj/kernel.asm	/^c0100a50:	89 d0                	mov    %edx,%eax$/;"	l
c0100a52	obj/kernel.asm	/^c0100a52:	01 c0                	add    %eax,%eax$/;"	l
c0100a54	obj/kernel.asm	/^c0100a54:	01 d0                	add    %edx,%eax$/;"	l
c0100a56	obj/kernel.asm	/^c0100a56:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100a59	obj/kernel.asm	/^c0100a59:	89 c2                	mov    %eax,%edx$/;"	l
c0100a5b	obj/kernel.asm	/^c0100a5b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a5e	obj/kernel.asm	/^c0100a5e:	01 d0                	add    %edx,%eax$/;"	l
c0100a60	obj/kernel.asm	/^c0100a60:	8b 10                	mov    (%eax),%edx$/;"	l
c0100a62	obj/kernel.asm	/^c0100a62:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100a65	obj/kernel.asm	/^c0100a65:	01 c2                	add    %eax,%edx$/;"	l
c0100a67	obj/kernel.asm	/^c0100a67:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100a6a	obj/kernel.asm	/^c0100a6a:	89 10                	mov    %edx,(%eax)$/;"	l
c0100a6c	obj/kernel.asm	/^c0100a6c:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0100a6f	obj/kernel.asm	/^c0100a6f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100a72	obj/kernel.asm	/^c0100a72:	39 c2                	cmp    %eax,%edx$/;"	l
c0100a74	obj/kernel.asm	/^c0100a74:	7d 4a                	jge    c0100ac0 <debuginfo_eip+0x3de>$/;"	l
c0100a76	obj/kernel.asm	/^c0100a76:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100a79	obj/kernel.asm	/^c0100a79:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100a7c	obj/kernel.asm	/^c0100a7c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100a7f	obj/kernel.asm	/^c0100a7f:	eb 18                	jmp    c0100a99 <debuginfo_eip+0x3b7>$/;"	l
c0100a81	obj/kernel.asm	/^c0100a81:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100a84	obj/kernel.asm	/^c0100a84:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0100a87	obj/kernel.asm	/^c0100a87:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100a8a	obj/kernel.asm	/^c0100a8a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100a8d	obj/kernel.asm	/^c0100a8d:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c0100a90	obj/kernel.asm	/^c0100a90:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100a93	obj/kernel.asm	/^c0100a93:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100a96	obj/kernel.asm	/^c0100a96:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100a99	obj/kernel.asm	/^c0100a99:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0100a9c	obj/kernel.asm	/^c0100a9c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100a9f	obj/kernel.asm	/^c0100a9f:	39 c2                	cmp    %eax,%edx$/;"	l
c0100aa1	obj/kernel.asm	/^c0100aa1:	7d 1d                	jge    c0100ac0 <debuginfo_eip+0x3de>$/;"	l
c0100aa3	obj/kernel.asm	/^c0100aa3:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100aa6	obj/kernel.asm	/^c0100aa6:	89 c2                	mov    %eax,%edx$/;"	l
c0100aa8	obj/kernel.asm	/^c0100aa8:	89 d0                	mov    %edx,%eax$/;"	l
c0100aaa	obj/kernel.asm	/^c0100aaa:	01 c0                	add    %eax,%eax$/;"	l
c0100aac	obj/kernel.asm	/^c0100aac:	01 d0                	add    %edx,%eax$/;"	l
c0100aae	obj/kernel.asm	/^c0100aae:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100ab1	obj/kernel.asm	/^c0100ab1:	89 c2                	mov    %eax,%edx$/;"	l
c0100ab3	obj/kernel.asm	/^c0100ab3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100ab6	obj/kernel.asm	/^c0100ab6:	01 d0                	add    %edx,%eax$/;"	l
c0100ab8	obj/kernel.asm	/^c0100ab8:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c0100abc	obj/kernel.asm	/^c0100abc:	3c a0                	cmp    $0xa0,%al$/;"	l
c0100abe	obj/kernel.asm	/^c0100abe:	74 c1                	je     c0100a81 <debuginfo_eip+0x39f>$/;"	l
c0100ac0	obj/kernel.asm	/^c0100ac0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100ac5	obj/kernel.asm	/^c0100ac5:	c9                   	leave  $/;"	l
c0100ac6	obj/kernel.asm	/^c0100ac6:	c3                   	ret    $/;"	l
c0100ac7	obj/kernel.asm	/^c0100ac7 <print_kerninfo>:$/;"	l
c0100ac7	obj/kernel.asm	/^c0100ac7:	55                   	push   %ebp$/;"	l
c0100ac8	obj/kernel.asm	/^c0100ac8:	89 e5                	mov    %esp,%ebp$/;"	l
c0100aca	obj/kernel.asm	/^c0100aca:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100acd	obj/kernel.asm	/^c0100acd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100ad0	obj/kernel.asm	/^c0100ad0:	68 b2 39 11 c0       	push   $0xc01139b2$/;"	l
c0100ad5	obj/kernel.asm	/^c0100ad5:	e8 90 f8 ff ff       	call   c010036a <cprintf>$/;"	l
c0100ada	obj/kernel.asm	/^c0100ada:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100add	obj/kernel.asm	/^c0100add:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100ae0	obj/kernel.asm	/^c0100ae0:	68 2a 00 10 c0       	push   $0xc010002a$/;"	l
c0100ae5	obj/kernel.asm	/^c0100ae5:	68 cb 39 11 c0       	push   $0xc01139cb$/;"	l
c0100aea	obj/kernel.asm	/^c0100aea:	e8 7b f8 ff ff       	call   c010036a <cprintf>$/;"	l
c0100aef	obj/kernel.asm	/^c0100aef:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100af2	obj/kernel.asm	/^c0100af2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100af5	obj/kernel.asm	/^c0100af5:	68 bd 38 11 c0       	push   $0xc01138bd$/;"	l
c0100afa	obj/kernel.asm	/^c0100afa:	68 e3 39 11 c0       	push   $0xc01139e3$/;"	l
c0100aff	obj/kernel.asm	/^c0100aff:	e8 66 f8 ff ff       	call   c010036a <cprintf>$/;"	l
c0100b04	obj/kernel.asm	/^c0100b04:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b07	obj/kernel.asm	/^c0100b07:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100b0a	obj/kernel.asm	/^c0100b0a:	68 50 cf 14 c0       	push   $0xc014cf50$/;"	l
c0100b0f	obj/kernel.asm	/^c0100b0f:	68 fb 39 11 c0       	push   $0xc01139fb$/;"	l
c0100b14	obj/kernel.asm	/^c0100b14:	e8 51 f8 ff ff       	call   c010036a <cprintf>$/;"	l
c0100b19	obj/kernel.asm	/^c0100b19:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b1c	obj/kernel.asm	/^c0100b1c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100b1f	obj/kernel.asm	/^c0100b1f:	68 e4 13 15 c0       	push   $0xc01513e4$/;"	l
c0100b24	obj/kernel.asm	/^c0100b24:	68 13 3a 11 c0       	push   $0xc0113a13$/;"	l
c0100b29	obj/kernel.asm	/^c0100b29:	e8 3c f8 ff ff       	call   c010036a <cprintf>$/;"	l
c0100b2e	obj/kernel.asm	/^c0100b2e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b31	obj/kernel.asm	/^c0100b31:	b8 e4 13 15 c0       	mov    $0xc01513e4,%eax$/;"	l
c0100b36	obj/kernel.asm	/^c0100b36:	05 ff 03 00 00       	add    $0x3ff,%eax$/;"	l
c0100b3b	obj/kernel.asm	/^c0100b3b:	ba 2a 00 10 c0       	mov    $0xc010002a,%edx$/;"	l
c0100b40	obj/kernel.asm	/^c0100b40:	29 d0                	sub    %edx,%eax$/;"	l
c0100b42	obj/kernel.asm	/^c0100b42:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
c0100b48	obj/kernel.asm	/^c0100b48:	85 c0                	test   %eax,%eax$/;"	l
c0100b4a	obj/kernel.asm	/^c0100b4a:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c0100b4d	obj/kernel.asm	/^c0100b4d:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
c0100b50	obj/kernel.asm	/^c0100b50:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100b53	obj/kernel.asm	/^c0100b53:	50                   	push   %eax$/;"	l
c0100b54	obj/kernel.asm	/^c0100b54:	68 2c 3a 11 c0       	push   $0xc0113a2c$/;"	l
c0100b59	obj/kernel.asm	/^c0100b59:	e8 0c f8 ff ff       	call   c010036a <cprintf>$/;"	l
c0100b5e	obj/kernel.asm	/^c0100b5e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b61	obj/kernel.asm	/^c0100b61:	c9                   	leave  $/;"	l
c0100b62	obj/kernel.asm	/^c0100b62:	c3                   	ret    $/;"	l
c0100b63	obj/kernel.asm	/^c0100b63 <print_debuginfo>:$/;"	l
c0100b63	obj/kernel.asm	/^c0100b63:	55                   	push   %ebp$/;"	l
c0100b64	obj/kernel.asm	/^c0100b64:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b66	obj/kernel.asm	/^c0100b66:	81 ec 28 01 00 00    	sub    $0x128,%esp$/;"	l
c0100b6c	obj/kernel.asm	/^c0100b6c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100b6f	obj/kernel.asm	/^c0100b6f:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0100b72	obj/kernel.asm	/^c0100b72:	50                   	push   %eax$/;"	l
c0100b73	obj/kernel.asm	/^c0100b73:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100b76	obj/kernel.asm	/^c0100b76:	e8 67 fb ff ff       	call   c01006e2 <debuginfo_eip>$/;"	l
c0100b7b	obj/kernel.asm	/^c0100b7b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b7e	obj/kernel.asm	/^c0100b7e:	85 c0                	test   %eax,%eax$/;"	l
c0100b80	obj/kernel.asm	/^c0100b80:	74 15                	je     c0100b97 <print_debuginfo+0x34>$/;"	l
c0100b82	obj/kernel.asm	/^c0100b82:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100b85	obj/kernel.asm	/^c0100b85:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100b88	obj/kernel.asm	/^c0100b88:	68 56 3a 11 c0       	push   $0xc0113a56$/;"	l
c0100b8d	obj/kernel.asm	/^c0100b8d:	e8 d8 f7 ff ff       	call   c010036a <cprintf>$/;"	l
c0100b92	obj/kernel.asm	/^c0100b92:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b95	obj/kernel.asm	/^c0100b95:	eb 65                	jmp    c0100bfc <print_debuginfo+0x99>$/;"	l
c0100b97	obj/kernel.asm	/^c0100b97:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100b9e	obj/kernel.asm	/^c0100b9e:	eb 1c                	jmp    c0100bbc <print_debuginfo+0x59>$/;"	l
c0100ba0	obj/kernel.asm	/^c0100ba0:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0100ba3	obj/kernel.asm	/^c0100ba3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100ba6	obj/kernel.asm	/^c0100ba6:	01 d0                	add    %edx,%eax$/;"	l
c0100ba8	obj/kernel.asm	/^c0100ba8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100bab	obj/kernel.asm	/^c0100bab:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0100bb1	obj/kernel.asm	/^c0100bb1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100bb4	obj/kernel.asm	/^c0100bb4:	01 ca                	add    %ecx,%edx$/;"	l
c0100bb6	obj/kernel.asm	/^c0100bb6:	88 02                	mov    %al,(%edx)$/;"	l
c0100bb8	obj/kernel.asm	/^c0100bb8:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100bbc	obj/kernel.asm	/^c0100bbc:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100bbf	obj/kernel.asm	/^c0100bbf:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0100bc2	obj/kernel.asm	/^c0100bc2:	7f dc                	jg     c0100ba0 <print_debuginfo+0x3d>$/;"	l
c0100bc4	obj/kernel.asm	/^c0100bc4:	8d 95 dc fe ff ff    	lea    -0x124(%ebp),%edx$/;"	l
c0100bca	obj/kernel.asm	/^c0100bca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100bcd	obj/kernel.asm	/^c0100bcd:	01 d0                	add    %edx,%eax$/;"	l
c0100bcf	obj/kernel.asm	/^c0100bcf:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100bd2	obj/kernel.asm	/^c0100bd2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100bd5	obj/kernel.asm	/^c0100bd5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100bd8	obj/kernel.asm	/^c0100bd8:	89 d1                	mov    %edx,%ecx$/;"	l
c0100bda	obj/kernel.asm	/^c0100bda:	29 c1                	sub    %eax,%ecx$/;"	l
c0100bdc	obj/kernel.asm	/^c0100bdc:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0100bdf	obj/kernel.asm	/^c0100bdf:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100be2	obj/kernel.asm	/^c0100be2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100be5	obj/kernel.asm	/^c0100be5:	51                   	push   %ecx$/;"	l
c0100be6	obj/kernel.asm	/^c0100be6:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0100bec	obj/kernel.asm	/^c0100bec:	51                   	push   %ecx$/;"	l
c0100bed	obj/kernel.asm	/^c0100bed:	52                   	push   %edx$/;"	l
c0100bee	obj/kernel.asm	/^c0100bee:	50                   	push   %eax$/;"	l
c0100bef	obj/kernel.asm	/^c0100bef:	68 72 3a 11 c0       	push   $0xc0113a72$/;"	l
c0100bf4	obj/kernel.asm	/^c0100bf4:	e8 71 f7 ff ff       	call   c010036a <cprintf>$/;"	l
c0100bf9	obj/kernel.asm	/^c0100bf9:	83 c4 20             	add    $0x20,%esp$/;"	l
c0100bfc	obj/kernel.asm	/^c0100bfc:	c9                   	leave  $/;"	l
c0100bfd	obj/kernel.asm	/^c0100bfd:	c3                   	ret    $/;"	l
c0100bfe	obj/kernel.asm	/^c0100bfe <read_eip>:$/;"	l
c0100bfe	obj/kernel.asm	/^c0100bfe:	55                   	push   %ebp$/;"	l
c0100bff	obj/kernel.asm	/^c0100bff:	89 e5                	mov    %esp,%ebp$/;"	l
c0100c01	obj/kernel.asm	/^c0100c01:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0100c04	obj/kernel.asm	/^c0100c04:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
c0100c07	obj/kernel.asm	/^c0100c07:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100c0a	obj/kernel.asm	/^c0100c0a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100c0d	obj/kernel.asm	/^c0100c0d:	c9                   	leave  $/;"	l
c0100c0e	obj/kernel.asm	/^c0100c0e:	c3                   	ret    $/;"	l
c0100c0f	obj/kernel.asm	/^c0100c0f <print_stackframe>:$/;"	l
c0100c0f	obj/kernel.asm	/^c0100c0f:	55                   	push   %ebp$/;"	l
c0100c10	obj/kernel.asm	/^c0100c10:	89 e5                	mov    %esp,%ebp$/;"	l
c0100c12	obj/kernel.asm	/^c0100c12:	5d                   	pop    %ebp$/;"	l
c0100c13	obj/kernel.asm	/^c0100c13:	c3                   	ret    $/;"	l
c0100c14	obj/kernel.asm	/^c0100c14 <parse>:$/;"	l
c0100c14	obj/kernel.asm	/^c0100c14:	55                   	push   %ebp$/;"	l
c0100c15	obj/kernel.asm	/^c0100c15:	89 e5                	mov    %esp,%ebp$/;"	l
c0100c17	obj/kernel.asm	/^c0100c17:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100c1a	obj/kernel.asm	/^c0100c1a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100c21	obj/kernel.asm	/^c0100c21:	eb 0c                	jmp    c0100c2f <parse+0x1b>$/;"	l
c0100c23	obj/kernel.asm	/^c0100c23:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c26	obj/kernel.asm	/^c0100c26:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100c29	obj/kernel.asm	/^c0100c29:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0100c2c	obj/kernel.asm	/^c0100c2c:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100c2f	obj/kernel.asm	/^c0100c2f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c32	obj/kernel.asm	/^c0100c32:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100c35	obj/kernel.asm	/^c0100c35:	84 c0                	test   %al,%al$/;"	l
c0100c37	obj/kernel.asm	/^c0100c37:	74 1e                	je     c0100c57 <parse+0x43>$/;"	l
c0100c39	obj/kernel.asm	/^c0100c39:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c3c	obj/kernel.asm	/^c0100c3c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100c3f	obj/kernel.asm	/^c0100c3f:	0f be c0             	movsbl %al,%eax$/;"	l
c0100c42	obj/kernel.asm	/^c0100c42:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100c45	obj/kernel.asm	/^c0100c45:	50                   	push   %eax$/;"	l
c0100c46	obj/kernel.asm	/^c0100c46:	68 04 3b 11 c0       	push   $0xc0113b04$/;"	l
c0100c4b	obj/kernel.asm	/^c0100c4b:	e8 dd 21 01 00       	call   c0112e2d <strchr>$/;"	l
c0100c50	obj/kernel.asm	/^c0100c50:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100c53	obj/kernel.asm	/^c0100c53:	85 c0                	test   %eax,%eax$/;"	l
c0100c55	obj/kernel.asm	/^c0100c55:	75 cc                	jne    c0100c23 <parse+0xf>$/;"	l
c0100c57	obj/kernel.asm	/^c0100c57:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c5a	obj/kernel.asm	/^c0100c5a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100c5d	obj/kernel.asm	/^c0100c5d:	84 c0                	test   %al,%al$/;"	l
c0100c5f	obj/kernel.asm	/^c0100c5f:	75 02                	jne    c0100c63 <parse+0x4f>$/;"	l
c0100c61	obj/kernel.asm	/^c0100c61:	eb 65                	jmp    c0100cc8 <parse+0xb4>$/;"	l
c0100c63	obj/kernel.asm	/^c0100c63:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)$/;"	l
c0100c67	obj/kernel.asm	/^c0100c67:	75 12                	jne    c0100c7b <parse+0x67>$/;"	l
c0100c69	obj/kernel.asm	/^c0100c69:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100c6c	obj/kernel.asm	/^c0100c6c:	6a 10                	push   $0x10$/;"	l
c0100c6e	obj/kernel.asm	/^c0100c6e:	68 09 3b 11 c0       	push   $0xc0113b09$/;"	l
c0100c73	obj/kernel.asm	/^c0100c73:	e8 f2 f6 ff ff       	call   c010036a <cprintf>$/;"	l
c0100c78	obj/kernel.asm	/^c0100c78:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100c7b	obj/kernel.asm	/^c0100c7b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100c7e	obj/kernel.asm	/^c0100c7e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100c81	obj/kernel.asm	/^c0100c81:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0100c84	obj/kernel.asm	/^c0100c84:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0100c8b	obj/kernel.asm	/^c0100c8b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100c8e	obj/kernel.asm	/^c0100c8e:	01 c2                	add    %eax,%edx$/;"	l
c0100c90	obj/kernel.asm	/^c0100c90:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c93	obj/kernel.asm	/^c0100c93:	89 02                	mov    %eax,(%edx)$/;"	l
c0100c95	obj/kernel.asm	/^c0100c95:	eb 04                	jmp    c0100c9b <parse+0x87>$/;"	l
c0100c97	obj/kernel.asm	/^c0100c97:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0100c9b	obj/kernel.asm	/^c0100c9b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100c9e	obj/kernel.asm	/^c0100c9e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100ca1	obj/kernel.asm	/^c0100ca1:	84 c0                	test   %al,%al$/;"	l
c0100ca3	obj/kernel.asm	/^c0100ca3:	74 1e                	je     c0100cc3 <parse+0xaf>$/;"	l
c0100ca5	obj/kernel.asm	/^c0100ca5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100ca8	obj/kernel.asm	/^c0100ca8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100cab	obj/kernel.asm	/^c0100cab:	0f be c0             	movsbl %al,%eax$/;"	l
c0100cae	obj/kernel.asm	/^c0100cae:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100cb1	obj/kernel.asm	/^c0100cb1:	50                   	push   %eax$/;"	l
c0100cb2	obj/kernel.asm	/^c0100cb2:	68 04 3b 11 c0       	push   $0xc0113b04$/;"	l
c0100cb7	obj/kernel.asm	/^c0100cb7:	e8 71 21 01 00       	call   c0112e2d <strchr>$/;"	l
c0100cbc	obj/kernel.asm	/^c0100cbc:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100cbf	obj/kernel.asm	/^c0100cbf:	85 c0                	test   %eax,%eax$/;"	l
c0100cc1	obj/kernel.asm	/^c0100cc1:	74 d4                	je     c0100c97 <parse+0x83>$/;"	l
c0100cc3	obj/kernel.asm	/^c0100cc3:	e9 59 ff ff ff       	jmp    c0100c21 <parse+0xd>$/;"	l
c0100cc8	obj/kernel.asm	/^c0100cc8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100ccb	obj/kernel.asm	/^c0100ccb:	c9                   	leave  $/;"	l
c0100ccc	obj/kernel.asm	/^c0100ccc:	c3                   	ret    $/;"	l
c0100ccd	obj/kernel.asm	/^c0100ccd <runcmd>:$/;"	l
c0100ccd	obj/kernel.asm	/^c0100ccd:	55                   	push   %ebp$/;"	l
c0100cce	obj/kernel.asm	/^c0100cce:	89 e5                	mov    %esp,%ebp$/;"	l
c0100cd0	obj/kernel.asm	/^c0100cd0:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0100cd3	obj/kernel.asm	/^c0100cd3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100cd6	obj/kernel.asm	/^c0100cd6:	8d 45 b0             	lea    -0x50(%ebp),%eax$/;"	l
c0100cd9	obj/kernel.asm	/^c0100cd9:	50                   	push   %eax$/;"	l
c0100cda	obj/kernel.asm	/^c0100cda:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100cdd	obj/kernel.asm	/^c0100cdd:	e8 32 ff ff ff       	call   c0100c14 <parse>$/;"	l
c0100ce2	obj/kernel.asm	/^c0100ce2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100ce5	obj/kernel.asm	/^c0100ce5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100ce8	obj/kernel.asm	/^c0100ce8:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0100cec	obj/kernel.asm	/^c0100cec:	75 0a                	jne    c0100cf8 <runcmd+0x2b>$/;"	l
c0100cee	obj/kernel.asm	/^c0100cee:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100cf3	obj/kernel.asm	/^c0100cf3:	e9 84 00 00 00       	jmp    c0100d7c <runcmd+0xaf>$/;"	l
c0100cf8	obj/kernel.asm	/^c0100cf8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100cff	obj/kernel.asm	/^c0100cff:	eb 5a                	jmp    c0100d5b <runcmd+0x8e>$/;"	l
c0100d01	obj/kernel.asm	/^c0100d01:	8b 4d b0             	mov    -0x50(%ebp),%ecx$/;"	l
c0100d04	obj/kernel.asm	/^c0100d04:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100d07	obj/kernel.asm	/^c0100d07:	89 d0                	mov    %edx,%eax$/;"	l
c0100d09	obj/kernel.asm	/^c0100d09:	01 c0                	add    %eax,%eax$/;"	l
c0100d0b	obj/kernel.asm	/^c0100d0b:	01 d0                	add    %edx,%eax$/;"	l
c0100d0d	obj/kernel.asm	/^c0100d0d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d10	obj/kernel.asm	/^c0100d10:	05 20 c0 14 c0       	add    $0xc014c020,%eax$/;"	l
c0100d15	obj/kernel.asm	/^c0100d15:	8b 00                	mov    (%eax),%eax$/;"	l
c0100d17	obj/kernel.asm	/^c0100d17:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100d1a	obj/kernel.asm	/^c0100d1a:	51                   	push   %ecx$/;"	l
c0100d1b	obj/kernel.asm	/^c0100d1b:	50                   	push   %eax$/;"	l
c0100d1c	obj/kernel.asm	/^c0100d1c:	e8 6c 20 01 00       	call   c0112d8d <strcmp>$/;"	l
c0100d21	obj/kernel.asm	/^c0100d21:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100d24	obj/kernel.asm	/^c0100d24:	85 c0                	test   %eax,%eax$/;"	l
c0100d26	obj/kernel.asm	/^c0100d26:	75 2f                	jne    c0100d57 <runcmd+0x8a>$/;"	l
c0100d28	obj/kernel.asm	/^c0100d28:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100d2b	obj/kernel.asm	/^c0100d2b:	89 d0                	mov    %edx,%eax$/;"	l
c0100d2d	obj/kernel.asm	/^c0100d2d:	01 c0                	add    %eax,%eax$/;"	l
c0100d2f	obj/kernel.asm	/^c0100d2f:	01 d0                	add    %edx,%eax$/;"	l
c0100d31	obj/kernel.asm	/^c0100d31:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d34	obj/kernel.asm	/^c0100d34:	05 20 c0 14 c0       	add    $0xc014c020,%eax$/;"	l
c0100d39	obj/kernel.asm	/^c0100d39:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100d3c	obj/kernel.asm	/^c0100d3c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100d3f	obj/kernel.asm	/^c0100d3f:	83 ea 01             	sub    $0x1,%edx$/;"	l
c0100d42	obj/kernel.asm	/^c0100d42:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100d45	obj/kernel.asm	/^c0100d45:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0100d48	obj/kernel.asm	/^c0100d48:	8d 4d b0             	lea    -0x50(%ebp),%ecx$/;"	l
c0100d4b	obj/kernel.asm	/^c0100d4b:	83 c1 04             	add    $0x4,%ecx$/;"	l
c0100d4e	obj/kernel.asm	/^c0100d4e:	51                   	push   %ecx$/;"	l
c0100d4f	obj/kernel.asm	/^c0100d4f:	52                   	push   %edx$/;"	l
c0100d50	obj/kernel.asm	/^c0100d50:	ff d0                	call   *%eax$/;"	l
c0100d52	obj/kernel.asm	/^c0100d52:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100d55	obj/kernel.asm	/^c0100d55:	eb 25                	jmp    c0100d7c <runcmd+0xaf>$/;"	l
c0100d57	obj/kernel.asm	/^c0100d57:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100d5b	obj/kernel.asm	/^c0100d5b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100d5e	obj/kernel.asm	/^c0100d5e:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100d61	obj/kernel.asm	/^c0100d61:	76 9e                	jbe    c0100d01 <runcmd+0x34>$/;"	l
c0100d63	obj/kernel.asm	/^c0100d63:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0100d66	obj/kernel.asm	/^c0100d66:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100d69	obj/kernel.asm	/^c0100d69:	50                   	push   %eax$/;"	l
c0100d6a	obj/kernel.asm	/^c0100d6a:	68 27 3b 11 c0       	push   $0xc0113b27$/;"	l
c0100d6f	obj/kernel.asm	/^c0100d6f:	e8 f6 f5 ff ff       	call   c010036a <cprintf>$/;"	l
c0100d74	obj/kernel.asm	/^c0100d74:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100d77	obj/kernel.asm	/^c0100d77:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100d7c	obj/kernel.asm	/^c0100d7c:	c9                   	leave  $/;"	l
c0100d7d	obj/kernel.asm	/^c0100d7d:	c3                   	ret    $/;"	l
c0100d7e	obj/kernel.asm	/^c0100d7e <kmonitor>:$/;"	l
c0100d7e	obj/kernel.asm	/^c0100d7e:	55                   	push   %ebp$/;"	l
c0100d7f	obj/kernel.asm	/^c0100d7f:	89 e5                	mov    %esp,%ebp$/;"	l
c0100d81	obj/kernel.asm	/^c0100d81:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100d84	obj/kernel.asm	/^c0100d84:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100d87	obj/kernel.asm	/^c0100d87:	68 40 3b 11 c0       	push   $0xc0113b40$/;"	l
c0100d8c	obj/kernel.asm	/^c0100d8c:	e8 d9 f5 ff ff       	call   c010036a <cprintf>$/;"	l
c0100d91	obj/kernel.asm	/^c0100d91:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100d94	obj/kernel.asm	/^c0100d94:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100d97	obj/kernel.asm	/^c0100d97:	68 68 3b 11 c0       	push   $0xc0113b68$/;"	l
c0100d9c	obj/kernel.asm	/^c0100d9c:	e8 c9 f5 ff ff       	call   c010036a <cprintf>$/;"	l
c0100da1	obj/kernel.asm	/^c0100da1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100da4	obj/kernel.asm	/^c0100da4:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100da8	obj/kernel.asm	/^c0100da8:	74 0e                	je     c0100db8 <kmonitor+0x3a>$/;"	l
c0100daa	obj/kernel.asm	/^c0100daa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100dad	obj/kernel.asm	/^c0100dad:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100db0	obj/kernel.asm	/^c0100db0:	e8 57 17 00 00       	call   c010250c <print_trapframe>$/;"	l
c0100db5	obj/kernel.asm	/^c0100db5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100db8	obj/kernel.asm	/^c0100db8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100dbb	obj/kernel.asm	/^c0100dbb:	68 8d 3b 11 c0       	push   $0xc0113b8d$/;"	l
c0100dc0	obj/kernel.asm	/^c0100dc0:	e8 48 f6 ff ff       	call   c010040d <readline>$/;"	l
c0100dc5	obj/kernel.asm	/^c0100dc5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100dc8	obj/kernel.asm	/^c0100dc8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100dcb	obj/kernel.asm	/^c0100dcb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100dcf	obj/kernel.asm	/^c0100dcf:	74 17                	je     c0100de8 <kmonitor+0x6a>$/;"	l
c0100dd1	obj/kernel.asm	/^c0100dd1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100dd4	obj/kernel.asm	/^c0100dd4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100dd7	obj/kernel.asm	/^c0100dd7:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100dda	obj/kernel.asm	/^c0100dda:	e8 ee fe ff ff       	call   c0100ccd <runcmd>$/;"	l
c0100ddf	obj/kernel.asm	/^c0100ddf:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100de2	obj/kernel.asm	/^c0100de2:	85 c0                	test   %eax,%eax$/;"	l
c0100de4	obj/kernel.asm	/^c0100de4:	79 02                	jns    c0100de8 <kmonitor+0x6a>$/;"	l
c0100de6	obj/kernel.asm	/^c0100de6:	eb 02                	jmp    c0100dea <kmonitor+0x6c>$/;"	l
c0100de8	obj/kernel.asm	/^c0100de8:	eb ce                	jmp    c0100db8 <kmonitor+0x3a>$/;"	l
c0100dea	obj/kernel.asm	/^c0100dea:	c9                   	leave  $/;"	l
c0100deb	obj/kernel.asm	/^c0100deb:	c3                   	ret    $/;"	l
c0100dec	obj/kernel.asm	/^c0100dec <mon_help>:$/;"	l
c0100dec	obj/kernel.asm	/^c0100dec:	55                   	push   %ebp$/;"	l
c0100ded	obj/kernel.asm	/^c0100ded:	89 e5                	mov    %esp,%ebp$/;"	l
c0100def	obj/kernel.asm	/^c0100def:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100df2	obj/kernel.asm	/^c0100df2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100df9	obj/kernel.asm	/^c0100df9:	eb 3d                	jmp    c0100e38 <mon_help+0x4c>$/;"	l
c0100dfb	obj/kernel.asm	/^c0100dfb:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100dfe	obj/kernel.asm	/^c0100dfe:	89 d0                	mov    %edx,%eax$/;"	l
c0100e00	obj/kernel.asm	/^c0100e00:	01 c0                	add    %eax,%eax$/;"	l
c0100e02	obj/kernel.asm	/^c0100e02:	01 d0                	add    %edx,%eax$/;"	l
c0100e04	obj/kernel.asm	/^c0100e04:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100e07	obj/kernel.asm	/^c0100e07:	05 20 c0 14 c0       	add    $0xc014c020,%eax$/;"	l
c0100e0c	obj/kernel.asm	/^c0100e0c:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c0100e0f	obj/kernel.asm	/^c0100e0f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100e12	obj/kernel.asm	/^c0100e12:	89 d0                	mov    %edx,%eax$/;"	l
c0100e14	obj/kernel.asm	/^c0100e14:	01 c0                	add    %eax,%eax$/;"	l
c0100e16	obj/kernel.asm	/^c0100e16:	01 d0                	add    %edx,%eax$/;"	l
c0100e18	obj/kernel.asm	/^c0100e18:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100e1b	obj/kernel.asm	/^c0100e1b:	05 20 c0 14 c0       	add    $0xc014c020,%eax$/;"	l
c0100e20	obj/kernel.asm	/^c0100e20:	8b 00                	mov    (%eax),%eax$/;"	l
c0100e22	obj/kernel.asm	/^c0100e22:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100e25	obj/kernel.asm	/^c0100e25:	51                   	push   %ecx$/;"	l
c0100e26	obj/kernel.asm	/^c0100e26:	50                   	push   %eax$/;"	l
c0100e27	obj/kernel.asm	/^c0100e27:	68 91 3b 11 c0       	push   $0xc0113b91$/;"	l
c0100e2c	obj/kernel.asm	/^c0100e2c:	e8 39 f5 ff ff       	call   c010036a <cprintf>$/;"	l
c0100e31	obj/kernel.asm	/^c0100e31:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100e34	obj/kernel.asm	/^c0100e34:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100e38	obj/kernel.asm	/^c0100e38:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100e3b	obj/kernel.asm	/^c0100e3b:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100e3e	obj/kernel.asm	/^c0100e3e:	76 bb                	jbe    c0100dfb <mon_help+0xf>$/;"	l
c0100e40	obj/kernel.asm	/^c0100e40:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100e45	obj/kernel.asm	/^c0100e45:	c9                   	leave  $/;"	l
c0100e46	obj/kernel.asm	/^c0100e46:	c3                   	ret    $/;"	l
c0100e47	obj/kernel.asm	/^c0100e47 <mon_kerninfo>:$/;"	l
c0100e47	obj/kernel.asm	/^c0100e47:	55                   	push   %ebp$/;"	l
c0100e48	obj/kernel.asm	/^c0100e48:	89 e5                	mov    %esp,%ebp$/;"	l
c0100e4a	obj/kernel.asm	/^c0100e4a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100e4d	obj/kernel.asm	/^c0100e4d:	e8 75 fc ff ff       	call   c0100ac7 <print_kerninfo>$/;"	l
c0100e52	obj/kernel.asm	/^c0100e52:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100e57	obj/kernel.asm	/^c0100e57:	c9                   	leave  $/;"	l
c0100e58	obj/kernel.asm	/^c0100e58:	c3                   	ret    $/;"	l
c0100e59	obj/kernel.asm	/^c0100e59 <mon_backtrace>:$/;"	l
c0100e59	obj/kernel.asm	/^c0100e59:	55                   	push   %ebp$/;"	l
c0100e5a	obj/kernel.asm	/^c0100e5a:	89 e5                	mov    %esp,%ebp$/;"	l
c0100e5c	obj/kernel.asm	/^c0100e5c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100e5f	obj/kernel.asm	/^c0100e5f:	e8 ab fd ff ff       	call   c0100c0f <print_stackframe>$/;"	l
c0100e64	obj/kernel.asm	/^c0100e64:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100e69	obj/kernel.asm	/^c0100e69:	c9                   	leave  $/;"	l
c0100e6a	obj/kernel.asm	/^c0100e6a:	c3                   	ret    $/;"	l
c0100e6b	obj/kernel.asm	/^c0100e6b <ide_wait_ready>:$/;"	l
c0100e6b	obj/kernel.asm	/^c0100e6b:	55                   	push   %ebp$/;"	l
c0100e6c	obj/kernel.asm	/^c0100e6c:	89 e5                	mov    %esp,%ebp$/;"	l
c0100e6e	obj/kernel.asm	/^c0100e6e:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0100e71	obj/kernel.asm	/^c0100e71:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100e74	obj/kernel.asm	/^c0100e74:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c0100e78	obj/kernel.asm	/^c0100e78:	90                   	nop$/;"	l
c0100e79	obj/kernel.asm	/^c0100e79:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0100e7d	obj/kernel.asm	/^c0100e7d:	83 c0 07             	add    $0x7,%eax$/;"	l
c0100e80	obj/kernel.asm	/^c0100e80:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100e83	obj/kernel.asm	/^c0100e83:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c0100e87	obj/kernel.asm	/^c0100e87:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0100e8b	obj/kernel.asm	/^c0100e8b:	89 c2                	mov    %eax,%edx$/;"	l
c0100e8d	obj/kernel.asm	/^c0100e8d:	ec                   	in     (%dx),%al$/;"	l
c0100e8e	obj/kernel.asm	/^c0100e8e:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0100e91	obj/kernel.asm	/^c0100e91:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0100e95	obj/kernel.asm	/^c0100e95:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100e98	obj/kernel.asm	/^c0100e98:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100e9b	obj/kernel.asm	/^c0100e9b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100e9e	obj/kernel.asm	/^c0100e9e:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
c0100ea3	obj/kernel.asm	/^c0100ea3:	85 c0                	test   %eax,%eax$/;"	l
c0100ea5	obj/kernel.asm	/^c0100ea5:	75 d2                	jne    c0100e79 <ide_wait_ready+0xe>$/;"	l
c0100ea7	obj/kernel.asm	/^c0100ea7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0100eab	obj/kernel.asm	/^c0100eab:	74 11                	je     c0100ebe <ide_wait_ready+0x53>$/;"	l
c0100ead	obj/kernel.asm	/^c0100ead:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100eb0	obj/kernel.asm	/^c0100eb0:	83 e0 21             	and    $0x21,%eax$/;"	l
c0100eb3	obj/kernel.asm	/^c0100eb3:	85 c0                	test   %eax,%eax$/;"	l
c0100eb5	obj/kernel.asm	/^c0100eb5:	74 07                	je     c0100ebe <ide_wait_ready+0x53>$/;"	l
c0100eb7	obj/kernel.asm	/^c0100eb7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100ebc	obj/kernel.asm	/^c0100ebc:	eb 05                	jmp    c0100ec3 <ide_wait_ready+0x58>$/;"	l
c0100ebe	obj/kernel.asm	/^c0100ebe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100ec3	obj/kernel.asm	/^c0100ec3:	c9                   	leave  $/;"	l
c0100ec4	obj/kernel.asm	/^c0100ec4:	c3                   	ret    $/;"	l
c0100ec5	obj/kernel.asm	/^c0100ec5 <ide_init>:$/;"	l
c0100ec5	obj/kernel.asm	/^c0100ec5:	55                   	push   %ebp$/;"	l
c0100ec6	obj/kernel.asm	/^c0100ec6:	89 e5                	mov    %esp,%ebp$/;"	l
c0100ec8	obj/kernel.asm	/^c0100ec8:	57                   	push   %edi$/;"	l
c0100ec9	obj/kernel.asm	/^c0100ec9:	53                   	push   %ebx$/;"	l
c0100eca	obj/kernel.asm	/^c0100eca:	81 ec 40 02 00 00    	sub    $0x240,%esp$/;"	l
c0100ed0	obj/kernel.asm	/^c0100ed0:	66 c7 45 f6 00 00    	movw   $0x0,-0xa(%ebp)$/;"	l
c0100ed6	obj/kernel.asm	/^c0100ed6:	e9 c1 02 00 00       	jmp    c010119c <ide_init+0x2d7>$/;"	l
c0100edb	obj/kernel.asm	/^c0100edb:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100edf	obj/kernel.asm	/^c0100edf:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0100ee2	obj/kernel.asm	/^c0100ee2:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0100ee9	obj/kernel.asm	/^c0100ee9:	29 c2                	sub    %eax,%edx$/;"	l
c0100eeb	obj/kernel.asm	/^c0100eeb:	89 d0                	mov    %edx,%eax$/;"	l
c0100eed	obj/kernel.asm	/^c0100eed:	05 00 d4 14 c0       	add    $0xc014d400,%eax$/;"	l
c0100ef2	obj/kernel.asm	/^c0100ef2:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100ef5	obj/kernel.asm	/^c0100ef5:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100ef9	obj/kernel.asm	/^c0100ef9:	66 d1 e8             	shr    %ax$/;"	l
c0100efc	obj/kernel.asm	/^c0100efc:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100eff	obj/kernel.asm	/^c0100eff:	0f b7 04 85 9c 3b 11 	movzwl -0x3feec464(,%eax,4),%eax$/;"	l
c0100f06	obj/kernel.asm	/^c0100f06:	c0 $/;"	l
c0100f07	obj/kernel.asm	/^c0100f07:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0100f0b	obj/kernel.asm	/^c0100f0b:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100f0f	obj/kernel.asm	/^c0100f0f:	6a 00                	push   $0x0$/;"	l
c0100f11	obj/kernel.asm	/^c0100f11:	50                   	push   %eax$/;"	l
c0100f12	obj/kernel.asm	/^c0100f12:	e8 54 ff ff ff       	call   c0100e6b <ide_wait_ready>$/;"	l
c0100f17	obj/kernel.asm	/^c0100f17:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100f1a	obj/kernel.asm	/^c0100f1a:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100f1e	obj/kernel.asm	/^c0100f1e:	83 e0 01             	and    $0x1,%eax$/;"	l
c0100f21	obj/kernel.asm	/^c0100f21:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0100f24	obj/kernel.asm	/^c0100f24:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0100f27	obj/kernel.asm	/^c0100f27:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100f2a	obj/kernel.asm	/^c0100f2a:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0100f2e	obj/kernel.asm	/^c0100f2e:	83 c2 06             	add    $0x6,%edx$/;"	l
c0100f31	obj/kernel.asm	/^c0100f31:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0100f34	obj/kernel.asm	/^c0100f34:	66 89 55 d2          	mov    %dx,-0x2e(%ebp)$/;"	l
c0100f38	obj/kernel.asm	/^c0100f38:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c0100f3b	obj/kernel.asm	/^c0100f3b:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c0100f3f	obj/kernel.asm	/^c0100f3f:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c0100f43	obj/kernel.asm	/^c0100f43:	ee                   	out    %al,(%dx)$/;"	l
c0100f44	obj/kernel.asm	/^c0100f44:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100f48	obj/kernel.asm	/^c0100f48:	6a 00                	push   $0x0$/;"	l
c0100f4a	obj/kernel.asm	/^c0100f4a:	50                   	push   %eax$/;"	l
c0100f4b	obj/kernel.asm	/^c0100f4b:	e8 1b ff ff ff       	call   c0100e6b <ide_wait_ready>$/;"	l
c0100f50	obj/kernel.asm	/^c0100f50:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100f53	obj/kernel.asm	/^c0100f53:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100f57	obj/kernel.asm	/^c0100f57:	83 c0 07             	add    $0x7,%eax$/;"	l
c0100f5a	obj/kernel.asm	/^c0100f5a:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100f5d	obj/kernel.asm	/^c0100f5d:	66 89 45 ce          	mov    %ax,-0x32(%ebp)$/;"	l
c0100f61	obj/kernel.asm	/^c0100f61:	c6 45 cd ec          	movb   $0xec,-0x33(%ebp)$/;"	l
c0100f65	obj/kernel.asm	/^c0100f65:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c0100f69	obj/kernel.asm	/^c0100f69:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c0100f6d	obj/kernel.asm	/^c0100f6d:	ee                   	out    %al,(%dx)$/;"	l
c0100f6e	obj/kernel.asm	/^c0100f6e:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100f72	obj/kernel.asm	/^c0100f72:	6a 00                	push   $0x0$/;"	l
c0100f74	obj/kernel.asm	/^c0100f74:	50                   	push   %eax$/;"	l
c0100f75	obj/kernel.asm	/^c0100f75:	e8 f1 fe ff ff       	call   c0100e6b <ide_wait_ready>$/;"	l
c0100f7a	obj/kernel.asm	/^c0100f7a:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100f7d	obj/kernel.asm	/^c0100f7d:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100f81	obj/kernel.asm	/^c0100f81:	83 c0 07             	add    $0x7,%eax$/;"	l
c0100f84	obj/kernel.asm	/^c0100f84:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100f87	obj/kernel.asm	/^c0100f87:	66 89 45 ca          	mov    %ax,-0x36(%ebp)$/;"	l
c0100f8b	obj/kernel.asm	/^c0100f8b:	0f b7 45 ca          	movzwl -0x36(%ebp),%eax$/;"	l
c0100f8f	obj/kernel.asm	/^c0100f8f:	89 c2                	mov    %eax,%edx$/;"	l
c0100f91	obj/kernel.asm	/^c0100f91:	ec                   	in     (%dx),%al$/;"	l
c0100f92	obj/kernel.asm	/^c0100f92:	88 45 c9             	mov    %al,-0x37(%ebp)$/;"	l
c0100f95	obj/kernel.asm	/^c0100f95:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c0100f99	obj/kernel.asm	/^c0100f99:	84 c0                	test   %al,%al$/;"	l
c0100f9b	obj/kernel.asm	/^c0100f9b:	0f 84 f0 01 00 00    	je     c0101191 <ide_init+0x2cc>$/;"	l
c0100fa1	obj/kernel.asm	/^c0100fa1:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100fa5	obj/kernel.asm	/^c0100fa5:	6a 01                	push   $0x1$/;"	l
c0100fa7	obj/kernel.asm	/^c0100fa7:	50                   	push   %eax$/;"	l
c0100fa8	obj/kernel.asm	/^c0100fa8:	e8 be fe ff ff       	call   c0100e6b <ide_wait_ready>$/;"	l
c0100fad	obj/kernel.asm	/^c0100fad:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100fb0	obj/kernel.asm	/^c0100fb0:	85 c0                	test   %eax,%eax$/;"	l
c0100fb2	obj/kernel.asm	/^c0100fb2:	0f 85 d9 01 00 00    	jne    c0101191 <ide_init+0x2cc>$/;"	l
c0100fb8	obj/kernel.asm	/^c0100fb8:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100fbc	obj/kernel.asm	/^c0100fbc:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0100fbf	obj/kernel.asm	/^c0100fbf:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0100fc6	obj/kernel.asm	/^c0100fc6:	29 c2                	sub    %eax,%edx$/;"	l
c0100fc8	obj/kernel.asm	/^c0100fc8:	89 d0                	mov    %edx,%eax$/;"	l
c0100fca	obj/kernel.asm	/^c0100fca:	05 00 d4 14 c0       	add    $0xc014d400,%eax$/;"	l
c0100fcf	obj/kernel.asm	/^c0100fcf:	c6 00 01             	movb   $0x1,(%eax)$/;"	l
c0100fd2	obj/kernel.asm	/^c0100fd2:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100fd6	obj/kernel.asm	/^c0100fd6:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0100fd9	obj/kernel.asm	/^c0100fd9:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c0100fdf	obj/kernel.asm	/^c0100fdf:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0100fe2	obj/kernel.asm	/^c0100fe2:	c7 45 bc 80 00 00 00 	movl   $0x80,-0x44(%ebp)$/;"	l
c0100fe9	obj/kernel.asm	/^c0100fe9:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0100fec	obj/kernel.asm	/^c0100fec:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
c0100fef	obj/kernel.asm	/^c0100fef:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0100ff2	obj/kernel.asm	/^c0100ff2:	89 cb                	mov    %ecx,%ebx$/;"	l
c0100ff4	obj/kernel.asm	/^c0100ff4:	89 df                	mov    %ebx,%edi$/;"	l
c0100ff6	obj/kernel.asm	/^c0100ff6:	89 c1                	mov    %eax,%ecx$/;"	l
c0100ff8	obj/kernel.asm	/^c0100ff8:	fc                   	cld    $/;"	l
c0100ff9	obj/kernel.asm	/^c0100ff9:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c0100ffb	obj/kernel.asm	/^c0100ffb:	89 c8                	mov    %ecx,%eax$/;"	l
c0100ffd	obj/kernel.asm	/^c0100ffd:	89 fb                	mov    %edi,%ebx$/;"	l
c0100fff	obj/kernel.asm	/^c0100fff:	89 5d c0             	mov    %ebx,-0x40(%ebp)$/;"	l
c0101002	obj/kernel.asm	/^c0101002:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0101005	obj/kernel.asm	/^c0101005:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c010100b	obj/kernel.asm	/^c010100b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010100e	obj/kernel.asm	/^c010100e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101011	obj/kernel.asm	/^c0101011:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax$/;"	l
c0101017	obj/kernel.asm	/^c0101017:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010101a	obj/kernel.asm	/^c010101a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010101d	obj/kernel.asm	/^c010101d:	25 00 00 00 04       	and    $0x4000000,%eax$/;"	l
c0101022	obj/kernel.asm	/^c0101022:	85 c0                	test   %eax,%eax$/;"	l
c0101024	obj/kernel.asm	/^c0101024:	74 0e                	je     c0101034 <ide_init+0x16f>$/;"	l
c0101026	obj/kernel.asm	/^c0101026:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101029	obj/kernel.asm	/^c0101029:	8b 80 c8 00 00 00    	mov    0xc8(%eax),%eax$/;"	l
c010102f	obj/kernel.asm	/^c010102f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0101032	obj/kernel.asm	/^c0101032:	eb 09                	jmp    c010103d <ide_init+0x178>$/;"	l
c0101034	obj/kernel.asm	/^c0101034:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101037	obj/kernel.asm	/^c0101037:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010103a	obj/kernel.asm	/^c010103a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010103d	obj/kernel.asm	/^c010103d:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101041	obj/kernel.asm	/^c0101041:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101044	obj/kernel.asm	/^c0101044:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010104b	obj/kernel.asm	/^c010104b:	29 c2                	sub    %eax,%edx$/;"	l
c010104d	obj/kernel.asm	/^c010104d:	89 d0                	mov    %edx,%eax$/;"	l
c010104f	obj/kernel.asm	/^c010104f:	8d 90 00 d4 14 c0    	lea    -0x3feb2c00(%eax),%edx$/;"	l
c0101055	obj/kernel.asm	/^c0101055:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0101058	obj/kernel.asm	/^c0101058:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c010105b	obj/kernel.asm	/^c010105b:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010105f	obj/kernel.asm	/^c010105f:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101062	obj/kernel.asm	/^c0101062:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101069	obj/kernel.asm	/^c0101069:	29 c2                	sub    %eax,%edx$/;"	l
c010106b	obj/kernel.asm	/^c010106b:	89 d0                	mov    %edx,%eax$/;"	l
c010106d	obj/kernel.asm	/^c010106d:	8d 90 00 d4 14 c0    	lea    -0x3feb2c00(%eax),%edx$/;"	l
c0101073	obj/kernel.asm	/^c0101073:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0101076	obj/kernel.asm	/^c0101076:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c0101079	obj/kernel.asm	/^c0101079:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010107c	obj/kernel.asm	/^c010107c:	83 c0 62             	add    $0x62,%eax$/;"	l
c010107f	obj/kernel.asm	/^c010107f:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c0101082	obj/kernel.asm	/^c0101082:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101085	obj/kernel.asm	/^c0101085:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010108a	obj/kernel.asm	/^c010108a:	85 c0                	test   %eax,%eax$/;"	l
c010108c	obj/kernel.asm	/^c010108c:	75 16                	jne    c01010a4 <ide_init+0x1df>$/;"	l
c010108e	obj/kernel.asm	/^c010108e:	68 a4 3b 11 c0       	push   $0xc0113ba4$/;"	l
c0101093	obj/kernel.asm	/^c0101093:	68 e7 3b 11 c0       	push   $0xc0113be7$/;"	l
c0101098	obj/kernel.asm	/^c0101098:	6a 7d                	push   $0x7d$/;"	l
c010109a	obj/kernel.asm	/^c010109a:	68 fc 3b 11 c0       	push   $0xc0113bfc$/;"	l
c010109f	obj/kernel.asm	/^c010109f:	e8 2b f4 ff ff       	call   c01004cf <__panic>$/;"	l
c01010a4	obj/kernel.asm	/^c01010a4:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c01010a8	obj/kernel.asm	/^c01010a8:	89 c2                	mov    %eax,%edx$/;"	l
c01010aa	obj/kernel.asm	/^c01010aa:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c01010b1	obj/kernel.asm	/^c01010b1:	89 c2                	mov    %eax,%edx$/;"	l
c01010b3	obj/kernel.asm	/^c01010b3:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c01010ba	obj/kernel.asm	/^c01010ba:	29 d0                	sub    %edx,%eax$/;"	l
c01010bc	obj/kernel.asm	/^c01010bc:	05 00 d4 14 c0       	add    $0xc014d400,%eax$/;"	l
c01010c1	obj/kernel.asm	/^c01010c1:	83 c0 0c             	add    $0xc,%eax$/;"	l
c01010c4	obj/kernel.asm	/^c01010c4:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01010c7	obj/kernel.asm	/^c01010c7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01010ca	obj/kernel.asm	/^c01010ca:	83 c0 36             	add    $0x36,%eax$/;"	l
c01010cd	obj/kernel.asm	/^c01010cd:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01010d0	obj/kernel.asm	/^c01010d0:	c7 45 d4 28 00 00 00 	movl   $0x28,-0x2c(%ebp)$/;"	l
c01010d7	obj/kernel.asm	/^c01010d7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c01010de	obj/kernel.asm	/^c01010de:	eb 34                	jmp    c0101114 <ide_init+0x24f>$/;"	l
c01010e0	obj/kernel.asm	/^c01010e0:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01010e3	obj/kernel.asm	/^c01010e3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01010e6	obj/kernel.asm	/^c01010e6:	01 c2                	add    %eax,%edx$/;"	l
c01010e8	obj/kernel.asm	/^c01010e8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01010eb	obj/kernel.asm	/^c01010eb:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c01010ee	obj/kernel.asm	/^c01010ee:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01010f1	obj/kernel.asm	/^c01010f1:	01 c8                	add    %ecx,%eax$/;"	l
c01010f3	obj/kernel.asm	/^c01010f3:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01010f6	obj/kernel.asm	/^c01010f6:	88 02                	mov    %al,(%edx)$/;"	l
c01010f8	obj/kernel.asm	/^c01010f8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01010fb	obj/kernel.asm	/^c01010fb:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01010fe	obj/kernel.asm	/^c01010fe:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0101101	obj/kernel.asm	/^c0101101:	01 c2                	add    %eax,%edx$/;"	l
c0101103	obj/kernel.asm	/^c0101103:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
c0101106	obj/kernel.asm	/^c0101106:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101109	obj/kernel.asm	/^c0101109:	01 c8                	add    %ecx,%eax$/;"	l
c010110b	obj/kernel.asm	/^c010110b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010110e	obj/kernel.asm	/^c010110e:	88 02                	mov    %al,(%edx)$/;"	l
c0101110	obj/kernel.asm	/^c0101110:	83 45 ec 02          	addl   $0x2,-0x14(%ebp)$/;"	l
c0101114	obj/kernel.asm	/^c0101114:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101117	obj/kernel.asm	/^c0101117:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010111a	obj/kernel.asm	/^c010111a:	72 c4                	jb     c01010e0 <ide_init+0x21b>$/;"	l
c010111c	obj/kernel.asm	/^c010111c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010111f	obj/kernel.asm	/^c010111f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101122	obj/kernel.asm	/^c0101122:	01 d0                	add    %edx,%eax$/;"	l
c0101124	obj/kernel.asm	/^c0101124:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0101127	obj/kernel.asm	/^c0101127:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010112a	obj/kernel.asm	/^c010112a:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010112d	obj/kernel.asm	/^c010112d:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0101130	obj/kernel.asm	/^c0101130:	85 c0                	test   %eax,%eax$/;"	l
c0101132	obj/kernel.asm	/^c0101132:	74 0f                	je     c0101143 <ide_init+0x27e>$/;"	l
c0101134	obj/kernel.asm	/^c0101134:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0101137	obj/kernel.asm	/^c0101137:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010113a	obj/kernel.asm	/^c010113a:	01 d0                	add    %edx,%eax$/;"	l
c010113c	obj/kernel.asm	/^c010113c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010113f	obj/kernel.asm	/^c010113f:	3c 20                	cmp    $0x20,%al$/;"	l
c0101141	obj/kernel.asm	/^c0101141:	74 d9                	je     c010111c <ide_init+0x257>$/;"	l
c0101143	obj/kernel.asm	/^c0101143:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101147	obj/kernel.asm	/^c0101147:	89 c2                	mov    %eax,%edx$/;"	l
c0101149	obj/kernel.asm	/^c0101149:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c0101150	obj/kernel.asm	/^c0101150:	89 c2                	mov    %eax,%edx$/;"	l
c0101152	obj/kernel.asm	/^c0101152:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c0101159	obj/kernel.asm	/^c0101159:	29 d0                	sub    %edx,%eax$/;"	l
c010115b	obj/kernel.asm	/^c010115b:	05 00 d4 14 c0       	add    $0xc014d400,%eax$/;"	l
c0101160	obj/kernel.asm	/^c0101160:	8d 48 0c             	lea    0xc(%eax),%ecx$/;"	l
c0101163	obj/kernel.asm	/^c0101163:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101167	obj/kernel.asm	/^c0101167:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010116a	obj/kernel.asm	/^c010116a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101171	obj/kernel.asm	/^c0101171:	29 c2                	sub    %eax,%edx$/;"	l
c0101173	obj/kernel.asm	/^c0101173:	89 d0                	mov    %edx,%eax$/;"	l
c0101175	obj/kernel.asm	/^c0101175:	05 00 d4 14 c0       	add    $0xc014d400,%eax$/;"	l
c010117a	obj/kernel.asm	/^c010117a:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010117d	obj/kernel.asm	/^c010117d:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101181	obj/kernel.asm	/^c0101181:	51                   	push   %ecx$/;"	l
c0101182	obj/kernel.asm	/^c0101182:	52                   	push   %edx$/;"	l
c0101183	obj/kernel.asm	/^c0101183:	50                   	push   %eax$/;"	l
c0101184	obj/kernel.asm	/^c0101184:	68 0e 3c 11 c0       	push   $0xc0113c0e$/;"	l
c0101189	obj/kernel.asm	/^c0101189:	e8 dc f1 ff ff       	call   c010036a <cprintf>$/;"	l
c010118e	obj/kernel.asm	/^c010118e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101191	obj/kernel.asm	/^c0101191:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101195	obj/kernel.asm	/^c0101195:	83 c0 01             	add    $0x1,%eax$/;"	l
c0101198	obj/kernel.asm	/^c0101198:	66 89 45 f6          	mov    %ax,-0xa(%ebp)$/;"	l
c010119c	obj/kernel.asm	/^c010119c:	66 83 7d f6 03       	cmpw   $0x3,-0xa(%ebp)$/;"	l
c01011a1	obj/kernel.asm	/^c01011a1:	0f 86 34 fd ff ff    	jbe    c0100edb <ide_init+0x16>$/;"	l
c01011a7	obj/kernel.asm	/^c01011a7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01011aa	obj/kernel.asm	/^c01011aa:	6a 0e                	push   $0xe$/;"	l
c01011ac	obj/kernel.asm	/^c01011ac:	e8 7d 0e 00 00       	call   c010202e <pic_enable>$/;"	l
c01011b1	obj/kernel.asm	/^c01011b1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01011b4	obj/kernel.asm	/^c01011b4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01011b7	obj/kernel.asm	/^c01011b7:	6a 0f                	push   $0xf$/;"	l
c01011b9	obj/kernel.asm	/^c01011b9:	e8 70 0e 00 00       	call   c010202e <pic_enable>$/;"	l
c01011be	obj/kernel.asm	/^c01011be:	83 c4 10             	add    $0x10,%esp$/;"	l
c01011c1	obj/kernel.asm	/^c01011c1:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c01011c4	obj/kernel.asm	/^c01011c4:	5b                   	pop    %ebx$/;"	l
c01011c5	obj/kernel.asm	/^c01011c5:	5f                   	pop    %edi$/;"	l
c01011c6	obj/kernel.asm	/^c01011c6:	5d                   	pop    %ebp$/;"	l
c01011c7	obj/kernel.asm	/^c01011c7:	c3                   	ret    $/;"	l
c01011c8	obj/kernel.asm	/^c01011c8 <ide_device_valid>:$/;"	l
c01011c8	obj/kernel.asm	/^c01011c8:	55                   	push   %ebp$/;"	l
c01011c9	obj/kernel.asm	/^c01011c9:	89 e5                	mov    %esp,%ebp$/;"	l
c01011cb	obj/kernel.asm	/^c01011cb:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01011ce	obj/kernel.asm	/^c01011ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01011d1	obj/kernel.asm	/^c01011d1:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c01011d5	obj/kernel.asm	/^c01011d5:	66 83 7d fc 03       	cmpw   $0x3,-0x4(%ebp)$/;"	l
c01011da	obj/kernel.asm	/^c01011da:	77 25                	ja     c0101201 <ide_device_valid+0x39>$/;"	l
c01011dc	obj/kernel.asm	/^c01011dc:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c01011e0	obj/kernel.asm	/^c01011e0:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01011e3	obj/kernel.asm	/^c01011e3:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01011ea	obj/kernel.asm	/^c01011ea:	29 c2                	sub    %eax,%edx$/;"	l
c01011ec	obj/kernel.asm	/^c01011ec:	89 d0                	mov    %edx,%eax$/;"	l
c01011ee	obj/kernel.asm	/^c01011ee:	05 00 d4 14 c0       	add    $0xc014d400,%eax$/;"	l
c01011f3	obj/kernel.asm	/^c01011f3:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01011f6	obj/kernel.asm	/^c01011f6:	84 c0                	test   %al,%al$/;"	l
c01011f8	obj/kernel.asm	/^c01011f8:	74 07                	je     c0101201 <ide_device_valid+0x39>$/;"	l
c01011fa	obj/kernel.asm	/^c01011fa:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01011ff	obj/kernel.asm	/^c01011ff:	eb 05                	jmp    c0101206 <ide_device_valid+0x3e>$/;"	l
c0101201	obj/kernel.asm	/^c0101201:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101206	obj/kernel.asm	/^c0101206:	c9                   	leave  $/;"	l
c0101207	obj/kernel.asm	/^c0101207:	c3                   	ret    $/;"	l
c0101208	obj/kernel.asm	/^c0101208 <ide_device_size>:$/;"	l
c0101208	obj/kernel.asm	/^c0101208:	55                   	push   %ebp$/;"	l
c0101209	obj/kernel.asm	/^c0101209:	89 e5                	mov    %esp,%ebp$/;"	l
c010120b	obj/kernel.asm	/^c010120b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010120e	obj/kernel.asm	/^c010120e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101211	obj/kernel.asm	/^c0101211:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c0101215	obj/kernel.asm	/^c0101215:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101219	obj/kernel.asm	/^c0101219:	50                   	push   %eax$/;"	l
c010121a	obj/kernel.asm	/^c010121a:	e8 a9 ff ff ff       	call   c01011c8 <ide_device_valid>$/;"	l
c010121f	obj/kernel.asm	/^c010121f:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101222	obj/kernel.asm	/^c0101222:	85 c0                	test   %eax,%eax$/;"	l
c0101224	obj/kernel.asm	/^c0101224:	74 1c                	je     c0101242 <ide_device_size+0x3a>$/;"	l
c0101226	obj/kernel.asm	/^c0101226:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c010122a	obj/kernel.asm	/^c010122a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010122d	obj/kernel.asm	/^c010122d:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101234	obj/kernel.asm	/^c0101234:	29 c2                	sub    %eax,%edx$/;"	l
c0101236	obj/kernel.asm	/^c0101236:	89 d0                	mov    %edx,%eax$/;"	l
c0101238	obj/kernel.asm	/^c0101238:	05 00 d4 14 c0       	add    $0xc014d400,%eax$/;"	l
c010123d	obj/kernel.asm	/^c010123d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0101240	obj/kernel.asm	/^c0101240:	eb 05                	jmp    c0101247 <ide_device_size+0x3f>$/;"	l
c0101242	obj/kernel.asm	/^c0101242:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101247	obj/kernel.asm	/^c0101247:	c9                   	leave  $/;"	l
c0101248	obj/kernel.asm	/^c0101248:	c3                   	ret    $/;"	l
c0101249	obj/kernel.asm	/^c0101249 <ide_read_secs>:$/;"	l
c0101249	obj/kernel.asm	/^c0101249:	55                   	push   %ebp$/;"	l
c010124a	obj/kernel.asm	/^c010124a:	89 e5                	mov    %esp,%ebp$/;"	l
c010124c	obj/kernel.asm	/^c010124c:	57                   	push   %edi$/;"	l
c010124d	obj/kernel.asm	/^c010124d:	53                   	push   %ebx$/;"	l
c010124e	obj/kernel.asm	/^c010124e:	83 ec 40             	sub    $0x40,%esp$/;"	l
c0101251	obj/kernel.asm	/^c0101251:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101254	obj/kernel.asm	/^c0101254:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101258	obj/kernel.asm	/^c0101258:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c010125f	obj/kernel.asm	/^c010125f:	77 25                	ja     c0101286 <ide_read_secs+0x3d>$/;"	l
c0101261	obj/kernel.asm	/^c0101261:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c0101266	obj/kernel.asm	/^c0101266:	77 1e                	ja     c0101286 <ide_read_secs+0x3d>$/;"	l
c0101268	obj/kernel.asm	/^c0101268:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c010126c	obj/kernel.asm	/^c010126c:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010126f	obj/kernel.asm	/^c010126f:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101276	obj/kernel.asm	/^c0101276:	29 c2                	sub    %eax,%edx$/;"	l
c0101278	obj/kernel.asm	/^c0101278:	89 d0                	mov    %edx,%eax$/;"	l
c010127a	obj/kernel.asm	/^c010127a:	05 00 d4 14 c0       	add    $0xc014d400,%eax$/;"	l
c010127f	obj/kernel.asm	/^c010127f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101282	obj/kernel.asm	/^c0101282:	84 c0                	test   %al,%al$/;"	l
c0101284	obj/kernel.asm	/^c0101284:	75 19                	jne    c010129f <ide_read_secs+0x56>$/;"	l
c0101286	obj/kernel.asm	/^c0101286:	68 2c 3c 11 c0       	push   $0xc0113c2c$/;"	l
c010128b	obj/kernel.asm	/^c010128b:	68 e7 3b 11 c0       	push   $0xc0113be7$/;"	l
c0101290	obj/kernel.asm	/^c0101290:	68 9f 00 00 00       	push   $0x9f$/;"	l
c0101295	obj/kernel.asm	/^c0101295:	68 fc 3b 11 c0       	push   $0xc0113bfc$/;"	l
c010129a	obj/kernel.asm	/^c010129a:	e8 30 f2 ff ff       	call   c01004cf <__panic>$/;"	l
c010129f	obj/kernel.asm	/^c010129f:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c01012a6	obj/kernel.asm	/^c01012a6:	77 0f                	ja     c01012b7 <ide_read_secs+0x6e>$/;"	l
c01012a8	obj/kernel.asm	/^c01012a8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01012ab	obj/kernel.asm	/^c01012ab:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01012ae	obj/kernel.asm	/^c01012ae:	01 d0                	add    %edx,%eax$/;"	l
c01012b0	obj/kernel.asm	/^c01012b0:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c01012b5	obj/kernel.asm	/^c01012b5:	76 19                	jbe    c01012d0 <ide_read_secs+0x87>$/;"	l
c01012b7	obj/kernel.asm	/^c01012b7:	68 54 3c 11 c0       	push   $0xc0113c54$/;"	l
c01012bc	obj/kernel.asm	/^c01012bc:	68 e7 3b 11 c0       	push   $0xc0113be7$/;"	l
c01012c1	obj/kernel.asm	/^c01012c1:	68 a0 00 00 00       	push   $0xa0$/;"	l
c01012c6	obj/kernel.asm	/^c01012c6:	68 fc 3b 11 c0       	push   $0xc0113bfc$/;"	l
c01012cb	obj/kernel.asm	/^c01012cb:	e8 ff f1 ff ff       	call   c01004cf <__panic>$/;"	l
c01012d0	obj/kernel.asm	/^c01012d0:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01012d4	obj/kernel.asm	/^c01012d4:	66 d1 e8             	shr    %ax$/;"	l
c01012d7	obj/kernel.asm	/^c01012d7:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01012da	obj/kernel.asm	/^c01012da:	0f b7 04 85 9c 3b 11 	movzwl -0x3feec464(,%eax,4),%eax$/;"	l
c01012e1	obj/kernel.asm	/^c01012e1:	c0 $/;"	l
c01012e2	obj/kernel.asm	/^c01012e2:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c01012e6	obj/kernel.asm	/^c01012e6:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01012ea	obj/kernel.asm	/^c01012ea:	66 d1 e8             	shr    %ax$/;"	l
c01012ed	obj/kernel.asm	/^c01012ed:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01012f0	obj/kernel.asm	/^c01012f0:	0f b7 04 85 9e 3b 11 	movzwl -0x3feec462(,%eax,4),%eax$/;"	l
c01012f7	obj/kernel.asm	/^c01012f7:	c0 $/;"	l
c01012f8	obj/kernel.asm	/^c01012f8:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c01012fc	obj/kernel.asm	/^c01012fc:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101300	obj/kernel.asm	/^c0101300:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101303	obj/kernel.asm	/^c0101303:	6a 00                	push   $0x0$/;"	l
c0101305	obj/kernel.asm	/^c0101305:	50                   	push   %eax$/;"	l
c0101306	obj/kernel.asm	/^c0101306:	e8 60 fb ff ff       	call   c0100e6b <ide_wait_ready>$/;"	l
c010130b	obj/kernel.asm	/^c010130b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010130e	obj/kernel.asm	/^c010130e:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101312	obj/kernel.asm	/^c0101312:	83 c0 02             	add    $0x2,%eax$/;"	l
c0101315	obj/kernel.asm	/^c0101315:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101318	obj/kernel.asm	/^c0101318:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c010131c	obj/kernel.asm	/^c010131c:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c0101320	obj/kernel.asm	/^c0101320:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101324	obj/kernel.asm	/^c0101324:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101328	obj/kernel.asm	/^c0101328:	ee                   	out    %al,(%dx)$/;"	l
c0101329	obj/kernel.asm	/^c0101329:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010132c	obj/kernel.asm	/^c010132c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010132f	obj/kernel.asm	/^c010132f:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101333	obj/kernel.asm	/^c0101333:	83 c2 02             	add    $0x2,%edx$/;"	l
c0101336	obj/kernel.asm	/^c0101336:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101339	obj/kernel.asm	/^c0101339:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c010133d	obj/kernel.asm	/^c010133d:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c0101340	obj/kernel.asm	/^c0101340:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101344	obj/kernel.asm	/^c0101344:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101348	obj/kernel.asm	/^c0101348:	ee                   	out    %al,(%dx)$/;"	l
c0101349	obj/kernel.asm	/^c0101349:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010134c	obj/kernel.asm	/^c010134c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010134f	obj/kernel.asm	/^c010134f:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101353	obj/kernel.asm	/^c0101353:	83 c2 03             	add    $0x3,%edx$/;"	l
c0101356	obj/kernel.asm	/^c0101356:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101359	obj/kernel.asm	/^c0101359:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c010135d	obj/kernel.asm	/^c010135d:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101360	obj/kernel.asm	/^c0101360:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101364	obj/kernel.asm	/^c0101364:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101368	obj/kernel.asm	/^c0101368:	ee                   	out    %al,(%dx)$/;"	l
c0101369	obj/kernel.asm	/^c0101369:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010136c	obj/kernel.asm	/^c010136c:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c010136f	obj/kernel.asm	/^c010136f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101372	obj/kernel.asm	/^c0101372:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101376	obj/kernel.asm	/^c0101376:	83 c2 04             	add    $0x4,%edx$/;"	l
c0101379	obj/kernel.asm	/^c0101379:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010137c	obj/kernel.asm	/^c010137c:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c0101380	obj/kernel.asm	/^c0101380:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c0101383	obj/kernel.asm	/^c0101383:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0101387	obj/kernel.asm	/^c0101387:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c010138b	obj/kernel.asm	/^c010138b:	ee                   	out    %al,(%dx)$/;"	l
c010138c	obj/kernel.asm	/^c010138c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010138f	obj/kernel.asm	/^c010138f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101392	obj/kernel.asm	/^c0101392:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101395	obj/kernel.asm	/^c0101395:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101399	obj/kernel.asm	/^c0101399:	83 c2 05             	add    $0x5,%edx$/;"	l
c010139c	obj/kernel.asm	/^c010139c:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010139f	obj/kernel.asm	/^c010139f:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c01013a3	obj/kernel.asm	/^c01013a3:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c01013a6	obj/kernel.asm	/^c01013a6:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c01013aa	obj/kernel.asm	/^c01013aa:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c01013ae	obj/kernel.asm	/^c01013ae:	ee                   	out    %al,(%dx)$/;"	l
c01013af	obj/kernel.asm	/^c01013af:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01013b3	obj/kernel.asm	/^c01013b3:	83 e0 01             	and    $0x1,%eax$/;"	l
c01013b6	obj/kernel.asm	/^c01013b6:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c01013b9	obj/kernel.asm	/^c01013b9:	89 c2                	mov    %eax,%edx$/;"	l
c01013bb	obj/kernel.asm	/^c01013bb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01013be	obj/kernel.asm	/^c01013be:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c01013c1	obj/kernel.asm	/^c01013c1:	83 e0 0f             	and    $0xf,%eax$/;"	l
c01013c4	obj/kernel.asm	/^c01013c4:	09 d0                	or     %edx,%eax$/;"	l
c01013c6	obj/kernel.asm	/^c01013c6:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c01013c9	obj/kernel.asm	/^c01013c9:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01013cc	obj/kernel.asm	/^c01013cc:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01013d0	obj/kernel.asm	/^c01013d0:	83 c2 06             	add    $0x6,%edx$/;"	l
c01013d3	obj/kernel.asm	/^c01013d3:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01013d6	obj/kernel.asm	/^c01013d6:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c01013da	obj/kernel.asm	/^c01013da:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c01013dd	obj/kernel.asm	/^c01013dd:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c01013e1	obj/kernel.asm	/^c01013e1:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c01013e5	obj/kernel.asm	/^c01013e5:	ee                   	out    %al,(%dx)$/;"	l
c01013e6	obj/kernel.asm	/^c01013e6:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01013ea	obj/kernel.asm	/^c01013ea:	83 c0 07             	add    $0x7,%eax$/;"	l
c01013ed	obj/kernel.asm	/^c01013ed:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01013f0	obj/kernel.asm	/^c01013f0:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c01013f4	obj/kernel.asm	/^c01013f4:	c6 45 d5 20          	movb   $0x20,-0x2b(%ebp)$/;"	l
c01013f8	obj/kernel.asm	/^c01013f8:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c01013fc	obj/kernel.asm	/^c01013fc:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0101400	obj/kernel.asm	/^c0101400:	ee                   	out    %al,(%dx)$/;"	l
c0101401	obj/kernel.asm	/^c0101401:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101408	obj/kernel.asm	/^c0101408:	eb 58                	jmp    c0101462 <ide_read_secs+0x219>$/;"	l
c010140a	obj/kernel.asm	/^c010140a:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010140e	obj/kernel.asm	/^c010140e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101411	obj/kernel.asm	/^c0101411:	6a 01                	push   $0x1$/;"	l
c0101413	obj/kernel.asm	/^c0101413:	50                   	push   %eax$/;"	l
c0101414	obj/kernel.asm	/^c0101414:	e8 52 fa ff ff       	call   c0100e6b <ide_wait_ready>$/;"	l
c0101419	obj/kernel.asm	/^c0101419:	83 c4 10             	add    $0x10,%esp$/;"	l
c010141c	obj/kernel.asm	/^c010141c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010141f	obj/kernel.asm	/^c010141f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101423	obj/kernel.asm	/^c0101423:	74 02                	je     c0101427 <ide_read_secs+0x1de>$/;"	l
c0101425	obj/kernel.asm	/^c0101425:	eb 41                	jmp    c0101468 <ide_read_secs+0x21f>$/;"	l
c0101427	obj/kernel.asm	/^c0101427:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010142b	obj/kernel.asm	/^c010142b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010142e	obj/kernel.asm	/^c010142e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101431	obj/kernel.asm	/^c0101431:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0101434	obj/kernel.asm	/^c0101434:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c010143b	obj/kernel.asm	/^c010143b:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010143e	obj/kernel.asm	/^c010143e:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c0101441	obj/kernel.asm	/^c0101441:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0101444	obj/kernel.asm	/^c0101444:	89 cb                	mov    %ecx,%ebx$/;"	l
c0101446	obj/kernel.asm	/^c0101446:	89 df                	mov    %ebx,%edi$/;"	l
c0101448	obj/kernel.asm	/^c0101448:	89 c1                	mov    %eax,%ecx$/;"	l
c010144a	obj/kernel.asm	/^c010144a:	fc                   	cld    $/;"	l
c010144b	obj/kernel.asm	/^c010144b:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c010144d	obj/kernel.asm	/^c010144d:	89 c8                	mov    %ecx,%eax$/;"	l
c010144f	obj/kernel.asm	/^c010144f:	89 fb                	mov    %edi,%ebx$/;"	l
c0101451	obj/kernel.asm	/^c0101451:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c0101454	obj/kernel.asm	/^c0101454:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0101457	obj/kernel.asm	/^c0101457:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c010145b	obj/kernel.asm	/^c010145b:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c0101462	obj/kernel.asm	/^c0101462:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0101466	obj/kernel.asm	/^c0101466:	75 a2                	jne    c010140a <ide_read_secs+0x1c1>$/;"	l
c0101468	obj/kernel.asm	/^c0101468:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010146b	obj/kernel.asm	/^c010146b:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c010146e	obj/kernel.asm	/^c010146e:	5b                   	pop    %ebx$/;"	l
c010146f	obj/kernel.asm	/^c010146f:	5f                   	pop    %edi$/;"	l
c0101470	obj/kernel.asm	/^c0101470:	5d                   	pop    %ebp$/;"	l
c0101471	obj/kernel.asm	/^c0101471:	c3                   	ret    $/;"	l
c0101472	obj/kernel.asm	/^c0101472 <ide_write_secs>:$/;"	l
c0101472	obj/kernel.asm	/^c0101472:	55                   	push   %ebp$/;"	l
c0101473	obj/kernel.asm	/^c0101473:	89 e5                	mov    %esp,%ebp$/;"	l
c0101475	obj/kernel.asm	/^c0101475:	56                   	push   %esi$/;"	l
c0101476	obj/kernel.asm	/^c0101476:	53                   	push   %ebx$/;"	l
c0101477	obj/kernel.asm	/^c0101477:	83 ec 40             	sub    $0x40,%esp$/;"	l
c010147a	obj/kernel.asm	/^c010147a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010147d	obj/kernel.asm	/^c010147d:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101481	obj/kernel.asm	/^c0101481:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c0101488	obj/kernel.asm	/^c0101488:	77 25                	ja     c01014af <ide_write_secs+0x3d>$/;"	l
c010148a	obj/kernel.asm	/^c010148a:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c010148f	obj/kernel.asm	/^c010148f:	77 1e                	ja     c01014af <ide_write_secs+0x3d>$/;"	l
c0101491	obj/kernel.asm	/^c0101491:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101495	obj/kernel.asm	/^c0101495:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101498	obj/kernel.asm	/^c0101498:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010149f	obj/kernel.asm	/^c010149f:	29 c2                	sub    %eax,%edx$/;"	l
c01014a1	obj/kernel.asm	/^c01014a1:	89 d0                	mov    %edx,%eax$/;"	l
c01014a3	obj/kernel.asm	/^c01014a3:	05 00 d4 14 c0       	add    $0xc014d400,%eax$/;"	l
c01014a8	obj/kernel.asm	/^c01014a8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01014ab	obj/kernel.asm	/^c01014ab:	84 c0                	test   %al,%al$/;"	l
c01014ad	obj/kernel.asm	/^c01014ad:	75 19                	jne    c01014c8 <ide_write_secs+0x56>$/;"	l
c01014af	obj/kernel.asm	/^c01014af:	68 2c 3c 11 c0       	push   $0xc0113c2c$/;"	l
c01014b4	obj/kernel.asm	/^c01014b4:	68 e7 3b 11 c0       	push   $0xc0113be7$/;"	l
c01014b9	obj/kernel.asm	/^c01014b9:	68 bc 00 00 00       	push   $0xbc$/;"	l
c01014be	obj/kernel.asm	/^c01014be:	68 fc 3b 11 c0       	push   $0xc0113bfc$/;"	l
c01014c3	obj/kernel.asm	/^c01014c3:	e8 07 f0 ff ff       	call   c01004cf <__panic>$/;"	l
c01014c8	obj/kernel.asm	/^c01014c8:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c01014cf	obj/kernel.asm	/^c01014cf:	77 0f                	ja     c01014e0 <ide_write_secs+0x6e>$/;"	l
c01014d1	obj/kernel.asm	/^c01014d1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01014d4	obj/kernel.asm	/^c01014d4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01014d7	obj/kernel.asm	/^c01014d7:	01 d0                	add    %edx,%eax$/;"	l
c01014d9	obj/kernel.asm	/^c01014d9:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c01014de	obj/kernel.asm	/^c01014de:	76 19                	jbe    c01014f9 <ide_write_secs+0x87>$/;"	l
c01014e0	obj/kernel.asm	/^c01014e0:	68 54 3c 11 c0       	push   $0xc0113c54$/;"	l
c01014e5	obj/kernel.asm	/^c01014e5:	68 e7 3b 11 c0       	push   $0xc0113be7$/;"	l
c01014ea	obj/kernel.asm	/^c01014ea:	68 bd 00 00 00       	push   $0xbd$/;"	l
c01014ef	obj/kernel.asm	/^c01014ef:	68 fc 3b 11 c0       	push   $0xc0113bfc$/;"	l
c01014f4	obj/kernel.asm	/^c01014f4:	e8 d6 ef ff ff       	call   c01004cf <__panic>$/;"	l
c01014f9	obj/kernel.asm	/^c01014f9:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01014fd	obj/kernel.asm	/^c01014fd:	66 d1 e8             	shr    %ax$/;"	l
c0101500	obj/kernel.asm	/^c0101500:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101503	obj/kernel.asm	/^c0101503:	0f b7 04 85 9c 3b 11 	movzwl -0x3feec464(,%eax,4),%eax$/;"	l
c010150a	obj/kernel.asm	/^c010150a:	c0 $/;"	l
c010150b	obj/kernel.asm	/^c010150b:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c010150f	obj/kernel.asm	/^c010150f:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101513	obj/kernel.asm	/^c0101513:	66 d1 e8             	shr    %ax$/;"	l
c0101516	obj/kernel.asm	/^c0101516:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101519	obj/kernel.asm	/^c0101519:	0f b7 04 85 9e 3b 11 	movzwl -0x3feec462(,%eax,4),%eax$/;"	l
c0101520	obj/kernel.asm	/^c0101520:	c0 $/;"	l
c0101521	obj/kernel.asm	/^c0101521:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c0101525	obj/kernel.asm	/^c0101525:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101529	obj/kernel.asm	/^c0101529:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010152c	obj/kernel.asm	/^c010152c:	6a 00                	push   $0x0$/;"	l
c010152e	obj/kernel.asm	/^c010152e:	50                   	push   %eax$/;"	l
c010152f	obj/kernel.asm	/^c010152f:	e8 37 f9 ff ff       	call   c0100e6b <ide_wait_ready>$/;"	l
c0101534	obj/kernel.asm	/^c0101534:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101537	obj/kernel.asm	/^c0101537:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c010153b	obj/kernel.asm	/^c010153b:	83 c0 02             	add    $0x2,%eax$/;"	l
c010153e	obj/kernel.asm	/^c010153e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101541	obj/kernel.asm	/^c0101541:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0101545	obj/kernel.asm	/^c0101545:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c0101549	obj/kernel.asm	/^c0101549:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c010154d	obj/kernel.asm	/^c010154d:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101551	obj/kernel.asm	/^c0101551:	ee                   	out    %al,(%dx)$/;"	l
c0101552	obj/kernel.asm	/^c0101552:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101555	obj/kernel.asm	/^c0101555:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101558	obj/kernel.asm	/^c0101558:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010155c	obj/kernel.asm	/^c010155c:	83 c2 02             	add    $0x2,%edx$/;"	l
c010155f	obj/kernel.asm	/^c010155f:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101562	obj/kernel.asm	/^c0101562:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c0101566	obj/kernel.asm	/^c0101566:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c0101569	obj/kernel.asm	/^c0101569:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c010156d	obj/kernel.asm	/^c010156d:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101571	obj/kernel.asm	/^c0101571:	ee                   	out    %al,(%dx)$/;"	l
c0101572	obj/kernel.asm	/^c0101572:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101575	obj/kernel.asm	/^c0101575:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101578	obj/kernel.asm	/^c0101578:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010157c	obj/kernel.asm	/^c010157c:	83 c2 03             	add    $0x3,%edx$/;"	l
c010157f	obj/kernel.asm	/^c010157f:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101582	obj/kernel.asm	/^c0101582:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101586	obj/kernel.asm	/^c0101586:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101589	obj/kernel.asm	/^c0101589:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c010158d	obj/kernel.asm	/^c010158d:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101591	obj/kernel.asm	/^c0101591:	ee                   	out    %al,(%dx)$/;"	l
c0101592	obj/kernel.asm	/^c0101592:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101595	obj/kernel.asm	/^c0101595:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0101598	obj/kernel.asm	/^c0101598:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010159b	obj/kernel.asm	/^c010159b:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010159f	obj/kernel.asm	/^c010159f:	83 c2 04             	add    $0x4,%edx$/;"	l
c01015a2	obj/kernel.asm	/^c01015a2:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01015a5	obj/kernel.asm	/^c01015a5:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c01015a9	obj/kernel.asm	/^c01015a9:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c01015ac	obj/kernel.asm	/^c01015ac:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01015b0	obj/kernel.asm	/^c01015b0:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c01015b4	obj/kernel.asm	/^c01015b4:	ee                   	out    %al,(%dx)$/;"	l
c01015b5	obj/kernel.asm	/^c01015b5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01015b8	obj/kernel.asm	/^c01015b8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01015bb	obj/kernel.asm	/^c01015bb:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01015be	obj/kernel.asm	/^c01015be:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01015c2	obj/kernel.asm	/^c01015c2:	83 c2 05             	add    $0x5,%edx$/;"	l
c01015c5	obj/kernel.asm	/^c01015c5:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01015c8	obj/kernel.asm	/^c01015c8:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c01015cc	obj/kernel.asm	/^c01015cc:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c01015cf	obj/kernel.asm	/^c01015cf:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c01015d3	obj/kernel.asm	/^c01015d3:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c01015d7	obj/kernel.asm	/^c01015d7:	ee                   	out    %al,(%dx)$/;"	l
c01015d8	obj/kernel.asm	/^c01015d8:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01015dc	obj/kernel.asm	/^c01015dc:	83 e0 01             	and    $0x1,%eax$/;"	l
c01015df	obj/kernel.asm	/^c01015df:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c01015e2	obj/kernel.asm	/^c01015e2:	89 c2                	mov    %eax,%edx$/;"	l
c01015e4	obj/kernel.asm	/^c01015e4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01015e7	obj/kernel.asm	/^c01015e7:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c01015ea	obj/kernel.asm	/^c01015ea:	83 e0 0f             	and    $0xf,%eax$/;"	l
c01015ed	obj/kernel.asm	/^c01015ed:	09 d0                	or     %edx,%eax$/;"	l
c01015ef	obj/kernel.asm	/^c01015ef:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c01015f2	obj/kernel.asm	/^c01015f2:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01015f5	obj/kernel.asm	/^c01015f5:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01015f9	obj/kernel.asm	/^c01015f9:	83 c2 06             	add    $0x6,%edx$/;"	l
c01015fc	obj/kernel.asm	/^c01015fc:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01015ff	obj/kernel.asm	/^c01015ff:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c0101603	obj/kernel.asm	/^c0101603:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c0101606	obj/kernel.asm	/^c0101606:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c010160a	obj/kernel.asm	/^c010160a:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c010160e	obj/kernel.asm	/^c010160e:	ee                   	out    %al,(%dx)$/;"	l
c010160f	obj/kernel.asm	/^c010160f:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101613	obj/kernel.asm	/^c0101613:	83 c0 07             	add    $0x7,%eax$/;"	l
c0101616	obj/kernel.asm	/^c0101616:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101619	obj/kernel.asm	/^c0101619:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c010161d	obj/kernel.asm	/^c010161d:	c6 45 d5 30          	movb   $0x30,-0x2b(%ebp)$/;"	l
c0101621	obj/kernel.asm	/^c0101621:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0101625	obj/kernel.asm	/^c0101625:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0101629	obj/kernel.asm	/^c0101629:	ee                   	out    %al,(%dx)$/;"	l
c010162a	obj/kernel.asm	/^c010162a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101631	obj/kernel.asm	/^c0101631:	eb 58                	jmp    c010168b <ide_write_secs+0x219>$/;"	l
c0101633	obj/kernel.asm	/^c0101633:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101637	obj/kernel.asm	/^c0101637:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010163a	obj/kernel.asm	/^c010163a:	6a 01                	push   $0x1$/;"	l
c010163c	obj/kernel.asm	/^c010163c:	50                   	push   %eax$/;"	l
c010163d	obj/kernel.asm	/^c010163d:	e8 29 f8 ff ff       	call   c0100e6b <ide_wait_ready>$/;"	l
c0101642	obj/kernel.asm	/^c0101642:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101645	obj/kernel.asm	/^c0101645:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101648	obj/kernel.asm	/^c0101648:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010164c	obj/kernel.asm	/^c010164c:	74 02                	je     c0101650 <ide_write_secs+0x1de>$/;"	l
c010164e	obj/kernel.asm	/^c010164e:	eb 41                	jmp    c0101691 <ide_write_secs+0x21f>$/;"	l
c0101650	obj/kernel.asm	/^c0101650:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101654	obj/kernel.asm	/^c0101654:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0101657	obj/kernel.asm	/^c0101657:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010165a	obj/kernel.asm	/^c010165a:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010165d	obj/kernel.asm	/^c010165d:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c0101664	obj/kernel.asm	/^c0101664:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0101667	obj/kernel.asm	/^c0101667:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c010166a	obj/kernel.asm	/^c010166a:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010166d	obj/kernel.asm	/^c010166d:	89 cb                	mov    %ecx,%ebx$/;"	l
c010166f	obj/kernel.asm	/^c010166f:	89 de                	mov    %ebx,%esi$/;"	l
c0101671	obj/kernel.asm	/^c0101671:	89 c1                	mov    %eax,%ecx$/;"	l
c0101673	obj/kernel.asm	/^c0101673:	fc                   	cld    $/;"	l
c0101674	obj/kernel.asm	/^c0101674:	f2 6f                	repnz outsl %ds:(%esi),(%dx)$/;"	l
c0101676	obj/kernel.asm	/^c0101676:	89 c8                	mov    %ecx,%eax$/;"	l
c0101678	obj/kernel.asm	/^c0101678:	89 f3                	mov    %esi,%ebx$/;"	l
c010167a	obj/kernel.asm	/^c010167a:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c010167d	obj/kernel.asm	/^c010167d:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0101680	obj/kernel.asm	/^c0101680:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0101684	obj/kernel.asm	/^c0101684:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c010168b	obj/kernel.asm	/^c010168b:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010168f	obj/kernel.asm	/^c010168f:	75 a2                	jne    c0101633 <ide_write_secs+0x1c1>$/;"	l
c0101691	obj/kernel.asm	/^c0101691:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101694	obj/kernel.asm	/^c0101694:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c0101697	obj/kernel.asm	/^c0101697:	5b                   	pop    %ebx$/;"	l
c0101698	obj/kernel.asm	/^c0101698:	5e                   	pop    %esi$/;"	l
c0101699	obj/kernel.asm	/^c0101699:	5d                   	pop    %ebp$/;"	l
c010169a	obj/kernel.asm	/^c010169a:	c3                   	ret    $/;"	l
c010169b	obj/kernel.asm	/^c010169b <SYSTEM_READ_TIMER>:$/;"	l
c010169b	obj/kernel.asm	/^c010169b:	55                   	push   %ebp$/;"	l
c010169c	obj/kernel.asm	/^c010169c:	89 e5                	mov    %esp,%ebp$/;"	l
c010169e	obj/kernel.asm	/^c010169e:	a1 a0 11 15 c0       	mov    0xc01511a0,%eax$/;"	l
c01016a3	obj/kernel.asm	/^c01016a3:	5d                   	pop    %ebp$/;"	l
c01016a4	obj/kernel.asm	/^c01016a4:	c3                   	ret    $/;"	l
c01016a5	obj/kernel.asm	/^c01016a5 <clock_init>:$/;"	l
c01016a5	obj/kernel.asm	/^c01016a5:	55                   	push   %ebp$/;"	l
c01016a6	obj/kernel.asm	/^c01016a6:	89 e5                	mov    %esp,%ebp$/;"	l
c01016a8	obj/kernel.asm	/^c01016a8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01016ab	obj/kernel.asm	/^c01016ab:	66 c7 45 f6 43 00    	movw   $0x43,-0xa(%ebp)$/;"	l
c01016b1	obj/kernel.asm	/^c01016b1:	c6 45 f5 34          	movb   $0x34,-0xb(%ebp)$/;"	l
c01016b5	obj/kernel.asm	/^c01016b5:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c01016b9	obj/kernel.asm	/^c01016b9:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c01016bd	obj/kernel.asm	/^c01016bd:	ee                   	out    %al,(%dx)$/;"	l
c01016be	obj/kernel.asm	/^c01016be:	66 c7 45 f2 40 00    	movw   $0x40,-0xe(%ebp)$/;"	l
c01016c4	obj/kernel.asm	/^c01016c4:	c6 45 f1 9c          	movb   $0x9c,-0xf(%ebp)$/;"	l
c01016c8	obj/kernel.asm	/^c01016c8:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01016cc	obj/kernel.asm	/^c01016cc:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01016d0	obj/kernel.asm	/^c01016d0:	ee                   	out    %al,(%dx)$/;"	l
c01016d1	obj/kernel.asm	/^c01016d1:	66 c7 45 ee 40 00    	movw   $0x40,-0x12(%ebp)$/;"	l
c01016d7	obj/kernel.asm	/^c01016d7:	c6 45 ed 2e          	movb   $0x2e,-0x13(%ebp)$/;"	l
c01016db	obj/kernel.asm	/^c01016db:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01016df	obj/kernel.asm	/^c01016df:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01016e3	obj/kernel.asm	/^c01016e3:	ee                   	out    %al,(%dx)$/;"	l
c01016e4	obj/kernel.asm	/^c01016e4:	c7 05 a0 11 15 c0 00 	movl   $0x0,0xc01511a0$/;"	l
c01016eb	obj/kernel.asm	/^c01016eb:	00 00 00 $/;"	l
c01016ee	obj/kernel.asm	/^c01016ee:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01016f1	obj/kernel.asm	/^c01016f1:	68 8e 3c 11 c0       	push   $0xc0113c8e$/;"	l
c01016f6	obj/kernel.asm	/^c01016f6:	e8 6f ec ff ff       	call   c010036a <cprintf>$/;"	l
c01016fb	obj/kernel.asm	/^c01016fb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01016fe	obj/kernel.asm	/^c01016fe:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101701	obj/kernel.asm	/^c0101701:	6a 00                	push   $0x0$/;"	l
c0101703	obj/kernel.asm	/^c0101703:	e8 26 09 00 00       	call   c010202e <pic_enable>$/;"	l
c0101708	obj/kernel.asm	/^c0101708:	83 c4 10             	add    $0x10,%esp$/;"	l
c010170b	obj/kernel.asm	/^c010170b:	c9                   	leave  $/;"	l
c010170c	obj/kernel.asm	/^c010170c:	c3                   	ret    $/;"	l
c010170d	obj/kernel.asm	/^c010170d <__intr_save>:$/;"	l
c010170d	obj/kernel.asm	/^c010170d:	55                   	push   %ebp$/;"	l
c010170e	obj/kernel.asm	/^c010170e:	89 e5                	mov    %esp,%ebp$/;"	l
c0101710	obj/kernel.asm	/^c0101710:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101713	obj/kernel.asm	/^c0101713:	9c                   	pushf  $/;"	l
c0101714	obj/kernel.asm	/^c0101714:	58                   	pop    %eax$/;"	l
c0101715	obj/kernel.asm	/^c0101715:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101718	obj/kernel.asm	/^c0101718:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010171b	obj/kernel.asm	/^c010171b:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0101720	obj/kernel.asm	/^c0101720:	85 c0                	test   %eax,%eax$/;"	l
c0101722	obj/kernel.asm	/^c0101722:	74 0c                	je     c0101730 <__intr_save+0x23>$/;"	l
c0101724	obj/kernel.asm	/^c0101724:	e8 73 0a 00 00       	call   c010219c <intr_disable>$/;"	l
c0101729	obj/kernel.asm	/^c0101729:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010172e	obj/kernel.asm	/^c010172e:	eb 05                	jmp    c0101735 <__intr_save+0x28>$/;"	l
c0101730	obj/kernel.asm	/^c0101730:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101735	obj/kernel.asm	/^c0101735:	c9                   	leave  $/;"	l
c0101736	obj/kernel.asm	/^c0101736:	c3                   	ret    $/;"	l
c0101737	obj/kernel.asm	/^c0101737 <__intr_restore>:$/;"	l
c0101737	obj/kernel.asm	/^c0101737:	55                   	push   %ebp$/;"	l
c0101738	obj/kernel.asm	/^c0101738:	89 e5                	mov    %esp,%ebp$/;"	l
c010173a	obj/kernel.asm	/^c010173a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010173d	obj/kernel.asm	/^c010173d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0101741	obj/kernel.asm	/^c0101741:	74 05                	je     c0101748 <__intr_restore+0x11>$/;"	l
c0101743	obj/kernel.asm	/^c0101743:	e8 4e 0a 00 00       	call   c0102196 <intr_enable>$/;"	l
c0101748	obj/kernel.asm	/^c0101748:	c9                   	leave  $/;"	l
c0101749	obj/kernel.asm	/^c0101749:	c3                   	ret    $/;"	l
c010174a	obj/kernel.asm	/^c010174a <delay>:$/;"	l
c010174a	obj/kernel.asm	/^c010174a:	55                   	push   %ebp$/;"	l
c010174b	obj/kernel.asm	/^c010174b:	89 e5                	mov    %esp,%ebp$/;"	l
c010174d	obj/kernel.asm	/^c010174d:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101750	obj/kernel.asm	/^c0101750:	66 c7 45 fe 84 00    	movw   $0x84,-0x2(%ebp)$/;"	l
c0101756	obj/kernel.asm	/^c0101756:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c010175a	obj/kernel.asm	/^c010175a:	89 c2                	mov    %eax,%edx$/;"	l
c010175c	obj/kernel.asm	/^c010175c:	ec                   	in     (%dx),%al$/;"	l
c010175d	obj/kernel.asm	/^c010175d:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c0101760	obj/kernel.asm	/^c0101760:	66 c7 45 fa 84 00    	movw   $0x84,-0x6(%ebp)$/;"	l
c0101766	obj/kernel.asm	/^c0101766:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c010176a	obj/kernel.asm	/^c010176a:	89 c2                	mov    %eax,%edx$/;"	l
c010176c	obj/kernel.asm	/^c010176c:	ec                   	in     (%dx),%al$/;"	l
c010176d	obj/kernel.asm	/^c010176d:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101770	obj/kernel.asm	/^c0101770:	66 c7 45 f6 84 00    	movw   $0x84,-0xa(%ebp)$/;"	l
c0101776	obj/kernel.asm	/^c0101776:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010177a	obj/kernel.asm	/^c010177a:	89 c2                	mov    %eax,%edx$/;"	l
c010177c	obj/kernel.asm	/^c010177c:	ec                   	in     (%dx),%al$/;"	l
c010177d	obj/kernel.asm	/^c010177d:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101780	obj/kernel.asm	/^c0101780:	66 c7 45 f2 84 00    	movw   $0x84,-0xe(%ebp)$/;"	l
c0101786	obj/kernel.asm	/^c0101786:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010178a	obj/kernel.asm	/^c010178a:	89 c2                	mov    %eax,%edx$/;"	l
c010178c	obj/kernel.asm	/^c010178c:	ec                   	in     (%dx),%al$/;"	l
c010178d	obj/kernel.asm	/^c010178d:	88 45 f1             	mov    %al,-0xf(%ebp)$/;"	l
c0101790	obj/kernel.asm	/^c0101790:	c9                   	leave  $/;"	l
c0101791	obj/kernel.asm	/^c0101791:	c3                   	ret    $/;"	l
c0101792	obj/kernel.asm	/^c0101792 <cga_init>:$/;"	l
c0101792	obj/kernel.asm	/^c0101792:	55                   	push   %ebp$/;"	l
c0101793	obj/kernel.asm	/^c0101793:	89 e5                	mov    %esp,%ebp$/;"	l
c0101795	obj/kernel.asm	/^c0101795:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0101798	obj/kernel.asm	/^c0101798:	c7 45 fc 00 80 0b c0 	movl   $0xc00b8000,-0x4(%ebp)$/;"	l
c010179f	obj/kernel.asm	/^c010179f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01017a2	obj/kernel.asm	/^c01017a2:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c01017a5	obj/kernel.asm	/^c01017a5:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c01017a9	obj/kernel.asm	/^c01017a9:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01017ac	obj/kernel.asm	/^c01017ac:	66 c7 00 5a a5       	movw   $0xa55a,(%eax)$/;"	l
c01017b1	obj/kernel.asm	/^c01017b1:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01017b4	obj/kernel.asm	/^c01017b4:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c01017b7	obj/kernel.asm	/^c01017b7:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
c01017bb	obj/kernel.asm	/^c01017bb:	74 12                	je     c01017cf <cga_init+0x3d>$/;"	l
c01017bd	obj/kernel.asm	/^c01017bd:	c7 45 fc 00 00 0b c0 	movl   $0xc00b0000,-0x4(%ebp)$/;"	l
c01017c4	obj/kernel.asm	/^c01017c4:	66 c7 05 06 d5 14 c0 	movw   $0x3b4,0xc014d506$/;"	l
c01017cb	obj/kernel.asm	/^c01017cb:	b4 03 $/;"	l
c01017cd	obj/kernel.asm	/^c01017cd:	eb 13                	jmp    c01017e2 <cga_init+0x50>$/;"	l
c01017cf	obj/kernel.asm	/^c01017cf:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01017d2	obj/kernel.asm	/^c01017d2:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c01017d6	obj/kernel.asm	/^c01017d6:	66 89 10             	mov    %dx,(%eax)$/;"	l
c01017d9	obj/kernel.asm	/^c01017d9:	66 c7 05 06 d5 14 c0 	movw   $0x3d4,0xc014d506$/;"	l
c01017e0	obj/kernel.asm	/^c01017e0:	d4 03 $/;"	d
c01017e2	obj/kernel.asm	/^c01017e2:	0f b7 05 06 d5 14 c0 	movzwl 0xc014d506,%eax$/;"	l
c01017e9	obj/kernel.asm	/^c01017e9:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01017ec	obj/kernel.asm	/^c01017ec:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c01017f0	obj/kernel.asm	/^c01017f0:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c01017f4	obj/kernel.asm	/^c01017f4:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01017f8	obj/kernel.asm	/^c01017f8:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01017fc	obj/kernel.asm	/^c01017fc:	ee                   	out    %al,(%dx)$/;"	l
c01017fd	obj/kernel.asm	/^c01017fd:	0f b7 05 06 d5 14 c0 	movzwl 0xc014d506,%eax$/;"	l
c0101804	obj/kernel.asm	/^c0101804:	83 c0 01             	add    $0x1,%eax$/;"	l
c0101807	obj/kernel.asm	/^c0101807:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010180a	obj/kernel.asm	/^c010180a:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c010180e	obj/kernel.asm	/^c010180e:	0f b7 45 ee          	movzwl -0x12(%ebp),%eax$/;"	l
c0101812	obj/kernel.asm	/^c0101812:	89 c2                	mov    %eax,%edx$/;"	l
c0101814	obj/kernel.asm	/^c0101814:	ec                   	in     (%dx),%al$/;"	l
c0101815	obj/kernel.asm	/^c0101815:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c0101818	obj/kernel.asm	/^c0101818:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c010181c	obj/kernel.asm	/^c010181c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010181f	obj/kernel.asm	/^c010181f:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c0101822	obj/kernel.asm	/^c0101822:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101825	obj/kernel.asm	/^c0101825:	0f b7 05 06 d5 14 c0 	movzwl 0xc014d506,%eax$/;"	l
c010182c	obj/kernel.asm	/^c010182c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010182f	obj/kernel.asm	/^c010182f:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0101833	obj/kernel.asm	/^c0101833:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c0101837	obj/kernel.asm	/^c0101837:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c010183b	obj/kernel.asm	/^c010183b:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c010183f	obj/kernel.asm	/^c010183f:	ee                   	out    %al,(%dx)$/;"	l
c0101840	obj/kernel.asm	/^c0101840:	0f b7 05 06 d5 14 c0 	movzwl 0xc014d506,%eax$/;"	l
c0101847	obj/kernel.asm	/^c0101847:	83 c0 01             	add    $0x1,%eax$/;"	l
c010184a	obj/kernel.asm	/^c010184a:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010184d	obj/kernel.asm	/^c010184d:	66 89 45 e6          	mov    %ax,-0x1a(%ebp)$/;"	l
c0101851	obj/kernel.asm	/^c0101851:	0f b7 45 e6          	movzwl -0x1a(%ebp),%eax$/;"	l
c0101855	obj/kernel.asm	/^c0101855:	89 c2                	mov    %eax,%edx$/;"	l
c0101857	obj/kernel.asm	/^c0101857:	ec                   	in     (%dx),%al$/;"	l
c0101858	obj/kernel.asm	/^c0101858:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c010185b	obj/kernel.asm	/^c010185b:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c010185f	obj/kernel.asm	/^c010185f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101862	obj/kernel.asm	/^c0101862:	09 45 f4             	or     %eax,-0xc(%ebp)$/;"	l
c0101865	obj/kernel.asm	/^c0101865:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101868	obj/kernel.asm	/^c0101868:	a3 00 d5 14 c0       	mov    %eax,0xc014d500$/;"	l
c010186d	obj/kernel.asm	/^c010186d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101870	obj/kernel.asm	/^c0101870:	66 a3 04 d5 14 c0    	mov    %ax,0xc014d504$/;"	l
c0101876	obj/kernel.asm	/^c0101876:	c9                   	leave  $/;"	l
c0101877	obj/kernel.asm	/^c0101877:	c3                   	ret    $/;"	l
c0101878	obj/kernel.asm	/^c0101878 <serial_init>:$/;"	l
c0101878	obj/kernel.asm	/^c0101878:	55                   	push   %ebp$/;"	l
c0101879	obj/kernel.asm	/^c0101879:	89 e5                	mov    %esp,%ebp$/;"	l
c010187b	obj/kernel.asm	/^c010187b:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010187e	obj/kernel.asm	/^c010187e:	66 c7 45 f6 fa 03    	movw   $0x3fa,-0xa(%ebp)$/;"	l
c0101884	obj/kernel.asm	/^c0101884:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)$/;"	l
c0101888	obj/kernel.asm	/^c0101888:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c010188c	obj/kernel.asm	/^c010188c:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101890	obj/kernel.asm	/^c0101890:	ee                   	out    %al,(%dx)$/;"	l
c0101891	obj/kernel.asm	/^c0101891:	66 c7 45 f2 fb 03    	movw   $0x3fb,-0xe(%ebp)$/;"	l
c0101897	obj/kernel.asm	/^c0101897:	c6 45 f1 80          	movb   $0x80,-0xf(%ebp)$/;"	l
c010189b	obj/kernel.asm	/^c010189b:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c010189f	obj/kernel.asm	/^c010189f:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01018a3	obj/kernel.asm	/^c01018a3:	ee                   	out    %al,(%dx)$/;"	l
c01018a4	obj/kernel.asm	/^c01018a4:	66 c7 45 ee f8 03    	movw   $0x3f8,-0x12(%ebp)$/;"	l
c01018aa	obj/kernel.asm	/^c01018aa:	c6 45 ed 0c          	movb   $0xc,-0x13(%ebp)$/;"	l
c01018ae	obj/kernel.asm	/^c01018ae:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01018b2	obj/kernel.asm	/^c01018b2:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01018b6	obj/kernel.asm	/^c01018b6:	ee                   	out    %al,(%dx)$/;"	l
c01018b7	obj/kernel.asm	/^c01018b7:	66 c7 45 ea f9 03    	movw   $0x3f9,-0x16(%ebp)$/;"	l
c01018bd	obj/kernel.asm	/^c01018bd:	c6 45 e9 00          	movb   $0x0,-0x17(%ebp)$/;"	l
c01018c1	obj/kernel.asm	/^c01018c1:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c01018c5	obj/kernel.asm	/^c01018c5:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c01018c9	obj/kernel.asm	/^c01018c9:	ee                   	out    %al,(%dx)$/;"	l
c01018ca	obj/kernel.asm	/^c01018ca:	66 c7 45 e6 fb 03    	movw   $0x3fb,-0x1a(%ebp)$/;"	l
c01018d0	obj/kernel.asm	/^c01018d0:	c6 45 e5 03          	movb   $0x3,-0x1b(%ebp)$/;"	l
c01018d4	obj/kernel.asm	/^c01018d4:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c01018d8	obj/kernel.asm	/^c01018d8:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01018dc	obj/kernel.asm	/^c01018dc:	ee                   	out    %al,(%dx)$/;"	l
c01018dd	obj/kernel.asm	/^c01018dd:	66 c7 45 e2 fc 03    	movw   $0x3fc,-0x1e(%ebp)$/;"	l
c01018e3	obj/kernel.asm	/^c01018e3:	c6 45 e1 00          	movb   $0x0,-0x1f(%ebp)$/;"	l
c01018e7	obj/kernel.asm	/^c01018e7:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01018eb	obj/kernel.asm	/^c01018eb:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c01018ef	obj/kernel.asm	/^c01018ef:	ee                   	out    %al,(%dx)$/;"	l
c01018f0	obj/kernel.asm	/^c01018f0:	66 c7 45 de f9 03    	movw   $0x3f9,-0x22(%ebp)$/;"	l
c01018f6	obj/kernel.asm	/^c01018f6:	c6 45 dd 01          	movb   $0x1,-0x23(%ebp)$/;"	l
c01018fa	obj/kernel.asm	/^c01018fa:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c01018fe	obj/kernel.asm	/^c01018fe:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0101902	obj/kernel.asm	/^c0101902:	ee                   	out    %al,(%dx)$/;"	l
c0101903	obj/kernel.asm	/^c0101903:	66 c7 45 da fd 03    	movw   $0x3fd,-0x26(%ebp)$/;"	l
c0101909	obj/kernel.asm	/^c0101909:	0f b7 45 da          	movzwl -0x26(%ebp),%eax$/;"	l
c010190d	obj/kernel.asm	/^c010190d:	89 c2                	mov    %eax,%edx$/;"	l
c010190f	obj/kernel.asm	/^c010190f:	ec                   	in     (%dx),%al$/;"	l
c0101910	obj/kernel.asm	/^c0101910:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c0101913	obj/kernel.asm	/^c0101913:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0101917	obj/kernel.asm	/^c0101917:	3c ff                	cmp    $0xff,%al$/;"	l
c0101919	obj/kernel.asm	/^c0101919:	0f 95 c0             	setne  %al$/;"	l
c010191c	obj/kernel.asm	/^c010191c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010191f	obj/kernel.asm	/^c010191f:	a3 08 d5 14 c0       	mov    %eax,0xc014d508$/;"	l
c0101924	obj/kernel.asm	/^c0101924:	66 c7 45 d6 fa 03    	movw   $0x3fa,-0x2a(%ebp)$/;"	l
c010192a	obj/kernel.asm	/^c010192a:	0f b7 45 d6          	movzwl -0x2a(%ebp),%eax$/;"	l
c010192e	obj/kernel.asm	/^c010192e:	89 c2                	mov    %eax,%edx$/;"	l
c0101930	obj/kernel.asm	/^c0101930:	ec                   	in     (%dx),%al$/;"	l
c0101931	obj/kernel.asm	/^c0101931:	88 45 d5             	mov    %al,-0x2b(%ebp)$/;"	l
c0101934	obj/kernel.asm	/^c0101934:	66 c7 45 d2 f8 03    	movw   $0x3f8,-0x2e(%ebp)$/;"	l
c010193a	obj/kernel.asm	/^c010193a:	0f b7 45 d2          	movzwl -0x2e(%ebp),%eax$/;"	l
c010193e	obj/kernel.asm	/^c010193e:	89 c2                	mov    %eax,%edx$/;"	l
c0101940	obj/kernel.asm	/^c0101940:	ec                   	in     (%dx),%al$/;"	l
c0101941	obj/kernel.asm	/^c0101941:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c0101944	obj/kernel.asm	/^c0101944:	a1 08 d5 14 c0       	mov    0xc014d508,%eax$/;"	l
c0101949	obj/kernel.asm	/^c0101949:	85 c0                	test   %eax,%eax$/;"	l
c010194b	obj/kernel.asm	/^c010194b:	74 0d                	je     c010195a <serial_init+0xe2>$/;"	l
c010194d	obj/kernel.asm	/^c010194d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101950	obj/kernel.asm	/^c0101950:	6a 04                	push   $0x4$/;"	l
c0101952	obj/kernel.asm	/^c0101952:	e8 d7 06 00 00       	call   c010202e <pic_enable>$/;"	l
c0101957	obj/kernel.asm	/^c0101957:	83 c4 10             	add    $0x10,%esp$/;"	l
c010195a	obj/kernel.asm	/^c010195a:	c9                   	leave  $/;"	l
c010195b	obj/kernel.asm	/^c010195b:	c3                   	ret    $/;"	l
c010195c	obj/kernel.asm	/^c010195c <lpt_putc_sub>:$/;"	l
c010195c	obj/kernel.asm	/^c010195c:	55                   	push   %ebp$/;"	l
c010195d	obj/kernel.asm	/^c010195d:	89 e5                	mov    %esp,%ebp$/;"	l
c010195f	obj/kernel.asm	/^c010195f:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0101962	obj/kernel.asm	/^c0101962:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0101969	obj/kernel.asm	/^c0101969:	eb 09                	jmp    c0101974 <lpt_putc_sub+0x18>$/;"	l
c010196b	obj/kernel.asm	/^c010196b:	e8 da fd ff ff       	call   c010174a <delay>$/;"	l
c0101970	obj/kernel.asm	/^c0101970:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0101974	obj/kernel.asm	/^c0101974:	66 c7 45 fa 79 03    	movw   $0x379,-0x6(%ebp)$/;"	l
c010197a	obj/kernel.asm	/^c010197a:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c010197e	obj/kernel.asm	/^c010197e:	89 c2                	mov    %eax,%edx$/;"	l
c0101980	obj/kernel.asm	/^c0101980:	ec                   	in     (%dx),%al$/;"	l
c0101981	obj/kernel.asm	/^c0101981:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101984	obj/kernel.asm	/^c0101984:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101988	obj/kernel.asm	/^c0101988:	84 c0                	test   %al,%al$/;"	l
c010198a	obj/kernel.asm	/^c010198a:	78 09                	js     c0101995 <lpt_putc_sub+0x39>$/;"	l
c010198c	obj/kernel.asm	/^c010198c:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c0101993	obj/kernel.asm	/^c0101993:	7e d6                	jle    c010196b <lpt_putc_sub+0xf>$/;"	l
c0101995	obj/kernel.asm	/^c0101995:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101998	obj/kernel.asm	/^c0101998:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010199b	obj/kernel.asm	/^c010199b:	66 c7 45 f6 78 03    	movw   $0x378,-0xa(%ebp)$/;"	l
c01019a1	obj/kernel.asm	/^c01019a1:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c01019a4	obj/kernel.asm	/^c01019a4:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c01019a8	obj/kernel.asm	/^c01019a8:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c01019ac	obj/kernel.asm	/^c01019ac:	ee                   	out    %al,(%dx)$/;"	l
c01019ad	obj/kernel.asm	/^c01019ad:	66 c7 45 f2 7a 03    	movw   $0x37a,-0xe(%ebp)$/;"	l
c01019b3	obj/kernel.asm	/^c01019b3:	c6 45 f1 0d          	movb   $0xd,-0xf(%ebp)$/;"	l
c01019b7	obj/kernel.asm	/^c01019b7:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01019bb	obj/kernel.asm	/^c01019bb:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01019bf	obj/kernel.asm	/^c01019bf:	ee                   	out    %al,(%dx)$/;"	l
c01019c0	obj/kernel.asm	/^c01019c0:	66 c7 45 ee 7a 03    	movw   $0x37a,-0x12(%ebp)$/;"	l
c01019c6	obj/kernel.asm	/^c01019c6:	c6 45 ed 08          	movb   $0x8,-0x13(%ebp)$/;"	l
c01019ca	obj/kernel.asm	/^c01019ca:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01019ce	obj/kernel.asm	/^c01019ce:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01019d2	obj/kernel.asm	/^c01019d2:	ee                   	out    %al,(%dx)$/;"	l
c01019d3	obj/kernel.asm	/^c01019d3:	c9                   	leave  $/;"	l
c01019d4	obj/kernel.asm	/^c01019d4:	c3                   	ret    $/;"	l
c01019d5	obj/kernel.asm	/^c01019d5 <lpt_putc>:$/;"	l
c01019d5	obj/kernel.asm	/^c01019d5:	55                   	push   %ebp$/;"	l
c01019d6	obj/kernel.asm	/^c01019d6:	89 e5                	mov    %esp,%ebp$/;"	l
c01019d8	obj/kernel.asm	/^c01019d8:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c01019dc	obj/kernel.asm	/^c01019dc:	74 0d                	je     c01019eb <lpt_putc+0x16>$/;"	l
c01019de	obj/kernel.asm	/^c01019de:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01019e1	obj/kernel.asm	/^c01019e1:	e8 76 ff ff ff       	call   c010195c <lpt_putc_sub>$/;"	l
c01019e6	obj/kernel.asm	/^c01019e6:	83 c4 04             	add    $0x4,%esp$/;"	l
c01019e9	obj/kernel.asm	/^c01019e9:	eb 1e                	jmp    c0101a09 <lpt_putc+0x34>$/;"	l
c01019eb	obj/kernel.asm	/^c01019eb:	6a 08                	push   $0x8$/;"	l
c01019ed	obj/kernel.asm	/^c01019ed:	e8 6a ff ff ff       	call   c010195c <lpt_putc_sub>$/;"	l
c01019f2	obj/kernel.asm	/^c01019f2:	83 c4 04             	add    $0x4,%esp$/;"	l
c01019f5	obj/kernel.asm	/^c01019f5:	6a 20                	push   $0x20$/;"	l
c01019f7	obj/kernel.asm	/^c01019f7:	e8 60 ff ff ff       	call   c010195c <lpt_putc_sub>$/;"	l
c01019fc	obj/kernel.asm	/^c01019fc:	83 c4 04             	add    $0x4,%esp$/;"	l
c01019ff	obj/kernel.asm	/^c01019ff:	6a 08                	push   $0x8$/;"	l
c0101a01	obj/kernel.asm	/^c0101a01:	e8 56 ff ff ff       	call   c010195c <lpt_putc_sub>$/;"	l
c0101a06	obj/kernel.asm	/^c0101a06:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101a09	obj/kernel.asm	/^c0101a09:	c9                   	leave  $/;"	l
c0101a0a	obj/kernel.asm	/^c0101a0a:	c3                   	ret    $/;"	l
c0101a0b	obj/kernel.asm	/^c0101a0b <cga_putc>:$/;"	l
c0101a0b	obj/kernel.asm	/^c0101a0b:	55                   	push   %ebp$/;"	l
c0101a0c	obj/kernel.asm	/^c0101a0c:	89 e5                	mov    %esp,%ebp$/;"	l
c0101a0e	obj/kernel.asm	/^c0101a0e:	53                   	push   %ebx$/;"	l
c0101a0f	obj/kernel.asm	/^c0101a0f:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0101a12	obj/kernel.asm	/^c0101a12:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101a15	obj/kernel.asm	/^c0101a15:	b0 00                	mov    $0x0,%al$/;"	l
c0101a17	obj/kernel.asm	/^c0101a17:	85 c0                	test   %eax,%eax$/;"	l
c0101a19	obj/kernel.asm	/^c0101a19:	75 07                	jne    c0101a22 <cga_putc+0x17>$/;"	l
c0101a1b	obj/kernel.asm	/^c0101a1b:	81 4d 08 00 07 00 00 	orl    $0x700,0x8(%ebp)$/;"	l
c0101a22	obj/kernel.asm	/^c0101a22:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101a25	obj/kernel.asm	/^c0101a25:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101a28	obj/kernel.asm	/^c0101a28:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
c0101a2b	obj/kernel.asm	/^c0101a2b:	74 4c                	je     c0101a79 <cga_putc+0x6e>$/;"	l
c0101a2d	obj/kernel.asm	/^c0101a2d:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
c0101a30	obj/kernel.asm	/^c0101a30:	74 57                	je     c0101a89 <cga_putc+0x7e>$/;"	l
c0101a32	obj/kernel.asm	/^c0101a32:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c0101a35	obj/kernel.asm	/^c0101a35:	0f 85 88 00 00 00    	jne    c0101ac3 <cga_putc+0xb8>$/;"	l
c0101a3b	obj/kernel.asm	/^c0101a3b:	0f b7 05 04 d5 14 c0 	movzwl 0xc014d504,%eax$/;"	l
c0101a42	obj/kernel.asm	/^c0101a42:	66 85 c0             	test   %ax,%ax$/;"	l
c0101a45	obj/kernel.asm	/^c0101a45:	74 30                	je     c0101a77 <cga_putc+0x6c>$/;"	l
c0101a47	obj/kernel.asm	/^c0101a47:	0f b7 05 04 d5 14 c0 	movzwl 0xc014d504,%eax$/;"	l
c0101a4e	obj/kernel.asm	/^c0101a4e:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0101a51	obj/kernel.asm	/^c0101a51:	66 a3 04 d5 14 c0    	mov    %ax,0xc014d504$/;"	l
c0101a57	obj/kernel.asm	/^c0101a57:	a1 00 d5 14 c0       	mov    0xc014d500,%eax$/;"	l
c0101a5c	obj/kernel.asm	/^c0101a5c:	0f b7 15 04 d5 14 c0 	movzwl 0xc014d504,%edx$/;"	l
c0101a63	obj/kernel.asm	/^c0101a63:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101a66	obj/kernel.asm	/^c0101a66:	01 d2                	add    %edx,%edx$/;"	l
c0101a68	obj/kernel.asm	/^c0101a68:	01 d0                	add    %edx,%eax$/;"	l
c0101a6a	obj/kernel.asm	/^c0101a6a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0101a6d	obj/kernel.asm	/^c0101a6d:	b2 00                	mov    $0x0,%dl$/;"	l
c0101a6f	obj/kernel.asm	/^c0101a6f:	83 ca 20             	or     $0x20,%edx$/;"	l
c0101a72	obj/kernel.asm	/^c0101a72:	66 89 10             	mov    %dx,(%eax)$/;"	l
c0101a75	obj/kernel.asm	/^c0101a75:	eb 71                	jmp    c0101ae8 <cga_putc+0xdd>$/;"	l
c0101a77	obj/kernel.asm	/^c0101a77:	eb 6f                	jmp    c0101ae8 <cga_putc+0xdd>$/;"	l
c0101a79	obj/kernel.asm	/^c0101a79:	0f b7 05 04 d5 14 c0 	movzwl 0xc014d504,%eax$/;"	l
c0101a80	obj/kernel.asm	/^c0101a80:	83 c0 50             	add    $0x50,%eax$/;"	l
c0101a83	obj/kernel.asm	/^c0101a83:	66 a3 04 d5 14 c0    	mov    %ax,0xc014d504$/;"	l
c0101a89	obj/kernel.asm	/^c0101a89:	0f b7 1d 04 d5 14 c0 	movzwl 0xc014d504,%ebx$/;"	l
c0101a90	obj/kernel.asm	/^c0101a90:	0f b7 0d 04 d5 14 c0 	movzwl 0xc014d504,%ecx$/;"	l
c0101a97	obj/kernel.asm	/^c0101a97:	0f b7 c1             	movzwl %cx,%eax$/;"	l
c0101a9a	obj/kernel.asm	/^c0101a9a:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
c0101aa0	obj/kernel.asm	/^c0101aa0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101aa3	obj/kernel.asm	/^c0101aa3:	89 c2                	mov    %eax,%edx$/;"	l
c0101aa5	obj/kernel.asm	/^c0101aa5:	66 c1 ea 06          	shr    $0x6,%dx$/;"	l
c0101aa9	obj/kernel.asm	/^c0101aa9:	89 d0                	mov    %edx,%eax$/;"	l
c0101aab	obj/kernel.asm	/^c0101aab:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0101aae	obj/kernel.asm	/^c0101aae:	01 d0                	add    %edx,%eax$/;"	l
c0101ab0	obj/kernel.asm	/^c0101ab0:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0101ab3	obj/kernel.asm	/^c0101ab3:	29 c1                	sub    %eax,%ecx$/;"	l
c0101ab5	obj/kernel.asm	/^c0101ab5:	89 ca                	mov    %ecx,%edx$/;"	l
c0101ab7	obj/kernel.asm	/^c0101ab7:	89 d8                	mov    %ebx,%eax$/;"	l
c0101ab9	obj/kernel.asm	/^c0101ab9:	29 d0                	sub    %edx,%eax$/;"	l
c0101abb	obj/kernel.asm	/^c0101abb:	66 a3 04 d5 14 c0    	mov    %ax,0xc014d504$/;"	l
c0101ac1	obj/kernel.asm	/^c0101ac1:	eb 25                	jmp    c0101ae8 <cga_putc+0xdd>$/;"	l
c0101ac3	obj/kernel.asm	/^c0101ac3:	8b 0d 00 d5 14 c0    	mov    0xc014d500,%ecx$/;"	l
c0101ac9	obj/kernel.asm	/^c0101ac9:	0f b7 05 04 d5 14 c0 	movzwl 0xc014d504,%eax$/;"	l
c0101ad0	obj/kernel.asm	/^c0101ad0:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101ad3	obj/kernel.asm	/^c0101ad3:	66 89 15 04 d5 14 c0 	mov    %dx,0xc014d504$/;"	l
c0101ada	obj/kernel.asm	/^c0101ada:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101add	obj/kernel.asm	/^c0101add:	01 c0                	add    %eax,%eax$/;"	l
c0101adf	obj/kernel.asm	/^c0101adf:	01 c8                	add    %ecx,%eax$/;"	l
c0101ae1	obj/kernel.asm	/^c0101ae1:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0101ae4	obj/kernel.asm	/^c0101ae4:	66 89 10             	mov    %dx,(%eax)$/;"	l
c0101ae7	obj/kernel.asm	/^c0101ae7:	90                   	nop$/;"	l
c0101ae8	obj/kernel.asm	/^c0101ae8:	0f b7 05 04 d5 14 c0 	movzwl 0xc014d504,%eax$/;"	l
c0101aef	obj/kernel.asm	/^c0101aef:	66 3d cf 07          	cmp    $0x7cf,%ax$/;"	l
c0101af3	obj/kernel.asm	/^c0101af3:	76 59                	jbe    c0101b4e <cga_putc+0x143>$/;"	l
c0101af5	obj/kernel.asm	/^c0101af5:	a1 00 d5 14 c0       	mov    0xc014d500,%eax$/;"	l
c0101afa	obj/kernel.asm	/^c0101afa:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
c0101b00	obj/kernel.asm	/^c0101b00:	a1 00 d5 14 c0       	mov    0xc014d500,%eax$/;"	l
c0101b05	obj/kernel.asm	/^c0101b05:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0101b08	obj/kernel.asm	/^c0101b08:	68 00 0f 00 00       	push   $0xf00$/;"	l
c0101b0d	obj/kernel.asm	/^c0101b0d:	52                   	push   %edx$/;"	l
c0101b0e	obj/kernel.asm	/^c0101b0e:	50                   	push   %eax$/;"	l
c0101b0f	obj/kernel.asm	/^c0101b0f:	e8 18 15 01 00       	call   c011302c <memmove>$/;"	l
c0101b14	obj/kernel.asm	/^c0101b14:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101b17	obj/kernel.asm	/^c0101b17:	c7 45 f4 80 07 00 00 	movl   $0x780,-0xc(%ebp)$/;"	l
c0101b1e	obj/kernel.asm	/^c0101b1e:	eb 15                	jmp    c0101b35 <cga_putc+0x12a>$/;"	l
c0101b20	obj/kernel.asm	/^c0101b20:	a1 00 d5 14 c0       	mov    0xc014d500,%eax$/;"	l
c0101b25	obj/kernel.asm	/^c0101b25:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0101b28	obj/kernel.asm	/^c0101b28:	01 d2                	add    %edx,%edx$/;"	l
c0101b2a	obj/kernel.asm	/^c0101b2a:	01 d0                	add    %edx,%eax$/;"	l
c0101b2c	obj/kernel.asm	/^c0101b2c:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
c0101b31	obj/kernel.asm	/^c0101b31:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0101b35	obj/kernel.asm	/^c0101b35:	81 7d f4 cf 07 00 00 	cmpl   $0x7cf,-0xc(%ebp)$/;"	l
c0101b3c	obj/kernel.asm	/^c0101b3c:	7e e2                	jle    c0101b20 <cga_putc+0x115>$/;"	l
c0101b3e	obj/kernel.asm	/^c0101b3e:	0f b7 05 04 d5 14 c0 	movzwl 0xc014d504,%eax$/;"	l
c0101b45	obj/kernel.asm	/^c0101b45:	83 e8 50             	sub    $0x50,%eax$/;"	l
c0101b48	obj/kernel.asm	/^c0101b48:	66 a3 04 d5 14 c0    	mov    %ax,0xc014d504$/;"	l
c0101b4e	obj/kernel.asm	/^c0101b4e:	0f b7 05 06 d5 14 c0 	movzwl 0xc014d506,%eax$/;"	l
c0101b55	obj/kernel.asm	/^c0101b55:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101b58	obj/kernel.asm	/^c0101b58:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0101b5c	obj/kernel.asm	/^c0101b5c:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c0101b60	obj/kernel.asm	/^c0101b60:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0101b64	obj/kernel.asm	/^c0101b64:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101b68	obj/kernel.asm	/^c0101b68:	ee                   	out    %al,(%dx)$/;"	l
c0101b69	obj/kernel.asm	/^c0101b69:	0f b7 05 04 d5 14 c0 	movzwl 0xc014d504,%eax$/;"	l
c0101b70	obj/kernel.asm	/^c0101b70:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c0101b74	obj/kernel.asm	/^c0101b74:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101b77	obj/kernel.asm	/^c0101b77:	0f b7 15 06 d5 14 c0 	movzwl 0xc014d506,%edx$/;"	l
c0101b7e	obj/kernel.asm	/^c0101b7e:	83 c2 01             	add    $0x1,%edx$/;"	l
c0101b81	obj/kernel.asm	/^c0101b81:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101b84	obj/kernel.asm	/^c0101b84:	66 89 55 ee          	mov    %dx,-0x12(%ebp)$/;"	l
c0101b88	obj/kernel.asm	/^c0101b88:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c0101b8b	obj/kernel.asm	/^c0101b8b:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101b8f	obj/kernel.asm	/^c0101b8f:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101b93	obj/kernel.asm	/^c0101b93:	ee                   	out    %al,(%dx)$/;"	l
c0101b94	obj/kernel.asm	/^c0101b94:	0f b7 05 06 d5 14 c0 	movzwl 0xc014d506,%eax$/;"	l
c0101b9b	obj/kernel.asm	/^c0101b9b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101b9e	obj/kernel.asm	/^c0101b9e:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0101ba2	obj/kernel.asm	/^c0101ba2:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c0101ba6	obj/kernel.asm	/^c0101ba6:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101baa	obj/kernel.asm	/^c0101baa:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101bae	obj/kernel.asm	/^c0101bae:	ee                   	out    %al,(%dx)$/;"	l
c0101baf	obj/kernel.asm	/^c0101baf:	0f b7 05 04 d5 14 c0 	movzwl 0xc014d504,%eax$/;"	l
c0101bb6	obj/kernel.asm	/^c0101bb6:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101bb9	obj/kernel.asm	/^c0101bb9:	0f b7 15 06 d5 14 c0 	movzwl 0xc014d506,%edx$/;"	l
c0101bc0	obj/kernel.asm	/^c0101bc0:	83 c2 01             	add    $0x1,%edx$/;"	l
c0101bc3	obj/kernel.asm	/^c0101bc3:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101bc6	obj/kernel.asm	/^c0101bc6:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101bca	obj/kernel.asm	/^c0101bca:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101bcd	obj/kernel.asm	/^c0101bcd:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101bd1	obj/kernel.asm	/^c0101bd1:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101bd5	obj/kernel.asm	/^c0101bd5:	ee                   	out    %al,(%dx)$/;"	l
c0101bd6	obj/kernel.asm	/^c0101bd6:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0101bd9	obj/kernel.asm	/^c0101bd9:	c9                   	leave  $/;"	l
c0101bda	obj/kernel.asm	/^c0101bda:	c3                   	ret    $/;"	l
c0101bdb	obj/kernel.asm	/^c0101bdb <serial_putc_sub>:$/;"	l
c0101bdb	obj/kernel.asm	/^c0101bdb:	55                   	push   %ebp$/;"	l
c0101bdc	obj/kernel.asm	/^c0101bdc:	89 e5                	mov    %esp,%ebp$/;"	l
c0101bde	obj/kernel.asm	/^c0101bde:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101be1	obj/kernel.asm	/^c0101be1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0101be8	obj/kernel.asm	/^c0101be8:	eb 09                	jmp    c0101bf3 <serial_putc_sub+0x18>$/;"	l
c0101bea	obj/kernel.asm	/^c0101bea:	e8 5b fb ff ff       	call   c010174a <delay>$/;"	l
c0101bef	obj/kernel.asm	/^c0101bef:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0101bf3	obj/kernel.asm	/^c0101bf3:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c0101bf9	obj/kernel.asm	/^c0101bf9:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101bfd	obj/kernel.asm	/^c0101bfd:	89 c2                	mov    %eax,%edx$/;"	l
c0101bff	obj/kernel.asm	/^c0101bff:	ec                   	in     (%dx),%al$/;"	l
c0101c00	obj/kernel.asm	/^c0101c00:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101c03	obj/kernel.asm	/^c0101c03:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101c07	obj/kernel.asm	/^c0101c07:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101c0a	obj/kernel.asm	/^c0101c0a:	83 e0 20             	and    $0x20,%eax$/;"	l
c0101c0d	obj/kernel.asm	/^c0101c0d:	85 c0                	test   %eax,%eax$/;"	l
c0101c0f	obj/kernel.asm	/^c0101c0f:	75 09                	jne    c0101c1a <serial_putc_sub+0x3f>$/;"	l
c0101c11	obj/kernel.asm	/^c0101c11:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c0101c18	obj/kernel.asm	/^c0101c18:	7e d0                	jle    c0101bea <serial_putc_sub+0xf>$/;"	l
c0101c1a	obj/kernel.asm	/^c0101c1a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101c1d	obj/kernel.asm	/^c0101c1d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101c20	obj/kernel.asm	/^c0101c20:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c0101c26	obj/kernel.asm	/^c0101c26:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101c29	obj/kernel.asm	/^c0101c29:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101c2d	obj/kernel.asm	/^c0101c2d:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101c31	obj/kernel.asm	/^c0101c31:	ee                   	out    %al,(%dx)$/;"	l
c0101c32	obj/kernel.asm	/^c0101c32:	c9                   	leave  $/;"	l
c0101c33	obj/kernel.asm	/^c0101c33:	c3                   	ret    $/;"	l
c0101c34	obj/kernel.asm	/^c0101c34 <serial_putc>:$/;"	l
c0101c34	obj/kernel.asm	/^c0101c34:	55                   	push   %ebp$/;"	l
c0101c35	obj/kernel.asm	/^c0101c35:	89 e5                	mov    %esp,%ebp$/;"	l
c0101c37	obj/kernel.asm	/^c0101c37:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c0101c3b	obj/kernel.asm	/^c0101c3b:	74 0d                	je     c0101c4a <serial_putc+0x16>$/;"	l
c0101c3d	obj/kernel.asm	/^c0101c3d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101c40	obj/kernel.asm	/^c0101c40:	e8 96 ff ff ff       	call   c0101bdb <serial_putc_sub>$/;"	l
c0101c45	obj/kernel.asm	/^c0101c45:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101c48	obj/kernel.asm	/^c0101c48:	eb 1e                	jmp    c0101c68 <serial_putc+0x34>$/;"	l
c0101c4a	obj/kernel.asm	/^c0101c4a:	6a 08                	push   $0x8$/;"	l
c0101c4c	obj/kernel.asm	/^c0101c4c:	e8 8a ff ff ff       	call   c0101bdb <serial_putc_sub>$/;"	l
c0101c51	obj/kernel.asm	/^c0101c51:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101c54	obj/kernel.asm	/^c0101c54:	6a 20                	push   $0x20$/;"	l
c0101c56	obj/kernel.asm	/^c0101c56:	e8 80 ff ff ff       	call   c0101bdb <serial_putc_sub>$/;"	l
c0101c5b	obj/kernel.asm	/^c0101c5b:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101c5e	obj/kernel.asm	/^c0101c5e:	6a 08                	push   $0x8$/;"	l
c0101c60	obj/kernel.asm	/^c0101c60:	e8 76 ff ff ff       	call   c0101bdb <serial_putc_sub>$/;"	l
c0101c65	obj/kernel.asm	/^c0101c65:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101c68	obj/kernel.asm	/^c0101c68:	c9                   	leave  $/;"	l
c0101c69	obj/kernel.asm	/^c0101c69:	c3                   	ret    $/;"	l
c0101c6a	obj/kernel.asm	/^c0101c6a <cons_intr>:$/;"	l
c0101c6a	obj/kernel.asm	/^c0101c6a:	55                   	push   %ebp$/;"	l
c0101c6b	obj/kernel.asm	/^c0101c6b:	89 e5                	mov    %esp,%ebp$/;"	l
c0101c6d	obj/kernel.asm	/^c0101c6d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101c70	obj/kernel.asm	/^c0101c70:	eb 33                	jmp    c0101ca5 <cons_intr+0x3b>$/;"	l
c0101c72	obj/kernel.asm	/^c0101c72:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101c76	obj/kernel.asm	/^c0101c76:	74 2d                	je     c0101ca5 <cons_intr+0x3b>$/;"	l
c0101c78	obj/kernel.asm	/^c0101c78:	a1 44 d7 14 c0       	mov    0xc014d744,%eax$/;"	l
c0101c7d	obj/kernel.asm	/^c0101c7d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101c80	obj/kernel.asm	/^c0101c80:	89 15 44 d7 14 c0    	mov    %edx,0xc014d744$/;"	l
c0101c86	obj/kernel.asm	/^c0101c86:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0101c89	obj/kernel.asm	/^c0101c89:	88 90 40 d5 14 c0    	mov    %dl,-0x3feb2ac0(%eax)$/;"	l
c0101c8f	obj/kernel.asm	/^c0101c8f:	a1 44 d7 14 c0       	mov    0xc014d744,%eax$/;"	l
c0101c94	obj/kernel.asm	/^c0101c94:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c0101c99	obj/kernel.asm	/^c0101c99:	75 0a                	jne    c0101ca5 <cons_intr+0x3b>$/;"	l
c0101c9b	obj/kernel.asm	/^c0101c9b:	c7 05 44 d7 14 c0 00 	movl   $0x0,0xc014d744$/;"	l
c0101ca2	obj/kernel.asm	/^c0101ca2:	00 00 00 $/;"	l
c0101ca5	obj/kernel.asm	/^c0101ca5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101ca8	obj/kernel.asm	/^c0101ca8:	ff d0                	call   *%eax$/;"	l
c0101caa	obj/kernel.asm	/^c0101caa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101cad	obj/kernel.asm	/^c0101cad:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)$/;"	l
c0101cb1	obj/kernel.asm	/^c0101cb1:	75 bf                	jne    c0101c72 <cons_intr+0x8>$/;"	l
c0101cb3	obj/kernel.asm	/^c0101cb3:	c9                   	leave  $/;"	l
c0101cb4	obj/kernel.asm	/^c0101cb4:	c3                   	ret    $/;"	l
c0101cb5	obj/kernel.asm	/^c0101cb5 <serial_proc_data>:$/;"	l
c0101cb5	obj/kernel.asm	/^c0101cb5:	55                   	push   %ebp$/;"	l
c0101cb6	obj/kernel.asm	/^c0101cb6:	89 e5                	mov    %esp,%ebp$/;"	l
c0101cb8	obj/kernel.asm	/^c0101cb8:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101cbb	obj/kernel.asm	/^c0101cbb:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c0101cc1	obj/kernel.asm	/^c0101cc1:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101cc5	obj/kernel.asm	/^c0101cc5:	89 c2                	mov    %eax,%edx$/;"	l
c0101cc7	obj/kernel.asm	/^c0101cc7:	ec                   	in     (%dx),%al$/;"	l
c0101cc8	obj/kernel.asm	/^c0101cc8:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101ccb	obj/kernel.asm	/^c0101ccb:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101ccf	obj/kernel.asm	/^c0101ccf:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101cd2	obj/kernel.asm	/^c0101cd2:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101cd5	obj/kernel.asm	/^c0101cd5:	85 c0                	test   %eax,%eax$/;"	l
c0101cd7	obj/kernel.asm	/^c0101cd7:	75 07                	jne    c0101ce0 <serial_proc_data+0x2b>$/;"	l
c0101cd9	obj/kernel.asm	/^c0101cd9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0101cde	obj/kernel.asm	/^c0101cde:	eb 2a                	jmp    c0101d0a <serial_proc_data+0x55>$/;"	l
c0101ce0	obj/kernel.asm	/^c0101ce0:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c0101ce6	obj/kernel.asm	/^c0101ce6:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101cea	obj/kernel.asm	/^c0101cea:	89 c2                	mov    %eax,%edx$/;"	l
c0101cec	obj/kernel.asm	/^c0101cec:	ec                   	in     (%dx),%al$/;"	l
c0101ced	obj/kernel.asm	/^c0101ced:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101cf0	obj/kernel.asm	/^c0101cf0:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101cf4	obj/kernel.asm	/^c0101cf4:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101cf7	obj/kernel.asm	/^c0101cf7:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0101cfa	obj/kernel.asm	/^c0101cfa:	83 7d fc 7f          	cmpl   $0x7f,-0x4(%ebp)$/;"	l
c0101cfe	obj/kernel.asm	/^c0101cfe:	75 07                	jne    c0101d07 <serial_proc_data+0x52>$/;"	l
c0101d00	obj/kernel.asm	/^c0101d00:	c7 45 fc 08 00 00 00 	movl   $0x8,-0x4(%ebp)$/;"	l
c0101d07	obj/kernel.asm	/^c0101d07:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101d0a	obj/kernel.asm	/^c0101d0a:	c9                   	leave  $/;"	l
c0101d0b	obj/kernel.asm	/^c0101d0b:	c3                   	ret    $/;"	l
c0101d0c	obj/kernel.asm	/^c0101d0c <serial_intr>:$/;"	l
c0101d0c	obj/kernel.asm	/^c0101d0c:	55                   	push   %ebp$/;"	l
c0101d0d	obj/kernel.asm	/^c0101d0d:	89 e5                	mov    %esp,%ebp$/;"	l
c0101d0f	obj/kernel.asm	/^c0101d0f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101d12	obj/kernel.asm	/^c0101d12:	a1 08 d5 14 c0       	mov    0xc014d508,%eax$/;"	l
c0101d17	obj/kernel.asm	/^c0101d17:	85 c0                	test   %eax,%eax$/;"	l
c0101d19	obj/kernel.asm	/^c0101d19:	74 10                	je     c0101d2b <serial_intr+0x1f>$/;"	l
c0101d1b	obj/kernel.asm	/^c0101d1b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101d1e	obj/kernel.asm	/^c0101d1e:	68 b5 1c 10 c0       	push   $0xc0101cb5$/;"	l
c0101d23	obj/kernel.asm	/^c0101d23:	e8 42 ff ff ff       	call   c0101c6a <cons_intr>$/;"	l
c0101d28	obj/kernel.asm	/^c0101d28:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101d2b	obj/kernel.asm	/^c0101d2b:	c9                   	leave  $/;"	l
c0101d2c	obj/kernel.asm	/^c0101d2c:	c3                   	ret    $/;"	l
c0101d2d	obj/kernel.asm	/^c0101d2d <kbd_proc_data>:$/;"	l
c0101d2d	obj/kernel.asm	/^c0101d2d:	55                   	push   %ebp$/;"	l
c0101d2e	obj/kernel.asm	/^c0101d2e:	89 e5                	mov    %esp,%ebp$/;"	l
c0101d30	obj/kernel.asm	/^c0101d30:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0101d33	obj/kernel.asm	/^c0101d33:	66 c7 45 f0 64 00    	movw   $0x64,-0x10(%ebp)$/;"	l
c0101d39	obj/kernel.asm	/^c0101d39:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101d3d	obj/kernel.asm	/^c0101d3d:	89 c2                	mov    %eax,%edx$/;"	l
c0101d3f	obj/kernel.asm	/^c0101d3f:	ec                   	in     (%dx),%al$/;"	l
c0101d40	obj/kernel.asm	/^c0101d40:	88 45 ef             	mov    %al,-0x11(%ebp)$/;"	l
c0101d43	obj/kernel.asm	/^c0101d43:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax$/;"	l
c0101d47	obj/kernel.asm	/^c0101d47:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101d4a	obj/kernel.asm	/^c0101d4a:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101d4d	obj/kernel.asm	/^c0101d4d:	85 c0                	test   %eax,%eax$/;"	l
c0101d4f	obj/kernel.asm	/^c0101d4f:	75 0a                	jne    c0101d5b <kbd_proc_data+0x2e>$/;"	l
c0101d51	obj/kernel.asm	/^c0101d51:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0101d56	obj/kernel.asm	/^c0101d56:	e9 5d 01 00 00       	jmp    c0101eb8 <kbd_proc_data+0x18b>$/;"	l
c0101d5b	obj/kernel.asm	/^c0101d5b:	66 c7 45 ec 60 00    	movw   $0x60,-0x14(%ebp)$/;"	l
c0101d61	obj/kernel.asm	/^c0101d61:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0101d65	obj/kernel.asm	/^c0101d65:	89 c2                	mov    %eax,%edx$/;"	l
c0101d67	obj/kernel.asm	/^c0101d67:	ec                   	in     (%dx),%al$/;"	l
c0101d68	obj/kernel.asm	/^c0101d68:	88 45 eb             	mov    %al,-0x15(%ebp)$/;"	l
c0101d6b	obj/kernel.asm	/^c0101d6b:	0f b6 45 eb          	movzbl -0x15(%ebp),%eax$/;"	l
c0101d6f	obj/kernel.asm	/^c0101d6f:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0101d72	obj/kernel.asm	/^c0101d72:	80 7d f3 e0          	cmpb   $0xe0,-0xd(%ebp)$/;"	l
c0101d76	obj/kernel.asm	/^c0101d76:	75 17                	jne    c0101d8f <kbd_proc_data+0x62>$/;"	l
c0101d78	obj/kernel.asm	/^c0101d78:	a1 48 d7 14 c0       	mov    0xc014d748,%eax$/;"	l
c0101d7d	obj/kernel.asm	/^c0101d7d:	83 c8 40             	or     $0x40,%eax$/;"	l
c0101d80	obj/kernel.asm	/^c0101d80:	a3 48 d7 14 c0       	mov    %eax,0xc014d748$/;"	l
c0101d85	obj/kernel.asm	/^c0101d85:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101d8a	obj/kernel.asm	/^c0101d8a:	e9 29 01 00 00       	jmp    c0101eb8 <kbd_proc_data+0x18b>$/;"	l
c0101d8f	obj/kernel.asm	/^c0101d8f:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101d93	obj/kernel.asm	/^c0101d93:	84 c0                	test   %al,%al$/;"	l
c0101d95	obj/kernel.asm	/^c0101d95:	79 47                	jns    c0101dde <kbd_proc_data+0xb1>$/;"	l
c0101d97	obj/kernel.asm	/^c0101d97:	a1 48 d7 14 c0       	mov    0xc014d748,%eax$/;"	l
c0101d9c	obj/kernel.asm	/^c0101d9c:	83 e0 40             	and    $0x40,%eax$/;"	l
c0101d9f	obj/kernel.asm	/^c0101d9f:	85 c0                	test   %eax,%eax$/;"	l
c0101da1	obj/kernel.asm	/^c0101da1:	75 09                	jne    c0101dac <kbd_proc_data+0x7f>$/;"	l
c0101da3	obj/kernel.asm	/^c0101da3:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101da7	obj/kernel.asm	/^c0101da7:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c0101daa	obj/kernel.asm	/^c0101daa:	eb 04                	jmp    c0101db0 <kbd_proc_data+0x83>$/;"	l
c0101dac	obj/kernel.asm	/^c0101dac:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101db0	obj/kernel.asm	/^c0101db0:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0101db3	obj/kernel.asm	/^c0101db3:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101db7	obj/kernel.asm	/^c0101db7:	0f b6 80 80 c0 14 c0 	movzbl -0x3feb3f80(%eax),%eax$/;"	l
c0101dbe	obj/kernel.asm	/^c0101dbe:	83 c8 40             	or     $0x40,%eax$/;"	l
c0101dc1	obj/kernel.asm	/^c0101dc1:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101dc4	obj/kernel.asm	/^c0101dc4:	f7 d0                	not    %eax$/;"	l
c0101dc6	obj/kernel.asm	/^c0101dc6:	89 c2                	mov    %eax,%edx$/;"	l
c0101dc8	obj/kernel.asm	/^c0101dc8:	a1 48 d7 14 c0       	mov    0xc014d748,%eax$/;"	l
c0101dcd	obj/kernel.asm	/^c0101dcd:	21 d0                	and    %edx,%eax$/;"	l
c0101dcf	obj/kernel.asm	/^c0101dcf:	a3 48 d7 14 c0       	mov    %eax,0xc014d748$/;"	l
c0101dd4	obj/kernel.asm	/^c0101dd4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101dd9	obj/kernel.asm	/^c0101dd9:	e9 da 00 00 00       	jmp    c0101eb8 <kbd_proc_data+0x18b>$/;"	l
c0101dde	obj/kernel.asm	/^c0101dde:	a1 48 d7 14 c0       	mov    0xc014d748,%eax$/;"	l
c0101de3	obj/kernel.asm	/^c0101de3:	83 e0 40             	and    $0x40,%eax$/;"	l
c0101de6	obj/kernel.asm	/^c0101de6:	85 c0                	test   %eax,%eax$/;"	l
c0101de8	obj/kernel.asm	/^c0101de8:	74 11                	je     c0101dfb <kbd_proc_data+0xce>$/;"	l
c0101dea	obj/kernel.asm	/^c0101dea:	80 4d f3 80          	orb    $0x80,-0xd(%ebp)$/;"	l
c0101dee	obj/kernel.asm	/^c0101dee:	a1 48 d7 14 c0       	mov    0xc014d748,%eax$/;"	l
c0101df3	obj/kernel.asm	/^c0101df3:	83 e0 bf             	and    $0xffffffbf,%eax$/;"	l
c0101df6	obj/kernel.asm	/^c0101df6:	a3 48 d7 14 c0       	mov    %eax,0xc014d748$/;"	l
c0101dfb	obj/kernel.asm	/^c0101dfb:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101dff	obj/kernel.asm	/^c0101dff:	0f b6 80 80 c0 14 c0 	movzbl -0x3feb3f80(%eax),%eax$/;"	l
c0101e06	obj/kernel.asm	/^c0101e06:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0101e09	obj/kernel.asm	/^c0101e09:	a1 48 d7 14 c0       	mov    0xc014d748,%eax$/;"	l
c0101e0e	obj/kernel.asm	/^c0101e0e:	09 d0                	or     %edx,%eax$/;"	l
c0101e10	obj/kernel.asm	/^c0101e10:	a3 48 d7 14 c0       	mov    %eax,0xc014d748$/;"	l
c0101e15	obj/kernel.asm	/^c0101e15:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101e19	obj/kernel.asm	/^c0101e19:	0f b6 80 80 c1 14 c0 	movzbl -0x3feb3e80(%eax),%eax$/;"	l
c0101e20	obj/kernel.asm	/^c0101e20:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0101e23	obj/kernel.asm	/^c0101e23:	a1 48 d7 14 c0       	mov    0xc014d748,%eax$/;"	l
c0101e28	obj/kernel.asm	/^c0101e28:	31 d0                	xor    %edx,%eax$/;"	l
c0101e2a	obj/kernel.asm	/^c0101e2a:	a3 48 d7 14 c0       	mov    %eax,0xc014d748$/;"	l
c0101e2f	obj/kernel.asm	/^c0101e2f:	a1 48 d7 14 c0       	mov    0xc014d748,%eax$/;"	l
c0101e34	obj/kernel.asm	/^c0101e34:	83 e0 03             	and    $0x3,%eax$/;"	l
c0101e37	obj/kernel.asm	/^c0101e37:	8b 14 85 80 c5 14 c0 	mov    -0x3feb3a80(,%eax,4),%edx$/;"	l
c0101e3e	obj/kernel.asm	/^c0101e3e:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101e42	obj/kernel.asm	/^c0101e42:	01 d0                	add    %edx,%eax$/;"	l
c0101e44	obj/kernel.asm	/^c0101e44:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101e47	obj/kernel.asm	/^c0101e47:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101e4a	obj/kernel.asm	/^c0101e4a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101e4d	obj/kernel.asm	/^c0101e4d:	a1 48 d7 14 c0       	mov    0xc014d748,%eax$/;"	l
c0101e52	obj/kernel.asm	/^c0101e52:	83 e0 08             	and    $0x8,%eax$/;"	l
c0101e55	obj/kernel.asm	/^c0101e55:	85 c0                	test   %eax,%eax$/;"	l
c0101e57	obj/kernel.asm	/^c0101e57:	74 22                	je     c0101e7b <kbd_proc_data+0x14e>$/;"	l
c0101e59	obj/kernel.asm	/^c0101e59:	83 7d f4 60          	cmpl   $0x60,-0xc(%ebp)$/;"	l
c0101e5d	obj/kernel.asm	/^c0101e5d:	7e 0c                	jle    c0101e6b <kbd_proc_data+0x13e>$/;"	l
c0101e5f	obj/kernel.asm	/^c0101e5f:	83 7d f4 7a          	cmpl   $0x7a,-0xc(%ebp)$/;"	l
c0101e63	obj/kernel.asm	/^c0101e63:	7f 06                	jg     c0101e6b <kbd_proc_data+0x13e>$/;"	l
c0101e65	obj/kernel.asm	/^c0101e65:	83 6d f4 20          	subl   $0x20,-0xc(%ebp)$/;"	l
c0101e69	obj/kernel.asm	/^c0101e69:	eb 10                	jmp    c0101e7b <kbd_proc_data+0x14e>$/;"	l
c0101e6b	obj/kernel.asm	/^c0101e6b:	83 7d f4 40          	cmpl   $0x40,-0xc(%ebp)$/;"	l
c0101e6f	obj/kernel.asm	/^c0101e6f:	7e 0a                	jle    c0101e7b <kbd_proc_data+0x14e>$/;"	l
c0101e71	obj/kernel.asm	/^c0101e71:	83 7d f4 5a          	cmpl   $0x5a,-0xc(%ebp)$/;"	l
c0101e75	obj/kernel.asm	/^c0101e75:	7f 04                	jg     c0101e7b <kbd_proc_data+0x14e>$/;"	l
c0101e77	obj/kernel.asm	/^c0101e77:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0101e7b	obj/kernel.asm	/^c0101e7b:	a1 48 d7 14 c0       	mov    0xc014d748,%eax$/;"	l
c0101e80	obj/kernel.asm	/^c0101e80:	f7 d0                	not    %eax$/;"	l
c0101e82	obj/kernel.asm	/^c0101e82:	83 e0 06             	and    $0x6,%eax$/;"	l
c0101e85	obj/kernel.asm	/^c0101e85:	85 c0                	test   %eax,%eax$/;"	l
c0101e87	obj/kernel.asm	/^c0101e87:	75 2c                	jne    c0101eb5 <kbd_proc_data+0x188>$/;"	l
c0101e89	obj/kernel.asm	/^c0101e89:	81 7d f4 e9 00 00 00 	cmpl   $0xe9,-0xc(%ebp)$/;"	l
c0101e90	obj/kernel.asm	/^c0101e90:	75 23                	jne    c0101eb5 <kbd_proc_data+0x188>$/;"	l
c0101e92	obj/kernel.asm	/^c0101e92:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101e95	obj/kernel.asm	/^c0101e95:	68 a9 3c 11 c0       	push   $0xc0113ca9$/;"	l
c0101e9a	obj/kernel.asm	/^c0101e9a:	e8 cb e4 ff ff       	call   c010036a <cprintf>$/;"	l
c0101e9f	obj/kernel.asm	/^c0101e9f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101ea2	obj/kernel.asm	/^c0101ea2:	66 c7 45 e8 92 00    	movw   $0x92,-0x18(%ebp)$/;"	l
c0101ea8	obj/kernel.asm	/^c0101ea8:	c6 45 e7 03          	movb   $0x3,-0x19(%ebp)$/;"	l
c0101eac	obj/kernel.asm	/^c0101eac:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
c0101eb0	obj/kernel.asm	/^c0101eb0:	0f b7 55 e8          	movzwl -0x18(%ebp),%edx$/;"	l
c0101eb4	obj/kernel.asm	/^c0101eb4:	ee                   	out    %al,(%dx)$/;"	l
c0101eb5	obj/kernel.asm	/^c0101eb5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101eb8	obj/kernel.asm	/^c0101eb8:	c9                   	leave  $/;"	l
c0101eb9	obj/kernel.asm	/^c0101eb9:	c3                   	ret    $/;"	l
c0101eba	obj/kernel.asm	/^c0101eba <kbd_intr>:$/;"	l
c0101eba	obj/kernel.asm	/^c0101eba:	55                   	push   %ebp$/;"	l
c0101ebb	obj/kernel.asm	/^c0101ebb:	89 e5                	mov    %esp,%ebp$/;"	l
c0101ebd	obj/kernel.asm	/^c0101ebd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101ec0	obj/kernel.asm	/^c0101ec0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101ec3	obj/kernel.asm	/^c0101ec3:	68 2d 1d 10 c0       	push   $0xc0101d2d$/;"	l
c0101ec8	obj/kernel.asm	/^c0101ec8:	e8 9d fd ff ff       	call   c0101c6a <cons_intr>$/;"	l
c0101ecd	obj/kernel.asm	/^c0101ecd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101ed0	obj/kernel.asm	/^c0101ed0:	c9                   	leave  $/;"	l
c0101ed1	obj/kernel.asm	/^c0101ed1:	c3                   	ret    $/;"	l
c0101ed2	obj/kernel.asm	/^c0101ed2 <kbd_init>:$/;"	l
c0101ed2	obj/kernel.asm	/^c0101ed2:	55                   	push   %ebp$/;"	l
c0101ed3	obj/kernel.asm	/^c0101ed3:	89 e5                	mov    %esp,%ebp$/;"	l
c0101ed5	obj/kernel.asm	/^c0101ed5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101ed8	obj/kernel.asm	/^c0101ed8:	e8 dd ff ff ff       	call   c0101eba <kbd_intr>$/;"	l
c0101edd	obj/kernel.asm	/^c0101edd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101ee0	obj/kernel.asm	/^c0101ee0:	6a 01                	push   $0x1$/;"	l
c0101ee2	obj/kernel.asm	/^c0101ee2:	e8 47 01 00 00       	call   c010202e <pic_enable>$/;"	l
c0101ee7	obj/kernel.asm	/^c0101ee7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101eea	obj/kernel.asm	/^c0101eea:	c9                   	leave  $/;"	l
c0101eeb	obj/kernel.asm	/^c0101eeb:	c3                   	ret    $/;"	l
c0101eec	obj/kernel.asm	/^c0101eec <cons_init>:$/;"	l
c0101eec	obj/kernel.asm	/^c0101eec:	55                   	push   %ebp$/;"	l
c0101eed	obj/kernel.asm	/^c0101eed:	89 e5                	mov    %esp,%ebp$/;"	l
c0101eef	obj/kernel.asm	/^c0101eef:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101ef2	obj/kernel.asm	/^c0101ef2:	e8 9b f8 ff ff       	call   c0101792 <cga_init>$/;"	l
c0101ef7	obj/kernel.asm	/^c0101ef7:	e8 7c f9 ff ff       	call   c0101878 <serial_init>$/;"	l
c0101efc	obj/kernel.asm	/^c0101efc:	e8 d1 ff ff ff       	call   c0101ed2 <kbd_init>$/;"	l
c0101f01	obj/kernel.asm	/^c0101f01:	a1 08 d5 14 c0       	mov    0xc014d508,%eax$/;"	l
c0101f06	obj/kernel.asm	/^c0101f06:	85 c0                	test   %eax,%eax$/;"	l
c0101f08	obj/kernel.asm	/^c0101f08:	75 10                	jne    c0101f1a <cons_init+0x2e>$/;"	l
c0101f0a	obj/kernel.asm	/^c0101f0a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101f0d	obj/kernel.asm	/^c0101f0d:	68 b5 3c 11 c0       	push   $0xc0113cb5$/;"	l
c0101f12	obj/kernel.asm	/^c0101f12:	e8 53 e4 ff ff       	call   c010036a <cprintf>$/;"	l
c0101f17	obj/kernel.asm	/^c0101f17:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101f1a	obj/kernel.asm	/^c0101f1a:	c9                   	leave  $/;"	l
c0101f1b	obj/kernel.asm	/^c0101f1b:	c3                   	ret    $/;"	l
c0101f1c	obj/kernel.asm	/^c0101f1c <cons_putc>:$/;"	l
c0101f1c	obj/kernel.asm	/^c0101f1c:	55                   	push   %ebp$/;"	l
c0101f1d	obj/kernel.asm	/^c0101f1d:	89 e5                	mov    %esp,%ebp$/;"	l
c0101f1f	obj/kernel.asm	/^c0101f1f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101f22	obj/kernel.asm	/^c0101f22:	e8 e6 f7 ff ff       	call   c010170d <__intr_save>$/;"	l
c0101f27	obj/kernel.asm	/^c0101f27:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101f2a	obj/kernel.asm	/^c0101f2a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101f2d	obj/kernel.asm	/^c0101f2d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101f30	obj/kernel.asm	/^c0101f30:	e8 a0 fa ff ff       	call   c01019d5 <lpt_putc>$/;"	l
c0101f35	obj/kernel.asm	/^c0101f35:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101f38	obj/kernel.asm	/^c0101f38:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101f3b	obj/kernel.asm	/^c0101f3b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101f3e	obj/kernel.asm	/^c0101f3e:	e8 c8 fa ff ff       	call   c0101a0b <cga_putc>$/;"	l
c0101f43	obj/kernel.asm	/^c0101f43:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101f46	obj/kernel.asm	/^c0101f46:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101f49	obj/kernel.asm	/^c0101f49:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101f4c	obj/kernel.asm	/^c0101f4c:	e8 e3 fc ff ff       	call   c0101c34 <serial_putc>$/;"	l
c0101f51	obj/kernel.asm	/^c0101f51:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101f54	obj/kernel.asm	/^c0101f54:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101f57	obj/kernel.asm	/^c0101f57:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0101f5a	obj/kernel.asm	/^c0101f5a:	e8 d8 f7 ff ff       	call   c0101737 <__intr_restore>$/;"	l
c0101f5f	obj/kernel.asm	/^c0101f5f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101f62	obj/kernel.asm	/^c0101f62:	c9                   	leave  $/;"	l
c0101f63	obj/kernel.asm	/^c0101f63:	c3                   	ret    $/;"	l
c0101f64	obj/kernel.asm	/^c0101f64 <cons_getc>:$/;"	l
c0101f64	obj/kernel.asm	/^c0101f64:	55                   	push   %ebp$/;"	l
c0101f65	obj/kernel.asm	/^c0101f65:	89 e5                	mov    %esp,%ebp$/;"	l
c0101f67	obj/kernel.asm	/^c0101f67:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101f6a	obj/kernel.asm	/^c0101f6a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101f71	obj/kernel.asm	/^c0101f71:	e8 97 f7 ff ff       	call   c010170d <__intr_save>$/;"	l
c0101f76	obj/kernel.asm	/^c0101f76:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0101f79	obj/kernel.asm	/^c0101f79:	e8 8e fd ff ff       	call   c0101d0c <serial_intr>$/;"	l
c0101f7e	obj/kernel.asm	/^c0101f7e:	e8 37 ff ff ff       	call   c0101eba <kbd_intr>$/;"	l
c0101f83	obj/kernel.asm	/^c0101f83:	8b 15 40 d7 14 c0    	mov    0xc014d740,%edx$/;"	l
c0101f89	obj/kernel.asm	/^c0101f89:	a1 44 d7 14 c0       	mov    0xc014d744,%eax$/;"	l
c0101f8e	obj/kernel.asm	/^c0101f8e:	39 c2                	cmp    %eax,%edx$/;"	l
c0101f90	obj/kernel.asm	/^c0101f90:	74 31                	je     c0101fc3 <cons_getc+0x5f>$/;"	l
c0101f92	obj/kernel.asm	/^c0101f92:	a1 40 d7 14 c0       	mov    0xc014d740,%eax$/;"	l
c0101f97	obj/kernel.asm	/^c0101f97:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101f9a	obj/kernel.asm	/^c0101f9a:	89 15 40 d7 14 c0    	mov    %edx,0xc014d740$/;"	l
c0101fa0	obj/kernel.asm	/^c0101fa0:	0f b6 80 40 d5 14 c0 	movzbl -0x3feb2ac0(%eax),%eax$/;"	l
c0101fa7	obj/kernel.asm	/^c0101fa7:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101faa	obj/kernel.asm	/^c0101faa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101fad	obj/kernel.asm	/^c0101fad:	a1 40 d7 14 c0       	mov    0xc014d740,%eax$/;"	l
c0101fb2	obj/kernel.asm	/^c0101fb2:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c0101fb7	obj/kernel.asm	/^c0101fb7:	75 0a                	jne    c0101fc3 <cons_getc+0x5f>$/;"	l
c0101fb9	obj/kernel.asm	/^c0101fb9:	c7 05 40 d7 14 c0 00 	movl   $0x0,0xc014d740$/;"	l
c0101fc0	obj/kernel.asm	/^c0101fc0:	00 00 00 $/;"	l
c0101fc3	obj/kernel.asm	/^c0101fc3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101fc6	obj/kernel.asm	/^c0101fc6:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0101fc9	obj/kernel.asm	/^c0101fc9:	e8 69 f7 ff ff       	call   c0101737 <__intr_restore>$/;"	l
c0101fce	obj/kernel.asm	/^c0101fce:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101fd1	obj/kernel.asm	/^c0101fd1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101fd4	obj/kernel.asm	/^c0101fd4:	c9                   	leave  $/;"	l
c0101fd5	obj/kernel.asm	/^c0101fd5:	c3                   	ret    $/;"	l
c0101fd6	obj/kernel.asm	/^c0101fd6 <pic_setmask>:$/;"	l
c0101fd6	obj/kernel.asm	/^c0101fd6:	55                   	push   %ebp$/;"	l
c0101fd7	obj/kernel.asm	/^c0101fd7:	89 e5                	mov    %esp,%ebp$/;"	l
c0101fd9	obj/kernel.asm	/^c0101fd9:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0101fdc	obj/kernel.asm	/^c0101fdc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101fdf	obj/kernel.asm	/^c0101fdf:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c0101fe3	obj/kernel.asm	/^c0101fe3:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0101fe7	obj/kernel.asm	/^c0101fe7:	66 a3 90 c5 14 c0    	mov    %ax,0xc014c590$/;"	l
c0101fed	obj/kernel.asm	/^c0101fed:	a1 4c d7 14 c0       	mov    0xc014d74c,%eax$/;"	l
c0101ff2	obj/kernel.asm	/^c0101ff2:	85 c0                	test   %eax,%eax$/;"	l
c0101ff4	obj/kernel.asm	/^c0101ff4:	74 36                	je     c010202c <pic_setmask+0x56>$/;"	l
c0101ff6	obj/kernel.asm	/^c0101ff6:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0101ffa	obj/kernel.asm	/^c0101ffa:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101ffd	obj/kernel.asm	/^c0101ffd:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c0102003	obj/kernel.asm	/^c0102003:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c0102006	obj/kernel.asm	/^c0102006:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c010200a	obj/kernel.asm	/^c010200a:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c010200e	obj/kernel.asm	/^c010200e:	ee                   	out    %al,(%dx)$/;"	l
c010200f	obj/kernel.asm	/^c010200f:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0102013	obj/kernel.asm	/^c0102013:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c0102017	obj/kernel.asm	/^c0102017:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010201a	obj/kernel.asm	/^c010201a:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c0102020	obj/kernel.asm	/^c0102020:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0102023	obj/kernel.asm	/^c0102023:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0102027	obj/kernel.asm	/^c0102027:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c010202b	obj/kernel.asm	/^c010202b:	ee                   	out    %al,(%dx)$/;"	l
c010202c	obj/kernel.asm	/^c010202c:	c9                   	leave  $/;"	l
c010202d	obj/kernel.asm	/^c010202d:	c3                   	ret    $/;"	l
c010202e	obj/kernel.asm	/^c010202e <pic_enable>:$/;"	l
c010202e	obj/kernel.asm	/^c010202e:	55                   	push   %ebp$/;"	l
c010202f	obj/kernel.asm	/^c010202f:	89 e5                	mov    %esp,%ebp$/;"	l
c0102031	obj/kernel.asm	/^c0102031:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102034	obj/kernel.asm	/^c0102034:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0102039	obj/kernel.asm	/^c0102039:	89 c1                	mov    %eax,%ecx$/;"	l
c010203b	obj/kernel.asm	/^c010203b:	d3 e2                	shl    %cl,%edx$/;"	d
c010203d	obj/kernel.asm	/^c010203d:	89 d0                	mov    %edx,%eax$/;"	l
c010203f	obj/kernel.asm	/^c010203f:	f7 d0                	not    %eax$/;"	l
c0102041	obj/kernel.asm	/^c0102041:	89 c2                	mov    %eax,%edx$/;"	l
c0102043	obj/kernel.asm	/^c0102043:	0f b7 05 90 c5 14 c0 	movzwl 0xc014c590,%eax$/;"	l
c010204a	obj/kernel.asm	/^c010204a:	21 d0                	and    %edx,%eax$/;"	l
c010204c	obj/kernel.asm	/^c010204c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010204f	obj/kernel.asm	/^c010204f:	50                   	push   %eax$/;"	l
c0102050	obj/kernel.asm	/^c0102050:	e8 81 ff ff ff       	call   c0101fd6 <pic_setmask>$/;"	l
c0102055	obj/kernel.asm	/^c0102055:	83 c4 04             	add    $0x4,%esp$/;"	l
c0102058	obj/kernel.asm	/^c0102058:	c9                   	leave  $/;"	l
c0102059	obj/kernel.asm	/^c0102059:	c3                   	ret    $/;"	l
c010205a	obj/kernel.asm	/^c010205a <pic_init>:$/;"	l
c010205a	obj/kernel.asm	/^c010205a:	55                   	push   %ebp$/;"	l
c010205b	obj/kernel.asm	/^c010205b:	89 e5                	mov    %esp,%ebp$/;"	l
c010205d	obj/kernel.asm	/^c010205d:	83 ec 40             	sub    $0x40,%esp$/;"	l
c0102060	obj/kernel.asm	/^c0102060:	c7 05 4c d7 14 c0 01 	movl   $0x1,0xc014d74c$/;"	l
c0102067	obj/kernel.asm	/^c0102067:	00 00 00 $/;"	l
c010206a	obj/kernel.asm	/^c010206a:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c0102070	obj/kernel.asm	/^c0102070:	c6 45 fd ff          	movb   $0xff,-0x3(%ebp)$/;"	l
c0102074	obj/kernel.asm	/^c0102074:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c0102078	obj/kernel.asm	/^c0102078:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c010207c	obj/kernel.asm	/^c010207c:	ee                   	out    %al,(%dx)$/;"	l
c010207d	obj/kernel.asm	/^c010207d:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c0102083	obj/kernel.asm	/^c0102083:	c6 45 f9 ff          	movb   $0xff,-0x7(%ebp)$/;"	l
c0102087	obj/kernel.asm	/^c0102087:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c010208b	obj/kernel.asm	/^c010208b:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c010208f	obj/kernel.asm	/^c010208f:	ee                   	out    %al,(%dx)$/;"	l
c0102090	obj/kernel.asm	/^c0102090:	66 c7 45 f6 20 00    	movw   $0x20,-0xa(%ebp)$/;"	l
c0102096	obj/kernel.asm	/^c0102096:	c6 45 f5 11          	movb   $0x11,-0xb(%ebp)$/;"	l
c010209a	obj/kernel.asm	/^c010209a:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c010209e	obj/kernel.asm	/^c010209e:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c01020a2	obj/kernel.asm	/^c01020a2:	ee                   	out    %al,(%dx)$/;"	l
c01020a3	obj/kernel.asm	/^c01020a3:	66 c7 45 f2 21 00    	movw   $0x21,-0xe(%ebp)$/;"	l
c01020a9	obj/kernel.asm	/^c01020a9:	c6 45 f1 20          	movb   $0x20,-0xf(%ebp)$/;"	l
c01020ad	obj/kernel.asm	/^c01020ad:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01020b1	obj/kernel.asm	/^c01020b1:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01020b5	obj/kernel.asm	/^c01020b5:	ee                   	out    %al,(%dx)$/;"	l
c01020b6	obj/kernel.asm	/^c01020b6:	66 c7 45 ee 21 00    	movw   $0x21,-0x12(%ebp)$/;"	l
c01020bc	obj/kernel.asm	/^c01020bc:	c6 45 ed 04          	movb   $0x4,-0x13(%ebp)$/;"	l
c01020c0	obj/kernel.asm	/^c01020c0:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01020c4	obj/kernel.asm	/^c01020c4:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01020c8	obj/kernel.asm	/^c01020c8:	ee                   	out    %al,(%dx)$/;"	l
c01020c9	obj/kernel.asm	/^c01020c9:	66 c7 45 ea 21 00    	movw   $0x21,-0x16(%ebp)$/;"	l
c01020cf	obj/kernel.asm	/^c01020cf:	c6 45 e9 03          	movb   $0x3,-0x17(%ebp)$/;"	l
c01020d3	obj/kernel.asm	/^c01020d3:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c01020d7	obj/kernel.asm	/^c01020d7:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c01020db	obj/kernel.asm	/^c01020db:	ee                   	out    %al,(%dx)$/;"	l
c01020dc	obj/kernel.asm	/^c01020dc:	66 c7 45 e6 a0 00    	movw   $0xa0,-0x1a(%ebp)$/;"	l
c01020e2	obj/kernel.asm	/^c01020e2:	c6 45 e5 11          	movb   $0x11,-0x1b(%ebp)$/;"	l
c01020e6	obj/kernel.asm	/^c01020e6:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c01020ea	obj/kernel.asm	/^c01020ea:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01020ee	obj/kernel.asm	/^c01020ee:	ee                   	out    %al,(%dx)$/;"	l
c01020ef	obj/kernel.asm	/^c01020ef:	66 c7 45 e2 a1 00    	movw   $0xa1,-0x1e(%ebp)$/;"	l
c01020f5	obj/kernel.asm	/^c01020f5:	c6 45 e1 28          	movb   $0x28,-0x1f(%ebp)$/;"	l
c01020f9	obj/kernel.asm	/^c01020f9:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01020fd	obj/kernel.asm	/^c01020fd:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c0102101	obj/kernel.asm	/^c0102101:	ee                   	out    %al,(%dx)$/;"	l
c0102102	obj/kernel.asm	/^c0102102:	66 c7 45 de a1 00    	movw   $0xa1,-0x22(%ebp)$/;"	l
c0102108	obj/kernel.asm	/^c0102108:	c6 45 dd 02          	movb   $0x2,-0x23(%ebp)$/;"	l
c010210c	obj/kernel.asm	/^c010210c:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0102110	obj/kernel.asm	/^c0102110:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0102114	obj/kernel.asm	/^c0102114:	ee                   	out    %al,(%dx)$/;"	l
c0102115	obj/kernel.asm	/^c0102115:	66 c7 45 da a1 00    	movw   $0xa1,-0x26(%ebp)$/;"	l
c010211b	obj/kernel.asm	/^c010211b:	c6 45 d9 03          	movb   $0x3,-0x27(%ebp)$/;"	l
c010211f	obj/kernel.asm	/^c010211f:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0102123	obj/kernel.asm	/^c0102123:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c0102127	obj/kernel.asm	/^c0102127:	ee                   	out    %al,(%dx)$/;"	l
c0102128	obj/kernel.asm	/^c0102128:	66 c7 45 d6 20 00    	movw   $0x20,-0x2a(%ebp)$/;"	l
c010212e	obj/kernel.asm	/^c010212e:	c6 45 d5 68          	movb   $0x68,-0x2b(%ebp)$/;"	l
c0102132	obj/kernel.asm	/^c0102132:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0102136	obj/kernel.asm	/^c0102136:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c010213a	obj/kernel.asm	/^c010213a:	ee                   	out    %al,(%dx)$/;"	l
c010213b	obj/kernel.asm	/^c010213b:	66 c7 45 d2 20 00    	movw   $0x20,-0x2e(%ebp)$/;"	l
c0102141	obj/kernel.asm	/^c0102141:	c6 45 d1 0a          	movb   $0xa,-0x2f(%ebp)$/;"	l
c0102145	obj/kernel.asm	/^c0102145:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c0102149	obj/kernel.asm	/^c0102149:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c010214d	obj/kernel.asm	/^c010214d:	ee                   	out    %al,(%dx)$/;"	l
c010214e	obj/kernel.asm	/^c010214e:	66 c7 45 ce a0 00    	movw   $0xa0,-0x32(%ebp)$/;"	l
c0102154	obj/kernel.asm	/^c0102154:	c6 45 cd 68          	movb   $0x68,-0x33(%ebp)$/;"	l
c0102158	obj/kernel.asm	/^c0102158:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c010215c	obj/kernel.asm	/^c010215c:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c0102160	obj/kernel.asm	/^c0102160:	ee                   	out    %al,(%dx)$/;"	l
c0102161	obj/kernel.asm	/^c0102161:	66 c7 45 ca a0 00    	movw   $0xa0,-0x36(%ebp)$/;"	l
c0102167	obj/kernel.asm	/^c0102167:	c6 45 c9 0a          	movb   $0xa,-0x37(%ebp)$/;"	l
c010216b	obj/kernel.asm	/^c010216b:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c010216f	obj/kernel.asm	/^c010216f:	0f b7 55 ca          	movzwl -0x36(%ebp),%edx$/;"	l
c0102173	obj/kernel.asm	/^c0102173:	ee                   	out    %al,(%dx)$/;"	l
c0102174	obj/kernel.asm	/^c0102174:	0f b7 05 90 c5 14 c0 	movzwl 0xc014c590,%eax$/;"	l
c010217b	obj/kernel.asm	/^c010217b:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
c010217f	obj/kernel.asm	/^c010217f:	74 13                	je     c0102194 <pic_init+0x13a>$/;"	l
c0102181	obj/kernel.asm	/^c0102181:	0f b7 05 90 c5 14 c0 	movzwl 0xc014c590,%eax$/;"	l
c0102188	obj/kernel.asm	/^c0102188:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010218b	obj/kernel.asm	/^c010218b:	50                   	push   %eax$/;"	l
c010218c	obj/kernel.asm	/^c010218c:	e8 45 fe ff ff       	call   c0101fd6 <pic_setmask>$/;"	l
c0102191	obj/kernel.asm	/^c0102191:	83 c4 04             	add    $0x4,%esp$/;"	l
c0102194	obj/kernel.asm	/^c0102194:	c9                   	leave  $/;"	l
c0102195	obj/kernel.asm	/^c0102195:	c3                   	ret    $/;"	l
c0102196	obj/kernel.asm	/^c0102196 <intr_enable>:$/;"	l
c0102196	obj/kernel.asm	/^c0102196:	55                   	push   %ebp$/;"	l
c0102197	obj/kernel.asm	/^c0102197:	89 e5                	mov    %esp,%ebp$/;"	l
c0102199	obj/kernel.asm	/^c0102199:	fb                   	sti    $/;"	l
c010219a	obj/kernel.asm	/^c010219a:	5d                   	pop    %ebp$/;"	l
c010219b	obj/kernel.asm	/^c010219b:	c3                   	ret    $/;"	l
c010219c	obj/kernel.asm	/^c010219c <intr_disable>:$/;"	l
c010219c	obj/kernel.asm	/^c010219c:	55                   	push   %ebp$/;"	l
c010219d	obj/kernel.asm	/^c010219d:	89 e5                	mov    %esp,%ebp$/;"	l
c010219f	obj/kernel.asm	/^c010219f:	fa                   	cli    $/;"	l
c01021a0	obj/kernel.asm	/^c01021a0:	5d                   	pop    %ebp$/;"	l
c01021a1	obj/kernel.asm	/^c01021a1:	c3                   	ret    $/;"	l
c01021a2	obj/kernel.asm	/^c01021a2 <print_ticks>:$/;"	l
c01021a2	obj/kernel.asm	/^c01021a2:	55                   	push   %ebp$/;"	l
c01021a3	obj/kernel.asm	/^c01021a3:	89 e5                	mov    %esp,%ebp$/;"	l
c01021a5	obj/kernel.asm	/^c01021a5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01021a8	obj/kernel.asm	/^c01021a8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01021ab	obj/kernel.asm	/^c01021ab:	6a 64                	push   $0x64$/;"	l
c01021ad	obj/kernel.asm	/^c01021ad:	68 00 3d 11 c0       	push   $0xc0113d00$/;"	l
c01021b2	obj/kernel.asm	/^c01021b2:	e8 b3 e1 ff ff       	call   c010036a <cprintf>$/;"	l
c01021b7	obj/kernel.asm	/^c01021b7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01021ba	obj/kernel.asm	/^c01021ba:	c9                   	leave  $/;"	l
c01021bb	obj/kernel.asm	/^c01021bb:	c3                   	ret    $/;"	l
c01021bc	obj/kernel.asm	/^c01021bc <idt_init>:$/;"	l
c01021bc	obj/kernel.asm	/^c01021bc:	55                   	push   %ebp$/;"	l
c01021bd	obj/kernel.asm	/^c01021bd:	89 e5                	mov    %esp,%ebp$/;"	l
c01021bf	obj/kernel.asm	/^c01021bf:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01021c2	obj/kernel.asm	/^c01021c2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01021c9	obj/kernel.asm	/^c01021c9:	e9 5c 02 00 00       	jmp    c010242a <idt_init+0x26e>$/;"	l
c01021ce	obj/kernel.asm	/^c01021ce:	81 7d fc 80 00 00 00 	cmpl   $0x80,-0x4(%ebp)$/;"	l
c01021d5	obj/kernel.asm	/^c01021d5:	0f 85 c1 00 00 00    	jne    c010229c <idt_init+0xe0>$/;"	l
c01021db	obj/kernel.asm	/^c01021db:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021de	obj/kernel.asm	/^c01021de:	8b 04 85 60 c6 14 c0 	mov    -0x3feb39a0(,%eax,4),%eax$/;"	l
c01021e5	obj/kernel.asm	/^c01021e5:	89 c2                	mov    %eax,%edx$/;"	l
c01021e7	obj/kernel.asm	/^c01021e7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021ea	obj/kernel.asm	/^c01021ea:	66 89 14 c5 80 d7 14 	mov    %dx,-0x3feb2880(,%eax,8)$/;"	l
c01021f1	obj/kernel.asm	/^c01021f1:	c0 $/;"	l
c01021f2	obj/kernel.asm	/^c01021f2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021f5	obj/kernel.asm	/^c01021f5:	66 c7 04 c5 82 d7 14 	movw   $0x8,-0x3feb287e(,%eax,8)$/;"	l
c01021fc	obj/kernel.asm	/^c01021fc:	c0 08 00 $/;"	l
c01021ff	obj/kernel.asm	/^c01021ff:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102202	obj/kernel.asm	/^c0102202:	0f b6 14 c5 84 d7 14 	movzbl -0x3feb287c(,%eax,8),%edx$/;"	l
c0102209	obj/kernel.asm	/^c0102209:	c0 $/;"	l
c010220a	obj/kernel.asm	/^c010220a:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c010220d	obj/kernel.asm	/^c010220d:	88 14 c5 84 d7 14 c0 	mov    %dl,-0x3feb287c(,%eax,8)$/;"	l
c0102214	obj/kernel.asm	/^c0102214:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102217	obj/kernel.asm	/^c0102217:	0f b6 14 c5 84 d7 14 	movzbl -0x3feb287c(,%eax,8),%edx$/;"	l
c010221e	obj/kernel.asm	/^c010221e:	c0 $/;"	l
c010221f	obj/kernel.asm	/^c010221f:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c0102222	obj/kernel.asm	/^c0102222:	88 14 c5 84 d7 14 c0 	mov    %dl,-0x3feb287c(,%eax,8)$/;"	l
c0102229	obj/kernel.asm	/^c0102229:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010222c	obj/kernel.asm	/^c010222c:	0f b6 14 c5 85 d7 14 	movzbl -0x3feb287b(,%eax,8),%edx$/;"	l
c0102233	obj/kernel.asm	/^c0102233:	c0 $/;"	l
c0102234	obj/kernel.asm	/^c0102234:	83 ca 0f             	or     $0xf,%edx$/;"	l
c0102237	obj/kernel.asm	/^c0102237:	88 14 c5 85 d7 14 c0 	mov    %dl,-0x3feb287b(,%eax,8)$/;"	l
c010223e	obj/kernel.asm	/^c010223e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102241	obj/kernel.asm	/^c0102241:	0f b6 14 c5 85 d7 14 	movzbl -0x3feb287b(,%eax,8),%edx$/;"	l
c0102248	obj/kernel.asm	/^c0102248:	c0 $/;"	l
c0102249	obj/kernel.asm	/^c0102249:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c010224c	obj/kernel.asm	/^c010224c:	88 14 c5 85 d7 14 c0 	mov    %dl,-0x3feb287b(,%eax,8)$/;"	l
c0102253	obj/kernel.asm	/^c0102253:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102256	obj/kernel.asm	/^c0102256:	0f b6 14 c5 85 d7 14 	movzbl -0x3feb287b(,%eax,8),%edx$/;"	l
c010225d	obj/kernel.asm	/^c010225d:	c0 $/;"	l
c010225e	obj/kernel.asm	/^c010225e:	83 ca 60             	or     $0x60,%edx$/;"	l
c0102261	obj/kernel.asm	/^c0102261:	88 14 c5 85 d7 14 c0 	mov    %dl,-0x3feb287b(,%eax,8)$/;"	l
c0102268	obj/kernel.asm	/^c0102268:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010226b	obj/kernel.asm	/^c010226b:	0f b6 14 c5 85 d7 14 	movzbl -0x3feb287b(,%eax,8),%edx$/;"	l
c0102272	obj/kernel.asm	/^c0102272:	c0 $/;"	l
c0102273	obj/kernel.asm	/^c0102273:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c0102276	obj/kernel.asm	/^c0102276:	88 14 c5 85 d7 14 c0 	mov    %dl,-0x3feb287b(,%eax,8)$/;"	l
c010227d	obj/kernel.asm	/^c010227d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102280	obj/kernel.asm	/^c0102280:	8b 04 85 60 c6 14 c0 	mov    -0x3feb39a0(,%eax,4),%eax$/;"	l
c0102287	obj/kernel.asm	/^c0102287:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010228a	obj/kernel.asm	/^c010228a:	89 c2                	mov    %eax,%edx$/;"	l
c010228c	obj/kernel.asm	/^c010228c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010228f	obj/kernel.asm	/^c010228f:	66 89 14 c5 86 d7 14 	mov    %dx,-0x3feb287a(,%eax,8)$/;"	l
c0102296	obj/kernel.asm	/^c0102296:	c0 $/;"	l
c0102297	obj/kernel.asm	/^c0102297:	e9 8a 01 00 00       	jmp    c0102426 <idt_init+0x26a>$/;"	l
c010229c	obj/kernel.asm	/^c010229c:	83 7d fc 1f          	cmpl   $0x1f,-0x4(%ebp)$/;"	l
c01022a0	obj/kernel.asm	/^c01022a0:	0f 8f c1 00 00 00    	jg     c0102367 <idt_init+0x1ab>$/;"	l
c01022a6	obj/kernel.asm	/^c01022a6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022a9	obj/kernel.asm	/^c01022a9:	8b 04 85 60 c6 14 c0 	mov    -0x3feb39a0(,%eax,4),%eax$/;"	l
c01022b0	obj/kernel.asm	/^c01022b0:	89 c2                	mov    %eax,%edx$/;"	l
c01022b2	obj/kernel.asm	/^c01022b2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022b5	obj/kernel.asm	/^c01022b5:	66 89 14 c5 80 d7 14 	mov    %dx,-0x3feb2880(,%eax,8)$/;"	l
c01022bc	obj/kernel.asm	/^c01022bc:	c0 $/;"	l
c01022bd	obj/kernel.asm	/^c01022bd:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022c0	obj/kernel.asm	/^c01022c0:	66 c7 04 c5 82 d7 14 	movw   $0x8,-0x3feb287e(,%eax,8)$/;"	l
c01022c7	obj/kernel.asm	/^c01022c7:	c0 08 00 $/;"	l
c01022ca	obj/kernel.asm	/^c01022ca:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022cd	obj/kernel.asm	/^c01022cd:	0f b6 14 c5 84 d7 14 	movzbl -0x3feb287c(,%eax,8),%edx$/;"	l
c01022d4	obj/kernel.asm	/^c01022d4:	c0 $/;"	l
c01022d5	obj/kernel.asm	/^c01022d5:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c01022d8	obj/kernel.asm	/^c01022d8:	88 14 c5 84 d7 14 c0 	mov    %dl,-0x3feb287c(,%eax,8)$/;"	l
c01022df	obj/kernel.asm	/^c01022df:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022e2	obj/kernel.asm	/^c01022e2:	0f b6 14 c5 84 d7 14 	movzbl -0x3feb287c(,%eax,8),%edx$/;"	l
c01022e9	obj/kernel.asm	/^c01022e9:	c0 $/;"	l
c01022ea	obj/kernel.asm	/^c01022ea:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c01022ed	obj/kernel.asm	/^c01022ed:	88 14 c5 84 d7 14 c0 	mov    %dl,-0x3feb287c(,%eax,8)$/;"	l
c01022f4	obj/kernel.asm	/^c01022f4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022f7	obj/kernel.asm	/^c01022f7:	0f b6 14 c5 85 d7 14 	movzbl -0x3feb287b(,%eax,8),%edx$/;"	l
c01022fe	obj/kernel.asm	/^c01022fe:	c0 $/;"	l
c01022ff	obj/kernel.asm	/^c01022ff:	83 ca 0f             	or     $0xf,%edx$/;"	l
c0102302	obj/kernel.asm	/^c0102302:	88 14 c5 85 d7 14 c0 	mov    %dl,-0x3feb287b(,%eax,8)$/;"	l
c0102309	obj/kernel.asm	/^c0102309:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010230c	obj/kernel.asm	/^c010230c:	0f b6 14 c5 85 d7 14 	movzbl -0x3feb287b(,%eax,8),%edx$/;"	l
c0102313	obj/kernel.asm	/^c0102313:	c0 $/;"	l
c0102314	obj/kernel.asm	/^c0102314:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c0102317	obj/kernel.asm	/^c0102317:	88 14 c5 85 d7 14 c0 	mov    %dl,-0x3feb287b(,%eax,8)$/;"	l
c010231e	obj/kernel.asm	/^c010231e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102321	obj/kernel.asm	/^c0102321:	0f b6 14 c5 85 d7 14 	movzbl -0x3feb287b(,%eax,8),%edx$/;"	l
c0102328	obj/kernel.asm	/^c0102328:	c0 $/;"	l
c0102329	obj/kernel.asm	/^c0102329:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c010232c	obj/kernel.asm	/^c010232c:	88 14 c5 85 d7 14 c0 	mov    %dl,-0x3feb287b(,%eax,8)$/;"	l
c0102333	obj/kernel.asm	/^c0102333:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102336	obj/kernel.asm	/^c0102336:	0f b6 14 c5 85 d7 14 	movzbl -0x3feb287b(,%eax,8),%edx$/;"	l
c010233d	obj/kernel.asm	/^c010233d:	c0 $/;"	l
c010233e	obj/kernel.asm	/^c010233e:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c0102341	obj/kernel.asm	/^c0102341:	88 14 c5 85 d7 14 c0 	mov    %dl,-0x3feb287b(,%eax,8)$/;"	l
c0102348	obj/kernel.asm	/^c0102348:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010234b	obj/kernel.asm	/^c010234b:	8b 04 85 60 c6 14 c0 	mov    -0x3feb39a0(,%eax,4),%eax$/;"	l
c0102352	obj/kernel.asm	/^c0102352:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0102355	obj/kernel.asm	/^c0102355:	89 c2                	mov    %eax,%edx$/;"	l
c0102357	obj/kernel.asm	/^c0102357:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010235a	obj/kernel.asm	/^c010235a:	66 89 14 c5 86 d7 14 	mov    %dx,-0x3feb287a(,%eax,8)$/;"	l
c0102361	obj/kernel.asm	/^c0102361:	c0 $/;"	l
c0102362	obj/kernel.asm	/^c0102362:	e9 bf 00 00 00       	jmp    c0102426 <idt_init+0x26a>$/;"	l
c0102367	obj/kernel.asm	/^c0102367:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010236a	obj/kernel.asm	/^c010236a:	8b 04 85 60 c6 14 c0 	mov    -0x3feb39a0(,%eax,4),%eax$/;"	l
c0102371	obj/kernel.asm	/^c0102371:	89 c2                	mov    %eax,%edx$/;"	l
c0102373	obj/kernel.asm	/^c0102373:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102376	obj/kernel.asm	/^c0102376:	66 89 14 c5 80 d7 14 	mov    %dx,-0x3feb2880(,%eax,8)$/;"	l
c010237d	obj/kernel.asm	/^c010237d:	c0 $/;"	l
c010237e	obj/kernel.asm	/^c010237e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102381	obj/kernel.asm	/^c0102381:	66 c7 04 c5 82 d7 14 	movw   $0x8,-0x3feb287e(,%eax,8)$/;"	l
c0102388	obj/kernel.asm	/^c0102388:	c0 08 00 $/;"	l
c010238b	obj/kernel.asm	/^c010238b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010238e	obj/kernel.asm	/^c010238e:	0f b6 14 c5 84 d7 14 	movzbl -0x3feb287c(,%eax,8),%edx$/;"	l
c0102395	obj/kernel.asm	/^c0102395:	c0 $/;"	l
c0102396	obj/kernel.asm	/^c0102396:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c0102399	obj/kernel.asm	/^c0102399:	88 14 c5 84 d7 14 c0 	mov    %dl,-0x3feb287c(,%eax,8)$/;"	l
c01023a0	obj/kernel.asm	/^c01023a0:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01023a3	obj/kernel.asm	/^c01023a3:	0f b6 14 c5 84 d7 14 	movzbl -0x3feb287c(,%eax,8),%edx$/;"	l
c01023aa	obj/kernel.asm	/^c01023aa:	c0 $/;"	l
c01023ab	obj/kernel.asm	/^c01023ab:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c01023ae	obj/kernel.asm	/^c01023ae:	88 14 c5 84 d7 14 c0 	mov    %dl,-0x3feb287c(,%eax,8)$/;"	l
c01023b5	obj/kernel.asm	/^c01023b5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01023b8	obj/kernel.asm	/^c01023b8:	0f b6 14 c5 85 d7 14 	movzbl -0x3feb287b(,%eax,8),%edx$/;"	l
c01023bf	obj/kernel.asm	/^c01023bf:	c0 $/;"	l
c01023c0	obj/kernel.asm	/^c01023c0:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c01023c3	obj/kernel.asm	/^c01023c3:	83 ca 0e             	or     $0xe,%edx$/;"	l
c01023c6	obj/kernel.asm	/^c01023c6:	88 14 c5 85 d7 14 c0 	mov    %dl,-0x3feb287b(,%eax,8)$/;"	l
c01023cd	obj/kernel.asm	/^c01023cd:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01023d0	obj/kernel.asm	/^c01023d0:	0f b6 14 c5 85 d7 14 	movzbl -0x3feb287b(,%eax,8),%edx$/;"	l
c01023d7	obj/kernel.asm	/^c01023d7:	c0 $/;"	l
c01023d8	obj/kernel.asm	/^c01023d8:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c01023db	obj/kernel.asm	/^c01023db:	88 14 c5 85 d7 14 c0 	mov    %dl,-0x3feb287b(,%eax,8)$/;"	l
c01023e2	obj/kernel.asm	/^c01023e2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01023e5	obj/kernel.asm	/^c01023e5:	0f b6 14 c5 85 d7 14 	movzbl -0x3feb287b(,%eax,8),%edx$/;"	l
c01023ec	obj/kernel.asm	/^c01023ec:	c0 $/;"	l
c01023ed	obj/kernel.asm	/^c01023ed:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c01023f0	obj/kernel.asm	/^c01023f0:	88 14 c5 85 d7 14 c0 	mov    %dl,-0x3feb287b(,%eax,8)$/;"	l
c01023f7	obj/kernel.asm	/^c01023f7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01023fa	obj/kernel.asm	/^c01023fa:	0f b6 14 c5 85 d7 14 	movzbl -0x3feb287b(,%eax,8),%edx$/;"	l
c0102401	obj/kernel.asm	/^c0102401:	c0 $/;"	l
c0102402	obj/kernel.asm	/^c0102402:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c0102405	obj/kernel.asm	/^c0102405:	88 14 c5 85 d7 14 c0 	mov    %dl,-0x3feb287b(,%eax,8)$/;"	l
c010240c	obj/kernel.asm	/^c010240c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010240f	obj/kernel.asm	/^c010240f:	8b 04 85 60 c6 14 c0 	mov    -0x3feb39a0(,%eax,4),%eax$/;"	l
c0102416	obj/kernel.asm	/^c0102416:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0102419	obj/kernel.asm	/^c0102419:	89 c2                	mov    %eax,%edx$/;"	l
c010241b	obj/kernel.asm	/^c010241b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010241e	obj/kernel.asm	/^c010241e:	66 89 14 c5 86 d7 14 	mov    %dx,-0x3feb287a(,%eax,8)$/;"	l
c0102425	obj/kernel.asm	/^c0102425:	c0 $/;"	l
c0102426	obj/kernel.asm	/^c0102426:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010242a	obj/kernel.asm	/^c010242a:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)$/;"	l
c0102431	obj/kernel.asm	/^c0102431:	0f 8e 97 fd ff ff    	jle    c01021ce <idt_init+0x12>$/;"	l
c0102437	obj/kernel.asm	/^c0102437:	a1 44 c8 14 c0       	mov    0xc014c844,%eax$/;"	l
c010243c	obj/kernel.asm	/^c010243c:	66 a3 48 db 14 c0    	mov    %ax,0xc014db48$/;"	l
c0102442	obj/kernel.asm	/^c0102442:	66 c7 05 4a db 14 c0 	movw   $0x8,0xc014db4a$/;"	l
c0102449	obj/kernel.asm	/^c0102449:	08 00 $/;"	l
c010244b	obj/kernel.asm	/^c010244b:	0f b6 05 4c db 14 c0 	movzbl 0xc014db4c,%eax$/;"	l
c0102452	obj/kernel.asm	/^c0102452:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
c0102455	obj/kernel.asm	/^c0102455:	a2 4c db 14 c0       	mov    %al,0xc014db4c$/;"	l
c010245a	obj/kernel.asm	/^c010245a:	0f b6 05 4c db 14 c0 	movzbl 0xc014db4c,%eax$/;"	l
c0102461	obj/kernel.asm	/^c0102461:	83 e0 1f             	and    $0x1f,%eax$/;"	l
c0102464	obj/kernel.asm	/^c0102464:	a2 4c db 14 c0       	mov    %al,0xc014db4c$/;"	l
c0102469	obj/kernel.asm	/^c0102469:	0f b6 05 4d db 14 c0 	movzbl 0xc014db4d,%eax$/;"	l
c0102470	obj/kernel.asm	/^c0102470:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c0102473	obj/kernel.asm	/^c0102473:	83 c8 0e             	or     $0xe,%eax$/;"	l
c0102476	obj/kernel.asm	/^c0102476:	a2 4d db 14 c0       	mov    %al,0xc014db4d$/;"	l
c010247b	obj/kernel.asm	/^c010247b:	0f b6 05 4d db 14 c0 	movzbl 0xc014db4d,%eax$/;"	l
c0102482	obj/kernel.asm	/^c0102482:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c0102485	obj/kernel.asm	/^c0102485:	a2 4d db 14 c0       	mov    %al,0xc014db4d$/;"	l
c010248a	obj/kernel.asm	/^c010248a:	0f b6 05 4d db 14 c0 	movzbl 0xc014db4d,%eax$/;"	l
c0102491	obj/kernel.asm	/^c0102491:	83 c8 60             	or     $0x60,%eax$/;"	l
c0102494	obj/kernel.asm	/^c0102494:	a2 4d db 14 c0       	mov    %al,0xc014db4d$/;"	l
c0102499	obj/kernel.asm	/^c0102499:	0f b6 05 4d db 14 c0 	movzbl 0xc014db4d,%eax$/;"	l
c01024a0	obj/kernel.asm	/^c01024a0:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c01024a3	obj/kernel.asm	/^c01024a3:	a2 4d db 14 c0       	mov    %al,0xc014db4d$/;"	l
c01024a8	obj/kernel.asm	/^c01024a8:	a1 44 c8 14 c0       	mov    0xc014c844,%eax$/;"	l
c01024ad	obj/kernel.asm	/^c01024ad:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01024b0	obj/kernel.asm	/^c01024b0:	66 a3 4e db 14 c0    	mov    %ax,0xc014db4e$/;"	l
c01024b6	obj/kernel.asm	/^c01024b6:	c7 45 f8 c0 c5 14 c0 	movl   $0xc014c5c0,-0x8(%ebp)$/;"	l
c01024bd	obj/kernel.asm	/^c01024bd:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01024c0	obj/kernel.asm	/^c01024c0:	0f 01 18             	lidtl  (%eax)$/;"	l
c01024c3	obj/kernel.asm	/^c01024c3:	c9                   	leave  $/;"	l
c01024c4	obj/kernel.asm	/^c01024c4:	c3                   	ret    $/;"	l
c01024c5	obj/kernel.asm	/^c01024c5 <trapname>:$/;"	l
c01024c5	obj/kernel.asm	/^c01024c5:	55                   	push   %ebp$/;"	l
c01024c6	obj/kernel.asm	/^c01024c6:	89 e5                	mov    %esp,%ebp$/;"	l
c01024c8	obj/kernel.asm	/^c01024c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024cb	obj/kernel.asm	/^c01024cb:	83 f8 13             	cmp    $0x13,%eax$/;"	l
c01024ce	obj/kernel.asm	/^c01024ce:	77 0c                	ja     c01024dc <trapname+0x17>$/;"	l
c01024d0	obj/kernel.asm	/^c01024d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024d3	obj/kernel.asm	/^c01024d3:	8b 04 85 80 41 11 c0 	mov    -0x3feebe80(,%eax,4),%eax$/;"	l
c01024da	obj/kernel.asm	/^c01024da:	eb 18                	jmp    c01024f4 <trapname+0x2f>$/;"	l
c01024dc	obj/kernel.asm	/^c01024dc:	83 7d 08 1f          	cmpl   $0x1f,0x8(%ebp)$/;"	l
c01024e0	obj/kernel.asm	/^c01024e0:	7e 0d                	jle    c01024ef <trapname+0x2a>$/;"	l
c01024e2	obj/kernel.asm	/^c01024e2:	83 7d 08 2f          	cmpl   $0x2f,0x8(%ebp)$/;"	l
c01024e6	obj/kernel.asm	/^c01024e6:	7f 07                	jg     c01024ef <trapname+0x2a>$/;"	l
c01024e8	obj/kernel.asm	/^c01024e8:	b8 0a 3d 11 c0       	mov    $0xc0113d0a,%eax$/;"	l
c01024ed	obj/kernel.asm	/^c01024ed:	eb 05                	jmp    c01024f4 <trapname+0x2f>$/;"	l
c01024ef	obj/kernel.asm	/^c01024ef:	b8 1d 3d 11 c0       	mov    $0xc0113d1d,%eax$/;"	l
c01024f4	obj/kernel.asm	/^c01024f4:	5d                   	pop    %ebp$/;"	l
c01024f5	obj/kernel.asm	/^c01024f5:	c3                   	ret    $/;"	l
c01024f6	obj/kernel.asm	/^c01024f6 <trap_in_kernel>:$/;"	l
c01024f6	obj/kernel.asm	/^c01024f6:	55                   	push   %ebp$/;"	l
c01024f7	obj/kernel.asm	/^c01024f7:	89 e5                	mov    %esp,%ebp$/;"	l
c01024f9	obj/kernel.asm	/^c01024f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024fc	obj/kernel.asm	/^c01024fc:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c0102500	obj/kernel.asm	/^c0102500:	66 83 f8 08          	cmp    $0x8,%ax$/;"	l
c0102504	obj/kernel.asm	/^c0102504:	0f 94 c0             	sete   %al$/;"	l
c0102507	obj/kernel.asm	/^c0102507:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010250a	obj/kernel.asm	/^c010250a:	5d                   	pop    %ebp$/;"	l
c010250b	obj/kernel.asm	/^c010250b:	c3                   	ret    $/;"	l
c010250c	obj/kernel.asm	/^c010250c <print_trapframe>:$/;"	l
c010250c	obj/kernel.asm	/^c010250c:	55                   	push   %ebp$/;"	l
c010250d	obj/kernel.asm	/^c010250d:	89 e5                	mov    %esp,%ebp$/;"	l
c010250f	obj/kernel.asm	/^c010250f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102512	obj/kernel.asm	/^c0102512:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102515	obj/kernel.asm	/^c0102515:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102518	obj/kernel.asm	/^c0102518:	68 5e 3d 11 c0       	push   $0xc0113d5e$/;"	l
c010251d	obj/kernel.asm	/^c010251d:	e8 48 de ff ff       	call   c010036a <cprintf>$/;"	l
c0102522	obj/kernel.asm	/^c0102522:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102525	obj/kernel.asm	/^c0102525:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102528	obj/kernel.asm	/^c0102528:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010252b	obj/kernel.asm	/^c010252b:	50                   	push   %eax$/;"	l
c010252c	obj/kernel.asm	/^c010252c:	e8 b7 01 00 00       	call   c01026e8 <print_regs>$/;"	l
c0102531	obj/kernel.asm	/^c0102531:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102534	obj/kernel.asm	/^c0102534:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102537	obj/kernel.asm	/^c0102537:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c010253b	obj/kernel.asm	/^c010253b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010253e	obj/kernel.asm	/^c010253e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102541	obj/kernel.asm	/^c0102541:	50                   	push   %eax$/;"	l
c0102542	obj/kernel.asm	/^c0102542:	68 6f 3d 11 c0       	push   $0xc0113d6f$/;"	l
c0102547	obj/kernel.asm	/^c0102547:	e8 1e de ff ff       	call   c010036a <cprintf>$/;"	l
c010254c	obj/kernel.asm	/^c010254c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010254f	obj/kernel.asm	/^c010254f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102552	obj/kernel.asm	/^c0102552:	0f b7 40 28          	movzwl 0x28(%eax),%eax$/;"	l
c0102556	obj/kernel.asm	/^c0102556:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102559	obj/kernel.asm	/^c0102559:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010255c	obj/kernel.asm	/^c010255c:	50                   	push   %eax$/;"	l
c010255d	obj/kernel.asm	/^c010255d:	68 82 3d 11 c0       	push   $0xc0113d82$/;"	l
c0102562	obj/kernel.asm	/^c0102562:	e8 03 de ff ff       	call   c010036a <cprintf>$/;"	l
c0102567	obj/kernel.asm	/^c0102567:	83 c4 10             	add    $0x10,%esp$/;"	l
c010256a	obj/kernel.asm	/^c010256a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010256d	obj/kernel.asm	/^c010256d:	0f b7 40 24          	movzwl 0x24(%eax),%eax$/;"	l
c0102571	obj/kernel.asm	/^c0102571:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102574	obj/kernel.asm	/^c0102574:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102577	obj/kernel.asm	/^c0102577:	50                   	push   %eax$/;"	l
c0102578	obj/kernel.asm	/^c0102578:	68 95 3d 11 c0       	push   $0xc0113d95$/;"	l
c010257d	obj/kernel.asm	/^c010257d:	e8 e8 dd ff ff       	call   c010036a <cprintf>$/;"	l
c0102582	obj/kernel.asm	/^c0102582:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102585	obj/kernel.asm	/^c0102585:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102588	obj/kernel.asm	/^c0102588:	0f b7 40 20          	movzwl 0x20(%eax),%eax$/;"	l
c010258c	obj/kernel.asm	/^c010258c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010258f	obj/kernel.asm	/^c010258f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102592	obj/kernel.asm	/^c0102592:	50                   	push   %eax$/;"	l
c0102593	obj/kernel.asm	/^c0102593:	68 a8 3d 11 c0       	push   $0xc0113da8$/;"	l
c0102598	obj/kernel.asm	/^c0102598:	e8 cd dd ff ff       	call   c010036a <cprintf>$/;"	l
c010259d	obj/kernel.asm	/^c010259d:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025a0	obj/kernel.asm	/^c01025a0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025a3	obj/kernel.asm	/^c01025a3:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01025a6	obj/kernel.asm	/^c01025a6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01025a9	obj/kernel.asm	/^c01025a9:	50                   	push   %eax$/;"	l
c01025aa	obj/kernel.asm	/^c01025aa:	e8 16 ff ff ff       	call   c01024c5 <trapname>$/;"	l
c01025af	obj/kernel.asm	/^c01025af:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025b2	obj/kernel.asm	/^c01025b2:	89 c2                	mov    %eax,%edx$/;"	l
c01025b4	obj/kernel.asm	/^c01025b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025b7	obj/kernel.asm	/^c01025b7:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01025ba	obj/kernel.asm	/^c01025ba:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01025bd	obj/kernel.asm	/^c01025bd:	52                   	push   %edx$/;"	l
c01025be	obj/kernel.asm	/^c01025be:	50                   	push   %eax$/;"	l
c01025bf	obj/kernel.asm	/^c01025bf:	68 bb 3d 11 c0       	push   $0xc0113dbb$/;"	l
c01025c4	obj/kernel.asm	/^c01025c4:	e8 a1 dd ff ff       	call   c010036a <cprintf>$/;"	l
c01025c9	obj/kernel.asm	/^c01025c9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025cc	obj/kernel.asm	/^c01025cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025cf	obj/kernel.asm	/^c01025cf:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01025d2	obj/kernel.asm	/^c01025d2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01025d5	obj/kernel.asm	/^c01025d5:	50                   	push   %eax$/;"	l
c01025d6	obj/kernel.asm	/^c01025d6:	68 cd 3d 11 c0       	push   $0xc0113dcd$/;"	l
c01025db	obj/kernel.asm	/^c01025db:	e8 8a dd ff ff       	call   c010036a <cprintf>$/;"	l
c01025e0	obj/kernel.asm	/^c01025e0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025e3	obj/kernel.asm	/^c01025e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025e6	obj/kernel.asm	/^c01025e6:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01025e9	obj/kernel.asm	/^c01025e9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01025ec	obj/kernel.asm	/^c01025ec:	50                   	push   %eax$/;"	l
c01025ed	obj/kernel.asm	/^c01025ed:	68 dc 3d 11 c0       	push   $0xc0113ddc$/;"	l
c01025f2	obj/kernel.asm	/^c01025f2:	e8 73 dd ff ff       	call   c010036a <cprintf>$/;"	l
c01025f7	obj/kernel.asm	/^c01025f7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025fa	obj/kernel.asm	/^c01025fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025fd	obj/kernel.asm	/^c01025fd:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c0102601	obj/kernel.asm	/^c0102601:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102604	obj/kernel.asm	/^c0102604:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102607	obj/kernel.asm	/^c0102607:	50                   	push   %eax$/;"	l
c0102608	obj/kernel.asm	/^c0102608:	68 eb 3d 11 c0       	push   $0xc0113deb$/;"	l
c010260d	obj/kernel.asm	/^c010260d:	e8 58 dd ff ff       	call   c010036a <cprintf>$/;"	l
c0102612	obj/kernel.asm	/^c0102612:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102615	obj/kernel.asm	/^c0102615:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102618	obj/kernel.asm	/^c0102618:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c010261b	obj/kernel.asm	/^c010261b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010261e	obj/kernel.asm	/^c010261e:	50                   	push   %eax$/;"	l
c010261f	obj/kernel.asm	/^c010261f:	68 fe 3d 11 c0       	push   $0xc0113dfe$/;"	l
c0102624	obj/kernel.asm	/^c0102624:	e8 41 dd ff ff       	call   c010036a <cprintf>$/;"	l
c0102629	obj/kernel.asm	/^c0102629:	83 c4 10             	add    $0x10,%esp$/;"	l
c010262c	obj/kernel.asm	/^c010262c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0102633	obj/kernel.asm	/^c0102633:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010263a	obj/kernel.asm	/^c010263a:	eb 3f                	jmp    c010267b <print_trapframe+0x16f>$/;"	l
c010263c	obj/kernel.asm	/^c010263c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010263f	obj/kernel.asm	/^c010263f:	8b 50 40             	mov    0x40(%eax),%edx$/;"	l
c0102642	obj/kernel.asm	/^c0102642:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0102645	obj/kernel.asm	/^c0102645:	21 d0                	and    %edx,%eax$/;"	l
c0102647	obj/kernel.asm	/^c0102647:	85 c0                	test   %eax,%eax$/;"	l
c0102649	obj/kernel.asm	/^c0102649:	74 29                	je     c0102674 <print_trapframe+0x168>$/;"	l
c010264b	obj/kernel.asm	/^c010264b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010264e	obj/kernel.asm	/^c010264e:	8b 04 85 00 c6 14 c0 	mov    -0x3feb3a00(,%eax,4),%eax$/;"	l
c0102655	obj/kernel.asm	/^c0102655:	85 c0                	test   %eax,%eax$/;"	l
c0102657	obj/kernel.asm	/^c0102657:	74 1b                	je     c0102674 <print_trapframe+0x168>$/;"	l
c0102659	obj/kernel.asm	/^c0102659:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010265c	obj/kernel.asm	/^c010265c:	8b 04 85 00 c6 14 c0 	mov    -0x3feb3a00(,%eax,4),%eax$/;"	l
c0102663	obj/kernel.asm	/^c0102663:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102666	obj/kernel.asm	/^c0102666:	50                   	push   %eax$/;"	l
c0102667	obj/kernel.asm	/^c0102667:	68 0d 3e 11 c0       	push   $0xc0113e0d$/;"	l
c010266c	obj/kernel.asm	/^c010266c:	e8 f9 dc ff ff       	call   c010036a <cprintf>$/;"	l
c0102671	obj/kernel.asm	/^c0102671:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102674	obj/kernel.asm	/^c0102674:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0102678	obj/kernel.asm	/^c0102678:	d1 65 f0             	shll   -0x10(%ebp)$/;"	d
c010267b	obj/kernel.asm	/^c010267b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010267e	obj/kernel.asm	/^c010267e:	83 f8 17             	cmp    $0x17,%eax$/;"	l
c0102681	obj/kernel.asm	/^c0102681:	76 b9                	jbe    c010263c <print_trapframe+0x130>$/;"	l
c0102683	obj/kernel.asm	/^c0102683:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102686	obj/kernel.asm	/^c0102686:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c0102689	obj/kernel.asm	/^c0102689:	25 00 30 00 00       	and    $0x3000,%eax$/;"	l
c010268e	obj/kernel.asm	/^c010268e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0102691	obj/kernel.asm	/^c0102691:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102694	obj/kernel.asm	/^c0102694:	50                   	push   %eax$/;"	l
c0102695	obj/kernel.asm	/^c0102695:	68 11 3e 11 c0       	push   $0xc0113e11$/;"	l
c010269a	obj/kernel.asm	/^c010269a:	e8 cb dc ff ff       	call   c010036a <cprintf>$/;"	l
c010269f	obj/kernel.asm	/^c010269f:	83 c4 10             	add    $0x10,%esp$/;"	l
c01026a2	obj/kernel.asm	/^c01026a2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01026a5	obj/kernel.asm	/^c01026a5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01026a8	obj/kernel.asm	/^c01026a8:	e8 49 fe ff ff       	call   c01024f6 <trap_in_kernel>$/;"	l
c01026ad	obj/kernel.asm	/^c01026ad:	83 c4 10             	add    $0x10,%esp$/;"	l
c01026b0	obj/kernel.asm	/^c01026b0:	85 c0                	test   %eax,%eax$/;"	l
c01026b2	obj/kernel.asm	/^c01026b2:	75 32                	jne    c01026e6 <print_trapframe+0x1da>$/;"	l
c01026b4	obj/kernel.asm	/^c01026b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026b7	obj/kernel.asm	/^c01026b7:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c01026ba	obj/kernel.asm	/^c01026ba:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01026bd	obj/kernel.asm	/^c01026bd:	50                   	push   %eax$/;"	l
c01026be	obj/kernel.asm	/^c01026be:	68 1a 3e 11 c0       	push   $0xc0113e1a$/;"	l
c01026c3	obj/kernel.asm	/^c01026c3:	e8 a2 dc ff ff       	call   c010036a <cprintf>$/;"	l
c01026c8	obj/kernel.asm	/^c01026c8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01026cb	obj/kernel.asm	/^c01026cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026ce	obj/kernel.asm	/^c01026ce:	0f b7 40 48          	movzwl 0x48(%eax),%eax$/;"	l
c01026d2	obj/kernel.asm	/^c01026d2:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01026d5	obj/kernel.asm	/^c01026d5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01026d8	obj/kernel.asm	/^c01026d8:	50                   	push   %eax$/;"	l
c01026d9	obj/kernel.asm	/^c01026d9:	68 29 3e 11 c0       	push   $0xc0113e29$/;"	l
c01026de	obj/kernel.asm	/^c01026de:	e8 87 dc ff ff       	call   c010036a <cprintf>$/;"	l
c01026e3	obj/kernel.asm	/^c01026e3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01026e6	obj/kernel.asm	/^c01026e6:	c9                   	leave  $/;"	l
c01026e7	obj/kernel.asm	/^c01026e7:	c3                   	ret    $/;"	l
c01026e8	obj/kernel.asm	/^c01026e8 <print_regs>:$/;"	l
c01026e8	obj/kernel.asm	/^c01026e8:	55                   	push   %ebp$/;"	l
c01026e9	obj/kernel.asm	/^c01026e9:	89 e5                	mov    %esp,%ebp$/;"	l
c01026eb	obj/kernel.asm	/^c01026eb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01026ee	obj/kernel.asm	/^c01026ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026f1	obj/kernel.asm	/^c01026f1:	8b 00                	mov    (%eax),%eax$/;"	l
c01026f3	obj/kernel.asm	/^c01026f3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01026f6	obj/kernel.asm	/^c01026f6:	50                   	push   %eax$/;"	l
c01026f7	obj/kernel.asm	/^c01026f7:	68 3c 3e 11 c0       	push   $0xc0113e3c$/;"	l
c01026fc	obj/kernel.asm	/^c01026fc:	e8 69 dc ff ff       	call   c010036a <cprintf>$/;"	l
c0102701	obj/kernel.asm	/^c0102701:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102704	obj/kernel.asm	/^c0102704:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102707	obj/kernel.asm	/^c0102707:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010270a	obj/kernel.asm	/^c010270a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010270d	obj/kernel.asm	/^c010270d:	50                   	push   %eax$/;"	l
c010270e	obj/kernel.asm	/^c010270e:	68 4b 3e 11 c0       	push   $0xc0113e4b$/;"	l
c0102713	obj/kernel.asm	/^c0102713:	e8 52 dc ff ff       	call   c010036a <cprintf>$/;"	l
c0102718	obj/kernel.asm	/^c0102718:	83 c4 10             	add    $0x10,%esp$/;"	l
c010271b	obj/kernel.asm	/^c010271b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010271e	obj/kernel.asm	/^c010271e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0102721	obj/kernel.asm	/^c0102721:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102724	obj/kernel.asm	/^c0102724:	50                   	push   %eax$/;"	l
c0102725	obj/kernel.asm	/^c0102725:	68 5a 3e 11 c0       	push   $0xc0113e5a$/;"	l
c010272a	obj/kernel.asm	/^c010272a:	e8 3b dc ff ff       	call   c010036a <cprintf>$/;"	l
c010272f	obj/kernel.asm	/^c010272f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102732	obj/kernel.asm	/^c0102732:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102735	obj/kernel.asm	/^c0102735:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0102738	obj/kernel.asm	/^c0102738:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010273b	obj/kernel.asm	/^c010273b:	50                   	push   %eax$/;"	l
c010273c	obj/kernel.asm	/^c010273c:	68 69 3e 11 c0       	push   $0xc0113e69$/;"	l
c0102741	obj/kernel.asm	/^c0102741:	e8 24 dc ff ff       	call   c010036a <cprintf>$/;"	l
c0102746	obj/kernel.asm	/^c0102746:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102749	obj/kernel.asm	/^c0102749:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010274c	obj/kernel.asm	/^c010274c:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010274f	obj/kernel.asm	/^c010274f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102752	obj/kernel.asm	/^c0102752:	50                   	push   %eax$/;"	l
c0102753	obj/kernel.asm	/^c0102753:	68 78 3e 11 c0       	push   $0xc0113e78$/;"	l
c0102758	obj/kernel.asm	/^c0102758:	e8 0d dc ff ff       	call   c010036a <cprintf>$/;"	l
c010275d	obj/kernel.asm	/^c010275d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102760	obj/kernel.asm	/^c0102760:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102763	obj/kernel.asm	/^c0102763:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0102766	obj/kernel.asm	/^c0102766:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102769	obj/kernel.asm	/^c0102769:	50                   	push   %eax$/;"	l
c010276a	obj/kernel.asm	/^c010276a:	68 87 3e 11 c0       	push   $0xc0113e87$/;"	l
c010276f	obj/kernel.asm	/^c010276f:	e8 f6 db ff ff       	call   c010036a <cprintf>$/;"	l
c0102774	obj/kernel.asm	/^c0102774:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102777	obj/kernel.asm	/^c0102777:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010277a	obj/kernel.asm	/^c010277a:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010277d	obj/kernel.asm	/^c010277d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102780	obj/kernel.asm	/^c0102780:	50                   	push   %eax$/;"	l
c0102781	obj/kernel.asm	/^c0102781:	68 96 3e 11 c0       	push   $0xc0113e96$/;"	l
c0102786	obj/kernel.asm	/^c0102786:	e8 df db ff ff       	call   c010036a <cprintf>$/;"	l
c010278b	obj/kernel.asm	/^c010278b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010278e	obj/kernel.asm	/^c010278e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102791	obj/kernel.asm	/^c0102791:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0102794	obj/kernel.asm	/^c0102794:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102797	obj/kernel.asm	/^c0102797:	50                   	push   %eax$/;"	l
c0102798	obj/kernel.asm	/^c0102798:	68 a5 3e 11 c0       	push   $0xc0113ea5$/;"	l
c010279d	obj/kernel.asm	/^c010279d:	e8 c8 db ff ff       	call   c010036a <cprintf>$/;"	l
c01027a2	obj/kernel.asm	/^c01027a2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01027a5	obj/kernel.asm	/^c01027a5:	c9                   	leave  $/;"	l
c01027a6	obj/kernel.asm	/^c01027a6:	c3                   	ret    $/;"	l
c01027a7	obj/kernel.asm	/^c01027a7 <print_pgfault>:$/;"	l
c01027a7	obj/kernel.asm	/^c01027a7:	55                   	push   %ebp$/;"	l
c01027a8	obj/kernel.asm	/^c01027a8:	89 e5                	mov    %esp,%ebp$/;"	l
c01027aa	obj/kernel.asm	/^c01027aa:	53                   	push   %ebx$/;"	l
c01027ab	obj/kernel.asm	/^c01027ab:	83 ec 14             	sub    $0x14,%esp$/;"	l
c01027ae	obj/kernel.asm	/^c01027ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01027b1	obj/kernel.asm	/^c01027b1:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01027b4	obj/kernel.asm	/^c01027b4:	83 e0 01             	and    $0x1,%eax$/;"	l
c01027b7	obj/kernel.asm	/^c01027b7:	85 c0                	test   %eax,%eax$/;"	l
c01027b9	obj/kernel.asm	/^c01027b9:	74 07                	je     c01027c2 <print_pgfault+0x1b>$/;"	l
c01027bb	obj/kernel.asm	/^c01027bb:	bb b4 3e 11 c0       	mov    $0xc0113eb4,%ebx$/;"	l
c01027c0	obj/kernel.asm	/^c01027c0:	eb 05                	jmp    c01027c7 <print_pgfault+0x20>$/;"	l
c01027c2	obj/kernel.asm	/^c01027c2:	bb c5 3e 11 c0       	mov    $0xc0113ec5,%ebx$/;"	l
c01027c7	obj/kernel.asm	/^c01027c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01027ca	obj/kernel.asm	/^c01027ca:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01027cd	obj/kernel.asm	/^c01027cd:	83 e0 02             	and    $0x2,%eax$/;"	l
c01027d0	obj/kernel.asm	/^c01027d0:	85 c0                	test   %eax,%eax$/;"	l
c01027d2	obj/kernel.asm	/^c01027d2:	74 07                	je     c01027db <print_pgfault+0x34>$/;"	l
c01027d4	obj/kernel.asm	/^c01027d4:	b9 57 00 00 00       	mov    $0x57,%ecx$/;"	l
c01027d9	obj/kernel.asm	/^c01027d9:	eb 05                	jmp    c01027e0 <print_pgfault+0x39>$/;"	l
c01027db	obj/kernel.asm	/^c01027db:	b9 52 00 00 00       	mov    $0x52,%ecx$/;"	l
c01027e0	obj/kernel.asm	/^c01027e0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01027e3	obj/kernel.asm	/^c01027e3:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01027e6	obj/kernel.asm	/^c01027e6:	83 e0 04             	and    $0x4,%eax$/;"	l
c01027e9	obj/kernel.asm	/^c01027e9:	85 c0                	test   %eax,%eax$/;"	l
c01027eb	obj/kernel.asm	/^c01027eb:	74 07                	je     c01027f4 <print_pgfault+0x4d>$/;"	l
c01027ed	obj/kernel.asm	/^c01027ed:	ba 55 00 00 00       	mov    $0x55,%edx$/;"	l
c01027f2	obj/kernel.asm	/^c01027f2:	eb 05                	jmp    c01027f9 <print_pgfault+0x52>$/;"	l
c01027f4	obj/kernel.asm	/^c01027f4:	ba 4b 00 00 00       	mov    $0x4b,%edx$/;"	l
c01027f9	obj/kernel.asm	/^c01027f9:	0f 20 d0             	mov    %cr2,%eax$/;"	l
c01027fc	obj/kernel.asm	/^c01027fc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01027ff	obj/kernel.asm	/^c01027ff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102802	obj/kernel.asm	/^c0102802:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102805	obj/kernel.asm	/^c0102805:	53                   	push   %ebx$/;"	l
c0102806	obj/kernel.asm	/^c0102806:	51                   	push   %ecx$/;"	l
c0102807	obj/kernel.asm	/^c0102807:	52                   	push   %edx$/;"	l
c0102808	obj/kernel.asm	/^c0102808:	50                   	push   %eax$/;"	l
c0102809	obj/kernel.asm	/^c0102809:	68 d4 3e 11 c0       	push   $0xc0113ed4$/;"	l
c010280e	obj/kernel.asm	/^c010280e:	e8 57 db ff ff       	call   c010036a <cprintf>$/;"	l
c0102813	obj/kernel.asm	/^c0102813:	83 c4 20             	add    $0x20,%esp$/;"	l
c0102816	obj/kernel.asm	/^c0102816:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0102819	obj/kernel.asm	/^c0102819:	c9                   	leave  $/;"	l
c010281a	obj/kernel.asm	/^c010281a:	c3                   	ret    $/;"	l
c010281b	obj/kernel.asm	/^c010281b <pgfault_handler>:$/;"	l
c010281b	obj/kernel.asm	/^c010281b:	55                   	push   %ebp$/;"	l
c010281c	obj/kernel.asm	/^c010281c:	89 e5                	mov    %esp,%ebp$/;"	l
c010281e	obj/kernel.asm	/^c010281e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102821	obj/kernel.asm	/^c0102821:	a1 1c 12 15 c0       	mov    0xc015121c,%eax$/;"	l
c0102826	obj/kernel.asm	/^c0102826:	85 c0                	test   %eax,%eax$/;"	l
c0102828	obj/kernel.asm	/^c0102828:	74 0e                	je     c0102838 <pgfault_handler+0x1d>$/;"	l
c010282a	obj/kernel.asm	/^c010282a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010282d	obj/kernel.asm	/^c010282d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102830	obj/kernel.asm	/^c0102830:	e8 72 ff ff ff       	call   c01027a7 <print_pgfault>$/;"	l
c0102835	obj/kernel.asm	/^c0102835:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102838	obj/kernel.asm	/^c0102838:	a1 1c 12 15 c0       	mov    0xc015121c,%eax$/;"	l
c010283d	obj/kernel.asm	/^c010283d:	85 c0                	test   %eax,%eax$/;"	l
c010283f	obj/kernel.asm	/^c010283f:	74 32                	je     c0102873 <pgfault_handler+0x58>$/;"	l
c0102841	obj/kernel.asm	/^c0102841:	8b 15 88 e0 14 c0    	mov    0xc014e088,%edx$/;"	l
c0102847	obj/kernel.asm	/^c0102847:	a1 80 e0 14 c0       	mov    0xc014e080,%eax$/;"	l
c010284c	obj/kernel.asm	/^c010284c:	39 c2                	cmp    %eax,%edx$/;"	l
c010284e	obj/kernel.asm	/^c010284e:	74 19                	je     c0102869 <pgfault_handler+0x4e>$/;"	l
c0102850	obj/kernel.asm	/^c0102850:	68 f7 3e 11 c0       	push   $0xc0113ef7$/;"	l
c0102855	obj/kernel.asm	/^c0102855:	68 0b 3f 11 c0       	push   $0xc0113f0b$/;"	l
c010285a	obj/kernel.asm	/^c010285a:	68 bc 00 00 00       	push   $0xbc$/;"	l
c010285f	obj/kernel.asm	/^c010285f:	68 20 3f 11 c0       	push   $0xc0113f20$/;"	l
c0102864	obj/kernel.asm	/^c0102864:	e8 66 dc ff ff       	call   c01004cf <__panic>$/;"	l
c0102869	obj/kernel.asm	/^c0102869:	a1 1c 12 15 c0       	mov    0xc015121c,%eax$/;"	l
c010286e	obj/kernel.asm	/^c010286e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102871	obj/kernel.asm	/^c0102871:	eb 47                	jmp    c01028ba <pgfault_handler+0x9f>$/;"	l
c0102873	obj/kernel.asm	/^c0102873:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c0102878	obj/kernel.asm	/^c0102878:	85 c0                	test   %eax,%eax$/;"	l
c010287a	obj/kernel.asm	/^c010287a:	75 33                	jne    c01028af <pgfault_handler+0x94>$/;"	l
c010287c	obj/kernel.asm	/^c010287c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010287f	obj/kernel.asm	/^c010287f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102882	obj/kernel.asm	/^c0102882:	e8 85 fc ff ff       	call   c010250c <print_trapframe>$/;"	l
c0102887	obj/kernel.asm	/^c0102887:	83 c4 10             	add    $0x10,%esp$/;"	l
c010288a	obj/kernel.asm	/^c010288a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010288d	obj/kernel.asm	/^c010288d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102890	obj/kernel.asm	/^c0102890:	e8 12 ff ff ff       	call   c01027a7 <print_pgfault>$/;"	l
c0102895	obj/kernel.asm	/^c0102895:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102898	obj/kernel.asm	/^c0102898:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010289b	obj/kernel.asm	/^c010289b:	68 31 3f 11 c0       	push   $0xc0113f31$/;"	l
c01028a0	obj/kernel.asm	/^c01028a0:	68 c3 00 00 00       	push   $0xc3$/;"	l
c01028a5	obj/kernel.asm	/^c01028a5:	68 20 3f 11 c0       	push   $0xc0113f20$/;"	l
c01028aa	obj/kernel.asm	/^c01028aa:	e8 20 dc ff ff       	call   c01004cf <__panic>$/;"	l
c01028af	obj/kernel.asm	/^c01028af:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c01028b4	obj/kernel.asm	/^c01028b4:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01028b7	obj/kernel.asm	/^c01028b7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01028ba	obj/kernel.asm	/^c01028ba:	0f 20 d0             	mov    %cr2,%eax$/;"	l
c01028bd	obj/kernel.asm	/^c01028bd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01028c0	obj/kernel.asm	/^c01028c0:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01028c3	obj/kernel.asm	/^c01028c3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01028c6	obj/kernel.asm	/^c01028c6:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01028c9	obj/kernel.asm	/^c01028c9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01028cc	obj/kernel.asm	/^c01028cc:	52                   	push   %edx$/;"	l
c01028cd	obj/kernel.asm	/^c01028cd:	50                   	push   %eax$/;"	l
c01028ce	obj/kernel.asm	/^c01028ce:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01028d1	obj/kernel.asm	/^c01028d1:	e8 f4 36 00 00       	call   c0105fca <do_pgfault>$/;"	l
c01028d6	obj/kernel.asm	/^c01028d6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01028d9	obj/kernel.asm	/^c01028d9:	c9                   	leave  $/;"	l
c01028da	obj/kernel.asm	/^c01028da:	c3                   	ret    $/;"	l
c01028db	obj/kernel.asm	/^c01028db <trap_dispatch>:$/;"	l
c01028db	obj/kernel.asm	/^c01028db:	55                   	push   %ebp$/;"	l
c01028dc	obj/kernel.asm	/^c01028dc:	89 e5                	mov    %esp,%ebp$/;"	l
c01028de	obj/kernel.asm	/^c01028de:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01028e1	obj/kernel.asm	/^c01028e1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01028e8	obj/kernel.asm	/^c01028e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01028eb	obj/kernel.asm	/^c01028eb:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01028ee	obj/kernel.asm	/^c01028ee:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
c01028f1	obj/kernel.asm	/^c01028f1:	77 38                	ja     c010292b <trap_dispatch+0x50>$/;"	l
c01028f3	obj/kernel.asm	/^c01028f3:	83 f8 2e             	cmp    $0x2e,%eax$/;"	l
c01028f6	obj/kernel.asm	/^c01028f6:	0f 83 0e 02 00 00    	jae    c0102b0a <trap_dispatch+0x22f>$/;"	l
c01028fc	obj/kernel.asm	/^c01028fc:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c01028ff	obj/kernel.asm	/^c01028ff:	0f 84 ec 00 00 00    	je     c01029f1 <trap_dispatch+0x116>$/;"	l
c0102905	obj/kernel.asm	/^c0102905:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c0102908	obj/kernel.asm	/^c0102908:	77 0a                	ja     c0102914 <trap_dispatch+0x39>$/;"	l
c010290a	obj/kernel.asm	/^c010290a:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
c010290d	obj/kernel.asm	/^c010290d:	74 3e                	je     c010294d <trap_dispatch+0x72>$/;"	l
c010290f	obj/kernel.asm	/^c010290f:	e9 ab 01 00 00       	jmp    c0102abf <trap_dispatch+0x1e4>$/;"	l
c0102914	obj/kernel.asm	/^c0102914:	83 f8 21             	cmp    $0x21,%eax$/;"	l
c0102917	obj/kernel.asm	/^c0102917:	0f 84 eb 00 00 00    	je     c0102a08 <trap_dispatch+0x12d>$/;"	l
c010291d	obj/kernel.asm	/^c010291d:	83 f8 24             	cmp    $0x24,%eax$/;"	l
c0102920	obj/kernel.asm	/^c0102920:	0f 84 e2 00 00 00    	je     c0102a08 <trap_dispatch+0x12d>$/;"	l
c0102926	obj/kernel.asm	/^c0102926:	e9 94 01 00 00       	jmp    c0102abf <trap_dispatch+0x1e4>$/;"	l
c010292b	obj/kernel.asm	/^c010292b:	83 f8 78             	cmp    $0x78,%eax$/;"	l
c010292e	obj/kernel.asm	/^c010292e:	0f 82 8b 01 00 00    	jb     c0102abf <trap_dispatch+0x1e4>$/;"	l
c0102934	obj/kernel.asm	/^c0102934:	83 f8 79             	cmp    $0x79,%eax$/;"	l
c0102937	obj/kernel.asm	/^c0102937:	0f 86 e8 00 00 00    	jbe    c0102a25 <trap_dispatch+0x14a>$/;"	l
c010293d	obj/kernel.asm	/^c010293d:	3d 80 00 00 00       	cmp    $0x80,%eax$/;"	l
c0102942	obj/kernel.asm	/^c0102942:	0f 84 9f 00 00 00    	je     c01029e7 <trap_dispatch+0x10c>$/;"	l
c0102948	obj/kernel.asm	/^c0102948:	e9 72 01 00 00       	jmp    c0102abf <trap_dispatch+0x1e4>$/;"	l
c010294d	obj/kernel.asm	/^c010294d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102950	obj/kernel.asm	/^c0102950:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102953	obj/kernel.asm	/^c0102953:	e8 c3 fe ff ff       	call   c010281b <pgfault_handler>$/;"	l
c0102958	obj/kernel.asm	/^c0102958:	83 c4 10             	add    $0x10,%esp$/;"	l
c010295b	obj/kernel.asm	/^c010295b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010295e	obj/kernel.asm	/^c010295e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0102962	obj/kernel.asm	/^c0102962:	74 7e                	je     c01029e2 <trap_dispatch+0x107>$/;"	l
c0102964	obj/kernel.asm	/^c0102964:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102967	obj/kernel.asm	/^c0102967:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010296a	obj/kernel.asm	/^c010296a:	e8 9d fb ff ff       	call   c010250c <print_trapframe>$/;"	l
c010296f	obj/kernel.asm	/^c010296f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102972	obj/kernel.asm	/^c0102972:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c0102977	obj/kernel.asm	/^c0102977:	85 c0                	test   %eax,%eax$/;"	l
c0102979	obj/kernel.asm	/^c0102979:	75 17                	jne    c0102992 <trap_dispatch+0xb7>$/;"	l
c010297b	obj/kernel.asm	/^c010297b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010297e	obj/kernel.asm	/^c010297e:	68 48 3f 11 c0       	push   $0xc0113f48$/;"	l
c0102983	obj/kernel.asm	/^c0102983:	68 d8 00 00 00       	push   $0xd8$/;"	l
c0102988	obj/kernel.asm	/^c0102988:	68 20 3f 11 c0       	push   $0xc0113f20$/;"	l
c010298d	obj/kernel.asm	/^c010298d:	e8 3d db ff ff       	call   c01004cf <__panic>$/;"	l
c0102992	obj/kernel.asm	/^c0102992:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102995	obj/kernel.asm	/^c0102995:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102998	obj/kernel.asm	/^c0102998:	e8 59 fb ff ff       	call   c01024f6 <trap_in_kernel>$/;"	l
c010299d	obj/kernel.asm	/^c010299d:	83 c4 10             	add    $0x10,%esp$/;"	l
c01029a0	obj/kernel.asm	/^c01029a0:	85 c0                	test   %eax,%eax$/;"	l
c01029a2	obj/kernel.asm	/^c01029a2:	74 17                	je     c01029bb <trap_dispatch+0xe0>$/;"	l
c01029a4	obj/kernel.asm	/^c01029a4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01029a7	obj/kernel.asm	/^c01029a7:	68 68 3f 11 c0       	push   $0xc0113f68$/;"	l
c01029ac	obj/kernel.asm	/^c01029ac:	68 dc 00 00 00       	push   $0xdc$/;"	l
c01029b1	obj/kernel.asm	/^c01029b1:	68 20 3f 11 c0       	push   $0xc0113f20$/;"	l
c01029b6	obj/kernel.asm	/^c01029b6:	e8 14 db ff ff       	call   c01004cf <__panic>$/;"	l
c01029bb	obj/kernel.asm	/^c01029bb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01029be	obj/kernel.asm	/^c01029be:	68 96 3f 11 c0       	push   $0xc0113f96$/;"	l
c01029c3	obj/kernel.asm	/^c01029c3:	e8 a2 d9 ff ff       	call   c010036a <cprintf>$/;"	l
c01029c8	obj/kernel.asm	/^c01029c8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01029cb	obj/kernel.asm	/^c01029cb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01029ce	obj/kernel.asm	/^c01029ce:	68 ac 3f 11 c0       	push   $0xc0113fac$/;"	l
c01029d3	obj/kernel.asm	/^c01029d3:	68 df 00 00 00       	push   $0xdf$/;"	l
c01029d8	obj/kernel.asm	/^c01029d8:	68 20 3f 11 c0       	push   $0xc0113f20$/;"	l
c01029dd	obj/kernel.asm	/^c01029dd:	e8 ed da ff ff       	call   c01004cf <__panic>$/;"	l
c01029e2	obj/kernel.asm	/^c01029e2:	e9 24 01 00 00       	jmp    c0102b0b <trap_dispatch+0x230>$/;"	l
c01029e7	obj/kernel.asm	/^c01029e7:	e8 e9 af 00 00       	call   c010d9d5 <syscall>$/;"	l
c01029ec	obj/kernel.asm	/^c01029ec:	e9 1a 01 00 00       	jmp    c0102b0b <trap_dispatch+0x230>$/;"	l
c01029f1	obj/kernel.asm	/^c01029f1:	a1 a0 11 15 c0       	mov    0xc01511a0,%eax$/;"	l
c01029f6	obj/kernel.asm	/^c01029f6:	83 c0 01             	add    $0x1,%eax$/;"	l
c01029f9	obj/kernel.asm	/^c01029f9:	a3 a0 11 15 c0       	mov    %eax,0xc01511a0$/;"	l
c01029fe	obj/kernel.asm	/^c01029fe:	e8 31 a8 00 00       	call   c010d234 <run_timer_list>$/;"	l
c0102a03	obj/kernel.asm	/^c0102a03:	e9 03 01 00 00       	jmp    c0102b0b <trap_dispatch+0x230>$/;"	l
c0102a08	obj/kernel.asm	/^c0102a08:	e8 57 f5 ff ff       	call   c0101f64 <cons_getc>$/;"	l
c0102a0d	obj/kernel.asm	/^c0102a0d:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0102a10	obj/kernel.asm	/^c0102a10:	0f be 45 f3          	movsbl -0xd(%ebp),%eax$/;"	l
c0102a14	obj/kernel.asm	/^c0102a14:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102a17	obj/kernel.asm	/^c0102a17:	50                   	push   %eax$/;"	l
c0102a18	obj/kernel.asm	/^c0102a18:	e8 f9 c7 00 00       	call   c010f216 <dev_stdin_write>$/;"	l
c0102a1d	obj/kernel.asm	/^c0102a1d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102a20	obj/kernel.asm	/^c0102a20:	e9 e6 00 00 00       	jmp    c0102b0b <trap_dispatch+0x230>$/;"	l
c0102a25	obj/kernel.asm	/^c0102a25:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102a28	obj/kernel.asm	/^c0102a28:	68 d5 3f 11 c0       	push   $0xc0113fd5$/;"	l
c0102a2d	obj/kernel.asm	/^c0102a2d:	e8 38 d9 ff ff       	call   c010036a <cprintf>$/;"	l
c0102a32	obj/kernel.asm	/^c0102a32:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102a35	obj/kernel.asm	/^c0102a35:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a38	obj/kernel.asm	/^c0102a38:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c0102a3c	obj/kernel.asm	/^c0102a3c:	66 83 f8 08          	cmp    $0x8,%ax$/;"	l
c0102a40	obj/kernel.asm	/^c0102a40:	74 7b                	je     c0102abd <trap_dispatch+0x1e2>$/;"	l
c0102a42	obj/kernel.asm	/^c0102a42:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a45	obj/kernel.asm	/^c0102a45:	66 c7 40 3c 08 00    	movw   $0x8,0x3c(%eax)$/;"	l
c0102a4b	obj/kernel.asm	/^c0102a4b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a4e	obj/kernel.asm	/^c0102a4e:	66 c7 40 2c 10 00    	movw   $0x10,0x2c(%eax)$/;"	l
c0102a54	obj/kernel.asm	/^c0102a54:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a57	obj/kernel.asm	/^c0102a57:	66 c7 40 48 10 00    	movw   $0x10,0x48(%eax)$/;"	l
c0102a5d	obj/kernel.asm	/^c0102a5d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a60	obj/kernel.asm	/^c0102a60:	66 c7 40 28 10 00    	movw   $0x10,0x28(%eax)$/;"	l
c0102a66	obj/kernel.asm	/^c0102a66:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a69	obj/kernel.asm	/^c0102a69:	66 c7 40 24 10 00    	movw   $0x10,0x24(%eax)$/;"	l
c0102a6f	obj/kernel.asm	/^c0102a6f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a72	obj/kernel.asm	/^c0102a72:	66 c7 40 20 10 00    	movw   $0x10,0x20(%eax)$/;"	l
c0102a78	obj/kernel.asm	/^c0102a78:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a7b	obj/kernel.asm	/^c0102a7b:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c0102a7e	obj/kernel.asm	/^c0102a7e:	80 e4 cf             	and    $0xcf,%ah$/;"	l
c0102a81	obj/kernel.asm	/^c0102a81:	89 c2                	mov    %eax,%edx$/;"	l
c0102a83	obj/kernel.asm	/^c0102a83:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a86	obj/kernel.asm	/^c0102a86:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c0102a89	obj/kernel.asm	/^c0102a89:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a8c	obj/kernel.asm	/^c0102a8c:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c0102a8f	obj/kernel.asm	/^c0102a8f:	83 e8 44             	sub    $0x44,%eax$/;"	l
c0102a92	obj/kernel.asm	/^c0102a92:	a3 0c 12 15 c0       	mov    %eax,0xc015120c$/;"	l
c0102a97	obj/kernel.asm	/^c0102a97:	a1 0c 12 15 c0       	mov    0xc015120c,%eax$/;"	l
c0102a9c	obj/kernel.asm	/^c0102a9c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0102a9f	obj/kernel.asm	/^c0102a9f:	6a 44                	push   $0x44$/;"	l
c0102aa1	obj/kernel.asm	/^c0102aa1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102aa4	obj/kernel.asm	/^c0102aa4:	50                   	push   %eax$/;"	l
c0102aa5	obj/kernel.asm	/^c0102aa5:	e8 82 05 01 00       	call   c011302c <memmove>$/;"	l
c0102aaa	obj/kernel.asm	/^c0102aaa:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102aad	obj/kernel.asm	/^c0102aad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102ab0	obj/kernel.asm	/^c0102ab0:	83 e8 04             	sub    $0x4,%eax$/;"	l
c0102ab3	obj/kernel.asm	/^c0102ab3:	8b 15 0c 12 15 c0    	mov    0xc015120c,%edx$/;"	l
c0102ab9	obj/kernel.asm	/^c0102ab9:	89 10                	mov    %edx,(%eax)$/;"	l
c0102abb	obj/kernel.asm	/^c0102abb:	eb 4e                	jmp    c0102b0b <trap_dispatch+0x230>$/;"	l
c0102abd	obj/kernel.asm	/^c0102abd:	eb 4c                	jmp    c0102b0b <trap_dispatch+0x230>$/;"	l
c0102abf	obj/kernel.asm	/^c0102abf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102ac2	obj/kernel.asm	/^c0102ac2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102ac5	obj/kernel.asm	/^c0102ac5:	e8 42 fa ff ff       	call   c010250c <print_trapframe>$/;"	l
c0102aca	obj/kernel.asm	/^c0102aca:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102acd	obj/kernel.asm	/^c0102acd:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c0102ad2	obj/kernel.asm	/^c0102ad2:	85 c0                	test   %eax,%eax$/;"	l
c0102ad4	obj/kernel.asm	/^c0102ad4:	74 1d                	je     c0102af3 <trap_dispatch+0x218>$/;"	l
c0102ad6	obj/kernel.asm	/^c0102ad6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102ad9	obj/kernel.asm	/^c0102ad9:	68 e3 3f 11 c0       	push   $0xc0113fe3$/;"	l
c0102ade	obj/kernel.asm	/^c0102ade:	e8 87 d8 ff ff       	call   c010036a <cprintf>$/;"	l
c0102ae3	obj/kernel.asm	/^c0102ae3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102ae6	obj/kernel.asm	/^c0102ae6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102ae9	obj/kernel.asm	/^c0102ae9:	6a f7                	push   $0xfffffff7$/;"	l
c0102aeb	obj/kernel.asm	/^c0102aeb:	e8 4b 96 00 00       	call   c010c13b <do_exit>$/;"	l
c0102af0	obj/kernel.asm	/^c0102af0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102af3	obj/kernel.asm	/^c0102af3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0102af6	obj/kernel.asm	/^c0102af6:	68 f4 3f 11 c0       	push   $0xc0113ff4$/;"	l
c0102afb	obj/kernel.asm	/^c0102afb:	68 28 01 00 00       	push   $0x128$/;"	l
c0102b00	obj/kernel.asm	/^c0102b00:	68 20 3f 11 c0       	push   $0xc0113f20$/;"	l
c0102b05	obj/kernel.asm	/^c0102b05:	e8 c5 d9 ff ff       	call   c01004cf <__panic>$/;"	l
c0102b0a	obj/kernel.asm	/^c0102b0a:	90                   	nop$/;"	l
c0102b0b	obj/kernel.asm	/^c0102b0b:	c9                   	leave  $/;"	l
c0102b0c	obj/kernel.asm	/^c0102b0c:	c3                   	ret    $/;"	l
c0102b0d	obj/kernel.asm	/^c0102b0d <trap>:$/;"	l
c0102b0d	obj/kernel.asm	/^c0102b0d:	55                   	push   %ebp$/;"	l
c0102b0e	obj/kernel.asm	/^c0102b0e:	89 e5                	mov    %esp,%ebp$/;"	l
c0102b10	obj/kernel.asm	/^c0102b10:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102b13	obj/kernel.asm	/^c0102b13:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c0102b18	obj/kernel.asm	/^c0102b18:	85 c0                	test   %eax,%eax$/;"	l
c0102b1a	obj/kernel.asm	/^c0102b1a:	75 10                	jne    c0102b2c <trap+0x1f>$/;"	l
c0102b1c	obj/kernel.asm	/^c0102b1c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102b1f	obj/kernel.asm	/^c0102b1f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102b22	obj/kernel.asm	/^c0102b22:	e8 b4 fd ff ff       	call   c01028db <trap_dispatch>$/;"	l
c0102b27	obj/kernel.asm	/^c0102b27:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102b2a	obj/kernel.asm	/^c0102b2a:	eb 73                	jmp    c0102b9f <trap+0x92>$/;"	l
c0102b2c	obj/kernel.asm	/^c0102b2c:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c0102b31	obj/kernel.asm	/^c0102b31:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0102b34	obj/kernel.asm	/^c0102b34:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102b37	obj/kernel.asm	/^c0102b37:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c0102b3c	obj/kernel.asm	/^c0102b3c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0102b3f	obj/kernel.asm	/^c0102b3f:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0102b42	obj/kernel.asm	/^c0102b42:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102b45	obj/kernel.asm	/^c0102b45:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102b48	obj/kernel.asm	/^c0102b48:	e8 a9 f9 ff ff       	call   c01024f6 <trap_in_kernel>$/;"	l
c0102b4d	obj/kernel.asm	/^c0102b4d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102b50	obj/kernel.asm	/^c0102b50:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0102b53	obj/kernel.asm	/^c0102b53:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102b56	obj/kernel.asm	/^c0102b56:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102b59	obj/kernel.asm	/^c0102b59:	e8 7d fd ff ff       	call   c01028db <trap_dispatch>$/;"	l
c0102b5e	obj/kernel.asm	/^c0102b5e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102b61	obj/kernel.asm	/^c0102b61:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c0102b66	obj/kernel.asm	/^c0102b66:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0102b69	obj/kernel.asm	/^c0102b69:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0102b6c	obj/kernel.asm	/^c0102b6c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0102b70	obj/kernel.asm	/^c0102b70:	75 2d                	jne    c0102b9f <trap+0x92>$/;"	l
c0102b72	obj/kernel.asm	/^c0102b72:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c0102b77	obj/kernel.asm	/^c0102b77:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c0102b7a	obj/kernel.asm	/^c0102b7a:	83 e0 01             	and    $0x1,%eax$/;"	l
c0102b7d	obj/kernel.asm	/^c0102b7d:	85 c0                	test   %eax,%eax$/;"	l
c0102b7f	obj/kernel.asm	/^c0102b7f:	74 0d                	je     c0102b8e <trap+0x81>$/;"	l
c0102b81	obj/kernel.asm	/^c0102b81:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102b84	obj/kernel.asm	/^c0102b84:	6a f7                	push   $0xfffffff7$/;"	l
c0102b86	obj/kernel.asm	/^c0102b86:	e8 b0 95 00 00       	call   c010c13b <do_exit>$/;"	l
c0102b8b	obj/kernel.asm	/^c0102b8b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102b8e	obj/kernel.asm	/^c0102b8e:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c0102b93	obj/kernel.asm	/^c0102b93:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0102b96	obj/kernel.asm	/^c0102b96:	85 c0                	test   %eax,%eax$/;"	l
c0102b98	obj/kernel.asm	/^c0102b98:	74 05                	je     c0102b9f <trap+0x92>$/;"	l
c0102b9a	obj/kernel.asm	/^c0102b9a:	e8 11 a4 00 00       	call   c010cfb0 <schedule>$/;"	l
c0102b9f	obj/kernel.asm	/^c0102b9f:	c9                   	leave  $/;"	l
c0102ba0	obj/kernel.asm	/^c0102ba0:	c3                   	ret    $/;"	l
c0102ba1	obj/kernel.asm	/^c0102ba1 <vector0>:$/;"	l
c0102ba1	obj/kernel.asm	/^c0102ba1:	6a 00                	push   $0x0$/;"	l
c0102ba3	obj/kernel.asm	/^c0102ba3:	6a 00                	push   $0x0$/;"	l
c0102ba5	obj/kernel.asm	/^c0102ba5:	e9 67 0a 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102baa	obj/kernel.asm	/^c0102baa <vector1>:$/;"	l
c0102baa	obj/kernel.asm	/^c0102baa:	6a 00                	push   $0x0$/;"	l
c0102bac	obj/kernel.asm	/^c0102bac:	6a 01                	push   $0x1$/;"	l
c0102bae	obj/kernel.asm	/^c0102bae:	e9 5e 0a 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102bb3	obj/kernel.asm	/^c0102bb3 <vector2>:$/;"	l
c0102bb3	obj/kernel.asm	/^c0102bb3:	6a 00                	push   $0x0$/;"	l
c0102bb5	obj/kernel.asm	/^c0102bb5:	6a 02                	push   $0x2$/;"	l
c0102bb7	obj/kernel.asm	/^c0102bb7:	e9 55 0a 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102bbc	obj/kernel.asm	/^c0102bbc <vector3>:$/;"	l
c0102bbc	obj/kernel.asm	/^c0102bbc:	6a 00                	push   $0x0$/;"	l
c0102bbe	obj/kernel.asm	/^c0102bbe:	6a 03                	push   $0x3$/;"	l
c0102bc0	obj/kernel.asm	/^c0102bc0:	e9 4c 0a 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102bc5	obj/kernel.asm	/^c0102bc5 <vector4>:$/;"	l
c0102bc5	obj/kernel.asm	/^c0102bc5:	6a 00                	push   $0x0$/;"	l
c0102bc7	obj/kernel.asm	/^c0102bc7:	6a 04                	push   $0x4$/;"	l
c0102bc9	obj/kernel.asm	/^c0102bc9:	e9 43 0a 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102bce	obj/kernel.asm	/^c0102bce <vector5>:$/;"	l
c0102bce	obj/kernel.asm	/^c0102bce:	6a 00                	push   $0x0$/;"	l
c0102bd0	obj/kernel.asm	/^c0102bd0:	6a 05                	push   $0x5$/;"	l
c0102bd2	obj/kernel.asm	/^c0102bd2:	e9 3a 0a 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102bd7	obj/kernel.asm	/^c0102bd7 <vector6>:$/;"	l
c0102bd7	obj/kernel.asm	/^c0102bd7:	6a 00                	push   $0x0$/;"	l
c0102bd9	obj/kernel.asm	/^c0102bd9:	6a 06                	push   $0x6$/;"	l
c0102bdb	obj/kernel.asm	/^c0102bdb:	e9 31 0a 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102be0	obj/kernel.asm	/^c0102be0 <vector7>:$/;"	l
c0102be0	obj/kernel.asm	/^c0102be0:	6a 00                	push   $0x0$/;"	l
c0102be2	obj/kernel.asm	/^c0102be2:	6a 07                	push   $0x7$/;"	l
c0102be4	obj/kernel.asm	/^c0102be4:	e9 28 0a 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102be9	obj/kernel.asm	/^c0102be9 <vector8>:$/;"	l
c0102be9	obj/kernel.asm	/^c0102be9:	6a 08                	push   $0x8$/;"	l
c0102beb	obj/kernel.asm	/^c0102beb:	e9 21 0a 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102bf0	obj/kernel.asm	/^c0102bf0 <vector9>:$/;"	l
c0102bf0	obj/kernel.asm	/^c0102bf0:	6a 09                	push   $0x9$/;"	l
c0102bf2	obj/kernel.asm	/^c0102bf2:	e9 1a 0a 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102bf7	obj/kernel.asm	/^c0102bf7 <vector10>:$/;"	l
c0102bf7	obj/kernel.asm	/^c0102bf7:	6a 0a                	push   $0xa$/;"	l
c0102bf9	obj/kernel.asm	/^c0102bf9:	e9 13 0a 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102bfe	obj/kernel.asm	/^c0102bfe <vector11>:$/;"	l
c0102bfe	obj/kernel.asm	/^c0102bfe:	6a 0b                	push   $0xb$/;"	l
c0102c00	obj/kernel.asm	/^c0102c00:	e9 0c 0a 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c05	obj/kernel.asm	/^c0102c05 <vector12>:$/;"	l
c0102c05	obj/kernel.asm	/^c0102c05:	6a 0c                	push   $0xc$/;"	l
c0102c07	obj/kernel.asm	/^c0102c07:	e9 05 0a 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c0c	obj/kernel.asm	/^c0102c0c <vector13>:$/;"	l
c0102c0c	obj/kernel.asm	/^c0102c0c:	6a 0d                	push   $0xd$/;"	l
c0102c0e	obj/kernel.asm	/^c0102c0e:	e9 fe 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c13	obj/kernel.asm	/^c0102c13 <vector14>:$/;"	l
c0102c13	obj/kernel.asm	/^c0102c13:	6a 0e                	push   $0xe$/;"	l
c0102c15	obj/kernel.asm	/^c0102c15:	e9 f7 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c1a	obj/kernel.asm	/^c0102c1a <vector15>:$/;"	l
c0102c1a	obj/kernel.asm	/^c0102c1a:	6a 00                	push   $0x0$/;"	l
c0102c1c	obj/kernel.asm	/^c0102c1c:	6a 0f                	push   $0xf$/;"	l
c0102c1e	obj/kernel.asm	/^c0102c1e:	e9 ee 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c23	obj/kernel.asm	/^c0102c23 <vector16>:$/;"	l
c0102c23	obj/kernel.asm	/^c0102c23:	6a 00                	push   $0x0$/;"	l
c0102c25	obj/kernel.asm	/^c0102c25:	6a 10                	push   $0x10$/;"	l
c0102c27	obj/kernel.asm	/^c0102c27:	e9 e5 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c2c	obj/kernel.asm	/^c0102c2c <vector17>:$/;"	l
c0102c2c	obj/kernel.asm	/^c0102c2c:	6a 11                	push   $0x11$/;"	l
c0102c2e	obj/kernel.asm	/^c0102c2e:	e9 de 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c33	obj/kernel.asm	/^c0102c33 <vector18>:$/;"	l
c0102c33	obj/kernel.asm	/^c0102c33:	6a 00                	push   $0x0$/;"	l
c0102c35	obj/kernel.asm	/^c0102c35:	6a 12                	push   $0x12$/;"	l
c0102c37	obj/kernel.asm	/^c0102c37:	e9 d5 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c3c	obj/kernel.asm	/^c0102c3c <vector19>:$/;"	l
c0102c3c	obj/kernel.asm	/^c0102c3c:	6a 00                	push   $0x0$/;"	l
c0102c3e	obj/kernel.asm	/^c0102c3e:	6a 13                	push   $0x13$/;"	l
c0102c40	obj/kernel.asm	/^c0102c40:	e9 cc 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c45	obj/kernel.asm	/^c0102c45 <vector20>:$/;"	l
c0102c45	obj/kernel.asm	/^c0102c45:	6a 00                	push   $0x0$/;"	l
c0102c47	obj/kernel.asm	/^c0102c47:	6a 14                	push   $0x14$/;"	l
c0102c49	obj/kernel.asm	/^c0102c49:	e9 c3 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c4e	obj/kernel.asm	/^c0102c4e <vector21>:$/;"	l
c0102c4e	obj/kernel.asm	/^c0102c4e:	6a 00                	push   $0x0$/;"	l
c0102c50	obj/kernel.asm	/^c0102c50:	6a 15                	push   $0x15$/;"	l
c0102c52	obj/kernel.asm	/^c0102c52:	e9 ba 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c57	obj/kernel.asm	/^c0102c57 <vector22>:$/;"	l
c0102c57	obj/kernel.asm	/^c0102c57:	6a 00                	push   $0x0$/;"	l
c0102c59	obj/kernel.asm	/^c0102c59:	6a 16                	push   $0x16$/;"	l
c0102c5b	obj/kernel.asm	/^c0102c5b:	e9 b1 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c60	obj/kernel.asm	/^c0102c60 <vector23>:$/;"	l
c0102c60	obj/kernel.asm	/^c0102c60:	6a 00                	push   $0x0$/;"	l
c0102c62	obj/kernel.asm	/^c0102c62:	6a 17                	push   $0x17$/;"	l
c0102c64	obj/kernel.asm	/^c0102c64:	e9 a8 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c69	obj/kernel.asm	/^c0102c69 <vector24>:$/;"	l
c0102c69	obj/kernel.asm	/^c0102c69:	6a 00                	push   $0x0$/;"	l
c0102c6b	obj/kernel.asm	/^c0102c6b:	6a 18                	push   $0x18$/;"	l
c0102c6d	obj/kernel.asm	/^c0102c6d:	e9 9f 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c72	obj/kernel.asm	/^c0102c72 <vector25>:$/;"	l
c0102c72	obj/kernel.asm	/^c0102c72:	6a 00                	push   $0x0$/;"	l
c0102c74	obj/kernel.asm	/^c0102c74:	6a 19                	push   $0x19$/;"	l
c0102c76	obj/kernel.asm	/^c0102c76:	e9 96 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c7b	obj/kernel.asm	/^c0102c7b <vector26>:$/;"	l
c0102c7b	obj/kernel.asm	/^c0102c7b:	6a 00                	push   $0x0$/;"	l
c0102c7d	obj/kernel.asm	/^c0102c7d:	6a 1a                	push   $0x1a$/;"	l
c0102c7f	obj/kernel.asm	/^c0102c7f:	e9 8d 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c84	obj/kernel.asm	/^c0102c84 <vector27>:$/;"	l
c0102c84	obj/kernel.asm	/^c0102c84:	6a 00                	push   $0x0$/;"	l
c0102c86	obj/kernel.asm	/^c0102c86:	6a 1b                	push   $0x1b$/;"	l
c0102c88	obj/kernel.asm	/^c0102c88:	e9 84 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c8d	obj/kernel.asm	/^c0102c8d <vector28>:$/;"	l
c0102c8d	obj/kernel.asm	/^c0102c8d:	6a 00                	push   $0x0$/;"	l
c0102c8f	obj/kernel.asm	/^c0102c8f:	6a 1c                	push   $0x1c$/;"	l
c0102c91	obj/kernel.asm	/^c0102c91:	e9 7b 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c96	obj/kernel.asm	/^c0102c96 <vector29>:$/;"	l
c0102c96	obj/kernel.asm	/^c0102c96:	6a 00                	push   $0x0$/;"	l
c0102c98	obj/kernel.asm	/^c0102c98:	6a 1d                	push   $0x1d$/;"	l
c0102c9a	obj/kernel.asm	/^c0102c9a:	e9 72 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102c9f	obj/kernel.asm	/^c0102c9f <vector30>:$/;"	l
c0102c9f	obj/kernel.asm	/^c0102c9f:	6a 00                	push   $0x0$/;"	l
c0102ca1	obj/kernel.asm	/^c0102ca1:	6a 1e                	push   $0x1e$/;"	l
c0102ca3	obj/kernel.asm	/^c0102ca3:	e9 69 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102ca8	obj/kernel.asm	/^c0102ca8 <vector31>:$/;"	l
c0102ca8	obj/kernel.asm	/^c0102ca8:	6a 00                	push   $0x0$/;"	l
c0102caa	obj/kernel.asm	/^c0102caa:	6a 1f                	push   $0x1f$/;"	l
c0102cac	obj/kernel.asm	/^c0102cac:	e9 60 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102cb1	obj/kernel.asm	/^c0102cb1 <vector32>:$/;"	l
c0102cb1	obj/kernel.asm	/^c0102cb1:	6a 00                	push   $0x0$/;"	l
c0102cb3	obj/kernel.asm	/^c0102cb3:	6a 20                	push   $0x20$/;"	l
c0102cb5	obj/kernel.asm	/^c0102cb5:	e9 57 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102cba	obj/kernel.asm	/^c0102cba <vector33>:$/;"	l
c0102cba	obj/kernel.asm	/^c0102cba:	6a 00                	push   $0x0$/;"	l
c0102cbc	obj/kernel.asm	/^c0102cbc:	6a 21                	push   $0x21$/;"	l
c0102cbe	obj/kernel.asm	/^c0102cbe:	e9 4e 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102cc3	obj/kernel.asm	/^c0102cc3 <vector34>:$/;"	l
c0102cc3	obj/kernel.asm	/^c0102cc3:	6a 00                	push   $0x0$/;"	l
c0102cc5	obj/kernel.asm	/^c0102cc5:	6a 22                	push   $0x22$/;"	l
c0102cc7	obj/kernel.asm	/^c0102cc7:	e9 45 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102ccc	obj/kernel.asm	/^c0102ccc <vector35>:$/;"	l
c0102ccc	obj/kernel.asm	/^c0102ccc:	6a 00                	push   $0x0$/;"	l
c0102cce	obj/kernel.asm	/^c0102cce:	6a 23                	push   $0x23$/;"	l
c0102cd0	obj/kernel.asm	/^c0102cd0:	e9 3c 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102cd5	obj/kernel.asm	/^c0102cd5 <vector36>:$/;"	l
c0102cd5	obj/kernel.asm	/^c0102cd5:	6a 00                	push   $0x0$/;"	l
c0102cd7	obj/kernel.asm	/^c0102cd7:	6a 24                	push   $0x24$/;"	l
c0102cd9	obj/kernel.asm	/^c0102cd9:	e9 33 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102cde	obj/kernel.asm	/^c0102cde <vector37>:$/;"	l
c0102cde	obj/kernel.asm	/^c0102cde:	6a 00                	push   $0x0$/;"	l
c0102ce0	obj/kernel.asm	/^c0102ce0:	6a 25                	push   $0x25$/;"	l
c0102ce2	obj/kernel.asm	/^c0102ce2:	e9 2a 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102ce7	obj/kernel.asm	/^c0102ce7 <vector38>:$/;"	l
c0102ce7	obj/kernel.asm	/^c0102ce7:	6a 00                	push   $0x0$/;"	l
c0102ce9	obj/kernel.asm	/^c0102ce9:	6a 26                	push   $0x26$/;"	l
c0102ceb	obj/kernel.asm	/^c0102ceb:	e9 21 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102cf0	obj/kernel.asm	/^c0102cf0 <vector39>:$/;"	l
c0102cf0	obj/kernel.asm	/^c0102cf0:	6a 00                	push   $0x0$/;"	l
c0102cf2	obj/kernel.asm	/^c0102cf2:	6a 27                	push   $0x27$/;"	l
c0102cf4	obj/kernel.asm	/^c0102cf4:	e9 18 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102cf9	obj/kernel.asm	/^c0102cf9 <vector40>:$/;"	l
c0102cf9	obj/kernel.asm	/^c0102cf9:	6a 00                	push   $0x0$/;"	l
c0102cfb	obj/kernel.asm	/^c0102cfb:	6a 28                	push   $0x28$/;"	l
c0102cfd	obj/kernel.asm	/^c0102cfd:	e9 0f 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102d02	obj/kernel.asm	/^c0102d02 <vector41>:$/;"	l
c0102d02	obj/kernel.asm	/^c0102d02:	6a 00                	push   $0x0$/;"	l
c0102d04	obj/kernel.asm	/^c0102d04:	6a 29                	push   $0x29$/;"	l
c0102d06	obj/kernel.asm	/^c0102d06:	e9 06 09 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102d0b	obj/kernel.asm	/^c0102d0b <vector42>:$/;"	l
c0102d0b	obj/kernel.asm	/^c0102d0b:	6a 00                	push   $0x0$/;"	l
c0102d0d	obj/kernel.asm	/^c0102d0d:	6a 2a                	push   $0x2a$/;"	l
c0102d0f	obj/kernel.asm	/^c0102d0f:	e9 fd 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102d14	obj/kernel.asm	/^c0102d14 <vector43>:$/;"	l
c0102d14	obj/kernel.asm	/^c0102d14:	6a 00                	push   $0x0$/;"	l
c0102d16	obj/kernel.asm	/^c0102d16:	6a 2b                	push   $0x2b$/;"	l
c0102d18	obj/kernel.asm	/^c0102d18:	e9 f4 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102d1d	obj/kernel.asm	/^c0102d1d <vector44>:$/;"	l
c0102d1d	obj/kernel.asm	/^c0102d1d:	6a 00                	push   $0x0$/;"	l
c0102d1f	obj/kernel.asm	/^c0102d1f:	6a 2c                	push   $0x2c$/;"	l
c0102d21	obj/kernel.asm	/^c0102d21:	e9 eb 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102d26	obj/kernel.asm	/^c0102d26 <vector45>:$/;"	l
c0102d26	obj/kernel.asm	/^c0102d26:	6a 00                	push   $0x0$/;"	l
c0102d28	obj/kernel.asm	/^c0102d28:	6a 2d                	push   $0x2d$/;"	l
c0102d2a	obj/kernel.asm	/^c0102d2a:	e9 e2 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102d2f	obj/kernel.asm	/^c0102d2f <vector46>:$/;"	l
c0102d2f	obj/kernel.asm	/^c0102d2f:	6a 00                	push   $0x0$/;"	l
c0102d31	obj/kernel.asm	/^c0102d31:	6a 2e                	push   $0x2e$/;"	l
c0102d33	obj/kernel.asm	/^c0102d33:	e9 d9 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102d38	obj/kernel.asm	/^c0102d38 <vector47>:$/;"	l
c0102d38	obj/kernel.asm	/^c0102d38:	6a 00                	push   $0x0$/;"	l
c0102d3a	obj/kernel.asm	/^c0102d3a:	6a 2f                	push   $0x2f$/;"	l
c0102d3c	obj/kernel.asm	/^c0102d3c:	e9 d0 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102d41	obj/kernel.asm	/^c0102d41 <vector48>:$/;"	l
c0102d41	obj/kernel.asm	/^c0102d41:	6a 00                	push   $0x0$/;"	l
c0102d43	obj/kernel.asm	/^c0102d43:	6a 30                	push   $0x30$/;"	l
c0102d45	obj/kernel.asm	/^c0102d45:	e9 c7 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102d4a	obj/kernel.asm	/^c0102d4a <vector49>:$/;"	l
c0102d4a	obj/kernel.asm	/^c0102d4a:	6a 00                	push   $0x0$/;"	l
c0102d4c	obj/kernel.asm	/^c0102d4c:	6a 31                	push   $0x31$/;"	l
c0102d4e	obj/kernel.asm	/^c0102d4e:	e9 be 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102d53	obj/kernel.asm	/^c0102d53 <vector50>:$/;"	l
c0102d53	obj/kernel.asm	/^c0102d53:	6a 00                	push   $0x0$/;"	l
c0102d55	obj/kernel.asm	/^c0102d55:	6a 32                	push   $0x32$/;"	l
c0102d57	obj/kernel.asm	/^c0102d57:	e9 b5 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102d5c	obj/kernel.asm	/^c0102d5c <vector51>:$/;"	l
c0102d5c	obj/kernel.asm	/^c0102d5c:	6a 00                	push   $0x0$/;"	l
c0102d5e	obj/kernel.asm	/^c0102d5e:	6a 33                	push   $0x33$/;"	l
c0102d60	obj/kernel.asm	/^c0102d60:	e9 ac 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102d65	obj/kernel.asm	/^c0102d65 <vector52>:$/;"	l
c0102d65	obj/kernel.asm	/^c0102d65:	6a 00                	push   $0x0$/;"	l
c0102d67	obj/kernel.asm	/^c0102d67:	6a 34                	push   $0x34$/;"	l
c0102d69	obj/kernel.asm	/^c0102d69:	e9 a3 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102d6e	obj/kernel.asm	/^c0102d6e <vector53>:$/;"	l
c0102d6e	obj/kernel.asm	/^c0102d6e:	6a 00                	push   $0x0$/;"	l
c0102d70	obj/kernel.asm	/^c0102d70:	6a 35                	push   $0x35$/;"	l
c0102d72	obj/kernel.asm	/^c0102d72:	e9 9a 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102d77	obj/kernel.asm	/^c0102d77 <vector54>:$/;"	l
c0102d77	obj/kernel.asm	/^c0102d77:	6a 00                	push   $0x0$/;"	l
c0102d79	obj/kernel.asm	/^c0102d79:	6a 36                	push   $0x36$/;"	l
c0102d7b	obj/kernel.asm	/^c0102d7b:	e9 91 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102d80	obj/kernel.asm	/^c0102d80 <vector55>:$/;"	l
c0102d80	obj/kernel.asm	/^c0102d80:	6a 00                	push   $0x0$/;"	l
c0102d82	obj/kernel.asm	/^c0102d82:	6a 37                	push   $0x37$/;"	l
c0102d84	obj/kernel.asm	/^c0102d84:	e9 88 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102d89	obj/kernel.asm	/^c0102d89 <vector56>:$/;"	l
c0102d89	obj/kernel.asm	/^c0102d89:	6a 00                	push   $0x0$/;"	l
c0102d8b	obj/kernel.asm	/^c0102d8b:	6a 38                	push   $0x38$/;"	l
c0102d8d	obj/kernel.asm	/^c0102d8d:	e9 7f 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102d92	obj/kernel.asm	/^c0102d92 <vector57>:$/;"	l
c0102d92	obj/kernel.asm	/^c0102d92:	6a 00                	push   $0x0$/;"	l
c0102d94	obj/kernel.asm	/^c0102d94:	6a 39                	push   $0x39$/;"	l
c0102d96	obj/kernel.asm	/^c0102d96:	e9 76 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102d9b	obj/kernel.asm	/^c0102d9b <vector58>:$/;"	l
c0102d9b	obj/kernel.asm	/^c0102d9b:	6a 00                	push   $0x0$/;"	l
c0102d9d	obj/kernel.asm	/^c0102d9d:	6a 3a                	push   $0x3a$/;"	l
c0102d9f	obj/kernel.asm	/^c0102d9f:	e9 6d 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102da4	obj/kernel.asm	/^c0102da4 <vector59>:$/;"	l
c0102da4	obj/kernel.asm	/^c0102da4:	6a 00                	push   $0x0$/;"	l
c0102da6	obj/kernel.asm	/^c0102da6:	6a 3b                	push   $0x3b$/;"	l
c0102da8	obj/kernel.asm	/^c0102da8:	e9 64 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102dad	obj/kernel.asm	/^c0102dad <vector60>:$/;"	l
c0102dad	obj/kernel.asm	/^c0102dad:	6a 00                	push   $0x0$/;"	l
c0102daf	obj/kernel.asm	/^c0102daf:	6a 3c                	push   $0x3c$/;"	l
c0102db1	obj/kernel.asm	/^c0102db1:	e9 5b 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102db6	obj/kernel.asm	/^c0102db6 <vector61>:$/;"	l
c0102db6	obj/kernel.asm	/^c0102db6:	6a 00                	push   $0x0$/;"	l
c0102db8	obj/kernel.asm	/^c0102db8:	6a 3d                	push   $0x3d$/;"	l
c0102dba	obj/kernel.asm	/^c0102dba:	e9 52 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102dbf	obj/kernel.asm	/^c0102dbf <vector62>:$/;"	l
c0102dbf	obj/kernel.asm	/^c0102dbf:	6a 00                	push   $0x0$/;"	l
c0102dc1	obj/kernel.asm	/^c0102dc1:	6a 3e                	push   $0x3e$/;"	l
c0102dc3	obj/kernel.asm	/^c0102dc3:	e9 49 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102dc8	obj/kernel.asm	/^c0102dc8 <vector63>:$/;"	l
c0102dc8	obj/kernel.asm	/^c0102dc8:	6a 00                	push   $0x0$/;"	l
c0102dca	obj/kernel.asm	/^c0102dca:	6a 3f                	push   $0x3f$/;"	l
c0102dcc	obj/kernel.asm	/^c0102dcc:	e9 40 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102dd1	obj/kernel.asm	/^c0102dd1 <vector64>:$/;"	l
c0102dd1	obj/kernel.asm	/^c0102dd1:	6a 00                	push   $0x0$/;"	l
c0102dd3	obj/kernel.asm	/^c0102dd3:	6a 40                	push   $0x40$/;"	l
c0102dd5	obj/kernel.asm	/^c0102dd5:	e9 37 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102dda	obj/kernel.asm	/^c0102dda <vector65>:$/;"	l
c0102dda	obj/kernel.asm	/^c0102dda:	6a 00                	push   $0x0$/;"	l
c0102ddc	obj/kernel.asm	/^c0102ddc:	6a 41                	push   $0x41$/;"	l
c0102dde	obj/kernel.asm	/^c0102dde:	e9 2e 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102de3	obj/kernel.asm	/^c0102de3 <vector66>:$/;"	l
c0102de3	obj/kernel.asm	/^c0102de3:	6a 00                	push   $0x0$/;"	l
c0102de5	obj/kernel.asm	/^c0102de5:	6a 42                	push   $0x42$/;"	l
c0102de7	obj/kernel.asm	/^c0102de7:	e9 25 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102dec	obj/kernel.asm	/^c0102dec <vector67>:$/;"	l
c0102dec	obj/kernel.asm	/^c0102dec:	6a 00                	push   $0x0$/;"	l
c0102dee	obj/kernel.asm	/^c0102dee:	6a 43                	push   $0x43$/;"	l
c0102df0	obj/kernel.asm	/^c0102df0:	e9 1c 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102df5	obj/kernel.asm	/^c0102df5 <vector68>:$/;"	l
c0102df5	obj/kernel.asm	/^c0102df5:	6a 00                	push   $0x0$/;"	l
c0102df7	obj/kernel.asm	/^c0102df7:	6a 44                	push   $0x44$/;"	l
c0102df9	obj/kernel.asm	/^c0102df9:	e9 13 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102dfe	obj/kernel.asm	/^c0102dfe <vector69>:$/;"	l
c0102dfe	obj/kernel.asm	/^c0102dfe:	6a 00                	push   $0x0$/;"	l
c0102e00	obj/kernel.asm	/^c0102e00:	6a 45                	push   $0x45$/;"	l
c0102e02	obj/kernel.asm	/^c0102e02:	e9 0a 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102e07	obj/kernel.asm	/^c0102e07 <vector70>:$/;"	l
c0102e07	obj/kernel.asm	/^c0102e07:	6a 00                	push   $0x0$/;"	l
c0102e09	obj/kernel.asm	/^c0102e09:	6a 46                	push   $0x46$/;"	l
c0102e0b	obj/kernel.asm	/^c0102e0b:	e9 01 08 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102e10	obj/kernel.asm	/^c0102e10 <vector71>:$/;"	l
c0102e10	obj/kernel.asm	/^c0102e10:	6a 00                	push   $0x0$/;"	l
c0102e12	obj/kernel.asm	/^c0102e12:	6a 47                	push   $0x47$/;"	l
c0102e14	obj/kernel.asm	/^c0102e14:	e9 f8 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102e19	obj/kernel.asm	/^c0102e19 <vector72>:$/;"	l
c0102e19	obj/kernel.asm	/^c0102e19:	6a 00                	push   $0x0$/;"	l
c0102e1b	obj/kernel.asm	/^c0102e1b:	6a 48                	push   $0x48$/;"	l
c0102e1d	obj/kernel.asm	/^c0102e1d:	e9 ef 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102e22	obj/kernel.asm	/^c0102e22 <vector73>:$/;"	l
c0102e22	obj/kernel.asm	/^c0102e22:	6a 00                	push   $0x0$/;"	l
c0102e24	obj/kernel.asm	/^c0102e24:	6a 49                	push   $0x49$/;"	l
c0102e26	obj/kernel.asm	/^c0102e26:	e9 e6 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102e2b	obj/kernel.asm	/^c0102e2b <vector74>:$/;"	l
c0102e2b	obj/kernel.asm	/^c0102e2b:	6a 00                	push   $0x0$/;"	l
c0102e2d	obj/kernel.asm	/^c0102e2d:	6a 4a                	push   $0x4a$/;"	l
c0102e2f	obj/kernel.asm	/^c0102e2f:	e9 dd 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102e34	obj/kernel.asm	/^c0102e34 <vector75>:$/;"	l
c0102e34	obj/kernel.asm	/^c0102e34:	6a 00                	push   $0x0$/;"	l
c0102e36	obj/kernel.asm	/^c0102e36:	6a 4b                	push   $0x4b$/;"	l
c0102e38	obj/kernel.asm	/^c0102e38:	e9 d4 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102e3d	obj/kernel.asm	/^c0102e3d <vector76>:$/;"	l
c0102e3d	obj/kernel.asm	/^c0102e3d:	6a 00                	push   $0x0$/;"	l
c0102e3f	obj/kernel.asm	/^c0102e3f:	6a 4c                	push   $0x4c$/;"	l
c0102e41	obj/kernel.asm	/^c0102e41:	e9 cb 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102e46	obj/kernel.asm	/^c0102e46 <vector77>:$/;"	l
c0102e46	obj/kernel.asm	/^c0102e46:	6a 00                	push   $0x0$/;"	l
c0102e48	obj/kernel.asm	/^c0102e48:	6a 4d                	push   $0x4d$/;"	l
c0102e4a	obj/kernel.asm	/^c0102e4a:	e9 c2 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102e4f	obj/kernel.asm	/^c0102e4f <vector78>:$/;"	l
c0102e4f	obj/kernel.asm	/^c0102e4f:	6a 00                	push   $0x0$/;"	l
c0102e51	obj/kernel.asm	/^c0102e51:	6a 4e                	push   $0x4e$/;"	l
c0102e53	obj/kernel.asm	/^c0102e53:	e9 b9 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102e58	obj/kernel.asm	/^c0102e58 <vector79>:$/;"	l
c0102e58	obj/kernel.asm	/^c0102e58:	6a 00                	push   $0x0$/;"	l
c0102e5a	obj/kernel.asm	/^c0102e5a:	6a 4f                	push   $0x4f$/;"	l
c0102e5c	obj/kernel.asm	/^c0102e5c:	e9 b0 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102e61	obj/kernel.asm	/^c0102e61 <vector80>:$/;"	l
c0102e61	obj/kernel.asm	/^c0102e61:	6a 00                	push   $0x0$/;"	l
c0102e63	obj/kernel.asm	/^c0102e63:	6a 50                	push   $0x50$/;"	l
c0102e65	obj/kernel.asm	/^c0102e65:	e9 a7 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102e6a	obj/kernel.asm	/^c0102e6a <vector81>:$/;"	l
c0102e6a	obj/kernel.asm	/^c0102e6a:	6a 00                	push   $0x0$/;"	l
c0102e6c	obj/kernel.asm	/^c0102e6c:	6a 51                	push   $0x51$/;"	l
c0102e6e	obj/kernel.asm	/^c0102e6e:	e9 9e 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102e73	obj/kernel.asm	/^c0102e73 <vector82>:$/;"	l
c0102e73	obj/kernel.asm	/^c0102e73:	6a 00                	push   $0x0$/;"	l
c0102e75	obj/kernel.asm	/^c0102e75:	6a 52                	push   $0x52$/;"	l
c0102e77	obj/kernel.asm	/^c0102e77:	e9 95 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102e7c	obj/kernel.asm	/^c0102e7c <vector83>:$/;"	l
c0102e7c	obj/kernel.asm	/^c0102e7c:	6a 00                	push   $0x0$/;"	l
c0102e7e	obj/kernel.asm	/^c0102e7e:	6a 53                	push   $0x53$/;"	l
c0102e80	obj/kernel.asm	/^c0102e80:	e9 8c 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102e85	obj/kernel.asm	/^c0102e85 <vector84>:$/;"	l
c0102e85	obj/kernel.asm	/^c0102e85:	6a 00                	push   $0x0$/;"	l
c0102e87	obj/kernel.asm	/^c0102e87:	6a 54                	push   $0x54$/;"	l
c0102e89	obj/kernel.asm	/^c0102e89:	e9 83 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102e8e	obj/kernel.asm	/^c0102e8e <vector85>:$/;"	l
c0102e8e	obj/kernel.asm	/^c0102e8e:	6a 00                	push   $0x0$/;"	l
c0102e90	obj/kernel.asm	/^c0102e90:	6a 55                	push   $0x55$/;"	l
c0102e92	obj/kernel.asm	/^c0102e92:	e9 7a 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102e97	obj/kernel.asm	/^c0102e97 <vector86>:$/;"	l
c0102e97	obj/kernel.asm	/^c0102e97:	6a 00                	push   $0x0$/;"	l
c0102e99	obj/kernel.asm	/^c0102e99:	6a 56                	push   $0x56$/;"	l
c0102e9b	obj/kernel.asm	/^c0102e9b:	e9 71 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102ea0	obj/kernel.asm	/^c0102ea0 <vector87>:$/;"	l
c0102ea0	obj/kernel.asm	/^c0102ea0:	6a 00                	push   $0x0$/;"	l
c0102ea2	obj/kernel.asm	/^c0102ea2:	6a 57                	push   $0x57$/;"	l
c0102ea4	obj/kernel.asm	/^c0102ea4:	e9 68 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102ea9	obj/kernel.asm	/^c0102ea9 <vector88>:$/;"	l
c0102ea9	obj/kernel.asm	/^c0102ea9:	6a 00                	push   $0x0$/;"	l
c0102eab	obj/kernel.asm	/^c0102eab:	6a 58                	push   $0x58$/;"	l
c0102ead	obj/kernel.asm	/^c0102ead:	e9 5f 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102eb2	obj/kernel.asm	/^c0102eb2 <vector89>:$/;"	l
c0102eb2	obj/kernel.asm	/^c0102eb2:	6a 00                	push   $0x0$/;"	l
c0102eb4	obj/kernel.asm	/^c0102eb4:	6a 59                	push   $0x59$/;"	l
c0102eb6	obj/kernel.asm	/^c0102eb6:	e9 56 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102ebb	obj/kernel.asm	/^c0102ebb <vector90>:$/;"	l
c0102ebb	obj/kernel.asm	/^c0102ebb:	6a 00                	push   $0x0$/;"	l
c0102ebd	obj/kernel.asm	/^c0102ebd:	6a 5a                	push   $0x5a$/;"	l
c0102ebf	obj/kernel.asm	/^c0102ebf:	e9 4d 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102ec4	obj/kernel.asm	/^c0102ec4 <vector91>:$/;"	l
c0102ec4	obj/kernel.asm	/^c0102ec4:	6a 00                	push   $0x0$/;"	l
c0102ec6	obj/kernel.asm	/^c0102ec6:	6a 5b                	push   $0x5b$/;"	l
c0102ec8	obj/kernel.asm	/^c0102ec8:	e9 44 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102ecd	obj/kernel.asm	/^c0102ecd <vector92>:$/;"	l
c0102ecd	obj/kernel.asm	/^c0102ecd:	6a 00                	push   $0x0$/;"	l
c0102ecf	obj/kernel.asm	/^c0102ecf:	6a 5c                	push   $0x5c$/;"	l
c0102ed1	obj/kernel.asm	/^c0102ed1:	e9 3b 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102ed6	obj/kernel.asm	/^c0102ed6 <vector93>:$/;"	l
c0102ed6	obj/kernel.asm	/^c0102ed6:	6a 00                	push   $0x0$/;"	l
c0102ed8	obj/kernel.asm	/^c0102ed8:	6a 5d                	push   $0x5d$/;"	l
c0102eda	obj/kernel.asm	/^c0102eda:	e9 32 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102edf	obj/kernel.asm	/^c0102edf <vector94>:$/;"	l
c0102edf	obj/kernel.asm	/^c0102edf:	6a 00                	push   $0x0$/;"	l
c0102ee1	obj/kernel.asm	/^c0102ee1:	6a 5e                	push   $0x5e$/;"	l
c0102ee3	obj/kernel.asm	/^c0102ee3:	e9 29 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102ee8	obj/kernel.asm	/^c0102ee8 <vector95>:$/;"	l
c0102ee8	obj/kernel.asm	/^c0102ee8:	6a 00                	push   $0x0$/;"	l
c0102eea	obj/kernel.asm	/^c0102eea:	6a 5f                	push   $0x5f$/;"	l
c0102eec	obj/kernel.asm	/^c0102eec:	e9 20 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102ef1	obj/kernel.asm	/^c0102ef1 <vector96>:$/;"	l
c0102ef1	obj/kernel.asm	/^c0102ef1:	6a 00                	push   $0x0$/;"	l
c0102ef3	obj/kernel.asm	/^c0102ef3:	6a 60                	push   $0x60$/;"	l
c0102ef5	obj/kernel.asm	/^c0102ef5:	e9 17 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102efa	obj/kernel.asm	/^c0102efa <vector97>:$/;"	l
c0102efa	obj/kernel.asm	/^c0102efa:	6a 00                	push   $0x0$/;"	l
c0102efc	obj/kernel.asm	/^c0102efc:	6a 61                	push   $0x61$/;"	l
c0102efe	obj/kernel.asm	/^c0102efe:	e9 0e 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102f03	obj/kernel.asm	/^c0102f03 <vector98>:$/;"	l
c0102f03	obj/kernel.asm	/^c0102f03:	6a 00                	push   $0x0$/;"	l
c0102f05	obj/kernel.asm	/^c0102f05:	6a 62                	push   $0x62$/;"	l
c0102f07	obj/kernel.asm	/^c0102f07:	e9 05 07 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102f0c	obj/kernel.asm	/^c0102f0c <vector99>:$/;"	l
c0102f0c	obj/kernel.asm	/^c0102f0c:	6a 00                	push   $0x0$/;"	l
c0102f0e	obj/kernel.asm	/^c0102f0e:	6a 63                	push   $0x63$/;"	l
c0102f10	obj/kernel.asm	/^c0102f10:	e9 fc 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102f15	obj/kernel.asm	/^c0102f15 <vector100>:$/;"	l
c0102f15	obj/kernel.asm	/^c0102f15:	6a 00                	push   $0x0$/;"	l
c0102f17	obj/kernel.asm	/^c0102f17:	6a 64                	push   $0x64$/;"	l
c0102f19	obj/kernel.asm	/^c0102f19:	e9 f3 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102f1e	obj/kernel.asm	/^c0102f1e <vector101>:$/;"	l
c0102f1e	obj/kernel.asm	/^c0102f1e:	6a 00                	push   $0x0$/;"	l
c0102f20	obj/kernel.asm	/^c0102f20:	6a 65                	push   $0x65$/;"	l
c0102f22	obj/kernel.asm	/^c0102f22:	e9 ea 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102f27	obj/kernel.asm	/^c0102f27 <vector102>:$/;"	l
c0102f27	obj/kernel.asm	/^c0102f27:	6a 00                	push   $0x0$/;"	l
c0102f29	obj/kernel.asm	/^c0102f29:	6a 66                	push   $0x66$/;"	l
c0102f2b	obj/kernel.asm	/^c0102f2b:	e9 e1 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102f30	obj/kernel.asm	/^c0102f30 <vector103>:$/;"	l
c0102f30	obj/kernel.asm	/^c0102f30:	6a 00                	push   $0x0$/;"	l
c0102f32	obj/kernel.asm	/^c0102f32:	6a 67                	push   $0x67$/;"	l
c0102f34	obj/kernel.asm	/^c0102f34:	e9 d8 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102f39	obj/kernel.asm	/^c0102f39 <vector104>:$/;"	l
c0102f39	obj/kernel.asm	/^c0102f39:	6a 00                	push   $0x0$/;"	l
c0102f3b	obj/kernel.asm	/^c0102f3b:	6a 68                	push   $0x68$/;"	l
c0102f3d	obj/kernel.asm	/^c0102f3d:	e9 cf 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102f42	obj/kernel.asm	/^c0102f42 <vector105>:$/;"	l
c0102f42	obj/kernel.asm	/^c0102f42:	6a 00                	push   $0x0$/;"	l
c0102f44	obj/kernel.asm	/^c0102f44:	6a 69                	push   $0x69$/;"	l
c0102f46	obj/kernel.asm	/^c0102f46:	e9 c6 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102f4b	obj/kernel.asm	/^c0102f4b <vector106>:$/;"	l
c0102f4b	obj/kernel.asm	/^c0102f4b:	6a 00                	push   $0x0$/;"	l
c0102f4d	obj/kernel.asm	/^c0102f4d:	6a 6a                	push   $0x6a$/;"	l
c0102f4f	obj/kernel.asm	/^c0102f4f:	e9 bd 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102f54	obj/kernel.asm	/^c0102f54 <vector107>:$/;"	l
c0102f54	obj/kernel.asm	/^c0102f54:	6a 00                	push   $0x0$/;"	l
c0102f56	obj/kernel.asm	/^c0102f56:	6a 6b                	push   $0x6b$/;"	l
c0102f58	obj/kernel.asm	/^c0102f58:	e9 b4 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102f5d	obj/kernel.asm	/^c0102f5d <vector108>:$/;"	l
c0102f5d	obj/kernel.asm	/^c0102f5d:	6a 00                	push   $0x0$/;"	l
c0102f5f	obj/kernel.asm	/^c0102f5f:	6a 6c                	push   $0x6c$/;"	l
c0102f61	obj/kernel.asm	/^c0102f61:	e9 ab 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102f66	obj/kernel.asm	/^c0102f66 <vector109>:$/;"	l
c0102f66	obj/kernel.asm	/^c0102f66:	6a 00                	push   $0x0$/;"	l
c0102f68	obj/kernel.asm	/^c0102f68:	6a 6d                	push   $0x6d$/;"	l
c0102f6a	obj/kernel.asm	/^c0102f6a:	e9 a2 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102f6f	obj/kernel.asm	/^c0102f6f <vector110>:$/;"	l
c0102f6f	obj/kernel.asm	/^c0102f6f:	6a 00                	push   $0x0$/;"	l
c0102f71	obj/kernel.asm	/^c0102f71:	6a 6e                	push   $0x6e$/;"	l
c0102f73	obj/kernel.asm	/^c0102f73:	e9 99 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102f78	obj/kernel.asm	/^c0102f78 <vector111>:$/;"	l
c0102f78	obj/kernel.asm	/^c0102f78:	6a 00                	push   $0x0$/;"	l
c0102f7a	obj/kernel.asm	/^c0102f7a:	6a 6f                	push   $0x6f$/;"	l
c0102f7c	obj/kernel.asm	/^c0102f7c:	e9 90 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102f81	obj/kernel.asm	/^c0102f81 <vector112>:$/;"	l
c0102f81	obj/kernel.asm	/^c0102f81:	6a 00                	push   $0x0$/;"	l
c0102f83	obj/kernel.asm	/^c0102f83:	6a 70                	push   $0x70$/;"	l
c0102f85	obj/kernel.asm	/^c0102f85:	e9 87 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102f8a	obj/kernel.asm	/^c0102f8a <vector113>:$/;"	l
c0102f8a	obj/kernel.asm	/^c0102f8a:	6a 00                	push   $0x0$/;"	l
c0102f8c	obj/kernel.asm	/^c0102f8c:	6a 71                	push   $0x71$/;"	l
c0102f8e	obj/kernel.asm	/^c0102f8e:	e9 7e 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102f93	obj/kernel.asm	/^c0102f93 <vector114>:$/;"	l
c0102f93	obj/kernel.asm	/^c0102f93:	6a 00                	push   $0x0$/;"	l
c0102f95	obj/kernel.asm	/^c0102f95:	6a 72                	push   $0x72$/;"	l
c0102f97	obj/kernel.asm	/^c0102f97:	e9 75 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102f9c	obj/kernel.asm	/^c0102f9c <vector115>:$/;"	l
c0102f9c	obj/kernel.asm	/^c0102f9c:	6a 00                	push   $0x0$/;"	l
c0102f9e	obj/kernel.asm	/^c0102f9e:	6a 73                	push   $0x73$/;"	l
c0102fa0	obj/kernel.asm	/^c0102fa0:	e9 6c 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102fa5	obj/kernel.asm	/^c0102fa5 <vector116>:$/;"	l
c0102fa5	obj/kernel.asm	/^c0102fa5:	6a 00                	push   $0x0$/;"	l
c0102fa7	obj/kernel.asm	/^c0102fa7:	6a 74                	push   $0x74$/;"	l
c0102fa9	obj/kernel.asm	/^c0102fa9:	e9 63 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102fae	obj/kernel.asm	/^c0102fae <vector117>:$/;"	l
c0102fae	obj/kernel.asm	/^c0102fae:	6a 00                	push   $0x0$/;"	l
c0102fb0	obj/kernel.asm	/^c0102fb0:	6a 75                	push   $0x75$/;"	l
c0102fb2	obj/kernel.asm	/^c0102fb2:	e9 5a 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102fb7	obj/kernel.asm	/^c0102fb7 <vector118>:$/;"	l
c0102fb7	obj/kernel.asm	/^c0102fb7:	6a 00                	push   $0x0$/;"	l
c0102fb9	obj/kernel.asm	/^c0102fb9:	6a 76                	push   $0x76$/;"	l
c0102fbb	obj/kernel.asm	/^c0102fbb:	e9 51 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102fc0	obj/kernel.asm	/^c0102fc0 <vector119>:$/;"	l
c0102fc0	obj/kernel.asm	/^c0102fc0:	6a 00                	push   $0x0$/;"	l
c0102fc2	obj/kernel.asm	/^c0102fc2:	6a 77                	push   $0x77$/;"	l
c0102fc4	obj/kernel.asm	/^c0102fc4:	e9 48 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102fc9	obj/kernel.asm	/^c0102fc9 <vector120>:$/;"	l
c0102fc9	obj/kernel.asm	/^c0102fc9:	6a 00                	push   $0x0$/;"	l
c0102fcb	obj/kernel.asm	/^c0102fcb:	6a 78                	push   $0x78$/;"	l
c0102fcd	obj/kernel.asm	/^c0102fcd:	e9 3f 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102fd2	obj/kernel.asm	/^c0102fd2 <vector121>:$/;"	l
c0102fd2	obj/kernel.asm	/^c0102fd2:	6a 00                	push   $0x0$/;"	l
c0102fd4	obj/kernel.asm	/^c0102fd4:	6a 79                	push   $0x79$/;"	l
c0102fd6	obj/kernel.asm	/^c0102fd6:	e9 36 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102fdb	obj/kernel.asm	/^c0102fdb <vector122>:$/;"	l
c0102fdb	obj/kernel.asm	/^c0102fdb:	6a 00                	push   $0x0$/;"	l
c0102fdd	obj/kernel.asm	/^c0102fdd:	6a 7a                	push   $0x7a$/;"	l
c0102fdf	obj/kernel.asm	/^c0102fdf:	e9 2d 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102fe4	obj/kernel.asm	/^c0102fe4 <vector123>:$/;"	l
c0102fe4	obj/kernel.asm	/^c0102fe4:	6a 00                	push   $0x0$/;"	l
c0102fe6	obj/kernel.asm	/^c0102fe6:	6a 7b                	push   $0x7b$/;"	l
c0102fe8	obj/kernel.asm	/^c0102fe8:	e9 24 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102fed	obj/kernel.asm	/^c0102fed <vector124>:$/;"	l
c0102fed	obj/kernel.asm	/^c0102fed:	6a 00                	push   $0x0$/;"	l
c0102fef	obj/kernel.asm	/^c0102fef:	6a 7c                	push   $0x7c$/;"	l
c0102ff1	obj/kernel.asm	/^c0102ff1:	e9 1b 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102ff6	obj/kernel.asm	/^c0102ff6 <vector125>:$/;"	l
c0102ff6	obj/kernel.asm	/^c0102ff6:	6a 00                	push   $0x0$/;"	l
c0102ff8	obj/kernel.asm	/^c0102ff8:	6a 7d                	push   $0x7d$/;"	l
c0102ffa	obj/kernel.asm	/^c0102ffa:	e9 12 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0102fff	obj/kernel.asm	/^c0102fff <vector126>:$/;"	l
c0102fff	obj/kernel.asm	/^c0102fff:	6a 00                	push   $0x0$/;"	l
c0103001	obj/kernel.asm	/^c0103001:	6a 7e                	push   $0x7e$/;"	l
c0103003	obj/kernel.asm	/^c0103003:	e9 09 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103008	obj/kernel.asm	/^c0103008 <vector127>:$/;"	l
c0103008	obj/kernel.asm	/^c0103008:	6a 00                	push   $0x0$/;"	l
c010300a	obj/kernel.asm	/^c010300a:	6a 7f                	push   $0x7f$/;"	l
c010300c	obj/kernel.asm	/^c010300c:	e9 00 06 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103011	obj/kernel.asm	/^c0103011 <vector128>:$/;"	l
c0103011	obj/kernel.asm	/^c0103011:	6a 00                	push   $0x0$/;"	l
c0103013	obj/kernel.asm	/^c0103013:	68 80 00 00 00       	push   $0x80$/;"	l
c0103018	obj/kernel.asm	/^c0103018:	e9 f4 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010301d	obj/kernel.asm	/^c010301d <vector129>:$/;"	l
c010301d	obj/kernel.asm	/^c010301d:	6a 00                	push   $0x0$/;"	l
c010301f	obj/kernel.asm	/^c010301f:	68 81 00 00 00       	push   $0x81$/;"	l
c0103024	obj/kernel.asm	/^c0103024:	e9 e8 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103029	obj/kernel.asm	/^c0103029 <vector130>:$/;"	l
c0103029	obj/kernel.asm	/^c0103029:	6a 00                	push   $0x0$/;"	l
c010302b	obj/kernel.asm	/^c010302b:	68 82 00 00 00       	push   $0x82$/;"	l
c0103030	obj/kernel.asm	/^c0103030:	e9 dc 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103035	obj/kernel.asm	/^c0103035 <vector131>:$/;"	l
c0103035	obj/kernel.asm	/^c0103035:	6a 00                	push   $0x0$/;"	l
c0103037	obj/kernel.asm	/^c0103037:	68 83 00 00 00       	push   $0x83$/;"	l
c010303c	obj/kernel.asm	/^c010303c:	e9 d0 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103041	obj/kernel.asm	/^c0103041 <vector132>:$/;"	l
c0103041	obj/kernel.asm	/^c0103041:	6a 00                	push   $0x0$/;"	l
c0103043	obj/kernel.asm	/^c0103043:	68 84 00 00 00       	push   $0x84$/;"	l
c0103048	obj/kernel.asm	/^c0103048:	e9 c4 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010304d	obj/kernel.asm	/^c010304d <vector133>:$/;"	l
c010304d	obj/kernel.asm	/^c010304d:	6a 00                	push   $0x0$/;"	l
c010304f	obj/kernel.asm	/^c010304f:	68 85 00 00 00       	push   $0x85$/;"	l
c0103054	obj/kernel.asm	/^c0103054:	e9 b8 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103059	obj/kernel.asm	/^c0103059 <vector134>:$/;"	l
c0103059	obj/kernel.asm	/^c0103059:	6a 00                	push   $0x0$/;"	l
c010305b	obj/kernel.asm	/^c010305b:	68 86 00 00 00       	push   $0x86$/;"	l
c0103060	obj/kernel.asm	/^c0103060:	e9 ac 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103065	obj/kernel.asm	/^c0103065 <vector135>:$/;"	l
c0103065	obj/kernel.asm	/^c0103065:	6a 00                	push   $0x0$/;"	l
c0103067	obj/kernel.asm	/^c0103067:	68 87 00 00 00       	push   $0x87$/;"	l
c010306c	obj/kernel.asm	/^c010306c:	e9 a0 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103071	obj/kernel.asm	/^c0103071 <vector136>:$/;"	l
c0103071	obj/kernel.asm	/^c0103071:	6a 00                	push   $0x0$/;"	l
c0103073	obj/kernel.asm	/^c0103073:	68 88 00 00 00       	push   $0x88$/;"	l
c0103078	obj/kernel.asm	/^c0103078:	e9 94 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010307d	obj/kernel.asm	/^c010307d <vector137>:$/;"	l
c010307d	obj/kernel.asm	/^c010307d:	6a 00                	push   $0x0$/;"	l
c010307f	obj/kernel.asm	/^c010307f:	68 89 00 00 00       	push   $0x89$/;"	l
c0103084	obj/kernel.asm	/^c0103084:	e9 88 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103089	obj/kernel.asm	/^c0103089 <vector138>:$/;"	l
c0103089	obj/kernel.asm	/^c0103089:	6a 00                	push   $0x0$/;"	l
c010308b	obj/kernel.asm	/^c010308b:	68 8a 00 00 00       	push   $0x8a$/;"	l
c0103090	obj/kernel.asm	/^c0103090:	e9 7c 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103095	obj/kernel.asm	/^c0103095 <vector139>:$/;"	l
c0103095	obj/kernel.asm	/^c0103095:	6a 00                	push   $0x0$/;"	l
c0103097	obj/kernel.asm	/^c0103097:	68 8b 00 00 00       	push   $0x8b$/;"	l
c010309c	obj/kernel.asm	/^c010309c:	e9 70 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01030a1	obj/kernel.asm	/^c01030a1 <vector140>:$/;"	l
c01030a1	obj/kernel.asm	/^c01030a1:	6a 00                	push   $0x0$/;"	l
c01030a3	obj/kernel.asm	/^c01030a3:	68 8c 00 00 00       	push   $0x8c$/;"	l
c01030a8	obj/kernel.asm	/^c01030a8:	e9 64 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01030ad	obj/kernel.asm	/^c01030ad <vector141>:$/;"	l
c01030ad	obj/kernel.asm	/^c01030ad:	6a 00                	push   $0x0$/;"	l
c01030af	obj/kernel.asm	/^c01030af:	68 8d 00 00 00       	push   $0x8d$/;"	l
c01030b4	obj/kernel.asm	/^c01030b4:	e9 58 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01030b9	obj/kernel.asm	/^c01030b9 <vector142>:$/;"	l
c01030b9	obj/kernel.asm	/^c01030b9:	6a 00                	push   $0x0$/;"	l
c01030bb	obj/kernel.asm	/^c01030bb:	68 8e 00 00 00       	push   $0x8e$/;"	l
c01030c0	obj/kernel.asm	/^c01030c0:	e9 4c 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01030c5	obj/kernel.asm	/^c01030c5 <vector143>:$/;"	l
c01030c5	obj/kernel.asm	/^c01030c5:	6a 00                	push   $0x0$/;"	l
c01030c7	obj/kernel.asm	/^c01030c7:	68 8f 00 00 00       	push   $0x8f$/;"	l
c01030cc	obj/kernel.asm	/^c01030cc:	e9 40 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01030d1	obj/kernel.asm	/^c01030d1 <vector144>:$/;"	l
c01030d1	obj/kernel.asm	/^c01030d1:	6a 00                	push   $0x0$/;"	l
c01030d3	obj/kernel.asm	/^c01030d3:	68 90 00 00 00       	push   $0x90$/;"	l
c01030d8	obj/kernel.asm	/^c01030d8:	e9 34 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01030dd	obj/kernel.asm	/^c01030dd <vector145>:$/;"	l
c01030dd	obj/kernel.asm	/^c01030dd:	6a 00                	push   $0x0$/;"	l
c01030df	obj/kernel.asm	/^c01030df:	68 91 00 00 00       	push   $0x91$/;"	l
c01030e4	obj/kernel.asm	/^c01030e4:	e9 28 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01030e9	obj/kernel.asm	/^c01030e9 <vector146>:$/;"	l
c01030e9	obj/kernel.asm	/^c01030e9:	6a 00                	push   $0x0$/;"	l
c01030eb	obj/kernel.asm	/^c01030eb:	68 92 00 00 00       	push   $0x92$/;"	l
c01030f0	obj/kernel.asm	/^c01030f0:	e9 1c 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01030f5	obj/kernel.asm	/^c01030f5 <vector147>:$/;"	l
c01030f5	obj/kernel.asm	/^c01030f5:	6a 00                	push   $0x0$/;"	l
c01030f7	obj/kernel.asm	/^c01030f7:	68 93 00 00 00       	push   $0x93$/;"	l
c01030fc	obj/kernel.asm	/^c01030fc:	e9 10 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103101	obj/kernel.asm	/^c0103101 <vector148>:$/;"	l
c0103101	obj/kernel.asm	/^c0103101:	6a 00                	push   $0x0$/;"	l
c0103103	obj/kernel.asm	/^c0103103:	68 94 00 00 00       	push   $0x94$/;"	l
c0103108	obj/kernel.asm	/^c0103108:	e9 04 05 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010310d	obj/kernel.asm	/^c010310d <vector149>:$/;"	l
c010310d	obj/kernel.asm	/^c010310d:	6a 00                	push   $0x0$/;"	l
c010310f	obj/kernel.asm	/^c010310f:	68 95 00 00 00       	push   $0x95$/;"	l
c0103114	obj/kernel.asm	/^c0103114:	e9 f8 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103119	obj/kernel.asm	/^c0103119 <vector150>:$/;"	l
c0103119	obj/kernel.asm	/^c0103119:	6a 00                	push   $0x0$/;"	l
c010311b	obj/kernel.asm	/^c010311b:	68 96 00 00 00       	push   $0x96$/;"	l
c0103120	obj/kernel.asm	/^c0103120:	e9 ec 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103125	obj/kernel.asm	/^c0103125 <vector151>:$/;"	l
c0103125	obj/kernel.asm	/^c0103125:	6a 00                	push   $0x0$/;"	l
c0103127	obj/kernel.asm	/^c0103127:	68 97 00 00 00       	push   $0x97$/;"	l
c010312c	obj/kernel.asm	/^c010312c:	e9 e0 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103131	obj/kernel.asm	/^c0103131 <vector152>:$/;"	l
c0103131	obj/kernel.asm	/^c0103131:	6a 00                	push   $0x0$/;"	l
c0103133	obj/kernel.asm	/^c0103133:	68 98 00 00 00       	push   $0x98$/;"	l
c0103138	obj/kernel.asm	/^c0103138:	e9 d4 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010313d	obj/kernel.asm	/^c010313d <vector153>:$/;"	l
c010313d	obj/kernel.asm	/^c010313d:	6a 00                	push   $0x0$/;"	l
c010313f	obj/kernel.asm	/^c010313f:	68 99 00 00 00       	push   $0x99$/;"	l
c0103144	obj/kernel.asm	/^c0103144:	e9 c8 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103149	obj/kernel.asm	/^c0103149 <vector154>:$/;"	l
c0103149	obj/kernel.asm	/^c0103149:	6a 00                	push   $0x0$/;"	l
c010314b	obj/kernel.asm	/^c010314b:	68 9a 00 00 00       	push   $0x9a$/;"	l
c0103150	obj/kernel.asm	/^c0103150:	e9 bc 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103155	obj/kernel.asm	/^c0103155 <vector155>:$/;"	l
c0103155	obj/kernel.asm	/^c0103155:	6a 00                	push   $0x0$/;"	l
c0103157	obj/kernel.asm	/^c0103157:	68 9b 00 00 00       	push   $0x9b$/;"	l
c010315c	obj/kernel.asm	/^c010315c:	e9 b0 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103161	obj/kernel.asm	/^c0103161 <vector156>:$/;"	l
c0103161	obj/kernel.asm	/^c0103161:	6a 00                	push   $0x0$/;"	l
c0103163	obj/kernel.asm	/^c0103163:	68 9c 00 00 00       	push   $0x9c$/;"	l
c0103168	obj/kernel.asm	/^c0103168:	e9 a4 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010316d	obj/kernel.asm	/^c010316d <vector157>:$/;"	l
c010316d	obj/kernel.asm	/^c010316d:	6a 00                	push   $0x0$/;"	l
c010316f	obj/kernel.asm	/^c010316f:	68 9d 00 00 00       	push   $0x9d$/;"	l
c0103174	obj/kernel.asm	/^c0103174:	e9 98 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103179	obj/kernel.asm	/^c0103179 <vector158>:$/;"	l
c0103179	obj/kernel.asm	/^c0103179:	6a 00                	push   $0x0$/;"	l
c010317b	obj/kernel.asm	/^c010317b:	68 9e 00 00 00       	push   $0x9e$/;"	l
c0103180	obj/kernel.asm	/^c0103180:	e9 8c 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103185	obj/kernel.asm	/^c0103185 <vector159>:$/;"	l
c0103185	obj/kernel.asm	/^c0103185:	6a 00                	push   $0x0$/;"	l
c0103187	obj/kernel.asm	/^c0103187:	68 9f 00 00 00       	push   $0x9f$/;"	l
c010318c	obj/kernel.asm	/^c010318c:	e9 80 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103191	obj/kernel.asm	/^c0103191 <vector160>:$/;"	l
c0103191	obj/kernel.asm	/^c0103191:	6a 00                	push   $0x0$/;"	l
c0103193	obj/kernel.asm	/^c0103193:	68 a0 00 00 00       	push   $0xa0$/;"	l
c0103198	obj/kernel.asm	/^c0103198:	e9 74 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010319d	obj/kernel.asm	/^c010319d <vector161>:$/;"	l
c010319d	obj/kernel.asm	/^c010319d:	6a 00                	push   $0x0$/;"	l
c010319f	obj/kernel.asm	/^c010319f:	68 a1 00 00 00       	push   $0xa1$/;"	l
c01031a4	obj/kernel.asm	/^c01031a4:	e9 68 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01031a9	obj/kernel.asm	/^c01031a9 <vector162>:$/;"	l
c01031a9	obj/kernel.asm	/^c01031a9:	6a 00                	push   $0x0$/;"	l
c01031ab	obj/kernel.asm	/^c01031ab:	68 a2 00 00 00       	push   $0xa2$/;"	l
c01031b0	obj/kernel.asm	/^c01031b0:	e9 5c 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01031b5	obj/kernel.asm	/^c01031b5 <vector163>:$/;"	l
c01031b5	obj/kernel.asm	/^c01031b5:	6a 00                	push   $0x0$/;"	l
c01031b7	obj/kernel.asm	/^c01031b7:	68 a3 00 00 00       	push   $0xa3$/;"	l
c01031bc	obj/kernel.asm	/^c01031bc:	e9 50 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01031c1	obj/kernel.asm	/^c01031c1 <vector164>:$/;"	l
c01031c1	obj/kernel.asm	/^c01031c1:	6a 00                	push   $0x0$/;"	l
c01031c3	obj/kernel.asm	/^c01031c3:	68 a4 00 00 00       	push   $0xa4$/;"	l
c01031c8	obj/kernel.asm	/^c01031c8:	e9 44 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01031cd	obj/kernel.asm	/^c01031cd <vector165>:$/;"	l
c01031cd	obj/kernel.asm	/^c01031cd:	6a 00                	push   $0x0$/;"	l
c01031cf	obj/kernel.asm	/^c01031cf:	68 a5 00 00 00       	push   $0xa5$/;"	l
c01031d4	obj/kernel.asm	/^c01031d4:	e9 38 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01031d9	obj/kernel.asm	/^c01031d9 <vector166>:$/;"	l
c01031d9	obj/kernel.asm	/^c01031d9:	6a 00                	push   $0x0$/;"	l
c01031db	obj/kernel.asm	/^c01031db:	68 a6 00 00 00       	push   $0xa6$/;"	l
c01031e0	obj/kernel.asm	/^c01031e0:	e9 2c 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01031e5	obj/kernel.asm	/^c01031e5 <vector167>:$/;"	l
c01031e5	obj/kernel.asm	/^c01031e5:	6a 00                	push   $0x0$/;"	l
c01031e7	obj/kernel.asm	/^c01031e7:	68 a7 00 00 00       	push   $0xa7$/;"	l
c01031ec	obj/kernel.asm	/^c01031ec:	e9 20 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01031f1	obj/kernel.asm	/^c01031f1 <vector168>:$/;"	l
c01031f1	obj/kernel.asm	/^c01031f1:	6a 00                	push   $0x0$/;"	l
c01031f3	obj/kernel.asm	/^c01031f3:	68 a8 00 00 00       	push   $0xa8$/;"	l
c01031f8	obj/kernel.asm	/^c01031f8:	e9 14 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01031fd	obj/kernel.asm	/^c01031fd <vector169>:$/;"	l
c01031fd	obj/kernel.asm	/^c01031fd:	6a 00                	push   $0x0$/;"	l
c01031ff	obj/kernel.asm	/^c01031ff:	68 a9 00 00 00       	push   $0xa9$/;"	l
c0103204	obj/kernel.asm	/^c0103204:	e9 08 04 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103209	obj/kernel.asm	/^c0103209 <vector170>:$/;"	l
c0103209	obj/kernel.asm	/^c0103209:	6a 00                	push   $0x0$/;"	l
c010320b	obj/kernel.asm	/^c010320b:	68 aa 00 00 00       	push   $0xaa$/;"	l
c0103210	obj/kernel.asm	/^c0103210:	e9 fc 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103215	obj/kernel.asm	/^c0103215 <vector171>:$/;"	l
c0103215	obj/kernel.asm	/^c0103215:	6a 00                	push   $0x0$/;"	l
c0103217	obj/kernel.asm	/^c0103217:	68 ab 00 00 00       	push   $0xab$/;"	l
c010321c	obj/kernel.asm	/^c010321c:	e9 f0 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103221	obj/kernel.asm	/^c0103221 <vector172>:$/;"	l
c0103221	obj/kernel.asm	/^c0103221:	6a 00                	push   $0x0$/;"	l
c0103223	obj/kernel.asm	/^c0103223:	68 ac 00 00 00       	push   $0xac$/;"	l
c0103228	obj/kernel.asm	/^c0103228:	e9 e4 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010322d	obj/kernel.asm	/^c010322d <vector173>:$/;"	l
c010322d	obj/kernel.asm	/^c010322d:	6a 00                	push   $0x0$/;"	l
c010322f	obj/kernel.asm	/^c010322f:	68 ad 00 00 00       	push   $0xad$/;"	l
c0103234	obj/kernel.asm	/^c0103234:	e9 d8 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103239	obj/kernel.asm	/^c0103239 <vector174>:$/;"	l
c0103239	obj/kernel.asm	/^c0103239:	6a 00                	push   $0x0$/;"	l
c010323b	obj/kernel.asm	/^c010323b:	68 ae 00 00 00       	push   $0xae$/;"	l
c0103240	obj/kernel.asm	/^c0103240:	e9 cc 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103245	obj/kernel.asm	/^c0103245 <vector175>:$/;"	l
c0103245	obj/kernel.asm	/^c0103245:	6a 00                	push   $0x0$/;"	l
c0103247	obj/kernel.asm	/^c0103247:	68 af 00 00 00       	push   $0xaf$/;"	l
c010324c	obj/kernel.asm	/^c010324c:	e9 c0 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103251	obj/kernel.asm	/^c0103251 <vector176>:$/;"	l
c0103251	obj/kernel.asm	/^c0103251:	6a 00                	push   $0x0$/;"	l
c0103253	obj/kernel.asm	/^c0103253:	68 b0 00 00 00       	push   $0xb0$/;"	l
c0103258	obj/kernel.asm	/^c0103258:	e9 b4 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010325d	obj/kernel.asm	/^c010325d <vector177>:$/;"	l
c010325d	obj/kernel.asm	/^c010325d:	6a 00                	push   $0x0$/;"	l
c010325f	obj/kernel.asm	/^c010325f:	68 b1 00 00 00       	push   $0xb1$/;"	l
c0103264	obj/kernel.asm	/^c0103264:	e9 a8 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103269	obj/kernel.asm	/^c0103269 <vector178>:$/;"	l
c0103269	obj/kernel.asm	/^c0103269:	6a 00                	push   $0x0$/;"	l
c010326b	obj/kernel.asm	/^c010326b:	68 b2 00 00 00       	push   $0xb2$/;"	l
c0103270	obj/kernel.asm	/^c0103270:	e9 9c 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103275	obj/kernel.asm	/^c0103275 <vector179>:$/;"	l
c0103275	obj/kernel.asm	/^c0103275:	6a 00                	push   $0x0$/;"	l
c0103277	obj/kernel.asm	/^c0103277:	68 b3 00 00 00       	push   $0xb3$/;"	l
c010327c	obj/kernel.asm	/^c010327c:	e9 90 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103281	obj/kernel.asm	/^c0103281 <vector180>:$/;"	l
c0103281	obj/kernel.asm	/^c0103281:	6a 00                	push   $0x0$/;"	l
c0103283	obj/kernel.asm	/^c0103283:	68 b4 00 00 00       	push   $0xb4$/;"	l
c0103288	obj/kernel.asm	/^c0103288:	e9 84 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010328d	obj/kernel.asm	/^c010328d <vector181>:$/;"	l
c010328d	obj/kernel.asm	/^c010328d:	6a 00                	push   $0x0$/;"	l
c010328f	obj/kernel.asm	/^c010328f:	68 b5 00 00 00       	push   $0xb5$/;"	l
c0103294	obj/kernel.asm	/^c0103294:	e9 78 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103299	obj/kernel.asm	/^c0103299 <vector182>:$/;"	l
c0103299	obj/kernel.asm	/^c0103299:	6a 00                	push   $0x0$/;"	l
c010329b	obj/kernel.asm	/^c010329b:	68 b6 00 00 00       	push   $0xb6$/;"	l
c01032a0	obj/kernel.asm	/^c01032a0:	e9 6c 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01032a5	obj/kernel.asm	/^c01032a5 <vector183>:$/;"	l
c01032a5	obj/kernel.asm	/^c01032a5:	6a 00                	push   $0x0$/;"	l
c01032a7	obj/kernel.asm	/^c01032a7:	68 b7 00 00 00       	push   $0xb7$/;"	l
c01032ac	obj/kernel.asm	/^c01032ac:	e9 60 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01032b1	obj/kernel.asm	/^c01032b1 <vector184>:$/;"	l
c01032b1	obj/kernel.asm	/^c01032b1:	6a 00                	push   $0x0$/;"	l
c01032b3	obj/kernel.asm	/^c01032b3:	68 b8 00 00 00       	push   $0xb8$/;"	l
c01032b8	obj/kernel.asm	/^c01032b8:	e9 54 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01032bd	obj/kernel.asm	/^c01032bd <vector185>:$/;"	l
c01032bd	obj/kernel.asm	/^c01032bd:	6a 00                	push   $0x0$/;"	l
c01032bf	obj/kernel.asm	/^c01032bf:	68 b9 00 00 00       	push   $0xb9$/;"	l
c01032c4	obj/kernel.asm	/^c01032c4:	e9 48 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01032c9	obj/kernel.asm	/^c01032c9 <vector186>:$/;"	l
c01032c9	obj/kernel.asm	/^c01032c9:	6a 00                	push   $0x0$/;"	l
c01032cb	obj/kernel.asm	/^c01032cb:	68 ba 00 00 00       	push   $0xba$/;"	l
c01032d0	obj/kernel.asm	/^c01032d0:	e9 3c 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01032d5	obj/kernel.asm	/^c01032d5 <vector187>:$/;"	l
c01032d5	obj/kernel.asm	/^c01032d5:	6a 00                	push   $0x0$/;"	l
c01032d7	obj/kernel.asm	/^c01032d7:	68 bb 00 00 00       	push   $0xbb$/;"	l
c01032dc	obj/kernel.asm	/^c01032dc:	e9 30 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01032e1	obj/kernel.asm	/^c01032e1 <vector188>:$/;"	l
c01032e1	obj/kernel.asm	/^c01032e1:	6a 00                	push   $0x0$/;"	l
c01032e3	obj/kernel.asm	/^c01032e3:	68 bc 00 00 00       	push   $0xbc$/;"	l
c01032e8	obj/kernel.asm	/^c01032e8:	e9 24 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01032ed	obj/kernel.asm	/^c01032ed <vector189>:$/;"	l
c01032ed	obj/kernel.asm	/^c01032ed:	6a 00                	push   $0x0$/;"	l
c01032ef	obj/kernel.asm	/^c01032ef:	68 bd 00 00 00       	push   $0xbd$/;"	l
c01032f4	obj/kernel.asm	/^c01032f4:	e9 18 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01032f9	obj/kernel.asm	/^c01032f9 <vector190>:$/;"	l
c01032f9	obj/kernel.asm	/^c01032f9:	6a 00                	push   $0x0$/;"	l
c01032fb	obj/kernel.asm	/^c01032fb:	68 be 00 00 00       	push   $0xbe$/;"	l
c0103300	obj/kernel.asm	/^c0103300:	e9 0c 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103305	obj/kernel.asm	/^c0103305 <vector191>:$/;"	l
c0103305	obj/kernel.asm	/^c0103305:	6a 00                	push   $0x0$/;"	l
c0103307	obj/kernel.asm	/^c0103307:	68 bf 00 00 00       	push   $0xbf$/;"	l
c010330c	obj/kernel.asm	/^c010330c:	e9 00 03 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103311	obj/kernel.asm	/^c0103311 <vector192>:$/;"	l
c0103311	obj/kernel.asm	/^c0103311:	6a 00                	push   $0x0$/;"	l
c0103313	obj/kernel.asm	/^c0103313:	68 c0 00 00 00       	push   $0xc0$/;"	l
c0103318	obj/kernel.asm	/^c0103318:	e9 f4 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010331d	obj/kernel.asm	/^c010331d <vector193>:$/;"	l
c010331d	obj/kernel.asm	/^c010331d:	6a 00                	push   $0x0$/;"	l
c010331f	obj/kernel.asm	/^c010331f:	68 c1 00 00 00       	push   $0xc1$/;"	l
c0103324	obj/kernel.asm	/^c0103324:	e9 e8 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103329	obj/kernel.asm	/^c0103329 <vector194>:$/;"	l
c0103329	obj/kernel.asm	/^c0103329:	6a 00                	push   $0x0$/;"	l
c010332b	obj/kernel.asm	/^c010332b:	68 c2 00 00 00       	push   $0xc2$/;"	l
c0103330	obj/kernel.asm	/^c0103330:	e9 dc 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103335	obj/kernel.asm	/^c0103335 <vector195>:$/;"	l
c0103335	obj/kernel.asm	/^c0103335:	6a 00                	push   $0x0$/;"	l
c0103337	obj/kernel.asm	/^c0103337:	68 c3 00 00 00       	push   $0xc3$/;"	l
c010333c	obj/kernel.asm	/^c010333c:	e9 d0 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103341	obj/kernel.asm	/^c0103341 <vector196>:$/;"	l
c0103341	obj/kernel.asm	/^c0103341:	6a 00                	push   $0x0$/;"	l
c0103343	obj/kernel.asm	/^c0103343:	68 c4 00 00 00       	push   $0xc4$/;"	l
c0103348	obj/kernel.asm	/^c0103348:	e9 c4 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010334d	obj/kernel.asm	/^c010334d <vector197>:$/;"	l
c010334d	obj/kernel.asm	/^c010334d:	6a 00                	push   $0x0$/;"	l
c010334f	obj/kernel.asm	/^c010334f:	68 c5 00 00 00       	push   $0xc5$/;"	l
c0103354	obj/kernel.asm	/^c0103354:	e9 b8 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103359	obj/kernel.asm	/^c0103359 <vector198>:$/;"	l
c0103359	obj/kernel.asm	/^c0103359:	6a 00                	push   $0x0$/;"	l
c010335b	obj/kernel.asm	/^c010335b:	68 c6 00 00 00       	push   $0xc6$/;"	l
c0103360	obj/kernel.asm	/^c0103360:	e9 ac 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103365	obj/kernel.asm	/^c0103365 <vector199>:$/;"	l
c0103365	obj/kernel.asm	/^c0103365:	6a 00                	push   $0x0$/;"	l
c0103367	obj/kernel.asm	/^c0103367:	68 c7 00 00 00       	push   $0xc7$/;"	l
c010336c	obj/kernel.asm	/^c010336c:	e9 a0 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103371	obj/kernel.asm	/^c0103371 <vector200>:$/;"	l
c0103371	obj/kernel.asm	/^c0103371:	6a 00                	push   $0x0$/;"	l
c0103373	obj/kernel.asm	/^c0103373:	68 c8 00 00 00       	push   $0xc8$/;"	l
c0103378	obj/kernel.asm	/^c0103378:	e9 94 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010337d	obj/kernel.asm	/^c010337d <vector201>:$/;"	l
c010337d	obj/kernel.asm	/^c010337d:	6a 00                	push   $0x0$/;"	l
c010337f	obj/kernel.asm	/^c010337f:	68 c9 00 00 00       	push   $0xc9$/;"	l
c0103384	obj/kernel.asm	/^c0103384:	e9 88 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103389	obj/kernel.asm	/^c0103389 <vector202>:$/;"	l
c0103389	obj/kernel.asm	/^c0103389:	6a 00                	push   $0x0$/;"	l
c010338b	obj/kernel.asm	/^c010338b:	68 ca 00 00 00       	push   $0xca$/;"	l
c0103390	obj/kernel.asm	/^c0103390:	e9 7c 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103395	obj/kernel.asm	/^c0103395 <vector203>:$/;"	l
c0103395	obj/kernel.asm	/^c0103395:	6a 00                	push   $0x0$/;"	l
c0103397	obj/kernel.asm	/^c0103397:	68 cb 00 00 00       	push   $0xcb$/;"	l
c010339c	obj/kernel.asm	/^c010339c:	e9 70 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01033a1	obj/kernel.asm	/^c01033a1 <vector204>:$/;"	l
c01033a1	obj/kernel.asm	/^c01033a1:	6a 00                	push   $0x0$/;"	l
c01033a3	obj/kernel.asm	/^c01033a3:	68 cc 00 00 00       	push   $0xcc$/;"	l
c01033a8	obj/kernel.asm	/^c01033a8:	e9 64 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01033ad	obj/kernel.asm	/^c01033ad <vector205>:$/;"	l
c01033ad	obj/kernel.asm	/^c01033ad:	6a 00                	push   $0x0$/;"	l
c01033af	obj/kernel.asm	/^c01033af:	68 cd 00 00 00       	push   $0xcd$/;"	l
c01033b4	obj/kernel.asm	/^c01033b4:	e9 58 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01033b9	obj/kernel.asm	/^c01033b9 <vector206>:$/;"	l
c01033b9	obj/kernel.asm	/^c01033b9:	6a 00                	push   $0x0$/;"	l
c01033bb	obj/kernel.asm	/^c01033bb:	68 ce 00 00 00       	push   $0xce$/;"	l
c01033c0	obj/kernel.asm	/^c01033c0:	e9 4c 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01033c5	obj/kernel.asm	/^c01033c5 <vector207>:$/;"	l
c01033c5	obj/kernel.asm	/^c01033c5:	6a 00                	push   $0x0$/;"	l
c01033c7	obj/kernel.asm	/^c01033c7:	68 cf 00 00 00       	push   $0xcf$/;"	l
c01033cc	obj/kernel.asm	/^c01033cc:	e9 40 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01033d1	obj/kernel.asm	/^c01033d1 <vector208>:$/;"	l
c01033d1	obj/kernel.asm	/^c01033d1:	6a 00                	push   $0x0$/;"	l
c01033d3	obj/kernel.asm	/^c01033d3:	68 d0 00 00 00       	push   $0xd0$/;"	l
c01033d8	obj/kernel.asm	/^c01033d8:	e9 34 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01033dd	obj/kernel.asm	/^c01033dd <vector209>:$/;"	l
c01033dd	obj/kernel.asm	/^c01033dd:	6a 00                	push   $0x0$/;"	l
c01033df	obj/kernel.asm	/^c01033df:	68 d1 00 00 00       	push   $0xd1$/;"	l
c01033e4	obj/kernel.asm	/^c01033e4:	e9 28 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01033e9	obj/kernel.asm	/^c01033e9 <vector210>:$/;"	l
c01033e9	obj/kernel.asm	/^c01033e9:	6a 00                	push   $0x0$/;"	l
c01033eb	obj/kernel.asm	/^c01033eb:	68 d2 00 00 00       	push   $0xd2$/;"	l
c01033f0	obj/kernel.asm	/^c01033f0:	e9 1c 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01033f5	obj/kernel.asm	/^c01033f5 <vector211>:$/;"	l
c01033f5	obj/kernel.asm	/^c01033f5:	6a 00                	push   $0x0$/;"	l
c01033f7	obj/kernel.asm	/^c01033f7:	68 d3 00 00 00       	push   $0xd3$/;"	l
c01033fc	obj/kernel.asm	/^c01033fc:	e9 10 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103401	obj/kernel.asm	/^c0103401 <vector212>:$/;"	l
c0103401	obj/kernel.asm	/^c0103401:	6a 00                	push   $0x0$/;"	l
c0103403	obj/kernel.asm	/^c0103403:	68 d4 00 00 00       	push   $0xd4$/;"	l
c0103408	obj/kernel.asm	/^c0103408:	e9 04 02 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010340d	obj/kernel.asm	/^c010340d <vector213>:$/;"	l
c010340d	obj/kernel.asm	/^c010340d:	6a 00                	push   $0x0$/;"	l
c010340f	obj/kernel.asm	/^c010340f:	68 d5 00 00 00       	push   $0xd5$/;"	l
c0103414	obj/kernel.asm	/^c0103414:	e9 f8 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103419	obj/kernel.asm	/^c0103419 <vector214>:$/;"	l
c0103419	obj/kernel.asm	/^c0103419:	6a 00                	push   $0x0$/;"	l
c010341b	obj/kernel.asm	/^c010341b:	68 d6 00 00 00       	push   $0xd6$/;"	l
c0103420	obj/kernel.asm	/^c0103420:	e9 ec 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103425	obj/kernel.asm	/^c0103425 <vector215>:$/;"	l
c0103425	obj/kernel.asm	/^c0103425:	6a 00                	push   $0x0$/;"	l
c0103427	obj/kernel.asm	/^c0103427:	68 d7 00 00 00       	push   $0xd7$/;"	l
c010342c	obj/kernel.asm	/^c010342c:	e9 e0 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103431	obj/kernel.asm	/^c0103431 <vector216>:$/;"	l
c0103431	obj/kernel.asm	/^c0103431:	6a 00                	push   $0x0$/;"	l
c0103433	obj/kernel.asm	/^c0103433:	68 d8 00 00 00       	push   $0xd8$/;"	l
c0103438	obj/kernel.asm	/^c0103438:	e9 d4 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010343d	obj/kernel.asm	/^c010343d <vector217>:$/;"	l
c010343d	obj/kernel.asm	/^c010343d:	6a 00                	push   $0x0$/;"	l
c010343f	obj/kernel.asm	/^c010343f:	68 d9 00 00 00       	push   $0xd9$/;"	l
c0103444	obj/kernel.asm	/^c0103444:	e9 c8 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103449	obj/kernel.asm	/^c0103449 <vector218>:$/;"	l
c0103449	obj/kernel.asm	/^c0103449:	6a 00                	push   $0x0$/;"	l
c010344b	obj/kernel.asm	/^c010344b:	68 da 00 00 00       	push   $0xda$/;"	l
c0103450	obj/kernel.asm	/^c0103450:	e9 bc 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103455	obj/kernel.asm	/^c0103455 <vector219>:$/;"	l
c0103455	obj/kernel.asm	/^c0103455:	6a 00                	push   $0x0$/;"	l
c0103457	obj/kernel.asm	/^c0103457:	68 db 00 00 00       	push   $0xdb$/;"	l
c010345c	obj/kernel.asm	/^c010345c:	e9 b0 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103461	obj/kernel.asm	/^c0103461 <vector220>:$/;"	l
c0103461	obj/kernel.asm	/^c0103461:	6a 00                	push   $0x0$/;"	l
c0103463	obj/kernel.asm	/^c0103463:	68 dc 00 00 00       	push   $0xdc$/;"	l
c0103468	obj/kernel.asm	/^c0103468:	e9 a4 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010346d	obj/kernel.asm	/^c010346d <vector221>:$/;"	l
c010346d	obj/kernel.asm	/^c010346d:	6a 00                	push   $0x0$/;"	l
c010346f	obj/kernel.asm	/^c010346f:	68 dd 00 00 00       	push   $0xdd$/;"	l
c0103474	obj/kernel.asm	/^c0103474:	e9 98 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103479	obj/kernel.asm	/^c0103479 <vector222>:$/;"	l
c0103479	obj/kernel.asm	/^c0103479:	6a 00                	push   $0x0$/;"	l
c010347b	obj/kernel.asm	/^c010347b:	68 de 00 00 00       	push   $0xde$/;"	l
c0103480	obj/kernel.asm	/^c0103480:	e9 8c 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103485	obj/kernel.asm	/^c0103485 <vector223>:$/;"	l
c0103485	obj/kernel.asm	/^c0103485:	6a 00                	push   $0x0$/;"	l
c0103487	obj/kernel.asm	/^c0103487:	68 df 00 00 00       	push   $0xdf$/;"	l
c010348c	obj/kernel.asm	/^c010348c:	e9 80 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103491	obj/kernel.asm	/^c0103491 <vector224>:$/;"	l
c0103491	obj/kernel.asm	/^c0103491:	6a 00                	push   $0x0$/;"	l
c0103493	obj/kernel.asm	/^c0103493:	68 e0 00 00 00       	push   $0xe0$/;"	l
c0103498	obj/kernel.asm	/^c0103498:	e9 74 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010349d	obj/kernel.asm	/^c010349d <vector225>:$/;"	l
c010349d	obj/kernel.asm	/^c010349d:	6a 00                	push   $0x0$/;"	l
c010349f	obj/kernel.asm	/^c010349f:	68 e1 00 00 00       	push   $0xe1$/;"	l
c01034a4	obj/kernel.asm	/^c01034a4:	e9 68 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01034a9	obj/kernel.asm	/^c01034a9 <vector226>:$/;"	l
c01034a9	obj/kernel.asm	/^c01034a9:	6a 00                	push   $0x0$/;"	l
c01034ab	obj/kernel.asm	/^c01034ab:	68 e2 00 00 00       	push   $0xe2$/;"	l
c01034b0	obj/kernel.asm	/^c01034b0:	e9 5c 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01034b5	obj/kernel.asm	/^c01034b5 <vector227>:$/;"	l
c01034b5	obj/kernel.asm	/^c01034b5:	6a 00                	push   $0x0$/;"	l
c01034b7	obj/kernel.asm	/^c01034b7:	68 e3 00 00 00       	push   $0xe3$/;"	l
c01034bc	obj/kernel.asm	/^c01034bc:	e9 50 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01034c1	obj/kernel.asm	/^c01034c1 <vector228>:$/;"	l
c01034c1	obj/kernel.asm	/^c01034c1:	6a 00                	push   $0x0$/;"	l
c01034c3	obj/kernel.asm	/^c01034c3:	68 e4 00 00 00       	push   $0xe4$/;"	l
c01034c8	obj/kernel.asm	/^c01034c8:	e9 44 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01034cd	obj/kernel.asm	/^c01034cd <vector229>:$/;"	l
c01034cd	obj/kernel.asm	/^c01034cd:	6a 00                	push   $0x0$/;"	l
c01034cf	obj/kernel.asm	/^c01034cf:	68 e5 00 00 00       	push   $0xe5$/;"	l
c01034d4	obj/kernel.asm	/^c01034d4:	e9 38 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01034d9	obj/kernel.asm	/^c01034d9 <vector230>:$/;"	l
c01034d9	obj/kernel.asm	/^c01034d9:	6a 00                	push   $0x0$/;"	l
c01034db	obj/kernel.asm	/^c01034db:	68 e6 00 00 00       	push   $0xe6$/;"	l
c01034e0	obj/kernel.asm	/^c01034e0:	e9 2c 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01034e5	obj/kernel.asm	/^c01034e5 <vector231>:$/;"	l
c01034e5	obj/kernel.asm	/^c01034e5:	6a 00                	push   $0x0$/;"	l
c01034e7	obj/kernel.asm	/^c01034e7:	68 e7 00 00 00       	push   $0xe7$/;"	l
c01034ec	obj/kernel.asm	/^c01034ec:	e9 20 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01034f1	obj/kernel.asm	/^c01034f1 <vector232>:$/;"	l
c01034f1	obj/kernel.asm	/^c01034f1:	6a 00                	push   $0x0$/;"	l
c01034f3	obj/kernel.asm	/^c01034f3:	68 e8 00 00 00       	push   $0xe8$/;"	l
c01034f8	obj/kernel.asm	/^c01034f8:	e9 14 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01034fd	obj/kernel.asm	/^c01034fd <vector233>:$/;"	l
c01034fd	obj/kernel.asm	/^c01034fd:	6a 00                	push   $0x0$/;"	l
c01034ff	obj/kernel.asm	/^c01034ff:	68 e9 00 00 00       	push   $0xe9$/;"	l
c0103504	obj/kernel.asm	/^c0103504:	e9 08 01 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103509	obj/kernel.asm	/^c0103509 <vector234>:$/;"	l
c0103509	obj/kernel.asm	/^c0103509:	6a 00                	push   $0x0$/;"	l
c010350b	obj/kernel.asm	/^c010350b:	68 ea 00 00 00       	push   $0xea$/;"	l
c0103510	obj/kernel.asm	/^c0103510:	e9 fc 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103515	obj/kernel.asm	/^c0103515 <vector235>:$/;"	l
c0103515	obj/kernel.asm	/^c0103515:	6a 00                	push   $0x0$/;"	l
c0103517	obj/kernel.asm	/^c0103517:	68 eb 00 00 00       	push   $0xeb$/;"	l
c010351c	obj/kernel.asm	/^c010351c:	e9 f0 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103521	obj/kernel.asm	/^c0103521 <vector236>:$/;"	l
c0103521	obj/kernel.asm	/^c0103521:	6a 00                	push   $0x0$/;"	l
c0103523	obj/kernel.asm	/^c0103523:	68 ec 00 00 00       	push   $0xec$/;"	l
c0103528	obj/kernel.asm	/^c0103528:	e9 e4 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010352d	obj/kernel.asm	/^c010352d <vector237>:$/;"	l
c010352d	obj/kernel.asm	/^c010352d:	6a 00                	push   $0x0$/;"	l
c010352f	obj/kernel.asm	/^c010352f:	68 ed 00 00 00       	push   $0xed$/;"	l
c0103534	obj/kernel.asm	/^c0103534:	e9 d8 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103539	obj/kernel.asm	/^c0103539 <vector238>:$/;"	l
c0103539	obj/kernel.asm	/^c0103539:	6a 00                	push   $0x0$/;"	l
c010353b	obj/kernel.asm	/^c010353b:	68 ee 00 00 00       	push   $0xee$/;"	l
c0103540	obj/kernel.asm	/^c0103540:	e9 cc 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103545	obj/kernel.asm	/^c0103545 <vector239>:$/;"	l
c0103545	obj/kernel.asm	/^c0103545:	6a 00                	push   $0x0$/;"	l
c0103547	obj/kernel.asm	/^c0103547:	68 ef 00 00 00       	push   $0xef$/;"	l
c010354c	obj/kernel.asm	/^c010354c:	e9 c0 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103551	obj/kernel.asm	/^c0103551 <vector240>:$/;"	l
c0103551	obj/kernel.asm	/^c0103551:	6a 00                	push   $0x0$/;"	l
c0103553	obj/kernel.asm	/^c0103553:	68 f0 00 00 00       	push   $0xf0$/;"	l
c0103558	obj/kernel.asm	/^c0103558:	e9 b4 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010355d	obj/kernel.asm	/^c010355d <vector241>:$/;"	l
c010355d	obj/kernel.asm	/^c010355d:	6a 00                	push   $0x0$/;"	l
c010355f	obj/kernel.asm	/^c010355f:	68 f1 00 00 00       	push   $0xf1$/;"	l
c0103564	obj/kernel.asm	/^c0103564:	e9 a8 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103569	obj/kernel.asm	/^c0103569 <vector242>:$/;"	l
c0103569	obj/kernel.asm	/^c0103569:	6a 00                	push   $0x0$/;"	l
c010356b	obj/kernel.asm	/^c010356b:	68 f2 00 00 00       	push   $0xf2$/;"	l
c0103570	obj/kernel.asm	/^c0103570:	e9 9c 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103575	obj/kernel.asm	/^c0103575 <vector243>:$/;"	l
c0103575	obj/kernel.asm	/^c0103575:	6a 00                	push   $0x0$/;"	l
c0103577	obj/kernel.asm	/^c0103577:	68 f3 00 00 00       	push   $0xf3$/;"	l
c010357c	obj/kernel.asm	/^c010357c:	e9 90 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103581	obj/kernel.asm	/^c0103581 <vector244>:$/;"	l
c0103581	obj/kernel.asm	/^c0103581:	6a 00                	push   $0x0$/;"	l
c0103583	obj/kernel.asm	/^c0103583:	68 f4 00 00 00       	push   $0xf4$/;"	l
c0103588	obj/kernel.asm	/^c0103588:	e9 84 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c010358d	obj/kernel.asm	/^c010358d <vector245>:$/;"	l
c010358d	obj/kernel.asm	/^c010358d:	6a 00                	push   $0x0$/;"	l
c010358f	obj/kernel.asm	/^c010358f:	68 f5 00 00 00       	push   $0xf5$/;"	l
c0103594	obj/kernel.asm	/^c0103594:	e9 78 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103599	obj/kernel.asm	/^c0103599 <vector246>:$/;"	l
c0103599	obj/kernel.asm	/^c0103599:	6a 00                	push   $0x0$/;"	l
c010359b	obj/kernel.asm	/^c010359b:	68 f6 00 00 00       	push   $0xf6$/;"	l
c01035a0	obj/kernel.asm	/^c01035a0:	e9 6c 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01035a5	obj/kernel.asm	/^c01035a5 <vector247>:$/;"	l
c01035a5	obj/kernel.asm	/^c01035a5:	6a 00                	push   $0x0$/;"	l
c01035a7	obj/kernel.asm	/^c01035a7:	68 f7 00 00 00       	push   $0xf7$/;"	l
c01035ac	obj/kernel.asm	/^c01035ac:	e9 60 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01035b1	obj/kernel.asm	/^c01035b1 <vector248>:$/;"	l
c01035b1	obj/kernel.asm	/^c01035b1:	6a 00                	push   $0x0$/;"	l
c01035b3	obj/kernel.asm	/^c01035b3:	68 f8 00 00 00       	push   $0xf8$/;"	l
c01035b8	obj/kernel.asm	/^c01035b8:	e9 54 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01035bd	obj/kernel.asm	/^c01035bd <vector249>:$/;"	l
c01035bd	obj/kernel.asm	/^c01035bd:	6a 00                	push   $0x0$/;"	l
c01035bf	obj/kernel.asm	/^c01035bf:	68 f9 00 00 00       	push   $0xf9$/;"	l
c01035c4	obj/kernel.asm	/^c01035c4:	e9 48 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01035c9	obj/kernel.asm	/^c01035c9 <vector250>:$/;"	l
c01035c9	obj/kernel.asm	/^c01035c9:	6a 00                	push   $0x0$/;"	l
c01035cb	obj/kernel.asm	/^c01035cb:	68 fa 00 00 00       	push   $0xfa$/;"	l
c01035d0	obj/kernel.asm	/^c01035d0:	e9 3c 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01035d5	obj/kernel.asm	/^c01035d5 <vector251>:$/;"	l
c01035d5	obj/kernel.asm	/^c01035d5:	6a 00                	push   $0x0$/;"	l
c01035d7	obj/kernel.asm	/^c01035d7:	68 fb 00 00 00       	push   $0xfb$/;"	l
c01035dc	obj/kernel.asm	/^c01035dc:	e9 30 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01035e1	obj/kernel.asm	/^c01035e1 <vector252>:$/;"	l
c01035e1	obj/kernel.asm	/^c01035e1:	6a 00                	push   $0x0$/;"	l
c01035e3	obj/kernel.asm	/^c01035e3:	68 fc 00 00 00       	push   $0xfc$/;"	l
c01035e8	obj/kernel.asm	/^c01035e8:	e9 24 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01035ed	obj/kernel.asm	/^c01035ed <vector253>:$/;"	l
c01035ed	obj/kernel.asm	/^c01035ed:	6a 00                	push   $0x0$/;"	l
c01035ef	obj/kernel.asm	/^c01035ef:	68 fd 00 00 00       	push   $0xfd$/;"	l
c01035f4	obj/kernel.asm	/^c01035f4:	e9 18 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c01035f9	obj/kernel.asm	/^c01035f9 <vector254>:$/;"	l
c01035f9	obj/kernel.asm	/^c01035f9:	6a 00                	push   $0x0$/;"	l
c01035fb	obj/kernel.asm	/^c01035fb:	68 fe 00 00 00       	push   $0xfe$/;"	l
c0103600	obj/kernel.asm	/^c0103600:	e9 0c 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103605	obj/kernel.asm	/^c0103605 <vector255>:$/;"	l
c0103605	obj/kernel.asm	/^c0103605:	6a 00                	push   $0x0$/;"	l
c0103607	obj/kernel.asm	/^c0103607:	68 ff 00 00 00       	push   $0xff$/;"	l
c010360c	obj/kernel.asm	/^c010360c:	e9 00 00 00 00       	jmp    c0103611 <__alltraps>$/;"	l
c0103611	obj/kernel.asm	/^c0103611 <__alltraps>:$/;"	l
c0103611	obj/kernel.asm	/^c0103611:	1e                   	push   %ds$/;"	l
c0103612	obj/kernel.asm	/^c0103612:	06                   	push   %es$/;"	l
c0103613	obj/kernel.asm	/^c0103613:	0f a0                	push   %fs$/;"	l
c0103615	obj/kernel.asm	/^c0103615:	0f a8                	push   %gs$/;"	l
c0103617	obj/kernel.asm	/^c0103617:	60                   	pusha  $/;"	l
c0103618	obj/kernel.asm	/^c0103618:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c010361d	obj/kernel.asm	/^c010361d:	8e d8                	mov    %eax,%ds$/;"	l
c010361f	obj/kernel.asm	/^c010361f:	8e c0                	mov    %eax,%es$/;"	l
c0103621	obj/kernel.asm	/^c0103621:	54                   	push   %esp$/;"	l
c0103622	obj/kernel.asm	/^c0103622:	e8 e6 f4 ff ff       	call   c0102b0d <trap>$/;"	l
c0103627	obj/kernel.asm	/^c0103627:	5c                   	pop    %esp$/;"	l
c0103628	obj/kernel.asm	/^c0103628 <__trapret>:$/;"	l
c0103628	obj/kernel.asm	/^c0103628:	61                   	popa   $/;"	l
c0103629	obj/kernel.asm	/^c0103629:	0f a9                	pop    %gs$/;"	l
c010362b	obj/kernel.asm	/^c010362b:	0f a1                	pop    %fs$/;"	l
c010362d	obj/kernel.asm	/^c010362d:	07                   	pop    %es$/;"	l
c010362e	obj/kernel.asm	/^c010362e:	1f                   	pop    %ds$/;"	l
c010362f	obj/kernel.asm	/^c010362f:	83 c4 08             	add    $0x8,%esp$/;"	l
c0103632	obj/kernel.asm	/^c0103632:	cf                   	iret   $/;"	l
c0103633	obj/kernel.asm	/^c0103633 <forkrets>:$/;"	l
c0103633	obj/kernel.asm	/^c0103633:	8b 64 24 04          	mov    0x4(%esp),%esp$/;"	l
c0103637	obj/kernel.asm	/^c0103637:	e9 ec ff ff ff       	jmp    c0103628 <__trapret>$/;"	l
c010363c	obj/kernel.asm	/^c010363c <page2ppn>:$/;"	l
c010363c	obj/kernel.asm	/^c010363c:	55                   	push   %ebp$/;"	l
c010363d	obj/kernel.asm	/^c010363d:	89 e5                	mov    %esp,%ebp$/;"	l
c010363f	obj/kernel.asm	/^c010363f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103642	obj/kernel.asm	/^c0103642:	8b 15 18 12 15 c0    	mov    0xc0151218,%edx$/;"	l
c0103648	obj/kernel.asm	/^c0103648:	29 d0                	sub    %edx,%eax$/;"	l
c010364a	obj/kernel.asm	/^c010364a:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c010364d	obj/kernel.asm	/^c010364d:	5d                   	pop    %ebp$/;"	l
c010364e	obj/kernel.asm	/^c010364e:	c3                   	ret    $/;"	l
c010364f	obj/kernel.asm	/^c010364f <page2pa>:$/;"	l
c010364f	obj/kernel.asm	/^c010364f:	55                   	push   %ebp$/;"	l
c0103650	obj/kernel.asm	/^c0103650:	89 e5                	mov    %esp,%ebp$/;"	l
c0103652	obj/kernel.asm	/^c0103652:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0103655	obj/kernel.asm	/^c0103655:	e8 e2 ff ff ff       	call   c010363c <page2ppn>$/;"	l
c010365a	obj/kernel.asm	/^c010365a:	83 c4 04             	add    $0x4,%esp$/;"	l
c010365d	obj/kernel.asm	/^c010365d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0103660	obj/kernel.asm	/^c0103660:	c9                   	leave  $/;"	l
c0103661	obj/kernel.asm	/^c0103661:	c3                   	ret    $/;"	l
c0103662	obj/kernel.asm	/^c0103662 <pa2page>:$/;"	l
c0103662	obj/kernel.asm	/^c0103662:	55                   	push   %ebp$/;"	l
c0103663	obj/kernel.asm	/^c0103663:	89 e5                	mov    %esp,%ebp$/;"	l
c0103665	obj/kernel.asm	/^c0103665:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103668	obj/kernel.asm	/^c0103668:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010366b	obj/kernel.asm	/^c010366b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010366e	obj/kernel.asm	/^c010366e:	89 c2                	mov    %eax,%edx$/;"	l
c0103670	obj/kernel.asm	/^c0103670:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c0103675	obj/kernel.asm	/^c0103675:	39 c2                	cmp    %eax,%edx$/;"	l
c0103677	obj/kernel.asm	/^c0103677:	72 14                	jb     c010368d <pa2page+0x2b>$/;"	l
c0103679	obj/kernel.asm	/^c0103679:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010367c	obj/kernel.asm	/^c010367c:	68 d0 41 11 c0       	push   $0xc01141d0$/;"	l
c0103681	obj/kernel.asm	/^c0103681:	6a 5e                	push   $0x5e$/;"	l
c0103683	obj/kernel.asm	/^c0103683:	68 ef 41 11 c0       	push   $0xc01141ef$/;"	l
c0103688	obj/kernel.asm	/^c0103688:	e8 42 ce ff ff       	call   c01004cf <__panic>$/;"	l
c010368d	obj/kernel.asm	/^c010368d:	a1 18 12 15 c0       	mov    0xc0151218,%eax$/;"	l
c0103692	obj/kernel.asm	/^c0103692:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0103695	obj/kernel.asm	/^c0103695:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0103698	obj/kernel.asm	/^c0103698:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c010369b	obj/kernel.asm	/^c010369b:	01 d0                	add    %edx,%eax$/;"	l
c010369d	obj/kernel.asm	/^c010369d:	c9                   	leave  $/;"	l
c010369e	obj/kernel.asm	/^c010369e:	c3                   	ret    $/;"	l
c010369f	obj/kernel.asm	/^c010369f <page2kva>:$/;"	l
c010369f	obj/kernel.asm	/^c010369f:	55                   	push   %ebp$/;"	l
c01036a0	obj/kernel.asm	/^c01036a0:	89 e5                	mov    %esp,%ebp$/;"	l
c01036a2	obj/kernel.asm	/^c01036a2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01036a5	obj/kernel.asm	/^c01036a5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01036a8	obj/kernel.asm	/^c01036a8:	e8 a2 ff ff ff       	call   c010364f <page2pa>$/;"	l
c01036ad	obj/kernel.asm	/^c01036ad:	83 c4 04             	add    $0x4,%esp$/;"	l
c01036b0	obj/kernel.asm	/^c01036b0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01036b3	obj/kernel.asm	/^c01036b3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01036b6	obj/kernel.asm	/^c01036b6:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01036b9	obj/kernel.asm	/^c01036b9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01036bc	obj/kernel.asm	/^c01036bc:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c01036c1	obj/kernel.asm	/^c01036c1:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c01036c4	obj/kernel.asm	/^c01036c4:	72 14                	jb     c01036da <page2kva+0x3b>$/;"	l
c01036c6	obj/kernel.asm	/^c01036c6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01036c9	obj/kernel.asm	/^c01036c9:	68 00 42 11 c0       	push   $0xc0114200$/;"	l
c01036ce	obj/kernel.asm	/^c01036ce:	6a 65                	push   $0x65$/;"	l
c01036d0	obj/kernel.asm	/^c01036d0:	68 ef 41 11 c0       	push   $0xc01141ef$/;"	l
c01036d5	obj/kernel.asm	/^c01036d5:	e8 f5 cd ff ff       	call   c01004cf <__panic>$/;"	l
c01036da	obj/kernel.asm	/^c01036da:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01036dd	obj/kernel.asm	/^c01036dd:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c01036e2	obj/kernel.asm	/^c01036e2:	c9                   	leave  $/;"	l
c01036e3	obj/kernel.asm	/^c01036e3:	c3                   	ret    $/;"	l
c01036e4	obj/kernel.asm	/^c01036e4 <pte2page>:$/;"	l
c01036e4	obj/kernel.asm	/^c01036e4:	55                   	push   %ebp$/;"	l
c01036e5	obj/kernel.asm	/^c01036e5:	89 e5                	mov    %esp,%ebp$/;"	l
c01036e7	obj/kernel.asm	/^c01036e7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01036ea	obj/kernel.asm	/^c01036ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01036ed	obj/kernel.asm	/^c01036ed:	83 e0 01             	and    $0x1,%eax$/;"	l
c01036f0	obj/kernel.asm	/^c01036f0:	85 c0                	test   %eax,%eax$/;"	l
c01036f2	obj/kernel.asm	/^c01036f2:	75 14                	jne    c0103708 <pte2page+0x24>$/;"	l
c01036f4	obj/kernel.asm	/^c01036f4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01036f7	obj/kernel.asm	/^c01036f7:	68 24 42 11 c0       	push   $0xc0114224$/;"	l
c01036fc	obj/kernel.asm	/^c01036fc:	6a 70                	push   $0x70$/;"	l
c01036fe	obj/kernel.asm	/^c01036fe:	68 ef 41 11 c0       	push   $0xc01141ef$/;"	l
c0103703	obj/kernel.asm	/^c0103703:	e8 c7 cd ff ff       	call   c01004cf <__panic>$/;"	l
c0103708	obj/kernel.asm	/^c0103708:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010370b	obj/kernel.asm	/^c010370b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0103710	obj/kernel.asm	/^c0103710:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103713	obj/kernel.asm	/^c0103713:	50                   	push   %eax$/;"	l
c0103714	obj/kernel.asm	/^c0103714:	e8 49 ff ff ff       	call   c0103662 <pa2page>$/;"	l
c0103719	obj/kernel.asm	/^c0103719:	83 c4 10             	add    $0x10,%esp$/;"	l
c010371c	obj/kernel.asm	/^c010371c:	c9                   	leave  $/;"	l
c010371d	obj/kernel.asm	/^c010371d:	c3                   	ret    $/;"	l
c010371e	obj/kernel.asm	/^c010371e <pde2page>:$/;"	l
c010371e	obj/kernel.asm	/^c010371e:	55                   	push   %ebp$/;"	l
c010371f	obj/kernel.asm	/^c010371f:	89 e5                	mov    %esp,%ebp$/;"	l
c0103721	obj/kernel.asm	/^c0103721:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103724	obj/kernel.asm	/^c0103724:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103727	obj/kernel.asm	/^c0103727:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010372c	obj/kernel.asm	/^c010372c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010372f	obj/kernel.asm	/^c010372f:	50                   	push   %eax$/;"	l
c0103730	obj/kernel.asm	/^c0103730:	e8 2d ff ff ff       	call   c0103662 <pa2page>$/;"	l
c0103735	obj/kernel.asm	/^c0103735:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103738	obj/kernel.asm	/^c0103738:	c9                   	leave  $/;"	l
c0103739	obj/kernel.asm	/^c0103739:	c3                   	ret    $/;"	l
c010373a	obj/kernel.asm	/^c010373a <page_ref>:$/;"	l
c010373a	obj/kernel.asm	/^c010373a:	55                   	push   %ebp$/;"	l
c010373b	obj/kernel.asm	/^c010373b:	89 e5                	mov    %esp,%ebp$/;"	l
c010373d	obj/kernel.asm	/^c010373d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103740	obj/kernel.asm	/^c0103740:	8b 00                	mov    (%eax),%eax$/;"	l
c0103742	obj/kernel.asm	/^c0103742:	5d                   	pop    %ebp$/;"	l
c0103743	obj/kernel.asm	/^c0103743:	c3                   	ret    $/;"	l
c0103744	obj/kernel.asm	/^c0103744 <set_page_ref>:$/;"	l
c0103744	obj/kernel.asm	/^c0103744:	55                   	push   %ebp$/;"	l
c0103745	obj/kernel.asm	/^c0103745:	89 e5                	mov    %esp,%ebp$/;"	l
c0103747	obj/kernel.asm	/^c0103747:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010374a	obj/kernel.asm	/^c010374a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010374d	obj/kernel.asm	/^c010374d:	89 10                	mov    %edx,(%eax)$/;"	l
c010374f	obj/kernel.asm	/^c010374f:	5d                   	pop    %ebp$/;"	l
c0103750	obj/kernel.asm	/^c0103750:	c3                   	ret    $/;"	l
c0103751	obj/kernel.asm	/^c0103751 <page_ref_inc>:$/;"	l
c0103751	obj/kernel.asm	/^c0103751:	55                   	push   %ebp$/;"	l
c0103752	obj/kernel.asm	/^c0103752:	89 e5                	mov    %esp,%ebp$/;"	l
c0103754	obj/kernel.asm	/^c0103754:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103757	obj/kernel.asm	/^c0103757:	8b 00                	mov    (%eax),%eax$/;"	l
c0103759	obj/kernel.asm	/^c0103759:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010375c	obj/kernel.asm	/^c010375c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010375f	obj/kernel.asm	/^c010375f:	89 10                	mov    %edx,(%eax)$/;"	l
c0103761	obj/kernel.asm	/^c0103761:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103764	obj/kernel.asm	/^c0103764:	8b 00                	mov    (%eax),%eax$/;"	l
c0103766	obj/kernel.asm	/^c0103766:	5d                   	pop    %ebp$/;"	l
c0103767	obj/kernel.asm	/^c0103767:	c3                   	ret    $/;"	l
c0103768	obj/kernel.asm	/^c0103768 <page_ref_dec>:$/;"	l
c0103768	obj/kernel.asm	/^c0103768:	55                   	push   %ebp$/;"	l
c0103769	obj/kernel.asm	/^c0103769:	89 e5                	mov    %esp,%ebp$/;"	l
c010376b	obj/kernel.asm	/^c010376b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010376e	obj/kernel.asm	/^c010376e:	8b 00                	mov    (%eax),%eax$/;"	l
c0103770	obj/kernel.asm	/^c0103770:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0103773	obj/kernel.asm	/^c0103773:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103776	obj/kernel.asm	/^c0103776:	89 10                	mov    %edx,(%eax)$/;"	l
c0103778	obj/kernel.asm	/^c0103778:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010377b	obj/kernel.asm	/^c010377b:	8b 00                	mov    (%eax),%eax$/;"	l
c010377d	obj/kernel.asm	/^c010377d:	5d                   	pop    %ebp$/;"	l
c010377e	obj/kernel.asm	/^c010377e:	c3                   	ret    $/;"	l
c010377f	obj/kernel.asm	/^c010377f <__intr_save>:$/;"	l
c010377f	obj/kernel.asm	/^c010377f:	55                   	push   %ebp$/;"	l
c0103780	obj/kernel.asm	/^c0103780:	89 e5                	mov    %esp,%ebp$/;"	l
c0103782	obj/kernel.asm	/^c0103782:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103785	obj/kernel.asm	/^c0103785:	9c                   	pushf  $/;"	l
c0103786	obj/kernel.asm	/^c0103786:	58                   	pop    %eax$/;"	l
c0103787	obj/kernel.asm	/^c0103787:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010378a	obj/kernel.asm	/^c010378a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010378d	obj/kernel.asm	/^c010378d:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0103792	obj/kernel.asm	/^c0103792:	85 c0                	test   %eax,%eax$/;"	l
c0103794	obj/kernel.asm	/^c0103794:	74 0c                	je     c01037a2 <__intr_save+0x23>$/;"	l
c0103796	obj/kernel.asm	/^c0103796:	e8 01 ea ff ff       	call   c010219c <intr_disable>$/;"	l
c010379b	obj/kernel.asm	/^c010379b:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01037a0	obj/kernel.asm	/^c01037a0:	eb 05                	jmp    c01037a7 <__intr_save+0x28>$/;"	l
c01037a2	obj/kernel.asm	/^c01037a2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01037a7	obj/kernel.asm	/^c01037a7:	c9                   	leave  $/;"	l
c01037a8	obj/kernel.asm	/^c01037a8:	c3                   	ret    $/;"	l
c01037a9	obj/kernel.asm	/^c01037a9 <__intr_restore>:$/;"	l
c01037a9	obj/kernel.asm	/^c01037a9:	55                   	push   %ebp$/;"	l
c01037aa	obj/kernel.asm	/^c01037aa:	89 e5                	mov    %esp,%ebp$/;"	l
c01037ac	obj/kernel.asm	/^c01037ac:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01037af	obj/kernel.asm	/^c01037af:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01037b3	obj/kernel.asm	/^c01037b3:	74 05                	je     c01037ba <__intr_restore+0x11>$/;"	l
c01037b5	obj/kernel.asm	/^c01037b5:	e8 dc e9 ff ff       	call   c0102196 <intr_enable>$/;"	l
c01037ba	obj/kernel.asm	/^c01037ba:	c9                   	leave  $/;"	l
c01037bb	obj/kernel.asm	/^c01037bb:	c3                   	ret    $/;"	l
c01037bc	obj/kernel.asm	/^c01037bc <lgdt>:$/;"	l
c01037bc	obj/kernel.asm	/^c01037bc:	55                   	push   %ebp$/;"	l
c01037bd	obj/kernel.asm	/^c01037bd:	89 e5                	mov    %esp,%ebp$/;"	l
c01037bf	obj/kernel.asm	/^c01037bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01037c2	obj/kernel.asm	/^c01037c2:	0f 01 10             	lgdtl  (%eax)$/;"	l
c01037c5	obj/kernel.asm	/^c01037c5:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c01037ca	obj/kernel.asm	/^c01037ca:	8e e8                	mov    %eax,%gs$/;"	l
c01037cc	obj/kernel.asm	/^c01037cc:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c01037d1	obj/kernel.asm	/^c01037d1:	8e e0                	mov    %eax,%fs$/;"	l
c01037d3	obj/kernel.asm	/^c01037d3:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c01037d8	obj/kernel.asm	/^c01037d8:	8e c0                	mov    %eax,%es$/;"	l
c01037da	obj/kernel.asm	/^c01037da:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c01037df	obj/kernel.asm	/^c01037df:	8e d8                	mov    %eax,%ds$/;"	l
c01037e1	obj/kernel.asm	/^c01037e1:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c01037e6	obj/kernel.asm	/^c01037e6:	8e d0                	mov    %eax,%ss$/;"	l
c01037e8	obj/kernel.asm	/^c01037e8:	ea ef 37 10 c0 08 00 	ljmp   $0x8,$0xc01037ef$/;"	l
c01037ef	obj/kernel.asm	/^c01037ef:	5d                   	pop    %ebp$/;"	l
c01037f0	obj/kernel.asm	/^c01037f0:	c3                   	ret    $/;"	l
c01037f1	obj/kernel.asm	/^c01037f1 <load_esp0>:$/;"	l
c01037f1	obj/kernel.asm	/^c01037f1:	55                   	push   %ebp$/;"	l
c01037f2	obj/kernel.asm	/^c01037f2:	89 e5                	mov    %esp,%ebp$/;"	l
c01037f4	obj/kernel.asm	/^c01037f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01037f7	obj/kernel.asm	/^c01037f7:	a3 04 e0 14 c0       	mov    %eax,0xc014e004$/;"	l
c01037fc	obj/kernel.asm	/^c01037fc:	5d                   	pop    %ebp$/;"	l
c01037fd	obj/kernel.asm	/^c01037fd:	c3                   	ret    $/;"	l
c01037fe	obj/kernel.asm	/^c01037fe <gdt_init>:$/;"	l
c01037fe	obj/kernel.asm	/^c01037fe:	55                   	push   %ebp$/;"	l
c01037ff	obj/kernel.asm	/^c01037ff:	89 e5                	mov    %esp,%ebp$/;"	l
c0103801	obj/kernel.asm	/^c0103801:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0103804	obj/kernel.asm	/^c0103804:	b8 00 c0 14 c0       	mov    $0xc014c000,%eax$/;"	l
c0103809	obj/kernel.asm	/^c0103809:	50                   	push   %eax$/;"	l
c010380a	obj/kernel.asm	/^c010380a:	e8 e2 ff ff ff       	call   c01037f1 <load_esp0>$/;"	l
c010380f	obj/kernel.asm	/^c010380f:	83 c4 04             	add    $0x4,%esp$/;"	l
c0103812	obj/kernel.asm	/^c0103812:	66 c7 05 08 e0 14 c0 	movw   $0x10,0xc014e008$/;"	l
c0103819	obj/kernel.asm	/^c0103819:	10 00 $/;"	l
c010381b	obj/kernel.asm	/^c010381b:	66 c7 05 88 ca 14 c0 	movw   $0x68,0xc014ca88$/;"	l
c0103822	obj/kernel.asm	/^c0103822:	68 00 $/;"	l
c0103824	obj/kernel.asm	/^c0103824:	b8 00 e0 14 c0       	mov    $0xc014e000,%eax$/;"	l
c0103829	obj/kernel.asm	/^c0103829:	66 a3 8a ca 14 c0    	mov    %ax,0xc014ca8a$/;"	l
c010382f	obj/kernel.asm	/^c010382f:	b8 00 e0 14 c0       	mov    $0xc014e000,%eax$/;"	l
c0103834	obj/kernel.asm	/^c0103834:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0103837	obj/kernel.asm	/^c0103837:	a2 8c ca 14 c0       	mov    %al,0xc014ca8c$/;"	l
c010383c	obj/kernel.asm	/^c010383c:	0f b6 05 8d ca 14 c0 	movzbl 0xc014ca8d,%eax$/;"	l
c0103843	obj/kernel.asm	/^c0103843:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c0103846	obj/kernel.asm	/^c0103846:	83 c8 09             	or     $0x9,%eax$/;"	l
c0103849	obj/kernel.asm	/^c0103849:	a2 8d ca 14 c0       	mov    %al,0xc014ca8d$/;"	l
c010384e	obj/kernel.asm	/^c010384e:	0f b6 05 8d ca 14 c0 	movzbl 0xc014ca8d,%eax$/;"	l
c0103855	obj/kernel.asm	/^c0103855:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c0103858	obj/kernel.asm	/^c0103858:	a2 8d ca 14 c0       	mov    %al,0xc014ca8d$/;"	l
c010385d	obj/kernel.asm	/^c010385d:	0f b6 05 8d ca 14 c0 	movzbl 0xc014ca8d,%eax$/;"	l
c0103864	obj/kernel.asm	/^c0103864:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
c0103867	obj/kernel.asm	/^c0103867:	a2 8d ca 14 c0       	mov    %al,0xc014ca8d$/;"	l
c010386c	obj/kernel.asm	/^c010386c:	0f b6 05 8d ca 14 c0 	movzbl 0xc014ca8d,%eax$/;"	l
c0103873	obj/kernel.asm	/^c0103873:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c0103876	obj/kernel.asm	/^c0103876:	a2 8d ca 14 c0       	mov    %al,0xc014ca8d$/;"	l
c010387b	obj/kernel.asm	/^c010387b:	0f b6 05 8e ca 14 c0 	movzbl 0xc014ca8e,%eax$/;"	l
c0103882	obj/kernel.asm	/^c0103882:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c0103885	obj/kernel.asm	/^c0103885:	a2 8e ca 14 c0       	mov    %al,0xc014ca8e$/;"	l
c010388a	obj/kernel.asm	/^c010388a:	0f b6 05 8e ca 14 c0 	movzbl 0xc014ca8e,%eax$/;"	l
c0103891	obj/kernel.asm	/^c0103891:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c0103894	obj/kernel.asm	/^c0103894:	a2 8e ca 14 c0       	mov    %al,0xc014ca8e$/;"	l
c0103899	obj/kernel.asm	/^c0103899:	0f b6 05 8e ca 14 c0 	movzbl 0xc014ca8e,%eax$/;"	l
c01038a0	obj/kernel.asm	/^c01038a0:	83 e0 df             	and    $0xffffffdf,%eax$/;"	l
c01038a3	obj/kernel.asm	/^c01038a3:	a2 8e ca 14 c0       	mov    %al,0xc014ca8e$/;"	l
c01038a8	obj/kernel.asm	/^c01038a8:	0f b6 05 8e ca 14 c0 	movzbl 0xc014ca8e,%eax$/;"	l
c01038af	obj/kernel.asm	/^c01038af:	83 c8 40             	or     $0x40,%eax$/;"	l
c01038b2	obj/kernel.asm	/^c01038b2:	a2 8e ca 14 c0       	mov    %al,0xc014ca8e$/;"	l
c01038b7	obj/kernel.asm	/^c01038b7:	0f b6 05 8e ca 14 c0 	movzbl 0xc014ca8e,%eax$/;"	l
c01038be	obj/kernel.asm	/^c01038be:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c01038c1	obj/kernel.asm	/^c01038c1:	a2 8e ca 14 c0       	mov    %al,0xc014ca8e$/;"	l
c01038c6	obj/kernel.asm	/^c01038c6:	b8 00 e0 14 c0       	mov    $0xc014e000,%eax$/;"	l
c01038cb	obj/kernel.asm	/^c01038cb:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c01038ce	obj/kernel.asm	/^c01038ce:	a2 8f ca 14 c0       	mov    %al,0xc014ca8f$/;"	l
c01038d3	obj/kernel.asm	/^c01038d3:	68 90 ca 14 c0       	push   $0xc014ca90$/;"	l
c01038d8	obj/kernel.asm	/^c01038d8:	e8 df fe ff ff       	call   c01037bc <lgdt>$/;"	l
c01038dd	obj/kernel.asm	/^c01038dd:	83 c4 04             	add    $0x4,%esp$/;"	l
c01038e0	obj/kernel.asm	/^c01038e0:	66 c7 45 fe 28 00    	movw   $0x28,-0x2(%ebp)$/;"	l
c01038e6	obj/kernel.asm	/^c01038e6:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c01038ea	obj/kernel.asm	/^c01038ea:	0f 00 d8             	ltr    %ax$/;"	l
c01038ed	obj/kernel.asm	/^c01038ed:	c9                   	leave  $/;"	l
c01038ee	obj/kernel.asm	/^c01038ee:	c3                   	ret    $/;"	l
c01038ef	obj/kernel.asm	/^c01038ef <init_pmm_manager>:$/;"	l
c01038ef	obj/kernel.asm	/^c01038ef:	55                   	push   %ebp$/;"	l
c01038f0	obj/kernel.asm	/^c01038f0:	89 e5                	mov    %esp,%ebp$/;"	l
c01038f2	obj/kernel.asm	/^c01038f2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01038f5	obj/kernel.asm	/^c01038f5:	c7 05 10 12 15 c0 24 	movl   $0xc0115824,0xc0151210$/;"	l
c01038fc	obj/kernel.asm	/^c01038fc:	58 11 c0 $/;"	l
c01038ff	obj/kernel.asm	/^c01038ff:	a1 10 12 15 c0       	mov    0xc0151210,%eax$/;"	l
c0103904	obj/kernel.asm	/^c0103904:	8b 00                	mov    (%eax),%eax$/;"	l
c0103906	obj/kernel.asm	/^c0103906:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103909	obj/kernel.asm	/^c0103909:	50                   	push   %eax$/;"	l
c010390a	obj/kernel.asm	/^c010390a:	68 50 42 11 c0       	push   $0xc0114250$/;"	l
c010390f	obj/kernel.asm	/^c010390f:	e8 56 ca ff ff       	call   c010036a <cprintf>$/;"	l
c0103914	obj/kernel.asm	/^c0103914:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103917	obj/kernel.asm	/^c0103917:	a1 10 12 15 c0       	mov    0xc0151210,%eax$/;"	l
c010391c	obj/kernel.asm	/^c010391c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010391f	obj/kernel.asm	/^c010391f:	ff d0                	call   *%eax$/;"	l
c0103921	obj/kernel.asm	/^c0103921:	c9                   	leave  $/;"	l
c0103922	obj/kernel.asm	/^c0103922:	c3                   	ret    $/;"	l
c0103923	obj/kernel.asm	/^c0103923 <init_memmap>:$/;"	l
c0103923	obj/kernel.asm	/^c0103923:	55                   	push   %ebp$/;"	l
c0103924	obj/kernel.asm	/^c0103924:	89 e5                	mov    %esp,%ebp$/;"	l
c0103926	obj/kernel.asm	/^c0103926:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103929	obj/kernel.asm	/^c0103929:	a1 10 12 15 c0       	mov    0xc0151210,%eax$/;"	l
c010392e	obj/kernel.asm	/^c010392e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0103931	obj/kernel.asm	/^c0103931:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103934	obj/kernel.asm	/^c0103934:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0103937	obj/kernel.asm	/^c0103937:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010393a	obj/kernel.asm	/^c010393a:	ff d0                	call   *%eax$/;"	l
c010393c	obj/kernel.asm	/^c010393c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010393f	obj/kernel.asm	/^c010393f:	c9                   	leave  $/;"	l
c0103940	obj/kernel.asm	/^c0103940:	c3                   	ret    $/;"	l
c0103941	obj/kernel.asm	/^c0103941 <alloc_pages>:$/;"	l
c0103941	obj/kernel.asm	/^c0103941:	55                   	push   %ebp$/;"	l
c0103942	obj/kernel.asm	/^c0103942:	89 e5                	mov    %esp,%ebp$/;"	l
c0103944	obj/kernel.asm	/^c0103944:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103947	obj/kernel.asm	/^c0103947:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010394e	obj/kernel.asm	/^c010394e:	e8 2c fe ff ff       	call   c010377f <__intr_save>$/;"	l
c0103953	obj/kernel.asm	/^c0103953:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103956	obj/kernel.asm	/^c0103956:	a1 10 12 15 c0       	mov    0xc0151210,%eax$/;"	l
c010395b	obj/kernel.asm	/^c010395b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010395e	obj/kernel.asm	/^c010395e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103961	obj/kernel.asm	/^c0103961:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0103964	obj/kernel.asm	/^c0103964:	ff d0                	call   *%eax$/;"	l
c0103966	obj/kernel.asm	/^c0103966:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103969	obj/kernel.asm	/^c0103969:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010396c	obj/kernel.asm	/^c010396c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010396f	obj/kernel.asm	/^c010396f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0103972	obj/kernel.asm	/^c0103972:	e8 32 fe ff ff       	call   c01037a9 <__intr_restore>$/;"	l
c0103977	obj/kernel.asm	/^c0103977:	83 c4 10             	add    $0x10,%esp$/;"	l
c010397a	obj/kernel.asm	/^c010397a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010397e	obj/kernel.asm	/^c010397e:	75 28                	jne    c01039a8 <alloc_pages+0x67>$/;"	l
c0103980	obj/kernel.asm	/^c0103980:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
c0103984	obj/kernel.asm	/^c0103984:	77 22                	ja     c01039a8 <alloc_pages+0x67>$/;"	l
c0103986	obj/kernel.asm	/^c0103986:	a1 70 e0 14 c0       	mov    0xc014e070,%eax$/;"	l
c010398b	obj/kernel.asm	/^c010398b:	85 c0                	test   %eax,%eax$/;"	l
c010398d	obj/kernel.asm	/^c010398d:	74 19                	je     c01039a8 <alloc_pages+0x67>$/;"	l
c010398f	obj/kernel.asm	/^c010398f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0103992	obj/kernel.asm	/^c0103992:	a1 1c 12 15 c0       	mov    0xc015121c,%eax$/;"	l
c0103997	obj/kernel.asm	/^c0103997:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010399a	obj/kernel.asm	/^c010399a:	6a 00                	push   $0x0$/;"	l
c010399c	obj/kernel.asm	/^c010399c:	52                   	push   %edx$/;"	l
c010399d	obj/kernel.asm	/^c010399d:	50                   	push   %eax$/;"	l
c010399e	obj/kernel.asm	/^c010399e:	e8 ad 2b 00 00       	call   c0106550 <swap_out>$/;"	l
c01039a3	obj/kernel.asm	/^c01039a3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01039a6	obj/kernel.asm	/^c01039a6:	eb a6                	jmp    c010394e <alloc_pages+0xd>$/;"	l
c01039a8	obj/kernel.asm	/^c01039a8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01039ab	obj/kernel.asm	/^c01039ab:	c9                   	leave  $/;"	l
c01039ac	obj/kernel.asm	/^c01039ac:	c3                   	ret    $/;"	l
c01039ad	obj/kernel.asm	/^c01039ad <free_pages>:$/;"	l
c01039ad	obj/kernel.asm	/^c01039ad:	55                   	push   %ebp$/;"	l
c01039ae	obj/kernel.asm	/^c01039ae:	89 e5                	mov    %esp,%ebp$/;"	l
c01039b0	obj/kernel.asm	/^c01039b0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01039b3	obj/kernel.asm	/^c01039b3:	e8 c7 fd ff ff       	call   c010377f <__intr_save>$/;"	l
c01039b8	obj/kernel.asm	/^c01039b8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01039bb	obj/kernel.asm	/^c01039bb:	a1 10 12 15 c0       	mov    0xc0151210,%eax$/;"	l
c01039c0	obj/kernel.asm	/^c01039c0:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01039c3	obj/kernel.asm	/^c01039c3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01039c6	obj/kernel.asm	/^c01039c6:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01039c9	obj/kernel.asm	/^c01039c9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01039cc	obj/kernel.asm	/^c01039cc:	ff d0                	call   *%eax$/;"	l
c01039ce	obj/kernel.asm	/^c01039ce:	83 c4 10             	add    $0x10,%esp$/;"	l
c01039d1	obj/kernel.asm	/^c01039d1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01039d4	obj/kernel.asm	/^c01039d4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01039d7	obj/kernel.asm	/^c01039d7:	e8 cd fd ff ff       	call   c01037a9 <__intr_restore>$/;"	l
c01039dc	obj/kernel.asm	/^c01039dc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01039df	obj/kernel.asm	/^c01039df:	c9                   	leave  $/;"	l
c01039e0	obj/kernel.asm	/^c01039e0:	c3                   	ret    $/;"	l
c01039e1	obj/kernel.asm	/^c01039e1 <nr_free_pages>:$/;"	l
c01039e1	obj/kernel.asm	/^c01039e1:	55                   	push   %ebp$/;"	l
c01039e2	obj/kernel.asm	/^c01039e2:	89 e5                	mov    %esp,%ebp$/;"	l
c01039e4	obj/kernel.asm	/^c01039e4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01039e7	obj/kernel.asm	/^c01039e7:	e8 93 fd ff ff       	call   c010377f <__intr_save>$/;"	l
c01039ec	obj/kernel.asm	/^c01039ec:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01039ef	obj/kernel.asm	/^c01039ef:	a1 10 12 15 c0       	mov    0xc0151210,%eax$/;"	l
c01039f4	obj/kernel.asm	/^c01039f4:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c01039f7	obj/kernel.asm	/^c01039f7:	ff d0                	call   *%eax$/;"	l
c01039f9	obj/kernel.asm	/^c01039f9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01039fc	obj/kernel.asm	/^c01039fc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01039ff	obj/kernel.asm	/^c01039ff:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0103a02	obj/kernel.asm	/^c0103a02:	e8 a2 fd ff ff       	call   c01037a9 <__intr_restore>$/;"	l
c0103a07	obj/kernel.asm	/^c0103a07:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103a0a	obj/kernel.asm	/^c0103a0a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103a0d	obj/kernel.asm	/^c0103a0d:	c9                   	leave  $/;"	l
c0103a0e	obj/kernel.asm	/^c0103a0e:	c3                   	ret    $/;"	l
c0103a0f	obj/kernel.asm	/^c0103a0f <page_init>:$/;"	l
c0103a0f	obj/kernel.asm	/^c0103a0f:	55                   	push   %ebp$/;"	l
c0103a10	obj/kernel.asm	/^c0103a10:	89 e5                	mov    %esp,%ebp$/;"	l
c0103a12	obj/kernel.asm	/^c0103a12:	57                   	push   %edi$/;"	l
c0103a13	obj/kernel.asm	/^c0103a13:	56                   	push   %esi$/;"	l
c0103a14	obj/kernel.asm	/^c0103a14:	53                   	push   %ebx$/;"	l
c0103a15	obj/kernel.asm	/^c0103a15:	83 ec 7c             	sub    $0x7c,%esp$/;"	l
c0103a18	obj/kernel.asm	/^c0103a18:	c7 45 c4 00 80 00 c0 	movl   $0xc0008000,-0x3c(%ebp)$/;"	l
c0103a1f	obj/kernel.asm	/^c0103a1f:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
c0103a26	obj/kernel.asm	/^c0103a26:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0103a2d	obj/kernel.asm	/^c0103a2d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103a30	obj/kernel.asm	/^c0103a30:	68 67 42 11 c0       	push   $0xc0114267$/;"	l
c0103a35	obj/kernel.asm	/^c0103a35:	e8 30 c9 ff ff       	call   c010036a <cprintf>$/;"	l
c0103a3a	obj/kernel.asm	/^c0103a3a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103a3d	obj/kernel.asm	/^c0103a3d:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0103a44	obj/kernel.asm	/^c0103a44:	e9 fe 00 00 00       	jmp    c0103b47 <page_init+0x138>$/;"	l
c0103a49	obj/kernel.asm	/^c0103a49:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103a4c	obj/kernel.asm	/^c0103a4c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103a4f	obj/kernel.asm	/^c0103a4f:	89 d0                	mov    %edx,%eax$/;"	l
c0103a51	obj/kernel.asm	/^c0103a51:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a54	obj/kernel.asm	/^c0103a54:	01 d0                	add    %edx,%eax$/;"	l
c0103a56	obj/kernel.asm	/^c0103a56:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a59	obj/kernel.asm	/^c0103a59:	01 c8                	add    %ecx,%eax$/;"	l
c0103a5b	obj/kernel.asm	/^c0103a5b:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0103a5e	obj/kernel.asm	/^c0103a5e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103a61	obj/kernel.asm	/^c0103a61:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0103a64	obj/kernel.asm	/^c0103a64:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
c0103a67	obj/kernel.asm	/^c0103a67:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103a6a	obj/kernel.asm	/^c0103a6a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103a6d	obj/kernel.asm	/^c0103a6d:	89 d0                	mov    %edx,%eax$/;"	l
c0103a6f	obj/kernel.asm	/^c0103a6f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a72	obj/kernel.asm	/^c0103a72:	01 d0                	add    %edx,%eax$/;"	l
c0103a74	obj/kernel.asm	/^c0103a74:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a77	obj/kernel.asm	/^c0103a77:	01 c8                	add    %ecx,%eax$/;"	l
c0103a79	obj/kernel.asm	/^c0103a79:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0103a7c	obj/kernel.asm	/^c0103a7c:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c0103a7f	obj/kernel.asm	/^c0103a7f:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0103a82	obj/kernel.asm	/^c0103a82:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c0103a85	obj/kernel.asm	/^c0103a85:	01 c8                	add    %ecx,%eax$/;"	l
c0103a87	obj/kernel.asm	/^c0103a87:	11 da                	adc    %ebx,%edx$/;"	l
c0103a89	obj/kernel.asm	/^c0103a89:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0103a8c	obj/kernel.asm	/^c0103a8c:	89 55 b4             	mov    %edx,-0x4c(%ebp)$/;"	l
c0103a8f	obj/kernel.asm	/^c0103a8f:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103a92	obj/kernel.asm	/^c0103a92:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103a95	obj/kernel.asm	/^c0103a95:	89 d0                	mov    %edx,%eax$/;"	l
c0103a97	obj/kernel.asm	/^c0103a97:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a9a	obj/kernel.asm	/^c0103a9a:	01 d0                	add    %edx,%eax$/;"	l
c0103a9c	obj/kernel.asm	/^c0103a9c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a9f	obj/kernel.asm	/^c0103a9f:	01 c8                	add    %ecx,%eax$/;"	l
c0103aa1	obj/kernel.asm	/^c0103aa1:	83 c0 10             	add    $0x10,%eax$/;"	l
c0103aa4	obj/kernel.asm	/^c0103aa4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103aa7	obj/kernel.asm	/^c0103aa7:	89 45 84             	mov    %eax,-0x7c(%ebp)$/;"	l
c0103aaa	obj/kernel.asm	/^c0103aaa:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0103aad	obj/kernel.asm	/^c0103aad:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0103ab0	obj/kernel.asm	/^c0103ab0:	83 c0 ff             	add    $0xffffffff,%eax$/;"	l
c0103ab3	obj/kernel.asm	/^c0103ab3:	83 d2 ff             	adc    $0xffffffff,%edx$/;"	l
c0103ab6	obj/kernel.asm	/^c0103ab6:	89 c1                	mov    %eax,%ecx$/;"	l
c0103ab8	obj/kernel.asm	/^c0103ab8:	89 d3                	mov    %edx,%ebx$/;"	l
c0103aba	obj/kernel.asm	/^c0103aba:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0103abd	obj/kernel.asm	/^c0103abd:	89 55 80             	mov    %edx,-0x80(%ebp)$/;"	l
c0103ac0	obj/kernel.asm	/^c0103ac0:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103ac3	obj/kernel.asm	/^c0103ac3:	89 d0                	mov    %edx,%eax$/;"	l
c0103ac5	obj/kernel.asm	/^c0103ac5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103ac8	obj/kernel.asm	/^c0103ac8:	01 d0                	add    %edx,%eax$/;"	l
c0103aca	obj/kernel.asm	/^c0103aca:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103acd	obj/kernel.asm	/^c0103acd:	03 45 80             	add    -0x80(%ebp),%eax$/;"	l
c0103ad0	obj/kernel.asm	/^c0103ad0:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c0103ad3	obj/kernel.asm	/^c0103ad3:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0103ad6	obj/kernel.asm	/^c0103ad6:	ff 75 84             	pushl  -0x7c(%ebp)$/;"	l
c0103ad9	obj/kernel.asm	/^c0103ad9:	53                   	push   %ebx$/;"	l
c0103ada	obj/kernel.asm	/^c0103ada:	51                   	push   %ecx$/;"	l
c0103adb	obj/kernel.asm	/^c0103adb:	ff 75 bc             	pushl  -0x44(%ebp)$/;"	l
c0103ade	obj/kernel.asm	/^c0103ade:	ff 75 b8             	pushl  -0x48(%ebp)$/;"	l
c0103ae1	obj/kernel.asm	/^c0103ae1:	52                   	push   %edx$/;"	l
c0103ae2	obj/kernel.asm	/^c0103ae2:	50                   	push   %eax$/;"	l
c0103ae3	obj/kernel.asm	/^c0103ae3:	68 74 42 11 c0       	push   $0xc0114274$/;"	l
c0103ae8	obj/kernel.asm	/^c0103ae8:	e8 7d c8 ff ff       	call   c010036a <cprintf>$/;"	l
c0103aed	obj/kernel.asm	/^c0103aed:	83 c4 20             	add    $0x20,%esp$/;"	l
c0103af0	obj/kernel.asm	/^c0103af0:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103af3	obj/kernel.asm	/^c0103af3:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103af6	obj/kernel.asm	/^c0103af6:	89 d0                	mov    %edx,%eax$/;"	l
c0103af8	obj/kernel.asm	/^c0103af8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103afb	obj/kernel.asm	/^c0103afb:	01 d0                	add    %edx,%eax$/;"	l
c0103afd	obj/kernel.asm	/^c0103afd:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103b00	obj/kernel.asm	/^c0103b00:	01 c8                	add    %ecx,%eax$/;"	l
c0103b02	obj/kernel.asm	/^c0103b02:	83 c0 10             	add    $0x10,%eax$/;"	l
c0103b05	obj/kernel.asm	/^c0103b05:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103b08	obj/kernel.asm	/^c0103b08:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0103b0b	obj/kernel.asm	/^c0103b0b:	75 36                	jne    c0103b43 <page_init+0x134>$/;"	l
c0103b0d	obj/kernel.asm	/^c0103b0d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103b10	obj/kernel.asm	/^c0103b10:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0103b13	obj/kernel.asm	/^c0103b13:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c0103b16	obj/kernel.asm	/^c0103b16:	77 2b                	ja     c0103b43 <page_init+0x134>$/;"	l
c0103b18	obj/kernel.asm	/^c0103b18:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c0103b1b	obj/kernel.asm	/^c0103b1b:	72 05                	jb     c0103b22 <page_init+0x113>$/;"	l
c0103b1d	obj/kernel.asm	/^c0103b1d:	3b 45 b0             	cmp    -0x50(%ebp),%eax$/;"	l
c0103b20	obj/kernel.asm	/^c0103b20:	73 21                	jae    c0103b43 <page_init+0x134>$/;"	l
c0103b22	obj/kernel.asm	/^c0103b22:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0103b26	obj/kernel.asm	/^c0103b26:	77 1b                	ja     c0103b43 <page_init+0x134>$/;"	l
c0103b28	obj/kernel.asm	/^c0103b28:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0103b2c	obj/kernel.asm	/^c0103b2c:	72 09                	jb     c0103b37 <page_init+0x128>$/;"	l
c0103b2e	obj/kernel.asm	/^c0103b2e:	81 7d b8 ff ff ff 37 	cmpl   $0x37ffffff,-0x48(%ebp)$/;"	l
c0103b35	obj/kernel.asm	/^c0103b35:	77 0c                	ja     c0103b43 <page_init+0x134>$/;"	l
c0103b37	obj/kernel.asm	/^c0103b37:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0103b3a	obj/kernel.asm	/^c0103b3a:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0103b3d	obj/kernel.asm	/^c0103b3d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0103b40	obj/kernel.asm	/^c0103b40:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0103b43	obj/kernel.asm	/^c0103b43:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0103b47	obj/kernel.asm	/^c0103b47:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0103b4a	obj/kernel.asm	/^c0103b4a:	8b 00                	mov    (%eax),%eax$/;"	l
c0103b4c	obj/kernel.asm	/^c0103b4c:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c0103b4f	obj/kernel.asm	/^c0103b4f:	0f 8f f4 fe ff ff    	jg     c0103a49 <page_init+0x3a>$/;"	l
c0103b55	obj/kernel.asm	/^c0103b55:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0103b59	obj/kernel.asm	/^c0103b59:	72 1d                	jb     c0103b78 <page_init+0x169>$/;"	l
c0103b5b	obj/kernel.asm	/^c0103b5b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0103b5f	obj/kernel.asm	/^c0103b5f:	77 09                	ja     c0103b6a <page_init+0x15b>$/;"	l
c0103b61	obj/kernel.asm	/^c0103b61:	81 7d e0 00 00 00 38 	cmpl   $0x38000000,-0x20(%ebp)$/;"	l
c0103b68	obj/kernel.asm	/^c0103b68:	76 0e                	jbe    c0103b78 <page_init+0x169>$/;"	l
c0103b6a	obj/kernel.asm	/^c0103b6a:	c7 45 e0 00 00 00 38 	movl   $0x38000000,-0x20(%ebp)$/;"	l
c0103b71	obj/kernel.asm	/^c0103b71:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0103b78	obj/kernel.asm	/^c0103b78:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103b7b	obj/kernel.asm	/^c0103b7b:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0103b7e	obj/kernel.asm	/^c0103b7e:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c0103b82	obj/kernel.asm	/^c0103b82:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0103b85	obj/kernel.asm	/^c0103b85:	a3 c0 df 14 c0       	mov    %eax,0xc014dfc0$/;"	l
c0103b8a	obj/kernel.asm	/^c0103b8a:	c7 45 ac 00 10 00 00 	movl   $0x1000,-0x54(%ebp)$/;"	l
c0103b91	obj/kernel.asm	/^c0103b91:	b8 e4 13 15 c0       	mov    $0xc01513e4,%eax$/;"	l
c0103b96	obj/kernel.asm	/^c0103b96:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0103b99	obj/kernel.asm	/^c0103b99:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c0103b9c	obj/kernel.asm	/^c0103b9c:	01 d0                	add    %edx,%eax$/;"	l
c0103b9e	obj/kernel.asm	/^c0103b9e:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c0103ba1	obj/kernel.asm	/^c0103ba1:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0103ba4	obj/kernel.asm	/^c0103ba4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103ba9	obj/kernel.asm	/^c0103ba9:	f7 75 ac             	divl   -0x54(%ebp)$/;"	l
c0103bac	obj/kernel.asm	/^c0103bac:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0103baf	obj/kernel.asm	/^c0103baf:	29 d0                	sub    %edx,%eax$/;"	l
c0103bb1	obj/kernel.asm	/^c0103bb1:	a3 18 12 15 c0       	mov    %eax,0xc0151218$/;"	l
c0103bb6	obj/kernel.asm	/^c0103bb6:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0103bbd	obj/kernel.asm	/^c0103bbd:	eb 27                	jmp    c0103be6 <page_init+0x1d7>$/;"	l
c0103bbf	obj/kernel.asm	/^c0103bbf:	a1 18 12 15 c0       	mov    0xc0151218,%eax$/;"	l
c0103bc4	obj/kernel.asm	/^c0103bc4:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103bc7	obj/kernel.asm	/^c0103bc7:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0103bca	obj/kernel.asm	/^c0103bca:	01 d0                	add    %edx,%eax$/;"	l
c0103bcc	obj/kernel.asm	/^c0103bcc:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103bcf	obj/kernel.asm	/^c0103bcf:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)$/;"	l
c0103bd6	obj/kernel.asm	/^c0103bd6:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c0103bd9	obj/kernel.asm	/^c0103bd9:	8b 45 8c             	mov    -0x74(%ebp),%eax$/;"	l
c0103bdc	obj/kernel.asm	/^c0103bdc:	8b 55 90             	mov    -0x70(%ebp),%edx$/;"	l
c0103bdf	obj/kernel.asm	/^c0103bdf:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0103be2	obj/kernel.asm	/^c0103be2:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0103be6	obj/kernel.asm	/^c0103be6:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103be9	obj/kernel.asm	/^c0103be9:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c0103bee	obj/kernel.asm	/^c0103bee:	39 c2                	cmp    %eax,%edx$/;"	l
c0103bf0	obj/kernel.asm	/^c0103bf0:	72 cd                	jb     c0103bbf <page_init+0x1b0>$/;"	l
c0103bf2	obj/kernel.asm	/^c0103bf2:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c0103bf7	obj/kernel.asm	/^c0103bf7:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0103bfa	obj/kernel.asm	/^c0103bfa:	89 c2                	mov    %eax,%edx$/;"	l
c0103bfc	obj/kernel.asm	/^c0103bfc:	a1 18 12 15 c0       	mov    0xc0151218,%eax$/;"	l
c0103c01	obj/kernel.asm	/^c0103c01:	01 d0                	add    %edx,%eax$/;"	l
c0103c03	obj/kernel.asm	/^c0103c03:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c0103c06	obj/kernel.asm	/^c0103c06:	81 7d a4 ff ff ff bf 	cmpl   $0xbfffffff,-0x5c(%ebp)$/;"	l
c0103c0d	obj/kernel.asm	/^c0103c0d:	77 17                	ja     c0103c26 <page_init+0x217>$/;"	l
c0103c0f	obj/kernel.asm	/^c0103c0f:	ff 75 a4             	pushl  -0x5c(%ebp)$/;"	l
c0103c12	obj/kernel.asm	/^c0103c12:	68 a4 42 11 c0       	push   $0xc01142a4$/;"	l
c0103c17	obj/kernel.asm	/^c0103c17:	68 e9 00 00 00       	push   $0xe9$/;"	l
c0103c1c	obj/kernel.asm	/^c0103c1c:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0103c21	obj/kernel.asm	/^c0103c21:	e8 a9 c8 ff ff       	call   c01004cf <__panic>$/;"	l
c0103c26	obj/kernel.asm	/^c0103c26:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0103c29	obj/kernel.asm	/^c0103c29:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0103c2e	obj/kernel.asm	/^c0103c2e:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c0103c31	obj/kernel.asm	/^c0103c31:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0103c38	obj/kernel.asm	/^c0103c38:	e9 6a 01 00 00       	jmp    c0103da7 <page_init+0x398>$/;"	l
c0103c3d	obj/kernel.asm	/^c0103c3d:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103c40	obj/kernel.asm	/^c0103c40:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103c43	obj/kernel.asm	/^c0103c43:	89 d0                	mov    %edx,%eax$/;"	l
c0103c45	obj/kernel.asm	/^c0103c45:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103c48	obj/kernel.asm	/^c0103c48:	01 d0                	add    %edx,%eax$/;"	l
c0103c4a	obj/kernel.asm	/^c0103c4a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103c4d	obj/kernel.asm	/^c0103c4d:	01 c8                	add    %ecx,%eax$/;"	l
c0103c4f	obj/kernel.asm	/^c0103c4f:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0103c52	obj/kernel.asm	/^c0103c52:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103c55	obj/kernel.asm	/^c0103c55:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103c58	obj/kernel.asm	/^c0103c58:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0103c5b	obj/kernel.asm	/^c0103c5b:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103c5e	obj/kernel.asm	/^c0103c5e:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103c61	obj/kernel.asm	/^c0103c61:	89 d0                	mov    %edx,%eax$/;"	l
c0103c63	obj/kernel.asm	/^c0103c63:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103c66	obj/kernel.asm	/^c0103c66:	01 d0                	add    %edx,%eax$/;"	l
c0103c68	obj/kernel.asm	/^c0103c68:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103c6b	obj/kernel.asm	/^c0103c6b:	01 c8                	add    %ecx,%eax$/;"	l
c0103c6d	obj/kernel.asm	/^c0103c6d:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0103c70	obj/kernel.asm	/^c0103c70:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c0103c73	obj/kernel.asm	/^c0103c73:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103c76	obj/kernel.asm	/^c0103c76:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103c79	obj/kernel.asm	/^c0103c79:	01 c8                	add    %ecx,%eax$/;"	l
c0103c7b	obj/kernel.asm	/^c0103c7b:	11 da                	adc    %ebx,%edx$/;"	l
c0103c7d	obj/kernel.asm	/^c0103c7d:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0103c80	obj/kernel.asm	/^c0103c80:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c0103c83	obj/kernel.asm	/^c0103c83:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103c86	obj/kernel.asm	/^c0103c86:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103c89	obj/kernel.asm	/^c0103c89:	89 d0                	mov    %edx,%eax$/;"	l
c0103c8b	obj/kernel.asm	/^c0103c8b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103c8e	obj/kernel.asm	/^c0103c8e:	01 d0                	add    %edx,%eax$/;"	l
c0103c90	obj/kernel.asm	/^c0103c90:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103c93	obj/kernel.asm	/^c0103c93:	01 c8                	add    %ecx,%eax$/;"	l
c0103c95	obj/kernel.asm	/^c0103c95:	83 c0 10             	add    $0x10,%eax$/;"	l
c0103c98	obj/kernel.asm	/^c0103c98:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103c9b	obj/kernel.asm	/^c0103c9b:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0103c9e	obj/kernel.asm	/^c0103c9e:	0f 85 ff 00 00 00    	jne    c0103da3 <page_init+0x394>$/;"	l
c0103ca4	obj/kernel.asm	/^c0103ca4:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0103ca7	obj/kernel.asm	/^c0103ca7:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103cac	obj/kernel.asm	/^c0103cac:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0103caf	obj/kernel.asm	/^c0103caf:	72 17                	jb     c0103cc8 <page_init+0x2b9>$/;"	l
c0103cb1	obj/kernel.asm	/^c0103cb1:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0103cb4	obj/kernel.asm	/^c0103cb4:	77 05                	ja     c0103cbb <page_init+0x2ac>$/;"	l
c0103cb6	obj/kernel.asm	/^c0103cb6:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c0103cb9	obj/kernel.asm	/^c0103cb9:	76 0d                	jbe    c0103cc8 <page_init+0x2b9>$/;"	l
c0103cbb	obj/kernel.asm	/^c0103cbb:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0103cbe	obj/kernel.asm	/^c0103cbe:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103cc1	obj/kernel.asm	/^c0103cc1:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c0103cc8	obj/kernel.asm	/^c0103cc8:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0103ccc	obj/kernel.asm	/^c0103ccc:	72 1d                	jb     c0103ceb <page_init+0x2dc>$/;"	l
c0103cce	obj/kernel.asm	/^c0103cce:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0103cd2	obj/kernel.asm	/^c0103cd2:	77 09                	ja     c0103cdd <page_init+0x2ce>$/;"	l
c0103cd4	obj/kernel.asm	/^c0103cd4:	81 7d c8 00 00 00 38 	cmpl   $0x38000000,-0x38(%ebp)$/;"	l
c0103cdb	obj/kernel.asm	/^c0103cdb:	76 0e                	jbe    c0103ceb <page_init+0x2dc>$/;"	l
c0103cdd	obj/kernel.asm	/^c0103cdd:	c7 45 c8 00 00 00 38 	movl   $0x38000000,-0x38(%ebp)$/;"	l
c0103ce4	obj/kernel.asm	/^c0103ce4:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
c0103ceb	obj/kernel.asm	/^c0103ceb:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103cee	obj/kernel.asm	/^c0103cee:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103cf1	obj/kernel.asm	/^c0103cf1:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103cf4	obj/kernel.asm	/^c0103cf4:	0f 87 a9 00 00 00    	ja     c0103da3 <page_init+0x394>$/;"	l
c0103cfa	obj/kernel.asm	/^c0103cfa:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103cfd	obj/kernel.asm	/^c0103cfd:	72 09                	jb     c0103d08 <page_init+0x2f9>$/;"	l
c0103cff	obj/kernel.asm	/^c0103cff:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0103d02	obj/kernel.asm	/^c0103d02:	0f 83 9b 00 00 00    	jae    c0103da3 <page_init+0x394>$/;"	l
c0103d08	obj/kernel.asm	/^c0103d08:	c7 45 9c 00 10 00 00 	movl   $0x1000,-0x64(%ebp)$/;"	l
c0103d0f	obj/kernel.asm	/^c0103d0f:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0103d12	obj/kernel.asm	/^c0103d12:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c0103d15	obj/kernel.asm	/^c0103d15:	01 d0                	add    %edx,%eax$/;"	l
c0103d17	obj/kernel.asm	/^c0103d17:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0103d1a	obj/kernel.asm	/^c0103d1a:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0103d1d	obj/kernel.asm	/^c0103d1d:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0103d20	obj/kernel.asm	/^c0103d20:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103d25	obj/kernel.asm	/^c0103d25:	f7 75 9c             	divl   -0x64(%ebp)$/;"	l
c0103d28	obj/kernel.asm	/^c0103d28:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0103d2b	obj/kernel.asm	/^c0103d2b:	29 d0                	sub    %edx,%eax$/;"	l
c0103d2d	obj/kernel.asm	/^c0103d2d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103d32	obj/kernel.asm	/^c0103d32:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103d35	obj/kernel.asm	/^c0103d35:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0103d38	obj/kernel.asm	/^c0103d38:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0103d3b	obj/kernel.asm	/^c0103d3b:	89 45 94             	mov    %eax,-0x6c(%ebp)$/;"	l
c0103d3e	obj/kernel.asm	/^c0103d3e:	8b 45 94             	mov    -0x6c(%ebp),%eax$/;"	l
c0103d41	obj/kernel.asm	/^c0103d41:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103d46	obj/kernel.asm	/^c0103d46:	89 c3                	mov    %eax,%ebx$/;"	l
c0103d48	obj/kernel.asm	/^c0103d48:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
c0103d4e	obj/kernel.asm	/^c0103d4e:	89 de                	mov    %ebx,%esi$/;"	l
c0103d50	obj/kernel.asm	/^c0103d50:	89 d0                	mov    %edx,%eax$/;"	l
c0103d52	obj/kernel.asm	/^c0103d52:	83 e0 00             	and    $0x0,%eax$/;"	l
c0103d55	obj/kernel.asm	/^c0103d55:	89 c7                	mov    %eax,%edi$/;"	l
c0103d57	obj/kernel.asm	/^c0103d57:	89 75 c8             	mov    %esi,-0x38(%ebp)$/;"	l
c0103d5a	obj/kernel.asm	/^c0103d5a:	89 7d cc             	mov    %edi,-0x34(%ebp)$/;"	l
c0103d5d	obj/kernel.asm	/^c0103d5d:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103d60	obj/kernel.asm	/^c0103d60:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103d63	obj/kernel.asm	/^c0103d63:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103d66	obj/kernel.asm	/^c0103d66:	77 3b                	ja     c0103da3 <page_init+0x394>$/;"	l
c0103d68	obj/kernel.asm	/^c0103d68:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103d6b	obj/kernel.asm	/^c0103d6b:	72 05                	jb     c0103d72 <page_init+0x363>$/;"	l
c0103d6d	obj/kernel.asm	/^c0103d6d:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0103d70	obj/kernel.asm	/^c0103d70:	73 31                	jae    c0103da3 <page_init+0x394>$/;"	l
c0103d72	obj/kernel.asm	/^c0103d72:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0103d75	obj/kernel.asm	/^c0103d75:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0103d78	obj/kernel.asm	/^c0103d78:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
c0103d7b	obj/kernel.asm	/^c0103d7b:	1b 55 d4             	sbb    -0x2c(%ebp),%edx$/;"	l
c0103d7e	obj/kernel.asm	/^c0103d7e:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c0103d82	obj/kernel.asm	/^c0103d82:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0103d85	obj/kernel.asm	/^c0103d85:	89 c3                	mov    %eax,%ebx$/;"	l
c0103d87	obj/kernel.asm	/^c0103d87:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103d8a	obj/kernel.asm	/^c0103d8a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103d8d	obj/kernel.asm	/^c0103d8d:	50                   	push   %eax$/;"	l
c0103d8e	obj/kernel.asm	/^c0103d8e:	e8 cf f8 ff ff       	call   c0103662 <pa2page>$/;"	l
c0103d93	obj/kernel.asm	/^c0103d93:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103d96	obj/kernel.asm	/^c0103d96:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103d99	obj/kernel.asm	/^c0103d99:	53                   	push   %ebx$/;"	l
c0103d9a	obj/kernel.asm	/^c0103d9a:	50                   	push   %eax$/;"	l
c0103d9b	obj/kernel.asm	/^c0103d9b:	e8 83 fb ff ff       	call   c0103923 <init_memmap>$/;"	l
c0103da0	obj/kernel.asm	/^c0103da0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103da3	obj/kernel.asm	/^c0103da3:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0103da7	obj/kernel.asm	/^c0103da7:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0103daa	obj/kernel.asm	/^c0103daa:	8b 00                	mov    (%eax),%eax$/;"	l
c0103dac	obj/kernel.asm	/^c0103dac:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c0103daf	obj/kernel.asm	/^c0103daf:	0f 8f 88 fe ff ff    	jg     c0103c3d <page_init+0x22e>$/;"	l
c0103db5	obj/kernel.asm	/^c0103db5:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
c0103db8	obj/kernel.asm	/^c0103db8:	5b                   	pop    %ebx$/;"	l
c0103db9	obj/kernel.asm	/^c0103db9:	5e                   	pop    %esi$/;"	l
c0103dba	obj/kernel.asm	/^c0103dba:	5f                   	pop    %edi$/;"	l
c0103dbb	obj/kernel.asm	/^c0103dbb:	5d                   	pop    %ebp$/;"	l
c0103dbc	obj/kernel.asm	/^c0103dbc:	c3                   	ret    $/;"	l
c0103dbd	obj/kernel.asm	/^c0103dbd <enable_paging>:$/;"	l
c0103dbd	obj/kernel.asm	/^c0103dbd:	55                   	push   %ebp$/;"	l
c0103dbe	obj/kernel.asm	/^c0103dbe:	89 e5                	mov    %esp,%ebp$/;"	l
c0103dc0	obj/kernel.asm	/^c0103dc0:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0103dc3	obj/kernel.asm	/^c0103dc3:	a1 14 12 15 c0       	mov    0xc0151214,%eax$/;"	l
c0103dc8	obj/kernel.asm	/^c0103dc8:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0103dcb	obj/kernel.asm	/^c0103dcb:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0103dce	obj/kernel.asm	/^c0103dce:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0103dd1	obj/kernel.asm	/^c0103dd1:	0f 20 c0             	mov    %cr0,%eax$/;"	l
c0103dd4	obj/kernel.asm	/^c0103dd4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103dd7	obj/kernel.asm	/^c0103dd7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103dda	obj/kernel.asm	/^c0103dda:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0103ddd	obj/kernel.asm	/^c0103ddd:	81 4d fc 2f 00 05 80 	orl    $0x8005002f,-0x4(%ebp)$/;"	l
c0103de4	obj/kernel.asm	/^c0103de4:	83 65 fc f3          	andl   $0xfffffff3,-0x4(%ebp)$/;"	l
c0103de8	obj/kernel.asm	/^c0103de8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0103deb	obj/kernel.asm	/^c0103deb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103dee	obj/kernel.asm	/^c0103dee:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103df1	obj/kernel.asm	/^c0103df1:	0f 22 c0             	mov    %eax,%cr0$/;"	l
c0103df4	obj/kernel.asm	/^c0103df4:	c9                   	leave  $/;"	l
c0103df5	obj/kernel.asm	/^c0103df5:	c3                   	ret    $/;"	l
c0103df6	obj/kernel.asm	/^c0103df6 <boot_map_segment>:$/;"	l
c0103df6	obj/kernel.asm	/^c0103df6:	55                   	push   %ebp$/;"	l
c0103df7	obj/kernel.asm	/^c0103df7:	89 e5                	mov    %esp,%ebp$/;"	l
c0103df9	obj/kernel.asm	/^c0103df9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0103dfc	obj/kernel.asm	/^c0103dfc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103dff	obj/kernel.asm	/^c0103dff:	33 45 14             	xor    0x14(%ebp),%eax$/;"	l
c0103e02	obj/kernel.asm	/^c0103e02:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0103e07	obj/kernel.asm	/^c0103e07:	85 c0                	test   %eax,%eax$/;"	l
c0103e09	obj/kernel.asm	/^c0103e09:	74 19                	je     c0103e24 <boot_map_segment+0x2e>$/;"	l
c0103e0b	obj/kernel.asm	/^c0103e0b:	68 d6 42 11 c0       	push   $0xc01142d6$/;"	l
c0103e10	obj/kernel.asm	/^c0103e10:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0103e15	obj/kernel.asm	/^c0103e15:	68 12 01 00 00       	push   $0x112$/;"	l
c0103e1a	obj/kernel.asm	/^c0103e1a:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0103e1f	obj/kernel.asm	/^c0103e1f:	e8 ab c6 ff ff       	call   c01004cf <__panic>$/;"	l
c0103e24	obj/kernel.asm	/^c0103e24:	c7 45 f0 00 10 00 00 	movl   $0x1000,-0x10(%ebp)$/;"	l
c0103e2b	obj/kernel.asm	/^c0103e2b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103e2e	obj/kernel.asm	/^c0103e2e:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0103e33	obj/kernel.asm	/^c0103e33:	89 c2                	mov    %eax,%edx$/;"	l
c0103e35	obj/kernel.asm	/^c0103e35:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0103e38	obj/kernel.asm	/^c0103e38:	01 c2                	add    %eax,%edx$/;"	l
c0103e3a	obj/kernel.asm	/^c0103e3a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103e3d	obj/kernel.asm	/^c0103e3d:	01 d0                	add    %edx,%eax$/;"	l
c0103e3f	obj/kernel.asm	/^c0103e3f:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0103e42	obj/kernel.asm	/^c0103e42:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103e45	obj/kernel.asm	/^c0103e45:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103e48	obj/kernel.asm	/^c0103e48:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103e4d	obj/kernel.asm	/^c0103e4d:	f7 75 f0             	divl   -0x10(%ebp)$/;"	l
c0103e50	obj/kernel.asm	/^c0103e50:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103e53	obj/kernel.asm	/^c0103e53:	29 d0                	sub    %edx,%eax$/;"	l
c0103e55	obj/kernel.asm	/^c0103e55:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0103e58	obj/kernel.asm	/^c0103e58:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103e5b	obj/kernel.asm	/^c0103e5b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103e5e	obj/kernel.asm	/^c0103e5e:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0103e61	obj/kernel.asm	/^c0103e61:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0103e64	obj/kernel.asm	/^c0103e64:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0103e69	obj/kernel.asm	/^c0103e69:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0103e6c	obj/kernel.asm	/^c0103e6c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0103e6f	obj/kernel.asm	/^c0103e6f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0103e72	obj/kernel.asm	/^c0103e72:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0103e75	obj/kernel.asm	/^c0103e75:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0103e7a	obj/kernel.asm	/^c0103e7a:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
c0103e7d	obj/kernel.asm	/^c0103e7d:	eb 57                	jmp    c0103ed6 <boot_map_segment+0xe0>$/;"	l
c0103e7f	obj/kernel.asm	/^c0103e7f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103e82	obj/kernel.asm	/^c0103e82:	6a 01                	push   $0x1$/;"	l
c0103e84	obj/kernel.asm	/^c0103e84:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0103e87	obj/kernel.asm	/^c0103e87:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0103e8a	obj/kernel.asm	/^c0103e8a:	e8 9b 01 00 00       	call   c010402a <get_pte>$/;"	l
c0103e8f	obj/kernel.asm	/^c0103e8f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103e92	obj/kernel.asm	/^c0103e92:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0103e95	obj/kernel.asm	/^c0103e95:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0103e99	obj/kernel.asm	/^c0103e99:	75 19                	jne    c0103eb4 <boot_map_segment+0xbe>$/;"	l
c0103e9b	obj/kernel.asm	/^c0103e9b:	68 02 43 11 c0       	push   $0xc0114302$/;"	l
c0103ea0	obj/kernel.asm	/^c0103ea0:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0103ea5	obj/kernel.asm	/^c0103ea5:	68 18 01 00 00       	push   $0x118$/;"	l
c0103eaa	obj/kernel.asm	/^c0103eaa:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0103eaf	obj/kernel.asm	/^c0103eaf:	e8 1b c6 ff ff       	call   c01004cf <__panic>$/;"	l
c0103eb4	obj/kernel.asm	/^c0103eb4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0103eb7	obj/kernel.asm	/^c0103eb7:	0b 45 18             	or     0x18(%ebp),%eax$/;"	l
c0103eba	obj/kernel.asm	/^c0103eba:	83 c8 01             	or     $0x1,%eax$/;"	l
c0103ebd	obj/kernel.asm	/^c0103ebd:	89 c2                	mov    %eax,%edx$/;"	l
c0103ebf	obj/kernel.asm	/^c0103ebf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103ec2	obj/kernel.asm	/^c0103ec2:	89 10                	mov    %edx,(%eax)$/;"	l
c0103ec4	obj/kernel.asm	/^c0103ec4:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0103ec8	obj/kernel.asm	/^c0103ec8:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c0103ecf	obj/kernel.asm	/^c0103ecf:	81 45 14 00 10 00 00 	addl   $0x1000,0x14(%ebp)$/;"	l
c0103ed6	obj/kernel.asm	/^c0103ed6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103eda	obj/kernel.asm	/^c0103eda:	75 a3                	jne    c0103e7f <boot_map_segment+0x89>$/;"	l
c0103edc	obj/kernel.asm	/^c0103edc:	c9                   	leave  $/;"	l
c0103edd	obj/kernel.asm	/^c0103edd:	c3                   	ret    $/;"	l
c0103ede	obj/kernel.asm	/^c0103ede <boot_alloc_page>:$/;"	l
c0103ede	obj/kernel.asm	/^c0103ede:	55                   	push   %ebp$/;"	l
c0103edf	obj/kernel.asm	/^c0103edf:	89 e5                	mov    %esp,%ebp$/;"	l
c0103ee1	obj/kernel.asm	/^c0103ee1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103ee4	obj/kernel.asm	/^c0103ee4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103ee7	obj/kernel.asm	/^c0103ee7:	6a 01                	push   $0x1$/;"	l
c0103ee9	obj/kernel.asm	/^c0103ee9:	e8 53 fa ff ff       	call   c0103941 <alloc_pages>$/;"	l
c0103eee	obj/kernel.asm	/^c0103eee:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103ef1	obj/kernel.asm	/^c0103ef1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103ef4	obj/kernel.asm	/^c0103ef4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103ef8	obj/kernel.asm	/^c0103ef8:	75 17                	jne    c0103f11 <boot_alloc_page+0x33>$/;"	l
c0103efa	obj/kernel.asm	/^c0103efa:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103efd	obj/kernel.asm	/^c0103efd:	68 0f 43 11 c0       	push   $0xc011430f$/;"	l
c0103f02	obj/kernel.asm	/^c0103f02:	68 24 01 00 00       	push   $0x124$/;"	l
c0103f07	obj/kernel.asm	/^c0103f07:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0103f0c	obj/kernel.asm	/^c0103f0c:	e8 be c5 ff ff       	call   c01004cf <__panic>$/;"	l
c0103f11	obj/kernel.asm	/^c0103f11:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103f14	obj/kernel.asm	/^c0103f14:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0103f17	obj/kernel.asm	/^c0103f17:	e8 83 f7 ff ff       	call   c010369f <page2kva>$/;"	l
c0103f1c	obj/kernel.asm	/^c0103f1c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103f1f	obj/kernel.asm	/^c0103f1f:	c9                   	leave  $/;"	l
c0103f20	obj/kernel.asm	/^c0103f20:	c3                   	ret    $/;"	l
c0103f21	obj/kernel.asm	/^c0103f21 <pmm_init>:$/;"	l
c0103f21	obj/kernel.asm	/^c0103f21:	55                   	push   %ebp$/;"	l
c0103f22	obj/kernel.asm	/^c0103f22:	89 e5                	mov    %esp,%ebp$/;"	l
c0103f24	obj/kernel.asm	/^c0103f24:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103f27	obj/kernel.asm	/^c0103f27:	e8 c3 f9 ff ff       	call   c01038ef <init_pmm_manager>$/;"	l
c0103f2c	obj/kernel.asm	/^c0103f2c:	e8 de fa ff ff       	call   c0103a0f <page_init>$/;"	l
c0103f31	obj/kernel.asm	/^c0103f31:	e8 30 08 00 00       	call   c0104766 <check_alloc_page>$/;"	l
c0103f36	obj/kernel.asm	/^c0103f36:	e8 a3 ff ff ff       	call   c0103ede <boot_alloc_page>$/;"	l
c0103f3b	obj/kernel.asm	/^c0103f3b:	a3 c4 df 14 c0       	mov    %eax,0xc014dfc4$/;"	l
c0103f40	obj/kernel.asm	/^c0103f40:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0103f45	obj/kernel.asm	/^c0103f45:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103f48	obj/kernel.asm	/^c0103f48:	68 00 10 00 00       	push   $0x1000$/;"	l
c0103f4d	obj/kernel.asm	/^c0103f4d:	6a 00                	push   $0x0$/;"	l
c0103f4f	obj/kernel.asm	/^c0103f4f:	50                   	push   %eax$/;"	l
c0103f50	obj/kernel.asm	/^c0103f50:	e8 97 f0 00 00       	call   c0112fec <memset>$/;"	l
c0103f55	obj/kernel.asm	/^c0103f55:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103f58	obj/kernel.asm	/^c0103f58:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0103f5d	obj/kernel.asm	/^c0103f5d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103f60	obj/kernel.asm	/^c0103f60:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0103f67	obj/kernel.asm	/^c0103f67:	77 17                	ja     c0103f80 <pmm_init+0x5f>$/;"	l
c0103f69	obj/kernel.asm	/^c0103f69:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0103f6c	obj/kernel.asm	/^c0103f6c:	68 a4 42 11 c0       	push   $0xc01142a4$/;"	l
c0103f71	obj/kernel.asm	/^c0103f71:	68 3e 01 00 00       	push   $0x13e$/;"	l
c0103f76	obj/kernel.asm	/^c0103f76:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0103f7b	obj/kernel.asm	/^c0103f7b:	e8 4f c5 ff ff       	call   c01004cf <__panic>$/;"	l
c0103f80	obj/kernel.asm	/^c0103f80:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103f83	obj/kernel.asm	/^c0103f83:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0103f88	obj/kernel.asm	/^c0103f88:	a3 14 12 15 c0       	mov    %eax,0xc0151214$/;"	l
c0103f8d	obj/kernel.asm	/^c0103f8d:	e8 f6 07 00 00       	call   c0104788 <check_pgdir>$/;"	l
c0103f92	obj/kernel.asm	/^c0103f92:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0103f97	obj/kernel.asm	/^c0103f97:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c0103f9d	obj/kernel.asm	/^c0103f9d:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0103fa2	obj/kernel.asm	/^c0103fa2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103fa5	obj/kernel.asm	/^c0103fa5:	81 7d f0 ff ff ff bf 	cmpl   $0xbfffffff,-0x10(%ebp)$/;"	l
c0103fac	obj/kernel.asm	/^c0103fac:	77 17                	ja     c0103fc5 <pmm_init+0xa4>$/;"	l
c0103fae	obj/kernel.asm	/^c0103fae:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0103fb1	obj/kernel.asm	/^c0103fb1:	68 a4 42 11 c0       	push   $0xc01142a4$/;"	l
c0103fb6	obj/kernel.asm	/^c0103fb6:	68 46 01 00 00       	push   $0x146$/;"	l
c0103fbb	obj/kernel.asm	/^c0103fbb:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0103fc0	obj/kernel.asm	/^c0103fc0:	e8 0a c5 ff ff       	call   c01004cf <__panic>$/;"	l
c0103fc5	obj/kernel.asm	/^c0103fc5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103fc8	obj/kernel.asm	/^c0103fc8:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0103fcd	obj/kernel.asm	/^c0103fcd:	83 c8 03             	or     $0x3,%eax$/;"	l
c0103fd0	obj/kernel.asm	/^c0103fd0:	89 02                	mov    %eax,(%edx)$/;"	l
c0103fd2	obj/kernel.asm	/^c0103fd2:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0103fd7	obj/kernel.asm	/^c0103fd7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103fda	obj/kernel.asm	/^c0103fda:	6a 02                	push   $0x2$/;"	l
c0103fdc	obj/kernel.asm	/^c0103fdc:	6a 00                	push   $0x0$/;"	l
c0103fde	obj/kernel.asm	/^c0103fde:	68 00 00 00 38       	push   $0x38000000$/;"	l
c0103fe3	obj/kernel.asm	/^c0103fe3:	68 00 00 00 c0       	push   $0xc0000000$/;"	l
c0103fe8	obj/kernel.asm	/^c0103fe8:	50                   	push   %eax$/;"	l
c0103fe9	obj/kernel.asm	/^c0103fe9:	e8 08 fe ff ff       	call   c0103df6 <boot_map_segment>$/;"	l
c0103fee	obj/kernel.asm	/^c0103fee:	83 c4 20             	add    $0x20,%esp$/;"	l
c0103ff1	obj/kernel.asm	/^c0103ff1:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0103ff6	obj/kernel.asm	/^c0103ff6:	8b 15 c4 df 14 c0    	mov    0xc014dfc4,%edx$/;"	l
c0103ffc	obj/kernel.asm	/^c0103ffc:	8b 92 00 0c 00 00    	mov    0xc00(%edx),%edx$/;"	l
c0104002	obj/kernel.asm	/^c0104002:	89 10                	mov    %edx,(%eax)$/;"	l
c0104004	obj/kernel.asm	/^c0104004:	e8 b4 fd ff ff       	call   c0103dbd <enable_paging>$/;"	l
c0104009	obj/kernel.asm	/^c0104009:	e8 f0 f7 ff ff       	call   c01037fe <gdt_init>$/;"	l
c010400e	obj/kernel.asm	/^c010400e:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0104013	obj/kernel.asm	/^c0104013:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0104019	obj/kernel.asm	/^c0104019:	e8 cf 0c 00 00       	call   c0104ced <check_boot_pgdir>$/;"	l
c010401e	obj/kernel.asm	/^c010401e:	e8 cb 10 00 00       	call   c01050ee <print_pgdir>$/;"	l
c0104023	obj/kernel.asm	/^c0104023:	e8 33 33 00 00       	call   c010735b <kmalloc_init>$/;"	l
c0104028	obj/kernel.asm	/^c0104028:	c9                   	leave  $/;"	l
c0104029	obj/kernel.asm	/^c0104029:	c3                   	ret    $/;"	l
c010402a	obj/kernel.asm	/^c010402a <get_pte>:$/;"	l
c010402a	obj/kernel.asm	/^c010402a:	55                   	push   %ebp$/;"	l
c010402b	obj/kernel.asm	/^c010402b:	89 e5                	mov    %esp,%ebp$/;"	l
c010402d	obj/kernel.asm	/^c010402d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104030	obj/kernel.asm	/^c0104030:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104033	obj/kernel.asm	/^c0104033:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0104036	obj/kernel.asm	/^c0104036:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010403d	obj/kernel.asm	/^c010403d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104040	obj/kernel.asm	/^c0104040:	01 d0                	add    %edx,%eax$/;"	l
c0104042	obj/kernel.asm	/^c0104042:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104045	obj/kernel.asm	/^c0104045:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104048	obj/kernel.asm	/^c0104048:	8b 00                	mov    (%eax),%eax$/;"	l
c010404a	obj/kernel.asm	/^c010404a:	83 e0 01             	and    $0x1,%eax$/;"	l
c010404d	obj/kernel.asm	/^c010404d:	85 c0                	test   %eax,%eax$/;"	l
c010404f	obj/kernel.asm	/^c010404f:	75 75                	jne    c01040c6 <get_pte+0x9c>$/;"	l
c0104051	obj/kernel.asm	/^c0104051:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0104058	obj/kernel.asm	/^c0104058:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010405c	obj/kernel.asm	/^c010405c:	74 61                	je     c01040bf <get_pte+0x95>$/;"	l
c010405e	obj/kernel.asm	/^c010405e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104061	obj/kernel.asm	/^c0104061:	6a 01                	push   $0x1$/;"	l
c0104063	obj/kernel.asm	/^c0104063:	e8 d9 f8 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c0104068	obj/kernel.asm	/^c0104068:	83 c4 10             	add    $0x10,%esp$/;"	l
c010406b	obj/kernel.asm	/^c010406b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010406e	obj/kernel.asm	/^c010406e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104072	obj/kernel.asm	/^c0104072:	74 4b                	je     c01040bf <get_pte+0x95>$/;"	l
c0104074	obj/kernel.asm	/^c0104074:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104077	obj/kernel.asm	/^c0104077:	6a 01                	push   $0x1$/;"	l
c0104079	obj/kernel.asm	/^c0104079:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010407c	obj/kernel.asm	/^c010407c:	e8 c3 f6 ff ff       	call   c0103744 <set_page_ref>$/;"	l
c0104081	obj/kernel.asm	/^c0104081:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104084	obj/kernel.asm	/^c0104084:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104087	obj/kernel.asm	/^c0104087:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010408a	obj/kernel.asm	/^c010408a:	e8 10 f6 ff ff       	call   c010369f <page2kva>$/;"	l
c010408f	obj/kernel.asm	/^c010408f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104092	obj/kernel.asm	/^c0104092:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104095	obj/kernel.asm	/^c0104095:	68 00 10 00 00       	push   $0x1000$/;"	l
c010409a	obj/kernel.asm	/^c010409a:	6a 00                	push   $0x0$/;"	l
c010409c	obj/kernel.asm	/^c010409c:	50                   	push   %eax$/;"	l
c010409d	obj/kernel.asm	/^c010409d:	e8 4a ef 00 00       	call   c0112fec <memset>$/;"	l
c01040a2	obj/kernel.asm	/^c01040a2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01040a5	obj/kernel.asm	/^c01040a5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01040a8	obj/kernel.asm	/^c01040a8:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01040ab	obj/kernel.asm	/^c01040ab:	e8 9f f5 ff ff       	call   c010364f <page2pa>$/;"	l
c01040b0	obj/kernel.asm	/^c01040b0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01040b3	obj/kernel.asm	/^c01040b3:	83 c8 07             	or     $0x7,%eax$/;"	l
c01040b6	obj/kernel.asm	/^c01040b6:	89 c2                	mov    %eax,%edx$/;"	l
c01040b8	obj/kernel.asm	/^c01040b8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01040bb	obj/kernel.asm	/^c01040bb:	89 10                	mov    %edx,(%eax)$/;"	l
c01040bd	obj/kernel.asm	/^c01040bd:	eb 07                	jmp    c01040c6 <get_pte+0x9c>$/;"	l
c01040bf	obj/kernel.asm	/^c01040bf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01040c4	obj/kernel.asm	/^c01040c4:	eb 51                	jmp    c0104117 <get_pte+0xed>$/;"	l
c01040c6	obj/kernel.asm	/^c01040c6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01040c9	obj/kernel.asm	/^c01040c9:	8b 00                	mov    (%eax),%eax$/;"	l
c01040cb	obj/kernel.asm	/^c01040cb:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01040d0	obj/kernel.asm	/^c01040d0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01040d3	obj/kernel.asm	/^c01040d3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01040d6	obj/kernel.asm	/^c01040d6:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01040d9	obj/kernel.asm	/^c01040d9:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01040dc	obj/kernel.asm	/^c01040dc:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c01040e1	obj/kernel.asm	/^c01040e1:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c01040e4	obj/kernel.asm	/^c01040e4:	72 17                	jb     c01040fd <get_pte+0xd3>$/;"	l
c01040e6	obj/kernel.asm	/^c01040e6:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01040e9	obj/kernel.asm	/^c01040e9:	68 00 42 11 c0       	push   $0xc0114200$/;"	l
c01040ee	obj/kernel.asm	/^c01040ee:	68 8f 01 00 00       	push   $0x18f$/;"	l
c01040f3	obj/kernel.asm	/^c01040f3:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c01040f8	obj/kernel.asm	/^c01040f8:	e8 d2 c3 ff ff       	call   c01004cf <__panic>$/;"	l
c01040fd	obj/kernel.asm	/^c01040fd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104100	obj/kernel.asm	/^c0104100:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104105	obj/kernel.asm	/^c0104105:	89 c2                	mov    %eax,%edx$/;"	l
c0104107	obj/kernel.asm	/^c0104107:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010410a	obj/kernel.asm	/^c010410a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010410d	obj/kernel.asm	/^c010410d:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
c0104112	obj/kernel.asm	/^c0104112:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0104115	obj/kernel.asm	/^c0104115:	01 d0                	add    %edx,%eax$/;"	l
c0104117	obj/kernel.asm	/^c0104117:	c9                   	leave  $/;"	l
c0104118	obj/kernel.asm	/^c0104118:	c3                   	ret    $/;"	l
c0104119	obj/kernel.asm	/^c0104119 <get_page>:$/;"	l
c0104119	obj/kernel.asm	/^c0104119:	55                   	push   %ebp$/;"	l
c010411a	obj/kernel.asm	/^c010411a:	89 e5                	mov    %esp,%ebp$/;"	l
c010411c	obj/kernel.asm	/^c010411c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010411f	obj/kernel.asm	/^c010411f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104122	obj/kernel.asm	/^c0104122:	6a 00                	push   $0x0$/;"	l
c0104124	obj/kernel.asm	/^c0104124:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104127	obj/kernel.asm	/^c0104127:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010412a	obj/kernel.asm	/^c010412a:	e8 fb fe ff ff       	call   c010402a <get_pte>$/;"	l
c010412f	obj/kernel.asm	/^c010412f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104132	obj/kernel.asm	/^c0104132:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104135	obj/kernel.asm	/^c0104135:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0104139	obj/kernel.asm	/^c0104139:	74 08                	je     c0104143 <get_page+0x2a>$/;"	l
c010413b	obj/kernel.asm	/^c010413b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010413e	obj/kernel.asm	/^c010413e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0104141	obj/kernel.asm	/^c0104141:	89 10                	mov    %edx,(%eax)$/;"	l
c0104143	obj/kernel.asm	/^c0104143:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104147	obj/kernel.asm	/^c0104147:	74 1f                	je     c0104168 <get_page+0x4f>$/;"	l
c0104149	obj/kernel.asm	/^c0104149:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010414c	obj/kernel.asm	/^c010414c:	8b 00                	mov    (%eax),%eax$/;"	l
c010414e	obj/kernel.asm	/^c010414e:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104151	obj/kernel.asm	/^c0104151:	85 c0                	test   %eax,%eax$/;"	l
c0104153	obj/kernel.asm	/^c0104153:	74 13                	je     c0104168 <get_page+0x4f>$/;"	l
c0104155	obj/kernel.asm	/^c0104155:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104158	obj/kernel.asm	/^c0104158:	8b 00                	mov    (%eax),%eax$/;"	l
c010415a	obj/kernel.asm	/^c010415a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010415d	obj/kernel.asm	/^c010415d:	50                   	push   %eax$/;"	l
c010415e	obj/kernel.asm	/^c010415e:	e8 ff f4 ff ff       	call   c0103662 <pa2page>$/;"	l
c0104163	obj/kernel.asm	/^c0104163:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104166	obj/kernel.asm	/^c0104166:	eb 05                	jmp    c010416d <get_page+0x54>$/;"	l
c0104168	obj/kernel.asm	/^c0104168:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010416d	obj/kernel.asm	/^c010416d:	c9                   	leave  $/;"	l
c010416e	obj/kernel.asm	/^c010416e:	c3                   	ret    $/;"	l
c010416f	obj/kernel.asm	/^c010416f <page_remove_pte>:$/;"	l
c010416f	obj/kernel.asm	/^c010416f:	55                   	push   %ebp$/;"	l
c0104170	obj/kernel.asm	/^c0104170:	89 e5                	mov    %esp,%ebp$/;"	l
c0104172	obj/kernel.asm	/^c0104172:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104175	obj/kernel.asm	/^c0104175:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104178	obj/kernel.asm	/^c0104178:	8b 00                	mov    (%eax),%eax$/;"	l
c010417a	obj/kernel.asm	/^c010417a:	83 e0 01             	and    $0x1,%eax$/;"	l
c010417d	obj/kernel.asm	/^c010417d:	85 c0                	test   %eax,%eax$/;"	l
c010417f	obj/kernel.asm	/^c010417f:	75 02                	jne    c0104183 <page_remove_pte+0x14>$/;"	l
c0104181	obj/kernel.asm	/^c0104181:	eb 50                	jmp    c01041d3 <page_remove_pte+0x64>$/;"	l
c0104183	obj/kernel.asm	/^c0104183:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104186	obj/kernel.asm	/^c0104186:	8b 00                	mov    (%eax),%eax$/;"	l
c0104188	obj/kernel.asm	/^c0104188:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010418b	obj/kernel.asm	/^c010418b:	50                   	push   %eax$/;"	l
c010418c	obj/kernel.asm	/^c010418c:	e8 53 f5 ff ff       	call   c01036e4 <pte2page>$/;"	l
c0104191	obj/kernel.asm	/^c0104191:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104194	obj/kernel.asm	/^c0104194:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104197	obj/kernel.asm	/^c0104197:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010419a	obj/kernel.asm	/^c010419a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010419d	obj/kernel.asm	/^c010419d:	e8 c6 f5 ff ff       	call   c0103768 <page_ref_dec>$/;"	l
c01041a2	obj/kernel.asm	/^c01041a2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01041a5	obj/kernel.asm	/^c01041a5:	85 c0                	test   %eax,%eax$/;"	l
c01041a7	obj/kernel.asm	/^c01041a7:	75 10                	jne    c01041b9 <page_remove_pte+0x4a>$/;"	l
c01041a9	obj/kernel.asm	/^c01041a9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01041ac	obj/kernel.asm	/^c01041ac:	6a 01                	push   $0x1$/;"	l
c01041ae	obj/kernel.asm	/^c01041ae:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01041b1	obj/kernel.asm	/^c01041b1:	e8 f7 f7 ff ff       	call   c01039ad <free_pages>$/;"	l
c01041b6	obj/kernel.asm	/^c01041b6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01041b9	obj/kernel.asm	/^c01041b9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01041bc	obj/kernel.asm	/^c01041bc:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01041c2	obj/kernel.asm	/^c01041c2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01041c5	obj/kernel.asm	/^c01041c5:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01041c8	obj/kernel.asm	/^c01041c8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01041cb	obj/kernel.asm	/^c01041cb:	e8 96 04 00 00       	call   c0104666 <tlb_invalidate>$/;"	l
c01041d0	obj/kernel.asm	/^c01041d0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01041d3	obj/kernel.asm	/^c01041d3:	c9                   	leave  $/;"	l
c01041d4	obj/kernel.asm	/^c01041d4:	c3                   	ret    $/;"	l
c01041d5	obj/kernel.asm	/^c01041d5 <unmap_range>:$/;"	l
c01041d5	obj/kernel.asm	/^c01041d5:	55                   	push   %ebp$/;"	l
c01041d6	obj/kernel.asm	/^c01041d6:	89 e5                	mov    %esp,%ebp$/;"	l
c01041d8	obj/kernel.asm	/^c01041d8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01041db	obj/kernel.asm	/^c01041db:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01041de	obj/kernel.asm	/^c01041de:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01041e3	obj/kernel.asm	/^c01041e3:	85 c0                	test   %eax,%eax$/;"	l
c01041e5	obj/kernel.asm	/^c01041e5:	75 0c                	jne    c01041f3 <unmap_range+0x1e>$/;"	l
c01041e7	obj/kernel.asm	/^c01041e7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01041ea	obj/kernel.asm	/^c01041ea:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01041ef	obj/kernel.asm	/^c01041ef:	85 c0                	test   %eax,%eax$/;"	l
c01041f1	obj/kernel.asm	/^c01041f1:	74 19                	je     c010420c <unmap_range+0x37>$/;"	l
c01041f3	obj/kernel.asm	/^c01041f3:	68 28 43 11 c0       	push   $0xc0114328$/;"	l
c01041f8	obj/kernel.asm	/^c01041f8:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c01041fd	obj/kernel.asm	/^c01041fd:	68 d6 01 00 00       	push   $0x1d6$/;"	l
c0104202	obj/kernel.asm	/^c0104202:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104207	obj/kernel.asm	/^c0104207:	e8 c3 c2 ff ff       	call   c01004cf <__panic>$/;"	l
c010420c	obj/kernel.asm	/^c010420c:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0104213	obj/kernel.asm	/^c0104213:	76 11                	jbe    c0104226 <unmap_range+0x51>$/;"	l
c0104215	obj/kernel.asm	/^c0104215:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104218	obj/kernel.asm	/^c0104218:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010421b	obj/kernel.asm	/^c010421b:	73 09                	jae    c0104226 <unmap_range+0x51>$/;"	l
c010421d	obj/kernel.asm	/^c010421d:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c0104224	obj/kernel.asm	/^c0104224:	76 19                	jbe    c010423f <unmap_range+0x6a>$/;"	l
c0104226	obj/kernel.asm	/^c0104226:	68 51 43 11 c0       	push   $0xc0114351$/;"	l
c010422b	obj/kernel.asm	/^c010422b:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104230	obj/kernel.asm	/^c0104230:	68 d7 01 00 00       	push   $0x1d7$/;"	l
c0104235	obj/kernel.asm	/^c0104235:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c010423a	obj/kernel.asm	/^c010423a:	e8 90 c2 ff ff       	call   c01004cf <__panic>$/;"	l
c010423f	obj/kernel.asm	/^c010423f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104242	obj/kernel.asm	/^c0104242:	6a 00                	push   $0x0$/;"	l
c0104244	obj/kernel.asm	/^c0104244:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104247	obj/kernel.asm	/^c0104247:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010424a	obj/kernel.asm	/^c010424a:	e8 db fd ff ff       	call   c010402a <get_pte>$/;"	l
c010424f	obj/kernel.asm	/^c010424f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104252	obj/kernel.asm	/^c0104252:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104255	obj/kernel.asm	/^c0104255:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104259	obj/kernel.asm	/^c0104259:	75 18                	jne    c0104273 <unmap_range+0x9e>$/;"	l
c010425b	obj/kernel.asm	/^c010425b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010425e	obj/kernel.asm	/^c010425e:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c0104263	obj/kernel.asm	/^c0104263:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104266	obj/kernel.asm	/^c0104266:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104269	obj/kernel.asm	/^c0104269:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c010426e	obj/kernel.asm	/^c010426e:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0104271	obj/kernel.asm	/^c0104271:	eb 24                	jmp    c0104297 <unmap_range+0xc2>$/;"	l
c0104273	obj/kernel.asm	/^c0104273:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104276	obj/kernel.asm	/^c0104276:	8b 00                	mov    (%eax),%eax$/;"	l
c0104278	obj/kernel.asm	/^c0104278:	85 c0                	test   %eax,%eax$/;"	l
c010427a	obj/kernel.asm	/^c010427a:	74 14                	je     c0104290 <unmap_range+0xbb>$/;"	l
c010427c	obj/kernel.asm	/^c010427c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010427f	obj/kernel.asm	/^c010427f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104282	obj/kernel.asm	/^c0104282:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104285	obj/kernel.asm	/^c0104285:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104288	obj/kernel.asm	/^c0104288:	e8 e2 fe ff ff       	call   c010416f <page_remove_pte>$/;"	l
c010428d	obj/kernel.asm	/^c010428d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104290	obj/kernel.asm	/^c0104290:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c0104297	obj/kernel.asm	/^c0104297:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010429b	obj/kernel.asm	/^c010429b:	74 08                	je     c01042a5 <unmap_range+0xd0>$/;"	l
c010429d	obj/kernel.asm	/^c010429d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01042a0	obj/kernel.asm	/^c01042a0:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c01042a3	obj/kernel.asm	/^c01042a3:	72 9a                	jb     c010423f <unmap_range+0x6a>$/;"	l
c01042a5	obj/kernel.asm	/^c01042a5:	c9                   	leave  $/;"	l
c01042a6	obj/kernel.asm	/^c01042a6:	c3                   	ret    $/;"	l
c01042a7	obj/kernel.asm	/^c01042a7 <exit_range>:$/;"	l
c01042a7	obj/kernel.asm	/^c01042a7:	55                   	push   %ebp$/;"	l
c01042a8	obj/kernel.asm	/^c01042a8:	89 e5                	mov    %esp,%ebp$/;"	l
c01042aa	obj/kernel.asm	/^c01042aa:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01042ad	obj/kernel.asm	/^c01042ad:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01042b0	obj/kernel.asm	/^c01042b0:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01042b5	obj/kernel.asm	/^c01042b5:	85 c0                	test   %eax,%eax$/;"	l
c01042b7	obj/kernel.asm	/^c01042b7:	75 0c                	jne    c01042c5 <exit_range+0x1e>$/;"	l
c01042b9	obj/kernel.asm	/^c01042b9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01042bc	obj/kernel.asm	/^c01042bc:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01042c1	obj/kernel.asm	/^c01042c1:	85 c0                	test   %eax,%eax$/;"	l
c01042c3	obj/kernel.asm	/^c01042c3:	74 19                	je     c01042de <exit_range+0x37>$/;"	l
c01042c5	obj/kernel.asm	/^c01042c5:	68 28 43 11 c0       	push   $0xc0114328$/;"	l
c01042ca	obj/kernel.asm	/^c01042ca:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c01042cf	obj/kernel.asm	/^c01042cf:	68 e8 01 00 00       	push   $0x1e8$/;"	l
c01042d4	obj/kernel.asm	/^c01042d4:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c01042d9	obj/kernel.asm	/^c01042d9:	e8 f1 c1 ff ff       	call   c01004cf <__panic>$/;"	l
c01042de	obj/kernel.asm	/^c01042de:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c01042e5	obj/kernel.asm	/^c01042e5:	76 11                	jbe    c01042f8 <exit_range+0x51>$/;"	l
c01042e7	obj/kernel.asm	/^c01042e7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01042ea	obj/kernel.asm	/^c01042ea:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c01042ed	obj/kernel.asm	/^c01042ed:	73 09                	jae    c01042f8 <exit_range+0x51>$/;"	l
c01042ef	obj/kernel.asm	/^c01042ef:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c01042f6	obj/kernel.asm	/^c01042f6:	76 19                	jbe    c0104311 <exit_range+0x6a>$/;"	l
c01042f8	obj/kernel.asm	/^c01042f8:	68 51 43 11 c0       	push   $0xc0114351$/;"	l
c01042fd	obj/kernel.asm	/^c01042fd:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104302	obj/kernel.asm	/^c0104302:	68 e9 01 00 00       	push   $0x1e9$/;"	l
c0104307	obj/kernel.asm	/^c0104307:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c010430c	obj/kernel.asm	/^c010430c:	e8 be c1 ff ff       	call   c01004cf <__panic>$/;"	l
c0104311	obj/kernel.asm	/^c0104311:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104314	obj/kernel.asm	/^c0104314:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104317	obj/kernel.asm	/^c0104317:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010431a	obj/kernel.asm	/^c010431a:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c010431f	obj/kernel.asm	/^c010431f:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0104322	obj/kernel.asm	/^c0104322:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104325	obj/kernel.asm	/^c0104325:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0104328	obj/kernel.asm	/^c0104328:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010432b	obj/kernel.asm	/^c010432b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010432e	obj/kernel.asm	/^c010432e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0104335	obj/kernel.asm	/^c0104335:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104338	obj/kernel.asm	/^c0104338:	01 d0                	add    %edx,%eax$/;"	l
c010433a	obj/kernel.asm	/^c010433a:	8b 00                	mov    (%eax),%eax$/;"	l
c010433c	obj/kernel.asm	/^c010433c:	83 e0 01             	and    $0x1,%eax$/;"	l
c010433f	obj/kernel.asm	/^c010433f:	85 c0                	test   %eax,%eax$/;"	l
c0104341	obj/kernel.asm	/^c0104341:	74 40                	je     c0104383 <exit_range+0xdc>$/;"	l
c0104343	obj/kernel.asm	/^c0104343:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104346	obj/kernel.asm	/^c0104346:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010434d	obj/kernel.asm	/^c010434d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104350	obj/kernel.asm	/^c0104350:	01 d0                	add    %edx,%eax$/;"	l
c0104352	obj/kernel.asm	/^c0104352:	8b 00                	mov    (%eax),%eax$/;"	l
c0104354	obj/kernel.asm	/^c0104354:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104357	obj/kernel.asm	/^c0104357:	50                   	push   %eax$/;"	l
c0104358	obj/kernel.asm	/^c0104358:	e8 c1 f3 ff ff       	call   c010371e <pde2page>$/;"	l
c010435d	obj/kernel.asm	/^c010435d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104360	obj/kernel.asm	/^c0104360:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104363	obj/kernel.asm	/^c0104363:	6a 01                	push   $0x1$/;"	l
c0104365	obj/kernel.asm	/^c0104365:	50                   	push   %eax$/;"	l
c0104366	obj/kernel.asm	/^c0104366:	e8 42 f6 ff ff       	call   c01039ad <free_pages>$/;"	l
c010436b	obj/kernel.asm	/^c010436b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010436e	obj/kernel.asm	/^c010436e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104371	obj/kernel.asm	/^c0104371:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0104378	obj/kernel.asm	/^c0104378:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010437b	obj/kernel.asm	/^c010437b:	01 d0                	add    %edx,%eax$/;"	l
c010437d	obj/kernel.asm	/^c010437d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0104383	obj/kernel.asm	/^c0104383:	81 45 0c 00 00 40 00 	addl   $0x400000,0xc(%ebp)$/;"	l
c010438a	obj/kernel.asm	/^c010438a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010438e	obj/kernel.asm	/^c010438e:	74 08                	je     c0104398 <exit_range+0xf1>$/;"	l
c0104390	obj/kernel.asm	/^c0104390:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104393	obj/kernel.asm	/^c0104393:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0104396	obj/kernel.asm	/^c0104396:	72 8a                	jb     c0104322 <exit_range+0x7b>$/;"	l
c0104398	obj/kernel.asm	/^c0104398:	c9                   	leave  $/;"	l
c0104399	obj/kernel.asm	/^c0104399:	c3                   	ret    $/;"	l
c010439a	obj/kernel.asm	/^c010439a <copy_range>:$/;"	l
c010439a	obj/kernel.asm	/^c010439a:	55                   	push   %ebp$/;"	l
c010439b	obj/kernel.asm	/^c010439b:	89 e5                	mov    %esp,%ebp$/;"	l
c010439d	obj/kernel.asm	/^c010439d:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01043a0	obj/kernel.asm	/^c01043a0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01043a3	obj/kernel.asm	/^c01043a3:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01043a8	obj/kernel.asm	/^c01043a8:	85 c0                	test   %eax,%eax$/;"	l
c01043aa	obj/kernel.asm	/^c01043aa:	75 0c                	jne    c01043b8 <copy_range+0x1e>$/;"	l
c01043ac	obj/kernel.asm	/^c01043ac:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01043af	obj/kernel.asm	/^c01043af:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01043b4	obj/kernel.asm	/^c01043b4:	85 c0                	test   %eax,%eax$/;"	l
c01043b6	obj/kernel.asm	/^c01043b6:	74 19                	je     c01043d1 <copy_range+0x37>$/;"	l
c01043b8	obj/kernel.asm	/^c01043b8:	68 28 43 11 c0       	push   $0xc0114328$/;"	l
c01043bd	obj/kernel.asm	/^c01043bd:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c01043c2	obj/kernel.asm	/^c01043c2:	68 fe 01 00 00       	push   $0x1fe$/;"	l
c01043c7	obj/kernel.asm	/^c01043c7:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c01043cc	obj/kernel.asm	/^c01043cc:	e8 fe c0 ff ff       	call   c01004cf <__panic>$/;"	l
c01043d1	obj/kernel.asm	/^c01043d1:	81 7d 10 ff ff 1f 00 	cmpl   $0x1fffff,0x10(%ebp)$/;"	l
c01043d8	obj/kernel.asm	/^c01043d8:	76 11                	jbe    c01043eb <copy_range+0x51>$/;"	l
c01043da	obj/kernel.asm	/^c01043da:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01043dd	obj/kernel.asm	/^c01043dd:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c01043e0	obj/kernel.asm	/^c01043e0:	73 09                	jae    c01043eb <copy_range+0x51>$/;"	l
c01043e2	obj/kernel.asm	/^c01043e2:	81 7d 14 00 00 00 b0 	cmpl   $0xb0000000,0x14(%ebp)$/;"	l
c01043e9	obj/kernel.asm	/^c01043e9:	76 19                	jbe    c0104404 <copy_range+0x6a>$/;"	l
c01043eb	obj/kernel.asm	/^c01043eb:	68 51 43 11 c0       	push   $0xc0114351$/;"	l
c01043f0	obj/kernel.asm	/^c01043f0:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c01043f5	obj/kernel.asm	/^c01043f5:	68 ff 01 00 00       	push   $0x1ff$/;"	l
c01043fa	obj/kernel.asm	/^c01043fa:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c01043ff	obj/kernel.asm	/^c01043ff:	e8 cb c0 ff ff       	call   c01004cf <__panic>$/;"	l
c0104404	obj/kernel.asm	/^c0104404:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104407	obj/kernel.asm	/^c0104407:	6a 00                	push   $0x0$/;"	l
c0104409	obj/kernel.asm	/^c0104409:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010440c	obj/kernel.asm	/^c010440c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010440f	obj/kernel.asm	/^c010440f:	e8 16 fc ff ff       	call   c010402a <get_pte>$/;"	l
c0104414	obj/kernel.asm	/^c0104414:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104417	obj/kernel.asm	/^c0104417:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010441a	obj/kernel.asm	/^c010441a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010441e	obj/kernel.asm	/^c010441e:	75 1b                	jne    c010443b <copy_range+0xa1>$/;"	l
c0104420	obj/kernel.asm	/^c0104420:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104423	obj/kernel.asm	/^c0104423:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c0104428	obj/kernel.asm	/^c0104428:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010442b	obj/kernel.asm	/^c010442b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010442e	obj/kernel.asm	/^c010442e:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0104433	obj/kernel.asm	/^c0104433:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c0104436	obj/kernel.asm	/^c0104436:	e9 21 01 00 00       	jmp    c010455c <copy_range+0x1c2>$/;"	l
c010443b	obj/kernel.asm	/^c010443b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010443e	obj/kernel.asm	/^c010443e:	8b 00                	mov    (%eax),%eax$/;"	l
c0104440	obj/kernel.asm	/^c0104440:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104443	obj/kernel.asm	/^c0104443:	85 c0                	test   %eax,%eax$/;"	l
c0104445	obj/kernel.asm	/^c0104445:	0f 84 0a 01 00 00    	je     c0104555 <copy_range+0x1bb>$/;"	l
c010444b	obj/kernel.asm	/^c010444b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010444e	obj/kernel.asm	/^c010444e:	6a 01                	push   $0x1$/;"	l
c0104450	obj/kernel.asm	/^c0104450:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0104453	obj/kernel.asm	/^c0104453:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104456	obj/kernel.asm	/^c0104456:	e8 cf fb ff ff       	call   c010402a <get_pte>$/;"	l
c010445b	obj/kernel.asm	/^c010445b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010445e	obj/kernel.asm	/^c010445e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104461	obj/kernel.asm	/^c0104461:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0104465	obj/kernel.asm	/^c0104465:	75 0a                	jne    c0104471 <copy_range+0xd7>$/;"	l
c0104467	obj/kernel.asm	/^c0104467:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010446c	obj/kernel.asm	/^c010446c:	e9 02 01 00 00       	jmp    c0104573 <copy_range+0x1d9>$/;"	l
c0104471	obj/kernel.asm	/^c0104471:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104474	obj/kernel.asm	/^c0104474:	8b 00                	mov    (%eax),%eax$/;"	l
c0104476	obj/kernel.asm	/^c0104476:	83 e0 07             	and    $0x7,%eax$/;"	l
c0104479	obj/kernel.asm	/^c0104479:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010447c	obj/kernel.asm	/^c010447c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010447f	obj/kernel.asm	/^c010447f:	8b 00                	mov    (%eax),%eax$/;"	l
c0104481	obj/kernel.asm	/^c0104481:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104484	obj/kernel.asm	/^c0104484:	50                   	push   %eax$/;"	l
c0104485	obj/kernel.asm	/^c0104485:	e8 5a f2 ff ff       	call   c01036e4 <pte2page>$/;"	l
c010448a	obj/kernel.asm	/^c010448a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010448d	obj/kernel.asm	/^c010448d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104490	obj/kernel.asm	/^c0104490:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104493	obj/kernel.asm	/^c0104493:	6a 01                	push   $0x1$/;"	l
c0104495	obj/kernel.asm	/^c0104495:	e8 a7 f4 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c010449a	obj/kernel.asm	/^c010449a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010449d	obj/kernel.asm	/^c010449d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01044a0	obj/kernel.asm	/^c01044a0:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01044a4	obj/kernel.asm	/^c01044a4:	75 19                	jne    c01044bf <copy_range+0x125>$/;"	l
c01044a6	obj/kernel.asm	/^c01044a6:	68 69 43 11 c0       	push   $0xc0114369$/;"	l
c01044ab	obj/kernel.asm	/^c01044ab:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c01044b0	obj/kernel.asm	/^c01044b0:	68 12 02 00 00       	push   $0x212$/;"	l
c01044b5	obj/kernel.asm	/^c01044b5:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c01044ba	obj/kernel.asm	/^c01044ba:	e8 10 c0 ff ff       	call   c01004cf <__panic>$/;"	l
c01044bf	obj/kernel.asm	/^c01044bf:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01044c3	obj/kernel.asm	/^c01044c3:	75 19                	jne    c01044de <copy_range+0x144>$/;"	l
c01044c5	obj/kernel.asm	/^c01044c5:	68 74 43 11 c0       	push   $0xc0114374$/;"	l
c01044ca	obj/kernel.asm	/^c01044ca:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c01044cf	obj/kernel.asm	/^c01044cf:	68 13 02 00 00       	push   $0x213$/;"	l
c01044d4	obj/kernel.asm	/^c01044d4:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c01044d9	obj/kernel.asm	/^c01044d9:	e8 f1 bf ff ff       	call   c01004cf <__panic>$/;"	l
c01044de	obj/kernel.asm	/^c01044de:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c01044e5	obj/kernel.asm	/^c01044e5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01044e8	obj/kernel.asm	/^c01044e8:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01044eb	obj/kernel.asm	/^c01044eb:	e8 af f1 ff ff       	call   c010369f <page2kva>$/;"	l
c01044f0	obj/kernel.asm	/^c01044f0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01044f3	obj/kernel.asm	/^c01044f3:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01044f6	obj/kernel.asm	/^c01044f6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01044f9	obj/kernel.asm	/^c01044f9:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01044fc	obj/kernel.asm	/^c01044fc:	e8 9e f1 ff ff       	call   c010369f <page2kva>$/;"	l
c0104501	obj/kernel.asm	/^c0104501:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104504	obj/kernel.asm	/^c0104504:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0104507	obj/kernel.asm	/^c0104507:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010450a	obj/kernel.asm	/^c010450a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010450d	obj/kernel.asm	/^c010450d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104510	obj/kernel.asm	/^c0104510:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104515	obj/kernel.asm	/^c0104515:	52                   	push   %edx$/;"	l
c0104516	obj/kernel.asm	/^c0104516:	50                   	push   %eax$/;"	l
c0104517	obj/kernel.asm	/^c0104517:	e8 b3 eb 00 00       	call   c01130cf <memcpy>$/;"	l
c010451c	obj/kernel.asm	/^c010451c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010451f	obj/kernel.asm	/^c010451f:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0104522	obj/kernel.asm	/^c0104522:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0104525	obj/kernel.asm	/^c0104525:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104528	obj/kernel.asm	/^c0104528:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010452b	obj/kernel.asm	/^c010452b:	e8 7d 00 00 00       	call   c01045ad <page_insert>$/;"	l
c0104530	obj/kernel.asm	/^c0104530:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104533	obj/kernel.asm	/^c0104533:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0104536	obj/kernel.asm	/^c0104536:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010453a	obj/kernel.asm	/^c010453a:	74 19                	je     c0104555 <copy_range+0x1bb>$/;"	l
c010453c	obj/kernel.asm	/^c010453c:	68 80 43 11 c0       	push   $0xc0114380$/;"	l
c0104541	obj/kernel.asm	/^c0104541:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104546	obj/kernel.asm	/^c0104546:	68 29 02 00 00       	push   $0x229$/;"	l
c010454b	obj/kernel.asm	/^c010454b:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104550	obj/kernel.asm	/^c0104550:	e8 7a bf ff ff       	call   c01004cf <__panic>$/;"	l
c0104555	obj/kernel.asm	/^c0104555:	81 45 10 00 10 00 00 	addl   $0x1000,0x10(%ebp)$/;"	l
c010455c	obj/kernel.asm	/^c010455c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0104560	obj/kernel.asm	/^c0104560:	74 0c                	je     c010456e <copy_range+0x1d4>$/;"	l
c0104562	obj/kernel.asm	/^c0104562:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104565	obj/kernel.asm	/^c0104565:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0104568	obj/kernel.asm	/^c0104568:	0f 82 96 fe ff ff    	jb     c0104404 <copy_range+0x6a>$/;"	l
c010456e	obj/kernel.asm	/^c010456e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104573	obj/kernel.asm	/^c0104573:	c9                   	leave  $/;"	l
c0104574	obj/kernel.asm	/^c0104574:	c3                   	ret    $/;"	l
c0104575	obj/kernel.asm	/^c0104575 <page_remove>:$/;"	l
c0104575	obj/kernel.asm	/^c0104575:	55                   	push   %ebp$/;"	l
c0104576	obj/kernel.asm	/^c0104576:	89 e5                	mov    %esp,%ebp$/;"	l
c0104578	obj/kernel.asm	/^c0104578:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010457b	obj/kernel.asm	/^c010457b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010457e	obj/kernel.asm	/^c010457e:	6a 00                	push   $0x0$/;"	l
c0104580	obj/kernel.asm	/^c0104580:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104583	obj/kernel.asm	/^c0104583:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104586	obj/kernel.asm	/^c0104586:	e8 9f fa ff ff       	call   c010402a <get_pte>$/;"	l
c010458b	obj/kernel.asm	/^c010458b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010458e	obj/kernel.asm	/^c010458e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104591	obj/kernel.asm	/^c0104591:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104595	obj/kernel.asm	/^c0104595:	74 14                	je     c01045ab <page_remove+0x36>$/;"	l
c0104597	obj/kernel.asm	/^c0104597:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010459a	obj/kernel.asm	/^c010459a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010459d	obj/kernel.asm	/^c010459d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01045a0	obj/kernel.asm	/^c01045a0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01045a3	obj/kernel.asm	/^c01045a3:	e8 c7 fb ff ff       	call   c010416f <page_remove_pte>$/;"	l
c01045a8	obj/kernel.asm	/^c01045a8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01045ab	obj/kernel.asm	/^c01045ab:	c9                   	leave  $/;"	l
c01045ac	obj/kernel.asm	/^c01045ac:	c3                   	ret    $/;"	l
c01045ad	obj/kernel.asm	/^c01045ad <page_insert>:$/;"	l
c01045ad	obj/kernel.asm	/^c01045ad:	55                   	push   %ebp$/;"	l
c01045ae	obj/kernel.asm	/^c01045ae:	89 e5                	mov    %esp,%ebp$/;"	l
c01045b0	obj/kernel.asm	/^c01045b0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01045b3	obj/kernel.asm	/^c01045b3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01045b6	obj/kernel.asm	/^c01045b6:	6a 01                	push   $0x1$/;"	l
c01045b8	obj/kernel.asm	/^c01045b8:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01045bb	obj/kernel.asm	/^c01045bb:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01045be	obj/kernel.asm	/^c01045be:	e8 67 fa ff ff       	call   c010402a <get_pte>$/;"	l
c01045c3	obj/kernel.asm	/^c01045c3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01045c6	obj/kernel.asm	/^c01045c6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01045c9	obj/kernel.asm	/^c01045c9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01045cd	obj/kernel.asm	/^c01045cd:	75 0a                	jne    c01045d9 <page_insert+0x2c>$/;"	l
c01045cf	obj/kernel.asm	/^c01045cf:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01045d4	obj/kernel.asm	/^c01045d4:	e9 8b 00 00 00       	jmp    c0104664 <page_insert+0xb7>$/;"	l
c01045d9	obj/kernel.asm	/^c01045d9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01045dc	obj/kernel.asm	/^c01045dc:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01045df	obj/kernel.asm	/^c01045df:	e8 6d f1 ff ff       	call   c0103751 <page_ref_inc>$/;"	l
c01045e4	obj/kernel.asm	/^c01045e4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01045e7	obj/kernel.asm	/^c01045e7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01045ea	obj/kernel.asm	/^c01045ea:	8b 00                	mov    (%eax),%eax$/;"	l
c01045ec	obj/kernel.asm	/^c01045ec:	83 e0 01             	and    $0x1,%eax$/;"	l
c01045ef	obj/kernel.asm	/^c01045ef:	85 c0                	test   %eax,%eax$/;"	l
c01045f1	obj/kernel.asm	/^c01045f1:	74 40                	je     c0104633 <page_insert+0x86>$/;"	l
c01045f3	obj/kernel.asm	/^c01045f3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01045f6	obj/kernel.asm	/^c01045f6:	8b 00                	mov    (%eax),%eax$/;"	l
c01045f8	obj/kernel.asm	/^c01045f8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01045fb	obj/kernel.asm	/^c01045fb:	50                   	push   %eax$/;"	l
c01045fc	obj/kernel.asm	/^c01045fc:	e8 e3 f0 ff ff       	call   c01036e4 <pte2page>$/;"	l
c0104601	obj/kernel.asm	/^c0104601:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104604	obj/kernel.asm	/^c0104604:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104607	obj/kernel.asm	/^c0104607:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010460a	obj/kernel.asm	/^c010460a:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010460d	obj/kernel.asm	/^c010460d:	75 10                	jne    c010461f <page_insert+0x72>$/;"	l
c010460f	obj/kernel.asm	/^c010460f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104612	obj/kernel.asm	/^c0104612:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104615	obj/kernel.asm	/^c0104615:	e8 4e f1 ff ff       	call   c0103768 <page_ref_dec>$/;"	l
c010461a	obj/kernel.asm	/^c010461a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010461d	obj/kernel.asm	/^c010461d:	eb 14                	jmp    c0104633 <page_insert+0x86>$/;"	l
c010461f	obj/kernel.asm	/^c010461f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104622	obj/kernel.asm	/^c0104622:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104625	obj/kernel.asm	/^c0104625:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0104628	obj/kernel.asm	/^c0104628:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010462b	obj/kernel.asm	/^c010462b:	e8 3f fb ff ff       	call   c010416f <page_remove_pte>$/;"	l
c0104630	obj/kernel.asm	/^c0104630:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104633	obj/kernel.asm	/^c0104633:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104636	obj/kernel.asm	/^c0104636:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104639	obj/kernel.asm	/^c0104639:	e8 11 f0 ff ff       	call   c010364f <page2pa>$/;"	l
c010463e	obj/kernel.asm	/^c010463e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104641	obj/kernel.asm	/^c0104641:	0b 45 14             	or     0x14(%ebp),%eax$/;"	l
c0104644	obj/kernel.asm	/^c0104644:	83 c8 01             	or     $0x1,%eax$/;"	l
c0104647	obj/kernel.asm	/^c0104647:	89 c2                	mov    %eax,%edx$/;"	l
c0104649	obj/kernel.asm	/^c0104649:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010464c	obj/kernel.asm	/^c010464c:	89 10                	mov    %edx,(%eax)$/;"	l
c010464e	obj/kernel.asm	/^c010464e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104651	obj/kernel.asm	/^c0104651:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0104654	obj/kernel.asm	/^c0104654:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104657	obj/kernel.asm	/^c0104657:	e8 0a 00 00 00       	call   c0104666 <tlb_invalidate>$/;"	l
c010465c	obj/kernel.asm	/^c010465c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010465f	obj/kernel.asm	/^c010465f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104664	obj/kernel.asm	/^c0104664:	c9                   	leave  $/;"	l
c0104665	obj/kernel.asm	/^c0104665:	c3                   	ret    $/;"	l
c0104666	obj/kernel.asm	/^c0104666 <tlb_invalidate>:$/;"	l
c0104666	obj/kernel.asm	/^c0104666:	55                   	push   %ebp$/;"	l
c0104667	obj/kernel.asm	/^c0104667:	89 e5                	mov    %esp,%ebp$/;"	l
c0104669	obj/kernel.asm	/^c0104669:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010466c	obj/kernel.asm	/^c010466c:	0f 20 d8             	mov    %cr3,%eax$/;"	l
c010466f	obj/kernel.asm	/^c010466f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104672	obj/kernel.asm	/^c0104672:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104675	obj/kernel.asm	/^c0104675:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104678	obj/kernel.asm	/^c0104678:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010467b	obj/kernel.asm	/^c010467b:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0104682	obj/kernel.asm	/^c0104682:	77 17                	ja     c010469b <tlb_invalidate+0x35>$/;"	l
c0104684	obj/kernel.asm	/^c0104684:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104687	obj/kernel.asm	/^c0104687:	68 a4 42 11 c0       	push   $0xc01142a4$/;"	l
c010468c	obj/kernel.asm	/^c010468c:	68 5a 02 00 00       	push   $0x25a$/;"	l
c0104691	obj/kernel.asm	/^c0104691:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104696	obj/kernel.asm	/^c0104696:	e8 34 be ff ff       	call   c01004cf <__panic>$/;"	l
c010469b	obj/kernel.asm	/^c010469b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010469e	obj/kernel.asm	/^c010469e:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c01046a3	obj/kernel.asm	/^c01046a3:	39 c2                	cmp    %eax,%edx$/;"	l
c01046a5	obj/kernel.asm	/^c01046a5:	75 0c                	jne    c01046b3 <tlb_invalidate+0x4d>$/;"	l
c01046a7	obj/kernel.asm	/^c01046a7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01046aa	obj/kernel.asm	/^c01046aa:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01046ad	obj/kernel.asm	/^c01046ad:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01046b0	obj/kernel.asm	/^c01046b0:	0f 01 38             	invlpg (%eax)$/;"	l
c01046b3	obj/kernel.asm	/^c01046b3:	c9                   	leave  $/;"	l
c01046b4	obj/kernel.asm	/^c01046b4:	c3                   	ret    $/;"	l
c01046b5	obj/kernel.asm	/^c01046b5 <pgdir_alloc_page>:$/;"	l
c01046b5	obj/kernel.asm	/^c01046b5:	55                   	push   %ebp$/;"	l
c01046b6	obj/kernel.asm	/^c01046b6:	89 e5                	mov    %esp,%ebp$/;"	l
c01046b8	obj/kernel.asm	/^c01046b8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01046bb	obj/kernel.asm	/^c01046bb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01046be	obj/kernel.asm	/^c01046be:	6a 01                	push   $0x1$/;"	l
c01046c0	obj/kernel.asm	/^c01046c0:	e8 7c f2 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c01046c5	obj/kernel.asm	/^c01046c5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01046c8	obj/kernel.asm	/^c01046c8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01046cb	obj/kernel.asm	/^c01046cb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01046cf	obj/kernel.asm	/^c01046cf:	0f 84 8c 00 00 00    	je     c0104761 <pgdir_alloc_page+0xac>$/;"	l
c01046d5	obj/kernel.asm	/^c01046d5:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01046d8	obj/kernel.asm	/^c01046d8:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01046db	obj/kernel.asm	/^c01046db:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01046de	obj/kernel.asm	/^c01046de:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01046e1	obj/kernel.asm	/^c01046e1:	e8 c7 fe ff ff       	call   c01045ad <page_insert>$/;"	l
c01046e6	obj/kernel.asm	/^c01046e6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01046e9	obj/kernel.asm	/^c01046e9:	85 c0                	test   %eax,%eax$/;"	l
c01046eb	obj/kernel.asm	/^c01046eb:	74 17                	je     c0104704 <pgdir_alloc_page+0x4f>$/;"	l
c01046ed	obj/kernel.asm	/^c01046ed:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01046f0	obj/kernel.asm	/^c01046f0:	6a 01                	push   $0x1$/;"	l
c01046f2	obj/kernel.asm	/^c01046f2:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01046f5	obj/kernel.asm	/^c01046f5:	e8 b3 f2 ff ff       	call   c01039ad <free_pages>$/;"	l
c01046fa	obj/kernel.asm	/^c01046fa:	83 c4 10             	add    $0x10,%esp$/;"	l
c01046fd	obj/kernel.asm	/^c01046fd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104702	obj/kernel.asm	/^c0104702:	eb 60                	jmp    c0104764 <pgdir_alloc_page+0xaf>$/;"	l
c0104704	obj/kernel.asm	/^c0104704:	a1 70 e0 14 c0       	mov    0xc014e070,%eax$/;"	l
c0104709	obj/kernel.asm	/^c0104709:	85 c0                	test   %eax,%eax$/;"	l
c010470b	obj/kernel.asm	/^c010470b:	74 54                	je     c0104761 <pgdir_alloc_page+0xac>$/;"	l
c010470d	obj/kernel.asm	/^c010470d:	a1 1c 12 15 c0       	mov    0xc015121c,%eax$/;"	l
c0104712	obj/kernel.asm	/^c0104712:	85 c0                	test   %eax,%eax$/;"	l
c0104714	obj/kernel.asm	/^c0104714:	74 4b                	je     c0104761 <pgdir_alloc_page+0xac>$/;"	l
c0104716	obj/kernel.asm	/^c0104716:	a1 1c 12 15 c0       	mov    0xc015121c,%eax$/;"	l
c010471b	obj/kernel.asm	/^c010471b:	6a 00                	push   $0x0$/;"	l
c010471d	obj/kernel.asm	/^c010471d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104720	obj/kernel.asm	/^c0104720:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104723	obj/kernel.asm	/^c0104723:	50                   	push   %eax$/;"	l
c0104724	obj/kernel.asm	/^c0104724:	e8 e8 1d 00 00       	call   c0106511 <swap_map_swappable>$/;"	l
c0104729	obj/kernel.asm	/^c0104729:	83 c4 10             	add    $0x10,%esp$/;"	l
c010472c	obj/kernel.asm	/^c010472c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010472f	obj/kernel.asm	/^c010472f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0104732	obj/kernel.asm	/^c0104732:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c0104735	obj/kernel.asm	/^c0104735:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104738	obj/kernel.asm	/^c0104738:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010473b	obj/kernel.asm	/^c010473b:	e8 fa ef ff ff       	call   c010373a <page_ref>$/;"	l
c0104740	obj/kernel.asm	/^c0104740:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104743	obj/kernel.asm	/^c0104743:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104746	obj/kernel.asm	/^c0104746:	74 19                	je     c0104761 <pgdir_alloc_page+0xac>$/;"	l
c0104748	obj/kernel.asm	/^c0104748:	68 89 43 11 c0       	push   $0xc0114389$/;"	l
c010474d	obj/kernel.asm	/^c010474d:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104752	obj/kernel.asm	/^c0104752:	68 6e 02 00 00       	push   $0x26e$/;"	l
c0104757	obj/kernel.asm	/^c0104757:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c010475c	obj/kernel.asm	/^c010475c:	e8 6e bd ff ff       	call   c01004cf <__panic>$/;"	l
c0104761	obj/kernel.asm	/^c0104761:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104764	obj/kernel.asm	/^c0104764:	c9                   	leave  $/;"	l
c0104765	obj/kernel.asm	/^c0104765:	c3                   	ret    $/;"	l
c0104766	obj/kernel.asm	/^c0104766 <check_alloc_page>:$/;"	l
c0104766	obj/kernel.asm	/^c0104766:	55                   	push   %ebp$/;"	l
c0104767	obj/kernel.asm	/^c0104767:	89 e5                	mov    %esp,%ebp$/;"	l
c0104769	obj/kernel.asm	/^c0104769:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010476c	obj/kernel.asm	/^c010476c:	a1 10 12 15 c0       	mov    0xc0151210,%eax$/;"	l
c0104771	obj/kernel.asm	/^c0104771:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0104774	obj/kernel.asm	/^c0104774:	ff d0                	call   *%eax$/;"	l
c0104776	obj/kernel.asm	/^c0104776:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104779	obj/kernel.asm	/^c0104779:	68 a0 43 11 c0       	push   $0xc01143a0$/;"	l
c010477e	obj/kernel.asm	/^c010477e:	e8 e7 bb ff ff       	call   c010036a <cprintf>$/;"	l
c0104783	obj/kernel.asm	/^c0104783:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104786	obj/kernel.asm	/^c0104786:	c9                   	leave  $/;"	l
c0104787	obj/kernel.asm	/^c0104787:	c3                   	ret    $/;"	l
c0104788	obj/kernel.asm	/^c0104788 <check_pgdir>:$/;"	l
c0104788	obj/kernel.asm	/^c0104788:	55                   	push   %ebp$/;"	l
c0104789	obj/kernel.asm	/^c0104789:	89 e5                	mov    %esp,%ebp$/;"	l
c010478b	obj/kernel.asm	/^c010478b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010478e	obj/kernel.asm	/^c010478e:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c0104793	obj/kernel.asm	/^c0104793:	3d 00 80 03 00       	cmp    $0x38000,%eax$/;"	l
c0104798	obj/kernel.asm	/^c0104798:	76 19                	jbe    c01047b3 <check_pgdir+0x2b>$/;"	l
c010479a	obj/kernel.asm	/^c010479a:	68 bf 43 11 c0       	push   $0xc01143bf$/;"	l
c010479f	obj/kernel.asm	/^c010479f:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c01047a4	obj/kernel.asm	/^c01047a4:	68 86 02 00 00       	push   $0x286$/;"	l
c01047a9	obj/kernel.asm	/^c01047a9:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c01047ae	obj/kernel.asm	/^c01047ae:	e8 1c bd ff ff       	call   c01004cf <__panic>$/;"	l
c01047b3	obj/kernel.asm	/^c01047b3:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c01047b8	obj/kernel.asm	/^c01047b8:	85 c0                	test   %eax,%eax$/;"	l
c01047ba	obj/kernel.asm	/^c01047ba:	74 0e                	je     c01047ca <check_pgdir+0x42>$/;"	l
c01047bc	obj/kernel.asm	/^c01047bc:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c01047c1	obj/kernel.asm	/^c01047c1:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01047c6	obj/kernel.asm	/^c01047c6:	85 c0                	test   %eax,%eax$/;"	l
c01047c8	obj/kernel.asm	/^c01047c8:	74 19                	je     c01047e3 <check_pgdir+0x5b>$/;"	l
c01047ca	obj/kernel.asm	/^c01047ca:	68 dc 43 11 c0       	push   $0xc01143dc$/;"	l
c01047cf	obj/kernel.asm	/^c01047cf:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c01047d4	obj/kernel.asm	/^c01047d4:	68 87 02 00 00       	push   $0x287$/;"	l
c01047d9	obj/kernel.asm	/^c01047d9:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c01047de	obj/kernel.asm	/^c01047de:	e8 ec bc ff ff       	call   c01004cf <__panic>$/;"	l
c01047e3	obj/kernel.asm	/^c01047e3:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c01047e8	obj/kernel.asm	/^c01047e8:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01047eb	obj/kernel.asm	/^c01047eb:	6a 00                	push   $0x0$/;"	l
c01047ed	obj/kernel.asm	/^c01047ed:	6a 00                	push   $0x0$/;"	l
c01047ef	obj/kernel.asm	/^c01047ef:	50                   	push   %eax$/;"	l
c01047f0	obj/kernel.asm	/^c01047f0:	e8 24 f9 ff ff       	call   c0104119 <get_page>$/;"	l
c01047f5	obj/kernel.asm	/^c01047f5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01047f8	obj/kernel.asm	/^c01047f8:	85 c0                	test   %eax,%eax$/;"	l
c01047fa	obj/kernel.asm	/^c01047fa:	74 19                	je     c0104815 <check_pgdir+0x8d>$/;"	l
c01047fc	obj/kernel.asm	/^c01047fc:	68 14 44 11 c0       	push   $0xc0114414$/;"	l
c0104801	obj/kernel.asm	/^c0104801:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104806	obj/kernel.asm	/^c0104806:	68 88 02 00 00       	push   $0x288$/;"	l
c010480b	obj/kernel.asm	/^c010480b:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104810	obj/kernel.asm	/^c0104810:	e8 ba bc ff ff       	call   c01004cf <__panic>$/;"	l
c0104815	obj/kernel.asm	/^c0104815:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104818	obj/kernel.asm	/^c0104818:	6a 01                	push   $0x1$/;"	l
c010481a	obj/kernel.asm	/^c010481a:	e8 22 f1 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c010481f	obj/kernel.asm	/^c010481f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104822	obj/kernel.asm	/^c0104822:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104825	obj/kernel.asm	/^c0104825:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c010482a	obj/kernel.asm	/^c010482a:	6a 00                	push   $0x0$/;"	l
c010482c	obj/kernel.asm	/^c010482c:	6a 00                	push   $0x0$/;"	l
c010482e	obj/kernel.asm	/^c010482e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104831	obj/kernel.asm	/^c0104831:	50                   	push   %eax$/;"	l
c0104832	obj/kernel.asm	/^c0104832:	e8 76 fd ff ff       	call   c01045ad <page_insert>$/;"	l
c0104837	obj/kernel.asm	/^c0104837:	83 c4 10             	add    $0x10,%esp$/;"	l
c010483a	obj/kernel.asm	/^c010483a:	85 c0                	test   %eax,%eax$/;"	l
c010483c	obj/kernel.asm	/^c010483c:	74 19                	je     c0104857 <check_pgdir+0xcf>$/;"	l
c010483e	obj/kernel.asm	/^c010483e:	68 3c 44 11 c0       	push   $0xc011443c$/;"	l
c0104843	obj/kernel.asm	/^c0104843:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104848	obj/kernel.asm	/^c0104848:	68 8c 02 00 00       	push   $0x28c$/;"	l
c010484d	obj/kernel.asm	/^c010484d:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104852	obj/kernel.asm	/^c0104852:	e8 78 bc ff ff       	call   c01004cf <__panic>$/;"	l
c0104857	obj/kernel.asm	/^c0104857:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c010485c	obj/kernel.asm	/^c010485c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010485f	obj/kernel.asm	/^c010485f:	6a 00                	push   $0x0$/;"	l
c0104861	obj/kernel.asm	/^c0104861:	6a 00                	push   $0x0$/;"	l
c0104863	obj/kernel.asm	/^c0104863:	50                   	push   %eax$/;"	l
c0104864	obj/kernel.asm	/^c0104864:	e8 c1 f7 ff ff       	call   c010402a <get_pte>$/;"	l
c0104869	obj/kernel.asm	/^c0104869:	83 c4 10             	add    $0x10,%esp$/;"	l
c010486c	obj/kernel.asm	/^c010486c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010486f	obj/kernel.asm	/^c010486f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104873	obj/kernel.asm	/^c0104873:	75 19                	jne    c010488e <check_pgdir+0x106>$/;"	l
c0104875	obj/kernel.asm	/^c0104875:	68 68 44 11 c0       	push   $0xc0114468$/;"	l
c010487a	obj/kernel.asm	/^c010487a:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c010487f	obj/kernel.asm	/^c010487f:	68 8f 02 00 00       	push   $0x28f$/;"	l
c0104884	obj/kernel.asm	/^c0104884:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104889	obj/kernel.asm	/^c0104889:	e8 41 bc ff ff       	call   c01004cf <__panic>$/;"	l
c010488e	obj/kernel.asm	/^c010488e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104891	obj/kernel.asm	/^c0104891:	8b 00                	mov    (%eax),%eax$/;"	l
c0104893	obj/kernel.asm	/^c0104893:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104896	obj/kernel.asm	/^c0104896:	50                   	push   %eax$/;"	l
c0104897	obj/kernel.asm	/^c0104897:	e8 c6 ed ff ff       	call   c0103662 <pa2page>$/;"	l
c010489c	obj/kernel.asm	/^c010489c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010489f	obj/kernel.asm	/^c010489f:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01048a2	obj/kernel.asm	/^c01048a2:	74 19                	je     c01048bd <check_pgdir+0x135>$/;"	l
c01048a4	obj/kernel.asm	/^c01048a4:	68 95 44 11 c0       	push   $0xc0114495$/;"	l
c01048a9	obj/kernel.asm	/^c01048a9:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c01048ae	obj/kernel.asm	/^c01048ae:	68 90 02 00 00       	push   $0x290$/;"	l
c01048b3	obj/kernel.asm	/^c01048b3:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c01048b8	obj/kernel.asm	/^c01048b8:	e8 12 bc ff ff       	call   c01004cf <__panic>$/;"	l
c01048bd	obj/kernel.asm	/^c01048bd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01048c0	obj/kernel.asm	/^c01048c0:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01048c3	obj/kernel.asm	/^c01048c3:	e8 72 ee ff ff       	call   c010373a <page_ref>$/;"	l
c01048c8	obj/kernel.asm	/^c01048c8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01048cb	obj/kernel.asm	/^c01048cb:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01048ce	obj/kernel.asm	/^c01048ce:	74 19                	je     c01048e9 <check_pgdir+0x161>$/;"	l
c01048d0	obj/kernel.asm	/^c01048d0:	68 aa 44 11 c0       	push   $0xc01144aa$/;"	l
c01048d5	obj/kernel.asm	/^c01048d5:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c01048da	obj/kernel.asm	/^c01048da:	68 91 02 00 00       	push   $0x291$/;"	l
c01048df	obj/kernel.asm	/^c01048df:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c01048e4	obj/kernel.asm	/^c01048e4:	e8 e6 bb ff ff       	call   c01004cf <__panic>$/;"	l
c01048e9	obj/kernel.asm	/^c01048e9:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c01048ee	obj/kernel.asm	/^c01048ee:	8b 00                	mov    (%eax),%eax$/;"	l
c01048f0	obj/kernel.asm	/^c01048f0:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01048f5	obj/kernel.asm	/^c01048f5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01048f8	obj/kernel.asm	/^c01048f8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01048fb	obj/kernel.asm	/^c01048fb:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01048fe	obj/kernel.asm	/^c01048fe:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104901	obj/kernel.asm	/^c0104901:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c0104906	obj/kernel.asm	/^c0104906:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c0104909	obj/kernel.asm	/^c0104909:	72 17                	jb     c0104922 <check_pgdir+0x19a>$/;"	l
c010490b	obj/kernel.asm	/^c010490b:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010490e	obj/kernel.asm	/^c010490e:	68 00 42 11 c0       	push   $0xc0114200$/;"	l
c0104913	obj/kernel.asm	/^c0104913:	68 93 02 00 00       	push   $0x293$/;"	l
c0104918	obj/kernel.asm	/^c0104918:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c010491d	obj/kernel.asm	/^c010491d:	e8 ad bb ff ff       	call   c01004cf <__panic>$/;"	l
c0104922	obj/kernel.asm	/^c0104922:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104925	obj/kernel.asm	/^c0104925:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c010492a	obj/kernel.asm	/^c010492a:	83 c0 04             	add    $0x4,%eax$/;"	l
c010492d	obj/kernel.asm	/^c010492d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104930	obj/kernel.asm	/^c0104930:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0104935	obj/kernel.asm	/^c0104935:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104938	obj/kernel.asm	/^c0104938:	6a 00                	push   $0x0$/;"	l
c010493a	obj/kernel.asm	/^c010493a:	68 00 10 00 00       	push   $0x1000$/;"	l
c010493f	obj/kernel.asm	/^c010493f:	50                   	push   %eax$/;"	l
c0104940	obj/kernel.asm	/^c0104940:	e8 e5 f6 ff ff       	call   c010402a <get_pte>$/;"	l
c0104945	obj/kernel.asm	/^c0104945:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104948	obj/kernel.asm	/^c0104948:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010494b	obj/kernel.asm	/^c010494b:	74 19                	je     c0104966 <check_pgdir+0x1de>$/;"	l
c010494d	obj/kernel.asm	/^c010494d:	68 bc 44 11 c0       	push   $0xc01144bc$/;"	l
c0104952	obj/kernel.asm	/^c0104952:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104957	obj/kernel.asm	/^c0104957:	68 94 02 00 00       	push   $0x294$/;"	l
c010495c	obj/kernel.asm	/^c010495c:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104961	obj/kernel.asm	/^c0104961:	e8 69 bb ff ff       	call   c01004cf <__panic>$/;"	l
c0104966	obj/kernel.asm	/^c0104966:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104969	obj/kernel.asm	/^c0104969:	6a 01                	push   $0x1$/;"	l
c010496b	obj/kernel.asm	/^c010496b:	e8 d1 ef ff ff       	call   c0103941 <alloc_pages>$/;"	l
c0104970	obj/kernel.asm	/^c0104970:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104973	obj/kernel.asm	/^c0104973:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104976	obj/kernel.asm	/^c0104976:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c010497b	obj/kernel.asm	/^c010497b:	6a 06                	push   $0x6$/;"	l
c010497d	obj/kernel.asm	/^c010497d:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104982	obj/kernel.asm	/^c0104982:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104985	obj/kernel.asm	/^c0104985:	50                   	push   %eax$/;"	l
c0104986	obj/kernel.asm	/^c0104986:	e8 22 fc ff ff       	call   c01045ad <page_insert>$/;"	l
c010498b	obj/kernel.asm	/^c010498b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010498e	obj/kernel.asm	/^c010498e:	85 c0                	test   %eax,%eax$/;"	l
c0104990	obj/kernel.asm	/^c0104990:	74 19                	je     c01049ab <check_pgdir+0x223>$/;"	l
c0104992	obj/kernel.asm	/^c0104992:	68 e4 44 11 c0       	push   $0xc01144e4$/;"	l
c0104997	obj/kernel.asm	/^c0104997:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c010499c	obj/kernel.asm	/^c010499c:	68 97 02 00 00       	push   $0x297$/;"	l
c01049a1	obj/kernel.asm	/^c01049a1:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c01049a6	obj/kernel.asm	/^c01049a6:	e8 24 bb ff ff       	call   c01004cf <__panic>$/;"	l
c01049ab	obj/kernel.asm	/^c01049ab:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c01049b0	obj/kernel.asm	/^c01049b0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01049b3	obj/kernel.asm	/^c01049b3:	6a 00                	push   $0x0$/;"	l
c01049b5	obj/kernel.asm	/^c01049b5:	68 00 10 00 00       	push   $0x1000$/;"	l
c01049ba	obj/kernel.asm	/^c01049ba:	50                   	push   %eax$/;"	l
c01049bb	obj/kernel.asm	/^c01049bb:	e8 6a f6 ff ff       	call   c010402a <get_pte>$/;"	l
c01049c0	obj/kernel.asm	/^c01049c0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01049c3	obj/kernel.asm	/^c01049c3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01049c6	obj/kernel.asm	/^c01049c6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01049ca	obj/kernel.asm	/^c01049ca:	75 19                	jne    c01049e5 <check_pgdir+0x25d>$/;"	l
c01049cc	obj/kernel.asm	/^c01049cc:	68 1c 45 11 c0       	push   $0xc011451c$/;"	l
c01049d1	obj/kernel.asm	/^c01049d1:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c01049d6	obj/kernel.asm	/^c01049d6:	68 98 02 00 00       	push   $0x298$/;"	l
c01049db	obj/kernel.asm	/^c01049db:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c01049e0	obj/kernel.asm	/^c01049e0:	e8 ea ba ff ff       	call   c01004cf <__panic>$/;"	l
c01049e5	obj/kernel.asm	/^c01049e5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01049e8	obj/kernel.asm	/^c01049e8:	8b 00                	mov    (%eax),%eax$/;"	l
c01049ea	obj/kernel.asm	/^c01049ea:	83 e0 04             	and    $0x4,%eax$/;"	l
c01049ed	obj/kernel.asm	/^c01049ed:	85 c0                	test   %eax,%eax$/;"	l
c01049ef	obj/kernel.asm	/^c01049ef:	75 19                	jne    c0104a0a <check_pgdir+0x282>$/;"	l
c01049f1	obj/kernel.asm	/^c01049f1:	68 4c 45 11 c0       	push   $0xc011454c$/;"	l
c01049f6	obj/kernel.asm	/^c01049f6:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c01049fb	obj/kernel.asm	/^c01049fb:	68 99 02 00 00       	push   $0x299$/;"	l
c0104a00	obj/kernel.asm	/^c0104a00:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104a05	obj/kernel.asm	/^c0104a05:	e8 c5 ba ff ff       	call   c01004cf <__panic>$/;"	l
c0104a0a	obj/kernel.asm	/^c0104a0a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a0d	obj/kernel.asm	/^c0104a0d:	8b 00                	mov    (%eax),%eax$/;"	l
c0104a0f	obj/kernel.asm	/^c0104a0f:	83 e0 02             	and    $0x2,%eax$/;"	l
c0104a12	obj/kernel.asm	/^c0104a12:	85 c0                	test   %eax,%eax$/;"	l
c0104a14	obj/kernel.asm	/^c0104a14:	75 19                	jne    c0104a2f <check_pgdir+0x2a7>$/;"	l
c0104a16	obj/kernel.asm	/^c0104a16:	68 5a 45 11 c0       	push   $0xc011455a$/;"	l
c0104a1b	obj/kernel.asm	/^c0104a1b:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104a20	obj/kernel.asm	/^c0104a20:	68 9a 02 00 00       	push   $0x29a$/;"	l
c0104a25	obj/kernel.asm	/^c0104a25:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104a2a	obj/kernel.asm	/^c0104a2a:	e8 a0 ba ff ff       	call   c01004cf <__panic>$/;"	l
c0104a2f	obj/kernel.asm	/^c0104a2f:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0104a34	obj/kernel.asm	/^c0104a34:	8b 00                	mov    (%eax),%eax$/;"	l
c0104a36	obj/kernel.asm	/^c0104a36:	83 e0 04             	and    $0x4,%eax$/;"	l
c0104a39	obj/kernel.asm	/^c0104a39:	85 c0                	test   %eax,%eax$/;"	l
c0104a3b	obj/kernel.asm	/^c0104a3b:	75 19                	jne    c0104a56 <check_pgdir+0x2ce>$/;"	l
c0104a3d	obj/kernel.asm	/^c0104a3d:	68 68 45 11 c0       	push   $0xc0114568$/;"	l
c0104a42	obj/kernel.asm	/^c0104a42:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104a47	obj/kernel.asm	/^c0104a47:	68 9b 02 00 00       	push   $0x29b$/;"	l
c0104a4c	obj/kernel.asm	/^c0104a4c:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104a51	obj/kernel.asm	/^c0104a51:	e8 79 ba ff ff       	call   c01004cf <__panic>$/;"	l
c0104a56	obj/kernel.asm	/^c0104a56:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104a59	obj/kernel.asm	/^c0104a59:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104a5c	obj/kernel.asm	/^c0104a5c:	e8 d9 ec ff ff       	call   c010373a <page_ref>$/;"	l
c0104a61	obj/kernel.asm	/^c0104a61:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104a64	obj/kernel.asm	/^c0104a64:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104a67	obj/kernel.asm	/^c0104a67:	74 19                	je     c0104a82 <check_pgdir+0x2fa>$/;"	l
c0104a69	obj/kernel.asm	/^c0104a69:	68 7e 45 11 c0       	push   $0xc011457e$/;"	l
c0104a6e	obj/kernel.asm	/^c0104a6e:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104a73	obj/kernel.asm	/^c0104a73:	68 9c 02 00 00       	push   $0x29c$/;"	l
c0104a78	obj/kernel.asm	/^c0104a78:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104a7d	obj/kernel.asm	/^c0104a7d:	e8 4d ba ff ff       	call   c01004cf <__panic>$/;"	l
c0104a82	obj/kernel.asm	/^c0104a82:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0104a87	obj/kernel.asm	/^c0104a87:	6a 00                	push   $0x0$/;"	l
c0104a89	obj/kernel.asm	/^c0104a89:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104a8e	obj/kernel.asm	/^c0104a8e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104a91	obj/kernel.asm	/^c0104a91:	50                   	push   %eax$/;"	l
c0104a92	obj/kernel.asm	/^c0104a92:	e8 16 fb ff ff       	call   c01045ad <page_insert>$/;"	l
c0104a97	obj/kernel.asm	/^c0104a97:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104a9a	obj/kernel.asm	/^c0104a9a:	85 c0                	test   %eax,%eax$/;"	l
c0104a9c	obj/kernel.asm	/^c0104a9c:	74 19                	je     c0104ab7 <check_pgdir+0x32f>$/;"	l
c0104a9e	obj/kernel.asm	/^c0104a9e:	68 90 45 11 c0       	push   $0xc0114590$/;"	l
c0104aa3	obj/kernel.asm	/^c0104aa3:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104aa8	obj/kernel.asm	/^c0104aa8:	68 9e 02 00 00       	push   $0x29e$/;"	l
c0104aad	obj/kernel.asm	/^c0104aad:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104ab2	obj/kernel.asm	/^c0104ab2:	e8 18 ba ff ff       	call   c01004cf <__panic>$/;"	l
c0104ab7	obj/kernel.asm	/^c0104ab7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104aba	obj/kernel.asm	/^c0104aba:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104abd	obj/kernel.asm	/^c0104abd:	e8 78 ec ff ff       	call   c010373a <page_ref>$/;"	l
c0104ac2	obj/kernel.asm	/^c0104ac2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ac5	obj/kernel.asm	/^c0104ac5:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0104ac8	obj/kernel.asm	/^c0104ac8:	74 19                	je     c0104ae3 <check_pgdir+0x35b>$/;"	l
c0104aca	obj/kernel.asm	/^c0104aca:	68 bc 45 11 c0       	push   $0xc01145bc$/;"	l
c0104acf	obj/kernel.asm	/^c0104acf:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104ad4	obj/kernel.asm	/^c0104ad4:	68 9f 02 00 00       	push   $0x29f$/;"	l
c0104ad9	obj/kernel.asm	/^c0104ad9:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104ade	obj/kernel.asm	/^c0104ade:	e8 ec b9 ff ff       	call   c01004cf <__panic>$/;"	l
c0104ae3	obj/kernel.asm	/^c0104ae3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104ae6	obj/kernel.asm	/^c0104ae6:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104ae9	obj/kernel.asm	/^c0104ae9:	e8 4c ec ff ff       	call   c010373a <page_ref>$/;"	l
c0104aee	obj/kernel.asm	/^c0104aee:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104af1	obj/kernel.asm	/^c0104af1:	85 c0                	test   %eax,%eax$/;"	l
c0104af3	obj/kernel.asm	/^c0104af3:	74 19                	je     c0104b0e <check_pgdir+0x386>$/;"	l
c0104af5	obj/kernel.asm	/^c0104af5:	68 ce 45 11 c0       	push   $0xc01145ce$/;"	l
c0104afa	obj/kernel.asm	/^c0104afa:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104aff	obj/kernel.asm	/^c0104aff:	68 a0 02 00 00       	push   $0x2a0$/;"	l
c0104b04	obj/kernel.asm	/^c0104b04:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104b09	obj/kernel.asm	/^c0104b09:	e8 c1 b9 ff ff       	call   c01004cf <__panic>$/;"	l
c0104b0e	obj/kernel.asm	/^c0104b0e:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0104b13	obj/kernel.asm	/^c0104b13:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104b16	obj/kernel.asm	/^c0104b16:	6a 00                	push   $0x0$/;"	l
c0104b18	obj/kernel.asm	/^c0104b18:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104b1d	obj/kernel.asm	/^c0104b1d:	50                   	push   %eax$/;"	l
c0104b1e	obj/kernel.asm	/^c0104b1e:	e8 07 f5 ff ff       	call   c010402a <get_pte>$/;"	l
c0104b23	obj/kernel.asm	/^c0104b23:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104b26	obj/kernel.asm	/^c0104b26:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104b29	obj/kernel.asm	/^c0104b29:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104b2d	obj/kernel.asm	/^c0104b2d:	75 19                	jne    c0104b48 <check_pgdir+0x3c0>$/;"	l
c0104b2f	obj/kernel.asm	/^c0104b2f:	68 1c 45 11 c0       	push   $0xc011451c$/;"	l
c0104b34	obj/kernel.asm	/^c0104b34:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104b39	obj/kernel.asm	/^c0104b39:	68 a1 02 00 00       	push   $0x2a1$/;"	l
c0104b3e	obj/kernel.asm	/^c0104b3e:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104b43	obj/kernel.asm	/^c0104b43:	e8 87 b9 ff ff       	call   c01004cf <__panic>$/;"	l
c0104b48	obj/kernel.asm	/^c0104b48:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b4b	obj/kernel.asm	/^c0104b4b:	8b 00                	mov    (%eax),%eax$/;"	l
c0104b4d	obj/kernel.asm	/^c0104b4d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104b50	obj/kernel.asm	/^c0104b50:	50                   	push   %eax$/;"	l
c0104b51	obj/kernel.asm	/^c0104b51:	e8 0c eb ff ff       	call   c0103662 <pa2page>$/;"	l
c0104b56	obj/kernel.asm	/^c0104b56:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104b59	obj/kernel.asm	/^c0104b59:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0104b5c	obj/kernel.asm	/^c0104b5c:	74 19                	je     c0104b77 <check_pgdir+0x3ef>$/;"	l
c0104b5e	obj/kernel.asm	/^c0104b5e:	68 95 44 11 c0       	push   $0xc0114495$/;"	l
c0104b63	obj/kernel.asm	/^c0104b63:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104b68	obj/kernel.asm	/^c0104b68:	68 a2 02 00 00       	push   $0x2a2$/;"	l
c0104b6d	obj/kernel.asm	/^c0104b6d:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104b72	obj/kernel.asm	/^c0104b72:	e8 58 b9 ff ff       	call   c01004cf <__panic>$/;"	l
c0104b77	obj/kernel.asm	/^c0104b77:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b7a	obj/kernel.asm	/^c0104b7a:	8b 00                	mov    (%eax),%eax$/;"	l
c0104b7c	obj/kernel.asm	/^c0104b7c:	83 e0 04             	and    $0x4,%eax$/;"	l
c0104b7f	obj/kernel.asm	/^c0104b7f:	85 c0                	test   %eax,%eax$/;"	l
c0104b81	obj/kernel.asm	/^c0104b81:	74 19                	je     c0104b9c <check_pgdir+0x414>$/;"	l
c0104b83	obj/kernel.asm	/^c0104b83:	68 e0 45 11 c0       	push   $0xc01145e0$/;"	l
c0104b88	obj/kernel.asm	/^c0104b88:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104b8d	obj/kernel.asm	/^c0104b8d:	68 a3 02 00 00       	push   $0x2a3$/;"	l
c0104b92	obj/kernel.asm	/^c0104b92:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104b97	obj/kernel.asm	/^c0104b97:	e8 33 b9 ff ff       	call   c01004cf <__panic>$/;"	l
c0104b9c	obj/kernel.asm	/^c0104b9c:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0104ba1	obj/kernel.asm	/^c0104ba1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104ba4	obj/kernel.asm	/^c0104ba4:	6a 00                	push   $0x0$/;"	l
c0104ba6	obj/kernel.asm	/^c0104ba6:	50                   	push   %eax$/;"	l
c0104ba7	obj/kernel.asm	/^c0104ba7:	e8 c9 f9 ff ff       	call   c0104575 <page_remove>$/;"	l
c0104bac	obj/kernel.asm	/^c0104bac:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104baf	obj/kernel.asm	/^c0104baf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104bb2	obj/kernel.asm	/^c0104bb2:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104bb5	obj/kernel.asm	/^c0104bb5:	e8 80 eb ff ff       	call   c010373a <page_ref>$/;"	l
c0104bba	obj/kernel.asm	/^c0104bba:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104bbd	obj/kernel.asm	/^c0104bbd:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104bc0	obj/kernel.asm	/^c0104bc0:	74 19                	je     c0104bdb <check_pgdir+0x453>$/;"	l
c0104bc2	obj/kernel.asm	/^c0104bc2:	68 aa 44 11 c0       	push   $0xc01144aa$/;"	l
c0104bc7	obj/kernel.asm	/^c0104bc7:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104bcc	obj/kernel.asm	/^c0104bcc:	68 a6 02 00 00       	push   $0x2a6$/;"	l
c0104bd1	obj/kernel.asm	/^c0104bd1:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104bd6	obj/kernel.asm	/^c0104bd6:	e8 f4 b8 ff ff       	call   c01004cf <__panic>$/;"	l
c0104bdb	obj/kernel.asm	/^c0104bdb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104bde	obj/kernel.asm	/^c0104bde:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104be1	obj/kernel.asm	/^c0104be1:	e8 54 eb ff ff       	call   c010373a <page_ref>$/;"	l
c0104be6	obj/kernel.asm	/^c0104be6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104be9	obj/kernel.asm	/^c0104be9:	85 c0                	test   %eax,%eax$/;"	l
c0104beb	obj/kernel.asm	/^c0104beb:	74 19                	je     c0104c06 <check_pgdir+0x47e>$/;"	l
c0104bed	obj/kernel.asm	/^c0104bed:	68 ce 45 11 c0       	push   $0xc01145ce$/;"	l
c0104bf2	obj/kernel.asm	/^c0104bf2:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104bf7	obj/kernel.asm	/^c0104bf7:	68 a7 02 00 00       	push   $0x2a7$/;"	l
c0104bfc	obj/kernel.asm	/^c0104bfc:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104c01	obj/kernel.asm	/^c0104c01:	e8 c9 b8 ff ff       	call   c01004cf <__panic>$/;"	l
c0104c06	obj/kernel.asm	/^c0104c06:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0104c0b	obj/kernel.asm	/^c0104c0b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104c0e	obj/kernel.asm	/^c0104c0e:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104c13	obj/kernel.asm	/^c0104c13:	50                   	push   %eax$/;"	l
c0104c14	obj/kernel.asm	/^c0104c14:	e8 5c f9 ff ff       	call   c0104575 <page_remove>$/;"	l
c0104c19	obj/kernel.asm	/^c0104c19:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c1c	obj/kernel.asm	/^c0104c1c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104c1f	obj/kernel.asm	/^c0104c1f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104c22	obj/kernel.asm	/^c0104c22:	e8 13 eb ff ff       	call   c010373a <page_ref>$/;"	l
c0104c27	obj/kernel.asm	/^c0104c27:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c2a	obj/kernel.asm	/^c0104c2a:	85 c0                	test   %eax,%eax$/;"	l
c0104c2c	obj/kernel.asm	/^c0104c2c:	74 19                	je     c0104c47 <check_pgdir+0x4bf>$/;"	l
c0104c2e	obj/kernel.asm	/^c0104c2e:	68 f5 45 11 c0       	push   $0xc01145f5$/;"	l
c0104c33	obj/kernel.asm	/^c0104c33:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104c38	obj/kernel.asm	/^c0104c38:	68 aa 02 00 00       	push   $0x2aa$/;"	l
c0104c3d	obj/kernel.asm	/^c0104c3d:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104c42	obj/kernel.asm	/^c0104c42:	e8 88 b8 ff ff       	call   c01004cf <__panic>$/;"	l
c0104c47	obj/kernel.asm	/^c0104c47:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104c4a	obj/kernel.asm	/^c0104c4a:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104c4d	obj/kernel.asm	/^c0104c4d:	e8 e8 ea ff ff       	call   c010373a <page_ref>$/;"	l
c0104c52	obj/kernel.asm	/^c0104c52:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c55	obj/kernel.asm	/^c0104c55:	85 c0                	test   %eax,%eax$/;"	l
c0104c57	obj/kernel.asm	/^c0104c57:	74 19                	je     c0104c72 <check_pgdir+0x4ea>$/;"	l
c0104c59	obj/kernel.asm	/^c0104c59:	68 ce 45 11 c0       	push   $0xc01145ce$/;"	l
c0104c5e	obj/kernel.asm	/^c0104c5e:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104c63	obj/kernel.asm	/^c0104c63:	68 ab 02 00 00       	push   $0x2ab$/;"	l
c0104c68	obj/kernel.asm	/^c0104c68:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104c6d	obj/kernel.asm	/^c0104c6d:	e8 5d b8 ff ff       	call   c01004cf <__panic>$/;"	l
c0104c72	obj/kernel.asm	/^c0104c72:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0104c77	obj/kernel.asm	/^c0104c77:	8b 00                	mov    (%eax),%eax$/;"	l
c0104c79	obj/kernel.asm	/^c0104c79:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104c7c	obj/kernel.asm	/^c0104c7c:	50                   	push   %eax$/;"	l
c0104c7d	obj/kernel.asm	/^c0104c7d:	e8 e0 e9 ff ff       	call   c0103662 <pa2page>$/;"	l
c0104c82	obj/kernel.asm	/^c0104c82:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c85	obj/kernel.asm	/^c0104c85:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104c88	obj/kernel.asm	/^c0104c88:	50                   	push   %eax$/;"	l
c0104c89	obj/kernel.asm	/^c0104c89:	e8 ac ea ff ff       	call   c010373a <page_ref>$/;"	l
c0104c8e	obj/kernel.asm	/^c0104c8e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c91	obj/kernel.asm	/^c0104c91:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104c94	obj/kernel.asm	/^c0104c94:	74 19                	je     c0104caf <check_pgdir+0x527>$/;"	l
c0104c96	obj/kernel.asm	/^c0104c96:	68 08 46 11 c0       	push   $0xc0114608$/;"	l
c0104c9b	obj/kernel.asm	/^c0104c9b:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104ca0	obj/kernel.asm	/^c0104ca0:	68 ad 02 00 00       	push   $0x2ad$/;"	l
c0104ca5	obj/kernel.asm	/^c0104ca5:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104caa	obj/kernel.asm	/^c0104caa:	e8 20 b8 ff ff       	call   c01004cf <__panic>$/;"	l
c0104caf	obj/kernel.asm	/^c0104caf:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0104cb4	obj/kernel.asm	/^c0104cb4:	8b 00                	mov    (%eax),%eax$/;"	l
c0104cb6	obj/kernel.asm	/^c0104cb6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104cb9	obj/kernel.asm	/^c0104cb9:	50                   	push   %eax$/;"	l
c0104cba	obj/kernel.asm	/^c0104cba:	e8 a3 e9 ff ff       	call   c0103662 <pa2page>$/;"	l
c0104cbf	obj/kernel.asm	/^c0104cbf:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104cc2	obj/kernel.asm	/^c0104cc2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104cc5	obj/kernel.asm	/^c0104cc5:	6a 01                	push   $0x1$/;"	l
c0104cc7	obj/kernel.asm	/^c0104cc7:	50                   	push   %eax$/;"	l
c0104cc8	obj/kernel.asm	/^c0104cc8:	e8 e0 ec ff ff       	call   c01039ad <free_pages>$/;"	l
c0104ccd	obj/kernel.asm	/^c0104ccd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104cd0	obj/kernel.asm	/^c0104cd0:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0104cd5	obj/kernel.asm	/^c0104cd5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0104cdb	obj/kernel.asm	/^c0104cdb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104cde	obj/kernel.asm	/^c0104cde:	68 2e 46 11 c0       	push   $0xc011462e$/;"	l
c0104ce3	obj/kernel.asm	/^c0104ce3:	e8 82 b6 ff ff       	call   c010036a <cprintf>$/;"	l
c0104ce8	obj/kernel.asm	/^c0104ce8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ceb	obj/kernel.asm	/^c0104ceb:	c9                   	leave  $/;"	l
c0104cec	obj/kernel.asm	/^c0104cec:	c3                   	ret    $/;"	l
c0104ced	obj/kernel.asm	/^c0104ced <check_boot_pgdir>:$/;"	l
c0104ced	obj/kernel.asm	/^c0104ced:	55                   	push   %ebp$/;"	l
c0104cee	obj/kernel.asm	/^c0104cee:	89 e5                	mov    %esp,%ebp$/;"	l
c0104cf0	obj/kernel.asm	/^c0104cf0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104cf3	obj/kernel.asm	/^c0104cf3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0104cfa	obj/kernel.asm	/^c0104cfa:	e9 a3 00 00 00       	jmp    c0104da2 <check_boot_pgdir+0xb5>$/;"	l
c0104cff	obj/kernel.asm	/^c0104cff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d02	obj/kernel.asm	/^c0104d02:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104d05	obj/kernel.asm	/^c0104d05:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104d08	obj/kernel.asm	/^c0104d08:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104d0b	obj/kernel.asm	/^c0104d0b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104d0e	obj/kernel.asm	/^c0104d0e:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c0104d13	obj/kernel.asm	/^c0104d13:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c0104d16	obj/kernel.asm	/^c0104d16:	72 17                	jb     c0104d2f <check_boot_pgdir+0x42>$/;"	l
c0104d18	obj/kernel.asm	/^c0104d18:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0104d1b	obj/kernel.asm	/^c0104d1b:	68 00 42 11 c0       	push   $0xc0114200$/;"	l
c0104d20	obj/kernel.asm	/^c0104d20:	68 b9 02 00 00       	push   $0x2b9$/;"	l
c0104d25	obj/kernel.asm	/^c0104d25:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104d2a	obj/kernel.asm	/^c0104d2a:	e8 a0 b7 ff ff       	call   c01004cf <__panic>$/;"	l
c0104d2f	obj/kernel.asm	/^c0104d2f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104d32	obj/kernel.asm	/^c0104d32:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104d37	obj/kernel.asm	/^c0104d37:	89 c2                	mov    %eax,%edx$/;"	l
c0104d39	obj/kernel.asm	/^c0104d39:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0104d3e	obj/kernel.asm	/^c0104d3e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104d41	obj/kernel.asm	/^c0104d41:	6a 00                	push   $0x0$/;"	l
c0104d43	obj/kernel.asm	/^c0104d43:	52                   	push   %edx$/;"	l
c0104d44	obj/kernel.asm	/^c0104d44:	50                   	push   %eax$/;"	l
c0104d45	obj/kernel.asm	/^c0104d45:	e8 e0 f2 ff ff       	call   c010402a <get_pte>$/;"	l
c0104d4a	obj/kernel.asm	/^c0104d4a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104d4d	obj/kernel.asm	/^c0104d4d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104d50	obj/kernel.asm	/^c0104d50:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0104d54	obj/kernel.asm	/^c0104d54:	75 19                	jne    c0104d6f <check_boot_pgdir+0x82>$/;"	l
c0104d56	obj/kernel.asm	/^c0104d56:	68 48 46 11 c0       	push   $0xc0114648$/;"	l
c0104d5b	obj/kernel.asm	/^c0104d5b:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104d60	obj/kernel.asm	/^c0104d60:	68 b9 02 00 00       	push   $0x2b9$/;"	l
c0104d65	obj/kernel.asm	/^c0104d65:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104d6a	obj/kernel.asm	/^c0104d6a:	e8 60 b7 ff ff       	call   c01004cf <__panic>$/;"	l
c0104d6f	obj/kernel.asm	/^c0104d6f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0104d72	obj/kernel.asm	/^c0104d72:	8b 00                	mov    (%eax),%eax$/;"	l
c0104d74	obj/kernel.asm	/^c0104d74:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104d79	obj/kernel.asm	/^c0104d79:	89 c2                	mov    %eax,%edx$/;"	l
c0104d7b	obj/kernel.asm	/^c0104d7b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d7e	obj/kernel.asm	/^c0104d7e:	39 c2                	cmp    %eax,%edx$/;"	l
c0104d80	obj/kernel.asm	/^c0104d80:	74 19                	je     c0104d9b <check_boot_pgdir+0xae>$/;"	l
c0104d82	obj/kernel.asm	/^c0104d82:	68 85 46 11 c0       	push   $0xc0114685$/;"	l
c0104d87	obj/kernel.asm	/^c0104d87:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104d8c	obj/kernel.asm	/^c0104d8c:	68 ba 02 00 00       	push   $0x2ba$/;"	l
c0104d91	obj/kernel.asm	/^c0104d91:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104d96	obj/kernel.asm	/^c0104d96:	e8 34 b7 ff ff       	call   c01004cf <__panic>$/;"	l
c0104d9b	obj/kernel.asm	/^c0104d9b:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
c0104da2	obj/kernel.asm	/^c0104da2:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0104da5	obj/kernel.asm	/^c0104da5:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c0104daa	obj/kernel.asm	/^c0104daa:	39 c2                	cmp    %eax,%edx$/;"	l
c0104dac	obj/kernel.asm	/^c0104dac:	0f 82 4d ff ff ff    	jb     c0104cff <check_boot_pgdir+0x12>$/;"	l
c0104db2	obj/kernel.asm	/^c0104db2:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0104db7	obj/kernel.asm	/^c0104db7:	05 ac 0f 00 00       	add    $0xfac,%eax$/;"	l
c0104dbc	obj/kernel.asm	/^c0104dbc:	8b 00                	mov    (%eax),%eax$/;"	l
c0104dbe	obj/kernel.asm	/^c0104dbe:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104dc3	obj/kernel.asm	/^c0104dc3:	89 c2                	mov    %eax,%edx$/;"	l
c0104dc5	obj/kernel.asm	/^c0104dc5:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0104dca	obj/kernel.asm	/^c0104dca:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104dcd	obj/kernel.asm	/^c0104dcd:	81 7d e4 ff ff ff bf 	cmpl   $0xbfffffff,-0x1c(%ebp)$/;"	l
c0104dd4	obj/kernel.asm	/^c0104dd4:	77 17                	ja     c0104ded <check_boot_pgdir+0x100>$/;"	l
c0104dd6	obj/kernel.asm	/^c0104dd6:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104dd9	obj/kernel.asm	/^c0104dd9:	68 a4 42 11 c0       	push   $0xc01142a4$/;"	l
c0104dde	obj/kernel.asm	/^c0104dde:	68 bd 02 00 00       	push   $0x2bd$/;"	l
c0104de3	obj/kernel.asm	/^c0104de3:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104de8	obj/kernel.asm	/^c0104de8:	e8 e2 b6 ff ff       	call   c01004cf <__panic>$/;"	l
c0104ded	obj/kernel.asm	/^c0104ded:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104df0	obj/kernel.asm	/^c0104df0:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0104df5	obj/kernel.asm	/^c0104df5:	39 c2                	cmp    %eax,%edx$/;"	l
c0104df7	obj/kernel.asm	/^c0104df7:	74 19                	je     c0104e12 <check_boot_pgdir+0x125>$/;"	l
c0104df9	obj/kernel.asm	/^c0104df9:	68 9c 46 11 c0       	push   $0xc011469c$/;"	l
c0104dfe	obj/kernel.asm	/^c0104dfe:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104e03	obj/kernel.asm	/^c0104e03:	68 bd 02 00 00       	push   $0x2bd$/;"	l
c0104e08	obj/kernel.asm	/^c0104e08:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104e0d	obj/kernel.asm	/^c0104e0d:	e8 bd b6 ff ff       	call   c01004cf <__panic>$/;"	l
c0104e12	obj/kernel.asm	/^c0104e12:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0104e17	obj/kernel.asm	/^c0104e17:	8b 00                	mov    (%eax),%eax$/;"	l
c0104e19	obj/kernel.asm	/^c0104e19:	85 c0                	test   %eax,%eax$/;"	l
c0104e1b	obj/kernel.asm	/^c0104e1b:	74 19                	je     c0104e36 <check_boot_pgdir+0x149>$/;"	l
c0104e1d	obj/kernel.asm	/^c0104e1d:	68 d0 46 11 c0       	push   $0xc01146d0$/;"	l
c0104e22	obj/kernel.asm	/^c0104e22:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104e27	obj/kernel.asm	/^c0104e27:	68 bf 02 00 00       	push   $0x2bf$/;"	l
c0104e2c	obj/kernel.asm	/^c0104e2c:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104e31	obj/kernel.asm	/^c0104e31:	e8 99 b6 ff ff       	call   c01004cf <__panic>$/;"	l
c0104e36	obj/kernel.asm	/^c0104e36:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104e39	obj/kernel.asm	/^c0104e39:	6a 01                	push   $0x1$/;"	l
c0104e3b	obj/kernel.asm	/^c0104e3b:	e8 01 eb ff ff       	call   c0103941 <alloc_pages>$/;"	l
c0104e40	obj/kernel.asm	/^c0104e40:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104e43	obj/kernel.asm	/^c0104e43:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0104e46	obj/kernel.asm	/^c0104e46:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0104e4b	obj/kernel.asm	/^c0104e4b:	6a 02                	push   $0x2$/;"	l
c0104e4d	obj/kernel.asm	/^c0104e4d:	68 00 01 00 00       	push   $0x100$/;"	l
c0104e52	obj/kernel.asm	/^c0104e52:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104e55	obj/kernel.asm	/^c0104e55:	50                   	push   %eax$/;"	l
c0104e56	obj/kernel.asm	/^c0104e56:	e8 52 f7 ff ff       	call   c01045ad <page_insert>$/;"	l
c0104e5b	obj/kernel.asm	/^c0104e5b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104e5e	obj/kernel.asm	/^c0104e5e:	85 c0                	test   %eax,%eax$/;"	l
c0104e60	obj/kernel.asm	/^c0104e60:	74 19                	je     c0104e7b <check_boot_pgdir+0x18e>$/;"	l
c0104e62	obj/kernel.asm	/^c0104e62:	68 e4 46 11 c0       	push   $0xc01146e4$/;"	l
c0104e67	obj/kernel.asm	/^c0104e67:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104e6c	obj/kernel.asm	/^c0104e6c:	68 c3 02 00 00       	push   $0x2c3$/;"	l
c0104e71	obj/kernel.asm	/^c0104e71:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104e76	obj/kernel.asm	/^c0104e76:	e8 54 b6 ff ff       	call   c01004cf <__panic>$/;"	l
c0104e7b	obj/kernel.asm	/^c0104e7b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104e7e	obj/kernel.asm	/^c0104e7e:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104e81	obj/kernel.asm	/^c0104e81:	e8 b4 e8 ff ff       	call   c010373a <page_ref>$/;"	l
c0104e86	obj/kernel.asm	/^c0104e86:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104e89	obj/kernel.asm	/^c0104e89:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104e8c	obj/kernel.asm	/^c0104e8c:	74 19                	je     c0104ea7 <check_boot_pgdir+0x1ba>$/;"	l
c0104e8e	obj/kernel.asm	/^c0104e8e:	68 12 47 11 c0       	push   $0xc0114712$/;"	l
c0104e93	obj/kernel.asm	/^c0104e93:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104e98	obj/kernel.asm	/^c0104e98:	68 c4 02 00 00       	push   $0x2c4$/;"	l
c0104e9d	obj/kernel.asm	/^c0104e9d:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104ea2	obj/kernel.asm	/^c0104ea2:	e8 28 b6 ff ff       	call   c01004cf <__panic>$/;"	l
c0104ea7	obj/kernel.asm	/^c0104ea7:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0104eac	obj/kernel.asm	/^c0104eac:	6a 02                	push   $0x2$/;"	l
c0104eae	obj/kernel.asm	/^c0104eae:	68 00 11 00 00       	push   $0x1100$/;"	l
c0104eb3	obj/kernel.asm	/^c0104eb3:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104eb6	obj/kernel.asm	/^c0104eb6:	50                   	push   %eax$/;"	l
c0104eb7	obj/kernel.asm	/^c0104eb7:	e8 f1 f6 ff ff       	call   c01045ad <page_insert>$/;"	l
c0104ebc	obj/kernel.asm	/^c0104ebc:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ebf	obj/kernel.asm	/^c0104ebf:	85 c0                	test   %eax,%eax$/;"	l
c0104ec1	obj/kernel.asm	/^c0104ec1:	74 19                	je     c0104edc <check_boot_pgdir+0x1ef>$/;"	l
c0104ec3	obj/kernel.asm	/^c0104ec3:	68 24 47 11 c0       	push   $0xc0114724$/;"	l
c0104ec8	obj/kernel.asm	/^c0104ec8:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104ecd	obj/kernel.asm	/^c0104ecd:	68 c5 02 00 00       	push   $0x2c5$/;"	l
c0104ed2	obj/kernel.asm	/^c0104ed2:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104ed7	obj/kernel.asm	/^c0104ed7:	e8 f3 b5 ff ff       	call   c01004cf <__panic>$/;"	l
c0104edc	obj/kernel.asm	/^c0104edc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104edf	obj/kernel.asm	/^c0104edf:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104ee2	obj/kernel.asm	/^c0104ee2:	e8 53 e8 ff ff       	call   c010373a <page_ref>$/;"	l
c0104ee7	obj/kernel.asm	/^c0104ee7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104eea	obj/kernel.asm	/^c0104eea:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0104eed	obj/kernel.asm	/^c0104eed:	74 19                	je     c0104f08 <check_boot_pgdir+0x21b>$/;"	l
c0104eef	obj/kernel.asm	/^c0104eef:	68 5b 47 11 c0       	push   $0xc011475b$/;"	l
c0104ef4	obj/kernel.asm	/^c0104ef4:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104ef9	obj/kernel.asm	/^c0104ef9:	68 c6 02 00 00       	push   $0x2c6$/;"	l
c0104efe	obj/kernel.asm	/^c0104efe:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104f03	obj/kernel.asm	/^c0104f03:	e8 c7 b5 ff ff       	call   c01004cf <__panic>$/;"	l
c0104f08	obj/kernel.asm	/^c0104f08:	c7 45 dc 6c 47 11 c0 	movl   $0xc011476c,-0x24(%ebp)$/;"	l
c0104f0f	obj/kernel.asm	/^c0104f0f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104f12	obj/kernel.asm	/^c0104f12:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0104f15	obj/kernel.asm	/^c0104f15:	68 00 01 00 00       	push   $0x100$/;"	l
c0104f1a	obj/kernel.asm	/^c0104f1a:	e8 f4 dd 00 00       	call   c0112d13 <strcpy>$/;"	l
c0104f1f	obj/kernel.asm	/^c0104f1f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104f22	obj/kernel.asm	/^c0104f22:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104f25	obj/kernel.asm	/^c0104f25:	68 00 11 00 00       	push   $0x1100$/;"	l
c0104f2a	obj/kernel.asm	/^c0104f2a:	68 00 01 00 00       	push   $0x100$/;"	l
c0104f2f	obj/kernel.asm	/^c0104f2f:	e8 59 de 00 00       	call   c0112d8d <strcmp>$/;"	l
c0104f34	obj/kernel.asm	/^c0104f34:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104f37	obj/kernel.asm	/^c0104f37:	85 c0                	test   %eax,%eax$/;"	l
c0104f39	obj/kernel.asm	/^c0104f39:	74 19                	je     c0104f54 <check_boot_pgdir+0x267>$/;"	l
c0104f3b	obj/kernel.asm	/^c0104f3b:	68 84 47 11 c0       	push   $0xc0114784$/;"	l
c0104f40	obj/kernel.asm	/^c0104f40:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104f45	obj/kernel.asm	/^c0104f45:	68 ca 02 00 00       	push   $0x2ca$/;"	l
c0104f4a	obj/kernel.asm	/^c0104f4a:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104f4f	obj/kernel.asm	/^c0104f4f:	e8 7b b5 ff ff       	call   c01004cf <__panic>$/;"	l
c0104f54	obj/kernel.asm	/^c0104f54:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104f57	obj/kernel.asm	/^c0104f57:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104f5a	obj/kernel.asm	/^c0104f5a:	e8 40 e7 ff ff       	call   c010369f <page2kva>$/;"	l
c0104f5f	obj/kernel.asm	/^c0104f5f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104f62	obj/kernel.asm	/^c0104f62:	05 00 01 00 00       	add    $0x100,%eax$/;"	l
c0104f67	obj/kernel.asm	/^c0104f67:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0104f6a	obj/kernel.asm	/^c0104f6a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104f6d	obj/kernel.asm	/^c0104f6d:	68 00 01 00 00       	push   $0x100$/;"	l
c0104f72	obj/kernel.asm	/^c0104f72:	e8 1b dd 00 00       	call   c0112c92 <strlen>$/;"	l
c0104f77	obj/kernel.asm	/^c0104f77:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104f7a	obj/kernel.asm	/^c0104f7a:	85 c0                	test   %eax,%eax$/;"	l
c0104f7c	obj/kernel.asm	/^c0104f7c:	74 19                	je     c0104f97 <check_boot_pgdir+0x2aa>$/;"	l
c0104f7e	obj/kernel.asm	/^c0104f7e:	68 bc 47 11 c0       	push   $0xc01147bc$/;"	l
c0104f83	obj/kernel.asm	/^c0104f83:	68 ed 42 11 c0       	push   $0xc01142ed$/;"	l
c0104f88	obj/kernel.asm	/^c0104f88:	68 cd 02 00 00       	push   $0x2cd$/;"	l
c0104f8d	obj/kernel.asm	/^c0104f8d:	68 c8 42 11 c0       	push   $0xc01142c8$/;"	l
c0104f92	obj/kernel.asm	/^c0104f92:	e8 38 b5 ff ff       	call   c01004cf <__panic>$/;"	l
c0104f97	obj/kernel.asm	/^c0104f97:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104f9a	obj/kernel.asm	/^c0104f9a:	6a 01                	push   $0x1$/;"	l
c0104f9c	obj/kernel.asm	/^c0104f9c:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104f9f	obj/kernel.asm	/^c0104f9f:	e8 09 ea ff ff       	call   c01039ad <free_pages>$/;"	l
c0104fa4	obj/kernel.asm	/^c0104fa4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104fa7	obj/kernel.asm	/^c0104fa7:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0104fac	obj/kernel.asm	/^c0104fac:	8b 00                	mov    (%eax),%eax$/;"	l
c0104fae	obj/kernel.asm	/^c0104fae:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104fb3	obj/kernel.asm	/^c0104fb3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104fb6	obj/kernel.asm	/^c0104fb6:	50                   	push   %eax$/;"	l
c0104fb7	obj/kernel.asm	/^c0104fb7:	e8 a6 e6 ff ff       	call   c0103662 <pa2page>$/;"	l
c0104fbc	obj/kernel.asm	/^c0104fbc:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104fbf	obj/kernel.asm	/^c0104fbf:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104fc2	obj/kernel.asm	/^c0104fc2:	6a 01                	push   $0x1$/;"	l
c0104fc4	obj/kernel.asm	/^c0104fc4:	50                   	push   %eax$/;"	l
c0104fc5	obj/kernel.asm	/^c0104fc5:	e8 e3 e9 ff ff       	call   c01039ad <free_pages>$/;"	l
c0104fca	obj/kernel.asm	/^c0104fca:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104fcd	obj/kernel.asm	/^c0104fcd:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c0104fd2	obj/kernel.asm	/^c0104fd2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0104fd8	obj/kernel.asm	/^c0104fd8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104fdb	obj/kernel.asm	/^c0104fdb:	68 e0 47 11 c0       	push   $0xc01147e0$/;"	l
c0104fe0	obj/kernel.asm	/^c0104fe0:	e8 85 b3 ff ff       	call   c010036a <cprintf>$/;"	l
c0104fe5	obj/kernel.asm	/^c0104fe5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104fe8	obj/kernel.asm	/^c0104fe8:	c9                   	leave  $/;"	l
c0104fe9	obj/kernel.asm	/^c0104fe9:	c3                   	ret    $/;"	l
c0104fea	obj/kernel.asm	/^c0104fea <perm2str>:$/;"	l
c0104fea	obj/kernel.asm	/^c0104fea:	55                   	push   %ebp$/;"	l
c0104feb	obj/kernel.asm	/^c0104feb:	89 e5                	mov    %esp,%ebp$/;"	l
c0104fed	obj/kernel.asm	/^c0104fed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104ff0	obj/kernel.asm	/^c0104ff0:	83 e0 04             	and    $0x4,%eax$/;"	l
c0104ff3	obj/kernel.asm	/^c0104ff3:	85 c0                	test   %eax,%eax$/;"	l
c0104ff5	obj/kernel.asm	/^c0104ff5:	74 07                	je     c0104ffe <perm2str+0x14>$/;"	l
c0104ff7	obj/kernel.asm	/^c0104ff7:	b8 75 00 00 00       	mov    $0x75,%eax$/;"	l
c0104ffc	obj/kernel.asm	/^c0104ffc:	eb 05                	jmp    c0105003 <perm2str+0x19>$/;"	l
c0104ffe	obj/kernel.asm	/^c0104ffe:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c0105003	obj/kernel.asm	/^c0105003:	a2 68 e0 14 c0       	mov    %al,0xc014e068$/;"	l
c0105008	obj/kernel.asm	/^c0105008:	c6 05 69 e0 14 c0 72 	movb   $0x72,0xc014e069$/;"	l
c010500f	obj/kernel.asm	/^c010500f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105012	obj/kernel.asm	/^c0105012:	83 e0 02             	and    $0x2,%eax$/;"	l
c0105015	obj/kernel.asm	/^c0105015:	85 c0                	test   %eax,%eax$/;"	l
c0105017	obj/kernel.asm	/^c0105017:	74 07                	je     c0105020 <perm2str+0x36>$/;"	l
c0105019	obj/kernel.asm	/^c0105019:	b8 77 00 00 00       	mov    $0x77,%eax$/;"	l
c010501e	obj/kernel.asm	/^c010501e:	eb 05                	jmp    c0105025 <perm2str+0x3b>$/;"	l
c0105020	obj/kernel.asm	/^c0105020:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c0105025	obj/kernel.asm	/^c0105025:	a2 6a e0 14 c0       	mov    %al,0xc014e06a$/;"	l
c010502a	obj/kernel.asm	/^c010502a:	c6 05 6b e0 14 c0 00 	movb   $0x0,0xc014e06b$/;"	l
c0105031	obj/kernel.asm	/^c0105031:	b8 68 e0 14 c0       	mov    $0xc014e068,%eax$/;"	l
c0105036	obj/kernel.asm	/^c0105036:	5d                   	pop    %ebp$/;"	l
c0105037	obj/kernel.asm	/^c0105037:	c3                   	ret    $/;"	l
c0105038	obj/kernel.asm	/^c0105038 <get_pgtable_items>:$/;"	l
c0105038	obj/kernel.asm	/^c0105038:	55                   	push   %ebp$/;"	l
c0105039	obj/kernel.asm	/^c0105039:	89 e5                	mov    %esp,%ebp$/;"	l
c010503b	obj/kernel.asm	/^c010503b:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010503e	obj/kernel.asm	/^c010503e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105041	obj/kernel.asm	/^c0105041:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0105044	obj/kernel.asm	/^c0105044:	72 0a                	jb     c0105050 <get_pgtable_items+0x18>$/;"	l
c0105046	obj/kernel.asm	/^c0105046:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010504b	obj/kernel.asm	/^c010504b:	e9 9c 00 00 00       	jmp    c01050ec <get_pgtable_items+0xb4>$/;"	l
c0105050	obj/kernel.asm	/^c0105050:	eb 04                	jmp    c0105056 <get_pgtable_items+0x1e>$/;"	l
c0105052	obj/kernel.asm	/^c0105052:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0105056	obj/kernel.asm	/^c0105056:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105059	obj/kernel.asm	/^c0105059:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010505c	obj/kernel.asm	/^c010505c:	73 18                	jae    c0105076 <get_pgtable_items+0x3e>$/;"	l
c010505e	obj/kernel.asm	/^c010505e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105061	obj/kernel.asm	/^c0105061:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0105068	obj/kernel.asm	/^c0105068:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010506b	obj/kernel.asm	/^c010506b:	01 d0                	add    %edx,%eax$/;"	l
c010506d	obj/kernel.asm	/^c010506d:	8b 00                	mov    (%eax),%eax$/;"	l
c010506f	obj/kernel.asm	/^c010506f:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105072	obj/kernel.asm	/^c0105072:	85 c0                	test   %eax,%eax$/;"	l
c0105074	obj/kernel.asm	/^c0105074:	74 dc                	je     c0105052 <get_pgtable_items+0x1a>$/;"	l
c0105076	obj/kernel.asm	/^c0105076:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105079	obj/kernel.asm	/^c0105079:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010507c	obj/kernel.asm	/^c010507c:	73 69                	jae    c01050e7 <get_pgtable_items+0xaf>$/;"	l
c010507e	obj/kernel.asm	/^c010507e:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0105082	obj/kernel.asm	/^c0105082:	74 08                	je     c010508c <get_pgtable_items+0x54>$/;"	l
c0105084	obj/kernel.asm	/^c0105084:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0105087	obj/kernel.asm	/^c0105087:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010508a	obj/kernel.asm	/^c010508a:	89 10                	mov    %edx,(%eax)$/;"	l
c010508c	obj/kernel.asm	/^c010508c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010508f	obj/kernel.asm	/^c010508f:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0105092	obj/kernel.asm	/^c0105092:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c0105095	obj/kernel.asm	/^c0105095:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010509c	obj/kernel.asm	/^c010509c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010509f	obj/kernel.asm	/^c010509f:	01 d0                	add    %edx,%eax$/;"	l
c01050a1	obj/kernel.asm	/^c01050a1:	8b 00                	mov    (%eax),%eax$/;"	l
c01050a3	obj/kernel.asm	/^c01050a3:	83 e0 07             	and    $0x7,%eax$/;"	l
c01050a6	obj/kernel.asm	/^c01050a6:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01050a9	obj/kernel.asm	/^c01050a9:	eb 04                	jmp    c01050af <get_pgtable_items+0x77>$/;"	l
c01050ab	obj/kernel.asm	/^c01050ab:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c01050af	obj/kernel.asm	/^c01050af:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01050b2	obj/kernel.asm	/^c01050b2:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01050b5	obj/kernel.asm	/^c01050b5:	73 1d                	jae    c01050d4 <get_pgtable_items+0x9c>$/;"	l
c01050b7	obj/kernel.asm	/^c01050b7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01050ba	obj/kernel.asm	/^c01050ba:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c01050c1	obj/kernel.asm	/^c01050c1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01050c4	obj/kernel.asm	/^c01050c4:	01 d0                	add    %edx,%eax$/;"	l
c01050c6	obj/kernel.asm	/^c01050c6:	8b 00                	mov    (%eax),%eax$/;"	l
c01050c8	obj/kernel.asm	/^c01050c8:	83 e0 07             	and    $0x7,%eax$/;"	l
c01050cb	obj/kernel.asm	/^c01050cb:	89 c2                	mov    %eax,%edx$/;"	l
c01050cd	obj/kernel.asm	/^c01050cd:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01050d0	obj/kernel.asm	/^c01050d0:	39 c2                	cmp    %eax,%edx$/;"	l
c01050d2	obj/kernel.asm	/^c01050d2:	74 d7                	je     c01050ab <get_pgtable_items+0x73>$/;"	l
c01050d4	obj/kernel.asm	/^c01050d4:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c01050d8	obj/kernel.asm	/^c01050d8:	74 08                	je     c01050e2 <get_pgtable_items+0xaa>$/;"	l
c01050da	obj/kernel.asm	/^c01050da:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c01050dd	obj/kernel.asm	/^c01050dd:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01050e0	obj/kernel.asm	/^c01050e0:	89 10                	mov    %edx,(%eax)$/;"	l
c01050e2	obj/kernel.asm	/^c01050e2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01050e5	obj/kernel.asm	/^c01050e5:	eb 05                	jmp    c01050ec <get_pgtable_items+0xb4>$/;"	l
c01050e7	obj/kernel.asm	/^c01050e7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01050ec	obj/kernel.asm	/^c01050ec:	c9                   	leave  $/;"	l
c01050ed	obj/kernel.asm	/^c01050ed:	c3                   	ret    $/;"	l
c01050ee	obj/kernel.asm	/^c01050ee <print_pgdir>:$/;"	l
c01050ee	obj/kernel.asm	/^c01050ee:	55                   	push   %ebp$/;"	l
c01050ef	obj/kernel.asm	/^c01050ef:	89 e5                	mov    %esp,%ebp$/;"	l
c01050f1	obj/kernel.asm	/^c01050f1:	57                   	push   %edi$/;"	l
c01050f2	obj/kernel.asm	/^c01050f2:	56                   	push   %esi$/;"	l
c01050f3	obj/kernel.asm	/^c01050f3:	53                   	push   %ebx$/;"	l
c01050f4	obj/kernel.asm	/^c01050f4:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
c01050f7	obj/kernel.asm	/^c01050f7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01050fa	obj/kernel.asm	/^c01050fa:	68 00 48 11 c0       	push   $0xc0114800$/;"	l
c01050ff	obj/kernel.asm	/^c01050ff:	e8 66 b2 ff ff       	call   c010036a <cprintf>$/;"	l
c0105104	obj/kernel.asm	/^c0105104:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105107	obj/kernel.asm	/^c0105107:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c010510e	obj/kernel.asm	/^c010510e:	e9 e5 00 00 00       	jmp    c01051f8 <print_pgdir+0x10a>$/;"	l
c0105113	obj/kernel.asm	/^c0105113:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105116	obj/kernel.asm	/^c0105116:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105119	obj/kernel.asm	/^c0105119:	50                   	push   %eax$/;"	l
c010511a	obj/kernel.asm	/^c010511a:	e8 cb fe ff ff       	call   c0104fea <perm2str>$/;"	l
c010511f	obj/kernel.asm	/^c010511f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105122	obj/kernel.asm	/^c0105122:	89 c7                	mov    %eax,%edi$/;"	l
c0105124	obj/kernel.asm	/^c0105124:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105127	obj/kernel.asm	/^c0105127:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010512a	obj/kernel.asm	/^c010512a:	29 c2                	sub    %eax,%edx$/;"	l
c010512c	obj/kernel.asm	/^c010512c:	89 d0                	mov    %edx,%eax$/;"	l
c010512e	obj/kernel.asm	/^c010512e:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c0105131	obj/kernel.asm	/^c0105131:	89 c3                	mov    %eax,%ebx$/;"	l
c0105133	obj/kernel.asm	/^c0105133:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105136	obj/kernel.asm	/^c0105136:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c0105139	obj/kernel.asm	/^c0105139:	89 c1                	mov    %eax,%ecx$/;"	l
c010513b	obj/kernel.asm	/^c010513b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010513e	obj/kernel.asm	/^c010513e:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c0105141	obj/kernel.asm	/^c0105141:	89 c2                	mov    %eax,%edx$/;"	l
c0105143	obj/kernel.asm	/^c0105143:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
c0105146	obj/kernel.asm	/^c0105146:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105149	obj/kernel.asm	/^c0105149:	29 c6                	sub    %eax,%esi$/;"	l
c010514b	obj/kernel.asm	/^c010514b:	89 f0                	mov    %esi,%eax$/;"	l
c010514d	obj/kernel.asm	/^c010514d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105150	obj/kernel.asm	/^c0105150:	57                   	push   %edi$/;"	l
c0105151	obj/kernel.asm	/^c0105151:	53                   	push   %ebx$/;"	l
c0105152	obj/kernel.asm	/^c0105152:	51                   	push   %ecx$/;"	l
c0105153	obj/kernel.asm	/^c0105153:	52                   	push   %edx$/;"	l
c0105154	obj/kernel.asm	/^c0105154:	50                   	push   %eax$/;"	l
c0105155	obj/kernel.asm	/^c0105155:	68 31 48 11 c0       	push   $0xc0114831$/;"	l
c010515a	obj/kernel.asm	/^c010515a:	e8 0b b2 ff ff       	call   c010036a <cprintf>$/;"	l
c010515f	obj/kernel.asm	/^c010515f:	83 c4 20             	add    $0x20,%esp$/;"	l
c0105162	obj/kernel.asm	/^c0105162:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105165	obj/kernel.asm	/^c0105165:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
c0105168	obj/kernel.asm	/^c0105168:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010516b	obj/kernel.asm	/^c010516b:	eb 4f                	jmp    c01051bc <print_pgdir+0xce>$/;"	l
c010516d	obj/kernel.asm	/^c010516d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105170	obj/kernel.asm	/^c0105170:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105173	obj/kernel.asm	/^c0105173:	50                   	push   %eax$/;"	l
c0105174	obj/kernel.asm	/^c0105174:	e8 71 fe ff ff       	call   c0104fea <perm2str>$/;"	l
c0105179	obj/kernel.asm	/^c0105179:	83 c4 10             	add    $0x10,%esp$/;"	l
c010517c	obj/kernel.asm	/^c010517c:	89 c7                	mov    %eax,%edi$/;"	l
c010517e	obj/kernel.asm	/^c010517e:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0105181	obj/kernel.asm	/^c0105181:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0105184	obj/kernel.asm	/^c0105184:	29 c2                	sub    %eax,%edx$/;"	l
c0105186	obj/kernel.asm	/^c0105186:	89 d0                	mov    %edx,%eax$/;"	l
c0105188	obj/kernel.asm	/^c0105188:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010518b	obj/kernel.asm	/^c010518b:	89 c3                	mov    %eax,%ebx$/;"	l
c010518d	obj/kernel.asm	/^c010518d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0105190	obj/kernel.asm	/^c0105190:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0105193	obj/kernel.asm	/^c0105193:	89 c1                	mov    %eax,%ecx$/;"	l
c0105195	obj/kernel.asm	/^c0105195:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0105198	obj/kernel.asm	/^c0105198:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010519b	obj/kernel.asm	/^c010519b:	89 c2                	mov    %eax,%edx$/;"	l
c010519d	obj/kernel.asm	/^c010519d:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
c01051a0	obj/kernel.asm	/^c01051a0:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01051a3	obj/kernel.asm	/^c01051a3:	29 c6                	sub    %eax,%esi$/;"	l
c01051a5	obj/kernel.asm	/^c01051a5:	89 f0                	mov    %esi,%eax$/;"	l
c01051a7	obj/kernel.asm	/^c01051a7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01051aa	obj/kernel.asm	/^c01051aa:	57                   	push   %edi$/;"	l
c01051ab	obj/kernel.asm	/^c01051ab:	53                   	push   %ebx$/;"	l
c01051ac	obj/kernel.asm	/^c01051ac:	51                   	push   %ecx$/;"	l
c01051ad	obj/kernel.asm	/^c01051ad:	52                   	push   %edx$/;"	l
c01051ae	obj/kernel.asm	/^c01051ae:	50                   	push   %eax$/;"	l
c01051af	obj/kernel.asm	/^c01051af:	68 50 48 11 c0       	push   $0xc0114850$/;"	l
c01051b4	obj/kernel.asm	/^c01051b4:	e8 b1 b1 ff ff       	call   c010036a <cprintf>$/;"	l
c01051b9	obj/kernel.asm	/^c01051b9:	83 c4 20             	add    $0x20,%esp$/;"	l
c01051bc	obj/kernel.asm	/^c01051bc:	be 00 00 c0 fa       	mov    $0xfac00000,%esi$/;"	l
c01051c1	obj/kernel.asm	/^c01051c1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01051c4	obj/kernel.asm	/^c01051c4:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01051c7	obj/kernel.asm	/^c01051c7:	89 d3                	mov    %edx,%ebx$/;"	l
c01051c9	obj/kernel.asm	/^c01051c9:	c1 e3 0a             	shl    $0xa,%ebx$/;"	l
c01051cc	obj/kernel.asm	/^c01051cc:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01051cf	obj/kernel.asm	/^c01051cf:	89 d1                	mov    %edx,%ecx$/;"	l
c01051d1	obj/kernel.asm	/^c01051d1:	c1 e1 0a             	shl    $0xa,%ecx$/;"	l
c01051d4	obj/kernel.asm	/^c01051d4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01051d7	obj/kernel.asm	/^c01051d7:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
c01051da	obj/kernel.asm	/^c01051da:	52                   	push   %edx$/;"	l
c01051db	obj/kernel.asm	/^c01051db:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
c01051de	obj/kernel.asm	/^c01051de:	52                   	push   %edx$/;"	l
c01051df	obj/kernel.asm	/^c01051df:	56                   	push   %esi$/;"	l
c01051e0	obj/kernel.asm	/^c01051e0:	50                   	push   %eax$/;"	l
c01051e1	obj/kernel.asm	/^c01051e1:	53                   	push   %ebx$/;"	l
c01051e2	obj/kernel.asm	/^c01051e2:	51                   	push   %ecx$/;"	l
c01051e3	obj/kernel.asm	/^c01051e3:	e8 50 fe ff ff       	call   c0105038 <get_pgtable_items>$/;"	l
c01051e8	obj/kernel.asm	/^c01051e8:	83 c4 20             	add    $0x20,%esp$/;"	l
c01051eb	obj/kernel.asm	/^c01051eb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01051ee	obj/kernel.asm	/^c01051ee:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01051f2	obj/kernel.asm	/^c01051f2:	0f 85 75 ff ff ff    	jne    c010516d <print_pgdir+0x7f>$/;"	l
c01051f8	obj/kernel.asm	/^c01051f8:	b9 00 b0 fe fa       	mov    $0xfafeb000,%ecx$/;"	l
c01051fd	obj/kernel.asm	/^c01051fd:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105200	obj/kernel.asm	/^c0105200:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105203	obj/kernel.asm	/^c0105203:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c0105206	obj/kernel.asm	/^c0105206:	52                   	push   %edx$/;"	l
c0105207	obj/kernel.asm	/^c0105207:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
c010520a	obj/kernel.asm	/^c010520a:	52                   	push   %edx$/;"	l
c010520b	obj/kernel.asm	/^c010520b:	51                   	push   %ecx$/;"	l
c010520c	obj/kernel.asm	/^c010520c:	50                   	push   %eax$/;"	l
c010520d	obj/kernel.asm	/^c010520d:	68 00 04 00 00       	push   $0x400$/;"	l
c0105212	obj/kernel.asm	/^c0105212:	6a 00                	push   $0x0$/;"	l
c0105214	obj/kernel.asm	/^c0105214:	e8 1f fe ff ff       	call   c0105038 <get_pgtable_items>$/;"	l
c0105219	obj/kernel.asm	/^c0105219:	83 c4 20             	add    $0x20,%esp$/;"	l
c010521c	obj/kernel.asm	/^c010521c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010521f	obj/kernel.asm	/^c010521f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0105223	obj/kernel.asm	/^c0105223:	0f 85 ea fe ff ff    	jne    c0105113 <print_pgdir+0x25>$/;"	l
c0105229	obj/kernel.asm	/^c0105229:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010522c	obj/kernel.asm	/^c010522c:	68 74 48 11 c0       	push   $0xc0114874$/;"	l
c0105231	obj/kernel.asm	/^c0105231:	e8 34 b1 ff ff       	call   c010036a <cprintf>$/;"	l
c0105236	obj/kernel.asm	/^c0105236:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105239	obj/kernel.asm	/^c0105239:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
c010523c	obj/kernel.asm	/^c010523c:	5b                   	pop    %ebx$/;"	l
c010523d	obj/kernel.asm	/^c010523d:	5e                   	pop    %esi$/;"	l
c010523e	obj/kernel.asm	/^c010523e:	5f                   	pop    %edi$/;"	l
c010523f	obj/kernel.asm	/^c010523f:	5d                   	pop    %ebp$/;"	l
c0105240	obj/kernel.asm	/^c0105240:	c3                   	ret    $/;"	l
c0105241	obj/kernel.asm	/^c0105241 <mm_count>:$/;"	l
c0105241	obj/kernel.asm	/^c0105241:	55                   	push   %ebp$/;"	l
c0105242	obj/kernel.asm	/^c0105242:	89 e5                	mov    %esp,%ebp$/;"	l
c0105244	obj/kernel.asm	/^c0105244:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105247	obj/kernel.asm	/^c0105247:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010524a	obj/kernel.asm	/^c010524a:	5d                   	pop    %ebp$/;"	l
c010524b	obj/kernel.asm	/^c010524b:	c3                   	ret    $/;"	l
c010524c	obj/kernel.asm	/^c010524c <set_mm_count>:$/;"	l
c010524c	obj/kernel.asm	/^c010524c:	55                   	push   %ebp$/;"	l
c010524d	obj/kernel.asm	/^c010524d:	89 e5                	mov    %esp,%ebp$/;"	l
c010524f	obj/kernel.asm	/^c010524f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105252	obj/kernel.asm	/^c0105252:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105255	obj/kernel.asm	/^c0105255:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0105258	obj/kernel.asm	/^c0105258:	5d                   	pop    %ebp$/;"	l
c0105259	obj/kernel.asm	/^c0105259:	c3                   	ret    $/;"	l
c010525a	obj/kernel.asm	/^c010525a <pa2page>:$/;"	l
c010525a	obj/kernel.asm	/^c010525a:	55                   	push   %ebp$/;"	l
c010525b	obj/kernel.asm	/^c010525b:	89 e5                	mov    %esp,%ebp$/;"	l
c010525d	obj/kernel.asm	/^c010525d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105260	obj/kernel.asm	/^c0105260:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105263	obj/kernel.asm	/^c0105263:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0105266	obj/kernel.asm	/^c0105266:	89 c2                	mov    %eax,%edx$/;"	l
c0105268	obj/kernel.asm	/^c0105268:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c010526d	obj/kernel.asm	/^c010526d:	39 c2                	cmp    %eax,%edx$/;"	l
c010526f	obj/kernel.asm	/^c010526f:	72 14                	jb     c0105285 <pa2page+0x2b>$/;"	l
c0105271	obj/kernel.asm	/^c0105271:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105274	obj/kernel.asm	/^c0105274:	68 a8 48 11 c0       	push   $0xc01148a8$/;"	l
c0105279	obj/kernel.asm	/^c0105279:	6a 5e                	push   $0x5e$/;"	l
c010527b	obj/kernel.asm	/^c010527b:	68 c7 48 11 c0       	push   $0xc01148c7$/;"	l
c0105280	obj/kernel.asm	/^c0105280:	e8 4a b2 ff ff       	call   c01004cf <__panic>$/;"	l
c0105285	obj/kernel.asm	/^c0105285:	a1 18 12 15 c0       	mov    0xc0151218,%eax$/;"	l
c010528a	obj/kernel.asm	/^c010528a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010528d	obj/kernel.asm	/^c010528d:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0105290	obj/kernel.asm	/^c0105290:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0105293	obj/kernel.asm	/^c0105293:	01 d0                	add    %edx,%eax$/;"	l
c0105295	obj/kernel.asm	/^c0105295:	c9                   	leave  $/;"	l
c0105296	obj/kernel.asm	/^c0105296:	c3                   	ret    $/;"	l
c0105297	obj/kernel.asm	/^c0105297 <mm_create>:$/;"	l
c0105297	obj/kernel.asm	/^c0105297:	55                   	push   %ebp$/;"	l
c0105298	obj/kernel.asm	/^c0105298:	89 e5                	mov    %esp,%ebp$/;"	l
c010529a	obj/kernel.asm	/^c010529a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010529d	obj/kernel.asm	/^c010529d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01052a0	obj/kernel.asm	/^c01052a0:	6a 2c                	push   $0x2c$/;"	l
c01052a2	obj/kernel.asm	/^c01052a2:	e8 f8 21 00 00       	call   c010749f <kmalloc>$/;"	l
c01052a7	obj/kernel.asm	/^c01052a7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01052aa	obj/kernel.asm	/^c01052aa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01052ad	obj/kernel.asm	/^c01052ad:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01052b1	obj/kernel.asm	/^c01052b1:	74 7f                	je     c0105332 <mm_create+0x9b>$/;"	l
c01052b3	obj/kernel.asm	/^c01052b3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01052b6	obj/kernel.asm	/^c01052b6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01052b9	obj/kernel.asm	/^c01052b9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01052bc	obj/kernel.asm	/^c01052bc:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01052bf	obj/kernel.asm	/^c01052bf:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01052c2	obj/kernel.asm	/^c01052c2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01052c5	obj/kernel.asm	/^c01052c5:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01052c8	obj/kernel.asm	/^c01052c8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01052cb	obj/kernel.asm	/^c01052cb:	89 10                	mov    %edx,(%eax)$/;"	l
c01052cd	obj/kernel.asm	/^c01052cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01052d0	obj/kernel.asm	/^c01052d0:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c01052d7	obj/kernel.asm	/^c01052d7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01052da	obj/kernel.asm	/^c01052da:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c01052e1	obj/kernel.asm	/^c01052e1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01052e4	obj/kernel.asm	/^c01052e4:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c01052eb	obj/kernel.asm	/^c01052eb:	a1 70 e0 14 c0       	mov    0xc014e070,%eax$/;"	l
c01052f0	obj/kernel.asm	/^c01052f0:	85 c0                	test   %eax,%eax$/;"	l
c01052f2	obj/kernel.asm	/^c01052f2:	74 10                	je     c0105304 <mm_create+0x6d>$/;"	l
c01052f4	obj/kernel.asm	/^c01052f4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01052f7	obj/kernel.asm	/^c01052f7:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01052fa	obj/kernel.asm	/^c01052fa:	e8 dc 11 00 00       	call   c01064db <swap_init_mm>$/;"	l
c01052ff	obj/kernel.asm	/^c01052ff:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105302	obj/kernel.asm	/^c0105302:	eb 0a                	jmp    c010530e <mm_create+0x77>$/;"	l
c0105304	obj/kernel.asm	/^c0105304:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105307	obj/kernel.asm	/^c0105307:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c010530e	obj/kernel.asm	/^c010530e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105311	obj/kernel.asm	/^c0105311:	6a 00                	push   $0x0$/;"	l
c0105313	obj/kernel.asm	/^c0105313:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0105316	obj/kernel.asm	/^c0105316:	e8 31 ff ff ff       	call   c010524c <set_mm_count>$/;"	l
c010531b	obj/kernel.asm	/^c010531b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010531e	obj/kernel.asm	/^c010531e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105321	obj/kernel.asm	/^c0105321:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0105324	obj/kernel.asm	/^c0105324:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105327	obj/kernel.asm	/^c0105327:	6a 01                	push   $0x1$/;"	l
c0105329	obj/kernel.asm	/^c0105329:	50                   	push   %eax$/;"	l
c010532a	obj/kernel.asm	/^c010532a:	e8 08 42 00 00       	call   c0109537 <sem_init>$/;"	l
c010532f	obj/kernel.asm	/^c010532f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105332	obj/kernel.asm	/^c0105332:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105335	obj/kernel.asm	/^c0105335:	c9                   	leave  $/;"	l
c0105336	obj/kernel.asm	/^c0105336:	c3                   	ret    $/;"	l
c0105337	obj/kernel.asm	/^c0105337 <vma_create>:$/;"	l
c0105337	obj/kernel.asm	/^c0105337:	55                   	push   %ebp$/;"	l
c0105338	obj/kernel.asm	/^c0105338:	89 e5                	mov    %esp,%ebp$/;"	l
c010533a	obj/kernel.asm	/^c010533a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010533d	obj/kernel.asm	/^c010533d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105340	obj/kernel.asm	/^c0105340:	6a 18                	push   $0x18$/;"	l
c0105342	obj/kernel.asm	/^c0105342:	e8 58 21 00 00       	call   c010749f <kmalloc>$/;"	l
c0105347	obj/kernel.asm	/^c0105347:	83 c4 10             	add    $0x10,%esp$/;"	l
c010534a	obj/kernel.asm	/^c010534a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010534d	obj/kernel.asm	/^c010534d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105351	obj/kernel.asm	/^c0105351:	74 1b                	je     c010536e <vma_create+0x37>$/;"	l
c0105353	obj/kernel.asm	/^c0105353:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105356	obj/kernel.asm	/^c0105356:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0105359	obj/kernel.asm	/^c0105359:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010535c	obj/kernel.asm	/^c010535c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010535f	obj/kernel.asm	/^c010535f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105362	obj/kernel.asm	/^c0105362:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0105365	obj/kernel.asm	/^c0105365:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105368	obj/kernel.asm	/^c0105368:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010536b	obj/kernel.asm	/^c010536b:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010536e	obj/kernel.asm	/^c010536e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105371	obj/kernel.asm	/^c0105371:	c9                   	leave  $/;"	l
c0105372	obj/kernel.asm	/^c0105372:	c3                   	ret    $/;"	l
c0105373	obj/kernel.asm	/^c0105373 <find_vma>:$/;"	l
c0105373	obj/kernel.asm	/^c0105373:	55                   	push   %ebp$/;"	l
c0105374	obj/kernel.asm	/^c0105374:	89 e5                	mov    %esp,%ebp$/;"	l
c0105376	obj/kernel.asm	/^c0105376:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0105379	obj/kernel.asm	/^c0105379:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0105380	obj/kernel.asm	/^c0105380:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0105384	obj/kernel.asm	/^c0105384:	0f 84 95 00 00 00    	je     c010541f <find_vma+0xac>$/;"	l
c010538a	obj/kernel.asm	/^c010538a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010538d	obj/kernel.asm	/^c010538d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105390	obj/kernel.asm	/^c0105390:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0105393	obj/kernel.asm	/^c0105393:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0105397	obj/kernel.asm	/^c0105397:	74 16                	je     c01053af <find_vma+0x3c>$/;"	l
c0105399	obj/kernel.asm	/^c0105399:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010539c	obj/kernel.asm	/^c010539c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010539f	obj/kernel.asm	/^c010539f:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01053a2	obj/kernel.asm	/^c01053a2:	77 0b                	ja     c01053af <find_vma+0x3c>$/;"	l
c01053a4	obj/kernel.asm	/^c01053a4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01053a7	obj/kernel.asm	/^c01053a7:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01053aa	obj/kernel.asm	/^c01053aa:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01053ad	obj/kernel.asm	/^c01053ad:	77 61                	ja     c0105410 <find_vma+0x9d>$/;"	l
c01053af	obj/kernel.asm	/^c01053af:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c01053b6	obj/kernel.asm	/^c01053b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01053b9	obj/kernel.asm	/^c01053b9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01053bc	obj/kernel.asm	/^c01053bc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01053bf	obj/kernel.asm	/^c01053bf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01053c2	obj/kernel.asm	/^c01053c2:	eb 28                	jmp    c01053ec <find_vma+0x79>$/;"	l
c01053c4	obj/kernel.asm	/^c01053c4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01053c7	obj/kernel.asm	/^c01053c7:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01053ca	obj/kernel.asm	/^c01053ca:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01053cd	obj/kernel.asm	/^c01053cd:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01053d0	obj/kernel.asm	/^c01053d0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01053d3	obj/kernel.asm	/^c01053d3:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01053d6	obj/kernel.asm	/^c01053d6:	77 14                	ja     c01053ec <find_vma+0x79>$/;"	l
c01053d8	obj/kernel.asm	/^c01053d8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01053db	obj/kernel.asm	/^c01053db:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01053de	obj/kernel.asm	/^c01053de:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01053e1	obj/kernel.asm	/^c01053e1:	76 09                	jbe    c01053ec <find_vma+0x79>$/;"	l
c01053e3	obj/kernel.asm	/^c01053e3:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%ebp)$/;"	l
c01053ea	obj/kernel.asm	/^c01053ea:	eb 17                	jmp    c0105403 <find_vma+0x90>$/;"	l
c01053ec	obj/kernel.asm	/^c01053ec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01053ef	obj/kernel.asm	/^c01053ef:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01053f2	obj/kernel.asm	/^c01053f2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01053f5	obj/kernel.asm	/^c01053f5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01053f8	obj/kernel.asm	/^c01053f8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01053fb	obj/kernel.asm	/^c01053fb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01053fe	obj/kernel.asm	/^c01053fe:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0105401	obj/kernel.asm	/^c0105401:	75 c1                	jne    c01053c4 <find_vma+0x51>$/;"	l
c0105403	obj/kernel.asm	/^c0105403:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)$/;"	l
c0105407	obj/kernel.asm	/^c0105407:	75 07                	jne    c0105410 <find_vma+0x9d>$/;"	l
c0105409	obj/kernel.asm	/^c0105409:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0105410	obj/kernel.asm	/^c0105410:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0105414	obj/kernel.asm	/^c0105414:	74 09                	je     c010541f <find_vma+0xac>$/;"	l
c0105416	obj/kernel.asm	/^c0105416:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105419	obj/kernel.asm	/^c0105419:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010541c	obj/kernel.asm	/^c010541c:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010541f	obj/kernel.asm	/^c010541f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0105422	obj/kernel.asm	/^c0105422:	c9                   	leave  $/;"	l
c0105423	obj/kernel.asm	/^c0105423:	c3                   	ret    $/;"	l
c0105424	obj/kernel.asm	/^c0105424 <check_vma_overlap>:$/;"	l
c0105424	obj/kernel.asm	/^c0105424:	55                   	push   %ebp$/;"	l
c0105425	obj/kernel.asm	/^c0105425:	89 e5                	mov    %esp,%ebp$/;"	l
c0105427	obj/kernel.asm	/^c0105427:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010542a	obj/kernel.asm	/^c010542a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010542d	obj/kernel.asm	/^c010542d:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0105430	obj/kernel.asm	/^c0105430:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105433	obj/kernel.asm	/^c0105433:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105436	obj/kernel.asm	/^c0105436:	39 c2                	cmp    %eax,%edx$/;"	l
c0105438	obj/kernel.asm	/^c0105438:	72 16                	jb     c0105450 <check_vma_overlap+0x2c>$/;"	l
c010543a	obj/kernel.asm	/^c010543a:	68 d5 48 11 c0       	push   $0xc01148d5$/;"	l
c010543f	obj/kernel.asm	/^c010543f:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105444	obj/kernel.asm	/^c0105444:	6a 6b                	push   $0x6b$/;"	l
c0105446	obj/kernel.asm	/^c0105446:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c010544b	obj/kernel.asm	/^c010544b:	e8 7f b0 ff ff       	call   c01004cf <__panic>$/;"	l
c0105450	obj/kernel.asm	/^c0105450:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105453	obj/kernel.asm	/^c0105453:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0105456	obj/kernel.asm	/^c0105456:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105459	obj/kernel.asm	/^c0105459:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010545c	obj/kernel.asm	/^c010545c:	39 c2                	cmp    %eax,%edx$/;"	l
c010545e	obj/kernel.asm	/^c010545e:	76 16                	jbe    c0105476 <check_vma_overlap+0x52>$/;"	l
c0105460	obj/kernel.asm	/^c0105460:	68 18 49 11 c0       	push   $0xc0114918$/;"	l
c0105465	obj/kernel.asm	/^c0105465:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c010546a	obj/kernel.asm	/^c010546a:	6a 6c                	push   $0x6c$/;"	l
c010546c	obj/kernel.asm	/^c010546c:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105471	obj/kernel.asm	/^c0105471:	e8 59 b0 ff ff       	call   c01004cf <__panic>$/;"	l
c0105476	obj/kernel.asm	/^c0105476:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105479	obj/kernel.asm	/^c0105479:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010547c	obj/kernel.asm	/^c010547c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010547f	obj/kernel.asm	/^c010547f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105482	obj/kernel.asm	/^c0105482:	39 c2                	cmp    %eax,%edx$/;"	l
c0105484	obj/kernel.asm	/^c0105484:	72 16                	jb     c010549c <check_vma_overlap+0x78>$/;"	l
c0105486	obj/kernel.asm	/^c0105486:	68 37 49 11 c0       	push   $0xc0114937$/;"	l
c010548b	obj/kernel.asm	/^c010548b:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105490	obj/kernel.asm	/^c0105490:	6a 6d                	push   $0x6d$/;"	l
c0105492	obj/kernel.asm	/^c0105492:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105497	obj/kernel.asm	/^c0105497:	e8 33 b0 ff ff       	call   c01004cf <__panic>$/;"	l
c010549c	obj/kernel.asm	/^c010549c:	c9                   	leave  $/;"	l
c010549d	obj/kernel.asm	/^c010549d:	c3                   	ret    $/;"	l
c010549e	obj/kernel.asm	/^c010549e <insert_vma_struct>:$/;"	l
c010549e	obj/kernel.asm	/^c010549e:	55                   	push   %ebp$/;"	l
c010549f	obj/kernel.asm	/^c010549f:	89 e5                	mov    %esp,%ebp$/;"	l
c01054a1	obj/kernel.asm	/^c01054a1:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01054a4	obj/kernel.asm	/^c01054a4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01054a7	obj/kernel.asm	/^c01054a7:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01054aa	obj/kernel.asm	/^c01054aa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01054ad	obj/kernel.asm	/^c01054ad:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01054b0	obj/kernel.asm	/^c01054b0:	39 c2                	cmp    %eax,%edx$/;"	l
c01054b2	obj/kernel.asm	/^c01054b2:	72 16                	jb     c01054ca <insert_vma_struct+0x2c>$/;"	l
c01054b4	obj/kernel.asm	/^c01054b4:	68 55 49 11 c0       	push   $0xc0114955$/;"	l
c01054b9	obj/kernel.asm	/^c01054b9:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c01054be	obj/kernel.asm	/^c01054be:	6a 74                	push   $0x74$/;"	l
c01054c0	obj/kernel.asm	/^c01054c0:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c01054c5	obj/kernel.asm	/^c01054c5:	e8 05 b0 ff ff       	call   c01004cf <__panic>$/;"	l
c01054ca	obj/kernel.asm	/^c01054ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01054cd	obj/kernel.asm	/^c01054cd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01054d0	obj/kernel.asm	/^c01054d0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01054d3	obj/kernel.asm	/^c01054d3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01054d6	obj/kernel.asm	/^c01054d6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01054d9	obj/kernel.asm	/^c01054d9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01054dc	obj/kernel.asm	/^c01054dc:	eb 21                	jmp    c01054ff <insert_vma_struct+0x61>$/;"	l
c01054de	obj/kernel.asm	/^c01054de:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01054e1	obj/kernel.asm	/^c01054e1:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01054e4	obj/kernel.asm	/^c01054e4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01054e7	obj/kernel.asm	/^c01054e7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01054ea	obj/kernel.asm	/^c01054ea:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01054ed	obj/kernel.asm	/^c01054ed:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01054f0	obj/kernel.asm	/^c01054f0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01054f3	obj/kernel.asm	/^c01054f3:	39 c2                	cmp    %eax,%edx$/;"	l
c01054f5	obj/kernel.asm	/^c01054f5:	76 02                	jbe    c01054f9 <insert_vma_struct+0x5b>$/;"	l
c01054f7	obj/kernel.asm	/^c01054f7:	eb 1d                	jmp    c0105516 <insert_vma_struct+0x78>$/;"	l
c01054f9	obj/kernel.asm	/^c01054f9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01054fc	obj/kernel.asm	/^c01054fc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01054ff	obj/kernel.asm	/^c01054ff:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105502	obj/kernel.asm	/^c0105502:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105505	obj/kernel.asm	/^c0105505:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105508	obj/kernel.asm	/^c0105508:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010550b	obj/kernel.asm	/^c010550b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010550e	obj/kernel.asm	/^c010550e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105511	obj/kernel.asm	/^c0105511:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0105514	obj/kernel.asm	/^c0105514:	75 c8                	jne    c01054de <insert_vma_struct+0x40>$/;"	l
c0105516	obj/kernel.asm	/^c0105516:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105519	obj/kernel.asm	/^c0105519:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010551c	obj/kernel.asm	/^c010551c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010551f	obj/kernel.asm	/^c010551f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105522	obj/kernel.asm	/^c0105522:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105525	obj/kernel.asm	/^c0105525:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105528	obj/kernel.asm	/^c0105528:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010552b	obj/kernel.asm	/^c010552b:	74 15                	je     c0105542 <insert_vma_struct+0xa4>$/;"	l
c010552d	obj/kernel.asm	/^c010552d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105530	obj/kernel.asm	/^c0105530:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105533	obj/kernel.asm	/^c0105533:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105536	obj/kernel.asm	/^c0105536:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0105539	obj/kernel.asm	/^c0105539:	50                   	push   %eax$/;"	l
c010553a	obj/kernel.asm	/^c010553a:	e8 e5 fe ff ff       	call   c0105424 <check_vma_overlap>$/;"	l
c010553f	obj/kernel.asm	/^c010553f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105542	obj/kernel.asm	/^c0105542:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105545	obj/kernel.asm	/^c0105545:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0105548	obj/kernel.asm	/^c0105548:	74 15                	je     c010555f <insert_vma_struct+0xc1>$/;"	l
c010554a	obj/kernel.asm	/^c010554a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010554d	obj/kernel.asm	/^c010554d:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105550	obj/kernel.asm	/^c0105550:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105553	obj/kernel.asm	/^c0105553:	50                   	push   %eax$/;"	l
c0105554	obj/kernel.asm	/^c0105554:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0105557	obj/kernel.asm	/^c0105557:	e8 c8 fe ff ff       	call   c0105424 <check_vma_overlap>$/;"	l
c010555c	obj/kernel.asm	/^c010555c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010555f	obj/kernel.asm	/^c010555f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105562	obj/kernel.asm	/^c0105562:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0105565	obj/kernel.asm	/^c0105565:	89 10                	mov    %edx,(%eax)$/;"	l
c0105567	obj/kernel.asm	/^c0105567:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010556a	obj/kernel.asm	/^c010556a:	8d 50 10             	lea    0x10(%eax),%edx$/;"	l
c010556d	obj/kernel.asm	/^c010556d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105570	obj/kernel.asm	/^c0105570:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0105573	obj/kernel.asm	/^c0105573:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0105576	obj/kernel.asm	/^c0105576:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0105579	obj/kernel.asm	/^c0105579:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010557c	obj/kernel.asm	/^c010557c:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010557f	obj/kernel.asm	/^c010557f:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
c0105582	obj/kernel.asm	/^c0105582:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0105585	obj/kernel.asm	/^c0105585:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c0105588	obj/kernel.asm	/^c0105588:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010558b	obj/kernel.asm	/^c010558b:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010558e	obj/kernel.asm	/^c010558e:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0105591	obj/kernel.asm	/^c0105591:	89 10                	mov    %edx,(%eax)$/;"	l
c0105593	obj/kernel.asm	/^c0105593:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0105596	obj/kernel.asm	/^c0105596:	8b 10                	mov    (%eax),%edx$/;"	l
c0105598	obj/kernel.asm	/^c0105598:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010559b	obj/kernel.asm	/^c010559b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010559e	obj/kernel.asm	/^c010559e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01055a1	obj/kernel.asm	/^c01055a1:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c01055a4	obj/kernel.asm	/^c01055a4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01055a7	obj/kernel.asm	/^c01055a7:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01055aa	obj/kernel.asm	/^c01055aa:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01055ad	obj/kernel.asm	/^c01055ad:	89 10                	mov    %edx,(%eax)$/;"	l
c01055af	obj/kernel.asm	/^c01055af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01055b2	obj/kernel.asm	/^c01055b2:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01055b5	obj/kernel.asm	/^c01055b5:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01055b8	obj/kernel.asm	/^c01055b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01055bb	obj/kernel.asm	/^c01055bb:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01055be	obj/kernel.asm	/^c01055be:	c9                   	leave  $/;"	l
c01055bf	obj/kernel.asm	/^c01055bf:	c3                   	ret    $/;"	l
c01055c0	obj/kernel.asm	/^c01055c0 <mm_destroy>:$/;"	l
c01055c0	obj/kernel.asm	/^c01055c0:	55                   	push   %ebp$/;"	l
c01055c1	obj/kernel.asm	/^c01055c1:	89 e5                	mov    %esp,%ebp$/;"	l
c01055c3	obj/kernel.asm	/^c01055c3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01055c6	obj/kernel.asm	/^c01055c6:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01055c9	obj/kernel.asm	/^c01055c9:	e8 73 fc ff ff       	call   c0105241 <mm_count>$/;"	l
c01055ce	obj/kernel.asm	/^c01055ce:	83 c4 04             	add    $0x4,%esp$/;"	l
c01055d1	obj/kernel.asm	/^c01055d1:	85 c0                	test   %eax,%eax$/;"	l
c01055d3	obj/kernel.asm	/^c01055d3:	74 19                	je     c01055ee <mm_destroy+0x2e>$/;"	l
c01055d5	obj/kernel.asm	/^c01055d5:	68 71 49 11 c0       	push   $0xc0114971$/;"	l
c01055da	obj/kernel.asm	/^c01055da:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c01055df	obj/kernel.asm	/^c01055df:	68 94 00 00 00       	push   $0x94$/;"	l
c01055e4	obj/kernel.asm	/^c01055e4:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c01055e9	obj/kernel.asm	/^c01055e9:	e8 e1 ae ff ff       	call   c01004cf <__panic>$/;"	l
c01055ee	obj/kernel.asm	/^c01055ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01055f1	obj/kernel.asm	/^c01055f1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01055f4	obj/kernel.asm	/^c01055f4:	eb 3a                	jmp    c0105630 <mm_destroy+0x70>$/;"	l
c01055f6	obj/kernel.asm	/^c01055f6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01055f9	obj/kernel.asm	/^c01055f9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01055fc	obj/kernel.asm	/^c01055fc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01055ff	obj/kernel.asm	/^c01055ff:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105602	obj/kernel.asm	/^c0105602:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0105605	obj/kernel.asm	/^c0105605:	8b 12                	mov    (%edx),%edx$/;"	l
c0105607	obj/kernel.asm	/^c0105607:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010560a	obj/kernel.asm	/^c010560a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010560d	obj/kernel.asm	/^c010560d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105610	obj/kernel.asm	/^c0105610:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0105613	obj/kernel.asm	/^c0105613:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0105616	obj/kernel.asm	/^c0105616:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105619	obj/kernel.asm	/^c0105619:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010561c	obj/kernel.asm	/^c010561c:	89 10                	mov    %edx,(%eax)$/;"	l
c010561e	obj/kernel.asm	/^c010561e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105621	obj/kernel.asm	/^c0105621:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105624	obj/kernel.asm	/^c0105624:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105627	obj/kernel.asm	/^c0105627:	50                   	push   %eax$/;"	l
c0105628	obj/kernel.asm	/^c0105628:	e8 8a 1e 00 00       	call   c01074b7 <kfree>$/;"	l
c010562d	obj/kernel.asm	/^c010562d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105630	obj/kernel.asm	/^c0105630:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105633	obj/kernel.asm	/^c0105633:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105636	obj/kernel.asm	/^c0105636:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105639	obj/kernel.asm	/^c0105639:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010563c	obj/kernel.asm	/^c010563c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010563f	obj/kernel.asm	/^c010563f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105642	obj/kernel.asm	/^c0105642:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0105645	obj/kernel.asm	/^c0105645:	75 af                	jne    c01055f6 <mm_destroy+0x36>$/;"	l
c0105647	obj/kernel.asm	/^c0105647:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010564a	obj/kernel.asm	/^c010564a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010564d	obj/kernel.asm	/^c010564d:	e8 65 1e 00 00       	call   c01074b7 <kfree>$/;"	l
c0105652	obj/kernel.asm	/^c0105652:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105655	obj/kernel.asm	/^c0105655:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)$/;"	l
c010565c	obj/kernel.asm	/^c010565c:	c9                   	leave  $/;"	l
c010565d	obj/kernel.asm	/^c010565d:	c3                   	ret    $/;"	l
c010565e	obj/kernel.asm	/^c010565e <mm_map>:$/;"	l
c010565e	obj/kernel.asm	/^c010565e:	55                   	push   %ebp$/;"	l
c010565f	obj/kernel.asm	/^c010565f:	89 e5                	mov    %esp,%ebp$/;"	l
c0105661	obj/kernel.asm	/^c0105661:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105664	obj/kernel.asm	/^c0105664:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105667	obj/kernel.asm	/^c0105667:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010566a	obj/kernel.asm	/^c010566a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010566d	obj/kernel.asm	/^c010566d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0105672	obj/kernel.asm	/^c0105672:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105675	obj/kernel.asm	/^c0105675:	c7 45 e8 00 10 00 00 	movl   $0x1000,-0x18(%ebp)$/;"	l
c010567c	obj/kernel.asm	/^c010567c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010567f	obj/kernel.asm	/^c010567f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105682	obj/kernel.asm	/^c0105682:	01 c2                	add    %eax,%edx$/;"	l
c0105684	obj/kernel.asm	/^c0105684:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105687	obj/kernel.asm	/^c0105687:	01 d0                	add    %edx,%eax$/;"	l
c0105689	obj/kernel.asm	/^c0105689:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010568c	obj/kernel.asm	/^c010568c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010568f	obj/kernel.asm	/^c010568f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105692	obj/kernel.asm	/^c0105692:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0105697	obj/kernel.asm	/^c0105697:	f7 75 e8             	divl   -0x18(%ebp)$/;"	l
c010569a	obj/kernel.asm	/^c010569a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010569d	obj/kernel.asm	/^c010569d:	29 d0                	sub    %edx,%eax$/;"	l
c010569f	obj/kernel.asm	/^c010569f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01056a2	obj/kernel.asm	/^c01056a2:	81 7d ec ff ff 1f 00 	cmpl   $0x1fffff,-0x14(%ebp)$/;"	l
c01056a9	obj/kernel.asm	/^c01056a9:	76 11                	jbe    c01056bc <mm_map+0x5e>$/;"	l
c01056ab	obj/kernel.asm	/^c01056ab:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01056ae	obj/kernel.asm	/^c01056ae:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c01056b1	obj/kernel.asm	/^c01056b1:	73 09                	jae    c01056bc <mm_map+0x5e>$/;"	l
c01056b3	obj/kernel.asm	/^c01056b3:	81 7d e0 00 00 00 b0 	cmpl   $0xb0000000,-0x20(%ebp)$/;"	l
c01056ba	obj/kernel.asm	/^c01056ba:	76 0a                	jbe    c01056c6 <mm_map+0x68>$/;"	l
c01056bc	obj/kernel.asm	/^c01056bc:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01056c1	obj/kernel.asm	/^c01056c1:	e9 9c 00 00 00       	jmp    c0105762 <mm_map+0x104>$/;"	l
c01056c6	obj/kernel.asm	/^c01056c6:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01056ca	obj/kernel.asm	/^c01056ca:	75 19                	jne    c01056e5 <mm_map+0x87>$/;"	l
c01056cc	obj/kernel.asm	/^c01056cc:	68 83 49 11 c0       	push   $0xc0114983$/;"	l
c01056d1	obj/kernel.asm	/^c01056d1:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c01056d6	obj/kernel.asm	/^c01056d6:	68 a7 00 00 00       	push   $0xa7$/;"	l
c01056db	obj/kernel.asm	/^c01056db:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c01056e0	obj/kernel.asm	/^c01056e0:	e8 ea ad ff ff       	call   c01004cf <__panic>$/;"	l
c01056e5	obj/kernel.asm	/^c01056e5:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c01056ec	obj/kernel.asm	/^c01056ec:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01056ef	obj/kernel.asm	/^c01056ef:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01056f2	obj/kernel.asm	/^c01056f2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01056f5	obj/kernel.asm	/^c01056f5:	e8 79 fc ff ff       	call   c0105373 <find_vma>$/;"	l
c01056fa	obj/kernel.asm	/^c01056fa:	83 c4 10             	add    $0x10,%esp$/;"	l
c01056fd	obj/kernel.asm	/^c01056fd:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105700	obj/kernel.asm	/^c0105700:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0105704	obj/kernel.asm	/^c0105704:	74 0d                	je     c0105713 <mm_map+0xb5>$/;"	l
c0105706	obj/kernel.asm	/^c0105706:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105709	obj/kernel.asm	/^c0105709:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010570c	obj/kernel.asm	/^c010570c:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c010570f	obj/kernel.asm	/^c010570f:	73 02                	jae    c0105713 <mm_map+0xb5>$/;"	l
c0105711	obj/kernel.asm	/^c0105711:	eb 4c                	jmp    c010575f <mm_map+0x101>$/;"	l
c0105713	obj/kernel.asm	/^c0105713:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010571a	obj/kernel.asm	/^c010571a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010571d	obj/kernel.asm	/^c010571d:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0105720	obj/kernel.asm	/^c0105720:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0105723	obj/kernel.asm	/^c0105723:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0105726	obj/kernel.asm	/^c0105726:	e8 0c fc ff ff       	call   c0105337 <vma_create>$/;"	l
c010572b	obj/kernel.asm	/^c010572b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010572e	obj/kernel.asm	/^c010572e:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105731	obj/kernel.asm	/^c0105731:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0105735	obj/kernel.asm	/^c0105735:	75 02                	jne    c0105739 <mm_map+0xdb>$/;"	l
c0105737	obj/kernel.asm	/^c0105737:	eb 26                	jmp    c010575f <mm_map+0x101>$/;"	l
c0105739	obj/kernel.asm	/^c0105739:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010573c	obj/kernel.asm	/^c010573c:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c010573f	obj/kernel.asm	/^c010573f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105742	obj/kernel.asm	/^c0105742:	e8 57 fd ff ff       	call   c010549e <insert_vma_struct>$/;"	l
c0105747	obj/kernel.asm	/^c0105747:	83 c4 10             	add    $0x10,%esp$/;"	l
c010574a	obj/kernel.asm	/^c010574a:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c010574e	obj/kernel.asm	/^c010574e:	74 08                	je     c0105758 <mm_map+0xfa>$/;"	l
c0105750	obj/kernel.asm	/^c0105750:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0105753	obj/kernel.asm	/^c0105753:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105756	obj/kernel.asm	/^c0105756:	89 10                	mov    %edx,(%eax)$/;"	l
c0105758	obj/kernel.asm	/^c0105758:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010575f	obj/kernel.asm	/^c010575f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105762	obj/kernel.asm	/^c0105762:	c9                   	leave  $/;"	l
c0105763	obj/kernel.asm	/^c0105763:	c3                   	ret    $/;"	l
c0105764	obj/kernel.asm	/^c0105764 <dup_mmap>:$/;"	l
c0105764	obj/kernel.asm	/^c0105764:	55                   	push   %ebp$/;"	l
c0105765	obj/kernel.asm	/^c0105765:	89 e5                	mov    %esp,%ebp$/;"	l
c0105767	obj/kernel.asm	/^c0105767:	53                   	push   %ebx$/;"	l
c0105768	obj/kernel.asm	/^c0105768:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010576b	obj/kernel.asm	/^c010576b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010576f	obj/kernel.asm	/^c010576f:	74 06                	je     c0105777 <dup_mmap+0x13>$/;"	l
c0105771	obj/kernel.asm	/^c0105771:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0105775	obj/kernel.asm	/^c0105775:	75 19                	jne    c0105790 <dup_mmap+0x2c>$/;"	l
c0105777	obj/kernel.asm	/^c0105777:	68 8e 49 11 c0       	push   $0xc011498e$/;"	l
c010577c	obj/kernel.asm	/^c010577c:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105781	obj/kernel.asm	/^c0105781:	68 c0 00 00 00       	push   $0xc0$/;"	l
c0105786	obj/kernel.asm	/^c0105786:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c010578b	obj/kernel.asm	/^c010578b:	e8 3f ad ff ff       	call   c01004cf <__panic>$/;"	l
c0105790	obj/kernel.asm	/^c0105790:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105793	obj/kernel.asm	/^c0105793:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105796	obj/kernel.asm	/^c0105796:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105799	obj/kernel.asm	/^c0105799:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010579c	obj/kernel.asm	/^c010579c:	e9 86 00 00 00       	jmp    c0105827 <dup_mmap+0xc3>$/;"	l
c01057a1	obj/kernel.asm	/^c01057a1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01057a4	obj/kernel.asm	/^c01057a4:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01057a7	obj/kernel.asm	/^c01057a7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01057aa	obj/kernel.asm	/^c01057aa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01057ad	obj/kernel.asm	/^c01057ad:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c01057b0	obj/kernel.asm	/^c01057b0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01057b3	obj/kernel.asm	/^c01057b3:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01057b6	obj/kernel.asm	/^c01057b6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01057b9	obj/kernel.asm	/^c01057b9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01057bc	obj/kernel.asm	/^c01057bc:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01057bf	obj/kernel.asm	/^c01057bf:	51                   	push   %ecx$/;"	l
c01057c0	obj/kernel.asm	/^c01057c0:	52                   	push   %edx$/;"	l
c01057c1	obj/kernel.asm	/^c01057c1:	50                   	push   %eax$/;"	l
c01057c2	obj/kernel.asm	/^c01057c2:	e8 70 fb ff ff       	call   c0105337 <vma_create>$/;"	l
c01057c7	obj/kernel.asm	/^c01057c7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01057ca	obj/kernel.asm	/^c01057ca:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01057cd	obj/kernel.asm	/^c01057cd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01057d1	obj/kernel.asm	/^c01057d1:	75 07                	jne    c01057da <dup_mmap+0x76>$/;"	l
c01057d3	obj/kernel.asm	/^c01057d3:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01057d8	obj/kernel.asm	/^c01057d8:	eb 6c                	jmp    c0105846 <dup_mmap+0xe2>$/;"	l
c01057da	obj/kernel.asm	/^c01057da:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01057dd	obj/kernel.asm	/^c01057dd:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c01057e0	obj/kernel.asm	/^c01057e0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01057e3	obj/kernel.asm	/^c01057e3:	e8 b6 fc ff ff       	call   c010549e <insert_vma_struct>$/;"	l
c01057e8	obj/kernel.asm	/^c01057e8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01057eb	obj/kernel.asm	/^c01057eb:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c01057f2	obj/kernel.asm	/^c01057f2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01057f5	obj/kernel.asm	/^c01057f5:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c01057f8	obj/kernel.asm	/^c01057f8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01057fb	obj/kernel.asm	/^c01057fb:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c01057fe	obj/kernel.asm	/^c01057fe:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105801	obj/kernel.asm	/^c0105801:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c0105804	obj/kernel.asm	/^c0105804:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105807	obj/kernel.asm	/^c0105807:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010580a	obj/kernel.asm	/^c010580a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010580d	obj/kernel.asm	/^c010580d:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0105810	obj/kernel.asm	/^c0105810:	53                   	push   %ebx$/;"	l
c0105811	obj/kernel.asm	/^c0105811:	51                   	push   %ecx$/;"	l
c0105812	obj/kernel.asm	/^c0105812:	52                   	push   %edx$/;"	l
c0105813	obj/kernel.asm	/^c0105813:	50                   	push   %eax$/;"	l
c0105814	obj/kernel.asm	/^c0105814:	e8 81 eb ff ff       	call   c010439a <copy_range>$/;"	l
c0105819	obj/kernel.asm	/^c0105819:	83 c4 20             	add    $0x20,%esp$/;"	l
c010581c	obj/kernel.asm	/^c010581c:	85 c0                	test   %eax,%eax$/;"	l
c010581e	obj/kernel.asm	/^c010581e:	74 07                	je     c0105827 <dup_mmap+0xc3>$/;"	l
c0105820	obj/kernel.asm	/^c0105820:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0105825	obj/kernel.asm	/^c0105825:	eb 1f                	jmp    c0105846 <dup_mmap+0xe2>$/;"	l
c0105827	obj/kernel.asm	/^c0105827:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010582a	obj/kernel.asm	/^c010582a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010582d	obj/kernel.asm	/^c010582d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105830	obj/kernel.asm	/^c0105830:	8b 00                	mov    (%eax),%eax$/;"	l
c0105832	obj/kernel.asm	/^c0105832:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105835	obj/kernel.asm	/^c0105835:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105838	obj/kernel.asm	/^c0105838:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010583b	obj/kernel.asm	/^c010583b:	0f 85 60 ff ff ff    	jne    c01057a1 <dup_mmap+0x3d>$/;"	l
c0105841	obj/kernel.asm	/^c0105841:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105846	obj/kernel.asm	/^c0105846:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0105849	obj/kernel.asm	/^c0105849:	c9                   	leave  $/;"	l
c010584a	obj/kernel.asm	/^c010584a:	c3                   	ret    $/;"	l
c010584b	obj/kernel.asm	/^c010584b <exit_mmap>:$/;"	l
c010584b	obj/kernel.asm	/^c010584b:	55                   	push   %ebp$/;"	l
c010584c	obj/kernel.asm	/^c010584c:	89 e5                	mov    %esp,%ebp$/;"	l
c010584e	obj/kernel.asm	/^c010584e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105851	obj/kernel.asm	/^c0105851:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0105855	obj/kernel.asm	/^c0105855:	74 0f                	je     c0105866 <exit_mmap+0x1b>$/;"	l
c0105857	obj/kernel.asm	/^c0105857:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010585a	obj/kernel.asm	/^c010585a:	e8 e2 f9 ff ff       	call   c0105241 <mm_count>$/;"	l
c010585f	obj/kernel.asm	/^c010585f:	83 c4 04             	add    $0x4,%esp$/;"	l
c0105862	obj/kernel.asm	/^c0105862:	85 c0                	test   %eax,%eax$/;"	l
c0105864	obj/kernel.asm	/^c0105864:	74 19                	je     c010587f <exit_mmap+0x34>$/;"	l
c0105866	obj/kernel.asm	/^c0105866:	68 ac 49 11 c0       	push   $0xc01149ac$/;"	l
c010586b	obj/kernel.asm	/^c010586b:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105870	obj/kernel.asm	/^c0105870:	68 d6 00 00 00       	push   $0xd6$/;"	l
c0105875	obj/kernel.asm	/^c0105875:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c010587a	obj/kernel.asm	/^c010587a:	e8 50 ac ff ff       	call   c01004cf <__panic>$/;"	l
c010587f	obj/kernel.asm	/^c010587f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105882	obj/kernel.asm	/^c0105882:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0105885	obj/kernel.asm	/^c0105885:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105888	obj/kernel.asm	/^c0105888:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010588b	obj/kernel.asm	/^c010588b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010588e	obj/kernel.asm	/^c010588e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105891	obj/kernel.asm	/^c0105891:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105894	obj/kernel.asm	/^c0105894:	eb 25                	jmp    c01058bb <exit_mmap+0x70>$/;"	l
c0105896	obj/kernel.asm	/^c0105896:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105899	obj/kernel.asm	/^c0105899:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010589c	obj/kernel.asm	/^c010589c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010589f	obj/kernel.asm	/^c010589f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01058a2	obj/kernel.asm	/^c01058a2:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01058a5	obj/kernel.asm	/^c01058a5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01058a8	obj/kernel.asm	/^c01058a8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01058ab	obj/kernel.asm	/^c01058ab:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01058ae	obj/kernel.asm	/^c01058ae:	52                   	push   %edx$/;"	l
c01058af	obj/kernel.asm	/^c01058af:	50                   	push   %eax$/;"	l
c01058b0	obj/kernel.asm	/^c01058b0:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01058b3	obj/kernel.asm	/^c01058b3:	e8 1d e9 ff ff       	call   c01041d5 <unmap_range>$/;"	l
c01058b8	obj/kernel.asm	/^c01058b8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01058bb	obj/kernel.asm	/^c01058bb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058be	obj/kernel.asm	/^c01058be:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01058c1	obj/kernel.asm	/^c01058c1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01058c4	obj/kernel.asm	/^c01058c4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01058c7	obj/kernel.asm	/^c01058c7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01058ca	obj/kernel.asm	/^c01058ca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058cd	obj/kernel.asm	/^c01058cd:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01058d0	obj/kernel.asm	/^c01058d0:	75 c4                	jne    c0105896 <exit_mmap+0x4b>$/;"	l
c01058d2	obj/kernel.asm	/^c01058d2:	eb 25                	jmp    c01058f9 <exit_mmap+0xae>$/;"	l
c01058d4	obj/kernel.asm	/^c01058d4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058d7	obj/kernel.asm	/^c01058d7:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01058da	obj/kernel.asm	/^c01058da:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01058dd	obj/kernel.asm	/^c01058dd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01058e0	obj/kernel.asm	/^c01058e0:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01058e3	obj/kernel.asm	/^c01058e3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01058e6	obj/kernel.asm	/^c01058e6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01058e9	obj/kernel.asm	/^c01058e9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01058ec	obj/kernel.asm	/^c01058ec:	52                   	push   %edx$/;"	l
c01058ed	obj/kernel.asm	/^c01058ed:	50                   	push   %eax$/;"	l
c01058ee	obj/kernel.asm	/^c01058ee:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01058f1	obj/kernel.asm	/^c01058f1:	e8 b1 e9 ff ff       	call   c01042a7 <exit_range>$/;"	l
c01058f6	obj/kernel.asm	/^c01058f6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01058f9	obj/kernel.asm	/^c01058f9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058fc	obj/kernel.asm	/^c01058fc:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01058ff	obj/kernel.asm	/^c01058ff:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105902	obj/kernel.asm	/^c0105902:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105905	obj/kernel.asm	/^c0105905:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105908	obj/kernel.asm	/^c0105908:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010590b	obj/kernel.asm	/^c010590b:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010590e	obj/kernel.asm	/^c010590e:	75 c4                	jne    c01058d4 <exit_mmap+0x89>$/;"	l
c0105910	obj/kernel.asm	/^c0105910:	c9                   	leave  $/;"	l
c0105911	obj/kernel.asm	/^c0105911:	c3                   	ret    $/;"	l
c0105912	obj/kernel.asm	/^c0105912 <copy_from_user>:$/;"	l
c0105912	obj/kernel.asm	/^c0105912:	55                   	push   %ebp$/;"	l
c0105913	obj/kernel.asm	/^c0105913:	89 e5                	mov    %esp,%ebp$/;"	l
c0105915	obj/kernel.asm	/^c0105915:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105918	obj/kernel.asm	/^c0105918:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010591b	obj/kernel.asm	/^c010591b:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
c010591e	obj/kernel.asm	/^c010591e:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0105921	obj/kernel.asm	/^c0105921:	50                   	push   %eax$/;"	l
c0105922	obj/kernel.asm	/^c0105922:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105925	obj/kernel.asm	/^c0105925:	e8 c7 08 00 00       	call   c01061f1 <user_mem_check>$/;"	l
c010592a	obj/kernel.asm	/^c010592a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010592d	obj/kernel.asm	/^c010592d:	85 c0                	test   %eax,%eax$/;"	l
c010592f	obj/kernel.asm	/^c010592f:	75 07                	jne    c0105938 <copy_from_user+0x26>$/;"	l
c0105931	obj/kernel.asm	/^c0105931:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105936	obj/kernel.asm	/^c0105936:	eb 19                	jmp    c0105951 <copy_from_user+0x3f>$/;"	l
c0105938	obj/kernel.asm	/^c0105938:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010593b	obj/kernel.asm	/^c010593b:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010593e	obj/kernel.asm	/^c010593e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0105941	obj/kernel.asm	/^c0105941:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0105944	obj/kernel.asm	/^c0105944:	e8 86 d7 00 00       	call   c01130cf <memcpy>$/;"	l
c0105949	obj/kernel.asm	/^c0105949:	83 c4 10             	add    $0x10,%esp$/;"	l
c010594c	obj/kernel.asm	/^c010594c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0105951	obj/kernel.asm	/^c0105951:	c9                   	leave  $/;"	l
c0105952	obj/kernel.asm	/^c0105952:	c3                   	ret    $/;"	l
c0105953	obj/kernel.asm	/^c0105953 <copy_to_user>:$/;"	l
c0105953	obj/kernel.asm	/^c0105953:	55                   	push   %ebp$/;"	l
c0105954	obj/kernel.asm	/^c0105954:	89 e5                	mov    %esp,%ebp$/;"	l
c0105956	obj/kernel.asm	/^c0105956:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105959	obj/kernel.asm	/^c0105959:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010595c	obj/kernel.asm	/^c010595c:	6a 01                	push   $0x1$/;"	l
c010595e	obj/kernel.asm	/^c010595e:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0105961	obj/kernel.asm	/^c0105961:	50                   	push   %eax$/;"	l
c0105962	obj/kernel.asm	/^c0105962:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105965	obj/kernel.asm	/^c0105965:	e8 87 08 00 00       	call   c01061f1 <user_mem_check>$/;"	l
c010596a	obj/kernel.asm	/^c010596a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010596d	obj/kernel.asm	/^c010596d:	85 c0                	test   %eax,%eax$/;"	l
c010596f	obj/kernel.asm	/^c010596f:	75 07                	jne    c0105978 <copy_to_user+0x25>$/;"	l
c0105971	obj/kernel.asm	/^c0105971:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105976	obj/kernel.asm	/^c0105976:	eb 19                	jmp    c0105991 <copy_to_user+0x3e>$/;"	l
c0105978	obj/kernel.asm	/^c0105978:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010597b	obj/kernel.asm	/^c010597b:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010597e	obj/kernel.asm	/^c010597e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0105981	obj/kernel.asm	/^c0105981:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0105984	obj/kernel.asm	/^c0105984:	e8 46 d7 00 00       	call   c01130cf <memcpy>$/;"	l
c0105989	obj/kernel.asm	/^c0105989:	83 c4 10             	add    $0x10,%esp$/;"	l
c010598c	obj/kernel.asm	/^c010598c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0105991	obj/kernel.asm	/^c0105991:	c9                   	leave  $/;"	l
c0105992	obj/kernel.asm	/^c0105992:	c3                   	ret    $/;"	l
c0105993	obj/kernel.asm	/^c0105993 <vmm_init>:$/;"	l
c0105993	obj/kernel.asm	/^c0105993:	55                   	push   %ebp$/;"	l
c0105994	obj/kernel.asm	/^c0105994:	89 e5                	mov    %esp,%ebp$/;"	l
c0105996	obj/kernel.asm	/^c0105996:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105999	obj/kernel.asm	/^c0105999:	e8 02 00 00 00       	call   c01059a0 <check_vmm>$/;"	l
c010599e	obj/kernel.asm	/^c010599e:	c9                   	leave  $/;"	l
c010599f	obj/kernel.asm	/^c010599f:	c3                   	ret    $/;"	l
c01059a0	obj/kernel.asm	/^c01059a0 <check_vmm>:$/;"	l
c01059a0	obj/kernel.asm	/^c01059a0:	55                   	push   %ebp$/;"	l
c01059a1	obj/kernel.asm	/^c01059a1:	89 e5                	mov    %esp,%ebp$/;"	l
c01059a3	obj/kernel.asm	/^c01059a3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01059a6	obj/kernel.asm	/^c01059a6:	e8 36 e0 ff ff       	call   c01039e1 <nr_free_pages>$/;"	l
c01059ab	obj/kernel.asm	/^c01059ab:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01059ae	obj/kernel.asm	/^c01059ae:	e8 17 00 00 00       	call   c01059ca <check_vma_struct>$/;"	l
c01059b3	obj/kernel.asm	/^c01059b3:	e8 0e 04 00 00       	call   c0105dc6 <check_pgfault>$/;"	l
c01059b8	obj/kernel.asm	/^c01059b8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01059bb	obj/kernel.asm	/^c01059bb:	68 cc 49 11 c0       	push   $0xc01149cc$/;"	l
c01059c0	obj/kernel.asm	/^c01059c0:	e8 a5 a9 ff ff       	call   c010036a <cprintf>$/;"	l
c01059c5	obj/kernel.asm	/^c01059c5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01059c8	obj/kernel.asm	/^c01059c8:	c9                   	leave  $/;"	l
c01059c9	obj/kernel.asm	/^c01059c9:	c3                   	ret    $/;"	l
c01059ca	obj/kernel.asm	/^c01059ca <check_vma_struct>:$/;"	l
c01059ca	obj/kernel.asm	/^c01059ca:	55                   	push   %ebp$/;"	l
c01059cb	obj/kernel.asm	/^c01059cb:	89 e5                	mov    %esp,%ebp$/;"	l
c01059cd	obj/kernel.asm	/^c01059cd:	83 ec 58             	sub    $0x58,%esp$/;"	l
c01059d0	obj/kernel.asm	/^c01059d0:	e8 0c e0 ff ff       	call   c01039e1 <nr_free_pages>$/;"	l
c01059d5	obj/kernel.asm	/^c01059d5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01059d8	obj/kernel.asm	/^c01059d8:	e8 ba f8 ff ff       	call   c0105297 <mm_create>$/;"	l
c01059dd	obj/kernel.asm	/^c01059dd:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01059e0	obj/kernel.asm	/^c01059e0:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01059e4	obj/kernel.asm	/^c01059e4:	75 19                	jne    c01059ff <check_vma_struct+0x35>$/;"	l
c01059e6	obj/kernel.asm	/^c01059e6:	68 83 49 11 c0       	push   $0xc0114983$/;"	l
c01059eb	obj/kernel.asm	/^c01059eb:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c01059f0	obj/kernel.asm	/^c01059f0:	68 0c 01 00 00       	push   $0x10c$/;"	l
c01059f5	obj/kernel.asm	/^c01059f5:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c01059fa	obj/kernel.asm	/^c01059fa:	e8 d0 aa ff ff       	call   c01004cf <__panic>$/;"	l
c01059ff	obj/kernel.asm	/^c01059ff:	c7 45 e4 0a 00 00 00 	movl   $0xa,-0x1c(%ebp)$/;"	l
c0105a06	obj/kernel.asm	/^c0105a06:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0105a09	obj/kernel.asm	/^c0105a09:	89 d0                	mov    %edx,%eax$/;"	l
c0105a0b	obj/kernel.asm	/^c0105a0b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105a0e	obj/kernel.asm	/^c0105a0e:	01 d0                	add    %edx,%eax$/;"	l
c0105a10	obj/kernel.asm	/^c0105a10:	01 c0                	add    %eax,%eax$/;"	l
c0105a12	obj/kernel.asm	/^c0105a12:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105a15	obj/kernel.asm	/^c0105a15:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105a18	obj/kernel.asm	/^c0105a18:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105a1b	obj/kernel.asm	/^c0105a1b:	eb 5f                	jmp    c0105a7c <check_vma_struct+0xb2>$/;"	l
c0105a1d	obj/kernel.asm	/^c0105a1d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105a20	obj/kernel.asm	/^c0105a20:	89 d0                	mov    %edx,%eax$/;"	l
c0105a22	obj/kernel.asm	/^c0105a22:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105a25	obj/kernel.asm	/^c0105a25:	01 d0                	add    %edx,%eax$/;"	l
c0105a27	obj/kernel.asm	/^c0105a27:	83 c0 02             	add    $0x2,%eax$/;"	l
c0105a2a	obj/kernel.asm	/^c0105a2a:	89 c1                	mov    %eax,%ecx$/;"	l
c0105a2c	obj/kernel.asm	/^c0105a2c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105a2f	obj/kernel.asm	/^c0105a2f:	89 d0                	mov    %edx,%eax$/;"	l
c0105a31	obj/kernel.asm	/^c0105a31:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105a34	obj/kernel.asm	/^c0105a34:	01 d0                	add    %edx,%eax$/;"	l
c0105a36	obj/kernel.asm	/^c0105a36:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105a39	obj/kernel.asm	/^c0105a39:	6a 00                	push   $0x0$/;"	l
c0105a3b	obj/kernel.asm	/^c0105a3b:	51                   	push   %ecx$/;"	l
c0105a3c	obj/kernel.asm	/^c0105a3c:	50                   	push   %eax$/;"	l
c0105a3d	obj/kernel.asm	/^c0105a3d:	e8 f5 f8 ff ff       	call   c0105337 <vma_create>$/;"	l
c0105a42	obj/kernel.asm	/^c0105a42:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105a45	obj/kernel.asm	/^c0105a45:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105a48	obj/kernel.asm	/^c0105a48:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0105a4c	obj/kernel.asm	/^c0105a4c:	75 19                	jne    c0105a67 <check_vma_struct+0x9d>$/;"	l
c0105a4e	obj/kernel.asm	/^c0105a4e:	68 e4 49 11 c0       	push   $0xc01149e4$/;"	l
c0105a53	obj/kernel.asm	/^c0105a53:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105a58	obj/kernel.asm	/^c0105a58:	68 13 01 00 00       	push   $0x113$/;"	l
c0105a5d	obj/kernel.asm	/^c0105a5d:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105a62	obj/kernel.asm	/^c0105a62:	e8 68 aa ff ff       	call   c01004cf <__panic>$/;"	l
c0105a67	obj/kernel.asm	/^c0105a67:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105a6a	obj/kernel.asm	/^c0105a6a:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0105a6d	obj/kernel.asm	/^c0105a6d:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105a70	obj/kernel.asm	/^c0105a70:	e8 29 fa ff ff       	call   c010549e <insert_vma_struct>$/;"	l
c0105a75	obj/kernel.asm	/^c0105a75:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105a78	obj/kernel.asm	/^c0105a78:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0105a7c	obj/kernel.asm	/^c0105a7c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105a80	obj/kernel.asm	/^c0105a80:	7f 9b                	jg     c0105a1d <check_vma_struct+0x53>$/;"	l
c0105a82	obj/kernel.asm	/^c0105a82:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105a85	obj/kernel.asm	/^c0105a85:	83 c0 01             	add    $0x1,%eax$/;"	l
c0105a88	obj/kernel.asm	/^c0105a88:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105a8b	obj/kernel.asm	/^c0105a8b:	eb 5f                	jmp    c0105aec <check_vma_struct+0x122>$/;"	l
c0105a8d	obj/kernel.asm	/^c0105a8d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105a90	obj/kernel.asm	/^c0105a90:	89 d0                	mov    %edx,%eax$/;"	l
c0105a92	obj/kernel.asm	/^c0105a92:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105a95	obj/kernel.asm	/^c0105a95:	01 d0                	add    %edx,%eax$/;"	l
c0105a97	obj/kernel.asm	/^c0105a97:	83 c0 02             	add    $0x2,%eax$/;"	l
c0105a9a	obj/kernel.asm	/^c0105a9a:	89 c1                	mov    %eax,%ecx$/;"	l
c0105a9c	obj/kernel.asm	/^c0105a9c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105a9f	obj/kernel.asm	/^c0105a9f:	89 d0                	mov    %edx,%eax$/;"	l
c0105aa1	obj/kernel.asm	/^c0105aa1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105aa4	obj/kernel.asm	/^c0105aa4:	01 d0                	add    %edx,%eax$/;"	l
c0105aa6	obj/kernel.asm	/^c0105aa6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105aa9	obj/kernel.asm	/^c0105aa9:	6a 00                	push   $0x0$/;"	l
c0105aab	obj/kernel.asm	/^c0105aab:	51                   	push   %ecx$/;"	l
c0105aac	obj/kernel.asm	/^c0105aac:	50                   	push   %eax$/;"	l
c0105aad	obj/kernel.asm	/^c0105aad:	e8 85 f8 ff ff       	call   c0105337 <vma_create>$/;"	l
c0105ab2	obj/kernel.asm	/^c0105ab2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105ab5	obj/kernel.asm	/^c0105ab5:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0105ab8	obj/kernel.asm	/^c0105ab8:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0105abc	obj/kernel.asm	/^c0105abc:	75 19                	jne    c0105ad7 <check_vma_struct+0x10d>$/;"	l
c0105abe	obj/kernel.asm	/^c0105abe:	68 e4 49 11 c0       	push   $0xc01149e4$/;"	l
c0105ac3	obj/kernel.asm	/^c0105ac3:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105ac8	obj/kernel.asm	/^c0105ac8:	68 19 01 00 00       	push   $0x119$/;"	l
c0105acd	obj/kernel.asm	/^c0105acd:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105ad2	obj/kernel.asm	/^c0105ad2:	e8 f8 a9 ff ff       	call   c01004cf <__panic>$/;"	l
c0105ad7	obj/kernel.asm	/^c0105ad7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105ada	obj/kernel.asm	/^c0105ada:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c0105add	obj/kernel.asm	/^c0105add:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105ae0	obj/kernel.asm	/^c0105ae0:	e8 b9 f9 ff ff       	call   c010549e <insert_vma_struct>$/;"	l
c0105ae5	obj/kernel.asm	/^c0105ae5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105ae8	obj/kernel.asm	/^c0105ae8:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105aec	obj/kernel.asm	/^c0105aec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105aef	obj/kernel.asm	/^c0105aef:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0105af2	obj/kernel.asm	/^c0105af2:	7e 99                	jle    c0105a8d <check_vma_struct+0xc3>$/;"	l
c0105af4	obj/kernel.asm	/^c0105af4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105af7	obj/kernel.asm	/^c0105af7:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0105afa	obj/kernel.asm	/^c0105afa:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0105afd	obj/kernel.asm	/^c0105afd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105b00	obj/kernel.asm	/^c0105b00:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105b03	obj/kernel.asm	/^c0105b03:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c0105b0a	obj/kernel.asm	/^c0105b0a:	e9 81 00 00 00       	jmp    c0105b90 <check_vma_struct+0x1c6>$/;"	l
c0105b0f	obj/kernel.asm	/^c0105b0f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105b12	obj/kernel.asm	/^c0105b12:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0105b15	obj/kernel.asm	/^c0105b15:	75 19                	jne    c0105b30 <check_vma_struct+0x166>$/;"	l
c0105b17	obj/kernel.asm	/^c0105b17:	68 f0 49 11 c0       	push   $0xc01149f0$/;"	l
c0105b1c	obj/kernel.asm	/^c0105b1c:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105b21	obj/kernel.asm	/^c0105b21:	68 20 01 00 00       	push   $0x120$/;"	l
c0105b26	obj/kernel.asm	/^c0105b26:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105b2b	obj/kernel.asm	/^c0105b2b:	e8 9f a9 ff ff       	call   c01004cf <__panic>$/;"	l
c0105b30	obj/kernel.asm	/^c0105b30:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105b33	obj/kernel.asm	/^c0105b33:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105b36	obj/kernel.asm	/^c0105b36:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0105b39	obj/kernel.asm	/^c0105b39:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0105b3c	obj/kernel.asm	/^c0105b3c:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c0105b3f	obj/kernel.asm	/^c0105b3f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105b42	obj/kernel.asm	/^c0105b42:	89 d0                	mov    %edx,%eax$/;"	l
c0105b44	obj/kernel.asm	/^c0105b44:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105b47	obj/kernel.asm	/^c0105b47:	01 d0                	add    %edx,%eax$/;"	l
c0105b49	obj/kernel.asm	/^c0105b49:	39 c1                	cmp    %eax,%ecx$/;"	l
c0105b4b	obj/kernel.asm	/^c0105b4b:	75 17                	jne    c0105b64 <check_vma_struct+0x19a>$/;"	l
c0105b4d	obj/kernel.asm	/^c0105b4d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0105b50	obj/kernel.asm	/^c0105b50:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
c0105b53	obj/kernel.asm	/^c0105b53:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105b56	obj/kernel.asm	/^c0105b56:	89 d0                	mov    %edx,%eax$/;"	l
c0105b58	obj/kernel.asm	/^c0105b58:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105b5b	obj/kernel.asm	/^c0105b5b:	01 d0                	add    %edx,%eax$/;"	l
c0105b5d	obj/kernel.asm	/^c0105b5d:	83 c0 02             	add    $0x2,%eax$/;"	l
c0105b60	obj/kernel.asm	/^c0105b60:	39 c1                	cmp    %eax,%ecx$/;"	l
c0105b62	obj/kernel.asm	/^c0105b62:	74 19                	je     c0105b7d <check_vma_struct+0x1b3>$/;"	l
c0105b64	obj/kernel.asm	/^c0105b64:	68 08 4a 11 c0       	push   $0xc0114a08$/;"	l
c0105b69	obj/kernel.asm	/^c0105b69:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105b6e	obj/kernel.asm	/^c0105b6e:	68 22 01 00 00       	push   $0x122$/;"	l
c0105b73	obj/kernel.asm	/^c0105b73:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105b78	obj/kernel.asm	/^c0105b78:	e8 52 a9 ff ff       	call   c01004cf <__panic>$/;"	l
c0105b7d	obj/kernel.asm	/^c0105b7d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105b80	obj/kernel.asm	/^c0105b80:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0105b83	obj/kernel.asm	/^c0105b83:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0105b86	obj/kernel.asm	/^c0105b86:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105b89	obj/kernel.asm	/^c0105b89:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105b8c	obj/kernel.asm	/^c0105b8c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105b90	obj/kernel.asm	/^c0105b90:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105b93	obj/kernel.asm	/^c0105b93:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0105b96	obj/kernel.asm	/^c0105b96:	0f 8e 73 ff ff ff    	jle    c0105b0f <check_vma_struct+0x145>$/;"	l
c0105b9c	obj/kernel.asm	/^c0105b9c:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%ebp)$/;"	l
c0105ba3	obj/kernel.asm	/^c0105ba3:	e9 80 01 00 00       	jmp    c0105d28 <check_vma_struct+0x35e>$/;"	l
c0105ba8	obj/kernel.asm	/^c0105ba8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105bab	obj/kernel.asm	/^c0105bab:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105bae	obj/kernel.asm	/^c0105bae:	50                   	push   %eax$/;"	l
c0105baf	obj/kernel.asm	/^c0105baf:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105bb2	obj/kernel.asm	/^c0105bb2:	e8 bc f7 ff ff       	call   c0105373 <find_vma>$/;"	l
c0105bb7	obj/kernel.asm	/^c0105bb7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105bba	obj/kernel.asm	/^c0105bba:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0105bbd	obj/kernel.asm	/^c0105bbd:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c0105bc1	obj/kernel.asm	/^c0105bc1:	75 19                	jne    c0105bdc <check_vma_struct+0x212>$/;"	l
c0105bc3	obj/kernel.asm	/^c0105bc3:	68 3d 4a 11 c0       	push   $0xc0114a3d$/;"	l
c0105bc8	obj/kernel.asm	/^c0105bc8:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105bcd	obj/kernel.asm	/^c0105bcd:	68 28 01 00 00       	push   $0x128$/;"	l
c0105bd2	obj/kernel.asm	/^c0105bd2:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105bd7	obj/kernel.asm	/^c0105bd7:	e8 f3 a8 ff ff       	call   c01004cf <__panic>$/;"	l
c0105bdc	obj/kernel.asm	/^c0105bdc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105bdf	obj/kernel.asm	/^c0105bdf:	83 c0 01             	add    $0x1,%eax$/;"	l
c0105be2	obj/kernel.asm	/^c0105be2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105be5	obj/kernel.asm	/^c0105be5:	50                   	push   %eax$/;"	l
c0105be6	obj/kernel.asm	/^c0105be6:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105be9	obj/kernel.asm	/^c0105be9:	e8 85 f7 ff ff       	call   c0105373 <find_vma>$/;"	l
c0105bee	obj/kernel.asm	/^c0105bee:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105bf1	obj/kernel.asm	/^c0105bf1:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0105bf4	obj/kernel.asm	/^c0105bf4:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0105bf8	obj/kernel.asm	/^c0105bf8:	75 19                	jne    c0105c13 <check_vma_struct+0x249>$/;"	l
c0105bfa	obj/kernel.asm	/^c0105bfa:	68 4a 4a 11 c0       	push   $0xc0114a4a$/;"	l
c0105bff	obj/kernel.asm	/^c0105bff:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105c04	obj/kernel.asm	/^c0105c04:	68 2a 01 00 00       	push   $0x12a$/;"	l
c0105c09	obj/kernel.asm	/^c0105c09:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105c0e	obj/kernel.asm	/^c0105c0e:	e8 bc a8 ff ff       	call   c01004cf <__panic>$/;"	l
c0105c13	obj/kernel.asm	/^c0105c13:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105c16	obj/kernel.asm	/^c0105c16:	83 c0 02             	add    $0x2,%eax$/;"	l
c0105c19	obj/kernel.asm	/^c0105c19:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105c1c	obj/kernel.asm	/^c0105c1c:	50                   	push   %eax$/;"	l
c0105c1d	obj/kernel.asm	/^c0105c1d:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105c20	obj/kernel.asm	/^c0105c20:	e8 4e f7 ff ff       	call   c0105373 <find_vma>$/;"	l
c0105c25	obj/kernel.asm	/^c0105c25:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105c28	obj/kernel.asm	/^c0105c28:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0105c2b	obj/kernel.asm	/^c0105c2b:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c0105c2f	obj/kernel.asm	/^c0105c2f:	74 19                	je     c0105c4a <check_vma_struct+0x280>$/;"	l
c0105c31	obj/kernel.asm	/^c0105c31:	68 57 4a 11 c0       	push   $0xc0114a57$/;"	l
c0105c36	obj/kernel.asm	/^c0105c36:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105c3b	obj/kernel.asm	/^c0105c3b:	68 2c 01 00 00       	push   $0x12c$/;"	l
c0105c40	obj/kernel.asm	/^c0105c40:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105c45	obj/kernel.asm	/^c0105c45:	e8 85 a8 ff ff       	call   c01004cf <__panic>$/;"	l
c0105c4a	obj/kernel.asm	/^c0105c4a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105c4d	obj/kernel.asm	/^c0105c4d:	83 c0 03             	add    $0x3,%eax$/;"	l
c0105c50	obj/kernel.asm	/^c0105c50:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105c53	obj/kernel.asm	/^c0105c53:	50                   	push   %eax$/;"	l
c0105c54	obj/kernel.asm	/^c0105c54:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105c57	obj/kernel.asm	/^c0105c57:	e8 17 f7 ff ff       	call   c0105373 <find_vma>$/;"	l
c0105c5c	obj/kernel.asm	/^c0105c5c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105c5f	obj/kernel.asm	/^c0105c5f:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0105c62	obj/kernel.asm	/^c0105c62:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)$/;"	l
c0105c66	obj/kernel.asm	/^c0105c66:	74 19                	je     c0105c81 <check_vma_struct+0x2b7>$/;"	l
c0105c68	obj/kernel.asm	/^c0105c68:	68 64 4a 11 c0       	push   $0xc0114a64$/;"	l
c0105c6d	obj/kernel.asm	/^c0105c6d:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105c72	obj/kernel.asm	/^c0105c72:	68 2e 01 00 00       	push   $0x12e$/;"	l
c0105c77	obj/kernel.asm	/^c0105c77:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105c7c	obj/kernel.asm	/^c0105c7c:	e8 4e a8 ff ff       	call   c01004cf <__panic>$/;"	l
c0105c81	obj/kernel.asm	/^c0105c81:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105c84	obj/kernel.asm	/^c0105c84:	83 c0 04             	add    $0x4,%eax$/;"	l
c0105c87	obj/kernel.asm	/^c0105c87:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105c8a	obj/kernel.asm	/^c0105c8a:	50                   	push   %eax$/;"	l
c0105c8b	obj/kernel.asm	/^c0105c8b:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105c8e	obj/kernel.asm	/^c0105c8e:	e8 e0 f6 ff ff       	call   c0105373 <find_vma>$/;"	l
c0105c93	obj/kernel.asm	/^c0105c93:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105c96	obj/kernel.asm	/^c0105c96:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0105c99	obj/kernel.asm	/^c0105c99:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)$/;"	l
c0105c9d	obj/kernel.asm	/^c0105c9d:	74 19                	je     c0105cb8 <check_vma_struct+0x2ee>$/;"	l
c0105c9f	obj/kernel.asm	/^c0105c9f:	68 71 4a 11 c0       	push   $0xc0114a71$/;"	l
c0105ca4	obj/kernel.asm	/^c0105ca4:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105ca9	obj/kernel.asm	/^c0105ca9:	68 30 01 00 00       	push   $0x130$/;"	l
c0105cae	obj/kernel.asm	/^c0105cae:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105cb3	obj/kernel.asm	/^c0105cb3:	e8 17 a8 ff ff       	call   c01004cf <__panic>$/;"	l
c0105cb8	obj/kernel.asm	/^c0105cb8:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0105cbb	obj/kernel.asm	/^c0105cbb:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0105cbe	obj/kernel.asm	/^c0105cbe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105cc1	obj/kernel.asm	/^c0105cc1:	39 c2                	cmp    %eax,%edx$/;"	l
c0105cc3	obj/kernel.asm	/^c0105cc3:	75 10                	jne    c0105cd5 <check_vma_struct+0x30b>$/;"	l
c0105cc5	obj/kernel.asm	/^c0105cc5:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0105cc8	obj/kernel.asm	/^c0105cc8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105ccb	obj/kernel.asm	/^c0105ccb:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105cce	obj/kernel.asm	/^c0105cce:	83 c2 02             	add    $0x2,%edx$/;"	l
c0105cd1	obj/kernel.asm	/^c0105cd1:	39 d0                	cmp    %edx,%eax$/;"	l
c0105cd3	obj/kernel.asm	/^c0105cd3:	74 19                	je     c0105cee <check_vma_struct+0x324>$/;"	l
c0105cd5	obj/kernel.asm	/^c0105cd5:	68 80 4a 11 c0       	push   $0xc0114a80$/;"	l
c0105cda	obj/kernel.asm	/^c0105cda:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105cdf	obj/kernel.asm	/^c0105cdf:	68 32 01 00 00       	push   $0x132$/;"	l
c0105ce4	obj/kernel.asm	/^c0105ce4:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105ce9	obj/kernel.asm	/^c0105ce9:	e8 e1 a7 ff ff       	call   c01004cf <__panic>$/;"	l
c0105cee	obj/kernel.asm	/^c0105cee:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0105cf1	obj/kernel.asm	/^c0105cf1:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0105cf4	obj/kernel.asm	/^c0105cf4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105cf7	obj/kernel.asm	/^c0105cf7:	39 c2                	cmp    %eax,%edx$/;"	l
c0105cf9	obj/kernel.asm	/^c0105cf9:	75 10                	jne    c0105d0b <check_vma_struct+0x341>$/;"	l
c0105cfb	obj/kernel.asm	/^c0105cfb:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0105cfe	obj/kernel.asm	/^c0105cfe:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105d01	obj/kernel.asm	/^c0105d01:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105d04	obj/kernel.asm	/^c0105d04:	83 c2 02             	add    $0x2,%edx$/;"	l
c0105d07	obj/kernel.asm	/^c0105d07:	39 d0                	cmp    %edx,%eax$/;"	l
c0105d09	obj/kernel.asm	/^c0105d09:	74 19                	je     c0105d24 <check_vma_struct+0x35a>$/;"	l
c0105d0b	obj/kernel.asm	/^c0105d0b:	68 b0 4a 11 c0       	push   $0xc0114ab0$/;"	l
c0105d10	obj/kernel.asm	/^c0105d10:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105d15	obj/kernel.asm	/^c0105d15:	68 33 01 00 00       	push   $0x133$/;"	l
c0105d1a	obj/kernel.asm	/^c0105d1a:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105d1f	obj/kernel.asm	/^c0105d1f:	e8 ab a7 ff ff       	call   c01004cf <__panic>$/;"	l
c0105d24	obj/kernel.asm	/^c0105d24:	83 45 f4 05          	addl   $0x5,-0xc(%ebp)$/;"	l
c0105d28	obj/kernel.asm	/^c0105d28:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0105d2b	obj/kernel.asm	/^c0105d2b:	89 d0                	mov    %edx,%eax$/;"	l
c0105d2d	obj/kernel.asm	/^c0105d2d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105d30	obj/kernel.asm	/^c0105d30:	01 d0                	add    %edx,%eax$/;"	l
c0105d32	obj/kernel.asm	/^c0105d32:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0105d35	obj/kernel.asm	/^c0105d35:	0f 8d 6d fe ff ff    	jge    c0105ba8 <check_vma_struct+0x1de>$/;"	l
c0105d3b	obj/kernel.asm	/^c0105d3b:	c7 45 f4 04 00 00 00 	movl   $0x4,-0xc(%ebp)$/;"	l
c0105d42	obj/kernel.asm	/^c0105d42:	eb 5c                	jmp    c0105da0 <check_vma_struct+0x3d6>$/;"	l
c0105d44	obj/kernel.asm	/^c0105d44:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105d47	obj/kernel.asm	/^c0105d47:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105d4a	obj/kernel.asm	/^c0105d4a:	50                   	push   %eax$/;"	l
c0105d4b	obj/kernel.asm	/^c0105d4b:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105d4e	obj/kernel.asm	/^c0105d4e:	e8 20 f6 ff ff       	call   c0105373 <find_vma>$/;"	l
c0105d53	obj/kernel.asm	/^c0105d53:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105d56	obj/kernel.asm	/^c0105d56:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0105d59	obj/kernel.asm	/^c0105d59:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0105d5d	obj/kernel.asm	/^c0105d5d:	74 1e                	je     c0105d7d <check_vma_struct+0x3b3>$/;"	l
c0105d5f	obj/kernel.asm	/^c0105d5f:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0105d62	obj/kernel.asm	/^c0105d62:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0105d65	obj/kernel.asm	/^c0105d65:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0105d68	obj/kernel.asm	/^c0105d68:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105d6b	obj/kernel.asm	/^c0105d6b:	52                   	push   %edx$/;"	l
c0105d6c	obj/kernel.asm	/^c0105d6c:	50                   	push   %eax$/;"	l
c0105d6d	obj/kernel.asm	/^c0105d6d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0105d70	obj/kernel.asm	/^c0105d70:	68 e0 4a 11 c0       	push   $0xc0114ae0$/;"	l
c0105d75	obj/kernel.asm	/^c0105d75:	e8 f0 a5 ff ff       	call   c010036a <cprintf>$/;"	l
c0105d7a	obj/kernel.asm	/^c0105d7a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105d7d	obj/kernel.asm	/^c0105d7d:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0105d81	obj/kernel.asm	/^c0105d81:	74 19                	je     c0105d9c <check_vma_struct+0x3d2>$/;"	l
c0105d83	obj/kernel.asm	/^c0105d83:	68 05 4b 11 c0       	push   $0xc0114b05$/;"	l
c0105d88	obj/kernel.asm	/^c0105d88:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105d8d	obj/kernel.asm	/^c0105d8d:	68 3b 01 00 00       	push   $0x13b$/;"	l
c0105d92	obj/kernel.asm	/^c0105d92:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105d97	obj/kernel.asm	/^c0105d97:	e8 33 a7 ff ff       	call   c01004cf <__panic>$/;"	l
c0105d9c	obj/kernel.asm	/^c0105d9c:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0105da0	obj/kernel.asm	/^c0105da0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105da4	obj/kernel.asm	/^c0105da4:	79 9e                	jns    c0105d44 <check_vma_struct+0x37a>$/;"	l
c0105da6	obj/kernel.asm	/^c0105da6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105da9	obj/kernel.asm	/^c0105da9:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105dac	obj/kernel.asm	/^c0105dac:	e8 0f f8 ff ff       	call   c01055c0 <mm_destroy>$/;"	l
c0105db1	obj/kernel.asm	/^c0105db1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105db4	obj/kernel.asm	/^c0105db4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105db7	obj/kernel.asm	/^c0105db7:	68 1c 4b 11 c0       	push   $0xc0114b1c$/;"	l
c0105dbc	obj/kernel.asm	/^c0105dbc:	e8 a9 a5 ff ff       	call   c010036a <cprintf>$/;"	l
c0105dc1	obj/kernel.asm	/^c0105dc1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105dc4	obj/kernel.asm	/^c0105dc4:	c9                   	leave  $/;"	l
c0105dc5	obj/kernel.asm	/^c0105dc5:	c3                   	ret    $/;"	l
c0105dc6	obj/kernel.asm	/^c0105dc6 <check_pgfault>:$/;"	l
c0105dc6	obj/kernel.asm	/^c0105dc6:	55                   	push   %ebp$/;"	l
c0105dc7	obj/kernel.asm	/^c0105dc7:	89 e5                	mov    %esp,%ebp$/;"	l
c0105dc9	obj/kernel.asm	/^c0105dc9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105dcc	obj/kernel.asm	/^c0105dcc:	e8 10 dc ff ff       	call   c01039e1 <nr_free_pages>$/;"	l
c0105dd1	obj/kernel.asm	/^c0105dd1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105dd4	obj/kernel.asm	/^c0105dd4:	e8 be f4 ff ff       	call   c0105297 <mm_create>$/;"	l
c0105dd9	obj/kernel.asm	/^c0105dd9:	a3 1c 12 15 c0       	mov    %eax,0xc015121c$/;"	l
c0105dde	obj/kernel.asm	/^c0105dde:	a1 1c 12 15 c0       	mov    0xc015121c,%eax$/;"	l
c0105de3	obj/kernel.asm	/^c0105de3:	85 c0                	test   %eax,%eax$/;"	l
c0105de5	obj/kernel.asm	/^c0105de5:	75 19                	jne    c0105e00 <check_pgfault+0x3a>$/;"	l
c0105de7	obj/kernel.asm	/^c0105de7:	68 3b 4b 11 c0       	push   $0xc0114b3b$/;"	l
c0105dec	obj/kernel.asm	/^c0105dec:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105df1	obj/kernel.asm	/^c0105df1:	68 4b 01 00 00       	push   $0x14b$/;"	l
c0105df6	obj/kernel.asm	/^c0105df6:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105dfb	obj/kernel.asm	/^c0105dfb:	e8 cf a6 ff ff       	call   c01004cf <__panic>$/;"	l
c0105e00	obj/kernel.asm	/^c0105e00:	a1 1c 12 15 c0       	mov    0xc015121c,%eax$/;"	l
c0105e05	obj/kernel.asm	/^c0105e05:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105e08	obj/kernel.asm	/^c0105e08:	8b 15 c4 df 14 c0    	mov    0xc014dfc4,%edx$/;"	l
c0105e0e	obj/kernel.asm	/^c0105e0e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105e11	obj/kernel.asm	/^c0105e11:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0105e14	obj/kernel.asm	/^c0105e14:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105e17	obj/kernel.asm	/^c0105e17:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0105e1a	obj/kernel.asm	/^c0105e1a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105e1d	obj/kernel.asm	/^c0105e1d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105e20	obj/kernel.asm	/^c0105e20:	8b 00                	mov    (%eax),%eax$/;"	l
c0105e22	obj/kernel.asm	/^c0105e22:	85 c0                	test   %eax,%eax$/;"	l
c0105e24	obj/kernel.asm	/^c0105e24:	74 19                	je     c0105e3f <check_pgfault+0x79>$/;"	l
c0105e26	obj/kernel.asm	/^c0105e26:	68 53 4b 11 c0       	push   $0xc0114b53$/;"	l
c0105e2b	obj/kernel.asm	/^c0105e2b:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105e30	obj/kernel.asm	/^c0105e30:	68 4f 01 00 00       	push   $0x14f$/;"	l
c0105e35	obj/kernel.asm	/^c0105e35:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105e3a	obj/kernel.asm	/^c0105e3a:	e8 90 a6 ff ff       	call   c01004cf <__panic>$/;"	l
c0105e3f	obj/kernel.asm	/^c0105e3f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105e42	obj/kernel.asm	/^c0105e42:	6a 02                	push   $0x2$/;"	l
c0105e44	obj/kernel.asm	/^c0105e44:	68 00 00 40 00       	push   $0x400000$/;"	l
c0105e49	obj/kernel.asm	/^c0105e49:	6a 00                	push   $0x0$/;"	l
c0105e4b	obj/kernel.asm	/^c0105e4b:	e8 e7 f4 ff ff       	call   c0105337 <vma_create>$/;"	l
c0105e50	obj/kernel.asm	/^c0105e50:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105e53	obj/kernel.asm	/^c0105e53:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105e56	obj/kernel.asm	/^c0105e56:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0105e5a	obj/kernel.asm	/^c0105e5a:	75 19                	jne    c0105e75 <check_pgfault+0xaf>$/;"	l
c0105e5c	obj/kernel.asm	/^c0105e5c:	68 e4 49 11 c0       	push   $0xc01149e4$/;"	l
c0105e61	obj/kernel.asm	/^c0105e61:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105e66	obj/kernel.asm	/^c0105e66:	68 52 01 00 00       	push   $0x152$/;"	l
c0105e6b	obj/kernel.asm	/^c0105e6b:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105e70	obj/kernel.asm	/^c0105e70:	e8 5a a6 ff ff       	call   c01004cf <__panic>$/;"	l
c0105e75	obj/kernel.asm	/^c0105e75:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105e78	obj/kernel.asm	/^c0105e78:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0105e7b	obj/kernel.asm	/^c0105e7b:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105e7e	obj/kernel.asm	/^c0105e7e:	e8 1b f6 ff ff       	call   c010549e <insert_vma_struct>$/;"	l
c0105e83	obj/kernel.asm	/^c0105e83:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105e86	obj/kernel.asm	/^c0105e86:	c7 45 dc 00 01 00 00 	movl   $0x100,-0x24(%ebp)$/;"	l
c0105e8d	obj/kernel.asm	/^c0105e8d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105e90	obj/kernel.asm	/^c0105e90:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0105e93	obj/kernel.asm	/^c0105e93:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105e96	obj/kernel.asm	/^c0105e96:	e8 d8 f4 ff ff       	call   c0105373 <find_vma>$/;"	l
c0105e9b	obj/kernel.asm	/^c0105e9b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105e9e	obj/kernel.asm	/^c0105e9e:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0105ea1	obj/kernel.asm	/^c0105ea1:	74 19                	je     c0105ebc <check_pgfault+0xf6>$/;"	l
c0105ea3	obj/kernel.asm	/^c0105ea3:	68 61 4b 11 c0       	push   $0xc0114b61$/;"	l
c0105ea8	obj/kernel.asm	/^c0105ea8:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105ead	obj/kernel.asm	/^c0105ead:	68 57 01 00 00       	push   $0x157$/;"	l
c0105eb2	obj/kernel.asm	/^c0105eb2:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105eb7	obj/kernel.asm	/^c0105eb7:	e8 13 a6 ff ff       	call   c01004cf <__panic>$/;"	l
c0105ebc	obj/kernel.asm	/^c0105ebc:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0105ec3	obj/kernel.asm	/^c0105ec3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0105eca	obj/kernel.asm	/^c0105eca:	eb 19                	jmp    c0105ee5 <check_pgfault+0x11f>$/;"	l
c0105ecc	obj/kernel.asm	/^c0105ecc:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105ecf	obj/kernel.asm	/^c0105ecf:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105ed2	obj/kernel.asm	/^c0105ed2:	01 d0                	add    %edx,%eax$/;"	l
c0105ed4	obj/kernel.asm	/^c0105ed4:	89 c2                	mov    %eax,%edx$/;"	l
c0105ed6	obj/kernel.asm	/^c0105ed6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105ed9	obj/kernel.asm	/^c0105ed9:	88 02                	mov    %al,(%edx)$/;"	l
c0105edb	obj/kernel.asm	/^c0105edb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105ede	obj/kernel.asm	/^c0105ede:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c0105ee1	obj/kernel.asm	/^c0105ee1:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105ee5	obj/kernel.asm	/^c0105ee5:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c0105ee9	obj/kernel.asm	/^c0105ee9:	7e e1                	jle    c0105ecc <check_pgfault+0x106>$/;"	l
c0105eeb	obj/kernel.asm	/^c0105eeb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0105ef2	obj/kernel.asm	/^c0105ef2:	eb 15                	jmp    c0105f09 <check_pgfault+0x143>$/;"	l
c0105ef4	obj/kernel.asm	/^c0105ef4:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105ef7	obj/kernel.asm	/^c0105ef7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105efa	obj/kernel.asm	/^c0105efa:	01 d0                	add    %edx,%eax$/;"	l
c0105efc	obj/kernel.asm	/^c0105efc:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0105eff	obj/kernel.asm	/^c0105eff:	0f be c0             	movsbl %al,%eax$/;"	l
c0105f02	obj/kernel.asm	/^c0105f02:	29 45 f0             	sub    %eax,-0x10(%ebp)$/;"	l
c0105f05	obj/kernel.asm	/^c0105f05:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105f09	obj/kernel.asm	/^c0105f09:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c0105f0d	obj/kernel.asm	/^c0105f0d:	7e e5                	jle    c0105ef4 <check_pgfault+0x12e>$/;"	l
c0105f0f	obj/kernel.asm	/^c0105f0f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0105f13	obj/kernel.asm	/^c0105f13:	74 19                	je     c0105f2e <check_pgfault+0x168>$/;"	l
c0105f15	obj/kernel.asm	/^c0105f15:	68 7b 4b 11 c0       	push   $0xc0114b7b$/;"	l
c0105f1a	obj/kernel.asm	/^c0105f1a:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105f1f	obj/kernel.asm	/^c0105f1f:	68 61 01 00 00       	push   $0x161$/;"	l
c0105f24	obj/kernel.asm	/^c0105f24:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105f29	obj/kernel.asm	/^c0105f29:	e8 a1 a5 ff ff       	call   c01004cf <__panic>$/;"	l
c0105f2e	obj/kernel.asm	/^c0105f2e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105f31	obj/kernel.asm	/^c0105f31:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0105f34	obj/kernel.asm	/^c0105f34:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0105f37	obj/kernel.asm	/^c0105f37:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0105f3c	obj/kernel.asm	/^c0105f3c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105f3f	obj/kernel.asm	/^c0105f3f:	50                   	push   %eax$/;"	l
c0105f40	obj/kernel.asm	/^c0105f40:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0105f43	obj/kernel.asm	/^c0105f43:	e8 2d e6 ff ff       	call   c0104575 <page_remove>$/;"	l
c0105f48	obj/kernel.asm	/^c0105f48:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105f4b	obj/kernel.asm	/^c0105f4b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105f4e	obj/kernel.asm	/^c0105f4e:	8b 00                	mov    (%eax),%eax$/;"	l
c0105f50	obj/kernel.asm	/^c0105f50:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105f53	obj/kernel.asm	/^c0105f53:	50                   	push   %eax$/;"	l
c0105f54	obj/kernel.asm	/^c0105f54:	e8 01 f3 ff ff       	call   c010525a <pa2page>$/;"	l
c0105f59	obj/kernel.asm	/^c0105f59:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105f5c	obj/kernel.asm	/^c0105f5c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105f5f	obj/kernel.asm	/^c0105f5f:	6a 01                	push   $0x1$/;"	l
c0105f61	obj/kernel.asm	/^c0105f61:	50                   	push   %eax$/;"	l
c0105f62	obj/kernel.asm	/^c0105f62:	e8 46 da ff ff       	call   c01039ad <free_pages>$/;"	l
c0105f67	obj/kernel.asm	/^c0105f67:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105f6a	obj/kernel.asm	/^c0105f6a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105f6d	obj/kernel.asm	/^c0105f6d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0105f73	obj/kernel.asm	/^c0105f73:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105f76	obj/kernel.asm	/^c0105f76:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0105f7d	obj/kernel.asm	/^c0105f7d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105f80	obj/kernel.asm	/^c0105f80:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105f83	obj/kernel.asm	/^c0105f83:	e8 38 f6 ff ff       	call   c01055c0 <mm_destroy>$/;"	l
c0105f88	obj/kernel.asm	/^c0105f88:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105f8b	obj/kernel.asm	/^c0105f8b:	c7 05 1c 12 15 c0 00 	movl   $0x0,0xc015121c$/;"	l
c0105f92	obj/kernel.asm	/^c0105f92:	00 00 00 $/;"	l
c0105f95	obj/kernel.asm	/^c0105f95:	e8 47 da ff ff       	call   c01039e1 <nr_free_pages>$/;"	l
c0105f9a	obj/kernel.asm	/^c0105f9a:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0105f9d	obj/kernel.asm	/^c0105f9d:	74 19                	je     c0105fb8 <check_pgfault+0x1f2>$/;"	l
c0105f9f	obj/kernel.asm	/^c0105f9f:	68 84 4b 11 c0       	push   $0xc0114b84$/;"	l
c0105fa4	obj/kernel.asm	/^c0105fa4:	68 f3 48 11 c0       	push   $0xc01148f3$/;"	l
c0105fa9	obj/kernel.asm	/^c0105fa9:	68 6b 01 00 00       	push   $0x16b$/;"	l
c0105fae	obj/kernel.asm	/^c0105fae:	68 08 49 11 c0       	push   $0xc0114908$/;"	l
c0105fb3	obj/kernel.asm	/^c0105fb3:	e8 17 a5 ff ff       	call   c01004cf <__panic>$/;"	l
c0105fb8	obj/kernel.asm	/^c0105fb8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105fbb	obj/kernel.asm	/^c0105fbb:	68 ab 4b 11 c0       	push   $0xc0114bab$/;"	l
c0105fc0	obj/kernel.asm	/^c0105fc0:	e8 a5 a3 ff ff       	call   c010036a <cprintf>$/;"	l
c0105fc5	obj/kernel.asm	/^c0105fc5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105fc8	obj/kernel.asm	/^c0105fc8:	c9                   	leave  $/;"	l
c0105fc9	obj/kernel.asm	/^c0105fc9:	c3                   	ret    $/;"	l
c0105fca	obj/kernel.asm	/^c0105fca <do_pgfault>:$/;"	l
c0105fca	obj/kernel.asm	/^c0105fca:	55                   	push   %ebp$/;"	l
c0105fcb	obj/kernel.asm	/^c0105fcb:	89 e5                	mov    %esp,%ebp$/;"	l
c0105fcd	obj/kernel.asm	/^c0105fcd:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105fd0	obj/kernel.asm	/^c0105fd0:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0105fd7	obj/kernel.asm	/^c0105fd7:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0105fda	obj/kernel.asm	/^c0105fda:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105fdd	obj/kernel.asm	/^c0105fdd:	e8 91 f3 ff ff       	call   c0105373 <find_vma>$/;"	l
c0105fe2	obj/kernel.asm	/^c0105fe2:	83 c4 08             	add    $0x8,%esp$/;"	l
c0105fe5	obj/kernel.asm	/^c0105fe5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105fe8	obj/kernel.asm	/^c0105fe8:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c0105fed	obj/kernel.asm	/^c0105fed:	83 c0 01             	add    $0x1,%eax$/;"	l
c0105ff0	obj/kernel.asm	/^c0105ff0:	a3 6c e0 14 c0       	mov    %eax,0xc014e06c$/;"	l
c0105ff5	obj/kernel.asm	/^c0105ff5:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0105ff9	obj/kernel.asm	/^c0105ff9:	74 0b                	je     c0106006 <do_pgfault+0x3c>$/;"	l
c0105ffb	obj/kernel.asm	/^c0105ffb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105ffe	obj/kernel.asm	/^c0105ffe:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106001	obj/kernel.asm	/^c0106001:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0106004	obj/kernel.asm	/^c0106004:	76 18                	jbe    c010601e <do_pgfault+0x54>$/;"	l
c0106006	obj/kernel.asm	/^c0106006:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106009	obj/kernel.asm	/^c0106009:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010600c	obj/kernel.asm	/^c010600c:	68 c8 4b 11 c0       	push   $0xc0114bc8$/;"	l
c0106011	obj/kernel.asm	/^c0106011:	e8 54 a3 ff ff       	call   c010036a <cprintf>$/;"	l
c0106016	obj/kernel.asm	/^c0106016:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106019	obj/kernel.asm	/^c0106019:	e9 ce 01 00 00       	jmp    c01061ec <do_pgfault+0x222>$/;"	l
c010601e	obj/kernel.asm	/^c010601e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106021	obj/kernel.asm	/^c0106021:	83 e0 03             	and    $0x3,%eax$/;"	l
c0106024	obj/kernel.asm	/^c0106024:	85 c0                	test   %eax,%eax$/;"	l
c0106026	obj/kernel.asm	/^c0106026:	74 3e                	je     c0106066 <do_pgfault+0x9c>$/;"	l
c0106028	obj/kernel.asm	/^c0106028:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010602b	obj/kernel.asm	/^c010602b:	74 24                	je     c0106051 <do_pgfault+0x87>$/;"	l
c010602d	obj/kernel.asm	/^c010602d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106030	obj/kernel.asm	/^c0106030:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106033	obj/kernel.asm	/^c0106033:	83 e0 02             	and    $0x2,%eax$/;"	l
c0106036	obj/kernel.asm	/^c0106036:	85 c0                	test   %eax,%eax$/;"	l
c0106038	obj/kernel.asm	/^c0106038:	75 15                	jne    c010604f <do_pgfault+0x85>$/;"	l
c010603a	obj/kernel.asm	/^c010603a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010603d	obj/kernel.asm	/^c010603d:	68 f8 4b 11 c0       	push   $0xc0114bf8$/;"	l
c0106042	obj/kernel.asm	/^c0106042:	e8 23 a3 ff ff       	call   c010036a <cprintf>$/;"	l
c0106047	obj/kernel.asm	/^c0106047:	83 c4 10             	add    $0x10,%esp$/;"	l
c010604a	obj/kernel.asm	/^c010604a:	e9 9d 01 00 00       	jmp    c01061ec <do_pgfault+0x222>$/;"	l
c010604f	obj/kernel.asm	/^c010604f:	eb 37                	jmp    c0106088 <do_pgfault+0xbe>$/;"	l
c0106051	obj/kernel.asm	/^c0106051:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106054	obj/kernel.asm	/^c0106054:	68 58 4c 11 c0       	push   $0xc0114c58$/;"	l
c0106059	obj/kernel.asm	/^c0106059:	e8 0c a3 ff ff       	call   c010036a <cprintf>$/;"	l
c010605e	obj/kernel.asm	/^c010605e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106061	obj/kernel.asm	/^c0106061:	e9 86 01 00 00       	jmp    c01061ec <do_pgfault+0x222>$/;"	l
c0106066	obj/kernel.asm	/^c0106066:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106069	obj/kernel.asm	/^c0106069:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010606c	obj/kernel.asm	/^c010606c:	83 e0 05             	and    $0x5,%eax$/;"	l
c010606f	obj/kernel.asm	/^c010606f:	85 c0                	test   %eax,%eax$/;"	l
c0106071	obj/kernel.asm	/^c0106071:	75 15                	jne    c0106088 <do_pgfault+0xbe>$/;"	l
c0106073	obj/kernel.asm	/^c0106073:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106076	obj/kernel.asm	/^c0106076:	68 90 4c 11 c0       	push   $0xc0114c90$/;"	l
c010607b	obj/kernel.asm	/^c010607b:	e8 ea a2 ff ff       	call   c010036a <cprintf>$/;"	l
c0106080	obj/kernel.asm	/^c0106080:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106083	obj/kernel.asm	/^c0106083:	e9 64 01 00 00       	jmp    c01061ec <do_pgfault+0x222>$/;"	l
c0106088	obj/kernel.asm	/^c0106088:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%ebp)$/;"	l
c010608f	obj/kernel.asm	/^c010608f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106092	obj/kernel.asm	/^c0106092:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106095	obj/kernel.asm	/^c0106095:	83 e0 02             	and    $0x2,%eax$/;"	l
c0106098	obj/kernel.asm	/^c0106098:	85 c0                	test   %eax,%eax$/;"	l
c010609a	obj/kernel.asm	/^c010609a:	74 04                	je     c01060a0 <do_pgfault+0xd6>$/;"	l
c010609c	obj/kernel.asm	/^c010609c:	83 4d f0 02          	orl    $0x2,-0x10(%ebp)$/;"	l
c01060a0	obj/kernel.asm	/^c01060a0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01060a3	obj/kernel.asm	/^c01060a3:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01060a6	obj/kernel.asm	/^c01060a6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01060a9	obj/kernel.asm	/^c01060a9:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01060ae	obj/kernel.asm	/^c01060ae:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c01060b1	obj/kernel.asm	/^c01060b1:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c01060b8	obj/kernel.asm	/^c01060b8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c01060bf	obj/kernel.asm	/^c01060bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01060c2	obj/kernel.asm	/^c01060c2:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01060c5	obj/kernel.asm	/^c01060c5:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01060c8	obj/kernel.asm	/^c01060c8:	6a 01                	push   $0x1$/;"	l
c01060ca	obj/kernel.asm	/^c01060ca:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01060cd	obj/kernel.asm	/^c01060cd:	50                   	push   %eax$/;"	l
c01060ce	obj/kernel.asm	/^c01060ce:	e8 57 df ff ff       	call   c010402a <get_pte>$/;"	l
c01060d3	obj/kernel.asm	/^c01060d3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01060d6	obj/kernel.asm	/^c01060d6:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01060d9	obj/kernel.asm	/^c01060d9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01060dd	obj/kernel.asm	/^c01060dd:	75 15                	jne    c01060f4 <do_pgfault+0x12a>$/;"	l
c01060df	obj/kernel.asm	/^c01060df:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01060e2	obj/kernel.asm	/^c01060e2:	68 f3 4c 11 c0       	push   $0xc0114cf3$/;"	l
c01060e7	obj/kernel.asm	/^c01060e7:	e8 7e a2 ff ff       	call   c010036a <cprintf>$/;"	l
c01060ec	obj/kernel.asm	/^c01060ec:	83 c4 10             	add    $0x10,%esp$/;"	l
c01060ef	obj/kernel.asm	/^c01060ef:	e9 f8 00 00 00       	jmp    c01061ec <do_pgfault+0x222>$/;"	l
c01060f4	obj/kernel.asm	/^c01060f4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01060f7	obj/kernel.asm	/^c01060f7:	8b 00                	mov    (%eax),%eax$/;"	l
c01060f9	obj/kernel.asm	/^c01060f9:	85 c0                	test   %eax,%eax$/;"	l
c01060fb	obj/kernel.asm	/^c01060fb:	75 3b                	jne    c0106138 <do_pgfault+0x16e>$/;"	l
c01060fd	obj/kernel.asm	/^c01060fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106100	obj/kernel.asm	/^c0106100:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106103	obj/kernel.asm	/^c0106103:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106106	obj/kernel.asm	/^c0106106:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0106109	obj/kernel.asm	/^c0106109:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010610c	obj/kernel.asm	/^c010610c:	50                   	push   %eax$/;"	l
c010610d	obj/kernel.asm	/^c010610d:	e8 a3 e5 ff ff       	call   c01046b5 <pgdir_alloc_page>$/;"	l
c0106112	obj/kernel.asm	/^c0106112:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106115	obj/kernel.asm	/^c0106115:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0106118	obj/kernel.asm	/^c0106118:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c010611c	obj/kernel.asm	/^c010611c:	75 15                	jne    c0106133 <do_pgfault+0x169>$/;"	l
c010611e	obj/kernel.asm	/^c010611e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106121	obj/kernel.asm	/^c0106121:	68 02 4d 11 c0       	push   $0xc0114d02$/;"	l
c0106126	obj/kernel.asm	/^c0106126:	e8 3f a2 ff ff       	call   c010036a <cprintf>$/;"	l
c010612b	obj/kernel.asm	/^c010612b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010612e	obj/kernel.asm	/^c010612e:	e9 b9 00 00 00       	jmp    c01061ec <do_pgfault+0x222>$/;"	l
c0106133	obj/kernel.asm	/^c0106133:	e9 ad 00 00 00       	jmp    c01061e5 <do_pgfault+0x21b>$/;"	l
c0106138	obj/kernel.asm	/^c0106138:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010613b	obj/kernel.asm	/^c010613b:	8b 00                	mov    (%eax),%eax$/;"	l
c010613d	obj/kernel.asm	/^c010613d:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106140	obj/kernel.asm	/^c0106140:	85 c0                	test   %eax,%eax$/;"	l
c0106142	obj/kernel.asm	/^c0106142:	75 79                	jne    c01061bd <do_pgfault+0x1f3>$/;"	l
c0106144	obj/kernel.asm	/^c0106144:	a1 70 e0 14 c0       	mov    0xc014e070,%eax$/;"	l
c0106149	obj/kernel.asm	/^c0106149:	85 c0                	test   %eax,%eax$/;"	l
c010614b	obj/kernel.asm	/^c010614b:	74 58                	je     c01061a5 <do_pgfault+0x1db>$/;"	l
c010614d	obj/kernel.asm	/^c010614d:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0106154	obj/kernel.asm	/^c0106154:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106157	obj/kernel.asm	/^c0106157:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010615a	obj/kernel.asm	/^c010615a:	50                   	push   %eax$/;"	l
c010615b	obj/kernel.asm	/^c010615b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010615e	obj/kernel.asm	/^c010615e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106161	obj/kernel.asm	/^c0106161:	e8 3b 05 00 00       	call   c01066a1 <swap_in>$/;"	l
c0106166	obj/kernel.asm	/^c0106166:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106169	obj/kernel.asm	/^c0106169:	83 4d f0 01          	orl    $0x1,-0x10(%ebp)$/;"	l
c010616d	obj/kernel.asm	/^c010616d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106170	obj/kernel.asm	/^c0106170:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106173	obj/kernel.asm	/^c0106173:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c0106176	obj/kernel.asm	/^c0106176:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0106179	obj/kernel.asm	/^c0106179:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010617c	obj/kernel.asm	/^c010617c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010617f	obj/kernel.asm	/^c010617f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0106182	obj/kernel.asm	/^c0106182:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0106185	obj/kernel.asm	/^c0106185:	52                   	push   %edx$/;"	l
c0106186	obj/kernel.asm	/^c0106186:	50                   	push   %eax$/;"	l
c0106187	obj/kernel.asm	/^c0106187:	e8 21 e4 ff ff       	call   c01045ad <page_insert>$/;"	l
c010618c	obj/kernel.asm	/^c010618c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010618f	obj/kernel.asm	/^c010618f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106192	obj/kernel.asm	/^c0106192:	6a 01                	push   $0x1$/;"	l
c0106194	obj/kernel.asm	/^c0106194:	50                   	push   %eax$/;"	l
c0106195	obj/kernel.asm	/^c0106195:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0106198	obj/kernel.asm	/^c0106198:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010619b	obj/kernel.asm	/^c010619b:	e8 71 03 00 00       	call   c0106511 <swap_map_swappable>$/;"	l
c01061a0	obj/kernel.asm	/^c01061a0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01061a3	obj/kernel.asm	/^c01061a3:	eb 40                	jmp    c01061e5 <do_pgfault+0x21b>$/;"	l
c01061a5	obj/kernel.asm	/^c01061a5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01061a8	obj/kernel.asm	/^c01061a8:	8b 00                	mov    (%eax),%eax$/;"	l
c01061aa	obj/kernel.asm	/^c01061aa:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01061ad	obj/kernel.asm	/^c01061ad:	50                   	push   %eax$/;"	l
c01061ae	obj/kernel.asm	/^c01061ae:	68 18 4d 11 c0       	push   $0xc0114d18$/;"	l
c01061b3	obj/kernel.asm	/^c01061b3:	e8 b2 a1 ff ff       	call   c010036a <cprintf>$/;"	l
c01061b8	obj/kernel.asm	/^c01061b8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01061bb	obj/kernel.asm	/^c01061bb:	eb 2f                	jmp    c01061ec <do_pgfault+0x222>$/;"	l
c01061bd	obj/kernel.asm	/^c01061bd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01061c0	obj/kernel.asm	/^c01061c0:	8b 00                	mov    (%eax),%eax$/;"	l
c01061c2	obj/kernel.asm	/^c01061c2:	83 e0 04             	and    $0x4,%eax$/;"	l
c01061c5	obj/kernel.asm	/^c01061c5:	85 c0                	test   %eax,%eax$/;"	l
c01061c7	obj/kernel.asm	/^c01061c7:	75 1c                	jne    c01061e5 <do_pgfault+0x21b>$/;"	l
c01061c9	obj/kernel.asm	/^c01061c9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01061cc	obj/kernel.asm	/^c01061cc:	83 e0 04             	and    $0x4,%eax$/;"	l
c01061cf	obj/kernel.asm	/^c01061cf:	85 c0                	test   %eax,%eax$/;"	l
c01061d1	obj/kernel.asm	/^c01061d1:	74 12                	je     c01061e5 <do_pgfault+0x21b>$/;"	l
c01061d3	obj/kernel.asm	/^c01061d3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01061d6	obj/kernel.asm	/^c01061d6:	68 40 4d 11 c0       	push   $0xc0114d40$/;"	l
c01061db	obj/kernel.asm	/^c01061db:	e8 8a a1 ff ff       	call   c010036a <cprintf>$/;"	l
c01061e0	obj/kernel.asm	/^c01061e0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01061e3	obj/kernel.asm	/^c01061e3:	eb 07                	jmp    c01061ec <do_pgfault+0x222>$/;"	l
c01061e5	obj/kernel.asm	/^c01061e5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01061ec	obj/kernel.asm	/^c01061ec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01061ef	obj/kernel.asm	/^c01061ef:	c9                   	leave  $/;"	l
c01061f0	obj/kernel.asm	/^c01061f0:	c3                   	ret    $/;"	l
c01061f1	obj/kernel.asm	/^c01061f1 <user_mem_check>:$/;"	l
c01061f1	obj/kernel.asm	/^c01061f1:	55                   	push   %ebp$/;"	l
c01061f2	obj/kernel.asm	/^c01061f2:	89 e5                	mov    %esp,%ebp$/;"	l
c01061f4	obj/kernel.asm	/^c01061f4:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01061f7	obj/kernel.asm	/^c01061f7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01061fb	obj/kernel.asm	/^c01061fb:	0f 84 dc 00 00 00    	je     c01062dd <user_mem_check+0xec>$/;"	l
c0106201	obj/kernel.asm	/^c0106201:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0106208	obj/kernel.asm	/^c0106208:	76 1c                	jbe    c0106226 <user_mem_check+0x35>$/;"	l
c010620a	obj/kernel.asm	/^c010620a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010620d	obj/kernel.asm	/^c010620d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106210	obj/kernel.asm	/^c0106210:	01 d0                	add    %edx,%eax$/;"	l
c0106212	obj/kernel.asm	/^c0106212:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106215	obj/kernel.asm	/^c0106215:	76 0f                	jbe    c0106226 <user_mem_check+0x35>$/;"	l
c0106217	obj/kernel.asm	/^c0106217:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010621a	obj/kernel.asm	/^c010621a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010621d	obj/kernel.asm	/^c010621d:	01 d0                	add    %edx,%eax$/;"	l
c010621f	obj/kernel.asm	/^c010621f:	3d 00 00 00 b0       	cmp    $0xb0000000,%eax$/;"	l
c0106224	obj/kernel.asm	/^c0106224:	76 0a                	jbe    c0106230 <user_mem_check+0x3f>$/;"	l
c0106226	obj/kernel.asm	/^c0106226:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010622b	obj/kernel.asm	/^c010622b:	e9 df 00 00 00       	jmp    c010630f <user_mem_check+0x11e>$/;"	l
c0106230	obj/kernel.asm	/^c0106230:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106233	obj/kernel.asm	/^c0106233:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0106236	obj/kernel.asm	/^c0106236:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106239	obj/kernel.asm	/^c0106239:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010623c	obj/kernel.asm	/^c010623c:	01 d0                	add    %edx,%eax$/;"	l
c010623e	obj/kernel.asm	/^c010623e:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0106241	obj/kernel.asm	/^c0106241:	e9 84 00 00 00       	jmp    c01062ca <user_mem_check+0xd9>$/;"	l
c0106246	obj/kernel.asm	/^c0106246:	ff 75 fc             	pushl  -0x4(%ebp)$/;"	l
c0106249	obj/kernel.asm	/^c0106249:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010624c	obj/kernel.asm	/^c010624c:	e8 22 f1 ff ff       	call   c0105373 <find_vma>$/;"	l
c0106251	obj/kernel.asm	/^c0106251:	83 c4 08             	add    $0x8,%esp$/;"	l
c0106254	obj/kernel.asm	/^c0106254:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106257	obj/kernel.asm	/^c0106257:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010625b	obj/kernel.asm	/^c010625b:	74 0b                	je     c0106268 <user_mem_check+0x77>$/;"	l
c010625d	obj/kernel.asm	/^c010625d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106260	obj/kernel.asm	/^c0106260:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106263	obj/kernel.asm	/^c0106263:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0106266	obj/kernel.asm	/^c0106266:	76 0a                	jbe    c0106272 <user_mem_check+0x81>$/;"	l
c0106268	obj/kernel.asm	/^c0106268:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010626d	obj/kernel.asm	/^c010626d:	e9 9d 00 00 00       	jmp    c010630f <user_mem_check+0x11e>$/;"	l
c0106272	obj/kernel.asm	/^c0106272:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106275	obj/kernel.asm	/^c0106275:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106278	obj/kernel.asm	/^c0106278:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010627c	obj/kernel.asm	/^c010627c:	74 07                	je     c0106285 <user_mem_check+0x94>$/;"	l
c010627e	obj/kernel.asm	/^c010627e:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
c0106283	obj/kernel.asm	/^c0106283:	eb 05                	jmp    c010628a <user_mem_check+0x99>$/;"	l
c0106285	obj/kernel.asm	/^c0106285:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c010628a	obj/kernel.asm	/^c010628a:	21 d0                	and    %edx,%eax$/;"	l
c010628c	obj/kernel.asm	/^c010628c:	85 c0                	test   %eax,%eax$/;"	l
c010628e	obj/kernel.asm	/^c010628e:	75 07                	jne    c0106297 <user_mem_check+0xa6>$/;"	l
c0106290	obj/kernel.asm	/^c0106290:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106295	obj/kernel.asm	/^c0106295:	eb 78                	jmp    c010630f <user_mem_check+0x11e>$/;"	l
c0106297	obj/kernel.asm	/^c0106297:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010629b	obj/kernel.asm	/^c010629b:	74 24                	je     c01062c1 <user_mem_check+0xd0>$/;"	l
c010629d	obj/kernel.asm	/^c010629d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01062a0	obj/kernel.asm	/^c01062a0:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01062a3	obj/kernel.asm	/^c01062a3:	83 e0 08             	and    $0x8,%eax$/;"	l
c01062a6	obj/kernel.asm	/^c01062a6:	85 c0                	test   %eax,%eax$/;"	l
c01062a8	obj/kernel.asm	/^c01062a8:	74 17                	je     c01062c1 <user_mem_check+0xd0>$/;"	l
c01062aa	obj/kernel.asm	/^c01062aa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01062ad	obj/kernel.asm	/^c01062ad:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01062b0	obj/kernel.asm	/^c01062b0:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c01062b5	obj/kernel.asm	/^c01062b5:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01062b8	obj/kernel.asm	/^c01062b8:	76 07                	jbe    c01062c1 <user_mem_check+0xd0>$/;"	l
c01062ba	obj/kernel.asm	/^c01062ba:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01062bf	obj/kernel.asm	/^c01062bf:	eb 4e                	jmp    c010630f <user_mem_check+0x11e>$/;"	l
c01062c1	obj/kernel.asm	/^c01062c1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01062c4	obj/kernel.asm	/^c01062c4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01062c7	obj/kernel.asm	/^c01062c7:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01062ca	obj/kernel.asm	/^c01062ca:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01062cd	obj/kernel.asm	/^c01062cd:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c01062d0	obj/kernel.asm	/^c01062d0:	0f 82 70 ff ff ff    	jb     c0106246 <user_mem_check+0x55>$/;"	l
c01062d6	obj/kernel.asm	/^c01062d6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01062db	obj/kernel.asm	/^c01062db:	eb 32                	jmp    c010630f <user_mem_check+0x11e>$/;"	l
c01062dd	obj/kernel.asm	/^c01062dd:	81 7d 0c ff ff ff bf 	cmpl   $0xbfffffff,0xc(%ebp)$/;"	l
c01062e4	obj/kernel.asm	/^c01062e4:	76 23                	jbe    c0106309 <user_mem_check+0x118>$/;"	l
c01062e6	obj/kernel.asm	/^c01062e6:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01062e9	obj/kernel.asm	/^c01062e9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01062ec	obj/kernel.asm	/^c01062ec:	01 d0                	add    %edx,%eax$/;"	l
c01062ee	obj/kernel.asm	/^c01062ee:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01062f1	obj/kernel.asm	/^c01062f1:	76 16                	jbe    c0106309 <user_mem_check+0x118>$/;"	l
c01062f3	obj/kernel.asm	/^c01062f3:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01062f6	obj/kernel.asm	/^c01062f6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01062f9	obj/kernel.asm	/^c01062f9:	01 d0                	add    %edx,%eax$/;"	l
c01062fb	obj/kernel.asm	/^c01062fb:	3d 00 00 00 f8       	cmp    $0xf8000000,%eax$/;"	l
c0106300	obj/kernel.asm	/^c0106300:	77 07                	ja     c0106309 <user_mem_check+0x118>$/;"	l
c0106302	obj/kernel.asm	/^c0106302:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0106307	obj/kernel.asm	/^c0106307:	eb 05                	jmp    c010630e <user_mem_check+0x11d>$/;"	l
c0106309	obj/kernel.asm	/^c0106309:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010630e	obj/kernel.asm	/^c010630e:	90                   	nop$/;"	l
c010630f	obj/kernel.asm	/^c010630f:	c9                   	leave  $/;"	l
c0106310	obj/kernel.asm	/^c0106310:	c3                   	ret    $/;"	l
c0106311	obj/kernel.asm	/^c0106311 <copy_string>:$/;"	l
c0106311	obj/kernel.asm	/^c0106311:	55                   	push   %ebp$/;"	l
c0106312	obj/kernel.asm	/^c0106312:	89 e5                	mov    %esp,%ebp$/;"	l
c0106314	obj/kernel.asm	/^c0106314:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106317	obj/kernel.asm	/^c0106317:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010631a	obj/kernel.asm	/^c010631a:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c010631f	obj/kernel.asm	/^c010631f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106322	obj/kernel.asm	/^c0106322:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106325	obj/kernel.asm	/^c0106325:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010632a	obj/kernel.asm	/^c010632a:	89 c2                	mov    %eax,%edx$/;"	l
c010632c	obj/kernel.asm	/^c010632c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010632f	obj/kernel.asm	/^c010632f:	29 c2                	sub    %eax,%edx$/;"	l
c0106331	obj/kernel.asm	/^c0106331:	89 d0                	mov    %edx,%eax$/;"	l
c0106333	obj/kernel.asm	/^c0106333:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106336	obj/kernel.asm	/^c0106336:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106339	obj/kernel.asm	/^c0106339:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c010633c	obj/kernel.asm	/^c010633c:	76 06                	jbe    c0106344 <copy_string+0x33>$/;"	l
c010633e	obj/kernel.asm	/^c010633e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0106341	obj/kernel.asm	/^c0106341:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106344	obj/kernel.asm	/^c0106344:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106347	obj/kernel.asm	/^c0106347:	6a 00                	push   $0x0$/;"	l
c0106349	obj/kernel.asm	/^c0106349:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010634c	obj/kernel.asm	/^c010634c:	50                   	push   %eax$/;"	l
c010634d	obj/kernel.asm	/^c010634d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106350	obj/kernel.asm	/^c0106350:	e8 9c fe ff ff       	call   c01061f1 <user_mem_check>$/;"	l
c0106355	obj/kernel.asm	/^c0106355:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106358	obj/kernel.asm	/^c0106358:	85 c0                	test   %eax,%eax$/;"	l
c010635a	obj/kernel.asm	/^c010635a:	75 07                	jne    c0106363 <copy_string+0x52>$/;"	l
c010635c	obj/kernel.asm	/^c010635c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106361	obj/kernel.asm	/^c0106361:	eb 7c                	jmp    c01063df <copy_string+0xce>$/;"	l
c0106363	obj/kernel.asm	/^c0106363:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106366	obj/kernel.asm	/^c0106366:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106369	obj/kernel.asm	/^c0106369:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010636c	obj/kernel.asm	/^c010636c:	e8 49 c9 00 00       	call   c0112cba <strnlen>$/;"	l
c0106371	obj/kernel.asm	/^c0106371:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106374	obj/kernel.asm	/^c0106374:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106377	obj/kernel.asm	/^c0106377:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010637a	obj/kernel.asm	/^c010637a:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010637d	obj/kernel.asm	/^c010637d:	73 1f                	jae    c010639e <copy_string+0x8d>$/;"	l
c010637f	obj/kernel.asm	/^c010637f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106382	obj/kernel.asm	/^c0106382:	83 c0 01             	add    $0x1,%eax$/;"	l
c0106385	obj/kernel.asm	/^c0106385:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106388	obj/kernel.asm	/^c0106388:	50                   	push   %eax$/;"	l
c0106389	obj/kernel.asm	/^c0106389:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010638c	obj/kernel.asm	/^c010638c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010638f	obj/kernel.asm	/^c010638f:	e8 3b cd 00 00       	call   c01130cf <memcpy>$/;"	l
c0106394	obj/kernel.asm	/^c0106394:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106397	obj/kernel.asm	/^c0106397:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010639c	obj/kernel.asm	/^c010639c:	eb 41                	jmp    c01063df <copy_string+0xce>$/;"	l
c010639e	obj/kernel.asm	/^c010639e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01063a1	obj/kernel.asm	/^c01063a1:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c01063a4	obj/kernel.asm	/^c01063a4:	75 07                	jne    c01063ad <copy_string+0x9c>$/;"	l
c01063a6	obj/kernel.asm	/^c01063a6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01063ab	obj/kernel.asm	/^c01063ab:	eb 32                	jmp    c01063df <copy_string+0xce>$/;"	l
c01063ad	obj/kernel.asm	/^c01063ad:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01063b0	obj/kernel.asm	/^c01063b0:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01063b3	obj/kernel.asm	/^c01063b3:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01063b6	obj/kernel.asm	/^c01063b6:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01063b9	obj/kernel.asm	/^c01063b9:	e8 11 cd 00 00       	call   c01130cf <memcpy>$/;"	l
c01063be	obj/kernel.asm	/^c01063be:	83 c4 10             	add    $0x10,%esp$/;"	l
c01063c1	obj/kernel.asm	/^c01063c1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01063c4	obj/kernel.asm	/^c01063c4:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c01063c7	obj/kernel.asm	/^c01063c7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01063ca	obj/kernel.asm	/^c01063ca:	01 45 10             	add    %eax,0x10(%ebp)$/;"	l
c01063cd	obj/kernel.asm	/^c01063cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01063d0	obj/kernel.asm	/^c01063d0:	29 45 14             	sub    %eax,0x14(%ebp)$/;"	l
c01063d3	obj/kernel.asm	/^c01063d3:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)$/;"	l
c01063da	obj/kernel.asm	/^c01063da:	e9 57 ff ff ff       	jmp    c0106336 <copy_string+0x25>$/;"	l
c01063df	obj/kernel.asm	/^c01063df:	c9                   	leave  $/;"	l
c01063e0	obj/kernel.asm	/^c01063e0:	c3                   	ret    $/;"	l
c01063e1	obj/kernel.asm	/^c01063e1 <pa2page>:$/;"	l
c01063e1	obj/kernel.asm	/^c01063e1:	55                   	push   %ebp$/;"	l
c01063e2	obj/kernel.asm	/^c01063e2:	89 e5                	mov    %esp,%ebp$/;"	l
c01063e4	obj/kernel.asm	/^c01063e4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01063e7	obj/kernel.asm	/^c01063e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01063ea	obj/kernel.asm	/^c01063ea:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01063ed	obj/kernel.asm	/^c01063ed:	89 c2                	mov    %eax,%edx$/;"	l
c01063ef	obj/kernel.asm	/^c01063ef:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c01063f4	obj/kernel.asm	/^c01063f4:	39 c2                	cmp    %eax,%edx$/;"	l
c01063f6	obj/kernel.asm	/^c01063f6:	72 14                	jb     c010640c <pa2page+0x2b>$/;"	l
c01063f8	obj/kernel.asm	/^c01063f8:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01063fb	obj/kernel.asm	/^c01063fb:	68 94 4d 11 c0       	push   $0xc0114d94$/;"	l
c0106400	obj/kernel.asm	/^c0106400:	6a 5e                	push   $0x5e$/;"	l
c0106402	obj/kernel.asm	/^c0106402:	68 b3 4d 11 c0       	push   $0xc0114db3$/;"	l
c0106407	obj/kernel.asm	/^c0106407:	e8 c3 a0 ff ff       	call   c01004cf <__panic>$/;"	l
c010640c	obj/kernel.asm	/^c010640c:	a1 18 12 15 c0       	mov    0xc0151218,%eax$/;"	l
c0106411	obj/kernel.asm	/^c0106411:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106414	obj/kernel.asm	/^c0106414:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0106417	obj/kernel.asm	/^c0106417:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c010641a	obj/kernel.asm	/^c010641a:	01 d0                	add    %edx,%eax$/;"	l
c010641c	obj/kernel.asm	/^c010641c:	c9                   	leave  $/;"	l
c010641d	obj/kernel.asm	/^c010641d:	c3                   	ret    $/;"	l
c010641e	obj/kernel.asm	/^c010641e <pte2page>:$/;"	l
c010641e	obj/kernel.asm	/^c010641e:	55                   	push   %ebp$/;"	l
c010641f	obj/kernel.asm	/^c010641f:	89 e5                	mov    %esp,%ebp$/;"	l
c0106421	obj/kernel.asm	/^c0106421:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106424	obj/kernel.asm	/^c0106424:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106427	obj/kernel.asm	/^c0106427:	83 e0 01             	and    $0x1,%eax$/;"	l
c010642a	obj/kernel.asm	/^c010642a:	85 c0                	test   %eax,%eax$/;"	l
c010642c	obj/kernel.asm	/^c010642c:	75 14                	jne    c0106442 <pte2page+0x24>$/;"	l
c010642e	obj/kernel.asm	/^c010642e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106431	obj/kernel.asm	/^c0106431:	68 c4 4d 11 c0       	push   $0xc0114dc4$/;"	l
c0106436	obj/kernel.asm	/^c0106436:	6a 70                	push   $0x70$/;"	l
c0106438	obj/kernel.asm	/^c0106438:	68 b3 4d 11 c0       	push   $0xc0114db3$/;"	l
c010643d	obj/kernel.asm	/^c010643d:	e8 8d a0 ff ff       	call   c01004cf <__panic>$/;"	l
c0106442	obj/kernel.asm	/^c0106442:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106445	obj/kernel.asm	/^c0106445:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010644a	obj/kernel.asm	/^c010644a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010644d	obj/kernel.asm	/^c010644d:	50                   	push   %eax$/;"	l
c010644e	obj/kernel.asm	/^c010644e:	e8 8e ff ff ff       	call   c01063e1 <pa2page>$/;"	l
c0106453	obj/kernel.asm	/^c0106453:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106456	obj/kernel.asm	/^c0106456:	c9                   	leave  $/;"	l
c0106457	obj/kernel.asm	/^c0106457:	c3                   	ret    $/;"	l
c0106458	obj/kernel.asm	/^c0106458 <swap_init>:$/;"	l
c0106458	obj/kernel.asm	/^c0106458:	55                   	push   %ebp$/;"	l
c0106459	obj/kernel.asm	/^c0106459:	89 e5                	mov    %esp,%ebp$/;"	l
c010645b	obj/kernel.asm	/^c010645b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010645e	obj/kernel.asm	/^c010645e:	e8 9d 76 00 00       	call   c010db00 <swapfs_init>$/;"	l
c0106463	obj/kernel.asm	/^c0106463:	a1 bc 12 15 c0       	mov    0xc01512bc,%eax$/;"	l
c0106468	obj/kernel.asm	/^c0106468:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
c010646d	obj/kernel.asm	/^c010646d:	76 0c                	jbe    c010647b <swap_init+0x23>$/;"	l
c010646f	obj/kernel.asm	/^c010646f:	a1 bc 12 15 c0       	mov    0xc01512bc,%eax$/;"	l
c0106474	obj/kernel.asm	/^c0106474:	3d ff ff ff 00       	cmp    $0xffffff,%eax$/;"	l
c0106479	obj/kernel.asm	/^c0106479:	76 17                	jbe    c0106492 <swap_init+0x3a>$/;"	l
c010647b	obj/kernel.asm	/^c010647b:	a1 bc 12 15 c0       	mov    0xc01512bc,%eax$/;"	l
c0106480	obj/kernel.asm	/^c0106480:	50                   	push   %eax$/;"	l
c0106481	obj/kernel.asm	/^c0106481:	68 e5 4d 11 c0       	push   $0xc0114de5$/;"	l
c0106486	obj/kernel.asm	/^c0106486:	6a 27                	push   $0x27$/;"	l
c0106488	obj/kernel.asm	/^c0106488:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c010648d	obj/kernel.asm	/^c010648d:	e8 3d a0 ff ff       	call   c01004cf <__panic>$/;"	l
c0106492	obj/kernel.asm	/^c0106492:	c7 05 78 e0 14 c0 c0 	movl   $0xc014cac0,0xc014e078$/;"	l
c0106499	obj/kernel.asm	/^c0106499:	ca 14 c0 $/;"	l
c010649c	obj/kernel.asm	/^c010649c:	a1 78 e0 14 c0       	mov    0xc014e078,%eax$/;"	l
c01064a1	obj/kernel.asm	/^c01064a1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01064a4	obj/kernel.asm	/^c01064a4:	ff d0                	call   *%eax$/;"	l
c01064a6	obj/kernel.asm	/^c01064a6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01064a9	obj/kernel.asm	/^c01064a9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01064ad	obj/kernel.asm	/^c01064ad:	75 27                	jne    c01064d6 <swap_init+0x7e>$/;"	l
c01064af	obj/kernel.asm	/^c01064af:	c7 05 70 e0 14 c0 01 	movl   $0x1,0xc014e070$/;"	l
c01064b6	obj/kernel.asm	/^c01064b6:	00 00 00 $/;"	l
c01064b9	obj/kernel.asm	/^c01064b9:	a1 78 e0 14 c0       	mov    0xc014e078,%eax$/;"	l
c01064be	obj/kernel.asm	/^c01064be:	8b 00                	mov    (%eax),%eax$/;"	l
c01064c0	obj/kernel.asm	/^c01064c0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01064c3	obj/kernel.asm	/^c01064c3:	50                   	push   %eax$/;"	l
c01064c4	obj/kernel.asm	/^c01064c4:	68 0f 4e 11 c0       	push   $0xc0114e0f$/;"	l
c01064c9	obj/kernel.asm	/^c01064c9:	e8 9c 9e ff ff       	call   c010036a <cprintf>$/;"	l
c01064ce	obj/kernel.asm	/^c01064ce:	83 c4 10             	add    $0x10,%esp$/;"	l
c01064d1	obj/kernel.asm	/^c01064d1:	e8 f6 03 00 00       	call   c01068cc <check_swap>$/;"	l
c01064d6	obj/kernel.asm	/^c01064d6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01064d9	obj/kernel.asm	/^c01064d9:	c9                   	leave  $/;"	l
c01064da	obj/kernel.asm	/^c01064da:	c3                   	ret    $/;"	l
c01064db	obj/kernel.asm	/^c01064db <swap_init_mm>:$/;"	l
c01064db	obj/kernel.asm	/^c01064db:	55                   	push   %ebp$/;"	l
c01064dc	obj/kernel.asm	/^c01064dc:	89 e5                	mov    %esp,%ebp$/;"	l
c01064de	obj/kernel.asm	/^c01064de:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01064e1	obj/kernel.asm	/^c01064e1:	a1 78 e0 14 c0       	mov    0xc014e078,%eax$/;"	l
c01064e6	obj/kernel.asm	/^c01064e6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01064e9	obj/kernel.asm	/^c01064e9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01064ec	obj/kernel.asm	/^c01064ec:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01064ef	obj/kernel.asm	/^c01064ef:	ff d0                	call   *%eax$/;"	l
c01064f1	obj/kernel.asm	/^c01064f1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01064f4	obj/kernel.asm	/^c01064f4:	c9                   	leave  $/;"	l
c01064f5	obj/kernel.asm	/^c01064f5:	c3                   	ret    $/;"	l
c01064f6	obj/kernel.asm	/^c01064f6 <swap_tick_event>:$/;"	l
c01064f6	obj/kernel.asm	/^c01064f6:	55                   	push   %ebp$/;"	l
c01064f7	obj/kernel.asm	/^c01064f7:	89 e5                	mov    %esp,%ebp$/;"	l
c01064f9	obj/kernel.asm	/^c01064f9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01064fc	obj/kernel.asm	/^c01064fc:	a1 78 e0 14 c0       	mov    0xc014e078,%eax$/;"	l
c0106501	obj/kernel.asm	/^c0106501:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106504	obj/kernel.asm	/^c0106504:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106507	obj/kernel.asm	/^c0106507:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010650a	obj/kernel.asm	/^c010650a:	ff d0                	call   *%eax$/;"	l
c010650c	obj/kernel.asm	/^c010650c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010650f	obj/kernel.asm	/^c010650f:	c9                   	leave  $/;"	l
c0106510	obj/kernel.asm	/^c0106510:	c3                   	ret    $/;"	l
c0106511	obj/kernel.asm	/^c0106511 <swap_map_swappable>:$/;"	l
c0106511	obj/kernel.asm	/^c0106511:	55                   	push   %ebp$/;"	l
c0106512	obj/kernel.asm	/^c0106512:	89 e5                	mov    %esp,%ebp$/;"	l
c0106514	obj/kernel.asm	/^c0106514:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106517	obj/kernel.asm	/^c0106517:	a1 78 e0 14 c0       	mov    0xc014e078,%eax$/;"	l
c010651c	obj/kernel.asm	/^c010651c:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010651f	obj/kernel.asm	/^c010651f:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0106522	obj/kernel.asm	/^c0106522:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0106525	obj/kernel.asm	/^c0106525:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0106528	obj/kernel.asm	/^c0106528:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010652b	obj/kernel.asm	/^c010652b:	ff d0                	call   *%eax$/;"	l
c010652d	obj/kernel.asm	/^c010652d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106530	obj/kernel.asm	/^c0106530:	c9                   	leave  $/;"	l
c0106531	obj/kernel.asm	/^c0106531:	c3                   	ret    $/;"	l
c0106532	obj/kernel.asm	/^c0106532 <swap_set_unswappable>:$/;"	l
c0106532	obj/kernel.asm	/^c0106532:	55                   	push   %ebp$/;"	l
c0106533	obj/kernel.asm	/^c0106533:	89 e5                	mov    %esp,%ebp$/;"	l
c0106535	obj/kernel.asm	/^c0106535:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106538	obj/kernel.asm	/^c0106538:	a1 78 e0 14 c0       	mov    0xc014e078,%eax$/;"	l
c010653d	obj/kernel.asm	/^c010653d:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0106540	obj/kernel.asm	/^c0106540:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106543	obj/kernel.asm	/^c0106543:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0106546	obj/kernel.asm	/^c0106546:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106549	obj/kernel.asm	/^c0106549:	ff d0                	call   *%eax$/;"	l
c010654b	obj/kernel.asm	/^c010654b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010654e	obj/kernel.asm	/^c010654e:	c9                   	leave  $/;"	l
c010654f	obj/kernel.asm	/^c010654f:	c3                   	ret    $/;"	l
c0106550	obj/kernel.asm	/^c0106550 <swap_out>:$/;"	l
c0106550	obj/kernel.asm	/^c0106550:	55                   	push   %ebp$/;"	l
c0106551	obj/kernel.asm	/^c0106551:	89 e5                	mov    %esp,%ebp$/;"	l
c0106553	obj/kernel.asm	/^c0106553:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0106556	obj/kernel.asm	/^c0106556:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010655d	obj/kernel.asm	/^c010655d:	e9 2e 01 00 00       	jmp    c0106690 <swap_out+0x140>$/;"	l
c0106562	obj/kernel.asm	/^c0106562:	a1 78 e0 14 c0       	mov    0xc014e078,%eax$/;"	l
c0106567	obj/kernel.asm	/^c0106567:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010656a	obj/kernel.asm	/^c010656a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010656d	obj/kernel.asm	/^c010656d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0106570	obj/kernel.asm	/^c0106570:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c0106573	obj/kernel.asm	/^c0106573:	52                   	push   %edx$/;"	l
c0106574	obj/kernel.asm	/^c0106574:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106577	obj/kernel.asm	/^c0106577:	ff d0                	call   *%eax$/;"	l
c0106579	obj/kernel.asm	/^c0106579:	83 c4 10             	add    $0x10,%esp$/;"	l
c010657c	obj/kernel.asm	/^c010657c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010657f	obj/kernel.asm	/^c010657f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0106583	obj/kernel.asm	/^c0106583:	74 18                	je     c010659d <swap_out+0x4d>$/;"	l
c0106585	obj/kernel.asm	/^c0106585:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106588	obj/kernel.asm	/^c0106588:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010658b	obj/kernel.asm	/^c010658b:	68 24 4e 11 c0       	push   $0xc0114e24$/;"	l
c0106590	obj/kernel.asm	/^c0106590:	e8 d5 9d ff ff       	call   c010036a <cprintf>$/;"	l
c0106595	obj/kernel.asm	/^c0106595:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106598	obj/kernel.asm	/^c0106598:	e9 ff 00 00 00       	jmp    c010669c <swap_out+0x14c>$/;"	l
c010659d	obj/kernel.asm	/^c010659d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01065a0	obj/kernel.asm	/^c01065a0:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01065a3	obj/kernel.asm	/^c01065a3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01065a6	obj/kernel.asm	/^c01065a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01065a9	obj/kernel.asm	/^c01065a9:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01065ac	obj/kernel.asm	/^c01065ac:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01065af	obj/kernel.asm	/^c01065af:	6a 00                	push   $0x0$/;"	l
c01065b1	obj/kernel.asm	/^c01065b1:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01065b4	obj/kernel.asm	/^c01065b4:	50                   	push   %eax$/;"	l
c01065b5	obj/kernel.asm	/^c01065b5:	e8 70 da ff ff       	call   c010402a <get_pte>$/;"	l
c01065ba	obj/kernel.asm	/^c01065ba:	83 c4 10             	add    $0x10,%esp$/;"	l
c01065bd	obj/kernel.asm	/^c01065bd:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01065c0	obj/kernel.asm	/^c01065c0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01065c3	obj/kernel.asm	/^c01065c3:	8b 00                	mov    (%eax),%eax$/;"	l
c01065c5	obj/kernel.asm	/^c01065c5:	83 e0 01             	and    $0x1,%eax$/;"	l
c01065c8	obj/kernel.asm	/^c01065c8:	85 c0                	test   %eax,%eax$/;"	l
c01065ca	obj/kernel.asm	/^c01065ca:	75 16                	jne    c01065e2 <swap_out+0x92>$/;"	l
c01065cc	obj/kernel.asm	/^c01065cc:	68 51 4e 11 c0       	push   $0xc0114e51$/;"	l
c01065d1	obj/kernel.asm	/^c01065d1:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c01065d6	obj/kernel.asm	/^c01065d6:	6a 67                	push   $0x67$/;"	l
c01065d8	obj/kernel.asm	/^c01065d8:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c01065dd	obj/kernel.asm	/^c01065dd:	e8 ed 9e ff ff       	call   c01004cf <__panic>$/;"	l
c01065e2	obj/kernel.asm	/^c01065e2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01065e5	obj/kernel.asm	/^c01065e5:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01065e8	obj/kernel.asm	/^c01065e8:	8b 52 1c             	mov    0x1c(%edx),%edx$/;"	l
c01065eb	obj/kernel.asm	/^c01065eb:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c01065ee	obj/kernel.asm	/^c01065ee:	83 c2 01             	add    $0x1,%edx$/;"	l
c01065f1	obj/kernel.asm	/^c01065f1:	c1 e2 08             	shl    $0x8,%edx$/;"	l
c01065f4	obj/kernel.asm	/^c01065f4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01065f7	obj/kernel.asm	/^c01065f7:	50                   	push   %eax$/;"	l
c01065f8	obj/kernel.asm	/^c01065f8:	52                   	push   %edx$/;"	l
c01065f9	obj/kernel.asm	/^c01065f9:	e8 9d 75 00 00       	call   c010db9b <swapfs_write>$/;"	l
c01065fe	obj/kernel.asm	/^c01065fe:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106601	obj/kernel.asm	/^c0106601:	85 c0                	test   %eax,%eax$/;"	l
c0106603	obj/kernel.asm	/^c0106603:	74 2b                	je     c0106630 <swap_out+0xe0>$/;"	l
c0106605	obj/kernel.asm	/^c0106605:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106608	obj/kernel.asm	/^c0106608:	68 7b 4e 11 c0       	push   $0xc0114e7b$/;"	l
c010660d	obj/kernel.asm	/^c010660d:	e8 58 9d ff ff       	call   c010036a <cprintf>$/;"	l
c0106612	obj/kernel.asm	/^c0106612:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106615	obj/kernel.asm	/^c0106615:	a1 78 e0 14 c0       	mov    0xc014e078,%eax$/;"	l
c010661a	obj/kernel.asm	/^c010661a:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010661d	obj/kernel.asm	/^c010661d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0106620	obj/kernel.asm	/^c0106620:	6a 00                	push   $0x0$/;"	l
c0106622	obj/kernel.asm	/^c0106622:	52                   	push   %edx$/;"	l
c0106623	obj/kernel.asm	/^c0106623:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0106626	obj/kernel.asm	/^c0106626:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106629	obj/kernel.asm	/^c0106629:	ff d0                	call   *%eax$/;"	l
c010662b	obj/kernel.asm	/^c010662b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010662e	obj/kernel.asm	/^c010662e:	eb 5c                	jmp    c010668c <swap_out+0x13c>$/;"	l
c0106630	obj/kernel.asm	/^c0106630:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106633	obj/kernel.asm	/^c0106633:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0106636	obj/kernel.asm	/^c0106636:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106639	obj/kernel.asm	/^c0106639:	83 c0 01             	add    $0x1,%eax$/;"	l
c010663c	obj/kernel.asm	/^c010663c:	50                   	push   %eax$/;"	l
c010663d	obj/kernel.asm	/^c010663d:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0106640	obj/kernel.asm	/^c0106640:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106643	obj/kernel.asm	/^c0106643:	68 94 4e 11 c0       	push   $0xc0114e94$/;"	l
c0106648	obj/kernel.asm	/^c0106648:	e8 1d 9d ff ff       	call   c010036a <cprintf>$/;"	l
c010664d	obj/kernel.asm	/^c010664d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106650	obj/kernel.asm	/^c0106650:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106653	obj/kernel.asm	/^c0106653:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0106656	obj/kernel.asm	/^c0106656:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106659	obj/kernel.asm	/^c0106659:	83 c0 01             	add    $0x1,%eax$/;"	l
c010665c	obj/kernel.asm	/^c010665c:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c010665f	obj/kernel.asm	/^c010665f:	89 c2                	mov    %eax,%edx$/;"	l
c0106661	obj/kernel.asm	/^c0106661:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106664	obj/kernel.asm	/^c0106664:	89 10                	mov    %edx,(%eax)$/;"	l
c0106666	obj/kernel.asm	/^c0106666:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106669	obj/kernel.asm	/^c0106669:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010666c	obj/kernel.asm	/^c010666c:	6a 01                	push   $0x1$/;"	l
c010666e	obj/kernel.asm	/^c010666e:	50                   	push   %eax$/;"	l
c010666f	obj/kernel.asm	/^c010666f:	e8 39 d3 ff ff       	call   c01039ad <free_pages>$/;"	l
c0106674	obj/kernel.asm	/^c0106674:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106677	obj/kernel.asm	/^c0106677:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010667a	obj/kernel.asm	/^c010667a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010667d	obj/kernel.asm	/^c010667d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106680	obj/kernel.asm	/^c0106680:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0106683	obj/kernel.asm	/^c0106683:	50                   	push   %eax$/;"	l
c0106684	obj/kernel.asm	/^c0106684:	e8 dd df ff ff       	call   c0104666 <tlb_invalidate>$/;"	l
c0106689	obj/kernel.asm	/^c0106689:	83 c4 10             	add    $0x10,%esp$/;"	l
c010668c	obj/kernel.asm	/^c010668c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0106690	obj/kernel.asm	/^c0106690:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106693	obj/kernel.asm	/^c0106693:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106696	obj/kernel.asm	/^c0106696:	0f 85 c6 fe ff ff    	jne    c0106562 <swap_out+0x12>$/;"	l
c010669c	obj/kernel.asm	/^c010669c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010669f	obj/kernel.asm	/^c010669f:	c9                   	leave  $/;"	l
c01066a0	obj/kernel.asm	/^c01066a0:	c3                   	ret    $/;"	l
c01066a1	obj/kernel.asm	/^c01066a1 <swap_in>:$/;"	l
c01066a1	obj/kernel.asm	/^c01066a1:	55                   	push   %ebp$/;"	l
c01066a2	obj/kernel.asm	/^c01066a2:	89 e5                	mov    %esp,%ebp$/;"	l
c01066a4	obj/kernel.asm	/^c01066a4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01066a7	obj/kernel.asm	/^c01066a7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01066aa	obj/kernel.asm	/^c01066aa:	6a 01                	push   $0x1$/;"	l
c01066ac	obj/kernel.asm	/^c01066ac:	e8 90 d2 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c01066b1	obj/kernel.asm	/^c01066b1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01066b4	obj/kernel.asm	/^c01066b4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01066b7	obj/kernel.asm	/^c01066b7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01066bb	obj/kernel.asm	/^c01066bb:	75 16                	jne    c01066d3 <swap_in+0x32>$/;"	l
c01066bd	obj/kernel.asm	/^c01066bd:	68 d4 4e 11 c0       	push   $0xc0114ed4$/;"	l
c01066c2	obj/kernel.asm	/^c01066c2:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c01066c7	obj/kernel.asm	/^c01066c7:	6a 7d                	push   $0x7d$/;"	l
c01066c9	obj/kernel.asm	/^c01066c9:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c01066ce	obj/kernel.asm	/^c01066ce:	e8 fc 9d ff ff       	call   c01004cf <__panic>$/;"	l
c01066d3	obj/kernel.asm	/^c01066d3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01066d6	obj/kernel.asm	/^c01066d6:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01066d9	obj/kernel.asm	/^c01066d9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01066dc	obj/kernel.asm	/^c01066dc:	6a 00                	push   $0x0$/;"	l
c01066de	obj/kernel.asm	/^c01066de:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01066e1	obj/kernel.asm	/^c01066e1:	50                   	push   %eax$/;"	l
c01066e2	obj/kernel.asm	/^c01066e2:	e8 43 d9 ff ff       	call   c010402a <get_pte>$/;"	l
c01066e7	obj/kernel.asm	/^c01066e7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01066ea	obj/kernel.asm	/^c01066ea:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01066ed	obj/kernel.asm	/^c01066ed:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01066f0	obj/kernel.asm	/^c01066f0:	8b 00                	mov    (%eax),%eax$/;"	l
c01066f2	obj/kernel.asm	/^c01066f2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01066f5	obj/kernel.asm	/^c01066f5:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01066f8	obj/kernel.asm	/^c01066f8:	50                   	push   %eax$/;"	l
c01066f9	obj/kernel.asm	/^c01066f9:	e8 44 74 00 00       	call   c010db42 <swapfs_read>$/;"	l
c01066fe	obj/kernel.asm	/^c01066fe:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106701	obj/kernel.asm	/^c0106701:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106704	obj/kernel.asm	/^c0106704:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0106708	obj/kernel.asm	/^c0106708:	74 1f                	je     c0106729 <swap_in+0x88>$/;"	l
c010670a	obj/kernel.asm	/^c010670a:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010670e	obj/kernel.asm	/^c010670e:	75 19                	jne    c0106729 <swap_in+0x88>$/;"	l
c0106710	obj/kernel.asm	/^c0106710:	68 e1 4e 11 c0       	push   $0xc0114ee1$/;"	l
c0106715	obj/kernel.asm	/^c0106715:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c010671a	obj/kernel.asm	/^c010671a:	68 85 00 00 00       	push   $0x85$/;"	l
c010671f	obj/kernel.asm	/^c010671f:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106724	obj/kernel.asm	/^c0106724:	e8 a6 9d ff ff       	call   c01004cf <__panic>$/;"	l
c0106729	obj/kernel.asm	/^c0106729:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010672c	obj/kernel.asm	/^c010672c:	8b 00                	mov    (%eax),%eax$/;"	l
c010672e	obj/kernel.asm	/^c010672e:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0106731	obj/kernel.asm	/^c0106731:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106734	obj/kernel.asm	/^c0106734:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0106737	obj/kernel.asm	/^c0106737:	50                   	push   %eax$/;"	l
c0106738	obj/kernel.asm	/^c0106738:	68 e8 4e 11 c0       	push   $0xc0114ee8$/;"	l
c010673d	obj/kernel.asm	/^c010673d:	e8 28 9c ff ff       	call   c010036a <cprintf>$/;"	l
c0106742	obj/kernel.asm	/^c0106742:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106745	obj/kernel.asm	/^c0106745:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106748	obj/kernel.asm	/^c0106748:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010674b	obj/kernel.asm	/^c010674b:	89 10                	mov    %edx,(%eax)$/;"	l
c010674d	obj/kernel.asm	/^c010674d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106752	obj/kernel.asm	/^c0106752:	c9                   	leave  $/;"	l
c0106753	obj/kernel.asm	/^c0106753:	c3                   	ret    $/;"	l
c0106754	obj/kernel.asm	/^c0106754 <check_content_set>:$/;"	l
c0106754	obj/kernel.asm	/^c0106754:	55                   	push   %ebp$/;"	l
c0106755	obj/kernel.asm	/^c0106755:	89 e5                	mov    %esp,%ebp$/;"	l
c0106757	obj/kernel.asm	/^c0106757:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010675a	obj/kernel.asm	/^c010675a:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010675f	obj/kernel.asm	/^c010675f:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c0106762	obj/kernel.asm	/^c0106762:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c0106767	obj/kernel.asm	/^c0106767:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010676a	obj/kernel.asm	/^c010676a:	74 19                	je     c0106785 <check_content_set+0x31>$/;"	l
c010676c	obj/kernel.asm	/^c010676c:	68 26 4f 11 c0       	push   $0xc0114f26$/;"	l
c0106771	obj/kernel.asm	/^c0106771:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c0106776	obj/kernel.asm	/^c0106776:	68 92 00 00 00       	push   $0x92$/;"	l
c010677b	obj/kernel.asm	/^c010677b:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106780	obj/kernel.asm	/^c0106780:	e8 4a 9d ff ff       	call   c01004cf <__panic>$/;"	l
c0106785	obj/kernel.asm	/^c0106785:	b8 10 10 00 00       	mov    $0x1010,%eax$/;"	l
c010678a	obj/kernel.asm	/^c010678a:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c010678d	obj/kernel.asm	/^c010678d:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c0106792	obj/kernel.asm	/^c0106792:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0106795	obj/kernel.asm	/^c0106795:	74 19                	je     c01067b0 <check_content_set+0x5c>$/;"	l
c0106797	obj/kernel.asm	/^c0106797:	68 26 4f 11 c0       	push   $0xc0114f26$/;"	l
c010679c	obj/kernel.asm	/^c010679c:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c01067a1	obj/kernel.asm	/^c01067a1:	68 94 00 00 00       	push   $0x94$/;"	l
c01067a6	obj/kernel.asm	/^c01067a6:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c01067ab	obj/kernel.asm	/^c01067ab:	e8 1f 9d ff ff       	call   c01004cf <__panic>$/;"	l
c01067b0	obj/kernel.asm	/^c01067b0:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c01067b5	obj/kernel.asm	/^c01067b5:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c01067b8	obj/kernel.asm	/^c01067b8:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c01067bd	obj/kernel.asm	/^c01067bd:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01067c0	obj/kernel.asm	/^c01067c0:	74 19                	je     c01067db <check_content_set+0x87>$/;"	l
c01067c2	obj/kernel.asm	/^c01067c2:	68 35 4f 11 c0       	push   $0xc0114f35$/;"	l
c01067c7	obj/kernel.asm	/^c01067c7:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c01067cc	obj/kernel.asm	/^c01067cc:	68 96 00 00 00       	push   $0x96$/;"	l
c01067d1	obj/kernel.asm	/^c01067d1:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c01067d6	obj/kernel.asm	/^c01067d6:	e8 f4 9c ff ff       	call   c01004cf <__panic>$/;"	l
c01067db	obj/kernel.asm	/^c01067db:	b8 10 20 00 00       	mov    $0x2010,%eax$/;"	l
c01067e0	obj/kernel.asm	/^c01067e0:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c01067e3	obj/kernel.asm	/^c01067e3:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c01067e8	obj/kernel.asm	/^c01067e8:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01067eb	obj/kernel.asm	/^c01067eb:	74 19                	je     c0106806 <check_content_set+0xb2>$/;"	l
c01067ed	obj/kernel.asm	/^c01067ed:	68 35 4f 11 c0       	push   $0xc0114f35$/;"	l
c01067f2	obj/kernel.asm	/^c01067f2:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c01067f7	obj/kernel.asm	/^c01067f7:	68 98 00 00 00       	push   $0x98$/;"	l
c01067fc	obj/kernel.asm	/^c01067fc:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106801	obj/kernel.asm	/^c0106801:	e8 c9 9c ff ff       	call   c01004cf <__panic>$/;"	l
c0106806	obj/kernel.asm	/^c0106806:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c010680b	obj/kernel.asm	/^c010680b:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c010680e	obj/kernel.asm	/^c010680e:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c0106813	obj/kernel.asm	/^c0106813:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0106816	obj/kernel.asm	/^c0106816:	74 19                	je     c0106831 <check_content_set+0xdd>$/;"	l
c0106818	obj/kernel.asm	/^c0106818:	68 44 4f 11 c0       	push   $0xc0114f44$/;"	l
c010681d	obj/kernel.asm	/^c010681d:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c0106822	obj/kernel.asm	/^c0106822:	68 9a 00 00 00       	push   $0x9a$/;"	l
c0106827	obj/kernel.asm	/^c0106827:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c010682c	obj/kernel.asm	/^c010682c:	e8 9e 9c ff ff       	call   c01004cf <__panic>$/;"	l
c0106831	obj/kernel.asm	/^c0106831:	b8 10 30 00 00       	mov    $0x3010,%eax$/;"	l
c0106836	obj/kernel.asm	/^c0106836:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0106839	obj/kernel.asm	/^c0106839:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c010683e	obj/kernel.asm	/^c010683e:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0106841	obj/kernel.asm	/^c0106841:	74 19                	je     c010685c <check_content_set+0x108>$/;"	l
c0106843	obj/kernel.asm	/^c0106843:	68 44 4f 11 c0       	push   $0xc0114f44$/;"	l
c0106848	obj/kernel.asm	/^c0106848:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c010684d	obj/kernel.asm	/^c010684d:	68 9c 00 00 00       	push   $0x9c$/;"	l
c0106852	obj/kernel.asm	/^c0106852:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106857	obj/kernel.asm	/^c0106857:	e8 73 9c ff ff       	call   c01004cf <__panic>$/;"	l
c010685c	obj/kernel.asm	/^c010685c:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0106861	obj/kernel.asm	/^c0106861:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0106864	obj/kernel.asm	/^c0106864:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c0106869	obj/kernel.asm	/^c0106869:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c010686c	obj/kernel.asm	/^c010686c:	74 19                	je     c0106887 <check_content_set+0x133>$/;"	l
c010686e	obj/kernel.asm	/^c010686e:	68 53 4f 11 c0       	push   $0xc0114f53$/;"	l
c0106873	obj/kernel.asm	/^c0106873:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c0106878	obj/kernel.asm	/^c0106878:	68 9e 00 00 00       	push   $0x9e$/;"	l
c010687d	obj/kernel.asm	/^c010687d:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106882	obj/kernel.asm	/^c0106882:	e8 48 9c ff ff       	call   c01004cf <__panic>$/;"	l
c0106887	obj/kernel.asm	/^c0106887:	b8 10 40 00 00       	mov    $0x4010,%eax$/;"	l
c010688c	obj/kernel.asm	/^c010688c:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c010688f	obj/kernel.asm	/^c010688f:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c0106894	obj/kernel.asm	/^c0106894:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0106897	obj/kernel.asm	/^c0106897:	74 19                	je     c01068b2 <check_content_set+0x15e>$/;"	l
c0106899	obj/kernel.asm	/^c0106899:	68 53 4f 11 c0       	push   $0xc0114f53$/;"	l
c010689e	obj/kernel.asm	/^c010689e:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c01068a3	obj/kernel.asm	/^c01068a3:	68 a0 00 00 00       	push   $0xa0$/;"	l
c01068a8	obj/kernel.asm	/^c01068a8:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c01068ad	obj/kernel.asm	/^c01068ad:	e8 1d 9c ff ff       	call   c01004cf <__panic>$/;"	l
c01068b2	obj/kernel.asm	/^c01068b2:	c9                   	leave  $/;"	l
c01068b3	obj/kernel.asm	/^c01068b3:	c3                   	ret    $/;"	l
c01068b4	obj/kernel.asm	/^c01068b4 <check_content_access>:$/;"	l
c01068b4	obj/kernel.asm	/^c01068b4:	55                   	push   %ebp$/;"	l
c01068b5	obj/kernel.asm	/^c01068b5:	89 e5                	mov    %esp,%ebp$/;"	l
c01068b7	obj/kernel.asm	/^c01068b7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01068ba	obj/kernel.asm	/^c01068ba:	a1 78 e0 14 c0       	mov    0xc014e078,%eax$/;"	l
c01068bf	obj/kernel.asm	/^c01068bf:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01068c2	obj/kernel.asm	/^c01068c2:	ff d0                	call   *%eax$/;"	l
c01068c4	obj/kernel.asm	/^c01068c4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01068c7	obj/kernel.asm	/^c01068c7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01068ca	obj/kernel.asm	/^c01068ca:	c9                   	leave  $/;"	l
c01068cb	obj/kernel.asm	/^c01068cb:	c3                   	ret    $/;"	l
c01068cc	obj/kernel.asm	/^c01068cc <check_swap>:$/;"	l
c01068cc	obj/kernel.asm	/^c01068cc:	55                   	push   %ebp$/;"	l
c01068cd	obj/kernel.asm	/^c01068cd:	89 e5                	mov    %esp,%ebp$/;"	l
c01068cf	obj/kernel.asm	/^c01068cf:	53                   	push   %ebx$/;"	l
c01068d0	obj/kernel.asm	/^c01068d0:	83 ec 64             	sub    $0x64,%esp$/;"	l
c01068d3	obj/kernel.asm	/^c01068d3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01068da	obj/kernel.asm	/^c01068da:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01068e1	obj/kernel.asm	/^c01068e1:	c7 45 e8 ec 12 15 c0 	movl   $0xc01512ec,-0x18(%ebp)$/;"	l
c01068e8	obj/kernel.asm	/^c01068e8:	eb 60                	jmp    c010694a <check_swap+0x7e>$/;"	l
c01068ea	obj/kernel.asm	/^c01068ea:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01068ed	obj/kernel.asm	/^c01068ed:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01068f0	obj/kernel.asm	/^c01068f0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01068f3	obj/kernel.asm	/^c01068f3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01068f6	obj/kernel.asm	/^c01068f6:	83 c0 04             	add    $0x4,%eax$/;"	l
c01068f9	obj/kernel.asm	/^c01068f9:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)$/;"	l
c0106900	obj/kernel.asm	/^c0106900:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0106903	obj/kernel.asm	/^c0106903:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0106906	obj/kernel.asm	/^c0106906:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0106909	obj/kernel.asm	/^c0106909:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010690c	obj/kernel.asm	/^c010690c:	19 c0                	sbb    %eax,%eax$/;"	l
c010690e	obj/kernel.asm	/^c010690e:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0106911	obj/kernel.asm	/^c0106911:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0106915	obj/kernel.asm	/^c0106915:	0f 95 c0             	setne  %al$/;"	l
c0106918	obj/kernel.asm	/^c0106918:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010691b	obj/kernel.asm	/^c010691b:	85 c0                	test   %eax,%eax$/;"	l
c010691d	obj/kernel.asm	/^c010691d:	75 19                	jne    c0106938 <check_swap+0x6c>$/;"	l
c010691f	obj/kernel.asm	/^c010691f:	68 62 4f 11 c0       	push   $0xc0114f62$/;"	l
c0106924	obj/kernel.asm	/^c0106924:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c0106929	obj/kernel.asm	/^c0106929:	68 bb 00 00 00       	push   $0xbb$/;"	l
c010692e	obj/kernel.asm	/^c010692e:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106933	obj/kernel.asm	/^c0106933:	e8 97 9b ff ff       	call   c01004cf <__panic>$/;"	l
c0106938	obj/kernel.asm	/^c0106938:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010693c	obj/kernel.asm	/^c010693c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010693f	obj/kernel.asm	/^c010693f:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0106942	obj/kernel.asm	/^c0106942:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106945	obj/kernel.asm	/^c0106945:	01 d0                	add    %edx,%eax$/;"	l
c0106947	obj/kernel.asm	/^c0106947:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010694a	obj/kernel.asm	/^c010694a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010694d	obj/kernel.asm	/^c010694d:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0106950	obj/kernel.asm	/^c0106950:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0106953	obj/kernel.asm	/^c0106953:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106956	obj/kernel.asm	/^c0106956:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106959	obj/kernel.asm	/^c0106959:	81 7d e8 ec 12 15 c0 	cmpl   $0xc01512ec,-0x18(%ebp)$/;"	l
c0106960	obj/kernel.asm	/^c0106960:	75 88                	jne    c01068ea <check_swap+0x1e>$/;"	l
c0106962	obj/kernel.asm	/^c0106962:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c0106965	obj/kernel.asm	/^c0106965:	e8 77 d0 ff ff       	call   c01039e1 <nr_free_pages>$/;"	l
c010696a	obj/kernel.asm	/^c010696a:	39 c3                	cmp    %eax,%ebx$/;"	l
c010696c	obj/kernel.asm	/^c010696c:	74 19                	je     c0106987 <check_swap+0xbb>$/;"	l
c010696e	obj/kernel.asm	/^c010696e:	68 72 4f 11 c0       	push   $0xc0114f72$/;"	l
c0106973	obj/kernel.asm	/^c0106973:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c0106978	obj/kernel.asm	/^c0106978:	68 be 00 00 00       	push   $0xbe$/;"	l
c010697d	obj/kernel.asm	/^c010697d:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106982	obj/kernel.asm	/^c0106982:	e8 48 9b ff ff       	call   c01004cf <__panic>$/;"	l
c0106987	obj/kernel.asm	/^c0106987:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010698a	obj/kernel.asm	/^c010698a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010698d	obj/kernel.asm	/^c010698d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106990	obj/kernel.asm	/^c0106990:	68 8c 4f 11 c0       	push   $0xc0114f8c$/;"	l
c0106995	obj/kernel.asm	/^c0106995:	e8 d0 99 ff ff       	call   c010036a <cprintf>$/;"	l
c010699a	obj/kernel.asm	/^c010699a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010699d	obj/kernel.asm	/^c010699d:	e8 f5 e8 ff ff       	call   c0105297 <mm_create>$/;"	l
c01069a2	obj/kernel.asm	/^c01069a2:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01069a5	obj/kernel.asm	/^c01069a5:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01069a9	obj/kernel.asm	/^c01069a9:	75 19                	jne    c01069c4 <check_swap+0xf8>$/;"	l
c01069ab	obj/kernel.asm	/^c01069ab:	68 b2 4f 11 c0       	push   $0xc0114fb2$/;"	l
c01069b0	obj/kernel.asm	/^c01069b0:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c01069b5	obj/kernel.asm	/^c01069b5:	68 c3 00 00 00       	push   $0xc3$/;"	l
c01069ba	obj/kernel.asm	/^c01069ba:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c01069bf	obj/kernel.asm	/^c01069bf:	e8 0b 9b ff ff       	call   c01004cf <__panic>$/;"	l
c01069c4	obj/kernel.asm	/^c01069c4:	a1 1c 12 15 c0       	mov    0xc015121c,%eax$/;"	l
c01069c9	obj/kernel.asm	/^c01069c9:	85 c0                	test   %eax,%eax$/;"	l
c01069cb	obj/kernel.asm	/^c01069cb:	74 19                	je     c01069e6 <check_swap+0x11a>$/;"	l
c01069cd	obj/kernel.asm	/^c01069cd:	68 bd 4f 11 c0       	push   $0xc0114fbd$/;"	l
c01069d2	obj/kernel.asm	/^c01069d2:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c01069d7	obj/kernel.asm	/^c01069d7:	68 c6 00 00 00       	push   $0xc6$/;"	l
c01069dc	obj/kernel.asm	/^c01069dc:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c01069e1	obj/kernel.asm	/^c01069e1:	e8 e9 9a ff ff       	call   c01004cf <__panic>$/;"	l
c01069e6	obj/kernel.asm	/^c01069e6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01069e9	obj/kernel.asm	/^c01069e9:	a3 1c 12 15 c0       	mov    %eax,0xc015121c$/;"	l
c01069ee	obj/kernel.asm	/^c01069ee:	8b 15 c4 df 14 c0    	mov    0xc014dfc4,%edx$/;"	l
c01069f4	obj/kernel.asm	/^c01069f4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01069f7	obj/kernel.asm	/^c01069f7:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01069fa	obj/kernel.asm	/^c01069fa:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01069fd	obj/kernel.asm	/^c01069fd:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106a00	obj/kernel.asm	/^c0106a00:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0106a03	obj/kernel.asm	/^c0106a03:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106a06	obj/kernel.asm	/^c0106a06:	8b 00                	mov    (%eax),%eax$/;"	l
c0106a08	obj/kernel.asm	/^c0106a08:	85 c0                	test   %eax,%eax$/;"	l
c0106a0a	obj/kernel.asm	/^c0106a0a:	74 19                	je     c0106a25 <check_swap+0x159>$/;"	l
c0106a0c	obj/kernel.asm	/^c0106a0c:	68 d5 4f 11 c0       	push   $0xc0114fd5$/;"	l
c0106a11	obj/kernel.asm	/^c0106a11:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c0106a16	obj/kernel.asm	/^c0106a16:	68 cb 00 00 00       	push   $0xcb$/;"	l
c0106a1b	obj/kernel.asm	/^c0106a1b:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106a20	obj/kernel.asm	/^c0106a20:	e8 aa 9a ff ff       	call   c01004cf <__panic>$/;"	l
c0106a25	obj/kernel.asm	/^c0106a25:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106a28	obj/kernel.asm	/^c0106a28:	6a 03                	push   $0x3$/;"	l
c0106a2a	obj/kernel.asm	/^c0106a2a:	68 00 60 00 00       	push   $0x6000$/;"	l
c0106a2f	obj/kernel.asm	/^c0106a2f:	68 00 10 00 00       	push   $0x1000$/;"	l
c0106a34	obj/kernel.asm	/^c0106a34:	e8 fe e8 ff ff       	call   c0105337 <vma_create>$/;"	l
c0106a39	obj/kernel.asm	/^c0106a39:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106a3c	obj/kernel.asm	/^c0106a3c:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0106a3f	obj/kernel.asm	/^c0106a3f:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0106a43	obj/kernel.asm	/^c0106a43:	75 19                	jne    c0106a5e <check_swap+0x192>$/;"	l
c0106a45	obj/kernel.asm	/^c0106a45:	68 e3 4f 11 c0       	push   $0xc0114fe3$/;"	l
c0106a4a	obj/kernel.asm	/^c0106a4a:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c0106a4f	obj/kernel.asm	/^c0106a4f:	68 ce 00 00 00       	push   $0xce$/;"	l
c0106a54	obj/kernel.asm	/^c0106a54:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106a59	obj/kernel.asm	/^c0106a59:	e8 71 9a ff ff       	call   c01004cf <__panic>$/;"	l
c0106a5e	obj/kernel.asm	/^c0106a5e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106a61	obj/kernel.asm	/^c0106a61:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c0106a64	obj/kernel.asm	/^c0106a64:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0106a67	obj/kernel.asm	/^c0106a67:	e8 32 ea ff ff       	call   c010549e <insert_vma_struct>$/;"	l
c0106a6c	obj/kernel.asm	/^c0106a6c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106a6f	obj/kernel.asm	/^c0106a6f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106a72	obj/kernel.asm	/^c0106a72:	68 f0 4f 11 c0       	push   $0xc0114ff0$/;"	l
c0106a77	obj/kernel.asm	/^c0106a77:	e8 ee 98 ff ff       	call   c010036a <cprintf>$/;"	l
c0106a7c	obj/kernel.asm	/^c0106a7c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106a7f	obj/kernel.asm	/^c0106a7f:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c0106a86	obj/kernel.asm	/^c0106a86:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106a89	obj/kernel.asm	/^c0106a89:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106a8c	obj/kernel.asm	/^c0106a8c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106a8f	obj/kernel.asm	/^c0106a8f:	6a 01                	push   $0x1$/;"	l
c0106a91	obj/kernel.asm	/^c0106a91:	68 00 10 00 00       	push   $0x1000$/;"	l
c0106a96	obj/kernel.asm	/^c0106a96:	50                   	push   %eax$/;"	l
c0106a97	obj/kernel.asm	/^c0106a97:	e8 8e d5 ff ff       	call   c010402a <get_pte>$/;"	l
c0106a9c	obj/kernel.asm	/^c0106a9c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106a9f	obj/kernel.asm	/^c0106a9f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0106aa2	obj/kernel.asm	/^c0106aa2:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
c0106aa6	obj/kernel.asm	/^c0106aa6:	75 19                	jne    c0106ac1 <check_swap+0x1f5>$/;"	l
c0106aa8	obj/kernel.asm	/^c0106aa8:	68 24 50 11 c0       	push   $0xc0115024$/;"	l
c0106aad	obj/kernel.asm	/^c0106aad:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c0106ab2	obj/kernel.asm	/^c0106ab2:	68 d6 00 00 00       	push   $0xd6$/;"	l
c0106ab7	obj/kernel.asm	/^c0106ab7:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106abc	obj/kernel.asm	/^c0106abc:	e8 0e 9a ff ff       	call   c01004cf <__panic>$/;"	l
c0106ac1	obj/kernel.asm	/^c0106ac1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106ac4	obj/kernel.asm	/^c0106ac4:	68 38 50 11 c0       	push   $0xc0115038$/;"	l
c0106ac9	obj/kernel.asm	/^c0106ac9:	e8 9c 98 ff ff       	call   c010036a <cprintf>$/;"	l
c0106ace	obj/kernel.asm	/^c0106ace:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106ad1	obj/kernel.asm	/^c0106ad1:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106ad8	obj/kernel.asm	/^c0106ad8:	e9 90 00 00 00       	jmp    c0106b6d <check_swap+0x2a1>$/;"	l
c0106add	obj/kernel.asm	/^c0106add:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106ae0	obj/kernel.asm	/^c0106ae0:	6a 01                	push   $0x1$/;"	l
c0106ae2	obj/kernel.asm	/^c0106ae2:	e8 5a ce ff ff       	call   c0103941 <alloc_pages>$/;"	l
c0106ae7	obj/kernel.asm	/^c0106ae7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106aea	obj/kernel.asm	/^c0106aea:	89 c2                	mov    %eax,%edx$/;"	l
c0106aec	obj/kernel.asm	/^c0106aec:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106aef	obj/kernel.asm	/^c0106aef:	89 14 85 20 12 15 c0 	mov    %edx,-0x3feaede0(,%eax,4)$/;"	l
c0106af6	obj/kernel.asm	/^c0106af6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106af9	obj/kernel.asm	/^c0106af9:	8b 04 85 20 12 15 c0 	mov    -0x3feaede0(,%eax,4),%eax$/;"	l
c0106b00	obj/kernel.asm	/^c0106b00:	85 c0                	test   %eax,%eax$/;"	l
c0106b02	obj/kernel.asm	/^c0106b02:	75 19                	jne    c0106b1d <check_swap+0x251>$/;"	l
c0106b04	obj/kernel.asm	/^c0106b04:	68 5c 50 11 c0       	push   $0xc011505c$/;"	l
c0106b09	obj/kernel.asm	/^c0106b09:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c0106b0e	obj/kernel.asm	/^c0106b0e:	68 db 00 00 00       	push   $0xdb$/;"	l
c0106b13	obj/kernel.asm	/^c0106b13:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106b18	obj/kernel.asm	/^c0106b18:	e8 b2 99 ff ff       	call   c01004cf <__panic>$/;"	l
c0106b1d	obj/kernel.asm	/^c0106b1d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106b20	obj/kernel.asm	/^c0106b20:	8b 04 85 20 12 15 c0 	mov    -0x3feaede0(,%eax,4),%eax$/;"	l
c0106b27	obj/kernel.asm	/^c0106b27:	83 c0 04             	add    $0x4,%eax$/;"	l
c0106b2a	obj/kernel.asm	/^c0106b2a:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%ebp)$/;"	l
c0106b31	obj/kernel.asm	/^c0106b31:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0106b34	obj/kernel.asm	/^c0106b34:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0106b37	obj/kernel.asm	/^c0106b37:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0106b3a	obj/kernel.asm	/^c0106b3a:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0106b3d	obj/kernel.asm	/^c0106b3d:	19 c0                	sbb    %eax,%eax$/;"	l
c0106b3f	obj/kernel.asm	/^c0106b3f:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0106b42	obj/kernel.asm	/^c0106b42:	83 7d ac 00          	cmpl   $0x0,-0x54(%ebp)$/;"	l
c0106b46	obj/kernel.asm	/^c0106b46:	0f 95 c0             	setne  %al$/;"	l
c0106b49	obj/kernel.asm	/^c0106b49:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0106b4c	obj/kernel.asm	/^c0106b4c:	85 c0                	test   %eax,%eax$/;"	l
c0106b4e	obj/kernel.asm	/^c0106b4e:	74 19                	je     c0106b69 <check_swap+0x29d>$/;"	l
c0106b50	obj/kernel.asm	/^c0106b50:	68 70 50 11 c0       	push   $0xc0115070$/;"	l
c0106b55	obj/kernel.asm	/^c0106b55:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c0106b5a	obj/kernel.asm	/^c0106b5a:	68 dc 00 00 00       	push   $0xdc$/;"	l
c0106b5f	obj/kernel.asm	/^c0106b5f:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106b64	obj/kernel.asm	/^c0106b64:	e8 66 99 ff ff       	call   c01004cf <__panic>$/;"	l
c0106b69	obj/kernel.asm	/^c0106b69:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106b6d	obj/kernel.asm	/^c0106b6d:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106b71	obj/kernel.asm	/^c0106b71:	0f 8e 66 ff ff ff    	jle    c0106add <check_swap+0x211>$/;"	l
c0106b77	obj/kernel.asm	/^c0106b77:	a1 ec 12 15 c0       	mov    0xc01512ec,%eax$/;"	l
c0106b7c	obj/kernel.asm	/^c0106b7c:	8b 15 f0 12 15 c0    	mov    0xc01512f0,%edx$/;"	l
c0106b82	obj/kernel.asm	/^c0106b82:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0106b85	obj/kernel.asm	/^c0106b85:	89 55 9c             	mov    %edx,-0x64(%ebp)$/;"	l
c0106b88	obj/kernel.asm	/^c0106b88:	c7 45 a8 ec 12 15 c0 	movl   $0xc01512ec,-0x58(%ebp)$/;"	l
c0106b8f	obj/kernel.asm	/^c0106b8f:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0106b92	obj/kernel.asm	/^c0106b92:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c0106b95	obj/kernel.asm	/^c0106b95:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0106b98	obj/kernel.asm	/^c0106b98:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0106b9b	obj/kernel.asm	/^c0106b9b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0106b9e	obj/kernel.asm	/^c0106b9e:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0106ba1	obj/kernel.asm	/^c0106ba1:	89 10                	mov    %edx,(%eax)$/;"	l
c0106ba3	obj/kernel.asm	/^c0106ba3:	c7 45 a4 ec 12 15 c0 	movl   $0xc01512ec,-0x5c(%ebp)$/;"	l
c0106baa	obj/kernel.asm	/^c0106baa:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0106bad	obj/kernel.asm	/^c0106bad:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106bb0	obj/kernel.asm	/^c0106bb0:	39 45 a4             	cmp    %eax,-0x5c(%ebp)$/;"	l
c0106bb3	obj/kernel.asm	/^c0106bb3:	0f 94 c0             	sete   %al$/;"	l
c0106bb6	obj/kernel.asm	/^c0106bb6:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0106bb9	obj/kernel.asm	/^c0106bb9:	85 c0                	test   %eax,%eax$/;"	l
c0106bbb	obj/kernel.asm	/^c0106bbb:	75 19                	jne    c0106bd6 <check_swap+0x30a>$/;"	l
c0106bbd	obj/kernel.asm	/^c0106bbd:	68 8b 50 11 c0       	push   $0xc011508b$/;"	l
c0106bc2	obj/kernel.asm	/^c0106bc2:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c0106bc7	obj/kernel.asm	/^c0106bc7:	68 e0 00 00 00       	push   $0xe0$/;"	l
c0106bcc	obj/kernel.asm	/^c0106bcc:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106bd1	obj/kernel.asm	/^c0106bd1:	e8 f9 98 ff ff       	call   c01004cf <__panic>$/;"	l
c0106bd6	obj/kernel.asm	/^c0106bd6:	a1 f4 12 15 c0       	mov    0xc01512f4,%eax$/;"	l
c0106bdb	obj/kernel.asm	/^c0106bdb:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0106bde	obj/kernel.asm	/^c0106bde:	c7 05 f4 12 15 c0 00 	movl   $0x0,0xc01512f4$/;"	l
c0106be5	obj/kernel.asm	/^c0106be5:	00 00 00 $/;"	l
c0106be8	obj/kernel.asm	/^c0106be8:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106bef	obj/kernel.asm	/^c0106bef:	eb 1c                	jmp    c0106c0d <check_swap+0x341>$/;"	l
c0106bf1	obj/kernel.asm	/^c0106bf1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106bf4	obj/kernel.asm	/^c0106bf4:	8b 04 85 20 12 15 c0 	mov    -0x3feaede0(,%eax,4),%eax$/;"	l
c0106bfb	obj/kernel.asm	/^c0106bfb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106bfe	obj/kernel.asm	/^c0106bfe:	6a 01                	push   $0x1$/;"	l
c0106c00	obj/kernel.asm	/^c0106c00:	50                   	push   %eax$/;"	l
c0106c01	obj/kernel.asm	/^c0106c01:	e8 a7 cd ff ff       	call   c01039ad <free_pages>$/;"	l
c0106c06	obj/kernel.asm	/^c0106c06:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106c09	obj/kernel.asm	/^c0106c09:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106c0d	obj/kernel.asm	/^c0106c0d:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106c11	obj/kernel.asm	/^c0106c11:	7e de                	jle    c0106bf1 <check_swap+0x325>$/;"	l
c0106c13	obj/kernel.asm	/^c0106c13:	a1 f4 12 15 c0       	mov    0xc01512f4,%eax$/;"	l
c0106c18	obj/kernel.asm	/^c0106c18:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0106c1b	obj/kernel.asm	/^c0106c1b:	74 19                	je     c0106c36 <check_swap+0x36a>$/;"	l
c0106c1d	obj/kernel.asm	/^c0106c1d:	68 a4 50 11 c0       	push   $0xc01150a4$/;"	l
c0106c22	obj/kernel.asm	/^c0106c22:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c0106c27	obj/kernel.asm	/^c0106c27:	68 e9 00 00 00       	push   $0xe9$/;"	l
c0106c2c	obj/kernel.asm	/^c0106c2c:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106c31	obj/kernel.asm	/^c0106c31:	e8 99 98 ff ff       	call   c01004cf <__panic>$/;"	l
c0106c36	obj/kernel.asm	/^c0106c36:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106c39	obj/kernel.asm	/^c0106c39:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0106c3e	obj/kernel.asm	/^c0106c3e:	e8 27 97 ff ff       	call   c010036a <cprintf>$/;"	l
c0106c43	obj/kernel.asm	/^c0106c43:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106c46	obj/kernel.asm	/^c0106c46:	c7 05 6c e0 14 c0 00 	movl   $0x0,0xc014e06c$/;"	l
c0106c4d	obj/kernel.asm	/^c0106c4d:	00 00 00 $/;"	l
c0106c50	obj/kernel.asm	/^c0106c50:	e8 ff fa ff ff       	call   c0106754 <check_content_set>$/;"	l
c0106c55	obj/kernel.asm	/^c0106c55:	a1 f4 12 15 c0       	mov    0xc01512f4,%eax$/;"	l
c0106c5a	obj/kernel.asm	/^c0106c5a:	85 c0                	test   %eax,%eax$/;"	l
c0106c5c	obj/kernel.asm	/^c0106c5c:	74 19                	je     c0106c77 <check_swap+0x3ab>$/;"	l
c0106c5e	obj/kernel.asm	/^c0106c5e:	68 ef 50 11 c0       	push   $0xc01150ef$/;"	l
c0106c63	obj/kernel.asm	/^c0106c63:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c0106c68	obj/kernel.asm	/^c0106c68:	68 f2 00 00 00       	push   $0xf2$/;"	l
c0106c6d	obj/kernel.asm	/^c0106c6d:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106c72	obj/kernel.asm	/^c0106c72:	e8 58 98 ff ff       	call   c01004cf <__panic>$/;"	l
c0106c77	obj/kernel.asm	/^c0106c77:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106c7e	obj/kernel.asm	/^c0106c7e:	eb 26                	jmp    c0106ca6 <check_swap+0x3da>$/;"	l
c0106c80	obj/kernel.asm	/^c0106c80:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c83	obj/kernel.asm	/^c0106c83:	c7 04 85 40 12 15 c0 	movl   $0xffffffff,-0x3feaedc0(,%eax,4)$/;"	l
c0106c8a	obj/kernel.asm	/^c0106c8a:	ff ff ff ff $/;"	l
c0106c8e	obj/kernel.asm	/^c0106c8e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c91	obj/kernel.asm	/^c0106c91:	8b 14 85 40 12 15 c0 	mov    -0x3feaedc0(,%eax,4),%edx$/;"	l
c0106c98	obj/kernel.asm	/^c0106c98:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c9b	obj/kernel.asm	/^c0106c9b:	89 14 85 80 12 15 c0 	mov    %edx,-0x3feaed80(,%eax,4)$/;"	l
c0106ca2	obj/kernel.asm	/^c0106ca2:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106ca6	obj/kernel.asm	/^c0106ca6:	83 7d ec 09          	cmpl   $0x9,-0x14(%ebp)$/;"	l
c0106caa	obj/kernel.asm	/^c0106caa:	7e d4                	jle    c0106c80 <check_swap+0x3b4>$/;"	l
c0106cac	obj/kernel.asm	/^c0106cac:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106cb3	obj/kernel.asm	/^c0106cb3:	e9 cc 00 00 00       	jmp    c0106d84 <check_swap+0x4b8>$/;"	l
c0106cb8	obj/kernel.asm	/^c0106cb8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106cbb	obj/kernel.asm	/^c0106cbb:	c7 04 85 d4 12 15 c0 	movl   $0x0,-0x3feaed2c(,%eax,4)$/;"	l
c0106cc2	obj/kernel.asm	/^c0106cc2:	00 00 00 00 $/;"	l
c0106cc6	obj/kernel.asm	/^c0106cc6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106cc9	obj/kernel.asm	/^c0106cc9:	83 c0 01             	add    $0x1,%eax$/;"	l
c0106ccc	obj/kernel.asm	/^c0106ccc:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0106ccf	obj/kernel.asm	/^c0106ccf:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106cd2	obj/kernel.asm	/^c0106cd2:	6a 00                	push   $0x0$/;"	l
c0106cd4	obj/kernel.asm	/^c0106cd4:	50                   	push   %eax$/;"	l
c0106cd5	obj/kernel.asm	/^c0106cd5:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0106cd8	obj/kernel.asm	/^c0106cd8:	e8 4d d3 ff ff       	call   c010402a <get_pte>$/;"	l
c0106cdd	obj/kernel.asm	/^c0106cdd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106ce0	obj/kernel.asm	/^c0106ce0:	89 c2                	mov    %eax,%edx$/;"	l
c0106ce2	obj/kernel.asm	/^c0106ce2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106ce5	obj/kernel.asm	/^c0106ce5:	89 14 85 d4 12 15 c0 	mov    %edx,-0x3feaed2c(,%eax,4)$/;"	l
c0106cec	obj/kernel.asm	/^c0106cec:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106cef	obj/kernel.asm	/^c0106cef:	8b 04 85 d4 12 15 c0 	mov    -0x3feaed2c(,%eax,4),%eax$/;"	l
c0106cf6	obj/kernel.asm	/^c0106cf6:	85 c0                	test   %eax,%eax$/;"	l
c0106cf8	obj/kernel.asm	/^c0106cf8:	75 19                	jne    c0106d13 <check_swap+0x447>$/;"	l
c0106cfa	obj/kernel.asm	/^c0106cfa:	68 fc 50 11 c0       	push   $0xc01150fc$/;"	l
c0106cff	obj/kernel.asm	/^c0106cff:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c0106d04	obj/kernel.asm	/^c0106d04:	68 fa 00 00 00       	push   $0xfa$/;"	l
c0106d09	obj/kernel.asm	/^c0106d09:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106d0e	obj/kernel.asm	/^c0106d0e:	e8 bc 97 ff ff       	call   c01004cf <__panic>$/;"	l
c0106d13	obj/kernel.asm	/^c0106d13:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106d16	obj/kernel.asm	/^c0106d16:	8b 04 85 d4 12 15 c0 	mov    -0x3feaed2c(,%eax,4),%eax$/;"	l
c0106d1d	obj/kernel.asm	/^c0106d1d:	8b 00                	mov    (%eax),%eax$/;"	l
c0106d1f	obj/kernel.asm	/^c0106d1f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106d22	obj/kernel.asm	/^c0106d22:	50                   	push   %eax$/;"	l
c0106d23	obj/kernel.asm	/^c0106d23:	e8 f6 f6 ff ff       	call   c010641e <pte2page>$/;"	l
c0106d28	obj/kernel.asm	/^c0106d28:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106d2b	obj/kernel.asm	/^c0106d2b:	89 c2                	mov    %eax,%edx$/;"	l
c0106d2d	obj/kernel.asm	/^c0106d2d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106d30	obj/kernel.asm	/^c0106d30:	8b 04 85 20 12 15 c0 	mov    -0x3feaede0(,%eax,4),%eax$/;"	l
c0106d37	obj/kernel.asm	/^c0106d37:	39 c2                	cmp    %eax,%edx$/;"	l
c0106d39	obj/kernel.asm	/^c0106d39:	74 19                	je     c0106d54 <check_swap+0x488>$/;"	l
c0106d3b	obj/kernel.asm	/^c0106d3b:	68 14 51 11 c0       	push   $0xc0115114$/;"	l
c0106d40	obj/kernel.asm	/^c0106d40:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c0106d45	obj/kernel.asm	/^c0106d45:	68 fb 00 00 00       	push   $0xfb$/;"	l
c0106d4a	obj/kernel.asm	/^c0106d4a:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106d4f	obj/kernel.asm	/^c0106d4f:	e8 7b 97 ff ff       	call   c01004cf <__panic>$/;"	l
c0106d54	obj/kernel.asm	/^c0106d54:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106d57	obj/kernel.asm	/^c0106d57:	8b 04 85 d4 12 15 c0 	mov    -0x3feaed2c(,%eax,4),%eax$/;"	l
c0106d5e	obj/kernel.asm	/^c0106d5e:	8b 00                	mov    (%eax),%eax$/;"	l
c0106d60	obj/kernel.asm	/^c0106d60:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106d63	obj/kernel.asm	/^c0106d63:	85 c0                	test   %eax,%eax$/;"	l
c0106d65	obj/kernel.asm	/^c0106d65:	75 19                	jne    c0106d80 <check_swap+0x4b4>$/;"	l
c0106d67	obj/kernel.asm	/^c0106d67:	68 3c 51 11 c0       	push   $0xc011513c$/;"	l
c0106d6c	obj/kernel.asm	/^c0106d6c:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c0106d71	obj/kernel.asm	/^c0106d71:	68 fc 00 00 00       	push   $0xfc$/;"	l
c0106d76	obj/kernel.asm	/^c0106d76:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106d7b	obj/kernel.asm	/^c0106d7b:	e8 4f 97 ff ff       	call   c01004cf <__panic>$/;"	l
c0106d80	obj/kernel.asm	/^c0106d80:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106d84	obj/kernel.asm	/^c0106d84:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106d88	obj/kernel.asm	/^c0106d88:	0f 8e 2a ff ff ff    	jle    c0106cb8 <check_swap+0x3ec>$/;"	l
c0106d8e	obj/kernel.asm	/^c0106d8e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106d91	obj/kernel.asm	/^c0106d91:	68 58 51 11 c0       	push   $0xc0115158$/;"	l
c0106d96	obj/kernel.asm	/^c0106d96:	e8 cf 95 ff ff       	call   c010036a <cprintf>$/;"	l
c0106d9b	obj/kernel.asm	/^c0106d9b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106d9e	obj/kernel.asm	/^c0106d9e:	e8 11 fb ff ff       	call   c01068b4 <check_content_access>$/;"	l
c0106da3	obj/kernel.asm	/^c0106da3:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0106da6	obj/kernel.asm	/^c0106da6:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0106daa	obj/kernel.asm	/^c0106daa:	74 19                	je     c0106dc5 <check_swap+0x4f9>$/;"	l
c0106dac	obj/kernel.asm	/^c0106dac:	68 7e 51 11 c0       	push   $0xc011517e$/;"	l
c0106db1	obj/kernel.asm	/^c0106db1:	68 66 4e 11 c0       	push   $0xc0114e66$/;"	l
c0106db6	obj/kernel.asm	/^c0106db6:	68 01 01 00 00       	push   $0x101$/;"	l
c0106dbb	obj/kernel.asm	/^c0106dbb:	68 00 4e 11 c0       	push   $0xc0114e00$/;"	l
c0106dc0	obj/kernel.asm	/^c0106dc0:	e8 0a 97 ff ff       	call   c01004cf <__panic>$/;"	l
c0106dc5	obj/kernel.asm	/^c0106dc5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106dcc	obj/kernel.asm	/^c0106dcc:	eb 1c                	jmp    c0106dea <check_swap+0x51e>$/;"	l
c0106dce	obj/kernel.asm	/^c0106dce:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106dd1	obj/kernel.asm	/^c0106dd1:	8b 04 85 20 12 15 c0 	mov    -0x3feaede0(,%eax,4),%eax$/;"	l
c0106dd8	obj/kernel.asm	/^c0106dd8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106ddb	obj/kernel.asm	/^c0106ddb:	6a 01                	push   $0x1$/;"	l
c0106ddd	obj/kernel.asm	/^c0106ddd:	50                   	push   %eax$/;"	l
c0106dde	obj/kernel.asm	/^c0106dde:	e8 ca cb ff ff       	call   c01039ad <free_pages>$/;"	l
c0106de3	obj/kernel.asm	/^c0106de3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106de6	obj/kernel.asm	/^c0106de6:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106dea	obj/kernel.asm	/^c0106dea:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106dee	obj/kernel.asm	/^c0106dee:	7e de                	jle    c0106dce <check_swap+0x502>$/;"	l
c0106df0	obj/kernel.asm	/^c0106df0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106df3	obj/kernel.asm	/^c0106df3:	8b 00                	mov    (%eax),%eax$/;"	l
c0106df5	obj/kernel.asm	/^c0106df5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106df8	obj/kernel.asm	/^c0106df8:	50                   	push   %eax$/;"	l
c0106df9	obj/kernel.asm	/^c0106df9:	e8 e3 f5 ff ff       	call   c01063e1 <pa2page>$/;"	l
c0106dfe	obj/kernel.asm	/^c0106dfe:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106e01	obj/kernel.asm	/^c0106e01:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106e04	obj/kernel.asm	/^c0106e04:	6a 01                	push   $0x1$/;"	l
c0106e06	obj/kernel.asm	/^c0106e06:	50                   	push   %eax$/;"	l
c0106e07	obj/kernel.asm	/^c0106e07:	e8 a1 cb ff ff       	call   c01039ad <free_pages>$/;"	l
c0106e0c	obj/kernel.asm	/^c0106e0c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106e0f	obj/kernel.asm	/^c0106e0f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106e12	obj/kernel.asm	/^c0106e12:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0106e18	obj/kernel.asm	/^c0106e18:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106e1b	obj/kernel.asm	/^c0106e1b:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0106e22	obj/kernel.asm	/^c0106e22:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106e25	obj/kernel.asm	/^c0106e25:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0106e28	obj/kernel.asm	/^c0106e28:	e8 93 e7 ff ff       	call   c01055c0 <mm_destroy>$/;"	l
c0106e2d	obj/kernel.asm	/^c0106e2d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106e30	obj/kernel.asm	/^c0106e30:	c7 05 1c 12 15 c0 00 	movl   $0x0,0xc015121c$/;"	l
c0106e37	obj/kernel.asm	/^c0106e37:	00 00 00 $/;"	l
c0106e3a	obj/kernel.asm	/^c0106e3a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0106e3d	obj/kernel.asm	/^c0106e3d:	a3 f4 12 15 c0       	mov    %eax,0xc01512f4$/;"	l
c0106e42	obj/kernel.asm	/^c0106e42:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0106e45	obj/kernel.asm	/^c0106e45:	8b 55 9c             	mov    -0x64(%ebp),%edx$/;"	l
c0106e48	obj/kernel.asm	/^c0106e48:	a3 ec 12 15 c0       	mov    %eax,0xc01512ec$/;"	l
c0106e4d	obj/kernel.asm	/^c0106e4d:	89 15 f0 12 15 c0    	mov    %edx,0xc01512f0$/;"	l
c0106e53	obj/kernel.asm	/^c0106e53:	c7 45 e8 ec 12 15 c0 	movl   $0xc01512ec,-0x18(%ebp)$/;"	l
c0106e5a	obj/kernel.asm	/^c0106e5a:	eb 1d                	jmp    c0106e79 <check_swap+0x5ad>$/;"	l
c0106e5c	obj/kernel.asm	/^c0106e5c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106e5f	obj/kernel.asm	/^c0106e5f:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0106e62	obj/kernel.asm	/^c0106e62:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0106e65	obj/kernel.asm	/^c0106e65:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0106e69	obj/kernel.asm	/^c0106e69:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0106e6c	obj/kernel.asm	/^c0106e6c:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0106e6f	obj/kernel.asm	/^c0106e6f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0106e72	obj/kernel.asm	/^c0106e72:	29 c2                	sub    %eax,%edx$/;"	l
c0106e74	obj/kernel.asm	/^c0106e74:	89 d0                	mov    %edx,%eax$/;"	l
c0106e76	obj/kernel.asm	/^c0106e76:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106e79	obj/kernel.asm	/^c0106e79:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106e7c	obj/kernel.asm	/^c0106e7c:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c0106e7f	obj/kernel.asm	/^c0106e7f:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0106e82	obj/kernel.asm	/^c0106e82:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106e85	obj/kernel.asm	/^c0106e85:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106e88	obj/kernel.asm	/^c0106e88:	81 7d e8 ec 12 15 c0 	cmpl   $0xc01512ec,-0x18(%ebp)$/;"	l
c0106e8f	obj/kernel.asm	/^c0106e8f:	75 cb                	jne    c0106e5c <check_swap+0x590>$/;"	l
c0106e91	obj/kernel.asm	/^c0106e91:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106e94	obj/kernel.asm	/^c0106e94:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0106e97	obj/kernel.asm	/^c0106e97:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106e9a	obj/kernel.asm	/^c0106e9a:	68 85 51 11 c0       	push   $0xc0115185$/;"	l
c0106e9f	obj/kernel.asm	/^c0106e9f:	e8 c6 94 ff ff       	call   c010036a <cprintf>$/;"	l
c0106ea4	obj/kernel.asm	/^c0106ea4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106ea7	obj/kernel.asm	/^c0106ea7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106eaa	obj/kernel.asm	/^c0106eaa:	68 9f 51 11 c0       	push   $0xc011519f$/;"	l
c0106eaf	obj/kernel.asm	/^c0106eaf:	e8 b6 94 ff ff       	call   c010036a <cprintf>$/;"	l
c0106eb4	obj/kernel.asm	/^c0106eb4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106eb7	obj/kernel.asm	/^c0106eb7:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0106eba	obj/kernel.asm	/^c0106eba:	c9                   	leave  $/;"	l
c0106ebb	obj/kernel.asm	/^c0106ebb:	c3                   	ret    $/;"	l
c0106ebc	obj/kernel.asm	/^c0106ebc <__intr_save>:$/;"	l
c0106ebc	obj/kernel.asm	/^c0106ebc:	55                   	push   %ebp$/;"	l
c0106ebd	obj/kernel.asm	/^c0106ebd:	89 e5                	mov    %esp,%ebp$/;"	l
c0106ebf	obj/kernel.asm	/^c0106ebf:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106ec2	obj/kernel.asm	/^c0106ec2:	9c                   	pushf  $/;"	l
c0106ec3	obj/kernel.asm	/^c0106ec3:	58                   	pop    %eax$/;"	l
c0106ec4	obj/kernel.asm	/^c0106ec4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106ec7	obj/kernel.asm	/^c0106ec7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106eca	obj/kernel.asm	/^c0106eca:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0106ecf	obj/kernel.asm	/^c0106ecf:	85 c0                	test   %eax,%eax$/;"	l
c0106ed1	obj/kernel.asm	/^c0106ed1:	74 0c                	je     c0106edf <__intr_save+0x23>$/;"	l
c0106ed3	obj/kernel.asm	/^c0106ed3:	e8 c4 b2 ff ff       	call   c010219c <intr_disable>$/;"	l
c0106ed8	obj/kernel.asm	/^c0106ed8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0106edd	obj/kernel.asm	/^c0106edd:	eb 05                	jmp    c0106ee4 <__intr_save+0x28>$/;"	l
c0106edf	obj/kernel.asm	/^c0106edf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106ee4	obj/kernel.asm	/^c0106ee4:	c9                   	leave  $/;"	l
c0106ee5	obj/kernel.asm	/^c0106ee5:	c3                   	ret    $/;"	l
c0106ee6	obj/kernel.asm	/^c0106ee6 <__intr_restore>:$/;"	l
c0106ee6	obj/kernel.asm	/^c0106ee6:	55                   	push   %ebp$/;"	l
c0106ee7	obj/kernel.asm	/^c0106ee7:	89 e5                	mov    %esp,%ebp$/;"	l
c0106ee9	obj/kernel.asm	/^c0106ee9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106eec	obj/kernel.asm	/^c0106eec:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0106ef0	obj/kernel.asm	/^c0106ef0:	74 05                	je     c0106ef7 <__intr_restore+0x11>$/;"	l
c0106ef2	obj/kernel.asm	/^c0106ef2:	e8 9f b2 ff ff       	call   c0102196 <intr_enable>$/;"	l
c0106ef7	obj/kernel.asm	/^c0106ef7:	c9                   	leave  $/;"	l
c0106ef8	obj/kernel.asm	/^c0106ef8:	c3                   	ret    $/;"	l
c0106ef9	obj/kernel.asm	/^c0106ef9 <page2ppn>:$/;"	l
c0106ef9	obj/kernel.asm	/^c0106ef9:	55                   	push   %ebp$/;"	l
c0106efa	obj/kernel.asm	/^c0106efa:	89 e5                	mov    %esp,%ebp$/;"	l
c0106efc	obj/kernel.asm	/^c0106efc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106eff	obj/kernel.asm	/^c0106eff:	8b 15 18 12 15 c0    	mov    0xc0151218,%edx$/;"	l
c0106f05	obj/kernel.asm	/^c0106f05:	29 d0                	sub    %edx,%eax$/;"	l
c0106f07	obj/kernel.asm	/^c0106f07:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0106f0a	obj/kernel.asm	/^c0106f0a:	5d                   	pop    %ebp$/;"	l
c0106f0b	obj/kernel.asm	/^c0106f0b:	c3                   	ret    $/;"	l
c0106f0c	obj/kernel.asm	/^c0106f0c <page2pa>:$/;"	l
c0106f0c	obj/kernel.asm	/^c0106f0c:	55                   	push   %ebp$/;"	l
c0106f0d	obj/kernel.asm	/^c0106f0d:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f0f	obj/kernel.asm	/^c0106f0f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106f12	obj/kernel.asm	/^c0106f12:	e8 e2 ff ff ff       	call   c0106ef9 <page2ppn>$/;"	l
c0106f17	obj/kernel.asm	/^c0106f17:	83 c4 04             	add    $0x4,%esp$/;"	l
c0106f1a	obj/kernel.asm	/^c0106f1a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0106f1d	obj/kernel.asm	/^c0106f1d:	c9                   	leave  $/;"	l
c0106f1e	obj/kernel.asm	/^c0106f1e:	c3                   	ret    $/;"	l
c0106f1f	obj/kernel.asm	/^c0106f1f <pa2page>:$/;"	l
c0106f1f	obj/kernel.asm	/^c0106f1f:	55                   	push   %ebp$/;"	l
c0106f20	obj/kernel.asm	/^c0106f20:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f22	obj/kernel.asm	/^c0106f22:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106f25	obj/kernel.asm	/^c0106f25:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106f28	obj/kernel.asm	/^c0106f28:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106f2b	obj/kernel.asm	/^c0106f2b:	89 c2                	mov    %eax,%edx$/;"	l
c0106f2d	obj/kernel.asm	/^c0106f2d:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c0106f32	obj/kernel.asm	/^c0106f32:	39 c2                	cmp    %eax,%edx$/;"	l
c0106f34	obj/kernel.asm	/^c0106f34:	72 14                	jb     c0106f4a <pa2page+0x2b>$/;"	l
c0106f36	obj/kernel.asm	/^c0106f36:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106f39	obj/kernel.asm	/^c0106f39:	68 b8 51 11 c0       	push   $0xc01151b8$/;"	l
c0106f3e	obj/kernel.asm	/^c0106f3e:	6a 5e                	push   $0x5e$/;"	l
c0106f40	obj/kernel.asm	/^c0106f40:	68 d7 51 11 c0       	push   $0xc01151d7$/;"	l
c0106f45	obj/kernel.asm	/^c0106f45:	e8 85 95 ff ff       	call   c01004cf <__panic>$/;"	l
c0106f4a	obj/kernel.asm	/^c0106f4a:	a1 18 12 15 c0       	mov    0xc0151218,%eax$/;"	l
c0106f4f	obj/kernel.asm	/^c0106f4f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106f52	obj/kernel.asm	/^c0106f52:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0106f55	obj/kernel.asm	/^c0106f55:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0106f58	obj/kernel.asm	/^c0106f58:	01 d0                	add    %edx,%eax$/;"	l
c0106f5a	obj/kernel.asm	/^c0106f5a:	c9                   	leave  $/;"	l
c0106f5b	obj/kernel.asm	/^c0106f5b:	c3                   	ret    $/;"	l
c0106f5c	obj/kernel.asm	/^c0106f5c <page2kva>:$/;"	l
c0106f5c	obj/kernel.asm	/^c0106f5c:	55                   	push   %ebp$/;"	l
c0106f5d	obj/kernel.asm	/^c0106f5d:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f5f	obj/kernel.asm	/^c0106f5f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106f62	obj/kernel.asm	/^c0106f62:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106f65	obj/kernel.asm	/^c0106f65:	e8 a2 ff ff ff       	call   c0106f0c <page2pa>$/;"	l
c0106f6a	obj/kernel.asm	/^c0106f6a:	83 c4 04             	add    $0x4,%esp$/;"	l
c0106f6d	obj/kernel.asm	/^c0106f6d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106f70	obj/kernel.asm	/^c0106f70:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106f73	obj/kernel.asm	/^c0106f73:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106f76	obj/kernel.asm	/^c0106f76:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106f79	obj/kernel.asm	/^c0106f79:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c0106f7e	obj/kernel.asm	/^c0106f7e:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0106f81	obj/kernel.asm	/^c0106f81:	72 14                	jb     c0106f97 <page2kva+0x3b>$/;"	l
c0106f83	obj/kernel.asm	/^c0106f83:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106f86	obj/kernel.asm	/^c0106f86:	68 e8 51 11 c0       	push   $0xc01151e8$/;"	l
c0106f8b	obj/kernel.asm	/^c0106f8b:	6a 65                	push   $0x65$/;"	l
c0106f8d	obj/kernel.asm	/^c0106f8d:	68 d7 51 11 c0       	push   $0xc01151d7$/;"	l
c0106f92	obj/kernel.asm	/^c0106f92:	e8 38 95 ff ff       	call   c01004cf <__panic>$/;"	l
c0106f97	obj/kernel.asm	/^c0106f97:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106f9a	obj/kernel.asm	/^c0106f9a:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0106f9f	obj/kernel.asm	/^c0106f9f:	c9                   	leave  $/;"	l
c0106fa0	obj/kernel.asm	/^c0106fa0:	c3                   	ret    $/;"	l
c0106fa1	obj/kernel.asm	/^c0106fa1 <kva2page>:$/;"	l
c0106fa1	obj/kernel.asm	/^c0106fa1:	55                   	push   %ebp$/;"	l
c0106fa2	obj/kernel.asm	/^c0106fa2:	89 e5                	mov    %esp,%ebp$/;"	l
c0106fa4	obj/kernel.asm	/^c0106fa4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106fa7	obj/kernel.asm	/^c0106fa7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106faa	obj/kernel.asm	/^c0106faa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106fad	obj/kernel.asm	/^c0106fad:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0106fb4	obj/kernel.asm	/^c0106fb4:	77 14                	ja     c0106fca <kva2page+0x29>$/;"	l
c0106fb6	obj/kernel.asm	/^c0106fb6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106fb9	obj/kernel.asm	/^c0106fb9:	68 0c 52 11 c0       	push   $0xc011520c$/;"	l
c0106fbe	obj/kernel.asm	/^c0106fbe:	6a 6a                	push   $0x6a$/;"	l
c0106fc0	obj/kernel.asm	/^c0106fc0:	68 d7 51 11 c0       	push   $0xc01151d7$/;"	l
c0106fc5	obj/kernel.asm	/^c0106fc5:	e8 05 95 ff ff       	call   c01004cf <__panic>$/;"	l
c0106fca	obj/kernel.asm	/^c0106fca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106fcd	obj/kernel.asm	/^c0106fcd:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0106fd2	obj/kernel.asm	/^c0106fd2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106fd5	obj/kernel.asm	/^c0106fd5:	50                   	push   %eax$/;"	l
c0106fd6	obj/kernel.asm	/^c0106fd6:	e8 44 ff ff ff       	call   c0106f1f <pa2page>$/;"	l
c0106fdb	obj/kernel.asm	/^c0106fdb:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106fde	obj/kernel.asm	/^c0106fde:	c9                   	leave  $/;"	l
c0106fdf	obj/kernel.asm	/^c0106fdf:	c3                   	ret    $/;"	l
c0106fe0	obj/kernel.asm	/^c0106fe0 <__slob_get_free_pages>:$/;"	l
c0106fe0	obj/kernel.asm	/^c0106fe0:	55                   	push   %ebp$/;"	l
c0106fe1	obj/kernel.asm	/^c0106fe1:	89 e5                	mov    %esp,%ebp$/;"	l
c0106fe3	obj/kernel.asm	/^c0106fe3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106fe6	obj/kernel.asm	/^c0106fe6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106fe9	obj/kernel.asm	/^c0106fe9:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0106fee	obj/kernel.asm	/^c0106fee:	89 c1                	mov    %eax,%ecx$/;"	l
c0106ff0	obj/kernel.asm	/^c0106ff0:	d3 e2                	shl    %cl,%edx$/;"	d
c0106ff2	obj/kernel.asm	/^c0106ff2:	89 d0                	mov    %edx,%eax$/;"	l
c0106ff4	obj/kernel.asm	/^c0106ff4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106ff7	obj/kernel.asm	/^c0106ff7:	50                   	push   %eax$/;"	l
c0106ff8	obj/kernel.asm	/^c0106ff8:	e8 44 c9 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c0106ffd	obj/kernel.asm	/^c0106ffd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107000	obj/kernel.asm	/^c0107000:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107003	obj/kernel.asm	/^c0107003:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107007	obj/kernel.asm	/^c0107007:	75 07                	jne    c0107010 <__slob_get_free_pages+0x30>$/;"	l
c0107009	obj/kernel.asm	/^c0107009:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010700e	obj/kernel.asm	/^c010700e:	eb 0e                	jmp    c010701e <__slob_get_free_pages+0x3e>$/;"	l
c0107010	obj/kernel.asm	/^c0107010:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107013	obj/kernel.asm	/^c0107013:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0107016	obj/kernel.asm	/^c0107016:	e8 41 ff ff ff       	call   c0106f5c <page2kva>$/;"	l
c010701b	obj/kernel.asm	/^c010701b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010701e	obj/kernel.asm	/^c010701e:	c9                   	leave  $/;"	l
c010701f	obj/kernel.asm	/^c010701f:	c3                   	ret    $/;"	l
c0107020	obj/kernel.asm	/^c0107020 <__slob_free_pages>:$/;"	l
c0107020	obj/kernel.asm	/^c0107020:	55                   	push   %ebp$/;"	l
c0107021	obj/kernel.asm	/^c0107021:	89 e5                	mov    %esp,%ebp$/;"	l
c0107023	obj/kernel.asm	/^c0107023:	53                   	push   %ebx$/;"	l
c0107024	obj/kernel.asm	/^c0107024:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0107027	obj/kernel.asm	/^c0107027:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010702a	obj/kernel.asm	/^c010702a:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c010702f	obj/kernel.asm	/^c010702f:	89 c1                	mov    %eax,%ecx$/;"	l
c0107031	obj/kernel.asm	/^c0107031:	d3 e2                	shl    %cl,%edx$/;"	d
c0107033	obj/kernel.asm	/^c0107033:	89 d0                	mov    %edx,%eax$/;"	l
c0107035	obj/kernel.asm	/^c0107035:	89 c3                	mov    %eax,%ebx$/;"	l
c0107037	obj/kernel.asm	/^c0107037:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010703a	obj/kernel.asm	/^c010703a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010703d	obj/kernel.asm	/^c010703d:	50                   	push   %eax$/;"	l
c010703e	obj/kernel.asm	/^c010703e:	e8 5e ff ff ff       	call   c0106fa1 <kva2page>$/;"	l
c0107043	obj/kernel.asm	/^c0107043:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107046	obj/kernel.asm	/^c0107046:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107049	obj/kernel.asm	/^c0107049:	53                   	push   %ebx$/;"	l
c010704a	obj/kernel.asm	/^c010704a:	50                   	push   %eax$/;"	l
c010704b	obj/kernel.asm	/^c010704b:	e8 5d c9 ff ff       	call   c01039ad <free_pages>$/;"	l
c0107050	obj/kernel.asm	/^c0107050:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107053	obj/kernel.asm	/^c0107053:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0107056	obj/kernel.asm	/^c0107056:	c9                   	leave  $/;"	l
c0107057	obj/kernel.asm	/^c0107057:	c3                   	ret    $/;"	l
c0107058	obj/kernel.asm	/^c0107058 <slob_alloc>:$/;"	l
c0107058	obj/kernel.asm	/^c0107058:	55                   	push   %ebp$/;"	l
c0107059	obj/kernel.asm	/^c0107059:	89 e5                	mov    %esp,%ebp$/;"	l
c010705b	obj/kernel.asm	/^c010705b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010705e	obj/kernel.asm	/^c010705e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107061	obj/kernel.asm	/^c0107061:	83 c0 08             	add    $0x8,%eax$/;"	l
c0107064	obj/kernel.asm	/^c0107064:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c0107069	obj/kernel.asm	/^c0107069:	76 16                	jbe    c0107081 <slob_alloc+0x29>$/;"	l
c010706b	obj/kernel.asm	/^c010706b:	68 30 52 11 c0       	push   $0xc0115230$/;"	l
c0107070	obj/kernel.asm	/^c0107070:	68 4f 52 11 c0       	push   $0xc011524f$/;"	l
c0107075	obj/kernel.asm	/^c0107075:	6a 64                	push   $0x64$/;"	l
c0107077	obj/kernel.asm	/^c0107077:	68 64 52 11 c0       	push   $0xc0115264$/;"	l
c010707c	obj/kernel.asm	/^c010707c:	e8 4e 94 ff ff       	call   c01004cf <__panic>$/;"	l
c0107081	obj/kernel.asm	/^c0107081:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0107088	obj/kernel.asm	/^c0107088:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c010708f	obj/kernel.asm	/^c010708f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107092	obj/kernel.asm	/^c0107092:	83 c0 07             	add    $0x7,%eax$/;"	l
c0107095	obj/kernel.asm	/^c0107095:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c0107098	obj/kernel.asm	/^c0107098:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010709b	obj/kernel.asm	/^c010709b:	e8 1c fe ff ff       	call   c0106ebc <__intr_save>$/;"	l
c01070a0	obj/kernel.asm	/^c01070a0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01070a3	obj/kernel.asm	/^c01070a3:	a1 a0 ca 14 c0       	mov    0xc014caa0,%eax$/;"	l
c01070a8	obj/kernel.asm	/^c01070a8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01070ab	obj/kernel.asm	/^c01070ab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01070ae	obj/kernel.asm	/^c01070ae:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01070b1	obj/kernel.asm	/^c01070b1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01070b4	obj/kernel.asm	/^c01070b4:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01070b8	obj/kernel.asm	/^c01070b8:	74 25                	je     c01070df <slob_alloc+0x87>$/;"	l
c01070ba	obj/kernel.asm	/^c01070ba:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01070bd	obj/kernel.asm	/^c01070bd:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01070c0	obj/kernel.asm	/^c01070c0:	01 d0                	add    %edx,%eax$/;"	l
c01070c2	obj/kernel.asm	/^c01070c2:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01070c5	obj/kernel.asm	/^c01070c5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01070c8	obj/kernel.asm	/^c01070c8:	f7 d8                	neg    %eax$/;"	l
c01070ca	obj/kernel.asm	/^c01070ca:	21 d0                	and    %edx,%eax$/;"	l
c01070cc	obj/kernel.asm	/^c01070cc:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01070cf	obj/kernel.asm	/^c01070cf:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01070d2	obj/kernel.asm	/^c01070d2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01070d5	obj/kernel.asm	/^c01070d5:	29 c2                	sub    %eax,%edx$/;"	l
c01070d7	obj/kernel.asm	/^c01070d7:	89 d0                	mov    %edx,%eax$/;"	l
c01070d9	obj/kernel.asm	/^c01070d9:	c1 f8 03             	sar    $0x3,%eax$/;"	l
c01070dc	obj/kernel.asm	/^c01070dc:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01070df	obj/kernel.asm	/^c01070df:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01070e2	obj/kernel.asm	/^c01070e2:	8b 00                	mov    (%eax),%eax$/;"	l
c01070e4	obj/kernel.asm	/^c01070e4:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c01070e7	obj/kernel.asm	/^c01070e7:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01070ea	obj/kernel.asm	/^c01070ea:	01 ca                	add    %ecx,%edx$/;"	l
c01070ec	obj/kernel.asm	/^c01070ec:	39 d0                	cmp    %edx,%eax$/;"	l
c01070ee	obj/kernel.asm	/^c01070ee:	0f 8c b1 00 00 00    	jl     c01071a5 <slob_alloc+0x14d>$/;"	l
c01070f4	obj/kernel.asm	/^c01070f4:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01070f8	obj/kernel.asm	/^c01070f8:	74 38                	je     c0107132 <slob_alloc+0xda>$/;"	l
c01070fa	obj/kernel.asm	/^c01070fa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01070fd	obj/kernel.asm	/^c01070fd:	8b 00                	mov    (%eax),%eax$/;"	l
c01070ff	obj/kernel.asm	/^c01070ff:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
c0107102	obj/kernel.asm	/^c0107102:	89 c2                	mov    %eax,%edx$/;"	l
c0107104	obj/kernel.asm	/^c0107104:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107107	obj/kernel.asm	/^c0107107:	89 10                	mov    %edx,(%eax)$/;"	l
c0107109	obj/kernel.asm	/^c0107109:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010710c	obj/kernel.asm	/^c010710c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010710f	obj/kernel.asm	/^c010710f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107112	obj/kernel.asm	/^c0107112:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107115	obj/kernel.asm	/^c0107115:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107118	obj/kernel.asm	/^c0107118:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010711b	obj/kernel.asm	/^c010711b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010711e	obj/kernel.asm	/^c010711e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107121	obj/kernel.asm	/^c0107121:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0107124	obj/kernel.asm	/^c0107124:	89 10                	mov    %edx,(%eax)$/;"	l
c0107126	obj/kernel.asm	/^c0107126:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107129	obj/kernel.asm	/^c0107129:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010712c	obj/kernel.asm	/^c010712c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010712f	obj/kernel.asm	/^c010712f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107132	obj/kernel.asm	/^c0107132:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107135	obj/kernel.asm	/^c0107135:	8b 00                	mov    (%eax),%eax$/;"	l
c0107137	obj/kernel.asm	/^c0107137:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c010713a	obj/kernel.asm	/^c010713a:	75 0e                	jne    c010714a <slob_alloc+0xf2>$/;"	l
c010713c	obj/kernel.asm	/^c010713c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010713f	obj/kernel.asm	/^c010713f:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107142	obj/kernel.asm	/^c0107142:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107145	obj/kernel.asm	/^c0107145:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107148	obj/kernel.asm	/^c0107148:	eb 3c                	jmp    c0107186 <slob_alloc+0x12e>$/;"	l
c010714a	obj/kernel.asm	/^c010714a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010714d	obj/kernel.asm	/^c010714d:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0107154	obj/kernel.asm	/^c0107154:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107157	obj/kernel.asm	/^c0107157:	01 c2                	add    %eax,%edx$/;"	l
c0107159	obj/kernel.asm	/^c0107159:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010715c	obj/kernel.asm	/^c010715c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010715f	obj/kernel.asm	/^c010715f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107162	obj/kernel.asm	/^c0107162:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107165	obj/kernel.asm	/^c0107165:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0107168	obj/kernel.asm	/^c0107168:	8b 12                	mov    (%edx),%edx$/;"	l
c010716a	obj/kernel.asm	/^c010716a:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
c010716d	obj/kernel.asm	/^c010716d:	89 10                	mov    %edx,(%eax)$/;"	l
c010716f	obj/kernel.asm	/^c010716f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107172	obj/kernel.asm	/^c0107172:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107175	obj/kernel.asm	/^c0107175:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0107178	obj/kernel.asm	/^c0107178:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
c010717b	obj/kernel.asm	/^c010717b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010717e	obj/kernel.asm	/^c010717e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107181	obj/kernel.asm	/^c0107181:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0107184	obj/kernel.asm	/^c0107184:	89 10                	mov    %edx,(%eax)$/;"	l
c0107186	obj/kernel.asm	/^c0107186:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107189	obj/kernel.asm	/^c0107189:	a3 a0 ca 14 c0       	mov    %eax,0xc014caa0$/;"	l
c010718e	obj/kernel.asm	/^c010718e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107191	obj/kernel.asm	/^c0107191:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107194	obj/kernel.asm	/^c0107194:	50                   	push   %eax$/;"	l
c0107195	obj/kernel.asm	/^c0107195:	e8 4c fd ff ff       	call   c0106ee6 <__intr_restore>$/;"	l
c010719a	obj/kernel.asm	/^c010719a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010719d	obj/kernel.asm	/^c010719d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071a0	obj/kernel.asm	/^c01071a0:	e9 80 00 00 00       	jmp    c0107225 <slob_alloc+0x1cd>$/;"	l
c01071a5	obj/kernel.asm	/^c01071a5:	a1 a0 ca 14 c0       	mov    0xc014caa0,%eax$/;"	l
c01071aa	obj/kernel.asm	/^c01071aa:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c01071ad	obj/kernel.asm	/^c01071ad:	75 62                	jne    c0107211 <slob_alloc+0x1b9>$/;"	l
c01071af	obj/kernel.asm	/^c01071af:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01071b2	obj/kernel.asm	/^c01071b2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01071b5	obj/kernel.asm	/^c01071b5:	50                   	push   %eax$/;"	l
c01071b6	obj/kernel.asm	/^c01071b6:	e8 2b fd ff ff       	call   c0106ee6 <__intr_restore>$/;"	l
c01071bb	obj/kernel.asm	/^c01071bb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01071be	obj/kernel.asm	/^c01071be:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c01071c5	obj/kernel.asm	/^c01071c5:	75 07                	jne    c01071ce <slob_alloc+0x176>$/;"	l
c01071c7	obj/kernel.asm	/^c01071c7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01071cc	obj/kernel.asm	/^c01071cc:	eb 57                	jmp    c0107225 <slob_alloc+0x1cd>$/;"	l
c01071ce	obj/kernel.asm	/^c01071ce:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01071d1	obj/kernel.asm	/^c01071d1:	6a 00                	push   $0x0$/;"	l
c01071d3	obj/kernel.asm	/^c01071d3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01071d6	obj/kernel.asm	/^c01071d6:	e8 05 fe ff ff       	call   c0106fe0 <__slob_get_free_pages>$/;"	l
c01071db	obj/kernel.asm	/^c01071db:	83 c4 10             	add    $0x10,%esp$/;"	l
c01071de	obj/kernel.asm	/^c01071de:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01071e1	obj/kernel.asm	/^c01071e1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01071e5	obj/kernel.asm	/^c01071e5:	75 07                	jne    c01071ee <slob_alloc+0x196>$/;"	l
c01071e7	obj/kernel.asm	/^c01071e7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01071ec	obj/kernel.asm	/^c01071ec:	eb 37                	jmp    c0107225 <slob_alloc+0x1cd>$/;"	l
c01071ee	obj/kernel.asm	/^c01071ee:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01071f1	obj/kernel.asm	/^c01071f1:	68 00 10 00 00       	push   $0x1000$/;"	l
c01071f6	obj/kernel.asm	/^c01071f6:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01071f9	obj/kernel.asm	/^c01071f9:	e8 29 00 00 00       	call   c0107227 <slob_free>$/;"	l
c01071fe	obj/kernel.asm	/^c01071fe:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107201	obj/kernel.asm	/^c0107201:	e8 b6 fc ff ff       	call   c0106ebc <__intr_save>$/;"	l
c0107206	obj/kernel.asm	/^c0107206:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107209	obj/kernel.asm	/^c0107209:	a1 a0 ca 14 c0       	mov    0xc014caa0,%eax$/;"	l
c010720e	obj/kernel.asm	/^c010720e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107211	obj/kernel.asm	/^c0107211:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107214	obj/kernel.asm	/^c0107214:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107217	obj/kernel.asm	/^c0107217:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010721a	obj/kernel.asm	/^c010721a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010721d	obj/kernel.asm	/^c010721d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107220	obj/kernel.asm	/^c0107220:	e9 8f fe ff ff       	jmp    c01070b4 <slob_alloc+0x5c>$/;"	l
c0107225	obj/kernel.asm	/^c0107225:	c9                   	leave  $/;"	l
c0107226	obj/kernel.asm	/^c0107226:	c3                   	ret    $/;"	l
c0107227	obj/kernel.asm	/^c0107227 <slob_free>:$/;"	l
c0107227	obj/kernel.asm	/^c0107227:	55                   	push   %ebp$/;"	l
c0107228	obj/kernel.asm	/^c0107228:	89 e5                	mov    %esp,%ebp$/;"	l
c010722a	obj/kernel.asm	/^c010722a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010722d	obj/kernel.asm	/^c010722d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107230	obj/kernel.asm	/^c0107230:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107233	obj/kernel.asm	/^c0107233:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0107237	obj/kernel.asm	/^c0107237:	75 05                	jne    c010723e <slob_free+0x17>$/;"	l
c0107239	obj/kernel.asm	/^c0107239:	e9 03 01 00 00       	jmp    c0107341 <slob_free+0x11a>$/;"	l
c010723e	obj/kernel.asm	/^c010723e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0107242	obj/kernel.asm	/^c0107242:	74 10                	je     c0107254 <slob_free+0x2d>$/;"	l
c0107244	obj/kernel.asm	/^c0107244:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107247	obj/kernel.asm	/^c0107247:	83 c0 07             	add    $0x7,%eax$/;"	l
c010724a	obj/kernel.asm	/^c010724a:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c010724d	obj/kernel.asm	/^c010724d:	89 c2                	mov    %eax,%edx$/;"	l
c010724f	obj/kernel.asm	/^c010724f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107252	obj/kernel.asm	/^c0107252:	89 10                	mov    %edx,(%eax)$/;"	l
c0107254	obj/kernel.asm	/^c0107254:	e8 63 fc ff ff       	call   c0106ebc <__intr_save>$/;"	l
c0107259	obj/kernel.asm	/^c0107259:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010725c	obj/kernel.asm	/^c010725c:	a1 a0 ca 14 c0       	mov    0xc014caa0,%eax$/;"	l
c0107261	obj/kernel.asm	/^c0107261:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107264	obj/kernel.asm	/^c0107264:	eb 27                	jmp    c010728d <slob_free+0x66>$/;"	l
c0107266	obj/kernel.asm	/^c0107266:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107269	obj/kernel.asm	/^c0107269:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010726c	obj/kernel.asm	/^c010726c:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010726f	obj/kernel.asm	/^c010726f:	77 13                	ja     c0107284 <slob_free+0x5d>$/;"	l
c0107271	obj/kernel.asm	/^c0107271:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107274	obj/kernel.asm	/^c0107274:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107277	obj/kernel.asm	/^c0107277:	77 27                	ja     c01072a0 <slob_free+0x79>$/;"	l
c0107279	obj/kernel.asm	/^c0107279:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010727c	obj/kernel.asm	/^c010727c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010727f	obj/kernel.asm	/^c010727f:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0107282	obj/kernel.asm	/^c0107282:	77 1c                	ja     c01072a0 <slob_free+0x79>$/;"	l
c0107284	obj/kernel.asm	/^c0107284:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107287	obj/kernel.asm	/^c0107287:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010728a	obj/kernel.asm	/^c010728a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010728d	obj/kernel.asm	/^c010728d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107290	obj/kernel.asm	/^c0107290:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107293	obj/kernel.asm	/^c0107293:	76 d1                	jbe    c0107266 <slob_free+0x3f>$/;"	l
c0107295	obj/kernel.asm	/^c0107295:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107298	obj/kernel.asm	/^c0107298:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010729b	obj/kernel.asm	/^c010729b:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010729e	obj/kernel.asm	/^c010729e:	76 c6                	jbe    c0107266 <slob_free+0x3f>$/;"	l
c01072a0	obj/kernel.asm	/^c01072a0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01072a3	obj/kernel.asm	/^c01072a3:	8b 00                	mov    (%eax),%eax$/;"	l
c01072a5	obj/kernel.asm	/^c01072a5:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01072ac	obj/kernel.asm	/^c01072ac:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01072af	obj/kernel.asm	/^c01072af:	01 c2                	add    %eax,%edx$/;"	l
c01072b1	obj/kernel.asm	/^c01072b1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01072b4	obj/kernel.asm	/^c01072b4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01072b7	obj/kernel.asm	/^c01072b7:	39 c2                	cmp    %eax,%edx$/;"	l
c01072b9	obj/kernel.asm	/^c01072b9:	75 25                	jne    c01072e0 <slob_free+0xb9>$/;"	l
c01072bb	obj/kernel.asm	/^c01072bb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01072be	obj/kernel.asm	/^c01072be:	8b 10                	mov    (%eax),%edx$/;"	l
c01072c0	obj/kernel.asm	/^c01072c0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01072c3	obj/kernel.asm	/^c01072c3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01072c6	obj/kernel.asm	/^c01072c6:	8b 00                	mov    (%eax),%eax$/;"	l
c01072c8	obj/kernel.asm	/^c01072c8:	01 c2                	add    %eax,%edx$/;"	l
c01072ca	obj/kernel.asm	/^c01072ca:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01072cd	obj/kernel.asm	/^c01072cd:	89 10                	mov    %edx,(%eax)$/;"	l
c01072cf	obj/kernel.asm	/^c01072cf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01072d2	obj/kernel.asm	/^c01072d2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01072d5	obj/kernel.asm	/^c01072d5:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01072d8	obj/kernel.asm	/^c01072d8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01072db	obj/kernel.asm	/^c01072db:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01072de	obj/kernel.asm	/^c01072de:	eb 0c                	jmp    c01072ec <slob_free+0xc5>$/;"	l
c01072e0	obj/kernel.asm	/^c01072e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01072e3	obj/kernel.asm	/^c01072e3:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01072e6	obj/kernel.asm	/^c01072e6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01072e9	obj/kernel.asm	/^c01072e9:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01072ec	obj/kernel.asm	/^c01072ec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01072ef	obj/kernel.asm	/^c01072ef:	8b 00                	mov    (%eax),%eax$/;"	l
c01072f1	obj/kernel.asm	/^c01072f1:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01072f8	obj/kernel.asm	/^c01072f8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01072fb	obj/kernel.asm	/^c01072fb:	01 d0                	add    %edx,%eax$/;"	l
c01072fd	obj/kernel.asm	/^c01072fd:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0107300	obj/kernel.asm	/^c0107300:	75 1f                	jne    c0107321 <slob_free+0xfa>$/;"	l
c0107302	obj/kernel.asm	/^c0107302:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107305	obj/kernel.asm	/^c0107305:	8b 10                	mov    (%eax),%edx$/;"	l
c0107307	obj/kernel.asm	/^c0107307:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010730a	obj/kernel.asm	/^c010730a:	8b 00                	mov    (%eax),%eax$/;"	l
c010730c	obj/kernel.asm	/^c010730c:	01 c2                	add    %eax,%edx$/;"	l
c010730e	obj/kernel.asm	/^c010730e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107311	obj/kernel.asm	/^c0107311:	89 10                	mov    %edx,(%eax)$/;"	l
c0107313	obj/kernel.asm	/^c0107313:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107316	obj/kernel.asm	/^c0107316:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107319	obj/kernel.asm	/^c0107319:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010731c	obj/kernel.asm	/^c010731c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010731f	obj/kernel.asm	/^c010731f:	eb 09                	jmp    c010732a <slob_free+0x103>$/;"	l
c0107321	obj/kernel.asm	/^c0107321:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107324	obj/kernel.asm	/^c0107324:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0107327	obj/kernel.asm	/^c0107327:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010732a	obj/kernel.asm	/^c010732a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010732d	obj/kernel.asm	/^c010732d:	a3 a0 ca 14 c0       	mov    %eax,0xc014caa0$/;"	l
c0107332	obj/kernel.asm	/^c0107332:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107335	obj/kernel.asm	/^c0107335:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107338	obj/kernel.asm	/^c0107338:	50                   	push   %eax$/;"	l
c0107339	obj/kernel.asm	/^c0107339:	e8 a8 fb ff ff       	call   c0106ee6 <__intr_restore>$/;"	l
c010733e	obj/kernel.asm	/^c010733e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107341	obj/kernel.asm	/^c0107341:	c9                   	leave  $/;"	l
c0107342	obj/kernel.asm	/^c0107342:	c3                   	ret    $/;"	l
c0107343	obj/kernel.asm	/^c0107343 <slob_init>:$/;"	l
c0107343	obj/kernel.asm	/^c0107343:	55                   	push   %ebp$/;"	l
c0107344	obj/kernel.asm	/^c0107344:	89 e5                	mov    %esp,%ebp$/;"	l
c0107346	obj/kernel.asm	/^c0107346:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107349	obj/kernel.asm	/^c0107349:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010734c	obj/kernel.asm	/^c010734c:	68 76 52 11 c0       	push   $0xc0115276$/;"	l
c0107351	obj/kernel.asm	/^c0107351:	e8 14 90 ff ff       	call   c010036a <cprintf>$/;"	l
c0107356	obj/kernel.asm	/^c0107356:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107359	obj/kernel.asm	/^c0107359:	c9                   	leave  $/;"	l
c010735a	obj/kernel.asm	/^c010735a:	c3                   	ret    $/;"	l
c010735b	obj/kernel.asm	/^c010735b <kmalloc_init>:$/;"	l
c010735b	obj/kernel.asm	/^c010735b:	55                   	push   %ebp$/;"	l
c010735c	obj/kernel.asm	/^c010735c:	89 e5                	mov    %esp,%ebp$/;"	l
c010735e	obj/kernel.asm	/^c010735e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107361	obj/kernel.asm	/^c0107361:	e8 dd ff ff ff       	call   c0107343 <slob_init>$/;"	l
c0107366	obj/kernel.asm	/^c0107366:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107369	obj/kernel.asm	/^c0107369:	68 8a 52 11 c0       	push   $0xc011528a$/;"	l
c010736e	obj/kernel.asm	/^c010736e:	e8 f7 8f ff ff       	call   c010036a <cprintf>$/;"	l
c0107373	obj/kernel.asm	/^c0107373:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107376	obj/kernel.asm	/^c0107376:	c9                   	leave  $/;"	l
c0107377	obj/kernel.asm	/^c0107377:	c3                   	ret    $/;"	l
c0107378	obj/kernel.asm	/^c0107378 <slob_allocated>:$/;"	l
c0107378	obj/kernel.asm	/^c0107378:	55                   	push   %ebp$/;"	l
c0107379	obj/kernel.asm	/^c0107379:	89 e5                	mov    %esp,%ebp$/;"	l
c010737b	obj/kernel.asm	/^c010737b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107380	obj/kernel.asm	/^c0107380:	5d                   	pop    %ebp$/;"	l
c0107381	obj/kernel.asm	/^c0107381:	c3                   	ret    $/;"	l
c0107382	obj/kernel.asm	/^c0107382 <kallocated>:$/;"	l
c0107382	obj/kernel.asm	/^c0107382:	55                   	push   %ebp$/;"	l
c0107383	obj/kernel.asm	/^c0107383:	89 e5                	mov    %esp,%ebp$/;"	l
c0107385	obj/kernel.asm	/^c0107385:	e8 ee ff ff ff       	call   c0107378 <slob_allocated>$/;"	l
c010738a	obj/kernel.asm	/^c010738a:	5d                   	pop    %ebp$/;"	l
c010738b	obj/kernel.asm	/^c010738b:	c3                   	ret    $/;"	l
c010738c	obj/kernel.asm	/^c010738c <find_order>:$/;"	l
c010738c	obj/kernel.asm	/^c010738c:	55                   	push   %ebp$/;"	l
c010738d	obj/kernel.asm	/^c010738d:	89 e5                	mov    %esp,%ebp$/;"	l
c010738f	obj/kernel.asm	/^c010738f:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0107392	obj/kernel.asm	/^c0107392:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0107399	obj/kernel.asm	/^c0107399:	eb 07                	jmp    c01073a2 <find_order+0x16>$/;"	l
c010739b	obj/kernel.asm	/^c010739b:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010739f	obj/kernel.asm	/^c010739f:	d1 7d 08             	sarl   0x8(%ebp)$/;"	d
c01073a2	obj/kernel.asm	/^c01073a2:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c01073a9	obj/kernel.asm	/^c01073a9:	7f f0                	jg     c010739b <find_order+0xf>$/;"	l
c01073ab	obj/kernel.asm	/^c01073ab:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01073ae	obj/kernel.asm	/^c01073ae:	c9                   	leave  $/;"	l
c01073af	obj/kernel.asm	/^c01073af:	c3                   	ret    $/;"	l
c01073b0	obj/kernel.asm	/^c01073b0 <__kmalloc>:$/;"	l
c01073b0	obj/kernel.asm	/^c01073b0:	55                   	push   %ebp$/;"	l
c01073b1	obj/kernel.asm	/^c01073b1:	89 e5                	mov    %esp,%ebp$/;"	l
c01073b3	obj/kernel.asm	/^c01073b3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01073b6	obj/kernel.asm	/^c01073b6:	81 7d 08 f7 0f 00 00 	cmpl   $0xff7,0x8(%ebp)$/;"	l
c01073bd	obj/kernel.asm	/^c01073bd:	77 35                	ja     c01073f4 <__kmalloc+0x44>$/;"	l
c01073bf	obj/kernel.asm	/^c01073bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01073c2	obj/kernel.asm	/^c01073c2:	83 c0 08             	add    $0x8,%eax$/;"	l
c01073c5	obj/kernel.asm	/^c01073c5:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01073c8	obj/kernel.asm	/^c01073c8:	6a 00                	push   $0x0$/;"	l
c01073ca	obj/kernel.asm	/^c01073ca:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01073cd	obj/kernel.asm	/^c01073cd:	50                   	push   %eax$/;"	l
c01073ce	obj/kernel.asm	/^c01073ce:	e8 85 fc ff ff       	call   c0107058 <slob_alloc>$/;"	l
c01073d3	obj/kernel.asm	/^c01073d3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01073d6	obj/kernel.asm	/^c01073d6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01073d9	obj/kernel.asm	/^c01073d9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01073dd	obj/kernel.asm	/^c01073dd:	74 0b                	je     c01073ea <__kmalloc+0x3a>$/;"	l
c01073df	obj/kernel.asm	/^c01073df:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01073e2	obj/kernel.asm	/^c01073e2:	83 c0 08             	add    $0x8,%eax$/;"	l
c01073e5	obj/kernel.asm	/^c01073e5:	e9 b3 00 00 00       	jmp    c010749d <__kmalloc+0xed>$/;"	l
c01073ea	obj/kernel.asm	/^c01073ea:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01073ef	obj/kernel.asm	/^c01073ef:	e9 a9 00 00 00       	jmp    c010749d <__kmalloc+0xed>$/;"	l
c01073f4	obj/kernel.asm	/^c01073f4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01073f7	obj/kernel.asm	/^c01073f7:	6a 00                	push   $0x0$/;"	l
c01073f9	obj/kernel.asm	/^c01073f9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01073fc	obj/kernel.asm	/^c01073fc:	6a 0c                	push   $0xc$/;"	l
c01073fe	obj/kernel.asm	/^c01073fe:	e8 55 fc ff ff       	call   c0107058 <slob_alloc>$/;"	l
c0107403	obj/kernel.asm	/^c0107403:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107406	obj/kernel.asm	/^c0107406:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107409	obj/kernel.asm	/^c0107409:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010740d	obj/kernel.asm	/^c010740d:	75 0a                	jne    c0107419 <__kmalloc+0x69>$/;"	l
c010740f	obj/kernel.asm	/^c010740f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107414	obj/kernel.asm	/^c0107414:	e9 84 00 00 00       	jmp    c010749d <__kmalloc+0xed>$/;"	l
c0107419	obj/kernel.asm	/^c0107419:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010741c	obj/kernel.asm	/^c010741c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010741f	obj/kernel.asm	/^c010741f:	50                   	push   %eax$/;"	l
c0107420	obj/kernel.asm	/^c0107420:	e8 67 ff ff ff       	call   c010738c <find_order>$/;"	l
c0107425	obj/kernel.asm	/^c0107425:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107428	obj/kernel.asm	/^c0107428:	89 c2                	mov    %eax,%edx$/;"	l
c010742a	obj/kernel.asm	/^c010742a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010742d	obj/kernel.asm	/^c010742d:	89 10                	mov    %edx,(%eax)$/;"	l
c010742f	obj/kernel.asm	/^c010742f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107432	obj/kernel.asm	/^c0107432:	8b 00                	mov    (%eax),%eax$/;"	l
c0107434	obj/kernel.asm	/^c0107434:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107437	obj/kernel.asm	/^c0107437:	50                   	push   %eax$/;"	l
c0107438	obj/kernel.asm	/^c0107438:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010743b	obj/kernel.asm	/^c010743b:	e8 a0 fb ff ff       	call   c0106fe0 <__slob_get_free_pages>$/;"	l
c0107440	obj/kernel.asm	/^c0107440:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107443	obj/kernel.asm	/^c0107443:	89 c2                	mov    %eax,%edx$/;"	l
c0107445	obj/kernel.asm	/^c0107445:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107448	obj/kernel.asm	/^c0107448:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010744b	obj/kernel.asm	/^c010744b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010744e	obj/kernel.asm	/^c010744e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107451	obj/kernel.asm	/^c0107451:	85 c0                	test   %eax,%eax$/;"	l
c0107453	obj/kernel.asm	/^c0107453:	74 33                	je     c0107488 <__kmalloc+0xd8>$/;"	l
c0107455	obj/kernel.asm	/^c0107455:	e8 62 fa ff ff       	call   c0106ebc <__intr_save>$/;"	l
c010745a	obj/kernel.asm	/^c010745a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010745d	obj/kernel.asm	/^c010745d:	8b 15 7c e0 14 c0    	mov    0xc014e07c,%edx$/;"	l
c0107463	obj/kernel.asm	/^c0107463:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107466	obj/kernel.asm	/^c0107466:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107469	obj/kernel.asm	/^c0107469:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010746c	obj/kernel.asm	/^c010746c:	a3 7c e0 14 c0       	mov    %eax,0xc014e07c$/;"	l
c0107471	obj/kernel.asm	/^c0107471:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107474	obj/kernel.asm	/^c0107474:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107477	obj/kernel.asm	/^c0107477:	50                   	push   %eax$/;"	l
c0107478	obj/kernel.asm	/^c0107478:	e8 69 fa ff ff       	call   c0106ee6 <__intr_restore>$/;"	l
c010747d	obj/kernel.asm	/^c010747d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107480	obj/kernel.asm	/^c0107480:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107483	obj/kernel.asm	/^c0107483:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107486	obj/kernel.asm	/^c0107486:	eb 15                	jmp    c010749d <__kmalloc+0xed>$/;"	l
c0107488	obj/kernel.asm	/^c0107488:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010748b	obj/kernel.asm	/^c010748b:	6a 0c                	push   $0xc$/;"	l
c010748d	obj/kernel.asm	/^c010748d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0107490	obj/kernel.asm	/^c0107490:	e8 92 fd ff ff       	call   c0107227 <slob_free>$/;"	l
c0107495	obj/kernel.asm	/^c0107495:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107498	obj/kernel.asm	/^c0107498:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010749d	obj/kernel.asm	/^c010749d:	c9                   	leave  $/;"	l
c010749e	obj/kernel.asm	/^c010749e:	c3                   	ret    $/;"	l
c010749f	obj/kernel.asm	/^c010749f <kmalloc>:$/;"	l
c010749f	obj/kernel.asm	/^c010749f:	55                   	push   %ebp$/;"	l
c01074a0	obj/kernel.asm	/^c01074a0:	89 e5                	mov    %esp,%ebp$/;"	l
c01074a2	obj/kernel.asm	/^c01074a2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01074a5	obj/kernel.asm	/^c01074a5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01074a8	obj/kernel.asm	/^c01074a8:	6a 00                	push   $0x0$/;"	l
c01074aa	obj/kernel.asm	/^c01074aa:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01074ad	obj/kernel.asm	/^c01074ad:	e8 fe fe ff ff       	call   c01073b0 <__kmalloc>$/;"	l
c01074b2	obj/kernel.asm	/^c01074b2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01074b5	obj/kernel.asm	/^c01074b5:	c9                   	leave  $/;"	l
c01074b6	obj/kernel.asm	/^c01074b6:	c3                   	ret    $/;"	l
c01074b7	obj/kernel.asm	/^c01074b7 <kfree>:$/;"	l
c01074b7	obj/kernel.asm	/^c01074b7:	55                   	push   %ebp$/;"	l
c01074b8	obj/kernel.asm	/^c01074b8:	89 e5                	mov    %esp,%ebp$/;"	l
c01074ba	obj/kernel.asm	/^c01074ba:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01074bd	obj/kernel.asm	/^c01074bd:	c7 45 f0 7c e0 14 c0 	movl   $0xc014e07c,-0x10(%ebp)$/;"	l
c01074c4	obj/kernel.asm	/^c01074c4:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01074c8	obj/kernel.asm	/^c01074c8:	75 05                	jne    c01074cf <kfree+0x18>$/;"	l
c01074ca	obj/kernel.asm	/^c01074ca:	e9 aa 00 00 00       	jmp    c0107579 <kfree+0xc2>$/;"	l
c01074cf	obj/kernel.asm	/^c01074cf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01074d2	obj/kernel.asm	/^c01074d2:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01074d7	obj/kernel.asm	/^c01074d7:	85 c0                	test   %eax,%eax$/;"	l
c01074d9	obj/kernel.asm	/^c01074d9:	0f 85 85 00 00 00    	jne    c0107564 <kfree+0xad>$/;"	l
c01074df	obj/kernel.asm	/^c01074df:	e8 d8 f9 ff ff       	call   c0106ebc <__intr_save>$/;"	l
c01074e4	obj/kernel.asm	/^c01074e4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01074e7	obj/kernel.asm	/^c01074e7:	a1 7c e0 14 c0       	mov    0xc014e07c,%eax$/;"	l
c01074ec	obj/kernel.asm	/^c01074ec:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01074ef	obj/kernel.asm	/^c01074ef:	eb 5e                	jmp    c010754f <kfree+0x98>$/;"	l
c01074f1	obj/kernel.asm	/^c01074f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01074f4	obj/kernel.asm	/^c01074f4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01074f7	obj/kernel.asm	/^c01074f7:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01074fa	obj/kernel.asm	/^c01074fa:	75 41                	jne    c010753d <kfree+0x86>$/;"	l
c01074fc	obj/kernel.asm	/^c01074fc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01074ff	obj/kernel.asm	/^c01074ff:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107502	obj/kernel.asm	/^c0107502:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107505	obj/kernel.asm	/^c0107505:	89 10                	mov    %edx,(%eax)$/;"	l
c0107507	obj/kernel.asm	/^c0107507:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010750a	obj/kernel.asm	/^c010750a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010750d	obj/kernel.asm	/^c010750d:	50                   	push   %eax$/;"	l
c010750e	obj/kernel.asm	/^c010750e:	e8 d3 f9 ff ff       	call   c0106ee6 <__intr_restore>$/;"	l
c0107513	obj/kernel.asm	/^c0107513:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107516	obj/kernel.asm	/^c0107516:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107519	obj/kernel.asm	/^c0107519:	8b 10                	mov    (%eax),%edx$/;"	l
c010751b	obj/kernel.asm	/^c010751b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010751e	obj/kernel.asm	/^c010751e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107521	obj/kernel.asm	/^c0107521:	52                   	push   %edx$/;"	l
c0107522	obj/kernel.asm	/^c0107522:	50                   	push   %eax$/;"	l
c0107523	obj/kernel.asm	/^c0107523:	e8 f8 fa ff ff       	call   c0107020 <__slob_free_pages>$/;"	l
c0107528	obj/kernel.asm	/^c0107528:	83 c4 10             	add    $0x10,%esp$/;"	l
c010752b	obj/kernel.asm	/^c010752b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010752e	obj/kernel.asm	/^c010752e:	6a 0c                	push   $0xc$/;"	l
c0107530	obj/kernel.asm	/^c0107530:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0107533	obj/kernel.asm	/^c0107533:	e8 ef fc ff ff       	call   c0107227 <slob_free>$/;"	l
c0107538	obj/kernel.asm	/^c0107538:	83 c4 10             	add    $0x10,%esp$/;"	l
c010753b	obj/kernel.asm	/^c010753b:	eb 3c                	jmp    c0107579 <kfree+0xc2>$/;"	l
c010753d	obj/kernel.asm	/^c010753d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107540	obj/kernel.asm	/^c0107540:	83 c0 08             	add    $0x8,%eax$/;"	l
c0107543	obj/kernel.asm	/^c0107543:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107546	obj/kernel.asm	/^c0107546:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107549	obj/kernel.asm	/^c0107549:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010754c	obj/kernel.asm	/^c010754c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010754f	obj/kernel.asm	/^c010754f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107553	obj/kernel.asm	/^c0107553:	75 9c                	jne    c01074f1 <kfree+0x3a>$/;"	l
c0107555	obj/kernel.asm	/^c0107555:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107558	obj/kernel.asm	/^c0107558:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010755b	obj/kernel.asm	/^c010755b:	50                   	push   %eax$/;"	l
c010755c	obj/kernel.asm	/^c010755c:	e8 85 f9 ff ff       	call   c0106ee6 <__intr_restore>$/;"	l
c0107561	obj/kernel.asm	/^c0107561:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107564	obj/kernel.asm	/^c0107564:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107567	obj/kernel.asm	/^c0107567:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010756a	obj/kernel.asm	/^c010756a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010756d	obj/kernel.asm	/^c010756d:	6a 00                	push   $0x0$/;"	l
c010756f	obj/kernel.asm	/^c010756f:	50                   	push   %eax$/;"	l
c0107570	obj/kernel.asm	/^c0107570:	e8 b2 fc ff ff       	call   c0107227 <slob_free>$/;"	l
c0107575	obj/kernel.asm	/^c0107575:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107578	obj/kernel.asm	/^c0107578:	90                   	nop$/;"	l
c0107579	obj/kernel.asm	/^c0107579:	c9                   	leave  $/;"	l
c010757a	obj/kernel.asm	/^c010757a:	c3                   	ret    $/;"	l
c010757b	obj/kernel.asm	/^c010757b <ksize>:$/;"	l
c010757b	obj/kernel.asm	/^c010757b:	55                   	push   %ebp$/;"	l
c010757c	obj/kernel.asm	/^c010757c:	89 e5                	mov    %esp,%ebp$/;"	l
c010757e	obj/kernel.asm	/^c010757e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107581	obj/kernel.asm	/^c0107581:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0107585	obj/kernel.asm	/^c0107585:	75 07                	jne    c010758e <ksize+0x13>$/;"	l
c0107587	obj/kernel.asm	/^c0107587:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010758c	obj/kernel.asm	/^c010758c:	eb 73                	jmp    c0107601 <ksize+0x86>$/;"	l
c010758e	obj/kernel.asm	/^c010758e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107591	obj/kernel.asm	/^c0107591:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0107596	obj/kernel.asm	/^c0107596:	85 c0                	test   %eax,%eax$/;"	l
c0107598	obj/kernel.asm	/^c0107598:	75 5c                	jne    c01075f6 <ksize+0x7b>$/;"	l
c010759a	obj/kernel.asm	/^c010759a:	e8 1d f9 ff ff       	call   c0106ebc <__intr_save>$/;"	l
c010759f	obj/kernel.asm	/^c010759f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01075a2	obj/kernel.asm	/^c01075a2:	a1 7c e0 14 c0       	mov    0xc014e07c,%eax$/;"	l
c01075a7	obj/kernel.asm	/^c01075a7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01075aa	obj/kernel.asm	/^c01075aa:	eb 35                	jmp    c01075e1 <ksize+0x66>$/;"	l
c01075ac	obj/kernel.asm	/^c01075ac:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01075af	obj/kernel.asm	/^c01075af:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01075b2	obj/kernel.asm	/^c01075b2:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01075b5	obj/kernel.asm	/^c01075b5:	75 21                	jne    c01075d8 <ksize+0x5d>$/;"	l
c01075b7	obj/kernel.asm	/^c01075b7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01075ba	obj/kernel.asm	/^c01075ba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01075bd	obj/kernel.asm	/^c01075bd:	50                   	push   %eax$/;"	l
c01075be	obj/kernel.asm	/^c01075be:	e8 23 f9 ff ff       	call   c0106ee6 <__intr_restore>$/;"	l
c01075c3	obj/kernel.asm	/^c01075c3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01075c6	obj/kernel.asm	/^c01075c6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01075c9	obj/kernel.asm	/^c01075c9:	8b 00                	mov    (%eax),%eax$/;"	l
c01075cb	obj/kernel.asm	/^c01075cb:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
c01075d0	obj/kernel.asm	/^c01075d0:	89 c1                	mov    %eax,%ecx$/;"	l
c01075d2	obj/kernel.asm	/^c01075d2:	d3 e2                	shl    %cl,%edx$/;"	d
c01075d4	obj/kernel.asm	/^c01075d4:	89 d0                	mov    %edx,%eax$/;"	l
c01075d6	obj/kernel.asm	/^c01075d6:	eb 29                	jmp    c0107601 <ksize+0x86>$/;"	l
c01075d8	obj/kernel.asm	/^c01075d8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01075db	obj/kernel.asm	/^c01075db:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01075de	obj/kernel.asm	/^c01075de:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01075e1	obj/kernel.asm	/^c01075e1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01075e5	obj/kernel.asm	/^c01075e5:	75 c5                	jne    c01075ac <ksize+0x31>$/;"	l
c01075e7	obj/kernel.asm	/^c01075e7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01075ea	obj/kernel.asm	/^c01075ea:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01075ed	obj/kernel.asm	/^c01075ed:	50                   	push   %eax$/;"	l
c01075ee	obj/kernel.asm	/^c01075ee:	e8 f3 f8 ff ff       	call   c0106ee6 <__intr_restore>$/;"	l
c01075f3	obj/kernel.asm	/^c01075f3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01075f6	obj/kernel.asm	/^c01075f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01075f9	obj/kernel.asm	/^c01075f9:	83 e8 08             	sub    $0x8,%eax$/;"	l
c01075fc	obj/kernel.asm	/^c01075fc:	8b 00                	mov    (%eax),%eax$/;"	l
c01075fe	obj/kernel.asm	/^c01075fe:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0107601	obj/kernel.asm	/^c0107601:	c9                   	leave  $/;"	l
c0107602	obj/kernel.asm	/^c0107602:	c3                   	ret    $/;"	l
c0107603	obj/kernel.asm	/^c0107603 <_fifo_init_mm>:$/;"	l
c0107603	obj/kernel.asm	/^c0107603:	55                   	push   %ebp$/;"	l
c0107604	obj/kernel.asm	/^c0107604:	89 e5                	mov    %esp,%ebp$/;"	l
c0107606	obj/kernel.asm	/^c0107606:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0107609	obj/kernel.asm	/^c0107609:	c7 45 fc e4 12 15 c0 	movl   $0xc01512e4,-0x4(%ebp)$/;"	l
c0107610	obj/kernel.asm	/^c0107610:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107613	obj/kernel.asm	/^c0107613:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0107616	obj/kernel.asm	/^c0107616:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107619	obj/kernel.asm	/^c0107619:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010761c	obj/kernel.asm	/^c010761c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010761f	obj/kernel.asm	/^c010761f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107622	obj/kernel.asm	/^c0107622:	89 10                	mov    %edx,(%eax)$/;"	l
c0107624	obj/kernel.asm	/^c0107624:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107627	obj/kernel.asm	/^c0107627:	c7 40 14 e4 12 15 c0 	movl   $0xc01512e4,0x14(%eax)$/;"	l
c010762e	obj/kernel.asm	/^c010762e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107633	obj/kernel.asm	/^c0107633:	c9                   	leave  $/;"	l
c0107634	obj/kernel.asm	/^c0107634:	c3                   	ret    $/;"	l
c0107635	obj/kernel.asm	/^c0107635 <_fifo_map_swappable>:$/;"	l
c0107635	obj/kernel.asm	/^c0107635:	55                   	push   %ebp$/;"	l
c0107636	obj/kernel.asm	/^c0107636:	89 e5                	mov    %esp,%ebp$/;"	l
c0107638	obj/kernel.asm	/^c0107638:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010763b	obj/kernel.asm	/^c010763b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010763e	obj/kernel.asm	/^c010763e:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0107641	obj/kernel.asm	/^c0107641:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107644	obj/kernel.asm	/^c0107644:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107647	obj/kernel.asm	/^c0107647:	83 c0 14             	add    $0x14,%eax$/;"	l
c010764a	obj/kernel.asm	/^c010764a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010764d	obj/kernel.asm	/^c010764d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0107651	obj/kernel.asm	/^c0107651:	74 06                	je     c0107659 <_fifo_map_swappable+0x24>$/;"	l
c0107653	obj/kernel.asm	/^c0107653:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107657	obj/kernel.asm	/^c0107657:	75 16                	jne    c010766f <_fifo_map_swappable+0x3a>$/;"	l
c0107659	obj/kernel.asm	/^c0107659:	68 a8 52 11 c0       	push   $0xc01152a8$/;"	l
c010765e	obj/kernel.asm	/^c010765e:	68 c6 52 11 c0       	push   $0xc01152c6$/;"	l
c0107663	obj/kernel.asm	/^c0107663:	6a 32                	push   $0x32$/;"	l
c0107665	obj/kernel.asm	/^c0107665:	68 db 52 11 c0       	push   $0xc01152db$/;"	l
c010766a	obj/kernel.asm	/^c010766a:	e8 60 8e ff ff       	call   c01004cf <__panic>$/;"	l
c010766f	obj/kernel.asm	/^c010766f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107672	obj/kernel.asm	/^c0107672:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107675	obj/kernel.asm	/^c0107675:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107678	obj/kernel.asm	/^c0107678:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010767b	obj/kernel.asm	/^c010767b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010767e	obj/kernel.asm	/^c010767e:	8b 00                	mov    (%eax),%eax$/;"	l
c0107680	obj/kernel.asm	/^c0107680:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0107683	obj/kernel.asm	/^c0107683:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0107686	obj/kernel.asm	/^c0107686:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107689	obj/kernel.asm	/^c0107689:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010768c	obj/kernel.asm	/^c010768c:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010768f	obj/kernel.asm	/^c010768f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107692	obj/kernel.asm	/^c0107692:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0107695	obj/kernel.asm	/^c0107695:	89 10                	mov    %edx,(%eax)$/;"	l
c0107697	obj/kernel.asm	/^c0107697:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010769a	obj/kernel.asm	/^c010769a:	8b 10                	mov    (%eax),%edx$/;"	l
c010769c	obj/kernel.asm	/^c010769c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010769f	obj/kernel.asm	/^c010769f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01076a2	obj/kernel.asm	/^c01076a2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01076a5	obj/kernel.asm	/^c01076a5:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01076a8	obj/kernel.asm	/^c01076a8:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01076ab	obj/kernel.asm	/^c01076ab:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01076ae	obj/kernel.asm	/^c01076ae:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01076b1	obj/kernel.asm	/^c01076b1:	89 10                	mov    %edx,(%eax)$/;"	l
c01076b3	obj/kernel.asm	/^c01076b3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01076b8	obj/kernel.asm	/^c01076b8:	c9                   	leave  $/;"	l
c01076b9	obj/kernel.asm	/^c01076b9:	c3                   	ret    $/;"	l
c01076ba	obj/kernel.asm	/^c01076ba <_fifo_swap_out_victim>:$/;"	l
c01076ba	obj/kernel.asm	/^c01076ba:	55                   	push   %ebp$/;"	l
c01076bb	obj/kernel.asm	/^c01076bb:	89 e5                	mov    %esp,%ebp$/;"	l
c01076bd	obj/kernel.asm	/^c01076bd:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01076c0	obj/kernel.asm	/^c01076c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01076c3	obj/kernel.asm	/^c01076c3:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c01076c6	obj/kernel.asm	/^c01076c6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01076c9	obj/kernel.asm	/^c01076c9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01076cd	obj/kernel.asm	/^c01076cd:	75 16                	jne    c01076e5 <_fifo_swap_out_victim+0x2b>$/;"	l
c01076cf	obj/kernel.asm	/^c01076cf:	68 ef 52 11 c0       	push   $0xc01152ef$/;"	l
c01076d4	obj/kernel.asm	/^c01076d4:	68 c6 52 11 c0       	push   $0xc01152c6$/;"	l
c01076d9	obj/kernel.asm	/^c01076d9:	6a 4a                	push   $0x4a$/;"	l
c01076db	obj/kernel.asm	/^c01076db:	68 db 52 11 c0       	push   $0xc01152db$/;"	l
c01076e0	obj/kernel.asm	/^c01076e0:	e8 ea 8d ff ff       	call   c01004cf <__panic>$/;"	l
c01076e5	obj/kernel.asm	/^c01076e5:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01076e9	obj/kernel.asm	/^c01076e9:	74 16                	je     c0107701 <_fifo_swap_out_victim+0x47>$/;"	l
c01076eb	obj/kernel.asm	/^c01076eb:	68 fc 52 11 c0       	push   $0xc01152fc$/;"	l
c01076f0	obj/kernel.asm	/^c01076f0:	68 c6 52 11 c0       	push   $0xc01152c6$/;"	l
c01076f5	obj/kernel.asm	/^c01076f5:	6a 4b                	push   $0x4b$/;"	l
c01076f7	obj/kernel.asm	/^c01076f7:	68 db 52 11 c0       	push   $0xc01152db$/;"	l
c01076fc	obj/kernel.asm	/^c01076fc:	e8 ce 8d ff ff       	call   c01004cf <__panic>$/;"	l
c0107701	obj/kernel.asm	/^c0107701:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107704	obj/kernel.asm	/^c0107704:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107707	obj/kernel.asm	/^c0107707:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010770a	obj/kernel.asm	/^c010770a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010770d	obj/kernel.asm	/^c010770d:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c0107710	obj/kernel.asm	/^c0107710:	0f 94 c0             	sete   %al$/;"	l
c0107713	obj/kernel.asm	/^c0107713:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107716	obj/kernel.asm	/^c0107716:	85 c0                	test   %eax,%eax$/;"	l
c0107718	obj/kernel.asm	/^c0107718:	74 17                	je     c0107731 <_fifo_swap_out_victim+0x77>$/;"	l
c010771a	obj/kernel.asm	/^c010771a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010771d	obj/kernel.asm	/^c010771d:	68 07 53 11 c0       	push   $0xc0115307$/;"	l
c0107722	obj/kernel.asm	/^c0107722:	e8 43 8c ff ff       	call   c010036a <cprintf>$/;"	l
c0107727	obj/kernel.asm	/^c0107727:	83 c4 10             	add    $0x10,%esp$/;"	l
c010772a	obj/kernel.asm	/^c010772a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010772f	obj/kernel.asm	/^c010772f:	eb 47                	jmp    c0107778 <_fifo_swap_out_victim+0xbe>$/;"	l
c0107731	obj/kernel.asm	/^c0107731:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107734	obj/kernel.asm	/^c0107734:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107737	obj/kernel.asm	/^c0107737:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010773a	obj/kernel.asm	/^c010773a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010773d	obj/kernel.asm	/^c010773d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107740	obj/kernel.asm	/^c0107740:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107743	obj/kernel.asm	/^c0107743:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107746	obj/kernel.asm	/^c0107746:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107749	obj/kernel.asm	/^c0107749:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010774c	obj/kernel.asm	/^c010774c:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010774f	obj/kernel.asm	/^c010774f:	8b 12                	mov    (%edx),%edx$/;"	l
c0107751	obj/kernel.asm	/^c0107751:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c0107754	obj/kernel.asm	/^c0107754:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0107757	obj/kernel.asm	/^c0107757:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010775a	obj/kernel.asm	/^c010775a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010775d	obj/kernel.asm	/^c010775d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107760	obj/kernel.asm	/^c0107760:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107763	obj/kernel.asm	/^c0107763:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0107766	obj/kernel.asm	/^c0107766:	89 10                	mov    %edx,(%eax)$/;"	l
c0107768	obj/kernel.asm	/^c0107768:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010776b	obj/kernel.asm	/^c010776b:	8d 50 ec             	lea    -0x14(%eax),%edx$/;"	l
c010776e	obj/kernel.asm	/^c010776e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107771	obj/kernel.asm	/^c0107771:	89 10                	mov    %edx,(%eax)$/;"	l
c0107773	obj/kernel.asm	/^c0107773:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107778	obj/kernel.asm	/^c0107778:	c9                   	leave  $/;"	l
c0107779	obj/kernel.asm	/^c0107779:	c3                   	ret    $/;"	l
c010777a	obj/kernel.asm	/^c010777a <_fifo_check_swap>:$/;"	l
c010777a	obj/kernel.asm	/^c010777a:	55                   	push   %ebp$/;"	l
c010777b	obj/kernel.asm	/^c010777b:	89 e5                	mov    %esp,%ebp$/;"	l
c010777d	obj/kernel.asm	/^c010777d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107780	obj/kernel.asm	/^c0107780:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107783	obj/kernel.asm	/^c0107783:	68 18 53 11 c0       	push   $0xc0115318$/;"	l
c0107788	obj/kernel.asm	/^c0107788:	e8 dd 8b ff ff       	call   c010036a <cprintf>$/;"	l
c010778d	obj/kernel.asm	/^c010778d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107790	obj/kernel.asm	/^c0107790:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c0107795	obj/kernel.asm	/^c0107795:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0107798	obj/kernel.asm	/^c0107798:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c010779d	obj/kernel.asm	/^c010779d:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01077a0	obj/kernel.asm	/^c01077a0:	74 16                	je     c01077b8 <_fifo_check_swap+0x3e>$/;"	l
c01077a2	obj/kernel.asm	/^c01077a2:	68 3e 53 11 c0       	push   $0xc011533e$/;"	l
c01077a7	obj/kernel.asm	/^c01077a7:	68 c6 52 11 c0       	push   $0xc01152c6$/;"	l
c01077ac	obj/kernel.asm	/^c01077ac:	6a 5f                	push   $0x5f$/;"	l
c01077ae	obj/kernel.asm	/^c01077ae:	68 db 52 11 c0       	push   $0xc01152db$/;"	l
c01077b3	obj/kernel.asm	/^c01077b3:	e8 17 8d ff ff       	call   c01004cf <__panic>$/;"	l
c01077b8	obj/kernel.asm	/^c01077b8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01077bb	obj/kernel.asm	/^c01077bb:	68 50 53 11 c0       	push   $0xc0115350$/;"	l
c01077c0	obj/kernel.asm	/^c01077c0:	e8 a5 8b ff ff       	call   c010036a <cprintf>$/;"	l
c01077c5	obj/kernel.asm	/^c01077c5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01077c8	obj/kernel.asm	/^c01077c8:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c01077cd	obj/kernel.asm	/^c01077cd:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c01077d0	obj/kernel.asm	/^c01077d0:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c01077d5	obj/kernel.asm	/^c01077d5:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01077d8	obj/kernel.asm	/^c01077d8:	74 16                	je     c01077f0 <_fifo_check_swap+0x76>$/;"	l
c01077da	obj/kernel.asm	/^c01077da:	68 3e 53 11 c0       	push   $0xc011533e$/;"	l
c01077df	obj/kernel.asm	/^c01077df:	68 c6 52 11 c0       	push   $0xc01152c6$/;"	l
c01077e4	obj/kernel.asm	/^c01077e4:	6a 62                	push   $0x62$/;"	l
c01077e6	obj/kernel.asm	/^c01077e6:	68 db 52 11 c0       	push   $0xc01152db$/;"	l
c01077eb	obj/kernel.asm	/^c01077eb:	e8 df 8c ff ff       	call   c01004cf <__panic>$/;"	l
c01077f0	obj/kernel.asm	/^c01077f0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01077f3	obj/kernel.asm	/^c01077f3:	68 78 53 11 c0       	push   $0xc0115378$/;"	l
c01077f8	obj/kernel.asm	/^c01077f8:	e8 6d 8b ff ff       	call   c010036a <cprintf>$/;"	l
c01077fd	obj/kernel.asm	/^c01077fd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107800	obj/kernel.asm	/^c0107800:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0107805	obj/kernel.asm	/^c0107805:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0107808	obj/kernel.asm	/^c0107808:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c010780d	obj/kernel.asm	/^c010780d:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107810	obj/kernel.asm	/^c0107810:	74 16                	je     c0107828 <_fifo_check_swap+0xae>$/;"	l
c0107812	obj/kernel.asm	/^c0107812:	68 3e 53 11 c0       	push   $0xc011533e$/;"	l
c0107817	obj/kernel.asm	/^c0107817:	68 c6 52 11 c0       	push   $0xc01152c6$/;"	l
c010781c	obj/kernel.asm	/^c010781c:	6a 65                	push   $0x65$/;"	l
c010781e	obj/kernel.asm	/^c010781e:	68 db 52 11 c0       	push   $0xc01152db$/;"	l
c0107823	obj/kernel.asm	/^c0107823:	e8 a7 8c ff ff       	call   c01004cf <__panic>$/;"	l
c0107828	obj/kernel.asm	/^c0107828:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010782b	obj/kernel.asm	/^c010782b:	68 a0 53 11 c0       	push   $0xc01153a0$/;"	l
c0107830	obj/kernel.asm	/^c0107830:	e8 35 8b ff ff       	call   c010036a <cprintf>$/;"	l
c0107835	obj/kernel.asm	/^c0107835:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107838	obj/kernel.asm	/^c0107838:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c010783d	obj/kernel.asm	/^c010783d:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107840	obj/kernel.asm	/^c0107840:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c0107845	obj/kernel.asm	/^c0107845:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107848	obj/kernel.asm	/^c0107848:	74 16                	je     c0107860 <_fifo_check_swap+0xe6>$/;"	l
c010784a	obj/kernel.asm	/^c010784a:	68 3e 53 11 c0       	push   $0xc011533e$/;"	l
c010784f	obj/kernel.asm	/^c010784f:	68 c6 52 11 c0       	push   $0xc01152c6$/;"	l
c0107854	obj/kernel.asm	/^c0107854:	6a 68                	push   $0x68$/;"	l
c0107856	obj/kernel.asm	/^c0107856:	68 db 52 11 c0       	push   $0xc01152db$/;"	l
c010785b	obj/kernel.asm	/^c010785b:	e8 6f 8c ff ff       	call   c01004cf <__panic>$/;"	l
c0107860	obj/kernel.asm	/^c0107860:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107863	obj/kernel.asm	/^c0107863:	68 c8 53 11 c0       	push   $0xc01153c8$/;"	l
c0107868	obj/kernel.asm	/^c0107868:	e8 fd 8a ff ff       	call   c010036a <cprintf>$/;"	l
c010786d	obj/kernel.asm	/^c010786d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107870	obj/kernel.asm	/^c0107870:	b8 00 50 00 00       	mov    $0x5000,%eax$/;"	l
c0107875	obj/kernel.asm	/^c0107875:	c6 00 0e             	movb   $0xe,(%eax)$/;"	l
c0107878	obj/kernel.asm	/^c0107878:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c010787d	obj/kernel.asm	/^c010787d:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c0107880	obj/kernel.asm	/^c0107880:	74 16                	je     c0107898 <_fifo_check_swap+0x11e>$/;"	l
c0107882	obj/kernel.asm	/^c0107882:	68 ee 53 11 c0       	push   $0xc01153ee$/;"	l
c0107887	obj/kernel.asm	/^c0107887:	68 c6 52 11 c0       	push   $0xc01152c6$/;"	l
c010788c	obj/kernel.asm	/^c010788c:	6a 6b                	push   $0x6b$/;"	l
c010788e	obj/kernel.asm	/^c010788e:	68 db 52 11 c0       	push   $0xc01152db$/;"	l
c0107893	obj/kernel.asm	/^c0107893:	e8 37 8c ff ff       	call   c01004cf <__panic>$/;"	l
c0107898	obj/kernel.asm	/^c0107898:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010789b	obj/kernel.asm	/^c010789b:	68 a0 53 11 c0       	push   $0xc01153a0$/;"	l
c01078a0	obj/kernel.asm	/^c01078a0:	e8 c5 8a ff ff       	call   c010036a <cprintf>$/;"	l
c01078a5	obj/kernel.asm	/^c01078a5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01078a8	obj/kernel.asm	/^c01078a8:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c01078ad	obj/kernel.asm	/^c01078ad:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c01078b0	obj/kernel.asm	/^c01078b0:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c01078b5	obj/kernel.asm	/^c01078b5:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c01078b8	obj/kernel.asm	/^c01078b8:	74 16                	je     c01078d0 <_fifo_check_swap+0x156>$/;"	l
c01078ba	obj/kernel.asm	/^c01078ba:	68 ee 53 11 c0       	push   $0xc01153ee$/;"	l
c01078bf	obj/kernel.asm	/^c01078bf:	68 c6 52 11 c0       	push   $0xc01152c6$/;"	l
c01078c4	obj/kernel.asm	/^c01078c4:	6a 6e                	push   $0x6e$/;"	l
c01078c6	obj/kernel.asm	/^c01078c6:	68 db 52 11 c0       	push   $0xc01152db$/;"	l
c01078cb	obj/kernel.asm	/^c01078cb:	e8 ff 8b ff ff       	call   c01004cf <__panic>$/;"	l
c01078d0	obj/kernel.asm	/^c01078d0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01078d3	obj/kernel.asm	/^c01078d3:	68 50 53 11 c0       	push   $0xc0115350$/;"	l
c01078d8	obj/kernel.asm	/^c01078d8:	e8 8d 8a ff ff       	call   c010036a <cprintf>$/;"	l
c01078dd	obj/kernel.asm	/^c01078dd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01078e0	obj/kernel.asm	/^c01078e0:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c01078e5	obj/kernel.asm	/^c01078e5:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c01078e8	obj/kernel.asm	/^c01078e8:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c01078ed	obj/kernel.asm	/^c01078ed:	83 f8 06             	cmp    $0x6,%eax$/;"	l
c01078f0	obj/kernel.asm	/^c01078f0:	74 16                	je     c0107908 <_fifo_check_swap+0x18e>$/;"	l
c01078f2	obj/kernel.asm	/^c01078f2:	68 fd 53 11 c0       	push   $0xc01153fd$/;"	l
c01078f7	obj/kernel.asm	/^c01078f7:	68 c6 52 11 c0       	push   $0xc01152c6$/;"	l
c01078fc	obj/kernel.asm	/^c01078fc:	6a 71                	push   $0x71$/;"	l
c01078fe	obj/kernel.asm	/^c01078fe:	68 db 52 11 c0       	push   $0xc01152db$/;"	l
c0107903	obj/kernel.asm	/^c0107903:	e8 c7 8b ff ff       	call   c01004cf <__panic>$/;"	l
c0107908	obj/kernel.asm	/^c0107908:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010790b	obj/kernel.asm	/^c010790b:	68 a0 53 11 c0       	push   $0xc01153a0$/;"	l
c0107910	obj/kernel.asm	/^c0107910:	e8 55 8a ff ff       	call   c010036a <cprintf>$/;"	l
c0107915	obj/kernel.asm	/^c0107915:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107918	obj/kernel.asm	/^c0107918:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c010791d	obj/kernel.asm	/^c010791d:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107920	obj/kernel.asm	/^c0107920:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c0107925	obj/kernel.asm	/^c0107925:	83 f8 07             	cmp    $0x7,%eax$/;"	l
c0107928	obj/kernel.asm	/^c0107928:	74 16                	je     c0107940 <_fifo_check_swap+0x1c6>$/;"	l
c010792a	obj/kernel.asm	/^c010792a:	68 0c 54 11 c0       	push   $0xc011540c$/;"	l
c010792f	obj/kernel.asm	/^c010792f:	68 c6 52 11 c0       	push   $0xc01152c6$/;"	l
c0107934	obj/kernel.asm	/^c0107934:	6a 74                	push   $0x74$/;"	l
c0107936	obj/kernel.asm	/^c0107936:	68 db 52 11 c0       	push   $0xc01152db$/;"	l
c010793b	obj/kernel.asm	/^c010793b:	e8 8f 8b ff ff       	call   c01004cf <__panic>$/;"	l
c0107940	obj/kernel.asm	/^c0107940:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107943	obj/kernel.asm	/^c0107943:	68 18 53 11 c0       	push   $0xc0115318$/;"	l
c0107948	obj/kernel.asm	/^c0107948:	e8 1d 8a ff ff       	call   c010036a <cprintf>$/;"	l
c010794d	obj/kernel.asm	/^c010794d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107950	obj/kernel.asm	/^c0107950:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c0107955	obj/kernel.asm	/^c0107955:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0107958	obj/kernel.asm	/^c0107958:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c010795d	obj/kernel.asm	/^c010795d:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c0107960	obj/kernel.asm	/^c0107960:	74 16                	je     c0107978 <_fifo_check_swap+0x1fe>$/;"	l
c0107962	obj/kernel.asm	/^c0107962:	68 1b 54 11 c0       	push   $0xc011541b$/;"	l
c0107967	obj/kernel.asm	/^c0107967:	68 c6 52 11 c0       	push   $0xc01152c6$/;"	l
c010796c	obj/kernel.asm	/^c010796c:	6a 77                	push   $0x77$/;"	l
c010796e	obj/kernel.asm	/^c010796e:	68 db 52 11 c0       	push   $0xc01152db$/;"	l
c0107973	obj/kernel.asm	/^c0107973:	e8 57 8b ff ff       	call   c01004cf <__panic>$/;"	l
c0107978	obj/kernel.asm	/^c0107978:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010797b	obj/kernel.asm	/^c010797b:	68 78 53 11 c0       	push   $0xc0115378$/;"	l
c0107980	obj/kernel.asm	/^c0107980:	e8 e5 89 ff ff       	call   c010036a <cprintf>$/;"	l
c0107985	obj/kernel.asm	/^c0107985:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107988	obj/kernel.asm	/^c0107988:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c010798d	obj/kernel.asm	/^c010798d:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0107990	obj/kernel.asm	/^c0107990:	a1 6c e0 14 c0       	mov    0xc014e06c,%eax$/;"	l
c0107995	obj/kernel.asm	/^c0107995:	83 f8 09             	cmp    $0x9,%eax$/;"	l
c0107998	obj/kernel.asm	/^c0107998:	74 16                	je     c01079b0 <_fifo_check_swap+0x236>$/;"	l
c010799a	obj/kernel.asm	/^c010799a:	68 2a 54 11 c0       	push   $0xc011542a$/;"	l
c010799f	obj/kernel.asm	/^c010799f:	68 c6 52 11 c0       	push   $0xc01152c6$/;"	l
c01079a4	obj/kernel.asm	/^c01079a4:	6a 7a                	push   $0x7a$/;"	l
c01079a6	obj/kernel.asm	/^c01079a6:	68 db 52 11 c0       	push   $0xc01152db$/;"	l
c01079ab	obj/kernel.asm	/^c01079ab:	e8 1f 8b ff ff       	call   c01004cf <__panic>$/;"	l
c01079b0	obj/kernel.asm	/^c01079b0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01079b5	obj/kernel.asm	/^c01079b5:	c9                   	leave  $/;"	l
c01079b6	obj/kernel.asm	/^c01079b6:	c3                   	ret    $/;"	l
c01079b7	obj/kernel.asm	/^c01079b7 <_fifo_init>:$/;"	l
c01079b7	obj/kernel.asm	/^c01079b7:	55                   	push   %ebp$/;"	l
c01079b8	obj/kernel.asm	/^c01079b8:	89 e5                	mov    %esp,%ebp$/;"	l
c01079ba	obj/kernel.asm	/^c01079ba:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01079bf	obj/kernel.asm	/^c01079bf:	5d                   	pop    %ebp$/;"	l
c01079c0	obj/kernel.asm	/^c01079c0:	c3                   	ret    $/;"	l
c01079c1	obj/kernel.asm	/^c01079c1 <_fifo_set_unswappable>:$/;"	l
c01079c1	obj/kernel.asm	/^c01079c1:	55                   	push   %ebp$/;"	l
c01079c2	obj/kernel.asm	/^c01079c2:	89 e5                	mov    %esp,%ebp$/;"	l
c01079c4	obj/kernel.asm	/^c01079c4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01079c9	obj/kernel.asm	/^c01079c9:	5d                   	pop    %ebp$/;"	l
c01079ca	obj/kernel.asm	/^c01079ca:	c3                   	ret    $/;"	l
c01079cb	obj/kernel.asm	/^c01079cb <_fifo_tick_event>:$/;"	l
c01079cb	obj/kernel.asm	/^c01079cb:	55                   	push   %ebp$/;"	l
c01079cc	obj/kernel.asm	/^c01079cc:	89 e5                	mov    %esp,%ebp$/;"	l
c01079ce	obj/kernel.asm	/^c01079ce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01079d3	obj/kernel.asm	/^c01079d3:	5d                   	pop    %ebp$/;"	l
c01079d4	obj/kernel.asm	/^c01079d4:	c3                   	ret    $/;"	l
c01079d5	obj/kernel.asm	/^c01079d5 <page2ppn>:$/;"	l
c01079d5	obj/kernel.asm	/^c01079d5:	55                   	push   %ebp$/;"	l
c01079d6	obj/kernel.asm	/^c01079d6:	89 e5                	mov    %esp,%ebp$/;"	l
c01079d8	obj/kernel.asm	/^c01079d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01079db	obj/kernel.asm	/^c01079db:	8b 15 18 12 15 c0    	mov    0xc0151218,%edx$/;"	l
c01079e1	obj/kernel.asm	/^c01079e1:	29 d0                	sub    %edx,%eax$/;"	l
c01079e3	obj/kernel.asm	/^c01079e3:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c01079e6	obj/kernel.asm	/^c01079e6:	5d                   	pop    %ebp$/;"	l
c01079e7	obj/kernel.asm	/^c01079e7:	c3                   	ret    $/;"	l
c01079e8	obj/kernel.asm	/^c01079e8 <page2pa>:$/;"	l
c01079e8	obj/kernel.asm	/^c01079e8:	55                   	push   %ebp$/;"	l
c01079e9	obj/kernel.asm	/^c01079e9:	89 e5                	mov    %esp,%ebp$/;"	l
c01079eb	obj/kernel.asm	/^c01079eb:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01079ee	obj/kernel.asm	/^c01079ee:	e8 e2 ff ff ff       	call   c01079d5 <page2ppn>$/;"	l
c01079f3	obj/kernel.asm	/^c01079f3:	83 c4 04             	add    $0x4,%esp$/;"	l
c01079f6	obj/kernel.asm	/^c01079f6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01079f9	obj/kernel.asm	/^c01079f9:	c9                   	leave  $/;"	l
c01079fa	obj/kernel.asm	/^c01079fa:	c3                   	ret    $/;"	l
c01079fb	obj/kernel.asm	/^c01079fb <page_ref>:$/;"	l
c01079fb	obj/kernel.asm	/^c01079fb:	55                   	push   %ebp$/;"	l
c01079fc	obj/kernel.asm	/^c01079fc:	89 e5                	mov    %esp,%ebp$/;"	l
c01079fe	obj/kernel.asm	/^c01079fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107a01	obj/kernel.asm	/^c0107a01:	8b 00                	mov    (%eax),%eax$/;"	l
c0107a03	obj/kernel.asm	/^c0107a03:	5d                   	pop    %ebp$/;"	l
c0107a04	obj/kernel.asm	/^c0107a04:	c3                   	ret    $/;"	l
c0107a05	obj/kernel.asm	/^c0107a05 <set_page_ref>:$/;"	l
c0107a05	obj/kernel.asm	/^c0107a05:	55                   	push   %ebp$/;"	l
c0107a06	obj/kernel.asm	/^c0107a06:	89 e5                	mov    %esp,%ebp$/;"	l
c0107a08	obj/kernel.asm	/^c0107a08:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107a0b	obj/kernel.asm	/^c0107a0b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107a0e	obj/kernel.asm	/^c0107a0e:	89 10                	mov    %edx,(%eax)$/;"	l
c0107a10	obj/kernel.asm	/^c0107a10:	5d                   	pop    %ebp$/;"	l
c0107a11	obj/kernel.asm	/^c0107a11:	c3                   	ret    $/;"	l
c0107a12	obj/kernel.asm	/^c0107a12 <default_init>:$/;"	l
c0107a12	obj/kernel.asm	/^c0107a12:	55                   	push   %ebp$/;"	l
c0107a13	obj/kernel.asm	/^c0107a13:	89 e5                	mov    %esp,%ebp$/;"	l
c0107a15	obj/kernel.asm	/^c0107a15:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0107a18	obj/kernel.asm	/^c0107a18:	c7 45 fc ec 12 15 c0 	movl   $0xc01512ec,-0x4(%ebp)$/;"	l
c0107a1f	obj/kernel.asm	/^c0107a1f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107a22	obj/kernel.asm	/^c0107a22:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0107a25	obj/kernel.asm	/^c0107a25:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107a28	obj/kernel.asm	/^c0107a28:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107a2b	obj/kernel.asm	/^c0107a2b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107a2e	obj/kernel.asm	/^c0107a2e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107a31	obj/kernel.asm	/^c0107a31:	89 10                	mov    %edx,(%eax)$/;"	l
c0107a33	obj/kernel.asm	/^c0107a33:	c7 05 f4 12 15 c0 00 	movl   $0x0,0xc01512f4$/;"	l
c0107a3a	obj/kernel.asm	/^c0107a3a:	00 00 00 $/;"	l
c0107a3d	obj/kernel.asm	/^c0107a3d:	c9                   	leave  $/;"	l
c0107a3e	obj/kernel.asm	/^c0107a3e:	c3                   	ret    $/;"	l
c0107a3f	obj/kernel.asm	/^c0107a3f <default_init_memmap>:$/;"	l
c0107a3f	obj/kernel.asm	/^c0107a3f:	55                   	push   %ebp$/;"	l
c0107a40	obj/kernel.asm	/^c0107a40:	89 e5                	mov    %esp,%ebp$/;"	l
c0107a42	obj/kernel.asm	/^c0107a42:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0107a45	obj/kernel.asm	/^c0107a45:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0107a49	obj/kernel.asm	/^c0107a49:	75 16                	jne    c0107a61 <default_init_memmap+0x22>$/;"	l
c0107a4b	obj/kernel.asm	/^c0107a4b:	68 4c 54 11 c0       	push   $0xc011544c$/;"	l
c0107a50	obj/kernel.asm	/^c0107a50:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0107a55	obj/kernel.asm	/^c0107a55:	6a 46                	push   $0x46$/;"	l
c0107a57	obj/kernel.asm	/^c0107a57:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c0107a5c	obj/kernel.asm	/^c0107a5c:	e8 6e 8a ff ff       	call   c01004cf <__panic>$/;"	l
c0107a61	obj/kernel.asm	/^c0107a61:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107a64	obj/kernel.asm	/^c0107a64:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107a67	obj/kernel.asm	/^c0107a67:	eb 6c                	jmp    c0107ad5 <default_init_memmap+0x96>$/;"	l
c0107a69	obj/kernel.asm	/^c0107a69:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107a6c	obj/kernel.asm	/^c0107a6c:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107a6f	obj/kernel.asm	/^c0107a6f:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0107a76	obj/kernel.asm	/^c0107a76:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107a79	obj/kernel.asm	/^c0107a79:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107a7c	obj/kernel.asm	/^c0107a7c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0107a7f	obj/kernel.asm	/^c0107a7f:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0107a82	obj/kernel.asm	/^c0107a82:	19 c0                	sbb    %eax,%eax$/;"	l
c0107a84	obj/kernel.asm	/^c0107a84:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107a87	obj/kernel.asm	/^c0107a87:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0107a8b	obj/kernel.asm	/^c0107a8b:	0f 95 c0             	setne  %al$/;"	l
c0107a8e	obj/kernel.asm	/^c0107a8e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107a91	obj/kernel.asm	/^c0107a91:	85 c0                	test   %eax,%eax$/;"	l
c0107a93	obj/kernel.asm	/^c0107a93:	75 16                	jne    c0107aab <default_init_memmap+0x6c>$/;"	l
c0107a95	obj/kernel.asm	/^c0107a95:	68 7d 54 11 c0       	push   $0xc011547d$/;"	l
c0107a9a	obj/kernel.asm	/^c0107a9a:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0107a9f	obj/kernel.asm	/^c0107a9f:	6a 49                	push   $0x49$/;"	l
c0107aa1	obj/kernel.asm	/^c0107aa1:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c0107aa6	obj/kernel.asm	/^c0107aa6:	e8 24 8a ff ff       	call   c01004cf <__panic>$/;"	l
c0107aab	obj/kernel.asm	/^c0107aab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107aae	obj/kernel.asm	/^c0107aae:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0107ab5	obj/kernel.asm	/^c0107ab5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107ab8	obj/kernel.asm	/^c0107ab8:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107abb	obj/kernel.asm	/^c0107abb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107abe	obj/kernel.asm	/^c0107abe:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107ac1	obj/kernel.asm	/^c0107ac1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107ac4	obj/kernel.asm	/^c0107ac4:	6a 00                	push   $0x0$/;"	l
c0107ac6	obj/kernel.asm	/^c0107ac6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0107ac9	obj/kernel.asm	/^c0107ac9:	e8 37 ff ff ff       	call   c0107a05 <set_page_ref>$/;"	l
c0107ace	obj/kernel.asm	/^c0107ace:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107ad1	obj/kernel.asm	/^c0107ad1:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0107ad5	obj/kernel.asm	/^c0107ad5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107ad8	obj/kernel.asm	/^c0107ad8:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107adb	obj/kernel.asm	/^c0107adb:	89 c2                	mov    %eax,%edx$/;"	l
c0107add	obj/kernel.asm	/^c0107add:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107ae0	obj/kernel.asm	/^c0107ae0:	01 d0                	add    %edx,%eax$/;"	l
c0107ae2	obj/kernel.asm	/^c0107ae2:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107ae5	obj/kernel.asm	/^c0107ae5:	75 82                	jne    c0107a69 <default_init_memmap+0x2a>$/;"	l
c0107ae7	obj/kernel.asm	/^c0107ae7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107aea	obj/kernel.asm	/^c0107aea:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107aed	obj/kernel.asm	/^c0107aed:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107af0	obj/kernel.asm	/^c0107af0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107af3	obj/kernel.asm	/^c0107af3:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107af6	obj/kernel.asm	/^c0107af6:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
c0107afd	obj/kernel.asm	/^c0107afd:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107b00	obj/kernel.asm	/^c0107b00:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107b03	obj/kernel.asm	/^c0107b03:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0107b06	obj/kernel.asm	/^c0107b06:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107b09	obj/kernel.asm	/^c0107b09:	8b 15 f4 12 15 c0    	mov    0xc01512f4,%edx$/;"	l
c0107b0f	obj/kernel.asm	/^c0107b0f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107b12	obj/kernel.asm	/^c0107b12:	01 d0                	add    %edx,%eax$/;"	l
c0107b14	obj/kernel.asm	/^c0107b14:	a3 f4 12 15 c0       	mov    %eax,0xc01512f4$/;"	l
c0107b19	obj/kernel.asm	/^c0107b19:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107b1c	obj/kernel.asm	/^c0107b1c:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0107b1f	obj/kernel.asm	/^c0107b1f:	c7 45 dc ec 12 15 c0 	movl   $0xc01512ec,-0x24(%ebp)$/;"	l
c0107b26	obj/kernel.asm	/^c0107b26:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0107b29	obj/kernel.asm	/^c0107b29:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107b2c	obj/kernel.asm	/^c0107b2c:	8b 00                	mov    (%eax),%eax$/;"	l
c0107b2e	obj/kernel.asm	/^c0107b2e:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107b31	obj/kernel.asm	/^c0107b31:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0107b34	obj/kernel.asm	/^c0107b34:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0107b37	obj/kernel.asm	/^c0107b37:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107b3a	obj/kernel.asm	/^c0107b3a:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0107b3d	obj/kernel.asm	/^c0107b3d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0107b40	obj/kernel.asm	/^c0107b40:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0107b43	obj/kernel.asm	/^c0107b43:	89 10                	mov    %edx,(%eax)$/;"	l
c0107b45	obj/kernel.asm	/^c0107b45:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0107b48	obj/kernel.asm	/^c0107b48:	8b 10                	mov    (%eax),%edx$/;"	l
c0107b4a	obj/kernel.asm	/^c0107b4a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0107b4d	obj/kernel.asm	/^c0107b4d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107b50	obj/kernel.asm	/^c0107b50:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107b53	obj/kernel.asm	/^c0107b53:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0107b56	obj/kernel.asm	/^c0107b56:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107b59	obj/kernel.asm	/^c0107b59:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107b5c	obj/kernel.asm	/^c0107b5c:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0107b5f	obj/kernel.asm	/^c0107b5f:	89 10                	mov    %edx,(%eax)$/;"	l
c0107b61	obj/kernel.asm	/^c0107b61:	c9                   	leave  $/;"	l
c0107b62	obj/kernel.asm	/^c0107b62:	c3                   	ret    $/;"	l
c0107b63	obj/kernel.asm	/^c0107b63 <default_alloc_pages>:$/;"	l
c0107b63	obj/kernel.asm	/^c0107b63:	55                   	push   %ebp$/;"	l
c0107b64	obj/kernel.asm	/^c0107b64:	89 e5                	mov    %esp,%ebp$/;"	l
c0107b66	obj/kernel.asm	/^c0107b66:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0107b69	obj/kernel.asm	/^c0107b69:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0107b6d	obj/kernel.asm	/^c0107b6d:	75 16                	jne    c0107b85 <default_alloc_pages+0x22>$/;"	l
c0107b6f	obj/kernel.asm	/^c0107b6f:	68 4c 54 11 c0       	push   $0xc011544c$/;"	l
c0107b74	obj/kernel.asm	/^c0107b74:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0107b79	obj/kernel.asm	/^c0107b79:	6a 5a                	push   $0x5a$/;"	l
c0107b7b	obj/kernel.asm	/^c0107b7b:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c0107b80	obj/kernel.asm	/^c0107b80:	e8 4a 89 ff ff       	call   c01004cf <__panic>$/;"	l
c0107b85	obj/kernel.asm	/^c0107b85:	a1 f4 12 15 c0       	mov    0xc01512f4,%eax$/;"	l
c0107b8a	obj/kernel.asm	/^c0107b8a:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107b8d	obj/kernel.asm	/^c0107b8d:	73 0a                	jae    c0107b99 <default_alloc_pages+0x36>$/;"	l
c0107b8f	obj/kernel.asm	/^c0107b8f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107b94	obj/kernel.asm	/^c0107b94:	e9 6a 01 00 00       	jmp    c0107d03 <default_alloc_pages+0x1a0>$/;"	l
c0107b99	obj/kernel.asm	/^c0107b99:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0107ba0	obj/kernel.asm	/^c0107ba0:	c7 45 f0 ec 12 15 c0 	movl   $0xc01512ec,-0x10(%ebp)$/;"	l
c0107ba7	obj/kernel.asm	/^c0107ba7:	eb 1c                	jmp    c0107bc5 <default_alloc_pages+0x62>$/;"	l
c0107ba9	obj/kernel.asm	/^c0107ba9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107bac	obj/kernel.asm	/^c0107bac:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0107baf	obj/kernel.asm	/^c0107baf:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107bb2	obj/kernel.asm	/^c0107bb2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107bb5	obj/kernel.asm	/^c0107bb5:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107bb8	obj/kernel.asm	/^c0107bb8:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107bbb	obj/kernel.asm	/^c0107bbb:	72 08                	jb     c0107bc5 <default_alloc_pages+0x62>$/;"	l
c0107bbd	obj/kernel.asm	/^c0107bbd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107bc0	obj/kernel.asm	/^c0107bc0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107bc3	obj/kernel.asm	/^c0107bc3:	eb 18                	jmp    c0107bdd <default_alloc_pages+0x7a>$/;"	l
c0107bc5	obj/kernel.asm	/^c0107bc5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107bc8	obj/kernel.asm	/^c0107bc8:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0107bcb	obj/kernel.asm	/^c0107bcb:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107bce	obj/kernel.asm	/^c0107bce:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107bd1	obj/kernel.asm	/^c0107bd1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107bd4	obj/kernel.asm	/^c0107bd4:	81 7d f0 ec 12 15 c0 	cmpl   $0xc01512ec,-0x10(%ebp)$/;"	l
c0107bdb	obj/kernel.asm	/^c0107bdb:	75 cc                	jne    c0107ba9 <default_alloc_pages+0x46>$/;"	l
c0107bdd	obj/kernel.asm	/^c0107bdd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107be1	obj/kernel.asm	/^c0107be1:	0f 84 19 01 00 00    	je     c0107d00 <default_alloc_pages+0x19d>$/;"	l
c0107be7	obj/kernel.asm	/^c0107be7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107bea	obj/kernel.asm	/^c0107bea:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0107bed	obj/kernel.asm	/^c0107bed:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107bf0	obj/kernel.asm	/^c0107bf0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107bf3	obj/kernel.asm	/^c0107bf3:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0107bf6	obj/kernel.asm	/^c0107bf6:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0107bf9	obj/kernel.asm	/^c0107bf9:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0107bfc	obj/kernel.asm	/^c0107bfc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107bff	obj/kernel.asm	/^c0107bff:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107c02	obj/kernel.asm	/^c0107c02:	8b 12                	mov    (%edx),%edx$/;"	l
c0107c04	obj/kernel.asm	/^c0107c04:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0107c07	obj/kernel.asm	/^c0107c07:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0107c0a	obj/kernel.asm	/^c0107c0a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107c0d	obj/kernel.asm	/^c0107c0d:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0107c10	obj/kernel.asm	/^c0107c10:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107c13	obj/kernel.asm	/^c0107c13:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0107c16	obj/kernel.asm	/^c0107c16:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0107c19	obj/kernel.asm	/^c0107c19:	89 10                	mov    %edx,(%eax)$/;"	l
c0107c1b	obj/kernel.asm	/^c0107c1b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107c1e	obj/kernel.asm	/^c0107c1e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107c21	obj/kernel.asm	/^c0107c21:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107c24	obj/kernel.asm	/^c0107c24:	0f 86 82 00 00 00    	jbe    c0107cac <default_alloc_pages+0x149>$/;"	l
c0107c2a	obj/kernel.asm	/^c0107c2a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107c2d	obj/kernel.asm	/^c0107c2d:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107c30	obj/kernel.asm	/^c0107c30:	89 c2                	mov    %eax,%edx$/;"	l
c0107c32	obj/kernel.asm	/^c0107c32:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107c35	obj/kernel.asm	/^c0107c35:	01 d0                	add    %edx,%eax$/;"	l
c0107c37	obj/kernel.asm	/^c0107c37:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107c3a	obj/kernel.asm	/^c0107c3a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107c3d	obj/kernel.asm	/^c0107c3d:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107c40	obj/kernel.asm	/^c0107c40:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)$/;"	l
c0107c47	obj/kernel.asm	/^c0107c47:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0107c4a	obj/kernel.asm	/^c0107c4a:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0107c4d	obj/kernel.asm	/^c0107c4d:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0107c50	obj/kernel.asm	/^c0107c50:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107c53	obj/kernel.asm	/^c0107c53:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107c56	obj/kernel.asm	/^c0107c56:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107c59	obj/kernel.asm	/^c0107c59:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c0107c5c	obj/kernel.asm	/^c0107c5c:	89 c2                	mov    %eax,%edx$/;"	l
c0107c5e	obj/kernel.asm	/^c0107c5e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107c61	obj/kernel.asm	/^c0107c61:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107c64	obj/kernel.asm	/^c0107c64:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107c67	obj/kernel.asm	/^c0107c67:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0107c6a	obj/kernel.asm	/^c0107c6a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107c6d	obj/kernel.asm	/^c0107c6d:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0107c70	obj/kernel.asm	/^c0107c70:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
c0107c73	obj/kernel.asm	/^c0107c73:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0107c76	obj/kernel.asm	/^c0107c76:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107c79	obj/kernel.asm	/^c0107c79:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c0107c7c	obj/kernel.asm	/^c0107c7c:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
c0107c7f	obj/kernel.asm	/^c0107c7f:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0107c82	obj/kernel.asm	/^c0107c82:	89 55 b8             	mov    %edx,-0x48(%ebp)$/;"	l
c0107c85	obj/kernel.asm	/^c0107c85:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0107c88	obj/kernel.asm	/^c0107c88:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0107c8b	obj/kernel.asm	/^c0107c8b:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c0107c8e	obj/kernel.asm	/^c0107c8e:	89 10                	mov    %edx,(%eax)$/;"	l
c0107c90	obj/kernel.asm	/^c0107c90:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0107c93	obj/kernel.asm	/^c0107c93:	8b 10                	mov    (%eax),%edx$/;"	l
c0107c95	obj/kernel.asm	/^c0107c95:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0107c98	obj/kernel.asm	/^c0107c98:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107c9b	obj/kernel.asm	/^c0107c9b:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0107c9e	obj/kernel.asm	/^c0107c9e:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0107ca1	obj/kernel.asm	/^c0107ca1:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107ca4	obj/kernel.asm	/^c0107ca4:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0107ca7	obj/kernel.asm	/^c0107ca7:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
c0107caa	obj/kernel.asm	/^c0107caa:	89 10                	mov    %edx,(%eax)$/;"	l
c0107cac	obj/kernel.asm	/^c0107cac:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107caf	obj/kernel.asm	/^c0107caf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107cb2	obj/kernel.asm	/^c0107cb2:	eb 14                	jmp    c0107cc8 <default_alloc_pages+0x165>$/;"	l
c0107cb4	obj/kernel.asm	/^c0107cb4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107cb7	obj/kernel.asm	/^c0107cb7:	6a 00                	push   $0x0$/;"	l
c0107cb9	obj/kernel.asm	/^c0107cb9:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0107cbc	obj/kernel.asm	/^c0107cbc:	e8 44 fd ff ff       	call   c0107a05 <set_page_ref>$/;"	l
c0107cc1	obj/kernel.asm	/^c0107cc1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107cc4	obj/kernel.asm	/^c0107cc4:	83 45 ec 20          	addl   $0x20,-0x14(%ebp)$/;"	l
c0107cc8	obj/kernel.asm	/^c0107cc8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107ccb	obj/kernel.asm	/^c0107ccb:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107cce	obj/kernel.asm	/^c0107cce:	89 c2                	mov    %eax,%edx$/;"	l
c0107cd0	obj/kernel.asm	/^c0107cd0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107cd3	obj/kernel.asm	/^c0107cd3:	01 d0                	add    %edx,%eax$/;"	l
c0107cd5	obj/kernel.asm	/^c0107cd5:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0107cd8	obj/kernel.asm	/^c0107cd8:	75 da                	jne    c0107cb4 <default_alloc_pages+0x151>$/;"	l
c0107cda	obj/kernel.asm	/^c0107cda:	a1 f4 12 15 c0       	mov    0xc01512f4,%eax$/;"	l
c0107cdf	obj/kernel.asm	/^c0107cdf:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c0107ce2	obj/kernel.asm	/^c0107ce2:	a3 f4 12 15 c0       	mov    %eax,0xc01512f4$/;"	l
c0107ce7	obj/kernel.asm	/^c0107ce7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107cea	obj/kernel.asm	/^c0107cea:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107ced	obj/kernel.asm	/^c0107ced:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%ebp)$/;"	l
c0107cf4	obj/kernel.asm	/^c0107cf4:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0107cf7	obj/kernel.asm	/^c0107cf7:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c0107cfa	obj/kernel.asm	/^c0107cfa:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c0107cfd	obj/kernel.asm	/^c0107cfd:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0107d00	obj/kernel.asm	/^c0107d00:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107d03	obj/kernel.asm	/^c0107d03:	c9                   	leave  $/;"	l
c0107d04	obj/kernel.asm	/^c0107d04:	c3                   	ret    $/;"	l
c0107d05	obj/kernel.asm	/^c0107d05 <default_free_pages>:$/;"	l
c0107d05	obj/kernel.asm	/^c0107d05:	55                   	push   %ebp$/;"	l
c0107d06	obj/kernel.asm	/^c0107d06:	89 e5                	mov    %esp,%ebp$/;"	l
c0107d08	obj/kernel.asm	/^c0107d08:	81 ec 88 00 00 00    	sub    $0x88,%esp$/;"	l
c0107d0e	obj/kernel.asm	/^c0107d0e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0107d12	obj/kernel.asm	/^c0107d12:	75 19                	jne    c0107d2d <default_free_pages+0x28>$/;"	l
c0107d14	obj/kernel.asm	/^c0107d14:	68 4c 54 11 c0       	push   $0xc011544c$/;"	l
c0107d19	obj/kernel.asm	/^c0107d19:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0107d1e	obj/kernel.asm	/^c0107d1e:	68 8a 00 00 00       	push   $0x8a$/;"	l
c0107d23	obj/kernel.asm	/^c0107d23:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c0107d28	obj/kernel.asm	/^c0107d28:	e8 a2 87 ff ff       	call   c01004cf <__panic>$/;"	l
c0107d2d	obj/kernel.asm	/^c0107d2d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d30	obj/kernel.asm	/^c0107d30:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107d33	obj/kernel.asm	/^c0107d33:	e9 8f 00 00 00       	jmp    c0107dc7 <default_free_pages+0xc2>$/;"	l
c0107d38	obj/kernel.asm	/^c0107d38:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107d3b	obj/kernel.asm	/^c0107d3b:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107d3e	obj/kernel.asm	/^c0107d3e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0107d45	obj/kernel.asm	/^c0107d45:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107d48	obj/kernel.asm	/^c0107d48:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107d4b	obj/kernel.asm	/^c0107d4b:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0107d4e	obj/kernel.asm	/^c0107d4e:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0107d51	obj/kernel.asm	/^c0107d51:	19 c0                	sbb    %eax,%eax$/;"	l
c0107d53	obj/kernel.asm	/^c0107d53:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0107d56	obj/kernel.asm	/^c0107d56:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0107d5a	obj/kernel.asm	/^c0107d5a:	0f 95 c0             	setne  %al$/;"	l
c0107d5d	obj/kernel.asm	/^c0107d5d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107d60	obj/kernel.asm	/^c0107d60:	85 c0                	test   %eax,%eax$/;"	l
c0107d62	obj/kernel.asm	/^c0107d62:	75 2c                	jne    c0107d90 <default_free_pages+0x8b>$/;"	l
c0107d64	obj/kernel.asm	/^c0107d64:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107d67	obj/kernel.asm	/^c0107d67:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107d6a	obj/kernel.asm	/^c0107d6a:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
c0107d71	obj/kernel.asm	/^c0107d71:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0107d74	obj/kernel.asm	/^c0107d74:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107d77	obj/kernel.asm	/^c0107d77:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107d7a	obj/kernel.asm	/^c0107d7a:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0107d7d	obj/kernel.asm	/^c0107d7d:	19 c0                	sbb    %eax,%eax$/;"	l
c0107d7f	obj/kernel.asm	/^c0107d7f:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0107d82	obj/kernel.asm	/^c0107d82:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c0107d86	obj/kernel.asm	/^c0107d86:	0f 95 c0             	setne  %al$/;"	l
c0107d89	obj/kernel.asm	/^c0107d89:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107d8c	obj/kernel.asm	/^c0107d8c:	85 c0                	test   %eax,%eax$/;"	l
c0107d8e	obj/kernel.asm	/^c0107d8e:	74 19                	je     c0107da9 <default_free_pages+0xa4>$/;"	l
c0107d90	obj/kernel.asm	/^c0107d90:	68 90 54 11 c0       	push   $0xc0115490$/;"	l
c0107d95	obj/kernel.asm	/^c0107d95:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0107d9a	obj/kernel.asm	/^c0107d9a:	68 8d 00 00 00       	push   $0x8d$/;"	l
c0107d9f	obj/kernel.asm	/^c0107d9f:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c0107da4	obj/kernel.asm	/^c0107da4:	e8 26 87 ff ff       	call   c01004cf <__panic>$/;"	l
c0107da9	obj/kernel.asm	/^c0107da9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107dac	obj/kernel.asm	/^c0107dac:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c0107db3	obj/kernel.asm	/^c0107db3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107db6	obj/kernel.asm	/^c0107db6:	6a 00                	push   $0x0$/;"	l
c0107db8	obj/kernel.asm	/^c0107db8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0107dbb	obj/kernel.asm	/^c0107dbb:	e8 45 fc ff ff       	call   c0107a05 <set_page_ref>$/;"	l
c0107dc0	obj/kernel.asm	/^c0107dc0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107dc3	obj/kernel.asm	/^c0107dc3:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0107dc7	obj/kernel.asm	/^c0107dc7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107dca	obj/kernel.asm	/^c0107dca:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107dcd	obj/kernel.asm	/^c0107dcd:	89 c2                	mov    %eax,%edx$/;"	l
c0107dcf	obj/kernel.asm	/^c0107dcf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107dd2	obj/kernel.asm	/^c0107dd2:	01 d0                	add    %edx,%eax$/;"	l
c0107dd4	obj/kernel.asm	/^c0107dd4:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107dd7	obj/kernel.asm	/^c0107dd7:	0f 85 5b ff ff ff    	jne    c0107d38 <default_free_pages+0x33>$/;"	l
c0107ddd	obj/kernel.asm	/^c0107ddd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107de0	obj/kernel.asm	/^c0107de0:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107de3	obj/kernel.asm	/^c0107de3:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107de6	obj/kernel.asm	/^c0107de6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107de9	obj/kernel.asm	/^c0107de9:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107dec	obj/kernel.asm	/^c0107dec:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)$/;"	l
c0107df3	obj/kernel.asm	/^c0107df3:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0107df6	obj/kernel.asm	/^c0107df6:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0107df9	obj/kernel.asm	/^c0107df9:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0107dfc	obj/kernel.asm	/^c0107dfc:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107dff	obj/kernel.asm	/^c0107dff:	c7 45 c4 ec 12 15 c0 	movl   $0xc01512ec,-0x3c(%ebp)$/;"	l
c0107e06	obj/kernel.asm	/^c0107e06:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0107e09	obj/kernel.asm	/^c0107e09:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107e0c	obj/kernel.asm	/^c0107e0c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107e0f	obj/kernel.asm	/^c0107e0f:	c7 45 ec ec 12 15 c0 	movl   $0xc01512ec,-0x14(%ebp)$/;"	l
c0107e16	obj/kernel.asm	/^c0107e16:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0107e1d	obj/kernel.asm	/^c0107e1d:	e9 3d 01 00 00       	jmp    c0107f5f <default_free_pages+0x25a>$/;"	l
c0107e22	obj/kernel.asm	/^c0107e22:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e25	obj/kernel.asm	/^c0107e25:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0107e28	obj/kernel.asm	/^c0107e28:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107e2b	obj/kernel.asm	/^c0107e2b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e2e	obj/kernel.asm	/^c0107e2e:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0107e31	obj/kernel.asm	/^c0107e31:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0107e34	obj/kernel.asm	/^c0107e34:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107e37	obj/kernel.asm	/^c0107e37:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107e3a	obj/kernel.asm	/^c0107e3a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e3d	obj/kernel.asm	/^c0107e3d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107e40	obj/kernel.asm	/^c0107e40:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107e43	obj/kernel.asm	/^c0107e43:	89 c2                	mov    %eax,%edx$/;"	l
c0107e45	obj/kernel.asm	/^c0107e45:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e48	obj/kernel.asm	/^c0107e48:	01 d0                	add    %edx,%eax$/;"	l
c0107e4a	obj/kernel.asm	/^c0107e4a:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107e4d	obj/kernel.asm	/^c0107e4d:	75 5d                	jne    c0107eac <default_free_pages+0x1a7>$/;"	l
c0107e4f	obj/kernel.asm	/^c0107e4f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e52	obj/kernel.asm	/^c0107e52:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107e55	obj/kernel.asm	/^c0107e55:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e58	obj/kernel.asm	/^c0107e58:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107e5b	obj/kernel.asm	/^c0107e5b:	01 c2                	add    %eax,%edx$/;"	l
c0107e5d	obj/kernel.asm	/^c0107e5d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e60	obj/kernel.asm	/^c0107e60:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107e63	obj/kernel.asm	/^c0107e63:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e66	obj/kernel.asm	/^c0107e66:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107e69	obj/kernel.asm	/^c0107e69:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%ebp)$/;"	l
c0107e70	obj/kernel.asm	/^c0107e70:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0107e73	obj/kernel.asm	/^c0107e73:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0107e76	obj/kernel.asm	/^c0107e76:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c0107e79	obj/kernel.asm	/^c0107e79:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0107e7c	obj/kernel.asm	/^c0107e7c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e7f	obj/kernel.asm	/^c0107e7f:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0107e82	obj/kernel.asm	/^c0107e82:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0107e85	obj/kernel.asm	/^c0107e85:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0107e88	obj/kernel.asm	/^c0107e88:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107e8b	obj/kernel.asm	/^c0107e8b:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0107e8e	obj/kernel.asm	/^c0107e8e:	8b 12                	mov    (%edx),%edx$/;"	l
c0107e90	obj/kernel.asm	/^c0107e90:	89 55 b0             	mov    %edx,-0x50(%ebp)$/;"	l
c0107e93	obj/kernel.asm	/^c0107e93:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0107e96	obj/kernel.asm	/^c0107e96:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0107e99	obj/kernel.asm	/^c0107e99:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
c0107e9c	obj/kernel.asm	/^c0107e9c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107e9f	obj/kernel.asm	/^c0107e9f:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c0107ea2	obj/kernel.asm	/^c0107ea2:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c0107ea5	obj/kernel.asm	/^c0107ea5:	89 10                	mov    %edx,(%eax)$/;"	l
c0107ea7	obj/kernel.asm	/^c0107ea7:	e9 b3 00 00 00       	jmp    c0107f5f <default_free_pages+0x25a>$/;"	l
c0107eac	obj/kernel.asm	/^c0107eac:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107eaf	obj/kernel.asm	/^c0107eaf:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107eb2	obj/kernel.asm	/^c0107eb2:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107eb5	obj/kernel.asm	/^c0107eb5:	89 c2                	mov    %eax,%edx$/;"	l
c0107eb7	obj/kernel.asm	/^c0107eb7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107eba	obj/kernel.asm	/^c0107eba:	01 d0                	add    %edx,%eax$/;"	l
c0107ebc	obj/kernel.asm	/^c0107ebc:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107ebf	obj/kernel.asm	/^c0107ebf:	75 79                	jne    c0107f3a <default_free_pages+0x235>$/;"	l
c0107ec1	obj/kernel.asm	/^c0107ec1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107ec4	obj/kernel.asm	/^c0107ec4:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107ec7	obj/kernel.asm	/^c0107ec7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107eca	obj/kernel.asm	/^c0107eca:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107ecd	obj/kernel.asm	/^c0107ecd:	01 c2                	add    %eax,%edx$/;"	l
c0107ecf	obj/kernel.asm	/^c0107ecf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107ed2	obj/kernel.asm	/^c0107ed2:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107ed5	obj/kernel.asm	/^c0107ed5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107ed8	obj/kernel.asm	/^c0107ed8:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107edb	obj/kernel.asm	/^c0107edb:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%ebp)$/;"	l
c0107ee2	obj/kernel.asm	/^c0107ee2:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c0107ee5	obj/kernel.asm	/^c0107ee5:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0107ee8	obj/kernel.asm	/^c0107ee8:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c0107eeb	obj/kernel.asm	/^c0107eeb:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0107eee	obj/kernel.asm	/^c0107eee:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107ef1	obj/kernel.asm	/^c0107ef1:	89 45 08             	mov    %eax,0x8(%ebp)$/;"	l
c0107ef4	obj/kernel.asm	/^c0107ef4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107ef7	obj/kernel.asm	/^c0107ef7:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107efa	obj/kernel.asm	/^c0107efa:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%ebp)$/;"	l
c0107f01	obj/kernel.asm	/^c0107f01:	89 45 9c             	mov    %eax,-0x64(%ebp)$/;"	l
c0107f04	obj/kernel.asm	/^c0107f04:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c0107f07	obj/kernel.asm	/^c0107f07:	8b 55 a0             	mov    -0x60(%ebp),%edx$/;"	l
c0107f0a	obj/kernel.asm	/^c0107f0a:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107f0d	obj/kernel.asm	/^c0107f0d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f10	obj/kernel.asm	/^c0107f10:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0107f13	obj/kernel.asm	/^c0107f13:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0107f16	obj/kernel.asm	/^c0107f16:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0107f19	obj/kernel.asm	/^c0107f19:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107f1c	obj/kernel.asm	/^c0107f1c:	8b 55 98             	mov    -0x68(%ebp),%edx$/;"	l
c0107f1f	obj/kernel.asm	/^c0107f1f:	8b 12                	mov    (%edx),%edx$/;"	l
c0107f21	obj/kernel.asm	/^c0107f21:	89 55 94             	mov    %edx,-0x6c(%ebp)$/;"	l
c0107f24	obj/kernel.asm	/^c0107f24:	89 45 90             	mov    %eax,-0x70(%ebp)$/;"	l
c0107f27	obj/kernel.asm	/^c0107f27:	8b 45 94             	mov    -0x6c(%ebp),%eax$/;"	l
c0107f2a	obj/kernel.asm	/^c0107f2a:	8b 55 90             	mov    -0x70(%ebp),%edx$/;"	l
c0107f2d	obj/kernel.asm	/^c0107f2d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107f30	obj/kernel.asm	/^c0107f30:	8b 45 90             	mov    -0x70(%ebp),%eax$/;"	l
c0107f33	obj/kernel.asm	/^c0107f33:	8b 55 94             	mov    -0x6c(%ebp),%edx$/;"	l
c0107f36	obj/kernel.asm	/^c0107f36:	89 10                	mov    %edx,(%eax)$/;"	l
c0107f38	obj/kernel.asm	/^c0107f38:	eb 25                	jmp    c0107f5f <default_free_pages+0x25a>$/;"	l
c0107f3a	obj/kernel.asm	/^c0107f3a:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0107f3e	obj/kernel.asm	/^c0107f3e:	75 1f                	jne    c0107f5f <default_free_pages+0x25a>$/;"	l
c0107f40	obj/kernel.asm	/^c0107f40:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f43	obj/kernel.asm	/^c0107f43:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107f46	obj/kernel.asm	/^c0107f46:	76 17                	jbe    c0107f5f <default_free_pages+0x25a>$/;"	l
c0107f48	obj/kernel.asm	/^c0107f48:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
c0107f4f	obj/kernel.asm	/^c0107f4f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f52	obj/kernel.asm	/^c0107f52:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c0107f55	obj/kernel.asm	/^c0107f55:	8b 45 8c             	mov    -0x74(%ebp),%eax$/;"	l
c0107f58	obj/kernel.asm	/^c0107f58:	8b 00                	mov    (%eax),%eax$/;"	l
c0107f5a	obj/kernel.asm	/^c0107f5a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107f5d	obj/kernel.asm	/^c0107f5d:	eb 0d                	jmp    c0107f6c <default_free_pages+0x267>$/;"	l
c0107f5f	obj/kernel.asm	/^c0107f5f:	81 7d f0 ec 12 15 c0 	cmpl   $0xc01512ec,-0x10(%ebp)$/;"	l
c0107f66	obj/kernel.asm	/^c0107f66:	0f 85 b6 fe ff ff    	jne    c0107e22 <default_free_pages+0x11d>$/;"	l
c0107f6c	obj/kernel.asm	/^c0107f6c:	8b 15 f4 12 15 c0    	mov    0xc01512f4,%edx$/;"	l
c0107f72	obj/kernel.asm	/^c0107f72:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107f75	obj/kernel.asm	/^c0107f75:	01 d0                	add    %edx,%eax$/;"	l
c0107f77	obj/kernel.asm	/^c0107f77:	a3 f4 12 15 c0       	mov    %eax,0xc01512f4$/;"	l
c0107f7c	obj/kernel.asm	/^c0107f7c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107f7f	obj/kernel.asm	/^c0107f7f:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0107f82	obj/kernel.asm	/^c0107f82:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107f85	obj/kernel.asm	/^c0107f85:	89 45 88             	mov    %eax,-0x78(%ebp)$/;"	l
c0107f88	obj/kernel.asm	/^c0107f88:	89 55 84             	mov    %edx,-0x7c(%ebp)$/;"	l
c0107f8b	obj/kernel.asm	/^c0107f8b:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
c0107f8e	obj/kernel.asm	/^c0107f8e:	8b 00                	mov    (%eax),%eax$/;"	l
c0107f90	obj/kernel.asm	/^c0107f90:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c0107f93	obj/kernel.asm	/^c0107f93:	89 55 80             	mov    %edx,-0x80(%ebp)$/;"	l
c0107f96	obj/kernel.asm	/^c0107f96:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)$/;"	l
c0107f9c	obj/kernel.asm	/^c0107f9c:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
c0107f9f	obj/kernel.asm	/^c0107f9f:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)$/;"	l
c0107fa5	obj/kernel.asm	/^c0107fa5:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax$/;"	l
c0107fab	obj/kernel.asm	/^c0107fab:	8b 55 80             	mov    -0x80(%ebp),%edx$/;"	l
c0107fae	obj/kernel.asm	/^c0107fae:	89 10                	mov    %edx,(%eax)$/;"	l
c0107fb0	obj/kernel.asm	/^c0107fb0:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax$/;"	l
c0107fb6	obj/kernel.asm	/^c0107fb6:	8b 10                	mov    (%eax),%edx$/;"	l
c0107fb8	obj/kernel.asm	/^c0107fb8:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax$/;"	l
c0107fbe	obj/kernel.asm	/^c0107fbe:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107fc1	obj/kernel.asm	/^c0107fc1:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c0107fc4	obj/kernel.asm	/^c0107fc4:	8b 95 78 ff ff ff    	mov    -0x88(%ebp),%edx$/;"	l
c0107fca	obj/kernel.asm	/^c0107fca:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107fcd	obj/kernel.asm	/^c0107fcd:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c0107fd0	obj/kernel.asm	/^c0107fd0:	8b 95 7c ff ff ff    	mov    -0x84(%ebp),%edx$/;"	l
c0107fd6	obj/kernel.asm	/^c0107fd6:	89 10                	mov    %edx,(%eax)$/;"	l
c0107fd8	obj/kernel.asm	/^c0107fd8:	c9                   	leave  $/;"	l
c0107fd9	obj/kernel.asm	/^c0107fd9:	c3                   	ret    $/;"	l
c0107fda	obj/kernel.asm	/^c0107fda <print_free_link>:$/;"	l
c0107fda	obj/kernel.asm	/^c0107fda:	55                   	push   %ebp$/;"	l
c0107fdb	obj/kernel.asm	/^c0107fdb:	89 e5                	mov    %esp,%ebp$/;"	l
c0107fdd	obj/kernel.asm	/^c0107fdd:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107fe0	obj/kernel.asm	/^c0107fe0:	c7 45 f4 ec 12 15 c0 	movl   $0xc01512ec,-0xc(%ebp)$/;"	l
c0107fe7	obj/kernel.asm	/^c0107fe7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107fea	obj/kernel.asm	/^c0107fea:	68 b8 54 11 c0       	push   $0xc01154b8$/;"	l
c0107fef	obj/kernel.asm	/^c0107fef:	e8 76 83 ff ff       	call   c010036a <cprintf>$/;"	l
c0107ff4	obj/kernel.asm	/^c0107ff4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107ff7	obj/kernel.asm	/^c0107ff7:	eb 31                	jmp    c010802a <print_free_link+0x50>$/;"	l
c0107ff9	obj/kernel.asm	/^c0107ff9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107ffc	obj/kernel.asm	/^c0107ffc:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0107fff	obj/kernel.asm	/^c0107fff:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108002	obj/kernel.asm	/^c0108002:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108005	obj/kernel.asm	/^c0108005:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108008	obj/kernel.asm	/^c0108008:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c010800b	obj/kernel.asm	/^c010800b:	89 c2                	mov    %eax,%edx$/;"	l
c010800d	obj/kernel.asm	/^c010800d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108010	obj/kernel.asm	/^c0108010:	01 c2                	add    %eax,%edx$/;"	l
c0108012	obj/kernel.asm	/^c0108012:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108015	obj/kernel.asm	/^c0108015:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108018	obj/kernel.asm	/^c0108018:	52                   	push   %edx$/;"	l
c0108019	obj/kernel.asm	/^c0108019:	50                   	push   %eax$/;"	l
c010801a	obj/kernel.asm	/^c010801a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010801d	obj/kernel.asm	/^c010801d:	68 f4 54 11 c0       	push   $0xc01154f4$/;"	l
c0108022	obj/kernel.asm	/^c0108022:	e8 43 83 ff ff       	call   c010036a <cprintf>$/;"	l
c0108027	obj/kernel.asm	/^c0108027:	83 c4 10             	add    $0x10,%esp$/;"	l
c010802a	obj/kernel.asm	/^c010802a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010802d	obj/kernel.asm	/^c010802d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108030	obj/kernel.asm	/^c0108030:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108033	obj/kernel.asm	/^c0108033:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108036	obj/kernel.asm	/^c0108036:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108039	obj/kernel.asm	/^c0108039:	81 7d f4 ec 12 15 c0 	cmpl   $0xc01512ec,-0xc(%ebp)$/;"	l
c0108040	obj/kernel.asm	/^c0108040:	75 b7                	jne    c0107ff9 <print_free_link+0x1f>$/;"	l
c0108042	obj/kernel.asm	/^c0108042:	c9                   	leave  $/;"	l
c0108043	obj/kernel.asm	/^c0108043:	c3                   	ret    $/;"	l
c0108044	obj/kernel.asm	/^c0108044 <default_nr_free_pages>:$/;"	l
c0108044	obj/kernel.asm	/^c0108044:	55                   	push   %ebp$/;"	l
c0108045	obj/kernel.asm	/^c0108045:	89 e5                	mov    %esp,%ebp$/;"	l
c0108047	obj/kernel.asm	/^c0108047:	a1 f4 12 15 c0       	mov    0xc01512f4,%eax$/;"	l
c010804c	obj/kernel.asm	/^c010804c:	5d                   	pop    %ebp$/;"	l
c010804d	obj/kernel.asm	/^c010804d:	c3                   	ret    $/;"	l
c010804e	obj/kernel.asm	/^c010804e <basic_check>:$/;"	l
c010804e	obj/kernel.asm	/^c010804e:	55                   	push   %ebp$/;"	l
c010804f	obj/kernel.asm	/^c010804f:	89 e5                	mov    %esp,%ebp$/;"	l
c0108051	obj/kernel.asm	/^c0108051:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0108054	obj/kernel.asm	/^c0108054:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010805b	obj/kernel.asm	/^c010805b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010805e	obj/kernel.asm	/^c010805e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108061	obj/kernel.asm	/^c0108061:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108064	obj/kernel.asm	/^c0108064:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108067	obj/kernel.asm	/^c0108067:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010806a	obj/kernel.asm	/^c010806a:	6a 01                	push   $0x1$/;"	l
c010806c	obj/kernel.asm	/^c010806c:	e8 d0 b8 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c0108071	obj/kernel.asm	/^c0108071:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108074	obj/kernel.asm	/^c0108074:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108077	obj/kernel.asm	/^c0108077:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010807b	obj/kernel.asm	/^c010807b:	75 19                	jne    c0108096 <basic_check+0x48>$/;"	l
c010807d	obj/kernel.asm	/^c010807d:	68 15 55 11 c0       	push   $0xc0115515$/;"	l
c0108082	obj/kernel.asm	/^c0108082:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108087	obj/kernel.asm	/^c0108087:	68 ce 00 00 00       	push   $0xce$/;"	l
c010808c	obj/kernel.asm	/^c010808c:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c0108091	obj/kernel.asm	/^c0108091:	e8 39 84 ff ff       	call   c01004cf <__panic>$/;"	l
c0108096	obj/kernel.asm	/^c0108096:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108099	obj/kernel.asm	/^c0108099:	6a 01                	push   $0x1$/;"	l
c010809b	obj/kernel.asm	/^c010809b:	e8 a1 b8 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c01080a0	obj/kernel.asm	/^c01080a0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01080a3	obj/kernel.asm	/^c01080a3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01080a6	obj/kernel.asm	/^c01080a6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01080aa	obj/kernel.asm	/^c01080aa:	75 19                	jne    c01080c5 <basic_check+0x77>$/;"	l
c01080ac	obj/kernel.asm	/^c01080ac:	68 31 55 11 c0       	push   $0xc0115531$/;"	l
c01080b1	obj/kernel.asm	/^c01080b1:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c01080b6	obj/kernel.asm	/^c01080b6:	68 cf 00 00 00       	push   $0xcf$/;"	l
c01080bb	obj/kernel.asm	/^c01080bb:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c01080c0	obj/kernel.asm	/^c01080c0:	e8 0a 84 ff ff       	call   c01004cf <__panic>$/;"	l
c01080c5	obj/kernel.asm	/^c01080c5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01080c8	obj/kernel.asm	/^c01080c8:	6a 01                	push   $0x1$/;"	l
c01080ca	obj/kernel.asm	/^c01080ca:	e8 72 b8 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c01080cf	obj/kernel.asm	/^c01080cf:	83 c4 10             	add    $0x10,%esp$/;"	l
c01080d2	obj/kernel.asm	/^c01080d2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01080d5	obj/kernel.asm	/^c01080d5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01080d9	obj/kernel.asm	/^c01080d9:	75 19                	jne    c01080f4 <basic_check+0xa6>$/;"	l
c01080db	obj/kernel.asm	/^c01080db:	68 4d 55 11 c0       	push   $0xc011554d$/;"	l
c01080e0	obj/kernel.asm	/^c01080e0:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c01080e5	obj/kernel.asm	/^c01080e5:	68 d0 00 00 00       	push   $0xd0$/;"	l
c01080ea	obj/kernel.asm	/^c01080ea:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c01080ef	obj/kernel.asm	/^c01080ef:	e8 db 83 ff ff       	call   c01004cf <__panic>$/;"	l
c01080f4	obj/kernel.asm	/^c01080f4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01080f7	obj/kernel.asm	/^c01080f7:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01080fa	obj/kernel.asm	/^c01080fa:	74 10                	je     c010810c <basic_check+0xbe>$/;"	l
c01080fc	obj/kernel.asm	/^c01080fc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01080ff	obj/kernel.asm	/^c01080ff:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0108102	obj/kernel.asm	/^c0108102:	74 08                	je     c010810c <basic_check+0xbe>$/;"	l
c0108104	obj/kernel.asm	/^c0108104:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108107	obj/kernel.asm	/^c0108107:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010810a	obj/kernel.asm	/^c010810a:	75 19                	jne    c0108125 <basic_check+0xd7>$/;"	l
c010810c	obj/kernel.asm	/^c010810c:	68 6c 55 11 c0       	push   $0xc011556c$/;"	l
c0108111	obj/kernel.asm	/^c0108111:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108116	obj/kernel.asm	/^c0108116:	68 d2 00 00 00       	push   $0xd2$/;"	l
c010811b	obj/kernel.asm	/^c010811b:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c0108120	obj/kernel.asm	/^c0108120:	e8 aa 83 ff ff       	call   c01004cf <__panic>$/;"	l
c0108125	obj/kernel.asm	/^c0108125:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108128	obj/kernel.asm	/^c0108128:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010812b	obj/kernel.asm	/^c010812b:	e8 cb f8 ff ff       	call   c01079fb <page_ref>$/;"	l
c0108130	obj/kernel.asm	/^c0108130:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108133	obj/kernel.asm	/^c0108133:	85 c0                	test   %eax,%eax$/;"	l
c0108135	obj/kernel.asm	/^c0108135:	75 24                	jne    c010815b <basic_check+0x10d>$/;"	l
c0108137	obj/kernel.asm	/^c0108137:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010813a	obj/kernel.asm	/^c010813a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010813d	obj/kernel.asm	/^c010813d:	e8 b9 f8 ff ff       	call   c01079fb <page_ref>$/;"	l
c0108142	obj/kernel.asm	/^c0108142:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108145	obj/kernel.asm	/^c0108145:	85 c0                	test   %eax,%eax$/;"	l
c0108147	obj/kernel.asm	/^c0108147:	75 12                	jne    c010815b <basic_check+0x10d>$/;"	l
c0108149	obj/kernel.asm	/^c0108149:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010814c	obj/kernel.asm	/^c010814c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010814f	obj/kernel.asm	/^c010814f:	e8 a7 f8 ff ff       	call   c01079fb <page_ref>$/;"	l
c0108154	obj/kernel.asm	/^c0108154:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108157	obj/kernel.asm	/^c0108157:	85 c0                	test   %eax,%eax$/;"	l
c0108159	obj/kernel.asm	/^c0108159:	74 19                	je     c0108174 <basic_check+0x126>$/;"	l
c010815b	obj/kernel.asm	/^c010815b:	68 90 55 11 c0       	push   $0xc0115590$/;"	l
c0108160	obj/kernel.asm	/^c0108160:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108165	obj/kernel.asm	/^c0108165:	68 d3 00 00 00       	push   $0xd3$/;"	l
c010816a	obj/kernel.asm	/^c010816a:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c010816f	obj/kernel.asm	/^c010816f:	e8 5b 83 ff ff       	call   c01004cf <__panic>$/;"	l
c0108174	obj/kernel.asm	/^c0108174:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108177	obj/kernel.asm	/^c0108177:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010817a	obj/kernel.asm	/^c010817a:	e8 69 f8 ff ff       	call   c01079e8 <page2pa>$/;"	l
c010817f	obj/kernel.asm	/^c010817f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108182	obj/kernel.asm	/^c0108182:	89 c2                	mov    %eax,%edx$/;"	l
c0108184	obj/kernel.asm	/^c0108184:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c0108189	obj/kernel.asm	/^c0108189:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010818c	obj/kernel.asm	/^c010818c:	39 c2                	cmp    %eax,%edx$/;"	l
c010818e	obj/kernel.asm	/^c010818e:	72 19                	jb     c01081a9 <basic_check+0x15b>$/;"	l
c0108190	obj/kernel.asm	/^c0108190:	68 cc 55 11 c0       	push   $0xc01155cc$/;"	l
c0108195	obj/kernel.asm	/^c0108195:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c010819a	obj/kernel.asm	/^c010819a:	68 d5 00 00 00       	push   $0xd5$/;"	l
c010819f	obj/kernel.asm	/^c010819f:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c01081a4	obj/kernel.asm	/^c01081a4:	e8 26 83 ff ff       	call   c01004cf <__panic>$/;"	l
c01081a9	obj/kernel.asm	/^c01081a9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01081ac	obj/kernel.asm	/^c01081ac:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01081af	obj/kernel.asm	/^c01081af:	e8 34 f8 ff ff       	call   c01079e8 <page2pa>$/;"	l
c01081b4	obj/kernel.asm	/^c01081b4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01081b7	obj/kernel.asm	/^c01081b7:	89 c2                	mov    %eax,%edx$/;"	l
c01081b9	obj/kernel.asm	/^c01081b9:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c01081be	obj/kernel.asm	/^c01081be:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01081c1	obj/kernel.asm	/^c01081c1:	39 c2                	cmp    %eax,%edx$/;"	l
c01081c3	obj/kernel.asm	/^c01081c3:	72 19                	jb     c01081de <basic_check+0x190>$/;"	l
c01081c5	obj/kernel.asm	/^c01081c5:	68 e9 55 11 c0       	push   $0xc01155e9$/;"	l
c01081ca	obj/kernel.asm	/^c01081ca:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c01081cf	obj/kernel.asm	/^c01081cf:	68 d6 00 00 00       	push   $0xd6$/;"	l
c01081d4	obj/kernel.asm	/^c01081d4:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c01081d9	obj/kernel.asm	/^c01081d9:	e8 f1 82 ff ff       	call   c01004cf <__panic>$/;"	l
c01081de	obj/kernel.asm	/^c01081de:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01081e1	obj/kernel.asm	/^c01081e1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01081e4	obj/kernel.asm	/^c01081e4:	e8 ff f7 ff ff       	call   c01079e8 <page2pa>$/;"	l
c01081e9	obj/kernel.asm	/^c01081e9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01081ec	obj/kernel.asm	/^c01081ec:	89 c2                	mov    %eax,%edx$/;"	l
c01081ee	obj/kernel.asm	/^c01081ee:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c01081f3	obj/kernel.asm	/^c01081f3:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01081f6	obj/kernel.asm	/^c01081f6:	39 c2                	cmp    %eax,%edx$/;"	l
c01081f8	obj/kernel.asm	/^c01081f8:	72 19                	jb     c0108213 <basic_check+0x1c5>$/;"	l
c01081fa	obj/kernel.asm	/^c01081fa:	68 06 56 11 c0       	push   $0xc0115606$/;"	l
c01081ff	obj/kernel.asm	/^c01081ff:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108204	obj/kernel.asm	/^c0108204:	68 d7 00 00 00       	push   $0xd7$/;"	l
c0108209	obj/kernel.asm	/^c0108209:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c010820e	obj/kernel.asm	/^c010820e:	e8 bc 82 ff ff       	call   c01004cf <__panic>$/;"	l
c0108213	obj/kernel.asm	/^c0108213:	a1 ec 12 15 c0       	mov    0xc01512ec,%eax$/;"	l
c0108218	obj/kernel.asm	/^c0108218:	8b 15 f0 12 15 c0    	mov    0xc01512f0,%edx$/;"	l
c010821e	obj/kernel.asm	/^c010821e:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0108221	obj/kernel.asm	/^c0108221:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0108224	obj/kernel.asm	/^c0108224:	c7 45 e0 ec 12 15 c0 	movl   $0xc01512ec,-0x20(%ebp)$/;"	l
c010822b	obj/kernel.asm	/^c010822b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010822e	obj/kernel.asm	/^c010822e:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0108231	obj/kernel.asm	/^c0108231:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108234	obj/kernel.asm	/^c0108234:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108237	obj/kernel.asm	/^c0108237:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010823a	obj/kernel.asm	/^c010823a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010823d	obj/kernel.asm	/^c010823d:	89 10                	mov    %edx,(%eax)$/;"	l
c010823f	obj/kernel.asm	/^c010823f:	c7 45 dc ec 12 15 c0 	movl   $0xc01512ec,-0x24(%ebp)$/;"	l
c0108246	obj/kernel.asm	/^c0108246:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108249	obj/kernel.asm	/^c0108249:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010824c	obj/kernel.asm	/^c010824c:	39 45 dc             	cmp    %eax,-0x24(%ebp)$/;"	l
c010824f	obj/kernel.asm	/^c010824f:	0f 94 c0             	sete   %al$/;"	l
c0108252	obj/kernel.asm	/^c0108252:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108255	obj/kernel.asm	/^c0108255:	85 c0                	test   %eax,%eax$/;"	l
c0108257	obj/kernel.asm	/^c0108257:	75 19                	jne    c0108272 <basic_check+0x224>$/;"	l
c0108259	obj/kernel.asm	/^c0108259:	68 23 56 11 c0       	push   $0xc0115623$/;"	l
c010825e	obj/kernel.asm	/^c010825e:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108263	obj/kernel.asm	/^c0108263:	68 db 00 00 00       	push   $0xdb$/;"	l
c0108268	obj/kernel.asm	/^c0108268:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c010826d	obj/kernel.asm	/^c010826d:	e8 5d 82 ff ff       	call   c01004cf <__panic>$/;"	l
c0108272	obj/kernel.asm	/^c0108272:	a1 f4 12 15 c0       	mov    0xc01512f4,%eax$/;"	l
c0108277	obj/kernel.asm	/^c0108277:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010827a	obj/kernel.asm	/^c010827a:	c7 05 f4 12 15 c0 00 	movl   $0x0,0xc01512f4$/;"	l
c0108281	obj/kernel.asm	/^c0108281:	00 00 00 $/;"	l
c0108284	obj/kernel.asm	/^c0108284:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108287	obj/kernel.asm	/^c0108287:	6a 01                	push   $0x1$/;"	l
c0108289	obj/kernel.asm	/^c0108289:	e8 b3 b6 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c010828e	obj/kernel.asm	/^c010828e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108291	obj/kernel.asm	/^c0108291:	85 c0                	test   %eax,%eax$/;"	l
c0108293	obj/kernel.asm	/^c0108293:	74 19                	je     c01082ae <basic_check+0x260>$/;"	l
c0108295	obj/kernel.asm	/^c0108295:	68 3a 56 11 c0       	push   $0xc011563a$/;"	l
c010829a	obj/kernel.asm	/^c010829a:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c010829f	obj/kernel.asm	/^c010829f:	68 e0 00 00 00       	push   $0xe0$/;"	l
c01082a4	obj/kernel.asm	/^c01082a4:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c01082a9	obj/kernel.asm	/^c01082a9:	e8 21 82 ff ff       	call   c01004cf <__panic>$/;"	l
c01082ae	obj/kernel.asm	/^c01082ae:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01082b1	obj/kernel.asm	/^c01082b1:	6a 01                	push   $0x1$/;"	l
c01082b3	obj/kernel.asm	/^c01082b3:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01082b6	obj/kernel.asm	/^c01082b6:	e8 f2 b6 ff ff       	call   c01039ad <free_pages>$/;"	l
c01082bb	obj/kernel.asm	/^c01082bb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01082be	obj/kernel.asm	/^c01082be:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01082c1	obj/kernel.asm	/^c01082c1:	6a 01                	push   $0x1$/;"	l
c01082c3	obj/kernel.asm	/^c01082c3:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01082c6	obj/kernel.asm	/^c01082c6:	e8 e2 b6 ff ff       	call   c01039ad <free_pages>$/;"	l
c01082cb	obj/kernel.asm	/^c01082cb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01082ce	obj/kernel.asm	/^c01082ce:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01082d1	obj/kernel.asm	/^c01082d1:	6a 01                	push   $0x1$/;"	l
c01082d3	obj/kernel.asm	/^c01082d3:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01082d6	obj/kernel.asm	/^c01082d6:	e8 d2 b6 ff ff       	call   c01039ad <free_pages>$/;"	l
c01082db	obj/kernel.asm	/^c01082db:	83 c4 10             	add    $0x10,%esp$/;"	l
c01082de	obj/kernel.asm	/^c01082de:	a1 f4 12 15 c0       	mov    0xc01512f4,%eax$/;"	l
c01082e3	obj/kernel.asm	/^c01082e3:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c01082e6	obj/kernel.asm	/^c01082e6:	74 19                	je     c0108301 <basic_check+0x2b3>$/;"	l
c01082e8	obj/kernel.asm	/^c01082e8:	68 4f 56 11 c0       	push   $0xc011564f$/;"	l
c01082ed	obj/kernel.asm	/^c01082ed:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c01082f2	obj/kernel.asm	/^c01082f2:	68 e5 00 00 00       	push   $0xe5$/;"	l
c01082f7	obj/kernel.asm	/^c01082f7:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c01082fc	obj/kernel.asm	/^c01082fc:	e8 ce 81 ff ff       	call   c01004cf <__panic>$/;"	l
c0108301	obj/kernel.asm	/^c0108301:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108304	obj/kernel.asm	/^c0108304:	6a 01                	push   $0x1$/;"	l
c0108306	obj/kernel.asm	/^c0108306:	e8 36 b6 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c010830b	obj/kernel.asm	/^c010830b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010830e	obj/kernel.asm	/^c010830e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108311	obj/kernel.asm	/^c0108311:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0108315	obj/kernel.asm	/^c0108315:	75 19                	jne    c0108330 <basic_check+0x2e2>$/;"	l
c0108317	obj/kernel.asm	/^c0108317:	68 15 55 11 c0       	push   $0xc0115515$/;"	l
c010831c	obj/kernel.asm	/^c010831c:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108321	obj/kernel.asm	/^c0108321:	68 e7 00 00 00       	push   $0xe7$/;"	l
c0108326	obj/kernel.asm	/^c0108326:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c010832b	obj/kernel.asm	/^c010832b:	e8 9f 81 ff ff       	call   c01004cf <__panic>$/;"	l
c0108330	obj/kernel.asm	/^c0108330:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108333	obj/kernel.asm	/^c0108333:	6a 01                	push   $0x1$/;"	l
c0108335	obj/kernel.asm	/^c0108335:	e8 07 b6 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c010833a	obj/kernel.asm	/^c010833a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010833d	obj/kernel.asm	/^c010833d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108340	obj/kernel.asm	/^c0108340:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0108344	obj/kernel.asm	/^c0108344:	75 19                	jne    c010835f <basic_check+0x311>$/;"	l
c0108346	obj/kernel.asm	/^c0108346:	68 31 55 11 c0       	push   $0xc0115531$/;"	l
c010834b	obj/kernel.asm	/^c010834b:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108350	obj/kernel.asm	/^c0108350:	68 e8 00 00 00       	push   $0xe8$/;"	l
c0108355	obj/kernel.asm	/^c0108355:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c010835a	obj/kernel.asm	/^c010835a:	e8 70 81 ff ff       	call   c01004cf <__panic>$/;"	l
c010835f	obj/kernel.asm	/^c010835f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108362	obj/kernel.asm	/^c0108362:	6a 01                	push   $0x1$/;"	l
c0108364	obj/kernel.asm	/^c0108364:	e8 d8 b5 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c0108369	obj/kernel.asm	/^c0108369:	83 c4 10             	add    $0x10,%esp$/;"	l
c010836c	obj/kernel.asm	/^c010836c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010836f	obj/kernel.asm	/^c010836f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108373	obj/kernel.asm	/^c0108373:	75 19                	jne    c010838e <basic_check+0x340>$/;"	l
c0108375	obj/kernel.asm	/^c0108375:	68 4d 55 11 c0       	push   $0xc011554d$/;"	l
c010837a	obj/kernel.asm	/^c010837a:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c010837f	obj/kernel.asm	/^c010837f:	68 e9 00 00 00       	push   $0xe9$/;"	l
c0108384	obj/kernel.asm	/^c0108384:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c0108389	obj/kernel.asm	/^c0108389:	e8 41 81 ff ff       	call   c01004cf <__panic>$/;"	l
c010838e	obj/kernel.asm	/^c010838e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108391	obj/kernel.asm	/^c0108391:	6a 01                	push   $0x1$/;"	l
c0108393	obj/kernel.asm	/^c0108393:	e8 a9 b5 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c0108398	obj/kernel.asm	/^c0108398:	83 c4 10             	add    $0x10,%esp$/;"	l
c010839b	obj/kernel.asm	/^c010839b:	85 c0                	test   %eax,%eax$/;"	l
c010839d	obj/kernel.asm	/^c010839d:	74 19                	je     c01083b8 <basic_check+0x36a>$/;"	l
c010839f	obj/kernel.asm	/^c010839f:	68 3a 56 11 c0       	push   $0xc011563a$/;"	l
c01083a4	obj/kernel.asm	/^c01083a4:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c01083a9	obj/kernel.asm	/^c01083a9:	68 eb 00 00 00       	push   $0xeb$/;"	l
c01083ae	obj/kernel.asm	/^c01083ae:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c01083b3	obj/kernel.asm	/^c01083b3:	e8 17 81 ff ff       	call   c01004cf <__panic>$/;"	l
c01083b8	obj/kernel.asm	/^c01083b8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01083bb	obj/kernel.asm	/^c01083bb:	6a 01                	push   $0x1$/;"	l
c01083bd	obj/kernel.asm	/^c01083bd:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01083c0	obj/kernel.asm	/^c01083c0:	e8 e8 b5 ff ff       	call   c01039ad <free_pages>$/;"	l
c01083c5	obj/kernel.asm	/^c01083c5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01083c8	obj/kernel.asm	/^c01083c8:	c7 45 d8 ec 12 15 c0 	movl   $0xc01512ec,-0x28(%ebp)$/;"	l
c01083cf	obj/kernel.asm	/^c01083cf:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01083d2	obj/kernel.asm	/^c01083d2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01083d5	obj/kernel.asm	/^c01083d5:	39 45 d8             	cmp    %eax,-0x28(%ebp)$/;"	l
c01083d8	obj/kernel.asm	/^c01083d8:	0f 94 c0             	sete   %al$/;"	l
c01083db	obj/kernel.asm	/^c01083db:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01083de	obj/kernel.asm	/^c01083de:	85 c0                	test   %eax,%eax$/;"	l
c01083e0	obj/kernel.asm	/^c01083e0:	74 19                	je     c01083fb <basic_check+0x3ad>$/;"	l
c01083e2	obj/kernel.asm	/^c01083e2:	68 5c 56 11 c0       	push   $0xc011565c$/;"	l
c01083e7	obj/kernel.asm	/^c01083e7:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c01083ec	obj/kernel.asm	/^c01083ec:	68 ee 00 00 00       	push   $0xee$/;"	l
c01083f1	obj/kernel.asm	/^c01083f1:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c01083f6	obj/kernel.asm	/^c01083f6:	e8 d4 80 ff ff       	call   c01004cf <__panic>$/;"	l
c01083fb	obj/kernel.asm	/^c01083fb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01083fe	obj/kernel.asm	/^c01083fe:	6a 01                	push   $0x1$/;"	l
c0108400	obj/kernel.asm	/^c0108400:	e8 3c b5 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c0108405	obj/kernel.asm	/^c0108405:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108408	obj/kernel.asm	/^c0108408:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010840b	obj/kernel.asm	/^c010840b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010840e	obj/kernel.asm	/^c010840e:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0108411	obj/kernel.asm	/^c0108411:	74 19                	je     c010842c <basic_check+0x3de>$/;"	l
c0108413	obj/kernel.asm	/^c0108413:	68 74 56 11 c0       	push   $0xc0115674$/;"	l
c0108418	obj/kernel.asm	/^c0108418:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c010841d	obj/kernel.asm	/^c010841d:	68 f1 00 00 00       	push   $0xf1$/;"	l
c0108422	obj/kernel.asm	/^c0108422:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c0108427	obj/kernel.asm	/^c0108427:	e8 a3 80 ff ff       	call   c01004cf <__panic>$/;"	l
c010842c	obj/kernel.asm	/^c010842c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010842f	obj/kernel.asm	/^c010842f:	6a 01                	push   $0x1$/;"	l
c0108431	obj/kernel.asm	/^c0108431:	e8 0b b5 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c0108436	obj/kernel.asm	/^c0108436:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108439	obj/kernel.asm	/^c0108439:	85 c0                	test   %eax,%eax$/;"	l
c010843b	obj/kernel.asm	/^c010843b:	74 19                	je     c0108456 <basic_check+0x408>$/;"	l
c010843d	obj/kernel.asm	/^c010843d:	68 3a 56 11 c0       	push   $0xc011563a$/;"	l
c0108442	obj/kernel.asm	/^c0108442:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108447	obj/kernel.asm	/^c0108447:	68 f2 00 00 00       	push   $0xf2$/;"	l
c010844c	obj/kernel.asm	/^c010844c:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c0108451	obj/kernel.asm	/^c0108451:	e8 79 80 ff ff       	call   c01004cf <__panic>$/;"	l
c0108456	obj/kernel.asm	/^c0108456:	a1 f4 12 15 c0       	mov    0xc01512f4,%eax$/;"	l
c010845b	obj/kernel.asm	/^c010845b:	85 c0                	test   %eax,%eax$/;"	l
c010845d	obj/kernel.asm	/^c010845d:	74 19                	je     c0108478 <basic_check+0x42a>$/;"	l
c010845f	obj/kernel.asm	/^c010845f:	68 8d 56 11 c0       	push   $0xc011568d$/;"	l
c0108464	obj/kernel.asm	/^c0108464:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108469	obj/kernel.asm	/^c0108469:	68 f4 00 00 00       	push   $0xf4$/;"	l
c010846e	obj/kernel.asm	/^c010846e:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c0108473	obj/kernel.asm	/^c0108473:	e8 57 80 ff ff       	call   c01004cf <__panic>$/;"	l
c0108478	obj/kernel.asm	/^c0108478:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010847b	obj/kernel.asm	/^c010847b:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010847e	obj/kernel.asm	/^c010847e:	a3 ec 12 15 c0       	mov    %eax,0xc01512ec$/;"	l
c0108483	obj/kernel.asm	/^c0108483:	89 15 f0 12 15 c0    	mov    %edx,0xc01512f0$/;"	l
c0108489	obj/kernel.asm	/^c0108489:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010848c	obj/kernel.asm	/^c010848c:	a3 f4 12 15 c0       	mov    %eax,0xc01512f4$/;"	l
c0108491	obj/kernel.asm	/^c0108491:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108494	obj/kernel.asm	/^c0108494:	6a 01                	push   $0x1$/;"	l
c0108496	obj/kernel.asm	/^c0108496:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0108499	obj/kernel.asm	/^c0108499:	e8 0f b5 ff ff       	call   c01039ad <free_pages>$/;"	l
c010849e	obj/kernel.asm	/^c010849e:	83 c4 10             	add    $0x10,%esp$/;"	l
c01084a1	obj/kernel.asm	/^c01084a1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01084a4	obj/kernel.asm	/^c01084a4:	6a 01                	push   $0x1$/;"	l
c01084a6	obj/kernel.asm	/^c01084a6:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01084a9	obj/kernel.asm	/^c01084a9:	e8 ff b4 ff ff       	call   c01039ad <free_pages>$/;"	l
c01084ae	obj/kernel.asm	/^c01084ae:	83 c4 10             	add    $0x10,%esp$/;"	l
c01084b1	obj/kernel.asm	/^c01084b1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01084b4	obj/kernel.asm	/^c01084b4:	6a 01                	push   $0x1$/;"	l
c01084b6	obj/kernel.asm	/^c01084b6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01084b9	obj/kernel.asm	/^c01084b9:	e8 ef b4 ff ff       	call   c01039ad <free_pages>$/;"	l
c01084be	obj/kernel.asm	/^c01084be:	83 c4 10             	add    $0x10,%esp$/;"	l
c01084c1	obj/kernel.asm	/^c01084c1:	c9                   	leave  $/;"	l
c01084c2	obj/kernel.asm	/^c01084c2:	c3                   	ret    $/;"	l
c01084c3	obj/kernel.asm	/^c01084c3 <default_check>:$/;"	l
c01084c3	obj/kernel.asm	/^c01084c3:	55                   	push   %ebp$/;"	l
c01084c4	obj/kernel.asm	/^c01084c4:	89 e5                	mov    %esp,%ebp$/;"	l
c01084c6	obj/kernel.asm	/^c01084c6:	53                   	push   %ebx$/;"	l
c01084c7	obj/kernel.asm	/^c01084c7:	81 ec 84 00 00 00    	sub    $0x84,%esp$/;"	l
c01084cd	obj/kernel.asm	/^c01084cd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01084d4	obj/kernel.asm	/^c01084d4:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01084db	obj/kernel.asm	/^c01084db:	c7 45 ec ec 12 15 c0 	movl   $0xc01512ec,-0x14(%ebp)$/;"	l
c01084e2	obj/kernel.asm	/^c01084e2:	eb 60                	jmp    c0108544 <default_check+0x81>$/;"	l
c01084e4	obj/kernel.asm	/^c01084e4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01084e7	obj/kernel.asm	/^c01084e7:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01084ea	obj/kernel.asm	/^c01084ea:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01084ed	obj/kernel.asm	/^c01084ed:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01084f0	obj/kernel.asm	/^c01084f0:	83 c0 04             	add    $0x4,%eax$/;"	l
c01084f3	obj/kernel.asm	/^c01084f3:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)$/;"	l
c01084fa	obj/kernel.asm	/^c01084fa:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01084fd	obj/kernel.asm	/^c01084fd:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0108500	obj/kernel.asm	/^c0108500:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0108503	obj/kernel.asm	/^c0108503:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0108506	obj/kernel.asm	/^c0108506:	19 c0                	sbb    %eax,%eax$/;"	l
c0108508	obj/kernel.asm	/^c0108508:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010850b	obj/kernel.asm	/^c010850b:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c010850f	obj/kernel.asm	/^c010850f:	0f 95 c0             	setne  %al$/;"	l
c0108512	obj/kernel.asm	/^c0108512:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108515	obj/kernel.asm	/^c0108515:	85 c0                	test   %eax,%eax$/;"	l
c0108517	obj/kernel.asm	/^c0108517:	75 19                	jne    c0108532 <default_check+0x6f>$/;"	l
c0108519	obj/kernel.asm	/^c0108519:	68 9a 56 11 c0       	push   $0xc011569a$/;"	l
c010851e	obj/kernel.asm	/^c010851e:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108523	obj/kernel.asm	/^c0108523:	68 05 01 00 00       	push   $0x105$/;"	l
c0108528	obj/kernel.asm	/^c0108528:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c010852d	obj/kernel.asm	/^c010852d:	e8 9d 7f ff ff       	call   c01004cf <__panic>$/;"	l
c0108532	obj/kernel.asm	/^c0108532:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108536	obj/kernel.asm	/^c0108536:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108539	obj/kernel.asm	/^c0108539:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010853c	obj/kernel.asm	/^c010853c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010853f	obj/kernel.asm	/^c010853f:	01 d0                	add    %edx,%eax$/;"	l
c0108541	obj/kernel.asm	/^c0108541:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108544	obj/kernel.asm	/^c0108544:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108547	obj/kernel.asm	/^c0108547:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010854a	obj/kernel.asm	/^c010854a:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010854d	obj/kernel.asm	/^c010854d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108550	obj/kernel.asm	/^c0108550:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108553	obj/kernel.asm	/^c0108553:	81 7d ec ec 12 15 c0 	cmpl   $0xc01512ec,-0x14(%ebp)$/;"	l
c010855a	obj/kernel.asm	/^c010855a:	75 88                	jne    c01084e4 <default_check+0x21>$/;"	l
c010855c	obj/kernel.asm	/^c010855c:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c010855f	obj/kernel.asm	/^c010855f:	e8 7d b4 ff ff       	call   c01039e1 <nr_free_pages>$/;"	l
c0108564	obj/kernel.asm	/^c0108564:	39 c3                	cmp    %eax,%ebx$/;"	l
c0108566	obj/kernel.asm	/^c0108566:	74 19                	je     c0108581 <default_check+0xbe>$/;"	l
c0108568	obj/kernel.asm	/^c0108568:	68 aa 56 11 c0       	push   $0xc01156aa$/;"	l
c010856d	obj/kernel.asm	/^c010856d:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108572	obj/kernel.asm	/^c0108572:	68 08 01 00 00       	push   $0x108$/;"	l
c0108577	obj/kernel.asm	/^c0108577:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c010857c	obj/kernel.asm	/^c010857c:	e8 4e 7f ff ff       	call   c01004cf <__panic>$/;"	l
c0108581	obj/kernel.asm	/^c0108581:	e8 c8 fa ff ff       	call   c010804e <basic_check>$/;"	l
c0108586	obj/kernel.asm	/^c0108586:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108589	obj/kernel.asm	/^c0108589:	6a 05                	push   $0x5$/;"	l
c010858b	obj/kernel.asm	/^c010858b:	e8 b1 b3 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c0108590	obj/kernel.asm	/^c0108590:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108593	obj/kernel.asm	/^c0108593:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108596	obj/kernel.asm	/^c0108596:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010859a	obj/kernel.asm	/^c010859a:	75 19                	jne    c01085b5 <default_check+0xf2>$/;"	l
c010859c	obj/kernel.asm	/^c010859c:	68 c3 56 11 c0       	push   $0xc01156c3$/;"	l
c01085a1	obj/kernel.asm	/^c01085a1:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c01085a6	obj/kernel.asm	/^c01085a6:	68 0d 01 00 00       	push   $0x10d$/;"	l
c01085ab	obj/kernel.asm	/^c01085ab:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c01085b0	obj/kernel.asm	/^c01085b0:	e8 1a 7f ff ff       	call   c01004cf <__panic>$/;"	l
c01085b5	obj/kernel.asm	/^c01085b5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01085b8	obj/kernel.asm	/^c01085b8:	83 c0 04             	add    $0x4,%eax$/;"	l
c01085bb	obj/kernel.asm	/^c01085bb:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c01085c2	obj/kernel.asm	/^c01085c2:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c01085c5	obj/kernel.asm	/^c01085c5:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c01085c8	obj/kernel.asm	/^c01085c8:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c01085cb	obj/kernel.asm	/^c01085cb:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01085ce	obj/kernel.asm	/^c01085ce:	19 c0                	sbb    %eax,%eax$/;"	l
c01085d0	obj/kernel.asm	/^c01085d0:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c01085d3	obj/kernel.asm	/^c01085d3:	83 7d b8 00          	cmpl   $0x0,-0x48(%ebp)$/;"	l
c01085d7	obj/kernel.asm	/^c01085d7:	0f 95 c0             	setne  %al$/;"	l
c01085da	obj/kernel.asm	/^c01085da:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01085dd	obj/kernel.asm	/^c01085dd:	85 c0                	test   %eax,%eax$/;"	l
c01085df	obj/kernel.asm	/^c01085df:	74 19                	je     c01085fa <default_check+0x137>$/;"	l
c01085e1	obj/kernel.asm	/^c01085e1:	68 ce 56 11 c0       	push   $0xc01156ce$/;"	l
c01085e6	obj/kernel.asm	/^c01085e6:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c01085eb	obj/kernel.asm	/^c01085eb:	68 0e 01 00 00       	push   $0x10e$/;"	l
c01085f0	obj/kernel.asm	/^c01085f0:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c01085f5	obj/kernel.asm	/^c01085f5:	e8 d5 7e ff ff       	call   c01004cf <__panic>$/;"	l
c01085fa	obj/kernel.asm	/^c01085fa:	a1 ec 12 15 c0       	mov    0xc01512ec,%eax$/;"	l
c01085ff	obj/kernel.asm	/^c01085ff:	8b 15 f0 12 15 c0    	mov    0xc01512f0,%edx$/;"	l
c0108605	obj/kernel.asm	/^c0108605:	89 45 80             	mov    %eax,-0x80(%ebp)$/;"	l
c0108608	obj/kernel.asm	/^c0108608:	89 55 84             	mov    %edx,-0x7c(%ebp)$/;"	l
c010860b	obj/kernel.asm	/^c010860b:	c7 45 b4 ec 12 15 c0 	movl   $0xc01512ec,-0x4c(%ebp)$/;"	l
c0108612	obj/kernel.asm	/^c0108612:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0108615	obj/kernel.asm	/^c0108615:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0108618	obj/kernel.asm	/^c0108618:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010861b	obj/kernel.asm	/^c010861b:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010861e	obj/kernel.asm	/^c010861e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108621	obj/kernel.asm	/^c0108621:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0108624	obj/kernel.asm	/^c0108624:	89 10                	mov    %edx,(%eax)$/;"	l
c0108626	obj/kernel.asm	/^c0108626:	c7 45 b0 ec 12 15 c0 	movl   $0xc01512ec,-0x50(%ebp)$/;"	l
c010862d	obj/kernel.asm	/^c010862d:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0108630	obj/kernel.asm	/^c0108630:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108633	obj/kernel.asm	/^c0108633:	39 45 b0             	cmp    %eax,-0x50(%ebp)$/;"	l
c0108636	obj/kernel.asm	/^c0108636:	0f 94 c0             	sete   %al$/;"	l
c0108639	obj/kernel.asm	/^c0108639:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010863c	obj/kernel.asm	/^c010863c:	85 c0                	test   %eax,%eax$/;"	l
c010863e	obj/kernel.asm	/^c010863e:	75 19                	jne    c0108659 <default_check+0x196>$/;"	l
c0108640	obj/kernel.asm	/^c0108640:	68 23 56 11 c0       	push   $0xc0115623$/;"	l
c0108645	obj/kernel.asm	/^c0108645:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c010864a	obj/kernel.asm	/^c010864a:	68 12 01 00 00       	push   $0x112$/;"	l
c010864f	obj/kernel.asm	/^c010864f:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c0108654	obj/kernel.asm	/^c0108654:	e8 76 7e ff ff       	call   c01004cf <__panic>$/;"	l
c0108659	obj/kernel.asm	/^c0108659:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010865c	obj/kernel.asm	/^c010865c:	6a 01                	push   $0x1$/;"	l
c010865e	obj/kernel.asm	/^c010865e:	e8 de b2 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c0108663	obj/kernel.asm	/^c0108663:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108666	obj/kernel.asm	/^c0108666:	85 c0                	test   %eax,%eax$/;"	l
c0108668	obj/kernel.asm	/^c0108668:	74 19                	je     c0108683 <default_check+0x1c0>$/;"	l
c010866a	obj/kernel.asm	/^c010866a:	68 3a 56 11 c0       	push   $0xc011563a$/;"	l
c010866f	obj/kernel.asm	/^c010866f:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108674	obj/kernel.asm	/^c0108674:	68 13 01 00 00       	push   $0x113$/;"	l
c0108679	obj/kernel.asm	/^c0108679:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c010867e	obj/kernel.asm	/^c010867e:	e8 4c 7e ff ff       	call   c01004cf <__panic>$/;"	l
c0108683	obj/kernel.asm	/^c0108683:	a1 f4 12 15 c0       	mov    0xc01512f4,%eax$/;"	l
c0108688	obj/kernel.asm	/^c0108688:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010868b	obj/kernel.asm	/^c010868b:	c7 05 f4 12 15 c0 00 	movl   $0x0,0xc01512f4$/;"	l
c0108692	obj/kernel.asm	/^c0108692:	00 00 00 $/;"	l
c0108695	obj/kernel.asm	/^c0108695:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108698	obj/kernel.asm	/^c0108698:	83 c0 40             	add    $0x40,%eax$/;"	l
c010869b	obj/kernel.asm	/^c010869b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010869e	obj/kernel.asm	/^c010869e:	6a 03                	push   $0x3$/;"	l
c01086a0	obj/kernel.asm	/^c01086a0:	50                   	push   %eax$/;"	l
c01086a1	obj/kernel.asm	/^c01086a1:	e8 07 b3 ff ff       	call   c01039ad <free_pages>$/;"	l
c01086a6	obj/kernel.asm	/^c01086a6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01086a9	obj/kernel.asm	/^c01086a9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01086ac	obj/kernel.asm	/^c01086ac:	6a 04                	push   $0x4$/;"	l
c01086ae	obj/kernel.asm	/^c01086ae:	e8 8e b2 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c01086b3	obj/kernel.asm	/^c01086b3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01086b6	obj/kernel.asm	/^c01086b6:	85 c0                	test   %eax,%eax$/;"	l
c01086b8	obj/kernel.asm	/^c01086b8:	74 19                	je     c01086d3 <default_check+0x210>$/;"	l
c01086ba	obj/kernel.asm	/^c01086ba:	68 e0 56 11 c0       	push   $0xc01156e0$/;"	l
c01086bf	obj/kernel.asm	/^c01086bf:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c01086c4	obj/kernel.asm	/^c01086c4:	68 19 01 00 00       	push   $0x119$/;"	l
c01086c9	obj/kernel.asm	/^c01086c9:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c01086ce	obj/kernel.asm	/^c01086ce:	e8 fc 7d ff ff       	call   c01004cf <__panic>$/;"	l
c01086d3	obj/kernel.asm	/^c01086d3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01086d6	obj/kernel.asm	/^c01086d6:	83 c0 40             	add    $0x40,%eax$/;"	l
c01086d9	obj/kernel.asm	/^c01086d9:	83 c0 04             	add    $0x4,%eax$/;"	l
c01086dc	obj/kernel.asm	/^c01086dc:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%ebp)$/;"	l
c01086e3	obj/kernel.asm	/^c01086e3:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c01086e6	obj/kernel.asm	/^c01086e6:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c01086e9	obj/kernel.asm	/^c01086e9:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
c01086ec	obj/kernel.asm	/^c01086ec:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01086ef	obj/kernel.asm	/^c01086ef:	19 c0                	sbb    %eax,%eax$/;"	l
c01086f1	obj/kernel.asm	/^c01086f1:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c01086f4	obj/kernel.asm	/^c01086f4:	83 7d a4 00          	cmpl   $0x0,-0x5c(%ebp)$/;"	l
c01086f8	obj/kernel.asm	/^c01086f8:	0f 95 c0             	setne  %al$/;"	l
c01086fb	obj/kernel.asm	/^c01086fb:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01086fe	obj/kernel.asm	/^c01086fe:	85 c0                	test   %eax,%eax$/;"	l
c0108700	obj/kernel.asm	/^c0108700:	74 0e                	je     c0108710 <default_check+0x24d>$/;"	l
c0108702	obj/kernel.asm	/^c0108702:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108705	obj/kernel.asm	/^c0108705:	83 c0 40             	add    $0x40,%eax$/;"	l
c0108708	obj/kernel.asm	/^c0108708:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010870b	obj/kernel.asm	/^c010870b:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010870e	obj/kernel.asm	/^c010870e:	74 19                	je     c0108729 <default_check+0x266>$/;"	l
c0108710	obj/kernel.asm	/^c0108710:	68 f8 56 11 c0       	push   $0xc01156f8$/;"	l
c0108715	obj/kernel.asm	/^c0108715:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c010871a	obj/kernel.asm	/^c010871a:	68 1a 01 00 00       	push   $0x11a$/;"	l
c010871f	obj/kernel.asm	/^c010871f:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c0108724	obj/kernel.asm	/^c0108724:	e8 a6 7d ff ff       	call   c01004cf <__panic>$/;"	l
c0108729	obj/kernel.asm	/^c0108729:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010872c	obj/kernel.asm	/^c010872c:	6a 03                	push   $0x3$/;"	l
c010872e	obj/kernel.asm	/^c010872e:	e8 0e b2 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c0108733	obj/kernel.asm	/^c0108733:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108736	obj/kernel.asm	/^c0108736:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0108739	obj/kernel.asm	/^c0108739:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010873d	obj/kernel.asm	/^c010873d:	75 19                	jne    c0108758 <default_check+0x295>$/;"	l
c010873f	obj/kernel.asm	/^c010873f:	68 24 57 11 c0       	push   $0xc0115724$/;"	l
c0108744	obj/kernel.asm	/^c0108744:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108749	obj/kernel.asm	/^c0108749:	68 1b 01 00 00       	push   $0x11b$/;"	l
c010874e	obj/kernel.asm	/^c010874e:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c0108753	obj/kernel.asm	/^c0108753:	e8 77 7d ff ff       	call   c01004cf <__panic>$/;"	l
c0108758	obj/kernel.asm	/^c0108758:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010875b	obj/kernel.asm	/^c010875b:	6a 01                	push   $0x1$/;"	l
c010875d	obj/kernel.asm	/^c010875d:	e8 df b1 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c0108762	obj/kernel.asm	/^c0108762:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108765	obj/kernel.asm	/^c0108765:	85 c0                	test   %eax,%eax$/;"	l
c0108767	obj/kernel.asm	/^c0108767:	74 19                	je     c0108782 <default_check+0x2bf>$/;"	l
c0108769	obj/kernel.asm	/^c0108769:	68 3a 56 11 c0       	push   $0xc011563a$/;"	l
c010876e	obj/kernel.asm	/^c010876e:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108773	obj/kernel.asm	/^c0108773:	68 1c 01 00 00       	push   $0x11c$/;"	l
c0108778	obj/kernel.asm	/^c0108778:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c010877d	obj/kernel.asm	/^c010877d:	e8 4d 7d ff ff       	call   c01004cf <__panic>$/;"	l
c0108782	obj/kernel.asm	/^c0108782:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108785	obj/kernel.asm	/^c0108785:	83 c0 40             	add    $0x40,%eax$/;"	l
c0108788	obj/kernel.asm	/^c0108788:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c010878b	obj/kernel.asm	/^c010878b:	74 19                	je     c01087a6 <default_check+0x2e3>$/;"	l
c010878d	obj/kernel.asm	/^c010878d:	68 42 57 11 c0       	push   $0xc0115742$/;"	l
c0108792	obj/kernel.asm	/^c0108792:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108797	obj/kernel.asm	/^c0108797:	68 1d 01 00 00       	push   $0x11d$/;"	l
c010879c	obj/kernel.asm	/^c010879c:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c01087a1	obj/kernel.asm	/^c01087a1:	e8 29 7d ff ff       	call   c01004cf <__panic>$/;"	l
c01087a6	obj/kernel.asm	/^c01087a6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01087a9	obj/kernel.asm	/^c01087a9:	83 c0 20             	add    $0x20,%eax$/;"	l
c01087ac	obj/kernel.asm	/^c01087ac:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01087af	obj/kernel.asm	/^c01087af:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01087b2	obj/kernel.asm	/^c01087b2:	6a 01                	push   $0x1$/;"	l
c01087b4	obj/kernel.asm	/^c01087b4:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01087b7	obj/kernel.asm	/^c01087b7:	e8 f1 b1 ff ff       	call   c01039ad <free_pages>$/;"	l
c01087bc	obj/kernel.asm	/^c01087bc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01087bf	obj/kernel.asm	/^c01087bf:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01087c2	obj/kernel.asm	/^c01087c2:	6a 03                	push   $0x3$/;"	l
c01087c4	obj/kernel.asm	/^c01087c4:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c01087c7	obj/kernel.asm	/^c01087c7:	e8 e1 b1 ff ff       	call   c01039ad <free_pages>$/;"	l
c01087cc	obj/kernel.asm	/^c01087cc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01087cf	obj/kernel.asm	/^c01087cf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01087d2	obj/kernel.asm	/^c01087d2:	83 c0 04             	add    $0x4,%eax$/;"	l
c01087d5	obj/kernel.asm	/^c01087d5:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%ebp)$/;"	l
c01087dc	obj/kernel.asm	/^c01087dc:	89 45 9c             	mov    %eax,-0x64(%ebp)$/;"	l
c01087df	obj/kernel.asm	/^c01087df:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c01087e2	obj/kernel.asm	/^c01087e2:	8b 55 a0             	mov    -0x60(%ebp),%edx$/;"	l
c01087e5	obj/kernel.asm	/^c01087e5:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01087e8	obj/kernel.asm	/^c01087e8:	19 c0                	sbb    %eax,%eax$/;"	l
c01087ea	obj/kernel.asm	/^c01087ea:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c01087ed	obj/kernel.asm	/^c01087ed:	83 7d 98 00          	cmpl   $0x0,-0x68(%ebp)$/;"	l
c01087f1	obj/kernel.asm	/^c01087f1:	0f 95 c0             	setne  %al$/;"	l
c01087f4	obj/kernel.asm	/^c01087f4:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01087f7	obj/kernel.asm	/^c01087f7:	85 c0                	test   %eax,%eax$/;"	l
c01087f9	obj/kernel.asm	/^c01087f9:	74 0b                	je     c0108806 <default_check+0x343>$/;"	l
c01087fb	obj/kernel.asm	/^c01087fb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01087fe	obj/kernel.asm	/^c01087fe:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108801	obj/kernel.asm	/^c0108801:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0108804	obj/kernel.asm	/^c0108804:	74 19                	je     c010881f <default_check+0x35c>$/;"	l
c0108806	obj/kernel.asm	/^c0108806:	68 50 57 11 c0       	push   $0xc0115750$/;"	l
c010880b	obj/kernel.asm	/^c010880b:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108810	obj/kernel.asm	/^c0108810:	68 22 01 00 00       	push   $0x122$/;"	l
c0108815	obj/kernel.asm	/^c0108815:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c010881a	obj/kernel.asm	/^c010881a:	e8 b0 7c ff ff       	call   c01004cf <__panic>$/;"	l
c010881f	obj/kernel.asm	/^c010881f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108822	obj/kernel.asm	/^c0108822:	83 c0 04             	add    $0x4,%eax$/;"	l
c0108825	obj/kernel.asm	/^c0108825:	c7 45 94 01 00 00 00 	movl   $0x1,-0x6c(%ebp)$/;"	l
c010882c	obj/kernel.asm	/^c010882c:	89 45 90             	mov    %eax,-0x70(%ebp)$/;"	l
c010882f	obj/kernel.asm	/^c010882f:	8b 45 90             	mov    -0x70(%ebp),%eax$/;"	l
c0108832	obj/kernel.asm	/^c0108832:	8b 55 94             	mov    -0x6c(%ebp),%edx$/;"	l
c0108835	obj/kernel.asm	/^c0108835:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0108838	obj/kernel.asm	/^c0108838:	19 c0                	sbb    %eax,%eax$/;"	l
c010883a	obj/kernel.asm	/^c010883a:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c010883d	obj/kernel.asm	/^c010883d:	83 7d 8c 00          	cmpl   $0x0,-0x74(%ebp)$/;"	l
c0108841	obj/kernel.asm	/^c0108841:	0f 95 c0             	setne  %al$/;"	l
c0108844	obj/kernel.asm	/^c0108844:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108847	obj/kernel.asm	/^c0108847:	85 c0                	test   %eax,%eax$/;"	l
c0108849	obj/kernel.asm	/^c0108849:	74 0b                	je     c0108856 <default_check+0x393>$/;"	l
c010884b	obj/kernel.asm	/^c010884b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010884e	obj/kernel.asm	/^c010884e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108851	obj/kernel.asm	/^c0108851:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0108854	obj/kernel.asm	/^c0108854:	74 19                	je     c010886f <default_check+0x3ac>$/;"	l
c0108856	obj/kernel.asm	/^c0108856:	68 78 57 11 c0       	push   $0xc0115778$/;"	l
c010885b	obj/kernel.asm	/^c010885b:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108860	obj/kernel.asm	/^c0108860:	68 23 01 00 00       	push   $0x123$/;"	l
c0108865	obj/kernel.asm	/^c0108865:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c010886a	obj/kernel.asm	/^c010886a:	e8 60 7c ff ff       	call   c01004cf <__panic>$/;"	l
c010886f	obj/kernel.asm	/^c010886f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108872	obj/kernel.asm	/^c0108872:	6a 01                	push   $0x1$/;"	l
c0108874	obj/kernel.asm	/^c0108874:	e8 c8 b0 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c0108879	obj/kernel.asm	/^c0108879:	83 c4 10             	add    $0x10,%esp$/;"	l
c010887c	obj/kernel.asm	/^c010887c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010887f	obj/kernel.asm	/^c010887f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0108882	obj/kernel.asm	/^c0108882:	83 e8 20             	sub    $0x20,%eax$/;"	l
c0108885	obj/kernel.asm	/^c0108885:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c0108888	obj/kernel.asm	/^c0108888:	74 19                	je     c01088a3 <default_check+0x3e0>$/;"	l
c010888a	obj/kernel.asm	/^c010888a:	68 9e 57 11 c0       	push   $0xc011579e$/;"	l
c010888f	obj/kernel.asm	/^c010888f:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108894	obj/kernel.asm	/^c0108894:	68 25 01 00 00       	push   $0x125$/;"	l
c0108899	obj/kernel.asm	/^c0108899:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c010889e	obj/kernel.asm	/^c010889e:	e8 2c 7c ff ff       	call   c01004cf <__panic>$/;"	l
c01088a3	obj/kernel.asm	/^c01088a3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01088a6	obj/kernel.asm	/^c01088a6:	6a 01                	push   $0x1$/;"	l
c01088a8	obj/kernel.asm	/^c01088a8:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01088ab	obj/kernel.asm	/^c01088ab:	e8 fd b0 ff ff       	call   c01039ad <free_pages>$/;"	l
c01088b0	obj/kernel.asm	/^c01088b0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01088b3	obj/kernel.asm	/^c01088b3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01088b6	obj/kernel.asm	/^c01088b6:	6a 02                	push   $0x2$/;"	l
c01088b8	obj/kernel.asm	/^c01088b8:	e8 84 b0 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c01088bd	obj/kernel.asm	/^c01088bd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01088c0	obj/kernel.asm	/^c01088c0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01088c3	obj/kernel.asm	/^c01088c3:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01088c6	obj/kernel.asm	/^c01088c6:	83 c0 20             	add    $0x20,%eax$/;"	l
c01088c9	obj/kernel.asm	/^c01088c9:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c01088cc	obj/kernel.asm	/^c01088cc:	74 19                	je     c01088e7 <default_check+0x424>$/;"	l
c01088ce	obj/kernel.asm	/^c01088ce:	68 bc 57 11 c0       	push   $0xc01157bc$/;"	l
c01088d3	obj/kernel.asm	/^c01088d3:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c01088d8	obj/kernel.asm	/^c01088d8:	68 27 01 00 00       	push   $0x127$/;"	l
c01088dd	obj/kernel.asm	/^c01088dd:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c01088e2	obj/kernel.asm	/^c01088e2:	e8 e8 7b ff ff       	call   c01004cf <__panic>$/;"	l
c01088e7	obj/kernel.asm	/^c01088e7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01088ea	obj/kernel.asm	/^c01088ea:	6a 02                	push   $0x2$/;"	l
c01088ec	obj/kernel.asm	/^c01088ec:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01088ef	obj/kernel.asm	/^c01088ef:	e8 b9 b0 ff ff       	call   c01039ad <free_pages>$/;"	l
c01088f4	obj/kernel.asm	/^c01088f4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01088f7	obj/kernel.asm	/^c01088f7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01088fa	obj/kernel.asm	/^c01088fa:	6a 01                	push   $0x1$/;"	l
c01088fc	obj/kernel.asm	/^c01088fc:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c01088ff	obj/kernel.asm	/^c01088ff:	e8 a9 b0 ff ff       	call   c01039ad <free_pages>$/;"	l
c0108904	obj/kernel.asm	/^c0108904:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108907	obj/kernel.asm	/^c0108907:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010890a	obj/kernel.asm	/^c010890a:	6a 05                	push   $0x5$/;"	l
c010890c	obj/kernel.asm	/^c010890c:	e8 30 b0 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c0108911	obj/kernel.asm	/^c0108911:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108914	obj/kernel.asm	/^c0108914:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108917	obj/kernel.asm	/^c0108917:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010891b	obj/kernel.asm	/^c010891b:	75 19                	jne    c0108936 <default_check+0x473>$/;"	l
c010891d	obj/kernel.asm	/^c010891d:	68 dc 57 11 c0       	push   $0xc01157dc$/;"	l
c0108922	obj/kernel.asm	/^c0108922:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108927	obj/kernel.asm	/^c0108927:	68 2c 01 00 00       	push   $0x12c$/;"	l
c010892c	obj/kernel.asm	/^c010892c:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c0108931	obj/kernel.asm	/^c0108931:	e8 99 7b ff ff       	call   c01004cf <__panic>$/;"	l
c0108936	obj/kernel.asm	/^c0108936:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108939	obj/kernel.asm	/^c0108939:	6a 01                	push   $0x1$/;"	l
c010893b	obj/kernel.asm	/^c010893b:	e8 01 b0 ff ff       	call   c0103941 <alloc_pages>$/;"	l
c0108940	obj/kernel.asm	/^c0108940:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108943	obj/kernel.asm	/^c0108943:	85 c0                	test   %eax,%eax$/;"	l
c0108945	obj/kernel.asm	/^c0108945:	74 19                	je     c0108960 <default_check+0x49d>$/;"	l
c0108947	obj/kernel.asm	/^c0108947:	68 3a 56 11 c0       	push   $0xc011563a$/;"	l
c010894c	obj/kernel.asm	/^c010894c:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108951	obj/kernel.asm	/^c0108951:	68 2d 01 00 00       	push   $0x12d$/;"	l
c0108956	obj/kernel.asm	/^c0108956:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c010895b	obj/kernel.asm	/^c010895b:	e8 6f 7b ff ff       	call   c01004cf <__panic>$/;"	l
c0108960	obj/kernel.asm	/^c0108960:	a1 f4 12 15 c0       	mov    0xc01512f4,%eax$/;"	l
c0108965	obj/kernel.asm	/^c0108965:	85 c0                	test   %eax,%eax$/;"	l
c0108967	obj/kernel.asm	/^c0108967:	74 19                	je     c0108982 <default_check+0x4bf>$/;"	l
c0108969	obj/kernel.asm	/^c0108969:	68 8d 56 11 c0       	push   $0xc011568d$/;"	l
c010896e	obj/kernel.asm	/^c010896e:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108973	obj/kernel.asm	/^c0108973:	68 2f 01 00 00       	push   $0x12f$/;"	l
c0108978	obj/kernel.asm	/^c0108978:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c010897d	obj/kernel.asm	/^c010897d:	e8 4d 7b ff ff       	call   c01004cf <__panic>$/;"	l
c0108982	obj/kernel.asm	/^c0108982:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108985	obj/kernel.asm	/^c0108985:	a3 f4 12 15 c0       	mov    %eax,0xc01512f4$/;"	l
c010898a	obj/kernel.asm	/^c010898a:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c010898d	obj/kernel.asm	/^c010898d:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c0108990	obj/kernel.asm	/^c0108990:	a3 ec 12 15 c0       	mov    %eax,0xc01512ec$/;"	l
c0108995	obj/kernel.asm	/^c0108995:	89 15 f0 12 15 c0    	mov    %edx,0xc01512f0$/;"	l
c010899b	obj/kernel.asm	/^c010899b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010899e	obj/kernel.asm	/^c010899e:	6a 05                	push   $0x5$/;"	l
c01089a0	obj/kernel.asm	/^c01089a0:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01089a3	obj/kernel.asm	/^c01089a3:	e8 05 b0 ff ff       	call   c01039ad <free_pages>$/;"	l
c01089a8	obj/kernel.asm	/^c01089a8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01089ab	obj/kernel.asm	/^c01089ab:	c7 45 ec ec 12 15 c0 	movl   $0xc01512ec,-0x14(%ebp)$/;"	l
c01089b2	obj/kernel.asm	/^c01089b2:	eb 1d                	jmp    c01089d1 <default_check+0x50e>$/;"	l
c01089b4	obj/kernel.asm	/^c01089b4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01089b7	obj/kernel.asm	/^c01089b7:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01089ba	obj/kernel.asm	/^c01089ba:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01089bd	obj/kernel.asm	/^c01089bd:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c01089c1	obj/kernel.asm	/^c01089c1:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01089c4	obj/kernel.asm	/^c01089c4:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01089c7	obj/kernel.asm	/^c01089c7:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01089ca	obj/kernel.asm	/^c01089ca:	29 c2                	sub    %eax,%edx$/;"	l
c01089cc	obj/kernel.asm	/^c01089cc:	89 d0                	mov    %edx,%eax$/;"	l
c01089ce	obj/kernel.asm	/^c01089ce:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01089d1	obj/kernel.asm	/^c01089d1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01089d4	obj/kernel.asm	/^c01089d4:	89 45 88             	mov    %eax,-0x78(%ebp)$/;"	l
c01089d7	obj/kernel.asm	/^c01089d7:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
c01089da	obj/kernel.asm	/^c01089da:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01089dd	obj/kernel.asm	/^c01089dd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01089e0	obj/kernel.asm	/^c01089e0:	81 7d ec ec 12 15 c0 	cmpl   $0xc01512ec,-0x14(%ebp)$/;"	l
c01089e7	obj/kernel.asm	/^c01089e7:	75 cb                	jne    c01089b4 <default_check+0x4f1>$/;"	l
c01089e9	obj/kernel.asm	/^c01089e9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01089ed	obj/kernel.asm	/^c01089ed:	74 19                	je     c0108a08 <default_check+0x545>$/;"	l
c01089ef	obj/kernel.asm	/^c01089ef:	68 fa 57 11 c0       	push   $0xc01157fa$/;"	l
c01089f4	obj/kernel.asm	/^c01089f4:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c01089f9	obj/kernel.asm	/^c01089f9:	68 3a 01 00 00       	push   $0x13a$/;"	l
c01089fe	obj/kernel.asm	/^c01089fe:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c0108a03	obj/kernel.asm	/^c0108a03:	e8 c7 7a ff ff       	call   c01004cf <__panic>$/;"	l
c0108a08	obj/kernel.asm	/^c0108a08:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0108a0c	obj/kernel.asm	/^c0108a0c:	74 19                	je     c0108a27 <default_check+0x564>$/;"	l
c0108a0e	obj/kernel.asm	/^c0108a0e:	68 05 58 11 c0       	push   $0xc0115805$/;"	l
c0108a13	obj/kernel.asm	/^c0108a13:	68 52 54 11 c0       	push   $0xc0115452$/;"	l
c0108a18	obj/kernel.asm	/^c0108a18:	68 3b 01 00 00       	push   $0x13b$/;"	l
c0108a1d	obj/kernel.asm	/^c0108a1d:	68 67 54 11 c0       	push   $0xc0115467$/;"	l
c0108a22	obj/kernel.asm	/^c0108a22:	e8 a8 7a ff ff       	call   c01004cf <__panic>$/;"	l
c0108a27	obj/kernel.asm	/^c0108a27:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0108a2a	obj/kernel.asm	/^c0108a2a:	c9                   	leave  $/;"	l
c0108a2b	obj/kernel.asm	/^c0108a2b:	c3                   	ret    $/;"	l
c0108a2c	obj/kernel.asm	/^c0108a2c <phi_test_sema>:$/;"	l
c0108a2c	obj/kernel.asm	/^c0108a2c:	55                   	push   %ebp$/;"	l
c0108a2d	obj/kernel.asm	/^c0108a2d:	89 e5                	mov    %esp,%ebp$/;"	l
c0108a2f	obj/kernel.asm	/^c0108a2f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108a32	obj/kernel.asm	/^c0108a32:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108a35	obj/kernel.asm	/^c0108a35:	8b 04 85 00 13 15 c0 	mov    -0x3feaed00(,%eax,4),%eax$/;"	l
c0108a3c	obj/kernel.asm	/^c0108a3c:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0108a3f	obj/kernel.asm	/^c0108a3f:	0f 85 8d 00 00 00    	jne    c0108ad2 <phi_test_sema+0xa6>$/;"	l
c0108a45	obj/kernel.asm	/^c0108a45:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108a48	obj/kernel.asm	/^c0108a48:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0108a4b	obj/kernel.asm	/^c0108a4b:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0108a50	obj/kernel.asm	/^c0108a50:	89 c8                	mov    %ecx,%eax$/;"	l
c0108a52	obj/kernel.asm	/^c0108a52:	f7 ea                	imul   %edx$/;"	l
c0108a54	obj/kernel.asm	/^c0108a54:	d1 fa                	sar    %edx$/;"	d
c0108a56	obj/kernel.asm	/^c0108a56:	89 c8                	mov    %ecx,%eax$/;"	l
c0108a58	obj/kernel.asm	/^c0108a58:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0108a5b	obj/kernel.asm	/^c0108a5b:	29 c2                	sub    %eax,%edx$/;"	l
c0108a5d	obj/kernel.asm	/^c0108a5d:	89 d0                	mov    %edx,%eax$/;"	l
c0108a5f	obj/kernel.asm	/^c0108a5f:	89 c2                	mov    %eax,%edx$/;"	l
c0108a61	obj/kernel.asm	/^c0108a61:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0108a64	obj/kernel.asm	/^c0108a64:	01 c2                	add    %eax,%edx$/;"	l
c0108a66	obj/kernel.asm	/^c0108a66:	89 c8                	mov    %ecx,%eax$/;"	l
c0108a68	obj/kernel.asm	/^c0108a68:	29 d0                	sub    %edx,%eax$/;"	l
c0108a6a	obj/kernel.asm	/^c0108a6a:	8b 04 85 00 13 15 c0 	mov    -0x3feaed00(,%eax,4),%eax$/;"	l
c0108a71	obj/kernel.asm	/^c0108a71:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0108a74	obj/kernel.asm	/^c0108a74:	74 5c                	je     c0108ad2 <phi_test_sema+0xa6>$/;"	l
c0108a76	obj/kernel.asm	/^c0108a76:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108a79	obj/kernel.asm	/^c0108a79:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0108a7c	obj/kernel.asm	/^c0108a7c:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0108a81	obj/kernel.asm	/^c0108a81:	89 c8                	mov    %ecx,%eax$/;"	l
c0108a83	obj/kernel.asm	/^c0108a83:	f7 ea                	imul   %edx$/;"	l
c0108a85	obj/kernel.asm	/^c0108a85:	d1 fa                	sar    %edx$/;"	d
c0108a87	obj/kernel.asm	/^c0108a87:	89 c8                	mov    %ecx,%eax$/;"	l
c0108a89	obj/kernel.asm	/^c0108a89:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0108a8c	obj/kernel.asm	/^c0108a8c:	29 c2                	sub    %eax,%edx$/;"	l
c0108a8e	obj/kernel.asm	/^c0108a8e:	89 d0                	mov    %edx,%eax$/;"	l
c0108a90	obj/kernel.asm	/^c0108a90:	89 c2                	mov    %eax,%edx$/;"	l
c0108a92	obj/kernel.asm	/^c0108a92:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0108a95	obj/kernel.asm	/^c0108a95:	01 c2                	add    %eax,%edx$/;"	l
c0108a97	obj/kernel.asm	/^c0108a97:	89 c8                	mov    %ecx,%eax$/;"	l
c0108a99	obj/kernel.asm	/^c0108a99:	29 d0                	sub    %edx,%eax$/;"	l
c0108a9b	obj/kernel.asm	/^c0108a9b:	8b 04 85 00 13 15 c0 	mov    -0x3feaed00(,%eax,4),%eax$/;"	l
c0108aa2	obj/kernel.asm	/^c0108aa2:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0108aa5	obj/kernel.asm	/^c0108aa5:	74 2b                	je     c0108ad2 <phi_test_sema+0xa6>$/;"	l
c0108aa7	obj/kernel.asm	/^c0108aa7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108aaa	obj/kernel.asm	/^c0108aaa:	c7 04 85 00 13 15 c0 	movl   $0x2,-0x3feaed00(,%eax,4)$/;"	l
c0108ab1	obj/kernel.asm	/^c0108ab1:	02 00 00 00 $/;"	l
c0108ab5	obj/kernel.asm	/^c0108ab5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108ab8	obj/kernel.asm	/^c0108ab8:	89 d0                	mov    %edx,%eax$/;"	l
c0108aba	obj/kernel.asm	/^c0108aba:	01 c0                	add    %eax,%eax$/;"	l
c0108abc	obj/kernel.asm	/^c0108abc:	01 d0                	add    %edx,%eax$/;"	l
c0108abe	obj/kernel.asm	/^c0108abe:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108ac1	obj/kernel.asm	/^c0108ac1:	05 a0 13 15 c0       	add    $0xc01513a0,%eax$/;"	l
c0108ac6	obj/kernel.asm	/^c0108ac6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108ac9	obj/kernel.asm	/^c0108ac9:	50                   	push   %eax$/;"	l
c0108aca	obj/kernel.asm	/^c0108aca:	e8 d3 0b 00 00       	call   c01096a2 <up>$/;"	l
c0108acf	obj/kernel.asm	/^c0108acf:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108ad2	obj/kernel.asm	/^c0108ad2:	c9                   	leave  $/;"	l
c0108ad3	obj/kernel.asm	/^c0108ad3:	c3                   	ret    $/;"	l
c0108ad4	obj/kernel.asm	/^c0108ad4 <phi_take_forks_sema>:$/;"	l
c0108ad4	obj/kernel.asm	/^c0108ad4:	55                   	push   %ebp$/;"	l
c0108ad5	obj/kernel.asm	/^c0108ad5:	89 e5                	mov    %esp,%ebp$/;"	l
c0108ad7	obj/kernel.asm	/^c0108ad7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108ada	obj/kernel.asm	/^c0108ada:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108add	obj/kernel.asm	/^c0108add:	68 28 13 15 c0       	push   $0xc0151328$/;"	l
c0108ae2	obj/kernel.asm	/^c0108ae2:	e8 d6 0b 00 00       	call   c01096bd <down>$/;"	l
c0108ae7	obj/kernel.asm	/^c0108ae7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108aea	obj/kernel.asm	/^c0108aea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108aed	obj/kernel.asm	/^c0108aed:	c7 04 85 00 13 15 c0 	movl   $0x1,-0x3feaed00(,%eax,4)$/;"	l
c0108af4	obj/kernel.asm	/^c0108af4:	01 00 00 00 $/;"	l
c0108af8	obj/kernel.asm	/^c0108af8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108afb	obj/kernel.asm	/^c0108afb:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108afe	obj/kernel.asm	/^c0108afe:	e8 29 ff ff ff       	call   c0108a2c <phi_test_sema>$/;"	l
c0108b03	obj/kernel.asm	/^c0108b03:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108b06	obj/kernel.asm	/^c0108b06:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108b09	obj/kernel.asm	/^c0108b09:	68 28 13 15 c0       	push   $0xc0151328$/;"	l
c0108b0e	obj/kernel.asm	/^c0108b0e:	e8 8f 0b 00 00       	call   c01096a2 <up>$/;"	l
c0108b13	obj/kernel.asm	/^c0108b13:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108b16	obj/kernel.asm	/^c0108b16:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108b19	obj/kernel.asm	/^c0108b19:	89 d0                	mov    %edx,%eax$/;"	l
c0108b1b	obj/kernel.asm	/^c0108b1b:	01 c0                	add    %eax,%eax$/;"	l
c0108b1d	obj/kernel.asm	/^c0108b1d:	01 d0                	add    %edx,%eax$/;"	l
c0108b1f	obj/kernel.asm	/^c0108b1f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108b22	obj/kernel.asm	/^c0108b22:	05 a0 13 15 c0       	add    $0xc01513a0,%eax$/;"	l
c0108b27	obj/kernel.asm	/^c0108b27:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108b2a	obj/kernel.asm	/^c0108b2a:	50                   	push   %eax$/;"	l
c0108b2b	obj/kernel.asm	/^c0108b2b:	e8 8d 0b 00 00       	call   c01096bd <down>$/;"	l
c0108b30	obj/kernel.asm	/^c0108b30:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108b33	obj/kernel.asm	/^c0108b33:	c9                   	leave  $/;"	l
c0108b34	obj/kernel.asm	/^c0108b34:	c3                   	ret    $/;"	l
c0108b35	obj/kernel.asm	/^c0108b35 <phi_put_forks_sema>:$/;"	l
c0108b35	obj/kernel.asm	/^c0108b35:	55                   	push   %ebp$/;"	l
c0108b36	obj/kernel.asm	/^c0108b36:	89 e5                	mov    %esp,%ebp$/;"	l
c0108b38	obj/kernel.asm	/^c0108b38:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108b3b	obj/kernel.asm	/^c0108b3b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108b3e	obj/kernel.asm	/^c0108b3e:	68 28 13 15 c0       	push   $0xc0151328$/;"	l
c0108b43	obj/kernel.asm	/^c0108b43:	e8 75 0b 00 00       	call   c01096bd <down>$/;"	l
c0108b48	obj/kernel.asm	/^c0108b48:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108b4b	obj/kernel.asm	/^c0108b4b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108b4e	obj/kernel.asm	/^c0108b4e:	c7 04 85 00 13 15 c0 	movl   $0x0,-0x3feaed00(,%eax,4)$/;"	l
c0108b55	obj/kernel.asm	/^c0108b55:	00 00 00 00 $/;"	l
c0108b59	obj/kernel.asm	/^c0108b59:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108b5c	obj/kernel.asm	/^c0108b5c:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0108b5f	obj/kernel.asm	/^c0108b5f:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0108b64	obj/kernel.asm	/^c0108b64:	89 c8                	mov    %ecx,%eax$/;"	l
c0108b66	obj/kernel.asm	/^c0108b66:	f7 ea                	imul   %edx$/;"	l
c0108b68	obj/kernel.asm	/^c0108b68:	d1 fa                	sar    %edx$/;"	d
c0108b6a	obj/kernel.asm	/^c0108b6a:	89 c8                	mov    %ecx,%eax$/;"	l
c0108b6c	obj/kernel.asm	/^c0108b6c:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0108b6f	obj/kernel.asm	/^c0108b6f:	29 c2                	sub    %eax,%edx$/;"	l
c0108b71	obj/kernel.asm	/^c0108b71:	89 d0                	mov    %edx,%eax$/;"	l
c0108b73	obj/kernel.asm	/^c0108b73:	89 c2                	mov    %eax,%edx$/;"	l
c0108b75	obj/kernel.asm	/^c0108b75:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0108b78	obj/kernel.asm	/^c0108b78:	01 c2                	add    %eax,%edx$/;"	l
c0108b7a	obj/kernel.asm	/^c0108b7a:	89 c8                	mov    %ecx,%eax$/;"	l
c0108b7c	obj/kernel.asm	/^c0108b7c:	29 d0                	sub    %edx,%eax$/;"	l
c0108b7e	obj/kernel.asm	/^c0108b7e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108b81	obj/kernel.asm	/^c0108b81:	50                   	push   %eax$/;"	l
c0108b82	obj/kernel.asm	/^c0108b82:	e8 a5 fe ff ff       	call   c0108a2c <phi_test_sema>$/;"	l
c0108b87	obj/kernel.asm	/^c0108b87:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108b8a	obj/kernel.asm	/^c0108b8a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108b8d	obj/kernel.asm	/^c0108b8d:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0108b90	obj/kernel.asm	/^c0108b90:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0108b95	obj/kernel.asm	/^c0108b95:	89 c8                	mov    %ecx,%eax$/;"	l
c0108b97	obj/kernel.asm	/^c0108b97:	f7 ea                	imul   %edx$/;"	l
c0108b99	obj/kernel.asm	/^c0108b99:	d1 fa                	sar    %edx$/;"	d
c0108b9b	obj/kernel.asm	/^c0108b9b:	89 c8                	mov    %ecx,%eax$/;"	l
c0108b9d	obj/kernel.asm	/^c0108b9d:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0108ba0	obj/kernel.asm	/^c0108ba0:	29 c2                	sub    %eax,%edx$/;"	l
c0108ba2	obj/kernel.asm	/^c0108ba2:	89 d0                	mov    %edx,%eax$/;"	l
c0108ba4	obj/kernel.asm	/^c0108ba4:	89 c2                	mov    %eax,%edx$/;"	l
c0108ba6	obj/kernel.asm	/^c0108ba6:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0108ba9	obj/kernel.asm	/^c0108ba9:	01 c2                	add    %eax,%edx$/;"	l
c0108bab	obj/kernel.asm	/^c0108bab:	89 c8                	mov    %ecx,%eax$/;"	l
c0108bad	obj/kernel.asm	/^c0108bad:	29 d0                	sub    %edx,%eax$/;"	l
c0108baf	obj/kernel.asm	/^c0108baf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108bb2	obj/kernel.asm	/^c0108bb2:	50                   	push   %eax$/;"	l
c0108bb3	obj/kernel.asm	/^c0108bb3:	e8 74 fe ff ff       	call   c0108a2c <phi_test_sema>$/;"	l
c0108bb8	obj/kernel.asm	/^c0108bb8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108bbb	obj/kernel.asm	/^c0108bbb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108bbe	obj/kernel.asm	/^c0108bbe:	68 28 13 15 c0       	push   $0xc0151328$/;"	l
c0108bc3	obj/kernel.asm	/^c0108bc3:	e8 da 0a 00 00       	call   c01096a2 <up>$/;"	l
c0108bc8	obj/kernel.asm	/^c0108bc8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108bcb	obj/kernel.asm	/^c0108bcb:	c9                   	leave  $/;"	l
c0108bcc	obj/kernel.asm	/^c0108bcc:	c3                   	ret    $/;"	l
c0108bcd	obj/kernel.asm	/^c0108bcd <philosopher_using_semaphore>:$/;"	l
c0108bcd	obj/kernel.asm	/^c0108bcd:	55                   	push   %ebp$/;"	l
c0108bce	obj/kernel.asm	/^c0108bce:	89 e5                	mov    %esp,%ebp$/;"	l
c0108bd0	obj/kernel.asm	/^c0108bd0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108bd3	obj/kernel.asm	/^c0108bd3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108bda	obj/kernel.asm	/^c0108bda:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108bdd	obj/kernel.asm	/^c0108bdd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108be0	obj/kernel.asm	/^c0108be0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108be3	obj/kernel.asm	/^c0108be3:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108be6	obj/kernel.asm	/^c0108be6:	68 40 58 11 c0       	push   $0xc0115840$/;"	l
c0108beb	obj/kernel.asm	/^c0108beb:	e8 7a 77 ff ff       	call   c010036a <cprintf>$/;"	l
c0108bf0	obj/kernel.asm	/^c0108bf0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108bf3	obj/kernel.asm	/^c0108bf3:	eb 62                	jmp    c0108c57 <philosopher_using_semaphore+0x8a>$/;"	l
c0108bf5	obj/kernel.asm	/^c0108bf5:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108bf8	obj/kernel.asm	/^c0108bf8:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108bfb	obj/kernel.asm	/^c0108bfb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108bfe	obj/kernel.asm	/^c0108bfe:	68 60 58 11 c0       	push   $0xc0115860$/;"	l
c0108c03	obj/kernel.asm	/^c0108c03:	e8 62 77 ff ff       	call   c010036a <cprintf>$/;"	l
c0108c08	obj/kernel.asm	/^c0108c08:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108c0b	obj/kernel.asm	/^c0108c0b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108c0e	obj/kernel.asm	/^c0108c0e:	6a 0a                	push   $0xa$/;"	l
c0108c10	obj/kernel.asm	/^c0108c10:	e8 31 41 00 00       	call   c010cd46 <do_sleep>$/;"	l
c0108c15	obj/kernel.asm	/^c0108c15:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108c18	obj/kernel.asm	/^c0108c18:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108c1b	obj/kernel.asm	/^c0108c1b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108c1e	obj/kernel.asm	/^c0108c1e:	e8 b1 fe ff ff       	call   c0108ad4 <phi_take_forks_sema>$/;"	l
c0108c23	obj/kernel.asm	/^c0108c23:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108c26	obj/kernel.asm	/^c0108c26:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108c29	obj/kernel.asm	/^c0108c29:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108c2c	obj/kernel.asm	/^c0108c2c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108c2f	obj/kernel.asm	/^c0108c2f:	68 90 58 11 c0       	push   $0xc0115890$/;"	l
c0108c34	obj/kernel.asm	/^c0108c34:	e8 31 77 ff ff       	call   c010036a <cprintf>$/;"	l
c0108c39	obj/kernel.asm	/^c0108c39:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108c3c	obj/kernel.asm	/^c0108c3c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108c3f	obj/kernel.asm	/^c0108c3f:	6a 0a                	push   $0xa$/;"	l
c0108c41	obj/kernel.asm	/^c0108c41:	e8 00 41 00 00       	call   c010cd46 <do_sleep>$/;"	l
c0108c46	obj/kernel.asm	/^c0108c46:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108c49	obj/kernel.asm	/^c0108c49:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108c4c	obj/kernel.asm	/^c0108c4c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108c4f	obj/kernel.asm	/^c0108c4f:	e8 e1 fe ff ff       	call   c0108b35 <phi_put_forks_sema>$/;"	l
c0108c54	obj/kernel.asm	/^c0108c54:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108c57	obj/kernel.asm	/^c0108c57:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108c5a	obj/kernel.asm	/^c0108c5a:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0108c5d	obj/kernel.asm	/^c0108c5d:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0108c60	obj/kernel.asm	/^c0108c60:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0108c63	obj/kernel.asm	/^c0108c63:	7e 90                	jle    c0108bf5 <philosopher_using_semaphore+0x28>$/;"	l
c0108c65	obj/kernel.asm	/^c0108c65:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108c68	obj/kernel.asm	/^c0108c68:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108c6b	obj/kernel.asm	/^c0108c6b:	68 bb 58 11 c0       	push   $0xc01158bb$/;"	l
c0108c70	obj/kernel.asm	/^c0108c70:	e8 f5 76 ff ff       	call   c010036a <cprintf>$/;"	l
c0108c75	obj/kernel.asm	/^c0108c75:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108c78	obj/kernel.asm	/^c0108c78:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108c7d	obj/kernel.asm	/^c0108c7d:	c9                   	leave  $/;"	l
c0108c7e	obj/kernel.asm	/^c0108c7e:	c3                   	ret    $/;"	l
c0108c7f	obj/kernel.asm	/^c0108c7f <phi_test_condvar>:$/;"	l
c0108c7f	obj/kernel.asm	/^c0108c7f:	55                   	push   %ebp$/;"	l
c0108c80	obj/kernel.asm	/^c0108c80:	89 e5                	mov    %esp,%ebp$/;"	l
c0108c82	obj/kernel.asm	/^c0108c82:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108c85	obj/kernel.asm	/^c0108c85:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108c88	obj/kernel.asm	/^c0108c88:	8b 04 85 60 13 15 c0 	mov    -0x3feaeca0(,%eax,4),%eax$/;"	l
c0108c8f	obj/kernel.asm	/^c0108c8f:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0108c92	obj/kernel.asm	/^c0108c92:	0f 85 bd 00 00 00    	jne    c0108d55 <phi_test_condvar+0xd6>$/;"	l
c0108c98	obj/kernel.asm	/^c0108c98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108c9b	obj/kernel.asm	/^c0108c9b:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0108c9e	obj/kernel.asm	/^c0108c9e:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0108ca3	obj/kernel.asm	/^c0108ca3:	89 c8                	mov    %ecx,%eax$/;"	l
c0108ca5	obj/kernel.asm	/^c0108ca5:	f7 ea                	imul   %edx$/;"	l
c0108ca7	obj/kernel.asm	/^c0108ca7:	d1 fa                	sar    %edx$/;"	d
c0108ca9	obj/kernel.asm	/^c0108ca9:	89 c8                	mov    %ecx,%eax$/;"	l
c0108cab	obj/kernel.asm	/^c0108cab:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0108cae	obj/kernel.asm	/^c0108cae:	29 c2                	sub    %eax,%edx$/;"	l
c0108cb0	obj/kernel.asm	/^c0108cb0:	89 d0                	mov    %edx,%eax$/;"	l
c0108cb2	obj/kernel.asm	/^c0108cb2:	89 c2                	mov    %eax,%edx$/;"	l
c0108cb4	obj/kernel.asm	/^c0108cb4:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0108cb7	obj/kernel.asm	/^c0108cb7:	01 c2                	add    %eax,%edx$/;"	l
c0108cb9	obj/kernel.asm	/^c0108cb9:	89 c8                	mov    %ecx,%eax$/;"	l
c0108cbb	obj/kernel.asm	/^c0108cbb:	29 d0                	sub    %edx,%eax$/;"	l
c0108cbd	obj/kernel.asm	/^c0108cbd:	8b 04 85 60 13 15 c0 	mov    -0x3feaeca0(,%eax,4),%eax$/;"	l
c0108cc4	obj/kernel.asm	/^c0108cc4:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0108cc7	obj/kernel.asm	/^c0108cc7:	0f 84 88 00 00 00    	je     c0108d55 <phi_test_condvar+0xd6>$/;"	l
c0108ccd	obj/kernel.asm	/^c0108ccd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108cd0	obj/kernel.asm	/^c0108cd0:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0108cd3	obj/kernel.asm	/^c0108cd3:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0108cd8	obj/kernel.asm	/^c0108cd8:	89 c8                	mov    %ecx,%eax$/;"	l
c0108cda	obj/kernel.asm	/^c0108cda:	f7 ea                	imul   %edx$/;"	l
c0108cdc	obj/kernel.asm	/^c0108cdc:	d1 fa                	sar    %edx$/;"	d
c0108cde	obj/kernel.asm	/^c0108cde:	89 c8                	mov    %ecx,%eax$/;"	l
c0108ce0	obj/kernel.asm	/^c0108ce0:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0108ce3	obj/kernel.asm	/^c0108ce3:	29 c2                	sub    %eax,%edx$/;"	l
c0108ce5	obj/kernel.asm	/^c0108ce5:	89 d0                	mov    %edx,%eax$/;"	l
c0108ce7	obj/kernel.asm	/^c0108ce7:	89 c2                	mov    %eax,%edx$/;"	l
c0108ce9	obj/kernel.asm	/^c0108ce9:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0108cec	obj/kernel.asm	/^c0108cec:	01 c2                	add    %eax,%edx$/;"	l
c0108cee	obj/kernel.asm	/^c0108cee:	89 c8                	mov    %ecx,%eax$/;"	l
c0108cf0	obj/kernel.asm	/^c0108cf0:	29 d0                	sub    %edx,%eax$/;"	l
c0108cf2	obj/kernel.asm	/^c0108cf2:	8b 04 85 60 13 15 c0 	mov    -0x3feaeca0(,%eax,4),%eax$/;"	l
c0108cf9	obj/kernel.asm	/^c0108cf9:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0108cfc	obj/kernel.asm	/^c0108cfc:	74 57                	je     c0108d55 <phi_test_condvar+0xd6>$/;"	l
c0108cfe	obj/kernel.asm	/^c0108cfe:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108d01	obj/kernel.asm	/^c0108d01:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108d04	obj/kernel.asm	/^c0108d04:	68 d8 58 11 c0       	push   $0xc01158d8$/;"	l
c0108d09	obj/kernel.asm	/^c0108d09:	e8 5c 76 ff ff       	call   c010036a <cprintf>$/;"	l
c0108d0e	obj/kernel.asm	/^c0108d0e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d11	obj/kernel.asm	/^c0108d11:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108d14	obj/kernel.asm	/^c0108d14:	c7 04 85 60 13 15 c0 	movl   $0x2,-0x3feaeca0(,%eax,4)$/;"	l
c0108d1b	obj/kernel.asm	/^c0108d1b:	02 00 00 00 $/;"	l
c0108d1f	obj/kernel.asm	/^c0108d1f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108d22	obj/kernel.asm	/^c0108d22:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108d25	obj/kernel.asm	/^c0108d25:	68 0c 59 11 c0       	push   $0xc011590c$/;"	l
c0108d2a	obj/kernel.asm	/^c0108d2a:	e8 3b 76 ff ff       	call   c010036a <cprintf>$/;"	l
c0108d2f	obj/kernel.asm	/^c0108d2f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d32	obj/kernel.asm	/^c0108d32:	a1 e0 ca 14 c0       	mov    0xc014cae0,%eax$/;"	l
c0108d37	obj/kernel.asm	/^c0108d37:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c0108d3a	obj/kernel.asm	/^c0108d3a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108d3d	obj/kernel.asm	/^c0108d3d:	89 d0                	mov    %edx,%eax$/;"	l
c0108d3f	obj/kernel.asm	/^c0108d3f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108d42	obj/kernel.asm	/^c0108d42:	01 d0                	add    %edx,%eax$/;"	l
c0108d44	obj/kernel.asm	/^c0108d44:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108d47	obj/kernel.asm	/^c0108d47:	01 c8                	add    %ecx,%eax$/;"	l
c0108d49	obj/kernel.asm	/^c0108d49:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108d4c	obj/kernel.asm	/^c0108d4c:	50                   	push   %eax$/;"	l
c0108d4d	obj/kernel.asm	/^c0108d4d:	e8 f8 0a 00 00       	call   c010984a <cond_signal>$/;"	l
c0108d52	obj/kernel.asm	/^c0108d52:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d55	obj/kernel.asm	/^c0108d55:	c9                   	leave  $/;"	l
c0108d56	obj/kernel.asm	/^c0108d56:	c3                   	ret    $/;"	l
c0108d57	obj/kernel.asm	/^c0108d57 <phi_take_forks_condvar>:$/;"	l
c0108d57	obj/kernel.asm	/^c0108d57:	55                   	push   %ebp$/;"	l
c0108d58	obj/kernel.asm	/^c0108d58:	89 e5                	mov    %esp,%ebp$/;"	l
c0108d5a	obj/kernel.asm	/^c0108d5a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108d5d	obj/kernel.asm	/^c0108d5d:	a1 e0 ca 14 c0       	mov    0xc014cae0,%eax$/;"	l
c0108d62	obj/kernel.asm	/^c0108d62:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108d65	obj/kernel.asm	/^c0108d65:	50                   	push   %eax$/;"	l
c0108d66	obj/kernel.asm	/^c0108d66:	e8 52 09 00 00       	call   c01096bd <down>$/;"	l
c0108d6b	obj/kernel.asm	/^c0108d6b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d6e	obj/kernel.asm	/^c0108d6e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108d71	obj/kernel.asm	/^c0108d71:	c7 04 85 60 13 15 c0 	movl   $0x1,-0x3feaeca0(,%eax,4)$/;"	l
c0108d78	obj/kernel.asm	/^c0108d78:	01 00 00 00 $/;"	l
c0108d7c	obj/kernel.asm	/^c0108d7c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108d7f	obj/kernel.asm	/^c0108d7f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108d82	obj/kernel.asm	/^c0108d82:	e8 f8 fe ff ff       	call   c0108c7f <phi_test_condvar>$/;"	l
c0108d87	obj/kernel.asm	/^c0108d87:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d8a	obj/kernel.asm	/^c0108d8a:	eb 23                	jmp    c0108daf <phi_take_forks_condvar+0x58>$/;"	l
c0108d8c	obj/kernel.asm	/^c0108d8c:	a1 e0 ca 14 c0       	mov    0xc014cae0,%eax$/;"	l
c0108d91	obj/kernel.asm	/^c0108d91:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c0108d94	obj/kernel.asm	/^c0108d94:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108d97	obj/kernel.asm	/^c0108d97:	89 d0                	mov    %edx,%eax$/;"	l
c0108d99	obj/kernel.asm	/^c0108d99:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108d9c	obj/kernel.asm	/^c0108d9c:	01 d0                	add    %edx,%eax$/;"	l
c0108d9e	obj/kernel.asm	/^c0108d9e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108da1	obj/kernel.asm	/^c0108da1:	01 c8                	add    %ecx,%eax$/;"	l
c0108da3	obj/kernel.asm	/^c0108da3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108da6	obj/kernel.asm	/^c0108da6:	50                   	push   %eax$/;"	l
c0108da7	obj/kernel.asm	/^c0108da7:	e8 34 0b 00 00       	call   c01098e0 <cond_wait>$/;"	l
c0108dac	obj/kernel.asm	/^c0108dac:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108daf	obj/kernel.asm	/^c0108daf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108db2	obj/kernel.asm	/^c0108db2:	8b 04 85 60 13 15 c0 	mov    -0x3feaeca0(,%eax,4),%eax$/;"	l
c0108db9	obj/kernel.asm	/^c0108db9:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0108dbc	obj/kernel.asm	/^c0108dbc:	75 ce                	jne    c0108d8c <phi_take_forks_condvar+0x35>$/;"	l
c0108dbe	obj/kernel.asm	/^c0108dbe:	a1 e0 ca 14 c0       	mov    0xc014cae0,%eax$/;"	l
c0108dc3	obj/kernel.asm	/^c0108dc3:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0108dc6	obj/kernel.asm	/^c0108dc6:	85 c0                	test   %eax,%eax$/;"	l
c0108dc8	obj/kernel.asm	/^c0108dc8:	7e 16                	jle    c0108de0 <phi_take_forks_condvar+0x89>$/;"	l
c0108dca	obj/kernel.asm	/^c0108dca:	a1 e0 ca 14 c0       	mov    0xc014cae0,%eax$/;"	l
c0108dcf	obj/kernel.asm	/^c0108dcf:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0108dd2	obj/kernel.asm	/^c0108dd2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108dd5	obj/kernel.asm	/^c0108dd5:	50                   	push   %eax$/;"	l
c0108dd6	obj/kernel.asm	/^c0108dd6:	e8 c7 08 00 00       	call   c01096a2 <up>$/;"	l
c0108ddb	obj/kernel.asm	/^c0108ddb:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108dde	obj/kernel.asm	/^c0108dde:	eb 11                	jmp    c0108df1 <phi_take_forks_condvar+0x9a>$/;"	l
c0108de0	obj/kernel.asm	/^c0108de0:	a1 e0 ca 14 c0       	mov    0xc014cae0,%eax$/;"	l
c0108de5	obj/kernel.asm	/^c0108de5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108de8	obj/kernel.asm	/^c0108de8:	50                   	push   %eax$/;"	l
c0108de9	obj/kernel.asm	/^c0108de9:	e8 b4 08 00 00       	call   c01096a2 <up>$/;"	l
c0108dee	obj/kernel.asm	/^c0108dee:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108df1	obj/kernel.asm	/^c0108df1:	c9                   	leave  $/;"	l
c0108df2	obj/kernel.asm	/^c0108df2:	c3                   	ret    $/;"	l
c0108df3	obj/kernel.asm	/^c0108df3 <phi_put_forks_condvar>:$/;"	l
c0108df3	obj/kernel.asm	/^c0108df3:	55                   	push   %ebp$/;"	l
c0108df4	obj/kernel.asm	/^c0108df4:	89 e5                	mov    %esp,%ebp$/;"	l
c0108df6	obj/kernel.asm	/^c0108df6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108df9	obj/kernel.asm	/^c0108df9:	a1 e0 ca 14 c0       	mov    0xc014cae0,%eax$/;"	l
c0108dfe	obj/kernel.asm	/^c0108dfe:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108e01	obj/kernel.asm	/^c0108e01:	50                   	push   %eax$/;"	l
c0108e02	obj/kernel.asm	/^c0108e02:	e8 b6 08 00 00       	call   c01096bd <down>$/;"	l
c0108e07	obj/kernel.asm	/^c0108e07:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e0a	obj/kernel.asm	/^c0108e0a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108e0d	obj/kernel.asm	/^c0108e0d:	c7 04 85 60 13 15 c0 	movl   $0x0,-0x3feaeca0(,%eax,4)$/;"	l
c0108e14	obj/kernel.asm	/^c0108e14:	00 00 00 00 $/;"	l
c0108e18	obj/kernel.asm	/^c0108e18:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108e1b	obj/kernel.asm	/^c0108e1b:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0108e1e	obj/kernel.asm	/^c0108e1e:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0108e23	obj/kernel.asm	/^c0108e23:	89 c8                	mov    %ecx,%eax$/;"	l
c0108e25	obj/kernel.asm	/^c0108e25:	f7 ea                	imul   %edx$/;"	l
c0108e27	obj/kernel.asm	/^c0108e27:	d1 fa                	sar    %edx$/;"	d
c0108e29	obj/kernel.asm	/^c0108e29:	89 c8                	mov    %ecx,%eax$/;"	l
c0108e2b	obj/kernel.asm	/^c0108e2b:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0108e2e	obj/kernel.asm	/^c0108e2e:	29 c2                	sub    %eax,%edx$/;"	l
c0108e30	obj/kernel.asm	/^c0108e30:	89 d0                	mov    %edx,%eax$/;"	l
c0108e32	obj/kernel.asm	/^c0108e32:	89 c2                	mov    %eax,%edx$/;"	l
c0108e34	obj/kernel.asm	/^c0108e34:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0108e37	obj/kernel.asm	/^c0108e37:	01 c2                	add    %eax,%edx$/;"	l
c0108e39	obj/kernel.asm	/^c0108e39:	89 c8                	mov    %ecx,%eax$/;"	l
c0108e3b	obj/kernel.asm	/^c0108e3b:	29 d0                	sub    %edx,%eax$/;"	l
c0108e3d	obj/kernel.asm	/^c0108e3d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108e40	obj/kernel.asm	/^c0108e40:	50                   	push   %eax$/;"	l
c0108e41	obj/kernel.asm	/^c0108e41:	e8 39 fe ff ff       	call   c0108c7f <phi_test_condvar>$/;"	l
c0108e46	obj/kernel.asm	/^c0108e46:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e49	obj/kernel.asm	/^c0108e49:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108e4c	obj/kernel.asm	/^c0108e4c:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0108e4f	obj/kernel.asm	/^c0108e4f:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0108e54	obj/kernel.asm	/^c0108e54:	89 c8                	mov    %ecx,%eax$/;"	l
c0108e56	obj/kernel.asm	/^c0108e56:	f7 ea                	imul   %edx$/;"	l
c0108e58	obj/kernel.asm	/^c0108e58:	d1 fa                	sar    %edx$/;"	d
c0108e5a	obj/kernel.asm	/^c0108e5a:	89 c8                	mov    %ecx,%eax$/;"	l
c0108e5c	obj/kernel.asm	/^c0108e5c:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0108e5f	obj/kernel.asm	/^c0108e5f:	29 c2                	sub    %eax,%edx$/;"	l
c0108e61	obj/kernel.asm	/^c0108e61:	89 d0                	mov    %edx,%eax$/;"	l
c0108e63	obj/kernel.asm	/^c0108e63:	89 c2                	mov    %eax,%edx$/;"	l
c0108e65	obj/kernel.asm	/^c0108e65:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0108e68	obj/kernel.asm	/^c0108e68:	01 c2                	add    %eax,%edx$/;"	l
c0108e6a	obj/kernel.asm	/^c0108e6a:	89 c8                	mov    %ecx,%eax$/;"	l
c0108e6c	obj/kernel.asm	/^c0108e6c:	29 d0                	sub    %edx,%eax$/;"	l
c0108e6e	obj/kernel.asm	/^c0108e6e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108e71	obj/kernel.asm	/^c0108e71:	50                   	push   %eax$/;"	l
c0108e72	obj/kernel.asm	/^c0108e72:	e8 08 fe ff ff       	call   c0108c7f <phi_test_condvar>$/;"	l
c0108e77	obj/kernel.asm	/^c0108e77:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e7a	obj/kernel.asm	/^c0108e7a:	a1 e0 ca 14 c0       	mov    0xc014cae0,%eax$/;"	l
c0108e7f	obj/kernel.asm	/^c0108e7f:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0108e82	obj/kernel.asm	/^c0108e82:	85 c0                	test   %eax,%eax$/;"	l
c0108e84	obj/kernel.asm	/^c0108e84:	7e 16                	jle    c0108e9c <phi_put_forks_condvar+0xa9>$/;"	l
c0108e86	obj/kernel.asm	/^c0108e86:	a1 e0 ca 14 c0       	mov    0xc014cae0,%eax$/;"	l
c0108e8b	obj/kernel.asm	/^c0108e8b:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0108e8e	obj/kernel.asm	/^c0108e8e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108e91	obj/kernel.asm	/^c0108e91:	50                   	push   %eax$/;"	l
c0108e92	obj/kernel.asm	/^c0108e92:	e8 0b 08 00 00       	call   c01096a2 <up>$/;"	l
c0108e97	obj/kernel.asm	/^c0108e97:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e9a	obj/kernel.asm	/^c0108e9a:	eb 11                	jmp    c0108ead <phi_put_forks_condvar+0xba>$/;"	l
c0108e9c	obj/kernel.asm	/^c0108e9c:	a1 e0 ca 14 c0       	mov    0xc014cae0,%eax$/;"	l
c0108ea1	obj/kernel.asm	/^c0108ea1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108ea4	obj/kernel.asm	/^c0108ea4:	50                   	push   %eax$/;"	l
c0108ea5	obj/kernel.asm	/^c0108ea5:	e8 f8 07 00 00       	call   c01096a2 <up>$/;"	l
c0108eaa	obj/kernel.asm	/^c0108eaa:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108ead	obj/kernel.asm	/^c0108ead:	c9                   	leave  $/;"	l
c0108eae	obj/kernel.asm	/^c0108eae:	c3                   	ret    $/;"	l
c0108eaf	obj/kernel.asm	/^c0108eaf <philosopher_using_condvar>:$/;"	l
c0108eaf	obj/kernel.asm	/^c0108eaf:	55                   	push   %ebp$/;"	l
c0108eb0	obj/kernel.asm	/^c0108eb0:	89 e5                	mov    %esp,%ebp$/;"	l
c0108eb2	obj/kernel.asm	/^c0108eb2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108eb5	obj/kernel.asm	/^c0108eb5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108ebc	obj/kernel.asm	/^c0108ebc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108ebf	obj/kernel.asm	/^c0108ebf:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108ec2	obj/kernel.asm	/^c0108ec2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108ec5	obj/kernel.asm	/^c0108ec5:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108ec8	obj/kernel.asm	/^c0108ec8:	68 34 59 11 c0       	push   $0xc0115934$/;"	l
c0108ecd	obj/kernel.asm	/^c0108ecd:	e8 98 74 ff ff       	call   c010036a <cprintf>$/;"	l
c0108ed2	obj/kernel.asm	/^c0108ed2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108ed5	obj/kernel.asm	/^c0108ed5:	eb 62                	jmp    c0108f39 <philosopher_using_condvar+0x8a>$/;"	l
c0108ed7	obj/kernel.asm	/^c0108ed7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108eda	obj/kernel.asm	/^c0108eda:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108edd	obj/kernel.asm	/^c0108edd:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108ee0	obj/kernel.asm	/^c0108ee0:	68 54 59 11 c0       	push   $0xc0115954$/;"	l
c0108ee5	obj/kernel.asm	/^c0108ee5:	e8 80 74 ff ff       	call   c010036a <cprintf>$/;"	l
c0108eea	obj/kernel.asm	/^c0108eea:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108eed	obj/kernel.asm	/^c0108eed:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108ef0	obj/kernel.asm	/^c0108ef0:	6a 0a                	push   $0xa$/;"	l
c0108ef2	obj/kernel.asm	/^c0108ef2:	e8 4f 3e 00 00       	call   c010cd46 <do_sleep>$/;"	l
c0108ef7	obj/kernel.asm	/^c0108ef7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108efa	obj/kernel.asm	/^c0108efa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108efd	obj/kernel.asm	/^c0108efd:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108f00	obj/kernel.asm	/^c0108f00:	e8 52 fe ff ff       	call   c0108d57 <phi_take_forks_condvar>$/;"	l
c0108f05	obj/kernel.asm	/^c0108f05:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108f08	obj/kernel.asm	/^c0108f08:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108f0b	obj/kernel.asm	/^c0108f0b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108f0e	obj/kernel.asm	/^c0108f0e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108f11	obj/kernel.asm	/^c0108f11:	68 84 59 11 c0       	push   $0xc0115984$/;"	l
c0108f16	obj/kernel.asm	/^c0108f16:	e8 4f 74 ff ff       	call   c010036a <cprintf>$/;"	l
c0108f1b	obj/kernel.asm	/^c0108f1b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108f1e	obj/kernel.asm	/^c0108f1e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108f21	obj/kernel.asm	/^c0108f21:	6a 0a                	push   $0xa$/;"	l
c0108f23	obj/kernel.asm	/^c0108f23:	e8 1e 3e 00 00       	call   c010cd46 <do_sleep>$/;"	l
c0108f28	obj/kernel.asm	/^c0108f28:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108f2b	obj/kernel.asm	/^c0108f2b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108f2e	obj/kernel.asm	/^c0108f2e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108f31	obj/kernel.asm	/^c0108f31:	e8 bd fe ff ff       	call   c0108df3 <phi_put_forks_condvar>$/;"	l
c0108f36	obj/kernel.asm	/^c0108f36:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108f39	obj/kernel.asm	/^c0108f39:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108f3c	obj/kernel.asm	/^c0108f3c:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0108f3f	obj/kernel.asm	/^c0108f3f:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0108f42	obj/kernel.asm	/^c0108f42:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0108f45	obj/kernel.asm	/^c0108f45:	7e 90                	jle    c0108ed7 <philosopher_using_condvar+0x28>$/;"	l
c0108f47	obj/kernel.asm	/^c0108f47:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108f4a	obj/kernel.asm	/^c0108f4a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108f4d	obj/kernel.asm	/^c0108f4d:	68 b4 59 11 c0       	push   $0xc01159b4$/;"	l
c0108f52	obj/kernel.asm	/^c0108f52:	e8 13 74 ff ff       	call   c010036a <cprintf>$/;"	l
c0108f57	obj/kernel.asm	/^c0108f57:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108f5a	obj/kernel.asm	/^c0108f5a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108f5f	obj/kernel.asm	/^c0108f5f:	c9                   	leave  $/;"	l
c0108f60	obj/kernel.asm	/^c0108f60:	c3                   	ret    $/;"	l
c0108f61	obj/kernel.asm	/^c0108f61 <check_sync>:$/;"	l
c0108f61	obj/kernel.asm	/^c0108f61:	55                   	push   %ebp$/;"	l
c0108f62	obj/kernel.asm	/^c0108f62:	89 e5                	mov    %esp,%ebp$/;"	l
c0108f64	obj/kernel.asm	/^c0108f64:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108f67	obj/kernel.asm	/^c0108f67:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108f6a	obj/kernel.asm	/^c0108f6a:	6a 01                	push   $0x1$/;"	l
c0108f6c	obj/kernel.asm	/^c0108f6c:	68 28 13 15 c0       	push   $0xc0151328$/;"	l
c0108f71	obj/kernel.asm	/^c0108f71:	e8 c1 05 00 00       	call   c0109537 <sem_init>$/;"	l
c0108f76	obj/kernel.asm	/^c0108f76:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108f79	obj/kernel.asm	/^c0108f79:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108f80	obj/kernel.asm	/^c0108f80:	e9 8e 00 00 00       	jmp    c0109013 <check_sync+0xb2>$/;"	l
c0108f85	obj/kernel.asm	/^c0108f85:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108f88	obj/kernel.asm	/^c0108f88:	89 d0                	mov    %edx,%eax$/;"	l
c0108f8a	obj/kernel.asm	/^c0108f8a:	01 c0                	add    %eax,%eax$/;"	l
c0108f8c	obj/kernel.asm	/^c0108f8c:	01 d0                	add    %edx,%eax$/;"	l
c0108f8e	obj/kernel.asm	/^c0108f8e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108f91	obj/kernel.asm	/^c0108f91:	05 a0 13 15 c0       	add    $0xc01513a0,%eax$/;"	l
c0108f96	obj/kernel.asm	/^c0108f96:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108f99	obj/kernel.asm	/^c0108f99:	6a 00                	push   $0x0$/;"	l
c0108f9b	obj/kernel.asm	/^c0108f9b:	50                   	push   %eax$/;"	l
c0108f9c	obj/kernel.asm	/^c0108f9c:	e8 96 05 00 00       	call   c0109537 <sem_init>$/;"	l
c0108fa1	obj/kernel.asm	/^c0108fa1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108fa4	obj/kernel.asm	/^c0108fa4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108fa7	obj/kernel.asm	/^c0108fa7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108faa	obj/kernel.asm	/^c0108faa:	6a 00                	push   $0x0$/;"	l
c0108fac	obj/kernel.asm	/^c0108fac:	50                   	push   %eax$/;"	l
c0108fad	obj/kernel.asm	/^c0108fad:	68 cd 8b 10 c0       	push   $0xc0108bcd$/;"	l
c0108fb2	obj/kernel.asm	/^c0108fb2:	e8 26 2c 00 00       	call   c010bbdd <kernel_thread>$/;"	l
c0108fb7	obj/kernel.asm	/^c0108fb7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108fba	obj/kernel.asm	/^c0108fba:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108fbd	obj/kernel.asm	/^c0108fbd:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0108fc1	obj/kernel.asm	/^c0108fc1:	7f 17                	jg     c0108fda <check_sync+0x79>$/;"	l
c0108fc3	obj/kernel.asm	/^c0108fc3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108fc6	obj/kernel.asm	/^c0108fc6:	68 d4 59 11 c0       	push   $0xc01159d4$/;"	l
c0108fcb	obj/kernel.asm	/^c0108fcb:	68 bd 00 00 00       	push   $0xbd$/;"	l
c0108fd0	obj/kernel.asm	/^c0108fd0:	68 06 5a 11 c0       	push   $0xc0115a06$/;"	l
c0108fd5	obj/kernel.asm	/^c0108fd5:	e8 f5 74 ff ff       	call   c01004cf <__panic>$/;"	l
c0108fda	obj/kernel.asm	/^c0108fda:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108fdd	obj/kernel.asm	/^c0108fdd:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108fe0	obj/kernel.asm	/^c0108fe0:	e8 86 2b 00 00       	call   c010bb6b <find_proc>$/;"	l
c0108fe5	obj/kernel.asm	/^c0108fe5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108fe8	obj/kernel.asm	/^c0108fe8:	89 c2                	mov    %eax,%edx$/;"	l
c0108fea	obj/kernel.asm	/^c0108fea:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108fed	obj/kernel.asm	/^c0108fed:	89 14 85 74 13 15 c0 	mov    %edx,-0x3feaec8c(,%eax,4)$/;"	l
c0108ff4	obj/kernel.asm	/^c0108ff4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108ff7	obj/kernel.asm	/^c0108ff7:	8b 04 85 74 13 15 c0 	mov    -0x3feaec8c(,%eax,4),%eax$/;"	l
c0108ffe	obj/kernel.asm	/^c0108ffe:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109001	obj/kernel.asm	/^c0109001:	68 1d 5a 11 c0       	push   $0xc0115a1d$/;"	l
c0109006	obj/kernel.asm	/^c0109006:	50                   	push   %eax$/;"	l
c0109007	obj/kernel.asm	/^c0109007:	e8 58 27 00 00       	call   c010b764 <set_proc_name>$/;"	l
c010900c	obj/kernel.asm	/^c010900c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010900f	obj/kernel.asm	/^c010900f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0109013	obj/kernel.asm	/^c0109013:	83 7d f4 04          	cmpl   $0x4,-0xc(%ebp)$/;"	l
c0109017	obj/kernel.asm	/^c0109017:	0f 8e 68 ff ff ff    	jle    c0108f85 <check_sync+0x24>$/;"	l
c010901d	obj/kernel.asm	/^c010901d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109020	obj/kernel.asm	/^c0109020:	6a 05                	push   $0x5$/;"	l
c0109022	obj/kernel.asm	/^c0109022:	68 40 13 15 c0       	push   $0xc0151340$/;"	l
c0109027	obj/kernel.asm	/^c0109027:	e8 10 07 00 00       	call   c010973c <monitor_init>$/;"	l
c010902c	obj/kernel.asm	/^c010902c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010902f	obj/kernel.asm	/^c010902f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109036	obj/kernel.asm	/^c0109036:	eb 7d                	jmp    c01090b5 <check_sync+0x154>$/;"	l
c0109038	obj/kernel.asm	/^c0109038:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010903b	obj/kernel.asm	/^c010903b:	c7 04 85 60 13 15 c0 	movl   $0x0,-0x3feaeca0(,%eax,4)$/;"	l
c0109042	obj/kernel.asm	/^c0109042:	00 00 00 00 $/;"	l
c0109046	obj/kernel.asm	/^c0109046:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109049	obj/kernel.asm	/^c0109049:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010904c	obj/kernel.asm	/^c010904c:	6a 00                	push   $0x0$/;"	l
c010904e	obj/kernel.asm	/^c010904e:	50                   	push   %eax$/;"	l
c010904f	obj/kernel.asm	/^c010904f:	68 af 8e 10 c0       	push   $0xc0108eaf$/;"	l
c0109054	obj/kernel.asm	/^c0109054:	e8 84 2b 00 00       	call   c010bbdd <kernel_thread>$/;"	l
c0109059	obj/kernel.asm	/^c0109059:	83 c4 10             	add    $0x10,%esp$/;"	l
c010905c	obj/kernel.asm	/^c010905c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010905f	obj/kernel.asm	/^c010905f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0109063	obj/kernel.asm	/^c0109063:	7f 17                	jg     c010907c <check_sync+0x11b>$/;"	l
c0109065	obj/kernel.asm	/^c0109065:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109068	obj/kernel.asm	/^c0109068:	68 34 5a 11 c0       	push   $0xc0115a34$/;"	l
c010906d	obj/kernel.asm	/^c010906d:	68 c9 00 00 00       	push   $0xc9$/;"	l
c0109072	obj/kernel.asm	/^c0109072:	68 06 5a 11 c0       	push   $0xc0115a06$/;"	l
c0109077	obj/kernel.asm	/^c0109077:	e8 53 74 ff ff       	call   c01004cf <__panic>$/;"	l
c010907c	obj/kernel.asm	/^c010907c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010907f	obj/kernel.asm	/^c010907f:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109082	obj/kernel.asm	/^c0109082:	e8 e4 2a 00 00       	call   c010bb6b <find_proc>$/;"	l
c0109087	obj/kernel.asm	/^c0109087:	83 c4 10             	add    $0x10,%esp$/;"	l
c010908a	obj/kernel.asm	/^c010908a:	89 c2                	mov    %eax,%edx$/;"	l
c010908c	obj/kernel.asm	/^c010908c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010908f	obj/kernel.asm	/^c010908f:	89 14 85 14 13 15 c0 	mov    %edx,-0x3feaecec(,%eax,4)$/;"	l
c0109096	obj/kernel.asm	/^c0109096:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109099	obj/kernel.asm	/^c0109099:	8b 04 85 14 13 15 c0 	mov    -0x3feaecec(,%eax,4),%eax$/;"	l
c01090a0	obj/kernel.asm	/^c01090a0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01090a3	obj/kernel.asm	/^c01090a3:	68 64 5a 11 c0       	push   $0xc0115a64$/;"	l
c01090a8	obj/kernel.asm	/^c01090a8:	50                   	push   %eax$/;"	l
c01090a9	obj/kernel.asm	/^c01090a9:	e8 b6 26 00 00       	call   c010b764 <set_proc_name>$/;"	l
c01090ae	obj/kernel.asm	/^c01090ae:	83 c4 10             	add    $0x10,%esp$/;"	l
c01090b1	obj/kernel.asm	/^c01090b1:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01090b5	obj/kernel.asm	/^c01090b5:	83 7d f4 04          	cmpl   $0x4,-0xc(%ebp)$/;"	l
c01090b9	obj/kernel.asm	/^c01090b9:	0f 8e 79 ff ff ff    	jle    c0109038 <check_sync+0xd7>$/;"	l
c01090bf	obj/kernel.asm	/^c01090bf:	c9                   	leave  $/;"	l
c01090c0	obj/kernel.asm	/^c01090c0:	c3                   	ret    $/;"	l
c01090c1	obj/kernel.asm	/^c01090c1 <wait_init>:$/;"	l
c01090c1	obj/kernel.asm	/^c01090c1:	55                   	push   %ebp$/;"	l
c01090c2	obj/kernel.asm	/^c01090c2:	89 e5                	mov    %esp,%ebp$/;"	l
c01090c4	obj/kernel.asm	/^c01090c4:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01090c7	obj/kernel.asm	/^c01090c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01090ca	obj/kernel.asm	/^c01090ca:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01090cd	obj/kernel.asm	/^c01090cd:	89 10                	mov    %edx,(%eax)$/;"	l
c01090cf	obj/kernel.asm	/^c01090cf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01090d2	obj/kernel.asm	/^c01090d2:	c7 40 04 00 00 00 80 	movl   $0x80000000,0x4(%eax)$/;"	l
c01090d9	obj/kernel.asm	/^c01090d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01090dc	obj/kernel.asm	/^c01090dc:	83 c0 0c             	add    $0xc,%eax$/;"	l
c01090df	obj/kernel.asm	/^c01090df:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01090e2	obj/kernel.asm	/^c01090e2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01090e5	obj/kernel.asm	/^c01090e5:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01090e8	obj/kernel.asm	/^c01090e8:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01090eb	obj/kernel.asm	/^c01090eb:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01090ee	obj/kernel.asm	/^c01090ee:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01090f1	obj/kernel.asm	/^c01090f1:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01090f4	obj/kernel.asm	/^c01090f4:	89 10                	mov    %edx,(%eax)$/;"	l
c01090f6	obj/kernel.asm	/^c01090f6:	c9                   	leave  $/;"	l
c01090f7	obj/kernel.asm	/^c01090f7:	c3                   	ret    $/;"	l
c01090f8	obj/kernel.asm	/^c01090f8 <wait_queue_init>:$/;"	l
c01090f8	obj/kernel.asm	/^c01090f8:	55                   	push   %ebp$/;"	l
c01090f9	obj/kernel.asm	/^c01090f9:	89 e5                	mov    %esp,%ebp$/;"	l
c01090fb	obj/kernel.asm	/^c01090fb:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01090fe	obj/kernel.asm	/^c01090fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109101	obj/kernel.asm	/^c0109101:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109104	obj/kernel.asm	/^c0109104:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109107	obj/kernel.asm	/^c0109107:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010910a	obj/kernel.asm	/^c010910a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010910d	obj/kernel.asm	/^c010910d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109110	obj/kernel.asm	/^c0109110:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109113	obj/kernel.asm	/^c0109113:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109116	obj/kernel.asm	/^c0109116:	89 10                	mov    %edx,(%eax)$/;"	l
c0109118	obj/kernel.asm	/^c0109118:	c9                   	leave  $/;"	l
c0109119	obj/kernel.asm	/^c0109119:	c3                   	ret    $/;"	l
c010911a	obj/kernel.asm	/^c010911a <wait_queue_add>:$/;"	l
c010911a	obj/kernel.asm	/^c010911a:	55                   	push   %ebp$/;"	l
c010911b	obj/kernel.asm	/^c010911b:	89 e5                	mov    %esp,%ebp$/;"	l
c010911d	obj/kernel.asm	/^c010911d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109120	obj/kernel.asm	/^c0109120:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109123	obj/kernel.asm	/^c0109123:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109126	obj/kernel.asm	/^c0109126:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109129	obj/kernel.asm	/^c0109129:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010912c	obj/kernel.asm	/^c010912c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010912f	obj/kernel.asm	/^c010912f:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c0109132	obj/kernel.asm	/^c0109132:	0f 94 c0             	sete   %al$/;"	l
c0109135	obj/kernel.asm	/^c0109135:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109138	obj/kernel.asm	/^c0109138:	85 c0                	test   %eax,%eax$/;"	l
c010913a	obj/kernel.asm	/^c010913a:	74 09                	je     c0109145 <wait_queue_add+0x2b>$/;"	l
c010913c	obj/kernel.asm	/^c010913c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010913f	obj/kernel.asm	/^c010913f:	8b 00                	mov    (%eax),%eax$/;"	l
c0109141	obj/kernel.asm	/^c0109141:	85 c0                	test   %eax,%eax$/;"	l
c0109143	obj/kernel.asm	/^c0109143:	75 16                	jne    c010915b <wait_queue_add+0x41>$/;"	l
c0109145	obj/kernel.asm	/^c0109145:	68 80 5a 11 c0       	push   $0xc0115a80$/;"	l
c010914a	obj/kernel.asm	/^c010914a:	68 b5 5a 11 c0       	push   $0xc0115ab5$/;"	l
c010914f	obj/kernel.asm	/^c010914f:	6a 15                	push   $0x15$/;"	l
c0109151	obj/kernel.asm	/^c0109151:	68 ca 5a 11 c0       	push   $0xc0115aca$/;"	l
c0109156	obj/kernel.asm	/^c0109156:	e8 74 73 ff ff       	call   c01004cf <__panic>$/;"	l
c010915b	obj/kernel.asm	/^c010915b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010915e	obj/kernel.asm	/^c010915e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109161	obj/kernel.asm	/^c0109161:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0109164	obj/kernel.asm	/^c0109164:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109167	obj/kernel.asm	/^c0109167:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c010916a	obj/kernel.asm	/^c010916a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010916d	obj/kernel.asm	/^c010916d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109170	obj/kernel.asm	/^c0109170:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0109173	obj/kernel.asm	/^c0109173:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109176	obj/kernel.asm	/^c0109176:	8b 00                	mov    (%eax),%eax$/;"	l
c0109178	obj/kernel.asm	/^c0109178:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010917b	obj/kernel.asm	/^c010917b:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010917e	obj/kernel.asm	/^c010917e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0109181	obj/kernel.asm	/^c0109181:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109184	obj/kernel.asm	/^c0109184:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0109187	obj/kernel.asm	/^c0109187:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010918a	obj/kernel.asm	/^c010918a:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010918d	obj/kernel.asm	/^c010918d:	89 10                	mov    %edx,(%eax)$/;"	l
c010918f	obj/kernel.asm	/^c010918f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109192	obj/kernel.asm	/^c0109192:	8b 10                	mov    (%eax),%edx$/;"	l
c0109194	obj/kernel.asm	/^c0109194:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109197	obj/kernel.asm	/^c0109197:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010919a	obj/kernel.asm	/^c010919a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010919d	obj/kernel.asm	/^c010919d:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01091a0	obj/kernel.asm	/^c01091a0:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01091a3	obj/kernel.asm	/^c01091a3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01091a6	obj/kernel.asm	/^c01091a6:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01091a9	obj/kernel.asm	/^c01091a9:	89 10                	mov    %edx,(%eax)$/;"	l
c01091ab	obj/kernel.asm	/^c01091ab:	c9                   	leave  $/;"	l
c01091ac	obj/kernel.asm	/^c01091ac:	c3                   	ret    $/;"	l
c01091ad	obj/kernel.asm	/^c01091ad <wait_queue_del>:$/;"	l
c01091ad	obj/kernel.asm	/^c01091ad:	55                   	push   %ebp$/;"	l
c01091ae	obj/kernel.asm	/^c01091ae:	89 e5                	mov    %esp,%ebp$/;"	l
c01091b0	obj/kernel.asm	/^c01091b0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01091b3	obj/kernel.asm	/^c01091b3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01091b6	obj/kernel.asm	/^c01091b6:	83 c0 0c             	add    $0xc,%eax$/;"	l
c01091b9	obj/kernel.asm	/^c01091b9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01091bc	obj/kernel.asm	/^c01091bc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01091bf	obj/kernel.asm	/^c01091bf:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01091c2	obj/kernel.asm	/^c01091c2:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c01091c5	obj/kernel.asm	/^c01091c5:	0f 94 c0             	sete   %al$/;"	l
c01091c8	obj/kernel.asm	/^c01091c8:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01091cb	obj/kernel.asm	/^c01091cb:	85 c0                	test   %eax,%eax$/;"	l
c01091cd	obj/kernel.asm	/^c01091cd:	75 0b                	jne    c01091da <wait_queue_del+0x2d>$/;"	l
c01091cf	obj/kernel.asm	/^c01091cf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01091d2	obj/kernel.asm	/^c01091d2:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01091d5	obj/kernel.asm	/^c01091d5:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01091d8	obj/kernel.asm	/^c01091d8:	74 16                	je     c01091f0 <wait_queue_del+0x43>$/;"	l
c01091da	obj/kernel.asm	/^c01091da:	68 dc 5a 11 c0       	push   $0xc0115adc$/;"	l
c01091df	obj/kernel.asm	/^c01091df:	68 b5 5a 11 c0       	push   $0xc0115ab5$/;"	l
c01091e4	obj/kernel.asm	/^c01091e4:	6a 1c                	push   $0x1c$/;"	l
c01091e6	obj/kernel.asm	/^c01091e6:	68 ca 5a 11 c0       	push   $0xc0115aca$/;"	l
c01091eb	obj/kernel.asm	/^c01091eb:	e8 df 72 ff ff       	call   c01004cf <__panic>$/;"	l
c01091f0	obj/kernel.asm	/^c01091f0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01091f3	obj/kernel.asm	/^c01091f3:	83 c0 0c             	add    $0xc,%eax$/;"	l
c01091f6	obj/kernel.asm	/^c01091f6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01091f9	obj/kernel.asm	/^c01091f9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01091fc	obj/kernel.asm	/^c01091fc:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01091ff	obj/kernel.asm	/^c01091ff:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109202	obj/kernel.asm	/^c0109202:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109205	obj/kernel.asm	/^c0109205:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109208	obj/kernel.asm	/^c0109208:	8b 12                	mov    (%edx),%edx$/;"	l
c010920a	obj/kernel.asm	/^c010920a:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010920d	obj/kernel.asm	/^c010920d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0109210	obj/kernel.asm	/^c0109210:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109213	obj/kernel.asm	/^c0109213:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0109216	obj/kernel.asm	/^c0109216:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109219	obj/kernel.asm	/^c0109219:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010921c	obj/kernel.asm	/^c010921c:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010921f	obj/kernel.asm	/^c010921f:	89 10                	mov    %edx,(%eax)$/;"	l
c0109221	obj/kernel.asm	/^c0109221:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109224	obj/kernel.asm	/^c0109224:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0109227	obj/kernel.asm	/^c0109227:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010922a	obj/kernel.asm	/^c010922a:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010922d	obj/kernel.asm	/^c010922d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109230	obj/kernel.asm	/^c0109230:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109233	obj/kernel.asm	/^c0109233:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109236	obj/kernel.asm	/^c0109236:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109239	obj/kernel.asm	/^c0109239:	89 10                	mov    %edx,(%eax)$/;"	l
c010923b	obj/kernel.asm	/^c010923b:	c9                   	leave  $/;"	l
c010923c	obj/kernel.asm	/^c010923c:	c3                   	ret    $/;"	l
c010923d	obj/kernel.asm	/^c010923d <wait_queue_next>:$/;"	l
c010923d	obj/kernel.asm	/^c010923d:	55                   	push   %ebp$/;"	l
c010923e	obj/kernel.asm	/^c010923e:	89 e5                	mov    %esp,%ebp$/;"	l
c0109240	obj/kernel.asm	/^c0109240:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109243	obj/kernel.asm	/^c0109243:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109246	obj/kernel.asm	/^c0109246:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109249	obj/kernel.asm	/^c0109249:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010924c	obj/kernel.asm	/^c010924c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010924f	obj/kernel.asm	/^c010924f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109252	obj/kernel.asm	/^c0109252:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0109255	obj/kernel.asm	/^c0109255:	0f 94 c0             	sete   %al$/;"	l
c0109258	obj/kernel.asm	/^c0109258:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010925b	obj/kernel.asm	/^c010925b:	85 c0                	test   %eax,%eax$/;"	l
c010925d	obj/kernel.asm	/^c010925d:	75 0b                	jne    c010926a <wait_queue_next+0x2d>$/;"	l
c010925f	obj/kernel.asm	/^c010925f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109262	obj/kernel.asm	/^c0109262:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0109265	obj/kernel.asm	/^c0109265:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0109268	obj/kernel.asm	/^c0109268:	74 16                	je     c0109280 <wait_queue_next+0x43>$/;"	l
c010926a	obj/kernel.asm	/^c010926a:	68 dc 5a 11 c0       	push   $0xc0115adc$/;"	l
c010926f	obj/kernel.asm	/^c010926f:	68 b5 5a 11 c0       	push   $0xc0115ab5$/;"	l
c0109274	obj/kernel.asm	/^c0109274:	6a 22                	push   $0x22$/;"	l
c0109276	obj/kernel.asm	/^c0109276:	68 ca 5a 11 c0       	push   $0xc0115aca$/;"	l
c010927b	obj/kernel.asm	/^c010927b:	e8 4f 72 ff ff       	call   c01004cf <__panic>$/;"	l
c0109280	obj/kernel.asm	/^c0109280:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109283	obj/kernel.asm	/^c0109283:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109286	obj/kernel.asm	/^c0109286:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109289	obj/kernel.asm	/^c0109289:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010928c	obj/kernel.asm	/^c010928c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010928f	obj/kernel.asm	/^c010928f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109292	obj/kernel.asm	/^c0109292:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109295	obj/kernel.asm	/^c0109295:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0109298	obj/kernel.asm	/^c0109298:	74 08                	je     c01092a2 <wait_queue_next+0x65>$/;"	l
c010929a	obj/kernel.asm	/^c010929a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010929d	obj/kernel.asm	/^c010929d:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01092a0	obj/kernel.asm	/^c01092a0:	eb 05                	jmp    c01092a7 <wait_queue_next+0x6a>$/;"	l
c01092a2	obj/kernel.asm	/^c01092a2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01092a7	obj/kernel.asm	/^c01092a7:	c9                   	leave  $/;"	l
c01092a8	obj/kernel.asm	/^c01092a8:	c3                   	ret    $/;"	l
c01092a9	obj/kernel.asm	/^c01092a9 <wait_queue_prev>:$/;"	l
c01092a9	obj/kernel.asm	/^c01092a9:	55                   	push   %ebp$/;"	l
c01092aa	obj/kernel.asm	/^c01092aa:	89 e5                	mov    %esp,%ebp$/;"	l
c01092ac	obj/kernel.asm	/^c01092ac:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01092af	obj/kernel.asm	/^c01092af:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01092b2	obj/kernel.asm	/^c01092b2:	83 c0 0c             	add    $0xc,%eax$/;"	l
c01092b5	obj/kernel.asm	/^c01092b5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01092b8	obj/kernel.asm	/^c01092b8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01092bb	obj/kernel.asm	/^c01092bb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01092be	obj/kernel.asm	/^c01092be:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c01092c1	obj/kernel.asm	/^c01092c1:	0f 94 c0             	sete   %al$/;"	l
c01092c4	obj/kernel.asm	/^c01092c4:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01092c7	obj/kernel.asm	/^c01092c7:	85 c0                	test   %eax,%eax$/;"	l
c01092c9	obj/kernel.asm	/^c01092c9:	75 0b                	jne    c01092d6 <wait_queue_prev+0x2d>$/;"	l
c01092cb	obj/kernel.asm	/^c01092cb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01092ce	obj/kernel.asm	/^c01092ce:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01092d1	obj/kernel.asm	/^c01092d1:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01092d4	obj/kernel.asm	/^c01092d4:	74 16                	je     c01092ec <wait_queue_prev+0x43>$/;"	l
c01092d6	obj/kernel.asm	/^c01092d6:	68 dc 5a 11 c0       	push   $0xc0115adc$/;"	l
c01092db	obj/kernel.asm	/^c01092db:	68 b5 5a 11 c0       	push   $0xc0115ab5$/;"	l
c01092e0	obj/kernel.asm	/^c01092e0:	6a 2c                	push   $0x2c$/;"	l
c01092e2	obj/kernel.asm	/^c01092e2:	68 ca 5a 11 c0       	push   $0xc0115aca$/;"	l
c01092e7	obj/kernel.asm	/^c01092e7:	e8 e3 71 ff ff       	call   c01004cf <__panic>$/;"	l
c01092ec	obj/kernel.asm	/^c01092ec:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01092ef	obj/kernel.asm	/^c01092ef:	83 c0 0c             	add    $0xc,%eax$/;"	l
c01092f2	obj/kernel.asm	/^c01092f2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01092f5	obj/kernel.asm	/^c01092f5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01092f8	obj/kernel.asm	/^c01092f8:	8b 00                	mov    (%eax),%eax$/;"	l
c01092fa	obj/kernel.asm	/^c01092fa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01092fd	obj/kernel.asm	/^c01092fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109300	obj/kernel.asm	/^c0109300:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0109303	obj/kernel.asm	/^c0109303:	74 08                	je     c010930d <wait_queue_prev+0x64>$/;"	l
c0109305	obj/kernel.asm	/^c0109305:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109308	obj/kernel.asm	/^c0109308:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c010930b	obj/kernel.asm	/^c010930b:	eb 05                	jmp    c0109312 <wait_queue_prev+0x69>$/;"	l
c010930d	obj/kernel.asm	/^c010930d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109312	obj/kernel.asm	/^c0109312:	c9                   	leave  $/;"	l
c0109313	obj/kernel.asm	/^c0109313:	c3                   	ret    $/;"	l
c0109314	obj/kernel.asm	/^c0109314 <wait_queue_first>:$/;"	l
c0109314	obj/kernel.asm	/^c0109314:	55                   	push   %ebp$/;"	l
c0109315	obj/kernel.asm	/^c0109315:	89 e5                	mov    %esp,%ebp$/;"	l
c0109317	obj/kernel.asm	/^c0109317:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010931a	obj/kernel.asm	/^c010931a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010931d	obj/kernel.asm	/^c010931d:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0109320	obj/kernel.asm	/^c0109320:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0109323	obj/kernel.asm	/^c0109323:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109326	obj/kernel.asm	/^c0109326:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109329	obj/kernel.asm	/^c0109329:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010932c	obj/kernel.asm	/^c010932c:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c010932f	obj/kernel.asm	/^c010932f:	74 08                	je     c0109339 <wait_queue_first+0x25>$/;"	l
c0109331	obj/kernel.asm	/^c0109331:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109334	obj/kernel.asm	/^c0109334:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0109337	obj/kernel.asm	/^c0109337:	eb 05                	jmp    c010933e <wait_queue_first+0x2a>$/;"	l
c0109339	obj/kernel.asm	/^c0109339:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010933e	obj/kernel.asm	/^c010933e:	c9                   	leave  $/;"	l
c010933f	obj/kernel.asm	/^c010933f:	c3                   	ret    $/;"	l
c0109340	obj/kernel.asm	/^c0109340 <wait_queue_last>:$/;"	l
c0109340	obj/kernel.asm	/^c0109340:	55                   	push   %ebp$/;"	l
c0109341	obj/kernel.asm	/^c0109341:	89 e5                	mov    %esp,%ebp$/;"	l
c0109343	obj/kernel.asm	/^c0109343:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0109346	obj/kernel.asm	/^c0109346:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109349	obj/kernel.asm	/^c0109349:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010934c	obj/kernel.asm	/^c010934c:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010934f	obj/kernel.asm	/^c010934f:	8b 00                	mov    (%eax),%eax$/;"	l
c0109351	obj/kernel.asm	/^c0109351:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109354	obj/kernel.asm	/^c0109354:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109357	obj/kernel.asm	/^c0109357:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c010935a	obj/kernel.asm	/^c010935a:	74 08                	je     c0109364 <wait_queue_last+0x24>$/;"	l
c010935c	obj/kernel.asm	/^c010935c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010935f	obj/kernel.asm	/^c010935f:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0109362	obj/kernel.asm	/^c0109362:	eb 05                	jmp    c0109369 <wait_queue_last+0x29>$/;"	l
c0109364	obj/kernel.asm	/^c0109364:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109369	obj/kernel.asm	/^c0109369:	c9                   	leave  $/;"	l
c010936a	obj/kernel.asm	/^c010936a:	c3                   	ret    $/;"	l
c010936b	obj/kernel.asm	/^c010936b <wait_queue_empty>:$/;"	l
c010936b	obj/kernel.asm	/^c010936b:	55                   	push   %ebp$/;"	l
c010936c	obj/kernel.asm	/^c010936c:	89 e5                	mov    %esp,%ebp$/;"	l
c010936e	obj/kernel.asm	/^c010936e:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0109371	obj/kernel.asm	/^c0109371:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109374	obj/kernel.asm	/^c0109374:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109377	obj/kernel.asm	/^c0109377:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010937a	obj/kernel.asm	/^c010937a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010937d	obj/kernel.asm	/^c010937d:	39 45 fc             	cmp    %eax,-0x4(%ebp)$/;"	l
c0109380	obj/kernel.asm	/^c0109380:	0f 94 c0             	sete   %al$/;"	l
c0109383	obj/kernel.asm	/^c0109383:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109386	obj/kernel.asm	/^c0109386:	90                   	nop$/;"	l
c0109387	obj/kernel.asm	/^c0109387:	c9                   	leave  $/;"	l
c0109388	obj/kernel.asm	/^c0109388:	c3                   	ret    $/;"	l
c0109389	obj/kernel.asm	/^c0109389 <wait_in_queue>:$/;"	l
c0109389	obj/kernel.asm	/^c0109389:	55                   	push   %ebp$/;"	l
c010938a	obj/kernel.asm	/^c010938a:	89 e5                	mov    %esp,%ebp$/;"	l
c010938c	obj/kernel.asm	/^c010938c:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010938f	obj/kernel.asm	/^c010938f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109392	obj/kernel.asm	/^c0109392:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109395	obj/kernel.asm	/^c0109395:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109398	obj/kernel.asm	/^c0109398:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010939b	obj/kernel.asm	/^c010939b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010939e	obj/kernel.asm	/^c010939e:	39 45 fc             	cmp    %eax,-0x4(%ebp)$/;"	l
c01093a1	obj/kernel.asm	/^c01093a1:	0f 94 c0             	sete   %al$/;"	l
c01093a4	obj/kernel.asm	/^c01093a4:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01093a7	obj/kernel.asm	/^c01093a7:	85 c0                	test   %eax,%eax$/;"	l
c01093a9	obj/kernel.asm	/^c01093a9:	0f 94 c0             	sete   %al$/;"	l
c01093ac	obj/kernel.asm	/^c01093ac:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01093af	obj/kernel.asm	/^c01093af:	c9                   	leave  $/;"	l
c01093b0	obj/kernel.asm	/^c01093b0:	c3                   	ret    $/;"	l
c01093b1	obj/kernel.asm	/^c01093b1 <wakeup_wait>:$/;"	l
c01093b1	obj/kernel.asm	/^c01093b1:	55                   	push   %ebp$/;"	l
c01093b2	obj/kernel.asm	/^c01093b2:	89 e5                	mov    %esp,%ebp$/;"	l
c01093b4	obj/kernel.asm	/^c01093b4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01093b7	obj/kernel.asm	/^c01093b7:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01093bb	obj/kernel.asm	/^c01093bb:	74 11                	je     c01093ce <wakeup_wait+0x1d>$/;"	l
c01093bd	obj/kernel.asm	/^c01093bd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01093c0	obj/kernel.asm	/^c01093c0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01093c3	obj/kernel.asm	/^c01093c3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01093c6	obj/kernel.asm	/^c01093c6:	e8 e2 fd ff ff       	call   c01091ad <wait_queue_del>$/;"	l
c01093cb	obj/kernel.asm	/^c01093cb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01093ce	obj/kernel.asm	/^c01093ce:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01093d1	obj/kernel.asm	/^c01093d1:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01093d4	obj/kernel.asm	/^c01093d4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01093d7	obj/kernel.asm	/^c01093d7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01093da	obj/kernel.asm	/^c01093da:	8b 00                	mov    (%eax),%eax$/;"	l
c01093dc	obj/kernel.asm	/^c01093dc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01093df	obj/kernel.asm	/^c01093df:	50                   	push   %eax$/;"	l
c01093e0	obj/kernel.asm	/^c01093e0:	e8 3c 3b 00 00       	call   c010cf21 <wakeup_proc>$/;"	l
c01093e5	obj/kernel.asm	/^c01093e5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01093e8	obj/kernel.asm	/^c01093e8:	c9                   	leave  $/;"	l
c01093e9	obj/kernel.asm	/^c01093e9:	c3                   	ret    $/;"	l
c01093ea	obj/kernel.asm	/^c01093ea <wakeup_first>:$/;"	l
c01093ea	obj/kernel.asm	/^c01093ea:	55                   	push   %ebp$/;"	l
c01093eb	obj/kernel.asm	/^c01093eb:	89 e5                	mov    %esp,%ebp$/;"	l
c01093ed	obj/kernel.asm	/^c01093ed:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01093f0	obj/kernel.asm	/^c01093f0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01093f3	obj/kernel.asm	/^c01093f3:	e8 1c ff ff ff       	call   c0109314 <wait_queue_first>$/;"	l
c01093f8	obj/kernel.asm	/^c01093f8:	83 c4 04             	add    $0x4,%esp$/;"	l
c01093fb	obj/kernel.asm	/^c01093fb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01093fe	obj/kernel.asm	/^c01093fe:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109402	obj/kernel.asm	/^c0109402:	74 14                	je     c0109418 <wakeup_first+0x2e>$/;"	l
c0109404	obj/kernel.asm	/^c0109404:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0109407	obj/kernel.asm	/^c0109407:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010940a	obj/kernel.asm	/^c010940a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010940d	obj/kernel.asm	/^c010940d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109410	obj/kernel.asm	/^c0109410:	e8 9c ff ff ff       	call   c01093b1 <wakeup_wait>$/;"	l
c0109415	obj/kernel.asm	/^c0109415:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109418	obj/kernel.asm	/^c0109418:	c9                   	leave  $/;"	l
c0109419	obj/kernel.asm	/^c0109419:	c3                   	ret    $/;"	l
c010941a	obj/kernel.asm	/^c010941a <wakeup_queue>:$/;"	l
c010941a	obj/kernel.asm	/^c010941a:	55                   	push   %ebp$/;"	l
c010941b	obj/kernel.asm	/^c010941b:	89 e5                	mov    %esp,%ebp$/;"	l
c010941d	obj/kernel.asm	/^c010941d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109420	obj/kernel.asm	/^c0109420:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109423	obj/kernel.asm	/^c0109423:	e8 ec fe ff ff       	call   c0109314 <wait_queue_first>$/;"	l
c0109428	obj/kernel.asm	/^c0109428:	83 c4 04             	add    $0x4,%esp$/;"	l
c010942b	obj/kernel.asm	/^c010942b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010942e	obj/kernel.asm	/^c010942e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109432	obj/kernel.asm	/^c0109432:	74 5f                	je     c0109493 <wakeup_queue+0x79>$/;"	l
c0109434	obj/kernel.asm	/^c0109434:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0109438	obj/kernel.asm	/^c0109438:	74 2c                	je     c0109466 <wakeup_queue+0x4c>$/;"	l
c010943a	obj/kernel.asm	/^c010943a:	6a 01                	push   $0x1$/;"	l
c010943c	obj/kernel.asm	/^c010943c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010943f	obj/kernel.asm	/^c010943f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109442	obj/kernel.asm	/^c0109442:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109445	obj/kernel.asm	/^c0109445:	e8 67 ff ff ff       	call   c01093b1 <wakeup_wait>$/;"	l
c010944a	obj/kernel.asm	/^c010944a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010944d	obj/kernel.asm	/^c010944d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109450	obj/kernel.asm	/^c0109450:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109453	obj/kernel.asm	/^c0109453:	e8 bc fe ff ff       	call   c0109314 <wait_queue_first>$/;"	l
c0109458	obj/kernel.asm	/^c0109458:	83 c4 10             	add    $0x10,%esp$/;"	l
c010945b	obj/kernel.asm	/^c010945b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010945e	obj/kernel.asm	/^c010945e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109462	obj/kernel.asm	/^c0109462:	75 d6                	jne    c010943a <wakeup_queue+0x20>$/;"	l
c0109464	obj/kernel.asm	/^c0109464:	eb 2d                	jmp    c0109493 <wakeup_queue+0x79>$/;"	l
c0109466	obj/kernel.asm	/^c0109466:	6a 00                	push   $0x0$/;"	l
c0109468	obj/kernel.asm	/^c0109468:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010946b	obj/kernel.asm	/^c010946b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010946e	obj/kernel.asm	/^c010946e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109471	obj/kernel.asm	/^c0109471:	e8 3b ff ff ff       	call   c01093b1 <wakeup_wait>$/;"	l
c0109476	obj/kernel.asm	/^c0109476:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109479	obj/kernel.asm	/^c0109479:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010947c	obj/kernel.asm	/^c010947c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010947f	obj/kernel.asm	/^c010947f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109482	obj/kernel.asm	/^c0109482:	e8 b6 fd ff ff       	call   c010923d <wait_queue_next>$/;"	l
c0109487	obj/kernel.asm	/^c0109487:	83 c4 10             	add    $0x10,%esp$/;"	l
c010948a	obj/kernel.asm	/^c010948a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010948d	obj/kernel.asm	/^c010948d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109491	obj/kernel.asm	/^c0109491:	75 d3                	jne    c0109466 <wakeup_queue+0x4c>$/;"	l
c0109493	obj/kernel.asm	/^c0109493:	c9                   	leave  $/;"	l
c0109494	obj/kernel.asm	/^c0109494:	c3                   	ret    $/;"	l
c0109495	obj/kernel.asm	/^c0109495 <wait_current_set>:$/;"	l
c0109495	obj/kernel.asm	/^c0109495:	55                   	push   %ebp$/;"	l
c0109496	obj/kernel.asm	/^c0109496:	89 e5                	mov    %esp,%ebp$/;"	l
c0109498	obj/kernel.asm	/^c0109498:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010949b	obj/kernel.asm	/^c010949b:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c01094a0	obj/kernel.asm	/^c01094a0:	85 c0                	test   %eax,%eax$/;"	l
c01094a2	obj/kernel.asm	/^c01094a2:	75 16                	jne    c01094ba <wait_current_set+0x25>$/;"	l
c01094a4	obj/kernel.asm	/^c01094a4:	68 19 5b 11 c0       	push   $0xc0115b19$/;"	l
c01094a9	obj/kernel.asm	/^c01094a9:	68 b5 5a 11 c0       	push   $0xc0115ab5$/;"	l
c01094ae	obj/kernel.asm	/^c01094ae:	6a 74                	push   $0x74$/;"	l
c01094b0	obj/kernel.asm	/^c01094b0:	68 ca 5a 11 c0       	push   $0xc0115aca$/;"	l
c01094b5	obj/kernel.asm	/^c01094b5:	e8 15 70 ff ff       	call   c01004cf <__panic>$/;"	l
c01094ba	obj/kernel.asm	/^c01094ba:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c01094bf	obj/kernel.asm	/^c01094bf:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01094c2	obj/kernel.asm	/^c01094c2:	50                   	push   %eax$/;"	l
c01094c3	obj/kernel.asm	/^c01094c3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01094c6	obj/kernel.asm	/^c01094c6:	e8 f6 fb ff ff       	call   c01090c1 <wait_init>$/;"	l
c01094cb	obj/kernel.asm	/^c01094cb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01094ce	obj/kernel.asm	/^c01094ce:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c01094d3	obj/kernel.asm	/^c01094d3:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c01094d9	obj/kernel.asm	/^c01094d9:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c01094de	obj/kernel.asm	/^c01094de:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01094e1	obj/kernel.asm	/^c01094e1:	89 90 90 00 00 00    	mov    %edx,0x90(%eax)$/;"	l
c01094e7	obj/kernel.asm	/^c01094e7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01094ea	obj/kernel.asm	/^c01094ea:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01094ed	obj/kernel.asm	/^c01094ed:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01094f0	obj/kernel.asm	/^c01094f0:	e8 25 fc ff ff       	call   c010911a <wait_queue_add>$/;"	l
c01094f5	obj/kernel.asm	/^c01094f5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01094f8	obj/kernel.asm	/^c01094f8:	c9                   	leave  $/;"	l
c01094f9	obj/kernel.asm	/^c01094f9:	c3                   	ret    $/;"	l
c01094fa	obj/kernel.asm	/^c01094fa <__intr_save>:$/;"	l
c01094fa	obj/kernel.asm	/^c01094fa:	55                   	push   %ebp$/;"	l
c01094fb	obj/kernel.asm	/^c01094fb:	89 e5                	mov    %esp,%ebp$/;"	l
c01094fd	obj/kernel.asm	/^c01094fd:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109500	obj/kernel.asm	/^c0109500:	9c                   	pushf  $/;"	l
c0109501	obj/kernel.asm	/^c0109501:	58                   	pop    %eax$/;"	l
c0109502	obj/kernel.asm	/^c0109502:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109505	obj/kernel.asm	/^c0109505:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109508	obj/kernel.asm	/^c0109508:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010950d	obj/kernel.asm	/^c010950d:	85 c0                	test   %eax,%eax$/;"	l
c010950f	obj/kernel.asm	/^c010950f:	74 0c                	je     c010951d <__intr_save+0x23>$/;"	l
c0109511	obj/kernel.asm	/^c0109511:	e8 86 8c ff ff       	call   c010219c <intr_disable>$/;"	l
c0109516	obj/kernel.asm	/^c0109516:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010951b	obj/kernel.asm	/^c010951b:	eb 05                	jmp    c0109522 <__intr_save+0x28>$/;"	l
c010951d	obj/kernel.asm	/^c010951d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109522	obj/kernel.asm	/^c0109522:	c9                   	leave  $/;"	l
c0109523	obj/kernel.asm	/^c0109523:	c3                   	ret    $/;"	l
c0109524	obj/kernel.asm	/^c0109524 <__intr_restore>:$/;"	l
c0109524	obj/kernel.asm	/^c0109524:	55                   	push   %ebp$/;"	l
c0109525	obj/kernel.asm	/^c0109525:	89 e5                	mov    %esp,%ebp$/;"	l
c0109527	obj/kernel.asm	/^c0109527:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010952a	obj/kernel.asm	/^c010952a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010952e	obj/kernel.asm	/^c010952e:	74 05                	je     c0109535 <__intr_restore+0x11>$/;"	l
c0109530	obj/kernel.asm	/^c0109530:	e8 61 8c ff ff       	call   c0102196 <intr_enable>$/;"	l
c0109535	obj/kernel.asm	/^c0109535:	c9                   	leave  $/;"	l
c0109536	obj/kernel.asm	/^c0109536:	c3                   	ret    $/;"	l
c0109537	obj/kernel.asm	/^c0109537 <sem_init>:$/;"	l
c0109537	obj/kernel.asm	/^c0109537:	55                   	push   %ebp$/;"	l
c0109538	obj/kernel.asm	/^c0109538:	89 e5                	mov    %esp,%ebp$/;"	l
c010953a	obj/kernel.asm	/^c010953a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010953d	obj/kernel.asm	/^c010953d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109540	obj/kernel.asm	/^c0109540:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0109543	obj/kernel.asm	/^c0109543:	89 10                	mov    %edx,(%eax)$/;"	l
c0109545	obj/kernel.asm	/^c0109545:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109548	obj/kernel.asm	/^c0109548:	83 c0 04             	add    $0x4,%eax$/;"	l
c010954b	obj/kernel.asm	/^c010954b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010954e	obj/kernel.asm	/^c010954e:	50                   	push   %eax$/;"	l
c010954f	obj/kernel.asm	/^c010954f:	e8 a4 fb ff ff       	call   c01090f8 <wait_queue_init>$/;"	l
c0109554	obj/kernel.asm	/^c0109554:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109557	obj/kernel.asm	/^c0109557:	c9                   	leave  $/;"	l
c0109558	obj/kernel.asm	/^c0109558:	c3                   	ret    $/;"	l
c0109559	obj/kernel.asm	/^c0109559 <__up>:$/;"	l
c0109559	obj/kernel.asm	/^c0109559:	55                   	push   %ebp$/;"	l
c010955a	obj/kernel.asm	/^c010955a:	89 e5                	mov    %esp,%ebp$/;"	l
c010955c	obj/kernel.asm	/^c010955c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010955f	obj/kernel.asm	/^c010955f:	e8 96 ff ff ff       	call   c01094fa <__intr_save>$/;"	l
c0109564	obj/kernel.asm	/^c0109564:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109567	obj/kernel.asm	/^c0109567:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010956a	obj/kernel.asm	/^c010956a:	83 c0 04             	add    $0x4,%eax$/;"	l
c010956d	obj/kernel.asm	/^c010956d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109570	obj/kernel.asm	/^c0109570:	50                   	push   %eax$/;"	l
c0109571	obj/kernel.asm	/^c0109571:	e8 9e fd ff ff       	call   c0109314 <wait_queue_first>$/;"	l
c0109576	obj/kernel.asm	/^c0109576:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109579	obj/kernel.asm	/^c0109579:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010957c	obj/kernel.asm	/^c010957c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109580	obj/kernel.asm	/^c0109580:	75 0f                	jne    c0109591 <__up+0x38>$/;"	l
c0109582	obj/kernel.asm	/^c0109582:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109585	obj/kernel.asm	/^c0109585:	8b 00                	mov    (%eax),%eax$/;"	l
c0109587	obj/kernel.asm	/^c0109587:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010958a	obj/kernel.asm	/^c010958a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010958d	obj/kernel.asm	/^c010958d:	89 10                	mov    %edx,(%eax)$/;"	l
c010958f	obj/kernel.asm	/^c010958f:	eb 3d                	jmp    c01095ce <__up+0x75>$/;"	l
c0109591	obj/kernel.asm	/^c0109591:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109594	obj/kernel.asm	/^c0109594:	8b 00                	mov    (%eax),%eax$/;"	l
c0109596	obj/kernel.asm	/^c0109596:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010959c	obj/kernel.asm	/^c010959c:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010959f	obj/kernel.asm	/^c010959f:	74 16                	je     c01095b7 <__up+0x5e>$/;"	l
c01095a1	obj/kernel.asm	/^c01095a1:	68 2c 5b 11 c0       	push   $0xc0115b2c$/;"	l
c01095a6	obj/kernel.asm	/^c01095a6:	68 51 5b 11 c0       	push   $0xc0115b51$/;"	l
c01095ab	obj/kernel.asm	/^c01095ab:	6a 19                	push   $0x19$/;"	l
c01095ad	obj/kernel.asm	/^c01095ad:	68 66 5b 11 c0       	push   $0xc0115b66$/;"	l
c01095b2	obj/kernel.asm	/^c01095b2:	e8 18 6f ff ff       	call   c01004cf <__panic>$/;"	l
c01095b7	obj/kernel.asm	/^c01095b7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095ba	obj/kernel.asm	/^c01095ba:	83 c0 04             	add    $0x4,%eax$/;"	l
c01095bd	obj/kernel.asm	/^c01095bd:	6a 01                	push   $0x1$/;"	l
c01095bf	obj/kernel.asm	/^c01095bf:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01095c2	obj/kernel.asm	/^c01095c2:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01095c5	obj/kernel.asm	/^c01095c5:	50                   	push   %eax$/;"	l
c01095c6	obj/kernel.asm	/^c01095c6:	e8 e6 fd ff ff       	call   c01093b1 <wakeup_wait>$/;"	l
c01095cb	obj/kernel.asm	/^c01095cb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01095ce	obj/kernel.asm	/^c01095ce:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01095d1	obj/kernel.asm	/^c01095d1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01095d4	obj/kernel.asm	/^c01095d4:	e8 4b ff ff ff       	call   c0109524 <__intr_restore>$/;"	l
c01095d9	obj/kernel.asm	/^c01095d9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01095dc	obj/kernel.asm	/^c01095dc:	c9                   	leave  $/;"	l
c01095dd	obj/kernel.asm	/^c01095dd:	c3                   	ret    $/;"	l
c01095de	obj/kernel.asm	/^c01095de <__down>:$/;"	l
c01095de	obj/kernel.asm	/^c01095de:	55                   	push   %ebp$/;"	l
c01095df	obj/kernel.asm	/^c01095df:	89 e5                	mov    %esp,%ebp$/;"	l
c01095e1	obj/kernel.asm	/^c01095e1:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01095e4	obj/kernel.asm	/^c01095e4:	e8 11 ff ff ff       	call   c01094fa <__intr_save>$/;"	l
c01095e9	obj/kernel.asm	/^c01095e9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01095ec	obj/kernel.asm	/^c01095ec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095ef	obj/kernel.asm	/^c01095ef:	8b 00                	mov    (%eax),%eax$/;"	l
c01095f1	obj/kernel.asm	/^c01095f1:	85 c0                	test   %eax,%eax$/;"	l
c01095f3	obj/kernel.asm	/^c01095f3:	7e 25                	jle    c010961a <__down+0x3c>$/;"	l
c01095f5	obj/kernel.asm	/^c01095f5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095f8	obj/kernel.asm	/^c01095f8:	8b 00                	mov    (%eax),%eax$/;"	l
c01095fa	obj/kernel.asm	/^c01095fa:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01095fd	obj/kernel.asm	/^c01095fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109600	obj/kernel.asm	/^c0109600:	89 10                	mov    %edx,(%eax)$/;"	l
c0109602	obj/kernel.asm	/^c0109602:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109605	obj/kernel.asm	/^c0109605:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109608	obj/kernel.asm	/^c0109608:	e8 17 ff ff ff       	call   c0109524 <__intr_restore>$/;"	l
c010960d	obj/kernel.asm	/^c010960d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109610	obj/kernel.asm	/^c0109610:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109615	obj/kernel.asm	/^c0109615:	e9 86 00 00 00       	jmp    c01096a0 <__down+0xc2>$/;"	l
c010961a	obj/kernel.asm	/^c010961a:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010961d	obj/kernel.asm	/^c010961d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109620	obj/kernel.asm	/^c0109620:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109623	obj/kernel.asm	/^c0109623:	83 c0 04             	add    $0x4,%eax$/;"	l
c0109626	obj/kernel.asm	/^c0109626:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109629	obj/kernel.asm	/^c0109629:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010962c	obj/kernel.asm	/^c010962c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010962f	obj/kernel.asm	/^c010962f:	50                   	push   %eax$/;"	l
c0109630	obj/kernel.asm	/^c0109630:	e8 60 fe ff ff       	call   c0109495 <wait_current_set>$/;"	l
c0109635	obj/kernel.asm	/^c0109635:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109638	obj/kernel.asm	/^c0109638:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010963b	obj/kernel.asm	/^c010963b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010963e	obj/kernel.asm	/^c010963e:	e8 e1 fe ff ff       	call   c0109524 <__intr_restore>$/;"	l
c0109643	obj/kernel.asm	/^c0109643:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109646	obj/kernel.asm	/^c0109646:	e8 65 39 00 00       	call   c010cfb0 <schedule>$/;"	l
c010964b	obj/kernel.asm	/^c010964b:	e8 aa fe ff ff       	call   c01094fa <__intr_save>$/;"	l
c0109650	obj/kernel.asm	/^c0109650:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109653	obj/kernel.asm	/^c0109653:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109656	obj/kernel.asm	/^c0109656:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109659	obj/kernel.asm	/^c0109659:	e8 2b fd ff ff       	call   c0109389 <wait_in_queue>$/;"	l
c010965e	obj/kernel.asm	/^c010965e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109661	obj/kernel.asm	/^c0109661:	85 c0                	test   %eax,%eax$/;"	l
c0109663	obj/kernel.asm	/^c0109663:	74 15                	je     c010967a <__down+0x9c>$/;"	l
c0109665	obj/kernel.asm	/^c0109665:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109668	obj/kernel.asm	/^c0109668:	83 c0 04             	add    $0x4,%eax$/;"	l
c010966b	obj/kernel.asm	/^c010966b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010966e	obj/kernel.asm	/^c010966e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109671	obj/kernel.asm	/^c0109671:	50                   	push   %eax$/;"	l
c0109672	obj/kernel.asm	/^c0109672:	e8 36 fb ff ff       	call   c01091ad <wait_queue_del>$/;"	l
c0109677	obj/kernel.asm	/^c0109677:	83 c4 10             	add    $0x10,%esp$/;"	l
c010967a	obj/kernel.asm	/^c010967a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010967d	obj/kernel.asm	/^c010967d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109680	obj/kernel.asm	/^c0109680:	e8 9f fe ff ff       	call   c0109524 <__intr_restore>$/;"	l
c0109685	obj/kernel.asm	/^c0109685:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109688	obj/kernel.asm	/^c0109688:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010968b	obj/kernel.asm	/^c010968b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010968e	obj/kernel.asm	/^c010968e:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0109691	obj/kernel.asm	/^c0109691:	74 08                	je     c010969b <__down+0xbd>$/;"	l
c0109693	obj/kernel.asm	/^c0109693:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109696	obj/kernel.asm	/^c0109696:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109699	obj/kernel.asm	/^c0109699:	eb 05                	jmp    c01096a0 <__down+0xc2>$/;"	l
c010969b	obj/kernel.asm	/^c010969b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01096a0	obj/kernel.asm	/^c01096a0:	c9                   	leave  $/;"	l
c01096a1	obj/kernel.asm	/^c01096a1:	c3                   	ret    $/;"	l
c01096a2	obj/kernel.asm	/^c01096a2 <up>:$/;"	l
c01096a2	obj/kernel.asm	/^c01096a2:	55                   	push   %ebp$/;"	l
c01096a3	obj/kernel.asm	/^c01096a3:	89 e5                	mov    %esp,%ebp$/;"	l
c01096a5	obj/kernel.asm	/^c01096a5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01096a8	obj/kernel.asm	/^c01096a8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01096ab	obj/kernel.asm	/^c01096ab:	68 00 01 00 00       	push   $0x100$/;"	l
c01096b0	obj/kernel.asm	/^c01096b0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01096b3	obj/kernel.asm	/^c01096b3:	e8 a1 fe ff ff       	call   c0109559 <__up>$/;"	l
c01096b8	obj/kernel.asm	/^c01096b8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01096bb	obj/kernel.asm	/^c01096bb:	c9                   	leave  $/;"	l
c01096bc	obj/kernel.asm	/^c01096bc:	c3                   	ret    $/;"	l
c01096bd	obj/kernel.asm	/^c01096bd <down>:$/;"	l
c01096bd	obj/kernel.asm	/^c01096bd:	55                   	push   %ebp$/;"	l
c01096be	obj/kernel.asm	/^c01096be:	89 e5                	mov    %esp,%ebp$/;"	l
c01096c0	obj/kernel.asm	/^c01096c0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01096c3	obj/kernel.asm	/^c01096c3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01096c6	obj/kernel.asm	/^c01096c6:	68 00 01 00 00       	push   $0x100$/;"	l
c01096cb	obj/kernel.asm	/^c01096cb:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01096ce	obj/kernel.asm	/^c01096ce:	e8 0b ff ff ff       	call   c01095de <__down>$/;"	l
c01096d3	obj/kernel.asm	/^c01096d3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01096d6	obj/kernel.asm	/^c01096d6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01096d9	obj/kernel.asm	/^c01096d9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01096dd	obj/kernel.asm	/^c01096dd:	74 16                	je     c01096f5 <down+0x38>$/;"	l
c01096df	obj/kernel.asm	/^c01096df:	68 76 5b 11 c0       	push   $0xc0115b76$/;"	l
c01096e4	obj/kernel.asm	/^c01096e4:	68 51 5b 11 c0       	push   $0xc0115b51$/;"	l
c01096e9	obj/kernel.asm	/^c01096e9:	6a 40                	push   $0x40$/;"	l
c01096eb	obj/kernel.asm	/^c01096eb:	68 66 5b 11 c0       	push   $0xc0115b66$/;"	l
c01096f0	obj/kernel.asm	/^c01096f0:	e8 da 6d ff ff       	call   c01004cf <__panic>$/;"	l
c01096f5	obj/kernel.asm	/^c01096f5:	c9                   	leave  $/;"	l
c01096f6	obj/kernel.asm	/^c01096f6:	c3                   	ret    $/;"	l
c01096f7	obj/kernel.asm	/^c01096f7 <try_down>:$/;"	l
c01096f7	obj/kernel.asm	/^c01096f7:	55                   	push   %ebp$/;"	l
c01096f8	obj/kernel.asm	/^c01096f8:	89 e5                	mov    %esp,%ebp$/;"	l
c01096fa	obj/kernel.asm	/^c01096fa:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01096fd	obj/kernel.asm	/^c01096fd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109704	obj/kernel.asm	/^c0109704:	e8 f1 fd ff ff       	call   c01094fa <__intr_save>$/;"	l
c0109709	obj/kernel.asm	/^c0109709:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010970c	obj/kernel.asm	/^c010970c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010970f	obj/kernel.asm	/^c010970f:	8b 00                	mov    (%eax),%eax$/;"	l
c0109711	obj/kernel.asm	/^c0109711:	85 c0                	test   %eax,%eax$/;"	l
c0109713	obj/kernel.asm	/^c0109713:	7e 14                	jle    c0109729 <try_down+0x32>$/;"	l
c0109715	obj/kernel.asm	/^c0109715:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109718	obj/kernel.asm	/^c0109718:	8b 00                	mov    (%eax),%eax$/;"	l
c010971a	obj/kernel.asm	/^c010971a:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010971d	obj/kernel.asm	/^c010971d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109720	obj/kernel.asm	/^c0109720:	89 10                	mov    %edx,(%eax)$/;"	l
c0109722	obj/kernel.asm	/^c0109722:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c0109729	obj/kernel.asm	/^c0109729:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010972c	obj/kernel.asm	/^c010972c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010972f	obj/kernel.asm	/^c010972f:	e8 f0 fd ff ff       	call   c0109524 <__intr_restore>$/;"	l
c0109734	obj/kernel.asm	/^c0109734:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109737	obj/kernel.asm	/^c0109737:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010973a	obj/kernel.asm	/^c010973a:	c9                   	leave  $/;"	l
c010973b	obj/kernel.asm	/^c010973b:	c3                   	ret    $/;"	l
c010973c	obj/kernel.asm	/^c010973c <monitor_init>:$/;"	l
c010973c	obj/kernel.asm	/^c010973c:	55                   	push   %ebp$/;"	l
c010973d	obj/kernel.asm	/^c010973d:	89 e5                	mov    %esp,%ebp$/;"	l
c010973f	obj/kernel.asm	/^c010973f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109742	obj/kernel.asm	/^c0109742:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0109746	obj/kernel.asm	/^c0109746:	75 16                	jne    c010975e <monitor_init+0x22>$/;"	l
c0109748	obj/kernel.asm	/^c0109748:	68 84 5b 11 c0       	push   $0xc0115b84$/;"	l
c010974d	obj/kernel.asm	/^c010974d:	68 8d 5b 11 c0       	push   $0xc0115b8d$/;"	l
c0109752	obj/kernel.asm	/^c0109752:	6a 0b                	push   $0xb$/;"	l
c0109754	obj/kernel.asm	/^c0109754:	68 a2 5b 11 c0       	push   $0xc0115ba2$/;"	l
c0109759	obj/kernel.asm	/^c0109759:	e8 71 6d ff ff       	call   c01004cf <__panic>$/;"	l
c010975e	obj/kernel.asm	/^c010975e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109761	obj/kernel.asm	/^c0109761:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c0109768	obj/kernel.asm	/^c0109768:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010976b	obj/kernel.asm	/^c010976b:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
c0109772	obj/kernel.asm	/^c0109772:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109775	obj/kernel.asm	/^c0109775:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109778	obj/kernel.asm	/^c0109778:	6a 01                	push   $0x1$/;"	l
c010977a	obj/kernel.asm	/^c010977a:	50                   	push   %eax$/;"	l
c010977b	obj/kernel.asm	/^c010977b:	e8 b7 fd ff ff       	call   c0109537 <sem_init>$/;"	l
c0109780	obj/kernel.asm	/^c0109780:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109783	obj/kernel.asm	/^c0109783:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109786	obj/kernel.asm	/^c0109786:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109789	obj/kernel.asm	/^c0109789:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010978c	obj/kernel.asm	/^c010978c:	6a 00                	push   $0x0$/;"	l
c010978e	obj/kernel.asm	/^c010978e:	50                   	push   %eax$/;"	l
c010978f	obj/kernel.asm	/^c010978f:	e8 a3 fd ff ff       	call   c0109537 <sem_init>$/;"	l
c0109794	obj/kernel.asm	/^c0109794:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109797	obj/kernel.asm	/^c0109797:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010979a	obj/kernel.asm	/^c010979a:	89 d0                	mov    %edx,%eax$/;"	l
c010979c	obj/kernel.asm	/^c010979c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010979f	obj/kernel.asm	/^c010979f:	01 d0                	add    %edx,%eax$/;"	l
c01097a1	obj/kernel.asm	/^c01097a1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01097a4	obj/kernel.asm	/^c01097a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01097a7	obj/kernel.asm	/^c01097a7:	50                   	push   %eax$/;"	l
c01097a8	obj/kernel.asm	/^c01097a8:	e8 f2 dc ff ff       	call   c010749f <kmalloc>$/;"	l
c01097ad	obj/kernel.asm	/^c01097ad:	83 c4 10             	add    $0x10,%esp$/;"	l
c01097b0	obj/kernel.asm	/^c01097b0:	89 c2                	mov    %eax,%edx$/;"	l
c01097b2	obj/kernel.asm	/^c01097b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01097b5	obj/kernel.asm	/^c01097b5:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c01097b8	obj/kernel.asm	/^c01097b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01097bb	obj/kernel.asm	/^c01097bb:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01097be	obj/kernel.asm	/^c01097be:	85 c0                	test   %eax,%eax$/;"	l
c01097c0	obj/kernel.asm	/^c01097c0:	75 16                	jne    c01097d8 <monitor_init+0x9c>$/;"	l
c01097c2	obj/kernel.asm	/^c01097c2:	68 b6 5b 11 c0       	push   $0xc0115bb6$/;"	l
c01097c7	obj/kernel.asm	/^c01097c7:	68 8d 5b 11 c0       	push   $0xc0115b8d$/;"	l
c01097cc	obj/kernel.asm	/^c01097cc:	6a 11                	push   $0x11$/;"	l
c01097ce	obj/kernel.asm	/^c01097ce:	68 a2 5b 11 c0       	push   $0xc0115ba2$/;"	l
c01097d3	obj/kernel.asm	/^c01097d3:	e8 f7 6c ff ff       	call   c01004cf <__panic>$/;"	l
c01097d8	obj/kernel.asm	/^c01097d8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01097df	obj/kernel.asm	/^c01097df:	eb 5f                	jmp    c0109840 <monitor_init+0x104>$/;"	l
c01097e1	obj/kernel.asm	/^c01097e1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01097e4	obj/kernel.asm	/^c01097e4:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c01097e7	obj/kernel.asm	/^c01097e7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01097ea	obj/kernel.asm	/^c01097ea:	89 d0                	mov    %edx,%eax$/;"	l
c01097ec	obj/kernel.asm	/^c01097ec:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01097ef	obj/kernel.asm	/^c01097ef:	01 d0                	add    %edx,%eax$/;"	l
c01097f1	obj/kernel.asm	/^c01097f1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01097f4	obj/kernel.asm	/^c01097f4:	01 c8                	add    %ecx,%eax$/;"	l
c01097f6	obj/kernel.asm	/^c01097f6:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c01097fd	obj/kernel.asm	/^c01097fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109800	obj/kernel.asm	/^c0109800:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c0109803	obj/kernel.asm	/^c0109803:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0109806	obj/kernel.asm	/^c0109806:	89 d0                	mov    %edx,%eax$/;"	l
c0109808	obj/kernel.asm	/^c0109808:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010980b	obj/kernel.asm	/^c010980b:	01 d0                	add    %edx,%eax$/;"	l
c010980d	obj/kernel.asm	/^c010980d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109810	obj/kernel.asm	/^c0109810:	01 c8                	add    %ecx,%eax$/;"	l
c0109812	obj/kernel.asm	/^c0109812:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109815	obj/kernel.asm	/^c0109815:	6a 00                	push   $0x0$/;"	l
c0109817	obj/kernel.asm	/^c0109817:	50                   	push   %eax$/;"	l
c0109818	obj/kernel.asm	/^c0109818:	e8 1a fd ff ff       	call   c0109537 <sem_init>$/;"	l
c010981d	obj/kernel.asm	/^c010981d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109820	obj/kernel.asm	/^c0109820:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109823	obj/kernel.asm	/^c0109823:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c0109826	obj/kernel.asm	/^c0109826:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0109829	obj/kernel.asm	/^c0109829:	89 d0                	mov    %edx,%eax$/;"	l
c010982b	obj/kernel.asm	/^c010982b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010982e	obj/kernel.asm	/^c010982e:	01 d0                	add    %edx,%eax$/;"	l
c0109830	obj/kernel.asm	/^c0109830:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109833	obj/kernel.asm	/^c0109833:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
c0109836	obj/kernel.asm	/^c0109836:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109839	obj/kernel.asm	/^c0109839:	89 42 10             	mov    %eax,0x10(%edx)$/;"	l
c010983c	obj/kernel.asm	/^c010983c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0109840	obj/kernel.asm	/^c0109840:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109843	obj/kernel.asm	/^c0109843:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0109846	obj/kernel.asm	/^c0109846:	72 99                	jb     c01097e1 <monitor_init+0xa5>$/;"	l
c0109848	obj/kernel.asm	/^c0109848:	c9                   	leave  $/;"	l
c0109849	obj/kernel.asm	/^c0109849:	c3                   	ret    $/;"	l
c010984a	obj/kernel.asm	/^c010984a <cond_signal>:$/;"	l
c010984a	obj/kernel.asm	/^c010984a:	55                   	push   %ebp$/;"	l
c010984b	obj/kernel.asm	/^c010984b:	89 e5                	mov    %esp,%ebp$/;"	l
c010984d	obj/kernel.asm	/^c010984d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109850	obj/kernel.asm	/^c0109850:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109853	obj/kernel.asm	/^c0109853:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109856	obj/kernel.asm	/^c0109856:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c0109859	obj/kernel.asm	/^c0109859:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010985c	obj/kernel.asm	/^c010985c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010985f	obj/kernel.asm	/^c010985f:	52                   	push   %edx$/;"	l
c0109860	obj/kernel.asm	/^c0109860:	50                   	push   %eax$/;"	l
c0109861	obj/kernel.asm	/^c0109861:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109864	obj/kernel.asm	/^c0109864:	68 c4 5b 11 c0       	push   $0xc0115bc4$/;"	l
c0109869	obj/kernel.asm	/^c0109869:	e8 fc 6a ff ff       	call   c010036a <cprintf>$/;"	l
c010986e	obj/kernel.asm	/^c010986e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109871	obj/kernel.asm	/^c0109871:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109874	obj/kernel.asm	/^c0109874:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109877	obj/kernel.asm	/^c0109877:	85 c0                	test   %eax,%eax$/;"	l
c0109879	obj/kernel.asm	/^c0109879:	7e 42                	jle    c01098bd <cond_signal+0x73>$/;"	l
c010987b	obj/kernel.asm	/^c010987b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010987e	obj/kernel.asm	/^c010987e:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109881	obj/kernel.asm	/^c0109881:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c0109884	obj/kernel.asm	/^c0109884:	83 c2 01             	add    $0x1,%edx$/;"	l
c0109887	obj/kernel.asm	/^c0109887:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010988a	obj/kernel.asm	/^c010988a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010988d	obj/kernel.asm	/^c010988d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109890	obj/kernel.asm	/^c0109890:	50                   	push   %eax$/;"	l
c0109891	obj/kernel.asm	/^c0109891:	e8 0c fe ff ff       	call   c01096a2 <up>$/;"	l
c0109896	obj/kernel.asm	/^c0109896:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109899	obj/kernel.asm	/^c0109899:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010989c	obj/kernel.asm	/^c010989c:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010989f	obj/kernel.asm	/^c010989f:	83 c0 0c             	add    $0xc,%eax$/;"	l
c01098a2	obj/kernel.asm	/^c01098a2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01098a5	obj/kernel.asm	/^c01098a5:	50                   	push   %eax$/;"	l
c01098a6	obj/kernel.asm	/^c01098a6:	e8 12 fe ff ff       	call   c01096bd <down>$/;"	l
c01098ab	obj/kernel.asm	/^c01098ab:	83 c4 10             	add    $0x10,%esp$/;"	l
c01098ae	obj/kernel.asm	/^c01098ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01098b1	obj/kernel.asm	/^c01098b1:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01098b4	obj/kernel.asm	/^c01098b4:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c01098b7	obj/kernel.asm	/^c01098b7:	83 ea 01             	sub    $0x1,%edx$/;"	l
c01098ba	obj/kernel.asm	/^c01098ba:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c01098bd	obj/kernel.asm	/^c01098bd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01098c0	obj/kernel.asm	/^c01098c0:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01098c3	obj/kernel.asm	/^c01098c3:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c01098c6	obj/kernel.asm	/^c01098c6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01098c9	obj/kernel.asm	/^c01098c9:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01098cc	obj/kernel.asm	/^c01098cc:	52                   	push   %edx$/;"	l
c01098cd	obj/kernel.asm	/^c01098cd:	50                   	push   %eax$/;"	l
c01098ce	obj/kernel.asm	/^c01098ce:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01098d1	obj/kernel.asm	/^c01098d1:	68 0c 5c 11 c0       	push   $0xc0115c0c$/;"	l
c01098d6	obj/kernel.asm	/^c01098d6:	e8 8f 6a ff ff       	call   c010036a <cprintf>$/;"	l
c01098db	obj/kernel.asm	/^c01098db:	83 c4 10             	add    $0x10,%esp$/;"	l
c01098de	obj/kernel.asm	/^c01098de:	c9                   	leave  $/;"	l
c01098df	obj/kernel.asm	/^c01098df:	c3                   	ret    $/;"	l
c01098e0	obj/kernel.asm	/^c01098e0 <cond_wait>:$/;"	l
c01098e0	obj/kernel.asm	/^c01098e0:	55                   	push   %ebp$/;"	l
c01098e1	obj/kernel.asm	/^c01098e1:	89 e5                	mov    %esp,%ebp$/;"	l
c01098e3	obj/kernel.asm	/^c01098e3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01098e6	obj/kernel.asm	/^c01098e6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01098e9	obj/kernel.asm	/^c01098e9:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01098ec	obj/kernel.asm	/^c01098ec:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c01098ef	obj/kernel.asm	/^c01098ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01098f2	obj/kernel.asm	/^c01098f2:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01098f5	obj/kernel.asm	/^c01098f5:	52                   	push   %edx$/;"	l
c01098f6	obj/kernel.asm	/^c01098f6:	50                   	push   %eax$/;"	l
c01098f7	obj/kernel.asm	/^c01098f7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01098fa	obj/kernel.asm	/^c01098fa:	68 50 5c 11 c0       	push   $0xc0115c50$/;"	l
c01098ff	obj/kernel.asm	/^c01098ff:	e8 66 6a ff ff       	call   c010036a <cprintf>$/;"	l
c0109904	obj/kernel.asm	/^c0109904:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109907	obj/kernel.asm	/^c0109907:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010990a	obj/kernel.asm	/^c010990a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010990d	obj/kernel.asm	/^c010990d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0109910	obj/kernel.asm	/^c0109910:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109913	obj/kernel.asm	/^c0109913:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0109916	obj/kernel.asm	/^c0109916:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109919	obj/kernel.asm	/^c0109919:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010991c	obj/kernel.asm	/^c010991c:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010991f	obj/kernel.asm	/^c010991f:	85 c0                	test   %eax,%eax$/;"	l
c0109921	obj/kernel.asm	/^c0109921:	7e 17                	jle    c010993a <cond_wait+0x5a>$/;"	l
c0109923	obj/kernel.asm	/^c0109923:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109926	obj/kernel.asm	/^c0109926:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109929	obj/kernel.asm	/^c0109929:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010992c	obj/kernel.asm	/^c010992c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010992f	obj/kernel.asm	/^c010992f:	50                   	push   %eax$/;"	l
c0109930	obj/kernel.asm	/^c0109930:	e8 6d fd ff ff       	call   c01096a2 <up>$/;"	l
c0109935	obj/kernel.asm	/^c0109935:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109938	obj/kernel.asm	/^c0109938:	eb 12                	jmp    c010994c <cond_wait+0x6c>$/;"	l
c010993a	obj/kernel.asm	/^c010993a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010993d	obj/kernel.asm	/^c010993d:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109940	obj/kernel.asm	/^c0109940:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109943	obj/kernel.asm	/^c0109943:	50                   	push   %eax$/;"	l
c0109944	obj/kernel.asm	/^c0109944:	e8 59 fd ff ff       	call   c01096a2 <up>$/;"	l
c0109949	obj/kernel.asm	/^c0109949:	83 c4 10             	add    $0x10,%esp$/;"	l
c010994c	obj/kernel.asm	/^c010994c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010994f	obj/kernel.asm	/^c010994f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109952	obj/kernel.asm	/^c0109952:	50                   	push   %eax$/;"	l
c0109953	obj/kernel.asm	/^c0109953:	e8 65 fd ff ff       	call   c01096bd <down>$/;"	l
c0109958	obj/kernel.asm	/^c0109958:	83 c4 10             	add    $0x10,%esp$/;"	l
c010995b	obj/kernel.asm	/^c010995b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010995e	obj/kernel.asm	/^c010995e:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109961	obj/kernel.asm	/^c0109961:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0109964	obj/kernel.asm	/^c0109964:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109967	obj/kernel.asm	/^c0109967:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010996a	obj/kernel.asm	/^c010996a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010996d	obj/kernel.asm	/^c010996d:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109970	obj/kernel.asm	/^c0109970:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c0109973	obj/kernel.asm	/^c0109973:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109976	obj/kernel.asm	/^c0109976:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109979	obj/kernel.asm	/^c0109979:	52                   	push   %edx$/;"	l
c010997a	obj/kernel.asm	/^c010997a:	50                   	push   %eax$/;"	l
c010997b	obj/kernel.asm	/^c010997b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010997e	obj/kernel.asm	/^c010997e:	68 94 5c 11 c0       	push   $0xc0115c94$/;"	l
c0109983	obj/kernel.asm	/^c0109983:	e8 e2 69 ff ff       	call   c010036a <cprintf>$/;"	l
c0109988	obj/kernel.asm	/^c0109988:	83 c4 10             	add    $0x10,%esp$/;"	l
c010998b	obj/kernel.asm	/^c010998b:	c9                   	leave  $/;"	l
c010998c	obj/kernel.asm	/^c010998c:	c3                   	ret    $/;"	l
c010998d	obj/kernel.asm	/^c010998d <lock_mm>:$/;"	l
c010998d	obj/kernel.asm	/^c010998d:	55                   	push   %ebp$/;"	l
c010998e	obj/kernel.asm	/^c010998e:	89 e5                	mov    %esp,%ebp$/;"	l
c0109990	obj/kernel.asm	/^c0109990:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109993	obj/kernel.asm	/^c0109993:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0109997	obj/kernel.asm	/^c0109997:	74 29                	je     c01099c2 <lock_mm+0x35>$/;"	l
c0109999	obj/kernel.asm	/^c0109999:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010999c	obj/kernel.asm	/^c010999c:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010999f	obj/kernel.asm	/^c010999f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01099a2	obj/kernel.asm	/^c01099a2:	50                   	push   %eax$/;"	l
c01099a3	obj/kernel.asm	/^c01099a3:	e8 15 fd ff ff       	call   c01096bd <down>$/;"	l
c01099a8	obj/kernel.asm	/^c01099a8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01099ab	obj/kernel.asm	/^c01099ab:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c01099b0	obj/kernel.asm	/^c01099b0:	85 c0                	test   %eax,%eax$/;"	l
c01099b2	obj/kernel.asm	/^c01099b2:	74 0e                	je     c01099c2 <lock_mm+0x35>$/;"	l
c01099b4	obj/kernel.asm	/^c01099b4:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c01099b9	obj/kernel.asm	/^c01099b9:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01099bc	obj/kernel.asm	/^c01099bc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099bf	obj/kernel.asm	/^c01099bf:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
c01099c2	obj/kernel.asm	/^c01099c2:	c9                   	leave  $/;"	l
c01099c3	obj/kernel.asm	/^c01099c3:	c3                   	ret    $/;"	l
c01099c4	obj/kernel.asm	/^c01099c4 <unlock_mm>:$/;"	l
c01099c4	obj/kernel.asm	/^c01099c4:	55                   	push   %ebp$/;"	l
c01099c5	obj/kernel.asm	/^c01099c5:	89 e5                	mov    %esp,%ebp$/;"	l
c01099c7	obj/kernel.asm	/^c01099c7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01099ca	obj/kernel.asm	/^c01099ca:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01099ce	obj/kernel.asm	/^c01099ce:	74 1c                	je     c01099ec <unlock_mm+0x28>$/;"	l
c01099d0	obj/kernel.asm	/^c01099d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099d3	obj/kernel.asm	/^c01099d3:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c01099d6	obj/kernel.asm	/^c01099d6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01099d9	obj/kernel.asm	/^c01099d9:	50                   	push   %eax$/;"	l
c01099da	obj/kernel.asm	/^c01099da:	e8 c3 fc ff ff       	call   c01096a2 <up>$/;"	l
c01099df	obj/kernel.asm	/^c01099df:	83 c4 10             	add    $0x10,%esp$/;"	l
c01099e2	obj/kernel.asm	/^c01099e2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099e5	obj/kernel.asm	/^c01099e5:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)$/;"	l
c01099ec	obj/kernel.asm	/^c01099ec:	c9                   	leave  $/;"	l
c01099ed	obj/kernel.asm	/^c01099ed:	c3                   	ret    $/;"	l
c01099ee	obj/kernel.asm	/^c01099ee <copy_path>:$/;"	l
c01099ee	obj/kernel.asm	/^c01099ee:	55                   	push   %ebp$/;"	l
c01099ef	obj/kernel.asm	/^c01099ef:	89 e5                	mov    %esp,%ebp$/;"	l
c01099f1	obj/kernel.asm	/^c01099f1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01099f4	obj/kernel.asm	/^c01099f4:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c01099f9	obj/kernel.asm	/^c01099f9:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01099fc	obj/kernel.asm	/^c01099fc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01099ff	obj/kernel.asm	/^c01099ff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109a02	obj/kernel.asm	/^c0109a02:	68 00 10 00 00       	push   $0x1000$/;"	l
c0109a07	obj/kernel.asm	/^c0109a07:	e8 93 da ff ff       	call   c010749f <kmalloc>$/;"	l
c0109a0c	obj/kernel.asm	/^c0109a0c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109a0f	obj/kernel.asm	/^c0109a0f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109a12	obj/kernel.asm	/^c0109a12:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109a16	obj/kernel.asm	/^c0109a16:	75 07                	jne    c0109a1f <copy_path+0x31>$/;"	l
c0109a18	obj/kernel.asm	/^c0109a18:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0109a1d	obj/kernel.asm	/^c0109a1d:	eb 67                	jmp    c0109a86 <copy_path+0x98>$/;"	l
c0109a1f	obj/kernel.asm	/^c0109a1f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109a22	obj/kernel.asm	/^c0109a22:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109a25	obj/kernel.asm	/^c0109a25:	e8 63 ff ff ff       	call   c010998d <lock_mm>$/;"	l
c0109a2a	obj/kernel.asm	/^c0109a2a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109a2d	obj/kernel.asm	/^c0109a2d:	68 00 10 00 00       	push   $0x1000$/;"	l
c0109a32	obj/kernel.asm	/^c0109a32:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109a35	obj/kernel.asm	/^c0109a35:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109a38	obj/kernel.asm	/^c0109a38:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109a3b	obj/kernel.asm	/^c0109a3b:	e8 d1 c8 ff ff       	call   c0106311 <copy_string>$/;"	l
c0109a40	obj/kernel.asm	/^c0109a40:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109a43	obj/kernel.asm	/^c0109a43:	85 c0                	test   %eax,%eax$/;"	l
c0109a45	obj/kernel.asm	/^c0109a45:	75 24                	jne    c0109a6b <copy_path+0x7d>$/;"	l
c0109a47	obj/kernel.asm	/^c0109a47:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109a4a	obj/kernel.asm	/^c0109a4a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109a4d	obj/kernel.asm	/^c0109a4d:	e8 72 ff ff ff       	call   c01099c4 <unlock_mm>$/;"	l
c0109a52	obj/kernel.asm	/^c0109a52:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109a55	obj/kernel.asm	/^c0109a55:	90                   	nop$/;"	l
c0109a56	obj/kernel.asm	/^c0109a56:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109a59	obj/kernel.asm	/^c0109a59:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109a5c	obj/kernel.asm	/^c0109a5c:	e8 56 da ff ff       	call   c01074b7 <kfree>$/;"	l
c0109a61	obj/kernel.asm	/^c0109a61:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109a64	obj/kernel.asm	/^c0109a64:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0109a69	obj/kernel.asm	/^c0109a69:	eb 1b                	jmp    c0109a86 <copy_path+0x98>$/;"	l
c0109a6b	obj/kernel.asm	/^c0109a6b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109a6e	obj/kernel.asm	/^c0109a6e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109a71	obj/kernel.asm	/^c0109a71:	e8 4e ff ff ff       	call   c01099c4 <unlock_mm>$/;"	l
c0109a76	obj/kernel.asm	/^c0109a76:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109a79	obj/kernel.asm	/^c0109a79:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a7c	obj/kernel.asm	/^c0109a7c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0109a7f	obj/kernel.asm	/^c0109a7f:	89 10                	mov    %edx,(%eax)$/;"	l
c0109a81	obj/kernel.asm	/^c0109a81:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109a86	obj/kernel.asm	/^c0109a86:	c9                   	leave  $/;"	l
c0109a87	obj/kernel.asm	/^c0109a87:	c3                   	ret    $/;"	l
c0109a88	obj/kernel.asm	/^c0109a88 <sysfile_open>:$/;"	l
c0109a88	obj/kernel.asm	/^c0109a88:	55                   	push   %ebp$/;"	l
c0109a89	obj/kernel.asm	/^c0109a89:	89 e5                	mov    %esp,%ebp$/;"	l
c0109a8b	obj/kernel.asm	/^c0109a8b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109a8e	obj/kernel.asm	/^c0109a8e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109a91	obj/kernel.asm	/^c0109a91:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109a94	obj/kernel.asm	/^c0109a94:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0109a97	obj/kernel.asm	/^c0109a97:	50                   	push   %eax$/;"	l
c0109a98	obj/kernel.asm	/^c0109a98:	e8 51 ff ff ff       	call   c01099ee <copy_path>$/;"	l
c0109a9d	obj/kernel.asm	/^c0109a9d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109aa0	obj/kernel.asm	/^c0109aa0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109aa3	obj/kernel.asm	/^c0109aa3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109aa7	obj/kernel.asm	/^c0109aa7:	74 05                	je     c0109aae <sysfile_open+0x26>$/;"	l
c0109aa9	obj/kernel.asm	/^c0109aa9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109aac	obj/kernel.asm	/^c0109aac:	eb 27                	jmp    c0109ad5 <sysfile_open+0x4d>$/;"	l
c0109aae	obj/kernel.asm	/^c0109aae:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109ab1	obj/kernel.asm	/^c0109ab1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109ab4	obj/kernel.asm	/^c0109ab4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109ab7	obj/kernel.asm	/^c0109ab7:	50                   	push   %eax$/;"	l
c0109ab8	obj/kernel.asm	/^c0109ab8:	e8 bc 0b 00 00       	call   c010a679 <file_open>$/;"	l
c0109abd	obj/kernel.asm	/^c0109abd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ac0	obj/kernel.asm	/^c0109ac0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109ac3	obj/kernel.asm	/^c0109ac3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109ac6	obj/kernel.asm	/^c0109ac6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109ac9	obj/kernel.asm	/^c0109ac9:	50                   	push   %eax$/;"	l
c0109aca	obj/kernel.asm	/^c0109aca:	e8 e8 d9 ff ff       	call   c01074b7 <kfree>$/;"	l
c0109acf	obj/kernel.asm	/^c0109acf:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ad2	obj/kernel.asm	/^c0109ad2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109ad5	obj/kernel.asm	/^c0109ad5:	c9                   	leave  $/;"	l
c0109ad6	obj/kernel.asm	/^c0109ad6:	c3                   	ret    $/;"	l
c0109ad7	obj/kernel.asm	/^c0109ad7 <sysfile_close>:$/;"	l
c0109ad7	obj/kernel.asm	/^c0109ad7:	55                   	push   %ebp$/;"	l
c0109ad8	obj/kernel.asm	/^c0109ad8:	89 e5                	mov    %esp,%ebp$/;"	l
c0109ada	obj/kernel.asm	/^c0109ada:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109add	obj/kernel.asm	/^c0109add:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109ae0	obj/kernel.asm	/^c0109ae0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109ae3	obj/kernel.asm	/^c0109ae3:	e8 30 0d 00 00       	call   c010a818 <file_close>$/;"	l
c0109ae8	obj/kernel.asm	/^c0109ae8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109aeb	obj/kernel.asm	/^c0109aeb:	c9                   	leave  $/;"	l
c0109aec	obj/kernel.asm	/^c0109aec:	c3                   	ret    $/;"	l
c0109aed	obj/kernel.asm	/^c0109aed <sysfile_read>:$/;"	l
c0109aed	obj/kernel.asm	/^c0109aed:	55                   	push   %ebp$/;"	l
c0109aee	obj/kernel.asm	/^c0109aee:	89 e5                	mov    %esp,%ebp$/;"	l
c0109af0	obj/kernel.asm	/^c0109af0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109af3	obj/kernel.asm	/^c0109af3:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c0109af8	obj/kernel.asm	/^c0109af8:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109afb	obj/kernel.asm	/^c0109afb:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109afe	obj/kernel.asm	/^c0109afe:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0109b02	obj/kernel.asm	/^c0109b02:	75 0a                	jne    c0109b0e <sysfile_read+0x21>$/;"	l
c0109b04	obj/kernel.asm	/^c0109b04:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109b09	obj/kernel.asm	/^c0109b09:	e9 32 01 00 00       	jmp    c0109c40 <sysfile_read+0x153>$/;"	l
c0109b0e	obj/kernel.asm	/^c0109b0e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109b11	obj/kernel.asm	/^c0109b11:	6a 00                	push   $0x0$/;"	l
c0109b13	obj/kernel.asm	/^c0109b13:	6a 01                	push   $0x1$/;"	l
c0109b15	obj/kernel.asm	/^c0109b15:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109b18	obj/kernel.asm	/^c0109b18:	e8 ff 0a 00 00       	call   c010a61c <file_testfd>$/;"	l
c0109b1d	obj/kernel.asm	/^c0109b1d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109b20	obj/kernel.asm	/^c0109b20:	85 c0                	test   %eax,%eax$/;"	l
c0109b22	obj/kernel.asm	/^c0109b22:	75 0a                	jne    c0109b2e <sysfile_read+0x41>$/;"	l
c0109b24	obj/kernel.asm	/^c0109b24:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0109b29	obj/kernel.asm	/^c0109b29:	e9 12 01 00 00       	jmp    c0109c40 <sysfile_read+0x153>$/;"	l
c0109b2e	obj/kernel.asm	/^c0109b2e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109b31	obj/kernel.asm	/^c0109b31:	68 00 10 00 00       	push   $0x1000$/;"	l
c0109b36	obj/kernel.asm	/^c0109b36:	e8 64 d9 ff ff       	call   c010749f <kmalloc>$/;"	l
c0109b3b	obj/kernel.asm	/^c0109b3b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109b3e	obj/kernel.asm	/^c0109b3e:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109b41	obj/kernel.asm	/^c0109b41:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0109b45	obj/kernel.asm	/^c0109b45:	75 0a                	jne    c0109b51 <sysfile_read+0x64>$/;"	l
c0109b47	obj/kernel.asm	/^c0109b47:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0109b4c	obj/kernel.asm	/^c0109b4c:	e9 ef 00 00 00       	jmp    c0109c40 <sysfile_read+0x153>$/;"	l
c0109b51	obj/kernel.asm	/^c0109b51:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109b58	obj/kernel.asm	/^c0109b58:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0109b5f	obj/kernel.asm	/^c0109b5f:	e9 b6 00 00 00       	jmp    c0109c1a <sysfile_read+0x12d>$/;"	l
c0109b64	obj/kernel.asm	/^c0109b64:	c7 45 e4 00 10 00 00 	movl   $0x1000,-0x1c(%ebp)$/;"	l
c0109b6b	obj/kernel.asm	/^c0109b6b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109b6e	obj/kernel.asm	/^c0109b6e:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0109b71	obj/kernel.asm	/^c0109b71:	76 06                	jbe    c0109b79 <sysfile_read+0x8c>$/;"	l
c0109b73	obj/kernel.asm	/^c0109b73:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0109b76	obj/kernel.asm	/^c0109b76:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0109b79	obj/kernel.asm	/^c0109b79:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109b7c	obj/kernel.asm	/^c0109b7c:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c0109b7f	obj/kernel.asm	/^c0109b7f:	52                   	push   %edx$/;"	l
c0109b80	obj/kernel.asm	/^c0109b80:	50                   	push   %eax$/;"	l
c0109b81	obj/kernel.asm	/^c0109b81:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0109b84	obj/kernel.asm	/^c0109b84:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109b87	obj/kernel.asm	/^c0109b87:	e8 c8 0c 00 00       	call   c010a854 <file_read>$/;"	l
c0109b8c	obj/kernel.asm	/^c0109b8c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109b8f	obj/kernel.asm	/^c0109b8f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109b92	obj/kernel.asm	/^c0109b92:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109b95	obj/kernel.asm	/^c0109b95:	85 c0                	test   %eax,%eax$/;"	l
c0109b97	obj/kernel.asm	/^c0109b97:	74 74                	je     c0109c0d <sysfile_read+0x120>$/;"	l
c0109b99	obj/kernel.asm	/^c0109b99:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109b9c	obj/kernel.asm	/^c0109b9c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109b9f	obj/kernel.asm	/^c0109b9f:	e8 e9 fd ff ff       	call   c010998d <lock_mm>$/;"	l
c0109ba4	obj/kernel.asm	/^c0109ba4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ba7	obj/kernel.asm	/^c0109ba7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109baa	obj/kernel.asm	/^c0109baa:	50                   	push   %eax$/;"	l
c0109bab	obj/kernel.asm	/^c0109bab:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0109bae	obj/kernel.asm	/^c0109bae:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109bb1	obj/kernel.asm	/^c0109bb1:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109bb4	obj/kernel.asm	/^c0109bb4:	e8 9a bd ff ff       	call   c0105953 <copy_to_user>$/;"	l
c0109bb9	obj/kernel.asm	/^c0109bb9:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109bbc	obj/kernel.asm	/^c0109bbc:	85 c0                	test   %eax,%eax$/;"	l
c0109bbe	obj/kernel.asm	/^c0109bbe:	74 32                	je     c0109bf2 <sysfile_read+0x105>$/;"	l
c0109bc0	obj/kernel.asm	/^c0109bc0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109bc3	obj/kernel.asm	/^c0109bc3:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
c0109bc6	obj/kernel.asm	/^c0109bc6:	73 16                	jae    c0109bde <sysfile_read+0xf1>$/;"	l
c0109bc8	obj/kernel.asm	/^c0109bc8:	68 d6 5c 11 c0       	push   $0xc0115cd6$/;"	l
c0109bcd	obj/kernel.asm	/^c0109bcd:	68 e2 5c 11 c0       	push   $0xc0115ce2$/;"	l
c0109bd2	obj/kernel.asm	/^c0109bd2:	6a 55                	push   $0x55$/;"	l
c0109bd4	obj/kernel.asm	/^c0109bd4:	68 f7 5c 11 c0       	push   $0xc0115cf7$/;"	l
c0109bd9	obj/kernel.asm	/^c0109bd9:	e8 f1 68 ff ff       	call   c01004cf <__panic>$/;"	l
c0109bde	obj/kernel.asm	/^c0109bde:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109be1	obj/kernel.asm	/^c0109be1:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c0109be4	obj/kernel.asm	/^c0109be4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109be7	obj/kernel.asm	/^c0109be7:	29 45 10             	sub    %eax,0x10(%ebp)$/;"	l
c0109bea	obj/kernel.asm	/^c0109bea:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109bed	obj/kernel.asm	/^c0109bed:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c0109bf0	obj/kernel.asm	/^c0109bf0:	eb 0d                	jmp    c0109bff <sysfile_read+0x112>$/;"	l
c0109bf2	obj/kernel.asm	/^c0109bf2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109bf6	obj/kernel.asm	/^c0109bf6:	75 07                	jne    c0109bff <sysfile_read+0x112>$/;"	l
c0109bf8	obj/kernel.asm	/^c0109bf8:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0109bff	obj/kernel.asm	/^c0109bff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109c02	obj/kernel.asm	/^c0109c02:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109c05	obj/kernel.asm	/^c0109c05:	e8 ba fd ff ff       	call   c01099c4 <unlock_mm>$/;"	l
c0109c0a	obj/kernel.asm	/^c0109c0a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109c0d	obj/kernel.asm	/^c0109c0d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109c11	obj/kernel.asm	/^c0109c11:	75 11                	jne    c0109c24 <sysfile_read+0x137>$/;"	l
c0109c13	obj/kernel.asm	/^c0109c13:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109c16	obj/kernel.asm	/^c0109c16:	85 c0                	test   %eax,%eax$/;"	l
c0109c18	obj/kernel.asm	/^c0109c18:	74 0a                	je     c0109c24 <sysfile_read+0x137>$/;"	l
c0109c1a	obj/kernel.asm	/^c0109c1a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0109c1e	obj/kernel.asm	/^c0109c1e:	0f 85 40 ff ff ff    	jne    c0109b64 <sysfile_read+0x77>$/;"	l
c0109c24	obj/kernel.asm	/^c0109c24:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109c27	obj/kernel.asm	/^c0109c27:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0109c2a	obj/kernel.asm	/^c0109c2a:	e8 88 d8 ff ff       	call   c01074b7 <kfree>$/;"	l
c0109c2f	obj/kernel.asm	/^c0109c2f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109c32	obj/kernel.asm	/^c0109c32:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109c36	obj/kernel.asm	/^c0109c36:	74 05                	je     c0109c3d <sysfile_read+0x150>$/;"	l
c0109c38	obj/kernel.asm	/^c0109c38:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109c3b	obj/kernel.asm	/^c0109c3b:	eb 03                	jmp    c0109c40 <sysfile_read+0x153>$/;"	l
c0109c3d	obj/kernel.asm	/^c0109c3d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c40	obj/kernel.asm	/^c0109c40:	c9                   	leave  $/;"	l
c0109c41	obj/kernel.asm	/^c0109c41:	c3                   	ret    $/;"	l
c0109c42	obj/kernel.asm	/^c0109c42 <sysfile_write>:$/;"	l
c0109c42	obj/kernel.asm	/^c0109c42:	55                   	push   %ebp$/;"	l
c0109c43	obj/kernel.asm	/^c0109c43:	89 e5                	mov    %esp,%ebp$/;"	l
c0109c45	obj/kernel.asm	/^c0109c45:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109c48	obj/kernel.asm	/^c0109c48:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c0109c4d	obj/kernel.asm	/^c0109c4d:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109c50	obj/kernel.asm	/^c0109c50:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109c53	obj/kernel.asm	/^c0109c53:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0109c57	obj/kernel.asm	/^c0109c57:	75 0a                	jne    c0109c63 <sysfile_write+0x21>$/;"	l
c0109c59	obj/kernel.asm	/^c0109c59:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109c5e	obj/kernel.asm	/^c0109c5e:	e9 38 01 00 00       	jmp    c0109d9b <sysfile_write+0x159>$/;"	l
c0109c63	obj/kernel.asm	/^c0109c63:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109c66	obj/kernel.asm	/^c0109c66:	6a 01                	push   $0x1$/;"	l
c0109c68	obj/kernel.asm	/^c0109c68:	6a 00                	push   $0x0$/;"	l
c0109c6a	obj/kernel.asm	/^c0109c6a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109c6d	obj/kernel.asm	/^c0109c6d:	e8 aa 09 00 00       	call   c010a61c <file_testfd>$/;"	l
c0109c72	obj/kernel.asm	/^c0109c72:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109c75	obj/kernel.asm	/^c0109c75:	85 c0                	test   %eax,%eax$/;"	l
c0109c77	obj/kernel.asm	/^c0109c77:	75 0a                	jne    c0109c83 <sysfile_write+0x41>$/;"	l
c0109c79	obj/kernel.asm	/^c0109c79:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0109c7e	obj/kernel.asm	/^c0109c7e:	e9 18 01 00 00       	jmp    c0109d9b <sysfile_write+0x159>$/;"	l
c0109c83	obj/kernel.asm	/^c0109c83:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109c86	obj/kernel.asm	/^c0109c86:	68 00 10 00 00       	push   $0x1000$/;"	l
c0109c8b	obj/kernel.asm	/^c0109c8b:	e8 0f d8 ff ff       	call   c010749f <kmalloc>$/;"	l
c0109c90	obj/kernel.asm	/^c0109c90:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109c93	obj/kernel.asm	/^c0109c93:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109c96	obj/kernel.asm	/^c0109c96:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0109c9a	obj/kernel.asm	/^c0109c9a:	75 0a                	jne    c0109ca6 <sysfile_write+0x64>$/;"	l
c0109c9c	obj/kernel.asm	/^c0109c9c:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0109ca1	obj/kernel.asm	/^c0109ca1:	e9 f5 00 00 00       	jmp    c0109d9b <sysfile_write+0x159>$/;"	l
c0109ca6	obj/kernel.asm	/^c0109ca6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109cad	obj/kernel.asm	/^c0109cad:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0109cb4	obj/kernel.asm	/^c0109cb4:	e9 bc 00 00 00       	jmp    c0109d75 <sysfile_write+0x133>$/;"	l
c0109cb9	obj/kernel.asm	/^c0109cb9:	c7 45 e4 00 10 00 00 	movl   $0x1000,-0x1c(%ebp)$/;"	l
c0109cc0	obj/kernel.asm	/^c0109cc0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109cc3	obj/kernel.asm	/^c0109cc3:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0109cc6	obj/kernel.asm	/^c0109cc6:	76 06                	jbe    c0109cce <sysfile_write+0x8c>$/;"	l
c0109cc8	obj/kernel.asm	/^c0109cc8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0109ccb	obj/kernel.asm	/^c0109ccb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0109cce	obj/kernel.asm	/^c0109cce:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109cd1	obj/kernel.asm	/^c0109cd1:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109cd4	obj/kernel.asm	/^c0109cd4:	e8 b4 fc ff ff       	call   c010998d <lock_mm>$/;"	l
c0109cd9	obj/kernel.asm	/^c0109cd9:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109cdc	obj/kernel.asm	/^c0109cdc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109cdf	obj/kernel.asm	/^c0109cdf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109ce2	obj/kernel.asm	/^c0109ce2:	6a 00                	push   $0x0$/;"	l
c0109ce4	obj/kernel.asm	/^c0109ce4:	50                   	push   %eax$/;"	l
c0109ce5	obj/kernel.asm	/^c0109ce5:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109ce8	obj/kernel.asm	/^c0109ce8:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0109ceb	obj/kernel.asm	/^c0109ceb:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109cee	obj/kernel.asm	/^c0109cee:	e8 1f bc ff ff       	call   c0105912 <copy_from_user>$/;"	l
c0109cf3	obj/kernel.asm	/^c0109cf3:	83 c4 20             	add    $0x20,%esp$/;"	l
c0109cf6	obj/kernel.asm	/^c0109cf6:	85 c0                	test   %eax,%eax$/;"	l
c0109cf8	obj/kernel.asm	/^c0109cf8:	75 07                	jne    c0109d01 <sysfile_write+0xbf>$/;"	l
c0109cfa	obj/kernel.asm	/^c0109cfa:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0109d01	obj/kernel.asm	/^c0109d01:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109d04	obj/kernel.asm	/^c0109d04:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109d07	obj/kernel.asm	/^c0109d07:	e8 b8 fc ff ff       	call   c01099c4 <unlock_mm>$/;"	l
c0109d0c	obj/kernel.asm	/^c0109d0c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109d0f	obj/kernel.asm	/^c0109d0f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109d13	obj/kernel.asm	/^c0109d13:	75 53                	jne    c0109d68 <sysfile_write+0x126>$/;"	l
c0109d15	obj/kernel.asm	/^c0109d15:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109d18	obj/kernel.asm	/^c0109d18:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c0109d1b	obj/kernel.asm	/^c0109d1b:	52                   	push   %edx$/;"	l
c0109d1c	obj/kernel.asm	/^c0109d1c:	50                   	push   %eax$/;"	l
c0109d1d	obj/kernel.asm	/^c0109d1d:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0109d20	obj/kernel.asm	/^c0109d20:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109d23	obj/kernel.asm	/^c0109d23:	e8 59 0c 00 00       	call   c010a981 <file_write>$/;"	l
c0109d28	obj/kernel.asm	/^c0109d28:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109d2b	obj/kernel.asm	/^c0109d2b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109d2e	obj/kernel.asm	/^c0109d2e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109d31	obj/kernel.asm	/^c0109d31:	85 c0                	test   %eax,%eax$/;"	l
c0109d33	obj/kernel.asm	/^c0109d33:	74 33                	je     c0109d68 <sysfile_write+0x126>$/;"	l
c0109d35	obj/kernel.asm	/^c0109d35:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109d38	obj/kernel.asm	/^c0109d38:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
c0109d3b	obj/kernel.asm	/^c0109d3b:	73 19                	jae    c0109d56 <sysfile_write+0x114>$/;"	l
c0109d3d	obj/kernel.asm	/^c0109d3d:	68 d6 5c 11 c0       	push   $0xc0115cd6$/;"	l
c0109d42	obj/kernel.asm	/^c0109d42:	68 e2 5c 11 c0       	push   $0xc0115ce2$/;"	l
c0109d47	obj/kernel.asm	/^c0109d47:	68 8a 00 00 00       	push   $0x8a$/;"	l
c0109d4c	obj/kernel.asm	/^c0109d4c:	68 f7 5c 11 c0       	push   $0xc0115cf7$/;"	l
c0109d51	obj/kernel.asm	/^c0109d51:	e8 79 67 ff ff       	call   c01004cf <__panic>$/;"	l
c0109d56	obj/kernel.asm	/^c0109d56:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109d59	obj/kernel.asm	/^c0109d59:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c0109d5c	obj/kernel.asm	/^c0109d5c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109d5f	obj/kernel.asm	/^c0109d5f:	29 45 10             	sub    %eax,0x10(%ebp)$/;"	l
c0109d62	obj/kernel.asm	/^c0109d62:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109d65	obj/kernel.asm	/^c0109d65:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c0109d68	obj/kernel.asm	/^c0109d68:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109d6c	obj/kernel.asm	/^c0109d6c:	75 11                	jne    c0109d7f <sysfile_write+0x13d>$/;"	l
c0109d6e	obj/kernel.asm	/^c0109d6e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109d71	obj/kernel.asm	/^c0109d71:	85 c0                	test   %eax,%eax$/;"	l
c0109d73	obj/kernel.asm	/^c0109d73:	74 0a                	je     c0109d7f <sysfile_write+0x13d>$/;"	l
c0109d75	obj/kernel.asm	/^c0109d75:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0109d79	obj/kernel.asm	/^c0109d79:	0f 85 3a ff ff ff    	jne    c0109cb9 <sysfile_write+0x77>$/;"	l
c0109d7f	obj/kernel.asm	/^c0109d7f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109d82	obj/kernel.asm	/^c0109d82:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0109d85	obj/kernel.asm	/^c0109d85:	e8 2d d7 ff ff       	call   c01074b7 <kfree>$/;"	l
c0109d8a	obj/kernel.asm	/^c0109d8a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109d8d	obj/kernel.asm	/^c0109d8d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109d91	obj/kernel.asm	/^c0109d91:	74 05                	je     c0109d98 <sysfile_write+0x156>$/;"	l
c0109d93	obj/kernel.asm	/^c0109d93:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109d96	obj/kernel.asm	/^c0109d96:	eb 03                	jmp    c0109d9b <sysfile_write+0x159>$/;"	l
c0109d98	obj/kernel.asm	/^c0109d98:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109d9b	obj/kernel.asm	/^c0109d9b:	c9                   	leave  $/;"	l
c0109d9c	obj/kernel.asm	/^c0109d9c:	c3                   	ret    $/;"	l
c0109d9d	obj/kernel.asm	/^c0109d9d <sysfile_seek>:$/;"	l
c0109d9d	obj/kernel.asm	/^c0109d9d:	55                   	push   %ebp$/;"	l
c0109d9e	obj/kernel.asm	/^c0109d9e:	89 e5                	mov    %esp,%ebp$/;"	l
c0109da0	obj/kernel.asm	/^c0109da0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109da3	obj/kernel.asm	/^c0109da3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109da6	obj/kernel.asm	/^c0109da6:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0109da9	obj/kernel.asm	/^c0109da9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109dac	obj/kernel.asm	/^c0109dac:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109daf	obj/kernel.asm	/^c0109daf:	e8 fa 0c 00 00       	call   c010aaae <file_seek>$/;"	l
c0109db4	obj/kernel.asm	/^c0109db4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109db7	obj/kernel.asm	/^c0109db7:	c9                   	leave  $/;"	l
c0109db8	obj/kernel.asm	/^c0109db8:	c3                   	ret    $/;"	l
c0109db9	obj/kernel.asm	/^c0109db9 <sysfile_fstat>:$/;"	l
c0109db9	obj/kernel.asm	/^c0109db9:	55                   	push   %ebp$/;"	l
c0109dba	obj/kernel.asm	/^c0109dba:	89 e5                	mov    %esp,%ebp$/;"	l
c0109dbc	obj/kernel.asm	/^c0109dbc:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109dbf	obj/kernel.asm	/^c0109dbf:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c0109dc4	obj/kernel.asm	/^c0109dc4:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109dc7	obj/kernel.asm	/^c0109dc7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109dca	obj/kernel.asm	/^c0109dca:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0109dcd	obj/kernel.asm	/^c0109dcd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109dd0	obj/kernel.asm	/^c0109dd0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109dd3	obj/kernel.asm	/^c0109dd3:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109dd6	obj/kernel.asm	/^c0109dd6:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109dd9	obj/kernel.asm	/^c0109dd9:	e8 61 0e 00 00       	call   c010ac3f <file_fstat>$/;"	l
c0109dde	obj/kernel.asm	/^c0109dde:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109de1	obj/kernel.asm	/^c0109de1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109de4	obj/kernel.asm	/^c0109de4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109de8	obj/kernel.asm	/^c0109de8:	74 05                	je     c0109def <sysfile_fstat+0x36>$/;"	l
c0109dea	obj/kernel.asm	/^c0109dea:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109ded	obj/kernel.asm	/^c0109ded:	eb 3d                	jmp    c0109e2c <sysfile_fstat+0x73>$/;"	l
c0109def	obj/kernel.asm	/^c0109def:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109df2	obj/kernel.asm	/^c0109df2:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109df5	obj/kernel.asm	/^c0109df5:	e8 93 fb ff ff       	call   c010998d <lock_mm>$/;"	l
c0109dfa	obj/kernel.asm	/^c0109dfa:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109dfd	obj/kernel.asm	/^c0109dfd:	6a 10                	push   $0x10$/;"	l
c0109dff	obj/kernel.asm	/^c0109dff:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109e02	obj/kernel.asm	/^c0109e02:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109e05	obj/kernel.asm	/^c0109e05:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109e08	obj/kernel.asm	/^c0109e08:	e8 46 bb ff ff       	call   c0105953 <copy_to_user>$/;"	l
c0109e0d	obj/kernel.asm	/^c0109e0d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e10	obj/kernel.asm	/^c0109e10:	85 c0                	test   %eax,%eax$/;"	l
c0109e12	obj/kernel.asm	/^c0109e12:	75 07                	jne    c0109e1b <sysfile_fstat+0x62>$/;"	l
c0109e14	obj/kernel.asm	/^c0109e14:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0109e1b	obj/kernel.asm	/^c0109e1b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109e1e	obj/kernel.asm	/^c0109e1e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109e21	obj/kernel.asm	/^c0109e21:	e8 9e fb ff ff       	call   c01099c4 <unlock_mm>$/;"	l
c0109e26	obj/kernel.asm	/^c0109e26:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e29	obj/kernel.asm	/^c0109e29:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109e2c	obj/kernel.asm	/^c0109e2c:	c9                   	leave  $/;"	l
c0109e2d	obj/kernel.asm	/^c0109e2d:	c3                   	ret    $/;"	l
c0109e2e	obj/kernel.asm	/^c0109e2e <sysfile_fsync>:$/;"	l
c0109e2e	obj/kernel.asm	/^c0109e2e:	55                   	push   %ebp$/;"	l
c0109e2f	obj/kernel.asm	/^c0109e2f:	89 e5                	mov    %esp,%ebp$/;"	l
c0109e31	obj/kernel.asm	/^c0109e31:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109e34	obj/kernel.asm	/^c0109e34:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109e37	obj/kernel.asm	/^c0109e37:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109e3a	obj/kernel.asm	/^c0109e3a:	e8 bc 0e 00 00       	call   c010acfb <file_fsync>$/;"	l
c0109e3f	obj/kernel.asm	/^c0109e3f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e42	obj/kernel.asm	/^c0109e42:	c9                   	leave  $/;"	l
c0109e43	obj/kernel.asm	/^c0109e43:	c3                   	ret    $/;"	l
c0109e44	obj/kernel.asm	/^c0109e44 <sysfile_chdir>:$/;"	l
c0109e44	obj/kernel.asm	/^c0109e44:	55                   	push   %ebp$/;"	l
c0109e45	obj/kernel.asm	/^c0109e45:	89 e5                	mov    %esp,%ebp$/;"	l
c0109e47	obj/kernel.asm	/^c0109e47:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109e4a	obj/kernel.asm	/^c0109e4a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109e4d	obj/kernel.asm	/^c0109e4d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109e50	obj/kernel.asm	/^c0109e50:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0109e53	obj/kernel.asm	/^c0109e53:	50                   	push   %eax$/;"	l
c0109e54	obj/kernel.asm	/^c0109e54:	e8 95 fb ff ff       	call   c01099ee <copy_path>$/;"	l
c0109e59	obj/kernel.asm	/^c0109e59:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e5c	obj/kernel.asm	/^c0109e5c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109e5f	obj/kernel.asm	/^c0109e5f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109e63	obj/kernel.asm	/^c0109e63:	74 05                	je     c0109e6a <sysfile_chdir+0x26>$/;"	l
c0109e65	obj/kernel.asm	/^c0109e65:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109e68	obj/kernel.asm	/^c0109e68:	eb 24                	jmp    c0109e8e <sysfile_chdir+0x4a>$/;"	l
c0109e6a	obj/kernel.asm	/^c0109e6a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109e6d	obj/kernel.asm	/^c0109e6d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109e70	obj/kernel.asm	/^c0109e70:	50                   	push   %eax$/;"	l
c0109e71	obj/kernel.asm	/^c0109e71:	e8 18 47 00 00       	call   c010e58e <vfs_chdir>$/;"	l
c0109e76	obj/kernel.asm	/^c0109e76:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e79	obj/kernel.asm	/^c0109e79:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109e7c	obj/kernel.asm	/^c0109e7c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109e7f	obj/kernel.asm	/^c0109e7f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109e82	obj/kernel.asm	/^c0109e82:	50                   	push   %eax$/;"	l
c0109e83	obj/kernel.asm	/^c0109e83:	e8 2f d6 ff ff       	call   c01074b7 <kfree>$/;"	l
c0109e88	obj/kernel.asm	/^c0109e88:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e8b	obj/kernel.asm	/^c0109e8b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109e8e	obj/kernel.asm	/^c0109e8e:	c9                   	leave  $/;"	l
c0109e8f	obj/kernel.asm	/^c0109e8f:	c3                   	ret    $/;"	l
c0109e90	obj/kernel.asm	/^c0109e90 <sysfile_link>:$/;"	l
c0109e90	obj/kernel.asm	/^c0109e90:	55                   	push   %ebp$/;"	l
c0109e91	obj/kernel.asm	/^c0109e91:	89 e5                	mov    %esp,%ebp$/;"	l
c0109e93	obj/kernel.asm	/^c0109e93:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109e96	obj/kernel.asm	/^c0109e96:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109e99	obj/kernel.asm	/^c0109e99:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109e9c	obj/kernel.asm	/^c0109e9c:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0109e9f	obj/kernel.asm	/^c0109e9f:	50                   	push   %eax$/;"	l
c0109ea0	obj/kernel.asm	/^c0109ea0:	e8 49 fb ff ff       	call   c01099ee <copy_path>$/;"	l
c0109ea5	obj/kernel.asm	/^c0109ea5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ea8	obj/kernel.asm	/^c0109ea8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109eab	obj/kernel.asm	/^c0109eab:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109eaf	obj/kernel.asm	/^c0109eaf:	74 05                	je     c0109eb6 <sysfile_link+0x26>$/;"	l
c0109eb1	obj/kernel.asm	/^c0109eb1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109eb4	obj/kernel.asm	/^c0109eb4:	eb 66                	jmp    c0109f1c <sysfile_link+0x8c>$/;"	l
c0109eb6	obj/kernel.asm	/^c0109eb6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109eb9	obj/kernel.asm	/^c0109eb9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109ebc	obj/kernel.asm	/^c0109ebc:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0109ebf	obj/kernel.asm	/^c0109ebf:	50                   	push   %eax$/;"	l
c0109ec0	obj/kernel.asm	/^c0109ec0:	e8 29 fb ff ff       	call   c01099ee <copy_path>$/;"	l
c0109ec5	obj/kernel.asm	/^c0109ec5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ec8	obj/kernel.asm	/^c0109ec8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109ecb	obj/kernel.asm	/^c0109ecb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109ecf	obj/kernel.asm	/^c0109ecf:	74 14                	je     c0109ee5 <sysfile_link+0x55>$/;"	l
c0109ed1	obj/kernel.asm	/^c0109ed1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109ed4	obj/kernel.asm	/^c0109ed4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109ed7	obj/kernel.asm	/^c0109ed7:	50                   	push   %eax$/;"	l
c0109ed8	obj/kernel.asm	/^c0109ed8:	e8 da d5 ff ff       	call   c01074b7 <kfree>$/;"	l
c0109edd	obj/kernel.asm	/^c0109edd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ee0	obj/kernel.asm	/^c0109ee0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109ee3	obj/kernel.asm	/^c0109ee3:	eb 37                	jmp    c0109f1c <sysfile_link+0x8c>$/;"	l
c0109ee5	obj/kernel.asm	/^c0109ee5:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109ee8	obj/kernel.asm	/^c0109ee8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109eeb	obj/kernel.asm	/^c0109eeb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109eee	obj/kernel.asm	/^c0109eee:	52                   	push   %edx$/;"	l
c0109eef	obj/kernel.asm	/^c0109eef:	50                   	push   %eax$/;"	l
c0109ef0	obj/kernel.asm	/^c0109ef0:	e8 20 51 00 00       	call   c010f015 <vfs_link>$/;"	l
c0109ef5	obj/kernel.asm	/^c0109ef5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ef8	obj/kernel.asm	/^c0109ef8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109efb	obj/kernel.asm	/^c0109efb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109efe	obj/kernel.asm	/^c0109efe:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109f01	obj/kernel.asm	/^c0109f01:	50                   	push   %eax$/;"	l
c0109f02	obj/kernel.asm	/^c0109f02:	e8 b0 d5 ff ff       	call   c01074b7 <kfree>$/;"	l
c0109f07	obj/kernel.asm	/^c0109f07:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f0a	obj/kernel.asm	/^c0109f0a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109f0d	obj/kernel.asm	/^c0109f0d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109f10	obj/kernel.asm	/^c0109f10:	50                   	push   %eax$/;"	l
c0109f11	obj/kernel.asm	/^c0109f11:	e8 a1 d5 ff ff       	call   c01074b7 <kfree>$/;"	l
c0109f16	obj/kernel.asm	/^c0109f16:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f19	obj/kernel.asm	/^c0109f19:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109f1c	obj/kernel.asm	/^c0109f1c:	c9                   	leave  $/;"	l
c0109f1d	obj/kernel.asm	/^c0109f1d:	c3                   	ret    $/;"	l
c0109f1e	obj/kernel.asm	/^c0109f1e <sysfile_rename>:$/;"	l
c0109f1e	obj/kernel.asm	/^c0109f1e:	55                   	push   %ebp$/;"	l
c0109f1f	obj/kernel.asm	/^c0109f1f:	89 e5                	mov    %esp,%ebp$/;"	l
c0109f21	obj/kernel.asm	/^c0109f21:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109f24	obj/kernel.asm	/^c0109f24:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109f27	obj/kernel.asm	/^c0109f27:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109f2a	obj/kernel.asm	/^c0109f2a:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0109f2d	obj/kernel.asm	/^c0109f2d:	50                   	push   %eax$/;"	l
c0109f2e	obj/kernel.asm	/^c0109f2e:	e8 bb fa ff ff       	call   c01099ee <copy_path>$/;"	l
c0109f33	obj/kernel.asm	/^c0109f33:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f36	obj/kernel.asm	/^c0109f36:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109f39	obj/kernel.asm	/^c0109f39:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109f3d	obj/kernel.asm	/^c0109f3d:	74 05                	je     c0109f44 <sysfile_rename+0x26>$/;"	l
c0109f3f	obj/kernel.asm	/^c0109f3f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109f42	obj/kernel.asm	/^c0109f42:	eb 66                	jmp    c0109faa <sysfile_rename+0x8c>$/;"	l
c0109f44	obj/kernel.asm	/^c0109f44:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109f47	obj/kernel.asm	/^c0109f47:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109f4a	obj/kernel.asm	/^c0109f4a:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0109f4d	obj/kernel.asm	/^c0109f4d:	50                   	push   %eax$/;"	l
c0109f4e	obj/kernel.asm	/^c0109f4e:	e8 9b fa ff ff       	call   c01099ee <copy_path>$/;"	l
c0109f53	obj/kernel.asm	/^c0109f53:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f56	obj/kernel.asm	/^c0109f56:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109f59	obj/kernel.asm	/^c0109f59:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109f5d	obj/kernel.asm	/^c0109f5d:	74 14                	je     c0109f73 <sysfile_rename+0x55>$/;"	l
c0109f5f	obj/kernel.asm	/^c0109f5f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109f62	obj/kernel.asm	/^c0109f62:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109f65	obj/kernel.asm	/^c0109f65:	50                   	push   %eax$/;"	l
c0109f66	obj/kernel.asm	/^c0109f66:	e8 4c d5 ff ff       	call   c01074b7 <kfree>$/;"	l
c0109f6b	obj/kernel.asm	/^c0109f6b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f6e	obj/kernel.asm	/^c0109f6e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109f71	obj/kernel.asm	/^c0109f71:	eb 37                	jmp    c0109faa <sysfile_rename+0x8c>$/;"	l
c0109f73	obj/kernel.asm	/^c0109f73:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109f76	obj/kernel.asm	/^c0109f76:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109f79	obj/kernel.asm	/^c0109f79:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109f7c	obj/kernel.asm	/^c0109f7c:	52                   	push   %edx$/;"	l
c0109f7d	obj/kernel.asm	/^c0109f7d:	50                   	push   %eax$/;"	l
c0109f7e	obj/kernel.asm	/^c0109f7e:	e8 88 50 00 00       	call   c010f00b <vfs_rename>$/;"	l
c0109f83	obj/kernel.asm	/^c0109f83:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f86	obj/kernel.asm	/^c0109f86:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109f89	obj/kernel.asm	/^c0109f89:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109f8c	obj/kernel.asm	/^c0109f8c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109f8f	obj/kernel.asm	/^c0109f8f:	50                   	push   %eax$/;"	l
c0109f90	obj/kernel.asm	/^c0109f90:	e8 22 d5 ff ff       	call   c01074b7 <kfree>$/;"	l
c0109f95	obj/kernel.asm	/^c0109f95:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f98	obj/kernel.asm	/^c0109f98:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109f9b	obj/kernel.asm	/^c0109f9b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109f9e	obj/kernel.asm	/^c0109f9e:	50                   	push   %eax$/;"	l
c0109f9f	obj/kernel.asm	/^c0109f9f:	e8 13 d5 ff ff       	call   c01074b7 <kfree>$/;"	l
c0109fa4	obj/kernel.asm	/^c0109fa4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109fa7	obj/kernel.asm	/^c0109fa7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109faa	obj/kernel.asm	/^c0109faa:	c9                   	leave  $/;"	l
c0109fab	obj/kernel.asm	/^c0109fab:	c3                   	ret    $/;"	l
c0109fac	obj/kernel.asm	/^c0109fac <sysfile_unlink>:$/;"	l
c0109fac	obj/kernel.asm	/^c0109fac:	55                   	push   %ebp$/;"	l
c0109fad	obj/kernel.asm	/^c0109fad:	89 e5                	mov    %esp,%ebp$/;"	l
c0109faf	obj/kernel.asm	/^c0109faf:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109fb2	obj/kernel.asm	/^c0109fb2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109fb5	obj/kernel.asm	/^c0109fb5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109fb8	obj/kernel.asm	/^c0109fb8:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0109fbb	obj/kernel.asm	/^c0109fbb:	50                   	push   %eax$/;"	l
c0109fbc	obj/kernel.asm	/^c0109fbc:	e8 2d fa ff ff       	call   c01099ee <copy_path>$/;"	l
c0109fc1	obj/kernel.asm	/^c0109fc1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109fc4	obj/kernel.asm	/^c0109fc4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109fc7	obj/kernel.asm	/^c0109fc7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109fcb	obj/kernel.asm	/^c0109fcb:	74 05                	je     c0109fd2 <sysfile_unlink+0x26>$/;"	l
c0109fcd	obj/kernel.asm	/^c0109fcd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109fd0	obj/kernel.asm	/^c0109fd0:	eb 24                	jmp    c0109ff6 <sysfile_unlink+0x4a>$/;"	l
c0109fd2	obj/kernel.asm	/^c0109fd2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109fd5	obj/kernel.asm	/^c0109fd5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109fd8	obj/kernel.asm	/^c0109fd8:	50                   	push   %eax$/;"	l
c0109fd9	obj/kernel.asm	/^c0109fd9:	e8 23 50 00 00       	call   c010f001 <vfs_unlink>$/;"	l
c0109fde	obj/kernel.asm	/^c0109fde:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109fe1	obj/kernel.asm	/^c0109fe1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109fe4	obj/kernel.asm	/^c0109fe4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109fe7	obj/kernel.asm	/^c0109fe7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109fea	obj/kernel.asm	/^c0109fea:	50                   	push   %eax$/;"	l
c0109feb	obj/kernel.asm	/^c0109feb:	e8 c7 d4 ff ff       	call   c01074b7 <kfree>$/;"	l
c0109ff0	obj/kernel.asm	/^c0109ff0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ff3	obj/kernel.asm	/^c0109ff3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109ff6	obj/kernel.asm	/^c0109ff6:	c9                   	leave  $/;"	l
c0109ff7	obj/kernel.asm	/^c0109ff7:	c3                   	ret    $/;"	l
c0109ff8	obj/kernel.asm	/^c0109ff8 <sysfile_getcwd>:$/;"	l
c0109ff8	obj/kernel.asm	/^c0109ff8:	55                   	push   %ebp$/;"	l
c0109ff9	obj/kernel.asm	/^c0109ff9:	89 e5                	mov    %esp,%ebp$/;"	l
c0109ffb	obj/kernel.asm	/^c0109ffb:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109ffe	obj/kernel.asm	/^c0109ffe:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010a003	obj/kernel.asm	/^c010a003:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a006	obj/kernel.asm	/^c010a006:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a009	obj/kernel.asm	/^c010a009:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010a00d	obj/kernel.asm	/^c010a00d:	75 07                	jne    c010a016 <sysfile_getcwd+0x1e>$/;"	l
c010a00f	obj/kernel.asm	/^c010a00f:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a014	obj/kernel.asm	/^c010a014:	eb 66                	jmp    c010a07c <sysfile_getcwd+0x84>$/;"	l
c010a016	obj/kernel.asm	/^c010a016:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010a01d	obj/kernel.asm	/^c010a01d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a020	obj/kernel.asm	/^c010a020:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a023	obj/kernel.asm	/^c010a023:	e8 65 f9 ff ff       	call   c010998d <lock_mm>$/;"	l
c010a028	obj/kernel.asm	/^c010a028:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a02b	obj/kernel.asm	/^c010a02b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a02e	obj/kernel.asm	/^c010a02e:	6a 01                	push   $0x1$/;"	l
c010a030	obj/kernel.asm	/^c010a030:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010a033	obj/kernel.asm	/^c010a033:	50                   	push   %eax$/;"	l
c010a034	obj/kernel.asm	/^c010a034:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a037	obj/kernel.asm	/^c010a037:	e8 b5 c1 ff ff       	call   c01061f1 <user_mem_check>$/;"	l
c010a03c	obj/kernel.asm	/^c010a03c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a03f	obj/kernel.asm	/^c010a03f:	85 c0                	test   %eax,%eax$/;"	l
c010a041	obj/kernel.asm	/^c010a041:	74 28                	je     c010a06b <sysfile_getcwd+0x73>$/;"	l
c010a043	obj/kernel.asm	/^c010a043:	6a 00                	push   $0x0$/;"	l
c010a045	obj/kernel.asm	/^c010a045:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010a048	obj/kernel.asm	/^c010a048:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a04b	obj/kernel.asm	/^c010a04b:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010a04e	obj/kernel.asm	/^c010a04e:	50                   	push   %eax$/;"	l
c010a04f	obj/kernel.asm	/^c010a04f:	e8 c4 0e 00 00       	call   c010af18 <iobuf_init>$/;"	l
c010a054	obj/kernel.asm	/^c010a054:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a057	obj/kernel.asm	/^c010a057:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a05a	obj/kernel.asm	/^c010a05a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a05d	obj/kernel.asm	/^c010a05d:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010a060	obj/kernel.asm	/^c010a060:	e8 70 45 00 00       	call   c010e5d5 <vfs_getcwd>$/;"	l
c010a065	obj/kernel.asm	/^c010a065:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a068	obj/kernel.asm	/^c010a068:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a06b	obj/kernel.asm	/^c010a06b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a06e	obj/kernel.asm	/^c010a06e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a071	obj/kernel.asm	/^c010a071:	e8 4e f9 ff ff       	call   c01099c4 <unlock_mm>$/;"	l
c010a076	obj/kernel.asm	/^c010a076:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a079	obj/kernel.asm	/^c010a079:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a07c	obj/kernel.asm	/^c010a07c:	c9                   	leave  $/;"	l
c010a07d	obj/kernel.asm	/^c010a07d:	c3                   	ret    $/;"	l
c010a07e	obj/kernel.asm	/^c010a07e <sysfile_getdirentry>:$/;"	l
c010a07e	obj/kernel.asm	/^c010a07e:	55                   	push   %ebp$/;"	l
c010a07f	obj/kernel.asm	/^c010a07f:	89 e5                	mov    %esp,%ebp$/;"	l
c010a081	obj/kernel.asm	/^c010a081:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a084	obj/kernel.asm	/^c010a084:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010a089	obj/kernel.asm	/^c010a089:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a08c	obj/kernel.asm	/^c010a08c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a08f	obj/kernel.asm	/^c010a08f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a092	obj/kernel.asm	/^c010a092:	68 04 01 00 00       	push   $0x104$/;"	l
c010a097	obj/kernel.asm	/^c010a097:	e8 03 d4 ff ff       	call   c010749f <kmalloc>$/;"	l
c010a09c	obj/kernel.asm	/^c010a09c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a09f	obj/kernel.asm	/^c010a09f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a0a2	obj/kernel.asm	/^c010a0a2:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a0a6	obj/kernel.asm	/^c010a0a6:	75 0a                	jne    c010a0b2 <sysfile_getdirentry+0x34>$/;"	l
c010a0a8	obj/kernel.asm	/^c010a0a8:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010a0ad	obj/kernel.asm	/^c010a0ad:	e9 b6 00 00 00       	jmp    c010a168 <sysfile_getdirentry+0xea>$/;"	l
c010a0b2	obj/kernel.asm	/^c010a0b2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010a0b9	obj/kernel.asm	/^c010a0b9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a0bc	obj/kernel.asm	/^c010a0bc:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a0bf	obj/kernel.asm	/^c010a0bf:	e8 c9 f8 ff ff       	call   c010998d <lock_mm>$/;"	l
c010a0c4	obj/kernel.asm	/^c010a0c4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a0c7	obj/kernel.asm	/^c010a0c7:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010a0ca	obj/kernel.asm	/^c010a0ca:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a0cd	obj/kernel.asm	/^c010a0cd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a0d0	obj/kernel.asm	/^c010a0d0:	6a 01                	push   $0x1$/;"	l
c010a0d2	obj/kernel.asm	/^c010a0d2:	6a 04                	push   $0x4$/;"	l
c010a0d4	obj/kernel.asm	/^c010a0d4:	52                   	push   %edx$/;"	l
c010a0d5	obj/kernel.asm	/^c010a0d5:	50                   	push   %eax$/;"	l
c010a0d6	obj/kernel.asm	/^c010a0d6:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a0d9	obj/kernel.asm	/^c010a0d9:	e8 34 b8 ff ff       	call   c0105912 <copy_from_user>$/;"	l
c010a0de	obj/kernel.asm	/^c010a0de:	83 c4 20             	add    $0x20,%esp$/;"	l
c010a0e1	obj/kernel.asm	/^c010a0e1:	85 c0                	test   %eax,%eax$/;"	l
c010a0e3	obj/kernel.asm	/^c010a0e3:	75 07                	jne    c010a0ec <sysfile_getdirentry+0x6e>$/;"	l
c010a0e5	obj/kernel.asm	/^c010a0e5:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010a0ec	obj/kernel.asm	/^c010a0ec:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a0ef	obj/kernel.asm	/^c010a0ef:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a0f2	obj/kernel.asm	/^c010a0f2:	e8 cd f8 ff ff       	call   c01099c4 <unlock_mm>$/;"	l
c010a0f7	obj/kernel.asm	/^c010a0f7:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a0fa	obj/kernel.asm	/^c010a0fa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a0fe	obj/kernel.asm	/^c010a0fe:	75 57                	jne    c010a157 <sysfile_getdirentry+0xd9>$/;"	l
c010a100	obj/kernel.asm	/^c010a100:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a103	obj/kernel.asm	/^c010a103:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010a106	obj/kernel.asm	/^c010a106:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a109	obj/kernel.asm	/^c010a109:	e8 a6 0c 00 00       	call   c010adb4 <file_getdirentry>$/;"	l
c010a10e	obj/kernel.asm	/^c010a10e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a111	obj/kernel.asm	/^c010a111:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a114	obj/kernel.asm	/^c010a114:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a118	obj/kernel.asm	/^c010a118:	75 3d                	jne    c010a157 <sysfile_getdirentry+0xd9>$/;"	l
c010a11a	obj/kernel.asm	/^c010a11a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a11d	obj/kernel.asm	/^c010a11d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a120	obj/kernel.asm	/^c010a120:	e8 68 f8 ff ff       	call   c010998d <lock_mm>$/;"	l
c010a125	obj/kernel.asm	/^c010a125:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a128	obj/kernel.asm	/^c010a128:	68 04 01 00 00       	push   $0x104$/;"	l
c010a12d	obj/kernel.asm	/^c010a12d:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010a130	obj/kernel.asm	/^c010a130:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010a133	obj/kernel.asm	/^c010a133:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a136	obj/kernel.asm	/^c010a136:	e8 18 b8 ff ff       	call   c0105953 <copy_to_user>$/;"	l
c010a13b	obj/kernel.asm	/^c010a13b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a13e	obj/kernel.asm	/^c010a13e:	85 c0                	test   %eax,%eax$/;"	l
c010a140	obj/kernel.asm	/^c010a140:	75 07                	jne    c010a149 <sysfile_getdirentry+0xcb>$/;"	l
c010a142	obj/kernel.asm	/^c010a142:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010a149	obj/kernel.asm	/^c010a149:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a14c	obj/kernel.asm	/^c010a14c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a14f	obj/kernel.asm	/^c010a14f:	e8 70 f8 ff ff       	call   c01099c4 <unlock_mm>$/;"	l
c010a154	obj/kernel.asm	/^c010a154:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a157	obj/kernel.asm	/^c010a157:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a15a	obj/kernel.asm	/^c010a15a:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010a15d	obj/kernel.asm	/^c010a15d:	e8 55 d3 ff ff       	call   c01074b7 <kfree>$/;"	l
c010a162	obj/kernel.asm	/^c010a162:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a165	obj/kernel.asm	/^c010a165:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a168	obj/kernel.asm	/^c010a168:	c9                   	leave  $/;"	l
c010a169	obj/kernel.asm	/^c010a169:	c3                   	ret    $/;"	l
c010a16a	obj/kernel.asm	/^c010a16a <sysfile_dup>:$/;"	l
c010a16a	obj/kernel.asm	/^c010a16a:	55                   	push   %ebp$/;"	l
c010a16b	obj/kernel.asm	/^c010a16b:	89 e5                	mov    %esp,%ebp$/;"	l
c010a16d	obj/kernel.asm	/^c010a16d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a170	obj/kernel.asm	/^c010a170:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a173	obj/kernel.asm	/^c010a173:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010a176	obj/kernel.asm	/^c010a176:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a179	obj/kernel.asm	/^c010a179:	e8 39 0d 00 00       	call   c010aeb7 <file_dup>$/;"	l
c010a17e	obj/kernel.asm	/^c010a17e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a181	obj/kernel.asm	/^c010a181:	c9                   	leave  $/;"	l
c010a182	obj/kernel.asm	/^c010a182:	c3                   	ret    $/;"	l
c010a183	obj/kernel.asm	/^c010a183 <sysfile_pipe>:$/;"	l
c010a183	obj/kernel.asm	/^c010a183:	55                   	push   %ebp$/;"	l
c010a184	obj/kernel.asm	/^c010a184:	89 e5                	mov    %esp,%ebp$/;"	l
c010a186	obj/kernel.asm	/^c010a186:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010a18b	obj/kernel.asm	/^c010a18b:	5d                   	pop    %ebp$/;"	l
c010a18c	obj/kernel.asm	/^c010a18c:	c3                   	ret    $/;"	l
c010a18d	obj/kernel.asm	/^c010a18d <sysfile_mkfifo>:$/;"	l
c010a18d	obj/kernel.asm	/^c010a18d:	55                   	push   %ebp$/;"	l
c010a18e	obj/kernel.asm	/^c010a18e:	89 e5                	mov    %esp,%ebp$/;"	l
c010a190	obj/kernel.asm	/^c010a190:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010a195	obj/kernel.asm	/^c010a195:	5d                   	pop    %ebp$/;"	l
c010a196	obj/kernel.asm	/^c010a196:	c3                   	ret    $/;"	l
c010a197	obj/kernel.asm	/^c010a197 <files_count>:$/;"	l
c010a197	obj/kernel.asm	/^c010a197:	55                   	push   %ebp$/;"	l
c010a198	obj/kernel.asm	/^c010a198:	89 e5                	mov    %esp,%ebp$/;"	l
c010a19a	obj/kernel.asm	/^c010a19a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a19d	obj/kernel.asm	/^c010a19d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a1a0	obj/kernel.asm	/^c010a1a0:	5d                   	pop    %ebp$/;"	l
c010a1a1	obj/kernel.asm	/^c010a1a1:	c3                   	ret    $/;"	l
c010a1a2	obj/kernel.asm	/^c010a1a2 <fopen_count>:$/;"	l
c010a1a2	obj/kernel.asm	/^c010a1a2:	55                   	push   %ebp$/;"	l
c010a1a3	obj/kernel.asm	/^c010a1a3:	89 e5                	mov    %esp,%ebp$/;"	l
c010a1a5	obj/kernel.asm	/^c010a1a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a1a8	obj/kernel.asm	/^c010a1a8:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a1ab	obj/kernel.asm	/^c010a1ab:	5d                   	pop    %ebp$/;"	l
c010a1ac	obj/kernel.asm	/^c010a1ac:	c3                   	ret    $/;"	l
c010a1ad	obj/kernel.asm	/^c010a1ad <fopen_count_inc>:$/;"	l
c010a1ad	obj/kernel.asm	/^c010a1ad:	55                   	push   %ebp$/;"	l
c010a1ae	obj/kernel.asm	/^c010a1ae:	89 e5                	mov    %esp,%ebp$/;"	l
c010a1b0	obj/kernel.asm	/^c010a1b0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a1b3	obj/kernel.asm	/^c010a1b3:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a1b6	obj/kernel.asm	/^c010a1b6:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010a1b9	obj/kernel.asm	/^c010a1b9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a1bc	obj/kernel.asm	/^c010a1bc:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010a1bf	obj/kernel.asm	/^c010a1bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a1c2	obj/kernel.asm	/^c010a1c2:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a1c5	obj/kernel.asm	/^c010a1c5:	5d                   	pop    %ebp$/;"	l
c010a1c6	obj/kernel.asm	/^c010a1c6:	c3                   	ret    $/;"	l
c010a1c7	obj/kernel.asm	/^c010a1c7 <fopen_count_dec>:$/;"	l
c010a1c7	obj/kernel.asm	/^c010a1c7:	55                   	push   %ebp$/;"	l
c010a1c8	obj/kernel.asm	/^c010a1c8:	89 e5                	mov    %esp,%ebp$/;"	l
c010a1ca	obj/kernel.asm	/^c010a1ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a1cd	obj/kernel.asm	/^c010a1cd:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a1d0	obj/kernel.asm	/^c010a1d0:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010a1d3	obj/kernel.asm	/^c010a1d3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a1d6	obj/kernel.asm	/^c010a1d6:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010a1d9	obj/kernel.asm	/^c010a1d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a1dc	obj/kernel.asm	/^c010a1dc:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a1df	obj/kernel.asm	/^c010a1df:	5d                   	pop    %ebp$/;"	l
c010a1e0	obj/kernel.asm	/^c010a1e0:	c3                   	ret    $/;"	l
c010a1e1	obj/kernel.asm	/^c010a1e1 <get_fd_array>:$/;"	l
c010a1e1	obj/kernel.asm	/^c010a1e1:	55                   	push   %ebp$/;"	l
c010a1e2	obj/kernel.asm	/^c010a1e2:	89 e5                	mov    %esp,%ebp$/;"	l
c010a1e4	obj/kernel.asm	/^c010a1e4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a1e7	obj/kernel.asm	/^c010a1e7:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010a1ec	obj/kernel.asm	/^c010a1ec:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010a1f2	obj/kernel.asm	/^c010a1f2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a1f5	obj/kernel.asm	/^c010a1f5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a1f9	obj/kernel.asm	/^c010a1f9:	74 0f                	je     c010a20a <get_fd_array+0x29>$/;"	l
c010a1fb	obj/kernel.asm	/^c010a1fb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a1fe	obj/kernel.asm	/^c010a1fe:	e8 94 ff ff ff       	call   c010a197 <files_count>$/;"	l
c010a203	obj/kernel.asm	/^c010a203:	83 c4 04             	add    $0x4,%esp$/;"	l
c010a206	obj/kernel.asm	/^c010a206:	85 c0                	test   %eax,%eax$/;"	l
c010a208	obj/kernel.asm	/^c010a208:	7f 16                	jg     c010a220 <get_fd_array+0x3f>$/;"	l
c010a20a	obj/kernel.asm	/^c010a20a:	68 0c 5d 11 c0       	push   $0xc0115d0c$/;"	l
c010a20f	obj/kernel.asm	/^c010a20f:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010a214	obj/kernel.asm	/^c010a214:	6a 14                	push   $0x14$/;"	l
c010a216	obj/kernel.asm	/^c010a216:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010a21b	obj/kernel.asm	/^c010a21b:	e8 af 62 ff ff       	call   c01004cf <__panic>$/;"	l
c010a220	obj/kernel.asm	/^c010a220:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a223	obj/kernel.asm	/^c010a223:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a226	obj/kernel.asm	/^c010a226:	c9                   	leave  $/;"	l
c010a227	obj/kernel.asm	/^c010a227:	c3                   	ret    $/;"	l
c010a228	obj/kernel.asm	/^c010a228 <fd_array_init>:$/;"	l
c010a228	obj/kernel.asm	/^c010a228:	55                   	push   %ebp$/;"	l
c010a229	obj/kernel.asm	/^c010a229:	89 e5                	mov    %esp,%ebp$/;"	l
c010a22b	obj/kernel.asm	/^c010a22b:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010a22e	obj/kernel.asm	/^c010a22e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a231	obj/kernel.asm	/^c010a231:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010a234	obj/kernel.asm	/^c010a234:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010a23b	obj/kernel.asm	/^c010a23b:	eb 24                	jmp    c010a261 <fd_array_init+0x39>$/;"	l
c010a23d	obj/kernel.asm	/^c010a23d:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010a240	obj/kernel.asm	/^c010a240:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010a247	obj/kernel.asm	/^c010a247:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010a24a	obj/kernel.asm	/^c010a24a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010a250	obj/kernel.asm	/^c010a250:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010a253	obj/kernel.asm	/^c010a253:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010a256	obj/kernel.asm	/^c010a256:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010a259	obj/kernel.asm	/^c010a259:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010a25d	obj/kernel.asm	/^c010a25d:	83 45 f8 1c          	addl   $0x1c,-0x8(%ebp)$/;"	l
c010a261	obj/kernel.asm	/^c010a261:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a264	obj/kernel.asm	/^c010a264:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010a269	obj/kernel.asm	/^c010a269:	76 d2                	jbe    c010a23d <fd_array_init+0x15>$/;"	l
c010a26b	obj/kernel.asm	/^c010a26b:	c9                   	leave  $/;"	l
c010a26c	obj/kernel.asm	/^c010a26c:	c3                   	ret    $/;"	l
c010a26d	obj/kernel.asm	/^c010a26d <fd_array_alloc>:$/;"	l
c010a26d	obj/kernel.asm	/^c010a26d:	55                   	push   %ebp$/;"	l
c010a26e	obj/kernel.asm	/^c010a26e:	89 e5                	mov    %esp,%ebp$/;"	l
c010a270	obj/kernel.asm	/^c010a270:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a273	obj/kernel.asm	/^c010a273:	e8 69 ff ff ff       	call   c010a1e1 <get_fd_array>$/;"	l
c010a278	obj/kernel.asm	/^c010a278:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a27b	obj/kernel.asm	/^c010a27b:	81 7d 08 d9 6a ff ff 	cmpl   $0xffff6ad9,0x8(%ebp)$/;"	l
c010a282	obj/kernel.asm	/^c010a282:	75 30                	jne    c010a2b4 <fd_array_alloc+0x47>$/;"	l
c010a284	obj/kernel.asm	/^c010a284:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)$/;"	l
c010a28b	obj/kernel.asm	/^c010a28b:	eb 13                	jmp    c010a2a0 <fd_array_alloc+0x33>$/;"	l
c010a28d	obj/kernel.asm	/^c010a28d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a290	obj/kernel.asm	/^c010a290:	8b 00                	mov    (%eax),%eax$/;"	l
c010a292	obj/kernel.asm	/^c010a292:	85 c0                	test   %eax,%eax$/;"	l
c010a294	obj/kernel.asm	/^c010a294:	75 02                	jne    c010a298 <fd_array_alloc+0x2b>$/;"	l
c010a296	obj/kernel.asm	/^c010a296:	eb 59                	jmp    c010a2f1 <fd_array_alloc+0x84>$/;"	l
c010a298	obj/kernel.asm	/^c010a298:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010a29c	obj/kernel.asm	/^c010a29c:	83 45 f4 1c          	addl   $0x1c,-0xc(%ebp)$/;"	l
c010a2a0	obj/kernel.asm	/^c010a2a0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a2a3	obj/kernel.asm	/^c010a2a3:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010a2a8	obj/kernel.asm	/^c010a2a8:	76 e3                	jbe    c010a28d <fd_array_alloc+0x20>$/;"	l
c010a2aa	obj/kernel.asm	/^c010a2aa:	b8 ea ff ff ff       	mov    $0xffffffea,%eax$/;"	l
c010a2af	obj/kernel.asm	/^c010a2af:	e9 85 00 00 00       	jmp    c010a339 <fd_array_alloc+0xcc>$/;"	l
c010a2b4	obj/kernel.asm	/^c010a2b4:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010a2b8	obj/kernel.asm	/^c010a2b8:	78 30                	js     c010a2ea <fd_array_alloc+0x7d>$/;"	l
c010a2ba	obj/kernel.asm	/^c010a2ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a2bd	obj/kernel.asm	/^c010a2bd:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010a2c2	obj/kernel.asm	/^c010a2c2:	77 26                	ja     c010a2ea <fd_array_alloc+0x7d>$/;"	l
c010a2c4	obj/kernel.asm	/^c010a2c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a2c7	obj/kernel.asm	/^c010a2c7:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a2ca	obj/kernel.asm	/^c010a2ca:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010a2d1	obj/kernel.asm	/^c010a2d1:	29 c2                	sub    %eax,%edx$/;"	l
c010a2d3	obj/kernel.asm	/^c010a2d3:	89 d0                	mov    %edx,%eax$/;"	l
c010a2d5	obj/kernel.asm	/^c010a2d5:	01 45 f4             	add    %eax,-0xc(%ebp)$/;"	l
c010a2d8	obj/kernel.asm	/^c010a2d8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a2db	obj/kernel.asm	/^c010a2db:	8b 00                	mov    (%eax),%eax$/;"	l
c010a2dd	obj/kernel.asm	/^c010a2dd:	85 c0                	test   %eax,%eax$/;"	l
c010a2df	obj/kernel.asm	/^c010a2df:	75 02                	jne    c010a2e3 <fd_array_alloc+0x76>$/;"	l
c010a2e1	obj/kernel.asm	/^c010a2e1:	eb 0e                	jmp    c010a2f1 <fd_array_alloc+0x84>$/;"	l
c010a2e3	obj/kernel.asm	/^c010a2e3:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax$/;"	l
c010a2e8	obj/kernel.asm	/^c010a2e8:	eb 4f                	jmp    c010a339 <fd_array_alloc+0xcc>$/;"	l
c010a2ea	obj/kernel.asm	/^c010a2ea:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a2ef	obj/kernel.asm	/^c010a2ef:	eb 48                	jmp    c010a339 <fd_array_alloc+0xcc>$/;"	l
c010a2f1	obj/kernel.asm	/^c010a2f1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a2f4	obj/kernel.asm	/^c010a2f4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a2f7	obj/kernel.asm	/^c010a2f7:	e8 a6 fe ff ff       	call   c010a1a2 <fopen_count>$/;"	l
c010a2fc	obj/kernel.asm	/^c010a2fc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a2ff	obj/kernel.asm	/^c010a2ff:	85 c0                	test   %eax,%eax$/;"	l
c010a301	obj/kernel.asm	/^c010a301:	74 16                	je     c010a319 <fd_array_alloc+0xac>$/;"	l
c010a303	obj/kernel.asm	/^c010a303:	68 5a 5d 11 c0       	push   $0xc0115d5a$/;"	l
c010a308	obj/kernel.asm	/^c010a308:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010a30d	obj/kernel.asm	/^c010a30d:	6a 3b                	push   $0x3b$/;"	l
c010a30f	obj/kernel.asm	/^c010a30f:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010a314	obj/kernel.asm	/^c010a314:	e8 b6 61 ff ff       	call   c01004cf <__panic>$/;"	l
c010a319	obj/kernel.asm	/^c010a319:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a31c	obj/kernel.asm	/^c010a31c:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010a322	obj/kernel.asm	/^c010a322:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a325	obj/kernel.asm	/^c010a325:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c010a32c	obj/kernel.asm	/^c010a32c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a32f	obj/kernel.asm	/^c010a32f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a332	obj/kernel.asm	/^c010a332:	89 10                	mov    %edx,(%eax)$/;"	l
c010a334	obj/kernel.asm	/^c010a334:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a339	obj/kernel.asm	/^c010a339:	c9                   	leave  $/;"	l
c010a33a	obj/kernel.asm	/^c010a33a:	c3                   	ret    $/;"	l
c010a33b	obj/kernel.asm	/^c010a33b <fd_array_free>:$/;"	l
c010a33b	obj/kernel.asm	/^c010a33b:	55                   	push   %ebp$/;"	l
c010a33c	obj/kernel.asm	/^c010a33c:	89 e5                	mov    %esp,%ebp$/;"	l
c010a33e	obj/kernel.asm	/^c010a33e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a341	obj/kernel.asm	/^c010a341:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a344	obj/kernel.asm	/^c010a344:	8b 00                	mov    (%eax),%eax$/;"	l
c010a346	obj/kernel.asm	/^c010a346:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a349	obj/kernel.asm	/^c010a349:	74 20                	je     c010a36b <fd_array_free+0x30>$/;"	l
c010a34b	obj/kernel.asm	/^c010a34b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a34e	obj/kernel.asm	/^c010a34e:	8b 00                	mov    (%eax),%eax$/;"	l
c010a350	obj/kernel.asm	/^c010a350:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a353	obj/kernel.asm	/^c010a353:	74 16                	je     c010a36b <fd_array_free+0x30>$/;"	l
c010a355	obj/kernel.asm	/^c010a355:	68 74 5d 11 c0       	push   $0xc0115d74$/;"	l
c010a35a	obj/kernel.asm	/^c010a35a:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010a35f	obj/kernel.asm	/^c010a35f:	6a 44                	push   $0x44$/;"	l
c010a361	obj/kernel.asm	/^c010a361:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010a366	obj/kernel.asm	/^c010a366:	e8 64 61 ff ff       	call   c01004cf <__panic>$/;"	l
c010a36b	obj/kernel.asm	/^c010a36b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a36e	obj/kernel.asm	/^c010a36e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a371	obj/kernel.asm	/^c010a371:	e8 2c fe ff ff       	call   c010a1a2 <fopen_count>$/;"	l
c010a376	obj/kernel.asm	/^c010a376:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a379	obj/kernel.asm	/^c010a379:	85 c0                	test   %eax,%eax$/;"	l
c010a37b	obj/kernel.asm	/^c010a37b:	74 16                	je     c010a393 <fd_array_free+0x58>$/;"	l
c010a37d	obj/kernel.asm	/^c010a37d:	68 5a 5d 11 c0       	push   $0xc0115d5a$/;"	l
c010a382	obj/kernel.asm	/^c010a382:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010a387	obj/kernel.asm	/^c010a387:	6a 45                	push   $0x45$/;"	l
c010a389	obj/kernel.asm	/^c010a389:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010a38e	obj/kernel.asm	/^c010a38e:	e8 3c 61 ff ff       	call   c01004cf <__panic>$/;"	l
c010a393	obj/kernel.asm	/^c010a393:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a396	obj/kernel.asm	/^c010a396:	8b 00                	mov    (%eax),%eax$/;"	l
c010a398	obj/kernel.asm	/^c010a398:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a39b	obj/kernel.asm	/^c010a39b:	75 12                	jne    c010a3af <fd_array_free+0x74>$/;"	l
c010a39d	obj/kernel.asm	/^c010a39d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3a0	obj/kernel.asm	/^c010a3a0:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a3a3	obj/kernel.asm	/^c010a3a3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a3a6	obj/kernel.asm	/^c010a3a6:	50                   	push   %eax$/;"	l
c010a3a7	obj/kernel.asm	/^c010a3a7:	e8 2c 4c 00 00       	call   c010efd8 <vfs_close>$/;"	l
c010a3ac	obj/kernel.asm	/^c010a3ac:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a3af	obj/kernel.asm	/^c010a3af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3b2	obj/kernel.asm	/^c010a3b2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010a3b8	obj/kernel.asm	/^c010a3b8:	c9                   	leave  $/;"	l
c010a3b9	obj/kernel.asm	/^c010a3b9:	c3                   	ret    $/;"	l
c010a3ba	obj/kernel.asm	/^c010a3ba <fd_array_acquire>:$/;"	l
c010a3ba	obj/kernel.asm	/^c010a3ba:	55                   	push   %ebp$/;"	l
c010a3bb	obj/kernel.asm	/^c010a3bb:	89 e5                	mov    %esp,%ebp$/;"	l
c010a3bd	obj/kernel.asm	/^c010a3bd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a3c0	obj/kernel.asm	/^c010a3c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3c3	obj/kernel.asm	/^c010a3c3:	8b 00                	mov    (%eax),%eax$/;"	l
c010a3c5	obj/kernel.asm	/^c010a3c5:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a3c8	obj/kernel.asm	/^c010a3c8:	74 16                	je     c010a3e0 <fd_array_acquire+0x26>$/;"	l
c010a3ca	obj/kernel.asm	/^c010a3ca:	68 a9 5d 11 c0       	push   $0xc0115da9$/;"	l
c010a3cf	obj/kernel.asm	/^c010a3cf:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010a3d4	obj/kernel.asm	/^c010a3d4:	6a 4e                	push   $0x4e$/;"	l
c010a3d6	obj/kernel.asm	/^c010a3d6:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010a3db	obj/kernel.asm	/^c010a3db:	e8 ef 60 ff ff       	call   c01004cf <__panic>$/;"	l
c010a3e0	obj/kernel.asm	/^c010a3e0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a3e3	obj/kernel.asm	/^c010a3e3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a3e6	obj/kernel.asm	/^c010a3e6:	e8 c2 fd ff ff       	call   c010a1ad <fopen_count_inc>$/;"	l
c010a3eb	obj/kernel.asm	/^c010a3eb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a3ee	obj/kernel.asm	/^c010a3ee:	c9                   	leave  $/;"	l
c010a3ef	obj/kernel.asm	/^c010a3ef:	c3                   	ret    $/;"	l
c010a3f0	obj/kernel.asm	/^c010a3f0 <fd_array_release>:$/;"	l
c010a3f0	obj/kernel.asm	/^c010a3f0:	55                   	push   %ebp$/;"	l
c010a3f1	obj/kernel.asm	/^c010a3f1:	89 e5                	mov    %esp,%ebp$/;"	l
c010a3f3	obj/kernel.asm	/^c010a3f3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a3f6	obj/kernel.asm	/^c010a3f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3f9	obj/kernel.asm	/^c010a3f9:	8b 00                	mov    (%eax),%eax$/;"	l
c010a3fb	obj/kernel.asm	/^c010a3fb:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a3fe	obj/kernel.asm	/^c010a3fe:	74 20                	je     c010a420 <fd_array_release+0x30>$/;"	l
c010a400	obj/kernel.asm	/^c010a400:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a403	obj/kernel.asm	/^c010a403:	8b 00                	mov    (%eax),%eax$/;"	l
c010a405	obj/kernel.asm	/^c010a405:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a408	obj/kernel.asm	/^c010a408:	74 16                	je     c010a420 <fd_array_release+0x30>$/;"	l
c010a40a	obj/kernel.asm	/^c010a40a:	68 c4 5d 11 c0       	push   $0xc0115dc4$/;"	l
c010a40f	obj/kernel.asm	/^c010a40f:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010a414	obj/kernel.asm	/^c010a414:	6a 55                	push   $0x55$/;"	l
c010a416	obj/kernel.asm	/^c010a416:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010a41b	obj/kernel.asm	/^c010a41b:	e8 af 60 ff ff       	call   c01004cf <__panic>$/;"	l
c010a420	obj/kernel.asm	/^c010a420:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a423	obj/kernel.asm	/^c010a423:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a426	obj/kernel.asm	/^c010a426:	e8 77 fd ff ff       	call   c010a1a2 <fopen_count>$/;"	l
c010a42b	obj/kernel.asm	/^c010a42b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a42e	obj/kernel.asm	/^c010a42e:	85 c0                	test   %eax,%eax$/;"	l
c010a430	obj/kernel.asm	/^c010a430:	7f 16                	jg     c010a448 <fd_array_release+0x58>$/;"	l
c010a432	obj/kernel.asm	/^c010a432:	68 fb 5d 11 c0       	push   $0xc0115dfb$/;"	l
c010a437	obj/kernel.asm	/^c010a437:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010a43c	obj/kernel.asm	/^c010a43c:	6a 56                	push   $0x56$/;"	l
c010a43e	obj/kernel.asm	/^c010a43e:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010a443	obj/kernel.asm	/^c010a443:	e8 87 60 ff ff       	call   c01004cf <__panic>$/;"	l
c010a448	obj/kernel.asm	/^c010a448:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a44b	obj/kernel.asm	/^c010a44b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a44e	obj/kernel.asm	/^c010a44e:	e8 74 fd ff ff       	call   c010a1c7 <fopen_count_dec>$/;"	l
c010a453	obj/kernel.asm	/^c010a453:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a456	obj/kernel.asm	/^c010a456:	85 c0                	test   %eax,%eax$/;"	l
c010a458	obj/kernel.asm	/^c010a458:	75 0e                	jne    c010a468 <fd_array_release+0x78>$/;"	l
c010a45a	obj/kernel.asm	/^c010a45a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a45d	obj/kernel.asm	/^c010a45d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a460	obj/kernel.asm	/^c010a460:	e8 d6 fe ff ff       	call   c010a33b <fd_array_free>$/;"	l
c010a465	obj/kernel.asm	/^c010a465:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a468	obj/kernel.asm	/^c010a468:	c9                   	leave  $/;"	l
c010a469	obj/kernel.asm	/^c010a469:	c3                   	ret    $/;"	l
c010a46a	obj/kernel.asm	/^c010a46a <fd_array_open>:$/;"	l
c010a46a	obj/kernel.asm	/^c010a46a:	55                   	push   %ebp$/;"	l
c010a46b	obj/kernel.asm	/^c010a46b:	89 e5                	mov    %esp,%ebp$/;"	l
c010a46d	obj/kernel.asm	/^c010a46d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a470	obj/kernel.asm	/^c010a470:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a473	obj/kernel.asm	/^c010a473:	8b 00                	mov    (%eax),%eax$/;"	l
c010a475	obj/kernel.asm	/^c010a475:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a478	obj/kernel.asm	/^c010a478:	75 0a                	jne    c010a484 <fd_array_open+0x1a>$/;"	l
c010a47a	obj/kernel.asm	/^c010a47a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a47d	obj/kernel.asm	/^c010a47d:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a480	obj/kernel.asm	/^c010a480:	85 c0                	test   %eax,%eax$/;"	l
c010a482	obj/kernel.asm	/^c010a482:	75 16                	jne    c010a49a <fd_array_open+0x30>$/;"	l
c010a484	obj/kernel.asm	/^c010a484:	68 14 5e 11 c0       	push   $0xc0115e14$/;"	l
c010a489	obj/kernel.asm	/^c010a489:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010a48e	obj/kernel.asm	/^c010a48e:	6a 5f                	push   $0x5f$/;"	l
c010a490	obj/kernel.asm	/^c010a490:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010a495	obj/kernel.asm	/^c010a495:	e8 35 60 ff ff       	call   c01004cf <__panic>$/;"	l
c010a49a	obj/kernel.asm	/^c010a49a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a49d	obj/kernel.asm	/^c010a49d:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010a4a3	obj/kernel.asm	/^c010a4a3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a4a6	obj/kernel.asm	/^c010a4a6:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a4a9	obj/kernel.asm	/^c010a4a9:	e8 ff fc ff ff       	call   c010a1ad <fopen_count_inc>$/;"	l
c010a4ae	obj/kernel.asm	/^c010a4ae:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a4b1	obj/kernel.asm	/^c010a4b1:	c9                   	leave  $/;"	l
c010a4b2	obj/kernel.asm	/^c010a4b2:	c3                   	ret    $/;"	l
c010a4b3	obj/kernel.asm	/^c010a4b3 <fd_array_close>:$/;"	l
c010a4b3	obj/kernel.asm	/^c010a4b3:	55                   	push   %ebp$/;"	l
c010a4b4	obj/kernel.asm	/^c010a4b4:	89 e5                	mov    %esp,%ebp$/;"	l
c010a4b6	obj/kernel.asm	/^c010a4b6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a4b9	obj/kernel.asm	/^c010a4b9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a4bc	obj/kernel.asm	/^c010a4bc:	8b 00                	mov    (%eax),%eax$/;"	l
c010a4be	obj/kernel.asm	/^c010a4be:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a4c1	obj/kernel.asm	/^c010a4c1:	74 16                	je     c010a4d9 <fd_array_close+0x26>$/;"	l
c010a4c3	obj/kernel.asm	/^c010a4c3:	68 a9 5d 11 c0       	push   $0xc0115da9$/;"	l
c010a4c8	obj/kernel.asm	/^c010a4c8:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010a4cd	obj/kernel.asm	/^c010a4cd:	6a 67                	push   $0x67$/;"	l
c010a4cf	obj/kernel.asm	/^c010a4cf:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010a4d4	obj/kernel.asm	/^c010a4d4:	e8 f6 5f ff ff       	call   c01004cf <__panic>$/;"	l
c010a4d9	obj/kernel.asm	/^c010a4d9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a4dc	obj/kernel.asm	/^c010a4dc:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a4df	obj/kernel.asm	/^c010a4df:	e8 be fc ff ff       	call   c010a1a2 <fopen_count>$/;"	l
c010a4e4	obj/kernel.asm	/^c010a4e4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a4e7	obj/kernel.asm	/^c010a4e7:	85 c0                	test   %eax,%eax$/;"	l
c010a4e9	obj/kernel.asm	/^c010a4e9:	7f 16                	jg     c010a501 <fd_array_close+0x4e>$/;"	l
c010a4eb	obj/kernel.asm	/^c010a4eb:	68 fb 5d 11 c0       	push   $0xc0115dfb$/;"	l
c010a4f0	obj/kernel.asm	/^c010a4f0:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010a4f5	obj/kernel.asm	/^c010a4f5:	6a 68                	push   $0x68$/;"	l
c010a4f7	obj/kernel.asm	/^c010a4f7:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010a4fc	obj/kernel.asm	/^c010a4fc:	e8 ce 5f ff ff       	call   c01004cf <__panic>$/;"	l
c010a501	obj/kernel.asm	/^c010a501:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a504	obj/kernel.asm	/^c010a504:	c7 00 03 00 00 00    	movl   $0x3,(%eax)$/;"	l
c010a50a	obj/kernel.asm	/^c010a50a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a50d	obj/kernel.asm	/^c010a50d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a510	obj/kernel.asm	/^c010a510:	e8 b2 fc ff ff       	call   c010a1c7 <fopen_count_dec>$/;"	l
c010a515	obj/kernel.asm	/^c010a515:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a518	obj/kernel.asm	/^c010a518:	85 c0                	test   %eax,%eax$/;"	l
c010a51a	obj/kernel.asm	/^c010a51a:	75 0e                	jne    c010a52a <fd_array_close+0x77>$/;"	l
c010a51c	obj/kernel.asm	/^c010a51c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a51f	obj/kernel.asm	/^c010a51f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a522	obj/kernel.asm	/^c010a522:	e8 14 fe ff ff       	call   c010a33b <fd_array_free>$/;"	l
c010a527	obj/kernel.asm	/^c010a527:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a52a	obj/kernel.asm	/^c010a52a:	c9                   	leave  $/;"	l
c010a52b	obj/kernel.asm	/^c010a52b:	c3                   	ret    $/;"	l
c010a52c	obj/kernel.asm	/^c010a52c <fd_array_dup>:$/;"	l
c010a52c	obj/kernel.asm	/^c010a52c:	55                   	push   %ebp$/;"	l
c010a52d	obj/kernel.asm	/^c010a52d:	89 e5                	mov    %esp,%ebp$/;"	l
c010a52f	obj/kernel.asm	/^c010a52f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a532	obj/kernel.asm	/^c010a532:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a535	obj/kernel.asm	/^c010a535:	8b 00                	mov    (%eax),%eax$/;"	l
c010a537	obj/kernel.asm	/^c010a537:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a53a	obj/kernel.asm	/^c010a53a:	75 0a                	jne    c010a546 <fd_array_dup+0x1a>$/;"	l
c010a53c	obj/kernel.asm	/^c010a53c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a53f	obj/kernel.asm	/^c010a53f:	8b 00                	mov    (%eax),%eax$/;"	l
c010a541	obj/kernel.asm	/^c010a541:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a544	obj/kernel.asm	/^c010a544:	74 16                	je     c010a55c <fd_array_dup+0x30>$/;"	l
c010a546	obj/kernel.asm	/^c010a546:	68 44 5e 11 c0       	push   $0xc0115e44$/;"	l
c010a54b	obj/kernel.asm	/^c010a54b:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010a550	obj/kernel.asm	/^c010a550:	6a 73                	push   $0x73$/;"	l
c010a552	obj/kernel.asm	/^c010a552:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010a557	obj/kernel.asm	/^c010a557:	e8 73 5f ff ff       	call   c01004cf <__panic>$/;"	l
c010a55c	obj/kernel.asm	/^c010a55c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a55f	obj/kernel.asm	/^c010a55f:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010a562	obj/kernel.asm	/^c010a562:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a565	obj/kernel.asm	/^c010a565:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010a568	obj/kernel.asm	/^c010a568:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a56b	obj/kernel.asm	/^c010a56b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010a56e	obj/kernel.asm	/^c010a56e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a571	obj/kernel.asm	/^c010a571:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a574	obj/kernel.asm	/^c010a574:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a577	obj/kernel.asm	/^c010a577:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010a57a	obj/kernel.asm	/^c010a57a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a57d	obj/kernel.asm	/^c010a57d:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010a580	obj/kernel.asm	/^c010a580:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a583	obj/kernel.asm	/^c010a583:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a586	obj/kernel.asm	/^c010a586:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a589	obj/kernel.asm	/^c010a589:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a58c	obj/kernel.asm	/^c010a58c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a58f	obj/kernel.asm	/^c010a58f:	e8 f8 44 00 00       	call   c010ea8c <inode_ref_inc>$/;"	l
c010a594	obj/kernel.asm	/^c010a594:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a597	obj/kernel.asm	/^c010a597:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a59a	obj/kernel.asm	/^c010a59a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a59d	obj/kernel.asm	/^c010a59d:	e8 d8 45 00 00       	call   c010eb7a <inode_open_inc>$/;"	l
c010a5a2	obj/kernel.asm	/^c010a5a2:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a5a5	obj/kernel.asm	/^c010a5a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a5a8	obj/kernel.asm	/^c010a5a8:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a5ab	obj/kernel.asm	/^c010a5ab:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010a5ae	obj/kernel.asm	/^c010a5ae:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a5b1	obj/kernel.asm	/^c010a5b1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a5b4	obj/kernel.asm	/^c010a5b4:	e8 b1 fe ff ff       	call   c010a46a <fd_array_open>$/;"	l
c010a5b9	obj/kernel.asm	/^c010a5b9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a5bc	obj/kernel.asm	/^c010a5bc:	c9                   	leave  $/;"	l
c010a5bd	obj/kernel.asm	/^c010a5bd:	c3                   	ret    $/;"	l
c010a5be	obj/kernel.asm	/^c010a5be <fd2file>:$/;"	l
c010a5be	obj/kernel.asm	/^c010a5be:	55                   	push   %ebp$/;"	l
c010a5bf	obj/kernel.asm	/^c010a5bf:	89 e5                	mov    %esp,%ebp$/;"	l
c010a5c1	obj/kernel.asm	/^c010a5c1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a5c4	obj/kernel.asm	/^c010a5c4:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010a5c8	obj/kernel.asm	/^c010a5c8:	78 4b                	js     c010a615 <fd2file+0x57>$/;"	l
c010a5ca	obj/kernel.asm	/^c010a5ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a5cd	obj/kernel.asm	/^c010a5cd:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010a5d2	obj/kernel.asm	/^c010a5d2:	77 41                	ja     c010a615 <fd2file+0x57>$/;"	l
c010a5d4	obj/kernel.asm	/^c010a5d4:	e8 08 fc ff ff       	call   c010a1e1 <get_fd_array>$/;"	l
c010a5d9	obj/kernel.asm	/^c010a5d9:	89 c1                	mov    %eax,%ecx$/;"	l
c010a5db	obj/kernel.asm	/^c010a5db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a5de	obj/kernel.asm	/^c010a5de:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a5e1	obj/kernel.asm	/^c010a5e1:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010a5e8	obj/kernel.asm	/^c010a5e8:	29 c2                	sub    %eax,%edx$/;"	l
c010a5ea	obj/kernel.asm	/^c010a5ea:	89 d0                	mov    %edx,%eax$/;"	l
c010a5ec	obj/kernel.asm	/^c010a5ec:	01 c8                	add    %ecx,%eax$/;"	l
c010a5ee	obj/kernel.asm	/^c010a5ee:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a5f1	obj/kernel.asm	/^c010a5f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a5f4	obj/kernel.asm	/^c010a5f4:	8b 00                	mov    (%eax),%eax$/;"	l
c010a5f6	obj/kernel.asm	/^c010a5f6:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a5f9	obj/kernel.asm	/^c010a5f9:	75 1a                	jne    c010a615 <fd2file+0x57>$/;"	l
c010a5fb	obj/kernel.asm	/^c010a5fb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a5fe	obj/kernel.asm	/^c010a5fe:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a601	obj/kernel.asm	/^c010a601:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010a604	obj/kernel.asm	/^c010a604:	75 0f                	jne    c010a615 <fd2file+0x57>$/;"	l
c010a606	obj/kernel.asm	/^c010a606:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a609	obj/kernel.asm	/^c010a609:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a60c	obj/kernel.asm	/^c010a60c:	89 10                	mov    %edx,(%eax)$/;"	l
c010a60e	obj/kernel.asm	/^c010a60e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a613	obj/kernel.asm	/^c010a613:	eb 05                	jmp    c010a61a <fd2file+0x5c>$/;"	l
c010a615	obj/kernel.asm	/^c010a615:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a61a	obj/kernel.asm	/^c010a61a:	c9                   	leave  $/;"	l
c010a61b	obj/kernel.asm	/^c010a61b:	c3                   	ret    $/;"	l
c010a61c	obj/kernel.asm	/^c010a61c <file_testfd>:$/;"	l
c010a61c	obj/kernel.asm	/^c010a61c:	55                   	push   %ebp$/;"	l
c010a61d	obj/kernel.asm	/^c010a61d:	89 e5                	mov    %esp,%ebp$/;"	l
c010a61f	obj/kernel.asm	/^c010a61f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a622	obj/kernel.asm	/^c010a622:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a625	obj/kernel.asm	/^c010a625:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010a628	obj/kernel.asm	/^c010a628:	50                   	push   %eax$/;"	l
c010a629	obj/kernel.asm	/^c010a629:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a62c	obj/kernel.asm	/^c010a62c:	e8 8d ff ff ff       	call   c010a5be <fd2file>$/;"	l
c010a631	obj/kernel.asm	/^c010a631:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a634	obj/kernel.asm	/^c010a634:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a637	obj/kernel.asm	/^c010a637:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a63b	obj/kernel.asm	/^c010a63b:	74 07                	je     c010a644 <file_testfd+0x28>$/;"	l
c010a63d	obj/kernel.asm	/^c010a63d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a642	obj/kernel.asm	/^c010a642:	eb 33                	jmp    c010a677 <file_testfd+0x5b>$/;"	l
c010a644	obj/kernel.asm	/^c010a644:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010a648	obj/kernel.asm	/^c010a648:	74 11                	je     c010a65b <file_testfd+0x3f>$/;"	l
c010a64a	obj/kernel.asm	/^c010a64a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a64d	obj/kernel.asm	/^c010a64d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a650	obj/kernel.asm	/^c010a650:	85 c0                	test   %eax,%eax$/;"	l
c010a652	obj/kernel.asm	/^c010a652:	75 07                	jne    c010a65b <file_testfd+0x3f>$/;"	l
c010a654	obj/kernel.asm	/^c010a654:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a659	obj/kernel.asm	/^c010a659:	eb 1c                	jmp    c010a677 <file_testfd+0x5b>$/;"	l
c010a65b	obj/kernel.asm	/^c010a65b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010a65f	obj/kernel.asm	/^c010a65f:	74 11                	je     c010a672 <file_testfd+0x56>$/;"	l
c010a661	obj/kernel.asm	/^c010a661:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a664	obj/kernel.asm	/^c010a664:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a667	obj/kernel.asm	/^c010a667:	85 c0                	test   %eax,%eax$/;"	l
c010a669	obj/kernel.asm	/^c010a669:	75 07                	jne    c010a672 <file_testfd+0x56>$/;"	l
c010a66b	obj/kernel.asm	/^c010a66b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a670	obj/kernel.asm	/^c010a670:	eb 05                	jmp    c010a677 <file_testfd+0x5b>$/;"	l
c010a672	obj/kernel.asm	/^c010a672:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010a677	obj/kernel.asm	/^c010a677:	c9                   	leave  $/;"	l
c010a678	obj/kernel.asm	/^c010a678:	c3                   	ret    $/;"	l
c010a679	obj/kernel.asm	/^c010a679 <file_open>:$/;"	l
c010a679	obj/kernel.asm	/^c010a679:	55                   	push   %ebp$/;"	l
c010a67a	obj/kernel.asm	/^c010a67a:	89 e5                	mov    %esp,%ebp$/;"	l
c010a67c	obj/kernel.asm	/^c010a67c:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010a67f	obj/kernel.asm	/^c010a67f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010a686	obj/kernel.asm	/^c010a686:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010a68d	obj/kernel.asm	/^c010a68d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a690	obj/kernel.asm	/^c010a690:	83 e0 03             	and    $0x3,%eax$/;"	l
c010a693	obj/kernel.asm	/^c010a693:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a696	obj/kernel.asm	/^c010a696:	74 15                	je     c010a6ad <file_open+0x34>$/;"	l
c010a698	obj/kernel.asm	/^c010a698:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a69b	obj/kernel.asm	/^c010a69b:	72 07                	jb     c010a6a4 <file_open+0x2b>$/;"	l
c010a69d	obj/kernel.asm	/^c010a69d:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a6a0	obj/kernel.asm	/^c010a6a0:	74 14                	je     c010a6b6 <file_open+0x3d>$/;"	l
c010a6a2	obj/kernel.asm	/^c010a6a2:	eb 21                	jmp    c010a6c5 <file_open+0x4c>$/;"	l
c010a6a4	obj/kernel.asm	/^c010a6a4:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010a6ab	obj/kernel.asm	/^c010a6ab:	eb 22                	jmp    c010a6cf <file_open+0x56>$/;"	l
c010a6ad	obj/kernel.asm	/^c010a6ad:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010a6b4	obj/kernel.asm	/^c010a6b4:	eb 19                	jmp    c010a6cf <file_open+0x56>$/;"	l
c010a6b6	obj/kernel.asm	/^c010a6b6:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010a6bd	obj/kernel.asm	/^c010a6bd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a6c0	obj/kernel.asm	/^c010a6c0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a6c3	obj/kernel.asm	/^c010a6c3:	eb 0a                	jmp    c010a6cf <file_open+0x56>$/;"	l
c010a6c5	obj/kernel.asm	/^c010a6c5:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a6ca	obj/kernel.asm	/^c010a6ca:	e9 47 01 00 00       	jmp    c010a816 <file_open+0x19d>$/;"	l
c010a6cf	obj/kernel.asm	/^c010a6cf:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a6d2	obj/kernel.asm	/^c010a6d2:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c010a6d5	obj/kernel.asm	/^c010a6d5:	50                   	push   %eax$/;"	l
c010a6d6	obj/kernel.asm	/^c010a6d6:	68 d9 6a ff ff       	push   $0xffff6ad9$/;"	l
c010a6db	obj/kernel.asm	/^c010a6db:	e8 8d fb ff ff       	call   c010a26d <fd_array_alloc>$/;"	l
c010a6e0	obj/kernel.asm	/^c010a6e0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a6e3	obj/kernel.asm	/^c010a6e3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a6e6	obj/kernel.asm	/^c010a6e6:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a6ea	obj/kernel.asm	/^c010a6ea:	74 08                	je     c010a6f4 <file_open+0x7b>$/;"	l
c010a6ec	obj/kernel.asm	/^c010a6ec:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a6ef	obj/kernel.asm	/^c010a6ef:	e9 22 01 00 00       	jmp    c010a816 <file_open+0x19d>$/;"	l
c010a6f4	obj/kernel.asm	/^c010a6f4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a6f7	obj/kernel.asm	/^c010a6f7:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010a6fa	obj/kernel.asm	/^c010a6fa:	50                   	push   %eax$/;"	l
c010a6fb	obj/kernel.asm	/^c010a6fb:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010a6fe	obj/kernel.asm	/^c010a6fe:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a701	obj/kernel.asm	/^c010a701:	e8 19 46 00 00       	call   c010ed1f <vfs_open>$/;"	l
c010a706	obj/kernel.asm	/^c010a706:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a709	obj/kernel.asm	/^c010a709:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a70c	obj/kernel.asm	/^c010a70c:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a710	obj/kernel.asm	/^c010a710:	74 17                	je     c010a729 <file_open+0xb0>$/;"	l
c010a712	obj/kernel.asm	/^c010a712:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a715	obj/kernel.asm	/^c010a715:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a718	obj/kernel.asm	/^c010a718:	50                   	push   %eax$/;"	l
c010a719	obj/kernel.asm	/^c010a719:	e8 1d fc ff ff       	call   c010a33b <fd_array_free>$/;"	l
c010a71e	obj/kernel.asm	/^c010a71e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a721	obj/kernel.asm	/^c010a721:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a724	obj/kernel.asm	/^c010a724:	e9 ed 00 00 00       	jmp    c010a816 <file_open+0x19d>$/;"	l
c010a729	obj/kernel.asm	/^c010a729:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a72c	obj/kernel.asm	/^c010a72c:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010a733	obj/kernel.asm	/^c010a733:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a736	obj/kernel.asm	/^c010a736:	83 e0 20             	and    $0x20,%eax$/;"	l
c010a739	obj/kernel.asm	/^c010a739:	85 c0                	test   %eax,%eax$/;"	l
c010a73b	obj/kernel.asm	/^c010a73b:	0f 84 a5 00 00 00    	je     c010a7e6 <file_open+0x16d>$/;"	l
c010a741	obj/kernel.asm	/^c010a741:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c010a744	obj/kernel.asm	/^c010a744:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a747	obj/kernel.asm	/^c010a747:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a74a	obj/kernel.asm	/^c010a74a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010a74d	obj/kernel.asm	/^c010a74d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010a751	obj/kernel.asm	/^c010a751:	74 17                	je     c010a76a <file_open+0xf1>$/;"	l
c010a753	obj/kernel.asm	/^c010a753:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a756	obj/kernel.asm	/^c010a756:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a759	obj/kernel.asm	/^c010a759:	85 c0                	test   %eax,%eax$/;"	l
c010a75b	obj/kernel.asm	/^c010a75b:	74 0d                	je     c010a76a <file_open+0xf1>$/;"	l
c010a75d	obj/kernel.asm	/^c010a75d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a760	obj/kernel.asm	/^c010a760:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a763	obj/kernel.asm	/^c010a763:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a766	obj/kernel.asm	/^c010a766:	85 c0                	test   %eax,%eax$/;"	l
c010a768	obj/kernel.asm	/^c010a768:	75 19                	jne    c010a783 <file_open+0x10a>$/;"	l
c010a76a	obj/kernel.asm	/^c010a76a:	68 78 5e 11 c0       	push   $0xc0115e78$/;"	l
c010a76f	obj/kernel.asm	/^c010a76f:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010a774	obj/kernel.asm	/^c010a774:	68 b8 00 00 00       	push   $0xb8$/;"	l
c010a779	obj/kernel.asm	/^c010a779:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010a77e	obj/kernel.asm	/^c010a77e:	e8 4c 5d ff ff       	call   c01004cf <__panic>$/;"	l
c010a783	obj/kernel.asm	/^c010a783:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a786	obj/kernel.asm	/^c010a786:	68 c6 5e 11 c0       	push   $0xc0115ec6$/;"	l
c010a78b	obj/kernel.asm	/^c010a78b:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c010a78e	obj/kernel.asm	/^c010a78e:	e8 cb 44 00 00       	call   c010ec5e <inode_check>$/;"	l
c010a793	obj/kernel.asm	/^c010a793:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a796	obj/kernel.asm	/^c010a796:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a799	obj/kernel.asm	/^c010a799:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a79c	obj/kernel.asm	/^c010a79c:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a79f	obj/kernel.asm	/^c010a79f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010a7a2	obj/kernel.asm	/^c010a7a2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a7a5	obj/kernel.asm	/^c010a7a5:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010a7a8	obj/kernel.asm	/^c010a7a8:	52                   	push   %edx$/;"	l
c010a7a9	obj/kernel.asm	/^c010a7a9:	ff d0                	call   *%eax$/;"	l
c010a7ab	obj/kernel.asm	/^c010a7ab:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a7ae	obj/kernel.asm	/^c010a7ae:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a7b1	obj/kernel.asm	/^c010a7b1:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a7b5	obj/kernel.asm	/^c010a7b5:	74 23                	je     c010a7da <file_open+0x161>$/;"	l
c010a7b7	obj/kernel.asm	/^c010a7b7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a7ba	obj/kernel.asm	/^c010a7ba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a7bd	obj/kernel.asm	/^c010a7bd:	50                   	push   %eax$/;"	l
c010a7be	obj/kernel.asm	/^c010a7be:	e8 15 48 00 00       	call   c010efd8 <vfs_close>$/;"	l
c010a7c3	obj/kernel.asm	/^c010a7c3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a7c6	obj/kernel.asm	/^c010a7c6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a7c9	obj/kernel.asm	/^c010a7c9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a7cc	obj/kernel.asm	/^c010a7cc:	50                   	push   %eax$/;"	l
c010a7cd	obj/kernel.asm	/^c010a7cd:	e8 69 fb ff ff       	call   c010a33b <fd_array_free>$/;"	l
c010a7d2	obj/kernel.asm	/^c010a7d2:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a7d5	obj/kernel.asm	/^c010a7d5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a7d8	obj/kernel.asm	/^c010a7d8:	eb 3c                	jmp    c010a816 <file_open+0x19d>$/;"	l
c010a7da	obj/kernel.asm	/^c010a7da:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a7dd	obj/kernel.asm	/^c010a7dd:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010a7e0	obj/kernel.asm	/^c010a7e0:	8b 52 0c             	mov    0xc(%edx),%edx$/;"	l
c010a7e3	obj/kernel.asm	/^c010a7e3:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010a7e6	obj/kernel.asm	/^c010a7e6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a7e9	obj/kernel.asm	/^c010a7e9:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010a7ec	obj/kernel.asm	/^c010a7ec:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010a7ef	obj/kernel.asm	/^c010a7ef:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a7f2	obj/kernel.asm	/^c010a7f2:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a7f5	obj/kernel.asm	/^c010a7f5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a7f8	obj/kernel.asm	/^c010a7f8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a7fb	obj/kernel.asm	/^c010a7fb:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010a7fe	obj/kernel.asm	/^c010a7fe:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010a801	obj/kernel.asm	/^c010a801:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a804	obj/kernel.asm	/^c010a804:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a807	obj/kernel.asm	/^c010a807:	50                   	push   %eax$/;"	l
c010a808	obj/kernel.asm	/^c010a808:	e8 5d fc ff ff       	call   c010a46a <fd_array_open>$/;"	l
c010a80d	obj/kernel.asm	/^c010a80d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a810	obj/kernel.asm	/^c010a810:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a813	obj/kernel.asm	/^c010a813:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a816	obj/kernel.asm	/^c010a816:	c9                   	leave  $/;"	l
c010a817	obj/kernel.asm	/^c010a817:	c3                   	ret    $/;"	l
c010a818	obj/kernel.asm	/^c010a818 <file_close>:$/;"	l
c010a818	obj/kernel.asm	/^c010a818:	55                   	push   %ebp$/;"	l
c010a819	obj/kernel.asm	/^c010a819:	89 e5                	mov    %esp,%ebp$/;"	l
c010a81b	obj/kernel.asm	/^c010a81b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a81e	obj/kernel.asm	/^c010a81e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a821	obj/kernel.asm	/^c010a821:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010a824	obj/kernel.asm	/^c010a824:	50                   	push   %eax$/;"	l
c010a825	obj/kernel.asm	/^c010a825:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a828	obj/kernel.asm	/^c010a828:	e8 91 fd ff ff       	call   c010a5be <fd2file>$/;"	l
c010a82d	obj/kernel.asm	/^c010a82d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a830	obj/kernel.asm	/^c010a830:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a833	obj/kernel.asm	/^c010a833:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a837	obj/kernel.asm	/^c010a837:	74 05                	je     c010a83e <file_close+0x26>$/;"	l
c010a839	obj/kernel.asm	/^c010a839:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a83c	obj/kernel.asm	/^c010a83c:	eb 14                	jmp    c010a852 <file_close+0x3a>$/;"	l
c010a83e	obj/kernel.asm	/^c010a83e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a841	obj/kernel.asm	/^c010a841:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a844	obj/kernel.asm	/^c010a844:	50                   	push   %eax$/;"	l
c010a845	obj/kernel.asm	/^c010a845:	e8 69 fc ff ff       	call   c010a4b3 <fd_array_close>$/;"	l
c010a84a	obj/kernel.asm	/^c010a84a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a84d	obj/kernel.asm	/^c010a84d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a852	obj/kernel.asm	/^c010a852:	c9                   	leave  $/;"	l
c010a853	obj/kernel.asm	/^c010a853:	c3                   	ret    $/;"	l
c010a854	obj/kernel.asm	/^c010a854 <file_read>:$/;"	l
c010a854	obj/kernel.asm	/^c010a854:	55                   	push   %ebp$/;"	l
c010a855	obj/kernel.asm	/^c010a855:	89 e5                	mov    %esp,%ebp$/;"	l
c010a857	obj/kernel.asm	/^c010a857:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010a85a	obj/kernel.asm	/^c010a85a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010a85d	obj/kernel.asm	/^c010a85d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010a863	obj/kernel.asm	/^c010a863:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a866	obj/kernel.asm	/^c010a866:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c010a869	obj/kernel.asm	/^c010a869:	50                   	push   %eax$/;"	l
c010a86a	obj/kernel.asm	/^c010a86a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a86d	obj/kernel.asm	/^c010a86d:	e8 4c fd ff ff       	call   c010a5be <fd2file>$/;"	l
c010a872	obj/kernel.asm	/^c010a872:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a875	obj/kernel.asm	/^c010a875:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a878	obj/kernel.asm	/^c010a878:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a87c	obj/kernel.asm	/^c010a87c:	74 08                	je     c010a886 <file_read+0x32>$/;"	l
c010a87e	obj/kernel.asm	/^c010a87e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a881	obj/kernel.asm	/^c010a881:	e9 f9 00 00 00       	jmp    c010a97f <file_read+0x12b>$/;"	l
c010a886	obj/kernel.asm	/^c010a886:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a889	obj/kernel.asm	/^c010a889:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a88c	obj/kernel.asm	/^c010a88c:	85 c0                	test   %eax,%eax$/;"	l
c010a88e	obj/kernel.asm	/^c010a88e:	75 0a                	jne    c010a89a <file_read+0x46>$/;"	l
c010a890	obj/kernel.asm	/^c010a890:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a895	obj/kernel.asm	/^c010a895:	e9 e5 00 00 00       	jmp    c010a97f <file_read+0x12b>$/;"	l
c010a89a	obj/kernel.asm	/^c010a89a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a89d	obj/kernel.asm	/^c010a89d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a8a0	obj/kernel.asm	/^c010a8a0:	50                   	push   %eax$/;"	l
c010a8a1	obj/kernel.asm	/^c010a8a1:	e8 14 fb ff ff       	call   c010a3ba <fd_array_acquire>$/;"	l
c010a8a6	obj/kernel.asm	/^c010a8a6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a8a9	obj/kernel.asm	/^c010a8a9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a8ac	obj/kernel.asm	/^c010a8ac:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a8af	obj/kernel.asm	/^c010a8af:	50                   	push   %eax$/;"	l
c010a8b0	obj/kernel.asm	/^c010a8b0:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010a8b3	obj/kernel.asm	/^c010a8b3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010a8b6	obj/kernel.asm	/^c010a8b6:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010a8b9	obj/kernel.asm	/^c010a8b9:	50                   	push   %eax$/;"	l
c010a8ba	obj/kernel.asm	/^c010a8ba:	e8 59 06 00 00       	call   c010af18 <iobuf_init>$/;"	l
c010a8bf	obj/kernel.asm	/^c010a8bf:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a8c2	obj/kernel.asm	/^c010a8c2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a8c5	obj/kernel.asm	/^c010a8c5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a8c8	obj/kernel.asm	/^c010a8c8:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a8cb	obj/kernel.asm	/^c010a8cb:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a8ce	obj/kernel.asm	/^c010a8ce:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a8d2	obj/kernel.asm	/^c010a8d2:	74 17                	je     c010a8eb <file_read+0x97>$/;"	l
c010a8d4	obj/kernel.asm	/^c010a8d4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a8d7	obj/kernel.asm	/^c010a8d7:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a8da	obj/kernel.asm	/^c010a8da:	85 c0                	test   %eax,%eax$/;"	l
c010a8dc	obj/kernel.asm	/^c010a8dc:	74 0d                	je     c010a8eb <file_read+0x97>$/;"	l
c010a8de	obj/kernel.asm	/^c010a8de:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a8e1	obj/kernel.asm	/^c010a8e1:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a8e4	obj/kernel.asm	/^c010a8e4:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a8e7	obj/kernel.asm	/^c010a8e7:	85 c0                	test   %eax,%eax$/;"	l
c010a8e9	obj/kernel.asm	/^c010a8e9:	75 19                	jne    c010a904 <file_read+0xb0>$/;"	l
c010a8eb	obj/kernel.asm	/^c010a8eb:	68 cc 5e 11 c0       	push   $0xc0115ecc$/;"	l
c010a8f0	obj/kernel.asm	/^c010a8f0:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010a8f5	obj/kernel.asm	/^c010a8f5:	68 e2 00 00 00       	push   $0xe2$/;"	l
c010a8fa	obj/kernel.asm	/^c010a8fa:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010a8ff	obj/kernel.asm	/^c010a8ff:	e8 cb 5b ff ff       	call   c01004cf <__panic>$/;"	l
c010a904	obj/kernel.asm	/^c010a904:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a907	obj/kernel.asm	/^c010a907:	68 19 5f 11 c0       	push   $0xc0115f19$/;"	l
c010a90c	obj/kernel.asm	/^c010a90c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010a90f	obj/kernel.asm	/^c010a90f:	e8 4a 43 00 00       	call   c010ec5e <inode_check>$/;"	l
c010a914	obj/kernel.asm	/^c010a914:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a917	obj/kernel.asm	/^c010a917:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a91a	obj/kernel.asm	/^c010a91a:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a91d	obj/kernel.asm	/^c010a91d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a920	obj/kernel.asm	/^c010a920:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010a923	obj/kernel.asm	/^c010a923:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010a926	obj/kernel.asm	/^c010a926:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a929	obj/kernel.asm	/^c010a929:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a92c	obj/kernel.asm	/^c010a92c:	52                   	push   %edx$/;"	l
c010a92d	obj/kernel.asm	/^c010a92d:	ff d0                	call   *%eax$/;"	l
c010a92f	obj/kernel.asm	/^c010a92f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a932	obj/kernel.asm	/^c010a932:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a935	obj/kernel.asm	/^c010a935:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a938	obj/kernel.asm	/^c010a938:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010a93b	obj/kernel.asm	/^c010a93b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a93e	obj/kernel.asm	/^c010a93e:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a941	obj/kernel.asm	/^c010a941:	29 c2                	sub    %eax,%edx$/;"	l
c010a943	obj/kernel.asm	/^c010a943:	89 d0                	mov    %edx,%eax$/;"	l
c010a945	obj/kernel.asm	/^c010a945:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a948	obj/kernel.asm	/^c010a948:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a94b	obj/kernel.asm	/^c010a94b:	8b 00                	mov    (%eax),%eax$/;"	l
c010a94d	obj/kernel.asm	/^c010a94d:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a950	obj/kernel.asm	/^c010a950:	75 13                	jne    c010a965 <file_read+0x111>$/;"	l
c010a952	obj/kernel.asm	/^c010a952:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a955	obj/kernel.asm	/^c010a955:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010a958	obj/kernel.asm	/^c010a958:	8b 52 10             	mov    0x10(%edx),%edx$/;"	l
c010a95b	obj/kernel.asm	/^c010a95b:	89 d1                	mov    %edx,%ecx$/;"	l
c010a95d	obj/kernel.asm	/^c010a95d:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010a960	obj/kernel.asm	/^c010a960:	01 ca                	add    %ecx,%edx$/;"	l
c010a962	obj/kernel.asm	/^c010a962:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010a965	obj/kernel.asm	/^c010a965:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010a968	obj/kernel.asm	/^c010a968:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010a96b	obj/kernel.asm	/^c010a96b:	89 10                	mov    %edx,(%eax)$/;"	l
c010a96d	obj/kernel.asm	/^c010a96d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a970	obj/kernel.asm	/^c010a970:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a973	obj/kernel.asm	/^c010a973:	50                   	push   %eax$/;"	l
c010a974	obj/kernel.asm	/^c010a974:	e8 77 fa ff ff       	call   c010a3f0 <fd_array_release>$/;"	l
c010a979	obj/kernel.asm	/^c010a979:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a97c	obj/kernel.asm	/^c010a97c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a97f	obj/kernel.asm	/^c010a97f:	c9                   	leave  $/;"	l
c010a980	obj/kernel.asm	/^c010a980:	c3                   	ret    $/;"	l
c010a981	obj/kernel.asm	/^c010a981 <file_write>:$/;"	l
c010a981	obj/kernel.asm	/^c010a981:	55                   	push   %ebp$/;"	l
c010a982	obj/kernel.asm	/^c010a982:	89 e5                	mov    %esp,%ebp$/;"	l
c010a984	obj/kernel.asm	/^c010a984:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010a987	obj/kernel.asm	/^c010a987:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010a98a	obj/kernel.asm	/^c010a98a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010a990	obj/kernel.asm	/^c010a990:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a993	obj/kernel.asm	/^c010a993:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c010a996	obj/kernel.asm	/^c010a996:	50                   	push   %eax$/;"	l
c010a997	obj/kernel.asm	/^c010a997:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a99a	obj/kernel.asm	/^c010a99a:	e8 1f fc ff ff       	call   c010a5be <fd2file>$/;"	l
c010a99f	obj/kernel.asm	/^c010a99f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a9a2	obj/kernel.asm	/^c010a9a2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a9a5	obj/kernel.asm	/^c010a9a5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a9a9	obj/kernel.asm	/^c010a9a9:	74 08                	je     c010a9b3 <file_write+0x32>$/;"	l
c010a9ab	obj/kernel.asm	/^c010a9ab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a9ae	obj/kernel.asm	/^c010a9ae:	e9 f9 00 00 00       	jmp    c010aaac <file_write+0x12b>$/;"	l
c010a9b3	obj/kernel.asm	/^c010a9b3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a9b6	obj/kernel.asm	/^c010a9b6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a9b9	obj/kernel.asm	/^c010a9b9:	85 c0                	test   %eax,%eax$/;"	l
c010a9bb	obj/kernel.asm	/^c010a9bb:	75 0a                	jne    c010a9c7 <file_write+0x46>$/;"	l
c010a9bd	obj/kernel.asm	/^c010a9bd:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a9c2	obj/kernel.asm	/^c010a9c2:	e9 e5 00 00 00       	jmp    c010aaac <file_write+0x12b>$/;"	l
c010a9c7	obj/kernel.asm	/^c010a9c7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a9ca	obj/kernel.asm	/^c010a9ca:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a9cd	obj/kernel.asm	/^c010a9cd:	50                   	push   %eax$/;"	l
c010a9ce	obj/kernel.asm	/^c010a9ce:	e8 e7 f9 ff ff       	call   c010a3ba <fd_array_acquire>$/;"	l
c010a9d3	obj/kernel.asm	/^c010a9d3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a9d6	obj/kernel.asm	/^c010a9d6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a9d9	obj/kernel.asm	/^c010a9d9:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a9dc	obj/kernel.asm	/^c010a9dc:	50                   	push   %eax$/;"	l
c010a9dd	obj/kernel.asm	/^c010a9dd:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010a9e0	obj/kernel.asm	/^c010a9e0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010a9e3	obj/kernel.asm	/^c010a9e3:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010a9e6	obj/kernel.asm	/^c010a9e6:	50                   	push   %eax$/;"	l
c010a9e7	obj/kernel.asm	/^c010a9e7:	e8 2c 05 00 00       	call   c010af18 <iobuf_init>$/;"	l
c010a9ec	obj/kernel.asm	/^c010a9ec:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a9ef	obj/kernel.asm	/^c010a9ef:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a9f2	obj/kernel.asm	/^c010a9f2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a9f5	obj/kernel.asm	/^c010a9f5:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a9f8	obj/kernel.asm	/^c010a9f8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a9fb	obj/kernel.asm	/^c010a9fb:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a9ff	obj/kernel.asm	/^c010a9ff:	74 17                	je     c010aa18 <file_write+0x97>$/;"	l
c010aa01	obj/kernel.asm	/^c010aa01:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010aa04	obj/kernel.asm	/^c010aa04:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010aa07	obj/kernel.asm	/^c010aa07:	85 c0                	test   %eax,%eax$/;"	l
c010aa09	obj/kernel.asm	/^c010aa09:	74 0d                	je     c010aa18 <file_write+0x97>$/;"	l
c010aa0b	obj/kernel.asm	/^c010aa0b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010aa0e	obj/kernel.asm	/^c010aa0e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010aa11	obj/kernel.asm	/^c010aa11:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010aa14	obj/kernel.asm	/^c010aa14:	85 c0                	test   %eax,%eax$/;"	l
c010aa16	obj/kernel.asm	/^c010aa16:	75 19                	jne    c010aa31 <file_write+0xb0>$/;"	l
c010aa18	obj/kernel.asm	/^c010aa18:	68 20 5f 11 c0       	push   $0xc0115f20$/;"	l
c010aa1d	obj/kernel.asm	/^c010aa1d:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010aa22	obj/kernel.asm	/^c010aa22:	68 fc 00 00 00       	push   $0xfc$/;"	l
c010aa27	obj/kernel.asm	/^c010aa27:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010aa2c	obj/kernel.asm	/^c010aa2c:	e8 9e 5a ff ff       	call   c01004cf <__panic>$/;"	l
c010aa31	obj/kernel.asm	/^c010aa31:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010aa34	obj/kernel.asm	/^c010aa34:	68 6e 5f 11 c0       	push   $0xc0115f6e$/;"	l
c010aa39	obj/kernel.asm	/^c010aa39:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010aa3c	obj/kernel.asm	/^c010aa3c:	e8 1d 42 00 00       	call   c010ec5e <inode_check>$/;"	l
c010aa41	obj/kernel.asm	/^c010aa41:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aa44	obj/kernel.asm	/^c010aa44:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010aa47	obj/kernel.asm	/^c010aa47:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010aa4a	obj/kernel.asm	/^c010aa4a:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010aa4d	obj/kernel.asm	/^c010aa4d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010aa50	obj/kernel.asm	/^c010aa50:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010aa53	obj/kernel.asm	/^c010aa53:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010aa56	obj/kernel.asm	/^c010aa56:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010aa59	obj/kernel.asm	/^c010aa59:	52                   	push   %edx$/;"	l
c010aa5a	obj/kernel.asm	/^c010aa5a:	ff d0                	call   *%eax$/;"	l
c010aa5c	obj/kernel.asm	/^c010aa5c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aa5f	obj/kernel.asm	/^c010aa5f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aa62	obj/kernel.asm	/^c010aa62:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aa65	obj/kernel.asm	/^c010aa65:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010aa68	obj/kernel.asm	/^c010aa68:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aa6b	obj/kernel.asm	/^c010aa6b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010aa6e	obj/kernel.asm	/^c010aa6e:	29 c2                	sub    %eax,%edx$/;"	l
c010aa70	obj/kernel.asm	/^c010aa70:	89 d0                	mov    %edx,%eax$/;"	l
c010aa72	obj/kernel.asm	/^c010aa72:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010aa75	obj/kernel.asm	/^c010aa75:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010aa78	obj/kernel.asm	/^c010aa78:	8b 00                	mov    (%eax),%eax$/;"	l
c010aa7a	obj/kernel.asm	/^c010aa7a:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010aa7d	obj/kernel.asm	/^c010aa7d:	75 13                	jne    c010aa92 <file_write+0x111>$/;"	l
c010aa7f	obj/kernel.asm	/^c010aa7f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010aa82	obj/kernel.asm	/^c010aa82:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010aa85	obj/kernel.asm	/^c010aa85:	8b 52 10             	mov    0x10(%edx),%edx$/;"	l
c010aa88	obj/kernel.asm	/^c010aa88:	89 d1                	mov    %edx,%ecx$/;"	l
c010aa8a	obj/kernel.asm	/^c010aa8a:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010aa8d	obj/kernel.asm	/^c010aa8d:	01 ca                	add    %ecx,%edx$/;"	l
c010aa8f	obj/kernel.asm	/^c010aa8f:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010aa92	obj/kernel.asm	/^c010aa92:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010aa95	obj/kernel.asm	/^c010aa95:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010aa98	obj/kernel.asm	/^c010aa98:	89 10                	mov    %edx,(%eax)$/;"	l
c010aa9a	obj/kernel.asm	/^c010aa9a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010aa9d	obj/kernel.asm	/^c010aa9d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010aaa0	obj/kernel.asm	/^c010aaa0:	50                   	push   %eax$/;"	l
c010aaa1	obj/kernel.asm	/^c010aaa1:	e8 4a f9 ff ff       	call   c010a3f0 <fd_array_release>$/;"	l
c010aaa6	obj/kernel.asm	/^c010aaa6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aaa9	obj/kernel.asm	/^c010aaa9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aaac	obj/kernel.asm	/^c010aaac:	c9                   	leave  $/;"	l
c010aaad	obj/kernel.asm	/^c010aaad:	c3                   	ret    $/;"	l
c010aaae	obj/kernel.asm	/^c010aaae <file_seek>:$/;"	l
c010aaae	obj/kernel.asm	/^c010aaae:	55                   	push   %ebp$/;"	l
c010aaaf	obj/kernel.asm	/^c010aaaf:	89 e5                	mov    %esp,%ebp$/;"	l
c010aab1	obj/kernel.asm	/^c010aab1:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010aab4	obj/kernel.asm	/^c010aab4:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c010aab7	obj/kernel.asm	/^c010aab7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010aaba	obj/kernel.asm	/^c010aaba:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010aabd	obj/kernel.asm	/^c010aabd:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010aac0	obj/kernel.asm	/^c010aac0:	50                   	push   %eax$/;"	l
c010aac1	obj/kernel.asm	/^c010aac1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010aac4	obj/kernel.asm	/^c010aac4:	e8 f5 fa ff ff       	call   c010a5be <fd2file>$/;"	l
c010aac9	obj/kernel.asm	/^c010aac9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aacc	obj/kernel.asm	/^c010aacc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aacf	obj/kernel.asm	/^c010aacf:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010aad3	obj/kernel.asm	/^c010aad3:	74 08                	je     c010aadd <file_seek+0x2f>$/;"	l
c010aad5	obj/kernel.asm	/^c010aad5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aad8	obj/kernel.asm	/^c010aad8:	e9 60 01 00 00       	jmp    c010ac3d <file_seek+0x18f>$/;"	l
c010aadd	obj/kernel.asm	/^c010aadd:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010aae0	obj/kernel.asm	/^c010aae0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010aae3	obj/kernel.asm	/^c010aae3:	50                   	push   %eax$/;"	l
c010aae4	obj/kernel.asm	/^c010aae4:	e8 d1 f8 ff ff       	call   c010a3ba <fd_array_acquire>$/;"	l
c010aae9	obj/kernel.asm	/^c010aae9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aaec	obj/kernel.asm	/^c010aaec:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010aaef	obj/kernel.asm	/^c010aaef:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010aaf2	obj/kernel.asm	/^c010aaf2:	74 12                	je     c010ab06 <file_seek+0x58>$/;"	l
c010aaf4	obj/kernel.asm	/^c010aaf4:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010aaf7	obj/kernel.asm	/^c010aaf7:	74 1b                	je     c010ab14 <file_seek+0x66>$/;"	l
c010aaf9	obj/kernel.asm	/^c010aaf9:	85 c0                	test   %eax,%eax$/;"	l
c010aafb	obj/kernel.asm	/^c010aafb:	0f 84 a4 00 00 00    	je     c010aba5 <file_seek+0xf7>$/;"	l
c010ab01	obj/kernel.asm	/^c010ab01:	e9 96 00 00 00       	jmp    c010ab9c <file_seek+0xee>$/;"	l
c010ab06	obj/kernel.asm	/^c010ab06:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010ab09	obj/kernel.asm	/^c010ab09:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010ab0c	obj/kernel.asm	/^c010ab0c:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c010ab0f	obj/kernel.asm	/^c010ab0f:	e9 92 00 00 00       	jmp    c010aba6 <file_seek+0xf8>$/;"	l
c010ab14	obj/kernel.asm	/^c010ab14:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010ab17	obj/kernel.asm	/^c010ab17:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ab1a	obj/kernel.asm	/^c010ab1a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ab1d	obj/kernel.asm	/^c010ab1d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010ab21	obj/kernel.asm	/^c010ab21:	74 17                	je     c010ab3a <file_seek+0x8c>$/;"	l
c010ab23	obj/kernel.asm	/^c010ab23:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ab26	obj/kernel.asm	/^c010ab26:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ab29	obj/kernel.asm	/^c010ab29:	85 c0                	test   %eax,%eax$/;"	l
c010ab2b	obj/kernel.asm	/^c010ab2b:	74 0d                	je     c010ab3a <file_seek+0x8c>$/;"	l
c010ab2d	obj/kernel.asm	/^c010ab2d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ab30	obj/kernel.asm	/^c010ab30:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ab33	obj/kernel.asm	/^c010ab33:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ab36	obj/kernel.asm	/^c010ab36:	85 c0                	test   %eax,%eax$/;"	l
c010ab38	obj/kernel.asm	/^c010ab38:	75 19                	jne    c010ab53 <file_seek+0xa5>$/;"	l
c010ab3a	obj/kernel.asm	/^c010ab3a:	68 78 5e 11 c0       	push   $0xc0115e78$/;"	l
c010ab3f	obj/kernel.asm	/^c010ab3f:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010ab44	obj/kernel.asm	/^c010ab44:	68 16 01 00 00       	push   $0x116$/;"	l
c010ab49	obj/kernel.asm	/^c010ab49:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010ab4e	obj/kernel.asm	/^c010ab4e:	e8 7c 59 ff ff       	call   c01004cf <__panic>$/;"	l
c010ab53	obj/kernel.asm	/^c010ab53:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ab56	obj/kernel.asm	/^c010ab56:	68 c6 5e 11 c0       	push   $0xc0115ec6$/;"	l
c010ab5b	obj/kernel.asm	/^c010ab5b:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010ab5e	obj/kernel.asm	/^c010ab5e:	e8 fb 40 00 00       	call   c010ec5e <inode_check>$/;"	l
c010ab63	obj/kernel.asm	/^c010ab63:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ab66	obj/kernel.asm	/^c010ab66:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ab69	obj/kernel.asm	/^c010ab69:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ab6c	obj/kernel.asm	/^c010ab6c:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ab6f	obj/kernel.asm	/^c010ab6f:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010ab72	obj/kernel.asm	/^c010ab72:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010ab75	obj/kernel.asm	/^c010ab75:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ab78	obj/kernel.asm	/^c010ab78:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010ab7b	obj/kernel.asm	/^c010ab7b:	52                   	push   %edx$/;"	l
c010ab7c	obj/kernel.asm	/^c010ab7c:	ff d0                	call   *%eax$/;"	l
c010ab7e	obj/kernel.asm	/^c010ab7e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ab81	obj/kernel.asm	/^c010ab81:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ab84	obj/kernel.asm	/^c010ab84:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ab88	obj/kernel.asm	/^c010ab88:	75 10                	jne    c010ab9a <file_seek+0xec>$/;"	l
c010ab8a	obj/kernel.asm	/^c010ab8a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ab8d	obj/kernel.asm	/^c010ab8d:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010ab90	obj/kernel.asm	/^c010ab90:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ab93	obj/kernel.asm	/^c010ab93:	01 d0                	add    %edx,%eax$/;"	l
c010ab95	obj/kernel.asm	/^c010ab95:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c010ab98	obj/kernel.asm	/^c010ab98:	eb 0c                	jmp    c010aba6 <file_seek+0xf8>$/;"	l
c010ab9a	obj/kernel.asm	/^c010ab9a:	eb 0a                	jmp    c010aba6 <file_seek+0xf8>$/;"	l
c010ab9c	obj/kernel.asm	/^c010ab9c:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010aba3	obj/kernel.asm	/^c010aba3:	eb 01                	jmp    c010aba6 <file_seek+0xf8>$/;"	l
c010aba5	obj/kernel.asm	/^c010aba5:	90                   	nop$/;"	l
c010aba6	obj/kernel.asm	/^c010aba6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010abaa	obj/kernel.asm	/^c010abaa:	75 7f                	jne    c010ac2b <file_seek+0x17d>$/;"	l
c010abac	obj/kernel.asm	/^c010abac:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010abaf	obj/kernel.asm	/^c010abaf:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010abb2	obj/kernel.asm	/^c010abb2:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010abb5	obj/kernel.asm	/^c010abb5:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010abb9	obj/kernel.asm	/^c010abb9:	74 17                	je     c010abd2 <file_seek+0x124>$/;"	l
c010abbb	obj/kernel.asm	/^c010abbb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010abbe	obj/kernel.asm	/^c010abbe:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010abc1	obj/kernel.asm	/^c010abc1:	85 c0                	test   %eax,%eax$/;"	l
c010abc3	obj/kernel.asm	/^c010abc3:	74 0d                	je     c010abd2 <file_seek+0x124>$/;"	l
c010abc5	obj/kernel.asm	/^c010abc5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010abc8	obj/kernel.asm	/^c010abc8:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010abcb	obj/kernel.asm	/^c010abcb:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010abce	obj/kernel.asm	/^c010abce:	85 c0                	test   %eax,%eax$/;"	l
c010abd0	obj/kernel.asm	/^c010abd0:	75 19                	jne    c010abeb <file_seek+0x13d>$/;"	l
c010abd2	obj/kernel.asm	/^c010abd2:	68 74 5f 11 c0       	push   $0xc0115f74$/;"	l
c010abd7	obj/kernel.asm	/^c010abd7:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010abdc	obj/kernel.asm	/^c010abdc:	68 1e 01 00 00       	push   $0x11e$/;"	l
c010abe1	obj/kernel.asm	/^c010abe1:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010abe6	obj/kernel.asm	/^c010abe6:	e8 e4 58 ff ff       	call   c01004cf <__panic>$/;"	l
c010abeb	obj/kernel.asm	/^c010abeb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010abee	obj/kernel.asm	/^c010abee:	68 c4 5f 11 c0       	push   $0xc0115fc4$/;"	l
c010abf3	obj/kernel.asm	/^c010abf3:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010abf6	obj/kernel.asm	/^c010abf6:	e8 63 40 00 00       	call   c010ec5e <inode_check>$/;"	l
c010abfb	obj/kernel.asm	/^c010abfb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010abfe	obj/kernel.asm	/^c010abfe:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ac01	obj/kernel.asm	/^c010ac01:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ac04	obj/kernel.asm	/^c010ac04:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010ac07	obj/kernel.asm	/^c010ac07:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010ac0a	obj/kernel.asm	/^c010ac0a:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010ac0d	obj/kernel.asm	/^c010ac0d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ac10	obj/kernel.asm	/^c010ac10:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010ac13	obj/kernel.asm	/^c010ac13:	52                   	push   %edx$/;"	l
c010ac14	obj/kernel.asm	/^c010ac14:	ff d0                	call   *%eax$/;"	l
c010ac16	obj/kernel.asm	/^c010ac16:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ac19	obj/kernel.asm	/^c010ac19:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ac1c	obj/kernel.asm	/^c010ac1c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ac20	obj/kernel.asm	/^c010ac20:	75 09                	jne    c010ac2b <file_seek+0x17d>$/;"	l
c010ac22	obj/kernel.asm	/^c010ac22:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010ac25	obj/kernel.asm	/^c010ac25:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010ac28	obj/kernel.asm	/^c010ac28:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010ac2b	obj/kernel.asm	/^c010ac2b:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010ac2e	obj/kernel.asm	/^c010ac2e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ac31	obj/kernel.asm	/^c010ac31:	50                   	push   %eax$/;"	l
c010ac32	obj/kernel.asm	/^c010ac32:	e8 b9 f7 ff ff       	call   c010a3f0 <fd_array_release>$/;"	l
c010ac37	obj/kernel.asm	/^c010ac37:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ac3a	obj/kernel.asm	/^c010ac3a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ac3d	obj/kernel.asm	/^c010ac3d:	c9                   	leave  $/;"	l
c010ac3e	obj/kernel.asm	/^c010ac3e:	c3                   	ret    $/;"	l
c010ac3f	obj/kernel.asm	/^c010ac3f <file_fstat>:$/;"	l
c010ac3f	obj/kernel.asm	/^c010ac3f:	55                   	push   %ebp$/;"	l
c010ac40	obj/kernel.asm	/^c010ac40:	89 e5                	mov    %esp,%ebp$/;"	l
c010ac42	obj/kernel.asm	/^c010ac42:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ac45	obj/kernel.asm	/^c010ac45:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ac48	obj/kernel.asm	/^c010ac48:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010ac4b	obj/kernel.asm	/^c010ac4b:	50                   	push   %eax$/;"	l
c010ac4c	obj/kernel.asm	/^c010ac4c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ac4f	obj/kernel.asm	/^c010ac4f:	e8 6a f9 ff ff       	call   c010a5be <fd2file>$/;"	l
c010ac54	obj/kernel.asm	/^c010ac54:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ac57	obj/kernel.asm	/^c010ac57:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ac5a	obj/kernel.asm	/^c010ac5a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ac5e	obj/kernel.asm	/^c010ac5e:	74 08                	je     c010ac68 <file_fstat+0x29>$/;"	l
c010ac60	obj/kernel.asm	/^c010ac60:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ac63	obj/kernel.asm	/^c010ac63:	e9 91 00 00 00       	jmp    c010acf9 <file_fstat+0xba>$/;"	l
c010ac68	obj/kernel.asm	/^c010ac68:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ac6b	obj/kernel.asm	/^c010ac6b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ac6e	obj/kernel.asm	/^c010ac6e:	50                   	push   %eax$/;"	l
c010ac6f	obj/kernel.asm	/^c010ac6f:	e8 46 f7 ff ff       	call   c010a3ba <fd_array_acquire>$/;"	l
c010ac74	obj/kernel.asm	/^c010ac74:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ac77	obj/kernel.asm	/^c010ac77:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ac7a	obj/kernel.asm	/^c010ac7a:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ac7d	obj/kernel.asm	/^c010ac7d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ac80	obj/kernel.asm	/^c010ac80:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ac84	obj/kernel.asm	/^c010ac84:	74 17                	je     c010ac9d <file_fstat+0x5e>$/;"	l
c010ac86	obj/kernel.asm	/^c010ac86:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ac89	obj/kernel.asm	/^c010ac89:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ac8c	obj/kernel.asm	/^c010ac8c:	85 c0                	test   %eax,%eax$/;"	l
c010ac8e	obj/kernel.asm	/^c010ac8e:	74 0d                	je     c010ac9d <file_fstat+0x5e>$/;"	l
c010ac90	obj/kernel.asm	/^c010ac90:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ac93	obj/kernel.asm	/^c010ac93:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ac96	obj/kernel.asm	/^c010ac96:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ac99	obj/kernel.asm	/^c010ac99:	85 c0                	test   %eax,%eax$/;"	l
c010ac9b	obj/kernel.asm	/^c010ac9b:	75 19                	jne    c010acb6 <file_fstat+0x77>$/;"	l
c010ac9d	obj/kernel.asm	/^c010ac9d:	68 78 5e 11 c0       	push   $0xc0115e78$/;"	l
c010aca2	obj/kernel.asm	/^c010aca2:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010aca7	obj/kernel.asm	/^c010aca7:	68 30 01 00 00       	push   $0x130$/;"	l
c010acac	obj/kernel.asm	/^c010acac:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010acb1	obj/kernel.asm	/^c010acb1:	e8 19 58 ff ff       	call   c01004cf <__panic>$/;"	l
c010acb6	obj/kernel.asm	/^c010acb6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010acb9	obj/kernel.asm	/^c010acb9:	68 c6 5e 11 c0       	push   $0xc0115ec6$/;"	l
c010acbe	obj/kernel.asm	/^c010acbe:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010acc1	obj/kernel.asm	/^c010acc1:	e8 98 3f 00 00       	call   c010ec5e <inode_check>$/;"	l
c010acc6	obj/kernel.asm	/^c010acc6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010acc9	obj/kernel.asm	/^c010acc9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010accc	obj/kernel.asm	/^c010accc:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010accf	obj/kernel.asm	/^c010accf:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010acd2	obj/kernel.asm	/^c010acd2:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010acd5	obj/kernel.asm	/^c010acd5:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010acd8	obj/kernel.asm	/^c010acd8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010acdb	obj/kernel.asm	/^c010acdb:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010acde	obj/kernel.asm	/^c010acde:	52                   	push   %edx$/;"	l
c010acdf	obj/kernel.asm	/^c010acdf:	ff d0                	call   *%eax$/;"	l
c010ace1	obj/kernel.asm	/^c010ace1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ace4	obj/kernel.asm	/^c010ace4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ace7	obj/kernel.asm	/^c010ace7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010acea	obj/kernel.asm	/^c010acea:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010aced	obj/kernel.asm	/^c010aced:	50                   	push   %eax$/;"	l
c010acee	obj/kernel.asm	/^c010acee:	e8 fd f6 ff ff       	call   c010a3f0 <fd_array_release>$/;"	l
c010acf3	obj/kernel.asm	/^c010acf3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010acf6	obj/kernel.asm	/^c010acf6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010acf9	obj/kernel.asm	/^c010acf9:	c9                   	leave  $/;"	l
c010acfa	obj/kernel.asm	/^c010acfa:	c3                   	ret    $/;"	l
c010acfb	obj/kernel.asm	/^c010acfb <file_fsync>:$/;"	l
c010acfb	obj/kernel.asm	/^c010acfb:	55                   	push   %ebp$/;"	l
c010acfc	obj/kernel.asm	/^c010acfc:	89 e5                	mov    %esp,%ebp$/;"	l
c010acfe	obj/kernel.asm	/^c010acfe:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ad01	obj/kernel.asm	/^c010ad01:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ad04	obj/kernel.asm	/^c010ad04:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010ad07	obj/kernel.asm	/^c010ad07:	50                   	push   %eax$/;"	l
c010ad08	obj/kernel.asm	/^c010ad08:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ad0b	obj/kernel.asm	/^c010ad0b:	e8 ae f8 ff ff       	call   c010a5be <fd2file>$/;"	l
c010ad10	obj/kernel.asm	/^c010ad10:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ad13	obj/kernel.asm	/^c010ad13:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ad16	obj/kernel.asm	/^c010ad16:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ad1a	obj/kernel.asm	/^c010ad1a:	74 08                	je     c010ad24 <file_fsync+0x29>$/;"	l
c010ad1c	obj/kernel.asm	/^c010ad1c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ad1f	obj/kernel.asm	/^c010ad1f:	e9 8e 00 00 00       	jmp    c010adb2 <file_fsync+0xb7>$/;"	l
c010ad24	obj/kernel.asm	/^c010ad24:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ad27	obj/kernel.asm	/^c010ad27:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ad2a	obj/kernel.asm	/^c010ad2a:	50                   	push   %eax$/;"	l
c010ad2b	obj/kernel.asm	/^c010ad2b:	e8 8a f6 ff ff       	call   c010a3ba <fd_array_acquire>$/;"	l
c010ad30	obj/kernel.asm	/^c010ad30:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ad33	obj/kernel.asm	/^c010ad33:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ad36	obj/kernel.asm	/^c010ad36:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ad39	obj/kernel.asm	/^c010ad39:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ad3c	obj/kernel.asm	/^c010ad3c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ad40	obj/kernel.asm	/^c010ad40:	74 17                	je     c010ad59 <file_fsync+0x5e>$/;"	l
c010ad42	obj/kernel.asm	/^c010ad42:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ad45	obj/kernel.asm	/^c010ad45:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ad48	obj/kernel.asm	/^c010ad48:	85 c0                	test   %eax,%eax$/;"	l
c010ad4a	obj/kernel.asm	/^c010ad4a:	74 0d                	je     c010ad59 <file_fsync+0x5e>$/;"	l
c010ad4c	obj/kernel.asm	/^c010ad4c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ad4f	obj/kernel.asm	/^c010ad4f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ad52	obj/kernel.asm	/^c010ad52:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ad55	obj/kernel.asm	/^c010ad55:	85 c0                	test   %eax,%eax$/;"	l
c010ad57	obj/kernel.asm	/^c010ad57:	75 19                	jne    c010ad72 <file_fsync+0x77>$/;"	l
c010ad59	obj/kernel.asm	/^c010ad59:	68 cc 5f 11 c0       	push   $0xc0115fcc$/;"	l
c010ad5e	obj/kernel.asm	/^c010ad5e:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010ad63	obj/kernel.asm	/^c010ad63:	68 3e 01 00 00       	push   $0x13e$/;"	l
c010ad68	obj/kernel.asm	/^c010ad68:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010ad6d	obj/kernel.asm	/^c010ad6d:	e8 5d 57 ff ff       	call   c01004cf <__panic>$/;"	l
c010ad72	obj/kernel.asm	/^c010ad72:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ad75	obj/kernel.asm	/^c010ad75:	68 1a 60 11 c0       	push   $0xc011601a$/;"	l
c010ad7a	obj/kernel.asm	/^c010ad7a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010ad7d	obj/kernel.asm	/^c010ad7d:	e8 dc 3e 00 00       	call   c010ec5e <inode_check>$/;"	l
c010ad82	obj/kernel.asm	/^c010ad82:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ad85	obj/kernel.asm	/^c010ad85:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ad88	obj/kernel.asm	/^c010ad88:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ad8b	obj/kernel.asm	/^c010ad8b:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ad8e	obj/kernel.asm	/^c010ad8e:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010ad91	obj/kernel.asm	/^c010ad91:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010ad94	obj/kernel.asm	/^c010ad94:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ad97	obj/kernel.asm	/^c010ad97:	52                   	push   %edx$/;"	l
c010ad98	obj/kernel.asm	/^c010ad98:	ff d0                	call   *%eax$/;"	l
c010ad9a	obj/kernel.asm	/^c010ad9a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ad9d	obj/kernel.asm	/^c010ad9d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ada0	obj/kernel.asm	/^c010ada0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ada3	obj/kernel.asm	/^c010ada3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ada6	obj/kernel.asm	/^c010ada6:	50                   	push   %eax$/;"	l
c010ada7	obj/kernel.asm	/^c010ada7:	e8 44 f6 ff ff       	call   c010a3f0 <fd_array_release>$/;"	l
c010adac	obj/kernel.asm	/^c010adac:	83 c4 10             	add    $0x10,%esp$/;"	l
c010adaf	obj/kernel.asm	/^c010adaf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010adb2	obj/kernel.asm	/^c010adb2:	c9                   	leave  $/;"	l
c010adb3	obj/kernel.asm	/^c010adb3:	c3                   	ret    $/;"	l
c010adb4	obj/kernel.asm	/^c010adb4 <file_getdirentry>:$/;"	l
c010adb4	obj/kernel.asm	/^c010adb4:	55                   	push   %ebp$/;"	l
c010adb5	obj/kernel.asm	/^c010adb5:	89 e5                	mov    %esp,%ebp$/;"	l
c010adb7	obj/kernel.asm	/^c010adb7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010adba	obj/kernel.asm	/^c010adba:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010adbd	obj/kernel.asm	/^c010adbd:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c010adc0	obj/kernel.asm	/^c010adc0:	50                   	push   %eax$/;"	l
c010adc1	obj/kernel.asm	/^c010adc1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010adc4	obj/kernel.asm	/^c010adc4:	e8 f5 f7 ff ff       	call   c010a5be <fd2file>$/;"	l
c010adc9	obj/kernel.asm	/^c010adc9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010adcc	obj/kernel.asm	/^c010adcc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010adcf	obj/kernel.asm	/^c010adcf:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010add3	obj/kernel.asm	/^c010add3:	74 08                	je     c010addd <file_getdirentry+0x29>$/;"	l
c010add5	obj/kernel.asm	/^c010add5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010add8	obj/kernel.asm	/^c010add8:	e9 d8 00 00 00       	jmp    c010aeb5 <file_getdirentry+0x101>$/;"	l
c010addd	obj/kernel.asm	/^c010addd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ade0	obj/kernel.asm	/^c010ade0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ade3	obj/kernel.asm	/^c010ade3:	50                   	push   %eax$/;"	l
c010ade4	obj/kernel.asm	/^c010ade4:	e8 d1 f5 ff ff       	call   c010a3ba <fd_array_acquire>$/;"	l
c010ade9	obj/kernel.asm	/^c010ade9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010adec	obj/kernel.asm	/^c010adec:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010adef	obj/kernel.asm	/^c010adef:	8b 00                	mov    (%eax),%eax$/;"	l
c010adf1	obj/kernel.asm	/^c010adf1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010adf4	obj/kernel.asm	/^c010adf4:	83 c2 04             	add    $0x4,%edx$/;"	l
c010adf7	obj/kernel.asm	/^c010adf7:	50                   	push   %eax$/;"	l
c010adf8	obj/kernel.asm	/^c010adf8:	68 00 01 00 00       	push   $0x100$/;"	l
c010adfd	obj/kernel.asm	/^c010adfd:	52                   	push   %edx$/;"	l
c010adfe	obj/kernel.asm	/^c010adfe:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c010ae01	obj/kernel.asm	/^c010ae01:	50                   	push   %eax$/;"	l
c010ae02	obj/kernel.asm	/^c010ae02:	e8 11 01 00 00       	call   c010af18 <iobuf_init>$/;"	l
c010ae07	obj/kernel.asm	/^c010ae07:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ae0a	obj/kernel.asm	/^c010ae0a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ae0d	obj/kernel.asm	/^c010ae0d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ae10	obj/kernel.asm	/^c010ae10:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ae13	obj/kernel.asm	/^c010ae13:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ae16	obj/kernel.asm	/^c010ae16:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010ae1a	obj/kernel.asm	/^c010ae1a:	74 17                	je     c010ae33 <file_getdirentry+0x7f>$/;"	l
c010ae1c	obj/kernel.asm	/^c010ae1c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ae1f	obj/kernel.asm	/^c010ae1f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ae22	obj/kernel.asm	/^c010ae22:	85 c0                	test   %eax,%eax$/;"	l
c010ae24	obj/kernel.asm	/^c010ae24:	74 0d                	je     c010ae33 <file_getdirentry+0x7f>$/;"	l
c010ae26	obj/kernel.asm	/^c010ae26:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ae29	obj/kernel.asm	/^c010ae29:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ae2c	obj/kernel.asm	/^c010ae2c:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c010ae2f	obj/kernel.asm	/^c010ae2f:	85 c0                	test   %eax,%eax$/;"	l
c010ae31	obj/kernel.asm	/^c010ae31:	75 19                	jne    c010ae4c <file_getdirentry+0x98>$/;"	l
c010ae33	obj/kernel.asm	/^c010ae33:	68 20 60 11 c0       	push   $0xc0116020$/;"	l
c010ae38	obj/kernel.asm	/^c010ae38:	68 36 5d 11 c0       	push   $0xc0115d36$/;"	l
c010ae3d	obj/kernel.asm	/^c010ae3d:	68 4e 01 00 00       	push   $0x14e$/;"	l
c010ae42	obj/kernel.asm	/^c010ae42:	68 4b 5d 11 c0       	push   $0xc0115d4b$/;"	l
c010ae47	obj/kernel.asm	/^c010ae47:	e8 83 56 ff ff       	call   c01004cf <__panic>$/;"	l
c010ae4c	obj/kernel.asm	/^c010ae4c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ae4f	obj/kernel.asm	/^c010ae4f:	68 74 60 11 c0       	push   $0xc0116074$/;"	l
c010ae54	obj/kernel.asm	/^c010ae54:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010ae57	obj/kernel.asm	/^c010ae57:	e8 02 3e 00 00       	call   c010ec5e <inode_check>$/;"	l
c010ae5c	obj/kernel.asm	/^c010ae5c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ae5f	obj/kernel.asm	/^c010ae5f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ae62	obj/kernel.asm	/^c010ae62:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ae65	obj/kernel.asm	/^c010ae65:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c010ae68	obj/kernel.asm	/^c010ae68:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010ae6b	obj/kernel.asm	/^c010ae6b:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010ae6e	obj/kernel.asm	/^c010ae6e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ae71	obj/kernel.asm	/^c010ae71:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010ae74	obj/kernel.asm	/^c010ae74:	52                   	push   %edx$/;"	l
c010ae75	obj/kernel.asm	/^c010ae75:	ff d0                	call   *%eax$/;"	l
c010ae77	obj/kernel.asm	/^c010ae77:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ae7a	obj/kernel.asm	/^c010ae7a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ae7d	obj/kernel.asm	/^c010ae7d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ae81	obj/kernel.asm	/^c010ae81:	75 20                	jne    c010aea3 <file_getdirentry+0xef>$/;"	l
c010ae83	obj/kernel.asm	/^c010ae83:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ae86	obj/kernel.asm	/^c010ae86:	8b 00                	mov    (%eax),%eax$/;"	l
c010ae88	obj/kernel.asm	/^c010ae88:	89 c1                	mov    %eax,%ecx$/;"	l
c010ae8a	obj/kernel.asm	/^c010ae8a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ae8d	obj/kernel.asm	/^c010ae8d:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010ae90	obj/kernel.asm	/^c010ae90:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ae93	obj/kernel.asm	/^c010ae93:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010ae96	obj/kernel.asm	/^c010ae96:	29 c2                	sub    %eax,%edx$/;"	l
c010ae98	obj/kernel.asm	/^c010ae98:	89 d0                	mov    %edx,%eax$/;"	l
c010ae9a	obj/kernel.asm	/^c010ae9a:	01 c8                	add    %ecx,%eax$/;"	l
c010ae9c	obj/kernel.asm	/^c010ae9c:	89 c2                	mov    %eax,%edx$/;"	l
c010ae9e	obj/kernel.asm	/^c010ae9e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aea1	obj/kernel.asm	/^c010aea1:	89 10                	mov    %edx,(%eax)$/;"	l
c010aea3	obj/kernel.asm	/^c010aea3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010aea6	obj/kernel.asm	/^c010aea6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010aea9	obj/kernel.asm	/^c010aea9:	50                   	push   %eax$/;"	l
c010aeaa	obj/kernel.asm	/^c010aeaa:	e8 41 f5 ff ff       	call   c010a3f0 <fd_array_release>$/;"	l
c010aeaf	obj/kernel.asm	/^c010aeaf:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aeb2	obj/kernel.asm	/^c010aeb2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aeb5	obj/kernel.asm	/^c010aeb5:	c9                   	leave  $/;"	l
c010aeb6	obj/kernel.asm	/^c010aeb6:	c3                   	ret    $/;"	l
c010aeb7	obj/kernel.asm	/^c010aeb7 <file_dup>:$/;"	l
c010aeb7	obj/kernel.asm	/^c010aeb7:	55                   	push   %ebp$/;"	l
c010aeb8	obj/kernel.asm	/^c010aeb8:	89 e5                	mov    %esp,%ebp$/;"	l
c010aeba	obj/kernel.asm	/^c010aeba:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010aebd	obj/kernel.asm	/^c010aebd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010aec0	obj/kernel.asm	/^c010aec0:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010aec3	obj/kernel.asm	/^c010aec3:	50                   	push   %eax$/;"	l
c010aec4	obj/kernel.asm	/^c010aec4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010aec7	obj/kernel.asm	/^c010aec7:	e8 f2 f6 ff ff       	call   c010a5be <fd2file>$/;"	l
c010aecc	obj/kernel.asm	/^c010aecc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aecf	obj/kernel.asm	/^c010aecf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aed2	obj/kernel.asm	/^c010aed2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010aed6	obj/kernel.asm	/^c010aed6:	74 05                	je     c010aedd <file_dup+0x26>$/;"	l
c010aed8	obj/kernel.asm	/^c010aed8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aedb	obj/kernel.asm	/^c010aedb:	eb 39                	jmp    c010af16 <file_dup+0x5f>$/;"	l
c010aedd	obj/kernel.asm	/^c010aedd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010aee0	obj/kernel.asm	/^c010aee0:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010aee3	obj/kernel.asm	/^c010aee3:	50                   	push   %eax$/;"	l
c010aee4	obj/kernel.asm	/^c010aee4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010aee7	obj/kernel.asm	/^c010aee7:	e8 81 f3 ff ff       	call   c010a26d <fd_array_alloc>$/;"	l
c010aeec	obj/kernel.asm	/^c010aeec:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aeef	obj/kernel.asm	/^c010aeef:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aef2	obj/kernel.asm	/^c010aef2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010aef6	obj/kernel.asm	/^c010aef6:	74 05                	je     c010aefd <file_dup+0x46>$/;"	l
c010aef8	obj/kernel.asm	/^c010aef8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aefb	obj/kernel.asm	/^c010aefb:	eb 19                	jmp    c010af16 <file_dup+0x5f>$/;"	l
c010aefd	obj/kernel.asm	/^c010aefd:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010af00	obj/kernel.asm	/^c010af00:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010af03	obj/kernel.asm	/^c010af03:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010af06	obj/kernel.asm	/^c010af06:	52                   	push   %edx$/;"	l
c010af07	obj/kernel.asm	/^c010af07:	50                   	push   %eax$/;"	l
c010af08	obj/kernel.asm	/^c010af08:	e8 1f f6 ff ff       	call   c010a52c <fd_array_dup>$/;"	l
c010af0d	obj/kernel.asm	/^c010af0d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010af10	obj/kernel.asm	/^c010af10:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010af13	obj/kernel.asm	/^c010af13:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010af16	obj/kernel.asm	/^c010af16:	c9                   	leave  $/;"	l
c010af17	obj/kernel.asm	/^c010af17:	c3                   	ret    $/;"	l
c010af18	obj/kernel.asm	/^c010af18 <iobuf_init>:$/;"	l
c010af18	obj/kernel.asm	/^c010af18:	55                   	push   %ebp$/;"	l
c010af19	obj/kernel.asm	/^c010af19:	89 e5                	mov    %esp,%ebp$/;"	l
c010af1b	obj/kernel.asm	/^c010af1b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af1e	obj/kernel.asm	/^c010af1e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010af21	obj/kernel.asm	/^c010af21:	89 10                	mov    %edx,(%eax)$/;"	l
c010af23	obj/kernel.asm	/^c010af23:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af26	obj/kernel.asm	/^c010af26:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c010af29	obj/kernel.asm	/^c010af29:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010af2c	obj/kernel.asm	/^c010af2c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af2f	obj/kernel.asm	/^c010af2f:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010af32	obj/kernel.asm	/^c010af32:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010af35	obj/kernel.asm	/^c010af35:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af38	obj/kernel.asm	/^c010af38:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010af3b	obj/kernel.asm	/^c010af3b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af3e	obj/kernel.asm	/^c010af3e:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010af41	obj/kernel.asm	/^c010af41:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af44	obj/kernel.asm	/^c010af44:	5d                   	pop    %ebp$/;"	l
c010af45	obj/kernel.asm	/^c010af45:	c3                   	ret    $/;"	l
c010af46	obj/kernel.asm	/^c010af46 <iobuf_move>:$/;"	l
c010af46	obj/kernel.asm	/^c010af46:	55                   	push   %ebp$/;"	l
c010af47	obj/kernel.asm	/^c010af47:	89 e5                	mov    %esp,%ebp$/;"	l
c010af49	obj/kernel.asm	/^c010af49:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010af4c	obj/kernel.asm	/^c010af4c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af4f	obj/kernel.asm	/^c010af4f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010af52	obj/kernel.asm	/^c010af52:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010af55	obj/kernel.asm	/^c010af55:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af58	obj/kernel.asm	/^c010af58:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010af5b	obj/kernel.asm	/^c010af5b:	76 06                	jbe    c010af63 <iobuf_move+0x1d>$/;"	l
c010af5d	obj/kernel.asm	/^c010af5d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010af60	obj/kernel.asm	/^c010af60:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010af63	obj/kernel.asm	/^c010af63:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010af67	obj/kernel.asm	/^c010af67:	74 51                	je     c010afba <iobuf_move+0x74>$/;"	l
c010af69	obj/kernel.asm	/^c010af69:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af6c	obj/kernel.asm	/^c010af6c:	8b 00                	mov    (%eax),%eax$/;"	l
c010af6e	obj/kernel.asm	/^c010af6e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010af71	obj/kernel.asm	/^c010af71:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010af74	obj/kernel.asm	/^c010af74:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010af77	obj/kernel.asm	/^c010af77:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010af7b	obj/kernel.asm	/^c010af7b:	74 12                	je     c010af8f <iobuf_move+0x49>$/;"	l
c010af7d	obj/kernel.asm	/^c010af7d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010af80	obj/kernel.asm	/^c010af80:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010af83	obj/kernel.asm	/^c010af83:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010af86	obj/kernel.asm	/^c010af86:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010af89	obj/kernel.asm	/^c010af89:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010af8c	obj/kernel.asm	/^c010af8c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010af8f	obj/kernel.asm	/^c010af8f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010af92	obj/kernel.asm	/^c010af92:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010af95	obj/kernel.asm	/^c010af95:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010af98	obj/kernel.asm	/^c010af98:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010af9b	obj/kernel.asm	/^c010af9b:	e8 8c 80 00 00       	call   c011302c <memmove>$/;"	l
c010afa0	obj/kernel.asm	/^c010afa0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010afa3	obj/kernel.asm	/^c010afa3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010afa6	obj/kernel.asm	/^c010afa6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010afa9	obj/kernel.asm	/^c010afa9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010afac	obj/kernel.asm	/^c010afac:	e8 9d 00 00 00       	call   c010b04e <iobuf_skip>$/;"	l
c010afb1	obj/kernel.asm	/^c010afb1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010afb4	obj/kernel.asm	/^c010afb4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010afb7	obj/kernel.asm	/^c010afb7:	29 45 10             	sub    %eax,0x10(%ebp)$/;"	l
c010afba	obj/kernel.asm	/^c010afba:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c010afbe	obj/kernel.asm	/^c010afbe:	74 08                	je     c010afc8 <iobuf_move+0x82>$/;"	l
c010afc0	obj/kernel.asm	/^c010afc0:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010afc3	obj/kernel.asm	/^c010afc3:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010afc6	obj/kernel.asm	/^c010afc6:	89 10                	mov    %edx,(%eax)$/;"	l
c010afc8	obj/kernel.asm	/^c010afc8:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010afcc	obj/kernel.asm	/^c010afcc:	75 07                	jne    c010afd5 <iobuf_move+0x8f>$/;"	l
c010afce	obj/kernel.asm	/^c010afce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010afd3	obj/kernel.asm	/^c010afd3:	eb 05                	jmp    c010afda <iobuf_move+0x94>$/;"	l
c010afd5	obj/kernel.asm	/^c010afd5:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010afda	obj/kernel.asm	/^c010afda:	c9                   	leave  $/;"	l
c010afdb	obj/kernel.asm	/^c010afdb:	c3                   	ret    $/;"	l
c010afdc	obj/kernel.asm	/^c010afdc <iobuf_move_zeros>:$/;"	l
c010afdc	obj/kernel.asm	/^c010afdc:	55                   	push   %ebp$/;"	l
c010afdd	obj/kernel.asm	/^c010afdd:	89 e5                	mov    %esp,%ebp$/;"	l
c010afdf	obj/kernel.asm	/^c010afdf:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010afe2	obj/kernel.asm	/^c010afe2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010afe5	obj/kernel.asm	/^c010afe5:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010afe8	obj/kernel.asm	/^c010afe8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010afeb	obj/kernel.asm	/^c010afeb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010afee	obj/kernel.asm	/^c010afee:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010aff1	obj/kernel.asm	/^c010aff1:	76 06                	jbe    c010aff9 <iobuf_move_zeros+0x1d>$/;"	l
c010aff3	obj/kernel.asm	/^c010aff3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aff6	obj/kernel.asm	/^c010aff6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aff9	obj/kernel.asm	/^c010aff9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010affd	obj/kernel.asm	/^c010affd:	74 2d                	je     c010b02c <iobuf_move_zeros+0x50>$/;"	l
c010afff	obj/kernel.asm	/^c010afff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b002	obj/kernel.asm	/^c010b002:	8b 00                	mov    (%eax),%eax$/;"	l
c010b004	obj/kernel.asm	/^c010b004:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b007	obj/kernel.asm	/^c010b007:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010b00a	obj/kernel.asm	/^c010b00a:	6a 00                	push   $0x0$/;"	l
c010b00c	obj/kernel.asm	/^c010b00c:	50                   	push   %eax$/;"	l
c010b00d	obj/kernel.asm	/^c010b00d:	e8 da 7f 00 00       	call   c0112fec <memset>$/;"	l
c010b012	obj/kernel.asm	/^c010b012:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b015	obj/kernel.asm	/^c010b015:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b018	obj/kernel.asm	/^c010b018:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010b01b	obj/kernel.asm	/^c010b01b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b01e	obj/kernel.asm	/^c010b01e:	e8 2b 00 00 00       	call   c010b04e <iobuf_skip>$/;"	l
c010b023	obj/kernel.asm	/^c010b023:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b026	obj/kernel.asm	/^c010b026:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b029	obj/kernel.asm	/^c010b029:	29 45 0c             	sub    %eax,0xc(%ebp)$/;"	l
c010b02c	obj/kernel.asm	/^c010b02c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b030	obj/kernel.asm	/^c010b030:	74 08                	je     c010b03a <iobuf_move_zeros+0x5e>$/;"	l
c010b032	obj/kernel.asm	/^c010b032:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b035	obj/kernel.asm	/^c010b035:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b038	obj/kernel.asm	/^c010b038:	89 10                	mov    %edx,(%eax)$/;"	l
c010b03a	obj/kernel.asm	/^c010b03a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010b03e	obj/kernel.asm	/^c010b03e:	75 07                	jne    c010b047 <iobuf_move_zeros+0x6b>$/;"	l
c010b040	obj/kernel.asm	/^c010b040:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b045	obj/kernel.asm	/^c010b045:	eb 05                	jmp    c010b04c <iobuf_move_zeros+0x70>$/;"	l
c010b047	obj/kernel.asm	/^c010b047:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010b04c	obj/kernel.asm	/^c010b04c:	c9                   	leave  $/;"	l
c010b04d	obj/kernel.asm	/^c010b04d:	c3                   	ret    $/;"	l
c010b04e	obj/kernel.asm	/^c010b04e <iobuf_skip>:$/;"	l
c010b04e	obj/kernel.asm	/^c010b04e:	55                   	push   %ebp$/;"	l
c010b04f	obj/kernel.asm	/^c010b04f:	89 e5                	mov    %esp,%ebp$/;"	l
c010b051	obj/kernel.asm	/^c010b051:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b054	obj/kernel.asm	/^c010b054:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b057	obj/kernel.asm	/^c010b057:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010b05a	obj/kernel.asm	/^c010b05a:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010b05d	obj/kernel.asm	/^c010b05d:	73 16                	jae    c010b075 <iobuf_skip+0x27>$/;"	l
c010b05f	obj/kernel.asm	/^c010b05f:	68 80 60 11 c0       	push   $0xc0116080$/;"	l
c010b064	obj/kernel.asm	/^c010b064:	68 93 60 11 c0       	push   $0xc0116093$/;"	l
c010b069	obj/kernel.asm	/^c010b069:	6a 4a                	push   $0x4a$/;"	l
c010b06b	obj/kernel.asm	/^c010b06b:	68 a8 60 11 c0       	push   $0xc01160a8$/;"	l
c010b070	obj/kernel.asm	/^c010b070:	e8 5a 54 ff ff       	call   c01004cf <__panic>$/;"	l
c010b075	obj/kernel.asm	/^c010b075:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b078	obj/kernel.asm	/^c010b078:	8b 10                	mov    (%eax),%edx$/;"	l
c010b07a	obj/kernel.asm	/^c010b07a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b07d	obj/kernel.asm	/^c010b07d:	01 c2                	add    %eax,%edx$/;"	l
c010b07f	obj/kernel.asm	/^c010b07f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b082	obj/kernel.asm	/^c010b082:	89 10                	mov    %edx,(%eax)$/;"	l
c010b084	obj/kernel.asm	/^c010b084:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b087	obj/kernel.asm	/^c010b087:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b08a	obj/kernel.asm	/^c010b08a:	89 c2                	mov    %eax,%edx$/;"	l
c010b08c	obj/kernel.asm	/^c010b08c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b08f	obj/kernel.asm	/^c010b08f:	01 d0                	add    %edx,%eax$/;"	l
c010b091	obj/kernel.asm	/^c010b091:	89 c2                	mov    %eax,%edx$/;"	l
c010b093	obj/kernel.asm	/^c010b093:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b096	obj/kernel.asm	/^c010b096:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b099	obj/kernel.asm	/^c010b099:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b09c	obj/kernel.asm	/^c010b09c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010b09f	obj/kernel.asm	/^c010b09f:	2b 45 0c             	sub    0xc(%ebp),%eax$/;"	l
c010b0a2	obj/kernel.asm	/^c010b0a2:	89 c2                	mov    %eax,%edx$/;"	l
c010b0a4	obj/kernel.asm	/^c010b0a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b0a7	obj/kernel.asm	/^c010b0a7:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010b0aa	obj/kernel.asm	/^c010b0aa:	c9                   	leave  $/;"	l
c010b0ab	obj/kernel.asm	/^c010b0ab:	c3                   	ret    $/;"	l
c010b0ac	obj/kernel.asm	/^c010b0ac <files_count>:$/;"	l
c010b0ac	obj/kernel.asm	/^c010b0ac:	55                   	push   %ebp$/;"	l
c010b0ad	obj/kernel.asm	/^c010b0ad:	89 e5                	mov    %esp,%ebp$/;"	l
c010b0af	obj/kernel.asm	/^c010b0af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b0b2	obj/kernel.asm	/^c010b0b2:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010b0b5	obj/kernel.asm	/^c010b0b5:	5d                   	pop    %ebp$/;"	l
c010b0b6	obj/kernel.asm	/^c010b0b6:	c3                   	ret    $/;"	l
c010b0b7	obj/kernel.asm	/^c010b0b7 <fs_init>:$/;"	l
c010b0b7	obj/kernel.asm	/^c010b0b7:	55                   	push   %ebp$/;"	l
c010b0b8	obj/kernel.asm	/^c010b0b8:	89 e5                	mov    %esp,%ebp$/;"	l
c010b0ba	obj/kernel.asm	/^c010b0ba:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b0bd	obj/kernel.asm	/^c010b0bd:	e8 a8 3f 00 00       	call   c010f06a <vfs_init>$/;"	l
c010b0c2	obj/kernel.asm	/^c010b0c2:	e8 54 4d 00 00       	call   c010fe1b <dev_init>$/;"	l
c010b0c7	obj/kernel.asm	/^c010b0c7:	e8 9f 4d 00 00       	call   c010fe6b <sfs_init>$/;"	l
c010b0cc	obj/kernel.asm	/^c010b0cc:	c9                   	leave  $/;"	l
c010b0cd	obj/kernel.asm	/^c010b0cd:	c3                   	ret    $/;"	l
c010b0ce	obj/kernel.asm	/^c010b0ce <fs_cleanup>:$/;"	l
c010b0ce	obj/kernel.asm	/^c010b0ce:	55                   	push   %ebp$/;"	l
c010b0cf	obj/kernel.asm	/^c010b0cf:	89 e5                	mov    %esp,%ebp$/;"	l
c010b0d1	obj/kernel.asm	/^c010b0d1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b0d4	obj/kernel.asm	/^c010b0d4:	e8 80 2b 00 00       	call   c010dc59 <vfs_cleanup>$/;"	l
c010b0d9	obj/kernel.asm	/^c010b0d9:	c9                   	leave  $/;"	l
c010b0da	obj/kernel.asm	/^c010b0da:	c3                   	ret    $/;"	l
c010b0db	obj/kernel.asm	/^c010b0db <lock_files>:$/;"	l
c010b0db	obj/kernel.asm	/^c010b0db:	55                   	push   %ebp$/;"	l
c010b0dc	obj/kernel.asm	/^c010b0dc:	89 e5                	mov    %esp,%ebp$/;"	l
c010b0de	obj/kernel.asm	/^c010b0de:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b0e1	obj/kernel.asm	/^c010b0e1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b0e4	obj/kernel.asm	/^c010b0e4:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010b0e7	obj/kernel.asm	/^c010b0e7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b0ea	obj/kernel.asm	/^c010b0ea:	50                   	push   %eax$/;"	l
c010b0eb	obj/kernel.asm	/^c010b0eb:	e8 cd e5 ff ff       	call   c01096bd <down>$/;"	l
c010b0f0	obj/kernel.asm	/^c010b0f0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b0f3	obj/kernel.asm	/^c010b0f3:	c9                   	leave  $/;"	l
c010b0f4	obj/kernel.asm	/^c010b0f4:	c3                   	ret    $/;"	l
c010b0f5	obj/kernel.asm	/^c010b0f5 <unlock_files>:$/;"	l
c010b0f5	obj/kernel.asm	/^c010b0f5:	55                   	push   %ebp$/;"	l
c010b0f6	obj/kernel.asm	/^c010b0f6:	89 e5                	mov    %esp,%ebp$/;"	l
c010b0f8	obj/kernel.asm	/^c010b0f8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b0fb	obj/kernel.asm	/^c010b0fb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b0fe	obj/kernel.asm	/^c010b0fe:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010b101	obj/kernel.asm	/^c010b101:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b104	obj/kernel.asm	/^c010b104:	50                   	push   %eax$/;"	l
c010b105	obj/kernel.asm	/^c010b105:	e8 98 e5 ff ff       	call   c01096a2 <up>$/;"	l
c010b10a	obj/kernel.asm	/^c010b10a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b10d	obj/kernel.asm	/^c010b10d:	c9                   	leave  $/;"	l
c010b10e	obj/kernel.asm	/^c010b10e:	c3                   	ret    $/;"	l
c010b10f	obj/kernel.asm	/^c010b10f <files_create>:$/;"	l
c010b10f	obj/kernel.asm	/^c010b10f:	55                   	push   %ebp$/;"	l
c010b110	obj/kernel.asm	/^c010b110:	89 e5                	mov    %esp,%ebp$/;"	l
c010b112	obj/kernel.asm	/^c010b112:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b115	obj/kernel.asm	/^c010b115:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b118	obj/kernel.asm	/^c010b118:	68 00 10 00 00       	push   $0x1000$/;"	l
c010b11d	obj/kernel.asm	/^c010b11d:	e8 7d c3 ff ff       	call   c010749f <kmalloc>$/;"	l
c010b122	obj/kernel.asm	/^c010b122:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b125	obj/kernel.asm	/^c010b125:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b128	obj/kernel.asm	/^c010b128:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b12c	obj/kernel.asm	/^c010b12c:	74 45                	je     c010b173 <files_create+0x64>$/;"	l
c010b12e	obj/kernel.asm	/^c010b12e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b131	obj/kernel.asm	/^c010b131:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010b137	obj/kernel.asm	/^c010b137:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b13a	obj/kernel.asm	/^c010b13a:	8d 50 18             	lea    0x18(%eax),%edx$/;"	l
c010b13d	obj/kernel.asm	/^c010b13d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b140	obj/kernel.asm	/^c010b140:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b143	obj/kernel.asm	/^c010b143:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b146	obj/kernel.asm	/^c010b146:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010b14d	obj/kernel.asm	/^c010b14d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b150	obj/kernel.asm	/^c010b150:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010b153	obj/kernel.asm	/^c010b153:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b156	obj/kernel.asm	/^c010b156:	6a 01                	push   $0x1$/;"	l
c010b158	obj/kernel.asm	/^c010b158:	50                   	push   %eax$/;"	l
c010b159	obj/kernel.asm	/^c010b159:	e8 d9 e3 ff ff       	call   c0109537 <sem_init>$/;"	l
c010b15e	obj/kernel.asm	/^c010b15e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b161	obj/kernel.asm	/^c010b161:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b164	obj/kernel.asm	/^c010b164:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b167	obj/kernel.asm	/^c010b167:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b16a	obj/kernel.asm	/^c010b16a:	50                   	push   %eax$/;"	l
c010b16b	obj/kernel.asm	/^c010b16b:	e8 b8 f0 ff ff       	call   c010a228 <fd_array_init>$/;"	l
c010b170	obj/kernel.asm	/^c010b170:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b173	obj/kernel.asm	/^c010b173:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b176	obj/kernel.asm	/^c010b176:	c9                   	leave  $/;"	l
c010b177	obj/kernel.asm	/^c010b177:	c3                   	ret    $/;"	l
c010b178	obj/kernel.asm	/^c010b178 <files_destroy>:$/;"	l
c010b178	obj/kernel.asm	/^c010b178:	55                   	push   %ebp$/;"	l
c010b179	obj/kernel.asm	/^c010b179:	89 e5                	mov    %esp,%ebp$/;"	l
c010b17b	obj/kernel.asm	/^c010b17b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b17e	obj/kernel.asm	/^c010b17e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b182	obj/kernel.asm	/^c010b182:	74 0f                	je     c010b193 <files_destroy+0x1b>$/;"	l
c010b184	obj/kernel.asm	/^c010b184:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b187	obj/kernel.asm	/^c010b187:	e8 20 ff ff ff       	call   c010b0ac <files_count>$/;"	l
c010b18c	obj/kernel.asm	/^c010b18c:	83 c4 04             	add    $0x4,%esp$/;"	l
c010b18f	obj/kernel.asm	/^c010b18f:	85 c0                	test   %eax,%eax$/;"	l
c010b191	obj/kernel.asm	/^c010b191:	74 16                	je     c010b1a9 <files_destroy+0x31>$/;"	l
c010b193	obj/kernel.asm	/^c010b193:	68 b8 60 11 c0       	push   $0xc01160b8$/;"	l
c010b198	obj/kernel.asm	/^c010b198:	68 e3 60 11 c0       	push   $0xc01160e3$/;"	l
c010b19d	obj/kernel.asm	/^c010b19d:	6a 33                	push   $0x33$/;"	l
c010b19f	obj/kernel.asm	/^c010b19f:	68 f8 60 11 c0       	push   $0xc01160f8$/;"	l
c010b1a4	obj/kernel.asm	/^c010b1a4:	e8 26 53 ff ff       	call   c01004cf <__panic>$/;"	l
c010b1a9	obj/kernel.asm	/^c010b1a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1ac	obj/kernel.asm	/^c010b1ac:	8b 00                	mov    (%eax),%eax$/;"	l
c010b1ae	obj/kernel.asm	/^c010b1ae:	85 c0                	test   %eax,%eax$/;"	l
c010b1b0	obj/kernel.asm	/^c010b1b0:	74 11                	je     c010b1c3 <files_destroy+0x4b>$/;"	l
c010b1b2	obj/kernel.asm	/^c010b1b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1b5	obj/kernel.asm	/^c010b1b5:	8b 00                	mov    (%eax),%eax$/;"	l
c010b1b7	obj/kernel.asm	/^c010b1b7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b1ba	obj/kernel.asm	/^c010b1ba:	50                   	push   %eax$/;"	l
c010b1bb	obj/kernel.asm	/^c010b1bb:	e8 e6 38 00 00       	call   c010eaa6 <inode_ref_dec>$/;"	l
c010b1c0	obj/kernel.asm	/^c010b1c0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b1c3	obj/kernel.asm	/^c010b1c3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1c6	obj/kernel.asm	/^c010b1c6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b1c9	obj/kernel.asm	/^c010b1c9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b1cc	obj/kernel.asm	/^c010b1cc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b1d3	obj/kernel.asm	/^c010b1d3:	eb 3f                	jmp    c010b214 <files_destroy+0x9c>$/;"	l
c010b1d5	obj/kernel.asm	/^c010b1d5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b1d8	obj/kernel.asm	/^c010b1d8:	8b 00                	mov    (%eax),%eax$/;"	l
c010b1da	obj/kernel.asm	/^c010b1da:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010b1dd	obj/kernel.asm	/^c010b1dd:	75 0e                	jne    c010b1ed <files_destroy+0x75>$/;"	l
c010b1df	obj/kernel.asm	/^c010b1df:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b1e2	obj/kernel.asm	/^c010b1e2:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010b1e5	obj/kernel.asm	/^c010b1e5:	e8 c9 f2 ff ff       	call   c010a4b3 <fd_array_close>$/;"	l
c010b1ea	obj/kernel.asm	/^c010b1ea:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b1ed	obj/kernel.asm	/^c010b1ed:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b1f0	obj/kernel.asm	/^c010b1f0:	8b 00                	mov    (%eax),%eax$/;"	l
c010b1f2	obj/kernel.asm	/^c010b1f2:	85 c0                	test   %eax,%eax$/;"	l
c010b1f4	obj/kernel.asm	/^c010b1f4:	74 16                	je     c010b20c <files_destroy+0x94>$/;"	l
c010b1f6	obj/kernel.asm	/^c010b1f6:	68 05 61 11 c0       	push   $0xc0116105$/;"	l
c010b1fb	obj/kernel.asm	/^c010b1fb:	68 e3 60 11 c0       	push   $0xc01160e3$/;"	l
c010b200	obj/kernel.asm	/^c010b200:	6a 3d                	push   $0x3d$/;"	l
c010b202	obj/kernel.asm	/^c010b202:	68 f8 60 11 c0       	push   $0xc01160f8$/;"	l
c010b207	obj/kernel.asm	/^c010b207:	e8 c3 52 ff ff       	call   c01004cf <__panic>$/;"	l
c010b20c	obj/kernel.asm	/^c010b20c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010b210	obj/kernel.asm	/^c010b210:	83 45 f0 1c          	addl   $0x1c,-0x10(%ebp)$/;"	l
c010b214	obj/kernel.asm	/^c010b214:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b217	obj/kernel.asm	/^c010b217:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010b21c	obj/kernel.asm	/^c010b21c:	76 b7                	jbe    c010b1d5 <files_destroy+0x5d>$/;"	l
c010b21e	obj/kernel.asm	/^c010b21e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b221	obj/kernel.asm	/^c010b221:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b224	obj/kernel.asm	/^c010b224:	e8 8e c2 ff ff       	call   c01074b7 <kfree>$/;"	l
c010b229	obj/kernel.asm	/^c010b229:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b22c	obj/kernel.asm	/^c010b22c:	c9                   	leave  $/;"	l
c010b22d	obj/kernel.asm	/^c010b22d:	c3                   	ret    $/;"	l
c010b22e	obj/kernel.asm	/^c010b22e <files_closeall>:$/;"	l
c010b22e	obj/kernel.asm	/^c010b22e:	55                   	push   %ebp$/;"	l
c010b22f	obj/kernel.asm	/^c010b22f:	89 e5                	mov    %esp,%ebp$/;"	l
c010b231	obj/kernel.asm	/^c010b231:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b234	obj/kernel.asm	/^c010b234:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b238	obj/kernel.asm	/^c010b238:	74 0f                	je     c010b249 <files_closeall+0x1b>$/;"	l
c010b23a	obj/kernel.asm	/^c010b23a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b23d	obj/kernel.asm	/^c010b23d:	e8 6a fe ff ff       	call   c010b0ac <files_count>$/;"	l
c010b242	obj/kernel.asm	/^c010b242:	83 c4 04             	add    $0x4,%esp$/;"	l
c010b245	obj/kernel.asm	/^c010b245:	85 c0                	test   %eax,%eax$/;"	l
c010b247	obj/kernel.asm	/^c010b247:	7f 16                	jg     c010b25f <files_closeall+0x31>$/;"	l
c010b249	obj/kernel.asm	/^c010b249:	68 20 61 11 c0       	push   $0xc0116120$/;"	l
c010b24e	obj/kernel.asm	/^c010b24e:	68 e3 60 11 c0       	push   $0xc01160e3$/;"	l
c010b253	obj/kernel.asm	/^c010b253:	6a 45                	push   $0x45$/;"	l
c010b255	obj/kernel.asm	/^c010b255:	68 f8 60 11 c0       	push   $0xc01160f8$/;"	l
c010b25a	obj/kernel.asm	/^c010b25a:	e8 70 52 ff ff       	call   c01004cf <__panic>$/;"	l
c010b25f	obj/kernel.asm	/^c010b25f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b262	obj/kernel.asm	/^c010b262:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b265	obj/kernel.asm	/^c010b265:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b268	obj/kernel.asm	/^c010b268:	c7 45 f4 02 00 00 00 	movl   $0x2,-0xc(%ebp)$/;"	l
c010b26f	obj/kernel.asm	/^c010b26f:	83 45 f0 38          	addl   $0x38,-0x10(%ebp)$/;"	l
c010b273	obj/kernel.asm	/^c010b273:	eb 20                	jmp    c010b295 <files_closeall+0x67>$/;"	l
c010b275	obj/kernel.asm	/^c010b275:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b278	obj/kernel.asm	/^c010b278:	8b 00                	mov    (%eax),%eax$/;"	l
c010b27a	obj/kernel.asm	/^c010b27a:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010b27d	obj/kernel.asm	/^c010b27d:	75 0e                	jne    c010b28d <files_closeall+0x5f>$/;"	l
c010b27f	obj/kernel.asm	/^c010b27f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b282	obj/kernel.asm	/^c010b282:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010b285	obj/kernel.asm	/^c010b285:	e8 29 f2 ff ff       	call   c010a4b3 <fd_array_close>$/;"	l
c010b28a	obj/kernel.asm	/^c010b28a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b28d	obj/kernel.asm	/^c010b28d:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010b291	obj/kernel.asm	/^c010b291:	83 45 f0 1c          	addl   $0x1c,-0x10(%ebp)$/;"	l
c010b295	obj/kernel.asm	/^c010b295:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b298	obj/kernel.asm	/^c010b298:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010b29d	obj/kernel.asm	/^c010b29d:	76 d6                	jbe    c010b275 <files_closeall+0x47>$/;"	l
c010b29f	obj/kernel.asm	/^c010b29f:	c9                   	leave  $/;"	l
c010b2a0	obj/kernel.asm	/^c010b2a0:	c3                   	ret    $/;"	l
c010b2a1	obj/kernel.asm	/^c010b2a1 <dup_files>:$/;"	l
c010b2a1	obj/kernel.asm	/^c010b2a1:	55                   	push   %ebp$/;"	l
c010b2a2	obj/kernel.asm	/^c010b2a2:	89 e5                	mov    %esp,%ebp$/;"	l
c010b2a4	obj/kernel.asm	/^c010b2a4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b2a7	obj/kernel.asm	/^c010b2a7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b2ab	obj/kernel.asm	/^c010b2ab:	74 06                	je     c010b2b3 <dup_files+0x12>$/;"	l
c010b2ad	obj/kernel.asm	/^c010b2ad:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010b2b1	obj/kernel.asm	/^c010b2b1:	75 16                	jne    c010b2c9 <dup_files+0x28>$/;"	l
c010b2b3	obj/kernel.asm	/^c010b2b3:	68 4a 61 11 c0       	push   $0xc011614a$/;"	l
c010b2b8	obj/kernel.asm	/^c010b2b8:	68 e3 60 11 c0       	push   $0xc01160e3$/;"	l
c010b2bd	obj/kernel.asm	/^c010b2bd:	6a 53                	push   $0x53$/;"	l
c010b2bf	obj/kernel.asm	/^c010b2bf:	68 f8 60 11 c0       	push   $0xc01160f8$/;"	l
c010b2c4	obj/kernel.asm	/^c010b2c4:	e8 06 52 ff ff       	call   c01004cf <__panic>$/;"	l
c010b2c9	obj/kernel.asm	/^c010b2c9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b2cc	obj/kernel.asm	/^c010b2cc:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b2cf	obj/kernel.asm	/^c010b2cf:	e8 d8 fd ff ff       	call   c010b0ac <files_count>$/;"	l
c010b2d4	obj/kernel.asm	/^c010b2d4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b2d7	obj/kernel.asm	/^c010b2d7:	85 c0                	test   %eax,%eax$/;"	l
c010b2d9	obj/kernel.asm	/^c010b2d9:	75 12                	jne    c010b2ed <dup_files+0x4c>$/;"	l
c010b2db	obj/kernel.asm	/^c010b2db:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b2de	obj/kernel.asm	/^c010b2de:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b2e1	obj/kernel.asm	/^c010b2e1:	e8 c6 fd ff ff       	call   c010b0ac <files_count>$/;"	l
c010b2e6	obj/kernel.asm	/^c010b2e6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b2e9	obj/kernel.asm	/^c010b2e9:	85 c0                	test   %eax,%eax$/;"	l
c010b2eb	obj/kernel.asm	/^c010b2eb:	7f 16                	jg     c010b303 <dup_files+0x62>$/;"	l
c010b2ed	obj/kernel.asm	/^c010b2ed:	68 68 61 11 c0       	push   $0xc0116168$/;"	l
c010b2f2	obj/kernel.asm	/^c010b2f2:	68 e3 60 11 c0       	push   $0xc01160e3$/;"	l
c010b2f7	obj/kernel.asm	/^c010b2f7:	6a 54                	push   $0x54$/;"	l
c010b2f9	obj/kernel.asm	/^c010b2f9:	68 f8 60 11 c0       	push   $0xc01160f8$/;"	l
c010b2fe	obj/kernel.asm	/^c010b2fe:	e8 cc 51 ff ff       	call   c01004cf <__panic>$/;"	l
c010b303	obj/kernel.asm	/^c010b303:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b306	obj/kernel.asm	/^c010b306:	8b 10                	mov    (%eax),%edx$/;"	l
c010b308	obj/kernel.asm	/^c010b308:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b30b	obj/kernel.asm	/^c010b30b:	89 10                	mov    %edx,(%eax)$/;"	l
c010b30d	obj/kernel.asm	/^c010b30d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b310	obj/kernel.asm	/^c010b310:	8b 00                	mov    (%eax),%eax$/;"	l
c010b312	obj/kernel.asm	/^c010b312:	85 c0                	test   %eax,%eax$/;"	l
c010b314	obj/kernel.asm	/^c010b314:	74 11                	je     c010b327 <dup_files+0x86>$/;"	l
c010b316	obj/kernel.asm	/^c010b316:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b319	obj/kernel.asm	/^c010b319:	8b 00                	mov    (%eax),%eax$/;"	l
c010b31b	obj/kernel.asm	/^c010b31b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b31e	obj/kernel.asm	/^c010b31e:	50                   	push   %eax$/;"	l
c010b31f	obj/kernel.asm	/^c010b31f:	e8 68 37 00 00       	call   c010ea8c <inode_ref_inc>$/;"	l
c010b324	obj/kernel.asm	/^c010b324:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b327	obj/kernel.asm	/^c010b327:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b32a	obj/kernel.asm	/^c010b32a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b32d	obj/kernel.asm	/^c010b32d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b330	obj/kernel.asm	/^c010b330:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b333	obj/kernel.asm	/^c010b333:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b336	obj/kernel.asm	/^c010b336:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b339	obj/kernel.asm	/^c010b339:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b340	obj/kernel.asm	/^c010b340:	eb 30                	jmp    c010b372 <dup_files+0xd1>$/;"	l
c010b342	obj/kernel.asm	/^c010b342:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b345	obj/kernel.asm	/^c010b345:	8b 00                	mov    (%eax),%eax$/;"	l
c010b347	obj/kernel.asm	/^c010b347:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010b34a	obj/kernel.asm	/^c010b34a:	75 1a                	jne    c010b366 <dup_files+0xc5>$/;"	l
c010b34c	obj/kernel.asm	/^c010b34c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b34f	obj/kernel.asm	/^c010b34f:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010b355	obj/kernel.asm	/^c010b355:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b358	obj/kernel.asm	/^c010b358:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010b35b	obj/kernel.asm	/^c010b35b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010b35e	obj/kernel.asm	/^c010b35e:	e8 c9 f1 ff ff       	call   c010a52c <fd_array_dup>$/;"	l
c010b363	obj/kernel.asm	/^c010b363:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b366	obj/kernel.asm	/^c010b366:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010b36a	obj/kernel.asm	/^c010b36a:	83 45 f0 1c          	addl   $0x1c,-0x10(%ebp)$/;"	l
c010b36e	obj/kernel.asm	/^c010b36e:	83 45 ec 1c          	addl   $0x1c,-0x14(%ebp)$/;"	l
c010b372	obj/kernel.asm	/^c010b372:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b375	obj/kernel.asm	/^c010b375:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010b37a	obj/kernel.asm	/^c010b37a:	76 c6                	jbe    c010b342 <dup_files+0xa1>$/;"	l
c010b37c	obj/kernel.asm	/^c010b37c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b381	obj/kernel.asm	/^c010b381:	c9                   	leave  $/;"	l
c010b382	obj/kernel.asm	/^c010b382:	c3                   	ret    $/;"	l
c010b383	obj/kernel.asm	/^c010b383 <kernel_thread_entry>:$/;"	l
c010b383	obj/kernel.asm	/^c010b383:	52                   	push   %edx$/;"	l
c010b384	obj/kernel.asm	/^c010b384:	ff d3                	call   *%ebx$/;"	l
c010b386	obj/kernel.asm	/^c010b386:	50                   	push   %eax$/;"	l
c010b387	obj/kernel.asm	/^c010b387:	e8 af 0d 00 00       	call   c010c13b <do_exit>$/;"	l
c010b38c	obj/kernel.asm	/^c010b38c <switch_to>:$/;"	l
c010b38c	obj/kernel.asm	/^c010b38c:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c010b390	obj/kernel.asm	/^c010b390:	8f 00                	popl   (%eax)$/;"	l
c010b392	obj/kernel.asm	/^c010b392:	89 60 04             	mov    %esp,0x4(%eax)$/;"	l
c010b395	obj/kernel.asm	/^c010b395:	89 58 08             	mov    %ebx,0x8(%eax)$/;"	l
c010b398	obj/kernel.asm	/^c010b398:	89 48 0c             	mov    %ecx,0xc(%eax)$/;"	l
c010b39b	obj/kernel.asm	/^c010b39b:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010b39e	obj/kernel.asm	/^c010b39e:	89 70 14             	mov    %esi,0x14(%eax)$/;"	l
c010b3a1	obj/kernel.asm	/^c010b3a1:	89 78 18             	mov    %edi,0x18(%eax)$/;"	l
c010b3a4	obj/kernel.asm	/^c010b3a4:	89 68 1c             	mov    %ebp,0x1c(%eax)$/;"	l
c010b3a7	obj/kernel.asm	/^c010b3a7:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c010b3ab	obj/kernel.asm	/^c010b3ab:	8b 68 1c             	mov    0x1c(%eax),%ebp$/;"	l
c010b3ae	obj/kernel.asm	/^c010b3ae:	8b 78 18             	mov    0x18(%eax),%edi$/;"	l
c010b3b1	obj/kernel.asm	/^c010b3b1:	8b 70 14             	mov    0x14(%eax),%esi$/;"	l
c010b3b4	obj/kernel.asm	/^c010b3b4:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010b3b7	obj/kernel.asm	/^c010b3b7:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c010b3ba	obj/kernel.asm	/^c010b3ba:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c010b3bd	obj/kernel.asm	/^c010b3bd:	8b 60 04             	mov    0x4(%eax),%esp$/;"	l
c010b3c0	obj/kernel.asm	/^c010b3c0:	ff 30                	pushl  (%eax)$/;"	l
c010b3c2	obj/kernel.asm	/^c010b3c2:	c3                   	ret    $/;"	l
c010b3c3	obj/kernel.asm	/^c010b3c3 <timer_init>:$/;"	l
c010b3c3	obj/kernel.asm	/^c010b3c3:	55                   	push   %ebp$/;"	l
c010b3c4	obj/kernel.asm	/^c010b3c4:	89 e5                	mov    %esp,%ebp$/;"	l
c010b3c6	obj/kernel.asm	/^c010b3c6:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010b3c9	obj/kernel.asm	/^c010b3c9:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010b3cc	obj/kernel.asm	/^c010b3cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b3cf	obj/kernel.asm	/^c010b3cf:	89 10                	mov    %edx,(%eax)$/;"	l
c010b3d1	obj/kernel.asm	/^c010b3d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b3d4	obj/kernel.asm	/^c010b3d4:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010b3d7	obj/kernel.asm	/^c010b3d7:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b3da	obj/kernel.asm	/^c010b3da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b3dd	obj/kernel.asm	/^c010b3dd:	83 c0 08             	add    $0x8,%eax$/;"	l
c010b3e0	obj/kernel.asm	/^c010b3e0:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010b3e3	obj/kernel.asm	/^c010b3e3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b3e6	obj/kernel.asm	/^c010b3e6:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010b3e9	obj/kernel.asm	/^c010b3e9:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b3ec	obj/kernel.asm	/^c010b3ec:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b3ef	obj/kernel.asm	/^c010b3ef:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b3f2	obj/kernel.asm	/^c010b3f2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b3f5	obj/kernel.asm	/^c010b3f5:	89 10                	mov    %edx,(%eax)$/;"	l
c010b3f7	obj/kernel.asm	/^c010b3f7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b3fa	obj/kernel.asm	/^c010b3fa:	c9                   	leave  $/;"	l
c010b3fb	obj/kernel.asm	/^c010b3fb:	c3                   	ret    $/;"	l
c010b3fc	obj/kernel.asm	/^c010b3fc <__intr_save>:$/;"	l
c010b3fc	obj/kernel.asm	/^c010b3fc:	55                   	push   %ebp$/;"	l
c010b3fd	obj/kernel.asm	/^c010b3fd:	89 e5                	mov    %esp,%ebp$/;"	l
c010b3ff	obj/kernel.asm	/^c010b3ff:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b402	obj/kernel.asm	/^c010b402:	9c                   	pushf  $/;"	l
c010b403	obj/kernel.asm	/^c010b403:	58                   	pop    %eax$/;"	l
c010b404	obj/kernel.asm	/^c010b404:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b407	obj/kernel.asm	/^c010b407:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b40a	obj/kernel.asm	/^c010b40a:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010b40f	obj/kernel.asm	/^c010b40f:	85 c0                	test   %eax,%eax$/;"	l
c010b411	obj/kernel.asm	/^c010b411:	74 0c                	je     c010b41f <__intr_save+0x23>$/;"	l
c010b413	obj/kernel.asm	/^c010b413:	e8 84 6d ff ff       	call   c010219c <intr_disable>$/;"	l
c010b418	obj/kernel.asm	/^c010b418:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010b41d	obj/kernel.asm	/^c010b41d:	eb 05                	jmp    c010b424 <__intr_save+0x28>$/;"	l
c010b41f	obj/kernel.asm	/^c010b41f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b424	obj/kernel.asm	/^c010b424:	c9                   	leave  $/;"	l
c010b425	obj/kernel.asm	/^c010b425:	c3                   	ret    $/;"	l
c010b426	obj/kernel.asm	/^c010b426 <__intr_restore>:$/;"	l
c010b426	obj/kernel.asm	/^c010b426:	55                   	push   %ebp$/;"	l
c010b427	obj/kernel.asm	/^c010b427:	89 e5                	mov    %esp,%ebp$/;"	l
c010b429	obj/kernel.asm	/^c010b429:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b42c	obj/kernel.asm	/^c010b42c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b430	obj/kernel.asm	/^c010b430:	74 05                	je     c010b437 <__intr_restore+0x11>$/;"	l
c010b432	obj/kernel.asm	/^c010b432:	e8 5f 6d ff ff       	call   c0102196 <intr_enable>$/;"	l
c010b437	obj/kernel.asm	/^c010b437:	c9                   	leave  $/;"	l
c010b438	obj/kernel.asm	/^c010b438:	c3                   	ret    $/;"	l
c010b439	obj/kernel.asm	/^c010b439 <page2ppn>:$/;"	l
c010b439	obj/kernel.asm	/^c010b439:	55                   	push   %ebp$/;"	l
c010b43a	obj/kernel.asm	/^c010b43a:	89 e5                	mov    %esp,%ebp$/;"	l
c010b43c	obj/kernel.asm	/^c010b43c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b43f	obj/kernel.asm	/^c010b43f:	8b 15 18 12 15 c0    	mov    0xc0151218,%edx$/;"	l
c010b445	obj/kernel.asm	/^c010b445:	29 d0                	sub    %edx,%eax$/;"	l
c010b447	obj/kernel.asm	/^c010b447:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c010b44a	obj/kernel.asm	/^c010b44a:	5d                   	pop    %ebp$/;"	l
c010b44b	obj/kernel.asm	/^c010b44b:	c3                   	ret    $/;"	l
c010b44c	obj/kernel.asm	/^c010b44c <page2pa>:$/;"	l
c010b44c	obj/kernel.asm	/^c010b44c:	55                   	push   %ebp$/;"	l
c010b44d	obj/kernel.asm	/^c010b44d:	89 e5                	mov    %esp,%ebp$/;"	l
c010b44f	obj/kernel.asm	/^c010b44f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b452	obj/kernel.asm	/^c010b452:	e8 e2 ff ff ff       	call   c010b439 <page2ppn>$/;"	l
c010b457	obj/kernel.asm	/^c010b457:	83 c4 04             	add    $0x4,%esp$/;"	l
c010b45a	obj/kernel.asm	/^c010b45a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010b45d	obj/kernel.asm	/^c010b45d:	c9                   	leave  $/;"	l
c010b45e	obj/kernel.asm	/^c010b45e:	c3                   	ret    $/;"	l
c010b45f	obj/kernel.asm	/^c010b45f <pa2page>:$/;"	l
c010b45f	obj/kernel.asm	/^c010b45f:	55                   	push   %ebp$/;"	l
c010b460	obj/kernel.asm	/^c010b460:	89 e5                	mov    %esp,%ebp$/;"	l
c010b462	obj/kernel.asm	/^c010b462:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b465	obj/kernel.asm	/^c010b465:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b468	obj/kernel.asm	/^c010b468:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010b46b	obj/kernel.asm	/^c010b46b:	89 c2                	mov    %eax,%edx$/;"	l
c010b46d	obj/kernel.asm	/^c010b46d:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c010b472	obj/kernel.asm	/^c010b472:	39 c2                	cmp    %eax,%edx$/;"	l
c010b474	obj/kernel.asm	/^c010b474:	72 14                	jb     c010b48a <pa2page+0x2b>$/;"	l
c010b476	obj/kernel.asm	/^c010b476:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b479	obj/kernel.asm	/^c010b479:	68 98 61 11 c0       	push   $0xc0116198$/;"	l
c010b47e	obj/kernel.asm	/^c010b47e:	6a 5e                	push   $0x5e$/;"	l
c010b480	obj/kernel.asm	/^c010b480:	68 b7 61 11 c0       	push   $0xc01161b7$/;"	l
c010b485	obj/kernel.asm	/^c010b485:	e8 45 50 ff ff       	call   c01004cf <__panic>$/;"	l
c010b48a	obj/kernel.asm	/^c010b48a:	a1 18 12 15 c0       	mov    0xc0151218,%eax$/;"	l
c010b48f	obj/kernel.asm	/^c010b48f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b492	obj/kernel.asm	/^c010b492:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c010b495	obj/kernel.asm	/^c010b495:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c010b498	obj/kernel.asm	/^c010b498:	01 d0                	add    %edx,%eax$/;"	l
c010b49a	obj/kernel.asm	/^c010b49a:	c9                   	leave  $/;"	l
c010b49b	obj/kernel.asm	/^c010b49b:	c3                   	ret    $/;"	l
c010b49c	obj/kernel.asm	/^c010b49c <page2kva>:$/;"	l
c010b49c	obj/kernel.asm	/^c010b49c:	55                   	push   %ebp$/;"	l
c010b49d	obj/kernel.asm	/^c010b49d:	89 e5                	mov    %esp,%ebp$/;"	l
c010b49f	obj/kernel.asm	/^c010b49f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b4a2	obj/kernel.asm	/^c010b4a2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b4a5	obj/kernel.asm	/^c010b4a5:	e8 a2 ff ff ff       	call   c010b44c <page2pa>$/;"	l
c010b4aa	obj/kernel.asm	/^c010b4aa:	83 c4 04             	add    $0x4,%esp$/;"	l
c010b4ad	obj/kernel.asm	/^c010b4ad:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b4b0	obj/kernel.asm	/^c010b4b0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b4b3	obj/kernel.asm	/^c010b4b3:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010b4b6	obj/kernel.asm	/^c010b4b6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b4b9	obj/kernel.asm	/^c010b4b9:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c010b4be	obj/kernel.asm	/^c010b4be:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010b4c1	obj/kernel.asm	/^c010b4c1:	72 14                	jb     c010b4d7 <page2kva+0x3b>$/;"	l
c010b4c3	obj/kernel.asm	/^c010b4c3:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010b4c6	obj/kernel.asm	/^c010b4c6:	68 c8 61 11 c0       	push   $0xc01161c8$/;"	l
c010b4cb	obj/kernel.asm	/^c010b4cb:	6a 65                	push   $0x65$/;"	l
c010b4cd	obj/kernel.asm	/^c010b4cd:	68 b7 61 11 c0       	push   $0xc01161b7$/;"	l
c010b4d2	obj/kernel.asm	/^c010b4d2:	e8 f8 4f ff ff       	call   c01004cf <__panic>$/;"	l
c010b4d7	obj/kernel.asm	/^c010b4d7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b4da	obj/kernel.asm	/^c010b4da:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c010b4df	obj/kernel.asm	/^c010b4df:	c9                   	leave  $/;"	l
c010b4e0	obj/kernel.asm	/^c010b4e0:	c3                   	ret    $/;"	l
c010b4e1	obj/kernel.asm	/^c010b4e1 <kva2page>:$/;"	l
c010b4e1	obj/kernel.asm	/^c010b4e1:	55                   	push   %ebp$/;"	l
c010b4e2	obj/kernel.asm	/^c010b4e2:	89 e5                	mov    %esp,%ebp$/;"	l
c010b4e4	obj/kernel.asm	/^c010b4e4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b4e7	obj/kernel.asm	/^c010b4e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b4ea	obj/kernel.asm	/^c010b4ea:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b4ed	obj/kernel.asm	/^c010b4ed:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c010b4f4	obj/kernel.asm	/^c010b4f4:	77 14                	ja     c010b50a <kva2page+0x29>$/;"	l
c010b4f6	obj/kernel.asm	/^c010b4f6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010b4f9	obj/kernel.asm	/^c010b4f9:	68 ec 61 11 c0       	push   $0xc01161ec$/;"	l
c010b4fe	obj/kernel.asm	/^c010b4fe:	6a 6a                	push   $0x6a$/;"	l
c010b500	obj/kernel.asm	/^c010b500:	68 b7 61 11 c0       	push   $0xc01161b7$/;"	l
c010b505	obj/kernel.asm	/^c010b505:	e8 c5 4f ff ff       	call   c01004cf <__panic>$/;"	l
c010b50a	obj/kernel.asm	/^c010b50a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b50d	obj/kernel.asm	/^c010b50d:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010b512	obj/kernel.asm	/^c010b512:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b515	obj/kernel.asm	/^c010b515:	50                   	push   %eax$/;"	l
c010b516	obj/kernel.asm	/^c010b516:	e8 44 ff ff ff       	call   c010b45f <pa2page>$/;"	l
c010b51b	obj/kernel.asm	/^c010b51b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b51e	obj/kernel.asm	/^c010b51e:	c9                   	leave  $/;"	l
c010b51f	obj/kernel.asm	/^c010b51f:	c3                   	ret    $/;"	l
c010b520	obj/kernel.asm	/^c010b520 <mm_count_inc>:$/;"	l
c010b520	obj/kernel.asm	/^c010b520:	55                   	push   %ebp$/;"	l
c010b521	obj/kernel.asm	/^c010b521:	89 e5                	mov    %esp,%ebp$/;"	l
c010b523	obj/kernel.asm	/^c010b523:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b526	obj/kernel.asm	/^c010b526:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b529	obj/kernel.asm	/^c010b529:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010b52c	obj/kernel.asm	/^c010b52c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b52f	obj/kernel.asm	/^c010b52f:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010b532	obj/kernel.asm	/^c010b532:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b535	obj/kernel.asm	/^c010b535:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b538	obj/kernel.asm	/^c010b538:	5d                   	pop    %ebp$/;"	l
c010b539	obj/kernel.asm	/^c010b539:	c3                   	ret    $/;"	l
c010b53a	obj/kernel.asm	/^c010b53a <mm_count_dec>:$/;"	l
c010b53a	obj/kernel.asm	/^c010b53a:	55                   	push   %ebp$/;"	l
c010b53b	obj/kernel.asm	/^c010b53b:	89 e5                	mov    %esp,%ebp$/;"	l
c010b53d	obj/kernel.asm	/^c010b53d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b540	obj/kernel.asm	/^c010b540:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b543	obj/kernel.asm	/^c010b543:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010b546	obj/kernel.asm	/^c010b546:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b549	obj/kernel.asm	/^c010b549:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010b54c	obj/kernel.asm	/^c010b54c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b54f	obj/kernel.asm	/^c010b54f:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b552	obj/kernel.asm	/^c010b552:	5d                   	pop    %ebp$/;"	l
c010b553	obj/kernel.asm	/^c010b553:	c3                   	ret    $/;"	l
c010b554	obj/kernel.asm	/^c010b554 <lock_mm>:$/;"	l
c010b554	obj/kernel.asm	/^c010b554:	55                   	push   %ebp$/;"	l
c010b555	obj/kernel.asm	/^c010b555:	89 e5                	mov    %esp,%ebp$/;"	l
c010b557	obj/kernel.asm	/^c010b557:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b55a	obj/kernel.asm	/^c010b55a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b55e	obj/kernel.asm	/^c010b55e:	74 29                	je     c010b589 <lock_mm+0x35>$/;"	l
c010b560	obj/kernel.asm	/^c010b560:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b563	obj/kernel.asm	/^c010b563:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010b566	obj/kernel.asm	/^c010b566:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b569	obj/kernel.asm	/^c010b569:	50                   	push   %eax$/;"	l
c010b56a	obj/kernel.asm	/^c010b56a:	e8 4e e1 ff ff       	call   c01096bd <down>$/;"	l
c010b56f	obj/kernel.asm	/^c010b56f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b572	obj/kernel.asm	/^c010b572:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010b577	obj/kernel.asm	/^c010b577:	85 c0                	test   %eax,%eax$/;"	l
c010b579	obj/kernel.asm	/^c010b579:	74 0e                	je     c010b589 <lock_mm+0x35>$/;"	l
c010b57b	obj/kernel.asm	/^c010b57b:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010b580	obj/kernel.asm	/^c010b580:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b583	obj/kernel.asm	/^c010b583:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b586	obj/kernel.asm	/^c010b586:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
c010b589	obj/kernel.asm	/^c010b589:	c9                   	leave  $/;"	l
c010b58a	obj/kernel.asm	/^c010b58a:	c3                   	ret    $/;"	l
c010b58b	obj/kernel.asm	/^c010b58b <unlock_mm>:$/;"	l
c010b58b	obj/kernel.asm	/^c010b58b:	55                   	push   %ebp$/;"	l
c010b58c	obj/kernel.asm	/^c010b58c:	89 e5                	mov    %esp,%ebp$/;"	l
c010b58e	obj/kernel.asm	/^c010b58e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b591	obj/kernel.asm	/^c010b591:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b595	obj/kernel.asm	/^c010b595:	74 1c                	je     c010b5b3 <unlock_mm+0x28>$/;"	l
c010b597	obj/kernel.asm	/^c010b597:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b59a	obj/kernel.asm	/^c010b59a:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010b59d	obj/kernel.asm	/^c010b59d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b5a0	obj/kernel.asm	/^c010b5a0:	50                   	push   %eax$/;"	l
c010b5a1	obj/kernel.asm	/^c010b5a1:	e8 fc e0 ff ff       	call   c01096a2 <up>$/;"	l
c010b5a6	obj/kernel.asm	/^c010b5a6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b5a9	obj/kernel.asm	/^c010b5a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b5ac	obj/kernel.asm	/^c010b5ac:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)$/;"	l
c010b5b3	obj/kernel.asm	/^c010b5b3:	c9                   	leave  $/;"	l
c010b5b4	obj/kernel.asm	/^c010b5b4:	c3                   	ret    $/;"	l
c010b5b5	obj/kernel.asm	/^c010b5b5 <files_count_inc>:$/;"	l
c010b5b5	obj/kernel.asm	/^c010b5b5:	55                   	push   %ebp$/;"	l
c010b5b6	obj/kernel.asm	/^c010b5b6:	89 e5                	mov    %esp,%ebp$/;"	l
c010b5b8	obj/kernel.asm	/^c010b5b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b5bb	obj/kernel.asm	/^c010b5bb:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010b5be	obj/kernel.asm	/^c010b5be:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010b5c1	obj/kernel.asm	/^c010b5c1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b5c4	obj/kernel.asm	/^c010b5c4:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010b5c7	obj/kernel.asm	/^c010b5c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b5ca	obj/kernel.asm	/^c010b5ca:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010b5cd	obj/kernel.asm	/^c010b5cd:	5d                   	pop    %ebp$/;"	l
c010b5ce	obj/kernel.asm	/^c010b5ce:	c3                   	ret    $/;"	l
c010b5cf	obj/kernel.asm	/^c010b5cf <files_count_dec>:$/;"	l
c010b5cf	obj/kernel.asm	/^c010b5cf:	55                   	push   %ebp$/;"	l
c010b5d0	obj/kernel.asm	/^c010b5d0:	89 e5                	mov    %esp,%ebp$/;"	l
c010b5d2	obj/kernel.asm	/^c010b5d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b5d5	obj/kernel.asm	/^c010b5d5:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010b5d8	obj/kernel.asm	/^c010b5d8:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010b5db	obj/kernel.asm	/^c010b5db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b5de	obj/kernel.asm	/^c010b5de:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010b5e1	obj/kernel.asm	/^c010b5e1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b5e4	obj/kernel.asm	/^c010b5e4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010b5e7	obj/kernel.asm	/^c010b5e7:	5d                   	pop    %ebp$/;"	l
c010b5e8	obj/kernel.asm	/^c010b5e8:	c3                   	ret    $/;"	l
c010b5e9	obj/kernel.asm	/^c010b5e9 <alloc_proc>:$/;"	l
c010b5e9	obj/kernel.asm	/^c010b5e9:	55                   	push   %ebp$/;"	l
c010b5ea	obj/kernel.asm	/^c010b5ea:	89 e5                	mov    %esp,%ebp$/;"	l
c010b5ec	obj/kernel.asm	/^c010b5ec:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b5ef	obj/kernel.asm	/^c010b5ef:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b5f2	obj/kernel.asm	/^c010b5f2:	68 c8 00 00 00       	push   $0xc8$/;"	l
c010b5f7	obj/kernel.asm	/^c010b5f7:	e8 a3 be ff ff       	call   c010749f <kmalloc>$/;"	l
c010b5fc	obj/kernel.asm	/^c010b5fc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b5ff	obj/kernel.asm	/^c010b5ff:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b602	obj/kernel.asm	/^c010b602:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b606	obj/kernel.asm	/^c010b606:	0f 84 53 01 00 00    	je     c010b75f <alloc_proc+0x176>$/;"	l
c010b60c	obj/kernel.asm	/^c010b60c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b60f	obj/kernel.asm	/^c010b60f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010b615	obj/kernel.asm	/^c010b615:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b618	obj/kernel.asm	/^c010b618:	c7 40 04 ff ff ff ff 	movl   $0xffffffff,0x4(%eax)$/;"	l
c010b61f	obj/kernel.asm	/^c010b61f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b622	obj/kernel.asm	/^c010b622:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010b629	obj/kernel.asm	/^c010b629:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b62c	obj/kernel.asm	/^c010b62c:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c010b633	obj/kernel.asm	/^c010b633:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b636	obj/kernel.asm	/^c010b636:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010b63d	obj/kernel.asm	/^c010b63d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b640	obj/kernel.asm	/^c010b640:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c010b647	obj/kernel.asm	/^c010b647:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b64a	obj/kernel.asm	/^c010b64a:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010b651	obj/kernel.asm	/^c010b651:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b654	obj/kernel.asm	/^c010b654:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010b657	obj/kernel.asm	/^c010b657:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b65a	obj/kernel.asm	/^c010b65a:	6a 20                	push   $0x20$/;"	l
c010b65c	obj/kernel.asm	/^c010b65c:	6a 00                	push   $0x0$/;"	l
c010b65e	obj/kernel.asm	/^c010b65e:	50                   	push   %eax$/;"	l
c010b65f	obj/kernel.asm	/^c010b65f:	e8 88 79 00 00       	call   c0112fec <memset>$/;"	l
c010b664	obj/kernel.asm	/^c010b664:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b667	obj/kernel.asm	/^c010b667:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b66a	obj/kernel.asm	/^c010b66a:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%eax)$/;"	l
c010b671	obj/kernel.asm	/^c010b671:	8b 15 14 12 15 c0    	mov    0xc0151214,%edx$/;"	l
c010b677	obj/kernel.asm	/^c010b677:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b67a	obj/kernel.asm	/^c010b67a:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010b67d	obj/kernel.asm	/^c010b67d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b680	obj/kernel.asm	/^c010b680:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)$/;"	l
c010b687	obj/kernel.asm	/^c010b687:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b68a	obj/kernel.asm	/^c010b68a:	83 c0 48             	add    $0x48,%eax$/;"	l
c010b68d	obj/kernel.asm	/^c010b68d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b690	obj/kernel.asm	/^c010b690:	6a 32                	push   $0x32$/;"	l
c010b692	obj/kernel.asm	/^c010b692:	6a 00                	push   $0x0$/;"	l
c010b694	obj/kernel.asm	/^c010b694:	50                   	push   %eax$/;"	l
c010b695	obj/kernel.asm	/^c010b695:	e8 52 79 00 00       	call   c0112fec <memset>$/;"	l
c010b69a	obj/kernel.asm	/^c010b69a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b69d	obj/kernel.asm	/^c010b69d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b6a0	obj/kernel.asm	/^c010b6a0:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%eax)$/;"	l
c010b6a7	obj/kernel.asm	/^c010b6a7:	00 00 00 $/;"	l
c010b6aa	obj/kernel.asm	/^c010b6aa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b6ad	obj/kernel.asm	/^c010b6ad:	c7 80 9c 00 00 00 00 	movl   $0x0,0x9c(%eax)$/;"	l
c010b6b4	obj/kernel.asm	/^c010b6b4:	00 00 00 $/;"	l
c010b6b7	obj/kernel.asm	/^c010b6b7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b6ba	obj/kernel.asm	/^c010b6ba:	8b 90 9c 00 00 00    	mov    0x9c(%eax),%edx$/;"	l
c010b6c0	obj/kernel.asm	/^c010b6c0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b6c3	obj/kernel.asm	/^c010b6c3:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c010b6c9	obj/kernel.asm	/^c010b6c9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b6cc	obj/kernel.asm	/^c010b6cc:	8b 90 98 00 00 00    	mov    0x98(%eax),%edx$/;"	l
c010b6d2	obj/kernel.asm	/^c010b6d2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b6d5	obj/kernel.asm	/^c010b6d5:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010b6db	obj/kernel.asm	/^c010b6db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b6de	obj/kernel.asm	/^c010b6de:	c7 80 a0 00 00 00 00 	movl   $0x0,0xa0(%eax)$/;"	l
c010b6e5	obj/kernel.asm	/^c010b6e5:	00 00 00 $/;"	l
c010b6e8	obj/kernel.asm	/^c010b6e8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b6eb	obj/kernel.asm	/^c010b6eb:	c7 80 a8 00 00 00 00 	movl   $0x0,0xa8(%eax)$/;"	l
c010b6f2	obj/kernel.asm	/^c010b6f2:	00 00 00 $/;"	l
c010b6f5	obj/kernel.asm	/^c010b6f5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b6f8	obj/kernel.asm	/^c010b6f8:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx$/;"	l
c010b6fe	obj/kernel.asm	/^c010b6fe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b701	obj/kernel.asm	/^c010b701:	89 90 a4 00 00 00    	mov    %edx,0xa4(%eax)$/;"	l
c010b707	obj/kernel.asm	/^c010b707:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b70a	obj/kernel.asm	/^c010b70a:	c7 80 ac 00 00 00 00 	movl   $0x0,0xac(%eax)$/;"	l
c010b711	obj/kernel.asm	/^c010b711:	00 00 00 $/;"	l
c010b714	obj/kernel.asm	/^c010b714:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b717	obj/kernel.asm	/^c010b717:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%eax)$/;"	l
c010b71e	obj/kernel.asm	/^c010b71e:	00 00 00 $/;"	l
c010b721	obj/kernel.asm	/^c010b721:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b724	obj/kernel.asm	/^c010b724:	8b 90 b0 00 00 00    	mov    0xb0(%eax),%edx$/;"	l
c010b72a	obj/kernel.asm	/^c010b72a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b72d	obj/kernel.asm	/^c010b72d:	89 90 b8 00 00 00    	mov    %edx,0xb8(%eax)$/;"	l
c010b733	obj/kernel.asm	/^c010b733:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b736	obj/kernel.asm	/^c010b736:	8b 90 b8 00 00 00    	mov    0xb8(%eax),%edx$/;"	l
c010b73c	obj/kernel.asm	/^c010b73c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b73f	obj/kernel.asm	/^c010b73f:	89 90 b4 00 00 00    	mov    %edx,0xb4(%eax)$/;"	l
c010b745	obj/kernel.asm	/^c010b745:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b748	obj/kernel.asm	/^c010b748:	c7 80 bc 00 00 00 00 	movl   $0x0,0xbc(%eax)$/;"	l
c010b74f	obj/kernel.asm	/^c010b74f:	00 00 00 $/;"	l
c010b752	obj/kernel.asm	/^c010b752:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b755	obj/kernel.asm	/^c010b755:	c7 80 c0 00 00 00 00 	movl   $0x0,0xc0(%eax)$/;"	l
c010b75c	obj/kernel.asm	/^c010b75c:	00 00 00 $/;"	l
c010b75f	obj/kernel.asm	/^c010b75f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b762	obj/kernel.asm	/^c010b762:	c9                   	leave  $/;"	l
c010b763	obj/kernel.asm	/^c010b763:	c3                   	ret    $/;"	l
c010b764	obj/kernel.asm	/^c010b764 <set_proc_name>:$/;"	l
c010b764	obj/kernel.asm	/^c010b764:	55                   	push   %ebp$/;"	l
c010b765	obj/kernel.asm	/^c010b765:	89 e5                	mov    %esp,%ebp$/;"	l
c010b767	obj/kernel.asm	/^c010b767:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b76a	obj/kernel.asm	/^c010b76a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b76d	obj/kernel.asm	/^c010b76d:	83 c0 48             	add    $0x48,%eax$/;"	l
c010b770	obj/kernel.asm	/^c010b770:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b773	obj/kernel.asm	/^c010b773:	6a 33                	push   $0x33$/;"	l
c010b775	obj/kernel.asm	/^c010b775:	6a 00                	push   $0x0$/;"	l
c010b777	obj/kernel.asm	/^c010b777:	50                   	push   %eax$/;"	l
c010b778	obj/kernel.asm	/^c010b778:	e8 6f 78 00 00       	call   c0112fec <memset>$/;"	l
c010b77d	obj/kernel.asm	/^c010b77d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b780	obj/kernel.asm	/^c010b780:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b783	obj/kernel.asm	/^c010b783:	83 c0 48             	add    $0x48,%eax$/;"	l
c010b786	obj/kernel.asm	/^c010b786:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b789	obj/kernel.asm	/^c010b789:	6a 32                	push   $0x32$/;"	l
c010b78b	obj/kernel.asm	/^c010b78b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b78e	obj/kernel.asm	/^c010b78e:	50                   	push   %eax$/;"	l
c010b78f	obj/kernel.asm	/^c010b78f:	e8 3b 79 00 00       	call   c01130cf <memcpy>$/;"	l
c010b794	obj/kernel.asm	/^c010b794:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b797	obj/kernel.asm	/^c010b797:	c9                   	leave  $/;"	l
c010b798	obj/kernel.asm	/^c010b798:	c3                   	ret    $/;"	l
c010b799	obj/kernel.asm	/^c010b799 <get_proc_name>:$/;"	l
c010b799	obj/kernel.asm	/^c010b799:	55                   	push   %ebp$/;"	l
c010b79a	obj/kernel.asm	/^c010b79a:	89 e5                	mov    %esp,%ebp$/;"	l
c010b79c	obj/kernel.asm	/^c010b79c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b79f	obj/kernel.asm	/^c010b79f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b7a2	obj/kernel.asm	/^c010b7a2:	6a 33                	push   $0x33$/;"	l
c010b7a4	obj/kernel.asm	/^c010b7a4:	6a 00                	push   $0x0$/;"	l
c010b7a6	obj/kernel.asm	/^c010b7a6:	68 e0 00 15 c0       	push   $0xc01500e0$/;"	l
c010b7ab	obj/kernel.asm	/^c010b7ab:	e8 3c 78 00 00       	call   c0112fec <memset>$/;"	l
c010b7b0	obj/kernel.asm	/^c010b7b0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b7b3	obj/kernel.asm	/^c010b7b3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b7b6	obj/kernel.asm	/^c010b7b6:	83 c0 48             	add    $0x48,%eax$/;"	l
c010b7b9	obj/kernel.asm	/^c010b7b9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b7bc	obj/kernel.asm	/^c010b7bc:	6a 32                	push   $0x32$/;"	l
c010b7be	obj/kernel.asm	/^c010b7be:	50                   	push   %eax$/;"	l
c010b7bf	obj/kernel.asm	/^c010b7bf:	68 e0 00 15 c0       	push   $0xc01500e0$/;"	l
c010b7c4	obj/kernel.asm	/^c010b7c4:	e8 06 79 00 00       	call   c01130cf <memcpy>$/;"	l
c010b7c9	obj/kernel.asm	/^c010b7c9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b7cc	obj/kernel.asm	/^c010b7cc:	c9                   	leave  $/;"	l
c010b7cd	obj/kernel.asm	/^c010b7cd:	c3                   	ret    $/;"	l
c010b7ce	obj/kernel.asm	/^c010b7ce <set_links>:$/;"	l
c010b7ce	obj/kernel.asm	/^c010b7ce:	55                   	push   %ebp$/;"	l
c010b7cf	obj/kernel.asm	/^c010b7cf:	89 e5                	mov    %esp,%ebp$/;"	l
c010b7d1	obj/kernel.asm	/^c010b7d1:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010b7d4	obj/kernel.asm	/^c010b7d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b7d7	obj/kernel.asm	/^c010b7d7:	83 c0 7c             	add    $0x7c,%eax$/;"	l
c010b7da	obj/kernel.asm	/^c010b7da:	c7 45 fc dc 13 15 c0 	movl   $0xc01513dc,-0x4(%ebp)$/;"	l
c010b7e1	obj/kernel.asm	/^c010b7e1:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010b7e4	obj/kernel.asm	/^c010b7e4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b7e7	obj/kernel.asm	/^c010b7e7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b7ea	obj/kernel.asm	/^c010b7ea:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010b7ed	obj/kernel.asm	/^c010b7ed:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b7f0	obj/kernel.asm	/^c010b7f0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b7f3	obj/kernel.asm	/^c010b7f3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b7f6	obj/kernel.asm	/^c010b7f6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010b7f9	obj/kernel.asm	/^c010b7f9:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010b7fc	obj/kernel.asm	/^c010b7fc:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b7ff	obj/kernel.asm	/^c010b7ff:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010b802	obj/kernel.asm	/^c010b802:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b805	obj/kernel.asm	/^c010b805:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b808	obj/kernel.asm	/^c010b808:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010b80b	obj/kernel.asm	/^c010b80b:	89 10                	mov    %edx,(%eax)$/;"	l
c010b80d	obj/kernel.asm	/^c010b80d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b810	obj/kernel.asm	/^c010b810:	8b 10                	mov    (%eax),%edx$/;"	l
c010b812	obj/kernel.asm	/^c010b812:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b815	obj/kernel.asm	/^c010b815:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b818	obj/kernel.asm	/^c010b818:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b81b	obj/kernel.asm	/^c010b81b:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010b81e	obj/kernel.asm	/^c010b81e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b821	obj/kernel.asm	/^c010b821:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b824	obj/kernel.asm	/^c010b824:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010b827	obj/kernel.asm	/^c010b827:	89 10                	mov    %edx,(%eax)$/;"	l
c010b829	obj/kernel.asm	/^c010b829:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b82c	obj/kernel.asm	/^c010b82c:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%eax)$/;"	l
c010b833	obj/kernel.asm	/^c010b833:	00 00 00 $/;"	l
c010b836	obj/kernel.asm	/^c010b836:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b839	obj/kernel.asm	/^c010b839:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010b83c	obj/kernel.asm	/^c010b83c:	8b 90 94 00 00 00    	mov    0x94(%eax),%edx$/;"	l
c010b842	obj/kernel.asm	/^c010b842:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b845	obj/kernel.asm	/^c010b845:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010b84b	obj/kernel.asm	/^c010b84b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b84e	obj/kernel.asm	/^c010b84e:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010b854	obj/kernel.asm	/^c010b854:	85 c0                	test   %eax,%eax$/;"	l
c010b856	obj/kernel.asm	/^c010b856:	74 12                	je     c010b86a <set_links+0x9c>$/;"	l
c010b858	obj/kernel.asm	/^c010b858:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b85b	obj/kernel.asm	/^c010b85b:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010b861	obj/kernel.asm	/^c010b861:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b864	obj/kernel.asm	/^c010b864:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c010b86a	obj/kernel.asm	/^c010b86a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b86d	obj/kernel.asm	/^c010b86d:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010b870	obj/kernel.asm	/^c010b870:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b873	obj/kernel.asm	/^c010b873:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010b879	obj/kernel.asm	/^c010b879:	a1 c0 00 15 c0       	mov    0xc01500c0,%eax$/;"	l
c010b87e	obj/kernel.asm	/^c010b87e:	83 c0 01             	add    $0x1,%eax$/;"	l
c010b881	obj/kernel.asm	/^c010b881:	a3 c0 00 15 c0       	mov    %eax,0xc01500c0$/;"	l
c010b886	obj/kernel.asm	/^c010b886:	c9                   	leave  $/;"	l
c010b887	obj/kernel.asm	/^c010b887:	c3                   	ret    $/;"	l
c010b888	obj/kernel.asm	/^c010b888 <remove_links>:$/;"	l
c010b888	obj/kernel.asm	/^c010b888:	55                   	push   %ebp$/;"	l
c010b889	obj/kernel.asm	/^c010b889:	89 e5                	mov    %esp,%ebp$/;"	l
c010b88b	obj/kernel.asm	/^c010b88b:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010b88e	obj/kernel.asm	/^c010b88e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b891	obj/kernel.asm	/^c010b891:	83 c0 7c             	add    $0x7c,%eax$/;"	l
c010b894	obj/kernel.asm	/^c010b894:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010b897	obj/kernel.asm	/^c010b897:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b89a	obj/kernel.asm	/^c010b89a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b89d	obj/kernel.asm	/^c010b89d:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010b8a0	obj/kernel.asm	/^c010b8a0:	8b 12                	mov    (%edx),%edx$/;"	l
c010b8a2	obj/kernel.asm	/^c010b8a2:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c010b8a5	obj/kernel.asm	/^c010b8a5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b8a8	obj/kernel.asm	/^c010b8a8:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010b8ab	obj/kernel.asm	/^c010b8ab:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b8ae	obj/kernel.asm	/^c010b8ae:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b8b1	obj/kernel.asm	/^c010b8b1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b8b4	obj/kernel.asm	/^c010b8b4:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010b8b7	obj/kernel.asm	/^c010b8b7:	89 10                	mov    %edx,(%eax)$/;"	l
c010b8b9	obj/kernel.asm	/^c010b8b9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8bc	obj/kernel.asm	/^c010b8bc:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010b8c2	obj/kernel.asm	/^c010b8c2:	85 c0                	test   %eax,%eax$/;"	l
c010b8c4	obj/kernel.asm	/^c010b8c4:	74 18                	je     c010b8de <remove_links+0x56>$/;"	l
c010b8c6	obj/kernel.asm	/^c010b8c6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8c9	obj/kernel.asm	/^c010b8c9:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010b8cf	obj/kernel.asm	/^c010b8cf:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b8d2	obj/kernel.asm	/^c010b8d2:	8b 92 98 00 00 00    	mov    0x98(%edx),%edx$/;"	l
c010b8d8	obj/kernel.asm	/^c010b8d8:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c010b8de	obj/kernel.asm	/^c010b8de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8e1	obj/kernel.asm	/^c010b8e1:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax$/;"	l
c010b8e7	obj/kernel.asm	/^c010b8e7:	85 c0                	test   %eax,%eax$/;"	l
c010b8e9	obj/kernel.asm	/^c010b8e9:	74 1a                	je     c010b905 <remove_links+0x7d>$/;"	l
c010b8eb	obj/kernel.asm	/^c010b8eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8ee	obj/kernel.asm	/^c010b8ee:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax$/;"	l
c010b8f4	obj/kernel.asm	/^c010b8f4:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b8f7	obj/kernel.asm	/^c010b8f7:	8b 92 9c 00 00 00    	mov    0x9c(%edx),%edx$/;"	l
c010b8fd	obj/kernel.asm	/^c010b8fd:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010b903	obj/kernel.asm	/^c010b903:	eb 15                	jmp    c010b91a <remove_links+0x92>$/;"	l
c010b905	obj/kernel.asm	/^c010b905:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b908	obj/kernel.asm	/^c010b908:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010b90b	obj/kernel.asm	/^c010b90b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b90e	obj/kernel.asm	/^c010b90e:	8b 92 9c 00 00 00    	mov    0x9c(%edx),%edx$/;"	l
c010b914	obj/kernel.asm	/^c010b914:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010b91a	obj/kernel.asm	/^c010b91a:	a1 c0 00 15 c0       	mov    0xc01500c0,%eax$/;"	l
c010b91f	obj/kernel.asm	/^c010b91f:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010b922	obj/kernel.asm	/^c010b922:	a3 c0 00 15 c0       	mov    %eax,0xc01500c0$/;"	l
c010b927	obj/kernel.asm	/^c010b927:	c9                   	leave  $/;"	l
c010b928	obj/kernel.asm	/^c010b928:	c3                   	ret    $/;"	l
c010b929	obj/kernel.asm	/^c010b929 <get_pid>:$/;"	l
c010b929	obj/kernel.asm	/^c010b929:	55                   	push   %ebp$/;"	l
c010b92a	obj/kernel.asm	/^c010b92a:	89 e5                	mov    %esp,%ebp$/;"	l
c010b92c	obj/kernel.asm	/^c010b92c:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010b92f	obj/kernel.asm	/^c010b92f:	c7 45 f8 dc 13 15 c0 	movl   $0xc01513dc,-0x8(%ebp)$/;"	l
c010b936	obj/kernel.asm	/^c010b936:	a1 e4 ca 14 c0       	mov    0xc014cae4,%eax$/;"	l
c010b93b	obj/kernel.asm	/^c010b93b:	83 c0 01             	add    $0x1,%eax$/;"	l
c010b93e	obj/kernel.asm	/^c010b93e:	a3 e4 ca 14 c0       	mov    %eax,0xc014cae4$/;"	l
c010b943	obj/kernel.asm	/^c010b943:	a1 e4 ca 14 c0       	mov    0xc014cae4,%eax$/;"	l
c010b948	obj/kernel.asm	/^c010b948:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c010b94d	obj/kernel.asm	/^c010b94d:	7e 0c                	jle    c010b95b <get_pid+0x32>$/;"	l
c010b94f	obj/kernel.asm	/^c010b94f:	c7 05 e4 ca 14 c0 01 	movl   $0x1,0xc014cae4$/;"	l
c010b956	obj/kernel.asm	/^c010b956:	00 00 00 $/;"	l
c010b959	obj/kernel.asm	/^c010b959:	eb 13                	jmp    c010b96e <get_pid+0x45>$/;"	l
c010b95b	obj/kernel.asm	/^c010b95b:	8b 15 e4 ca 14 c0    	mov    0xc014cae4,%edx$/;"	l
c010b961	obj/kernel.asm	/^c010b961:	a1 e8 ca 14 c0       	mov    0xc014cae8,%eax$/;"	l
c010b966	obj/kernel.asm	/^c010b966:	39 c2                	cmp    %eax,%edx$/;"	l
c010b968	obj/kernel.asm	/^c010b968:	0f 8c ac 00 00 00    	jl     c010ba1a <get_pid+0xf1>$/;"	l
c010b96e	obj/kernel.asm	/^c010b96e:	c7 05 e8 ca 14 c0 00 	movl   $0x2000,0xc014cae8$/;"	l
c010b975	obj/kernel.asm	/^c010b975:	20 00 00 $/;"	l
c010b978	obj/kernel.asm	/^c010b978:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010b97b	obj/kernel.asm	/^c010b97b:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010b97e	obj/kernel.asm	/^c010b97e:	eb 7f                	jmp    c010b9ff <get_pid+0xd6>$/;"	l
c010b980	obj/kernel.asm	/^c010b980:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b983	obj/kernel.asm	/^c010b983:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
c010b986	obj/kernel.asm	/^c010b986:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b989	obj/kernel.asm	/^c010b989:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b98c	obj/kernel.asm	/^c010b98c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b98f	obj/kernel.asm	/^c010b98f:	a1 e4 ca 14 c0       	mov    0xc014cae4,%eax$/;"	l
c010b994	obj/kernel.asm	/^c010b994:	39 c2                	cmp    %eax,%edx$/;"	l
c010b996	obj/kernel.asm	/^c010b996:	75 3e                	jne    c010b9d6 <get_pid+0xad>$/;"	l
c010b998	obj/kernel.asm	/^c010b998:	a1 e4 ca 14 c0       	mov    0xc014cae4,%eax$/;"	l
c010b99d	obj/kernel.asm	/^c010b99d:	83 c0 01             	add    $0x1,%eax$/;"	l
c010b9a0	obj/kernel.asm	/^c010b9a0:	a3 e4 ca 14 c0       	mov    %eax,0xc014cae4$/;"	l
c010b9a5	obj/kernel.asm	/^c010b9a5:	8b 15 e4 ca 14 c0    	mov    0xc014cae4,%edx$/;"	l
c010b9ab	obj/kernel.asm	/^c010b9ab:	a1 e8 ca 14 c0       	mov    0xc014cae8,%eax$/;"	l
c010b9b0	obj/kernel.asm	/^c010b9b0:	39 c2                	cmp    %eax,%edx$/;"	l
c010b9b2	obj/kernel.asm	/^c010b9b2:	7c 4b                	jl     c010b9ff <get_pid+0xd6>$/;"	l
c010b9b4	obj/kernel.asm	/^c010b9b4:	a1 e4 ca 14 c0       	mov    0xc014cae4,%eax$/;"	l
c010b9b9	obj/kernel.asm	/^c010b9b9:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c010b9be	obj/kernel.asm	/^c010b9be:	7e 0a                	jle    c010b9ca <get_pid+0xa1>$/;"	l
c010b9c0	obj/kernel.asm	/^c010b9c0:	c7 05 e4 ca 14 c0 01 	movl   $0x1,0xc014cae4$/;"	l
c010b9c7	obj/kernel.asm	/^c010b9c7:	00 00 00 $/;"	l
c010b9ca	obj/kernel.asm	/^c010b9ca:	c7 05 e8 ca 14 c0 00 	movl   $0x2000,0xc014cae8$/;"	l
c010b9d1	obj/kernel.asm	/^c010b9d1:	20 00 00 $/;"	l
c010b9d4	obj/kernel.asm	/^c010b9d4:	eb a2                	jmp    c010b978 <get_pid+0x4f>$/;"	l
c010b9d6	obj/kernel.asm	/^c010b9d6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b9d9	obj/kernel.asm	/^c010b9d9:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b9dc	obj/kernel.asm	/^c010b9dc:	a1 e4 ca 14 c0       	mov    0xc014cae4,%eax$/;"	l
c010b9e1	obj/kernel.asm	/^c010b9e1:	39 c2                	cmp    %eax,%edx$/;"	l
c010b9e3	obj/kernel.asm	/^c010b9e3:	7e 1a                	jle    c010b9ff <get_pid+0xd6>$/;"	l
c010b9e5	obj/kernel.asm	/^c010b9e5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b9e8	obj/kernel.asm	/^c010b9e8:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b9eb	obj/kernel.asm	/^c010b9eb:	a1 e8 ca 14 c0       	mov    0xc014cae8,%eax$/;"	l
c010b9f0	obj/kernel.asm	/^c010b9f0:	39 c2                	cmp    %eax,%edx$/;"	l
c010b9f2	obj/kernel.asm	/^c010b9f2:	7d 0b                	jge    c010b9ff <get_pid+0xd6>$/;"	l
c010b9f4	obj/kernel.asm	/^c010b9f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b9f7	obj/kernel.asm	/^c010b9f7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b9fa	obj/kernel.asm	/^c010b9fa:	a3 e8 ca 14 c0       	mov    %eax,0xc014cae8$/;"	l
c010b9ff	obj/kernel.asm	/^c010b9ff:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010ba02	obj/kernel.asm	/^c010ba02:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ba05	obj/kernel.asm	/^c010ba05:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ba08	obj/kernel.asm	/^c010ba08:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ba0b	obj/kernel.asm	/^c010ba0b:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010ba0e	obj/kernel.asm	/^c010ba0e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010ba11	obj/kernel.asm	/^c010ba11:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c010ba14	obj/kernel.asm	/^c010ba14:	0f 85 66 ff ff ff    	jne    c010b980 <get_pid+0x57>$/;"	l
c010ba1a	obj/kernel.asm	/^c010ba1a:	a1 e4 ca 14 c0       	mov    0xc014cae4,%eax$/;"	l
c010ba1f	obj/kernel.asm	/^c010ba1f:	c9                   	leave  $/;"	l
c010ba20	obj/kernel.asm	/^c010ba20:	c3                   	ret    $/;"	l
c010ba21	obj/kernel.asm	/^c010ba21 <proc_run>:$/;"	l
c010ba21	obj/kernel.asm	/^c010ba21:	55                   	push   %ebp$/;"	l
c010ba22	obj/kernel.asm	/^c010ba22:	89 e5                	mov    %esp,%ebp$/;"	l
c010ba24	obj/kernel.asm	/^c010ba24:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ba27	obj/kernel.asm	/^c010ba27:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010ba2c	obj/kernel.asm	/^c010ba2c:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010ba2f	obj/kernel.asm	/^c010ba2f:	74 6b                	je     c010ba9c <proc_run+0x7b>$/;"	l
c010ba31	obj/kernel.asm	/^c010ba31:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010ba36	obj/kernel.asm	/^c010ba36:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ba39	obj/kernel.asm	/^c010ba39:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba3c	obj/kernel.asm	/^c010ba3c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ba3f	obj/kernel.asm	/^c010ba3f:	e8 b8 f9 ff ff       	call   c010b3fc <__intr_save>$/;"	l
c010ba44	obj/kernel.asm	/^c010ba44:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ba47	obj/kernel.asm	/^c010ba47:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba4a	obj/kernel.asm	/^c010ba4a:	a3 88 e0 14 c0       	mov    %eax,0xc014e088$/;"	l
c010ba4f	obj/kernel.asm	/^c010ba4f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ba52	obj/kernel.asm	/^c010ba52:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010ba55	obj/kernel.asm	/^c010ba55:	05 00 20 00 00       	add    $0x2000,%eax$/;"	l
c010ba5a	obj/kernel.asm	/^c010ba5a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ba5d	obj/kernel.asm	/^c010ba5d:	50                   	push   %eax$/;"	l
c010ba5e	obj/kernel.asm	/^c010ba5e:	e8 8e 7d ff ff       	call   c01037f1 <load_esp0>$/;"	l
c010ba63	obj/kernel.asm	/^c010ba63:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ba66	obj/kernel.asm	/^c010ba66:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ba69	obj/kernel.asm	/^c010ba69:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c010ba6c	obj/kernel.asm	/^c010ba6c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ba6f	obj/kernel.asm	/^c010ba6f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ba72	obj/kernel.asm	/^c010ba72:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010ba75	obj/kernel.asm	/^c010ba75:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ba78	obj/kernel.asm	/^c010ba78:	8d 50 1c             	lea    0x1c(%eax),%edx$/;"	l
c010ba7b	obj/kernel.asm	/^c010ba7b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ba7e	obj/kernel.asm	/^c010ba7e:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010ba81	obj/kernel.asm	/^c010ba81:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ba84	obj/kernel.asm	/^c010ba84:	52                   	push   %edx$/;"	l
c010ba85	obj/kernel.asm	/^c010ba85:	50                   	push   %eax$/;"	l
c010ba86	obj/kernel.asm	/^c010ba86:	e8 01 f9 ff ff       	call   c010b38c <switch_to>$/;"	l
c010ba8b	obj/kernel.asm	/^c010ba8b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ba8e	obj/kernel.asm	/^c010ba8e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ba91	obj/kernel.asm	/^c010ba91:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010ba94	obj/kernel.asm	/^c010ba94:	e8 8d f9 ff ff       	call   c010b426 <__intr_restore>$/;"	l
c010ba99	obj/kernel.asm	/^c010ba99:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ba9c	obj/kernel.asm	/^c010ba9c:	c9                   	leave  $/;"	l
c010ba9d	obj/kernel.asm	/^c010ba9d:	c3                   	ret    $/;"	l
c010ba9e	obj/kernel.asm	/^c010ba9e <forkret>:$/;"	l
c010ba9e	obj/kernel.asm	/^c010ba9e:	55                   	push   %ebp$/;"	l
c010ba9f	obj/kernel.asm	/^c010ba9f:	89 e5                	mov    %esp,%ebp$/;"	l
c010baa1	obj/kernel.asm	/^c010baa1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010baa4	obj/kernel.asm	/^c010baa4:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010baa9	obj/kernel.asm	/^c010baa9:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010baac	obj/kernel.asm	/^c010baac:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010baaf	obj/kernel.asm	/^c010baaf:	50                   	push   %eax$/;"	l
c010bab0	obj/kernel.asm	/^c010bab0:	e8 7e 7b ff ff       	call   c0103633 <forkrets>$/;"	l
c010bab5	obj/kernel.asm	/^c010bab5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bab8	obj/kernel.asm	/^c010bab8:	c9                   	leave  $/;"	l
c010bab9	obj/kernel.asm	/^c010bab9:	c3                   	ret    $/;"	l
c010baba	obj/kernel.asm	/^c010baba <hash_proc>:$/;"	l
c010baba	obj/kernel.asm	/^c010baba:	55                   	push   %ebp$/;"	l
c010babb	obj/kernel.asm	/^c010babb:	89 e5                	mov    %esp,%ebp$/;"	l
c010babd	obj/kernel.asm	/^c010babd:	53                   	push   %ebx$/;"	l
c010babe	obj/kernel.asm	/^c010babe:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010bac1	obj/kernel.asm	/^c010bac1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bac4	obj/kernel.asm	/^c010bac4:	8d 98 84 00 00 00    	lea    0x84(%eax),%ebx$/;"	l
c010baca	obj/kernel.asm	/^c010baca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bacd	obj/kernel.asm	/^c010bacd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010bad0	obj/kernel.asm	/^c010bad0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010bad3	obj/kernel.asm	/^c010bad3:	6a 0a                	push   $0xa$/;"	l
c010bad5	obj/kernel.asm	/^c010bad5:	50                   	push   %eax$/;"	l
c010bad6	obj/kernel.asm	/^c010bad6:	e8 e6 7c 00 00       	call   c01137c1 <hash32>$/;"	l
c010badb	obj/kernel.asm	/^c010badb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bade	obj/kernel.asm	/^c010bade:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010bae1	obj/kernel.asm	/^c010bae1:	05 c0 e0 14 c0       	add    $0xc014e0c0,%eax$/;"	l
c010bae6	obj/kernel.asm	/^c010bae6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bae9	obj/kernel.asm	/^c010bae9:	89 5d f0             	mov    %ebx,-0x10(%ebp)$/;"	l
c010baec	obj/kernel.asm	/^c010baec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010baef	obj/kernel.asm	/^c010baef:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010baf2	obj/kernel.asm	/^c010baf2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010baf5	obj/kernel.asm	/^c010baf5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010baf8	obj/kernel.asm	/^c010baf8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bafb	obj/kernel.asm	/^c010bafb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010bafe	obj/kernel.asm	/^c010bafe:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010bb01	obj/kernel.asm	/^c010bb01:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010bb04	obj/kernel.asm	/^c010bb04:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010bb07	obj/kernel.asm	/^c010bb07:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c010bb0a	obj/kernel.asm	/^c010bb0a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010bb0d	obj/kernel.asm	/^c010bb0d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010bb10	obj/kernel.asm	/^c010bb10:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010bb13	obj/kernel.asm	/^c010bb13:	89 10                	mov    %edx,(%eax)$/;"	l
c010bb15	obj/kernel.asm	/^c010bb15:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010bb18	obj/kernel.asm	/^c010bb18:	8b 10                	mov    (%eax),%edx$/;"	l
c010bb1a	obj/kernel.asm	/^c010bb1a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010bb1d	obj/kernel.asm	/^c010bb1d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010bb20	obj/kernel.asm	/^c010bb20:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010bb23	obj/kernel.asm	/^c010bb23:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010bb26	obj/kernel.asm	/^c010bb26:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010bb29	obj/kernel.asm	/^c010bb29:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010bb2c	obj/kernel.asm	/^c010bb2c:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010bb2f	obj/kernel.asm	/^c010bb2f:	89 10                	mov    %edx,(%eax)$/;"	l
c010bb31	obj/kernel.asm	/^c010bb31:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c010bb34	obj/kernel.asm	/^c010bb34:	c9                   	leave  $/;"	l
c010bb35	obj/kernel.asm	/^c010bb35:	c3                   	ret    $/;"	l
c010bb36	obj/kernel.asm	/^c010bb36 <unhash_proc>:$/;"	l
c010bb36	obj/kernel.asm	/^c010bb36:	55                   	push   %ebp$/;"	l
c010bb37	obj/kernel.asm	/^c010bb37:	89 e5                	mov    %esp,%ebp$/;"	l
c010bb39	obj/kernel.asm	/^c010bb39:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010bb3c	obj/kernel.asm	/^c010bb3c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb3f	obj/kernel.asm	/^c010bb3f:	05 84 00 00 00       	add    $0x84,%eax$/;"	l
c010bb44	obj/kernel.asm	/^c010bb44:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010bb47	obj/kernel.asm	/^c010bb47:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010bb4a	obj/kernel.asm	/^c010bb4a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010bb4d	obj/kernel.asm	/^c010bb4d:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010bb50	obj/kernel.asm	/^c010bb50:	8b 12                	mov    (%edx),%edx$/;"	l
c010bb52	obj/kernel.asm	/^c010bb52:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c010bb55	obj/kernel.asm	/^c010bb55:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bb58	obj/kernel.asm	/^c010bb58:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010bb5b	obj/kernel.asm	/^c010bb5b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010bb5e	obj/kernel.asm	/^c010bb5e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010bb61	obj/kernel.asm	/^c010bb61:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bb64	obj/kernel.asm	/^c010bb64:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010bb67	obj/kernel.asm	/^c010bb67:	89 10                	mov    %edx,(%eax)$/;"	l
c010bb69	obj/kernel.asm	/^c010bb69:	c9                   	leave  $/;"	l
c010bb6a	obj/kernel.asm	/^c010bb6a:	c3                   	ret    $/;"	l
c010bb6b	obj/kernel.asm	/^c010bb6b <find_proc>:$/;"	l
c010bb6b	obj/kernel.asm	/^c010bb6b:	55                   	push   %ebp$/;"	l
c010bb6c	obj/kernel.asm	/^c010bb6c:	89 e5                	mov    %esp,%ebp$/;"	l
c010bb6e	obj/kernel.asm	/^c010bb6e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bb71	obj/kernel.asm	/^c010bb71:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010bb75	obj/kernel.asm	/^c010bb75:	7e 5f                	jle    c010bbd6 <find_proc+0x6b>$/;"	l
c010bb77	obj/kernel.asm	/^c010bb77:	81 7d 08 ff 1f 00 00 	cmpl   $0x1fff,0x8(%ebp)$/;"	l
c010bb7e	obj/kernel.asm	/^c010bb7e:	7f 56                	jg     c010bbd6 <find_proc+0x6b>$/;"	l
c010bb80	obj/kernel.asm	/^c010bb80:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb83	obj/kernel.asm	/^c010bb83:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010bb86	obj/kernel.asm	/^c010bb86:	6a 0a                	push   $0xa$/;"	l
c010bb88	obj/kernel.asm	/^c010bb88:	50                   	push   %eax$/;"	l
c010bb89	obj/kernel.asm	/^c010bb89:	e8 33 7c 00 00       	call   c01137c1 <hash32>$/;"	l
c010bb8e	obj/kernel.asm	/^c010bb8e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bb91	obj/kernel.asm	/^c010bb91:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010bb94	obj/kernel.asm	/^c010bb94:	05 c0 e0 14 c0       	add    $0xc014e0c0,%eax$/;"	l
c010bb99	obj/kernel.asm	/^c010bb99:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bb9c	obj/kernel.asm	/^c010bb9c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bb9f	obj/kernel.asm	/^c010bb9f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bba2	obj/kernel.asm	/^c010bba2:	eb 1b                	jmp    c010bbbf <find_proc+0x54>$/;"	l
c010bba4	obj/kernel.asm	/^c010bba4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bba7	obj/kernel.asm	/^c010bba7:	2d 84 00 00 00       	sub    $0x84,%eax$/;"	l
c010bbac	obj/kernel.asm	/^c010bbac:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010bbaf	obj/kernel.asm	/^c010bbaf:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bbb2	obj/kernel.asm	/^c010bbb2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010bbb5	obj/kernel.asm	/^c010bbb5:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010bbb8	obj/kernel.asm	/^c010bbb8:	75 05                	jne    c010bbbf <find_proc+0x54>$/;"	l
c010bbba	obj/kernel.asm	/^c010bbba:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bbbd	obj/kernel.asm	/^c010bbbd:	eb 1c                	jmp    c010bbdb <find_proc+0x70>$/;"	l
c010bbbf	obj/kernel.asm	/^c010bbbf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bbc2	obj/kernel.asm	/^c010bbc2:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010bbc5	obj/kernel.asm	/^c010bbc5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010bbc8	obj/kernel.asm	/^c010bbc8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010bbcb	obj/kernel.asm	/^c010bbcb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bbce	obj/kernel.asm	/^c010bbce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bbd1	obj/kernel.asm	/^c010bbd1:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010bbd4	obj/kernel.asm	/^c010bbd4:	75 ce                	jne    c010bba4 <find_proc+0x39>$/;"	l
c010bbd6	obj/kernel.asm	/^c010bbd6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010bbdb	obj/kernel.asm	/^c010bbdb:	c9                   	leave  $/;"	l
c010bbdc	obj/kernel.asm	/^c010bbdc:	c3                   	ret    $/;"	l
c010bbdd	obj/kernel.asm	/^c010bbdd <kernel_thread>:$/;"	l
c010bbdd	obj/kernel.asm	/^c010bbdd:	55                   	push   %ebp$/;"	l
c010bbde	obj/kernel.asm	/^c010bbde:	89 e5                	mov    %esp,%ebp$/;"	l
c010bbe0	obj/kernel.asm	/^c010bbe0:	83 ec 58             	sub    $0x58,%esp$/;"	l
c010bbe3	obj/kernel.asm	/^c010bbe3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010bbe6	obj/kernel.asm	/^c010bbe6:	6a 4c                	push   $0x4c$/;"	l
c010bbe8	obj/kernel.asm	/^c010bbe8:	6a 00                	push   $0x0$/;"	l
c010bbea	obj/kernel.asm	/^c010bbea:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c010bbed	obj/kernel.asm	/^c010bbed:	50                   	push   %eax$/;"	l
c010bbee	obj/kernel.asm	/^c010bbee:	e8 f9 73 00 00       	call   c0112fec <memset>$/;"	l
c010bbf3	obj/kernel.asm	/^c010bbf3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bbf6	obj/kernel.asm	/^c010bbf6:	66 c7 45 e8 08 00    	movw   $0x8,-0x18(%ebp)$/;"	l
c010bbfc	obj/kernel.asm	/^c010bbfc:	66 c7 45 f4 10 00    	movw   $0x10,-0xc(%ebp)$/;"	l
c010bc02	obj/kernel.asm	/^c010bc02:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c010bc06	obj/kernel.asm	/^c010bc06:	66 89 45 d4          	mov    %ax,-0x2c(%ebp)$/;"	l
c010bc0a	obj/kernel.asm	/^c010bc0a:	0f b7 45 d4          	movzwl -0x2c(%ebp),%eax$/;"	l
c010bc0e	obj/kernel.asm	/^c010bc0e:	66 89 45 d8          	mov    %ax,-0x28(%ebp)$/;"	l
c010bc12	obj/kernel.asm	/^c010bc12:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc15	obj/kernel.asm	/^c010bc15:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010bc18	obj/kernel.asm	/^c010bc18:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bc1b	obj/kernel.asm	/^c010bc1b:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010bc1e	obj/kernel.asm	/^c010bc1e:	b8 83 b3 10 c0       	mov    $0xc010b383,%eax$/;"	l
c010bc23	obj/kernel.asm	/^c010bc23:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010bc26	obj/kernel.asm	/^c010bc26:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010bc29	obj/kernel.asm	/^c010bc29:	80 cc 01             	or     $0x1,%ah$/;"	l
c010bc2c	obj/kernel.asm	/^c010bc2c:	89 c2                	mov    %eax,%edx$/;"	l
c010bc2e	obj/kernel.asm	/^c010bc2e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010bc31	obj/kernel.asm	/^c010bc31:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c010bc34	obj/kernel.asm	/^c010bc34:	50                   	push   %eax$/;"	l
c010bc35	obj/kernel.asm	/^c010bc35:	6a 00                	push   $0x0$/;"	l
c010bc37	obj/kernel.asm	/^c010bc37:	52                   	push   %edx$/;"	l
c010bc38	obj/kernel.asm	/^c010bc38:	e8 d6 03 00 00       	call   c010c013 <do_fork>$/;"	l
c010bc3d	obj/kernel.asm	/^c010bc3d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bc40	obj/kernel.asm	/^c010bc40:	c9                   	leave  $/;"	l
c010bc41	obj/kernel.asm	/^c010bc41:	c3                   	ret    $/;"	l
c010bc42	obj/kernel.asm	/^c010bc42 <setup_kstack>:$/;"	l
c010bc42	obj/kernel.asm	/^c010bc42:	55                   	push   %ebp$/;"	l
c010bc43	obj/kernel.asm	/^c010bc43:	89 e5                	mov    %esp,%ebp$/;"	l
c010bc45	obj/kernel.asm	/^c010bc45:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bc48	obj/kernel.asm	/^c010bc48:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bc4b	obj/kernel.asm	/^c010bc4b:	6a 02                	push   $0x2$/;"	l
c010bc4d	obj/kernel.asm	/^c010bc4d:	e8 ef 7c ff ff       	call   c0103941 <alloc_pages>$/;"	l
c010bc52	obj/kernel.asm	/^c010bc52:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bc55	obj/kernel.asm	/^c010bc55:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bc58	obj/kernel.asm	/^c010bc58:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bc5c	obj/kernel.asm	/^c010bc5c:	74 1d                	je     c010bc7b <setup_kstack+0x39>$/;"	l
c010bc5e	obj/kernel.asm	/^c010bc5e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bc61	obj/kernel.asm	/^c010bc61:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bc64	obj/kernel.asm	/^c010bc64:	e8 33 f8 ff ff       	call   c010b49c <page2kva>$/;"	l
c010bc69	obj/kernel.asm	/^c010bc69:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bc6c	obj/kernel.asm	/^c010bc6c:	89 c2                	mov    %eax,%edx$/;"	l
c010bc6e	obj/kernel.asm	/^c010bc6e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc71	obj/kernel.asm	/^c010bc71:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010bc74	obj/kernel.asm	/^c010bc74:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010bc79	obj/kernel.asm	/^c010bc79:	eb 05                	jmp    c010bc80 <setup_kstack+0x3e>$/;"	l
c010bc7b	obj/kernel.asm	/^c010bc7b:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010bc80	obj/kernel.asm	/^c010bc80:	c9                   	leave  $/;"	l
c010bc81	obj/kernel.asm	/^c010bc81:	c3                   	ret    $/;"	l
c010bc82	obj/kernel.asm	/^c010bc82 <put_kstack>:$/;"	l
c010bc82	obj/kernel.asm	/^c010bc82:	55                   	push   %ebp$/;"	l
c010bc83	obj/kernel.asm	/^c010bc83:	89 e5                	mov    %esp,%ebp$/;"	l
c010bc85	obj/kernel.asm	/^c010bc85:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010bc88	obj/kernel.asm	/^c010bc88:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc8b	obj/kernel.asm	/^c010bc8b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010bc8e	obj/kernel.asm	/^c010bc8e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bc91	obj/kernel.asm	/^c010bc91:	50                   	push   %eax$/;"	l
c010bc92	obj/kernel.asm	/^c010bc92:	e8 4a f8 ff ff       	call   c010b4e1 <kva2page>$/;"	l
c010bc97	obj/kernel.asm	/^c010bc97:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bc9a	obj/kernel.asm	/^c010bc9a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010bc9d	obj/kernel.asm	/^c010bc9d:	6a 02                	push   $0x2$/;"	l
c010bc9f	obj/kernel.asm	/^c010bc9f:	50                   	push   %eax$/;"	l
c010bca0	obj/kernel.asm	/^c010bca0:	e8 08 7d ff ff       	call   c01039ad <free_pages>$/;"	l
c010bca5	obj/kernel.asm	/^c010bca5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bca8	obj/kernel.asm	/^c010bca8:	c9                   	leave  $/;"	l
c010bca9	obj/kernel.asm	/^c010bca9:	c3                   	ret    $/;"	l
c010bcaa	obj/kernel.asm	/^c010bcaa <setup_pgdir>:$/;"	l
c010bcaa	obj/kernel.asm	/^c010bcaa:	55                   	push   %ebp$/;"	l
c010bcab	obj/kernel.asm	/^c010bcab:	89 e5                	mov    %esp,%ebp$/;"	l
c010bcad	obj/kernel.asm	/^c010bcad:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bcb0	obj/kernel.asm	/^c010bcb0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bcb3	obj/kernel.asm	/^c010bcb3:	6a 01                	push   $0x1$/;"	l
c010bcb5	obj/kernel.asm	/^c010bcb5:	e8 87 7c ff ff       	call   c0103941 <alloc_pages>$/;"	l
c010bcba	obj/kernel.asm	/^c010bcba:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bcbd	obj/kernel.asm	/^c010bcbd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bcc0	obj/kernel.asm	/^c010bcc0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bcc4	obj/kernel.asm	/^c010bcc4:	75 07                	jne    c010bccd <setup_pgdir+0x23>$/;"	l
c010bcc6	obj/kernel.asm	/^c010bcc6:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010bccb	obj/kernel.asm	/^c010bccb:	eb 74                	jmp    c010bd41 <setup_pgdir+0x97>$/;"	l
c010bccd	obj/kernel.asm	/^c010bccd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bcd0	obj/kernel.asm	/^c010bcd0:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bcd3	obj/kernel.asm	/^c010bcd3:	e8 c4 f7 ff ff       	call   c010b49c <page2kva>$/;"	l
c010bcd8	obj/kernel.asm	/^c010bcd8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bcdb	obj/kernel.asm	/^c010bcdb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bcde	obj/kernel.asm	/^c010bcde:	a1 c4 df 14 c0       	mov    0xc014dfc4,%eax$/;"	l
c010bce3	obj/kernel.asm	/^c010bce3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010bce6	obj/kernel.asm	/^c010bce6:	68 00 10 00 00       	push   $0x1000$/;"	l
c010bceb	obj/kernel.asm	/^c010bceb:	50                   	push   %eax$/;"	l
c010bcec	obj/kernel.asm	/^c010bcec:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010bcef	obj/kernel.asm	/^c010bcef:	e8 db 73 00 00       	call   c01130cf <memcpy>$/;"	l
c010bcf4	obj/kernel.asm	/^c010bcf4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bcf7	obj/kernel.asm	/^c010bcf7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bcfa	obj/kernel.asm	/^c010bcfa:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c010bd00	obj/kernel.asm	/^c010bd00:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bd03	obj/kernel.asm	/^c010bd03:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010bd06	obj/kernel.asm	/^c010bd06:	81 7d ec ff ff ff bf 	cmpl   $0xbfffffff,-0x14(%ebp)$/;"	l
c010bd0d	obj/kernel.asm	/^c010bd0d:	77 17                	ja     c010bd26 <setup_pgdir+0x7c>$/;"	l
c010bd0f	obj/kernel.asm	/^c010bd0f:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010bd12	obj/kernel.asm	/^c010bd12:	68 ec 61 11 c0       	push   $0xc01161ec$/;"	l
c010bd17	obj/kernel.asm	/^c010bd17:	68 42 01 00 00       	push   $0x142$/;"	l
c010bd1c	obj/kernel.asm	/^c010bd1c:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010bd21	obj/kernel.asm	/^c010bd21:	e8 a9 47 ff ff       	call   c01004cf <__panic>$/;"	l
c010bd26	obj/kernel.asm	/^c010bd26:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bd29	obj/kernel.asm	/^c010bd29:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010bd2e	obj/kernel.asm	/^c010bd2e:	83 c8 03             	or     $0x3,%eax$/;"	l
c010bd31	obj/kernel.asm	/^c010bd31:	89 02                	mov    %eax,(%edx)$/;"	l
c010bd33	obj/kernel.asm	/^c010bd33:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd36	obj/kernel.asm	/^c010bd36:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010bd39	obj/kernel.asm	/^c010bd39:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010bd3c	obj/kernel.asm	/^c010bd3c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010bd41	obj/kernel.asm	/^c010bd41:	c9                   	leave  $/;"	l
c010bd42	obj/kernel.asm	/^c010bd42:	c3                   	ret    $/;"	l
c010bd43	obj/kernel.asm	/^c010bd43 <put_pgdir>:$/;"	l
c010bd43	obj/kernel.asm	/^c010bd43:	55                   	push   %ebp$/;"	l
c010bd44	obj/kernel.asm	/^c010bd44:	89 e5                	mov    %esp,%ebp$/;"	l
c010bd46	obj/kernel.asm	/^c010bd46:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010bd49	obj/kernel.asm	/^c010bd49:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd4c	obj/kernel.asm	/^c010bd4c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010bd4f	obj/kernel.asm	/^c010bd4f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bd52	obj/kernel.asm	/^c010bd52:	50                   	push   %eax$/;"	l
c010bd53	obj/kernel.asm	/^c010bd53:	e8 89 f7 ff ff       	call   c010b4e1 <kva2page>$/;"	l
c010bd58	obj/kernel.asm	/^c010bd58:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bd5b	obj/kernel.asm	/^c010bd5b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010bd5e	obj/kernel.asm	/^c010bd5e:	6a 01                	push   $0x1$/;"	l
c010bd60	obj/kernel.asm	/^c010bd60:	50                   	push   %eax$/;"	l
c010bd61	obj/kernel.asm	/^c010bd61:	e8 47 7c ff ff       	call   c01039ad <free_pages>$/;"	l
c010bd66	obj/kernel.asm	/^c010bd66:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bd69	obj/kernel.asm	/^c010bd69:	c9                   	leave  $/;"	l
c010bd6a	obj/kernel.asm	/^c010bd6a:	c3                   	ret    $/;"	l
c010bd6b	obj/kernel.asm	/^c010bd6b <copy_mm>:$/;"	l
c010bd6b	obj/kernel.asm	/^c010bd6b:	55                   	push   %ebp$/;"	l
c010bd6c	obj/kernel.asm	/^c010bd6c:	89 e5                	mov    %esp,%ebp$/;"	l
c010bd6e	obj/kernel.asm	/^c010bd6e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bd71	obj/kernel.asm	/^c010bd71:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010bd76	obj/kernel.asm	/^c010bd76:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010bd79	obj/kernel.asm	/^c010bd79:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010bd7c	obj/kernel.asm	/^c010bd7c:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010bd80	obj/kernel.asm	/^c010bd80:	75 0a                	jne    c010bd8c <copy_mm+0x21>$/;"	l
c010bd82	obj/kernel.asm	/^c010bd82:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010bd87	obj/kernel.asm	/^c010bd87:	e9 04 01 00 00       	jmp    c010be90 <copy_mm+0x125>$/;"	l
c010bd8c	obj/kernel.asm	/^c010bd8c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd8f	obj/kernel.asm	/^c010bd8f:	25 00 01 00 00       	and    $0x100,%eax$/;"	l
c010bd94	obj/kernel.asm	/^c010bd94:	85 c0                	test   %eax,%eax$/;"	l
c010bd96	obj/kernel.asm	/^c010bd96:	74 0b                	je     c010bda3 <copy_mm+0x38>$/;"	l
c010bd98	obj/kernel.asm	/^c010bd98:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bd9b	obj/kernel.asm	/^c010bd9b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bd9e	obj/kernel.asm	/^c010bd9e:	e9 86 00 00 00       	jmp    c010be29 <copy_mm+0xbe>$/;"	l
c010bda3	obj/kernel.asm	/^c010bda3:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c010bdaa	obj/kernel.asm	/^c010bdaa:	e8 e8 94 ff ff       	call   c0105297 <mm_create>$/;"	l
c010bdaf	obj/kernel.asm	/^c010bdaf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bdb2	obj/kernel.asm	/^c010bdb2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bdb6	obj/kernel.asm	/^c010bdb6:	75 05                	jne    c010bdbd <copy_mm+0x52>$/;"	l
c010bdb8	obj/kernel.asm	/^c010bdb8:	e9 d0 00 00 00       	jmp    c010be8d <copy_mm+0x122>$/;"	l
c010bdbd	obj/kernel.asm	/^c010bdbd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bdc0	obj/kernel.asm	/^c010bdc0:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bdc3	obj/kernel.asm	/^c010bdc3:	e8 e2 fe ff ff       	call   c010bcaa <setup_pgdir>$/;"	l
c010bdc8	obj/kernel.asm	/^c010bdc8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bdcb	obj/kernel.asm	/^c010bdcb:	85 c0                	test   %eax,%eax$/;"	l
c010bdcd	obj/kernel.asm	/^c010bdcd:	74 05                	je     c010bdd4 <copy_mm+0x69>$/;"	l
c010bdcf	obj/kernel.asm	/^c010bdcf:	e9 ab 00 00 00       	jmp    c010be7f <copy_mm+0x114>$/;"	l
c010bdd4	obj/kernel.asm	/^c010bdd4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bdd7	obj/kernel.asm	/^c010bdd7:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010bdda	obj/kernel.asm	/^c010bdda:	e8 75 f7 ff ff       	call   c010b554 <lock_mm>$/;"	l
c010bddf	obj/kernel.asm	/^c010bddf:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bde2	obj/kernel.asm	/^c010bde2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010bde5	obj/kernel.asm	/^c010bde5:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010bde8	obj/kernel.asm	/^c010bde8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bdeb	obj/kernel.asm	/^c010bdeb:	e8 74 99 ff ff       	call   c0105764 <dup_mmap>$/;"	l
c010bdf0	obj/kernel.asm	/^c010bdf0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bdf3	obj/kernel.asm	/^c010bdf3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bdf6	obj/kernel.asm	/^c010bdf6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bdf9	obj/kernel.asm	/^c010bdf9:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010bdfc	obj/kernel.asm	/^c010bdfc:	e8 8a f7 ff ff       	call   c010b58b <unlock_mm>$/;"	l
c010be01	obj/kernel.asm	/^c010be01:	83 c4 10             	add    $0x10,%esp$/;"	l
c010be04	obj/kernel.asm	/^c010be04:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010be08	obj/kernel.asm	/^c010be08:	74 1f                	je     c010be29 <copy_mm+0xbe>$/;"	l
c010be0a	obj/kernel.asm	/^c010be0a:	90                   	nop$/;"	l
c010be0b	obj/kernel.asm	/^c010be0b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010be0e	obj/kernel.asm	/^c010be0e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010be11	obj/kernel.asm	/^c010be11:	e8 35 9a ff ff       	call   c010584b <exit_mmap>$/;"	l
c010be16	obj/kernel.asm	/^c010be16:	83 c4 10             	add    $0x10,%esp$/;"	l
c010be19	obj/kernel.asm	/^c010be19:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010be1c	obj/kernel.asm	/^c010be1c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010be1f	obj/kernel.asm	/^c010be1f:	e8 1f ff ff ff       	call   c010bd43 <put_pgdir>$/;"	l
c010be24	obj/kernel.asm	/^c010be24:	83 c4 10             	add    $0x10,%esp$/;"	l
c010be27	obj/kernel.asm	/^c010be27:	eb 56                	jmp    c010be7f <copy_mm+0x114>$/;"	l
c010be29	obj/kernel.asm	/^c010be29:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010be2c	obj/kernel.asm	/^c010be2c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010be2f	obj/kernel.asm	/^c010be2f:	e8 ec f6 ff ff       	call   c010b520 <mm_count_inc>$/;"	l
c010be34	obj/kernel.asm	/^c010be34:	83 c4 10             	add    $0x10,%esp$/;"	l
c010be37	obj/kernel.asm	/^c010be37:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010be3a	obj/kernel.asm	/^c010be3a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010be3d	obj/kernel.asm	/^c010be3d:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010be40	obj/kernel.asm	/^c010be40:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010be43	obj/kernel.asm	/^c010be43:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010be46	obj/kernel.asm	/^c010be46:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010be49	obj/kernel.asm	/^c010be49:	81 7d e8 ff ff ff bf 	cmpl   $0xbfffffff,-0x18(%ebp)$/;"	l
c010be50	obj/kernel.asm	/^c010be50:	77 17                	ja     c010be69 <copy_mm+0xfe>$/;"	l
c010be52	obj/kernel.asm	/^c010be52:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010be55	obj/kernel.asm	/^c010be55:	68 ec 61 11 c0       	push   $0xc01161ec$/;"	l
c010be5a	obj/kernel.asm	/^c010be5a:	68 71 01 00 00       	push   $0x171$/;"	l
c010be5f	obj/kernel.asm	/^c010be5f:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010be64	obj/kernel.asm	/^c010be64:	e8 66 46 ff ff       	call   c01004cf <__panic>$/;"	l
c010be69	obj/kernel.asm	/^c010be69:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010be6c	obj/kernel.asm	/^c010be6c:	8d 90 00 00 00 40    	lea    0x40000000(%eax),%edx$/;"	l
c010be72	obj/kernel.asm	/^c010be72:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010be75	obj/kernel.asm	/^c010be75:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010be78	obj/kernel.asm	/^c010be78:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010be7d	obj/kernel.asm	/^c010be7d:	eb 11                	jmp    c010be90 <copy_mm+0x125>$/;"	l
c010be7f	obj/kernel.asm	/^c010be7f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010be82	obj/kernel.asm	/^c010be82:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010be85	obj/kernel.asm	/^c010be85:	e8 36 97 ff ff       	call   c01055c0 <mm_destroy>$/;"	l
c010be8a	obj/kernel.asm	/^c010be8a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010be8d	obj/kernel.asm	/^c010be8d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010be90	obj/kernel.asm	/^c010be90:	c9                   	leave  $/;"	l
c010be91	obj/kernel.asm	/^c010be91:	c3                   	ret    $/;"	l
c010be92	obj/kernel.asm	/^c010be92 <copy_thread>:$/;"	l
c010be92	obj/kernel.asm	/^c010be92:	55                   	push   %ebp$/;"	l
c010be93	obj/kernel.asm	/^c010be93:	89 e5                	mov    %esp,%ebp$/;"	l
c010be95	obj/kernel.asm	/^c010be95:	57                   	push   %edi$/;"	l
c010be96	obj/kernel.asm	/^c010be96:	56                   	push   %esi$/;"	l
c010be97	obj/kernel.asm	/^c010be97:	53                   	push   %ebx$/;"	l
c010be98	obj/kernel.asm	/^c010be98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be9b	obj/kernel.asm	/^c010be9b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010be9e	obj/kernel.asm	/^c010be9e:	05 b4 1f 00 00       	add    $0x1fb4,%eax$/;"	l
c010bea3	obj/kernel.asm	/^c010bea3:	89 c2                	mov    %eax,%edx$/;"	l
c010bea5	obj/kernel.asm	/^c010bea5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bea8	obj/kernel.asm	/^c010bea8:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c010beab	obj/kernel.asm	/^c010beab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010beae	obj/kernel.asm	/^c010beae:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010beb1	obj/kernel.asm	/^c010beb1:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010beb4	obj/kernel.asm	/^c010beb4:	89 d3                	mov    %edx,%ebx$/;"	l
c010beb6	obj/kernel.asm	/^c010beb6:	ba 4c 00 00 00       	mov    $0x4c,%edx$/;"	l
c010bebb	obj/kernel.asm	/^c010bebb:	8b 0b                	mov    (%ebx),%ecx$/;"	l
c010bebd	obj/kernel.asm	/^c010bebd:	89 08                	mov    %ecx,(%eax)$/;"	l
c010bebf	obj/kernel.asm	/^c010bebf:	8b 4c 13 fc          	mov    -0x4(%ebx,%edx,1),%ecx$/;"	l
c010bec3	obj/kernel.asm	/^c010bec3:	89 4c 10 fc          	mov    %ecx,-0x4(%eax,%edx,1)$/;"	l
c010bec7	obj/kernel.asm	/^c010bec7:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
c010beca	obj/kernel.asm	/^c010beca:	83 e7 fc             	and    $0xfffffffc,%edi$/;"	l
c010becd	obj/kernel.asm	/^c010becd:	29 f8                	sub    %edi,%eax$/;"	l
c010becf	obj/kernel.asm	/^c010becf:	29 c3                	sub    %eax,%ebx$/;"	l
c010bed1	obj/kernel.asm	/^c010bed1:	01 c2                	add    %eax,%edx$/;"	l
c010bed3	obj/kernel.asm	/^c010bed3:	83 e2 fc             	and    $0xfffffffc,%edx$/;"	l
c010bed6	obj/kernel.asm	/^c010bed6:	89 d0                	mov    %edx,%eax$/;"	l
c010bed8	obj/kernel.asm	/^c010bed8:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010bedb	obj/kernel.asm	/^c010bedb:	89 de                	mov    %ebx,%esi$/;"	l
c010bedd	obj/kernel.asm	/^c010bedd:	89 c1                	mov    %eax,%ecx$/;"	l
c010bedf	obj/kernel.asm	/^c010bedf:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c010bee1	obj/kernel.asm	/^c010bee1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bee4	obj/kernel.asm	/^c010bee4:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010bee7	obj/kernel.asm	/^c010bee7:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
c010beee	obj/kernel.asm	/^c010beee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bef1	obj/kernel.asm	/^c010bef1:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010bef4	obj/kernel.asm	/^c010bef4:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010bef7	obj/kernel.asm	/^c010bef7:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010befa	obj/kernel.asm	/^c010befa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010befd	obj/kernel.asm	/^c010befd:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010bf00	obj/kernel.asm	/^c010bf00:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010bf03	obj/kernel.asm	/^c010bf03:	8b 52 3c             	mov    0x3c(%edx),%edx$/;"	l
c010bf06	obj/kernel.asm	/^c010bf06:	8b 52 40             	mov    0x40(%edx),%edx$/;"	l
c010bf09	obj/kernel.asm	/^c010bf09:	80 ce 02             	or     $0x2,%dh$/;"	l
c010bf0c	obj/kernel.asm	/^c010bf0c:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010bf0f	obj/kernel.asm	/^c010bf0f:	ba 9e ba 10 c0       	mov    $0xc010ba9e,%edx$/;"	l
c010bf14	obj/kernel.asm	/^c010bf14:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bf17	obj/kernel.asm	/^c010bf17:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010bf1a	obj/kernel.asm	/^c010bf1a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bf1d	obj/kernel.asm	/^c010bf1d:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010bf20	obj/kernel.asm	/^c010bf20:	89 c2                	mov    %eax,%edx$/;"	l
c010bf22	obj/kernel.asm	/^c010bf22:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bf25	obj/kernel.asm	/^c010bf25:	89 50 20             	mov    %edx,0x20(%eax)$/;"	l
c010bf28	obj/kernel.asm	/^c010bf28:	5b                   	pop    %ebx$/;"	l
c010bf29	obj/kernel.asm	/^c010bf29:	5e                   	pop    %esi$/;"	l
c010bf2a	obj/kernel.asm	/^c010bf2a:	5f                   	pop    %edi$/;"	l
c010bf2b	obj/kernel.asm	/^c010bf2b:	5d                   	pop    %ebp$/;"	l
c010bf2c	obj/kernel.asm	/^c010bf2c:	c3                   	ret    $/;"	l
c010bf2d	obj/kernel.asm	/^c010bf2d <copy_files>:$/;"	l
c010bf2d	obj/kernel.asm	/^c010bf2d:	55                   	push   %ebp$/;"	l
c010bf2e	obj/kernel.asm	/^c010bf2e:	89 e5                	mov    %esp,%ebp$/;"	l
c010bf30	obj/kernel.asm	/^c010bf30:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bf33	obj/kernel.asm	/^c010bf33:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010bf38	obj/kernel.asm	/^c010bf38:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010bf3e	obj/kernel.asm	/^c010bf3e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010bf41	obj/kernel.asm	/^c010bf41:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010bf45	obj/kernel.asm	/^c010bf45:	75 19                	jne    c010bf60 <copy_files+0x33>$/;"	l
c010bf47	obj/kernel.asm	/^c010bf47:	68 24 62 11 c0       	push   $0xc0116224$/;"	l
c010bf4c	obj/kernel.asm	/^c010bf4c:	68 37 62 11 c0       	push   $0xc0116237$/;"	l
c010bf51	obj/kernel.asm	/^c010bf51:	68 8f 01 00 00       	push   $0x18f$/;"	l
c010bf56	obj/kernel.asm	/^c010bf56:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010bf5b	obj/kernel.asm	/^c010bf5b:	e8 6f 45 ff ff       	call   c01004cf <__panic>$/;"	l
c010bf60	obj/kernel.asm	/^c010bf60:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bf63	obj/kernel.asm	/^c010bf63:	25 00 08 00 00       	and    $0x800,%eax$/;"	l
c010bf68	obj/kernel.asm	/^c010bf68:	85 c0                	test   %eax,%eax$/;"	l
c010bf6a	obj/kernel.asm	/^c010bf6a:	74 08                	je     c010bf74 <copy_files+0x47>$/;"	l
c010bf6c	obj/kernel.asm	/^c010bf6c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bf6f	obj/kernel.asm	/^c010bf6f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bf72	obj/kernel.asm	/^c010bf72:	eb 42                	jmp    c010bfb6 <copy_files+0x89>$/;"	l
c010bf74	obj/kernel.asm	/^c010bf74:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c010bf7b	obj/kernel.asm	/^c010bf7b:	e8 8f f1 ff ff       	call   c010b10f <files_create>$/;"	l
c010bf80	obj/kernel.asm	/^c010bf80:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bf83	obj/kernel.asm	/^c010bf83:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bf87	obj/kernel.asm	/^c010bf87:	75 02                	jne    c010bf8b <copy_files+0x5e>$/;"	l
c010bf89	obj/kernel.asm	/^c010bf89:	eb 4c                	jmp    c010bfd7 <copy_files+0xaa>$/;"	l
c010bf8b	obj/kernel.asm	/^c010bf8b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010bf8e	obj/kernel.asm	/^c010bf8e:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010bf91	obj/kernel.asm	/^c010bf91:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bf94	obj/kernel.asm	/^c010bf94:	e8 08 f3 ff ff       	call   c010b2a1 <dup_files>$/;"	l
c010bf99	obj/kernel.asm	/^c010bf99:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bf9c	obj/kernel.asm	/^c010bf9c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bf9f	obj/kernel.asm	/^c010bf9f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010bfa3	obj/kernel.asm	/^c010bfa3:	74 11                	je     c010bfb6 <copy_files+0x89>$/;"	l
c010bfa5	obj/kernel.asm	/^c010bfa5:	90                   	nop$/;"	l
c010bfa6	obj/kernel.asm	/^c010bfa6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bfa9	obj/kernel.asm	/^c010bfa9:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bfac	obj/kernel.asm	/^c010bfac:	e8 c7 f1 ff ff       	call   c010b178 <files_destroy>$/;"	l
c010bfb1	obj/kernel.asm	/^c010bfb1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bfb4	obj/kernel.asm	/^c010bfb4:	eb 21                	jmp    c010bfd7 <copy_files+0xaa>$/;"	l
c010bfb6	obj/kernel.asm	/^c010bfb6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bfb9	obj/kernel.asm	/^c010bfb9:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bfbc	obj/kernel.asm	/^c010bfbc:	e8 f4 f5 ff ff       	call   c010b5b5 <files_count_inc>$/;"	l
c010bfc1	obj/kernel.asm	/^c010bfc1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bfc4	obj/kernel.asm	/^c010bfc4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bfc7	obj/kernel.asm	/^c010bfc7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010bfca	obj/kernel.asm	/^c010bfca:	89 90 c4 00 00 00    	mov    %edx,0xc4(%eax)$/;"	l
c010bfd0	obj/kernel.asm	/^c010bfd0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010bfd5	obj/kernel.asm	/^c010bfd5:	eb 03                	jmp    c010bfda <copy_files+0xad>$/;"	l
c010bfd7	obj/kernel.asm	/^c010bfd7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bfda	obj/kernel.asm	/^c010bfda:	c9                   	leave  $/;"	l
c010bfdb	obj/kernel.asm	/^c010bfdb:	c3                   	ret    $/;"	l
c010bfdc	obj/kernel.asm	/^c010bfdc <put_files>:$/;"	l
c010bfdc	obj/kernel.asm	/^c010bfdc:	55                   	push   %ebp$/;"	l
c010bfdd	obj/kernel.asm	/^c010bfdd:	89 e5                	mov    %esp,%ebp$/;"	l
c010bfdf	obj/kernel.asm	/^c010bfdf:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bfe2	obj/kernel.asm	/^c010bfe2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bfe5	obj/kernel.asm	/^c010bfe5:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010bfeb	obj/kernel.asm	/^c010bfeb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bfee	obj/kernel.asm	/^c010bfee:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bff2	obj/kernel.asm	/^c010bff2:	74 1d                	je     c010c011 <put_files+0x35>$/;"	l
c010bff4	obj/kernel.asm	/^c010bff4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bff7	obj/kernel.asm	/^c010bff7:	e8 d3 f5 ff ff       	call   c010b5cf <files_count_dec>$/;"	l
c010bffc	obj/kernel.asm	/^c010bffc:	83 c4 04             	add    $0x4,%esp$/;"	l
c010bfff	obj/kernel.asm	/^c010bfff:	85 c0                	test   %eax,%eax$/;"	l
c010c001	obj/kernel.asm	/^c010c001:	75 0e                	jne    c010c011 <put_files+0x35>$/;"	l
c010c003	obj/kernel.asm	/^c010c003:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c006	obj/kernel.asm	/^c010c006:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c009	obj/kernel.asm	/^c010c009:	e8 6a f1 ff ff       	call   c010b178 <files_destroy>$/;"	l
c010c00e	obj/kernel.asm	/^c010c00e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c011	obj/kernel.asm	/^c010c011:	c9                   	leave  $/;"	l
c010c012	obj/kernel.asm	/^c010c012:	c3                   	ret    $/;"	l
c010c013	obj/kernel.asm	/^c010c013 <do_fork>:$/;"	l
c010c013	obj/kernel.asm	/^c010c013:	55                   	push   %ebp$/;"	l
c010c014	obj/kernel.asm	/^c010c014:	89 e5                	mov    %esp,%ebp$/;"	l
c010c016	obj/kernel.asm	/^c010c016:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c019	obj/kernel.asm	/^c010c019:	c7 45 f4 fb ff ff ff 	movl   $0xfffffffb,-0xc(%ebp)$/;"	l
c010c020	obj/kernel.asm	/^c010c020:	a1 c0 00 15 c0       	mov    0xc01500c0,%eax$/;"	l
c010c025	obj/kernel.asm	/^c010c025:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c010c02a	obj/kernel.asm	/^c010c02a:	7e 05                	jle    c010c031 <do_fork+0x1e>$/;"	l
c010c02c	obj/kernel.asm	/^c010c02c:	e9 f3 00 00 00       	jmp    c010c124 <do_fork+0x111>$/;"	l
c010c031	obj/kernel.asm	/^c010c031:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010c038	obj/kernel.asm	/^c010c038:	e8 ac f5 ff ff       	call   c010b5e9 <alloc_proc>$/;"	l
c010c03d	obj/kernel.asm	/^c010c03d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c040	obj/kernel.asm	/^c010c040:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010c044	obj/kernel.asm	/^c010c044:	75 05                	jne    c010c04b <do_fork+0x38>$/;"	l
c010c046	obj/kernel.asm	/^c010c046:	e9 d9 00 00 00       	jmp    c010c124 <do_fork+0x111>$/;"	l
c010c04b	obj/kernel.asm	/^c010c04b:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c050	obj/kernel.asm	/^c010c050:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010c056	obj/kernel.asm	/^c010c056:	85 c0                	test   %eax,%eax$/;"	l
c010c058	obj/kernel.asm	/^c010c058:	74 17                	je     c010c071 <do_fork+0x5e>$/;"	l
c010c05a	obj/kernel.asm	/^c010c05a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c05d	obj/kernel.asm	/^c010c05d:	68 4c 62 11 c0       	push   $0xc011624c$/;"	l
c010c062	obj/kernel.asm	/^c010c062:	68 e5 01 00 00       	push   $0x1e5$/;"	l
c010c067	obj/kernel.asm	/^c010c067:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010c06c	obj/kernel.asm	/^c010c06c:	e8 5e 44 ff ff       	call   c01004cf <__panic>$/;"	l
c010c071	obj/kernel.asm	/^c010c071:	8b 15 88 e0 14 c0    	mov    0xc014e088,%edx$/;"	l
c010c077	obj/kernel.asm	/^c010c077:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c07a	obj/kernel.asm	/^c010c07a:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010c07d	obj/kernel.asm	/^c010c07d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c080	obj/kernel.asm	/^c010c080:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c083	obj/kernel.asm	/^c010c083:	e8 ba fb ff ff       	call   c010bc42 <setup_kstack>$/;"	l
c010c088	obj/kernel.asm	/^c010c088:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c08b	obj/kernel.asm	/^c010c08b:	85 c0                	test   %eax,%eax$/;"	l
c010c08d	obj/kernel.asm	/^c010c08d:	74 05                	je     c010c094 <do_fork+0x81>$/;"	l
c010c08f	obj/kernel.asm	/^c010c08f:	e9 95 00 00 00       	jmp    c010c129 <do_fork+0x116>$/;"	l
c010c094	obj/kernel.asm	/^c010c094:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c097	obj/kernel.asm	/^c010c097:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c09a	obj/kernel.asm	/^c010c09a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c09d	obj/kernel.asm	/^c010c09d:	e8 c9 fc ff ff       	call   c010bd6b <copy_mm>$/;"	l
c010c0a2	obj/kernel.asm	/^c010c0a2:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c0a5	obj/kernel.asm	/^c010c0a5:	85 c0                	test   %eax,%eax$/;"	l
c010c0a7	obj/kernel.asm	/^c010c0a7:	74 11                	je     c010c0ba <do_fork+0xa7>$/;"	l
c010c0a9	obj/kernel.asm	/^c010c0a9:	90                   	nop$/;"	l
c010c0aa	obj/kernel.asm	/^c010c0aa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c0ad	obj/kernel.asm	/^c010c0ad:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c0b0	obj/kernel.asm	/^c010c0b0:	e8 cd fb ff ff       	call   c010bc82 <put_kstack>$/;"	l
c010c0b5	obj/kernel.asm	/^c010c0b5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c0b8	obj/kernel.asm	/^c010c0b8:	eb 6f                	jmp    c010c129 <do_fork+0x116>$/;"	l
c010c0ba	obj/kernel.asm	/^c010c0ba:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c0bd	obj/kernel.asm	/^c010c0bd:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010c0c0	obj/kernel.asm	/^c010c0c0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c0c3	obj/kernel.asm	/^c010c0c3:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c0c6	obj/kernel.asm	/^c010c0c6:	e8 c7 fd ff ff       	call   c010be92 <copy_thread>$/;"	l
c010c0cb	obj/kernel.asm	/^c010c0cb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c0ce	obj/kernel.asm	/^c010c0ce:	e8 29 f3 ff ff       	call   c010b3fc <__intr_save>$/;"	l
c010c0d3	obj/kernel.asm	/^c010c0d3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c0d6	obj/kernel.asm	/^c010c0d6:	e8 4e f8 ff ff       	call   c010b929 <get_pid>$/;"	l
c010c0db	obj/kernel.asm	/^c010c0db:	89 c2                	mov    %eax,%edx$/;"	l
c010c0dd	obj/kernel.asm	/^c010c0dd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c0e0	obj/kernel.asm	/^c010c0e0:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010c0e3	obj/kernel.asm	/^c010c0e3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c0e6	obj/kernel.asm	/^c010c0e6:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c0e9	obj/kernel.asm	/^c010c0e9:	e8 cc f9 ff ff       	call   c010baba <hash_proc>$/;"	l
c010c0ee	obj/kernel.asm	/^c010c0ee:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c0f1	obj/kernel.asm	/^c010c0f1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c0f4	obj/kernel.asm	/^c010c0f4:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c0f7	obj/kernel.asm	/^c010c0f7:	e8 d2 f6 ff ff       	call   c010b7ce <set_links>$/;"	l
c010c0fc	obj/kernel.asm	/^c010c0fc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c0ff	obj/kernel.asm	/^c010c0ff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c102	obj/kernel.asm	/^c010c102:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010c105	obj/kernel.asm	/^c010c105:	e8 1c f3 ff ff       	call   c010b426 <__intr_restore>$/;"	l
c010c10a	obj/kernel.asm	/^c010c10a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c10d	obj/kernel.asm	/^c010c10d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c110	obj/kernel.asm	/^c010c110:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c113	obj/kernel.asm	/^c010c113:	e8 09 0e 00 00       	call   c010cf21 <wakeup_proc>$/;"	l
c010c118	obj/kernel.asm	/^c010c118:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c11b	obj/kernel.asm	/^c010c11b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c11e	obj/kernel.asm	/^c010c11e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c121	obj/kernel.asm	/^c010c121:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c124	obj/kernel.asm	/^c010c124:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c127	obj/kernel.asm	/^c010c127:	eb 10                	jmp    c010c139 <do_fork+0x126>$/;"	l
c010c129	obj/kernel.asm	/^c010c129:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c12c	obj/kernel.asm	/^c010c12c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c12f	obj/kernel.asm	/^c010c12f:	e8 83 b3 ff ff       	call   c01074b7 <kfree>$/;"	l
c010c134	obj/kernel.asm	/^c010c134:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c137	obj/kernel.asm	/^c010c137:	eb eb                	jmp    c010c124 <do_fork+0x111>$/;"	l
c010c139	obj/kernel.asm	/^c010c139:	c9                   	leave  $/;"	l
c010c13a	obj/kernel.asm	/^c010c13a:	c3                   	ret    $/;"	l
c010c13b	obj/kernel.asm	/^c010c13b <do_exit>:$/;"	l
c010c13b	obj/kernel.asm	/^c010c13b:	55                   	push   %ebp$/;"	l
c010c13c	obj/kernel.asm	/^c010c13c:	89 e5                	mov    %esp,%ebp$/;"	l
c010c13e	obj/kernel.asm	/^c010c13e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c141	obj/kernel.asm	/^c010c141:	8b 15 88 e0 14 c0    	mov    0xc014e088,%edx$/;"	l
c010c147	obj/kernel.asm	/^c010c147:	a1 80 e0 14 c0       	mov    0xc014e080,%eax$/;"	l
c010c14c	obj/kernel.asm	/^c010c14c:	39 c2                	cmp    %eax,%edx$/;"	l
c010c14e	obj/kernel.asm	/^c010c14e:	75 17                	jne    c010c167 <do_exit+0x2c>$/;"	l
c010c150	obj/kernel.asm	/^c010c150:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c153	obj/kernel.asm	/^c010c153:	68 61 62 11 c0       	push   $0xc0116261$/;"	l
c010c158	obj/kernel.asm	/^c010c158:	68 1d 02 00 00       	push   $0x21d$/;"	l
c010c15d	obj/kernel.asm	/^c010c15d:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010c162	obj/kernel.asm	/^c010c162:	e8 68 43 ff ff       	call   c01004cf <__panic>$/;"	l
c010c167	obj/kernel.asm	/^c010c167:	8b 15 88 e0 14 c0    	mov    0xc014e088,%edx$/;"	l
c010c16d	obj/kernel.asm	/^c010c16d:	a1 84 e0 14 c0       	mov    0xc014e084,%eax$/;"	l
c010c172	obj/kernel.asm	/^c010c172:	39 c2                	cmp    %eax,%edx$/;"	l
c010c174	obj/kernel.asm	/^c010c174:	75 17                	jne    c010c18d <do_exit+0x52>$/;"	l
c010c176	obj/kernel.asm	/^c010c176:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c179	obj/kernel.asm	/^c010c179:	68 71 62 11 c0       	push   $0xc0116271$/;"	l
c010c17e	obj/kernel.asm	/^c010c17e:	68 20 02 00 00       	push   $0x220$/;"	l
c010c183	obj/kernel.asm	/^c010c183:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010c188	obj/kernel.asm	/^c010c188:	e8 42 43 ff ff       	call   c01004cf <__panic>$/;"	l
c010c18d	obj/kernel.asm	/^c010c18d:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c192	obj/kernel.asm	/^c010c192:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010c195	obj/kernel.asm	/^c010c195:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c198	obj/kernel.asm	/^c010c198:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c19c	obj/kernel.asm	/^c010c19c:	74 56                	je     c010c1f4 <do_exit+0xb9>$/;"	l
c010c19e	obj/kernel.asm	/^c010c19e:	a1 14 12 15 c0       	mov    0xc0151214,%eax$/;"	l
c010c1a3	obj/kernel.asm	/^c010c1a3:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c1a6	obj/kernel.asm	/^c010c1a6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c1a9	obj/kernel.asm	/^c010c1a9:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010c1ac	obj/kernel.asm	/^c010c1ac:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c1af	obj/kernel.asm	/^c010c1af:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c1b2	obj/kernel.asm	/^c010c1b2:	e8 83 f3 ff ff       	call   c010b53a <mm_count_dec>$/;"	l
c010c1b7	obj/kernel.asm	/^c010c1b7:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c1ba	obj/kernel.asm	/^c010c1ba:	85 c0                	test   %eax,%eax$/;"	l
c010c1bc	obj/kernel.asm	/^c010c1bc:	75 2a                	jne    c010c1e8 <do_exit+0xad>$/;"	l
c010c1be	obj/kernel.asm	/^c010c1be:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c1c1	obj/kernel.asm	/^c010c1c1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c1c4	obj/kernel.asm	/^c010c1c4:	e8 82 96 ff ff       	call   c010584b <exit_mmap>$/;"	l
c010c1c9	obj/kernel.asm	/^c010c1c9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c1cc	obj/kernel.asm	/^c010c1cc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c1cf	obj/kernel.asm	/^c010c1cf:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c1d2	obj/kernel.asm	/^c010c1d2:	e8 6c fb ff ff       	call   c010bd43 <put_pgdir>$/;"	l
c010c1d7	obj/kernel.asm	/^c010c1d7:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c1da	obj/kernel.asm	/^c010c1da:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c1dd	obj/kernel.asm	/^c010c1dd:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c1e0	obj/kernel.asm	/^c010c1e0:	e8 db 93 ff ff       	call   c01055c0 <mm_destroy>$/;"	l
c010c1e5	obj/kernel.asm	/^c010c1e5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c1e8	obj/kernel.asm	/^c010c1e8:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c1ed	obj/kernel.asm	/^c010c1ed:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010c1f4	obj/kernel.asm	/^c010c1f4:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c1f9	obj/kernel.asm	/^c010c1f9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c1fc	obj/kernel.asm	/^c010c1fc:	50                   	push   %eax$/;"	l
c010c1fd	obj/kernel.asm	/^c010c1fd:	e8 da fd ff ff       	call   c010bfdc <put_files>$/;"	l
c010c202	obj/kernel.asm	/^c010c202:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c205	obj/kernel.asm	/^c010c205:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c20a	obj/kernel.asm	/^c010c20a:	c7 00 03 00 00 00    	movl   $0x3,(%eax)$/;"	l
c010c210	obj/kernel.asm	/^c010c210:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c215	obj/kernel.asm	/^c010c215:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c218	obj/kernel.asm	/^c010c218:	89 90 8c 00 00 00    	mov    %edx,0x8c(%eax)$/;"	l
c010c21e	obj/kernel.asm	/^c010c21e:	e8 d9 f1 ff ff       	call   c010b3fc <__intr_save>$/;"	l
c010c223	obj/kernel.asm	/^c010c223:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c226	obj/kernel.asm	/^c010c226:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c22b	obj/kernel.asm	/^c010c22b:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c22e	obj/kernel.asm	/^c010c22e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c231	obj/kernel.asm	/^c010c231:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c234	obj/kernel.asm	/^c010c234:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010c23a	obj/kernel.asm	/^c010c23a:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c010c23f	obj/kernel.asm	/^c010c23f:	75 0e                	jne    c010c24f <do_exit+0x114>$/;"	l
c010c241	obj/kernel.asm	/^c010c241:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c244	obj/kernel.asm	/^c010c244:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010c247	obj/kernel.asm	/^c010c247:	e8 d5 0c 00 00       	call   c010cf21 <wakeup_proc>$/;"	l
c010c24c	obj/kernel.asm	/^c010c24c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c24f	obj/kernel.asm	/^c010c24f:	e9 ab 00 00 00       	jmp    c010c2ff <do_exit+0x1c4>$/;"	l
c010c254	obj/kernel.asm	/^c010c254:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c259	obj/kernel.asm	/^c010c259:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010c25f	obj/kernel.asm	/^c010c25f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c262	obj/kernel.asm	/^c010c262:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c267	obj/kernel.asm	/^c010c267:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010c26a	obj/kernel.asm	/^c010c26a:	8b 92 9c 00 00 00    	mov    0x9c(%edx),%edx$/;"	l
c010c270	obj/kernel.asm	/^c010c270:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010c276	obj/kernel.asm	/^c010c276:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c279	obj/kernel.asm	/^c010c279:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%eax)$/;"	l
c010c280	obj/kernel.asm	/^c010c280:	00 00 00 $/;"	l
c010c283	obj/kernel.asm	/^c010c283:	a1 84 e0 14 c0       	mov    0xc014e084,%eax$/;"	l
c010c288	obj/kernel.asm	/^c010c288:	8b 90 94 00 00 00    	mov    0x94(%eax),%edx$/;"	l
c010c28e	obj/kernel.asm	/^c010c28e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c291	obj/kernel.asm	/^c010c291:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010c297	obj/kernel.asm	/^c010c297:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c29a	obj/kernel.asm	/^c010c29a:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010c2a0	obj/kernel.asm	/^c010c2a0:	85 c0                	test   %eax,%eax$/;"	l
c010c2a2	obj/kernel.asm	/^c010c2a2:	74 14                	je     c010c2b8 <do_exit+0x17d>$/;"	l
c010c2a4	obj/kernel.asm	/^c010c2a4:	a1 84 e0 14 c0       	mov    0xc014e084,%eax$/;"	l
c010c2a9	obj/kernel.asm	/^c010c2a9:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010c2af	obj/kernel.asm	/^c010c2af:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010c2b2	obj/kernel.asm	/^c010c2b2:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c010c2b8	obj/kernel.asm	/^c010c2b8:	8b 15 84 e0 14 c0    	mov    0xc014e084,%edx$/;"	l
c010c2be	obj/kernel.asm	/^c010c2be:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c2c1	obj/kernel.asm	/^c010c2c1:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010c2c4	obj/kernel.asm	/^c010c2c4:	a1 84 e0 14 c0       	mov    0xc014e084,%eax$/;"	l
c010c2c9	obj/kernel.asm	/^c010c2c9:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010c2cc	obj/kernel.asm	/^c010c2cc:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010c2d2	obj/kernel.asm	/^c010c2d2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c2d5	obj/kernel.asm	/^c010c2d5:	8b 00                	mov    (%eax),%eax$/;"	l
c010c2d7	obj/kernel.asm	/^c010c2d7:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010c2da	obj/kernel.asm	/^c010c2da:	75 23                	jne    c010c2ff <do_exit+0x1c4>$/;"	l
c010c2dc	obj/kernel.asm	/^c010c2dc:	a1 84 e0 14 c0       	mov    0xc014e084,%eax$/;"	l
c010c2e1	obj/kernel.asm	/^c010c2e1:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010c2e7	obj/kernel.asm	/^c010c2e7:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c010c2ec	obj/kernel.asm	/^c010c2ec:	75 11                	jne    c010c2ff <do_exit+0x1c4>$/;"	l
c010c2ee	obj/kernel.asm	/^c010c2ee:	a1 84 e0 14 c0       	mov    0xc014e084,%eax$/;"	l
c010c2f3	obj/kernel.asm	/^c010c2f3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c2f6	obj/kernel.asm	/^c010c2f6:	50                   	push   %eax$/;"	l
c010c2f7	obj/kernel.asm	/^c010c2f7:	e8 25 0c 00 00       	call   c010cf21 <wakeup_proc>$/;"	l
c010c2fc	obj/kernel.asm	/^c010c2fc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c2ff	obj/kernel.asm	/^c010c2ff:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c304	obj/kernel.asm	/^c010c304:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010c30a	obj/kernel.asm	/^c010c30a:	85 c0                	test   %eax,%eax$/;"	l
c010c30c	obj/kernel.asm	/^c010c30c:	0f 85 42 ff ff ff    	jne    c010c254 <do_exit+0x119>$/;"	l
c010c312	obj/kernel.asm	/^c010c312:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c315	obj/kernel.asm	/^c010c315:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c318	obj/kernel.asm	/^c010c318:	e8 09 f1 ff ff       	call   c010b426 <__intr_restore>$/;"	l
c010c31d	obj/kernel.asm	/^c010c31d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c320	obj/kernel.asm	/^c010c320:	e8 8b 0c 00 00       	call   c010cfb0 <schedule>$/;"	l
c010c325	obj/kernel.asm	/^c010c325:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c32a	obj/kernel.asm	/^c010c32a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c32d	obj/kernel.asm	/^c010c32d:	50                   	push   %eax$/;"	l
c010c32e	obj/kernel.asm	/^c010c32e:	68 84 62 11 c0       	push   $0xc0116284$/;"	l
c010c333	obj/kernel.asm	/^c010c333:	68 4d 02 00 00       	push   $0x24d$/;"	l
c010c338	obj/kernel.asm	/^c010c338:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010c33d	obj/kernel.asm	/^c010c33d:	e8 8d 41 ff ff       	call   c01004cf <__panic>$/;"	l
c010c342	obj/kernel.asm	/^c010c342 <load_icode_read>:$/;"	l
c010c342	obj/kernel.asm	/^c010c342:	55                   	push   %ebp$/;"	l
c010c343	obj/kernel.asm	/^c010c343:	89 e5                	mov    %esp,%ebp$/;"	l
c010c345	obj/kernel.asm	/^c010c345:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c348	obj/kernel.asm	/^c010c348:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c34b	obj/kernel.asm	/^c010c34b:	6a 00                	push   $0x0$/;"	l
c010c34d	obj/kernel.asm	/^c010c34d:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010c350	obj/kernel.asm	/^c010c350:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c353	obj/kernel.asm	/^c010c353:	e8 45 da ff ff       	call   c0109d9d <sysfile_seek>$/;"	l
c010c358	obj/kernel.asm	/^c010c358:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c35b	obj/kernel.asm	/^c010c35b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c35e	obj/kernel.asm	/^c010c35e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c362	obj/kernel.asm	/^c010c362:	74 05                	je     c010c369 <load_icode_read+0x27>$/;"	l
c010c364	obj/kernel.asm	/^c010c364:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c367	obj/kernel.asm	/^c010c367:	eb 33                	jmp    c010c39c <load_icode_read+0x5a>$/;"	l
c010c369	obj/kernel.asm	/^c010c369:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c36c	obj/kernel.asm	/^c010c36c:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010c36f	obj/kernel.asm	/^c010c36f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c372	obj/kernel.asm	/^c010c372:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c375	obj/kernel.asm	/^c010c375:	e8 73 d7 ff ff       	call   c0109aed <sysfile_read>$/;"	l
c010c37a	obj/kernel.asm	/^c010c37a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c37d	obj/kernel.asm	/^c010c37d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c380	obj/kernel.asm	/^c010c380:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c383	obj/kernel.asm	/^c010c383:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010c386	obj/kernel.asm	/^c010c386:	74 0f                	je     c010c397 <load_icode_read+0x55>$/;"	l
c010c388	obj/kernel.asm	/^c010c388:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010c38d	obj/kernel.asm	/^c010c38d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c391	obj/kernel.asm	/^c010c391:	0f 48 45 f4          	cmovs  -0xc(%ebp),%eax$/;"	l
c010c395	obj/kernel.asm	/^c010c395:	eb 05                	jmp    c010c39c <load_icode_read+0x5a>$/;"	l
c010c397	obj/kernel.asm	/^c010c397:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c39c	obj/kernel.asm	/^c010c39c:	c9                   	leave  $/;"	l
c010c39d	obj/kernel.asm	/^c010c39d:	c3                   	ret    $/;"	l
c010c39e	obj/kernel.asm	/^c010c39e <load_icode>:$/;"	l
c010c39e	obj/kernel.asm	/^c010c39e:	55                   	push   %ebp$/;"	l
c010c39f	obj/kernel.asm	/^c010c39f:	89 e5                	mov    %esp,%ebp$/;"	l
c010c3a1	obj/kernel.asm	/^c010c3a1:	5d                   	pop    %ebp$/;"	l
c010c3a2	obj/kernel.asm	/^c010c3a2:	c3                   	ret    $/;"	l
c010c3a3	obj/kernel.asm	/^c010c3a3 <put_kargv>:$/;"	l
c010c3a3	obj/kernel.asm	/^c010c3a3:	55                   	push   %ebp$/;"	l
c010c3a4	obj/kernel.asm	/^c010c3a4:	89 e5                	mov    %esp,%ebp$/;"	l
c010c3a6	obj/kernel.asm	/^c010c3a6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c3a9	obj/kernel.asm	/^c010c3a9:	eb 21                	jmp    c010c3cc <put_kargv+0x29>$/;"	l
c010c3ab	obj/kernel.asm	/^c010c3ab:	83 6d 08 01          	subl   $0x1,0x8(%ebp)$/;"	l
c010c3af	obj/kernel.asm	/^c010c3af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c3b2	obj/kernel.asm	/^c010c3b2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010c3b9	obj/kernel.asm	/^c010c3b9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c3bc	obj/kernel.asm	/^c010c3bc:	01 d0                	add    %edx,%eax$/;"	l
c010c3be	obj/kernel.asm	/^c010c3be:	8b 00                	mov    (%eax),%eax$/;"	l
c010c3c0	obj/kernel.asm	/^c010c3c0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c3c3	obj/kernel.asm	/^c010c3c3:	50                   	push   %eax$/;"	l
c010c3c4	obj/kernel.asm	/^c010c3c4:	e8 ee b0 ff ff       	call   c01074b7 <kfree>$/;"	l
c010c3c9	obj/kernel.asm	/^c010c3c9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c3cc	obj/kernel.asm	/^c010c3cc:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010c3d0	obj/kernel.asm	/^c010c3d0:	7f d9                	jg     c010c3ab <put_kargv+0x8>$/;"	l
c010c3d2	obj/kernel.asm	/^c010c3d2:	c9                   	leave  $/;"	l
c010c3d3	obj/kernel.asm	/^c010c3d3:	c3                   	ret    $/;"	l
c010c3d4	obj/kernel.asm	/^c010c3d4 <copy_kargv>:$/;"	l
c010c3d4	obj/kernel.asm	/^c010c3d4:	55                   	push   %ebp$/;"	l
c010c3d5	obj/kernel.asm	/^c010c3d5:	89 e5                	mov    %esp,%ebp$/;"	l
c010c3d7	obj/kernel.asm	/^c010c3d7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c3da	obj/kernel.asm	/^c010c3da:	c7 45 f0 fd ff ff ff 	movl   $0xfffffffd,-0x10(%ebp)$/;"	l
c010c3e1	obj/kernel.asm	/^c010c3e1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c3e4	obj/kernel.asm	/^c010c3e4:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010c3eb	obj/kernel.asm	/^c010c3eb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010c3ee	obj/kernel.asm	/^c010c3ee:	6a 00                	push   $0x0$/;"	l
c010c3f0	obj/kernel.asm	/^c010c3f0:	52                   	push   %edx$/;"	l
c010c3f1	obj/kernel.asm	/^c010c3f1:	50                   	push   %eax$/;"	l
c010c3f2	obj/kernel.asm	/^c010c3f2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c3f5	obj/kernel.asm	/^c010c3f5:	e8 f7 9d ff ff       	call   c01061f1 <user_mem_check>$/;"	l
c010c3fa	obj/kernel.asm	/^c010c3fa:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c3fd	obj/kernel.asm	/^c010c3fd:	85 c0                	test   %eax,%eax$/;"	l
c010c3ff	obj/kernel.asm	/^c010c3ff:	75 08                	jne    c010c409 <copy_kargv+0x35>$/;"	l
c010c401	obj/kernel.asm	/^c010c401:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c404	obj/kernel.asm	/^c010c404:	e9 a0 00 00 00       	jmp    c010c4a9 <copy_kargv+0xd5>$/;"	l
c010c409	obj/kernel.asm	/^c010c409:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010c410	obj/kernel.asm	/^c010c410:	eb 74                	jmp    c010c486 <copy_kargv+0xb2>$/;"	l
c010c412	obj/kernel.asm	/^c010c412:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c415	obj/kernel.asm	/^c010c415:	68 00 10 00 00       	push   $0x1000$/;"	l
c010c41a	obj/kernel.asm	/^c010c41a:	e8 80 b0 ff ff       	call   c010749f <kmalloc>$/;"	l
c010c41f	obj/kernel.asm	/^c010c41f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c422	obj/kernel.asm	/^c010c422:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c425	obj/kernel.asm	/^c010c425:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010c429	obj/kernel.asm	/^c010c429:	75 0a                	jne    c010c435 <copy_kargv+0x61>$/;"	l
c010c42b	obj/kernel.asm	/^c010c42b:	90                   	nop$/;"	l
c010c42c	obj/kernel.asm	/^c010c42c:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c010c433	obj/kernel.asm	/^c010c433:	eb 60                	jmp    c010c495 <copy_kargv+0xc1>$/;"	l
c010c435	obj/kernel.asm	/^c010c435:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c438	obj/kernel.asm	/^c010c438:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010c43f	obj/kernel.asm	/^c010c43f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010c442	obj/kernel.asm	/^c010c442:	01 d0                	add    %edx,%eax$/;"	l
c010c444	obj/kernel.asm	/^c010c444:	8b 00                	mov    (%eax),%eax$/;"	l
c010c446	obj/kernel.asm	/^c010c446:	68 00 10 00 00       	push   $0x1000$/;"	l
c010c44b	obj/kernel.asm	/^c010c44b:	50                   	push   %eax$/;"	l
c010c44c	obj/kernel.asm	/^c010c44c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010c44f	obj/kernel.asm	/^c010c44f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c452	obj/kernel.asm	/^c010c452:	e8 ba 9e ff ff       	call   c0106311 <copy_string>$/;"	l
c010c457	obj/kernel.asm	/^c010c457:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c45a	obj/kernel.asm	/^c010c45a:	85 c0                	test   %eax,%eax$/;"	l
c010c45c	obj/kernel.asm	/^c010c45c:	75 10                	jne    c010c46e <copy_kargv+0x9a>$/;"	l
c010c45e	obj/kernel.asm	/^c010c45e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c461	obj/kernel.asm	/^c010c461:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010c464	obj/kernel.asm	/^c010c464:	e8 4e b0 ff ff       	call   c01074b7 <kfree>$/;"	l
c010c469	obj/kernel.asm	/^c010c469:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c46c	obj/kernel.asm	/^c010c46c:	eb 27                	jmp    c010c495 <copy_kargv+0xc1>$/;"	l
c010c46e	obj/kernel.asm	/^c010c46e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c471	obj/kernel.asm	/^c010c471:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010c478	obj/kernel.asm	/^c010c478:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c47b	obj/kernel.asm	/^c010c47b:	01 c2                	add    %eax,%edx$/;"	l
c010c47d	obj/kernel.asm	/^c010c47d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c480	obj/kernel.asm	/^c010c480:	89 02                	mov    %eax,(%edx)$/;"	l
c010c482	obj/kernel.asm	/^c010c482:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010c486	obj/kernel.asm	/^c010c486:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c489	obj/kernel.asm	/^c010c489:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010c48c	obj/kernel.asm	/^c010c48c:	7c 84                	jl     c010c412 <copy_kargv+0x3e>$/;"	l
c010c48e	obj/kernel.asm	/^c010c48e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c493	obj/kernel.asm	/^c010c493:	eb 14                	jmp    c010c4a9 <copy_kargv+0xd5>$/;"	l
c010c495	obj/kernel.asm	/^c010c495:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c498	obj/kernel.asm	/^c010c498:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010c49b	obj/kernel.asm	/^c010c49b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c49e	obj/kernel.asm	/^c010c49e:	e8 00 ff ff ff       	call   c010c3a3 <put_kargv>$/;"	l
c010c4a3	obj/kernel.asm	/^c010c4a3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c4a6	obj/kernel.asm	/^c010c4a6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c4a9	obj/kernel.asm	/^c010c4a9:	c9                   	leave  $/;"	l
c010c4aa	obj/kernel.asm	/^c010c4aa:	c3                   	ret    $/;"	l
c010c4ab	obj/kernel.asm	/^c010c4ab <do_execve>:$/;"	l
c010c4ab	obj/kernel.asm	/^c010c4ab:	55                   	push   %ebp$/;"	l
c010c4ac	obj/kernel.asm	/^c010c4ac:	89 e5                	mov    %esp,%ebp$/;"	l
c010c4ae	obj/kernel.asm	/^c010c4ae:	81 ec d8 00 00 00    	sub    $0xd8,%esp$/;"	l
c010c4b4	obj/kernel.asm	/^c010c4b4:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c4b9	obj/kernel.asm	/^c010c4b9:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010c4bc	obj/kernel.asm	/^c010c4bc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c4bf	obj/kernel.asm	/^c010c4bf:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010c4c3	obj/kernel.asm	/^c010c4c3:	7e 06                	jle    c010c4cb <do_execve+0x20>$/;"	l
c010c4c5	obj/kernel.asm	/^c010c4c5:	83 7d 0c 20          	cmpl   $0x20,0xc(%ebp)$/;"	l
c010c4c9	obj/kernel.asm	/^c010c4c9:	7e 0a                	jle    c010c4d5 <do_execve+0x2a>$/;"	l
c010c4cb	obj/kernel.asm	/^c010c4cb:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010c4d0	obj/kernel.asm	/^c010c4d0:	e9 f3 01 00 00       	jmp    c010c6c8 <do_execve+0x21d>$/;"	l
c010c4d5	obj/kernel.asm	/^c010c4d5:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c4d8	obj/kernel.asm	/^c010c4d8:	6a 33                	push   $0x33$/;"	l
c010c4da	obj/kernel.asm	/^c010c4da:	6a 00                	push   $0x0$/;"	l
c010c4dc	obj/kernel.asm	/^c010c4dc:	8d 45 b1             	lea    -0x4f(%ebp),%eax$/;"	l
c010c4df	obj/kernel.asm	/^c010c4df:	50                   	push   %eax$/;"	l
c010c4e0	obj/kernel.asm	/^c010c4e0:	e8 07 6b 00 00       	call   c0112fec <memset>$/;"	l
c010c4e5	obj/kernel.asm	/^c010c4e5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c4e8	obj/kernel.asm	/^c010c4e8:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010c4ef	obj/kernel.asm	/^c010c4ef:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c4f2	obj/kernel.asm	/^c010c4f2:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c4f5	obj/kernel.asm	/^c010c4f5:	e8 5a f0 ff ff       	call   c010b554 <lock_mm>$/;"	l
c010c4fa	obj/kernel.asm	/^c010c4fa:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c4fd	obj/kernel.asm	/^c010c4fd:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010c501	obj/kernel.asm	/^c010c501:	75 1e                	jne    c010c521 <do_execve+0x76>$/;"	l
c010c503	obj/kernel.asm	/^c010c503:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c508	obj/kernel.asm	/^c010c508:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c50b	obj/kernel.asm	/^c010c50b:	50                   	push   %eax$/;"	l
c010c50c	obj/kernel.asm	/^c010c50c:	68 a3 62 11 c0       	push   $0xc01162a3$/;"	l
c010c511	obj/kernel.asm	/^c010c511:	6a 33                	push   $0x33$/;"	l
c010c513	obj/kernel.asm	/^c010c513:	8d 45 b1             	lea    -0x4f(%ebp),%eax$/;"	l
c010c516	obj/kernel.asm	/^c010c516:	50                   	push   %eax$/;"	l
c010c517	obj/kernel.asm	/^c010c517:	e8 1a 72 00 00       	call   c0113736 <snprintf>$/;"	l
c010c51c	obj/kernel.asm	/^c010c51c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c51f	obj/kernel.asm	/^c010c51f:	eb 2e                	jmp    c010c54f <do_execve+0xa4>$/;"	l
c010c521	obj/kernel.asm	/^c010c521:	6a 33                	push   $0x33$/;"	l
c010c523	obj/kernel.asm	/^c010c523:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c526	obj/kernel.asm	/^c010c526:	8d 45 b1             	lea    -0x4f(%ebp),%eax$/;"	l
c010c529	obj/kernel.asm	/^c010c529:	50                   	push   %eax$/;"	l
c010c52a	obj/kernel.asm	/^c010c52a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c52d	obj/kernel.asm	/^c010c52d:	e8 df 9d ff ff       	call   c0106311 <copy_string>$/;"	l
c010c532	obj/kernel.asm	/^c010c532:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c535	obj/kernel.asm	/^c010c535:	85 c0                	test   %eax,%eax$/;"	l
c010c537	obj/kernel.asm	/^c010c537:	75 16                	jne    c010c54f <do_execve+0xa4>$/;"	l
c010c539	obj/kernel.asm	/^c010c539:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c53c	obj/kernel.asm	/^c010c53c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c53f	obj/kernel.asm	/^c010c53f:	e8 47 f0 ff ff       	call   c010b58b <unlock_mm>$/;"	l
c010c544	obj/kernel.asm	/^c010c544:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c547	obj/kernel.asm	/^c010c547:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c54a	obj/kernel.asm	/^c010c54a:	e9 79 01 00 00       	jmp    c010c6c8 <do_execve+0x21d>$/;"	l
c010c54f	obj/kernel.asm	/^c010c54f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010c552	obj/kernel.asm	/^c010c552:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010c558	obj/kernel.asm	/^c010c558:	50                   	push   %eax$/;"	l
c010c559	obj/kernel.asm	/^c010c559:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c55c	obj/kernel.asm	/^c010c55c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c55f	obj/kernel.asm	/^c010c55f:	e8 70 fe ff ff       	call   c010c3d4 <copy_kargv>$/;"	l
c010c564	obj/kernel.asm	/^c010c564:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c567	obj/kernel.asm	/^c010c567:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c56a	obj/kernel.asm	/^c010c56a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c56e	obj/kernel.asm	/^c010c56e:	74 16                	je     c010c586 <do_execve+0xdb>$/;"	l
c010c570	obj/kernel.asm	/^c010c570:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c573	obj/kernel.asm	/^c010c573:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c576	obj/kernel.asm	/^c010c576:	e8 10 f0 ff ff       	call   c010b58b <unlock_mm>$/;"	l
c010c57b	obj/kernel.asm	/^c010c57b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c57e	obj/kernel.asm	/^c010c57e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c581	obj/kernel.asm	/^c010c581:	e9 42 01 00 00       	jmp    c010c6c8 <do_execve+0x21d>$/;"	l
c010c586	obj/kernel.asm	/^c010c586:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c589	obj/kernel.asm	/^c010c589:	8b 00                	mov    (%eax),%eax$/;"	l
c010c58b	obj/kernel.asm	/^c010c58b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c58e	obj/kernel.asm	/^c010c58e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c591	obj/kernel.asm	/^c010c591:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c594	obj/kernel.asm	/^c010c594:	e8 f2 ef ff ff       	call   c010b58b <unlock_mm>$/;"	l
c010c599	obj/kernel.asm	/^c010c599:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c59c	obj/kernel.asm	/^c010c59c:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c5a1	obj/kernel.asm	/^c010c5a1:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010c5a7	obj/kernel.asm	/^c010c5a7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c5aa	obj/kernel.asm	/^c010c5aa:	50                   	push   %eax$/;"	l
c010c5ab	obj/kernel.asm	/^c010c5ab:	e8 7e ec ff ff       	call   c010b22e <files_closeall>$/;"	l
c010c5b0	obj/kernel.asm	/^c010c5b0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c5b3	obj/kernel.asm	/^c010c5b3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c5b6	obj/kernel.asm	/^c010c5b6:	6a 00                	push   $0x0$/;"	l
c010c5b8	obj/kernel.asm	/^c010c5b8:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010c5bb	obj/kernel.asm	/^c010c5bb:	e8 c8 d4 ff ff       	call   c0109a88 <sysfile_open>$/;"	l
c010c5c0	obj/kernel.asm	/^c010c5c0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c5c3	obj/kernel.asm	/^c010c5c3:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c5c6	obj/kernel.asm	/^c010c5c6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c5c9	obj/kernel.asm	/^c010c5c9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c5cc	obj/kernel.asm	/^c010c5cc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c5d0	obj/kernel.asm	/^c010c5d0:	79 05                	jns    c010c5d7 <do_execve+0x12c>$/;"	l
c010c5d2	obj/kernel.asm	/^c010c5d2:	e9 b7 00 00 00       	jmp    c010c68e <do_execve+0x1e3>$/;"	l
c010c5d7	obj/kernel.asm	/^c010c5d7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010c5db	obj/kernel.asm	/^c010c5db:	74 56                	je     c010c633 <do_execve+0x188>$/;"	l
c010c5dd	obj/kernel.asm	/^c010c5dd:	a1 14 12 15 c0       	mov    0xc0151214,%eax$/;"	l
c010c5e2	obj/kernel.asm	/^c010c5e2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010c5e5	obj/kernel.asm	/^c010c5e5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c5e8	obj/kernel.asm	/^c010c5e8:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010c5eb	obj/kernel.asm	/^c010c5eb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c5ee	obj/kernel.asm	/^c010c5ee:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c5f1	obj/kernel.asm	/^c010c5f1:	e8 44 ef ff ff       	call   c010b53a <mm_count_dec>$/;"	l
c010c5f6	obj/kernel.asm	/^c010c5f6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c5f9	obj/kernel.asm	/^c010c5f9:	85 c0                	test   %eax,%eax$/;"	l
c010c5fb	obj/kernel.asm	/^c010c5fb:	75 2a                	jne    c010c627 <do_execve+0x17c>$/;"	l
c010c5fd	obj/kernel.asm	/^c010c5fd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c600	obj/kernel.asm	/^c010c600:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c603	obj/kernel.asm	/^c010c603:	e8 43 92 ff ff       	call   c010584b <exit_mmap>$/;"	l
c010c608	obj/kernel.asm	/^c010c608:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c60b	obj/kernel.asm	/^c010c60b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c60e	obj/kernel.asm	/^c010c60e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c611	obj/kernel.asm	/^c010c611:	e8 2d f7 ff ff       	call   c010bd43 <put_pgdir>$/;"	l
c010c616	obj/kernel.asm	/^c010c616:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c619	obj/kernel.asm	/^c010c619:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c61c	obj/kernel.asm	/^c010c61c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c61f	obj/kernel.asm	/^c010c61f:	e8 9c 8f ff ff       	call   c01055c0 <mm_destroy>$/;"	l
c010c624	obj/kernel.asm	/^c010c624:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c627	obj/kernel.asm	/^c010c627:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c62c	obj/kernel.asm	/^c010c62c:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010c633	obj/kernel.asm	/^c010c633:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010c63a	obj/kernel.asm	/^c010c63a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c63d	obj/kernel.asm	/^c010c63d:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010c643	obj/kernel.asm	/^c010c643:	50                   	push   %eax$/;"	l
c010c644	obj/kernel.asm	/^c010c644:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c647	obj/kernel.asm	/^c010c647:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010c64a	obj/kernel.asm	/^c010c64a:	e8 4f fd ff ff       	call   c010c39e <load_icode>$/;"	l
c010c64f	obj/kernel.asm	/^c010c64f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c652	obj/kernel.asm	/^c010c652:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c655	obj/kernel.asm	/^c010c655:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c659	obj/kernel.asm	/^c010c659:	74 02                	je     c010c65d <do_execve+0x1b2>$/;"	l
c010c65b	obj/kernel.asm	/^c010c65b:	eb 31                	jmp    c010c68e <do_execve+0x1e3>$/;"	l
c010c65d	obj/kernel.asm	/^c010c65d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c660	obj/kernel.asm	/^c010c660:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010c666	obj/kernel.asm	/^c010c666:	50                   	push   %eax$/;"	l
c010c667	obj/kernel.asm	/^c010c667:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c66a	obj/kernel.asm	/^c010c66a:	e8 34 fd ff ff       	call   c010c3a3 <put_kargv>$/;"	l
c010c66f	obj/kernel.asm	/^c010c66f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c672	obj/kernel.asm	/^c010c672:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c677	obj/kernel.asm	/^c010c677:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c67a	obj/kernel.asm	/^c010c67a:	8d 55 b1             	lea    -0x4f(%ebp),%edx$/;"	l
c010c67d	obj/kernel.asm	/^c010c67d:	52                   	push   %edx$/;"	l
c010c67e	obj/kernel.asm	/^c010c67e:	50                   	push   %eax$/;"	l
c010c67f	obj/kernel.asm	/^c010c67f:	e8 e0 f0 ff ff       	call   c010b764 <set_proc_name>$/;"	l
c010c684	obj/kernel.asm	/^c010c684:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c687	obj/kernel.asm	/^c010c687:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c68c	obj/kernel.asm	/^c010c68c:	eb 3a                	jmp    c010c6c8 <do_execve+0x21d>$/;"	l
c010c68e	obj/kernel.asm	/^c010c68e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c691	obj/kernel.asm	/^c010c691:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010c697	obj/kernel.asm	/^c010c697:	50                   	push   %eax$/;"	l
c010c698	obj/kernel.asm	/^c010c698:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c69b	obj/kernel.asm	/^c010c69b:	e8 03 fd ff ff       	call   c010c3a3 <put_kargv>$/;"	l
c010c6a0	obj/kernel.asm	/^c010c6a0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c6a3	obj/kernel.asm	/^c010c6a3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c6a6	obj/kernel.asm	/^c010c6a6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c6a9	obj/kernel.asm	/^c010c6a9:	e8 8d fa ff ff       	call   c010c13b <do_exit>$/;"	l
c010c6ae	obj/kernel.asm	/^c010c6ae:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c6b1	obj/kernel.asm	/^c010c6b1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c6b4	obj/kernel.asm	/^c010c6b4:	68 ad 62 11 c0       	push   $0xc01162ad$/;"	l
c010c6b9	obj/kernel.asm	/^c010c6b9:	68 da 02 00 00       	push   $0x2da$/;"	l
c010c6be	obj/kernel.asm	/^c010c6be:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010c6c3	obj/kernel.asm	/^c010c6c3:	e8 07 3e ff ff       	call   c01004cf <__panic>$/;"	l
c010c6c8	obj/kernel.asm	/^c010c6c8:	c9                   	leave  $/;"	l
c010c6c9	obj/kernel.asm	/^c010c6c9:	c3                   	ret    $/;"	l
c010c6ca	obj/kernel.asm	/^c010c6ca <do_yield>:$/;"	l
c010c6ca	obj/kernel.asm	/^c010c6ca:	55                   	push   %ebp$/;"	l
c010c6cb	obj/kernel.asm	/^c010c6cb:	89 e5                	mov    %esp,%ebp$/;"	l
c010c6cd	obj/kernel.asm	/^c010c6cd:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c6d2	obj/kernel.asm	/^c010c6d2:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010c6d9	obj/kernel.asm	/^c010c6d9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c6de	obj/kernel.asm	/^c010c6de:	5d                   	pop    %ebp$/;"	l
c010c6df	obj/kernel.asm	/^c010c6df:	c3                   	ret    $/;"	l
c010c6e0	obj/kernel.asm	/^c010c6e0 <do_wait>:$/;"	l
c010c6e0	obj/kernel.asm	/^c010c6e0:	55                   	push   %ebp$/;"	l
c010c6e1	obj/kernel.asm	/^c010c6e1:	89 e5                	mov    %esp,%ebp$/;"	l
c010c6e3	obj/kernel.asm	/^c010c6e3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c6e6	obj/kernel.asm	/^c010c6e6:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c6eb	obj/kernel.asm	/^c010c6eb:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010c6ee	obj/kernel.asm	/^c010c6ee:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c6f1	obj/kernel.asm	/^c010c6f1:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010c6f5	obj/kernel.asm	/^c010c6f5:	74 21                	je     c010c718 <do_wait+0x38>$/;"	l
c010c6f7	obj/kernel.asm	/^c010c6f7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c6fa	obj/kernel.asm	/^c010c6fa:	6a 01                	push   $0x1$/;"	l
c010c6fc	obj/kernel.asm	/^c010c6fc:	6a 04                	push   $0x4$/;"	l
c010c6fe	obj/kernel.asm	/^c010c6fe:	50                   	push   %eax$/;"	l
c010c6ff	obj/kernel.asm	/^c010c6ff:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010c702	obj/kernel.asm	/^c010c702:	e8 ea 9a ff ff       	call   c01061f1 <user_mem_check>$/;"	l
c010c707	obj/kernel.asm	/^c010c707:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c70a	obj/kernel.asm	/^c010c70a:	85 c0                	test   %eax,%eax$/;"	l
c010c70c	obj/kernel.asm	/^c010c70c:	75 0a                	jne    c010c718 <do_wait+0x38>$/;"	l
c010c70e	obj/kernel.asm	/^c010c70e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010c713	obj/kernel.asm	/^c010c713:	e9 60 01 00 00       	jmp    c010c878 <do_wait+0x198>$/;"	l
c010c718	obj/kernel.asm	/^c010c718:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010c71f	obj/kernel.asm	/^c010c71f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010c723	obj/kernel.asm	/^c010c723:	74 3c                	je     c010c761 <do_wait+0x81>$/;"	l
c010c725	obj/kernel.asm	/^c010c725:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c728	obj/kernel.asm	/^c010c728:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c72b	obj/kernel.asm	/^c010c72b:	e8 3b f4 ff ff       	call   c010bb6b <find_proc>$/;"	l
c010c730	obj/kernel.asm	/^c010c730:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c733	obj/kernel.asm	/^c010c733:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c736	obj/kernel.asm	/^c010c736:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c73a	obj/kernel.asm	/^c010c73a:	74 5a                	je     c010c796 <do_wait+0xb6>$/;"	l
c010c73c	obj/kernel.asm	/^c010c73c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c73f	obj/kernel.asm	/^c010c73f:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c010c742	obj/kernel.asm	/^c010c742:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c747	obj/kernel.asm	/^c010c747:	39 c2                	cmp    %eax,%edx$/;"	l
c010c749	obj/kernel.asm	/^c010c749:	75 4b                	jne    c010c796 <do_wait+0xb6>$/;"	l
c010c74b	obj/kernel.asm	/^c010c74b:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010c752	obj/kernel.asm	/^c010c752:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c755	obj/kernel.asm	/^c010c755:	8b 00                	mov    (%eax),%eax$/;"	l
c010c757	obj/kernel.asm	/^c010c757:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010c75a	obj/kernel.asm	/^c010c75a:	75 3a                	jne    c010c796 <do_wait+0xb6>$/;"	l
c010c75c	obj/kernel.asm	/^c010c75c:	e9 85 00 00 00       	jmp    c010c7e6 <do_wait+0x106>$/;"	l
c010c761	obj/kernel.asm	/^c010c761:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c766	obj/kernel.asm	/^c010c766:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010c76c	obj/kernel.asm	/^c010c76c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c76f	obj/kernel.asm	/^c010c76f:	eb 1f                	jmp    c010c790 <do_wait+0xb0>$/;"	l
c010c771	obj/kernel.asm	/^c010c771:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010c778	obj/kernel.asm	/^c010c778:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c77b	obj/kernel.asm	/^c010c77b:	8b 00                	mov    (%eax),%eax$/;"	l
c010c77d	obj/kernel.asm	/^c010c77d:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010c780	obj/kernel.asm	/^c010c780:	75 02                	jne    c010c784 <do_wait+0xa4>$/;"	l
c010c782	obj/kernel.asm	/^c010c782:	eb 62                	jmp    c010c7e6 <do_wait+0x106>$/;"	l
c010c784	obj/kernel.asm	/^c010c784:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c787	obj/kernel.asm	/^c010c787:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010c78d	obj/kernel.asm	/^c010c78d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c790	obj/kernel.asm	/^c010c790:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c794	obj/kernel.asm	/^c010c794:	75 db                	jne    c010c771 <do_wait+0x91>$/;"	l
c010c796	obj/kernel.asm	/^c010c796:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010c79a	obj/kernel.asm	/^c010c79a:	74 40                	je     c010c7dc <do_wait+0xfc>$/;"	l
c010c79c	obj/kernel.asm	/^c010c79c:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c7a1	obj/kernel.asm	/^c010c7a1:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010c7a7	obj/kernel.asm	/^c010c7a7:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c7ac	obj/kernel.asm	/^c010c7ac:	c7 80 90 00 00 00 01 	movl   $0x80000001,0x90(%eax)$/;"	l
c010c7b3	obj/kernel.asm	/^c010c7b3:	00 00 80 $/;"	l
c010c7b6	obj/kernel.asm	/^c010c7b6:	e8 f5 07 00 00       	call   c010cfb0 <schedule>$/;"	l
c010c7bb	obj/kernel.asm	/^c010c7bb:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c7c0	obj/kernel.asm	/^c010c7c0:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010c7c3	obj/kernel.asm	/^c010c7c3:	83 e0 01             	and    $0x1,%eax$/;"	l
c010c7c6	obj/kernel.asm	/^c010c7c6:	85 c0                	test   %eax,%eax$/;"	l
c010c7c8	obj/kernel.asm	/^c010c7c8:	74 0d                	je     c010c7d7 <do_wait+0xf7>$/;"	l
c010c7ca	obj/kernel.asm	/^c010c7ca:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c7cd	obj/kernel.asm	/^c010c7cd:	6a f7                	push   $0xfffffff7$/;"	l
c010c7cf	obj/kernel.asm	/^c010c7cf:	e8 67 f9 ff ff       	call   c010c13b <do_exit>$/;"	l
c010c7d4	obj/kernel.asm	/^c010c7d4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c7d7	obj/kernel.asm	/^c010c7d7:	e9 3c ff ff ff       	jmp    c010c718 <do_wait+0x38>$/;"	l
c010c7dc	obj/kernel.asm	/^c010c7dc:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
c010c7e1	obj/kernel.asm	/^c010c7e1:	e9 92 00 00 00       	jmp    c010c878 <do_wait+0x198>$/;"	l
c010c7e6	obj/kernel.asm	/^c010c7e6:	a1 80 e0 14 c0       	mov    0xc014e080,%eax$/;"	l
c010c7eb	obj/kernel.asm	/^c010c7eb:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010c7ee	obj/kernel.asm	/^c010c7ee:	74 0a                	je     c010c7fa <do_wait+0x11a>$/;"	l
c010c7f0	obj/kernel.asm	/^c010c7f0:	a1 84 e0 14 c0       	mov    0xc014e084,%eax$/;"	l
c010c7f5	obj/kernel.asm	/^c010c7f5:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010c7f8	obj/kernel.asm	/^c010c7f8:	75 17                	jne    c010c811 <do_wait+0x131>$/;"	l
c010c7fa	obj/kernel.asm	/^c010c7fa:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c7fd	obj/kernel.asm	/^c010c7fd:	68 c0 62 11 c0       	push   $0xc01162c0$/;"	l
c010c802	obj/kernel.asm	/^c010c802:	68 13 03 00 00       	push   $0x313$/;"	l
c010c807	obj/kernel.asm	/^c010c807:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010c80c	obj/kernel.asm	/^c010c80c:	e8 be 3c ff ff       	call   c01004cf <__panic>$/;"	l
c010c811	obj/kernel.asm	/^c010c811:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010c815	obj/kernel.asm	/^c010c815:	74 0e                	je     c010c825 <do_wait+0x145>$/;"	l
c010c817	obj/kernel.asm	/^c010c817:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c81a	obj/kernel.asm	/^c010c81a:	8b 90 8c 00 00 00    	mov    0x8c(%eax),%edx$/;"	l
c010c820	obj/kernel.asm	/^c010c820:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c823	obj/kernel.asm	/^c010c823:	89 10                	mov    %edx,(%eax)$/;"	l
c010c825	obj/kernel.asm	/^c010c825:	e8 d2 eb ff ff       	call   c010b3fc <__intr_save>$/;"	l
c010c82a	obj/kernel.asm	/^c010c82a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c82d	obj/kernel.asm	/^c010c82d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c830	obj/kernel.asm	/^c010c830:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c833	obj/kernel.asm	/^c010c833:	e8 fe f2 ff ff       	call   c010bb36 <unhash_proc>$/;"	l
c010c838	obj/kernel.asm	/^c010c838:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c83b	obj/kernel.asm	/^c010c83b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c83e	obj/kernel.asm	/^c010c83e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c841	obj/kernel.asm	/^c010c841:	e8 42 f0 ff ff       	call   c010b888 <remove_links>$/;"	l
c010c846	obj/kernel.asm	/^c010c846:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c849	obj/kernel.asm	/^c010c849:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c84c	obj/kernel.asm	/^c010c84c:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010c84f	obj/kernel.asm	/^c010c84f:	e8 d2 eb ff ff       	call   c010b426 <__intr_restore>$/;"	l
c010c854	obj/kernel.asm	/^c010c854:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c857	obj/kernel.asm	/^c010c857:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c85a	obj/kernel.asm	/^c010c85a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c85d	obj/kernel.asm	/^c010c85d:	e8 20 f4 ff ff       	call   c010bc82 <put_kstack>$/;"	l
c010c862	obj/kernel.asm	/^c010c862:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c865	obj/kernel.asm	/^c010c865:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c868	obj/kernel.asm	/^c010c868:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c86b	obj/kernel.asm	/^c010c86b:	e8 47 ac ff ff       	call   c01074b7 <kfree>$/;"	l
c010c870	obj/kernel.asm	/^c010c870:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c873	obj/kernel.asm	/^c010c873:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c878	obj/kernel.asm	/^c010c878:	c9                   	leave  $/;"	l
c010c879	obj/kernel.asm	/^c010c879:	c3                   	ret    $/;"	l
c010c87a	obj/kernel.asm	/^c010c87a <do_kill>:$/;"	l
c010c87a	obj/kernel.asm	/^c010c87a:	55                   	push   %ebp$/;"	l
c010c87b	obj/kernel.asm	/^c010c87b:	89 e5                	mov    %esp,%ebp$/;"	l
c010c87d	obj/kernel.asm	/^c010c87d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c880	obj/kernel.asm	/^c010c880:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c883	obj/kernel.asm	/^c010c883:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c886	obj/kernel.asm	/^c010c886:	e8 e0 f2 ff ff       	call   c010bb6b <find_proc>$/;"	l
c010c88b	obj/kernel.asm	/^c010c88b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c88e	obj/kernel.asm	/^c010c88e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c891	obj/kernel.asm	/^c010c891:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c895	obj/kernel.asm	/^c010c895:	74 47                	je     c010c8de <do_kill+0x64>$/;"	l
c010c897	obj/kernel.asm	/^c010c897:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c89a	obj/kernel.asm	/^c010c89a:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010c89d	obj/kernel.asm	/^c010c89d:	83 e0 01             	and    $0x1,%eax$/;"	l
c010c8a0	obj/kernel.asm	/^c010c8a0:	85 c0                	test   %eax,%eax$/;"	l
c010c8a2	obj/kernel.asm	/^c010c8a2:	75 33                	jne    c010c8d7 <do_kill+0x5d>$/;"	l
c010c8a4	obj/kernel.asm	/^c010c8a4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c8a7	obj/kernel.asm	/^c010c8a7:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010c8aa	obj/kernel.asm	/^c010c8aa:	83 c8 01             	or     $0x1,%eax$/;"	l
c010c8ad	obj/kernel.asm	/^c010c8ad:	89 c2                	mov    %eax,%edx$/;"	l
c010c8af	obj/kernel.asm	/^c010c8af:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c8b2	obj/kernel.asm	/^c010c8b2:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010c8b5	obj/kernel.asm	/^c010c8b5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c8b8	obj/kernel.asm	/^c010c8b8:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010c8be	obj/kernel.asm	/^c010c8be:	85 c0                	test   %eax,%eax$/;"	l
c010c8c0	obj/kernel.asm	/^c010c8c0:	79 0e                	jns    c010c8d0 <do_kill+0x56>$/;"	l
c010c8c2	obj/kernel.asm	/^c010c8c2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c8c5	obj/kernel.asm	/^c010c8c5:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c8c8	obj/kernel.asm	/^c010c8c8:	e8 54 06 00 00       	call   c010cf21 <wakeup_proc>$/;"	l
c010c8cd	obj/kernel.asm	/^c010c8cd:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c8d0	obj/kernel.asm	/^c010c8d0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c8d5	obj/kernel.asm	/^c010c8d5:	eb 0c                	jmp    c010c8e3 <do_kill+0x69>$/;"	l
c010c8d7	obj/kernel.asm	/^c010c8d7:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax$/;"	l
c010c8dc	obj/kernel.asm	/^c010c8dc:	eb 05                	jmp    c010c8e3 <do_kill+0x69>$/;"	l
c010c8de	obj/kernel.asm	/^c010c8de:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010c8e3	obj/kernel.asm	/^c010c8e3:	c9                   	leave  $/;"	l
c010c8e4	obj/kernel.asm	/^c010c8e4:	c3                   	ret    $/;"	l
c010c8e5	obj/kernel.asm	/^c010c8e5 <kernel_execve>:$/;"	l
c010c8e5	obj/kernel.asm	/^c010c8e5:	55                   	push   %ebp$/;"	l
c010c8e6	obj/kernel.asm	/^c010c8e6:	89 e5                	mov    %esp,%ebp$/;"	l
c010c8e8	obj/kernel.asm	/^c010c8e8:	53                   	push   %ebx$/;"	l
c010c8e9	obj/kernel.asm	/^c010c8e9:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010c8ec	obj/kernel.asm	/^c010c8ec:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c010c8f3	obj/kernel.asm	/^c010c8f3:	eb 04                	jmp    c010c8f9 <kernel_execve+0x14>$/;"	l
c010c8f5	obj/kernel.asm	/^c010c8f5:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
c010c8f9	obj/kernel.asm	/^c010c8f9:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c8fc	obj/kernel.asm	/^c010c8fc:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010c903	obj/kernel.asm	/^c010c903:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c906	obj/kernel.asm	/^c010c906:	01 d0                	add    %edx,%eax$/;"	l
c010c908	obj/kernel.asm	/^c010c908:	8b 00                	mov    (%eax),%eax$/;"	l
c010c90a	obj/kernel.asm	/^c010c90a:	85 c0                	test   %eax,%eax$/;"	l
c010c90c	obj/kernel.asm	/^c010c90c:	75 e7                	jne    c010c8f5 <kernel_execve+0x10>$/;"	l
c010c90e	obj/kernel.asm	/^c010c90e:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
c010c913	obj/kernel.asm	/^c010c913:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c916	obj/kernel.asm	/^c010c916:	8b 4d f8             	mov    -0x8(%ebp),%ecx$/;"	l
c010c919	obj/kernel.asm	/^c010c919:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
c010c91c	obj/kernel.asm	/^c010c91c:	cd 80                	int    $0x80$/;"	l
c010c91e	obj/kernel.asm	/^c010c91e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c921	obj/kernel.asm	/^c010c921:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c924	obj/kernel.asm	/^c010c924:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c927	obj/kernel.asm	/^c010c927:	5b                   	pop    %ebx$/;"	l
c010c928	obj/kernel.asm	/^c010c928:	5d                   	pop    %ebp$/;"	l
c010c929	obj/kernel.asm	/^c010c929:	c3                   	ret    $/;"	l
c010c92a	obj/kernel.asm	/^c010c92a <user_main>:$/;"	l
c010c92a	obj/kernel.asm	/^c010c92a:	55                   	push   %ebp$/;"	l
c010c92b	obj/kernel.asm	/^c010c92b:	89 e5                	mov    %esp,%ebp$/;"	l
c010c92d	obj/kernel.asm	/^c010c92d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c930	obj/kernel.asm	/^c010c930:	c7 45 f0 dc 62 11 c0 	movl   $0xc01162dc,-0x10(%ebp)$/;"	l
c010c937	obj/kernel.asm	/^c010c937:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010c93e	obj/kernel.asm	/^c010c93e:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010c943	obj/kernel.asm	/^c010c943:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c946	obj/kernel.asm	/^c010c946:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c949	obj/kernel.asm	/^c010c949:	68 dc 62 11 c0       	push   $0xc01162dc$/;"	l
c010c94e	obj/kernel.asm	/^c010c94e:	50                   	push   %eax$/;"	l
c010c94f	obj/kernel.asm	/^c010c94f:	68 e0 62 11 c0       	push   $0xc01162e0$/;"	l
c010c954	obj/kernel.asm	/^c010c954:	e8 11 3a ff ff       	call   c010036a <cprintf>$/;"	l
c010c959	obj/kernel.asm	/^c010c959:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c95c	obj/kernel.asm	/^c010c95c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c95f	obj/kernel.asm	/^c010c95f:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010c962	obj/kernel.asm	/^c010c962:	50                   	push   %eax$/;"	l
c010c963	obj/kernel.asm	/^c010c963:	68 dc 62 11 c0       	push   $0xc01162dc$/;"	l
c010c968	obj/kernel.asm	/^c010c968:	e8 78 ff ff ff       	call   c010c8e5 <kernel_execve>$/;"	l
c010c96d	obj/kernel.asm	/^c010c96d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c970	obj/kernel.asm	/^c010c970:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c973	obj/kernel.asm	/^c010c973:	68 07 63 11 c0       	push   $0xc0116307$/;"	l
c010c978	obj/kernel.asm	/^c010c978:	68 5e 03 00 00       	push   $0x35e$/;"	l
c010c97d	obj/kernel.asm	/^c010c97d:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010c982	obj/kernel.asm	/^c010c982:	e8 48 3b ff ff       	call   c01004cf <__panic>$/;"	l
c010c987	obj/kernel.asm	/^c010c987 <init_main>:$/;"	l
c010c987	obj/kernel.asm	/^c010c987:	55                   	push   %ebp$/;"	l
c010c988	obj/kernel.asm	/^c010c988:	89 e5                	mov    %esp,%ebp$/;"	l
c010c98a	obj/kernel.asm	/^c010c98a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010c98d	obj/kernel.asm	/^c010c98d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c990	obj/kernel.asm	/^c010c990:	68 21 63 11 c0       	push   $0xc0116321$/;"	l
c010c995	obj/kernel.asm	/^c010c995:	e8 55 27 00 00       	call   c010f0ef <vfs_set_bootfs>$/;"	l
c010c99a	obj/kernel.asm	/^c010c99a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c99d	obj/kernel.asm	/^c010c99d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c9a0	obj/kernel.asm	/^c010c9a0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c9a4	obj/kernel.asm	/^c010c9a4:	74 17                	je     c010c9bd <init_main+0x36>$/;"	l
c010c9a6	obj/kernel.asm	/^c010c9a6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c9a9	obj/kernel.asm	/^c010c9a9:	68 28 63 11 c0       	push   $0xc0116328$/;"	l
c010c9ae	obj/kernel.asm	/^c010c9ae:	68 66 03 00 00       	push   $0x366$/;"	l
c010c9b3	obj/kernel.asm	/^c010c9b3:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010c9b8	obj/kernel.asm	/^c010c9b8:	e8 12 3b ff ff       	call   c01004cf <__panic>$/;"	l
c010c9bd	obj/kernel.asm	/^c010c9bd:	e8 1f 70 ff ff       	call   c01039e1 <nr_free_pages>$/;"	l
c010c9c2	obj/kernel.asm	/^c010c9c2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c9c5	obj/kernel.asm	/^c010c9c5:	e8 b8 a9 ff ff       	call   c0107382 <kallocated>$/;"	l
c010c9ca	obj/kernel.asm	/^c010c9ca:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c9cd	obj/kernel.asm	/^c010c9cd:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c9d0	obj/kernel.asm	/^c010c9d0:	6a 00                	push   $0x0$/;"	l
c010c9d2	obj/kernel.asm	/^c010c9d2:	6a 00                	push   $0x0$/;"	l
c010c9d4	obj/kernel.asm	/^c010c9d4:	68 2a c9 10 c0       	push   $0xc010c92a$/;"	l
c010c9d9	obj/kernel.asm	/^c010c9d9:	e8 ff f1 ff ff       	call   c010bbdd <kernel_thread>$/;"	l
c010c9de	obj/kernel.asm	/^c010c9de:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c9e1	obj/kernel.asm	/^c010c9e1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c9e4	obj/kernel.asm	/^c010c9e4:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010c9e8	obj/kernel.asm	/^c010c9e8:	7f 17                	jg     c010ca01 <init_main+0x7a>$/;"	l
c010c9ea	obj/kernel.asm	/^c010c9ea:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c9ed	obj/kernel.asm	/^c010c9ed:	68 41 63 11 c0       	push   $0xc0116341$/;"	l
c010c9f2	obj/kernel.asm	/^c010c9f2:	68 6e 03 00 00       	push   $0x36e$/;"	l
c010c9f7	obj/kernel.asm	/^c010c9f7:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010c9fc	obj/kernel.asm	/^c010c9fc:	e8 ce 3a ff ff       	call   c01004cf <__panic>$/;"	l
c010ca01	obj/kernel.asm	/^c010ca01:	e8 5b c5 ff ff       	call   c0108f61 <check_sync>$/;"	l
c010ca06	obj/kernel.asm	/^c010ca06:	eb 05                	jmp    c010ca0d <init_main+0x86>$/;"	l
c010ca08	obj/kernel.asm	/^c010ca08:	e8 a3 05 00 00       	call   c010cfb0 <schedule>$/;"	l
c010ca0d	obj/kernel.asm	/^c010ca0d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ca10	obj/kernel.asm	/^c010ca10:	6a 00                	push   $0x0$/;"	l
c010ca12	obj/kernel.asm	/^c010ca12:	6a 00                	push   $0x0$/;"	l
c010ca14	obj/kernel.asm	/^c010ca14:	e8 c7 fc ff ff       	call   c010c6e0 <do_wait>$/;"	l
c010ca19	obj/kernel.asm	/^c010ca19:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ca1c	obj/kernel.asm	/^c010ca1c:	85 c0                	test   %eax,%eax$/;"	l
c010ca1e	obj/kernel.asm	/^c010ca1e:	74 e8                	je     c010ca08 <init_main+0x81>$/;"	l
c010ca20	obj/kernel.asm	/^c010ca20:	e8 a9 e6 ff ff       	call   c010b0ce <fs_cleanup>$/;"	l
c010ca25	obj/kernel.asm	/^c010ca25:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ca28	obj/kernel.asm	/^c010ca28:	68 5c 63 11 c0       	push   $0xc011635c$/;"	l
c010ca2d	obj/kernel.asm	/^c010ca2d:	e8 38 39 ff ff       	call   c010036a <cprintf>$/;"	l
c010ca32	obj/kernel.asm	/^c010ca32:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ca35	obj/kernel.asm	/^c010ca35:	a1 84 e0 14 c0       	mov    0xc014e084,%eax$/;"	l
c010ca3a	obj/kernel.asm	/^c010ca3a:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010ca40	obj/kernel.asm	/^c010ca40:	85 c0                	test   %eax,%eax$/;"	l
c010ca42	obj/kernel.asm	/^c010ca42:	75 1e                	jne    c010ca62 <init_main+0xdb>$/;"	l
c010ca44	obj/kernel.asm	/^c010ca44:	a1 84 e0 14 c0       	mov    0xc014e084,%eax$/;"	l
c010ca49	obj/kernel.asm	/^c010ca49:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax$/;"	l
c010ca4f	obj/kernel.asm	/^c010ca4f:	85 c0                	test   %eax,%eax$/;"	l
c010ca51	obj/kernel.asm	/^c010ca51:	75 0f                	jne    c010ca62 <init_main+0xdb>$/;"	l
c010ca53	obj/kernel.asm	/^c010ca53:	a1 84 e0 14 c0       	mov    0xc014e084,%eax$/;"	l
c010ca58	obj/kernel.asm	/^c010ca58:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010ca5e	obj/kernel.asm	/^c010ca5e:	85 c0                	test   %eax,%eax$/;"	l
c010ca60	obj/kernel.asm	/^c010ca60:	74 19                	je     c010ca7b <init_main+0xf4>$/;"	l
c010ca62	obj/kernel.asm	/^c010ca62:	68 80 63 11 c0       	push   $0xc0116380$/;"	l
c010ca67	obj/kernel.asm	/^c010ca67:	68 37 62 11 c0       	push   $0xc0116237$/;"	l
c010ca6c	obj/kernel.asm	/^c010ca6c:	68 7a 03 00 00       	push   $0x37a$/;"	l
c010ca71	obj/kernel.asm	/^c010ca71:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010ca76	obj/kernel.asm	/^c010ca76:	e8 54 3a ff ff       	call   c01004cf <__panic>$/;"	l
c010ca7b	obj/kernel.asm	/^c010ca7b:	a1 c0 00 15 c0       	mov    0xc01500c0,%eax$/;"	l
c010ca80	obj/kernel.asm	/^c010ca80:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010ca83	obj/kernel.asm	/^c010ca83:	74 19                	je     c010ca9e <init_main+0x117>$/;"	l
c010ca85	obj/kernel.asm	/^c010ca85:	68 cb 63 11 c0       	push   $0xc01163cb$/;"	l
c010ca8a	obj/kernel.asm	/^c010ca8a:	68 37 62 11 c0       	push   $0xc0116237$/;"	l
c010ca8f	obj/kernel.asm	/^c010ca8f:	68 7b 03 00 00       	push   $0x37b$/;"	l
c010ca94	obj/kernel.asm	/^c010ca94:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010ca99	obj/kernel.asm	/^c010ca99:	e8 31 3a ff ff       	call   c01004cf <__panic>$/;"	l
c010ca9e	obj/kernel.asm	/^c010ca9e:	c7 45 e4 dc 13 15 c0 	movl   $0xc01513dc,-0x1c(%ebp)$/;"	l
c010caa5	obj/kernel.asm	/^c010caa5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010caa8	obj/kernel.asm	/^c010caa8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010caab	obj/kernel.asm	/^c010caab:	8b 15 84 e0 14 c0    	mov    0xc014e084,%edx$/;"	l
c010cab1	obj/kernel.asm	/^c010cab1:	83 c2 7c             	add    $0x7c,%edx$/;"	l
c010cab4	obj/kernel.asm	/^c010cab4:	39 d0                	cmp    %edx,%eax$/;"	l
c010cab6	obj/kernel.asm	/^c010cab6:	74 19                	je     c010cad1 <init_main+0x14a>$/;"	l
c010cab8	obj/kernel.asm	/^c010cab8:	68 dc 63 11 c0       	push   $0xc01163dc$/;"	l
c010cabd	obj/kernel.asm	/^c010cabd:	68 37 62 11 c0       	push   $0xc0116237$/;"	l
c010cac2	obj/kernel.asm	/^c010cac2:	68 7c 03 00 00       	push   $0x37c$/;"	l
c010cac7	obj/kernel.asm	/^c010cac7:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010cacc	obj/kernel.asm	/^c010cacc:	e8 fe 39 ff ff       	call   c01004cf <__panic>$/;"	l
c010cad1	obj/kernel.asm	/^c010cad1:	c7 45 e0 dc 13 15 c0 	movl   $0xc01513dc,-0x20(%ebp)$/;"	l
c010cad8	obj/kernel.asm	/^c010cad8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010cadb	obj/kernel.asm	/^c010cadb:	8b 00                	mov    (%eax),%eax$/;"	l
c010cadd	obj/kernel.asm	/^c010cadd:	8b 15 84 e0 14 c0    	mov    0xc014e084,%edx$/;"	l
c010cae3	obj/kernel.asm	/^c010cae3:	83 c2 7c             	add    $0x7c,%edx$/;"	l
c010cae6	obj/kernel.asm	/^c010cae6:	39 d0                	cmp    %edx,%eax$/;"	l
c010cae8	obj/kernel.asm	/^c010cae8:	74 19                	je     c010cb03 <init_main+0x17c>$/;"	l
c010caea	obj/kernel.asm	/^c010caea:	68 0c 64 11 c0       	push   $0xc011640c$/;"	l
c010caef	obj/kernel.asm	/^c010caef:	68 37 62 11 c0       	push   $0xc0116237$/;"	l
c010caf4	obj/kernel.asm	/^c010caf4:	68 7d 03 00 00       	push   $0x37d$/;"	l
c010caf9	obj/kernel.asm	/^c010caf9:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010cafe	obj/kernel.asm	/^c010cafe:	e8 cc 39 ff ff       	call   c01004cf <__panic>$/;"	l
c010cb03	obj/kernel.asm	/^c010cb03:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cb06	obj/kernel.asm	/^c010cb06:	68 3c 64 11 c0       	push   $0xc011643c$/;"	l
c010cb0b	obj/kernel.asm	/^c010cb0b:	e8 5a 38 ff ff       	call   c010036a <cprintf>$/;"	l
c010cb10	obj/kernel.asm	/^c010cb10:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cb13	obj/kernel.asm	/^c010cb13:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010cb18	obj/kernel.asm	/^c010cb18:	c9                   	leave  $/;"	l
c010cb19	obj/kernel.asm	/^c010cb19:	c3                   	ret    $/;"	l
c010cb1a	obj/kernel.asm	/^c010cb1a <proc_init>:$/;"	l
c010cb1a	obj/kernel.asm	/^c010cb1a:	55                   	push   %ebp$/;"	l
c010cb1b	obj/kernel.asm	/^c010cb1b:	89 e5                	mov    %esp,%ebp$/;"	l
c010cb1d	obj/kernel.asm	/^c010cb1d:	53                   	push   %ebx$/;"	l
c010cb1e	obj/kernel.asm	/^c010cb1e:	83 ec 14             	sub    $0x14,%esp$/;"	l
c010cb21	obj/kernel.asm	/^c010cb21:	c7 45 ec dc 13 15 c0 	movl   $0xc01513dc,-0x14(%ebp)$/;"	l
c010cb28	obj/kernel.asm	/^c010cb28:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010cb2b	obj/kernel.asm	/^c010cb2b:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010cb2e	obj/kernel.asm	/^c010cb2e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010cb31	obj/kernel.asm	/^c010cb31:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010cb34	obj/kernel.asm	/^c010cb34:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010cb37	obj/kernel.asm	/^c010cb37:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010cb3a	obj/kernel.asm	/^c010cb3a:	89 10                	mov    %edx,(%eax)$/;"	l
c010cb3c	obj/kernel.asm	/^c010cb3c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010cb43	obj/kernel.asm	/^c010cb43:	eb 26                	jmp    c010cb6b <proc_init+0x51>$/;"	l
c010cb45	obj/kernel.asm	/^c010cb45:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cb48	obj/kernel.asm	/^c010cb48:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010cb4b	obj/kernel.asm	/^c010cb4b:	05 c0 e0 14 c0       	add    $0xc014e0c0,%eax$/;"	l
c010cb50	obj/kernel.asm	/^c010cb50:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010cb53	obj/kernel.asm	/^c010cb53:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010cb56	obj/kernel.asm	/^c010cb56:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010cb59	obj/kernel.asm	/^c010cb59:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010cb5c	obj/kernel.asm	/^c010cb5c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010cb5f	obj/kernel.asm	/^c010cb5f:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010cb62	obj/kernel.asm	/^c010cb62:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010cb65	obj/kernel.asm	/^c010cb65:	89 10                	mov    %edx,(%eax)$/;"	l
c010cb67	obj/kernel.asm	/^c010cb67:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010cb6b	obj/kernel.asm	/^c010cb6b:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
c010cb72	obj/kernel.asm	/^c010cb72:	7e d1                	jle    c010cb45 <proc_init+0x2b>$/;"	l
c010cb74	obj/kernel.asm	/^c010cb74:	e8 70 ea ff ff       	call   c010b5e9 <alloc_proc>$/;"	l
c010cb79	obj/kernel.asm	/^c010cb79:	a3 80 e0 14 c0       	mov    %eax,0xc014e080$/;"	l
c010cb7e	obj/kernel.asm	/^c010cb7e:	a1 80 e0 14 c0       	mov    0xc014e080,%eax$/;"	l
c010cb83	obj/kernel.asm	/^c010cb83:	85 c0                	test   %eax,%eax$/;"	l
c010cb85	obj/kernel.asm	/^c010cb85:	75 17                	jne    c010cb9e <proc_init+0x84>$/;"	l
c010cb87	obj/kernel.asm	/^c010cb87:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010cb8a	obj/kernel.asm	/^c010cb8a:	68 55 64 11 c0       	push   $0xc0116455$/;"	l
c010cb8f	obj/kernel.asm	/^c010cb8f:	68 8f 03 00 00       	push   $0x38f$/;"	l
c010cb94	obj/kernel.asm	/^c010cb94:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010cb99	obj/kernel.asm	/^c010cb99:	e8 31 39 ff ff       	call   c01004cf <__panic>$/;"	l
c010cb9e	obj/kernel.asm	/^c010cb9e:	a1 80 e0 14 c0       	mov    0xc014e080,%eax$/;"	l
c010cba3	obj/kernel.asm	/^c010cba3:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c010cbaa	obj/kernel.asm	/^c010cbaa:	a1 80 e0 14 c0       	mov    0xc014e080,%eax$/;"	l
c010cbaf	obj/kernel.asm	/^c010cbaf:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010cbb5	obj/kernel.asm	/^c010cbb5:	a1 80 e0 14 c0       	mov    0xc014e080,%eax$/;"	l
c010cbba	obj/kernel.asm	/^c010cbba:	ba 00 a0 14 c0       	mov    $0xc014a000,%edx$/;"	l
c010cbbf	obj/kernel.asm	/^c010cbbf:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010cbc2	obj/kernel.asm	/^c010cbc2:	a1 80 e0 14 c0       	mov    0xc014e080,%eax$/;"	l
c010cbc7	obj/kernel.asm	/^c010cbc7:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010cbce	obj/kernel.asm	/^c010cbce:	8b 1d 80 e0 14 c0    	mov    0xc014e080,%ebx$/;"	l
c010cbd4	obj/kernel.asm	/^c010cbd4:	e8 36 e5 ff ff       	call   c010b10f <files_create>$/;"	l
c010cbd9	obj/kernel.asm	/^c010cbd9:	89 83 c4 00 00 00    	mov    %eax,0xc4(%ebx)$/;"	l
c010cbdf	obj/kernel.asm	/^c010cbdf:	8b 83 c4 00 00 00    	mov    0xc4(%ebx),%eax$/;"	l
c010cbe5	obj/kernel.asm	/^c010cbe5:	85 c0                	test   %eax,%eax$/;"	l
c010cbe7	obj/kernel.asm	/^c010cbe7:	75 17                	jne    c010cc00 <proc_init+0xe6>$/;"	l
c010cbe9	obj/kernel.asm	/^c010cbe9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010cbec	obj/kernel.asm	/^c010cbec:	68 70 64 11 c0       	push   $0xc0116470$/;"	l
c010cbf1	obj/kernel.asm	/^c010cbf1:	68 98 03 00 00       	push   $0x398$/;"	l
c010cbf6	obj/kernel.asm	/^c010cbf6:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010cbfb	obj/kernel.asm	/^c010cbfb:	e8 cf 38 ff ff       	call   c01004cf <__panic>$/;"	l
c010cc00	obj/kernel.asm	/^c010cc00:	a1 80 e0 14 c0       	mov    0xc014e080,%eax$/;"	l
c010cc05	obj/kernel.asm	/^c010cc05:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010cc0b	obj/kernel.asm	/^c010cc0b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cc0e	obj/kernel.asm	/^c010cc0e:	50                   	push   %eax$/;"	l
c010cc0f	obj/kernel.asm	/^c010cc0f:	e8 a1 e9 ff ff       	call   c010b5b5 <files_count_inc>$/;"	l
c010cc14	obj/kernel.asm	/^c010cc14:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cc17	obj/kernel.asm	/^c010cc17:	a1 80 e0 14 c0       	mov    0xc014e080,%eax$/;"	l
c010cc1c	obj/kernel.asm	/^c010cc1c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010cc1f	obj/kernel.asm	/^c010cc1f:	68 92 64 11 c0       	push   $0xc0116492$/;"	l
c010cc24	obj/kernel.asm	/^c010cc24:	50                   	push   %eax$/;"	l
c010cc25	obj/kernel.asm	/^c010cc25:	e8 3a eb ff ff       	call   c010b764 <set_proc_name>$/;"	l
c010cc2a	obj/kernel.asm	/^c010cc2a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cc2d	obj/kernel.asm	/^c010cc2d:	a1 c0 00 15 c0       	mov    0xc01500c0,%eax$/;"	l
c010cc32	obj/kernel.asm	/^c010cc32:	83 c0 01             	add    $0x1,%eax$/;"	l
c010cc35	obj/kernel.asm	/^c010cc35:	a3 c0 00 15 c0       	mov    %eax,0xc01500c0$/;"	l
c010cc3a	obj/kernel.asm	/^c010cc3a:	a1 80 e0 14 c0       	mov    0xc014e080,%eax$/;"	l
c010cc3f	obj/kernel.asm	/^c010cc3f:	a3 88 e0 14 c0       	mov    %eax,0xc014e088$/;"	l
c010cc44	obj/kernel.asm	/^c010cc44:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010cc47	obj/kernel.asm	/^c010cc47:	6a 00                	push   $0x0$/;"	l
c010cc49	obj/kernel.asm	/^c010cc49:	6a 00                	push   $0x0$/;"	l
c010cc4b	obj/kernel.asm	/^c010cc4b:	68 87 c9 10 c0       	push   $0xc010c987$/;"	l
c010cc50	obj/kernel.asm	/^c010cc50:	e8 88 ef ff ff       	call   c010bbdd <kernel_thread>$/;"	l
c010cc55	obj/kernel.asm	/^c010cc55:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cc58	obj/kernel.asm	/^c010cc58:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010cc5b	obj/kernel.asm	/^c010cc5b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010cc5f	obj/kernel.asm	/^c010cc5f:	7f 17                	jg     c010cc78 <proc_init+0x15e>$/;"	l
c010cc61	obj/kernel.asm	/^c010cc61:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010cc64	obj/kernel.asm	/^c010cc64:	68 97 64 11 c0       	push   $0xc0116497$/;"	l
c010cc69	obj/kernel.asm	/^c010cc69:	68 a3 03 00 00       	push   $0x3a3$/;"	l
c010cc6e	obj/kernel.asm	/^c010cc6e:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010cc73	obj/kernel.asm	/^c010cc73:	e8 57 38 ff ff       	call   c01004cf <__panic>$/;"	l
c010cc78	obj/kernel.asm	/^c010cc78:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cc7b	obj/kernel.asm	/^c010cc7b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010cc7e	obj/kernel.asm	/^c010cc7e:	e8 e8 ee ff ff       	call   c010bb6b <find_proc>$/;"	l
c010cc83	obj/kernel.asm	/^c010cc83:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cc86	obj/kernel.asm	/^c010cc86:	a3 84 e0 14 c0       	mov    %eax,0xc014e084$/;"	l
c010cc8b	obj/kernel.asm	/^c010cc8b:	a1 84 e0 14 c0       	mov    0xc014e084,%eax$/;"	l
c010cc90	obj/kernel.asm	/^c010cc90:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010cc93	obj/kernel.asm	/^c010cc93:	68 b1 64 11 c0       	push   $0xc01164b1$/;"	l
c010cc98	obj/kernel.asm	/^c010cc98:	50                   	push   %eax$/;"	l
c010cc99	obj/kernel.asm	/^c010cc99:	e8 c6 ea ff ff       	call   c010b764 <set_proc_name>$/;"	l
c010cc9e	obj/kernel.asm	/^c010cc9e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cca1	obj/kernel.asm	/^c010cca1:	a1 80 e0 14 c0       	mov    0xc014e080,%eax$/;"	l
c010cca6	obj/kernel.asm	/^c010cca6:	85 c0                	test   %eax,%eax$/;"	l
c010cca8	obj/kernel.asm	/^c010cca8:	74 0c                	je     c010ccb6 <proc_init+0x19c>$/;"	l
c010ccaa	obj/kernel.asm	/^c010ccaa:	a1 80 e0 14 c0       	mov    0xc014e080,%eax$/;"	l
c010ccaf	obj/kernel.asm	/^c010ccaf:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ccb2	obj/kernel.asm	/^c010ccb2:	85 c0                	test   %eax,%eax$/;"	l
c010ccb4	obj/kernel.asm	/^c010ccb4:	74 19                	je     c010cccf <proc_init+0x1b5>$/;"	l
c010ccb6	obj/kernel.asm	/^c010ccb6:	68 b8 64 11 c0       	push   $0xc01164b8$/;"	l
c010ccbb	obj/kernel.asm	/^c010ccbb:	68 37 62 11 c0       	push   $0xc0116237$/;"	l
c010ccc0	obj/kernel.asm	/^c010ccc0:	68 a9 03 00 00       	push   $0x3a9$/;"	l
c010ccc5	obj/kernel.asm	/^c010ccc5:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010ccca	obj/kernel.asm	/^c010ccca:	e8 00 38 ff ff       	call   c01004cf <__panic>$/;"	l
c010cccf	obj/kernel.asm	/^c010cccf:	a1 84 e0 14 c0       	mov    0xc014e084,%eax$/;"	l
c010ccd4	obj/kernel.asm	/^c010ccd4:	85 c0                	test   %eax,%eax$/;"	l
c010ccd6	obj/kernel.asm	/^c010ccd6:	74 0d                	je     c010cce5 <proc_init+0x1cb>$/;"	l
c010ccd8	obj/kernel.asm	/^c010ccd8:	a1 84 e0 14 c0       	mov    0xc014e084,%eax$/;"	l
c010ccdd	obj/kernel.asm	/^c010ccdd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010cce0	obj/kernel.asm	/^c010cce0:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010cce3	obj/kernel.asm	/^c010cce3:	74 19                	je     c010ccfe <proc_init+0x1e4>$/;"	l
c010cce5	obj/kernel.asm	/^c010cce5:	68 e0 64 11 c0       	push   $0xc01164e0$/;"	l
c010ccea	obj/kernel.asm	/^c010ccea:	68 37 62 11 c0       	push   $0xc0116237$/;"	l
c010ccef	obj/kernel.asm	/^c010ccef:	68 aa 03 00 00       	push   $0x3aa$/;"	l
c010ccf4	obj/kernel.asm	/^c010ccf4:	68 10 62 11 c0       	push   $0xc0116210$/;"	l
c010ccf9	obj/kernel.asm	/^c010ccf9:	e8 d1 37 ff ff       	call   c01004cf <__panic>$/;"	l
c010ccfe	obj/kernel.asm	/^c010ccfe:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c010cd01	obj/kernel.asm	/^c010cd01:	c9                   	leave  $/;"	l
c010cd02	obj/kernel.asm	/^c010cd02:	c3                   	ret    $/;"	l
c010cd03	obj/kernel.asm	/^c010cd03 <cpu_idle>:$/;"	l
c010cd03	obj/kernel.asm	/^c010cd03:	55                   	push   %ebp$/;"	l
c010cd04	obj/kernel.asm	/^c010cd04:	89 e5                	mov    %esp,%ebp$/;"	l
c010cd06	obj/kernel.asm	/^c010cd06:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010cd09	obj/kernel.asm	/^c010cd09:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010cd0e	obj/kernel.asm	/^c010cd0e:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010cd11	obj/kernel.asm	/^c010cd11:	85 c0                	test   %eax,%eax$/;"	l
c010cd13	obj/kernel.asm	/^c010cd13:	74 05                	je     c010cd1a <cpu_idle+0x17>$/;"	l
c010cd15	obj/kernel.asm	/^c010cd15:	e8 96 02 00 00       	call   c010cfb0 <schedule>$/;"	l
c010cd1a	obj/kernel.asm	/^c010cd1a:	eb ed                	jmp    c010cd09 <cpu_idle+0x6>$/;"	l
c010cd1c	obj/kernel.asm	/^c010cd1c <lab6_set_priority>:$/;"	l
c010cd1c	obj/kernel.asm	/^c010cd1c:	55                   	push   %ebp$/;"	l
c010cd1d	obj/kernel.asm	/^c010cd1d:	89 e5                	mov    %esp,%ebp$/;"	l
c010cd1f	obj/kernel.asm	/^c010cd1f:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010cd23	obj/kernel.asm	/^c010cd23:	75 11                	jne    c010cd36 <lab6_set_priority+0x1a>$/;"	l
c010cd25	obj/kernel.asm	/^c010cd25:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010cd2a	obj/kernel.asm	/^c010cd2a:	c7 80 c0 00 00 00 01 	movl   $0x1,0xc0(%eax)$/;"	l
c010cd31	obj/kernel.asm	/^c010cd31:	00 00 00 $/;"	l
c010cd34	obj/kernel.asm	/^c010cd34:	eb 0e                	jmp    c010cd44 <lab6_set_priority+0x28>$/;"	l
c010cd36	obj/kernel.asm	/^c010cd36:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010cd3b	obj/kernel.asm	/^c010cd3b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010cd3e	obj/kernel.asm	/^c010cd3e:	89 90 c0 00 00 00    	mov    %edx,0xc0(%eax)$/;"	l
c010cd44	obj/kernel.asm	/^c010cd44:	5d                   	pop    %ebp$/;"	l
c010cd45	obj/kernel.asm	/^c010cd45:	c3                   	ret    $/;"	l
c010cd46	obj/kernel.asm	/^c010cd46 <do_sleep>:$/;"	l
c010cd46	obj/kernel.asm	/^c010cd46:	55                   	push   %ebp$/;"	l
c010cd47	obj/kernel.asm	/^c010cd47:	89 e5                	mov    %esp,%ebp$/;"	l
c010cd49	obj/kernel.asm	/^c010cd49:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010cd4c	obj/kernel.asm	/^c010cd4c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010cd50	obj/kernel.asm	/^c010cd50:	75 07                	jne    c010cd59 <do_sleep+0x13>$/;"	l
c010cd52	obj/kernel.asm	/^c010cd52:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010cd57	obj/kernel.asm	/^c010cd57:	eb 72                	jmp    c010cdcb <do_sleep+0x85>$/;"	l
c010cd59	obj/kernel.asm	/^c010cd59:	e8 9e e6 ff ff       	call   c010b3fc <__intr_save>$/;"	l
c010cd5e	obj/kernel.asm	/^c010cd5e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cd61	obj/kernel.asm	/^c010cd61:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010cd64	obj/kernel.asm	/^c010cd64:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010cd69	obj/kernel.asm	/^c010cd69:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010cd6c	obj/kernel.asm	/^c010cd6c:	52                   	push   %edx$/;"	l
c010cd6d	obj/kernel.asm	/^c010cd6d:	50                   	push   %eax$/;"	l
c010cd6e	obj/kernel.asm	/^c010cd6e:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c010cd71	obj/kernel.asm	/^c010cd71:	50                   	push   %eax$/;"	l
c010cd72	obj/kernel.asm	/^c010cd72:	e8 4c e6 ff ff       	call   c010b3c3 <timer_init>$/;"	l
c010cd77	obj/kernel.asm	/^c010cd77:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cd7a	obj/kernel.asm	/^c010cd7a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010cd7d	obj/kernel.asm	/^c010cd7d:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010cd82	obj/kernel.asm	/^c010cd82:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010cd88	obj/kernel.asm	/^c010cd88:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010cd8d	obj/kernel.asm	/^c010cd8d:	c7 80 90 00 00 00 02 	movl   $0x80000002,0x90(%eax)$/;"	l
c010cd94	obj/kernel.asm	/^c010cd94:	00 00 80 $/;"	l
c010cd97	obj/kernel.asm	/^c010cd97:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cd9a	obj/kernel.asm	/^c010cd9a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010cd9d	obj/kernel.asm	/^c010cd9d:	e8 a6 02 00 00       	call   c010d048 <add_timer>$/;"	l
c010cda2	obj/kernel.asm	/^c010cda2:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cda5	obj/kernel.asm	/^c010cda5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cda8	obj/kernel.asm	/^c010cda8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010cdab	obj/kernel.asm	/^c010cdab:	e8 76 e6 ff ff       	call   c010b426 <__intr_restore>$/;"	l
c010cdb0	obj/kernel.asm	/^c010cdb0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cdb3	obj/kernel.asm	/^c010cdb3:	e8 f8 01 00 00       	call   c010cfb0 <schedule>$/;"	l
c010cdb8	obj/kernel.asm	/^c010cdb8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cdbb	obj/kernel.asm	/^c010cdbb:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010cdbe	obj/kernel.asm	/^c010cdbe:	e8 aa 03 00 00       	call   c010d16d <del_timer>$/;"	l
c010cdc3	obj/kernel.asm	/^c010cdc3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cdc6	obj/kernel.asm	/^c010cdc6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010cdcb	obj/kernel.asm	/^c010cdcb:	c9                   	leave  $/;"	l
c010cdcc	obj/kernel.asm	/^c010cdcc:	c3                   	ret    $/;"	l
c010cdcd	obj/kernel.asm	/^c010cdcd <__intr_save>:$/;"	l
c010cdcd	obj/kernel.asm	/^c010cdcd:	55                   	push   %ebp$/;"	l
c010cdce	obj/kernel.asm	/^c010cdce:	89 e5                	mov    %esp,%ebp$/;"	l
c010cdd0	obj/kernel.asm	/^c010cdd0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010cdd3	obj/kernel.asm	/^c010cdd3:	9c                   	pushf  $/;"	l
c010cdd4	obj/kernel.asm	/^c010cdd4:	58                   	pop    %eax$/;"	l
c010cdd5	obj/kernel.asm	/^c010cdd5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cdd8	obj/kernel.asm	/^c010cdd8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cddb	obj/kernel.asm	/^c010cddb:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010cde0	obj/kernel.asm	/^c010cde0:	85 c0                	test   %eax,%eax$/;"	l
c010cde2	obj/kernel.asm	/^c010cde2:	74 0c                	je     c010cdf0 <__intr_save+0x23>$/;"	l
c010cde4	obj/kernel.asm	/^c010cde4:	e8 b3 53 ff ff       	call   c010219c <intr_disable>$/;"	l
c010cde9	obj/kernel.asm	/^c010cde9:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010cdee	obj/kernel.asm	/^c010cdee:	eb 05                	jmp    c010cdf5 <__intr_save+0x28>$/;"	l
c010cdf0	obj/kernel.asm	/^c010cdf0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010cdf5	obj/kernel.asm	/^c010cdf5:	c9                   	leave  $/;"	l
c010cdf6	obj/kernel.asm	/^c010cdf6:	c3                   	ret    $/;"	l
c010cdf7	obj/kernel.asm	/^c010cdf7 <__intr_restore>:$/;"	l
c010cdf7	obj/kernel.asm	/^c010cdf7:	55                   	push   %ebp$/;"	l
c010cdf8	obj/kernel.asm	/^c010cdf8:	89 e5                	mov    %esp,%ebp$/;"	l
c010cdfa	obj/kernel.asm	/^c010cdfa:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010cdfd	obj/kernel.asm	/^c010cdfd:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010ce01	obj/kernel.asm	/^c010ce01:	74 05                	je     c010ce08 <__intr_restore+0x11>$/;"	l
c010ce03	obj/kernel.asm	/^c010ce03:	e8 8e 53 ff ff       	call   c0102196 <intr_enable>$/;"	l
c010ce08	obj/kernel.asm	/^c010ce08:	c9                   	leave  $/;"	l
c010ce09	obj/kernel.asm	/^c010ce09:	c3                   	ret    $/;"	l
c010ce0a	obj/kernel.asm	/^c010ce0a <sched_class_enqueue>:$/;"	l
c010ce0a	obj/kernel.asm	/^c010ce0a:	55                   	push   %ebp$/;"	l
c010ce0b	obj/kernel.asm	/^c010ce0b:	89 e5                	mov    %esp,%ebp$/;"	l
c010ce0d	obj/kernel.asm	/^c010ce0d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ce10	obj/kernel.asm	/^c010ce10:	a1 80 e0 14 c0       	mov    0xc014e080,%eax$/;"	l
c010ce15	obj/kernel.asm	/^c010ce15:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010ce18	obj/kernel.asm	/^c010ce18:	74 1a                	je     c010ce34 <sched_class_enqueue+0x2a>$/;"	l
c010ce1a	obj/kernel.asm	/^c010ce1a:	a1 1c 01 15 c0       	mov    0xc015011c,%eax$/;"	l
c010ce1f	obj/kernel.asm	/^c010ce1f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010ce22	obj/kernel.asm	/^c010ce22:	8b 15 20 01 15 c0    	mov    0xc0150120,%edx$/;"	l
c010ce28	obj/kernel.asm	/^c010ce28:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ce2b	obj/kernel.asm	/^c010ce2b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ce2e	obj/kernel.asm	/^c010ce2e:	52                   	push   %edx$/;"	l
c010ce2f	obj/kernel.asm	/^c010ce2f:	ff d0                	call   *%eax$/;"	l
c010ce31	obj/kernel.asm	/^c010ce31:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ce34	obj/kernel.asm	/^c010ce34:	c9                   	leave  $/;"	l
c010ce35	obj/kernel.asm	/^c010ce35:	c3                   	ret    $/;"	l
c010ce36	obj/kernel.asm	/^c010ce36 <sched_class_dequeue>:$/;"	l
c010ce36	obj/kernel.asm	/^c010ce36:	55                   	push   %ebp$/;"	l
c010ce37	obj/kernel.asm	/^c010ce37:	89 e5                	mov    %esp,%ebp$/;"	l
c010ce39	obj/kernel.asm	/^c010ce39:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ce3c	obj/kernel.asm	/^c010ce3c:	a1 1c 01 15 c0       	mov    0xc015011c,%eax$/;"	l
c010ce41	obj/kernel.asm	/^c010ce41:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010ce44	obj/kernel.asm	/^c010ce44:	8b 15 20 01 15 c0    	mov    0xc0150120,%edx$/;"	l
c010ce4a	obj/kernel.asm	/^c010ce4a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ce4d	obj/kernel.asm	/^c010ce4d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ce50	obj/kernel.asm	/^c010ce50:	52                   	push   %edx$/;"	l
c010ce51	obj/kernel.asm	/^c010ce51:	ff d0                	call   *%eax$/;"	l
c010ce53	obj/kernel.asm	/^c010ce53:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ce56	obj/kernel.asm	/^c010ce56:	c9                   	leave  $/;"	l
c010ce57	obj/kernel.asm	/^c010ce57:	c3                   	ret    $/;"	l
c010ce58	obj/kernel.asm	/^c010ce58 <sched_class_pick_next>:$/;"	l
c010ce58	obj/kernel.asm	/^c010ce58:	55                   	push   %ebp$/;"	l
c010ce59	obj/kernel.asm	/^c010ce59:	89 e5                	mov    %esp,%ebp$/;"	l
c010ce5b	obj/kernel.asm	/^c010ce5b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ce5e	obj/kernel.asm	/^c010ce5e:	a1 1c 01 15 c0       	mov    0xc015011c,%eax$/;"	l
c010ce63	obj/kernel.asm	/^c010ce63:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010ce66	obj/kernel.asm	/^c010ce66:	8b 15 20 01 15 c0    	mov    0xc0150120,%edx$/;"	l
c010ce6c	obj/kernel.asm	/^c010ce6c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ce6f	obj/kernel.asm	/^c010ce6f:	52                   	push   %edx$/;"	l
c010ce70	obj/kernel.asm	/^c010ce70:	ff d0                	call   *%eax$/;"	l
c010ce72	obj/kernel.asm	/^c010ce72:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ce75	obj/kernel.asm	/^c010ce75:	c9                   	leave  $/;"	l
c010ce76	obj/kernel.asm	/^c010ce76:	c3                   	ret    $/;"	l
c010ce77	obj/kernel.asm	/^c010ce77 <sched_class_proc_tick>:$/;"	l
c010ce77	obj/kernel.asm	/^c010ce77:	55                   	push   %ebp$/;"	l
c010ce78	obj/kernel.asm	/^c010ce78:	89 e5                	mov    %esp,%ebp$/;"	l
c010ce7a	obj/kernel.asm	/^c010ce7a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ce7d	obj/kernel.asm	/^c010ce7d:	a1 80 e0 14 c0       	mov    0xc014e080,%eax$/;"	l
c010ce82	obj/kernel.asm	/^c010ce82:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010ce85	obj/kernel.asm	/^c010ce85:	74 1c                	je     c010cea3 <sched_class_proc_tick+0x2c>$/;"	l
c010ce87	obj/kernel.asm	/^c010ce87:	a1 1c 01 15 c0       	mov    0xc015011c,%eax$/;"	l
c010ce8c	obj/kernel.asm	/^c010ce8c:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ce8f	obj/kernel.asm	/^c010ce8f:	8b 15 20 01 15 c0    	mov    0xc0150120,%edx$/;"	l
c010ce95	obj/kernel.asm	/^c010ce95:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ce98	obj/kernel.asm	/^c010ce98:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ce9b	obj/kernel.asm	/^c010ce9b:	52                   	push   %edx$/;"	l
c010ce9c	obj/kernel.asm	/^c010ce9c:	ff d0                	call   *%eax$/;"	l
c010ce9e	obj/kernel.asm	/^c010ce9e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cea1	obj/kernel.asm	/^c010cea1:	eb 0a                	jmp    c010cead <sched_class_proc_tick+0x36>$/;"	l
c010cea3	obj/kernel.asm	/^c010cea3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cea6	obj/kernel.asm	/^c010cea6:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010cead	obj/kernel.asm	/^c010cead:	c9                   	leave  $/;"	l
c010ceae	obj/kernel.asm	/^c010ceae:	c3                   	ret    $/;"	l
c010ceaf	obj/kernel.asm	/^c010ceaf <sched_init>:$/;"	l
c010ceaf	obj/kernel.asm	/^c010ceaf:	55                   	push   %ebp$/;"	l
c010ceb0	obj/kernel.asm	/^c010ceb0:	89 e5                	mov    %esp,%ebp$/;"	l
c010ceb2	obj/kernel.asm	/^c010ceb2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ceb5	obj/kernel.asm	/^c010ceb5:	c7 45 f4 14 01 15 c0 	movl   $0xc0150114,-0xc(%ebp)$/;"	l
c010cebc	obj/kernel.asm	/^c010cebc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cebf	obj/kernel.asm	/^c010cebf:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010cec2	obj/kernel.asm	/^c010cec2:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010cec5	obj/kernel.asm	/^c010cec5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cec8	obj/kernel.asm	/^c010cec8:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010cecb	obj/kernel.asm	/^c010cecb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cece	obj/kernel.asm	/^c010cece:	89 10                	mov    %edx,(%eax)$/;"	l
c010ced0	obj/kernel.asm	/^c010ced0:	c7 05 1c 01 15 c0 ec 	movl   $0xc014caec,0xc015011c$/;"	l
c010ced7	obj/kernel.asm	/^c010ced7:	ca 14 c0 $/;"	l
c010ceda	obj/kernel.asm	/^c010ceda:	c7 05 20 01 15 c0 24 	movl   $0xc0150124,0xc0150120$/;"	l
c010cee1	obj/kernel.asm	/^c010cee1:	01 15 c0 $/;"	l
c010cee4	obj/kernel.asm	/^c010cee4:	a1 20 01 15 c0       	mov    0xc0150120,%eax$/;"	l
c010cee9	obj/kernel.asm	/^c010cee9:	c7 40 0c 14 00 00 00 	movl   $0x14,0xc(%eax)$/;"	l
c010cef0	obj/kernel.asm	/^c010cef0:	a1 1c 01 15 c0       	mov    0xc015011c,%eax$/;"	l
c010cef5	obj/kernel.asm	/^c010cef5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010cef8	obj/kernel.asm	/^c010cef8:	8b 15 20 01 15 c0    	mov    0xc0150120,%edx$/;"	l
c010cefe	obj/kernel.asm	/^c010cefe:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cf01	obj/kernel.asm	/^c010cf01:	52                   	push   %edx$/;"	l
c010cf02	obj/kernel.asm	/^c010cf02:	ff d0                	call   *%eax$/;"	l
c010cf04	obj/kernel.asm	/^c010cf04:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cf07	obj/kernel.asm	/^c010cf07:	a1 1c 01 15 c0       	mov    0xc015011c,%eax$/;"	l
c010cf0c	obj/kernel.asm	/^c010cf0c:	8b 00                	mov    (%eax),%eax$/;"	l
c010cf0e	obj/kernel.asm	/^c010cf0e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010cf11	obj/kernel.asm	/^c010cf11:	50                   	push   %eax$/;"	l
c010cf12	obj/kernel.asm	/^c010cf12:	68 08 65 11 c0       	push   $0xc0116508$/;"	l
c010cf17	obj/kernel.asm	/^c010cf17:	e8 4e 34 ff ff       	call   c010036a <cprintf>$/;"	l
c010cf1c	obj/kernel.asm	/^c010cf1c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cf1f	obj/kernel.asm	/^c010cf1f:	c9                   	leave  $/;"	l
c010cf20	obj/kernel.asm	/^c010cf20:	c3                   	ret    $/;"	l
c010cf21	obj/kernel.asm	/^c010cf21 <wakeup_proc>:$/;"	l
c010cf21	obj/kernel.asm	/^c010cf21:	55                   	push   %ebp$/;"	l
c010cf22	obj/kernel.asm	/^c010cf22:	89 e5                	mov    %esp,%ebp$/;"	l
c010cf24	obj/kernel.asm	/^c010cf24:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010cf27	obj/kernel.asm	/^c010cf27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cf2a	obj/kernel.asm	/^c010cf2a:	8b 00                	mov    (%eax),%eax$/;"	l
c010cf2c	obj/kernel.asm	/^c010cf2c:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010cf2f	obj/kernel.asm	/^c010cf2f:	75 16                	jne    c010cf47 <wakeup_proc+0x26>$/;"	l
c010cf31	obj/kernel.asm	/^c010cf31:	68 19 65 11 c0       	push   $0xc0116519$/;"	l
c010cf36	obj/kernel.asm	/^c010cf36:	68 34 65 11 c0       	push   $0xc0116534$/;"	l
c010cf3b	obj/kernel.asm	/^c010cf3b:	6a 3c                	push   $0x3c$/;"	l
c010cf3d	obj/kernel.asm	/^c010cf3d:	68 49 65 11 c0       	push   $0xc0116549$/;"	l
c010cf42	obj/kernel.asm	/^c010cf42:	e8 88 35 ff ff       	call   c01004cf <__panic>$/;"	l
c010cf47	obj/kernel.asm	/^c010cf47:	e8 81 fe ff ff       	call   c010cdcd <__intr_save>$/;"	l
c010cf4c	obj/kernel.asm	/^c010cf4c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cf4f	obj/kernel.asm	/^c010cf4f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cf52	obj/kernel.asm	/^c010cf52:	8b 00                	mov    (%eax),%eax$/;"	l
c010cf54	obj/kernel.asm	/^c010cf54:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010cf57	obj/kernel.asm	/^c010cf57:	74 30                	je     c010cf89 <wakeup_proc+0x68>$/;"	l
c010cf59	obj/kernel.asm	/^c010cf59:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cf5c	obj/kernel.asm	/^c010cf5c:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010cf62	obj/kernel.asm	/^c010cf62:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cf65	obj/kernel.asm	/^c010cf65:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%eax)$/;"	l
c010cf6c	obj/kernel.asm	/^c010cf6c:	00 00 00 $/;"	l
c010cf6f	obj/kernel.asm	/^c010cf6f:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010cf74	obj/kernel.asm	/^c010cf74:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010cf77	obj/kernel.asm	/^c010cf77:	74 27                	je     c010cfa0 <wakeup_proc+0x7f>$/;"	l
c010cf79	obj/kernel.asm	/^c010cf79:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cf7c	obj/kernel.asm	/^c010cf7c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010cf7f	obj/kernel.asm	/^c010cf7f:	e8 86 fe ff ff       	call   c010ce0a <sched_class_enqueue>$/;"	l
c010cf84	obj/kernel.asm	/^c010cf84:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cf87	obj/kernel.asm	/^c010cf87:	eb 17                	jmp    c010cfa0 <wakeup_proc+0x7f>$/;"	l
c010cf89	obj/kernel.asm	/^c010cf89:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010cf8c	obj/kernel.asm	/^c010cf8c:	68 5f 65 11 c0       	push   $0xc011655f$/;"	l
c010cf91	obj/kernel.asm	/^c010cf91:	6a 48                	push   $0x48$/;"	l
c010cf93	obj/kernel.asm	/^c010cf93:	68 49 65 11 c0       	push   $0xc0116549$/;"	l
c010cf98	obj/kernel.asm	/^c010cf98:	e8 9f 35 ff ff       	call   c010053c <__warn>$/;"	l
c010cf9d	obj/kernel.asm	/^c010cf9d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cfa0	obj/kernel.asm	/^c010cfa0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cfa3	obj/kernel.asm	/^c010cfa3:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010cfa6	obj/kernel.asm	/^c010cfa6:	e8 4c fe ff ff       	call   c010cdf7 <__intr_restore>$/;"	l
c010cfab	obj/kernel.asm	/^c010cfab:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cfae	obj/kernel.asm	/^c010cfae:	c9                   	leave  $/;"	l
c010cfaf	obj/kernel.asm	/^c010cfaf:	c3                   	ret    $/;"	l
c010cfb0	obj/kernel.asm	/^c010cfb0 <schedule>:$/;"	l
c010cfb0	obj/kernel.asm	/^c010cfb0:	55                   	push   %ebp$/;"	l
c010cfb1	obj/kernel.asm	/^c010cfb1:	89 e5                	mov    %esp,%ebp$/;"	l
c010cfb3	obj/kernel.asm	/^c010cfb3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010cfb6	obj/kernel.asm	/^c010cfb6:	e8 12 fe ff ff       	call   c010cdcd <__intr_save>$/;"	l
c010cfbb	obj/kernel.asm	/^c010cfbb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010cfbe	obj/kernel.asm	/^c010cfbe:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010cfc3	obj/kernel.asm	/^c010cfc3:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010cfca	obj/kernel.asm	/^c010cfca:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010cfcf	obj/kernel.asm	/^c010cfcf:	8b 00                	mov    (%eax),%eax$/;"	l
c010cfd1	obj/kernel.asm	/^c010cfd1:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010cfd4	obj/kernel.asm	/^c010cfd4:	75 11                	jne    c010cfe7 <schedule+0x37>$/;"	l
c010cfd6	obj/kernel.asm	/^c010cfd6:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010cfdb	obj/kernel.asm	/^c010cfdb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cfde	obj/kernel.asm	/^c010cfde:	50                   	push   %eax$/;"	l
c010cfdf	obj/kernel.asm	/^c010cfdf:	e8 26 fe ff ff       	call   c010ce0a <sched_class_enqueue>$/;"	l
c010cfe4	obj/kernel.asm	/^c010cfe4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cfe7	obj/kernel.asm	/^c010cfe7:	e8 6c fe ff ff       	call   c010ce58 <sched_class_pick_next>$/;"	l
c010cfec	obj/kernel.asm	/^c010cfec:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cfef	obj/kernel.asm	/^c010cfef:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010cff3	obj/kernel.asm	/^c010cff3:	74 0e                	je     c010d003 <schedule+0x53>$/;"	l
c010cff5	obj/kernel.asm	/^c010cff5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cff8	obj/kernel.asm	/^c010cff8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010cffb	obj/kernel.asm	/^c010cffb:	e8 36 fe ff ff       	call   c010ce36 <sched_class_dequeue>$/;"	l
c010d000	obj/kernel.asm	/^c010d000:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d003	obj/kernel.asm	/^c010d003:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d007	obj/kernel.asm	/^c010d007:	75 08                	jne    c010d011 <schedule+0x61>$/;"	l
c010d009	obj/kernel.asm	/^c010d009:	a1 80 e0 14 c0       	mov    0xc014e080,%eax$/;"	l
c010d00e	obj/kernel.asm	/^c010d00e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d011	obj/kernel.asm	/^c010d011:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d014	obj/kernel.asm	/^c010d014:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010d017	obj/kernel.asm	/^c010d017:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010d01a	obj/kernel.asm	/^c010d01a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d01d	obj/kernel.asm	/^c010d01d:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010d020	obj/kernel.asm	/^c010d020:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010d025	obj/kernel.asm	/^c010d025:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010d028	obj/kernel.asm	/^c010d028:	74 0e                	je     c010d038 <schedule+0x88>$/;"	l
c010d02a	obj/kernel.asm	/^c010d02a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d02d	obj/kernel.asm	/^c010d02d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d030	obj/kernel.asm	/^c010d030:	e8 ec e9 ff ff       	call   c010ba21 <proc_run>$/;"	l
c010d035	obj/kernel.asm	/^c010d035:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d038	obj/kernel.asm	/^c010d038:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d03b	obj/kernel.asm	/^c010d03b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d03e	obj/kernel.asm	/^c010d03e:	e8 b4 fd ff ff       	call   c010cdf7 <__intr_restore>$/;"	l
c010d043	obj/kernel.asm	/^c010d043:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d046	obj/kernel.asm	/^c010d046:	c9                   	leave  $/;"	l
c010d047	obj/kernel.asm	/^c010d047:	c3                   	ret    $/;"	l
c010d048	obj/kernel.asm	/^c010d048 <add_timer>:$/;"	l
c010d048	obj/kernel.asm	/^c010d048:	55                   	push   %ebp$/;"	l
c010d049	obj/kernel.asm	/^c010d049:	89 e5                	mov    %esp,%ebp$/;"	l
c010d04b	obj/kernel.asm	/^c010d04b:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010d04e	obj/kernel.asm	/^c010d04e:	e8 7a fd ff ff       	call   c010cdcd <__intr_save>$/;"	l
c010d053	obj/kernel.asm	/^c010d053:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d056	obj/kernel.asm	/^c010d056:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d059	obj/kernel.asm	/^c010d059:	8b 00                	mov    (%eax),%eax$/;"	l
c010d05b	obj/kernel.asm	/^c010d05b:	85 c0                	test   %eax,%eax$/;"	l
c010d05d	obj/kernel.asm	/^c010d05d:	74 0a                	je     c010d069 <add_timer+0x21>$/;"	l
c010d05f	obj/kernel.asm	/^c010d05f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d062	obj/kernel.asm	/^c010d062:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d065	obj/kernel.asm	/^c010d065:	85 c0                	test   %eax,%eax$/;"	l
c010d067	obj/kernel.asm	/^c010d067:	75 16                	jne    c010d07f <add_timer+0x37>$/;"	l
c010d069	obj/kernel.asm	/^c010d069:	68 7c 65 11 c0       	push   $0xc011657c$/;"	l
c010d06e	obj/kernel.asm	/^c010d06e:	68 34 65 11 c0       	push   $0xc0116534$/;"	l
c010d073	obj/kernel.asm	/^c010d073:	6a 6b                	push   $0x6b$/;"	l
c010d075	obj/kernel.asm	/^c010d075:	68 49 65 11 c0       	push   $0xc0116549$/;"	l
c010d07a	obj/kernel.asm	/^c010d07a:	e8 50 34 ff ff       	call   c01004cf <__panic>$/;"	l
c010d07f	obj/kernel.asm	/^c010d07f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d082	obj/kernel.asm	/^c010d082:	83 c0 08             	add    $0x8,%eax$/;"	l
c010d085	obj/kernel.asm	/^c010d085:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010d088	obj/kernel.asm	/^c010d088:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d08b	obj/kernel.asm	/^c010d08b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d08e	obj/kernel.asm	/^c010d08e:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010d091	obj/kernel.asm	/^c010d091:	0f 94 c0             	sete   %al$/;"	l
c010d094	obj/kernel.asm	/^c010d094:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010d097	obj/kernel.asm	/^c010d097:	85 c0                	test   %eax,%eax$/;"	l
c010d099	obj/kernel.asm	/^c010d099:	75 16                	jne    c010d0b1 <add_timer+0x69>$/;"	l
c010d09b	obj/kernel.asm	/^c010d09b:	68 a8 65 11 c0       	push   $0xc01165a8$/;"	l
c010d0a0	obj/kernel.asm	/^c010d0a0:	68 34 65 11 c0       	push   $0xc0116534$/;"	l
c010d0a5	obj/kernel.asm	/^c010d0a5:	6a 6c                	push   $0x6c$/;"	l
c010d0a7	obj/kernel.asm	/^c010d0a7:	68 49 65 11 c0       	push   $0xc0116549$/;"	l
c010d0ac	obj/kernel.asm	/^c010d0ac:	e8 1e 34 ff ff       	call   c01004cf <__panic>$/;"	l
c010d0b1	obj/kernel.asm	/^c010d0b1:	c7 45 e4 14 01 15 c0 	movl   $0xc0150114,-0x1c(%ebp)$/;"	l
c010d0b8	obj/kernel.asm	/^c010d0b8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010d0bb	obj/kernel.asm	/^c010d0bb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d0be	obj/kernel.asm	/^c010d0be:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d0c1	obj/kernel.asm	/^c010d0c1:	eb 4a                	jmp    c010d10d <add_timer+0xc5>$/;"	l
c010d0c3	obj/kernel.asm	/^c010d0c3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d0c6	obj/kernel.asm	/^c010d0c6:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010d0c9	obj/kernel.asm	/^c010d0c9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d0cc	obj/kernel.asm	/^c010d0cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d0cf	obj/kernel.asm	/^c010d0cf:	8b 10                	mov    (%eax),%edx$/;"	l
c010d0d1	obj/kernel.asm	/^c010d0d1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d0d4	obj/kernel.asm	/^c010d0d4:	8b 00                	mov    (%eax),%eax$/;"	l
c010d0d6	obj/kernel.asm	/^c010d0d6:	39 c2                	cmp    %eax,%edx$/;"	l
c010d0d8	obj/kernel.asm	/^c010d0d8:	73 13                	jae    c010d0ed <add_timer+0xa5>$/;"	l
c010d0da	obj/kernel.asm	/^c010d0da:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d0dd	obj/kernel.asm	/^c010d0dd:	8b 10                	mov    (%eax),%edx$/;"	l
c010d0df	obj/kernel.asm	/^c010d0df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d0e2	obj/kernel.asm	/^c010d0e2:	8b 00                	mov    (%eax),%eax$/;"	l
c010d0e4	obj/kernel.asm	/^c010d0e4:	29 c2                	sub    %eax,%edx$/;"	l
c010d0e6	obj/kernel.asm	/^c010d0e6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d0e9	obj/kernel.asm	/^c010d0e9:	89 10                	mov    %edx,(%eax)$/;"	l
c010d0eb	obj/kernel.asm	/^c010d0eb:	eb 29                	jmp    c010d116 <add_timer+0xce>$/;"	l
c010d0ed	obj/kernel.asm	/^c010d0ed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d0f0	obj/kernel.asm	/^c010d0f0:	8b 10                	mov    (%eax),%edx$/;"	l
c010d0f2	obj/kernel.asm	/^c010d0f2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d0f5	obj/kernel.asm	/^c010d0f5:	8b 00                	mov    (%eax),%eax$/;"	l
c010d0f7	obj/kernel.asm	/^c010d0f7:	29 c2                	sub    %eax,%edx$/;"	l
c010d0f9	obj/kernel.asm	/^c010d0f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d0fc	obj/kernel.asm	/^c010d0fc:	89 10                	mov    %edx,(%eax)$/;"	l
c010d0fe	obj/kernel.asm	/^c010d0fe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d101	obj/kernel.asm	/^c010d101:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010d104	obj/kernel.asm	/^c010d104:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010d107	obj/kernel.asm	/^c010d107:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d10a	obj/kernel.asm	/^c010d10a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d10d	obj/kernel.asm	/^c010d10d:	81 7d f4 14 01 15 c0 	cmpl   $0xc0150114,-0xc(%ebp)$/;"	l
c010d114	obj/kernel.asm	/^c010d114:	75 ad                	jne    c010d0c3 <add_timer+0x7b>$/;"	l
c010d116	obj/kernel.asm	/^c010d116:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d119	obj/kernel.asm	/^c010d119:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
c010d11c	obj/kernel.asm	/^c010d11c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d11f	obj/kernel.asm	/^c010d11f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010d122	obj/kernel.asm	/^c010d122:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010d125	obj/kernel.asm	/^c010d125:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d128	obj/kernel.asm	/^c010d128:	8b 00                	mov    (%eax),%eax$/;"	l
c010d12a	obj/kernel.asm	/^c010d12a:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010d12d	obj/kernel.asm	/^c010d12d:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010d130	obj/kernel.asm	/^c010d130:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010d133	obj/kernel.asm	/^c010d133:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d136	obj/kernel.asm	/^c010d136:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010d139	obj/kernel.asm	/^c010d139:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010d13c	obj/kernel.asm	/^c010d13c:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010d13f	obj/kernel.asm	/^c010d13f:	89 10                	mov    %edx,(%eax)$/;"	l
c010d141	obj/kernel.asm	/^c010d141:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010d144	obj/kernel.asm	/^c010d144:	8b 10                	mov    (%eax),%edx$/;"	l
c010d146	obj/kernel.asm	/^c010d146:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010d149	obj/kernel.asm	/^c010d149:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d14c	obj/kernel.asm	/^c010d14c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010d14f	obj/kernel.asm	/^c010d14f:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010d152	obj/kernel.asm	/^c010d152:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d155	obj/kernel.asm	/^c010d155:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010d158	obj/kernel.asm	/^c010d158:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010d15b	obj/kernel.asm	/^c010d15b:	89 10                	mov    %edx,(%eax)$/;"	l
c010d15d	obj/kernel.asm	/^c010d15d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d160	obj/kernel.asm	/^c010d160:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d163	obj/kernel.asm	/^c010d163:	e8 8f fc ff ff       	call   c010cdf7 <__intr_restore>$/;"	l
c010d168	obj/kernel.asm	/^c010d168:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d16b	obj/kernel.asm	/^c010d16b:	c9                   	leave  $/;"	l
c010d16c	obj/kernel.asm	/^c010d16c:	c3                   	ret    $/;"	l
c010d16d	obj/kernel.asm	/^c010d16d <del_timer>:$/;"	l
c010d16d	obj/kernel.asm	/^c010d16d:	55                   	push   %ebp$/;"	l
c010d16e	obj/kernel.asm	/^c010d16e:	89 e5                	mov    %esp,%ebp$/;"	l
c010d170	obj/kernel.asm	/^c010d170:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010d173	obj/kernel.asm	/^c010d173:	e8 55 fc ff ff       	call   c010cdcd <__intr_save>$/;"	l
c010d178	obj/kernel.asm	/^c010d178:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d17b	obj/kernel.asm	/^c010d17b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d17e	obj/kernel.asm	/^c010d17e:	83 c0 08             	add    $0x8,%eax$/;"	l
c010d181	obj/kernel.asm	/^c010d181:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010d184	obj/kernel.asm	/^c010d184:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d187	obj/kernel.asm	/^c010d187:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d18a	obj/kernel.asm	/^c010d18a:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010d18d	obj/kernel.asm	/^c010d18d:	0f 94 c0             	sete   %al$/;"	l
c010d190	obj/kernel.asm	/^c010d190:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010d193	obj/kernel.asm	/^c010d193:	85 c0                	test   %eax,%eax$/;"	l
c010d195	obj/kernel.asm	/^c010d195:	0f 85 89 00 00 00    	jne    c010d224 <del_timer+0xb7>$/;"	l
c010d19b	obj/kernel.asm	/^c010d19b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d19e	obj/kernel.asm	/^c010d19e:	8b 00                	mov    (%eax),%eax$/;"	l
c010d1a0	obj/kernel.asm	/^c010d1a0:	85 c0                	test   %eax,%eax$/;"	l
c010d1a2	obj/kernel.asm	/^c010d1a2:	74 35                	je     c010d1d9 <del_timer+0x6c>$/;"	l
c010d1a4	obj/kernel.asm	/^c010d1a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d1a7	obj/kernel.asm	/^c010d1a7:	83 c0 08             	add    $0x8,%eax$/;"	l
c010d1aa	obj/kernel.asm	/^c010d1aa:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010d1ad	obj/kernel.asm	/^c010d1ad:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010d1b0	obj/kernel.asm	/^c010d1b0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d1b3	obj/kernel.asm	/^c010d1b3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d1b6	obj/kernel.asm	/^c010d1b6:	81 7d f0 14 01 15 c0 	cmpl   $0xc0150114,-0x10(%ebp)$/;"	l
c010d1bd	obj/kernel.asm	/^c010d1bd:	74 1a                	je     c010d1d9 <del_timer+0x6c>$/;"	l
c010d1bf	obj/kernel.asm	/^c010d1bf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d1c2	obj/kernel.asm	/^c010d1c2:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010d1c5	obj/kernel.asm	/^c010d1c5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d1c8	obj/kernel.asm	/^c010d1c8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d1cb	obj/kernel.asm	/^c010d1cb:	8b 10                	mov    (%eax),%edx$/;"	l
c010d1cd	obj/kernel.asm	/^c010d1cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d1d0	obj/kernel.asm	/^c010d1d0:	8b 00                	mov    (%eax),%eax$/;"	l
c010d1d2	obj/kernel.asm	/^c010d1d2:	01 c2                	add    %eax,%edx$/;"	l
c010d1d4	obj/kernel.asm	/^c010d1d4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d1d7	obj/kernel.asm	/^c010d1d7:	89 10                	mov    %edx,(%eax)$/;"	l
c010d1d9	obj/kernel.asm	/^c010d1d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d1dc	obj/kernel.asm	/^c010d1dc:	83 c0 08             	add    $0x8,%eax$/;"	l
c010d1df	obj/kernel.asm	/^c010d1df:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010d1e2	obj/kernel.asm	/^c010d1e2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010d1e5	obj/kernel.asm	/^c010d1e5:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010d1e8	obj/kernel.asm	/^c010d1e8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d1eb	obj/kernel.asm	/^c010d1eb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d1ee	obj/kernel.asm	/^c010d1ee:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010d1f1	obj/kernel.asm	/^c010d1f1:	8b 12                	mov    (%edx),%edx$/;"	l
c010d1f3	obj/kernel.asm	/^c010d1f3:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010d1f6	obj/kernel.asm	/^c010d1f6:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010d1f9	obj/kernel.asm	/^c010d1f9:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010d1fc	obj/kernel.asm	/^c010d1fc:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010d1ff	obj/kernel.asm	/^c010d1ff:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d202	obj/kernel.asm	/^c010d202:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010d205	obj/kernel.asm	/^c010d205:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010d208	obj/kernel.asm	/^c010d208:	89 10                	mov    %edx,(%eax)$/;"	l
c010d20a	obj/kernel.asm	/^c010d20a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010d20d	obj/kernel.asm	/^c010d20d:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010d210	obj/kernel.asm	/^c010d210:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010d213	obj/kernel.asm	/^c010d213:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010d216	obj/kernel.asm	/^c010d216:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d219	obj/kernel.asm	/^c010d219:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010d21c	obj/kernel.asm	/^c010d21c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010d21f	obj/kernel.asm	/^c010d21f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010d222	obj/kernel.asm	/^c010d222:	89 10                	mov    %edx,(%eax)$/;"	l
c010d224	obj/kernel.asm	/^c010d224:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d227	obj/kernel.asm	/^c010d227:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d22a	obj/kernel.asm	/^c010d22a:	e8 c8 fb ff ff       	call   c010cdf7 <__intr_restore>$/;"	l
c010d22f	obj/kernel.asm	/^c010d22f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d232	obj/kernel.asm	/^c010d232:	c9                   	leave  $/;"	l
c010d233	obj/kernel.asm	/^c010d233:	c3                   	ret    $/;"	l
c010d234	obj/kernel.asm	/^c010d234 <run_timer_list>:$/;"	l
c010d234	obj/kernel.asm	/^c010d234:	55                   	push   %ebp$/;"	l
c010d235	obj/kernel.asm	/^c010d235:	89 e5                	mov    %esp,%ebp$/;"	l
c010d237	obj/kernel.asm	/^c010d237:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010d23a	obj/kernel.asm	/^c010d23a:	e8 8e fb ff ff       	call   c010cdcd <__intr_save>$/;"	l
c010d23f	obj/kernel.asm	/^c010d23f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d242	obj/kernel.asm	/^c010d242:	c7 45 e4 14 01 15 c0 	movl   $0xc0150114,-0x1c(%ebp)$/;"	l
c010d249	obj/kernel.asm	/^c010d249:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010d24c	obj/kernel.asm	/^c010d24c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d24f	obj/kernel.asm	/^c010d24f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d252	obj/kernel.asm	/^c010d252:	81 7d f4 14 01 15 c0 	cmpl   $0xc0150114,-0xc(%ebp)$/;"	l
c010d259	obj/kernel.asm	/^c010d259:	0f 84 e3 00 00 00    	je     c010d342 <run_timer_list+0x10e>$/;"	l
c010d25f	obj/kernel.asm	/^c010d25f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d262	obj/kernel.asm	/^c010d262:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010d265	obj/kernel.asm	/^c010d265:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d268	obj/kernel.asm	/^c010d268:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d26b	obj/kernel.asm	/^c010d26b:	8b 00                	mov    (%eax),%eax$/;"	l
c010d26d	obj/kernel.asm	/^c010d26d:	85 c0                	test   %eax,%eax$/;"	l
c010d26f	obj/kernel.asm	/^c010d26f:	75 19                	jne    c010d28a <run_timer_list+0x56>$/;"	l
c010d271	obj/kernel.asm	/^c010d271:	68 c9 65 11 c0       	push   $0xc01165c9$/;"	l
c010d276	obj/kernel.asm	/^c010d276:	68 34 65 11 c0       	push   $0xc0116534$/;"	l
c010d27b	obj/kernel.asm	/^c010d27b:	68 99 00 00 00       	push   $0x99$/;"	l
c010d280	obj/kernel.asm	/^c010d280:	68 49 65 11 c0       	push   $0xc0116549$/;"	l
c010d285	obj/kernel.asm	/^c010d285:	e8 45 32 ff ff       	call   c01004cf <__panic>$/;"	l
c010d28a	obj/kernel.asm	/^c010d28a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d28d	obj/kernel.asm	/^c010d28d:	8b 00                	mov    (%eax),%eax$/;"	l
c010d28f	obj/kernel.asm	/^c010d28f:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010d292	obj/kernel.asm	/^c010d292:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d295	obj/kernel.asm	/^c010d295:	89 10                	mov    %edx,(%eax)$/;"	l
c010d297	obj/kernel.asm	/^c010d297:	e9 99 00 00 00       	jmp    c010d335 <run_timer_list+0x101>$/;"	l
c010d29c	obj/kernel.asm	/^c010d29c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d29f	obj/kernel.asm	/^c010d29f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010d2a2	obj/kernel.asm	/^c010d2a2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010d2a5	obj/kernel.asm	/^c010d2a5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d2a8	obj/kernel.asm	/^c010d2a8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d2ab	obj/kernel.asm	/^c010d2ab:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d2ae	obj/kernel.asm	/^c010d2ae:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d2b1	obj/kernel.asm	/^c010d2b1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010d2b4	obj/kernel.asm	/^c010d2b4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d2b7	obj/kernel.asm	/^c010d2b7:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010d2bd	obj/kernel.asm	/^c010d2bd:	85 c0                	test   %eax,%eax$/;"	l
c010d2bf	obj/kernel.asm	/^c010d2bf:	74 26                	je     c010d2e7 <run_timer_list+0xb3>$/;"	l
c010d2c1	obj/kernel.asm	/^c010d2c1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d2c4	obj/kernel.asm	/^c010d2c4:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010d2ca	obj/kernel.asm	/^c010d2ca:	85 c0                	test   %eax,%eax$/;"	l
c010d2cc	obj/kernel.asm	/^c010d2cc:	78 37                	js     c010d305 <run_timer_list+0xd1>$/;"	l
c010d2ce	obj/kernel.asm	/^c010d2ce:	68 e0 65 11 c0       	push   $0xc01165e0$/;"	l
c010d2d3	obj/kernel.asm	/^c010d2d3:	68 34 65 11 c0       	push   $0xc0116534$/;"	l
c010d2d8	obj/kernel.asm	/^c010d2d8:	68 9f 00 00 00       	push   $0x9f$/;"	l
c010d2dd	obj/kernel.asm	/^c010d2dd:	68 49 65 11 c0       	push   $0xc0116549$/;"	l
c010d2e2	obj/kernel.asm	/^c010d2e2:	e8 e8 31 ff ff       	call   c01004cf <__panic>$/;"	l
c010d2e7	obj/kernel.asm	/^c010d2e7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d2ea	obj/kernel.asm	/^c010d2ea:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d2ed	obj/kernel.asm	/^c010d2ed:	50                   	push   %eax$/;"	l
c010d2ee	obj/kernel.asm	/^c010d2ee:	68 04 66 11 c0       	push   $0xc0116604$/;"	l
c010d2f3	obj/kernel.asm	/^c010d2f3:	68 a2 00 00 00       	push   $0xa2$/;"	l
c010d2f8	obj/kernel.asm	/^c010d2f8:	68 49 65 11 c0       	push   $0xc0116549$/;"	l
c010d2fd	obj/kernel.asm	/^c010d2fd:	e8 3a 32 ff ff       	call   c010053c <__warn>$/;"	l
c010d302	obj/kernel.asm	/^c010d302:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d305	obj/kernel.asm	/^c010d305:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d308	obj/kernel.asm	/^c010d308:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010d30b	obj/kernel.asm	/^c010d30b:	e8 11 fc ff ff       	call   c010cf21 <wakeup_proc>$/;"	l
c010d310	obj/kernel.asm	/^c010d310:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d313	obj/kernel.asm	/^c010d313:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d316	obj/kernel.asm	/^c010d316:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d319	obj/kernel.asm	/^c010d319:	e8 4f fe ff ff       	call   c010d16d <del_timer>$/;"	l
c010d31e	obj/kernel.asm	/^c010d31e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d321	obj/kernel.asm	/^c010d321:	81 7d f4 14 01 15 c0 	cmpl   $0xc0150114,-0xc(%ebp)$/;"	l
c010d328	obj/kernel.asm	/^c010d328:	75 02                	jne    c010d32c <run_timer_list+0xf8>$/;"	l
c010d32a	obj/kernel.asm	/^c010d32a:	eb 16                	jmp    c010d342 <run_timer_list+0x10e>$/;"	l
c010d32c	obj/kernel.asm	/^c010d32c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d32f	obj/kernel.asm	/^c010d32f:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010d332	obj/kernel.asm	/^c010d332:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d335	obj/kernel.asm	/^c010d335:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d338	obj/kernel.asm	/^c010d338:	8b 00                	mov    (%eax),%eax$/;"	l
c010d33a	obj/kernel.asm	/^c010d33a:	85 c0                	test   %eax,%eax$/;"	l
c010d33c	obj/kernel.asm	/^c010d33c:	0f 84 5a ff ff ff    	je     c010d29c <run_timer_list+0x68>$/;"	l
c010d342	obj/kernel.asm	/^c010d342:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010d347	obj/kernel.asm	/^c010d347:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d34a	obj/kernel.asm	/^c010d34a:	50                   	push   %eax$/;"	l
c010d34b	obj/kernel.asm	/^c010d34b:	e8 27 fb ff ff       	call   c010ce77 <sched_class_proc_tick>$/;"	l
c010d350	obj/kernel.asm	/^c010d350:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d353	obj/kernel.asm	/^c010d353:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d356	obj/kernel.asm	/^c010d356:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010d359	obj/kernel.asm	/^c010d359:	e8 99 fa ff ff       	call   c010cdf7 <__intr_restore>$/;"	l
c010d35e	obj/kernel.asm	/^c010d35e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d361	obj/kernel.asm	/^c010d361:	c9                   	leave  $/;"	l
c010d362	obj/kernel.asm	/^c010d362:	c3                   	ret    $/;"	l
c010d363	obj/kernel.asm	/^c010d363 <skew_heap_merge>:$/;"	l
c010d363	obj/kernel.asm	/^c010d363:	55                   	push   %ebp$/;"	l
c010d364	obj/kernel.asm	/^c010d364:	89 e5                	mov    %esp,%ebp$/;"	l
c010d366	obj/kernel.asm	/^c010d366:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d369	obj/kernel.asm	/^c010d369:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010d36d	obj/kernel.asm	/^c010d36d:	75 08                	jne    c010d377 <skew_heap_merge+0x14>$/;"	l
c010d36f	obj/kernel.asm	/^c010d36f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d372	obj/kernel.asm	/^c010d372:	e9 b4 00 00 00       	jmp    c010d42b <skew_heap_merge+0xc8>$/;"	l
c010d377	obj/kernel.asm	/^c010d377:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010d37b	obj/kernel.asm	/^c010d37b:	75 08                	jne    c010d385 <skew_heap_merge+0x22>$/;"	l
c010d37d	obj/kernel.asm	/^c010d37d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d380	obj/kernel.asm	/^c010d380:	e9 a6 00 00 00       	jmp    c010d42b <skew_heap_merge+0xc8>$/;"	l
c010d385	obj/kernel.asm	/^c010d385:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d388	obj/kernel.asm	/^c010d388:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010d38b	obj/kernel.asm	/^c010d38b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010d38e	obj/kernel.asm	/^c010d38e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010d391	obj/kernel.asm	/^c010d391:	ff d0                	call   *%eax$/;"	l
c010d393	obj/kernel.asm	/^c010d393:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d396	obj/kernel.asm	/^c010d396:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
c010d399	obj/kernel.asm	/^c010d399:	75 49                	jne    c010d3e4 <skew_heap_merge+0x81>$/;"	l
c010d39b	obj/kernel.asm	/^c010d39b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d39e	obj/kernel.asm	/^c010d39e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d3a1	obj/kernel.asm	/^c010d3a1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d3a4	obj/kernel.asm	/^c010d3a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d3a7	obj/kernel.asm	/^c010d3a7:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010d3aa	obj/kernel.asm	/^c010d3aa:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010d3ad	obj/kernel.asm	/^c010d3ad:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010d3b0	obj/kernel.asm	/^c010d3b0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010d3b3	obj/kernel.asm	/^c010d3b3:	50                   	push   %eax$/;"	l
c010d3b4	obj/kernel.asm	/^c010d3b4:	e8 aa ff ff ff       	call   c010d363 <skew_heap_merge>$/;"	l
c010d3b9	obj/kernel.asm	/^c010d3b9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d3bc	obj/kernel.asm	/^c010d3bc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d3bf	obj/kernel.asm	/^c010d3bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d3c2	obj/kernel.asm	/^c010d3c2:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010d3c5	obj/kernel.asm	/^c010d3c5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d3c8	obj/kernel.asm	/^c010d3c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d3cb	obj/kernel.asm	/^c010d3cb:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010d3ce	obj/kernel.asm	/^c010d3ce:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010d3d1	obj/kernel.asm	/^c010d3d1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010d3d5	obj/kernel.asm	/^c010d3d5:	74 08                	je     c010d3df <skew_heap_merge+0x7c>$/;"	l
c010d3d7	obj/kernel.asm	/^c010d3d7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d3da	obj/kernel.asm	/^c010d3da:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010d3dd	obj/kernel.asm	/^c010d3dd:	89 10                	mov    %edx,(%eax)$/;"	l
c010d3df	obj/kernel.asm	/^c010d3df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d3e2	obj/kernel.asm	/^c010d3e2:	eb 47                	jmp    c010d42b <skew_heap_merge+0xc8>$/;"	l
c010d3e4	obj/kernel.asm	/^c010d3e4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d3e7	obj/kernel.asm	/^c010d3e7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d3ea	obj/kernel.asm	/^c010d3ea:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d3ed	obj/kernel.asm	/^c010d3ed:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d3f0	obj/kernel.asm	/^c010d3f0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010d3f3	obj/kernel.asm	/^c010d3f3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010d3f6	obj/kernel.asm	/^c010d3f6:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010d3f9	obj/kernel.asm	/^c010d3f9:	50                   	push   %eax$/;"	l
c010d3fa	obj/kernel.asm	/^c010d3fa:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010d3fd	obj/kernel.asm	/^c010d3fd:	e8 61 ff ff ff       	call   c010d363 <skew_heap_merge>$/;"	l
c010d402	obj/kernel.asm	/^c010d402:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d405	obj/kernel.asm	/^c010d405:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d408	obj/kernel.asm	/^c010d408:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d40b	obj/kernel.asm	/^c010d40b:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010d40e	obj/kernel.asm	/^c010d40e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d411	obj/kernel.asm	/^c010d411:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d414	obj/kernel.asm	/^c010d414:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010d417	obj/kernel.asm	/^c010d417:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010d41a	obj/kernel.asm	/^c010d41a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010d41e	obj/kernel.asm	/^c010d41e:	74 08                	je     c010d428 <skew_heap_merge+0xc5>$/;"	l
c010d420	obj/kernel.asm	/^c010d420:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d423	obj/kernel.asm	/^c010d423:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010d426	obj/kernel.asm	/^c010d426:	89 10                	mov    %edx,(%eax)$/;"	l
c010d428	obj/kernel.asm	/^c010d428:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d42b	obj/kernel.asm	/^c010d42b:	c9                   	leave  $/;"	l
c010d42c	obj/kernel.asm	/^c010d42c:	c3                   	ret    $/;"	l
c010d42d	obj/kernel.asm	/^c010d42d <proc_stride_comp_f>:$/;"	l
c010d42d	obj/kernel.asm	/^c010d42d:	55                   	push   %ebp$/;"	l
c010d42e	obj/kernel.asm	/^c010d42e:	89 e5                	mov    %esp,%ebp$/;"	l
c010d430	obj/kernel.asm	/^c010d430:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010d433	obj/kernel.asm	/^c010d433:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d436	obj/kernel.asm	/^c010d436:	2d b0 00 00 00       	sub    $0xb0,%eax$/;"	l
c010d43b	obj/kernel.asm	/^c010d43b:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010d43e	obj/kernel.asm	/^c010d43e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d441	obj/kernel.asm	/^c010d441:	2d b0 00 00 00       	sub    $0xb0,%eax$/;"	l
c010d446	obj/kernel.asm	/^c010d446:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010d449	obj/kernel.asm	/^c010d449:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010d44c	obj/kernel.asm	/^c010d44c:	8b 90 bc 00 00 00    	mov    0xbc(%eax),%edx$/;"	l
c010d452	obj/kernel.asm	/^c010d452:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010d455	obj/kernel.asm	/^c010d455:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax$/;"	l
c010d45b	obj/kernel.asm	/^c010d45b:	29 c2                	sub    %eax,%edx$/;"	l
c010d45d	obj/kernel.asm	/^c010d45d:	89 d0                	mov    %edx,%eax$/;"	l
c010d45f	obj/kernel.asm	/^c010d45f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d462	obj/kernel.asm	/^c010d462:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d466	obj/kernel.asm	/^c010d466:	7e 07                	jle    c010d46f <proc_stride_comp_f+0x42>$/;"	l
c010d468	obj/kernel.asm	/^c010d468:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010d46d	obj/kernel.asm	/^c010d46d:	eb 12                	jmp    c010d481 <proc_stride_comp_f+0x54>$/;"	l
c010d46f	obj/kernel.asm	/^c010d46f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d473	obj/kernel.asm	/^c010d473:	75 07                	jne    c010d47c <proc_stride_comp_f+0x4f>$/;"	l
c010d475	obj/kernel.asm	/^c010d475:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d47a	obj/kernel.asm	/^c010d47a:	eb 05                	jmp    c010d481 <proc_stride_comp_f+0x54>$/;"	l
c010d47c	obj/kernel.asm	/^c010d47c:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010d481	obj/kernel.asm	/^c010d481:	c9                   	leave  $/;"	l
c010d482	obj/kernel.asm	/^c010d482:	c3                   	ret    $/;"	l
c010d483	obj/kernel.asm	/^c010d483 <stride_init>:$/;"	l
c010d483	obj/kernel.asm	/^c010d483:	55                   	push   %ebp$/;"	l
c010d484	obj/kernel.asm	/^c010d484:	89 e5                	mov    %esp,%ebp$/;"	l
c010d486	obj/kernel.asm	/^c010d486:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010d489	obj/kernel.asm	/^c010d489:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d48c	obj/kernel.asm	/^c010d48c:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010d48f	obj/kernel.asm	/^c010d48f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010d492	obj/kernel.asm	/^c010d492:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010d495	obj/kernel.asm	/^c010d495:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d498	obj/kernel.asm	/^c010d498:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010d49b	obj/kernel.asm	/^c010d49b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010d49e	obj/kernel.asm	/^c010d49e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010d4a1	obj/kernel.asm	/^c010d4a1:	89 10                	mov    %edx,(%eax)$/;"	l
c010d4a3	obj/kernel.asm	/^c010d4a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d4a6	obj/kernel.asm	/^c010d4a6:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010d4ad	obj/kernel.asm	/^c010d4ad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d4b0	obj/kernel.asm	/^c010d4b0:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010d4b7	obj/kernel.asm	/^c010d4b7:	c9                   	leave  $/;"	l
c010d4b8	obj/kernel.asm	/^c010d4b8:	c3                   	ret    $/;"	l
c010d4b9	obj/kernel.asm	/^c010d4b9 <stride_enqueue>:$/;"	l
c010d4b9	obj/kernel.asm	/^c010d4b9:	55                   	push   %ebp$/;"	l
c010d4ba	obj/kernel.asm	/^c010d4ba:	89 e5                	mov    %esp,%ebp$/;"	l
c010d4bc	obj/kernel.asm	/^c010d4bc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d4bf	obj/kernel.asm	/^c010d4bf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d4c2	obj/kernel.asm	/^c010d4c2:	8d 90 b0 00 00 00    	lea    0xb0(%eax),%edx$/;"	l
c010d4c8	obj/kernel.asm	/^c010d4c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d4cb	obj/kernel.asm	/^c010d4cb:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010d4ce	obj/kernel.asm	/^c010d4ce:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d4d1	obj/kernel.asm	/^c010d4d1:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c010d4d4	obj/kernel.asm	/^c010d4d4:	c7 45 ec 2d d4 10 c0 	movl   $0xc010d42d,-0x14(%ebp)$/;"	l
c010d4db	obj/kernel.asm	/^c010d4db:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d4de	obj/kernel.asm	/^c010d4de:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010d4e1	obj/kernel.asm	/^c010d4e1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d4e4	obj/kernel.asm	/^c010d4e4:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010d4ea	obj/kernel.asm	/^c010d4ea:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d4ed	obj/kernel.asm	/^c010d4ed:	8b 10                	mov    (%eax),%edx$/;"	l
c010d4ef	obj/kernel.asm	/^c010d4ef:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d4f2	obj/kernel.asm	/^c010d4f2:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010d4f5	obj/kernel.asm	/^c010d4f5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d4f8	obj/kernel.asm	/^c010d4f8:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010d4fb	obj/kernel.asm	/^c010d4fb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d4fe	obj/kernel.asm	/^c010d4fe:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d501	obj/kernel.asm	/^c010d501:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010d504	obj/kernel.asm	/^c010d504:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010d507	obj/kernel.asm	/^c010d507:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d50a	obj/kernel.asm	/^c010d50a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d50d	obj/kernel.asm	/^c010d50d:	e8 51 fe ff ff       	call   c010d363 <skew_heap_merge>$/;"	l
c010d512	obj/kernel.asm	/^c010d512:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d515	obj/kernel.asm	/^c010d515:	89 c2                	mov    %eax,%edx$/;"	l
c010d517	obj/kernel.asm	/^c010d517:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d51a	obj/kernel.asm	/^c010d51a:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010d51d	obj/kernel.asm	/^c010d51d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d520	obj/kernel.asm	/^c010d520:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010d526	obj/kernel.asm	/^c010d526:	85 c0                	test   %eax,%eax$/;"	l
c010d528	obj/kernel.asm	/^c010d528:	74 13                	je     c010d53d <stride_enqueue+0x84>$/;"	l
c010d52a	obj/kernel.asm	/^c010d52a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d52d	obj/kernel.asm	/^c010d52d:	8b 90 ac 00 00 00    	mov    0xac(%eax),%edx$/;"	l
c010d533	obj/kernel.asm	/^c010d533:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d536	obj/kernel.asm	/^c010d536:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d539	obj/kernel.asm	/^c010d539:	39 c2                	cmp    %eax,%edx$/;"	l
c010d53b	obj/kernel.asm	/^c010d53b:	7e 0f                	jle    c010d54c <stride_enqueue+0x93>$/;"	l
c010d53d	obj/kernel.asm	/^c010d53d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d540	obj/kernel.asm	/^c010d540:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010d543	obj/kernel.asm	/^c010d543:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d546	obj/kernel.asm	/^c010d546:	89 90 ac 00 00 00    	mov    %edx,0xac(%eax)$/;"	l
c010d54c	obj/kernel.asm	/^c010d54c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d54f	obj/kernel.asm	/^c010d54f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010d552	obj/kernel.asm	/^c010d552:	89 90 a0 00 00 00    	mov    %edx,0xa0(%eax)$/;"	l
c010d558	obj/kernel.asm	/^c010d558:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d55b	obj/kernel.asm	/^c010d55b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010d55e	obj/kernel.asm	/^c010d55e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010d561	obj/kernel.asm	/^c010d561:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d564	obj/kernel.asm	/^c010d564:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010d567	obj/kernel.asm	/^c010d567:	c9                   	leave  $/;"	l
c010d568	obj/kernel.asm	/^c010d568:	c3                   	ret    $/;"	l
c010d569	obj/kernel.asm	/^c010d569 <stride_dequeue>:$/;"	l
c010d569	obj/kernel.asm	/^c010d569:	55                   	push   %ebp$/;"	l
c010d56a	obj/kernel.asm	/^c010d56a:	89 e5                	mov    %esp,%ebp$/;"	l
c010d56c	obj/kernel.asm	/^c010d56c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010d56f	obj/kernel.asm	/^c010d56f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d572	obj/kernel.asm	/^c010d572:	8d 90 b0 00 00 00    	lea    0xb0(%eax),%edx$/;"	l
c010d578	obj/kernel.asm	/^c010d578:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d57b	obj/kernel.asm	/^c010d57b:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010d57e	obj/kernel.asm	/^c010d57e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d581	obj/kernel.asm	/^c010d581:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c010d584	obj/kernel.asm	/^c010d584:	c7 45 ec 2d d4 10 c0 	movl   $0xc010d42d,-0x14(%ebp)$/;"	l
c010d58b	obj/kernel.asm	/^c010d58b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d58e	obj/kernel.asm	/^c010d58e:	8b 00                	mov    (%eax),%eax$/;"	l
c010d590	obj/kernel.asm	/^c010d590:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010d593	obj/kernel.asm	/^c010d593:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d596	obj/kernel.asm	/^c010d596:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010d599	obj/kernel.asm	/^c010d599:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d59c	obj/kernel.asm	/^c010d59c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d59f	obj/kernel.asm	/^c010d59f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010d5a2	obj/kernel.asm	/^c010d5a2:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010d5a5	obj/kernel.asm	/^c010d5a5:	52                   	push   %edx$/;"	l
c010d5a6	obj/kernel.asm	/^c010d5a6:	50                   	push   %eax$/;"	l
c010d5a7	obj/kernel.asm	/^c010d5a7:	e8 b7 fd ff ff       	call   c010d363 <skew_heap_merge>$/;"	l
c010d5ac	obj/kernel.asm	/^c010d5ac:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d5af	obj/kernel.asm	/^c010d5af:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010d5b2	obj/kernel.asm	/^c010d5b2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010d5b6	obj/kernel.asm	/^c010d5b6:	74 08                	je     c010d5c0 <stride_dequeue+0x57>$/;"	l
c010d5b8	obj/kernel.asm	/^c010d5b8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010d5bb	obj/kernel.asm	/^c010d5bb:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010d5be	obj/kernel.asm	/^c010d5be:	89 10                	mov    %edx,(%eax)$/;"	l
c010d5c0	obj/kernel.asm	/^c010d5c0:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010d5c4	obj/kernel.asm	/^c010d5c4:	74 24                	je     c010d5ea <stride_dequeue+0x81>$/;"	l
c010d5c6	obj/kernel.asm	/^c010d5c6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d5c9	obj/kernel.asm	/^c010d5c9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d5cc	obj/kernel.asm	/^c010d5cc:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010d5cf	obj/kernel.asm	/^c010d5cf:	75 0b                	jne    c010d5dc <stride_dequeue+0x73>$/;"	l
c010d5d1	obj/kernel.asm	/^c010d5d1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d5d4	obj/kernel.asm	/^c010d5d4:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010d5d7	obj/kernel.asm	/^c010d5d7:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d5da	obj/kernel.asm	/^c010d5da:	eb 09                	jmp    c010d5e5 <stride_dequeue+0x7c>$/;"	l
c010d5dc	obj/kernel.asm	/^c010d5dc:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d5df	obj/kernel.asm	/^c010d5df:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010d5e2	obj/kernel.asm	/^c010d5e2:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010d5e5	obj/kernel.asm	/^c010d5e5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d5e8	obj/kernel.asm	/^c010d5e8:	eb 03                	jmp    c010d5ed <stride_dequeue+0x84>$/;"	l
c010d5ea	obj/kernel.asm	/^c010d5ea:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010d5ed	obj/kernel.asm	/^c010d5ed:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010d5f0	obj/kernel.asm	/^c010d5f0:	89 42 10             	mov    %eax,0x10(%edx)$/;"	l
c010d5f3	obj/kernel.asm	/^c010d5f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d5f6	obj/kernel.asm	/^c010d5f6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010d5f9	obj/kernel.asm	/^c010d5f9:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010d5fc	obj/kernel.asm	/^c010d5fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d5ff	obj/kernel.asm	/^c010d5ff:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010d602	obj/kernel.asm	/^c010d602:	c9                   	leave  $/;"	l
c010d603	obj/kernel.asm	/^c010d603:	c3                   	ret    $/;"	l
c010d604	obj/kernel.asm	/^c010d604 <stride_pick_next>:$/;"	l
c010d604	obj/kernel.asm	/^c010d604:	55                   	push   %ebp$/;"	l
c010d605	obj/kernel.asm	/^c010d605:	89 e5                	mov    %esp,%ebp$/;"	l
c010d607	obj/kernel.asm	/^c010d607:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010d60a	obj/kernel.asm	/^c010d60a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d60d	obj/kernel.asm	/^c010d60d:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010d610	obj/kernel.asm	/^c010d610:	85 c0                	test   %eax,%eax$/;"	l
c010d612	obj/kernel.asm	/^c010d612:	75 07                	jne    c010d61b <stride_pick_next+0x17>$/;"	l
c010d614	obj/kernel.asm	/^c010d614:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d619	obj/kernel.asm	/^c010d619:	eb 4f                	jmp    c010d66a <stride_pick_next+0x66>$/;"	l
c010d61b	obj/kernel.asm	/^c010d61b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d61e	obj/kernel.asm	/^c010d61e:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010d621	obj/kernel.asm	/^c010d621:	2d b0 00 00 00       	sub    $0xb0,%eax$/;"	l
c010d626	obj/kernel.asm	/^c010d626:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010d629	obj/kernel.asm	/^c010d629:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010d62c	obj/kernel.asm	/^c010d62c:	8b 80 c0 00 00 00    	mov    0xc0(%eax),%eax$/;"	l
c010d632	obj/kernel.asm	/^c010d632:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010d635	obj/kernel.asm	/^c010d635:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010d638	obj/kernel.asm	/^c010d638:	8b 80 c0 00 00 00    	mov    0xc0(%eax),%eax$/;"	l
c010d63e	obj/kernel.asm	/^c010d63e:	85 c0                	test   %eax,%eax$/;"	l
c010d640	obj/kernel.asm	/^c010d640:	75 07                	jne    c010d649 <stride_pick_next+0x45>$/;"	l
c010d642	obj/kernel.asm	/^c010d642:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)$/;"	l
c010d649	obj/kernel.asm	/^c010d649:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010d64c	obj/kernel.asm	/^c010d64c:	8b 88 bc 00 00 00    	mov    0xbc(%eax),%ecx$/;"	l
c010d652	obj/kernel.asm	/^c010d652:	b8 00 00 10 00       	mov    $0x100000,%eax$/;"	l
c010d657	obj/kernel.asm	/^c010d657:	99                   	cltd   $/;"	l
c010d658	obj/kernel.asm	/^c010d658:	f7 7d fc             	idivl  -0x4(%ebp)$/;"	l
c010d65b	obj/kernel.asm	/^c010d65b:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
c010d65e	obj/kernel.asm	/^c010d65e:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010d661	obj/kernel.asm	/^c010d661:	89 90 bc 00 00 00    	mov    %edx,0xbc(%eax)$/;"	l
c010d667	obj/kernel.asm	/^c010d667:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010d66a	obj/kernel.asm	/^c010d66a:	c9                   	leave  $/;"	l
c010d66b	obj/kernel.asm	/^c010d66b:	c3                   	ret    $/;"	l
c010d66c	obj/kernel.asm	/^c010d66c <stride_proc_tick>:$/;"	l
c010d66c	obj/kernel.asm	/^c010d66c:	55                   	push   %ebp$/;"	l
c010d66d	obj/kernel.asm	/^c010d66d:	89 e5                	mov    %esp,%ebp$/;"	l
c010d66f	obj/kernel.asm	/^c010d66f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d672	obj/kernel.asm	/^c010d672:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010d678	obj/kernel.asm	/^c010d678:	85 c0                	test   %eax,%eax$/;"	l
c010d67a	obj/kernel.asm	/^c010d67a:	7e 17                	jle    c010d693 <stride_proc_tick+0x27>$/;"	l
c010d67c	obj/kernel.asm	/^c010d67c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d67f	obj/kernel.asm	/^c010d67f:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010d685	obj/kernel.asm	/^c010d685:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010d688	obj/kernel.asm	/^c010d688:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d68b	obj/kernel.asm	/^c010d68b:	89 90 ac 00 00 00    	mov    %edx,0xac(%eax)$/;"	l
c010d691	obj/kernel.asm	/^c010d691:	eb 17                	jmp    c010d6aa <stride_proc_tick+0x3e>$/;"	l
c010d693	obj/kernel.asm	/^c010d693:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d696	obj/kernel.asm	/^c010d696:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010d69c	obj/kernel.asm	/^c010d69c:	85 c0                	test   %eax,%eax$/;"	l
c010d69e	obj/kernel.asm	/^c010d69e:	75 0a                	jne    c010d6aa <stride_proc_tick+0x3e>$/;"	l
c010d6a0	obj/kernel.asm	/^c010d6a0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d6a3	obj/kernel.asm	/^c010d6a3:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010d6aa	obj/kernel.asm	/^c010d6aa:	5d                   	pop    %ebp$/;"	l
c010d6ab	obj/kernel.asm	/^c010d6ab:	c3                   	ret    $/;"	l
c010d6ac	obj/kernel.asm	/^c010d6ac <sys_exit>:$/;"	l
c010d6ac	obj/kernel.asm	/^c010d6ac:	55                   	push   %ebp$/;"	l
c010d6ad	obj/kernel.asm	/^c010d6ad:	89 e5                	mov    %esp,%ebp$/;"	l
c010d6af	obj/kernel.asm	/^c010d6af:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d6b2	obj/kernel.asm	/^c010d6b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d6b5	obj/kernel.asm	/^c010d6b5:	8b 00                	mov    (%eax),%eax$/;"	l
c010d6b7	obj/kernel.asm	/^c010d6b7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d6ba	obj/kernel.asm	/^c010d6ba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d6bd	obj/kernel.asm	/^c010d6bd:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d6c0	obj/kernel.asm	/^c010d6c0:	e8 76 ea ff ff       	call   c010c13b <do_exit>$/;"	l
c010d6c5	obj/kernel.asm	/^c010d6c5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d6c8	obj/kernel.asm	/^c010d6c8:	c9                   	leave  $/;"	l
c010d6c9	obj/kernel.asm	/^c010d6c9:	c3                   	ret    $/;"	l
c010d6ca	obj/kernel.asm	/^c010d6ca <sys_fork>:$/;"	l
c010d6ca	obj/kernel.asm	/^c010d6ca:	55                   	push   %ebp$/;"	l
c010d6cb	obj/kernel.asm	/^c010d6cb:	89 e5                	mov    %esp,%ebp$/;"	l
c010d6cd	obj/kernel.asm	/^c010d6cd:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d6d0	obj/kernel.asm	/^c010d6d0:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010d6d5	obj/kernel.asm	/^c010d6d5:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010d6d8	obj/kernel.asm	/^c010d6d8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d6db	obj/kernel.asm	/^c010d6db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d6de	obj/kernel.asm	/^c010d6de:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010d6e1	obj/kernel.asm	/^c010d6e1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d6e4	obj/kernel.asm	/^c010d6e4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010d6e7	obj/kernel.asm	/^c010d6e7:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d6ea	obj/kernel.asm	/^c010d6ea:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d6ed	obj/kernel.asm	/^c010d6ed:	6a 00                	push   $0x0$/;"	l
c010d6ef	obj/kernel.asm	/^c010d6ef:	e8 1f e9 ff ff       	call   c010c013 <do_fork>$/;"	l
c010d6f4	obj/kernel.asm	/^c010d6f4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d6f7	obj/kernel.asm	/^c010d6f7:	c9                   	leave  $/;"	l
c010d6f8	obj/kernel.asm	/^c010d6f8:	c3                   	ret    $/;"	l
c010d6f9	obj/kernel.asm	/^c010d6f9 <sys_wait>:$/;"	l
c010d6f9	obj/kernel.asm	/^c010d6f9:	55                   	push   %ebp$/;"	l
c010d6fa	obj/kernel.asm	/^c010d6fa:	89 e5                	mov    %esp,%ebp$/;"	l
c010d6fc	obj/kernel.asm	/^c010d6fc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d6ff	obj/kernel.asm	/^c010d6ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d702	obj/kernel.asm	/^c010d702:	8b 00                	mov    (%eax),%eax$/;"	l
c010d704	obj/kernel.asm	/^c010d704:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d707	obj/kernel.asm	/^c010d707:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d70a	obj/kernel.asm	/^c010d70a:	83 c0 04             	add    $0x4,%eax$/;"	l
c010d70d	obj/kernel.asm	/^c010d70d:	8b 00                	mov    (%eax),%eax$/;"	l
c010d70f	obj/kernel.asm	/^c010d70f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d712	obj/kernel.asm	/^c010d712:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d715	obj/kernel.asm	/^c010d715:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d718	obj/kernel.asm	/^c010d718:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d71b	obj/kernel.asm	/^c010d71b:	e8 c0 ef ff ff       	call   c010c6e0 <do_wait>$/;"	l
c010d720	obj/kernel.asm	/^c010d720:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d723	obj/kernel.asm	/^c010d723:	c9                   	leave  $/;"	l
c010d724	obj/kernel.asm	/^c010d724:	c3                   	ret    $/;"	l
c010d725	obj/kernel.asm	/^c010d725 <sys_exec>:$/;"	l
c010d725	obj/kernel.asm	/^c010d725:	55                   	push   %ebp$/;"	l
c010d726	obj/kernel.asm	/^c010d726:	89 e5                	mov    %esp,%ebp$/;"	l
c010d728	obj/kernel.asm	/^c010d728:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d72b	obj/kernel.asm	/^c010d72b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d72e	obj/kernel.asm	/^c010d72e:	8b 00                	mov    (%eax),%eax$/;"	l
c010d730	obj/kernel.asm	/^c010d730:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d733	obj/kernel.asm	/^c010d733:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d736	obj/kernel.asm	/^c010d736:	83 c0 04             	add    $0x4,%eax$/;"	l
c010d739	obj/kernel.asm	/^c010d739:	8b 00                	mov    (%eax),%eax$/;"	l
c010d73b	obj/kernel.asm	/^c010d73b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d73e	obj/kernel.asm	/^c010d73e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d741	obj/kernel.asm	/^c010d741:	83 c0 08             	add    $0x8,%eax$/;"	l
c010d744	obj/kernel.asm	/^c010d744:	8b 00                	mov    (%eax),%eax$/;"	l
c010d746	obj/kernel.asm	/^c010d746:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d749	obj/kernel.asm	/^c010d749:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010d74c	obj/kernel.asm	/^c010d74c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010d74f	obj/kernel.asm	/^c010d74f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d752	obj/kernel.asm	/^c010d752:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d755	obj/kernel.asm	/^c010d755:	e8 51 ed ff ff       	call   c010c4ab <do_execve>$/;"	l
c010d75a	obj/kernel.asm	/^c010d75a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d75d	obj/kernel.asm	/^c010d75d:	c9                   	leave  $/;"	l
c010d75e	obj/kernel.asm	/^c010d75e:	c3                   	ret    $/;"	l
c010d75f	obj/kernel.asm	/^c010d75f <sys_yield>:$/;"	l
c010d75f	obj/kernel.asm	/^c010d75f:	55                   	push   %ebp$/;"	l
c010d760	obj/kernel.asm	/^c010d760:	89 e5                	mov    %esp,%ebp$/;"	l
c010d762	obj/kernel.asm	/^c010d762:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d765	obj/kernel.asm	/^c010d765:	e8 60 ef ff ff       	call   c010c6ca <do_yield>$/;"	l
c010d76a	obj/kernel.asm	/^c010d76a:	c9                   	leave  $/;"	l
c010d76b	obj/kernel.asm	/^c010d76b:	c3                   	ret    $/;"	l
c010d76c	obj/kernel.asm	/^c010d76c <sys_kill>:$/;"	l
c010d76c	obj/kernel.asm	/^c010d76c:	55                   	push   %ebp$/;"	l
c010d76d	obj/kernel.asm	/^c010d76d:	89 e5                	mov    %esp,%ebp$/;"	l
c010d76f	obj/kernel.asm	/^c010d76f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d772	obj/kernel.asm	/^c010d772:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d775	obj/kernel.asm	/^c010d775:	8b 00                	mov    (%eax),%eax$/;"	l
c010d777	obj/kernel.asm	/^c010d777:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d77a	obj/kernel.asm	/^c010d77a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d77d	obj/kernel.asm	/^c010d77d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d780	obj/kernel.asm	/^c010d780:	e8 f5 f0 ff ff       	call   c010c87a <do_kill>$/;"	l
c010d785	obj/kernel.asm	/^c010d785:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d788	obj/kernel.asm	/^c010d788:	c9                   	leave  $/;"	l
c010d789	obj/kernel.asm	/^c010d789:	c3                   	ret    $/;"	l
c010d78a	obj/kernel.asm	/^c010d78a <sys_getpid>:$/;"	l
c010d78a	obj/kernel.asm	/^c010d78a:	55                   	push   %ebp$/;"	l
c010d78b	obj/kernel.asm	/^c010d78b:	89 e5                	mov    %esp,%ebp$/;"	l
c010d78d	obj/kernel.asm	/^c010d78d:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010d792	obj/kernel.asm	/^c010d792:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d795	obj/kernel.asm	/^c010d795:	5d                   	pop    %ebp$/;"	l
c010d796	obj/kernel.asm	/^c010d796:	c3                   	ret    $/;"	l
c010d797	obj/kernel.asm	/^c010d797 <sys_putc>:$/;"	l
c010d797	obj/kernel.asm	/^c010d797:	55                   	push   %ebp$/;"	l
c010d798	obj/kernel.asm	/^c010d798:	89 e5                	mov    %esp,%ebp$/;"	l
c010d79a	obj/kernel.asm	/^c010d79a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d79d	obj/kernel.asm	/^c010d79d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d7a0	obj/kernel.asm	/^c010d7a0:	8b 00                	mov    (%eax),%eax$/;"	l
c010d7a2	obj/kernel.asm	/^c010d7a2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d7a5	obj/kernel.asm	/^c010d7a5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d7a8	obj/kernel.asm	/^c010d7a8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d7ab	obj/kernel.asm	/^c010d7ab:	e8 e0 2b ff ff       	call   c0100390 <cputchar>$/;"	l
c010d7b0	obj/kernel.asm	/^c010d7b0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d7b3	obj/kernel.asm	/^c010d7b3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d7b8	obj/kernel.asm	/^c010d7b8:	c9                   	leave  $/;"	l
c010d7b9	obj/kernel.asm	/^c010d7b9:	c3                   	ret    $/;"	l
c010d7ba	obj/kernel.asm	/^c010d7ba <sys_pgdir>:$/;"	l
c010d7ba	obj/kernel.asm	/^c010d7ba:	55                   	push   %ebp$/;"	l
c010d7bb	obj/kernel.asm	/^c010d7bb:	89 e5                	mov    %esp,%ebp$/;"	l
c010d7bd	obj/kernel.asm	/^c010d7bd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d7c0	obj/kernel.asm	/^c010d7c0:	e8 29 79 ff ff       	call   c01050ee <print_pgdir>$/;"	l
c010d7c5	obj/kernel.asm	/^c010d7c5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d7ca	obj/kernel.asm	/^c010d7ca:	c9                   	leave  $/;"	l
c010d7cb	obj/kernel.asm	/^c010d7cb:	c3                   	ret    $/;"	l
c010d7cc	obj/kernel.asm	/^c010d7cc <sys_gettime>:$/;"	l
c010d7cc	obj/kernel.asm	/^c010d7cc:	55                   	push   %ebp$/;"	l
c010d7cd	obj/kernel.asm	/^c010d7cd:	89 e5                	mov    %esp,%ebp$/;"	l
c010d7cf	obj/kernel.asm	/^c010d7cf:	a1 a0 11 15 c0       	mov    0xc01511a0,%eax$/;"	l
c010d7d4	obj/kernel.asm	/^c010d7d4:	5d                   	pop    %ebp$/;"	l
c010d7d5	obj/kernel.asm	/^c010d7d5:	c3                   	ret    $/;"	l
c010d7d6	obj/kernel.asm	/^c010d7d6 <sys_lab6_set_priority>:$/;"	l
c010d7d6	obj/kernel.asm	/^c010d7d6:	55                   	push   %ebp$/;"	l
c010d7d7	obj/kernel.asm	/^c010d7d7:	89 e5                	mov    %esp,%ebp$/;"	l
c010d7d9	obj/kernel.asm	/^c010d7d9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d7dc	obj/kernel.asm	/^c010d7dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d7df	obj/kernel.asm	/^c010d7df:	8b 00                	mov    (%eax),%eax$/;"	l
c010d7e1	obj/kernel.asm	/^c010d7e1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d7e4	obj/kernel.asm	/^c010d7e4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d7e7	obj/kernel.asm	/^c010d7e7:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d7ea	obj/kernel.asm	/^c010d7ea:	e8 2d f5 ff ff       	call   c010cd1c <lab6_set_priority>$/;"	l
c010d7ef	obj/kernel.asm	/^c010d7ef:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d7f2	obj/kernel.asm	/^c010d7f2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d7f7	obj/kernel.asm	/^c010d7f7:	c9                   	leave  $/;"	l
c010d7f8	obj/kernel.asm	/^c010d7f8:	c3                   	ret    $/;"	l
c010d7f9	obj/kernel.asm	/^c010d7f9 <sys_sleep>:$/;"	l
c010d7f9	obj/kernel.asm	/^c010d7f9:	55                   	push   %ebp$/;"	l
c010d7fa	obj/kernel.asm	/^c010d7fa:	89 e5                	mov    %esp,%ebp$/;"	l
c010d7fc	obj/kernel.asm	/^c010d7fc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d7ff	obj/kernel.asm	/^c010d7ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d802	obj/kernel.asm	/^c010d802:	8b 00                	mov    (%eax),%eax$/;"	l
c010d804	obj/kernel.asm	/^c010d804:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d807	obj/kernel.asm	/^c010d807:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d80a	obj/kernel.asm	/^c010d80a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d80d	obj/kernel.asm	/^c010d80d:	e8 34 f5 ff ff       	call   c010cd46 <do_sleep>$/;"	l
c010d812	obj/kernel.asm	/^c010d812:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d815	obj/kernel.asm	/^c010d815:	c9                   	leave  $/;"	l
c010d816	obj/kernel.asm	/^c010d816:	c3                   	ret    $/;"	l
c010d817	obj/kernel.asm	/^c010d817 <sys_open>:$/;"	l
c010d817	obj/kernel.asm	/^c010d817:	55                   	push   %ebp$/;"	l
c010d818	obj/kernel.asm	/^c010d818:	89 e5                	mov    %esp,%ebp$/;"	l
c010d81a	obj/kernel.asm	/^c010d81a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d81d	obj/kernel.asm	/^c010d81d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d820	obj/kernel.asm	/^c010d820:	8b 00                	mov    (%eax),%eax$/;"	l
c010d822	obj/kernel.asm	/^c010d822:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d825	obj/kernel.asm	/^c010d825:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d828	obj/kernel.asm	/^c010d828:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d82b	obj/kernel.asm	/^c010d82b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d82e	obj/kernel.asm	/^c010d82e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d831	obj/kernel.asm	/^c010d831:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d834	obj/kernel.asm	/^c010d834:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d837	obj/kernel.asm	/^c010d837:	e8 4c c2 ff ff       	call   c0109a88 <sysfile_open>$/;"	l
c010d83c	obj/kernel.asm	/^c010d83c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d83f	obj/kernel.asm	/^c010d83f:	c9                   	leave  $/;"	l
c010d840	obj/kernel.asm	/^c010d840:	c3                   	ret    $/;"	l
c010d841	obj/kernel.asm	/^c010d841 <sys_close>:$/;"	l
c010d841	obj/kernel.asm	/^c010d841:	55                   	push   %ebp$/;"	l
c010d842	obj/kernel.asm	/^c010d842:	89 e5                	mov    %esp,%ebp$/;"	l
c010d844	obj/kernel.asm	/^c010d844:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d847	obj/kernel.asm	/^c010d847:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d84a	obj/kernel.asm	/^c010d84a:	8b 00                	mov    (%eax),%eax$/;"	l
c010d84c	obj/kernel.asm	/^c010d84c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d84f	obj/kernel.asm	/^c010d84f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d852	obj/kernel.asm	/^c010d852:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d855	obj/kernel.asm	/^c010d855:	e8 7d c2 ff ff       	call   c0109ad7 <sysfile_close>$/;"	l
c010d85a	obj/kernel.asm	/^c010d85a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d85d	obj/kernel.asm	/^c010d85d:	c9                   	leave  $/;"	l
c010d85e	obj/kernel.asm	/^c010d85e:	c3                   	ret    $/;"	l
c010d85f	obj/kernel.asm	/^c010d85f <sys_read>:$/;"	l
c010d85f	obj/kernel.asm	/^c010d85f:	55                   	push   %ebp$/;"	l
c010d860	obj/kernel.asm	/^c010d860:	89 e5                	mov    %esp,%ebp$/;"	l
c010d862	obj/kernel.asm	/^c010d862:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d865	obj/kernel.asm	/^c010d865:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d868	obj/kernel.asm	/^c010d868:	8b 00                	mov    (%eax),%eax$/;"	l
c010d86a	obj/kernel.asm	/^c010d86a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d86d	obj/kernel.asm	/^c010d86d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d870	obj/kernel.asm	/^c010d870:	83 c0 04             	add    $0x4,%eax$/;"	l
c010d873	obj/kernel.asm	/^c010d873:	8b 00                	mov    (%eax),%eax$/;"	l
c010d875	obj/kernel.asm	/^c010d875:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d878	obj/kernel.asm	/^c010d878:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d87b	obj/kernel.asm	/^c010d87b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010d87e	obj/kernel.asm	/^c010d87e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d881	obj/kernel.asm	/^c010d881:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010d884	obj/kernel.asm	/^c010d884:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010d887	obj/kernel.asm	/^c010d887:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d88a	obj/kernel.asm	/^c010d88a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d88d	obj/kernel.asm	/^c010d88d:	e8 5b c2 ff ff       	call   c0109aed <sysfile_read>$/;"	l
c010d892	obj/kernel.asm	/^c010d892:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d895	obj/kernel.asm	/^c010d895:	c9                   	leave  $/;"	l
c010d896	obj/kernel.asm	/^c010d896:	c3                   	ret    $/;"	l
c010d897	obj/kernel.asm	/^c010d897 <sys_write>:$/;"	l
c010d897	obj/kernel.asm	/^c010d897:	55                   	push   %ebp$/;"	l
c010d898	obj/kernel.asm	/^c010d898:	89 e5                	mov    %esp,%ebp$/;"	l
c010d89a	obj/kernel.asm	/^c010d89a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d89d	obj/kernel.asm	/^c010d89d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d8a0	obj/kernel.asm	/^c010d8a0:	8b 00                	mov    (%eax),%eax$/;"	l
c010d8a2	obj/kernel.asm	/^c010d8a2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d8a5	obj/kernel.asm	/^c010d8a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d8a8	obj/kernel.asm	/^c010d8a8:	83 c0 04             	add    $0x4,%eax$/;"	l
c010d8ab	obj/kernel.asm	/^c010d8ab:	8b 00                	mov    (%eax),%eax$/;"	l
c010d8ad	obj/kernel.asm	/^c010d8ad:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d8b0	obj/kernel.asm	/^c010d8b0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d8b3	obj/kernel.asm	/^c010d8b3:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010d8b6	obj/kernel.asm	/^c010d8b6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d8b9	obj/kernel.asm	/^c010d8b9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010d8bc	obj/kernel.asm	/^c010d8bc:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010d8bf	obj/kernel.asm	/^c010d8bf:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d8c2	obj/kernel.asm	/^c010d8c2:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d8c5	obj/kernel.asm	/^c010d8c5:	e8 78 c3 ff ff       	call   c0109c42 <sysfile_write>$/;"	l
c010d8ca	obj/kernel.asm	/^c010d8ca:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d8cd	obj/kernel.asm	/^c010d8cd:	c9                   	leave  $/;"	l
c010d8ce	obj/kernel.asm	/^c010d8ce:	c3                   	ret    $/;"	l
c010d8cf	obj/kernel.asm	/^c010d8cf <sys_seek>:$/;"	l
c010d8cf	obj/kernel.asm	/^c010d8cf:	55                   	push   %ebp$/;"	l
c010d8d0	obj/kernel.asm	/^c010d8d0:	89 e5                	mov    %esp,%ebp$/;"	l
c010d8d2	obj/kernel.asm	/^c010d8d2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d8d5	obj/kernel.asm	/^c010d8d5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d8d8	obj/kernel.asm	/^c010d8d8:	8b 00                	mov    (%eax),%eax$/;"	l
c010d8da	obj/kernel.asm	/^c010d8da:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d8dd	obj/kernel.asm	/^c010d8dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d8e0	obj/kernel.asm	/^c010d8e0:	83 c0 04             	add    $0x4,%eax$/;"	l
c010d8e3	obj/kernel.asm	/^c010d8e3:	8b 00                	mov    (%eax),%eax$/;"	l
c010d8e5	obj/kernel.asm	/^c010d8e5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d8e8	obj/kernel.asm	/^c010d8e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d8eb	obj/kernel.asm	/^c010d8eb:	83 c0 08             	add    $0x8,%eax$/;"	l
c010d8ee	obj/kernel.asm	/^c010d8ee:	8b 00                	mov    (%eax),%eax$/;"	l
c010d8f0	obj/kernel.asm	/^c010d8f0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d8f3	obj/kernel.asm	/^c010d8f3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010d8f6	obj/kernel.asm	/^c010d8f6:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010d8f9	obj/kernel.asm	/^c010d8f9:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d8fc	obj/kernel.asm	/^c010d8fc:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d8ff	obj/kernel.asm	/^c010d8ff:	e8 99 c4 ff ff       	call   c0109d9d <sysfile_seek>$/;"	l
c010d904	obj/kernel.asm	/^c010d904:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d907	obj/kernel.asm	/^c010d907:	c9                   	leave  $/;"	l
c010d908	obj/kernel.asm	/^c010d908:	c3                   	ret    $/;"	l
c010d909	obj/kernel.asm	/^c010d909 <sys_fstat>:$/;"	l
c010d909	obj/kernel.asm	/^c010d909:	55                   	push   %ebp$/;"	l
c010d90a	obj/kernel.asm	/^c010d90a:	89 e5                	mov    %esp,%ebp$/;"	l
c010d90c	obj/kernel.asm	/^c010d90c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d90f	obj/kernel.asm	/^c010d90f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d912	obj/kernel.asm	/^c010d912:	8b 00                	mov    (%eax),%eax$/;"	l
c010d914	obj/kernel.asm	/^c010d914:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d917	obj/kernel.asm	/^c010d917:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d91a	obj/kernel.asm	/^c010d91a:	83 c0 04             	add    $0x4,%eax$/;"	l
c010d91d	obj/kernel.asm	/^c010d91d:	8b 00                	mov    (%eax),%eax$/;"	l
c010d91f	obj/kernel.asm	/^c010d91f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d922	obj/kernel.asm	/^c010d922:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d925	obj/kernel.asm	/^c010d925:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d928	obj/kernel.asm	/^c010d928:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d92b	obj/kernel.asm	/^c010d92b:	e8 89 c4 ff ff       	call   c0109db9 <sysfile_fstat>$/;"	l
c010d930	obj/kernel.asm	/^c010d930:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d933	obj/kernel.asm	/^c010d933:	c9                   	leave  $/;"	l
c010d934	obj/kernel.asm	/^c010d934:	c3                   	ret    $/;"	l
c010d935	obj/kernel.asm	/^c010d935 <sys_fsync>:$/;"	l
c010d935	obj/kernel.asm	/^c010d935:	55                   	push   %ebp$/;"	l
c010d936	obj/kernel.asm	/^c010d936:	89 e5                	mov    %esp,%ebp$/;"	l
c010d938	obj/kernel.asm	/^c010d938:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d93b	obj/kernel.asm	/^c010d93b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d93e	obj/kernel.asm	/^c010d93e:	8b 00                	mov    (%eax),%eax$/;"	l
c010d940	obj/kernel.asm	/^c010d940:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d943	obj/kernel.asm	/^c010d943:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d946	obj/kernel.asm	/^c010d946:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d949	obj/kernel.asm	/^c010d949:	e8 e0 c4 ff ff       	call   c0109e2e <sysfile_fsync>$/;"	l
c010d94e	obj/kernel.asm	/^c010d94e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d951	obj/kernel.asm	/^c010d951:	c9                   	leave  $/;"	l
c010d952	obj/kernel.asm	/^c010d952:	c3                   	ret    $/;"	l
c010d953	obj/kernel.asm	/^c010d953 <sys_getcwd>:$/;"	l
c010d953	obj/kernel.asm	/^c010d953:	55                   	push   %ebp$/;"	l
c010d954	obj/kernel.asm	/^c010d954:	89 e5                	mov    %esp,%ebp$/;"	l
c010d956	obj/kernel.asm	/^c010d956:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d959	obj/kernel.asm	/^c010d959:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d95c	obj/kernel.asm	/^c010d95c:	8b 00                	mov    (%eax),%eax$/;"	l
c010d95e	obj/kernel.asm	/^c010d95e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d961	obj/kernel.asm	/^c010d961:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d964	obj/kernel.asm	/^c010d964:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d967	obj/kernel.asm	/^c010d967:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d96a	obj/kernel.asm	/^c010d96a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d96d	obj/kernel.asm	/^c010d96d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d970	obj/kernel.asm	/^c010d970:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d973	obj/kernel.asm	/^c010d973:	e8 80 c6 ff ff       	call   c0109ff8 <sysfile_getcwd>$/;"	l
c010d978	obj/kernel.asm	/^c010d978:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d97b	obj/kernel.asm	/^c010d97b:	c9                   	leave  $/;"	l
c010d97c	obj/kernel.asm	/^c010d97c:	c3                   	ret    $/;"	l
c010d97d	obj/kernel.asm	/^c010d97d <sys_getdirentry>:$/;"	l
c010d97d	obj/kernel.asm	/^c010d97d:	55                   	push   %ebp$/;"	l
c010d97e	obj/kernel.asm	/^c010d97e:	89 e5                	mov    %esp,%ebp$/;"	l
c010d980	obj/kernel.asm	/^c010d980:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d983	obj/kernel.asm	/^c010d983:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d986	obj/kernel.asm	/^c010d986:	8b 00                	mov    (%eax),%eax$/;"	l
c010d988	obj/kernel.asm	/^c010d988:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d98b	obj/kernel.asm	/^c010d98b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d98e	obj/kernel.asm	/^c010d98e:	83 c0 04             	add    $0x4,%eax$/;"	l
c010d991	obj/kernel.asm	/^c010d991:	8b 00                	mov    (%eax),%eax$/;"	l
c010d993	obj/kernel.asm	/^c010d993:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d996	obj/kernel.asm	/^c010d996:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d999	obj/kernel.asm	/^c010d999:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d99c	obj/kernel.asm	/^c010d99c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d99f	obj/kernel.asm	/^c010d99f:	e8 da c6 ff ff       	call   c010a07e <sysfile_getdirentry>$/;"	l
c010d9a4	obj/kernel.asm	/^c010d9a4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d9a7	obj/kernel.asm	/^c010d9a7:	c9                   	leave  $/;"	l
c010d9a8	obj/kernel.asm	/^c010d9a8:	c3                   	ret    $/;"	l
c010d9a9	obj/kernel.asm	/^c010d9a9 <sys_dup>:$/;"	l
c010d9a9	obj/kernel.asm	/^c010d9a9:	55                   	push   %ebp$/;"	l
c010d9aa	obj/kernel.asm	/^c010d9aa:	89 e5                	mov    %esp,%ebp$/;"	l
c010d9ac	obj/kernel.asm	/^c010d9ac:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d9af	obj/kernel.asm	/^c010d9af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d9b2	obj/kernel.asm	/^c010d9b2:	8b 00                	mov    (%eax),%eax$/;"	l
c010d9b4	obj/kernel.asm	/^c010d9b4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d9b7	obj/kernel.asm	/^c010d9b7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d9ba	obj/kernel.asm	/^c010d9ba:	83 c0 04             	add    $0x4,%eax$/;"	l
c010d9bd	obj/kernel.asm	/^c010d9bd:	8b 00                	mov    (%eax),%eax$/;"	l
c010d9bf	obj/kernel.asm	/^c010d9bf:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d9c2	obj/kernel.asm	/^c010d9c2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d9c5	obj/kernel.asm	/^c010d9c5:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d9c8	obj/kernel.asm	/^c010d9c8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d9cb	obj/kernel.asm	/^c010d9cb:	e8 9a c7 ff ff       	call   c010a16a <sysfile_dup>$/;"	l
c010d9d0	obj/kernel.asm	/^c010d9d0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d9d3	obj/kernel.asm	/^c010d9d3:	c9                   	leave  $/;"	l
c010d9d4	obj/kernel.asm	/^c010d9d4:	c3                   	ret    $/;"	l
c010d9d5	obj/kernel.asm	/^c010d9d5 <syscall>:$/;"	l
c010d9d5	obj/kernel.asm	/^c010d9d5:	55                   	push   %ebp$/;"	l
c010d9d6	obj/kernel.asm	/^c010d9d6:	89 e5                	mov    %esp,%ebp$/;"	l
c010d9d8	obj/kernel.asm	/^c010d9d8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010d9db	obj/kernel.asm	/^c010d9db:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010d9e0	obj/kernel.asm	/^c010d9e0:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010d9e3	obj/kernel.asm	/^c010d9e3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d9e6	obj/kernel.asm	/^c010d9e6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d9e9	obj/kernel.asm	/^c010d9e9:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010d9ec	obj/kernel.asm	/^c010d9ec:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d9ef	obj/kernel.asm	/^c010d9ef:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010d9f3	obj/kernel.asm	/^c010d9f3:	78 64                	js     c010da59 <syscall+0x84>$/;"	l
c010d9f5	obj/kernel.asm	/^c010d9f5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d9f8	obj/kernel.asm	/^c010d9f8:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c010d9fd	obj/kernel.asm	/^c010d9fd:	77 5a                	ja     c010da59 <syscall+0x84>$/;"	l
c010d9ff	obj/kernel.asm	/^c010d9ff:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010da02	obj/kernel.asm	/^c010da02:	8b 04 85 40 cb 14 c0 	mov    -0x3feb34c0(,%eax,4),%eax$/;"	l
c010da09	obj/kernel.asm	/^c010da09:	85 c0                	test   %eax,%eax$/;"	l
c010da0b	obj/kernel.asm	/^c010da0b:	74 4c                	je     c010da59 <syscall+0x84>$/;"	l
c010da0d	obj/kernel.asm	/^c010da0d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010da10	obj/kernel.asm	/^c010da10:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010da13	obj/kernel.asm	/^c010da13:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010da16	obj/kernel.asm	/^c010da16:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010da19	obj/kernel.asm	/^c010da19:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010da1c	obj/kernel.asm	/^c010da1c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010da1f	obj/kernel.asm	/^c010da1f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010da22	obj/kernel.asm	/^c010da22:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010da25	obj/kernel.asm	/^c010da25:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010da28	obj/kernel.asm	/^c010da28:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010da2b	obj/kernel.asm	/^c010da2b:	8b 00                	mov    (%eax),%eax$/;"	l
c010da2d	obj/kernel.asm	/^c010da2d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010da30	obj/kernel.asm	/^c010da30:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010da33	obj/kernel.asm	/^c010da33:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010da36	obj/kernel.asm	/^c010da36:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010da39	obj/kernel.asm	/^c010da39:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010da3c	obj/kernel.asm	/^c010da3c:	8b 04 85 40 cb 14 c0 	mov    -0x3feb34c0(,%eax,4),%eax$/;"	l
c010da43	obj/kernel.asm	/^c010da43:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010da46	obj/kernel.asm	/^c010da46:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c010da49	obj/kernel.asm	/^c010da49:	52                   	push   %edx$/;"	l
c010da4a	obj/kernel.asm	/^c010da4a:	ff d0                	call   *%eax$/;"	l
c010da4c	obj/kernel.asm	/^c010da4c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010da4f	obj/kernel.asm	/^c010da4f:	89 c2                	mov    %eax,%edx$/;"	l
c010da51	obj/kernel.asm	/^c010da51:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010da54	obj/kernel.asm	/^c010da54:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010da57	obj/kernel.asm	/^c010da57:	eb 3a                	jmp    c010da93 <syscall+0xbe>$/;"	l
c010da59	obj/kernel.asm	/^c010da59:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010da5c	obj/kernel.asm	/^c010da5c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010da5f	obj/kernel.asm	/^c010da5f:	e8 a8 4a ff ff       	call   c010250c <print_trapframe>$/;"	l
c010da64	obj/kernel.asm	/^c010da64:	83 c4 10             	add    $0x10,%esp$/;"	l
c010da67	obj/kernel.asm	/^c010da67:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010da6c	obj/kernel.asm	/^c010da6c:	8d 50 48             	lea    0x48(%eax),%edx$/;"	l
c010da6f	obj/kernel.asm	/^c010da6f:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010da74	obj/kernel.asm	/^c010da74:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010da77	obj/kernel.asm	/^c010da77:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010da7a	obj/kernel.asm	/^c010da7a:	52                   	push   %edx$/;"	l
c010da7b	obj/kernel.asm	/^c010da7b:	50                   	push   %eax$/;"	l
c010da7c	obj/kernel.asm	/^c010da7c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010da7f	obj/kernel.asm	/^c010da7f:	68 34 66 11 c0       	push   $0xc0116634$/;"	l
c010da84	obj/kernel.asm	/^c010da84:	68 cd 00 00 00       	push   $0xcd$/;"	l
c010da89	obj/kernel.asm	/^c010da89:	68 60 66 11 c0       	push   $0xc0116660$/;"	l
c010da8e	obj/kernel.asm	/^c010da8e:	e8 3c 2a ff ff       	call   c01004cf <__panic>$/;"	l
c010da93	obj/kernel.asm	/^c010da93:	c9                   	leave  $/;"	l
c010da94	obj/kernel.asm	/^c010da94:	c3                   	ret    $/;"	l
c010da95	obj/kernel.asm	/^c010da95 <page2ppn>:$/;"	l
c010da95	obj/kernel.asm	/^c010da95:	55                   	push   %ebp$/;"	l
c010da96	obj/kernel.asm	/^c010da96:	89 e5                	mov    %esp,%ebp$/;"	l
c010da98	obj/kernel.asm	/^c010da98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010da9b	obj/kernel.asm	/^c010da9b:	8b 15 18 12 15 c0    	mov    0xc0151218,%edx$/;"	l
c010daa1	obj/kernel.asm	/^c010daa1:	29 d0                	sub    %edx,%eax$/;"	l
c010daa3	obj/kernel.asm	/^c010daa3:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c010daa6	obj/kernel.asm	/^c010daa6:	5d                   	pop    %ebp$/;"	l
c010daa7	obj/kernel.asm	/^c010daa7:	c3                   	ret    $/;"	l
c010daa8	obj/kernel.asm	/^c010daa8 <page2pa>:$/;"	l
c010daa8	obj/kernel.asm	/^c010daa8:	55                   	push   %ebp$/;"	l
c010daa9	obj/kernel.asm	/^c010daa9:	89 e5                	mov    %esp,%ebp$/;"	l
c010daab	obj/kernel.asm	/^c010daab:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010daae	obj/kernel.asm	/^c010daae:	e8 e2 ff ff ff       	call   c010da95 <page2ppn>$/;"	l
c010dab3	obj/kernel.asm	/^c010dab3:	83 c4 04             	add    $0x4,%esp$/;"	l
c010dab6	obj/kernel.asm	/^c010dab6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010dab9	obj/kernel.asm	/^c010dab9:	c9                   	leave  $/;"	l
c010daba	obj/kernel.asm	/^c010daba:	c3                   	ret    $/;"	l
c010dabb	obj/kernel.asm	/^c010dabb <page2kva>:$/;"	l
c010dabb	obj/kernel.asm	/^c010dabb:	55                   	push   %ebp$/;"	l
c010dabc	obj/kernel.asm	/^c010dabc:	89 e5                	mov    %esp,%ebp$/;"	l
c010dabe	obj/kernel.asm	/^c010dabe:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010dac1	obj/kernel.asm	/^c010dac1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010dac4	obj/kernel.asm	/^c010dac4:	e8 df ff ff ff       	call   c010daa8 <page2pa>$/;"	l
c010dac9	obj/kernel.asm	/^c010dac9:	83 c4 04             	add    $0x4,%esp$/;"	l
c010dacc	obj/kernel.asm	/^c010dacc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dacf	obj/kernel.asm	/^c010dacf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dad2	obj/kernel.asm	/^c010dad2:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010dad5	obj/kernel.asm	/^c010dad5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010dad8	obj/kernel.asm	/^c010dad8:	a1 c0 df 14 c0       	mov    0xc014dfc0,%eax$/;"	l
c010dadd	obj/kernel.asm	/^c010dadd:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010dae0	obj/kernel.asm	/^c010dae0:	72 14                	jb     c010daf6 <page2kva+0x3b>$/;"	l
c010dae2	obj/kernel.asm	/^c010dae2:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010dae5	obj/kernel.asm	/^c010dae5:	68 78 66 11 c0       	push   $0xc0116678$/;"	l
c010daea	obj/kernel.asm	/^c010daea:	6a 65                	push   $0x65$/;"	l
c010daec	obj/kernel.asm	/^c010daec:	68 9b 66 11 c0       	push   $0xc011669b$/;"	l
c010daf1	obj/kernel.asm	/^c010daf1:	e8 d9 29 ff ff       	call   c01004cf <__panic>$/;"	l
c010daf6	obj/kernel.asm	/^c010daf6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010daf9	obj/kernel.asm	/^c010daf9:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c010dafe	obj/kernel.asm	/^c010dafe:	c9                   	leave  $/;"	l
c010daff	obj/kernel.asm	/^c010daff:	c3                   	ret    $/;"	l
c010db00	obj/kernel.asm	/^c010db00 <swapfs_init>:$/;"	l
c010db00	obj/kernel.asm	/^c010db00:	55                   	push   %ebp$/;"	l
c010db01	obj/kernel.asm	/^c010db01:	89 e5                	mov    %esp,%ebp$/;"	l
c010db03	obj/kernel.asm	/^c010db03:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010db06	obj/kernel.asm	/^c010db06:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010db09	obj/kernel.asm	/^c010db09:	6a 01                	push   $0x1$/;"	l
c010db0b	obj/kernel.asm	/^c010db0b:	e8 b8 36 ff ff       	call   c01011c8 <ide_device_valid>$/;"	l
c010db10	obj/kernel.asm	/^c010db10:	83 c4 10             	add    $0x10,%esp$/;"	l
c010db13	obj/kernel.asm	/^c010db13:	85 c0                	test   %eax,%eax$/;"	l
c010db15	obj/kernel.asm	/^c010db15:	75 14                	jne    c010db2b <swapfs_init+0x2b>$/;"	l
c010db17	obj/kernel.asm	/^c010db17:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010db1a	obj/kernel.asm	/^c010db1a:	68 a9 66 11 c0       	push   $0xc01166a9$/;"	l
c010db1f	obj/kernel.asm	/^c010db1f:	6a 0d                	push   $0xd$/;"	l
c010db21	obj/kernel.asm	/^c010db21:	68 c3 66 11 c0       	push   $0xc01166c3$/;"	l
c010db26	obj/kernel.asm	/^c010db26:	e8 a4 29 ff ff       	call   c01004cf <__panic>$/;"	l
c010db2b	obj/kernel.asm	/^c010db2b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010db2e	obj/kernel.asm	/^c010db2e:	6a 01                	push   $0x1$/;"	l
c010db30	obj/kernel.asm	/^c010db30:	e8 d3 36 ff ff       	call   c0101208 <ide_device_size>$/;"	l
c010db35	obj/kernel.asm	/^c010db35:	83 c4 10             	add    $0x10,%esp$/;"	l
c010db38	obj/kernel.asm	/^c010db38:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c010db3b	obj/kernel.asm	/^c010db3b:	a3 bc 12 15 c0       	mov    %eax,0xc01512bc$/;"	l
c010db40	obj/kernel.asm	/^c010db40:	c9                   	leave  $/;"	l
c010db41	obj/kernel.asm	/^c010db41:	c3                   	ret    $/;"	l
c010db42	obj/kernel.asm	/^c010db42 <swapfs_read>:$/;"	l
c010db42	obj/kernel.asm	/^c010db42:	55                   	push   %ebp$/;"	l
c010db43	obj/kernel.asm	/^c010db43:	89 e5                	mov    %esp,%ebp$/;"	l
c010db45	obj/kernel.asm	/^c010db45:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010db48	obj/kernel.asm	/^c010db48:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010db4b	obj/kernel.asm	/^c010db4b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010db4e	obj/kernel.asm	/^c010db4e:	e8 68 ff ff ff       	call   c010dabb <page2kva>$/;"	l
c010db53	obj/kernel.asm	/^c010db53:	83 c4 10             	add    $0x10,%esp$/;"	l
c010db56	obj/kernel.asm	/^c010db56:	89 c2                	mov    %eax,%edx$/;"	l
c010db58	obj/kernel.asm	/^c010db58:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010db5b	obj/kernel.asm	/^c010db5b:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c010db5e	obj/kernel.asm	/^c010db5e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010db61	obj/kernel.asm	/^c010db61:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010db65	obj/kernel.asm	/^c010db65:	74 0a                	je     c010db71 <swapfs_read+0x2f>$/;"	l
c010db67	obj/kernel.asm	/^c010db67:	a1 bc 12 15 c0       	mov    0xc01512bc,%eax$/;"	l
c010db6c	obj/kernel.asm	/^c010db6c:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010db6f	obj/kernel.asm	/^c010db6f:	72 14                	jb     c010db85 <swapfs_read+0x43>$/;"	l
c010db71	obj/kernel.asm	/^c010db71:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010db74	obj/kernel.asm	/^c010db74:	68 d9 66 11 c0       	push   $0xc01166d9$/;"	l
c010db79	obj/kernel.asm	/^c010db79:	6a 14                	push   $0x14$/;"	l
c010db7b	obj/kernel.asm	/^c010db7b:	68 c3 66 11 c0       	push   $0xc01166c3$/;"	l
c010db80	obj/kernel.asm	/^c010db80:	e8 4a 29 ff ff       	call   c01004cf <__panic>$/;"	l
c010db85	obj/kernel.asm	/^c010db85:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010db88	obj/kernel.asm	/^c010db88:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010db8b	obj/kernel.asm	/^c010db8b:	6a 08                	push   $0x8$/;"	l
c010db8d	obj/kernel.asm	/^c010db8d:	52                   	push   %edx$/;"	l
c010db8e	obj/kernel.asm	/^c010db8e:	50                   	push   %eax$/;"	l
c010db8f	obj/kernel.asm	/^c010db8f:	6a 01                	push   $0x1$/;"	l
c010db91	obj/kernel.asm	/^c010db91:	e8 b3 36 ff ff       	call   c0101249 <ide_read_secs>$/;"	l
c010db96	obj/kernel.asm	/^c010db96:	83 c4 10             	add    $0x10,%esp$/;"	l
c010db99	obj/kernel.asm	/^c010db99:	c9                   	leave  $/;"	l
c010db9a	obj/kernel.asm	/^c010db9a:	c3                   	ret    $/;"	l
c010db9b	obj/kernel.asm	/^c010db9b <swapfs_write>:$/;"	l
c010db9b	obj/kernel.asm	/^c010db9b:	55                   	push   %ebp$/;"	l
c010db9c	obj/kernel.asm	/^c010db9c:	89 e5                	mov    %esp,%ebp$/;"	l
c010db9e	obj/kernel.asm	/^c010db9e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010dba1	obj/kernel.asm	/^c010dba1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010dba4	obj/kernel.asm	/^c010dba4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010dba7	obj/kernel.asm	/^c010dba7:	e8 0f ff ff ff       	call   c010dabb <page2kva>$/;"	l
c010dbac	obj/kernel.asm	/^c010dbac:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dbaf	obj/kernel.asm	/^c010dbaf:	89 c2                	mov    %eax,%edx$/;"	l
c010dbb1	obj/kernel.asm	/^c010dbb1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dbb4	obj/kernel.asm	/^c010dbb4:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c010dbb7	obj/kernel.asm	/^c010dbb7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dbba	obj/kernel.asm	/^c010dbba:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010dbbe	obj/kernel.asm	/^c010dbbe:	74 0a                	je     c010dbca <swapfs_write+0x2f>$/;"	l
c010dbc0	obj/kernel.asm	/^c010dbc0:	a1 bc 12 15 c0       	mov    0xc01512bc,%eax$/;"	l
c010dbc5	obj/kernel.asm	/^c010dbc5:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010dbc8	obj/kernel.asm	/^c010dbc8:	72 14                	jb     c010dbde <swapfs_write+0x43>$/;"	l
c010dbca	obj/kernel.asm	/^c010dbca:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010dbcd	obj/kernel.asm	/^c010dbcd:	68 d9 66 11 c0       	push   $0xc01166d9$/;"	l
c010dbd2	obj/kernel.asm	/^c010dbd2:	6a 19                	push   $0x19$/;"	l
c010dbd4	obj/kernel.asm	/^c010dbd4:	68 c3 66 11 c0       	push   $0xc01166c3$/;"	l
c010dbd9	obj/kernel.asm	/^c010dbd9:	e8 f1 28 ff ff       	call   c01004cf <__panic>$/;"	l
c010dbde	obj/kernel.asm	/^c010dbde:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dbe1	obj/kernel.asm	/^c010dbe1:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010dbe4	obj/kernel.asm	/^c010dbe4:	6a 08                	push   $0x8$/;"	l
c010dbe6	obj/kernel.asm	/^c010dbe6:	52                   	push   %edx$/;"	l
c010dbe7	obj/kernel.asm	/^c010dbe7:	50                   	push   %eax$/;"	l
c010dbe8	obj/kernel.asm	/^c010dbe8:	6a 01                	push   $0x1$/;"	l
c010dbea	obj/kernel.asm	/^c010dbea:	e8 83 38 ff ff       	call   c0101472 <ide_write_secs>$/;"	l
c010dbef	obj/kernel.asm	/^c010dbef:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dbf2	obj/kernel.asm	/^c010dbf2:	c9                   	leave  $/;"	l
c010dbf3	obj/kernel.asm	/^c010dbf3:	c3                   	ret    $/;"	l
c010dbf4	obj/kernel.asm	/^c010dbf4 <lock_vdev_list>:$/;"	l
c010dbf4	obj/kernel.asm	/^c010dbf4:	55                   	push   %ebp$/;"	l
c010dbf5	obj/kernel.asm	/^c010dbf5:	89 e5                	mov    %esp,%ebp$/;"	l
c010dbf7	obj/kernel.asm	/^c010dbf7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010dbfa	obj/kernel.asm	/^c010dbfa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010dbfd	obj/kernel.asm	/^c010dbfd:	68 40 01 15 c0       	push   $0xc0150140$/;"	l
c010dc02	obj/kernel.asm	/^c010dc02:	e8 b6 ba ff ff       	call   c01096bd <down>$/;"	l
c010dc07	obj/kernel.asm	/^c010dc07:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dc0a	obj/kernel.asm	/^c010dc0a:	c9                   	leave  $/;"	l
c010dc0b	obj/kernel.asm	/^c010dc0b:	c3                   	ret    $/;"	l
c010dc0c	obj/kernel.asm	/^c010dc0c <unlock_vdev_list>:$/;"	l
c010dc0c	obj/kernel.asm	/^c010dc0c:	55                   	push   %ebp$/;"	l
c010dc0d	obj/kernel.asm	/^c010dc0d:	89 e5                	mov    %esp,%ebp$/;"	l
c010dc0f	obj/kernel.asm	/^c010dc0f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010dc12	obj/kernel.asm	/^c010dc12:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010dc15	obj/kernel.asm	/^c010dc15:	68 40 01 15 c0       	push   $0xc0150140$/;"	l
c010dc1a	obj/kernel.asm	/^c010dc1a:	e8 83 ba ff ff       	call   c01096a2 <up>$/;"	l
c010dc1f	obj/kernel.asm	/^c010dc1f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dc22	obj/kernel.asm	/^c010dc22:	c9                   	leave  $/;"	l
c010dc23	obj/kernel.asm	/^c010dc23:	c3                   	ret    $/;"	l
c010dc24	obj/kernel.asm	/^c010dc24 <vfs_devlist_init>:$/;"	l
c010dc24	obj/kernel.asm	/^c010dc24:	55                   	push   %ebp$/;"	l
c010dc25	obj/kernel.asm	/^c010dc25:	89 e5                	mov    %esp,%ebp$/;"	l
c010dc27	obj/kernel.asm	/^c010dc27:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010dc2a	obj/kernel.asm	/^c010dc2a:	c7 45 f4 38 01 15 c0 	movl   $0xc0150138,-0xc(%ebp)$/;"	l
c010dc31	obj/kernel.asm	/^c010dc31:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dc34	obj/kernel.asm	/^c010dc34:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010dc37	obj/kernel.asm	/^c010dc37:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010dc3a	obj/kernel.asm	/^c010dc3a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dc3d	obj/kernel.asm	/^c010dc3d:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010dc40	obj/kernel.asm	/^c010dc40:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dc43	obj/kernel.asm	/^c010dc43:	89 10                	mov    %edx,(%eax)$/;"	l
c010dc45	obj/kernel.asm	/^c010dc45:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010dc48	obj/kernel.asm	/^c010dc48:	6a 01                	push   $0x1$/;"	l
c010dc4a	obj/kernel.asm	/^c010dc4a:	68 40 01 15 c0       	push   $0xc0150140$/;"	l
c010dc4f	obj/kernel.asm	/^c010dc4f:	e8 e3 b8 ff ff       	call   c0109537 <sem_init>$/;"	l
c010dc54	obj/kernel.asm	/^c010dc54:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dc57	obj/kernel.asm	/^c010dc57:	c9                   	leave  $/;"	l
c010dc58	obj/kernel.asm	/^c010dc58:	c3                   	ret    $/;"	l
c010dc59	obj/kernel.asm	/^c010dc59 <vfs_cleanup>:$/;"	l
c010dc59	obj/kernel.asm	/^c010dc59:	55                   	push   %ebp$/;"	l
c010dc5a	obj/kernel.asm	/^c010dc5a:	89 e5                	mov    %esp,%ebp$/;"	l
c010dc5c	obj/kernel.asm	/^c010dc5c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010dc5f	obj/kernel.asm	/^c010dc5f:	c7 45 e8 38 01 15 c0 	movl   $0xc0150138,-0x18(%ebp)$/;"	l
c010dc66	obj/kernel.asm	/^c010dc66:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010dc69	obj/kernel.asm	/^c010dc69:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010dc6c	obj/kernel.asm	/^c010dc6c:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010dc6f	obj/kernel.asm	/^c010dc6f:	0f 94 c0             	sete   %al$/;"	l
c010dc72	obj/kernel.asm	/^c010dc72:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010dc75	obj/kernel.asm	/^c010dc75:	85 c0                	test   %eax,%eax$/;"	l
c010dc77	obj/kernel.asm	/^c010dc77:	75 5b                	jne    c010dcd4 <vfs_cleanup+0x7b>$/;"	l
c010dc79	obj/kernel.asm	/^c010dc79:	e8 76 ff ff ff       	call   c010dbf4 <lock_vdev_list>$/;"	l
c010dc7e	obj/kernel.asm	/^c010dc7e:	c7 45 f0 38 01 15 c0 	movl   $0xc0150138,-0x10(%ebp)$/;"	l
c010dc85	obj/kernel.asm	/^c010dc85:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010dc88	obj/kernel.asm	/^c010dc88:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dc8b	obj/kernel.asm	/^c010dc8b:	eb 2b                	jmp    c010dcb8 <vfs_cleanup+0x5f>$/;"	l
c010dc8d	obj/kernel.asm	/^c010dc8d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dc90	obj/kernel.asm	/^c010dc90:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010dc93	obj/kernel.asm	/^c010dc93:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010dc96	obj/kernel.asm	/^c010dc96:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010dc99	obj/kernel.asm	/^c010dc99:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010dc9c	obj/kernel.asm	/^c010dc9c:	85 c0                	test   %eax,%eax$/;"	l
c010dc9e	obj/kernel.asm	/^c010dc9e:	74 18                	je     c010dcb8 <vfs_cleanup+0x5f>$/;"	l
c010dca0	obj/kernel.asm	/^c010dca0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010dca3	obj/kernel.asm	/^c010dca3:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010dca6	obj/kernel.asm	/^c010dca6:	8b 40 7c             	mov    0x7c(%eax),%eax$/;"	l
c010dca9	obj/kernel.asm	/^c010dca9:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010dcac	obj/kernel.asm	/^c010dcac:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010dcaf	obj/kernel.asm	/^c010dcaf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010dcb2	obj/kernel.asm	/^c010dcb2:	52                   	push   %edx$/;"	l
c010dcb3	obj/kernel.asm	/^c010dcb3:	ff d0                	call   *%eax$/;"	l
c010dcb5	obj/kernel.asm	/^c010dcb5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dcb8	obj/kernel.asm	/^c010dcb8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dcbb	obj/kernel.asm	/^c010dcbb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010dcbe	obj/kernel.asm	/^c010dcbe:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010dcc1	obj/kernel.asm	/^c010dcc1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010dcc4	obj/kernel.asm	/^c010dcc4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dcc7	obj/kernel.asm	/^c010dcc7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dcca	obj/kernel.asm	/^c010dcca:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010dccd	obj/kernel.asm	/^c010dccd:	75 be                	jne    c010dc8d <vfs_cleanup+0x34>$/;"	l
c010dccf	obj/kernel.asm	/^c010dccf:	e8 38 ff ff ff       	call   c010dc0c <unlock_vdev_list>$/;"	l
c010dcd4	obj/kernel.asm	/^c010dcd4:	c9                   	leave  $/;"	l
c010dcd5	obj/kernel.asm	/^c010dcd5:	c3                   	ret    $/;"	l
c010dcd6	obj/kernel.asm	/^c010dcd6 <vfs_get_root>:$/;"	l
c010dcd6	obj/kernel.asm	/^c010dcd6:	55                   	push   %ebp$/;"	l
c010dcd7	obj/kernel.asm	/^c010dcd7:	89 e5                	mov    %esp,%ebp$/;"	l
c010dcd9	obj/kernel.asm	/^c010dcd9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010dcdc	obj/kernel.asm	/^c010dcdc:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010dce0	obj/kernel.asm	/^c010dce0:	75 16                	jne    c010dcf8 <vfs_get_root+0x22>$/;"	l
c010dce2	obj/kernel.asm	/^c010dce2:	68 f8 66 11 c0       	push   $0xc01166f8$/;"	l
c010dce7	obj/kernel.asm	/^c010dce7:	68 08 67 11 c0       	push   $0xc0116708$/;"	l
c010dcec	obj/kernel.asm	/^c010dcec:	6a 45                	push   $0x45$/;"	l
c010dcee	obj/kernel.asm	/^c010dcee:	68 1d 67 11 c0       	push   $0xc011671d$/;"	l
c010dcf3	obj/kernel.asm	/^c010dcf3:	e8 d7 27 ff ff       	call   c01004cf <__panic>$/;"	l
c010dcf8	obj/kernel.asm	/^c010dcf8:	c7 45 f4 f3 ff ff ff 	movl   $0xfffffff3,-0xc(%ebp)$/;"	l
c010dcff	obj/kernel.asm	/^c010dcff:	c7 45 e0 38 01 15 c0 	movl   $0xc0150138,-0x20(%ebp)$/;"	l
c010dd06	obj/kernel.asm	/^c010dd06:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010dd09	obj/kernel.asm	/^c010dd09:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010dd0c	obj/kernel.asm	/^c010dd0c:	39 45 e0             	cmp    %eax,-0x20(%ebp)$/;"	l
c010dd0f	obj/kernel.asm	/^c010dd0f:	0f 94 c0             	sete   %al$/;"	l
c010dd12	obj/kernel.asm	/^c010dd12:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010dd15	obj/kernel.asm	/^c010dd15:	85 c0                	test   %eax,%eax$/;"	l
c010dd17	obj/kernel.asm	/^c010dd17:	0f 85 cb 00 00 00    	jne    c010dde8 <vfs_get_root+0x112>$/;"	l
c010dd1d	obj/kernel.asm	/^c010dd1d:	e8 d2 fe ff ff       	call   c010dbf4 <lock_vdev_list>$/;"	l
c010dd22	obj/kernel.asm	/^c010dd22:	c7 45 e8 38 01 15 c0 	movl   $0xc0150138,-0x18(%ebp)$/;"	l
c010dd29	obj/kernel.asm	/^c010dd29:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010dd2c	obj/kernel.asm	/^c010dd2c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010dd2f	obj/kernel.asm	/^c010dd2f:	e9 94 00 00 00       	jmp    c010ddc8 <vfs_get_root+0xf2>$/;"	l
c010dd34	obj/kernel.asm	/^c010dd34:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010dd37	obj/kernel.asm	/^c010dd37:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010dd3a	obj/kernel.asm	/^c010dd3a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010dd3d	obj/kernel.asm	/^c010dd3d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010dd40	obj/kernel.asm	/^c010dd40:	8b 00                	mov    (%eax),%eax$/;"	l
c010dd42	obj/kernel.asm	/^c010dd42:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010dd45	obj/kernel.asm	/^c010dd45:	50                   	push   %eax$/;"	l
c010dd46	obj/kernel.asm	/^c010dd46:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010dd49	obj/kernel.asm	/^c010dd49:	e8 3f 50 00 00       	call   c0112d8d <strcmp>$/;"	l
c010dd4e	obj/kernel.asm	/^c010dd4e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dd51	obj/kernel.asm	/^c010dd51:	85 c0                	test   %eax,%eax$/;"	l
c010dd53	obj/kernel.asm	/^c010dd53:	75 73                	jne    c010ddc8 <vfs_get_root+0xf2>$/;"	l
c010dd55	obj/kernel.asm	/^c010dd55:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010dd5c	obj/kernel.asm	/^c010dd5c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010dd5f	obj/kernel.asm	/^c010dd5f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010dd62	obj/kernel.asm	/^c010dd62:	85 c0                	test   %eax,%eax$/;"	l
c010dd64	obj/kernel.asm	/^c010dd64:	74 1d                	je     c010dd83 <vfs_get_root+0xad>$/;"	l
c010dd66	obj/kernel.asm	/^c010dd66:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010dd69	obj/kernel.asm	/^c010dd69:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010dd6c	obj/kernel.asm	/^c010dd6c:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c010dd6f	obj/kernel.asm	/^c010dd6f:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010dd72	obj/kernel.asm	/^c010dd72:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010dd75	obj/kernel.asm	/^c010dd75:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010dd78	obj/kernel.asm	/^c010dd78:	52                   	push   %edx$/;"	l
c010dd79	obj/kernel.asm	/^c010dd79:	ff d0                	call   *%eax$/;"	l
c010dd7b	obj/kernel.asm	/^c010dd7b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dd7e	obj/kernel.asm	/^c010dd7e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010dd81	obj/kernel.asm	/^c010dd81:	eb 25                	jmp    c010dda8 <vfs_get_root+0xd2>$/;"	l
c010dd83	obj/kernel.asm	/^c010dd83:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010dd86	obj/kernel.asm	/^c010dd86:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010dd89	obj/kernel.asm	/^c010dd89:	85 c0                	test   %eax,%eax$/;"	l
c010dd8b	obj/kernel.asm	/^c010dd8b:	75 1b                	jne    c010dda8 <vfs_get_root+0xd2>$/;"	l
c010dd8d	obj/kernel.asm	/^c010dd8d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010dd90	obj/kernel.asm	/^c010dd90:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010dd93	obj/kernel.asm	/^c010dd93:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010dd96	obj/kernel.asm	/^c010dd96:	50                   	push   %eax$/;"	l
c010dd97	obj/kernel.asm	/^c010dd97:	e8 f0 0c 00 00       	call   c010ea8c <inode_ref_inc>$/;"	l
c010dd9c	obj/kernel.asm	/^c010dd9c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dd9f	obj/kernel.asm	/^c010dd9f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010dda2	obj/kernel.asm	/^c010dda2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010dda5	obj/kernel.asm	/^c010dda5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010dda8	obj/kernel.asm	/^c010dda8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010ddac	obj/kernel.asm	/^c010ddac:	74 11                	je     c010ddbf <vfs_get_root+0xe9>$/;"	l
c010ddae	obj/kernel.asm	/^c010ddae:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010ddb5	obj/kernel.asm	/^c010ddb5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ddb8	obj/kernel.asm	/^c010ddb8:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010ddbb	obj/kernel.asm	/^c010ddbb:	89 10                	mov    %edx,(%eax)$/;"	l
c010ddbd	obj/kernel.asm	/^c010ddbd:	eb 24                	jmp    c010dde3 <vfs_get_root+0x10d>$/;"	l
c010ddbf	obj/kernel.asm	/^c010ddbf:	c7 45 f4 f2 ff ff ff 	movl   $0xfffffff2,-0xc(%ebp)$/;"	l
c010ddc6	obj/kernel.asm	/^c010ddc6:	eb 1b                	jmp    c010dde3 <vfs_get_root+0x10d>$/;"	l
c010ddc8	obj/kernel.asm	/^c010ddc8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ddcb	obj/kernel.asm	/^c010ddcb:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010ddce	obj/kernel.asm	/^c010ddce:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010ddd1	obj/kernel.asm	/^c010ddd1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ddd4	obj/kernel.asm	/^c010ddd4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ddd7	obj/kernel.asm	/^c010ddd7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ddda	obj/kernel.asm	/^c010ddda:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c010dddd	obj/kernel.asm	/^c010dddd:	0f 85 51 ff ff ff    	jne    c010dd34 <vfs_get_root+0x5e>$/;"	l
c010dde3	obj/kernel.asm	/^c010dde3:	e8 24 fe ff ff       	call   c010dc0c <unlock_vdev_list>$/;"	l
c010dde8	obj/kernel.asm	/^c010dde8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ddeb	obj/kernel.asm	/^c010ddeb:	c9                   	leave  $/;"	l
c010ddec	obj/kernel.asm	/^c010ddec:	c3                   	ret    $/;"	l
c010dded	obj/kernel.asm	/^c010dded <vfs_get_devname>:$/;"	l
c010dded	obj/kernel.asm	/^c010dded:	55                   	push   %ebp$/;"	l
c010ddee	obj/kernel.asm	/^c010ddee:	89 e5                	mov    %esp,%ebp$/;"	l
c010ddf0	obj/kernel.asm	/^c010ddf0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ddf3	obj/kernel.asm	/^c010ddf3:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010ddf7	obj/kernel.asm	/^c010ddf7:	75 16                	jne    c010de0f <vfs_get_devname+0x22>$/;"	l
c010ddf9	obj/kernel.asm	/^c010ddf9:	68 32 67 11 c0       	push   $0xc0116732$/;"	l
c010ddfe	obj/kernel.asm	/^c010ddfe:	68 08 67 11 c0       	push   $0xc0116708$/;"	l
c010de03	obj/kernel.asm	/^c010de03:	6a 6a                	push   $0x6a$/;"	l
c010de05	obj/kernel.asm	/^c010de05:	68 1d 67 11 c0       	push   $0xc011671d$/;"	l
c010de0a	obj/kernel.asm	/^c010de0a:	e8 c0 26 ff ff       	call   c01004cf <__panic>$/;"	l
c010de0f	obj/kernel.asm	/^c010de0f:	c7 45 f0 38 01 15 c0 	movl   $0xc0150138,-0x10(%ebp)$/;"	l
c010de16	obj/kernel.asm	/^c010de16:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010de19	obj/kernel.asm	/^c010de19:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010de1c	obj/kernel.asm	/^c010de1c:	eb 1b                	jmp    c010de39 <vfs_get_devname+0x4c>$/;"	l
c010de1e	obj/kernel.asm	/^c010de1e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010de21	obj/kernel.asm	/^c010de21:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010de24	obj/kernel.asm	/^c010de24:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010de27	obj/kernel.asm	/^c010de27:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010de2a	obj/kernel.asm	/^c010de2a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010de2d	obj/kernel.asm	/^c010de2d:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010de30	obj/kernel.asm	/^c010de30:	75 07                	jne    c010de39 <vfs_get_devname+0x4c>$/;"	l
c010de32	obj/kernel.asm	/^c010de32:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010de35	obj/kernel.asm	/^c010de35:	8b 00                	mov    (%eax),%eax$/;"	l
c010de37	obj/kernel.asm	/^c010de37:	eb 1c                	jmp    c010de55 <vfs_get_devname+0x68>$/;"	l
c010de39	obj/kernel.asm	/^c010de39:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010de3c	obj/kernel.asm	/^c010de3c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010de3f	obj/kernel.asm	/^c010de3f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010de42	obj/kernel.asm	/^c010de42:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010de45	obj/kernel.asm	/^c010de45:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010de48	obj/kernel.asm	/^c010de48:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010de4b	obj/kernel.asm	/^c010de4b:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010de4e	obj/kernel.asm	/^c010de4e:	75 ce                	jne    c010de1e <vfs_get_devname+0x31>$/;"	l
c010de50	obj/kernel.asm	/^c010de50:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010de55	obj/kernel.asm	/^c010de55:	c9                   	leave  $/;"	l
c010de56	obj/kernel.asm	/^c010de56:	c3                   	ret    $/;"	l
c010de57	obj/kernel.asm	/^c010de57 <check_devname_conflict>:$/;"	l
c010de57	obj/kernel.asm	/^c010de57:	55                   	push   %ebp$/;"	l
c010de58	obj/kernel.asm	/^c010de58:	89 e5                	mov    %esp,%ebp$/;"	l
c010de5a	obj/kernel.asm	/^c010de5a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010de5d	obj/kernel.asm	/^c010de5d:	c7 45 f0 38 01 15 c0 	movl   $0xc0150138,-0x10(%ebp)$/;"	l
c010de64	obj/kernel.asm	/^c010de64:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010de67	obj/kernel.asm	/^c010de67:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010de6a	obj/kernel.asm	/^c010de6a:	eb 28                	jmp    c010de94 <check_devname_conflict+0x3d>$/;"	l
c010de6c	obj/kernel.asm	/^c010de6c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010de6f	obj/kernel.asm	/^c010de6f:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010de72	obj/kernel.asm	/^c010de72:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010de75	obj/kernel.asm	/^c010de75:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010de78	obj/kernel.asm	/^c010de78:	8b 00                	mov    (%eax),%eax$/;"	l
c010de7a	obj/kernel.asm	/^c010de7a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010de7d	obj/kernel.asm	/^c010de7d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010de80	obj/kernel.asm	/^c010de80:	50                   	push   %eax$/;"	l
c010de81	obj/kernel.asm	/^c010de81:	e8 07 4f 00 00       	call   c0112d8d <strcmp>$/;"	l
c010de86	obj/kernel.asm	/^c010de86:	83 c4 10             	add    $0x10,%esp$/;"	l
c010de89	obj/kernel.asm	/^c010de89:	85 c0                	test   %eax,%eax$/;"	l
c010de8b	obj/kernel.asm	/^c010de8b:	75 07                	jne    c010de94 <check_devname_conflict+0x3d>$/;"	l
c010de8d	obj/kernel.asm	/^c010de8d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010de92	obj/kernel.asm	/^c010de92:	eb 1c                	jmp    c010deb0 <check_devname_conflict+0x59>$/;"	l
c010de94	obj/kernel.asm	/^c010de94:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010de97	obj/kernel.asm	/^c010de97:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010de9a	obj/kernel.asm	/^c010de9a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010de9d	obj/kernel.asm	/^c010de9d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010dea0	obj/kernel.asm	/^c010dea0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dea3	obj/kernel.asm	/^c010dea3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dea6	obj/kernel.asm	/^c010dea6:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010dea9	obj/kernel.asm	/^c010dea9:	75 c1                	jne    c010de6c <check_devname_conflict+0x15>$/;"	l
c010deab	obj/kernel.asm	/^c010deab:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010deb0	obj/kernel.asm	/^c010deb0:	c9                   	leave  $/;"	l
c010deb1	obj/kernel.asm	/^c010deb1:	c3                   	ret    $/;"	l
c010deb2	obj/kernel.asm	/^c010deb2 <vfs_do_add>:$/;"	l
c010deb2	obj/kernel.asm	/^c010deb2:	55                   	push   %ebp$/;"	l
c010deb3	obj/kernel.asm	/^c010deb3:	89 e5                	mov    %esp,%ebp$/;"	l
c010deb5	obj/kernel.asm	/^c010deb5:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010deb8	obj/kernel.asm	/^c010deb8:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010debc	obj/kernel.asm	/^c010debc:	75 19                	jne    c010ded7 <vfs_do_add+0x25>$/;"	l
c010debe	obj/kernel.asm	/^c010debe:	68 f8 66 11 c0       	push   $0xc01166f8$/;"	l
c010dec3	obj/kernel.asm	/^c010dec3:	68 08 67 11 c0       	push   $0xc0116708$/;"	l
c010dec8	obj/kernel.asm	/^c010dec8:	68 8e 00 00 00       	push   $0x8e$/;"	l
c010decd	obj/kernel.asm	/^c010decd:	68 1d 67 11 c0       	push   $0xc011671d$/;"	l
c010ded2	obj/kernel.asm	/^c010ded2:	e8 f8 25 ff ff       	call   c01004cf <__panic>$/;"	l
c010ded7	obj/kernel.asm	/^c010ded7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010dedb	obj/kernel.asm	/^c010dedb:	75 06                	jne    c010dee3 <vfs_do_add+0x31>$/;"	l
c010dedd	obj/kernel.asm	/^c010dedd:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010dee1	obj/kernel.asm	/^c010dee1:	74 2c                	je     c010df0f <vfs_do_add+0x5d>$/;"	l
c010dee3	obj/kernel.asm	/^c010dee3:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010dee7	obj/kernel.asm	/^c010dee7:	74 0d                	je     c010def6 <vfs_do_add+0x44>$/;"	l
c010dee9	obj/kernel.asm	/^c010dee9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010deec	obj/kernel.asm	/^c010deec:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010deef	obj/kernel.asm	/^c010deef:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010def4	obj/kernel.asm	/^c010def4:	74 19                	je     c010df0f <vfs_do_add+0x5d>$/;"	l
c010def6	obj/kernel.asm	/^c010def6:	68 40 67 11 c0       	push   $0xc0116740$/;"	l
c010defb	obj/kernel.asm	/^c010defb:	68 08 67 11 c0       	push   $0xc0116708$/;"	l
c010df00	obj/kernel.asm	/^c010df00:	68 8f 00 00 00       	push   $0x8f$/;"	l
c010df05	obj/kernel.asm	/^c010df05:	68 1d 67 11 c0       	push   $0xc011671d$/;"	l
c010df0a	obj/kernel.asm	/^c010df0a:	e8 c0 25 ff ff       	call   c01004cf <__panic>$/;"	l
c010df0f	obj/kernel.asm	/^c010df0f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010df12	obj/kernel.asm	/^c010df12:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010df15	obj/kernel.asm	/^c010df15:	e8 78 4d 00 00       	call   c0112c92 <strlen>$/;"	l
c010df1a	obj/kernel.asm	/^c010df1a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010df1d	obj/kernel.asm	/^c010df1d:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
c010df20	obj/kernel.asm	/^c010df20:	76 0a                	jbe    c010df2c <vfs_do_add+0x7a>$/;"	l
c010df22	obj/kernel.asm	/^c010df22:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax$/;"	l
c010df27	obj/kernel.asm	/^c010df27:	e9 0d 01 00 00       	jmp    c010e039 <vfs_do_add+0x187>$/;"	l
c010df2c	obj/kernel.asm	/^c010df2c:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010df33	obj/kernel.asm	/^c010df33:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010df36	obj/kernel.asm	/^c010df36:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010df39	obj/kernel.asm	/^c010df39:	e8 f5 22 ff ff       	call   c0100233 <strdup>$/;"	l
c010df3e	obj/kernel.asm	/^c010df3e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010df41	obj/kernel.asm	/^c010df41:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010df44	obj/kernel.asm	/^c010df44:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010df48	obj/kernel.asm	/^c010df48:	75 08                	jne    c010df52 <vfs_do_add+0xa0>$/;"	l
c010df4a	obj/kernel.asm	/^c010df4a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010df4d	obj/kernel.asm	/^c010df4d:	e9 e7 00 00 00       	jmp    c010e039 <vfs_do_add+0x187>$/;"	l
c010df52	obj/kernel.asm	/^c010df52:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010df55	obj/kernel.asm	/^c010df55:	6a 18                	push   $0x18$/;"	l
c010df57	obj/kernel.asm	/^c010df57:	e8 43 95 ff ff       	call   c010749f <kmalloc>$/;"	l
c010df5c	obj/kernel.asm	/^c010df5c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010df5f	obj/kernel.asm	/^c010df5f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010df62	obj/kernel.asm	/^c010df62:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010df66	obj/kernel.asm	/^c010df66:	75 05                	jne    c010df6d <vfs_do_add+0xbb>$/;"	l
c010df68	obj/kernel.asm	/^c010df68:	e9 bb 00 00 00       	jmp    c010e028 <vfs_do_add+0x176>$/;"	l
c010df6d	obj/kernel.asm	/^c010df6d:	c7 45 f4 e9 ff ff ff 	movl   $0xffffffe9,-0xc(%ebp)$/;"	l
c010df74	obj/kernel.asm	/^c010df74:	e8 7b fc ff ff       	call   c010dbf4 <lock_vdev_list>$/;"	l
c010df79	obj/kernel.asm	/^c010df79:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010df7c	obj/kernel.asm	/^c010df7c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010df7f	obj/kernel.asm	/^c010df7f:	e8 d3 fe ff ff       	call   c010de57 <check_devname_conflict>$/;"	l
c010df84	obj/kernel.asm	/^c010df84:	83 c4 10             	add    $0x10,%esp$/;"	l
c010df87	obj/kernel.asm	/^c010df87:	85 c0                	test   %eax,%eax$/;"	l
c010df89	obj/kernel.asm	/^c010df89:	75 19                	jne    c010dfa4 <vfs_do_add+0xf2>$/;"	l
c010df8b	obj/kernel.asm	/^c010df8b:	e8 7c fc ff ff       	call   c010dc0c <unlock_vdev_list>$/;"	l
c010df90	obj/kernel.asm	/^c010df90:	90                   	nop$/;"	l
c010df91	obj/kernel.asm	/^c010df91:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010df94	obj/kernel.asm	/^c010df94:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010df97	obj/kernel.asm	/^c010df97:	e8 1b 95 ff ff       	call   c01074b7 <kfree>$/;"	l
c010df9c	obj/kernel.asm	/^c010df9c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010df9f	obj/kernel.asm	/^c010df9f:	e9 84 00 00 00       	jmp    c010e028 <vfs_do_add+0x176>$/;"	l
c010dfa4	obj/kernel.asm	/^c010dfa4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010dfa7	obj/kernel.asm	/^c010dfa7:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010dfaa	obj/kernel.asm	/^c010dfaa:	89 10                	mov    %edx,(%eax)$/;"	l
c010dfac	obj/kernel.asm	/^c010dfac:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010dfaf	obj/kernel.asm	/^c010dfaf:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010dfb2	obj/kernel.asm	/^c010dfb2:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010dfb5	obj/kernel.asm	/^c010dfb5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010dfb8	obj/kernel.asm	/^c010dfb8:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c010dfbb	obj/kernel.asm	/^c010dfbb:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010dfbe	obj/kernel.asm	/^c010dfbe:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010dfc1	obj/kernel.asm	/^c010dfc1:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010dfc4	obj/kernel.asm	/^c010dfc4:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010dfc7	obj/kernel.asm	/^c010dfc7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010dfca	obj/kernel.asm	/^c010dfca:	83 c0 10             	add    $0x10,%eax$/;"	l
c010dfcd	obj/kernel.asm	/^c010dfcd:	c7 45 e8 38 01 15 c0 	movl   $0xc0150138,-0x18(%ebp)$/;"	l
c010dfd4	obj/kernel.asm	/^c010dfd4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010dfd7	obj/kernel.asm	/^c010dfd7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010dfda	obj/kernel.asm	/^c010dfda:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010dfdd	obj/kernel.asm	/^c010dfdd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010dfe0	obj/kernel.asm	/^c010dfe0:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010dfe3	obj/kernel.asm	/^c010dfe3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010dfe6	obj/kernel.asm	/^c010dfe6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010dfe9	obj/kernel.asm	/^c010dfe9:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010dfec	obj/kernel.asm	/^c010dfec:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010dfef	obj/kernel.asm	/^c010dfef:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010dff2	obj/kernel.asm	/^c010dff2:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010dff5	obj/kernel.asm	/^c010dff5:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010dff8	obj/kernel.asm	/^c010dff8:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010dffb	obj/kernel.asm	/^c010dffb:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010dffe	obj/kernel.asm	/^c010dffe:	89 10                	mov    %edx,(%eax)$/;"	l
c010e000	obj/kernel.asm	/^c010e000:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010e003	obj/kernel.asm	/^c010e003:	8b 10                	mov    (%eax),%edx$/;"	l
c010e005	obj/kernel.asm	/^c010e005:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010e008	obj/kernel.asm	/^c010e008:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e00b	obj/kernel.asm	/^c010e00b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010e00e	obj/kernel.asm	/^c010e00e:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010e011	obj/kernel.asm	/^c010e011:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e014	obj/kernel.asm	/^c010e014:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010e017	obj/kernel.asm	/^c010e017:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010e01a	obj/kernel.asm	/^c010e01a:	89 10                	mov    %edx,(%eax)$/;"	l
c010e01c	obj/kernel.asm	/^c010e01c:	e8 eb fb ff ff       	call   c010dc0c <unlock_vdev_list>$/;"	l
c010e021	obj/kernel.asm	/^c010e021:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e026	obj/kernel.asm	/^c010e026:	eb 11                	jmp    c010e039 <vfs_do_add+0x187>$/;"	l
c010e028	obj/kernel.asm	/^c010e028:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e02b	obj/kernel.asm	/^c010e02b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010e02e	obj/kernel.asm	/^c010e02e:	e8 84 94 ff ff       	call   c01074b7 <kfree>$/;"	l
c010e033	obj/kernel.asm	/^c010e033:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e036	obj/kernel.asm	/^c010e036:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e039	obj/kernel.asm	/^c010e039:	c9                   	leave  $/;"	l
c010e03a	obj/kernel.asm	/^c010e03a:	c3                   	ret    $/;"	l
c010e03b	obj/kernel.asm	/^c010e03b <vfs_add_fs>:$/;"	l
c010e03b	obj/kernel.asm	/^c010e03b:	55                   	push   %ebp$/;"	l
c010e03c	obj/kernel.asm	/^c010e03c:	89 e5                	mov    %esp,%ebp$/;"	l
c010e03e	obj/kernel.asm	/^c010e03e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e041	obj/kernel.asm	/^c010e041:	6a 00                	push   $0x0$/;"	l
c010e043	obj/kernel.asm	/^c010e043:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010e046	obj/kernel.asm	/^c010e046:	6a 00                	push   $0x0$/;"	l
c010e048	obj/kernel.asm	/^c010e048:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e04b	obj/kernel.asm	/^c010e04b:	e8 62 fe ff ff       	call   c010deb2 <vfs_do_add>$/;"	l
c010e050	obj/kernel.asm	/^c010e050:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e053	obj/kernel.asm	/^c010e053:	c9                   	leave  $/;"	l
c010e054	obj/kernel.asm	/^c010e054:	c3                   	ret    $/;"	l
c010e055	obj/kernel.asm	/^c010e055 <vfs_add_dev>:$/;"	l
c010e055	obj/kernel.asm	/^c010e055:	55                   	push   %ebp$/;"	l
c010e056	obj/kernel.asm	/^c010e056:	89 e5                	mov    %esp,%ebp$/;"	l
c010e058	obj/kernel.asm	/^c010e058:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e05b	obj/kernel.asm	/^c010e05b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010e05e	obj/kernel.asm	/^c010e05e:	6a 00                	push   $0x0$/;"	l
c010e060	obj/kernel.asm	/^c010e060:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010e063	obj/kernel.asm	/^c010e063:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e066	obj/kernel.asm	/^c010e066:	e8 47 fe ff ff       	call   c010deb2 <vfs_do_add>$/;"	l
c010e06b	obj/kernel.asm	/^c010e06b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e06e	obj/kernel.asm	/^c010e06e:	c9                   	leave  $/;"	l
c010e06f	obj/kernel.asm	/^c010e06f:	c3                   	ret    $/;"	l
c010e070	obj/kernel.asm	/^c010e070 <find_mount>:$/;"	l
c010e070	obj/kernel.asm	/^c010e070:	55                   	push   %ebp$/;"	l
c010e071	obj/kernel.asm	/^c010e071:	89 e5                	mov    %esp,%ebp$/;"	l
c010e073	obj/kernel.asm	/^c010e073:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e076	obj/kernel.asm	/^c010e076:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010e07a	obj/kernel.asm	/^c010e07a:	75 19                	jne    c010e095 <find_mount+0x25>$/;"	l
c010e07c	obj/kernel.asm	/^c010e07c:	68 f8 66 11 c0       	push   $0xc01166f8$/;"	l
c010e081	obj/kernel.asm	/^c010e081:	68 08 67 11 c0       	push   $0xc0116708$/;"	l
c010e086	obj/kernel.asm	/^c010e086:	68 cd 00 00 00       	push   $0xcd$/;"	l
c010e08b	obj/kernel.asm	/^c010e08b:	68 1d 67 11 c0       	push   $0xc011671d$/;"	l
c010e090	obj/kernel.asm	/^c010e090:	e8 3a 24 ff ff       	call   c01004cf <__panic>$/;"	l
c010e095	obj/kernel.asm	/^c010e095:	c7 45 f0 38 01 15 c0 	movl   $0xc0150138,-0x10(%ebp)$/;"	l
c010e09c	obj/kernel.asm	/^c010e09c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e09f	obj/kernel.asm	/^c010e09f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e0a2	obj/kernel.asm	/^c010e0a2:	eb 3a                	jmp    c010e0de <find_mount+0x6e>$/;"	l
c010e0a4	obj/kernel.asm	/^c010e0a4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e0a7	obj/kernel.asm	/^c010e0a7:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010e0aa	obj/kernel.asm	/^c010e0aa:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e0ad	obj/kernel.asm	/^c010e0ad:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e0b0	obj/kernel.asm	/^c010e0b0:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e0b3	obj/kernel.asm	/^c010e0b3:	85 c0                	test   %eax,%eax$/;"	l
c010e0b5	obj/kernel.asm	/^c010e0b5:	74 27                	je     c010e0de <find_mount+0x6e>$/;"	l
c010e0b7	obj/kernel.asm	/^c010e0b7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e0ba	obj/kernel.asm	/^c010e0ba:	8b 00                	mov    (%eax),%eax$/;"	l
c010e0bc	obj/kernel.asm	/^c010e0bc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e0bf	obj/kernel.asm	/^c010e0bf:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e0c2	obj/kernel.asm	/^c010e0c2:	50                   	push   %eax$/;"	l
c010e0c3	obj/kernel.asm	/^c010e0c3:	e8 c5 4c 00 00       	call   c0112d8d <strcmp>$/;"	l
c010e0c8	obj/kernel.asm	/^c010e0c8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e0cb	obj/kernel.asm	/^c010e0cb:	85 c0                	test   %eax,%eax$/;"	l
c010e0cd	obj/kernel.asm	/^c010e0cd:	75 0f                	jne    c010e0de <find_mount+0x6e>$/;"	l
c010e0cf	obj/kernel.asm	/^c010e0cf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e0d2	obj/kernel.asm	/^c010e0d2:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010e0d5	obj/kernel.asm	/^c010e0d5:	89 10                	mov    %edx,(%eax)$/;"	l
c010e0d7	obj/kernel.asm	/^c010e0d7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e0dc	obj/kernel.asm	/^c010e0dc:	eb 1c                	jmp    c010e0fa <find_mount+0x8a>$/;"	l
c010e0de	obj/kernel.asm	/^c010e0de:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e0e1	obj/kernel.asm	/^c010e0e1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e0e4	obj/kernel.asm	/^c010e0e4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e0e7	obj/kernel.asm	/^c010e0e7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e0ea	obj/kernel.asm	/^c010e0ea:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e0ed	obj/kernel.asm	/^c010e0ed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e0f0	obj/kernel.asm	/^c010e0f0:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010e0f3	obj/kernel.asm	/^c010e0f3:	75 af                	jne    c010e0a4 <find_mount+0x34>$/;"	l
c010e0f5	obj/kernel.asm	/^c010e0f5:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax$/;"	l
c010e0fa	obj/kernel.asm	/^c010e0fa:	c9                   	leave  $/;"	l
c010e0fb	obj/kernel.asm	/^c010e0fb:	c3                   	ret    $/;"	l
c010e0fc	obj/kernel.asm	/^c010e0fc <vfs_mount>:$/;"	l
c010e0fc	obj/kernel.asm	/^c010e0fc:	55                   	push   %ebp$/;"	l
c010e0fd	obj/kernel.asm	/^c010e0fd:	89 e5                	mov    %esp,%ebp$/;"	l
c010e0ff	obj/kernel.asm	/^c010e0ff:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e102	obj/kernel.asm	/^c010e102:	e8 ed fa ff ff       	call   c010dbf4 <lock_vdev_list>$/;"	l
c010e107	obj/kernel.asm	/^c010e107:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e10a	obj/kernel.asm	/^c010e10a:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c010e10d	obj/kernel.asm	/^c010e10d:	50                   	push   %eax$/;"	l
c010e10e	obj/kernel.asm	/^c010e10e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e111	obj/kernel.asm	/^c010e111:	e8 5a ff ff ff       	call   c010e070 <find_mount>$/;"	l
c010e116	obj/kernel.asm	/^c010e116:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e119	obj/kernel.asm	/^c010e119:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e11c	obj/kernel.asm	/^c010e11c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e120	obj/kernel.asm	/^c010e120:	74 05                	je     c010e127 <vfs_mount+0x2b>$/;"	l
c010e122	obj/kernel.asm	/^c010e122:	e9 d4 00 00 00       	jmp    c010e1fb <vfs_mount+0xff>$/;"	l
c010e127	obj/kernel.asm	/^c010e127:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e12a	obj/kernel.asm	/^c010e12a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e12d	obj/kernel.asm	/^c010e12d:	85 c0                	test   %eax,%eax$/;"	l
c010e12f	obj/kernel.asm	/^c010e12f:	74 0c                	je     c010e13d <vfs_mount+0x41>$/;"	l
c010e131	obj/kernel.asm	/^c010e131:	c7 45 f4 f1 ff ff ff 	movl   $0xfffffff1,-0xc(%ebp)$/;"	l
c010e138	obj/kernel.asm	/^c010e138:	e9 be 00 00 00       	jmp    c010e1fb <vfs_mount+0xff>$/;"	l
c010e13d	obj/kernel.asm	/^c010e13d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e140	obj/kernel.asm	/^c010e140:	8b 00                	mov    (%eax),%eax$/;"	l
c010e142	obj/kernel.asm	/^c010e142:	85 c0                	test   %eax,%eax$/;"	l
c010e144	obj/kernel.asm	/^c010e144:	74 0a                	je     c010e150 <vfs_mount+0x54>$/;"	l
c010e146	obj/kernel.asm	/^c010e146:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e149	obj/kernel.asm	/^c010e149:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e14c	obj/kernel.asm	/^c010e14c:	85 c0                	test   %eax,%eax$/;"	l
c010e14e	obj/kernel.asm	/^c010e14e:	75 19                	jne    c010e169 <vfs_mount+0x6d>$/;"	l
c010e150	obj/kernel.asm	/^c010e150:	68 9c 67 11 c0       	push   $0xc011679c$/;"	l
c010e155	obj/kernel.asm	/^c010e155:	68 08 67 11 c0       	push   $0xc0116708$/;"	l
c010e15a	obj/kernel.asm	/^c010e15a:	68 eb 00 00 00       	push   $0xeb$/;"	l
c010e15f	obj/kernel.asm	/^c010e15f:	68 1d 67 11 c0       	push   $0xc011671d$/;"	l
c010e164	obj/kernel.asm	/^c010e164:	e8 66 23 ff ff       	call   c01004cf <__panic>$/;"	l
c010e169	obj/kernel.asm	/^c010e169:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e16c	obj/kernel.asm	/^c010e16c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e16f	obj/kernel.asm	/^c010e16f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e172	obj/kernel.asm	/^c010e172:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010e176	obj/kernel.asm	/^c010e176:	74 0d                	je     c010e185 <vfs_mount+0x89>$/;"	l
c010e178	obj/kernel.asm	/^c010e178:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e17b	obj/kernel.asm	/^c010e17b:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010e17e	obj/kernel.asm	/^c010e17e:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010e183	obj/kernel.asm	/^c010e183:	74 19                	je     c010e19e <vfs_mount+0xa2>$/;"	l
c010e185	obj/kernel.asm	/^c010e185:	68 c8 67 11 c0       	push   $0xc01167c8$/;"	l
c010e18a	obj/kernel.asm	/^c010e18a:	68 08 67 11 c0       	push   $0xc0116708$/;"	l
c010e18f	obj/kernel.asm	/^c010e18f:	68 ed 00 00 00       	push   $0xed$/;"	l
c010e194	obj/kernel.asm	/^c010e194:	68 1d 67 11 c0       	push   $0xc011671d$/;"	l
c010e199	obj/kernel.asm	/^c010e199:	e8 31 23 ff ff       	call   c01004cf <__panic>$/;"	l
c010e19e	obj/kernel.asm	/^c010e19e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e1a1	obj/kernel.asm	/^c010e1a1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e1a4	obj/kernel.asm	/^c010e1a4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e1a7	obj/kernel.asm	/^c010e1a7:	83 c0 08             	add    $0x8,%eax$/;"	l
c010e1aa	obj/kernel.asm	/^c010e1aa:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e1ad	obj/kernel.asm	/^c010e1ad:	50                   	push   %eax$/;"	l
c010e1ae	obj/kernel.asm	/^c010e1ae:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010e1b1	obj/kernel.asm	/^c010e1b1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e1b4	obj/kernel.asm	/^c010e1b4:	ff d0                	call   *%eax$/;"	l
c010e1b6	obj/kernel.asm	/^c010e1b6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e1b9	obj/kernel.asm	/^c010e1b9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e1bc	obj/kernel.asm	/^c010e1bc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e1c0	obj/kernel.asm	/^c010e1c0:	75 39                	jne    c010e1fb <vfs_mount+0xff>$/;"	l
c010e1c2	obj/kernel.asm	/^c010e1c2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e1c5	obj/kernel.asm	/^c010e1c5:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e1c8	obj/kernel.asm	/^c010e1c8:	85 c0                	test   %eax,%eax$/;"	l
c010e1ca	obj/kernel.asm	/^c010e1ca:	75 19                	jne    c010e1e5 <vfs_mount+0xe9>$/;"	l
c010e1cc	obj/kernel.asm	/^c010e1cc:	68 fb 67 11 c0       	push   $0xc01167fb$/;"	l
c010e1d1	obj/kernel.asm	/^c010e1d1:	68 08 67 11 c0       	push   $0xc0116708$/;"	l
c010e1d6	obj/kernel.asm	/^c010e1d6:	68 ef 00 00 00       	push   $0xef$/;"	l
c010e1db	obj/kernel.asm	/^c010e1db:	68 1d 67 11 c0       	push   $0xc011671d$/;"	l
c010e1e0	obj/kernel.asm	/^c010e1e0:	e8 ea 22 ff ff       	call   c01004cf <__panic>$/;"	l
c010e1e5	obj/kernel.asm	/^c010e1e5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e1e8	obj/kernel.asm	/^c010e1e8:	8b 00                	mov    (%eax),%eax$/;"	l
c010e1ea	obj/kernel.asm	/^c010e1ea:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e1ed	obj/kernel.asm	/^c010e1ed:	50                   	push   %eax$/;"	l
c010e1ee	obj/kernel.asm	/^c010e1ee:	68 0c 68 11 c0       	push   $0xc011680c$/;"	l
c010e1f3	obj/kernel.asm	/^c010e1f3:	e8 72 21 ff ff       	call   c010036a <cprintf>$/;"	l
c010e1f8	obj/kernel.asm	/^c010e1f8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e1fb	obj/kernel.asm	/^c010e1fb:	e8 0c fa ff ff       	call   c010dc0c <unlock_vdev_list>$/;"	l
c010e200	obj/kernel.asm	/^c010e200:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e203	obj/kernel.asm	/^c010e203:	c9                   	leave  $/;"	l
c010e204	obj/kernel.asm	/^c010e204:	c3                   	ret    $/;"	l
c010e205	obj/kernel.asm	/^c010e205 <vfs_unmount>:$/;"	l
c010e205	obj/kernel.asm	/^c010e205:	55                   	push   %ebp$/;"	l
c010e206	obj/kernel.asm	/^c010e206:	89 e5                	mov    %esp,%ebp$/;"	l
c010e208	obj/kernel.asm	/^c010e208:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e20b	obj/kernel.asm	/^c010e20b:	e8 e4 f9 ff ff       	call   c010dbf4 <lock_vdev_list>$/;"	l
c010e210	obj/kernel.asm	/^c010e210:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e213	obj/kernel.asm	/^c010e213:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010e216	obj/kernel.asm	/^c010e216:	50                   	push   %eax$/;"	l
c010e217	obj/kernel.asm	/^c010e217:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e21a	obj/kernel.asm	/^c010e21a:	e8 51 fe ff ff       	call   c010e070 <find_mount>$/;"	l
c010e21f	obj/kernel.asm	/^c010e21f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e222	obj/kernel.asm	/^c010e222:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e225	obj/kernel.asm	/^c010e225:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e229	obj/kernel.asm	/^c010e229:	74 05                	je     c010e230 <vfs_unmount+0x2b>$/;"	l
c010e22b	obj/kernel.asm	/^c010e22b:	e9 a6 00 00 00       	jmp    c010e2d6 <vfs_unmount+0xd1>$/;"	l
c010e230	obj/kernel.asm	/^c010e230:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e233	obj/kernel.asm	/^c010e233:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e236	obj/kernel.asm	/^c010e236:	85 c0                	test   %eax,%eax$/;"	l
c010e238	obj/kernel.asm	/^c010e238:	75 0c                	jne    c010e246 <vfs_unmount+0x41>$/;"	l
c010e23a	obj/kernel.asm	/^c010e23a:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010e241	obj/kernel.asm	/^c010e241:	e9 90 00 00 00       	jmp    c010e2d6 <vfs_unmount+0xd1>$/;"	l
c010e246	obj/kernel.asm	/^c010e246:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e249	obj/kernel.asm	/^c010e249:	8b 00                	mov    (%eax),%eax$/;"	l
c010e24b	obj/kernel.asm	/^c010e24b:	85 c0                	test   %eax,%eax$/;"	l
c010e24d	obj/kernel.asm	/^c010e24d:	74 0a                	je     c010e259 <vfs_unmount+0x54>$/;"	l
c010e24f	obj/kernel.asm	/^c010e24f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e252	obj/kernel.asm	/^c010e252:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e255	obj/kernel.asm	/^c010e255:	85 c0                	test   %eax,%eax$/;"	l
c010e257	obj/kernel.asm	/^c010e257:	75 19                	jne    c010e272 <vfs_unmount+0x6d>$/;"	l
c010e259	obj/kernel.asm	/^c010e259:	68 9c 67 11 c0       	push   $0xc011679c$/;"	l
c010e25e	obj/kernel.asm	/^c010e25e:	68 08 67 11 c0       	push   $0xc0116708$/;"	l
c010e263	obj/kernel.asm	/^c010e263:	68 08 01 00 00       	push   $0x108$/;"	l
c010e268	obj/kernel.asm	/^c010e268:	68 1d 67 11 c0       	push   $0xc011671d$/;"	l
c010e26d	obj/kernel.asm	/^c010e26d:	e8 5d 22 ff ff       	call   c01004cf <__panic>$/;"	l
c010e272	obj/kernel.asm	/^c010e272:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e275	obj/kernel.asm	/^c010e275:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e278	obj/kernel.asm	/^c010e278:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c010e27b	obj/kernel.asm	/^c010e27b:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010e27e	obj/kernel.asm	/^c010e27e:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010e281	obj/kernel.asm	/^c010e281:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e284	obj/kernel.asm	/^c010e284:	52                   	push   %edx$/;"	l
c010e285	obj/kernel.asm	/^c010e285:	ff d0                	call   *%eax$/;"	l
c010e287	obj/kernel.asm	/^c010e287:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e28a	obj/kernel.asm	/^c010e28a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e28d	obj/kernel.asm	/^c010e28d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e291	obj/kernel.asm	/^c010e291:	74 02                	je     c010e295 <vfs_unmount+0x90>$/;"	l
c010e293	obj/kernel.asm	/^c010e293:	eb 41                	jmp    c010e2d6 <vfs_unmount+0xd1>$/;"	l
c010e295	obj/kernel.asm	/^c010e295:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e298	obj/kernel.asm	/^c010e298:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e29b	obj/kernel.asm	/^c010e29b:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010e29e	obj/kernel.asm	/^c010e29e:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010e2a1	obj/kernel.asm	/^c010e2a1:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010e2a4	obj/kernel.asm	/^c010e2a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e2a7	obj/kernel.asm	/^c010e2a7:	52                   	push   %edx$/;"	l
c010e2a8	obj/kernel.asm	/^c010e2a8:	ff d0                	call   *%eax$/;"	l
c010e2aa	obj/kernel.asm	/^c010e2aa:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e2ad	obj/kernel.asm	/^c010e2ad:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e2b0	obj/kernel.asm	/^c010e2b0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e2b4	obj/kernel.asm	/^c010e2b4:	75 20                	jne    c010e2d6 <vfs_unmount+0xd1>$/;"	l
c010e2b6	obj/kernel.asm	/^c010e2b6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e2b9	obj/kernel.asm	/^c010e2b9:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010e2c0	obj/kernel.asm	/^c010e2c0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e2c3	obj/kernel.asm	/^c010e2c3:	8b 00                	mov    (%eax),%eax$/;"	l
c010e2c5	obj/kernel.asm	/^c010e2c5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e2c8	obj/kernel.asm	/^c010e2c8:	50                   	push   %eax$/;"	l
c010e2c9	obj/kernel.asm	/^c010e2c9:	68 1c 68 11 c0       	push   $0xc011681c$/;"	l
c010e2ce	obj/kernel.asm	/^c010e2ce:	e8 97 20 ff ff       	call   c010036a <cprintf>$/;"	l
c010e2d3	obj/kernel.asm	/^c010e2d3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e2d6	obj/kernel.asm	/^c010e2d6:	e8 31 f9 ff ff       	call   c010dc0c <unlock_vdev_list>$/;"	l
c010e2db	obj/kernel.asm	/^c010e2db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e2de	obj/kernel.asm	/^c010e2de:	c9                   	leave  $/;"	l
c010e2df	obj/kernel.asm	/^c010e2df:	c3                   	ret    $/;"	l
c010e2e0	obj/kernel.asm	/^c010e2e0 <vfs_unmount_all>:$/;"	l
c010e2e0	obj/kernel.asm	/^c010e2e0:	55                   	push   %ebp$/;"	l
c010e2e1	obj/kernel.asm	/^c010e2e1:	89 e5                	mov    %esp,%ebp$/;"	l
c010e2e3	obj/kernel.asm	/^c010e2e3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e2e6	obj/kernel.asm	/^c010e2e6:	c7 45 e4 38 01 15 c0 	movl   $0xc0150138,-0x1c(%ebp)$/;"	l
c010e2ed	obj/kernel.asm	/^c010e2ed:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e2f0	obj/kernel.asm	/^c010e2f0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e2f3	obj/kernel.asm	/^c010e2f3:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c010e2f6	obj/kernel.asm	/^c010e2f6:	0f 94 c0             	sete   %al$/;"	l
c010e2f9	obj/kernel.asm	/^c010e2f9:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010e2fc	obj/kernel.asm	/^c010e2fc:	85 c0                	test   %eax,%eax$/;"	l
c010e2fe	obj/kernel.asm	/^c010e2fe:	0f 85 f4 00 00 00    	jne    c010e3f8 <vfs_unmount_all+0x118>$/;"	l
c010e304	obj/kernel.asm	/^c010e304:	e8 eb f8 ff ff       	call   c010dbf4 <lock_vdev_list>$/;"	l
c010e309	obj/kernel.asm	/^c010e309:	c7 45 f0 38 01 15 c0 	movl   $0xc0150138,-0x10(%ebp)$/;"	l
c010e310	obj/kernel.asm	/^c010e310:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e313	obj/kernel.asm	/^c010e313:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e316	obj/kernel.asm	/^c010e316:	e9 bd 00 00 00       	jmp    c010e3d8 <vfs_unmount_all+0xf8>$/;"	l
c010e31b	obj/kernel.asm	/^c010e31b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e31e	obj/kernel.asm	/^c010e31e:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010e321	obj/kernel.asm	/^c010e321:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e324	obj/kernel.asm	/^c010e324:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e327	obj/kernel.asm	/^c010e327:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e32a	obj/kernel.asm	/^c010e32a:	85 c0                	test   %eax,%eax$/;"	l
c010e32c	obj/kernel.asm	/^c010e32c:	0f 84 a6 00 00 00    	je     c010e3d8 <vfs_unmount_all+0xf8>$/;"	l
c010e332	obj/kernel.asm	/^c010e332:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e335	obj/kernel.asm	/^c010e335:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e338	obj/kernel.asm	/^c010e338:	85 c0                	test   %eax,%eax$/;"	l
c010e33a	obj/kernel.asm	/^c010e33a:	0f 84 98 00 00 00    	je     c010e3d8 <vfs_unmount_all+0xf8>$/;"	l
c010e340	obj/kernel.asm	/^c010e340:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e343	obj/kernel.asm	/^c010e343:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e346	obj/kernel.asm	/^c010e346:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c010e349	obj/kernel.asm	/^c010e349:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010e34c	obj/kernel.asm	/^c010e34c:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010e34f	obj/kernel.asm	/^c010e34f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e352	obj/kernel.asm	/^c010e352:	52                   	push   %edx$/;"	l
c010e353	obj/kernel.asm	/^c010e353:	ff d0                	call   *%eax$/;"	l
c010e355	obj/kernel.asm	/^c010e355:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e358	obj/kernel.asm	/^c010e358:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e35b	obj/kernel.asm	/^c010e35b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010e35f	obj/kernel.asm	/^c010e35f:	74 1b                	je     c010e37c <vfs_unmount_all+0x9c>$/;"	l
c010e361	obj/kernel.asm	/^c010e361:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e364	obj/kernel.asm	/^c010e364:	8b 00                	mov    (%eax),%eax$/;"	l
c010e366	obj/kernel.asm	/^c010e366:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010e369	obj/kernel.asm	/^c010e369:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010e36c	obj/kernel.asm	/^c010e36c:	50                   	push   %eax$/;"	l
c010e36d	obj/kernel.asm	/^c010e36d:	68 30 68 11 c0       	push   $0xc0116830$/;"	l
c010e372	obj/kernel.asm	/^c010e372:	e8 f3 1f ff ff       	call   c010036a <cprintf>$/;"	l
c010e377	obj/kernel.asm	/^c010e377:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e37a	obj/kernel.asm	/^c010e37a:	eb 5c                	jmp    c010e3d8 <vfs_unmount_all+0xf8>$/;"	l
c010e37c	obj/kernel.asm	/^c010e37c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e37f	obj/kernel.asm	/^c010e37f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e382	obj/kernel.asm	/^c010e382:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010e385	obj/kernel.asm	/^c010e385:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010e388	obj/kernel.asm	/^c010e388:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010e38b	obj/kernel.asm	/^c010e38b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e38e	obj/kernel.asm	/^c010e38e:	52                   	push   %edx$/;"	l
c010e38f	obj/kernel.asm	/^c010e38f:	ff d0                	call   *%eax$/;"	l
c010e391	obj/kernel.asm	/^c010e391:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e394	obj/kernel.asm	/^c010e394:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e397	obj/kernel.asm	/^c010e397:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010e39b	obj/kernel.asm	/^c010e39b:	74 1b                	je     c010e3b8 <vfs_unmount_all+0xd8>$/;"	l
c010e39d	obj/kernel.asm	/^c010e39d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e3a0	obj/kernel.asm	/^c010e3a0:	8b 00                	mov    (%eax),%eax$/;"	l
c010e3a2	obj/kernel.asm	/^c010e3a2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010e3a5	obj/kernel.asm	/^c010e3a5:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010e3a8	obj/kernel.asm	/^c010e3a8:	50                   	push   %eax$/;"	l
c010e3a9	obj/kernel.asm	/^c010e3a9:	68 58 68 11 c0       	push   $0xc0116858$/;"	l
c010e3ae	obj/kernel.asm	/^c010e3ae:	e8 b7 1f ff ff       	call   c010036a <cprintf>$/;"	l
c010e3b3	obj/kernel.asm	/^c010e3b3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e3b6	obj/kernel.asm	/^c010e3b6:	eb 20                	jmp    c010e3d8 <vfs_unmount_all+0xf8>$/;"	l
c010e3b8	obj/kernel.asm	/^c010e3b8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e3bb	obj/kernel.asm	/^c010e3bb:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010e3c2	obj/kernel.asm	/^c010e3c2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e3c5	obj/kernel.asm	/^c010e3c5:	8b 00                	mov    (%eax),%eax$/;"	l
c010e3c7	obj/kernel.asm	/^c010e3c7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e3ca	obj/kernel.asm	/^c010e3ca:	50                   	push   %eax$/;"	l
c010e3cb	obj/kernel.asm	/^c010e3cb:	68 1c 68 11 c0       	push   $0xc011681c$/;"	l
c010e3d0	obj/kernel.asm	/^c010e3d0:	e8 95 1f ff ff       	call   c010036a <cprintf>$/;"	l
c010e3d5	obj/kernel.asm	/^c010e3d5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e3d8	obj/kernel.asm	/^c010e3d8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e3db	obj/kernel.asm	/^c010e3db:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010e3de	obj/kernel.asm	/^c010e3de:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010e3e1	obj/kernel.asm	/^c010e3e1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e3e4	obj/kernel.asm	/^c010e3e4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e3e7	obj/kernel.asm	/^c010e3e7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e3ea	obj/kernel.asm	/^c010e3ea:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010e3ed	obj/kernel.asm	/^c010e3ed:	0f 85 28 ff ff ff    	jne    c010e31b <vfs_unmount_all+0x3b>$/;"	l
c010e3f3	obj/kernel.asm	/^c010e3f3:	e8 14 f8 ff ff       	call   c010dc0c <unlock_vdev_list>$/;"	l
c010e3f8	obj/kernel.asm	/^c010e3f8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e3fd	obj/kernel.asm	/^c010e3fd:	c9                   	leave  $/;"	l
c010e3fe	obj/kernel.asm	/^c010e3fe:	c3                   	ret    $/;"	l
c010e3ff	obj/kernel.asm	/^c010e3ff <get_cwd_nolock>:$/;"	l
c010e3ff	obj/kernel.asm	/^c010e3ff:	55                   	push   %ebp$/;"	l
c010e400	obj/kernel.asm	/^c010e400:	89 e5                	mov    %esp,%ebp$/;"	l
c010e402	obj/kernel.asm	/^c010e402:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010e407	obj/kernel.asm	/^c010e407:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010e40d	obj/kernel.asm	/^c010e40d:	8b 00                	mov    (%eax),%eax$/;"	l
c010e40f	obj/kernel.asm	/^c010e40f:	5d                   	pop    %ebp$/;"	l
c010e410	obj/kernel.asm	/^c010e410:	c3                   	ret    $/;"	l
c010e411	obj/kernel.asm	/^c010e411 <set_cwd_nolock>:$/;"	l
c010e411	obj/kernel.asm	/^c010e411:	55                   	push   %ebp$/;"	l
c010e412	obj/kernel.asm	/^c010e412:	89 e5                	mov    %esp,%ebp$/;"	l
c010e414	obj/kernel.asm	/^c010e414:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010e419	obj/kernel.asm	/^c010e419:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010e41f	obj/kernel.asm	/^c010e41f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010e422	obj/kernel.asm	/^c010e422:	89 10                	mov    %edx,(%eax)$/;"	l
c010e424	obj/kernel.asm	/^c010e424:	5d                   	pop    %ebp$/;"	l
c010e425	obj/kernel.asm	/^c010e425:	c3                   	ret    $/;"	l
c010e426	obj/kernel.asm	/^c010e426 <lock_cfs>:$/;"	l
c010e426	obj/kernel.asm	/^c010e426:	55                   	push   %ebp$/;"	l
c010e427	obj/kernel.asm	/^c010e427:	89 e5                	mov    %esp,%ebp$/;"	l
c010e429	obj/kernel.asm	/^c010e429:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e42c	obj/kernel.asm	/^c010e42c:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010e431	obj/kernel.asm	/^c010e431:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010e437	obj/kernel.asm	/^c010e437:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e43a	obj/kernel.asm	/^c010e43a:	50                   	push   %eax$/;"	l
c010e43b	obj/kernel.asm	/^c010e43b:	e8 9b cc ff ff       	call   c010b0db <lock_files>$/;"	l
c010e440	obj/kernel.asm	/^c010e440:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e443	obj/kernel.asm	/^c010e443:	c9                   	leave  $/;"	l
c010e444	obj/kernel.asm	/^c010e444:	c3                   	ret    $/;"	l
c010e445	obj/kernel.asm	/^c010e445 <unlock_cfs>:$/;"	l
c010e445	obj/kernel.asm	/^c010e445:	55                   	push   %ebp$/;"	l
c010e446	obj/kernel.asm	/^c010e446:	89 e5                	mov    %esp,%ebp$/;"	l
c010e448	obj/kernel.asm	/^c010e448:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e44b	obj/kernel.asm	/^c010e44b:	a1 88 e0 14 c0       	mov    0xc014e088,%eax$/;"	l
c010e450	obj/kernel.asm	/^c010e450:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010e456	obj/kernel.asm	/^c010e456:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e459	obj/kernel.asm	/^c010e459:	50                   	push   %eax$/;"	l
c010e45a	obj/kernel.asm	/^c010e45a:	e8 96 cc ff ff       	call   c010b0f5 <unlock_files>$/;"	l
c010e45f	obj/kernel.asm	/^c010e45f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e462	obj/kernel.asm	/^c010e462:	c9                   	leave  $/;"	l
c010e463	obj/kernel.asm	/^c010e463:	c3                   	ret    $/;"	l
c010e464	obj/kernel.asm	/^c010e464 <vfs_get_curdir>:$/;"	l
c010e464	obj/kernel.asm	/^c010e464:	55                   	push   %ebp$/;"	l
c010e465	obj/kernel.asm	/^c010e465:	89 e5                	mov    %esp,%ebp$/;"	l
c010e467	obj/kernel.asm	/^c010e467:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e46a	obj/kernel.asm	/^c010e46a:	e8 90 ff ff ff       	call   c010e3ff <get_cwd_nolock>$/;"	l
c010e46f	obj/kernel.asm	/^c010e46f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e472	obj/kernel.asm	/^c010e472:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e476	obj/kernel.asm	/^c010e476:	74 1d                	je     c010e495 <vfs_get_curdir+0x31>$/;"	l
c010e478	obj/kernel.asm	/^c010e478:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e47b	obj/kernel.asm	/^c010e47b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010e47e	obj/kernel.asm	/^c010e47e:	e8 09 06 00 00       	call   c010ea8c <inode_ref_inc>$/;"	l
c010e483	obj/kernel.asm	/^c010e483:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e486	obj/kernel.asm	/^c010e486:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e489	obj/kernel.asm	/^c010e489:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010e48c	obj/kernel.asm	/^c010e48c:	89 10                	mov    %edx,(%eax)$/;"	l
c010e48e	obj/kernel.asm	/^c010e48e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e493	obj/kernel.asm	/^c010e493:	eb 05                	jmp    c010e49a <vfs_get_curdir+0x36>$/;"	l
c010e495	obj/kernel.asm	/^c010e495:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c010e49a	obj/kernel.asm	/^c010e49a:	c9                   	leave  $/;"	l
c010e49b	obj/kernel.asm	/^c010e49b:	c3                   	ret    $/;"	l
c010e49c	obj/kernel.asm	/^c010e49c <vfs_set_curdir>:$/;"	l
c010e49c	obj/kernel.asm	/^c010e49c:	55                   	push   %ebp$/;"	l
c010e49d	obj/kernel.asm	/^c010e49d:	89 e5                	mov    %esp,%ebp$/;"	l
c010e49f	obj/kernel.asm	/^c010e49f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e4a2	obj/kernel.asm	/^c010e4a2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010e4a9	obj/kernel.asm	/^c010e4a9:	e8 78 ff ff ff       	call   c010e426 <lock_cfs>$/;"	l
c010e4ae	obj/kernel.asm	/^c010e4ae:	e8 4c ff ff ff       	call   c010e3ff <get_cwd_nolock>$/;"	l
c010e4b3	obj/kernel.asm	/^c010e4b3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e4b6	obj/kernel.asm	/^c010e4b6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e4b9	obj/kernel.asm	/^c010e4b9:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010e4bc	obj/kernel.asm	/^c010e4bc:	0f 84 c2 00 00 00    	je     c010e584 <vfs_set_curdir+0xe8>$/;"	l
c010e4c2	obj/kernel.asm	/^c010e4c2:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010e4c6	obj/kernel.asm	/^c010e4c6:	0f 84 96 00 00 00    	je     c010e562 <vfs_set_curdir+0xc6>$/;"	l
c010e4cc	obj/kernel.asm	/^c010e4cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e4cf	obj/kernel.asm	/^c010e4cf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e4d2	obj/kernel.asm	/^c010e4d2:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010e4d6	obj/kernel.asm	/^c010e4d6:	74 17                	je     c010e4ef <vfs_set_curdir+0x53>$/;"	l
c010e4d8	obj/kernel.asm	/^c010e4d8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e4db	obj/kernel.asm	/^c010e4db:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010e4de	obj/kernel.asm	/^c010e4de:	85 c0                	test   %eax,%eax$/;"	l
c010e4e0	obj/kernel.asm	/^c010e4e0:	74 0d                	je     c010e4ef <vfs_set_curdir+0x53>$/;"	l
c010e4e2	obj/kernel.asm	/^c010e4e2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e4e5	obj/kernel.asm	/^c010e4e5:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010e4e8	obj/kernel.asm	/^c010e4e8:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c010e4eb	obj/kernel.asm	/^c010e4eb:	85 c0                	test   %eax,%eax$/;"	l
c010e4ed	obj/kernel.asm	/^c010e4ed:	75 16                	jne    c010e505 <vfs_set_curdir+0x69>$/;"	l
c010e4ef	obj/kernel.asm	/^c010e4ef:	68 84 68 11 c0       	push   $0xc0116884$/;"	l
c010e4f4	obj/kernel.asm	/^c010e4f4:	68 d4 68 11 c0       	push   $0xc01168d4$/;"	l
c010e4f9	obj/kernel.asm	/^c010e4f9:	6a 43                	push   $0x43$/;"	l
c010e4fb	obj/kernel.asm	/^c010e4fb:	68 e9 68 11 c0       	push   $0xc01168e9$/;"	l
c010e500	obj/kernel.asm	/^c010e500:	e8 ca 1f ff ff       	call   c01004cf <__panic>$/;"	l
c010e505	obj/kernel.asm	/^c010e505:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e508	obj/kernel.asm	/^c010e508:	68 ff 68 11 c0       	push   $0xc01168ff$/;"	l
c010e50d	obj/kernel.asm	/^c010e50d:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010e510	obj/kernel.asm	/^c010e510:	e8 49 07 00 00       	call   c010ec5e <inode_check>$/;"	l
c010e515	obj/kernel.asm	/^c010e515:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e518	obj/kernel.asm	/^c010e518:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e51b	obj/kernel.asm	/^c010e51b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010e51e	obj/kernel.asm	/^c010e51e:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c010e521	obj/kernel.asm	/^c010e521:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e524	obj/kernel.asm	/^c010e524:	8d 55 e8             	lea    -0x18(%ebp),%edx$/;"	l
c010e527	obj/kernel.asm	/^c010e527:	52                   	push   %edx$/;"	l
c010e528	obj/kernel.asm	/^c010e528:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e52b	obj/kernel.asm	/^c010e52b:	ff d0                	call   *%eax$/;"	l
c010e52d	obj/kernel.asm	/^c010e52d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e530	obj/kernel.asm	/^c010e530:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e533	obj/kernel.asm	/^c010e533:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e537	obj/kernel.asm	/^c010e537:	74 02                	je     c010e53b <vfs_set_curdir+0x9f>$/;"	l
c010e539	obj/kernel.asm	/^c010e539:	eb 49                	jmp    c010e584 <vfs_set_curdir+0xe8>$/;"	l
c010e53b	obj/kernel.asm	/^c010e53b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e53e	obj/kernel.asm	/^c010e53e:	25 00 70 00 00       	and    $0x7000,%eax$/;"	l
c010e543	obj/kernel.asm	/^c010e543:	3d 00 20 00 00       	cmp    $0x2000,%eax$/;"	l
c010e548	obj/kernel.asm	/^c010e548:	74 0a                	je     c010e554 <vfs_set_curdir+0xb8>$/;"	l
c010e54a	obj/kernel.asm	/^c010e54a:	c7 45 f4 ee ff ff ff 	movl   $0xffffffee,-0xc(%ebp)$/;"	l
c010e551	obj/kernel.asm	/^c010e551:	90                   	nop$/;"	l
c010e552	obj/kernel.asm	/^c010e552:	eb 30                	jmp    c010e584 <vfs_set_curdir+0xe8>$/;"	l
c010e554	obj/kernel.asm	/^c010e554:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e557	obj/kernel.asm	/^c010e557:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e55a	obj/kernel.asm	/^c010e55a:	e8 2d 05 00 00       	call   c010ea8c <inode_ref_inc>$/;"	l
c010e55f	obj/kernel.asm	/^c010e55f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e562	obj/kernel.asm	/^c010e562:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e565	obj/kernel.asm	/^c010e565:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e568	obj/kernel.asm	/^c010e568:	e8 a4 fe ff ff       	call   c010e411 <set_cwd_nolock>$/;"	l
c010e56d	obj/kernel.asm	/^c010e56d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e570	obj/kernel.asm	/^c010e570:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010e574	obj/kernel.asm	/^c010e574:	74 0e                	je     c010e584 <vfs_set_curdir+0xe8>$/;"	l
c010e576	obj/kernel.asm	/^c010e576:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e579	obj/kernel.asm	/^c010e579:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010e57c	obj/kernel.asm	/^c010e57c:	e8 25 05 00 00       	call   c010eaa6 <inode_ref_dec>$/;"	l
c010e581	obj/kernel.asm	/^c010e581:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e584	obj/kernel.asm	/^c010e584:	e8 bc fe ff ff       	call   c010e445 <unlock_cfs>$/;"	l
c010e589	obj/kernel.asm	/^c010e589:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e58c	obj/kernel.asm	/^c010e58c:	c9                   	leave  $/;"	l
c010e58d	obj/kernel.asm	/^c010e58d:	c3                   	ret    $/;"	l
c010e58e	obj/kernel.asm	/^c010e58e <vfs_chdir>:$/;"	l
c010e58e	obj/kernel.asm	/^c010e58e:	55                   	push   %ebp$/;"	l
c010e58f	obj/kernel.asm	/^c010e58f:	89 e5                	mov    %esp,%ebp$/;"	l
c010e591	obj/kernel.asm	/^c010e591:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e594	obj/kernel.asm	/^c010e594:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e597	obj/kernel.asm	/^c010e597:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010e59a	obj/kernel.asm	/^c010e59a:	50                   	push   %eax$/;"	l
c010e59b	obj/kernel.asm	/^c010e59b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e59e	obj/kernel.asm	/^c010e59e:	e8 02 03 00 00       	call   c010e8a5 <vfs_lookup>$/;"	l
c010e5a3	obj/kernel.asm	/^c010e5a3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e5a6	obj/kernel.asm	/^c010e5a6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e5a9	obj/kernel.asm	/^c010e5a9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e5ad	obj/kernel.asm	/^c010e5ad:	75 21                	jne    c010e5d0 <vfs_chdir+0x42>$/;"	l
c010e5af	obj/kernel.asm	/^c010e5af:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e5b2	obj/kernel.asm	/^c010e5b2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e5b5	obj/kernel.asm	/^c010e5b5:	50                   	push   %eax$/;"	l
c010e5b6	obj/kernel.asm	/^c010e5b6:	e8 e1 fe ff ff       	call   c010e49c <vfs_set_curdir>$/;"	l
c010e5bb	obj/kernel.asm	/^c010e5bb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e5be	obj/kernel.asm	/^c010e5be:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e5c1	obj/kernel.asm	/^c010e5c1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e5c4	obj/kernel.asm	/^c010e5c4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e5c7	obj/kernel.asm	/^c010e5c7:	50                   	push   %eax$/;"	l
c010e5c8	obj/kernel.asm	/^c010e5c8:	e8 d9 04 00 00       	call   c010eaa6 <inode_ref_dec>$/;"	l
c010e5cd	obj/kernel.asm	/^c010e5cd:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e5d0	obj/kernel.asm	/^c010e5d0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e5d3	obj/kernel.asm	/^c010e5d3:	c9                   	leave  $/;"	l
c010e5d4	obj/kernel.asm	/^c010e5d4:	c3                   	ret    $/;"	l
c010e5d5	obj/kernel.asm	/^c010e5d5 <vfs_getcwd>:$/;"	l
c010e5d5	obj/kernel.asm	/^c010e5d5:	55                   	push   %ebp$/;"	l
c010e5d6	obj/kernel.asm	/^c010e5d6:	89 e5                	mov    %esp,%ebp$/;"	l
c010e5d8	obj/kernel.asm	/^c010e5d8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e5db	obj/kernel.asm	/^c010e5db:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e5de	obj/kernel.asm	/^c010e5de:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c010e5e1	obj/kernel.asm	/^c010e5e1:	50                   	push   %eax$/;"	l
c010e5e2	obj/kernel.asm	/^c010e5e2:	e8 7d fe ff ff       	call   c010e464 <vfs_get_curdir>$/;"	l
c010e5e7	obj/kernel.asm	/^c010e5e7:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e5ea	obj/kernel.asm	/^c010e5ea:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e5ed	obj/kernel.asm	/^c010e5ed:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e5f1	obj/kernel.asm	/^c010e5f1:	74 08                	je     c010e5fb <vfs_getcwd+0x26>$/;"	l
c010e5f3	obj/kernel.asm	/^c010e5f3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e5f6	obj/kernel.asm	/^c010e5f6:	e9 07 01 00 00       	jmp    c010e702 <vfs_getcwd+0x12d>$/;"	l
c010e5fb	obj/kernel.asm	/^c010e5fb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e5fe	obj/kernel.asm	/^c010e5fe:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c010e601	obj/kernel.asm	/^c010e601:	85 c0                	test   %eax,%eax$/;"	l
c010e603	obj/kernel.asm	/^c010e603:	75 16                	jne    c010e61b <vfs_getcwd+0x46>$/;"	l
c010e605	obj/kernel.asm	/^c010e605:	68 07 69 11 c0       	push   $0xc0116907$/;"	l
c010e60a	obj/kernel.asm	/^c010e60a:	68 d4 68 11 c0       	push   $0xc01168d4$/;"	l
c010e60f	obj/kernel.asm	/^c010e60f:	6a 6e                	push   $0x6e$/;"	l
c010e611	obj/kernel.asm	/^c010e611:	68 e9 68 11 c0       	push   $0xc01168e9$/;"	l
c010e616	obj/kernel.asm	/^c010e616:	e8 b4 1e ff ff       	call   c01004cf <__panic>$/;"	l
c010e61b	obj/kernel.asm	/^c010e61b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e61e	obj/kernel.asm	/^c010e61e:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c010e621	obj/kernel.asm	/^c010e621:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e624	obj/kernel.asm	/^c010e624:	50                   	push   %eax$/;"	l
c010e625	obj/kernel.asm	/^c010e625:	e8 c3 f7 ff ff       	call   c010dded <vfs_get_devname>$/;"	l
c010e62a	obj/kernel.asm	/^c010e62a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e62d	obj/kernel.asm	/^c010e62d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e630	obj/kernel.asm	/^c010e630:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e633	obj/kernel.asm	/^c010e633:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010e636	obj/kernel.asm	/^c010e636:	e8 57 46 00 00       	call   c0112c92 <strlen>$/;"	l
c010e63b	obj/kernel.asm	/^c010e63b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e63e	obj/kernel.asm	/^c010e63e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e641	obj/kernel.asm	/^c010e641:	6a 00                	push   $0x0$/;"	l
c010e643	obj/kernel.asm	/^c010e643:	6a 01                	push   $0x1$/;"	l
c010e645	obj/kernel.asm	/^c010e645:	50                   	push   %eax$/;"	l
c010e646	obj/kernel.asm	/^c010e646:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010e649	obj/kernel.asm	/^c010e649:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e64c	obj/kernel.asm	/^c010e64c:	e8 f5 c8 ff ff       	call   c010af46 <iobuf_move>$/;"	l
c010e651	obj/kernel.asm	/^c010e651:	83 c4 20             	add    $0x20,%esp$/;"	l
c010e654	obj/kernel.asm	/^c010e654:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e657	obj/kernel.asm	/^c010e657:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e65b	obj/kernel.asm	/^c010e65b:	74 05                	je     c010e662 <vfs_getcwd+0x8d>$/;"	l
c010e65d	obj/kernel.asm	/^c010e65d:	e9 8e 00 00 00       	jmp    c010e6f0 <vfs_getcwd+0x11b>$/;"	l
c010e662	obj/kernel.asm	/^c010e662:	c6 45 e7 3a          	movb   $0x3a,-0x19(%ebp)$/;"	l
c010e666	obj/kernel.asm	/^c010e666:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e669	obj/kernel.asm	/^c010e669:	6a 00                	push   $0x0$/;"	l
c010e66b	obj/kernel.asm	/^c010e66b:	6a 01                	push   $0x1$/;"	l
c010e66d	obj/kernel.asm	/^c010e66d:	6a 01                	push   $0x1$/;"	l
c010e66f	obj/kernel.asm	/^c010e66f:	8d 45 e7             	lea    -0x19(%ebp),%eax$/;"	l
c010e672	obj/kernel.asm	/^c010e672:	50                   	push   %eax$/;"	l
c010e673	obj/kernel.asm	/^c010e673:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e676	obj/kernel.asm	/^c010e676:	e8 cb c8 ff ff       	call   c010af46 <iobuf_move>$/;"	l
c010e67b	obj/kernel.asm	/^c010e67b:	83 c4 20             	add    $0x20,%esp$/;"	l
c010e67e	obj/kernel.asm	/^c010e67e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e681	obj/kernel.asm	/^c010e681:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e685	obj/kernel.asm	/^c010e685:	74 02                	je     c010e689 <vfs_getcwd+0xb4>$/;"	l
c010e687	obj/kernel.asm	/^c010e687:	eb 67                	jmp    c010e6f0 <vfs_getcwd+0x11b>$/;"	l
c010e689	obj/kernel.asm	/^c010e689:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e68c	obj/kernel.asm	/^c010e68c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e68f	obj/kernel.asm	/^c010e68f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010e693	obj/kernel.asm	/^c010e693:	74 17                	je     c010e6ac <vfs_getcwd+0xd7>$/;"	l
c010e695	obj/kernel.asm	/^c010e695:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e698	obj/kernel.asm	/^c010e698:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010e69b	obj/kernel.asm	/^c010e69b:	85 c0                	test   %eax,%eax$/;"	l
c010e69d	obj/kernel.asm	/^c010e69d:	74 0d                	je     c010e6ac <vfs_getcwd+0xd7>$/;"	l
c010e69f	obj/kernel.asm	/^c010e69f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e6a2	obj/kernel.asm	/^c010e6a2:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010e6a5	obj/kernel.asm	/^c010e6a5:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010e6a8	obj/kernel.asm	/^c010e6a8:	85 c0                	test   %eax,%eax$/;"	l
c010e6aa	obj/kernel.asm	/^c010e6aa:	75 16                	jne    c010e6c2 <vfs_getcwd+0xed>$/;"	l
c010e6ac	obj/kernel.asm	/^c010e6ac:	68 1c 69 11 c0       	push   $0xc011691c$/;"	l
c010e6b1	obj/kernel.asm	/^c010e6b1:	68 d4 68 11 c0       	push   $0xc01168d4$/;"	l
c010e6b6	obj/kernel.asm	/^c010e6b6:	6a 78                	push   $0x78$/;"	l
c010e6b8	obj/kernel.asm	/^c010e6b8:	68 e9 68 11 c0       	push   $0xc01168e9$/;"	l
c010e6bd	obj/kernel.asm	/^c010e6bd:	e8 0d 1e ff ff       	call   c01004cf <__panic>$/;"	l
c010e6c2	obj/kernel.asm	/^c010e6c2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e6c5	obj/kernel.asm	/^c010e6c5:	68 6d 69 11 c0       	push   $0xc011696d$/;"	l
c010e6ca	obj/kernel.asm	/^c010e6ca:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010e6cd	obj/kernel.asm	/^c010e6cd:	e8 8c 05 00 00       	call   c010ec5e <inode_check>$/;"	l
c010e6d2	obj/kernel.asm	/^c010e6d2:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e6d5	obj/kernel.asm	/^c010e6d5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e6d8	obj/kernel.asm	/^c010e6d8:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010e6db	obj/kernel.asm	/^c010e6db:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010e6de	obj/kernel.asm	/^c010e6de:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010e6e1	obj/kernel.asm	/^c010e6e1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e6e4	obj/kernel.asm	/^c010e6e4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e6e7	obj/kernel.asm	/^c010e6e7:	52                   	push   %edx$/;"	l
c010e6e8	obj/kernel.asm	/^c010e6e8:	ff d0                	call   *%eax$/;"	l
c010e6ea	obj/kernel.asm	/^c010e6ea:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e6ed	obj/kernel.asm	/^c010e6ed:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e6f0	obj/kernel.asm	/^c010e6f0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e6f3	obj/kernel.asm	/^c010e6f3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e6f6	obj/kernel.asm	/^c010e6f6:	50                   	push   %eax$/;"	l
c010e6f7	obj/kernel.asm	/^c010e6f7:	e8 aa 03 00 00       	call   c010eaa6 <inode_ref_dec>$/;"	l
c010e6fc	obj/kernel.asm	/^c010e6fc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e6ff	obj/kernel.asm	/^c010e6ff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e702	obj/kernel.asm	/^c010e702:	c9                   	leave  $/;"	l
c010e703	obj/kernel.asm	/^c010e703:	c3                   	ret    $/;"	l
c010e704	obj/kernel.asm	/^c010e704 <get_device>:$/;"	l
c010e704	obj/kernel.asm	/^c010e704:	55                   	push   %ebp$/;"	l
c010e705	obj/kernel.asm	/^c010e705:	89 e5                	mov    %esp,%ebp$/;"	l
c010e707	obj/kernel.asm	/^c010e707:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e70a	obj/kernel.asm	/^c010e70a:	c7 45 f0 ff ff ff ff 	movl   $0xffffffff,-0x10(%ebp)$/;"	l
c010e711	obj/kernel.asm	/^c010e711:	c7 45 ec ff ff ff ff 	movl   $0xffffffff,-0x14(%ebp)$/;"	l
c010e718	obj/kernel.asm	/^c010e718:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010e71f	obj/kernel.asm	/^c010e71f:	eb 32                	jmp    c010e753 <get_device+0x4f>$/;"	l
c010e721	obj/kernel.asm	/^c010e721:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010e724	obj/kernel.asm	/^c010e724:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e727	obj/kernel.asm	/^c010e727:	01 d0                	add    %edx,%eax$/;"	l
c010e729	obj/kernel.asm	/^c010e729:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010e72c	obj/kernel.asm	/^c010e72c:	3c 3a                	cmp    $0x3a,%al$/;"	l
c010e72e	obj/kernel.asm	/^c010e72e:	75 08                	jne    c010e738 <get_device+0x34>$/;"	l
c010e730	obj/kernel.asm	/^c010e730:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e733	obj/kernel.asm	/^c010e733:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e736	obj/kernel.asm	/^c010e736:	eb 2a                	jmp    c010e762 <get_device+0x5e>$/;"	l
c010e738	obj/kernel.asm	/^c010e738:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010e73b	obj/kernel.asm	/^c010e73b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e73e	obj/kernel.asm	/^c010e73e:	01 d0                	add    %edx,%eax$/;"	l
c010e740	obj/kernel.asm	/^c010e740:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010e743	obj/kernel.asm	/^c010e743:	3c 2f                	cmp    $0x2f,%al$/;"	l
c010e745	obj/kernel.asm	/^c010e745:	75 08                	jne    c010e74f <get_device+0x4b>$/;"	l
c010e747	obj/kernel.asm	/^c010e747:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e74a	obj/kernel.asm	/^c010e74a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e74d	obj/kernel.asm	/^c010e74d:	eb 13                	jmp    c010e762 <get_device+0x5e>$/;"	l
c010e74f	obj/kernel.asm	/^c010e74f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010e753	obj/kernel.asm	/^c010e753:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010e756	obj/kernel.asm	/^c010e756:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e759	obj/kernel.asm	/^c010e759:	01 d0                	add    %edx,%eax$/;"	l
c010e75b	obj/kernel.asm	/^c010e75b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010e75e	obj/kernel.asm	/^c010e75e:	84 c0                	test   %al,%al$/;"	l
c010e760	obj/kernel.asm	/^c010e760:	75 bf                	jne    c010e721 <get_device+0x1d>$/;"	l
c010e762	obj/kernel.asm	/^c010e762:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010e766	obj/kernel.asm	/^c010e766:	79 21                	jns    c010e789 <get_device+0x85>$/;"	l
c010e768	obj/kernel.asm	/^c010e768:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010e76c	obj/kernel.asm	/^c010e76c:	74 1b                	je     c010e789 <get_device+0x85>$/;"	l
c010e76e	obj/kernel.asm	/^c010e76e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e771	obj/kernel.asm	/^c010e771:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010e774	obj/kernel.asm	/^c010e774:	89 10                	mov    %edx,(%eax)$/;"	l
c010e776	obj/kernel.asm	/^c010e776:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e779	obj/kernel.asm	/^c010e779:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010e77c	obj/kernel.asm	/^c010e77c:	e8 e3 fc ff ff       	call   c010e464 <vfs_get_curdir>$/;"	l
c010e781	obj/kernel.asm	/^c010e781:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e784	obj/kernel.asm	/^c010e784:	e9 1a 01 00 00       	jmp    c010e8a3 <get_device+0x19f>$/;"	l
c010e789	obj/kernel.asm	/^c010e789:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010e78d	obj/kernel.asm	/^c010e78d:	7e 41                	jle    c010e7d0 <get_device+0xcc>$/;"	l
c010e78f	obj/kernel.asm	/^c010e78f:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010e792	obj/kernel.asm	/^c010e792:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e795	obj/kernel.asm	/^c010e795:	01 d0                	add    %edx,%eax$/;"	l
c010e797	obj/kernel.asm	/^c010e797:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c010e79a	obj/kernel.asm	/^c010e79a:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c010e79e	obj/kernel.asm	/^c010e79e:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010e7a1	obj/kernel.asm	/^c010e7a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e7a4	obj/kernel.asm	/^c010e7a4:	01 d0                	add    %edx,%eax$/;"	l
c010e7a6	obj/kernel.asm	/^c010e7a6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010e7a9	obj/kernel.asm	/^c010e7a9:	3c 2f                	cmp    $0x2f,%al$/;"	l
c010e7ab	obj/kernel.asm	/^c010e7ab:	74 ed                	je     c010e79a <get_device+0x96>$/;"	l
c010e7ad	obj/kernel.asm	/^c010e7ad:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010e7b0	obj/kernel.asm	/^c010e7b0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e7b3	obj/kernel.asm	/^c010e7b3:	01 c2                	add    %eax,%edx$/;"	l
c010e7b5	obj/kernel.asm	/^c010e7b5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e7b8	obj/kernel.asm	/^c010e7b8:	89 10                	mov    %edx,(%eax)$/;"	l
c010e7ba	obj/kernel.asm	/^c010e7ba:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e7bd	obj/kernel.asm	/^c010e7bd:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010e7c0	obj/kernel.asm	/^c010e7c0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e7c3	obj/kernel.asm	/^c010e7c3:	e8 0e f5 ff ff       	call   c010dcd6 <vfs_get_root>$/;"	l
c010e7c8	obj/kernel.asm	/^c010e7c8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e7cb	obj/kernel.asm	/^c010e7cb:	e9 d3 00 00 00       	jmp    c010e8a3 <get_device+0x19f>$/;"	l
c010e7d0	obj/kernel.asm	/^c010e7d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e7d3	obj/kernel.asm	/^c010e7d3:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010e7d6	obj/kernel.asm	/^c010e7d6:	3c 2f                	cmp    $0x2f,%al$/;"	l
c010e7d8	obj/kernel.asm	/^c010e7d8:	75 23                	jne    c010e7fd <get_device+0xf9>$/;"	l
c010e7da	obj/kernel.asm	/^c010e7da:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e7dd	obj/kernel.asm	/^c010e7dd:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010e7e0	obj/kernel.asm	/^c010e7e0:	e8 99 09 00 00       	call   c010f17e <vfs_get_bootfs>$/;"	l
c010e7e5	obj/kernel.asm	/^c010e7e5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e7e8	obj/kernel.asm	/^c010e7e8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e7eb	obj/kernel.asm	/^c010e7eb:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010e7ef	obj/kernel.asm	/^c010e7ef:	0f 84 93 00 00 00    	je     c010e888 <get_device+0x184>$/;"	l
c010e7f5	obj/kernel.asm	/^c010e7f5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e7f8	obj/kernel.asm	/^c010e7f8:	e9 a6 00 00 00       	jmp    c010e8a3 <get_device+0x19f>$/;"	l
c010e7fd	obj/kernel.asm	/^c010e7fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e800	obj/kernel.asm	/^c010e800:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010e803	obj/kernel.asm	/^c010e803:	3c 3a                	cmp    $0x3a,%al$/;"	l
c010e805	obj/kernel.asm	/^c010e805:	74 16                	je     c010e81d <get_device+0x119>$/;"	l
c010e807	obj/kernel.asm	/^c010e807:	68 78 69 11 c0       	push   $0xc0116978$/;"	l
c010e80c	obj/kernel.asm	/^c010e80c:	68 85 69 11 c0       	push   $0xc0116985$/;"	l
c010e811	obj/kernel.asm	/^c010e811:	6a 33                	push   $0x33$/;"	l
c010e813	obj/kernel.asm	/^c010e813:	68 9a 69 11 c0       	push   $0xc011699a$/;"	l
c010e818	obj/kernel.asm	/^c010e818:	e8 b2 1c ff ff       	call   c01004cf <__panic>$/;"	l
c010e81d	obj/kernel.asm	/^c010e81d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e820	obj/kernel.asm	/^c010e820:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c010e823	obj/kernel.asm	/^c010e823:	50                   	push   %eax$/;"	l
c010e824	obj/kernel.asm	/^c010e824:	e8 3b fc ff ff       	call   c010e464 <vfs_get_curdir>$/;"	l
c010e829	obj/kernel.asm	/^c010e829:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e82c	obj/kernel.asm	/^c010e82c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e82f	obj/kernel.asm	/^c010e82f:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010e833	obj/kernel.asm	/^c010e833:	74 05                	je     c010e83a <get_device+0x136>$/;"	l
c010e835	obj/kernel.asm	/^c010e835:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e838	obj/kernel.asm	/^c010e838:	eb 69                	jmp    c010e8a3 <get_device+0x19f>$/;"	l
c010e83a	obj/kernel.asm	/^c010e83a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e83d	obj/kernel.asm	/^c010e83d:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c010e840	obj/kernel.asm	/^c010e840:	85 c0                	test   %eax,%eax$/;"	l
c010e842	obj/kernel.asm	/^c010e842:	75 16                	jne    c010e85a <get_device+0x156>$/;"	l
c010e844	obj/kernel.asm	/^c010e844:	68 b2 69 11 c0       	push   $0xc01169b2$/;"	l
c010e849	obj/kernel.asm	/^c010e849:	68 85 69 11 c0       	push   $0xc0116985$/;"	l
c010e84e	obj/kernel.asm	/^c010e84e:	6a 39                	push   $0x39$/;"	l
c010e850	obj/kernel.asm	/^c010e850:	68 9a 69 11 c0       	push   $0xc011699a$/;"	l
c010e855	obj/kernel.asm	/^c010e855:	e8 75 1c ff ff       	call   c01004cf <__panic>$/;"	l
c010e85a	obj/kernel.asm	/^c010e85a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e85d	obj/kernel.asm	/^c010e85d:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c010e860	obj/kernel.asm	/^c010e860:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c010e863	obj/kernel.asm	/^c010e863:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010e866	obj/kernel.asm	/^c010e866:	8b 52 38             	mov    0x38(%edx),%edx$/;"	l
c010e869	obj/kernel.asm	/^c010e869:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e86c	obj/kernel.asm	/^c010e86c:	52                   	push   %edx$/;"	l
c010e86d	obj/kernel.asm	/^c010e86d:	ff d0                	call   *%eax$/;"	l
c010e86f	obj/kernel.asm	/^c010e86f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e872	obj/kernel.asm	/^c010e872:	89 c2                	mov    %eax,%edx$/;"	l
c010e874	obj/kernel.asm	/^c010e874:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010e877	obj/kernel.asm	/^c010e877:	89 10                	mov    %edx,(%eax)$/;"	l
c010e879	obj/kernel.asm	/^c010e879:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e87c	obj/kernel.asm	/^c010e87c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e87f	obj/kernel.asm	/^c010e87f:	50                   	push   %eax$/;"	l
c010e880	obj/kernel.asm	/^c010e880:	e8 21 02 00 00       	call   c010eaa6 <inode_ref_dec>$/;"	l
c010e885	obj/kernel.asm	/^c010e885:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e888	obj/kernel.asm	/^c010e888:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010e88c	obj/kernel.asm	/^c010e88c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e88f	obj/kernel.asm	/^c010e88f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010e892	obj/kernel.asm	/^c010e892:	3c 2f                	cmp    $0x2f,%al$/;"	l
c010e894	obj/kernel.asm	/^c010e894:	74 f2                	je     c010e888 <get_device+0x184>$/;"	l
c010e896	obj/kernel.asm	/^c010e896:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e899	obj/kernel.asm	/^c010e899:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010e89c	obj/kernel.asm	/^c010e89c:	89 10                	mov    %edx,(%eax)$/;"	l
c010e89e	obj/kernel.asm	/^c010e89e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e8a3	obj/kernel.asm	/^c010e8a3:	c9                   	leave  $/;"	l
c010e8a4	obj/kernel.asm	/^c010e8a4:	c3                   	ret    $/;"	l
c010e8a5	obj/kernel.asm	/^c010e8a5 <vfs_lookup>:$/;"	l
c010e8a5	obj/kernel.asm	/^c010e8a5:	55                   	push   %ebp$/;"	l
c010e8a6	obj/kernel.asm	/^c010e8a6:	89 e5                	mov    %esp,%ebp$/;"	l
c010e8a8	obj/kernel.asm	/^c010e8a8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e8ab	obj/kernel.asm	/^c010e8ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e8ae	obj/kernel.asm	/^c010e8ae:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010e8b1	obj/kernel.asm	/^c010e8b1:	8d 55 ec             	lea    -0x14(%ebp),%edx$/;"	l
c010e8b4	obj/kernel.asm	/^c010e8b4:	52                   	push   %edx$/;"	l
c010e8b5	obj/kernel.asm	/^c010e8b5:	8d 55 08             	lea    0x8(%ebp),%edx$/;"	l
c010e8b8	obj/kernel.asm	/^c010e8b8:	52                   	push   %edx$/;"	l
c010e8b9	obj/kernel.asm	/^c010e8b9:	50                   	push   %eax$/;"	l
c010e8ba	obj/kernel.asm	/^c010e8ba:	e8 45 fe ff ff       	call   c010e704 <get_device>$/;"	l
c010e8bf	obj/kernel.asm	/^c010e8bf:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e8c2	obj/kernel.asm	/^c010e8c2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e8c5	obj/kernel.asm	/^c010e8c5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e8c9	obj/kernel.asm	/^c010e8c9:	74 08                	je     c010e8d3 <vfs_lookup+0x2e>$/;"	l
c010e8cb	obj/kernel.asm	/^c010e8cb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e8ce	obj/kernel.asm	/^c010e8ce:	e9 96 00 00 00       	jmp    c010e969 <vfs_lookup+0xc4>$/;"	l
c010e8d3	obj/kernel.asm	/^c010e8d3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e8d6	obj/kernel.asm	/^c010e8d6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010e8d9	obj/kernel.asm	/^c010e8d9:	84 c0                	test   %al,%al$/;"	l
c010e8db	obj/kernel.asm	/^c010e8db:	74 7f                	je     c010e95c <vfs_lookup+0xb7>$/;"	l
c010e8dd	obj/kernel.asm	/^c010e8dd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e8e0	obj/kernel.asm	/^c010e8e0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e8e3	obj/kernel.asm	/^c010e8e3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010e8e7	obj/kernel.asm	/^c010e8e7:	74 17                	je     c010e900 <vfs_lookup+0x5b>$/;"	l
c010e8e9	obj/kernel.asm	/^c010e8e9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e8ec	obj/kernel.asm	/^c010e8ec:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010e8ef	obj/kernel.asm	/^c010e8ef:	85 c0                	test   %eax,%eax$/;"	l
c010e8f1	obj/kernel.asm	/^c010e8f1:	74 0d                	je     c010e900 <vfs_lookup+0x5b>$/;"	l
c010e8f3	obj/kernel.asm	/^c010e8f3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e8f6	obj/kernel.asm	/^c010e8f6:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010e8f9	obj/kernel.asm	/^c010e8f9:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c010e8fc	obj/kernel.asm	/^c010e8fc:	85 c0                	test   %eax,%eax$/;"	l
c010e8fe	obj/kernel.asm	/^c010e8fe:	75 16                	jne    c010e916 <vfs_lookup+0x71>$/;"	l
c010e900	obj/kernel.asm	/^c010e900:	68 c8 69 11 c0       	push   $0xc01169c8$/;"	l
c010e905	obj/kernel.asm	/^c010e905:	68 85 69 11 c0       	push   $0xc0116985$/;"	l
c010e90a	obj/kernel.asm	/^c010e90a:	6a 4f                	push   $0x4f$/;"	l
c010e90c	obj/kernel.asm	/^c010e90c:	68 9a 69 11 c0       	push   $0xc011699a$/;"	l
c010e911	obj/kernel.asm	/^c010e911:	e8 b9 1b ff ff       	call   c01004cf <__panic>$/;"	l
c010e916	obj/kernel.asm	/^c010e916:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e919	obj/kernel.asm	/^c010e919:	68 17 6a 11 c0       	push   $0xc0116a17$/;"	l
c010e91e	obj/kernel.asm	/^c010e91e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010e921	obj/kernel.asm	/^c010e921:	e8 38 03 00 00       	call   c010ec5e <inode_check>$/;"	l
c010e926	obj/kernel.asm	/^c010e926:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e929	obj/kernel.asm	/^c010e929:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e92c	obj/kernel.asm	/^c010e92c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010e92f	obj/kernel.asm	/^c010e92f:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c010e932	obj/kernel.asm	/^c010e932:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c010e935	obj/kernel.asm	/^c010e935:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010e938	obj/kernel.asm	/^c010e938:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010e93b	obj/kernel.asm	/^c010e93b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010e93e	obj/kernel.asm	/^c010e93e:	51                   	push   %ecx$/;"	l
c010e93f	obj/kernel.asm	/^c010e93f:	52                   	push   %edx$/;"	l
c010e940	obj/kernel.asm	/^c010e940:	ff d0                	call   *%eax$/;"	l
c010e942	obj/kernel.asm	/^c010e942:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e945	obj/kernel.asm	/^c010e945:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e948	obj/kernel.asm	/^c010e948:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e94b	obj/kernel.asm	/^c010e94b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e94e	obj/kernel.asm	/^c010e94e:	50                   	push   %eax$/;"	l
c010e94f	obj/kernel.asm	/^c010e94f:	e8 52 01 00 00       	call   c010eaa6 <inode_ref_dec>$/;"	l
c010e954	obj/kernel.asm	/^c010e954:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e957	obj/kernel.asm	/^c010e957:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e95a	obj/kernel.asm	/^c010e95a:	eb 0d                	jmp    c010e969 <vfs_lookup+0xc4>$/;"	l
c010e95c	obj/kernel.asm	/^c010e95c:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010e95f	obj/kernel.asm	/^c010e95f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e962	obj/kernel.asm	/^c010e962:	89 10                	mov    %edx,(%eax)$/;"	l
c010e964	obj/kernel.asm	/^c010e964:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e969	obj/kernel.asm	/^c010e969:	c9                   	leave  $/;"	l
c010e96a	obj/kernel.asm	/^c010e96a:	c3                   	ret    $/;"	l
c010e96b	obj/kernel.asm	/^c010e96b <vfs_lookup_parent>:$/;"	l
c010e96b	obj/kernel.asm	/^c010e96b:	55                   	push   %ebp$/;"	l
c010e96c	obj/kernel.asm	/^c010e96c:	89 e5                	mov    %esp,%ebp$/;"	l
c010e96e	obj/kernel.asm	/^c010e96e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e971	obj/kernel.asm	/^c010e971:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e974	obj/kernel.asm	/^c010e974:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010e977	obj/kernel.asm	/^c010e977:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c010e97a	obj/kernel.asm	/^c010e97a:	52                   	push   %edx$/;"	l
c010e97b	obj/kernel.asm	/^c010e97b:	8d 55 08             	lea    0x8(%ebp),%edx$/;"	l
c010e97e	obj/kernel.asm	/^c010e97e:	52                   	push   %edx$/;"	l
c010e97f	obj/kernel.asm	/^c010e97f:	50                   	push   %eax$/;"	l
c010e980	obj/kernel.asm	/^c010e980:	e8 7f fd ff ff       	call   c010e704 <get_device>$/;"	l
c010e985	obj/kernel.asm	/^c010e985:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e988	obj/kernel.asm	/^c010e988:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e98b	obj/kernel.asm	/^c010e98b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e98f	obj/kernel.asm	/^c010e98f:	74 05                	je     c010e996 <vfs_lookup_parent+0x2b>$/;"	l
c010e991	obj/kernel.asm	/^c010e991:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e994	obj/kernel.asm	/^c010e994:	eb 15                	jmp    c010e9ab <vfs_lookup_parent+0x40>$/;"	l
c010e996	obj/kernel.asm	/^c010e996:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010e999	obj/kernel.asm	/^c010e999:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010e99c	obj/kernel.asm	/^c010e99c:	89 10                	mov    %edx,(%eax)$/;"	l
c010e99e	obj/kernel.asm	/^c010e99e:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010e9a1	obj/kernel.asm	/^c010e9a1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e9a4	obj/kernel.asm	/^c010e9a4:	89 10                	mov    %edx,(%eax)$/;"	l
c010e9a6	obj/kernel.asm	/^c010e9a6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e9ab	obj/kernel.asm	/^c010e9ab:	c9                   	leave  $/;"	l
c010e9ac	obj/kernel.asm	/^c010e9ac:	c3                   	ret    $/;"	l
c010e9ad	obj/kernel.asm	/^c010e9ad <inode_ref_count>:$/;"	l
c010e9ad	obj/kernel.asm	/^c010e9ad:	55                   	push   %ebp$/;"	l
c010e9ae	obj/kernel.asm	/^c010e9ae:	89 e5                	mov    %esp,%ebp$/;"	l
c010e9b0	obj/kernel.asm	/^c010e9b0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e9b3	obj/kernel.asm	/^c010e9b3:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010e9b6	obj/kernel.asm	/^c010e9b6:	5d                   	pop    %ebp$/;"	l
c010e9b7	obj/kernel.asm	/^c010e9b7:	c3                   	ret    $/;"	l
c010e9b8	obj/kernel.asm	/^c010e9b8 <inode_open_count>:$/;"	l
c010e9b8	obj/kernel.asm	/^c010e9b8:	55                   	push   %ebp$/;"	l
c010e9b9	obj/kernel.asm	/^c010e9b9:	89 e5                	mov    %esp,%ebp$/;"	l
c010e9bb	obj/kernel.asm	/^c010e9bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e9be	obj/kernel.asm	/^c010e9be:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010e9c1	obj/kernel.asm	/^c010e9c1:	5d                   	pop    %ebp$/;"	l
c010e9c2	obj/kernel.asm	/^c010e9c2:	c3                   	ret    $/;"	l
c010e9c3	obj/kernel.asm	/^c010e9c3 <__alloc_inode>:$/;"	l
c010e9c3	obj/kernel.asm	/^c010e9c3:	55                   	push   %ebp$/;"	l
c010e9c4	obj/kernel.asm	/^c010e9c4:	89 e5                	mov    %esp,%ebp$/;"	l
c010e9c6	obj/kernel.asm	/^c010e9c6:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e9c9	obj/kernel.asm	/^c010e9c9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e9cc	obj/kernel.asm	/^c010e9cc:	6a 40                	push   $0x40$/;"	l
c010e9ce	obj/kernel.asm	/^c010e9ce:	e8 cc 8a ff ff       	call   c010749f <kmalloc>$/;"	l
c010e9d3	obj/kernel.asm	/^c010e9d3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e9d6	obj/kernel.asm	/^c010e9d6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e9d9	obj/kernel.asm	/^c010e9d9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e9dd	obj/kernel.asm	/^c010e9dd:	74 09                	je     c010e9e8 <__alloc_inode+0x25>$/;"	l
c010e9df	obj/kernel.asm	/^c010e9df:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010e9e2	obj/kernel.asm	/^c010e9e2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e9e5	obj/kernel.asm	/^c010e9e5:	89 50 2c             	mov    %edx,0x2c(%eax)$/;"	l
c010e9e8	obj/kernel.asm	/^c010e9e8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e9eb	obj/kernel.asm	/^c010e9eb:	c9                   	leave  $/;"	l
c010e9ec	obj/kernel.asm	/^c010e9ec:	c3                   	ret    $/;"	l
c010e9ed	obj/kernel.asm	/^c010e9ed <inode_init>:$/;"	l
c010e9ed	obj/kernel.asm	/^c010e9ed:	55                   	push   %ebp$/;"	l
c010e9ee	obj/kernel.asm	/^c010e9ee:	89 e5                	mov    %esp,%ebp$/;"	l
c010e9f0	obj/kernel.asm	/^c010e9f0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e9f3	obj/kernel.asm	/^c010e9f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e9f6	obj/kernel.asm	/^c010e9f6:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)$/;"	l
c010e9fd	obj/kernel.asm	/^c010e9fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ea00	obj/kernel.asm	/^c010ea00:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)$/;"	l
c010ea07	obj/kernel.asm	/^c010ea07:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ea0a	obj/kernel.asm	/^c010ea0a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010ea0d	obj/kernel.asm	/^c010ea0d:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c010ea10	obj/kernel.asm	/^c010ea10:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ea13	obj/kernel.asm	/^c010ea13:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010ea16	obj/kernel.asm	/^c010ea16:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
c010ea19	obj/kernel.asm	/^c010ea19:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ea1c	obj/kernel.asm	/^c010ea1c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ea1f	obj/kernel.asm	/^c010ea1f:	e8 68 00 00 00       	call   c010ea8c <inode_ref_inc>$/;"	l
c010ea24	obj/kernel.asm	/^c010ea24:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ea27	obj/kernel.asm	/^c010ea27:	c9                   	leave  $/;"	l
c010ea28	obj/kernel.asm	/^c010ea28:	c3                   	ret    $/;"	l
c010ea29	obj/kernel.asm	/^c010ea29 <inode_kill>:$/;"	l
c010ea29	obj/kernel.asm	/^c010ea29:	55                   	push   %ebp$/;"	l
c010ea2a	obj/kernel.asm	/^c010ea2a:	89 e5                	mov    %esp,%ebp$/;"	l
c010ea2c	obj/kernel.asm	/^c010ea2c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ea2f	obj/kernel.asm	/^c010ea2f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ea32	obj/kernel.asm	/^c010ea32:	e8 76 ff ff ff       	call   c010e9ad <inode_ref_count>$/;"	l
c010ea37	obj/kernel.asm	/^c010ea37:	83 c4 04             	add    $0x4,%esp$/;"	l
c010ea3a	obj/kernel.asm	/^c010ea3a:	85 c0                	test   %eax,%eax$/;"	l
c010ea3c	obj/kernel.asm	/^c010ea3c:	74 16                	je     c010ea54 <inode_kill+0x2b>$/;"	l
c010ea3e	obj/kernel.asm	/^c010ea3e:	68 20 6a 11 c0       	push   $0xc0116a20$/;"	l
c010ea43	obj/kernel.asm	/^c010ea43:	68 3b 6a 11 c0       	push   $0xc0116a3b$/;"	l
c010ea48	obj/kernel.asm	/^c010ea48:	6a 29                	push   $0x29$/;"	l
c010ea4a	obj/kernel.asm	/^c010ea4a:	68 50 6a 11 c0       	push   $0xc0116a50$/;"	l
c010ea4f	obj/kernel.asm	/^c010ea4f:	e8 7b 1a ff ff       	call   c01004cf <__panic>$/;"	l
c010ea54	obj/kernel.asm	/^c010ea54:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ea57	obj/kernel.asm	/^c010ea57:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ea5a	obj/kernel.asm	/^c010ea5a:	e8 59 ff ff ff       	call   c010e9b8 <inode_open_count>$/;"	l
c010ea5f	obj/kernel.asm	/^c010ea5f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ea62	obj/kernel.asm	/^c010ea62:	85 c0                	test   %eax,%eax$/;"	l
c010ea64	obj/kernel.asm	/^c010ea64:	74 16                	je     c010ea7c <inode_kill+0x53>$/;"	l
c010ea66	obj/kernel.asm	/^c010ea66:	68 64 6a 11 c0       	push   $0xc0116a64$/;"	l
c010ea6b	obj/kernel.asm	/^c010ea6b:	68 3b 6a 11 c0       	push   $0xc0116a3b$/;"	l
c010ea70	obj/kernel.asm	/^c010ea70:	6a 2a                	push   $0x2a$/;"	l
c010ea72	obj/kernel.asm	/^c010ea72:	68 50 6a 11 c0       	push   $0xc0116a50$/;"	l
c010ea77	obj/kernel.asm	/^c010ea77:	e8 53 1a ff ff       	call   c01004cf <__panic>$/;"	l
c010ea7c	obj/kernel.asm	/^c010ea7c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ea7f	obj/kernel.asm	/^c010ea7f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ea82	obj/kernel.asm	/^c010ea82:	e8 30 8a ff ff       	call   c01074b7 <kfree>$/;"	l
c010ea87	obj/kernel.asm	/^c010ea87:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ea8a	obj/kernel.asm	/^c010ea8a:	c9                   	leave  $/;"	l
c010ea8b	obj/kernel.asm	/^c010ea8b:	c3                   	ret    $/;"	l
c010ea8c	obj/kernel.asm	/^c010ea8c <inode_ref_inc>:$/;"	l
c010ea8c	obj/kernel.asm	/^c010ea8c:	55                   	push   %ebp$/;"	l
c010ea8d	obj/kernel.asm	/^c010ea8d:	89 e5                	mov    %esp,%ebp$/;"	l
c010ea8f	obj/kernel.asm	/^c010ea8f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ea92	obj/kernel.asm	/^c010ea92:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010ea95	obj/kernel.asm	/^c010ea95:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010ea98	obj/kernel.asm	/^c010ea98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ea9b	obj/kernel.asm	/^c010ea9b:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
c010ea9e	obj/kernel.asm	/^c010ea9e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eaa1	obj/kernel.asm	/^c010eaa1:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010eaa4	obj/kernel.asm	/^c010eaa4:	5d                   	pop    %ebp$/;"	l
c010eaa5	obj/kernel.asm	/^c010eaa5:	c3                   	ret    $/;"	l
c010eaa6	obj/kernel.asm	/^c010eaa6 <inode_ref_dec>:$/;"	l
c010eaa6	obj/kernel.asm	/^c010eaa6:	55                   	push   %ebp$/;"	l
c010eaa7	obj/kernel.asm	/^c010eaa7:	89 e5                	mov    %esp,%ebp$/;"	l
c010eaa9	obj/kernel.asm	/^c010eaa9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010eaac	obj/kernel.asm	/^c010eaac:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010eaaf	obj/kernel.asm	/^c010eaaf:	e8 f9 fe ff ff       	call   c010e9ad <inode_ref_count>$/;"	l
c010eab4	obj/kernel.asm	/^c010eab4:	83 c4 04             	add    $0x4,%esp$/;"	l
c010eab7	obj/kernel.asm	/^c010eab7:	85 c0                	test   %eax,%eax$/;"	l
c010eab9	obj/kernel.asm	/^c010eab9:	7f 16                	jg     c010ead1 <inode_ref_dec+0x2b>$/;"	l
c010eabb	obj/kernel.asm	/^c010eabb:	68 80 6a 11 c0       	push   $0xc0116a80$/;"	l
c010eac0	obj/kernel.asm	/^c010eac0:	68 3b 6a 11 c0       	push   $0xc0116a3b$/;"	l
c010eac5	obj/kernel.asm	/^c010eac5:	6a 3f                	push   $0x3f$/;"	l
c010eac7	obj/kernel.asm	/^c010eac7:	68 50 6a 11 c0       	push   $0xc0116a50$/;"	l
c010eacc	obj/kernel.asm	/^c010eacc:	e8 fe 19 ff ff       	call   c01004cf <__panic>$/;"	l
c010ead1	obj/kernel.asm	/^c010ead1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ead4	obj/kernel.asm	/^c010ead4:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010ead7	obj/kernel.asm	/^c010ead7:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010eada	obj/kernel.asm	/^c010eada:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eadd	obj/kernel.asm	/^c010eadd:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
c010eae0	obj/kernel.asm	/^c010eae0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eae3	obj/kernel.asm	/^c010eae3:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010eae6	obj/kernel.asm	/^c010eae6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010eae9	obj/kernel.asm	/^c010eae9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010eaed	obj/kernel.asm	/^c010eaed:	0f 85 82 00 00 00    	jne    c010eb75 <inode_ref_dec+0xcf>$/;"	l
c010eaf3	obj/kernel.asm	/^c010eaf3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eaf6	obj/kernel.asm	/^c010eaf6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010eaf9	obj/kernel.asm	/^c010eaf9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010eafd	obj/kernel.asm	/^c010eafd:	74 17                	je     c010eb16 <inode_ref_dec+0x70>$/;"	l
c010eaff	obj/kernel.asm	/^c010eaff:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010eb02	obj/kernel.asm	/^c010eb02:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010eb05	obj/kernel.asm	/^c010eb05:	85 c0                	test   %eax,%eax$/;"	l
c010eb07	obj/kernel.asm	/^c010eb07:	74 0d                	je     c010eb16 <inode_ref_dec+0x70>$/;"	l
c010eb09	obj/kernel.asm	/^c010eb09:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010eb0c	obj/kernel.asm	/^c010eb0c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010eb0f	obj/kernel.asm	/^c010eb0f:	8b 40 24             	mov    0x24(%eax),%eax$/;"	l
c010eb12	obj/kernel.asm	/^c010eb12:	85 c0                	test   %eax,%eax$/;"	l
c010eb14	obj/kernel.asm	/^c010eb14:	75 16                	jne    c010eb2c <inode_ref_dec+0x86>$/;"	l
c010eb16	obj/kernel.asm	/^c010eb16:	68 9c 6a 11 c0       	push   $0xc0116a9c$/;"	l
c010eb1b	obj/kernel.asm	/^c010eb1b:	68 3b 6a 11 c0       	push   $0xc0116a3b$/;"	l
c010eb20	obj/kernel.asm	/^c010eb20:	6a 44                	push   $0x44$/;"	l
c010eb22	obj/kernel.asm	/^c010eb22:	68 50 6a 11 c0       	push   $0xc0116a50$/;"	l
c010eb27	obj/kernel.asm	/^c010eb27:	e8 a3 19 ff ff       	call   c01004cf <__panic>$/;"	l
c010eb2c	obj/kernel.asm	/^c010eb2c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010eb2f	obj/kernel.asm	/^c010eb2f:	68 ec 6a 11 c0       	push   $0xc0116aec$/;"	l
c010eb34	obj/kernel.asm	/^c010eb34:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010eb37	obj/kernel.asm	/^c010eb37:	e8 22 01 00 00       	call   c010ec5e <inode_check>$/;"	l
c010eb3c	obj/kernel.asm	/^c010eb3c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010eb3f	obj/kernel.asm	/^c010eb3f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010eb42	obj/kernel.asm	/^c010eb42:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010eb45	obj/kernel.asm	/^c010eb45:	8b 40 24             	mov    0x24(%eax),%eax$/;"	l
c010eb48	obj/kernel.asm	/^c010eb48:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010eb4b	obj/kernel.asm	/^c010eb4b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010eb4e	obj/kernel.asm	/^c010eb4e:	ff d0                	call   *%eax$/;"	l
c010eb50	obj/kernel.asm	/^c010eb50:	83 c4 10             	add    $0x10,%esp$/;"	l
c010eb53	obj/kernel.asm	/^c010eb53:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010eb56	obj/kernel.asm	/^c010eb56:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010eb5a	obj/kernel.asm	/^c010eb5a:	74 19                	je     c010eb75 <inode_ref_dec+0xcf>$/;"	l
c010eb5c	obj/kernel.asm	/^c010eb5c:	83 7d ec f1          	cmpl   $0xfffffff1,-0x14(%ebp)$/;"	l
c010eb60	obj/kernel.asm	/^c010eb60:	74 13                	je     c010eb75 <inode_ref_dec+0xcf>$/;"	l
c010eb62	obj/kernel.asm	/^c010eb62:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010eb65	obj/kernel.asm	/^c010eb65:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010eb68	obj/kernel.asm	/^c010eb68:	68 f4 6a 11 c0       	push   $0xc0116af4$/;"	l
c010eb6d	obj/kernel.asm	/^c010eb6d:	e8 f8 17 ff ff       	call   c010036a <cprintf>$/;"	l
c010eb72	obj/kernel.asm	/^c010eb72:	83 c4 10             	add    $0x10,%esp$/;"	l
c010eb75	obj/kernel.asm	/^c010eb75:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010eb78	obj/kernel.asm	/^c010eb78:	c9                   	leave  $/;"	l
c010eb79	obj/kernel.asm	/^c010eb79:	c3                   	ret    $/;"	l
c010eb7a	obj/kernel.asm	/^c010eb7a <inode_open_inc>:$/;"	l
c010eb7a	obj/kernel.asm	/^c010eb7a:	55                   	push   %ebp$/;"	l
c010eb7b	obj/kernel.asm	/^c010eb7b:	89 e5                	mov    %esp,%ebp$/;"	l
c010eb7d	obj/kernel.asm	/^c010eb7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eb80	obj/kernel.asm	/^c010eb80:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010eb83	obj/kernel.asm	/^c010eb83:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010eb86	obj/kernel.asm	/^c010eb86:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eb89	obj/kernel.asm	/^c010eb89:	89 50 34             	mov    %edx,0x34(%eax)$/;"	l
c010eb8c	obj/kernel.asm	/^c010eb8c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eb8f	obj/kernel.asm	/^c010eb8f:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010eb92	obj/kernel.asm	/^c010eb92:	5d                   	pop    %ebp$/;"	l
c010eb93	obj/kernel.asm	/^c010eb93:	c3                   	ret    $/;"	l
c010eb94	obj/kernel.asm	/^c010eb94 <inode_open_dec>:$/;"	l
c010eb94	obj/kernel.asm	/^c010eb94:	55                   	push   %ebp$/;"	l
c010eb95	obj/kernel.asm	/^c010eb95:	89 e5                	mov    %esp,%ebp$/;"	l
c010eb97	obj/kernel.asm	/^c010eb97:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010eb9a	obj/kernel.asm	/^c010eb9a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010eb9d	obj/kernel.asm	/^c010eb9d:	e8 16 fe ff ff       	call   c010e9b8 <inode_open_count>$/;"	l
c010eba2	obj/kernel.asm	/^c010eba2:	83 c4 04             	add    $0x4,%esp$/;"	l
c010eba5	obj/kernel.asm	/^c010eba5:	85 c0                	test   %eax,%eax$/;"	l
c010eba7	obj/kernel.asm	/^c010eba7:	7f 16                	jg     c010ebbf <inode_open_dec+0x2b>$/;"	l
c010eba9	obj/kernel.asm	/^c010eba9:	68 14 6b 11 c0       	push   $0xc0116b14$/;"	l
c010ebae	obj/kernel.asm	/^c010ebae:	68 3b 6a 11 c0       	push   $0xc0116a3b$/;"	l
c010ebb3	obj/kernel.asm	/^c010ebb3:	6a 5c                	push   $0x5c$/;"	l
c010ebb5	obj/kernel.asm	/^c010ebb5:	68 50 6a 11 c0       	push   $0xc0116a50$/;"	l
c010ebba	obj/kernel.asm	/^c010ebba:	e8 10 19 ff ff       	call   c01004cf <__panic>$/;"	l
c010ebbf	obj/kernel.asm	/^c010ebbf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ebc2	obj/kernel.asm	/^c010ebc2:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010ebc5	obj/kernel.asm	/^c010ebc5:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010ebc8	obj/kernel.asm	/^c010ebc8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ebcb	obj/kernel.asm	/^c010ebcb:	89 50 34             	mov    %edx,0x34(%eax)$/;"	l
c010ebce	obj/kernel.asm	/^c010ebce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ebd1	obj/kernel.asm	/^c010ebd1:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010ebd4	obj/kernel.asm	/^c010ebd4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ebd7	obj/kernel.asm	/^c010ebd7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ebdb	obj/kernel.asm	/^c010ebdb:	75 7c                	jne    c010ec59 <inode_open_dec+0xc5>$/;"	l
c010ebdd	obj/kernel.asm	/^c010ebdd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ebe0	obj/kernel.asm	/^c010ebe0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ebe3	obj/kernel.asm	/^c010ebe3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ebe7	obj/kernel.asm	/^c010ebe7:	74 17                	je     c010ec00 <inode_open_dec+0x6c>$/;"	l
c010ebe9	obj/kernel.asm	/^c010ebe9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ebec	obj/kernel.asm	/^c010ebec:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ebef	obj/kernel.asm	/^c010ebef:	85 c0                	test   %eax,%eax$/;"	l
c010ebf1	obj/kernel.asm	/^c010ebf1:	74 0d                	je     c010ec00 <inode_open_dec+0x6c>$/;"	l
c010ebf3	obj/kernel.asm	/^c010ebf3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ebf6	obj/kernel.asm	/^c010ebf6:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ebf9	obj/kernel.asm	/^c010ebf9:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010ebfc	obj/kernel.asm	/^c010ebfc:	85 c0                	test   %eax,%eax$/;"	l
c010ebfe	obj/kernel.asm	/^c010ebfe:	75 16                	jne    c010ec16 <inode_open_dec+0x82>$/;"	l
c010ec00	obj/kernel.asm	/^c010ec00:	68 30 6b 11 c0       	push   $0xc0116b30$/;"	l
c010ec05	obj/kernel.asm	/^c010ec05:	68 3b 6a 11 c0       	push   $0xc0116a3b$/;"	l
c010ec0a	obj/kernel.asm	/^c010ec0a:	6a 61                	push   $0x61$/;"	l
c010ec0c	obj/kernel.asm	/^c010ec0c:	68 50 6a 11 c0       	push   $0xc0116a50$/;"	l
c010ec11	obj/kernel.asm	/^c010ec11:	e8 b9 18 ff ff       	call   c01004cf <__panic>$/;"	l
c010ec16	obj/kernel.asm	/^c010ec16:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ec19	obj/kernel.asm	/^c010ec19:	68 7e 6b 11 c0       	push   $0xc0116b7e$/;"	l
c010ec1e	obj/kernel.asm	/^c010ec1e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010ec21	obj/kernel.asm	/^c010ec21:	e8 38 00 00 00       	call   c010ec5e <inode_check>$/;"	l
c010ec26	obj/kernel.asm	/^c010ec26:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ec29	obj/kernel.asm	/^c010ec29:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ec2c	obj/kernel.asm	/^c010ec2c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ec2f	obj/kernel.asm	/^c010ec2f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010ec32	obj/kernel.asm	/^c010ec32:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ec35	obj/kernel.asm	/^c010ec35:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ec38	obj/kernel.asm	/^c010ec38:	ff d0                	call   *%eax$/;"	l
c010ec3a	obj/kernel.asm	/^c010ec3a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ec3d	obj/kernel.asm	/^c010ec3d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ec40	obj/kernel.asm	/^c010ec40:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010ec44	obj/kernel.asm	/^c010ec44:	74 13                	je     c010ec59 <inode_open_dec+0xc5>$/;"	l
c010ec46	obj/kernel.asm	/^c010ec46:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ec49	obj/kernel.asm	/^c010ec49:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010ec4c	obj/kernel.asm	/^c010ec4c:	68 84 6b 11 c0       	push   $0xc0116b84$/;"	l
c010ec51	obj/kernel.asm	/^c010ec51:	e8 14 17 ff ff       	call   c010036a <cprintf>$/;"	l
c010ec56	obj/kernel.asm	/^c010ec56:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ec59	obj/kernel.asm	/^c010ec59:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ec5c	obj/kernel.asm	/^c010ec5c:	c9                   	leave  $/;"	l
c010ec5d	obj/kernel.asm	/^c010ec5d:	c3                   	ret    $/;"	l
c010ec5e	obj/kernel.asm	/^c010ec5e <inode_check>:$/;"	l
c010ec5e	obj/kernel.asm	/^c010ec5e:	55                   	push   %ebp$/;"	l
c010ec5f	obj/kernel.asm	/^c010ec5f:	89 e5                	mov    %esp,%ebp$/;"	l
c010ec61	obj/kernel.asm	/^c010ec61:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ec64	obj/kernel.asm	/^c010ec64:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010ec68	obj/kernel.asm	/^c010ec68:	74 0a                	je     c010ec74 <inode_check+0x16>$/;"	l
c010ec6a	obj/kernel.asm	/^c010ec6a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ec6d	obj/kernel.asm	/^c010ec6d:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ec70	obj/kernel.asm	/^c010ec70:	85 c0                	test   %eax,%eax$/;"	l
c010ec72	obj/kernel.asm	/^c010ec72:	75 16                	jne    c010ec8a <inode_check+0x2c>$/;"	l
c010ec74	obj/kernel.asm	/^c010ec74:	68 a4 6b 11 c0       	push   $0xc0116ba4$/;"	l
c010ec79	obj/kernel.asm	/^c010ec79:	68 3b 6a 11 c0       	push   $0xc0116a3b$/;"	l
c010ec7e	obj/kernel.asm	/^c010ec7e:	6a 6e                	push   $0x6e$/;"	l
c010ec80	obj/kernel.asm	/^c010ec80:	68 50 6a 11 c0       	push   $0xc0116a50$/;"	l
c010ec85	obj/kernel.asm	/^c010ec85:	e8 45 18 ff ff       	call   c01004cf <__panic>$/;"	l
c010ec8a	obj/kernel.asm	/^c010ec8a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ec8d	obj/kernel.asm	/^c010ec8d:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ec90	obj/kernel.asm	/^c010ec90:	8b 00                	mov    (%eax),%eax$/;"	l
c010ec92	obj/kernel.asm	/^c010ec92:	3d 76 a4 4b 8c       	cmp    $0x8c4ba476,%eax$/;"	l
c010ec97	obj/kernel.asm	/^c010ec97:	74 16                	je     c010ecaf <inode_check+0x51>$/;"	l
c010ec99	obj/kernel.asm	/^c010ec99:	68 cc 6b 11 c0       	push   $0xc0116bcc$/;"	l
c010ec9e	obj/kernel.asm	/^c010ec9e:	68 3b 6a 11 c0       	push   $0xc0116a3b$/;"	l
c010eca3	obj/kernel.asm	/^c010eca3:	6a 6f                	push   $0x6f$/;"	l
c010eca5	obj/kernel.asm	/^c010eca5:	68 50 6a 11 c0       	push   $0xc0116a50$/;"	l
c010ecaa	obj/kernel.asm	/^c010ecaa:	e8 20 18 ff ff       	call   c01004cf <__panic>$/;"	l
c010ecaf	obj/kernel.asm	/^c010ecaf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ecb2	obj/kernel.asm	/^c010ecb2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ecb5	obj/kernel.asm	/^c010ecb5:	e8 f3 fc ff ff       	call   c010e9ad <inode_ref_count>$/;"	l
c010ecba	obj/kernel.asm	/^c010ecba:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ecbd	obj/kernel.asm	/^c010ecbd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ecc0	obj/kernel.asm	/^c010ecc0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ecc3	obj/kernel.asm	/^c010ecc3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ecc6	obj/kernel.asm	/^c010ecc6:	e8 ed fc ff ff       	call   c010e9b8 <inode_open_count>$/;"	l
c010eccb	obj/kernel.asm	/^c010eccb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ecce	obj/kernel.asm	/^c010ecce:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ecd1	obj/kernel.asm	/^c010ecd1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ecd4	obj/kernel.asm	/^c010ecd4:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010ecd7	obj/kernel.asm	/^c010ecd7:	7c 06                	jl     c010ecdf <inode_check+0x81>$/;"	l
c010ecd9	obj/kernel.asm	/^c010ecd9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ecdd	obj/kernel.asm	/^c010ecdd:	79 16                	jns    c010ecf5 <inode_check+0x97>$/;"	l
c010ecdf	obj/kernel.asm	/^c010ecdf:	68 f4 6b 11 c0       	push   $0xc0116bf4$/;"	l
c010ece4	obj/kernel.asm	/^c010ece4:	68 3b 6a 11 c0       	push   $0xc0116a3b$/;"	l
c010ece9	obj/kernel.asm	/^c010ece9:	6a 71                	push   $0x71$/;"	l
c010eceb	obj/kernel.asm	/^c010eceb:	68 50 6a 11 c0       	push   $0xc0116a50$/;"	l
c010ecf0	obj/kernel.asm	/^c010ecf0:	e8 da 17 ff ff       	call   c01004cf <__panic>$/;"	l
c010ecf5	obj/kernel.asm	/^c010ecf5:	81 7d f4 ff ff 00 00 	cmpl   $0xffff,-0xc(%ebp)$/;"	l
c010ecfc	obj/kernel.asm	/^c010ecfc:	7f 09                	jg     c010ed07 <inode_check+0xa9>$/;"	l
c010ecfe	obj/kernel.asm	/^c010ecfe:	81 7d f0 ff ff 00 00 	cmpl   $0xffff,-0x10(%ebp)$/;"	l
c010ed05	obj/kernel.asm	/^c010ed05:	7e 16                	jle    c010ed1d <inode_check+0xbf>$/;"	l
c010ed07	obj/kernel.asm	/^c010ed07:	68 20 6c 11 c0       	push   $0xc0116c20$/;"	l
c010ed0c	obj/kernel.asm	/^c010ed0c:	68 3b 6a 11 c0       	push   $0xc0116a3b$/;"	l
c010ed11	obj/kernel.asm	/^c010ed11:	6a 72                	push   $0x72$/;"	l
c010ed13	obj/kernel.asm	/^c010ed13:	68 50 6a 11 c0       	push   $0xc0116a50$/;"	l
c010ed18	obj/kernel.asm	/^c010ed18:	e8 b2 17 ff ff       	call   c01004cf <__panic>$/;"	l
c010ed1d	obj/kernel.asm	/^c010ed1d:	c9                   	leave  $/;"	l
c010ed1e	obj/kernel.asm	/^c010ed1e:	c3                   	ret    $/;"	l
c010ed1f	obj/kernel.asm	/^c010ed1f <vfs_open>:$/;"	l
c010ed1f	obj/kernel.asm	/^c010ed1f:	55                   	push   %ebp$/;"	l
c010ed20	obj/kernel.asm	/^c010ed20:	89 e5                	mov    %esp,%ebp$/;"	l
c010ed22	obj/kernel.asm	/^c010ed22:	53                   	push   %ebx$/;"	l
c010ed23	obj/kernel.asm	/^c010ed23:	83 ec 34             	sub    $0x34,%esp$/;"	l
c010ed26	obj/kernel.asm	/^c010ed26:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010ed2d	obj/kernel.asm	/^c010ed2d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ed30	obj/kernel.asm	/^c010ed30:	83 e0 03             	and    $0x3,%eax$/;"	l
c010ed33	obj/kernel.asm	/^c010ed33:	85 c0                	test   %eax,%eax$/;"	l
c010ed35	obj/kernel.asm	/^c010ed35:	74 18                	je     c010ed4f <vfs_open+0x30>$/;"	l
c010ed37	obj/kernel.asm	/^c010ed37:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010ed3a	obj/kernel.asm	/^c010ed3a:	77 09                	ja     c010ed45 <vfs_open+0x26>$/;"	l
c010ed3c	obj/kernel.asm	/^c010ed3c:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010ed43	obj/kernel.asm	/^c010ed43:	eb 0b                	jmp    c010ed50 <vfs_open+0x31>$/;"	l
c010ed45	obj/kernel.asm	/^c010ed45:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010ed4a	obj/kernel.asm	/^c010ed4a:	e9 84 02 00 00       	jmp    c010efd3 <vfs_open+0x2b4>$/;"	l
c010ed4f	obj/kernel.asm	/^c010ed4f:	90                   	nop$/;"	l
c010ed50	obj/kernel.asm	/^c010ed50:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ed53	obj/kernel.asm	/^c010ed53:	83 e0 10             	and    $0x10,%eax$/;"	l
c010ed56	obj/kernel.asm	/^c010ed56:	85 c0                	test   %eax,%eax$/;"	l
c010ed58	obj/kernel.asm	/^c010ed58:	74 10                	je     c010ed6a <vfs_open+0x4b>$/;"	l
c010ed5a	obj/kernel.asm	/^c010ed5a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ed5e	obj/kernel.asm	/^c010ed5e:	75 0a                	jne    c010ed6a <vfs_open+0x4b>$/;"	l
c010ed60	obj/kernel.asm	/^c010ed60:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010ed65	obj/kernel.asm	/^c010ed65:	e9 69 02 00 00       	jmp    c010efd3 <vfs_open+0x2b4>$/;"	l
c010ed6a	obj/kernel.asm	/^c010ed6a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ed6d	obj/kernel.asm	/^c010ed6d:	83 e0 08             	and    $0x8,%eax$/;"	l
c010ed70	obj/kernel.asm	/^c010ed70:	85 c0                	test   %eax,%eax$/;"	l
c010ed72	obj/kernel.asm	/^c010ed72:	0f 95 c0             	setne  %al$/;"	l
c010ed75	obj/kernel.asm	/^c010ed75:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010ed78	obj/kernel.asm	/^c010ed78:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ed7b	obj/kernel.asm	/^c010ed7b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ed7e	obj/kernel.asm	/^c010ed7e:	83 e0 04             	and    $0x4,%eax$/;"	l
c010ed81	obj/kernel.asm	/^c010ed81:	85 c0                	test   %eax,%eax$/;"	l
c010ed83	obj/kernel.asm	/^c010ed83:	0f 95 c0             	setne  %al$/;"	l
c010ed86	obj/kernel.asm	/^c010ed86:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010ed89	obj/kernel.asm	/^c010ed89:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ed8c	obj/kernel.asm	/^c010ed8c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ed8f	obj/kernel.asm	/^c010ed8f:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c010ed92	obj/kernel.asm	/^c010ed92:	50                   	push   %eax$/;"	l
c010ed93	obj/kernel.asm	/^c010ed93:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ed96	obj/kernel.asm	/^c010ed96:	e8 0a fb ff ff       	call   c010e8a5 <vfs_lookup>$/;"	l
c010ed9b	obj/kernel.asm	/^c010ed9b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ed9e	obj/kernel.asm	/^c010ed9e:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010eda1	obj/kernel.asm	/^c010eda1:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010eda5	obj/kernel.asm	/^c010eda5:	0f 84 b2 00 00 00    	je     c010ee5d <vfs_open+0x13e>$/;"	l
c010edab	obj/kernel.asm	/^c010edab:	83 7d e8 f0          	cmpl   $0xfffffff0,-0x18(%ebp)$/;"	l
c010edaf	obj/kernel.asm	/^c010edaf:	0f 85 a0 00 00 00    	jne    c010ee55 <vfs_open+0x136>$/;"	l
c010edb5	obj/kernel.asm	/^c010edb5:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010edb9	obj/kernel.asm	/^c010edb9:	0f 84 96 00 00 00    	je     c010ee55 <vfs_open+0x136>$/;"	l
c010edbf	obj/kernel.asm	/^c010edbf:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010edc2	obj/kernel.asm	/^c010edc2:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010edc5	obj/kernel.asm	/^c010edc5:	50                   	push   %eax$/;"	l
c010edc6	obj/kernel.asm	/^c010edc6:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
c010edc9	obj/kernel.asm	/^c010edc9:	50                   	push   %eax$/;"	l
c010edca	obj/kernel.asm	/^c010edca:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010edcd	obj/kernel.asm	/^c010edcd:	e8 99 fb ff ff       	call   c010e96b <vfs_lookup_parent>$/;"	l
c010edd2	obj/kernel.asm	/^c010edd2:	83 c4 10             	add    $0x10,%esp$/;"	l
c010edd5	obj/kernel.asm	/^c010edd5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010edd8	obj/kernel.asm	/^c010edd8:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010eddc	obj/kernel.asm	/^c010eddc:	74 08                	je     c010ede6 <vfs_open+0xc7>$/;"	l
c010edde	obj/kernel.asm	/^c010edde:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ede1	obj/kernel.asm	/^c010ede1:	e9 ed 01 00 00       	jmp    c010efd3 <vfs_open+0x2b4>$/;"	l
c010ede6	obj/kernel.asm	/^c010ede6:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010ede9	obj/kernel.asm	/^c010ede9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010edec	obj/kernel.asm	/^c010edec:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010edf0	obj/kernel.asm	/^c010edf0:	74 17                	je     c010ee09 <vfs_open+0xea>$/;"	l
c010edf2	obj/kernel.asm	/^c010edf2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010edf5	obj/kernel.asm	/^c010edf5:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010edf8	obj/kernel.asm	/^c010edf8:	85 c0                	test   %eax,%eax$/;"	l
c010edfa	obj/kernel.asm	/^c010edfa:	74 0d                	je     c010ee09 <vfs_open+0xea>$/;"	l
c010edfc	obj/kernel.asm	/^c010edfc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010edff	obj/kernel.asm	/^c010edff:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ee02	obj/kernel.asm	/^c010ee02:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010ee05	obj/kernel.asm	/^c010ee05:	85 c0                	test   %eax,%eax$/;"	l
c010ee07	obj/kernel.asm	/^c010ee07:	75 16                	jne    c010ee1f <vfs_open+0x100>$/;"	l
c010ee09	obj/kernel.asm	/^c010ee09:	68 5c 6c 11 c0       	push   $0xc0116c5c$/;"	l
c010ee0e	obj/kernel.asm	/^c010ee0e:	68 ab 6c 11 c0       	push   $0xc0116cab$/;"	l
c010ee13	obj/kernel.asm	/^c010ee13:	6a 2c                	push   $0x2c$/;"	l
c010ee15	obj/kernel.asm	/^c010ee15:	68 c0 6c 11 c0       	push   $0xc0116cc0$/;"	l
c010ee1a	obj/kernel.asm	/^c010ee1a:	e8 b0 16 ff ff       	call   c01004cf <__panic>$/;"	l
c010ee1f	obj/kernel.asm	/^c010ee1f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ee22	obj/kernel.asm	/^c010ee22:	68 d6 6c 11 c0       	push   $0xc0116cd6$/;"	l
c010ee27	obj/kernel.asm	/^c010ee27:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c010ee2a	obj/kernel.asm	/^c010ee2a:	e8 2f fe ff ff       	call   c010ec5e <inode_check>$/;"	l
c010ee2f	obj/kernel.asm	/^c010ee2f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ee32	obj/kernel.asm	/^c010ee32:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010ee35	obj/kernel.asm	/^c010ee35:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ee38	obj/kernel.asm	/^c010ee38:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010ee3b	obj/kernel.asm	/^c010ee3b:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
c010ee3e	obj/kernel.asm	/^c010ee3e:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010ee41	obj/kernel.asm	/^c010ee41:	8d 5d d8             	lea    -0x28(%ebp),%ebx$/;"	l
c010ee44	obj/kernel.asm	/^c010ee44:	53                   	push   %ebx$/;"	l
c010ee45	obj/kernel.asm	/^c010ee45:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010ee48	obj/kernel.asm	/^c010ee48:	51                   	push   %ecx$/;"	l
c010ee49	obj/kernel.asm	/^c010ee49:	52                   	push   %edx$/;"	l
c010ee4a	obj/kernel.asm	/^c010ee4a:	ff d0                	call   *%eax$/;"	l
c010ee4c	obj/kernel.asm	/^c010ee4c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ee4f	obj/kernel.asm	/^c010ee4f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ee52	obj/kernel.asm	/^c010ee52:	90                   	nop$/;"	l
c010ee53	obj/kernel.asm	/^c010ee53:	eb 1e                	jmp    c010ee73 <vfs_open+0x154>$/;"	l
c010ee55	obj/kernel.asm	/^c010ee55:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ee58	obj/kernel.asm	/^c010ee58:	e9 76 01 00 00       	jmp    c010efd3 <vfs_open+0x2b4>$/;"	l
c010ee5d	obj/kernel.asm	/^c010ee5d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ee61	obj/kernel.asm	/^c010ee61:	74 10                	je     c010ee73 <vfs_open+0x154>$/;"	l
c010ee63	obj/kernel.asm	/^c010ee63:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010ee67	obj/kernel.asm	/^c010ee67:	74 0a                	je     c010ee73 <vfs_open+0x154>$/;"	l
c010ee69	obj/kernel.asm	/^c010ee69:	b8 e9 ff ff ff       	mov    $0xffffffe9,%eax$/;"	l
c010ee6e	obj/kernel.asm	/^c010ee6e:	e9 60 01 00 00       	jmp    c010efd3 <vfs_open+0x2b4>$/;"	l
c010ee73	obj/kernel.asm	/^c010ee73:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010ee76	obj/kernel.asm	/^c010ee76:	85 c0                	test   %eax,%eax$/;"	l
c010ee78	obj/kernel.asm	/^c010ee78:	75 16                	jne    c010ee90 <vfs_open+0x171>$/;"	l
c010ee7a	obj/kernel.asm	/^c010ee7a:	68 dd 6c 11 c0       	push   $0xc0116cdd$/;"	l
c010ee7f	obj/kernel.asm	/^c010ee7f:	68 ab 6c 11 c0       	push   $0xc0116cab$/;"	l
c010ee84	obj/kernel.asm	/^c010ee84:	6a 31                	push   $0x31$/;"	l
c010ee86	obj/kernel.asm	/^c010ee86:	68 c0 6c 11 c0       	push   $0xc0116cc0$/;"	l
c010ee8b	obj/kernel.asm	/^c010ee8b:	e8 3f 16 ff ff       	call   c01004cf <__panic>$/;"	l
c010ee90	obj/kernel.asm	/^c010ee90:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010ee93	obj/kernel.asm	/^c010ee93:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010ee96	obj/kernel.asm	/^c010ee96:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c010ee9a	obj/kernel.asm	/^c010ee9a:	74 17                	je     c010eeb3 <vfs_open+0x194>$/;"	l
c010ee9c	obj/kernel.asm	/^c010ee9c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ee9f	obj/kernel.asm	/^c010ee9f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010eea2	obj/kernel.asm	/^c010eea2:	85 c0                	test   %eax,%eax$/;"	l
c010eea4	obj/kernel.asm	/^c010eea4:	74 0d                	je     c010eeb3 <vfs_open+0x194>$/;"	l
c010eea6	obj/kernel.asm	/^c010eea6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010eea9	obj/kernel.asm	/^c010eea9:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010eeac	obj/kernel.asm	/^c010eeac:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010eeaf	obj/kernel.asm	/^c010eeaf:	85 c0                	test   %eax,%eax$/;"	l
c010eeb1	obj/kernel.asm	/^c010eeb1:	75 16                	jne    c010eec9 <vfs_open+0x1aa>$/;"	l
c010eeb3	obj/kernel.asm	/^c010eeb3:	68 ec 6c 11 c0       	push   $0xc0116cec$/;"	l
c010eeb8	obj/kernel.asm	/^c010eeb8:	68 ab 6c 11 c0       	push   $0xc0116cab$/;"	l
c010eebd	obj/kernel.asm	/^c010eebd:	6a 33                	push   $0x33$/;"	l
c010eebf	obj/kernel.asm	/^c010eebf:	68 c0 6c 11 c0       	push   $0xc0116cc0$/;"	l
c010eec4	obj/kernel.asm	/^c010eec4:	e8 06 16 ff ff       	call   c01004cf <__panic>$/;"	l
c010eec9	obj/kernel.asm	/^c010eec9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010eecc	obj/kernel.asm	/^c010eecc:	68 39 6d 11 c0       	push   $0xc0116d39$/;"	l
c010eed1	obj/kernel.asm	/^c010eed1:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010eed4	obj/kernel.asm	/^c010eed4:	e8 85 fd ff ff       	call   c010ec5e <inode_check>$/;"	l
c010eed9	obj/kernel.asm	/^c010eed9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010eedc	obj/kernel.asm	/^c010eedc:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010eedf	obj/kernel.asm	/^c010eedf:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010eee2	obj/kernel.asm	/^c010eee2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010eee5	obj/kernel.asm	/^c010eee5:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010eee8	obj/kernel.asm	/^c010eee8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010eeeb	obj/kernel.asm	/^c010eeeb:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010eeee	obj/kernel.asm	/^c010eeee:	52                   	push   %edx$/;"	l
c010eeef	obj/kernel.asm	/^c010eeef:	ff d0                	call   *%eax$/;"	l
c010eef1	obj/kernel.asm	/^c010eef1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010eef4	obj/kernel.asm	/^c010eef4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010eef7	obj/kernel.asm	/^c010eef7:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010eefb	obj/kernel.asm	/^c010eefb:	74 17                	je     c010ef14 <vfs_open+0x1f5>$/;"	l
c010eefd	obj/kernel.asm	/^c010eefd:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010ef00	obj/kernel.asm	/^c010ef00:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ef03	obj/kernel.asm	/^c010ef03:	50                   	push   %eax$/;"	l
c010ef04	obj/kernel.asm	/^c010ef04:	e8 9d fb ff ff       	call   c010eaa6 <inode_ref_dec>$/;"	l
c010ef09	obj/kernel.asm	/^c010ef09:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ef0c	obj/kernel.asm	/^c010ef0c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ef0f	obj/kernel.asm	/^c010ef0f:	e9 bf 00 00 00       	jmp    c010efd3 <vfs_open+0x2b4>$/;"	l
c010ef14	obj/kernel.asm	/^c010ef14:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010ef17	obj/kernel.asm	/^c010ef17:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ef1a	obj/kernel.asm	/^c010ef1a:	50                   	push   %eax$/;"	l
c010ef1b	obj/kernel.asm	/^c010ef1b:	e8 5a fc ff ff       	call   c010eb7a <inode_open_inc>$/;"	l
c010ef20	obj/kernel.asm	/^c010ef20:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ef23	obj/kernel.asm	/^c010ef23:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ef26	obj/kernel.asm	/^c010ef26:	83 e0 10             	and    $0x10,%eax$/;"	l
c010ef29	obj/kernel.asm	/^c010ef29:	85 c0                	test   %eax,%eax$/;"	l
c010ef2b	obj/kernel.asm	/^c010ef2b:	75 0a                	jne    c010ef37 <vfs_open+0x218>$/;"	l
c010ef2d	obj/kernel.asm	/^c010ef2d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010ef31	obj/kernel.asm	/^c010ef31:	0f 84 8f 00 00 00    	je     c010efc6 <vfs_open+0x2a7>$/;"	l
c010ef37	obj/kernel.asm	/^c010ef37:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010ef3a	obj/kernel.asm	/^c010ef3a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010ef3d	obj/kernel.asm	/^c010ef3d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010ef41	obj/kernel.asm	/^c010ef41:	74 17                	je     c010ef5a <vfs_open+0x23b>$/;"	l
c010ef43	obj/kernel.asm	/^c010ef43:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010ef46	obj/kernel.asm	/^c010ef46:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ef49	obj/kernel.asm	/^c010ef49:	85 c0                	test   %eax,%eax$/;"	l
c010ef4b	obj/kernel.asm	/^c010ef4b:	74 0d                	je     c010ef5a <vfs_open+0x23b>$/;"	l
c010ef4d	obj/kernel.asm	/^c010ef4d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010ef50	obj/kernel.asm	/^c010ef50:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ef53	obj/kernel.asm	/^c010ef53:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010ef56	obj/kernel.asm	/^c010ef56:	85 c0                	test   %eax,%eax$/;"	l
c010ef58	obj/kernel.asm	/^c010ef58:	75 16                	jne    c010ef70 <vfs_open+0x251>$/;"	l
c010ef5a	obj/kernel.asm	/^c010ef5a:	68 40 6d 11 c0       	push   $0xc0116d40$/;"	l
c010ef5f	obj/kernel.asm	/^c010ef5f:	68 ab 6c 11 c0       	push   $0xc0116cab$/;"	l
c010ef64	obj/kernel.asm	/^c010ef64:	6a 3a                	push   $0x3a$/;"	l
c010ef66	obj/kernel.asm	/^c010ef66:	68 c0 6c 11 c0       	push   $0xc0116cc0$/;"	l
c010ef6b	obj/kernel.asm	/^c010ef6b:	e8 5f 15 ff ff       	call   c01004cf <__panic>$/;"	l
c010ef70	obj/kernel.asm	/^c010ef70:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ef73	obj/kernel.asm	/^c010ef73:	68 91 6d 11 c0       	push   $0xc0116d91$/;"	l
c010ef78	obj/kernel.asm	/^c010ef78:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c010ef7b	obj/kernel.asm	/^c010ef7b:	e8 de fc ff ff       	call   c010ec5e <inode_check>$/;"	l
c010ef80	obj/kernel.asm	/^c010ef80:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ef83	obj/kernel.asm	/^c010ef83:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010ef86	obj/kernel.asm	/^c010ef86:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ef89	obj/kernel.asm	/^c010ef89:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010ef8c	obj/kernel.asm	/^c010ef8c:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010ef8f	obj/kernel.asm	/^c010ef8f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ef92	obj/kernel.asm	/^c010ef92:	6a 00                	push   $0x0$/;"	l
c010ef94	obj/kernel.asm	/^c010ef94:	52                   	push   %edx$/;"	l
c010ef95	obj/kernel.asm	/^c010ef95:	ff d0                	call   *%eax$/;"	l
c010ef97	obj/kernel.asm	/^c010ef97:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ef9a	obj/kernel.asm	/^c010ef9a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ef9d	obj/kernel.asm	/^c010ef9d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010efa1	obj/kernel.asm	/^c010efa1:	74 23                	je     c010efc6 <vfs_open+0x2a7>$/;"	l
c010efa3	obj/kernel.asm	/^c010efa3:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010efa6	obj/kernel.asm	/^c010efa6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010efa9	obj/kernel.asm	/^c010efa9:	50                   	push   %eax$/;"	l
c010efaa	obj/kernel.asm	/^c010efaa:	e8 e5 fb ff ff       	call   c010eb94 <inode_open_dec>$/;"	l
c010efaf	obj/kernel.asm	/^c010efaf:	83 c4 10             	add    $0x10,%esp$/;"	l
c010efb2	obj/kernel.asm	/^c010efb2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010efb5	obj/kernel.asm	/^c010efb5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010efb8	obj/kernel.asm	/^c010efb8:	50                   	push   %eax$/;"	l
c010efb9	obj/kernel.asm	/^c010efb9:	e8 e8 fa ff ff       	call   c010eaa6 <inode_ref_dec>$/;"	l
c010efbe	obj/kernel.asm	/^c010efbe:	83 c4 10             	add    $0x10,%esp$/;"	l
c010efc1	obj/kernel.asm	/^c010efc1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010efc4	obj/kernel.asm	/^c010efc4:	eb 0d                	jmp    c010efd3 <vfs_open+0x2b4>$/;"	l
c010efc6	obj/kernel.asm	/^c010efc6:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010efc9	obj/kernel.asm	/^c010efc9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010efcc	obj/kernel.asm	/^c010efcc:	89 10                	mov    %edx,(%eax)$/;"	l
c010efce	obj/kernel.asm	/^c010efce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010efd3	obj/kernel.asm	/^c010efd3:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c010efd6	obj/kernel.asm	/^c010efd6:	c9                   	leave  $/;"	l
c010efd7	obj/kernel.asm	/^c010efd7:	c3                   	ret    $/;"	l
c010efd8	obj/kernel.asm	/^c010efd8 <vfs_close>:$/;"	l
c010efd8	obj/kernel.asm	/^c010efd8:	55                   	push   %ebp$/;"	l
c010efd9	obj/kernel.asm	/^c010efd9:	89 e5                	mov    %esp,%ebp$/;"	l
c010efdb	obj/kernel.asm	/^c010efdb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010efde	obj/kernel.asm	/^c010efde:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010efe1	obj/kernel.asm	/^c010efe1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010efe4	obj/kernel.asm	/^c010efe4:	e8 ab fb ff ff       	call   c010eb94 <inode_open_dec>$/;"	l
c010efe9	obj/kernel.asm	/^c010efe9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010efec	obj/kernel.asm	/^c010efec:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010efef	obj/kernel.asm	/^c010efef:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010eff2	obj/kernel.asm	/^c010eff2:	e8 af fa ff ff       	call   c010eaa6 <inode_ref_dec>$/;"	l
c010eff7	obj/kernel.asm	/^c010eff7:	83 c4 10             	add    $0x10,%esp$/;"	l
c010effa	obj/kernel.asm	/^c010effa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010efff	obj/kernel.asm	/^c010efff:	c9                   	leave  $/;"	l
c010f000	obj/kernel.asm	/^c010f000:	c3                   	ret    $/;"	l
c010f001	obj/kernel.asm	/^c010f001 <vfs_unlink>:$/;"	l
c010f001	obj/kernel.asm	/^c010f001:	55                   	push   %ebp$/;"	l
c010f002	obj/kernel.asm	/^c010f002:	89 e5                	mov    %esp,%ebp$/;"	l
c010f004	obj/kernel.asm	/^c010f004:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010f009	obj/kernel.asm	/^c010f009:	5d                   	pop    %ebp$/;"	l
c010f00a	obj/kernel.asm	/^c010f00a:	c3                   	ret    $/;"	l
c010f00b	obj/kernel.asm	/^c010f00b <vfs_rename>:$/;"	l
c010f00b	obj/kernel.asm	/^c010f00b:	55                   	push   %ebp$/;"	l
c010f00c	obj/kernel.asm	/^c010f00c:	89 e5                	mov    %esp,%ebp$/;"	l
c010f00e	obj/kernel.asm	/^c010f00e:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010f013	obj/kernel.asm	/^c010f013:	5d                   	pop    %ebp$/;"	l
c010f014	obj/kernel.asm	/^c010f014:	c3                   	ret    $/;"	l
c010f015	obj/kernel.asm	/^c010f015 <vfs_link>:$/;"	l
c010f015	obj/kernel.asm	/^c010f015:	55                   	push   %ebp$/;"	l
c010f016	obj/kernel.asm	/^c010f016:	89 e5                	mov    %esp,%ebp$/;"	l
c010f018	obj/kernel.asm	/^c010f018:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010f01d	obj/kernel.asm	/^c010f01d:	5d                   	pop    %ebp$/;"	l
c010f01e	obj/kernel.asm	/^c010f01e:	c3                   	ret    $/;"	l
c010f01f	obj/kernel.asm	/^c010f01f <vfs_symlink>:$/;"	l
c010f01f	obj/kernel.asm	/^c010f01f:	55                   	push   %ebp$/;"	l
c010f020	obj/kernel.asm	/^c010f020:	89 e5                	mov    %esp,%ebp$/;"	l
c010f022	obj/kernel.asm	/^c010f022:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010f027	obj/kernel.asm	/^c010f027:	5d                   	pop    %ebp$/;"	l
c010f028	obj/kernel.asm	/^c010f028:	c3                   	ret    $/;"	l
c010f029	obj/kernel.asm	/^c010f029 <vfs_readlink>:$/;"	l
c010f029	obj/kernel.asm	/^c010f029:	55                   	push   %ebp$/;"	l
c010f02a	obj/kernel.asm	/^c010f02a:	89 e5                	mov    %esp,%ebp$/;"	l
c010f02c	obj/kernel.asm	/^c010f02c:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010f031	obj/kernel.asm	/^c010f031:	5d                   	pop    %ebp$/;"	l
c010f032	obj/kernel.asm	/^c010f032:	c3                   	ret    $/;"	l
c010f033	obj/kernel.asm	/^c010f033 <vfs_mkdir>:$/;"	l
c010f033	obj/kernel.asm	/^c010f033:	55                   	push   %ebp$/;"	l
c010f034	obj/kernel.asm	/^c010f034:	89 e5                	mov    %esp,%ebp$/;"	l
c010f036	obj/kernel.asm	/^c010f036:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010f03b	obj/kernel.asm	/^c010f03b:	5d                   	pop    %ebp$/;"	l
c010f03c	obj/kernel.asm	/^c010f03c:	c3                   	ret    $/;"	l
c010f03d	obj/kernel.asm	/^c010f03d <__alloc_fs>:$/;"	l
c010f03d	obj/kernel.asm	/^c010f03d:	55                   	push   %ebp$/;"	l
c010f03e	obj/kernel.asm	/^c010f03e:	89 e5                	mov    %esp,%ebp$/;"	l
c010f040	obj/kernel.asm	/^c010f040:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f043	obj/kernel.asm	/^c010f043:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f046	obj/kernel.asm	/^c010f046:	68 80 00 00 00       	push   $0x80$/;"	l
c010f04b	obj/kernel.asm	/^c010f04b:	e8 4f 84 ff ff       	call   c010749f <kmalloc>$/;"	l
c010f050	obj/kernel.asm	/^c010f050:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f053	obj/kernel.asm	/^c010f053:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f056	obj/kernel.asm	/^c010f056:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f05a	obj/kernel.asm	/^c010f05a:	74 09                	je     c010f065 <__alloc_fs+0x28>$/;"	l
c010f05c	obj/kernel.asm	/^c010f05c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010f05f	obj/kernel.asm	/^c010f05f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f062	obj/kernel.asm	/^c010f062:	89 50 6c             	mov    %edx,0x6c(%eax)$/;"	l
c010f065	obj/kernel.asm	/^c010f065:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f068	obj/kernel.asm	/^c010f068:	c9                   	leave  $/;"	l
c010f069	obj/kernel.asm	/^c010f069:	c3                   	ret    $/;"	l
c010f06a	obj/kernel.asm	/^c010f06a <vfs_init>:$/;"	l
c010f06a	obj/kernel.asm	/^c010f06a:	55                   	push   %ebp$/;"	l
c010f06b	obj/kernel.asm	/^c010f06b:	89 e5                	mov    %esp,%ebp$/;"	l
c010f06d	obj/kernel.asm	/^c010f06d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f070	obj/kernel.asm	/^c010f070:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f073	obj/kernel.asm	/^c010f073:	6a 01                	push   $0x1$/;"	l
c010f075	obj/kernel.asm	/^c010f075:	68 4c 01 15 c0       	push   $0xc015014c$/;"	l
c010f07a	obj/kernel.asm	/^c010f07a:	e8 b8 a4 ff ff       	call   c0109537 <sem_init>$/;"	l
c010f07f	obj/kernel.asm	/^c010f07f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f082	obj/kernel.asm	/^c010f082:	e8 9d eb ff ff       	call   c010dc24 <vfs_devlist_init>$/;"	l
c010f087	obj/kernel.asm	/^c010f087:	c9                   	leave  $/;"	l
c010f088	obj/kernel.asm	/^c010f088:	c3                   	ret    $/;"	l
c010f089	obj/kernel.asm	/^c010f089 <lock_bootfs>:$/;"	l
c010f089	obj/kernel.asm	/^c010f089:	55                   	push   %ebp$/;"	l
c010f08a	obj/kernel.asm	/^c010f08a:	89 e5                	mov    %esp,%ebp$/;"	l
c010f08c	obj/kernel.asm	/^c010f08c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f08f	obj/kernel.asm	/^c010f08f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f092	obj/kernel.asm	/^c010f092:	68 4c 01 15 c0       	push   $0xc015014c$/;"	l
c010f097	obj/kernel.asm	/^c010f097:	e8 21 a6 ff ff       	call   c01096bd <down>$/;"	l
c010f09c	obj/kernel.asm	/^c010f09c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f09f	obj/kernel.asm	/^c010f09f:	c9                   	leave  $/;"	l
c010f0a0	obj/kernel.asm	/^c010f0a0:	c3                   	ret    $/;"	l
c010f0a1	obj/kernel.asm	/^c010f0a1 <unlock_bootfs>:$/;"	l
c010f0a1	obj/kernel.asm	/^c010f0a1:	55                   	push   %ebp$/;"	l
c010f0a2	obj/kernel.asm	/^c010f0a2:	89 e5                	mov    %esp,%ebp$/;"	l
c010f0a4	obj/kernel.asm	/^c010f0a4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f0a7	obj/kernel.asm	/^c010f0a7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f0aa	obj/kernel.asm	/^c010f0aa:	68 4c 01 15 c0       	push   $0xc015014c$/;"	l
c010f0af	obj/kernel.asm	/^c010f0af:	e8 ee a5 ff ff       	call   c01096a2 <up>$/;"	l
c010f0b4	obj/kernel.asm	/^c010f0b4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f0b7	obj/kernel.asm	/^c010f0b7:	c9                   	leave  $/;"	l
c010f0b8	obj/kernel.asm	/^c010f0b8:	c3                   	ret    $/;"	l
c010f0b9	obj/kernel.asm	/^c010f0b9 <change_bootfs>:$/;"	l
c010f0b9	obj/kernel.asm	/^c010f0b9:	55                   	push   %ebp$/;"	l
c010f0ba	obj/kernel.asm	/^c010f0ba:	89 e5                	mov    %esp,%ebp$/;"	l
c010f0bc	obj/kernel.asm	/^c010f0bc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f0bf	obj/kernel.asm	/^c010f0bf:	e8 c5 ff ff ff       	call   c010f089 <lock_bootfs>$/;"	l
c010f0c4	obj/kernel.asm	/^c010f0c4:	a1 58 01 15 c0       	mov    0xc0150158,%eax$/;"	l
c010f0c9	obj/kernel.asm	/^c010f0c9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f0cc	obj/kernel.asm	/^c010f0cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f0cf	obj/kernel.asm	/^c010f0cf:	a3 58 01 15 c0       	mov    %eax,0xc0150158$/;"	l
c010f0d4	obj/kernel.asm	/^c010f0d4:	e8 c8 ff ff ff       	call   c010f0a1 <unlock_bootfs>$/;"	l
c010f0d9	obj/kernel.asm	/^c010f0d9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f0dd	obj/kernel.asm	/^c010f0dd:	74 0e                	je     c010f0ed <change_bootfs+0x34>$/;"	l
c010f0df	obj/kernel.asm	/^c010f0df:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f0e2	obj/kernel.asm	/^c010f0e2:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010f0e5	obj/kernel.asm	/^c010f0e5:	e8 bc f9 ff ff       	call   c010eaa6 <inode_ref_dec>$/;"	l
c010f0ea	obj/kernel.asm	/^c010f0ea:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f0ed	obj/kernel.asm	/^c010f0ed:	c9                   	leave  $/;"	l
c010f0ee	obj/kernel.asm	/^c010f0ee:	c3                   	ret    $/;"	l
c010f0ef	obj/kernel.asm	/^c010f0ef <vfs_set_bootfs>:$/;"	l
c010f0ef	obj/kernel.asm	/^c010f0ef:	55                   	push   %ebp$/;"	l
c010f0f0	obj/kernel.asm	/^c010f0f0:	89 e5                	mov    %esp,%ebp$/;"	l
c010f0f2	obj/kernel.asm	/^c010f0f2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f0f5	obj/kernel.asm	/^c010f0f5:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010f0fc	obj/kernel.asm	/^c010f0fc:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010f100	obj/kernel.asm	/^c010f100:	74 66                	je     c010f168 <vfs_set_bootfs+0x79>$/;"	l
c010f102	obj/kernel.asm	/^c010f102:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f105	obj/kernel.asm	/^c010f105:	6a 3a                	push   $0x3a$/;"	l
c010f107	obj/kernel.asm	/^c010f107:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f10a	obj/kernel.asm	/^c010f10a:	e8 1e 3d 00 00       	call   c0112e2d <strchr>$/;"	l
c010f10f	obj/kernel.asm	/^c010f10f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f112	obj/kernel.asm	/^c010f112:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f115	obj/kernel.asm	/^c010f115:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f119	obj/kernel.asm	/^c010f119:	74 0d                	je     c010f128 <vfs_set_bootfs+0x39>$/;"	l
c010f11b	obj/kernel.asm	/^c010f11b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f11e	obj/kernel.asm	/^c010f11e:	83 c0 01             	add    $0x1,%eax$/;"	l
c010f121	obj/kernel.asm	/^c010f121:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010f124	obj/kernel.asm	/^c010f124:	84 c0                	test   %al,%al$/;"	l
c010f126	obj/kernel.asm	/^c010f126:	74 07                	je     c010f12f <vfs_set_bootfs+0x40>$/;"	l
c010f128	obj/kernel.asm	/^c010f128:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010f12d	obj/kernel.asm	/^c010f12d:	eb 4d                	jmp    c010f17c <vfs_set_bootfs+0x8d>$/;"	l
c010f12f	obj/kernel.asm	/^c010f12f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f132	obj/kernel.asm	/^c010f132:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f135	obj/kernel.asm	/^c010f135:	e8 54 f4 ff ff       	call   c010e58e <vfs_chdir>$/;"	l
c010f13a	obj/kernel.asm	/^c010f13a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f13d	obj/kernel.asm	/^c010f13d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f140	obj/kernel.asm	/^c010f140:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f144	obj/kernel.asm	/^c010f144:	74 05                	je     c010f14b <vfs_set_bootfs+0x5c>$/;"	l
c010f146	obj/kernel.asm	/^c010f146:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f149	obj/kernel.asm	/^c010f149:	eb 31                	jmp    c010f17c <vfs_set_bootfs+0x8d>$/;"	l
c010f14b	obj/kernel.asm	/^c010f14b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f14e	obj/kernel.asm	/^c010f14e:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010f151	obj/kernel.asm	/^c010f151:	50                   	push   %eax$/;"	l
c010f152	obj/kernel.asm	/^c010f152:	e8 0d f3 ff ff       	call   c010e464 <vfs_get_curdir>$/;"	l
c010f157	obj/kernel.asm	/^c010f157:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f15a	obj/kernel.asm	/^c010f15a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f15d	obj/kernel.asm	/^c010f15d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f161	obj/kernel.asm	/^c010f161:	74 05                	je     c010f168 <vfs_set_bootfs+0x79>$/;"	l
c010f163	obj/kernel.asm	/^c010f163:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f166	obj/kernel.asm	/^c010f166:	eb 14                	jmp    c010f17c <vfs_set_bootfs+0x8d>$/;"	l
c010f168	obj/kernel.asm	/^c010f168:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f16b	obj/kernel.asm	/^c010f16b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f16e	obj/kernel.asm	/^c010f16e:	50                   	push   %eax$/;"	l
c010f16f	obj/kernel.asm	/^c010f16f:	e8 45 ff ff ff       	call   c010f0b9 <change_bootfs>$/;"	l
c010f174	obj/kernel.asm	/^c010f174:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f177	obj/kernel.asm	/^c010f177:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f17c	obj/kernel.asm	/^c010f17c:	c9                   	leave  $/;"	l
c010f17d	obj/kernel.asm	/^c010f17d:	c3                   	ret    $/;"	l
c010f17e	obj/kernel.asm	/^c010f17e <vfs_get_bootfs>:$/;"	l
c010f17e	obj/kernel.asm	/^c010f17e:	55                   	push   %ebp$/;"	l
c010f17f	obj/kernel.asm	/^c010f17f:	89 e5                	mov    %esp,%ebp$/;"	l
c010f181	obj/kernel.asm	/^c010f181:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f184	obj/kernel.asm	/^c010f184:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010f18b	obj/kernel.asm	/^c010f18b:	a1 58 01 15 c0       	mov    0xc0150158,%eax$/;"	l
c010f190	obj/kernel.asm	/^c010f190:	85 c0                	test   %eax,%eax$/;"	l
c010f192	obj/kernel.asm	/^c010f192:	74 29                	je     c010f1bd <vfs_get_bootfs+0x3f>$/;"	l
c010f194	obj/kernel.asm	/^c010f194:	e8 f0 fe ff ff       	call   c010f089 <lock_bootfs>$/;"	l
c010f199	obj/kernel.asm	/^c010f199:	a1 58 01 15 c0       	mov    0xc0150158,%eax$/;"	l
c010f19e	obj/kernel.asm	/^c010f19e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f1a1	obj/kernel.asm	/^c010f1a1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f1a5	obj/kernel.asm	/^c010f1a5:	74 11                	je     c010f1b8 <vfs_get_bootfs+0x3a>$/;"	l
c010f1a7	obj/kernel.asm	/^c010f1a7:	a1 58 01 15 c0       	mov    0xc0150158,%eax$/;"	l
c010f1ac	obj/kernel.asm	/^c010f1ac:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f1af	obj/kernel.asm	/^c010f1af:	50                   	push   %eax$/;"	l
c010f1b0	obj/kernel.asm	/^c010f1b0:	e8 d7 f8 ff ff       	call   c010ea8c <inode_ref_inc>$/;"	l
c010f1b5	obj/kernel.asm	/^c010f1b5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f1b8	obj/kernel.asm	/^c010f1b8:	e8 e4 fe ff ff       	call   c010f0a1 <unlock_bootfs>$/;"	l
c010f1bd	obj/kernel.asm	/^c010f1bd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f1c1	obj/kernel.asm	/^c010f1c1:	75 07                	jne    c010f1ca <vfs_get_bootfs+0x4c>$/;"	l
c010f1c3	obj/kernel.asm	/^c010f1c3:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c010f1c8	obj/kernel.asm	/^c010f1c8:	eb 0d                	jmp    c010f1d7 <vfs_get_bootfs+0x59>$/;"	l
c010f1ca	obj/kernel.asm	/^c010f1ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f1cd	obj/kernel.asm	/^c010f1cd:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010f1d0	obj/kernel.asm	/^c010f1d0:	89 10                	mov    %edx,(%eax)$/;"	l
c010f1d2	obj/kernel.asm	/^c010f1d2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f1d7	obj/kernel.asm	/^c010f1d7:	c9                   	leave  $/;"	l
c010f1d8	obj/kernel.asm	/^c010f1d8:	c3                   	ret    $/;"	l
c010f1d9	obj/kernel.asm	/^c010f1d9 <__intr_save>:$/;"	l
c010f1d9	obj/kernel.asm	/^c010f1d9:	55                   	push   %ebp$/;"	l
c010f1da	obj/kernel.asm	/^c010f1da:	89 e5                	mov    %esp,%ebp$/;"	l
c010f1dc	obj/kernel.asm	/^c010f1dc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f1df	obj/kernel.asm	/^c010f1df:	9c                   	pushf  $/;"	l
c010f1e0	obj/kernel.asm	/^c010f1e0:	58                   	pop    %eax$/;"	l
c010f1e1	obj/kernel.asm	/^c010f1e1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f1e4	obj/kernel.asm	/^c010f1e4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f1e7	obj/kernel.asm	/^c010f1e7:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010f1ec	obj/kernel.asm	/^c010f1ec:	85 c0                	test   %eax,%eax$/;"	l
c010f1ee	obj/kernel.asm	/^c010f1ee:	74 0c                	je     c010f1fc <__intr_save+0x23>$/;"	l
c010f1f0	obj/kernel.asm	/^c010f1f0:	e8 a7 2f ff ff       	call   c010219c <intr_disable>$/;"	l
c010f1f5	obj/kernel.asm	/^c010f1f5:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010f1fa	obj/kernel.asm	/^c010f1fa:	eb 05                	jmp    c010f201 <__intr_save+0x28>$/;"	l
c010f1fc	obj/kernel.asm	/^c010f1fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f201	obj/kernel.asm	/^c010f201:	c9                   	leave  $/;"	l
c010f202	obj/kernel.asm	/^c010f202:	c3                   	ret    $/;"	l
c010f203	obj/kernel.asm	/^c010f203 <__intr_restore>:$/;"	l
c010f203	obj/kernel.asm	/^c010f203:	55                   	push   %ebp$/;"	l
c010f204	obj/kernel.asm	/^c010f204:	89 e5                	mov    %esp,%ebp$/;"	l
c010f206	obj/kernel.asm	/^c010f206:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f209	obj/kernel.asm	/^c010f209:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010f20d	obj/kernel.asm	/^c010f20d:	74 05                	je     c010f214 <__intr_restore+0x11>$/;"	l
c010f20f	obj/kernel.asm	/^c010f20f:	e8 82 2f ff ff       	call   c0102196 <intr_enable>$/;"	l
c010f214	obj/kernel.asm	/^c010f214:	c9                   	leave  $/;"	l
c010f215	obj/kernel.asm	/^c010f215:	c3                   	ret    $/;"	l
c010f216	obj/kernel.asm	/^c010f216 <dev_stdin_write>:$/;"	l
c010f216	obj/kernel.asm	/^c010f216:	55                   	push   %ebp$/;"	l
c010f217	obj/kernel.asm	/^c010f217:	89 e5                	mov    %esp,%ebp$/;"	l
c010f219	obj/kernel.asm	/^c010f219:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f21c	obj/kernel.asm	/^c010f21c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f21f	obj/kernel.asm	/^c010f21f:	88 45 e4             	mov    %al,-0x1c(%ebp)$/;"	l
c010f222	obj/kernel.asm	/^c010f222:	80 7d e4 00          	cmpb   $0x0,-0x1c(%ebp)$/;"	l
c010f226	obj/kernel.asm	/^c010f226:	0f 84 84 00 00 00    	je     c010f2b0 <dev_stdin_write+0x9a>$/;"	l
c010f22c	obj/kernel.asm	/^c010f22c:	e8 a8 ff ff ff       	call   c010f1d9 <__intr_save>$/;"	l
c010f231	obj/kernel.asm	/^c010f231:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f234	obj/kernel.asm	/^c010f234:	a1 84 11 15 c0       	mov    0xc0151184,%eax$/;"	l
c010f239	obj/kernel.asm	/^c010f239:	99                   	cltd   $/;"	l
c010f23a	obj/kernel.asm	/^c010f23a:	c1 ea 14             	shr    $0x14,%edx$/;"	l
c010f23d	obj/kernel.asm	/^c010f23d:	01 d0                	add    %edx,%eax$/;"	l
c010f23f	obj/kernel.asm	/^c010f23f:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c010f244	obj/kernel.asm	/^c010f244:	29 d0                	sub    %edx,%eax$/;"	l
c010f246	obj/kernel.asm	/^c010f246:	89 c2                	mov    %eax,%edx$/;"	l
c010f248	obj/kernel.asm	/^c010f248:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax$/;"	l
c010f24c	obj/kernel.asm	/^c010f24c:	88 82 80 01 15 c0    	mov    %al,-0x3feafe80(%edx)$/;"	l
c010f252	obj/kernel.asm	/^c010f252:	8b 15 84 11 15 c0    	mov    0xc0151184,%edx$/;"	l
c010f258	obj/kernel.asm	/^c010f258:	a1 80 11 15 c0       	mov    0xc0151180,%eax$/;"	l
c010f25d	obj/kernel.asm	/^c010f25d:	29 c2                	sub    %eax,%edx$/;"	l
c010f25f	obj/kernel.asm	/^c010f25f:	89 d0                	mov    %edx,%eax$/;"	l
c010f261	obj/kernel.asm	/^c010f261:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c010f266	obj/kernel.asm	/^c010f266:	7f 0d                	jg     c010f275 <dev_stdin_write+0x5f>$/;"	l
c010f268	obj/kernel.asm	/^c010f268:	a1 84 11 15 c0       	mov    0xc0151184,%eax$/;"	l
c010f26d	obj/kernel.asm	/^c010f26d:	83 c0 01             	add    $0x1,%eax$/;"	l
c010f270	obj/kernel.asm	/^c010f270:	a3 84 11 15 c0       	mov    %eax,0xc0151184$/;"	l
c010f275	obj/kernel.asm	/^c010f275:	a1 40 cf 14 c0       	mov    0xc014cf40,%eax$/;"	l
c010f27a	obj/kernel.asm	/^c010f27a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f27d	obj/kernel.asm	/^c010f27d:	50                   	push   %eax$/;"	l
c010f27e	obj/kernel.asm	/^c010f27e:	e8 e8 a0 ff ff       	call   c010936b <wait_queue_empty>$/;"	l
c010f283	obj/kernel.asm	/^c010f283:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f286	obj/kernel.asm	/^c010f286:	85 c0                	test   %eax,%eax$/;"	l
c010f288	obj/kernel.asm	/^c010f288:	75 18                	jne    c010f2a2 <dev_stdin_write+0x8c>$/;"	l
c010f28a	obj/kernel.asm	/^c010f28a:	a1 40 cf 14 c0       	mov    0xc014cf40,%eax$/;"	l
c010f28f	obj/kernel.asm	/^c010f28f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010f292	obj/kernel.asm	/^c010f292:	6a 01                	push   $0x1$/;"	l
c010f294	obj/kernel.asm	/^c010f294:	68 04 00 00 80       	push   $0x80000004$/;"	l
c010f299	obj/kernel.asm	/^c010f299:	50                   	push   %eax$/;"	l
c010f29a	obj/kernel.asm	/^c010f29a:	e8 7b a1 ff ff       	call   c010941a <wakeup_queue>$/;"	l
c010f29f	obj/kernel.asm	/^c010f29f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f2a2	obj/kernel.asm	/^c010f2a2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f2a5	obj/kernel.asm	/^c010f2a5:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010f2a8	obj/kernel.asm	/^c010f2a8:	e8 56 ff ff ff       	call   c010f203 <__intr_restore>$/;"	l
c010f2ad	obj/kernel.asm	/^c010f2ad:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f2b0	obj/kernel.asm	/^c010f2b0:	c9                   	leave  $/;"	l
c010f2b1	obj/kernel.asm	/^c010f2b1:	c3                   	ret    $/;"	l
c010f2b2	obj/kernel.asm	/^c010f2b2 <dev_stdin_read>:$/;"	l
c010f2b2	obj/kernel.asm	/^c010f2b2:	55                   	push   %ebp$/;"	l
c010f2b3	obj/kernel.asm	/^c010f2b3:	89 e5                	mov    %esp,%ebp$/;"	l
c010f2b5	obj/kernel.asm	/^c010f2b5:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f2b8	obj/kernel.asm	/^c010f2b8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010f2bf	obj/kernel.asm	/^c010f2bf:	e8 15 ff ff ff       	call   c010f1d9 <__intr_save>$/;"	l
c010f2c4	obj/kernel.asm	/^c010f2c4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f2c7	obj/kernel.asm	/^c010f2c7:	e9 be 00 00 00       	jmp    c010f38a <dev_stdin_read+0xd8>$/;"	l
c010f2cc	obj/kernel.asm	/^c010f2cc:	8b 15 80 11 15 c0    	mov    0xc0151180,%edx$/;"	l
c010f2d2	obj/kernel.asm	/^c010f2d2:	a1 84 11 15 c0       	mov    0xc0151184,%eax$/;"	l
c010f2d7	obj/kernel.asm	/^c010f2d7:	39 c2                	cmp    %eax,%edx$/;"	l
c010f2d9	obj/kernel.asm	/^c010f2d9:	7d 2c                	jge    c010f307 <dev_stdin_read+0x55>$/;"	l
c010f2db	obj/kernel.asm	/^c010f2db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f2de	obj/kernel.asm	/^c010f2de:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010f2e1	obj/kernel.asm	/^c010f2e1:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c010f2e4	obj/kernel.asm	/^c010f2e4:	8b 15 80 11 15 c0    	mov    0xc0151180,%edx$/;"	l
c010f2ea	obj/kernel.asm	/^c010f2ea:	89 d1                	mov    %edx,%ecx$/;"	l
c010f2ec	obj/kernel.asm	/^c010f2ec:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
c010f2ef	obj/kernel.asm	/^c010f2ef:	c1 e9 14             	shr    $0x14,%ecx$/;"	l
c010f2f2	obj/kernel.asm	/^c010f2f2:	01 ca                	add    %ecx,%edx$/;"	l
c010f2f4	obj/kernel.asm	/^c010f2f4:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
c010f2fa	obj/kernel.asm	/^c010f2fa:	29 ca                	sub    %ecx,%edx$/;"	l
c010f2fc	obj/kernel.asm	/^c010f2fc:	0f b6 92 80 01 15 c0 	movzbl -0x3feafe80(%edx),%edx$/;"	l
c010f303	obj/kernel.asm	/^c010f303:	88 10                	mov    %dl,(%eax)$/;"	l
c010f305	obj/kernel.asm	/^c010f305:	eb 72                	jmp    c010f379 <dev_stdin_read+0xc7>$/;"	l
c010f307	obj/kernel.asm	/^c010f307:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c010f30a	obj/kernel.asm	/^c010f30a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f30d	obj/kernel.asm	/^c010f30d:	a1 40 cf 14 c0       	mov    0xc014cf40,%eax$/;"	l
c010f312	obj/kernel.asm	/^c010f312:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010f315	obj/kernel.asm	/^c010f315:	68 04 00 00 80       	push   $0x80000004$/;"	l
c010f31a	obj/kernel.asm	/^c010f31a:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010f31d	obj/kernel.asm	/^c010f31d:	50                   	push   %eax$/;"	l
c010f31e	obj/kernel.asm	/^c010f31e:	e8 72 a1 ff ff       	call   c0109495 <wait_current_set>$/;"	l
c010f323	obj/kernel.asm	/^c010f323:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f326	obj/kernel.asm	/^c010f326:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f329	obj/kernel.asm	/^c010f329:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010f32c	obj/kernel.asm	/^c010f32c:	e8 d2 fe ff ff       	call   c010f203 <__intr_restore>$/;"	l
c010f331	obj/kernel.asm	/^c010f331:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f334	obj/kernel.asm	/^c010f334:	e8 77 dc ff ff       	call   c010cfb0 <schedule>$/;"	l
c010f339	obj/kernel.asm	/^c010f339:	e8 9b fe ff ff       	call   c010f1d9 <__intr_save>$/;"	l
c010f33e	obj/kernel.asm	/^c010f33e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f341	obj/kernel.asm	/^c010f341:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f344	obj/kernel.asm	/^c010f344:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010f347	obj/kernel.asm	/^c010f347:	e8 3d a0 ff ff       	call   c0109389 <wait_in_queue>$/;"	l
c010f34c	obj/kernel.asm	/^c010f34c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f34f	obj/kernel.asm	/^c010f34f:	85 c0                	test   %eax,%eax$/;"	l
c010f351	obj/kernel.asm	/^c010f351:	74 14                	je     c010f367 <dev_stdin_read+0xb5>$/;"	l
c010f353	obj/kernel.asm	/^c010f353:	a1 40 cf 14 c0       	mov    0xc014cf40,%eax$/;"	l
c010f358	obj/kernel.asm	/^c010f358:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f35b	obj/kernel.asm	/^c010f35b:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010f35e	obj/kernel.asm	/^c010f35e:	50                   	push   %eax$/;"	l
c010f35f	obj/kernel.asm	/^c010f35f:	e8 49 9e ff ff       	call   c01091ad <wait_queue_del>$/;"	l
c010f364	obj/kernel.asm	/^c010f364:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f367	obj/kernel.asm	/^c010f367:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f36a	obj/kernel.asm	/^c010f36a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f36d	obj/kernel.asm	/^c010f36d:	3d 04 00 00 80       	cmp    $0x80000004,%eax$/;"	l
c010f372	obj/kernel.asm	/^c010f372:	75 22                	jne    c010f396 <dev_stdin_read+0xe4>$/;"	l
c010f374	obj/kernel.asm	/^c010f374:	e9 53 ff ff ff       	jmp    c010f2cc <dev_stdin_read+0x1a>$/;"	l
c010f379	obj/kernel.asm	/^c010f379:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010f37d	obj/kernel.asm	/^c010f37d:	a1 80 11 15 c0       	mov    0xc0151180,%eax$/;"	l
c010f382	obj/kernel.asm	/^c010f382:	83 c0 01             	add    $0x1,%eax$/;"	l
c010f385	obj/kernel.asm	/^c010f385:	a3 80 11 15 c0       	mov    %eax,0xc0151180$/;"	l
c010f38a	obj/kernel.asm	/^c010f38a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f38d	obj/kernel.asm	/^c010f38d:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010f390	obj/kernel.asm	/^c010f390:	0f 82 36 ff ff ff    	jb     c010f2cc <dev_stdin_read+0x1a>$/;"	l
c010f396	obj/kernel.asm	/^c010f396:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f399	obj/kernel.asm	/^c010f399:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010f39c	obj/kernel.asm	/^c010f39c:	e8 62 fe ff ff       	call   c010f203 <__intr_restore>$/;"	l
c010f3a1	obj/kernel.asm	/^c010f3a1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f3a4	obj/kernel.asm	/^c010f3a4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f3a7	obj/kernel.asm	/^c010f3a7:	c9                   	leave  $/;"	l
c010f3a8	obj/kernel.asm	/^c010f3a8:	c3                   	ret    $/;"	l
c010f3a9	obj/kernel.asm	/^c010f3a9 <stdin_open>:$/;"	l
c010f3a9	obj/kernel.asm	/^c010f3a9:	55                   	push   %ebp$/;"	l
c010f3aa	obj/kernel.asm	/^c010f3aa:	89 e5                	mov    %esp,%ebp$/;"	l
c010f3ac	obj/kernel.asm	/^c010f3ac:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010f3b0	obj/kernel.asm	/^c010f3b0:	74 07                	je     c010f3b9 <stdin_open+0x10>$/;"	l
c010f3b2	obj/kernel.asm	/^c010f3b2:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010f3b7	obj/kernel.asm	/^c010f3b7:	eb 05                	jmp    c010f3be <stdin_open+0x15>$/;"	l
c010f3b9	obj/kernel.asm	/^c010f3b9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f3be	obj/kernel.asm	/^c010f3be:	5d                   	pop    %ebp$/;"	l
c010f3bf	obj/kernel.asm	/^c010f3bf:	c3                   	ret    $/;"	l
c010f3c0	obj/kernel.asm	/^c010f3c0 <stdin_close>:$/;"	l
c010f3c0	obj/kernel.asm	/^c010f3c0:	55                   	push   %ebp$/;"	l
c010f3c1	obj/kernel.asm	/^c010f3c1:	89 e5                	mov    %esp,%ebp$/;"	l
c010f3c3	obj/kernel.asm	/^c010f3c3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f3c8	obj/kernel.asm	/^c010f3c8:	5d                   	pop    %ebp$/;"	l
c010f3c9	obj/kernel.asm	/^c010f3c9:	c3                   	ret    $/;"	l
c010f3ca	obj/kernel.asm	/^c010f3ca <stdin_io>:$/;"	l
c010f3ca	obj/kernel.asm	/^c010f3ca:	55                   	push   %ebp$/;"	l
c010f3cb	obj/kernel.asm	/^c010f3cb:	89 e5                	mov    %esp,%ebp$/;"	l
c010f3cd	obj/kernel.asm	/^c010f3cd:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f3d0	obj/kernel.asm	/^c010f3d0:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010f3d4	obj/kernel.asm	/^c010f3d4:	75 37                	jne    c010f40d <stdin_io+0x43>$/;"	l
c010f3d6	obj/kernel.asm	/^c010f3d6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f3d9	obj/kernel.asm	/^c010f3d9:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010f3dc	obj/kernel.asm	/^c010f3dc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f3df	obj/kernel.asm	/^c010f3df:	8b 00                	mov    (%eax),%eax$/;"	l
c010f3e1	obj/kernel.asm	/^c010f3e1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f3e4	obj/kernel.asm	/^c010f3e4:	52                   	push   %edx$/;"	l
c010f3e5	obj/kernel.asm	/^c010f3e5:	50                   	push   %eax$/;"	l
c010f3e6	obj/kernel.asm	/^c010f3e6:	e8 c7 fe ff ff       	call   c010f2b2 <dev_stdin_read>$/;"	l
c010f3eb	obj/kernel.asm	/^c010f3eb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f3ee	obj/kernel.asm	/^c010f3ee:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f3f1	obj/kernel.asm	/^c010f3f1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f3f5	obj/kernel.asm	/^c010f3f5:	7e 11                	jle    c010f408 <stdin_io+0x3e>$/;"	l
c010f3f7	obj/kernel.asm	/^c010f3f7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f3fa	obj/kernel.asm	/^c010f3fa:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010f3fd	obj/kernel.asm	/^c010f3fd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f400	obj/kernel.asm	/^c010f400:	29 c2                	sub    %eax,%edx$/;"	l
c010f402	obj/kernel.asm	/^c010f402:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f405	obj/kernel.asm	/^c010f405:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010f408	obj/kernel.asm	/^c010f408:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f40b	obj/kernel.asm	/^c010f40b:	eb 05                	jmp    c010f412 <stdin_io+0x48>$/;"	l
c010f40d	obj/kernel.asm	/^c010f40d:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010f412	obj/kernel.asm	/^c010f412:	c9                   	leave  $/;"	l
c010f413	obj/kernel.asm	/^c010f413:	c3                   	ret    $/;"	l
c010f414	obj/kernel.asm	/^c010f414 <stdin_ioctl>:$/;"	l
c010f414	obj/kernel.asm	/^c010f414:	55                   	push   %ebp$/;"	l
c010f415	obj/kernel.asm	/^c010f415:	89 e5                	mov    %esp,%ebp$/;"	l
c010f417	obj/kernel.asm	/^c010f417:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010f41c	obj/kernel.asm	/^c010f41c:	5d                   	pop    %ebp$/;"	l
c010f41d	obj/kernel.asm	/^c010f41d:	c3                   	ret    $/;"	l
c010f41e	obj/kernel.asm	/^c010f41e <stdin_device_init>:$/;"	l
c010f41e	obj/kernel.asm	/^c010f41e:	55                   	push   %ebp$/;"	l
c010f41f	obj/kernel.asm	/^c010f41f:	89 e5                	mov    %esp,%ebp$/;"	l
c010f421	obj/kernel.asm	/^c010f421:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f424	obj/kernel.asm	/^c010f424:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f427	obj/kernel.asm	/^c010f427:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010f42d	obj/kernel.asm	/^c010f42d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f430	obj/kernel.asm	/^c010f430:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
c010f437	obj/kernel.asm	/^c010f437:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f43a	obj/kernel.asm	/^c010f43a:	c7 40 08 a9 f3 10 c0 	movl   $0xc010f3a9,0x8(%eax)$/;"	l
c010f441	obj/kernel.asm	/^c010f441:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f444	obj/kernel.asm	/^c010f444:	c7 40 0c c0 f3 10 c0 	movl   $0xc010f3c0,0xc(%eax)$/;"	l
c010f44b	obj/kernel.asm	/^c010f44b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f44e	obj/kernel.asm	/^c010f44e:	c7 40 10 ca f3 10 c0 	movl   $0xc010f3ca,0x10(%eax)$/;"	l
c010f455	obj/kernel.asm	/^c010f455:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f458	obj/kernel.asm	/^c010f458:	c7 40 14 14 f4 10 c0 	movl   $0xc010f414,0x14(%eax)$/;"	l
c010f45f	obj/kernel.asm	/^c010f45f:	c7 05 84 11 15 c0 00 	movl   $0x0,0xc0151184$/;"	l
c010f466	obj/kernel.asm	/^c010f466:	00 00 00 $/;"	l
c010f469	obj/kernel.asm	/^c010f469:	a1 84 11 15 c0       	mov    0xc0151184,%eax$/;"	l
c010f46e	obj/kernel.asm	/^c010f46e:	a3 80 11 15 c0       	mov    %eax,0xc0151180$/;"	l
c010f473	obj/kernel.asm	/^c010f473:	a1 40 cf 14 c0       	mov    0xc014cf40,%eax$/;"	l
c010f478	obj/kernel.asm	/^c010f478:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f47b	obj/kernel.asm	/^c010f47b:	50                   	push   %eax$/;"	l
c010f47c	obj/kernel.asm	/^c010f47c:	e8 77 9c ff ff       	call   c01090f8 <wait_queue_init>$/;"	l
c010f481	obj/kernel.asm	/^c010f481:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f484	obj/kernel.asm	/^c010f484:	c9                   	leave  $/;"	l
c010f485	obj/kernel.asm	/^c010f485:	c3                   	ret    $/;"	l
c010f486	obj/kernel.asm	/^c010f486 <dev_init_stdin>:$/;"	l
c010f486	obj/kernel.asm	/^c010f486:	55                   	push   %ebp$/;"	l
c010f487	obj/kernel.asm	/^c010f487:	89 e5                	mov    %esp,%ebp$/;"	l
c010f489	obj/kernel.asm	/^c010f489:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f48c	obj/kernel.asm	/^c010f48c:	e8 a1 09 00 00       	call   c010fe32 <dev_create_inode>$/;"	l
c010f491	obj/kernel.asm	/^c010f491:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f494	obj/kernel.asm	/^c010f494:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f498	obj/kernel.asm	/^c010f498:	75 14                	jne    c010f4ae <dev_init_stdin+0x28>$/;"	l
c010f49a	obj/kernel.asm	/^c010f49a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010f49d	obj/kernel.asm	/^c010f49d:	68 9c 6d 11 c0       	push   $0xc0116d9c$/;"	l
c010f4a2	obj/kernel.asm	/^c010f4a2:	6a 75                	push   $0x75$/;"	l
c010f4a4	obj/kernel.asm	/^c010f4a4:	68 b5 6d 11 c0       	push   $0xc0116db5$/;"	l
c010f4a9	obj/kernel.asm	/^c010f4a9:	e8 21 10 ff ff       	call   c01004cf <__panic>$/;"	l
c010f4ae	obj/kernel.asm	/^c010f4ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f4b1	obj/kernel.asm	/^c010f4b1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f4b4	obj/kernel.asm	/^c010f4b4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f4b8	obj/kernel.asm	/^c010f4b8:	74 0d                	je     c010f4c7 <dev_init_stdin+0x41>$/;"	l
c010f4ba	obj/kernel.asm	/^c010f4ba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f4bd	obj/kernel.asm	/^c010f4bd:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010f4c0	obj/kernel.asm	/^c010f4c0:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010f4c5	obj/kernel.asm	/^c010f4c5:	74 16                	je     c010f4dd <dev_init_stdin+0x57>$/;"	l
c010f4c7	obj/kernel.asm	/^c010f4c7:	68 d0 6d 11 c0       	push   $0xc0116dd0$/;"	l
c010f4cc	obj/kernel.asm	/^c010f4cc:	68 03 6e 11 c0       	push   $0xc0116e03$/;"	l
c010f4d1	obj/kernel.asm	/^c010f4d1:	6a 77                	push   $0x77$/;"	l
c010f4d3	obj/kernel.asm	/^c010f4d3:	68 b5 6d 11 c0       	push   $0xc0116db5$/;"	l
c010f4d8	obj/kernel.asm	/^c010f4d8:	e8 f2 0f ff ff       	call   c01004cf <__panic>$/;"	l
c010f4dd	obj/kernel.asm	/^c010f4dd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f4e0	obj/kernel.asm	/^c010f4e0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f4e3	obj/kernel.asm	/^c010f4e3:	50                   	push   %eax$/;"	l
c010f4e4	obj/kernel.asm	/^c010f4e4:	e8 35 ff ff ff       	call   c010f41e <stdin_device_init>$/;"	l
c010f4e9	obj/kernel.asm	/^c010f4e9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f4ec	obj/kernel.asm	/^c010f4ec:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010f4ef	obj/kernel.asm	/^c010f4ef:	6a 00                	push   $0x0$/;"	l
c010f4f1	obj/kernel.asm	/^c010f4f1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010f4f4	obj/kernel.asm	/^c010f4f4:	68 18 6e 11 c0       	push   $0xc0116e18$/;"	l
c010f4f9	obj/kernel.asm	/^c010f4f9:	e8 57 eb ff ff       	call   c010e055 <vfs_add_dev>$/;"	l
c010f4fe	obj/kernel.asm	/^c010f4fe:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f501	obj/kernel.asm	/^c010f501:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f504	obj/kernel.asm	/^c010f504:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010f508	obj/kernel.asm	/^c010f508:	74 14                	je     c010f51e <dev_init_stdin+0x98>$/;"	l
c010f50a	obj/kernel.asm	/^c010f50a:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010f50d	obj/kernel.asm	/^c010f50d:	68 1e 6e 11 c0       	push   $0xc0116e1e$/;"	l
c010f512	obj/kernel.asm	/^c010f512:	6a 7b                	push   $0x7b$/;"	l
c010f514	obj/kernel.asm	/^c010f514:	68 b5 6d 11 c0       	push   $0xc0116db5$/;"	l
c010f519	obj/kernel.asm	/^c010f519:	e8 b1 0f ff ff       	call   c01004cf <__panic>$/;"	l
c010f51e	obj/kernel.asm	/^c010f51e:	c9                   	leave  $/;"	l
c010f51f	obj/kernel.asm	/^c010f51f:	c3                   	ret    $/;"	l
c010f520	obj/kernel.asm	/^c010f520 <lock_disk0>:$/;"	l
c010f520	obj/kernel.asm	/^c010f520:	55                   	push   %ebp$/;"	l
c010f521	obj/kernel.asm	/^c010f521:	89 e5                	mov    %esp,%ebp$/;"	l
c010f523	obj/kernel.asm	/^c010f523:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f526	obj/kernel.asm	/^c010f526:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f529	obj/kernel.asm	/^c010f529:	68 94 11 15 c0       	push   $0xc0151194$/;"	l
c010f52e	obj/kernel.asm	/^c010f52e:	e8 8a a1 ff ff       	call   c01096bd <down>$/;"	l
c010f533	obj/kernel.asm	/^c010f533:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f536	obj/kernel.asm	/^c010f536:	c9                   	leave  $/;"	l
c010f537	obj/kernel.asm	/^c010f537:	c3                   	ret    $/;"	l
c010f538	obj/kernel.asm	/^c010f538 <unlock_disk0>:$/;"	l
c010f538	obj/kernel.asm	/^c010f538:	55                   	push   %ebp$/;"	l
c010f539	obj/kernel.asm	/^c010f539:	89 e5                	mov    %esp,%ebp$/;"	l
c010f53b	obj/kernel.asm	/^c010f53b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f53e	obj/kernel.asm	/^c010f53e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f541	obj/kernel.asm	/^c010f541:	68 94 11 15 c0       	push   $0xc0151194$/;"	l
c010f546	obj/kernel.asm	/^c010f546:	e8 57 a1 ff ff       	call   c01096a2 <up>$/;"	l
c010f54b	obj/kernel.asm	/^c010f54b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f54e	obj/kernel.asm	/^c010f54e:	c9                   	leave  $/;"	l
c010f54f	obj/kernel.asm	/^c010f54f:	c3                   	ret    $/;"	l
c010f550	obj/kernel.asm	/^c010f550 <disk0_open>:$/;"	l
c010f550	obj/kernel.asm	/^c010f550:	55                   	push   %ebp$/;"	l
c010f551	obj/kernel.asm	/^c010f551:	89 e5                	mov    %esp,%ebp$/;"	l
c010f553	obj/kernel.asm	/^c010f553:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f558	obj/kernel.asm	/^c010f558:	5d                   	pop    %ebp$/;"	l
c010f559	obj/kernel.asm	/^c010f559:	c3                   	ret    $/;"	l
c010f55a	obj/kernel.asm	/^c010f55a <disk0_close>:$/;"	l
c010f55a	obj/kernel.asm	/^c010f55a:	55                   	push   %ebp$/;"	l
c010f55b	obj/kernel.asm	/^c010f55b:	89 e5                	mov    %esp,%ebp$/;"	l
c010f55d	obj/kernel.asm	/^c010f55d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f562	obj/kernel.asm	/^c010f562:	5d                   	pop    %ebp$/;"	l
c010f563	obj/kernel.asm	/^c010f563:	c3                   	ret    $/;"	l
c010f564	obj/kernel.asm	/^c010f564 <disk0_read_blks_nolock>:$/;"	l
c010f564	obj/kernel.asm	/^c010f564:	55                   	push   %ebp$/;"	l
c010f565	obj/kernel.asm	/^c010f565:	89 e5                	mov    %esp,%ebp$/;"	l
c010f567	obj/kernel.asm	/^c010f567:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f56a	obj/kernel.asm	/^c010f56a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f56d	obj/kernel.asm	/^c010f56d:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010f570	obj/kernel.asm	/^c010f570:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f573	obj/kernel.asm	/^c010f573:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f576	obj/kernel.asm	/^c010f576:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010f579	obj/kernel.asm	/^c010f579:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f57c	obj/kernel.asm	/^c010f57c:	a1 90 11 15 c0       	mov    0xc0151190,%eax$/;"	l
c010f581	obj/kernel.asm	/^c010f581:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010f584	obj/kernel.asm	/^c010f584:	50                   	push   %eax$/;"	l
c010f585	obj/kernel.asm	/^c010f585:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010f588	obj/kernel.asm	/^c010f588:	6a 02                	push   $0x2$/;"	l
c010f58a	obj/kernel.asm	/^c010f58a:	e8 ba 1c ff ff       	call   c0101249 <ide_read_secs>$/;"	l
c010f58f	obj/kernel.asm	/^c010f58f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f592	obj/kernel.asm	/^c010f592:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f595	obj/kernel.asm	/^c010f595:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010f599	obj/kernel.asm	/^c010f599:	74 20                	je     c010f5bb <disk0_read_blks_nolock+0x57>$/;"	l
c010f59b	obj/kernel.asm	/^c010f59b:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010f59e	obj/kernel.asm	/^c010f59e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010f5a1	obj/kernel.asm	/^c010f5a1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010f5a4	obj/kernel.asm	/^c010f5a4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010f5a7	obj/kernel.asm	/^c010f5a7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f5aa	obj/kernel.asm	/^c010f5aa:	68 38 6e 11 c0       	push   $0xc0116e38$/;"	l
c010f5af	obj/kernel.asm	/^c010f5af:	6a 2e                	push   $0x2e$/;"	l
c010f5b1	obj/kernel.asm	/^c010f5b1:	68 80 6e 11 c0       	push   $0xc0116e80$/;"	l
c010f5b6	obj/kernel.asm	/^c010f5b6:	e8 14 0f ff ff       	call   c01004cf <__panic>$/;"	l
c010f5bb	obj/kernel.asm	/^c010f5bb:	c9                   	leave  $/;"	l
c010f5bc	obj/kernel.asm	/^c010f5bc:	c3                   	ret    $/;"	l
c010f5bd	obj/kernel.asm	/^c010f5bd <disk0_write_blks_nolock>:$/;"	l
c010f5bd	obj/kernel.asm	/^c010f5bd:	55                   	push   %ebp$/;"	l
c010f5be	obj/kernel.asm	/^c010f5be:	89 e5                	mov    %esp,%ebp$/;"	l
c010f5c0	obj/kernel.asm	/^c010f5c0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f5c3	obj/kernel.asm	/^c010f5c3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f5c6	obj/kernel.asm	/^c010f5c6:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010f5c9	obj/kernel.asm	/^c010f5c9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f5cc	obj/kernel.asm	/^c010f5cc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f5cf	obj/kernel.asm	/^c010f5cf:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010f5d2	obj/kernel.asm	/^c010f5d2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f5d5	obj/kernel.asm	/^c010f5d5:	a1 90 11 15 c0       	mov    0xc0151190,%eax$/;"	l
c010f5da	obj/kernel.asm	/^c010f5da:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010f5dd	obj/kernel.asm	/^c010f5dd:	50                   	push   %eax$/;"	l
c010f5de	obj/kernel.asm	/^c010f5de:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010f5e1	obj/kernel.asm	/^c010f5e1:	6a 02                	push   $0x2$/;"	l
c010f5e3	obj/kernel.asm	/^c010f5e3:	e8 8a 1e ff ff       	call   c0101472 <ide_write_secs>$/;"	l
c010f5e8	obj/kernel.asm	/^c010f5e8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f5eb	obj/kernel.asm	/^c010f5eb:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f5ee	obj/kernel.asm	/^c010f5ee:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010f5f2	obj/kernel.asm	/^c010f5f2:	74 20                	je     c010f614 <disk0_write_blks_nolock+0x57>$/;"	l
c010f5f4	obj/kernel.asm	/^c010f5f4:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010f5f7	obj/kernel.asm	/^c010f5f7:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010f5fa	obj/kernel.asm	/^c010f5fa:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010f5fd	obj/kernel.asm	/^c010f5fd:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010f600	obj/kernel.asm	/^c010f600:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f603	obj/kernel.asm	/^c010f603:	68 9c 6e 11 c0       	push   $0xc0116e9c$/;"	l
c010f608	obj/kernel.asm	/^c010f608:	6a 38                	push   $0x38$/;"	l
c010f60a	obj/kernel.asm	/^c010f60a:	68 80 6e 11 c0       	push   $0xc0116e80$/;"	l
c010f60f	obj/kernel.asm	/^c010f60f:	e8 bb 0e ff ff       	call   c01004cf <__panic>$/;"	l
c010f614	obj/kernel.asm	/^c010f614:	c9                   	leave  $/;"	l
c010f615	obj/kernel.asm	/^c010f615:	c3                   	ret    $/;"	l
c010f616	obj/kernel.asm	/^c010f616 <disk0_io>:$/;"	l
c010f616	obj/kernel.asm	/^c010f616:	55                   	push   %ebp$/;"	l
c010f617	obj/kernel.asm	/^c010f617:	89 e5                	mov    %esp,%ebp$/;"	l
c010f619	obj/kernel.asm	/^c010f619:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f61c	obj/kernel.asm	/^c010f61c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f61f	obj/kernel.asm	/^c010f61f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f622	obj/kernel.asm	/^c010f622:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010f625	obj/kernel.asm	/^c010f625:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f628	obj/kernel.asm	/^c010f628:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010f62b	obj/kernel.asm	/^c010f62b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f62e	obj/kernel.asm	/^c010f62e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f631	obj/kernel.asm	/^c010f631:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
c010f637	obj/kernel.asm	/^c010f637:	85 c0                	test   %eax,%eax$/;"	l
c010f639	obj/kernel.asm	/^c010f639:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c010f63c	obj/kernel.asm	/^c010f63c:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
c010f63f	obj/kernel.asm	/^c010f63f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f642	obj/kernel.asm	/^c010f642:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f645	obj/kernel.asm	/^c010f645:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010f648	obj/kernel.asm	/^c010f648:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f64b	obj/kernel.asm	/^c010f64b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f64e	obj/kernel.asm	/^c010f64e:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c010f653	obj/kernel.asm	/^c010f653:	85 c0                	test   %eax,%eax$/;"	l
c010f655	obj/kernel.asm	/^c010f655:	75 0c                	jne    c010f663 <disk0_io+0x4d>$/;"	l
c010f657	obj/kernel.asm	/^c010f657:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f65a	obj/kernel.asm	/^c010f65a:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c010f65f	obj/kernel.asm	/^c010f65f:	85 c0                	test   %eax,%eax$/;"	l
c010f661	obj/kernel.asm	/^c010f661:	74 0a                	je     c010f66d <disk0_io+0x57>$/;"	l
c010f663	obj/kernel.asm	/^c010f663:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010f668	obj/kernel.asm	/^c010f668:	e9 3b 01 00 00       	jmp    c010f7a8 <disk0_io+0x192>$/;"	l
c010f66d	obj/kernel.asm	/^c010f66d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010f670	obj/kernel.asm	/^c010f670:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f673	obj/kernel.asm	/^c010f673:	01 c2                	add    %eax,%edx$/;"	l
c010f675	obj/kernel.asm	/^c010f675:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f678	obj/kernel.asm	/^c010f678:	8b 00                	mov    (%eax),%eax$/;"	l
c010f67a	obj/kernel.asm	/^c010f67a:	39 c2                	cmp    %eax,%edx$/;"	l
c010f67c	obj/kernel.asm	/^c010f67c:	76 0a                	jbe    c010f688 <disk0_io+0x72>$/;"	l
c010f67e	obj/kernel.asm	/^c010f67e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010f683	obj/kernel.asm	/^c010f683:	e9 20 01 00 00       	jmp    c010f7a8 <disk0_io+0x192>$/;"	l
c010f688	obj/kernel.asm	/^c010f688:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010f68c	obj/kernel.asm	/^c010f68c:	75 0a                	jne    c010f698 <disk0_io+0x82>$/;"	l
c010f68e	obj/kernel.asm	/^c010f68e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f693	obj/kernel.asm	/^c010f693:	e9 10 01 00 00       	jmp    c010f7a8 <disk0_io+0x192>$/;"	l
c010f698	obj/kernel.asm	/^c010f698:	e8 83 fe ff ff       	call   c010f520 <lock_disk0>$/;"	l
c010f69d	obj/kernel.asm	/^c010f69d:	e9 f2 00 00 00       	jmp    c010f794 <disk0_io+0x17e>$/;"	l
c010f6a2	obj/kernel.asm	/^c010f6a2:	c7 45 e8 00 40 00 00 	movl   $0x4000,-0x18(%ebp)$/;"	l
c010f6a9	obj/kernel.asm	/^c010f6a9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010f6ad	obj/kernel.asm	/^c010f6ad:	74 6a                	je     c010f719 <disk0_io+0x103>$/;"	l
c010f6af	obj/kernel.asm	/^c010f6af:	a1 90 11 15 c0       	mov    0xc0151190,%eax$/;"	l
c010f6b4	obj/kernel.asm	/^c010f6b4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f6b7	obj/kernel.asm	/^c010f6b7:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
c010f6ba	obj/kernel.asm	/^c010f6ba:	52                   	push   %edx$/;"	l
c010f6bb	obj/kernel.asm	/^c010f6bb:	6a 00                	push   $0x0$/;"	l
c010f6bd	obj/kernel.asm	/^c010f6bd:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010f6c0	obj/kernel.asm	/^c010f6c0:	50                   	push   %eax$/;"	l
c010f6c1	obj/kernel.asm	/^c010f6c1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010f6c4	obj/kernel.asm	/^c010f6c4:	e8 7d b8 ff ff       	call   c010af46 <iobuf_move>$/;"	l
c010f6c9	obj/kernel.asm	/^c010f6c9:	83 c4 20             	add    $0x20,%esp$/;"	l
c010f6cc	obj/kernel.asm	/^c010f6cc:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010f6cf	obj/kernel.asm	/^c010f6cf:	85 c0                	test   %eax,%eax$/;"	l
c010f6d1	obj/kernel.asm	/^c010f6d1:	74 14                	je     c010f6e7 <disk0_io+0xd1>$/;"	l
c010f6d3	obj/kernel.asm	/^c010f6d3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010f6d6	obj/kernel.asm	/^c010f6d6:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010f6d9	obj/kernel.asm	/^c010f6d9:	77 0c                	ja     c010f6e7 <disk0_io+0xd1>$/;"	l
c010f6db	obj/kernel.asm	/^c010f6db:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010f6de	obj/kernel.asm	/^c010f6de:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c010f6e3	obj/kernel.asm	/^c010f6e3:	85 c0                	test   %eax,%eax$/;"	l
c010f6e5	obj/kernel.asm	/^c010f6e5:	74 16                	je     c010f6fd <disk0_io+0xe7>$/;"	l
c010f6e7	obj/kernel.asm	/^c010f6e7:	68 e8 6e 11 c0       	push   $0xc0116ee8$/;"	l
c010f6ec	obj/kernel.asm	/^c010f6ec:	68 26 6f 11 c0       	push   $0xc0116f26$/;"	l
c010f6f1	obj/kernel.asm	/^c010f6f1:	6a 57                	push   $0x57$/;"	l
c010f6f3	obj/kernel.asm	/^c010f6f3:	68 80 6e 11 c0       	push   $0xc0116e80$/;"	l
c010f6f8	obj/kernel.asm	/^c010f6f8:	e8 d2 0d ff ff       	call   c01004cf <__panic>$/;"	l
c010f6fd	obj/kernel.asm	/^c010f6fd:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010f700	obj/kernel.asm	/^c010f700:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010f703	obj/kernel.asm	/^c010f703:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f706	obj/kernel.asm	/^c010f706:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f709	obj/kernel.asm	/^c010f709:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010f70c	obj/kernel.asm	/^c010f70c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010f70f	obj/kernel.asm	/^c010f70f:	e8 a9 fe ff ff       	call   c010f5bd <disk0_write_blks_nolock>$/;"	l
c010f714	obj/kernel.asm	/^c010f714:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f717	obj/kernel.asm	/^c010f717:	eb 6f                	jmp    c010f788 <disk0_io+0x172>$/;"	l
c010f719	obj/kernel.asm	/^c010f719:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f71c	obj/kernel.asm	/^c010f71c:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010f71f	obj/kernel.asm	/^c010f71f:	76 06                	jbe    c010f727 <disk0_io+0x111>$/;"	l
c010f721	obj/kernel.asm	/^c010f721:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f724	obj/kernel.asm	/^c010f724:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010f727	obj/kernel.asm	/^c010f727:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f72a	obj/kernel.asm	/^c010f72a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010f72d	obj/kernel.asm	/^c010f72d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f730	obj/kernel.asm	/^c010f730:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f733	obj/kernel.asm	/^c010f733:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010f736	obj/kernel.asm	/^c010f736:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010f739	obj/kernel.asm	/^c010f739:	e8 26 fe ff ff       	call   c010f564 <disk0_read_blks_nolock>$/;"	l
c010f73e	obj/kernel.asm	/^c010f73e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f741	obj/kernel.asm	/^c010f741:	a1 90 11 15 c0       	mov    0xc0151190,%eax$/;"	l
c010f746	obj/kernel.asm	/^c010f746:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f749	obj/kernel.asm	/^c010f749:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
c010f74c	obj/kernel.asm	/^c010f74c:	52                   	push   %edx$/;"	l
c010f74d	obj/kernel.asm	/^c010f74d:	6a 01                	push   $0x1$/;"	l
c010f74f	obj/kernel.asm	/^c010f74f:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010f752	obj/kernel.asm	/^c010f752:	50                   	push   %eax$/;"	l
c010f753	obj/kernel.asm	/^c010f753:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010f756	obj/kernel.asm	/^c010f756:	e8 eb b7 ff ff       	call   c010af46 <iobuf_move>$/;"	l
c010f75b	obj/kernel.asm	/^c010f75b:	83 c4 20             	add    $0x20,%esp$/;"	l
c010f75e	obj/kernel.asm	/^c010f75e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010f761	obj/kernel.asm	/^c010f761:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c010f764	obj/kernel.asm	/^c010f764:	75 0c                	jne    c010f772 <disk0_io+0x15c>$/;"	l
c010f766	obj/kernel.asm	/^c010f766:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010f769	obj/kernel.asm	/^c010f769:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c010f76e	obj/kernel.asm	/^c010f76e:	85 c0                	test   %eax,%eax$/;"	l
c010f770	obj/kernel.asm	/^c010f770:	74 16                	je     c010f788 <disk0_io+0x172>$/;"	l
c010f772	obj/kernel.asm	/^c010f772:	68 3c 6f 11 c0       	push   $0xc0116f3c$/;"	l
c010f777	obj/kernel.asm	/^c010f777:	68 26 6f 11 c0       	push   $0xc0116f26$/;"	l
c010f77c	obj/kernel.asm	/^c010f77c:	6a 62                	push   $0x62$/;"	l
c010f77e	obj/kernel.asm	/^c010f77e:	68 80 6e 11 c0       	push   $0xc0116e80$/;"	l
c010f783	obj/kernel.asm	/^c010f783:	e8 47 0d ff ff       	call   c01004cf <__panic>$/;"	l
c010f788	obj/kernel.asm	/^c010f788:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010f78b	obj/kernel.asm	/^c010f78b:	29 45 f4             	sub    %eax,-0xc(%ebp)$/;"	l
c010f78e	obj/kernel.asm	/^c010f78e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f791	obj/kernel.asm	/^c010f791:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c010f794	obj/kernel.asm	/^c010f794:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f798	obj/kernel.asm	/^c010f798:	0f 85 04 ff ff ff    	jne    c010f6a2 <disk0_io+0x8c>$/;"	l
c010f79e	obj/kernel.asm	/^c010f79e:	e8 95 fd ff ff       	call   c010f538 <unlock_disk0>$/;"	l
c010f7a3	obj/kernel.asm	/^c010f7a3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f7a8	obj/kernel.asm	/^c010f7a8:	c9                   	leave  $/;"	l
c010f7a9	obj/kernel.asm	/^c010f7a9:	c3                   	ret    $/;"	l
c010f7aa	obj/kernel.asm	/^c010f7aa <disk0_ioctl>:$/;"	l
c010f7aa	obj/kernel.asm	/^c010f7aa:	55                   	push   %ebp$/;"	l
c010f7ab	obj/kernel.asm	/^c010f7ab:	89 e5                	mov    %esp,%ebp$/;"	l
c010f7ad	obj/kernel.asm	/^c010f7ad:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010f7b2	obj/kernel.asm	/^c010f7b2:	5d                   	pop    %ebp$/;"	l
c010f7b3	obj/kernel.asm	/^c010f7b3:	c3                   	ret    $/;"	l
c010f7b4	obj/kernel.asm	/^c010f7b4 <disk0_device_init>:$/;"	l
c010f7b4	obj/kernel.asm	/^c010f7b4:	55                   	push   %ebp$/;"	l
c010f7b5	obj/kernel.asm	/^c010f7b5:	89 e5                	mov    %esp,%ebp$/;"	l
c010f7b7	obj/kernel.asm	/^c010f7b7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f7ba	obj/kernel.asm	/^c010f7ba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f7bd	obj/kernel.asm	/^c010f7bd:	6a 02                	push   $0x2$/;"	l
c010f7bf	obj/kernel.asm	/^c010f7bf:	e8 04 1a ff ff       	call   c01011c8 <ide_device_valid>$/;"	l
c010f7c4	obj/kernel.asm	/^c010f7c4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f7c7	obj/kernel.asm	/^c010f7c7:	85 c0                	test   %eax,%eax$/;"	l
c010f7c9	obj/kernel.asm	/^c010f7c9:	75 14                	jne    c010f7df <disk0_device_init+0x2b>$/;"	l
c010f7cb	obj/kernel.asm	/^c010f7cb:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010f7ce	obj/kernel.asm	/^c010f7ce:	68 6c 6f 11 c0       	push   $0xc0116f6c$/;"	l
c010f7d3	obj/kernel.asm	/^c010f7d3:	6a 73                	push   $0x73$/;"	l
c010f7d5	obj/kernel.asm	/^c010f7d5:	68 80 6e 11 c0       	push   $0xc0116e80$/;"	l
c010f7da	obj/kernel.asm	/^c010f7da:	e8 f0 0c ff ff       	call   c01004cf <__panic>$/;"	l
c010f7df	obj/kernel.asm	/^c010f7df:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f7e2	obj/kernel.asm	/^c010f7e2:	6a 02                	push   $0x2$/;"	l
c010f7e4	obj/kernel.asm	/^c010f7e4:	e8 1f 1a ff ff       	call   c0101208 <ide_device_size>$/;"	l
c010f7e9	obj/kernel.asm	/^c010f7e9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f7ec	obj/kernel.asm	/^c010f7ec:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c010f7ef	obj/kernel.asm	/^c010f7ef:	89 c2                	mov    %eax,%edx$/;"	l
c010f7f1	obj/kernel.asm	/^c010f7f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f7f4	obj/kernel.asm	/^c010f7f4:	89 10                	mov    %edx,(%eax)$/;"	l
c010f7f6	obj/kernel.asm	/^c010f7f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f7f9	obj/kernel.asm	/^c010f7f9:	c7 40 04 00 10 00 00 	movl   $0x1000,0x4(%eax)$/;"	l
c010f800	obj/kernel.asm	/^c010f800:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f803	obj/kernel.asm	/^c010f803:	c7 40 08 50 f5 10 c0 	movl   $0xc010f550,0x8(%eax)$/;"	l
c010f80a	obj/kernel.asm	/^c010f80a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f80d	obj/kernel.asm	/^c010f80d:	c7 40 0c 5a f5 10 c0 	movl   $0xc010f55a,0xc(%eax)$/;"	l
c010f814	obj/kernel.asm	/^c010f814:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f817	obj/kernel.asm	/^c010f817:	c7 40 10 16 f6 10 c0 	movl   $0xc010f616,0x10(%eax)$/;"	l
c010f81e	obj/kernel.asm	/^c010f81e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f821	obj/kernel.asm	/^c010f821:	c7 40 14 aa f7 10 c0 	movl   $0xc010f7aa,0x14(%eax)$/;"	l
c010f828	obj/kernel.asm	/^c010f828:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f82b	obj/kernel.asm	/^c010f82b:	6a 01                	push   $0x1$/;"	l
c010f82d	obj/kernel.asm	/^c010f82d:	68 94 11 15 c0       	push   $0xc0151194$/;"	l
c010f832	obj/kernel.asm	/^c010f832:	e8 00 9d ff ff       	call   c0109537 <sem_init>$/;"	l
c010f837	obj/kernel.asm	/^c010f837:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f83a	obj/kernel.asm	/^c010f83a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f83d	obj/kernel.asm	/^c010f83d:	68 00 40 00 00       	push   $0x4000$/;"	l
c010f842	obj/kernel.asm	/^c010f842:	e8 58 7c ff ff       	call   c010749f <kmalloc>$/;"	l
c010f847	obj/kernel.asm	/^c010f847:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f84a	obj/kernel.asm	/^c010f84a:	a3 90 11 15 c0       	mov    %eax,0xc0151190$/;"	l
c010f84f	obj/kernel.asm	/^c010f84f:	a1 90 11 15 c0       	mov    0xc0151190,%eax$/;"	l
c010f854	obj/kernel.asm	/^c010f854:	85 c0                	test   %eax,%eax$/;"	l
c010f856	obj/kernel.asm	/^c010f856:	75 14                	jne    c010f86c <disk0_device_init+0xb8>$/;"	l
c010f858	obj/kernel.asm	/^c010f858:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010f85b	obj/kernel.asm	/^c010f85b:	68 8b 6f 11 c0       	push   $0xc0116f8b$/;"	l
c010f860	obj/kernel.asm	/^c010f860:	6a 7f                	push   $0x7f$/;"	l
c010f862	obj/kernel.asm	/^c010f862:	68 80 6e 11 c0       	push   $0xc0116e80$/;"	l
c010f867	obj/kernel.asm	/^c010f867:	e8 63 0c ff ff       	call   c01004cf <__panic>$/;"	l
c010f86c	obj/kernel.asm	/^c010f86c:	c9                   	leave  $/;"	l
c010f86d	obj/kernel.asm	/^c010f86d:	c3                   	ret    $/;"	l
c010f86e	obj/kernel.asm	/^c010f86e <dev_init_disk0>:$/;"	l
c010f86e	obj/kernel.asm	/^c010f86e:	55                   	push   %ebp$/;"	l
c010f86f	obj/kernel.asm	/^c010f86f:	89 e5                	mov    %esp,%ebp$/;"	l
c010f871	obj/kernel.asm	/^c010f871:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f874	obj/kernel.asm	/^c010f874:	e8 b9 05 00 00       	call   c010fe32 <dev_create_inode>$/;"	l
c010f879	obj/kernel.asm	/^c010f879:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f87c	obj/kernel.asm	/^c010f87c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f880	obj/kernel.asm	/^c010f880:	75 17                	jne    c010f899 <dev_init_disk0+0x2b>$/;"	l
c010f882	obj/kernel.asm	/^c010f882:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010f885	obj/kernel.asm	/^c010f885:	68 a7 6f 11 c0       	push   $0xc0116fa7$/;"	l
c010f88a	obj/kernel.asm	/^c010f88a:	68 87 00 00 00       	push   $0x87$/;"	l
c010f88f	obj/kernel.asm	/^c010f88f:	68 80 6e 11 c0       	push   $0xc0116e80$/;"	l
c010f894	obj/kernel.asm	/^c010f894:	e8 36 0c ff ff       	call   c01004cf <__panic>$/;"	l
c010f899	obj/kernel.asm	/^c010f899:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f89c	obj/kernel.asm	/^c010f89c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f89f	obj/kernel.asm	/^c010f89f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f8a3	obj/kernel.asm	/^c010f8a3:	74 0d                	je     c010f8b2 <dev_init_disk0+0x44>$/;"	l
c010f8a5	obj/kernel.asm	/^c010f8a5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f8a8	obj/kernel.asm	/^c010f8a8:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010f8ab	obj/kernel.asm	/^c010f8ab:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010f8b0	obj/kernel.asm	/^c010f8b0:	74 19                	je     c010f8cb <dev_init_disk0+0x5d>$/;"	l
c010f8b2	obj/kernel.asm	/^c010f8b2:	68 c0 6f 11 c0       	push   $0xc0116fc0$/;"	l
c010f8b7	obj/kernel.asm	/^c010f8b7:	68 26 6f 11 c0       	push   $0xc0116f26$/;"	l
c010f8bc	obj/kernel.asm	/^c010f8bc:	68 89 00 00 00       	push   $0x89$/;"	l
c010f8c1	obj/kernel.asm	/^c010f8c1:	68 80 6e 11 c0       	push   $0xc0116e80$/;"	l
c010f8c6	obj/kernel.asm	/^c010f8c6:	e8 04 0c ff ff       	call   c01004cf <__panic>$/;"	l
c010f8cb	obj/kernel.asm	/^c010f8cb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f8ce	obj/kernel.asm	/^c010f8ce:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f8d1	obj/kernel.asm	/^c010f8d1:	50                   	push   %eax$/;"	l
c010f8d2	obj/kernel.asm	/^c010f8d2:	e8 dd fe ff ff       	call   c010f7b4 <disk0_device_init>$/;"	l
c010f8d7	obj/kernel.asm	/^c010f8d7:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f8da	obj/kernel.asm	/^c010f8da:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010f8dd	obj/kernel.asm	/^c010f8dd:	6a 01                	push   $0x1$/;"	l
c010f8df	obj/kernel.asm	/^c010f8df:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010f8e2	obj/kernel.asm	/^c010f8e2:	68 f3 6f 11 c0       	push   $0xc0116ff3$/;"	l
c010f8e7	obj/kernel.asm	/^c010f8e7:	e8 69 e7 ff ff       	call   c010e055 <vfs_add_dev>$/;"	l
c010f8ec	obj/kernel.asm	/^c010f8ec:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f8ef	obj/kernel.asm	/^c010f8ef:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f8f2	obj/kernel.asm	/^c010f8f2:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010f8f6	obj/kernel.asm	/^c010f8f6:	74 17                	je     c010f90f <dev_init_disk0+0xa1>$/;"	l
c010f8f8	obj/kernel.asm	/^c010f8f8:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010f8fb	obj/kernel.asm	/^c010f8fb:	68 f9 6f 11 c0       	push   $0xc0116ff9$/;"	l
c010f900	obj/kernel.asm	/^c010f900:	68 8d 00 00 00       	push   $0x8d$/;"	l
c010f905	obj/kernel.asm	/^c010f905:	68 80 6e 11 c0       	push   $0xc0116e80$/;"	l
c010f90a	obj/kernel.asm	/^c010f90a:	e8 c0 0b ff ff       	call   c01004cf <__panic>$/;"	l
c010f90f	obj/kernel.asm	/^c010f90f:	c9                   	leave  $/;"	l
c010f910	obj/kernel.asm	/^c010f910:	c3                   	ret    $/;"	l
c010f911	obj/kernel.asm	/^c010f911 <stdout_open>:$/;"	l
c010f911	obj/kernel.asm	/^c010f911:	55                   	push   %ebp$/;"	l
c010f912	obj/kernel.asm	/^c010f912:	89 e5                	mov    %esp,%ebp$/;"	l
c010f914	obj/kernel.asm	/^c010f914:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c010f918	obj/kernel.asm	/^c010f918:	74 07                	je     c010f921 <stdout_open+0x10>$/;"	l
c010f91a	obj/kernel.asm	/^c010f91a:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010f91f	obj/kernel.asm	/^c010f91f:	eb 05                	jmp    c010f926 <stdout_open+0x15>$/;"	l
c010f921	obj/kernel.asm	/^c010f921:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f926	obj/kernel.asm	/^c010f926:	5d                   	pop    %ebp$/;"	l
c010f927	obj/kernel.asm	/^c010f927:	c3                   	ret    $/;"	l
c010f928	obj/kernel.asm	/^c010f928 <stdout_close>:$/;"	l
c010f928	obj/kernel.asm	/^c010f928:	55                   	push   %ebp$/;"	l
c010f929	obj/kernel.asm	/^c010f929:	89 e5                	mov    %esp,%ebp$/;"	l
c010f92b	obj/kernel.asm	/^c010f92b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f930	obj/kernel.asm	/^c010f930:	5d                   	pop    %ebp$/;"	l
c010f931	obj/kernel.asm	/^c010f931:	c3                   	ret    $/;"	l
c010f932	obj/kernel.asm	/^c010f932 <stdout_io>:$/;"	l
c010f932	obj/kernel.asm	/^c010f932:	55                   	push   %ebp$/;"	l
c010f933	obj/kernel.asm	/^c010f933:	89 e5                	mov    %esp,%ebp$/;"	l
c010f935	obj/kernel.asm	/^c010f935:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f938	obj/kernel.asm	/^c010f938:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010f93c	obj/kernel.asm	/^c010f93c:	74 45                	je     c010f983 <stdout_io+0x51>$/;"	l
c010f93e	obj/kernel.asm	/^c010f93e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f941	obj/kernel.asm	/^c010f941:	8b 00                	mov    (%eax),%eax$/;"	l
c010f943	obj/kernel.asm	/^c010f943:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f946	obj/kernel.asm	/^c010f946:	eb 2a                	jmp    c010f972 <stdout_io+0x40>$/;"	l
c010f948	obj/kernel.asm	/^c010f948:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f94b	obj/kernel.asm	/^c010f94b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010f94e	obj/kernel.asm	/^c010f94e:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010f951	obj/kernel.asm	/^c010f951:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010f954	obj/kernel.asm	/^c010f954:	0f be c0             	movsbl %al,%eax$/;"	l
c010f957	obj/kernel.asm	/^c010f957:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f95a	obj/kernel.asm	/^c010f95a:	50                   	push   %eax$/;"	l
c010f95b	obj/kernel.asm	/^c010f95b:	e8 30 0a ff ff       	call   c0100390 <cputchar>$/;"	l
c010f960	obj/kernel.asm	/^c010f960:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f963	obj/kernel.asm	/^c010f963:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f966	obj/kernel.asm	/^c010f966:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010f969	obj/kernel.asm	/^c010f969:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010f96c	obj/kernel.asm	/^c010f96c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f96f	obj/kernel.asm	/^c010f96f:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010f972	obj/kernel.asm	/^c010f972:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f975	obj/kernel.asm	/^c010f975:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010f978	obj/kernel.asm	/^c010f978:	85 c0                	test   %eax,%eax$/;"	l
c010f97a	obj/kernel.asm	/^c010f97a:	75 cc                	jne    c010f948 <stdout_io+0x16>$/;"	l
c010f97c	obj/kernel.asm	/^c010f97c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f981	obj/kernel.asm	/^c010f981:	eb 05                	jmp    c010f988 <stdout_io+0x56>$/;"	l
c010f983	obj/kernel.asm	/^c010f983:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010f988	obj/kernel.asm	/^c010f988:	c9                   	leave  $/;"	l
c010f989	obj/kernel.asm	/^c010f989:	c3                   	ret    $/;"	l
c010f98a	obj/kernel.asm	/^c010f98a <stdout_ioctl>:$/;"	l
c010f98a	obj/kernel.asm	/^c010f98a:	55                   	push   %ebp$/;"	l
c010f98b	obj/kernel.asm	/^c010f98b:	89 e5                	mov    %esp,%ebp$/;"	l
c010f98d	obj/kernel.asm	/^c010f98d:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010f992	obj/kernel.asm	/^c010f992:	5d                   	pop    %ebp$/;"	l
c010f993	obj/kernel.asm	/^c010f993:	c3                   	ret    $/;"	l
c010f994	obj/kernel.asm	/^c010f994 <stdout_device_init>:$/;"	l
c010f994	obj/kernel.asm	/^c010f994:	55                   	push   %ebp$/;"	l
c010f995	obj/kernel.asm	/^c010f995:	89 e5                	mov    %esp,%ebp$/;"	l
c010f997	obj/kernel.asm	/^c010f997:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f99a	obj/kernel.asm	/^c010f99a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010f9a0	obj/kernel.asm	/^c010f9a0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f9a3	obj/kernel.asm	/^c010f9a3:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
c010f9aa	obj/kernel.asm	/^c010f9aa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f9ad	obj/kernel.asm	/^c010f9ad:	c7 40 08 11 f9 10 c0 	movl   $0xc010f911,0x8(%eax)$/;"	l
c010f9b4	obj/kernel.asm	/^c010f9b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f9b7	obj/kernel.asm	/^c010f9b7:	c7 40 0c 28 f9 10 c0 	movl   $0xc010f928,0xc(%eax)$/;"	l
c010f9be	obj/kernel.asm	/^c010f9be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f9c1	obj/kernel.asm	/^c010f9c1:	c7 40 10 32 f9 10 c0 	movl   $0xc010f932,0x10(%eax)$/;"	l
c010f9c8	obj/kernel.asm	/^c010f9c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f9cb	obj/kernel.asm	/^c010f9cb:	c7 40 14 8a f9 10 c0 	movl   $0xc010f98a,0x14(%eax)$/;"	l
c010f9d2	obj/kernel.asm	/^c010f9d2:	5d                   	pop    %ebp$/;"	l
c010f9d3	obj/kernel.asm	/^c010f9d3:	c3                   	ret    $/;"	l
c010f9d4	obj/kernel.asm	/^c010f9d4 <dev_init_stdout>:$/;"	l
c010f9d4	obj/kernel.asm	/^c010f9d4:	55                   	push   %ebp$/;"	l
c010f9d5	obj/kernel.asm	/^c010f9d5:	89 e5                	mov    %esp,%ebp$/;"	l
c010f9d7	obj/kernel.asm	/^c010f9d7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f9da	obj/kernel.asm	/^c010f9da:	e8 53 04 00 00       	call   c010fe32 <dev_create_inode>$/;"	l
c010f9df	obj/kernel.asm	/^c010f9df:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f9e2	obj/kernel.asm	/^c010f9e2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f9e6	obj/kernel.asm	/^c010f9e6:	75 14                	jne    c010f9fc <dev_init_stdout+0x28>$/;"	l
c010f9e8	obj/kernel.asm	/^c010f9e8:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010f9eb	obj/kernel.asm	/^c010f9eb:	68 14 70 11 c0       	push   $0xc0117014$/;"	l
c010f9f0	obj/kernel.asm	/^c010f9f0:	6a 37                	push   $0x37$/;"	l
c010f9f2	obj/kernel.asm	/^c010f9f2:	68 2e 70 11 c0       	push   $0xc011702e$/;"	l
c010f9f7	obj/kernel.asm	/^c010f9f7:	e8 d3 0a ff ff       	call   c01004cf <__panic>$/;"	l
c010f9fc	obj/kernel.asm	/^c010f9fc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f9ff	obj/kernel.asm	/^c010f9ff:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fa02	obj/kernel.asm	/^c010fa02:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010fa06	obj/kernel.asm	/^c010fa06:	74 0d                	je     c010fa15 <dev_init_stdout+0x41>$/;"	l
c010fa08	obj/kernel.asm	/^c010fa08:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fa0b	obj/kernel.asm	/^c010fa0b:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010fa0e	obj/kernel.asm	/^c010fa0e:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010fa13	obj/kernel.asm	/^c010fa13:	74 16                	je     c010fa2b <dev_init_stdout+0x57>$/;"	l
c010fa15	obj/kernel.asm	/^c010fa15:	68 48 70 11 c0       	push   $0xc0117048$/;"	l
c010fa1a	obj/kernel.asm	/^c010fa1a:	68 7b 70 11 c0       	push   $0xc011707b$/;"	l
c010fa1f	obj/kernel.asm	/^c010fa1f:	6a 39                	push   $0x39$/;"	l
c010fa21	obj/kernel.asm	/^c010fa21:	68 2e 70 11 c0       	push   $0xc011702e$/;"	l
c010fa26	obj/kernel.asm	/^c010fa26:	e8 a4 0a ff ff       	call   c01004cf <__panic>$/;"	l
c010fa2b	obj/kernel.asm	/^c010fa2b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fa2e	obj/kernel.asm	/^c010fa2e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010fa31	obj/kernel.asm	/^c010fa31:	50                   	push   %eax$/;"	l
c010fa32	obj/kernel.asm	/^c010fa32:	e8 5d ff ff ff       	call   c010f994 <stdout_device_init>$/;"	l
c010fa37	obj/kernel.asm	/^c010fa37:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fa3a	obj/kernel.asm	/^c010fa3a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010fa3d	obj/kernel.asm	/^c010fa3d:	6a 00                	push   $0x0$/;"	l
c010fa3f	obj/kernel.asm	/^c010fa3f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010fa42	obj/kernel.asm	/^c010fa42:	68 90 70 11 c0       	push   $0xc0117090$/;"	l
c010fa47	obj/kernel.asm	/^c010fa47:	e8 09 e6 ff ff       	call   c010e055 <vfs_add_dev>$/;"	l
c010fa4c	obj/kernel.asm	/^c010fa4c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fa4f	obj/kernel.asm	/^c010fa4f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010fa52	obj/kernel.asm	/^c010fa52:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010fa56	obj/kernel.asm	/^c010fa56:	74 14                	je     c010fa6c <dev_init_stdout+0x98>$/;"	l
c010fa58	obj/kernel.asm	/^c010fa58:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010fa5b	obj/kernel.asm	/^c010fa5b:	68 97 70 11 c0       	push   $0xc0117097$/;"	l
c010fa60	obj/kernel.asm	/^c010fa60:	6a 3d                	push   $0x3d$/;"	l
c010fa62	obj/kernel.asm	/^c010fa62:	68 2e 70 11 c0       	push   $0xc011702e$/;"	l
c010fa67	obj/kernel.asm	/^c010fa67:	e8 63 0a ff ff       	call   c01004cf <__panic>$/;"	l
c010fa6c	obj/kernel.asm	/^c010fa6c:	c9                   	leave  $/;"	l
c010fa6d	obj/kernel.asm	/^c010fa6d:	c3                   	ret    $/;"	l
c010fa6e	obj/kernel.asm	/^c010fa6e <dev_open>:$/;"	l
c010fa6e	obj/kernel.asm	/^c010fa6e:	55                   	push   %ebp$/;"	l
c010fa6f	obj/kernel.asm	/^c010fa6f:	89 e5                	mov    %esp,%ebp$/;"	l
c010fa71	obj/kernel.asm	/^c010fa71:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fa74	obj/kernel.asm	/^c010fa74:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fa77	obj/kernel.asm	/^c010fa77:	83 e0 3c             	and    $0x3c,%eax$/;"	l
c010fa7a	obj/kernel.asm	/^c010fa7a:	85 c0                	test   %eax,%eax$/;"	l
c010fa7c	obj/kernel.asm	/^c010fa7c:	74 07                	je     c010fa85 <dev_open+0x17>$/;"	l
c010fa7e	obj/kernel.asm	/^c010fa7e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010fa83	obj/kernel.asm	/^c010fa83:	eb 49                	jmp    c010face <dev_open+0x60>$/;"	l
c010fa85	obj/kernel.asm	/^c010fa85:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fa88	obj/kernel.asm	/^c010fa88:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fa8b	obj/kernel.asm	/^c010fa8b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fa8f	obj/kernel.asm	/^c010fa8f:	74 0d                	je     c010fa9e <dev_open+0x30>$/;"	l
c010fa91	obj/kernel.asm	/^c010fa91:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fa94	obj/kernel.asm	/^c010fa94:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010fa97	obj/kernel.asm	/^c010fa97:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010fa9c	obj/kernel.asm	/^c010fa9c:	74 16                	je     c010fab4 <dev_open+0x46>$/;"	l
c010fa9e	obj/kernel.asm	/^c010fa9e:	68 c0 70 11 c0       	push   $0xc01170c0$/;"	l
c010faa3	obj/kernel.asm	/^c010faa3:	68 f3 70 11 c0       	push   $0xc01170f3$/;"	l
c010faa8	obj/kernel.asm	/^c010faa8:	6a 11                	push   $0x11$/;"	l
c010faaa	obj/kernel.asm	/^c010faaa:	68 08 71 11 c0       	push   $0xc0117108$/;"	l
c010faaf	obj/kernel.asm	/^c010faaf:	e8 1b 0a ff ff       	call   c01004cf <__panic>$/;"	l
c010fab4	obj/kernel.asm	/^c010fab4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fab7	obj/kernel.asm	/^c010fab7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010faba	obj/kernel.asm	/^c010faba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fabd	obj/kernel.asm	/^c010fabd:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010fac0	obj/kernel.asm	/^c010fac0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010fac3	obj/kernel.asm	/^c010fac3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010fac6	obj/kernel.asm	/^c010fac6:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010fac9	obj/kernel.asm	/^c010fac9:	ff d0                	call   *%eax$/;"	l
c010facb	obj/kernel.asm	/^c010facb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010face	obj/kernel.asm	/^c010face:	c9                   	leave  $/;"	l
c010facf	obj/kernel.asm	/^c010facf:	c3                   	ret    $/;"	l
c010fad0	obj/kernel.asm	/^c010fad0 <dev_close>:$/;"	l
c010fad0	obj/kernel.asm	/^c010fad0:	55                   	push   %ebp$/;"	l
c010fad1	obj/kernel.asm	/^c010fad1:	89 e5                	mov    %esp,%ebp$/;"	l
c010fad3	obj/kernel.asm	/^c010fad3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fad6	obj/kernel.asm	/^c010fad6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fad9	obj/kernel.asm	/^c010fad9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fadc	obj/kernel.asm	/^c010fadc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fae0	obj/kernel.asm	/^c010fae0:	74 0d                	je     c010faef <dev_close+0x1f>$/;"	l
c010fae2	obj/kernel.asm	/^c010fae2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fae5	obj/kernel.asm	/^c010fae5:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010fae8	obj/kernel.asm	/^c010fae8:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010faed	obj/kernel.asm	/^c010faed:	74 16                	je     c010fb05 <dev_close+0x35>$/;"	l
c010faef	obj/kernel.asm	/^c010faef:	68 c0 70 11 c0       	push   $0xc01170c0$/;"	l
c010faf4	obj/kernel.asm	/^c010faf4:	68 f3 70 11 c0       	push   $0xc01170f3$/;"	l
c010faf9	obj/kernel.asm	/^c010faf9:	6a 1a                	push   $0x1a$/;"	l
c010fafb	obj/kernel.asm	/^c010fafb:	68 08 71 11 c0       	push   $0xc0117108$/;"	l
c010fb00	obj/kernel.asm	/^c010fb00:	e8 ca 09 ff ff       	call   c01004cf <__panic>$/;"	l
c010fb05	obj/kernel.asm	/^c010fb05:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fb08	obj/kernel.asm	/^c010fb08:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fb0b	obj/kernel.asm	/^c010fb0b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fb0e	obj/kernel.asm	/^c010fb0e:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010fb11	obj/kernel.asm	/^c010fb11:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010fb14	obj/kernel.asm	/^c010fb14:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010fb17	obj/kernel.asm	/^c010fb17:	ff d0                	call   *%eax$/;"	l
c010fb19	obj/kernel.asm	/^c010fb19:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fb1c	obj/kernel.asm	/^c010fb1c:	c9                   	leave  $/;"	l
c010fb1d	obj/kernel.asm	/^c010fb1d:	c3                   	ret    $/;"	l
c010fb1e	obj/kernel.asm	/^c010fb1e <dev_read>:$/;"	l
c010fb1e	obj/kernel.asm	/^c010fb1e:	55                   	push   %ebp$/;"	l
c010fb1f	obj/kernel.asm	/^c010fb1f:	89 e5                	mov    %esp,%ebp$/;"	l
c010fb21	obj/kernel.asm	/^c010fb21:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fb24	obj/kernel.asm	/^c010fb24:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fb27	obj/kernel.asm	/^c010fb27:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fb2a	obj/kernel.asm	/^c010fb2a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fb2e	obj/kernel.asm	/^c010fb2e:	74 0d                	je     c010fb3d <dev_read+0x1f>$/;"	l
c010fb30	obj/kernel.asm	/^c010fb30:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fb33	obj/kernel.asm	/^c010fb33:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010fb36	obj/kernel.asm	/^c010fb36:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010fb3b	obj/kernel.asm	/^c010fb3b:	74 16                	je     c010fb53 <dev_read+0x35>$/;"	l
c010fb3d	obj/kernel.asm	/^c010fb3d:	68 c0 70 11 c0       	push   $0xc01170c0$/;"	l
c010fb42	obj/kernel.asm	/^c010fb42:	68 f3 70 11 c0       	push   $0xc01170f3$/;"	l
c010fb47	obj/kernel.asm	/^c010fb47:	6a 23                	push   $0x23$/;"	l
c010fb49	obj/kernel.asm	/^c010fb49:	68 08 71 11 c0       	push   $0xc0117108$/;"	l
c010fb4e	obj/kernel.asm	/^c010fb4e:	e8 7c 09 ff ff       	call   c01004cf <__panic>$/;"	l
c010fb53	obj/kernel.asm	/^c010fb53:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fb56	obj/kernel.asm	/^c010fb56:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fb59	obj/kernel.asm	/^c010fb59:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fb5c	obj/kernel.asm	/^c010fb5c:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010fb5f	obj/kernel.asm	/^c010fb5f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010fb62	obj/kernel.asm	/^c010fb62:	6a 00                	push   $0x0$/;"	l
c010fb64	obj/kernel.asm	/^c010fb64:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010fb67	obj/kernel.asm	/^c010fb67:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010fb6a	obj/kernel.asm	/^c010fb6a:	ff d0                	call   *%eax$/;"	l
c010fb6c	obj/kernel.asm	/^c010fb6c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fb6f	obj/kernel.asm	/^c010fb6f:	c9                   	leave  $/;"	l
c010fb70	obj/kernel.asm	/^c010fb70:	c3                   	ret    $/;"	l
c010fb71	obj/kernel.asm	/^c010fb71 <dev_write>:$/;"	l
c010fb71	obj/kernel.asm	/^c010fb71:	55                   	push   %ebp$/;"	l
c010fb72	obj/kernel.asm	/^c010fb72:	89 e5                	mov    %esp,%ebp$/;"	l
c010fb74	obj/kernel.asm	/^c010fb74:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fb77	obj/kernel.asm	/^c010fb77:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fb7a	obj/kernel.asm	/^c010fb7a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fb7d	obj/kernel.asm	/^c010fb7d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fb81	obj/kernel.asm	/^c010fb81:	74 0d                	je     c010fb90 <dev_write+0x1f>$/;"	l
c010fb83	obj/kernel.asm	/^c010fb83:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fb86	obj/kernel.asm	/^c010fb86:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010fb89	obj/kernel.asm	/^c010fb89:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010fb8e	obj/kernel.asm	/^c010fb8e:	74 16                	je     c010fba6 <dev_write+0x35>$/;"	l
c010fb90	obj/kernel.asm	/^c010fb90:	68 c0 70 11 c0       	push   $0xc01170c0$/;"	l
c010fb95	obj/kernel.asm	/^c010fb95:	68 f3 70 11 c0       	push   $0xc01170f3$/;"	l
c010fb9a	obj/kernel.asm	/^c010fb9a:	6a 2c                	push   $0x2c$/;"	l
c010fb9c	obj/kernel.asm	/^c010fb9c:	68 08 71 11 c0       	push   $0xc0117108$/;"	l
c010fba1	obj/kernel.asm	/^c010fba1:	e8 29 09 ff ff       	call   c01004cf <__panic>$/;"	l
c010fba6	obj/kernel.asm	/^c010fba6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fba9	obj/kernel.asm	/^c010fba9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fbac	obj/kernel.asm	/^c010fbac:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fbaf	obj/kernel.asm	/^c010fbaf:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010fbb2	obj/kernel.asm	/^c010fbb2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010fbb5	obj/kernel.asm	/^c010fbb5:	6a 01                	push   $0x1$/;"	l
c010fbb7	obj/kernel.asm	/^c010fbb7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010fbba	obj/kernel.asm	/^c010fbba:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010fbbd	obj/kernel.asm	/^c010fbbd:	ff d0                	call   *%eax$/;"	l
c010fbbf	obj/kernel.asm	/^c010fbbf:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fbc2	obj/kernel.asm	/^c010fbc2:	c9                   	leave  $/;"	l
c010fbc3	obj/kernel.asm	/^c010fbc3:	c3                   	ret    $/;"	l
c010fbc4	obj/kernel.asm	/^c010fbc4 <dev_ioctl>:$/;"	l
c010fbc4	obj/kernel.asm	/^c010fbc4:	55                   	push   %ebp$/;"	l
c010fbc5	obj/kernel.asm	/^c010fbc5:	89 e5                	mov    %esp,%ebp$/;"	l
c010fbc7	obj/kernel.asm	/^c010fbc7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fbca	obj/kernel.asm	/^c010fbca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fbcd	obj/kernel.asm	/^c010fbcd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fbd0	obj/kernel.asm	/^c010fbd0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fbd4	obj/kernel.asm	/^c010fbd4:	74 0d                	je     c010fbe3 <dev_ioctl+0x1f>$/;"	l
c010fbd6	obj/kernel.asm	/^c010fbd6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fbd9	obj/kernel.asm	/^c010fbd9:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010fbdc	obj/kernel.asm	/^c010fbdc:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010fbe1	obj/kernel.asm	/^c010fbe1:	74 16                	je     c010fbf9 <dev_ioctl+0x35>$/;"	l
c010fbe3	obj/kernel.asm	/^c010fbe3:	68 c0 70 11 c0       	push   $0xc01170c0$/;"	l
c010fbe8	obj/kernel.asm	/^c010fbe8:	68 f3 70 11 c0       	push   $0xc01170f3$/;"	l
c010fbed	obj/kernel.asm	/^c010fbed:	6a 35                	push   $0x35$/;"	l
c010fbef	obj/kernel.asm	/^c010fbef:	68 08 71 11 c0       	push   $0xc0117108$/;"	l
c010fbf4	obj/kernel.asm	/^c010fbf4:	e8 d6 08 ff ff       	call   c01004cf <__panic>$/;"	l
c010fbf9	obj/kernel.asm	/^c010fbf9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fbfc	obj/kernel.asm	/^c010fbfc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fbff	obj/kernel.asm	/^c010fbff:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fc02	obj/kernel.asm	/^c010fc02:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010fc05	obj/kernel.asm	/^c010fc05:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010fc08	obj/kernel.asm	/^c010fc08:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010fc0b	obj/kernel.asm	/^c010fc0b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010fc0e	obj/kernel.asm	/^c010fc0e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010fc11	obj/kernel.asm	/^c010fc11:	ff d0                	call   *%eax$/;"	l
c010fc13	obj/kernel.asm	/^c010fc13:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fc16	obj/kernel.asm	/^c010fc16:	c9                   	leave  $/;"	l
c010fc17	obj/kernel.asm	/^c010fc17:	c3                   	ret    $/;"	l
c010fc18	obj/kernel.asm	/^c010fc18 <dev_fstat>:$/;"	l
c010fc18	obj/kernel.asm	/^c010fc18:	55                   	push   %ebp$/;"	l
c010fc19	obj/kernel.asm	/^c010fc19:	89 e5                	mov    %esp,%ebp$/;"	l
c010fc1b	obj/kernel.asm	/^c010fc1b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fc1e	obj/kernel.asm	/^c010fc1e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010fc21	obj/kernel.asm	/^c010fc21:	6a 10                	push   $0x10$/;"	l
c010fc23	obj/kernel.asm	/^c010fc23:	6a 00                	push   $0x0$/;"	l
c010fc25	obj/kernel.asm	/^c010fc25:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010fc28	obj/kernel.asm	/^c010fc28:	e8 bf 33 00 00       	call   c0112fec <memset>$/;"	l
c010fc2d	obj/kernel.asm	/^c010fc2d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fc30	obj/kernel.asm	/^c010fc30:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fc33	obj/kernel.asm	/^c010fc33:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fc36	obj/kernel.asm	/^c010fc36:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fc3a	obj/kernel.asm	/^c010fc3a:	74 17                	je     c010fc53 <dev_fstat+0x3b>$/;"	l
c010fc3c	obj/kernel.asm	/^c010fc3c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fc3f	obj/kernel.asm	/^c010fc3f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010fc42	obj/kernel.asm	/^c010fc42:	85 c0                	test   %eax,%eax$/;"	l
c010fc44	obj/kernel.asm	/^c010fc44:	74 0d                	je     c010fc53 <dev_fstat+0x3b>$/;"	l
c010fc46	obj/kernel.asm	/^c010fc46:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fc49	obj/kernel.asm	/^c010fc49:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010fc4c	obj/kernel.asm	/^c010fc4c:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c010fc4f	obj/kernel.asm	/^c010fc4f:	85 c0                	test   %eax,%eax$/;"	l
c010fc51	obj/kernel.asm	/^c010fc51:	75 16                	jne    c010fc69 <dev_fstat+0x51>$/;"	l
c010fc53	obj/kernel.asm	/^c010fc53:	68 1c 71 11 c0       	push   $0xc011711c$/;"	l
c010fc58	obj/kernel.asm	/^c010fc58:	68 f3 70 11 c0       	push   $0xc01170f3$/;"	l
c010fc5d	obj/kernel.asm	/^c010fc5d:	6a 42                	push   $0x42$/;"	l
c010fc5f	obj/kernel.asm	/^c010fc5f:	68 08 71 11 c0       	push   $0xc0117108$/;"	l
c010fc64	obj/kernel.asm	/^c010fc64:	e8 66 08 ff ff       	call   c01004cf <__panic>$/;"	l
c010fc69	obj/kernel.asm	/^c010fc69:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010fc6c	obj/kernel.asm	/^c010fc6c:	68 6c 71 11 c0       	push   $0xc011716c$/;"	l
c010fc71	obj/kernel.asm	/^c010fc71:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010fc74	obj/kernel.asm	/^c010fc74:	e8 e5 ef ff ff       	call   c010ec5e <inode_check>$/;"	l
c010fc79	obj/kernel.asm	/^c010fc79:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fc7c	obj/kernel.asm	/^c010fc7c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fc7f	obj/kernel.asm	/^c010fc7f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010fc82	obj/kernel.asm	/^c010fc82:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c010fc85	obj/kernel.asm	/^c010fc85:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010fc88	obj/kernel.asm	/^c010fc88:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010fc8b	obj/kernel.asm	/^c010fc8b:	52                   	push   %edx$/;"	l
c010fc8c	obj/kernel.asm	/^c010fc8c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010fc8f	obj/kernel.asm	/^c010fc8f:	ff d0                	call   *%eax$/;"	l
c010fc91	obj/kernel.asm	/^c010fc91:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fc94	obj/kernel.asm	/^c010fc94:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fc97	obj/kernel.asm	/^c010fc97:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010fc9b	obj/kernel.asm	/^c010fc9b:	74 05                	je     c010fca2 <dev_fstat+0x8a>$/;"	l
c010fc9d	obj/kernel.asm	/^c010fc9d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fca0	obj/kernel.asm	/^c010fca0:	eb 64                	jmp    c010fd06 <dev_fstat+0xee>$/;"	l
c010fca2	obj/kernel.asm	/^c010fca2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fca5	obj/kernel.asm	/^c010fca5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010fca8	obj/kernel.asm	/^c010fca8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010fcac	obj/kernel.asm	/^c010fcac:	74 0d                	je     c010fcbb <dev_fstat+0xa3>$/;"	l
c010fcae	obj/kernel.asm	/^c010fcae:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fcb1	obj/kernel.asm	/^c010fcb1:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010fcb4	obj/kernel.asm	/^c010fcb4:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010fcb9	obj/kernel.asm	/^c010fcb9:	74 16                	je     c010fcd1 <dev_fstat+0xb9>$/;"	l
c010fcbb	obj/kernel.asm	/^c010fcbb:	68 c0 70 11 c0       	push   $0xc01170c0$/;"	l
c010fcc0	obj/kernel.asm	/^c010fcc0:	68 f3 70 11 c0       	push   $0xc01170f3$/;"	l
c010fcc5	obj/kernel.asm	/^c010fcc5:	6a 45                	push   $0x45$/;"	l
c010fcc7	obj/kernel.asm	/^c010fcc7:	68 08 71 11 c0       	push   $0xc0117108$/;"	l
c010fccc	obj/kernel.asm	/^c010fccc:	e8 fe 07 ff ff       	call   c01004cf <__panic>$/;"	l
c010fcd1	obj/kernel.asm	/^c010fcd1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fcd4	obj/kernel.asm	/^c010fcd4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010fcd7	obj/kernel.asm	/^c010fcd7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fcda	obj/kernel.asm	/^c010fcda:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
c010fce1	obj/kernel.asm	/^c010fce1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010fce4	obj/kernel.asm	/^c010fce4:	8b 10                	mov    (%eax),%edx$/;"	l
c010fce6	obj/kernel.asm	/^c010fce6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fce9	obj/kernel.asm	/^c010fce9:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010fcec	obj/kernel.asm	/^c010fcec:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fcef	obj/kernel.asm	/^c010fcef:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010fcf2	obj/kernel.asm	/^c010fcf2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010fcf5	obj/kernel.asm	/^c010fcf5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010fcf8	obj/kernel.asm	/^c010fcf8:	0f af d0             	imul   %eax,%edx$/;"	l
c010fcfb	obj/kernel.asm	/^c010fcfb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fcfe	obj/kernel.asm	/^c010fcfe:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010fd01	obj/kernel.asm	/^c010fd01:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010fd06	obj/kernel.asm	/^c010fd06:	c9                   	leave  $/;"	l
c010fd07	obj/kernel.asm	/^c010fd07:	c3                   	ret    $/;"	l
c010fd08	obj/kernel.asm	/^c010fd08 <dev_gettype>:$/;"	l
c010fd08	obj/kernel.asm	/^c010fd08:	55                   	push   %ebp$/;"	l
c010fd09	obj/kernel.asm	/^c010fd09:	89 e5                	mov    %esp,%ebp$/;"	l
c010fd0b	obj/kernel.asm	/^c010fd0b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fd0e	obj/kernel.asm	/^c010fd0e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fd11	obj/kernel.asm	/^c010fd11:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fd14	obj/kernel.asm	/^c010fd14:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fd18	obj/kernel.asm	/^c010fd18:	74 0d                	je     c010fd27 <dev_gettype+0x1f>$/;"	l
c010fd1a	obj/kernel.asm	/^c010fd1a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fd1d	obj/kernel.asm	/^c010fd1d:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010fd20	obj/kernel.asm	/^c010fd20:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010fd25	obj/kernel.asm	/^c010fd25:	74 16                	je     c010fd3d <dev_gettype+0x35>$/;"	l
c010fd27	obj/kernel.asm	/^c010fd27:	68 c0 70 11 c0       	push   $0xc01170c0$/;"	l
c010fd2c	obj/kernel.asm	/^c010fd2c:	68 f3 70 11 c0       	push   $0xc01170f3$/;"	l
c010fd31	obj/kernel.asm	/^c010fd31:	6a 53                	push   $0x53$/;"	l
c010fd33	obj/kernel.asm	/^c010fd33:	68 08 71 11 c0       	push   $0xc0117108$/;"	l
c010fd38	obj/kernel.asm	/^c010fd38:	e8 92 07 ff ff       	call   c01004cf <__panic>$/;"	l
c010fd3d	obj/kernel.asm	/^c010fd3d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fd40	obj/kernel.asm	/^c010fd40:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fd43	obj/kernel.asm	/^c010fd43:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fd46	obj/kernel.asm	/^c010fd46:	8b 00                	mov    (%eax),%eax$/;"	l
c010fd48	obj/kernel.asm	/^c010fd48:	85 c0                	test   %eax,%eax$/;"	l
c010fd4a	obj/kernel.asm	/^c010fd4a:	74 07                	je     c010fd53 <dev_gettype+0x4b>$/;"	l
c010fd4c	obj/kernel.asm	/^c010fd4c:	ba 00 50 00 00       	mov    $0x5000,%edx$/;"	l
c010fd51	obj/kernel.asm	/^c010fd51:	eb 05                	jmp    c010fd58 <dev_gettype+0x50>$/;"	l
c010fd53	obj/kernel.asm	/^c010fd53:	ba 00 40 00 00       	mov    $0x4000,%edx$/;"	l
c010fd58	obj/kernel.asm	/^c010fd58:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fd5b	obj/kernel.asm	/^c010fd5b:	89 10                	mov    %edx,(%eax)$/;"	l
c010fd5d	obj/kernel.asm	/^c010fd5d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010fd62	obj/kernel.asm	/^c010fd62:	c9                   	leave  $/;"	l
c010fd63	obj/kernel.asm	/^c010fd63:	c3                   	ret    $/;"	l
c010fd64	obj/kernel.asm	/^c010fd64 <dev_tryseek>:$/;"	l
c010fd64	obj/kernel.asm	/^c010fd64:	55                   	push   %ebp$/;"	l
c010fd65	obj/kernel.asm	/^c010fd65:	89 e5                	mov    %esp,%ebp$/;"	l
c010fd67	obj/kernel.asm	/^c010fd67:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fd6a	obj/kernel.asm	/^c010fd6a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fd6d	obj/kernel.asm	/^c010fd6d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fd70	obj/kernel.asm	/^c010fd70:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fd74	obj/kernel.asm	/^c010fd74:	74 0d                	je     c010fd83 <dev_tryseek+0x1f>$/;"	l
c010fd76	obj/kernel.asm	/^c010fd76:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fd79	obj/kernel.asm	/^c010fd79:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010fd7c	obj/kernel.asm	/^c010fd7c:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010fd81	obj/kernel.asm	/^c010fd81:	74 16                	je     c010fd99 <dev_tryseek+0x35>$/;"	l
c010fd83	obj/kernel.asm	/^c010fd83:	68 c0 70 11 c0       	push   $0xc01170c0$/;"	l
c010fd88	obj/kernel.asm	/^c010fd88:	68 f3 70 11 c0       	push   $0xc01170f3$/;"	l
c010fd8d	obj/kernel.asm	/^c010fd8d:	6a 5f                	push   $0x5f$/;"	l
c010fd8f	obj/kernel.asm	/^c010fd8f:	68 08 71 11 c0       	push   $0xc0117108$/;"	l
c010fd94	obj/kernel.asm	/^c010fd94:	e8 36 07 ff ff       	call   c01004cf <__panic>$/;"	l
c010fd99	obj/kernel.asm	/^c010fd99:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fd9c	obj/kernel.asm	/^c010fd9c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fd9f	obj/kernel.asm	/^c010fd9f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fda2	obj/kernel.asm	/^c010fda2:	8b 00                	mov    (%eax),%eax$/;"	l
c010fda4	obj/kernel.asm	/^c010fda4:	85 c0                	test   %eax,%eax$/;"	l
c010fda6	obj/kernel.asm	/^c010fda6:	74 38                	je     c010fde0 <dev_tryseek+0x7c>$/;"	l
c010fda8	obj/kernel.asm	/^c010fda8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fdab	obj/kernel.asm	/^c010fdab:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010fdae	obj/kernel.asm	/^c010fdae:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
c010fdb1	obj/kernel.asm	/^c010fdb1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010fdb6	obj/kernel.asm	/^c010fdb6:	f7 f1                	div    %ecx$/;"	l
c010fdb8	obj/kernel.asm	/^c010fdb8:	89 d0                	mov    %edx,%eax$/;"	l
c010fdba	obj/kernel.asm	/^c010fdba:	85 c0                	test   %eax,%eax$/;"	l
c010fdbc	obj/kernel.asm	/^c010fdbc:	75 22                	jne    c010fde0 <dev_tryseek+0x7c>$/;"	l
c010fdbe	obj/kernel.asm	/^c010fdbe:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010fdc2	obj/kernel.asm	/^c010fdc2:	78 1c                	js     c010fde0 <dev_tryseek+0x7c>$/;"	l
c010fdc4	obj/kernel.asm	/^c010fdc4:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010fdc7	obj/kernel.asm	/^c010fdc7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fdca	obj/kernel.asm	/^c010fdca:	8b 08                	mov    (%eax),%ecx$/;"	l
c010fdcc	obj/kernel.asm	/^c010fdcc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fdcf	obj/kernel.asm	/^c010fdcf:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010fdd2	obj/kernel.asm	/^c010fdd2:	0f af c1             	imul   %ecx,%eax$/;"	l
c010fdd5	obj/kernel.asm	/^c010fdd5:	39 c2                	cmp    %eax,%edx$/;"	l
c010fdd7	obj/kernel.asm	/^c010fdd7:	73 07                	jae    c010fde0 <dev_tryseek+0x7c>$/;"	l
c010fdd9	obj/kernel.asm	/^c010fdd9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010fdde	obj/kernel.asm	/^c010fdde:	eb 05                	jmp    c010fde5 <dev_tryseek+0x81>$/;"	l
c010fde0	obj/kernel.asm	/^c010fde0:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010fde5	obj/kernel.asm	/^c010fde5:	c9                   	leave  $/;"	l
c010fde6	obj/kernel.asm	/^c010fde6:	c3                   	ret    $/;"	l
c010fde7	obj/kernel.asm	/^c010fde7 <dev_lookup>:$/;"	l
c010fde7	obj/kernel.asm	/^c010fde7:	55                   	push   %ebp$/;"	l
c010fde8	obj/kernel.asm	/^c010fde8:	89 e5                	mov    %esp,%ebp$/;"	l
c010fdea	obj/kernel.asm	/^c010fdea:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010fded	obj/kernel.asm	/^c010fded:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fdf0	obj/kernel.asm	/^c010fdf0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010fdf3	obj/kernel.asm	/^c010fdf3:	84 c0                	test   %al,%al$/;"	l
c010fdf5	obj/kernel.asm	/^c010fdf5:	74 07                	je     c010fdfe <dev_lookup+0x17>$/;"	l
c010fdf7	obj/kernel.asm	/^c010fdf7:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c010fdfc	obj/kernel.asm	/^c010fdfc:	eb 1b                	jmp    c010fe19 <dev_lookup+0x32>$/;"	l
c010fdfe	obj/kernel.asm	/^c010fdfe:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010fe01	obj/kernel.asm	/^c010fe01:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010fe04	obj/kernel.asm	/^c010fe04:	e8 83 ec ff ff       	call   c010ea8c <inode_ref_inc>$/;"	l
c010fe09	obj/kernel.asm	/^c010fe09:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fe0c	obj/kernel.asm	/^c010fe0c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010fe0f	obj/kernel.asm	/^c010fe0f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010fe12	obj/kernel.asm	/^c010fe12:	89 10                	mov    %edx,(%eax)$/;"	l
c010fe14	obj/kernel.asm	/^c010fe14:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010fe19	obj/kernel.asm	/^c010fe19:	c9                   	leave  $/;"	l
c010fe1a	obj/kernel.asm	/^c010fe1a:	c3                   	ret    $/;"	l
c010fe1b	obj/kernel.asm	/^c010fe1b <dev_init>:$/;"	l
c010fe1b	obj/kernel.asm	/^c010fe1b:	55                   	push   %ebp$/;"	l
c010fe1c	obj/kernel.asm	/^c010fe1c:	89 e5                	mov    %esp,%ebp$/;"	l
c010fe1e	obj/kernel.asm	/^c010fe1e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010fe21	obj/kernel.asm	/^c010fe21:	e8 60 f6 ff ff       	call   c010f486 <dev_init_stdin>$/;"	l
c010fe26	obj/kernel.asm	/^c010fe26:	e8 a9 fb ff ff       	call   c010f9d4 <dev_init_stdout>$/;"	l
c010fe2b	obj/kernel.asm	/^c010fe2b:	e8 3e fa ff ff       	call   c010f86e <dev_init_disk0>$/;"	l
c010fe30	obj/kernel.asm	/^c010fe30:	c9                   	leave  $/;"	l
c010fe31	obj/kernel.asm	/^c010fe31:	c3                   	ret    $/;"	l
c010fe32	obj/kernel.asm	/^c010fe32 <dev_create_inode>:$/;"	l
c010fe32	obj/kernel.asm	/^c010fe32:	55                   	push   %ebp$/;"	l
c010fe33	obj/kernel.asm	/^c010fe33:	89 e5                	mov    %esp,%ebp$/;"	l
c010fe35	obj/kernel.asm	/^c010fe35:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fe38	obj/kernel.asm	/^c010fe38:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010fe3b	obj/kernel.asm	/^c010fe3b:	68 34 12 00 00       	push   $0x1234$/;"	l
c010fe40	obj/kernel.asm	/^c010fe40:	e8 7e eb ff ff       	call   c010e9c3 <__alloc_inode>$/;"	l
c010fe45	obj/kernel.asm	/^c010fe45:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fe48	obj/kernel.asm	/^c010fe48:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fe4b	obj/kernel.asm	/^c010fe4b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fe4f	obj/kernel.asm	/^c010fe4f:	74 15                	je     c010fe66 <dev_create_inode+0x34>$/;"	l
c010fe51	obj/kernel.asm	/^c010fe51:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010fe54	obj/kernel.asm	/^c010fe54:	6a 00                	push   $0x0$/;"	l
c010fe56	obj/kernel.asm	/^c010fe56:	68 80 71 11 c0       	push   $0xc0117180$/;"	l
c010fe5b	obj/kernel.asm	/^c010fe5b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010fe5e	obj/kernel.asm	/^c010fe5e:	e8 8a eb ff ff       	call   c010e9ed <inode_init>$/;"	l
c010fe63	obj/kernel.asm	/^c010fe63:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fe66	obj/kernel.asm	/^c010fe66:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fe69	obj/kernel.asm	/^c010fe69:	c9                   	leave  $/;"	l
c010fe6a	obj/kernel.asm	/^c010fe6a:	c3                   	ret    $/;"	l
c010fe6b	obj/kernel.asm	/^c010fe6b <sfs_init>:$/;"	l
c010fe6b	obj/kernel.asm	/^c010fe6b:	55                   	push   %ebp$/;"	l
c010fe6c	obj/kernel.asm	/^c010fe6c:	89 e5                	mov    %esp,%ebp$/;"	l
c010fe6e	obj/kernel.asm	/^c010fe6e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fe71	obj/kernel.asm	/^c010fe71:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010fe74	obj/kernel.asm	/^c010fe74:	68 c0 71 11 c0       	push   $0xc01171c0$/;"	l
c010fe79	obj/kernel.asm	/^c010fe79:	e8 7c 08 00 00       	call   c01106fa <sfs_mount>$/;"	l
c010fe7e	obj/kernel.asm	/^c010fe7e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fe81	obj/kernel.asm	/^c010fe81:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fe84	obj/kernel.asm	/^c010fe84:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fe88	obj/kernel.asm	/^c010fe88:	74 14                	je     c010fe9e <sfs_init+0x33>$/;"	l
c010fe8a	obj/kernel.asm	/^c010fe8a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010fe8d	obj/kernel.asm	/^c010fe8d:	68 c6 71 11 c0       	push   $0xc01171c6$/;"	l
c010fe92	obj/kernel.asm	/^c010fe92:	6a 10                	push   $0x10$/;"	l
c010fe94	obj/kernel.asm	/^c010fe94:	68 e3 71 11 c0       	push   $0xc01171e3$/;"	l
c010fe99	obj/kernel.asm	/^c010fe99:	e8 31 06 ff ff       	call   c01004cf <__panic>$/;"	l
c010fe9e	obj/kernel.asm	/^c010fe9e:	c9                   	leave  $/;"	l
c010fe9f	obj/kernel.asm	/^c010fe9f:	c3                   	ret    $/;"	l
c010fea0	obj/kernel.asm	/^c010fea0 <lock_sfs_fs>:$/;"	l
c010fea0	obj/kernel.asm	/^c010fea0:	55                   	push   %ebp$/;"	l
c010fea1	obj/kernel.asm	/^c010fea1:	89 e5                	mov    %esp,%ebp$/;"	l
c010fea3	obj/kernel.asm	/^c010fea3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010fea6	obj/kernel.asm	/^c010fea6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fea9	obj/kernel.asm	/^c010fea9:	83 c0 3c             	add    $0x3c,%eax$/;"	l
c010feac	obj/kernel.asm	/^c010feac:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010feaf	obj/kernel.asm	/^c010feaf:	50                   	push   %eax$/;"	l
c010feb0	obj/kernel.asm	/^c010feb0:	e8 08 98 ff ff       	call   c01096bd <down>$/;"	l
c010feb5	obj/kernel.asm	/^c010feb5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010feb8	obj/kernel.asm	/^c010feb8:	c9                   	leave  $/;"	l
c010feb9	obj/kernel.asm	/^c010feb9:	c3                   	ret    $/;"	l
c010feba	obj/kernel.asm	/^c010feba <lock_sfs_io>:$/;"	l
c010feba	obj/kernel.asm	/^c010feba:	55                   	push   %ebp$/;"	l
c010febb	obj/kernel.asm	/^c010febb:	89 e5                	mov    %esp,%ebp$/;"	l
c010febd	obj/kernel.asm	/^c010febd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010fec0	obj/kernel.asm	/^c010fec0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fec3	obj/kernel.asm	/^c010fec3:	83 c0 48             	add    $0x48,%eax$/;"	l
c010fec6	obj/kernel.asm	/^c010fec6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010fec9	obj/kernel.asm	/^c010fec9:	50                   	push   %eax$/;"	l
c010feca	obj/kernel.asm	/^c010feca:	e8 ee 97 ff ff       	call   c01096bd <down>$/;"	l
c010fecf	obj/kernel.asm	/^c010fecf:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fed2	obj/kernel.asm	/^c010fed2:	c9                   	leave  $/;"	l
c010fed3	obj/kernel.asm	/^c010fed3:	c3                   	ret    $/;"	l
c010fed4	obj/kernel.asm	/^c010fed4 <unlock_sfs_fs>:$/;"	l
c010fed4	obj/kernel.asm	/^c010fed4:	55                   	push   %ebp$/;"	l
c010fed5	obj/kernel.asm	/^c010fed5:	89 e5                	mov    %esp,%ebp$/;"	l
c010fed7	obj/kernel.asm	/^c010fed7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010feda	obj/kernel.asm	/^c010feda:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fedd	obj/kernel.asm	/^c010fedd:	83 c0 3c             	add    $0x3c,%eax$/;"	l
c010fee0	obj/kernel.asm	/^c010fee0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010fee3	obj/kernel.asm	/^c010fee3:	50                   	push   %eax$/;"	l
c010fee4	obj/kernel.asm	/^c010fee4:	e8 b9 97 ff ff       	call   c01096a2 <up>$/;"	l
c010fee9	obj/kernel.asm	/^c010fee9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010feec	obj/kernel.asm	/^c010feec:	c9                   	leave  $/;"	l
c010feed	obj/kernel.asm	/^c010feed:	c3                   	ret    $/;"	l
c010feee	obj/kernel.asm	/^c010feee <unlock_sfs_io>:$/;"	l
c010feee	obj/kernel.asm	/^c010feee:	55                   	push   %ebp$/;"	l
c010feef	obj/kernel.asm	/^c010feef:	89 e5                	mov    %esp,%ebp$/;"	l
c010fef1	obj/kernel.asm	/^c010fef1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010fef4	obj/kernel.asm	/^c010fef4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fef7	obj/kernel.asm	/^c010fef7:	83 c0 48             	add    $0x48,%eax$/;"	l
c010fefa	obj/kernel.asm	/^c010fefa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010fefd	obj/kernel.asm	/^c010fefd:	50                   	push   %eax$/;"	l
c010fefe	obj/kernel.asm	/^c010fefe:	e8 9f 97 ff ff       	call   c01096a2 <up>$/;"	l
c010ff03	obj/kernel.asm	/^c010ff03:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ff06	obj/kernel.asm	/^c010ff06:	c9                   	leave  $/;"	l
c010ff07	obj/kernel.asm	/^c010ff07:	c3                   	ret    $/;"	l
c010ff08	obj/kernel.asm	/^c010ff08 <sfs_sync>:$/;"	l
c010ff08	obj/kernel.asm	/^c010ff08:	55                   	push   %ebp$/;"	l
c010ff09	obj/kernel.asm	/^c010ff09:	89 e5                	mov    %esp,%ebp$/;"	l
c010ff0b	obj/kernel.asm	/^c010ff0b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ff0e	obj/kernel.asm	/^c010ff0e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ff11	obj/kernel.asm	/^c010ff11:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ff14	obj/kernel.asm	/^c010ff14:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ff18	obj/kernel.asm	/^c010ff18:	74 0a                	je     c010ff24 <sfs_sync+0x1c>$/;"	l
c010ff1a	obj/kernel.asm	/^c010ff1a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ff1d	obj/kernel.asm	/^c010ff1d:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c010ff20	obj/kernel.asm	/^c010ff20:	85 c0                	test   %eax,%eax$/;"	l
c010ff22	obj/kernel.asm	/^c010ff22:	74 16                	je     c010ff3a <sfs_sync+0x32>$/;"	l
c010ff24	obj/kernel.asm	/^c010ff24:	68 f8 71 11 c0       	push   $0xc01171f8$/;"	l
c010ff29	obj/kernel.asm	/^c010ff29:	68 21 72 11 c0       	push   $0xc0117221$/;"	l
c010ff2e	obj/kernel.asm	/^c010ff2e:	6a 15                	push   $0x15$/;"	l
c010ff30	obj/kernel.asm	/^c010ff30:	68 36 72 11 c0       	push   $0xc0117236$/;"	l
c010ff35	obj/kernel.asm	/^c010ff35:	e8 95 05 ff ff       	call   c01004cf <__panic>$/;"	l
c010ff3a	obj/kernel.asm	/^c010ff3a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ff3d	obj/kernel.asm	/^c010ff3d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ff40	obj/kernel.asm	/^c010ff40:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ff43	obj/kernel.asm	/^c010ff43:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010ff46	obj/kernel.asm	/^c010ff46:	e8 55 ff ff ff       	call   c010fea0 <lock_sfs_fs>$/;"	l
c010ff4b	obj/kernel.asm	/^c010ff4b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ff4e	obj/kernel.asm	/^c010ff4e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ff51	obj/kernel.asm	/^c010ff51:	83 c0 60             	add    $0x60,%eax$/;"	l
c010ff54	obj/kernel.asm	/^c010ff54:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ff57	obj/kernel.asm	/^c010ff57:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ff5a	obj/kernel.asm	/^c010ff5a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ff5d	obj/kernel.asm	/^c010ff5d:	eb 69                	jmp    c010ffc8 <sfs_sync+0xc0>$/;"	l
c010ff5f	obj/kernel.asm	/^c010ff5f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ff62	obj/kernel.asm	/^c010ff62:	83 e8 1c             	sub    $0x1c,%eax$/;"	l
c010ff65	obj/kernel.asm	/^c010ff65:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010ff68	obj/kernel.asm	/^c010ff68:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010ff6b	obj/kernel.asm	/^c010ff6b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010ff6e	obj/kernel.asm	/^c010ff6e:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c010ff72	obj/kernel.asm	/^c010ff72:	74 17                	je     c010ff8b <sfs_sync+0x83>$/;"	l
c010ff74	obj/kernel.asm	/^c010ff74:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ff77	obj/kernel.asm	/^c010ff77:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ff7a	obj/kernel.asm	/^c010ff7a:	85 c0                	test   %eax,%eax$/;"	l
c010ff7c	obj/kernel.asm	/^c010ff7c:	74 0d                	je     c010ff8b <sfs_sync+0x83>$/;"	l
c010ff7e	obj/kernel.asm	/^c010ff7e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ff81	obj/kernel.asm	/^c010ff81:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ff84	obj/kernel.asm	/^c010ff84:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ff87	obj/kernel.asm	/^c010ff87:	85 c0                	test   %eax,%eax$/;"	l
c010ff89	obj/kernel.asm	/^c010ff89:	75 16                	jne    c010ffa1 <sfs_sync+0x99>$/;"	l
c010ff8b	obj/kernel.asm	/^c010ff8b:	68 4c 72 11 c0       	push   $0xc011724c$/;"	l
c010ff90	obj/kernel.asm	/^c010ff90:	68 21 72 11 c0       	push   $0xc0117221$/;"	l
c010ff95	obj/kernel.asm	/^c010ff95:	6a 1b                	push   $0x1b$/;"	l
c010ff97	obj/kernel.asm	/^c010ff97:	68 36 72 11 c0       	push   $0xc0117236$/;"	l
c010ff9c	obj/kernel.asm	/^c010ff9c:	e8 2e 05 ff ff       	call   c01004cf <__panic>$/;"	l
c010ffa1	obj/kernel.asm	/^c010ffa1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ffa4	obj/kernel.asm	/^c010ffa4:	68 9a 72 11 c0       	push   $0xc011729a$/;"	l
c010ffa9	obj/kernel.asm	/^c010ffa9:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010ffac	obj/kernel.asm	/^c010ffac:	e8 ad ec ff ff       	call   c010ec5e <inode_check>$/;"	l
c010ffb1	obj/kernel.asm	/^c010ffb1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ffb4	obj/kernel.asm	/^c010ffb4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ffb7	obj/kernel.asm	/^c010ffb7:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ffba	obj/kernel.asm	/^c010ffba:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ffbd	obj/kernel.asm	/^c010ffbd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ffc0	obj/kernel.asm	/^c010ffc0:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c010ffc3	obj/kernel.asm	/^c010ffc3:	ff d0                	call   *%eax$/;"	l
c010ffc5	obj/kernel.asm	/^c010ffc5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ffc8	obj/kernel.asm	/^c010ffc8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ffcb	obj/kernel.asm	/^c010ffcb:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010ffce	obj/kernel.asm	/^c010ffce:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010ffd1	obj/kernel.asm	/^c010ffd1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ffd4	obj/kernel.asm	/^c010ffd4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ffd7	obj/kernel.asm	/^c010ffd7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ffda	obj/kernel.asm	/^c010ffda:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c010ffdd	obj/kernel.asm	/^c010ffdd:	75 80                	jne    c010ff5f <sfs_sync+0x57>$/;"	l
c010ffdf	obj/kernel.asm	/^c010ffdf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ffe2	obj/kernel.asm	/^c010ffe2:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010ffe5	obj/kernel.asm	/^c010ffe5:	e8 ea fe ff ff       	call   c010fed4 <unlock_sfs_fs>$/;"	l
c010ffea	obj/kernel.asm	/^c010ffea:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ffed	obj/kernel.asm	/^c010ffed:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fff0	obj/kernel.asm	/^c010fff0:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010fff3	obj/kernel.asm	/^c010fff3:	85 c0                	test   %eax,%eax$/;"	l
c010fff5	obj/kernel.asm	/^c010fff5:	74 56                	je     c011004d <sfs_sync+0x145>$/;"	l
c010fff7	obj/kernel.asm	/^c010fff7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fffa	obj/kernel.asm	/^c010fffa:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)$/;"	l
c0110001	obj/kernel.asm	/^c0110001:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110004	obj/kernel.asm	/^c0110004:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0110007	obj/kernel.asm	/^c0110007:	e8 4c 2b 00 00       	call   c0112b58 <sfs_sync_super>$/;"	l
c011000c	obj/kernel.asm	/^c011000c:	83 c4 10             	add    $0x10,%esp$/;"	l
c011000f	obj/kernel.asm	/^c011000f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0110012	obj/kernel.asm	/^c0110012:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0110016	obj/kernel.asm	/^c0110016:	74 0f                	je     c0110027 <sfs_sync+0x11f>$/;"	l
c0110018	obj/kernel.asm	/^c0110018:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011001b	obj/kernel.asm	/^c011001b:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c0110022	obj/kernel.asm	/^c0110022:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0110025	obj/kernel.asm	/^c0110025:	eb 2b                	jmp    c0110052 <sfs_sync+0x14a>$/;"	l
c0110027	obj/kernel.asm	/^c0110027:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011002a	obj/kernel.asm	/^c011002a:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c011002d	obj/kernel.asm	/^c011002d:	e8 9c 2b 00 00       	call   c0112bce <sfs_sync_freemap>$/;"	l
c0110032	obj/kernel.asm	/^c0110032:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110035	obj/kernel.asm	/^c0110035:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0110038	obj/kernel.asm	/^c0110038:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c011003c	obj/kernel.asm	/^c011003c:	74 0f                	je     c011004d <sfs_sync+0x145>$/;"	l
c011003e	obj/kernel.asm	/^c011003e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110041	obj/kernel.asm	/^c0110041:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c0110048	obj/kernel.asm	/^c0110048:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c011004b	obj/kernel.asm	/^c011004b:	eb 05                	jmp    c0110052 <sfs_sync+0x14a>$/;"	l
c011004d	obj/kernel.asm	/^c011004d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110052	obj/kernel.asm	/^c0110052:	c9                   	leave  $/;"	l
c0110053	obj/kernel.asm	/^c0110053:	c3                   	ret    $/;"	l
c0110054	obj/kernel.asm	/^c0110054 <sfs_get_root>:$/;"	l
c0110054	obj/kernel.asm	/^c0110054:	55                   	push   %ebp$/;"	l
c0110055	obj/kernel.asm	/^c0110055:	89 e5                	mov    %esp,%ebp$/;"	l
c0110057	obj/kernel.asm	/^c0110057:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011005a	obj/kernel.asm	/^c011005a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011005d	obj/kernel.asm	/^c011005d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110060	obj/kernel.asm	/^c0110060:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110064	obj/kernel.asm	/^c0110064:	74 0a                	je     c0110070 <sfs_get_root+0x1c>$/;"	l
c0110066	obj/kernel.asm	/^c0110066:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110069	obj/kernel.asm	/^c0110069:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c011006c	obj/kernel.asm	/^c011006c:	85 c0                	test   %eax,%eax$/;"	l
c011006e	obj/kernel.asm	/^c011006e:	74 16                	je     c0110086 <sfs_get_root+0x32>$/;"	l
c0110070	obj/kernel.asm	/^c0110070:	68 f8 71 11 c0       	push   $0xc01171f8$/;"	l
c0110075	obj/kernel.asm	/^c0110075:	68 21 72 11 c0       	push   $0xc0117221$/;"	l
c011007a	obj/kernel.asm	/^c011007a:	6a 36                	push   $0x36$/;"	l
c011007c	obj/kernel.asm	/^c011007c:	68 36 72 11 c0       	push   $0xc0117236$/;"	l
c0110081	obj/kernel.asm	/^c0110081:	e8 49 04 ff ff       	call   c01004cf <__panic>$/;"	l
c0110086	obj/kernel.asm	/^c0110086:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110089	obj/kernel.asm	/^c0110089:	83 ec 04             	sub    $0x4,%esp$/;"	l
c011008c	obj/kernel.asm	/^c011008c:	6a 01                	push   $0x1$/;"	l
c011008e	obj/kernel.asm	/^c011008e:	8d 55 ec             	lea    -0x14(%ebp),%edx$/;"	l
c0110091	obj/kernel.asm	/^c0110091:	52                   	push   %edx$/;"	l
c0110092	obj/kernel.asm	/^c0110092:	50                   	push   %eax$/;"	l
c0110093	obj/kernel.asm	/^c0110093:	e8 fa 0a 00 00       	call   c0110b92 <sfs_load_inode>$/;"	l
c0110098	obj/kernel.asm	/^c0110098:	83 c4 10             	add    $0x10,%esp$/;"	l
c011009b	obj/kernel.asm	/^c011009b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011009e	obj/kernel.asm	/^c011009e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01100a2	obj/kernel.asm	/^c01100a2:	74 14                	je     c01100b8 <sfs_get_root+0x64>$/;"	l
c01100a4	obj/kernel.asm	/^c01100a4:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01100a7	obj/kernel.asm	/^c01100a7:	68 a0 72 11 c0       	push   $0xc01172a0$/;"	l
c01100ac	obj/kernel.asm	/^c01100ac:	6a 37                	push   $0x37$/;"	l
c01100ae	obj/kernel.asm	/^c01100ae:	68 36 72 11 c0       	push   $0xc0117236$/;"	l
c01100b3	obj/kernel.asm	/^c01100b3:	e8 17 04 ff ff       	call   c01004cf <__panic>$/;"	l
c01100b8	obj/kernel.asm	/^c01100b8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01100bb	obj/kernel.asm	/^c01100bb:	c9                   	leave  $/;"	l
c01100bc	obj/kernel.asm	/^c01100bc:	c3                   	ret    $/;"	l
c01100bd	obj/kernel.asm	/^c01100bd <sfs_unmount>:$/;"	l
c01100bd	obj/kernel.asm	/^c01100bd:	55                   	push   %ebp$/;"	l
c01100be	obj/kernel.asm	/^c01100be:	89 e5                	mov    %esp,%ebp$/;"	l
c01100c0	obj/kernel.asm	/^c01100c0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01100c3	obj/kernel.asm	/^c01100c3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01100c6	obj/kernel.asm	/^c01100c6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01100c9	obj/kernel.asm	/^c01100c9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01100cd	obj/kernel.asm	/^c01100cd:	74 0a                	je     c01100d9 <sfs_unmount+0x1c>$/;"	l
c01100cf	obj/kernel.asm	/^c01100cf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01100d2	obj/kernel.asm	/^c01100d2:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c01100d5	obj/kernel.asm	/^c01100d5:	85 c0                	test   %eax,%eax$/;"	l
c01100d7	obj/kernel.asm	/^c01100d7:	74 16                	je     c01100ef <sfs_unmount+0x32>$/;"	l
c01100d9	obj/kernel.asm	/^c01100d9:	68 f8 71 11 c0       	push   $0xc01171f8$/;"	l
c01100de	obj/kernel.asm	/^c01100de:	68 21 72 11 c0       	push   $0xc0117221$/;"	l
c01100e3	obj/kernel.asm	/^c01100e3:	6a 41                	push   $0x41$/;"	l
c01100e5	obj/kernel.asm	/^c01100e5:	68 36 72 11 c0       	push   $0xc0117236$/;"	l
c01100ea	obj/kernel.asm	/^c01100ea:	e8 e0 03 ff ff       	call   c01004cf <__panic>$/;"	l
c01100ef	obj/kernel.asm	/^c01100ef:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01100f2	obj/kernel.asm	/^c01100f2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01100f5	obj/kernel.asm	/^c01100f5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01100f8	obj/kernel.asm	/^c01100f8:	83 c0 60             	add    $0x60,%eax$/;"	l
c01100fb	obj/kernel.asm	/^c01100fb:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01100fe	obj/kernel.asm	/^c01100fe:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110101	obj/kernel.asm	/^c0110101:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110104	obj/kernel.asm	/^c0110104:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c0110107	obj/kernel.asm	/^c0110107:	0f 94 c0             	sete   %al$/;"	l
c011010a	obj/kernel.asm	/^c011010a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c011010d	obj/kernel.asm	/^c011010d:	85 c0                	test   %eax,%eax$/;"	l
c011010f	obj/kernel.asm	/^c011010f:	75 07                	jne    c0110118 <sfs_unmount+0x5b>$/;"	l
c0110111	obj/kernel.asm	/^c0110111:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax$/;"	l
c0110116	obj/kernel.asm	/^c0110116:	eb 69                	jmp    c0110181 <sfs_unmount+0xc4>$/;"	l
c0110118	obj/kernel.asm	/^c0110118:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011011b	obj/kernel.asm	/^c011011b:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c011011e	obj/kernel.asm	/^c011011e:	85 c0                	test   %eax,%eax$/;"	l
c0110120	obj/kernel.asm	/^c0110120:	74 16                	je     c0110138 <sfs_unmount+0x7b>$/;"	l
c0110122	obj/kernel.asm	/^c0110122:	68 b9 72 11 c0       	push   $0xc01172b9$/;"	l
c0110127	obj/kernel.asm	/^c0110127:	68 21 72 11 c0       	push   $0xc0117221$/;"	l
c011012c	obj/kernel.asm	/^c011012c:	6a 45                	push   $0x45$/;"	l
c011012e	obj/kernel.asm	/^c011012e:	68 36 72 11 c0       	push   $0xc0117236$/;"	l
c0110133	obj/kernel.asm	/^c0110133:	e8 97 03 ff ff       	call   c01004cf <__panic>$/;"	l
c0110138	obj/kernel.asm	/^c0110138:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011013b	obj/kernel.asm	/^c011013b:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c011013e	obj/kernel.asm	/^c011013e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110141	obj/kernel.asm	/^c0110141:	50                   	push   %eax$/;"	l
c0110142	obj/kernel.asm	/^c0110142:	e8 51 27 00 00       	call   c0112898 <bitmap_destroy>$/;"	l
c0110147	obj/kernel.asm	/^c0110147:	83 c4 10             	add    $0x10,%esp$/;"	l
c011014a	obj/kernel.asm	/^c011014a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011014d	obj/kernel.asm	/^c011014d:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0110150	obj/kernel.asm	/^c0110150:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110153	obj/kernel.asm	/^c0110153:	50                   	push   %eax$/;"	l
c0110154	obj/kernel.asm	/^c0110154:	e8 5e 73 ff ff       	call   c01074b7 <kfree>$/;"	l
c0110159	obj/kernel.asm	/^c0110159:	83 c4 10             	add    $0x10,%esp$/;"	l
c011015c	obj/kernel.asm	/^c011015c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011015f	obj/kernel.asm	/^c011015f:	8b 40 68             	mov    0x68(%eax),%eax$/;"	l
c0110162	obj/kernel.asm	/^c0110162:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110165	obj/kernel.asm	/^c0110165:	50                   	push   %eax$/;"	l
c0110166	obj/kernel.asm	/^c0110166:	e8 4c 73 ff ff       	call   c01074b7 <kfree>$/;"	l
c011016b	obj/kernel.asm	/^c011016b:	83 c4 10             	add    $0x10,%esp$/;"	l
c011016e	obj/kernel.asm	/^c011016e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110171	obj/kernel.asm	/^c0110171:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0110174	obj/kernel.asm	/^c0110174:	e8 3e 73 ff ff       	call   c01074b7 <kfree>$/;"	l
c0110179	obj/kernel.asm	/^c0110179:	83 c4 10             	add    $0x10,%esp$/;"	l
c011017c	obj/kernel.asm	/^c011017c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110181	obj/kernel.asm	/^c0110181:	c9                   	leave  $/;"	l
c0110182	obj/kernel.asm	/^c0110182:	c3                   	ret    $/;"	l
c0110183	obj/kernel.asm	/^c0110183 <sfs_cleanup>:$/;"	l
c0110183	obj/kernel.asm	/^c0110183:	55                   	push   %ebp$/;"	l
c0110184	obj/kernel.asm	/^c0110184:	89 e5                	mov    %esp,%ebp$/;"	l
c0110186	obj/kernel.asm	/^c0110186:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110189	obj/kernel.asm	/^c0110189:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011018c	obj/kernel.asm	/^c011018c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011018f	obj/kernel.asm	/^c011018f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0110193	obj/kernel.asm	/^c0110193:	74 0a                	je     c011019f <sfs_cleanup+0x1c>$/;"	l
c0110195	obj/kernel.asm	/^c0110195:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110198	obj/kernel.asm	/^c0110198:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c011019b	obj/kernel.asm	/^c011019b:	85 c0                	test   %eax,%eax$/;"	l
c011019d	obj/kernel.asm	/^c011019d:	74 16                	je     c01101b5 <sfs_cleanup+0x32>$/;"	l
c011019f	obj/kernel.asm	/^c011019f:	68 f8 71 11 c0       	push   $0xc01171f8$/;"	l
c01101a4	obj/kernel.asm	/^c01101a4:	68 21 72 11 c0       	push   $0xc0117221$/;"	l
c01101a9	obj/kernel.asm	/^c01101a9:	6a 54                	push   $0x54$/;"	l
c01101ab	obj/kernel.asm	/^c01101ab:	68 36 72 11 c0       	push   $0xc0117236$/;"	l
c01101b0	obj/kernel.asm	/^c01101b0:	e8 1a 03 ff ff       	call   c01004cf <__panic>$/;"	l
c01101b5	obj/kernel.asm	/^c01101b5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01101b8	obj/kernel.asm	/^c01101b8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01101bb	obj/kernel.asm	/^c01101bb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01101be	obj/kernel.asm	/^c01101be:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01101c1	obj/kernel.asm	/^c01101c1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01101c4	obj/kernel.asm	/^c01101c4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01101c7	obj/kernel.asm	/^c01101c7:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01101ca	obj/kernel.asm	/^c01101ca:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01101cd	obj/kernel.asm	/^c01101cd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01101d0	obj/kernel.asm	/^c01101d0:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
c01101d3	obj/kernel.asm	/^c01101d3:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01101d6	obj/kernel.asm	/^c01101d6:	83 c2 0c             	add    $0xc,%edx$/;"	l
c01101d9	obj/kernel.asm	/^c01101d9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01101dc	obj/kernel.asm	/^c01101dc:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01101df	obj/kernel.asm	/^c01101df:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01101e2	obj/kernel.asm	/^c01101e2:	50                   	push   %eax$/;"	l
c01101e3	obj/kernel.asm	/^c01101e3:	52                   	push   %edx$/;"	l
c01101e4	obj/kernel.asm	/^c01101e4:	68 cc 72 11 c0       	push   $0xc01172cc$/;"	l
c01101e9	obj/kernel.asm	/^c01101e9:	e8 7c 01 ff ff       	call   c010036a <cprintf>$/;"	l
c01101ee	obj/kernel.asm	/^c01101ee:	83 c4 20             	add    $0x20,%esp$/;"	l
c01101f1	obj/kernel.asm	/^c01101f1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01101f8	obj/kernel.asm	/^c01101f8:	eb 20                	jmp    c011021a <sfs_cleanup+0x97>$/;"	l
c01101fa	obj/kernel.asm	/^c01101fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01101fd	obj/kernel.asm	/^c01101fd:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c0110200	obj/kernel.asm	/^c0110200:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110203	obj/kernel.asm	/^c0110203:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110206	obj/kernel.asm	/^c0110206:	ff d0                	call   *%eax$/;"	l
c0110208	obj/kernel.asm	/^c0110208:	83 c4 10             	add    $0x10,%esp$/;"	l
c011020b	obj/kernel.asm	/^c011020b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011020e	obj/kernel.asm	/^c011020e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110212	obj/kernel.asm	/^c0110212:	75 02                	jne    c0110216 <sfs_cleanup+0x93>$/;"	l
c0110214	obj/kernel.asm	/^c0110214:	eb 0a                	jmp    c0110220 <sfs_cleanup+0x9d>$/;"	l
c0110216	obj/kernel.asm	/^c0110216:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c011021a	obj/kernel.asm	/^c011021a:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%ebp)$/;"	l
c011021e	obj/kernel.asm	/^c011021e:	7e da                	jle    c01101fa <sfs_cleanup+0x77>$/;"	l
c0110220	obj/kernel.asm	/^c0110220:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110224	obj/kernel.asm	/^c0110224:	74 21                	je     c0110247 <sfs_cleanup+0xc4>$/;"	l
c0110226	obj/kernel.asm	/^c0110226:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110229	obj/kernel.asm	/^c0110229:	83 c0 0c             	add    $0xc,%eax$/;"	l
c011022c	obj/kernel.asm	/^c011022c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011022f	obj/kernel.asm	/^c011022f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0110232	obj/kernel.asm	/^c0110232:	50                   	push   %eax$/;"	l
c0110233	obj/kernel.asm	/^c0110233:	68 eb 72 11 c0       	push   $0xc01172eb$/;"	l
c0110238	obj/kernel.asm	/^c0110238:	6a 5f                	push   $0x5f$/;"	l
c011023a	obj/kernel.asm	/^c011023a:	68 36 72 11 c0       	push   $0xc0117236$/;"	l
c011023f	obj/kernel.asm	/^c011023f:	e8 f8 02 ff ff       	call   c010053c <__warn>$/;"	l
c0110244	obj/kernel.asm	/^c0110244:	83 c4 20             	add    $0x20,%esp$/;"	l
c0110247	obj/kernel.asm	/^c0110247:	c9                   	leave  $/;"	l
c0110248	obj/kernel.asm	/^c0110248:	c3                   	ret    $/;"	l
c0110249	obj/kernel.asm	/^c0110249 <sfs_init_read>:$/;"	l
c0110249	obj/kernel.asm	/^c0110249:	55                   	push   %ebp$/;"	l
c011024a	obj/kernel.asm	/^c011024a:	89 e5                	mov    %esp,%ebp$/;"	l
c011024c	obj/kernel.asm	/^c011024c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011024f	obj/kernel.asm	/^c011024f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110252	obj/kernel.asm	/^c0110252:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0110255	obj/kernel.asm	/^c0110255:	50                   	push   %eax$/;"	l
c0110256	obj/kernel.asm	/^c0110256:	68 00 10 00 00       	push   $0x1000$/;"	l
c011025b	obj/kernel.asm	/^c011025b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c011025e	obj/kernel.asm	/^c011025e:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c0110261	obj/kernel.asm	/^c0110261:	50                   	push   %eax$/;"	l
c0110262	obj/kernel.asm	/^c0110262:	e8 b1 ac ff ff       	call   c010af18 <iobuf_init>$/;"	l
c0110267	obj/kernel.asm	/^c0110267:	83 c4 10             	add    $0x10,%esp$/;"	l
c011026a	obj/kernel.asm	/^c011026a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011026d	obj/kernel.asm	/^c011026d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110270	obj/kernel.asm	/^c0110270:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0110273	obj/kernel.asm	/^c0110273:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0110276	obj/kernel.asm	/^c0110276:	6a 00                	push   $0x0$/;"	l
c0110278	obj/kernel.asm	/^c0110278:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c011027b	obj/kernel.asm	/^c011027b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011027e	obj/kernel.asm	/^c011027e:	ff d0                	call   *%eax$/;"	l
c0110280	obj/kernel.asm	/^c0110280:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110283	obj/kernel.asm	/^c0110283:	c9                   	leave  $/;"	l
c0110284	obj/kernel.asm	/^c0110284:	c3                   	ret    $/;"	l
c0110285	obj/kernel.asm	/^c0110285 <sfs_init_freemap>:$/;"	l
c0110285	obj/kernel.asm	/^c0110285:	55                   	push   %ebp$/;"	l
c0110286	obj/kernel.asm	/^c0110286:	89 e5                	mov    %esp,%ebp$/;"	l
c0110288	obj/kernel.asm	/^c0110288:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011028b	obj/kernel.asm	/^c011028b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c011028e	obj/kernel.asm	/^c011028e:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0110291	obj/kernel.asm	/^c0110291:	50                   	push   %eax$/;"	l
c0110292	obj/kernel.asm	/^c0110292:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0110295	obj/kernel.asm	/^c0110295:	e8 26 26 00 00       	call   c01128c0 <bitmap_getdata>$/;"	l
c011029a	obj/kernel.asm	/^c011029a:	83 c4 10             	add    $0x10,%esp$/;"	l
c011029d	obj/kernel.asm	/^c011029d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01102a0	obj/kernel.asm	/^c01102a0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01102a4	obj/kernel.asm	/^c01102a4:	74 0f                	je     c01102b5 <sfs_init_freemap+0x30>$/;"	l
c01102a6	obj/kernel.asm	/^c01102a6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01102a9	obj/kernel.asm	/^c01102a9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01102ac	obj/kernel.asm	/^c01102ac:	89 c2                	mov    %eax,%edx$/;"	l
c01102ae	obj/kernel.asm	/^c01102ae:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01102b1	obj/kernel.asm	/^c01102b1:	39 c2                	cmp    %eax,%edx$/;"	l
c01102b3	obj/kernel.asm	/^c01102b3:	74 19                	je     c01102ce <sfs_init_freemap+0x49>$/;"	l
c01102b5	obj/kernel.asm	/^c01102b5:	68 08 73 11 c0       	push   $0xc0117308$/;"	l
c01102ba	obj/kernel.asm	/^c01102ba:	68 21 72 11 c0       	push   $0xc0117221$/;"	l
c01102bf	obj/kernel.asm	/^c01102bf:	68 83 00 00 00       	push   $0x83$/;"	l
c01102c4	obj/kernel.asm	/^c01102c4:	68 36 72 11 c0       	push   $0xc0117236$/;"	l
c01102c9	obj/kernel.asm	/^c01102c9:	e8 01 02 ff ff       	call   c01004cf <__panic>$/;"	l
c01102ce	obj/kernel.asm	/^c01102ce:	eb 31                	jmp    c0110301 <sfs_init_freemap+0x7c>$/;"	l
c01102d0	obj/kernel.asm	/^c01102d0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01102d3	obj/kernel.asm	/^c01102d3:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01102d6	obj/kernel.asm	/^c01102d6:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01102d9	obj/kernel.asm	/^c01102d9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01102dc	obj/kernel.asm	/^c01102dc:	e8 68 ff ff ff       	call   c0110249 <sfs_init_read>$/;"	l
c01102e1	obj/kernel.asm	/^c01102e1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01102e4	obj/kernel.asm	/^c01102e4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01102e7	obj/kernel.asm	/^c01102e7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01102eb	obj/kernel.asm	/^c01102eb:	74 05                	je     c01102f2 <sfs_init_freemap+0x6d>$/;"	l
c01102ed	obj/kernel.asm	/^c01102ed:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01102f0	obj/kernel.asm	/^c01102f0:	eb 1a                	jmp    c011030c <sfs_init_freemap+0x87>$/;"	l
c01102f2	obj/kernel.asm	/^c01102f2:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c01102f6	obj/kernel.asm	/^c01102f6:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c01102fa	obj/kernel.asm	/^c01102fa:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
c0110301	obj/kernel.asm	/^c0110301:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0110305	obj/kernel.asm	/^c0110305:	75 c9                	jne    c01102d0 <sfs_init_freemap+0x4b>$/;"	l
c0110307	obj/kernel.asm	/^c0110307:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011030c	obj/kernel.asm	/^c011030c:	c9                   	leave  $/;"	l
c011030d	obj/kernel.asm	/^c011030d:	c3                   	ret    $/;"	l
c011030e	obj/kernel.asm	/^c011030e <sfs_do_mount>:$/;"	l
c011030e	obj/kernel.asm	/^c011030e:	55                   	push   %ebp$/;"	l
c011030f	obj/kernel.asm	/^c011030f:	89 e5                	mov    %esp,%ebp$/;"	l
c0110311	obj/kernel.asm	/^c0110311:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0110314	obj/kernel.asm	/^c0110314:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110317	obj/kernel.asm	/^c0110317:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011031a	obj/kernel.asm	/^c011031a:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
c011031f	obj/kernel.asm	/^c011031f:	74 0a                	je     c011032b <sfs_do_mount+0x1d>$/;"	l
c0110321	obj/kernel.asm	/^c0110321:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax$/;"	l
c0110326	obj/kernel.asm	/^c0110326:	e9 cd 03 00 00       	jmp    c01106f8 <sfs_do_mount+0x3ea>$/;"	l
c011032b	obj/kernel.asm	/^c011032b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011032e	obj/kernel.asm	/^c011032e:	6a 00                	push   $0x0$/;"	l
c0110330	obj/kernel.asm	/^c0110330:	e8 08 ed ff ff       	call   c010f03d <__alloc_fs>$/;"	l
c0110335	obj/kernel.asm	/^c0110335:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110338	obj/kernel.asm	/^c0110338:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011033b	obj/kernel.asm	/^c011033b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c011033f	obj/kernel.asm	/^c011033f:	75 0a                	jne    c011034b <sfs_do_mount+0x3d>$/;"	l
c0110341	obj/kernel.asm	/^c0110341:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0110346	obj/kernel.asm	/^c0110346:	e9 ad 03 00 00       	jmp    c01106f8 <sfs_do_mount+0x3ea>$/;"	l
c011034b	obj/kernel.asm	/^c011034b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011034e	obj/kernel.asm	/^c011034e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0110351	obj/kernel.asm	/^c0110351:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0110355	obj/kernel.asm	/^c0110355:	74 0a                	je     c0110361 <sfs_do_mount+0x53>$/;"	l
c0110357	obj/kernel.asm	/^c0110357:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011035a	obj/kernel.asm	/^c011035a:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c011035d	obj/kernel.asm	/^c011035d:	85 c0                	test   %eax,%eax$/;"	l
c011035f	obj/kernel.asm	/^c011035f:	74 19                	je     c011037a <sfs_do_mount+0x6c>$/;"	l
c0110361	obj/kernel.asm	/^c0110361:	68 f8 71 11 c0       	push   $0xc01171f8$/;"	l
c0110366	obj/kernel.asm	/^c0110366:	68 21 72 11 c0       	push   $0xc0117221$/;"	l
c011036b	obj/kernel.asm	/^c011036b:	68 a3 00 00 00       	push   $0xa3$/;"	l
c0110370	obj/kernel.asm	/^c0110370:	68 36 72 11 c0       	push   $0xc0117236$/;"	l
c0110375	obj/kernel.asm	/^c0110375:	e8 55 01 ff ff       	call   c01004cf <__panic>$/;"	l
c011037a	obj/kernel.asm	/^c011037a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011037d	obj/kernel.asm	/^c011037d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0110380	obj/kernel.asm	/^c0110380:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110383	obj/kernel.asm	/^c0110383:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0110386	obj/kernel.asm	/^c0110386:	89 50 2c             	mov    %edx,0x2c(%eax)$/;"	l
c0110389	obj/kernel.asm	/^c0110389:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0110390	obj/kernel.asm	/^c0110390:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110393	obj/kernel.asm	/^c0110393:	68 00 10 00 00       	push   $0x1000$/;"	l
c0110398	obj/kernel.asm	/^c0110398:	e8 02 71 ff ff       	call   c010749f <kmalloc>$/;"	l
c011039d	obj/kernel.asm	/^c011039d:	83 c4 10             	add    $0x10,%esp$/;"	l
c01103a0	obj/kernel.asm	/^c01103a0:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01103a3	obj/kernel.asm	/^c01103a3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01103a6	obj/kernel.asm	/^c01103a6:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01103a9	obj/kernel.asm	/^c01103a9:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
c01103ac	obj/kernel.asm	/^c01103ac:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01103af	obj/kernel.asm	/^c01103af:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01103b2	obj/kernel.asm	/^c01103b2:	85 c0                	test   %eax,%eax$/;"	l
c01103b4	obj/kernel.asm	/^c01103b4:	75 05                	jne    c01103bb <sfs_do_mount+0xad>$/;"	l
c01103b6	obj/kernel.asm	/^c01103b6:	e9 2c 03 00 00       	jmp    c01106e7 <sfs_do_mount+0x3d9>$/;"	l
c01103bb	obj/kernel.asm	/^c01103bb:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01103be	obj/kernel.asm	/^c01103be:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c01103c1	obj/kernel.asm	/^c01103c1:	6a 00                	push   $0x0$/;"	l
c01103c3	obj/kernel.asm	/^c01103c3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01103c6	obj/kernel.asm	/^c01103c6:	e8 7e fe ff ff       	call   c0110249 <sfs_init_read>$/;"	l
c01103cb	obj/kernel.asm	/^c01103cb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01103ce	obj/kernel.asm	/^c01103ce:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01103d1	obj/kernel.asm	/^c01103d1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01103d5	obj/kernel.asm	/^c01103d5:	74 05                	je     c01103dc <sfs_do_mount+0xce>$/;"	l
c01103d7	obj/kernel.asm	/^c01103d7:	e9 fd 02 00 00       	jmp    c01106d9 <sfs_do_mount+0x3cb>$/;"	l
c01103dc	obj/kernel.asm	/^c01103dc:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c01103e3	obj/kernel.asm	/^c01103e3:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01103e6	obj/kernel.asm	/^c01103e6:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01103e9	obj/kernel.asm	/^c01103e9:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01103ec	obj/kernel.asm	/^c01103ec:	8b 00                	mov    (%eax),%eax$/;"	l
c01103ee	obj/kernel.asm	/^c01103ee:	3d 2a be 8d 2f       	cmp    $0x2f8dbe2a,%eax$/;"	l
c01103f3	obj/kernel.asm	/^c01103f3:	74 20                	je     c0110415 <sfs_do_mount+0x107>$/;"	l
c01103f5	obj/kernel.asm	/^c01103f5:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01103f8	obj/kernel.asm	/^c01103f8:	8b 00                	mov    (%eax),%eax$/;"	l
c01103fa	obj/kernel.asm	/^c01103fa:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01103fd	obj/kernel.asm	/^c01103fd:	68 2a be 8d 2f       	push   $0x2f8dbe2a$/;"	l
c0110402	obj/kernel.asm	/^c0110402:	50                   	push   %eax$/;"	l
c0110403	obj/kernel.asm	/^c0110403:	68 34 73 11 c0       	push   $0xc0117334$/;"	l
c0110408	obj/kernel.asm	/^c0110408:	e8 5d ff fe ff       	call   c010036a <cprintf>$/;"	l
c011040d	obj/kernel.asm	/^c011040d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110410	obj/kernel.asm	/^c0110410:	e9 c4 02 00 00       	jmp    c01106d9 <sfs_do_mount+0x3cb>$/;"	l
c0110415	obj/kernel.asm	/^c0110415:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0110418	obj/kernel.asm	/^c0110418:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c011041b	obj/kernel.asm	/^c011041b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011041e	obj/kernel.asm	/^c011041e:	8b 00                	mov    (%eax),%eax$/;"	l
c0110420	obj/kernel.asm	/^c0110420:	39 c2                	cmp    %eax,%edx$/;"	l
c0110422	obj/kernel.asm	/^c0110422:	76 22                	jbe    c0110446 <sfs_do_mount+0x138>$/;"	l
c0110424	obj/kernel.asm	/^c0110424:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110427	obj/kernel.asm	/^c0110427:	8b 10                	mov    (%eax),%edx$/;"	l
c0110429	obj/kernel.asm	/^c0110429:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011042c	obj/kernel.asm	/^c011042c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011042f	obj/kernel.asm	/^c011042f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0110432	obj/kernel.asm	/^c0110432:	52                   	push   %edx$/;"	l
c0110433	obj/kernel.asm	/^c0110433:	50                   	push   %eax$/;"	l
c0110434	obj/kernel.asm	/^c0110434:	68 6c 73 11 c0       	push   $0xc011736c$/;"	l
c0110439	obj/kernel.asm	/^c0110439:	e8 2c ff fe ff       	call   c010036a <cprintf>$/;"	l
c011043e	obj/kernel.asm	/^c011043e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110441	obj/kernel.asm	/^c0110441:	e9 93 02 00 00       	jmp    c01106d9 <sfs_do_mount+0x3cb>$/;"	l
c0110446	obj/kernel.asm	/^c0110446:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0110449	obj/kernel.asm	/^c0110449:	c6 40 2b 00          	movb   $0x0,0x2b(%eax)$/;"	l
c011044d	obj/kernel.asm	/^c011044d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110450	obj/kernel.asm	/^c0110450:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0110453	obj/kernel.asm	/^c0110453:	8b 0a                	mov    (%edx),%ecx$/;"	l
c0110455	obj/kernel.asm	/^c0110455:	89 08                	mov    %ecx,(%eax)$/;"	l
c0110457	obj/kernel.asm	/^c0110457:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
c011045a	obj/kernel.asm	/^c011045a:	89 48 04             	mov    %ecx,0x4(%eax)$/;"	l
c011045d	obj/kernel.asm	/^c011045d:	8b 4a 08             	mov    0x8(%edx),%ecx$/;"	l
c0110460	obj/kernel.asm	/^c0110460:	89 48 08             	mov    %ecx,0x8(%eax)$/;"	l
c0110463	obj/kernel.asm	/^c0110463:	8b 4a 0c             	mov    0xc(%edx),%ecx$/;"	l
c0110466	obj/kernel.asm	/^c0110466:	89 48 0c             	mov    %ecx,0xc(%eax)$/;"	l
c0110469	obj/kernel.asm	/^c0110469:	8b 4a 10             	mov    0x10(%edx),%ecx$/;"	l
c011046c	obj/kernel.asm	/^c011046c:	89 48 10             	mov    %ecx,0x10(%eax)$/;"	l
c011046f	obj/kernel.asm	/^c011046f:	8b 4a 14             	mov    0x14(%edx),%ecx$/;"	l
c0110472	obj/kernel.asm	/^c0110472:	89 48 14             	mov    %ecx,0x14(%eax)$/;"	l
c0110475	obj/kernel.asm	/^c0110475:	8b 4a 18             	mov    0x18(%edx),%ecx$/;"	l
c0110478	obj/kernel.asm	/^c0110478:	89 48 18             	mov    %ecx,0x18(%eax)$/;"	l
c011047b	obj/kernel.asm	/^c011047b:	8b 4a 1c             	mov    0x1c(%edx),%ecx$/;"	l
c011047e	obj/kernel.asm	/^c011047e:	89 48 1c             	mov    %ecx,0x1c(%eax)$/;"	l
c0110481	obj/kernel.asm	/^c0110481:	8b 4a 20             	mov    0x20(%edx),%ecx$/;"	l
c0110484	obj/kernel.asm	/^c0110484:	89 48 20             	mov    %ecx,0x20(%eax)$/;"	l
c0110487	obj/kernel.asm	/^c0110487:	8b 4a 24             	mov    0x24(%edx),%ecx$/;"	l
c011048a	obj/kernel.asm	/^c011048a:	89 48 24             	mov    %ecx,0x24(%eax)$/;"	l
c011048d	obj/kernel.asm	/^c011048d:	8b 52 28             	mov    0x28(%edx),%edx$/;"	l
c0110490	obj/kernel.asm	/^c0110490:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
c0110493	obj/kernel.asm	/^c0110493:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c011049a	obj/kernel.asm	/^c011049a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011049d	obj/kernel.asm	/^c011049d:	68 00 20 00 00       	push   $0x2000$/;"	l
c01104a2	obj/kernel.asm	/^c01104a2:	e8 f8 6f ff ff       	call   c010749f <kmalloc>$/;"	l
c01104a7	obj/kernel.asm	/^c01104a7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01104aa	obj/kernel.asm	/^c01104aa:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01104ad	obj/kernel.asm	/^c01104ad:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01104b0	obj/kernel.asm	/^c01104b0:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01104b3	obj/kernel.asm	/^c01104b3:	89 50 68             	mov    %edx,0x68(%eax)$/;"	l
c01104b6	obj/kernel.asm	/^c01104b6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01104b9	obj/kernel.asm	/^c01104b9:	8b 40 68             	mov    0x68(%eax),%eax$/;"	l
c01104bc	obj/kernel.asm	/^c01104bc:	85 c0                	test   %eax,%eax$/;"	l
c01104be	obj/kernel.asm	/^c01104be:	75 05                	jne    c01104c5 <sfs_do_mount+0x1b7>$/;"	l
c01104c0	obj/kernel.asm	/^c01104c0:	e9 14 02 00 00       	jmp    c01106d9 <sfs_do_mount+0x3cb>$/;"	l
c01104c5	obj/kernel.asm	/^c01104c5:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01104cc	obj/kernel.asm	/^c01104cc:	eb 2a                	jmp    c01104f8 <sfs_do_mount+0x1ea>$/;"	l
c01104ce	obj/kernel.asm	/^c01104ce:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01104d1	obj/kernel.asm	/^c01104d1:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01104d8	obj/kernel.asm	/^c01104d8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01104db	obj/kernel.asm	/^c01104db:	01 d0                	add    %edx,%eax$/;"	l
c01104dd	obj/kernel.asm	/^c01104dd:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c01104e0	obj/kernel.asm	/^c01104e0:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c01104e3	obj/kernel.asm	/^c01104e3:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c01104e6	obj/kernel.asm	/^c01104e6:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01104e9	obj/kernel.asm	/^c01104e9:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c01104ec	obj/kernel.asm	/^c01104ec:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01104ef	obj/kernel.asm	/^c01104ef:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c01104f2	obj/kernel.asm	/^c01104f2:	89 10                	mov    %edx,(%eax)$/;"	l
c01104f4	obj/kernel.asm	/^c01104f4:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c01104f8	obj/kernel.asm	/^c01104f8:	81 7d f0 ff 03 00 00 	cmpl   $0x3ff,-0x10(%ebp)$/;"	l
c01104ff	obj/kernel.asm	/^c01104ff:	76 cd                	jbe    c01104ce <sfs_do_mount+0x1c0>$/;"	l
c0110501	obj/kernel.asm	/^c0110501:	c7 45 d0 00 80 00 00 	movl   $0x8000,-0x30(%ebp)$/;"	l
c0110508	obj/kernel.asm	/^c0110508:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011050b	obj/kernel.asm	/^c011050b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c011050e	obj/kernel.asm	/^c011050e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0110511	obj/kernel.asm	/^c0110511:	01 d0                	add    %edx,%eax$/;"	l
c0110513	obj/kernel.asm	/^c0110513:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0110516	obj/kernel.asm	/^c0110516:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0110519	obj/kernel.asm	/^c0110519:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c011051c	obj/kernel.asm	/^c011051c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0110521	obj/kernel.asm	/^c0110521:	f7 75 d0             	divl   -0x30(%ebp)$/;"	l
c0110524	obj/kernel.asm	/^c0110524:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0110527	obj/kernel.asm	/^c0110527:	29 d0                	sub    %edx,%eax$/;"	l
c0110529	obj/kernel.asm	/^c0110529:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c011052c	obj/kernel.asm	/^c011052c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011052f	obj/kernel.asm	/^c011052f:	ff 75 c8             	pushl  -0x38(%ebp)$/;"	l
c0110532	obj/kernel.asm	/^c0110532:	e8 22 20 00 00       	call   c0112559 <bitmap_create>$/;"	l
c0110537	obj/kernel.asm	/^c0110537:	83 c4 10             	add    $0x10,%esp$/;"	l
c011053a	obj/kernel.asm	/^c011053a:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c011053d	obj/kernel.asm	/^c011053d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110540	obj/kernel.asm	/^c0110540:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0110543	obj/kernel.asm	/^c0110543:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
c0110546	obj/kernel.asm	/^c0110546:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110549	obj/kernel.asm	/^c0110549:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c011054c	obj/kernel.asm	/^c011054c:	85 c0                	test   %eax,%eax$/;"	l
c011054e	obj/kernel.asm	/^c011054e:	75 05                	jne    c0110555 <sfs_do_mount+0x247>$/;"	l
c0110550	obj/kernel.asm	/^c0110550:	e9 76 01 00 00       	jmp    c01106cb <sfs_do_mount+0x3bd>$/;"	l
c0110555	obj/kernel.asm	/^c0110555:	c7 45 c0 00 80 00 00 	movl   $0x8000,-0x40(%ebp)$/;"	l
c011055c	obj/kernel.asm	/^c011055c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011055f	obj/kernel.asm	/^c011055f:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0110562	obj/kernel.asm	/^c0110562:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0110565	obj/kernel.asm	/^c0110565:	01 d0                	add    %edx,%eax$/;"	l
c0110567	obj/kernel.asm	/^c0110567:	83 e8 01             	sub    $0x1,%eax$/;"	l
c011056a	obj/kernel.asm	/^c011056a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c011056f	obj/kernel.asm	/^c011056f:	f7 75 c0             	divl   -0x40(%ebp)$/;"	l
c0110572	obj/kernel.asm	/^c0110572:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0110575	obj/kernel.asm	/^c0110575:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110578	obj/kernel.asm	/^c0110578:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c011057b	obj/kernel.asm	/^c011057b:	ff 75 bc             	pushl  -0x44(%ebp)$/;"	l
c011057e	obj/kernel.asm	/^c011057e:	6a 02                	push   $0x2$/;"	l
c0110580	obj/kernel.asm	/^c0110580:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
c0110583	obj/kernel.asm	/^c0110583:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110586	obj/kernel.asm	/^c0110586:	e8 fa fc ff ff       	call   c0110285 <sfs_init_freemap>$/;"	l
c011058b	obj/kernel.asm	/^c011058b:	83 c4 20             	add    $0x20,%esp$/;"	l
c011058e	obj/kernel.asm	/^c011058e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110591	obj/kernel.asm	/^c0110591:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110595	obj/kernel.asm	/^c0110595:	74 14                	je     c01105ab <sfs_do_mount+0x29d>$/;"	l
c0110597	obj/kernel.asm	/^c0110597:	90                   	nop$/;"	l
c0110598	obj/kernel.asm	/^c0110598:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011059b	obj/kernel.asm	/^c011059b:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
c011059e	obj/kernel.asm	/^c011059e:	e8 f5 22 00 00       	call   c0112898 <bitmap_destroy>$/;"	l
c01105a3	obj/kernel.asm	/^c01105a3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01105a6	obj/kernel.asm	/^c01105a6:	e9 20 01 00 00       	jmp    c01106cb <sfs_do_mount+0x3bd>$/;"	l
c01105ab	obj/kernel.asm	/^c01105ab:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01105ae	obj/kernel.asm	/^c01105ae:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01105b1	obj/kernel.asm	/^c01105b1:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c01105b4	obj/kernel.asm	/^c01105b4:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c01105bb	obj/kernel.asm	/^c01105bb:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01105c2	obj/kernel.asm	/^c01105c2:	eb 1d                	jmp    c01105e1 <sfs_do_mount+0x2d3>$/;"	l
c01105c4	obj/kernel.asm	/^c01105c4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01105c7	obj/kernel.asm	/^c01105c7:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01105ca	obj/kernel.asm	/^c01105ca:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
c01105cd	obj/kernel.asm	/^c01105cd:	e8 4d 22 00 00       	call   c011281f <bitmap_test>$/;"	l
c01105d2	obj/kernel.asm	/^c01105d2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01105d5	obj/kernel.asm	/^c01105d5:	85 c0                	test   %eax,%eax$/;"	l
c01105d7	obj/kernel.asm	/^c01105d7:	74 04                	je     c01105dd <sfs_do_mount+0x2cf>$/;"	l
c01105d9	obj/kernel.asm	/^c01105d9:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c01105dd	obj/kernel.asm	/^c01105dd:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c01105e1	obj/kernel.asm	/^c01105e1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01105e4	obj/kernel.asm	/^c01105e4:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c01105e7	obj/kernel.asm	/^c01105e7:	72 db                	jb     c01105c4 <sfs_do_mount+0x2b6>$/;"	l
c01105e9	obj/kernel.asm	/^c01105e9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01105ec	obj/kernel.asm	/^c01105ec:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01105ef	obj/kernel.asm	/^c01105ef:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01105f2	obj/kernel.asm	/^c01105f2:	74 19                	je     c011060d <sfs_do_mount+0x2ff>$/;"	l
c01105f4	obj/kernel.asm	/^c01105f4:	68 9c 73 11 c0       	push   $0xc011739c$/;"	l
c01105f9	obj/kernel.asm	/^c01105f9:	68 21 72 11 c0       	push   $0xc0117221$/;"	l
c01105fe	obj/kernel.asm	/^c01105fe:	68 e0 00 00 00       	push   $0xe0$/;"	l
c0110603	obj/kernel.asm	/^c0110603:	68 36 72 11 c0       	push   $0xc0117236$/;"	l
c0110608	obj/kernel.asm	/^c0110608:	e8 c2 fe fe ff       	call   c01004cf <__panic>$/;"	l
c011060d	obj/kernel.asm	/^c011060d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110610	obj/kernel.asm	/^c0110610:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)$/;"	l
c0110617	obj/kernel.asm	/^c0110617:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011061a	obj/kernel.asm	/^c011061a:	83 c0 3c             	add    $0x3c,%eax$/;"	l
c011061d	obj/kernel.asm	/^c011061d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110620	obj/kernel.asm	/^c0110620:	6a 01                	push   $0x1$/;"	l
c0110622	obj/kernel.asm	/^c0110622:	50                   	push   %eax$/;"	l
c0110623	obj/kernel.asm	/^c0110623:	e8 0f 8f ff ff       	call   c0109537 <sem_init>$/;"	l
c0110628	obj/kernel.asm	/^c0110628:	83 c4 10             	add    $0x10,%esp$/;"	l
c011062b	obj/kernel.asm	/^c011062b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011062e	obj/kernel.asm	/^c011062e:	83 c0 48             	add    $0x48,%eax$/;"	l
c0110631	obj/kernel.asm	/^c0110631:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110634	obj/kernel.asm	/^c0110634:	6a 01                	push   $0x1$/;"	l
c0110636	obj/kernel.asm	/^c0110636:	50                   	push   %eax$/;"	l
c0110637	obj/kernel.asm	/^c0110637:	e8 fb 8e ff ff       	call   c0109537 <sem_init>$/;"	l
c011063c	obj/kernel.asm	/^c011063c:	83 c4 10             	add    $0x10,%esp$/;"	l
c011063f	obj/kernel.asm	/^c011063f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110642	obj/kernel.asm	/^c0110642:	83 c0 54             	add    $0x54,%eax$/;"	l
c0110645	obj/kernel.asm	/^c0110645:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110648	obj/kernel.asm	/^c0110648:	6a 01                	push   $0x1$/;"	l
c011064a	obj/kernel.asm	/^c011064a:	50                   	push   %eax$/;"	l
c011064b	obj/kernel.asm	/^c011064b:	e8 e7 8e ff ff       	call   c0109537 <sem_init>$/;"	l
c0110650	obj/kernel.asm	/^c0110650:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110653	obj/kernel.asm	/^c0110653:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110656	obj/kernel.asm	/^c0110656:	83 c0 60             	add    $0x60,%eax$/;"	l
c0110659	obj/kernel.asm	/^c0110659:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c011065c	obj/kernel.asm	/^c011065c:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c011065f	obj/kernel.asm	/^c011065f:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c0110662	obj/kernel.asm	/^c0110662:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0110665	obj/kernel.asm	/^c0110665:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0110668	obj/kernel.asm	/^c0110668:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c011066b	obj/kernel.asm	/^c011066b:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c011066e	obj/kernel.asm	/^c011066e:	89 10                	mov    %edx,(%eax)$/;"	l
c0110670	obj/kernel.asm	/^c0110670:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0110673	obj/kernel.asm	/^c0110673:	2b 45 ec             	sub    -0x14(%ebp),%eax$/;"	l
c0110676	obj/kernel.asm	/^c0110676:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0110679	obj/kernel.asm	/^c0110679:	83 c2 0c             	add    $0xc,%edx$/;"	l
c011067c	obj/kernel.asm	/^c011067c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011067f	obj/kernel.asm	/^c011067f:	ff 75 b8             	pushl  -0x48(%ebp)$/;"	l
c0110682	obj/kernel.asm	/^c0110682:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0110685	obj/kernel.asm	/^c0110685:	50                   	push   %eax$/;"	l
c0110686	obj/kernel.asm	/^c0110686:	52                   	push   %edx$/;"	l
c0110687	obj/kernel.asm	/^c0110687:	68 c6 73 11 c0       	push   $0xc01173c6$/;"	l
c011068c	obj/kernel.asm	/^c011068c:	e8 d9 fc fe ff       	call   c010036a <cprintf>$/;"	l
c0110691	obj/kernel.asm	/^c0110691:	83 c4 20             	add    $0x20,%esp$/;"	l
c0110694	obj/kernel.asm	/^c0110694:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110697	obj/kernel.asm	/^c0110697:	c7 40 70 08 ff 10 c0 	movl   $0xc010ff08,0x70(%eax)$/;"	l
c011069e	obj/kernel.asm	/^c011069e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01106a1	obj/kernel.asm	/^c01106a1:	c7 40 74 54 00 11 c0 	movl   $0xc0110054,0x74(%eax)$/;"	l
c01106a8	obj/kernel.asm	/^c01106a8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01106ab	obj/kernel.asm	/^c01106ab:	c7 40 78 bd 00 11 c0 	movl   $0xc01100bd,0x78(%eax)$/;"	l
c01106b2	obj/kernel.asm	/^c01106b2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01106b5	obj/kernel.asm	/^c01106b5:	c7 40 7c 83 01 11 c0 	movl   $0xc0110183,0x7c(%eax)$/;"	l
c01106bc	obj/kernel.asm	/^c01106bc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01106bf	obj/kernel.asm	/^c01106bf:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01106c2	obj/kernel.asm	/^c01106c2:	89 10                	mov    %edx,(%eax)$/;"	l
c01106c4	obj/kernel.asm	/^c01106c4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01106c9	obj/kernel.asm	/^c01106c9:	eb 2d                	jmp    c01106f8 <sfs_do_mount+0x3ea>$/;"	l
c01106cb	obj/kernel.asm	/^c01106cb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01106ce	obj/kernel.asm	/^c01106ce:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
c01106d1	obj/kernel.asm	/^c01106d1:	e8 e1 6d ff ff       	call   c01074b7 <kfree>$/;"	l
c01106d6	obj/kernel.asm	/^c01106d6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01106d9	obj/kernel.asm	/^c01106d9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01106dc	obj/kernel.asm	/^c01106dc:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c01106df	obj/kernel.asm	/^c01106df:	e8 d3 6d ff ff       	call   c01074b7 <kfree>$/;"	l
c01106e4	obj/kernel.asm	/^c01106e4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01106e7	obj/kernel.asm	/^c01106e7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01106ea	obj/kernel.asm	/^c01106ea:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c01106ed	obj/kernel.asm	/^c01106ed:	e8 c5 6d ff ff       	call   c01074b7 <kfree>$/;"	l
c01106f2	obj/kernel.asm	/^c01106f2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01106f5	obj/kernel.asm	/^c01106f5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01106f8	obj/kernel.asm	/^c01106f8:	c9                   	leave  $/;"	l
c01106f9	obj/kernel.asm	/^c01106f9:	c3                   	ret    $/;"	l
c01106fa	obj/kernel.asm	/^c01106fa <sfs_mount>:$/;"	l
c01106fa	obj/kernel.asm	/^c01106fa:	55                   	push   %ebp$/;"	l
c01106fb	obj/kernel.asm	/^c01106fb:	89 e5                	mov    %esp,%ebp$/;"	l
c01106fd	obj/kernel.asm	/^c01106fd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110700	obj/kernel.asm	/^c0110700:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110703	obj/kernel.asm	/^c0110703:	68 0e 03 11 c0       	push   $0xc011030e$/;"	l
c0110708	obj/kernel.asm	/^c0110708:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011070b	obj/kernel.asm	/^c011070b:	e8 ec d9 ff ff       	call   c010e0fc <vfs_mount>$/;"	l
c0110710	obj/kernel.asm	/^c0110710:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110713	obj/kernel.asm	/^c0110713:	c9                   	leave  $/;"	l
c0110714	obj/kernel.asm	/^c0110714:	c3                   	ret    $/;"	l
c0110715	obj/kernel.asm	/^c0110715 <inode_ref_count>:$/;"	l
c0110715	obj/kernel.asm	/^c0110715:	55                   	push   %ebp$/;"	l
c0110716	obj/kernel.asm	/^c0110716:	89 e5                	mov    %esp,%ebp$/;"	l
c0110718	obj/kernel.asm	/^c0110718:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011071b	obj/kernel.asm	/^c011071b:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c011071e	obj/kernel.asm	/^c011071e:	5d                   	pop    %ebp$/;"	l
c011071f	obj/kernel.asm	/^c011071f:	c3                   	ret    $/;"	l
c0110720	obj/kernel.asm	/^c0110720 <lock_sin>:$/;"	l
c0110720	obj/kernel.asm	/^c0110720:	55                   	push   %ebp$/;"	l
c0110721	obj/kernel.asm	/^c0110721:	89 e5                	mov    %esp,%ebp$/;"	l
c0110723	obj/kernel.asm	/^c0110723:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110726	obj/kernel.asm	/^c0110726:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110729	obj/kernel.asm	/^c0110729:	83 c0 10             	add    $0x10,%eax$/;"	l
c011072c	obj/kernel.asm	/^c011072c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011072f	obj/kernel.asm	/^c011072f:	50                   	push   %eax$/;"	l
c0110730	obj/kernel.asm	/^c0110730:	e8 88 8f ff ff       	call   c01096bd <down>$/;"	l
c0110735	obj/kernel.asm	/^c0110735:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110738	obj/kernel.asm	/^c0110738:	c9                   	leave  $/;"	l
c0110739	obj/kernel.asm	/^c0110739:	c3                   	ret    $/;"	l
c011073a	obj/kernel.asm	/^c011073a <unlock_sin>:$/;"	l
c011073a	obj/kernel.asm	/^c011073a:	55                   	push   %ebp$/;"	l
c011073b	obj/kernel.asm	/^c011073b:	89 e5                	mov    %esp,%ebp$/;"	l
c011073d	obj/kernel.asm	/^c011073d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110740	obj/kernel.asm	/^c0110740:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110743	obj/kernel.asm	/^c0110743:	83 c0 10             	add    $0x10,%eax$/;"	l
c0110746	obj/kernel.asm	/^c0110746:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110749	obj/kernel.asm	/^c0110749:	50                   	push   %eax$/;"	l
c011074a	obj/kernel.asm	/^c011074a:	e8 53 8f ff ff       	call   c01096a2 <up>$/;"	l
c011074f	obj/kernel.asm	/^c011074f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110752	obj/kernel.asm	/^c0110752:	c9                   	leave  $/;"	l
c0110753	obj/kernel.asm	/^c0110753:	c3                   	ret    $/;"	l
c0110754	obj/kernel.asm	/^c0110754 <sfs_get_ops>:$/;"	l
c0110754	obj/kernel.asm	/^c0110754:	55                   	push   %ebp$/;"	l
c0110755	obj/kernel.asm	/^c0110755:	89 e5                	mov    %esp,%ebp$/;"	l
c0110757	obj/kernel.asm	/^c0110757:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011075a	obj/kernel.asm	/^c011075a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011075d	obj/kernel.asm	/^c011075d:	66 89 45 f4          	mov    %ax,-0xc(%ebp)$/;"	l
c0110761	obj/kernel.asm	/^c0110761:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c0110765	obj/kernel.asm	/^c0110765:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0110768	obj/kernel.asm	/^c0110768:	74 0c                	je     c0110776 <sfs_get_ops+0x22>$/;"	l
c011076a	obj/kernel.asm	/^c011076a:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c011076d	obj/kernel.asm	/^c011076d:	75 0e                	jne    c011077d <sfs_get_ops+0x29>$/;"	l
c011076f	obj/kernel.asm	/^c011076f:	b8 00 74 11 c0       	mov    $0xc0117400,%eax$/;"	l
c0110774	obj/kernel.asm	/^c0110774:	eb 1d                	jmp    c0110793 <sfs_get_ops+0x3f>$/;"	l
c0110776	obj/kernel.asm	/^c0110776:	b8 40 74 11 c0       	mov    $0xc0117440,%eax$/;"	l
c011077b	obj/kernel.asm	/^c011077b:	eb 16                	jmp    c0110793 <sfs_get_ops+0x3f>$/;"	l
c011077d	obj/kernel.asm	/^c011077d:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c0110781	obj/kernel.asm	/^c0110781:	50                   	push   %eax$/;"	l
c0110782	obj/kernel.asm	/^c0110782:	68 80 74 11 c0       	push   $0xc0117480$/;"	l
c0110787	obj/kernel.asm	/^c0110787:	6a 2e                	push   $0x2e$/;"	l
c0110789	obj/kernel.asm	/^c0110789:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c011078e	obj/kernel.asm	/^c011078e:	e8 3c fd fe ff       	call   c01004cf <__panic>$/;"	l
c0110793	obj/kernel.asm	/^c0110793:	c9                   	leave  $/;"	l
c0110794	obj/kernel.asm	/^c0110794:	c3                   	ret    $/;"	l
c0110795	obj/kernel.asm	/^c0110795 <sfs_hash_list>:$/;"	l
c0110795	obj/kernel.asm	/^c0110795:	55                   	push   %ebp$/;"	l
c0110796	obj/kernel.asm	/^c0110796:	89 e5                	mov    %esp,%ebp$/;"	l
c0110798	obj/kernel.asm	/^c0110798:	53                   	push   %ebx$/;"	l
c0110799	obj/kernel.asm	/^c0110799:	83 ec 04             	sub    $0x4,%esp$/;"	l
c011079c	obj/kernel.asm	/^c011079c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011079f	obj/kernel.asm	/^c011079f:	8b 58 68             	mov    0x68(%eax),%ebx$/;"	l
c01107a2	obj/kernel.asm	/^c01107a2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01107a5	obj/kernel.asm	/^c01107a5:	6a 0a                	push   $0xa$/;"	l
c01107a7	obj/kernel.asm	/^c01107a7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01107aa	obj/kernel.asm	/^c01107aa:	e8 12 30 00 00       	call   c01137c1 <hash32>$/;"	l
c01107af	obj/kernel.asm	/^c01107af:	83 c4 10             	add    $0x10,%esp$/;"	l
c01107b2	obj/kernel.asm	/^c01107b2:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01107b5	obj/kernel.asm	/^c01107b5:	01 d8                	add    %ebx,%eax$/;"	l
c01107b7	obj/kernel.asm	/^c01107b7:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c01107ba	obj/kernel.asm	/^c01107ba:	c9                   	leave  $/;"	l
c01107bb	obj/kernel.asm	/^c01107bb:	c3                   	ret    $/;"	l
c01107bc	obj/kernel.asm	/^c01107bc <sfs_set_links>:$/;"	l
c01107bc	obj/kernel.asm	/^c01107bc:	55                   	push   %ebp$/;"	l
c01107bd	obj/kernel.asm	/^c01107bd:	89 e5                	mov    %esp,%ebp$/;"	l
c01107bf	obj/kernel.asm	/^c01107bf:	53                   	push   %ebx$/;"	l
c01107c0	obj/kernel.asm	/^c01107c0:	83 ec 44             	sub    $0x44,%esp$/;"	l
c01107c3	obj/kernel.asm	/^c01107c3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01107c6	obj/kernel.asm	/^c01107c6:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c01107c9	obj/kernel.asm	/^c01107c9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01107cc	obj/kernel.asm	/^c01107cc:	83 c2 60             	add    $0x60,%edx$/;"	l
c01107cf	obj/kernel.asm	/^c01107cf:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c01107d2	obj/kernel.asm	/^c01107d2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01107d5	obj/kernel.asm	/^c01107d5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01107d8	obj/kernel.asm	/^c01107d8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01107db	obj/kernel.asm	/^c01107db:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01107de	obj/kernel.asm	/^c01107de:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01107e1	obj/kernel.asm	/^c01107e1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01107e4	obj/kernel.asm	/^c01107e4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01107e7	obj/kernel.asm	/^c01107e7:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01107ea	obj/kernel.asm	/^c01107ea:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c01107ed	obj/kernel.asm	/^c01107ed:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01107f0	obj/kernel.asm	/^c01107f0:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c01107f3	obj/kernel.asm	/^c01107f3:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01107f6	obj/kernel.asm	/^c01107f6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01107f9	obj/kernel.asm	/^c01107f9:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01107fc	obj/kernel.asm	/^c01107fc:	89 10                	mov    %edx,(%eax)$/;"	l
c01107fe	obj/kernel.asm	/^c01107fe:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0110801	obj/kernel.asm	/^c0110801:	8b 10                	mov    (%eax),%edx$/;"	l
c0110803	obj/kernel.asm	/^c0110803:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110806	obj/kernel.asm	/^c0110806:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0110809	obj/kernel.asm	/^c0110809:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011080c	obj/kernel.asm	/^c011080c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c011080f	obj/kernel.asm	/^c011080f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0110812	obj/kernel.asm	/^c0110812:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0110815	obj/kernel.asm	/^c0110815:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0110818	obj/kernel.asm	/^c0110818:	89 10                	mov    %edx,(%eax)$/;"	l
c011081a	obj/kernel.asm	/^c011081a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011081d	obj/kernel.asm	/^c011081d:	8d 58 24             	lea    0x24(%eax),%ebx$/;"	l
c0110820	obj/kernel.asm	/^c0110820:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110823	obj/kernel.asm	/^c0110823:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110826	obj/kernel.asm	/^c0110826:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110829	obj/kernel.asm	/^c0110829:	50                   	push   %eax$/;"	l
c011082a	obj/kernel.asm	/^c011082a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011082d	obj/kernel.asm	/^c011082d:	e8 63 ff ff ff       	call   c0110795 <sfs_hash_list>$/;"	l
c0110832	obj/kernel.asm	/^c0110832:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110835	obj/kernel.asm	/^c0110835:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0110838	obj/kernel.asm	/^c0110838:	89 5d d4             	mov    %ebx,-0x2c(%ebp)$/;"	l
c011083b	obj/kernel.asm	/^c011083b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011083e	obj/kernel.asm	/^c011083e:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0110841	obj/kernel.asm	/^c0110841:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0110844	obj/kernel.asm	/^c0110844:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0110847	obj/kernel.asm	/^c0110847:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c011084a	obj/kernel.asm	/^c011084a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011084d	obj/kernel.asm	/^c011084d:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0110850	obj/kernel.asm	/^c0110850:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c0110853	obj/kernel.asm	/^c0110853:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0110856	obj/kernel.asm	/^c0110856:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
c0110859	obj/kernel.asm	/^c0110859:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c011085c	obj/kernel.asm	/^c011085c:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c011085f	obj/kernel.asm	/^c011085f:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c0110862	obj/kernel.asm	/^c0110862:	89 10                	mov    %edx,(%eax)$/;"	l
c0110864	obj/kernel.asm	/^c0110864:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0110867	obj/kernel.asm	/^c0110867:	8b 10                	mov    (%eax),%edx$/;"	l
c0110869	obj/kernel.asm	/^c0110869:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c011086c	obj/kernel.asm	/^c011086c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c011086f	obj/kernel.asm	/^c011086f:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0110872	obj/kernel.asm	/^c0110872:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c0110875	obj/kernel.asm	/^c0110875:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0110878	obj/kernel.asm	/^c0110878:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c011087b	obj/kernel.asm	/^c011087b:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c011087e	obj/kernel.asm	/^c011087e:	89 10                	mov    %edx,(%eax)$/;"	l
c0110880	obj/kernel.asm	/^c0110880:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0110883	obj/kernel.asm	/^c0110883:	c9                   	leave  $/;"	l
c0110884	obj/kernel.asm	/^c0110884:	c3                   	ret    $/;"	l
c0110885	obj/kernel.asm	/^c0110885 <sfs_remove_links>:$/;"	l
c0110885	obj/kernel.asm	/^c0110885:	55                   	push   %ebp$/;"	l
c0110886	obj/kernel.asm	/^c0110886:	89 e5                	mov    %esp,%ebp$/;"	l
c0110888	obj/kernel.asm	/^c0110888:	83 ec 20             	sub    $0x20,%esp$/;"	l
c011088b	obj/kernel.asm	/^c011088b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011088e	obj/kernel.asm	/^c011088e:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0110891	obj/kernel.asm	/^c0110891:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0110894	obj/kernel.asm	/^c0110894:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0110897	obj/kernel.asm	/^c0110897:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011089a	obj/kernel.asm	/^c011089a:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c011089d	obj/kernel.asm	/^c011089d:	8b 12                	mov    (%edx),%edx$/;"	l
c011089f	obj/kernel.asm	/^c011089f:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c01108a2	obj/kernel.asm	/^c01108a2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01108a5	obj/kernel.asm	/^c01108a5:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01108a8	obj/kernel.asm	/^c01108a8:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01108ab	obj/kernel.asm	/^c01108ab:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01108ae	obj/kernel.asm	/^c01108ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01108b1	obj/kernel.asm	/^c01108b1:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c01108b4	obj/kernel.asm	/^c01108b4:	89 10                	mov    %edx,(%eax)$/;"	l
c01108b6	obj/kernel.asm	/^c01108b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01108b9	obj/kernel.asm	/^c01108b9:	83 c0 24             	add    $0x24,%eax$/;"	l
c01108bc	obj/kernel.asm	/^c01108bc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01108bf	obj/kernel.asm	/^c01108bf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01108c2	obj/kernel.asm	/^c01108c2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01108c5	obj/kernel.asm	/^c01108c5:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01108c8	obj/kernel.asm	/^c01108c8:	8b 12                	mov    (%edx),%edx$/;"	l
c01108ca	obj/kernel.asm	/^c01108ca:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c01108cd	obj/kernel.asm	/^c01108cd:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01108d0	obj/kernel.asm	/^c01108d0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01108d3	obj/kernel.asm	/^c01108d3:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01108d6	obj/kernel.asm	/^c01108d6:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01108d9	obj/kernel.asm	/^c01108d9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01108dc	obj/kernel.asm	/^c01108dc:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01108df	obj/kernel.asm	/^c01108df:	89 10                	mov    %edx,(%eax)$/;"	l
c01108e1	obj/kernel.asm	/^c01108e1:	c9                   	leave  $/;"	l
c01108e2	obj/kernel.asm	/^c01108e2:	c3                   	ret    $/;"	l
c01108e3	obj/kernel.asm	/^c01108e3 <sfs_block_inuse>:$/;"	l
c01108e3	obj/kernel.asm	/^c01108e3:	55                   	push   %ebp$/;"	l
c01108e4	obj/kernel.asm	/^c01108e4:	89 e5                	mov    %esp,%ebp$/;"	l
c01108e6	obj/kernel.asm	/^c01108e6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01108e9	obj/kernel.asm	/^c01108e9:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01108ed	obj/kernel.asm	/^c01108ed:	74 2a                	je     c0110919 <sfs_block_inuse+0x36>$/;"	l
c01108ef	obj/kernel.asm	/^c01108ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01108f2	obj/kernel.asm	/^c01108f2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01108f5	obj/kernel.asm	/^c01108f5:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01108f8	obj/kernel.asm	/^c01108f8:	76 1f                	jbe    c0110919 <sfs_block_inuse+0x36>$/;"	l
c01108fa	obj/kernel.asm	/^c01108fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01108fd	obj/kernel.asm	/^c01108fd:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0110900	obj/kernel.asm	/^c0110900:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110903	obj/kernel.asm	/^c0110903:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0110906	obj/kernel.asm	/^c0110906:	50                   	push   %eax$/;"	l
c0110907	obj/kernel.asm	/^c0110907:	e8 13 1f 00 00       	call   c011281f <bitmap_test>$/;"	l
c011090c	obj/kernel.asm	/^c011090c:	83 c4 10             	add    $0x10,%esp$/;"	l
c011090f	obj/kernel.asm	/^c011090f:	85 c0                	test   %eax,%eax$/;"	l
c0110911	obj/kernel.asm	/^c0110911:	0f 94 c0             	sete   %al$/;"	l
c0110914	obj/kernel.asm	/^c0110914:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0110917	obj/kernel.asm	/^c0110917:	eb 1e                	jmp    c0110937 <sfs_block_inuse+0x54>$/;"	l
c0110919	obj/kernel.asm	/^c0110919:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011091c	obj/kernel.asm	/^c011091c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011091f	obj/kernel.asm	/^c011091f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110922	obj/kernel.asm	/^c0110922:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0110925	obj/kernel.asm	/^c0110925:	50                   	push   %eax$/;"	l
c0110926	obj/kernel.asm	/^c0110926:	68 b0 74 11 c0       	push   $0xc01174b0$/;"	l
c011092b	obj/kernel.asm	/^c011092b:	6a 53                	push   $0x53$/;"	l
c011092d	obj/kernel.asm	/^c011092d:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0110932	obj/kernel.asm	/^c0110932:	e8 98 fb fe ff       	call   c01004cf <__panic>$/;"	l
c0110937	obj/kernel.asm	/^c0110937:	c9                   	leave  $/;"	l
c0110938	obj/kernel.asm	/^c0110938:	c3                   	ret    $/;"	l
c0110939	obj/kernel.asm	/^c0110939 <sfs_block_alloc>:$/;"	l
c0110939	obj/kernel.asm	/^c0110939:	55                   	push   %ebp$/;"	l
c011093a	obj/kernel.asm	/^c011093a:	89 e5                	mov    %esp,%ebp$/;"	l
c011093c	obj/kernel.asm	/^c011093c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011093f	obj/kernel.asm	/^c011093f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110942	obj/kernel.asm	/^c0110942:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0110945	obj/kernel.asm	/^c0110945:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110948	obj/kernel.asm	/^c0110948:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c011094b	obj/kernel.asm	/^c011094b:	50                   	push   %eax$/;"	l
c011094c	obj/kernel.asm	/^c011094c:	e8 88 1d 00 00       	call   c01126d9 <bitmap_alloc>$/;"	l
c0110951	obj/kernel.asm	/^c0110951:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110954	obj/kernel.asm	/^c0110954:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110957	obj/kernel.asm	/^c0110957:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011095b	obj/kernel.asm	/^c011095b:	74 05                	je     c0110962 <sfs_block_alloc+0x29>$/;"	l
c011095d	obj/kernel.asm	/^c011095d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110960	obj/kernel.asm	/^c0110960:	eb 7d                	jmp    c01109df <sfs_block_alloc+0xa6>$/;"	l
c0110962	obj/kernel.asm	/^c0110962:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110965	obj/kernel.asm	/^c0110965:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0110968	obj/kernel.asm	/^c0110968:	85 c0                	test   %eax,%eax$/;"	l
c011096a	obj/kernel.asm	/^c011096a:	75 16                	jne    c0110982 <sfs_block_alloc+0x49>$/;"	l
c011096c	obj/kernel.asm	/^c011096c:	68 e2 74 11 c0       	push   $0xc01174e2$/;"	l
c0110971	obj/kernel.asm	/^c0110971:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0110976	obj/kernel.asm	/^c0110976:	6a 5f                	push   $0x5f$/;"	l
c0110978	obj/kernel.asm	/^c0110978:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c011097d	obj/kernel.asm	/^c011097d:	e8 4d fb fe ff       	call   c01004cf <__panic>$/;"	l
c0110982	obj/kernel.asm	/^c0110982:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110985	obj/kernel.asm	/^c0110985:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0110988	obj/kernel.asm	/^c0110988:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c011098b	obj/kernel.asm	/^c011098b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011098e	obj/kernel.asm	/^c011098e:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0110991	obj/kernel.asm	/^c0110991:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110994	obj/kernel.asm	/^c0110994:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c011099b	obj/kernel.asm	/^c011099b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011099e	obj/kernel.asm	/^c011099e:	8b 00                	mov    (%eax),%eax$/;"	l
c01109a0	obj/kernel.asm	/^c01109a0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01109a3	obj/kernel.asm	/^c01109a3:	50                   	push   %eax$/;"	l
c01109a4	obj/kernel.asm	/^c01109a4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01109a7	obj/kernel.asm	/^c01109a7:	e8 37 ff ff ff       	call   c01108e3 <sfs_block_inuse>$/;"	l
c01109ac	obj/kernel.asm	/^c01109ac:	83 c4 10             	add    $0x10,%esp$/;"	l
c01109af	obj/kernel.asm	/^c01109af:	85 c0                	test   %eax,%eax$/;"	l
c01109b1	obj/kernel.asm	/^c01109b1:	75 16                	jne    c01109c9 <sfs_block_alloc+0x90>$/;"	l
c01109b3	obj/kernel.asm	/^c01109b3:	68 14 75 11 c0       	push   $0xc0117514$/;"	l
c01109b8	obj/kernel.asm	/^c01109b8:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c01109bd	obj/kernel.asm	/^c01109bd:	6a 61                	push   $0x61$/;"	l
c01109bf	obj/kernel.asm	/^c01109bf:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c01109c4	obj/kernel.asm	/^c01109c4:	e8 06 fb fe ff       	call   c01004cf <__panic>$/;"	l
c01109c9	obj/kernel.asm	/^c01109c9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01109cc	obj/kernel.asm	/^c01109cc:	8b 00                	mov    (%eax),%eax$/;"	l
c01109ce	obj/kernel.asm	/^c01109ce:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01109d1	obj/kernel.asm	/^c01109d1:	6a 01                	push   $0x1$/;"	l
c01109d3	obj/kernel.asm	/^c01109d3:	50                   	push   %eax$/;"	l
c01109d4	obj/kernel.asm	/^c01109d4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01109d7	obj/kernel.asm	/^c01109d7:	e8 3f 22 00 00       	call   c0112c1b <sfs_clear_block>$/;"	l
c01109dc	obj/kernel.asm	/^c01109dc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01109df	obj/kernel.asm	/^c01109df:	c9                   	leave  $/;"	l
c01109e0	obj/kernel.asm	/^c01109e0:	c3                   	ret    $/;"	l
c01109e1	obj/kernel.asm	/^c01109e1 <sfs_block_free>:$/;"	l
c01109e1	obj/kernel.asm	/^c01109e1:	55                   	push   %ebp$/;"	l
c01109e2	obj/kernel.asm	/^c01109e2:	89 e5                	mov    %esp,%ebp$/;"	l
c01109e4	obj/kernel.asm	/^c01109e4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01109e7	obj/kernel.asm	/^c01109e7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01109ea	obj/kernel.asm	/^c01109ea:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01109ed	obj/kernel.asm	/^c01109ed:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01109f0	obj/kernel.asm	/^c01109f0:	e8 ee fe ff ff       	call   c01108e3 <sfs_block_inuse>$/;"	l
c01109f5	obj/kernel.asm	/^c01109f5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01109f8	obj/kernel.asm	/^c01109f8:	85 c0                	test   %eax,%eax$/;"	l
c01109fa	obj/kernel.asm	/^c01109fa:	75 16                	jne    c0110a12 <sfs_block_free+0x31>$/;"	l
c01109fc	obj/kernel.asm	/^c01109fc:	68 35 75 11 c0       	push   $0xc0117535$/;"	l
c0110a01	obj/kernel.asm	/^c0110a01:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0110a06	obj/kernel.asm	/^c0110a06:	6a 6a                	push   $0x6a$/;"	l
c0110a08	obj/kernel.asm	/^c0110a08:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0110a0d	obj/kernel.asm	/^c0110a0d:	e8 bd fa fe ff       	call   c01004cf <__panic>$/;"	l
c0110a12	obj/kernel.asm	/^c0110a12:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110a15	obj/kernel.asm	/^c0110a15:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0110a18	obj/kernel.asm	/^c0110a18:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110a1b	obj/kernel.asm	/^c0110a1b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0110a1e	obj/kernel.asm	/^c0110a1e:	50                   	push   %eax$/;"	l
c0110a1f	obj/kernel.asm	/^c0110a1f:	e8 23 1e 00 00       	call   c0112847 <bitmap_free>$/;"	l
c0110a24	obj/kernel.asm	/^c0110a24:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110a27	obj/kernel.asm	/^c0110a27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110a2a	obj/kernel.asm	/^c0110a2a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0110a2d	obj/kernel.asm	/^c0110a2d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0110a30	obj/kernel.asm	/^c0110a30:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110a33	obj/kernel.asm	/^c0110a33:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0110a36	obj/kernel.asm	/^c0110a36:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110a39	obj/kernel.asm	/^c0110a39:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c0110a40	obj/kernel.asm	/^c0110a40:	c9                   	leave  $/;"	l
c0110a41	obj/kernel.asm	/^c0110a41:	c3                   	ret    $/;"	l
c0110a42	obj/kernel.asm	/^c0110a42 <sfs_create_inode>:$/;"	l
c0110a42	obj/kernel.asm	/^c0110a42:	55                   	push   %ebp$/;"	l
c0110a43	obj/kernel.asm	/^c0110a43:	89 e5                	mov    %esp,%ebp$/;"	l
c0110a45	obj/kernel.asm	/^c0110a45:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110a48	obj/kernel.asm	/^c0110a48:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110a4b	obj/kernel.asm	/^c0110a4b:	68 35 12 00 00       	push   $0x1235$/;"	l
c0110a50	obj/kernel.asm	/^c0110a50:	e8 6e df ff ff       	call   c010e9c3 <__alloc_inode>$/;"	l
c0110a55	obj/kernel.asm	/^c0110a55:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110a58	obj/kernel.asm	/^c0110a58:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110a5b	obj/kernel.asm	/^c0110a5b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110a5f	obj/kernel.asm	/^c0110a5f:	0f 84 a5 00 00 00    	je     c0110b0a <sfs_create_inode+0xc8>$/;"	l
c0110a65	obj/kernel.asm	/^c0110a65:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110a68	obj/kernel.asm	/^c0110a68:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0110a6c	obj/kernel.asm	/^c0110a6c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0110a6f	obj/kernel.asm	/^c0110a6f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110a72	obj/kernel.asm	/^c0110a72:	50                   	push   %eax$/;"	l
c0110a73	obj/kernel.asm	/^c0110a73:	e8 dc fc ff ff       	call   c0110754 <sfs_get_ops>$/;"	l
c0110a78	obj/kernel.asm	/^c0110a78:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110a7b	obj/kernel.asm	/^c0110a7b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0110a7e	obj/kernel.asm	/^c0110a7e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110a81	obj/kernel.asm	/^c0110a81:	50                   	push   %eax$/;"	l
c0110a82	obj/kernel.asm	/^c0110a82:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0110a85	obj/kernel.asm	/^c0110a85:	e8 63 df ff ff       	call   c010e9ed <inode_init>$/;"	l
c0110a8a	obj/kernel.asm	/^c0110a8a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110a8d	obj/kernel.asm	/^c0110a8d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110a90	obj/kernel.asm	/^c0110a90:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110a93	obj/kernel.asm	/^c0110a93:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110a97	obj/kernel.asm	/^c0110a97:	74 0d                	je     c0110aa6 <sfs_create_inode+0x64>$/;"	l
c0110a99	obj/kernel.asm	/^c0110a99:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110a9c	obj/kernel.asm	/^c0110a9c:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0110a9f	obj/kernel.asm	/^c0110a9f:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0110aa4	obj/kernel.asm	/^c0110aa4:	74 16                	je     c0110abc <sfs_create_inode+0x7a>$/;"	l
c0110aa6	obj/kernel.asm	/^c0110aa6:	68 50 75 11 c0       	push   $0xc0117550$/;"	l
c0110aab	obj/kernel.asm	/^c0110aab:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0110ab0	obj/kernel.asm	/^c0110ab0:	6a 77                	push   $0x77$/;"	l
c0110ab2	obj/kernel.asm	/^c0110ab2:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0110ab7	obj/kernel.asm	/^c0110ab7:	e8 13 fa fe ff       	call   c01004cf <__panic>$/;"	l
c0110abc	obj/kernel.asm	/^c0110abc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110abf	obj/kernel.asm	/^c0110abf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110ac2	obj/kernel.asm	/^c0110ac2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110ac5	obj/kernel.asm	/^c0110ac5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0110ac8	obj/kernel.asm	/^c0110ac8:	89 10                	mov    %edx,(%eax)$/;"	l
c0110aca	obj/kernel.asm	/^c0110aca:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110acd	obj/kernel.asm	/^c0110acd:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0110ad0	obj/kernel.asm	/^c0110ad0:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0110ad3	obj/kernel.asm	/^c0110ad3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110ad6	obj/kernel.asm	/^c0110ad6:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0110add	obj/kernel.asm	/^c0110add:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110ae0	obj/kernel.asm	/^c0110ae0:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)$/;"	l
c0110ae7	obj/kernel.asm	/^c0110ae7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110aea	obj/kernel.asm	/^c0110aea:	83 c0 10             	add    $0x10,%eax$/;"	l
c0110aed	obj/kernel.asm	/^c0110aed:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110af0	obj/kernel.asm	/^c0110af0:	6a 01                	push   $0x1$/;"	l
c0110af2	obj/kernel.asm	/^c0110af2:	50                   	push   %eax$/;"	l
c0110af3	obj/kernel.asm	/^c0110af3:	e8 3f 8a ff ff       	call   c0109537 <sem_init>$/;"	l
c0110af8	obj/kernel.asm	/^c0110af8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110afb	obj/kernel.asm	/^c0110afb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0110afe	obj/kernel.asm	/^c0110afe:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0110b01	obj/kernel.asm	/^c0110b01:	89 10                	mov    %edx,(%eax)$/;"	l
c0110b03	obj/kernel.asm	/^c0110b03:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110b08	obj/kernel.asm	/^c0110b08:	eb 05                	jmp    c0110b0f <sfs_create_inode+0xcd>$/;"	l
c0110b0a	obj/kernel.asm	/^c0110b0a:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0110b0f	obj/kernel.asm	/^c0110b0f:	c9                   	leave  $/;"	l
c0110b10	obj/kernel.asm	/^c0110b10:	c3                   	ret    $/;"	l
c0110b11	obj/kernel.asm	/^c0110b11 <lookup_sfs_nolock>:$/;"	l
c0110b11	obj/kernel.asm	/^c0110b11:	55                   	push   %ebp$/;"	l
c0110b12	obj/kernel.asm	/^c0110b12:	89 e5                	mov    %esp,%ebp$/;"	l
c0110b14	obj/kernel.asm	/^c0110b14:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110b17	obj/kernel.asm	/^c0110b17:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110b1a	obj/kernel.asm	/^c0110b1a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0110b1d	obj/kernel.asm	/^c0110b1d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110b20	obj/kernel.asm	/^c0110b20:	e8 70 fc ff ff       	call   c0110795 <sfs_hash_list>$/;"	l
c0110b25	obj/kernel.asm	/^c0110b25:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110b28	obj/kernel.asm	/^c0110b28:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110b2b	obj/kernel.asm	/^c0110b2b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110b2e	obj/kernel.asm	/^c0110b2e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110b31	obj/kernel.asm	/^c0110b31:	eb 41                	jmp    c0110b74 <lookup_sfs_nolock+0x63>$/;"	l
c0110b33	obj/kernel.asm	/^c0110b33:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110b36	obj/kernel.asm	/^c0110b36:	83 e8 24             	sub    $0x24,%eax$/;"	l
c0110b39	obj/kernel.asm	/^c0110b39:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110b3c	obj/kernel.asm	/^c0110b3c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110b3f	obj/kernel.asm	/^c0110b3f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110b42	obj/kernel.asm	/^c0110b42:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0110b45	obj/kernel.asm	/^c0110b45:	75 2d                	jne    c0110b74 <lookup_sfs_nolock+0x63>$/;"	l
c0110b47	obj/kernel.asm	/^c0110b47:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110b4a	obj/kernel.asm	/^c0110b4a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0110b4d	obj/kernel.asm	/^c0110b4d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110b50	obj/kernel.asm	/^c0110b50:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0110b53	obj/kernel.asm	/^c0110b53:	e8 34 df ff ff       	call   c010ea8c <inode_ref_inc>$/;"	l
c0110b58	obj/kernel.asm	/^c0110b58:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110b5b	obj/kernel.asm	/^c0110b5b:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0110b5e	obj/kernel.asm	/^c0110b5e:	75 0f                	jne    c0110b6f <lookup_sfs_nolock+0x5e>$/;"	l
c0110b60	obj/kernel.asm	/^c0110b60:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110b63	obj/kernel.asm	/^c0110b63:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0110b66	obj/kernel.asm	/^c0110b66:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0110b69	obj/kernel.asm	/^c0110b69:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110b6c	obj/kernel.asm	/^c0110b6c:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0110b6f	obj/kernel.asm	/^c0110b6f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110b72	obj/kernel.asm	/^c0110b72:	eb 1c                	jmp    c0110b90 <lookup_sfs_nolock+0x7f>$/;"	l
c0110b74	obj/kernel.asm	/^c0110b74:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110b77	obj/kernel.asm	/^c0110b77:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0110b7a	obj/kernel.asm	/^c0110b7a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0110b7d	obj/kernel.asm	/^c0110b7d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110b80	obj/kernel.asm	/^c0110b80:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110b83	obj/kernel.asm	/^c0110b83:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110b86	obj/kernel.asm	/^c0110b86:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0110b89	obj/kernel.asm	/^c0110b89:	75 a8                	jne    c0110b33 <lookup_sfs_nolock+0x22>$/;"	l
c0110b8b	obj/kernel.asm	/^c0110b8b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110b90	obj/kernel.asm	/^c0110b90:	c9                   	leave  $/;"	l
c0110b91	obj/kernel.asm	/^c0110b91:	c3                   	ret    $/;"	l
c0110b92	obj/kernel.asm	/^c0110b92 <sfs_load_inode>:$/;"	l
c0110b92	obj/kernel.asm	/^c0110b92:	55                   	push   %ebp$/;"	l
c0110b93	obj/kernel.asm	/^c0110b93:	89 e5                	mov    %esp,%ebp$/;"	l
c0110b95	obj/kernel.asm	/^c0110b95:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110b98	obj/kernel.asm	/^c0110b98:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110b9b	obj/kernel.asm	/^c0110b9b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110b9e	obj/kernel.asm	/^c0110b9e:	e8 fd f2 ff ff       	call   c010fea0 <lock_sfs_fs>$/;"	l
c0110ba3	obj/kernel.asm	/^c0110ba3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110ba6	obj/kernel.asm	/^c0110ba6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110ba9	obj/kernel.asm	/^c0110ba9:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0110bac	obj/kernel.asm	/^c0110bac:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110baf	obj/kernel.asm	/^c0110baf:	e8 5d ff ff ff       	call   c0110b11 <lookup_sfs_nolock>$/;"	l
c0110bb4	obj/kernel.asm	/^c0110bb4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110bb7	obj/kernel.asm	/^c0110bb7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0110bba	obj/kernel.asm	/^c0110bba:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110bbd	obj/kernel.asm	/^c0110bbd:	85 c0                	test   %eax,%eax$/;"	l
c0110bbf	obj/kernel.asm	/^c0110bbf:	74 05                	je     c0110bc6 <sfs_load_inode+0x34>$/;"	l
c0110bc1	obj/kernel.asm	/^c0110bc1:	e9 ff 00 00 00       	jmp    c0110cc5 <sfs_load_inode+0x133>$/;"	l
c0110bc6	obj/kernel.asm	/^c0110bc6:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0110bcd	obj/kernel.asm	/^c0110bcd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110bd0	obj/kernel.asm	/^c0110bd0:	6a 40                	push   $0x40$/;"	l
c0110bd2	obj/kernel.asm	/^c0110bd2:	e8 c8 68 ff ff       	call   c010749f <kmalloc>$/;"	l
c0110bd7	obj/kernel.asm	/^c0110bd7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110bda	obj/kernel.asm	/^c0110bda:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110bdd	obj/kernel.asm	/^c0110bdd:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110be1	obj/kernel.asm	/^c0110be1:	75 05                	jne    c0110be8 <sfs_load_inode+0x56>$/;"	l
c0110be3	obj/kernel.asm	/^c0110be3:	e9 08 01 00 00       	jmp    c0110cf0 <sfs_load_inode+0x15e>$/;"	l
c0110be8	obj/kernel.asm	/^c0110be8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110beb	obj/kernel.asm	/^c0110beb:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0110bee	obj/kernel.asm	/^c0110bee:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110bf1	obj/kernel.asm	/^c0110bf1:	e8 ed fc ff ff       	call   c01108e3 <sfs_block_inuse>$/;"	l
c0110bf6	obj/kernel.asm	/^c0110bf6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110bf9	obj/kernel.asm	/^c0110bf9:	85 c0                	test   %eax,%eax$/;"	l
c0110bfb	obj/kernel.asm	/^c0110bfb:	75 19                	jne    c0110c16 <sfs_load_inode+0x84>$/;"	l
c0110bfd	obj/kernel.asm	/^c0110bfd:	68 35 75 11 c0       	push   $0xc0117535$/;"	l
c0110c02	obj/kernel.asm	/^c0110c02:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0110c07	obj/kernel.asm	/^c0110c07:	68 a8 00 00 00       	push   $0xa8$/;"	l
c0110c0c	obj/kernel.asm	/^c0110c0c:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0110c11	obj/kernel.asm	/^c0110c11:	e8 b9 f8 fe ff       	call   c01004cf <__panic>$/;"	l
c0110c16	obj/kernel.asm	/^c0110c16:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110c19	obj/kernel.asm	/^c0110c19:	6a 00                	push   $0x0$/;"	l
c0110c1b	obj/kernel.asm	/^c0110c1b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0110c1e	obj/kernel.asm	/^c0110c1e:	6a 40                	push   $0x40$/;"	l
c0110c20	obj/kernel.asm	/^c0110c20:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0110c23	obj/kernel.asm	/^c0110c23:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110c26	obj/kernel.asm	/^c0110c26:	e8 d4 1d 00 00       	call   c01129ff <sfs_rbuf>$/;"	l
c0110c2b	obj/kernel.asm	/^c0110c2b:	83 c4 20             	add    $0x20,%esp$/;"	l
c0110c2e	obj/kernel.asm	/^c0110c2e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110c31	obj/kernel.asm	/^c0110c31:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110c35	obj/kernel.asm	/^c0110c35:	74 05                	je     c0110c3c <sfs_load_inode+0xaa>$/;"	l
c0110c37	obj/kernel.asm	/^c0110c37:	e9 a6 00 00 00       	jmp    c0110ce2 <sfs_load_inode+0x150>$/;"	l
c0110c3c	obj/kernel.asm	/^c0110c3c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110c3f	obj/kernel.asm	/^c0110c3f:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c0110c43	obj/kernel.asm	/^c0110c43:	66 85 c0             	test   %ax,%ax$/;"	l
c0110c46	obj/kernel.asm	/^c0110c46:	75 19                	jne    c0110c61 <sfs_load_inode+0xcf>$/;"	l
c0110c48	obj/kernel.asm	/^c0110c48:	68 86 75 11 c0       	push   $0xc0117586$/;"	l
c0110c4d	obj/kernel.asm	/^c0110c4d:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0110c52	obj/kernel.asm	/^c0110c52:	68 ad 00 00 00       	push   $0xad$/;"	l
c0110c57	obj/kernel.asm	/^c0110c57:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0110c5c	obj/kernel.asm	/^c0110c5c:	e8 6e f8 fe ff       	call   c01004cf <__panic>$/;"	l
c0110c61	obj/kernel.asm	/^c0110c61:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0110c64	obj/kernel.asm	/^c0110c64:	50                   	push   %eax$/;"	l
c0110c65	obj/kernel.asm	/^c0110c65:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0110c68	obj/kernel.asm	/^c0110c68:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0110c6b	obj/kernel.asm	/^c0110c6b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110c6e	obj/kernel.asm	/^c0110c6e:	e8 cf fd ff ff       	call   c0110a42 <sfs_create_inode>$/;"	l
c0110c73	obj/kernel.asm	/^c0110c73:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110c76	obj/kernel.asm	/^c0110c76:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110c79	obj/kernel.asm	/^c0110c79:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110c7d	obj/kernel.asm	/^c0110c7d:	74 02                	je     c0110c81 <sfs_load_inode+0xef>$/;"	l
c0110c7f	obj/kernel.asm	/^c0110c7f:	eb 61                	jmp    c0110ce2 <sfs_load_inode+0x150>$/;"	l
c0110c81	obj/kernel.asm	/^c0110c81:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110c84	obj/kernel.asm	/^c0110c84:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110c87	obj/kernel.asm	/^c0110c87:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0110c8b	obj/kernel.asm	/^c0110c8b:	74 0d                	je     c0110c9a <sfs_load_inode+0x108>$/;"	l
c0110c8d	obj/kernel.asm	/^c0110c8d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110c90	obj/kernel.asm	/^c0110c90:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0110c93	obj/kernel.asm	/^c0110c93:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0110c98	obj/kernel.asm	/^c0110c98:	74 19                	je     c0110cb3 <sfs_load_inode+0x121>$/;"	l
c0110c9a	obj/kernel.asm	/^c0110c9a:	68 50 75 11 c0       	push   $0xc0117550$/;"	l
c0110c9f	obj/kernel.asm	/^c0110c9f:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0110ca4	obj/kernel.asm	/^c0110ca4:	68 b1 00 00 00       	push   $0xb1$/;"	l
c0110ca9	obj/kernel.asm	/^c0110ca9:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0110cae	obj/kernel.asm	/^c0110cae:	e8 1c f8 fe ff       	call   c01004cf <__panic>$/;"	l
c0110cb3	obj/kernel.asm	/^c0110cb3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110cb6	obj/kernel.asm	/^c0110cb6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110cb9	obj/kernel.asm	/^c0110cb9:	50                   	push   %eax$/;"	l
c0110cba	obj/kernel.asm	/^c0110cba:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110cbd	obj/kernel.asm	/^c0110cbd:	e8 fa fa ff ff       	call   c01107bc <sfs_set_links>$/;"	l
c0110cc2	obj/kernel.asm	/^c0110cc2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110cc5	obj/kernel.asm	/^c0110cc5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110cc8	obj/kernel.asm	/^c0110cc8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110ccb	obj/kernel.asm	/^c0110ccb:	e8 04 f2 ff ff       	call   c010fed4 <unlock_sfs_fs>$/;"	l
c0110cd0	obj/kernel.asm	/^c0110cd0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110cd3	obj/kernel.asm	/^c0110cd3:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0110cd6	obj/kernel.asm	/^c0110cd6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110cd9	obj/kernel.asm	/^c0110cd9:	89 10                	mov    %edx,(%eax)$/;"	l
c0110cdb	obj/kernel.asm	/^c0110cdb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110ce0	obj/kernel.asm	/^c0110ce0:	eb 1f                	jmp    c0110d01 <sfs_load_inode+0x16f>$/;"	l
c0110ce2	obj/kernel.asm	/^c0110ce2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110ce5	obj/kernel.asm	/^c0110ce5:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0110ce8	obj/kernel.asm	/^c0110ce8:	e8 ca 67 ff ff       	call   c01074b7 <kfree>$/;"	l
c0110ced	obj/kernel.asm	/^c0110ced:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110cf0	obj/kernel.asm	/^c0110cf0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110cf3	obj/kernel.asm	/^c0110cf3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110cf6	obj/kernel.asm	/^c0110cf6:	e8 d9 f1 ff ff       	call   c010fed4 <unlock_sfs_fs>$/;"	l
c0110cfb	obj/kernel.asm	/^c0110cfb:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110cfe	obj/kernel.asm	/^c0110cfe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110d01	obj/kernel.asm	/^c0110d01:	c9                   	leave  $/;"	l
c0110d02	obj/kernel.asm	/^c0110d02:	c3                   	ret    $/;"	l
c0110d03	obj/kernel.asm	/^c0110d03 <sfs_bmap_get_sub_nolock>:$/;"	l
c0110d03	obj/kernel.asm	/^c0110d03:	55                   	push   %ebp$/;"	l
c0110d04	obj/kernel.asm	/^c0110d04:	89 e5                	mov    %esp,%ebp$/;"	l
c0110d06	obj/kernel.asm	/^c0110d06:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110d09	obj/kernel.asm	/^c0110d09:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c0110d10	obj/kernel.asm	/^c0110d10:	76 19                	jbe    c0110d2b <sfs_bmap_get_sub_nolock+0x28>$/;"	l
c0110d12	obj/kernel.asm	/^c0110d12:	68 97 75 11 c0       	push   $0xc0117597$/;"	l
c0110d17	obj/kernel.asm	/^c0110d17:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0110d1c	obj/kernel.asm	/^c0110d1c:	68 ca 00 00 00       	push   $0xca$/;"	l
c0110d21	obj/kernel.asm	/^c0110d21:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0110d26	obj/kernel.asm	/^c0110d26:	e8 a4 f7 fe ff       	call   c01004cf <__panic>$/;"	l
c0110d2b	obj/kernel.asm	/^c0110d2b:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0110d32	obj/kernel.asm	/^c0110d32:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0110d35	obj/kernel.asm	/^c0110d35:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0110d38	obj/kernel.asm	/^c0110d38:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110d3b	obj/kernel.asm	/^c0110d3b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110d3e	obj/kernel.asm	/^c0110d3e:	8b 00                	mov    (%eax),%eax$/;"	l
c0110d40	obj/kernel.asm	/^c0110d40:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110d43	obj/kernel.asm	/^c0110d43:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110d46	obj/kernel.asm	/^c0110d46:	85 c0                	test   %eax,%eax$/;"	l
c0110d48	obj/kernel.asm	/^c0110d48:	74 43                	je     c0110d8d <sfs_bmap_get_sub_nolock+0x8a>$/;"	l
c0110d4a	obj/kernel.asm	/^c0110d4a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110d4d	obj/kernel.asm	/^c0110d4d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110d50	obj/kernel.asm	/^c0110d50:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0110d53	obj/kernel.asm	/^c0110d53:	50                   	push   %eax$/;"	l
c0110d54	obj/kernel.asm	/^c0110d54:	6a 04                	push   $0x4$/;"	l
c0110d56	obj/kernel.asm	/^c0110d56:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0110d59	obj/kernel.asm	/^c0110d59:	50                   	push   %eax$/;"	l
c0110d5a	obj/kernel.asm	/^c0110d5a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110d5d	obj/kernel.asm	/^c0110d5d:	e8 9d 1c 00 00       	call   c01129ff <sfs_rbuf>$/;"	l
c0110d62	obj/kernel.asm	/^c0110d62:	83 c4 20             	add    $0x20,%esp$/;"	l
c0110d65	obj/kernel.asm	/^c0110d65:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110d68	obj/kernel.asm	/^c0110d68:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110d6c	obj/kernel.asm	/^c0110d6c:	74 08                	je     c0110d76 <sfs_bmap_get_sub_nolock+0x73>$/;"	l
c0110d6e	obj/kernel.asm	/^c0110d6e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110d71	obj/kernel.asm	/^c0110d71:	e9 db 00 00 00       	jmp    c0110e51 <sfs_bmap_get_sub_nolock+0x14e>$/;"	l
c0110d76	obj/kernel.asm	/^c0110d76:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110d79	obj/kernel.asm	/^c0110d79:	85 c0                	test   %eax,%eax$/;"	l
c0110d7b	obj/kernel.asm	/^c0110d7b:	0f 85 8c 00 00 00    	jne    c0110e0d <sfs_bmap_get_sub_nolock+0x10a>$/;"	l
c0110d81	obj/kernel.asm	/^c0110d81:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0110d85	obj/kernel.asm	/^c0110d85:	0f 84 82 00 00 00    	je     c0110e0d <sfs_bmap_get_sub_nolock+0x10a>$/;"	l
c0110d8b	obj/kernel.asm	/^c0110d8b:	eb 2b                	jmp    c0110db8 <sfs_bmap_get_sub_nolock+0xb5>$/;"	l
c0110d8d	obj/kernel.asm	/^c0110d8d:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0110d91	obj/kernel.asm	/^c0110d91:	75 02                	jne    c0110d95 <sfs_bmap_get_sub_nolock+0x92>$/;"	l
c0110d93	obj/kernel.asm	/^c0110d93:	eb 78                	jmp    c0110e0d <sfs_bmap_get_sub_nolock+0x10a>$/;"	l
c0110d95	obj/kernel.asm	/^c0110d95:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110d98	obj/kernel.asm	/^c0110d98:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0110d9b	obj/kernel.asm	/^c0110d9b:	50                   	push   %eax$/;"	l
c0110d9c	obj/kernel.asm	/^c0110d9c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110d9f	obj/kernel.asm	/^c0110d9f:	e8 95 fb ff ff       	call   c0110939 <sfs_block_alloc>$/;"	l
c0110da4	obj/kernel.asm	/^c0110da4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110da7	obj/kernel.asm	/^c0110da7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110daa	obj/kernel.asm	/^c0110daa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110dae	obj/kernel.asm	/^c0110dae:	74 08                	je     c0110db8 <sfs_bmap_get_sub_nolock+0xb5>$/;"	l
c0110db0	obj/kernel.asm	/^c0110db0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110db3	obj/kernel.asm	/^c0110db3:	e9 99 00 00 00       	jmp    c0110e51 <sfs_bmap_get_sub_nolock+0x14e>$/;"	l
c0110db8	obj/kernel.asm	/^c0110db8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110dbb	obj/kernel.asm	/^c0110dbb:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0110dbe	obj/kernel.asm	/^c0110dbe:	50                   	push   %eax$/;"	l
c0110dbf	obj/kernel.asm	/^c0110dbf:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110dc2	obj/kernel.asm	/^c0110dc2:	e8 72 fb ff ff       	call   c0110939 <sfs_block_alloc>$/;"	l
c0110dc7	obj/kernel.asm	/^c0110dc7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110dca	obj/kernel.asm	/^c0110dca:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110dcd	obj/kernel.asm	/^c0110dcd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110dd1	obj/kernel.asm	/^c0110dd1:	74 02                	je     c0110dd5 <sfs_bmap_get_sub_nolock+0xd2>$/;"	l
c0110dd3	obj/kernel.asm	/^c0110dd3:	eb 5b                	jmp    c0110e30 <sfs_bmap_get_sub_nolock+0x12d>$/;"	l
c0110dd5	obj/kernel.asm	/^c0110dd5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110dd8	obj/kernel.asm	/^c0110dd8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110ddb	obj/kernel.asm	/^c0110ddb:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0110dde	obj/kernel.asm	/^c0110dde:	50                   	push   %eax$/;"	l
c0110ddf	obj/kernel.asm	/^c0110ddf:	6a 04                	push   $0x4$/;"	l
c0110de1	obj/kernel.asm	/^c0110de1:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0110de4	obj/kernel.asm	/^c0110de4:	50                   	push   %eax$/;"	l
c0110de5	obj/kernel.asm	/^c0110de5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110de8	obj/kernel.asm	/^c0110de8:	e8 af 1c 00 00       	call   c0112a9c <sfs_wbuf>$/;"	l
c0110ded	obj/kernel.asm	/^c0110ded:	83 c4 20             	add    $0x20,%esp$/;"	l
c0110df0	obj/kernel.asm	/^c0110df0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110df3	obj/kernel.asm	/^c0110df3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110df7	obj/kernel.asm	/^c0110df7:	74 14                	je     c0110e0d <sfs_bmap_get_sub_nolock+0x10a>$/;"	l
c0110df9	obj/kernel.asm	/^c0110df9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110dfc	obj/kernel.asm	/^c0110dfc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110dff	obj/kernel.asm	/^c0110dff:	50                   	push   %eax$/;"	l
c0110e00	obj/kernel.asm	/^c0110e00:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110e03	obj/kernel.asm	/^c0110e03:	e8 d9 fb ff ff       	call   c01109e1 <sfs_block_free>$/;"	l
c0110e08	obj/kernel.asm	/^c0110e08:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110e0b	obj/kernel.asm	/^c0110e0b:	eb 23                	jmp    c0110e30 <sfs_bmap_get_sub_nolock+0x12d>$/;"	l
c0110e0d	obj/kernel.asm	/^c0110e0d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110e10	obj/kernel.asm	/^c0110e10:	8b 10                	mov    (%eax),%edx$/;"	l
c0110e12	obj/kernel.asm	/^c0110e12:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110e15	obj/kernel.asm	/^c0110e15:	39 c2                	cmp    %eax,%edx$/;"	l
c0110e17	obj/kernel.asm	/^c0110e17:	74 08                	je     c0110e21 <sfs_bmap_get_sub_nolock+0x11e>$/;"	l
c0110e19	obj/kernel.asm	/^c0110e19:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0110e1c	obj/kernel.asm	/^c0110e1c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110e1f	obj/kernel.asm	/^c0110e1f:	89 10                	mov    %edx,(%eax)$/;"	l
c0110e21	obj/kernel.asm	/^c0110e21:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0110e24	obj/kernel.asm	/^c0110e24:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0110e27	obj/kernel.asm	/^c0110e27:	89 10                	mov    %edx,(%eax)$/;"	l
c0110e29	obj/kernel.asm	/^c0110e29:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110e2e	obj/kernel.asm	/^c0110e2e:	eb 21                	jmp    c0110e51 <sfs_bmap_get_sub_nolock+0x14e>$/;"	l
c0110e30	obj/kernel.asm	/^c0110e30:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110e33	obj/kernel.asm	/^c0110e33:	8b 10                	mov    (%eax),%edx$/;"	l
c0110e35	obj/kernel.asm	/^c0110e35:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110e38	obj/kernel.asm	/^c0110e38:	39 c2                	cmp    %eax,%edx$/;"	l
c0110e3a	obj/kernel.asm	/^c0110e3a:	74 12                	je     c0110e4e <sfs_bmap_get_sub_nolock+0x14b>$/;"	l
c0110e3c	obj/kernel.asm	/^c0110e3c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110e3f	obj/kernel.asm	/^c0110e3f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110e42	obj/kernel.asm	/^c0110e42:	50                   	push   %eax$/;"	l
c0110e43	obj/kernel.asm	/^c0110e43:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110e46	obj/kernel.asm	/^c0110e46:	e8 96 fb ff ff       	call   c01109e1 <sfs_block_free>$/;"	l
c0110e4b	obj/kernel.asm	/^c0110e4b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110e4e	obj/kernel.asm	/^c0110e4e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110e51	obj/kernel.asm	/^c0110e51:	c9                   	leave  $/;"	l
c0110e52	obj/kernel.asm	/^c0110e52:	c3                   	ret    $/;"	l
c0110e53	obj/kernel.asm	/^c0110e53 <sfs_bmap_get_nolock>:$/;"	l
c0110e53	obj/kernel.asm	/^c0110e53:	55                   	push   %ebp$/;"	l
c0110e54	obj/kernel.asm	/^c0110e54:	89 e5                	mov    %esp,%ebp$/;"	l
c0110e56	obj/kernel.asm	/^c0110e56:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110e59	obj/kernel.asm	/^c0110e59:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110e5c	obj/kernel.asm	/^c0110e5c:	8b 00                	mov    (%eax),%eax$/;"	l
c0110e5e	obj/kernel.asm	/^c0110e5e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110e61	obj/kernel.asm	/^c0110e61:	83 7d 10 0b          	cmpl   $0xb,0x10(%ebp)$/;"	l
c0110e65	obj/kernel.asm	/^c0110e65:	77 5e                	ja     c0110ec5 <sfs_bmap_get_nolock+0x72>$/;"	l
c0110e67	obj/kernel.asm	/^c0110e67:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110e6a	obj/kernel.asm	/^c0110e6a:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0110e6d	obj/kernel.asm	/^c0110e6d:	8b 44 90 0c          	mov    0xc(%eax,%edx,4),%eax$/;"	l
c0110e71	obj/kernel.asm	/^c0110e71:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0110e74	obj/kernel.asm	/^c0110e74:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110e77	obj/kernel.asm	/^c0110e77:	85 c0                	test   %eax,%eax$/;"	l
c0110e79	obj/kernel.asm	/^c0110e79:	75 45                	jne    c0110ec0 <sfs_bmap_get_nolock+0x6d>$/;"	l
c0110e7b	obj/kernel.asm	/^c0110e7b:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0110e7f	obj/kernel.asm	/^c0110e7f:	74 3f                	je     c0110ec0 <sfs_bmap_get_nolock+0x6d>$/;"	l
c0110e81	obj/kernel.asm	/^c0110e81:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110e84	obj/kernel.asm	/^c0110e84:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0110e87	obj/kernel.asm	/^c0110e87:	50                   	push   %eax$/;"	l
c0110e88	obj/kernel.asm	/^c0110e88:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110e8b	obj/kernel.asm	/^c0110e8b:	e8 a9 fa ff ff       	call   c0110939 <sfs_block_alloc>$/;"	l
c0110e90	obj/kernel.asm	/^c0110e90:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110e93	obj/kernel.asm	/^c0110e93:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110e96	obj/kernel.asm	/^c0110e96:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110e9a	obj/kernel.asm	/^c0110e9a:	74 08                	je     c0110ea4 <sfs_bmap_get_nolock+0x51>$/;"	l
c0110e9c	obj/kernel.asm	/^c0110e9c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110e9f	obj/kernel.asm	/^c0110e9f:	e9 05 01 00 00       	jmp    c0110fa9 <sfs_bmap_get_nolock+0x156>$/;"	l
c0110ea4	obj/kernel.asm	/^c0110ea4:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c0110ea7	obj/kernel.asm	/^c0110ea7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110eaa	obj/kernel.asm	/^c0110eaa:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0110ead	obj/kernel.asm	/^c0110ead:	89 4c 90 0c          	mov    %ecx,0xc(%eax,%edx,4)$/;"	l
c0110eb1	obj/kernel.asm	/^c0110eb1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110eb4	obj/kernel.asm	/^c0110eb4:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0110ebb	obj/kernel.asm	/^c0110ebb:	e9 a6 00 00 00       	jmp    c0110f66 <sfs_bmap_get_nolock+0x113>$/;"	l
c0110ec0	obj/kernel.asm	/^c0110ec0:	e9 a1 00 00 00       	jmp    c0110f66 <sfs_bmap_get_nolock+0x113>$/;"	l
c0110ec5	obj/kernel.asm	/^c0110ec5:	83 6d 10 0c          	subl   $0xc,0x10(%ebp)$/;"	l
c0110ec9	obj/kernel.asm	/^c0110ec9:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c0110ed0	obj/kernel.asm	/^c0110ed0:	77 7d                	ja     c0110f4f <sfs_bmap_get_nolock+0xfc>$/;"	l
c0110ed2	obj/kernel.asm	/^c0110ed2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110ed5	obj/kernel.asm	/^c0110ed5:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110ed8	obj/kernel.asm	/^c0110ed8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110edb	obj/kernel.asm	/^c0110edb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110ede	obj/kernel.asm	/^c0110ede:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0110ee1	obj/kernel.asm	/^c0110ee1:	50                   	push   %eax$/;"	l
c0110ee2	obj/kernel.asm	/^c0110ee2:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0110ee5	obj/kernel.asm	/^c0110ee5:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0110ee8	obj/kernel.asm	/^c0110ee8:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0110eeb	obj/kernel.asm	/^c0110eeb:	50                   	push   %eax$/;"	l
c0110eec	obj/kernel.asm	/^c0110eec:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110eef	obj/kernel.asm	/^c0110eef:	e8 0f fe ff ff       	call   c0110d03 <sfs_bmap_get_sub_nolock>$/;"	l
c0110ef4	obj/kernel.asm	/^c0110ef4:	83 c4 20             	add    $0x20,%esp$/;"	l
c0110ef7	obj/kernel.asm	/^c0110ef7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110efa	obj/kernel.asm	/^c0110efa:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110efe	obj/kernel.asm	/^c0110efe:	74 08                	je     c0110f08 <sfs_bmap_get_nolock+0xb5>$/;"	l
c0110f00	obj/kernel.asm	/^c0110f00:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110f03	obj/kernel.asm	/^c0110f03:	e9 a1 00 00 00       	jmp    c0110fa9 <sfs_bmap_get_nolock+0x156>$/;"	l
c0110f08	obj/kernel.asm	/^c0110f08:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110f0b	obj/kernel.asm	/^c0110f0b:	8b 50 3c             	mov    0x3c(%eax),%edx$/;"	l
c0110f0e	obj/kernel.asm	/^c0110f0e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110f11	obj/kernel.asm	/^c0110f11:	39 c2                	cmp    %eax,%edx$/;"	l
c0110f13	obj/kernel.asm	/^c0110f13:	74 38                	je     c0110f4d <sfs_bmap_get_nolock+0xfa>$/;"	l
c0110f15	obj/kernel.asm	/^c0110f15:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110f18	obj/kernel.asm	/^c0110f18:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110f1b	obj/kernel.asm	/^c0110f1b:	85 c0                	test   %eax,%eax$/;"	l
c0110f1d	obj/kernel.asm	/^c0110f1d:	74 19                	je     c0110f38 <sfs_bmap_get_nolock+0xe5>$/;"	l
c0110f1f	obj/kernel.asm	/^c0110f1f:	68 ae 75 11 c0       	push   $0xc01175ae$/;"	l
c0110f24	obj/kernel.asm	/^c0110f24:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0110f29	obj/kernel.asm	/^c0110f29:	68 18 01 00 00       	push   $0x118$/;"	l
c0110f2e	obj/kernel.asm	/^c0110f2e:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0110f33	obj/kernel.asm	/^c0110f33:	e8 97 f5 fe ff       	call   c01004cf <__panic>$/;"	l
c0110f38	obj/kernel.asm	/^c0110f38:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0110f3b	obj/kernel.asm	/^c0110f3b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110f3e	obj/kernel.asm	/^c0110f3e:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0110f41	obj/kernel.asm	/^c0110f41:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110f44	obj/kernel.asm	/^c0110f44:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0110f4b	obj/kernel.asm	/^c0110f4b:	eb 19                	jmp    c0110f66 <sfs_bmap_get_nolock+0x113>$/;"	l
c0110f4d	obj/kernel.asm	/^c0110f4d:	eb 17                	jmp    c0110f66 <sfs_bmap_get_nolock+0x113>$/;"	l
c0110f4f	obj/kernel.asm	/^c0110f4f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0110f52	obj/kernel.asm	/^c0110f52:	68 c4 75 11 c0       	push   $0xc01175c4$/;"	l
c0110f57	obj/kernel.asm	/^c0110f57:	68 1e 01 00 00       	push   $0x11e$/;"	l
c0110f5c	obj/kernel.asm	/^c0110f5c:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0110f61	obj/kernel.asm	/^c0110f61:	e8 69 f5 fe ff       	call   c01004cf <__panic>$/;"	l
c0110f66	obj/kernel.asm	/^c0110f66:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110f69	obj/kernel.asm	/^c0110f69:	85 c0                	test   %eax,%eax$/;"	l
c0110f6b	obj/kernel.asm	/^c0110f6b:	74 2f                	je     c0110f9c <sfs_bmap_get_nolock+0x149>$/;"	l
c0110f6d	obj/kernel.asm	/^c0110f6d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110f70	obj/kernel.asm	/^c0110f70:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110f73	obj/kernel.asm	/^c0110f73:	50                   	push   %eax$/;"	l
c0110f74	obj/kernel.asm	/^c0110f74:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110f77	obj/kernel.asm	/^c0110f77:	e8 67 f9 ff ff       	call   c01108e3 <sfs_block_inuse>$/;"	l
c0110f7c	obj/kernel.asm	/^c0110f7c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110f7f	obj/kernel.asm	/^c0110f7f:	85 c0                	test   %eax,%eax$/;"	l
c0110f81	obj/kernel.asm	/^c0110f81:	75 19                	jne    c0110f9c <sfs_bmap_get_nolock+0x149>$/;"	l
c0110f83	obj/kernel.asm	/^c0110f83:	68 f0 75 11 c0       	push   $0xc01175f0$/;"	l
c0110f88	obj/kernel.asm	/^c0110f88:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0110f8d	obj/kernel.asm	/^c0110f8d:	68 21 01 00 00       	push   $0x121$/;"	l
c0110f92	obj/kernel.asm	/^c0110f92:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0110f97	obj/kernel.asm	/^c0110f97:	e8 33 f5 fe ff       	call   c01004cf <__panic>$/;"	l
c0110f9c	obj/kernel.asm	/^c0110f9c:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0110f9f	obj/kernel.asm	/^c0110f9f:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0110fa2	obj/kernel.asm	/^c0110fa2:	89 10                	mov    %edx,(%eax)$/;"	l
c0110fa4	obj/kernel.asm	/^c0110fa4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110fa9	obj/kernel.asm	/^c0110fa9:	c9                   	leave  $/;"	l
c0110faa	obj/kernel.asm	/^c0110faa:	c3                   	ret    $/;"	l
c0110fab	obj/kernel.asm	/^c0110fab <sfs_bmap_free_sub_nolock>:$/;"	l
c0110fab	obj/kernel.asm	/^c0110fab:	55                   	push   %ebp$/;"	l
c0110fac	obj/kernel.asm	/^c0110fac:	89 e5                	mov    %esp,%ebp$/;"	l
c0110fae	obj/kernel.asm	/^c0110fae:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110fb1	obj/kernel.asm	/^c0110fb1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110fb4	obj/kernel.asm	/^c0110fb4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0110fb7	obj/kernel.asm	/^c0110fb7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110fba	obj/kernel.asm	/^c0110fba:	e8 24 f9 ff ff       	call   c01108e3 <sfs_block_inuse>$/;"	l
c0110fbf	obj/kernel.asm	/^c0110fbf:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110fc2	obj/kernel.asm	/^c0110fc2:	85 c0                	test   %eax,%eax$/;"	l
c0110fc4	obj/kernel.asm	/^c0110fc4:	74 09                	je     c0110fcf <sfs_bmap_free_sub_nolock+0x24>$/;"	l
c0110fc6	obj/kernel.asm	/^c0110fc6:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c0110fcd	obj/kernel.asm	/^c0110fcd:	76 19                	jbe    c0110fe8 <sfs_bmap_free_sub_nolock+0x3d>$/;"	l
c0110fcf	obj/kernel.asm	/^c0110fcf:	68 18 76 11 c0       	push   $0xc0117618$/;"	l
c0110fd4	obj/kernel.asm	/^c0110fd4:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0110fd9	obj/kernel.asm	/^c0110fd9:	68 2b 01 00 00       	push   $0x12b$/;"	l
c0110fde	obj/kernel.asm	/^c0110fde:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0110fe3	obj/kernel.asm	/^c0110fe3:	e8 e7 f4 fe ff       	call   c01004cf <__panic>$/;"	l
c0110fe8	obj/kernel.asm	/^c0110fe8:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0110fef	obj/kernel.asm	/^c0110fef:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0110ff2	obj/kernel.asm	/^c0110ff2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0110ff5	obj/kernel.asm	/^c0110ff5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110ff8	obj/kernel.asm	/^c0110ff8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110ffb	obj/kernel.asm	/^c0110ffb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0110ffe	obj/kernel.asm	/^c0110ffe:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111001	obj/kernel.asm	/^c0111001:	6a 04                	push   $0x4$/;"	l
c0111003	obj/kernel.asm	/^c0111003:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0111006	obj/kernel.asm	/^c0111006:	50                   	push   %eax$/;"	l
c0111007	obj/kernel.asm	/^c0111007:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011100a	obj/kernel.asm	/^c011100a:	e8 f0 19 00 00       	call   c01129ff <sfs_rbuf>$/;"	l
c011100f	obj/kernel.asm	/^c011100f:	83 c4 20             	add    $0x20,%esp$/;"	l
c0111012	obj/kernel.asm	/^c0111012:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111015	obj/kernel.asm	/^c0111015:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111019	obj/kernel.asm	/^c0111019:	74 05                	je     c0111020 <sfs_bmap_free_sub_nolock+0x75>$/;"	l
c011101b	obj/kernel.asm	/^c011101b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011101e	obj/kernel.asm	/^c011101e:	eb 46                	jmp    c0111066 <sfs_bmap_free_sub_nolock+0xbb>$/;"	l
c0111020	obj/kernel.asm	/^c0111020:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111023	obj/kernel.asm	/^c0111023:	85 c0                	test   %eax,%eax$/;"	l
c0111025	obj/kernel.asm	/^c0111025:	74 3a                	je     c0111061 <sfs_bmap_free_sub_nolock+0xb6>$/;"	l
c0111027	obj/kernel.asm	/^c0111027:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011102a	obj/kernel.asm	/^c011102a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c011102d	obj/kernel.asm	/^c011102d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111030	obj/kernel.asm	/^c0111030:	6a 04                	push   $0x4$/;"	l
c0111032	obj/kernel.asm	/^c0111032:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0111035	obj/kernel.asm	/^c0111035:	50                   	push   %eax$/;"	l
c0111036	obj/kernel.asm	/^c0111036:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111039	obj/kernel.asm	/^c0111039:	e8 5e 1a 00 00       	call   c0112a9c <sfs_wbuf>$/;"	l
c011103e	obj/kernel.asm	/^c011103e:	83 c4 20             	add    $0x20,%esp$/;"	l
c0111041	obj/kernel.asm	/^c0111041:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111044	obj/kernel.asm	/^c0111044:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111048	obj/kernel.asm	/^c0111048:	74 05                	je     c011104f <sfs_bmap_free_sub_nolock+0xa4>$/;"	l
c011104a	obj/kernel.asm	/^c011104a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011104d	obj/kernel.asm	/^c011104d:	eb 17                	jmp    c0111066 <sfs_bmap_free_sub_nolock+0xbb>$/;"	l
c011104f	obj/kernel.asm	/^c011104f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111052	obj/kernel.asm	/^c0111052:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111055	obj/kernel.asm	/^c0111055:	50                   	push   %eax$/;"	l
c0111056	obj/kernel.asm	/^c0111056:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111059	obj/kernel.asm	/^c0111059:	e8 83 f9 ff ff       	call   c01109e1 <sfs_block_free>$/;"	l
c011105e	obj/kernel.asm	/^c011105e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111061	obj/kernel.asm	/^c0111061:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111066	obj/kernel.asm	/^c0111066:	c9                   	leave  $/;"	l
c0111067	obj/kernel.asm	/^c0111067:	c3                   	ret    $/;"	l
c0111068	obj/kernel.asm	/^c0111068 <sfs_bmap_free_nolock>:$/;"	l
c0111068	obj/kernel.asm	/^c0111068:	55                   	push   %ebp$/;"	l
c0111069	obj/kernel.asm	/^c0111069:	89 e5                	mov    %esp,%ebp$/;"	l
c011106b	obj/kernel.asm	/^c011106b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011106e	obj/kernel.asm	/^c011106e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111071	obj/kernel.asm	/^c0111071:	8b 00                	mov    (%eax),%eax$/;"	l
c0111073	obj/kernel.asm	/^c0111073:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111076	obj/kernel.asm	/^c0111076:	83 7d 10 0b          	cmpl   $0xb,0x10(%ebp)$/;"	l
c011107a	obj/kernel.asm	/^c011107a:	77 43                	ja     c01110bf <sfs_bmap_free_nolock+0x57>$/;"	l
c011107c	obj/kernel.asm	/^c011107c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011107f	obj/kernel.asm	/^c011107f:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0111082	obj/kernel.asm	/^c0111082:	8b 44 90 0c          	mov    0xc(%eax,%edx,4),%eax$/;"	l
c0111086	obj/kernel.asm	/^c0111086:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111089	obj/kernel.asm	/^c0111089:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011108d	obj/kernel.asm	/^c011108d:	74 29                	je     c01110b8 <sfs_bmap_free_nolock+0x50>$/;"	l
c011108f	obj/kernel.asm	/^c011108f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111092	obj/kernel.asm	/^c0111092:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0111095	obj/kernel.asm	/^c0111095:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111098	obj/kernel.asm	/^c0111098:	e8 44 f9 ff ff       	call   c01109e1 <sfs_block_free>$/;"	l
c011109d	obj/kernel.asm	/^c011109d:	83 c4 10             	add    $0x10,%esp$/;"	l
c01110a0	obj/kernel.asm	/^c01110a0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01110a3	obj/kernel.asm	/^c01110a3:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01110a6	obj/kernel.asm	/^c01110a6:	c7 44 90 0c 00 00 00 	movl   $0x0,0xc(%eax,%edx,4)$/;"	l
c01110ad	obj/kernel.asm	/^c01110ad:	00 $/;"	l
c01110ae	obj/kernel.asm	/^c01110ae:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01110b1	obj/kernel.asm	/^c01110b1:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c01110b8	obj/kernel.asm	/^c01110b8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01110bd	obj/kernel.asm	/^c01110bd:	eb 4a                	jmp    c0111109 <sfs_bmap_free_nolock+0xa1>$/;"	l
c01110bf	obj/kernel.asm	/^c01110bf:	83 6d 10 0c          	subl   $0xc,0x10(%ebp)$/;"	l
c01110c3	obj/kernel.asm	/^c01110c3:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c01110ca	obj/kernel.asm	/^c01110ca:	77 38                	ja     c0111104 <sfs_bmap_free_nolock+0x9c>$/;"	l
c01110cc	obj/kernel.asm	/^c01110cc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01110cf	obj/kernel.asm	/^c01110cf:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01110d2	obj/kernel.asm	/^c01110d2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01110d5	obj/kernel.asm	/^c01110d5:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01110d9	obj/kernel.asm	/^c01110d9:	74 22                	je     c01110fd <sfs_bmap_free_nolock+0x95>$/;"	l
c01110db	obj/kernel.asm	/^c01110db:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01110de	obj/kernel.asm	/^c01110de:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01110e1	obj/kernel.asm	/^c01110e1:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01110e4	obj/kernel.asm	/^c01110e4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01110e7	obj/kernel.asm	/^c01110e7:	e8 bf fe ff ff       	call   c0110fab <sfs_bmap_free_sub_nolock>$/;"	l
c01110ec	obj/kernel.asm	/^c01110ec:	83 c4 10             	add    $0x10,%esp$/;"	l
c01110ef	obj/kernel.asm	/^c01110ef:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01110f2	obj/kernel.asm	/^c01110f2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01110f6	obj/kernel.asm	/^c01110f6:	74 05                	je     c01110fd <sfs_bmap_free_nolock+0x95>$/;"	l
c01110f8	obj/kernel.asm	/^c01110f8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01110fb	obj/kernel.asm	/^c01110fb:	eb 0c                	jmp    c0111109 <sfs_bmap_free_nolock+0xa1>$/;"	l
c01110fd	obj/kernel.asm	/^c01110fd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111102	obj/kernel.asm	/^c0111102:	eb 05                	jmp    c0111109 <sfs_bmap_free_nolock+0xa1>$/;"	l
c0111104	obj/kernel.asm	/^c0111104:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111109	obj/kernel.asm	/^c0111109:	c9                   	leave  $/;"	l
c011110a	obj/kernel.asm	/^c011110a:	c3                   	ret    $/;"	l
c011110b	obj/kernel.asm	/^c011110b <sfs_bmap_load_nolock>:$/;"	l
c011110b	obj/kernel.asm	/^c011110b:	55                   	push   %ebp$/;"	l
c011110c	obj/kernel.asm	/^c011110c:	89 e5                	mov    %esp,%ebp$/;"	l
c011110e	obj/kernel.asm	/^c011110e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0111111	obj/kernel.asm	/^c0111111:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111114	obj/kernel.asm	/^c0111114:	8b 00                	mov    (%eax),%eax$/;"	l
c0111116	obj/kernel.asm	/^c0111116:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111119	obj/kernel.asm	/^c0111119:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011111c	obj/kernel.asm	/^c011111c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011111f	obj/kernel.asm	/^c011111f:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0111122	obj/kernel.asm	/^c0111122:	73 19                	jae    c011113d <sfs_bmap_load_nolock+0x32>$/;"	l
c0111124	obj/kernel.asm	/^c0111124:	68 4c 76 11 c0       	push   $0xc011764c$/;"	l
c0111129	obj/kernel.asm	/^c0111129:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c011112e	obj/kernel.asm	/^c011112e:	68 64 01 00 00       	push   $0x164$/;"	l
c0111133	obj/kernel.asm	/^c0111133:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0111138	obj/kernel.asm	/^c0111138:	e8 92 f3 fe ff       	call   c01004cf <__panic>$/;"	l
c011113d	obj/kernel.asm	/^c011113d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111140	obj/kernel.asm	/^c0111140:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111143	obj/kernel.asm	/^c0111143:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0111146	obj/kernel.asm	/^c0111146:	0f 94 c0             	sete   %al$/;"	l
c0111149	obj/kernel.asm	/^c0111149:	0f b6 c0             	movzbl %al,%eax$/;"	l
c011114c	obj/kernel.asm	/^c011114c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011114f	obj/kernel.asm	/^c011114f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111152	obj/kernel.asm	/^c0111152:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0111155	obj/kernel.asm	/^c0111155:	50                   	push   %eax$/;"	l
c0111156	obj/kernel.asm	/^c0111156:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0111159	obj/kernel.asm	/^c0111159:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c011115c	obj/kernel.asm	/^c011115c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c011115f	obj/kernel.asm	/^c011115f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111162	obj/kernel.asm	/^c0111162:	e8 ec fc ff ff       	call   c0110e53 <sfs_bmap_get_nolock>$/;"	l
c0111167	obj/kernel.asm	/^c0111167:	83 c4 20             	add    $0x20,%esp$/;"	l
c011116a	obj/kernel.asm	/^c011116a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011116d	obj/kernel.asm	/^c011116d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0111171	obj/kernel.asm	/^c0111171:	74 05                	je     c0111178 <sfs_bmap_load_nolock+0x6d>$/;"	l
c0111173	obj/kernel.asm	/^c0111173:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111176	obj/kernel.asm	/^c0111176:	eb 57                	jmp    c01111cf <sfs_bmap_load_nolock+0xc4>$/;"	l
c0111178	obj/kernel.asm	/^c0111178:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011117b	obj/kernel.asm	/^c011117b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c011117e	obj/kernel.asm	/^c011117e:	50                   	push   %eax$/;"	l
c011117f	obj/kernel.asm	/^c011117f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111182	obj/kernel.asm	/^c0111182:	e8 5c f7 ff ff       	call   c01108e3 <sfs_block_inuse>$/;"	l
c0111187	obj/kernel.asm	/^c0111187:	83 c4 10             	add    $0x10,%esp$/;"	l
c011118a	obj/kernel.asm	/^c011118a:	85 c0                	test   %eax,%eax$/;"	l
c011118c	obj/kernel.asm	/^c011118c:	75 19                	jne    c01111a7 <sfs_bmap_load_nolock+0x9c>$/;"	l
c011118e	obj/kernel.asm	/^c011118e:	68 35 75 11 c0       	push   $0xc0117535$/;"	l
c0111193	obj/kernel.asm	/^c0111193:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0111198	obj/kernel.asm	/^c0111198:	68 6b 01 00 00       	push   $0x16b$/;"	l
c011119d	obj/kernel.asm	/^c011119d:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c01111a2	obj/kernel.asm	/^c01111a2:	e8 28 f3 fe ff       	call   c01004cf <__panic>$/;"	l
c01111a7	obj/kernel.asm	/^c01111a7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01111ab	obj/kernel.asm	/^c01111ab:	74 0f                	je     c01111bc <sfs_bmap_load_nolock+0xb1>$/;"	l
c01111ad	obj/kernel.asm	/^c01111ad:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01111b0	obj/kernel.asm	/^c01111b0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01111b3	obj/kernel.asm	/^c01111b3:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01111b6	obj/kernel.asm	/^c01111b6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01111b9	obj/kernel.asm	/^c01111b9:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01111bc	obj/kernel.asm	/^c01111bc:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01111c0	obj/kernel.asm	/^c01111c0:	74 08                	je     c01111ca <sfs_bmap_load_nolock+0xbf>$/;"	l
c01111c2	obj/kernel.asm	/^c01111c2:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01111c5	obj/kernel.asm	/^c01111c5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01111c8	obj/kernel.asm	/^c01111c8:	89 10                	mov    %edx,(%eax)$/;"	l
c01111ca	obj/kernel.asm	/^c01111ca:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01111cf	obj/kernel.asm	/^c01111cf:	c9                   	leave  $/;"	l
c01111d0	obj/kernel.asm	/^c01111d0:	c3                   	ret    $/;"	l
c01111d1	obj/kernel.asm	/^c01111d1 <sfs_bmap_truncate_nolock>:$/;"	l
c01111d1	obj/kernel.asm	/^c01111d1:	55                   	push   %ebp$/;"	l
c01111d2	obj/kernel.asm	/^c01111d2:	89 e5                	mov    %esp,%ebp$/;"	l
c01111d4	obj/kernel.asm	/^c01111d4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01111d7	obj/kernel.asm	/^c01111d7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01111da	obj/kernel.asm	/^c01111da:	8b 00                	mov    (%eax),%eax$/;"	l
c01111dc	obj/kernel.asm	/^c01111dc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01111df	obj/kernel.asm	/^c01111df:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01111e2	obj/kernel.asm	/^c01111e2:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01111e5	obj/kernel.asm	/^c01111e5:	85 c0                	test   %eax,%eax$/;"	l
c01111e7	obj/kernel.asm	/^c01111e7:	75 19                	jne    c0111202 <sfs_bmap_truncate_nolock+0x31>$/;"	l
c01111e9	obj/kernel.asm	/^c01111e9:	68 61 76 11 c0       	push   $0xc0117661$/;"	l
c01111ee	obj/kernel.asm	/^c01111ee:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c01111f3	obj/kernel.asm	/^c01111f3:	68 7b 01 00 00       	push   $0x17b$/;"	l
c01111f8	obj/kernel.asm	/^c01111f8:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c01111fd	obj/kernel.asm	/^c01111fd:	e8 cd f2 fe ff       	call   c01004cf <__panic>$/;"	l
c0111202	obj/kernel.asm	/^c0111202:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111205	obj/kernel.asm	/^c0111205:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111208	obj/kernel.asm	/^c0111208:	83 e8 01             	sub    $0x1,%eax$/;"	l
c011120b	obj/kernel.asm	/^c011120b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c011120e	obj/kernel.asm	/^c011120e:	50                   	push   %eax$/;"	l
c011120f	obj/kernel.asm	/^c011120f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111212	obj/kernel.asm	/^c0111212:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111215	obj/kernel.asm	/^c0111215:	e8 4e fe ff ff       	call   c0111068 <sfs_bmap_free_nolock>$/;"	l
c011121a	obj/kernel.asm	/^c011121a:	83 c4 10             	add    $0x10,%esp$/;"	l
c011121d	obj/kernel.asm	/^c011121d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111220	obj/kernel.asm	/^c0111220:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111224	obj/kernel.asm	/^c0111224:	74 05                	je     c011122b <sfs_bmap_truncate_nolock+0x5a>$/;"	l
c0111226	obj/kernel.asm	/^c0111226:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111229	obj/kernel.asm	/^c0111229:	eb 1e                	jmp    c0111249 <sfs_bmap_truncate_nolock+0x78>$/;"	l
c011122b	obj/kernel.asm	/^c011122b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011122e	obj/kernel.asm	/^c011122e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111231	obj/kernel.asm	/^c0111231:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0111234	obj/kernel.asm	/^c0111234:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111237	obj/kernel.asm	/^c0111237:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c011123a	obj/kernel.asm	/^c011123a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011123d	obj/kernel.asm	/^c011123d:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0111244	obj/kernel.asm	/^c0111244:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111249	obj/kernel.asm	/^c0111249:	c9                   	leave  $/;"	l
c011124a	obj/kernel.asm	/^c011124a:	c3                   	ret    $/;"	l
c011124b	obj/kernel.asm	/^c011124b <sfs_dirent_read_nolock>:$/;"	l
c011124b	obj/kernel.asm	/^c011124b:	55                   	push   %ebp$/;"	l
c011124c	obj/kernel.asm	/^c011124c:	89 e5                	mov    %esp,%ebp$/;"	l
c011124e	obj/kernel.asm	/^c011124e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0111251	obj/kernel.asm	/^c0111251:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111254	obj/kernel.asm	/^c0111254:	8b 00                	mov    (%eax),%eax$/;"	l
c0111256	obj/kernel.asm	/^c0111256:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c011125a	obj/kernel.asm	/^c011125a:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c011125e	obj/kernel.asm	/^c011125e:	75 15                	jne    c0111275 <sfs_dirent_read_nolock+0x2a>$/;"	l
c0111260	obj/kernel.asm	/^c0111260:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0111264	obj/kernel.asm	/^c0111264:	78 0f                	js     c0111275 <sfs_dirent_read_nolock+0x2a>$/;"	l
c0111266	obj/kernel.asm	/^c0111266:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0111269	obj/kernel.asm	/^c0111269:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011126c	obj/kernel.asm	/^c011126c:	8b 00                	mov    (%eax),%eax$/;"	l
c011126e	obj/kernel.asm	/^c011126e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111271	obj/kernel.asm	/^c0111271:	39 c2                	cmp    %eax,%edx$/;"	l
c0111273	obj/kernel.asm	/^c0111273:	72 19                	jb     c011128e <sfs_dirent_read_nolock+0x43>$/;"	l
c0111275	obj/kernel.asm	/^c0111275:	68 74 76 11 c0       	push   $0xc0117674$/;"	l
c011127a	obj/kernel.asm	/^c011127a:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c011127f	obj/kernel.asm	/^c011127f:	68 8e 01 00 00       	push   $0x18e$/;"	l
c0111284	obj/kernel.asm	/^c0111284:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0111289	obj/kernel.asm	/^c0111289:	e8 41 f2 fe ff       	call   c01004cf <__panic>$/;"	l
c011128e	obj/kernel.asm	/^c011128e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0111291	obj/kernel.asm	/^c0111291:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c0111294	obj/kernel.asm	/^c0111294:	52                   	push   %edx$/;"	l
c0111295	obj/kernel.asm	/^c0111295:	50                   	push   %eax$/;"	l
c0111296	obj/kernel.asm	/^c0111296:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111299	obj/kernel.asm	/^c0111299:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011129c	obj/kernel.asm	/^c011129c:	e8 6a fe ff ff       	call   c011110b <sfs_bmap_load_nolock>$/;"	l
c01112a1	obj/kernel.asm	/^c01112a1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01112a4	obj/kernel.asm	/^c01112a4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01112a7	obj/kernel.asm	/^c01112a7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01112ab	obj/kernel.asm	/^c01112ab:	74 05                	je     c01112b2 <sfs_dirent_read_nolock+0x67>$/;"	l
c01112ad	obj/kernel.asm	/^c01112ad:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01112b0	obj/kernel.asm	/^c01112b0:	eb 68                	jmp    c011131a <sfs_dirent_read_nolock+0xcf>$/;"	l
c01112b2	obj/kernel.asm	/^c01112b2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01112b5	obj/kernel.asm	/^c01112b5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01112b8	obj/kernel.asm	/^c01112b8:	50                   	push   %eax$/;"	l
c01112b9	obj/kernel.asm	/^c01112b9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01112bc	obj/kernel.asm	/^c01112bc:	e8 22 f6 ff ff       	call   c01108e3 <sfs_block_inuse>$/;"	l
c01112c1	obj/kernel.asm	/^c01112c1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01112c4	obj/kernel.asm	/^c01112c4:	85 c0                	test   %eax,%eax$/;"	l
c01112c6	obj/kernel.asm	/^c01112c6:	75 19                	jne    c01112e1 <sfs_dirent_read_nolock+0x96>$/;"	l
c01112c8	obj/kernel.asm	/^c01112c8:	68 35 75 11 c0       	push   $0xc0117535$/;"	l
c01112cd	obj/kernel.asm	/^c01112cd:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c01112d2	obj/kernel.asm	/^c01112d2:	68 95 01 00 00       	push   $0x195$/;"	l
c01112d7	obj/kernel.asm	/^c01112d7:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c01112dc	obj/kernel.asm	/^c01112dc:	e8 ee f1 fe ff       	call   c01004cf <__panic>$/;"	l
c01112e1	obj/kernel.asm	/^c01112e1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01112e4	obj/kernel.asm	/^c01112e4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01112e7	obj/kernel.asm	/^c01112e7:	6a 00                	push   $0x0$/;"	l
c01112e9	obj/kernel.asm	/^c01112e9:	50                   	push   %eax$/;"	l
c01112ea	obj/kernel.asm	/^c01112ea:	68 04 01 00 00       	push   $0x104$/;"	l
c01112ef	obj/kernel.asm	/^c01112ef:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c01112f2	obj/kernel.asm	/^c01112f2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01112f5	obj/kernel.asm	/^c01112f5:	e8 05 17 00 00       	call   c01129ff <sfs_rbuf>$/;"	l
c01112fa	obj/kernel.asm	/^c01112fa:	83 c4 20             	add    $0x20,%esp$/;"	l
c01112fd	obj/kernel.asm	/^c01112fd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111300	obj/kernel.asm	/^c0111300:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111304	obj/kernel.asm	/^c0111304:	74 05                	je     c011130b <sfs_dirent_read_nolock+0xc0>$/;"	l
c0111306	obj/kernel.asm	/^c0111306:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111309	obj/kernel.asm	/^c0111309:	eb 0f                	jmp    c011131a <sfs_dirent_read_nolock+0xcf>$/;"	l
c011130b	obj/kernel.asm	/^c011130b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c011130e	obj/kernel.asm	/^c011130e:	c6 80 03 01 00 00 00 	movb   $0x0,0x103(%eax)$/;"	l
c0111315	obj/kernel.asm	/^c0111315:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011131a	obj/kernel.asm	/^c011131a:	c9                   	leave  $/;"	l
c011131b	obj/kernel.asm	/^c011131b:	c3                   	ret    $/;"	l
c011131c	obj/kernel.asm	/^c011131c <sfs_dirent_search_nolock>:$/;"	l
c011131c	obj/kernel.asm	/^c011131c:	55                   	push   %ebp$/;"	l
c011131d	obj/kernel.asm	/^c011131d:	89 e5                	mov    %esp,%ebp$/;"	l
c011131f	obj/kernel.asm	/^c011131f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0111322	obj/kernel.asm	/^c0111322:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111325	obj/kernel.asm	/^c0111325:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0111328	obj/kernel.asm	/^c0111328:	e8 65 19 00 00       	call   c0112c92 <strlen>$/;"	l
c011132d	obj/kernel.asm	/^c011132d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111330	obj/kernel.asm	/^c0111330:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c0111335	obj/kernel.asm	/^c0111335:	76 19                	jbe    c0111350 <sfs_dirent_search_nolock+0x34>$/;"	l
c0111337	obj/kernel.asm	/^c0111337:	68 c0 76 11 c0       	push   $0xc01176c0$/;"	l
c011133c	obj/kernel.asm	/^c011133c:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0111341	obj/kernel.asm	/^c0111341:	68 ba 01 00 00       	push   $0x1ba$/;"	l
c0111346	obj/kernel.asm	/^c0111346:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c011134b	obj/kernel.asm	/^c011134b:	e8 7f f1 fe ff       	call   c01004cf <__panic>$/;"	l
c0111350	obj/kernel.asm	/^c0111350:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111353	obj/kernel.asm	/^c0111353:	68 04 01 00 00       	push   $0x104$/;"	l
c0111358	obj/kernel.asm	/^c0111358:	e8 42 61 ff ff       	call   c010749f <kmalloc>$/;"	l
c011135d	obj/kernel.asm	/^c011135d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111360	obj/kernel.asm	/^c0111360:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111363	obj/kernel.asm	/^c0111363:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0111367	obj/kernel.asm	/^c0111367:	75 0a                	jne    c0111373 <sfs_dirent_search_nolock+0x57>$/;"	l
c0111369	obj/kernel.asm	/^c0111369:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c011136e	obj/kernel.asm	/^c011136e:	e9 bf 00 00 00       	jmp    c0111432 <sfs_dirent_search_nolock+0x116>$/;"	l
c0111373	obj/kernel.asm	/^c0111373:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111376	obj/kernel.asm	/^c0111376:	8b 00                	mov    (%eax),%eax$/;"	l
c0111378	obj/kernel.asm	/^c0111378:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011137b	obj/kernel.asm	/^c011137b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011137e	obj/kernel.asm	/^c011137e:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c0111382	obj/kernel.asm	/^c0111382:	74 08                	je     c011138c <sfs_dirent_search_nolock+0x70>$/;"	l
c0111384	obj/kernel.asm	/^c0111384:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0111387	obj/kernel.asm	/^c0111387:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c011138a	obj/kernel.asm	/^c011138a:	89 10                	mov    %edx,(%eax)$/;"	l
c011138c	obj/kernel.asm	/^c011138c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0111393	obj/kernel.asm	/^c0111393:	eb 79                	jmp    c011140e <sfs_dirent_search_nolock+0xf2>$/;"	l
c0111395	obj/kernel.asm	/^c0111395:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0111398	obj/kernel.asm	/^c0111398:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c011139b	obj/kernel.asm	/^c011139b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c011139e	obj/kernel.asm	/^c011139e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01113a1	obj/kernel.asm	/^c01113a1:	e8 a5 fe ff ff       	call   c011124b <sfs_dirent_read_nolock>$/;"	l
c01113a6	obj/kernel.asm	/^c01113a6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01113a9	obj/kernel.asm	/^c01113a9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01113ac	obj/kernel.asm	/^c01113ac:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01113b0	obj/kernel.asm	/^c01113b0:	74 02                	je     c01113b4 <sfs_dirent_search_nolock+0x98>$/;"	l
c01113b2	obj/kernel.asm	/^c01113b2:	eb 6d                	jmp    c0111421 <sfs_dirent_search_nolock+0x105>$/;"	l
c01113b4	obj/kernel.asm	/^c01113b4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01113b7	obj/kernel.asm	/^c01113b7:	8b 00                	mov    (%eax),%eax$/;"	l
c01113b9	obj/kernel.asm	/^c01113b9:	85 c0                	test   %eax,%eax$/;"	l
c01113bb	obj/kernel.asm	/^c01113bb:	75 12                	jne    c01113cf <sfs_dirent_search_nolock+0xb3>$/;"	l
c01113bd	obj/kernel.asm	/^c01113bd:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c01113c1	obj/kernel.asm	/^c01113c1:	74 0a                	je     c01113cd <sfs_dirent_search_nolock+0xb1>$/;"	l
c01113c3	obj/kernel.asm	/^c01113c3:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c01113c6	obj/kernel.asm	/^c01113c6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01113c9	obj/kernel.asm	/^c01113c9:	89 10                	mov    %edx,(%eax)$/;"	l
c01113cb	obj/kernel.asm	/^c01113cb:	eb 3d                	jmp    c011140a <sfs_dirent_search_nolock+0xee>$/;"	l
c01113cd	obj/kernel.asm	/^c01113cd:	eb 3b                	jmp    c011140a <sfs_dirent_search_nolock+0xee>$/;"	l
c01113cf	obj/kernel.asm	/^c01113cf:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01113d2	obj/kernel.asm	/^c01113d2:	83 c0 04             	add    $0x4,%eax$/;"	l
c01113d5	obj/kernel.asm	/^c01113d5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01113d8	obj/kernel.asm	/^c01113d8:	50                   	push   %eax$/;"	l
c01113d9	obj/kernel.asm	/^c01113d9:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01113dc	obj/kernel.asm	/^c01113dc:	e8 ac 19 00 00       	call   c0112d8d <strcmp>$/;"	l
c01113e1	obj/kernel.asm	/^c01113e1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01113e4	obj/kernel.asm	/^c01113e4:	85 c0                	test   %eax,%eax$/;"	l
c01113e6	obj/kernel.asm	/^c01113e6:	75 22                	jne    c011140a <sfs_dirent_search_nolock+0xee>$/;"	l
c01113e8	obj/kernel.asm	/^c01113e8:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c01113ec	obj/kernel.asm	/^c01113ec:	74 08                	je     c01113f6 <sfs_dirent_search_nolock+0xda>$/;"	l
c01113ee	obj/kernel.asm	/^c01113ee:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01113f1	obj/kernel.asm	/^c01113f1:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01113f4	obj/kernel.asm	/^c01113f4:	89 10                	mov    %edx,(%eax)$/;"	l
c01113f6	obj/kernel.asm	/^c01113f6:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01113fa	obj/kernel.asm	/^c01113fa:	74 0c                	je     c0111408 <sfs_dirent_search_nolock+0xec>$/;"	l
c01113fc	obj/kernel.asm	/^c01113fc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01113ff	obj/kernel.asm	/^c01113ff:	8b 10                	mov    (%eax),%edx$/;"	l
c0111401	obj/kernel.asm	/^c0111401:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0111404	obj/kernel.asm	/^c0111404:	89 10                	mov    %edx,(%eax)$/;"	l
c0111406	obj/kernel.asm	/^c0111406:	eb 19                	jmp    c0111421 <sfs_dirent_search_nolock+0x105>$/;"	l
c0111408	obj/kernel.asm	/^c0111408:	eb 17                	jmp    c0111421 <sfs_dirent_search_nolock+0x105>$/;"	l
c011140a	obj/kernel.asm	/^c011140a:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c011140e	obj/kernel.asm	/^c011140e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111411	obj/kernel.asm	/^c0111411:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c0111414	obj/kernel.asm	/^c0111414:	0f 8c 7b ff ff ff    	jl     c0111395 <sfs_dirent_search_nolock+0x79>$/;"	l
c011141a	obj/kernel.asm	/^c011141a:	c7 45 f4 f0 ff ff ff 	movl   $0xfffffff0,-0xc(%ebp)$/;"	l
c0111421	obj/kernel.asm	/^c0111421:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111424	obj/kernel.asm	/^c0111424:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0111427	obj/kernel.asm	/^c0111427:	e8 8b 60 ff ff       	call   c01074b7 <kfree>$/;"	l
c011142c	obj/kernel.asm	/^c011142c:	83 c4 10             	add    $0x10,%esp$/;"	l
c011142f	obj/kernel.asm	/^c011142f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111432	obj/kernel.asm	/^c0111432:	c9                   	leave  $/;"	l
c0111433	obj/kernel.asm	/^c0111433:	c3                   	ret    $/;"	l
c0111434	obj/kernel.asm	/^c0111434 <sfs_dirent_findino_nolock>:$/;"	l
c0111434	obj/kernel.asm	/^c0111434:	55                   	push   %ebp$/;"	l
c0111435	obj/kernel.asm	/^c0111435:	89 e5                	mov    %esp,%ebp$/;"	l
c0111437	obj/kernel.asm	/^c0111437:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011143a	obj/kernel.asm	/^c011143a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011143d	obj/kernel.asm	/^c011143d:	8b 00                	mov    (%eax),%eax$/;"	l
c011143f	obj/kernel.asm	/^c011143f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111442	obj/kernel.asm	/^c0111442:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111445	obj/kernel.asm	/^c0111445:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c011144c	obj/kernel.asm	/^c011144c:	eb 37                	jmp    c0111485 <sfs_dirent_findino_nolock+0x51>$/;"	l
c011144e	obj/kernel.asm	/^c011144e:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0111451	obj/kernel.asm	/^c0111451:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0111454	obj/kernel.asm	/^c0111454:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111457	obj/kernel.asm	/^c0111457:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011145a	obj/kernel.asm	/^c011145a:	e8 ec fd ff ff       	call   c011124b <sfs_dirent_read_nolock>$/;"	l
c011145f	obj/kernel.asm	/^c011145f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111462	obj/kernel.asm	/^c0111462:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111465	obj/kernel.asm	/^c0111465:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0111469	obj/kernel.asm	/^c0111469:	74 05                	je     c0111470 <sfs_dirent_findino_nolock+0x3c>$/;"	l
c011146b	obj/kernel.asm	/^c011146b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011146e	obj/kernel.asm	/^c011146e:	eb 22                	jmp    c0111492 <sfs_dirent_findino_nolock+0x5e>$/;"	l
c0111470	obj/kernel.asm	/^c0111470:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0111473	obj/kernel.asm	/^c0111473:	8b 00                	mov    (%eax),%eax$/;"	l
c0111475	obj/kernel.asm	/^c0111475:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0111478	obj/kernel.asm	/^c0111478:	75 07                	jne    c0111481 <sfs_dirent_findino_nolock+0x4d>$/;"	l
c011147a	obj/kernel.asm	/^c011147a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011147f	obj/kernel.asm	/^c011147f:	eb 11                	jmp    c0111492 <sfs_dirent_findino_nolock+0x5e>$/;"	l
c0111481	obj/kernel.asm	/^c0111481:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0111485	obj/kernel.asm	/^c0111485:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111488	obj/kernel.asm	/^c0111488:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c011148b	obj/kernel.asm	/^c011148b:	7c c1                	jl     c011144e <sfs_dirent_findino_nolock+0x1a>$/;"	l
c011148d	obj/kernel.asm	/^c011148d:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c0111492	obj/kernel.asm	/^c0111492:	c9                   	leave  $/;"	l
c0111493	obj/kernel.asm	/^c0111493:	c3                   	ret    $/;"	l
c0111494	obj/kernel.asm	/^c0111494 <sfs_lookup_once>:$/;"	l
c0111494	obj/kernel.asm	/^c0111494:	55                   	push   %ebp$/;"	l
c0111495	obj/kernel.asm	/^c0111495:	89 e5                	mov    %esp,%ebp$/;"	l
c0111497	obj/kernel.asm	/^c0111497:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011149a	obj/kernel.asm	/^c011149a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011149d	obj/kernel.asm	/^c011149d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01114a0	obj/kernel.asm	/^c01114a0:	e8 7b f2 ff ff       	call   c0110720 <lock_sin>$/;"	l
c01114a5	obj/kernel.asm	/^c01114a5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01114a8	obj/kernel.asm	/^c01114a8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01114ab	obj/kernel.asm	/^c01114ab:	6a 00                	push   $0x0$/;"	l
c01114ad	obj/kernel.asm	/^c01114ad:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
c01114b0	obj/kernel.asm	/^c01114b0:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c01114b3	obj/kernel.asm	/^c01114b3:	50                   	push   %eax$/;"	l
c01114b4	obj/kernel.asm	/^c01114b4:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01114b7	obj/kernel.asm	/^c01114b7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01114ba	obj/kernel.asm	/^c01114ba:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01114bd	obj/kernel.asm	/^c01114bd:	e8 5a fe ff ff       	call   c011131c <sfs_dirent_search_nolock>$/;"	l
c01114c2	obj/kernel.asm	/^c01114c2:	83 c4 20             	add    $0x20,%esp$/;"	l
c01114c5	obj/kernel.asm	/^c01114c5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01114c8	obj/kernel.asm	/^c01114c8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01114cb	obj/kernel.asm	/^c01114cb:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01114ce	obj/kernel.asm	/^c01114ce:	e8 67 f2 ff ff       	call   c011073a <unlock_sin>$/;"	l
c01114d3	obj/kernel.asm	/^c01114d3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01114d6	obj/kernel.asm	/^c01114d6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01114da	obj/kernel.asm	/^c01114da:	75 18                	jne    c01114f4 <sfs_lookup_once+0x60>$/;"	l
c01114dc	obj/kernel.asm	/^c01114dc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01114df	obj/kernel.asm	/^c01114df:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01114e2	obj/kernel.asm	/^c01114e2:	50                   	push   %eax$/;"	l
c01114e3	obj/kernel.asm	/^c01114e3:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c01114e6	obj/kernel.asm	/^c01114e6:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01114e9	obj/kernel.asm	/^c01114e9:	e8 a4 f6 ff ff       	call   c0110b92 <sfs_load_inode>$/;"	l
c01114ee	obj/kernel.asm	/^c01114ee:	83 c4 10             	add    $0x10,%esp$/;"	l
c01114f1	obj/kernel.asm	/^c01114f1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01114f4	obj/kernel.asm	/^c01114f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01114f7	obj/kernel.asm	/^c01114f7:	c9                   	leave  $/;"	l
c01114f8	obj/kernel.asm	/^c01114f8:	c3                   	ret    $/;"	l
c01114f9	obj/kernel.asm	/^c01114f9 <sfs_opendir>:$/;"	l
c01114f9	obj/kernel.asm	/^c01114f9:	55                   	push   %ebp$/;"	l
c01114fa	obj/kernel.asm	/^c01114fa:	89 e5                	mov    %esp,%ebp$/;"	l
c01114fc	obj/kernel.asm	/^c01114fc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01114ff	obj/kernel.asm	/^c01114ff:	83 e0 03             	and    $0x3,%eax$/;"	l
c0111502	obj/kernel.asm	/^c0111502:	85 c0                	test   %eax,%eax$/;"	l
c0111504	obj/kernel.asm	/^c0111504:	74 07                	je     c011150d <sfs_opendir+0x14>$/;"	l
c0111506	obj/kernel.asm	/^c0111506:	b8 ef ff ff ff       	mov    $0xffffffef,%eax$/;"	l
c011150b	obj/kernel.asm	/^c011150b:	eb 17                	jmp    c0111524 <sfs_opendir+0x2b>$/;"	l
c011150d	obj/kernel.asm	/^c011150d:	90                   	nop$/;"	l
c011150e	obj/kernel.asm	/^c011150e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111511	obj/kernel.asm	/^c0111511:	83 e0 20             	and    $0x20,%eax$/;"	l
c0111514	obj/kernel.asm	/^c0111514:	85 c0                	test   %eax,%eax$/;"	l
c0111516	obj/kernel.asm	/^c0111516:	74 07                	je     c011151f <sfs_opendir+0x26>$/;"	l
c0111518	obj/kernel.asm	/^c0111518:	b8 ef ff ff ff       	mov    $0xffffffef,%eax$/;"	l
c011151d	obj/kernel.asm	/^c011151d:	eb 05                	jmp    c0111524 <sfs_opendir+0x2b>$/;"	l
c011151f	obj/kernel.asm	/^c011151f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111524	obj/kernel.asm	/^c0111524:	5d                   	pop    %ebp$/;"	l
c0111525	obj/kernel.asm	/^c0111525:	c3                   	ret    $/;"	l
c0111526	obj/kernel.asm	/^c0111526 <sfs_openfile>:$/;"	l
c0111526	obj/kernel.asm	/^c0111526:	55                   	push   %ebp$/;"	l
c0111527	obj/kernel.asm	/^c0111527:	89 e5                	mov    %esp,%ebp$/;"	l
c0111529	obj/kernel.asm	/^c0111529:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011152e	obj/kernel.asm	/^c011152e:	5d                   	pop    %ebp$/;"	l
c011152f	obj/kernel.asm	/^c011152f:	c3                   	ret    $/;"	l
c0111530	obj/kernel.asm	/^c0111530 <sfs_close>:$/;"	l
c0111530	obj/kernel.asm	/^c0111530:	55                   	push   %ebp$/;"	l
c0111531	obj/kernel.asm	/^c0111531:	89 e5                	mov    %esp,%ebp$/;"	l
c0111533	obj/kernel.asm	/^c0111533:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0111536	obj/kernel.asm	/^c0111536:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111539	obj/kernel.asm	/^c0111539:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011153c	obj/kernel.asm	/^c011153c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111540	obj/kernel.asm	/^c0111540:	74 17                	je     c0111559 <sfs_close+0x29>$/;"	l
c0111542	obj/kernel.asm	/^c0111542:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111545	obj/kernel.asm	/^c0111545:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0111548	obj/kernel.asm	/^c0111548:	85 c0                	test   %eax,%eax$/;"	l
c011154a	obj/kernel.asm	/^c011154a:	74 0d                	je     c0111559 <sfs_close+0x29>$/;"	l
c011154c	obj/kernel.asm	/^c011154c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011154f	obj/kernel.asm	/^c011154f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0111552	obj/kernel.asm	/^c0111552:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0111555	obj/kernel.asm	/^c0111555:	85 c0                	test   %eax,%eax$/;"	l
c0111557	obj/kernel.asm	/^c0111557:	75 19                	jne    c0111572 <sfs_close+0x42>$/;"	l
c0111559	obj/kernel.asm	/^c0111559:	68 e4 76 11 c0       	push   $0xc01176e4$/;"	l
c011155e	obj/kernel.asm	/^c011155e:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0111563	obj/kernel.asm	/^c0111563:	68 1c 02 00 00       	push   $0x21c$/;"	l
c0111568	obj/kernel.asm	/^c0111568:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c011156d	obj/kernel.asm	/^c011156d:	e8 5d ef fe ff       	call   c01004cf <__panic>$/;"	l
c0111572	obj/kernel.asm	/^c0111572:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111575	obj/kernel.asm	/^c0111575:	68 32 77 11 c0       	push   $0xc0117732$/;"	l
c011157a	obj/kernel.asm	/^c011157a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c011157d	obj/kernel.asm	/^c011157d:	e8 dc d6 ff ff       	call   c010ec5e <inode_check>$/;"	l
c0111582	obj/kernel.asm	/^c0111582:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111585	obj/kernel.asm	/^c0111585:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111588	obj/kernel.asm	/^c0111588:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011158b	obj/kernel.asm	/^c011158b:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c011158e	obj/kernel.asm	/^c011158e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111591	obj/kernel.asm	/^c0111591:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111594	obj/kernel.asm	/^c0111594:	ff d0                	call   *%eax$/;"	l
c0111596	obj/kernel.asm	/^c0111596:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111599	obj/kernel.asm	/^c0111599:	c9                   	leave  $/;"	l
c011159a	obj/kernel.asm	/^c011159a:	c3                   	ret    $/;"	l
c011159b	obj/kernel.asm	/^c011159b <sfs_io_nolock>:$/;"	l
c011159b	obj/kernel.asm	/^c011159b:	55                   	push   %ebp$/;"	l
c011159c	obj/kernel.asm	/^c011159c:	89 e5                	mov    %esp,%ebp$/;"	l
c011159e	obj/kernel.asm	/^c011159e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01115a1	obj/kernel.asm	/^c01115a1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01115a4	obj/kernel.asm	/^c01115a4:	8b 00                	mov    (%eax),%eax$/;"	l
c01115a6	obj/kernel.asm	/^c01115a6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01115a9	obj/kernel.asm	/^c01115a9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01115ac	obj/kernel.asm	/^c01115ac:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c01115b0	obj/kernel.asm	/^c01115b0:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c01115b4	obj/kernel.asm	/^c01115b4:	75 19                	jne    c01115cf <sfs_io_nolock+0x34>$/;"	l
c01115b6	obj/kernel.asm	/^c01115b6:	68 38 77 11 c0       	push   $0xc0117738$/;"	l
c01115bb	obj/kernel.asm	/^c01115bb:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c01115c0	obj/kernel.asm	/^c01115c0:	68 2b 02 00 00       	push   $0x22b$/;"	l
c01115c5	obj/kernel.asm	/^c01115c5:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c01115ca	obj/kernel.asm	/^c01115ca:	e8 00 ef fe ff       	call   c01004cf <__panic>$/;"	l
c01115cf	obj/kernel.asm	/^c01115cf:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01115d2	obj/kernel.asm	/^c01115d2:	8b 10                	mov    (%eax),%edx$/;"	l
c01115d4	obj/kernel.asm	/^c01115d4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01115d7	obj/kernel.asm	/^c01115d7:	01 d0                	add    %edx,%eax$/;"	l
c01115d9	obj/kernel.asm	/^c01115d9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01115dc	obj/kernel.asm	/^c01115dc:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01115df	obj/kernel.asm	/^c01115df:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01115e5	obj/kernel.asm	/^c01115e5:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01115e9	obj/kernel.asm	/^c01115e9:	78 12                	js     c01115fd <sfs_io_nolock+0x62>$/;"	l
c01115eb	obj/kernel.asm	/^c01115eb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01115ee	obj/kernel.asm	/^c01115ee:	3d ff ff ff 07       	cmp    $0x7ffffff,%eax$/;"	l
c01115f3	obj/kernel.asm	/^c01115f3:	77 08                	ja     c01115fd <sfs_io_nolock+0x62>$/;"	l
c01115f5	obj/kernel.asm	/^c01115f5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01115f8	obj/kernel.asm	/^c01115f8:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01115fb	obj/kernel.asm	/^c01115fb:	7e 0a                	jle    c0111607 <sfs_io_nolock+0x6c>$/;"	l
c01115fd	obj/kernel.asm	/^c01115fd:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0111602	obj/kernel.asm	/^c0111602:	e9 e7 00 00 00       	jmp    c01116ee <sfs_io_nolock+0x153>$/;"	l
c0111607	obj/kernel.asm	/^c0111607:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c011160a	obj/kernel.asm	/^c011160a:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c011160d	obj/kernel.asm	/^c011160d:	75 0a                	jne    c0111619 <sfs_io_nolock+0x7e>$/;"	l
c011160f	obj/kernel.asm	/^c011160f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111614	obj/kernel.asm	/^c0111614:	e9 d5 00 00 00       	jmp    c01116ee <sfs_io_nolock+0x153>$/;"	l
c0111619	obj/kernel.asm	/^c0111619:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011161c	obj/kernel.asm	/^c011161c:	3d 00 00 00 08       	cmp    $0x8000000,%eax$/;"	l
c0111621	obj/kernel.asm	/^c0111621:	76 07                	jbe    c011162a <sfs_io_nolock+0x8f>$/;"	l
c0111623	obj/kernel.asm	/^c0111623:	c7 45 f4 00 00 00 08 	movl   $0x8000000,-0xc(%ebp)$/;"	l
c011162a	obj/kernel.asm	/^c011162a:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c011162e	obj/kernel.asm	/^c011162e:	75 2a                	jne    c011165a <sfs_io_nolock+0xbf>$/;"	l
c0111630	obj/kernel.asm	/^c0111630:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c0111633	obj/kernel.asm	/^c0111633:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111636	obj/kernel.asm	/^c0111636:	8b 00                	mov    (%eax),%eax$/;"	l
c0111638	obj/kernel.asm	/^c0111638:	39 c2                	cmp    %eax,%edx$/;"	l
c011163a	obj/kernel.asm	/^c011163a:	72 0a                	jb     c0111646 <sfs_io_nolock+0xab>$/;"	l
c011163c	obj/kernel.asm	/^c011163c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111641	obj/kernel.asm	/^c0111641:	e9 a8 00 00 00       	jmp    c01116ee <sfs_io_nolock+0x153>$/;"	l
c0111646	obj/kernel.asm	/^c0111646:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0111649	obj/kernel.asm	/^c0111649:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011164c	obj/kernel.asm	/^c011164c:	8b 00                	mov    (%eax),%eax$/;"	l
c011164e	obj/kernel.asm	/^c011164e:	39 c2                	cmp    %eax,%edx$/;"	l
c0111650	obj/kernel.asm	/^c0111650:	76 08                	jbe    c011165a <sfs_io_nolock+0xbf>$/;"	l
c0111652	obj/kernel.asm	/^c0111652:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111655	obj/kernel.asm	/^c0111655:	8b 00                	mov    (%eax),%eax$/;"	l
c0111657	obj/kernel.asm	/^c0111657:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011165a	obj/kernel.asm	/^c011165a:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c011165e	obj/kernel.asm	/^c011165e:	74 10                	je     c0111670 <sfs_io_nolock+0xd5>$/;"	l
c0111660	obj/kernel.asm	/^c0111660:	c7 45 ec 9c 2a 11 c0 	movl   $0xc0112a9c,-0x14(%ebp)$/;"	l
c0111667	obj/kernel.asm	/^c0111667:	c7 45 e8 de 29 11 c0 	movl   $0xc01129de,-0x18(%ebp)$/;"	l
c011166e	obj/kernel.asm	/^c011166e:	eb 0e                	jmp    c011167e <sfs_io_nolock+0xe3>$/;"	l
c0111670	obj/kernel.asm	/^c0111670:	c7 45 ec ff 29 11 c0 	movl   $0xc01129ff,-0x14(%ebp)$/;"	l
c0111677	obj/kernel.asm	/^c0111677:	c7 45 e8 bd 29 11 c0 	movl   $0xc01129bd,-0x18(%ebp)$/;"	l
c011167e	obj/kernel.asm	/^c011167e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0111685	obj/kernel.asm	/^c0111685:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
c011168c	obj/kernel.asm	/^c011168c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c011168f	obj/kernel.asm	/^c011168f:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
c0111695	obj/kernel.asm	/^c0111695:	85 c0                	test   %eax,%eax$/;"	l
c0111697	obj/kernel.asm	/^c0111697:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c011169a	obj/kernel.asm	/^c011169a:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
c011169d	obj/kernel.asm	/^c011169d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01116a0	obj/kernel.asm	/^c01116a0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01116a3	obj/kernel.asm	/^c01116a3:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
c01116a9	obj/kernel.asm	/^c01116a9:	85 c0                	test   %eax,%eax$/;"	l
c01116ab	obj/kernel.asm	/^c01116ab:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c01116ae	obj/kernel.asm	/^c01116ae:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
c01116b1	obj/kernel.asm	/^c01116b1:	2b 45 dc             	sub    -0x24(%ebp),%eax$/;"	l
c01116b4	obj/kernel.asm	/^c01116b4:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01116b7	obj/kernel.asm	/^c01116b7:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01116ba	obj/kernel.asm	/^c01116ba:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01116bd	obj/kernel.asm	/^c01116bd:	89 10                	mov    %edx,(%eax)$/;"	l
c01116bf	obj/kernel.asm	/^c01116bf:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c01116c2	obj/kernel.asm	/^c01116c2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01116c5	obj/kernel.asm	/^c01116c5:	01 c2                	add    %eax,%edx$/;"	l
c01116c7	obj/kernel.asm	/^c01116c7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01116ca	obj/kernel.asm	/^c01116ca:	8b 00                	mov    (%eax),%eax$/;"	l
c01116cc	obj/kernel.asm	/^c01116cc:	8b 00                	mov    (%eax),%eax$/;"	l
c01116ce	obj/kernel.asm	/^c01116ce:	39 c2                	cmp    %eax,%edx$/;"	l
c01116d0	obj/kernel.asm	/^c01116d0:	76 19                	jbe    c01116eb <sfs_io_nolock+0x150>$/;"	l
c01116d2	obj/kernel.asm	/^c01116d2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01116d5	obj/kernel.asm	/^c01116d5:	8b 00                	mov    (%eax),%eax$/;"	l
c01116d7	obj/kernel.asm	/^c01116d7:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
c01116da	obj/kernel.asm	/^c01116da:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01116dd	obj/kernel.asm	/^c01116dd:	01 ca                	add    %ecx,%edx$/;"	l
c01116df	obj/kernel.asm	/^c01116df:	89 10                	mov    %edx,(%eax)$/;"	l
c01116e1	obj/kernel.asm	/^c01116e1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01116e4	obj/kernel.asm	/^c01116e4:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c01116eb	obj/kernel.asm	/^c01116eb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01116ee	obj/kernel.asm	/^c01116ee:	c9                   	leave  $/;"	l
c01116ef	obj/kernel.asm	/^c01116ef:	c3                   	ret    $/;"	l
c01116f0	obj/kernel.asm	/^c01116f0 <sfs_io>:$/;"	l
c01116f0	obj/kernel.asm	/^c01116f0:	55                   	push   %ebp$/;"	l
c01116f1	obj/kernel.asm	/^c01116f1:	89 e5                	mov    %esp,%ebp$/;"	l
c01116f3	obj/kernel.asm	/^c01116f3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01116f6	obj/kernel.asm	/^c01116f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01116f9	obj/kernel.asm	/^c01116f9:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01116fc	obj/kernel.asm	/^c01116fc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01116ff	obj/kernel.asm	/^c01116ff:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111703	obj/kernel.asm	/^c0111703:	74 0a                	je     c011170f <sfs_io+0x1f>$/;"	l
c0111705	obj/kernel.asm	/^c0111705:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111708	obj/kernel.asm	/^c0111708:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c011170b	obj/kernel.asm	/^c011170b:	85 c0                	test   %eax,%eax$/;"	l
c011170d	obj/kernel.asm	/^c011170d:	74 19                	je     c0111728 <sfs_io+0x38>$/;"	l
c011170f	obj/kernel.asm	/^c011170f:	68 54 77 11 c0       	push   $0xc0117754$/;"	l
c0111714	obj/kernel.asm	/^c0111714:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0111719	obj/kernel.asm	/^c0111719:	68 69 02 00 00       	push   $0x269$/;"	l
c011171e	obj/kernel.asm	/^c011171e:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0111723	obj/kernel.asm	/^c0111723:	e8 a7 ed fe ff       	call   c01004cf <__panic>$/;"	l
c0111728	obj/kernel.asm	/^c0111728:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011172b	obj/kernel.asm	/^c011172b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011172e	obj/kernel.asm	/^c011172e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111731	obj/kernel.asm	/^c0111731:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111734	obj/kernel.asm	/^c0111734:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0111738	obj/kernel.asm	/^c0111738:	74 0d                	je     c0111747 <sfs_io+0x57>$/;"	l
c011173a	obj/kernel.asm	/^c011173a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011173d	obj/kernel.asm	/^c011173d:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0111740	obj/kernel.asm	/^c0111740:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0111745	obj/kernel.asm	/^c0111745:	74 19                	je     c0111760 <sfs_io+0x70>$/;"	l
c0111747	obj/kernel.asm	/^c0111747:	68 50 75 11 c0       	push   $0xc0117550$/;"	l
c011174c	obj/kernel.asm	/^c011174c:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0111751	obj/kernel.asm	/^c0111751:	68 6a 02 00 00       	push   $0x26a$/;"	l
c0111756	obj/kernel.asm	/^c0111756:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c011175b	obj/kernel.asm	/^c011175b:	e8 6f ed fe ff       	call   c01004cf <__panic>$/;"	l
c0111760	obj/kernel.asm	/^c0111760:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111763	obj/kernel.asm	/^c0111763:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111766	obj/kernel.asm	/^c0111766:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111769	obj/kernel.asm	/^c0111769:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c011176c	obj/kernel.asm	/^c011176c:	e8 af ef ff ff       	call   c0110720 <lock_sin>$/;"	l
c0111771	obj/kernel.asm	/^c0111771:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111774	obj/kernel.asm	/^c0111774:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111777	obj/kernel.asm	/^c0111777:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c011177a	obj/kernel.asm	/^c011177a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c011177d	obj/kernel.asm	/^c011177d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111780	obj/kernel.asm	/^c0111780:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0111783	obj/kernel.asm	/^c0111783:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111786	obj/kernel.asm	/^c0111786:	8b 00                	mov    (%eax),%eax$/;"	l
c0111788	obj/kernel.asm	/^c0111788:	83 ec 08             	sub    $0x8,%esp$/;"	l
c011178b	obj/kernel.asm	/^c011178b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c011178e	obj/kernel.asm	/^c011178e:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
c0111791	obj/kernel.asm	/^c0111791:	51                   	push   %ecx$/;"	l
c0111792	obj/kernel.asm	/^c0111792:	52                   	push   %edx$/;"	l
c0111793	obj/kernel.asm	/^c0111793:	50                   	push   %eax$/;"	l
c0111794	obj/kernel.asm	/^c0111794:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0111797	obj/kernel.asm	/^c0111797:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c011179a	obj/kernel.asm	/^c011179a:	e8 fc fd ff ff       	call   c011159b <sfs_io_nolock>$/;"	l
c011179f	obj/kernel.asm	/^c011179f:	83 c4 20             	add    $0x20,%esp$/;"	l
c01117a2	obj/kernel.asm	/^c01117a2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01117a5	obj/kernel.asm	/^c01117a5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01117a8	obj/kernel.asm	/^c01117a8:	85 c0                	test   %eax,%eax$/;"	l
c01117aa	obj/kernel.asm	/^c01117aa:	74 12                	je     c01117be <sfs_io+0xce>$/;"	l
c01117ac	obj/kernel.asm	/^c01117ac:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01117af	obj/kernel.asm	/^c01117af:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01117b2	obj/kernel.asm	/^c01117b2:	50                   	push   %eax$/;"	l
c01117b3	obj/kernel.asm	/^c01117b3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01117b6	obj/kernel.asm	/^c01117b6:	e8 93 98 ff ff       	call   c010b04e <iobuf_skip>$/;"	l
c01117bb	obj/kernel.asm	/^c01117bb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01117be	obj/kernel.asm	/^c01117be:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01117c1	obj/kernel.asm	/^c01117c1:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c01117c4	obj/kernel.asm	/^c01117c4:	e8 71 ef ff ff       	call   c011073a <unlock_sin>$/;"	l
c01117c9	obj/kernel.asm	/^c01117c9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01117cc	obj/kernel.asm	/^c01117cc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01117cf	obj/kernel.asm	/^c01117cf:	c9                   	leave  $/;"	l
c01117d0	obj/kernel.asm	/^c01117d0:	c3                   	ret    $/;"	l
c01117d1	obj/kernel.asm	/^c01117d1 <sfs_read>:$/;"	l
c01117d1	obj/kernel.asm	/^c01117d1:	55                   	push   %ebp$/;"	l
c01117d2	obj/kernel.asm	/^c01117d2:	89 e5                	mov    %esp,%ebp$/;"	l
c01117d4	obj/kernel.asm	/^c01117d4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01117d7	obj/kernel.asm	/^c01117d7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01117da	obj/kernel.asm	/^c01117da:	6a 00                	push   $0x0$/;"	l
c01117dc	obj/kernel.asm	/^c01117dc:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01117df	obj/kernel.asm	/^c01117df:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01117e2	obj/kernel.asm	/^c01117e2:	e8 09 ff ff ff       	call   c01116f0 <sfs_io>$/;"	l
c01117e7	obj/kernel.asm	/^c01117e7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01117ea	obj/kernel.asm	/^c01117ea:	c9                   	leave  $/;"	l
c01117eb	obj/kernel.asm	/^c01117eb:	c3                   	ret    $/;"	l
c01117ec	obj/kernel.asm	/^c01117ec <sfs_write>:$/;"	l
c01117ec	obj/kernel.asm	/^c01117ec:	55                   	push   %ebp$/;"	l
c01117ed	obj/kernel.asm	/^c01117ed:	89 e5                	mov    %esp,%ebp$/;"	l
c01117ef	obj/kernel.asm	/^c01117ef:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01117f2	obj/kernel.asm	/^c01117f2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01117f5	obj/kernel.asm	/^c01117f5:	6a 01                	push   $0x1$/;"	l
c01117f7	obj/kernel.asm	/^c01117f7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01117fa	obj/kernel.asm	/^c01117fa:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01117fd	obj/kernel.asm	/^c01117fd:	e8 ee fe ff ff       	call   c01116f0 <sfs_io>$/;"	l
c0111802	obj/kernel.asm	/^c0111802:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111805	obj/kernel.asm	/^c0111805:	c9                   	leave  $/;"	l
c0111806	obj/kernel.asm	/^c0111806:	c3                   	ret    $/;"	l
c0111807	obj/kernel.asm	/^c0111807 <sfs_fstat>:$/;"	l
c0111807	obj/kernel.asm	/^c0111807:	55                   	push   %ebp$/;"	l
c0111808	obj/kernel.asm	/^c0111808:	89 e5                	mov    %esp,%ebp$/;"	l
c011180a	obj/kernel.asm	/^c011180a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011180d	obj/kernel.asm	/^c011180d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0111810	obj/kernel.asm	/^c0111810:	6a 10                	push   $0x10$/;"	l
c0111812	obj/kernel.asm	/^c0111812:	6a 00                	push   $0x0$/;"	l
c0111814	obj/kernel.asm	/^c0111814:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111817	obj/kernel.asm	/^c0111817:	e8 d0 17 00 00       	call   c0112fec <memset>$/;"	l
c011181c	obj/kernel.asm	/^c011181c:	83 c4 10             	add    $0x10,%esp$/;"	l
c011181f	obj/kernel.asm	/^c011181f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111822	obj/kernel.asm	/^c0111822:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111825	obj/kernel.asm	/^c0111825:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111829	obj/kernel.asm	/^c0111829:	74 17                	je     c0111842 <sfs_fstat+0x3b>$/;"	l
c011182b	obj/kernel.asm	/^c011182b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011182e	obj/kernel.asm	/^c011182e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0111831	obj/kernel.asm	/^c0111831:	85 c0                	test   %eax,%eax$/;"	l
c0111833	obj/kernel.asm	/^c0111833:	74 0d                	je     c0111842 <sfs_fstat+0x3b>$/;"	l
c0111835	obj/kernel.asm	/^c0111835:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111838	obj/kernel.asm	/^c0111838:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011183b	obj/kernel.asm	/^c011183b:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c011183e	obj/kernel.asm	/^c011183e:	85 c0                	test   %eax,%eax$/;"	l
c0111840	obj/kernel.asm	/^c0111840:	75 19                	jne    c011185b <sfs_fstat+0x54>$/;"	l
c0111842	obj/kernel.asm	/^c0111842:	68 80 77 11 c0       	push   $0xc0117780$/;"	l
c0111847	obj/kernel.asm	/^c0111847:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c011184c	obj/kernel.asm	/^c011184c:	68 8b 02 00 00       	push   $0x28b$/;"	l
c0111851	obj/kernel.asm	/^c0111851:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0111856	obj/kernel.asm	/^c0111856:	e8 74 ec fe ff       	call   c01004cf <__panic>$/;"	l
c011185b	obj/kernel.asm	/^c011185b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c011185e	obj/kernel.asm	/^c011185e:	68 d0 77 11 c0       	push   $0xc01177d0$/;"	l
c0111863	obj/kernel.asm	/^c0111863:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0111866	obj/kernel.asm	/^c0111866:	e8 f3 d3 ff ff       	call   c010ec5e <inode_check>$/;"	l
c011186b	obj/kernel.asm	/^c011186b:	83 c4 10             	add    $0x10,%esp$/;"	l
c011186e	obj/kernel.asm	/^c011186e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111871	obj/kernel.asm	/^c0111871:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0111874	obj/kernel.asm	/^c0111874:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c0111877	obj/kernel.asm	/^c0111877:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c011187a	obj/kernel.asm	/^c011187a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c011187d	obj/kernel.asm	/^c011187d:	52                   	push   %edx$/;"	l
c011187e	obj/kernel.asm	/^c011187e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111881	obj/kernel.asm	/^c0111881:	ff d0                	call   *%eax$/;"	l
c0111883	obj/kernel.asm	/^c0111883:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111886	obj/kernel.asm	/^c0111886:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111889	obj/kernel.asm	/^c0111889:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011188d	obj/kernel.asm	/^c011188d:	74 05                	je     c0111894 <sfs_fstat+0x8d>$/;"	l
c011188f	obj/kernel.asm	/^c011188f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111892	obj/kernel.asm	/^c0111892:	eb 66                	jmp    c01118fa <sfs_fstat+0xf3>$/;"	l
c0111894	obj/kernel.asm	/^c0111894:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111897	obj/kernel.asm	/^c0111897:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011189a	obj/kernel.asm	/^c011189a:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c011189e	obj/kernel.asm	/^c011189e:	74 0d                	je     c01118ad <sfs_fstat+0xa6>$/;"	l
c01118a0	obj/kernel.asm	/^c01118a0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01118a3	obj/kernel.asm	/^c01118a3:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01118a6	obj/kernel.asm	/^c01118a6:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c01118ab	obj/kernel.asm	/^c01118ab:	74 19                	je     c01118c6 <sfs_fstat+0xbf>$/;"	l
c01118ad	obj/kernel.asm	/^c01118ad:	68 50 75 11 c0       	push   $0xc0117550$/;"	l
c01118b2	obj/kernel.asm	/^c01118b2:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c01118b7	obj/kernel.asm	/^c01118b7:	68 8e 02 00 00       	push   $0x28e$/;"	l
c01118bc	obj/kernel.asm	/^c01118bc:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c01118c1	obj/kernel.asm	/^c01118c1:	e8 09 ec fe ff       	call   c01004cf <__panic>$/;"	l
c01118c6	obj/kernel.asm	/^c01118c6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01118c9	obj/kernel.asm	/^c01118c9:	8b 00                	mov    (%eax),%eax$/;"	l
c01118cb	obj/kernel.asm	/^c01118cb:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01118ce	obj/kernel.asm	/^c01118ce:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01118d1	obj/kernel.asm	/^c01118d1:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c01118d5	obj/kernel.asm	/^c01118d5:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01118d8	obj/kernel.asm	/^c01118d8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01118db	obj/kernel.asm	/^c01118db:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01118de	obj/kernel.asm	/^c01118de:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01118e1	obj/kernel.asm	/^c01118e1:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01118e4	obj/kernel.asm	/^c01118e4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01118e7	obj/kernel.asm	/^c01118e7:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01118ea	obj/kernel.asm	/^c01118ea:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01118ed	obj/kernel.asm	/^c01118ed:	8b 10                	mov    (%eax),%edx$/;"	l
c01118ef	obj/kernel.asm	/^c01118ef:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01118f2	obj/kernel.asm	/^c01118f2:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01118f5	obj/kernel.asm	/^c01118f5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01118fa	obj/kernel.asm	/^c01118fa:	c9                   	leave  $/;"	l
c01118fb	obj/kernel.asm	/^c01118fb:	c3                   	ret    $/;"	l
c01118fc	obj/kernel.asm	/^c01118fc <sfs_fsync>:$/;"	l
c01118fc	obj/kernel.asm	/^c01118fc:	55                   	push   %ebp$/;"	l
c01118fd	obj/kernel.asm	/^c01118fd:	89 e5                	mov    %esp,%ebp$/;"	l
c01118ff	obj/kernel.asm	/^c01118ff:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111902	obj/kernel.asm	/^c0111902:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111905	obj/kernel.asm	/^c0111905:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0111908	obj/kernel.asm	/^c0111908:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011190b	obj/kernel.asm	/^c011190b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011190f	obj/kernel.asm	/^c011190f:	74 0a                	je     c011191b <sfs_fsync+0x1f>$/;"	l
c0111911	obj/kernel.asm	/^c0111911:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111914	obj/kernel.asm	/^c0111914:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0111917	obj/kernel.asm	/^c0111917:	85 c0                	test   %eax,%eax$/;"	l
c0111919	obj/kernel.asm	/^c0111919:	74 19                	je     c0111934 <sfs_fsync+0x38>$/;"	l
c011191b	obj/kernel.asm	/^c011191b:	68 54 77 11 c0       	push   $0xc0117754$/;"	l
c0111920	obj/kernel.asm	/^c0111920:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0111925	obj/kernel.asm	/^c0111925:	68 9a 02 00 00       	push   $0x29a$/;"	l
c011192a	obj/kernel.asm	/^c011192a:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c011192f	obj/kernel.asm	/^c011192f:	e8 9b eb fe ff       	call   c01004cf <__panic>$/;"	l
c0111934	obj/kernel.asm	/^c0111934:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111937	obj/kernel.asm	/^c0111937:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011193a	obj/kernel.asm	/^c011193a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011193d	obj/kernel.asm	/^c011193d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111940	obj/kernel.asm	/^c0111940:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0111944	obj/kernel.asm	/^c0111944:	74 0d                	je     c0111953 <sfs_fsync+0x57>$/;"	l
c0111946	obj/kernel.asm	/^c0111946:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111949	obj/kernel.asm	/^c0111949:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011194c	obj/kernel.asm	/^c011194c:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0111951	obj/kernel.asm	/^c0111951:	74 19                	je     c011196c <sfs_fsync+0x70>$/;"	l
c0111953	obj/kernel.asm	/^c0111953:	68 50 75 11 c0       	push   $0xc0117550$/;"	l
c0111958	obj/kernel.asm	/^c0111958:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c011195d	obj/kernel.asm	/^c011195d:	68 9b 02 00 00       	push   $0x29b$/;"	l
c0111962	obj/kernel.asm	/^c0111962:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0111967	obj/kernel.asm	/^c0111967:	e8 63 eb fe ff       	call   c01004cf <__panic>$/;"	l
c011196c	obj/kernel.asm	/^c011196c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011196f	obj/kernel.asm	/^c011196f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0111972	obj/kernel.asm	/^c0111972:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0111979	obj/kernel.asm	/^c0111979:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011197c	obj/kernel.asm	/^c011197c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011197f	obj/kernel.asm	/^c011197f:	85 c0                	test   %eax,%eax$/;"	l
c0111981	obj/kernel.asm	/^c0111981:	74 62                	je     c01119e5 <sfs_fsync+0xe9>$/;"	l
c0111983	obj/kernel.asm	/^c0111983:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111986	obj/kernel.asm	/^c0111986:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0111989	obj/kernel.asm	/^c0111989:	e8 92 ed ff ff       	call   c0110720 <lock_sin>$/;"	l
c011198e	obj/kernel.asm	/^c011198e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111991	obj/kernel.asm	/^c0111991:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111994	obj/kernel.asm	/^c0111994:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111997	obj/kernel.asm	/^c0111997:	85 c0                	test   %eax,%eax$/;"	l
c0111999	obj/kernel.asm	/^c0111999:	74 3c                	je     c01119d7 <sfs_fsync+0xdb>$/;"	l
c011199b	obj/kernel.asm	/^c011199b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011199e	obj/kernel.asm	/^c011199e:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c01119a5	obj/kernel.asm	/^c01119a5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01119a8	obj/kernel.asm	/^c01119a8:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01119ab	obj/kernel.asm	/^c01119ab:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01119ae	obj/kernel.asm	/^c01119ae:	8b 00                	mov    (%eax),%eax$/;"	l
c01119b0	obj/kernel.asm	/^c01119b0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01119b3	obj/kernel.asm	/^c01119b3:	6a 00                	push   $0x0$/;"	l
c01119b5	obj/kernel.asm	/^c01119b5:	52                   	push   %edx$/;"	l
c01119b6	obj/kernel.asm	/^c01119b6:	6a 40                	push   $0x40$/;"	l
c01119b8	obj/kernel.asm	/^c01119b8:	50                   	push   %eax$/;"	l
c01119b9	obj/kernel.asm	/^c01119b9:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01119bc	obj/kernel.asm	/^c01119bc:	e8 db 10 00 00       	call   c0112a9c <sfs_wbuf>$/;"	l
c01119c1	obj/kernel.asm	/^c01119c1:	83 c4 20             	add    $0x20,%esp$/;"	l
c01119c4	obj/kernel.asm	/^c01119c4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01119c7	obj/kernel.asm	/^c01119c7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01119cb	obj/kernel.asm	/^c01119cb:	74 0a                	je     c01119d7 <sfs_fsync+0xdb>$/;"	l
c01119cd	obj/kernel.asm	/^c01119cd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01119d0	obj/kernel.asm	/^c01119d0:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c01119d7	obj/kernel.asm	/^c01119d7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01119da	obj/kernel.asm	/^c01119da:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01119dd	obj/kernel.asm	/^c01119dd:	e8 58 ed ff ff       	call   c011073a <unlock_sin>$/;"	l
c01119e2	obj/kernel.asm	/^c01119e2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01119e5	obj/kernel.asm	/^c01119e5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01119e8	obj/kernel.asm	/^c01119e8:	c9                   	leave  $/;"	l
c01119e9	obj/kernel.asm	/^c01119e9:	c3                   	ret    $/;"	l
c01119ea	obj/kernel.asm	/^c01119ea <sfs_namefile>:$/;"	l
c01119ea	obj/kernel.asm	/^c01119ea:	55                   	push   %ebp$/;"	l
c01119eb	obj/kernel.asm	/^c01119eb:	89 e5                	mov    %esp,%ebp$/;"	l
c01119ed	obj/kernel.asm	/^c01119ed:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01119f0	obj/kernel.asm	/^c01119f0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01119f3	obj/kernel.asm	/^c01119f3:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01119f6	obj/kernel.asm	/^c01119f6:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01119f9	obj/kernel.asm	/^c01119f9:	76 19                	jbe    c0111a14 <sfs_namefile+0x2a>$/;"	l
c01119fb	obj/kernel.asm	/^c01119fb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01119fe	obj/kernel.asm	/^c01119fe:	68 04 01 00 00       	push   $0x104$/;"	l
c0111a03	obj/kernel.asm	/^c0111a03:	e8 97 5a ff ff       	call   c010749f <kmalloc>$/;"	l
c0111a08	obj/kernel.asm	/^c0111a08:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111a0b	obj/kernel.asm	/^c0111a0b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0111a0e	obj/kernel.asm	/^c0111a0e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0111a12	obj/kernel.asm	/^c0111a12:	75 0a                	jne    c0111a1e <sfs_namefile+0x34>$/;"	l
c0111a14	obj/kernel.asm	/^c0111a14:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0111a19	obj/kernel.asm	/^c0111a19:	e9 8c 02 00 00       	jmp    c0111caa <sfs_namefile+0x2c0>$/;"	l
c0111a1e	obj/kernel.asm	/^c0111a1e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111a21	obj/kernel.asm	/^c0111a21:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0111a24	obj/kernel.asm	/^c0111a24:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0111a27	obj/kernel.asm	/^c0111a27:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0111a2b	obj/kernel.asm	/^c0111a2b:	74 0a                	je     c0111a37 <sfs_namefile+0x4d>$/;"	l
c0111a2d	obj/kernel.asm	/^c0111a2d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111a30	obj/kernel.asm	/^c0111a30:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0111a33	obj/kernel.asm	/^c0111a33:	85 c0                	test   %eax,%eax$/;"	l
c0111a35	obj/kernel.asm	/^c0111a35:	74 19                	je     c0111a50 <sfs_namefile+0x66>$/;"	l
c0111a37	obj/kernel.asm	/^c0111a37:	68 54 77 11 c0       	push   $0xc0117754$/;"	l
c0111a3c	obj/kernel.asm	/^c0111a3c:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0111a41	obj/kernel.asm	/^c0111a41:	68 b7 02 00 00       	push   $0x2b7$/;"	l
c0111a46	obj/kernel.asm	/^c0111a46:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0111a4b	obj/kernel.asm	/^c0111a4b:	e8 7f ea fe ff       	call   c01004cf <__panic>$/;"	l
c0111a50	obj/kernel.asm	/^c0111a50:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111a53	obj/kernel.asm	/^c0111a53:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0111a56	obj/kernel.asm	/^c0111a56:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111a59	obj/kernel.asm	/^c0111a59:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0111a5c	obj/kernel.asm	/^c0111a5c:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0111a60	obj/kernel.asm	/^c0111a60:	74 0d                	je     c0111a6f <sfs_namefile+0x85>$/;"	l
c0111a62	obj/kernel.asm	/^c0111a62:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111a65	obj/kernel.asm	/^c0111a65:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0111a68	obj/kernel.asm	/^c0111a68:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0111a6d	obj/kernel.asm	/^c0111a6d:	74 19                	je     c0111a88 <sfs_namefile+0x9e>$/;"	l
c0111a6f	obj/kernel.asm	/^c0111a6f:	68 50 75 11 c0       	push   $0xc0117550$/;"	l
c0111a74	obj/kernel.asm	/^c0111a74:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0111a79	obj/kernel.asm	/^c0111a79:	68 b8 02 00 00       	push   $0x2b8$/;"	l
c0111a7e	obj/kernel.asm	/^c0111a7e:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0111a83	obj/kernel.asm	/^c0111a83:	e8 47 ea fe ff       	call   c01004cf <__panic>$/;"	l
c0111a88	obj/kernel.asm	/^c0111a88:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111a8b	obj/kernel.asm	/^c0111a8b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111a8e	obj/kernel.asm	/^c0111a8e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111a91	obj/kernel.asm	/^c0111a91:	8b 10                	mov    (%eax),%edx$/;"	l
c0111a93	obj/kernel.asm	/^c0111a93:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111a96	obj/kernel.asm	/^c0111a96:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0111a99	obj/kernel.asm	/^c0111a99:	01 d0                	add    %edx,%eax$/;"	l
c0111a9b	obj/kernel.asm	/^c0111a9b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111a9e	obj/kernel.asm	/^c0111a9e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111aa1	obj/kernel.asm	/^c0111aa1:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0111aa4	obj/kernel.asm	/^c0111aa4:	83 e8 02             	sub    $0x2,%eax$/;"	l
c0111aa7	obj/kernel.asm	/^c0111aa7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111aaa	obj/kernel.asm	/^c0111aaa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111aad	obj/kernel.asm	/^c0111aad:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111ab0	obj/kernel.asm	/^c0111ab0:	e8 d7 cf ff ff       	call   c010ea8c <inode_ref_inc>$/;"	l
c0111ab5	obj/kernel.asm	/^c0111ab5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111ab8	obj/kernel.asm	/^c0111ab8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111abb	obj/kernel.asm	/^c0111abb:	6a 00                	push   $0x0$/;"	l
c0111abd	obj/kernel.asm	/^c0111abd:	8d 45 c8             	lea    -0x38(%ebp),%eax$/;"	l
c0111ac0	obj/kernel.asm	/^c0111ac0:	50                   	push   %eax$/;"	l
c0111ac1	obj/kernel.asm	/^c0111ac1:	68 d8 77 11 c0       	push   $0xc01177d8$/;"	l
c0111ac6	obj/kernel.asm	/^c0111ac6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0111ac9	obj/kernel.asm	/^c0111ac9:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0111acc	obj/kernel.asm	/^c0111acc:	e8 c3 f9 ff ff       	call   c0111494 <sfs_lookup_once>$/;"	l
c0111ad1	obj/kernel.asm	/^c0111ad1:	83 c4 20             	add    $0x20,%esp$/;"	l
c0111ad4	obj/kernel.asm	/^c0111ad4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111ad7	obj/kernel.asm	/^c0111ad7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111adb	obj/kernel.asm	/^c0111adb:	74 05                	je     c0111ae2 <sfs_namefile+0xf8>$/;"	l
c0111add	obj/kernel.asm	/^c0111add:	e9 a9 01 00 00       	jmp    c0111c8b <sfs_namefile+0x2a1>$/;"	l
c0111ae2	obj/kernel.asm	/^c0111ae2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111ae5	obj/kernel.asm	/^c0111ae5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0111ae8	obj/kernel.asm	/^c0111ae8:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0111aeb	obj/kernel.asm	/^c0111aeb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111aee	obj/kernel.asm	/^c0111aee:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111af1	obj/kernel.asm	/^c0111af1:	e8 b0 cf ff ff       	call   c010eaa6 <inode_ref_dec>$/;"	l
c0111af6	obj/kernel.asm	/^c0111af6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111af9	obj/kernel.asm	/^c0111af9:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0111afc	obj/kernel.asm	/^c0111afc:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c0111aff	obj/kernel.asm	/^c0111aff:	75 77                	jne    c0111b78 <sfs_namefile+0x18e>$/;"	l
c0111b01	obj/kernel.asm	/^c0111b01:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111b04	obj/kernel.asm	/^c0111b04:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111b07	obj/kernel.asm	/^c0111b07:	e8 9a cf ff ff       	call   c010eaa6 <inode_ref_dec>$/;"	l
c0111b0c	obj/kernel.asm	/^c0111b0c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111b0f	obj/kernel.asm	/^c0111b0f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111b12	obj/kernel.asm	/^c0111b12:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0111b15	obj/kernel.asm	/^c0111b15:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
c0111b18	obj/kernel.asm	/^c0111b18:	83 e8 02             	sub    $0x2,%eax$/;"	l
c0111b1b	obj/kernel.asm	/^c0111b1b:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0111b1e	obj/kernel.asm	/^c0111b1e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111b21	obj/kernel.asm	/^c0111b21:	8b 00                	mov    (%eax),%eax$/;"	l
c0111b23	obj/kernel.asm	/^c0111b23:	83 c0 01             	add    $0x1,%eax$/;"	l
c0111b26	obj/kernel.asm	/^c0111b26:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0111b29	obj/kernel.asm	/^c0111b29:	ff 75 cc             	pushl  -0x34(%ebp)$/;"	l
c0111b2c	obj/kernel.asm	/^c0111b2c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0111b2f	obj/kernel.asm	/^c0111b2f:	50                   	push   %eax$/;"	l
c0111b30	obj/kernel.asm	/^c0111b30:	e8 f7 14 00 00       	call   c011302c <memmove>$/;"	l
c0111b35	obj/kernel.asm	/^c0111b35:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111b38	obj/kernel.asm	/^c0111b38:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111b3b	obj/kernel.asm	/^c0111b3b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111b3e	obj/kernel.asm	/^c0111b3e:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0111b41	obj/kernel.asm	/^c0111b41:	c6 00 2f             	movb   $0x2f,(%eax)$/;"	l
c0111b44	obj/kernel.asm	/^c0111b44:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0111b47	obj/kernel.asm	/^c0111b47:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0111b4a	obj/kernel.asm	/^c0111b4a:	01 d0                	add    %edx,%eax$/;"	l
c0111b4c	obj/kernel.asm	/^c0111b4c:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0111b4f	obj/kernel.asm	/^c0111b4f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111b52	obj/kernel.asm	/^c0111b52:	ff 75 cc             	pushl  -0x34(%ebp)$/;"	l
c0111b55	obj/kernel.asm	/^c0111b55:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111b58	obj/kernel.asm	/^c0111b58:	e8 f1 94 ff ff       	call   c010b04e <iobuf_skip>$/;"	l
c0111b5d	obj/kernel.asm	/^c0111b5d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111b60	obj/kernel.asm	/^c0111b60:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111b63	obj/kernel.asm	/^c0111b63:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0111b66	obj/kernel.asm	/^c0111b66:	e8 4c 59 ff ff       	call   c01074b7 <kfree>$/;"	l
c0111b6b	obj/kernel.asm	/^c0111b6b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111b6e	obj/kernel.asm	/^c0111b6e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111b73	obj/kernel.asm	/^c0111b73:	e9 32 01 00 00       	jmp    c0111caa <sfs_namefile+0x2c0>$/;"	l
c0111b78	obj/kernel.asm	/^c0111b78:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0111b7b	obj/kernel.asm	/^c0111b7b:	89 45 08             	mov    %eax,0x8(%ebp)$/;"	l
c0111b7e	obj/kernel.asm	/^c0111b7e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111b81	obj/kernel.asm	/^c0111b81:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0111b84	obj/kernel.asm	/^c0111b84:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c0111b88	obj/kernel.asm	/^c0111b88:	74 0d                	je     c0111b97 <sfs_namefile+0x1ad>$/;"	l
c0111b8a	obj/kernel.asm	/^c0111b8a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0111b8d	obj/kernel.asm	/^c0111b8d:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0111b90	obj/kernel.asm	/^c0111b90:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0111b95	obj/kernel.asm	/^c0111b95:	74 19                	je     c0111bb0 <sfs_namefile+0x1c6>$/;"	l
c0111b97	obj/kernel.asm	/^c0111b97:	68 50 75 11 c0       	push   $0xc0117550$/;"	l
c0111b9c	obj/kernel.asm	/^c0111b9c:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0111ba1	obj/kernel.asm	/^c0111ba1:	68 cb 02 00 00       	push   $0x2cb$/;"	l
c0111ba6	obj/kernel.asm	/^c0111ba6:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0111bab	obj/kernel.asm	/^c0111bab:	e8 1f e9 fe ff       	call   c01004cf <__panic>$/;"	l
c0111bb0	obj/kernel.asm	/^c0111bb0:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0111bb3	obj/kernel.asm	/^c0111bb3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111bb6	obj/kernel.asm	/^c0111bb6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111bb9	obj/kernel.asm	/^c0111bb9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0111bbc	obj/kernel.asm	/^c0111bbc:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0111bbf	obj/kernel.asm	/^c0111bbf:	74 0f                	je     c0111bd0 <sfs_namefile+0x1e6>$/;"	l
c0111bc1	obj/kernel.asm	/^c0111bc1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111bc4	obj/kernel.asm	/^c0111bc4:	8b 00                	mov    (%eax),%eax$/;"	l
c0111bc6	obj/kernel.asm	/^c0111bc6:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0111bca	obj/kernel.asm	/^c0111bca:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c0111bce	obj/kernel.asm	/^c0111bce:	74 19                	je     c0111be9 <sfs_namefile+0x1ff>$/;"	l
c0111bd0	obj/kernel.asm	/^c0111bd0:	68 dc 77 11 c0       	push   $0xc01177dc$/;"	l
c0111bd5	obj/kernel.asm	/^c0111bd5:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0111bda	obj/kernel.asm	/^c0111bda:	68 cc 02 00 00       	push   $0x2cc$/;"	l
c0111bdf	obj/kernel.asm	/^c0111bdf:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0111be4	obj/kernel.asm	/^c0111be4:	e8 e6 e8 fe ff       	call   c01004cf <__panic>$/;"	l
c0111be9	obj/kernel.asm	/^c0111be9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111bec	obj/kernel.asm	/^c0111bec:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0111bef	obj/kernel.asm	/^c0111bef:	e8 2c eb ff ff       	call   c0110720 <lock_sin>$/;"	l
c0111bf4	obj/kernel.asm	/^c0111bf4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111bf7	obj/kernel.asm	/^c0111bf7:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0111bfa	obj/kernel.asm	/^c0111bfa:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
c0111bfd	obj/kernel.asm	/^c0111bfd:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0111c00	obj/kernel.asm	/^c0111c00:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0111c03	obj/kernel.asm	/^c0111c03:	e8 2c f8 ff ff       	call   c0111434 <sfs_dirent_findino_nolock>$/;"	l
c0111c08	obj/kernel.asm	/^c0111c08:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111c0b	obj/kernel.asm	/^c0111c0b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111c0e	obj/kernel.asm	/^c0111c0e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111c11	obj/kernel.asm	/^c0111c11:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0111c14	obj/kernel.asm	/^c0111c14:	e8 21 eb ff ff       	call   c011073a <unlock_sin>$/;"	l
c0111c19	obj/kernel.asm	/^c0111c19:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111c1c	obj/kernel.asm	/^c0111c1c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111c20	obj/kernel.asm	/^c0111c20:	74 03                	je     c0111c25 <sfs_namefile+0x23b>$/;"	l
c0111c22	obj/kernel.asm	/^c0111c22:	90                   	nop$/;"	l
c0111c23	obj/kernel.asm	/^c0111c23:	eb 66                	jmp    c0111c8b <sfs_namefile+0x2a1>$/;"	l
c0111c25	obj/kernel.asm	/^c0111c25:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111c28	obj/kernel.asm	/^c0111c28:	83 c0 04             	add    $0x4,%eax$/;"	l
c0111c2b	obj/kernel.asm	/^c0111c2b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111c2e	obj/kernel.asm	/^c0111c2e:	50                   	push   %eax$/;"	l
c0111c2f	obj/kernel.asm	/^c0111c2f:	e8 5e 10 00 00       	call   c0112c92 <strlen>$/;"	l
c0111c34	obj/kernel.asm	/^c0111c34:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111c37	obj/kernel.asm	/^c0111c37:	83 c0 01             	add    $0x1,%eax$/;"	l
c0111c3a	obj/kernel.asm	/^c0111c3a:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0111c3d	obj/kernel.asm	/^c0111c3d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0111c40	obj/kernel.asm	/^c0111c40:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c0111c43	obj/kernel.asm	/^c0111c43:	76 09                	jbe    c0111c4e <sfs_namefile+0x264>$/;"	l
c0111c45	obj/kernel.asm	/^c0111c45:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c0111c4c	obj/kernel.asm	/^c0111c4c:	eb 3d                	jmp    c0111c8b <sfs_namefile+0x2a1>$/;"	l
c0111c4e	obj/kernel.asm	/^c0111c4e:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0111c51	obj/kernel.asm	/^c0111c51:	29 45 e8             	sub    %eax,-0x18(%ebp)$/;"	l
c0111c54	obj/kernel.asm	/^c0111c54:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0111c57	obj/kernel.asm	/^c0111c57:	f7 d8                	neg    %eax$/;"	l
c0111c59	obj/kernel.asm	/^c0111c59:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
c0111c5c	obj/kernel.asm	/^c0111c5c:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0111c5f	obj/kernel.asm	/^c0111c5f:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0111c62	obj/kernel.asm	/^c0111c62:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111c65	obj/kernel.asm	/^c0111c65:	83 c0 04             	add    $0x4,%eax$/;"	l
c0111c68	obj/kernel.asm	/^c0111c68:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0111c6b	obj/kernel.asm	/^c0111c6b:	52                   	push   %edx$/;"	l
c0111c6c	obj/kernel.asm	/^c0111c6c:	50                   	push   %eax$/;"	l
c0111c6d	obj/kernel.asm	/^c0111c6d:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0111c70	obj/kernel.asm	/^c0111c70:	e8 5a 14 00 00       	call   c01130cf <memcpy>$/;"	l
c0111c75	obj/kernel.asm	/^c0111c75:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111c78	obj/kernel.asm	/^c0111c78:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0111c7b	obj/kernel.asm	/^c0111c7b:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0111c7e	obj/kernel.asm	/^c0111c7e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111c81	obj/kernel.asm	/^c0111c81:	01 d0                	add    %edx,%eax$/;"	l
c0111c83	obj/kernel.asm	/^c0111c83:	c6 00 2f             	movb   $0x2f,(%eax)$/;"	l
c0111c86	obj/kernel.asm	/^c0111c86:	e9 2d fe ff ff       	jmp    c0111ab8 <sfs_namefile+0xce>$/;"	l
c0111c8b	obj/kernel.asm	/^c0111c8b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111c8e	obj/kernel.asm	/^c0111c8e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111c91	obj/kernel.asm	/^c0111c91:	e8 10 ce ff ff       	call   c010eaa6 <inode_ref_dec>$/;"	l
c0111c96	obj/kernel.asm	/^c0111c96:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111c99	obj/kernel.asm	/^c0111c99:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111c9c	obj/kernel.asm	/^c0111c9c:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0111c9f	obj/kernel.asm	/^c0111c9f:	e8 13 58 ff ff       	call   c01074b7 <kfree>$/;"	l
c0111ca4	obj/kernel.asm	/^c0111ca4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111ca7	obj/kernel.asm	/^c0111ca7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111caa	obj/kernel.asm	/^c0111caa:	c9                   	leave  $/;"	l
c0111cab	obj/kernel.asm	/^c0111cab:	c3                   	ret    $/;"	l
c0111cac	obj/kernel.asm	/^c0111cac <sfs_getdirentry_sub_nolock>:$/;"	l
c0111cac	obj/kernel.asm	/^c0111cac:	55                   	push   %ebp$/;"	l
c0111cad	obj/kernel.asm	/^c0111cad:	89 e5                	mov    %esp,%ebp$/;"	l
c0111caf	obj/kernel.asm	/^c0111caf:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0111cb2	obj/kernel.asm	/^c0111cb2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111cb5	obj/kernel.asm	/^c0111cb5:	8b 00                	mov    (%eax),%eax$/;"	l
c0111cb7	obj/kernel.asm	/^c0111cb7:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111cba	obj/kernel.asm	/^c0111cba:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111cbd	obj/kernel.asm	/^c0111cbd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0111cc4	obj/kernel.asm	/^c0111cc4:	eb 40                	jmp    c0111d06 <sfs_getdirentry_sub_nolock+0x5a>$/;"	l
c0111cc6	obj/kernel.asm	/^c0111cc6:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0111cc9	obj/kernel.asm	/^c0111cc9:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0111ccc	obj/kernel.asm	/^c0111ccc:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111ccf	obj/kernel.asm	/^c0111ccf:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111cd2	obj/kernel.asm	/^c0111cd2:	e8 74 f5 ff ff       	call   c011124b <sfs_dirent_read_nolock>$/;"	l
c0111cd7	obj/kernel.asm	/^c0111cd7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111cda	obj/kernel.asm	/^c0111cda:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111cdd	obj/kernel.asm	/^c0111cdd:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0111ce1	obj/kernel.asm	/^c0111ce1:	74 05                	je     c0111ce8 <sfs_getdirentry_sub_nolock+0x3c>$/;"	l
c0111ce3	obj/kernel.asm	/^c0111ce3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111ce6	obj/kernel.asm	/^c0111ce6:	eb 2b                	jmp    c0111d13 <sfs_getdirentry_sub_nolock+0x67>$/;"	l
c0111ce8	obj/kernel.asm	/^c0111ce8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0111ceb	obj/kernel.asm	/^c0111ceb:	8b 00                	mov    (%eax),%eax$/;"	l
c0111ced	obj/kernel.asm	/^c0111ced:	85 c0                	test   %eax,%eax$/;"	l
c0111cef	obj/kernel.asm	/^c0111cef:	74 11                	je     c0111d02 <sfs_getdirentry_sub_nolock+0x56>$/;"	l
c0111cf1	obj/kernel.asm	/^c0111cf1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0111cf5	obj/kernel.asm	/^c0111cf5:	75 07                	jne    c0111cfe <sfs_getdirentry_sub_nolock+0x52>$/;"	l
c0111cf7	obj/kernel.asm	/^c0111cf7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111cfc	obj/kernel.asm	/^c0111cfc:	eb 15                	jmp    c0111d13 <sfs_getdirentry_sub_nolock+0x67>$/;"	l
c0111cfe	obj/kernel.asm	/^c0111cfe:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0111d02	obj/kernel.asm	/^c0111d02:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0111d06	obj/kernel.asm	/^c0111d06:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111d09	obj/kernel.asm	/^c0111d09:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0111d0c	obj/kernel.asm	/^c0111d0c:	7c b8                	jl     c0111cc6 <sfs_getdirentry_sub_nolock+0x1a>$/;"	l
c0111d0e	obj/kernel.asm	/^c0111d0e:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c0111d13	obj/kernel.asm	/^c0111d13:	c9                   	leave  $/;"	l
c0111d14	obj/kernel.asm	/^c0111d14:	c3                   	ret    $/;"	l
c0111d15	obj/kernel.asm	/^c0111d15 <sfs_getdirentry>:$/;"	l
c0111d15	obj/kernel.asm	/^c0111d15:	55                   	push   %ebp$/;"	l
c0111d16	obj/kernel.asm	/^c0111d16:	89 e5                	mov    %esp,%ebp$/;"	l
c0111d18	obj/kernel.asm	/^c0111d18:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111d1b	obj/kernel.asm	/^c0111d1b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111d1e	obj/kernel.asm	/^c0111d1e:	68 04 01 00 00       	push   $0x104$/;"	l
c0111d23	obj/kernel.asm	/^c0111d23:	e8 77 57 ff ff       	call   c010749f <kmalloc>$/;"	l
c0111d28	obj/kernel.asm	/^c0111d28:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111d2b	obj/kernel.asm	/^c0111d2b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111d2e	obj/kernel.asm	/^c0111d2e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111d32	obj/kernel.asm	/^c0111d32:	75 0a                	jne    c0111d3e <sfs_getdirentry+0x29>$/;"	l
c0111d34	obj/kernel.asm	/^c0111d34:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0111d39	obj/kernel.asm	/^c0111d39:	e9 49 01 00 00       	jmp    c0111e87 <sfs_getdirentry+0x172>$/;"	l
c0111d3e	obj/kernel.asm	/^c0111d3e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111d41	obj/kernel.asm	/^c0111d41:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0111d44	obj/kernel.asm	/^c0111d44:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111d47	obj/kernel.asm	/^c0111d47:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0111d4b	obj/kernel.asm	/^c0111d4b:	74 0a                	je     c0111d57 <sfs_getdirentry+0x42>$/;"	l
c0111d4d	obj/kernel.asm	/^c0111d4d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111d50	obj/kernel.asm	/^c0111d50:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0111d53	obj/kernel.asm	/^c0111d53:	85 c0                	test   %eax,%eax$/;"	l
c0111d55	obj/kernel.asm	/^c0111d55:	74 19                	je     c0111d70 <sfs_getdirentry+0x5b>$/;"	l
c0111d57	obj/kernel.asm	/^c0111d57:	68 54 77 11 c0       	push   $0xc0117754$/;"	l
c0111d5c	obj/kernel.asm	/^c0111d5c:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0111d61	obj/kernel.asm	/^c0111d61:	68 0d 03 00 00       	push   $0x30d$/;"	l
c0111d66	obj/kernel.asm	/^c0111d66:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0111d6b	obj/kernel.asm	/^c0111d6b:	e8 5f e7 fe ff       	call   c01004cf <__panic>$/;"	l
c0111d70	obj/kernel.asm	/^c0111d70:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111d73	obj/kernel.asm	/^c0111d73:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111d76	obj/kernel.asm	/^c0111d76:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111d79	obj/kernel.asm	/^c0111d79:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0111d7c	obj/kernel.asm	/^c0111d7c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0111d80	obj/kernel.asm	/^c0111d80:	74 0d                	je     c0111d8f <sfs_getdirentry+0x7a>$/;"	l
c0111d82	obj/kernel.asm	/^c0111d82:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111d85	obj/kernel.asm	/^c0111d85:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0111d88	obj/kernel.asm	/^c0111d88:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0111d8d	obj/kernel.asm	/^c0111d8d:	74 19                	je     c0111da8 <sfs_getdirentry+0x93>$/;"	l
c0111d8f	obj/kernel.asm	/^c0111d8f:	68 50 75 11 c0       	push   $0xc0117550$/;"	l
c0111d94	obj/kernel.asm	/^c0111d94:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0111d99	obj/kernel.asm	/^c0111d99:	68 0e 03 00 00       	push   $0x30e$/;"	l
c0111d9e	obj/kernel.asm	/^c0111d9e:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0111da3	obj/kernel.asm	/^c0111da3:	e8 27 e7 fe ff       	call   c01004cf <__panic>$/;"	l
c0111da8	obj/kernel.asm	/^c0111da8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111dab	obj/kernel.asm	/^c0111dab:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0111dae	obj/kernel.asm	/^c0111dae:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111db1	obj/kernel.asm	/^c0111db1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0111db4	obj/kernel.asm	/^c0111db4:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0111db7	obj/kernel.asm	/^c0111db7:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0111dbb	obj/kernel.asm	/^c0111dbb:	78 0a                	js     c0111dc7 <sfs_getdirentry+0xb2>$/;"	l
c0111dbd	obj/kernel.asm	/^c0111dbd:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0111dc0	obj/kernel.asm	/^c0111dc0:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0111dc3	obj/kernel.asm	/^c0111dc3:	85 c0                	test   %eax,%eax$/;"	l
c0111dc5	obj/kernel.asm	/^c0111dc5:	74 18                	je     c0111ddf <sfs_getdirentry+0xca>$/;"	l
c0111dc7	obj/kernel.asm	/^c0111dc7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111dca	obj/kernel.asm	/^c0111dca:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0111dcd	obj/kernel.asm	/^c0111dcd:	e8 e5 56 ff ff       	call   c01074b7 <kfree>$/;"	l
c0111dd2	obj/kernel.asm	/^c0111dd2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111dd5	obj/kernel.asm	/^c0111dd5:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0111dda	obj/kernel.asm	/^c0111dda:	e9 a8 00 00 00       	jmp    c0111e87 <sfs_getdirentry+0x172>$/;"	l
c0111ddf	obj/kernel.asm	/^c0111ddf:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0111de2	obj/kernel.asm	/^c0111de2:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0111de5	obj/kernel.asm	/^c0111de5:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0111de8	obj/kernel.asm	/^c0111de8:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0111deb	obj/kernel.asm	/^c0111deb:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111dee	obj/kernel.asm	/^c0111dee:	8b 00                	mov    (%eax),%eax$/;"	l
c0111df0	obj/kernel.asm	/^c0111df0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111df3	obj/kernel.asm	/^c0111df3:	39 c2                	cmp    %eax,%edx$/;"	l
c0111df5	obj/kernel.asm	/^c0111df5:	76 15                	jbe    c0111e0c <sfs_getdirentry+0xf7>$/;"	l
c0111df7	obj/kernel.asm	/^c0111df7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111dfa	obj/kernel.asm	/^c0111dfa:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0111dfd	obj/kernel.asm	/^c0111dfd:	e8 b5 56 ff ff       	call   c01074b7 <kfree>$/;"	l
c0111e02	obj/kernel.asm	/^c0111e02:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111e05	obj/kernel.asm	/^c0111e05:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c0111e0a	obj/kernel.asm	/^c0111e0a:	eb 7b                	jmp    c0111e87 <sfs_getdirentry+0x172>$/;"	l
c0111e0c	obj/kernel.asm	/^c0111e0c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111e0f	obj/kernel.asm	/^c0111e0f:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0111e12	obj/kernel.asm	/^c0111e12:	e8 09 e9 ff ff       	call   c0110720 <lock_sin>$/;"	l
c0111e17	obj/kernel.asm	/^c0111e17:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111e1a	obj/kernel.asm	/^c0111e1a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0111e1d	obj/kernel.asm	/^c0111e1d:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c0111e20	obj/kernel.asm	/^c0111e20:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0111e23	obj/kernel.asm	/^c0111e23:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0111e26	obj/kernel.asm	/^c0111e26:	e8 81 fe ff ff       	call   c0111cac <sfs_getdirentry_sub_nolock>$/;"	l
c0111e2b	obj/kernel.asm	/^c0111e2b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111e2e	obj/kernel.asm	/^c0111e2e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111e31	obj/kernel.asm	/^c0111e31:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111e35	obj/kernel.asm	/^c0111e35:	74 10                	je     c0111e47 <sfs_getdirentry+0x132>$/;"	l
c0111e37	obj/kernel.asm	/^c0111e37:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111e3a	obj/kernel.asm	/^c0111e3a:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0111e3d	obj/kernel.asm	/^c0111e3d:	e8 f8 e8 ff ff       	call   c011073a <unlock_sin>$/;"	l
c0111e42	obj/kernel.asm	/^c0111e42:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111e45	obj/kernel.asm	/^c0111e45:	eb 2f                	jmp    c0111e76 <sfs_getdirentry+0x161>$/;"	l
c0111e47	obj/kernel.asm	/^c0111e47:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111e4a	obj/kernel.asm	/^c0111e4a:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0111e4d	obj/kernel.asm	/^c0111e4d:	e8 e8 e8 ff ff       	call   c011073a <unlock_sin>$/;"	l
c0111e52	obj/kernel.asm	/^c0111e52:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111e55	obj/kernel.asm	/^c0111e55:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111e58	obj/kernel.asm	/^c0111e58:	83 c0 04             	add    $0x4,%eax$/;"	l
c0111e5b	obj/kernel.asm	/^c0111e5b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111e5e	obj/kernel.asm	/^c0111e5e:	6a 00                	push   $0x0$/;"	l
c0111e60	obj/kernel.asm	/^c0111e60:	6a 01                	push   $0x1$/;"	l
c0111e62	obj/kernel.asm	/^c0111e62:	68 00 01 00 00       	push   $0x100$/;"	l
c0111e67	obj/kernel.asm	/^c0111e67:	50                   	push   %eax$/;"	l
c0111e68	obj/kernel.asm	/^c0111e68:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111e6b	obj/kernel.asm	/^c0111e6b:	e8 d6 90 ff ff       	call   c010af46 <iobuf_move>$/;"	l
c0111e70	obj/kernel.asm	/^c0111e70:	83 c4 20             	add    $0x20,%esp$/;"	l
c0111e73	obj/kernel.asm	/^c0111e73:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111e76	obj/kernel.asm	/^c0111e76:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111e79	obj/kernel.asm	/^c0111e79:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0111e7c	obj/kernel.asm	/^c0111e7c:	e8 36 56 ff ff       	call   c01074b7 <kfree>$/;"	l
c0111e81	obj/kernel.asm	/^c0111e81:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111e84	obj/kernel.asm	/^c0111e84:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111e87	obj/kernel.asm	/^c0111e87:	c9                   	leave  $/;"	l
c0111e88	obj/kernel.asm	/^c0111e88:	c3                   	ret    $/;"	l
c0111e89	obj/kernel.asm	/^c0111e89 <sfs_reclaim>:$/;"	l
c0111e89	obj/kernel.asm	/^c0111e89:	55                   	push   %ebp$/;"	l
c0111e8a	obj/kernel.asm	/^c0111e8a:	89 e5                	mov    %esp,%ebp$/;"	l
c0111e8c	obj/kernel.asm	/^c0111e8c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111e8f	obj/kernel.asm	/^c0111e8f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111e92	obj/kernel.asm	/^c0111e92:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0111e95	obj/kernel.asm	/^c0111e95:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111e98	obj/kernel.asm	/^c0111e98:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111e9c	obj/kernel.asm	/^c0111e9c:	74 0a                	je     c0111ea8 <sfs_reclaim+0x1f>$/;"	l
c0111e9e	obj/kernel.asm	/^c0111e9e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111ea1	obj/kernel.asm	/^c0111ea1:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0111ea4	obj/kernel.asm	/^c0111ea4:	85 c0                	test   %eax,%eax$/;"	l
c0111ea6	obj/kernel.asm	/^c0111ea6:	74 19                	je     c0111ec1 <sfs_reclaim+0x38>$/;"	l
c0111ea8	obj/kernel.asm	/^c0111ea8:	68 54 77 11 c0       	push   $0xc0117754$/;"	l
c0111ead	obj/kernel.asm	/^c0111ead:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0111eb2	obj/kernel.asm	/^c0111eb2:	68 2b 03 00 00       	push   $0x32b$/;"	l
c0111eb7	obj/kernel.asm	/^c0111eb7:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0111ebc	obj/kernel.asm	/^c0111ebc:	e8 0e e6 fe ff       	call   c01004cf <__panic>$/;"	l
c0111ec1	obj/kernel.asm	/^c0111ec1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111ec4	obj/kernel.asm	/^c0111ec4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111ec7	obj/kernel.asm	/^c0111ec7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111eca	obj/kernel.asm	/^c0111eca:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111ecd	obj/kernel.asm	/^c0111ecd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0111ed1	obj/kernel.asm	/^c0111ed1:	74 0d                	je     c0111ee0 <sfs_reclaim+0x57>$/;"	l
c0111ed3	obj/kernel.asm	/^c0111ed3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111ed6	obj/kernel.asm	/^c0111ed6:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0111ed9	obj/kernel.asm	/^c0111ed9:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0111ede	obj/kernel.asm	/^c0111ede:	74 19                	je     c0111ef9 <sfs_reclaim+0x70>$/;"	l
c0111ee0	obj/kernel.asm	/^c0111ee0:	68 50 75 11 c0       	push   $0xc0117550$/;"	l
c0111ee5	obj/kernel.asm	/^c0111ee5:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0111eea	obj/kernel.asm	/^c0111eea:	68 2c 03 00 00       	push   $0x32c$/;"	l
c0111eef	obj/kernel.asm	/^c0111eef:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0111ef4	obj/kernel.asm	/^c0111ef4:	e8 d6 e5 fe ff       	call   c01004cf <__panic>$/;"	l
c0111ef9	obj/kernel.asm	/^c0111ef9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111efc	obj/kernel.asm	/^c0111efc:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0111eff	obj/kernel.asm	/^c0111eff:	c7 45 f4 f1 ff ff ff 	movl   $0xfffffff1,-0xc(%ebp)$/;"	l
c0111f06	obj/kernel.asm	/^c0111f06:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111f09	obj/kernel.asm	/^c0111f09:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0111f0c	obj/kernel.asm	/^c0111f0c:	e8 8f df ff ff       	call   c010fea0 <lock_sfs_fs>$/;"	l
c0111f11	obj/kernel.asm	/^c0111f11:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111f14	obj/kernel.asm	/^c0111f14:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111f17	obj/kernel.asm	/^c0111f17:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0111f1a	obj/kernel.asm	/^c0111f1a:	85 c0                	test   %eax,%eax$/;"	l
c0111f1c	obj/kernel.asm	/^c0111f1c:	7f 19                	jg     c0111f37 <sfs_reclaim+0xae>$/;"	l
c0111f1e	obj/kernel.asm	/^c0111f1e:	68 0e 78 11 c0       	push   $0xc011780e$/;"	l
c0111f23	obj/kernel.asm	/^c0111f23:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0111f28	obj/kernel.asm	/^c0111f28:	68 31 03 00 00       	push   $0x331$/;"	l
c0111f2d	obj/kernel.asm	/^c0111f2d:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0111f32	obj/kernel.asm	/^c0111f32:	e8 98 e5 fe ff       	call   c01004cf <__panic>$/;"	l
c0111f37	obj/kernel.asm	/^c0111f37:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111f3a	obj/kernel.asm	/^c0111f3a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0111f3d	obj/kernel.asm	/^c0111f3d:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0111f40	obj/kernel.asm	/^c0111f40:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111f43	obj/kernel.asm	/^c0111f43:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0111f46	obj/kernel.asm	/^c0111f46:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111f49	obj/kernel.asm	/^c0111f49:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0111f4c	obj/kernel.asm	/^c0111f4c:	85 c0                	test   %eax,%eax$/;"	l
c0111f4e	obj/kernel.asm	/^c0111f4e:	0f 85 99 01 00 00    	jne    c01120ed <sfs_reclaim+0x264>$/;"	l
c0111f54	obj/kernel.asm	/^c0111f54:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111f57	obj/kernel.asm	/^c0111f57:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111f5a	obj/kernel.asm	/^c0111f5a:	e8 b6 e7 ff ff       	call   c0110715 <inode_ref_count>$/;"	l
c0111f5f	obj/kernel.asm	/^c0111f5f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111f62	obj/kernel.asm	/^c0111f62:	85 c0                	test   %eax,%eax$/;"	l
c0111f64	obj/kernel.asm	/^c0111f64:	0f 85 83 01 00 00    	jne    c01120ed <sfs_reclaim+0x264>$/;"	l
c0111f6a	obj/kernel.asm	/^c0111f6a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111f6d	obj/kernel.asm	/^c0111f6d:	8b 00                	mov    (%eax),%eax$/;"	l
c0111f6f	obj/kernel.asm	/^c0111f6f:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c0111f73	obj/kernel.asm	/^c0111f73:	66 85 c0             	test   %ax,%ax$/;"	l
c0111f76	obj/kernel.asm	/^c0111f76:	75 73                	jne    c0111feb <sfs_reclaim+0x162>$/;"	l
c0111f78	obj/kernel.asm	/^c0111f78:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111f7b	obj/kernel.asm	/^c0111f7b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0111f7e	obj/kernel.asm	/^c0111f7e:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0111f82	obj/kernel.asm	/^c0111f82:	74 17                	je     c0111f9b <sfs_reclaim+0x112>$/;"	l
c0111f84	obj/kernel.asm	/^c0111f84:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111f87	obj/kernel.asm	/^c0111f87:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0111f8a	obj/kernel.asm	/^c0111f8a:	85 c0                	test   %eax,%eax$/;"	l
c0111f8c	obj/kernel.asm	/^c0111f8c:	74 0d                	je     c0111f9b <sfs_reclaim+0x112>$/;"	l
c0111f8e	obj/kernel.asm	/^c0111f8e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111f91	obj/kernel.asm	/^c0111f91:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0111f94	obj/kernel.asm	/^c0111f94:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0111f97	obj/kernel.asm	/^c0111f97:	85 c0                	test   %eax,%eax$/;"	l
c0111f99	obj/kernel.asm	/^c0111f99:	75 19                	jne    c0111fb4 <sfs_reclaim+0x12b>$/;"	l
c0111f9b	obj/kernel.asm	/^c0111f9b:	68 28 78 11 c0       	push   $0xc0117828$/;"	l
c0111fa0	obj/kernel.asm	/^c0111fa0:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0111fa5	obj/kernel.asm	/^c0111fa5:	68 36 03 00 00       	push   $0x336$/;"	l
c0111faa	obj/kernel.asm	/^c0111faa:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0111faf	obj/kernel.asm	/^c0111faf:	e8 1b e5 fe ff       	call   c01004cf <__panic>$/;"	l
c0111fb4	obj/kernel.asm	/^c0111fb4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111fb7	obj/kernel.asm	/^c0111fb7:	68 79 78 11 c0       	push   $0xc0117879$/;"	l
c0111fbc	obj/kernel.asm	/^c0111fbc:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0111fbf	obj/kernel.asm	/^c0111fbf:	e8 9a cc ff ff       	call   c010ec5e <inode_check>$/;"	l
c0111fc4	obj/kernel.asm	/^c0111fc4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111fc7	obj/kernel.asm	/^c0111fc7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111fca	obj/kernel.asm	/^c0111fca:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0111fcd	obj/kernel.asm	/^c0111fcd:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0111fd0	obj/kernel.asm	/^c0111fd0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111fd3	obj/kernel.asm	/^c0111fd3:	6a 00                	push   $0x0$/;"	l
c0111fd5	obj/kernel.asm	/^c0111fd5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111fd8	obj/kernel.asm	/^c0111fd8:	ff d0                	call   *%eax$/;"	l
c0111fda	obj/kernel.asm	/^c0111fda:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111fdd	obj/kernel.asm	/^c0111fdd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111fe0	obj/kernel.asm	/^c0111fe0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111fe4	obj/kernel.asm	/^c0111fe4:	74 05                	je     c0111feb <sfs_reclaim+0x162>$/;"	l
c0111fe6	obj/kernel.asm	/^c0111fe6:	e9 02 01 00 00       	jmp    c01120ed <sfs_reclaim+0x264>$/;"	l
c0111feb	obj/kernel.asm	/^c0111feb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111fee	obj/kernel.asm	/^c0111fee:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111ff1	obj/kernel.asm	/^c0111ff1:	85 c0                	test   %eax,%eax$/;"	l
c0111ff3	obj/kernel.asm	/^c0111ff3:	74 71                	je     c0112066 <sfs_reclaim+0x1dd>$/;"	l
c0111ff5	obj/kernel.asm	/^c0111ff5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111ff8	obj/kernel.asm	/^c0111ff8:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0111ffb	obj/kernel.asm	/^c0111ffb:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0111fff	obj/kernel.asm	/^c0111fff:	74 17                	je     c0112018 <sfs_reclaim+0x18f>$/;"	l
c0112001	obj/kernel.asm	/^c0112001:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0112004	obj/kernel.asm	/^c0112004:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0112007	obj/kernel.asm	/^c0112007:	85 c0                	test   %eax,%eax$/;"	l
c0112009	obj/kernel.asm	/^c0112009:	74 0d                	je     c0112018 <sfs_reclaim+0x18f>$/;"	l
c011200b	obj/kernel.asm	/^c011200b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c011200e	obj/kernel.asm	/^c011200e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0112011	obj/kernel.asm	/^c0112011:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0112014	obj/kernel.asm	/^c0112014:	85 c0                	test   %eax,%eax$/;"	l
c0112016	obj/kernel.asm	/^c0112016:	75 19                	jne    c0112031 <sfs_reclaim+0x1a8>$/;"	l
c0112018	obj/kernel.asm	/^c0112018:	68 e4 76 11 c0       	push   $0xc01176e4$/;"	l
c011201d	obj/kernel.asm	/^c011201d:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0112022	obj/kernel.asm	/^c0112022:	68 3b 03 00 00       	push   $0x33b$/;"	l
c0112027	obj/kernel.asm	/^c0112027:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c011202c	obj/kernel.asm	/^c011202c:	e8 9e e4 fe ff       	call   c01004cf <__panic>$/;"	l
c0112031	obj/kernel.asm	/^c0112031:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0112034	obj/kernel.asm	/^c0112034:	68 32 77 11 c0       	push   $0xc0117732$/;"	l
c0112039	obj/kernel.asm	/^c0112039:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c011203c	obj/kernel.asm	/^c011203c:	e8 1d cc ff ff       	call   c010ec5e <inode_check>$/;"	l
c0112041	obj/kernel.asm	/^c0112041:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112044	obj/kernel.asm	/^c0112044:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0112047	obj/kernel.asm	/^c0112047:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011204a	obj/kernel.asm	/^c011204a:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c011204d	obj/kernel.asm	/^c011204d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112050	obj/kernel.asm	/^c0112050:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112053	obj/kernel.asm	/^c0112053:	ff d0                	call   *%eax$/;"	l
c0112055	obj/kernel.asm	/^c0112055:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112058	obj/kernel.asm	/^c0112058:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011205b	obj/kernel.asm	/^c011205b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011205f	obj/kernel.asm	/^c011205f:	74 05                	je     c0112066 <sfs_reclaim+0x1dd>$/;"	l
c0112061	obj/kernel.asm	/^c0112061:	e9 87 00 00 00       	jmp    c01120ed <sfs_reclaim+0x264>$/;"	l
c0112066	obj/kernel.asm	/^c0112066:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112069	obj/kernel.asm	/^c0112069:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c011206c	obj/kernel.asm	/^c011206c:	e8 14 e8 ff ff       	call   c0110885 <sfs_remove_links>$/;"	l
c0112071	obj/kernel.asm	/^c0112071:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112074	obj/kernel.asm	/^c0112074:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112077	obj/kernel.asm	/^c0112077:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c011207a	obj/kernel.asm	/^c011207a:	e8 55 de ff ff       	call   c010fed4 <unlock_sfs_fs>$/;"	l
c011207f	obj/kernel.asm	/^c011207f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112082	obj/kernel.asm	/^c0112082:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112085	obj/kernel.asm	/^c0112085:	8b 00                	mov    (%eax),%eax$/;"	l
c0112087	obj/kernel.asm	/^c0112087:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c011208b	obj/kernel.asm	/^c011208b:	66 85 c0             	test   %ax,%ax$/;"	l
c011208e	obj/kernel.asm	/^c011208e:	75 37                	jne    c01120c7 <sfs_reclaim+0x23e>$/;"	l
c0112090	obj/kernel.asm	/^c0112090:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112093	obj/kernel.asm	/^c0112093:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0112096	obj/kernel.asm	/^c0112096:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0112099	obj/kernel.asm	/^c0112099:	50                   	push   %eax$/;"	l
c011209a	obj/kernel.asm	/^c011209a:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c011209d	obj/kernel.asm	/^c011209d:	e8 3f e9 ff ff       	call   c01109e1 <sfs_block_free>$/;"	l
c01120a2	obj/kernel.asm	/^c01120a2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01120a5	obj/kernel.asm	/^c01120a5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01120a8	obj/kernel.asm	/^c01120a8:	8b 00                	mov    (%eax),%eax$/;"	l
c01120aa	obj/kernel.asm	/^c01120aa:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01120ad	obj/kernel.asm	/^c01120ad:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01120b0	obj/kernel.asm	/^c01120b0:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c01120b4	obj/kernel.asm	/^c01120b4:	74 11                	je     c01120c7 <sfs_reclaim+0x23e>$/;"	l
c01120b6	obj/kernel.asm	/^c01120b6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01120b9	obj/kernel.asm	/^c01120b9:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c01120bc	obj/kernel.asm	/^c01120bc:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01120bf	obj/kernel.asm	/^c01120bf:	e8 1d e9 ff ff       	call   c01109e1 <sfs_block_free>$/;"	l
c01120c4	obj/kernel.asm	/^c01120c4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01120c7	obj/kernel.asm	/^c01120c7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01120ca	obj/kernel.asm	/^c01120ca:	8b 00                	mov    (%eax),%eax$/;"	l
c01120cc	obj/kernel.asm	/^c01120cc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01120cf	obj/kernel.asm	/^c01120cf:	50                   	push   %eax$/;"	l
c01120d0	obj/kernel.asm	/^c01120d0:	e8 e2 53 ff ff       	call   c01074b7 <kfree>$/;"	l
c01120d5	obj/kernel.asm	/^c01120d5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01120d8	obj/kernel.asm	/^c01120d8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01120db	obj/kernel.asm	/^c01120db:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01120de	obj/kernel.asm	/^c01120de:	e8 46 c9 ff ff       	call   c010ea29 <inode_kill>$/;"	l
c01120e3	obj/kernel.asm	/^c01120e3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01120e6	obj/kernel.asm	/^c01120e6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01120eb	obj/kernel.asm	/^c01120eb:	eb 11                	jmp    c01120fe <sfs_reclaim+0x275>$/;"	l
c01120ed	obj/kernel.asm	/^c01120ed:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01120f0	obj/kernel.asm	/^c01120f0:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01120f3	obj/kernel.asm	/^c01120f3:	e8 dc dd ff ff       	call   c010fed4 <unlock_sfs_fs>$/;"	l
c01120f8	obj/kernel.asm	/^c01120f8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01120fb	obj/kernel.asm	/^c01120fb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01120fe	obj/kernel.asm	/^c01120fe:	c9                   	leave  $/;"	l
c01120ff	obj/kernel.asm	/^c01120ff:	c3                   	ret    $/;"	l
c0112100	obj/kernel.asm	/^c0112100 <sfs_gettype>:$/;"	l
c0112100	obj/kernel.asm	/^c0112100:	55                   	push   %ebp$/;"	l
c0112101	obj/kernel.asm	/^c0112101:	89 e5                	mov    %esp,%ebp$/;"	l
c0112103	obj/kernel.asm	/^c0112103:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0112106	obj/kernel.asm	/^c0112106:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112109	obj/kernel.asm	/^c0112109:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011210c	obj/kernel.asm	/^c011210c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112110	obj/kernel.asm	/^c0112110:	74 0d                	je     c011211f <sfs_gettype+0x1f>$/;"	l
c0112112	obj/kernel.asm	/^c0112112:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112115	obj/kernel.asm	/^c0112115:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0112118	obj/kernel.asm	/^c0112118:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c011211d	obj/kernel.asm	/^c011211d:	74 19                	je     c0112138 <sfs_gettype+0x38>$/;"	l
c011211f	obj/kernel.asm	/^c011211f:	68 50 75 11 c0       	push   $0xc0117550$/;"	l
c0112124	obj/kernel.asm	/^c0112124:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0112129	obj/kernel.asm	/^c0112129:	68 56 03 00 00       	push   $0x356$/;"	l
c011212e	obj/kernel.asm	/^c011212e:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0112133	obj/kernel.asm	/^c0112133:	e8 97 e3 fe ff       	call   c01004cf <__panic>$/;"	l
c0112138	obj/kernel.asm	/^c0112138:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011213b	obj/kernel.asm	/^c011213b:	8b 00                	mov    (%eax),%eax$/;"	l
c011213d	obj/kernel.asm	/^c011213d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112140	obj/kernel.asm	/^c0112140:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112143	obj/kernel.asm	/^c0112143:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0112147	obj/kernel.asm	/^c0112147:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c011214a	obj/kernel.asm	/^c011214a:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c011214d	obj/kernel.asm	/^c011214d:	74 0c                	je     c011215b <sfs_gettype+0x5b>$/;"	l
c011214f	obj/kernel.asm	/^c011214f:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0112152	obj/kernel.asm	/^c0112152:	74 27                	je     c011217b <sfs_gettype+0x7b>$/;"	l
c0112154	obj/kernel.asm	/^c0112154:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0112157	obj/kernel.asm	/^c0112157:	74 12                	je     c011216b <sfs_gettype+0x6b>$/;"	l
c0112159	obj/kernel.asm	/^c0112159:	eb 30                	jmp    c011218b <sfs_gettype+0x8b>$/;"	l
c011215b	obj/kernel.asm	/^c011215b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011215e	obj/kernel.asm	/^c011215e:	c7 00 00 20 00 00    	movl   $0x2000,(%eax)$/;"	l
c0112164	obj/kernel.asm	/^c0112164:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112169	obj/kernel.asm	/^c0112169:	eb 3f                	jmp    c01121aa <sfs_gettype+0xaa>$/;"	l
c011216b	obj/kernel.asm	/^c011216b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011216e	obj/kernel.asm	/^c011216e:	c7 00 00 10 00 00    	movl   $0x1000,(%eax)$/;"	l
c0112174	obj/kernel.asm	/^c0112174:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112179	obj/kernel.asm	/^c0112179:	eb 2f                	jmp    c01121aa <sfs_gettype+0xaa>$/;"	l
c011217b	obj/kernel.asm	/^c011217b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011217e	obj/kernel.asm	/^c011217e:	c7 00 00 30 00 00    	movl   $0x3000,(%eax)$/;"	l
c0112184	obj/kernel.asm	/^c0112184:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112189	obj/kernel.asm	/^c0112189:	eb 1f                	jmp    c01121aa <sfs_gettype+0xaa>$/;"	l
c011218b	obj/kernel.asm	/^c011218b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011218e	obj/kernel.asm	/^c011218e:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0112192	obj/kernel.asm	/^c0112192:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0112195	obj/kernel.asm	/^c0112195:	50                   	push   %eax$/;"	l
c0112196	obj/kernel.asm	/^c0112196:	68 80 74 11 c0       	push   $0xc0117480$/;"	l
c011219b	obj/kernel.asm	/^c011219b:	68 62 03 00 00       	push   $0x362$/;"	l
c01121a0	obj/kernel.asm	/^c01121a0:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c01121a5	obj/kernel.asm	/^c01121a5:	e8 25 e3 fe ff       	call   c01004cf <__panic>$/;"	l
c01121aa	obj/kernel.asm	/^c01121aa:	c9                   	leave  $/;"	l
c01121ab	obj/kernel.asm	/^c01121ab:	c3                   	ret    $/;"	l
c01121ac	obj/kernel.asm	/^c01121ac <sfs_tryseek>:$/;"	l
c01121ac	obj/kernel.asm	/^c01121ac:	55                   	push   %ebp$/;"	l
c01121ad	obj/kernel.asm	/^c01121ad:	89 e5                	mov    %esp,%ebp$/;"	l
c01121af	obj/kernel.asm	/^c01121af:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01121b2	obj/kernel.asm	/^c01121b2:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01121b6	obj/kernel.asm	/^c01121b6:	78 0a                	js     c01121c2 <sfs_tryseek+0x16>$/;"	l
c01121b8	obj/kernel.asm	/^c01121b8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01121bb	obj/kernel.asm	/^c01121bb:	3d ff ff ff 07       	cmp    $0x7ffffff,%eax$/;"	l
c01121c0	obj/kernel.asm	/^c01121c0:	76 0a                	jbe    c01121cc <sfs_tryseek+0x20>$/;"	l
c01121c2	obj/kernel.asm	/^c01121c2:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01121c7	obj/kernel.asm	/^c01121c7:	e9 b3 00 00 00       	jmp    c011227f <sfs_tryseek+0xd3>$/;"	l
c01121cc	obj/kernel.asm	/^c01121cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01121cf	obj/kernel.asm	/^c01121cf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01121d2	obj/kernel.asm	/^c01121d2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01121d6	obj/kernel.asm	/^c01121d6:	74 0d                	je     c01121e5 <sfs_tryseek+0x39>$/;"	l
c01121d8	obj/kernel.asm	/^c01121d8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01121db	obj/kernel.asm	/^c01121db:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01121de	obj/kernel.asm	/^c01121de:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c01121e3	obj/kernel.asm	/^c01121e3:	74 19                	je     c01121fe <sfs_tryseek+0x52>$/;"	l
c01121e5	obj/kernel.asm	/^c01121e5:	68 50 75 11 c0       	push   $0xc0117550$/;"	l
c01121ea	obj/kernel.asm	/^c01121ea:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c01121ef	obj/kernel.asm	/^c01121ef:	68 6d 03 00 00       	push   $0x36d$/;"	l
c01121f4	obj/kernel.asm	/^c01121f4:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c01121f9	obj/kernel.asm	/^c01121f9:	e8 d1 e2 fe ff       	call   c01004cf <__panic>$/;"	l
c01121fe	obj/kernel.asm	/^c01121fe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112201	obj/kernel.asm	/^c0112201:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112204	obj/kernel.asm	/^c0112204:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0112207	obj/kernel.asm	/^c0112207:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011220a	obj/kernel.asm	/^c011220a:	8b 00                	mov    (%eax),%eax$/;"	l
c011220c	obj/kernel.asm	/^c011220c:	8b 00                	mov    (%eax),%eax$/;"	l
c011220e	obj/kernel.asm	/^c011220e:	39 c2                	cmp    %eax,%edx$/;"	l
c0112210	obj/kernel.asm	/^c0112210:	76 68                	jbe    c011227a <sfs_tryseek+0xce>$/;"	l
c0112212	obj/kernel.asm	/^c0112212:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112215	obj/kernel.asm	/^c0112215:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112218	obj/kernel.asm	/^c0112218:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c011221c	obj/kernel.asm	/^c011221c:	74 17                	je     c0112235 <sfs_tryseek+0x89>$/;"	l
c011221e	obj/kernel.asm	/^c011221e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112221	obj/kernel.asm	/^c0112221:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0112224	obj/kernel.asm	/^c0112224:	85 c0                	test   %eax,%eax$/;"	l
c0112226	obj/kernel.asm	/^c0112226:	74 0d                	je     c0112235 <sfs_tryseek+0x89>$/;"	l
c0112228	obj/kernel.asm	/^c0112228:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011222b	obj/kernel.asm	/^c011222b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011222e	obj/kernel.asm	/^c011222e:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0112231	obj/kernel.asm	/^c0112231:	85 c0                	test   %eax,%eax$/;"	l
c0112233	obj/kernel.asm	/^c0112233:	75 19                	jne    c011224e <sfs_tryseek+0xa2>$/;"	l
c0112235	obj/kernel.asm	/^c0112235:	68 28 78 11 c0       	push   $0xc0117828$/;"	l
c011223a	obj/kernel.asm	/^c011223a:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c011223f	obj/kernel.asm	/^c011223f:	68 6f 03 00 00       	push   $0x36f$/;"	l
c0112244	obj/kernel.asm	/^c0112244:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0112249	obj/kernel.asm	/^c0112249:	e8 81 e2 fe ff       	call   c01004cf <__panic>$/;"	l
c011224e	obj/kernel.asm	/^c011224e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0112251	obj/kernel.asm	/^c0112251:	68 79 78 11 c0       	push   $0xc0117879$/;"	l
c0112256	obj/kernel.asm	/^c0112256:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0112259	obj/kernel.asm	/^c0112259:	e8 00 ca ff ff       	call   c010ec5e <inode_check>$/;"	l
c011225e	obj/kernel.asm	/^c011225e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112261	obj/kernel.asm	/^c0112261:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112264	obj/kernel.asm	/^c0112264:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0112267	obj/kernel.asm	/^c0112267:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c011226a	obj/kernel.asm	/^c011226a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c011226d	obj/kernel.asm	/^c011226d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0112270	obj/kernel.asm	/^c0112270:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112273	obj/kernel.asm	/^c0112273:	ff d0                	call   *%eax$/;"	l
c0112275	obj/kernel.asm	/^c0112275:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112278	obj/kernel.asm	/^c0112278:	eb 05                	jmp    c011227f <sfs_tryseek+0xd3>$/;"	l
c011227a	obj/kernel.asm	/^c011227a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011227f	obj/kernel.asm	/^c011227f:	c9                   	leave  $/;"	l
c0112280	obj/kernel.asm	/^c0112280:	c3                   	ret    $/;"	l
c0112281	obj/kernel.asm	/^c0112281 <sfs_truncfile>:$/;"	l
c0112281	obj/kernel.asm	/^c0112281:	55                   	push   %ebp$/;"	l
c0112282	obj/kernel.asm	/^c0112282:	89 e5                	mov    %esp,%ebp$/;"	l
c0112284	obj/kernel.asm	/^c0112284:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112287	obj/kernel.asm	/^c0112287:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c011228b	obj/kernel.asm	/^c011228b:	78 0a                	js     c0112297 <sfs_truncfile+0x16>$/;"	l
c011228d	obj/kernel.asm	/^c011228d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112290	obj/kernel.asm	/^c0112290:	3d 00 00 00 08       	cmp    $0x8000000,%eax$/;"	l
c0112295	obj/kernel.asm	/^c0112295:	76 0a                	jbe    c01122a1 <sfs_truncfile+0x20>$/;"	l
c0112297	obj/kernel.asm	/^c0112297:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c011229c	obj/kernel.asm	/^c011229c:	e9 9c 01 00 00       	jmp    c011243d <sfs_truncfile+0x1bc>$/;"	l
c01122a1	obj/kernel.asm	/^c01122a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01122a4	obj/kernel.asm	/^c01122a4:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01122a7	obj/kernel.asm	/^c01122a7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01122aa	obj/kernel.asm	/^c01122aa:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01122ae	obj/kernel.asm	/^c01122ae:	74 0a                	je     c01122ba <sfs_truncfile+0x39>$/;"	l
c01122b0	obj/kernel.asm	/^c01122b0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01122b3	obj/kernel.asm	/^c01122b3:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c01122b6	obj/kernel.asm	/^c01122b6:	85 c0                	test   %eax,%eax$/;"	l
c01122b8	obj/kernel.asm	/^c01122b8:	74 19                	je     c01122d3 <sfs_truncfile+0x52>$/;"	l
c01122ba	obj/kernel.asm	/^c01122ba:	68 54 77 11 c0       	push   $0xc0117754$/;"	l
c01122bf	obj/kernel.asm	/^c01122bf:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c01122c4	obj/kernel.asm	/^c01122c4:	68 7c 03 00 00       	push   $0x37c$/;"	l
c01122c9	obj/kernel.asm	/^c01122c9:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c01122ce	obj/kernel.asm	/^c01122ce:	e8 fc e1 fe ff       	call   c01004cf <__panic>$/;"	l
c01122d3	obj/kernel.asm	/^c01122d3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01122d6	obj/kernel.asm	/^c01122d6:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01122d9	obj/kernel.asm	/^c01122d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01122dc	obj/kernel.asm	/^c01122dc:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01122df	obj/kernel.asm	/^c01122df:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01122e3	obj/kernel.asm	/^c01122e3:	74 0d                	je     c01122f2 <sfs_truncfile+0x71>$/;"	l
c01122e5	obj/kernel.asm	/^c01122e5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01122e8	obj/kernel.asm	/^c01122e8:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01122eb	obj/kernel.asm	/^c01122eb:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c01122f0	obj/kernel.asm	/^c01122f0:	74 19                	je     c011230b <sfs_truncfile+0x8a>$/;"	l
c01122f2	obj/kernel.asm	/^c01122f2:	68 50 75 11 c0       	push   $0xc0117550$/;"	l
c01122f7	obj/kernel.asm	/^c01122f7:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c01122fc	obj/kernel.asm	/^c01122fc:	68 7d 03 00 00       	push   $0x37d$/;"	l
c0112301	obj/kernel.asm	/^c0112301:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0112306	obj/kernel.asm	/^c0112306:	e8 c4 e1 fe ff       	call   c01004cf <__panic>$/;"	l
c011230b	obj/kernel.asm	/^c011230b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011230e	obj/kernel.asm	/^c011230e:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0112311	obj/kernel.asm	/^c0112311:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0112314	obj/kernel.asm	/^c0112314:	8b 00                	mov    (%eax),%eax$/;"	l
c0112316	obj/kernel.asm	/^c0112316:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0112319	obj/kernel.asm	/^c0112319:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0112320	obj/kernel.asm	/^c0112320:	c7 45 d8 00 10 00 00 	movl   $0x1000,-0x28(%ebp)$/;"	l
c0112327	obj/kernel.asm	/^c0112327:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c011232a	obj/kernel.asm	/^c011232a:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011232d	obj/kernel.asm	/^c011232d:	01 d0                	add    %edx,%eax$/;"	l
c011232f	obj/kernel.asm	/^c011232f:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0112332	obj/kernel.asm	/^c0112332:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0112337	obj/kernel.asm	/^c0112337:	f7 75 d8             	divl   -0x28(%ebp)$/;"	l
c011233a	obj/kernel.asm	/^c011233a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c011233d	obj/kernel.asm	/^c011233d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0112340	obj/kernel.asm	/^c0112340:	8b 10                	mov    (%eax),%edx$/;"	l
c0112342	obj/kernel.asm	/^c0112342:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112345	obj/kernel.asm	/^c0112345:	39 c2                	cmp    %eax,%edx$/;"	l
c0112347	obj/kernel.asm	/^c0112347:	75 2e                	jne    c0112377 <sfs_truncfile+0xf6>$/;"	l
c0112349	obj/kernel.asm	/^c0112349:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c011234c	obj/kernel.asm	/^c011234c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011234f	obj/kernel.asm	/^c011234f:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0112352	obj/kernel.asm	/^c0112352:	74 19                	je     c011236d <sfs_truncfile+0xec>$/;"	l
c0112354	obj/kernel.asm	/^c0112354:	68 82 78 11 c0       	push   $0xc0117882$/;"	l
c0112359	obj/kernel.asm	/^c0112359:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c011235e	obj/kernel.asm	/^c011235e:	68 84 03 00 00       	push   $0x384$/;"	l
c0112363	obj/kernel.asm	/^c0112363:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0112368	obj/kernel.asm	/^c0112368:	e8 62 e1 fe ff       	call   c01004cf <__panic>$/;"	l
c011236d	obj/kernel.asm	/^c011236d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112372	obj/kernel.asm	/^c0112372:	e9 c6 00 00 00       	jmp    c011243d <sfs_truncfile+0x1bc>$/;"	l
c0112377	obj/kernel.asm	/^c0112377:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011237a	obj/kernel.asm	/^c011237a:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c011237d	obj/kernel.asm	/^c011237d:	e8 9e e3 ff ff       	call   c0110720 <lock_sin>$/;"	l
c0112382	obj/kernel.asm	/^c0112382:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112385	obj/kernel.asm	/^c0112385:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0112388	obj/kernel.asm	/^c0112388:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011238b	obj/kernel.asm	/^c011238b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011238e	obj/kernel.asm	/^c011238e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112391	obj/kernel.asm	/^c0112391:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0112394	obj/kernel.asm	/^c0112394:	73 2e                	jae    c01123c4 <sfs_truncfile+0x143>$/;"	l
c0112396	obj/kernel.asm	/^c0112396:	eb 22                	jmp    c01123ba <sfs_truncfile+0x139>$/;"	l
c0112398	obj/kernel.asm	/^c0112398:	6a 00                	push   $0x0$/;"	l
c011239a	obj/kernel.asm	/^c011239a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c011239d	obj/kernel.asm	/^c011239d:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01123a0	obj/kernel.asm	/^c01123a0:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c01123a3	obj/kernel.asm	/^c01123a3:	e8 63 ed ff ff       	call   c011110b <sfs_bmap_load_nolock>$/;"	l
c01123a8	obj/kernel.asm	/^c01123a8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01123ab	obj/kernel.asm	/^c01123ab:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01123ae	obj/kernel.asm	/^c01123ae:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01123b2	obj/kernel.asm	/^c01123b2:	74 02                	je     c01123b6 <sfs_truncfile+0x135>$/;"	l
c01123b4	obj/kernel.asm	/^c01123b4:	eb 76                	jmp    c011242c <sfs_truncfile+0x1ab>$/;"	l
c01123b6	obj/kernel.asm	/^c01123b6:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c01123ba	obj/kernel.asm	/^c01123ba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01123bd	obj/kernel.asm	/^c01123bd:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c01123c0	obj/kernel.asm	/^c01123c0:	75 d6                	jne    c0112398 <sfs_truncfile+0x117>$/;"	l
c01123c2	obj/kernel.asm	/^c01123c2:	eb 32                	jmp    c01123f6 <sfs_truncfile+0x175>$/;"	l
c01123c4	obj/kernel.asm	/^c01123c4:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01123c7	obj/kernel.asm	/^c01123c7:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01123ca	obj/kernel.asm	/^c01123ca:	73 2a                	jae    c01123f6 <sfs_truncfile+0x175>$/;"	l
c01123cc	obj/kernel.asm	/^c01123cc:	eb 20                	jmp    c01123ee <sfs_truncfile+0x16d>$/;"	l
c01123ce	obj/kernel.asm	/^c01123ce:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01123d1	obj/kernel.asm	/^c01123d1:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01123d4	obj/kernel.asm	/^c01123d4:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c01123d7	obj/kernel.asm	/^c01123d7:	e8 f5 ed ff ff       	call   c01111d1 <sfs_bmap_truncate_nolock>$/;"	l
c01123dc	obj/kernel.asm	/^c01123dc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01123df	obj/kernel.asm	/^c01123df:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01123e2	obj/kernel.asm	/^c01123e2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01123e6	obj/kernel.asm	/^c01123e6:	74 02                	je     c01123ea <sfs_truncfile+0x169>$/;"	l
c01123e8	obj/kernel.asm	/^c01123e8:	eb 42                	jmp    c011242c <sfs_truncfile+0x1ab>$/;"	l
c01123ea	obj/kernel.asm	/^c01123ea:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
c01123ee	obj/kernel.asm	/^c01123ee:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01123f1	obj/kernel.asm	/^c01123f1:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01123f4	obj/kernel.asm	/^c01123f4:	75 d8                	jne    c01123ce <sfs_truncfile+0x14d>$/;"	l
c01123f6	obj/kernel.asm	/^c01123f6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01123f9	obj/kernel.asm	/^c01123f9:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01123fc	obj/kernel.asm	/^c01123fc:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c01123ff	obj/kernel.asm	/^c01123ff:	74 19                	je     c011241a <sfs_truncfile+0x199>$/;"	l
c0112401	obj/kernel.asm	/^c0112401:	68 97 78 11 c0       	push   $0xc0117897$/;"	l
c0112406	obj/kernel.asm	/^c0112406:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c011240b	obj/kernel.asm	/^c011240b:	68 9d 03 00 00       	push   $0x39d$/;"	l
c0112410	obj/kernel.asm	/^c0112410:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0112415	obj/kernel.asm	/^c0112415:	e8 b5 e0 fe ff       	call   c01004cf <__panic>$/;"	l
c011241a	obj/kernel.asm	/^c011241a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c011241d	obj/kernel.asm	/^c011241d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0112420	obj/kernel.asm	/^c0112420:	89 10                	mov    %edx,(%eax)$/;"	l
c0112422	obj/kernel.asm	/^c0112422:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0112425	obj/kernel.asm	/^c0112425:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c011242c	obj/kernel.asm	/^c011242c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011242f	obj/kernel.asm	/^c011242f:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0112432	obj/kernel.asm	/^c0112432:	e8 03 e3 ff ff       	call   c011073a <unlock_sin>$/;"	l
c0112437	obj/kernel.asm	/^c0112437:	83 c4 10             	add    $0x10,%esp$/;"	l
c011243a	obj/kernel.asm	/^c011243a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011243d	obj/kernel.asm	/^c011243d:	c9                   	leave  $/;"	l
c011243e	obj/kernel.asm	/^c011243e:	c3                   	ret    $/;"	l
c011243f	obj/kernel.asm	/^c011243f <sfs_lookup>:$/;"	l
c011243f	obj/kernel.asm	/^c011243f:	55                   	push   %ebp$/;"	l
c0112440	obj/kernel.asm	/^c0112440:	89 e5                	mov    %esp,%ebp$/;"	l
c0112442	obj/kernel.asm	/^c0112442:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112445	obj/kernel.asm	/^c0112445:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112448	obj/kernel.asm	/^c0112448:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c011244b	obj/kernel.asm	/^c011244b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011244e	obj/kernel.asm	/^c011244e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112452	obj/kernel.asm	/^c0112452:	74 0a                	je     c011245e <sfs_lookup+0x1f>$/;"	l
c0112454	obj/kernel.asm	/^c0112454:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112457	obj/kernel.asm	/^c0112457:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c011245a	obj/kernel.asm	/^c011245a:	85 c0                	test   %eax,%eax$/;"	l
c011245c	obj/kernel.asm	/^c011245c:	74 19                	je     c0112477 <sfs_lookup+0x38>$/;"	l
c011245e	obj/kernel.asm	/^c011245e:	68 54 77 11 c0       	push   $0xc0117754$/;"	l
c0112463	obj/kernel.asm	/^c0112463:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c0112468	obj/kernel.asm	/^c0112468:	68 ad 03 00 00       	push   $0x3ad$/;"	l
c011246d	obj/kernel.asm	/^c011246d:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c0112472	obj/kernel.asm	/^c0112472:	e8 58 e0 fe ff       	call   c01004cf <__panic>$/;"	l
c0112477	obj/kernel.asm	/^c0112477:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011247a	obj/kernel.asm	/^c011247a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011247d	obj/kernel.asm	/^c011247d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112480	obj/kernel.asm	/^c0112480:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112483	obj/kernel.asm	/^c0112483:	84 c0                	test   %al,%al$/;"	l
c0112485	obj/kernel.asm	/^c0112485:	74 0a                	je     c0112491 <sfs_lookup+0x52>$/;"	l
c0112487	obj/kernel.asm	/^c0112487:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011248a	obj/kernel.asm	/^c011248a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011248d	obj/kernel.asm	/^c011248d:	3c 2f                	cmp    $0x2f,%al$/;"	l
c011248f	obj/kernel.asm	/^c011248f:	75 19                	jne    c01124aa <sfs_lookup+0x6b>$/;"	l
c0112491	obj/kernel.asm	/^c0112491:	68 ac 78 11 c0       	push   $0xc01178ac$/;"	l
c0112496	obj/kernel.asm	/^c0112496:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c011249b	obj/kernel.asm	/^c011249b:	68 ae 03 00 00       	push   $0x3ae$/;"	l
c01124a0	obj/kernel.asm	/^c01124a0:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c01124a5	obj/kernel.asm	/^c01124a5:	e8 25 e0 fe ff       	call   c01004cf <__panic>$/;"	l
c01124aa	obj/kernel.asm	/^c01124aa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01124ad	obj/kernel.asm	/^c01124ad:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01124b0	obj/kernel.asm	/^c01124b0:	e8 d7 c5 ff ff       	call   c010ea8c <inode_ref_inc>$/;"	l
c01124b5	obj/kernel.asm	/^c01124b5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01124b8	obj/kernel.asm	/^c01124b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01124bb	obj/kernel.asm	/^c01124bb:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01124be	obj/kernel.asm	/^c01124be:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01124c2	obj/kernel.asm	/^c01124c2:	74 0d                	je     c01124d1 <sfs_lookup+0x92>$/;"	l
c01124c4	obj/kernel.asm	/^c01124c4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01124c7	obj/kernel.asm	/^c01124c7:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01124ca	obj/kernel.asm	/^c01124ca:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c01124cf	obj/kernel.asm	/^c01124cf:	74 19                	je     c01124ea <sfs_lookup+0xab>$/;"	l
c01124d1	obj/kernel.asm	/^c01124d1:	68 50 75 11 c0       	push   $0xc0117550$/;"	l
c01124d6	obj/kernel.asm	/^c01124d6:	68 ff 74 11 c0       	push   $0xc01174ff$/;"	l
c01124db	obj/kernel.asm	/^c01124db:	68 b0 03 00 00       	push   $0x3b0$/;"	l
c01124e0	obj/kernel.asm	/^c01124e0:	68 97 74 11 c0       	push   $0xc0117497$/;"	l
c01124e5	obj/kernel.asm	/^c01124e5:	e8 e5 df fe ff       	call   c01004cf <__panic>$/;"	l
c01124ea	obj/kernel.asm	/^c01124ea:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01124ed	obj/kernel.asm	/^c01124ed:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01124f0	obj/kernel.asm	/^c01124f0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01124f3	obj/kernel.asm	/^c01124f3:	8b 00                	mov    (%eax),%eax$/;"	l
c01124f5	obj/kernel.asm	/^c01124f5:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c01124f9	obj/kernel.asm	/^c01124f9:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c01124fd	obj/kernel.asm	/^c01124fd:	74 15                	je     c0112514 <sfs_lookup+0xd5>$/;"	l
c01124ff	obj/kernel.asm	/^c01124ff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112502	obj/kernel.asm	/^c0112502:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112505	obj/kernel.asm	/^c0112505:	e8 9c c5 ff ff       	call   c010eaa6 <inode_ref_dec>$/;"	l
c011250a	obj/kernel.asm	/^c011250a:	83 c4 10             	add    $0x10,%esp$/;"	l
c011250d	obj/kernel.asm	/^c011250d:	b8 ee ff ff ff       	mov    $0xffffffee,%eax$/;"	l
c0112512	obj/kernel.asm	/^c0112512:	eb 43                	jmp    c0112557 <sfs_lookup+0x118>$/;"	l
c0112514	obj/kernel.asm	/^c0112514:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112517	obj/kernel.asm	/^c0112517:	6a 00                	push   $0x0$/;"	l
c0112519	obj/kernel.asm	/^c0112519:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c011251c	obj/kernel.asm	/^c011251c:	50                   	push   %eax$/;"	l
c011251d	obj/kernel.asm	/^c011251d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0112520	obj/kernel.asm	/^c0112520:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0112523	obj/kernel.asm	/^c0112523:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0112526	obj/kernel.asm	/^c0112526:	e8 69 ef ff ff       	call   c0111494 <sfs_lookup_once>$/;"	l
c011252b	obj/kernel.asm	/^c011252b:	83 c4 20             	add    $0x20,%esp$/;"	l
c011252e	obj/kernel.asm	/^c011252e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0112531	obj/kernel.asm	/^c0112531:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112534	obj/kernel.asm	/^c0112534:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112537	obj/kernel.asm	/^c0112537:	e8 6a c5 ff ff       	call   c010eaa6 <inode_ref_dec>$/;"	l
c011253c	obj/kernel.asm	/^c011253c:	83 c4 10             	add    $0x10,%esp$/;"	l
c011253f	obj/kernel.asm	/^c011253f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0112543	obj/kernel.asm	/^c0112543:	74 05                	je     c011254a <sfs_lookup+0x10b>$/;"	l
c0112545	obj/kernel.asm	/^c0112545:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112548	obj/kernel.asm	/^c0112548:	eb 0d                	jmp    c0112557 <sfs_lookup+0x118>$/;"	l
c011254a	obj/kernel.asm	/^c011254a:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c011254d	obj/kernel.asm	/^c011254d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112550	obj/kernel.asm	/^c0112550:	89 10                	mov    %edx,(%eax)$/;"	l
c0112552	obj/kernel.asm	/^c0112552:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112557	obj/kernel.asm	/^c0112557:	c9                   	leave  $/;"	l
c0112558	obj/kernel.asm	/^c0112558:	c3                   	ret    $/;"	l
c0112559	obj/kernel.asm	/^c0112559 <bitmap_create>:$/;"	l
c0112559	obj/kernel.asm	/^c0112559:	55                   	push   %ebp$/;"	l
c011255a	obj/kernel.asm	/^c011255a:	89 e5                	mov    %esp,%ebp$/;"	l
c011255c	obj/kernel.asm	/^c011255c:	56                   	push   %esi$/;"	l
c011255d	obj/kernel.asm	/^c011255d:	53                   	push   %ebx$/;"	l
c011255e	obj/kernel.asm	/^c011255e:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0112561	obj/kernel.asm	/^c0112561:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0112565	obj/kernel.asm	/^c0112565:	74 0b                	je     c0112572 <bitmap_create+0x19>$/;"	l
c0112567	obj/kernel.asm	/^c0112567:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011256a	obj/kernel.asm	/^c011256a:	83 c0 20             	add    $0x20,%eax$/;"	l
c011256d	obj/kernel.asm	/^c011256d:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0112570	obj/kernel.asm	/^c0112570:	77 16                	ja     c0112588 <bitmap_create+0x2f>$/;"	l
c0112572	obj/kernel.asm	/^c0112572:	68 cc 78 11 c0       	push   $0xc01178cc$/;"	l
c0112577	obj/kernel.asm	/^c0112577:	68 f4 78 11 c0       	push   $0xc01178f4$/;"	l
c011257c	obj/kernel.asm	/^c011257c:	6a 15                	push   $0x15$/;"	l
c011257e	obj/kernel.asm	/^c011257e:	68 09 79 11 c0       	push   $0xc0117909$/;"	l
c0112583	obj/kernel.asm	/^c0112583:	e8 47 df fe ff       	call   c01004cf <__panic>$/;"	l
c0112588	obj/kernel.asm	/^c0112588:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011258b	obj/kernel.asm	/^c011258b:	6a 0c                	push   $0xc$/;"	l
c011258d	obj/kernel.asm	/^c011258d:	e8 0d 4f ff ff       	call   c010749f <kmalloc>$/;"	l
c0112592	obj/kernel.asm	/^c0112592:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112595	obj/kernel.asm	/^c0112595:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112598	obj/kernel.asm	/^c0112598:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011259c	obj/kernel.asm	/^c011259c:	75 0a                	jne    c01125a8 <bitmap_create+0x4f>$/;"	l
c011259e	obj/kernel.asm	/^c011259e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01125a3	obj/kernel.asm	/^c01125a3:	e9 2a 01 00 00       	jmp    c01126d2 <bitmap_create+0x179>$/;"	l
c01125a8	obj/kernel.asm	/^c01125a8:	c7 45 ec 20 00 00 00 	movl   $0x20,-0x14(%ebp)$/;"	l
c01125af	obj/kernel.asm	/^c01125af:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01125b2	obj/kernel.asm	/^c01125b2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01125b5	obj/kernel.asm	/^c01125b5:	01 d0                	add    %edx,%eax$/;"	l
c01125b7	obj/kernel.asm	/^c01125b7:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01125ba	obj/kernel.asm	/^c01125ba:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01125bf	obj/kernel.asm	/^c01125bf:	f7 75 ec             	divl   -0x14(%ebp)$/;"	l
c01125c2	obj/kernel.asm	/^c01125c2:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01125c5	obj/kernel.asm	/^c01125c5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01125c8	obj/kernel.asm	/^c01125c8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01125cb	obj/kernel.asm	/^c01125cb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01125ce	obj/kernel.asm	/^c01125ce:	50                   	push   %eax$/;"	l
c01125cf	obj/kernel.asm	/^c01125cf:	e8 cb 4e ff ff       	call   c010749f <kmalloc>$/;"	l
c01125d4	obj/kernel.asm	/^c01125d4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01125d7	obj/kernel.asm	/^c01125d7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01125da	obj/kernel.asm	/^c01125da:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01125de	obj/kernel.asm	/^c01125de:	75 18                	jne    c01125f8 <bitmap_create+0x9f>$/;"	l
c01125e0	obj/kernel.asm	/^c01125e0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01125e3	obj/kernel.asm	/^c01125e3:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01125e6	obj/kernel.asm	/^c01125e6:	e8 cc 4e ff ff       	call   c01074b7 <kfree>$/;"	l
c01125eb	obj/kernel.asm	/^c01125eb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01125ee	obj/kernel.asm	/^c01125ee:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01125f3	obj/kernel.asm	/^c01125f3:	e9 da 00 00 00       	jmp    c01126d2 <bitmap_create+0x179>$/;"	l
c01125f8	obj/kernel.asm	/^c01125f8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01125fb	obj/kernel.asm	/^c01125fb:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01125fe	obj/kernel.asm	/^c01125fe:	89 10                	mov    %edx,(%eax)$/;"	l
c0112600	obj/kernel.asm	/^c0112600:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112603	obj/kernel.asm	/^c0112603:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0112606	obj/kernel.asm	/^c0112606:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0112609	obj/kernel.asm	/^c0112609:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011260c	obj/kernel.asm	/^c011260c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c011260f	obj/kernel.asm	/^c011260f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0112612	obj/kernel.asm	/^c0112612:	50                   	push   %eax$/;"	l
c0112613	obj/kernel.asm	/^c0112613:	6a ff                	push   $0xffffffff$/;"	l
c0112615	obj/kernel.asm	/^c0112615:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0112618	obj/kernel.asm	/^c0112618:	e8 cf 09 00 00       	call   c0112fec <memset>$/;"	l
c011261d	obj/kernel.asm	/^c011261d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112620	obj/kernel.asm	/^c0112620:	89 c2                	mov    %eax,%edx$/;"	l
c0112622	obj/kernel.asm	/^c0112622:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112625	obj/kernel.asm	/^c0112625:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0112628	obj/kernel.asm	/^c0112628:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011262b	obj/kernel.asm	/^c011262b:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c011262e	obj/kernel.asm	/^c011262e:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0112631	obj/kernel.asm	/^c0112631:	0f 84 98 00 00 00    	je     c01126cf <bitmap_create+0x176>$/;"	l
c0112637	obj/kernel.asm	/^c0112637:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011263a	obj/kernel.asm	/^c011263a:	83 e8 01             	sub    $0x1,%eax$/;"	l
c011263d	obj/kernel.asm	/^c011263d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0112640	obj/kernel.asm	/^c0112640:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0112643	obj/kernel.asm	/^c0112643:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0112646	obj/kernel.asm	/^c0112646:	89 c2                	mov    %eax,%edx$/;"	l
c0112648	obj/kernel.asm	/^c0112648:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011264b	obj/kernel.asm	/^c011264b:	29 d0                	sub    %edx,%eax$/;"	l
c011264d	obj/kernel.asm	/^c011264d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112650	obj/kernel.asm	/^c0112650:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112653	obj/kernel.asm	/^c0112653:	c1 e8 05             	shr    $0x5,%eax$/;"	l
c0112656	obj/kernel.asm	/^c0112656:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0112659	obj/kernel.asm	/^c0112659:	74 16                	je     c0112671 <bitmap_create+0x118>$/;"	l
c011265b	obj/kernel.asm	/^c011265b:	68 1e 79 11 c0       	push   $0xc011791e$/;"	l
c0112660	obj/kernel.asm	/^c0112660:	68 f4 78 11 c0       	push   $0xc01178f4$/;"	l
c0112665	obj/kernel.asm	/^c0112665:	6a 2a                	push   $0x2a$/;"	l
c0112667	obj/kernel.asm	/^c0112667:	68 09 79 11 c0       	push   $0xc0117909$/;"	l
c011266c	obj/kernel.asm	/^c011266c:	e8 5e de fe ff       	call   c01004cf <__panic>$/;"	l
c0112671	obj/kernel.asm	/^c0112671:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112675	obj/kernel.asm	/^c0112675:	74 06                	je     c011267d <bitmap_create+0x124>$/;"	l
c0112677	obj/kernel.asm	/^c0112677:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%ebp)$/;"	l
c011267b	obj/kernel.asm	/^c011267b:	76 16                	jbe    c0112693 <bitmap_create+0x13a>$/;"	l
c011267d	obj/kernel.asm	/^c011267d:	68 38 79 11 c0       	push   $0xc0117938$/;"	l
c0112682	obj/kernel.asm	/^c0112682:	68 f4 78 11 c0       	push   $0xc01178f4$/;"	l
c0112687	obj/kernel.asm	/^c0112687:	6a 2b                	push   $0x2b$/;"	l
c0112689	obj/kernel.asm	/^c0112689:	68 09 79 11 c0       	push   $0xc0117909$/;"	l
c011268e	obj/kernel.asm	/^c011268e:	e8 3c de fe ff       	call   c01004cf <__panic>$/;"	l
c0112693	obj/kernel.asm	/^c0112693:	eb 34                	jmp    c01126c9 <bitmap_create+0x170>$/;"	l
c0112695	obj/kernel.asm	/^c0112695:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112698	obj/kernel.asm	/^c0112698:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011269b	obj/kernel.asm	/^c011269b:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c011269e	obj/kernel.asm	/^c011269e:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c01126a1	obj/kernel.asm	/^c01126a1:	01 c2                	add    %eax,%edx$/;"	l
c01126a3	obj/kernel.asm	/^c01126a3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01126a6	obj/kernel.asm	/^c01126a6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01126a9	obj/kernel.asm	/^c01126a9:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c01126ac	obj/kernel.asm	/^c01126ac:	c1 e1 02             	shl    $0x2,%ecx$/;"	l
c01126af	obj/kernel.asm	/^c01126af:	01 c8                	add    %ecx,%eax$/;"	l
c01126b1	obj/kernel.asm	/^c01126b1:	8b 18                	mov    (%eax),%ebx$/;"	l
c01126b3	obj/kernel.asm	/^c01126b3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01126b6	obj/kernel.asm	/^c01126b6:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
c01126bb	obj/kernel.asm	/^c01126bb:	89 c1                	mov    %eax,%ecx$/;"	l
c01126bd	obj/kernel.asm	/^c01126bd:	d3 e6                	shl    %cl,%esi$/;"	d
c01126bf	obj/kernel.asm	/^c01126bf:	89 f0                	mov    %esi,%eax$/;"	l
c01126c1	obj/kernel.asm	/^c01126c1:	31 d8                	xor    %ebx,%eax$/;"	l
c01126c3	obj/kernel.asm	/^c01126c3:	89 02                	mov    %eax,(%edx)$/;"	l
c01126c5	obj/kernel.asm	/^c01126c5:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01126c9	obj/kernel.asm	/^c01126c9:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%ebp)$/;"	l
c01126cd	obj/kernel.asm	/^c01126cd:	76 c6                	jbe    c0112695 <bitmap_create+0x13c>$/;"	l
c01126cf	obj/kernel.asm	/^c01126cf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01126d2	obj/kernel.asm	/^c01126d2:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c01126d5	obj/kernel.asm	/^c01126d5:	5b                   	pop    %ebx$/;"	l
c01126d6	obj/kernel.asm	/^c01126d6:	5e                   	pop    %esi$/;"	l
c01126d7	obj/kernel.asm	/^c01126d7:	5d                   	pop    %ebp$/;"	l
c01126d8	obj/kernel.asm	/^c01126d8:	c3                   	ret    $/;"	l
c01126d9	obj/kernel.asm	/^c01126d9 <bitmap_alloc>:$/;"	l
c01126d9	obj/kernel.asm	/^c01126d9:	55                   	push   %ebp$/;"	l
c01126da	obj/kernel.asm	/^c01126da:	89 e5                	mov    %esp,%ebp$/;"	l
c01126dc	obj/kernel.asm	/^c01126dc:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01126df	obj/kernel.asm	/^c01126df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01126e2	obj/kernel.asm	/^c01126e2:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01126e5	obj/kernel.asm	/^c01126e5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01126e8	obj/kernel.asm	/^c01126e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01126eb	obj/kernel.asm	/^c01126eb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01126ee	obj/kernel.asm	/^c01126ee:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01126f1	obj/kernel.asm	/^c01126f1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01126f8	obj/kernel.asm	/^c01126f8:	e9 ad 00 00 00       	jmp    c01127aa <bitmap_alloc+0xd1>$/;"	l
c01126fd	obj/kernel.asm	/^c01126fd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112700	obj/kernel.asm	/^c0112700:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0112707	obj/kernel.asm	/^c0112707:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011270a	obj/kernel.asm	/^c011270a:	01 d0                	add    %edx,%eax$/;"	l
c011270c	obj/kernel.asm	/^c011270c:	8b 00                	mov    (%eax),%eax$/;"	l
c011270e	obj/kernel.asm	/^c011270e:	85 c0                	test   %eax,%eax$/;"	l
c0112710	obj/kernel.asm	/^c0112710:	0f 84 90 00 00 00    	je     c01127a6 <bitmap_alloc+0xcd>$/;"	l
c0112716	obj/kernel.asm	/^c0112716:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c011271d	obj/kernel.asm	/^c011271d:	eb 6b                	jmp    c011278a <bitmap_alloc+0xb1>$/;"	l
c011271f	obj/kernel.asm	/^c011271f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112722	obj/kernel.asm	/^c0112722:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0112727	obj/kernel.asm	/^c0112727:	89 c1                	mov    %eax,%ecx$/;"	l
c0112729	obj/kernel.asm	/^c0112729:	d3 e2                	shl    %cl,%edx$/;"	d
c011272b	obj/kernel.asm	/^c011272b:	89 d0                	mov    %edx,%eax$/;"	l
c011272d	obj/kernel.asm	/^c011272d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0112730	obj/kernel.asm	/^c0112730:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112733	obj/kernel.asm	/^c0112733:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c011273a	obj/kernel.asm	/^c011273a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011273d	obj/kernel.asm	/^c011273d:	01 d0                	add    %edx,%eax$/;"	l
c011273f	obj/kernel.asm	/^c011273f:	8b 00                	mov    (%eax),%eax$/;"	l
c0112741	obj/kernel.asm	/^c0112741:	23 45 e4             	and    -0x1c(%ebp),%eax$/;"	l
c0112744	obj/kernel.asm	/^c0112744:	85 c0                	test   %eax,%eax$/;"	l
c0112746	obj/kernel.asm	/^c0112746:	74 3e                	je     c0112786 <bitmap_alloc+0xad>$/;"	l
c0112748	obj/kernel.asm	/^c0112748:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011274b	obj/kernel.asm	/^c011274b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0112752	obj/kernel.asm	/^c0112752:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112755	obj/kernel.asm	/^c0112755:	01 c2                	add    %eax,%edx$/;"	l
c0112757	obj/kernel.asm	/^c0112757:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011275a	obj/kernel.asm	/^c011275a:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx$/;"	l
c0112761	obj/kernel.asm	/^c0112761:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112764	obj/kernel.asm	/^c0112764:	01 c8                	add    %ecx,%eax$/;"	l
c0112766	obj/kernel.asm	/^c0112766:	8b 00                	mov    (%eax),%eax$/;"	l
c0112768	obj/kernel.asm	/^c0112768:	33 45 e4             	xor    -0x1c(%ebp),%eax$/;"	l
c011276b	obj/kernel.asm	/^c011276b:	89 02                	mov    %eax,(%edx)$/;"	l
c011276d	obj/kernel.asm	/^c011276d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112770	obj/kernel.asm	/^c0112770:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0112773	obj/kernel.asm	/^c0112773:	89 c2                	mov    %eax,%edx$/;"	l
c0112775	obj/kernel.asm	/^c0112775:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112778	obj/kernel.asm	/^c0112778:	01 c2                	add    %eax,%edx$/;"	l
c011277a	obj/kernel.asm	/^c011277a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011277d	obj/kernel.asm	/^c011277d:	89 10                	mov    %edx,(%eax)$/;"	l
c011277f	obj/kernel.asm	/^c011277f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112784	obj/kernel.asm	/^c0112784:	eb 35                	jmp    c01127bb <bitmap_alloc+0xe2>$/;"	l
c0112786	obj/kernel.asm	/^c0112786:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c011278a	obj/kernel.asm	/^c011278a:	83 7d f0 1f          	cmpl   $0x1f,-0x10(%ebp)$/;"	l
c011278e	obj/kernel.asm	/^c011278e:	76 8f                	jbe    c011271f <bitmap_alloc+0x46>$/;"	l
c0112790	obj/kernel.asm	/^c0112790:	68 5d 79 11 c0       	push   $0xc011795d$/;"	l
c0112795	obj/kernel.asm	/^c0112795:	68 f4 78 11 c0       	push   $0xc01178f4$/;"	l
c011279a	obj/kernel.asm	/^c011279a:	6a 43                	push   $0x43$/;"	l
c011279c	obj/kernel.asm	/^c011279c:	68 09 79 11 c0       	push   $0xc0117909$/;"	l
c01127a1	obj/kernel.asm	/^c01127a1:	e8 29 dd fe ff       	call   c01004cf <__panic>$/;"	l
c01127a6	obj/kernel.asm	/^c01127a6:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01127aa	obj/kernel.asm	/^c01127aa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01127ad	obj/kernel.asm	/^c01127ad:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c01127b0	obj/kernel.asm	/^c01127b0:	0f 82 47 ff ff ff    	jb     c01126fd <bitmap_alloc+0x24>$/;"	l
c01127b6	obj/kernel.asm	/^c01127b6:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01127bb	obj/kernel.asm	/^c01127bb:	c9                   	leave  $/;"	l
c01127bc	obj/kernel.asm	/^c01127bc:	c3                   	ret    $/;"	l
c01127bd	obj/kernel.asm	/^c01127bd <bitmap_translate>:$/;"	l
c01127bd	obj/kernel.asm	/^c01127bd:	55                   	push   %ebp$/;"	l
c01127be	obj/kernel.asm	/^c01127be:	89 e5                	mov    %esp,%ebp$/;"	l
c01127c0	obj/kernel.asm	/^c01127c0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01127c3	obj/kernel.asm	/^c01127c3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01127c6	obj/kernel.asm	/^c01127c6:	8b 00                	mov    (%eax),%eax$/;"	l
c01127c8	obj/kernel.asm	/^c01127c8:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01127cb	obj/kernel.asm	/^c01127cb:	77 16                	ja     c01127e3 <bitmap_translate+0x26>$/;"	l
c01127cd	obj/kernel.asm	/^c01127cd:	68 5f 79 11 c0       	push   $0xc011795f$/;"	l
c01127d2	obj/kernel.asm	/^c01127d2:	68 f4 78 11 c0       	push   $0xc01178f4$/;"	l
c01127d7	obj/kernel.asm	/^c01127d7:	6a 4c                	push   $0x4c$/;"	l
c01127d9	obj/kernel.asm	/^c01127d9:	68 09 79 11 c0       	push   $0xc0117909$/;"	l
c01127de	obj/kernel.asm	/^c01127de:	e8 ec dc fe ff       	call   c01004cf <__panic>$/;"	l
c01127e3	obj/kernel.asm	/^c01127e3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01127e6	obj/kernel.asm	/^c01127e6:	c1 e8 05             	shr    $0x5,%eax$/;"	l
c01127e9	obj/kernel.asm	/^c01127e9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01127ec	obj/kernel.asm	/^c01127ec:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01127ef	obj/kernel.asm	/^c01127ef:	83 e0 1f             	and    $0x1f,%eax$/;"	l
c01127f2	obj/kernel.asm	/^c01127f2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01127f5	obj/kernel.asm	/^c01127f5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01127f8	obj/kernel.asm	/^c01127f8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01127fb	obj/kernel.asm	/^c01127fb:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01127fe	obj/kernel.asm	/^c01127fe:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0112801	obj/kernel.asm	/^c0112801:	01 c2                	add    %eax,%edx$/;"	l
c0112803	obj/kernel.asm	/^c0112803:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112806	obj/kernel.asm	/^c0112806:	89 10                	mov    %edx,(%eax)$/;"	l
c0112808	obj/kernel.asm	/^c0112808:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011280b	obj/kernel.asm	/^c011280b:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0112810	obj/kernel.asm	/^c0112810:	89 c1                	mov    %eax,%ecx$/;"	l
c0112812	obj/kernel.asm	/^c0112812:	d3 e2                	shl    %cl,%edx$/;"	d
c0112814	obj/kernel.asm	/^c0112814:	89 d0                	mov    %edx,%eax$/;"	l
c0112816	obj/kernel.asm	/^c0112816:	89 c2                	mov    %eax,%edx$/;"	l
c0112818	obj/kernel.asm	/^c0112818:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c011281b	obj/kernel.asm	/^c011281b:	89 10                	mov    %edx,(%eax)$/;"	l
c011281d	obj/kernel.asm	/^c011281d:	c9                   	leave  $/;"	l
c011281e	obj/kernel.asm	/^c011281e:	c3                   	ret    $/;"	l
c011281f	obj/kernel.asm	/^c011281f <bitmap_test>:$/;"	l
c011281f	obj/kernel.asm	/^c011281f:	55                   	push   %ebp$/;"	l
c0112820	obj/kernel.asm	/^c0112820:	89 e5                	mov    %esp,%ebp$/;"	l
c0112822	obj/kernel.asm	/^c0112822:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0112825	obj/kernel.asm	/^c0112825:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0112828	obj/kernel.asm	/^c0112828:	50                   	push   %eax$/;"	l
c0112829	obj/kernel.asm	/^c0112829:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c011282c	obj/kernel.asm	/^c011282c:	50                   	push   %eax$/;"	l
c011282d	obj/kernel.asm	/^c011282d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0112830	obj/kernel.asm	/^c0112830:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112833	obj/kernel.asm	/^c0112833:	e8 85 ff ff ff       	call   c01127bd <bitmap_translate>$/;"	l
c0112838	obj/kernel.asm	/^c0112838:	83 c4 10             	add    $0x10,%esp$/;"	l
c011283b	obj/kernel.asm	/^c011283b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011283e	obj/kernel.asm	/^c011283e:	8b 10                	mov    (%eax),%edx$/;"	l
c0112840	obj/kernel.asm	/^c0112840:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112843	obj/kernel.asm	/^c0112843:	21 d0                	and    %edx,%eax$/;"	l
c0112845	obj/kernel.asm	/^c0112845:	c9                   	leave  $/;"	l
c0112846	obj/kernel.asm	/^c0112846:	c3                   	ret    $/;"	l
c0112847	obj/kernel.asm	/^c0112847 <bitmap_free>:$/;"	l
c0112847	obj/kernel.asm	/^c0112847:	55                   	push   %ebp$/;"	l
c0112848	obj/kernel.asm	/^c0112848:	89 e5                	mov    %esp,%ebp$/;"	l
c011284a	obj/kernel.asm	/^c011284a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011284d	obj/kernel.asm	/^c011284d:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0112850	obj/kernel.asm	/^c0112850:	50                   	push   %eax$/;"	l
c0112851	obj/kernel.asm	/^c0112851:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c0112854	obj/kernel.asm	/^c0112854:	50                   	push   %eax$/;"	l
c0112855	obj/kernel.asm	/^c0112855:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0112858	obj/kernel.asm	/^c0112858:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011285b	obj/kernel.asm	/^c011285b:	e8 5d ff ff ff       	call   c01127bd <bitmap_translate>$/;"	l
c0112860	obj/kernel.asm	/^c0112860:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112863	obj/kernel.asm	/^c0112863:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112866	obj/kernel.asm	/^c0112866:	8b 10                	mov    (%eax),%edx$/;"	l
c0112868	obj/kernel.asm	/^c0112868:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011286b	obj/kernel.asm	/^c011286b:	21 d0                	and    %edx,%eax$/;"	l
c011286d	obj/kernel.asm	/^c011286d:	85 c0                	test   %eax,%eax$/;"	l
c011286f	obj/kernel.asm	/^c011286f:	74 16                	je     c0112887 <bitmap_free+0x40>$/;"	l
c0112871	obj/kernel.asm	/^c0112871:	68 75 79 11 c0       	push   $0xc0117975$/;"	l
c0112876	obj/kernel.asm	/^c0112876:	68 f4 78 11 c0       	push   $0xc01178f4$/;"	l
c011287b	obj/kernel.asm	/^c011287b:	6a 5f                	push   $0x5f$/;"	l
c011287d	obj/kernel.asm	/^c011287d:	68 09 79 11 c0       	push   $0xc0117909$/;"	l
c0112882	obj/kernel.asm	/^c0112882:	e8 48 dc fe ff       	call   c01004cf <__panic>$/;"	l
c0112887	obj/kernel.asm	/^c0112887:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011288a	obj/kernel.asm	/^c011288a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c011288d	obj/kernel.asm	/^c011288d:	8b 0a                	mov    (%edx),%ecx$/;"	l
c011288f	obj/kernel.asm	/^c011288f:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0112892	obj/kernel.asm	/^c0112892:	09 ca                	or     %ecx,%edx$/;"	l
c0112894	obj/kernel.asm	/^c0112894:	89 10                	mov    %edx,(%eax)$/;"	l
c0112896	obj/kernel.asm	/^c0112896:	c9                   	leave  $/;"	l
c0112897	obj/kernel.asm	/^c0112897:	c3                   	ret    $/;"	l
c0112898	obj/kernel.asm	/^c0112898 <bitmap_destroy>:$/;"	l
c0112898	obj/kernel.asm	/^c0112898:	55                   	push   %ebp$/;"	l
c0112899	obj/kernel.asm	/^c0112899:	89 e5                	mov    %esp,%ebp$/;"	l
c011289b	obj/kernel.asm	/^c011289b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c011289e	obj/kernel.asm	/^c011289e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01128a1	obj/kernel.asm	/^c01128a1:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01128a4	obj/kernel.asm	/^c01128a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01128a7	obj/kernel.asm	/^c01128a7:	50                   	push   %eax$/;"	l
c01128a8	obj/kernel.asm	/^c01128a8:	e8 0a 4c ff ff       	call   c01074b7 <kfree>$/;"	l
c01128ad	obj/kernel.asm	/^c01128ad:	83 c4 10             	add    $0x10,%esp$/;"	l
c01128b0	obj/kernel.asm	/^c01128b0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01128b3	obj/kernel.asm	/^c01128b3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01128b6	obj/kernel.asm	/^c01128b6:	e8 fc 4b ff ff       	call   c01074b7 <kfree>$/;"	l
c01128bb	obj/kernel.asm	/^c01128bb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01128be	obj/kernel.asm	/^c01128be:	c9                   	leave  $/;"	l
c01128bf	obj/kernel.asm	/^c01128bf:	c3                   	ret    $/;"	l
c01128c0	obj/kernel.asm	/^c01128c0 <bitmap_getdata>:$/;"	l
c01128c0	obj/kernel.asm	/^c01128c0:	55                   	push   %ebp$/;"	l
c01128c1	obj/kernel.asm	/^c01128c1:	89 e5                	mov    %esp,%ebp$/;"	l
c01128c3	obj/kernel.asm	/^c01128c3:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01128c7	obj/kernel.asm	/^c01128c7:	74 12                	je     c01128db <bitmap_getdata+0x1b>$/;"	l
c01128c9	obj/kernel.asm	/^c01128c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01128cc	obj/kernel.asm	/^c01128cc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01128cf	obj/kernel.asm	/^c01128cf:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c01128d6	obj/kernel.asm	/^c01128d6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01128d9	obj/kernel.asm	/^c01128d9:	89 10                	mov    %edx,(%eax)$/;"	l
c01128db	obj/kernel.asm	/^c01128db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01128de	obj/kernel.asm	/^c01128de:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01128e1	obj/kernel.asm	/^c01128e1:	5d                   	pop    %ebp$/;"	l
c01128e2	obj/kernel.asm	/^c01128e2:	c3                   	ret    $/;"	l
c01128e3	obj/kernel.asm	/^c01128e3 <sfs_rwblock_nolock>:$/;"	l
c01128e3	obj/kernel.asm	/^c01128e3:	55                   	push   %ebp$/;"	l
c01128e4	obj/kernel.asm	/^c01128e4:	89 e5                	mov    %esp,%ebp$/;"	l
c01128e6	obj/kernel.asm	/^c01128e6:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01128e9	obj/kernel.asm	/^c01128e9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01128ed	obj/kernel.asm	/^c01128ed:	75 06                	jne    c01128f5 <sfs_rwblock_nolock+0x12>$/;"	l
c01128ef	obj/kernel.asm	/^c01128ef:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c01128f3	obj/kernel.asm	/^c01128f3:	75 0b                	jne    c0112900 <sfs_rwblock_nolock+0x1d>$/;"	l
c01128f5	obj/kernel.asm	/^c01128f5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01128f8	obj/kernel.asm	/^c01128f8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01128fb	obj/kernel.asm	/^c01128fb:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c01128fe	obj/kernel.asm	/^c01128fe:	77 16                	ja     c0112916 <sfs_rwblock_nolock+0x33>$/;"	l
c0112900	obj/kernel.asm	/^c0112900:	68 88 79 11 c0       	push   $0xc0117988$/;"	l
c0112905	obj/kernel.asm	/^c0112905:	68 bc 79 11 c0       	push   $0xc01179bc$/;"	l
c011290a	obj/kernel.asm	/^c011290a:	6a 15                	push   $0x15$/;"	l
c011290c	obj/kernel.asm	/^c011290c:	68 d1 79 11 c0       	push   $0xc01179d1$/;"	l
c0112911	obj/kernel.asm	/^c0112911:	e8 b9 db fe ff       	call   c01004cf <__panic>$/;"	l
c0112916	obj/kernel.asm	/^c0112916:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112919	obj/kernel.asm	/^c0112919:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c011291c	obj/kernel.asm	/^c011291c:	50                   	push   %eax$/;"	l
c011291d	obj/kernel.asm	/^c011291d:	68 00 10 00 00       	push   $0x1000$/;"	l
c0112922	obj/kernel.asm	/^c0112922:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0112925	obj/kernel.asm	/^c0112925:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c0112928	obj/kernel.asm	/^c0112928:	50                   	push   %eax$/;"	l
c0112929	obj/kernel.asm	/^c0112929:	e8 ea 85 ff ff       	call   c010af18 <iobuf_init>$/;"	l
c011292e	obj/kernel.asm	/^c011292e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112931	obj/kernel.asm	/^c0112931:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112934	obj/kernel.asm	/^c0112934:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112937	obj/kernel.asm	/^c0112937:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011293a	obj/kernel.asm	/^c011293a:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c011293d	obj/kernel.asm	/^c011293d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0112940	obj/kernel.asm	/^c0112940:	8b 52 2c             	mov    0x2c(%edx),%edx$/;"	l
c0112943	obj/kernel.asm	/^c0112943:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0112946	obj/kernel.asm	/^c0112946:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0112949	obj/kernel.asm	/^c0112949:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c011294c	obj/kernel.asm	/^c011294c:	52                   	push   %edx$/;"	l
c011294d	obj/kernel.asm	/^c011294d:	ff d0                	call   *%eax$/;"	l
c011294f	obj/kernel.asm	/^c011294f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112952	obj/kernel.asm	/^c0112952:	c9                   	leave  $/;"	l
c0112953	obj/kernel.asm	/^c0112953:	c3                   	ret    $/;"	l
c0112954	obj/kernel.asm	/^c0112954 <sfs_rwblock>:$/;"	l
c0112954	obj/kernel.asm	/^c0112954:	55                   	push   %ebp$/;"	l
c0112955	obj/kernel.asm	/^c0112955:	89 e5                	mov    %esp,%ebp$/;"	l
c0112957	obj/kernel.asm	/^c0112957:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011295a	obj/kernel.asm	/^c011295a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0112961	obj/kernel.asm	/^c0112961:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112964	obj/kernel.asm	/^c0112964:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112967	obj/kernel.asm	/^c0112967:	e8 4e d5 ff ff       	call   c010feba <lock_sfs_io>$/;"	l
c011296c	obj/kernel.asm	/^c011296c:	83 c4 10             	add    $0x10,%esp$/;"	l
c011296f	obj/kernel.asm	/^c011296f:	eb 33                	jmp    c01129a4 <sfs_rwblock+0x50>$/;"	l
c0112971	obj/kernel.asm	/^c0112971:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112974	obj/kernel.asm	/^c0112974:	6a 01                	push   $0x1$/;"	l
c0112976	obj/kernel.asm	/^c0112976:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
c0112979	obj/kernel.asm	/^c0112979:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c011297c	obj/kernel.asm	/^c011297c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c011297f	obj/kernel.asm	/^c011297f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112982	obj/kernel.asm	/^c0112982:	e8 5c ff ff ff       	call   c01128e3 <sfs_rwblock_nolock>$/;"	l
c0112987	obj/kernel.asm	/^c0112987:	83 c4 20             	add    $0x20,%esp$/;"	l
c011298a	obj/kernel.asm	/^c011298a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011298d	obj/kernel.asm	/^c011298d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112991	obj/kernel.asm	/^c0112991:	74 02                	je     c0112995 <sfs_rwblock+0x41>$/;"	l
c0112993	obj/kernel.asm	/^c0112993:	eb 15                	jmp    c01129aa <sfs_rwblock+0x56>$/;"	l
c0112995	obj/kernel.asm	/^c0112995:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0112999	obj/kernel.asm	/^c0112999:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c011299d	obj/kernel.asm	/^c011299d:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c01129a4	obj/kernel.asm	/^c01129a4:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01129a8	obj/kernel.asm	/^c01129a8:	75 c7                	jne    c0112971 <sfs_rwblock+0x1d>$/;"	l
c01129aa	obj/kernel.asm	/^c01129aa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01129ad	obj/kernel.asm	/^c01129ad:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01129b0	obj/kernel.asm	/^c01129b0:	e8 39 d5 ff ff       	call   c010feee <unlock_sfs_io>$/;"	l
c01129b5	obj/kernel.asm	/^c01129b5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01129b8	obj/kernel.asm	/^c01129b8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01129bb	obj/kernel.asm	/^c01129bb:	c9                   	leave  $/;"	l
c01129bc	obj/kernel.asm	/^c01129bc:	c3                   	ret    $/;"	l
c01129bd	obj/kernel.asm	/^c01129bd <sfs_rblock>:$/;"	l
c01129bd	obj/kernel.asm	/^c01129bd:	55                   	push   %ebp$/;"	l
c01129be	obj/kernel.asm	/^c01129be:	89 e5                	mov    %esp,%ebp$/;"	l
c01129c0	obj/kernel.asm	/^c01129c0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01129c3	obj/kernel.asm	/^c01129c3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01129c6	obj/kernel.asm	/^c01129c6:	6a 00                	push   $0x0$/;"	l
c01129c8	obj/kernel.asm	/^c01129c8:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c01129cb	obj/kernel.asm	/^c01129cb:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01129ce	obj/kernel.asm	/^c01129ce:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01129d1	obj/kernel.asm	/^c01129d1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01129d4	obj/kernel.asm	/^c01129d4:	e8 7b ff ff ff       	call   c0112954 <sfs_rwblock>$/;"	l
c01129d9	obj/kernel.asm	/^c01129d9:	83 c4 20             	add    $0x20,%esp$/;"	l
c01129dc	obj/kernel.asm	/^c01129dc:	c9                   	leave  $/;"	l
c01129dd	obj/kernel.asm	/^c01129dd:	c3                   	ret    $/;"	l
c01129de	obj/kernel.asm	/^c01129de <sfs_wblock>:$/;"	l
c01129de	obj/kernel.asm	/^c01129de:	55                   	push   %ebp$/;"	l
c01129df	obj/kernel.asm	/^c01129df:	89 e5                	mov    %esp,%ebp$/;"	l
c01129e1	obj/kernel.asm	/^c01129e1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01129e4	obj/kernel.asm	/^c01129e4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01129e7	obj/kernel.asm	/^c01129e7:	6a 01                	push   $0x1$/;"	l
c01129e9	obj/kernel.asm	/^c01129e9:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c01129ec	obj/kernel.asm	/^c01129ec:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01129ef	obj/kernel.asm	/^c01129ef:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01129f2	obj/kernel.asm	/^c01129f2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01129f5	obj/kernel.asm	/^c01129f5:	e8 5a ff ff ff       	call   c0112954 <sfs_rwblock>$/;"	l
c01129fa	obj/kernel.asm	/^c01129fa:	83 c4 20             	add    $0x20,%esp$/;"	l
c01129fd	obj/kernel.asm	/^c01129fd:	c9                   	leave  $/;"	l
c01129fe	obj/kernel.asm	/^c01129fe:	c3                   	ret    $/;"	l
c01129ff	obj/kernel.asm	/^c01129ff <sfs_rbuf>:$/;"	l
c01129ff	obj/kernel.asm	/^c01129ff:	55                   	push   %ebp$/;"	l
c0112a00	obj/kernel.asm	/^c0112a00:	89 e5                	mov    %esp,%ebp$/;"	l
c0112a02	obj/kernel.asm	/^c0112a02:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0112a05	obj/kernel.asm	/^c0112a05:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0112a09	obj/kernel.asm	/^c0112a09:	78 18                	js     c0112a23 <sfs_rbuf+0x24>$/;"	l
c0112a0b	obj/kernel.asm	/^c0112a0b:	81 7d 18 ff 0f 00 00 	cmpl   $0xfff,0x18(%ebp)$/;"	l
c0112a12	obj/kernel.asm	/^c0112a12:	7f 0f                	jg     c0112a23 <sfs_rbuf+0x24>$/;"	l
c0112a14	obj/kernel.asm	/^c0112a14:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
c0112a17	obj/kernel.asm	/^c0112a17:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112a1a	obj/kernel.asm	/^c0112a1a:	01 d0                	add    %edx,%eax$/;"	l
c0112a1c	obj/kernel.asm	/^c0112a1c:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
c0112a21	obj/kernel.asm	/^c0112a21:	76 16                	jbe    c0112a39 <sfs_rbuf+0x3a>$/;"	l
c0112a23	obj/kernel.asm	/^c0112a23:	68 e8 79 11 c0       	push   $0xc01179e8$/;"	l
c0112a28	obj/kernel.asm	/^c0112a28:	68 bc 79 11 c0       	push   $0xc01179bc$/;"	l
c0112a2d	obj/kernel.asm	/^c0112a2d:	6a 55                	push   $0x55$/;"	l
c0112a2f	obj/kernel.asm	/^c0112a2f:	68 d1 79 11 c0       	push   $0xc01179d1$/;"	l
c0112a34	obj/kernel.asm	/^c0112a34:	e8 96 da fe ff       	call   c01004cf <__panic>$/;"	l
c0112a39	obj/kernel.asm	/^c0112a39:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112a3c	obj/kernel.asm	/^c0112a3c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112a3f	obj/kernel.asm	/^c0112a3f:	e8 76 d4 ff ff       	call   c010feba <lock_sfs_io>$/;"	l
c0112a44	obj/kernel.asm	/^c0112a44:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112a47	obj/kernel.asm	/^c0112a47:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112a4a	obj/kernel.asm	/^c0112a4a:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0112a4d	obj/kernel.asm	/^c0112a4d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112a50	obj/kernel.asm	/^c0112a50:	6a 01                	push   $0x1$/;"	l
c0112a52	obj/kernel.asm	/^c0112a52:	6a 00                	push   $0x0$/;"	l
c0112a54	obj/kernel.asm	/^c0112a54:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0112a57	obj/kernel.asm	/^c0112a57:	50                   	push   %eax$/;"	l
c0112a58	obj/kernel.asm	/^c0112a58:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112a5b	obj/kernel.asm	/^c0112a5b:	e8 83 fe ff ff       	call   c01128e3 <sfs_rwblock_nolock>$/;"	l
c0112a60	obj/kernel.asm	/^c0112a60:	83 c4 20             	add    $0x20,%esp$/;"	l
c0112a63	obj/kernel.asm	/^c0112a63:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112a66	obj/kernel.asm	/^c0112a66:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112a6a	obj/kernel.asm	/^c0112a6a:	75 1d                	jne    c0112a89 <sfs_rbuf+0x8a>$/;"	l
c0112a6c	obj/kernel.asm	/^c0112a6c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112a6f	obj/kernel.asm	/^c0112a6f:	8b 50 38             	mov    0x38(%eax),%edx$/;"	l
c0112a72	obj/kernel.asm	/^c0112a72:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0112a75	obj/kernel.asm	/^c0112a75:	01 d0                	add    %edx,%eax$/;"	l
c0112a77	obj/kernel.asm	/^c0112a77:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0112a7a	obj/kernel.asm	/^c0112a7a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0112a7d	obj/kernel.asm	/^c0112a7d:	50                   	push   %eax$/;"	l
c0112a7e	obj/kernel.asm	/^c0112a7e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0112a81	obj/kernel.asm	/^c0112a81:	e8 49 06 00 00       	call   c01130cf <memcpy>$/;"	l
c0112a86	obj/kernel.asm	/^c0112a86:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112a89	obj/kernel.asm	/^c0112a89:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112a8c	obj/kernel.asm	/^c0112a8c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112a8f	obj/kernel.asm	/^c0112a8f:	e8 5a d4 ff ff       	call   c010feee <unlock_sfs_io>$/;"	l
c0112a94	obj/kernel.asm	/^c0112a94:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112a97	obj/kernel.asm	/^c0112a97:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112a9a	obj/kernel.asm	/^c0112a9a:	c9                   	leave  $/;"	l
c0112a9b	obj/kernel.asm	/^c0112a9b:	c3                   	ret    $/;"	l
c0112a9c	obj/kernel.asm	/^c0112a9c <sfs_wbuf>:$/;"	l
c0112a9c	obj/kernel.asm	/^c0112a9c:	55                   	push   %ebp$/;"	l
c0112a9d	obj/kernel.asm	/^c0112a9d:	89 e5                	mov    %esp,%ebp$/;"	l
c0112a9f	obj/kernel.asm	/^c0112a9f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0112aa2	obj/kernel.asm	/^c0112aa2:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0112aa6	obj/kernel.asm	/^c0112aa6:	78 18                	js     c0112ac0 <sfs_wbuf+0x24>$/;"	l
c0112aa8	obj/kernel.asm	/^c0112aa8:	81 7d 18 ff 0f 00 00 	cmpl   $0xfff,0x18(%ebp)$/;"	l
c0112aaf	obj/kernel.asm	/^c0112aaf:	7f 0f                	jg     c0112ac0 <sfs_wbuf+0x24>$/;"	l
c0112ab1	obj/kernel.asm	/^c0112ab1:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
c0112ab4	obj/kernel.asm	/^c0112ab4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112ab7	obj/kernel.asm	/^c0112ab7:	01 d0                	add    %edx,%eax$/;"	l
c0112ab9	obj/kernel.asm	/^c0112ab9:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
c0112abe	obj/kernel.asm	/^c0112abe:	76 16                	jbe    c0112ad6 <sfs_wbuf+0x3a>$/;"	l
c0112ac0	obj/kernel.asm	/^c0112ac0:	68 e8 79 11 c0       	push   $0xc01179e8$/;"	l
c0112ac5	obj/kernel.asm	/^c0112ac5:	68 bc 79 11 c0       	push   $0xc01179bc$/;"	l
c0112aca	obj/kernel.asm	/^c0112aca:	6a 6b                	push   $0x6b$/;"	l
c0112acc	obj/kernel.asm	/^c0112acc:	68 d1 79 11 c0       	push   $0xc01179d1$/;"	l
c0112ad1	obj/kernel.asm	/^c0112ad1:	e8 f9 d9 fe ff       	call   c01004cf <__panic>$/;"	l
c0112ad6	obj/kernel.asm	/^c0112ad6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112ad9	obj/kernel.asm	/^c0112ad9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112adc	obj/kernel.asm	/^c0112adc:	e8 d9 d3 ff ff       	call   c010feba <lock_sfs_io>$/;"	l
c0112ae1	obj/kernel.asm	/^c0112ae1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112ae4	obj/kernel.asm	/^c0112ae4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112ae7	obj/kernel.asm	/^c0112ae7:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0112aea	obj/kernel.asm	/^c0112aea:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112aed	obj/kernel.asm	/^c0112aed:	6a 01                	push   $0x1$/;"	l
c0112aef	obj/kernel.asm	/^c0112aef:	6a 00                	push   $0x0$/;"	l
c0112af1	obj/kernel.asm	/^c0112af1:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0112af4	obj/kernel.asm	/^c0112af4:	50                   	push   %eax$/;"	l
c0112af5	obj/kernel.asm	/^c0112af5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112af8	obj/kernel.asm	/^c0112af8:	e8 e6 fd ff ff       	call   c01128e3 <sfs_rwblock_nolock>$/;"	l
c0112afd	obj/kernel.asm	/^c0112afd:	83 c4 20             	add    $0x20,%esp$/;"	l
c0112b00	obj/kernel.asm	/^c0112b00:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112b03	obj/kernel.asm	/^c0112b03:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112b07	obj/kernel.asm	/^c0112b07:	75 3c                	jne    c0112b45 <sfs_wbuf+0xa9>$/;"	l
c0112b09	obj/kernel.asm	/^c0112b09:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112b0c	obj/kernel.asm	/^c0112b0c:	8b 50 38             	mov    0x38(%eax),%edx$/;"	l
c0112b0f	obj/kernel.asm	/^c0112b0f:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0112b12	obj/kernel.asm	/^c0112b12:	01 d0                	add    %edx,%eax$/;"	l
c0112b14	obj/kernel.asm	/^c0112b14:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0112b17	obj/kernel.asm	/^c0112b17:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0112b1a	obj/kernel.asm	/^c0112b1a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0112b1d	obj/kernel.asm	/^c0112b1d:	50                   	push   %eax$/;"	l
c0112b1e	obj/kernel.asm	/^c0112b1e:	e8 ac 05 00 00       	call   c01130cf <memcpy>$/;"	l
c0112b23	obj/kernel.asm	/^c0112b23:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112b26	obj/kernel.asm	/^c0112b26:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112b29	obj/kernel.asm	/^c0112b29:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0112b2c	obj/kernel.asm	/^c0112b2c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112b2f	obj/kernel.asm	/^c0112b2f:	6a 01                	push   $0x1$/;"	l
c0112b31	obj/kernel.asm	/^c0112b31:	6a 01                	push   $0x1$/;"	l
c0112b33	obj/kernel.asm	/^c0112b33:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0112b36	obj/kernel.asm	/^c0112b36:	50                   	push   %eax$/;"	l
c0112b37	obj/kernel.asm	/^c0112b37:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112b3a	obj/kernel.asm	/^c0112b3a:	e8 a4 fd ff ff       	call   c01128e3 <sfs_rwblock_nolock>$/;"	l
c0112b3f	obj/kernel.asm	/^c0112b3f:	83 c4 20             	add    $0x20,%esp$/;"	l
c0112b42	obj/kernel.asm	/^c0112b42:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112b45	obj/kernel.asm	/^c0112b45:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112b48	obj/kernel.asm	/^c0112b48:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112b4b	obj/kernel.asm	/^c0112b4b:	e8 9e d3 ff ff       	call   c010feee <unlock_sfs_io>$/;"	l
c0112b50	obj/kernel.asm	/^c0112b50:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112b53	obj/kernel.asm	/^c0112b53:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112b56	obj/kernel.asm	/^c0112b56:	c9                   	leave  $/;"	l
c0112b57	obj/kernel.asm	/^c0112b57:	c3                   	ret    $/;"	l
c0112b58	obj/kernel.asm	/^c0112b58 <sfs_sync_super>:$/;"	l
c0112b58	obj/kernel.asm	/^c0112b58:	55                   	push   %ebp$/;"	l
c0112b59	obj/kernel.asm	/^c0112b59:	89 e5                	mov    %esp,%ebp$/;"	l
c0112b5b	obj/kernel.asm	/^c0112b5b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0112b5e	obj/kernel.asm	/^c0112b5e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112b61	obj/kernel.asm	/^c0112b61:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112b64	obj/kernel.asm	/^c0112b64:	e8 51 d3 ff ff       	call   c010feba <lock_sfs_io>$/;"	l
c0112b69	obj/kernel.asm	/^c0112b69:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112b6c	obj/kernel.asm	/^c0112b6c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112b6f	obj/kernel.asm	/^c0112b6f:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0112b72	obj/kernel.asm	/^c0112b72:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0112b75	obj/kernel.asm	/^c0112b75:	68 00 10 00 00       	push   $0x1000$/;"	l
c0112b7a	obj/kernel.asm	/^c0112b7a:	6a 00                	push   $0x0$/;"	l
c0112b7c	obj/kernel.asm	/^c0112b7c:	50                   	push   %eax$/;"	l
c0112b7d	obj/kernel.asm	/^c0112b7d:	e8 6a 04 00 00       	call   c0112fec <memset>$/;"	l
c0112b82	obj/kernel.asm	/^c0112b82:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112b85	obj/kernel.asm	/^c0112b85:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0112b88	obj/kernel.asm	/^c0112b88:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112b8b	obj/kernel.asm	/^c0112b8b:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0112b8e	obj/kernel.asm	/^c0112b8e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0112b91	obj/kernel.asm	/^c0112b91:	6a 2c                	push   $0x2c$/;"	l
c0112b93	obj/kernel.asm	/^c0112b93:	52                   	push   %edx$/;"	l
c0112b94	obj/kernel.asm	/^c0112b94:	50                   	push   %eax$/;"	l
c0112b95	obj/kernel.asm	/^c0112b95:	e8 35 05 00 00       	call   c01130cf <memcpy>$/;"	l
c0112b9a	obj/kernel.asm	/^c0112b9a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112b9d	obj/kernel.asm	/^c0112b9d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112ba0	obj/kernel.asm	/^c0112ba0:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0112ba3	obj/kernel.asm	/^c0112ba3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112ba6	obj/kernel.asm	/^c0112ba6:	6a 00                	push   $0x0$/;"	l
c0112ba8	obj/kernel.asm	/^c0112ba8:	6a 01                	push   $0x1$/;"	l
c0112baa	obj/kernel.asm	/^c0112baa:	6a 00                	push   $0x0$/;"	l
c0112bac	obj/kernel.asm	/^c0112bac:	50                   	push   %eax$/;"	l
c0112bad	obj/kernel.asm	/^c0112bad:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112bb0	obj/kernel.asm	/^c0112bb0:	e8 2e fd ff ff       	call   c01128e3 <sfs_rwblock_nolock>$/;"	l
c0112bb5	obj/kernel.asm	/^c0112bb5:	83 c4 20             	add    $0x20,%esp$/;"	l
c0112bb8	obj/kernel.asm	/^c0112bb8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112bbb	obj/kernel.asm	/^c0112bbb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112bbe	obj/kernel.asm	/^c0112bbe:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112bc1	obj/kernel.asm	/^c0112bc1:	e8 28 d3 ff ff       	call   c010feee <unlock_sfs_io>$/;"	l
c0112bc6	obj/kernel.asm	/^c0112bc6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112bc9	obj/kernel.asm	/^c0112bc9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112bcc	obj/kernel.asm	/^c0112bcc:	c9                   	leave  $/;"	l
c0112bcd	obj/kernel.asm	/^c0112bcd:	c3                   	ret    $/;"	l
c0112bce	obj/kernel.asm	/^c0112bce <sfs_sync_freemap>:$/;"	l
c0112bce	obj/kernel.asm	/^c0112bce:	55                   	push   %ebp$/;"	l
c0112bcf	obj/kernel.asm	/^c0112bcf:	89 e5                	mov    %esp,%ebp$/;"	l
c0112bd1	obj/kernel.asm	/^c0112bd1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0112bd4	obj/kernel.asm	/^c0112bd4:	c7 45 f4 00 80 00 00 	movl   $0x8000,-0xc(%ebp)$/;"	l
c0112bdb	obj/kernel.asm	/^c0112bdb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112bde	obj/kernel.asm	/^c0112bde:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0112be1	obj/kernel.asm	/^c0112be1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112be4	obj/kernel.asm	/^c0112be4:	01 d0                	add    %edx,%eax$/;"	l
c0112be6	obj/kernel.asm	/^c0112be6:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0112be9	obj/kernel.asm	/^c0112be9:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0112bee	obj/kernel.asm	/^c0112bee:	f7 75 f4             	divl   -0xc(%ebp)$/;"	l
c0112bf1	obj/kernel.asm	/^c0112bf1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112bf4	obj/kernel.asm	/^c0112bf4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112bf7	obj/kernel.asm	/^c0112bf7:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0112bfa	obj/kernel.asm	/^c0112bfa:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0112bfd	obj/kernel.asm	/^c0112bfd:	6a 00                	push   $0x0$/;"	l
c0112bff	obj/kernel.asm	/^c0112bff:	50                   	push   %eax$/;"	l
c0112c00	obj/kernel.asm	/^c0112c00:	e8 bb fc ff ff       	call   c01128c0 <bitmap_getdata>$/;"	l
c0112c05	obj/kernel.asm	/^c0112c05:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112c08	obj/kernel.asm	/^c0112c08:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0112c0b	obj/kernel.asm	/^c0112c0b:	6a 02                	push   $0x2$/;"	l
c0112c0d	obj/kernel.asm	/^c0112c0d:	50                   	push   %eax$/;"	l
c0112c0e	obj/kernel.asm	/^c0112c0e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112c11	obj/kernel.asm	/^c0112c11:	e8 c8 fd ff ff       	call   c01129de <sfs_wblock>$/;"	l
c0112c16	obj/kernel.asm	/^c0112c16:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112c19	obj/kernel.asm	/^c0112c19:	c9                   	leave  $/;"	l
c0112c1a	obj/kernel.asm	/^c0112c1a:	c3                   	ret    $/;"	l
c0112c1b	obj/kernel.asm	/^c0112c1b <sfs_clear_block>:$/;"	l
c0112c1b	obj/kernel.asm	/^c0112c1b:	55                   	push   %ebp$/;"	l
c0112c1c	obj/kernel.asm	/^c0112c1c:	89 e5                	mov    %esp,%ebp$/;"	l
c0112c1e	obj/kernel.asm	/^c0112c1e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0112c21	obj/kernel.asm	/^c0112c21:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112c24	obj/kernel.asm	/^c0112c24:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112c27	obj/kernel.asm	/^c0112c27:	e8 8e d2 ff ff       	call   c010feba <lock_sfs_io>$/;"	l
c0112c2c	obj/kernel.asm	/^c0112c2c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112c2f	obj/kernel.asm	/^c0112c2f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112c32	obj/kernel.asm	/^c0112c32:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0112c35	obj/kernel.asm	/^c0112c35:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0112c38	obj/kernel.asm	/^c0112c38:	68 00 10 00 00       	push   $0x1000$/;"	l
c0112c3d	obj/kernel.asm	/^c0112c3d:	6a 00                	push   $0x0$/;"	l
c0112c3f	obj/kernel.asm	/^c0112c3f:	50                   	push   %eax$/;"	l
c0112c40	obj/kernel.asm	/^c0112c40:	e8 a7 03 00 00       	call   c0112fec <memset>$/;"	l
c0112c45	obj/kernel.asm	/^c0112c45:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112c48	obj/kernel.asm	/^c0112c48:	eb 2f                	jmp    c0112c79 <sfs_clear_block+0x5e>$/;"	l
c0112c4a	obj/kernel.asm	/^c0112c4a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112c4d	obj/kernel.asm	/^c0112c4d:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0112c50	obj/kernel.asm	/^c0112c50:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112c53	obj/kernel.asm	/^c0112c53:	6a 01                	push   $0x1$/;"	l
c0112c55	obj/kernel.asm	/^c0112c55:	6a 01                	push   $0x1$/;"	l
c0112c57	obj/kernel.asm	/^c0112c57:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0112c5a	obj/kernel.asm	/^c0112c5a:	50                   	push   %eax$/;"	l
c0112c5b	obj/kernel.asm	/^c0112c5b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112c5e	obj/kernel.asm	/^c0112c5e:	e8 80 fc ff ff       	call   c01128e3 <sfs_rwblock_nolock>$/;"	l
c0112c63	obj/kernel.asm	/^c0112c63:	83 c4 20             	add    $0x20,%esp$/;"	l
c0112c66	obj/kernel.asm	/^c0112c66:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112c69	obj/kernel.asm	/^c0112c69:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112c6d	obj/kernel.asm	/^c0112c6d:	74 02                	je     c0112c71 <sfs_clear_block+0x56>$/;"	l
c0112c6f	obj/kernel.asm	/^c0112c6f:	eb 0e                	jmp    c0112c7f <sfs_clear_block+0x64>$/;"	l
c0112c71	obj/kernel.asm	/^c0112c71:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c0112c75	obj/kernel.asm	/^c0112c75:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0112c79	obj/kernel.asm	/^c0112c79:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0112c7d	obj/kernel.asm	/^c0112c7d:	75 cb                	jne    c0112c4a <sfs_clear_block+0x2f>$/;"	l
c0112c7f	obj/kernel.asm	/^c0112c7f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112c82	obj/kernel.asm	/^c0112c82:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112c85	obj/kernel.asm	/^c0112c85:	e8 64 d2 ff ff       	call   c010feee <unlock_sfs_io>$/;"	l
c0112c8a	obj/kernel.asm	/^c0112c8a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112c8d	obj/kernel.asm	/^c0112c8d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112c90	obj/kernel.asm	/^c0112c90:	c9                   	leave  $/;"	l
c0112c91	obj/kernel.asm	/^c0112c91:	c3                   	ret    $/;"	l
c0112c92	obj/kernel.asm	/^c0112c92 <strlen>:$/;"	l
c0112c92	obj/kernel.asm	/^c0112c92:	55                   	push   %ebp$/;"	l
c0112c93	obj/kernel.asm	/^c0112c93:	89 e5                	mov    %esp,%ebp$/;"	l
c0112c95	obj/kernel.asm	/^c0112c95:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0112c98	obj/kernel.asm	/^c0112c98:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0112c9f	obj/kernel.asm	/^c0112c9f:	eb 04                	jmp    c0112ca5 <strlen+0x13>$/;"	l
c0112ca1	obj/kernel.asm	/^c0112ca1:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0112ca5	obj/kernel.asm	/^c0112ca5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112ca8	obj/kernel.asm	/^c0112ca8:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0112cab	obj/kernel.asm	/^c0112cab:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0112cae	obj/kernel.asm	/^c0112cae:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112cb1	obj/kernel.asm	/^c0112cb1:	84 c0                	test   %al,%al$/;"	l
c0112cb3	obj/kernel.asm	/^c0112cb3:	75 ec                	jne    c0112ca1 <strlen+0xf>$/;"	l
c0112cb5	obj/kernel.asm	/^c0112cb5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0112cb8	obj/kernel.asm	/^c0112cb8:	c9                   	leave  $/;"	l
c0112cb9	obj/kernel.asm	/^c0112cb9:	c3                   	ret    $/;"	l
c0112cba	obj/kernel.asm	/^c0112cba <strnlen>:$/;"	l
c0112cba	obj/kernel.asm	/^c0112cba:	55                   	push   %ebp$/;"	l
c0112cbb	obj/kernel.asm	/^c0112cbb:	89 e5                	mov    %esp,%ebp$/;"	l
c0112cbd	obj/kernel.asm	/^c0112cbd:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0112cc0	obj/kernel.asm	/^c0112cc0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0112cc7	obj/kernel.asm	/^c0112cc7:	eb 04                	jmp    c0112ccd <strnlen+0x13>$/;"	l
c0112cc9	obj/kernel.asm	/^c0112cc9:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0112ccd	obj/kernel.asm	/^c0112ccd:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0112cd0	obj/kernel.asm	/^c0112cd0:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0112cd3	obj/kernel.asm	/^c0112cd3:	73 10                	jae    c0112ce5 <strnlen+0x2b>$/;"	l
c0112cd5	obj/kernel.asm	/^c0112cd5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112cd8	obj/kernel.asm	/^c0112cd8:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0112cdb	obj/kernel.asm	/^c0112cdb:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0112cde	obj/kernel.asm	/^c0112cde:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112ce1	obj/kernel.asm	/^c0112ce1:	84 c0                	test   %al,%al$/;"	l
c0112ce3	obj/kernel.asm	/^c0112ce3:	75 e4                	jne    c0112cc9 <strnlen+0xf>$/;"	l
c0112ce5	obj/kernel.asm	/^c0112ce5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0112ce8	obj/kernel.asm	/^c0112ce8:	c9                   	leave  $/;"	l
c0112ce9	obj/kernel.asm	/^c0112ce9:	c3                   	ret    $/;"	l
c0112cea	obj/kernel.asm	/^c0112cea <strcat>:$/;"	l
c0112cea	obj/kernel.asm	/^c0112cea:	55                   	push   %ebp$/;"	l
c0112ceb	obj/kernel.asm	/^c0112ceb:	89 e5                	mov    %esp,%ebp$/;"	l
c0112ced	obj/kernel.asm	/^c0112ced:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0112cf0	obj/kernel.asm	/^c0112cf0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112cf3	obj/kernel.asm	/^c0112cf3:	e8 9a ff ff ff       	call   c0112c92 <strlen>$/;"	l
c0112cf8	obj/kernel.asm	/^c0112cf8:	83 c4 04             	add    $0x4,%esp$/;"	l
c0112cfb	obj/kernel.asm	/^c0112cfb:	89 c2                	mov    %eax,%edx$/;"	l
c0112cfd	obj/kernel.asm	/^c0112cfd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112d00	obj/kernel.asm	/^c0112d00:	01 d0                	add    %edx,%eax$/;"	l
c0112d02	obj/kernel.asm	/^c0112d02:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0112d05	obj/kernel.asm	/^c0112d05:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0112d08	obj/kernel.asm	/^c0112d08:	50                   	push   %eax$/;"	l
c0112d09	obj/kernel.asm	/^c0112d09:	e8 05 00 00 00       	call   c0112d13 <strcpy>$/;"	l
c0112d0e	obj/kernel.asm	/^c0112d0e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112d11	obj/kernel.asm	/^c0112d11:	c9                   	leave  $/;"	l
c0112d12	obj/kernel.asm	/^c0112d12:	c3                   	ret    $/;"	l
c0112d13	obj/kernel.asm	/^c0112d13 <strcpy>:$/;"	l
c0112d13	obj/kernel.asm	/^c0112d13:	55                   	push   %ebp$/;"	l
c0112d14	obj/kernel.asm	/^c0112d14:	89 e5                	mov    %esp,%ebp$/;"	l
c0112d16	obj/kernel.asm	/^c0112d16:	57                   	push   %edi$/;"	l
c0112d17	obj/kernel.asm	/^c0112d17:	56                   	push   %esi$/;"	l
c0112d18	obj/kernel.asm	/^c0112d18:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0112d1b	obj/kernel.asm	/^c0112d1b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112d1e	obj/kernel.asm	/^c0112d1e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112d21	obj/kernel.asm	/^c0112d21:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112d24	obj/kernel.asm	/^c0112d24:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112d27	obj/kernel.asm	/^c0112d27:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0112d2a	obj/kernel.asm	/^c0112d2a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112d2d	obj/kernel.asm	/^c0112d2d:	89 d1                	mov    %edx,%ecx$/;"	l
c0112d2f	obj/kernel.asm	/^c0112d2f:	89 c2                	mov    %eax,%edx$/;"	l
c0112d31	obj/kernel.asm	/^c0112d31:	89 ce                	mov    %ecx,%esi$/;"	l
c0112d33	obj/kernel.asm	/^c0112d33:	89 d7                	mov    %edx,%edi$/;"	l
c0112d35	obj/kernel.asm	/^c0112d35:	ac                   	lods   %ds:(%esi),%al$/;"	l
c0112d36	obj/kernel.asm	/^c0112d36:	aa                   	stos   %al,%es:(%edi)$/;"	l
c0112d37	obj/kernel.asm	/^c0112d37:	84 c0                	test   %al,%al$/;"	l
c0112d39	obj/kernel.asm	/^c0112d39:	75 fa                	jne    c0112d35 <strcpy+0x22>$/;"	l
c0112d3b	obj/kernel.asm	/^c0112d3b:	89 fa                	mov    %edi,%edx$/;"	l
c0112d3d	obj/kernel.asm	/^c0112d3d:	89 f1                	mov    %esi,%ecx$/;"	l
c0112d3f	obj/kernel.asm	/^c0112d3f:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c0112d42	obj/kernel.asm	/^c0112d42:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c0112d45	obj/kernel.asm	/^c0112d45:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0112d48	obj/kernel.asm	/^c0112d48:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112d4b	obj/kernel.asm	/^c0112d4b:	90                   	nop$/;"	l
c0112d4c	obj/kernel.asm	/^c0112d4c:	83 c4 20             	add    $0x20,%esp$/;"	l
c0112d4f	obj/kernel.asm	/^c0112d4f:	5e                   	pop    %esi$/;"	l
c0112d50	obj/kernel.asm	/^c0112d50:	5f                   	pop    %edi$/;"	l
c0112d51	obj/kernel.asm	/^c0112d51:	5d                   	pop    %ebp$/;"	l
c0112d52	obj/kernel.asm	/^c0112d52:	c3                   	ret    $/;"	l
c0112d53	obj/kernel.asm	/^c0112d53 <strncpy>:$/;"	l
c0112d53	obj/kernel.asm	/^c0112d53:	55                   	push   %ebp$/;"	l
c0112d54	obj/kernel.asm	/^c0112d54:	89 e5                	mov    %esp,%ebp$/;"	l
c0112d56	obj/kernel.asm	/^c0112d56:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0112d59	obj/kernel.asm	/^c0112d59:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112d5c	obj/kernel.asm	/^c0112d5c:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0112d5f	obj/kernel.asm	/^c0112d5f:	eb 21                	jmp    c0112d82 <strncpy+0x2f>$/;"	l
c0112d61	obj/kernel.asm	/^c0112d61:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112d64	obj/kernel.asm	/^c0112d64:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c0112d67	obj/kernel.asm	/^c0112d67:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0112d6a	obj/kernel.asm	/^c0112d6a:	88 10                	mov    %dl,(%eax)$/;"	l
c0112d6c	obj/kernel.asm	/^c0112d6c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0112d6f	obj/kernel.asm	/^c0112d6f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112d72	obj/kernel.asm	/^c0112d72:	84 c0                	test   %al,%al$/;"	l
c0112d74	obj/kernel.asm	/^c0112d74:	74 04                	je     c0112d7a <strncpy+0x27>$/;"	l
c0112d76	obj/kernel.asm	/^c0112d76:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c0112d7a	obj/kernel.asm	/^c0112d7a:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0112d7e	obj/kernel.asm	/^c0112d7e:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0112d82	obj/kernel.asm	/^c0112d82:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0112d86	obj/kernel.asm	/^c0112d86:	75 d9                	jne    c0112d61 <strncpy+0xe>$/;"	l
c0112d88	obj/kernel.asm	/^c0112d88:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112d8b	obj/kernel.asm	/^c0112d8b:	c9                   	leave  $/;"	l
c0112d8c	obj/kernel.asm	/^c0112d8c:	c3                   	ret    $/;"	l
c0112d8d	obj/kernel.asm	/^c0112d8d <strcmp>:$/;"	l
c0112d8d	obj/kernel.asm	/^c0112d8d:	55                   	push   %ebp$/;"	l
c0112d8e	obj/kernel.asm	/^c0112d8e:	89 e5                	mov    %esp,%ebp$/;"	l
c0112d90	obj/kernel.asm	/^c0112d90:	57                   	push   %edi$/;"	l
c0112d91	obj/kernel.asm	/^c0112d91:	56                   	push   %esi$/;"	l
c0112d92	obj/kernel.asm	/^c0112d92:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0112d95	obj/kernel.asm	/^c0112d95:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112d98	obj/kernel.asm	/^c0112d98:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112d9b	obj/kernel.asm	/^c0112d9b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112d9e	obj/kernel.asm	/^c0112d9e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112da1	obj/kernel.asm	/^c0112da1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0112da4	obj/kernel.asm	/^c0112da4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112da7	obj/kernel.asm	/^c0112da7:	89 d1                	mov    %edx,%ecx$/;"	l
c0112da9	obj/kernel.asm	/^c0112da9:	89 c2                	mov    %eax,%edx$/;"	l
c0112dab	obj/kernel.asm	/^c0112dab:	89 ce                	mov    %ecx,%esi$/;"	l
c0112dad	obj/kernel.asm	/^c0112dad:	89 d7                	mov    %edx,%edi$/;"	l
c0112daf	obj/kernel.asm	/^c0112daf:	ac                   	lods   %ds:(%esi),%al$/;"	l
c0112db0	obj/kernel.asm	/^c0112db0:	ae                   	scas   %es:(%edi),%al$/;"	l
c0112db1	obj/kernel.asm	/^c0112db1:	75 08                	jne    c0112dbb <strcmp+0x2e>$/;"	l
c0112db3	obj/kernel.asm	/^c0112db3:	84 c0                	test   %al,%al$/;"	l
c0112db5	obj/kernel.asm	/^c0112db5:	75 f8                	jne    c0112daf <strcmp+0x22>$/;"	l
c0112db7	obj/kernel.asm	/^c0112db7:	31 c0                	xor    %eax,%eax$/;"	l
c0112db9	obj/kernel.asm	/^c0112db9:	eb 04                	jmp    c0112dbf <strcmp+0x32>$/;"	l
c0112dbb	obj/kernel.asm	/^c0112dbb:	19 c0                	sbb    %eax,%eax$/;"	l
c0112dbd	obj/kernel.asm	/^c0112dbd:	0c 01                	or     $0x1,%al$/;"	l
c0112dbf	obj/kernel.asm	/^c0112dbf:	89 fa                	mov    %edi,%edx$/;"	l
c0112dc1	obj/kernel.asm	/^c0112dc1:	89 f1                	mov    %esi,%ecx$/;"	l
c0112dc3	obj/kernel.asm	/^c0112dc3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112dc6	obj/kernel.asm	/^c0112dc6:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c0112dc9	obj/kernel.asm	/^c0112dc9:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0112dcc	obj/kernel.asm	/^c0112dcc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112dcf	obj/kernel.asm	/^c0112dcf:	90                   	nop$/;"	l
c0112dd0	obj/kernel.asm	/^c0112dd0:	83 c4 20             	add    $0x20,%esp$/;"	l
c0112dd3	obj/kernel.asm	/^c0112dd3:	5e                   	pop    %esi$/;"	l
c0112dd4	obj/kernel.asm	/^c0112dd4:	5f                   	pop    %edi$/;"	l
c0112dd5	obj/kernel.asm	/^c0112dd5:	5d                   	pop    %ebp$/;"	l
c0112dd6	obj/kernel.asm	/^c0112dd6:	c3                   	ret    $/;"	l
c0112dd7	obj/kernel.asm	/^c0112dd7 <strncmp>:$/;"	l
c0112dd7	obj/kernel.asm	/^c0112dd7:	55                   	push   %ebp$/;"	l
c0112dd8	obj/kernel.asm	/^c0112dd8:	89 e5                	mov    %esp,%ebp$/;"	l
c0112dda	obj/kernel.asm	/^c0112dda:	eb 0c                	jmp    c0112de8 <strncmp+0x11>$/;"	l
c0112ddc	obj/kernel.asm	/^c0112ddc:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0112de0	obj/kernel.asm	/^c0112de0:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0112de4	obj/kernel.asm	/^c0112de4:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c0112de8	obj/kernel.asm	/^c0112de8:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0112dec	obj/kernel.asm	/^c0112dec:	74 1a                	je     c0112e08 <strncmp+0x31>$/;"	l
c0112dee	obj/kernel.asm	/^c0112dee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112df1	obj/kernel.asm	/^c0112df1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112df4	obj/kernel.asm	/^c0112df4:	84 c0                	test   %al,%al$/;"	l
c0112df6	obj/kernel.asm	/^c0112df6:	74 10                	je     c0112e08 <strncmp+0x31>$/;"	l
c0112df8	obj/kernel.asm	/^c0112df8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112dfb	obj/kernel.asm	/^c0112dfb:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c0112dfe	obj/kernel.asm	/^c0112dfe:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112e01	obj/kernel.asm	/^c0112e01:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112e04	obj/kernel.asm	/^c0112e04:	38 c2                	cmp    %al,%dl$/;"	l
c0112e06	obj/kernel.asm	/^c0112e06:	74 d4                	je     c0112ddc <strncmp+0x5>$/;"	l
c0112e08	obj/kernel.asm	/^c0112e08:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0112e0c	obj/kernel.asm	/^c0112e0c:	74 18                	je     c0112e26 <strncmp+0x4f>$/;"	l
c0112e0e	obj/kernel.asm	/^c0112e0e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112e11	obj/kernel.asm	/^c0112e11:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112e14	obj/kernel.asm	/^c0112e14:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0112e17	obj/kernel.asm	/^c0112e17:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112e1a	obj/kernel.asm	/^c0112e1a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112e1d	obj/kernel.asm	/^c0112e1d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0112e20	obj/kernel.asm	/^c0112e20:	29 c2                	sub    %eax,%edx$/;"	l
c0112e22	obj/kernel.asm	/^c0112e22:	89 d0                	mov    %edx,%eax$/;"	l
c0112e24	obj/kernel.asm	/^c0112e24:	eb 05                	jmp    c0112e2b <strncmp+0x54>$/;"	l
c0112e26	obj/kernel.asm	/^c0112e26:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112e2b	obj/kernel.asm	/^c0112e2b:	5d                   	pop    %ebp$/;"	l
c0112e2c	obj/kernel.asm	/^c0112e2c:	c3                   	ret    $/;"	l
c0112e2d	obj/kernel.asm	/^c0112e2d <strchr>:$/;"	l
c0112e2d	obj/kernel.asm	/^c0112e2d:	55                   	push   %ebp$/;"	l
c0112e2e	obj/kernel.asm	/^c0112e2e:	89 e5                	mov    %esp,%ebp$/;"	l
c0112e30	obj/kernel.asm	/^c0112e30:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0112e33	obj/kernel.asm	/^c0112e33:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112e36	obj/kernel.asm	/^c0112e36:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c0112e39	obj/kernel.asm	/^c0112e39:	eb 14                	jmp    c0112e4f <strchr+0x22>$/;"	l
c0112e3b	obj/kernel.asm	/^c0112e3b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112e3e	obj/kernel.asm	/^c0112e3e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112e41	obj/kernel.asm	/^c0112e41:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c0112e44	obj/kernel.asm	/^c0112e44:	75 05                	jne    c0112e4b <strchr+0x1e>$/;"	l
c0112e46	obj/kernel.asm	/^c0112e46:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112e49	obj/kernel.asm	/^c0112e49:	eb 13                	jmp    c0112e5e <strchr+0x31>$/;"	l
c0112e4b	obj/kernel.asm	/^c0112e4b:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0112e4f	obj/kernel.asm	/^c0112e4f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112e52	obj/kernel.asm	/^c0112e52:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112e55	obj/kernel.asm	/^c0112e55:	84 c0                	test   %al,%al$/;"	l
c0112e57	obj/kernel.asm	/^c0112e57:	75 e2                	jne    c0112e3b <strchr+0xe>$/;"	l
c0112e59	obj/kernel.asm	/^c0112e59:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112e5e	obj/kernel.asm	/^c0112e5e:	c9                   	leave  $/;"	l
c0112e5f	obj/kernel.asm	/^c0112e5f:	c3                   	ret    $/;"	l
c0112e60	obj/kernel.asm	/^c0112e60 <strfind>:$/;"	l
c0112e60	obj/kernel.asm	/^c0112e60:	55                   	push   %ebp$/;"	l
c0112e61	obj/kernel.asm	/^c0112e61:	89 e5                	mov    %esp,%ebp$/;"	l
c0112e63	obj/kernel.asm	/^c0112e63:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0112e66	obj/kernel.asm	/^c0112e66:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112e69	obj/kernel.asm	/^c0112e69:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c0112e6c	obj/kernel.asm	/^c0112e6c:	eb 11                	jmp    c0112e7f <strfind+0x1f>$/;"	l
c0112e6e	obj/kernel.asm	/^c0112e6e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112e71	obj/kernel.asm	/^c0112e71:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112e74	obj/kernel.asm	/^c0112e74:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c0112e77	obj/kernel.asm	/^c0112e77:	75 02                	jne    c0112e7b <strfind+0x1b>$/;"	l
c0112e79	obj/kernel.asm	/^c0112e79:	eb 0e                	jmp    c0112e89 <strfind+0x29>$/;"	l
c0112e7b	obj/kernel.asm	/^c0112e7b:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0112e7f	obj/kernel.asm	/^c0112e7f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112e82	obj/kernel.asm	/^c0112e82:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112e85	obj/kernel.asm	/^c0112e85:	84 c0                	test   %al,%al$/;"	l
c0112e87	obj/kernel.asm	/^c0112e87:	75 e5                	jne    c0112e6e <strfind+0xe>$/;"	l
c0112e89	obj/kernel.asm	/^c0112e89:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112e8c	obj/kernel.asm	/^c0112e8c:	c9                   	leave  $/;"	l
c0112e8d	obj/kernel.asm	/^c0112e8d:	c3                   	ret    $/;"	l
c0112e8e	obj/kernel.asm	/^c0112e8e <strtol>:$/;"	l
c0112e8e	obj/kernel.asm	/^c0112e8e:	55                   	push   %ebp$/;"	l
c0112e8f	obj/kernel.asm	/^c0112e8f:	89 e5                	mov    %esp,%ebp$/;"	l
c0112e91	obj/kernel.asm	/^c0112e91:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0112e94	obj/kernel.asm	/^c0112e94:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0112e9b	obj/kernel.asm	/^c0112e9b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c0112ea2	obj/kernel.asm	/^c0112ea2:	eb 04                	jmp    c0112ea8 <strtol+0x1a>$/;"	l
c0112ea4	obj/kernel.asm	/^c0112ea4:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0112ea8	obj/kernel.asm	/^c0112ea8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112eab	obj/kernel.asm	/^c0112eab:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112eae	obj/kernel.asm	/^c0112eae:	3c 20                	cmp    $0x20,%al$/;"	l
c0112eb0	obj/kernel.asm	/^c0112eb0:	74 f2                	je     c0112ea4 <strtol+0x16>$/;"	l
c0112eb2	obj/kernel.asm	/^c0112eb2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112eb5	obj/kernel.asm	/^c0112eb5:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112eb8	obj/kernel.asm	/^c0112eb8:	3c 09                	cmp    $0x9,%al$/;"	l
c0112eba	obj/kernel.asm	/^c0112eba:	74 e8                	je     c0112ea4 <strtol+0x16>$/;"	l
c0112ebc	obj/kernel.asm	/^c0112ebc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112ebf	obj/kernel.asm	/^c0112ebf:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112ec2	obj/kernel.asm	/^c0112ec2:	3c 2b                	cmp    $0x2b,%al$/;"	l
c0112ec4	obj/kernel.asm	/^c0112ec4:	75 06                	jne    c0112ecc <strtol+0x3e>$/;"	l
c0112ec6	obj/kernel.asm	/^c0112ec6:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0112eca	obj/kernel.asm	/^c0112eca:	eb 15                	jmp    c0112ee1 <strtol+0x53>$/;"	l
c0112ecc	obj/kernel.asm	/^c0112ecc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112ecf	obj/kernel.asm	/^c0112ecf:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112ed2	obj/kernel.asm	/^c0112ed2:	3c 2d                	cmp    $0x2d,%al$/;"	l
c0112ed4	obj/kernel.asm	/^c0112ed4:	75 0b                	jne    c0112ee1 <strtol+0x53>$/;"	l
c0112ed6	obj/kernel.asm	/^c0112ed6:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0112eda	obj/kernel.asm	/^c0112eda:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)$/;"	l
c0112ee1	obj/kernel.asm	/^c0112ee1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0112ee5	obj/kernel.asm	/^c0112ee5:	74 06                	je     c0112eed <strtol+0x5f>$/;"	l
c0112ee7	obj/kernel.asm	/^c0112ee7:	83 7d 10 10          	cmpl   $0x10,0x10(%ebp)$/;"	l
c0112eeb	obj/kernel.asm	/^c0112eeb:	75 24                	jne    c0112f11 <strtol+0x83>$/;"	l
c0112eed	obj/kernel.asm	/^c0112eed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112ef0	obj/kernel.asm	/^c0112ef0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112ef3	obj/kernel.asm	/^c0112ef3:	3c 30                	cmp    $0x30,%al$/;"	l
c0112ef5	obj/kernel.asm	/^c0112ef5:	75 1a                	jne    c0112f11 <strtol+0x83>$/;"	l
c0112ef7	obj/kernel.asm	/^c0112ef7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112efa	obj/kernel.asm	/^c0112efa:	83 c0 01             	add    $0x1,%eax$/;"	l
c0112efd	obj/kernel.asm	/^c0112efd:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112f00	obj/kernel.asm	/^c0112f00:	3c 78                	cmp    $0x78,%al$/;"	l
c0112f02	obj/kernel.asm	/^c0112f02:	75 0d                	jne    c0112f11 <strtol+0x83>$/;"	l
c0112f04	obj/kernel.asm	/^c0112f04:	83 45 08 02          	addl   $0x2,0x8(%ebp)$/;"	l
c0112f08	obj/kernel.asm	/^c0112f08:	c7 45 10 10 00 00 00 	movl   $0x10,0x10(%ebp)$/;"	l
c0112f0f	obj/kernel.asm	/^c0112f0f:	eb 2a                	jmp    c0112f3b <strtol+0xad>$/;"	l
c0112f11	obj/kernel.asm	/^c0112f11:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0112f15	obj/kernel.asm	/^c0112f15:	75 17                	jne    c0112f2e <strtol+0xa0>$/;"	l
c0112f17	obj/kernel.asm	/^c0112f17:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112f1a	obj/kernel.asm	/^c0112f1a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112f1d	obj/kernel.asm	/^c0112f1d:	3c 30                	cmp    $0x30,%al$/;"	l
c0112f1f	obj/kernel.asm	/^c0112f1f:	75 0d                	jne    c0112f2e <strtol+0xa0>$/;"	l
c0112f21	obj/kernel.asm	/^c0112f21:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0112f25	obj/kernel.asm	/^c0112f25:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)$/;"	l
c0112f2c	obj/kernel.asm	/^c0112f2c:	eb 0d                	jmp    c0112f3b <strtol+0xad>$/;"	l
c0112f2e	obj/kernel.asm	/^c0112f2e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0112f32	obj/kernel.asm	/^c0112f32:	75 07                	jne    c0112f3b <strtol+0xad>$/;"	l
c0112f34	obj/kernel.asm	/^c0112f34:	c7 45 10 0a 00 00 00 	movl   $0xa,0x10(%ebp)$/;"	l
c0112f3b	obj/kernel.asm	/^c0112f3b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112f3e	obj/kernel.asm	/^c0112f3e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112f41	obj/kernel.asm	/^c0112f41:	3c 2f                	cmp    $0x2f,%al$/;"	l
c0112f43	obj/kernel.asm	/^c0112f43:	7e 1b                	jle    c0112f60 <strtol+0xd2>$/;"	l
c0112f45	obj/kernel.asm	/^c0112f45:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112f48	obj/kernel.asm	/^c0112f48:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112f4b	obj/kernel.asm	/^c0112f4b:	3c 39                	cmp    $0x39,%al$/;"	l
c0112f4d	obj/kernel.asm	/^c0112f4d:	7f 11                	jg     c0112f60 <strtol+0xd2>$/;"	l
c0112f4f	obj/kernel.asm	/^c0112f4f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112f52	obj/kernel.asm	/^c0112f52:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112f55	obj/kernel.asm	/^c0112f55:	0f be c0             	movsbl %al,%eax$/;"	l
c0112f58	obj/kernel.asm	/^c0112f58:	83 e8 30             	sub    $0x30,%eax$/;"	l
c0112f5b	obj/kernel.asm	/^c0112f5b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112f5e	obj/kernel.asm	/^c0112f5e:	eb 48                	jmp    c0112fa8 <strtol+0x11a>$/;"	l
c0112f60	obj/kernel.asm	/^c0112f60:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112f63	obj/kernel.asm	/^c0112f63:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112f66	obj/kernel.asm	/^c0112f66:	3c 60                	cmp    $0x60,%al$/;"	l
c0112f68	obj/kernel.asm	/^c0112f68:	7e 1b                	jle    c0112f85 <strtol+0xf7>$/;"	l
c0112f6a	obj/kernel.asm	/^c0112f6a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112f6d	obj/kernel.asm	/^c0112f6d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112f70	obj/kernel.asm	/^c0112f70:	3c 7a                	cmp    $0x7a,%al$/;"	l
c0112f72	obj/kernel.asm	/^c0112f72:	7f 11                	jg     c0112f85 <strtol+0xf7>$/;"	l
c0112f74	obj/kernel.asm	/^c0112f74:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112f77	obj/kernel.asm	/^c0112f77:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112f7a	obj/kernel.asm	/^c0112f7a:	0f be c0             	movsbl %al,%eax$/;"	l
c0112f7d	obj/kernel.asm	/^c0112f7d:	83 e8 57             	sub    $0x57,%eax$/;"	l
c0112f80	obj/kernel.asm	/^c0112f80:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112f83	obj/kernel.asm	/^c0112f83:	eb 23                	jmp    c0112fa8 <strtol+0x11a>$/;"	l
c0112f85	obj/kernel.asm	/^c0112f85:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112f88	obj/kernel.asm	/^c0112f88:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112f8b	obj/kernel.asm	/^c0112f8b:	3c 40                	cmp    $0x40,%al$/;"	l
c0112f8d	obj/kernel.asm	/^c0112f8d:	7e 3d                	jle    c0112fcc <strtol+0x13e>$/;"	l
c0112f8f	obj/kernel.asm	/^c0112f8f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112f92	obj/kernel.asm	/^c0112f92:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112f95	obj/kernel.asm	/^c0112f95:	3c 5a                	cmp    $0x5a,%al$/;"	l
c0112f97	obj/kernel.asm	/^c0112f97:	7f 33                	jg     c0112fcc <strtol+0x13e>$/;"	l
c0112f99	obj/kernel.asm	/^c0112f99:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112f9c	obj/kernel.asm	/^c0112f9c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112f9f	obj/kernel.asm	/^c0112f9f:	0f be c0             	movsbl %al,%eax$/;"	l
c0112fa2	obj/kernel.asm	/^c0112fa2:	83 e8 37             	sub    $0x37,%eax$/;"	l
c0112fa5	obj/kernel.asm	/^c0112fa5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112fa8	obj/kernel.asm	/^c0112fa8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112fab	obj/kernel.asm	/^c0112fab:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0112fae	obj/kernel.asm	/^c0112fae:	7c 02                	jl     c0112fb2 <strtol+0x124>$/;"	l
c0112fb0	obj/kernel.asm	/^c0112fb0:	eb 1a                	jmp    c0112fcc <strtol+0x13e>$/;"	l
c0112fb2	obj/kernel.asm	/^c0112fb2:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0112fb6	obj/kernel.asm	/^c0112fb6:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0112fb9	obj/kernel.asm	/^c0112fb9:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
c0112fbd	obj/kernel.asm	/^c0112fbd:	89 c2                	mov    %eax,%edx$/;"	l
c0112fbf	obj/kernel.asm	/^c0112fbf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112fc2	obj/kernel.asm	/^c0112fc2:	01 d0                	add    %edx,%eax$/;"	l
c0112fc4	obj/kernel.asm	/^c0112fc4:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0112fc7	obj/kernel.asm	/^c0112fc7:	e9 6f ff ff ff       	jmp    c0112f3b <strtol+0xad>$/;"	l
c0112fcc	obj/kernel.asm	/^c0112fcc:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0112fd0	obj/kernel.asm	/^c0112fd0:	74 08                	je     c0112fda <strtol+0x14c>$/;"	l
c0112fd2	obj/kernel.asm	/^c0112fd2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112fd5	obj/kernel.asm	/^c0112fd5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0112fd8	obj/kernel.asm	/^c0112fd8:	89 10                	mov    %edx,(%eax)$/;"	l
c0112fda	obj/kernel.asm	/^c0112fda:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0112fde	obj/kernel.asm	/^c0112fde:	74 07                	je     c0112fe7 <strtol+0x159>$/;"	l
c0112fe0	obj/kernel.asm	/^c0112fe0:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0112fe3	obj/kernel.asm	/^c0112fe3:	f7 d8                	neg    %eax$/;"	l
c0112fe5	obj/kernel.asm	/^c0112fe5:	eb 03                	jmp    c0112fea <strtol+0x15c>$/;"	l
c0112fe7	obj/kernel.asm	/^c0112fe7:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0112fea	obj/kernel.asm	/^c0112fea:	c9                   	leave  $/;"	l
c0112feb	obj/kernel.asm	/^c0112feb:	c3                   	ret    $/;"	l
c0112fec	obj/kernel.asm	/^c0112fec <memset>:$/;"	l
c0112fec	obj/kernel.asm	/^c0112fec:	55                   	push   %ebp$/;"	l
c0112fed	obj/kernel.asm	/^c0112fed:	89 e5                	mov    %esp,%ebp$/;"	l
c0112fef	obj/kernel.asm	/^c0112fef:	57                   	push   %edi$/;"	l
c0112ff0	obj/kernel.asm	/^c0112ff0:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0112ff3	obj/kernel.asm	/^c0112ff3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112ff6	obj/kernel.asm	/^c0112ff6:	88 45 d8             	mov    %al,-0x28(%ebp)$/;"	l
c0112ff9	obj/kernel.asm	/^c0112ff9:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
c0112ffd	obj/kernel.asm	/^c0112ffd:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0113000	obj/kernel.asm	/^c0113000:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c0113003	obj/kernel.asm	/^c0113003:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c0113006	obj/kernel.asm	/^c0113006:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0113009	obj/kernel.asm	/^c0113009:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011300c	obj/kernel.asm	/^c011300c:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c011300f	obj/kernel.asm	/^c011300f:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax$/;"	l
c0113013	obj/kernel.asm	/^c0113013:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c0113016	obj/kernel.asm	/^c0113016:	89 d7                	mov    %edx,%edi$/;"	l
c0113018	obj/kernel.asm	/^c0113018:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
c011301a	obj/kernel.asm	/^c011301a:	89 fa                	mov    %edi,%edx$/;"	l
c011301c	obj/kernel.asm	/^c011301c:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c011301f	obj/kernel.asm	/^c011301f:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c0113022	obj/kernel.asm	/^c0113022:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0113025	obj/kernel.asm	/^c0113025:	90                   	nop$/;"	l
c0113026	obj/kernel.asm	/^c0113026:	83 c4 24             	add    $0x24,%esp$/;"	l
c0113029	obj/kernel.asm	/^c0113029:	5f                   	pop    %edi$/;"	l
c011302a	obj/kernel.asm	/^c011302a:	5d                   	pop    %ebp$/;"	l
c011302b	obj/kernel.asm	/^c011302b:	c3                   	ret    $/;"	l
c011302c	obj/kernel.asm	/^c011302c <memmove>:$/;"	l
c011302c	obj/kernel.asm	/^c011302c:	55                   	push   %ebp$/;"	l
c011302d	obj/kernel.asm	/^c011302d:	89 e5                	mov    %esp,%ebp$/;"	l
c011302f	obj/kernel.asm	/^c011302f:	57                   	push   %edi$/;"	l
c0113030	obj/kernel.asm	/^c0113030:	56                   	push   %esi$/;"	l
c0113031	obj/kernel.asm	/^c0113031:	53                   	push   %ebx$/;"	l
c0113032	obj/kernel.asm	/^c0113032:	83 ec 30             	sub    $0x30,%esp$/;"	l
c0113035	obj/kernel.asm	/^c0113035:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113038	obj/kernel.asm	/^c0113038:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011303b	obj/kernel.asm	/^c011303b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011303e	obj/kernel.asm	/^c011303e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113041	obj/kernel.asm	/^c0113041:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0113044	obj/kernel.asm	/^c0113044:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113047	obj/kernel.asm	/^c0113047:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011304a	obj/kernel.asm	/^c011304a:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c011304d	obj/kernel.asm	/^c011304d:	73 42                	jae    c0113091 <memmove+0x65>$/;"	l
c011304f	obj/kernel.asm	/^c011304f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113052	obj/kernel.asm	/^c0113052:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0113055	obj/kernel.asm	/^c0113055:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113058	obj/kernel.asm	/^c0113058:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c011305b	obj/kernel.asm	/^c011305b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011305e	obj/kernel.asm	/^c011305e:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0113061	obj/kernel.asm	/^c0113061:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113064	obj/kernel.asm	/^c0113064:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c0113067	obj/kernel.asm	/^c0113067:	89 c1                	mov    %eax,%ecx$/;"	l
c0113069	obj/kernel.asm	/^c0113069:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c011306c	obj/kernel.asm	/^c011306c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011306f	obj/kernel.asm	/^c011306f:	89 d7                	mov    %edx,%edi$/;"	l
c0113071	obj/kernel.asm	/^c0113071:	89 c6                	mov    %eax,%esi$/;"	l
c0113073	obj/kernel.asm	/^c0113073:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c0113075	obj/kernel.asm	/^c0113075:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c0113078	obj/kernel.asm	/^c0113078:	83 e1 03             	and    $0x3,%ecx$/;"	l
c011307b	obj/kernel.asm	/^c011307b:	74 02                	je     c011307f <memmove+0x53>$/;"	l
c011307d	obj/kernel.asm	/^c011307d:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c011307f	obj/kernel.asm	/^c011307f:	89 f0                	mov    %esi,%eax$/;"	l
c0113081	obj/kernel.asm	/^c0113081:	89 fa                	mov    %edi,%edx$/;"	l
c0113083	obj/kernel.asm	/^c0113083:	89 4d d8             	mov    %ecx,-0x28(%ebp)$/;"	l
c0113086	obj/kernel.asm	/^c0113086:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0113089	obj/kernel.asm	/^c0113089:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c011308c	obj/kernel.asm	/^c011308c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011308f	obj/kernel.asm	/^c011308f:	eb 36                	jmp    c01130c7 <memmove+0x9b>$/;"	l
c0113091	obj/kernel.asm	/^c0113091:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113094	obj/kernel.asm	/^c0113094:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0113097	obj/kernel.asm	/^c0113097:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011309a	obj/kernel.asm	/^c011309a:	01 c2                	add    %eax,%edx$/;"	l
c011309c	obj/kernel.asm	/^c011309c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011309f	obj/kernel.asm	/^c011309f:	8d 48 ff             	lea    -0x1(%eax),%ecx$/;"	l
c01130a2	obj/kernel.asm	/^c01130a2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01130a5	obj/kernel.asm	/^c01130a5:	8d 1c 01             	lea    (%ecx,%eax,1),%ebx$/;"	l
c01130a8	obj/kernel.asm	/^c01130a8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01130ab	obj/kernel.asm	/^c01130ab:	89 c1                	mov    %eax,%ecx$/;"	l
c01130ad	obj/kernel.asm	/^c01130ad:	89 d8                	mov    %ebx,%eax$/;"	l
c01130af	obj/kernel.asm	/^c01130af:	89 d6                	mov    %edx,%esi$/;"	l
c01130b1	obj/kernel.asm	/^c01130b1:	89 c7                	mov    %eax,%edi$/;"	l
c01130b3	obj/kernel.asm	/^c01130b3:	fd                   	std    $/;"	l
c01130b4	obj/kernel.asm	/^c01130b4:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c01130b6	obj/kernel.asm	/^c01130b6:	fc                   	cld    $/;"	l
c01130b7	obj/kernel.asm	/^c01130b7:	89 f8                	mov    %edi,%eax$/;"	l
c01130b9	obj/kernel.asm	/^c01130b9:	89 f2                	mov    %esi,%edx$/;"	l
c01130bb	obj/kernel.asm	/^c01130bb:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
c01130be	obj/kernel.asm	/^c01130be:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c01130c1	obj/kernel.asm	/^c01130c1:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c01130c4	obj/kernel.asm	/^c01130c4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01130c7	obj/kernel.asm	/^c01130c7:	83 c4 30             	add    $0x30,%esp$/;"	l
c01130ca	obj/kernel.asm	/^c01130ca:	5b                   	pop    %ebx$/;"	l
c01130cb	obj/kernel.asm	/^c01130cb:	5e                   	pop    %esi$/;"	l
c01130cc	obj/kernel.asm	/^c01130cc:	5f                   	pop    %edi$/;"	l
c01130cd	obj/kernel.asm	/^c01130cd:	5d                   	pop    %ebp$/;"	l
c01130ce	obj/kernel.asm	/^c01130ce:	c3                   	ret    $/;"	l
c01130cf	obj/kernel.asm	/^c01130cf <memcpy>:$/;"	l
c01130cf	obj/kernel.asm	/^c01130cf:	55                   	push   %ebp$/;"	l
c01130d0	obj/kernel.asm	/^c01130d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01130d2	obj/kernel.asm	/^c01130d2:	57                   	push   %edi$/;"	l
c01130d3	obj/kernel.asm	/^c01130d3:	56                   	push   %esi$/;"	l
c01130d4	obj/kernel.asm	/^c01130d4:	83 ec 20             	sub    $0x20,%esp$/;"	l
c01130d7	obj/kernel.asm	/^c01130d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01130da	obj/kernel.asm	/^c01130da:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01130dd	obj/kernel.asm	/^c01130dd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01130e0	obj/kernel.asm	/^c01130e0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01130e3	obj/kernel.asm	/^c01130e3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01130e6	obj/kernel.asm	/^c01130e6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01130e9	obj/kernel.asm	/^c01130e9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01130ec	obj/kernel.asm	/^c01130ec:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c01130ef	obj/kernel.asm	/^c01130ef:	89 c1                	mov    %eax,%ecx$/;"	l
c01130f1	obj/kernel.asm	/^c01130f1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01130f4	obj/kernel.asm	/^c01130f4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01130f7	obj/kernel.asm	/^c01130f7:	89 d7                	mov    %edx,%edi$/;"	l
c01130f9	obj/kernel.asm	/^c01130f9:	89 c6                	mov    %eax,%esi$/;"	l
c01130fb	obj/kernel.asm	/^c01130fb:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c01130fd	obj/kernel.asm	/^c01130fd:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
c0113100	obj/kernel.asm	/^c0113100:	83 e1 03             	and    $0x3,%ecx$/;"	l
c0113103	obj/kernel.asm	/^c0113103:	74 02                	je     c0113107 <memcpy+0x38>$/;"	l
c0113105	obj/kernel.asm	/^c0113105:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c0113107	obj/kernel.asm	/^c0113107:	89 f0                	mov    %esi,%eax$/;"	l
c0113109	obj/kernel.asm	/^c0113109:	89 fa                	mov    %edi,%edx$/;"	l
c011310b	obj/kernel.asm	/^c011310b:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c011310e	obj/kernel.asm	/^c011310e:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0113111	obj/kernel.asm	/^c0113111:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0113114	obj/kernel.asm	/^c0113114:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113117	obj/kernel.asm	/^c0113117:	90                   	nop$/;"	l
c0113118	obj/kernel.asm	/^c0113118:	83 c4 20             	add    $0x20,%esp$/;"	l
c011311b	obj/kernel.asm	/^c011311b:	5e                   	pop    %esi$/;"	l
c011311c	obj/kernel.asm	/^c011311c:	5f                   	pop    %edi$/;"	l
c011311d	obj/kernel.asm	/^c011311d:	5d                   	pop    %ebp$/;"	l
c011311e	obj/kernel.asm	/^c011311e:	c3                   	ret    $/;"	l
c011311f	obj/kernel.asm	/^c011311f <memcmp>:$/;"	l
c011311f	obj/kernel.asm	/^c011311f:	55                   	push   %ebp$/;"	l
c0113120	obj/kernel.asm	/^c0113120:	89 e5                	mov    %esp,%ebp$/;"	l
c0113122	obj/kernel.asm	/^c0113122:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0113125	obj/kernel.asm	/^c0113125:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113128	obj/kernel.asm	/^c0113128:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c011312b	obj/kernel.asm	/^c011312b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011312e	obj/kernel.asm	/^c011312e:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0113131	obj/kernel.asm	/^c0113131:	eb 30                	jmp    c0113163 <memcmp+0x44>$/;"	l
c0113133	obj/kernel.asm	/^c0113133:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0113136	obj/kernel.asm	/^c0113136:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c0113139	obj/kernel.asm	/^c0113139:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c011313c	obj/kernel.asm	/^c011313c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011313f	obj/kernel.asm	/^c011313f:	38 c2                	cmp    %al,%dl$/;"	l
c0113141	obj/kernel.asm	/^c0113141:	74 18                	je     c011315b <memcmp+0x3c>$/;"	l
c0113143	obj/kernel.asm	/^c0113143:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0113146	obj/kernel.asm	/^c0113146:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113149	obj/kernel.asm	/^c0113149:	0f b6 d0             	movzbl %al,%edx$/;"	l
c011314c	obj/kernel.asm	/^c011314c:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c011314f	obj/kernel.asm	/^c011314f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113152	obj/kernel.asm	/^c0113152:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0113155	obj/kernel.asm	/^c0113155:	29 c2                	sub    %eax,%edx$/;"	l
c0113157	obj/kernel.asm	/^c0113157:	89 d0                	mov    %edx,%eax$/;"	l
c0113159	obj/kernel.asm	/^c0113159:	eb 1a                	jmp    c0113175 <memcmp+0x56>$/;"	l
c011315b	obj/kernel.asm	/^c011315b:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c011315f	obj/kernel.asm	/^c011315f:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
c0113163	obj/kernel.asm	/^c0113163:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0113166	obj/kernel.asm	/^c0113166:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0113169	obj/kernel.asm	/^c0113169:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c011316c	obj/kernel.asm	/^c011316c:	85 c0                	test   %eax,%eax$/;"	l
c011316e	obj/kernel.asm	/^c011316e:	75 c3                	jne    c0113133 <memcmp+0x14>$/;"	l
c0113170	obj/kernel.asm	/^c0113170:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0113175	obj/kernel.asm	/^c0113175:	c9                   	leave  $/;"	l
c0113176	obj/kernel.asm	/^c0113176:	c3                   	ret    $/;"	l
c0113177	obj/kernel.asm	/^c0113177 <printnum>:$/;"	l
c0113177	obj/kernel.asm	/^c0113177:	55                   	push   %ebp$/;"	l
c0113178	obj/kernel.asm	/^c0113178:	89 e5                	mov    %esp,%ebp$/;"	l
c011317a	obj/kernel.asm	/^c011317a:	83 ec 38             	sub    $0x38,%esp$/;"	l
c011317d	obj/kernel.asm	/^c011317d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113180	obj/kernel.asm	/^c0113180:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0113183	obj/kernel.asm	/^c0113183:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0113186	obj/kernel.asm	/^c0113186:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0113189	obj/kernel.asm	/^c0113189:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c011318c	obj/kernel.asm	/^c011318c:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c011318f	obj/kernel.asm	/^c011318f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113192	obj/kernel.asm	/^c0113192:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0113195	obj/kernel.asm	/^c0113195:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0113198	obj/kernel.asm	/^c0113198:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c011319b	obj/kernel.asm	/^c011319b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011319e	obj/kernel.asm	/^c011319e:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01131a1	obj/kernel.asm	/^c01131a1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01131a4	obj/kernel.asm	/^c01131a4:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c01131a7	obj/kernel.asm	/^c01131a7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01131aa	obj/kernel.asm	/^c01131aa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01131ad	obj/kernel.asm	/^c01131ad:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01131b1	obj/kernel.asm	/^c01131b1:	74 1c                	je     c01131cf <printnum+0x58>$/;"	l
c01131b3	obj/kernel.asm	/^c01131b3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01131b6	obj/kernel.asm	/^c01131b6:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01131bb	obj/kernel.asm	/^c01131bb:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c01131be	obj/kernel.asm	/^c01131be:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c01131c1	obj/kernel.asm	/^c01131c1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01131c4	obj/kernel.asm	/^c01131c4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01131c9	obj/kernel.asm	/^c01131c9:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c01131cc	obj/kernel.asm	/^c01131cc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01131cf	obj/kernel.asm	/^c01131cf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01131d2	obj/kernel.asm	/^c01131d2:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01131d5	obj/kernel.asm	/^c01131d5:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c01131d8	obj/kernel.asm	/^c01131d8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01131db	obj/kernel.asm	/^c01131db:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
c01131de	obj/kernel.asm	/^c01131de:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01131e1	obj/kernel.asm	/^c01131e1:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01131e4	obj/kernel.asm	/^c01131e4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01131e7	obj/kernel.asm	/^c01131e7:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c01131ea	obj/kernel.asm	/^c01131ea:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01131ed	obj/kernel.asm	/^c01131ed:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01131f0	obj/kernel.asm	/^c01131f0:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c01131f3	obj/kernel.asm	/^c01131f3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01131f8	obj/kernel.asm	/^c01131f8:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c01131fb	obj/kernel.asm	/^c01131fb:	77 44                	ja     c0113241 <printnum+0xca>$/;"	l
c01131fd	obj/kernel.asm	/^c01131fd:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0113200	obj/kernel.asm	/^c0113200:	72 05                	jb     c0113207 <printnum+0x90>$/;"	l
c0113202	obj/kernel.asm	/^c0113202:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c0113205	obj/kernel.asm	/^c0113205:	77 3a                	ja     c0113241 <printnum+0xca>$/;"	l
c0113207	obj/kernel.asm	/^c0113207:	8b 45 20             	mov    0x20(%ebp),%eax$/;"	l
c011320a	obj/kernel.asm	/^c011320a:	83 e8 01             	sub    $0x1,%eax$/;"	l
c011320d	obj/kernel.asm	/^c011320d:	ff 75 24             	pushl  0x24(%ebp)$/;"	l
c0113210	obj/kernel.asm	/^c0113210:	50                   	push   %eax$/;"	l
c0113211	obj/kernel.asm	/^c0113211:	ff 75 1c             	pushl  0x1c(%ebp)$/;"	l
c0113214	obj/kernel.asm	/^c0113214:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0113217	obj/kernel.asm	/^c0113217:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c011321a	obj/kernel.asm	/^c011321a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c011321d	obj/kernel.asm	/^c011321d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113220	obj/kernel.asm	/^c0113220:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113223	obj/kernel.asm	/^c0113223:	e8 4f ff ff ff       	call   c0113177 <printnum>$/;"	l
c0113228	obj/kernel.asm	/^c0113228:	83 c4 20             	add    $0x20,%esp$/;"	l
c011322b	obj/kernel.asm	/^c011322b:	eb 1e                	jmp    c011324b <printnum+0xd4>$/;"	l
c011322d	obj/kernel.asm	/^c011322d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113230	obj/kernel.asm	/^c0113230:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113233	obj/kernel.asm	/^c0113233:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113236	obj/kernel.asm	/^c0113236:	ff 75 24             	pushl  0x24(%ebp)$/;"	l
c0113239	obj/kernel.asm	/^c0113239:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011323c	obj/kernel.asm	/^c011323c:	ff d0                	call   *%eax$/;"	l
c011323e	obj/kernel.asm	/^c011323e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113241	obj/kernel.asm	/^c0113241:	83 6d 20 01          	subl   $0x1,0x20(%ebp)$/;"	l
c0113245	obj/kernel.asm	/^c0113245:	83 7d 20 00          	cmpl   $0x0,0x20(%ebp)$/;"	l
c0113249	obj/kernel.asm	/^c0113249:	7f e2                	jg     c011322d <printnum+0xb6>$/;"	l
c011324b	obj/kernel.asm	/^c011324b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011324e	obj/kernel.asm	/^c011324e:	05 64 7c 11 c0       	add    $0xc0117c64,%eax$/;"	l
c0113253	obj/kernel.asm	/^c0113253:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113256	obj/kernel.asm	/^c0113256:	0f be c0             	movsbl %al,%eax$/;"	l
c0113259	obj/kernel.asm	/^c0113259:	83 ec 04             	sub    $0x4,%esp$/;"	l
c011325c	obj/kernel.asm	/^c011325c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c011325f	obj/kernel.asm	/^c011325f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113262	obj/kernel.asm	/^c0113262:	50                   	push   %eax$/;"	l
c0113263	obj/kernel.asm	/^c0113263:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113266	obj/kernel.asm	/^c0113266:	ff d0                	call   *%eax$/;"	l
c0113268	obj/kernel.asm	/^c0113268:	83 c4 10             	add    $0x10,%esp$/;"	l
c011326b	obj/kernel.asm	/^c011326b:	c9                   	leave  $/;"	l
c011326c	obj/kernel.asm	/^c011326c:	c3                   	ret    $/;"	l
c011326d	obj/kernel.asm	/^c011326d <getuint>:$/;"	l
c011326d	obj/kernel.asm	/^c011326d:	55                   	push   %ebp$/;"	l
c011326e	obj/kernel.asm	/^c011326e:	89 e5                	mov    %esp,%ebp$/;"	l
c0113270	obj/kernel.asm	/^c0113270:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c0113274	obj/kernel.asm	/^c0113274:	7e 14                	jle    c011328a <getuint+0x1d>$/;"	l
c0113276	obj/kernel.asm	/^c0113276:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113279	obj/kernel.asm	/^c0113279:	8b 00                	mov    (%eax),%eax$/;"	l
c011327b	obj/kernel.asm	/^c011327b:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c011327e	obj/kernel.asm	/^c011327e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0113281	obj/kernel.asm	/^c0113281:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0113283	obj/kernel.asm	/^c0113283:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0113286	obj/kernel.asm	/^c0113286:	8b 00                	mov    (%eax),%eax$/;"	l
c0113288	obj/kernel.asm	/^c0113288:	eb 30                	jmp    c01132ba <getuint+0x4d>$/;"	l
c011328a	obj/kernel.asm	/^c011328a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c011328e	obj/kernel.asm	/^c011328e:	74 16                	je     c01132a6 <getuint+0x39>$/;"	l
c0113290	obj/kernel.asm	/^c0113290:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113293	obj/kernel.asm	/^c0113293:	8b 00                	mov    (%eax),%eax$/;"	l
c0113295	obj/kernel.asm	/^c0113295:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0113298	obj/kernel.asm	/^c0113298:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011329b	obj/kernel.asm	/^c011329b:	89 0a                	mov    %ecx,(%edx)$/;"	l
c011329d	obj/kernel.asm	/^c011329d:	8b 00                	mov    (%eax),%eax$/;"	l
c011329f	obj/kernel.asm	/^c011329f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01132a4	obj/kernel.asm	/^c01132a4:	eb 14                	jmp    c01132ba <getuint+0x4d>$/;"	l
c01132a6	obj/kernel.asm	/^c01132a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01132a9	obj/kernel.asm	/^c01132a9:	8b 00                	mov    (%eax),%eax$/;"	l
c01132ab	obj/kernel.asm	/^c01132ab:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c01132ae	obj/kernel.asm	/^c01132ae:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01132b1	obj/kernel.asm	/^c01132b1:	89 0a                	mov    %ecx,(%edx)$/;"	l
c01132b3	obj/kernel.asm	/^c01132b3:	8b 00                	mov    (%eax),%eax$/;"	l
c01132b5	obj/kernel.asm	/^c01132b5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01132ba	obj/kernel.asm	/^c01132ba:	5d                   	pop    %ebp$/;"	l
c01132bb	obj/kernel.asm	/^c01132bb:	c3                   	ret    $/;"	l
c01132bc	obj/kernel.asm	/^c01132bc <getint>:$/;"	l
c01132bc	obj/kernel.asm	/^c01132bc:	55                   	push   %ebp$/;"	l
c01132bd	obj/kernel.asm	/^c01132bd:	89 e5                	mov    %esp,%ebp$/;"	l
c01132bf	obj/kernel.asm	/^c01132bf:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c01132c3	obj/kernel.asm	/^c01132c3:	7e 14                	jle    c01132d9 <getint+0x1d>$/;"	l
c01132c5	obj/kernel.asm	/^c01132c5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01132c8	obj/kernel.asm	/^c01132c8:	8b 00                	mov    (%eax),%eax$/;"	l
c01132ca	obj/kernel.asm	/^c01132ca:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c01132cd	obj/kernel.asm	/^c01132cd:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01132d0	obj/kernel.asm	/^c01132d0:	89 0a                	mov    %ecx,(%edx)$/;"	l
c01132d2	obj/kernel.asm	/^c01132d2:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01132d5	obj/kernel.asm	/^c01132d5:	8b 00                	mov    (%eax),%eax$/;"	l
c01132d7	obj/kernel.asm	/^c01132d7:	eb 28                	jmp    c0113301 <getint+0x45>$/;"	l
c01132d9	obj/kernel.asm	/^c01132d9:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01132dd	obj/kernel.asm	/^c01132dd:	74 12                	je     c01132f1 <getint+0x35>$/;"	l
c01132df	obj/kernel.asm	/^c01132df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01132e2	obj/kernel.asm	/^c01132e2:	8b 00                	mov    (%eax),%eax$/;"	l
c01132e4	obj/kernel.asm	/^c01132e4:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c01132e7	obj/kernel.asm	/^c01132e7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01132ea	obj/kernel.asm	/^c01132ea:	89 0a                	mov    %ecx,(%edx)$/;"	l
c01132ec	obj/kernel.asm	/^c01132ec:	8b 00                	mov    (%eax),%eax$/;"	l
c01132ee	obj/kernel.asm	/^c01132ee:	99                   	cltd   $/;"	l
c01132ef	obj/kernel.asm	/^c01132ef:	eb 10                	jmp    c0113301 <getint+0x45>$/;"	l
c01132f1	obj/kernel.asm	/^c01132f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01132f4	obj/kernel.asm	/^c01132f4:	8b 00                	mov    (%eax),%eax$/;"	l
c01132f6	obj/kernel.asm	/^c01132f6:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c01132f9	obj/kernel.asm	/^c01132f9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01132fc	obj/kernel.asm	/^c01132fc:	89 0a                	mov    %ecx,(%edx)$/;"	l
c01132fe	obj/kernel.asm	/^c01132fe:	8b 00                	mov    (%eax),%eax$/;"	l
c0113300	obj/kernel.asm	/^c0113300:	99                   	cltd   $/;"	l
c0113301	obj/kernel.asm	/^c0113301:	5d                   	pop    %ebp$/;"	l
c0113302	obj/kernel.asm	/^c0113302:	c3                   	ret    $/;"	l
c0113303	obj/kernel.asm	/^c0113303 <printfmt>:$/;"	l
c0113303	obj/kernel.asm	/^c0113303:	55                   	push   %ebp$/;"	l
c0113304	obj/kernel.asm	/^c0113304:	89 e5                	mov    %esp,%ebp$/;"	l
c0113306	obj/kernel.asm	/^c0113306:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0113309	obj/kernel.asm	/^c0113309:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c011330c	obj/kernel.asm	/^c011330c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011330f	obj/kernel.asm	/^c011330f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113312	obj/kernel.asm	/^c0113312:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0113315	obj/kernel.asm	/^c0113315:	50                   	push   %eax$/;"	l
c0113316	obj/kernel.asm	/^c0113316:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0113319	obj/kernel.asm	/^c0113319:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c011331c	obj/kernel.asm	/^c011331c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c011331f	obj/kernel.asm	/^c011331f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113322	obj/kernel.asm	/^c0113322:	e8 05 00 00 00       	call   c011332c <vprintfmt>$/;"	l
c0113327	obj/kernel.asm	/^c0113327:	83 c4 20             	add    $0x20,%esp$/;"	l
c011332a	obj/kernel.asm	/^c011332a:	c9                   	leave  $/;"	l
c011332b	obj/kernel.asm	/^c011332b:	c3                   	ret    $/;"	l
c011332c	obj/kernel.asm	/^c011332c <vprintfmt>:$/;"	l
c011332c	obj/kernel.asm	/^c011332c:	55                   	push   %ebp$/;"	l
c011332d	obj/kernel.asm	/^c011332d:	89 e5                	mov    %esp,%ebp$/;"	l
c011332f	obj/kernel.asm	/^c011332f:	56                   	push   %esi$/;"	l
c0113330	obj/kernel.asm	/^c0113330:	53                   	push   %ebx$/;"	l
c0113331	obj/kernel.asm	/^c0113331:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0113334	obj/kernel.asm	/^c0113334:	eb 1b                	jmp    c0113351 <vprintfmt+0x25>$/;"	l
c0113336	obj/kernel.asm	/^c0113336:	85 db                	test   %ebx,%ebx$/;"	l
c0113338	obj/kernel.asm	/^c0113338:	75 05                	jne    c011333f <vprintfmt+0x13>$/;"	l
c011333a	obj/kernel.asm	/^c011333a:	e9 bb 03 00 00       	jmp    c01136fa <vprintfmt+0x3ce>$/;"	l
c011333f	obj/kernel.asm	/^c011333f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113342	obj/kernel.asm	/^c0113342:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113345	obj/kernel.asm	/^c0113345:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113348	obj/kernel.asm	/^c0113348:	53                   	push   %ebx$/;"	l
c0113349	obj/kernel.asm	/^c0113349:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011334c	obj/kernel.asm	/^c011334c:	ff d0                	call   *%eax$/;"	l
c011334e	obj/kernel.asm	/^c011334e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113351	obj/kernel.asm	/^c0113351:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113354	obj/kernel.asm	/^c0113354:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0113357	obj/kernel.asm	/^c0113357:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c011335a	obj/kernel.asm	/^c011335a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011335d	obj/kernel.asm	/^c011335d:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c0113360	obj/kernel.asm	/^c0113360:	83 fb 25             	cmp    $0x25,%ebx$/;"	l
c0113363	obj/kernel.asm	/^c0113363:	75 d1                	jne    c0113336 <vprintfmt+0xa>$/;"	l
c0113365	obj/kernel.asm	/^c0113365:	c6 45 db 20          	movb   $0x20,-0x25(%ebp)$/;"	l
c0113369	obj/kernel.asm	/^c0113369:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c0113370	obj/kernel.asm	/^c0113370:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113373	obj/kernel.asm	/^c0113373:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113376	obj/kernel.asm	/^c0113376:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c011337d	obj/kernel.asm	/^c011337d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113380	obj/kernel.asm	/^c0113380:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0113383	obj/kernel.asm	/^c0113383:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113386	obj/kernel.asm	/^c0113386:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0113389	obj/kernel.asm	/^c0113389:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c011338c	obj/kernel.asm	/^c011338c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011338f	obj/kernel.asm	/^c011338f:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c0113392	obj/kernel.asm	/^c0113392:	8d 43 dd             	lea    -0x23(%ebx),%eax$/;"	l
c0113395	obj/kernel.asm	/^c0113395:	83 f8 55             	cmp    $0x55,%eax$/;"	l
c0113398	obj/kernel.asm	/^c0113398:	0f 87 2c 03 00 00    	ja     c01136ca <vprintfmt+0x39e>$/;"	l
c011339e	obj/kernel.asm	/^c011339e:	8b 04 85 88 7c 11 c0 	mov    -0x3fee8378(,%eax,4),%eax$/;"	l
c01133a5	obj/kernel.asm	/^c01133a5:	ff e0                	jmp    *%eax$/;"	l
c01133a7	obj/kernel.asm	/^c01133a7:	c6 45 db 2d          	movb   $0x2d,-0x25(%ebp)$/;"	l
c01133ab	obj/kernel.asm	/^c01133ab:	eb d6                	jmp    c0113383 <vprintfmt+0x57>$/;"	l
c01133ad	obj/kernel.asm	/^c01133ad:	c6 45 db 30          	movb   $0x30,-0x25(%ebp)$/;"	l
c01133b1	obj/kernel.asm	/^c01133b1:	eb d0                	jmp    c0113383 <vprintfmt+0x57>$/;"	l
c01133b3	obj/kernel.asm	/^c01133b3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c01133ba	obj/kernel.asm	/^c01133ba:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01133bd	obj/kernel.asm	/^c01133bd:	89 d0                	mov    %edx,%eax$/;"	l
c01133bf	obj/kernel.asm	/^c01133bf:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01133c2	obj/kernel.asm	/^c01133c2:	01 d0                	add    %edx,%eax$/;"	l
c01133c4	obj/kernel.asm	/^c01133c4:	01 c0                	add    %eax,%eax$/;"	l
c01133c6	obj/kernel.asm	/^c01133c6:	01 d8                	add    %ebx,%eax$/;"	l
c01133c8	obj/kernel.asm	/^c01133c8:	83 e8 30             	sub    $0x30,%eax$/;"	l
c01133cb	obj/kernel.asm	/^c01133cb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01133ce	obj/kernel.asm	/^c01133ce:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01133d1	obj/kernel.asm	/^c01133d1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01133d4	obj/kernel.asm	/^c01133d4:	0f be d8             	movsbl %al,%ebx$/;"	l
c01133d7	obj/kernel.asm	/^c01133d7:	83 fb 2f             	cmp    $0x2f,%ebx$/;"	l
c01133da	obj/kernel.asm	/^c01133da:	7e 0b                	jle    c01133e7 <vprintfmt+0xbb>$/;"	l
c01133dc	obj/kernel.asm	/^c01133dc:	83 fb 39             	cmp    $0x39,%ebx$/;"	l
c01133df	obj/kernel.asm	/^c01133df:	7f 06                	jg     c01133e7 <vprintfmt+0xbb>$/;"	l
c01133e1	obj/kernel.asm	/^c01133e1:	83 45 14 01          	addl   $0x1,0x14(%ebp)$/;"	l
c01133e5	obj/kernel.asm	/^c01133e5:	eb d3                	jmp    c01133ba <vprintfmt+0x8e>$/;"	l
c01133e7	obj/kernel.asm	/^c01133e7:	eb 2e                	jmp    c0113417 <vprintfmt+0xeb>$/;"	l
c01133e9	obj/kernel.asm	/^c01133e9:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01133ec	obj/kernel.asm	/^c01133ec:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c01133ef	obj/kernel.asm	/^c01133ef:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c01133f2	obj/kernel.asm	/^c01133f2:	8b 00                	mov    (%eax),%eax$/;"	l
c01133f4	obj/kernel.asm	/^c01133f4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01133f7	obj/kernel.asm	/^c01133f7:	eb 1e                	jmp    c0113417 <vprintfmt+0xeb>$/;"	l
c01133f9	obj/kernel.asm	/^c01133f9:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01133fd	obj/kernel.asm	/^c01133fd:	79 07                	jns    c0113406 <vprintfmt+0xda>$/;"	l
c01133ff	obj/kernel.asm	/^c01133ff:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0113406	obj/kernel.asm	/^c0113406:	e9 78 ff ff ff       	jmp    c0113383 <vprintfmt+0x57>$/;"	l
c011340b	obj/kernel.asm	/^c011340b:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
c0113412	obj/kernel.asm	/^c0113412:	e9 6c ff ff ff       	jmp    c0113383 <vprintfmt+0x57>$/;"	l
c0113417	obj/kernel.asm	/^c0113417:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c011341b	obj/kernel.asm	/^c011341b:	79 0d                	jns    c011342a <vprintfmt+0xfe>$/;"	l
c011341d	obj/kernel.asm	/^c011341d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113420	obj/kernel.asm	/^c0113420:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113423	obj/kernel.asm	/^c0113423:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c011342a	obj/kernel.asm	/^c011342a:	e9 54 ff ff ff       	jmp    c0113383 <vprintfmt+0x57>$/;"	l
c011342f	obj/kernel.asm	/^c011342f:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
c0113433	obj/kernel.asm	/^c0113433:	e9 4b ff ff ff       	jmp    c0113383 <vprintfmt+0x57>$/;"	l
c0113438	obj/kernel.asm	/^c0113438:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c011343b	obj/kernel.asm	/^c011343b:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c011343e	obj/kernel.asm	/^c011343e:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0113441	obj/kernel.asm	/^c0113441:	8b 00                	mov    (%eax),%eax$/;"	l
c0113443	obj/kernel.asm	/^c0113443:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113446	obj/kernel.asm	/^c0113446:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113449	obj/kernel.asm	/^c0113449:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c011344c	obj/kernel.asm	/^c011344c:	50                   	push   %eax$/;"	l
c011344d	obj/kernel.asm	/^c011344d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113450	obj/kernel.asm	/^c0113450:	ff d0                	call   *%eax$/;"	l
c0113452	obj/kernel.asm	/^c0113452:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113455	obj/kernel.asm	/^c0113455:	e9 9b 02 00 00       	jmp    c01136f5 <vprintfmt+0x3c9>$/;"	l
c011345a	obj/kernel.asm	/^c011345a:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c011345d	obj/kernel.asm	/^c011345d:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0113460	obj/kernel.asm	/^c0113460:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0113463	obj/kernel.asm	/^c0113463:	8b 18                	mov    (%eax),%ebx$/;"	l
c0113465	obj/kernel.asm	/^c0113465:	85 db                	test   %ebx,%ebx$/;"	l
c0113467	obj/kernel.asm	/^c0113467:	79 02                	jns    c011346b <vprintfmt+0x13f>$/;"	l
c0113469	obj/kernel.asm	/^c0113469:	f7 db                	neg    %ebx$/;"	l
c011346b	obj/kernel.asm	/^c011346b:	83 fb 18             	cmp    $0x18,%ebx$/;"	l
c011346e	obj/kernel.asm	/^c011346e:	7f 0b                	jg     c011347b <vprintfmt+0x14f>$/;"	l
c0113470	obj/kernel.asm	/^c0113470:	8b 34 9d 00 7c 11 c0 	mov    -0x3fee8400(,%ebx,4),%esi$/;"	l
c0113477	obj/kernel.asm	/^c0113477:	85 f6                	test   %esi,%esi$/;"	l
c0113479	obj/kernel.asm	/^c0113479:	75 1f                	jne    c011349a <vprintfmt+0x16e>$/;"	l
c011347b	obj/kernel.asm	/^c011347b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011347e	obj/kernel.asm	/^c011347e:	53                   	push   %ebx$/;"	l
c011347f	obj/kernel.asm	/^c011347f:	68 75 7c 11 c0       	push   $0xc0117c75$/;"	l
c0113484	obj/kernel.asm	/^c0113484:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113487	obj/kernel.asm	/^c0113487:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c011348a	obj/kernel.asm	/^c011348a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011348d	obj/kernel.asm	/^c011348d:	e8 71 fe ff ff       	call   c0113303 <printfmt>$/;"	l
c0113492	obj/kernel.asm	/^c0113492:	83 c4 20             	add    $0x20,%esp$/;"	l
c0113495	obj/kernel.asm	/^c0113495:	e9 5b 02 00 00       	jmp    c01136f5 <vprintfmt+0x3c9>$/;"	l
c011349a	obj/kernel.asm	/^c011349a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011349d	obj/kernel.asm	/^c011349d:	56                   	push   %esi$/;"	l
c011349e	obj/kernel.asm	/^c011349e:	68 7e 7c 11 c0       	push   $0xc0117c7e$/;"	l
c01134a3	obj/kernel.asm	/^c01134a3:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01134a6	obj/kernel.asm	/^c01134a6:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01134a9	obj/kernel.asm	/^c01134a9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01134ac	obj/kernel.asm	/^c01134ac:	e8 52 fe ff ff       	call   c0113303 <printfmt>$/;"	l
c01134b1	obj/kernel.asm	/^c01134b1:	83 c4 20             	add    $0x20,%esp$/;"	l
c01134b4	obj/kernel.asm	/^c01134b4:	e9 3c 02 00 00       	jmp    c01136f5 <vprintfmt+0x3c9>$/;"	l
c01134b9	obj/kernel.asm	/^c01134b9:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01134bc	obj/kernel.asm	/^c01134bc:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c01134bf	obj/kernel.asm	/^c01134bf:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c01134c2	obj/kernel.asm	/^c01134c2:	8b 30                	mov    (%eax),%esi$/;"	l
c01134c4	obj/kernel.asm	/^c01134c4:	85 f6                	test   %esi,%esi$/;"	l
c01134c6	obj/kernel.asm	/^c01134c6:	75 05                	jne    c01134cd <vprintfmt+0x1a1>$/;"	l
c01134c8	obj/kernel.asm	/^c01134c8:	be 81 7c 11 c0       	mov    $0xc0117c81,%esi$/;"	l
c01134cd	obj/kernel.asm	/^c01134cd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01134d1	obj/kernel.asm	/^c01134d1:	7e 42                	jle    c0113515 <vprintfmt+0x1e9>$/;"	l
c01134d3	obj/kernel.asm	/^c01134d3:	80 7d db 2d          	cmpb   $0x2d,-0x25(%ebp)$/;"	l
c01134d7	obj/kernel.asm	/^c01134d7:	74 3c                	je     c0113515 <vprintfmt+0x1e9>$/;"	l
c01134d9	obj/kernel.asm	/^c01134d9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01134dc	obj/kernel.asm	/^c01134dc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01134df	obj/kernel.asm	/^c01134df:	50                   	push   %eax$/;"	l
c01134e0	obj/kernel.asm	/^c01134e0:	56                   	push   %esi$/;"	l
c01134e1	obj/kernel.asm	/^c01134e1:	e8 d4 f7 ff ff       	call   c0112cba <strnlen>$/;"	l
c01134e6	obj/kernel.asm	/^c01134e6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01134e9	obj/kernel.asm	/^c01134e9:	89 c2                	mov    %eax,%edx$/;"	l
c01134eb	obj/kernel.asm	/^c01134eb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01134ee	obj/kernel.asm	/^c01134ee:	29 d0                	sub    %edx,%eax$/;"	l
c01134f0	obj/kernel.asm	/^c01134f0:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01134f3	obj/kernel.asm	/^c01134f3:	eb 1a                	jmp    c011350f <vprintfmt+0x1e3>$/;"	l
c01134f5	obj/kernel.asm	/^c01134f5:	0f be 45 db          	movsbl -0x25(%ebp),%eax$/;"	l
c01134f9	obj/kernel.asm	/^c01134f9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01134fc	obj/kernel.asm	/^c01134fc:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01134ff	obj/kernel.asm	/^c01134ff:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113502	obj/kernel.asm	/^c0113502:	50                   	push   %eax$/;"	l
c0113503	obj/kernel.asm	/^c0113503:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113506	obj/kernel.asm	/^c0113506:	ff d0                	call   *%eax$/;"	l
c0113508	obj/kernel.asm	/^c0113508:	83 c4 10             	add    $0x10,%esp$/;"	l
c011350b	obj/kernel.asm	/^c011350b:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c011350f	obj/kernel.asm	/^c011350f:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0113513	obj/kernel.asm	/^c0113513:	7f e0                	jg     c01134f5 <vprintfmt+0x1c9>$/;"	l
c0113515	obj/kernel.asm	/^c0113515:	eb 3b                	jmp    c0113552 <vprintfmt+0x226>$/;"	l
c0113517	obj/kernel.asm	/^c0113517:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c011351b	obj/kernel.asm	/^c011351b:	74 1f                	je     c011353c <vprintfmt+0x210>$/;"	l
c011351d	obj/kernel.asm	/^c011351d:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
c0113520	obj/kernel.asm	/^c0113520:	7e 05                	jle    c0113527 <vprintfmt+0x1fb>$/;"	l
c0113522	obj/kernel.asm	/^c0113522:	83 fb 7e             	cmp    $0x7e,%ebx$/;"	l
c0113525	obj/kernel.asm	/^c0113525:	7e 15                	jle    c011353c <vprintfmt+0x210>$/;"	l
c0113527	obj/kernel.asm	/^c0113527:	83 ec 04             	sub    $0x4,%esp$/;"	l
c011352a	obj/kernel.asm	/^c011352a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c011352d	obj/kernel.asm	/^c011352d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113530	obj/kernel.asm	/^c0113530:	6a 3f                	push   $0x3f$/;"	l
c0113532	obj/kernel.asm	/^c0113532:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113535	obj/kernel.asm	/^c0113535:	ff d0                	call   *%eax$/;"	l
c0113537	obj/kernel.asm	/^c0113537:	83 c4 10             	add    $0x10,%esp$/;"	l
c011353a	obj/kernel.asm	/^c011353a:	eb 12                	jmp    c011354e <vprintfmt+0x222>$/;"	l
c011353c	obj/kernel.asm	/^c011353c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c011353f	obj/kernel.asm	/^c011353f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113542	obj/kernel.asm	/^c0113542:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113545	obj/kernel.asm	/^c0113545:	53                   	push   %ebx$/;"	l
c0113546	obj/kernel.asm	/^c0113546:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113549	obj/kernel.asm	/^c0113549:	ff d0                	call   *%eax$/;"	l
c011354b	obj/kernel.asm	/^c011354b:	83 c4 10             	add    $0x10,%esp$/;"	l
c011354e	obj/kernel.asm	/^c011354e:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c0113552	obj/kernel.asm	/^c0113552:	89 f0                	mov    %esi,%eax$/;"	l
c0113554	obj/kernel.asm	/^c0113554:	8d 70 01             	lea    0x1(%eax),%esi$/;"	l
c0113557	obj/kernel.asm	/^c0113557:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011355a	obj/kernel.asm	/^c011355a:	0f be d8             	movsbl %al,%ebx$/;"	l
c011355d	obj/kernel.asm	/^c011355d:	85 db                	test   %ebx,%ebx$/;"	l
c011355f	obj/kernel.asm	/^c011355f:	74 10                	je     c0113571 <vprintfmt+0x245>$/;"	l
c0113561	obj/kernel.asm	/^c0113561:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0113565	obj/kernel.asm	/^c0113565:	78 b0                	js     c0113517 <vprintfmt+0x1eb>$/;"	l
c0113567	obj/kernel.asm	/^c0113567:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
c011356b	obj/kernel.asm	/^c011356b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c011356f	obj/kernel.asm	/^c011356f:	79 a6                	jns    c0113517 <vprintfmt+0x1eb>$/;"	l
c0113571	obj/kernel.asm	/^c0113571:	eb 17                	jmp    c011358a <vprintfmt+0x25e>$/;"	l
c0113573	obj/kernel.asm	/^c0113573:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113576	obj/kernel.asm	/^c0113576:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113579	obj/kernel.asm	/^c0113579:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c011357c	obj/kernel.asm	/^c011357c:	6a 20                	push   $0x20$/;"	l
c011357e	obj/kernel.asm	/^c011357e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113581	obj/kernel.asm	/^c0113581:	ff d0                	call   *%eax$/;"	l
c0113583	obj/kernel.asm	/^c0113583:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113586	obj/kernel.asm	/^c0113586:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c011358a	obj/kernel.asm	/^c011358a:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c011358e	obj/kernel.asm	/^c011358e:	7f e3                	jg     c0113573 <vprintfmt+0x247>$/;"	l
c0113590	obj/kernel.asm	/^c0113590:	e9 60 01 00 00       	jmp    c01136f5 <vprintfmt+0x3c9>$/;"	l
c0113595	obj/kernel.asm	/^c0113595:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0113598	obj/kernel.asm	/^c0113598:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c011359b	obj/kernel.asm	/^c011359b:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c011359e	obj/kernel.asm	/^c011359e:	50                   	push   %eax$/;"	l
c011359f	obj/kernel.asm	/^c011359f:	e8 18 fd ff ff       	call   c01132bc <getint>$/;"	l
c01135a4	obj/kernel.asm	/^c01135a4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01135a7	obj/kernel.asm	/^c01135a7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01135aa	obj/kernel.asm	/^c01135aa:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c01135ad	obj/kernel.asm	/^c01135ad:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01135b0	obj/kernel.asm	/^c01135b0:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01135b3	obj/kernel.asm	/^c01135b3:	85 d2                	test   %edx,%edx$/;"	l
c01135b5	obj/kernel.asm	/^c01135b5:	79 26                	jns    c01135dd <vprintfmt+0x2b1>$/;"	l
c01135b7	obj/kernel.asm	/^c01135b7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01135ba	obj/kernel.asm	/^c01135ba:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01135bd	obj/kernel.asm	/^c01135bd:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01135c0	obj/kernel.asm	/^c01135c0:	6a 2d                	push   $0x2d$/;"	l
c01135c2	obj/kernel.asm	/^c01135c2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01135c5	obj/kernel.asm	/^c01135c5:	ff d0                	call   *%eax$/;"	l
c01135c7	obj/kernel.asm	/^c01135c7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01135ca	obj/kernel.asm	/^c01135ca:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01135cd	obj/kernel.asm	/^c01135cd:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01135d0	obj/kernel.asm	/^c01135d0:	f7 d8                	neg    %eax$/;"	l
c01135d2	obj/kernel.asm	/^c01135d2:	83 d2 00             	adc    $0x0,%edx$/;"	l
c01135d5	obj/kernel.asm	/^c01135d5:	f7 da                	neg    %edx$/;"	l
c01135d7	obj/kernel.asm	/^c01135d7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01135da	obj/kernel.asm	/^c01135da:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c01135dd	obj/kernel.asm	/^c01135dd:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c01135e4	obj/kernel.asm	/^c01135e4:	e9 a8 00 00 00       	jmp    c0113691 <vprintfmt+0x365>$/;"	l
c01135e9	obj/kernel.asm	/^c01135e9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01135ec	obj/kernel.asm	/^c01135ec:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01135ef	obj/kernel.asm	/^c01135ef:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c01135f2	obj/kernel.asm	/^c01135f2:	50                   	push   %eax$/;"	l
c01135f3	obj/kernel.asm	/^c01135f3:	e8 75 fc ff ff       	call   c011326d <getuint>$/;"	l
c01135f8	obj/kernel.asm	/^c01135f8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01135fb	obj/kernel.asm	/^c01135fb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01135fe	obj/kernel.asm	/^c01135fe:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0113601	obj/kernel.asm	/^c0113601:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c0113608	obj/kernel.asm	/^c0113608:	e9 84 00 00 00       	jmp    c0113691 <vprintfmt+0x365>$/;"	l
c011360d	obj/kernel.asm	/^c011360d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0113610	obj/kernel.asm	/^c0113610:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0113613	obj/kernel.asm	/^c0113613:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0113616	obj/kernel.asm	/^c0113616:	50                   	push   %eax$/;"	l
c0113617	obj/kernel.asm	/^c0113617:	e8 51 fc ff ff       	call   c011326d <getuint>$/;"	l
c011361c	obj/kernel.asm	/^c011361c:	83 c4 10             	add    $0x10,%esp$/;"	l
c011361f	obj/kernel.asm	/^c011361f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113622	obj/kernel.asm	/^c0113622:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0113625	obj/kernel.asm	/^c0113625:	c7 45 ec 08 00 00 00 	movl   $0x8,-0x14(%ebp)$/;"	l
c011362c	obj/kernel.asm	/^c011362c:	eb 63                	jmp    c0113691 <vprintfmt+0x365>$/;"	l
c011362e	obj/kernel.asm	/^c011362e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113631	obj/kernel.asm	/^c0113631:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113634	obj/kernel.asm	/^c0113634:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113637	obj/kernel.asm	/^c0113637:	6a 30                	push   $0x30$/;"	l
c0113639	obj/kernel.asm	/^c0113639:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011363c	obj/kernel.asm	/^c011363c:	ff d0                	call   *%eax$/;"	l
c011363e	obj/kernel.asm	/^c011363e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113641	obj/kernel.asm	/^c0113641:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113644	obj/kernel.asm	/^c0113644:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113647	obj/kernel.asm	/^c0113647:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c011364a	obj/kernel.asm	/^c011364a:	6a 78                	push   $0x78$/;"	l
c011364c	obj/kernel.asm	/^c011364c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011364f	obj/kernel.asm	/^c011364f:	ff d0                	call   *%eax$/;"	l
c0113651	obj/kernel.asm	/^c0113651:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113654	obj/kernel.asm	/^c0113654:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0113657	obj/kernel.asm	/^c0113657:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c011365a	obj/kernel.asm	/^c011365a:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c011365d	obj/kernel.asm	/^c011365d:	8b 00                	mov    (%eax),%eax$/;"	l
c011365f	obj/kernel.asm	/^c011365f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113662	obj/kernel.asm	/^c0113662:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0113669	obj/kernel.asm	/^c0113669:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c0113670	obj/kernel.asm	/^c0113670:	eb 1f                	jmp    c0113691 <vprintfmt+0x365>$/;"	l
c0113672	obj/kernel.asm	/^c0113672:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0113675	obj/kernel.asm	/^c0113675:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0113678	obj/kernel.asm	/^c0113678:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c011367b	obj/kernel.asm	/^c011367b:	50                   	push   %eax$/;"	l
c011367c	obj/kernel.asm	/^c011367c:	e8 ec fb ff ff       	call   c011326d <getuint>$/;"	l
c0113681	obj/kernel.asm	/^c0113681:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113684	obj/kernel.asm	/^c0113684:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113687	obj/kernel.asm	/^c0113687:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c011368a	obj/kernel.asm	/^c011368a:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c0113691	obj/kernel.asm	/^c0113691:	0f be 55 db          	movsbl -0x25(%ebp),%edx$/;"	l
c0113695	obj/kernel.asm	/^c0113695:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113698	obj/kernel.asm	/^c0113698:	52                   	push   %edx$/;"	l
c0113699	obj/kernel.asm	/^c0113699:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c011369c	obj/kernel.asm	/^c011369c:	50                   	push   %eax$/;"	l
c011369d	obj/kernel.asm	/^c011369d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01136a0	obj/kernel.asm	/^c01136a0:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01136a3	obj/kernel.asm	/^c01136a3:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01136a6	obj/kernel.asm	/^c01136a6:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01136a9	obj/kernel.asm	/^c01136a9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01136ac	obj/kernel.asm	/^c01136ac:	e8 c6 fa ff ff       	call   c0113177 <printnum>$/;"	l
c01136b1	obj/kernel.asm	/^c01136b1:	83 c4 20             	add    $0x20,%esp$/;"	l
c01136b4	obj/kernel.asm	/^c01136b4:	eb 3f                	jmp    c01136f5 <vprintfmt+0x3c9>$/;"	l
c01136b6	obj/kernel.asm	/^c01136b6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01136b9	obj/kernel.asm	/^c01136b9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01136bc	obj/kernel.asm	/^c01136bc:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01136bf	obj/kernel.asm	/^c01136bf:	53                   	push   %ebx$/;"	l
c01136c0	obj/kernel.asm	/^c01136c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01136c3	obj/kernel.asm	/^c01136c3:	ff d0                	call   *%eax$/;"	l
c01136c5	obj/kernel.asm	/^c01136c5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01136c8	obj/kernel.asm	/^c01136c8:	eb 2b                	jmp    c01136f5 <vprintfmt+0x3c9>$/;"	l
c01136ca	obj/kernel.asm	/^c01136ca:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01136cd	obj/kernel.asm	/^c01136cd:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01136d0	obj/kernel.asm	/^c01136d0:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01136d3	obj/kernel.asm	/^c01136d3:	6a 25                	push   $0x25$/;"	l
c01136d5	obj/kernel.asm	/^c01136d5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01136d8	obj/kernel.asm	/^c01136d8:	ff d0                	call   *%eax$/;"	l
c01136da	obj/kernel.asm	/^c01136da:	83 c4 10             	add    $0x10,%esp$/;"	l
c01136dd	obj/kernel.asm	/^c01136dd:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c01136e1	obj/kernel.asm	/^c01136e1:	eb 04                	jmp    c01136e7 <vprintfmt+0x3bb>$/;"	l
c01136e3	obj/kernel.asm	/^c01136e3:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c01136e7	obj/kernel.asm	/^c01136e7:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01136ea	obj/kernel.asm	/^c01136ea:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01136ed	obj/kernel.asm	/^c01136ed:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01136f0	obj/kernel.asm	/^c01136f0:	3c 25                	cmp    $0x25,%al$/;"	l
c01136f2	obj/kernel.asm	/^c01136f2:	75 ef                	jne    c01136e3 <vprintfmt+0x3b7>$/;"	l
c01136f4	obj/kernel.asm	/^c01136f4:	90                   	nop$/;"	l
c01136f5	obj/kernel.asm	/^c01136f5:	e9 3a fc ff ff       	jmp    c0113334 <vprintfmt+0x8>$/;"	l
c01136fa	obj/kernel.asm	/^c01136fa:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c01136fd	obj/kernel.asm	/^c01136fd:	5b                   	pop    %ebx$/;"	l
c01136fe	obj/kernel.asm	/^c01136fe:	5e                   	pop    %esi$/;"	l
c01136ff	obj/kernel.asm	/^c01136ff:	5d                   	pop    %ebp$/;"	l
c0113700	obj/kernel.asm	/^c0113700:	c3                   	ret    $/;"	l
c0113701	obj/kernel.asm	/^c0113701 <sprintputch>:$/;"	l
c0113701	obj/kernel.asm	/^c0113701:	55                   	push   %ebp$/;"	l
c0113702	obj/kernel.asm	/^c0113702:	89 e5                	mov    %esp,%ebp$/;"	l
c0113704	obj/kernel.asm	/^c0113704:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113707	obj/kernel.asm	/^c0113707:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011370a	obj/kernel.asm	/^c011370a:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c011370d	obj/kernel.asm	/^c011370d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113710	obj/kernel.asm	/^c0113710:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0113713	obj/kernel.asm	/^c0113713:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113716	obj/kernel.asm	/^c0113716:	8b 10                	mov    (%eax),%edx$/;"	l
c0113718	obj/kernel.asm	/^c0113718:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011371b	obj/kernel.asm	/^c011371b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011371e	obj/kernel.asm	/^c011371e:	39 c2                	cmp    %eax,%edx$/;"	l
c0113720	obj/kernel.asm	/^c0113720:	73 12                	jae    c0113734 <sprintputch+0x33>$/;"	l
c0113722	obj/kernel.asm	/^c0113722:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113725	obj/kernel.asm	/^c0113725:	8b 00                	mov    (%eax),%eax$/;"	l
c0113727	obj/kernel.asm	/^c0113727:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c011372a	obj/kernel.asm	/^c011372a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c011372d	obj/kernel.asm	/^c011372d:	89 0a                	mov    %ecx,(%edx)$/;"	l
c011372f	obj/kernel.asm	/^c011372f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0113732	obj/kernel.asm	/^c0113732:	88 10                	mov    %dl,(%eax)$/;"	l
c0113734	obj/kernel.asm	/^c0113734:	5d                   	pop    %ebp$/;"	l
c0113735	obj/kernel.asm	/^c0113735:	c3                   	ret    $/;"	l
c0113736	obj/kernel.asm	/^c0113736 <snprintf>:$/;"	l
c0113736	obj/kernel.asm	/^c0113736:	55                   	push   %ebp$/;"	l
c0113737	obj/kernel.asm	/^c0113737:	89 e5                	mov    %esp,%ebp$/;"	l
c0113739	obj/kernel.asm	/^c0113739:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011373c	obj/kernel.asm	/^c011373c:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c011373f	obj/kernel.asm	/^c011373f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113742	obj/kernel.asm	/^c0113742:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113745	obj/kernel.asm	/^c0113745:	50                   	push   %eax$/;"	l
c0113746	obj/kernel.asm	/^c0113746:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113749	obj/kernel.asm	/^c0113749:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c011374c	obj/kernel.asm	/^c011374c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011374f	obj/kernel.asm	/^c011374f:	e8 0b 00 00 00       	call   c011375f <vsnprintf>$/;"	l
c0113754	obj/kernel.asm	/^c0113754:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113757	obj/kernel.asm	/^c0113757:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011375a	obj/kernel.asm	/^c011375a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011375d	obj/kernel.asm	/^c011375d:	c9                   	leave  $/;"	l
c011375e	obj/kernel.asm	/^c011375e:	c3                   	ret    $/;"	l
c011375f	obj/kernel.asm	/^c011375f <vsnprintf>:$/;"	l
c011375f	obj/kernel.asm	/^c011375f:	55                   	push   %ebp$/;"	l
c0113760	obj/kernel.asm	/^c0113760:	89 e5                	mov    %esp,%ebp$/;"	l
c0113762	obj/kernel.asm	/^c0113762:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0113765	obj/kernel.asm	/^c0113765:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113768	obj/kernel.asm	/^c0113768:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011376b	obj/kernel.asm	/^c011376b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011376e	obj/kernel.asm	/^c011376e:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0113771	obj/kernel.asm	/^c0113771:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113774	obj/kernel.asm	/^c0113774:	01 d0                	add    %edx,%eax$/;"	l
c0113776	obj/kernel.asm	/^c0113776:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113779	obj/kernel.asm	/^c0113779:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0113780	obj/kernel.asm	/^c0113780:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0113784	obj/kernel.asm	/^c0113784:	74 0a                	je     c0113790 <vsnprintf+0x31>$/;"	l
c0113786	obj/kernel.asm	/^c0113786:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0113789	obj/kernel.asm	/^c0113789:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011378c	obj/kernel.asm	/^c011378c:	39 c2                	cmp    %eax,%edx$/;"	l
c011378e	obj/kernel.asm	/^c011378e:	76 07                	jbe    c0113797 <vsnprintf+0x38>$/;"	l
c0113790	obj/kernel.asm	/^c0113790:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0113795	obj/kernel.asm	/^c0113795:	eb 28                	jmp    c01137bf <vsnprintf+0x60>$/;"	l
c0113797	obj/kernel.asm	/^c0113797:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011379a	obj/kernel.asm	/^c011379a:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c011379d	obj/kernel.asm	/^c011379d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01137a0	obj/kernel.asm	/^c01137a0:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c01137a3	obj/kernel.asm	/^c01137a3:	50                   	push   %eax$/;"	l
c01137a4	obj/kernel.asm	/^c01137a4:	68 d9 6a ff ff       	push   $0xffff6ad9$/;"	l
c01137a9	obj/kernel.asm	/^c01137a9:	68 01 37 11 c0       	push   $0xc0113701$/;"	l
c01137ae	obj/kernel.asm	/^c01137ae:	e8 79 fb ff ff       	call   c011332c <vprintfmt>$/;"	l
c01137b3	obj/kernel.asm	/^c01137b3:	83 c4 20             	add    $0x20,%esp$/;"	l
c01137b6	obj/kernel.asm	/^c01137b6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01137b9	obj/kernel.asm	/^c01137b9:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01137bc	obj/kernel.asm	/^c01137bc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01137bf	obj/kernel.asm	/^c01137bf:	c9                   	leave  $/;"	l
c01137c0	obj/kernel.asm	/^c01137c0:	c3                   	ret    $/;"	l
c01137c1	obj/kernel.asm	/^c01137c1 <hash32>:$/;"	l
c01137c1	obj/kernel.asm	/^c01137c1:	55                   	push   %ebp$/;"	l
c01137c2	obj/kernel.asm	/^c01137c2:	89 e5                	mov    %esp,%ebp$/;"	l
c01137c4	obj/kernel.asm	/^c01137c4:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01137c7	obj/kernel.asm	/^c01137c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01137ca	obj/kernel.asm	/^c01137ca:	69 c0 01 00 37 9e    	imul   $0x9e370001,%eax,%eax$/;"	l
c01137d0	obj/kernel.asm	/^c01137d0:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01137d3	obj/kernel.asm	/^c01137d3:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
c01137d8	obj/kernel.asm	/^c01137d8:	2b 45 0c             	sub    0xc(%ebp),%eax$/;"	l
c01137db	obj/kernel.asm	/^c01137db:	89 c2                	mov    %eax,%edx$/;"	l
c01137dd	obj/kernel.asm	/^c01137dd:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01137e0	obj/kernel.asm	/^c01137e0:	89 d1                	mov    %edx,%ecx$/;"	l
c01137e2	obj/kernel.asm	/^c01137e2:	d3 e8                	shr    %cl,%eax$/;"	d
c01137e4	obj/kernel.asm	/^c01137e4:	c9                   	leave  $/;"	l
c01137e5	obj/kernel.asm	/^c01137e5:	c3                   	ret    $/;"	l
c01137e6	obj/kernel.asm	/^c01137e6 <rand>:$/;"	l
c01137e6	obj/kernel.asm	/^c01137e6:	55                   	push   %ebp$/;"	l
c01137e7	obj/kernel.asm	/^c01137e7:	89 e5                	mov    %esp,%ebp$/;"	l
c01137e9	obj/kernel.asm	/^c01137e9:	57                   	push   %edi$/;"	l
c01137ea	obj/kernel.asm	/^c01137ea:	56                   	push   %esi$/;"	l
c01137eb	obj/kernel.asm	/^c01137eb:	53                   	push   %ebx$/;"	l
c01137ec	obj/kernel.asm	/^c01137ec:	83 ec 24             	sub    $0x24,%esp$/;"	l
c01137ef	obj/kernel.asm	/^c01137ef:	a1 48 cf 14 c0       	mov    0xc014cf48,%eax$/;"	l
c01137f4	obj/kernel.asm	/^c01137f4:	8b 15 4c cf 14 c0    	mov    0xc014cf4c,%edx$/;"	l
c01137fa	obj/kernel.asm	/^c01137fa:	69 fa 6d e6 ec de    	imul   $0xdeece66d,%edx,%edi$/;"	l
c0113800	obj/kernel.asm	/^c0113800:	6b f0 05             	imul   $0x5,%eax,%esi$/;"	l
c0113803	obj/kernel.asm	/^c0113803:	01 fe                	add    %edi,%esi$/;"	l
c0113805	obj/kernel.asm	/^c0113805:	bf 6d e6 ec de       	mov    $0xdeece66d,%edi$/;"	l
c011380a	obj/kernel.asm	/^c011380a:	f7 e7                	mul    %edi$/;"	l
c011380c	obj/kernel.asm	/^c011380c:	01 d6                	add    %edx,%esi$/;"	l
c011380e	obj/kernel.asm	/^c011380e:	89 f2                	mov    %esi,%edx$/;"	l
c0113810	obj/kernel.asm	/^c0113810:	83 c0 0b             	add    $0xb,%eax$/;"	l
c0113813	obj/kernel.asm	/^c0113813:	83 d2 00             	adc    $0x0,%edx$/;"	l
c0113816	obj/kernel.asm	/^c0113816:	89 c7                	mov    %eax,%edi$/;"	l
c0113818	obj/kernel.asm	/^c0113818:	83 e7 ff             	and    $0xffffffff,%edi$/;"	l
c011381b	obj/kernel.asm	/^c011381b:	89 f9                	mov    %edi,%ecx$/;"	l
c011381d	obj/kernel.asm	/^c011381d:	0f b7 da             	movzwl %dx,%ebx$/;"	l
c0113820	obj/kernel.asm	/^c0113820:	89 0d 48 cf 14 c0    	mov    %ecx,0xc014cf48$/;"	l
c0113826	obj/kernel.asm	/^c0113826:	89 1d 4c cf 14 c0    	mov    %ebx,0xc014cf4c$/;"	l
c011382c	obj/kernel.asm	/^c011382c:	a1 48 cf 14 c0       	mov    0xc014cf48,%eax$/;"	l
c0113831	obj/kernel.asm	/^c0113831:	8b 15 4c cf 14 c0    	mov    0xc014cf4c,%edx$/;"	l
c0113837	obj/kernel.asm	/^c0113837:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c011383b	obj/kernel.asm	/^c011383b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c011383e	obj/kernel.asm	/^c011383e:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0113841	obj/kernel.asm	/^c0113841:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0113844	obj/kernel.asm	/^c0113844:	c7 45 dc 00 00 00 80 	movl   $0x80000000,-0x24(%ebp)$/;"	l
c011384b	obj/kernel.asm	/^c011384b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011384e	obj/kernel.asm	/^c011384e:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0113851	obj/kernel.asm	/^c0113851:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0113854	obj/kernel.asm	/^c0113854:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c0113857	obj/kernel.asm	/^c0113857:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011385a	obj/kernel.asm	/^c011385a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011385d	obj/kernel.asm	/^c011385d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0113861	obj/kernel.asm	/^c0113861:	74 1c                	je     c011387f <rand+0x99>$/;"	l
c0113863	obj/kernel.asm	/^c0113863:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113866	obj/kernel.asm	/^c0113866:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c011386b	obj/kernel.asm	/^c011386b:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c011386e	obj/kernel.asm	/^c011386e:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0113871	obj/kernel.asm	/^c0113871:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113874	obj/kernel.asm	/^c0113874:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0113879	obj/kernel.asm	/^c0113879:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c011387c	obj/kernel.asm	/^c011387c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011387f	obj/kernel.asm	/^c011387f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0113882	obj/kernel.asm	/^c0113882:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0113885	obj/kernel.asm	/^c0113885:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c0113888	obj/kernel.asm	/^c0113888:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c011388b	obj/kernel.asm	/^c011388b:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c011388e	obj/kernel.asm	/^c011388e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0113891	obj/kernel.asm	/^c0113891:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0113894	obj/kernel.asm	/^c0113894:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0113897	obj/kernel.asm	/^c0113897:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c011389a	obj/kernel.asm	/^c011389a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c011389d	obj/kernel.asm	/^c011389d:	83 c4 24             	add    $0x24,%esp$/;"	l
c01138a0	obj/kernel.asm	/^c01138a0:	5b                   	pop    %ebx$/;"	l
c01138a1	obj/kernel.asm	/^c01138a1:	5e                   	pop    %esi$/;"	l
c01138a2	obj/kernel.asm	/^c01138a2:	5f                   	pop    %edi$/;"	l
c01138a3	obj/kernel.asm	/^c01138a3:	5d                   	pop    %ebp$/;"	l
c01138a4	obj/kernel.asm	/^c01138a4:	c3                   	ret    $/;"	l
c01138a5	obj/kernel.asm	/^c01138a5 <srand>:$/;"	l
c01138a5	obj/kernel.asm	/^c01138a5:	55                   	push   %ebp$/;"	l
c01138a6	obj/kernel.asm	/^c01138a6:	89 e5                	mov    %esp,%ebp$/;"	l
c01138a8	obj/kernel.asm	/^c01138a8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01138ab	obj/kernel.asm	/^c01138ab:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01138b0	obj/kernel.asm	/^c01138b0:	a3 48 cf 14 c0       	mov    %eax,0xc014cf48$/;"	l
c01138b5	obj/kernel.asm	/^c01138b5:	89 15 4c cf 14 c0    	mov    %edx,0xc014cf4c$/;"	l
c01138bb	obj/kernel.asm	/^c01138bb:	5d                   	pop    %ebp$/;"	l
c01138bc	obj/kernel.asm	/^c01138bc:	c3                   	ret    $/;"	l
can_write	obj/kernel.asm	/^        can_write = 1;$/;"	d
ch	obj/kernel.asm	/^                ch = *fmt;$/;"	d
char	obj/kernel.asm	/^char *$/;"	l
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = mm;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = mm_create();$/;"	d
cnt	obj/kernel.asm	/^    cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cond_signal	obj/kernel.asm	/^cond_signal (condvar_t *cvp) {$/;"	l
cond_wait	obj/kernel.asm	/^cond_wait (condvar_t *cvp) {$/;"	l
const	obj/kernel.asm	/^        const struct userstabdata *usd = (struct userstabdata *)USTAB;$/;"	t
const	obj/kernel.asm	/^    const struct stab *stabs, *stab_end;$/;"	t
const	obj/kernel.asm	/^const char *$/;"	l
cp	obj/kernel.asm	/^        cp = (uint16_t*)(MONO_BUF + KERNBASE);$/;"	d
crt_buf	obj/kernel.asm	/^    crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	obj/kernel.asm	/^    crt_pos = pos;$/;"	d
cur	obj/kernel.asm	/^				cur = aligned;$/;"	d
cur	obj/kernel.asm	/^			cur = (slob_t *)__slob_get_free_page(gfp);$/;"	d
cur	obj/kernel.asm	/^			cur = slobfree;$/;"	d
current	obj/kernel.asm	/^            current = proc;$/;"	d
current	obj/kernel.asm	/^    current = idleproc;$/;"	d
data	obj/kernel.asm	/^        data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kernel.asm	/^    data = inb(KBDATAP);$/;"	d
default	obj/kernel.asm	/^        default:$/;"	l
default	obj/kernel.asm	/^    default: ret = -E_INVAL;$/;"	l
default	obj/kernel.asm	/^    default:$/;"	l
delta	obj/kernel.asm	/^			delta = aligned - cur;$/;"	d
did_init	obj/kernel.asm	/^    did_init = 1;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
end	obj/kernel.asm	/^                end = KMEMSIZE;$/;"	d
end	obj/kernel.asm	/^                end = ROUNDDOWN(end, PGSIZE);$/;"	d
endpos	obj/kernel.asm	/^            endpos = din->size;$/;"	d
endpos	obj/kernel.asm	/^        endpos = SFS_MAX_FILE_SIZE;$/;"	d
ent	obj/kernel.asm	/^        ent = din->indirect;$/;"	d
err	obj/kernel.asm	/^                err = -err;$/;"	d
err	obj/kernel.asm	/^            err = va_arg(ap, int);$/;"	d
execve_exit	obj/kernel.asm	/^execve_exit:$/;"	l
extern	obj/kernel.asm	/^         extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^     extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^    extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^extern size_t npage;$/;"	l
extern	obj/kernel.asm	/^extern struct Page *pages;$/;"	t
extern	obj/kernel.asm	/^extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^extern uintptr_t __vectors[];$/;"	l
extern	obj/kernel.asm	/^extern void vfs_devlist_init(void);$/;"	l
failed	obj/kernel.asm	/^failed:$/;"	l
failed_cleanup	obj/kernel.asm	/^failed_cleanup:$/;"	l
failed_cleanup_din	obj/kernel.asm	/^failed_cleanup_din:$/;"	l
failed_cleanup_freemap	obj/kernel.asm	/^failed_cleanup_freemap:$/;"	l
failed_cleanup_fs	obj/kernel.asm	/^failed_cleanup_fs:$/;"	l
failed_cleanup_hash_list	obj/kernel.asm	/^failed_cleanup_hash_list:$/;"	l
failed_cleanup_name	obj/kernel.asm	/^failed_cleanup_name:$/;"	l
failed_cleanup_sfs_buffer	obj/kernel.asm	/^failed_cleanup_sfs_buffer:$/;"	l
failed_cleanup_vdev	obj/kernel.asm	/^failed_cleanup_vdev:$/;"	l
failed_nomem	obj/kernel.asm	/^failed_nomem:$/;"	l
failed_unlock	obj/kernel.asm	/^failed_unlock:$/;"	l
filesp	obj/kernel.asm	/^        filesp = old_filesp;$/;"	d
fork_out	obj/kernel.asm	/^fork_out:$/;"	l
forkrets	obj/kernel.asm	/^forkrets:$/;"	l
found	obj/kernel.asm	/^                        found = 1;$/;"	d
found	obj/kernel.asm	/^                        found = fsop_get_root(vdev->fs);$/;"	d
found	obj/kernel.asm	/^                        found = vdev->devnode;$/;"	d
found	obj/kernel.asm	/^found:$/;"	l
free_list	obj/kernel.asm	/^     free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^    free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^#define free_list (free_area.free_list)$/;"	d
good_files_struct	obj/kernel.asm	/^good_files_struct:$/;"	l
good_mm	obj/kernel.asm	/^good_mm:$/;"	l
haskid	obj/kernel.asm	/^            haskid = 1;$/;"	d
haskid	obj/kernel.asm	/^    haskid = 0;$/;"	d
initproc	obj/kernel.asm	/^    initproc = find_proc(pid);$/;"	d
inline	obj/kernel.asm	/^inline void $/;"	l
inside	obj/kernel.asm	/^    inside:$/;"	l
int	obj/kernel.asm	/^int dup_files(struct files_struct *to, struct files_struct *from);$/;"	l
int	obj/kernel.asm	/^int file_dup(int fd1, int fd2);$/;"	l
int	obj/kernel.asm	/^int file_mkfifo(const char *name, uint32_t open_flags);$/;"	l
int	obj/kernel.asm	/^int file_pipe(int fd[]);$/;"	l
int	obj/kernel.asm	/^int kern_init(void) __attribute__((noreturn));$/;"	l
int	obj/kernel.asm	/^int philosopher_using_condvar(void * arg) { \/* arg is the No. of philosopher 0~N-1*\/$/;"	l
int	obj/kernel.asm	/^int philosopher_using_semaphore(void * arg) \/* i：哲学家号码，从0到N-1 *\/$/;"	l
int	obj/kernel.asm	/^int state_condvar[N];                            \/\/ the philosopher's state: EATING, HUNGARY, THINKING  $/;"	l
int	obj/kernel.asm	/^int$/;"	l
int_gate	obj/kernel.asm	/^#define int_gate(gate) {asm volatile ("int %0" :: "i" (gate));}$/;"	d
iobase	obj/kernel.asm	/^        iobase = IO_BASE(ideno);$/;"	d
irq_mask	obj/kernel.asm	/^    irq_mask = mask;$/;"	d
is_find_big_one	obj/kernel.asm	/^            is_find_big_one = 1;$/;"	d
is_panic	obj/kernel.asm	/^    is_panic = 1;$/;"	d
kern_entry	obj/kernel.asm	/^kern_entry:$/;"	l
kernel_thread_entry	obj/kernel.asm	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
l	obj/kernel.asm	/^            l = m;$/;"	d
l	obj/kernel.asm	/^            l = true_m + 1;$/;"	d
l	obj/kernel.asm	/^          l = skew_heap_merge(a, b->right, comp);$/;"	d
l	obj/kernel.asm	/^          l = skew_heap_merge(a->right, b, comp);$/;"	d
l	obj/kernel.asm	/^        l = *region_right;$/;"	d
la	obj/kernel.asm	/^    la = ROUNDDOWN(la, PGSIZE);$/;"	d
last_pid	obj/kernel.asm	/^                        last_pid = 1;$/;"	d
last_pid	obj/kernel.asm	/^        last_pid = 1;$/;"	d
le	obj/kernel.asm	/^                le = list_next(le);$/;"	d
le	obj/kernel.asm	/^            le = list_next(le);$/;"	d
le	obj/kernel.asm	/^        le = list;$/;"	d
le	obj/kernel.asm	/^        le = list_next(le);$/;"	d
le	obj/kernel.asm	/^     le = &free_list;$/;"	d
le	obj/kernel.asm	/^    le = &free_list;$/;"	d
le2timer	obj/kernel.asm	/^#define le2timer(le, member)            \\$/;"	d
le_next	obj/kernel.asm	/^    le_next = list_next(le_prev);$/;"	d
le_pos	obj/kernel.asm	/^            le_pos = list_prev(le);$/;"	d
le_prev	obj/kernel.asm	/^            le_prev = le;$/;"	d
lflag	obj/kernel.asm	/^        lflag = altflag = 0;$/;"	d
lline	obj/kernel.asm	/^        lline = lfile;$/;"	d
lline	obj/kernel.asm	/^        lline = lfun;$/;"	d
long	obj/kernel.asm	/^long SYSTEM_READ_TIMER( void ){$/;"	l
long	obj/kernel.asm	/^long$/;"	l
m	obj/kernel.asm	/^		m = slob_alloc(size + SLOB_UNIT, gfp, 0);$/;"	d
max_swap_offset	obj/kernel.asm	/^    max_swap_offset = ide_device_size(SWAP_DEV_NO) \/ (PGSIZE \/ SECTSIZE);$/;"	d
maxpa	obj/kernel.asm	/^                maxpa = end;$/;"	d
maxpa	obj/kernel.asm	/^        maxpa = KMEMSIZE;$/;"	d
mm	obj/kernel.asm	/^        mm = check_mm_struct;$/;"	d
mm	obj/kernel.asm	/^        mm = current->mm;$/;"	d
mm	obj/kernel.asm	/^        mm = oldmm;$/;"	d
monitor_init	obj/kernel.asm	/^monitor_init (monitor_t * mtp, size_t num_cv) {$/;"	l
monitor_t	obj/kernel.asm	/^monitor_t mt, *mtp=&mt;                          \/\/ monitor$/;"	l
nblks	obj/kernel.asm	/^            nblks = alen \/ DISK0_BLKSIZE;$/;"	d
nblks	obj/kernel.asm	/^            nblks = copied \/ DISK0_BLKSIZE;$/;"	d
nblks	obj/kernel.asm	/^    nblks = din->blocks;$/;"	d
next	obj/kernel.asm	/^            next = idleproc;$/;"	d
next	obj/kernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/kernel.asm	/^    next = seed;$/;"	d
next_safe	obj/kernel.asm	/^                    next_safe = MAX_PID;$/;"	d
next_safe	obj/kernel.asm	/^                next_safe = proc->pid;$/;"	d
next_safe	obj/kernel.asm	/^        next_safe = MAX_PID;$/;"	d
node	obj/kernel.asm	/^            node = info2node(sin, sfs_inode);$/;"	d
node	obj/kernel.asm	/^        node = parent, sin = vop_info(node, sfs_inode);$/;"	d
npage	obj/kernel.asm	/^    npage = maxpa \/ PGSIZE;$/;"	d
nr_free	obj/kernel.asm	/^     nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^     nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^#define nr_free (free_area.nr_free)$/;"	d
num	obj/kernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/kernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/kernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/kernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/kernel.asm	/^        number:$/;"	l
nvma	obj/kernel.asm	/^        nvma = vma_create(vma->vm_start, vma->vm_end, vma->vm_flags);$/;"	d
old	obj/kernel.asm	/^        old = bootfs_node, bootfs_node = node;$/;"	d
open_count	obj/kernel.asm	/^    open_count = node->open_count;$/;"	d
out	obj/kernel.asm	/^out:$/;"	l
out_unlock	obj/kernel.asm	/^out_unlock:$/;"	l
p	obj/kernel.asm	/^                p = "(null)";$/;"	d
p	obj/kernel.asm	/^        p = le2page(le, page_link);$/;"	d
p	obj/kernel.asm	/^    p = alloc_page();$/;"	d
p0	obj/kernel.asm	/^    p0 = p1 = p2 = NULL;$/;"	d
p1	obj/kernel.asm	/^    p1 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = p0 + 1;$/;"	d
p_rpos	obj/kernel.asm	/^    p_rpos = p_wpos = 0;$/;"	d
pa	obj/kernel.asm	/^    pa = ROUNDDOWN(pa, PGSIZE);$/;"	d
padc	obj/kernel.asm	/^            padc = '-';$/;"	d
padc	obj/kernel.asm	/^            padc = '0';$/;"	d
page	obj/kernel.asm	/^              page = pmm_manager->alloc_pages(n);$/;"	d
page	obj/kernel.asm	/^            page = p;$/;"	d
pages	obj/kernel.asm	/^    pages = (struct Page *)ROUNDUP((void *)end, PGSIZE);$/;"	d
panic_dead	obj/kernel.asm	/^panic_dead:$/;"	l
part	obj/kernel.asm	/^            part = maxn;$/;"	d
part	obj/kernel.asm	/^        part = PGSIZE;$/;"	d
path	obj/kernel.asm	/^    path = argv[0];$/;"	d
pmm_manager	obj/kernel.asm	/^    pmm_manager = &default_pmm_manager;$/;"	d
pos	obj/kernel.asm	/^    pos = inb(addr_6845 + 1) << 8;$/;"	d
precision	obj/kernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kernel.asm	/^            precision = va_arg(ap, int);$/;"	d
prev	obj/kernel.asm	/^				prev = cur;$/;"	d
prev	obj/kernel.asm	/^	prev = slobfree;$/;"	d
proc	obj/kernel.asm	/^            proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^            proc = le2proc(le, list_link);$/;"	d
proc	obj/kernel.asm	/^        proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^        proc = current->parent;$/;"	d
proc	obj/kernel.asm	/^        proc = find_proc(pid);$/;"	d
proc	obj/kernel.asm	/^    proc = alloc_proc();$/;"	d
process_precision	obj/kernel.asm	/^        process_precision:$/;"	l
pte_t	obj/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kernel.asm	/^    ptep = &((pte_t *)KADDR(PDE_ADDR(boot_pgdir[0])))[1];$/;"	d
ptep	obj/kernel.asm	/^   ptep = get_pte(mm->pgdir, addr, 1);$/;"	d
ptr	obj/kernel.asm	/^    ptr = memmove(iob->io_base + 1, ptr, alen);$/;"	d
r	obj/kernel.asm	/^            r = m - 1;$/;"	d
r	obj/kernel.asm	/^          r = a->left;$/;"	d
r	obj/kernel.asm	/^          r = b->left;$/;"	d
readable	obj/kernel.asm	/^        readable = writable = 1;$/;"	d
ref_count	obj/kernel.asm	/^    ref_count = node->ref_count;$/;"	d
relocated	obj/kernel.asm	/^relocated:$/;"	l
repeat	obj/kernel.asm	/^    repeat:$/;"	l
repeat	obj/kernel.asm	/^repeat:$/;"	l
reswitch	obj/kernel.asm	/^    reswitch:$/;"	l
ret	obj/kernel.asm	/^                        ret = -E_NA_DEV;$/;"	d
ret	obj/kernel.asm	/^                        ret = 0, *node_store = found;$/;"	d
ret	obj/kernel.asm	/^                    ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^                ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^                ret = -E_NOTDIR;$/;"	d
ret	obj/kernel.asm	/^            ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^            ret = file_write(fd, buffer, alen, &alen);$/;"	d
ret	obj/kernel.asm	/^            ret = sfs_dirent_findino_nolock(sfs, sin, ino, entry);$/;"	d
ret	obj/kernel.asm	/^            ret = sfs_rwblock_nolock(sfs, sfs->sfs_buffer, blkno, 1, 1);$/;"	d
ret	obj/kernel.asm	/^            ret = vfs_getcwd(iob);$/;"	d
ret	obj/kernel.asm	/^            ret = vop_create(dir, name, excl, &node);$/;"	d
ret	obj/kernel.asm	/^         ret = page_insert(to, npage, start, perm);$/;"	d
ret	obj/kernel.asm	/^        ret = -E_BUSY;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^        ret = dup_mmap(mm, oldmm);$/;"	d
ret	obj/kernel.asm	/^        ret = file_read(fd, buffer, alen, &alen);$/;"	d
ret	obj/kernel.asm	/^        ret = pmm_manager->nr_free_pages();$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_dirent_search_nolock(sfs, sin, name, &ino, slot, NULL);$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_io_nolock(sfs, sin, iob->io_base, iob->io_offset, &alen, write);$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_load_inode(sfs, node_store, ino);$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_rwblock_nolock(sfs, sfs->sfs_buffer, SFS_BLKN_SUPER, 1, 0);$/;"	d
ret	obj/kernel.asm	/^        ret = vfs_set_curdir(node);$/;"	d
ret	obj/kernel.asm	/^        ret = vop_lookup(node, path, node_store);$/;"	d
ret	obj/kernel.asm	/^    ret = -E_EXISTS;$/;"	d
ret	obj/kernel.asm	/^    ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^    ret = -E_NOENT;$/;"	d
ret	obj/kernel.asm	/^    ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^    ret = 0;$/;"	d
ret	obj/kernel.asm	/^    ret = file_open(path, open_flags);$/;"	d
ret	obj/kernel.asm	/^    ret = iobuf_move(iob, entry->name, sfs_dentry_size, 1, NULL);$/;"	d
ret	obj/kernel.asm	/^    ret = proc->pid;$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_chdir(path);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_link(old_path, new_path);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_lookup(path, &node);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_rename(old_path, new_path);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_unlink(path);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_fstat(file->node, stat);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_fsync(file->node);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_namefile(node, iob);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_read(file->node, iob);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_write(file->node, iob);$/;"	d
ret	obj/kernel.asm	/^   ret = 0;$/;"	d
rline	obj/kernel.asm	/^        rline = rfile;$/;"	d
rline	obj/kernel.asm	/^        rline = rfun;$/;"	d
rq	obj/kernel.asm	/^    rq = &__rq;$/;"	d
sched_class	obj/kernel.asm	/^    sched_class = &default_sched_class;$/;"	d
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA);$/;"	d
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA_EXT);$/;"	d
semaphore_t	obj/kernel.asm	/^semaphore_t s[N]; \/* 每个哲学家一个信号量 *\/$/;"	l
serial_exists	obj/kernel.asm	/^    serial_exists = (inb(COM1 + COM_LSR) != 0xFF);$/;"	d
set_pvalue	obj/kernel.asm	/^#define set_pvalue(x, v)            do { if ((x) != NULL) { *(x) = (v); } } while (0)$/;"	d
sfs_buf_op	obj/kernel.asm	/^        sfs_buf_op = sfs_rbuf, sfs_block_op = sfs_rblock;$/;"	d
sfs_buf_op	obj/kernel.asm	/^        sfs_buf_op = sfs_wbuf, sfs_block_op = sfs_wblock;$/;"	d
size_t	obj/kernel.asm	/^size_t$/;"	l
slobfree	obj/kernel.asm	/^			slobfree = prev;$/;"	d
slobfree	obj/kernel.asm	/^	slobfree = cur;$/;"	d
sm	obj/kernel.asm	/^     sm = &swap_manager_fifo;$/;"	d
spin	obj/kernel.asm	/^spin:$/;"	l
src	obj/kernel.asm	/^            src = dst, dst = tmp;$/;"	d
stab_end	obj/kernel.asm	/^        stab_end = __STAB_END__;$/;"	d
stab_end	obj/kernel.asm	/^        stab_end = usd->stab_end;$/;"	d
stabs	obj/kernel.asm	/^        stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kernel.asm	/^        stabs = usd->stabs;$/;"	d
stabstr	obj/kernel.asm	/^        stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kernel.asm	/^        stabstr = usd->stabstr;$/;"	d
stabstr_end	obj/kernel.asm	/^        stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kernel.asm	/^        stabstr_end = usd->stabstr_end;$/;"	d
start	obj/kernel.asm	/^            start = ROUNDDOWN(start + PTSIZE, PTSIZE);$/;"	d
start	obj/kernel.asm	/^            start = vma->vm_end;$/;"	d
start	obj/kernel.asm	/^    start = ROUNDDOWN(start, PTSIZE);$/;"	d
static	obj/kernel.asm	/^static __noinline uint32_t __down(semaphore_t *sem, uint32_t wait_state) {$/;"	l
static	obj/kernel.asm	/^static __noinline uint32_t$/;"	l
static	obj/kernel.asm	/^static __noinline void __up(semaphore_t *sem, uint32_t wait_state) {$/;"	l
static	obj/kernel.asm	/^static bigblock_t *bigblocks;$/;"	l
static	obj/kernel.asm	/^static bool did_init = 0;$/;"	l
static	obj/kernel.asm	/^static bool serial_exists = 0;$/;"	l
static	obj/kernel.asm	/^static bool$/;"	l
static	obj/kernel.asm	/^static char *disk0_buffer;$/;"	l
static	obj/kernel.asm	/^static char stdin_buffer[STDIN_BUFSIZE];$/;"	l
static	obj/kernel.asm	/^static const char *$/;"	l
static	obj/kernel.asm	/^static const struct inode_ops *$/;"	l
static	obj/kernel.asm	/^static inline bool$/;"	l
static	obj/kernel.asm	/^static inline char *$/;"	l
static	obj/kernel.asm	/^static inline int$/;"	l
static	obj/kernel.asm	/^static inline list_entry_t *$/;"	l
static	obj/kernel.asm	/^static inline ppn_t$/;"	l
static	obj/kernel.asm	/^static inline skew_heap_entry_t *$/;"	l
static	obj/kernel.asm	/^static inline struct Page *$/;"	l
static	obj/kernel.asm	/^static inline struct proc_struct *$/;"	l
static	obj/kernel.asm	/^static inline timer_t *$/;"	l
static	obj/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kernel.asm	/^static inline uintptr_t$/;"	l
static	obj/kernel.asm	/^static inline void *$/;"	l
static	obj/kernel.asm	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	l
static	obj/kernel.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/kernel.asm	/^static inline void$/;"	l
static	obj/kernel.asm	/^static int find_order(int size)$/;"	l
static	obj/kernel.asm	/^static int$/;"	l
static	obj/kernel.asm	/^static list_entry_t *$/;"	l
static	obj/kernel.asm	/^static list_entry_t vdev_list;     \/\/ device info list in vfs layer$/;"	l
static	obj/kernel.asm	/^static long long$/;"	l
static	obj/kernel.asm	/^static off_t p_rpos, p_wpos;$/;"	l
static	obj/kernel.asm	/^static semaphore_t disk0_sem;$/;"	l
static	obj/kernel.asm	/^static semaphore_t vdev_list_sem;$/;"	l
static	obj/kernel.asm	/^static size_t$/;"	l
static	obj/kernel.asm	/^static slob_t *slobfree = &arena;$/;"	l
static	obj/kernel.asm	/^static struct Page *$/;"	t
static	obj/kernel.asm	/^static struct file *$/;"	t
static	obj/kernel.asm	/^static struct inode *$/;"	t
static	obj/kernel.asm	/^static struct proc_struct *$/;"	t
static	obj/kernel.asm	/^static struct run_queue *rq;$/;"	t
static	obj/kernel.asm	/^static struct run_queue __rq;$/;"	t
static	obj/kernel.asm	/^static struct sched_class *sched_class;$/;"	t
static	obj/kernel.asm	/^static uint16_t addr_6845;$/;"	l
static	obj/kernel.asm	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	l
static	obj/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kernel.asm	/^static void *$/;"	l
static	obj/kernel.asm	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	l
static	obj/kernel.asm	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	l
static	obj/kernel.asm	/^static void check_pgfault(void);$/;"	l
static	obj/kernel.asm	/^static void check_swap(void);$/;"	l
static	obj/kernel.asm	/^static void check_vma_struct(void);$/;"	l
static	obj/kernel.asm	/^static void lab1_switch_test(void);$/;"	l
static	obj/kernel.asm	/^static void print_ticks() {$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *b, int size);$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *block, int size)$/;"	l
static	obj/kernel.asm	/^static void$/;"	l
static	obj/kernel.asm	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	l
static	obj/kernel.asm	/^static volatile int in_swap_tick_event = 0;$/;"	l
static	obj/kernel.asm	/^static wait_queue_t __wait_queue, *wait_queue = &__wait_queue;$/;"	l
swap_init_ok	obj/kernel.asm	/^          swap_init_ok = 1;$/;"	d
switch_to	obj/kernel.asm	/^switch_to:                      # switch_to(from, to)$/;"	l
t_priority	obj/kernel.asm	/^            t_priority = 1;$/;"	d
temp_ptep	obj/kernel.asm	/^     temp_ptep = get_pte(mm->pgdir, BEING_CHECK_VALID_VADDR, 1);$/;"	d
testfd	obj/kernel.asm	/^#define testfd(fd)                          ((fd) >= 0 && (fd) < FILES_STRUCT_NENTRY)$/;"	d
ticks	obj/kernel.asm	/^    ticks = 0;$/;"	d
timer	obj/kernel.asm	/^                timer = le2timer(le, timer_link);$/;"	d
tmp_kernel_frame	obj/kernel.asm	/^            tmp_kernel_frame = (struct trapframe *)(tf->tf_esp - (sizeof(struct trapframe) - 8));$/;"	d
try_again	obj/kernel.asm	/^        try_again:$/;"	l
uint32_t	obj/kernel.asm	/^uint32_t$/;"	l
unsigned	obj/kernel.asm	/^unsigned int ksize(const void *block)$/;"	l
vector0	obj/kernel.asm	/^vector0:$/;"	l
vector1	obj/kernel.asm	/^vector1:$/;"	l
vector10	obj/kernel.asm	/^vector10:$/;"	l
vector100	obj/kernel.asm	/^vector100:$/;"	l
vector101	obj/kernel.asm	/^vector101:$/;"	l
vector102	obj/kernel.asm	/^vector102:$/;"	l
vector103	obj/kernel.asm	/^vector103:$/;"	l
vector104	obj/kernel.asm	/^vector104:$/;"	l
vector105	obj/kernel.asm	/^vector105:$/;"	l
vector106	obj/kernel.asm	/^vector106:$/;"	l
vector107	obj/kernel.asm	/^vector107:$/;"	l
vector108	obj/kernel.asm	/^vector108:$/;"	l
vector109	obj/kernel.asm	/^vector109:$/;"	l
vector11	obj/kernel.asm	/^vector11:$/;"	l
vector110	obj/kernel.asm	/^vector110:$/;"	l
vector111	obj/kernel.asm	/^vector111:$/;"	l
vector112	obj/kernel.asm	/^vector112:$/;"	l
vector113	obj/kernel.asm	/^vector113:$/;"	l
vector114	obj/kernel.asm	/^vector114:$/;"	l
vector115	obj/kernel.asm	/^vector115:$/;"	l
vector116	obj/kernel.asm	/^vector116:$/;"	l
vector117	obj/kernel.asm	/^vector117:$/;"	l
vector118	obj/kernel.asm	/^vector118:$/;"	l
vector119	obj/kernel.asm	/^vector119:$/;"	l
vector12	obj/kernel.asm	/^vector12:$/;"	l
vector120	obj/kernel.asm	/^vector120:$/;"	l
vector121	obj/kernel.asm	/^vector121:$/;"	l
vector122	obj/kernel.asm	/^vector122:$/;"	l
vector123	obj/kernel.asm	/^vector123:$/;"	l
vector124	obj/kernel.asm	/^vector124:$/;"	l
vector125	obj/kernel.asm	/^vector125:$/;"	l
vector126	obj/kernel.asm	/^vector126:$/;"	l
vector127	obj/kernel.asm	/^vector127:$/;"	l
vector128	obj/kernel.asm	/^vector128:$/;"	l
vector129	obj/kernel.asm	/^vector129:$/;"	l
vector13	obj/kernel.asm	/^vector13:$/;"	l
vector130	obj/kernel.asm	/^vector130:$/;"	l
vector131	obj/kernel.asm	/^vector131:$/;"	l
vector132	obj/kernel.asm	/^vector132:$/;"	l
vector133	obj/kernel.asm	/^vector133:$/;"	l
vector134	obj/kernel.asm	/^vector134:$/;"	l
vector135	obj/kernel.asm	/^vector135:$/;"	l
vector136	obj/kernel.asm	/^vector136:$/;"	l
vector137	obj/kernel.asm	/^vector137:$/;"	l
vector138	obj/kernel.asm	/^vector138:$/;"	l
vector139	obj/kernel.asm	/^vector139:$/;"	l
vector14	obj/kernel.asm	/^vector14:$/;"	l
vector140	obj/kernel.asm	/^vector140:$/;"	l
vector141	obj/kernel.asm	/^vector141:$/;"	l
vector142	obj/kernel.asm	/^vector142:$/;"	l
vector143	obj/kernel.asm	/^vector143:$/;"	l
vector144	obj/kernel.asm	/^vector144:$/;"	l
vector145	obj/kernel.asm	/^vector145:$/;"	l
vector146	obj/kernel.asm	/^vector146:$/;"	l
vector147	obj/kernel.asm	/^vector147:$/;"	l
vector148	obj/kernel.asm	/^vector148:$/;"	l
vector149	obj/kernel.asm	/^vector149:$/;"	l
vector15	obj/kernel.asm	/^vector15:$/;"	l
vector150	obj/kernel.asm	/^vector150:$/;"	l
vector151	obj/kernel.asm	/^vector151:$/;"	l
vector152	obj/kernel.asm	/^vector152:$/;"	l
vector153	obj/kernel.asm	/^vector153:$/;"	l
vector154	obj/kernel.asm	/^vector154:$/;"	l
vector155	obj/kernel.asm	/^vector155:$/;"	l
vector156	obj/kernel.asm	/^vector156:$/;"	l
vector157	obj/kernel.asm	/^vector157:$/;"	l
vector158	obj/kernel.asm	/^vector158:$/;"	l
vector159	obj/kernel.asm	/^vector159:$/;"	l
vector16	obj/kernel.asm	/^vector16:$/;"	l
vector160	obj/kernel.asm	/^vector160:$/;"	l
vector161	obj/kernel.asm	/^vector161:$/;"	l
vector162	obj/kernel.asm	/^vector162:$/;"	l
vector163	obj/kernel.asm	/^vector163:$/;"	l
vector164	obj/kernel.asm	/^vector164:$/;"	l
vector165	obj/kernel.asm	/^vector165:$/;"	l
vector166	obj/kernel.asm	/^vector166:$/;"	l
vector167	obj/kernel.asm	/^vector167:$/;"	l
vector168	obj/kernel.asm	/^vector168:$/;"	l
vector169	obj/kernel.asm	/^vector169:$/;"	l
vector17	obj/kernel.asm	/^vector17:$/;"	l
vector170	obj/kernel.asm	/^vector170:$/;"	l
vector171	obj/kernel.asm	/^vector171:$/;"	l
vector172	obj/kernel.asm	/^vector172:$/;"	l
vector173	obj/kernel.asm	/^vector173:$/;"	l
vector174	obj/kernel.asm	/^vector174:$/;"	l
vector175	obj/kernel.asm	/^vector175:$/;"	l
vector176	obj/kernel.asm	/^vector176:$/;"	l
vector177	obj/kernel.asm	/^vector177:$/;"	l
vector178	obj/kernel.asm	/^vector178:$/;"	l
vector179	obj/kernel.asm	/^vector179:$/;"	l
vector18	obj/kernel.asm	/^vector18:$/;"	l
vector180	obj/kernel.asm	/^vector180:$/;"	l
vector181	obj/kernel.asm	/^vector181:$/;"	l
vector182	obj/kernel.asm	/^vector182:$/;"	l
vector183	obj/kernel.asm	/^vector183:$/;"	l
vector184	obj/kernel.asm	/^vector184:$/;"	l
vector185	obj/kernel.asm	/^vector185:$/;"	l
vector186	obj/kernel.asm	/^vector186:$/;"	l
vector187	obj/kernel.asm	/^vector187:$/;"	l
vector188	obj/kernel.asm	/^vector188:$/;"	l
vector189	obj/kernel.asm	/^vector189:$/;"	l
vector19	obj/kernel.asm	/^vector19:$/;"	l
vector190	obj/kernel.asm	/^vector190:$/;"	l
vector191	obj/kernel.asm	/^vector191:$/;"	l
vector192	obj/kernel.asm	/^vector192:$/;"	l
vector193	obj/kernel.asm	/^vector193:$/;"	l
vector194	obj/kernel.asm	/^vector194:$/;"	l
vector195	obj/kernel.asm	/^vector195:$/;"	l
vector196	obj/kernel.asm	/^vector196:$/;"	l
vector197	obj/kernel.asm	/^vector197:$/;"	l
vector198	obj/kernel.asm	/^vector198:$/;"	l
vector199	obj/kernel.asm	/^vector199:$/;"	l
vector2	obj/kernel.asm	/^vector2:$/;"	l
vector20	obj/kernel.asm	/^vector20:$/;"	l
vector200	obj/kernel.asm	/^vector200:$/;"	l
vector201	obj/kernel.asm	/^vector201:$/;"	l
vector202	obj/kernel.asm	/^vector202:$/;"	l
vector203	obj/kernel.asm	/^vector203:$/;"	l
vector204	obj/kernel.asm	/^vector204:$/;"	l
vector205	obj/kernel.asm	/^vector205:$/;"	l
vector206	obj/kernel.asm	/^vector206:$/;"	l
vector207	obj/kernel.asm	/^vector207:$/;"	l
vector208	obj/kernel.asm	/^vector208:$/;"	l
vector209	obj/kernel.asm	/^vector209:$/;"	l
vector21	obj/kernel.asm	/^vector21:$/;"	l
vector210	obj/kernel.asm	/^vector210:$/;"	l
vector211	obj/kernel.asm	/^vector211:$/;"	l
vector212	obj/kernel.asm	/^vector212:$/;"	l
vector213	obj/kernel.asm	/^vector213:$/;"	l
vector214	obj/kernel.asm	/^vector214:$/;"	l
vector215	obj/kernel.asm	/^vector215:$/;"	l
vector216	obj/kernel.asm	/^vector216:$/;"	l
vector217	obj/kernel.asm	/^vector217:$/;"	l
vector218	obj/kernel.asm	/^vector218:$/;"	l
vector219	obj/kernel.asm	/^vector219:$/;"	l
vector22	obj/kernel.asm	/^vector22:$/;"	l
vector220	obj/kernel.asm	/^vector220:$/;"	l
vector221	obj/kernel.asm	/^vector221:$/;"	l
vector222	obj/kernel.asm	/^vector222:$/;"	l
vector223	obj/kernel.asm	/^vector223:$/;"	l
vector224	obj/kernel.asm	/^vector224:$/;"	l
vector225	obj/kernel.asm	/^vector225:$/;"	l
vector226	obj/kernel.asm	/^vector226:$/;"	l
vector227	obj/kernel.asm	/^vector227:$/;"	l
vector228	obj/kernel.asm	/^vector228:$/;"	l
vector229	obj/kernel.asm	/^vector229:$/;"	l
vector23	obj/kernel.asm	/^vector23:$/;"	l
vector230	obj/kernel.asm	/^vector230:$/;"	l
vector231	obj/kernel.asm	/^vector231:$/;"	l
vector232	obj/kernel.asm	/^vector232:$/;"	l
vector233	obj/kernel.asm	/^vector233:$/;"	l
vector234	obj/kernel.asm	/^vector234:$/;"	l
vector235	obj/kernel.asm	/^vector235:$/;"	l
vector236	obj/kernel.asm	/^vector236:$/;"	l
vector237	obj/kernel.asm	/^vector237:$/;"	l
vector238	obj/kernel.asm	/^vector238:$/;"	l
vector239	obj/kernel.asm	/^vector239:$/;"	l
vector24	obj/kernel.asm	/^vector24:$/;"	l
vector240	obj/kernel.asm	/^vector240:$/;"	l
vector241	obj/kernel.asm	/^vector241:$/;"	l
vector242	obj/kernel.asm	/^vector242:$/;"	l
vector243	obj/kernel.asm	/^vector243:$/;"	l
vector244	obj/kernel.asm	/^vector244:$/;"	l
vector245	obj/kernel.asm	/^vector245:$/;"	l
vector246	obj/kernel.asm	/^vector246:$/;"	l
vector247	obj/kernel.asm	/^vector247:$/;"	l
vector248	obj/kernel.asm	/^vector248:$/;"	l
vector249	obj/kernel.asm	/^vector249:$/;"	l
vector25	obj/kernel.asm	/^vector25:$/;"	l
vector250	obj/kernel.asm	/^vector250:$/;"	l
vector251	obj/kernel.asm	/^vector251:$/;"	l
vector252	obj/kernel.asm	/^vector252:$/;"	l
vector253	obj/kernel.asm	/^vector253:$/;"	l
vector254	obj/kernel.asm	/^vector254:$/;"	l
vector255	obj/kernel.asm	/^vector255:$/;"	l
vector26	obj/kernel.asm	/^vector26:$/;"	l
vector27	obj/kernel.asm	/^vector27:$/;"	l
vector28	obj/kernel.asm	/^vector28:$/;"	l
vector29	obj/kernel.asm	/^vector29:$/;"	l
vector3	obj/kernel.asm	/^vector3:$/;"	l
vector30	obj/kernel.asm	/^vector30:$/;"	l
vector31	obj/kernel.asm	/^vector31:$/;"	l
vector32	obj/kernel.asm	/^vector32:$/;"	l
vector33	obj/kernel.asm	/^vector33:$/;"	l
vector34	obj/kernel.asm	/^vector34:$/;"	l
vector35	obj/kernel.asm	/^vector35:$/;"	l
vector36	obj/kernel.asm	/^vector36:$/;"	l
vector37	obj/kernel.asm	/^vector37:$/;"	l
vector38	obj/kernel.asm	/^vector38:$/;"	l
vector39	obj/kernel.asm	/^vector39:$/;"	l
vector4	obj/kernel.asm	/^vector4:$/;"	l
vector40	obj/kernel.asm	/^vector40:$/;"	l
vector41	obj/kernel.asm	/^vector41:$/;"	l
vector42	obj/kernel.asm	/^vector42:$/;"	l
vector43	obj/kernel.asm	/^vector43:$/;"	l
vector44	obj/kernel.asm	/^vector44:$/;"	l
vector45	obj/kernel.asm	/^vector45:$/;"	l
vector46	obj/kernel.asm	/^vector46:$/;"	l
vector47	obj/kernel.asm	/^vector47:$/;"	l
vector48	obj/kernel.asm	/^vector48:$/;"	l
vector49	obj/kernel.asm	/^vector49:$/;"	l
vector5	obj/kernel.asm	/^vector5:$/;"	l
vector50	obj/kernel.asm	/^vector50:$/;"	l
vector51	obj/kernel.asm	/^vector51:$/;"	l
vector52	obj/kernel.asm	/^vector52:$/;"	l
vector53	obj/kernel.asm	/^vector53:$/;"	l
vector54	obj/kernel.asm	/^vector54:$/;"	l
vector55	obj/kernel.asm	/^vector55:$/;"	l
vector56	obj/kernel.asm	/^vector56:$/;"	l
vector57	obj/kernel.asm	/^vector57:$/;"	l
vector58	obj/kernel.asm	/^vector58:$/;"	l
vector59	obj/kernel.asm	/^vector59:$/;"	l
vector6	obj/kernel.asm	/^vector6:$/;"	l
vector60	obj/kernel.asm	/^vector60:$/;"	l
vector61	obj/kernel.asm	/^vector61:$/;"	l
vector62	obj/kernel.asm	/^vector62:$/;"	l
vector63	obj/kernel.asm	/^vector63:$/;"	l
vector64	obj/kernel.asm	/^vector64:$/;"	l
vector65	obj/kernel.asm	/^vector65:$/;"	l
vector66	obj/kernel.asm	/^vector66:$/;"	l
vector67	obj/kernel.asm	/^vector67:$/;"	l
vector68	obj/kernel.asm	/^vector68:$/;"	l
vector69	obj/kernel.asm	/^vector69:$/;"	l
vector7	obj/kernel.asm	/^vector7:$/;"	l
vector70	obj/kernel.asm	/^vector70:$/;"	l
vector71	obj/kernel.asm	/^vector71:$/;"	l
vector72	obj/kernel.asm	/^vector72:$/;"	l
vector73	obj/kernel.asm	/^vector73:$/;"	l
vector74	obj/kernel.asm	/^vector74:$/;"	l
vector75	obj/kernel.asm	/^vector75:$/;"	l
vector76	obj/kernel.asm	/^vector76:$/;"	l
vector77	obj/kernel.asm	/^vector77:$/;"	l
vector78	obj/kernel.asm	/^vector78:$/;"	l
vector79	obj/kernel.asm	/^vector79:$/;"	l
vector8	obj/kernel.asm	/^vector8:$/;"	l
vector80	obj/kernel.asm	/^vector80:$/;"	l
vector81	obj/kernel.asm	/^vector81:$/;"	l
vector82	obj/kernel.asm	/^vector82:$/;"	l
vector83	obj/kernel.asm	/^vector83:$/;"	l
vector84	obj/kernel.asm	/^vector84:$/;"	l
vector85	obj/kernel.asm	/^vector85:$/;"	l
vector86	obj/kernel.asm	/^vector86:$/;"	l
vector87	obj/kernel.asm	/^vector87:$/;"	l
vector88	obj/kernel.asm	/^vector88:$/;"	l
vector89	obj/kernel.asm	/^vector89:$/;"	l
vector9	obj/kernel.asm	/^vector9:$/;"	l
vector90	obj/kernel.asm	/^vector90:$/;"	l
vector91	obj/kernel.asm	/^vector91:$/;"	l
vector92	obj/kernel.asm	/^vector92:$/;"	l
vector93	obj/kernel.asm	/^vector93:$/;"	l
vector94	obj/kernel.asm	/^vector94:$/;"	l
vector95	obj/kernel.asm	/^vector95:$/;"	l
vector96	obj/kernel.asm	/^vector96:$/;"	l
vector97	obj/kernel.asm	/^vector97:$/;"	l
vector98	obj/kernel.asm	/^vector98:$/;"	l
vector99	obj/kernel.asm	/^vector99:$/;"	l
vma	obj/kernel.asm	/^                    vma = NULL;$/;"	d
vma	obj/kernel.asm	/^                    vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = mm->mmap_cache;$/;"	d
void	obj/kernel.asm	/^void     $/;"	l
void	obj/kernel.asm	/^void $/;"	l
void	obj/kernel.asm	/^void *$/;"	l
void	obj/kernel.asm	/^void __attribute__((noinline))$/;"	l
void	obj/kernel.asm	/^void check_sync(void){$/;"	l
void	obj/kernel.asm	/^void files_closeall(struct files_struct *filesp);$/;"	l
void	obj/kernel.asm	/^void files_destroy(struct files_struct *filesp);$/;"	l
void	obj/kernel.asm	/^void forkrets(struct trapframe *tf);$/;"	l
void	obj/kernel.asm	/^void grade_backtrace(void);$/;"	l
void	obj/kernel.asm	/^void kfree(void *block)$/;"	l
void	obj/kernel.asm	/^void phi_put_forks_condvar(int i) {$/;"	l
void	obj/kernel.asm	/^void phi_put_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	l
void	obj/kernel.asm	/^void phi_take_forks_condvar(int i) {$/;"	l
void	obj/kernel.asm	/^void phi_take_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	l
void	obj/kernel.asm	/^void phi_test_condvar (i) { $/;"	l
void	obj/kernel.asm	/^void phi_test_sema(i) \/* i：哲学家号码从0到N-1 *\/$/;"	l
void	obj/kernel.asm	/^void print_free_link(){$/;"	l
void	obj/kernel.asm	/^void switch_to(struct context *from, struct context *to);$/;"	l
void	obj/kernel.asm	/^void$/;"	l
volatile	obj/kernel.asm	/^volatile size_t ticks;$/;"	l
volatile	obj/kernel.asm	/^volatile unsigned int swap_out_num=0;$/;"	l
vop_open_dec	obj/kernel.asm	/^#define vop_open_dec(node)                                          inode_open_dec(node)$/;"	d
vop_open_inc	obj/kernel.asm	/^#define vop_open_inc(node)                                          inode_open_inc(node)$/;"	d
wait_t	obj/kernel.asm	/^wait_t *$/;"	l
width	obj/kernel.asm	/^                width = 0;$/;"	d
width	obj/kernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/kernel.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/badarg.asm	/^DIR *$/;"	l
DIR	obj/user/badarg.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/badarg.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/badarg.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/badarg.asm	/^_start:$/;"	l
altflag	obj/user/badarg.asm	/^            altflag = 1;$/;"	d
base	obj/user/badarg.asm	/^            base = 10;$/;"	d
base	obj/user/badarg.asm	/^            base = 16;$/;"	d
base	obj/user/badarg.asm	/^            base = 8;$/;"	d
base	obj/user/badarg.asm	/^        base = 10;$/;"	d
ch	obj/user/badarg.asm	/^                ch = *fmt;$/;"	d
char	obj/user/badarg.asm	/^char *$/;"	l
cnt	obj/user/badarg.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/badarg.asm	/^        default:$/;"	l
dig	obj/user/badarg.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/badarg.asm	/^                err = -err;$/;"	d
err	obj/user/badarg.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/badarg.asm	/^failed:$/;"	l
int	obj/user/badarg.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/badarg.asm	/^int$/;"	l
lflag	obj/user/badarg.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/badarg.asm	/^long$/;"	l
next	obj/user/badarg.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badarg.asm	/^    next = seed;$/;"	d
num	obj/user/badarg.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badarg.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badarg.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badarg.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/badarg.asm	/^        number:$/;"	l
p	obj/user/badarg.asm	/^                p = "(null)";$/;"	d
padc	obj/user/badarg.asm	/^            padc = '-';$/;"	d
padc	obj/user/badarg.asm	/^            padc = '0';$/;"	d
precision	obj/user/badarg.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badarg.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/badarg.asm	/^        process_precision:$/;"	l
reswitch	obj/user/badarg.asm	/^    reswitch:$/;"	l
ret	obj/user/badarg.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/badarg.asm	/^size_t$/;"	l
static	obj/user/badarg.asm	/^static char$/;"	l
static	obj/user/badarg.asm	/^static inline bool$/;"	l
static	obj/user/badarg.asm	/^static inline char *$/;"	l
static	obj/user/badarg.asm	/^static inline int$/;"	l
static	obj/user/badarg.asm	/^static inline void *$/;"	l
static	obj/user/badarg.asm	/^static inline void$/;"	l
static	obj/user/badarg.asm	/^static int$/;"	l
static	obj/user/badarg.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/badarg.asm	/^static long long$/;"	l
static	obj/user/badarg.asm	/^static unsigned long long$/;"	l
static	obj/user/badarg.asm	/^static void$/;"	l
step	obj/user/badarg.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/badarg.asm	/^uint32_t$/;"	l
unsigned	obj/user/badarg.asm	/^unsigned int$/;"	l
void	obj/user/badarg.asm	/^void *$/;"	l
void	obj/user/badarg.asm	/^void$/;"	l
width	obj/user/badarg.asm	/^                width = 0;$/;"	d
width	obj/user/badarg.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badarg.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/badsegment.asm	/^DIR *$/;"	l
DIR	obj/user/badsegment.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/badsegment.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
altflag	obj/user/badsegment.asm	/^            altflag = 1;$/;"	d
base	obj/user/badsegment.asm	/^            base = 10;$/;"	d
base	obj/user/badsegment.asm	/^            base = 16;$/;"	d
base	obj/user/badsegment.asm	/^            base = 8;$/;"	d
base	obj/user/badsegment.asm	/^        base = 10;$/;"	d
ch	obj/user/badsegment.asm	/^                ch = *fmt;$/;"	d
char	obj/user/badsegment.asm	/^char *$/;"	l
cnt	obj/user/badsegment.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/badsegment.asm	/^        default:$/;"	l
dig	obj/user/badsegment.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/badsegment.asm	/^                err = -err;$/;"	d
err	obj/user/badsegment.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/badsegment.asm	/^failed:$/;"	l
int	obj/user/badsegment.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
lflag	obj/user/badsegment.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/badsegment.asm	/^long$/;"	l
next	obj/user/badsegment.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badsegment.asm	/^    next = seed;$/;"	d
num	obj/user/badsegment.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badsegment.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badsegment.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/badsegment.asm	/^        number:$/;"	l
p	obj/user/badsegment.asm	/^                p = "(null)";$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '0';$/;"	d
precision	obj/user/badsegment.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/badsegment.asm	/^        process_precision:$/;"	l
reswitch	obj/user/badsegment.asm	/^    reswitch:$/;"	l
ret	obj/user/badsegment.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
static	obj/user/badsegment.asm	/^static char$/;"	l
static	obj/user/badsegment.asm	/^static inline bool$/;"	l
static	obj/user/badsegment.asm	/^static inline char *$/;"	l
static	obj/user/badsegment.asm	/^static inline int$/;"	l
static	obj/user/badsegment.asm	/^static inline void *$/;"	l
static	obj/user/badsegment.asm	/^static inline void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
step	obj/user/badsegment.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/badsegment.asm	/^uint32_t$/;"	l
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
width	obj/user/badsegment.asm	/^                width = 0;$/;"	d
width	obj/user/badsegment.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/divzero.asm	/^DIR *$/;"	l
DIR	obj/user/divzero.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/divzero.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/divzero.asm	/^_start:$/;"	l
altflag	obj/user/divzero.asm	/^            altflag = 1;$/;"	d
base	obj/user/divzero.asm	/^            base = 10;$/;"	d
base	obj/user/divzero.asm	/^            base = 16;$/;"	d
base	obj/user/divzero.asm	/^            base = 8;$/;"	d
base	obj/user/divzero.asm	/^        base = 10;$/;"	d
ch	obj/user/divzero.asm	/^                ch = *fmt;$/;"	d
char	obj/user/divzero.asm	/^char *$/;"	l
cnt	obj/user/divzero.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/divzero.asm	/^        default:$/;"	l
dig	obj/user/divzero.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/divzero.asm	/^                err = -err;$/;"	d
err	obj/user/divzero.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/divzero.asm	/^failed:$/;"	l
int	obj/user/divzero.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
lflag	obj/user/divzero.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/divzero.asm	/^long$/;"	l
next	obj/user/divzero.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/divzero.asm	/^    next = seed;$/;"	d
num	obj/user/divzero.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/divzero.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/divzero.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/divzero.asm	/^        number:$/;"	l
p	obj/user/divzero.asm	/^                p = "(null)";$/;"	d
padc	obj/user/divzero.asm	/^            padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^            padc = '0';$/;"	d
precision	obj/user/divzero.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/divzero.asm	/^        process_precision:$/;"	l
reswitch	obj/user/divzero.asm	/^    reswitch:$/;"	l
ret	obj/user/divzero.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/divzero.asm	/^size_t$/;"	l
static	obj/user/divzero.asm	/^static char$/;"	l
static	obj/user/divzero.asm	/^static inline bool$/;"	l
static	obj/user/divzero.asm	/^static inline char *$/;"	l
static	obj/user/divzero.asm	/^static inline int$/;"	l
static	obj/user/divzero.asm	/^static inline void *$/;"	l
static	obj/user/divzero.asm	/^static inline void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
step	obj/user/divzero.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/divzero.asm	/^uint32_t$/;"	l
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
width	obj/user/divzero.asm	/^                width = 0;$/;"	d
width	obj/user/divzero.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/exit.asm	/^DIR *$/;"	l
DIR	obj/user/exit.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/exit.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/exit.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/exit.asm	/^_start:$/;"	l
altflag	obj/user/exit.asm	/^            altflag = 1;$/;"	d
base	obj/user/exit.asm	/^            base = 10;$/;"	d
base	obj/user/exit.asm	/^            base = 16;$/;"	d
base	obj/user/exit.asm	/^            base = 8;$/;"	d
base	obj/user/exit.asm	/^        base = 10;$/;"	d
ch	obj/user/exit.asm	/^                ch = *fmt;$/;"	d
char	obj/user/exit.asm	/^char *$/;"	l
cnt	obj/user/exit.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/exit.asm	/^        default:$/;"	l
dig	obj/user/exit.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/exit.asm	/^                err = -err;$/;"	d
err	obj/user/exit.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/exit.asm	/^failed:$/;"	l
int	obj/user/exit.asm	/^int magic = -0x10384;$/;"	l
int	obj/user/exit.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/exit.asm	/^int$/;"	l
lflag	obj/user/exit.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/exit.asm	/^long$/;"	l
next	obj/user/exit.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/exit.asm	/^    next = seed;$/;"	d
num	obj/user/exit.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/exit.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/exit.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/exit.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/exit.asm	/^        number:$/;"	l
p	obj/user/exit.asm	/^                p = "(null)";$/;"	d
padc	obj/user/exit.asm	/^            padc = '-';$/;"	d
padc	obj/user/exit.asm	/^            padc = '0';$/;"	d
precision	obj/user/exit.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/exit.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/exit.asm	/^        process_precision:$/;"	l
reswitch	obj/user/exit.asm	/^    reswitch:$/;"	l
ret	obj/user/exit.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/exit.asm	/^size_t$/;"	l
static	obj/user/exit.asm	/^static char$/;"	l
static	obj/user/exit.asm	/^static inline bool$/;"	l
static	obj/user/exit.asm	/^static inline char *$/;"	l
static	obj/user/exit.asm	/^static inline int$/;"	l
static	obj/user/exit.asm	/^static inline void *$/;"	l
static	obj/user/exit.asm	/^static inline void$/;"	l
static	obj/user/exit.asm	/^static int$/;"	l
static	obj/user/exit.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/exit.asm	/^static long long$/;"	l
static	obj/user/exit.asm	/^static unsigned long long$/;"	l
static	obj/user/exit.asm	/^static void$/;"	l
step	obj/user/exit.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/exit.asm	/^uint32_t$/;"	l
unsigned	obj/user/exit.asm	/^unsigned int$/;"	l
void	obj/user/exit.asm	/^void *$/;"	l
void	obj/user/exit.asm	/^void$/;"	l
width	obj/user/exit.asm	/^                width = 0;$/;"	d
width	obj/user/exit.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/exit.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/faultread.asm	/^DIR *$/;"	l
DIR	obj/user/faultread.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/faultread.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/faultread.asm	/^_start:$/;"	l
altflag	obj/user/faultread.asm	/^            altflag = 1;$/;"	d
base	obj/user/faultread.asm	/^            base = 10;$/;"	d
base	obj/user/faultread.asm	/^            base = 16;$/;"	d
base	obj/user/faultread.asm	/^            base = 8;$/;"	d
base	obj/user/faultread.asm	/^        base = 10;$/;"	d
ch	obj/user/faultread.asm	/^                ch = *fmt;$/;"	d
char	obj/user/faultread.asm	/^char *$/;"	l
cnt	obj/user/faultread.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/faultread.asm	/^        default:$/;"	l
dig	obj/user/faultread.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/faultread.asm	/^                err = -err;$/;"	d
err	obj/user/faultread.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/faultread.asm	/^failed:$/;"	l
int	obj/user/faultread.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
lflag	obj/user/faultread.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/faultread.asm	/^long$/;"	l
next	obj/user/faultread.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultread.asm	/^    next = seed;$/;"	d
num	obj/user/faultread.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultread.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultread.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultread.asm	/^        number:$/;"	l
p	obj/user/faultread.asm	/^                p = "(null)";$/;"	d
padc	obj/user/faultread.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^            padc = '0';$/;"	d
precision	obj/user/faultread.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultread.asm	/^        process_precision:$/;"	l
reswitch	obj/user/faultread.asm	/^    reswitch:$/;"	l
ret	obj/user/faultread.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/faultread.asm	/^size_t$/;"	l
static	obj/user/faultread.asm	/^static char$/;"	l
static	obj/user/faultread.asm	/^static inline bool$/;"	l
static	obj/user/faultread.asm	/^static inline char *$/;"	l
static	obj/user/faultread.asm	/^static inline int$/;"	l
static	obj/user/faultread.asm	/^static inline void *$/;"	l
static	obj/user/faultread.asm	/^static inline void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
step	obj/user/faultread.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/faultread.asm	/^uint32_t$/;"	l
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
width	obj/user/faultread.asm	/^                width = 0;$/;"	d
width	obj/user/faultread.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/faultreadkernel.asm	/^DIR *$/;"	l
DIR	obj/user/faultreadkernel.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/faultreadkernel.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
altflag	obj/user/faultreadkernel.asm	/^            altflag = 1;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^        base = 10;$/;"	d
ch	obj/user/faultreadkernel.asm	/^                ch = *fmt;$/;"	d
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
cnt	obj/user/faultreadkernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/faultreadkernel.asm	/^        default:$/;"	l
dig	obj/user/faultreadkernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/faultreadkernel.asm	/^                err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/faultreadkernel.asm	/^failed:$/;"	l
int	obj/user/faultreadkernel.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
lflag	obj/user/faultreadkernel.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/faultreadkernel.asm	/^long$/;"	l
next	obj/user/faultreadkernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultreadkernel.asm	/^    next = seed;$/;"	d
num	obj/user/faultreadkernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultreadkernel.asm	/^        number:$/;"	l
p	obj/user/faultreadkernel.asm	/^                p = "(null)";$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultreadkernel.asm	/^        process_precision:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^    reswitch:$/;"	l
ret	obj/user/faultreadkernel.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static char$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline bool$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline char *$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline int$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline void *$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
step	obj/user/faultreadkernel.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/faultreadkernel.asm	/^uint32_t$/;"	l
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
width	obj/user/faultreadkernel.asm	/^                width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/forktest.asm	/^DIR *$/;"	l
DIR	obj/user/forktest.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/forktest.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/forktest.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/forktest.asm	/^_start:$/;"	l
altflag	obj/user/forktest.asm	/^            altflag = 1;$/;"	d
base	obj/user/forktest.asm	/^            base = 10;$/;"	d
base	obj/user/forktest.asm	/^            base = 16;$/;"	d
base	obj/user/forktest.asm	/^            base = 8;$/;"	d
base	obj/user/forktest.asm	/^        base = 10;$/;"	d
ch	obj/user/forktest.asm	/^                ch = *fmt;$/;"	d
char	obj/user/forktest.asm	/^char *$/;"	l
cnt	obj/user/forktest.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
const	obj/user/forktest.asm	/^const int max_child = 32;$/;"	l
default	obj/user/forktest.asm	/^        default:$/;"	l
dig	obj/user/forktest.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/forktest.asm	/^                err = -err;$/;"	d
err	obj/user/forktest.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/forktest.asm	/^failed:$/;"	l
int	obj/user/forktest.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/forktest.asm	/^int$/;"	l
lflag	obj/user/forktest.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/forktest.asm	/^long$/;"	l
next	obj/user/forktest.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktest.asm	/^    next = seed;$/;"	d
num	obj/user/forktest.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktest.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktest.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktest.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/forktest.asm	/^        number:$/;"	l
p	obj/user/forktest.asm	/^                p = "(null)";$/;"	d
padc	obj/user/forktest.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktest.asm	/^            padc = '0';$/;"	d
precision	obj/user/forktest.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktest.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/forktest.asm	/^        process_precision:$/;"	l
reswitch	obj/user/forktest.asm	/^    reswitch:$/;"	l
ret	obj/user/forktest.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/forktest.asm	/^size_t$/;"	l
static	obj/user/forktest.asm	/^static char$/;"	l
static	obj/user/forktest.asm	/^static inline bool$/;"	l
static	obj/user/forktest.asm	/^static inline char *$/;"	l
static	obj/user/forktest.asm	/^static inline int$/;"	l
static	obj/user/forktest.asm	/^static inline void *$/;"	l
static	obj/user/forktest.asm	/^static inline void$/;"	l
static	obj/user/forktest.asm	/^static int$/;"	l
static	obj/user/forktest.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/forktest.asm	/^static long long$/;"	l
static	obj/user/forktest.asm	/^static unsigned long long$/;"	l
static	obj/user/forktest.asm	/^static void$/;"	l
step	obj/user/forktest.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/forktest.asm	/^uint32_t$/;"	l
unsigned	obj/user/forktest.asm	/^unsigned int$/;"	l
void	obj/user/forktest.asm	/^void *$/;"	l
void	obj/user/forktest.asm	/^void$/;"	l
width	obj/user/forktest.asm	/^                width = 0;$/;"	d
width	obj/user/forktest.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktest.asm	/^        width = precision = -1;$/;"	d
DEPTH	obj/user/forktree.asm	/^#define DEPTH 4$/;"	d
DIR	obj/user/forktree.asm	/^DIR *$/;"	l
DIR	obj/user/forktree.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/forktree.asm	/^#define MAX_ARGS            5$/;"	d
SLEEP_TIME	obj/user/forktree.asm	/^#define SLEEP_TIME 400$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/forktree.asm	/^_start:$/;"	l
altflag	obj/user/forktree.asm	/^            altflag = 1;$/;"	d
base	obj/user/forktree.asm	/^            base = 10;$/;"	d
base	obj/user/forktree.asm	/^            base = 16;$/;"	d
base	obj/user/forktree.asm	/^            base = 8;$/;"	d
base	obj/user/forktree.asm	/^        base = 10;$/;"	d
ch	obj/user/forktree.asm	/^                ch = *fmt;$/;"	d
char	obj/user/forktree.asm	/^char *$/;"	l
cnt	obj/user/forktree.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/forktree.asm	/^        default:$/;"	l
dig	obj/user/forktree.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/forktree.asm	/^                err = -err;$/;"	d
err	obj/user/forktree.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/forktree.asm	/^failed:$/;"	l
int	obj/user/forktree.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
lflag	obj/user/forktree.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/forktree.asm	/^long$/;"	l
next	obj/user/forktree.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktree.asm	/^    next = seed;$/;"	d
num	obj/user/forktree.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktree.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktree.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/forktree.asm	/^        number:$/;"	l
p	obj/user/forktree.asm	/^                p = "(null)";$/;"	d
padc	obj/user/forktree.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^            padc = '0';$/;"	d
precision	obj/user/forktree.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/forktree.asm	/^        process_precision:$/;"	l
reswitch	obj/user/forktree.asm	/^    reswitch:$/;"	l
ret	obj/user/forktree.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/forktree.asm	/^size_t$/;"	l
static	obj/user/forktree.asm	/^static char$/;"	l
static	obj/user/forktree.asm	/^static inline bool$/;"	l
static	obj/user/forktree.asm	/^static inline char *$/;"	l
static	obj/user/forktree.asm	/^static inline int$/;"	l
static	obj/user/forktree.asm	/^static inline void *$/;"	l
static	obj/user/forktree.asm	/^static inline void$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
step	obj/user/forktree.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/forktree.asm	/^uint32_t$/;"	l
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
width	obj/user/forktree.asm	/^                width = 0;$/;"	d
width	obj/user/forktree.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/hello.asm	/^DIR *$/;"	l
DIR	obj/user/hello.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/hello.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/hello.asm	/^_start:$/;"	l
altflag	obj/user/hello.asm	/^            altflag = 1;$/;"	d
base	obj/user/hello.asm	/^            base = 10;$/;"	d
base	obj/user/hello.asm	/^            base = 16;$/;"	d
base	obj/user/hello.asm	/^            base = 8;$/;"	d
base	obj/user/hello.asm	/^        base = 10;$/;"	d
ch	obj/user/hello.asm	/^                ch = *fmt;$/;"	d
char	obj/user/hello.asm	/^char *$/;"	l
cnt	obj/user/hello.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/hello.asm	/^        default:$/;"	l
dig	obj/user/hello.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/hello.asm	/^                err = -err;$/;"	d
err	obj/user/hello.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/hello.asm	/^failed:$/;"	l
int	obj/user/hello.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
lflag	obj/user/hello.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/hello.asm	/^long$/;"	l
next	obj/user/hello.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/hello.asm	/^    next = seed;$/;"	d
num	obj/user/hello.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/hello.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/hello.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/hello.asm	/^        number:$/;"	l
p	obj/user/hello.asm	/^                p = "(null)";$/;"	d
padc	obj/user/hello.asm	/^            padc = '-';$/;"	d
padc	obj/user/hello.asm	/^            padc = '0';$/;"	d
precision	obj/user/hello.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/hello.asm	/^        process_precision:$/;"	l
reswitch	obj/user/hello.asm	/^    reswitch:$/;"	l
ret	obj/user/hello.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/hello.asm	/^size_t$/;"	l
static	obj/user/hello.asm	/^static char$/;"	l
static	obj/user/hello.asm	/^static inline bool$/;"	l
static	obj/user/hello.asm	/^static inline char *$/;"	l
static	obj/user/hello.asm	/^static inline int$/;"	l
static	obj/user/hello.asm	/^static inline void *$/;"	l
static	obj/user/hello.asm	/^static inline void$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
step	obj/user/hello.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/hello.asm	/^uint32_t$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
width	obj/user/hello.asm	/^                width = 0;$/;"	d
width	obj/user/hello.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^        width = precision = -1;$/;"	d
BUFSIZE	obj/user/ls.asm	/^#define BUFSIZE                         4096$/;"	d
DIR	obj/user/ls.asm	/^DIR *$/;"	l
DIR	obj/user/ls.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/ls.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/ls.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/ls.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/ls.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/ls.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/ls.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/ls.asm	/^_start:$/;"	l
altflag	obj/user/ls.asm	/^            altflag = 1;$/;"	d
base	obj/user/ls.asm	/^            base = 10;$/;"	d
base	obj/user/ls.asm	/^            base = 16;$/;"	d
base	obj/user/ls.asm	/^            base = 8;$/;"	d
base	obj/user/ls.asm	/^        base = 10;$/;"	d
ch	obj/user/ls.asm	/^                ch = *fmt;$/;"	d
char	obj/user/ls.asm	/^char *$/;"	l
cnt	obj/user/ls.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/ls.asm	/^        default:$/;"	l
default	obj/user/ls.asm	/^    default:  type = 5; break;$/;"	l
dig	obj/user/ls.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/ls.asm	/^                err = -err;$/;"	d
err	obj/user/ls.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/ls.asm	/^failed:$/;"	l
int	obj/user/ls.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
lflag	obj/user/ls.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/ls.asm	/^long$/;"	l
next	obj/user/ls.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/ls.asm	/^    next = seed;$/;"	d
num	obj/user/ls.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/ls.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/ls.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/ls.asm	/^        number:$/;"	l
p	obj/user/ls.asm	/^                p = "(null)";$/;"	d
padc	obj/user/ls.asm	/^            padc = '-';$/;"	d
padc	obj/user/ls.asm	/^            padc = '0';$/;"	d
precision	obj/user/ls.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^            precision = va_arg(ap, int);$/;"	d
printf	obj/user/ls.asm	/^#define printf(...)                     fprintf(1, __VA_ARGS__)$/;"	d
process_precision	obj/user/ls.asm	/^        process_precision:$/;"	l
reswitch	obj/user/ls.asm	/^    reswitch:$/;"	l
ret	obj/user/ls.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/ls.asm	/^    ret = fstat(fd, stat);$/;"	d
size_t	obj/user/ls.asm	/^size_t$/;"	l
static	obj/user/ls.asm	/^static char$/;"	l
static	obj/user/ls.asm	/^static inline bool$/;"	l
static	obj/user/ls.asm	/^static inline char *$/;"	l
static	obj/user/ls.asm	/^static inline int$/;"	l
static	obj/user/ls.asm	/^static inline void *$/;"	l
static	obj/user/ls.asm	/^static inline void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
step	obj/user/ls.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/ls.asm	/^uint32_t$/;"	l
unsigned	obj/user/ls.asm	/^unsigned int$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
width	obj/user/ls.asm	/^                width = 0;$/;"	d
width	obj/user/ls.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/matrix.asm	/^DIR *$/;"	l
DIR	obj/user/matrix.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/matrix.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/matrix.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/matrix.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/matrix.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/matrix.asm	/^_start:$/;"	l
altflag	obj/user/matrix.asm	/^            altflag = 1;$/;"	d
base	obj/user/matrix.asm	/^            base = 10;$/;"	d
base	obj/user/matrix.asm	/^            base = 16;$/;"	d
base	obj/user/matrix.asm	/^            base = 8;$/;"	d
base	obj/user/matrix.asm	/^        base = 10;$/;"	d
ch	obj/user/matrix.asm	/^                ch = *fmt;$/;"	d
char	obj/user/matrix.asm	/^char *$/;"	l
cnt	obj/user/matrix.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
const	obj/user/matrix.asm	/^const int total = 21;$/;"	l
default	obj/user/matrix.asm	/^        default:$/;"	l
dig	obj/user/matrix.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/matrix.asm	/^                err = -err;$/;"	d
err	obj/user/matrix.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/matrix.asm	/^failed:$/;"	l
int	obj/user/matrix.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/matrix.asm	/^int$/;"	l
lflag	obj/user/matrix.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/matrix.asm	/^long$/;"	l
next	obj/user/matrix.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/matrix.asm	/^    next = seed;$/;"	d
num	obj/user/matrix.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/matrix.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/matrix.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/matrix.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/matrix.asm	/^        number:$/;"	l
p	obj/user/matrix.asm	/^                p = "(null)";$/;"	d
padc	obj/user/matrix.asm	/^            padc = '-';$/;"	d
padc	obj/user/matrix.asm	/^            padc = '0';$/;"	d
precision	obj/user/matrix.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/matrix.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/matrix.asm	/^        process_precision:$/;"	l
reswitch	obj/user/matrix.asm	/^    reswitch:$/;"	l
ret	obj/user/matrix.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/matrix.asm	/^size_t$/;"	l
static	obj/user/matrix.asm	/^static char$/;"	l
static	obj/user/matrix.asm	/^static inline bool$/;"	l
static	obj/user/matrix.asm	/^static inline char *$/;"	l
static	obj/user/matrix.asm	/^static inline int$/;"	l
static	obj/user/matrix.asm	/^static inline void *$/;"	l
static	obj/user/matrix.asm	/^static inline void$/;"	l
static	obj/user/matrix.asm	/^static int mata[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int matb[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int matc[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int$/;"	l
static	obj/user/matrix.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/matrix.asm	/^static long long$/;"	l
static	obj/user/matrix.asm	/^static unsigned long long$/;"	l
static	obj/user/matrix.asm	/^static void$/;"	l
step	obj/user/matrix.asm	/^                step = 0;$/;"	d
times	obj/user/matrix.asm	/^            times = (times * times + 10) * 100;$/;"	d
uint32_t	obj/user/matrix.asm	/^uint32_t$/;"	l
unsigned	obj/user/matrix.asm	/^unsigned int$/;"	l
void	obj/user/matrix.asm	/^void *$/;"	l
void	obj/user/matrix.asm	/^void$/;"	l
width	obj/user/matrix.asm	/^                width = 0;$/;"	d
width	obj/user/matrix.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/matrix.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/pgdir.asm	/^DIR *$/;"	l
DIR	obj/user/pgdir.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/pgdir.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/pgdir.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/pgdir.asm	/^_start:$/;"	l
altflag	obj/user/pgdir.asm	/^            altflag = 1;$/;"	d
base	obj/user/pgdir.asm	/^            base = 10;$/;"	d
base	obj/user/pgdir.asm	/^            base = 16;$/;"	d
base	obj/user/pgdir.asm	/^            base = 8;$/;"	d
base	obj/user/pgdir.asm	/^        base = 10;$/;"	d
ch	obj/user/pgdir.asm	/^                ch = *fmt;$/;"	d
char	obj/user/pgdir.asm	/^char *$/;"	l
cnt	obj/user/pgdir.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/pgdir.asm	/^        default:$/;"	l
dig	obj/user/pgdir.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/pgdir.asm	/^                err = -err;$/;"	d
err	obj/user/pgdir.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/pgdir.asm	/^failed:$/;"	l
int	obj/user/pgdir.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/pgdir.asm	/^int$/;"	l
lflag	obj/user/pgdir.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/pgdir.asm	/^long$/;"	l
next	obj/user/pgdir.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/pgdir.asm	/^    next = seed;$/;"	d
num	obj/user/pgdir.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/pgdir.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/pgdir.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/pgdir.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/pgdir.asm	/^        number:$/;"	l
p	obj/user/pgdir.asm	/^                p = "(null)";$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '-';$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '0';$/;"	d
precision	obj/user/pgdir.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pgdir.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/pgdir.asm	/^        process_precision:$/;"	l
reswitch	obj/user/pgdir.asm	/^    reswitch:$/;"	l
ret	obj/user/pgdir.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/pgdir.asm	/^size_t$/;"	l
static	obj/user/pgdir.asm	/^static char$/;"	l
static	obj/user/pgdir.asm	/^static inline bool$/;"	l
static	obj/user/pgdir.asm	/^static inline char *$/;"	l
static	obj/user/pgdir.asm	/^static inline int$/;"	l
static	obj/user/pgdir.asm	/^static inline void *$/;"	l
static	obj/user/pgdir.asm	/^static inline void$/;"	l
static	obj/user/pgdir.asm	/^static int$/;"	l
static	obj/user/pgdir.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/pgdir.asm	/^static long long$/;"	l
static	obj/user/pgdir.asm	/^static unsigned long long$/;"	l
static	obj/user/pgdir.asm	/^static void$/;"	l
step	obj/user/pgdir.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/pgdir.asm	/^uint32_t$/;"	l
unsigned	obj/user/pgdir.asm	/^unsigned int$/;"	l
void	obj/user/pgdir.asm	/^void *$/;"	l
void	obj/user/pgdir.asm	/^void$/;"	l
width	obj/user/pgdir.asm	/^                width = 0;$/;"	d
width	obj/user/pgdir.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/pgdir.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/priority.asm	/^DIR *$/;"	l
DIR	obj/user/priority.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/priority.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/priority.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/priority.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/priority.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/priority.asm	/^_start:$/;"	l
altflag	obj/user/priority.asm	/^            altflag = 1;$/;"	d
base	obj/user/priority.asm	/^            base = 10;$/;"	d
base	obj/user/priority.asm	/^            base = 16;$/;"	d
base	obj/user/priority.asm	/^            base = 8;$/;"	d
base	obj/user/priority.asm	/^        base = 10;$/;"	d
ch	obj/user/priority.asm	/^                ch = *fmt;$/;"	d
char	obj/user/priority.asm	/^char *$/;"	l
cnt	obj/user/priority.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/priority.asm	/^        default:$/;"	l
dig	obj/user/priority.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/priority.asm	/^                err = -err;$/;"	d
err	obj/user/priority.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/priority.asm	/^failed:$/;"	l
int	obj/user/priority.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/priority.asm	/^int pids[TOTAL];$/;"	l
int	obj/user/priority.asm	/^int status[TOTAL];$/;"	l
int	obj/user/priority.asm	/^int$/;"	l
j	obj/user/priority.asm	/^          j = !j;$/;"	d
lflag	obj/user/priority.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/priority.asm	/^long$/;"	l
next	obj/user/priority.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/priority.asm	/^    next = seed;$/;"	d
num	obj/user/priority.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/priority.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/priority.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/priority.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/priority.asm	/^        number:$/;"	l
p	obj/user/priority.asm	/^                p = "(null)";$/;"	d
padc	obj/user/priority.asm	/^            padc = '-';$/;"	d
padc	obj/user/priority.asm	/^            padc = '0';$/;"	d
precision	obj/user/priority.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/priority.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/priority.asm	/^        process_precision:$/;"	l
reswitch	obj/user/priority.asm	/^    reswitch:$/;"	l
ret	obj/user/priority.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/priority.asm	/^size_t$/;"	l
static	obj/user/priority.asm	/^static char$/;"	l
static	obj/user/priority.asm	/^static inline bool$/;"	l
static	obj/user/priority.asm	/^static inline char *$/;"	l
static	obj/user/priority.asm	/^static inline int$/;"	l
static	obj/user/priority.asm	/^static inline void *$/;"	l
static	obj/user/priority.asm	/^static inline void$/;"	l
static	obj/user/priority.asm	/^static int$/;"	l
static	obj/user/priority.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/priority.asm	/^static long long$/;"	l
static	obj/user/priority.asm	/^static unsigned long long$/;"	l
static	obj/user/priority.asm	/^static void$/;"	l
step	obj/user/priority.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/priority.asm	/^uint32_t$/;"	l
unsigned	obj/user/priority.asm	/^unsigned int$/;"	l
void	obj/user/priority.asm	/^void *$/;"	l
void	obj/user/priority.asm	/^void$/;"	l
width	obj/user/priority.asm	/^                width = 0;$/;"	d
width	obj/user/priority.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/priority.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/sh.asm	/^DIR *$/;"	l
DIR	obj/user/sh.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/sh.asm	/^#define MAX_ARGS            5$/;"	d
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS                         "<|>&;"$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/sh.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/sh.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/sh.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/sh.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/sh.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/sh.asm	/^_start:$/;"	l
again	obj/user/sh.asm	/^again:$/;"	l
altflag	obj/user/sh.asm	/^            altflag = 1;$/;"	d
argc	obj/user/sh.asm	/^    argc = 0;$/;"	d
base	obj/user/sh.asm	/^            base = 10;$/;"	d
base	obj/user/sh.asm	/^            base = 16;$/;"	d
base	obj/user/sh.asm	/^            base = 8;$/;"	d
base	obj/user/sh.asm	/^        base = 10;$/;"	d
ch	obj/user/sh.asm	/^                ch = *fmt;$/;"	d
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char shcwd[BUFSIZE];$/;"	l
cnt	obj/user/sh.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/sh.asm	/^        default:$/;"	l
dig	obj/user/sh.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/sh.asm	/^                err = -err;$/;"	d
err	obj/user/sh.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/sh.asm	/^failed:$/;"	l
fd1	obj/user/sh.asm	/^        fd1 = ret, ret = dup2(fd1, fd2);$/;"	d
int	obj/user/sh.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
interactive	obj/user/sh.asm	/^        interactive = 0;$/;"	d
lflag	obj/user/sh.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/sh.asm	/^long$/;"	l
next	obj/user/sh.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/sh.asm	/^    next = seed;$/;"	d
num	obj/user/sh.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/sh.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/sh.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/sh.asm	/^        number:$/;"	l
p	obj/user/sh.asm	/^                p = "(null)";$/;"	d
padc	obj/user/sh.asm	/^            padc = '-';$/;"	d
padc	obj/user/sh.asm	/^            padc = '0';$/;"	d
precision	obj/user/sh.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/sh.asm	/^        process_precision:$/;"	l
reswitch	obj/user/sh.asm	/^    reswitch:$/;"	l
ret	obj/user/sh.asm	/^                ret = 0;$/;"	d
ret	obj/user/sh.asm	/^            ret = runcmd(buffer);$/;"	d
ret	obj/user/sh.asm	/^        ret = dup2(fd1, fd2);$/;"	d
runit	obj/user/sh.asm	/^runit:$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
static	obj/user/sh.asm	/^static char$/;"	l
static	obj/user/sh.asm	/^static inline bool$/;"	l
static	obj/user/sh.asm	/^static inline char *$/;"	l
static	obj/user/sh.asm	/^static inline int$/;"	l
static	obj/user/sh.asm	/^static inline void *$/;"	l
static	obj/user/sh.asm	/^static inline void$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
step	obj/user/sh.asm	/^                step = 0;$/;"	d
token	obj/user/sh.asm	/^        token = *s, *s ++ = '\\0';$/;"	d
uint32_t	obj/user/sh.asm	/^uint32_t$/;"	l
unsigned	obj/user/sh.asm	/^unsigned int$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
width	obj/user/sh.asm	/^                width = 0;$/;"	d
width	obj/user/sh.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/sleep.asm	/^DIR *$/;"	l
DIR	obj/user/sleep.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/sleep.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/sleep.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/sleep.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/sleep.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/sleep.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/sleep.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/sleep.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/sleep.asm	/^_start:$/;"	l
altflag	obj/user/sleep.asm	/^            altflag = 1;$/;"	d
base	obj/user/sleep.asm	/^            base = 10;$/;"	d
base	obj/user/sleep.asm	/^            base = 16;$/;"	d
base	obj/user/sleep.asm	/^            base = 8;$/;"	d
base	obj/user/sleep.asm	/^        base = 10;$/;"	d
ch	obj/user/sleep.asm	/^                ch = *fmt;$/;"	d
char	obj/user/sleep.asm	/^char *$/;"	l
cnt	obj/user/sleep.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/sleep.asm	/^        default:$/;"	l
dig	obj/user/sleep.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/sleep.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sleep.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/sleep.asm	/^                err = -err;$/;"	d
err	obj/user/sleep.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/sleep.asm	/^failed:$/;"	l
int	obj/user/sleep.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/sleep.asm	/^int$/;"	l
lflag	obj/user/sleep.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/sleep.asm	/^long$/;"	l
next	obj/user/sleep.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/sleep.asm	/^    next = seed;$/;"	d
num	obj/user/sleep.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/sleep.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/sleep.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/sleep.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/sleep.asm	/^        number:$/;"	l
p	obj/user/sleep.asm	/^                p = "(null)";$/;"	d
padc	obj/user/sleep.asm	/^            padc = '-';$/;"	d
padc	obj/user/sleep.asm	/^            padc = '0';$/;"	d
precision	obj/user/sleep.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sleep.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/sleep.asm	/^        process_precision:$/;"	l
reswitch	obj/user/sleep.asm	/^    reswitch:$/;"	l
ret	obj/user/sleep.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/sleep.asm	/^size_t$/;"	l
static	obj/user/sleep.asm	/^static char$/;"	l
static	obj/user/sleep.asm	/^static inline bool$/;"	l
static	obj/user/sleep.asm	/^static inline char *$/;"	l
static	obj/user/sleep.asm	/^static inline int$/;"	l
static	obj/user/sleep.asm	/^static inline void *$/;"	l
static	obj/user/sleep.asm	/^static inline void$/;"	l
static	obj/user/sleep.asm	/^static int$/;"	l
static	obj/user/sleep.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/sleep.asm	/^static long long$/;"	l
static	obj/user/sleep.asm	/^static unsigned long long$/;"	l
static	obj/user/sleep.asm	/^static void$/;"	l
step	obj/user/sleep.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/sleep.asm	/^uint32_t$/;"	l
unsigned	obj/user/sleep.asm	/^unsigned int$/;"	l
void	obj/user/sleep.asm	/^void *$/;"	l
void	obj/user/sleep.asm	/^void$/;"	l
width	obj/user/sleep.asm	/^                width = 0;$/;"	d
width	obj/user/sleep.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/sleep.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/sleepkill.asm	/^DIR *$/;"	l
DIR	obj/user/sleepkill.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/sleepkill.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/sleepkill.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/sleepkill.asm	/^_start:$/;"	l
altflag	obj/user/sleepkill.asm	/^            altflag = 1;$/;"	d
base	obj/user/sleepkill.asm	/^            base = 10;$/;"	d
base	obj/user/sleepkill.asm	/^            base = 16;$/;"	d
base	obj/user/sleepkill.asm	/^            base = 8;$/;"	d
base	obj/user/sleepkill.asm	/^        base = 10;$/;"	d
ch	obj/user/sleepkill.asm	/^                ch = *fmt;$/;"	d
char	obj/user/sleepkill.asm	/^char *$/;"	l
cnt	obj/user/sleepkill.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/sleepkill.asm	/^        default:$/;"	l
dig	obj/user/sleepkill.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/sleepkill.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sleepkill.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/sleepkill.asm	/^                err = -err;$/;"	d
err	obj/user/sleepkill.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/sleepkill.asm	/^failed:$/;"	l
int	obj/user/sleepkill.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/sleepkill.asm	/^int$/;"	l
lflag	obj/user/sleepkill.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/sleepkill.asm	/^long$/;"	l
next	obj/user/sleepkill.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/sleepkill.asm	/^    next = seed;$/;"	d
num	obj/user/sleepkill.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/sleepkill.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/sleepkill.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/sleepkill.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/sleepkill.asm	/^        number:$/;"	l
p	obj/user/sleepkill.asm	/^                p = "(null)";$/;"	d
padc	obj/user/sleepkill.asm	/^            padc = '-';$/;"	d
padc	obj/user/sleepkill.asm	/^            padc = '0';$/;"	d
precision	obj/user/sleepkill.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sleepkill.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/sleepkill.asm	/^        process_precision:$/;"	l
reswitch	obj/user/sleepkill.asm	/^    reswitch:$/;"	l
ret	obj/user/sleepkill.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/sleepkill.asm	/^size_t$/;"	l
static	obj/user/sleepkill.asm	/^static char$/;"	l
static	obj/user/sleepkill.asm	/^static inline bool$/;"	l
static	obj/user/sleepkill.asm	/^static inline char *$/;"	l
static	obj/user/sleepkill.asm	/^static inline int$/;"	l
static	obj/user/sleepkill.asm	/^static inline void *$/;"	l
static	obj/user/sleepkill.asm	/^static inline void$/;"	l
static	obj/user/sleepkill.asm	/^static int$/;"	l
static	obj/user/sleepkill.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/sleepkill.asm	/^static long long$/;"	l
static	obj/user/sleepkill.asm	/^static unsigned long long$/;"	l
static	obj/user/sleepkill.asm	/^static void$/;"	l
step	obj/user/sleepkill.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/sleepkill.asm	/^uint32_t$/;"	l
unsigned	obj/user/sleepkill.asm	/^unsigned int$/;"	l
void	obj/user/sleepkill.asm	/^void *$/;"	l
void	obj/user/sleepkill.asm	/^void$/;"	l
width	obj/user/sleepkill.asm	/^                width = 0;$/;"	d
width	obj/user/sleepkill.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/sleepkill.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/softint.asm	/^DIR *$/;"	l
DIR	obj/user/softint.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/softint.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/softint.asm	/^_start:$/;"	l
altflag	obj/user/softint.asm	/^            altflag = 1;$/;"	d
base	obj/user/softint.asm	/^            base = 10;$/;"	d
base	obj/user/softint.asm	/^            base = 16;$/;"	d
base	obj/user/softint.asm	/^            base = 8;$/;"	d
base	obj/user/softint.asm	/^        base = 10;$/;"	d
ch	obj/user/softint.asm	/^                ch = *fmt;$/;"	d
char	obj/user/softint.asm	/^char *$/;"	l
cnt	obj/user/softint.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/softint.asm	/^        default:$/;"	l
dig	obj/user/softint.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/softint.asm	/^                err = -err;$/;"	d
err	obj/user/softint.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/softint.asm	/^failed:$/;"	l
int	obj/user/softint.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
lflag	obj/user/softint.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/softint.asm	/^long$/;"	l
next	obj/user/softint.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/softint.asm	/^    next = seed;$/;"	d
num	obj/user/softint.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/softint.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/softint.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/softint.asm	/^        number:$/;"	l
p	obj/user/softint.asm	/^                p = "(null)";$/;"	d
padc	obj/user/softint.asm	/^            padc = '-';$/;"	d
padc	obj/user/softint.asm	/^            padc = '0';$/;"	d
precision	obj/user/softint.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/softint.asm	/^        process_precision:$/;"	l
reswitch	obj/user/softint.asm	/^    reswitch:$/;"	l
ret	obj/user/softint.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/softint.asm	/^size_t$/;"	l
static	obj/user/softint.asm	/^static char$/;"	l
static	obj/user/softint.asm	/^static inline bool$/;"	l
static	obj/user/softint.asm	/^static inline char *$/;"	l
static	obj/user/softint.asm	/^static inline int$/;"	l
static	obj/user/softint.asm	/^static inline void *$/;"	l
static	obj/user/softint.asm	/^static inline void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
step	obj/user/softint.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/softint.asm	/^uint32_t$/;"	l
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
width	obj/user/softint.asm	/^                width = 0;$/;"	d
width	obj/user/softint.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/spin.asm	/^DIR *$/;"	l
DIR	obj/user/spin.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/spin.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/spin.asm	/^_start:$/;"	l
altflag	obj/user/spin.asm	/^            altflag = 1;$/;"	d
base	obj/user/spin.asm	/^            base = 10;$/;"	d
base	obj/user/spin.asm	/^            base = 16;$/;"	d
base	obj/user/spin.asm	/^            base = 8;$/;"	d
base	obj/user/spin.asm	/^        base = 10;$/;"	d
ch	obj/user/spin.asm	/^                ch = *fmt;$/;"	d
char	obj/user/spin.asm	/^char *$/;"	l
cnt	obj/user/spin.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/spin.asm	/^        default:$/;"	l
dig	obj/user/spin.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/spin.asm	/^                err = -err;$/;"	d
err	obj/user/spin.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/spin.asm	/^failed:$/;"	l
int	obj/user/spin.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
lflag	obj/user/spin.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/spin.asm	/^long$/;"	l
next	obj/user/spin.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/spin.asm	/^    next = seed;$/;"	d
num	obj/user/spin.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/spin.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/spin.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/spin.asm	/^        number:$/;"	l
p	obj/user/spin.asm	/^                p = "(null)";$/;"	d
padc	obj/user/spin.asm	/^            padc = '-';$/;"	d
padc	obj/user/spin.asm	/^            padc = '0';$/;"	d
precision	obj/user/spin.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/spin.asm	/^        process_precision:$/;"	l
reswitch	obj/user/spin.asm	/^    reswitch:$/;"	l
ret	obj/user/spin.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/spin.asm	/^size_t$/;"	l
static	obj/user/spin.asm	/^static char$/;"	l
static	obj/user/spin.asm	/^static inline bool$/;"	l
static	obj/user/spin.asm	/^static inline char *$/;"	l
static	obj/user/spin.asm	/^static inline int$/;"	l
static	obj/user/spin.asm	/^static inline void *$/;"	l
static	obj/user/spin.asm	/^static inline void$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
step	obj/user/spin.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/spin.asm	/^uint32_t$/;"	l
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
width	obj/user/spin.asm	/^                width = 0;$/;"	d
width	obj/user/spin.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^        width = precision = -1;$/;"	d
ARRAYSIZE	obj/user/testbss.asm	/^#define ARRAYSIZE (1024*1024)$/;"	d
DIR	obj/user/testbss.asm	/^DIR *$/;"	l
DIR	obj/user/testbss.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/testbss.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/testbss.asm	/^_start:$/;"	l
altflag	obj/user/testbss.asm	/^            altflag = 1;$/;"	d
base	obj/user/testbss.asm	/^            base = 10;$/;"	d
base	obj/user/testbss.asm	/^            base = 16;$/;"	d
base	obj/user/testbss.asm	/^            base = 8;$/;"	d
base	obj/user/testbss.asm	/^        base = 10;$/;"	d
ch	obj/user/testbss.asm	/^                ch = *fmt;$/;"	d
char	obj/user/testbss.asm	/^char *$/;"	l
cnt	obj/user/testbss.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/testbss.asm	/^        default:$/;"	l
dig	obj/user/testbss.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/testbss.asm	/^                err = -err;$/;"	d
err	obj/user/testbss.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/testbss.asm	/^failed:$/;"	l
int	obj/user/testbss.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
lflag	obj/user/testbss.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/testbss.asm	/^long$/;"	l
next	obj/user/testbss.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/testbss.asm	/^    next = seed;$/;"	d
num	obj/user/testbss.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/testbss.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/testbss.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/testbss.asm	/^        number:$/;"	l
p	obj/user/testbss.asm	/^                p = "(null)";$/;"	d
padc	obj/user/testbss.asm	/^            padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^            padc = '0';$/;"	d
precision	obj/user/testbss.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testbss.asm	/^        process_precision:$/;"	l
reswitch	obj/user/testbss.asm	/^    reswitch:$/;"	l
ret	obj/user/testbss.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/testbss.asm	/^size_t$/;"	l
static	obj/user/testbss.asm	/^static char$/;"	l
static	obj/user/testbss.asm	/^static inline bool$/;"	l
static	obj/user/testbss.asm	/^static inline char *$/;"	l
static	obj/user/testbss.asm	/^static inline int$/;"	l
static	obj/user/testbss.asm	/^static inline void *$/;"	l
static	obj/user/testbss.asm	/^static inline void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
step	obj/user/testbss.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
width	obj/user/testbss.asm	/^                width = 0;$/;"	d
width	obj/user/testbss.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/waitkill.asm	/^DIR *$/;"	l
DIR	obj/user/waitkill.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/waitkill.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/waitkill.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/waitkill.asm	/^_start:$/;"	l
altflag	obj/user/waitkill.asm	/^            altflag = 1;$/;"	d
base	obj/user/waitkill.asm	/^            base = 10;$/;"	d
base	obj/user/waitkill.asm	/^            base = 16;$/;"	d
base	obj/user/waitkill.asm	/^            base = 8;$/;"	d
base	obj/user/waitkill.asm	/^        base = 10;$/;"	d
ch	obj/user/waitkill.asm	/^                ch = *fmt;$/;"	d
char	obj/user/waitkill.asm	/^char *$/;"	l
cnt	obj/user/waitkill.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/waitkill.asm	/^        default:$/;"	l
dig	obj/user/waitkill.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/waitkill.asm	/^                err = -err;$/;"	d
err	obj/user/waitkill.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/waitkill.asm	/^failed:$/;"	l
int	obj/user/waitkill.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/waitkill.asm	/^int parent, pid1, pid2;$/;"	l
int	obj/user/waitkill.asm	/^int$/;"	l
lflag	obj/user/waitkill.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/waitkill.asm	/^long$/;"	l
next	obj/user/waitkill.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/waitkill.asm	/^    next = seed;$/;"	d
num	obj/user/waitkill.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/waitkill.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/waitkill.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/waitkill.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/waitkill.asm	/^        number:$/;"	l
p	obj/user/waitkill.asm	/^                p = "(null)";$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '-';$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '0';$/;"	d
parent	obj/user/waitkill.asm	/^    parent = getpid();$/;"	d
precision	obj/user/waitkill.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/waitkill.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/waitkill.asm	/^        process_precision:$/;"	l
reswitch	obj/user/waitkill.asm	/^    reswitch:$/;"	l
ret	obj/user/waitkill.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/waitkill.asm	/^size_t$/;"	l
static	obj/user/waitkill.asm	/^static char$/;"	l
static	obj/user/waitkill.asm	/^static inline bool$/;"	l
static	obj/user/waitkill.asm	/^static inline char *$/;"	l
static	obj/user/waitkill.asm	/^static inline int$/;"	l
static	obj/user/waitkill.asm	/^static inline void *$/;"	l
static	obj/user/waitkill.asm	/^static inline void$/;"	l
static	obj/user/waitkill.asm	/^static int$/;"	l
static	obj/user/waitkill.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/waitkill.asm	/^static long long$/;"	l
static	obj/user/waitkill.asm	/^static unsigned long long$/;"	l
static	obj/user/waitkill.asm	/^static void$/;"	l
step	obj/user/waitkill.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/waitkill.asm	/^uint32_t$/;"	l
unsigned	obj/user/waitkill.asm	/^unsigned int$/;"	l
void	obj/user/waitkill.asm	/^void *$/;"	l
void	obj/user/waitkill.asm	/^void$/;"	l
width	obj/user/waitkill.asm	/^                width = 0;$/;"	d
width	obj/user/waitkill.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/waitkill.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/yield.asm	/^DIR *$/;"	l
DIR	obj/user/yield.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/yield.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/yield.asm	/^_start:$/;"	l
altflag	obj/user/yield.asm	/^            altflag = 1;$/;"	d
base	obj/user/yield.asm	/^            base = 10;$/;"	d
base	obj/user/yield.asm	/^            base = 16;$/;"	d
base	obj/user/yield.asm	/^            base = 8;$/;"	d
base	obj/user/yield.asm	/^        base = 10;$/;"	d
ch	obj/user/yield.asm	/^                ch = *fmt;$/;"	d
char	obj/user/yield.asm	/^char *$/;"	l
cnt	obj/user/yield.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/yield.asm	/^        default:$/;"	l
dig	obj/user/yield.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/yield.asm	/^                err = -err;$/;"	d
err	obj/user/yield.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/yield.asm	/^failed:$/;"	l
int	obj/user/yield.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
lflag	obj/user/yield.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/yield.asm	/^long$/;"	l
next	obj/user/yield.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/yield.asm	/^    next = seed;$/;"	d
num	obj/user/yield.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/yield.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/yield.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/yield.asm	/^        number:$/;"	l
p	obj/user/yield.asm	/^                p = "(null)";$/;"	d
padc	obj/user/yield.asm	/^            padc = '-';$/;"	d
padc	obj/user/yield.asm	/^            padc = '0';$/;"	d
precision	obj/user/yield.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/yield.asm	/^        process_precision:$/;"	l
reswitch	obj/user/yield.asm	/^    reswitch:$/;"	l
ret	obj/user/yield.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/yield.asm	/^size_t$/;"	l
static	obj/user/yield.asm	/^static char$/;"	l
static	obj/user/yield.asm	/^static inline bool$/;"	l
static	obj/user/yield.asm	/^static inline char *$/;"	l
static	obj/user/yield.asm	/^static inline int$/;"	l
static	obj/user/yield.asm	/^static inline void *$/;"	l
static	obj/user/yield.asm	/^static inline void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
step	obj/user/yield.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/yield.asm	/^uint32_t$/;"	l
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
width	obj/user/yield.asm	/^                width = 0;$/;"	d
width	obj/user/yield.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^        width = precision = -1;$/;"	d
OBJPREFIX	tools/function.mk	/^OBJPREFIX	:= __objs_$/;"	m
add_dependency	tools/function.mk	/^add_dependency = $(eval $(1): $(2))$/;"	m
add_files	tools/function.mk	/^add_files = $(eval $(call do_add_files_to_packet,$(1),$(2),$(3),$(4),$(5)))$/;"	m
add_objs	tools/function.mk	/^add_objs = $(eval $(call do_add_objs_to_packet,$(1),$(2)))$/;"	m
cc_compile	tools/function.mk	/^cc_compile = $(eval $(call do_cc_compile,$(1),$(2),$(3),$(4)))$/;"	m
cc_template	tools/function.mk	/^define cc_template$/;"	m
create_target	tools/function.mk	/^create_target = $(eval $(call do_create_target,$(1),$(2),$(3),$(4),$(5)))$/;"	m
do_add_files_to_packet	tools/function.mk	/^define do_add_files_to_packet$/;"	m
do_add_objs_to_packet	tools/function.mk	/^define do_add_objs_to_packet$/;"	m
do_cc_compile	tools/function.mk	/^define do_cc_compile$/;"	m
do_create_target	tools/function.mk	/^define do_create_target$/;"	m
do_finish_all	tools/function.mk	/^define do_finish_all$/;"	m
finish_all	tools/function.mk	/^finish_all = $(eval $(call do_finish_all))$/;"	m
listf	tools/function.mk	/^listf = $(filter $(if $(2),$(addprefix %.,$(2)),%),\\$/;"	m
packetname	tools/function.mk	/^packetname = $(if $(1),$(addprefix $(OBJPREFIX),$(1)),$(OBJPREFIX))$/;"	m
read_packet	tools/function.mk	/^read_packet = $(foreach p,$(call packetname,$(1)),$($(p)))$/;"	m
todep	tools/function.mk	/^todep = $(patsubst %.o,%.d,$(call toobj,$(1),$(2)))$/;"	m
toobj	tools/function.mk	/^toobj = $(addprefix $(OBJDIR)$(SLASH)$(if $(2),$(2)$(SLASH)),\\$/;"	m
totarget	tools/function.mk	/^totarget = $(addprefix $(BINDIR)$(SLASH),$(1))$/;"	m
build_run	tools/grade.sh	/^build_run() {$/;"	f
check_regexps	tools/grade.sh	/^check_regexps() {$/;"	f
check_result	tools/grade.sh	/^check_result() {$/;"	f
default_check	tools/grade.sh	/^default_check() {$/;"	f
fail	tools/grade.sh	/^fail() {$/;"	f
get_time	tools/grade.sh	/^get_time() {$/;"	f
make_print	tools/grade.sh	/^make_print() {$/;"	f
pass	tools/grade.sh	/^pass() {$/;"	f
quick_check	tools/grade.sh	/^quick_check() {$/;"	f
quick_run	tools/grade.sh	/^quick_run() {$/;"	f
run_qemu	tools/grade.sh	/^run_qemu() {$/;"	f
run_test	tools/grade.sh	/^run_test() {$/;"	f
show_build_tag	tools/grade.sh	/^show_build_tag() {$/;"	f
show_check_tag	tools/grade.sh	/^show_check_tag() {$/;"	f
show_final	tools/grade.sh	/^show_final() {$/;"	f
show_msg	tools/grade.sh	/^show_msg() {$/;"	f
show_part	tools/grade.sh	/^show_part() {$/;"	f
show_time	tools/grade.sh	/^show_time() {$/;"	f
update_score	tools/grade.sh	/^update_score() {$/;"	f
GOLDEN_RATIO_PRIME_32	tools/mksfs.c	37;"	d	file:
HASH_LIST_SIZE	tools/mksfs.c	40;"	d	file:
HASH_SHIFT	tools/mksfs.c	39;"	d	file:
SFS_BLKBITS	tools/mksfs.c	118;"	d	file:
SFS_BLKN_FREEMAP	tools/mksfs.c	125;"	d	file:
SFS_BLKN_ROOT	tools/mksfs.c	124;"	d	file:
SFS_BLKN_SUPER	tools/mksfs.c	123;"	d	file:
SFS_BLKSIZE	tools/mksfs.c	112;"	d	file:
SFS_BLK_NENTRY	tools/mksfs.c	376;"	d	file:
SFS_L0_NBLKS	tools/mksfs.c	377;"	d	file:
SFS_L1_NBLKS	tools/mksfs.c	378;"	d	file:
SFS_L2_NBLKS	tools/mksfs.c	379;"	d	file:
SFS_LN_NBLKS	tools/mksfs.c	380;"	d	file:
SFS_MAGIC	tools/mksfs.c	110;"	d	file:
SFS_MAX_FILE_SIZE	tools/mksfs.c	116;"	d	file:
SFS_MAX_FNAME_LEN	tools/mksfs.c	115;"	d	file:
SFS_MAX_INFO_LEN	tools/mksfs.c	114;"	d	file:
SFS_MAX_NBLKS	tools/mksfs.c	113;"	d	file:
SFS_NDIRECT	tools/mksfs.c	111;"	d	file:
SFS_TYPE_DIR	tools/mksfs.c	120;"	d	file:
SFS_TYPE_FILE	tools/mksfs.c	119;"	d	file:
SFS_TYPE_LINK	tools/mksfs.c	121;"	d	file:
_GNU_SOURCE	tools/mksfs.c	1;"	d	file:
__error	tools/mksfs.c	17;"	d	file:
__hash32	tools/mksfs.c	/^__hash32(uint32_t val, unsigned int bits) {$/;"	f	file:
__sp_nil	tools/mksfs.c	/^    } __sp_nil, *sp_root, *sp_end;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::subpath	file:
add_dir	tools/mksfs.c	/^add_dir(struct sfs_fs *sfs, struct cache_inode *parent, const char *dirname, int curfd, int fd, ino_t real) {$/;"	f	file:
add_entry	tools/mksfs.c	/^add_entry(struct sfs_fs *sfs, struct cache_inode *current, struct cache_inode *file, const char *name) {$/;"	f	file:
add_file	tools/mksfs.c	/^add_file(struct sfs_fs *sfs, struct cache_inode *current, const char *filename, int fd, ino_t real) {$/;"	f	file:
add_link	tools/mksfs.c	/^add_link(struct sfs_fs *sfs, struct cache_inode *current, const char *filename, ino_t real) {$/;"	f	file:
alloc_cache_block	tools/mksfs.c	/^alloc_cache_block(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
alloc_cache_inode	tools/mksfs.c	/^alloc_cache_inode(struct sfs_fs *sfs, ino_t real, uint32_t ino, uint16_t type) {$/;"	f	file:
append_block	tools/mksfs.c	/^append_block(struct sfs_fs *sfs, struct cache_inode *file, size_t size, uint32_t ino, const char *filename) {$/;"	f	file:
blocks	tools/mksfs.c	/^        uint32_t blocks;$/;"	m	struct:cache_inode::inode	file:
blocks	tools/mksfs.c	/^        uint32_t blocks;$/;"	m	struct:sfs_fs::__anon15	file:
blocks	tools/mksfs.c	/^    struct cache_block *blocks[HASH_LIST_SIZE];$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::cache_block	file:
bool	tools/mksfs.c	/^typedef int bool;$/;"	t	file:
bug	tools/mksfs.c	31;"	d	file:
cache	tools/mksfs.c	/^    void *cache;$/;"	m	struct:cache_block	file:
cache_block	tools/mksfs.c	/^struct cache_block {$/;"	s	file:
cache_inode	tools/mksfs.c	/^struct cache_inode {$/;"	s	file:
close_sfs	tools/mksfs.c	/^close_sfs(struct sfs_fs *sfs) {$/;"	f
create_img	tools/mksfs.c	/^create_img(struct sfs_fs *sfs, const char *home) {$/;"	f
create_sfs	tools/mksfs.c	/^create_sfs(int imgfd) {$/;"	f
db_indirect	tools/mksfs.c	/^        uint32_t db_indirect;$/;"	m	struct:cache_inode::inode	file:
direct	tools/mksfs.c	/^        uint32_t direct[SFS_NDIRECT];$/;"	m	struct:cache_inode::inode	file:
flush_cache_block	tools/mksfs.c	/^flush_cache_block(struct sfs_fs *sfs, struct cache_block *cb) {$/;"	f	file:
flush_cache_inode	tools/mksfs.c	/^flush_cache_inode(struct sfs_fs *sfs, struct cache_inode *ci) {$/;"	f	file:
hash32	tools/mksfs.c	/^hash32(uint32_t val) {$/;"	f	file:
hash64	tools/mksfs.c	/^hash64(uint64_t val) {$/;"	f	file:
hash_next	tools/mksfs.c	/^    struct cache_block *hash_next;$/;"	m	struct:cache_block	typeref:struct:cache_block::cache_block	file:
hash_next	tools/mksfs.c	/^    struct cache_inode *hash_next;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::cache_inode	file:
imgfd	tools/mksfs.c	/^    int imgfd;$/;"	m	struct:sfs_fs	file:
indirect	tools/mksfs.c	/^        uint32_t indirect;$/;"	m	struct:cache_inode::inode	file:
info	tools/mksfs.c	/^        char info[SFS_MAX_INFO_LEN + 1];$/;"	m	struct:sfs_fs::__anon15	file:
ino	tools/mksfs.c	/^    uint32_t ino;$/;"	m	struct:cache_block	file:
ino	tools/mksfs.c	/^    uint32_t ino;$/;"	m	struct:cache_inode	file:
ino	tools/mksfs.c	/^    uint32_t ino;$/;"	m	struct:sfs_entry	file:
inode	tools/mksfs.c	/^    struct inode {$/;"	s	struct:cache_inode	file:
inode	tools/mksfs.c	/^    } inode;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::inode	file:
inodes	tools/mksfs.c	/^    struct cache_inode *inodes[HASH_LIST_SIZE];$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::cache_inode	file:
l1	tools/mksfs.c	/^    struct cache_block *l1, *l2;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::cache_block	file:
l2	tools/mksfs.c	/^    struct cache_block *l1, *l2;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::	file:
magic	tools/mksfs.c	/^        uint32_t magic;$/;"	m	struct:sfs_fs::__anon15	file:
main	tools/mksfs.c	/^main(int argc, char **argv) {$/;"	f
name	tools/mksfs.c	/^    char name[SFS_MAX_FNAME_LEN + 1];$/;"	m	struct:sfs_entry	file:
nblks	tools/mksfs.c	/^    uint32_t nblks;$/;"	m	struct:cache_inode	file:
next	tools/mksfs.c	/^        struct subpath *next, *prev;$/;"	m	struct:sfs_fs::subpath	typeref:struct:sfs_fs::subpath::subpath	file:
next_ino	tools/mksfs.c	/^    uint32_t ninos, next_ino;$/;"	m	struct:sfs_fs	file:
ninos	tools/mksfs.c	/^    uint32_t ninos, next_ino;$/;"	m	struct:sfs_fs	file:
nlinks	tools/mksfs.c	/^        uint16_t nlinks;$/;"	m	struct:cache_inode::inode	file:
open_bug	tools/mksfs.c	364;"	d	file:
open_dir	tools/mksfs.c	/^open_dir(struct sfs_fs *sfs, struct cache_inode *current, struct cache_inode *parent) {$/;"	f
open_file	tools/mksfs.c	/^open_file(struct sfs_fs *sfs, struct cache_inode *file, const char *filename, int fd) {$/;"	f
open_img	tools/mksfs.c	/^open_img(const char *imgname) {$/;"	f
open_link	tools/mksfs.c	/^open_link(struct sfs_fs *sfs, struct cache_inode *file, const char *filename) {$/;"	f
prev	tools/mksfs.c	/^        struct subpath *next, *prev;$/;"	m	struct:sfs_fs::subpath	typeref:struct:sfs_fs::subpath::	file:
real	tools/mksfs.c	/^    ino_t real;$/;"	m	struct:cache_inode	file:
root	tools/mksfs.c	/^    struct cache_inode *root;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::cache_inode	file:
safe_fchdir	tools/mksfs.c	/^safe_fchdir(int fd) {$/;"	f
safe_fstat	tools/mksfs.c	/^safe_fstat(int fd) {$/;"	f
safe_lstat	tools/mksfs.c	/^safe_lstat(const char *name) {$/;"	f
safe_malloc	tools/mksfs.c	/^safe_malloc(size_t size) {$/;"	f
safe_stat	tools/mksfs.c	/^safe_stat(const char *filename) {$/;"	f
safe_strdup	tools/mksfs.c	/^safe_strdup(const char *str) {$/;"	f
search_cache_block	tools/mksfs.c	/^search_cache_block(struct sfs_fs *sfs, uint32_t ino) {$/;"	f
search_cache_inode	tools/mksfs.c	/^search_cache_inode(struct sfs_fs *sfs, ino_t real) {$/;"	f
sfs_alloc_ino	tools/mksfs.c	/^sfs_alloc_ino(struct sfs_fs *sfs) {$/;"	f	file:
sfs_entry	tools/mksfs.c	/^struct sfs_entry {$/;"	s	file:
sfs_fs	tools/mksfs.c	/^struct sfs_fs {$/;"	s	file:
show_fullpath	tools/mksfs.c	370;"	d	file:
size	tools/mksfs.c	/^        uint32_t size;$/;"	m	struct:cache_inode::inode	file:
sp_end	tools/mksfs.c	/^    } __sp_nil, *sp_root, *sp_end;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::subpath	file:
sp_root	tools/mksfs.c	/^    } __sp_nil, *sp_root, *sp_end;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::subpath	file:
static_assert	tools/mksfs.c	33;"	d	file:
static_check	tools/mksfs.c	/^static_check(void) {$/;"	f	file:
subname	tools/mksfs.c	/^        char *subname;$/;"	m	struct:sfs_fs::subpath	file:
subpath	tools/mksfs.c	/^    struct subpath {$/;"	s	struct:sfs_fs	file:
subpath_pop	tools/mksfs.c	/^subpath_pop(struct sfs_fs *sfs) {$/;"	f	file:
subpath_push	tools/mksfs.c	/^subpath_push(struct sfs_fs *sfs, const char *subname) {$/;"	f	file:
subpath_show	tools/mksfs.c	/^subpath_show(FILE *fout, struct sfs_fs *sfs, const char *name) {$/;"	f	file:
super	tools/mksfs.c	/^    } super;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::__anon15	file:
type	tools/mksfs.c	/^        uint16_t type;$/;"	m	struct:cache_inode::inode	file:
unused_blocks	tools/mksfs.c	/^        uint32_t unused_blocks;$/;"	m	struct:sfs_fs::__anon15	file:
update_cache	tools/mksfs.c	/^update_cache(struct sfs_fs *sfs, struct cache_block **cbp, uint32_t *inop) {$/;"	f	file:
warn	tools/mksfs.c	30;"	d	file:
write_block	tools/mksfs.c	/^write_block(struct sfs_fs *sfs, void *data, size_t len, uint32_t ino) {$/;"	f	file:
main	tools/sign.c	/^main(int argc, char *argv[]) {$/;"	f
main	tools/vector.c	/^main(void) {$/;"	f
main	user/badarg.c	/^main(void) {$/;"	f
main	user/badsegment.c	/^main(void) {$/;"	f
main	user/divzero.c	/^main(void) {$/;"	f
zero	user/divzero.c	/^int zero;$/;"	v
magic	user/exit.c	/^int magic = -0x10384;$/;"	v
main	user/exit.c	/^main(void) {$/;"	f
main	user/faultread.c	/^main(void) {$/;"	f
main	user/faultreadkernel.c	/^main(void) {$/;"	f
main	user/forktest.c	/^main(void) {$/;"	f
max_child	user/forktest.c	/^const int max_child = 32;$/;"	v
DEPTH	user/forktree.c	5;"	d	file:
SLEEP_TIME	user/forktree.c	6;"	d	file:
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch) {$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur) {$/;"	f
main	user/forktree.c	/^main(void) {$/;"	f
main	user/hello.c	/^main(void) {$/;"	f
closedir	user/libs/dir.c	/^closedir(DIR *dirp) {$/;"	f
dir	user/libs/dir.c	/^DIR dir, *dirp=&dir;$/;"	v
dirp	user/libs/dir.c	/^DIR dir, *dirp=&dir;$/;"	v
getcwd	user/libs/dir.c	/^getcwd(char *buffer, size_t len) {$/;"	f
opendir	user/libs/dir.c	/^opendir(const char *path) {$/;"	f
readdir	user/libs/dir.c	/^readdir(DIR *dirp) {$/;"	f
DIR	user/libs/dir.h	/^} DIR;$/;"	t	typeref:struct:__anon16
__USER_LIBS_DIR_H__	user/libs/dir.h	2;"	d
dirent	user/libs/dir.h	/^    struct dirent dirent;$/;"	m	struct:__anon16	typeref:struct:__anon16::dirent
fd	user/libs/dir.h	/^    int fd;$/;"	m	struct:__anon16
close	user/libs/file.c	/^close(int fd) {$/;"	f
dup2	user/libs/file.c	/^dup2(int fd1, int fd2) {$/;"	f
fstat	user/libs/file.c	/^fstat(int fd, struct stat *stat) {$/;"	f
fsync	user/libs/file.c	/^fsync(int fd) {$/;"	f
open	user/libs/file.c	/^open(const char *path, uint32_t open_flags) {$/;"	f
print_stat	user/libs/file.c	/^print_stat(const char *name, int fd, struct stat *stat) {$/;"	f
read	user/libs/file.c	/^read(int fd, void *base, size_t len) {$/;"	f
seek	user/libs/file.c	/^seek(int fd, off_t pos, int whence) {$/;"	f
transmode	user/libs/file.c	/^transmode(struct stat *stat) {$/;"	f	file:
write	user/libs/file.c	/^write(int fd, void *base, size_t len) {$/;"	f
__USER_LIBS_FILE_H__	user/libs/file.h	2;"	d
_start	user/libs/initcode.S	/^_start:$/;"	l
INIT_LOCK	user/libs/lock.h	8;"	d
__USER_LIBS_LOCK_H__	user/libs/lock.h	2;"	d
lock	user/libs/lock.h	/^lock(lock_t *l) {$/;"	f
lock_init	user/libs/lock.h	/^lock_init(lock_t *l) {$/;"	f
lock_t	user/libs/lock.h	/^typedef volatile bool lock_t;$/;"	t
try_lock	user/libs/lock.h	/^try_lock(lock_t *l) {$/;"	f
unlock	user/libs/lock.h	/^unlock(lock_t *l) {$/;"	f
__panic	user/libs/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__warn	user/libs/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
cprintf	user/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cputch	user/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputs	user/libs/stdio.c	/^cputs(const char *str) {$/;"	f
fprintf	user/libs/stdio.c	/^fprintf(int fd, const char *fmt, ...) {$/;"	f
fputch	user/libs/stdio.c	/^fputch(char c, int *cnt, int fd) {$/;"	f	file:
vcprintf	user/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
vfprintf	user/libs/stdio.c	/^vfprintf(int fd, const char *fmt, va_list ap) {$/;"	f
MAX_ARGS	user/libs/syscall.c	9;"	d	file:
sys_close	user/libs/syscall.c	/^sys_close(int fd) {$/;"	f
sys_dup	user/libs/syscall.c	/^sys_dup(int fd1, int fd2) {$/;"	f
sys_exec	user/libs/syscall.c	/^sys_exec(const char *name, int argc, const char **argv) {$/;"	f
sys_exit	user/libs/syscall.c	/^sys_exit(int error_code) {$/;"	f
sys_fork	user/libs/syscall.c	/^sys_fork(void) {$/;"	f
sys_fstat	user/libs/syscall.c	/^sys_fstat(int fd, struct stat *stat) {$/;"	f
sys_fsync	user/libs/syscall.c	/^sys_fsync(int fd) {$/;"	f
sys_getcwd	user/libs/syscall.c	/^sys_getcwd(char *buffer, size_t len) {$/;"	f
sys_getdirentry	user/libs/syscall.c	/^sys_getdirentry(int fd, struct dirent *dirent) {$/;"	f
sys_getpid	user/libs/syscall.c	/^sys_getpid(void) {$/;"	f
sys_gettime	user/libs/syscall.c	/^sys_gettime(void) {$/;"	f
sys_kill	user/libs/syscall.c	/^sys_kill(int pid) {$/;"	f
sys_lab6_set_priority	user/libs/syscall.c	/^sys_lab6_set_priority(uint32_t priority)$/;"	f
sys_open	user/libs/syscall.c	/^sys_open(const char *path, uint32_t open_flags) {$/;"	f
sys_pgdir	user/libs/syscall.c	/^sys_pgdir(void) {$/;"	f
sys_putc	user/libs/syscall.c	/^sys_putc(int c) {$/;"	f
sys_read	user/libs/syscall.c	/^sys_read(int fd, void *base, size_t len) {$/;"	f
sys_seek	user/libs/syscall.c	/^sys_seek(int fd, off_t pos, int whence) {$/;"	f
sys_sleep	user/libs/syscall.c	/^sys_sleep(unsigned int time) {$/;"	f
sys_wait	user/libs/syscall.c	/^sys_wait(int pid, int *store) {$/;"	f
sys_write	user/libs/syscall.c	/^sys_write(int fd, void *base, size_t len) {$/;"	f
sys_yield	user/libs/syscall.c	/^sys_yield(void) {$/;"	f
syscall	user/libs/syscall.c	/^syscall(int num, ...) {$/;"	f	file:
__USER_LIBS_SYSCALL_H__	user/libs/syscall.h	2;"	d
__exec	user/libs/ulib.c	/^__exec(const char *name, const char **argv) {$/;"	f
exit	user/libs/ulib.c	/^exit(int error_code) {$/;"	f
fork	user/libs/ulib.c	/^fork(void) {$/;"	f
fork_lock	user/libs/ulib.c	/^static lock_t fork_lock = INIT_LOCK;$/;"	v	file:
getpid	user/libs/ulib.c	/^getpid(void) {$/;"	f
gettime_msec	user/libs/ulib.c	/^gettime_msec(void) {$/;"	f
kill	user/libs/ulib.c	/^kill(int pid) {$/;"	f
lab6_set_priority	user/libs/ulib.c	/^lab6_set_priority(uint32_t priority)$/;"	f
lock_fork	user/libs/ulib.c	/^lock_fork(void) {$/;"	f
print_pgdir	user/libs/ulib.c	/^print_pgdir(void) {$/;"	f
sleep	user/libs/ulib.c	/^sleep(unsigned int time) {$/;"	f
unlock_fork	user/libs/ulib.c	/^unlock_fork(void) {$/;"	f
wait	user/libs/ulib.c	/^wait(void) {$/;"	f
waitpid	user/libs/ulib.c	/^waitpid(int pid, int *store) {$/;"	f
yield	user/libs/ulib.c	/^yield(void) {$/;"	f
__USER_LIBS_ULIB_H__	user/libs/ulib.h	2;"	d
__exec0	user/libs/ulib.h	40;"	d
assert	user/libs/ulib.h	15;"	d
exec	user/libs/ulib.h	43;"	d
nexec	user/libs/ulib.h	44;"	d
panic	user/libs/ulib.h	12;"	d
static_assert	user/libs/ulib.h	23;"	d
warn	user/libs/ulib.h	9;"	d
initfd	user/libs/umain.c	/^initfd(int fd2, const char *path, uint32_t open_flags) {$/;"	f	file:
umain	user/libs/umain.c	/^umain(int argc, char *argv[]) {$/;"	f
BUFSIZE	user/ls.c	11;"	d	file:
getmode	user/ls.c	/^getmode(uint32_t st_mode) {$/;"	f	file:
getstat	user/ls.c	/^getstat(const char *name, struct stat *stat) {$/;"	f	file:
ls	user/ls.c	/^ls(const char *path) {$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path) {$/;"	f
lsstat	user/ls.c	/^lsstat(struct stat *stat, const char *filename) {$/;"	f
main	user/ls.c	/^main(int argc, char **argv) {$/;"	f
printf	user/ls.c	10;"	d	file:
MATSIZE	user/matrix.c	6;"	d	file:
main	user/matrix.c	/^main(void) {$/;"	f
mata	user/matrix.c	/^static int mata[MATSIZE][MATSIZE];$/;"	v	file:
matb	user/matrix.c	/^static int matb[MATSIZE][MATSIZE];$/;"	v	file:
matc	user/matrix.c	/^static int matc[MATSIZE][MATSIZE];$/;"	v	file:
total	user/matrix.c	/^const int total = 21;$/;"	v
work	user/matrix.c	/^work(unsigned int times) {$/;"	f
main	user/pgdir.c	/^main(void) {$/;"	f
MAX_TIME	user/priority.c	8;"	d	file:
SLEEP_TIME	user/priority.c	9;"	d	file:
TOTAL	user/priority.c	6;"	d	file:
acc	user/priority.c	/^unsigned int acc[TOTAL];$/;"	v
main	user/priority.c	/^main(void) {$/;"	f
pids	user/priority.c	/^int pids[TOTAL];$/;"	v
spin_delay	user/priority.c	/^spin_delay(void)$/;"	f	file:
status	user/priority.c	/^int status[TOTAL];$/;"	v
BUFSIZE	user/sh.c	12;"	d	file:
SYMBOLS	user/sh.c	14;"	d	file:
WHITESPACE	user/sh.c	13;"	d	file:
gettoken	user/sh.c	/^gettoken(char **p1, char **p2) {$/;"	f
main	user/sh.c	/^main(int argc, char **argv) {$/;"	f
printf	user/sh.c	9;"	d	file:
putc	user/sh.c	10;"	d	file:
readline	user/sh.c	/^readline(const char *prompt) {$/;"	f
reopen	user/sh.c	/^reopen(int fd2, const char *filename, uint32_t open_flags) {$/;"	f
runcmd	user/sh.c	/^runcmd(char *cmd) {$/;"	f
shcwd	user/sh.c	/^char shcwd[BUFSIZE];$/;"	v
testfile	user/sh.c	/^testfile(const char *name) {$/;"	f
usage	user/sh.c	/^usage(void) {$/;"	f
main	user/sleep.c	/^main(void) {$/;"	f
sleepy	user/sleep.c	/^sleepy(int pid) {$/;"	f
main	user/sleepkill.c	/^main(void) {$/;"	f
main	user/softint.c	/^main(void) {$/;"	f
main	user/spin.c	/^main(void) {$/;"	f
ARRAYSIZE	user/testbss.c	4;"	d	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
main	user/testbss.c	/^main(void) {$/;"	f
do_yield	user/waitkill.c	/^do_yield(void) {$/;"	f
loop	user/waitkill.c	/^loop(void) {$/;"	f
main	user/waitkill.c	/^main(void) {$/;"	f
parent	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid1	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid2	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
work	user/waitkill.c	/^work(void) {$/;"	f
main	user/yield.c	/^main(void) {$/;"	f
