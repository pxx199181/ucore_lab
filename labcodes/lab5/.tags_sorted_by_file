!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
.DEFAULT_GOAL	Makefile	/^.DEFAULT_GOAL := TARGETS$/;"	m
ALLDEPS	Makefile	/^ALLDEPS	:=$/;"	m
ALLOBJS	Makefile	/^ALLOBJS	:=$/;"	m
AWK	Makefile	/^AWK		:= awk$/;"	m
BINDIR	Makefile	/^BINDIR	:= bin$/;"	m
CC	Makefile	/^CC		:= $(GCCPREFIX)gcc$/;"	m
CC	Makefile	/^CC		:= clang$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -g -m32 -mno-sse -nostdinc $(DEFS)$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc $(DEFS)$/;"	m
COPY	Makefile	/^COPY	:= cp$/;"	m
CTYPE	Makefile	/^CTYPE	:= c S$/;"	m
EMPTY	Makefile	/^EMPTY	:=$/;"	m
GCCPREFIX	Makefile	/^GCCPREFIX := $(shell if i386-ucore-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GDB	Makefile	/^GDB		:= $(GCCPREFIX)gdb$/;"	m
GRADE_GDB_IN	Makefile	/^GRADE_GDB_IN	:= .gdb.in$/;"	m
GRADE_QEMU_OUT	Makefile	/^GRADE_QEMU_OUT	:= .qemu.out$/;"	m
HANDIN	Makefile	/^HANDIN			:= proj$(PROJ)-handin.tar.gz$/;"	m
HOSTCC	Makefile	/^HOSTCC		:= clang$/;"	m
HOSTCC	Makefile	/^HOSTCC		:= gcc$/;"	m
HOSTCFLAGS	Makefile	/^HOSTCFLAGS	:= -g -Wall -O2$/;"	m
IGNORE_ALLDEPS	Makefile	/^IGNORE_ALLDEPS	= clean \\$/;"	m
KOBJS	Makefile	/^KOBJS	= $(call read_packet,kernel libs)$/;"	m
LD	Makefile	/^LD      := $(GCCPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS	:= -m $(shell $(LD) -V | grep elf_i386 2>\/dev\/null)$/;"	m
MAKEOPTS	Makefile	/^MAKEOPTS		:= --quiet --no-print-directory$/;"	m
MAKEOPTS	Makefile	/^MAKEOPTS	:= --quiet --no-print-directory$/;"	m
MKDIR	Makefile	/^MKDIR   := mkdir -p$/;"	m
MV	Makefile	/^MV		:= mv$/;"	m
OBJCOPY	Makefile	/^OBJCOPY := $(GCCPREFIX)objcopy$/;"	m
OBJDIR	Makefile	/^OBJDIR	:= obj$/;"	m
OBJDUMP	Makefile	/^OBJDUMP := $(GCCPREFIX)objdump$/;"	m
PROJ	Makefile	/^PROJ	:= 5$/;"	m
QEMU	Makefile	/^QEMU := $(shell if which qemu-system-i386 > \/dev\/null; \\$/;"	m
QEMUOPTS	Makefile	/^QEMUOPTS = -hda $(UCOREIMG) -drive file=$(SWAPIMG),media=disk,cache=writeback$/;"	m
RM	Makefile	/^RM		:= rm -f$/;"	m
RUN_PREFIX	Makefile	/^RUN_PREFIX	:= _binary_$(OBJDIR)_$(USER_PREFIX)$/;"	m
SED	Makefile	/^SED		:= sed$/;"	m
SH	Makefile	/^SH		:= sh$/;"	m
SLASH	Makefile	/^SLASH	:= \/$/;"	m
SPACE	Makefile	/^SPACE	:= $(EMPTY) $(EMPTY)$/;"	m
SWAPIMG	Makefile	/^SWAPIMG		:= $(call totarget,swap.img)$/;"	m
TARGETS	Makefile	/^TARGETS	:=$/;"	m
TERMINAL	Makefile	/^TERMINAL := gnome-terminal$/;"	m
TOUCH	Makefile	/^TOUCH	:= touch -c$/;"	m
TOUCH_FILES	Makefile	/^TOUCH_FILES		:= kern\/process\/proc.c$/;"	m
TR	Makefile	/^TR		:= tr$/;"	m
UCOREIMG	Makefile	/^UCOREIMG	:= $(call totarget,ucore.img)$/;"	m
UOBJS	Makefile	/^UOBJS	:= $(call read_packet,ulibs libs)$/;"	m
USER_BINS	Makefile	/^USER_BINS	:=$/;"	m
USER_PREFIX	Makefile	/^USER_PREFIX	:= __user_$/;"	m
V	Makefile	/^V       := @$/;"	m
add_files_cc	Makefile	/^add_files_cc = $(call add_files,$(1),$(CC),$(CFLAGS) $(3),$(2),$(4))$/;"	m
add_files_host	Makefile	/^add_files_host = $(call add_files,$(1),$(HOSTCC),$(HOSTCFLAGS),$(2),$(3))$/;"	m
asmfile	Makefile	/^asmfile = $(call cgtype,$(call toobj,$(1)),o,asm)$/;"	m
bootblock	Makefile	/^bootblock = $(call totarget,bootblock)$/;"	m
bootfiles	Makefile	/^bootfiles = $(call listf_cc,boot)$/;"	m
cgtype	Makefile	/^cgtype = $(patsubst %.$(2),%.$(3),$(1))$/;"	m
create_target_cc	Makefile	/^create_target_cc = $(call create_target,$(1),$(2),$(3),$(CC),$(CFLAGS))$/;"	m
create_target_host	Makefile	/^create_target_host = $(call create_target,$(1),$(2),$(3),$(HOSTCC),$(HOSTCFLAGS))$/;"	m
filename	Makefile	/^filename = $(basename $(notdir $(1)))$/;"	m
kernel	Makefile	/^kernel = $(call totarget,kernel)$/;"	m
listf_cc	Makefile	/^listf_cc = $(call listf,$(1),$(CTYPE))$/;"	m
match	Makefile	/^match = $(shell echo $(2) | $(AWK) '{for(i=1;i<=NF;i++){if(match("$(1)","^"$$(i)"$$")){exit 1;}}}'; echo $$?)$/;"	m
objfile	Makefile	/^objfile = $(call toobj,$(1))$/;"	m
outfile	Makefile	/^outfile = $(call cgtype,$(call toobj,$(1)),o,out)$/;"	m
symfile	Makefile	/^symfile = $(call cgtype,$(call toobj,$(1)),o,sym)$/;"	m
ubinfile	Makefile	/^ubinfile = $(call outfile,$(addprefix $(USER_PREFIX),$(call filename,$(1))))$/;"	m
uprog_ld	Makefile	/^define uprog_ld$/;"	m
SEG_ASM	boot/asm.h	11;"	d
SEG_NULLASM	boot/asm.h	7;"	d
STA_A	boot/asm.h	23;"	d
STA_C	boot/asm.h	20;"	d
STA_E	boot/asm.h	19;"	d
STA_R	boot/asm.h	22;"	d
STA_W	boot/asm.h	21;"	d
STA_X	boot/asm.h	18;"	d
__BOOT_ASM_H__	boot/asm.h	2;"	d
cont	boot/bootasm.S	/^cont:$/;"	l
finish_probe	boot/bootasm.S	/^finish_probe:$/;"	l
gdt	boot/bootasm.S	/^gdt:$/;"	l
gdtdesc	boot/bootasm.S	/^gdtdesc:$/;"	l
probe_memory	boot/bootasm.S	/^probe_memory:$/;"	l
protcseg	boot/bootasm.S	/^protcseg:$/;"	l
spin	boot/bootasm.S	/^spin:$/;"	l
start	boot/bootasm.S	/^start:$/;"	l
start_probe	boot/bootasm.S	/^start_probe:$/;"	l
ELFHDR	boot/bootmain.c	34;"	d	file:
SECTSIZE	boot/bootmain.c	33;"	d	file:
bootmain	boot/bootmain.c	/^bootmain(void) {$/;"	f
readsect	boot/bootmain.c	/^readsect(void *dst, uint32_t secno) {$/;"	f	file:
readseg	boot/bootmain.c	/^readseg(uintptr_t va, uint32_t count, uint32_t offset) {$/;"	f	file:
waitdisk	boot/bootmain.c	/^waitdisk(void) {$/;"	f	file:
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
__KERN_DEBUG_ASSERT_H__	kern/debug/assert.h	2;"	d
assert	kern/debug/assert.h	15;"	d
panic	kern/debug/assert.h	12;"	d
static_assert	kern/debug/assert.h	23;"	d
warn	kern/debug/assert.h	9;"	d
STACKFRAME_DEPTH	kern/debug/kdebug.c	14;"	d	file:
debuginfo_eip	kern/debug/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct eipdebuginfo *info) {$/;"	f
eip_file	kern/debug/kdebug.c	/^    const char *eip_file;                   \/\/ source code filename for eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_addr	kern/debug/kdebug.c	/^    uintptr_t eip_fn_addr;                  \/\/ start address of function$/;"	m	struct:eipdebuginfo	file:
eip_fn_name	kern/debug/kdebug.c	/^    const char *eip_fn_name;                \/\/ name of function containing eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_namelen	kern/debug/kdebug.c	/^    int eip_fn_namelen;                     \/\/ length of function's name$/;"	m	struct:eipdebuginfo	file:
eip_fn_narg	kern/debug/kdebug.c	/^    int eip_fn_narg;                        \/\/ number of function arguments$/;"	m	struct:eipdebuginfo	file:
eip_line	kern/debug/kdebug.c	/^    int eip_line;                           \/\/ source code line number for eip$/;"	m	struct:eipdebuginfo	file:
eipdebuginfo	kern/debug/kdebug.c	/^struct eipdebuginfo {$/;"	s	file:
print_debuginfo	kern/debug/kdebug.c	/^print_debuginfo(uintptr_t eip) {$/;"	f
print_kerninfo	kern/debug/kdebug.c	/^print_kerninfo(void) {$/;"	f
print_stackframe	kern/debug/kdebug.c	/^print_stackframe(void) {$/;"	f
read_eip	kern/debug/kdebug.c	/^read_eip(void) {$/;"	f	file:
stab_binsearch	kern/debug/kdebug.c	/^stab_binsearch(const struct stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/debug/kdebug.c	/^    const struct stab *stab_end;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stabs	kern/debug/kdebug.c	/^    const struct stab *stabs;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stabstr	kern/debug/kdebug.c	/^    const char *stabstr;$/;"	m	struct:userstabdata	file:
stabstr_end	kern/debug/kdebug.c	/^    const char *stabstr_end;$/;"	m	struct:userstabdata	file:
userstabdata	kern/debug/kdebug.c	/^struct userstabdata {$/;"	s	file:
__KERN_DEBUG_KDEBUG_H__	kern/debug/kdebug.h	2;"	d
MAXARGS	kern/debug/kmonitor.c	33;"	d	file:
NCOMMANDS	kern/debug/kmonitor.c	29;"	d	file:
WHITESPACE	kern/debug/kmonitor.c	34;"	d	file:
command	kern/debug/kmonitor.c	/^struct command {$/;"	s	file:
commands	kern/debug/kmonitor.c	/^static struct command commands[] = {$/;"	v	typeref:struct:command	file:
desc	kern/debug/kmonitor.c	/^    const char *desc;$/;"	m	struct:command	file:
func	kern/debug/kmonitor.c	/^    int(*func)(int argc, char **argv, struct trapframe *tf);$/;"	m	struct:command	file:
kmonitor	kern/debug/kmonitor.c	/^kmonitor(struct trapframe *tf) {$/;"	f
mon_backtrace	kern/debug/kmonitor.c	/^mon_backtrace(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_help	kern/debug/kmonitor.c	/^mon_help(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_kerninfo	kern/debug/kmonitor.c	/^mon_kerninfo(int argc, char **argv, struct trapframe *tf) {$/;"	f
name	kern/debug/kmonitor.c	/^    const char *name;$/;"	m	struct:command	file:
parse	kern/debug/kmonitor.c	/^parse(char *buf, char **argv) {$/;"	f	file:
runcmd	kern/debug/kmonitor.c	/^runcmd(char *buf, struct trapframe *tf) {$/;"	f	file:
__KERN_DEBUG_MONITOR_H__	kern/debug/kmonitor.h	2;"	d
__panic	kern/debug/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__warn	kern/debug/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
is_kernel_panic	kern/debug/panic.c	/^is_kernel_panic(void) {$/;"	f
is_panic	kern/debug/panic.c	/^static bool is_panic = 0;$/;"	v	file:
N_BCOMM	kern/debug/stab.h	39;"	d
N_BINCL	kern/debug/stab.h	31;"	d
N_BSLINE	kern/debug/stab.h	27;"	d
N_DSLINE	kern/debug/stab.h	26;"	d
N_ECOML	kern/debug/stab.h	41;"	d
N_ECOMM	kern/debug/stab.h	40;"	d
N_EINCL	kern/debug/stab.h	34;"	d
N_ENTRY	kern/debug/stab.h	35;"	d
N_EXCL	kern/debug/stab.h	37;"	d
N_FNAME	kern/debug/stab.h	18;"	d
N_FUN	kern/debug/stab.h	19;"	d
N_GSYM	kern/debug/stab.h	17;"	d
N_LBRAC	kern/debug/stab.h	36;"	d
N_LCSYM	kern/debug/stab.h	21;"	d
N_LENG	kern/debug/stab.h	42;"	d
N_LSYM	kern/debug/stab.h	30;"	d
N_MAIN	kern/debug/stab.h	22;"	d
N_PC	kern/debug/stab.h	23;"	d
N_PSYM	kern/debug/stab.h	33;"	d
N_RBRAC	kern/debug/stab.h	38;"	d
N_RSYM	kern/debug/stab.h	24;"	d
N_SLINE	kern/debug/stab.h	25;"	d
N_SO	kern/debug/stab.h	29;"	d
N_SOL	kern/debug/stab.h	32;"	d
N_SSYM	kern/debug/stab.h	28;"	d
N_STSYM	kern/debug/stab.h	20;"	d
__KERN_DEBUG_STAB_H__	kern/debug/stab.h	2;"	d
n_desc	kern/debug/stab.h	/^    uint16_t n_desc;        \/\/ description field$/;"	m	struct:stab
n_other	kern/debug/stab.h	/^    uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:stab
n_strx	kern/debug/stab.h	/^    uint32_t n_strx;        \/\/ index into string table of name$/;"	m	struct:stab
n_type	kern/debug/stab.h	/^    uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:stab
n_value	kern/debug/stab.h	/^    uintptr_t n_value;      \/\/ value of symbol$/;"	m	struct:stab
stab	kern/debug/stab.h	/^struct stab {$/;"	s
IO_TIMER1	kern/driver/clock.c	11;"	d	file:
TIMER_16BIT	kern/driver/clock.c	24;"	d	file:
TIMER_DIV	kern/driver/clock.c	19;"	d	file:
TIMER_FREQ	kern/driver/clock.c	18;"	d	file:
TIMER_MODE	kern/driver/clock.c	21;"	d	file:
TIMER_RATEGEN	kern/driver/clock.c	23;"	d	file:
TIMER_SEL0	kern/driver/clock.c	22;"	d	file:
clock_init	kern/driver/clock.c	/^clock_init(void) {$/;"	f
ticks	kern/driver/clock.c	/^volatile size_t ticks;$/;"	v
__KERN_DRIVER_CLOCK_H__	kern/driver/clock.h	2;"	d
ALT	kern/driver/console.c	260;"	d	file:
C	kern/driver/console.c	323;"	d	file:
CAPSLOCK	kern/driver/console.c	262;"	d	file:
CGA_BASE	kern/driver/console.c	45;"	d	file:
CGA_BUF	kern/driver/console.c	46;"	d	file:
COM1	kern/driver/console.c	21;"	d	file:
COM_DLL	kern/driver/console.c	25;"	d	file:
COM_DLM	kern/driver/console.c	26;"	d	file:
COM_FCR	kern/driver/console.c	30;"	d	file:
COM_IER	kern/driver/console.c	27;"	d	file:
COM_IER_RDI	kern/driver/console.c	28;"	d	file:
COM_IIR	kern/driver/console.c	29;"	d	file:
COM_LCR	kern/driver/console.c	31;"	d	file:
COM_LCR_DLAB	kern/driver/console.c	32;"	d	file:
COM_LCR_WLEN8	kern/driver/console.c	33;"	d	file:
COM_LSR	kern/driver/console.c	38;"	d	file:
COM_LSR_DATA	kern/driver/console.c	39;"	d	file:
COM_LSR_TSRE	kern/driver/console.c	41;"	d	file:
COM_LSR_TXRDY	kern/driver/console.c	40;"	d	file:
COM_MCR	kern/driver/console.c	34;"	d	file:
COM_MCR_DTR	kern/driver/console.c	36;"	d	file:
COM_MCR_OUT2	kern/driver/console.c	37;"	d	file:
COM_MCR_RTS	kern/driver/console.c	35;"	d	file:
COM_RX	kern/driver/console.c	23;"	d	file:
COM_TX	kern/driver/console.c	24;"	d	file:
CONSBUFSIZE	kern/driver/console.c	208;"	d	file:
CRT_COLS	kern/driver/console.c	48;"	d	file:
CRT_ROWS	kern/driver/console.c	47;"	d	file:
CRT_SIZE	kern/driver/console.c	49;"	d	file:
CTL	kern/driver/console.c	259;"	d	file:
E0ESC	kern/driver/console.c	266;"	d	file:
LPTPORT	kern/driver/console.c	51;"	d	file:
MONO_BASE	kern/driver/console.c	43;"	d	file:
MONO_BUF	kern/driver/console.c	44;"	d	file:
NO	kern/driver/console.c	256;"	d	file:
NUMLOCK	kern/driver/console.c	263;"	d	file:
SCROLLLOCK	kern/driver/console.c	264;"	d	file:
SHIFT	kern/driver/console.c	258;"	d	file:
addr_6845	kern/driver/console.c	/^static uint16_t addr_6845;$/;"	v	file:
buf	kern/driver/console.c	/^    uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon4	file:
cga_init	kern/driver/console.c	/^cga_init(void) {$/;"	f	file:
cga_putc	kern/driver/console.c	/^cga_putc(int c) {$/;"	f	file:
charcode	kern/driver/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
cons	kern/driver/console.c	/^} cons;$/;"	v	typeref:struct:__anon4	file:
cons_getc	kern/driver/console.c	/^cons_getc(void) {$/;"	f
cons_init	kern/driver/console.c	/^cons_init(void) {$/;"	f
cons_intr	kern/driver/console.c	/^cons_intr(int (*proc)(void)) {$/;"	f	file:
cons_putc	kern/driver/console.c	/^cons_putc(int c) {$/;"	f
crt_buf	kern/driver/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_pos	kern/driver/console.c	/^static uint16_t crt_pos;$/;"	v	file:
ctlmap	kern/driver/console.c	/^static uint8_t ctlmap[256] = {$/;"	v	file:
delay	kern/driver/console.c	/^delay(void) {$/;"	f	file:
kbd_init	kern/driver/console.c	/^kbd_init(void) {$/;"	f	file:
kbd_intr	kern/driver/console.c	/^kbd_intr(void) {$/;"	f	file:
kbd_proc_data	kern/driver/console.c	/^kbd_proc_data(void) {$/;"	f	file:
lpt_putc	kern/driver/console.c	/^lpt_putc(int c) {$/;"	f	file:
lpt_putc_sub	kern/driver/console.c	/^lpt_putc_sub(int c) {$/;"	f	file:
normalmap	kern/driver/console.c	/^static uint8_t normalmap[256] = {$/;"	v	file:
rpos	kern/driver/console.c	/^    uint32_t rpos;$/;"	m	struct:__anon4	file:
serial_exists	kern/driver/console.c	/^static bool serial_exists = 0;$/;"	v	file:
serial_init	kern/driver/console.c	/^serial_init(void) {$/;"	f	file:
serial_intr	kern/driver/console.c	/^serial_intr(void) {$/;"	f
serial_proc_data	kern/driver/console.c	/^serial_proc_data(void) {$/;"	f	file:
serial_putc	kern/driver/console.c	/^serial_putc(int c) {$/;"	f	file:
serial_putc_sub	kern/driver/console.c	/^serial_putc_sub(int c) {$/;"	f	file:
shiftcode	kern/driver/console.c	/^static uint8_t shiftcode[256] = {$/;"	v	file:
shiftmap	kern/driver/console.c	/^static uint8_t shiftmap[256] = {$/;"	v	file:
togglecode	kern/driver/console.c	/^static uint8_t togglecode[256] = {$/;"	v	file:
wpos	kern/driver/console.c	/^    uint32_t wpos;$/;"	m	struct:__anon4	file:
__KERN_DRIVER_CONSOLE_H__	kern/driver/console.h	2;"	d
IDE_BSY	kern/driver/ide.c	22;"	d	file:
IDE_CMD_IDENTIFY	kern/driver/ide.c	30;"	d	file:
IDE_CMD_READ	kern/driver/ide.c	28;"	d	file:
IDE_CMD_WRITE	kern/driver/ide.c	29;"	d	file:
IDE_DF	kern/driver/ide.c	24;"	d	file:
IDE_DRDY	kern/driver/ide.c	23;"	d	file:
IDE_DRQ	kern/driver/ide.c	25;"	d	file:
IDE_ERR	kern/driver/ide.c	26;"	d	file:
IDE_IDENT_CAPABILITIES	kern/driver/ide.c	34;"	d	file:
IDE_IDENT_CMDSETS	kern/driver/ide.c	35;"	d	file:
IDE_IDENT_MAX_LBA	kern/driver/ide.c	36;"	d	file:
IDE_IDENT_MAX_LBA_EXT	kern/driver/ide.c	37;"	d	file:
IDE_IDENT_MODEL	kern/driver/ide.c	33;"	d	file:
IDE_IDENT_SECTORS	kern/driver/ide.c	32;"	d	file:
IO_BASE	kern/driver/ide.c	57;"	d	file:
IO_BASE0	kern/driver/ide.c	39;"	d	file:
IO_BASE1	kern/driver/ide.c	40;"	d	file:
IO_CTRL	kern/driver/ide.c	58;"	d	file:
IO_CTRL0	kern/driver/ide.c	41;"	d	file:
IO_CTRL1	kern/driver/ide.c	42;"	d	file:
ISA_COMMAND	kern/driver/ide.c	19;"	d	file:
ISA_CTRL	kern/driver/ide.c	13;"	d	file:
ISA_CYL_HI	kern/driver/ide.c	17;"	d	file:
ISA_CYL_LO	kern/driver/ide.c	16;"	d	file:
ISA_DATA	kern/driver/ide.c	10;"	d	file:
ISA_ERROR	kern/driver/ide.c	11;"	d	file:
ISA_PRECOMP	kern/driver/ide.c	12;"	d	file:
ISA_SDH	kern/driver/ide.c	18;"	d	file:
ISA_SECCNT	kern/driver/ide.c	14;"	d	file:
ISA_SECTOR	kern/driver/ide.c	15;"	d	file:
ISA_STATUS	kern/driver/ide.c	20;"	d	file:
MAX_DISK_NSECS	kern/driver/ide.c	46;"	d	file:
MAX_IDE	kern/driver/ide.c	44;"	d	file:
MAX_NSECS	kern/driver/ide.c	45;"	d	file:
VALID_IDE	kern/driver/ide.c	47;"	d	file:
base	kern/driver/ide.c	/^    unsigned short base;        \/\/ I\/O Base$/;"	m	struct:__anon3	file:
channels	kern/driver/ide.c	/^} channels[2] = {$/;"	v	typeref:struct:__anon3	file:
ctrl	kern/driver/ide.c	/^    unsigned short ctrl;        \/\/ Control Base$/;"	m	struct:__anon3	file:
ide_device	kern/driver/ide.c	/^static struct ide_device {$/;"	s	file:
ide_device_size	kern/driver/ide.c	/^ide_device_size(unsigned short ideno) {$/;"	f
ide_device_valid	kern/driver/ide.c	/^ide_device_valid(unsigned short ideno) {$/;"	f
ide_devices	kern/driver/ide.c	/^} ide_devices[MAX_IDE];$/;"	v	typeref:struct:ide_device	file:
ide_init	kern/driver/ide.c	/^ide_init(void) {$/;"	f
ide_read_secs	kern/driver/ide.c	/^ide_read_secs(unsigned short ideno, uint32_t secno, void *dst, size_t nsecs) {$/;"	f
ide_wait_ready	kern/driver/ide.c	/^ide_wait_ready(unsigned short iobase, bool check_error) {$/;"	f	file:
ide_write_secs	kern/driver/ide.c	/^ide_write_secs(unsigned short ideno, uint32_t secno, const void *src, size_t nsecs) {$/;"	f
model	kern/driver/ide.c	/^    unsigned char model[41];    \/\/ Model in String$/;"	m	struct:ide_device	file:
sets	kern/driver/ide.c	/^    unsigned int sets;          \/\/ Commend Sets Supported$/;"	m	struct:ide_device	file:
size	kern/driver/ide.c	/^    unsigned int size;          \/\/ Size in Sectors$/;"	m	struct:ide_device	file:
valid	kern/driver/ide.c	/^    unsigned char valid;        \/\/ 0 or 1 (If Device Really Exists)$/;"	m	struct:ide_device	file:
__KERN_DRIVER_IDE_H__	kern/driver/ide.h	2;"	d
intr_disable	kern/driver/intr.c	/^intr_disable(void) {$/;"	f
intr_enable	kern/driver/intr.c	/^intr_enable(void) {$/;"	f
__KERN_DRIVER_INTR_H__	kern/driver/intr.h	2;"	d
BS_OCMD	kern/driver/kbdreg.h	23;"	d
CMDBYTE	kern/driver/kbdreg.h	60;"	d
KBCMDP	kern/driver/kbdreg.h	29;"	d
KBC_AUXDISABLE	kern/driver/kbdreg.h	32;"	d
KBC_AUXECHO	kern/driver/kbdreg.h	36;"	d
KBC_AUXENABLE	kern/driver/kbdreg.h	33;"	d
KBC_AUXTEST	kern/driver/kbdreg.h	34;"	d
KBC_AUXWRITE	kern/driver/kbdreg.h	37;"	d
KBC_DISABLE	kern/driver/kbdreg.h	66;"	d
KBC_ECHO	kern/driver/kbdreg.h	71;"	d
KBC_ENABLE	kern/driver/kbdreg.h	67;"	d
KBC_KBDDISABLE	kern/driver/kbdreg.h	40;"	d
KBC_KBDECHO	kern/driver/kbdreg.h	35;"	d
KBC_KBDENABLE	kern/driver/kbdreg.h	41;"	d
KBC_KBDTEST	kern/driver/kbdreg.h	39;"	d
KBC_MODEIND	kern/driver/kbdreg.h	70;"	d
KBC_PULSE0	kern/driver/kbdreg.h	42;"	d
KBC_PULSE1	kern/driver/kbdreg.h	43;"	d
KBC_PULSE2	kern/driver/kbdreg.h	44;"	d
KBC_PULSE3	kern/driver/kbdreg.h	45;"	d
KBC_RAMREAD	kern/driver/kbdreg.h	30;"	d
KBC_RAMWRITE	kern/driver/kbdreg.h	31;"	d
KBC_RESEND	kern/driver/kbdreg.h	64;"	d
KBC_RESET	kern/driver/kbdreg.h	63;"	d
KBC_SELFTEST	kern/driver/kbdreg.h	38;"	d
KBC_SETDEFAULT	kern/driver/kbdreg.h	65;"	d
KBC_SETTABLE	kern/driver/kbdreg.h	69;"	d
KBC_TYPEMATIC	kern/driver/kbdreg.h	68;"	d
KBDATAP	kern/driver/kbdreg.h	47;"	d
KBOUTP	kern/driver/kbdreg.h	48;"	d
KBR_ACK	kern/driver/kbdreg.h	76;"	d
KBR_BREAK	kern/driver/kbdreg.h	79;"	d
KBR_ECHO	kern/driver/kbdreg.h	81;"	d
KBR_EXTENDED	kern/driver/kbdreg.h	74;"	d
KBR_FAILURE	kern/driver/kbdreg.h	78;"	d
KBR_OVERRUN	kern/driver/kbdreg.h	77;"	d
KBR_RESEND	kern/driver/kbdreg.h	75;"	d
KBR_RSTDONE	kern/driver/kbdreg.h	80;"	d
KBSTATP	kern/driver/kbdreg.h	19;"	d
KBS_DIB	kern/driver/kbdreg.h	20;"	d
KBS_IBF	kern/driver/kbdreg.h	21;"	d
KBS_NOSEC	kern/driver/kbdreg.h	24;"	d
KBS_PERR	kern/driver/kbdreg.h	27;"	d
KBS_RERR	kern/driver/kbdreg.h	26;"	d
KBS_TERR	kern/driver/kbdreg.h	25;"	d
KBS_WARM	kern/driver/kbdreg.h	22;"	d
KC8_CPU	kern/driver/kbdreg.h	57;"	d
KC8_IGNSEC	kern/driver/kbdreg.h	56;"	d
KC8_KDISABLE	kern/driver/kbdreg.h	55;"	d
KC8_KENABLE	kern/driver/kbdreg.h	59;"	d
KC8_MDISABLE	kern/driver/kbdreg.h	54;"	d
KC8_MENABLE	kern/driver/kbdreg.h	58;"	d
KC8_TRANS	kern/driver/kbdreg.h	53;"	d
KEY_DEL	kern/driver/kbdreg.h	14;"	d
KEY_DN	kern/driver/kbdreg.h	8;"	d
KEY_END	kern/driver/kbdreg.h	6;"	d
KEY_HOME	kern/driver/kbdreg.h	5;"	d
KEY_INS	kern/driver/kbdreg.h	13;"	d
KEY_LF	kern/driver/kbdreg.h	9;"	d
KEY_PGDN	kern/driver/kbdreg.h	12;"	d
KEY_PGUP	kern/driver/kbdreg.h	11;"	d
KEY_RT	kern/driver/kbdreg.h	10;"	d
KEY_UP	kern/driver/kbdreg.h	7;"	d
K_LDCMDBYTE	kern/driver/kbdreg.h	51;"	d
K_RDCMDBYTE	kern/driver/kbdreg.h	50;"	d
__KERN_DRIVER_KBDREG_H__	kern/driver/kbdreg.h	2;"	d
IO_PIC1	kern/driver/picirq.c	6;"	d	file:
IO_PIC2	kern/driver/picirq.c	7;"	d	file:
IRQ_SLAVE	kern/driver/picirq.c	9;"	d	file:
did_init	kern/driver/picirq.c	/^static bool did_init = 0;$/;"	v	file:
irq_mask	kern/driver/picirq.c	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	v	file:
pic_enable	kern/driver/picirq.c	/^pic_enable(unsigned int irq) {$/;"	f
pic_init	kern/driver/picirq.c	/^pic_init(void) {$/;"	f
pic_setmask	kern/driver/picirq.c	/^pic_setmask(uint16_t mask) {$/;"	f	file:
IRQ_OFFSET	kern/driver/picirq.h	7;"	d
__KERN_DRIVER_PICIRQ_H__	kern/driver/picirq.h	2;"	d
PAGE_NSECT	kern/fs/fs.h	7;"	d
SECTSIZE	kern/fs/fs.h	6;"	d
SWAP_DEV_NO	kern/fs/fs.h	9;"	d
__KERN_FS_FS_H__	kern/fs/fs.h	2;"	d
swapfs_init	kern/fs/swapfs.c	/^swapfs_init(void) {$/;"	f
swapfs_read	kern/fs/swapfs.c	/^swapfs_read(swap_entry_t entry, struct Page *page) {$/;"	f
swapfs_write	kern/fs/swapfs.c	/^swapfs_write(swap_entry_t entry, struct Page *page) {$/;"	f
__KERN_FS_SWAPFS_H__	kern/fs/swapfs.h	2;"	d
REALLOC	kern/init/entry.S	/^#define REALLOC(x) (x - KERNBASE)$/;"	d
__gdt	kern/init/entry.S	/^__gdt:$/;"	l
__gdtdesc	kern/init/entry.S	/^__gdtdesc:$/;"	l
bootstack	kern/init/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/init/entry.S	/^bootstacktop:$/;"	l
kern_entry	kern/init/entry.S	/^kern_entry:$/;"	l
relocated	kern/init/entry.S	/^relocated:$/;"	l
spin	kern/init/entry.S	/^spin:$/;"	l
grade_backtrace	kern/init/init.c	/^grade_backtrace(void) {$/;"	f
grade_backtrace0	kern/init/init.c	/^grade_backtrace0(int arg0, int arg1, int arg2) {$/;"	f
grade_backtrace1	kern/init/init.c	/^grade_backtrace1(int arg0, int arg1) {$/;"	f
grade_backtrace2	kern/init/init.c	/^grade_backtrace2(int arg0, int arg1, int arg2, int arg3) {$/;"	f
kern_init	kern/init/init.c	/^kern_init(void) {$/;"	f
lab1_print_cur_status	kern/init/init.c	/^lab1_print_cur_status(void) {$/;"	f	file:
lab1_switch_test	kern/init/init.c	/^lab1_switch_test(void) {$/;"	f	file:
lab1_switch_to_kernel	kern/init/init.c	/^lab1_switch_to_kernel(void) {$/;"	f	file:
lab1_switch_to_user	kern/init/init.c	/^lab1_switch_to_user(void) {$/;"	f	file:
BUFSIZE	kern/libs/readline.c	3;"	d	file:
buf	kern/libs/readline.c	/^static char buf[BUFSIZE];$/;"	v	file:
readline	kern/libs/readline.c	/^readline(const char *prompt) {$/;"	f
cprintf	kern/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cputch	kern/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputchar	kern/libs/stdio.c	/^cputchar(int c) {$/;"	f
cputs	kern/libs/stdio.c	/^cputs(const char *str) {$/;"	f
getchar	kern/libs/stdio.c	/^getchar(void) {$/;"	f
vcprintf	kern/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
basic_check	kern/mm/default_pmm.c	/^basic_check(void) {$/;"	f	file:
default_alloc_pages	kern/mm/default_pmm.c	/^default_alloc_pages(size_t n) {$/;"	f	file:
default_check	kern/mm/default_pmm.c	/^default_check(void) {$/;"	f	file:
default_free_pages	kern/mm/default_pmm.c	/^default_free_pages(struct Page *base, size_t n) {$/;"	f	file:
default_init	kern/mm/default_pmm.c	/^default_init(void) {$/;"	f	file:
default_init_memmap	kern/mm/default_pmm.c	/^default_init_memmap(struct Page *base, size_t n) {$/;"	f	file:
default_nr_free_pages	kern/mm/default_pmm.c	/^default_nr_free_pages(void) {$/;"	f	file:
default_pmm_manager	kern/mm/default_pmm.c	/^const struct pmm_manager default_pmm_manager = {$/;"	v	typeref:struct:pmm_manager
free_area	kern/mm/default_pmm.c	/^free_area_t free_area;$/;"	v
free_list	kern/mm/default_pmm.c	59;"	d	file:
nr_free	kern/mm/default_pmm.c	60;"	d	file:
print_free_link	kern/mm/default_pmm.c	/^void print_free_link(){$/;"	f
__KERN_MM_DEFAULT_PMM_H__	kern/mm/default_pmm.h	2;"	d
ALIGN	kern/mm/kmalloc.c	55;"	d	file:
L1_CACHE_BYTES	kern/mm/kmalloc.c	51;"	d	file:
PAGE_SIZE	kern/mm/kmalloc.c	47;"	d	file:
SLOB_ALIGN	kern/mm/kmalloc.c	67;"	d	file:
SLOB_UNIT	kern/mm/kmalloc.c	65;"	d	file:
SLOB_UNITS	kern/mm/kmalloc.c	66;"	d	file:
__kmalloc	kern/mm/kmalloc.c	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	f	file:
__slob_free_pages	kern/mm/kmalloc.c	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	f	file:
__slob_get_free_page	kern/mm/kmalloc.c	89;"	d	file:
__slob_get_free_pages	kern/mm/kmalloc.c	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	f	file:
arena	kern/mm/kmalloc.c	/^static slob_t arena = { .next = &arena, .units = 1 };$/;"	v	file:
bigblock	kern/mm/kmalloc.c	/^struct bigblock {$/;"	s	file:
bigblock_t	kern/mm/kmalloc.c	/^typedef struct bigblock bigblock_t;$/;"	t	typeref:struct:bigblock	file:
bigblocks	kern/mm/kmalloc.c	/^static bigblock_t *bigblocks;$/;"	v	file:
find_order	kern/mm/kmalloc.c	/^static int find_order(int size)$/;"	f	file:
gfp_t	kern/mm/kmalloc.c	/^typedef unsigned int gfp_t;$/;"	t	file:
kallocated	kern/mm/kmalloc.c	/^kallocated(void) {$/;"	f
kfree	kern/mm/kmalloc.c	/^void kfree(void *block)$/;"	f
kmalloc	kern/mm/kmalloc.c	/^kmalloc(size_t size)$/;"	f
kmalloc_init	kern/mm/kmalloc.c	/^kmalloc_init(void) {$/;"	f
ksize	kern/mm/kmalloc.c	/^unsigned int ksize(const void *block)$/;"	f
next	kern/mm/kmalloc.c	/^	struct bigblock *next;$/;"	m	struct:bigblock	typeref:struct:bigblock::bigblock	file:
next	kern/mm/kmalloc.c	/^	struct slob_block *next;$/;"	m	struct:slob_block	typeref:struct:slob_block::slob_block	file:
order	kern/mm/kmalloc.c	/^	int order;$/;"	m	struct:bigblock	file:
pages	kern/mm/kmalloc.c	/^	void *pages;$/;"	m	struct:bigblock	file:
slob_alloc	kern/mm/kmalloc.c	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	f	file:
slob_allocated	kern/mm/kmalloc.c	/^slob_allocated(void) {$/;"	f
slob_block	kern/mm/kmalloc.c	/^struct slob_block {$/;"	s	file:
slob_free	kern/mm/kmalloc.c	/^static void slob_free(void *block, int size)$/;"	f	file:
slob_init	kern/mm/kmalloc.c	/^slob_init(void) {$/;"	f
slob_t	kern/mm/kmalloc.c	/^typedef struct slob_block slob_t;$/;"	t	typeref:struct:slob_block	file:
slobfree	kern/mm/kmalloc.c	/^static slob_t *slobfree = &arena;$/;"	v	file:
spin_lock_irqsave	kern/mm/kmalloc.c	43;"	d	file:
spin_unlock_irqrestore	kern/mm/kmalloc.c	44;"	d	file:
units	kern/mm/kmalloc.c	/^	int units;$/;"	m	struct:slob_block	file:
KMALLOC_MAX_ORDER	kern/mm/kmalloc.h	6;"	d
__KERN_MM_KMALLOC_H__	kern/mm/kmalloc.h	2;"	d
ClearPageProperty	kern/mm/memlayout.h	146;"	d
ClearPageReserved	kern/mm/memlayout.h	143;"	d
DPL_KERNEL	kern/mm/memlayout.h	20;"	d
DPL_USER	kern/mm/memlayout.h	21;"	d
E820MAX	kern/mm/memlayout.h	111;"	d
E820_ARM	kern/mm/memlayout.h	112;"	d
E820_ARR	kern/mm/memlayout.h	113;"	d
GD_KDATA	kern/mm/memlayout.h	15;"	d
GD_KTEXT	kern/mm/memlayout.h	14;"	d
GD_TSS	kern/mm/memlayout.h	18;"	d
GD_UDATA	kern/mm/memlayout.h	17;"	d
GD_UTEXT	kern/mm/memlayout.h	16;"	d
KERNBASE	kern/mm/memlayout.h	70;"	d
KERNEL_CS	kern/mm/memlayout.h	23;"	d
KERNEL_DS	kern/mm/memlayout.h	24;"	d
KERNTOP	kern/mm/memlayout.h	72;"	d
KERN_ACCESS	kern/mm/memlayout.h	97;"	d
KMEMSIZE	kern/mm/memlayout.h	71;"	d
KSTACKPAGE	kern/mm/memlayout.h	82;"	d
KSTACKSIZE	kern/mm/memlayout.h	83;"	d
PG_property	kern/mm/memlayout.h	140;"	d
PG_reserved	kern/mm/memlayout.h	139;"	d
Page	kern/mm/memlayout.h	/^struct Page {$/;"	s
PageProperty	kern/mm/memlayout.h	147;"	d
PageReserved	kern/mm/memlayout.h	144;"	d
SEG_KDATA	kern/mm/memlayout.h	8;"	d
SEG_KTEXT	kern/mm/memlayout.h	7;"	d
SEG_TSS	kern/mm/memlayout.h	11;"	d
SEG_UDATA	kern/mm/memlayout.h	10;"	d
SEG_UTEXT	kern/mm/memlayout.h	9;"	d
SetPageProperty	kern/mm/memlayout.h	145;"	d
SetPageReserved	kern/mm/memlayout.h	142;"	d
USERBASE	kern/mm/memlayout.h	90;"	d
USERTOP	kern/mm/memlayout.h	85;"	d
USER_ACCESS	kern/mm/memlayout.h	94;"	d
USER_CS	kern/mm/memlayout.h	25;"	d
USER_DS	kern/mm/memlayout.h	26;"	d
USTAB	kern/mm/memlayout.h	92;"	d
USTACKPAGE	kern/mm/memlayout.h	87;"	d
USTACKSIZE	kern/mm/memlayout.h	88;"	d
USTACKTOP	kern/mm/memlayout.h	86;"	d
UTEXT	kern/mm/memlayout.h	91;"	d
VPT	kern/mm/memlayout.h	80;"	d
__KERN_MM_MEMLAYOUT_H__	kern/mm/memlayout.h	2;"	d
addr	kern/mm/memlayout.h	/^        uint64_t addr;$/;"	m	struct:e820map::__anon1
e820map	kern/mm/memlayout.h	/^struct e820map {$/;"	s
flags	kern/mm/memlayout.h	/^    uint32_t flags;                 \/\/ array of flags that describe the status of the page frame$/;"	m	struct:Page
free_area_t	kern/mm/memlayout.h	/^} free_area_t;$/;"	t	typeref:struct:__anon2
free_list	kern/mm/memlayout.h	/^    list_entry_t free_list;         \/\/ the list header$/;"	m	struct:__anon2
le2page	kern/mm/memlayout.h	150;"	d
map	kern/mm/memlayout.h	/^    } __attribute__((packed)) map[E820MAX];$/;"	m	struct:e820map	typeref:struct:e820map::__anon1
nr_free	kern/mm/memlayout.h	/^    unsigned int nr_free;           \/\/ # of free pages in this free list$/;"	m	struct:__anon2
nr_map	kern/mm/memlayout.h	/^    int nr_map;$/;"	m	struct:e820map
page_link	kern/mm/memlayout.h	/^    list_entry_t page_link;         \/\/ free list link$/;"	m	struct:Page
pde_t	kern/mm/memlayout.h	/^typedef uintptr_t pde_t;$/;"	t
pra_page_link	kern/mm/memlayout.h	/^    list_entry_t pra_page_link;     \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
pra_vaddr	kern/mm/memlayout.h	/^    uintptr_t pra_vaddr;            \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
property	kern/mm/memlayout.h	/^    unsigned int property;          \/\/ the num of free block, used in first fit pm manager$/;"	m	struct:Page
pte_t	kern/mm/memlayout.h	/^typedef uintptr_t pte_t;$/;"	t
ref	kern/mm/memlayout.h	/^    int ref;                        \/\/ page frame's reference counter$/;"	m	struct:Page
size	kern/mm/memlayout.h	/^        uint64_t size;$/;"	m	struct:e820map::__anon1
swap_entry_t	kern/mm/memlayout.h	/^typedef pte_t swap_entry_t; \/\/the pte can also be a swap entry$/;"	t
type	kern/mm/memlayout.h	/^        uint32_t type;$/;"	m	struct:e820map::__anon1
CR0_AM	kern/mm/mmu.h	258;"	d
CR0_CD	kern/mm/mmu.h	260;"	d
CR0_EM	kern/mm/mmu.h	253;"	d
CR0_ET	kern/mm/mmu.h	255;"	d
CR0_MP	kern/mm/mmu.h	252;"	d
CR0_NE	kern/mm/mmu.h	256;"	d
CR0_NW	kern/mm/mmu.h	259;"	d
CR0_PE	kern/mm/mmu.h	251;"	d
CR0_PG	kern/mm/mmu.h	261;"	d
CR0_TS	kern/mm/mmu.h	254;"	d
CR0_WP	kern/mm/mmu.h	257;"	d
CR4_DE	kern/mm/mmu.h	266;"	d
CR4_MCE	kern/mm/mmu.h	264;"	d
CR4_PCE	kern/mm/mmu.h	263;"	d
CR4_PSE	kern/mm/mmu.h	265;"	d
CR4_PVI	kern/mm/mmu.h	268;"	d
CR4_TSD	kern/mm/mmu.h	267;"	d
CR4_VME	kern/mm/mmu.h	269;"	d
FL_AC	kern/mm/mmu.h	22;"	d
FL_AF	kern/mm/mmu.h	7;"	d
FL_CF	kern/mm/mmu.h	5;"	d
FL_DF	kern/mm/mmu.h	12;"	d
FL_ID	kern/mm/mmu.h	25;"	d
FL_IF	kern/mm/mmu.h	11;"	d
FL_IOPL_0	kern/mm/mmu.h	15;"	d
FL_IOPL_1	kern/mm/mmu.h	16;"	d
FL_IOPL_2	kern/mm/mmu.h	17;"	d
FL_IOPL_3	kern/mm/mmu.h	18;"	d
FL_IOPL_MASK	kern/mm/mmu.h	14;"	d
FL_NT	kern/mm/mmu.h	19;"	d
FL_OF	kern/mm/mmu.h	13;"	d
FL_PF	kern/mm/mmu.h	6;"	d
FL_RF	kern/mm/mmu.h	20;"	d
FL_SF	kern/mm/mmu.h	9;"	d
FL_TF	kern/mm/mmu.h	10;"	d
FL_VIF	kern/mm/mmu.h	23;"	d
FL_VIP	kern/mm/mmu.h	24;"	d
FL_VM	kern/mm/mmu.h	21;"	d
FL_ZF	kern/mm/mmu.h	8;"	d
NPDEENTRY	kern/mm/mmu.h	223;"	d
NPTEENTRY	kern/mm/mmu.h	224;"	d
PDE_ADDR	kern/mm/mmu.h	220;"	d
PDX	kern/mm/mmu.h	204;"	d
PDXSHIFT	kern/mm/mmu.h	232;"	d
PGADDR	kern/mm/mmu.h	216;"	d
PGOFF	kern/mm/mmu.h	213;"	d
PGSHIFT	kern/mm/mmu.h	227;"	d
PGSIZE	kern/mm/mmu.h	226;"	d
PPN	kern/mm/mmu.h	210;"	d
PTE_A	kern/mm/mmu.h	240;"	d
PTE_ADDR	kern/mm/mmu.h	219;"	d
PTE_AVAIL	kern/mm/mmu.h	244;"	d
PTE_D	kern/mm/mmu.h	241;"	d
PTE_MBZ	kern/mm/mmu.h	243;"	d
PTE_P	kern/mm/mmu.h	235;"	d
PTE_PCD	kern/mm/mmu.h	239;"	d
PTE_PS	kern/mm/mmu.h	242;"	d
PTE_PWT	kern/mm/mmu.h	238;"	d
PTE_U	kern/mm/mmu.h	237;"	d
PTE_USER	kern/mm/mmu.h	248;"	d
PTE_W	kern/mm/mmu.h	236;"	d
PTSHIFT	kern/mm/mmu.h	229;"	d
PTSIZE	kern/mm/mmu.h	228;"	d
PTX	kern/mm/mmu.h	207;"	d
PTXSHIFT	kern/mm/mmu.h	231;"	d
SEG	kern/mm/mmu.h	131;"	d
SEGTSS	kern/mm/mmu.h	139;"	d
SEG_ASM	kern/mm/mmu.h	55;"	d
SEG_NULL	kern/mm/mmu.h	128;"	d
SEG_NULL	kern/mm/mmu.h	51;"	d
SETCALLGATE	kern/mm/mmu.h	99;"	d
SETGATE	kern/mm/mmu.h	86;"	d
STA_A	kern/mm/mmu.h	33;"	d
STA_C	kern/mm/mmu.h	30;"	d
STA_E	kern/mm/mmu.h	29;"	d
STA_R	kern/mm/mmu.h	32;"	d
STA_W	kern/mm/mmu.h	31;"	d
STA_X	kern/mm/mmu.h	28;"	d
STS_CG16	kern/mm/mmu.h	39;"	d
STS_CG32	kern/mm/mmu.h	45;"	d
STS_IG16	kern/mm/mmu.h	41;"	d
STS_IG32	kern/mm/mmu.h	46;"	d
STS_LDT	kern/mm/mmu.h	37;"	d
STS_T16A	kern/mm/mmu.h	36;"	d
STS_T16B	kern/mm/mmu.h	38;"	d
STS_T32A	kern/mm/mmu.h	43;"	d
STS_T32B	kern/mm/mmu.h	44;"	d
STS_TG	kern/mm/mmu.h	40;"	d
STS_TG16	kern/mm/mmu.h	42;"	d
STS_TG32	kern/mm/mmu.h	47;"	d
__KERN_MM_MMU_H__	kern/mm/mmu.h	2;"	d
gatedesc	kern/mm/mmu.h	/^struct gatedesc {$/;"	s
gd_args	kern/mm/mmu.h	/^    unsigned gd_args : 5;           \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:gatedesc
gd_dpl	kern/mm/mmu.h	/^    unsigned gd_dpl : 2;            \/\/ descriptor(meaning new) privilege level$/;"	m	struct:gatedesc
gd_off_15_0	kern/mm/mmu.h	/^    unsigned gd_off_15_0 : 16;      \/\/ low 16 bits of offset in segment$/;"	m	struct:gatedesc
gd_off_31_16	kern/mm/mmu.h	/^    unsigned gd_off_31_16 : 16;     \/\/ high bits of offset in segment$/;"	m	struct:gatedesc
gd_p	kern/mm/mmu.h	/^    unsigned gd_p : 1;              \/\/ Present$/;"	m	struct:gatedesc
gd_rsv1	kern/mm/mmu.h	/^    unsigned gd_rsv1 : 3;           \/\/ reserved(should be zero I guess)$/;"	m	struct:gatedesc
gd_s	kern/mm/mmu.h	/^    unsigned gd_s : 1;              \/\/ must be 0 (system)$/;"	m	struct:gatedesc
gd_ss	kern/mm/mmu.h	/^    unsigned gd_ss : 16;            \/\/ segment selector$/;"	m	struct:gatedesc
gd_type	kern/mm/mmu.h	/^    unsigned gd_type : 4;           \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:gatedesc
sd_avl	kern/mm/mmu.h	/^    unsigned sd_avl : 1;            \/\/ unused (available for software use)$/;"	m	struct:segdesc
sd_base_15_0	kern/mm/mmu.h	/^    unsigned sd_base_15_0 : 16;     \/\/ low bits of segment base address$/;"	m	struct:segdesc
sd_base_23_16	kern/mm/mmu.h	/^    unsigned sd_base_23_16 : 8;     \/\/ middle bits of segment base address$/;"	m	struct:segdesc
sd_base_31_24	kern/mm/mmu.h	/^    unsigned sd_base_31_24 : 8;     \/\/ high bits of segment base address$/;"	m	struct:segdesc
sd_db	kern/mm/mmu.h	/^    unsigned sd_db : 1;             \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:segdesc
sd_dpl	kern/mm/mmu.h	/^    unsigned sd_dpl : 2;            \/\/ descriptor Privilege Level$/;"	m	struct:segdesc
sd_g	kern/mm/mmu.h	/^    unsigned sd_g : 1;              \/\/ granularity: limit scaled by 4K when set$/;"	m	struct:segdesc
sd_lim_15_0	kern/mm/mmu.h	/^    unsigned sd_lim_15_0 : 16;      \/\/ low bits of segment limit$/;"	m	struct:segdesc
sd_lim_19_16	kern/mm/mmu.h	/^    unsigned sd_lim_19_16 : 4;      \/\/ high bits of segment limit$/;"	m	struct:segdesc
sd_p	kern/mm/mmu.h	/^    unsigned sd_p : 1;              \/\/ present$/;"	m	struct:segdesc
sd_rsv1	kern/mm/mmu.h	/^    unsigned sd_rsv1 : 1;           \/\/ reserved$/;"	m	struct:segdesc
sd_s	kern/mm/mmu.h	/^    unsigned sd_s : 1;              \/\/ 0 = system, 1 = application$/;"	m	struct:segdesc
sd_type	kern/mm/mmu.h	/^    unsigned sd_type : 4;           \/\/ segment type (see STS_ constants)$/;"	m	struct:segdesc
segdesc	kern/mm/mmu.h	/^struct segdesc {$/;"	s
taskstate	kern/mm/mmu.h	/^struct taskstate {$/;"	s
ts_cr3	kern/mm/mmu.h	/^    uintptr_t ts_cr3;       \/\/ page directory base$/;"	m	struct:taskstate
ts_cs	kern/mm/mmu.h	/^    uint16_t ts_cs;$/;"	m	struct:taskstate
ts_ds	kern/mm/mmu.h	/^    uint16_t ts_ds;$/;"	m	struct:taskstate
ts_eax	kern/mm/mmu.h	/^    uint32_t ts_eax;        \/\/ more saved state (registers)$/;"	m	struct:taskstate
ts_ebp	kern/mm/mmu.h	/^    uintptr_t ts_ebp;$/;"	m	struct:taskstate
ts_ebx	kern/mm/mmu.h	/^    uint32_t ts_ebx;$/;"	m	struct:taskstate
ts_ecx	kern/mm/mmu.h	/^    uint32_t ts_ecx;$/;"	m	struct:taskstate
ts_edi	kern/mm/mmu.h	/^    uint32_t ts_edi;$/;"	m	struct:taskstate
ts_edx	kern/mm/mmu.h	/^    uint32_t ts_edx;$/;"	m	struct:taskstate
ts_eflags	kern/mm/mmu.h	/^    uint32_t ts_eflags;$/;"	m	struct:taskstate
ts_eip	kern/mm/mmu.h	/^    uintptr_t ts_eip;       \/\/ saved state from last task switch$/;"	m	struct:taskstate
ts_es	kern/mm/mmu.h	/^    uint16_t ts_es;         \/\/ even more saved state (segment selectors)$/;"	m	struct:taskstate
ts_esi	kern/mm/mmu.h	/^    uint32_t ts_esi;$/;"	m	struct:taskstate
ts_esp	kern/mm/mmu.h	/^    uintptr_t ts_esp;$/;"	m	struct:taskstate
ts_esp0	kern/mm/mmu.h	/^    uintptr_t ts_esp0;      \/\/ stack pointers and segment selectors$/;"	m	struct:taskstate
ts_esp1	kern/mm/mmu.h	/^    uintptr_t ts_esp1;$/;"	m	struct:taskstate
ts_esp2	kern/mm/mmu.h	/^    uintptr_t ts_esp2;$/;"	m	struct:taskstate
ts_fs	kern/mm/mmu.h	/^    uint16_t ts_fs;$/;"	m	struct:taskstate
ts_gs	kern/mm/mmu.h	/^    uint16_t ts_gs;$/;"	m	struct:taskstate
ts_iomb	kern/mm/mmu.h	/^    uint16_t ts_iomb;       \/\/ i\/o map base address$/;"	m	struct:taskstate
ts_ldt	kern/mm/mmu.h	/^    uint16_t ts_ldt;$/;"	m	struct:taskstate
ts_link	kern/mm/mmu.h	/^    uint32_t ts_link;       \/\/ old ts selector$/;"	m	struct:taskstate
ts_padding1	kern/mm/mmu.h	/^    uint16_t ts_padding1;$/;"	m	struct:taskstate
ts_padding10	kern/mm/mmu.h	/^    uint16_t ts_padding10;$/;"	m	struct:taskstate
ts_padding2	kern/mm/mmu.h	/^    uint16_t ts_padding2;$/;"	m	struct:taskstate
ts_padding3	kern/mm/mmu.h	/^    uint16_t ts_padding3;$/;"	m	struct:taskstate
ts_padding4	kern/mm/mmu.h	/^    uint16_t ts_padding4;$/;"	m	struct:taskstate
ts_padding5	kern/mm/mmu.h	/^    uint16_t ts_padding5;$/;"	m	struct:taskstate
ts_padding6	kern/mm/mmu.h	/^    uint16_t ts_padding6;$/;"	m	struct:taskstate
ts_padding7	kern/mm/mmu.h	/^    uint16_t ts_padding7;$/;"	m	struct:taskstate
ts_padding8	kern/mm/mmu.h	/^    uint16_t ts_padding8;$/;"	m	struct:taskstate
ts_padding9	kern/mm/mmu.h	/^    uint16_t ts_padding9;$/;"	m	struct:taskstate
ts_ss	kern/mm/mmu.h	/^    uint16_t ts_ss;$/;"	m	struct:taskstate
ts_ss0	kern/mm/mmu.h	/^    uint16_t ts_ss0;        \/\/ after an increase in privilege level$/;"	m	struct:taskstate
ts_ss1	kern/mm/mmu.h	/^    uint16_t ts_ss1;$/;"	m	struct:taskstate
ts_ss2	kern/mm/mmu.h	/^    uint16_t ts_ss2;$/;"	m	struct:taskstate
ts_t	kern/mm/mmu.h	/^    uint16_t ts_t;          \/\/ trap on task switch$/;"	m	struct:taskstate
alloc_pages	kern/mm/pmm.c	/^alloc_pages(size_t n) {$/;"	f
boot_alloc_page	kern/mm/pmm.c	/^boot_alloc_page(void) {$/;"	f	file:
boot_cr3	kern/mm/pmm.c	/^uintptr_t boot_cr3;$/;"	v
boot_map_segment	kern/mm/pmm.c	/^boot_map_segment(pde_t *pgdir, uintptr_t la, size_t size, uintptr_t pa, uint32_t perm) {$/;"	f	file:
boot_pgdir	kern/mm/pmm.c	/^pde_t *boot_pgdir = NULL;$/;"	v
check_alloc_page	kern/mm/pmm.c	/^check_alloc_page(void) {$/;"	f	file:
check_boot_pgdir	kern/mm/pmm.c	/^check_boot_pgdir(void) {$/;"	f	file:
check_pgdir	kern/mm/pmm.c	/^check_pgdir(void) {$/;"	f	file:
copy_range	kern/mm/pmm.c	/^copy_range(pde_t *to, pde_t *from, uintptr_t start, uintptr_t end, bool share) {$/;"	f
enable_paging	kern/mm/pmm.c	/^enable_paging(void) {$/;"	f	file:
exit_range	kern/mm/pmm.c	/^exit_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
free_pages	kern/mm/pmm.c	/^free_pages(struct Page *base, size_t n) {$/;"	f
gdt	kern/mm/pmm.c	/^static struct segdesc gdt[] = {$/;"	v	typeref:struct:segdesc	file:
gdt_init	kern/mm/pmm.c	/^gdt_init(void) {$/;"	f	file:
gdt_pd	kern/mm/pmm.c	/^static struct pseudodesc gdt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
get_page	kern/mm/pmm.c	/^get_page(pde_t *pgdir, uintptr_t la, pte_t **ptep_store) {$/;"	f
get_pgtable_items	kern/mm/pmm.c	/^get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t *table, size_t *left_store, size_t *right_store) {$/;"	f	file:
get_pte	kern/mm/pmm.c	/^get_pte(pde_t *pgdir, uintptr_t la, bool create) {$/;"	f
init_memmap	kern/mm/pmm.c	/^init_memmap(struct Page *base, size_t n) {$/;"	f	file:
init_pmm_manager	kern/mm/pmm.c	/^init_pmm_manager(void) {$/;"	f	file:
lgdt	kern/mm/pmm.c	/^lgdt(struct pseudodesc *pd) {$/;"	f	file:
load_esp0	kern/mm/pmm.c	/^load_esp0(uintptr_t esp0) {$/;"	f
npage	kern/mm/pmm.c	/^size_t npage = 0;$/;"	v
nr_free_pages	kern/mm/pmm.c	/^nr_free_pages(void) {$/;"	f
page_init	kern/mm/pmm.c	/^page_init(void) {$/;"	f	file:
page_insert	kern/mm/pmm.c	/^page_insert(pde_t *pgdir, struct Page *page, uintptr_t la, uint32_t perm) {$/;"	f
page_remove	kern/mm/pmm.c	/^page_remove(pde_t *pgdir, uintptr_t la) {$/;"	f
page_remove_pte	kern/mm/pmm.c	/^page_remove_pte(pde_t *pgdir, uintptr_t la, pte_t *ptep) {$/;"	f	file:
pages	kern/mm/pmm.c	/^struct Page *pages;$/;"	v	typeref:struct:Page
perm2str	kern/mm/pmm.c	/^perm2str(int perm) {$/;"	f	file:
pgdir_alloc_page	kern/mm/pmm.c	/^pgdir_alloc_page(pde_t *pgdir, uintptr_t la, uint32_t perm) {$/;"	f
pmm_init	kern/mm/pmm.c	/^pmm_init(void) {$/;"	f
pmm_manager	kern/mm/pmm.c	/^const struct pmm_manager *pmm_manager;$/;"	v	typeref:struct:pmm_manager
print_pgdir	kern/mm/pmm.c	/^print_pgdir(void) {$/;"	f
tlb_invalidate	kern/mm/pmm.c	/^tlb_invalidate(pde_t *pgdir, uintptr_t la) {$/;"	f
ts	kern/mm/pmm.c	/^static struct taskstate ts = {0};$/;"	v	typeref:struct:taskstate	file:
unmap_range	kern/mm/pmm.c	/^unmap_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
vpd	kern/mm/pmm.c	/^pde_t * const vpd = (pde_t *)PGADDR(PDX(VPT), PDX(VPT), 0);$/;"	v
vpt	kern/mm/pmm.c	/^pte_t * const vpt = (pte_t *)VPT;$/;"	v
KADDR	kern/mm/pmm.h	69;"	d
PADDR	kern/mm/pmm.h	57;"	d
__KERN_MM_PMM_H__	kern/mm/pmm.h	2;"	d
alloc_page	kern/mm/pmm.h	35;"	d
alloc_pages	kern/mm/pmm.h	/^    struct Page *(*alloc_pages)(size_t n);            \/\/ allocate >=n pages, depend on the allocation algorithm $/;"	m	struct:pmm_manager	typeref:struct:pmm_manager::alloc_pages
check	kern/mm/pmm.h	/^    void (*check)(void);                              \/\/ check the correctness of XXX_pmm_manager $/;"	m	struct:pmm_manager
free_page	kern/mm/pmm.h	36;"	d
free_pages	kern/mm/pmm.h	/^    void (*free_pages)(struct Page *base, size_t n);  \/\/ free >=n pages with "base" addr of Page descriptor structures(memlayout.h)$/;"	m	struct:pmm_manager
init	kern/mm/pmm.h	/^    void (*init)(void);                               \/\/ initialize internal description&management data structure$/;"	m	struct:pmm_manager
init_memmap	kern/mm/pmm.h	/^    void (*init_memmap)(struct Page *base, size_t n); \/\/ setup description&management data structcure according to$/;"	m	struct:pmm_manager
kva2page	kern/mm/pmm.h	/^kva2page(void *kva) {$/;"	f
name	kern/mm/pmm.h	/^    const char *name;                                 \/\/ XXX_pmm_manager's name$/;"	m	struct:pmm_manager
nr_free_pages	kern/mm/pmm.h	/^    size_t (*nr_free_pages)(void);                    \/\/ return the number of free pages $/;"	m	struct:pmm_manager
pa2page	kern/mm/pmm.h	/^pa2page(uintptr_t pa) {$/;"	f
page2kva	kern/mm/pmm.h	/^page2kva(struct Page *page) {$/;"	f
page2pa	kern/mm/pmm.h	/^page2pa(struct Page *page) {$/;"	f
page2ppn	kern/mm/pmm.h	/^page2ppn(struct Page *page) {$/;"	f
page_ref	kern/mm/pmm.h	/^page_ref(struct Page *page) {$/;"	f
page_ref_dec	kern/mm/pmm.h	/^page_ref_dec(struct Page *page) {$/;"	f
page_ref_inc	kern/mm/pmm.h	/^page_ref_inc(struct Page *page) {$/;"	f
pde2page	kern/mm/pmm.h	/^pde2page(pde_t pde) {$/;"	f
pmm_manager	kern/mm/pmm.h	/^struct pmm_manager {$/;"	s
pte2page	kern/mm/pmm.h	/^pte2page(pte_t pte) {$/;"	f
set_page_ref	kern/mm/pmm.h	/^set_page_ref(struct Page *page, int val) {$/;"	f
BEING_CHECK_VALID_VADDR	kern/mm/swap.c	14;"	d	file:
CHECK_VALID_PHY_PAGE_NUM	kern/mm/swap.c	17;"	d	file:
CHECK_VALID_VADDR	kern/mm/swap.c	15;"	d	file:
CHECK_VALID_VIR_PAGE_NUM	kern/mm/swap.c	13;"	d	file:
MAX_SEQ_NO	kern/mm/swap.c	19;"	d	file:
check_content_access	kern/mm/swap.c	/^check_content_access(void)$/;"	f	file:
check_content_set	kern/mm/swap.c	/^check_content_set(void)$/;"	f	file:
check_ptep	kern/mm/swap.c	/^pte_t * check_ptep[CHECK_VALID_PHY_PAGE_NUM];$/;"	v
check_rp	kern/mm/swap.c	/^struct Page * check_rp[CHECK_VALID_PHY_PAGE_NUM];$/;"	v	typeref:struct:Page
check_swap	kern/mm/swap.c	/^check_swap(void)$/;"	f	file:
check_swap_addr	kern/mm/swap.c	/^unsigned int check_swap_addr[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
free_list	kern/mm/swap.c	176;"	d	file:
max_swap_offset	kern/mm/swap.c	/^size_t max_swap_offset;$/;"	v
nr_free	kern/mm/swap.c	177;"	d	file:
sm	kern/mm/swap.c	/^static struct swap_manager *sm;$/;"	v	typeref:struct:swap_manager	file:
swap_in	kern/mm/swap.c	/^swap_in(struct mm_struct *mm, uintptr_t addr, struct Page **ptr_result)$/;"	f
swap_in_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_init	kern/mm/swap.c	/^swap_init(void)$/;"	f
swap_init_mm	kern/mm/swap.c	/^swap_init_mm(struct mm_struct *mm)$/;"	f
swap_init_ok	kern/mm/swap.c	/^volatile int swap_init_ok = 0;$/;"	v
swap_map_swappable	kern/mm/swap.c	/^swap_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f
swap_out	kern/mm/swap.c	/^swap_out(struct mm_struct *mm, int n, int in_tick)$/;"	f
swap_out_num	kern/mm/swap.c	/^volatile unsigned int swap_out_num=0;$/;"	v
swap_out_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_page	kern/mm/swap.c	/^unsigned int swap_page[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
swap_set_unswappable	kern/mm/swap.c	/^swap_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f
swap_tick_event	kern/mm/swap.c	/^swap_tick_event(struct mm_struct *mm)$/;"	f
MAX_SWAP_OFFSET_LIMIT	kern/mm/swap.h	17;"	d
__KERN_MM_SWAP_H__	kern/mm/swap.h	2;"	d
check_swap	kern/mm/swap.h	/^     int (*check_swap)(void);     $/;"	m	struct:swap_manager
init	kern/mm/swap.h	/^     int (*init)            (void);$/;"	m	struct:swap_manager
init_mm	kern/mm/swap.h	/^     int (*init_mm)         (struct mm_struct *mm);$/;"	m	struct:swap_manager
map_swappable	kern/mm/swap.h	/^     int (*map_swappable)   (struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in);$/;"	m	struct:swap_manager
name	kern/mm/swap.h	/^     const char *name;$/;"	m	struct:swap_manager
set_unswappable	kern/mm/swap.h	/^     int (*set_unswappable) (struct mm_struct *mm, uintptr_t addr);$/;"	m	struct:swap_manager
swap_manager	kern/mm/swap.h	/^struct swap_manager$/;"	s
swap_offset	kern/mm/swap.h	25;"	d
swap_out_victim	kern/mm/swap.h	/^     int (*swap_out_victim) (struct mm_struct *mm, struct Page **ptr_page, int in_tick);$/;"	m	struct:swap_manager
tick_event	kern/mm/swap.h	/^     int (*tick_event)      (struct mm_struct *mm);$/;"	m	struct:swap_manager
_fifo_check_swap	kern/mm/swap_fifo.c	/^_fifo_check_swap(void) {$/;"	f	file:
_fifo_init	kern/mm/swap_fifo.c	/^_fifo_init(void)$/;"	f	file:
_fifo_init_mm	kern/mm/swap_fifo.c	/^_fifo_init_mm(struct mm_struct *mm)$/;"	f	file:
_fifo_map_swappable	kern/mm/swap_fifo.c	/^_fifo_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f	file:
_fifo_set_unswappable	kern/mm/swap_fifo.c	/^_fifo_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f	file:
_fifo_swap_out_victim	kern/mm/swap_fifo.c	/^_fifo_swap_out_victim(struct mm_struct *mm, struct Page ** ptr_page, int in_tick)$/;"	f	file:
_fifo_tick_event	kern/mm/swap_fifo.c	/^_fifo_tick_event(struct mm_struct *mm)$/;"	f	file:
pra_list_head	kern/mm/swap_fifo.c	/^list_entry_t pra_list_head;$/;"	v
swap_manager_fifo	kern/mm/swap_fifo.c	/^struct swap_manager swap_manager_fifo =$/;"	v	typeref:struct:swap_manager
__KERN_MM_SWAP_FIFO_H__	kern/mm/swap_fifo.h	2;"	d
check_mm_struct	kern/mm/vmm.c	/^struct mm_struct *check_mm_struct;$/;"	v	typeref:struct:mm_struct
check_pgfault	kern/mm/vmm.c	/^check_pgfault(void) {$/;"	f	file:
check_vma_overlap	kern/mm/vmm.c	/^check_vma_overlap(struct vma_struct *prev, struct vma_struct *next) {$/;"	f	file:
check_vma_struct	kern/mm/vmm.c	/^check_vma_struct(void) {$/;"	f	file:
check_vmm	kern/mm/vmm.c	/^check_vmm(void) {$/;"	f	file:
copy_from_user	kern/mm/vmm.c	/^copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable) {$/;"	f
copy_to_user	kern/mm/vmm.c	/^copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len) {$/;"	f
do_pgfault	kern/mm/vmm.c	/^do_pgfault(struct mm_struct *mm, uint32_t error_code, uintptr_t addr) {$/;"	f
dup_mmap	kern/mm/vmm.c	/^dup_mmap(struct mm_struct *to, struct mm_struct *from) {$/;"	f
exit_mmap	kern/mm/vmm.c	/^exit_mmap(struct mm_struct *mm) {$/;"	f
find_vma	kern/mm/vmm.c	/^find_vma(struct mm_struct *mm, uintptr_t addr) {$/;"	f
insert_vma_struct	kern/mm/vmm.c	/^insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma) {$/;"	f
mm_create	kern/mm/vmm.c	/^mm_create(void) {$/;"	f
mm_destroy	kern/mm/vmm.c	/^mm_destroy(struct mm_struct *mm) {$/;"	f
mm_map	kern/mm/vmm.c	/^mm_map(struct mm_struct *mm, uintptr_t addr, size_t len, uint32_t vm_flags,$/;"	f
pgfault_num	kern/mm/vmm.c	/^volatile unsigned int pgfault_num=0;$/;"	v
user_mem_check	kern/mm/vmm.c	/^user_mem_check(struct mm_struct *mm, uintptr_t addr, size_t len, bool write) {$/;"	f
vma_create	kern/mm/vmm.c	/^vma_create(uintptr_t vm_start, uintptr_t vm_end, uint32_t vm_flags) {$/;"	f
vmm_init	kern/mm/vmm.c	/^vmm_init(void) {$/;"	f
VM_EXEC	kern/mm/vmm.h	27;"	d
VM_READ	kern/mm/vmm.h	25;"	d
VM_STACK	kern/mm/vmm.h	28;"	d
VM_WRITE	kern/mm/vmm.h	26;"	d
__KERN_MM_VMM_H__	kern/mm/vmm.h	2;"	d
le2vma	kern/mm/vmm.h	22;"	d
list_link	kern/mm/vmm.h	/^    list_entry_t list_link;  \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:vma_struct
lock_mm	kern/mm/vmm.h	/^lock_mm(struct mm_struct *mm) {$/;"	f
map_count	kern/mm/vmm.h	/^    int map_count;                 \/\/ the count of these vma$/;"	m	struct:mm_struct
mm_count	kern/mm/vmm.h	/^    int mm_count;                  \/\/ the number ofprocess which shared the mm$/;"	m	struct:mm_struct
mm_count	kern/mm/vmm.h	/^mm_count(struct mm_struct *mm) {$/;"	f
mm_count_dec	kern/mm/vmm.h	/^mm_count_dec(struct mm_struct *mm) {$/;"	f
mm_count_inc	kern/mm/vmm.h	/^mm_count_inc(struct mm_struct *mm) {$/;"	f
mm_lock	kern/mm/vmm.h	/^    lock_t mm_lock;                \/\/ mutex for using dup_mmap fun to duplicat the mm$/;"	m	struct:mm_struct
mm_struct	kern/mm/vmm.h	/^struct mm_struct {$/;"	s
mmap_cache	kern/mm/vmm.h	/^    struct vma_struct *mmap_cache; \/\/ current accessed vma, used for speed purpose$/;"	m	struct:mm_struct	typeref:struct:mm_struct::vma_struct
mmap_list	kern/mm/vmm.h	/^    list_entry_t mmap_list;        \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:mm_struct
pgdir	kern/mm/vmm.h	/^    pde_t *pgdir;                  \/\/ the PDT of these vma$/;"	m	struct:mm_struct
set_mm_count	kern/mm/vmm.h	/^set_mm_count(struct mm_struct *mm, int val) {$/;"	f
sm_priv	kern/mm/vmm.h	/^    void *sm_priv;                 \/\/ the private data for swap manager$/;"	m	struct:mm_struct
unlock_mm	kern/mm/vmm.h	/^unlock_mm(struct mm_struct *mm) {$/;"	f
vm_end	kern/mm/vmm.h	/^    uintptr_t vm_end;        \/\/ end addr of vma, not include the vm_end itself$/;"	m	struct:vma_struct
vm_flags	kern/mm/vmm.h	/^    uint32_t vm_flags;       \/\/ flags of vma$/;"	m	struct:vma_struct
vm_mm	kern/mm/vmm.h	/^    struct mm_struct *vm_mm; \/\/ the set of vma using the same PDT $/;"	m	struct:vma_struct	typeref:struct:vma_struct::mm_struct
vm_start	kern/mm/vmm.h	/^    uintptr_t vm_start;      \/\/ start addr of vma      $/;"	m	struct:vma_struct
vma_struct	kern/mm/vmm.h	/^struct vma_struct {$/;"	s
kernel_thread_entry	kern/process/entry.S	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
HASH_LIST_SIZE	kern/process/proc.c	66;"	d	file:
HASH_SHIFT	kern/process/proc.c	65;"	d	file:
KERNEL_EXECVE	kern/process/proc.c	811;"	d	file:
KERNEL_EXECVE2	kern/process/proc.c	823;"	d	file:
__KERNEL_EXECVE	kern/process/proc.c	805;"	d	file:
__KERNEL_EXECVE2	kern/process/proc.c	818;"	d	file:
alloc_proc	kern/process/proc.c	/^alloc_proc(void) {$/;"	f	file:
copy_mm	kern/process/proc.c	/^copy_mm(uint32_t clone_flags, struct proc_struct *proc) {$/;"	f	file:
copy_thread	kern/process/proc.c	/^copy_thread(struct proc_struct *proc, uintptr_t esp, struct trapframe *tf) {$/;"	f	file:
cpu_idle	kern/process/proc.c	/^cpu_idle(void) {$/;"	f
current	kern/process/proc.c	/^struct proc_struct *current = NULL;$/;"	v	typeref:struct:proc_struct
do_execve	kern/process/proc.c	/^do_execve(const char *name, size_t len, unsigned char *binary, size_t size) {$/;"	f
do_exit	kern/process/proc.c	/^do_exit(int error_code) {$/;"	f
do_fork	kern/process/proc.c	/^do_fork(uint32_t clone_flags, uintptr_t stack, struct trapframe *tf) {$/;"	f
do_kill	kern/process/proc.c	/^do_kill(int pid) {$/;"	f
do_wait	kern/process/proc.c	/^do_wait(int pid, int *code_store) {$/;"	f
do_yield	kern/process/proc.c	/^do_yield(void) {$/;"	f
find_proc	kern/process/proc.c	/^find_proc(int pid) {$/;"	f
forkret	kern/process/proc.c	/^forkret(void) {$/;"	f	file:
get_pid	kern/process/proc.c	/^get_pid(void) {$/;"	f	file:
get_proc_name	kern/process/proc.c	/^get_proc_name(struct proc_struct *proc) {$/;"	f
hash_list	kern/process/proc.c	/^static list_entry_t hash_list[HASH_LIST_SIZE];$/;"	v	file:
hash_proc	kern/process/proc.c	/^hash_proc(struct proc_struct *proc) {$/;"	f	file:
idleproc	kern/process/proc.c	/^struct proc_struct *idleproc = NULL;$/;"	v	typeref:struct:proc_struct
init_main	kern/process/proc.c	/^init_main(void *arg) {$/;"	f	file:
initproc	kern/process/proc.c	/^struct proc_struct *initproc = NULL;$/;"	v	typeref:struct:proc_struct
kernel_execve	kern/process/proc.c	/^kernel_execve(const char *name, unsigned char *binary, size_t size) {$/;"	f	file:
kernel_thread	kern/process/proc.c	/^kernel_thread(int (*fn)(void *), void *arg, uint32_t clone_flags) {$/;"	f
load_icode	kern/process/proc.c	/^load_icode(unsigned char *binary, size_t size) {$/;"	f	file:
nr_process	kern/process/proc.c	/^static int nr_process = 0;$/;"	v	file:
pid_hashfn	kern/process/proc.c	67;"	d	file:
proc_init	kern/process/proc.c	/^proc_init(void) {$/;"	f
proc_list	kern/process/proc.c	/^list_entry_t proc_list;$/;"	v
proc_run	kern/process/proc.c	/^proc_run(struct proc_struct *proc) {$/;"	f
put_kstack	kern/process/proc.c	/^put_kstack(struct proc_struct *proc) {$/;"	f	file:
put_pgdir	kern/process/proc.c	/^put_pgdir(struct mm_struct *mm) {$/;"	f	file:
remove_links	kern/process/proc.c	/^remove_links(struct proc_struct *proc) {$/;"	f	file:
set_links	kern/process/proc.c	/^set_links(struct proc_struct *proc) {$/;"	f	file:
set_proc_name	kern/process/proc.c	/^set_proc_name(struct proc_struct *proc, const char *name) {$/;"	f
setup_kstack	kern/process/proc.c	/^setup_kstack(struct proc_struct *proc) {$/;"	f	file:
setup_pgdir	kern/process/proc.c	/^setup_pgdir(struct mm_struct *mm) {$/;"	f	file:
unhash_proc	kern/process/proc.c	/^unhash_proc(struct proc_struct *proc) {$/;"	f	file:
user_main	kern/process/proc.c	/^user_main(void *arg) {$/;"	f	file:
MAX_PID	kern/process/proc.h	38;"	d
MAX_PROCESS	kern/process/proc.h	37;"	d
PF_EXITING	kern/process/proc.h	62;"	d
PROC_NAME_LEN	kern/process/proc.h	36;"	d
PROC_RUNNABLE	kern/process/proc.h	/^    PROC_RUNNABLE,    \/\/ runnable(maybe running)$/;"	e	enum:proc_state
PROC_SLEEPING	kern/process/proc.h	/^    PROC_SLEEPING,    \/\/ sleeping$/;"	e	enum:proc_state
PROC_UNINIT	kern/process/proc.h	/^    PROC_UNINIT = 0,  \/\/ uninitialized$/;"	e	enum:proc_state
PROC_ZOMBIE	kern/process/proc.h	/^    PROC_ZOMBIE,      \/\/ almost dead, and wait parent proc to reclaim his resource$/;"	e	enum:proc_state
WT_CHILD	kern/process/proc.h	64;"	d
WT_INTERRUPTED	kern/process/proc.h	65;"	d
__KERN_PROCESS_PROC_H__	kern/process/proc.h	2;"	d
context	kern/process/proc.h	/^    struct context context;                     \/\/ Switch here to run process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::context
context	kern/process/proc.h	/^struct context {$/;"	s
cptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
cr3	kern/process/proc.h	/^    uintptr_t cr3;                              \/\/ CR3 register: the base addr of Page Directroy Table(PDT)$/;"	m	struct:proc_struct
ebp	kern/process/proc.h	/^    uint32_t ebp;$/;"	m	struct:context
ebx	kern/process/proc.h	/^    uint32_t ebx;$/;"	m	struct:context
ecx	kern/process/proc.h	/^    uint32_t ecx;$/;"	m	struct:context
edi	kern/process/proc.h	/^    uint32_t edi;$/;"	m	struct:context
edx	kern/process/proc.h	/^    uint32_t edx;$/;"	m	struct:context
eip	kern/process/proc.h	/^    uint32_t eip;$/;"	m	struct:context
esi	kern/process/proc.h	/^    uint32_t esi;$/;"	m	struct:context
esp	kern/process/proc.h	/^    uint32_t esp;$/;"	m	struct:context
exit_code	kern/process/proc.h	/^    int exit_code;                              \/\/ exit code (be sent to parent proc)$/;"	m	struct:proc_struct
flags	kern/process/proc.h	/^    uint32_t flags;                             \/\/ Process flag$/;"	m	struct:proc_struct
hash_link	kern/process/proc.h	/^    list_entry_t hash_link;                     \/\/ Process hash list$/;"	m	struct:proc_struct
kstack	kern/process/proc.h	/^    uintptr_t kstack;                           \/\/ Process kernel stack$/;"	m	struct:proc_struct
le2proc	kern/process/proc.h	68;"	d
list_link	kern/process/proc.h	/^    list_entry_t list_link;                     \/\/ Process link list $/;"	m	struct:proc_struct
mm	kern/process/proc.h	/^    struct mm_struct *mm;                       \/\/ Process's memory management field$/;"	m	struct:proc_struct	typeref:struct:proc_struct::mm_struct
name	kern/process/proc.h	/^    char name[PROC_NAME_LEN + 1];               \/\/ Process name$/;"	m	struct:proc_struct
need_resched	kern/process/proc.h	/^    volatile bool need_resched;                 \/\/ bool value: need to be rescheduled to release CPU?$/;"	m	struct:proc_struct
optr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
parent	kern/process/proc.h	/^    struct proc_struct *parent;                 \/\/ the parent process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
pid	kern/process/proc.h	/^    int pid;                                    \/\/ Process ID$/;"	m	struct:proc_struct
proc_state	kern/process/proc.h	/^enum proc_state {$/;"	g
proc_struct	kern/process/proc.h	/^struct proc_struct {$/;"	s
runs	kern/process/proc.h	/^    int runs;                                   \/\/ the running times of Proces$/;"	m	struct:proc_struct
state	kern/process/proc.h	/^    enum proc_state state;                      \/\/ Process state$/;"	m	struct:proc_struct	typeref:enum:proc_struct::proc_state
tf	kern/process/proc.h	/^    struct trapframe *tf;                       \/\/ Trap frame for current interrupt$/;"	m	struct:proc_struct	typeref:struct:proc_struct::trapframe
wait_state	kern/process/proc.h	/^    uint32_t wait_state;                        \/\/ waiting state$/;"	m	struct:proc_struct
yptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
switch_to	kern/process/switch.S	/^switch_to:                      # switch_to(from, to)$/;"	l
schedule	kern/schedule/sched.c	/^schedule(void) {$/;"	f
wakeup_proc	kern/schedule/sched.c	/^wakeup_proc(struct proc_struct *proc) {$/;"	f
__KERN_SCHEDULE_SCHED_H__	kern/schedule/sched.h	2;"	d
__KERN_SYNC_SYNC_H__	kern/sync/sync.h	2;"	d
__intr_restore	kern/sync/sync.h	/^__intr_restore(bool flag) {$/;"	f
__intr_save	kern/sync/sync.h	/^__intr_save(void) {$/;"	f
local_intr_restore	kern/sync/sync.h	28;"	d
local_intr_save	kern/sync/sync.h	27;"	d
lock	kern/sync/sync.h	/^lock(lock_t *lock) {$/;"	f
lock_init	kern/sync/sync.h	/^lock_init(lock_t *lock) {$/;"	f
lock_t	kern/sync/sync.h	/^typedef volatile bool lock_t;$/;"	t
try_lock	kern/sync/sync.h	/^try_lock(lock_t *lock) {$/;"	f
unlock	kern/sync/sync.h	/^unlock(lock_t *lock) {$/;"	f
NUM_SYSCALLS	kern/syscall/syscall.c	79;"	d	file:
sys_exec	kern/syscall/syscall.c	/^sys_exec(uint32_t arg[]) {$/;"	f	file:
sys_exit	kern/syscall/syscall.c	/^sys_exit(uint32_t arg[]) {$/;"	f	file:
sys_fork	kern/syscall/syscall.c	/^sys_fork(uint32_t arg[]) {$/;"	f	file:
sys_getpid	kern/syscall/syscall.c	/^sys_getpid(uint32_t arg[]) {$/;"	f	file:
sys_kill	kern/syscall/syscall.c	/^sys_kill(uint32_t arg[]) {$/;"	f	file:
sys_pgdir	kern/syscall/syscall.c	/^sys_pgdir(uint32_t arg[]) {$/;"	f	file:
sys_putc	kern/syscall/syscall.c	/^sys_putc(uint32_t arg[]) {$/;"	f	file:
sys_wait	kern/syscall/syscall.c	/^sys_wait(uint32_t arg[]) {$/;"	f	file:
sys_yield	kern/syscall/syscall.c	/^sys_yield(uint32_t arg[]) {$/;"	f	file:
syscall	kern/syscall/syscall.c	/^syscall(void) {$/;"	f
syscalls	kern/syscall/syscall.c	/^static int (*syscalls[])(uint32_t arg[]) = {$/;"	v	file:
__KERN_SYSCALL_SYSCALL_H__	kern/syscall/syscall.h	2;"	d
IA32flags	kern/trap/trap.c	/^static const char *IA32flags[] = {$/;"	v	file:
TICK_NUM	kern/trap/trap.c	19;"	d	file:
idt	kern/trap/trap.c	/^static struct gatedesc idt[256] = {{0}};$/;"	v	typeref:struct:gatedesc	file:
idt_init	kern/trap/trap.c	/^idt_init(void) {$/;"	f
idt_pd	kern/trap/trap.c	/^static struct pseudodesc idt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
in_swap_tick_event	kern/trap/trap.c	/^static volatile int in_swap_tick_event = 0;$/;"	v	file:
int_gate	kern/trap/trap.c	164;"	d	file:
pgfault_handler	kern/trap/trap.c	/^pgfault_handler(struct trapframe *tf) {$/;"	f	file:
print_pgfault	kern/trap/trap.c	/^print_pgfault(struct trapframe *tf) {$/;"	f	file:
print_regs	kern/trap/trap.c	/^print_regs(struct pushregs *regs) {$/;"	f
print_ticks	kern/trap/trap.c	/^static void print_ticks() {$/;"	f	file:
print_trapframe	kern/trap/trap.c	/^print_trapframe(struct trapframe *tf) {$/;"	f
tmp_kernel_frame	kern/trap/trap.c	/^struct trapframe *tmp_kernel_frame, tmp_user_frame;$/;"	v	typeref:struct:trapframe
tmp_user_frame	kern/trap/trap.c	/^struct trapframe *tmp_kernel_frame, tmp_user_frame;$/;"	v	typeref:struct:
trap	kern/trap/trap.c	/^trap(struct trapframe *tf) {$/;"	f
trap_dispatch	kern/trap/trap.c	/^trap_dispatch(struct trapframe *tf) {$/;"	f	file:
trap_in_kernel	kern/trap/trap.c	/^trap_in_kernel(struct trapframe *tf) {$/;"	f
trapname	kern/trap/trap.c	/^trapname(int trapno) {$/;"	f	file:
IRQ_COM1	kern/trap/trap.h	35;"	d
IRQ_ERROR	kern/trap/trap.h	38;"	d
IRQ_IDE1	kern/trap/trap.h	36;"	d
IRQ_IDE2	kern/trap/trap.h	37;"	d
IRQ_KBD	kern/trap/trap.h	34;"	d
IRQ_OFFSET	kern/trap/trap.h	31;"	d
IRQ_SPURIOUS	kern/trap/trap.h	39;"	d
IRQ_TIMER	kern/trap/trap.h	33;"	d
T_ALIGN	kern/trap/trap.h	26;"	d
T_BOUND	kern/trap/trap.h	14;"	d
T_BRKPT	kern/trap/trap.h	12;"	d
T_DBLFLT	kern/trap/trap.h	17;"	d
T_DEBUG	kern/trap/trap.h	10;"	d
T_DEVICE	kern/trap/trap.h	16;"	d
T_DIVIDE	kern/trap/trap.h	9;"	d
T_FPERR	kern/trap/trap.h	25;"	d
T_GPFLT	kern/trap/trap.h	22;"	d
T_ILLOP	kern/trap/trap.h	15;"	d
T_MCHK	kern/trap/trap.h	27;"	d
T_NMI	kern/trap/trap.h	11;"	d
T_OFLOW	kern/trap/trap.h	13;"	d
T_PGFLT	kern/trap/trap.h	23;"	d
T_SEGNP	kern/trap/trap.h	20;"	d
T_SIMDERR	kern/trap/trap.h	28;"	d
T_STACK	kern/trap/trap.h	21;"	d
T_SWITCH_TOK	kern/trap/trap.h	46;"	d
T_SWITCH_TOU	kern/trap/trap.h	45;"	d
T_TSS	kern/trap/trap.h	19;"	d
__KERN_TRAP_TRAP_H__	kern/trap/trap.h	2;"	d
pushregs	kern/trap/trap.h	/^struct pushregs {$/;"	s
reg_eax	kern/trap/trap.h	/^    uint32_t reg_eax;$/;"	m	struct:pushregs
reg_ebp	kern/trap/trap.h	/^    uint32_t reg_ebp;$/;"	m	struct:pushregs
reg_ebx	kern/trap/trap.h	/^    uint32_t reg_ebx;$/;"	m	struct:pushregs
reg_ecx	kern/trap/trap.h	/^    uint32_t reg_ecx;$/;"	m	struct:pushregs
reg_edi	kern/trap/trap.h	/^    uint32_t reg_edi;$/;"	m	struct:pushregs
reg_edx	kern/trap/trap.h	/^    uint32_t reg_edx;$/;"	m	struct:pushregs
reg_esi	kern/trap/trap.h	/^    uint32_t reg_esi;$/;"	m	struct:pushregs
reg_oesp	kern/trap/trap.h	/^    uint32_t reg_oesp;          \/* Useless *\/$/;"	m	struct:pushregs
tf_cs	kern/trap/trap.h	/^    uint16_t tf_cs;$/;"	m	struct:trapframe
tf_ds	kern/trap/trap.h	/^    uint16_t tf_ds;$/;"	m	struct:trapframe
tf_eflags	kern/trap/trap.h	/^    uint32_t tf_eflags;$/;"	m	struct:trapframe
tf_eip	kern/trap/trap.h	/^    uintptr_t tf_eip;$/;"	m	struct:trapframe
tf_err	kern/trap/trap.h	/^    uint32_t tf_err;$/;"	m	struct:trapframe
tf_es	kern/trap/trap.h	/^    uint16_t tf_es;$/;"	m	struct:trapframe
tf_esp	kern/trap/trap.h	/^    uintptr_t tf_esp;$/;"	m	struct:trapframe
tf_fs	kern/trap/trap.h	/^    uint16_t tf_fs;$/;"	m	struct:trapframe
tf_gs	kern/trap/trap.h	/^    uint16_t tf_gs;$/;"	m	struct:trapframe
tf_padding0	kern/trap/trap.h	/^    uint16_t tf_padding0;$/;"	m	struct:trapframe
tf_padding1	kern/trap/trap.h	/^    uint16_t tf_padding1;$/;"	m	struct:trapframe
tf_padding2	kern/trap/trap.h	/^    uint16_t tf_padding2;$/;"	m	struct:trapframe
tf_padding3	kern/trap/trap.h	/^    uint16_t tf_padding3;$/;"	m	struct:trapframe
tf_padding4	kern/trap/trap.h	/^    uint16_t tf_padding4;$/;"	m	struct:trapframe
tf_padding5	kern/trap/trap.h	/^    uint16_t tf_padding5;$/;"	m	struct:trapframe
tf_regs	kern/trap/trap.h	/^    struct pushregs tf_regs;$/;"	m	struct:trapframe	typeref:struct:trapframe::pushregs
tf_ss	kern/trap/trap.h	/^    uint16_t tf_ss;$/;"	m	struct:trapframe
tf_trapno	kern/trap/trap.h	/^    uint32_t tf_trapno;$/;"	m	struct:trapframe
trapframe	kern/trap/trap.h	/^struct trapframe {$/;"	s
__alltraps	kern/trap/trapentry.S	/^__alltraps:$/;"	l
__trapret	kern/trap/trapentry.S	/^__trapret:$/;"	l
forkrets	kern/trap/trapentry.S	/^forkrets:$/;"	l
__vectors	kern/trap/vectors.S	/^__vectors:$/;"	l
vector0	kern/trap/vectors.S	/^vector0:$/;"	l
vector1	kern/trap/vectors.S	/^vector1:$/;"	l
vector10	kern/trap/vectors.S	/^vector10:$/;"	l
vector100	kern/trap/vectors.S	/^vector100:$/;"	l
vector101	kern/trap/vectors.S	/^vector101:$/;"	l
vector102	kern/trap/vectors.S	/^vector102:$/;"	l
vector103	kern/trap/vectors.S	/^vector103:$/;"	l
vector104	kern/trap/vectors.S	/^vector104:$/;"	l
vector105	kern/trap/vectors.S	/^vector105:$/;"	l
vector106	kern/trap/vectors.S	/^vector106:$/;"	l
vector107	kern/trap/vectors.S	/^vector107:$/;"	l
vector108	kern/trap/vectors.S	/^vector108:$/;"	l
vector109	kern/trap/vectors.S	/^vector109:$/;"	l
vector11	kern/trap/vectors.S	/^vector11:$/;"	l
vector110	kern/trap/vectors.S	/^vector110:$/;"	l
vector111	kern/trap/vectors.S	/^vector111:$/;"	l
vector112	kern/trap/vectors.S	/^vector112:$/;"	l
vector113	kern/trap/vectors.S	/^vector113:$/;"	l
vector114	kern/trap/vectors.S	/^vector114:$/;"	l
vector115	kern/trap/vectors.S	/^vector115:$/;"	l
vector116	kern/trap/vectors.S	/^vector116:$/;"	l
vector117	kern/trap/vectors.S	/^vector117:$/;"	l
vector118	kern/trap/vectors.S	/^vector118:$/;"	l
vector119	kern/trap/vectors.S	/^vector119:$/;"	l
vector12	kern/trap/vectors.S	/^vector12:$/;"	l
vector120	kern/trap/vectors.S	/^vector120:$/;"	l
vector121	kern/trap/vectors.S	/^vector121:$/;"	l
vector122	kern/trap/vectors.S	/^vector122:$/;"	l
vector123	kern/trap/vectors.S	/^vector123:$/;"	l
vector124	kern/trap/vectors.S	/^vector124:$/;"	l
vector125	kern/trap/vectors.S	/^vector125:$/;"	l
vector126	kern/trap/vectors.S	/^vector126:$/;"	l
vector127	kern/trap/vectors.S	/^vector127:$/;"	l
vector128	kern/trap/vectors.S	/^vector128:$/;"	l
vector129	kern/trap/vectors.S	/^vector129:$/;"	l
vector13	kern/trap/vectors.S	/^vector13:$/;"	l
vector130	kern/trap/vectors.S	/^vector130:$/;"	l
vector131	kern/trap/vectors.S	/^vector131:$/;"	l
vector132	kern/trap/vectors.S	/^vector132:$/;"	l
vector133	kern/trap/vectors.S	/^vector133:$/;"	l
vector134	kern/trap/vectors.S	/^vector134:$/;"	l
vector135	kern/trap/vectors.S	/^vector135:$/;"	l
vector136	kern/trap/vectors.S	/^vector136:$/;"	l
vector137	kern/trap/vectors.S	/^vector137:$/;"	l
vector138	kern/trap/vectors.S	/^vector138:$/;"	l
vector139	kern/trap/vectors.S	/^vector139:$/;"	l
vector14	kern/trap/vectors.S	/^vector14:$/;"	l
vector140	kern/trap/vectors.S	/^vector140:$/;"	l
vector141	kern/trap/vectors.S	/^vector141:$/;"	l
vector142	kern/trap/vectors.S	/^vector142:$/;"	l
vector143	kern/trap/vectors.S	/^vector143:$/;"	l
vector144	kern/trap/vectors.S	/^vector144:$/;"	l
vector145	kern/trap/vectors.S	/^vector145:$/;"	l
vector146	kern/trap/vectors.S	/^vector146:$/;"	l
vector147	kern/trap/vectors.S	/^vector147:$/;"	l
vector148	kern/trap/vectors.S	/^vector148:$/;"	l
vector149	kern/trap/vectors.S	/^vector149:$/;"	l
vector15	kern/trap/vectors.S	/^vector15:$/;"	l
vector150	kern/trap/vectors.S	/^vector150:$/;"	l
vector151	kern/trap/vectors.S	/^vector151:$/;"	l
vector152	kern/trap/vectors.S	/^vector152:$/;"	l
vector153	kern/trap/vectors.S	/^vector153:$/;"	l
vector154	kern/trap/vectors.S	/^vector154:$/;"	l
vector155	kern/trap/vectors.S	/^vector155:$/;"	l
vector156	kern/trap/vectors.S	/^vector156:$/;"	l
vector157	kern/trap/vectors.S	/^vector157:$/;"	l
vector158	kern/trap/vectors.S	/^vector158:$/;"	l
vector159	kern/trap/vectors.S	/^vector159:$/;"	l
vector16	kern/trap/vectors.S	/^vector16:$/;"	l
vector160	kern/trap/vectors.S	/^vector160:$/;"	l
vector161	kern/trap/vectors.S	/^vector161:$/;"	l
vector162	kern/trap/vectors.S	/^vector162:$/;"	l
vector163	kern/trap/vectors.S	/^vector163:$/;"	l
vector164	kern/trap/vectors.S	/^vector164:$/;"	l
vector165	kern/trap/vectors.S	/^vector165:$/;"	l
vector166	kern/trap/vectors.S	/^vector166:$/;"	l
vector167	kern/trap/vectors.S	/^vector167:$/;"	l
vector168	kern/trap/vectors.S	/^vector168:$/;"	l
vector169	kern/trap/vectors.S	/^vector169:$/;"	l
vector17	kern/trap/vectors.S	/^vector17:$/;"	l
vector170	kern/trap/vectors.S	/^vector170:$/;"	l
vector171	kern/trap/vectors.S	/^vector171:$/;"	l
vector172	kern/trap/vectors.S	/^vector172:$/;"	l
vector173	kern/trap/vectors.S	/^vector173:$/;"	l
vector174	kern/trap/vectors.S	/^vector174:$/;"	l
vector175	kern/trap/vectors.S	/^vector175:$/;"	l
vector176	kern/trap/vectors.S	/^vector176:$/;"	l
vector177	kern/trap/vectors.S	/^vector177:$/;"	l
vector178	kern/trap/vectors.S	/^vector178:$/;"	l
vector179	kern/trap/vectors.S	/^vector179:$/;"	l
vector18	kern/trap/vectors.S	/^vector18:$/;"	l
vector180	kern/trap/vectors.S	/^vector180:$/;"	l
vector181	kern/trap/vectors.S	/^vector181:$/;"	l
vector182	kern/trap/vectors.S	/^vector182:$/;"	l
vector183	kern/trap/vectors.S	/^vector183:$/;"	l
vector184	kern/trap/vectors.S	/^vector184:$/;"	l
vector185	kern/trap/vectors.S	/^vector185:$/;"	l
vector186	kern/trap/vectors.S	/^vector186:$/;"	l
vector187	kern/trap/vectors.S	/^vector187:$/;"	l
vector188	kern/trap/vectors.S	/^vector188:$/;"	l
vector189	kern/trap/vectors.S	/^vector189:$/;"	l
vector19	kern/trap/vectors.S	/^vector19:$/;"	l
vector190	kern/trap/vectors.S	/^vector190:$/;"	l
vector191	kern/trap/vectors.S	/^vector191:$/;"	l
vector192	kern/trap/vectors.S	/^vector192:$/;"	l
vector193	kern/trap/vectors.S	/^vector193:$/;"	l
vector194	kern/trap/vectors.S	/^vector194:$/;"	l
vector195	kern/trap/vectors.S	/^vector195:$/;"	l
vector196	kern/trap/vectors.S	/^vector196:$/;"	l
vector197	kern/trap/vectors.S	/^vector197:$/;"	l
vector198	kern/trap/vectors.S	/^vector198:$/;"	l
vector199	kern/trap/vectors.S	/^vector199:$/;"	l
vector2	kern/trap/vectors.S	/^vector2:$/;"	l
vector20	kern/trap/vectors.S	/^vector20:$/;"	l
vector200	kern/trap/vectors.S	/^vector200:$/;"	l
vector201	kern/trap/vectors.S	/^vector201:$/;"	l
vector202	kern/trap/vectors.S	/^vector202:$/;"	l
vector203	kern/trap/vectors.S	/^vector203:$/;"	l
vector204	kern/trap/vectors.S	/^vector204:$/;"	l
vector205	kern/trap/vectors.S	/^vector205:$/;"	l
vector206	kern/trap/vectors.S	/^vector206:$/;"	l
vector207	kern/trap/vectors.S	/^vector207:$/;"	l
vector208	kern/trap/vectors.S	/^vector208:$/;"	l
vector209	kern/trap/vectors.S	/^vector209:$/;"	l
vector21	kern/trap/vectors.S	/^vector21:$/;"	l
vector210	kern/trap/vectors.S	/^vector210:$/;"	l
vector211	kern/trap/vectors.S	/^vector211:$/;"	l
vector212	kern/trap/vectors.S	/^vector212:$/;"	l
vector213	kern/trap/vectors.S	/^vector213:$/;"	l
vector214	kern/trap/vectors.S	/^vector214:$/;"	l
vector215	kern/trap/vectors.S	/^vector215:$/;"	l
vector216	kern/trap/vectors.S	/^vector216:$/;"	l
vector217	kern/trap/vectors.S	/^vector217:$/;"	l
vector218	kern/trap/vectors.S	/^vector218:$/;"	l
vector219	kern/trap/vectors.S	/^vector219:$/;"	l
vector22	kern/trap/vectors.S	/^vector22:$/;"	l
vector220	kern/trap/vectors.S	/^vector220:$/;"	l
vector221	kern/trap/vectors.S	/^vector221:$/;"	l
vector222	kern/trap/vectors.S	/^vector222:$/;"	l
vector223	kern/trap/vectors.S	/^vector223:$/;"	l
vector224	kern/trap/vectors.S	/^vector224:$/;"	l
vector225	kern/trap/vectors.S	/^vector225:$/;"	l
vector226	kern/trap/vectors.S	/^vector226:$/;"	l
vector227	kern/trap/vectors.S	/^vector227:$/;"	l
vector228	kern/trap/vectors.S	/^vector228:$/;"	l
vector229	kern/trap/vectors.S	/^vector229:$/;"	l
vector23	kern/trap/vectors.S	/^vector23:$/;"	l
vector230	kern/trap/vectors.S	/^vector230:$/;"	l
vector231	kern/trap/vectors.S	/^vector231:$/;"	l
vector232	kern/trap/vectors.S	/^vector232:$/;"	l
vector233	kern/trap/vectors.S	/^vector233:$/;"	l
vector234	kern/trap/vectors.S	/^vector234:$/;"	l
vector235	kern/trap/vectors.S	/^vector235:$/;"	l
vector236	kern/trap/vectors.S	/^vector236:$/;"	l
vector237	kern/trap/vectors.S	/^vector237:$/;"	l
vector238	kern/trap/vectors.S	/^vector238:$/;"	l
vector239	kern/trap/vectors.S	/^vector239:$/;"	l
vector24	kern/trap/vectors.S	/^vector24:$/;"	l
vector240	kern/trap/vectors.S	/^vector240:$/;"	l
vector241	kern/trap/vectors.S	/^vector241:$/;"	l
vector242	kern/trap/vectors.S	/^vector242:$/;"	l
vector243	kern/trap/vectors.S	/^vector243:$/;"	l
vector244	kern/trap/vectors.S	/^vector244:$/;"	l
vector245	kern/trap/vectors.S	/^vector245:$/;"	l
vector246	kern/trap/vectors.S	/^vector246:$/;"	l
vector247	kern/trap/vectors.S	/^vector247:$/;"	l
vector248	kern/trap/vectors.S	/^vector248:$/;"	l
vector249	kern/trap/vectors.S	/^vector249:$/;"	l
vector25	kern/trap/vectors.S	/^vector25:$/;"	l
vector250	kern/trap/vectors.S	/^vector250:$/;"	l
vector251	kern/trap/vectors.S	/^vector251:$/;"	l
vector252	kern/trap/vectors.S	/^vector252:$/;"	l
vector253	kern/trap/vectors.S	/^vector253:$/;"	l
vector254	kern/trap/vectors.S	/^vector254:$/;"	l
vector255	kern/trap/vectors.S	/^vector255:$/;"	l
vector26	kern/trap/vectors.S	/^vector26:$/;"	l
vector27	kern/trap/vectors.S	/^vector27:$/;"	l
vector28	kern/trap/vectors.S	/^vector28:$/;"	l
vector29	kern/trap/vectors.S	/^vector29:$/;"	l
vector3	kern/trap/vectors.S	/^vector3:$/;"	l
vector30	kern/trap/vectors.S	/^vector30:$/;"	l
vector31	kern/trap/vectors.S	/^vector31:$/;"	l
vector32	kern/trap/vectors.S	/^vector32:$/;"	l
vector33	kern/trap/vectors.S	/^vector33:$/;"	l
vector34	kern/trap/vectors.S	/^vector34:$/;"	l
vector35	kern/trap/vectors.S	/^vector35:$/;"	l
vector36	kern/trap/vectors.S	/^vector36:$/;"	l
vector37	kern/trap/vectors.S	/^vector37:$/;"	l
vector38	kern/trap/vectors.S	/^vector38:$/;"	l
vector39	kern/trap/vectors.S	/^vector39:$/;"	l
vector4	kern/trap/vectors.S	/^vector4:$/;"	l
vector40	kern/trap/vectors.S	/^vector40:$/;"	l
vector41	kern/trap/vectors.S	/^vector41:$/;"	l
vector42	kern/trap/vectors.S	/^vector42:$/;"	l
vector43	kern/trap/vectors.S	/^vector43:$/;"	l
vector44	kern/trap/vectors.S	/^vector44:$/;"	l
vector45	kern/trap/vectors.S	/^vector45:$/;"	l
vector46	kern/trap/vectors.S	/^vector46:$/;"	l
vector47	kern/trap/vectors.S	/^vector47:$/;"	l
vector48	kern/trap/vectors.S	/^vector48:$/;"	l
vector49	kern/trap/vectors.S	/^vector49:$/;"	l
vector5	kern/trap/vectors.S	/^vector5:$/;"	l
vector50	kern/trap/vectors.S	/^vector50:$/;"	l
vector51	kern/trap/vectors.S	/^vector51:$/;"	l
vector52	kern/trap/vectors.S	/^vector52:$/;"	l
vector53	kern/trap/vectors.S	/^vector53:$/;"	l
vector54	kern/trap/vectors.S	/^vector54:$/;"	l
vector55	kern/trap/vectors.S	/^vector55:$/;"	l
vector56	kern/trap/vectors.S	/^vector56:$/;"	l
vector57	kern/trap/vectors.S	/^vector57:$/;"	l
vector58	kern/trap/vectors.S	/^vector58:$/;"	l
vector59	kern/trap/vectors.S	/^vector59:$/;"	l
vector6	kern/trap/vectors.S	/^vector6:$/;"	l
vector60	kern/trap/vectors.S	/^vector60:$/;"	l
vector61	kern/trap/vectors.S	/^vector61:$/;"	l
vector62	kern/trap/vectors.S	/^vector62:$/;"	l
vector63	kern/trap/vectors.S	/^vector63:$/;"	l
vector64	kern/trap/vectors.S	/^vector64:$/;"	l
vector65	kern/trap/vectors.S	/^vector65:$/;"	l
vector66	kern/trap/vectors.S	/^vector66:$/;"	l
vector67	kern/trap/vectors.S	/^vector67:$/;"	l
vector68	kern/trap/vectors.S	/^vector68:$/;"	l
vector69	kern/trap/vectors.S	/^vector69:$/;"	l
vector7	kern/trap/vectors.S	/^vector7:$/;"	l
vector70	kern/trap/vectors.S	/^vector70:$/;"	l
vector71	kern/trap/vectors.S	/^vector71:$/;"	l
vector72	kern/trap/vectors.S	/^vector72:$/;"	l
vector73	kern/trap/vectors.S	/^vector73:$/;"	l
vector74	kern/trap/vectors.S	/^vector74:$/;"	l
vector75	kern/trap/vectors.S	/^vector75:$/;"	l
vector76	kern/trap/vectors.S	/^vector76:$/;"	l
vector77	kern/trap/vectors.S	/^vector77:$/;"	l
vector78	kern/trap/vectors.S	/^vector78:$/;"	l
vector79	kern/trap/vectors.S	/^vector79:$/;"	l
vector8	kern/trap/vectors.S	/^vector8:$/;"	l
vector80	kern/trap/vectors.S	/^vector80:$/;"	l
vector81	kern/trap/vectors.S	/^vector81:$/;"	l
vector82	kern/trap/vectors.S	/^vector82:$/;"	l
vector83	kern/trap/vectors.S	/^vector83:$/;"	l
vector84	kern/trap/vectors.S	/^vector84:$/;"	l
vector85	kern/trap/vectors.S	/^vector85:$/;"	l
vector86	kern/trap/vectors.S	/^vector86:$/;"	l
vector87	kern/trap/vectors.S	/^vector87:$/;"	l
vector88	kern/trap/vectors.S	/^vector88:$/;"	l
vector89	kern/trap/vectors.S	/^vector89:$/;"	l
vector9	kern/trap/vectors.S	/^vector9:$/;"	l
vector90	kern/trap/vectors.S	/^vector90:$/;"	l
vector91	kern/trap/vectors.S	/^vector91:$/;"	l
vector92	kern/trap/vectors.S	/^vector92:$/;"	l
vector93	kern/trap/vectors.S	/^vector93:$/;"	l
vector94	kern/trap/vectors.S	/^vector94:$/;"	l
vector95	kern/trap/vectors.S	/^vector95:$/;"	l
vector96	kern/trap/vectors.S	/^vector96:$/;"	l
vector97	kern/trap/vectors.S	/^vector97:$/;"	l
vector98	kern/trap/vectors.S	/^vector98:$/;"	l
vector99	kern/trap/vectors.S	/^vector99:$/;"	l
__LIBS_ATOMIC_H__	libs/atomic.h	2;"	d
change_bit	libs/atomic.h	/^change_bit(int nr, volatile void *addr) {$/;"	f
clear_bit	libs/atomic.h	/^clear_bit(int nr, volatile void *addr) {$/;"	f
set_bit	libs/atomic.h	/^set_bit(int nr, volatile void *addr) {$/;"	f
test_and_clear_bit	libs/atomic.h	/^test_and_clear_bit(int nr, volatile void *addr) {$/;"	f
test_and_set_bit	libs/atomic.h	/^test_and_set_bit(int nr, volatile void *addr) {$/;"	f
test_bit	libs/atomic.h	/^test_bit(int nr, volatile void *addr) {$/;"	f
NULL	libs/defs.h	5;"	d
ROUNDDOWN	libs/defs.h	43;"	d
ROUNDUP	libs/defs.h	49;"	d
__LIBS_DEFS_H__	libs/defs.h	2;"	d
__always_inline	libs/defs.h	8;"	d
__noinline	libs/defs.h	9;"	d
__noreturn	libs/defs.h	10;"	d
bool	libs/defs.h	/^typedef int bool;$/;"	t
int16_t	libs/defs.h	/^typedef short int16_t;$/;"	t
int32_t	libs/defs.h	/^typedef int int32_t;$/;"	t
int64_t	libs/defs.h	/^typedef long long int64_t;$/;"	t
int8_t	libs/defs.h	/^typedef char int8_t;$/;"	t
intptr_t	libs/defs.h	/^typedef int32_t intptr_t;$/;"	t
offsetof	libs/defs.h	55;"	d
ppn_t	libs/defs.h	/^typedef size_t ppn_t;$/;"	t
size_t	libs/defs.h	/^typedef uintptr_t size_t;$/;"	t
to_struct	libs/defs.h	64;"	d
uint16_t	libs/defs.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	libs/defs.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	libs/defs.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	libs/defs.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	libs/defs.h	/^typedef uint32_t uintptr_t;$/;"	t
ELF_MAGIC	libs/elf.h	6;"	d
ELF_PF_R	libs/elf.h	45;"	d
ELF_PF_W	libs/elf.h	44;"	d
ELF_PF_X	libs/elf.h	43;"	d
ELF_PT_LOAD	libs/elf.h	40;"	d
__LIBS_ELF_H__	libs/elf.h	2;"	d
e_ehsize	libs/elf.h	/^    uint16_t e_ehsize;    \/\/ size of this elf header$/;"	m	struct:elfhdr
e_elf	libs/elf.h	/^    uint8_t e_elf[12];$/;"	m	struct:elfhdr
e_entry	libs/elf.h	/^    uint32_t e_entry;     \/\/ entry point if executable$/;"	m	struct:elfhdr
e_flags	libs/elf.h	/^    uint32_t e_flags;     \/\/ architecture-specific flags, usually 0$/;"	m	struct:elfhdr
e_machine	libs/elf.h	/^    uint16_t e_machine;   \/\/ 3=x86, 4=68K, etc.$/;"	m	struct:elfhdr
e_magic	libs/elf.h	/^    uint32_t e_magic;     \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
e_phentsize	libs/elf.h	/^    uint16_t e_phentsize; \/\/ size of an entry in program header$/;"	m	struct:elfhdr
e_phnum	libs/elf.h	/^    uint16_t e_phnum;     \/\/ number of entries in program header or 0$/;"	m	struct:elfhdr
e_phoff	libs/elf.h	/^    uint32_t e_phoff;     \/\/ file position of program header or 0$/;"	m	struct:elfhdr
e_shentsize	libs/elf.h	/^    uint16_t e_shentsize; \/\/ size of an entry in section header$/;"	m	struct:elfhdr
e_shnum	libs/elf.h	/^    uint16_t e_shnum;     \/\/ number of entries in section header or 0$/;"	m	struct:elfhdr
e_shoff	libs/elf.h	/^    uint32_t e_shoff;     \/\/ file position of section header or 0$/;"	m	struct:elfhdr
e_shstrndx	libs/elf.h	/^    uint16_t e_shstrndx;  \/\/ section number that contains section name strings$/;"	m	struct:elfhdr
e_type	libs/elf.h	/^    uint16_t e_type;      \/\/ 1=relocatable, 2=executable, 3=shared object, 4=core image$/;"	m	struct:elfhdr
e_version	libs/elf.h	/^    uint32_t e_version;   \/\/ file version, always 1$/;"	m	struct:elfhdr
elfhdr	libs/elf.h	/^struct elfhdr {$/;"	s
p_align	libs/elf.h	/^    uint32_t p_align;  \/\/ required alignment, invariably hardware page size$/;"	m	struct:proghdr
p_filesz	libs/elf.h	/^    uint32_t p_filesz; \/\/ size of segment in file$/;"	m	struct:proghdr
p_flags	libs/elf.h	/^    uint32_t p_flags;  \/\/ read\/write\/execute bits$/;"	m	struct:proghdr
p_memsz	libs/elf.h	/^    uint32_t p_memsz;  \/\/ size of segment in memory (bigger if contains bss）$/;"	m	struct:proghdr
p_offset	libs/elf.h	/^    uint32_t p_offset; \/\/ file offset of segment$/;"	m	struct:proghdr
p_pa	libs/elf.h	/^    uint32_t p_pa;     \/\/ physical address, not used$/;"	m	struct:proghdr
p_type	libs/elf.h	/^    uint32_t p_type;   \/\/ loadable code or data, dynamic linking info,etc.$/;"	m	struct:proghdr
p_va	libs/elf.h	/^    uint32_t p_va;     \/\/ virtual address to map segment$/;"	m	struct:proghdr
proghdr	libs/elf.h	/^struct proghdr {$/;"	s
E_BAD_PROC	libs/error.h	6;"	d
E_BUSY	libs/error.h	19;"	d
E_EXISTS	libs/error.h	27;"	d
E_FAULT	libs/error.h	10;"	d
E_INVAL	libs/error.h	7;"	d
E_INVAL_ELF	libs/error.h	12;"	d
E_ISDIR	libs/error.h	21;"	d
E_KILLED	libs/error.h	13;"	d
E_MAX_OPEN	libs/error.h	26;"	d
E_NA_DEV	libs/error.h	18;"	d
E_NOENT	libs/error.h	20;"	d
E_NOTDIR	libs/error.h	22;"	d
E_NOTEMPTY	libs/error.h	28;"	d
E_NO_DEV	libs/error.h	17;"	d
E_NO_FREE_PROC	libs/error.h	9;"	d
E_NO_MEM	libs/error.h	8;"	d
E_PANIC	libs/error.h	14;"	d
E_SEEK	libs/error.h	25;"	d
E_SWAP_FAULT	libs/error.h	11;"	d
E_TIMEOUT	libs/error.h	15;"	d
E_TOO_BIG	libs/error.h	16;"	d
E_UNIMP	libs/error.h	24;"	d
E_UNSPECIFIED	libs/error.h	5;"	d
E_XDEV	libs/error.h	23;"	d
MAXERROR	libs/error.h	30;"	d
__LIBS_ERROR_H__	libs/error.h	2;"	d
GOLDEN_RATIO_PRIME_32	libs/hash.c	4;"	d	file:
hash32	libs/hash.c	/^hash32(uint32_t val, unsigned int bits) {$/;"	f
__LIBS_LIST_H__	libs/list.h	2;"	d
__list_add	libs/list.h	/^__list_add(list_entry_t *elm, list_entry_t *prev, list_entry_t *next) {$/;"	f
__list_del	libs/list.h	/^__list_del(list_entry_t *prev, list_entry_t *next) {$/;"	f
list_add	libs/list.h	/^list_add(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_after	libs/list.h	/^list_add_after(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_before	libs/list.h	/^list_add_before(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_del	libs/list.h	/^list_del(list_entry_t *listelm) {$/;"	f
list_del_init	libs/list.h	/^list_del_init(list_entry_t *listelm) {$/;"	f
list_empty	libs/list.h	/^list_empty(list_entry_t *list) {$/;"	f
list_entry	libs/list.h	/^struct list_entry {$/;"	s
list_entry_t	libs/list.h	/^typedef struct list_entry list_entry_t;$/;"	t	typeref:struct:list_entry
list_init	libs/list.h	/^list_init(list_entry_t *elm) {$/;"	f
list_next	libs/list.h	/^list_next(list_entry_t *listelm) {$/;"	f
list_prev	libs/list.h	/^list_prev(list_entry_t *listelm) {$/;"	f
next	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::
prev	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::list_entry
buf	libs/printfmt.c	/^    char *buf;          \/\/ address pointer points to the first unused memory$/;"	m	struct:sprintbuf	file:
cnt	libs/printfmt.c	/^    int cnt;            \/\/ the number of characters that have been placed in this buffer$/;"	m	struct:sprintbuf	file:
ebuf	libs/printfmt.c	/^    char *ebuf;         \/\/ points the end of the buffer$/;"	m	struct:sprintbuf	file:
error_string	libs/printfmt.c	/^static const char * const error_string[MAXERROR + 1] = {$/;"	v	file:
getint	libs/printfmt.c	/^getint(va_list *ap, int lflag) {$/;"	f	file:
getuint	libs/printfmt.c	/^getuint(va_list *ap, int lflag) {$/;"	f	file:
printfmt	libs/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...) {$/;"	f
printnum	libs/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
snprintf	libs/printfmt.c	/^snprintf(char *str, size_t size, const char *fmt, ...) {$/;"	f
sprintbuf	libs/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	libs/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b) {$/;"	f	file:
vprintfmt	libs/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap) {$/;"	f
vsnprintf	libs/printfmt.c	/^vsnprintf(char *str, size_t size, const char *fmt, va_list ap) {$/;"	f
next	libs/rand.c	/^static unsigned long long next = 1;$/;"	v	file:
rand	libs/rand.c	/^rand(void) {$/;"	f
srand	libs/rand.c	/^srand(unsigned int seed) {$/;"	f
__LIBS_STDARG_H__	libs/stdarg.h	2;"	d
va_arg	libs/stdarg.h	8;"	d
va_end	libs/stdarg.h	9;"	d
va_list	libs/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	libs/stdarg.h	7;"	d
__LIBS_STDIO_H__	libs/stdio.h	2;"	d
RAND_MAX	libs/stdlib.h	7;"	d
__LIBS_STDLIB_H__	libs/stdlib.h	2;"	d
memcmp	libs/string.c	/^memcmp(const void *v1, const void *v2, size_t n) {$/;"	f
memcpy	libs/string.c	/^memcpy(void *dst, const void *src, size_t n) {$/;"	f
memmove	libs/string.c	/^memmove(void *dst, const void *src, size_t n) {$/;"	f
memset	libs/string.c	/^memset(void *s, char c, size_t n) {$/;"	f
strchr	libs/string.c	/^strchr(const char *s, char c) {$/;"	f
strcmp	libs/string.c	/^strcmp(const char *s1, const char *s2) {$/;"	f
strcpy	libs/string.c	/^strcpy(char *dst, const char *src) {$/;"	f
strfind	libs/string.c	/^strfind(const char *s, char c) {$/;"	f
strlen	libs/string.c	/^strlen(const char *s) {$/;"	f
strncmp	libs/string.c	/^strncmp(const char *s1, const char *s2, size_t n) {$/;"	f
strncpy	libs/string.c	/^strncpy(char *dst, const char *src, size_t len) {$/;"	f
strnlen	libs/string.c	/^strnlen(const char *s, size_t len) {$/;"	f
strtol	libs/string.c	/^strtol(const char *s, char **endptr, int base) {$/;"	f
__LIBS_STRING_H__	libs/string.h	2;"	d
CLONE_THREAD	libs/unistd.h	26;"	d
CLONE_VM	libs/unistd.h	25;"	d
SYS_brk	libs/unistd.h	17;"	d
SYS_clone	libs/unistd.h	11;"	d
SYS_exec	libs/unistd.h	10;"	d
SYS_exit	libs/unistd.h	7;"	d
SYS_fork	libs/unistd.h	8;"	d
SYS_getpid	libs/unistd.h	16;"	d
SYS_gettime	libs/unistd.h	15;"	d
SYS_kill	libs/unistd.h	14;"	d
SYS_mmap	libs/unistd.h	18;"	d
SYS_munmap	libs/unistd.h	19;"	d
SYS_pgdir	libs/unistd.h	22;"	d
SYS_putc	libs/unistd.h	21;"	d
SYS_shmem	libs/unistd.h	20;"	d
SYS_sleep	libs/unistd.h	13;"	d
SYS_wait	libs/unistd.h	9;"	d
SYS_yield	libs/unistd.h	12;"	d
T_SYSCALL	libs/unistd.h	4;"	d
__LIBS_UNISTD_H__	libs/unistd.h	2;"	d
__HAVE_ARCH_MEMCPY	libs/x86.h	283;"	d
__HAVE_ARCH_MEMMOVE	libs/x86.h	264;"	d
__HAVE_ARCH_MEMSET	libs/x86.h	250;"	d
__HAVE_ARCH_STRCMP	libs/x86.h	210;"	d
__HAVE_ARCH_STRCPY	libs/x86.h	234;"	d
__LIBS_X86_H__	libs/x86.h	2;"	d
__memcpy	libs/x86.h	/^__memcpy(void *dst, const void *src, size_t n) {$/;"	f
__memmove	libs/x86.h	/^__memmove(void *dst, const void *src, size_t n) {$/;"	f
__memset	libs/x86.h	/^__memset(void *s, char c, size_t n) {$/;"	f
__strcmp	libs/x86.h	/^__strcmp(const char *s1, const char *s2) {$/;"	f
__strcpy	libs/x86.h	/^__strcpy(char *dst, const char *src) {$/;"	f
barrier	libs/x86.h	21;"	d
breakpoint	libs/x86.h	/^breakpoint(void) {$/;"	f
cli	libs/x86.h	/^cli(void) {$/;"	f
do_div	libs/x86.h	6;"	d
inb	libs/x86.h	/^inb(uint16_t port) {$/;"	f
insl	libs/x86.h	/^insl(uint32_t port, void *addr, int cnt) {$/;"	f
invlpg	libs/x86.h	/^invlpg(void *addr) {$/;"	f
lcr0	libs/x86.h	/^lcr0(uintptr_t cr0) {$/;"	f
lcr3	libs/x86.h	/^lcr3(uintptr_t cr3) {$/;"	f
lidt	libs/x86.h	/^lidt(struct pseudodesc *pd) {$/;"	f
ltr	libs/x86.h	/^ltr(uint16_t sel) {$/;"	f
outb	libs/x86.h	/^outb(uint16_t port, uint8_t data) {$/;"	f
outsl	libs/x86.h	/^outsl(uint32_t port, const void *addr, int cnt) {$/;"	f
outw	libs/x86.h	/^outw(uint16_t port, uint16_t data) {$/;"	f
pd_base	libs/x86.h	/^    uintptr_t pd_base;      \/\/ Base address$/;"	m	struct:pseudodesc
pd_lim	libs/x86.h	/^    uint16_t pd_lim;        \/\/ Limit$/;"	m	struct:pseudodesc
pseudodesc	libs/x86.h	/^struct pseudodesc {$/;"	s
rcr0	libs/x86.h	/^rcr0(void) {$/;"	f
rcr1	libs/x86.h	/^rcr1(void) {$/;"	f
rcr2	libs/x86.h	/^rcr2(void) {$/;"	f
rcr3	libs/x86.h	/^rcr3(void) {$/;"	f
read_dr	libs/x86.h	/^read_dr(unsigned regnum) {$/;"	f
read_ebp	libs/x86.h	/^read_ebp(void) {$/;"	f
read_eflags	libs/x86.h	/^read_eflags(void) {$/;"	f
sti	libs/x86.h	/^sti(void) {$/;"	f
write_dr	libs/x86.h	/^write_dr(unsigned regnum, uint32_t value) {$/;"	f
write_eflags	libs/x86.h	/^write_eflags(uint32_t eflags) {$/;"	f
Disassembly	obj/bootblock.asm	/^Disassembly of section .startup:$/;"	l
Disassembly	obj/bootblock.asm	/^Disassembly of section .text:$/;"	l
ELFHDR	obj/bootblock.asm	/^#define ELFHDR          ((struct elfhdr *)0x10000)      \/\/ scratch space$/;"	d
bad	obj/bootblock.asm	/^bad:$/;"	l
cont	obj/bootblock.asm	/^cont:$/;"	l
eph	obj/bootblock.asm	/^    eph = ph + ELFHDR->e_phnum;$/;"	d
ph	obj/bootblock.asm	/^    ph = (struct proghdr *)((uintptr_t)ELFHDR + ELFHDR->e_phoff);$/;"	d
probe_memory	obj/bootblock.asm	/^probe_memory:$/;"	l
protcseg	obj/bootblock.asm	/^protcseg:$/;"	l
spin	obj/bootblock.asm	/^spin:$/;"	l
start	obj/bootblock.asm	/^start:$/;"	l
start_probe	obj/bootblock.asm	/^start_probe:$/;"	l
static	obj/bootblock.asm	/^static inline uint8_t$/;"	l
static	obj/bootblock.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/bootblock.asm	/^static inline void$/;"	l
static	obj/bootblock.asm	/^static void$/;"	l
void	obj/bootblock.asm	/^void$/;"	l
Disassembly	obj/kernel.asm	/^Disassembly of section .text:$/;"	l
KERNEL_EXECVE2	obj/kernel.asm	/^#define KERNEL_EXECVE2(x, xstart, xsize)        __KERNEL_EXECVE2(x, xstart, xsize)$/;"	d
MAXARGS	obj/kernel.asm	/^#define MAXARGS         16$/;"	d
NUM_SYSCALLS	obj/kernel.asm	/^#define NUM_SYSCALLS        ((sizeof(syscalls)) \/ (sizeof(syscalls[0])))$/;"	d
TICK_NUM	obj/kernel.asm	/^#define TICK_NUM 100$/;"	d
WHITESPACE	obj/kernel.asm	/^#define WHITESPACE      " \\t\\n\\r"$/;"	d
__HAVE_ARCH_MEMCPY	obj/kernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/kernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/kernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/kernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/kernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__alltraps	obj/kernel.asm	/^__alltraps:$/;"	l
__slob_get_free_page	obj/kernel.asm	/^#define __slob_get_free_page(gfp) __slob_get_free_pages(gfp, 0)$/;"	d
__trapret	obj/kernel.asm	/^__trapret:$/;"	l
addr	obj/kernel.asm	/^    addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr_6845	obj/kernel.asm	/^        addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kernel.asm	/^        addr_6845 = MONO_BASE;$/;"	d
aligned	obj/kernel.asm	/^			aligned = (slob_t *)ALIGN((unsigned long)cur, align);$/;"	d
altflag	obj/kernel.asm	/^            altflag = 1;$/;"	d
any_matches	obj/kernel.asm	/^        any_matches = 1;$/;"	d
bad_cleanup_mmap	obj/kernel.asm	/^bad_cleanup_mmap:$/;"	l
bad_dup_cleanup_mmap	obj/kernel.asm	/^bad_dup_cleanup_mmap:$/;"	l
bad_elf_cleanup_pgdir	obj/kernel.asm	/^bad_elf_cleanup_pgdir:$/;"	l
bad_fork_cleanup_kstack	obj/kernel.asm	/^bad_fork_cleanup_kstack:$/;"	l
bad_fork_cleanup_proc	obj/kernel.asm	/^bad_fork_cleanup_proc:$/;"	l
bad_mm	obj/kernel.asm	/^bad_mm:$/;"	l
bad_pgdir_cleanup_mm	obj/kernel.asm	/^bad_pgdir_cleanup_mm:$/;"	l
base	obj/kernel.asm	/^            base = 10;$/;"	d
base	obj/kernel.asm	/^            base = 16;$/;"	d
base	obj/kernel.asm	/^            base = 8;$/;"	d
base	obj/kernel.asm	/^            base = p;$/;"	d
base	obj/kernel.asm	/^        base = 10;$/;"	d
bb	obj/kernel.asm	/^	bb = slob_alloc(sizeof(bigblock_t), gfp, 0);$/;"	d
begin	obj/kernel.asm	/^                begin = ROUNDUP(begin, PGSIZE);$/;"	d
begin	obj/kernel.asm	/^                begin = freemem;$/;"	d
bigblocks	obj/kernel.asm	/^		bigblocks = bb;$/;"	d
bool	obj/kernel.asm	/^bool copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable);$/;"	l
bool	obj/kernel.asm	/^bool copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len);$/;"	l
bool	obj/kernel.asm	/^bool user_mem_check(struct mm_struct *mm, uintptr_t start, size_t len, bool write);$/;"	l
bool	obj/kernel.asm	/^bool$/;"	l
boot_cr3	obj/kernel.asm	/^    boot_cr3 = PADDR(boot_pgdir);$/;"	d
boot_pgdir	obj/kernel.asm	/^    boot_pgdir = boot_alloc_page();$/;"	d
c	obj/kernel.asm	/^            c = cons.buf[cons.rpos ++];$/;"	d
c	obj/kernel.asm	/^        c = '\\b';$/;"	d
c	obj/kernel.asm	/^        c = cons_getc();$/;"	d
c	obj/kernel.asm	/^        c = getchar();$/;"	d
c	obj/kernel.asm	/^    c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c0100000	obj/kernel.asm	/^c0100000 <kern_entry>:$/;"	l
c0100000	obj/kernel.asm	/^c0100000:	0f 01 15 18 90 12 00 	lgdtl  0x129018$/;"	l
c0100007	obj/kernel.asm	/^c0100007:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c010000c	obj/kernel.asm	/^c010000c:	8e d8                	mov    %eax,%ds$/;"	l
c010000e	obj/kernel.asm	/^c010000e:	8e c0                	mov    %eax,%es$/;"	l
c0100010	obj/kernel.asm	/^c0100010:	8e d0                	mov    %eax,%ss$/;"	l
c0100012	obj/kernel.asm	/^c0100012:	ea 19 00 10 c0 08 00 	ljmp   $0x8,$0xc0100019$/;"	l
c0100019	obj/kernel.asm	/^c0100019 <relocated>:$/;"	l
c0100019	obj/kernel.asm	/^c0100019:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
c010001e	obj/kernel.asm	/^c010001e:	bc 00 90 12 c0       	mov    $0xc0129000,%esp$/;"	l
c0100023	obj/kernel.asm	/^c0100023:	e8 02 00 00 00       	call   c010002a <kern_init>$/;"	l
c0100028	obj/kernel.asm	/^c0100028 <spin>:$/;"	l
c0100028	obj/kernel.asm	/^c0100028:	eb fe                	jmp    c0100028 <spin>$/;"	l
c010002a	obj/kernel.asm	/^c010002a <kern_init>:$/;"	l
c010002a	obj/kernel.asm	/^c010002a:	55                   	push   %ebp$/;"	l
c010002b	obj/kernel.asm	/^c010002b:	89 e5                	mov    %esp,%ebp$/;"	l
c010002d	obj/kernel.asm	/^c010002d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100030	obj/kernel.asm	/^c0100030:	ba 80 e1 19 c0       	mov    $0xc019e180,%edx$/;"	l
c0100035	obj/kernel.asm	/^c0100035:	b8 b0 ae 19 c0       	mov    $0xc019aeb0,%eax$/;"	l
c010003a	obj/kernel.asm	/^c010003a:	29 c2                	sub    %eax,%edx$/;"	l
c010003c	obj/kernel.asm	/^c010003c:	89 d0                	mov    %edx,%eax$/;"	l
c010003e	obj/kernel.asm	/^c010003e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100041	obj/kernel.asm	/^c0100041:	50                   	push   %eax$/;"	l
c0100042	obj/kernel.asm	/^c0100042:	6a 00                	push   $0x0$/;"	l
c0100044	obj/kernel.asm	/^c0100044:	68 b0 ae 19 c0       	push   $0xc019aeb0$/;"	l
c0100049	obj/kernel.asm	/^c0100049:	e8 4e ab 00 00       	call   c010ab9c <memset>$/;"	l
c010004e	obj/kernel.asm	/^c010004e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100051	obj/kernel.asm	/^c0100051:	e8 97 1d 00 00       	call   c0101ded <cons_init>$/;"	l
c0100056	obj/kernel.asm	/^c0100056:	c7 45 f4 40 b4 10 c0 	movl   $0xc010b440,-0xc(%ebp)$/;"	l
c010005d	obj/kernel.asm	/^c010005d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100060	obj/kernel.asm	/^c0100060:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100063	obj/kernel.asm	/^c0100063:	68 5c b4 10 c0       	push   $0xc010b45c$/;"	l
c0100068	obj/kernel.asm	/^c0100068:	e8 08 02 00 00       	call   c0100275 <cprintf>$/;"	l
c010006d	obj/kernel.asm	/^c010006d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100070	obj/kernel.asm	/^c0100070:	e8 5d 09 00 00       	call   c01009d2 <print_kerninfo>$/;"	l
c0100075	obj/kernel.asm	/^c0100075:	e8 88 00 00 00       	call   c0100102 <grade_backtrace>$/;"	l
c010007a	obj/kernel.asm	/^c010007a:	e8 cc 3e 00 00       	call   c0103f4b <pmm_init>$/;"	l
c010007f	obj/kernel.asm	/^c010007f:	e8 d7 1e 00 00       	call   c0101f5b <pic_init>$/;"	l
c0100084	obj/kernel.asm	/^c0100084:	e8 56 20 00 00       	call   c01020df <idt_init>$/;"	l
c0100089	obj/kernel.asm	/^c0100089:	e8 ea 58 00 00       	call   c0105978 <vmm_init>$/;"	l
c010008e	obj/kernel.asm	/^c010008e:	e8 c4 a2 00 00       	call   c010a357 <proc_init>$/;"	l
c0100093	obj/kernel.asm	/^c0100093:	e8 38 0d 00 00       	call   c0100dd0 <ide_init>$/;"	l
c0100098	obj/kernel.asm	/^c0100098:	e8 d0 62 00 00       	call   c010636d <swap_init>$/;"	l
c010009d	obj/kernel.asm	/^c010009d:	e8 04 15 00 00       	call   c01015a6 <clock_init>$/;"	l
c01000a2	obj/kernel.asm	/^c01000a2:	e8 f0 1f 00 00       	call   c0102097 <intr_enable>$/;"	l
c01000a7	obj/kernel.asm	/^c01000a7:	e8 47 a4 00 00       	call   c010a4f3 <cpu_idle>$/;"	l
c01000ac	obj/kernel.asm	/^c01000ac <grade_backtrace2>:$/;"	l
c01000ac	obj/kernel.asm	/^c01000ac:	55                   	push   %ebp$/;"	l
c01000ad	obj/kernel.asm	/^c01000ad:	89 e5                	mov    %esp,%ebp$/;"	l
c01000af	obj/kernel.asm	/^c01000af:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01000b2	obj/kernel.asm	/^c01000b2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01000b5	obj/kernel.asm	/^c01000b5:	6a 00                	push   $0x0$/;"	l
c01000b7	obj/kernel.asm	/^c01000b7:	6a 00                	push   $0x0$/;"	l
c01000b9	obj/kernel.asm	/^c01000b9:	6a 00                	push   $0x0$/;"	l
c01000bb	obj/kernel.asm	/^c01000bb:	e8 a4 0c 00 00       	call   c0100d64 <mon_backtrace>$/;"	l
c01000c0	obj/kernel.asm	/^c01000c0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01000c3	obj/kernel.asm	/^c01000c3:	c9                   	leave  $/;"	l
c01000c4	obj/kernel.asm	/^c01000c4:	c3                   	ret    $/;"	l
c01000c5	obj/kernel.asm	/^c01000c5 <grade_backtrace1>:$/;"	l
c01000c5	obj/kernel.asm	/^c01000c5:	55                   	push   %ebp$/;"	l
c01000c6	obj/kernel.asm	/^c01000c6:	89 e5                	mov    %esp,%ebp$/;"	l
c01000c8	obj/kernel.asm	/^c01000c8:	53                   	push   %ebx$/;"	l
c01000c9	obj/kernel.asm	/^c01000c9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01000cc	obj/kernel.asm	/^c01000cc:	8d 4d 0c             	lea    0xc(%ebp),%ecx$/;"	l
c01000cf	obj/kernel.asm	/^c01000cf:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01000d2	obj/kernel.asm	/^c01000d2:	8d 5d 08             	lea    0x8(%ebp),%ebx$/;"	l
c01000d5	obj/kernel.asm	/^c01000d5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01000d8	obj/kernel.asm	/^c01000d8:	51                   	push   %ecx$/;"	l
c01000d9	obj/kernel.asm	/^c01000d9:	52                   	push   %edx$/;"	l
c01000da	obj/kernel.asm	/^c01000da:	53                   	push   %ebx$/;"	l
c01000db	obj/kernel.asm	/^c01000db:	50                   	push   %eax$/;"	l
c01000dc	obj/kernel.asm	/^c01000dc:	e8 cb ff ff ff       	call   c01000ac <grade_backtrace2>$/;"	l
c01000e1	obj/kernel.asm	/^c01000e1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01000e4	obj/kernel.asm	/^c01000e4:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c01000e7	obj/kernel.asm	/^c01000e7:	c9                   	leave  $/;"	l
c01000e8	obj/kernel.asm	/^c01000e8:	c3                   	ret    $/;"	l
c01000e9	obj/kernel.asm	/^c01000e9 <grade_backtrace0>:$/;"	l
c01000e9	obj/kernel.asm	/^c01000e9:	55                   	push   %ebp$/;"	l
c01000ea	obj/kernel.asm	/^c01000ea:	89 e5                	mov    %esp,%ebp$/;"	l
c01000ec	obj/kernel.asm	/^c01000ec:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01000ef	obj/kernel.asm	/^c01000ef:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01000f2	obj/kernel.asm	/^c01000f2:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01000f5	obj/kernel.asm	/^c01000f5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01000f8	obj/kernel.asm	/^c01000f8:	e8 c8 ff ff ff       	call   c01000c5 <grade_backtrace1>$/;"	l
c01000fd	obj/kernel.asm	/^c01000fd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100100	obj/kernel.asm	/^c0100100:	c9                   	leave  $/;"	l
c0100101	obj/kernel.asm	/^c0100101:	c3                   	ret    $/;"	l
c0100102	obj/kernel.asm	/^c0100102 <grade_backtrace>:$/;"	l
c0100102	obj/kernel.asm	/^c0100102:	55                   	push   %ebp$/;"	l
c0100103	obj/kernel.asm	/^c0100103:	89 e5                	mov    %esp,%ebp$/;"	l
c0100105	obj/kernel.asm	/^c0100105:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100108	obj/kernel.asm	/^c0100108:	b8 2a 00 10 c0       	mov    $0xc010002a,%eax$/;"	l
c010010d	obj/kernel.asm	/^c010010d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100110	obj/kernel.asm	/^c0100110:	68 00 00 ff ff       	push   $0xffff0000$/;"	l
c0100115	obj/kernel.asm	/^c0100115:	50                   	push   %eax$/;"	l
c0100116	obj/kernel.asm	/^c0100116:	6a 00                	push   $0x0$/;"	l
c0100118	obj/kernel.asm	/^c0100118:	e8 cc ff ff ff       	call   c01000e9 <grade_backtrace0>$/;"	l
c010011d	obj/kernel.asm	/^c010011d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100120	obj/kernel.asm	/^c0100120:	c9                   	leave  $/;"	l
c0100121	obj/kernel.asm	/^c0100121:	c3                   	ret    $/;"	l
c0100122	obj/kernel.asm	/^c0100122 <lab1_print_cur_status>:$/;"	l
c0100122	obj/kernel.asm	/^c0100122:	55                   	push   %ebp$/;"	l
c0100123	obj/kernel.asm	/^c0100123:	89 e5                	mov    %esp,%ebp$/;"	l
c0100125	obj/kernel.asm	/^c0100125:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100128	obj/kernel.asm	/^c0100128:	8c 4d f6             	mov    %cs,-0xa(%ebp)$/;"	l
c010012b	obj/kernel.asm	/^c010012b:	8c 5d f4             	mov    %ds,-0xc(%ebp)$/;"	l
c010012e	obj/kernel.asm	/^c010012e:	8c 45 f2             	mov    %es,-0xe(%ebp)$/;"	l
c0100131	obj/kernel.asm	/^c0100131:	8c 55 f0             	mov    %ss,-0x10(%ebp)$/;"	l
c0100134	obj/kernel.asm	/^c0100134:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100138	obj/kernel.asm	/^c0100138:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010013b	obj/kernel.asm	/^c010013b:	83 e0 03             	and    $0x3,%eax$/;"	l
c010013e	obj/kernel.asm	/^c010013e:	89 c2                	mov    %eax,%edx$/;"	l
c0100140	obj/kernel.asm	/^c0100140:	a1 c0 ae 19 c0       	mov    0xc019aec0,%eax$/;"	l
c0100145	obj/kernel.asm	/^c0100145:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100148	obj/kernel.asm	/^c0100148:	52                   	push   %edx$/;"	l
c0100149	obj/kernel.asm	/^c0100149:	50                   	push   %eax$/;"	l
c010014a	obj/kernel.asm	/^c010014a:	68 61 b4 10 c0       	push   $0xc010b461$/;"	l
c010014f	obj/kernel.asm	/^c010014f:	e8 21 01 00 00       	call   c0100275 <cprintf>$/;"	l
c0100154	obj/kernel.asm	/^c0100154:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100157	obj/kernel.asm	/^c0100157:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010015b	obj/kernel.asm	/^c010015b:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c010015e	obj/kernel.asm	/^c010015e:	a1 c0 ae 19 c0       	mov    0xc019aec0,%eax$/;"	l
c0100163	obj/kernel.asm	/^c0100163:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100166	obj/kernel.asm	/^c0100166:	52                   	push   %edx$/;"	l
c0100167	obj/kernel.asm	/^c0100167:	50                   	push   %eax$/;"	l
c0100168	obj/kernel.asm	/^c0100168:	68 6f b4 10 c0       	push   $0xc010b46f$/;"	l
c010016d	obj/kernel.asm	/^c010016d:	e8 03 01 00 00       	call   c0100275 <cprintf>$/;"	l
c0100172	obj/kernel.asm	/^c0100172:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100175	obj/kernel.asm	/^c0100175:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c0100179	obj/kernel.asm	/^c0100179:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c010017c	obj/kernel.asm	/^c010017c:	a1 c0 ae 19 c0       	mov    0xc019aec0,%eax$/;"	l
c0100181	obj/kernel.asm	/^c0100181:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100184	obj/kernel.asm	/^c0100184:	52                   	push   %edx$/;"	l
c0100185	obj/kernel.asm	/^c0100185:	50                   	push   %eax$/;"	l
c0100186	obj/kernel.asm	/^c0100186:	68 7d b4 10 c0       	push   $0xc010b47d$/;"	l
c010018b	obj/kernel.asm	/^c010018b:	e8 e5 00 00 00       	call   c0100275 <cprintf>$/;"	l
c0100190	obj/kernel.asm	/^c0100190:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100193	obj/kernel.asm	/^c0100193:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0100197	obj/kernel.asm	/^c0100197:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c010019a	obj/kernel.asm	/^c010019a:	a1 c0 ae 19 c0       	mov    0xc019aec0,%eax$/;"	l
c010019f	obj/kernel.asm	/^c010019f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01001a2	obj/kernel.asm	/^c01001a2:	52                   	push   %edx$/;"	l
c01001a3	obj/kernel.asm	/^c01001a3:	50                   	push   %eax$/;"	l
c01001a4	obj/kernel.asm	/^c01001a4:	68 8b b4 10 c0       	push   $0xc010b48b$/;"	l
c01001a9	obj/kernel.asm	/^c01001a9:	e8 c7 00 00 00       	call   c0100275 <cprintf>$/;"	l
c01001ae	obj/kernel.asm	/^c01001ae:	83 c4 10             	add    $0x10,%esp$/;"	l
c01001b1	obj/kernel.asm	/^c01001b1:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c01001b5	obj/kernel.asm	/^c01001b5:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01001b8	obj/kernel.asm	/^c01001b8:	a1 c0 ae 19 c0       	mov    0xc019aec0,%eax$/;"	l
c01001bd	obj/kernel.asm	/^c01001bd:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01001c0	obj/kernel.asm	/^c01001c0:	52                   	push   %edx$/;"	l
c01001c1	obj/kernel.asm	/^c01001c1:	50                   	push   %eax$/;"	l
c01001c2	obj/kernel.asm	/^c01001c2:	68 99 b4 10 c0       	push   $0xc010b499$/;"	l
c01001c7	obj/kernel.asm	/^c01001c7:	e8 a9 00 00 00       	call   c0100275 <cprintf>$/;"	l
c01001cc	obj/kernel.asm	/^c01001cc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01001cf	obj/kernel.asm	/^c01001cf:	a1 c0 ae 19 c0       	mov    0xc019aec0,%eax$/;"	l
c01001d4	obj/kernel.asm	/^c01001d4:	83 c0 01             	add    $0x1,%eax$/;"	l
c01001d7	obj/kernel.asm	/^c01001d7:	a3 c0 ae 19 c0       	mov    %eax,0xc019aec0$/;"	l
c01001dc	obj/kernel.asm	/^c01001dc:	c9                   	leave  $/;"	l
c01001dd	obj/kernel.asm	/^c01001dd:	c3                   	ret    $/;"	l
c01001de	obj/kernel.asm	/^c01001de <lab1_switch_to_user>:$/;"	l
c01001de	obj/kernel.asm	/^c01001de:	55                   	push   %ebp$/;"	l
c01001df	obj/kernel.asm	/^c01001df:	89 e5                	mov    %esp,%ebp$/;"	l
c01001e1	obj/kernel.asm	/^c01001e1:	5d                   	pop    %ebp$/;"	l
c01001e2	obj/kernel.asm	/^c01001e2:	c3                   	ret    $/;"	l
c01001e3	obj/kernel.asm	/^c01001e3 <lab1_switch_to_kernel>:$/;"	l
c01001e3	obj/kernel.asm	/^c01001e3:	55                   	push   %ebp$/;"	l
c01001e4	obj/kernel.asm	/^c01001e4:	89 e5                	mov    %esp,%ebp$/;"	l
c01001e6	obj/kernel.asm	/^c01001e6:	5d                   	pop    %ebp$/;"	l
c01001e7	obj/kernel.asm	/^c01001e7:	c3                   	ret    $/;"	l
c01001e8	obj/kernel.asm	/^c01001e8 <lab1_switch_test>:$/;"	l
c01001e8	obj/kernel.asm	/^c01001e8:	55                   	push   %ebp$/;"	l
c01001e9	obj/kernel.asm	/^c01001e9:	89 e5                	mov    %esp,%ebp$/;"	l
c01001eb	obj/kernel.asm	/^c01001eb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01001ee	obj/kernel.asm	/^c01001ee:	e8 2f ff ff ff       	call   c0100122 <lab1_print_cur_status>$/;"	l
c01001f3	obj/kernel.asm	/^c01001f3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01001f6	obj/kernel.asm	/^c01001f6:	68 a8 b4 10 c0       	push   $0xc010b4a8$/;"	l
c01001fb	obj/kernel.asm	/^c01001fb:	e8 75 00 00 00       	call   c0100275 <cprintf>$/;"	l
c0100200	obj/kernel.asm	/^c0100200:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100203	obj/kernel.asm	/^c0100203:	e8 d6 ff ff ff       	call   c01001de <lab1_switch_to_user>$/;"	l
c0100208	obj/kernel.asm	/^c0100208:	e8 15 ff ff ff       	call   c0100122 <lab1_print_cur_status>$/;"	l
c010020d	obj/kernel.asm	/^c010020d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100210	obj/kernel.asm	/^c0100210:	68 c8 b4 10 c0       	push   $0xc010b4c8$/;"	l
c0100215	obj/kernel.asm	/^c0100215:	e8 5b 00 00 00       	call   c0100275 <cprintf>$/;"	l
c010021a	obj/kernel.asm	/^c010021a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010021d	obj/kernel.asm	/^c010021d:	e8 c1 ff ff ff       	call   c01001e3 <lab1_switch_to_kernel>$/;"	l
c0100222	obj/kernel.asm	/^c0100222:	e8 fb fe ff ff       	call   c0100122 <lab1_print_cur_status>$/;"	l
c0100227	obj/kernel.asm	/^c0100227:	c9                   	leave  $/;"	l
c0100228	obj/kernel.asm	/^c0100228:	c3                   	ret    $/;"	l
c0100229	obj/kernel.asm	/^c0100229 <cputch>:$/;"	l
c0100229	obj/kernel.asm	/^c0100229:	55                   	push   %ebp$/;"	l
c010022a	obj/kernel.asm	/^c010022a:	89 e5                	mov    %esp,%ebp$/;"	l
c010022c	obj/kernel.asm	/^c010022c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010022f	obj/kernel.asm	/^c010022f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100232	obj/kernel.asm	/^c0100232:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100235	obj/kernel.asm	/^c0100235:	e8 e3 1b 00 00       	call   c0101e1d <cons_putc>$/;"	l
c010023a	obj/kernel.asm	/^c010023a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010023d	obj/kernel.asm	/^c010023d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100240	obj/kernel.asm	/^c0100240:	8b 00                	mov    (%eax),%eax$/;"	l
c0100242	obj/kernel.asm	/^c0100242:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100245	obj/kernel.asm	/^c0100245:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100248	obj/kernel.asm	/^c0100248:	89 10                	mov    %edx,(%eax)$/;"	l
c010024a	obj/kernel.asm	/^c010024a:	c9                   	leave  $/;"	l
c010024b	obj/kernel.asm	/^c010024b:	c3                   	ret    $/;"	l
c010024c	obj/kernel.asm	/^c010024c <vcprintf>:$/;"	l
c010024c	obj/kernel.asm	/^c010024c:	55                   	push   %ebp$/;"	l
c010024d	obj/kernel.asm	/^c010024d:	89 e5                	mov    %esp,%ebp$/;"	l
c010024f	obj/kernel.asm	/^c010024f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100252	obj/kernel.asm	/^c0100252:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100259	obj/kernel.asm	/^c0100259:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010025c	obj/kernel.asm	/^c010025c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010025f	obj/kernel.asm	/^c010025f:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c0100262	obj/kernel.asm	/^c0100262:	50                   	push   %eax$/;"	l
c0100263	obj/kernel.asm	/^c0100263:	68 29 02 10 c0       	push   $0xc0100229$/;"	l
c0100268	obj/kernel.asm	/^c0100268:	e8 63 ac 00 00       	call   c010aed0 <vprintfmt>$/;"	l
c010026d	obj/kernel.asm	/^c010026d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100270	obj/kernel.asm	/^c0100270:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100273	obj/kernel.asm	/^c0100273:	c9                   	leave  $/;"	l
c0100274	obj/kernel.asm	/^c0100274:	c3                   	ret    $/;"	l
c0100275	obj/kernel.asm	/^c0100275 <cprintf>:$/;"	l
c0100275	obj/kernel.asm	/^c0100275:	55                   	push   %ebp$/;"	l
c0100276	obj/kernel.asm	/^c0100276:	89 e5                	mov    %esp,%ebp$/;"	l
c0100278	obj/kernel.asm	/^c0100278:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010027b	obj/kernel.asm	/^c010027b:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
c010027e	obj/kernel.asm	/^c010027e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100281	obj/kernel.asm	/^c0100281:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100284	obj/kernel.asm	/^c0100284:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100287	obj/kernel.asm	/^c0100287:	50                   	push   %eax$/;"	l
c0100288	obj/kernel.asm	/^c0100288:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010028b	obj/kernel.asm	/^c010028b:	e8 bc ff ff ff       	call   c010024c <vcprintf>$/;"	l
c0100290	obj/kernel.asm	/^c0100290:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100293	obj/kernel.asm	/^c0100293:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100296	obj/kernel.asm	/^c0100296:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100299	obj/kernel.asm	/^c0100299:	c9                   	leave  $/;"	l
c010029a	obj/kernel.asm	/^c010029a:	c3                   	ret    $/;"	l
c010029b	obj/kernel.asm	/^c010029b <cputchar>:$/;"	l
c010029b	obj/kernel.asm	/^c010029b:	55                   	push   %ebp$/;"	l
c010029c	obj/kernel.asm	/^c010029c:	89 e5                	mov    %esp,%ebp$/;"	l
c010029e	obj/kernel.asm	/^c010029e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01002a1	obj/kernel.asm	/^c01002a1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01002a4	obj/kernel.asm	/^c01002a4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01002a7	obj/kernel.asm	/^c01002a7:	e8 71 1b 00 00       	call   c0101e1d <cons_putc>$/;"	l
c01002ac	obj/kernel.asm	/^c01002ac:	83 c4 10             	add    $0x10,%esp$/;"	l
c01002af	obj/kernel.asm	/^c01002af:	c9                   	leave  $/;"	l
c01002b0	obj/kernel.asm	/^c01002b0:	c3                   	ret    $/;"	l
c01002b1	obj/kernel.asm	/^c01002b1 <cputs>:$/;"	l
c01002b1	obj/kernel.asm	/^c01002b1:	55                   	push   %ebp$/;"	l
c01002b2	obj/kernel.asm	/^c01002b2:	89 e5                	mov    %esp,%ebp$/;"	l
c01002b4	obj/kernel.asm	/^c01002b4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01002b7	obj/kernel.asm	/^c01002b7:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01002be	obj/kernel.asm	/^c01002be:	eb 14                	jmp    c01002d4 <cputs+0x23>$/;"	l
c01002c0	obj/kernel.asm	/^c01002c0:	0f be 45 f7          	movsbl -0x9(%ebp),%eax$/;"	l
c01002c4	obj/kernel.asm	/^c01002c4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01002c7	obj/kernel.asm	/^c01002c7:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c01002ca	obj/kernel.asm	/^c01002ca:	52                   	push   %edx$/;"	l
c01002cb	obj/kernel.asm	/^c01002cb:	50                   	push   %eax$/;"	l
c01002cc	obj/kernel.asm	/^c01002cc:	e8 58 ff ff ff       	call   c0100229 <cputch>$/;"	l
c01002d1	obj/kernel.asm	/^c01002d1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01002d4	obj/kernel.asm	/^c01002d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01002d7	obj/kernel.asm	/^c01002d7:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01002da	obj/kernel.asm	/^c01002da:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c01002dd	obj/kernel.asm	/^c01002dd:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01002e0	obj/kernel.asm	/^c01002e0:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c01002e3	obj/kernel.asm	/^c01002e3:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)$/;"	l
c01002e7	obj/kernel.asm	/^c01002e7:	75 d7                	jne    c01002c0 <cputs+0xf>$/;"	l
c01002e9	obj/kernel.asm	/^c01002e9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01002ec	obj/kernel.asm	/^c01002ec:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c01002ef	obj/kernel.asm	/^c01002ef:	50                   	push   %eax$/;"	l
c01002f0	obj/kernel.asm	/^c01002f0:	6a 0a                	push   $0xa$/;"	l
c01002f2	obj/kernel.asm	/^c01002f2:	e8 32 ff ff ff       	call   c0100229 <cputch>$/;"	l
c01002f7	obj/kernel.asm	/^c01002f7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01002fa	obj/kernel.asm	/^c01002fa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01002fd	obj/kernel.asm	/^c01002fd:	c9                   	leave  $/;"	l
c01002fe	obj/kernel.asm	/^c01002fe:	c3                   	ret    $/;"	l
c01002ff	obj/kernel.asm	/^c01002ff <getchar>:$/;"	l
c01002ff	obj/kernel.asm	/^c01002ff:	55                   	push   %ebp$/;"	l
c0100300	obj/kernel.asm	/^c0100300:	89 e5                	mov    %esp,%ebp$/;"	l
c0100302	obj/kernel.asm	/^c0100302:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100305	obj/kernel.asm	/^c0100305:	e8 5b 1b 00 00       	call   c0101e65 <cons_getc>$/;"	l
c010030a	obj/kernel.asm	/^c010030a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010030d	obj/kernel.asm	/^c010030d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100311	obj/kernel.asm	/^c0100311:	74 f2                	je     c0100305 <getchar+0x6>$/;"	l
c0100313	obj/kernel.asm	/^c0100313:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100316	obj/kernel.asm	/^c0100316:	c9                   	leave  $/;"	l
c0100317	obj/kernel.asm	/^c0100317:	c3                   	ret    $/;"	l
c0100318	obj/kernel.asm	/^c0100318 <readline>:$/;"	l
c0100318	obj/kernel.asm	/^c0100318:	55                   	push   %ebp$/;"	l
c0100319	obj/kernel.asm	/^c0100319:	89 e5                	mov    %esp,%ebp$/;"	l
c010031b	obj/kernel.asm	/^c010031b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010031e	obj/kernel.asm	/^c010031e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100322	obj/kernel.asm	/^c0100322:	74 13                	je     c0100337 <readline+0x1f>$/;"	l
c0100324	obj/kernel.asm	/^c0100324:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100327	obj/kernel.asm	/^c0100327:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010032a	obj/kernel.asm	/^c010032a:	68 e7 b4 10 c0       	push   $0xc010b4e7$/;"	l
c010032f	obj/kernel.asm	/^c010032f:	e8 41 ff ff ff       	call   c0100275 <cprintf>$/;"	l
c0100334	obj/kernel.asm	/^c0100334:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100337	obj/kernel.asm	/^c0100337:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010033e	obj/kernel.asm	/^c010033e:	e8 bc ff ff ff       	call   c01002ff <getchar>$/;"	l
c0100343	obj/kernel.asm	/^c0100343:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100346	obj/kernel.asm	/^c0100346:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010034a	obj/kernel.asm	/^c010034a:	79 0a                	jns    c0100356 <readline+0x3e>$/;"	l
c010034c	obj/kernel.asm	/^c010034c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100351	obj/kernel.asm	/^c0100351:	e9 82 00 00 00       	jmp    c01003d8 <readline+0xc0>$/;"	l
c0100356	obj/kernel.asm	/^c0100356:	83 7d f0 1f          	cmpl   $0x1f,-0x10(%ebp)$/;"	l
c010035a	obj/kernel.asm	/^c010035a:	7e 2b                	jle    c0100387 <readline+0x6f>$/;"	l
c010035c	obj/kernel.asm	/^c010035c:	81 7d f4 fe 03 00 00 	cmpl   $0x3fe,-0xc(%ebp)$/;"	l
c0100363	obj/kernel.asm	/^c0100363:	7f 22                	jg     c0100387 <readline+0x6f>$/;"	l
c0100365	obj/kernel.asm	/^c0100365:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100368	obj/kernel.asm	/^c0100368:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010036b	obj/kernel.asm	/^c010036b:	e8 2b ff ff ff       	call   c010029b <cputchar>$/;"	l
c0100370	obj/kernel.asm	/^c0100370:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100373	obj/kernel.asm	/^c0100373:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100376	obj/kernel.asm	/^c0100376:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100379	obj/kernel.asm	/^c0100379:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010037c	obj/kernel.asm	/^c010037c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010037f	obj/kernel.asm	/^c010037f:	88 90 00 af 19 c0    	mov    %dl,-0x3fe65100(%eax)$/;"	l
c0100385	obj/kernel.asm	/^c0100385:	eb 4c                	jmp    c01003d3 <readline+0xbb>$/;"	l
c0100387	obj/kernel.asm	/^c0100387:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)$/;"	l
c010038b	obj/kernel.asm	/^c010038b:	75 1a                	jne    c01003a7 <readline+0x8f>$/;"	l
c010038d	obj/kernel.asm	/^c010038d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100391	obj/kernel.asm	/^c0100391:	7e 14                	jle    c01003a7 <readline+0x8f>$/;"	l
c0100393	obj/kernel.asm	/^c0100393:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100396	obj/kernel.asm	/^c0100396:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0100399	obj/kernel.asm	/^c0100399:	e8 fd fe ff ff       	call   c010029b <cputchar>$/;"	l
c010039e	obj/kernel.asm	/^c010039e:	83 c4 10             	add    $0x10,%esp$/;"	l
c01003a1	obj/kernel.asm	/^c01003a1:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c01003a5	obj/kernel.asm	/^c01003a5:	eb 2c                	jmp    c01003d3 <readline+0xbb>$/;"	l
c01003a7	obj/kernel.asm	/^c01003a7:	83 7d f0 0a          	cmpl   $0xa,-0x10(%ebp)$/;"	l
c01003ab	obj/kernel.asm	/^c01003ab:	74 06                	je     c01003b3 <readline+0x9b>$/;"	l
c01003ad	obj/kernel.asm	/^c01003ad:	83 7d f0 0d          	cmpl   $0xd,-0x10(%ebp)$/;"	l
c01003b1	obj/kernel.asm	/^c01003b1:	75 20                	jne    c01003d3 <readline+0xbb>$/;"	l
c01003b3	obj/kernel.asm	/^c01003b3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01003b6	obj/kernel.asm	/^c01003b6:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01003b9	obj/kernel.asm	/^c01003b9:	e8 dd fe ff ff       	call   c010029b <cputchar>$/;"	l
c01003be	obj/kernel.asm	/^c01003be:	83 c4 10             	add    $0x10,%esp$/;"	l
c01003c1	obj/kernel.asm	/^c01003c1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01003c4	obj/kernel.asm	/^c01003c4:	05 00 af 19 c0       	add    $0xc019af00,%eax$/;"	l
c01003c9	obj/kernel.asm	/^c01003c9:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01003cc	obj/kernel.asm	/^c01003cc:	b8 00 af 19 c0       	mov    $0xc019af00,%eax$/;"	l
c01003d1	obj/kernel.asm	/^c01003d1:	eb 05                	jmp    c01003d8 <readline+0xc0>$/;"	l
c01003d3	obj/kernel.asm	/^c01003d3:	e9 66 ff ff ff       	jmp    c010033e <readline+0x26>$/;"	l
c01003d8	obj/kernel.asm	/^c01003d8:	c9                   	leave  $/;"	l
c01003d9	obj/kernel.asm	/^c01003d9:	c3                   	ret    $/;"	l
c01003da	obj/kernel.asm	/^c01003da <__panic>:$/;"	l
c01003da	obj/kernel.asm	/^c01003da:	55                   	push   %ebp$/;"	l
c01003db	obj/kernel.asm	/^c01003db:	89 e5                	mov    %esp,%ebp$/;"	l
c01003dd	obj/kernel.asm	/^c01003dd:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01003e0	obj/kernel.asm	/^c01003e0:	a1 00 b3 19 c0       	mov    0xc019b300,%eax$/;"	l
c01003e5	obj/kernel.asm	/^c01003e5:	85 c0                	test   %eax,%eax$/;"	l
c01003e7	obj/kernel.asm	/^c01003e7:	74 02                	je     c01003eb <__panic+0x11>$/;"	l
c01003e9	obj/kernel.asm	/^c01003e9:	eb 48                	jmp    c0100433 <__panic+0x59>$/;"	l
c01003eb	obj/kernel.asm	/^c01003eb:	c7 05 00 b3 19 c0 01 	movl   $0x1,0xc019b300$/;"	l
c01003f2	obj/kernel.asm	/^c01003f2:	00 00 00 $/;"	l
c01003f5	obj/kernel.asm	/^c01003f5:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c01003f8	obj/kernel.asm	/^c01003f8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01003fb	obj/kernel.asm	/^c01003fb:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01003fe	obj/kernel.asm	/^c01003fe:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0100401	obj/kernel.asm	/^c0100401:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100404	obj/kernel.asm	/^c0100404:	68 ea b4 10 c0       	push   $0xc010b4ea$/;"	l
c0100409	obj/kernel.asm	/^c0100409:	e8 67 fe ff ff       	call   c0100275 <cprintf>$/;"	l
c010040e	obj/kernel.asm	/^c010040e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100411	obj/kernel.asm	/^c0100411:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100414	obj/kernel.asm	/^c0100414:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100417	obj/kernel.asm	/^c0100417:	50                   	push   %eax$/;"	l
c0100418	obj/kernel.asm	/^c0100418:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010041b	obj/kernel.asm	/^c010041b:	e8 2c fe ff ff       	call   c010024c <vcprintf>$/;"	l
c0100420	obj/kernel.asm	/^c0100420:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100423	obj/kernel.asm	/^c0100423:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100426	obj/kernel.asm	/^c0100426:	68 06 b5 10 c0       	push   $0xc010b506$/;"	l
c010042b	obj/kernel.asm	/^c010042b:	e8 45 fe ff ff       	call   c0100275 <cprintf>$/;"	l
c0100430	obj/kernel.asm	/^c0100430:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100433	obj/kernel.asm	/^c0100433:	e8 65 1c 00 00       	call   c010209d <intr_disable>$/;"	l
c0100438	obj/kernel.asm	/^c0100438:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010043b	obj/kernel.asm	/^c010043b:	6a 00                	push   $0x0$/;"	l
c010043d	obj/kernel.asm	/^c010043d:	e8 47 08 00 00       	call   c0100c89 <kmonitor>$/;"	l
c0100442	obj/kernel.asm	/^c0100442:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100445	obj/kernel.asm	/^c0100445:	eb f1                	jmp    c0100438 <__panic+0x5e>$/;"	l
c0100447	obj/kernel.asm	/^c0100447 <__warn>:$/;"	l
c0100447	obj/kernel.asm	/^c0100447:	55                   	push   %ebp$/;"	l
c0100448	obj/kernel.asm	/^c0100448:	89 e5                	mov    %esp,%ebp$/;"	l
c010044a	obj/kernel.asm	/^c010044a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010044d	obj/kernel.asm	/^c010044d:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0100450	obj/kernel.asm	/^c0100450:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100453	obj/kernel.asm	/^c0100453:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100456	obj/kernel.asm	/^c0100456:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0100459	obj/kernel.asm	/^c0100459:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010045c	obj/kernel.asm	/^c010045c:	68 08 b5 10 c0       	push   $0xc010b508$/;"	l
c0100461	obj/kernel.asm	/^c0100461:	e8 0f fe ff ff       	call   c0100275 <cprintf>$/;"	l
c0100466	obj/kernel.asm	/^c0100466:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100469	obj/kernel.asm	/^c0100469:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010046c	obj/kernel.asm	/^c010046c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010046f	obj/kernel.asm	/^c010046f:	50                   	push   %eax$/;"	l
c0100470	obj/kernel.asm	/^c0100470:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0100473	obj/kernel.asm	/^c0100473:	e8 d4 fd ff ff       	call   c010024c <vcprintf>$/;"	l
c0100478	obj/kernel.asm	/^c0100478:	83 c4 10             	add    $0x10,%esp$/;"	l
c010047b	obj/kernel.asm	/^c010047b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010047e	obj/kernel.asm	/^c010047e:	68 06 b5 10 c0       	push   $0xc010b506$/;"	l
c0100483	obj/kernel.asm	/^c0100483:	e8 ed fd ff ff       	call   c0100275 <cprintf>$/;"	l
c0100488	obj/kernel.asm	/^c0100488:	83 c4 10             	add    $0x10,%esp$/;"	l
c010048b	obj/kernel.asm	/^c010048b:	c9                   	leave  $/;"	l
c010048c	obj/kernel.asm	/^c010048c:	c3                   	ret    $/;"	l
c010048d	obj/kernel.asm	/^c010048d <is_kernel_panic>:$/;"	l
c010048d	obj/kernel.asm	/^c010048d:	55                   	push   %ebp$/;"	l
c010048e	obj/kernel.asm	/^c010048e:	89 e5                	mov    %esp,%ebp$/;"	l
c0100490	obj/kernel.asm	/^c0100490:	a1 00 b3 19 c0       	mov    0xc019b300,%eax$/;"	l
c0100495	obj/kernel.asm	/^c0100495:	5d                   	pop    %ebp$/;"	l
c0100496	obj/kernel.asm	/^c0100496:	c3                   	ret    $/;"	l
c0100497	obj/kernel.asm	/^c0100497 <stab_binsearch>:$/;"	l
c0100497	obj/kernel.asm	/^c0100497:	55                   	push   %ebp$/;"	l
c0100498	obj/kernel.asm	/^c0100498:	89 e5                	mov    %esp,%ebp$/;"	l
c010049a	obj/kernel.asm	/^c010049a:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010049d	obj/kernel.asm	/^c010049d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01004a0	obj/kernel.asm	/^c01004a0:	8b 00                	mov    (%eax),%eax$/;"	l
c01004a2	obj/kernel.asm	/^c01004a2:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01004a5	obj/kernel.asm	/^c01004a5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01004a8	obj/kernel.asm	/^c01004a8:	8b 00                	mov    (%eax),%eax$/;"	l
c01004aa	obj/kernel.asm	/^c01004aa:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01004ad	obj/kernel.asm	/^c01004ad:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01004b4	obj/kernel.asm	/^c01004b4:	e9 d2 00 00 00       	jmp    c010058b <stab_binsearch+0xf4>$/;"	l
c01004b9	obj/kernel.asm	/^c01004b9:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01004bc	obj/kernel.asm	/^c01004bc:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01004bf	obj/kernel.asm	/^c01004bf:	01 d0                	add    %edx,%eax$/;"	l
c01004c1	obj/kernel.asm	/^c01004c1:	89 c2                	mov    %eax,%edx$/;"	l
c01004c3	obj/kernel.asm	/^c01004c3:	c1 ea 1f             	shr    $0x1f,%edx$/;"	l
c01004c6	obj/kernel.asm	/^c01004c6:	01 d0                	add    %edx,%eax$/;"	l
c01004c8	obj/kernel.asm	/^c01004c8:	d1 f8                	sar    %eax$/;"	d
c01004ca	obj/kernel.asm	/^c01004ca:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01004cd	obj/kernel.asm	/^c01004cd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01004d0	obj/kernel.asm	/^c01004d0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01004d3	obj/kernel.asm	/^c01004d3:	eb 04                	jmp    c01004d9 <stab_binsearch+0x42>$/;"	l
c01004d5	obj/kernel.asm	/^c01004d5:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
c01004d9	obj/kernel.asm	/^c01004d9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01004dc	obj/kernel.asm	/^c01004dc:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01004df	obj/kernel.asm	/^c01004df:	7c 1f                	jl     c0100500 <stab_binsearch+0x69>$/;"	l
c01004e1	obj/kernel.asm	/^c01004e1:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01004e4	obj/kernel.asm	/^c01004e4:	89 d0                	mov    %edx,%eax$/;"	l
c01004e6	obj/kernel.asm	/^c01004e6:	01 c0                	add    %eax,%eax$/;"	l
c01004e8	obj/kernel.asm	/^c01004e8:	01 d0                	add    %edx,%eax$/;"	l
c01004ea	obj/kernel.asm	/^c01004ea:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01004ed	obj/kernel.asm	/^c01004ed:	89 c2                	mov    %eax,%edx$/;"	l
c01004ef	obj/kernel.asm	/^c01004ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01004f2	obj/kernel.asm	/^c01004f2:	01 d0                	add    %edx,%eax$/;"	l
c01004f4	obj/kernel.asm	/^c01004f4:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01004f8	obj/kernel.asm	/^c01004f8:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01004fb	obj/kernel.asm	/^c01004fb:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c01004fe	obj/kernel.asm	/^c01004fe:	75 d5                	jne    c01004d5 <stab_binsearch+0x3e>$/;"	l
c0100500	obj/kernel.asm	/^c0100500:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100503	obj/kernel.asm	/^c0100503:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0100506	obj/kernel.asm	/^c0100506:	7d 0b                	jge    c0100513 <stab_binsearch+0x7c>$/;"	l
c0100508	obj/kernel.asm	/^c0100508:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010050b	obj/kernel.asm	/^c010050b:	83 c0 01             	add    $0x1,%eax$/;"	l
c010050e	obj/kernel.asm	/^c010050e:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100511	obj/kernel.asm	/^c0100511:	eb 78                	jmp    c010058b <stab_binsearch+0xf4>$/;"	l
c0100513	obj/kernel.asm	/^c0100513:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010051a	obj/kernel.asm	/^c010051a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010051d	obj/kernel.asm	/^c010051d:	89 d0                	mov    %edx,%eax$/;"	l
c010051f	obj/kernel.asm	/^c010051f:	01 c0                	add    %eax,%eax$/;"	l
c0100521	obj/kernel.asm	/^c0100521:	01 d0                	add    %edx,%eax$/;"	l
c0100523	obj/kernel.asm	/^c0100523:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100526	obj/kernel.asm	/^c0100526:	89 c2                	mov    %eax,%edx$/;"	l
c0100528	obj/kernel.asm	/^c0100528:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010052b	obj/kernel.asm	/^c010052b:	01 d0                	add    %edx,%eax$/;"	l
c010052d	obj/kernel.asm	/^c010052d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100530	obj/kernel.asm	/^c0100530:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c0100533	obj/kernel.asm	/^c0100533:	73 13                	jae    c0100548 <stab_binsearch+0xb1>$/;"	l
c0100535	obj/kernel.asm	/^c0100535:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100538	obj/kernel.asm	/^c0100538:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010053b	obj/kernel.asm	/^c010053b:	89 10                	mov    %edx,(%eax)$/;"	l
c010053d	obj/kernel.asm	/^c010053d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100540	obj/kernel.asm	/^c0100540:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100543	obj/kernel.asm	/^c0100543:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100546	obj/kernel.asm	/^c0100546:	eb 43                	jmp    c010058b <stab_binsearch+0xf4>$/;"	l
c0100548	obj/kernel.asm	/^c0100548:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010054b	obj/kernel.asm	/^c010054b:	89 d0                	mov    %edx,%eax$/;"	l
c010054d	obj/kernel.asm	/^c010054d:	01 c0                	add    %eax,%eax$/;"	l
c010054f	obj/kernel.asm	/^c010054f:	01 d0                	add    %edx,%eax$/;"	l
c0100551	obj/kernel.asm	/^c0100551:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100554	obj/kernel.asm	/^c0100554:	89 c2                	mov    %eax,%edx$/;"	l
c0100556	obj/kernel.asm	/^c0100556:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100559	obj/kernel.asm	/^c0100559:	01 d0                	add    %edx,%eax$/;"	l
c010055b	obj/kernel.asm	/^c010055b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010055e	obj/kernel.asm	/^c010055e:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c0100561	obj/kernel.asm	/^c0100561:	76 16                	jbe    c0100579 <stab_binsearch+0xe2>$/;"	l
c0100563	obj/kernel.asm	/^c0100563:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100566	obj/kernel.asm	/^c0100566:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0100569	obj/kernel.asm	/^c0100569:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010056c	obj/kernel.asm	/^c010056c:	89 10                	mov    %edx,(%eax)$/;"	l
c010056e	obj/kernel.asm	/^c010056e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100571	obj/kernel.asm	/^c0100571:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100574	obj/kernel.asm	/^c0100574:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0100577	obj/kernel.asm	/^c0100577:	eb 12                	jmp    c010058b <stab_binsearch+0xf4>$/;"	l
c0100579	obj/kernel.asm	/^c0100579:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010057c	obj/kernel.asm	/^c010057c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010057f	obj/kernel.asm	/^c010057f:	89 10                	mov    %edx,(%eax)$/;"	l
c0100581	obj/kernel.asm	/^c0100581:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100584	obj/kernel.asm	/^c0100584:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100587	obj/kernel.asm	/^c0100587:	83 45 18 01          	addl   $0x1,0x18(%ebp)$/;"	l
c010058b	obj/kernel.asm	/^c010058b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010058e	obj/kernel.asm	/^c010058e:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c0100591	obj/kernel.asm	/^c0100591:	0f 8e 22 ff ff ff    	jle    c01004b9 <stab_binsearch+0x22>$/;"	l
c0100597	obj/kernel.asm	/^c0100597:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010059b	obj/kernel.asm	/^c010059b:	75 0f                	jne    c01005ac <stab_binsearch+0x115>$/;"	l
c010059d	obj/kernel.asm	/^c010059d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01005a0	obj/kernel.asm	/^c01005a0:	8b 00                	mov    (%eax),%eax$/;"	l
c01005a2	obj/kernel.asm	/^c01005a2:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01005a5	obj/kernel.asm	/^c01005a5:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01005a8	obj/kernel.asm	/^c01005a8:	89 10                	mov    %edx,(%eax)$/;"	l
c01005aa	obj/kernel.asm	/^c01005aa:	eb 3f                	jmp    c01005eb <stab_binsearch+0x154>$/;"	l
c01005ac	obj/kernel.asm	/^c01005ac:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01005af	obj/kernel.asm	/^c01005af:	8b 00                	mov    (%eax),%eax$/;"	l
c01005b1	obj/kernel.asm	/^c01005b1:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01005b4	obj/kernel.asm	/^c01005b4:	eb 04                	jmp    c01005ba <stab_binsearch+0x123>$/;"	l
c01005b6	obj/kernel.asm	/^c01005b6:	83 6d fc 01          	subl   $0x1,-0x4(%ebp)$/;"	l
c01005ba	obj/kernel.asm	/^c01005ba:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01005bd	obj/kernel.asm	/^c01005bd:	8b 00                	mov    (%eax),%eax$/;"	l
c01005bf	obj/kernel.asm	/^c01005bf:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01005c2	obj/kernel.asm	/^c01005c2:	7d 1f                	jge    c01005e3 <stab_binsearch+0x14c>$/;"	l
c01005c4	obj/kernel.asm	/^c01005c4:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01005c7	obj/kernel.asm	/^c01005c7:	89 d0                	mov    %edx,%eax$/;"	l
c01005c9	obj/kernel.asm	/^c01005c9:	01 c0                	add    %eax,%eax$/;"	l
c01005cb	obj/kernel.asm	/^c01005cb:	01 d0                	add    %edx,%eax$/;"	l
c01005cd	obj/kernel.asm	/^c01005cd:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01005d0	obj/kernel.asm	/^c01005d0:	89 c2                	mov    %eax,%edx$/;"	l
c01005d2	obj/kernel.asm	/^c01005d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01005d5	obj/kernel.asm	/^c01005d5:	01 d0                	add    %edx,%eax$/;"	l
c01005d7	obj/kernel.asm	/^c01005d7:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01005db	obj/kernel.asm	/^c01005db:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01005de	obj/kernel.asm	/^c01005de:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c01005e1	obj/kernel.asm	/^c01005e1:	75 d3                	jne    c01005b6 <stab_binsearch+0x11f>$/;"	l
c01005e3	obj/kernel.asm	/^c01005e3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01005e6	obj/kernel.asm	/^c01005e6:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01005e9	obj/kernel.asm	/^c01005e9:	89 10                	mov    %edx,(%eax)$/;"	l
c01005eb	obj/kernel.asm	/^c01005eb:	c9                   	leave  $/;"	l
c01005ec	obj/kernel.asm	/^c01005ec:	c3                   	ret    $/;"	l
c01005ed	obj/kernel.asm	/^c01005ed <debuginfo_eip>:$/;"	l
c01005ed	obj/kernel.asm	/^c01005ed:	55                   	push   %ebp$/;"	l
c01005ee	obj/kernel.asm	/^c01005ee:	89 e5                	mov    %esp,%ebp$/;"	l
c01005f0	obj/kernel.asm	/^c01005f0:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01005f3	obj/kernel.asm	/^c01005f3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01005f6	obj/kernel.asm	/^c01005f6:	c7 00 28 b5 10 c0    	movl   $0xc010b528,(%eax)$/;"	l
c01005fc	obj/kernel.asm	/^c01005fc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01005ff	obj/kernel.asm	/^c01005ff:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c0100606	obj/kernel.asm	/^c0100606:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100609	obj/kernel.asm	/^c0100609:	c7 40 08 28 b5 10 c0 	movl   $0xc010b528,0x8(%eax)$/;"	l
c0100610	obj/kernel.asm	/^c0100610:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100613	obj/kernel.asm	/^c0100613:	c7 40 0c 09 00 00 00 	movl   $0x9,0xc(%eax)$/;"	l
c010061a	obj/kernel.asm	/^c010061a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010061d	obj/kernel.asm	/^c010061d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100620	obj/kernel.asm	/^c0100620:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0100623	obj/kernel.asm	/^c0100623:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100626	obj/kernel.asm	/^c0100626:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c010062d	obj/kernel.asm	/^c010062d:	81 7d 08 ff ff ff bf 	cmpl   $0xbfffffff,0x8(%ebp)$/;"	l
c0100634	obj/kernel.asm	/^c0100634:	76 21                	jbe    c0100657 <debuginfo_eip+0x6a>$/;"	l
c0100636	obj/kernel.asm	/^c0100636:	c7 45 f4 a0 dc 10 c0 	movl   $0xc010dca0,-0xc(%ebp)$/;"	l
c010063d	obj/kernel.asm	/^c010063d:	c7 45 f0 8c 22 12 c0 	movl   $0xc012228c,-0x10(%ebp)$/;"	l
c0100644	obj/kernel.asm	/^c0100644:	c7 45 ec 8d 22 12 c0 	movl   $0xc012228d,-0x14(%ebp)$/;"	l
c010064b	obj/kernel.asm	/^c010064b:	c7 45 e8 c2 6f 12 c0 	movl   $0xc0126fc2,-0x18(%ebp)$/;"	l
c0100652	obj/kernel.asm	/^c0100652:	e9 c3 00 00 00       	jmp    c010071a <debuginfo_eip+0x12d>$/;"	l
c0100657	obj/kernel.asm	/^c0100657:	c7 45 e4 00 00 20 00 	movl   $0x200000,-0x1c(%ebp)$/;"	l
c010065e	obj/kernel.asm	/^c010065e:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0100663	obj/kernel.asm	/^c0100663:	85 c0                	test   %eax,%eax$/;"	l
c0100665	obj/kernel.asm	/^c0100665:	74 11                	je     c0100678 <debuginfo_eip+0x8b>$/;"	l
c0100667	obj/kernel.asm	/^c0100667:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010066c	obj/kernel.asm	/^c010066c:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010066f	obj/kernel.asm	/^c010066f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100672	obj/kernel.asm	/^c0100672:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0100676	obj/kernel.asm	/^c0100676:	75 0a                	jne    c0100682 <debuginfo_eip+0x95>$/;"	l
c0100678	obj/kernel.asm	/^c0100678:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010067d	obj/kernel.asm	/^c010067d:	e9 4e 03 00 00       	jmp    c01009d0 <debuginfo_eip+0x3e3>$/;"	l
c0100682	obj/kernel.asm	/^c0100682:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100685	obj/kernel.asm	/^c0100685:	6a 00                	push   $0x0$/;"	l
c0100687	obj/kernel.asm	/^c0100687:	6a 10                	push   $0x10$/;"	l
c0100689	obj/kernel.asm	/^c0100689:	50                   	push   %eax$/;"	l
c010068a	obj/kernel.asm	/^c010068a:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010068d	obj/kernel.asm	/^c010068d:	e8 44 5b 00 00       	call   c01061d6 <user_mem_check>$/;"	l
c0100692	obj/kernel.asm	/^c0100692:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100695	obj/kernel.asm	/^c0100695:	85 c0                	test   %eax,%eax$/;"	l
c0100697	obj/kernel.asm	/^c0100697:	75 0a                	jne    c01006a3 <debuginfo_eip+0xb6>$/;"	l
c0100699	obj/kernel.asm	/^c0100699:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010069e	obj/kernel.asm	/^c010069e:	e9 2d 03 00 00       	jmp    c01009d0 <debuginfo_eip+0x3e3>$/;"	l
c01006a3	obj/kernel.asm	/^c01006a3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01006a6	obj/kernel.asm	/^c01006a6:	8b 00                	mov    (%eax),%eax$/;"	l
c01006a8	obj/kernel.asm	/^c01006a8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01006ab	obj/kernel.asm	/^c01006ab:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01006ae	obj/kernel.asm	/^c01006ae:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01006b1	obj/kernel.asm	/^c01006b1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01006b4	obj/kernel.asm	/^c01006b4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01006b7	obj/kernel.asm	/^c01006b7:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01006ba	obj/kernel.asm	/^c01006ba:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01006bd	obj/kernel.asm	/^c01006bd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01006c0	obj/kernel.asm	/^c01006c0:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01006c3	obj/kernel.asm	/^c01006c3:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01006c6	obj/kernel.asm	/^c01006c6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01006c9	obj/kernel.asm	/^c01006c9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01006cc	obj/kernel.asm	/^c01006cc:	29 c2                	sub    %eax,%edx$/;"	l
c01006ce	obj/kernel.asm	/^c01006ce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01006d1	obj/kernel.asm	/^c01006d1:	6a 00                	push   $0x0$/;"	l
c01006d3	obj/kernel.asm	/^c01006d3:	52                   	push   %edx$/;"	l
c01006d4	obj/kernel.asm	/^c01006d4:	50                   	push   %eax$/;"	l
c01006d5	obj/kernel.asm	/^c01006d5:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01006d8	obj/kernel.asm	/^c01006d8:	e8 f9 5a 00 00       	call   c01061d6 <user_mem_check>$/;"	l
c01006dd	obj/kernel.asm	/^c01006dd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01006e0	obj/kernel.asm	/^c01006e0:	85 c0                	test   %eax,%eax$/;"	l
c01006e2	obj/kernel.asm	/^c01006e2:	75 0a                	jne    c01006ee <debuginfo_eip+0x101>$/;"	l
c01006e4	obj/kernel.asm	/^c01006e4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01006e9	obj/kernel.asm	/^c01006e9:	e9 e2 02 00 00       	jmp    c01009d0 <debuginfo_eip+0x3e3>$/;"	l
c01006ee	obj/kernel.asm	/^c01006ee:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01006f1	obj/kernel.asm	/^c01006f1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01006f4	obj/kernel.asm	/^c01006f4:	29 c2                	sub    %eax,%edx$/;"	l
c01006f6	obj/kernel.asm	/^c01006f6:	89 d0                	mov    %edx,%eax$/;"	l
c01006f8	obj/kernel.asm	/^c01006f8:	89 c2                	mov    %eax,%edx$/;"	l
c01006fa	obj/kernel.asm	/^c01006fa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01006fd	obj/kernel.asm	/^c01006fd:	6a 00                	push   $0x0$/;"	l
c01006ff	obj/kernel.asm	/^c01006ff:	52                   	push   %edx$/;"	l
c0100700	obj/kernel.asm	/^c0100700:	50                   	push   %eax$/;"	l
c0100701	obj/kernel.asm	/^c0100701:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0100704	obj/kernel.asm	/^c0100704:	e8 cd 5a 00 00       	call   c01061d6 <user_mem_check>$/;"	l
c0100709	obj/kernel.asm	/^c0100709:	83 c4 10             	add    $0x10,%esp$/;"	l
c010070c	obj/kernel.asm	/^c010070c:	85 c0                	test   %eax,%eax$/;"	l
c010070e	obj/kernel.asm	/^c010070e:	75 0a                	jne    c010071a <debuginfo_eip+0x12d>$/;"	l
c0100710	obj/kernel.asm	/^c0100710:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100715	obj/kernel.asm	/^c0100715:	e9 b6 02 00 00       	jmp    c01009d0 <debuginfo_eip+0x3e3>$/;"	l
c010071a	obj/kernel.asm	/^c010071a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010071d	obj/kernel.asm	/^c010071d:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0100720	obj/kernel.asm	/^c0100720:	76 0d                	jbe    c010072f <debuginfo_eip+0x142>$/;"	l
c0100722	obj/kernel.asm	/^c0100722:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100725	obj/kernel.asm	/^c0100725:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100728	obj/kernel.asm	/^c0100728:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010072b	obj/kernel.asm	/^c010072b:	84 c0                	test   %al,%al$/;"	l
c010072d	obj/kernel.asm	/^c010072d:	74 0a                	je     c0100739 <debuginfo_eip+0x14c>$/;"	l
c010072f	obj/kernel.asm	/^c010072f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100734	obj/kernel.asm	/^c0100734:	e9 97 02 00 00       	jmp    c01009d0 <debuginfo_eip+0x3e3>$/;"	l
c0100739	obj/kernel.asm	/^c0100739:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0100740	obj/kernel.asm	/^c0100740:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100743	obj/kernel.asm	/^c0100743:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100746	obj/kernel.asm	/^c0100746:	29 c2                	sub    %eax,%edx$/;"	l
c0100748	obj/kernel.asm	/^c0100748:	89 d0                	mov    %edx,%eax$/;"	l
c010074a	obj/kernel.asm	/^c010074a:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c010074d	obj/kernel.asm	/^c010074d:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
c0100753	obj/kernel.asm	/^c0100753:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100756	obj/kernel.asm	/^c0100756:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0100759	obj/kernel.asm	/^c0100759:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010075c	obj/kernel.asm	/^c010075c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010075f	obj/kernel.asm	/^c010075f:	6a 64                	push   $0x64$/;"	l
c0100761	obj/kernel.asm	/^c0100761:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c0100764	obj/kernel.asm	/^c0100764:	50                   	push   %eax$/;"	l
c0100765	obj/kernel.asm	/^c0100765:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0100768	obj/kernel.asm	/^c0100768:	50                   	push   %eax$/;"	l
c0100769	obj/kernel.asm	/^c0100769:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010076c	obj/kernel.asm	/^c010076c:	e8 26 fd ff ff       	call   c0100497 <stab_binsearch>$/;"	l
c0100771	obj/kernel.asm	/^c0100771:	83 c4 20             	add    $0x20,%esp$/;"	l
c0100774	obj/kernel.asm	/^c0100774:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100777	obj/kernel.asm	/^c0100777:	85 c0                	test   %eax,%eax$/;"	l
c0100779	obj/kernel.asm	/^c0100779:	75 0a                	jne    c0100785 <debuginfo_eip+0x198>$/;"	l
c010077b	obj/kernel.asm	/^c010077b:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100780	obj/kernel.asm	/^c0100780:	e9 4b 02 00 00       	jmp    c01009d0 <debuginfo_eip+0x3e3>$/;"	l
c0100785	obj/kernel.asm	/^c0100785:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100788	obj/kernel.asm	/^c0100788:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010078b	obj/kernel.asm	/^c010078b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010078e	obj/kernel.asm	/^c010078e:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0100791	obj/kernel.asm	/^c0100791:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100794	obj/kernel.asm	/^c0100794:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100797	obj/kernel.asm	/^c0100797:	6a 24                	push   $0x24$/;"	l
c0100799	obj/kernel.asm	/^c0100799:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
c010079c	obj/kernel.asm	/^c010079c:	50                   	push   %eax$/;"	l
c010079d	obj/kernel.asm	/^c010079d:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c01007a0	obj/kernel.asm	/^c01007a0:	50                   	push   %eax$/;"	l
c01007a1	obj/kernel.asm	/^c01007a1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01007a4	obj/kernel.asm	/^c01007a4:	e8 ee fc ff ff       	call   c0100497 <stab_binsearch>$/;"	l
c01007a9	obj/kernel.asm	/^c01007a9:	83 c4 20             	add    $0x20,%esp$/;"	l
c01007ac	obj/kernel.asm	/^c01007ac:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01007af	obj/kernel.asm	/^c01007af:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01007b2	obj/kernel.asm	/^c01007b2:	39 c2                	cmp    %eax,%edx$/;"	l
c01007b4	obj/kernel.asm	/^c01007b4:	7f 7c                	jg     c0100832 <debuginfo_eip+0x245>$/;"	l
c01007b6	obj/kernel.asm	/^c01007b6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01007b9	obj/kernel.asm	/^c01007b9:	89 c2                	mov    %eax,%edx$/;"	l
c01007bb	obj/kernel.asm	/^c01007bb:	89 d0                	mov    %edx,%eax$/;"	l
c01007bd	obj/kernel.asm	/^c01007bd:	01 c0                	add    %eax,%eax$/;"	l
c01007bf	obj/kernel.asm	/^c01007bf:	01 d0                	add    %edx,%eax$/;"	l
c01007c1	obj/kernel.asm	/^c01007c1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01007c4	obj/kernel.asm	/^c01007c4:	89 c2                	mov    %eax,%edx$/;"	l
c01007c6	obj/kernel.asm	/^c01007c6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007c9	obj/kernel.asm	/^c01007c9:	01 d0                	add    %edx,%eax$/;"	l
c01007cb	obj/kernel.asm	/^c01007cb:	8b 00                	mov    (%eax),%eax$/;"	l
c01007cd	obj/kernel.asm	/^c01007cd:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c01007d0	obj/kernel.asm	/^c01007d0:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01007d3	obj/kernel.asm	/^c01007d3:	29 d1                	sub    %edx,%ecx$/;"	l
c01007d5	obj/kernel.asm	/^c01007d5:	89 ca                	mov    %ecx,%edx$/;"	l
c01007d7	obj/kernel.asm	/^c01007d7:	39 d0                	cmp    %edx,%eax$/;"	l
c01007d9	obj/kernel.asm	/^c01007d9:	73 22                	jae    c01007fd <debuginfo_eip+0x210>$/;"	l
c01007db	obj/kernel.asm	/^c01007db:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01007de	obj/kernel.asm	/^c01007de:	89 c2                	mov    %eax,%edx$/;"	l
c01007e0	obj/kernel.asm	/^c01007e0:	89 d0                	mov    %edx,%eax$/;"	l
c01007e2	obj/kernel.asm	/^c01007e2:	01 c0                	add    %eax,%eax$/;"	l
c01007e4	obj/kernel.asm	/^c01007e4:	01 d0                	add    %edx,%eax$/;"	l
c01007e6	obj/kernel.asm	/^c01007e6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01007e9	obj/kernel.asm	/^c01007e9:	89 c2                	mov    %eax,%edx$/;"	l
c01007eb	obj/kernel.asm	/^c01007eb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007ee	obj/kernel.asm	/^c01007ee:	01 d0                	add    %edx,%eax$/;"	l
c01007f0	obj/kernel.asm	/^c01007f0:	8b 10                	mov    (%eax),%edx$/;"	l
c01007f2	obj/kernel.asm	/^c01007f2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01007f5	obj/kernel.asm	/^c01007f5:	01 c2                	add    %eax,%edx$/;"	l
c01007f7	obj/kernel.asm	/^c01007f7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01007fa	obj/kernel.asm	/^c01007fa:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01007fd	obj/kernel.asm	/^c01007fd:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100800	obj/kernel.asm	/^c0100800:	89 c2                	mov    %eax,%edx$/;"	l
c0100802	obj/kernel.asm	/^c0100802:	89 d0                	mov    %edx,%eax$/;"	l
c0100804	obj/kernel.asm	/^c0100804:	01 c0                	add    %eax,%eax$/;"	l
c0100806	obj/kernel.asm	/^c0100806:	01 d0                	add    %edx,%eax$/;"	l
c0100808	obj/kernel.asm	/^c0100808:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010080b	obj/kernel.asm	/^c010080b:	89 c2                	mov    %eax,%edx$/;"	l
c010080d	obj/kernel.asm	/^c010080d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100810	obj/kernel.asm	/^c0100810:	01 d0                	add    %edx,%eax$/;"	l
c0100812	obj/kernel.asm	/^c0100812:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0100815	obj/kernel.asm	/^c0100815:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100818	obj/kernel.asm	/^c0100818:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010081b	obj/kernel.asm	/^c010081b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010081e	obj/kernel.asm	/^c010081e:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0100821	obj/kernel.asm	/^c0100821:	29 45 08             	sub    %eax,0x8(%ebp)$/;"	l
c0100824	obj/kernel.asm	/^c0100824:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100827	obj/kernel.asm	/^c0100827:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010082a	obj/kernel.asm	/^c010082a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010082d	obj/kernel.asm	/^c010082d:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0100830	obj/kernel.asm	/^c0100830:	eb 15                	jmp    c0100847 <debuginfo_eip+0x25a>$/;"	l
c0100832	obj/kernel.asm	/^c0100832:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100835	obj/kernel.asm	/^c0100835:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100838	obj/kernel.asm	/^c0100838:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010083b	obj/kernel.asm	/^c010083b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010083e	obj/kernel.asm	/^c010083e:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100841	obj/kernel.asm	/^c0100841:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0100844	obj/kernel.asm	/^c0100844:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0100847	obj/kernel.asm	/^c0100847:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010084a	obj/kernel.asm	/^c010084a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010084d	obj/kernel.asm	/^c010084d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100850	obj/kernel.asm	/^c0100850:	6a 3a                	push   $0x3a$/;"	l
c0100852	obj/kernel.asm	/^c0100852:	50                   	push   %eax$/;"	l
c0100853	obj/kernel.asm	/^c0100853:	e8 b8 a1 00 00       	call   c010aa10 <strfind>$/;"	l
c0100858	obj/kernel.asm	/^c0100858:	83 c4 10             	add    $0x10,%esp$/;"	l
c010085b	obj/kernel.asm	/^c010085b:	89 c2                	mov    %eax,%edx$/;"	l
c010085d	obj/kernel.asm	/^c010085d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100860	obj/kernel.asm	/^c0100860:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100863	obj/kernel.asm	/^c0100863:	29 c2                	sub    %eax,%edx$/;"	l
c0100865	obj/kernel.asm	/^c0100865:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100868	obj/kernel.asm	/^c0100868:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010086b	obj/kernel.asm	/^c010086b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010086e	obj/kernel.asm	/^c010086e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100871	obj/kernel.asm	/^c0100871:	6a 44                	push   $0x44$/;"	l
c0100873	obj/kernel.asm	/^c0100873:	8d 45 c8             	lea    -0x38(%ebp),%eax$/;"	l
c0100876	obj/kernel.asm	/^c0100876:	50                   	push   %eax$/;"	l
c0100877	obj/kernel.asm	/^c0100877:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c010087a	obj/kernel.asm	/^c010087a:	50                   	push   %eax$/;"	l
c010087b	obj/kernel.asm	/^c010087b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010087e	obj/kernel.asm	/^c010087e:	e8 14 fc ff ff       	call   c0100497 <stab_binsearch>$/;"	l
c0100883	obj/kernel.asm	/^c0100883:	83 c4 20             	add    $0x20,%esp$/;"	l
c0100886	obj/kernel.asm	/^c0100886:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0100889	obj/kernel.asm	/^c0100889:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010088c	obj/kernel.asm	/^c010088c:	39 c2                	cmp    %eax,%edx$/;"	l
c010088e	obj/kernel.asm	/^c010088e:	7f 24                	jg     c01008b4 <debuginfo_eip+0x2c7>$/;"	l
c0100890	obj/kernel.asm	/^c0100890:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0100893	obj/kernel.asm	/^c0100893:	89 c2                	mov    %eax,%edx$/;"	l
c0100895	obj/kernel.asm	/^c0100895:	89 d0                	mov    %edx,%eax$/;"	l
c0100897	obj/kernel.asm	/^c0100897:	01 c0                	add    %eax,%eax$/;"	l
c0100899	obj/kernel.asm	/^c0100899:	01 d0                	add    %edx,%eax$/;"	l
c010089b	obj/kernel.asm	/^c010089b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010089e	obj/kernel.asm	/^c010089e:	89 c2                	mov    %eax,%edx$/;"	l
c01008a0	obj/kernel.asm	/^c01008a0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01008a3	obj/kernel.asm	/^c01008a3:	01 d0                	add    %edx,%eax$/;"	l
c01008a5	obj/kernel.asm	/^c01008a5:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c01008a9	obj/kernel.asm	/^c01008a9:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01008ac	obj/kernel.asm	/^c01008ac:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01008af	obj/kernel.asm	/^c01008af:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01008b2	obj/kernel.asm	/^c01008b2:	eb 13                	jmp    c01008c7 <debuginfo_eip+0x2da>$/;"	l
c01008b4	obj/kernel.asm	/^c01008b4:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01008b9	obj/kernel.asm	/^c01008b9:	e9 12 01 00 00       	jmp    c01009d0 <debuginfo_eip+0x3e3>$/;"	l
c01008be	obj/kernel.asm	/^c01008be:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01008c1	obj/kernel.asm	/^c01008c1:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01008c4	obj/kernel.asm	/^c01008c4:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01008c7	obj/kernel.asm	/^c01008c7:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01008ca	obj/kernel.asm	/^c01008ca:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01008cd	obj/kernel.asm	/^c01008cd:	39 c2                	cmp    %eax,%edx$/;"	l
c01008cf	obj/kernel.asm	/^c01008cf:	7c 56                	jl     c0100927 <debuginfo_eip+0x33a>$/;"	l
c01008d1	obj/kernel.asm	/^c01008d1:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01008d4	obj/kernel.asm	/^c01008d4:	89 c2                	mov    %eax,%edx$/;"	l
c01008d6	obj/kernel.asm	/^c01008d6:	89 d0                	mov    %edx,%eax$/;"	l
c01008d8	obj/kernel.asm	/^c01008d8:	01 c0                	add    %eax,%eax$/;"	l
c01008da	obj/kernel.asm	/^c01008da:	01 d0                	add    %edx,%eax$/;"	l
c01008dc	obj/kernel.asm	/^c01008dc:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01008df	obj/kernel.asm	/^c01008df:	89 c2                	mov    %eax,%edx$/;"	l
c01008e1	obj/kernel.asm	/^c01008e1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01008e4	obj/kernel.asm	/^c01008e4:	01 d0                	add    %edx,%eax$/;"	l
c01008e6	obj/kernel.asm	/^c01008e6:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01008ea	obj/kernel.asm	/^c01008ea:	3c 84                	cmp    $0x84,%al$/;"	l
c01008ec	obj/kernel.asm	/^c01008ec:	74 39                	je     c0100927 <debuginfo_eip+0x33a>$/;"	l
c01008ee	obj/kernel.asm	/^c01008ee:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01008f1	obj/kernel.asm	/^c01008f1:	89 c2                	mov    %eax,%edx$/;"	l
c01008f3	obj/kernel.asm	/^c01008f3:	89 d0                	mov    %edx,%eax$/;"	l
c01008f5	obj/kernel.asm	/^c01008f5:	01 c0                	add    %eax,%eax$/;"	l
c01008f7	obj/kernel.asm	/^c01008f7:	01 d0                	add    %edx,%eax$/;"	l
c01008f9	obj/kernel.asm	/^c01008f9:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01008fc	obj/kernel.asm	/^c01008fc:	89 c2                	mov    %eax,%edx$/;"	l
c01008fe	obj/kernel.asm	/^c01008fe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100901	obj/kernel.asm	/^c0100901:	01 d0                	add    %edx,%eax$/;"	l
c0100903	obj/kernel.asm	/^c0100903:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c0100907	obj/kernel.asm	/^c0100907:	3c 64                	cmp    $0x64,%al$/;"	l
c0100909	obj/kernel.asm	/^c0100909:	75 b3                	jne    c01008be <debuginfo_eip+0x2d1>$/;"	l
c010090b	obj/kernel.asm	/^c010090b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010090e	obj/kernel.asm	/^c010090e:	89 c2                	mov    %eax,%edx$/;"	l
c0100910	obj/kernel.asm	/^c0100910:	89 d0                	mov    %edx,%eax$/;"	l
c0100912	obj/kernel.asm	/^c0100912:	01 c0                	add    %eax,%eax$/;"	l
c0100914	obj/kernel.asm	/^c0100914:	01 d0                	add    %edx,%eax$/;"	l
c0100916	obj/kernel.asm	/^c0100916:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100919	obj/kernel.asm	/^c0100919:	89 c2                	mov    %eax,%edx$/;"	l
c010091b	obj/kernel.asm	/^c010091b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010091e	obj/kernel.asm	/^c010091e:	01 d0                	add    %edx,%eax$/;"	l
c0100920	obj/kernel.asm	/^c0100920:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100923	obj/kernel.asm	/^c0100923:	85 c0                	test   %eax,%eax$/;"	l
c0100925	obj/kernel.asm	/^c0100925:	74 97                	je     c01008be <debuginfo_eip+0x2d1>$/;"	l
c0100927	obj/kernel.asm	/^c0100927:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010092a	obj/kernel.asm	/^c010092a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010092d	obj/kernel.asm	/^c010092d:	39 c2                	cmp    %eax,%edx$/;"	l
c010092f	obj/kernel.asm	/^c010092f:	7c 46                	jl     c0100977 <debuginfo_eip+0x38a>$/;"	l
c0100931	obj/kernel.asm	/^c0100931:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100934	obj/kernel.asm	/^c0100934:	89 c2                	mov    %eax,%edx$/;"	l
c0100936	obj/kernel.asm	/^c0100936:	89 d0                	mov    %edx,%eax$/;"	l
c0100938	obj/kernel.asm	/^c0100938:	01 c0                	add    %eax,%eax$/;"	l
c010093a	obj/kernel.asm	/^c010093a:	01 d0                	add    %edx,%eax$/;"	l
c010093c	obj/kernel.asm	/^c010093c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010093f	obj/kernel.asm	/^c010093f:	89 c2                	mov    %eax,%edx$/;"	l
c0100941	obj/kernel.asm	/^c0100941:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100944	obj/kernel.asm	/^c0100944:	01 d0                	add    %edx,%eax$/;"	l
c0100946	obj/kernel.asm	/^c0100946:	8b 00                	mov    (%eax),%eax$/;"	l
c0100948	obj/kernel.asm	/^c0100948:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c010094b	obj/kernel.asm	/^c010094b:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010094e	obj/kernel.asm	/^c010094e:	29 d1                	sub    %edx,%ecx$/;"	l
c0100950	obj/kernel.asm	/^c0100950:	89 ca                	mov    %ecx,%edx$/;"	l
c0100952	obj/kernel.asm	/^c0100952:	39 d0                	cmp    %edx,%eax$/;"	l
c0100954	obj/kernel.asm	/^c0100954:	73 21                	jae    c0100977 <debuginfo_eip+0x38a>$/;"	l
c0100956	obj/kernel.asm	/^c0100956:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100959	obj/kernel.asm	/^c0100959:	89 c2                	mov    %eax,%edx$/;"	l
c010095b	obj/kernel.asm	/^c010095b:	89 d0                	mov    %edx,%eax$/;"	l
c010095d	obj/kernel.asm	/^c010095d:	01 c0                	add    %eax,%eax$/;"	l
c010095f	obj/kernel.asm	/^c010095f:	01 d0                	add    %edx,%eax$/;"	l
c0100961	obj/kernel.asm	/^c0100961:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100964	obj/kernel.asm	/^c0100964:	89 c2                	mov    %eax,%edx$/;"	l
c0100966	obj/kernel.asm	/^c0100966:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100969	obj/kernel.asm	/^c0100969:	01 d0                	add    %edx,%eax$/;"	l
c010096b	obj/kernel.asm	/^c010096b:	8b 10                	mov    (%eax),%edx$/;"	l
c010096d	obj/kernel.asm	/^c010096d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100970	obj/kernel.asm	/^c0100970:	01 c2                	add    %eax,%edx$/;"	l
c0100972	obj/kernel.asm	/^c0100972:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100975	obj/kernel.asm	/^c0100975:	89 10                	mov    %edx,(%eax)$/;"	l
c0100977	obj/kernel.asm	/^c0100977:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010097a	obj/kernel.asm	/^c010097a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010097d	obj/kernel.asm	/^c010097d:	39 c2                	cmp    %eax,%edx$/;"	l
c010097f	obj/kernel.asm	/^c010097f:	7d 4a                	jge    c01009cb <debuginfo_eip+0x3de>$/;"	l
c0100981	obj/kernel.asm	/^c0100981:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100984	obj/kernel.asm	/^c0100984:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100987	obj/kernel.asm	/^c0100987:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010098a	obj/kernel.asm	/^c010098a:	eb 18                	jmp    c01009a4 <debuginfo_eip+0x3b7>$/;"	l
c010098c	obj/kernel.asm	/^c010098c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010098f	obj/kernel.asm	/^c010098f:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0100992	obj/kernel.asm	/^c0100992:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100995	obj/kernel.asm	/^c0100995:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100998	obj/kernel.asm	/^c0100998:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010099b	obj/kernel.asm	/^c010099b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010099e	obj/kernel.asm	/^c010099e:	83 c0 01             	add    $0x1,%eax$/;"	l
c01009a1	obj/kernel.asm	/^c01009a1:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01009a4	obj/kernel.asm	/^c01009a4:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01009a7	obj/kernel.asm	/^c01009a7:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01009aa	obj/kernel.asm	/^c01009aa:	39 c2                	cmp    %eax,%edx$/;"	l
c01009ac	obj/kernel.asm	/^c01009ac:	7d 1d                	jge    c01009cb <debuginfo_eip+0x3de>$/;"	l
c01009ae	obj/kernel.asm	/^c01009ae:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01009b1	obj/kernel.asm	/^c01009b1:	89 c2                	mov    %eax,%edx$/;"	l
c01009b3	obj/kernel.asm	/^c01009b3:	89 d0                	mov    %edx,%eax$/;"	l
c01009b5	obj/kernel.asm	/^c01009b5:	01 c0                	add    %eax,%eax$/;"	l
c01009b7	obj/kernel.asm	/^c01009b7:	01 d0                	add    %edx,%eax$/;"	l
c01009b9	obj/kernel.asm	/^c01009b9:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01009bc	obj/kernel.asm	/^c01009bc:	89 c2                	mov    %eax,%edx$/;"	l
c01009be	obj/kernel.asm	/^c01009be:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01009c1	obj/kernel.asm	/^c01009c1:	01 d0                	add    %edx,%eax$/;"	l
c01009c3	obj/kernel.asm	/^c01009c3:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01009c7	obj/kernel.asm	/^c01009c7:	3c a0                	cmp    $0xa0,%al$/;"	l
c01009c9	obj/kernel.asm	/^c01009c9:	74 c1                	je     c010098c <debuginfo_eip+0x39f>$/;"	l
c01009cb	obj/kernel.asm	/^c01009cb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01009d0	obj/kernel.asm	/^c01009d0:	c9                   	leave  $/;"	l
c01009d1	obj/kernel.asm	/^c01009d1:	c3                   	ret    $/;"	l
c01009d2	obj/kernel.asm	/^c01009d2 <print_kerninfo>:$/;"	l
c01009d2	obj/kernel.asm	/^c01009d2:	55                   	push   %ebp$/;"	l
c01009d3	obj/kernel.asm	/^c01009d3:	89 e5                	mov    %esp,%ebp$/;"	l
c01009d5	obj/kernel.asm	/^c01009d5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01009d8	obj/kernel.asm	/^c01009d8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01009db	obj/kernel.asm	/^c01009db:	68 32 b5 10 c0       	push   $0xc010b532$/;"	l
c01009e0	obj/kernel.asm	/^c01009e0:	e8 90 f8 ff ff       	call   c0100275 <cprintf>$/;"	l
c01009e5	obj/kernel.asm	/^c01009e5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01009e8	obj/kernel.asm	/^c01009e8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01009eb	obj/kernel.asm	/^c01009eb:	68 2a 00 10 c0       	push   $0xc010002a$/;"	l
c01009f0	obj/kernel.asm	/^c01009f0:	68 4b b5 10 c0       	push   $0xc010b54b$/;"	l
c01009f5	obj/kernel.asm	/^c01009f5:	e8 7b f8 ff ff       	call   c0100275 <cprintf>$/;"	l
c01009fa	obj/kernel.asm	/^c01009fa:	83 c4 10             	add    $0x10,%esp$/;"	l
c01009fd	obj/kernel.asm	/^c01009fd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100a00	obj/kernel.asm	/^c0100a00:	68 29 b4 10 c0       	push   $0xc010b429$/;"	l
c0100a05	obj/kernel.asm	/^c0100a05:	68 63 b5 10 c0       	push   $0xc010b563$/;"	l
c0100a0a	obj/kernel.asm	/^c0100a0a:	e8 66 f8 ff ff       	call   c0100275 <cprintf>$/;"	l
c0100a0f	obj/kernel.asm	/^c0100a0f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a12	obj/kernel.asm	/^c0100a12:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100a15	obj/kernel.asm	/^c0100a15:	68 b0 ae 19 c0       	push   $0xc019aeb0$/;"	l
c0100a1a	obj/kernel.asm	/^c0100a1a:	68 7b b5 10 c0       	push   $0xc010b57b$/;"	l
c0100a1f	obj/kernel.asm	/^c0100a1f:	e8 51 f8 ff ff       	call   c0100275 <cprintf>$/;"	l
c0100a24	obj/kernel.asm	/^c0100a24:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a27	obj/kernel.asm	/^c0100a27:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100a2a	obj/kernel.asm	/^c0100a2a:	68 80 e1 19 c0       	push   $0xc019e180$/;"	l
c0100a2f	obj/kernel.asm	/^c0100a2f:	68 93 b5 10 c0       	push   $0xc010b593$/;"	l
c0100a34	obj/kernel.asm	/^c0100a34:	e8 3c f8 ff ff       	call   c0100275 <cprintf>$/;"	l
c0100a39	obj/kernel.asm	/^c0100a39:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a3c	obj/kernel.asm	/^c0100a3c:	b8 80 e1 19 c0       	mov    $0xc019e180,%eax$/;"	l
c0100a41	obj/kernel.asm	/^c0100a41:	05 ff 03 00 00       	add    $0x3ff,%eax$/;"	l
c0100a46	obj/kernel.asm	/^c0100a46:	ba 2a 00 10 c0       	mov    $0xc010002a,%edx$/;"	l
c0100a4b	obj/kernel.asm	/^c0100a4b:	29 d0                	sub    %edx,%eax$/;"	l
c0100a4d	obj/kernel.asm	/^c0100a4d:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
c0100a53	obj/kernel.asm	/^c0100a53:	85 c0                	test   %eax,%eax$/;"	l
c0100a55	obj/kernel.asm	/^c0100a55:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c0100a58	obj/kernel.asm	/^c0100a58:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
c0100a5b	obj/kernel.asm	/^c0100a5b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100a5e	obj/kernel.asm	/^c0100a5e:	50                   	push   %eax$/;"	l
c0100a5f	obj/kernel.asm	/^c0100a5f:	68 ac b5 10 c0       	push   $0xc010b5ac$/;"	l
c0100a64	obj/kernel.asm	/^c0100a64:	e8 0c f8 ff ff       	call   c0100275 <cprintf>$/;"	l
c0100a69	obj/kernel.asm	/^c0100a69:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a6c	obj/kernel.asm	/^c0100a6c:	c9                   	leave  $/;"	l
c0100a6d	obj/kernel.asm	/^c0100a6d:	c3                   	ret    $/;"	l
c0100a6e	obj/kernel.asm	/^c0100a6e <print_debuginfo>:$/;"	l
c0100a6e	obj/kernel.asm	/^c0100a6e:	55                   	push   %ebp$/;"	l
c0100a6f	obj/kernel.asm	/^c0100a6f:	89 e5                	mov    %esp,%ebp$/;"	l
c0100a71	obj/kernel.asm	/^c0100a71:	81 ec 28 01 00 00    	sub    $0x128,%esp$/;"	l
c0100a77	obj/kernel.asm	/^c0100a77:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100a7a	obj/kernel.asm	/^c0100a7a:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0100a7d	obj/kernel.asm	/^c0100a7d:	50                   	push   %eax$/;"	l
c0100a7e	obj/kernel.asm	/^c0100a7e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100a81	obj/kernel.asm	/^c0100a81:	e8 67 fb ff ff       	call   c01005ed <debuginfo_eip>$/;"	l
c0100a86	obj/kernel.asm	/^c0100a86:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a89	obj/kernel.asm	/^c0100a89:	85 c0                	test   %eax,%eax$/;"	l
c0100a8b	obj/kernel.asm	/^c0100a8b:	74 15                	je     c0100aa2 <print_debuginfo+0x34>$/;"	l
c0100a8d	obj/kernel.asm	/^c0100a8d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100a90	obj/kernel.asm	/^c0100a90:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100a93	obj/kernel.asm	/^c0100a93:	68 d6 b5 10 c0       	push   $0xc010b5d6$/;"	l
c0100a98	obj/kernel.asm	/^c0100a98:	e8 d8 f7 ff ff       	call   c0100275 <cprintf>$/;"	l
c0100a9d	obj/kernel.asm	/^c0100a9d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100aa0	obj/kernel.asm	/^c0100aa0:	eb 65                	jmp    c0100b07 <print_debuginfo+0x99>$/;"	l
c0100aa2	obj/kernel.asm	/^c0100aa2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100aa9	obj/kernel.asm	/^c0100aa9:	eb 1c                	jmp    c0100ac7 <print_debuginfo+0x59>$/;"	l
c0100aab	obj/kernel.asm	/^c0100aab:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0100aae	obj/kernel.asm	/^c0100aae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100ab1	obj/kernel.asm	/^c0100ab1:	01 d0                	add    %edx,%eax$/;"	l
c0100ab3	obj/kernel.asm	/^c0100ab3:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100ab6	obj/kernel.asm	/^c0100ab6:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0100abc	obj/kernel.asm	/^c0100abc:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100abf	obj/kernel.asm	/^c0100abf:	01 ca                	add    %ecx,%edx$/;"	l
c0100ac1	obj/kernel.asm	/^c0100ac1:	88 02                	mov    %al,(%edx)$/;"	l
c0100ac3	obj/kernel.asm	/^c0100ac3:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100ac7	obj/kernel.asm	/^c0100ac7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100aca	obj/kernel.asm	/^c0100aca:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0100acd	obj/kernel.asm	/^c0100acd:	7f dc                	jg     c0100aab <print_debuginfo+0x3d>$/;"	l
c0100acf	obj/kernel.asm	/^c0100acf:	8d 95 dc fe ff ff    	lea    -0x124(%ebp),%edx$/;"	l
c0100ad5	obj/kernel.asm	/^c0100ad5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100ad8	obj/kernel.asm	/^c0100ad8:	01 d0                	add    %edx,%eax$/;"	l
c0100ada	obj/kernel.asm	/^c0100ada:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100add	obj/kernel.asm	/^c0100add:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100ae0	obj/kernel.asm	/^c0100ae0:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100ae3	obj/kernel.asm	/^c0100ae3:	89 d1                	mov    %edx,%ecx$/;"	l
c0100ae5	obj/kernel.asm	/^c0100ae5:	29 c1                	sub    %eax,%ecx$/;"	l
c0100ae7	obj/kernel.asm	/^c0100ae7:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0100aea	obj/kernel.asm	/^c0100aea:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100aed	obj/kernel.asm	/^c0100aed:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100af0	obj/kernel.asm	/^c0100af0:	51                   	push   %ecx$/;"	l
c0100af1	obj/kernel.asm	/^c0100af1:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0100af7	obj/kernel.asm	/^c0100af7:	51                   	push   %ecx$/;"	l
c0100af8	obj/kernel.asm	/^c0100af8:	52                   	push   %edx$/;"	l
c0100af9	obj/kernel.asm	/^c0100af9:	50                   	push   %eax$/;"	l
c0100afa	obj/kernel.asm	/^c0100afa:	68 f2 b5 10 c0       	push   $0xc010b5f2$/;"	l
c0100aff	obj/kernel.asm	/^c0100aff:	e8 71 f7 ff ff       	call   c0100275 <cprintf>$/;"	l
c0100b04	obj/kernel.asm	/^c0100b04:	83 c4 20             	add    $0x20,%esp$/;"	l
c0100b07	obj/kernel.asm	/^c0100b07:	c9                   	leave  $/;"	l
c0100b08	obj/kernel.asm	/^c0100b08:	c3                   	ret    $/;"	l
c0100b09	obj/kernel.asm	/^c0100b09 <read_eip>:$/;"	l
c0100b09	obj/kernel.asm	/^c0100b09:	55                   	push   %ebp$/;"	l
c0100b0a	obj/kernel.asm	/^c0100b0a:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b0c	obj/kernel.asm	/^c0100b0c:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0100b0f	obj/kernel.asm	/^c0100b0f:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
c0100b12	obj/kernel.asm	/^c0100b12:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100b15	obj/kernel.asm	/^c0100b15:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100b18	obj/kernel.asm	/^c0100b18:	c9                   	leave  $/;"	l
c0100b19	obj/kernel.asm	/^c0100b19:	c3                   	ret    $/;"	l
c0100b1a	obj/kernel.asm	/^c0100b1a <print_stackframe>:$/;"	l
c0100b1a	obj/kernel.asm	/^c0100b1a:	55                   	push   %ebp$/;"	l
c0100b1b	obj/kernel.asm	/^c0100b1b:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b1d	obj/kernel.asm	/^c0100b1d:	5d                   	pop    %ebp$/;"	l
c0100b1e	obj/kernel.asm	/^c0100b1e:	c3                   	ret    $/;"	l
c0100b1f	obj/kernel.asm	/^c0100b1f <parse>:$/;"	l
c0100b1f	obj/kernel.asm	/^c0100b1f:	55                   	push   %ebp$/;"	l
c0100b20	obj/kernel.asm	/^c0100b20:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b22	obj/kernel.asm	/^c0100b22:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100b25	obj/kernel.asm	/^c0100b25:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100b2c	obj/kernel.asm	/^c0100b2c:	eb 0c                	jmp    c0100b3a <parse+0x1b>$/;"	l
c0100b2e	obj/kernel.asm	/^c0100b2e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b31	obj/kernel.asm	/^c0100b31:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100b34	obj/kernel.asm	/^c0100b34:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0100b37	obj/kernel.asm	/^c0100b37:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100b3a	obj/kernel.asm	/^c0100b3a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b3d	obj/kernel.asm	/^c0100b3d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100b40	obj/kernel.asm	/^c0100b40:	84 c0                	test   %al,%al$/;"	l
c0100b42	obj/kernel.asm	/^c0100b42:	74 1e                	je     c0100b62 <parse+0x43>$/;"	l
c0100b44	obj/kernel.asm	/^c0100b44:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b47	obj/kernel.asm	/^c0100b47:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100b4a	obj/kernel.asm	/^c0100b4a:	0f be c0             	movsbl %al,%eax$/;"	l
c0100b4d	obj/kernel.asm	/^c0100b4d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100b50	obj/kernel.asm	/^c0100b50:	50                   	push   %eax$/;"	l
c0100b51	obj/kernel.asm	/^c0100b51:	68 84 b6 10 c0       	push   $0xc010b684$/;"	l
c0100b56	obj/kernel.asm	/^c0100b56:	e8 82 9e 00 00       	call   c010a9dd <strchr>$/;"	l
c0100b5b	obj/kernel.asm	/^c0100b5b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b5e	obj/kernel.asm	/^c0100b5e:	85 c0                	test   %eax,%eax$/;"	l
c0100b60	obj/kernel.asm	/^c0100b60:	75 cc                	jne    c0100b2e <parse+0xf>$/;"	l
c0100b62	obj/kernel.asm	/^c0100b62:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b65	obj/kernel.asm	/^c0100b65:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100b68	obj/kernel.asm	/^c0100b68:	84 c0                	test   %al,%al$/;"	l
c0100b6a	obj/kernel.asm	/^c0100b6a:	75 02                	jne    c0100b6e <parse+0x4f>$/;"	l
c0100b6c	obj/kernel.asm	/^c0100b6c:	eb 65                	jmp    c0100bd3 <parse+0xb4>$/;"	l
c0100b6e	obj/kernel.asm	/^c0100b6e:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)$/;"	l
c0100b72	obj/kernel.asm	/^c0100b72:	75 12                	jne    c0100b86 <parse+0x67>$/;"	l
c0100b74	obj/kernel.asm	/^c0100b74:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100b77	obj/kernel.asm	/^c0100b77:	6a 10                	push   $0x10$/;"	l
c0100b79	obj/kernel.asm	/^c0100b79:	68 89 b6 10 c0       	push   $0xc010b689$/;"	l
c0100b7e	obj/kernel.asm	/^c0100b7e:	e8 f2 f6 ff ff       	call   c0100275 <cprintf>$/;"	l
c0100b83	obj/kernel.asm	/^c0100b83:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b86	obj/kernel.asm	/^c0100b86:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b89	obj/kernel.asm	/^c0100b89:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100b8c	obj/kernel.asm	/^c0100b8c:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0100b8f	obj/kernel.asm	/^c0100b8f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0100b96	obj/kernel.asm	/^c0100b96:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100b99	obj/kernel.asm	/^c0100b99:	01 c2                	add    %eax,%edx$/;"	l
c0100b9b	obj/kernel.asm	/^c0100b9b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b9e	obj/kernel.asm	/^c0100b9e:	89 02                	mov    %eax,(%edx)$/;"	l
c0100ba0	obj/kernel.asm	/^c0100ba0:	eb 04                	jmp    c0100ba6 <parse+0x87>$/;"	l
c0100ba2	obj/kernel.asm	/^c0100ba2:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0100ba6	obj/kernel.asm	/^c0100ba6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100ba9	obj/kernel.asm	/^c0100ba9:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100bac	obj/kernel.asm	/^c0100bac:	84 c0                	test   %al,%al$/;"	l
c0100bae	obj/kernel.asm	/^c0100bae:	74 1e                	je     c0100bce <parse+0xaf>$/;"	l
c0100bb0	obj/kernel.asm	/^c0100bb0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100bb3	obj/kernel.asm	/^c0100bb3:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100bb6	obj/kernel.asm	/^c0100bb6:	0f be c0             	movsbl %al,%eax$/;"	l
c0100bb9	obj/kernel.asm	/^c0100bb9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100bbc	obj/kernel.asm	/^c0100bbc:	50                   	push   %eax$/;"	l
c0100bbd	obj/kernel.asm	/^c0100bbd:	68 84 b6 10 c0       	push   $0xc010b684$/;"	l
c0100bc2	obj/kernel.asm	/^c0100bc2:	e8 16 9e 00 00       	call   c010a9dd <strchr>$/;"	l
c0100bc7	obj/kernel.asm	/^c0100bc7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100bca	obj/kernel.asm	/^c0100bca:	85 c0                	test   %eax,%eax$/;"	l
c0100bcc	obj/kernel.asm	/^c0100bcc:	74 d4                	je     c0100ba2 <parse+0x83>$/;"	l
c0100bce	obj/kernel.asm	/^c0100bce:	e9 59 ff ff ff       	jmp    c0100b2c <parse+0xd>$/;"	l
c0100bd3	obj/kernel.asm	/^c0100bd3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100bd6	obj/kernel.asm	/^c0100bd6:	c9                   	leave  $/;"	l
c0100bd7	obj/kernel.asm	/^c0100bd7:	c3                   	ret    $/;"	l
c0100bd8	obj/kernel.asm	/^c0100bd8 <runcmd>:$/;"	l
c0100bd8	obj/kernel.asm	/^c0100bd8:	55                   	push   %ebp$/;"	l
c0100bd9	obj/kernel.asm	/^c0100bd9:	89 e5                	mov    %esp,%ebp$/;"	l
c0100bdb	obj/kernel.asm	/^c0100bdb:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0100bde	obj/kernel.asm	/^c0100bde:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100be1	obj/kernel.asm	/^c0100be1:	8d 45 b0             	lea    -0x50(%ebp),%eax$/;"	l
c0100be4	obj/kernel.asm	/^c0100be4:	50                   	push   %eax$/;"	l
c0100be5	obj/kernel.asm	/^c0100be5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100be8	obj/kernel.asm	/^c0100be8:	e8 32 ff ff ff       	call   c0100b1f <parse>$/;"	l
c0100bed	obj/kernel.asm	/^c0100bed:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100bf0	obj/kernel.asm	/^c0100bf0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100bf3	obj/kernel.asm	/^c0100bf3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0100bf7	obj/kernel.asm	/^c0100bf7:	75 0a                	jne    c0100c03 <runcmd+0x2b>$/;"	l
c0100bf9	obj/kernel.asm	/^c0100bf9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100bfe	obj/kernel.asm	/^c0100bfe:	e9 84 00 00 00       	jmp    c0100c87 <runcmd+0xaf>$/;"	l
c0100c03	obj/kernel.asm	/^c0100c03:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100c0a	obj/kernel.asm	/^c0100c0a:	eb 5a                	jmp    c0100c66 <runcmd+0x8e>$/;"	l
c0100c0c	obj/kernel.asm	/^c0100c0c:	8b 4d b0             	mov    -0x50(%ebp),%ecx$/;"	l
c0100c0f	obj/kernel.asm	/^c0100c0f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100c12	obj/kernel.asm	/^c0100c12:	89 d0                	mov    %edx,%eax$/;"	l
c0100c14	obj/kernel.asm	/^c0100c14:	01 c0                	add    %eax,%eax$/;"	l
c0100c16	obj/kernel.asm	/^c0100c16:	01 d0                	add    %edx,%eax$/;"	l
c0100c18	obj/kernel.asm	/^c0100c18:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100c1b	obj/kernel.asm	/^c0100c1b:	05 20 90 12 c0       	add    $0xc0129020,%eax$/;"	l
c0100c20	obj/kernel.asm	/^c0100c20:	8b 00                	mov    (%eax),%eax$/;"	l
c0100c22	obj/kernel.asm	/^c0100c22:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100c25	obj/kernel.asm	/^c0100c25:	51                   	push   %ecx$/;"	l
c0100c26	obj/kernel.asm	/^c0100c26:	50                   	push   %eax$/;"	l
c0100c27	obj/kernel.asm	/^c0100c27:	e8 11 9d 00 00       	call   c010a93d <strcmp>$/;"	l
c0100c2c	obj/kernel.asm	/^c0100c2c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100c2f	obj/kernel.asm	/^c0100c2f:	85 c0                	test   %eax,%eax$/;"	l
c0100c31	obj/kernel.asm	/^c0100c31:	75 2f                	jne    c0100c62 <runcmd+0x8a>$/;"	l
c0100c33	obj/kernel.asm	/^c0100c33:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100c36	obj/kernel.asm	/^c0100c36:	89 d0                	mov    %edx,%eax$/;"	l
c0100c38	obj/kernel.asm	/^c0100c38:	01 c0                	add    %eax,%eax$/;"	l
c0100c3a	obj/kernel.asm	/^c0100c3a:	01 d0                	add    %edx,%eax$/;"	l
c0100c3c	obj/kernel.asm	/^c0100c3c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100c3f	obj/kernel.asm	/^c0100c3f:	05 20 90 12 c0       	add    $0xc0129020,%eax$/;"	l
c0100c44	obj/kernel.asm	/^c0100c44:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100c47	obj/kernel.asm	/^c0100c47:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100c4a	obj/kernel.asm	/^c0100c4a:	83 ea 01             	sub    $0x1,%edx$/;"	l
c0100c4d	obj/kernel.asm	/^c0100c4d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100c50	obj/kernel.asm	/^c0100c50:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0100c53	obj/kernel.asm	/^c0100c53:	8d 4d b0             	lea    -0x50(%ebp),%ecx$/;"	l
c0100c56	obj/kernel.asm	/^c0100c56:	83 c1 04             	add    $0x4,%ecx$/;"	l
c0100c59	obj/kernel.asm	/^c0100c59:	51                   	push   %ecx$/;"	l
c0100c5a	obj/kernel.asm	/^c0100c5a:	52                   	push   %edx$/;"	l
c0100c5b	obj/kernel.asm	/^c0100c5b:	ff d0                	call   *%eax$/;"	l
c0100c5d	obj/kernel.asm	/^c0100c5d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100c60	obj/kernel.asm	/^c0100c60:	eb 25                	jmp    c0100c87 <runcmd+0xaf>$/;"	l
c0100c62	obj/kernel.asm	/^c0100c62:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100c66	obj/kernel.asm	/^c0100c66:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100c69	obj/kernel.asm	/^c0100c69:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100c6c	obj/kernel.asm	/^c0100c6c:	76 9e                	jbe    c0100c0c <runcmd+0x34>$/;"	l
c0100c6e	obj/kernel.asm	/^c0100c6e:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0100c71	obj/kernel.asm	/^c0100c71:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100c74	obj/kernel.asm	/^c0100c74:	50                   	push   %eax$/;"	l
c0100c75	obj/kernel.asm	/^c0100c75:	68 a7 b6 10 c0       	push   $0xc010b6a7$/;"	l
c0100c7a	obj/kernel.asm	/^c0100c7a:	e8 f6 f5 ff ff       	call   c0100275 <cprintf>$/;"	l
c0100c7f	obj/kernel.asm	/^c0100c7f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100c82	obj/kernel.asm	/^c0100c82:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100c87	obj/kernel.asm	/^c0100c87:	c9                   	leave  $/;"	l
c0100c88	obj/kernel.asm	/^c0100c88:	c3                   	ret    $/;"	l
c0100c89	obj/kernel.asm	/^c0100c89 <kmonitor>:$/;"	l
c0100c89	obj/kernel.asm	/^c0100c89:	55                   	push   %ebp$/;"	l
c0100c8a	obj/kernel.asm	/^c0100c8a:	89 e5                	mov    %esp,%ebp$/;"	l
c0100c8c	obj/kernel.asm	/^c0100c8c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100c8f	obj/kernel.asm	/^c0100c8f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100c92	obj/kernel.asm	/^c0100c92:	68 c0 b6 10 c0       	push   $0xc010b6c0$/;"	l
c0100c97	obj/kernel.asm	/^c0100c97:	e8 d9 f5 ff ff       	call   c0100275 <cprintf>$/;"	l
c0100c9c	obj/kernel.asm	/^c0100c9c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100c9f	obj/kernel.asm	/^c0100c9f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100ca2	obj/kernel.asm	/^c0100ca2:	68 e8 b6 10 c0       	push   $0xc010b6e8$/;"	l
c0100ca7	obj/kernel.asm	/^c0100ca7:	e8 c9 f5 ff ff       	call   c0100275 <cprintf>$/;"	l
c0100cac	obj/kernel.asm	/^c0100cac:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100caf	obj/kernel.asm	/^c0100caf:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100cb3	obj/kernel.asm	/^c0100cb3:	74 0e                	je     c0100cc3 <kmonitor+0x3a>$/;"	l
c0100cb5	obj/kernel.asm	/^c0100cb5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100cb8	obj/kernel.asm	/^c0100cb8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100cbb	obj/kernel.asm	/^c0100cbb:	e8 6f 17 00 00       	call   c010242f <print_trapframe>$/;"	l
c0100cc0	obj/kernel.asm	/^c0100cc0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100cc3	obj/kernel.asm	/^c0100cc3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100cc6	obj/kernel.asm	/^c0100cc6:	68 0d b7 10 c0       	push   $0xc010b70d$/;"	l
c0100ccb	obj/kernel.asm	/^c0100ccb:	e8 48 f6 ff ff       	call   c0100318 <readline>$/;"	l
c0100cd0	obj/kernel.asm	/^c0100cd0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100cd3	obj/kernel.asm	/^c0100cd3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100cd6	obj/kernel.asm	/^c0100cd6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100cda	obj/kernel.asm	/^c0100cda:	74 17                	je     c0100cf3 <kmonitor+0x6a>$/;"	l
c0100cdc	obj/kernel.asm	/^c0100cdc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100cdf	obj/kernel.asm	/^c0100cdf:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100ce2	obj/kernel.asm	/^c0100ce2:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100ce5	obj/kernel.asm	/^c0100ce5:	e8 ee fe ff ff       	call   c0100bd8 <runcmd>$/;"	l
c0100cea	obj/kernel.asm	/^c0100cea:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100ced	obj/kernel.asm	/^c0100ced:	85 c0                	test   %eax,%eax$/;"	l
c0100cef	obj/kernel.asm	/^c0100cef:	79 02                	jns    c0100cf3 <kmonitor+0x6a>$/;"	l
c0100cf1	obj/kernel.asm	/^c0100cf1:	eb 02                	jmp    c0100cf5 <kmonitor+0x6c>$/;"	l
c0100cf3	obj/kernel.asm	/^c0100cf3:	eb ce                	jmp    c0100cc3 <kmonitor+0x3a>$/;"	l
c0100cf5	obj/kernel.asm	/^c0100cf5:	c9                   	leave  $/;"	l
c0100cf6	obj/kernel.asm	/^c0100cf6:	c3                   	ret    $/;"	l
c0100cf7	obj/kernel.asm	/^c0100cf7 <mon_help>:$/;"	l
c0100cf7	obj/kernel.asm	/^c0100cf7:	55                   	push   %ebp$/;"	l
c0100cf8	obj/kernel.asm	/^c0100cf8:	89 e5                	mov    %esp,%ebp$/;"	l
c0100cfa	obj/kernel.asm	/^c0100cfa:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100cfd	obj/kernel.asm	/^c0100cfd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100d04	obj/kernel.asm	/^c0100d04:	eb 3d                	jmp    c0100d43 <mon_help+0x4c>$/;"	l
c0100d06	obj/kernel.asm	/^c0100d06:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100d09	obj/kernel.asm	/^c0100d09:	89 d0                	mov    %edx,%eax$/;"	l
c0100d0b	obj/kernel.asm	/^c0100d0b:	01 c0                	add    %eax,%eax$/;"	l
c0100d0d	obj/kernel.asm	/^c0100d0d:	01 d0                	add    %edx,%eax$/;"	l
c0100d0f	obj/kernel.asm	/^c0100d0f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d12	obj/kernel.asm	/^c0100d12:	05 20 90 12 c0       	add    $0xc0129020,%eax$/;"	l
c0100d17	obj/kernel.asm	/^c0100d17:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c0100d1a	obj/kernel.asm	/^c0100d1a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100d1d	obj/kernel.asm	/^c0100d1d:	89 d0                	mov    %edx,%eax$/;"	l
c0100d1f	obj/kernel.asm	/^c0100d1f:	01 c0                	add    %eax,%eax$/;"	l
c0100d21	obj/kernel.asm	/^c0100d21:	01 d0                	add    %edx,%eax$/;"	l
c0100d23	obj/kernel.asm	/^c0100d23:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d26	obj/kernel.asm	/^c0100d26:	05 20 90 12 c0       	add    $0xc0129020,%eax$/;"	l
c0100d2b	obj/kernel.asm	/^c0100d2b:	8b 00                	mov    (%eax),%eax$/;"	l
c0100d2d	obj/kernel.asm	/^c0100d2d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100d30	obj/kernel.asm	/^c0100d30:	51                   	push   %ecx$/;"	l
c0100d31	obj/kernel.asm	/^c0100d31:	50                   	push   %eax$/;"	l
c0100d32	obj/kernel.asm	/^c0100d32:	68 11 b7 10 c0       	push   $0xc010b711$/;"	l
c0100d37	obj/kernel.asm	/^c0100d37:	e8 39 f5 ff ff       	call   c0100275 <cprintf>$/;"	l
c0100d3c	obj/kernel.asm	/^c0100d3c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100d3f	obj/kernel.asm	/^c0100d3f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100d43	obj/kernel.asm	/^c0100d43:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100d46	obj/kernel.asm	/^c0100d46:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100d49	obj/kernel.asm	/^c0100d49:	76 bb                	jbe    c0100d06 <mon_help+0xf>$/;"	l
c0100d4b	obj/kernel.asm	/^c0100d4b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100d50	obj/kernel.asm	/^c0100d50:	c9                   	leave  $/;"	l
c0100d51	obj/kernel.asm	/^c0100d51:	c3                   	ret    $/;"	l
c0100d52	obj/kernel.asm	/^c0100d52 <mon_kerninfo>:$/;"	l
c0100d52	obj/kernel.asm	/^c0100d52:	55                   	push   %ebp$/;"	l
c0100d53	obj/kernel.asm	/^c0100d53:	89 e5                	mov    %esp,%ebp$/;"	l
c0100d55	obj/kernel.asm	/^c0100d55:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100d58	obj/kernel.asm	/^c0100d58:	e8 75 fc ff ff       	call   c01009d2 <print_kerninfo>$/;"	l
c0100d5d	obj/kernel.asm	/^c0100d5d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100d62	obj/kernel.asm	/^c0100d62:	c9                   	leave  $/;"	l
c0100d63	obj/kernel.asm	/^c0100d63:	c3                   	ret    $/;"	l
c0100d64	obj/kernel.asm	/^c0100d64 <mon_backtrace>:$/;"	l
c0100d64	obj/kernel.asm	/^c0100d64:	55                   	push   %ebp$/;"	l
c0100d65	obj/kernel.asm	/^c0100d65:	89 e5                	mov    %esp,%ebp$/;"	l
c0100d67	obj/kernel.asm	/^c0100d67:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100d6a	obj/kernel.asm	/^c0100d6a:	e8 ab fd ff ff       	call   c0100b1a <print_stackframe>$/;"	l
c0100d6f	obj/kernel.asm	/^c0100d6f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100d74	obj/kernel.asm	/^c0100d74:	c9                   	leave  $/;"	l
c0100d75	obj/kernel.asm	/^c0100d75:	c3                   	ret    $/;"	l
c0100d76	obj/kernel.asm	/^c0100d76 <ide_wait_ready>:$/;"	l
c0100d76	obj/kernel.asm	/^c0100d76:	55                   	push   %ebp$/;"	l
c0100d77	obj/kernel.asm	/^c0100d77:	89 e5                	mov    %esp,%ebp$/;"	l
c0100d79	obj/kernel.asm	/^c0100d79:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0100d7c	obj/kernel.asm	/^c0100d7c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d7f	obj/kernel.asm	/^c0100d7f:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c0100d83	obj/kernel.asm	/^c0100d83:	90                   	nop$/;"	l
c0100d84	obj/kernel.asm	/^c0100d84:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0100d88	obj/kernel.asm	/^c0100d88:	83 c0 07             	add    $0x7,%eax$/;"	l
c0100d8b	obj/kernel.asm	/^c0100d8b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100d8e	obj/kernel.asm	/^c0100d8e:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c0100d92	obj/kernel.asm	/^c0100d92:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0100d96	obj/kernel.asm	/^c0100d96:	89 c2                	mov    %eax,%edx$/;"	l
c0100d98	obj/kernel.asm	/^c0100d98:	ec                   	in     (%dx),%al$/;"	l
c0100d99	obj/kernel.asm	/^c0100d99:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0100d9c	obj/kernel.asm	/^c0100d9c:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0100da0	obj/kernel.asm	/^c0100da0:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100da3	obj/kernel.asm	/^c0100da3:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100da6	obj/kernel.asm	/^c0100da6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100da9	obj/kernel.asm	/^c0100da9:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
c0100dae	obj/kernel.asm	/^c0100dae:	85 c0                	test   %eax,%eax$/;"	l
c0100db0	obj/kernel.asm	/^c0100db0:	75 d2                	jne    c0100d84 <ide_wait_ready+0xe>$/;"	l
c0100db2	obj/kernel.asm	/^c0100db2:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0100db6	obj/kernel.asm	/^c0100db6:	74 11                	je     c0100dc9 <ide_wait_ready+0x53>$/;"	l
c0100db8	obj/kernel.asm	/^c0100db8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100dbb	obj/kernel.asm	/^c0100dbb:	83 e0 21             	and    $0x21,%eax$/;"	l
c0100dbe	obj/kernel.asm	/^c0100dbe:	85 c0                	test   %eax,%eax$/;"	l
c0100dc0	obj/kernel.asm	/^c0100dc0:	74 07                	je     c0100dc9 <ide_wait_ready+0x53>$/;"	l
c0100dc2	obj/kernel.asm	/^c0100dc2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100dc7	obj/kernel.asm	/^c0100dc7:	eb 05                	jmp    c0100dce <ide_wait_ready+0x58>$/;"	l
c0100dc9	obj/kernel.asm	/^c0100dc9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100dce	obj/kernel.asm	/^c0100dce:	c9                   	leave  $/;"	l
c0100dcf	obj/kernel.asm	/^c0100dcf:	c3                   	ret    $/;"	l
c0100dd0	obj/kernel.asm	/^c0100dd0 <ide_init>:$/;"	l
c0100dd0	obj/kernel.asm	/^c0100dd0:	55                   	push   %ebp$/;"	l
c0100dd1	obj/kernel.asm	/^c0100dd1:	89 e5                	mov    %esp,%ebp$/;"	l
c0100dd3	obj/kernel.asm	/^c0100dd3:	57                   	push   %edi$/;"	l
c0100dd4	obj/kernel.asm	/^c0100dd4:	53                   	push   %ebx$/;"	l
c0100dd5	obj/kernel.asm	/^c0100dd5:	81 ec 40 02 00 00    	sub    $0x240,%esp$/;"	l
c0100ddb	obj/kernel.asm	/^c0100ddb:	66 c7 45 f6 00 00    	movw   $0x0,-0xa(%ebp)$/;"	l
c0100de1	obj/kernel.asm	/^c0100de1:	e9 c1 02 00 00       	jmp    c01010a7 <ide_init+0x2d7>$/;"	l
c0100de6	obj/kernel.asm	/^c0100de6:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100dea	obj/kernel.asm	/^c0100dea:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0100ded	obj/kernel.asm	/^c0100ded:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0100df4	obj/kernel.asm	/^c0100df4:	29 c2                	sub    %eax,%edx$/;"	l
c0100df6	obj/kernel.asm	/^c0100df6:	89 d0                	mov    %edx,%eax$/;"	l
c0100df8	obj/kernel.asm	/^c0100df8:	05 40 b3 19 c0       	add    $0xc019b340,%eax$/;"	l
c0100dfd	obj/kernel.asm	/^c0100dfd:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100e00	obj/kernel.asm	/^c0100e00:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100e04	obj/kernel.asm	/^c0100e04:	66 d1 e8             	shr    %ax$/;"	l
c0100e07	obj/kernel.asm	/^c0100e07:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100e0a	obj/kernel.asm	/^c0100e0a:	0f b7 04 85 1c b7 10 	movzwl -0x3fef48e4(,%eax,4),%eax$/;"	l
c0100e11	obj/kernel.asm	/^c0100e11:	c0 $/;"	l
c0100e12	obj/kernel.asm	/^c0100e12:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0100e16	obj/kernel.asm	/^c0100e16:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100e1a	obj/kernel.asm	/^c0100e1a:	6a 00                	push   $0x0$/;"	l
c0100e1c	obj/kernel.asm	/^c0100e1c:	50                   	push   %eax$/;"	l
c0100e1d	obj/kernel.asm	/^c0100e1d:	e8 54 ff ff ff       	call   c0100d76 <ide_wait_ready>$/;"	l
c0100e22	obj/kernel.asm	/^c0100e22:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100e25	obj/kernel.asm	/^c0100e25:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100e29	obj/kernel.asm	/^c0100e29:	83 e0 01             	and    $0x1,%eax$/;"	l
c0100e2c	obj/kernel.asm	/^c0100e2c:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0100e2f	obj/kernel.asm	/^c0100e2f:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0100e32	obj/kernel.asm	/^c0100e32:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100e35	obj/kernel.asm	/^c0100e35:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0100e39	obj/kernel.asm	/^c0100e39:	83 c2 06             	add    $0x6,%edx$/;"	l
c0100e3c	obj/kernel.asm	/^c0100e3c:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0100e3f	obj/kernel.asm	/^c0100e3f:	66 89 55 d2          	mov    %dx,-0x2e(%ebp)$/;"	l
c0100e43	obj/kernel.asm	/^c0100e43:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c0100e46	obj/kernel.asm	/^c0100e46:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c0100e4a	obj/kernel.asm	/^c0100e4a:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c0100e4e	obj/kernel.asm	/^c0100e4e:	ee                   	out    %al,(%dx)$/;"	l
c0100e4f	obj/kernel.asm	/^c0100e4f:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100e53	obj/kernel.asm	/^c0100e53:	6a 00                	push   $0x0$/;"	l
c0100e55	obj/kernel.asm	/^c0100e55:	50                   	push   %eax$/;"	l
c0100e56	obj/kernel.asm	/^c0100e56:	e8 1b ff ff ff       	call   c0100d76 <ide_wait_ready>$/;"	l
c0100e5b	obj/kernel.asm	/^c0100e5b:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100e5e	obj/kernel.asm	/^c0100e5e:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100e62	obj/kernel.asm	/^c0100e62:	83 c0 07             	add    $0x7,%eax$/;"	l
c0100e65	obj/kernel.asm	/^c0100e65:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100e68	obj/kernel.asm	/^c0100e68:	66 89 45 ce          	mov    %ax,-0x32(%ebp)$/;"	l
c0100e6c	obj/kernel.asm	/^c0100e6c:	c6 45 cd ec          	movb   $0xec,-0x33(%ebp)$/;"	l
c0100e70	obj/kernel.asm	/^c0100e70:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c0100e74	obj/kernel.asm	/^c0100e74:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c0100e78	obj/kernel.asm	/^c0100e78:	ee                   	out    %al,(%dx)$/;"	l
c0100e79	obj/kernel.asm	/^c0100e79:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100e7d	obj/kernel.asm	/^c0100e7d:	6a 00                	push   $0x0$/;"	l
c0100e7f	obj/kernel.asm	/^c0100e7f:	50                   	push   %eax$/;"	l
c0100e80	obj/kernel.asm	/^c0100e80:	e8 f1 fe ff ff       	call   c0100d76 <ide_wait_ready>$/;"	l
c0100e85	obj/kernel.asm	/^c0100e85:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100e88	obj/kernel.asm	/^c0100e88:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100e8c	obj/kernel.asm	/^c0100e8c:	83 c0 07             	add    $0x7,%eax$/;"	l
c0100e8f	obj/kernel.asm	/^c0100e8f:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100e92	obj/kernel.asm	/^c0100e92:	66 89 45 ca          	mov    %ax,-0x36(%ebp)$/;"	l
c0100e96	obj/kernel.asm	/^c0100e96:	0f b7 45 ca          	movzwl -0x36(%ebp),%eax$/;"	l
c0100e9a	obj/kernel.asm	/^c0100e9a:	89 c2                	mov    %eax,%edx$/;"	l
c0100e9c	obj/kernel.asm	/^c0100e9c:	ec                   	in     (%dx),%al$/;"	l
c0100e9d	obj/kernel.asm	/^c0100e9d:	88 45 c9             	mov    %al,-0x37(%ebp)$/;"	l
c0100ea0	obj/kernel.asm	/^c0100ea0:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c0100ea4	obj/kernel.asm	/^c0100ea4:	84 c0                	test   %al,%al$/;"	l
c0100ea6	obj/kernel.asm	/^c0100ea6:	0f 84 f0 01 00 00    	je     c010109c <ide_init+0x2cc>$/;"	l
c0100eac	obj/kernel.asm	/^c0100eac:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100eb0	obj/kernel.asm	/^c0100eb0:	6a 01                	push   $0x1$/;"	l
c0100eb2	obj/kernel.asm	/^c0100eb2:	50                   	push   %eax$/;"	l
c0100eb3	obj/kernel.asm	/^c0100eb3:	e8 be fe ff ff       	call   c0100d76 <ide_wait_ready>$/;"	l
c0100eb8	obj/kernel.asm	/^c0100eb8:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100ebb	obj/kernel.asm	/^c0100ebb:	85 c0                	test   %eax,%eax$/;"	l
c0100ebd	obj/kernel.asm	/^c0100ebd:	0f 85 d9 01 00 00    	jne    c010109c <ide_init+0x2cc>$/;"	l
c0100ec3	obj/kernel.asm	/^c0100ec3:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100ec7	obj/kernel.asm	/^c0100ec7:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0100eca	obj/kernel.asm	/^c0100eca:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0100ed1	obj/kernel.asm	/^c0100ed1:	29 c2                	sub    %eax,%edx$/;"	l
c0100ed3	obj/kernel.asm	/^c0100ed3:	89 d0                	mov    %edx,%eax$/;"	l
c0100ed5	obj/kernel.asm	/^c0100ed5:	05 40 b3 19 c0       	add    $0xc019b340,%eax$/;"	l
c0100eda	obj/kernel.asm	/^c0100eda:	c6 00 01             	movb   $0x1,(%eax)$/;"	l
c0100edd	obj/kernel.asm	/^c0100edd:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100ee1	obj/kernel.asm	/^c0100ee1:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0100ee4	obj/kernel.asm	/^c0100ee4:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c0100eea	obj/kernel.asm	/^c0100eea:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0100eed	obj/kernel.asm	/^c0100eed:	c7 45 bc 80 00 00 00 	movl   $0x80,-0x44(%ebp)$/;"	l
c0100ef4	obj/kernel.asm	/^c0100ef4:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0100ef7	obj/kernel.asm	/^c0100ef7:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
c0100efa	obj/kernel.asm	/^c0100efa:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0100efd	obj/kernel.asm	/^c0100efd:	89 cb                	mov    %ecx,%ebx$/;"	l
c0100eff	obj/kernel.asm	/^c0100eff:	89 df                	mov    %ebx,%edi$/;"	l
c0100f01	obj/kernel.asm	/^c0100f01:	89 c1                	mov    %eax,%ecx$/;"	l
c0100f03	obj/kernel.asm	/^c0100f03:	fc                   	cld    $/;"	l
c0100f04	obj/kernel.asm	/^c0100f04:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c0100f06	obj/kernel.asm	/^c0100f06:	89 c8                	mov    %ecx,%eax$/;"	l
c0100f08	obj/kernel.asm	/^c0100f08:	89 fb                	mov    %edi,%ebx$/;"	l
c0100f0a	obj/kernel.asm	/^c0100f0a:	89 5d c0             	mov    %ebx,-0x40(%ebp)$/;"	l
c0100f0d	obj/kernel.asm	/^c0100f0d:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0100f10	obj/kernel.asm	/^c0100f10:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c0100f16	obj/kernel.asm	/^c0100f16:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0100f19	obj/kernel.asm	/^c0100f19:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100f1c	obj/kernel.asm	/^c0100f1c:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax$/;"	l
c0100f22	obj/kernel.asm	/^c0100f22:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100f25	obj/kernel.asm	/^c0100f25:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100f28	obj/kernel.asm	/^c0100f28:	25 00 00 00 04       	and    $0x4000000,%eax$/;"	l
c0100f2d	obj/kernel.asm	/^c0100f2d:	85 c0                	test   %eax,%eax$/;"	l
c0100f2f	obj/kernel.asm	/^c0100f2f:	74 0e                	je     c0100f3f <ide_init+0x16f>$/;"	l
c0100f31	obj/kernel.asm	/^c0100f31:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100f34	obj/kernel.asm	/^c0100f34:	8b 80 c8 00 00 00    	mov    0xc8(%eax),%eax$/;"	l
c0100f3a	obj/kernel.asm	/^c0100f3a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100f3d	obj/kernel.asm	/^c0100f3d:	eb 09                	jmp    c0100f48 <ide_init+0x178>$/;"	l
c0100f3f	obj/kernel.asm	/^c0100f3f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100f42	obj/kernel.asm	/^c0100f42:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0100f45	obj/kernel.asm	/^c0100f45:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100f48	obj/kernel.asm	/^c0100f48:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100f4c	obj/kernel.asm	/^c0100f4c:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0100f4f	obj/kernel.asm	/^c0100f4f:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0100f56	obj/kernel.asm	/^c0100f56:	29 c2                	sub    %eax,%edx$/;"	l
c0100f58	obj/kernel.asm	/^c0100f58:	89 d0                	mov    %edx,%eax$/;"	l
c0100f5a	obj/kernel.asm	/^c0100f5a:	8d 90 40 b3 19 c0    	lea    -0x3fe64cc0(%eax),%edx$/;"	l
c0100f60	obj/kernel.asm	/^c0100f60:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100f63	obj/kernel.asm	/^c0100f63:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c0100f66	obj/kernel.asm	/^c0100f66:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100f6a	obj/kernel.asm	/^c0100f6a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0100f6d	obj/kernel.asm	/^c0100f6d:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0100f74	obj/kernel.asm	/^c0100f74:	29 c2                	sub    %eax,%edx$/;"	l
c0100f76	obj/kernel.asm	/^c0100f76:	89 d0                	mov    %edx,%eax$/;"	l
c0100f78	obj/kernel.asm	/^c0100f78:	8d 90 40 b3 19 c0    	lea    -0x3fe64cc0(%eax),%edx$/;"	l
c0100f7e	obj/kernel.asm	/^c0100f7e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100f81	obj/kernel.asm	/^c0100f81:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c0100f84	obj/kernel.asm	/^c0100f84:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100f87	obj/kernel.asm	/^c0100f87:	83 c0 62             	add    $0x62,%eax$/;"	l
c0100f8a	obj/kernel.asm	/^c0100f8a:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c0100f8d	obj/kernel.asm	/^c0100f8d:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100f90	obj/kernel.asm	/^c0100f90:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0100f95	obj/kernel.asm	/^c0100f95:	85 c0                	test   %eax,%eax$/;"	l
c0100f97	obj/kernel.asm	/^c0100f97:	75 16                	jne    c0100faf <ide_init+0x1df>$/;"	l
c0100f99	obj/kernel.asm	/^c0100f99:	68 24 b7 10 c0       	push   $0xc010b724$/;"	l
c0100f9e	obj/kernel.asm	/^c0100f9e:	68 67 b7 10 c0       	push   $0xc010b767$/;"	l
c0100fa3	obj/kernel.asm	/^c0100fa3:	6a 7d                	push   $0x7d$/;"	l
c0100fa5	obj/kernel.asm	/^c0100fa5:	68 7c b7 10 c0       	push   $0xc010b77c$/;"	l
c0100faa	obj/kernel.asm	/^c0100faa:	e8 2b f4 ff ff       	call   c01003da <__panic>$/;"	l
c0100faf	obj/kernel.asm	/^c0100faf:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100fb3	obj/kernel.asm	/^c0100fb3:	89 c2                	mov    %eax,%edx$/;"	l
c0100fb5	obj/kernel.asm	/^c0100fb5:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c0100fbc	obj/kernel.asm	/^c0100fbc:	89 c2                	mov    %eax,%edx$/;"	l
c0100fbe	obj/kernel.asm	/^c0100fbe:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c0100fc5	obj/kernel.asm	/^c0100fc5:	29 d0                	sub    %edx,%eax$/;"	l
c0100fc7	obj/kernel.asm	/^c0100fc7:	05 40 b3 19 c0       	add    $0xc019b340,%eax$/;"	l
c0100fcc	obj/kernel.asm	/^c0100fcc:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0100fcf	obj/kernel.asm	/^c0100fcf:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0100fd2	obj/kernel.asm	/^c0100fd2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100fd5	obj/kernel.asm	/^c0100fd5:	83 c0 36             	add    $0x36,%eax$/;"	l
c0100fd8	obj/kernel.asm	/^c0100fd8:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0100fdb	obj/kernel.asm	/^c0100fdb:	c7 45 d4 28 00 00 00 	movl   $0x28,-0x2c(%ebp)$/;"	l
c0100fe2	obj/kernel.asm	/^c0100fe2:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0100fe9	obj/kernel.asm	/^c0100fe9:	eb 34                	jmp    c010101f <ide_init+0x24f>$/;"	l
c0100feb	obj/kernel.asm	/^c0100feb:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0100fee	obj/kernel.asm	/^c0100fee:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100ff1	obj/kernel.asm	/^c0100ff1:	01 c2                	add    %eax,%edx$/;"	l
c0100ff3	obj/kernel.asm	/^c0100ff3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100ff6	obj/kernel.asm	/^c0100ff6:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0100ff9	obj/kernel.asm	/^c0100ff9:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0100ffc	obj/kernel.asm	/^c0100ffc:	01 c8                	add    %ecx,%eax$/;"	l
c0100ffe	obj/kernel.asm	/^c0100ffe:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101001	obj/kernel.asm	/^c0101001:	88 02                	mov    %al,(%edx)$/;"	l
c0101003	obj/kernel.asm	/^c0101003:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101006	obj/kernel.asm	/^c0101006:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101009	obj/kernel.asm	/^c0101009:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010100c	obj/kernel.asm	/^c010100c:	01 c2                	add    %eax,%edx$/;"	l
c010100e	obj/kernel.asm	/^c010100e:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
c0101011	obj/kernel.asm	/^c0101011:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101014	obj/kernel.asm	/^c0101014:	01 c8                	add    %ecx,%eax$/;"	l
c0101016	obj/kernel.asm	/^c0101016:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101019	obj/kernel.asm	/^c0101019:	88 02                	mov    %al,(%edx)$/;"	l
c010101b	obj/kernel.asm	/^c010101b:	83 45 ec 02          	addl   $0x2,-0x14(%ebp)$/;"	l
c010101f	obj/kernel.asm	/^c010101f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101022	obj/kernel.asm	/^c0101022:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0101025	obj/kernel.asm	/^c0101025:	72 c4                	jb     c0100feb <ide_init+0x21b>$/;"	l
c0101027	obj/kernel.asm	/^c0101027:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010102a	obj/kernel.asm	/^c010102a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010102d	obj/kernel.asm	/^c010102d:	01 d0                	add    %edx,%eax$/;"	l
c010102f	obj/kernel.asm	/^c010102f:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0101032	obj/kernel.asm	/^c0101032:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101035	obj/kernel.asm	/^c0101035:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0101038	obj/kernel.asm	/^c0101038:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010103b	obj/kernel.asm	/^c010103b:	85 c0                	test   %eax,%eax$/;"	l
c010103d	obj/kernel.asm	/^c010103d:	74 0f                	je     c010104e <ide_init+0x27e>$/;"	l
c010103f	obj/kernel.asm	/^c010103f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0101042	obj/kernel.asm	/^c0101042:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101045	obj/kernel.asm	/^c0101045:	01 d0                	add    %edx,%eax$/;"	l
c0101047	obj/kernel.asm	/^c0101047:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010104a	obj/kernel.asm	/^c010104a:	3c 20                	cmp    $0x20,%al$/;"	l
c010104c	obj/kernel.asm	/^c010104c:	74 d9                	je     c0101027 <ide_init+0x257>$/;"	l
c010104e	obj/kernel.asm	/^c010104e:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101052	obj/kernel.asm	/^c0101052:	89 c2                	mov    %eax,%edx$/;"	l
c0101054	obj/kernel.asm	/^c0101054:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c010105b	obj/kernel.asm	/^c010105b:	89 c2                	mov    %eax,%edx$/;"	l
c010105d	obj/kernel.asm	/^c010105d:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c0101064	obj/kernel.asm	/^c0101064:	29 d0                	sub    %edx,%eax$/;"	l
c0101066	obj/kernel.asm	/^c0101066:	05 40 b3 19 c0       	add    $0xc019b340,%eax$/;"	l
c010106b	obj/kernel.asm	/^c010106b:	8d 48 0c             	lea    0xc(%eax),%ecx$/;"	l
c010106e	obj/kernel.asm	/^c010106e:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101072	obj/kernel.asm	/^c0101072:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101075	obj/kernel.asm	/^c0101075:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010107c	obj/kernel.asm	/^c010107c:	29 c2                	sub    %eax,%edx$/;"	l
c010107e	obj/kernel.asm	/^c010107e:	89 d0                	mov    %edx,%eax$/;"	l
c0101080	obj/kernel.asm	/^c0101080:	05 40 b3 19 c0       	add    $0xc019b340,%eax$/;"	l
c0101085	obj/kernel.asm	/^c0101085:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0101088	obj/kernel.asm	/^c0101088:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010108c	obj/kernel.asm	/^c010108c:	51                   	push   %ecx$/;"	l
c010108d	obj/kernel.asm	/^c010108d:	52                   	push   %edx$/;"	l
c010108e	obj/kernel.asm	/^c010108e:	50                   	push   %eax$/;"	l
c010108f	obj/kernel.asm	/^c010108f:	68 8e b7 10 c0       	push   $0xc010b78e$/;"	l
c0101094	obj/kernel.asm	/^c0101094:	e8 dc f1 ff ff       	call   c0100275 <cprintf>$/;"	l
c0101099	obj/kernel.asm	/^c0101099:	83 c4 10             	add    $0x10,%esp$/;"	l
c010109c	obj/kernel.asm	/^c010109c:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c01010a0	obj/kernel.asm	/^c01010a0:	83 c0 01             	add    $0x1,%eax$/;"	l
c01010a3	obj/kernel.asm	/^c01010a3:	66 89 45 f6          	mov    %ax,-0xa(%ebp)$/;"	l
c01010a7	obj/kernel.asm	/^c01010a7:	66 83 7d f6 03       	cmpw   $0x3,-0xa(%ebp)$/;"	l
c01010ac	obj/kernel.asm	/^c01010ac:	0f 86 34 fd ff ff    	jbe    c0100de6 <ide_init+0x16>$/;"	l
c01010b2	obj/kernel.asm	/^c01010b2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01010b5	obj/kernel.asm	/^c01010b5:	6a 0e                	push   $0xe$/;"	l
c01010b7	obj/kernel.asm	/^c01010b7:	e8 73 0e 00 00       	call   c0101f2f <pic_enable>$/;"	l
c01010bc	obj/kernel.asm	/^c01010bc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01010bf	obj/kernel.asm	/^c01010bf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01010c2	obj/kernel.asm	/^c01010c2:	6a 0f                	push   $0xf$/;"	l
c01010c4	obj/kernel.asm	/^c01010c4:	e8 66 0e 00 00       	call   c0101f2f <pic_enable>$/;"	l
c01010c9	obj/kernel.asm	/^c01010c9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01010cc	obj/kernel.asm	/^c01010cc:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c01010cf	obj/kernel.asm	/^c01010cf:	5b                   	pop    %ebx$/;"	l
c01010d0	obj/kernel.asm	/^c01010d0:	5f                   	pop    %edi$/;"	l
c01010d1	obj/kernel.asm	/^c01010d1:	5d                   	pop    %ebp$/;"	l
c01010d2	obj/kernel.asm	/^c01010d2:	c3                   	ret    $/;"	l
c01010d3	obj/kernel.asm	/^c01010d3 <ide_device_valid>:$/;"	l
c01010d3	obj/kernel.asm	/^c01010d3:	55                   	push   %ebp$/;"	l
c01010d4	obj/kernel.asm	/^c01010d4:	89 e5                	mov    %esp,%ebp$/;"	l
c01010d6	obj/kernel.asm	/^c01010d6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01010d9	obj/kernel.asm	/^c01010d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01010dc	obj/kernel.asm	/^c01010dc:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c01010e0	obj/kernel.asm	/^c01010e0:	66 83 7d fc 03       	cmpw   $0x3,-0x4(%ebp)$/;"	l
c01010e5	obj/kernel.asm	/^c01010e5:	77 25                	ja     c010110c <ide_device_valid+0x39>$/;"	l
c01010e7	obj/kernel.asm	/^c01010e7:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c01010eb	obj/kernel.asm	/^c01010eb:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01010ee	obj/kernel.asm	/^c01010ee:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01010f5	obj/kernel.asm	/^c01010f5:	29 c2                	sub    %eax,%edx$/;"	l
c01010f7	obj/kernel.asm	/^c01010f7:	89 d0                	mov    %edx,%eax$/;"	l
c01010f9	obj/kernel.asm	/^c01010f9:	05 40 b3 19 c0       	add    $0xc019b340,%eax$/;"	l
c01010fe	obj/kernel.asm	/^c01010fe:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101101	obj/kernel.asm	/^c0101101:	84 c0                	test   %al,%al$/;"	l
c0101103	obj/kernel.asm	/^c0101103:	74 07                	je     c010110c <ide_device_valid+0x39>$/;"	l
c0101105	obj/kernel.asm	/^c0101105:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010110a	obj/kernel.asm	/^c010110a:	eb 05                	jmp    c0101111 <ide_device_valid+0x3e>$/;"	l
c010110c	obj/kernel.asm	/^c010110c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101111	obj/kernel.asm	/^c0101111:	c9                   	leave  $/;"	l
c0101112	obj/kernel.asm	/^c0101112:	c3                   	ret    $/;"	l
c0101113	obj/kernel.asm	/^c0101113 <ide_device_size>:$/;"	l
c0101113	obj/kernel.asm	/^c0101113:	55                   	push   %ebp$/;"	l
c0101114	obj/kernel.asm	/^c0101114:	89 e5                	mov    %esp,%ebp$/;"	l
c0101116	obj/kernel.asm	/^c0101116:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0101119	obj/kernel.asm	/^c0101119:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010111c	obj/kernel.asm	/^c010111c:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c0101120	obj/kernel.asm	/^c0101120:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101124	obj/kernel.asm	/^c0101124:	50                   	push   %eax$/;"	l
c0101125	obj/kernel.asm	/^c0101125:	e8 a9 ff ff ff       	call   c01010d3 <ide_device_valid>$/;"	l
c010112a	obj/kernel.asm	/^c010112a:	83 c4 04             	add    $0x4,%esp$/;"	l
c010112d	obj/kernel.asm	/^c010112d:	85 c0                	test   %eax,%eax$/;"	l
c010112f	obj/kernel.asm	/^c010112f:	74 1c                	je     c010114d <ide_device_size+0x3a>$/;"	l
c0101131	obj/kernel.asm	/^c0101131:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101135	obj/kernel.asm	/^c0101135:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101138	obj/kernel.asm	/^c0101138:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010113f	obj/kernel.asm	/^c010113f:	29 c2                	sub    %eax,%edx$/;"	l
c0101141	obj/kernel.asm	/^c0101141:	89 d0                	mov    %edx,%eax$/;"	l
c0101143	obj/kernel.asm	/^c0101143:	05 40 b3 19 c0       	add    $0xc019b340,%eax$/;"	l
c0101148	obj/kernel.asm	/^c0101148:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010114b	obj/kernel.asm	/^c010114b:	eb 05                	jmp    c0101152 <ide_device_size+0x3f>$/;"	l
c010114d	obj/kernel.asm	/^c010114d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101152	obj/kernel.asm	/^c0101152:	c9                   	leave  $/;"	l
c0101153	obj/kernel.asm	/^c0101153:	c3                   	ret    $/;"	l
c0101154	obj/kernel.asm	/^c0101154 <ide_read_secs>:$/;"	l
c0101154	obj/kernel.asm	/^c0101154:	55                   	push   %ebp$/;"	l
c0101155	obj/kernel.asm	/^c0101155:	89 e5                	mov    %esp,%ebp$/;"	l
c0101157	obj/kernel.asm	/^c0101157:	57                   	push   %edi$/;"	l
c0101158	obj/kernel.asm	/^c0101158:	53                   	push   %ebx$/;"	l
c0101159	obj/kernel.asm	/^c0101159:	83 ec 40             	sub    $0x40,%esp$/;"	l
c010115c	obj/kernel.asm	/^c010115c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010115f	obj/kernel.asm	/^c010115f:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101163	obj/kernel.asm	/^c0101163:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c010116a	obj/kernel.asm	/^c010116a:	77 25                	ja     c0101191 <ide_read_secs+0x3d>$/;"	l
c010116c	obj/kernel.asm	/^c010116c:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c0101171	obj/kernel.asm	/^c0101171:	77 1e                	ja     c0101191 <ide_read_secs+0x3d>$/;"	l
c0101173	obj/kernel.asm	/^c0101173:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101177	obj/kernel.asm	/^c0101177:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010117a	obj/kernel.asm	/^c010117a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101181	obj/kernel.asm	/^c0101181:	29 c2                	sub    %eax,%edx$/;"	l
c0101183	obj/kernel.asm	/^c0101183:	89 d0                	mov    %edx,%eax$/;"	l
c0101185	obj/kernel.asm	/^c0101185:	05 40 b3 19 c0       	add    $0xc019b340,%eax$/;"	l
c010118a	obj/kernel.asm	/^c010118a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010118d	obj/kernel.asm	/^c010118d:	84 c0                	test   %al,%al$/;"	l
c010118f	obj/kernel.asm	/^c010118f:	75 19                	jne    c01011aa <ide_read_secs+0x56>$/;"	l
c0101191	obj/kernel.asm	/^c0101191:	68 ac b7 10 c0       	push   $0xc010b7ac$/;"	l
c0101196	obj/kernel.asm	/^c0101196:	68 67 b7 10 c0       	push   $0xc010b767$/;"	l
c010119b	obj/kernel.asm	/^c010119b:	68 9f 00 00 00       	push   $0x9f$/;"	l
c01011a0	obj/kernel.asm	/^c01011a0:	68 7c b7 10 c0       	push   $0xc010b77c$/;"	l
c01011a5	obj/kernel.asm	/^c01011a5:	e8 30 f2 ff ff       	call   c01003da <__panic>$/;"	l
c01011aa	obj/kernel.asm	/^c01011aa:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c01011b1	obj/kernel.asm	/^c01011b1:	77 0f                	ja     c01011c2 <ide_read_secs+0x6e>$/;"	l
c01011b3	obj/kernel.asm	/^c01011b3:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01011b6	obj/kernel.asm	/^c01011b6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01011b9	obj/kernel.asm	/^c01011b9:	01 d0                	add    %edx,%eax$/;"	l
c01011bb	obj/kernel.asm	/^c01011bb:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c01011c0	obj/kernel.asm	/^c01011c0:	76 19                	jbe    c01011db <ide_read_secs+0x87>$/;"	l
c01011c2	obj/kernel.asm	/^c01011c2:	68 d4 b7 10 c0       	push   $0xc010b7d4$/;"	l
c01011c7	obj/kernel.asm	/^c01011c7:	68 67 b7 10 c0       	push   $0xc010b767$/;"	l
c01011cc	obj/kernel.asm	/^c01011cc:	68 a0 00 00 00       	push   $0xa0$/;"	l
c01011d1	obj/kernel.asm	/^c01011d1:	68 7c b7 10 c0       	push   $0xc010b77c$/;"	l
c01011d6	obj/kernel.asm	/^c01011d6:	e8 ff f1 ff ff       	call   c01003da <__panic>$/;"	l
c01011db	obj/kernel.asm	/^c01011db:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01011df	obj/kernel.asm	/^c01011df:	66 d1 e8             	shr    %ax$/;"	l
c01011e2	obj/kernel.asm	/^c01011e2:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01011e5	obj/kernel.asm	/^c01011e5:	0f b7 04 85 1c b7 10 	movzwl -0x3fef48e4(,%eax,4),%eax$/;"	l
c01011ec	obj/kernel.asm	/^c01011ec:	c0 $/;"	l
c01011ed	obj/kernel.asm	/^c01011ed:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c01011f1	obj/kernel.asm	/^c01011f1:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01011f5	obj/kernel.asm	/^c01011f5:	66 d1 e8             	shr    %ax$/;"	l
c01011f8	obj/kernel.asm	/^c01011f8:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01011fb	obj/kernel.asm	/^c01011fb:	0f b7 04 85 1e b7 10 	movzwl -0x3fef48e2(,%eax,4),%eax$/;"	l
c0101202	obj/kernel.asm	/^c0101202:	c0 $/;"	l
c0101203	obj/kernel.asm	/^c0101203:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c0101207	obj/kernel.asm	/^c0101207:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010120b	obj/kernel.asm	/^c010120b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010120e	obj/kernel.asm	/^c010120e:	6a 00                	push   $0x0$/;"	l
c0101210	obj/kernel.asm	/^c0101210:	50                   	push   %eax$/;"	l
c0101211	obj/kernel.asm	/^c0101211:	e8 60 fb ff ff       	call   c0100d76 <ide_wait_ready>$/;"	l
c0101216	obj/kernel.asm	/^c0101216:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101219	obj/kernel.asm	/^c0101219:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c010121d	obj/kernel.asm	/^c010121d:	83 c0 02             	add    $0x2,%eax$/;"	l
c0101220	obj/kernel.asm	/^c0101220:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101223	obj/kernel.asm	/^c0101223:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0101227	obj/kernel.asm	/^c0101227:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c010122b	obj/kernel.asm	/^c010122b:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c010122f	obj/kernel.asm	/^c010122f:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101233	obj/kernel.asm	/^c0101233:	ee                   	out    %al,(%dx)$/;"	l
c0101234	obj/kernel.asm	/^c0101234:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101237	obj/kernel.asm	/^c0101237:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010123a	obj/kernel.asm	/^c010123a:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010123e	obj/kernel.asm	/^c010123e:	83 c2 02             	add    $0x2,%edx$/;"	l
c0101241	obj/kernel.asm	/^c0101241:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101244	obj/kernel.asm	/^c0101244:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c0101248	obj/kernel.asm	/^c0101248:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c010124b	obj/kernel.asm	/^c010124b:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c010124f	obj/kernel.asm	/^c010124f:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101253	obj/kernel.asm	/^c0101253:	ee                   	out    %al,(%dx)$/;"	l
c0101254	obj/kernel.asm	/^c0101254:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101257	obj/kernel.asm	/^c0101257:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010125a	obj/kernel.asm	/^c010125a:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010125e	obj/kernel.asm	/^c010125e:	83 c2 03             	add    $0x3,%edx$/;"	l
c0101261	obj/kernel.asm	/^c0101261:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101264	obj/kernel.asm	/^c0101264:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101268	obj/kernel.asm	/^c0101268:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c010126b	obj/kernel.asm	/^c010126b:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c010126f	obj/kernel.asm	/^c010126f:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101273	obj/kernel.asm	/^c0101273:	ee                   	out    %al,(%dx)$/;"	l
c0101274	obj/kernel.asm	/^c0101274:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101277	obj/kernel.asm	/^c0101277:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c010127a	obj/kernel.asm	/^c010127a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010127d	obj/kernel.asm	/^c010127d:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101281	obj/kernel.asm	/^c0101281:	83 c2 04             	add    $0x4,%edx$/;"	l
c0101284	obj/kernel.asm	/^c0101284:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101287	obj/kernel.asm	/^c0101287:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c010128b	obj/kernel.asm	/^c010128b:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c010128e	obj/kernel.asm	/^c010128e:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0101292	obj/kernel.asm	/^c0101292:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c0101296	obj/kernel.asm	/^c0101296:	ee                   	out    %al,(%dx)$/;"	l
c0101297	obj/kernel.asm	/^c0101297:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010129a	obj/kernel.asm	/^c010129a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010129d	obj/kernel.asm	/^c010129d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01012a0	obj/kernel.asm	/^c01012a0:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01012a4	obj/kernel.asm	/^c01012a4:	83 c2 05             	add    $0x5,%edx$/;"	l
c01012a7	obj/kernel.asm	/^c01012a7:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01012aa	obj/kernel.asm	/^c01012aa:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c01012ae	obj/kernel.asm	/^c01012ae:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c01012b1	obj/kernel.asm	/^c01012b1:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c01012b5	obj/kernel.asm	/^c01012b5:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c01012b9	obj/kernel.asm	/^c01012b9:	ee                   	out    %al,(%dx)$/;"	l
c01012ba	obj/kernel.asm	/^c01012ba:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01012be	obj/kernel.asm	/^c01012be:	83 e0 01             	and    $0x1,%eax$/;"	l
c01012c1	obj/kernel.asm	/^c01012c1:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c01012c4	obj/kernel.asm	/^c01012c4:	89 c2                	mov    %eax,%edx$/;"	l
c01012c6	obj/kernel.asm	/^c01012c6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01012c9	obj/kernel.asm	/^c01012c9:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c01012cc	obj/kernel.asm	/^c01012cc:	83 e0 0f             	and    $0xf,%eax$/;"	l
c01012cf	obj/kernel.asm	/^c01012cf:	09 d0                	or     %edx,%eax$/;"	l
c01012d1	obj/kernel.asm	/^c01012d1:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c01012d4	obj/kernel.asm	/^c01012d4:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01012d7	obj/kernel.asm	/^c01012d7:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01012db	obj/kernel.asm	/^c01012db:	83 c2 06             	add    $0x6,%edx$/;"	l
c01012de	obj/kernel.asm	/^c01012de:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01012e1	obj/kernel.asm	/^c01012e1:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c01012e5	obj/kernel.asm	/^c01012e5:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c01012e8	obj/kernel.asm	/^c01012e8:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c01012ec	obj/kernel.asm	/^c01012ec:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c01012f0	obj/kernel.asm	/^c01012f0:	ee                   	out    %al,(%dx)$/;"	l
c01012f1	obj/kernel.asm	/^c01012f1:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01012f5	obj/kernel.asm	/^c01012f5:	83 c0 07             	add    $0x7,%eax$/;"	l
c01012f8	obj/kernel.asm	/^c01012f8:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01012fb	obj/kernel.asm	/^c01012fb:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c01012ff	obj/kernel.asm	/^c01012ff:	c6 45 d5 20          	movb   $0x20,-0x2b(%ebp)$/;"	l
c0101303	obj/kernel.asm	/^c0101303:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0101307	obj/kernel.asm	/^c0101307:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c010130b	obj/kernel.asm	/^c010130b:	ee                   	out    %al,(%dx)$/;"	l
c010130c	obj/kernel.asm	/^c010130c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101313	obj/kernel.asm	/^c0101313:	eb 58                	jmp    c010136d <ide_read_secs+0x219>$/;"	l
c0101315	obj/kernel.asm	/^c0101315:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101319	obj/kernel.asm	/^c0101319:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010131c	obj/kernel.asm	/^c010131c:	6a 01                	push   $0x1$/;"	l
c010131e	obj/kernel.asm	/^c010131e:	50                   	push   %eax$/;"	l
c010131f	obj/kernel.asm	/^c010131f:	e8 52 fa ff ff       	call   c0100d76 <ide_wait_ready>$/;"	l
c0101324	obj/kernel.asm	/^c0101324:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101327	obj/kernel.asm	/^c0101327:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010132a	obj/kernel.asm	/^c010132a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010132e	obj/kernel.asm	/^c010132e:	74 02                	je     c0101332 <ide_read_secs+0x1de>$/;"	l
c0101330	obj/kernel.asm	/^c0101330:	eb 41                	jmp    c0101373 <ide_read_secs+0x21f>$/;"	l
c0101332	obj/kernel.asm	/^c0101332:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101336	obj/kernel.asm	/^c0101336:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0101339	obj/kernel.asm	/^c0101339:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010133c	obj/kernel.asm	/^c010133c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010133f	obj/kernel.asm	/^c010133f:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c0101346	obj/kernel.asm	/^c0101346:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0101349	obj/kernel.asm	/^c0101349:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c010134c	obj/kernel.asm	/^c010134c:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010134f	obj/kernel.asm	/^c010134f:	89 cb                	mov    %ecx,%ebx$/;"	l
c0101351	obj/kernel.asm	/^c0101351:	89 df                	mov    %ebx,%edi$/;"	l
c0101353	obj/kernel.asm	/^c0101353:	89 c1                	mov    %eax,%ecx$/;"	l
c0101355	obj/kernel.asm	/^c0101355:	fc                   	cld    $/;"	l
c0101356	obj/kernel.asm	/^c0101356:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c0101358	obj/kernel.asm	/^c0101358:	89 c8                	mov    %ecx,%eax$/;"	l
c010135a	obj/kernel.asm	/^c010135a:	89 fb                	mov    %edi,%ebx$/;"	l
c010135c	obj/kernel.asm	/^c010135c:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c010135f	obj/kernel.asm	/^c010135f:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0101362	obj/kernel.asm	/^c0101362:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0101366	obj/kernel.asm	/^c0101366:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c010136d	obj/kernel.asm	/^c010136d:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0101371	obj/kernel.asm	/^c0101371:	75 a2                	jne    c0101315 <ide_read_secs+0x1c1>$/;"	l
c0101373	obj/kernel.asm	/^c0101373:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101376	obj/kernel.asm	/^c0101376:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c0101379	obj/kernel.asm	/^c0101379:	5b                   	pop    %ebx$/;"	l
c010137a	obj/kernel.asm	/^c010137a:	5f                   	pop    %edi$/;"	l
c010137b	obj/kernel.asm	/^c010137b:	5d                   	pop    %ebp$/;"	l
c010137c	obj/kernel.asm	/^c010137c:	c3                   	ret    $/;"	l
c010137d	obj/kernel.asm	/^c010137d <ide_write_secs>:$/;"	l
c010137d	obj/kernel.asm	/^c010137d:	55                   	push   %ebp$/;"	l
c010137e	obj/kernel.asm	/^c010137e:	89 e5                	mov    %esp,%ebp$/;"	l
c0101380	obj/kernel.asm	/^c0101380:	56                   	push   %esi$/;"	l
c0101381	obj/kernel.asm	/^c0101381:	53                   	push   %ebx$/;"	l
c0101382	obj/kernel.asm	/^c0101382:	83 ec 40             	sub    $0x40,%esp$/;"	l
c0101385	obj/kernel.asm	/^c0101385:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101388	obj/kernel.asm	/^c0101388:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c010138c	obj/kernel.asm	/^c010138c:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c0101393	obj/kernel.asm	/^c0101393:	77 25                	ja     c01013ba <ide_write_secs+0x3d>$/;"	l
c0101395	obj/kernel.asm	/^c0101395:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c010139a	obj/kernel.asm	/^c010139a:	77 1e                	ja     c01013ba <ide_write_secs+0x3d>$/;"	l
c010139c	obj/kernel.asm	/^c010139c:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01013a0	obj/kernel.asm	/^c01013a0:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01013a3	obj/kernel.asm	/^c01013a3:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01013aa	obj/kernel.asm	/^c01013aa:	29 c2                	sub    %eax,%edx$/;"	l
c01013ac	obj/kernel.asm	/^c01013ac:	89 d0                	mov    %edx,%eax$/;"	l
c01013ae	obj/kernel.asm	/^c01013ae:	05 40 b3 19 c0       	add    $0xc019b340,%eax$/;"	l
c01013b3	obj/kernel.asm	/^c01013b3:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01013b6	obj/kernel.asm	/^c01013b6:	84 c0                	test   %al,%al$/;"	l
c01013b8	obj/kernel.asm	/^c01013b8:	75 19                	jne    c01013d3 <ide_write_secs+0x56>$/;"	l
c01013ba	obj/kernel.asm	/^c01013ba:	68 ac b7 10 c0       	push   $0xc010b7ac$/;"	l
c01013bf	obj/kernel.asm	/^c01013bf:	68 67 b7 10 c0       	push   $0xc010b767$/;"	l
c01013c4	obj/kernel.asm	/^c01013c4:	68 bc 00 00 00       	push   $0xbc$/;"	l
c01013c9	obj/kernel.asm	/^c01013c9:	68 7c b7 10 c0       	push   $0xc010b77c$/;"	l
c01013ce	obj/kernel.asm	/^c01013ce:	e8 07 f0 ff ff       	call   c01003da <__panic>$/;"	l
c01013d3	obj/kernel.asm	/^c01013d3:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c01013da	obj/kernel.asm	/^c01013da:	77 0f                	ja     c01013eb <ide_write_secs+0x6e>$/;"	l
c01013dc	obj/kernel.asm	/^c01013dc:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01013df	obj/kernel.asm	/^c01013df:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01013e2	obj/kernel.asm	/^c01013e2:	01 d0                	add    %edx,%eax$/;"	l
c01013e4	obj/kernel.asm	/^c01013e4:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c01013e9	obj/kernel.asm	/^c01013e9:	76 19                	jbe    c0101404 <ide_write_secs+0x87>$/;"	l
c01013eb	obj/kernel.asm	/^c01013eb:	68 d4 b7 10 c0       	push   $0xc010b7d4$/;"	l
c01013f0	obj/kernel.asm	/^c01013f0:	68 67 b7 10 c0       	push   $0xc010b767$/;"	l
c01013f5	obj/kernel.asm	/^c01013f5:	68 bd 00 00 00       	push   $0xbd$/;"	l
c01013fa	obj/kernel.asm	/^c01013fa:	68 7c b7 10 c0       	push   $0xc010b77c$/;"	l
c01013ff	obj/kernel.asm	/^c01013ff:	e8 d6 ef ff ff       	call   c01003da <__panic>$/;"	l
c0101404	obj/kernel.asm	/^c0101404:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101408	obj/kernel.asm	/^c0101408:	66 d1 e8             	shr    %ax$/;"	l
c010140b	obj/kernel.asm	/^c010140b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010140e	obj/kernel.asm	/^c010140e:	0f b7 04 85 1c b7 10 	movzwl -0x3fef48e4(,%eax,4),%eax$/;"	l
c0101415	obj/kernel.asm	/^c0101415:	c0 $/;"	l
c0101416	obj/kernel.asm	/^c0101416:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c010141a	obj/kernel.asm	/^c010141a:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c010141e	obj/kernel.asm	/^c010141e:	66 d1 e8             	shr    %ax$/;"	l
c0101421	obj/kernel.asm	/^c0101421:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101424	obj/kernel.asm	/^c0101424:	0f b7 04 85 1e b7 10 	movzwl -0x3fef48e2(,%eax,4),%eax$/;"	l
c010142b	obj/kernel.asm	/^c010142b:	c0 $/;"	l
c010142c	obj/kernel.asm	/^c010142c:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c0101430	obj/kernel.asm	/^c0101430:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101434	obj/kernel.asm	/^c0101434:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101437	obj/kernel.asm	/^c0101437:	6a 00                	push   $0x0$/;"	l
c0101439	obj/kernel.asm	/^c0101439:	50                   	push   %eax$/;"	l
c010143a	obj/kernel.asm	/^c010143a:	e8 37 f9 ff ff       	call   c0100d76 <ide_wait_ready>$/;"	l
c010143f	obj/kernel.asm	/^c010143f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101442	obj/kernel.asm	/^c0101442:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101446	obj/kernel.asm	/^c0101446:	83 c0 02             	add    $0x2,%eax$/;"	l
c0101449	obj/kernel.asm	/^c0101449:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010144c	obj/kernel.asm	/^c010144c:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0101450	obj/kernel.asm	/^c0101450:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c0101454	obj/kernel.asm	/^c0101454:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101458	obj/kernel.asm	/^c0101458:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c010145c	obj/kernel.asm	/^c010145c:	ee                   	out    %al,(%dx)$/;"	l
c010145d	obj/kernel.asm	/^c010145d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101460	obj/kernel.asm	/^c0101460:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101463	obj/kernel.asm	/^c0101463:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101467	obj/kernel.asm	/^c0101467:	83 c2 02             	add    $0x2,%edx$/;"	l
c010146a	obj/kernel.asm	/^c010146a:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010146d	obj/kernel.asm	/^c010146d:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c0101471	obj/kernel.asm	/^c0101471:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c0101474	obj/kernel.asm	/^c0101474:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101478	obj/kernel.asm	/^c0101478:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c010147c	obj/kernel.asm	/^c010147c:	ee                   	out    %al,(%dx)$/;"	l
c010147d	obj/kernel.asm	/^c010147d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101480	obj/kernel.asm	/^c0101480:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101483	obj/kernel.asm	/^c0101483:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101487	obj/kernel.asm	/^c0101487:	83 c2 03             	add    $0x3,%edx$/;"	l
c010148a	obj/kernel.asm	/^c010148a:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010148d	obj/kernel.asm	/^c010148d:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101491	obj/kernel.asm	/^c0101491:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101494	obj/kernel.asm	/^c0101494:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101498	obj/kernel.asm	/^c0101498:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c010149c	obj/kernel.asm	/^c010149c:	ee                   	out    %al,(%dx)$/;"	l
c010149d	obj/kernel.asm	/^c010149d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01014a0	obj/kernel.asm	/^c01014a0:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c01014a3	obj/kernel.asm	/^c01014a3:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01014a6	obj/kernel.asm	/^c01014a6:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01014aa	obj/kernel.asm	/^c01014aa:	83 c2 04             	add    $0x4,%edx$/;"	l
c01014ad	obj/kernel.asm	/^c01014ad:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01014b0	obj/kernel.asm	/^c01014b0:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c01014b4	obj/kernel.asm	/^c01014b4:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c01014b7	obj/kernel.asm	/^c01014b7:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01014bb	obj/kernel.asm	/^c01014bb:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c01014bf	obj/kernel.asm	/^c01014bf:	ee                   	out    %al,(%dx)$/;"	l
c01014c0	obj/kernel.asm	/^c01014c0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01014c3	obj/kernel.asm	/^c01014c3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01014c6	obj/kernel.asm	/^c01014c6:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01014c9	obj/kernel.asm	/^c01014c9:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01014cd	obj/kernel.asm	/^c01014cd:	83 c2 05             	add    $0x5,%edx$/;"	l
c01014d0	obj/kernel.asm	/^c01014d0:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01014d3	obj/kernel.asm	/^c01014d3:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c01014d7	obj/kernel.asm	/^c01014d7:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c01014da	obj/kernel.asm	/^c01014da:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c01014de	obj/kernel.asm	/^c01014de:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c01014e2	obj/kernel.asm	/^c01014e2:	ee                   	out    %al,(%dx)$/;"	l
c01014e3	obj/kernel.asm	/^c01014e3:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01014e7	obj/kernel.asm	/^c01014e7:	83 e0 01             	and    $0x1,%eax$/;"	l
c01014ea	obj/kernel.asm	/^c01014ea:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c01014ed	obj/kernel.asm	/^c01014ed:	89 c2                	mov    %eax,%edx$/;"	l
c01014ef	obj/kernel.asm	/^c01014ef:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01014f2	obj/kernel.asm	/^c01014f2:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c01014f5	obj/kernel.asm	/^c01014f5:	83 e0 0f             	and    $0xf,%eax$/;"	l
c01014f8	obj/kernel.asm	/^c01014f8:	09 d0                	or     %edx,%eax$/;"	l
c01014fa	obj/kernel.asm	/^c01014fa:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c01014fd	obj/kernel.asm	/^c01014fd:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101500	obj/kernel.asm	/^c0101500:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101504	obj/kernel.asm	/^c0101504:	83 c2 06             	add    $0x6,%edx$/;"	l
c0101507	obj/kernel.asm	/^c0101507:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010150a	obj/kernel.asm	/^c010150a:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c010150e	obj/kernel.asm	/^c010150e:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c0101511	obj/kernel.asm	/^c0101511:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0101515	obj/kernel.asm	/^c0101515:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c0101519	obj/kernel.asm	/^c0101519:	ee                   	out    %al,(%dx)$/;"	l
c010151a	obj/kernel.asm	/^c010151a:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010151e	obj/kernel.asm	/^c010151e:	83 c0 07             	add    $0x7,%eax$/;"	l
c0101521	obj/kernel.asm	/^c0101521:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101524	obj/kernel.asm	/^c0101524:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c0101528	obj/kernel.asm	/^c0101528:	c6 45 d5 30          	movb   $0x30,-0x2b(%ebp)$/;"	l
c010152c	obj/kernel.asm	/^c010152c:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0101530	obj/kernel.asm	/^c0101530:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0101534	obj/kernel.asm	/^c0101534:	ee                   	out    %al,(%dx)$/;"	l
c0101535	obj/kernel.asm	/^c0101535:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010153c	obj/kernel.asm	/^c010153c:	eb 58                	jmp    c0101596 <ide_write_secs+0x219>$/;"	l
c010153e	obj/kernel.asm	/^c010153e:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101542	obj/kernel.asm	/^c0101542:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101545	obj/kernel.asm	/^c0101545:	6a 01                	push   $0x1$/;"	l
c0101547	obj/kernel.asm	/^c0101547:	50                   	push   %eax$/;"	l
c0101548	obj/kernel.asm	/^c0101548:	e8 29 f8 ff ff       	call   c0100d76 <ide_wait_ready>$/;"	l
c010154d	obj/kernel.asm	/^c010154d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101550	obj/kernel.asm	/^c0101550:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101553	obj/kernel.asm	/^c0101553:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101557	obj/kernel.asm	/^c0101557:	74 02                	je     c010155b <ide_write_secs+0x1de>$/;"	l
c0101559	obj/kernel.asm	/^c0101559:	eb 41                	jmp    c010159c <ide_write_secs+0x21f>$/;"	l
c010155b	obj/kernel.asm	/^c010155b:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010155f	obj/kernel.asm	/^c010155f:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0101562	obj/kernel.asm	/^c0101562:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101565	obj/kernel.asm	/^c0101565:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0101568	obj/kernel.asm	/^c0101568:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c010156f	obj/kernel.asm	/^c010156f:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0101572	obj/kernel.asm	/^c0101572:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c0101575	obj/kernel.asm	/^c0101575:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0101578	obj/kernel.asm	/^c0101578:	89 cb                	mov    %ecx,%ebx$/;"	l
c010157a	obj/kernel.asm	/^c010157a:	89 de                	mov    %ebx,%esi$/;"	l
c010157c	obj/kernel.asm	/^c010157c:	89 c1                	mov    %eax,%ecx$/;"	l
c010157e	obj/kernel.asm	/^c010157e:	fc                   	cld    $/;"	l
c010157f	obj/kernel.asm	/^c010157f:	f2 6f                	repnz outsl %ds:(%esi),(%dx)$/;"	l
c0101581	obj/kernel.asm	/^c0101581:	89 c8                	mov    %ecx,%eax$/;"	l
c0101583	obj/kernel.asm	/^c0101583:	89 f3                	mov    %esi,%ebx$/;"	l
c0101585	obj/kernel.asm	/^c0101585:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c0101588	obj/kernel.asm	/^c0101588:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010158b	obj/kernel.asm	/^c010158b:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c010158f	obj/kernel.asm	/^c010158f:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c0101596	obj/kernel.asm	/^c0101596:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010159a	obj/kernel.asm	/^c010159a:	75 a2                	jne    c010153e <ide_write_secs+0x1c1>$/;"	l
c010159c	obj/kernel.asm	/^c010159c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010159f	obj/kernel.asm	/^c010159f:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c01015a2	obj/kernel.asm	/^c01015a2:	5b                   	pop    %ebx$/;"	l
c01015a3	obj/kernel.asm	/^c01015a3:	5e                   	pop    %esi$/;"	l
c01015a4	obj/kernel.asm	/^c01015a4:	5d                   	pop    %ebp$/;"	l
c01015a5	obj/kernel.asm	/^c01015a5:	c3                   	ret    $/;"	l
c01015a6	obj/kernel.asm	/^c01015a6 <clock_init>:$/;"	l
c01015a6	obj/kernel.asm	/^c01015a6:	55                   	push   %ebp$/;"	l
c01015a7	obj/kernel.asm	/^c01015a7:	89 e5                	mov    %esp,%ebp$/;"	l
c01015a9	obj/kernel.asm	/^c01015a9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01015ac	obj/kernel.asm	/^c01015ac:	66 c7 45 f6 43 00    	movw   $0x43,-0xa(%ebp)$/;"	l
c01015b2	obj/kernel.asm	/^c01015b2:	c6 45 f5 34          	movb   $0x34,-0xb(%ebp)$/;"	l
c01015b6	obj/kernel.asm	/^c01015b6:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c01015ba	obj/kernel.asm	/^c01015ba:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c01015be	obj/kernel.asm	/^c01015be:	ee                   	out    %al,(%dx)$/;"	l
c01015bf	obj/kernel.asm	/^c01015bf:	66 c7 45 f2 40 00    	movw   $0x40,-0xe(%ebp)$/;"	l
c01015c5	obj/kernel.asm	/^c01015c5:	c6 45 f1 9c          	movb   $0x9c,-0xf(%ebp)$/;"	l
c01015c9	obj/kernel.asm	/^c01015c9:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01015cd	obj/kernel.asm	/^c01015cd:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01015d1	obj/kernel.asm	/^c01015d1:	ee                   	out    %al,(%dx)$/;"	l
c01015d2	obj/kernel.asm	/^c01015d2:	66 c7 45 ee 40 00    	movw   $0x40,-0x12(%ebp)$/;"	l
c01015d8	obj/kernel.asm	/^c01015d8:	c6 45 ed 2e          	movb   $0x2e,-0x13(%ebp)$/;"	l
c01015dc	obj/kernel.asm	/^c01015dc:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01015e0	obj/kernel.asm	/^c01015e0:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01015e4	obj/kernel.asm	/^c01015e4:	ee                   	out    %al,(%dx)$/;"	l
c01015e5	obj/kernel.asm	/^c01015e5:	c7 05 14 e0 19 c0 00 	movl   $0x0,0xc019e014$/;"	l
c01015ec	obj/kernel.asm	/^c01015ec:	00 00 00 $/;"	l
c01015ef	obj/kernel.asm	/^c01015ef:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01015f2	obj/kernel.asm	/^c01015f2:	68 0e b8 10 c0       	push   $0xc010b80e$/;"	l
c01015f7	obj/kernel.asm	/^c01015f7:	e8 79 ec ff ff       	call   c0100275 <cprintf>$/;"	l
c01015fc	obj/kernel.asm	/^c01015fc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01015ff	obj/kernel.asm	/^c01015ff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101602	obj/kernel.asm	/^c0101602:	6a 00                	push   $0x0$/;"	l
c0101604	obj/kernel.asm	/^c0101604:	e8 26 09 00 00       	call   c0101f2f <pic_enable>$/;"	l
c0101609	obj/kernel.asm	/^c0101609:	83 c4 10             	add    $0x10,%esp$/;"	l
c010160c	obj/kernel.asm	/^c010160c:	c9                   	leave  $/;"	l
c010160d	obj/kernel.asm	/^c010160d:	c3                   	ret    $/;"	l
c010160e	obj/kernel.asm	/^c010160e <__intr_save>:$/;"	l
c010160e	obj/kernel.asm	/^c010160e:	55                   	push   %ebp$/;"	l
c010160f	obj/kernel.asm	/^c010160f:	89 e5                	mov    %esp,%ebp$/;"	l
c0101611	obj/kernel.asm	/^c0101611:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101614	obj/kernel.asm	/^c0101614:	9c                   	pushf  $/;"	l
c0101615	obj/kernel.asm	/^c0101615:	58                   	pop    %eax$/;"	l
c0101616	obj/kernel.asm	/^c0101616:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101619	obj/kernel.asm	/^c0101619:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010161c	obj/kernel.asm	/^c010161c:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0101621	obj/kernel.asm	/^c0101621:	85 c0                	test   %eax,%eax$/;"	l
c0101623	obj/kernel.asm	/^c0101623:	74 0c                	je     c0101631 <__intr_save+0x23>$/;"	l
c0101625	obj/kernel.asm	/^c0101625:	e8 73 0a 00 00       	call   c010209d <intr_disable>$/;"	l
c010162a	obj/kernel.asm	/^c010162a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010162f	obj/kernel.asm	/^c010162f:	eb 05                	jmp    c0101636 <__intr_save+0x28>$/;"	l
c0101631	obj/kernel.asm	/^c0101631:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101636	obj/kernel.asm	/^c0101636:	c9                   	leave  $/;"	l
c0101637	obj/kernel.asm	/^c0101637:	c3                   	ret    $/;"	l
c0101638	obj/kernel.asm	/^c0101638 <__intr_restore>:$/;"	l
c0101638	obj/kernel.asm	/^c0101638:	55                   	push   %ebp$/;"	l
c0101639	obj/kernel.asm	/^c0101639:	89 e5                	mov    %esp,%ebp$/;"	l
c010163b	obj/kernel.asm	/^c010163b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010163e	obj/kernel.asm	/^c010163e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0101642	obj/kernel.asm	/^c0101642:	74 05                	je     c0101649 <__intr_restore+0x11>$/;"	l
c0101644	obj/kernel.asm	/^c0101644:	e8 4e 0a 00 00       	call   c0102097 <intr_enable>$/;"	l
c0101649	obj/kernel.asm	/^c0101649:	c9                   	leave  $/;"	l
c010164a	obj/kernel.asm	/^c010164a:	c3                   	ret    $/;"	l
c010164b	obj/kernel.asm	/^c010164b <delay>:$/;"	l
c010164b	obj/kernel.asm	/^c010164b:	55                   	push   %ebp$/;"	l
c010164c	obj/kernel.asm	/^c010164c:	89 e5                	mov    %esp,%ebp$/;"	l
c010164e	obj/kernel.asm	/^c010164e:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101651	obj/kernel.asm	/^c0101651:	66 c7 45 fe 84 00    	movw   $0x84,-0x2(%ebp)$/;"	l
c0101657	obj/kernel.asm	/^c0101657:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c010165b	obj/kernel.asm	/^c010165b:	89 c2                	mov    %eax,%edx$/;"	l
c010165d	obj/kernel.asm	/^c010165d:	ec                   	in     (%dx),%al$/;"	l
c010165e	obj/kernel.asm	/^c010165e:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c0101661	obj/kernel.asm	/^c0101661:	66 c7 45 fa 84 00    	movw   $0x84,-0x6(%ebp)$/;"	l
c0101667	obj/kernel.asm	/^c0101667:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c010166b	obj/kernel.asm	/^c010166b:	89 c2                	mov    %eax,%edx$/;"	l
c010166d	obj/kernel.asm	/^c010166d:	ec                   	in     (%dx),%al$/;"	l
c010166e	obj/kernel.asm	/^c010166e:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101671	obj/kernel.asm	/^c0101671:	66 c7 45 f6 84 00    	movw   $0x84,-0xa(%ebp)$/;"	l
c0101677	obj/kernel.asm	/^c0101677:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010167b	obj/kernel.asm	/^c010167b:	89 c2                	mov    %eax,%edx$/;"	l
c010167d	obj/kernel.asm	/^c010167d:	ec                   	in     (%dx),%al$/;"	l
c010167e	obj/kernel.asm	/^c010167e:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101681	obj/kernel.asm	/^c0101681:	66 c7 45 f2 84 00    	movw   $0x84,-0xe(%ebp)$/;"	l
c0101687	obj/kernel.asm	/^c0101687:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010168b	obj/kernel.asm	/^c010168b:	89 c2                	mov    %eax,%edx$/;"	l
c010168d	obj/kernel.asm	/^c010168d:	ec                   	in     (%dx),%al$/;"	l
c010168e	obj/kernel.asm	/^c010168e:	88 45 f1             	mov    %al,-0xf(%ebp)$/;"	l
c0101691	obj/kernel.asm	/^c0101691:	c9                   	leave  $/;"	l
c0101692	obj/kernel.asm	/^c0101692:	c3                   	ret    $/;"	l
c0101693	obj/kernel.asm	/^c0101693 <cga_init>:$/;"	l
c0101693	obj/kernel.asm	/^c0101693:	55                   	push   %ebp$/;"	l
c0101694	obj/kernel.asm	/^c0101694:	89 e5                	mov    %esp,%ebp$/;"	l
c0101696	obj/kernel.asm	/^c0101696:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0101699	obj/kernel.asm	/^c0101699:	c7 45 fc 00 80 0b c0 	movl   $0xc00b8000,-0x4(%ebp)$/;"	l
c01016a0	obj/kernel.asm	/^c01016a0:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01016a3	obj/kernel.asm	/^c01016a3:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c01016a6	obj/kernel.asm	/^c01016a6:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c01016aa	obj/kernel.asm	/^c01016aa:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01016ad	obj/kernel.asm	/^c01016ad:	66 c7 00 5a a5       	movw   $0xa55a,(%eax)$/;"	l
c01016b2	obj/kernel.asm	/^c01016b2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01016b5	obj/kernel.asm	/^c01016b5:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c01016b8	obj/kernel.asm	/^c01016b8:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
c01016bc	obj/kernel.asm	/^c01016bc:	74 12                	je     c01016d0 <cga_init+0x3d>$/;"	l
c01016be	obj/kernel.asm	/^c01016be:	c7 45 fc 00 00 0b c0 	movl   $0xc00b0000,-0x4(%ebp)$/;"	l
c01016c5	obj/kernel.asm	/^c01016c5:	66 c7 05 46 b4 19 c0 	movw   $0x3b4,0xc019b446$/;"	l
c01016cc	obj/kernel.asm	/^c01016cc:	b4 03 $/;"	l
c01016ce	obj/kernel.asm	/^c01016ce:	eb 13                	jmp    c01016e3 <cga_init+0x50>$/;"	l
c01016d0	obj/kernel.asm	/^c01016d0:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01016d3	obj/kernel.asm	/^c01016d3:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c01016d7	obj/kernel.asm	/^c01016d7:	66 89 10             	mov    %dx,(%eax)$/;"	l
c01016da	obj/kernel.asm	/^c01016da:	66 c7 05 46 b4 19 c0 	movw   $0x3d4,0xc019b446$/;"	l
c01016e1	obj/kernel.asm	/^c01016e1:	d4 03 $/;"	d
c01016e3	obj/kernel.asm	/^c01016e3:	0f b7 05 46 b4 19 c0 	movzwl 0xc019b446,%eax$/;"	l
c01016ea	obj/kernel.asm	/^c01016ea:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01016ed	obj/kernel.asm	/^c01016ed:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c01016f1	obj/kernel.asm	/^c01016f1:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c01016f5	obj/kernel.asm	/^c01016f5:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01016f9	obj/kernel.asm	/^c01016f9:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01016fd	obj/kernel.asm	/^c01016fd:	ee                   	out    %al,(%dx)$/;"	l
c01016fe	obj/kernel.asm	/^c01016fe:	0f b7 05 46 b4 19 c0 	movzwl 0xc019b446,%eax$/;"	l
c0101705	obj/kernel.asm	/^c0101705:	83 c0 01             	add    $0x1,%eax$/;"	l
c0101708	obj/kernel.asm	/^c0101708:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010170b	obj/kernel.asm	/^c010170b:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c010170f	obj/kernel.asm	/^c010170f:	0f b7 45 ee          	movzwl -0x12(%ebp),%eax$/;"	l
c0101713	obj/kernel.asm	/^c0101713:	89 c2                	mov    %eax,%edx$/;"	l
c0101715	obj/kernel.asm	/^c0101715:	ec                   	in     (%dx),%al$/;"	l
c0101716	obj/kernel.asm	/^c0101716:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c0101719	obj/kernel.asm	/^c0101719:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c010171d	obj/kernel.asm	/^c010171d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101720	obj/kernel.asm	/^c0101720:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c0101723	obj/kernel.asm	/^c0101723:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101726	obj/kernel.asm	/^c0101726:	0f b7 05 46 b4 19 c0 	movzwl 0xc019b446,%eax$/;"	l
c010172d	obj/kernel.asm	/^c010172d:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101730	obj/kernel.asm	/^c0101730:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0101734	obj/kernel.asm	/^c0101734:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c0101738	obj/kernel.asm	/^c0101738:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c010173c	obj/kernel.asm	/^c010173c:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101740	obj/kernel.asm	/^c0101740:	ee                   	out    %al,(%dx)$/;"	l
c0101741	obj/kernel.asm	/^c0101741:	0f b7 05 46 b4 19 c0 	movzwl 0xc019b446,%eax$/;"	l
c0101748	obj/kernel.asm	/^c0101748:	83 c0 01             	add    $0x1,%eax$/;"	l
c010174b	obj/kernel.asm	/^c010174b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010174e	obj/kernel.asm	/^c010174e:	66 89 45 e6          	mov    %ax,-0x1a(%ebp)$/;"	l
c0101752	obj/kernel.asm	/^c0101752:	0f b7 45 e6          	movzwl -0x1a(%ebp),%eax$/;"	l
c0101756	obj/kernel.asm	/^c0101756:	89 c2                	mov    %eax,%edx$/;"	l
c0101758	obj/kernel.asm	/^c0101758:	ec                   	in     (%dx),%al$/;"	l
c0101759	obj/kernel.asm	/^c0101759:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c010175c	obj/kernel.asm	/^c010175c:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101760	obj/kernel.asm	/^c0101760:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101763	obj/kernel.asm	/^c0101763:	09 45 f4             	or     %eax,-0xc(%ebp)$/;"	l
c0101766	obj/kernel.asm	/^c0101766:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101769	obj/kernel.asm	/^c0101769:	a3 40 b4 19 c0       	mov    %eax,0xc019b440$/;"	l
c010176e	obj/kernel.asm	/^c010176e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101771	obj/kernel.asm	/^c0101771:	66 a3 44 b4 19 c0    	mov    %ax,0xc019b444$/;"	l
c0101777	obj/kernel.asm	/^c0101777:	c9                   	leave  $/;"	l
c0101778	obj/kernel.asm	/^c0101778:	c3                   	ret    $/;"	l
c0101779	obj/kernel.asm	/^c0101779 <serial_init>:$/;"	l
c0101779	obj/kernel.asm	/^c0101779:	55                   	push   %ebp$/;"	l
c010177a	obj/kernel.asm	/^c010177a:	89 e5                	mov    %esp,%ebp$/;"	l
c010177c	obj/kernel.asm	/^c010177c:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010177f	obj/kernel.asm	/^c010177f:	66 c7 45 f6 fa 03    	movw   $0x3fa,-0xa(%ebp)$/;"	l
c0101785	obj/kernel.asm	/^c0101785:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)$/;"	l
c0101789	obj/kernel.asm	/^c0101789:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c010178d	obj/kernel.asm	/^c010178d:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101791	obj/kernel.asm	/^c0101791:	ee                   	out    %al,(%dx)$/;"	l
c0101792	obj/kernel.asm	/^c0101792:	66 c7 45 f2 fb 03    	movw   $0x3fb,-0xe(%ebp)$/;"	l
c0101798	obj/kernel.asm	/^c0101798:	c6 45 f1 80          	movb   $0x80,-0xf(%ebp)$/;"	l
c010179c	obj/kernel.asm	/^c010179c:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01017a0	obj/kernel.asm	/^c01017a0:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01017a4	obj/kernel.asm	/^c01017a4:	ee                   	out    %al,(%dx)$/;"	l
c01017a5	obj/kernel.asm	/^c01017a5:	66 c7 45 ee f8 03    	movw   $0x3f8,-0x12(%ebp)$/;"	l
c01017ab	obj/kernel.asm	/^c01017ab:	c6 45 ed 0c          	movb   $0xc,-0x13(%ebp)$/;"	l
c01017af	obj/kernel.asm	/^c01017af:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01017b3	obj/kernel.asm	/^c01017b3:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01017b7	obj/kernel.asm	/^c01017b7:	ee                   	out    %al,(%dx)$/;"	l
c01017b8	obj/kernel.asm	/^c01017b8:	66 c7 45 ea f9 03    	movw   $0x3f9,-0x16(%ebp)$/;"	l
c01017be	obj/kernel.asm	/^c01017be:	c6 45 e9 00          	movb   $0x0,-0x17(%ebp)$/;"	l
c01017c2	obj/kernel.asm	/^c01017c2:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c01017c6	obj/kernel.asm	/^c01017c6:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c01017ca	obj/kernel.asm	/^c01017ca:	ee                   	out    %al,(%dx)$/;"	l
c01017cb	obj/kernel.asm	/^c01017cb:	66 c7 45 e6 fb 03    	movw   $0x3fb,-0x1a(%ebp)$/;"	l
c01017d1	obj/kernel.asm	/^c01017d1:	c6 45 e5 03          	movb   $0x3,-0x1b(%ebp)$/;"	l
c01017d5	obj/kernel.asm	/^c01017d5:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c01017d9	obj/kernel.asm	/^c01017d9:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01017dd	obj/kernel.asm	/^c01017dd:	ee                   	out    %al,(%dx)$/;"	l
c01017de	obj/kernel.asm	/^c01017de:	66 c7 45 e2 fc 03    	movw   $0x3fc,-0x1e(%ebp)$/;"	l
c01017e4	obj/kernel.asm	/^c01017e4:	c6 45 e1 00          	movb   $0x0,-0x1f(%ebp)$/;"	l
c01017e8	obj/kernel.asm	/^c01017e8:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01017ec	obj/kernel.asm	/^c01017ec:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c01017f0	obj/kernel.asm	/^c01017f0:	ee                   	out    %al,(%dx)$/;"	l
c01017f1	obj/kernel.asm	/^c01017f1:	66 c7 45 de f9 03    	movw   $0x3f9,-0x22(%ebp)$/;"	l
c01017f7	obj/kernel.asm	/^c01017f7:	c6 45 dd 01          	movb   $0x1,-0x23(%ebp)$/;"	l
c01017fb	obj/kernel.asm	/^c01017fb:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c01017ff	obj/kernel.asm	/^c01017ff:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0101803	obj/kernel.asm	/^c0101803:	ee                   	out    %al,(%dx)$/;"	l
c0101804	obj/kernel.asm	/^c0101804:	66 c7 45 da fd 03    	movw   $0x3fd,-0x26(%ebp)$/;"	l
c010180a	obj/kernel.asm	/^c010180a:	0f b7 45 da          	movzwl -0x26(%ebp),%eax$/;"	l
c010180e	obj/kernel.asm	/^c010180e:	89 c2                	mov    %eax,%edx$/;"	l
c0101810	obj/kernel.asm	/^c0101810:	ec                   	in     (%dx),%al$/;"	l
c0101811	obj/kernel.asm	/^c0101811:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c0101814	obj/kernel.asm	/^c0101814:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0101818	obj/kernel.asm	/^c0101818:	3c ff                	cmp    $0xff,%al$/;"	l
c010181a	obj/kernel.asm	/^c010181a:	0f 95 c0             	setne  %al$/;"	l
c010181d	obj/kernel.asm	/^c010181d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101820	obj/kernel.asm	/^c0101820:	a3 48 b4 19 c0       	mov    %eax,0xc019b448$/;"	l
c0101825	obj/kernel.asm	/^c0101825:	66 c7 45 d6 fa 03    	movw   $0x3fa,-0x2a(%ebp)$/;"	l
c010182b	obj/kernel.asm	/^c010182b:	0f b7 45 d6          	movzwl -0x2a(%ebp),%eax$/;"	l
c010182f	obj/kernel.asm	/^c010182f:	89 c2                	mov    %eax,%edx$/;"	l
c0101831	obj/kernel.asm	/^c0101831:	ec                   	in     (%dx),%al$/;"	l
c0101832	obj/kernel.asm	/^c0101832:	88 45 d5             	mov    %al,-0x2b(%ebp)$/;"	l
c0101835	obj/kernel.asm	/^c0101835:	66 c7 45 d2 f8 03    	movw   $0x3f8,-0x2e(%ebp)$/;"	l
c010183b	obj/kernel.asm	/^c010183b:	0f b7 45 d2          	movzwl -0x2e(%ebp),%eax$/;"	l
c010183f	obj/kernel.asm	/^c010183f:	89 c2                	mov    %eax,%edx$/;"	l
c0101841	obj/kernel.asm	/^c0101841:	ec                   	in     (%dx),%al$/;"	l
c0101842	obj/kernel.asm	/^c0101842:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c0101845	obj/kernel.asm	/^c0101845:	a1 48 b4 19 c0       	mov    0xc019b448,%eax$/;"	l
c010184a	obj/kernel.asm	/^c010184a:	85 c0                	test   %eax,%eax$/;"	l
c010184c	obj/kernel.asm	/^c010184c:	74 0d                	je     c010185b <serial_init+0xe2>$/;"	l
c010184e	obj/kernel.asm	/^c010184e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101851	obj/kernel.asm	/^c0101851:	6a 04                	push   $0x4$/;"	l
c0101853	obj/kernel.asm	/^c0101853:	e8 d7 06 00 00       	call   c0101f2f <pic_enable>$/;"	l
c0101858	obj/kernel.asm	/^c0101858:	83 c4 10             	add    $0x10,%esp$/;"	l
c010185b	obj/kernel.asm	/^c010185b:	c9                   	leave  $/;"	l
c010185c	obj/kernel.asm	/^c010185c:	c3                   	ret    $/;"	l
c010185d	obj/kernel.asm	/^c010185d <lpt_putc_sub>:$/;"	l
c010185d	obj/kernel.asm	/^c010185d:	55                   	push   %ebp$/;"	l
c010185e	obj/kernel.asm	/^c010185e:	89 e5                	mov    %esp,%ebp$/;"	l
c0101860	obj/kernel.asm	/^c0101860:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0101863	obj/kernel.asm	/^c0101863:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010186a	obj/kernel.asm	/^c010186a:	eb 09                	jmp    c0101875 <lpt_putc_sub+0x18>$/;"	l
c010186c	obj/kernel.asm	/^c010186c:	e8 da fd ff ff       	call   c010164b <delay>$/;"	l
c0101871	obj/kernel.asm	/^c0101871:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0101875	obj/kernel.asm	/^c0101875:	66 c7 45 fa 79 03    	movw   $0x379,-0x6(%ebp)$/;"	l
c010187b	obj/kernel.asm	/^c010187b:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c010187f	obj/kernel.asm	/^c010187f:	89 c2                	mov    %eax,%edx$/;"	l
c0101881	obj/kernel.asm	/^c0101881:	ec                   	in     (%dx),%al$/;"	l
c0101882	obj/kernel.asm	/^c0101882:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101885	obj/kernel.asm	/^c0101885:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101889	obj/kernel.asm	/^c0101889:	84 c0                	test   %al,%al$/;"	l
c010188b	obj/kernel.asm	/^c010188b:	78 09                	js     c0101896 <lpt_putc_sub+0x39>$/;"	l
c010188d	obj/kernel.asm	/^c010188d:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c0101894	obj/kernel.asm	/^c0101894:	7e d6                	jle    c010186c <lpt_putc_sub+0xf>$/;"	l
c0101896	obj/kernel.asm	/^c0101896:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101899	obj/kernel.asm	/^c0101899:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010189c	obj/kernel.asm	/^c010189c:	66 c7 45 f6 78 03    	movw   $0x378,-0xa(%ebp)$/;"	l
c01018a2	obj/kernel.asm	/^c01018a2:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c01018a5	obj/kernel.asm	/^c01018a5:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c01018a9	obj/kernel.asm	/^c01018a9:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c01018ad	obj/kernel.asm	/^c01018ad:	ee                   	out    %al,(%dx)$/;"	l
c01018ae	obj/kernel.asm	/^c01018ae:	66 c7 45 f2 7a 03    	movw   $0x37a,-0xe(%ebp)$/;"	l
c01018b4	obj/kernel.asm	/^c01018b4:	c6 45 f1 0d          	movb   $0xd,-0xf(%ebp)$/;"	l
c01018b8	obj/kernel.asm	/^c01018b8:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01018bc	obj/kernel.asm	/^c01018bc:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01018c0	obj/kernel.asm	/^c01018c0:	ee                   	out    %al,(%dx)$/;"	l
c01018c1	obj/kernel.asm	/^c01018c1:	66 c7 45 ee 7a 03    	movw   $0x37a,-0x12(%ebp)$/;"	l
c01018c7	obj/kernel.asm	/^c01018c7:	c6 45 ed 08          	movb   $0x8,-0x13(%ebp)$/;"	l
c01018cb	obj/kernel.asm	/^c01018cb:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01018cf	obj/kernel.asm	/^c01018cf:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01018d3	obj/kernel.asm	/^c01018d3:	ee                   	out    %al,(%dx)$/;"	l
c01018d4	obj/kernel.asm	/^c01018d4:	c9                   	leave  $/;"	l
c01018d5	obj/kernel.asm	/^c01018d5:	c3                   	ret    $/;"	l
c01018d6	obj/kernel.asm	/^c01018d6 <lpt_putc>:$/;"	l
c01018d6	obj/kernel.asm	/^c01018d6:	55                   	push   %ebp$/;"	l
c01018d7	obj/kernel.asm	/^c01018d7:	89 e5                	mov    %esp,%ebp$/;"	l
c01018d9	obj/kernel.asm	/^c01018d9:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c01018dd	obj/kernel.asm	/^c01018dd:	74 0d                	je     c01018ec <lpt_putc+0x16>$/;"	l
c01018df	obj/kernel.asm	/^c01018df:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01018e2	obj/kernel.asm	/^c01018e2:	e8 76 ff ff ff       	call   c010185d <lpt_putc_sub>$/;"	l
c01018e7	obj/kernel.asm	/^c01018e7:	83 c4 04             	add    $0x4,%esp$/;"	l
c01018ea	obj/kernel.asm	/^c01018ea:	eb 1e                	jmp    c010190a <lpt_putc+0x34>$/;"	l
c01018ec	obj/kernel.asm	/^c01018ec:	6a 08                	push   $0x8$/;"	l
c01018ee	obj/kernel.asm	/^c01018ee:	e8 6a ff ff ff       	call   c010185d <lpt_putc_sub>$/;"	l
c01018f3	obj/kernel.asm	/^c01018f3:	83 c4 04             	add    $0x4,%esp$/;"	l
c01018f6	obj/kernel.asm	/^c01018f6:	6a 20                	push   $0x20$/;"	l
c01018f8	obj/kernel.asm	/^c01018f8:	e8 60 ff ff ff       	call   c010185d <lpt_putc_sub>$/;"	l
c01018fd	obj/kernel.asm	/^c01018fd:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101900	obj/kernel.asm	/^c0101900:	6a 08                	push   $0x8$/;"	l
c0101902	obj/kernel.asm	/^c0101902:	e8 56 ff ff ff       	call   c010185d <lpt_putc_sub>$/;"	l
c0101907	obj/kernel.asm	/^c0101907:	83 c4 04             	add    $0x4,%esp$/;"	l
c010190a	obj/kernel.asm	/^c010190a:	c9                   	leave  $/;"	l
c010190b	obj/kernel.asm	/^c010190b:	c3                   	ret    $/;"	l
c010190c	obj/kernel.asm	/^c010190c <cga_putc>:$/;"	l
c010190c	obj/kernel.asm	/^c010190c:	55                   	push   %ebp$/;"	l
c010190d	obj/kernel.asm	/^c010190d:	89 e5                	mov    %esp,%ebp$/;"	l
c010190f	obj/kernel.asm	/^c010190f:	53                   	push   %ebx$/;"	l
c0101910	obj/kernel.asm	/^c0101910:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0101913	obj/kernel.asm	/^c0101913:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101916	obj/kernel.asm	/^c0101916:	b0 00                	mov    $0x0,%al$/;"	l
c0101918	obj/kernel.asm	/^c0101918:	85 c0                	test   %eax,%eax$/;"	l
c010191a	obj/kernel.asm	/^c010191a:	75 07                	jne    c0101923 <cga_putc+0x17>$/;"	l
c010191c	obj/kernel.asm	/^c010191c:	81 4d 08 00 07 00 00 	orl    $0x700,0x8(%ebp)$/;"	l
c0101923	obj/kernel.asm	/^c0101923:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101926	obj/kernel.asm	/^c0101926:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101929	obj/kernel.asm	/^c0101929:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
c010192c	obj/kernel.asm	/^c010192c:	74 4c                	je     c010197a <cga_putc+0x6e>$/;"	l
c010192e	obj/kernel.asm	/^c010192e:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
c0101931	obj/kernel.asm	/^c0101931:	74 57                	je     c010198a <cga_putc+0x7e>$/;"	l
c0101933	obj/kernel.asm	/^c0101933:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c0101936	obj/kernel.asm	/^c0101936:	0f 85 88 00 00 00    	jne    c01019c4 <cga_putc+0xb8>$/;"	l
c010193c	obj/kernel.asm	/^c010193c:	0f b7 05 44 b4 19 c0 	movzwl 0xc019b444,%eax$/;"	l
c0101943	obj/kernel.asm	/^c0101943:	66 85 c0             	test   %ax,%ax$/;"	l
c0101946	obj/kernel.asm	/^c0101946:	74 30                	je     c0101978 <cga_putc+0x6c>$/;"	l
c0101948	obj/kernel.asm	/^c0101948:	0f b7 05 44 b4 19 c0 	movzwl 0xc019b444,%eax$/;"	l
c010194f	obj/kernel.asm	/^c010194f:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0101952	obj/kernel.asm	/^c0101952:	66 a3 44 b4 19 c0    	mov    %ax,0xc019b444$/;"	l
c0101958	obj/kernel.asm	/^c0101958:	a1 40 b4 19 c0       	mov    0xc019b440,%eax$/;"	l
c010195d	obj/kernel.asm	/^c010195d:	0f b7 15 44 b4 19 c0 	movzwl 0xc019b444,%edx$/;"	l
c0101964	obj/kernel.asm	/^c0101964:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101967	obj/kernel.asm	/^c0101967:	01 d2                	add    %edx,%edx$/;"	l
c0101969	obj/kernel.asm	/^c0101969:	01 d0                	add    %edx,%eax$/;"	l
c010196b	obj/kernel.asm	/^c010196b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010196e	obj/kernel.asm	/^c010196e:	b2 00                	mov    $0x0,%dl$/;"	l
c0101970	obj/kernel.asm	/^c0101970:	83 ca 20             	or     $0x20,%edx$/;"	l
c0101973	obj/kernel.asm	/^c0101973:	66 89 10             	mov    %dx,(%eax)$/;"	l
c0101976	obj/kernel.asm	/^c0101976:	eb 71                	jmp    c01019e9 <cga_putc+0xdd>$/;"	l
c0101978	obj/kernel.asm	/^c0101978:	eb 6f                	jmp    c01019e9 <cga_putc+0xdd>$/;"	l
c010197a	obj/kernel.asm	/^c010197a:	0f b7 05 44 b4 19 c0 	movzwl 0xc019b444,%eax$/;"	l
c0101981	obj/kernel.asm	/^c0101981:	83 c0 50             	add    $0x50,%eax$/;"	l
c0101984	obj/kernel.asm	/^c0101984:	66 a3 44 b4 19 c0    	mov    %ax,0xc019b444$/;"	l
c010198a	obj/kernel.asm	/^c010198a:	0f b7 1d 44 b4 19 c0 	movzwl 0xc019b444,%ebx$/;"	l
c0101991	obj/kernel.asm	/^c0101991:	0f b7 0d 44 b4 19 c0 	movzwl 0xc019b444,%ecx$/;"	l
c0101998	obj/kernel.asm	/^c0101998:	0f b7 c1             	movzwl %cx,%eax$/;"	l
c010199b	obj/kernel.asm	/^c010199b:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
c01019a1	obj/kernel.asm	/^c01019a1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01019a4	obj/kernel.asm	/^c01019a4:	89 c2                	mov    %eax,%edx$/;"	l
c01019a6	obj/kernel.asm	/^c01019a6:	66 c1 ea 06          	shr    $0x6,%dx$/;"	l
c01019aa	obj/kernel.asm	/^c01019aa:	89 d0                	mov    %edx,%eax$/;"	l
c01019ac	obj/kernel.asm	/^c01019ac:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01019af	obj/kernel.asm	/^c01019af:	01 d0                	add    %edx,%eax$/;"	l
c01019b1	obj/kernel.asm	/^c01019b1:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c01019b4	obj/kernel.asm	/^c01019b4:	29 c1                	sub    %eax,%ecx$/;"	l
c01019b6	obj/kernel.asm	/^c01019b6:	89 ca                	mov    %ecx,%edx$/;"	l
c01019b8	obj/kernel.asm	/^c01019b8:	89 d8                	mov    %ebx,%eax$/;"	l
c01019ba	obj/kernel.asm	/^c01019ba:	29 d0                	sub    %edx,%eax$/;"	l
c01019bc	obj/kernel.asm	/^c01019bc:	66 a3 44 b4 19 c0    	mov    %ax,0xc019b444$/;"	l
c01019c2	obj/kernel.asm	/^c01019c2:	eb 25                	jmp    c01019e9 <cga_putc+0xdd>$/;"	l
c01019c4	obj/kernel.asm	/^c01019c4:	8b 0d 40 b4 19 c0    	mov    0xc019b440,%ecx$/;"	l
c01019ca	obj/kernel.asm	/^c01019ca:	0f b7 05 44 b4 19 c0 	movzwl 0xc019b444,%eax$/;"	l
c01019d1	obj/kernel.asm	/^c01019d1:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01019d4	obj/kernel.asm	/^c01019d4:	66 89 15 44 b4 19 c0 	mov    %dx,0xc019b444$/;"	l
c01019db	obj/kernel.asm	/^c01019db:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01019de	obj/kernel.asm	/^c01019de:	01 c0                	add    %eax,%eax$/;"	l
c01019e0	obj/kernel.asm	/^c01019e0:	01 c8                	add    %ecx,%eax$/;"	l
c01019e2	obj/kernel.asm	/^c01019e2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01019e5	obj/kernel.asm	/^c01019e5:	66 89 10             	mov    %dx,(%eax)$/;"	l
c01019e8	obj/kernel.asm	/^c01019e8:	90                   	nop$/;"	l
c01019e9	obj/kernel.asm	/^c01019e9:	0f b7 05 44 b4 19 c0 	movzwl 0xc019b444,%eax$/;"	l
c01019f0	obj/kernel.asm	/^c01019f0:	66 3d cf 07          	cmp    $0x7cf,%ax$/;"	l
c01019f4	obj/kernel.asm	/^c01019f4:	76 59                	jbe    c0101a4f <cga_putc+0x143>$/;"	l
c01019f6	obj/kernel.asm	/^c01019f6:	a1 40 b4 19 c0       	mov    0xc019b440,%eax$/;"	l
c01019fb	obj/kernel.asm	/^c01019fb:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
c0101a01	obj/kernel.asm	/^c0101a01:	a1 40 b4 19 c0       	mov    0xc019b440,%eax$/;"	l
c0101a06	obj/kernel.asm	/^c0101a06:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0101a09	obj/kernel.asm	/^c0101a09:	68 00 0f 00 00       	push   $0xf00$/;"	l
c0101a0e	obj/kernel.asm	/^c0101a0e:	52                   	push   %edx$/;"	l
c0101a0f	obj/kernel.asm	/^c0101a0f:	50                   	push   %eax$/;"	l
c0101a10	obj/kernel.asm	/^c0101a10:	e8 c7 91 00 00       	call   c010abdc <memmove>$/;"	l
c0101a15	obj/kernel.asm	/^c0101a15:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101a18	obj/kernel.asm	/^c0101a18:	c7 45 f4 80 07 00 00 	movl   $0x780,-0xc(%ebp)$/;"	l
c0101a1f	obj/kernel.asm	/^c0101a1f:	eb 15                	jmp    c0101a36 <cga_putc+0x12a>$/;"	l
c0101a21	obj/kernel.asm	/^c0101a21:	a1 40 b4 19 c0       	mov    0xc019b440,%eax$/;"	l
c0101a26	obj/kernel.asm	/^c0101a26:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0101a29	obj/kernel.asm	/^c0101a29:	01 d2                	add    %edx,%edx$/;"	l
c0101a2b	obj/kernel.asm	/^c0101a2b:	01 d0                	add    %edx,%eax$/;"	l
c0101a2d	obj/kernel.asm	/^c0101a2d:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
c0101a32	obj/kernel.asm	/^c0101a32:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0101a36	obj/kernel.asm	/^c0101a36:	81 7d f4 cf 07 00 00 	cmpl   $0x7cf,-0xc(%ebp)$/;"	l
c0101a3d	obj/kernel.asm	/^c0101a3d:	7e e2                	jle    c0101a21 <cga_putc+0x115>$/;"	l
c0101a3f	obj/kernel.asm	/^c0101a3f:	0f b7 05 44 b4 19 c0 	movzwl 0xc019b444,%eax$/;"	l
c0101a46	obj/kernel.asm	/^c0101a46:	83 e8 50             	sub    $0x50,%eax$/;"	l
c0101a49	obj/kernel.asm	/^c0101a49:	66 a3 44 b4 19 c0    	mov    %ax,0xc019b444$/;"	l
c0101a4f	obj/kernel.asm	/^c0101a4f:	0f b7 05 46 b4 19 c0 	movzwl 0xc019b446,%eax$/;"	l
c0101a56	obj/kernel.asm	/^c0101a56:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101a59	obj/kernel.asm	/^c0101a59:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0101a5d	obj/kernel.asm	/^c0101a5d:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c0101a61	obj/kernel.asm	/^c0101a61:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0101a65	obj/kernel.asm	/^c0101a65:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101a69	obj/kernel.asm	/^c0101a69:	ee                   	out    %al,(%dx)$/;"	l
c0101a6a	obj/kernel.asm	/^c0101a6a:	0f b7 05 44 b4 19 c0 	movzwl 0xc019b444,%eax$/;"	l
c0101a71	obj/kernel.asm	/^c0101a71:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c0101a75	obj/kernel.asm	/^c0101a75:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101a78	obj/kernel.asm	/^c0101a78:	0f b7 15 46 b4 19 c0 	movzwl 0xc019b446,%edx$/;"	l
c0101a7f	obj/kernel.asm	/^c0101a7f:	83 c2 01             	add    $0x1,%edx$/;"	l
c0101a82	obj/kernel.asm	/^c0101a82:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101a85	obj/kernel.asm	/^c0101a85:	66 89 55 ee          	mov    %dx,-0x12(%ebp)$/;"	l
c0101a89	obj/kernel.asm	/^c0101a89:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c0101a8c	obj/kernel.asm	/^c0101a8c:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101a90	obj/kernel.asm	/^c0101a90:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101a94	obj/kernel.asm	/^c0101a94:	ee                   	out    %al,(%dx)$/;"	l
c0101a95	obj/kernel.asm	/^c0101a95:	0f b7 05 46 b4 19 c0 	movzwl 0xc019b446,%eax$/;"	l
c0101a9c	obj/kernel.asm	/^c0101a9c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101a9f	obj/kernel.asm	/^c0101a9f:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0101aa3	obj/kernel.asm	/^c0101aa3:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c0101aa7	obj/kernel.asm	/^c0101aa7:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101aab	obj/kernel.asm	/^c0101aab:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101aaf	obj/kernel.asm	/^c0101aaf:	ee                   	out    %al,(%dx)$/;"	l
c0101ab0	obj/kernel.asm	/^c0101ab0:	0f b7 05 44 b4 19 c0 	movzwl 0xc019b444,%eax$/;"	l
c0101ab7	obj/kernel.asm	/^c0101ab7:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101aba	obj/kernel.asm	/^c0101aba:	0f b7 15 46 b4 19 c0 	movzwl 0xc019b446,%edx$/;"	l
c0101ac1	obj/kernel.asm	/^c0101ac1:	83 c2 01             	add    $0x1,%edx$/;"	l
c0101ac4	obj/kernel.asm	/^c0101ac4:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101ac7	obj/kernel.asm	/^c0101ac7:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101acb	obj/kernel.asm	/^c0101acb:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101ace	obj/kernel.asm	/^c0101ace:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101ad2	obj/kernel.asm	/^c0101ad2:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101ad6	obj/kernel.asm	/^c0101ad6:	ee                   	out    %al,(%dx)$/;"	l
c0101ad7	obj/kernel.asm	/^c0101ad7:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0101ada	obj/kernel.asm	/^c0101ada:	c9                   	leave  $/;"	l
c0101adb	obj/kernel.asm	/^c0101adb:	c3                   	ret    $/;"	l
c0101adc	obj/kernel.asm	/^c0101adc <serial_putc_sub>:$/;"	l
c0101adc	obj/kernel.asm	/^c0101adc:	55                   	push   %ebp$/;"	l
c0101add	obj/kernel.asm	/^c0101add:	89 e5                	mov    %esp,%ebp$/;"	l
c0101adf	obj/kernel.asm	/^c0101adf:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101ae2	obj/kernel.asm	/^c0101ae2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0101ae9	obj/kernel.asm	/^c0101ae9:	eb 09                	jmp    c0101af4 <serial_putc_sub+0x18>$/;"	l
c0101aeb	obj/kernel.asm	/^c0101aeb:	e8 5b fb ff ff       	call   c010164b <delay>$/;"	l
c0101af0	obj/kernel.asm	/^c0101af0:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0101af4	obj/kernel.asm	/^c0101af4:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c0101afa	obj/kernel.asm	/^c0101afa:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101afe	obj/kernel.asm	/^c0101afe:	89 c2                	mov    %eax,%edx$/;"	l
c0101b00	obj/kernel.asm	/^c0101b00:	ec                   	in     (%dx),%al$/;"	l
c0101b01	obj/kernel.asm	/^c0101b01:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101b04	obj/kernel.asm	/^c0101b04:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101b08	obj/kernel.asm	/^c0101b08:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101b0b	obj/kernel.asm	/^c0101b0b:	83 e0 20             	and    $0x20,%eax$/;"	l
c0101b0e	obj/kernel.asm	/^c0101b0e:	85 c0                	test   %eax,%eax$/;"	l
c0101b10	obj/kernel.asm	/^c0101b10:	75 09                	jne    c0101b1b <serial_putc_sub+0x3f>$/;"	l
c0101b12	obj/kernel.asm	/^c0101b12:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c0101b19	obj/kernel.asm	/^c0101b19:	7e d0                	jle    c0101aeb <serial_putc_sub+0xf>$/;"	l
c0101b1b	obj/kernel.asm	/^c0101b1b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101b1e	obj/kernel.asm	/^c0101b1e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101b21	obj/kernel.asm	/^c0101b21:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c0101b27	obj/kernel.asm	/^c0101b27:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101b2a	obj/kernel.asm	/^c0101b2a:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101b2e	obj/kernel.asm	/^c0101b2e:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101b32	obj/kernel.asm	/^c0101b32:	ee                   	out    %al,(%dx)$/;"	l
c0101b33	obj/kernel.asm	/^c0101b33:	c9                   	leave  $/;"	l
c0101b34	obj/kernel.asm	/^c0101b34:	c3                   	ret    $/;"	l
c0101b35	obj/kernel.asm	/^c0101b35 <serial_putc>:$/;"	l
c0101b35	obj/kernel.asm	/^c0101b35:	55                   	push   %ebp$/;"	l
c0101b36	obj/kernel.asm	/^c0101b36:	89 e5                	mov    %esp,%ebp$/;"	l
c0101b38	obj/kernel.asm	/^c0101b38:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c0101b3c	obj/kernel.asm	/^c0101b3c:	74 0d                	je     c0101b4b <serial_putc+0x16>$/;"	l
c0101b3e	obj/kernel.asm	/^c0101b3e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101b41	obj/kernel.asm	/^c0101b41:	e8 96 ff ff ff       	call   c0101adc <serial_putc_sub>$/;"	l
c0101b46	obj/kernel.asm	/^c0101b46:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101b49	obj/kernel.asm	/^c0101b49:	eb 1e                	jmp    c0101b69 <serial_putc+0x34>$/;"	l
c0101b4b	obj/kernel.asm	/^c0101b4b:	6a 08                	push   $0x8$/;"	l
c0101b4d	obj/kernel.asm	/^c0101b4d:	e8 8a ff ff ff       	call   c0101adc <serial_putc_sub>$/;"	l
c0101b52	obj/kernel.asm	/^c0101b52:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101b55	obj/kernel.asm	/^c0101b55:	6a 20                	push   $0x20$/;"	l
c0101b57	obj/kernel.asm	/^c0101b57:	e8 80 ff ff ff       	call   c0101adc <serial_putc_sub>$/;"	l
c0101b5c	obj/kernel.asm	/^c0101b5c:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101b5f	obj/kernel.asm	/^c0101b5f:	6a 08                	push   $0x8$/;"	l
c0101b61	obj/kernel.asm	/^c0101b61:	e8 76 ff ff ff       	call   c0101adc <serial_putc_sub>$/;"	l
c0101b66	obj/kernel.asm	/^c0101b66:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101b69	obj/kernel.asm	/^c0101b69:	c9                   	leave  $/;"	l
c0101b6a	obj/kernel.asm	/^c0101b6a:	c3                   	ret    $/;"	l
c0101b6b	obj/kernel.asm	/^c0101b6b <cons_intr>:$/;"	l
c0101b6b	obj/kernel.asm	/^c0101b6b:	55                   	push   %ebp$/;"	l
c0101b6c	obj/kernel.asm	/^c0101b6c:	89 e5                	mov    %esp,%ebp$/;"	l
c0101b6e	obj/kernel.asm	/^c0101b6e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101b71	obj/kernel.asm	/^c0101b71:	eb 33                	jmp    c0101ba6 <cons_intr+0x3b>$/;"	l
c0101b73	obj/kernel.asm	/^c0101b73:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101b77	obj/kernel.asm	/^c0101b77:	74 2d                	je     c0101ba6 <cons_intr+0x3b>$/;"	l
c0101b79	obj/kernel.asm	/^c0101b79:	a1 84 b6 19 c0       	mov    0xc019b684,%eax$/;"	l
c0101b7e	obj/kernel.asm	/^c0101b7e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101b81	obj/kernel.asm	/^c0101b81:	89 15 84 b6 19 c0    	mov    %edx,0xc019b684$/;"	l
c0101b87	obj/kernel.asm	/^c0101b87:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0101b8a	obj/kernel.asm	/^c0101b8a:	88 90 80 b4 19 c0    	mov    %dl,-0x3fe64b80(%eax)$/;"	l
c0101b90	obj/kernel.asm	/^c0101b90:	a1 84 b6 19 c0       	mov    0xc019b684,%eax$/;"	l
c0101b95	obj/kernel.asm	/^c0101b95:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c0101b9a	obj/kernel.asm	/^c0101b9a:	75 0a                	jne    c0101ba6 <cons_intr+0x3b>$/;"	l
c0101b9c	obj/kernel.asm	/^c0101b9c:	c7 05 84 b6 19 c0 00 	movl   $0x0,0xc019b684$/;"	l
c0101ba3	obj/kernel.asm	/^c0101ba3:	00 00 00 $/;"	l
c0101ba6	obj/kernel.asm	/^c0101ba6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101ba9	obj/kernel.asm	/^c0101ba9:	ff d0                	call   *%eax$/;"	l
c0101bab	obj/kernel.asm	/^c0101bab:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101bae	obj/kernel.asm	/^c0101bae:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)$/;"	l
c0101bb2	obj/kernel.asm	/^c0101bb2:	75 bf                	jne    c0101b73 <cons_intr+0x8>$/;"	l
c0101bb4	obj/kernel.asm	/^c0101bb4:	c9                   	leave  $/;"	l
c0101bb5	obj/kernel.asm	/^c0101bb5:	c3                   	ret    $/;"	l
c0101bb6	obj/kernel.asm	/^c0101bb6 <serial_proc_data>:$/;"	l
c0101bb6	obj/kernel.asm	/^c0101bb6:	55                   	push   %ebp$/;"	l
c0101bb7	obj/kernel.asm	/^c0101bb7:	89 e5                	mov    %esp,%ebp$/;"	l
c0101bb9	obj/kernel.asm	/^c0101bb9:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101bbc	obj/kernel.asm	/^c0101bbc:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c0101bc2	obj/kernel.asm	/^c0101bc2:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101bc6	obj/kernel.asm	/^c0101bc6:	89 c2                	mov    %eax,%edx$/;"	l
c0101bc8	obj/kernel.asm	/^c0101bc8:	ec                   	in     (%dx),%al$/;"	l
c0101bc9	obj/kernel.asm	/^c0101bc9:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101bcc	obj/kernel.asm	/^c0101bcc:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101bd0	obj/kernel.asm	/^c0101bd0:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101bd3	obj/kernel.asm	/^c0101bd3:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101bd6	obj/kernel.asm	/^c0101bd6:	85 c0                	test   %eax,%eax$/;"	l
c0101bd8	obj/kernel.asm	/^c0101bd8:	75 07                	jne    c0101be1 <serial_proc_data+0x2b>$/;"	l
c0101bda	obj/kernel.asm	/^c0101bda:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0101bdf	obj/kernel.asm	/^c0101bdf:	eb 2a                	jmp    c0101c0b <serial_proc_data+0x55>$/;"	l
c0101be1	obj/kernel.asm	/^c0101be1:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c0101be7	obj/kernel.asm	/^c0101be7:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101beb	obj/kernel.asm	/^c0101beb:	89 c2                	mov    %eax,%edx$/;"	l
c0101bed	obj/kernel.asm	/^c0101bed:	ec                   	in     (%dx),%al$/;"	l
c0101bee	obj/kernel.asm	/^c0101bee:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101bf1	obj/kernel.asm	/^c0101bf1:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101bf5	obj/kernel.asm	/^c0101bf5:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101bf8	obj/kernel.asm	/^c0101bf8:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0101bfb	obj/kernel.asm	/^c0101bfb:	83 7d fc 7f          	cmpl   $0x7f,-0x4(%ebp)$/;"	l
c0101bff	obj/kernel.asm	/^c0101bff:	75 07                	jne    c0101c08 <serial_proc_data+0x52>$/;"	l
c0101c01	obj/kernel.asm	/^c0101c01:	c7 45 fc 08 00 00 00 	movl   $0x8,-0x4(%ebp)$/;"	l
c0101c08	obj/kernel.asm	/^c0101c08:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101c0b	obj/kernel.asm	/^c0101c0b:	c9                   	leave  $/;"	l
c0101c0c	obj/kernel.asm	/^c0101c0c:	c3                   	ret    $/;"	l
c0101c0d	obj/kernel.asm	/^c0101c0d <serial_intr>:$/;"	l
c0101c0d	obj/kernel.asm	/^c0101c0d:	55                   	push   %ebp$/;"	l
c0101c0e	obj/kernel.asm	/^c0101c0e:	89 e5                	mov    %esp,%ebp$/;"	l
c0101c10	obj/kernel.asm	/^c0101c10:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101c13	obj/kernel.asm	/^c0101c13:	a1 48 b4 19 c0       	mov    0xc019b448,%eax$/;"	l
c0101c18	obj/kernel.asm	/^c0101c18:	85 c0                	test   %eax,%eax$/;"	l
c0101c1a	obj/kernel.asm	/^c0101c1a:	74 10                	je     c0101c2c <serial_intr+0x1f>$/;"	l
c0101c1c	obj/kernel.asm	/^c0101c1c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101c1f	obj/kernel.asm	/^c0101c1f:	68 b6 1b 10 c0       	push   $0xc0101bb6$/;"	l
c0101c24	obj/kernel.asm	/^c0101c24:	e8 42 ff ff ff       	call   c0101b6b <cons_intr>$/;"	l
c0101c29	obj/kernel.asm	/^c0101c29:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101c2c	obj/kernel.asm	/^c0101c2c:	c9                   	leave  $/;"	l
c0101c2d	obj/kernel.asm	/^c0101c2d:	c3                   	ret    $/;"	l
c0101c2e	obj/kernel.asm	/^c0101c2e <kbd_proc_data>:$/;"	l
c0101c2e	obj/kernel.asm	/^c0101c2e:	55                   	push   %ebp$/;"	l
c0101c2f	obj/kernel.asm	/^c0101c2f:	89 e5                	mov    %esp,%ebp$/;"	l
c0101c31	obj/kernel.asm	/^c0101c31:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0101c34	obj/kernel.asm	/^c0101c34:	66 c7 45 f0 64 00    	movw   $0x64,-0x10(%ebp)$/;"	l
c0101c3a	obj/kernel.asm	/^c0101c3a:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101c3e	obj/kernel.asm	/^c0101c3e:	89 c2                	mov    %eax,%edx$/;"	l
c0101c40	obj/kernel.asm	/^c0101c40:	ec                   	in     (%dx),%al$/;"	l
c0101c41	obj/kernel.asm	/^c0101c41:	88 45 ef             	mov    %al,-0x11(%ebp)$/;"	l
c0101c44	obj/kernel.asm	/^c0101c44:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax$/;"	l
c0101c48	obj/kernel.asm	/^c0101c48:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101c4b	obj/kernel.asm	/^c0101c4b:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101c4e	obj/kernel.asm	/^c0101c4e:	85 c0                	test   %eax,%eax$/;"	l
c0101c50	obj/kernel.asm	/^c0101c50:	75 0a                	jne    c0101c5c <kbd_proc_data+0x2e>$/;"	l
c0101c52	obj/kernel.asm	/^c0101c52:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0101c57	obj/kernel.asm	/^c0101c57:	e9 5d 01 00 00       	jmp    c0101db9 <kbd_proc_data+0x18b>$/;"	l
c0101c5c	obj/kernel.asm	/^c0101c5c:	66 c7 45 ec 60 00    	movw   $0x60,-0x14(%ebp)$/;"	l
c0101c62	obj/kernel.asm	/^c0101c62:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0101c66	obj/kernel.asm	/^c0101c66:	89 c2                	mov    %eax,%edx$/;"	l
c0101c68	obj/kernel.asm	/^c0101c68:	ec                   	in     (%dx),%al$/;"	l
c0101c69	obj/kernel.asm	/^c0101c69:	88 45 eb             	mov    %al,-0x15(%ebp)$/;"	l
c0101c6c	obj/kernel.asm	/^c0101c6c:	0f b6 45 eb          	movzbl -0x15(%ebp),%eax$/;"	l
c0101c70	obj/kernel.asm	/^c0101c70:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0101c73	obj/kernel.asm	/^c0101c73:	80 7d f3 e0          	cmpb   $0xe0,-0xd(%ebp)$/;"	l
c0101c77	obj/kernel.asm	/^c0101c77:	75 17                	jne    c0101c90 <kbd_proc_data+0x62>$/;"	l
c0101c79	obj/kernel.asm	/^c0101c79:	a1 88 b6 19 c0       	mov    0xc019b688,%eax$/;"	l
c0101c7e	obj/kernel.asm	/^c0101c7e:	83 c8 40             	or     $0x40,%eax$/;"	l
c0101c81	obj/kernel.asm	/^c0101c81:	a3 88 b6 19 c0       	mov    %eax,0xc019b688$/;"	l
c0101c86	obj/kernel.asm	/^c0101c86:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101c8b	obj/kernel.asm	/^c0101c8b:	e9 29 01 00 00       	jmp    c0101db9 <kbd_proc_data+0x18b>$/;"	l
c0101c90	obj/kernel.asm	/^c0101c90:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101c94	obj/kernel.asm	/^c0101c94:	84 c0                	test   %al,%al$/;"	l
c0101c96	obj/kernel.asm	/^c0101c96:	79 47                	jns    c0101cdf <kbd_proc_data+0xb1>$/;"	l
c0101c98	obj/kernel.asm	/^c0101c98:	a1 88 b6 19 c0       	mov    0xc019b688,%eax$/;"	l
c0101c9d	obj/kernel.asm	/^c0101c9d:	83 e0 40             	and    $0x40,%eax$/;"	l
c0101ca0	obj/kernel.asm	/^c0101ca0:	85 c0                	test   %eax,%eax$/;"	l
c0101ca2	obj/kernel.asm	/^c0101ca2:	75 09                	jne    c0101cad <kbd_proc_data+0x7f>$/;"	l
c0101ca4	obj/kernel.asm	/^c0101ca4:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101ca8	obj/kernel.asm	/^c0101ca8:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c0101cab	obj/kernel.asm	/^c0101cab:	eb 04                	jmp    c0101cb1 <kbd_proc_data+0x83>$/;"	l
c0101cad	obj/kernel.asm	/^c0101cad:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101cb1	obj/kernel.asm	/^c0101cb1:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0101cb4	obj/kernel.asm	/^c0101cb4:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101cb8	obj/kernel.asm	/^c0101cb8:	0f b6 80 80 90 12 c0 	movzbl -0x3fed6f80(%eax),%eax$/;"	l
c0101cbf	obj/kernel.asm	/^c0101cbf:	83 c8 40             	or     $0x40,%eax$/;"	l
c0101cc2	obj/kernel.asm	/^c0101cc2:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101cc5	obj/kernel.asm	/^c0101cc5:	f7 d0                	not    %eax$/;"	l
c0101cc7	obj/kernel.asm	/^c0101cc7:	89 c2                	mov    %eax,%edx$/;"	l
c0101cc9	obj/kernel.asm	/^c0101cc9:	a1 88 b6 19 c0       	mov    0xc019b688,%eax$/;"	l
c0101cce	obj/kernel.asm	/^c0101cce:	21 d0                	and    %edx,%eax$/;"	l
c0101cd0	obj/kernel.asm	/^c0101cd0:	a3 88 b6 19 c0       	mov    %eax,0xc019b688$/;"	l
c0101cd5	obj/kernel.asm	/^c0101cd5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101cda	obj/kernel.asm	/^c0101cda:	e9 da 00 00 00       	jmp    c0101db9 <kbd_proc_data+0x18b>$/;"	l
c0101cdf	obj/kernel.asm	/^c0101cdf:	a1 88 b6 19 c0       	mov    0xc019b688,%eax$/;"	l
c0101ce4	obj/kernel.asm	/^c0101ce4:	83 e0 40             	and    $0x40,%eax$/;"	l
c0101ce7	obj/kernel.asm	/^c0101ce7:	85 c0                	test   %eax,%eax$/;"	l
c0101ce9	obj/kernel.asm	/^c0101ce9:	74 11                	je     c0101cfc <kbd_proc_data+0xce>$/;"	l
c0101ceb	obj/kernel.asm	/^c0101ceb:	80 4d f3 80          	orb    $0x80,-0xd(%ebp)$/;"	l
c0101cef	obj/kernel.asm	/^c0101cef:	a1 88 b6 19 c0       	mov    0xc019b688,%eax$/;"	l
c0101cf4	obj/kernel.asm	/^c0101cf4:	83 e0 bf             	and    $0xffffffbf,%eax$/;"	l
c0101cf7	obj/kernel.asm	/^c0101cf7:	a3 88 b6 19 c0       	mov    %eax,0xc019b688$/;"	l
c0101cfc	obj/kernel.asm	/^c0101cfc:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101d00	obj/kernel.asm	/^c0101d00:	0f b6 80 80 90 12 c0 	movzbl -0x3fed6f80(%eax),%eax$/;"	l
c0101d07	obj/kernel.asm	/^c0101d07:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0101d0a	obj/kernel.asm	/^c0101d0a:	a1 88 b6 19 c0       	mov    0xc019b688,%eax$/;"	l
c0101d0f	obj/kernel.asm	/^c0101d0f:	09 d0                	or     %edx,%eax$/;"	l
c0101d11	obj/kernel.asm	/^c0101d11:	a3 88 b6 19 c0       	mov    %eax,0xc019b688$/;"	l
c0101d16	obj/kernel.asm	/^c0101d16:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101d1a	obj/kernel.asm	/^c0101d1a:	0f b6 80 80 91 12 c0 	movzbl -0x3fed6e80(%eax),%eax$/;"	l
c0101d21	obj/kernel.asm	/^c0101d21:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0101d24	obj/kernel.asm	/^c0101d24:	a1 88 b6 19 c0       	mov    0xc019b688,%eax$/;"	l
c0101d29	obj/kernel.asm	/^c0101d29:	31 d0                	xor    %edx,%eax$/;"	l
c0101d2b	obj/kernel.asm	/^c0101d2b:	a3 88 b6 19 c0       	mov    %eax,0xc019b688$/;"	l
c0101d30	obj/kernel.asm	/^c0101d30:	a1 88 b6 19 c0       	mov    0xc019b688,%eax$/;"	l
c0101d35	obj/kernel.asm	/^c0101d35:	83 e0 03             	and    $0x3,%eax$/;"	l
c0101d38	obj/kernel.asm	/^c0101d38:	8b 14 85 80 95 12 c0 	mov    -0x3fed6a80(,%eax,4),%edx$/;"	l
c0101d3f	obj/kernel.asm	/^c0101d3f:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101d43	obj/kernel.asm	/^c0101d43:	01 d0                	add    %edx,%eax$/;"	l
c0101d45	obj/kernel.asm	/^c0101d45:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101d48	obj/kernel.asm	/^c0101d48:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101d4b	obj/kernel.asm	/^c0101d4b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101d4e	obj/kernel.asm	/^c0101d4e:	a1 88 b6 19 c0       	mov    0xc019b688,%eax$/;"	l
c0101d53	obj/kernel.asm	/^c0101d53:	83 e0 08             	and    $0x8,%eax$/;"	l
c0101d56	obj/kernel.asm	/^c0101d56:	85 c0                	test   %eax,%eax$/;"	l
c0101d58	obj/kernel.asm	/^c0101d58:	74 22                	je     c0101d7c <kbd_proc_data+0x14e>$/;"	l
c0101d5a	obj/kernel.asm	/^c0101d5a:	83 7d f4 60          	cmpl   $0x60,-0xc(%ebp)$/;"	l
c0101d5e	obj/kernel.asm	/^c0101d5e:	7e 0c                	jle    c0101d6c <kbd_proc_data+0x13e>$/;"	l
c0101d60	obj/kernel.asm	/^c0101d60:	83 7d f4 7a          	cmpl   $0x7a,-0xc(%ebp)$/;"	l
c0101d64	obj/kernel.asm	/^c0101d64:	7f 06                	jg     c0101d6c <kbd_proc_data+0x13e>$/;"	l
c0101d66	obj/kernel.asm	/^c0101d66:	83 6d f4 20          	subl   $0x20,-0xc(%ebp)$/;"	l
c0101d6a	obj/kernel.asm	/^c0101d6a:	eb 10                	jmp    c0101d7c <kbd_proc_data+0x14e>$/;"	l
c0101d6c	obj/kernel.asm	/^c0101d6c:	83 7d f4 40          	cmpl   $0x40,-0xc(%ebp)$/;"	l
c0101d70	obj/kernel.asm	/^c0101d70:	7e 0a                	jle    c0101d7c <kbd_proc_data+0x14e>$/;"	l
c0101d72	obj/kernel.asm	/^c0101d72:	83 7d f4 5a          	cmpl   $0x5a,-0xc(%ebp)$/;"	l
c0101d76	obj/kernel.asm	/^c0101d76:	7f 04                	jg     c0101d7c <kbd_proc_data+0x14e>$/;"	l
c0101d78	obj/kernel.asm	/^c0101d78:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0101d7c	obj/kernel.asm	/^c0101d7c:	a1 88 b6 19 c0       	mov    0xc019b688,%eax$/;"	l
c0101d81	obj/kernel.asm	/^c0101d81:	f7 d0                	not    %eax$/;"	l
c0101d83	obj/kernel.asm	/^c0101d83:	83 e0 06             	and    $0x6,%eax$/;"	l
c0101d86	obj/kernel.asm	/^c0101d86:	85 c0                	test   %eax,%eax$/;"	l
c0101d88	obj/kernel.asm	/^c0101d88:	75 2c                	jne    c0101db6 <kbd_proc_data+0x188>$/;"	l
c0101d8a	obj/kernel.asm	/^c0101d8a:	81 7d f4 e9 00 00 00 	cmpl   $0xe9,-0xc(%ebp)$/;"	l
c0101d91	obj/kernel.asm	/^c0101d91:	75 23                	jne    c0101db6 <kbd_proc_data+0x188>$/;"	l
c0101d93	obj/kernel.asm	/^c0101d93:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101d96	obj/kernel.asm	/^c0101d96:	68 29 b8 10 c0       	push   $0xc010b829$/;"	l
c0101d9b	obj/kernel.asm	/^c0101d9b:	e8 d5 e4 ff ff       	call   c0100275 <cprintf>$/;"	l
c0101da0	obj/kernel.asm	/^c0101da0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101da3	obj/kernel.asm	/^c0101da3:	66 c7 45 e8 92 00    	movw   $0x92,-0x18(%ebp)$/;"	l
c0101da9	obj/kernel.asm	/^c0101da9:	c6 45 e7 03          	movb   $0x3,-0x19(%ebp)$/;"	l
c0101dad	obj/kernel.asm	/^c0101dad:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
c0101db1	obj/kernel.asm	/^c0101db1:	0f b7 55 e8          	movzwl -0x18(%ebp),%edx$/;"	l
c0101db5	obj/kernel.asm	/^c0101db5:	ee                   	out    %al,(%dx)$/;"	l
c0101db6	obj/kernel.asm	/^c0101db6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101db9	obj/kernel.asm	/^c0101db9:	c9                   	leave  $/;"	l
c0101dba	obj/kernel.asm	/^c0101dba:	c3                   	ret    $/;"	l
c0101dbb	obj/kernel.asm	/^c0101dbb <kbd_intr>:$/;"	l
c0101dbb	obj/kernel.asm	/^c0101dbb:	55                   	push   %ebp$/;"	l
c0101dbc	obj/kernel.asm	/^c0101dbc:	89 e5                	mov    %esp,%ebp$/;"	l
c0101dbe	obj/kernel.asm	/^c0101dbe:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101dc1	obj/kernel.asm	/^c0101dc1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101dc4	obj/kernel.asm	/^c0101dc4:	68 2e 1c 10 c0       	push   $0xc0101c2e$/;"	l
c0101dc9	obj/kernel.asm	/^c0101dc9:	e8 9d fd ff ff       	call   c0101b6b <cons_intr>$/;"	l
c0101dce	obj/kernel.asm	/^c0101dce:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101dd1	obj/kernel.asm	/^c0101dd1:	c9                   	leave  $/;"	l
c0101dd2	obj/kernel.asm	/^c0101dd2:	c3                   	ret    $/;"	l
c0101dd3	obj/kernel.asm	/^c0101dd3 <kbd_init>:$/;"	l
c0101dd3	obj/kernel.asm	/^c0101dd3:	55                   	push   %ebp$/;"	l
c0101dd4	obj/kernel.asm	/^c0101dd4:	89 e5                	mov    %esp,%ebp$/;"	l
c0101dd6	obj/kernel.asm	/^c0101dd6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101dd9	obj/kernel.asm	/^c0101dd9:	e8 dd ff ff ff       	call   c0101dbb <kbd_intr>$/;"	l
c0101dde	obj/kernel.asm	/^c0101dde:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101de1	obj/kernel.asm	/^c0101de1:	6a 01                	push   $0x1$/;"	l
c0101de3	obj/kernel.asm	/^c0101de3:	e8 47 01 00 00       	call   c0101f2f <pic_enable>$/;"	l
c0101de8	obj/kernel.asm	/^c0101de8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101deb	obj/kernel.asm	/^c0101deb:	c9                   	leave  $/;"	l
c0101dec	obj/kernel.asm	/^c0101dec:	c3                   	ret    $/;"	l
c0101ded	obj/kernel.asm	/^c0101ded <cons_init>:$/;"	l
c0101ded	obj/kernel.asm	/^c0101ded:	55                   	push   %ebp$/;"	l
c0101dee	obj/kernel.asm	/^c0101dee:	89 e5                	mov    %esp,%ebp$/;"	l
c0101df0	obj/kernel.asm	/^c0101df0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101df3	obj/kernel.asm	/^c0101df3:	e8 9b f8 ff ff       	call   c0101693 <cga_init>$/;"	l
c0101df8	obj/kernel.asm	/^c0101df8:	e8 7c f9 ff ff       	call   c0101779 <serial_init>$/;"	l
c0101dfd	obj/kernel.asm	/^c0101dfd:	e8 d1 ff ff ff       	call   c0101dd3 <kbd_init>$/;"	l
c0101e02	obj/kernel.asm	/^c0101e02:	a1 48 b4 19 c0       	mov    0xc019b448,%eax$/;"	l
c0101e07	obj/kernel.asm	/^c0101e07:	85 c0                	test   %eax,%eax$/;"	l
c0101e09	obj/kernel.asm	/^c0101e09:	75 10                	jne    c0101e1b <cons_init+0x2e>$/;"	l
c0101e0b	obj/kernel.asm	/^c0101e0b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101e0e	obj/kernel.asm	/^c0101e0e:	68 35 b8 10 c0       	push   $0xc010b835$/;"	l
c0101e13	obj/kernel.asm	/^c0101e13:	e8 5d e4 ff ff       	call   c0100275 <cprintf>$/;"	l
c0101e18	obj/kernel.asm	/^c0101e18:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101e1b	obj/kernel.asm	/^c0101e1b:	c9                   	leave  $/;"	l
c0101e1c	obj/kernel.asm	/^c0101e1c:	c3                   	ret    $/;"	l
c0101e1d	obj/kernel.asm	/^c0101e1d <cons_putc>:$/;"	l
c0101e1d	obj/kernel.asm	/^c0101e1d:	55                   	push   %ebp$/;"	l
c0101e1e	obj/kernel.asm	/^c0101e1e:	89 e5                	mov    %esp,%ebp$/;"	l
c0101e20	obj/kernel.asm	/^c0101e20:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101e23	obj/kernel.asm	/^c0101e23:	e8 e6 f7 ff ff       	call   c010160e <__intr_save>$/;"	l
c0101e28	obj/kernel.asm	/^c0101e28:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101e2b	obj/kernel.asm	/^c0101e2b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101e2e	obj/kernel.asm	/^c0101e2e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101e31	obj/kernel.asm	/^c0101e31:	e8 a0 fa ff ff       	call   c01018d6 <lpt_putc>$/;"	l
c0101e36	obj/kernel.asm	/^c0101e36:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101e39	obj/kernel.asm	/^c0101e39:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101e3c	obj/kernel.asm	/^c0101e3c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101e3f	obj/kernel.asm	/^c0101e3f:	e8 c8 fa ff ff       	call   c010190c <cga_putc>$/;"	l
c0101e44	obj/kernel.asm	/^c0101e44:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101e47	obj/kernel.asm	/^c0101e47:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101e4a	obj/kernel.asm	/^c0101e4a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101e4d	obj/kernel.asm	/^c0101e4d:	e8 e3 fc ff ff       	call   c0101b35 <serial_putc>$/;"	l
c0101e52	obj/kernel.asm	/^c0101e52:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101e55	obj/kernel.asm	/^c0101e55:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101e58	obj/kernel.asm	/^c0101e58:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0101e5b	obj/kernel.asm	/^c0101e5b:	e8 d8 f7 ff ff       	call   c0101638 <__intr_restore>$/;"	l
c0101e60	obj/kernel.asm	/^c0101e60:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101e63	obj/kernel.asm	/^c0101e63:	c9                   	leave  $/;"	l
c0101e64	obj/kernel.asm	/^c0101e64:	c3                   	ret    $/;"	l
c0101e65	obj/kernel.asm	/^c0101e65 <cons_getc>:$/;"	l
c0101e65	obj/kernel.asm	/^c0101e65:	55                   	push   %ebp$/;"	l
c0101e66	obj/kernel.asm	/^c0101e66:	89 e5                	mov    %esp,%ebp$/;"	l
c0101e68	obj/kernel.asm	/^c0101e68:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101e6b	obj/kernel.asm	/^c0101e6b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101e72	obj/kernel.asm	/^c0101e72:	e8 97 f7 ff ff       	call   c010160e <__intr_save>$/;"	l
c0101e77	obj/kernel.asm	/^c0101e77:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0101e7a	obj/kernel.asm	/^c0101e7a:	e8 8e fd ff ff       	call   c0101c0d <serial_intr>$/;"	l
c0101e7f	obj/kernel.asm	/^c0101e7f:	e8 37 ff ff ff       	call   c0101dbb <kbd_intr>$/;"	l
c0101e84	obj/kernel.asm	/^c0101e84:	8b 15 80 b6 19 c0    	mov    0xc019b680,%edx$/;"	l
c0101e8a	obj/kernel.asm	/^c0101e8a:	a1 84 b6 19 c0       	mov    0xc019b684,%eax$/;"	l
c0101e8f	obj/kernel.asm	/^c0101e8f:	39 c2                	cmp    %eax,%edx$/;"	l
c0101e91	obj/kernel.asm	/^c0101e91:	74 31                	je     c0101ec4 <cons_getc+0x5f>$/;"	l
c0101e93	obj/kernel.asm	/^c0101e93:	a1 80 b6 19 c0       	mov    0xc019b680,%eax$/;"	l
c0101e98	obj/kernel.asm	/^c0101e98:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101e9b	obj/kernel.asm	/^c0101e9b:	89 15 80 b6 19 c0    	mov    %edx,0xc019b680$/;"	l
c0101ea1	obj/kernel.asm	/^c0101ea1:	0f b6 80 80 b4 19 c0 	movzbl -0x3fe64b80(%eax),%eax$/;"	l
c0101ea8	obj/kernel.asm	/^c0101ea8:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101eab	obj/kernel.asm	/^c0101eab:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101eae	obj/kernel.asm	/^c0101eae:	a1 80 b6 19 c0       	mov    0xc019b680,%eax$/;"	l
c0101eb3	obj/kernel.asm	/^c0101eb3:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c0101eb8	obj/kernel.asm	/^c0101eb8:	75 0a                	jne    c0101ec4 <cons_getc+0x5f>$/;"	l
c0101eba	obj/kernel.asm	/^c0101eba:	c7 05 80 b6 19 c0 00 	movl   $0x0,0xc019b680$/;"	l
c0101ec1	obj/kernel.asm	/^c0101ec1:	00 00 00 $/;"	l
c0101ec4	obj/kernel.asm	/^c0101ec4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101ec7	obj/kernel.asm	/^c0101ec7:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0101eca	obj/kernel.asm	/^c0101eca:	e8 69 f7 ff ff       	call   c0101638 <__intr_restore>$/;"	l
c0101ecf	obj/kernel.asm	/^c0101ecf:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101ed2	obj/kernel.asm	/^c0101ed2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101ed5	obj/kernel.asm	/^c0101ed5:	c9                   	leave  $/;"	l
c0101ed6	obj/kernel.asm	/^c0101ed6:	c3                   	ret    $/;"	l
c0101ed7	obj/kernel.asm	/^c0101ed7 <pic_setmask>:$/;"	l
c0101ed7	obj/kernel.asm	/^c0101ed7:	55                   	push   %ebp$/;"	l
c0101ed8	obj/kernel.asm	/^c0101ed8:	89 e5                	mov    %esp,%ebp$/;"	l
c0101eda	obj/kernel.asm	/^c0101eda:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0101edd	obj/kernel.asm	/^c0101edd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101ee0	obj/kernel.asm	/^c0101ee0:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c0101ee4	obj/kernel.asm	/^c0101ee4:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0101ee8	obj/kernel.asm	/^c0101ee8:	66 a3 90 95 12 c0    	mov    %ax,0xc0129590$/;"	l
c0101eee	obj/kernel.asm	/^c0101eee:	a1 8c b6 19 c0       	mov    0xc019b68c,%eax$/;"	l
c0101ef3	obj/kernel.asm	/^c0101ef3:	85 c0                	test   %eax,%eax$/;"	l
c0101ef5	obj/kernel.asm	/^c0101ef5:	74 36                	je     c0101f2d <pic_setmask+0x56>$/;"	l
c0101ef7	obj/kernel.asm	/^c0101ef7:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0101efb	obj/kernel.asm	/^c0101efb:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101efe	obj/kernel.asm	/^c0101efe:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c0101f04	obj/kernel.asm	/^c0101f04:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c0101f07	obj/kernel.asm	/^c0101f07:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c0101f0b	obj/kernel.asm	/^c0101f0b:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c0101f0f	obj/kernel.asm	/^c0101f0f:	ee                   	out    %al,(%dx)$/;"	l
c0101f10	obj/kernel.asm	/^c0101f10:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0101f14	obj/kernel.asm	/^c0101f14:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c0101f18	obj/kernel.asm	/^c0101f18:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101f1b	obj/kernel.asm	/^c0101f1b:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c0101f21	obj/kernel.asm	/^c0101f21:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101f24	obj/kernel.asm	/^c0101f24:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101f28	obj/kernel.asm	/^c0101f28:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c0101f2c	obj/kernel.asm	/^c0101f2c:	ee                   	out    %al,(%dx)$/;"	l
c0101f2d	obj/kernel.asm	/^c0101f2d:	c9                   	leave  $/;"	l
c0101f2e	obj/kernel.asm	/^c0101f2e:	c3                   	ret    $/;"	l
c0101f2f	obj/kernel.asm	/^c0101f2f <pic_enable>:$/;"	l
c0101f2f	obj/kernel.asm	/^c0101f2f:	55                   	push   %ebp$/;"	l
c0101f30	obj/kernel.asm	/^c0101f30:	89 e5                	mov    %esp,%ebp$/;"	l
c0101f32	obj/kernel.asm	/^c0101f32:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101f35	obj/kernel.asm	/^c0101f35:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0101f3a	obj/kernel.asm	/^c0101f3a:	89 c1                	mov    %eax,%ecx$/;"	l
c0101f3c	obj/kernel.asm	/^c0101f3c:	d3 e2                	shl    %cl,%edx$/;"	d
c0101f3e	obj/kernel.asm	/^c0101f3e:	89 d0                	mov    %edx,%eax$/;"	l
c0101f40	obj/kernel.asm	/^c0101f40:	f7 d0                	not    %eax$/;"	l
c0101f42	obj/kernel.asm	/^c0101f42:	89 c2                	mov    %eax,%edx$/;"	l
c0101f44	obj/kernel.asm	/^c0101f44:	0f b7 05 90 95 12 c0 	movzwl 0xc0129590,%eax$/;"	l
c0101f4b	obj/kernel.asm	/^c0101f4b:	21 d0                	and    %edx,%eax$/;"	l
c0101f4d	obj/kernel.asm	/^c0101f4d:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101f50	obj/kernel.asm	/^c0101f50:	50                   	push   %eax$/;"	l
c0101f51	obj/kernel.asm	/^c0101f51:	e8 81 ff ff ff       	call   c0101ed7 <pic_setmask>$/;"	l
c0101f56	obj/kernel.asm	/^c0101f56:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101f59	obj/kernel.asm	/^c0101f59:	c9                   	leave  $/;"	l
c0101f5a	obj/kernel.asm	/^c0101f5a:	c3                   	ret    $/;"	l
c0101f5b	obj/kernel.asm	/^c0101f5b <pic_init>:$/;"	l
c0101f5b	obj/kernel.asm	/^c0101f5b:	55                   	push   %ebp$/;"	l
c0101f5c	obj/kernel.asm	/^c0101f5c:	89 e5                	mov    %esp,%ebp$/;"	l
c0101f5e	obj/kernel.asm	/^c0101f5e:	83 ec 40             	sub    $0x40,%esp$/;"	l
c0101f61	obj/kernel.asm	/^c0101f61:	c7 05 8c b6 19 c0 01 	movl   $0x1,0xc019b68c$/;"	l
c0101f68	obj/kernel.asm	/^c0101f68:	00 00 00 $/;"	l
c0101f6b	obj/kernel.asm	/^c0101f6b:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c0101f71	obj/kernel.asm	/^c0101f71:	c6 45 fd ff          	movb   $0xff,-0x3(%ebp)$/;"	l
c0101f75	obj/kernel.asm	/^c0101f75:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c0101f79	obj/kernel.asm	/^c0101f79:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c0101f7d	obj/kernel.asm	/^c0101f7d:	ee                   	out    %al,(%dx)$/;"	l
c0101f7e	obj/kernel.asm	/^c0101f7e:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c0101f84	obj/kernel.asm	/^c0101f84:	c6 45 f9 ff          	movb   $0xff,-0x7(%ebp)$/;"	l
c0101f88	obj/kernel.asm	/^c0101f88:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101f8c	obj/kernel.asm	/^c0101f8c:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c0101f90	obj/kernel.asm	/^c0101f90:	ee                   	out    %al,(%dx)$/;"	l
c0101f91	obj/kernel.asm	/^c0101f91:	66 c7 45 f6 20 00    	movw   $0x20,-0xa(%ebp)$/;"	l
c0101f97	obj/kernel.asm	/^c0101f97:	c6 45 f5 11          	movb   $0x11,-0xb(%ebp)$/;"	l
c0101f9b	obj/kernel.asm	/^c0101f9b:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101f9f	obj/kernel.asm	/^c0101f9f:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101fa3	obj/kernel.asm	/^c0101fa3:	ee                   	out    %al,(%dx)$/;"	l
c0101fa4	obj/kernel.asm	/^c0101fa4:	66 c7 45 f2 21 00    	movw   $0x21,-0xe(%ebp)$/;"	l
c0101faa	obj/kernel.asm	/^c0101faa:	c6 45 f1 20          	movb   $0x20,-0xf(%ebp)$/;"	l
c0101fae	obj/kernel.asm	/^c0101fae:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0101fb2	obj/kernel.asm	/^c0101fb2:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101fb6	obj/kernel.asm	/^c0101fb6:	ee                   	out    %al,(%dx)$/;"	l
c0101fb7	obj/kernel.asm	/^c0101fb7:	66 c7 45 ee 21 00    	movw   $0x21,-0x12(%ebp)$/;"	l
c0101fbd	obj/kernel.asm	/^c0101fbd:	c6 45 ed 04          	movb   $0x4,-0x13(%ebp)$/;"	l
c0101fc1	obj/kernel.asm	/^c0101fc1:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101fc5	obj/kernel.asm	/^c0101fc5:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101fc9	obj/kernel.asm	/^c0101fc9:	ee                   	out    %al,(%dx)$/;"	l
c0101fca	obj/kernel.asm	/^c0101fca:	66 c7 45 ea 21 00    	movw   $0x21,-0x16(%ebp)$/;"	l
c0101fd0	obj/kernel.asm	/^c0101fd0:	c6 45 e9 03          	movb   $0x3,-0x17(%ebp)$/;"	l
c0101fd4	obj/kernel.asm	/^c0101fd4:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101fd8	obj/kernel.asm	/^c0101fd8:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101fdc	obj/kernel.asm	/^c0101fdc:	ee                   	out    %al,(%dx)$/;"	l
c0101fdd	obj/kernel.asm	/^c0101fdd:	66 c7 45 e6 a0 00    	movw   $0xa0,-0x1a(%ebp)$/;"	l
c0101fe3	obj/kernel.asm	/^c0101fe3:	c6 45 e5 11          	movb   $0x11,-0x1b(%ebp)$/;"	l
c0101fe7	obj/kernel.asm	/^c0101fe7:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101feb	obj/kernel.asm	/^c0101feb:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101fef	obj/kernel.asm	/^c0101fef:	ee                   	out    %al,(%dx)$/;"	l
c0101ff0	obj/kernel.asm	/^c0101ff0:	66 c7 45 e2 a1 00    	movw   $0xa1,-0x1e(%ebp)$/;"	l
c0101ff6	obj/kernel.asm	/^c0101ff6:	c6 45 e1 28          	movb   $0x28,-0x1f(%ebp)$/;"	l
c0101ffa	obj/kernel.asm	/^c0101ffa:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0101ffe	obj/kernel.asm	/^c0101ffe:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c0102002	obj/kernel.asm	/^c0102002:	ee                   	out    %al,(%dx)$/;"	l
c0102003	obj/kernel.asm	/^c0102003:	66 c7 45 de a1 00    	movw   $0xa1,-0x22(%ebp)$/;"	l
c0102009	obj/kernel.asm	/^c0102009:	c6 45 dd 02          	movb   $0x2,-0x23(%ebp)$/;"	l
c010200d	obj/kernel.asm	/^c010200d:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0102011	obj/kernel.asm	/^c0102011:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0102015	obj/kernel.asm	/^c0102015:	ee                   	out    %al,(%dx)$/;"	l
c0102016	obj/kernel.asm	/^c0102016:	66 c7 45 da a1 00    	movw   $0xa1,-0x26(%ebp)$/;"	l
c010201c	obj/kernel.asm	/^c010201c:	c6 45 d9 03          	movb   $0x3,-0x27(%ebp)$/;"	l
c0102020	obj/kernel.asm	/^c0102020:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0102024	obj/kernel.asm	/^c0102024:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c0102028	obj/kernel.asm	/^c0102028:	ee                   	out    %al,(%dx)$/;"	l
c0102029	obj/kernel.asm	/^c0102029:	66 c7 45 d6 20 00    	movw   $0x20,-0x2a(%ebp)$/;"	l
c010202f	obj/kernel.asm	/^c010202f:	c6 45 d5 68          	movb   $0x68,-0x2b(%ebp)$/;"	l
c0102033	obj/kernel.asm	/^c0102033:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0102037	obj/kernel.asm	/^c0102037:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c010203b	obj/kernel.asm	/^c010203b:	ee                   	out    %al,(%dx)$/;"	l
c010203c	obj/kernel.asm	/^c010203c:	66 c7 45 d2 20 00    	movw   $0x20,-0x2e(%ebp)$/;"	l
c0102042	obj/kernel.asm	/^c0102042:	c6 45 d1 0a          	movb   $0xa,-0x2f(%ebp)$/;"	l
c0102046	obj/kernel.asm	/^c0102046:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c010204a	obj/kernel.asm	/^c010204a:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c010204e	obj/kernel.asm	/^c010204e:	ee                   	out    %al,(%dx)$/;"	l
c010204f	obj/kernel.asm	/^c010204f:	66 c7 45 ce a0 00    	movw   $0xa0,-0x32(%ebp)$/;"	l
c0102055	obj/kernel.asm	/^c0102055:	c6 45 cd 68          	movb   $0x68,-0x33(%ebp)$/;"	l
c0102059	obj/kernel.asm	/^c0102059:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c010205d	obj/kernel.asm	/^c010205d:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c0102061	obj/kernel.asm	/^c0102061:	ee                   	out    %al,(%dx)$/;"	l
c0102062	obj/kernel.asm	/^c0102062:	66 c7 45 ca a0 00    	movw   $0xa0,-0x36(%ebp)$/;"	l
c0102068	obj/kernel.asm	/^c0102068:	c6 45 c9 0a          	movb   $0xa,-0x37(%ebp)$/;"	l
c010206c	obj/kernel.asm	/^c010206c:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c0102070	obj/kernel.asm	/^c0102070:	0f b7 55 ca          	movzwl -0x36(%ebp),%edx$/;"	l
c0102074	obj/kernel.asm	/^c0102074:	ee                   	out    %al,(%dx)$/;"	l
c0102075	obj/kernel.asm	/^c0102075:	0f b7 05 90 95 12 c0 	movzwl 0xc0129590,%eax$/;"	l
c010207c	obj/kernel.asm	/^c010207c:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
c0102080	obj/kernel.asm	/^c0102080:	74 13                	je     c0102095 <pic_init+0x13a>$/;"	l
c0102082	obj/kernel.asm	/^c0102082:	0f b7 05 90 95 12 c0 	movzwl 0xc0129590,%eax$/;"	l
c0102089	obj/kernel.asm	/^c0102089:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010208c	obj/kernel.asm	/^c010208c:	50                   	push   %eax$/;"	l
c010208d	obj/kernel.asm	/^c010208d:	e8 45 fe ff ff       	call   c0101ed7 <pic_setmask>$/;"	l
c0102092	obj/kernel.asm	/^c0102092:	83 c4 04             	add    $0x4,%esp$/;"	l
c0102095	obj/kernel.asm	/^c0102095:	c9                   	leave  $/;"	l
c0102096	obj/kernel.asm	/^c0102096:	c3                   	ret    $/;"	l
c0102097	obj/kernel.asm	/^c0102097 <intr_enable>:$/;"	l
c0102097	obj/kernel.asm	/^c0102097:	55                   	push   %ebp$/;"	l
c0102098	obj/kernel.asm	/^c0102098:	89 e5                	mov    %esp,%ebp$/;"	l
c010209a	obj/kernel.asm	/^c010209a:	fb                   	sti    $/;"	l
c010209b	obj/kernel.asm	/^c010209b:	5d                   	pop    %ebp$/;"	l
c010209c	obj/kernel.asm	/^c010209c:	c3                   	ret    $/;"	l
c010209d	obj/kernel.asm	/^c010209d <intr_disable>:$/;"	l
c010209d	obj/kernel.asm	/^c010209d:	55                   	push   %ebp$/;"	l
c010209e	obj/kernel.asm	/^c010209e:	89 e5                	mov    %esp,%ebp$/;"	l
c01020a0	obj/kernel.asm	/^c01020a0:	fa                   	cli    $/;"	l
c01020a1	obj/kernel.asm	/^c01020a1:	5d                   	pop    %ebp$/;"	l
c01020a2	obj/kernel.asm	/^c01020a2:	c3                   	ret    $/;"	l
c01020a3	obj/kernel.asm	/^c01020a3 <print_ticks>:$/;"	l
c01020a3	obj/kernel.asm	/^c01020a3:	55                   	push   %ebp$/;"	l
c01020a4	obj/kernel.asm	/^c01020a4:	89 e5                	mov    %esp,%ebp$/;"	l
c01020a6	obj/kernel.asm	/^c01020a6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01020a9	obj/kernel.asm	/^c01020a9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01020ac	obj/kernel.asm	/^c01020ac:	6a 64                	push   $0x64$/;"	l
c01020ae	obj/kernel.asm	/^c01020ae:	68 80 b8 10 c0       	push   $0xc010b880$/;"	l
c01020b3	obj/kernel.asm	/^c01020b3:	e8 bd e1 ff ff       	call   c0100275 <cprintf>$/;"	l
c01020b8	obj/kernel.asm	/^c01020b8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01020bb	obj/kernel.asm	/^c01020bb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01020be	obj/kernel.asm	/^c01020be:	68 8a b8 10 c0       	push   $0xc010b88a$/;"	l
c01020c3	obj/kernel.asm	/^c01020c3:	e8 ad e1 ff ff       	call   c0100275 <cprintf>$/;"	l
c01020c8	obj/kernel.asm	/^c01020c8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01020cb	obj/kernel.asm	/^c01020cb:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01020ce	obj/kernel.asm	/^c01020ce:	68 98 b8 10 c0       	push   $0xc010b898$/;"	l
c01020d3	obj/kernel.asm	/^c01020d3:	6a 19                	push   $0x19$/;"	l
c01020d5	obj/kernel.asm	/^c01020d5:	68 ae b8 10 c0       	push   $0xc010b8ae$/;"	l
c01020da	obj/kernel.asm	/^c01020da:	e8 fb e2 ff ff       	call   c01003da <__panic>$/;"	l
c01020df	obj/kernel.asm	/^c01020df <idt_init>:$/;"	l
c01020df	obj/kernel.asm	/^c01020df:	55                   	push   %ebp$/;"	l
c01020e0	obj/kernel.asm	/^c01020e0:	89 e5                	mov    %esp,%ebp$/;"	l
c01020e2	obj/kernel.asm	/^c01020e2:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01020e5	obj/kernel.asm	/^c01020e5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01020ec	obj/kernel.asm	/^c01020ec:	e9 5c 02 00 00       	jmp    c010234d <idt_init+0x26e>$/;"	l
c01020f1	obj/kernel.asm	/^c01020f1:	81 7d fc 80 00 00 00 	cmpl   $0x80,-0x4(%ebp)$/;"	l
c01020f8	obj/kernel.asm	/^c01020f8:	0f 85 c1 00 00 00    	jne    c01021bf <idt_init+0xe0>$/;"	l
c01020fe	obj/kernel.asm	/^c01020fe:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102101	obj/kernel.asm	/^c0102101:	8b 04 85 60 96 12 c0 	mov    -0x3fed69a0(,%eax,4),%eax$/;"	l
c0102108	obj/kernel.asm	/^c0102108:	89 c2                	mov    %eax,%edx$/;"	l
c010210a	obj/kernel.asm	/^c010210a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010210d	obj/kernel.asm	/^c010210d:	66 89 14 c5 c0 b6 19 	mov    %dx,-0x3fe64940(,%eax,8)$/;"	l
c0102114	obj/kernel.asm	/^c0102114:	c0 $/;"	l
c0102115	obj/kernel.asm	/^c0102115:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102118	obj/kernel.asm	/^c0102118:	66 c7 04 c5 c2 b6 19 	movw   $0x8,-0x3fe6493e(,%eax,8)$/;"	l
c010211f	obj/kernel.asm	/^c010211f:	c0 08 00 $/;"	l
c0102122	obj/kernel.asm	/^c0102122:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102125	obj/kernel.asm	/^c0102125:	0f b6 14 c5 c4 b6 19 	movzbl -0x3fe6493c(,%eax,8),%edx$/;"	l
c010212c	obj/kernel.asm	/^c010212c:	c0 $/;"	l
c010212d	obj/kernel.asm	/^c010212d:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c0102130	obj/kernel.asm	/^c0102130:	88 14 c5 c4 b6 19 c0 	mov    %dl,-0x3fe6493c(,%eax,8)$/;"	l
c0102137	obj/kernel.asm	/^c0102137:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010213a	obj/kernel.asm	/^c010213a:	0f b6 14 c5 c4 b6 19 	movzbl -0x3fe6493c(,%eax,8),%edx$/;"	l
c0102141	obj/kernel.asm	/^c0102141:	c0 $/;"	l
c0102142	obj/kernel.asm	/^c0102142:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c0102145	obj/kernel.asm	/^c0102145:	88 14 c5 c4 b6 19 c0 	mov    %dl,-0x3fe6493c(,%eax,8)$/;"	l
c010214c	obj/kernel.asm	/^c010214c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010214f	obj/kernel.asm	/^c010214f:	0f b6 14 c5 c5 b6 19 	movzbl -0x3fe6493b(,%eax,8),%edx$/;"	l
c0102156	obj/kernel.asm	/^c0102156:	c0 $/;"	l
c0102157	obj/kernel.asm	/^c0102157:	83 ca 0f             	or     $0xf,%edx$/;"	l
c010215a	obj/kernel.asm	/^c010215a:	88 14 c5 c5 b6 19 c0 	mov    %dl,-0x3fe6493b(,%eax,8)$/;"	l
c0102161	obj/kernel.asm	/^c0102161:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102164	obj/kernel.asm	/^c0102164:	0f b6 14 c5 c5 b6 19 	movzbl -0x3fe6493b(,%eax,8),%edx$/;"	l
c010216b	obj/kernel.asm	/^c010216b:	c0 $/;"	l
c010216c	obj/kernel.asm	/^c010216c:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c010216f	obj/kernel.asm	/^c010216f:	88 14 c5 c5 b6 19 c0 	mov    %dl,-0x3fe6493b(,%eax,8)$/;"	l
c0102176	obj/kernel.asm	/^c0102176:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102179	obj/kernel.asm	/^c0102179:	0f b6 14 c5 c5 b6 19 	movzbl -0x3fe6493b(,%eax,8),%edx$/;"	l
c0102180	obj/kernel.asm	/^c0102180:	c0 $/;"	l
c0102181	obj/kernel.asm	/^c0102181:	83 ca 60             	or     $0x60,%edx$/;"	l
c0102184	obj/kernel.asm	/^c0102184:	88 14 c5 c5 b6 19 c0 	mov    %dl,-0x3fe6493b(,%eax,8)$/;"	l
c010218b	obj/kernel.asm	/^c010218b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010218e	obj/kernel.asm	/^c010218e:	0f b6 14 c5 c5 b6 19 	movzbl -0x3fe6493b(,%eax,8),%edx$/;"	l
c0102195	obj/kernel.asm	/^c0102195:	c0 $/;"	l
c0102196	obj/kernel.asm	/^c0102196:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c0102199	obj/kernel.asm	/^c0102199:	88 14 c5 c5 b6 19 c0 	mov    %dl,-0x3fe6493b(,%eax,8)$/;"	l
c01021a0	obj/kernel.asm	/^c01021a0:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021a3	obj/kernel.asm	/^c01021a3:	8b 04 85 60 96 12 c0 	mov    -0x3fed69a0(,%eax,4),%eax$/;"	l
c01021aa	obj/kernel.asm	/^c01021aa:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01021ad	obj/kernel.asm	/^c01021ad:	89 c2                	mov    %eax,%edx$/;"	l
c01021af	obj/kernel.asm	/^c01021af:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021b2	obj/kernel.asm	/^c01021b2:	66 89 14 c5 c6 b6 19 	mov    %dx,-0x3fe6493a(,%eax,8)$/;"	l
c01021b9	obj/kernel.asm	/^c01021b9:	c0 $/;"	l
c01021ba	obj/kernel.asm	/^c01021ba:	e9 8a 01 00 00       	jmp    c0102349 <idt_init+0x26a>$/;"	l
c01021bf	obj/kernel.asm	/^c01021bf:	83 7d fc 1f          	cmpl   $0x1f,-0x4(%ebp)$/;"	l
c01021c3	obj/kernel.asm	/^c01021c3:	0f 8f c1 00 00 00    	jg     c010228a <idt_init+0x1ab>$/;"	l
c01021c9	obj/kernel.asm	/^c01021c9:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021cc	obj/kernel.asm	/^c01021cc:	8b 04 85 60 96 12 c0 	mov    -0x3fed69a0(,%eax,4),%eax$/;"	l
c01021d3	obj/kernel.asm	/^c01021d3:	89 c2                	mov    %eax,%edx$/;"	l
c01021d5	obj/kernel.asm	/^c01021d5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021d8	obj/kernel.asm	/^c01021d8:	66 89 14 c5 c0 b6 19 	mov    %dx,-0x3fe64940(,%eax,8)$/;"	l
c01021df	obj/kernel.asm	/^c01021df:	c0 $/;"	l
c01021e0	obj/kernel.asm	/^c01021e0:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021e3	obj/kernel.asm	/^c01021e3:	66 c7 04 c5 c2 b6 19 	movw   $0x8,-0x3fe6493e(,%eax,8)$/;"	l
c01021ea	obj/kernel.asm	/^c01021ea:	c0 08 00 $/;"	l
c01021ed	obj/kernel.asm	/^c01021ed:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021f0	obj/kernel.asm	/^c01021f0:	0f b6 14 c5 c4 b6 19 	movzbl -0x3fe6493c(,%eax,8),%edx$/;"	l
c01021f7	obj/kernel.asm	/^c01021f7:	c0 $/;"	l
c01021f8	obj/kernel.asm	/^c01021f8:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c01021fb	obj/kernel.asm	/^c01021fb:	88 14 c5 c4 b6 19 c0 	mov    %dl,-0x3fe6493c(,%eax,8)$/;"	l
c0102202	obj/kernel.asm	/^c0102202:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102205	obj/kernel.asm	/^c0102205:	0f b6 14 c5 c4 b6 19 	movzbl -0x3fe6493c(,%eax,8),%edx$/;"	l
c010220c	obj/kernel.asm	/^c010220c:	c0 $/;"	l
c010220d	obj/kernel.asm	/^c010220d:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c0102210	obj/kernel.asm	/^c0102210:	88 14 c5 c4 b6 19 c0 	mov    %dl,-0x3fe6493c(,%eax,8)$/;"	l
c0102217	obj/kernel.asm	/^c0102217:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010221a	obj/kernel.asm	/^c010221a:	0f b6 14 c5 c5 b6 19 	movzbl -0x3fe6493b(,%eax,8),%edx$/;"	l
c0102221	obj/kernel.asm	/^c0102221:	c0 $/;"	l
c0102222	obj/kernel.asm	/^c0102222:	83 ca 0f             	or     $0xf,%edx$/;"	l
c0102225	obj/kernel.asm	/^c0102225:	88 14 c5 c5 b6 19 c0 	mov    %dl,-0x3fe6493b(,%eax,8)$/;"	l
c010222c	obj/kernel.asm	/^c010222c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010222f	obj/kernel.asm	/^c010222f:	0f b6 14 c5 c5 b6 19 	movzbl -0x3fe6493b(,%eax,8),%edx$/;"	l
c0102236	obj/kernel.asm	/^c0102236:	c0 $/;"	l
c0102237	obj/kernel.asm	/^c0102237:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c010223a	obj/kernel.asm	/^c010223a:	88 14 c5 c5 b6 19 c0 	mov    %dl,-0x3fe6493b(,%eax,8)$/;"	l
c0102241	obj/kernel.asm	/^c0102241:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102244	obj/kernel.asm	/^c0102244:	0f b6 14 c5 c5 b6 19 	movzbl -0x3fe6493b(,%eax,8),%edx$/;"	l
c010224b	obj/kernel.asm	/^c010224b:	c0 $/;"	l
c010224c	obj/kernel.asm	/^c010224c:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c010224f	obj/kernel.asm	/^c010224f:	88 14 c5 c5 b6 19 c0 	mov    %dl,-0x3fe6493b(,%eax,8)$/;"	l
c0102256	obj/kernel.asm	/^c0102256:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102259	obj/kernel.asm	/^c0102259:	0f b6 14 c5 c5 b6 19 	movzbl -0x3fe6493b(,%eax,8),%edx$/;"	l
c0102260	obj/kernel.asm	/^c0102260:	c0 $/;"	l
c0102261	obj/kernel.asm	/^c0102261:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c0102264	obj/kernel.asm	/^c0102264:	88 14 c5 c5 b6 19 c0 	mov    %dl,-0x3fe6493b(,%eax,8)$/;"	l
c010226b	obj/kernel.asm	/^c010226b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010226e	obj/kernel.asm	/^c010226e:	8b 04 85 60 96 12 c0 	mov    -0x3fed69a0(,%eax,4),%eax$/;"	l
c0102275	obj/kernel.asm	/^c0102275:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0102278	obj/kernel.asm	/^c0102278:	89 c2                	mov    %eax,%edx$/;"	l
c010227a	obj/kernel.asm	/^c010227a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010227d	obj/kernel.asm	/^c010227d:	66 89 14 c5 c6 b6 19 	mov    %dx,-0x3fe6493a(,%eax,8)$/;"	l
c0102284	obj/kernel.asm	/^c0102284:	c0 $/;"	l
c0102285	obj/kernel.asm	/^c0102285:	e9 bf 00 00 00       	jmp    c0102349 <idt_init+0x26a>$/;"	l
c010228a	obj/kernel.asm	/^c010228a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010228d	obj/kernel.asm	/^c010228d:	8b 04 85 60 96 12 c0 	mov    -0x3fed69a0(,%eax,4),%eax$/;"	l
c0102294	obj/kernel.asm	/^c0102294:	89 c2                	mov    %eax,%edx$/;"	l
c0102296	obj/kernel.asm	/^c0102296:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102299	obj/kernel.asm	/^c0102299:	66 89 14 c5 c0 b6 19 	mov    %dx,-0x3fe64940(,%eax,8)$/;"	l
c01022a0	obj/kernel.asm	/^c01022a0:	c0 $/;"	l
c01022a1	obj/kernel.asm	/^c01022a1:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022a4	obj/kernel.asm	/^c01022a4:	66 c7 04 c5 c2 b6 19 	movw   $0x8,-0x3fe6493e(,%eax,8)$/;"	l
c01022ab	obj/kernel.asm	/^c01022ab:	c0 08 00 $/;"	l
c01022ae	obj/kernel.asm	/^c01022ae:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022b1	obj/kernel.asm	/^c01022b1:	0f b6 14 c5 c4 b6 19 	movzbl -0x3fe6493c(,%eax,8),%edx$/;"	l
c01022b8	obj/kernel.asm	/^c01022b8:	c0 $/;"	l
c01022b9	obj/kernel.asm	/^c01022b9:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c01022bc	obj/kernel.asm	/^c01022bc:	88 14 c5 c4 b6 19 c0 	mov    %dl,-0x3fe6493c(,%eax,8)$/;"	l
c01022c3	obj/kernel.asm	/^c01022c3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022c6	obj/kernel.asm	/^c01022c6:	0f b6 14 c5 c4 b6 19 	movzbl -0x3fe6493c(,%eax,8),%edx$/;"	l
c01022cd	obj/kernel.asm	/^c01022cd:	c0 $/;"	l
c01022ce	obj/kernel.asm	/^c01022ce:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c01022d1	obj/kernel.asm	/^c01022d1:	88 14 c5 c4 b6 19 c0 	mov    %dl,-0x3fe6493c(,%eax,8)$/;"	l
c01022d8	obj/kernel.asm	/^c01022d8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022db	obj/kernel.asm	/^c01022db:	0f b6 14 c5 c5 b6 19 	movzbl -0x3fe6493b(,%eax,8),%edx$/;"	l
c01022e2	obj/kernel.asm	/^c01022e2:	c0 $/;"	l
c01022e3	obj/kernel.asm	/^c01022e3:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c01022e6	obj/kernel.asm	/^c01022e6:	83 ca 0e             	or     $0xe,%edx$/;"	l
c01022e9	obj/kernel.asm	/^c01022e9:	88 14 c5 c5 b6 19 c0 	mov    %dl,-0x3fe6493b(,%eax,8)$/;"	l
c01022f0	obj/kernel.asm	/^c01022f0:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022f3	obj/kernel.asm	/^c01022f3:	0f b6 14 c5 c5 b6 19 	movzbl -0x3fe6493b(,%eax,8),%edx$/;"	l
c01022fa	obj/kernel.asm	/^c01022fa:	c0 $/;"	l
c01022fb	obj/kernel.asm	/^c01022fb:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c01022fe	obj/kernel.asm	/^c01022fe:	88 14 c5 c5 b6 19 c0 	mov    %dl,-0x3fe6493b(,%eax,8)$/;"	l
c0102305	obj/kernel.asm	/^c0102305:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102308	obj/kernel.asm	/^c0102308:	0f b6 14 c5 c5 b6 19 	movzbl -0x3fe6493b(,%eax,8),%edx$/;"	l
c010230f	obj/kernel.asm	/^c010230f:	c0 $/;"	l
c0102310	obj/kernel.asm	/^c0102310:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c0102313	obj/kernel.asm	/^c0102313:	88 14 c5 c5 b6 19 c0 	mov    %dl,-0x3fe6493b(,%eax,8)$/;"	l
c010231a	obj/kernel.asm	/^c010231a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010231d	obj/kernel.asm	/^c010231d:	0f b6 14 c5 c5 b6 19 	movzbl -0x3fe6493b(,%eax,8),%edx$/;"	l
c0102324	obj/kernel.asm	/^c0102324:	c0 $/;"	l
c0102325	obj/kernel.asm	/^c0102325:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c0102328	obj/kernel.asm	/^c0102328:	88 14 c5 c5 b6 19 c0 	mov    %dl,-0x3fe6493b(,%eax,8)$/;"	l
c010232f	obj/kernel.asm	/^c010232f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102332	obj/kernel.asm	/^c0102332:	8b 04 85 60 96 12 c0 	mov    -0x3fed69a0(,%eax,4),%eax$/;"	l
c0102339	obj/kernel.asm	/^c0102339:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010233c	obj/kernel.asm	/^c010233c:	89 c2                	mov    %eax,%edx$/;"	l
c010233e	obj/kernel.asm	/^c010233e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102341	obj/kernel.asm	/^c0102341:	66 89 14 c5 c6 b6 19 	mov    %dx,-0x3fe6493a(,%eax,8)$/;"	l
c0102348	obj/kernel.asm	/^c0102348:	c0 $/;"	l
c0102349	obj/kernel.asm	/^c0102349:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010234d	obj/kernel.asm	/^c010234d:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)$/;"	l
c0102354	obj/kernel.asm	/^c0102354:	0f 8e 97 fd ff ff    	jle    c01020f1 <idt_init+0x12>$/;"	l
c010235a	obj/kernel.asm	/^c010235a:	a1 44 98 12 c0       	mov    0xc0129844,%eax$/;"	l
c010235f	obj/kernel.asm	/^c010235f:	66 a3 88 ba 19 c0    	mov    %ax,0xc019ba88$/;"	l
c0102365	obj/kernel.asm	/^c0102365:	66 c7 05 8a ba 19 c0 	movw   $0x8,0xc019ba8a$/;"	l
c010236c	obj/kernel.asm	/^c010236c:	08 00 $/;"	l
c010236e	obj/kernel.asm	/^c010236e:	0f b6 05 8c ba 19 c0 	movzbl 0xc019ba8c,%eax$/;"	l
c0102375	obj/kernel.asm	/^c0102375:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
c0102378	obj/kernel.asm	/^c0102378:	a2 8c ba 19 c0       	mov    %al,0xc019ba8c$/;"	l
c010237d	obj/kernel.asm	/^c010237d:	0f b6 05 8c ba 19 c0 	movzbl 0xc019ba8c,%eax$/;"	l
c0102384	obj/kernel.asm	/^c0102384:	83 e0 1f             	and    $0x1f,%eax$/;"	l
c0102387	obj/kernel.asm	/^c0102387:	a2 8c ba 19 c0       	mov    %al,0xc019ba8c$/;"	l
c010238c	obj/kernel.asm	/^c010238c:	0f b6 05 8d ba 19 c0 	movzbl 0xc019ba8d,%eax$/;"	l
c0102393	obj/kernel.asm	/^c0102393:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c0102396	obj/kernel.asm	/^c0102396:	83 c8 0e             	or     $0xe,%eax$/;"	l
c0102399	obj/kernel.asm	/^c0102399:	a2 8d ba 19 c0       	mov    %al,0xc019ba8d$/;"	l
c010239e	obj/kernel.asm	/^c010239e:	0f b6 05 8d ba 19 c0 	movzbl 0xc019ba8d,%eax$/;"	l
c01023a5	obj/kernel.asm	/^c01023a5:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c01023a8	obj/kernel.asm	/^c01023a8:	a2 8d ba 19 c0       	mov    %al,0xc019ba8d$/;"	l
c01023ad	obj/kernel.asm	/^c01023ad:	0f b6 05 8d ba 19 c0 	movzbl 0xc019ba8d,%eax$/;"	l
c01023b4	obj/kernel.asm	/^c01023b4:	83 c8 60             	or     $0x60,%eax$/;"	l
c01023b7	obj/kernel.asm	/^c01023b7:	a2 8d ba 19 c0       	mov    %al,0xc019ba8d$/;"	l
c01023bc	obj/kernel.asm	/^c01023bc:	0f b6 05 8d ba 19 c0 	movzbl 0xc019ba8d,%eax$/;"	l
c01023c3	obj/kernel.asm	/^c01023c3:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c01023c6	obj/kernel.asm	/^c01023c6:	a2 8d ba 19 c0       	mov    %al,0xc019ba8d$/;"	l
c01023cb	obj/kernel.asm	/^c01023cb:	a1 44 98 12 c0       	mov    0xc0129844,%eax$/;"	l
c01023d0	obj/kernel.asm	/^c01023d0:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01023d3	obj/kernel.asm	/^c01023d3:	66 a3 8e ba 19 c0    	mov    %ax,0xc019ba8e$/;"	l
c01023d9	obj/kernel.asm	/^c01023d9:	c7 45 f8 c0 95 12 c0 	movl   $0xc01295c0,-0x8(%ebp)$/;"	l
c01023e0	obj/kernel.asm	/^c01023e0:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01023e3	obj/kernel.asm	/^c01023e3:	0f 01 18             	lidtl  (%eax)$/;"	l
c01023e6	obj/kernel.asm	/^c01023e6:	c9                   	leave  $/;"	l
c01023e7	obj/kernel.asm	/^c01023e7:	c3                   	ret    $/;"	l
c01023e8	obj/kernel.asm	/^c01023e8 <trapname>:$/;"	l
c01023e8	obj/kernel.asm	/^c01023e8:	55                   	push   %ebp$/;"	l
c01023e9	obj/kernel.asm	/^c01023e9:	89 e5                	mov    %esp,%ebp$/;"	l
c01023eb	obj/kernel.asm	/^c01023eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023ee	obj/kernel.asm	/^c01023ee:	83 f8 13             	cmp    $0x13,%eax$/;"	l
c01023f1	obj/kernel.asm	/^c01023f1:	77 0c                	ja     c01023ff <trapname+0x17>$/;"	l
c01023f3	obj/kernel.asm	/^c01023f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023f6	obj/kernel.asm	/^c01023f6:	8b 04 85 40 bd 10 c0 	mov    -0x3fef42c0(,%eax,4),%eax$/;"	l
c01023fd	obj/kernel.asm	/^c01023fd:	eb 18                	jmp    c0102417 <trapname+0x2f>$/;"	l
c01023ff	obj/kernel.asm	/^c01023ff:	83 7d 08 1f          	cmpl   $0x1f,0x8(%ebp)$/;"	l
c0102403	obj/kernel.asm	/^c0102403:	7e 0d                	jle    c0102412 <trapname+0x2a>$/;"	l
c0102405	obj/kernel.asm	/^c0102405:	83 7d 08 2f          	cmpl   $0x2f,0x8(%ebp)$/;"	l
c0102409	obj/kernel.asm	/^c0102409:	7f 07                	jg     c0102412 <trapname+0x2a>$/;"	l
c010240b	obj/kernel.asm	/^c010240b:	b8 bf b8 10 c0       	mov    $0xc010b8bf,%eax$/;"	l
c0102410	obj/kernel.asm	/^c0102410:	eb 05                	jmp    c0102417 <trapname+0x2f>$/;"	l
c0102412	obj/kernel.asm	/^c0102412:	b8 d2 b8 10 c0       	mov    $0xc010b8d2,%eax$/;"	l
c0102417	obj/kernel.asm	/^c0102417:	5d                   	pop    %ebp$/;"	l
c0102418	obj/kernel.asm	/^c0102418:	c3                   	ret    $/;"	l
c0102419	obj/kernel.asm	/^c0102419 <trap_in_kernel>:$/;"	l
c0102419	obj/kernel.asm	/^c0102419:	55                   	push   %ebp$/;"	l
c010241a	obj/kernel.asm	/^c010241a:	89 e5                	mov    %esp,%ebp$/;"	l
c010241c	obj/kernel.asm	/^c010241c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010241f	obj/kernel.asm	/^c010241f:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c0102423	obj/kernel.asm	/^c0102423:	66 83 f8 08          	cmp    $0x8,%ax$/;"	l
c0102427	obj/kernel.asm	/^c0102427:	0f 94 c0             	sete   %al$/;"	l
c010242a	obj/kernel.asm	/^c010242a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010242d	obj/kernel.asm	/^c010242d:	5d                   	pop    %ebp$/;"	l
c010242e	obj/kernel.asm	/^c010242e:	c3                   	ret    $/;"	l
c010242f	obj/kernel.asm	/^c010242f <print_trapframe>:$/;"	l
c010242f	obj/kernel.asm	/^c010242f:	55                   	push   %ebp$/;"	l
c0102430	obj/kernel.asm	/^c0102430:	89 e5                	mov    %esp,%ebp$/;"	l
c0102432	obj/kernel.asm	/^c0102432:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102435	obj/kernel.asm	/^c0102435:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102438	obj/kernel.asm	/^c0102438:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010243b	obj/kernel.asm	/^c010243b:	68 13 b9 10 c0       	push   $0xc010b913$/;"	l
c0102440	obj/kernel.asm	/^c0102440:	e8 30 de ff ff       	call   c0100275 <cprintf>$/;"	l
c0102445	obj/kernel.asm	/^c0102445:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102448	obj/kernel.asm	/^c0102448:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010244b	obj/kernel.asm	/^c010244b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010244e	obj/kernel.asm	/^c010244e:	50                   	push   %eax$/;"	l
c010244f	obj/kernel.asm	/^c010244f:	e8 b7 01 00 00       	call   c010260b <print_regs>$/;"	l
c0102454	obj/kernel.asm	/^c0102454:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102457	obj/kernel.asm	/^c0102457:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010245a	obj/kernel.asm	/^c010245a:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c010245e	obj/kernel.asm	/^c010245e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102461	obj/kernel.asm	/^c0102461:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102464	obj/kernel.asm	/^c0102464:	50                   	push   %eax$/;"	l
c0102465	obj/kernel.asm	/^c0102465:	68 24 b9 10 c0       	push   $0xc010b924$/;"	l
c010246a	obj/kernel.asm	/^c010246a:	e8 06 de ff ff       	call   c0100275 <cprintf>$/;"	l
c010246f	obj/kernel.asm	/^c010246f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102472	obj/kernel.asm	/^c0102472:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102475	obj/kernel.asm	/^c0102475:	0f b7 40 28          	movzwl 0x28(%eax),%eax$/;"	l
c0102479	obj/kernel.asm	/^c0102479:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010247c	obj/kernel.asm	/^c010247c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010247f	obj/kernel.asm	/^c010247f:	50                   	push   %eax$/;"	l
c0102480	obj/kernel.asm	/^c0102480:	68 37 b9 10 c0       	push   $0xc010b937$/;"	l
c0102485	obj/kernel.asm	/^c0102485:	e8 eb dd ff ff       	call   c0100275 <cprintf>$/;"	l
c010248a	obj/kernel.asm	/^c010248a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010248d	obj/kernel.asm	/^c010248d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102490	obj/kernel.asm	/^c0102490:	0f b7 40 24          	movzwl 0x24(%eax),%eax$/;"	l
c0102494	obj/kernel.asm	/^c0102494:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102497	obj/kernel.asm	/^c0102497:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010249a	obj/kernel.asm	/^c010249a:	50                   	push   %eax$/;"	l
c010249b	obj/kernel.asm	/^c010249b:	68 4a b9 10 c0       	push   $0xc010b94a$/;"	l
c01024a0	obj/kernel.asm	/^c01024a0:	e8 d0 dd ff ff       	call   c0100275 <cprintf>$/;"	l
c01024a5	obj/kernel.asm	/^c01024a5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01024a8	obj/kernel.asm	/^c01024a8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024ab	obj/kernel.asm	/^c01024ab:	0f b7 40 20          	movzwl 0x20(%eax),%eax$/;"	l
c01024af	obj/kernel.asm	/^c01024af:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01024b2	obj/kernel.asm	/^c01024b2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01024b5	obj/kernel.asm	/^c01024b5:	50                   	push   %eax$/;"	l
c01024b6	obj/kernel.asm	/^c01024b6:	68 5d b9 10 c0       	push   $0xc010b95d$/;"	l
c01024bb	obj/kernel.asm	/^c01024bb:	e8 b5 dd ff ff       	call   c0100275 <cprintf>$/;"	l
c01024c0	obj/kernel.asm	/^c01024c0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01024c3	obj/kernel.asm	/^c01024c3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024c6	obj/kernel.asm	/^c01024c6:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01024c9	obj/kernel.asm	/^c01024c9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01024cc	obj/kernel.asm	/^c01024cc:	50                   	push   %eax$/;"	l
c01024cd	obj/kernel.asm	/^c01024cd:	e8 16 ff ff ff       	call   c01023e8 <trapname>$/;"	l
c01024d2	obj/kernel.asm	/^c01024d2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01024d5	obj/kernel.asm	/^c01024d5:	89 c2                	mov    %eax,%edx$/;"	l
c01024d7	obj/kernel.asm	/^c01024d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024da	obj/kernel.asm	/^c01024da:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01024dd	obj/kernel.asm	/^c01024dd:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01024e0	obj/kernel.asm	/^c01024e0:	52                   	push   %edx$/;"	l
c01024e1	obj/kernel.asm	/^c01024e1:	50                   	push   %eax$/;"	l
c01024e2	obj/kernel.asm	/^c01024e2:	68 70 b9 10 c0       	push   $0xc010b970$/;"	l
c01024e7	obj/kernel.asm	/^c01024e7:	e8 89 dd ff ff       	call   c0100275 <cprintf>$/;"	l
c01024ec	obj/kernel.asm	/^c01024ec:	83 c4 10             	add    $0x10,%esp$/;"	l
c01024ef	obj/kernel.asm	/^c01024ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024f2	obj/kernel.asm	/^c01024f2:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01024f5	obj/kernel.asm	/^c01024f5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01024f8	obj/kernel.asm	/^c01024f8:	50                   	push   %eax$/;"	l
c01024f9	obj/kernel.asm	/^c01024f9:	68 82 b9 10 c0       	push   $0xc010b982$/;"	l
c01024fe	obj/kernel.asm	/^c01024fe:	e8 72 dd ff ff       	call   c0100275 <cprintf>$/;"	l
c0102503	obj/kernel.asm	/^c0102503:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102506	obj/kernel.asm	/^c0102506:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102509	obj/kernel.asm	/^c0102509:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c010250c	obj/kernel.asm	/^c010250c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010250f	obj/kernel.asm	/^c010250f:	50                   	push   %eax$/;"	l
c0102510	obj/kernel.asm	/^c0102510:	68 91 b9 10 c0       	push   $0xc010b991$/;"	l
c0102515	obj/kernel.asm	/^c0102515:	e8 5b dd ff ff       	call   c0100275 <cprintf>$/;"	l
c010251a	obj/kernel.asm	/^c010251a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010251d	obj/kernel.asm	/^c010251d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102520	obj/kernel.asm	/^c0102520:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c0102524	obj/kernel.asm	/^c0102524:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102527	obj/kernel.asm	/^c0102527:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010252a	obj/kernel.asm	/^c010252a:	50                   	push   %eax$/;"	l
c010252b	obj/kernel.asm	/^c010252b:	68 a0 b9 10 c0       	push   $0xc010b9a0$/;"	l
c0102530	obj/kernel.asm	/^c0102530:	e8 40 dd ff ff       	call   c0100275 <cprintf>$/;"	l
c0102535	obj/kernel.asm	/^c0102535:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102538	obj/kernel.asm	/^c0102538:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010253b	obj/kernel.asm	/^c010253b:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c010253e	obj/kernel.asm	/^c010253e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102541	obj/kernel.asm	/^c0102541:	50                   	push   %eax$/;"	l
c0102542	obj/kernel.asm	/^c0102542:	68 b3 b9 10 c0       	push   $0xc010b9b3$/;"	l
c0102547	obj/kernel.asm	/^c0102547:	e8 29 dd ff ff       	call   c0100275 <cprintf>$/;"	l
c010254c	obj/kernel.asm	/^c010254c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010254f	obj/kernel.asm	/^c010254f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0102556	obj/kernel.asm	/^c0102556:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010255d	obj/kernel.asm	/^c010255d:	eb 3f                	jmp    c010259e <print_trapframe+0x16f>$/;"	l
c010255f	obj/kernel.asm	/^c010255f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102562	obj/kernel.asm	/^c0102562:	8b 50 40             	mov    0x40(%eax),%edx$/;"	l
c0102565	obj/kernel.asm	/^c0102565:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0102568	obj/kernel.asm	/^c0102568:	21 d0                	and    %edx,%eax$/;"	l
c010256a	obj/kernel.asm	/^c010256a:	85 c0                	test   %eax,%eax$/;"	l
c010256c	obj/kernel.asm	/^c010256c:	74 29                	je     c0102597 <print_trapframe+0x168>$/;"	l
c010256e	obj/kernel.asm	/^c010256e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102571	obj/kernel.asm	/^c0102571:	8b 04 85 00 96 12 c0 	mov    -0x3fed6a00(,%eax,4),%eax$/;"	l
c0102578	obj/kernel.asm	/^c0102578:	85 c0                	test   %eax,%eax$/;"	l
c010257a	obj/kernel.asm	/^c010257a:	74 1b                	je     c0102597 <print_trapframe+0x168>$/;"	l
c010257c	obj/kernel.asm	/^c010257c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010257f	obj/kernel.asm	/^c010257f:	8b 04 85 00 96 12 c0 	mov    -0x3fed6a00(,%eax,4),%eax$/;"	l
c0102586	obj/kernel.asm	/^c0102586:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102589	obj/kernel.asm	/^c0102589:	50                   	push   %eax$/;"	l
c010258a	obj/kernel.asm	/^c010258a:	68 c2 b9 10 c0       	push   $0xc010b9c2$/;"	l
c010258f	obj/kernel.asm	/^c010258f:	e8 e1 dc ff ff       	call   c0100275 <cprintf>$/;"	l
c0102594	obj/kernel.asm	/^c0102594:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102597	obj/kernel.asm	/^c0102597:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010259b	obj/kernel.asm	/^c010259b:	d1 65 f0             	shll   -0x10(%ebp)$/;"	d
c010259e	obj/kernel.asm	/^c010259e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01025a1	obj/kernel.asm	/^c01025a1:	83 f8 17             	cmp    $0x17,%eax$/;"	l
c01025a4	obj/kernel.asm	/^c01025a4:	76 b9                	jbe    c010255f <print_trapframe+0x130>$/;"	l
c01025a6	obj/kernel.asm	/^c01025a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025a9	obj/kernel.asm	/^c01025a9:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c01025ac	obj/kernel.asm	/^c01025ac:	25 00 30 00 00       	and    $0x3000,%eax$/;"	l
c01025b1	obj/kernel.asm	/^c01025b1:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01025b4	obj/kernel.asm	/^c01025b4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01025b7	obj/kernel.asm	/^c01025b7:	50                   	push   %eax$/;"	l
c01025b8	obj/kernel.asm	/^c01025b8:	68 c6 b9 10 c0       	push   $0xc010b9c6$/;"	l
c01025bd	obj/kernel.asm	/^c01025bd:	e8 b3 dc ff ff       	call   c0100275 <cprintf>$/;"	l
c01025c2	obj/kernel.asm	/^c01025c2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025c5	obj/kernel.asm	/^c01025c5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01025c8	obj/kernel.asm	/^c01025c8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01025cb	obj/kernel.asm	/^c01025cb:	e8 49 fe ff ff       	call   c0102419 <trap_in_kernel>$/;"	l
c01025d0	obj/kernel.asm	/^c01025d0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025d3	obj/kernel.asm	/^c01025d3:	85 c0                	test   %eax,%eax$/;"	l
c01025d5	obj/kernel.asm	/^c01025d5:	75 32                	jne    c0102609 <print_trapframe+0x1da>$/;"	l
c01025d7	obj/kernel.asm	/^c01025d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025da	obj/kernel.asm	/^c01025da:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c01025dd	obj/kernel.asm	/^c01025dd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01025e0	obj/kernel.asm	/^c01025e0:	50                   	push   %eax$/;"	l
c01025e1	obj/kernel.asm	/^c01025e1:	68 cf b9 10 c0       	push   $0xc010b9cf$/;"	l
c01025e6	obj/kernel.asm	/^c01025e6:	e8 8a dc ff ff       	call   c0100275 <cprintf>$/;"	l
c01025eb	obj/kernel.asm	/^c01025eb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025ee	obj/kernel.asm	/^c01025ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025f1	obj/kernel.asm	/^c01025f1:	0f b7 40 48          	movzwl 0x48(%eax),%eax$/;"	l
c01025f5	obj/kernel.asm	/^c01025f5:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01025f8	obj/kernel.asm	/^c01025f8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01025fb	obj/kernel.asm	/^c01025fb:	50                   	push   %eax$/;"	l
c01025fc	obj/kernel.asm	/^c01025fc:	68 de b9 10 c0       	push   $0xc010b9de$/;"	l
c0102601	obj/kernel.asm	/^c0102601:	e8 6f dc ff ff       	call   c0100275 <cprintf>$/;"	l
c0102606	obj/kernel.asm	/^c0102606:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102609	obj/kernel.asm	/^c0102609:	c9                   	leave  $/;"	l
c010260a	obj/kernel.asm	/^c010260a:	c3                   	ret    $/;"	l
c010260b	obj/kernel.asm	/^c010260b <print_regs>:$/;"	l
c010260b	obj/kernel.asm	/^c010260b:	55                   	push   %ebp$/;"	l
c010260c	obj/kernel.asm	/^c010260c:	89 e5                	mov    %esp,%ebp$/;"	l
c010260e	obj/kernel.asm	/^c010260e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102611	obj/kernel.asm	/^c0102611:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102614	obj/kernel.asm	/^c0102614:	8b 00                	mov    (%eax),%eax$/;"	l
c0102616	obj/kernel.asm	/^c0102616:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102619	obj/kernel.asm	/^c0102619:	50                   	push   %eax$/;"	l
c010261a	obj/kernel.asm	/^c010261a:	68 f1 b9 10 c0       	push   $0xc010b9f1$/;"	l
c010261f	obj/kernel.asm	/^c010261f:	e8 51 dc ff ff       	call   c0100275 <cprintf>$/;"	l
c0102624	obj/kernel.asm	/^c0102624:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102627	obj/kernel.asm	/^c0102627:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010262a	obj/kernel.asm	/^c010262a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010262d	obj/kernel.asm	/^c010262d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102630	obj/kernel.asm	/^c0102630:	50                   	push   %eax$/;"	l
c0102631	obj/kernel.asm	/^c0102631:	68 00 ba 10 c0       	push   $0xc010ba00$/;"	l
c0102636	obj/kernel.asm	/^c0102636:	e8 3a dc ff ff       	call   c0100275 <cprintf>$/;"	l
c010263b	obj/kernel.asm	/^c010263b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010263e	obj/kernel.asm	/^c010263e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102641	obj/kernel.asm	/^c0102641:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0102644	obj/kernel.asm	/^c0102644:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102647	obj/kernel.asm	/^c0102647:	50                   	push   %eax$/;"	l
c0102648	obj/kernel.asm	/^c0102648:	68 0f ba 10 c0       	push   $0xc010ba0f$/;"	l
c010264d	obj/kernel.asm	/^c010264d:	e8 23 dc ff ff       	call   c0100275 <cprintf>$/;"	l
c0102652	obj/kernel.asm	/^c0102652:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102655	obj/kernel.asm	/^c0102655:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102658	obj/kernel.asm	/^c0102658:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010265b	obj/kernel.asm	/^c010265b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010265e	obj/kernel.asm	/^c010265e:	50                   	push   %eax$/;"	l
c010265f	obj/kernel.asm	/^c010265f:	68 1e ba 10 c0       	push   $0xc010ba1e$/;"	l
c0102664	obj/kernel.asm	/^c0102664:	e8 0c dc ff ff       	call   c0100275 <cprintf>$/;"	l
c0102669	obj/kernel.asm	/^c0102669:	83 c4 10             	add    $0x10,%esp$/;"	l
c010266c	obj/kernel.asm	/^c010266c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010266f	obj/kernel.asm	/^c010266f:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0102672	obj/kernel.asm	/^c0102672:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102675	obj/kernel.asm	/^c0102675:	50                   	push   %eax$/;"	l
c0102676	obj/kernel.asm	/^c0102676:	68 2d ba 10 c0       	push   $0xc010ba2d$/;"	l
c010267b	obj/kernel.asm	/^c010267b:	e8 f5 db ff ff       	call   c0100275 <cprintf>$/;"	l
c0102680	obj/kernel.asm	/^c0102680:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102683	obj/kernel.asm	/^c0102683:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102686	obj/kernel.asm	/^c0102686:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0102689	obj/kernel.asm	/^c0102689:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010268c	obj/kernel.asm	/^c010268c:	50                   	push   %eax$/;"	l
c010268d	obj/kernel.asm	/^c010268d:	68 3c ba 10 c0       	push   $0xc010ba3c$/;"	l
c0102692	obj/kernel.asm	/^c0102692:	e8 de db ff ff       	call   c0100275 <cprintf>$/;"	l
c0102697	obj/kernel.asm	/^c0102697:	83 c4 10             	add    $0x10,%esp$/;"	l
c010269a	obj/kernel.asm	/^c010269a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010269d	obj/kernel.asm	/^c010269d:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01026a0	obj/kernel.asm	/^c01026a0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01026a3	obj/kernel.asm	/^c01026a3:	50                   	push   %eax$/;"	l
c01026a4	obj/kernel.asm	/^c01026a4:	68 4b ba 10 c0       	push   $0xc010ba4b$/;"	l
c01026a9	obj/kernel.asm	/^c01026a9:	e8 c7 db ff ff       	call   c0100275 <cprintf>$/;"	l
c01026ae	obj/kernel.asm	/^c01026ae:	83 c4 10             	add    $0x10,%esp$/;"	l
c01026b1	obj/kernel.asm	/^c01026b1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026b4	obj/kernel.asm	/^c01026b4:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01026b7	obj/kernel.asm	/^c01026b7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01026ba	obj/kernel.asm	/^c01026ba:	50                   	push   %eax$/;"	l
c01026bb	obj/kernel.asm	/^c01026bb:	68 5a ba 10 c0       	push   $0xc010ba5a$/;"	l
c01026c0	obj/kernel.asm	/^c01026c0:	e8 b0 db ff ff       	call   c0100275 <cprintf>$/;"	l
c01026c5	obj/kernel.asm	/^c01026c5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01026c8	obj/kernel.asm	/^c01026c8:	c9                   	leave  $/;"	l
c01026c9	obj/kernel.asm	/^c01026c9:	c3                   	ret    $/;"	l
c01026ca	obj/kernel.asm	/^c01026ca <print_pgfault>:$/;"	l
c01026ca	obj/kernel.asm	/^c01026ca:	55                   	push   %ebp$/;"	l
c01026cb	obj/kernel.asm	/^c01026cb:	89 e5                	mov    %esp,%ebp$/;"	l
c01026cd	obj/kernel.asm	/^c01026cd:	53                   	push   %ebx$/;"	l
c01026ce	obj/kernel.asm	/^c01026ce:	83 ec 14             	sub    $0x14,%esp$/;"	l
c01026d1	obj/kernel.asm	/^c01026d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026d4	obj/kernel.asm	/^c01026d4:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01026d7	obj/kernel.asm	/^c01026d7:	83 e0 01             	and    $0x1,%eax$/;"	l
c01026da	obj/kernel.asm	/^c01026da:	85 c0                	test   %eax,%eax$/;"	l
c01026dc	obj/kernel.asm	/^c01026dc:	74 07                	je     c01026e5 <print_pgfault+0x1b>$/;"	l
c01026de	obj/kernel.asm	/^c01026de:	bb 69 ba 10 c0       	mov    $0xc010ba69,%ebx$/;"	l
c01026e3	obj/kernel.asm	/^c01026e3:	eb 05                	jmp    c01026ea <print_pgfault+0x20>$/;"	l
c01026e5	obj/kernel.asm	/^c01026e5:	bb 7a ba 10 c0       	mov    $0xc010ba7a,%ebx$/;"	l
c01026ea	obj/kernel.asm	/^c01026ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026ed	obj/kernel.asm	/^c01026ed:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01026f0	obj/kernel.asm	/^c01026f0:	83 e0 02             	and    $0x2,%eax$/;"	l
c01026f3	obj/kernel.asm	/^c01026f3:	85 c0                	test   %eax,%eax$/;"	l
c01026f5	obj/kernel.asm	/^c01026f5:	74 07                	je     c01026fe <print_pgfault+0x34>$/;"	l
c01026f7	obj/kernel.asm	/^c01026f7:	b9 57 00 00 00       	mov    $0x57,%ecx$/;"	l
c01026fc	obj/kernel.asm	/^c01026fc:	eb 05                	jmp    c0102703 <print_pgfault+0x39>$/;"	l
c01026fe	obj/kernel.asm	/^c01026fe:	b9 52 00 00 00       	mov    $0x52,%ecx$/;"	l
c0102703	obj/kernel.asm	/^c0102703:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102706	obj/kernel.asm	/^c0102706:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0102709	obj/kernel.asm	/^c0102709:	83 e0 04             	and    $0x4,%eax$/;"	l
c010270c	obj/kernel.asm	/^c010270c:	85 c0                	test   %eax,%eax$/;"	l
c010270e	obj/kernel.asm	/^c010270e:	74 07                	je     c0102717 <print_pgfault+0x4d>$/;"	l
c0102710	obj/kernel.asm	/^c0102710:	ba 55 00 00 00       	mov    $0x55,%edx$/;"	l
c0102715	obj/kernel.asm	/^c0102715:	eb 05                	jmp    c010271c <print_pgfault+0x52>$/;"	l
c0102717	obj/kernel.asm	/^c0102717:	ba 4b 00 00 00       	mov    $0x4b,%edx$/;"	l
c010271c	obj/kernel.asm	/^c010271c:	0f 20 d0             	mov    %cr2,%eax$/;"	l
c010271f	obj/kernel.asm	/^c010271f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102722	obj/kernel.asm	/^c0102722:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102725	obj/kernel.asm	/^c0102725:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102728	obj/kernel.asm	/^c0102728:	53                   	push   %ebx$/;"	l
c0102729	obj/kernel.asm	/^c0102729:	51                   	push   %ecx$/;"	l
c010272a	obj/kernel.asm	/^c010272a:	52                   	push   %edx$/;"	l
c010272b	obj/kernel.asm	/^c010272b:	50                   	push   %eax$/;"	l
c010272c	obj/kernel.asm	/^c010272c:	68 88 ba 10 c0       	push   $0xc010ba88$/;"	l
c0102731	obj/kernel.asm	/^c0102731:	e8 3f db ff ff       	call   c0100275 <cprintf>$/;"	l
c0102736	obj/kernel.asm	/^c0102736:	83 c4 20             	add    $0x20,%esp$/;"	l
c0102739	obj/kernel.asm	/^c0102739:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c010273c	obj/kernel.asm	/^c010273c:	c9                   	leave  $/;"	l
c010273d	obj/kernel.asm	/^c010273d:	c3                   	ret    $/;"	l
c010273e	obj/kernel.asm	/^c010273e <pgfault_handler>:$/;"	l
c010273e	obj/kernel.asm	/^c010273e:	55                   	push   %ebp$/;"	l
c010273f	obj/kernel.asm	/^c010273f:	89 e5                	mov    %esp,%ebp$/;"	l
c0102741	obj/kernel.asm	/^c0102741:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102744	obj/kernel.asm	/^c0102744:	a1 9c e0 19 c0       	mov    0xc019e09c,%eax$/;"	l
c0102749	obj/kernel.asm	/^c0102749:	85 c0                	test   %eax,%eax$/;"	l
c010274b	obj/kernel.asm	/^c010274b:	74 0e                	je     c010275b <pgfault_handler+0x1d>$/;"	l
c010274d	obj/kernel.asm	/^c010274d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102750	obj/kernel.asm	/^c0102750:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102753	obj/kernel.asm	/^c0102753:	e8 72 ff ff ff       	call   c01026ca <print_pgfault>$/;"	l
c0102758	obj/kernel.asm	/^c0102758:	83 c4 10             	add    $0x10,%esp$/;"	l
c010275b	obj/kernel.asm	/^c010275b:	a1 9c e0 19 c0       	mov    0xc019e09c,%eax$/;"	l
c0102760	obj/kernel.asm	/^c0102760:	85 c0                	test   %eax,%eax$/;"	l
c0102762	obj/kernel.asm	/^c0102762:	74 32                	je     c0102796 <pgfault_handler+0x58>$/;"	l
c0102764	obj/kernel.asm	/^c0102764:	8b 15 c8 bf 19 c0    	mov    0xc019bfc8,%edx$/;"	l
c010276a	obj/kernel.asm	/^c010276a:	a1 c0 bf 19 c0       	mov    0xc019bfc0,%eax$/;"	l
c010276f	obj/kernel.asm	/^c010276f:	39 c2                	cmp    %eax,%edx$/;"	l
c0102771	obj/kernel.asm	/^c0102771:	74 19                	je     c010278c <pgfault_handler+0x4e>$/;"	l
c0102773	obj/kernel.asm	/^c0102773:	68 ab ba 10 c0       	push   $0xc010baab$/;"	l
c0102778	obj/kernel.asm	/^c0102778:	68 bf ba 10 c0       	push   $0xc010babf$/;"	l
c010277d	obj/kernel.asm	/^c010277d:	68 bb 00 00 00       	push   $0xbb$/;"	l
c0102782	obj/kernel.asm	/^c0102782:	68 ae b8 10 c0       	push   $0xc010b8ae$/;"	l
c0102787	obj/kernel.asm	/^c0102787:	e8 4e dc ff ff       	call   c01003da <__panic>$/;"	l
c010278c	obj/kernel.asm	/^c010278c:	a1 9c e0 19 c0       	mov    0xc019e09c,%eax$/;"	l
c0102791	obj/kernel.asm	/^c0102791:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102794	obj/kernel.asm	/^c0102794:	eb 47                	jmp    c01027dd <pgfault_handler+0x9f>$/;"	l
c0102796	obj/kernel.asm	/^c0102796:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010279b	obj/kernel.asm	/^c010279b:	85 c0                	test   %eax,%eax$/;"	l
c010279d	obj/kernel.asm	/^c010279d:	75 33                	jne    c01027d2 <pgfault_handler+0x94>$/;"	l
c010279f	obj/kernel.asm	/^c010279f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01027a2	obj/kernel.asm	/^c01027a2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01027a5	obj/kernel.asm	/^c01027a5:	e8 85 fc ff ff       	call   c010242f <print_trapframe>$/;"	l
c01027aa	obj/kernel.asm	/^c01027aa:	83 c4 10             	add    $0x10,%esp$/;"	l
c01027ad	obj/kernel.asm	/^c01027ad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01027b0	obj/kernel.asm	/^c01027b0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01027b3	obj/kernel.asm	/^c01027b3:	e8 12 ff ff ff       	call   c01026ca <print_pgfault>$/;"	l
c01027b8	obj/kernel.asm	/^c01027b8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01027bb	obj/kernel.asm	/^c01027bb:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01027be	obj/kernel.asm	/^c01027be:	68 d4 ba 10 c0       	push   $0xc010bad4$/;"	l
c01027c3	obj/kernel.asm	/^c01027c3:	68 c2 00 00 00       	push   $0xc2$/;"	l
c01027c8	obj/kernel.asm	/^c01027c8:	68 ae b8 10 c0       	push   $0xc010b8ae$/;"	l
c01027cd	obj/kernel.asm	/^c01027cd:	e8 08 dc ff ff       	call   c01003da <__panic>$/;"	l
c01027d2	obj/kernel.asm	/^c01027d2:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c01027d7	obj/kernel.asm	/^c01027d7:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01027da	obj/kernel.asm	/^c01027da:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01027dd	obj/kernel.asm	/^c01027dd:	0f 20 d0             	mov    %cr2,%eax$/;"	l
c01027e0	obj/kernel.asm	/^c01027e0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01027e3	obj/kernel.asm	/^c01027e3:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01027e6	obj/kernel.asm	/^c01027e6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01027e9	obj/kernel.asm	/^c01027e9:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01027ec	obj/kernel.asm	/^c01027ec:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01027ef	obj/kernel.asm	/^c01027ef:	52                   	push   %edx$/;"	l
c01027f0	obj/kernel.asm	/^c01027f0:	50                   	push   %eax$/;"	l
c01027f1	obj/kernel.asm	/^c01027f1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01027f4	obj/kernel.asm	/^c01027f4:	e8 b6 37 00 00       	call   c0105faf <do_pgfault>$/;"	l
c01027f9	obj/kernel.asm	/^c01027f9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01027fc	obj/kernel.asm	/^c01027fc:	c9                   	leave  $/;"	l
c01027fd	obj/kernel.asm	/^c01027fd:	c3                   	ret    $/;"	l
c01027fe	obj/kernel.asm	/^c01027fe <trap_dispatch>:$/;"	l
c01027fe	obj/kernel.asm	/^c01027fe:	55                   	push   %ebp$/;"	l
c01027ff	obj/kernel.asm	/^c01027ff:	89 e5                	mov    %esp,%ebp$/;"	l
c0102801	obj/kernel.asm	/^c0102801:	57                   	push   %edi$/;"	l
c0102802	obj/kernel.asm	/^c0102802:	56                   	push   %esi$/;"	l
c0102803	obj/kernel.asm	/^c0102803:	53                   	push   %ebx$/;"	l
c0102804	obj/kernel.asm	/^c0102804:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
c0102807	obj/kernel.asm	/^c0102807:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010280a	obj/kernel.asm	/^c010280a:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010280d	obj/kernel.asm	/^c010280d:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
c0102810	obj/kernel.asm	/^c0102810:	77 38                	ja     c010284a <trap_dispatch+0x4c>$/;"	l
c0102812	obj/kernel.asm	/^c0102812:	83 f8 2e             	cmp    $0x2e,%eax$/;"	l
c0102815	obj/kernel.asm	/^c0102815:	0f 83 13 03 00 00    	jae    c0102b2e <trap_dispatch+0x330>$/;"	l
c010281b	obj/kernel.asm	/^c010281b:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c010281e	obj/kernel.asm	/^c010281e:	0f 84 ec 00 00 00    	je     c0102910 <trap_dispatch+0x112>$/;"	l
c0102824	obj/kernel.asm	/^c0102824:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c0102827	obj/kernel.asm	/^c0102827:	77 0a                	ja     c0102833 <trap_dispatch+0x35>$/;"	l
c0102829	obj/kernel.asm	/^c0102829:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
c010282c	obj/kernel.asm	/^c010282c:	74 3e                	je     c010286c <trap_dispatch+0x6e>$/;"	l
c010282e	obj/kernel.asm	/^c010282e:	e9 b0 02 00 00       	jmp    c0102ae3 <trap_dispatch+0x2e5>$/;"	l
c0102833	obj/kernel.asm	/^c0102833:	83 f8 21             	cmp    $0x21,%eax$/;"	l
c0102836	obj/kernel.asm	/^c0102836:	0f 84 2b 01 00 00    	je     c0102967 <trap_dispatch+0x169>$/;"	l
c010283c	obj/kernel.asm	/^c010283c:	83 f8 24             	cmp    $0x24,%eax$/;"	l
c010283f	obj/kernel.asm	/^c010283f:	0f 84 fb 00 00 00    	je     c0102940 <trap_dispatch+0x142>$/;"	l
c0102845	obj/kernel.asm	/^c0102845:	e9 99 02 00 00       	jmp    c0102ae3 <trap_dispatch+0x2e5>$/;"	l
c010284a	obj/kernel.asm	/^c010284a:	83 f8 79             	cmp    $0x79,%eax$/;"	l
c010284d	obj/kernel.asm	/^c010284d:	0f 84 f6 01 00 00    	je     c0102a49 <trap_dispatch+0x24b>$/;"	l
c0102853	obj/kernel.asm	/^c0102853:	3d 80 00 00 00       	cmp    $0x80,%eax$/;"	l
c0102858	obj/kernel.asm	/^c0102858:	0f 84 a8 00 00 00    	je     c0102906 <trap_dispatch+0x108>$/;"	l
c010285e	obj/kernel.asm	/^c010285e:	83 f8 78             	cmp    $0x78,%eax$/;"	l
c0102861	obj/kernel.asm	/^c0102861:	0f 84 27 01 00 00    	je     c010298e <trap_dispatch+0x190>$/;"	l
c0102867	obj/kernel.asm	/^c0102867:	e9 77 02 00 00       	jmp    c0102ae3 <trap_dispatch+0x2e5>$/;"	l
c010286c	obj/kernel.asm	/^c010286c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010286f	obj/kernel.asm	/^c010286f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102872	obj/kernel.asm	/^c0102872:	e8 c7 fe ff ff       	call   c010273e <pgfault_handler>$/;"	l
c0102877	obj/kernel.asm	/^c0102877:	83 c4 10             	add    $0x10,%esp$/;"	l
c010287a	obj/kernel.asm	/^c010287a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010287d	obj/kernel.asm	/^c010287d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0102881	obj/kernel.asm	/^c0102881:	74 7e                	je     c0102901 <trap_dispatch+0x103>$/;"	l
c0102883	obj/kernel.asm	/^c0102883:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102886	obj/kernel.asm	/^c0102886:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102889	obj/kernel.asm	/^c0102889:	e8 a1 fb ff ff       	call   c010242f <print_trapframe>$/;"	l
c010288e	obj/kernel.asm	/^c010288e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102891	obj/kernel.asm	/^c0102891:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0102896	obj/kernel.asm	/^c0102896:	85 c0                	test   %eax,%eax$/;"	l
c0102898	obj/kernel.asm	/^c0102898:	75 17                	jne    c01028b1 <trap_dispatch+0xb3>$/;"	l
c010289a	obj/kernel.asm	/^c010289a:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c010289d	obj/kernel.asm	/^c010289d:	68 ec ba 10 c0       	push   $0xc010baec$/;"	l
c01028a2	obj/kernel.asm	/^c01028a2:	68 d7 00 00 00       	push   $0xd7$/;"	l
c01028a7	obj/kernel.asm	/^c01028a7:	68 ae b8 10 c0       	push   $0xc010b8ae$/;"	l
c01028ac	obj/kernel.asm	/^c01028ac:	e8 29 db ff ff       	call   c01003da <__panic>$/;"	l
c01028b1	obj/kernel.asm	/^c01028b1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01028b4	obj/kernel.asm	/^c01028b4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01028b7	obj/kernel.asm	/^c01028b7:	e8 5d fb ff ff       	call   c0102419 <trap_in_kernel>$/;"	l
c01028bc	obj/kernel.asm	/^c01028bc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01028bf	obj/kernel.asm	/^c01028bf:	85 c0                	test   %eax,%eax$/;"	l
c01028c1	obj/kernel.asm	/^c01028c1:	74 17                	je     c01028da <trap_dispatch+0xdc>$/;"	l
c01028c3	obj/kernel.asm	/^c01028c3:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01028c6	obj/kernel.asm	/^c01028c6:	68 0c bb 10 c0       	push   $0xc010bb0c$/;"	l
c01028cb	obj/kernel.asm	/^c01028cb:	68 db 00 00 00       	push   $0xdb$/;"	l
c01028d0	obj/kernel.asm	/^c01028d0:	68 ae b8 10 c0       	push   $0xc010b8ae$/;"	l
c01028d5	obj/kernel.asm	/^c01028d5:	e8 00 db ff ff       	call   c01003da <__panic>$/;"	l
c01028da	obj/kernel.asm	/^c01028da:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01028dd	obj/kernel.asm	/^c01028dd:	68 3a bb 10 c0       	push   $0xc010bb3a$/;"	l
c01028e2	obj/kernel.asm	/^c01028e2:	e8 8e d9 ff ff       	call   c0100275 <cprintf>$/;"	l
c01028e7	obj/kernel.asm	/^c01028e7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01028ea	obj/kernel.asm	/^c01028ea:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01028ed	obj/kernel.asm	/^c01028ed:	68 50 bb 10 c0       	push   $0xc010bb50$/;"	l
c01028f2	obj/kernel.asm	/^c01028f2:	68 de 00 00 00       	push   $0xde$/;"	l
c01028f7	obj/kernel.asm	/^c01028f7:	68 ae b8 10 c0       	push   $0xc010b8ae$/;"	l
c01028fc	obj/kernel.asm	/^c01028fc:	e8 d9 da ff ff       	call   c01003da <__panic>$/;"	l
c0102901	obj/kernel.asm	/^c0102901:	e9 29 02 00 00       	jmp    c0102b2f <trap_dispatch+0x331>$/;"	l
c0102906	obj/kernel.asm	/^c0102906:	e8 a5 7e 00 00       	call   c010a7b0 <syscall>$/;"	l
c010290b	obj/kernel.asm	/^c010290b:	e9 1f 02 00 00       	jmp    c0102b2f <trap_dispatch+0x331>$/;"	l
c0102910	obj/kernel.asm	/^c0102910:	a1 c4 be 19 c0       	mov    0xc019bec4,%eax$/;"	l
c0102915	obj/kernel.asm	/^c0102915:	83 c0 01             	add    $0x1,%eax$/;"	l
c0102918	obj/kernel.asm	/^c0102918:	a3 c4 be 19 c0       	mov    %eax,0xc019bec4$/;"	l
c010291d	obj/kernel.asm	/^c010291d:	a1 c4 be 19 c0       	mov    0xc019bec4,%eax$/;"	l
c0102922	obj/kernel.asm	/^c0102922:	83 f8 64             	cmp    $0x64,%eax$/;"	l
c0102925	obj/kernel.asm	/^c0102925:	75 14                	jne    c010293b <trap_dispatch+0x13d>$/;"	l
c0102927	obj/kernel.asm	/^c0102927:	e8 77 f7 ff ff       	call   c01020a3 <print_ticks>$/;"	l
c010292c	obj/kernel.asm	/^c010292c:	c7 05 c4 be 19 c0 00 	movl   $0x0,0xc019bec4$/;"	l
c0102933	obj/kernel.asm	/^c0102933:	00 00 00 $/;"	l
c0102936	obj/kernel.asm	/^c0102936:	e9 f4 01 00 00       	jmp    c0102b2f <trap_dispatch+0x331>$/;"	l
c010293b	obj/kernel.asm	/^c010293b:	e9 ef 01 00 00       	jmp    c0102b2f <trap_dispatch+0x331>$/;"	l
c0102940	obj/kernel.asm	/^c0102940:	e8 20 f5 ff ff       	call   c0101e65 <cons_getc>$/;"	l
c0102945	obj/kernel.asm	/^c0102945:	88 45 e3             	mov    %al,-0x1d(%ebp)$/;"	l
c0102948	obj/kernel.asm	/^c0102948:	0f be 55 e3          	movsbl -0x1d(%ebp),%edx$/;"	l
c010294c	obj/kernel.asm	/^c010294c:	0f be 45 e3          	movsbl -0x1d(%ebp),%eax$/;"	l
c0102950	obj/kernel.asm	/^c0102950:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0102953	obj/kernel.asm	/^c0102953:	52                   	push   %edx$/;"	l
c0102954	obj/kernel.asm	/^c0102954:	50                   	push   %eax$/;"	l
c0102955	obj/kernel.asm	/^c0102955:	68 79 bb 10 c0       	push   $0xc010bb79$/;"	l
c010295a	obj/kernel.asm	/^c010295a:	e8 16 d9 ff ff       	call   c0100275 <cprintf>$/;"	l
c010295f	obj/kernel.asm	/^c010295f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102962	obj/kernel.asm	/^c0102962:	e9 c8 01 00 00       	jmp    c0102b2f <trap_dispatch+0x331>$/;"	l
c0102967	obj/kernel.asm	/^c0102967:	e8 f9 f4 ff ff       	call   c0101e65 <cons_getc>$/;"	l
c010296c	obj/kernel.asm	/^c010296c:	88 45 e3             	mov    %al,-0x1d(%ebp)$/;"	l
c010296f	obj/kernel.asm	/^c010296f:	0f be 55 e3          	movsbl -0x1d(%ebp),%edx$/;"	l
c0102973	obj/kernel.asm	/^c0102973:	0f be 45 e3          	movsbl -0x1d(%ebp),%eax$/;"	l
c0102977	obj/kernel.asm	/^c0102977:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010297a	obj/kernel.asm	/^c010297a:	52                   	push   %edx$/;"	l
c010297b	obj/kernel.asm	/^c010297b:	50                   	push   %eax$/;"	l
c010297c	obj/kernel.asm	/^c010297c:	68 8b bb 10 c0       	push   $0xc010bb8b$/;"	l
c0102981	obj/kernel.asm	/^c0102981:	e8 ef d8 ff ff       	call   c0100275 <cprintf>$/;"	l
c0102986	obj/kernel.asm	/^c0102986:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102989	obj/kernel.asm	/^c0102989:	e9 a1 01 00 00       	jmp    c0102b2f <trap_dispatch+0x331>$/;"	l
c010298e	obj/kernel.asm	/^c010298e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102991	obj/kernel.asm	/^c0102991:	68 9a bb 10 c0       	push   $0xc010bb9a$/;"	l
c0102996	obj/kernel.asm	/^c0102996:	e8 da d8 ff ff       	call   c0100275 <cprintf>$/;"	l
c010299b	obj/kernel.asm	/^c010299b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010299e	obj/kernel.asm	/^c010299e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01029a1	obj/kernel.asm	/^c01029a1:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c01029a5	obj/kernel.asm	/^c01029a5:	66 83 f8 1b          	cmp    $0x1b,%ax$/;"	l
c01029a9	obj/kernel.asm	/^c01029a9:	0f 84 95 00 00 00    	je     c0102a44 <trap_dispatch+0x246>$/;"	l
c01029af	obj/kernel.asm	/^c01029af:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01029b2	obj/kernel.asm	/^c01029b2:	b8 40 e0 19 c0       	mov    $0xc019e040,%eax$/;"	l
c01029b7	obj/kernel.asm	/^c01029b7:	89 d3                	mov    %edx,%ebx$/;"	l
c01029b9	obj/kernel.asm	/^c01029b9:	ba 4c 00 00 00       	mov    $0x4c,%edx$/;"	l
c01029be	obj/kernel.asm	/^c01029be:	8b 0b                	mov    (%ebx),%ecx$/;"	l
c01029c0	obj/kernel.asm	/^c01029c0:	89 08                	mov    %ecx,(%eax)$/;"	l
c01029c2	obj/kernel.asm	/^c01029c2:	8b 4c 13 fc          	mov    -0x4(%ebx,%edx,1),%ecx$/;"	l
c01029c6	obj/kernel.asm	/^c01029c6:	89 4c 10 fc          	mov    %ecx,-0x4(%eax,%edx,1)$/;"	l
c01029ca	obj/kernel.asm	/^c01029ca:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
c01029cd	obj/kernel.asm	/^c01029cd:	83 e7 fc             	and    $0xfffffffc,%edi$/;"	l
c01029d0	obj/kernel.asm	/^c01029d0:	29 f8                	sub    %edi,%eax$/;"	l
c01029d2	obj/kernel.asm	/^c01029d2:	29 c3                	sub    %eax,%ebx$/;"	l
c01029d4	obj/kernel.asm	/^c01029d4:	01 c2                	add    %eax,%edx$/;"	l
c01029d6	obj/kernel.asm	/^c01029d6:	83 e2 fc             	and    $0xfffffffc,%edx$/;"	l
c01029d9	obj/kernel.asm	/^c01029d9:	89 d0                	mov    %edx,%eax$/;"	l
c01029db	obj/kernel.asm	/^c01029db:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c01029de	obj/kernel.asm	/^c01029de:	89 de                	mov    %ebx,%esi$/;"	l
c01029e0	obj/kernel.asm	/^c01029e0:	89 c1                	mov    %eax,%ecx$/;"	l
c01029e2	obj/kernel.asm	/^c01029e2:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c01029e4	obj/kernel.asm	/^c01029e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01029e7	obj/kernel.asm	/^c01029e7:	83 c0 44             	add    $0x44,%eax$/;"	l
c01029ea	obj/kernel.asm	/^c01029ea:	a3 84 e0 19 c0       	mov    %eax,0xc019e084$/;"	l
c01029ef	obj/kernel.asm	/^c01029ef:	66 c7 05 7c e0 19 c0 	movw   $0x1b,0xc019e07c$/;"	l
c01029f6	obj/kernel.asm	/^c01029f6:	1b 00 $/;"	l
c01029f8	obj/kernel.asm	/^c01029f8:	66 c7 05 6c e0 19 c0 	movw   $0x23,0xc019e06c$/;"	l
c01029ff	obj/kernel.asm	/^c01029ff:	23 00 $/;"	l
c0102a01	obj/kernel.asm	/^c0102a01:	66 c7 05 88 e0 19 c0 	movw   $0x23,0xc019e088$/;"	l
c0102a08	obj/kernel.asm	/^c0102a08:	23 00 $/;"	l
c0102a0a	obj/kernel.asm	/^c0102a0a:	66 c7 05 68 e0 19 c0 	movw   $0x23,0xc019e068$/;"	l
c0102a11	obj/kernel.asm	/^c0102a11:	23 00 $/;"	l
c0102a13	obj/kernel.asm	/^c0102a13:	66 c7 05 64 e0 19 c0 	movw   $0x23,0xc019e064$/;"	l
c0102a1a	obj/kernel.asm	/^c0102a1a:	23 00 $/;"	l
c0102a1c	obj/kernel.asm	/^c0102a1c:	66 c7 05 60 e0 19 c0 	movw   $0x23,0xc019e060$/;"	l
c0102a23	obj/kernel.asm	/^c0102a23:	23 00 $/;"	l
c0102a25	obj/kernel.asm	/^c0102a25:	a1 80 e0 19 c0       	mov    0xc019e080,%eax$/;"	l
c0102a2a	obj/kernel.asm	/^c0102a2a:	80 cc 30             	or     $0x30,%ah$/;"	l
c0102a2d	obj/kernel.asm	/^c0102a2d:	a3 80 e0 19 c0       	mov    %eax,0xc019e080$/;"	l
c0102a32	obj/kernel.asm	/^c0102a32:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a35	obj/kernel.asm	/^c0102a35:	83 e8 04             	sub    $0x4,%eax$/;"	l
c0102a38	obj/kernel.asm	/^c0102a38:	ba 40 e0 19 c0       	mov    $0xc019e040,%edx$/;"	l
c0102a3d	obj/kernel.asm	/^c0102a3d:	89 10                	mov    %edx,(%eax)$/;"	l
c0102a3f	obj/kernel.asm	/^c0102a3f:	e9 eb 00 00 00       	jmp    c0102b2f <trap_dispatch+0x331>$/;"	l
c0102a44	obj/kernel.asm	/^c0102a44:	e9 e6 00 00 00       	jmp    c0102b2f <trap_dispatch+0x331>$/;"	l
c0102a49	obj/kernel.asm	/^c0102a49:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102a4c	obj/kernel.asm	/^c0102a4c:	68 a8 bb 10 c0       	push   $0xc010bba8$/;"	l
c0102a51	obj/kernel.asm	/^c0102a51:	e8 1f d8 ff ff       	call   c0100275 <cprintf>$/;"	l
c0102a56	obj/kernel.asm	/^c0102a56:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102a59	obj/kernel.asm	/^c0102a59:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a5c	obj/kernel.asm	/^c0102a5c:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c0102a60	obj/kernel.asm	/^c0102a60:	66 83 f8 08          	cmp    $0x8,%ax$/;"	l
c0102a64	obj/kernel.asm	/^c0102a64:	74 7b                	je     c0102ae1 <trap_dispatch+0x2e3>$/;"	l
c0102a66	obj/kernel.asm	/^c0102a66:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a69	obj/kernel.asm	/^c0102a69:	66 c7 40 3c 08 00    	movw   $0x8,0x3c(%eax)$/;"	l
c0102a6f	obj/kernel.asm	/^c0102a6f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a72	obj/kernel.asm	/^c0102a72:	66 c7 40 2c 10 00    	movw   $0x10,0x2c(%eax)$/;"	l
c0102a78	obj/kernel.asm	/^c0102a78:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a7b	obj/kernel.asm	/^c0102a7b:	66 c7 40 48 10 00    	movw   $0x10,0x48(%eax)$/;"	l
c0102a81	obj/kernel.asm	/^c0102a81:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a84	obj/kernel.asm	/^c0102a84:	66 c7 40 28 10 00    	movw   $0x10,0x28(%eax)$/;"	l
c0102a8a	obj/kernel.asm	/^c0102a8a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a8d	obj/kernel.asm	/^c0102a8d:	66 c7 40 24 10 00    	movw   $0x10,0x24(%eax)$/;"	l
c0102a93	obj/kernel.asm	/^c0102a93:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a96	obj/kernel.asm	/^c0102a96:	66 c7 40 20 10 00    	movw   $0x10,0x20(%eax)$/;"	l
c0102a9c	obj/kernel.asm	/^c0102a9c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a9f	obj/kernel.asm	/^c0102a9f:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c0102aa2	obj/kernel.asm	/^c0102aa2:	80 e4 cf             	and    $0xcf,%ah$/;"	l
c0102aa5	obj/kernel.asm	/^c0102aa5:	89 c2                	mov    %eax,%edx$/;"	l
c0102aa7	obj/kernel.asm	/^c0102aa7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102aaa	obj/kernel.asm	/^c0102aaa:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c0102aad	obj/kernel.asm	/^c0102aad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102ab0	obj/kernel.asm	/^c0102ab0:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c0102ab3	obj/kernel.asm	/^c0102ab3:	83 e8 44             	sub    $0x44,%eax$/;"	l
c0102ab6	obj/kernel.asm	/^c0102ab6:	a3 8c e0 19 c0       	mov    %eax,0xc019e08c$/;"	l
c0102abb	obj/kernel.asm	/^c0102abb:	a1 8c e0 19 c0       	mov    0xc019e08c,%eax$/;"	l
c0102ac0	obj/kernel.asm	/^c0102ac0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0102ac3	obj/kernel.asm	/^c0102ac3:	6a 44                	push   $0x44$/;"	l
c0102ac5	obj/kernel.asm	/^c0102ac5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102ac8	obj/kernel.asm	/^c0102ac8:	50                   	push   %eax$/;"	l
c0102ac9	obj/kernel.asm	/^c0102ac9:	e8 0e 81 00 00       	call   c010abdc <memmove>$/;"	l
c0102ace	obj/kernel.asm	/^c0102ace:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102ad1	obj/kernel.asm	/^c0102ad1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102ad4	obj/kernel.asm	/^c0102ad4:	83 e8 04             	sub    $0x4,%eax$/;"	l
c0102ad7	obj/kernel.asm	/^c0102ad7:	8b 15 8c e0 19 c0    	mov    0xc019e08c,%edx$/;"	l
c0102add	obj/kernel.asm	/^c0102add:	89 10                	mov    %edx,(%eax)$/;"	l
c0102adf	obj/kernel.asm	/^c0102adf:	eb 4e                	jmp    c0102b2f <trap_dispatch+0x331>$/;"	l
c0102ae1	obj/kernel.asm	/^c0102ae1:	eb 4c                	jmp    c0102b2f <trap_dispatch+0x331>$/;"	l
c0102ae3	obj/kernel.asm	/^c0102ae3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102ae6	obj/kernel.asm	/^c0102ae6:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102ae9	obj/kernel.asm	/^c0102ae9:	e8 41 f9 ff ff       	call   c010242f <print_trapframe>$/;"	l
c0102aee	obj/kernel.asm	/^c0102aee:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102af1	obj/kernel.asm	/^c0102af1:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0102af6	obj/kernel.asm	/^c0102af6:	85 c0                	test   %eax,%eax$/;"	l
c0102af8	obj/kernel.asm	/^c0102af8:	74 1d                	je     c0102b17 <trap_dispatch+0x319>$/;"	l
c0102afa	obj/kernel.asm	/^c0102afa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102afd	obj/kernel.asm	/^c0102afd:	68 b6 bb 10 c0       	push   $0xc010bbb6$/;"	l
c0102b02	obj/kernel.asm	/^c0102b02:	e8 6e d7 ff ff       	call   c0100275 <cprintf>$/;"	l
c0102b07	obj/kernel.asm	/^c0102b07:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102b0a	obj/kernel.asm	/^c0102b0a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102b0d	obj/kernel.asm	/^c0102b0d:	6a f7                	push   $0xfffffff7$/;"	l
c0102b0f	obj/kernel.asm	/^c0102b0f:	e8 a2 6b 00 00       	call   c01096b6 <do_exit>$/;"	l
c0102b14	obj/kernel.asm	/^c0102b14:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102b17	obj/kernel.asm	/^c0102b17:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0102b1a	obj/kernel.asm	/^c0102b1a:	68 c7 bb 10 c0       	push   $0xc010bbc7$/;"	l
c0102b1f	obj/kernel.asm	/^c0102b1f:	68 34 01 00 00       	push   $0x134$/;"	l
c0102b24	obj/kernel.asm	/^c0102b24:	68 ae b8 10 c0       	push   $0xc010b8ae$/;"	l
c0102b29	obj/kernel.asm	/^c0102b29:	e8 ac d8 ff ff       	call   c01003da <__panic>$/;"	l
c0102b2e	obj/kernel.asm	/^c0102b2e:	90                   	nop$/;"	l
c0102b2f	obj/kernel.asm	/^c0102b2f:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
c0102b32	obj/kernel.asm	/^c0102b32:	5b                   	pop    %ebx$/;"	l
c0102b33	obj/kernel.asm	/^c0102b33:	5e                   	pop    %esi$/;"	l
c0102b34	obj/kernel.asm	/^c0102b34:	5f                   	pop    %edi$/;"	l
c0102b35	obj/kernel.asm	/^c0102b35:	5d                   	pop    %ebp$/;"	l
c0102b36	obj/kernel.asm	/^c0102b36:	c3                   	ret    $/;"	l
c0102b37	obj/kernel.asm	/^c0102b37 <trap>:$/;"	l
c0102b37	obj/kernel.asm	/^c0102b37:	55                   	push   %ebp$/;"	l
c0102b38	obj/kernel.asm	/^c0102b38:	89 e5                	mov    %esp,%ebp$/;"	l
c0102b3a	obj/kernel.asm	/^c0102b3a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102b3d	obj/kernel.asm	/^c0102b3d:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0102b42	obj/kernel.asm	/^c0102b42:	85 c0                	test   %eax,%eax$/;"	l
c0102b44	obj/kernel.asm	/^c0102b44:	75 10                	jne    c0102b56 <trap+0x1f>$/;"	l
c0102b46	obj/kernel.asm	/^c0102b46:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102b49	obj/kernel.asm	/^c0102b49:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102b4c	obj/kernel.asm	/^c0102b4c:	e8 ad fc ff ff       	call   c01027fe <trap_dispatch>$/;"	l
c0102b51	obj/kernel.asm	/^c0102b51:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102b54	obj/kernel.asm	/^c0102b54:	eb 73                	jmp    c0102bc9 <trap+0x92>$/;"	l
c0102b56	obj/kernel.asm	/^c0102b56:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0102b5b	obj/kernel.asm	/^c0102b5b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0102b5e	obj/kernel.asm	/^c0102b5e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102b61	obj/kernel.asm	/^c0102b61:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0102b66	obj/kernel.asm	/^c0102b66:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0102b69	obj/kernel.asm	/^c0102b69:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0102b6c	obj/kernel.asm	/^c0102b6c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102b6f	obj/kernel.asm	/^c0102b6f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102b72	obj/kernel.asm	/^c0102b72:	e8 a2 f8 ff ff       	call   c0102419 <trap_in_kernel>$/;"	l
c0102b77	obj/kernel.asm	/^c0102b77:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102b7a	obj/kernel.asm	/^c0102b7a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0102b7d	obj/kernel.asm	/^c0102b7d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102b80	obj/kernel.asm	/^c0102b80:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102b83	obj/kernel.asm	/^c0102b83:	e8 76 fc ff ff       	call   c01027fe <trap_dispatch>$/;"	l
c0102b88	obj/kernel.asm	/^c0102b88:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102b8b	obj/kernel.asm	/^c0102b8b:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0102b90	obj/kernel.asm	/^c0102b90:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0102b93	obj/kernel.asm	/^c0102b93:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0102b96	obj/kernel.asm	/^c0102b96:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0102b9a	obj/kernel.asm	/^c0102b9a:	75 2d                	jne    c0102bc9 <trap+0x92>$/;"	l
c0102b9c	obj/kernel.asm	/^c0102b9c:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0102ba1	obj/kernel.asm	/^c0102ba1:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c0102ba4	obj/kernel.asm	/^c0102ba4:	83 e0 01             	and    $0x1,%eax$/;"	l
c0102ba7	obj/kernel.asm	/^c0102ba7:	85 c0                	test   %eax,%eax$/;"	l
c0102ba9	obj/kernel.asm	/^c0102ba9:	74 0d                	je     c0102bb8 <trap+0x81>$/;"	l
c0102bab	obj/kernel.asm	/^c0102bab:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102bae	obj/kernel.asm	/^c0102bae:	6a f7                	push   $0xfffffff7$/;"	l
c0102bb0	obj/kernel.asm	/^c0102bb0:	e8 01 6b 00 00       	call   c01096b6 <do_exit>$/;"	l
c0102bb5	obj/kernel.asm	/^c0102bb5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102bb8	obj/kernel.asm	/^c0102bb8:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0102bbd	obj/kernel.asm	/^c0102bbd:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0102bc0	obj/kernel.asm	/^c0102bc0:	85 c0                	test   %eax,%eax$/;"	l
c0102bc2	obj/kernel.asm	/^c0102bc2:	74 05                	je     c0102bc9 <trap+0x92>$/;"	l
c0102bc4	obj/kernel.asm	/^c0102bc4:	e8 f4 79 00 00       	call   c010a5bd <schedule>$/;"	l
c0102bc9	obj/kernel.asm	/^c0102bc9:	c9                   	leave  $/;"	l
c0102bca	obj/kernel.asm	/^c0102bca:	c3                   	ret    $/;"	l
c0102bcb	obj/kernel.asm	/^c0102bcb <vector0>:$/;"	l
c0102bcb	obj/kernel.asm	/^c0102bcb:	6a 00                	push   $0x0$/;"	l
c0102bcd	obj/kernel.asm	/^c0102bcd:	6a 00                	push   $0x0$/;"	l
c0102bcf	obj/kernel.asm	/^c0102bcf:	e9 67 0a 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102bd4	obj/kernel.asm	/^c0102bd4 <vector1>:$/;"	l
c0102bd4	obj/kernel.asm	/^c0102bd4:	6a 00                	push   $0x0$/;"	l
c0102bd6	obj/kernel.asm	/^c0102bd6:	6a 01                	push   $0x1$/;"	l
c0102bd8	obj/kernel.asm	/^c0102bd8:	e9 5e 0a 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102bdd	obj/kernel.asm	/^c0102bdd <vector2>:$/;"	l
c0102bdd	obj/kernel.asm	/^c0102bdd:	6a 00                	push   $0x0$/;"	l
c0102bdf	obj/kernel.asm	/^c0102bdf:	6a 02                	push   $0x2$/;"	l
c0102be1	obj/kernel.asm	/^c0102be1:	e9 55 0a 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102be6	obj/kernel.asm	/^c0102be6 <vector3>:$/;"	l
c0102be6	obj/kernel.asm	/^c0102be6:	6a 00                	push   $0x0$/;"	l
c0102be8	obj/kernel.asm	/^c0102be8:	6a 03                	push   $0x3$/;"	l
c0102bea	obj/kernel.asm	/^c0102bea:	e9 4c 0a 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102bef	obj/kernel.asm	/^c0102bef <vector4>:$/;"	l
c0102bef	obj/kernel.asm	/^c0102bef:	6a 00                	push   $0x0$/;"	l
c0102bf1	obj/kernel.asm	/^c0102bf1:	6a 04                	push   $0x4$/;"	l
c0102bf3	obj/kernel.asm	/^c0102bf3:	e9 43 0a 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102bf8	obj/kernel.asm	/^c0102bf8 <vector5>:$/;"	l
c0102bf8	obj/kernel.asm	/^c0102bf8:	6a 00                	push   $0x0$/;"	l
c0102bfa	obj/kernel.asm	/^c0102bfa:	6a 05                	push   $0x5$/;"	l
c0102bfc	obj/kernel.asm	/^c0102bfc:	e9 3a 0a 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c01	obj/kernel.asm	/^c0102c01 <vector6>:$/;"	l
c0102c01	obj/kernel.asm	/^c0102c01:	6a 00                	push   $0x0$/;"	l
c0102c03	obj/kernel.asm	/^c0102c03:	6a 06                	push   $0x6$/;"	l
c0102c05	obj/kernel.asm	/^c0102c05:	e9 31 0a 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c0a	obj/kernel.asm	/^c0102c0a <vector7>:$/;"	l
c0102c0a	obj/kernel.asm	/^c0102c0a:	6a 00                	push   $0x0$/;"	l
c0102c0c	obj/kernel.asm	/^c0102c0c:	6a 07                	push   $0x7$/;"	l
c0102c0e	obj/kernel.asm	/^c0102c0e:	e9 28 0a 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c13	obj/kernel.asm	/^c0102c13 <vector8>:$/;"	l
c0102c13	obj/kernel.asm	/^c0102c13:	6a 08                	push   $0x8$/;"	l
c0102c15	obj/kernel.asm	/^c0102c15:	e9 21 0a 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c1a	obj/kernel.asm	/^c0102c1a <vector9>:$/;"	l
c0102c1a	obj/kernel.asm	/^c0102c1a:	6a 09                	push   $0x9$/;"	l
c0102c1c	obj/kernel.asm	/^c0102c1c:	e9 1a 0a 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c21	obj/kernel.asm	/^c0102c21 <vector10>:$/;"	l
c0102c21	obj/kernel.asm	/^c0102c21:	6a 0a                	push   $0xa$/;"	l
c0102c23	obj/kernel.asm	/^c0102c23:	e9 13 0a 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c28	obj/kernel.asm	/^c0102c28 <vector11>:$/;"	l
c0102c28	obj/kernel.asm	/^c0102c28:	6a 0b                	push   $0xb$/;"	l
c0102c2a	obj/kernel.asm	/^c0102c2a:	e9 0c 0a 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c2f	obj/kernel.asm	/^c0102c2f <vector12>:$/;"	l
c0102c2f	obj/kernel.asm	/^c0102c2f:	6a 0c                	push   $0xc$/;"	l
c0102c31	obj/kernel.asm	/^c0102c31:	e9 05 0a 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c36	obj/kernel.asm	/^c0102c36 <vector13>:$/;"	l
c0102c36	obj/kernel.asm	/^c0102c36:	6a 0d                	push   $0xd$/;"	l
c0102c38	obj/kernel.asm	/^c0102c38:	e9 fe 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c3d	obj/kernel.asm	/^c0102c3d <vector14>:$/;"	l
c0102c3d	obj/kernel.asm	/^c0102c3d:	6a 0e                	push   $0xe$/;"	l
c0102c3f	obj/kernel.asm	/^c0102c3f:	e9 f7 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c44	obj/kernel.asm	/^c0102c44 <vector15>:$/;"	l
c0102c44	obj/kernel.asm	/^c0102c44:	6a 00                	push   $0x0$/;"	l
c0102c46	obj/kernel.asm	/^c0102c46:	6a 0f                	push   $0xf$/;"	l
c0102c48	obj/kernel.asm	/^c0102c48:	e9 ee 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c4d	obj/kernel.asm	/^c0102c4d <vector16>:$/;"	l
c0102c4d	obj/kernel.asm	/^c0102c4d:	6a 00                	push   $0x0$/;"	l
c0102c4f	obj/kernel.asm	/^c0102c4f:	6a 10                	push   $0x10$/;"	l
c0102c51	obj/kernel.asm	/^c0102c51:	e9 e5 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c56	obj/kernel.asm	/^c0102c56 <vector17>:$/;"	l
c0102c56	obj/kernel.asm	/^c0102c56:	6a 11                	push   $0x11$/;"	l
c0102c58	obj/kernel.asm	/^c0102c58:	e9 de 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c5d	obj/kernel.asm	/^c0102c5d <vector18>:$/;"	l
c0102c5d	obj/kernel.asm	/^c0102c5d:	6a 00                	push   $0x0$/;"	l
c0102c5f	obj/kernel.asm	/^c0102c5f:	6a 12                	push   $0x12$/;"	l
c0102c61	obj/kernel.asm	/^c0102c61:	e9 d5 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c66	obj/kernel.asm	/^c0102c66 <vector19>:$/;"	l
c0102c66	obj/kernel.asm	/^c0102c66:	6a 00                	push   $0x0$/;"	l
c0102c68	obj/kernel.asm	/^c0102c68:	6a 13                	push   $0x13$/;"	l
c0102c6a	obj/kernel.asm	/^c0102c6a:	e9 cc 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c6f	obj/kernel.asm	/^c0102c6f <vector20>:$/;"	l
c0102c6f	obj/kernel.asm	/^c0102c6f:	6a 00                	push   $0x0$/;"	l
c0102c71	obj/kernel.asm	/^c0102c71:	6a 14                	push   $0x14$/;"	l
c0102c73	obj/kernel.asm	/^c0102c73:	e9 c3 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c78	obj/kernel.asm	/^c0102c78 <vector21>:$/;"	l
c0102c78	obj/kernel.asm	/^c0102c78:	6a 00                	push   $0x0$/;"	l
c0102c7a	obj/kernel.asm	/^c0102c7a:	6a 15                	push   $0x15$/;"	l
c0102c7c	obj/kernel.asm	/^c0102c7c:	e9 ba 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c81	obj/kernel.asm	/^c0102c81 <vector22>:$/;"	l
c0102c81	obj/kernel.asm	/^c0102c81:	6a 00                	push   $0x0$/;"	l
c0102c83	obj/kernel.asm	/^c0102c83:	6a 16                	push   $0x16$/;"	l
c0102c85	obj/kernel.asm	/^c0102c85:	e9 b1 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c8a	obj/kernel.asm	/^c0102c8a <vector23>:$/;"	l
c0102c8a	obj/kernel.asm	/^c0102c8a:	6a 00                	push   $0x0$/;"	l
c0102c8c	obj/kernel.asm	/^c0102c8c:	6a 17                	push   $0x17$/;"	l
c0102c8e	obj/kernel.asm	/^c0102c8e:	e9 a8 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c93	obj/kernel.asm	/^c0102c93 <vector24>:$/;"	l
c0102c93	obj/kernel.asm	/^c0102c93:	6a 00                	push   $0x0$/;"	l
c0102c95	obj/kernel.asm	/^c0102c95:	6a 18                	push   $0x18$/;"	l
c0102c97	obj/kernel.asm	/^c0102c97:	e9 9f 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102c9c	obj/kernel.asm	/^c0102c9c <vector25>:$/;"	l
c0102c9c	obj/kernel.asm	/^c0102c9c:	6a 00                	push   $0x0$/;"	l
c0102c9e	obj/kernel.asm	/^c0102c9e:	6a 19                	push   $0x19$/;"	l
c0102ca0	obj/kernel.asm	/^c0102ca0:	e9 96 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102ca5	obj/kernel.asm	/^c0102ca5 <vector26>:$/;"	l
c0102ca5	obj/kernel.asm	/^c0102ca5:	6a 00                	push   $0x0$/;"	l
c0102ca7	obj/kernel.asm	/^c0102ca7:	6a 1a                	push   $0x1a$/;"	l
c0102ca9	obj/kernel.asm	/^c0102ca9:	e9 8d 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102cae	obj/kernel.asm	/^c0102cae <vector27>:$/;"	l
c0102cae	obj/kernel.asm	/^c0102cae:	6a 00                	push   $0x0$/;"	l
c0102cb0	obj/kernel.asm	/^c0102cb0:	6a 1b                	push   $0x1b$/;"	l
c0102cb2	obj/kernel.asm	/^c0102cb2:	e9 84 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102cb7	obj/kernel.asm	/^c0102cb7 <vector28>:$/;"	l
c0102cb7	obj/kernel.asm	/^c0102cb7:	6a 00                	push   $0x0$/;"	l
c0102cb9	obj/kernel.asm	/^c0102cb9:	6a 1c                	push   $0x1c$/;"	l
c0102cbb	obj/kernel.asm	/^c0102cbb:	e9 7b 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102cc0	obj/kernel.asm	/^c0102cc0 <vector29>:$/;"	l
c0102cc0	obj/kernel.asm	/^c0102cc0:	6a 00                	push   $0x0$/;"	l
c0102cc2	obj/kernel.asm	/^c0102cc2:	6a 1d                	push   $0x1d$/;"	l
c0102cc4	obj/kernel.asm	/^c0102cc4:	e9 72 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102cc9	obj/kernel.asm	/^c0102cc9 <vector30>:$/;"	l
c0102cc9	obj/kernel.asm	/^c0102cc9:	6a 00                	push   $0x0$/;"	l
c0102ccb	obj/kernel.asm	/^c0102ccb:	6a 1e                	push   $0x1e$/;"	l
c0102ccd	obj/kernel.asm	/^c0102ccd:	e9 69 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102cd2	obj/kernel.asm	/^c0102cd2 <vector31>:$/;"	l
c0102cd2	obj/kernel.asm	/^c0102cd2:	6a 00                	push   $0x0$/;"	l
c0102cd4	obj/kernel.asm	/^c0102cd4:	6a 1f                	push   $0x1f$/;"	l
c0102cd6	obj/kernel.asm	/^c0102cd6:	e9 60 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102cdb	obj/kernel.asm	/^c0102cdb <vector32>:$/;"	l
c0102cdb	obj/kernel.asm	/^c0102cdb:	6a 00                	push   $0x0$/;"	l
c0102cdd	obj/kernel.asm	/^c0102cdd:	6a 20                	push   $0x20$/;"	l
c0102cdf	obj/kernel.asm	/^c0102cdf:	e9 57 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102ce4	obj/kernel.asm	/^c0102ce4 <vector33>:$/;"	l
c0102ce4	obj/kernel.asm	/^c0102ce4:	6a 00                	push   $0x0$/;"	l
c0102ce6	obj/kernel.asm	/^c0102ce6:	6a 21                	push   $0x21$/;"	l
c0102ce8	obj/kernel.asm	/^c0102ce8:	e9 4e 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102ced	obj/kernel.asm	/^c0102ced <vector34>:$/;"	l
c0102ced	obj/kernel.asm	/^c0102ced:	6a 00                	push   $0x0$/;"	l
c0102cef	obj/kernel.asm	/^c0102cef:	6a 22                	push   $0x22$/;"	l
c0102cf1	obj/kernel.asm	/^c0102cf1:	e9 45 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102cf6	obj/kernel.asm	/^c0102cf6 <vector35>:$/;"	l
c0102cf6	obj/kernel.asm	/^c0102cf6:	6a 00                	push   $0x0$/;"	l
c0102cf8	obj/kernel.asm	/^c0102cf8:	6a 23                	push   $0x23$/;"	l
c0102cfa	obj/kernel.asm	/^c0102cfa:	e9 3c 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102cff	obj/kernel.asm	/^c0102cff <vector36>:$/;"	l
c0102cff	obj/kernel.asm	/^c0102cff:	6a 00                	push   $0x0$/;"	l
c0102d01	obj/kernel.asm	/^c0102d01:	6a 24                	push   $0x24$/;"	l
c0102d03	obj/kernel.asm	/^c0102d03:	e9 33 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102d08	obj/kernel.asm	/^c0102d08 <vector37>:$/;"	l
c0102d08	obj/kernel.asm	/^c0102d08:	6a 00                	push   $0x0$/;"	l
c0102d0a	obj/kernel.asm	/^c0102d0a:	6a 25                	push   $0x25$/;"	l
c0102d0c	obj/kernel.asm	/^c0102d0c:	e9 2a 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102d11	obj/kernel.asm	/^c0102d11 <vector38>:$/;"	l
c0102d11	obj/kernel.asm	/^c0102d11:	6a 00                	push   $0x0$/;"	l
c0102d13	obj/kernel.asm	/^c0102d13:	6a 26                	push   $0x26$/;"	l
c0102d15	obj/kernel.asm	/^c0102d15:	e9 21 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102d1a	obj/kernel.asm	/^c0102d1a <vector39>:$/;"	l
c0102d1a	obj/kernel.asm	/^c0102d1a:	6a 00                	push   $0x0$/;"	l
c0102d1c	obj/kernel.asm	/^c0102d1c:	6a 27                	push   $0x27$/;"	l
c0102d1e	obj/kernel.asm	/^c0102d1e:	e9 18 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102d23	obj/kernel.asm	/^c0102d23 <vector40>:$/;"	l
c0102d23	obj/kernel.asm	/^c0102d23:	6a 00                	push   $0x0$/;"	l
c0102d25	obj/kernel.asm	/^c0102d25:	6a 28                	push   $0x28$/;"	l
c0102d27	obj/kernel.asm	/^c0102d27:	e9 0f 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102d2c	obj/kernel.asm	/^c0102d2c <vector41>:$/;"	l
c0102d2c	obj/kernel.asm	/^c0102d2c:	6a 00                	push   $0x0$/;"	l
c0102d2e	obj/kernel.asm	/^c0102d2e:	6a 29                	push   $0x29$/;"	l
c0102d30	obj/kernel.asm	/^c0102d30:	e9 06 09 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102d35	obj/kernel.asm	/^c0102d35 <vector42>:$/;"	l
c0102d35	obj/kernel.asm	/^c0102d35:	6a 00                	push   $0x0$/;"	l
c0102d37	obj/kernel.asm	/^c0102d37:	6a 2a                	push   $0x2a$/;"	l
c0102d39	obj/kernel.asm	/^c0102d39:	e9 fd 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102d3e	obj/kernel.asm	/^c0102d3e <vector43>:$/;"	l
c0102d3e	obj/kernel.asm	/^c0102d3e:	6a 00                	push   $0x0$/;"	l
c0102d40	obj/kernel.asm	/^c0102d40:	6a 2b                	push   $0x2b$/;"	l
c0102d42	obj/kernel.asm	/^c0102d42:	e9 f4 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102d47	obj/kernel.asm	/^c0102d47 <vector44>:$/;"	l
c0102d47	obj/kernel.asm	/^c0102d47:	6a 00                	push   $0x0$/;"	l
c0102d49	obj/kernel.asm	/^c0102d49:	6a 2c                	push   $0x2c$/;"	l
c0102d4b	obj/kernel.asm	/^c0102d4b:	e9 eb 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102d50	obj/kernel.asm	/^c0102d50 <vector45>:$/;"	l
c0102d50	obj/kernel.asm	/^c0102d50:	6a 00                	push   $0x0$/;"	l
c0102d52	obj/kernel.asm	/^c0102d52:	6a 2d                	push   $0x2d$/;"	l
c0102d54	obj/kernel.asm	/^c0102d54:	e9 e2 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102d59	obj/kernel.asm	/^c0102d59 <vector46>:$/;"	l
c0102d59	obj/kernel.asm	/^c0102d59:	6a 00                	push   $0x0$/;"	l
c0102d5b	obj/kernel.asm	/^c0102d5b:	6a 2e                	push   $0x2e$/;"	l
c0102d5d	obj/kernel.asm	/^c0102d5d:	e9 d9 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102d62	obj/kernel.asm	/^c0102d62 <vector47>:$/;"	l
c0102d62	obj/kernel.asm	/^c0102d62:	6a 00                	push   $0x0$/;"	l
c0102d64	obj/kernel.asm	/^c0102d64:	6a 2f                	push   $0x2f$/;"	l
c0102d66	obj/kernel.asm	/^c0102d66:	e9 d0 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102d6b	obj/kernel.asm	/^c0102d6b <vector48>:$/;"	l
c0102d6b	obj/kernel.asm	/^c0102d6b:	6a 00                	push   $0x0$/;"	l
c0102d6d	obj/kernel.asm	/^c0102d6d:	6a 30                	push   $0x30$/;"	l
c0102d6f	obj/kernel.asm	/^c0102d6f:	e9 c7 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102d74	obj/kernel.asm	/^c0102d74 <vector49>:$/;"	l
c0102d74	obj/kernel.asm	/^c0102d74:	6a 00                	push   $0x0$/;"	l
c0102d76	obj/kernel.asm	/^c0102d76:	6a 31                	push   $0x31$/;"	l
c0102d78	obj/kernel.asm	/^c0102d78:	e9 be 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102d7d	obj/kernel.asm	/^c0102d7d <vector50>:$/;"	l
c0102d7d	obj/kernel.asm	/^c0102d7d:	6a 00                	push   $0x0$/;"	l
c0102d7f	obj/kernel.asm	/^c0102d7f:	6a 32                	push   $0x32$/;"	l
c0102d81	obj/kernel.asm	/^c0102d81:	e9 b5 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102d86	obj/kernel.asm	/^c0102d86 <vector51>:$/;"	l
c0102d86	obj/kernel.asm	/^c0102d86:	6a 00                	push   $0x0$/;"	l
c0102d88	obj/kernel.asm	/^c0102d88:	6a 33                	push   $0x33$/;"	l
c0102d8a	obj/kernel.asm	/^c0102d8a:	e9 ac 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102d8f	obj/kernel.asm	/^c0102d8f <vector52>:$/;"	l
c0102d8f	obj/kernel.asm	/^c0102d8f:	6a 00                	push   $0x0$/;"	l
c0102d91	obj/kernel.asm	/^c0102d91:	6a 34                	push   $0x34$/;"	l
c0102d93	obj/kernel.asm	/^c0102d93:	e9 a3 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102d98	obj/kernel.asm	/^c0102d98 <vector53>:$/;"	l
c0102d98	obj/kernel.asm	/^c0102d98:	6a 00                	push   $0x0$/;"	l
c0102d9a	obj/kernel.asm	/^c0102d9a:	6a 35                	push   $0x35$/;"	l
c0102d9c	obj/kernel.asm	/^c0102d9c:	e9 9a 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102da1	obj/kernel.asm	/^c0102da1 <vector54>:$/;"	l
c0102da1	obj/kernel.asm	/^c0102da1:	6a 00                	push   $0x0$/;"	l
c0102da3	obj/kernel.asm	/^c0102da3:	6a 36                	push   $0x36$/;"	l
c0102da5	obj/kernel.asm	/^c0102da5:	e9 91 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102daa	obj/kernel.asm	/^c0102daa <vector55>:$/;"	l
c0102daa	obj/kernel.asm	/^c0102daa:	6a 00                	push   $0x0$/;"	l
c0102dac	obj/kernel.asm	/^c0102dac:	6a 37                	push   $0x37$/;"	l
c0102dae	obj/kernel.asm	/^c0102dae:	e9 88 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102db3	obj/kernel.asm	/^c0102db3 <vector56>:$/;"	l
c0102db3	obj/kernel.asm	/^c0102db3:	6a 00                	push   $0x0$/;"	l
c0102db5	obj/kernel.asm	/^c0102db5:	6a 38                	push   $0x38$/;"	l
c0102db7	obj/kernel.asm	/^c0102db7:	e9 7f 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102dbc	obj/kernel.asm	/^c0102dbc <vector57>:$/;"	l
c0102dbc	obj/kernel.asm	/^c0102dbc:	6a 00                	push   $0x0$/;"	l
c0102dbe	obj/kernel.asm	/^c0102dbe:	6a 39                	push   $0x39$/;"	l
c0102dc0	obj/kernel.asm	/^c0102dc0:	e9 76 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102dc5	obj/kernel.asm	/^c0102dc5 <vector58>:$/;"	l
c0102dc5	obj/kernel.asm	/^c0102dc5:	6a 00                	push   $0x0$/;"	l
c0102dc7	obj/kernel.asm	/^c0102dc7:	6a 3a                	push   $0x3a$/;"	l
c0102dc9	obj/kernel.asm	/^c0102dc9:	e9 6d 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102dce	obj/kernel.asm	/^c0102dce <vector59>:$/;"	l
c0102dce	obj/kernel.asm	/^c0102dce:	6a 00                	push   $0x0$/;"	l
c0102dd0	obj/kernel.asm	/^c0102dd0:	6a 3b                	push   $0x3b$/;"	l
c0102dd2	obj/kernel.asm	/^c0102dd2:	e9 64 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102dd7	obj/kernel.asm	/^c0102dd7 <vector60>:$/;"	l
c0102dd7	obj/kernel.asm	/^c0102dd7:	6a 00                	push   $0x0$/;"	l
c0102dd9	obj/kernel.asm	/^c0102dd9:	6a 3c                	push   $0x3c$/;"	l
c0102ddb	obj/kernel.asm	/^c0102ddb:	e9 5b 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102de0	obj/kernel.asm	/^c0102de0 <vector61>:$/;"	l
c0102de0	obj/kernel.asm	/^c0102de0:	6a 00                	push   $0x0$/;"	l
c0102de2	obj/kernel.asm	/^c0102de2:	6a 3d                	push   $0x3d$/;"	l
c0102de4	obj/kernel.asm	/^c0102de4:	e9 52 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102de9	obj/kernel.asm	/^c0102de9 <vector62>:$/;"	l
c0102de9	obj/kernel.asm	/^c0102de9:	6a 00                	push   $0x0$/;"	l
c0102deb	obj/kernel.asm	/^c0102deb:	6a 3e                	push   $0x3e$/;"	l
c0102ded	obj/kernel.asm	/^c0102ded:	e9 49 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102df2	obj/kernel.asm	/^c0102df2 <vector63>:$/;"	l
c0102df2	obj/kernel.asm	/^c0102df2:	6a 00                	push   $0x0$/;"	l
c0102df4	obj/kernel.asm	/^c0102df4:	6a 3f                	push   $0x3f$/;"	l
c0102df6	obj/kernel.asm	/^c0102df6:	e9 40 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102dfb	obj/kernel.asm	/^c0102dfb <vector64>:$/;"	l
c0102dfb	obj/kernel.asm	/^c0102dfb:	6a 00                	push   $0x0$/;"	l
c0102dfd	obj/kernel.asm	/^c0102dfd:	6a 40                	push   $0x40$/;"	l
c0102dff	obj/kernel.asm	/^c0102dff:	e9 37 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102e04	obj/kernel.asm	/^c0102e04 <vector65>:$/;"	l
c0102e04	obj/kernel.asm	/^c0102e04:	6a 00                	push   $0x0$/;"	l
c0102e06	obj/kernel.asm	/^c0102e06:	6a 41                	push   $0x41$/;"	l
c0102e08	obj/kernel.asm	/^c0102e08:	e9 2e 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102e0d	obj/kernel.asm	/^c0102e0d <vector66>:$/;"	l
c0102e0d	obj/kernel.asm	/^c0102e0d:	6a 00                	push   $0x0$/;"	l
c0102e0f	obj/kernel.asm	/^c0102e0f:	6a 42                	push   $0x42$/;"	l
c0102e11	obj/kernel.asm	/^c0102e11:	e9 25 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102e16	obj/kernel.asm	/^c0102e16 <vector67>:$/;"	l
c0102e16	obj/kernel.asm	/^c0102e16:	6a 00                	push   $0x0$/;"	l
c0102e18	obj/kernel.asm	/^c0102e18:	6a 43                	push   $0x43$/;"	l
c0102e1a	obj/kernel.asm	/^c0102e1a:	e9 1c 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102e1f	obj/kernel.asm	/^c0102e1f <vector68>:$/;"	l
c0102e1f	obj/kernel.asm	/^c0102e1f:	6a 00                	push   $0x0$/;"	l
c0102e21	obj/kernel.asm	/^c0102e21:	6a 44                	push   $0x44$/;"	l
c0102e23	obj/kernel.asm	/^c0102e23:	e9 13 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102e28	obj/kernel.asm	/^c0102e28 <vector69>:$/;"	l
c0102e28	obj/kernel.asm	/^c0102e28:	6a 00                	push   $0x0$/;"	l
c0102e2a	obj/kernel.asm	/^c0102e2a:	6a 45                	push   $0x45$/;"	l
c0102e2c	obj/kernel.asm	/^c0102e2c:	e9 0a 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102e31	obj/kernel.asm	/^c0102e31 <vector70>:$/;"	l
c0102e31	obj/kernel.asm	/^c0102e31:	6a 00                	push   $0x0$/;"	l
c0102e33	obj/kernel.asm	/^c0102e33:	6a 46                	push   $0x46$/;"	l
c0102e35	obj/kernel.asm	/^c0102e35:	e9 01 08 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102e3a	obj/kernel.asm	/^c0102e3a <vector71>:$/;"	l
c0102e3a	obj/kernel.asm	/^c0102e3a:	6a 00                	push   $0x0$/;"	l
c0102e3c	obj/kernel.asm	/^c0102e3c:	6a 47                	push   $0x47$/;"	l
c0102e3e	obj/kernel.asm	/^c0102e3e:	e9 f8 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102e43	obj/kernel.asm	/^c0102e43 <vector72>:$/;"	l
c0102e43	obj/kernel.asm	/^c0102e43:	6a 00                	push   $0x0$/;"	l
c0102e45	obj/kernel.asm	/^c0102e45:	6a 48                	push   $0x48$/;"	l
c0102e47	obj/kernel.asm	/^c0102e47:	e9 ef 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102e4c	obj/kernel.asm	/^c0102e4c <vector73>:$/;"	l
c0102e4c	obj/kernel.asm	/^c0102e4c:	6a 00                	push   $0x0$/;"	l
c0102e4e	obj/kernel.asm	/^c0102e4e:	6a 49                	push   $0x49$/;"	l
c0102e50	obj/kernel.asm	/^c0102e50:	e9 e6 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102e55	obj/kernel.asm	/^c0102e55 <vector74>:$/;"	l
c0102e55	obj/kernel.asm	/^c0102e55:	6a 00                	push   $0x0$/;"	l
c0102e57	obj/kernel.asm	/^c0102e57:	6a 4a                	push   $0x4a$/;"	l
c0102e59	obj/kernel.asm	/^c0102e59:	e9 dd 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102e5e	obj/kernel.asm	/^c0102e5e <vector75>:$/;"	l
c0102e5e	obj/kernel.asm	/^c0102e5e:	6a 00                	push   $0x0$/;"	l
c0102e60	obj/kernel.asm	/^c0102e60:	6a 4b                	push   $0x4b$/;"	l
c0102e62	obj/kernel.asm	/^c0102e62:	e9 d4 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102e67	obj/kernel.asm	/^c0102e67 <vector76>:$/;"	l
c0102e67	obj/kernel.asm	/^c0102e67:	6a 00                	push   $0x0$/;"	l
c0102e69	obj/kernel.asm	/^c0102e69:	6a 4c                	push   $0x4c$/;"	l
c0102e6b	obj/kernel.asm	/^c0102e6b:	e9 cb 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102e70	obj/kernel.asm	/^c0102e70 <vector77>:$/;"	l
c0102e70	obj/kernel.asm	/^c0102e70:	6a 00                	push   $0x0$/;"	l
c0102e72	obj/kernel.asm	/^c0102e72:	6a 4d                	push   $0x4d$/;"	l
c0102e74	obj/kernel.asm	/^c0102e74:	e9 c2 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102e79	obj/kernel.asm	/^c0102e79 <vector78>:$/;"	l
c0102e79	obj/kernel.asm	/^c0102e79:	6a 00                	push   $0x0$/;"	l
c0102e7b	obj/kernel.asm	/^c0102e7b:	6a 4e                	push   $0x4e$/;"	l
c0102e7d	obj/kernel.asm	/^c0102e7d:	e9 b9 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102e82	obj/kernel.asm	/^c0102e82 <vector79>:$/;"	l
c0102e82	obj/kernel.asm	/^c0102e82:	6a 00                	push   $0x0$/;"	l
c0102e84	obj/kernel.asm	/^c0102e84:	6a 4f                	push   $0x4f$/;"	l
c0102e86	obj/kernel.asm	/^c0102e86:	e9 b0 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102e8b	obj/kernel.asm	/^c0102e8b <vector80>:$/;"	l
c0102e8b	obj/kernel.asm	/^c0102e8b:	6a 00                	push   $0x0$/;"	l
c0102e8d	obj/kernel.asm	/^c0102e8d:	6a 50                	push   $0x50$/;"	l
c0102e8f	obj/kernel.asm	/^c0102e8f:	e9 a7 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102e94	obj/kernel.asm	/^c0102e94 <vector81>:$/;"	l
c0102e94	obj/kernel.asm	/^c0102e94:	6a 00                	push   $0x0$/;"	l
c0102e96	obj/kernel.asm	/^c0102e96:	6a 51                	push   $0x51$/;"	l
c0102e98	obj/kernel.asm	/^c0102e98:	e9 9e 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102e9d	obj/kernel.asm	/^c0102e9d <vector82>:$/;"	l
c0102e9d	obj/kernel.asm	/^c0102e9d:	6a 00                	push   $0x0$/;"	l
c0102e9f	obj/kernel.asm	/^c0102e9f:	6a 52                	push   $0x52$/;"	l
c0102ea1	obj/kernel.asm	/^c0102ea1:	e9 95 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102ea6	obj/kernel.asm	/^c0102ea6 <vector83>:$/;"	l
c0102ea6	obj/kernel.asm	/^c0102ea6:	6a 00                	push   $0x0$/;"	l
c0102ea8	obj/kernel.asm	/^c0102ea8:	6a 53                	push   $0x53$/;"	l
c0102eaa	obj/kernel.asm	/^c0102eaa:	e9 8c 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102eaf	obj/kernel.asm	/^c0102eaf <vector84>:$/;"	l
c0102eaf	obj/kernel.asm	/^c0102eaf:	6a 00                	push   $0x0$/;"	l
c0102eb1	obj/kernel.asm	/^c0102eb1:	6a 54                	push   $0x54$/;"	l
c0102eb3	obj/kernel.asm	/^c0102eb3:	e9 83 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102eb8	obj/kernel.asm	/^c0102eb8 <vector85>:$/;"	l
c0102eb8	obj/kernel.asm	/^c0102eb8:	6a 00                	push   $0x0$/;"	l
c0102eba	obj/kernel.asm	/^c0102eba:	6a 55                	push   $0x55$/;"	l
c0102ebc	obj/kernel.asm	/^c0102ebc:	e9 7a 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102ec1	obj/kernel.asm	/^c0102ec1 <vector86>:$/;"	l
c0102ec1	obj/kernel.asm	/^c0102ec1:	6a 00                	push   $0x0$/;"	l
c0102ec3	obj/kernel.asm	/^c0102ec3:	6a 56                	push   $0x56$/;"	l
c0102ec5	obj/kernel.asm	/^c0102ec5:	e9 71 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102eca	obj/kernel.asm	/^c0102eca <vector87>:$/;"	l
c0102eca	obj/kernel.asm	/^c0102eca:	6a 00                	push   $0x0$/;"	l
c0102ecc	obj/kernel.asm	/^c0102ecc:	6a 57                	push   $0x57$/;"	l
c0102ece	obj/kernel.asm	/^c0102ece:	e9 68 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102ed3	obj/kernel.asm	/^c0102ed3 <vector88>:$/;"	l
c0102ed3	obj/kernel.asm	/^c0102ed3:	6a 00                	push   $0x0$/;"	l
c0102ed5	obj/kernel.asm	/^c0102ed5:	6a 58                	push   $0x58$/;"	l
c0102ed7	obj/kernel.asm	/^c0102ed7:	e9 5f 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102edc	obj/kernel.asm	/^c0102edc <vector89>:$/;"	l
c0102edc	obj/kernel.asm	/^c0102edc:	6a 00                	push   $0x0$/;"	l
c0102ede	obj/kernel.asm	/^c0102ede:	6a 59                	push   $0x59$/;"	l
c0102ee0	obj/kernel.asm	/^c0102ee0:	e9 56 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102ee5	obj/kernel.asm	/^c0102ee5 <vector90>:$/;"	l
c0102ee5	obj/kernel.asm	/^c0102ee5:	6a 00                	push   $0x0$/;"	l
c0102ee7	obj/kernel.asm	/^c0102ee7:	6a 5a                	push   $0x5a$/;"	l
c0102ee9	obj/kernel.asm	/^c0102ee9:	e9 4d 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102eee	obj/kernel.asm	/^c0102eee <vector91>:$/;"	l
c0102eee	obj/kernel.asm	/^c0102eee:	6a 00                	push   $0x0$/;"	l
c0102ef0	obj/kernel.asm	/^c0102ef0:	6a 5b                	push   $0x5b$/;"	l
c0102ef2	obj/kernel.asm	/^c0102ef2:	e9 44 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102ef7	obj/kernel.asm	/^c0102ef7 <vector92>:$/;"	l
c0102ef7	obj/kernel.asm	/^c0102ef7:	6a 00                	push   $0x0$/;"	l
c0102ef9	obj/kernel.asm	/^c0102ef9:	6a 5c                	push   $0x5c$/;"	l
c0102efb	obj/kernel.asm	/^c0102efb:	e9 3b 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102f00	obj/kernel.asm	/^c0102f00 <vector93>:$/;"	l
c0102f00	obj/kernel.asm	/^c0102f00:	6a 00                	push   $0x0$/;"	l
c0102f02	obj/kernel.asm	/^c0102f02:	6a 5d                	push   $0x5d$/;"	l
c0102f04	obj/kernel.asm	/^c0102f04:	e9 32 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102f09	obj/kernel.asm	/^c0102f09 <vector94>:$/;"	l
c0102f09	obj/kernel.asm	/^c0102f09:	6a 00                	push   $0x0$/;"	l
c0102f0b	obj/kernel.asm	/^c0102f0b:	6a 5e                	push   $0x5e$/;"	l
c0102f0d	obj/kernel.asm	/^c0102f0d:	e9 29 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102f12	obj/kernel.asm	/^c0102f12 <vector95>:$/;"	l
c0102f12	obj/kernel.asm	/^c0102f12:	6a 00                	push   $0x0$/;"	l
c0102f14	obj/kernel.asm	/^c0102f14:	6a 5f                	push   $0x5f$/;"	l
c0102f16	obj/kernel.asm	/^c0102f16:	e9 20 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102f1b	obj/kernel.asm	/^c0102f1b <vector96>:$/;"	l
c0102f1b	obj/kernel.asm	/^c0102f1b:	6a 00                	push   $0x0$/;"	l
c0102f1d	obj/kernel.asm	/^c0102f1d:	6a 60                	push   $0x60$/;"	l
c0102f1f	obj/kernel.asm	/^c0102f1f:	e9 17 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102f24	obj/kernel.asm	/^c0102f24 <vector97>:$/;"	l
c0102f24	obj/kernel.asm	/^c0102f24:	6a 00                	push   $0x0$/;"	l
c0102f26	obj/kernel.asm	/^c0102f26:	6a 61                	push   $0x61$/;"	l
c0102f28	obj/kernel.asm	/^c0102f28:	e9 0e 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102f2d	obj/kernel.asm	/^c0102f2d <vector98>:$/;"	l
c0102f2d	obj/kernel.asm	/^c0102f2d:	6a 00                	push   $0x0$/;"	l
c0102f2f	obj/kernel.asm	/^c0102f2f:	6a 62                	push   $0x62$/;"	l
c0102f31	obj/kernel.asm	/^c0102f31:	e9 05 07 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102f36	obj/kernel.asm	/^c0102f36 <vector99>:$/;"	l
c0102f36	obj/kernel.asm	/^c0102f36:	6a 00                	push   $0x0$/;"	l
c0102f38	obj/kernel.asm	/^c0102f38:	6a 63                	push   $0x63$/;"	l
c0102f3a	obj/kernel.asm	/^c0102f3a:	e9 fc 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102f3f	obj/kernel.asm	/^c0102f3f <vector100>:$/;"	l
c0102f3f	obj/kernel.asm	/^c0102f3f:	6a 00                	push   $0x0$/;"	l
c0102f41	obj/kernel.asm	/^c0102f41:	6a 64                	push   $0x64$/;"	l
c0102f43	obj/kernel.asm	/^c0102f43:	e9 f3 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102f48	obj/kernel.asm	/^c0102f48 <vector101>:$/;"	l
c0102f48	obj/kernel.asm	/^c0102f48:	6a 00                	push   $0x0$/;"	l
c0102f4a	obj/kernel.asm	/^c0102f4a:	6a 65                	push   $0x65$/;"	l
c0102f4c	obj/kernel.asm	/^c0102f4c:	e9 ea 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102f51	obj/kernel.asm	/^c0102f51 <vector102>:$/;"	l
c0102f51	obj/kernel.asm	/^c0102f51:	6a 00                	push   $0x0$/;"	l
c0102f53	obj/kernel.asm	/^c0102f53:	6a 66                	push   $0x66$/;"	l
c0102f55	obj/kernel.asm	/^c0102f55:	e9 e1 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102f5a	obj/kernel.asm	/^c0102f5a <vector103>:$/;"	l
c0102f5a	obj/kernel.asm	/^c0102f5a:	6a 00                	push   $0x0$/;"	l
c0102f5c	obj/kernel.asm	/^c0102f5c:	6a 67                	push   $0x67$/;"	l
c0102f5e	obj/kernel.asm	/^c0102f5e:	e9 d8 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102f63	obj/kernel.asm	/^c0102f63 <vector104>:$/;"	l
c0102f63	obj/kernel.asm	/^c0102f63:	6a 00                	push   $0x0$/;"	l
c0102f65	obj/kernel.asm	/^c0102f65:	6a 68                	push   $0x68$/;"	l
c0102f67	obj/kernel.asm	/^c0102f67:	e9 cf 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102f6c	obj/kernel.asm	/^c0102f6c <vector105>:$/;"	l
c0102f6c	obj/kernel.asm	/^c0102f6c:	6a 00                	push   $0x0$/;"	l
c0102f6e	obj/kernel.asm	/^c0102f6e:	6a 69                	push   $0x69$/;"	l
c0102f70	obj/kernel.asm	/^c0102f70:	e9 c6 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102f75	obj/kernel.asm	/^c0102f75 <vector106>:$/;"	l
c0102f75	obj/kernel.asm	/^c0102f75:	6a 00                	push   $0x0$/;"	l
c0102f77	obj/kernel.asm	/^c0102f77:	6a 6a                	push   $0x6a$/;"	l
c0102f79	obj/kernel.asm	/^c0102f79:	e9 bd 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102f7e	obj/kernel.asm	/^c0102f7e <vector107>:$/;"	l
c0102f7e	obj/kernel.asm	/^c0102f7e:	6a 00                	push   $0x0$/;"	l
c0102f80	obj/kernel.asm	/^c0102f80:	6a 6b                	push   $0x6b$/;"	l
c0102f82	obj/kernel.asm	/^c0102f82:	e9 b4 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102f87	obj/kernel.asm	/^c0102f87 <vector108>:$/;"	l
c0102f87	obj/kernel.asm	/^c0102f87:	6a 00                	push   $0x0$/;"	l
c0102f89	obj/kernel.asm	/^c0102f89:	6a 6c                	push   $0x6c$/;"	l
c0102f8b	obj/kernel.asm	/^c0102f8b:	e9 ab 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102f90	obj/kernel.asm	/^c0102f90 <vector109>:$/;"	l
c0102f90	obj/kernel.asm	/^c0102f90:	6a 00                	push   $0x0$/;"	l
c0102f92	obj/kernel.asm	/^c0102f92:	6a 6d                	push   $0x6d$/;"	l
c0102f94	obj/kernel.asm	/^c0102f94:	e9 a2 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102f99	obj/kernel.asm	/^c0102f99 <vector110>:$/;"	l
c0102f99	obj/kernel.asm	/^c0102f99:	6a 00                	push   $0x0$/;"	l
c0102f9b	obj/kernel.asm	/^c0102f9b:	6a 6e                	push   $0x6e$/;"	l
c0102f9d	obj/kernel.asm	/^c0102f9d:	e9 99 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102fa2	obj/kernel.asm	/^c0102fa2 <vector111>:$/;"	l
c0102fa2	obj/kernel.asm	/^c0102fa2:	6a 00                	push   $0x0$/;"	l
c0102fa4	obj/kernel.asm	/^c0102fa4:	6a 6f                	push   $0x6f$/;"	l
c0102fa6	obj/kernel.asm	/^c0102fa6:	e9 90 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102fab	obj/kernel.asm	/^c0102fab <vector112>:$/;"	l
c0102fab	obj/kernel.asm	/^c0102fab:	6a 00                	push   $0x0$/;"	l
c0102fad	obj/kernel.asm	/^c0102fad:	6a 70                	push   $0x70$/;"	l
c0102faf	obj/kernel.asm	/^c0102faf:	e9 87 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102fb4	obj/kernel.asm	/^c0102fb4 <vector113>:$/;"	l
c0102fb4	obj/kernel.asm	/^c0102fb4:	6a 00                	push   $0x0$/;"	l
c0102fb6	obj/kernel.asm	/^c0102fb6:	6a 71                	push   $0x71$/;"	l
c0102fb8	obj/kernel.asm	/^c0102fb8:	e9 7e 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102fbd	obj/kernel.asm	/^c0102fbd <vector114>:$/;"	l
c0102fbd	obj/kernel.asm	/^c0102fbd:	6a 00                	push   $0x0$/;"	l
c0102fbf	obj/kernel.asm	/^c0102fbf:	6a 72                	push   $0x72$/;"	l
c0102fc1	obj/kernel.asm	/^c0102fc1:	e9 75 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102fc6	obj/kernel.asm	/^c0102fc6 <vector115>:$/;"	l
c0102fc6	obj/kernel.asm	/^c0102fc6:	6a 00                	push   $0x0$/;"	l
c0102fc8	obj/kernel.asm	/^c0102fc8:	6a 73                	push   $0x73$/;"	l
c0102fca	obj/kernel.asm	/^c0102fca:	e9 6c 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102fcf	obj/kernel.asm	/^c0102fcf <vector116>:$/;"	l
c0102fcf	obj/kernel.asm	/^c0102fcf:	6a 00                	push   $0x0$/;"	l
c0102fd1	obj/kernel.asm	/^c0102fd1:	6a 74                	push   $0x74$/;"	l
c0102fd3	obj/kernel.asm	/^c0102fd3:	e9 63 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102fd8	obj/kernel.asm	/^c0102fd8 <vector117>:$/;"	l
c0102fd8	obj/kernel.asm	/^c0102fd8:	6a 00                	push   $0x0$/;"	l
c0102fda	obj/kernel.asm	/^c0102fda:	6a 75                	push   $0x75$/;"	l
c0102fdc	obj/kernel.asm	/^c0102fdc:	e9 5a 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102fe1	obj/kernel.asm	/^c0102fe1 <vector118>:$/;"	l
c0102fe1	obj/kernel.asm	/^c0102fe1:	6a 00                	push   $0x0$/;"	l
c0102fe3	obj/kernel.asm	/^c0102fe3:	6a 76                	push   $0x76$/;"	l
c0102fe5	obj/kernel.asm	/^c0102fe5:	e9 51 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102fea	obj/kernel.asm	/^c0102fea <vector119>:$/;"	l
c0102fea	obj/kernel.asm	/^c0102fea:	6a 00                	push   $0x0$/;"	l
c0102fec	obj/kernel.asm	/^c0102fec:	6a 77                	push   $0x77$/;"	l
c0102fee	obj/kernel.asm	/^c0102fee:	e9 48 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102ff3	obj/kernel.asm	/^c0102ff3 <vector120>:$/;"	l
c0102ff3	obj/kernel.asm	/^c0102ff3:	6a 00                	push   $0x0$/;"	l
c0102ff5	obj/kernel.asm	/^c0102ff5:	6a 78                	push   $0x78$/;"	l
c0102ff7	obj/kernel.asm	/^c0102ff7:	e9 3f 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0102ffc	obj/kernel.asm	/^c0102ffc <vector121>:$/;"	l
c0102ffc	obj/kernel.asm	/^c0102ffc:	6a 00                	push   $0x0$/;"	l
c0102ffe	obj/kernel.asm	/^c0102ffe:	6a 79                	push   $0x79$/;"	l
c0103000	obj/kernel.asm	/^c0103000:	e9 36 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103005	obj/kernel.asm	/^c0103005 <vector122>:$/;"	l
c0103005	obj/kernel.asm	/^c0103005:	6a 00                	push   $0x0$/;"	l
c0103007	obj/kernel.asm	/^c0103007:	6a 7a                	push   $0x7a$/;"	l
c0103009	obj/kernel.asm	/^c0103009:	e9 2d 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010300e	obj/kernel.asm	/^c010300e <vector123>:$/;"	l
c010300e	obj/kernel.asm	/^c010300e:	6a 00                	push   $0x0$/;"	l
c0103010	obj/kernel.asm	/^c0103010:	6a 7b                	push   $0x7b$/;"	l
c0103012	obj/kernel.asm	/^c0103012:	e9 24 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103017	obj/kernel.asm	/^c0103017 <vector124>:$/;"	l
c0103017	obj/kernel.asm	/^c0103017:	6a 00                	push   $0x0$/;"	l
c0103019	obj/kernel.asm	/^c0103019:	6a 7c                	push   $0x7c$/;"	l
c010301b	obj/kernel.asm	/^c010301b:	e9 1b 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103020	obj/kernel.asm	/^c0103020 <vector125>:$/;"	l
c0103020	obj/kernel.asm	/^c0103020:	6a 00                	push   $0x0$/;"	l
c0103022	obj/kernel.asm	/^c0103022:	6a 7d                	push   $0x7d$/;"	l
c0103024	obj/kernel.asm	/^c0103024:	e9 12 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103029	obj/kernel.asm	/^c0103029 <vector126>:$/;"	l
c0103029	obj/kernel.asm	/^c0103029:	6a 00                	push   $0x0$/;"	l
c010302b	obj/kernel.asm	/^c010302b:	6a 7e                	push   $0x7e$/;"	l
c010302d	obj/kernel.asm	/^c010302d:	e9 09 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103032	obj/kernel.asm	/^c0103032 <vector127>:$/;"	l
c0103032	obj/kernel.asm	/^c0103032:	6a 00                	push   $0x0$/;"	l
c0103034	obj/kernel.asm	/^c0103034:	6a 7f                	push   $0x7f$/;"	l
c0103036	obj/kernel.asm	/^c0103036:	e9 00 06 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010303b	obj/kernel.asm	/^c010303b <vector128>:$/;"	l
c010303b	obj/kernel.asm	/^c010303b:	6a 00                	push   $0x0$/;"	l
c010303d	obj/kernel.asm	/^c010303d:	68 80 00 00 00       	push   $0x80$/;"	l
c0103042	obj/kernel.asm	/^c0103042:	e9 f4 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103047	obj/kernel.asm	/^c0103047 <vector129>:$/;"	l
c0103047	obj/kernel.asm	/^c0103047:	6a 00                	push   $0x0$/;"	l
c0103049	obj/kernel.asm	/^c0103049:	68 81 00 00 00       	push   $0x81$/;"	l
c010304e	obj/kernel.asm	/^c010304e:	e9 e8 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103053	obj/kernel.asm	/^c0103053 <vector130>:$/;"	l
c0103053	obj/kernel.asm	/^c0103053:	6a 00                	push   $0x0$/;"	l
c0103055	obj/kernel.asm	/^c0103055:	68 82 00 00 00       	push   $0x82$/;"	l
c010305a	obj/kernel.asm	/^c010305a:	e9 dc 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010305f	obj/kernel.asm	/^c010305f <vector131>:$/;"	l
c010305f	obj/kernel.asm	/^c010305f:	6a 00                	push   $0x0$/;"	l
c0103061	obj/kernel.asm	/^c0103061:	68 83 00 00 00       	push   $0x83$/;"	l
c0103066	obj/kernel.asm	/^c0103066:	e9 d0 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010306b	obj/kernel.asm	/^c010306b <vector132>:$/;"	l
c010306b	obj/kernel.asm	/^c010306b:	6a 00                	push   $0x0$/;"	l
c010306d	obj/kernel.asm	/^c010306d:	68 84 00 00 00       	push   $0x84$/;"	l
c0103072	obj/kernel.asm	/^c0103072:	e9 c4 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103077	obj/kernel.asm	/^c0103077 <vector133>:$/;"	l
c0103077	obj/kernel.asm	/^c0103077:	6a 00                	push   $0x0$/;"	l
c0103079	obj/kernel.asm	/^c0103079:	68 85 00 00 00       	push   $0x85$/;"	l
c010307e	obj/kernel.asm	/^c010307e:	e9 b8 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103083	obj/kernel.asm	/^c0103083 <vector134>:$/;"	l
c0103083	obj/kernel.asm	/^c0103083:	6a 00                	push   $0x0$/;"	l
c0103085	obj/kernel.asm	/^c0103085:	68 86 00 00 00       	push   $0x86$/;"	l
c010308a	obj/kernel.asm	/^c010308a:	e9 ac 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010308f	obj/kernel.asm	/^c010308f <vector135>:$/;"	l
c010308f	obj/kernel.asm	/^c010308f:	6a 00                	push   $0x0$/;"	l
c0103091	obj/kernel.asm	/^c0103091:	68 87 00 00 00       	push   $0x87$/;"	l
c0103096	obj/kernel.asm	/^c0103096:	e9 a0 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010309b	obj/kernel.asm	/^c010309b <vector136>:$/;"	l
c010309b	obj/kernel.asm	/^c010309b:	6a 00                	push   $0x0$/;"	l
c010309d	obj/kernel.asm	/^c010309d:	68 88 00 00 00       	push   $0x88$/;"	l
c01030a2	obj/kernel.asm	/^c01030a2:	e9 94 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01030a7	obj/kernel.asm	/^c01030a7 <vector137>:$/;"	l
c01030a7	obj/kernel.asm	/^c01030a7:	6a 00                	push   $0x0$/;"	l
c01030a9	obj/kernel.asm	/^c01030a9:	68 89 00 00 00       	push   $0x89$/;"	l
c01030ae	obj/kernel.asm	/^c01030ae:	e9 88 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01030b3	obj/kernel.asm	/^c01030b3 <vector138>:$/;"	l
c01030b3	obj/kernel.asm	/^c01030b3:	6a 00                	push   $0x0$/;"	l
c01030b5	obj/kernel.asm	/^c01030b5:	68 8a 00 00 00       	push   $0x8a$/;"	l
c01030ba	obj/kernel.asm	/^c01030ba:	e9 7c 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01030bf	obj/kernel.asm	/^c01030bf <vector139>:$/;"	l
c01030bf	obj/kernel.asm	/^c01030bf:	6a 00                	push   $0x0$/;"	l
c01030c1	obj/kernel.asm	/^c01030c1:	68 8b 00 00 00       	push   $0x8b$/;"	l
c01030c6	obj/kernel.asm	/^c01030c6:	e9 70 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01030cb	obj/kernel.asm	/^c01030cb <vector140>:$/;"	l
c01030cb	obj/kernel.asm	/^c01030cb:	6a 00                	push   $0x0$/;"	l
c01030cd	obj/kernel.asm	/^c01030cd:	68 8c 00 00 00       	push   $0x8c$/;"	l
c01030d2	obj/kernel.asm	/^c01030d2:	e9 64 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01030d7	obj/kernel.asm	/^c01030d7 <vector141>:$/;"	l
c01030d7	obj/kernel.asm	/^c01030d7:	6a 00                	push   $0x0$/;"	l
c01030d9	obj/kernel.asm	/^c01030d9:	68 8d 00 00 00       	push   $0x8d$/;"	l
c01030de	obj/kernel.asm	/^c01030de:	e9 58 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01030e3	obj/kernel.asm	/^c01030e3 <vector142>:$/;"	l
c01030e3	obj/kernel.asm	/^c01030e3:	6a 00                	push   $0x0$/;"	l
c01030e5	obj/kernel.asm	/^c01030e5:	68 8e 00 00 00       	push   $0x8e$/;"	l
c01030ea	obj/kernel.asm	/^c01030ea:	e9 4c 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01030ef	obj/kernel.asm	/^c01030ef <vector143>:$/;"	l
c01030ef	obj/kernel.asm	/^c01030ef:	6a 00                	push   $0x0$/;"	l
c01030f1	obj/kernel.asm	/^c01030f1:	68 8f 00 00 00       	push   $0x8f$/;"	l
c01030f6	obj/kernel.asm	/^c01030f6:	e9 40 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01030fb	obj/kernel.asm	/^c01030fb <vector144>:$/;"	l
c01030fb	obj/kernel.asm	/^c01030fb:	6a 00                	push   $0x0$/;"	l
c01030fd	obj/kernel.asm	/^c01030fd:	68 90 00 00 00       	push   $0x90$/;"	l
c0103102	obj/kernel.asm	/^c0103102:	e9 34 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103107	obj/kernel.asm	/^c0103107 <vector145>:$/;"	l
c0103107	obj/kernel.asm	/^c0103107:	6a 00                	push   $0x0$/;"	l
c0103109	obj/kernel.asm	/^c0103109:	68 91 00 00 00       	push   $0x91$/;"	l
c010310e	obj/kernel.asm	/^c010310e:	e9 28 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103113	obj/kernel.asm	/^c0103113 <vector146>:$/;"	l
c0103113	obj/kernel.asm	/^c0103113:	6a 00                	push   $0x0$/;"	l
c0103115	obj/kernel.asm	/^c0103115:	68 92 00 00 00       	push   $0x92$/;"	l
c010311a	obj/kernel.asm	/^c010311a:	e9 1c 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010311f	obj/kernel.asm	/^c010311f <vector147>:$/;"	l
c010311f	obj/kernel.asm	/^c010311f:	6a 00                	push   $0x0$/;"	l
c0103121	obj/kernel.asm	/^c0103121:	68 93 00 00 00       	push   $0x93$/;"	l
c0103126	obj/kernel.asm	/^c0103126:	e9 10 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010312b	obj/kernel.asm	/^c010312b <vector148>:$/;"	l
c010312b	obj/kernel.asm	/^c010312b:	6a 00                	push   $0x0$/;"	l
c010312d	obj/kernel.asm	/^c010312d:	68 94 00 00 00       	push   $0x94$/;"	l
c0103132	obj/kernel.asm	/^c0103132:	e9 04 05 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103137	obj/kernel.asm	/^c0103137 <vector149>:$/;"	l
c0103137	obj/kernel.asm	/^c0103137:	6a 00                	push   $0x0$/;"	l
c0103139	obj/kernel.asm	/^c0103139:	68 95 00 00 00       	push   $0x95$/;"	l
c010313e	obj/kernel.asm	/^c010313e:	e9 f8 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103143	obj/kernel.asm	/^c0103143 <vector150>:$/;"	l
c0103143	obj/kernel.asm	/^c0103143:	6a 00                	push   $0x0$/;"	l
c0103145	obj/kernel.asm	/^c0103145:	68 96 00 00 00       	push   $0x96$/;"	l
c010314a	obj/kernel.asm	/^c010314a:	e9 ec 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010314f	obj/kernel.asm	/^c010314f <vector151>:$/;"	l
c010314f	obj/kernel.asm	/^c010314f:	6a 00                	push   $0x0$/;"	l
c0103151	obj/kernel.asm	/^c0103151:	68 97 00 00 00       	push   $0x97$/;"	l
c0103156	obj/kernel.asm	/^c0103156:	e9 e0 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010315b	obj/kernel.asm	/^c010315b <vector152>:$/;"	l
c010315b	obj/kernel.asm	/^c010315b:	6a 00                	push   $0x0$/;"	l
c010315d	obj/kernel.asm	/^c010315d:	68 98 00 00 00       	push   $0x98$/;"	l
c0103162	obj/kernel.asm	/^c0103162:	e9 d4 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103167	obj/kernel.asm	/^c0103167 <vector153>:$/;"	l
c0103167	obj/kernel.asm	/^c0103167:	6a 00                	push   $0x0$/;"	l
c0103169	obj/kernel.asm	/^c0103169:	68 99 00 00 00       	push   $0x99$/;"	l
c010316e	obj/kernel.asm	/^c010316e:	e9 c8 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103173	obj/kernel.asm	/^c0103173 <vector154>:$/;"	l
c0103173	obj/kernel.asm	/^c0103173:	6a 00                	push   $0x0$/;"	l
c0103175	obj/kernel.asm	/^c0103175:	68 9a 00 00 00       	push   $0x9a$/;"	l
c010317a	obj/kernel.asm	/^c010317a:	e9 bc 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010317f	obj/kernel.asm	/^c010317f <vector155>:$/;"	l
c010317f	obj/kernel.asm	/^c010317f:	6a 00                	push   $0x0$/;"	l
c0103181	obj/kernel.asm	/^c0103181:	68 9b 00 00 00       	push   $0x9b$/;"	l
c0103186	obj/kernel.asm	/^c0103186:	e9 b0 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010318b	obj/kernel.asm	/^c010318b <vector156>:$/;"	l
c010318b	obj/kernel.asm	/^c010318b:	6a 00                	push   $0x0$/;"	l
c010318d	obj/kernel.asm	/^c010318d:	68 9c 00 00 00       	push   $0x9c$/;"	l
c0103192	obj/kernel.asm	/^c0103192:	e9 a4 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103197	obj/kernel.asm	/^c0103197 <vector157>:$/;"	l
c0103197	obj/kernel.asm	/^c0103197:	6a 00                	push   $0x0$/;"	l
c0103199	obj/kernel.asm	/^c0103199:	68 9d 00 00 00       	push   $0x9d$/;"	l
c010319e	obj/kernel.asm	/^c010319e:	e9 98 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01031a3	obj/kernel.asm	/^c01031a3 <vector158>:$/;"	l
c01031a3	obj/kernel.asm	/^c01031a3:	6a 00                	push   $0x0$/;"	l
c01031a5	obj/kernel.asm	/^c01031a5:	68 9e 00 00 00       	push   $0x9e$/;"	l
c01031aa	obj/kernel.asm	/^c01031aa:	e9 8c 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01031af	obj/kernel.asm	/^c01031af <vector159>:$/;"	l
c01031af	obj/kernel.asm	/^c01031af:	6a 00                	push   $0x0$/;"	l
c01031b1	obj/kernel.asm	/^c01031b1:	68 9f 00 00 00       	push   $0x9f$/;"	l
c01031b6	obj/kernel.asm	/^c01031b6:	e9 80 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01031bb	obj/kernel.asm	/^c01031bb <vector160>:$/;"	l
c01031bb	obj/kernel.asm	/^c01031bb:	6a 00                	push   $0x0$/;"	l
c01031bd	obj/kernel.asm	/^c01031bd:	68 a0 00 00 00       	push   $0xa0$/;"	l
c01031c2	obj/kernel.asm	/^c01031c2:	e9 74 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01031c7	obj/kernel.asm	/^c01031c7 <vector161>:$/;"	l
c01031c7	obj/kernel.asm	/^c01031c7:	6a 00                	push   $0x0$/;"	l
c01031c9	obj/kernel.asm	/^c01031c9:	68 a1 00 00 00       	push   $0xa1$/;"	l
c01031ce	obj/kernel.asm	/^c01031ce:	e9 68 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01031d3	obj/kernel.asm	/^c01031d3 <vector162>:$/;"	l
c01031d3	obj/kernel.asm	/^c01031d3:	6a 00                	push   $0x0$/;"	l
c01031d5	obj/kernel.asm	/^c01031d5:	68 a2 00 00 00       	push   $0xa2$/;"	l
c01031da	obj/kernel.asm	/^c01031da:	e9 5c 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01031df	obj/kernel.asm	/^c01031df <vector163>:$/;"	l
c01031df	obj/kernel.asm	/^c01031df:	6a 00                	push   $0x0$/;"	l
c01031e1	obj/kernel.asm	/^c01031e1:	68 a3 00 00 00       	push   $0xa3$/;"	l
c01031e6	obj/kernel.asm	/^c01031e6:	e9 50 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01031eb	obj/kernel.asm	/^c01031eb <vector164>:$/;"	l
c01031eb	obj/kernel.asm	/^c01031eb:	6a 00                	push   $0x0$/;"	l
c01031ed	obj/kernel.asm	/^c01031ed:	68 a4 00 00 00       	push   $0xa4$/;"	l
c01031f2	obj/kernel.asm	/^c01031f2:	e9 44 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01031f7	obj/kernel.asm	/^c01031f7 <vector165>:$/;"	l
c01031f7	obj/kernel.asm	/^c01031f7:	6a 00                	push   $0x0$/;"	l
c01031f9	obj/kernel.asm	/^c01031f9:	68 a5 00 00 00       	push   $0xa5$/;"	l
c01031fe	obj/kernel.asm	/^c01031fe:	e9 38 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103203	obj/kernel.asm	/^c0103203 <vector166>:$/;"	l
c0103203	obj/kernel.asm	/^c0103203:	6a 00                	push   $0x0$/;"	l
c0103205	obj/kernel.asm	/^c0103205:	68 a6 00 00 00       	push   $0xa6$/;"	l
c010320a	obj/kernel.asm	/^c010320a:	e9 2c 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010320f	obj/kernel.asm	/^c010320f <vector167>:$/;"	l
c010320f	obj/kernel.asm	/^c010320f:	6a 00                	push   $0x0$/;"	l
c0103211	obj/kernel.asm	/^c0103211:	68 a7 00 00 00       	push   $0xa7$/;"	l
c0103216	obj/kernel.asm	/^c0103216:	e9 20 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010321b	obj/kernel.asm	/^c010321b <vector168>:$/;"	l
c010321b	obj/kernel.asm	/^c010321b:	6a 00                	push   $0x0$/;"	l
c010321d	obj/kernel.asm	/^c010321d:	68 a8 00 00 00       	push   $0xa8$/;"	l
c0103222	obj/kernel.asm	/^c0103222:	e9 14 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103227	obj/kernel.asm	/^c0103227 <vector169>:$/;"	l
c0103227	obj/kernel.asm	/^c0103227:	6a 00                	push   $0x0$/;"	l
c0103229	obj/kernel.asm	/^c0103229:	68 a9 00 00 00       	push   $0xa9$/;"	l
c010322e	obj/kernel.asm	/^c010322e:	e9 08 04 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103233	obj/kernel.asm	/^c0103233 <vector170>:$/;"	l
c0103233	obj/kernel.asm	/^c0103233:	6a 00                	push   $0x0$/;"	l
c0103235	obj/kernel.asm	/^c0103235:	68 aa 00 00 00       	push   $0xaa$/;"	l
c010323a	obj/kernel.asm	/^c010323a:	e9 fc 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010323f	obj/kernel.asm	/^c010323f <vector171>:$/;"	l
c010323f	obj/kernel.asm	/^c010323f:	6a 00                	push   $0x0$/;"	l
c0103241	obj/kernel.asm	/^c0103241:	68 ab 00 00 00       	push   $0xab$/;"	l
c0103246	obj/kernel.asm	/^c0103246:	e9 f0 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010324b	obj/kernel.asm	/^c010324b <vector172>:$/;"	l
c010324b	obj/kernel.asm	/^c010324b:	6a 00                	push   $0x0$/;"	l
c010324d	obj/kernel.asm	/^c010324d:	68 ac 00 00 00       	push   $0xac$/;"	l
c0103252	obj/kernel.asm	/^c0103252:	e9 e4 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103257	obj/kernel.asm	/^c0103257 <vector173>:$/;"	l
c0103257	obj/kernel.asm	/^c0103257:	6a 00                	push   $0x0$/;"	l
c0103259	obj/kernel.asm	/^c0103259:	68 ad 00 00 00       	push   $0xad$/;"	l
c010325e	obj/kernel.asm	/^c010325e:	e9 d8 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103263	obj/kernel.asm	/^c0103263 <vector174>:$/;"	l
c0103263	obj/kernel.asm	/^c0103263:	6a 00                	push   $0x0$/;"	l
c0103265	obj/kernel.asm	/^c0103265:	68 ae 00 00 00       	push   $0xae$/;"	l
c010326a	obj/kernel.asm	/^c010326a:	e9 cc 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010326f	obj/kernel.asm	/^c010326f <vector175>:$/;"	l
c010326f	obj/kernel.asm	/^c010326f:	6a 00                	push   $0x0$/;"	l
c0103271	obj/kernel.asm	/^c0103271:	68 af 00 00 00       	push   $0xaf$/;"	l
c0103276	obj/kernel.asm	/^c0103276:	e9 c0 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010327b	obj/kernel.asm	/^c010327b <vector176>:$/;"	l
c010327b	obj/kernel.asm	/^c010327b:	6a 00                	push   $0x0$/;"	l
c010327d	obj/kernel.asm	/^c010327d:	68 b0 00 00 00       	push   $0xb0$/;"	l
c0103282	obj/kernel.asm	/^c0103282:	e9 b4 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103287	obj/kernel.asm	/^c0103287 <vector177>:$/;"	l
c0103287	obj/kernel.asm	/^c0103287:	6a 00                	push   $0x0$/;"	l
c0103289	obj/kernel.asm	/^c0103289:	68 b1 00 00 00       	push   $0xb1$/;"	l
c010328e	obj/kernel.asm	/^c010328e:	e9 a8 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103293	obj/kernel.asm	/^c0103293 <vector178>:$/;"	l
c0103293	obj/kernel.asm	/^c0103293:	6a 00                	push   $0x0$/;"	l
c0103295	obj/kernel.asm	/^c0103295:	68 b2 00 00 00       	push   $0xb2$/;"	l
c010329a	obj/kernel.asm	/^c010329a:	e9 9c 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010329f	obj/kernel.asm	/^c010329f <vector179>:$/;"	l
c010329f	obj/kernel.asm	/^c010329f:	6a 00                	push   $0x0$/;"	l
c01032a1	obj/kernel.asm	/^c01032a1:	68 b3 00 00 00       	push   $0xb3$/;"	l
c01032a6	obj/kernel.asm	/^c01032a6:	e9 90 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01032ab	obj/kernel.asm	/^c01032ab <vector180>:$/;"	l
c01032ab	obj/kernel.asm	/^c01032ab:	6a 00                	push   $0x0$/;"	l
c01032ad	obj/kernel.asm	/^c01032ad:	68 b4 00 00 00       	push   $0xb4$/;"	l
c01032b2	obj/kernel.asm	/^c01032b2:	e9 84 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01032b7	obj/kernel.asm	/^c01032b7 <vector181>:$/;"	l
c01032b7	obj/kernel.asm	/^c01032b7:	6a 00                	push   $0x0$/;"	l
c01032b9	obj/kernel.asm	/^c01032b9:	68 b5 00 00 00       	push   $0xb5$/;"	l
c01032be	obj/kernel.asm	/^c01032be:	e9 78 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01032c3	obj/kernel.asm	/^c01032c3 <vector182>:$/;"	l
c01032c3	obj/kernel.asm	/^c01032c3:	6a 00                	push   $0x0$/;"	l
c01032c5	obj/kernel.asm	/^c01032c5:	68 b6 00 00 00       	push   $0xb6$/;"	l
c01032ca	obj/kernel.asm	/^c01032ca:	e9 6c 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01032cf	obj/kernel.asm	/^c01032cf <vector183>:$/;"	l
c01032cf	obj/kernel.asm	/^c01032cf:	6a 00                	push   $0x0$/;"	l
c01032d1	obj/kernel.asm	/^c01032d1:	68 b7 00 00 00       	push   $0xb7$/;"	l
c01032d6	obj/kernel.asm	/^c01032d6:	e9 60 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01032db	obj/kernel.asm	/^c01032db <vector184>:$/;"	l
c01032db	obj/kernel.asm	/^c01032db:	6a 00                	push   $0x0$/;"	l
c01032dd	obj/kernel.asm	/^c01032dd:	68 b8 00 00 00       	push   $0xb8$/;"	l
c01032e2	obj/kernel.asm	/^c01032e2:	e9 54 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01032e7	obj/kernel.asm	/^c01032e7 <vector185>:$/;"	l
c01032e7	obj/kernel.asm	/^c01032e7:	6a 00                	push   $0x0$/;"	l
c01032e9	obj/kernel.asm	/^c01032e9:	68 b9 00 00 00       	push   $0xb9$/;"	l
c01032ee	obj/kernel.asm	/^c01032ee:	e9 48 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01032f3	obj/kernel.asm	/^c01032f3 <vector186>:$/;"	l
c01032f3	obj/kernel.asm	/^c01032f3:	6a 00                	push   $0x0$/;"	l
c01032f5	obj/kernel.asm	/^c01032f5:	68 ba 00 00 00       	push   $0xba$/;"	l
c01032fa	obj/kernel.asm	/^c01032fa:	e9 3c 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01032ff	obj/kernel.asm	/^c01032ff <vector187>:$/;"	l
c01032ff	obj/kernel.asm	/^c01032ff:	6a 00                	push   $0x0$/;"	l
c0103301	obj/kernel.asm	/^c0103301:	68 bb 00 00 00       	push   $0xbb$/;"	l
c0103306	obj/kernel.asm	/^c0103306:	e9 30 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010330b	obj/kernel.asm	/^c010330b <vector188>:$/;"	l
c010330b	obj/kernel.asm	/^c010330b:	6a 00                	push   $0x0$/;"	l
c010330d	obj/kernel.asm	/^c010330d:	68 bc 00 00 00       	push   $0xbc$/;"	l
c0103312	obj/kernel.asm	/^c0103312:	e9 24 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103317	obj/kernel.asm	/^c0103317 <vector189>:$/;"	l
c0103317	obj/kernel.asm	/^c0103317:	6a 00                	push   $0x0$/;"	l
c0103319	obj/kernel.asm	/^c0103319:	68 bd 00 00 00       	push   $0xbd$/;"	l
c010331e	obj/kernel.asm	/^c010331e:	e9 18 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103323	obj/kernel.asm	/^c0103323 <vector190>:$/;"	l
c0103323	obj/kernel.asm	/^c0103323:	6a 00                	push   $0x0$/;"	l
c0103325	obj/kernel.asm	/^c0103325:	68 be 00 00 00       	push   $0xbe$/;"	l
c010332a	obj/kernel.asm	/^c010332a:	e9 0c 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010332f	obj/kernel.asm	/^c010332f <vector191>:$/;"	l
c010332f	obj/kernel.asm	/^c010332f:	6a 00                	push   $0x0$/;"	l
c0103331	obj/kernel.asm	/^c0103331:	68 bf 00 00 00       	push   $0xbf$/;"	l
c0103336	obj/kernel.asm	/^c0103336:	e9 00 03 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010333b	obj/kernel.asm	/^c010333b <vector192>:$/;"	l
c010333b	obj/kernel.asm	/^c010333b:	6a 00                	push   $0x0$/;"	l
c010333d	obj/kernel.asm	/^c010333d:	68 c0 00 00 00       	push   $0xc0$/;"	l
c0103342	obj/kernel.asm	/^c0103342:	e9 f4 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103347	obj/kernel.asm	/^c0103347 <vector193>:$/;"	l
c0103347	obj/kernel.asm	/^c0103347:	6a 00                	push   $0x0$/;"	l
c0103349	obj/kernel.asm	/^c0103349:	68 c1 00 00 00       	push   $0xc1$/;"	l
c010334e	obj/kernel.asm	/^c010334e:	e9 e8 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103353	obj/kernel.asm	/^c0103353 <vector194>:$/;"	l
c0103353	obj/kernel.asm	/^c0103353:	6a 00                	push   $0x0$/;"	l
c0103355	obj/kernel.asm	/^c0103355:	68 c2 00 00 00       	push   $0xc2$/;"	l
c010335a	obj/kernel.asm	/^c010335a:	e9 dc 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010335f	obj/kernel.asm	/^c010335f <vector195>:$/;"	l
c010335f	obj/kernel.asm	/^c010335f:	6a 00                	push   $0x0$/;"	l
c0103361	obj/kernel.asm	/^c0103361:	68 c3 00 00 00       	push   $0xc3$/;"	l
c0103366	obj/kernel.asm	/^c0103366:	e9 d0 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010336b	obj/kernel.asm	/^c010336b <vector196>:$/;"	l
c010336b	obj/kernel.asm	/^c010336b:	6a 00                	push   $0x0$/;"	l
c010336d	obj/kernel.asm	/^c010336d:	68 c4 00 00 00       	push   $0xc4$/;"	l
c0103372	obj/kernel.asm	/^c0103372:	e9 c4 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103377	obj/kernel.asm	/^c0103377 <vector197>:$/;"	l
c0103377	obj/kernel.asm	/^c0103377:	6a 00                	push   $0x0$/;"	l
c0103379	obj/kernel.asm	/^c0103379:	68 c5 00 00 00       	push   $0xc5$/;"	l
c010337e	obj/kernel.asm	/^c010337e:	e9 b8 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103383	obj/kernel.asm	/^c0103383 <vector198>:$/;"	l
c0103383	obj/kernel.asm	/^c0103383:	6a 00                	push   $0x0$/;"	l
c0103385	obj/kernel.asm	/^c0103385:	68 c6 00 00 00       	push   $0xc6$/;"	l
c010338a	obj/kernel.asm	/^c010338a:	e9 ac 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010338f	obj/kernel.asm	/^c010338f <vector199>:$/;"	l
c010338f	obj/kernel.asm	/^c010338f:	6a 00                	push   $0x0$/;"	l
c0103391	obj/kernel.asm	/^c0103391:	68 c7 00 00 00       	push   $0xc7$/;"	l
c0103396	obj/kernel.asm	/^c0103396:	e9 a0 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010339b	obj/kernel.asm	/^c010339b <vector200>:$/;"	l
c010339b	obj/kernel.asm	/^c010339b:	6a 00                	push   $0x0$/;"	l
c010339d	obj/kernel.asm	/^c010339d:	68 c8 00 00 00       	push   $0xc8$/;"	l
c01033a2	obj/kernel.asm	/^c01033a2:	e9 94 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01033a7	obj/kernel.asm	/^c01033a7 <vector201>:$/;"	l
c01033a7	obj/kernel.asm	/^c01033a7:	6a 00                	push   $0x0$/;"	l
c01033a9	obj/kernel.asm	/^c01033a9:	68 c9 00 00 00       	push   $0xc9$/;"	l
c01033ae	obj/kernel.asm	/^c01033ae:	e9 88 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01033b3	obj/kernel.asm	/^c01033b3 <vector202>:$/;"	l
c01033b3	obj/kernel.asm	/^c01033b3:	6a 00                	push   $0x0$/;"	l
c01033b5	obj/kernel.asm	/^c01033b5:	68 ca 00 00 00       	push   $0xca$/;"	l
c01033ba	obj/kernel.asm	/^c01033ba:	e9 7c 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01033bf	obj/kernel.asm	/^c01033bf <vector203>:$/;"	l
c01033bf	obj/kernel.asm	/^c01033bf:	6a 00                	push   $0x0$/;"	l
c01033c1	obj/kernel.asm	/^c01033c1:	68 cb 00 00 00       	push   $0xcb$/;"	l
c01033c6	obj/kernel.asm	/^c01033c6:	e9 70 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01033cb	obj/kernel.asm	/^c01033cb <vector204>:$/;"	l
c01033cb	obj/kernel.asm	/^c01033cb:	6a 00                	push   $0x0$/;"	l
c01033cd	obj/kernel.asm	/^c01033cd:	68 cc 00 00 00       	push   $0xcc$/;"	l
c01033d2	obj/kernel.asm	/^c01033d2:	e9 64 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01033d7	obj/kernel.asm	/^c01033d7 <vector205>:$/;"	l
c01033d7	obj/kernel.asm	/^c01033d7:	6a 00                	push   $0x0$/;"	l
c01033d9	obj/kernel.asm	/^c01033d9:	68 cd 00 00 00       	push   $0xcd$/;"	l
c01033de	obj/kernel.asm	/^c01033de:	e9 58 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01033e3	obj/kernel.asm	/^c01033e3 <vector206>:$/;"	l
c01033e3	obj/kernel.asm	/^c01033e3:	6a 00                	push   $0x0$/;"	l
c01033e5	obj/kernel.asm	/^c01033e5:	68 ce 00 00 00       	push   $0xce$/;"	l
c01033ea	obj/kernel.asm	/^c01033ea:	e9 4c 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01033ef	obj/kernel.asm	/^c01033ef <vector207>:$/;"	l
c01033ef	obj/kernel.asm	/^c01033ef:	6a 00                	push   $0x0$/;"	l
c01033f1	obj/kernel.asm	/^c01033f1:	68 cf 00 00 00       	push   $0xcf$/;"	l
c01033f6	obj/kernel.asm	/^c01033f6:	e9 40 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01033fb	obj/kernel.asm	/^c01033fb <vector208>:$/;"	l
c01033fb	obj/kernel.asm	/^c01033fb:	6a 00                	push   $0x0$/;"	l
c01033fd	obj/kernel.asm	/^c01033fd:	68 d0 00 00 00       	push   $0xd0$/;"	l
c0103402	obj/kernel.asm	/^c0103402:	e9 34 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103407	obj/kernel.asm	/^c0103407 <vector209>:$/;"	l
c0103407	obj/kernel.asm	/^c0103407:	6a 00                	push   $0x0$/;"	l
c0103409	obj/kernel.asm	/^c0103409:	68 d1 00 00 00       	push   $0xd1$/;"	l
c010340e	obj/kernel.asm	/^c010340e:	e9 28 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103413	obj/kernel.asm	/^c0103413 <vector210>:$/;"	l
c0103413	obj/kernel.asm	/^c0103413:	6a 00                	push   $0x0$/;"	l
c0103415	obj/kernel.asm	/^c0103415:	68 d2 00 00 00       	push   $0xd2$/;"	l
c010341a	obj/kernel.asm	/^c010341a:	e9 1c 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010341f	obj/kernel.asm	/^c010341f <vector211>:$/;"	l
c010341f	obj/kernel.asm	/^c010341f:	6a 00                	push   $0x0$/;"	l
c0103421	obj/kernel.asm	/^c0103421:	68 d3 00 00 00       	push   $0xd3$/;"	l
c0103426	obj/kernel.asm	/^c0103426:	e9 10 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010342b	obj/kernel.asm	/^c010342b <vector212>:$/;"	l
c010342b	obj/kernel.asm	/^c010342b:	6a 00                	push   $0x0$/;"	l
c010342d	obj/kernel.asm	/^c010342d:	68 d4 00 00 00       	push   $0xd4$/;"	l
c0103432	obj/kernel.asm	/^c0103432:	e9 04 02 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103437	obj/kernel.asm	/^c0103437 <vector213>:$/;"	l
c0103437	obj/kernel.asm	/^c0103437:	6a 00                	push   $0x0$/;"	l
c0103439	obj/kernel.asm	/^c0103439:	68 d5 00 00 00       	push   $0xd5$/;"	l
c010343e	obj/kernel.asm	/^c010343e:	e9 f8 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103443	obj/kernel.asm	/^c0103443 <vector214>:$/;"	l
c0103443	obj/kernel.asm	/^c0103443:	6a 00                	push   $0x0$/;"	l
c0103445	obj/kernel.asm	/^c0103445:	68 d6 00 00 00       	push   $0xd6$/;"	l
c010344a	obj/kernel.asm	/^c010344a:	e9 ec 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010344f	obj/kernel.asm	/^c010344f <vector215>:$/;"	l
c010344f	obj/kernel.asm	/^c010344f:	6a 00                	push   $0x0$/;"	l
c0103451	obj/kernel.asm	/^c0103451:	68 d7 00 00 00       	push   $0xd7$/;"	l
c0103456	obj/kernel.asm	/^c0103456:	e9 e0 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010345b	obj/kernel.asm	/^c010345b <vector216>:$/;"	l
c010345b	obj/kernel.asm	/^c010345b:	6a 00                	push   $0x0$/;"	l
c010345d	obj/kernel.asm	/^c010345d:	68 d8 00 00 00       	push   $0xd8$/;"	l
c0103462	obj/kernel.asm	/^c0103462:	e9 d4 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103467	obj/kernel.asm	/^c0103467 <vector217>:$/;"	l
c0103467	obj/kernel.asm	/^c0103467:	6a 00                	push   $0x0$/;"	l
c0103469	obj/kernel.asm	/^c0103469:	68 d9 00 00 00       	push   $0xd9$/;"	l
c010346e	obj/kernel.asm	/^c010346e:	e9 c8 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103473	obj/kernel.asm	/^c0103473 <vector218>:$/;"	l
c0103473	obj/kernel.asm	/^c0103473:	6a 00                	push   $0x0$/;"	l
c0103475	obj/kernel.asm	/^c0103475:	68 da 00 00 00       	push   $0xda$/;"	l
c010347a	obj/kernel.asm	/^c010347a:	e9 bc 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010347f	obj/kernel.asm	/^c010347f <vector219>:$/;"	l
c010347f	obj/kernel.asm	/^c010347f:	6a 00                	push   $0x0$/;"	l
c0103481	obj/kernel.asm	/^c0103481:	68 db 00 00 00       	push   $0xdb$/;"	l
c0103486	obj/kernel.asm	/^c0103486:	e9 b0 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010348b	obj/kernel.asm	/^c010348b <vector220>:$/;"	l
c010348b	obj/kernel.asm	/^c010348b:	6a 00                	push   $0x0$/;"	l
c010348d	obj/kernel.asm	/^c010348d:	68 dc 00 00 00       	push   $0xdc$/;"	l
c0103492	obj/kernel.asm	/^c0103492:	e9 a4 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103497	obj/kernel.asm	/^c0103497 <vector221>:$/;"	l
c0103497	obj/kernel.asm	/^c0103497:	6a 00                	push   $0x0$/;"	l
c0103499	obj/kernel.asm	/^c0103499:	68 dd 00 00 00       	push   $0xdd$/;"	l
c010349e	obj/kernel.asm	/^c010349e:	e9 98 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01034a3	obj/kernel.asm	/^c01034a3 <vector222>:$/;"	l
c01034a3	obj/kernel.asm	/^c01034a3:	6a 00                	push   $0x0$/;"	l
c01034a5	obj/kernel.asm	/^c01034a5:	68 de 00 00 00       	push   $0xde$/;"	l
c01034aa	obj/kernel.asm	/^c01034aa:	e9 8c 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01034af	obj/kernel.asm	/^c01034af <vector223>:$/;"	l
c01034af	obj/kernel.asm	/^c01034af:	6a 00                	push   $0x0$/;"	l
c01034b1	obj/kernel.asm	/^c01034b1:	68 df 00 00 00       	push   $0xdf$/;"	l
c01034b6	obj/kernel.asm	/^c01034b6:	e9 80 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01034bb	obj/kernel.asm	/^c01034bb <vector224>:$/;"	l
c01034bb	obj/kernel.asm	/^c01034bb:	6a 00                	push   $0x0$/;"	l
c01034bd	obj/kernel.asm	/^c01034bd:	68 e0 00 00 00       	push   $0xe0$/;"	l
c01034c2	obj/kernel.asm	/^c01034c2:	e9 74 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01034c7	obj/kernel.asm	/^c01034c7 <vector225>:$/;"	l
c01034c7	obj/kernel.asm	/^c01034c7:	6a 00                	push   $0x0$/;"	l
c01034c9	obj/kernel.asm	/^c01034c9:	68 e1 00 00 00       	push   $0xe1$/;"	l
c01034ce	obj/kernel.asm	/^c01034ce:	e9 68 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01034d3	obj/kernel.asm	/^c01034d3 <vector226>:$/;"	l
c01034d3	obj/kernel.asm	/^c01034d3:	6a 00                	push   $0x0$/;"	l
c01034d5	obj/kernel.asm	/^c01034d5:	68 e2 00 00 00       	push   $0xe2$/;"	l
c01034da	obj/kernel.asm	/^c01034da:	e9 5c 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01034df	obj/kernel.asm	/^c01034df <vector227>:$/;"	l
c01034df	obj/kernel.asm	/^c01034df:	6a 00                	push   $0x0$/;"	l
c01034e1	obj/kernel.asm	/^c01034e1:	68 e3 00 00 00       	push   $0xe3$/;"	l
c01034e6	obj/kernel.asm	/^c01034e6:	e9 50 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01034eb	obj/kernel.asm	/^c01034eb <vector228>:$/;"	l
c01034eb	obj/kernel.asm	/^c01034eb:	6a 00                	push   $0x0$/;"	l
c01034ed	obj/kernel.asm	/^c01034ed:	68 e4 00 00 00       	push   $0xe4$/;"	l
c01034f2	obj/kernel.asm	/^c01034f2:	e9 44 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01034f7	obj/kernel.asm	/^c01034f7 <vector229>:$/;"	l
c01034f7	obj/kernel.asm	/^c01034f7:	6a 00                	push   $0x0$/;"	l
c01034f9	obj/kernel.asm	/^c01034f9:	68 e5 00 00 00       	push   $0xe5$/;"	l
c01034fe	obj/kernel.asm	/^c01034fe:	e9 38 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103503	obj/kernel.asm	/^c0103503 <vector230>:$/;"	l
c0103503	obj/kernel.asm	/^c0103503:	6a 00                	push   $0x0$/;"	l
c0103505	obj/kernel.asm	/^c0103505:	68 e6 00 00 00       	push   $0xe6$/;"	l
c010350a	obj/kernel.asm	/^c010350a:	e9 2c 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010350f	obj/kernel.asm	/^c010350f <vector231>:$/;"	l
c010350f	obj/kernel.asm	/^c010350f:	6a 00                	push   $0x0$/;"	l
c0103511	obj/kernel.asm	/^c0103511:	68 e7 00 00 00       	push   $0xe7$/;"	l
c0103516	obj/kernel.asm	/^c0103516:	e9 20 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010351b	obj/kernel.asm	/^c010351b <vector232>:$/;"	l
c010351b	obj/kernel.asm	/^c010351b:	6a 00                	push   $0x0$/;"	l
c010351d	obj/kernel.asm	/^c010351d:	68 e8 00 00 00       	push   $0xe8$/;"	l
c0103522	obj/kernel.asm	/^c0103522:	e9 14 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103527	obj/kernel.asm	/^c0103527 <vector233>:$/;"	l
c0103527	obj/kernel.asm	/^c0103527:	6a 00                	push   $0x0$/;"	l
c0103529	obj/kernel.asm	/^c0103529:	68 e9 00 00 00       	push   $0xe9$/;"	l
c010352e	obj/kernel.asm	/^c010352e:	e9 08 01 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103533	obj/kernel.asm	/^c0103533 <vector234>:$/;"	l
c0103533	obj/kernel.asm	/^c0103533:	6a 00                	push   $0x0$/;"	l
c0103535	obj/kernel.asm	/^c0103535:	68 ea 00 00 00       	push   $0xea$/;"	l
c010353a	obj/kernel.asm	/^c010353a:	e9 fc 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010353f	obj/kernel.asm	/^c010353f <vector235>:$/;"	l
c010353f	obj/kernel.asm	/^c010353f:	6a 00                	push   $0x0$/;"	l
c0103541	obj/kernel.asm	/^c0103541:	68 eb 00 00 00       	push   $0xeb$/;"	l
c0103546	obj/kernel.asm	/^c0103546:	e9 f0 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010354b	obj/kernel.asm	/^c010354b <vector236>:$/;"	l
c010354b	obj/kernel.asm	/^c010354b:	6a 00                	push   $0x0$/;"	l
c010354d	obj/kernel.asm	/^c010354d:	68 ec 00 00 00       	push   $0xec$/;"	l
c0103552	obj/kernel.asm	/^c0103552:	e9 e4 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103557	obj/kernel.asm	/^c0103557 <vector237>:$/;"	l
c0103557	obj/kernel.asm	/^c0103557:	6a 00                	push   $0x0$/;"	l
c0103559	obj/kernel.asm	/^c0103559:	68 ed 00 00 00       	push   $0xed$/;"	l
c010355e	obj/kernel.asm	/^c010355e:	e9 d8 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103563	obj/kernel.asm	/^c0103563 <vector238>:$/;"	l
c0103563	obj/kernel.asm	/^c0103563:	6a 00                	push   $0x0$/;"	l
c0103565	obj/kernel.asm	/^c0103565:	68 ee 00 00 00       	push   $0xee$/;"	l
c010356a	obj/kernel.asm	/^c010356a:	e9 cc 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010356f	obj/kernel.asm	/^c010356f <vector239>:$/;"	l
c010356f	obj/kernel.asm	/^c010356f:	6a 00                	push   $0x0$/;"	l
c0103571	obj/kernel.asm	/^c0103571:	68 ef 00 00 00       	push   $0xef$/;"	l
c0103576	obj/kernel.asm	/^c0103576:	e9 c0 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010357b	obj/kernel.asm	/^c010357b <vector240>:$/;"	l
c010357b	obj/kernel.asm	/^c010357b:	6a 00                	push   $0x0$/;"	l
c010357d	obj/kernel.asm	/^c010357d:	68 f0 00 00 00       	push   $0xf0$/;"	l
c0103582	obj/kernel.asm	/^c0103582:	e9 b4 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103587	obj/kernel.asm	/^c0103587 <vector241>:$/;"	l
c0103587	obj/kernel.asm	/^c0103587:	6a 00                	push   $0x0$/;"	l
c0103589	obj/kernel.asm	/^c0103589:	68 f1 00 00 00       	push   $0xf1$/;"	l
c010358e	obj/kernel.asm	/^c010358e:	e9 a8 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103593	obj/kernel.asm	/^c0103593 <vector242>:$/;"	l
c0103593	obj/kernel.asm	/^c0103593:	6a 00                	push   $0x0$/;"	l
c0103595	obj/kernel.asm	/^c0103595:	68 f2 00 00 00       	push   $0xf2$/;"	l
c010359a	obj/kernel.asm	/^c010359a:	e9 9c 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010359f	obj/kernel.asm	/^c010359f <vector243>:$/;"	l
c010359f	obj/kernel.asm	/^c010359f:	6a 00                	push   $0x0$/;"	l
c01035a1	obj/kernel.asm	/^c01035a1:	68 f3 00 00 00       	push   $0xf3$/;"	l
c01035a6	obj/kernel.asm	/^c01035a6:	e9 90 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01035ab	obj/kernel.asm	/^c01035ab <vector244>:$/;"	l
c01035ab	obj/kernel.asm	/^c01035ab:	6a 00                	push   $0x0$/;"	l
c01035ad	obj/kernel.asm	/^c01035ad:	68 f4 00 00 00       	push   $0xf4$/;"	l
c01035b2	obj/kernel.asm	/^c01035b2:	e9 84 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01035b7	obj/kernel.asm	/^c01035b7 <vector245>:$/;"	l
c01035b7	obj/kernel.asm	/^c01035b7:	6a 00                	push   $0x0$/;"	l
c01035b9	obj/kernel.asm	/^c01035b9:	68 f5 00 00 00       	push   $0xf5$/;"	l
c01035be	obj/kernel.asm	/^c01035be:	e9 78 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01035c3	obj/kernel.asm	/^c01035c3 <vector246>:$/;"	l
c01035c3	obj/kernel.asm	/^c01035c3:	6a 00                	push   $0x0$/;"	l
c01035c5	obj/kernel.asm	/^c01035c5:	68 f6 00 00 00       	push   $0xf6$/;"	l
c01035ca	obj/kernel.asm	/^c01035ca:	e9 6c 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01035cf	obj/kernel.asm	/^c01035cf <vector247>:$/;"	l
c01035cf	obj/kernel.asm	/^c01035cf:	6a 00                	push   $0x0$/;"	l
c01035d1	obj/kernel.asm	/^c01035d1:	68 f7 00 00 00       	push   $0xf7$/;"	l
c01035d6	obj/kernel.asm	/^c01035d6:	e9 60 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01035db	obj/kernel.asm	/^c01035db <vector248>:$/;"	l
c01035db	obj/kernel.asm	/^c01035db:	6a 00                	push   $0x0$/;"	l
c01035dd	obj/kernel.asm	/^c01035dd:	68 f8 00 00 00       	push   $0xf8$/;"	l
c01035e2	obj/kernel.asm	/^c01035e2:	e9 54 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01035e7	obj/kernel.asm	/^c01035e7 <vector249>:$/;"	l
c01035e7	obj/kernel.asm	/^c01035e7:	6a 00                	push   $0x0$/;"	l
c01035e9	obj/kernel.asm	/^c01035e9:	68 f9 00 00 00       	push   $0xf9$/;"	l
c01035ee	obj/kernel.asm	/^c01035ee:	e9 48 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01035f3	obj/kernel.asm	/^c01035f3 <vector250>:$/;"	l
c01035f3	obj/kernel.asm	/^c01035f3:	6a 00                	push   $0x0$/;"	l
c01035f5	obj/kernel.asm	/^c01035f5:	68 fa 00 00 00       	push   $0xfa$/;"	l
c01035fa	obj/kernel.asm	/^c01035fa:	e9 3c 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c01035ff	obj/kernel.asm	/^c01035ff <vector251>:$/;"	l
c01035ff	obj/kernel.asm	/^c01035ff:	6a 00                	push   $0x0$/;"	l
c0103601	obj/kernel.asm	/^c0103601:	68 fb 00 00 00       	push   $0xfb$/;"	l
c0103606	obj/kernel.asm	/^c0103606:	e9 30 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010360b	obj/kernel.asm	/^c010360b <vector252>:$/;"	l
c010360b	obj/kernel.asm	/^c010360b:	6a 00                	push   $0x0$/;"	l
c010360d	obj/kernel.asm	/^c010360d:	68 fc 00 00 00       	push   $0xfc$/;"	l
c0103612	obj/kernel.asm	/^c0103612:	e9 24 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103617	obj/kernel.asm	/^c0103617 <vector253>:$/;"	l
c0103617	obj/kernel.asm	/^c0103617:	6a 00                	push   $0x0$/;"	l
c0103619	obj/kernel.asm	/^c0103619:	68 fd 00 00 00       	push   $0xfd$/;"	l
c010361e	obj/kernel.asm	/^c010361e:	e9 18 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c0103623	obj/kernel.asm	/^c0103623 <vector254>:$/;"	l
c0103623	obj/kernel.asm	/^c0103623:	6a 00                	push   $0x0$/;"	l
c0103625	obj/kernel.asm	/^c0103625:	68 fe 00 00 00       	push   $0xfe$/;"	l
c010362a	obj/kernel.asm	/^c010362a:	e9 0c 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010362f	obj/kernel.asm	/^c010362f <vector255>:$/;"	l
c010362f	obj/kernel.asm	/^c010362f:	6a 00                	push   $0x0$/;"	l
c0103631	obj/kernel.asm	/^c0103631:	68 ff 00 00 00       	push   $0xff$/;"	l
c0103636	obj/kernel.asm	/^c0103636:	e9 00 00 00 00       	jmp    c010363b <__alltraps>$/;"	l
c010363b	obj/kernel.asm	/^c010363b <__alltraps>:$/;"	l
c010363b	obj/kernel.asm	/^c010363b:	1e                   	push   %ds$/;"	l
c010363c	obj/kernel.asm	/^c010363c:	06                   	push   %es$/;"	l
c010363d	obj/kernel.asm	/^c010363d:	0f a0                	push   %fs$/;"	l
c010363f	obj/kernel.asm	/^c010363f:	0f a8                	push   %gs$/;"	l
c0103641	obj/kernel.asm	/^c0103641:	60                   	pusha  $/;"	l
c0103642	obj/kernel.asm	/^c0103642:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0103647	obj/kernel.asm	/^c0103647:	8e d8                	mov    %eax,%ds$/;"	l
c0103649	obj/kernel.asm	/^c0103649:	8e c0                	mov    %eax,%es$/;"	l
c010364b	obj/kernel.asm	/^c010364b:	54                   	push   %esp$/;"	l
c010364c	obj/kernel.asm	/^c010364c:	e8 e6 f4 ff ff       	call   c0102b37 <trap>$/;"	l
c0103651	obj/kernel.asm	/^c0103651:	5c                   	pop    %esp$/;"	l
c0103652	obj/kernel.asm	/^c0103652 <__trapret>:$/;"	l
c0103652	obj/kernel.asm	/^c0103652:	61                   	popa   $/;"	l
c0103653	obj/kernel.asm	/^c0103653:	0f a9                	pop    %gs$/;"	l
c0103655	obj/kernel.asm	/^c0103655:	0f a1                	pop    %fs$/;"	l
c0103657	obj/kernel.asm	/^c0103657:	07                   	pop    %es$/;"	l
c0103658	obj/kernel.asm	/^c0103658:	1f                   	pop    %ds$/;"	l
c0103659	obj/kernel.asm	/^c0103659:	83 c4 08             	add    $0x8,%esp$/;"	l
c010365c	obj/kernel.asm	/^c010365c:	cf                   	iret   $/;"	l
c010365d	obj/kernel.asm	/^c010365d <forkrets>:$/;"	l
c010365d	obj/kernel.asm	/^c010365d:	8b 64 24 04          	mov    0x4(%esp),%esp$/;"	l
c0103661	obj/kernel.asm	/^c0103661:	e9 ec ff ff ff       	jmp    c0103652 <__trapret>$/;"	l
c0103666	obj/kernel.asm	/^c0103666 <page2ppn>:$/;"	l
c0103666	obj/kernel.asm	/^c0103666:	55                   	push   %ebp$/;"	l
c0103667	obj/kernel.asm	/^c0103667:	89 e5                	mov    %esp,%ebp$/;"	l
c0103669	obj/kernel.asm	/^c0103669:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010366c	obj/kernel.asm	/^c010366c:	8b 15 98 e0 19 c0    	mov    0xc019e098,%edx$/;"	l
c0103672	obj/kernel.asm	/^c0103672:	29 d0                	sub    %edx,%eax$/;"	l
c0103674	obj/kernel.asm	/^c0103674:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0103677	obj/kernel.asm	/^c0103677:	5d                   	pop    %ebp$/;"	l
c0103678	obj/kernel.asm	/^c0103678:	c3                   	ret    $/;"	l
c0103679	obj/kernel.asm	/^c0103679 <page2pa>:$/;"	l
c0103679	obj/kernel.asm	/^c0103679:	55                   	push   %ebp$/;"	l
c010367a	obj/kernel.asm	/^c010367a:	89 e5                	mov    %esp,%ebp$/;"	l
c010367c	obj/kernel.asm	/^c010367c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010367f	obj/kernel.asm	/^c010367f:	e8 e2 ff ff ff       	call   c0103666 <page2ppn>$/;"	l
c0103684	obj/kernel.asm	/^c0103684:	83 c4 04             	add    $0x4,%esp$/;"	l
c0103687	obj/kernel.asm	/^c0103687:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010368a	obj/kernel.asm	/^c010368a:	c9                   	leave  $/;"	l
c010368b	obj/kernel.asm	/^c010368b:	c3                   	ret    $/;"	l
c010368c	obj/kernel.asm	/^c010368c <pa2page>:$/;"	l
c010368c	obj/kernel.asm	/^c010368c:	55                   	push   %ebp$/;"	l
c010368d	obj/kernel.asm	/^c010368d:	89 e5                	mov    %esp,%ebp$/;"	l
c010368f	obj/kernel.asm	/^c010368f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103692	obj/kernel.asm	/^c0103692:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103695	obj/kernel.asm	/^c0103695:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0103698	obj/kernel.asm	/^c0103698:	89 c2                	mov    %eax,%edx$/;"	l
c010369a	obj/kernel.asm	/^c010369a:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c010369f	obj/kernel.asm	/^c010369f:	39 c2                	cmp    %eax,%edx$/;"	l
c01036a1	obj/kernel.asm	/^c01036a1:	72 14                	jb     c01036b7 <pa2page+0x2b>$/;"	l
c01036a3	obj/kernel.asm	/^c01036a3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01036a6	obj/kernel.asm	/^c01036a6:	68 90 bd 10 c0       	push   $0xc010bd90$/;"	l
c01036ab	obj/kernel.asm	/^c01036ab:	6a 5e                	push   $0x5e$/;"	l
c01036ad	obj/kernel.asm	/^c01036ad:	68 af bd 10 c0       	push   $0xc010bdaf$/;"	l
c01036b2	obj/kernel.asm	/^c01036b2:	e8 23 cd ff ff       	call   c01003da <__panic>$/;"	l
c01036b7	obj/kernel.asm	/^c01036b7:	a1 98 e0 19 c0       	mov    0xc019e098,%eax$/;"	l
c01036bc	obj/kernel.asm	/^c01036bc:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01036bf	obj/kernel.asm	/^c01036bf:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c01036c2	obj/kernel.asm	/^c01036c2:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c01036c5	obj/kernel.asm	/^c01036c5:	01 d0                	add    %edx,%eax$/;"	l
c01036c7	obj/kernel.asm	/^c01036c7:	c9                   	leave  $/;"	l
c01036c8	obj/kernel.asm	/^c01036c8:	c3                   	ret    $/;"	l
c01036c9	obj/kernel.asm	/^c01036c9 <page2kva>:$/;"	l
c01036c9	obj/kernel.asm	/^c01036c9:	55                   	push   %ebp$/;"	l
c01036ca	obj/kernel.asm	/^c01036ca:	89 e5                	mov    %esp,%ebp$/;"	l
c01036cc	obj/kernel.asm	/^c01036cc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01036cf	obj/kernel.asm	/^c01036cf:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01036d2	obj/kernel.asm	/^c01036d2:	e8 a2 ff ff ff       	call   c0103679 <page2pa>$/;"	l
c01036d7	obj/kernel.asm	/^c01036d7:	83 c4 04             	add    $0x4,%esp$/;"	l
c01036da	obj/kernel.asm	/^c01036da:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01036dd	obj/kernel.asm	/^c01036dd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01036e0	obj/kernel.asm	/^c01036e0:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01036e3	obj/kernel.asm	/^c01036e3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01036e6	obj/kernel.asm	/^c01036e6:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c01036eb	obj/kernel.asm	/^c01036eb:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c01036ee	obj/kernel.asm	/^c01036ee:	72 14                	jb     c0103704 <page2kva+0x3b>$/;"	l
c01036f0	obj/kernel.asm	/^c01036f0:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01036f3	obj/kernel.asm	/^c01036f3:	68 c0 bd 10 c0       	push   $0xc010bdc0$/;"	l
c01036f8	obj/kernel.asm	/^c01036f8:	6a 65                	push   $0x65$/;"	l
c01036fa	obj/kernel.asm	/^c01036fa:	68 af bd 10 c0       	push   $0xc010bdaf$/;"	l
c01036ff	obj/kernel.asm	/^c01036ff:	e8 d6 cc ff ff       	call   c01003da <__panic>$/;"	l
c0103704	obj/kernel.asm	/^c0103704:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103707	obj/kernel.asm	/^c0103707:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c010370c	obj/kernel.asm	/^c010370c:	c9                   	leave  $/;"	l
c010370d	obj/kernel.asm	/^c010370d:	c3                   	ret    $/;"	l
c010370e	obj/kernel.asm	/^c010370e <pte2page>:$/;"	l
c010370e	obj/kernel.asm	/^c010370e:	55                   	push   %ebp$/;"	l
c010370f	obj/kernel.asm	/^c010370f:	89 e5                	mov    %esp,%ebp$/;"	l
c0103711	obj/kernel.asm	/^c0103711:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103714	obj/kernel.asm	/^c0103714:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103717	obj/kernel.asm	/^c0103717:	83 e0 01             	and    $0x1,%eax$/;"	l
c010371a	obj/kernel.asm	/^c010371a:	85 c0                	test   %eax,%eax$/;"	l
c010371c	obj/kernel.asm	/^c010371c:	75 14                	jne    c0103732 <pte2page+0x24>$/;"	l
c010371e	obj/kernel.asm	/^c010371e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103721	obj/kernel.asm	/^c0103721:	68 e4 bd 10 c0       	push   $0xc010bde4$/;"	l
c0103726	obj/kernel.asm	/^c0103726:	6a 70                	push   $0x70$/;"	l
c0103728	obj/kernel.asm	/^c0103728:	68 af bd 10 c0       	push   $0xc010bdaf$/;"	l
c010372d	obj/kernel.asm	/^c010372d:	e8 a8 cc ff ff       	call   c01003da <__panic>$/;"	l
c0103732	obj/kernel.asm	/^c0103732:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103735	obj/kernel.asm	/^c0103735:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010373a	obj/kernel.asm	/^c010373a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010373d	obj/kernel.asm	/^c010373d:	50                   	push   %eax$/;"	l
c010373e	obj/kernel.asm	/^c010373e:	e8 49 ff ff ff       	call   c010368c <pa2page>$/;"	l
c0103743	obj/kernel.asm	/^c0103743:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103746	obj/kernel.asm	/^c0103746:	c9                   	leave  $/;"	l
c0103747	obj/kernel.asm	/^c0103747:	c3                   	ret    $/;"	l
c0103748	obj/kernel.asm	/^c0103748 <pde2page>:$/;"	l
c0103748	obj/kernel.asm	/^c0103748:	55                   	push   %ebp$/;"	l
c0103749	obj/kernel.asm	/^c0103749:	89 e5                	mov    %esp,%ebp$/;"	l
c010374b	obj/kernel.asm	/^c010374b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010374e	obj/kernel.asm	/^c010374e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103751	obj/kernel.asm	/^c0103751:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0103756	obj/kernel.asm	/^c0103756:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103759	obj/kernel.asm	/^c0103759:	50                   	push   %eax$/;"	l
c010375a	obj/kernel.asm	/^c010375a:	e8 2d ff ff ff       	call   c010368c <pa2page>$/;"	l
c010375f	obj/kernel.asm	/^c010375f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103762	obj/kernel.asm	/^c0103762:	c9                   	leave  $/;"	l
c0103763	obj/kernel.asm	/^c0103763:	c3                   	ret    $/;"	l
c0103764	obj/kernel.asm	/^c0103764 <page_ref>:$/;"	l
c0103764	obj/kernel.asm	/^c0103764:	55                   	push   %ebp$/;"	l
c0103765	obj/kernel.asm	/^c0103765:	89 e5                	mov    %esp,%ebp$/;"	l
c0103767	obj/kernel.asm	/^c0103767:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010376a	obj/kernel.asm	/^c010376a:	8b 00                	mov    (%eax),%eax$/;"	l
c010376c	obj/kernel.asm	/^c010376c:	5d                   	pop    %ebp$/;"	l
c010376d	obj/kernel.asm	/^c010376d:	c3                   	ret    $/;"	l
c010376e	obj/kernel.asm	/^c010376e <set_page_ref>:$/;"	l
c010376e	obj/kernel.asm	/^c010376e:	55                   	push   %ebp$/;"	l
c010376f	obj/kernel.asm	/^c010376f:	89 e5                	mov    %esp,%ebp$/;"	l
c0103771	obj/kernel.asm	/^c0103771:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103774	obj/kernel.asm	/^c0103774:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0103777	obj/kernel.asm	/^c0103777:	89 10                	mov    %edx,(%eax)$/;"	l
c0103779	obj/kernel.asm	/^c0103779:	5d                   	pop    %ebp$/;"	l
c010377a	obj/kernel.asm	/^c010377a:	c3                   	ret    $/;"	l
c010377b	obj/kernel.asm	/^c010377b <page_ref_inc>:$/;"	l
c010377b	obj/kernel.asm	/^c010377b:	55                   	push   %ebp$/;"	l
c010377c	obj/kernel.asm	/^c010377c:	89 e5                	mov    %esp,%ebp$/;"	l
c010377e	obj/kernel.asm	/^c010377e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103781	obj/kernel.asm	/^c0103781:	8b 00                	mov    (%eax),%eax$/;"	l
c0103783	obj/kernel.asm	/^c0103783:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0103786	obj/kernel.asm	/^c0103786:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103789	obj/kernel.asm	/^c0103789:	89 10                	mov    %edx,(%eax)$/;"	l
c010378b	obj/kernel.asm	/^c010378b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010378e	obj/kernel.asm	/^c010378e:	8b 00                	mov    (%eax),%eax$/;"	l
c0103790	obj/kernel.asm	/^c0103790:	5d                   	pop    %ebp$/;"	l
c0103791	obj/kernel.asm	/^c0103791:	c3                   	ret    $/;"	l
c0103792	obj/kernel.asm	/^c0103792 <page_ref_dec>:$/;"	l
c0103792	obj/kernel.asm	/^c0103792:	55                   	push   %ebp$/;"	l
c0103793	obj/kernel.asm	/^c0103793:	89 e5                	mov    %esp,%ebp$/;"	l
c0103795	obj/kernel.asm	/^c0103795:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103798	obj/kernel.asm	/^c0103798:	8b 00                	mov    (%eax),%eax$/;"	l
c010379a	obj/kernel.asm	/^c010379a:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010379d	obj/kernel.asm	/^c010379d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01037a0	obj/kernel.asm	/^c01037a0:	89 10                	mov    %edx,(%eax)$/;"	l
c01037a2	obj/kernel.asm	/^c01037a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01037a5	obj/kernel.asm	/^c01037a5:	8b 00                	mov    (%eax),%eax$/;"	l
c01037a7	obj/kernel.asm	/^c01037a7:	5d                   	pop    %ebp$/;"	l
c01037a8	obj/kernel.asm	/^c01037a8:	c3                   	ret    $/;"	l
c01037a9	obj/kernel.asm	/^c01037a9 <__intr_save>:$/;"	l
c01037a9	obj/kernel.asm	/^c01037a9:	55                   	push   %ebp$/;"	l
c01037aa	obj/kernel.asm	/^c01037aa:	89 e5                	mov    %esp,%ebp$/;"	l
c01037ac	obj/kernel.asm	/^c01037ac:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01037af	obj/kernel.asm	/^c01037af:	9c                   	pushf  $/;"	l
c01037b0	obj/kernel.asm	/^c01037b0:	58                   	pop    %eax$/;"	l
c01037b1	obj/kernel.asm	/^c01037b1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01037b4	obj/kernel.asm	/^c01037b4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01037b7	obj/kernel.asm	/^c01037b7:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c01037bc	obj/kernel.asm	/^c01037bc:	85 c0                	test   %eax,%eax$/;"	l
c01037be	obj/kernel.asm	/^c01037be:	74 0c                	je     c01037cc <__intr_save+0x23>$/;"	l
c01037c0	obj/kernel.asm	/^c01037c0:	e8 d8 e8 ff ff       	call   c010209d <intr_disable>$/;"	l
c01037c5	obj/kernel.asm	/^c01037c5:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01037ca	obj/kernel.asm	/^c01037ca:	eb 05                	jmp    c01037d1 <__intr_save+0x28>$/;"	l
c01037cc	obj/kernel.asm	/^c01037cc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01037d1	obj/kernel.asm	/^c01037d1:	c9                   	leave  $/;"	l
c01037d2	obj/kernel.asm	/^c01037d2:	c3                   	ret    $/;"	l
c01037d3	obj/kernel.asm	/^c01037d3 <__intr_restore>:$/;"	l
c01037d3	obj/kernel.asm	/^c01037d3:	55                   	push   %ebp$/;"	l
c01037d4	obj/kernel.asm	/^c01037d4:	89 e5                	mov    %esp,%ebp$/;"	l
c01037d6	obj/kernel.asm	/^c01037d6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01037d9	obj/kernel.asm	/^c01037d9:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01037dd	obj/kernel.asm	/^c01037dd:	74 05                	je     c01037e4 <__intr_restore+0x11>$/;"	l
c01037df	obj/kernel.asm	/^c01037df:	e8 b3 e8 ff ff       	call   c0102097 <intr_enable>$/;"	l
c01037e4	obj/kernel.asm	/^c01037e4:	c9                   	leave  $/;"	l
c01037e5	obj/kernel.asm	/^c01037e5:	c3                   	ret    $/;"	l
c01037e6	obj/kernel.asm	/^c01037e6 <lgdt>:$/;"	l
c01037e6	obj/kernel.asm	/^c01037e6:	55                   	push   %ebp$/;"	l
c01037e7	obj/kernel.asm	/^c01037e7:	89 e5                	mov    %esp,%ebp$/;"	l
c01037e9	obj/kernel.asm	/^c01037e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01037ec	obj/kernel.asm	/^c01037ec:	0f 01 10             	lgdtl  (%eax)$/;"	l
c01037ef	obj/kernel.asm	/^c01037ef:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c01037f4	obj/kernel.asm	/^c01037f4:	8e e8                	mov    %eax,%gs$/;"	l
c01037f6	obj/kernel.asm	/^c01037f6:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c01037fb	obj/kernel.asm	/^c01037fb:	8e e0                	mov    %eax,%fs$/;"	l
c01037fd	obj/kernel.asm	/^c01037fd:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0103802	obj/kernel.asm	/^c0103802:	8e c0                	mov    %eax,%es$/;"	l
c0103804	obj/kernel.asm	/^c0103804:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0103809	obj/kernel.asm	/^c0103809:	8e d8                	mov    %eax,%ds$/;"	l
c010380b	obj/kernel.asm	/^c010380b:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0103810	obj/kernel.asm	/^c0103810:	8e d0                	mov    %eax,%ss$/;"	l
c0103812	obj/kernel.asm	/^c0103812:	ea 19 38 10 c0 08 00 	ljmp   $0x8,$0xc0103819$/;"	l
c0103819	obj/kernel.asm	/^c0103819:	5d                   	pop    %ebp$/;"	l
c010381a	obj/kernel.asm	/^c010381a:	c3                   	ret    $/;"	l
c010381b	obj/kernel.asm	/^c010381b <load_esp0>:$/;"	l
c010381b	obj/kernel.asm	/^c010381b:	55                   	push   %ebp$/;"	l
c010381c	obj/kernel.asm	/^c010381c:	89 e5                	mov    %esp,%ebp$/;"	l
c010381e	obj/kernel.asm	/^c010381e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103821	obj/kernel.asm	/^c0103821:	a3 44 bf 19 c0       	mov    %eax,0xc019bf44$/;"	l
c0103826	obj/kernel.asm	/^c0103826:	5d                   	pop    %ebp$/;"	l
c0103827	obj/kernel.asm	/^c0103827:	c3                   	ret    $/;"	l
c0103828	obj/kernel.asm	/^c0103828 <gdt_init>:$/;"	l
c0103828	obj/kernel.asm	/^c0103828:	55                   	push   %ebp$/;"	l
c0103829	obj/kernel.asm	/^c0103829:	89 e5                	mov    %esp,%ebp$/;"	l
c010382b	obj/kernel.asm	/^c010382b:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010382e	obj/kernel.asm	/^c010382e:	b8 00 90 12 c0       	mov    $0xc0129000,%eax$/;"	l
c0103833	obj/kernel.asm	/^c0103833:	50                   	push   %eax$/;"	l
c0103834	obj/kernel.asm	/^c0103834:	e8 e2 ff ff ff       	call   c010381b <load_esp0>$/;"	l
c0103839	obj/kernel.asm	/^c0103839:	83 c4 04             	add    $0x4,%esp$/;"	l
c010383c	obj/kernel.asm	/^c010383c:	66 c7 05 48 bf 19 c0 	movw   $0x10,0xc019bf48$/;"	l
c0103843	obj/kernel.asm	/^c0103843:	10 00 $/;"	l
c0103845	obj/kernel.asm	/^c0103845:	66 c7 05 88 9a 12 c0 	movw   $0x68,0xc0129a88$/;"	l
c010384c	obj/kernel.asm	/^c010384c:	68 00 $/;"	l
c010384e	obj/kernel.asm	/^c010384e:	b8 40 bf 19 c0       	mov    $0xc019bf40,%eax$/;"	l
c0103853	obj/kernel.asm	/^c0103853:	66 a3 8a 9a 12 c0    	mov    %ax,0xc0129a8a$/;"	l
c0103859	obj/kernel.asm	/^c0103859:	b8 40 bf 19 c0       	mov    $0xc019bf40,%eax$/;"	l
c010385e	obj/kernel.asm	/^c010385e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0103861	obj/kernel.asm	/^c0103861:	a2 8c 9a 12 c0       	mov    %al,0xc0129a8c$/;"	l
c0103866	obj/kernel.asm	/^c0103866:	0f b6 05 8d 9a 12 c0 	movzbl 0xc0129a8d,%eax$/;"	l
c010386d	obj/kernel.asm	/^c010386d:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c0103870	obj/kernel.asm	/^c0103870:	83 c8 09             	or     $0x9,%eax$/;"	l
c0103873	obj/kernel.asm	/^c0103873:	a2 8d 9a 12 c0       	mov    %al,0xc0129a8d$/;"	l
c0103878	obj/kernel.asm	/^c0103878:	0f b6 05 8d 9a 12 c0 	movzbl 0xc0129a8d,%eax$/;"	l
c010387f	obj/kernel.asm	/^c010387f:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c0103882	obj/kernel.asm	/^c0103882:	a2 8d 9a 12 c0       	mov    %al,0xc0129a8d$/;"	l
c0103887	obj/kernel.asm	/^c0103887:	0f b6 05 8d 9a 12 c0 	movzbl 0xc0129a8d,%eax$/;"	l
c010388e	obj/kernel.asm	/^c010388e:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
c0103891	obj/kernel.asm	/^c0103891:	a2 8d 9a 12 c0       	mov    %al,0xc0129a8d$/;"	l
c0103896	obj/kernel.asm	/^c0103896:	0f b6 05 8d 9a 12 c0 	movzbl 0xc0129a8d,%eax$/;"	l
c010389d	obj/kernel.asm	/^c010389d:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c01038a0	obj/kernel.asm	/^c01038a0:	a2 8d 9a 12 c0       	mov    %al,0xc0129a8d$/;"	l
c01038a5	obj/kernel.asm	/^c01038a5:	0f b6 05 8e 9a 12 c0 	movzbl 0xc0129a8e,%eax$/;"	l
c01038ac	obj/kernel.asm	/^c01038ac:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c01038af	obj/kernel.asm	/^c01038af:	a2 8e 9a 12 c0       	mov    %al,0xc0129a8e$/;"	l
c01038b4	obj/kernel.asm	/^c01038b4:	0f b6 05 8e 9a 12 c0 	movzbl 0xc0129a8e,%eax$/;"	l
c01038bb	obj/kernel.asm	/^c01038bb:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c01038be	obj/kernel.asm	/^c01038be:	a2 8e 9a 12 c0       	mov    %al,0xc0129a8e$/;"	l
c01038c3	obj/kernel.asm	/^c01038c3:	0f b6 05 8e 9a 12 c0 	movzbl 0xc0129a8e,%eax$/;"	l
c01038ca	obj/kernel.asm	/^c01038ca:	83 e0 df             	and    $0xffffffdf,%eax$/;"	l
c01038cd	obj/kernel.asm	/^c01038cd:	a2 8e 9a 12 c0       	mov    %al,0xc0129a8e$/;"	l
c01038d2	obj/kernel.asm	/^c01038d2:	0f b6 05 8e 9a 12 c0 	movzbl 0xc0129a8e,%eax$/;"	l
c01038d9	obj/kernel.asm	/^c01038d9:	83 c8 40             	or     $0x40,%eax$/;"	l
c01038dc	obj/kernel.asm	/^c01038dc:	a2 8e 9a 12 c0       	mov    %al,0xc0129a8e$/;"	l
c01038e1	obj/kernel.asm	/^c01038e1:	0f b6 05 8e 9a 12 c0 	movzbl 0xc0129a8e,%eax$/;"	l
c01038e8	obj/kernel.asm	/^c01038e8:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c01038eb	obj/kernel.asm	/^c01038eb:	a2 8e 9a 12 c0       	mov    %al,0xc0129a8e$/;"	l
c01038f0	obj/kernel.asm	/^c01038f0:	b8 40 bf 19 c0       	mov    $0xc019bf40,%eax$/;"	l
c01038f5	obj/kernel.asm	/^c01038f5:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c01038f8	obj/kernel.asm	/^c01038f8:	a2 8f 9a 12 c0       	mov    %al,0xc0129a8f$/;"	l
c01038fd	obj/kernel.asm	/^c01038fd:	68 90 9a 12 c0       	push   $0xc0129a90$/;"	l
c0103902	obj/kernel.asm	/^c0103902:	e8 df fe ff ff       	call   c01037e6 <lgdt>$/;"	l
c0103907	obj/kernel.asm	/^c0103907:	83 c4 04             	add    $0x4,%esp$/;"	l
c010390a	obj/kernel.asm	/^c010390a:	66 c7 45 fe 28 00    	movw   $0x28,-0x2(%ebp)$/;"	l
c0103910	obj/kernel.asm	/^c0103910:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c0103914	obj/kernel.asm	/^c0103914:	0f 00 d8             	ltr    %ax$/;"	l
c0103917	obj/kernel.asm	/^c0103917:	c9                   	leave  $/;"	l
c0103918	obj/kernel.asm	/^c0103918:	c3                   	ret    $/;"	l
c0103919	obj/kernel.asm	/^c0103919 <init_pmm_manager>:$/;"	l
c0103919	obj/kernel.asm	/^c0103919:	55                   	push   %ebp$/;"	l
c010391a	obj/kernel.asm	/^c010391a:	89 e5                	mov    %esp,%ebp$/;"	l
c010391c	obj/kernel.asm	/^c010391c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010391f	obj/kernel.asm	/^c010391f:	c7 05 90 e0 19 c0 e4 	movl   $0xc010d3e4,0xc019e090$/;"	l
c0103926	obj/kernel.asm	/^c0103926:	d3 10 c0 $/;"	d
c0103929	obj/kernel.asm	/^c0103929:	a1 90 e0 19 c0       	mov    0xc019e090,%eax$/;"	l
c010392e	obj/kernel.asm	/^c010392e:	8b 00                	mov    (%eax),%eax$/;"	l
c0103930	obj/kernel.asm	/^c0103930:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103933	obj/kernel.asm	/^c0103933:	50                   	push   %eax$/;"	l
c0103934	obj/kernel.asm	/^c0103934:	68 10 be 10 c0       	push   $0xc010be10$/;"	l
c0103939	obj/kernel.asm	/^c0103939:	e8 37 c9 ff ff       	call   c0100275 <cprintf>$/;"	l
c010393e	obj/kernel.asm	/^c010393e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103941	obj/kernel.asm	/^c0103941:	a1 90 e0 19 c0       	mov    0xc019e090,%eax$/;"	l
c0103946	obj/kernel.asm	/^c0103946:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103949	obj/kernel.asm	/^c0103949:	ff d0                	call   *%eax$/;"	l
c010394b	obj/kernel.asm	/^c010394b:	c9                   	leave  $/;"	l
c010394c	obj/kernel.asm	/^c010394c:	c3                   	ret    $/;"	l
c010394d	obj/kernel.asm	/^c010394d <init_memmap>:$/;"	l
c010394d	obj/kernel.asm	/^c010394d:	55                   	push   %ebp$/;"	l
c010394e	obj/kernel.asm	/^c010394e:	89 e5                	mov    %esp,%ebp$/;"	l
c0103950	obj/kernel.asm	/^c0103950:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103953	obj/kernel.asm	/^c0103953:	a1 90 e0 19 c0       	mov    0xc019e090,%eax$/;"	l
c0103958	obj/kernel.asm	/^c0103958:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010395b	obj/kernel.asm	/^c010395b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010395e	obj/kernel.asm	/^c010395e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0103961	obj/kernel.asm	/^c0103961:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0103964	obj/kernel.asm	/^c0103964:	ff d0                	call   *%eax$/;"	l
c0103966	obj/kernel.asm	/^c0103966:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103969	obj/kernel.asm	/^c0103969:	c9                   	leave  $/;"	l
c010396a	obj/kernel.asm	/^c010396a:	c3                   	ret    $/;"	l
c010396b	obj/kernel.asm	/^c010396b <alloc_pages>:$/;"	l
c010396b	obj/kernel.asm	/^c010396b:	55                   	push   %ebp$/;"	l
c010396c	obj/kernel.asm	/^c010396c:	89 e5                	mov    %esp,%ebp$/;"	l
c010396e	obj/kernel.asm	/^c010396e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103971	obj/kernel.asm	/^c0103971:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0103978	obj/kernel.asm	/^c0103978:	e8 2c fe ff ff       	call   c01037a9 <__intr_save>$/;"	l
c010397d	obj/kernel.asm	/^c010397d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103980	obj/kernel.asm	/^c0103980:	a1 90 e0 19 c0       	mov    0xc019e090,%eax$/;"	l
c0103985	obj/kernel.asm	/^c0103985:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0103988	obj/kernel.asm	/^c0103988:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010398b	obj/kernel.asm	/^c010398b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010398e	obj/kernel.asm	/^c010398e:	ff d0                	call   *%eax$/;"	l
c0103990	obj/kernel.asm	/^c0103990:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103993	obj/kernel.asm	/^c0103993:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103996	obj/kernel.asm	/^c0103996:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103999	obj/kernel.asm	/^c0103999:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010399c	obj/kernel.asm	/^c010399c:	e8 32 fe ff ff       	call   c01037d3 <__intr_restore>$/;"	l
c01039a1	obj/kernel.asm	/^c01039a1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01039a4	obj/kernel.asm	/^c01039a4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01039a8	obj/kernel.asm	/^c01039a8:	75 28                	jne    c01039d2 <alloc_pages+0x67>$/;"	l
c01039aa	obj/kernel.asm	/^c01039aa:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
c01039ae	obj/kernel.asm	/^c01039ae:	77 22                	ja     c01039d2 <alloc_pages+0x67>$/;"	l
c01039b0	obj/kernel.asm	/^c01039b0:	a1 b0 bf 19 c0       	mov    0xc019bfb0,%eax$/;"	l
c01039b5	obj/kernel.asm	/^c01039b5:	85 c0                	test   %eax,%eax$/;"	l
c01039b7	obj/kernel.asm	/^c01039b7:	74 19                	je     c01039d2 <alloc_pages+0x67>$/;"	l
c01039b9	obj/kernel.asm	/^c01039b9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01039bc	obj/kernel.asm	/^c01039bc:	a1 9c e0 19 c0       	mov    0xc019e09c,%eax$/;"	l
c01039c1	obj/kernel.asm	/^c01039c1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01039c4	obj/kernel.asm	/^c01039c4:	6a 00                	push   $0x0$/;"	l
c01039c6	obj/kernel.asm	/^c01039c6:	52                   	push   %edx$/;"	l
c01039c7	obj/kernel.asm	/^c01039c7:	50                   	push   %eax$/;"	l
c01039c8	obj/kernel.asm	/^c01039c8:	e8 98 2a 00 00       	call   c0106465 <swap_out>$/;"	l
c01039cd	obj/kernel.asm	/^c01039cd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01039d0	obj/kernel.asm	/^c01039d0:	eb a6                	jmp    c0103978 <alloc_pages+0xd>$/;"	l
c01039d2	obj/kernel.asm	/^c01039d2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01039d5	obj/kernel.asm	/^c01039d5:	c9                   	leave  $/;"	l
c01039d6	obj/kernel.asm	/^c01039d6:	c3                   	ret    $/;"	l
c01039d7	obj/kernel.asm	/^c01039d7 <free_pages>:$/;"	l
c01039d7	obj/kernel.asm	/^c01039d7:	55                   	push   %ebp$/;"	l
c01039d8	obj/kernel.asm	/^c01039d8:	89 e5                	mov    %esp,%ebp$/;"	l
c01039da	obj/kernel.asm	/^c01039da:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01039dd	obj/kernel.asm	/^c01039dd:	e8 c7 fd ff ff       	call   c01037a9 <__intr_save>$/;"	l
c01039e2	obj/kernel.asm	/^c01039e2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01039e5	obj/kernel.asm	/^c01039e5:	a1 90 e0 19 c0       	mov    0xc019e090,%eax$/;"	l
c01039ea	obj/kernel.asm	/^c01039ea:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01039ed	obj/kernel.asm	/^c01039ed:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01039f0	obj/kernel.asm	/^c01039f0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01039f3	obj/kernel.asm	/^c01039f3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01039f6	obj/kernel.asm	/^c01039f6:	ff d0                	call   *%eax$/;"	l
c01039f8	obj/kernel.asm	/^c01039f8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01039fb	obj/kernel.asm	/^c01039fb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01039fe	obj/kernel.asm	/^c01039fe:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0103a01	obj/kernel.asm	/^c0103a01:	e8 cd fd ff ff       	call   c01037d3 <__intr_restore>$/;"	l
c0103a06	obj/kernel.asm	/^c0103a06:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103a09	obj/kernel.asm	/^c0103a09:	c9                   	leave  $/;"	l
c0103a0a	obj/kernel.asm	/^c0103a0a:	c3                   	ret    $/;"	l
c0103a0b	obj/kernel.asm	/^c0103a0b <nr_free_pages>:$/;"	l
c0103a0b	obj/kernel.asm	/^c0103a0b:	55                   	push   %ebp$/;"	l
c0103a0c	obj/kernel.asm	/^c0103a0c:	89 e5                	mov    %esp,%ebp$/;"	l
c0103a0e	obj/kernel.asm	/^c0103a0e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103a11	obj/kernel.asm	/^c0103a11:	e8 93 fd ff ff       	call   c01037a9 <__intr_save>$/;"	l
c0103a16	obj/kernel.asm	/^c0103a16:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103a19	obj/kernel.asm	/^c0103a19:	a1 90 e0 19 c0       	mov    0xc019e090,%eax$/;"	l
c0103a1e	obj/kernel.asm	/^c0103a1e:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0103a21	obj/kernel.asm	/^c0103a21:	ff d0                	call   *%eax$/;"	l
c0103a23	obj/kernel.asm	/^c0103a23:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103a26	obj/kernel.asm	/^c0103a26:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103a29	obj/kernel.asm	/^c0103a29:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0103a2c	obj/kernel.asm	/^c0103a2c:	e8 a2 fd ff ff       	call   c01037d3 <__intr_restore>$/;"	l
c0103a31	obj/kernel.asm	/^c0103a31:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103a34	obj/kernel.asm	/^c0103a34:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103a37	obj/kernel.asm	/^c0103a37:	c9                   	leave  $/;"	l
c0103a38	obj/kernel.asm	/^c0103a38:	c3                   	ret    $/;"	l
c0103a39	obj/kernel.asm	/^c0103a39 <page_init>:$/;"	l
c0103a39	obj/kernel.asm	/^c0103a39:	55                   	push   %ebp$/;"	l
c0103a3a	obj/kernel.asm	/^c0103a3a:	89 e5                	mov    %esp,%ebp$/;"	l
c0103a3c	obj/kernel.asm	/^c0103a3c:	57                   	push   %edi$/;"	l
c0103a3d	obj/kernel.asm	/^c0103a3d:	56                   	push   %esi$/;"	l
c0103a3e	obj/kernel.asm	/^c0103a3e:	53                   	push   %ebx$/;"	l
c0103a3f	obj/kernel.asm	/^c0103a3f:	83 ec 7c             	sub    $0x7c,%esp$/;"	l
c0103a42	obj/kernel.asm	/^c0103a42:	c7 45 c4 00 80 00 c0 	movl   $0xc0008000,-0x3c(%ebp)$/;"	l
c0103a49	obj/kernel.asm	/^c0103a49:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
c0103a50	obj/kernel.asm	/^c0103a50:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0103a57	obj/kernel.asm	/^c0103a57:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103a5a	obj/kernel.asm	/^c0103a5a:	68 27 be 10 c0       	push   $0xc010be27$/;"	l
c0103a5f	obj/kernel.asm	/^c0103a5f:	e8 11 c8 ff ff       	call   c0100275 <cprintf>$/;"	l
c0103a64	obj/kernel.asm	/^c0103a64:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103a67	obj/kernel.asm	/^c0103a67:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0103a6e	obj/kernel.asm	/^c0103a6e:	e9 fe 00 00 00       	jmp    c0103b71 <page_init+0x138>$/;"	l
c0103a73	obj/kernel.asm	/^c0103a73:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103a76	obj/kernel.asm	/^c0103a76:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103a79	obj/kernel.asm	/^c0103a79:	89 d0                	mov    %edx,%eax$/;"	l
c0103a7b	obj/kernel.asm	/^c0103a7b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a7e	obj/kernel.asm	/^c0103a7e:	01 d0                	add    %edx,%eax$/;"	l
c0103a80	obj/kernel.asm	/^c0103a80:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a83	obj/kernel.asm	/^c0103a83:	01 c8                	add    %ecx,%eax$/;"	l
c0103a85	obj/kernel.asm	/^c0103a85:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0103a88	obj/kernel.asm	/^c0103a88:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103a8b	obj/kernel.asm	/^c0103a8b:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0103a8e	obj/kernel.asm	/^c0103a8e:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
c0103a91	obj/kernel.asm	/^c0103a91:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103a94	obj/kernel.asm	/^c0103a94:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103a97	obj/kernel.asm	/^c0103a97:	89 d0                	mov    %edx,%eax$/;"	l
c0103a99	obj/kernel.asm	/^c0103a99:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a9c	obj/kernel.asm	/^c0103a9c:	01 d0                	add    %edx,%eax$/;"	l
c0103a9e	obj/kernel.asm	/^c0103a9e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103aa1	obj/kernel.asm	/^c0103aa1:	01 c8                	add    %ecx,%eax$/;"	l
c0103aa3	obj/kernel.asm	/^c0103aa3:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0103aa6	obj/kernel.asm	/^c0103aa6:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c0103aa9	obj/kernel.asm	/^c0103aa9:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0103aac	obj/kernel.asm	/^c0103aac:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c0103aaf	obj/kernel.asm	/^c0103aaf:	01 c8                	add    %ecx,%eax$/;"	l
c0103ab1	obj/kernel.asm	/^c0103ab1:	11 da                	adc    %ebx,%edx$/;"	l
c0103ab3	obj/kernel.asm	/^c0103ab3:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0103ab6	obj/kernel.asm	/^c0103ab6:	89 55 b4             	mov    %edx,-0x4c(%ebp)$/;"	l
c0103ab9	obj/kernel.asm	/^c0103ab9:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103abc	obj/kernel.asm	/^c0103abc:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103abf	obj/kernel.asm	/^c0103abf:	89 d0                	mov    %edx,%eax$/;"	l
c0103ac1	obj/kernel.asm	/^c0103ac1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103ac4	obj/kernel.asm	/^c0103ac4:	01 d0                	add    %edx,%eax$/;"	l
c0103ac6	obj/kernel.asm	/^c0103ac6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103ac9	obj/kernel.asm	/^c0103ac9:	01 c8                	add    %ecx,%eax$/;"	l
c0103acb	obj/kernel.asm	/^c0103acb:	83 c0 10             	add    $0x10,%eax$/;"	l
c0103ace	obj/kernel.asm	/^c0103ace:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103ad1	obj/kernel.asm	/^c0103ad1:	89 45 84             	mov    %eax,-0x7c(%ebp)$/;"	l
c0103ad4	obj/kernel.asm	/^c0103ad4:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0103ad7	obj/kernel.asm	/^c0103ad7:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0103ada	obj/kernel.asm	/^c0103ada:	83 c0 ff             	add    $0xffffffff,%eax$/;"	l
c0103add	obj/kernel.asm	/^c0103add:	83 d2 ff             	adc    $0xffffffff,%edx$/;"	l
c0103ae0	obj/kernel.asm	/^c0103ae0:	89 c1                	mov    %eax,%ecx$/;"	l
c0103ae2	obj/kernel.asm	/^c0103ae2:	89 d3                	mov    %edx,%ebx$/;"	l
c0103ae4	obj/kernel.asm	/^c0103ae4:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0103ae7	obj/kernel.asm	/^c0103ae7:	89 55 80             	mov    %edx,-0x80(%ebp)$/;"	l
c0103aea	obj/kernel.asm	/^c0103aea:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103aed	obj/kernel.asm	/^c0103aed:	89 d0                	mov    %edx,%eax$/;"	l
c0103aef	obj/kernel.asm	/^c0103aef:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103af2	obj/kernel.asm	/^c0103af2:	01 d0                	add    %edx,%eax$/;"	l
c0103af4	obj/kernel.asm	/^c0103af4:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103af7	obj/kernel.asm	/^c0103af7:	03 45 80             	add    -0x80(%ebp),%eax$/;"	l
c0103afa	obj/kernel.asm	/^c0103afa:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c0103afd	obj/kernel.asm	/^c0103afd:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0103b00	obj/kernel.asm	/^c0103b00:	ff 75 84             	pushl  -0x7c(%ebp)$/;"	l
c0103b03	obj/kernel.asm	/^c0103b03:	53                   	push   %ebx$/;"	l
c0103b04	obj/kernel.asm	/^c0103b04:	51                   	push   %ecx$/;"	l
c0103b05	obj/kernel.asm	/^c0103b05:	ff 75 bc             	pushl  -0x44(%ebp)$/;"	l
c0103b08	obj/kernel.asm	/^c0103b08:	ff 75 b8             	pushl  -0x48(%ebp)$/;"	l
c0103b0b	obj/kernel.asm	/^c0103b0b:	52                   	push   %edx$/;"	l
c0103b0c	obj/kernel.asm	/^c0103b0c:	50                   	push   %eax$/;"	l
c0103b0d	obj/kernel.asm	/^c0103b0d:	68 34 be 10 c0       	push   $0xc010be34$/;"	l
c0103b12	obj/kernel.asm	/^c0103b12:	e8 5e c7 ff ff       	call   c0100275 <cprintf>$/;"	l
c0103b17	obj/kernel.asm	/^c0103b17:	83 c4 20             	add    $0x20,%esp$/;"	l
c0103b1a	obj/kernel.asm	/^c0103b1a:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103b1d	obj/kernel.asm	/^c0103b1d:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103b20	obj/kernel.asm	/^c0103b20:	89 d0                	mov    %edx,%eax$/;"	l
c0103b22	obj/kernel.asm	/^c0103b22:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103b25	obj/kernel.asm	/^c0103b25:	01 d0                	add    %edx,%eax$/;"	l
c0103b27	obj/kernel.asm	/^c0103b27:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103b2a	obj/kernel.asm	/^c0103b2a:	01 c8                	add    %ecx,%eax$/;"	l
c0103b2c	obj/kernel.asm	/^c0103b2c:	83 c0 10             	add    $0x10,%eax$/;"	l
c0103b2f	obj/kernel.asm	/^c0103b2f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103b32	obj/kernel.asm	/^c0103b32:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0103b35	obj/kernel.asm	/^c0103b35:	75 36                	jne    c0103b6d <page_init+0x134>$/;"	l
c0103b37	obj/kernel.asm	/^c0103b37:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103b3a	obj/kernel.asm	/^c0103b3a:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0103b3d	obj/kernel.asm	/^c0103b3d:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c0103b40	obj/kernel.asm	/^c0103b40:	77 2b                	ja     c0103b6d <page_init+0x134>$/;"	l
c0103b42	obj/kernel.asm	/^c0103b42:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c0103b45	obj/kernel.asm	/^c0103b45:	72 05                	jb     c0103b4c <page_init+0x113>$/;"	l
c0103b47	obj/kernel.asm	/^c0103b47:	3b 45 b0             	cmp    -0x50(%ebp),%eax$/;"	l
c0103b4a	obj/kernel.asm	/^c0103b4a:	73 21                	jae    c0103b6d <page_init+0x134>$/;"	l
c0103b4c	obj/kernel.asm	/^c0103b4c:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0103b50	obj/kernel.asm	/^c0103b50:	77 1b                	ja     c0103b6d <page_init+0x134>$/;"	l
c0103b52	obj/kernel.asm	/^c0103b52:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0103b56	obj/kernel.asm	/^c0103b56:	72 09                	jb     c0103b61 <page_init+0x128>$/;"	l
c0103b58	obj/kernel.asm	/^c0103b58:	81 7d b8 ff ff ff 37 	cmpl   $0x37ffffff,-0x48(%ebp)$/;"	l
c0103b5f	obj/kernel.asm	/^c0103b5f:	77 0c                	ja     c0103b6d <page_init+0x134>$/;"	l
c0103b61	obj/kernel.asm	/^c0103b61:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0103b64	obj/kernel.asm	/^c0103b64:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0103b67	obj/kernel.asm	/^c0103b67:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0103b6a	obj/kernel.asm	/^c0103b6a:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0103b6d	obj/kernel.asm	/^c0103b6d:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0103b71	obj/kernel.asm	/^c0103b71:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0103b74	obj/kernel.asm	/^c0103b74:	8b 00                	mov    (%eax),%eax$/;"	l
c0103b76	obj/kernel.asm	/^c0103b76:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c0103b79	obj/kernel.asm	/^c0103b79:	0f 8f f4 fe ff ff    	jg     c0103a73 <page_init+0x3a>$/;"	l
c0103b7f	obj/kernel.asm	/^c0103b7f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0103b83	obj/kernel.asm	/^c0103b83:	72 1d                	jb     c0103ba2 <page_init+0x169>$/;"	l
c0103b85	obj/kernel.asm	/^c0103b85:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0103b89	obj/kernel.asm	/^c0103b89:	77 09                	ja     c0103b94 <page_init+0x15b>$/;"	l
c0103b8b	obj/kernel.asm	/^c0103b8b:	81 7d e0 00 00 00 38 	cmpl   $0x38000000,-0x20(%ebp)$/;"	l
c0103b92	obj/kernel.asm	/^c0103b92:	76 0e                	jbe    c0103ba2 <page_init+0x169>$/;"	l
c0103b94	obj/kernel.asm	/^c0103b94:	c7 45 e0 00 00 00 38 	movl   $0x38000000,-0x20(%ebp)$/;"	l
c0103b9b	obj/kernel.asm	/^c0103b9b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0103ba2	obj/kernel.asm	/^c0103ba2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103ba5	obj/kernel.asm	/^c0103ba5:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0103ba8	obj/kernel.asm	/^c0103ba8:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c0103bac	obj/kernel.asm	/^c0103bac:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0103baf	obj/kernel.asm	/^c0103baf:	a3 00 bf 19 c0       	mov    %eax,0xc019bf00$/;"	l
c0103bb4	obj/kernel.asm	/^c0103bb4:	c7 45 ac 00 10 00 00 	movl   $0x1000,-0x54(%ebp)$/;"	l
c0103bbb	obj/kernel.asm	/^c0103bbb:	b8 80 e1 19 c0       	mov    $0xc019e180,%eax$/;"	l
c0103bc0	obj/kernel.asm	/^c0103bc0:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0103bc3	obj/kernel.asm	/^c0103bc3:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c0103bc6	obj/kernel.asm	/^c0103bc6:	01 d0                	add    %edx,%eax$/;"	l
c0103bc8	obj/kernel.asm	/^c0103bc8:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c0103bcb	obj/kernel.asm	/^c0103bcb:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0103bce	obj/kernel.asm	/^c0103bce:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103bd3	obj/kernel.asm	/^c0103bd3:	f7 75 ac             	divl   -0x54(%ebp)$/;"	l
c0103bd6	obj/kernel.asm	/^c0103bd6:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0103bd9	obj/kernel.asm	/^c0103bd9:	29 d0                	sub    %edx,%eax$/;"	l
c0103bdb	obj/kernel.asm	/^c0103bdb:	a3 98 e0 19 c0       	mov    %eax,0xc019e098$/;"	l
c0103be0	obj/kernel.asm	/^c0103be0:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0103be7	obj/kernel.asm	/^c0103be7:	eb 27                	jmp    c0103c10 <page_init+0x1d7>$/;"	l
c0103be9	obj/kernel.asm	/^c0103be9:	a1 98 e0 19 c0       	mov    0xc019e098,%eax$/;"	l
c0103bee	obj/kernel.asm	/^c0103bee:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103bf1	obj/kernel.asm	/^c0103bf1:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0103bf4	obj/kernel.asm	/^c0103bf4:	01 d0                	add    %edx,%eax$/;"	l
c0103bf6	obj/kernel.asm	/^c0103bf6:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103bf9	obj/kernel.asm	/^c0103bf9:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)$/;"	l
c0103c00	obj/kernel.asm	/^c0103c00:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c0103c03	obj/kernel.asm	/^c0103c03:	8b 45 8c             	mov    -0x74(%ebp),%eax$/;"	l
c0103c06	obj/kernel.asm	/^c0103c06:	8b 55 90             	mov    -0x70(%ebp),%edx$/;"	l
c0103c09	obj/kernel.asm	/^c0103c09:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0103c0c	obj/kernel.asm	/^c0103c0c:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0103c10	obj/kernel.asm	/^c0103c10:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103c13	obj/kernel.asm	/^c0103c13:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c0103c18	obj/kernel.asm	/^c0103c18:	39 c2                	cmp    %eax,%edx$/;"	l
c0103c1a	obj/kernel.asm	/^c0103c1a:	72 cd                	jb     c0103be9 <page_init+0x1b0>$/;"	l
c0103c1c	obj/kernel.asm	/^c0103c1c:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c0103c21	obj/kernel.asm	/^c0103c21:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0103c24	obj/kernel.asm	/^c0103c24:	89 c2                	mov    %eax,%edx$/;"	l
c0103c26	obj/kernel.asm	/^c0103c26:	a1 98 e0 19 c0       	mov    0xc019e098,%eax$/;"	l
c0103c2b	obj/kernel.asm	/^c0103c2b:	01 d0                	add    %edx,%eax$/;"	l
c0103c2d	obj/kernel.asm	/^c0103c2d:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c0103c30	obj/kernel.asm	/^c0103c30:	81 7d a4 ff ff ff bf 	cmpl   $0xbfffffff,-0x5c(%ebp)$/;"	l
c0103c37	obj/kernel.asm	/^c0103c37:	77 17                	ja     c0103c50 <page_init+0x217>$/;"	l
c0103c39	obj/kernel.asm	/^c0103c39:	ff 75 a4             	pushl  -0x5c(%ebp)$/;"	l
c0103c3c	obj/kernel.asm	/^c0103c3c:	68 64 be 10 c0       	push   $0xc010be64$/;"	l
c0103c41	obj/kernel.asm	/^c0103c41:	68 e9 00 00 00       	push   $0xe9$/;"	l
c0103c46	obj/kernel.asm	/^c0103c46:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0103c4b	obj/kernel.asm	/^c0103c4b:	e8 8a c7 ff ff       	call   c01003da <__panic>$/;"	l
c0103c50	obj/kernel.asm	/^c0103c50:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0103c53	obj/kernel.asm	/^c0103c53:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0103c58	obj/kernel.asm	/^c0103c58:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c0103c5b	obj/kernel.asm	/^c0103c5b:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0103c62	obj/kernel.asm	/^c0103c62:	e9 6a 01 00 00       	jmp    c0103dd1 <page_init+0x398>$/;"	l
c0103c67	obj/kernel.asm	/^c0103c67:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103c6a	obj/kernel.asm	/^c0103c6a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103c6d	obj/kernel.asm	/^c0103c6d:	89 d0                	mov    %edx,%eax$/;"	l
c0103c6f	obj/kernel.asm	/^c0103c6f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103c72	obj/kernel.asm	/^c0103c72:	01 d0                	add    %edx,%eax$/;"	l
c0103c74	obj/kernel.asm	/^c0103c74:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103c77	obj/kernel.asm	/^c0103c77:	01 c8                	add    %ecx,%eax$/;"	l
c0103c79	obj/kernel.asm	/^c0103c79:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0103c7c	obj/kernel.asm	/^c0103c7c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103c7f	obj/kernel.asm	/^c0103c7f:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103c82	obj/kernel.asm	/^c0103c82:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0103c85	obj/kernel.asm	/^c0103c85:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103c88	obj/kernel.asm	/^c0103c88:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103c8b	obj/kernel.asm	/^c0103c8b:	89 d0                	mov    %edx,%eax$/;"	l
c0103c8d	obj/kernel.asm	/^c0103c8d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103c90	obj/kernel.asm	/^c0103c90:	01 d0                	add    %edx,%eax$/;"	l
c0103c92	obj/kernel.asm	/^c0103c92:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103c95	obj/kernel.asm	/^c0103c95:	01 c8                	add    %ecx,%eax$/;"	l
c0103c97	obj/kernel.asm	/^c0103c97:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0103c9a	obj/kernel.asm	/^c0103c9a:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c0103c9d	obj/kernel.asm	/^c0103c9d:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103ca0	obj/kernel.asm	/^c0103ca0:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103ca3	obj/kernel.asm	/^c0103ca3:	01 c8                	add    %ecx,%eax$/;"	l
c0103ca5	obj/kernel.asm	/^c0103ca5:	11 da                	adc    %ebx,%edx$/;"	l
c0103ca7	obj/kernel.asm	/^c0103ca7:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0103caa	obj/kernel.asm	/^c0103caa:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c0103cad	obj/kernel.asm	/^c0103cad:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103cb0	obj/kernel.asm	/^c0103cb0:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103cb3	obj/kernel.asm	/^c0103cb3:	89 d0                	mov    %edx,%eax$/;"	l
c0103cb5	obj/kernel.asm	/^c0103cb5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103cb8	obj/kernel.asm	/^c0103cb8:	01 d0                	add    %edx,%eax$/;"	l
c0103cba	obj/kernel.asm	/^c0103cba:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103cbd	obj/kernel.asm	/^c0103cbd:	01 c8                	add    %ecx,%eax$/;"	l
c0103cbf	obj/kernel.asm	/^c0103cbf:	83 c0 10             	add    $0x10,%eax$/;"	l
c0103cc2	obj/kernel.asm	/^c0103cc2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103cc5	obj/kernel.asm	/^c0103cc5:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0103cc8	obj/kernel.asm	/^c0103cc8:	0f 85 ff 00 00 00    	jne    c0103dcd <page_init+0x394>$/;"	l
c0103cce	obj/kernel.asm	/^c0103cce:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0103cd1	obj/kernel.asm	/^c0103cd1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103cd6	obj/kernel.asm	/^c0103cd6:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0103cd9	obj/kernel.asm	/^c0103cd9:	72 17                	jb     c0103cf2 <page_init+0x2b9>$/;"	l
c0103cdb	obj/kernel.asm	/^c0103cdb:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0103cde	obj/kernel.asm	/^c0103cde:	77 05                	ja     c0103ce5 <page_init+0x2ac>$/;"	l
c0103ce0	obj/kernel.asm	/^c0103ce0:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c0103ce3	obj/kernel.asm	/^c0103ce3:	76 0d                	jbe    c0103cf2 <page_init+0x2b9>$/;"	l
c0103ce5	obj/kernel.asm	/^c0103ce5:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0103ce8	obj/kernel.asm	/^c0103ce8:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103ceb	obj/kernel.asm	/^c0103ceb:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c0103cf2	obj/kernel.asm	/^c0103cf2:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0103cf6	obj/kernel.asm	/^c0103cf6:	72 1d                	jb     c0103d15 <page_init+0x2dc>$/;"	l
c0103cf8	obj/kernel.asm	/^c0103cf8:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0103cfc	obj/kernel.asm	/^c0103cfc:	77 09                	ja     c0103d07 <page_init+0x2ce>$/;"	l
c0103cfe	obj/kernel.asm	/^c0103cfe:	81 7d c8 00 00 00 38 	cmpl   $0x38000000,-0x38(%ebp)$/;"	l
c0103d05	obj/kernel.asm	/^c0103d05:	76 0e                	jbe    c0103d15 <page_init+0x2dc>$/;"	l
c0103d07	obj/kernel.asm	/^c0103d07:	c7 45 c8 00 00 00 38 	movl   $0x38000000,-0x38(%ebp)$/;"	l
c0103d0e	obj/kernel.asm	/^c0103d0e:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
c0103d15	obj/kernel.asm	/^c0103d15:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103d18	obj/kernel.asm	/^c0103d18:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103d1b	obj/kernel.asm	/^c0103d1b:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103d1e	obj/kernel.asm	/^c0103d1e:	0f 87 a9 00 00 00    	ja     c0103dcd <page_init+0x394>$/;"	l
c0103d24	obj/kernel.asm	/^c0103d24:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103d27	obj/kernel.asm	/^c0103d27:	72 09                	jb     c0103d32 <page_init+0x2f9>$/;"	l
c0103d29	obj/kernel.asm	/^c0103d29:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0103d2c	obj/kernel.asm	/^c0103d2c:	0f 83 9b 00 00 00    	jae    c0103dcd <page_init+0x394>$/;"	l
c0103d32	obj/kernel.asm	/^c0103d32:	c7 45 9c 00 10 00 00 	movl   $0x1000,-0x64(%ebp)$/;"	l
c0103d39	obj/kernel.asm	/^c0103d39:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0103d3c	obj/kernel.asm	/^c0103d3c:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c0103d3f	obj/kernel.asm	/^c0103d3f:	01 d0                	add    %edx,%eax$/;"	l
c0103d41	obj/kernel.asm	/^c0103d41:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0103d44	obj/kernel.asm	/^c0103d44:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0103d47	obj/kernel.asm	/^c0103d47:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0103d4a	obj/kernel.asm	/^c0103d4a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103d4f	obj/kernel.asm	/^c0103d4f:	f7 75 9c             	divl   -0x64(%ebp)$/;"	l
c0103d52	obj/kernel.asm	/^c0103d52:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0103d55	obj/kernel.asm	/^c0103d55:	29 d0                	sub    %edx,%eax$/;"	l
c0103d57	obj/kernel.asm	/^c0103d57:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103d5c	obj/kernel.asm	/^c0103d5c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103d5f	obj/kernel.asm	/^c0103d5f:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0103d62	obj/kernel.asm	/^c0103d62:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0103d65	obj/kernel.asm	/^c0103d65:	89 45 94             	mov    %eax,-0x6c(%ebp)$/;"	l
c0103d68	obj/kernel.asm	/^c0103d68:	8b 45 94             	mov    -0x6c(%ebp),%eax$/;"	l
c0103d6b	obj/kernel.asm	/^c0103d6b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103d70	obj/kernel.asm	/^c0103d70:	89 c3                	mov    %eax,%ebx$/;"	l
c0103d72	obj/kernel.asm	/^c0103d72:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
c0103d78	obj/kernel.asm	/^c0103d78:	89 de                	mov    %ebx,%esi$/;"	l
c0103d7a	obj/kernel.asm	/^c0103d7a:	89 d0                	mov    %edx,%eax$/;"	l
c0103d7c	obj/kernel.asm	/^c0103d7c:	83 e0 00             	and    $0x0,%eax$/;"	l
c0103d7f	obj/kernel.asm	/^c0103d7f:	89 c7                	mov    %eax,%edi$/;"	l
c0103d81	obj/kernel.asm	/^c0103d81:	89 75 c8             	mov    %esi,-0x38(%ebp)$/;"	l
c0103d84	obj/kernel.asm	/^c0103d84:	89 7d cc             	mov    %edi,-0x34(%ebp)$/;"	l
c0103d87	obj/kernel.asm	/^c0103d87:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103d8a	obj/kernel.asm	/^c0103d8a:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103d8d	obj/kernel.asm	/^c0103d8d:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103d90	obj/kernel.asm	/^c0103d90:	77 3b                	ja     c0103dcd <page_init+0x394>$/;"	l
c0103d92	obj/kernel.asm	/^c0103d92:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103d95	obj/kernel.asm	/^c0103d95:	72 05                	jb     c0103d9c <page_init+0x363>$/;"	l
c0103d97	obj/kernel.asm	/^c0103d97:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0103d9a	obj/kernel.asm	/^c0103d9a:	73 31                	jae    c0103dcd <page_init+0x394>$/;"	l
c0103d9c	obj/kernel.asm	/^c0103d9c:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0103d9f	obj/kernel.asm	/^c0103d9f:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0103da2	obj/kernel.asm	/^c0103da2:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
c0103da5	obj/kernel.asm	/^c0103da5:	1b 55 d4             	sbb    -0x2c(%ebp),%edx$/;"	l
c0103da8	obj/kernel.asm	/^c0103da8:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c0103dac	obj/kernel.asm	/^c0103dac:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0103daf	obj/kernel.asm	/^c0103daf:	89 c3                	mov    %eax,%ebx$/;"	l
c0103db1	obj/kernel.asm	/^c0103db1:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103db4	obj/kernel.asm	/^c0103db4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103db7	obj/kernel.asm	/^c0103db7:	50                   	push   %eax$/;"	l
c0103db8	obj/kernel.asm	/^c0103db8:	e8 cf f8 ff ff       	call   c010368c <pa2page>$/;"	l
c0103dbd	obj/kernel.asm	/^c0103dbd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103dc0	obj/kernel.asm	/^c0103dc0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103dc3	obj/kernel.asm	/^c0103dc3:	53                   	push   %ebx$/;"	l
c0103dc4	obj/kernel.asm	/^c0103dc4:	50                   	push   %eax$/;"	l
c0103dc5	obj/kernel.asm	/^c0103dc5:	e8 83 fb ff ff       	call   c010394d <init_memmap>$/;"	l
c0103dca	obj/kernel.asm	/^c0103dca:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103dcd	obj/kernel.asm	/^c0103dcd:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0103dd1	obj/kernel.asm	/^c0103dd1:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0103dd4	obj/kernel.asm	/^c0103dd4:	8b 00                	mov    (%eax),%eax$/;"	l
c0103dd6	obj/kernel.asm	/^c0103dd6:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c0103dd9	obj/kernel.asm	/^c0103dd9:	0f 8f 88 fe ff ff    	jg     c0103c67 <page_init+0x22e>$/;"	l
c0103ddf	obj/kernel.asm	/^c0103ddf:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
c0103de2	obj/kernel.asm	/^c0103de2:	5b                   	pop    %ebx$/;"	l
c0103de3	obj/kernel.asm	/^c0103de3:	5e                   	pop    %esi$/;"	l
c0103de4	obj/kernel.asm	/^c0103de4:	5f                   	pop    %edi$/;"	l
c0103de5	obj/kernel.asm	/^c0103de5:	5d                   	pop    %ebp$/;"	l
c0103de6	obj/kernel.asm	/^c0103de6:	c3                   	ret    $/;"	l
c0103de7	obj/kernel.asm	/^c0103de7 <enable_paging>:$/;"	l
c0103de7	obj/kernel.asm	/^c0103de7:	55                   	push   %ebp$/;"	l
c0103de8	obj/kernel.asm	/^c0103de8:	89 e5                	mov    %esp,%ebp$/;"	l
c0103dea	obj/kernel.asm	/^c0103dea:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0103ded	obj/kernel.asm	/^c0103ded:	a1 94 e0 19 c0       	mov    0xc019e094,%eax$/;"	l
c0103df2	obj/kernel.asm	/^c0103df2:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0103df5	obj/kernel.asm	/^c0103df5:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0103df8	obj/kernel.asm	/^c0103df8:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0103dfb	obj/kernel.asm	/^c0103dfb:	0f 20 c0             	mov    %cr0,%eax$/;"	l
c0103dfe	obj/kernel.asm	/^c0103dfe:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103e01	obj/kernel.asm	/^c0103e01:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103e04	obj/kernel.asm	/^c0103e04:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0103e07	obj/kernel.asm	/^c0103e07:	81 4d fc 2f 00 05 80 	orl    $0x8005002f,-0x4(%ebp)$/;"	l
c0103e0e	obj/kernel.asm	/^c0103e0e:	83 65 fc f3          	andl   $0xfffffff3,-0x4(%ebp)$/;"	l
c0103e12	obj/kernel.asm	/^c0103e12:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0103e15	obj/kernel.asm	/^c0103e15:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103e18	obj/kernel.asm	/^c0103e18:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103e1b	obj/kernel.asm	/^c0103e1b:	0f 22 c0             	mov    %eax,%cr0$/;"	l
c0103e1e	obj/kernel.asm	/^c0103e1e:	c9                   	leave  $/;"	l
c0103e1f	obj/kernel.asm	/^c0103e1f:	c3                   	ret    $/;"	l
c0103e20	obj/kernel.asm	/^c0103e20 <boot_map_segment>:$/;"	l
c0103e20	obj/kernel.asm	/^c0103e20:	55                   	push   %ebp$/;"	l
c0103e21	obj/kernel.asm	/^c0103e21:	89 e5                	mov    %esp,%ebp$/;"	l
c0103e23	obj/kernel.asm	/^c0103e23:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0103e26	obj/kernel.asm	/^c0103e26:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103e29	obj/kernel.asm	/^c0103e29:	33 45 14             	xor    0x14(%ebp),%eax$/;"	l
c0103e2c	obj/kernel.asm	/^c0103e2c:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0103e31	obj/kernel.asm	/^c0103e31:	85 c0                	test   %eax,%eax$/;"	l
c0103e33	obj/kernel.asm	/^c0103e33:	74 19                	je     c0103e4e <boot_map_segment+0x2e>$/;"	l
c0103e35	obj/kernel.asm	/^c0103e35:	68 96 be 10 c0       	push   $0xc010be96$/;"	l
c0103e3a	obj/kernel.asm	/^c0103e3a:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0103e3f	obj/kernel.asm	/^c0103e3f:	68 12 01 00 00       	push   $0x112$/;"	l
c0103e44	obj/kernel.asm	/^c0103e44:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0103e49	obj/kernel.asm	/^c0103e49:	e8 8c c5 ff ff       	call   c01003da <__panic>$/;"	l
c0103e4e	obj/kernel.asm	/^c0103e4e:	c7 45 f0 00 10 00 00 	movl   $0x1000,-0x10(%ebp)$/;"	l
c0103e55	obj/kernel.asm	/^c0103e55:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103e58	obj/kernel.asm	/^c0103e58:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0103e5d	obj/kernel.asm	/^c0103e5d:	89 c2                	mov    %eax,%edx$/;"	l
c0103e5f	obj/kernel.asm	/^c0103e5f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0103e62	obj/kernel.asm	/^c0103e62:	01 c2                	add    %eax,%edx$/;"	l
c0103e64	obj/kernel.asm	/^c0103e64:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103e67	obj/kernel.asm	/^c0103e67:	01 d0                	add    %edx,%eax$/;"	l
c0103e69	obj/kernel.asm	/^c0103e69:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0103e6c	obj/kernel.asm	/^c0103e6c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103e6f	obj/kernel.asm	/^c0103e6f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103e72	obj/kernel.asm	/^c0103e72:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103e77	obj/kernel.asm	/^c0103e77:	f7 75 f0             	divl   -0x10(%ebp)$/;"	l
c0103e7a	obj/kernel.asm	/^c0103e7a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103e7d	obj/kernel.asm	/^c0103e7d:	29 d0                	sub    %edx,%eax$/;"	l
c0103e7f	obj/kernel.asm	/^c0103e7f:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0103e82	obj/kernel.asm	/^c0103e82:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103e85	obj/kernel.asm	/^c0103e85:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103e88	obj/kernel.asm	/^c0103e88:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0103e8b	obj/kernel.asm	/^c0103e8b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0103e8e	obj/kernel.asm	/^c0103e8e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0103e93	obj/kernel.asm	/^c0103e93:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0103e96	obj/kernel.asm	/^c0103e96:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0103e99	obj/kernel.asm	/^c0103e99:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0103e9c	obj/kernel.asm	/^c0103e9c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0103e9f	obj/kernel.asm	/^c0103e9f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0103ea4	obj/kernel.asm	/^c0103ea4:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
c0103ea7	obj/kernel.asm	/^c0103ea7:	eb 57                	jmp    c0103f00 <boot_map_segment+0xe0>$/;"	l
c0103ea9	obj/kernel.asm	/^c0103ea9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103eac	obj/kernel.asm	/^c0103eac:	6a 01                	push   $0x1$/;"	l
c0103eae	obj/kernel.asm	/^c0103eae:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0103eb1	obj/kernel.asm	/^c0103eb1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0103eb4	obj/kernel.asm	/^c0103eb4:	e8 9b 01 00 00       	call   c0104054 <get_pte>$/;"	l
c0103eb9	obj/kernel.asm	/^c0103eb9:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103ebc	obj/kernel.asm	/^c0103ebc:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0103ebf	obj/kernel.asm	/^c0103ebf:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0103ec3	obj/kernel.asm	/^c0103ec3:	75 19                	jne    c0103ede <boot_map_segment+0xbe>$/;"	l
c0103ec5	obj/kernel.asm	/^c0103ec5:	68 c2 be 10 c0       	push   $0xc010bec2$/;"	l
c0103eca	obj/kernel.asm	/^c0103eca:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0103ecf	obj/kernel.asm	/^c0103ecf:	68 18 01 00 00       	push   $0x118$/;"	l
c0103ed4	obj/kernel.asm	/^c0103ed4:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0103ed9	obj/kernel.asm	/^c0103ed9:	e8 fc c4 ff ff       	call   c01003da <__panic>$/;"	l
c0103ede	obj/kernel.asm	/^c0103ede:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0103ee1	obj/kernel.asm	/^c0103ee1:	0b 45 18             	or     0x18(%ebp),%eax$/;"	l
c0103ee4	obj/kernel.asm	/^c0103ee4:	83 c8 01             	or     $0x1,%eax$/;"	l
c0103ee7	obj/kernel.asm	/^c0103ee7:	89 c2                	mov    %eax,%edx$/;"	l
c0103ee9	obj/kernel.asm	/^c0103ee9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103eec	obj/kernel.asm	/^c0103eec:	89 10                	mov    %edx,(%eax)$/;"	l
c0103eee	obj/kernel.asm	/^c0103eee:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0103ef2	obj/kernel.asm	/^c0103ef2:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c0103ef9	obj/kernel.asm	/^c0103ef9:	81 45 14 00 10 00 00 	addl   $0x1000,0x14(%ebp)$/;"	l
c0103f00	obj/kernel.asm	/^c0103f00:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103f04	obj/kernel.asm	/^c0103f04:	75 a3                	jne    c0103ea9 <boot_map_segment+0x89>$/;"	l
c0103f06	obj/kernel.asm	/^c0103f06:	c9                   	leave  $/;"	l
c0103f07	obj/kernel.asm	/^c0103f07:	c3                   	ret    $/;"	l
c0103f08	obj/kernel.asm	/^c0103f08 <boot_alloc_page>:$/;"	l
c0103f08	obj/kernel.asm	/^c0103f08:	55                   	push   %ebp$/;"	l
c0103f09	obj/kernel.asm	/^c0103f09:	89 e5                	mov    %esp,%ebp$/;"	l
c0103f0b	obj/kernel.asm	/^c0103f0b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103f0e	obj/kernel.asm	/^c0103f0e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103f11	obj/kernel.asm	/^c0103f11:	6a 01                	push   $0x1$/;"	l
c0103f13	obj/kernel.asm	/^c0103f13:	e8 53 fa ff ff       	call   c010396b <alloc_pages>$/;"	l
c0103f18	obj/kernel.asm	/^c0103f18:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103f1b	obj/kernel.asm	/^c0103f1b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103f1e	obj/kernel.asm	/^c0103f1e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103f22	obj/kernel.asm	/^c0103f22:	75 17                	jne    c0103f3b <boot_alloc_page+0x33>$/;"	l
c0103f24	obj/kernel.asm	/^c0103f24:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103f27	obj/kernel.asm	/^c0103f27:	68 cf be 10 c0       	push   $0xc010becf$/;"	l
c0103f2c	obj/kernel.asm	/^c0103f2c:	68 24 01 00 00       	push   $0x124$/;"	l
c0103f31	obj/kernel.asm	/^c0103f31:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0103f36	obj/kernel.asm	/^c0103f36:	e8 9f c4 ff ff       	call   c01003da <__panic>$/;"	l
c0103f3b	obj/kernel.asm	/^c0103f3b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103f3e	obj/kernel.asm	/^c0103f3e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0103f41	obj/kernel.asm	/^c0103f41:	e8 83 f7 ff ff       	call   c01036c9 <page2kva>$/;"	l
c0103f46	obj/kernel.asm	/^c0103f46:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103f49	obj/kernel.asm	/^c0103f49:	c9                   	leave  $/;"	l
c0103f4a	obj/kernel.asm	/^c0103f4a:	c3                   	ret    $/;"	l
c0103f4b	obj/kernel.asm	/^c0103f4b <pmm_init>:$/;"	l
c0103f4b	obj/kernel.asm	/^c0103f4b:	55                   	push   %ebp$/;"	l
c0103f4c	obj/kernel.asm	/^c0103f4c:	89 e5                	mov    %esp,%ebp$/;"	l
c0103f4e	obj/kernel.asm	/^c0103f4e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103f51	obj/kernel.asm	/^c0103f51:	e8 c3 f9 ff ff       	call   c0103919 <init_pmm_manager>$/;"	l
c0103f56	obj/kernel.asm	/^c0103f56:	e8 de fa ff ff       	call   c0103a39 <page_init>$/;"	l
c0103f5b	obj/kernel.asm	/^c0103f5b:	e8 df 07 00 00       	call   c010473f <check_alloc_page>$/;"	l
c0103f60	obj/kernel.asm	/^c0103f60:	e8 a3 ff ff ff       	call   c0103f08 <boot_alloc_page>$/;"	l
c0103f65	obj/kernel.asm	/^c0103f65:	a3 04 bf 19 c0       	mov    %eax,0xc019bf04$/;"	l
c0103f6a	obj/kernel.asm	/^c0103f6a:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0103f6f	obj/kernel.asm	/^c0103f6f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103f72	obj/kernel.asm	/^c0103f72:	68 00 10 00 00       	push   $0x1000$/;"	l
c0103f77	obj/kernel.asm	/^c0103f77:	6a 00                	push   $0x0$/;"	l
c0103f79	obj/kernel.asm	/^c0103f79:	50                   	push   %eax$/;"	l
c0103f7a	obj/kernel.asm	/^c0103f7a:	e8 1d 6c 00 00       	call   c010ab9c <memset>$/;"	l
c0103f7f	obj/kernel.asm	/^c0103f7f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103f82	obj/kernel.asm	/^c0103f82:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0103f87	obj/kernel.asm	/^c0103f87:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103f8a	obj/kernel.asm	/^c0103f8a:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0103f91	obj/kernel.asm	/^c0103f91:	77 17                	ja     c0103faa <pmm_init+0x5f>$/;"	l
c0103f93	obj/kernel.asm	/^c0103f93:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0103f96	obj/kernel.asm	/^c0103f96:	68 64 be 10 c0       	push   $0xc010be64$/;"	l
c0103f9b	obj/kernel.asm	/^c0103f9b:	68 3e 01 00 00       	push   $0x13e$/;"	l
c0103fa0	obj/kernel.asm	/^c0103fa0:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0103fa5	obj/kernel.asm	/^c0103fa5:	e8 30 c4 ff ff       	call   c01003da <__panic>$/;"	l
c0103faa	obj/kernel.asm	/^c0103faa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103fad	obj/kernel.asm	/^c0103fad:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0103fb2	obj/kernel.asm	/^c0103fb2:	a3 94 e0 19 c0       	mov    %eax,0xc019e094$/;"	l
c0103fb7	obj/kernel.asm	/^c0103fb7:	e8 a5 07 00 00       	call   c0104761 <check_pgdir>$/;"	l
c0103fbc	obj/kernel.asm	/^c0103fbc:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0103fc1	obj/kernel.asm	/^c0103fc1:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c0103fc7	obj/kernel.asm	/^c0103fc7:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0103fcc	obj/kernel.asm	/^c0103fcc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103fcf	obj/kernel.asm	/^c0103fcf:	81 7d f0 ff ff ff bf 	cmpl   $0xbfffffff,-0x10(%ebp)$/;"	l
c0103fd6	obj/kernel.asm	/^c0103fd6:	77 17                	ja     c0103fef <pmm_init+0xa4>$/;"	l
c0103fd8	obj/kernel.asm	/^c0103fd8:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0103fdb	obj/kernel.asm	/^c0103fdb:	68 64 be 10 c0       	push   $0xc010be64$/;"	l
c0103fe0	obj/kernel.asm	/^c0103fe0:	68 46 01 00 00       	push   $0x146$/;"	l
c0103fe5	obj/kernel.asm	/^c0103fe5:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0103fea	obj/kernel.asm	/^c0103fea:	e8 eb c3 ff ff       	call   c01003da <__panic>$/;"	l
c0103fef	obj/kernel.asm	/^c0103fef:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103ff2	obj/kernel.asm	/^c0103ff2:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0103ff7	obj/kernel.asm	/^c0103ff7:	83 c8 03             	or     $0x3,%eax$/;"	l
c0103ffa	obj/kernel.asm	/^c0103ffa:	89 02                	mov    %eax,(%edx)$/;"	l
c0103ffc	obj/kernel.asm	/^c0103ffc:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104001	obj/kernel.asm	/^c0104001:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104004	obj/kernel.asm	/^c0104004:	6a 02                	push   $0x2$/;"	l
c0104006	obj/kernel.asm	/^c0104006:	6a 00                	push   $0x0$/;"	l
c0104008	obj/kernel.asm	/^c0104008:	68 00 00 00 38       	push   $0x38000000$/;"	l
c010400d	obj/kernel.asm	/^c010400d:	68 00 00 00 c0       	push   $0xc0000000$/;"	l
c0104012	obj/kernel.asm	/^c0104012:	50                   	push   %eax$/;"	l
c0104013	obj/kernel.asm	/^c0104013:	e8 08 fe ff ff       	call   c0103e20 <boot_map_segment>$/;"	l
c0104018	obj/kernel.asm	/^c0104018:	83 c4 20             	add    $0x20,%esp$/;"	l
c010401b	obj/kernel.asm	/^c010401b:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104020	obj/kernel.asm	/^c0104020:	8b 15 04 bf 19 c0    	mov    0xc019bf04,%edx$/;"	l
c0104026	obj/kernel.asm	/^c0104026:	8b 92 00 0c 00 00    	mov    0xc00(%edx),%edx$/;"	l
c010402c	obj/kernel.asm	/^c010402c:	89 10                	mov    %edx,(%eax)$/;"	l
c010402e	obj/kernel.asm	/^c010402e:	e8 b4 fd ff ff       	call   c0103de7 <enable_paging>$/;"	l
c0104033	obj/kernel.asm	/^c0104033:	e8 f0 f7 ff ff       	call   c0103828 <gdt_init>$/;"	l
c0104038	obj/kernel.asm	/^c0104038:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c010403d	obj/kernel.asm	/^c010403d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0104043	obj/kernel.asm	/^c0104043:	e8 7e 0c 00 00       	call   c0104cc6 <check_boot_pgdir>$/;"	l
c0104048	obj/kernel.asm	/^c0104048:	e8 7a 10 00 00       	call   c01050c7 <print_pgdir>$/;"	l
c010404d	obj/kernel.asm	/^c010404d:	e8 1e 32 00 00       	call   c0107270 <kmalloc_init>$/;"	l
c0104052	obj/kernel.asm	/^c0104052:	c9                   	leave  $/;"	l
c0104053	obj/kernel.asm	/^c0104053:	c3                   	ret    $/;"	l
c0104054	obj/kernel.asm	/^c0104054 <get_pte>:$/;"	l
c0104054	obj/kernel.asm	/^c0104054:	55                   	push   %ebp$/;"	l
c0104055	obj/kernel.asm	/^c0104055:	89 e5                	mov    %esp,%ebp$/;"	l
c0104057	obj/kernel.asm	/^c0104057:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010405a	obj/kernel.asm	/^c010405a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010405d	obj/kernel.asm	/^c010405d:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0104060	obj/kernel.asm	/^c0104060:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0104067	obj/kernel.asm	/^c0104067:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010406a	obj/kernel.asm	/^c010406a:	01 d0                	add    %edx,%eax$/;"	l
c010406c	obj/kernel.asm	/^c010406c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010406f	obj/kernel.asm	/^c010406f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104072	obj/kernel.asm	/^c0104072:	8b 00                	mov    (%eax),%eax$/;"	l
c0104074	obj/kernel.asm	/^c0104074:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104077	obj/kernel.asm	/^c0104077:	85 c0                	test   %eax,%eax$/;"	l
c0104079	obj/kernel.asm	/^c0104079:	75 75                	jne    c01040f0 <get_pte+0x9c>$/;"	l
c010407b	obj/kernel.asm	/^c010407b:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0104082	obj/kernel.asm	/^c0104082:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0104086	obj/kernel.asm	/^c0104086:	74 61                	je     c01040e9 <get_pte+0x95>$/;"	l
c0104088	obj/kernel.asm	/^c0104088:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010408b	obj/kernel.asm	/^c010408b:	6a 01                	push   $0x1$/;"	l
c010408d	obj/kernel.asm	/^c010408d:	e8 d9 f8 ff ff       	call   c010396b <alloc_pages>$/;"	l
c0104092	obj/kernel.asm	/^c0104092:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104095	obj/kernel.asm	/^c0104095:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104098	obj/kernel.asm	/^c0104098:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010409c	obj/kernel.asm	/^c010409c:	74 4b                	je     c01040e9 <get_pte+0x95>$/;"	l
c010409e	obj/kernel.asm	/^c010409e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01040a1	obj/kernel.asm	/^c01040a1:	6a 01                	push   $0x1$/;"	l
c01040a3	obj/kernel.asm	/^c01040a3:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01040a6	obj/kernel.asm	/^c01040a6:	e8 c3 f6 ff ff       	call   c010376e <set_page_ref>$/;"	l
c01040ab	obj/kernel.asm	/^c01040ab:	83 c4 10             	add    $0x10,%esp$/;"	l
c01040ae	obj/kernel.asm	/^c01040ae:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01040b1	obj/kernel.asm	/^c01040b1:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01040b4	obj/kernel.asm	/^c01040b4:	e8 10 f6 ff ff       	call   c01036c9 <page2kva>$/;"	l
c01040b9	obj/kernel.asm	/^c01040b9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01040bc	obj/kernel.asm	/^c01040bc:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01040bf	obj/kernel.asm	/^c01040bf:	68 00 10 00 00       	push   $0x1000$/;"	l
c01040c4	obj/kernel.asm	/^c01040c4:	6a 00                	push   $0x0$/;"	l
c01040c6	obj/kernel.asm	/^c01040c6:	50                   	push   %eax$/;"	l
c01040c7	obj/kernel.asm	/^c01040c7:	e8 d0 6a 00 00       	call   c010ab9c <memset>$/;"	l
c01040cc	obj/kernel.asm	/^c01040cc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01040cf	obj/kernel.asm	/^c01040cf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01040d2	obj/kernel.asm	/^c01040d2:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01040d5	obj/kernel.asm	/^c01040d5:	e8 9f f5 ff ff       	call   c0103679 <page2pa>$/;"	l
c01040da	obj/kernel.asm	/^c01040da:	83 c4 10             	add    $0x10,%esp$/;"	l
c01040dd	obj/kernel.asm	/^c01040dd:	83 c8 07             	or     $0x7,%eax$/;"	l
c01040e0	obj/kernel.asm	/^c01040e0:	89 c2                	mov    %eax,%edx$/;"	l
c01040e2	obj/kernel.asm	/^c01040e2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01040e5	obj/kernel.asm	/^c01040e5:	89 10                	mov    %edx,(%eax)$/;"	l
c01040e7	obj/kernel.asm	/^c01040e7:	eb 07                	jmp    c01040f0 <get_pte+0x9c>$/;"	l
c01040e9	obj/kernel.asm	/^c01040e9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01040ee	obj/kernel.asm	/^c01040ee:	eb 51                	jmp    c0104141 <get_pte+0xed>$/;"	l
c01040f0	obj/kernel.asm	/^c01040f0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01040f3	obj/kernel.asm	/^c01040f3:	8b 00                	mov    (%eax),%eax$/;"	l
c01040f5	obj/kernel.asm	/^c01040f5:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01040fa	obj/kernel.asm	/^c01040fa:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01040fd	obj/kernel.asm	/^c01040fd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104100	obj/kernel.asm	/^c0104100:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104103	obj/kernel.asm	/^c0104103:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104106	obj/kernel.asm	/^c0104106:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c010410b	obj/kernel.asm	/^c010410b:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010410e	obj/kernel.asm	/^c010410e:	72 17                	jb     c0104127 <get_pte+0xd3>$/;"	l
c0104110	obj/kernel.asm	/^c0104110:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0104113	obj/kernel.asm	/^c0104113:	68 c0 bd 10 c0       	push   $0xc010bdc0$/;"	l
c0104118	obj/kernel.asm	/^c0104118:	68 8f 01 00 00       	push   $0x18f$/;"	l
c010411d	obj/kernel.asm	/^c010411d:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104122	obj/kernel.asm	/^c0104122:	e8 b3 c2 ff ff       	call   c01003da <__panic>$/;"	l
c0104127	obj/kernel.asm	/^c0104127:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010412a	obj/kernel.asm	/^c010412a:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c010412f	obj/kernel.asm	/^c010412f:	89 c2                	mov    %eax,%edx$/;"	l
c0104131	obj/kernel.asm	/^c0104131:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104134	obj/kernel.asm	/^c0104134:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104137	obj/kernel.asm	/^c0104137:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
c010413c	obj/kernel.asm	/^c010413c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010413f	obj/kernel.asm	/^c010413f:	01 d0                	add    %edx,%eax$/;"	l
c0104141	obj/kernel.asm	/^c0104141:	c9                   	leave  $/;"	l
c0104142	obj/kernel.asm	/^c0104142:	c3                   	ret    $/;"	l
c0104143	obj/kernel.asm	/^c0104143 <get_page>:$/;"	l
c0104143	obj/kernel.asm	/^c0104143:	55                   	push   %ebp$/;"	l
c0104144	obj/kernel.asm	/^c0104144:	89 e5                	mov    %esp,%ebp$/;"	l
c0104146	obj/kernel.asm	/^c0104146:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104149	obj/kernel.asm	/^c0104149:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010414c	obj/kernel.asm	/^c010414c:	6a 00                	push   $0x0$/;"	l
c010414e	obj/kernel.asm	/^c010414e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104151	obj/kernel.asm	/^c0104151:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104154	obj/kernel.asm	/^c0104154:	e8 fb fe ff ff       	call   c0104054 <get_pte>$/;"	l
c0104159	obj/kernel.asm	/^c0104159:	83 c4 10             	add    $0x10,%esp$/;"	l
c010415c	obj/kernel.asm	/^c010415c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010415f	obj/kernel.asm	/^c010415f:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0104163	obj/kernel.asm	/^c0104163:	74 08                	je     c010416d <get_page+0x2a>$/;"	l
c0104165	obj/kernel.asm	/^c0104165:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104168	obj/kernel.asm	/^c0104168:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010416b	obj/kernel.asm	/^c010416b:	89 10                	mov    %edx,(%eax)$/;"	l
c010416d	obj/kernel.asm	/^c010416d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104171	obj/kernel.asm	/^c0104171:	74 1f                	je     c0104192 <get_page+0x4f>$/;"	l
c0104173	obj/kernel.asm	/^c0104173:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104176	obj/kernel.asm	/^c0104176:	8b 00                	mov    (%eax),%eax$/;"	l
c0104178	obj/kernel.asm	/^c0104178:	83 e0 01             	and    $0x1,%eax$/;"	l
c010417b	obj/kernel.asm	/^c010417b:	85 c0                	test   %eax,%eax$/;"	l
c010417d	obj/kernel.asm	/^c010417d:	74 13                	je     c0104192 <get_page+0x4f>$/;"	l
c010417f	obj/kernel.asm	/^c010417f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104182	obj/kernel.asm	/^c0104182:	8b 00                	mov    (%eax),%eax$/;"	l
c0104184	obj/kernel.asm	/^c0104184:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104187	obj/kernel.asm	/^c0104187:	50                   	push   %eax$/;"	l
c0104188	obj/kernel.asm	/^c0104188:	e8 ff f4 ff ff       	call   c010368c <pa2page>$/;"	l
c010418d	obj/kernel.asm	/^c010418d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104190	obj/kernel.asm	/^c0104190:	eb 05                	jmp    c0104197 <get_page+0x54>$/;"	l
c0104192	obj/kernel.asm	/^c0104192:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104197	obj/kernel.asm	/^c0104197:	c9                   	leave  $/;"	l
c0104198	obj/kernel.asm	/^c0104198:	c3                   	ret    $/;"	l
c0104199	obj/kernel.asm	/^c0104199 <page_remove_pte>:$/;"	l
c0104199	obj/kernel.asm	/^c0104199:	55                   	push   %ebp$/;"	l
c010419a	obj/kernel.asm	/^c010419a:	89 e5                	mov    %esp,%ebp$/;"	l
c010419c	obj/kernel.asm	/^c010419c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010419f	obj/kernel.asm	/^c010419f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01041a2	obj/kernel.asm	/^c01041a2:	8b 00                	mov    (%eax),%eax$/;"	l
c01041a4	obj/kernel.asm	/^c01041a4:	83 e0 01             	and    $0x1,%eax$/;"	l
c01041a7	obj/kernel.asm	/^c01041a7:	85 c0                	test   %eax,%eax$/;"	l
c01041a9	obj/kernel.asm	/^c01041a9:	75 02                	jne    c01041ad <page_remove_pte+0x14>$/;"	l
c01041ab	obj/kernel.asm	/^c01041ab:	eb 50                	jmp    c01041fd <page_remove_pte+0x64>$/;"	l
c01041ad	obj/kernel.asm	/^c01041ad:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01041b0	obj/kernel.asm	/^c01041b0:	8b 00                	mov    (%eax),%eax$/;"	l
c01041b2	obj/kernel.asm	/^c01041b2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01041b5	obj/kernel.asm	/^c01041b5:	50                   	push   %eax$/;"	l
c01041b6	obj/kernel.asm	/^c01041b6:	e8 53 f5 ff ff       	call   c010370e <pte2page>$/;"	l
c01041bb	obj/kernel.asm	/^c01041bb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01041be	obj/kernel.asm	/^c01041be:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01041c1	obj/kernel.asm	/^c01041c1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01041c4	obj/kernel.asm	/^c01041c4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01041c7	obj/kernel.asm	/^c01041c7:	e8 c6 f5 ff ff       	call   c0103792 <page_ref_dec>$/;"	l
c01041cc	obj/kernel.asm	/^c01041cc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01041cf	obj/kernel.asm	/^c01041cf:	85 c0                	test   %eax,%eax$/;"	l
c01041d1	obj/kernel.asm	/^c01041d1:	75 10                	jne    c01041e3 <page_remove_pte+0x4a>$/;"	l
c01041d3	obj/kernel.asm	/^c01041d3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01041d6	obj/kernel.asm	/^c01041d6:	6a 01                	push   $0x1$/;"	l
c01041d8	obj/kernel.asm	/^c01041d8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01041db	obj/kernel.asm	/^c01041db:	e8 f7 f7 ff ff       	call   c01039d7 <free_pages>$/;"	l
c01041e0	obj/kernel.asm	/^c01041e0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01041e3	obj/kernel.asm	/^c01041e3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01041e6	obj/kernel.asm	/^c01041e6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01041ec	obj/kernel.asm	/^c01041ec:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01041ef	obj/kernel.asm	/^c01041ef:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01041f2	obj/kernel.asm	/^c01041f2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01041f5	obj/kernel.asm	/^c01041f5:	e8 45 04 00 00       	call   c010463f <tlb_invalidate>$/;"	l
c01041fa	obj/kernel.asm	/^c01041fa:	83 c4 10             	add    $0x10,%esp$/;"	l
c01041fd	obj/kernel.asm	/^c01041fd:	c9                   	leave  $/;"	l
c01041fe	obj/kernel.asm	/^c01041fe:	c3                   	ret    $/;"	l
c01041ff	obj/kernel.asm	/^c01041ff <unmap_range>:$/;"	l
c01041ff	obj/kernel.asm	/^c01041ff:	55                   	push   %ebp$/;"	l
c0104200	obj/kernel.asm	/^c0104200:	89 e5                	mov    %esp,%ebp$/;"	l
c0104202	obj/kernel.asm	/^c0104202:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104205	obj/kernel.asm	/^c0104205:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104208	obj/kernel.asm	/^c0104208:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c010420d	obj/kernel.asm	/^c010420d:	85 c0                	test   %eax,%eax$/;"	l
c010420f	obj/kernel.asm	/^c010420f:	75 0c                	jne    c010421d <unmap_range+0x1e>$/;"	l
c0104211	obj/kernel.asm	/^c0104211:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104214	obj/kernel.asm	/^c0104214:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0104219	obj/kernel.asm	/^c0104219:	85 c0                	test   %eax,%eax$/;"	l
c010421b	obj/kernel.asm	/^c010421b:	74 19                	je     c0104236 <unmap_range+0x37>$/;"	l
c010421d	obj/kernel.asm	/^c010421d:	68 e8 be 10 c0       	push   $0xc010bee8$/;"	l
c0104222	obj/kernel.asm	/^c0104222:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104227	obj/kernel.asm	/^c0104227:	68 d6 01 00 00       	push   $0x1d6$/;"	l
c010422c	obj/kernel.asm	/^c010422c:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104231	obj/kernel.asm	/^c0104231:	e8 a4 c1 ff ff       	call   c01003da <__panic>$/;"	l
c0104236	obj/kernel.asm	/^c0104236:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c010423d	obj/kernel.asm	/^c010423d:	76 11                	jbe    c0104250 <unmap_range+0x51>$/;"	l
c010423f	obj/kernel.asm	/^c010423f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104242	obj/kernel.asm	/^c0104242:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0104245	obj/kernel.asm	/^c0104245:	73 09                	jae    c0104250 <unmap_range+0x51>$/;"	l
c0104247	obj/kernel.asm	/^c0104247:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c010424e	obj/kernel.asm	/^c010424e:	76 19                	jbe    c0104269 <unmap_range+0x6a>$/;"	l
c0104250	obj/kernel.asm	/^c0104250:	68 11 bf 10 c0       	push   $0xc010bf11$/;"	l
c0104255	obj/kernel.asm	/^c0104255:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c010425a	obj/kernel.asm	/^c010425a:	68 d7 01 00 00       	push   $0x1d7$/;"	l
c010425f	obj/kernel.asm	/^c010425f:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104264	obj/kernel.asm	/^c0104264:	e8 71 c1 ff ff       	call   c01003da <__panic>$/;"	l
c0104269	obj/kernel.asm	/^c0104269:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010426c	obj/kernel.asm	/^c010426c:	6a 00                	push   $0x0$/;"	l
c010426e	obj/kernel.asm	/^c010426e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104271	obj/kernel.asm	/^c0104271:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104274	obj/kernel.asm	/^c0104274:	e8 db fd ff ff       	call   c0104054 <get_pte>$/;"	l
c0104279	obj/kernel.asm	/^c0104279:	83 c4 10             	add    $0x10,%esp$/;"	l
c010427c	obj/kernel.asm	/^c010427c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010427f	obj/kernel.asm	/^c010427f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104283	obj/kernel.asm	/^c0104283:	75 18                	jne    c010429d <unmap_range+0x9e>$/;"	l
c0104285	obj/kernel.asm	/^c0104285:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104288	obj/kernel.asm	/^c0104288:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c010428d	obj/kernel.asm	/^c010428d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104290	obj/kernel.asm	/^c0104290:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104293	obj/kernel.asm	/^c0104293:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0104298	obj/kernel.asm	/^c0104298:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c010429b	obj/kernel.asm	/^c010429b:	eb 24                	jmp    c01042c1 <unmap_range+0xc2>$/;"	l
c010429d	obj/kernel.asm	/^c010429d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01042a0	obj/kernel.asm	/^c01042a0:	8b 00                	mov    (%eax),%eax$/;"	l
c01042a2	obj/kernel.asm	/^c01042a2:	85 c0                	test   %eax,%eax$/;"	l
c01042a4	obj/kernel.asm	/^c01042a4:	74 14                	je     c01042ba <unmap_range+0xbb>$/;"	l
c01042a6	obj/kernel.asm	/^c01042a6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01042a9	obj/kernel.asm	/^c01042a9:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01042ac	obj/kernel.asm	/^c01042ac:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01042af	obj/kernel.asm	/^c01042af:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01042b2	obj/kernel.asm	/^c01042b2:	e8 e2 fe ff ff       	call   c0104199 <page_remove_pte>$/;"	l
c01042b7	obj/kernel.asm	/^c01042b7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01042ba	obj/kernel.asm	/^c01042ba:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c01042c1	obj/kernel.asm	/^c01042c1:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01042c5	obj/kernel.asm	/^c01042c5:	74 08                	je     c01042cf <unmap_range+0xd0>$/;"	l
c01042c7	obj/kernel.asm	/^c01042c7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01042ca	obj/kernel.asm	/^c01042ca:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c01042cd	obj/kernel.asm	/^c01042cd:	72 9a                	jb     c0104269 <unmap_range+0x6a>$/;"	l
c01042cf	obj/kernel.asm	/^c01042cf:	c9                   	leave  $/;"	l
c01042d0	obj/kernel.asm	/^c01042d0:	c3                   	ret    $/;"	l
c01042d1	obj/kernel.asm	/^c01042d1 <exit_range>:$/;"	l
c01042d1	obj/kernel.asm	/^c01042d1:	55                   	push   %ebp$/;"	l
c01042d2	obj/kernel.asm	/^c01042d2:	89 e5                	mov    %esp,%ebp$/;"	l
c01042d4	obj/kernel.asm	/^c01042d4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01042d7	obj/kernel.asm	/^c01042d7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01042da	obj/kernel.asm	/^c01042da:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01042df	obj/kernel.asm	/^c01042df:	85 c0                	test   %eax,%eax$/;"	l
c01042e1	obj/kernel.asm	/^c01042e1:	75 0c                	jne    c01042ef <exit_range+0x1e>$/;"	l
c01042e3	obj/kernel.asm	/^c01042e3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01042e6	obj/kernel.asm	/^c01042e6:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01042eb	obj/kernel.asm	/^c01042eb:	85 c0                	test   %eax,%eax$/;"	l
c01042ed	obj/kernel.asm	/^c01042ed:	74 19                	je     c0104308 <exit_range+0x37>$/;"	l
c01042ef	obj/kernel.asm	/^c01042ef:	68 e8 be 10 c0       	push   $0xc010bee8$/;"	l
c01042f4	obj/kernel.asm	/^c01042f4:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c01042f9	obj/kernel.asm	/^c01042f9:	68 e8 01 00 00       	push   $0x1e8$/;"	l
c01042fe	obj/kernel.asm	/^c01042fe:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104303	obj/kernel.asm	/^c0104303:	e8 d2 c0 ff ff       	call   c01003da <__panic>$/;"	l
c0104308	obj/kernel.asm	/^c0104308:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c010430f	obj/kernel.asm	/^c010430f:	76 11                	jbe    c0104322 <exit_range+0x51>$/;"	l
c0104311	obj/kernel.asm	/^c0104311:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104314	obj/kernel.asm	/^c0104314:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0104317	obj/kernel.asm	/^c0104317:	73 09                	jae    c0104322 <exit_range+0x51>$/;"	l
c0104319	obj/kernel.asm	/^c0104319:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c0104320	obj/kernel.asm	/^c0104320:	76 19                	jbe    c010433b <exit_range+0x6a>$/;"	l
c0104322	obj/kernel.asm	/^c0104322:	68 11 bf 10 c0       	push   $0xc010bf11$/;"	l
c0104327	obj/kernel.asm	/^c0104327:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c010432c	obj/kernel.asm	/^c010432c:	68 e9 01 00 00       	push   $0x1e9$/;"	l
c0104331	obj/kernel.asm	/^c0104331:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104336	obj/kernel.asm	/^c0104336:	e8 9f c0 ff ff       	call   c01003da <__panic>$/;"	l
c010433b	obj/kernel.asm	/^c010433b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010433e	obj/kernel.asm	/^c010433e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104341	obj/kernel.asm	/^c0104341:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104344	obj/kernel.asm	/^c0104344:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0104349	obj/kernel.asm	/^c0104349:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c010434c	obj/kernel.asm	/^c010434c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010434f	obj/kernel.asm	/^c010434f:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0104352	obj/kernel.asm	/^c0104352:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104355	obj/kernel.asm	/^c0104355:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104358	obj/kernel.asm	/^c0104358:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010435f	obj/kernel.asm	/^c010435f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104362	obj/kernel.asm	/^c0104362:	01 d0                	add    %edx,%eax$/;"	l
c0104364	obj/kernel.asm	/^c0104364:	8b 00                	mov    (%eax),%eax$/;"	l
c0104366	obj/kernel.asm	/^c0104366:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104369	obj/kernel.asm	/^c0104369:	85 c0                	test   %eax,%eax$/;"	l
c010436b	obj/kernel.asm	/^c010436b:	74 40                	je     c01043ad <exit_range+0xdc>$/;"	l
c010436d	obj/kernel.asm	/^c010436d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104370	obj/kernel.asm	/^c0104370:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0104377	obj/kernel.asm	/^c0104377:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010437a	obj/kernel.asm	/^c010437a:	01 d0                	add    %edx,%eax$/;"	l
c010437c	obj/kernel.asm	/^c010437c:	8b 00                	mov    (%eax),%eax$/;"	l
c010437e	obj/kernel.asm	/^c010437e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104381	obj/kernel.asm	/^c0104381:	50                   	push   %eax$/;"	l
c0104382	obj/kernel.asm	/^c0104382:	e8 c1 f3 ff ff       	call   c0103748 <pde2page>$/;"	l
c0104387	obj/kernel.asm	/^c0104387:	83 c4 10             	add    $0x10,%esp$/;"	l
c010438a	obj/kernel.asm	/^c010438a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010438d	obj/kernel.asm	/^c010438d:	6a 01                	push   $0x1$/;"	l
c010438f	obj/kernel.asm	/^c010438f:	50                   	push   %eax$/;"	l
c0104390	obj/kernel.asm	/^c0104390:	e8 42 f6 ff ff       	call   c01039d7 <free_pages>$/;"	l
c0104395	obj/kernel.asm	/^c0104395:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104398	obj/kernel.asm	/^c0104398:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010439b	obj/kernel.asm	/^c010439b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c01043a2	obj/kernel.asm	/^c01043a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01043a5	obj/kernel.asm	/^c01043a5:	01 d0                	add    %edx,%eax$/;"	l
c01043a7	obj/kernel.asm	/^c01043a7:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01043ad	obj/kernel.asm	/^c01043ad:	81 45 0c 00 00 40 00 	addl   $0x400000,0xc(%ebp)$/;"	l
c01043b4	obj/kernel.asm	/^c01043b4:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01043b8	obj/kernel.asm	/^c01043b8:	74 08                	je     c01043c2 <exit_range+0xf1>$/;"	l
c01043ba	obj/kernel.asm	/^c01043ba:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01043bd	obj/kernel.asm	/^c01043bd:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c01043c0	obj/kernel.asm	/^c01043c0:	72 8a                	jb     c010434c <exit_range+0x7b>$/;"	l
c01043c2	obj/kernel.asm	/^c01043c2:	c9                   	leave  $/;"	l
c01043c3	obj/kernel.asm	/^c01043c3:	c3                   	ret    $/;"	l
c01043c4	obj/kernel.asm	/^c01043c4 <copy_range>:$/;"	l
c01043c4	obj/kernel.asm	/^c01043c4:	55                   	push   %ebp$/;"	l
c01043c5	obj/kernel.asm	/^c01043c5:	89 e5                	mov    %esp,%ebp$/;"	l
c01043c7	obj/kernel.asm	/^c01043c7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01043ca	obj/kernel.asm	/^c01043ca:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01043cd	obj/kernel.asm	/^c01043cd:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01043d2	obj/kernel.asm	/^c01043d2:	85 c0                	test   %eax,%eax$/;"	l
c01043d4	obj/kernel.asm	/^c01043d4:	75 0c                	jne    c01043e2 <copy_range+0x1e>$/;"	l
c01043d6	obj/kernel.asm	/^c01043d6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01043d9	obj/kernel.asm	/^c01043d9:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01043de	obj/kernel.asm	/^c01043de:	85 c0                	test   %eax,%eax$/;"	l
c01043e0	obj/kernel.asm	/^c01043e0:	74 19                	je     c01043fb <copy_range+0x37>$/;"	l
c01043e2	obj/kernel.asm	/^c01043e2:	68 e8 be 10 c0       	push   $0xc010bee8$/;"	l
c01043e7	obj/kernel.asm	/^c01043e7:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c01043ec	obj/kernel.asm	/^c01043ec:	68 fe 01 00 00       	push   $0x1fe$/;"	l
c01043f1	obj/kernel.asm	/^c01043f1:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c01043f6	obj/kernel.asm	/^c01043f6:	e8 df bf ff ff       	call   c01003da <__panic>$/;"	l
c01043fb	obj/kernel.asm	/^c01043fb:	81 7d 10 ff ff 1f 00 	cmpl   $0x1fffff,0x10(%ebp)$/;"	l
c0104402	obj/kernel.asm	/^c0104402:	76 11                	jbe    c0104415 <copy_range+0x51>$/;"	l
c0104404	obj/kernel.asm	/^c0104404:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104407	obj/kernel.asm	/^c0104407:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c010440a	obj/kernel.asm	/^c010440a:	73 09                	jae    c0104415 <copy_range+0x51>$/;"	l
c010440c	obj/kernel.asm	/^c010440c:	81 7d 14 00 00 00 b0 	cmpl   $0xb0000000,0x14(%ebp)$/;"	l
c0104413	obj/kernel.asm	/^c0104413:	76 19                	jbe    c010442e <copy_range+0x6a>$/;"	l
c0104415	obj/kernel.asm	/^c0104415:	68 11 bf 10 c0       	push   $0xc010bf11$/;"	l
c010441a	obj/kernel.asm	/^c010441a:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c010441f	obj/kernel.asm	/^c010441f:	68 ff 01 00 00       	push   $0x1ff$/;"	l
c0104424	obj/kernel.asm	/^c0104424:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104429	obj/kernel.asm	/^c0104429:	e8 ac bf ff ff       	call   c01003da <__panic>$/;"	l
c010442e	obj/kernel.asm	/^c010442e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104431	obj/kernel.asm	/^c0104431:	6a 00                	push   $0x0$/;"	l
c0104433	obj/kernel.asm	/^c0104433:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0104436	obj/kernel.asm	/^c0104436:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104439	obj/kernel.asm	/^c0104439:	e8 16 fc ff ff       	call   c0104054 <get_pte>$/;"	l
c010443e	obj/kernel.asm	/^c010443e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104441	obj/kernel.asm	/^c0104441:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104444	obj/kernel.asm	/^c0104444:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104448	obj/kernel.asm	/^c0104448:	75 1b                	jne    c0104465 <copy_range+0xa1>$/;"	l
c010444a	obj/kernel.asm	/^c010444a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010444d	obj/kernel.asm	/^c010444d:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c0104452	obj/kernel.asm	/^c0104452:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104455	obj/kernel.asm	/^c0104455:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104458	obj/kernel.asm	/^c0104458:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c010445d	obj/kernel.asm	/^c010445d:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c0104460	obj/kernel.asm	/^c0104460:	e9 d0 00 00 00       	jmp    c0104535 <copy_range+0x171>$/;"	l
c0104465	obj/kernel.asm	/^c0104465:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104468	obj/kernel.asm	/^c0104468:	8b 00                	mov    (%eax),%eax$/;"	l
c010446a	obj/kernel.asm	/^c010446a:	83 e0 01             	and    $0x1,%eax$/;"	l
c010446d	obj/kernel.asm	/^c010446d:	85 c0                	test   %eax,%eax$/;"	l
c010446f	obj/kernel.asm	/^c010446f:	0f 84 b9 00 00 00    	je     c010452e <copy_range+0x16a>$/;"	l
c0104475	obj/kernel.asm	/^c0104475:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104478	obj/kernel.asm	/^c0104478:	6a 01                	push   $0x1$/;"	l
c010447a	obj/kernel.asm	/^c010447a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010447d	obj/kernel.asm	/^c010447d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104480	obj/kernel.asm	/^c0104480:	e8 cf fb ff ff       	call   c0104054 <get_pte>$/;"	l
c0104485	obj/kernel.asm	/^c0104485:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104488	obj/kernel.asm	/^c0104488:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010448b	obj/kernel.asm	/^c010448b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010448f	obj/kernel.asm	/^c010448f:	75 0a                	jne    c010449b <copy_range+0xd7>$/;"	l
c0104491	obj/kernel.asm	/^c0104491:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0104496	obj/kernel.asm	/^c0104496:	e9 b1 00 00 00       	jmp    c010454c <copy_range+0x188>$/;"	l
c010449b	obj/kernel.asm	/^c010449b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010449e	obj/kernel.asm	/^c010449e:	8b 00                	mov    (%eax),%eax$/;"	l
c01044a0	obj/kernel.asm	/^c01044a0:	83 e0 07             	and    $0x7,%eax$/;"	l
c01044a3	obj/kernel.asm	/^c01044a3:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01044a6	obj/kernel.asm	/^c01044a6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01044a9	obj/kernel.asm	/^c01044a9:	8b 00                	mov    (%eax),%eax$/;"	l
c01044ab	obj/kernel.asm	/^c01044ab:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01044ae	obj/kernel.asm	/^c01044ae:	50                   	push   %eax$/;"	l
c01044af	obj/kernel.asm	/^c01044af:	e8 5a f2 ff ff       	call   c010370e <pte2page>$/;"	l
c01044b4	obj/kernel.asm	/^c01044b4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01044b7	obj/kernel.asm	/^c01044b7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01044ba	obj/kernel.asm	/^c01044ba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01044bd	obj/kernel.asm	/^c01044bd:	6a 01                	push   $0x1$/;"	l
c01044bf	obj/kernel.asm	/^c01044bf:	e8 a7 f4 ff ff       	call   c010396b <alloc_pages>$/;"	l
c01044c4	obj/kernel.asm	/^c01044c4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01044c7	obj/kernel.asm	/^c01044c7:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01044ca	obj/kernel.asm	/^c01044ca:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01044ce	obj/kernel.asm	/^c01044ce:	75 19                	jne    c01044e9 <copy_range+0x125>$/;"	l
c01044d0	obj/kernel.asm	/^c01044d0:	68 29 bf 10 c0       	push   $0xc010bf29$/;"	l
c01044d5	obj/kernel.asm	/^c01044d5:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c01044da	obj/kernel.asm	/^c01044da:	68 12 02 00 00       	push   $0x212$/;"	l
c01044df	obj/kernel.asm	/^c01044df:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c01044e4	obj/kernel.asm	/^c01044e4:	e8 f1 be ff ff       	call   c01003da <__panic>$/;"	l
c01044e9	obj/kernel.asm	/^c01044e9:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01044ed	obj/kernel.asm	/^c01044ed:	75 19                	jne    c0104508 <copy_range+0x144>$/;"	l
c01044ef	obj/kernel.asm	/^c01044ef:	68 34 bf 10 c0       	push   $0xc010bf34$/;"	l
c01044f4	obj/kernel.asm	/^c01044f4:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c01044f9	obj/kernel.asm	/^c01044f9:	68 13 02 00 00       	push   $0x213$/;"	l
c01044fe	obj/kernel.asm	/^c01044fe:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104503	obj/kernel.asm	/^c0104503:	e8 d2 be ff ff       	call   c01003da <__panic>$/;"	l
c0104508	obj/kernel.asm	/^c0104508:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c010450f	obj/kernel.asm	/^c010450f:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0104513	obj/kernel.asm	/^c0104513:	74 19                	je     c010452e <copy_range+0x16a>$/;"	l
c0104515	obj/kernel.asm	/^c0104515:	68 40 bf 10 c0       	push   $0xc010bf40$/;"	l
c010451a	obj/kernel.asm	/^c010451a:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c010451f	obj/kernel.asm	/^c010451f:	68 23 02 00 00       	push   $0x223$/;"	l
c0104524	obj/kernel.asm	/^c0104524:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104529	obj/kernel.asm	/^c0104529:	e8 ac be ff ff       	call   c01003da <__panic>$/;"	l
c010452e	obj/kernel.asm	/^c010452e:	81 45 10 00 10 00 00 	addl   $0x1000,0x10(%ebp)$/;"	l
c0104535	obj/kernel.asm	/^c0104535:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0104539	obj/kernel.asm	/^c0104539:	74 0c                	je     c0104547 <copy_range+0x183>$/;"	l
c010453b	obj/kernel.asm	/^c010453b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010453e	obj/kernel.asm	/^c010453e:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0104541	obj/kernel.asm	/^c0104541:	0f 82 e7 fe ff ff    	jb     c010442e <copy_range+0x6a>$/;"	l
c0104547	obj/kernel.asm	/^c0104547:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010454c	obj/kernel.asm	/^c010454c:	c9                   	leave  $/;"	l
c010454d	obj/kernel.asm	/^c010454d:	c3                   	ret    $/;"	l
c010454e	obj/kernel.asm	/^c010454e <page_remove>:$/;"	l
c010454e	obj/kernel.asm	/^c010454e:	55                   	push   %ebp$/;"	l
c010454f	obj/kernel.asm	/^c010454f:	89 e5                	mov    %esp,%ebp$/;"	l
c0104551	obj/kernel.asm	/^c0104551:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104554	obj/kernel.asm	/^c0104554:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104557	obj/kernel.asm	/^c0104557:	6a 00                	push   $0x0$/;"	l
c0104559	obj/kernel.asm	/^c0104559:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010455c	obj/kernel.asm	/^c010455c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010455f	obj/kernel.asm	/^c010455f:	e8 f0 fa ff ff       	call   c0104054 <get_pte>$/;"	l
c0104564	obj/kernel.asm	/^c0104564:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104567	obj/kernel.asm	/^c0104567:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010456a	obj/kernel.asm	/^c010456a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010456e	obj/kernel.asm	/^c010456e:	74 14                	je     c0104584 <page_remove+0x36>$/;"	l
c0104570	obj/kernel.asm	/^c0104570:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104573	obj/kernel.asm	/^c0104573:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104576	obj/kernel.asm	/^c0104576:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104579	obj/kernel.asm	/^c0104579:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010457c	obj/kernel.asm	/^c010457c:	e8 18 fc ff ff       	call   c0104199 <page_remove_pte>$/;"	l
c0104581	obj/kernel.asm	/^c0104581:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104584	obj/kernel.asm	/^c0104584:	c9                   	leave  $/;"	l
c0104585	obj/kernel.asm	/^c0104585:	c3                   	ret    $/;"	l
c0104586	obj/kernel.asm	/^c0104586 <page_insert>:$/;"	l
c0104586	obj/kernel.asm	/^c0104586:	55                   	push   %ebp$/;"	l
c0104587	obj/kernel.asm	/^c0104587:	89 e5                	mov    %esp,%ebp$/;"	l
c0104589	obj/kernel.asm	/^c0104589:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010458c	obj/kernel.asm	/^c010458c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010458f	obj/kernel.asm	/^c010458f:	6a 01                	push   $0x1$/;"	l
c0104591	obj/kernel.asm	/^c0104591:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0104594	obj/kernel.asm	/^c0104594:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104597	obj/kernel.asm	/^c0104597:	e8 b8 fa ff ff       	call   c0104054 <get_pte>$/;"	l
c010459c	obj/kernel.asm	/^c010459c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010459f	obj/kernel.asm	/^c010459f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01045a2	obj/kernel.asm	/^c01045a2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01045a6	obj/kernel.asm	/^c01045a6:	75 0a                	jne    c01045b2 <page_insert+0x2c>$/;"	l
c01045a8	obj/kernel.asm	/^c01045a8:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01045ad	obj/kernel.asm	/^c01045ad:	e9 8b 00 00 00       	jmp    c010463d <page_insert+0xb7>$/;"	l
c01045b2	obj/kernel.asm	/^c01045b2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01045b5	obj/kernel.asm	/^c01045b5:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01045b8	obj/kernel.asm	/^c01045b8:	e8 be f1 ff ff       	call   c010377b <page_ref_inc>$/;"	l
c01045bd	obj/kernel.asm	/^c01045bd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01045c0	obj/kernel.asm	/^c01045c0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01045c3	obj/kernel.asm	/^c01045c3:	8b 00                	mov    (%eax),%eax$/;"	l
c01045c5	obj/kernel.asm	/^c01045c5:	83 e0 01             	and    $0x1,%eax$/;"	l
c01045c8	obj/kernel.asm	/^c01045c8:	85 c0                	test   %eax,%eax$/;"	l
c01045ca	obj/kernel.asm	/^c01045ca:	74 40                	je     c010460c <page_insert+0x86>$/;"	l
c01045cc	obj/kernel.asm	/^c01045cc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01045cf	obj/kernel.asm	/^c01045cf:	8b 00                	mov    (%eax),%eax$/;"	l
c01045d1	obj/kernel.asm	/^c01045d1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01045d4	obj/kernel.asm	/^c01045d4:	50                   	push   %eax$/;"	l
c01045d5	obj/kernel.asm	/^c01045d5:	e8 34 f1 ff ff       	call   c010370e <pte2page>$/;"	l
c01045da	obj/kernel.asm	/^c01045da:	83 c4 10             	add    $0x10,%esp$/;"	l
c01045dd	obj/kernel.asm	/^c01045dd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01045e0	obj/kernel.asm	/^c01045e0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01045e3	obj/kernel.asm	/^c01045e3:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01045e6	obj/kernel.asm	/^c01045e6:	75 10                	jne    c01045f8 <page_insert+0x72>$/;"	l
c01045e8	obj/kernel.asm	/^c01045e8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01045eb	obj/kernel.asm	/^c01045eb:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01045ee	obj/kernel.asm	/^c01045ee:	e8 9f f1 ff ff       	call   c0103792 <page_ref_dec>$/;"	l
c01045f3	obj/kernel.asm	/^c01045f3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01045f6	obj/kernel.asm	/^c01045f6:	eb 14                	jmp    c010460c <page_insert+0x86>$/;"	l
c01045f8	obj/kernel.asm	/^c01045f8:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01045fb	obj/kernel.asm	/^c01045fb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01045fe	obj/kernel.asm	/^c01045fe:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0104601	obj/kernel.asm	/^c0104601:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104604	obj/kernel.asm	/^c0104604:	e8 90 fb ff ff       	call   c0104199 <page_remove_pte>$/;"	l
c0104609	obj/kernel.asm	/^c0104609:	83 c4 10             	add    $0x10,%esp$/;"	l
c010460c	obj/kernel.asm	/^c010460c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010460f	obj/kernel.asm	/^c010460f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104612	obj/kernel.asm	/^c0104612:	e8 62 f0 ff ff       	call   c0103679 <page2pa>$/;"	l
c0104617	obj/kernel.asm	/^c0104617:	83 c4 10             	add    $0x10,%esp$/;"	l
c010461a	obj/kernel.asm	/^c010461a:	0b 45 14             	or     0x14(%ebp),%eax$/;"	l
c010461d	obj/kernel.asm	/^c010461d:	83 c8 01             	or     $0x1,%eax$/;"	l
c0104620	obj/kernel.asm	/^c0104620:	89 c2                	mov    %eax,%edx$/;"	l
c0104622	obj/kernel.asm	/^c0104622:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104625	obj/kernel.asm	/^c0104625:	89 10                	mov    %edx,(%eax)$/;"	l
c0104627	obj/kernel.asm	/^c0104627:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010462a	obj/kernel.asm	/^c010462a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010462d	obj/kernel.asm	/^c010462d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104630	obj/kernel.asm	/^c0104630:	e8 0a 00 00 00       	call   c010463f <tlb_invalidate>$/;"	l
c0104635	obj/kernel.asm	/^c0104635:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104638	obj/kernel.asm	/^c0104638:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010463d	obj/kernel.asm	/^c010463d:	c9                   	leave  $/;"	l
c010463e	obj/kernel.asm	/^c010463e:	c3                   	ret    $/;"	l
c010463f	obj/kernel.asm	/^c010463f <tlb_invalidate>:$/;"	l
c010463f	obj/kernel.asm	/^c010463f:	55                   	push   %ebp$/;"	l
c0104640	obj/kernel.asm	/^c0104640:	89 e5                	mov    %esp,%ebp$/;"	l
c0104642	obj/kernel.asm	/^c0104642:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104645	obj/kernel.asm	/^c0104645:	0f 20 d8             	mov    %cr3,%eax$/;"	l
c0104648	obj/kernel.asm	/^c0104648:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010464b	obj/kernel.asm	/^c010464b:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010464e	obj/kernel.asm	/^c010464e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104651	obj/kernel.asm	/^c0104651:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104654	obj/kernel.asm	/^c0104654:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c010465b	obj/kernel.asm	/^c010465b:	77 17                	ja     c0104674 <tlb_invalidate+0x35>$/;"	l
c010465d	obj/kernel.asm	/^c010465d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104660	obj/kernel.asm	/^c0104660:	68 64 be 10 c0       	push   $0xc010be64$/;"	l
c0104665	obj/kernel.asm	/^c0104665:	68 54 02 00 00       	push   $0x254$/;"	l
c010466a	obj/kernel.asm	/^c010466a:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c010466f	obj/kernel.asm	/^c010466f:	e8 66 bd ff ff       	call   c01003da <__panic>$/;"	l
c0104674	obj/kernel.asm	/^c0104674:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104677	obj/kernel.asm	/^c0104677:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010467c	obj/kernel.asm	/^c010467c:	39 c2                	cmp    %eax,%edx$/;"	l
c010467e	obj/kernel.asm	/^c010467e:	75 0c                	jne    c010468c <tlb_invalidate+0x4d>$/;"	l
c0104680	obj/kernel.asm	/^c0104680:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104683	obj/kernel.asm	/^c0104683:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104686	obj/kernel.asm	/^c0104686:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104689	obj/kernel.asm	/^c0104689:	0f 01 38             	invlpg (%eax)$/;"	l
c010468c	obj/kernel.asm	/^c010468c:	c9                   	leave  $/;"	l
c010468d	obj/kernel.asm	/^c010468d:	c3                   	ret    $/;"	l
c010468e	obj/kernel.asm	/^c010468e <pgdir_alloc_page>:$/;"	l
c010468e	obj/kernel.asm	/^c010468e:	55                   	push   %ebp$/;"	l
c010468f	obj/kernel.asm	/^c010468f:	89 e5                	mov    %esp,%ebp$/;"	l
c0104691	obj/kernel.asm	/^c0104691:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104694	obj/kernel.asm	/^c0104694:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104697	obj/kernel.asm	/^c0104697:	6a 01                	push   $0x1$/;"	l
c0104699	obj/kernel.asm	/^c0104699:	e8 cd f2 ff ff       	call   c010396b <alloc_pages>$/;"	l
c010469e	obj/kernel.asm	/^c010469e:	83 c4 10             	add    $0x10,%esp$/;"	l
c01046a1	obj/kernel.asm	/^c01046a1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01046a4	obj/kernel.asm	/^c01046a4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01046a8	obj/kernel.asm	/^c01046a8:	0f 84 8c 00 00 00    	je     c010473a <pgdir_alloc_page+0xac>$/;"	l
c01046ae	obj/kernel.asm	/^c01046ae:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01046b1	obj/kernel.asm	/^c01046b1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01046b4	obj/kernel.asm	/^c01046b4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01046b7	obj/kernel.asm	/^c01046b7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01046ba	obj/kernel.asm	/^c01046ba:	e8 c7 fe ff ff       	call   c0104586 <page_insert>$/;"	l
c01046bf	obj/kernel.asm	/^c01046bf:	83 c4 10             	add    $0x10,%esp$/;"	l
c01046c2	obj/kernel.asm	/^c01046c2:	85 c0                	test   %eax,%eax$/;"	l
c01046c4	obj/kernel.asm	/^c01046c4:	74 17                	je     c01046dd <pgdir_alloc_page+0x4f>$/;"	l
c01046c6	obj/kernel.asm	/^c01046c6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01046c9	obj/kernel.asm	/^c01046c9:	6a 01                	push   $0x1$/;"	l
c01046cb	obj/kernel.asm	/^c01046cb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01046ce	obj/kernel.asm	/^c01046ce:	e8 04 f3 ff ff       	call   c01039d7 <free_pages>$/;"	l
c01046d3	obj/kernel.asm	/^c01046d3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01046d6	obj/kernel.asm	/^c01046d6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01046db	obj/kernel.asm	/^c01046db:	eb 60                	jmp    c010473d <pgdir_alloc_page+0xaf>$/;"	l
c01046dd	obj/kernel.asm	/^c01046dd:	a1 b0 bf 19 c0       	mov    0xc019bfb0,%eax$/;"	l
c01046e2	obj/kernel.asm	/^c01046e2:	85 c0                	test   %eax,%eax$/;"	l
c01046e4	obj/kernel.asm	/^c01046e4:	74 54                	je     c010473a <pgdir_alloc_page+0xac>$/;"	l
c01046e6	obj/kernel.asm	/^c01046e6:	a1 9c e0 19 c0       	mov    0xc019e09c,%eax$/;"	l
c01046eb	obj/kernel.asm	/^c01046eb:	85 c0                	test   %eax,%eax$/;"	l
c01046ed	obj/kernel.asm	/^c01046ed:	74 4b                	je     c010473a <pgdir_alloc_page+0xac>$/;"	l
c01046ef	obj/kernel.asm	/^c01046ef:	a1 9c e0 19 c0       	mov    0xc019e09c,%eax$/;"	l
c01046f4	obj/kernel.asm	/^c01046f4:	6a 00                	push   $0x0$/;"	l
c01046f6	obj/kernel.asm	/^c01046f6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01046f9	obj/kernel.asm	/^c01046f9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01046fc	obj/kernel.asm	/^c01046fc:	50                   	push   %eax$/;"	l
c01046fd	obj/kernel.asm	/^c01046fd:	e8 24 1d 00 00       	call   c0106426 <swap_map_swappable>$/;"	l
c0104702	obj/kernel.asm	/^c0104702:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104705	obj/kernel.asm	/^c0104705:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104708	obj/kernel.asm	/^c0104708:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010470b	obj/kernel.asm	/^c010470b:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010470e	obj/kernel.asm	/^c010470e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104711	obj/kernel.asm	/^c0104711:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104714	obj/kernel.asm	/^c0104714:	e8 4b f0 ff ff       	call   c0103764 <page_ref>$/;"	l
c0104719	obj/kernel.asm	/^c0104719:	83 c4 10             	add    $0x10,%esp$/;"	l
c010471c	obj/kernel.asm	/^c010471c:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010471f	obj/kernel.asm	/^c010471f:	74 19                	je     c010473a <pgdir_alloc_page+0xac>$/;"	l
c0104721	obj/kernel.asm	/^c0104721:	68 49 bf 10 c0       	push   $0xc010bf49$/;"	l
c0104726	obj/kernel.asm	/^c0104726:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c010472b	obj/kernel.asm	/^c010472b:	68 68 02 00 00       	push   $0x268$/;"	l
c0104730	obj/kernel.asm	/^c0104730:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104735	obj/kernel.asm	/^c0104735:	e8 a0 bc ff ff       	call   c01003da <__panic>$/;"	l
c010473a	obj/kernel.asm	/^c010473a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010473d	obj/kernel.asm	/^c010473d:	c9                   	leave  $/;"	l
c010473e	obj/kernel.asm	/^c010473e:	c3                   	ret    $/;"	l
c010473f	obj/kernel.asm	/^c010473f <check_alloc_page>:$/;"	l
c010473f	obj/kernel.asm	/^c010473f:	55                   	push   %ebp$/;"	l
c0104740	obj/kernel.asm	/^c0104740:	89 e5                	mov    %esp,%ebp$/;"	l
c0104742	obj/kernel.asm	/^c0104742:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104745	obj/kernel.asm	/^c0104745:	a1 90 e0 19 c0       	mov    0xc019e090,%eax$/;"	l
c010474a	obj/kernel.asm	/^c010474a:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010474d	obj/kernel.asm	/^c010474d:	ff d0                	call   *%eax$/;"	l
c010474f	obj/kernel.asm	/^c010474f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104752	obj/kernel.asm	/^c0104752:	68 60 bf 10 c0       	push   $0xc010bf60$/;"	l
c0104757	obj/kernel.asm	/^c0104757:	e8 19 bb ff ff       	call   c0100275 <cprintf>$/;"	l
c010475c	obj/kernel.asm	/^c010475c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010475f	obj/kernel.asm	/^c010475f:	c9                   	leave  $/;"	l
c0104760	obj/kernel.asm	/^c0104760:	c3                   	ret    $/;"	l
c0104761	obj/kernel.asm	/^c0104761 <check_pgdir>:$/;"	l
c0104761	obj/kernel.asm	/^c0104761:	55                   	push   %ebp$/;"	l
c0104762	obj/kernel.asm	/^c0104762:	89 e5                	mov    %esp,%ebp$/;"	l
c0104764	obj/kernel.asm	/^c0104764:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104767	obj/kernel.asm	/^c0104767:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c010476c	obj/kernel.asm	/^c010476c:	3d 00 80 03 00       	cmp    $0x38000,%eax$/;"	l
c0104771	obj/kernel.asm	/^c0104771:	76 19                	jbe    c010478c <check_pgdir+0x2b>$/;"	l
c0104773	obj/kernel.asm	/^c0104773:	68 7f bf 10 c0       	push   $0xc010bf7f$/;"	l
c0104778	obj/kernel.asm	/^c0104778:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c010477d	obj/kernel.asm	/^c010477d:	68 80 02 00 00       	push   $0x280$/;"	l
c0104782	obj/kernel.asm	/^c0104782:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104787	obj/kernel.asm	/^c0104787:	e8 4e bc ff ff       	call   c01003da <__panic>$/;"	l
c010478c	obj/kernel.asm	/^c010478c:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104791	obj/kernel.asm	/^c0104791:	85 c0                	test   %eax,%eax$/;"	l
c0104793	obj/kernel.asm	/^c0104793:	74 0e                	je     c01047a3 <check_pgdir+0x42>$/;"	l
c0104795	obj/kernel.asm	/^c0104795:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c010479a	obj/kernel.asm	/^c010479a:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c010479f	obj/kernel.asm	/^c010479f:	85 c0                	test   %eax,%eax$/;"	l
c01047a1	obj/kernel.asm	/^c01047a1:	74 19                	je     c01047bc <check_pgdir+0x5b>$/;"	l
c01047a3	obj/kernel.asm	/^c01047a3:	68 9c bf 10 c0       	push   $0xc010bf9c$/;"	l
c01047a8	obj/kernel.asm	/^c01047a8:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c01047ad	obj/kernel.asm	/^c01047ad:	68 81 02 00 00       	push   $0x281$/;"	l
c01047b2	obj/kernel.asm	/^c01047b2:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c01047b7	obj/kernel.asm	/^c01047b7:	e8 1e bc ff ff       	call   c01003da <__panic>$/;"	l
c01047bc	obj/kernel.asm	/^c01047bc:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c01047c1	obj/kernel.asm	/^c01047c1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01047c4	obj/kernel.asm	/^c01047c4:	6a 00                	push   $0x0$/;"	l
c01047c6	obj/kernel.asm	/^c01047c6:	6a 00                	push   $0x0$/;"	l
c01047c8	obj/kernel.asm	/^c01047c8:	50                   	push   %eax$/;"	l
c01047c9	obj/kernel.asm	/^c01047c9:	e8 75 f9 ff ff       	call   c0104143 <get_page>$/;"	l
c01047ce	obj/kernel.asm	/^c01047ce:	83 c4 10             	add    $0x10,%esp$/;"	l
c01047d1	obj/kernel.asm	/^c01047d1:	85 c0                	test   %eax,%eax$/;"	l
c01047d3	obj/kernel.asm	/^c01047d3:	74 19                	je     c01047ee <check_pgdir+0x8d>$/;"	l
c01047d5	obj/kernel.asm	/^c01047d5:	68 d4 bf 10 c0       	push   $0xc010bfd4$/;"	l
c01047da	obj/kernel.asm	/^c01047da:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c01047df	obj/kernel.asm	/^c01047df:	68 82 02 00 00       	push   $0x282$/;"	l
c01047e4	obj/kernel.asm	/^c01047e4:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c01047e9	obj/kernel.asm	/^c01047e9:	e8 ec bb ff ff       	call   c01003da <__panic>$/;"	l
c01047ee	obj/kernel.asm	/^c01047ee:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01047f1	obj/kernel.asm	/^c01047f1:	6a 01                	push   $0x1$/;"	l
c01047f3	obj/kernel.asm	/^c01047f3:	e8 73 f1 ff ff       	call   c010396b <alloc_pages>$/;"	l
c01047f8	obj/kernel.asm	/^c01047f8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01047fb	obj/kernel.asm	/^c01047fb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01047fe	obj/kernel.asm	/^c01047fe:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104803	obj/kernel.asm	/^c0104803:	6a 00                	push   $0x0$/;"	l
c0104805	obj/kernel.asm	/^c0104805:	6a 00                	push   $0x0$/;"	l
c0104807	obj/kernel.asm	/^c0104807:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010480a	obj/kernel.asm	/^c010480a:	50                   	push   %eax$/;"	l
c010480b	obj/kernel.asm	/^c010480b:	e8 76 fd ff ff       	call   c0104586 <page_insert>$/;"	l
c0104810	obj/kernel.asm	/^c0104810:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104813	obj/kernel.asm	/^c0104813:	85 c0                	test   %eax,%eax$/;"	l
c0104815	obj/kernel.asm	/^c0104815:	74 19                	je     c0104830 <check_pgdir+0xcf>$/;"	l
c0104817	obj/kernel.asm	/^c0104817:	68 fc bf 10 c0       	push   $0xc010bffc$/;"	l
c010481c	obj/kernel.asm	/^c010481c:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104821	obj/kernel.asm	/^c0104821:	68 86 02 00 00       	push   $0x286$/;"	l
c0104826	obj/kernel.asm	/^c0104826:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c010482b	obj/kernel.asm	/^c010482b:	e8 aa bb ff ff       	call   c01003da <__panic>$/;"	l
c0104830	obj/kernel.asm	/^c0104830:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104835	obj/kernel.asm	/^c0104835:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104838	obj/kernel.asm	/^c0104838:	6a 00                	push   $0x0$/;"	l
c010483a	obj/kernel.asm	/^c010483a:	6a 00                	push   $0x0$/;"	l
c010483c	obj/kernel.asm	/^c010483c:	50                   	push   %eax$/;"	l
c010483d	obj/kernel.asm	/^c010483d:	e8 12 f8 ff ff       	call   c0104054 <get_pte>$/;"	l
c0104842	obj/kernel.asm	/^c0104842:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104845	obj/kernel.asm	/^c0104845:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104848	obj/kernel.asm	/^c0104848:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010484c	obj/kernel.asm	/^c010484c:	75 19                	jne    c0104867 <check_pgdir+0x106>$/;"	l
c010484e	obj/kernel.asm	/^c010484e:	68 28 c0 10 c0       	push   $0xc010c028$/;"	l
c0104853	obj/kernel.asm	/^c0104853:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104858	obj/kernel.asm	/^c0104858:	68 89 02 00 00       	push   $0x289$/;"	l
c010485d	obj/kernel.asm	/^c010485d:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104862	obj/kernel.asm	/^c0104862:	e8 73 bb ff ff       	call   c01003da <__panic>$/;"	l
c0104867	obj/kernel.asm	/^c0104867:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010486a	obj/kernel.asm	/^c010486a:	8b 00                	mov    (%eax),%eax$/;"	l
c010486c	obj/kernel.asm	/^c010486c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010486f	obj/kernel.asm	/^c010486f:	50                   	push   %eax$/;"	l
c0104870	obj/kernel.asm	/^c0104870:	e8 17 ee ff ff       	call   c010368c <pa2page>$/;"	l
c0104875	obj/kernel.asm	/^c0104875:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104878	obj/kernel.asm	/^c0104878:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010487b	obj/kernel.asm	/^c010487b:	74 19                	je     c0104896 <check_pgdir+0x135>$/;"	l
c010487d	obj/kernel.asm	/^c010487d:	68 55 c0 10 c0       	push   $0xc010c055$/;"	l
c0104882	obj/kernel.asm	/^c0104882:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104887	obj/kernel.asm	/^c0104887:	68 8a 02 00 00       	push   $0x28a$/;"	l
c010488c	obj/kernel.asm	/^c010488c:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104891	obj/kernel.asm	/^c0104891:	e8 44 bb ff ff       	call   c01003da <__panic>$/;"	l
c0104896	obj/kernel.asm	/^c0104896:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104899	obj/kernel.asm	/^c0104899:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010489c	obj/kernel.asm	/^c010489c:	e8 c3 ee ff ff       	call   c0103764 <page_ref>$/;"	l
c01048a1	obj/kernel.asm	/^c01048a1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01048a4	obj/kernel.asm	/^c01048a4:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01048a7	obj/kernel.asm	/^c01048a7:	74 19                	je     c01048c2 <check_pgdir+0x161>$/;"	l
c01048a9	obj/kernel.asm	/^c01048a9:	68 6a c0 10 c0       	push   $0xc010c06a$/;"	l
c01048ae	obj/kernel.asm	/^c01048ae:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c01048b3	obj/kernel.asm	/^c01048b3:	68 8b 02 00 00       	push   $0x28b$/;"	l
c01048b8	obj/kernel.asm	/^c01048b8:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c01048bd	obj/kernel.asm	/^c01048bd:	e8 18 bb ff ff       	call   c01003da <__panic>$/;"	l
c01048c2	obj/kernel.asm	/^c01048c2:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c01048c7	obj/kernel.asm	/^c01048c7:	8b 00                	mov    (%eax),%eax$/;"	l
c01048c9	obj/kernel.asm	/^c01048c9:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01048ce	obj/kernel.asm	/^c01048ce:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01048d1	obj/kernel.asm	/^c01048d1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01048d4	obj/kernel.asm	/^c01048d4:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01048d7	obj/kernel.asm	/^c01048d7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01048da	obj/kernel.asm	/^c01048da:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c01048df	obj/kernel.asm	/^c01048df:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c01048e2	obj/kernel.asm	/^c01048e2:	72 17                	jb     c01048fb <check_pgdir+0x19a>$/;"	l
c01048e4	obj/kernel.asm	/^c01048e4:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01048e7	obj/kernel.asm	/^c01048e7:	68 c0 bd 10 c0       	push   $0xc010bdc0$/;"	l
c01048ec	obj/kernel.asm	/^c01048ec:	68 8d 02 00 00       	push   $0x28d$/;"	l
c01048f1	obj/kernel.asm	/^c01048f1:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c01048f6	obj/kernel.asm	/^c01048f6:	e8 df ba ff ff       	call   c01003da <__panic>$/;"	l
c01048fb	obj/kernel.asm	/^c01048fb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01048fe	obj/kernel.asm	/^c01048fe:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104903	obj/kernel.asm	/^c0104903:	83 c0 04             	add    $0x4,%eax$/;"	l
c0104906	obj/kernel.asm	/^c0104906:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104909	obj/kernel.asm	/^c0104909:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c010490e	obj/kernel.asm	/^c010490e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104911	obj/kernel.asm	/^c0104911:	6a 00                	push   $0x0$/;"	l
c0104913	obj/kernel.asm	/^c0104913:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104918	obj/kernel.asm	/^c0104918:	50                   	push   %eax$/;"	l
c0104919	obj/kernel.asm	/^c0104919:	e8 36 f7 ff ff       	call   c0104054 <get_pte>$/;"	l
c010491e	obj/kernel.asm	/^c010491e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104921	obj/kernel.asm	/^c0104921:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0104924	obj/kernel.asm	/^c0104924:	74 19                	je     c010493f <check_pgdir+0x1de>$/;"	l
c0104926	obj/kernel.asm	/^c0104926:	68 7c c0 10 c0       	push   $0xc010c07c$/;"	l
c010492b	obj/kernel.asm	/^c010492b:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104930	obj/kernel.asm	/^c0104930:	68 8e 02 00 00       	push   $0x28e$/;"	l
c0104935	obj/kernel.asm	/^c0104935:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c010493a	obj/kernel.asm	/^c010493a:	e8 9b ba ff ff       	call   c01003da <__panic>$/;"	l
c010493f	obj/kernel.asm	/^c010493f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104942	obj/kernel.asm	/^c0104942:	6a 01                	push   $0x1$/;"	l
c0104944	obj/kernel.asm	/^c0104944:	e8 22 f0 ff ff       	call   c010396b <alloc_pages>$/;"	l
c0104949	obj/kernel.asm	/^c0104949:	83 c4 10             	add    $0x10,%esp$/;"	l
c010494c	obj/kernel.asm	/^c010494c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010494f	obj/kernel.asm	/^c010494f:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104954	obj/kernel.asm	/^c0104954:	6a 06                	push   $0x6$/;"	l
c0104956	obj/kernel.asm	/^c0104956:	68 00 10 00 00       	push   $0x1000$/;"	l
c010495b	obj/kernel.asm	/^c010495b:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c010495e	obj/kernel.asm	/^c010495e:	50                   	push   %eax$/;"	l
c010495f	obj/kernel.asm	/^c010495f:	e8 22 fc ff ff       	call   c0104586 <page_insert>$/;"	l
c0104964	obj/kernel.asm	/^c0104964:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104967	obj/kernel.asm	/^c0104967:	85 c0                	test   %eax,%eax$/;"	l
c0104969	obj/kernel.asm	/^c0104969:	74 19                	je     c0104984 <check_pgdir+0x223>$/;"	l
c010496b	obj/kernel.asm	/^c010496b:	68 a4 c0 10 c0       	push   $0xc010c0a4$/;"	l
c0104970	obj/kernel.asm	/^c0104970:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104975	obj/kernel.asm	/^c0104975:	68 91 02 00 00       	push   $0x291$/;"	l
c010497a	obj/kernel.asm	/^c010497a:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c010497f	obj/kernel.asm	/^c010497f:	e8 56 ba ff ff       	call   c01003da <__panic>$/;"	l
c0104984	obj/kernel.asm	/^c0104984:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104989	obj/kernel.asm	/^c0104989:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010498c	obj/kernel.asm	/^c010498c:	6a 00                	push   $0x0$/;"	l
c010498e	obj/kernel.asm	/^c010498e:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104993	obj/kernel.asm	/^c0104993:	50                   	push   %eax$/;"	l
c0104994	obj/kernel.asm	/^c0104994:	e8 bb f6 ff ff       	call   c0104054 <get_pte>$/;"	l
c0104999	obj/kernel.asm	/^c0104999:	83 c4 10             	add    $0x10,%esp$/;"	l
c010499c	obj/kernel.asm	/^c010499c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010499f	obj/kernel.asm	/^c010499f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01049a3	obj/kernel.asm	/^c01049a3:	75 19                	jne    c01049be <check_pgdir+0x25d>$/;"	l
c01049a5	obj/kernel.asm	/^c01049a5:	68 dc c0 10 c0       	push   $0xc010c0dc$/;"	l
c01049aa	obj/kernel.asm	/^c01049aa:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c01049af	obj/kernel.asm	/^c01049af:	68 92 02 00 00       	push   $0x292$/;"	l
c01049b4	obj/kernel.asm	/^c01049b4:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c01049b9	obj/kernel.asm	/^c01049b9:	e8 1c ba ff ff       	call   c01003da <__panic>$/;"	l
c01049be	obj/kernel.asm	/^c01049be:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01049c1	obj/kernel.asm	/^c01049c1:	8b 00                	mov    (%eax),%eax$/;"	l
c01049c3	obj/kernel.asm	/^c01049c3:	83 e0 04             	and    $0x4,%eax$/;"	l
c01049c6	obj/kernel.asm	/^c01049c6:	85 c0                	test   %eax,%eax$/;"	l
c01049c8	obj/kernel.asm	/^c01049c8:	75 19                	jne    c01049e3 <check_pgdir+0x282>$/;"	l
c01049ca	obj/kernel.asm	/^c01049ca:	68 0c c1 10 c0       	push   $0xc010c10c$/;"	l
c01049cf	obj/kernel.asm	/^c01049cf:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c01049d4	obj/kernel.asm	/^c01049d4:	68 93 02 00 00       	push   $0x293$/;"	l
c01049d9	obj/kernel.asm	/^c01049d9:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c01049de	obj/kernel.asm	/^c01049de:	e8 f7 b9 ff ff       	call   c01003da <__panic>$/;"	l
c01049e3	obj/kernel.asm	/^c01049e3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01049e6	obj/kernel.asm	/^c01049e6:	8b 00                	mov    (%eax),%eax$/;"	l
c01049e8	obj/kernel.asm	/^c01049e8:	83 e0 02             	and    $0x2,%eax$/;"	l
c01049eb	obj/kernel.asm	/^c01049eb:	85 c0                	test   %eax,%eax$/;"	l
c01049ed	obj/kernel.asm	/^c01049ed:	75 19                	jne    c0104a08 <check_pgdir+0x2a7>$/;"	l
c01049ef	obj/kernel.asm	/^c01049ef:	68 1a c1 10 c0       	push   $0xc010c11a$/;"	l
c01049f4	obj/kernel.asm	/^c01049f4:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c01049f9	obj/kernel.asm	/^c01049f9:	68 94 02 00 00       	push   $0x294$/;"	l
c01049fe	obj/kernel.asm	/^c01049fe:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104a03	obj/kernel.asm	/^c0104a03:	e8 d2 b9 ff ff       	call   c01003da <__panic>$/;"	l
c0104a08	obj/kernel.asm	/^c0104a08:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104a0d	obj/kernel.asm	/^c0104a0d:	8b 00                	mov    (%eax),%eax$/;"	l
c0104a0f	obj/kernel.asm	/^c0104a0f:	83 e0 04             	and    $0x4,%eax$/;"	l
c0104a12	obj/kernel.asm	/^c0104a12:	85 c0                	test   %eax,%eax$/;"	l
c0104a14	obj/kernel.asm	/^c0104a14:	75 19                	jne    c0104a2f <check_pgdir+0x2ce>$/;"	l
c0104a16	obj/kernel.asm	/^c0104a16:	68 28 c1 10 c0       	push   $0xc010c128$/;"	l
c0104a1b	obj/kernel.asm	/^c0104a1b:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104a20	obj/kernel.asm	/^c0104a20:	68 95 02 00 00       	push   $0x295$/;"	l
c0104a25	obj/kernel.asm	/^c0104a25:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104a2a	obj/kernel.asm	/^c0104a2a:	e8 ab b9 ff ff       	call   c01003da <__panic>$/;"	l
c0104a2f	obj/kernel.asm	/^c0104a2f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104a32	obj/kernel.asm	/^c0104a32:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104a35	obj/kernel.asm	/^c0104a35:	e8 2a ed ff ff       	call   c0103764 <page_ref>$/;"	l
c0104a3a	obj/kernel.asm	/^c0104a3a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104a3d	obj/kernel.asm	/^c0104a3d:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104a40	obj/kernel.asm	/^c0104a40:	74 19                	je     c0104a5b <check_pgdir+0x2fa>$/;"	l
c0104a42	obj/kernel.asm	/^c0104a42:	68 3e c1 10 c0       	push   $0xc010c13e$/;"	l
c0104a47	obj/kernel.asm	/^c0104a47:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104a4c	obj/kernel.asm	/^c0104a4c:	68 96 02 00 00       	push   $0x296$/;"	l
c0104a51	obj/kernel.asm	/^c0104a51:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104a56	obj/kernel.asm	/^c0104a56:	e8 7f b9 ff ff       	call   c01003da <__panic>$/;"	l
c0104a5b	obj/kernel.asm	/^c0104a5b:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104a60	obj/kernel.asm	/^c0104a60:	6a 00                	push   $0x0$/;"	l
c0104a62	obj/kernel.asm	/^c0104a62:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104a67	obj/kernel.asm	/^c0104a67:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104a6a	obj/kernel.asm	/^c0104a6a:	50                   	push   %eax$/;"	l
c0104a6b	obj/kernel.asm	/^c0104a6b:	e8 16 fb ff ff       	call   c0104586 <page_insert>$/;"	l
c0104a70	obj/kernel.asm	/^c0104a70:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104a73	obj/kernel.asm	/^c0104a73:	85 c0                	test   %eax,%eax$/;"	l
c0104a75	obj/kernel.asm	/^c0104a75:	74 19                	je     c0104a90 <check_pgdir+0x32f>$/;"	l
c0104a77	obj/kernel.asm	/^c0104a77:	68 50 c1 10 c0       	push   $0xc010c150$/;"	l
c0104a7c	obj/kernel.asm	/^c0104a7c:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104a81	obj/kernel.asm	/^c0104a81:	68 98 02 00 00       	push   $0x298$/;"	l
c0104a86	obj/kernel.asm	/^c0104a86:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104a8b	obj/kernel.asm	/^c0104a8b:	e8 4a b9 ff ff       	call   c01003da <__panic>$/;"	l
c0104a90	obj/kernel.asm	/^c0104a90:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104a93	obj/kernel.asm	/^c0104a93:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104a96	obj/kernel.asm	/^c0104a96:	e8 c9 ec ff ff       	call   c0103764 <page_ref>$/;"	l
c0104a9b	obj/kernel.asm	/^c0104a9b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104a9e	obj/kernel.asm	/^c0104a9e:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0104aa1	obj/kernel.asm	/^c0104aa1:	74 19                	je     c0104abc <check_pgdir+0x35b>$/;"	l
c0104aa3	obj/kernel.asm	/^c0104aa3:	68 7c c1 10 c0       	push   $0xc010c17c$/;"	l
c0104aa8	obj/kernel.asm	/^c0104aa8:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104aad	obj/kernel.asm	/^c0104aad:	68 99 02 00 00       	push   $0x299$/;"	l
c0104ab2	obj/kernel.asm	/^c0104ab2:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104ab7	obj/kernel.asm	/^c0104ab7:	e8 1e b9 ff ff       	call   c01003da <__panic>$/;"	l
c0104abc	obj/kernel.asm	/^c0104abc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104abf	obj/kernel.asm	/^c0104abf:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104ac2	obj/kernel.asm	/^c0104ac2:	e8 9d ec ff ff       	call   c0103764 <page_ref>$/;"	l
c0104ac7	obj/kernel.asm	/^c0104ac7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104aca	obj/kernel.asm	/^c0104aca:	85 c0                	test   %eax,%eax$/;"	l
c0104acc	obj/kernel.asm	/^c0104acc:	74 19                	je     c0104ae7 <check_pgdir+0x386>$/;"	l
c0104ace	obj/kernel.asm	/^c0104ace:	68 8e c1 10 c0       	push   $0xc010c18e$/;"	l
c0104ad3	obj/kernel.asm	/^c0104ad3:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104ad8	obj/kernel.asm	/^c0104ad8:	68 9a 02 00 00       	push   $0x29a$/;"	l
c0104add	obj/kernel.asm	/^c0104add:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104ae2	obj/kernel.asm	/^c0104ae2:	e8 f3 b8 ff ff       	call   c01003da <__panic>$/;"	l
c0104ae7	obj/kernel.asm	/^c0104ae7:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104aec	obj/kernel.asm	/^c0104aec:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104aef	obj/kernel.asm	/^c0104aef:	6a 00                	push   $0x0$/;"	l
c0104af1	obj/kernel.asm	/^c0104af1:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104af6	obj/kernel.asm	/^c0104af6:	50                   	push   %eax$/;"	l
c0104af7	obj/kernel.asm	/^c0104af7:	e8 58 f5 ff ff       	call   c0104054 <get_pte>$/;"	l
c0104afc	obj/kernel.asm	/^c0104afc:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104aff	obj/kernel.asm	/^c0104aff:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104b02	obj/kernel.asm	/^c0104b02:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104b06	obj/kernel.asm	/^c0104b06:	75 19                	jne    c0104b21 <check_pgdir+0x3c0>$/;"	l
c0104b08	obj/kernel.asm	/^c0104b08:	68 dc c0 10 c0       	push   $0xc010c0dc$/;"	l
c0104b0d	obj/kernel.asm	/^c0104b0d:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104b12	obj/kernel.asm	/^c0104b12:	68 9b 02 00 00       	push   $0x29b$/;"	l
c0104b17	obj/kernel.asm	/^c0104b17:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104b1c	obj/kernel.asm	/^c0104b1c:	e8 b9 b8 ff ff       	call   c01003da <__panic>$/;"	l
c0104b21	obj/kernel.asm	/^c0104b21:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b24	obj/kernel.asm	/^c0104b24:	8b 00                	mov    (%eax),%eax$/;"	l
c0104b26	obj/kernel.asm	/^c0104b26:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104b29	obj/kernel.asm	/^c0104b29:	50                   	push   %eax$/;"	l
c0104b2a	obj/kernel.asm	/^c0104b2a:	e8 5d eb ff ff       	call   c010368c <pa2page>$/;"	l
c0104b2f	obj/kernel.asm	/^c0104b2f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104b32	obj/kernel.asm	/^c0104b32:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0104b35	obj/kernel.asm	/^c0104b35:	74 19                	je     c0104b50 <check_pgdir+0x3ef>$/;"	l
c0104b37	obj/kernel.asm	/^c0104b37:	68 55 c0 10 c0       	push   $0xc010c055$/;"	l
c0104b3c	obj/kernel.asm	/^c0104b3c:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104b41	obj/kernel.asm	/^c0104b41:	68 9c 02 00 00       	push   $0x29c$/;"	l
c0104b46	obj/kernel.asm	/^c0104b46:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104b4b	obj/kernel.asm	/^c0104b4b:	e8 8a b8 ff ff       	call   c01003da <__panic>$/;"	l
c0104b50	obj/kernel.asm	/^c0104b50:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b53	obj/kernel.asm	/^c0104b53:	8b 00                	mov    (%eax),%eax$/;"	l
c0104b55	obj/kernel.asm	/^c0104b55:	83 e0 04             	and    $0x4,%eax$/;"	l
c0104b58	obj/kernel.asm	/^c0104b58:	85 c0                	test   %eax,%eax$/;"	l
c0104b5a	obj/kernel.asm	/^c0104b5a:	74 19                	je     c0104b75 <check_pgdir+0x414>$/;"	l
c0104b5c	obj/kernel.asm	/^c0104b5c:	68 a0 c1 10 c0       	push   $0xc010c1a0$/;"	l
c0104b61	obj/kernel.asm	/^c0104b61:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104b66	obj/kernel.asm	/^c0104b66:	68 9d 02 00 00       	push   $0x29d$/;"	l
c0104b6b	obj/kernel.asm	/^c0104b6b:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104b70	obj/kernel.asm	/^c0104b70:	e8 65 b8 ff ff       	call   c01003da <__panic>$/;"	l
c0104b75	obj/kernel.asm	/^c0104b75:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104b7a	obj/kernel.asm	/^c0104b7a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104b7d	obj/kernel.asm	/^c0104b7d:	6a 00                	push   $0x0$/;"	l
c0104b7f	obj/kernel.asm	/^c0104b7f:	50                   	push   %eax$/;"	l
c0104b80	obj/kernel.asm	/^c0104b80:	e8 c9 f9 ff ff       	call   c010454e <page_remove>$/;"	l
c0104b85	obj/kernel.asm	/^c0104b85:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104b88	obj/kernel.asm	/^c0104b88:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104b8b	obj/kernel.asm	/^c0104b8b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104b8e	obj/kernel.asm	/^c0104b8e:	e8 d1 eb ff ff       	call   c0103764 <page_ref>$/;"	l
c0104b93	obj/kernel.asm	/^c0104b93:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104b96	obj/kernel.asm	/^c0104b96:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104b99	obj/kernel.asm	/^c0104b99:	74 19                	je     c0104bb4 <check_pgdir+0x453>$/;"	l
c0104b9b	obj/kernel.asm	/^c0104b9b:	68 6a c0 10 c0       	push   $0xc010c06a$/;"	l
c0104ba0	obj/kernel.asm	/^c0104ba0:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104ba5	obj/kernel.asm	/^c0104ba5:	68 a0 02 00 00       	push   $0x2a0$/;"	l
c0104baa	obj/kernel.asm	/^c0104baa:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104baf	obj/kernel.asm	/^c0104baf:	e8 26 b8 ff ff       	call   c01003da <__panic>$/;"	l
c0104bb4	obj/kernel.asm	/^c0104bb4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104bb7	obj/kernel.asm	/^c0104bb7:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104bba	obj/kernel.asm	/^c0104bba:	e8 a5 eb ff ff       	call   c0103764 <page_ref>$/;"	l
c0104bbf	obj/kernel.asm	/^c0104bbf:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104bc2	obj/kernel.asm	/^c0104bc2:	85 c0                	test   %eax,%eax$/;"	l
c0104bc4	obj/kernel.asm	/^c0104bc4:	74 19                	je     c0104bdf <check_pgdir+0x47e>$/;"	l
c0104bc6	obj/kernel.asm	/^c0104bc6:	68 8e c1 10 c0       	push   $0xc010c18e$/;"	l
c0104bcb	obj/kernel.asm	/^c0104bcb:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104bd0	obj/kernel.asm	/^c0104bd0:	68 a1 02 00 00       	push   $0x2a1$/;"	l
c0104bd5	obj/kernel.asm	/^c0104bd5:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104bda	obj/kernel.asm	/^c0104bda:	e8 fb b7 ff ff       	call   c01003da <__panic>$/;"	l
c0104bdf	obj/kernel.asm	/^c0104bdf:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104be4	obj/kernel.asm	/^c0104be4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104be7	obj/kernel.asm	/^c0104be7:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104bec	obj/kernel.asm	/^c0104bec:	50                   	push   %eax$/;"	l
c0104bed	obj/kernel.asm	/^c0104bed:	e8 5c f9 ff ff       	call   c010454e <page_remove>$/;"	l
c0104bf2	obj/kernel.asm	/^c0104bf2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104bf5	obj/kernel.asm	/^c0104bf5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104bf8	obj/kernel.asm	/^c0104bf8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104bfb	obj/kernel.asm	/^c0104bfb:	e8 64 eb ff ff       	call   c0103764 <page_ref>$/;"	l
c0104c00	obj/kernel.asm	/^c0104c00:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c03	obj/kernel.asm	/^c0104c03:	85 c0                	test   %eax,%eax$/;"	l
c0104c05	obj/kernel.asm	/^c0104c05:	74 19                	je     c0104c20 <check_pgdir+0x4bf>$/;"	l
c0104c07	obj/kernel.asm	/^c0104c07:	68 b5 c1 10 c0       	push   $0xc010c1b5$/;"	l
c0104c0c	obj/kernel.asm	/^c0104c0c:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104c11	obj/kernel.asm	/^c0104c11:	68 a4 02 00 00       	push   $0x2a4$/;"	l
c0104c16	obj/kernel.asm	/^c0104c16:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104c1b	obj/kernel.asm	/^c0104c1b:	e8 ba b7 ff ff       	call   c01003da <__panic>$/;"	l
c0104c20	obj/kernel.asm	/^c0104c20:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104c23	obj/kernel.asm	/^c0104c23:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104c26	obj/kernel.asm	/^c0104c26:	e8 39 eb ff ff       	call   c0103764 <page_ref>$/;"	l
c0104c2b	obj/kernel.asm	/^c0104c2b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c2e	obj/kernel.asm	/^c0104c2e:	85 c0                	test   %eax,%eax$/;"	l
c0104c30	obj/kernel.asm	/^c0104c30:	74 19                	je     c0104c4b <check_pgdir+0x4ea>$/;"	l
c0104c32	obj/kernel.asm	/^c0104c32:	68 8e c1 10 c0       	push   $0xc010c18e$/;"	l
c0104c37	obj/kernel.asm	/^c0104c37:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104c3c	obj/kernel.asm	/^c0104c3c:	68 a5 02 00 00       	push   $0x2a5$/;"	l
c0104c41	obj/kernel.asm	/^c0104c41:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104c46	obj/kernel.asm	/^c0104c46:	e8 8f b7 ff ff       	call   c01003da <__panic>$/;"	l
c0104c4b	obj/kernel.asm	/^c0104c4b:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104c50	obj/kernel.asm	/^c0104c50:	8b 00                	mov    (%eax),%eax$/;"	l
c0104c52	obj/kernel.asm	/^c0104c52:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104c55	obj/kernel.asm	/^c0104c55:	50                   	push   %eax$/;"	l
c0104c56	obj/kernel.asm	/^c0104c56:	e8 31 ea ff ff       	call   c010368c <pa2page>$/;"	l
c0104c5b	obj/kernel.asm	/^c0104c5b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c5e	obj/kernel.asm	/^c0104c5e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104c61	obj/kernel.asm	/^c0104c61:	50                   	push   %eax$/;"	l
c0104c62	obj/kernel.asm	/^c0104c62:	e8 fd ea ff ff       	call   c0103764 <page_ref>$/;"	l
c0104c67	obj/kernel.asm	/^c0104c67:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c6a	obj/kernel.asm	/^c0104c6a:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104c6d	obj/kernel.asm	/^c0104c6d:	74 19                	je     c0104c88 <check_pgdir+0x527>$/;"	l
c0104c6f	obj/kernel.asm	/^c0104c6f:	68 c8 c1 10 c0       	push   $0xc010c1c8$/;"	l
c0104c74	obj/kernel.asm	/^c0104c74:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104c79	obj/kernel.asm	/^c0104c79:	68 a7 02 00 00       	push   $0x2a7$/;"	l
c0104c7e	obj/kernel.asm	/^c0104c7e:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104c83	obj/kernel.asm	/^c0104c83:	e8 52 b7 ff ff       	call   c01003da <__panic>$/;"	l
c0104c88	obj/kernel.asm	/^c0104c88:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104c8d	obj/kernel.asm	/^c0104c8d:	8b 00                	mov    (%eax),%eax$/;"	l
c0104c8f	obj/kernel.asm	/^c0104c8f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104c92	obj/kernel.asm	/^c0104c92:	50                   	push   %eax$/;"	l
c0104c93	obj/kernel.asm	/^c0104c93:	e8 f4 e9 ff ff       	call   c010368c <pa2page>$/;"	l
c0104c98	obj/kernel.asm	/^c0104c98:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c9b	obj/kernel.asm	/^c0104c9b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104c9e	obj/kernel.asm	/^c0104c9e:	6a 01                	push   $0x1$/;"	l
c0104ca0	obj/kernel.asm	/^c0104ca0:	50                   	push   %eax$/;"	l
c0104ca1	obj/kernel.asm	/^c0104ca1:	e8 31 ed ff ff       	call   c01039d7 <free_pages>$/;"	l
c0104ca6	obj/kernel.asm	/^c0104ca6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ca9	obj/kernel.asm	/^c0104ca9:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104cae	obj/kernel.asm	/^c0104cae:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0104cb4	obj/kernel.asm	/^c0104cb4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104cb7	obj/kernel.asm	/^c0104cb7:	68 ee c1 10 c0       	push   $0xc010c1ee$/;"	l
c0104cbc	obj/kernel.asm	/^c0104cbc:	e8 b4 b5 ff ff       	call   c0100275 <cprintf>$/;"	l
c0104cc1	obj/kernel.asm	/^c0104cc1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104cc4	obj/kernel.asm	/^c0104cc4:	c9                   	leave  $/;"	l
c0104cc5	obj/kernel.asm	/^c0104cc5:	c3                   	ret    $/;"	l
c0104cc6	obj/kernel.asm	/^c0104cc6 <check_boot_pgdir>:$/;"	l
c0104cc6	obj/kernel.asm	/^c0104cc6:	55                   	push   %ebp$/;"	l
c0104cc7	obj/kernel.asm	/^c0104cc7:	89 e5                	mov    %esp,%ebp$/;"	l
c0104cc9	obj/kernel.asm	/^c0104cc9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104ccc	obj/kernel.asm	/^c0104ccc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0104cd3	obj/kernel.asm	/^c0104cd3:	e9 a3 00 00 00       	jmp    c0104d7b <check_boot_pgdir+0xb5>$/;"	l
c0104cd8	obj/kernel.asm	/^c0104cd8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104cdb	obj/kernel.asm	/^c0104cdb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104cde	obj/kernel.asm	/^c0104cde:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104ce1	obj/kernel.asm	/^c0104ce1:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104ce4	obj/kernel.asm	/^c0104ce4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104ce7	obj/kernel.asm	/^c0104ce7:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c0104cec	obj/kernel.asm	/^c0104cec:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c0104cef	obj/kernel.asm	/^c0104cef:	72 17                	jb     c0104d08 <check_boot_pgdir+0x42>$/;"	l
c0104cf1	obj/kernel.asm	/^c0104cf1:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0104cf4	obj/kernel.asm	/^c0104cf4:	68 c0 bd 10 c0       	push   $0xc010bdc0$/;"	l
c0104cf9	obj/kernel.asm	/^c0104cf9:	68 b3 02 00 00       	push   $0x2b3$/;"	l
c0104cfe	obj/kernel.asm	/^c0104cfe:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104d03	obj/kernel.asm	/^c0104d03:	e8 d2 b6 ff ff       	call   c01003da <__panic>$/;"	l
c0104d08	obj/kernel.asm	/^c0104d08:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104d0b	obj/kernel.asm	/^c0104d0b:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104d10	obj/kernel.asm	/^c0104d10:	89 c2                	mov    %eax,%edx$/;"	l
c0104d12	obj/kernel.asm	/^c0104d12:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104d17	obj/kernel.asm	/^c0104d17:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104d1a	obj/kernel.asm	/^c0104d1a:	6a 00                	push   $0x0$/;"	l
c0104d1c	obj/kernel.asm	/^c0104d1c:	52                   	push   %edx$/;"	l
c0104d1d	obj/kernel.asm	/^c0104d1d:	50                   	push   %eax$/;"	l
c0104d1e	obj/kernel.asm	/^c0104d1e:	e8 31 f3 ff ff       	call   c0104054 <get_pte>$/;"	l
c0104d23	obj/kernel.asm	/^c0104d23:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104d26	obj/kernel.asm	/^c0104d26:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104d29	obj/kernel.asm	/^c0104d29:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0104d2d	obj/kernel.asm	/^c0104d2d:	75 19                	jne    c0104d48 <check_boot_pgdir+0x82>$/;"	l
c0104d2f	obj/kernel.asm	/^c0104d2f:	68 08 c2 10 c0       	push   $0xc010c208$/;"	l
c0104d34	obj/kernel.asm	/^c0104d34:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104d39	obj/kernel.asm	/^c0104d39:	68 b3 02 00 00       	push   $0x2b3$/;"	l
c0104d3e	obj/kernel.asm	/^c0104d3e:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104d43	obj/kernel.asm	/^c0104d43:	e8 92 b6 ff ff       	call   c01003da <__panic>$/;"	l
c0104d48	obj/kernel.asm	/^c0104d48:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0104d4b	obj/kernel.asm	/^c0104d4b:	8b 00                	mov    (%eax),%eax$/;"	l
c0104d4d	obj/kernel.asm	/^c0104d4d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104d52	obj/kernel.asm	/^c0104d52:	89 c2                	mov    %eax,%edx$/;"	l
c0104d54	obj/kernel.asm	/^c0104d54:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d57	obj/kernel.asm	/^c0104d57:	39 c2                	cmp    %eax,%edx$/;"	l
c0104d59	obj/kernel.asm	/^c0104d59:	74 19                	je     c0104d74 <check_boot_pgdir+0xae>$/;"	l
c0104d5b	obj/kernel.asm	/^c0104d5b:	68 45 c2 10 c0       	push   $0xc010c245$/;"	l
c0104d60	obj/kernel.asm	/^c0104d60:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104d65	obj/kernel.asm	/^c0104d65:	68 b4 02 00 00       	push   $0x2b4$/;"	l
c0104d6a	obj/kernel.asm	/^c0104d6a:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104d6f	obj/kernel.asm	/^c0104d6f:	e8 66 b6 ff ff       	call   c01003da <__panic>$/;"	l
c0104d74	obj/kernel.asm	/^c0104d74:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
c0104d7b	obj/kernel.asm	/^c0104d7b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0104d7e	obj/kernel.asm	/^c0104d7e:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c0104d83	obj/kernel.asm	/^c0104d83:	39 c2                	cmp    %eax,%edx$/;"	l
c0104d85	obj/kernel.asm	/^c0104d85:	0f 82 4d ff ff ff    	jb     c0104cd8 <check_boot_pgdir+0x12>$/;"	l
c0104d8b	obj/kernel.asm	/^c0104d8b:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104d90	obj/kernel.asm	/^c0104d90:	05 ac 0f 00 00       	add    $0xfac,%eax$/;"	l
c0104d95	obj/kernel.asm	/^c0104d95:	8b 00                	mov    (%eax),%eax$/;"	l
c0104d97	obj/kernel.asm	/^c0104d97:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104d9c	obj/kernel.asm	/^c0104d9c:	89 c2                	mov    %eax,%edx$/;"	l
c0104d9e	obj/kernel.asm	/^c0104d9e:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104da3	obj/kernel.asm	/^c0104da3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104da6	obj/kernel.asm	/^c0104da6:	81 7d e4 ff ff ff bf 	cmpl   $0xbfffffff,-0x1c(%ebp)$/;"	l
c0104dad	obj/kernel.asm	/^c0104dad:	77 17                	ja     c0104dc6 <check_boot_pgdir+0x100>$/;"	l
c0104daf	obj/kernel.asm	/^c0104daf:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104db2	obj/kernel.asm	/^c0104db2:	68 64 be 10 c0       	push   $0xc010be64$/;"	l
c0104db7	obj/kernel.asm	/^c0104db7:	68 b7 02 00 00       	push   $0x2b7$/;"	l
c0104dbc	obj/kernel.asm	/^c0104dbc:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104dc1	obj/kernel.asm	/^c0104dc1:	e8 14 b6 ff ff       	call   c01003da <__panic>$/;"	l
c0104dc6	obj/kernel.asm	/^c0104dc6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104dc9	obj/kernel.asm	/^c0104dc9:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0104dce	obj/kernel.asm	/^c0104dce:	39 c2                	cmp    %eax,%edx$/;"	l
c0104dd0	obj/kernel.asm	/^c0104dd0:	74 19                	je     c0104deb <check_boot_pgdir+0x125>$/;"	l
c0104dd2	obj/kernel.asm	/^c0104dd2:	68 5c c2 10 c0       	push   $0xc010c25c$/;"	l
c0104dd7	obj/kernel.asm	/^c0104dd7:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104ddc	obj/kernel.asm	/^c0104ddc:	68 b7 02 00 00       	push   $0x2b7$/;"	l
c0104de1	obj/kernel.asm	/^c0104de1:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104de6	obj/kernel.asm	/^c0104de6:	e8 ef b5 ff ff       	call   c01003da <__panic>$/;"	l
c0104deb	obj/kernel.asm	/^c0104deb:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104df0	obj/kernel.asm	/^c0104df0:	8b 00                	mov    (%eax),%eax$/;"	l
c0104df2	obj/kernel.asm	/^c0104df2:	85 c0                	test   %eax,%eax$/;"	l
c0104df4	obj/kernel.asm	/^c0104df4:	74 19                	je     c0104e0f <check_boot_pgdir+0x149>$/;"	l
c0104df6	obj/kernel.asm	/^c0104df6:	68 90 c2 10 c0       	push   $0xc010c290$/;"	l
c0104dfb	obj/kernel.asm	/^c0104dfb:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104e00	obj/kernel.asm	/^c0104e00:	68 b9 02 00 00       	push   $0x2b9$/;"	l
c0104e05	obj/kernel.asm	/^c0104e05:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104e0a	obj/kernel.asm	/^c0104e0a:	e8 cb b5 ff ff       	call   c01003da <__panic>$/;"	l
c0104e0f	obj/kernel.asm	/^c0104e0f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104e12	obj/kernel.asm	/^c0104e12:	6a 01                	push   $0x1$/;"	l
c0104e14	obj/kernel.asm	/^c0104e14:	e8 52 eb ff ff       	call   c010396b <alloc_pages>$/;"	l
c0104e19	obj/kernel.asm	/^c0104e19:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104e1c	obj/kernel.asm	/^c0104e1c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0104e1f	obj/kernel.asm	/^c0104e1f:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104e24	obj/kernel.asm	/^c0104e24:	6a 02                	push   $0x2$/;"	l
c0104e26	obj/kernel.asm	/^c0104e26:	68 00 01 00 00       	push   $0x100$/;"	l
c0104e2b	obj/kernel.asm	/^c0104e2b:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104e2e	obj/kernel.asm	/^c0104e2e:	50                   	push   %eax$/;"	l
c0104e2f	obj/kernel.asm	/^c0104e2f:	e8 52 f7 ff ff       	call   c0104586 <page_insert>$/;"	l
c0104e34	obj/kernel.asm	/^c0104e34:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104e37	obj/kernel.asm	/^c0104e37:	85 c0                	test   %eax,%eax$/;"	l
c0104e39	obj/kernel.asm	/^c0104e39:	74 19                	je     c0104e54 <check_boot_pgdir+0x18e>$/;"	l
c0104e3b	obj/kernel.asm	/^c0104e3b:	68 a4 c2 10 c0       	push   $0xc010c2a4$/;"	l
c0104e40	obj/kernel.asm	/^c0104e40:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104e45	obj/kernel.asm	/^c0104e45:	68 bd 02 00 00       	push   $0x2bd$/;"	l
c0104e4a	obj/kernel.asm	/^c0104e4a:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104e4f	obj/kernel.asm	/^c0104e4f:	e8 86 b5 ff ff       	call   c01003da <__panic>$/;"	l
c0104e54	obj/kernel.asm	/^c0104e54:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104e57	obj/kernel.asm	/^c0104e57:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104e5a	obj/kernel.asm	/^c0104e5a:	e8 05 e9 ff ff       	call   c0103764 <page_ref>$/;"	l
c0104e5f	obj/kernel.asm	/^c0104e5f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104e62	obj/kernel.asm	/^c0104e62:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104e65	obj/kernel.asm	/^c0104e65:	74 19                	je     c0104e80 <check_boot_pgdir+0x1ba>$/;"	l
c0104e67	obj/kernel.asm	/^c0104e67:	68 d2 c2 10 c0       	push   $0xc010c2d2$/;"	l
c0104e6c	obj/kernel.asm	/^c0104e6c:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104e71	obj/kernel.asm	/^c0104e71:	68 be 02 00 00       	push   $0x2be$/;"	l
c0104e76	obj/kernel.asm	/^c0104e76:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104e7b	obj/kernel.asm	/^c0104e7b:	e8 5a b5 ff ff       	call   c01003da <__panic>$/;"	l
c0104e80	obj/kernel.asm	/^c0104e80:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104e85	obj/kernel.asm	/^c0104e85:	6a 02                	push   $0x2$/;"	l
c0104e87	obj/kernel.asm	/^c0104e87:	68 00 11 00 00       	push   $0x1100$/;"	l
c0104e8c	obj/kernel.asm	/^c0104e8c:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104e8f	obj/kernel.asm	/^c0104e8f:	50                   	push   %eax$/;"	l
c0104e90	obj/kernel.asm	/^c0104e90:	e8 f1 f6 ff ff       	call   c0104586 <page_insert>$/;"	l
c0104e95	obj/kernel.asm	/^c0104e95:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104e98	obj/kernel.asm	/^c0104e98:	85 c0                	test   %eax,%eax$/;"	l
c0104e9a	obj/kernel.asm	/^c0104e9a:	74 19                	je     c0104eb5 <check_boot_pgdir+0x1ef>$/;"	l
c0104e9c	obj/kernel.asm	/^c0104e9c:	68 e4 c2 10 c0       	push   $0xc010c2e4$/;"	l
c0104ea1	obj/kernel.asm	/^c0104ea1:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104ea6	obj/kernel.asm	/^c0104ea6:	68 bf 02 00 00       	push   $0x2bf$/;"	l
c0104eab	obj/kernel.asm	/^c0104eab:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104eb0	obj/kernel.asm	/^c0104eb0:	e8 25 b5 ff ff       	call   c01003da <__panic>$/;"	l
c0104eb5	obj/kernel.asm	/^c0104eb5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104eb8	obj/kernel.asm	/^c0104eb8:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104ebb	obj/kernel.asm	/^c0104ebb:	e8 a4 e8 ff ff       	call   c0103764 <page_ref>$/;"	l
c0104ec0	obj/kernel.asm	/^c0104ec0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ec3	obj/kernel.asm	/^c0104ec3:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0104ec6	obj/kernel.asm	/^c0104ec6:	74 19                	je     c0104ee1 <check_boot_pgdir+0x21b>$/;"	l
c0104ec8	obj/kernel.asm	/^c0104ec8:	68 1b c3 10 c0       	push   $0xc010c31b$/;"	l
c0104ecd	obj/kernel.asm	/^c0104ecd:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104ed2	obj/kernel.asm	/^c0104ed2:	68 c0 02 00 00       	push   $0x2c0$/;"	l
c0104ed7	obj/kernel.asm	/^c0104ed7:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104edc	obj/kernel.asm	/^c0104edc:	e8 f9 b4 ff ff       	call   c01003da <__panic>$/;"	l
c0104ee1	obj/kernel.asm	/^c0104ee1:	c7 45 dc 2c c3 10 c0 	movl   $0xc010c32c,-0x24(%ebp)$/;"	l
c0104ee8	obj/kernel.asm	/^c0104ee8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104eeb	obj/kernel.asm	/^c0104eeb:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0104eee	obj/kernel.asm	/^c0104eee:	68 00 01 00 00       	push   $0x100$/;"	l
c0104ef3	obj/kernel.asm	/^c0104ef3:	e8 cb 59 00 00       	call   c010a8c3 <strcpy>$/;"	l
c0104ef8	obj/kernel.asm	/^c0104ef8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104efb	obj/kernel.asm	/^c0104efb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104efe	obj/kernel.asm	/^c0104efe:	68 00 11 00 00       	push   $0x1100$/;"	l
c0104f03	obj/kernel.asm	/^c0104f03:	68 00 01 00 00       	push   $0x100$/;"	l
c0104f08	obj/kernel.asm	/^c0104f08:	e8 30 5a 00 00       	call   c010a93d <strcmp>$/;"	l
c0104f0d	obj/kernel.asm	/^c0104f0d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104f10	obj/kernel.asm	/^c0104f10:	85 c0                	test   %eax,%eax$/;"	l
c0104f12	obj/kernel.asm	/^c0104f12:	74 19                	je     c0104f2d <check_boot_pgdir+0x267>$/;"	l
c0104f14	obj/kernel.asm	/^c0104f14:	68 44 c3 10 c0       	push   $0xc010c344$/;"	l
c0104f19	obj/kernel.asm	/^c0104f19:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104f1e	obj/kernel.asm	/^c0104f1e:	68 c4 02 00 00       	push   $0x2c4$/;"	l
c0104f23	obj/kernel.asm	/^c0104f23:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104f28	obj/kernel.asm	/^c0104f28:	e8 ad b4 ff ff       	call   c01003da <__panic>$/;"	l
c0104f2d	obj/kernel.asm	/^c0104f2d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104f30	obj/kernel.asm	/^c0104f30:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104f33	obj/kernel.asm	/^c0104f33:	e8 91 e7 ff ff       	call   c01036c9 <page2kva>$/;"	l
c0104f38	obj/kernel.asm	/^c0104f38:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104f3b	obj/kernel.asm	/^c0104f3b:	05 00 01 00 00       	add    $0x100,%eax$/;"	l
c0104f40	obj/kernel.asm	/^c0104f40:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0104f43	obj/kernel.asm	/^c0104f43:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104f46	obj/kernel.asm	/^c0104f46:	68 00 01 00 00       	push   $0x100$/;"	l
c0104f4b	obj/kernel.asm	/^c0104f4b:	e8 1b 59 00 00       	call   c010a86b <strlen>$/;"	l
c0104f50	obj/kernel.asm	/^c0104f50:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104f53	obj/kernel.asm	/^c0104f53:	85 c0                	test   %eax,%eax$/;"	l
c0104f55	obj/kernel.asm	/^c0104f55:	74 19                	je     c0104f70 <check_boot_pgdir+0x2aa>$/;"	l
c0104f57	obj/kernel.asm	/^c0104f57:	68 7c c3 10 c0       	push   $0xc010c37c$/;"	l
c0104f5c	obj/kernel.asm	/^c0104f5c:	68 ad be 10 c0       	push   $0xc010bead$/;"	l
c0104f61	obj/kernel.asm	/^c0104f61:	68 c7 02 00 00       	push   $0x2c7$/;"	l
c0104f66	obj/kernel.asm	/^c0104f66:	68 88 be 10 c0       	push   $0xc010be88$/;"	l
c0104f6b	obj/kernel.asm	/^c0104f6b:	e8 6a b4 ff ff       	call   c01003da <__panic>$/;"	l
c0104f70	obj/kernel.asm	/^c0104f70:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104f73	obj/kernel.asm	/^c0104f73:	6a 01                	push   $0x1$/;"	l
c0104f75	obj/kernel.asm	/^c0104f75:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104f78	obj/kernel.asm	/^c0104f78:	e8 5a ea ff ff       	call   c01039d7 <free_pages>$/;"	l
c0104f7d	obj/kernel.asm	/^c0104f7d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104f80	obj/kernel.asm	/^c0104f80:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104f85	obj/kernel.asm	/^c0104f85:	8b 00                	mov    (%eax),%eax$/;"	l
c0104f87	obj/kernel.asm	/^c0104f87:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104f8c	obj/kernel.asm	/^c0104f8c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104f8f	obj/kernel.asm	/^c0104f8f:	50                   	push   %eax$/;"	l
c0104f90	obj/kernel.asm	/^c0104f90:	e8 f7 e6 ff ff       	call   c010368c <pa2page>$/;"	l
c0104f95	obj/kernel.asm	/^c0104f95:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104f98	obj/kernel.asm	/^c0104f98:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104f9b	obj/kernel.asm	/^c0104f9b:	6a 01                	push   $0x1$/;"	l
c0104f9d	obj/kernel.asm	/^c0104f9d:	50                   	push   %eax$/;"	l
c0104f9e	obj/kernel.asm	/^c0104f9e:	e8 34 ea ff ff       	call   c01039d7 <free_pages>$/;"	l
c0104fa3	obj/kernel.asm	/^c0104fa3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104fa6	obj/kernel.asm	/^c0104fa6:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0104fab	obj/kernel.asm	/^c0104fab:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0104fb1	obj/kernel.asm	/^c0104fb1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104fb4	obj/kernel.asm	/^c0104fb4:	68 a0 c3 10 c0       	push   $0xc010c3a0$/;"	l
c0104fb9	obj/kernel.asm	/^c0104fb9:	e8 b7 b2 ff ff       	call   c0100275 <cprintf>$/;"	l
c0104fbe	obj/kernel.asm	/^c0104fbe:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104fc1	obj/kernel.asm	/^c0104fc1:	c9                   	leave  $/;"	l
c0104fc2	obj/kernel.asm	/^c0104fc2:	c3                   	ret    $/;"	l
c0104fc3	obj/kernel.asm	/^c0104fc3 <perm2str>:$/;"	l
c0104fc3	obj/kernel.asm	/^c0104fc3:	55                   	push   %ebp$/;"	l
c0104fc4	obj/kernel.asm	/^c0104fc4:	89 e5                	mov    %esp,%ebp$/;"	l
c0104fc6	obj/kernel.asm	/^c0104fc6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104fc9	obj/kernel.asm	/^c0104fc9:	83 e0 04             	and    $0x4,%eax$/;"	l
c0104fcc	obj/kernel.asm	/^c0104fcc:	85 c0                	test   %eax,%eax$/;"	l
c0104fce	obj/kernel.asm	/^c0104fce:	74 07                	je     c0104fd7 <perm2str+0x14>$/;"	l
c0104fd0	obj/kernel.asm	/^c0104fd0:	b8 75 00 00 00       	mov    $0x75,%eax$/;"	l
c0104fd5	obj/kernel.asm	/^c0104fd5:	eb 05                	jmp    c0104fdc <perm2str+0x19>$/;"	l
c0104fd7	obj/kernel.asm	/^c0104fd7:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c0104fdc	obj/kernel.asm	/^c0104fdc:	a2 a8 bf 19 c0       	mov    %al,0xc019bfa8$/;"	l
c0104fe1	obj/kernel.asm	/^c0104fe1:	c6 05 a9 bf 19 c0 72 	movb   $0x72,0xc019bfa9$/;"	l
c0104fe8	obj/kernel.asm	/^c0104fe8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104feb	obj/kernel.asm	/^c0104feb:	83 e0 02             	and    $0x2,%eax$/;"	l
c0104fee	obj/kernel.asm	/^c0104fee:	85 c0                	test   %eax,%eax$/;"	l
c0104ff0	obj/kernel.asm	/^c0104ff0:	74 07                	je     c0104ff9 <perm2str+0x36>$/;"	l
c0104ff2	obj/kernel.asm	/^c0104ff2:	b8 77 00 00 00       	mov    $0x77,%eax$/;"	l
c0104ff7	obj/kernel.asm	/^c0104ff7:	eb 05                	jmp    c0104ffe <perm2str+0x3b>$/;"	l
c0104ff9	obj/kernel.asm	/^c0104ff9:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c0104ffe	obj/kernel.asm	/^c0104ffe:	a2 aa bf 19 c0       	mov    %al,0xc019bfaa$/;"	l
c0105003	obj/kernel.asm	/^c0105003:	c6 05 ab bf 19 c0 00 	movb   $0x0,0xc019bfab$/;"	l
c010500a	obj/kernel.asm	/^c010500a:	b8 a8 bf 19 c0       	mov    $0xc019bfa8,%eax$/;"	l
c010500f	obj/kernel.asm	/^c010500f:	5d                   	pop    %ebp$/;"	l
c0105010	obj/kernel.asm	/^c0105010:	c3                   	ret    $/;"	l
c0105011	obj/kernel.asm	/^c0105011 <get_pgtable_items>:$/;"	l
c0105011	obj/kernel.asm	/^c0105011:	55                   	push   %ebp$/;"	l
c0105012	obj/kernel.asm	/^c0105012:	89 e5                	mov    %esp,%ebp$/;"	l
c0105014	obj/kernel.asm	/^c0105014:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0105017	obj/kernel.asm	/^c0105017:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010501a	obj/kernel.asm	/^c010501a:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010501d	obj/kernel.asm	/^c010501d:	72 0a                	jb     c0105029 <get_pgtable_items+0x18>$/;"	l
c010501f	obj/kernel.asm	/^c010501f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105024	obj/kernel.asm	/^c0105024:	e9 9c 00 00 00       	jmp    c01050c5 <get_pgtable_items+0xb4>$/;"	l
c0105029	obj/kernel.asm	/^c0105029:	eb 04                	jmp    c010502f <get_pgtable_items+0x1e>$/;"	l
c010502b	obj/kernel.asm	/^c010502b:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c010502f	obj/kernel.asm	/^c010502f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105032	obj/kernel.asm	/^c0105032:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0105035	obj/kernel.asm	/^c0105035:	73 18                	jae    c010504f <get_pgtable_items+0x3e>$/;"	l
c0105037	obj/kernel.asm	/^c0105037:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010503a	obj/kernel.asm	/^c010503a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0105041	obj/kernel.asm	/^c0105041:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0105044	obj/kernel.asm	/^c0105044:	01 d0                	add    %edx,%eax$/;"	l
c0105046	obj/kernel.asm	/^c0105046:	8b 00                	mov    (%eax),%eax$/;"	l
c0105048	obj/kernel.asm	/^c0105048:	83 e0 01             	and    $0x1,%eax$/;"	l
c010504b	obj/kernel.asm	/^c010504b:	85 c0                	test   %eax,%eax$/;"	l
c010504d	obj/kernel.asm	/^c010504d:	74 dc                	je     c010502b <get_pgtable_items+0x1a>$/;"	l
c010504f	obj/kernel.asm	/^c010504f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105052	obj/kernel.asm	/^c0105052:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0105055	obj/kernel.asm	/^c0105055:	73 69                	jae    c01050c0 <get_pgtable_items+0xaf>$/;"	l
c0105057	obj/kernel.asm	/^c0105057:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c010505b	obj/kernel.asm	/^c010505b:	74 08                	je     c0105065 <get_pgtable_items+0x54>$/;"	l
c010505d	obj/kernel.asm	/^c010505d:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0105060	obj/kernel.asm	/^c0105060:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0105063	obj/kernel.asm	/^c0105063:	89 10                	mov    %edx,(%eax)$/;"	l
c0105065	obj/kernel.asm	/^c0105065:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105068	obj/kernel.asm	/^c0105068:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010506b	obj/kernel.asm	/^c010506b:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c010506e	obj/kernel.asm	/^c010506e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0105075	obj/kernel.asm	/^c0105075:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0105078	obj/kernel.asm	/^c0105078:	01 d0                	add    %edx,%eax$/;"	l
c010507a	obj/kernel.asm	/^c010507a:	8b 00                	mov    (%eax),%eax$/;"	l
c010507c	obj/kernel.asm	/^c010507c:	83 e0 07             	and    $0x7,%eax$/;"	l
c010507f	obj/kernel.asm	/^c010507f:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0105082	obj/kernel.asm	/^c0105082:	eb 04                	jmp    c0105088 <get_pgtable_items+0x77>$/;"	l
c0105084	obj/kernel.asm	/^c0105084:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0105088	obj/kernel.asm	/^c0105088:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010508b	obj/kernel.asm	/^c010508b:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010508e	obj/kernel.asm	/^c010508e:	73 1d                	jae    c01050ad <get_pgtable_items+0x9c>$/;"	l
c0105090	obj/kernel.asm	/^c0105090:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105093	obj/kernel.asm	/^c0105093:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010509a	obj/kernel.asm	/^c010509a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010509d	obj/kernel.asm	/^c010509d:	01 d0                	add    %edx,%eax$/;"	l
c010509f	obj/kernel.asm	/^c010509f:	8b 00                	mov    (%eax),%eax$/;"	l
c01050a1	obj/kernel.asm	/^c01050a1:	83 e0 07             	and    $0x7,%eax$/;"	l
c01050a4	obj/kernel.asm	/^c01050a4:	89 c2                	mov    %eax,%edx$/;"	l
c01050a6	obj/kernel.asm	/^c01050a6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01050a9	obj/kernel.asm	/^c01050a9:	39 c2                	cmp    %eax,%edx$/;"	l
c01050ab	obj/kernel.asm	/^c01050ab:	74 d7                	je     c0105084 <get_pgtable_items+0x73>$/;"	l
c01050ad	obj/kernel.asm	/^c01050ad:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c01050b1	obj/kernel.asm	/^c01050b1:	74 08                	je     c01050bb <get_pgtable_items+0xaa>$/;"	l
c01050b3	obj/kernel.asm	/^c01050b3:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c01050b6	obj/kernel.asm	/^c01050b6:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01050b9	obj/kernel.asm	/^c01050b9:	89 10                	mov    %edx,(%eax)$/;"	l
c01050bb	obj/kernel.asm	/^c01050bb:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01050be	obj/kernel.asm	/^c01050be:	eb 05                	jmp    c01050c5 <get_pgtable_items+0xb4>$/;"	l
c01050c0	obj/kernel.asm	/^c01050c0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01050c5	obj/kernel.asm	/^c01050c5:	c9                   	leave  $/;"	l
c01050c6	obj/kernel.asm	/^c01050c6:	c3                   	ret    $/;"	l
c01050c7	obj/kernel.asm	/^c01050c7 <print_pgdir>:$/;"	l
c01050c7	obj/kernel.asm	/^c01050c7:	55                   	push   %ebp$/;"	l
c01050c8	obj/kernel.asm	/^c01050c8:	89 e5                	mov    %esp,%ebp$/;"	l
c01050ca	obj/kernel.asm	/^c01050ca:	57                   	push   %edi$/;"	l
c01050cb	obj/kernel.asm	/^c01050cb:	56                   	push   %esi$/;"	l
c01050cc	obj/kernel.asm	/^c01050cc:	53                   	push   %ebx$/;"	l
c01050cd	obj/kernel.asm	/^c01050cd:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
c01050d0	obj/kernel.asm	/^c01050d0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01050d3	obj/kernel.asm	/^c01050d3:	68 c0 c3 10 c0       	push   $0xc010c3c0$/;"	l
c01050d8	obj/kernel.asm	/^c01050d8:	e8 98 b1 ff ff       	call   c0100275 <cprintf>$/;"	l
c01050dd	obj/kernel.asm	/^c01050dd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01050e0	obj/kernel.asm	/^c01050e0:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c01050e7	obj/kernel.asm	/^c01050e7:	e9 e5 00 00 00       	jmp    c01051d1 <print_pgdir+0x10a>$/;"	l
c01050ec	obj/kernel.asm	/^c01050ec:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01050ef	obj/kernel.asm	/^c01050ef:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01050f2	obj/kernel.asm	/^c01050f2:	50                   	push   %eax$/;"	l
c01050f3	obj/kernel.asm	/^c01050f3:	e8 cb fe ff ff       	call   c0104fc3 <perm2str>$/;"	l
c01050f8	obj/kernel.asm	/^c01050f8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01050fb	obj/kernel.asm	/^c01050fb:	89 c7                	mov    %eax,%edi$/;"	l
c01050fd	obj/kernel.asm	/^c01050fd:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105100	obj/kernel.asm	/^c0105100:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105103	obj/kernel.asm	/^c0105103:	29 c2                	sub    %eax,%edx$/;"	l
c0105105	obj/kernel.asm	/^c0105105:	89 d0                	mov    %edx,%eax$/;"	l
c0105107	obj/kernel.asm	/^c0105107:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c010510a	obj/kernel.asm	/^c010510a:	89 c3                	mov    %eax,%ebx$/;"	l
c010510c	obj/kernel.asm	/^c010510c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010510f	obj/kernel.asm	/^c010510f:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c0105112	obj/kernel.asm	/^c0105112:	89 c1                	mov    %eax,%ecx$/;"	l
c0105114	obj/kernel.asm	/^c0105114:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105117	obj/kernel.asm	/^c0105117:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c010511a	obj/kernel.asm	/^c010511a:	89 c2                	mov    %eax,%edx$/;"	l
c010511c	obj/kernel.asm	/^c010511c:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
c010511f	obj/kernel.asm	/^c010511f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105122	obj/kernel.asm	/^c0105122:	29 c6                	sub    %eax,%esi$/;"	l
c0105124	obj/kernel.asm	/^c0105124:	89 f0                	mov    %esi,%eax$/;"	l
c0105126	obj/kernel.asm	/^c0105126:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105129	obj/kernel.asm	/^c0105129:	57                   	push   %edi$/;"	l
c010512a	obj/kernel.asm	/^c010512a:	53                   	push   %ebx$/;"	l
c010512b	obj/kernel.asm	/^c010512b:	51                   	push   %ecx$/;"	l
c010512c	obj/kernel.asm	/^c010512c:	52                   	push   %edx$/;"	l
c010512d	obj/kernel.asm	/^c010512d:	50                   	push   %eax$/;"	l
c010512e	obj/kernel.asm	/^c010512e:	68 f1 c3 10 c0       	push   $0xc010c3f1$/;"	l
c0105133	obj/kernel.asm	/^c0105133:	e8 3d b1 ff ff       	call   c0100275 <cprintf>$/;"	l
c0105138	obj/kernel.asm	/^c0105138:	83 c4 20             	add    $0x20,%esp$/;"	l
c010513b	obj/kernel.asm	/^c010513b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010513e	obj/kernel.asm	/^c010513e:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
c0105141	obj/kernel.asm	/^c0105141:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0105144	obj/kernel.asm	/^c0105144:	eb 4f                	jmp    c0105195 <print_pgdir+0xce>$/;"	l
c0105146	obj/kernel.asm	/^c0105146:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105149	obj/kernel.asm	/^c0105149:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010514c	obj/kernel.asm	/^c010514c:	50                   	push   %eax$/;"	l
c010514d	obj/kernel.asm	/^c010514d:	e8 71 fe ff ff       	call   c0104fc3 <perm2str>$/;"	l
c0105152	obj/kernel.asm	/^c0105152:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105155	obj/kernel.asm	/^c0105155:	89 c7                	mov    %eax,%edi$/;"	l
c0105157	obj/kernel.asm	/^c0105157:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010515a	obj/kernel.asm	/^c010515a:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010515d	obj/kernel.asm	/^c010515d:	29 c2                	sub    %eax,%edx$/;"	l
c010515f	obj/kernel.asm	/^c010515f:	89 d0                	mov    %edx,%eax$/;"	l
c0105161	obj/kernel.asm	/^c0105161:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0105164	obj/kernel.asm	/^c0105164:	89 c3                	mov    %eax,%ebx$/;"	l
c0105166	obj/kernel.asm	/^c0105166:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0105169	obj/kernel.asm	/^c0105169:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010516c	obj/kernel.asm	/^c010516c:	89 c1                	mov    %eax,%ecx$/;"	l
c010516e	obj/kernel.asm	/^c010516e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0105171	obj/kernel.asm	/^c0105171:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0105174	obj/kernel.asm	/^c0105174:	89 c2                	mov    %eax,%edx$/;"	l
c0105176	obj/kernel.asm	/^c0105176:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
c0105179	obj/kernel.asm	/^c0105179:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010517c	obj/kernel.asm	/^c010517c:	29 c6                	sub    %eax,%esi$/;"	l
c010517e	obj/kernel.asm	/^c010517e:	89 f0                	mov    %esi,%eax$/;"	l
c0105180	obj/kernel.asm	/^c0105180:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105183	obj/kernel.asm	/^c0105183:	57                   	push   %edi$/;"	l
c0105184	obj/kernel.asm	/^c0105184:	53                   	push   %ebx$/;"	l
c0105185	obj/kernel.asm	/^c0105185:	51                   	push   %ecx$/;"	l
c0105186	obj/kernel.asm	/^c0105186:	52                   	push   %edx$/;"	l
c0105187	obj/kernel.asm	/^c0105187:	50                   	push   %eax$/;"	l
c0105188	obj/kernel.asm	/^c0105188:	68 10 c4 10 c0       	push   $0xc010c410$/;"	l
c010518d	obj/kernel.asm	/^c010518d:	e8 e3 b0 ff ff       	call   c0100275 <cprintf>$/;"	l
c0105192	obj/kernel.asm	/^c0105192:	83 c4 20             	add    $0x20,%esp$/;"	l
c0105195	obj/kernel.asm	/^c0105195:	be 00 00 c0 fa       	mov    $0xfac00000,%esi$/;"	l
c010519a	obj/kernel.asm	/^c010519a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010519d	obj/kernel.asm	/^c010519d:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01051a0	obj/kernel.asm	/^c01051a0:	89 d3                	mov    %edx,%ebx$/;"	l
c01051a2	obj/kernel.asm	/^c01051a2:	c1 e3 0a             	shl    $0xa,%ebx$/;"	l
c01051a5	obj/kernel.asm	/^c01051a5:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01051a8	obj/kernel.asm	/^c01051a8:	89 d1                	mov    %edx,%ecx$/;"	l
c01051aa	obj/kernel.asm	/^c01051aa:	c1 e1 0a             	shl    $0xa,%ecx$/;"	l
c01051ad	obj/kernel.asm	/^c01051ad:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01051b0	obj/kernel.asm	/^c01051b0:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
c01051b3	obj/kernel.asm	/^c01051b3:	52                   	push   %edx$/;"	l
c01051b4	obj/kernel.asm	/^c01051b4:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
c01051b7	obj/kernel.asm	/^c01051b7:	52                   	push   %edx$/;"	l
c01051b8	obj/kernel.asm	/^c01051b8:	56                   	push   %esi$/;"	l
c01051b9	obj/kernel.asm	/^c01051b9:	50                   	push   %eax$/;"	l
c01051ba	obj/kernel.asm	/^c01051ba:	53                   	push   %ebx$/;"	l
c01051bb	obj/kernel.asm	/^c01051bb:	51                   	push   %ecx$/;"	l
c01051bc	obj/kernel.asm	/^c01051bc:	e8 50 fe ff ff       	call   c0105011 <get_pgtable_items>$/;"	l
c01051c1	obj/kernel.asm	/^c01051c1:	83 c4 20             	add    $0x20,%esp$/;"	l
c01051c4	obj/kernel.asm	/^c01051c4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01051c7	obj/kernel.asm	/^c01051c7:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01051cb	obj/kernel.asm	/^c01051cb:	0f 85 75 ff ff ff    	jne    c0105146 <print_pgdir+0x7f>$/;"	l
c01051d1	obj/kernel.asm	/^c01051d1:	b9 00 b0 fe fa       	mov    $0xfafeb000,%ecx$/;"	l
c01051d6	obj/kernel.asm	/^c01051d6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01051d9	obj/kernel.asm	/^c01051d9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01051dc	obj/kernel.asm	/^c01051dc:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c01051df	obj/kernel.asm	/^c01051df:	52                   	push   %edx$/;"	l
c01051e0	obj/kernel.asm	/^c01051e0:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
c01051e3	obj/kernel.asm	/^c01051e3:	52                   	push   %edx$/;"	l
c01051e4	obj/kernel.asm	/^c01051e4:	51                   	push   %ecx$/;"	l
c01051e5	obj/kernel.asm	/^c01051e5:	50                   	push   %eax$/;"	l
c01051e6	obj/kernel.asm	/^c01051e6:	68 00 04 00 00       	push   $0x400$/;"	l
c01051eb	obj/kernel.asm	/^c01051eb:	6a 00                	push   $0x0$/;"	l
c01051ed	obj/kernel.asm	/^c01051ed:	e8 1f fe ff ff       	call   c0105011 <get_pgtable_items>$/;"	l
c01051f2	obj/kernel.asm	/^c01051f2:	83 c4 20             	add    $0x20,%esp$/;"	l
c01051f5	obj/kernel.asm	/^c01051f5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01051f8	obj/kernel.asm	/^c01051f8:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01051fc	obj/kernel.asm	/^c01051fc:	0f 85 ea fe ff ff    	jne    c01050ec <print_pgdir+0x25>$/;"	l
c0105202	obj/kernel.asm	/^c0105202:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105205	obj/kernel.asm	/^c0105205:	68 34 c4 10 c0       	push   $0xc010c434$/;"	l
c010520a	obj/kernel.asm	/^c010520a:	e8 66 b0 ff ff       	call   c0100275 <cprintf>$/;"	l
c010520f	obj/kernel.asm	/^c010520f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105212	obj/kernel.asm	/^c0105212:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
c0105215	obj/kernel.asm	/^c0105215:	5b                   	pop    %ebx$/;"	l
c0105216	obj/kernel.asm	/^c0105216:	5e                   	pop    %esi$/;"	l
c0105217	obj/kernel.asm	/^c0105217:	5f                   	pop    %edi$/;"	l
c0105218	obj/kernel.asm	/^c0105218:	5d                   	pop    %ebp$/;"	l
c0105219	obj/kernel.asm	/^c0105219:	c3                   	ret    $/;"	l
c010521a	obj/kernel.asm	/^c010521a <lock_init>:$/;"	l
c010521a	obj/kernel.asm	/^c010521a:	55                   	push   %ebp$/;"	l
c010521b	obj/kernel.asm	/^c010521b:	89 e5                	mov    %esp,%ebp$/;"	l
c010521d	obj/kernel.asm	/^c010521d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105220	obj/kernel.asm	/^c0105220:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0105226	obj/kernel.asm	/^c0105226:	5d                   	pop    %ebp$/;"	l
c0105227	obj/kernel.asm	/^c0105227:	c3                   	ret    $/;"	l
c0105228	obj/kernel.asm	/^c0105228 <mm_count>:$/;"	l
c0105228	obj/kernel.asm	/^c0105228:	55                   	push   %ebp$/;"	l
c0105229	obj/kernel.asm	/^c0105229:	89 e5                	mov    %esp,%ebp$/;"	l
c010522b	obj/kernel.asm	/^c010522b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010522e	obj/kernel.asm	/^c010522e:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0105231	obj/kernel.asm	/^c0105231:	5d                   	pop    %ebp$/;"	l
c0105232	obj/kernel.asm	/^c0105232:	c3                   	ret    $/;"	l
c0105233	obj/kernel.asm	/^c0105233 <set_mm_count>:$/;"	l
c0105233	obj/kernel.asm	/^c0105233:	55                   	push   %ebp$/;"	l
c0105234	obj/kernel.asm	/^c0105234:	89 e5                	mov    %esp,%ebp$/;"	l
c0105236	obj/kernel.asm	/^c0105236:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105239	obj/kernel.asm	/^c0105239:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010523c	obj/kernel.asm	/^c010523c:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010523f	obj/kernel.asm	/^c010523f:	5d                   	pop    %ebp$/;"	l
c0105240	obj/kernel.asm	/^c0105240:	c3                   	ret    $/;"	l
c0105241	obj/kernel.asm	/^c0105241 <pa2page>:$/;"	l
c0105241	obj/kernel.asm	/^c0105241:	55                   	push   %ebp$/;"	l
c0105242	obj/kernel.asm	/^c0105242:	89 e5                	mov    %esp,%ebp$/;"	l
c0105244	obj/kernel.asm	/^c0105244:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105247	obj/kernel.asm	/^c0105247:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010524a	obj/kernel.asm	/^c010524a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010524d	obj/kernel.asm	/^c010524d:	89 c2                	mov    %eax,%edx$/;"	l
c010524f	obj/kernel.asm	/^c010524f:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c0105254	obj/kernel.asm	/^c0105254:	39 c2                	cmp    %eax,%edx$/;"	l
c0105256	obj/kernel.asm	/^c0105256:	72 14                	jb     c010526c <pa2page+0x2b>$/;"	l
c0105258	obj/kernel.asm	/^c0105258:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010525b	obj/kernel.asm	/^c010525b:	68 68 c4 10 c0       	push   $0xc010c468$/;"	l
c0105260	obj/kernel.asm	/^c0105260:	6a 5e                	push   $0x5e$/;"	l
c0105262	obj/kernel.asm	/^c0105262:	68 87 c4 10 c0       	push   $0xc010c487$/;"	l
c0105267	obj/kernel.asm	/^c0105267:	e8 6e b1 ff ff       	call   c01003da <__panic>$/;"	l
c010526c	obj/kernel.asm	/^c010526c:	a1 98 e0 19 c0       	mov    0xc019e098,%eax$/;"	l
c0105271	obj/kernel.asm	/^c0105271:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0105274	obj/kernel.asm	/^c0105274:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0105277	obj/kernel.asm	/^c0105277:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c010527a	obj/kernel.asm	/^c010527a:	01 d0                	add    %edx,%eax$/;"	l
c010527c	obj/kernel.asm	/^c010527c:	c9                   	leave  $/;"	l
c010527d	obj/kernel.asm	/^c010527d:	c3                   	ret    $/;"	l
c010527e	obj/kernel.asm	/^c010527e <mm_create>:$/;"	l
c010527e	obj/kernel.asm	/^c010527e:	55                   	push   %ebp$/;"	l
c010527f	obj/kernel.asm	/^c010527f:	89 e5                	mov    %esp,%ebp$/;"	l
c0105281	obj/kernel.asm	/^c0105281:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0105284	obj/kernel.asm	/^c0105284:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105287	obj/kernel.asm	/^c0105287:	6a 20                	push   $0x20$/;"	l
c0105289	obj/kernel.asm	/^c0105289:	e8 26 21 00 00       	call   c01073b4 <kmalloc>$/;"	l
c010528e	obj/kernel.asm	/^c010528e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105291	obj/kernel.asm	/^c0105291:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105294	obj/kernel.asm	/^c0105294:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105298	obj/kernel.asm	/^c0105298:	74 7d                	je     c0105317 <mm_create+0x99>$/;"	l
c010529a	obj/kernel.asm	/^c010529a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010529d	obj/kernel.asm	/^c010529d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01052a0	obj/kernel.asm	/^c01052a0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01052a3	obj/kernel.asm	/^c01052a3:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01052a6	obj/kernel.asm	/^c01052a6:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01052a9	obj/kernel.asm	/^c01052a9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01052ac	obj/kernel.asm	/^c01052ac:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01052af	obj/kernel.asm	/^c01052af:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01052b2	obj/kernel.asm	/^c01052b2:	89 10                	mov    %edx,(%eax)$/;"	l
c01052b4	obj/kernel.asm	/^c01052b4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01052b7	obj/kernel.asm	/^c01052b7:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c01052be	obj/kernel.asm	/^c01052be:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01052c1	obj/kernel.asm	/^c01052c1:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c01052c8	obj/kernel.asm	/^c01052c8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01052cb	obj/kernel.asm	/^c01052cb:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c01052d2	obj/kernel.asm	/^c01052d2:	a1 b0 bf 19 c0       	mov    0xc019bfb0,%eax$/;"	l
c01052d7	obj/kernel.asm	/^c01052d7:	85 c0                	test   %eax,%eax$/;"	l
c01052d9	obj/kernel.asm	/^c01052d9:	74 10                	je     c01052eb <mm_create+0x6d>$/;"	l
c01052db	obj/kernel.asm	/^c01052db:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01052de	obj/kernel.asm	/^c01052de:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01052e1	obj/kernel.asm	/^c01052e1:	e8 0a 11 00 00       	call   c01063f0 <swap_init_mm>$/;"	l
c01052e6	obj/kernel.asm	/^c01052e6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01052e9	obj/kernel.asm	/^c01052e9:	eb 0a                	jmp    c01052f5 <mm_create+0x77>$/;"	l
c01052eb	obj/kernel.asm	/^c01052eb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01052ee	obj/kernel.asm	/^c01052ee:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c01052f5	obj/kernel.asm	/^c01052f5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01052f8	obj/kernel.asm	/^c01052f8:	6a 00                	push   $0x0$/;"	l
c01052fa	obj/kernel.asm	/^c01052fa:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01052fd	obj/kernel.asm	/^c01052fd:	e8 31 ff ff ff       	call   c0105233 <set_mm_count>$/;"	l
c0105302	obj/kernel.asm	/^c0105302:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105305	obj/kernel.asm	/^c0105305:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105308	obj/kernel.asm	/^c0105308:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010530b	obj/kernel.asm	/^c010530b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010530e	obj/kernel.asm	/^c010530e:	50                   	push   %eax$/;"	l
c010530f	obj/kernel.asm	/^c010530f:	e8 06 ff ff ff       	call   c010521a <lock_init>$/;"	l
c0105314	obj/kernel.asm	/^c0105314:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105317	obj/kernel.asm	/^c0105317:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010531a	obj/kernel.asm	/^c010531a:	c9                   	leave  $/;"	l
c010531b	obj/kernel.asm	/^c010531b:	c3                   	ret    $/;"	l
c010531c	obj/kernel.asm	/^c010531c <vma_create>:$/;"	l
c010531c	obj/kernel.asm	/^c010531c:	55                   	push   %ebp$/;"	l
c010531d	obj/kernel.asm	/^c010531d:	89 e5                	mov    %esp,%ebp$/;"	l
c010531f	obj/kernel.asm	/^c010531f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0105322	obj/kernel.asm	/^c0105322:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105325	obj/kernel.asm	/^c0105325:	6a 18                	push   $0x18$/;"	l
c0105327	obj/kernel.asm	/^c0105327:	e8 88 20 00 00       	call   c01073b4 <kmalloc>$/;"	l
c010532c	obj/kernel.asm	/^c010532c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010532f	obj/kernel.asm	/^c010532f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105332	obj/kernel.asm	/^c0105332:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105336	obj/kernel.asm	/^c0105336:	74 1b                	je     c0105353 <vma_create+0x37>$/;"	l
c0105338	obj/kernel.asm	/^c0105338:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010533b	obj/kernel.asm	/^c010533b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010533e	obj/kernel.asm	/^c010533e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0105341	obj/kernel.asm	/^c0105341:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105344	obj/kernel.asm	/^c0105344:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105347	obj/kernel.asm	/^c0105347:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010534a	obj/kernel.asm	/^c010534a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010534d	obj/kernel.asm	/^c010534d:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0105350	obj/kernel.asm	/^c0105350:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0105353	obj/kernel.asm	/^c0105353:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105356	obj/kernel.asm	/^c0105356:	c9                   	leave  $/;"	l
c0105357	obj/kernel.asm	/^c0105357:	c3                   	ret    $/;"	l
c0105358	obj/kernel.asm	/^c0105358 <find_vma>:$/;"	l
c0105358	obj/kernel.asm	/^c0105358:	55                   	push   %ebp$/;"	l
c0105359	obj/kernel.asm	/^c0105359:	89 e5                	mov    %esp,%ebp$/;"	l
c010535b	obj/kernel.asm	/^c010535b:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010535e	obj/kernel.asm	/^c010535e:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0105365	obj/kernel.asm	/^c0105365:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0105369	obj/kernel.asm	/^c0105369:	0f 84 95 00 00 00    	je     c0105404 <find_vma+0xac>$/;"	l
c010536f	obj/kernel.asm	/^c010536f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105372	obj/kernel.asm	/^c0105372:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105375	obj/kernel.asm	/^c0105375:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0105378	obj/kernel.asm	/^c0105378:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c010537c	obj/kernel.asm	/^c010537c:	74 16                	je     c0105394 <find_vma+0x3c>$/;"	l
c010537e	obj/kernel.asm	/^c010537e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0105381	obj/kernel.asm	/^c0105381:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105384	obj/kernel.asm	/^c0105384:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0105387	obj/kernel.asm	/^c0105387:	77 0b                	ja     c0105394 <find_vma+0x3c>$/;"	l
c0105389	obj/kernel.asm	/^c0105389:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010538c	obj/kernel.asm	/^c010538c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010538f	obj/kernel.asm	/^c010538f:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0105392	obj/kernel.asm	/^c0105392:	77 61                	ja     c01053f5 <find_vma+0x9d>$/;"	l
c0105394	obj/kernel.asm	/^c0105394:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c010539b	obj/kernel.asm	/^c010539b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010539e	obj/kernel.asm	/^c010539e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01053a1	obj/kernel.asm	/^c01053a1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01053a4	obj/kernel.asm	/^c01053a4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01053a7	obj/kernel.asm	/^c01053a7:	eb 28                	jmp    c01053d1 <find_vma+0x79>$/;"	l
c01053a9	obj/kernel.asm	/^c01053a9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01053ac	obj/kernel.asm	/^c01053ac:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01053af	obj/kernel.asm	/^c01053af:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01053b2	obj/kernel.asm	/^c01053b2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01053b5	obj/kernel.asm	/^c01053b5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01053b8	obj/kernel.asm	/^c01053b8:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01053bb	obj/kernel.asm	/^c01053bb:	77 14                	ja     c01053d1 <find_vma+0x79>$/;"	l
c01053bd	obj/kernel.asm	/^c01053bd:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01053c0	obj/kernel.asm	/^c01053c0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01053c3	obj/kernel.asm	/^c01053c3:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01053c6	obj/kernel.asm	/^c01053c6:	76 09                	jbe    c01053d1 <find_vma+0x79>$/;"	l
c01053c8	obj/kernel.asm	/^c01053c8:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%ebp)$/;"	l
c01053cf	obj/kernel.asm	/^c01053cf:	eb 17                	jmp    c01053e8 <find_vma+0x90>$/;"	l
c01053d1	obj/kernel.asm	/^c01053d1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01053d4	obj/kernel.asm	/^c01053d4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01053d7	obj/kernel.asm	/^c01053d7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01053da	obj/kernel.asm	/^c01053da:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01053dd	obj/kernel.asm	/^c01053dd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01053e0	obj/kernel.asm	/^c01053e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01053e3	obj/kernel.asm	/^c01053e3:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01053e6	obj/kernel.asm	/^c01053e6:	75 c1                	jne    c01053a9 <find_vma+0x51>$/;"	l
c01053e8	obj/kernel.asm	/^c01053e8:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)$/;"	l
c01053ec	obj/kernel.asm	/^c01053ec:	75 07                	jne    c01053f5 <find_vma+0x9d>$/;"	l
c01053ee	obj/kernel.asm	/^c01053ee:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01053f5	obj/kernel.asm	/^c01053f5:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c01053f9	obj/kernel.asm	/^c01053f9:	74 09                	je     c0105404 <find_vma+0xac>$/;"	l
c01053fb	obj/kernel.asm	/^c01053fb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01053fe	obj/kernel.asm	/^c01053fe:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0105401	obj/kernel.asm	/^c0105401:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0105404	obj/kernel.asm	/^c0105404:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0105407	obj/kernel.asm	/^c0105407:	c9                   	leave  $/;"	l
c0105408	obj/kernel.asm	/^c0105408:	c3                   	ret    $/;"	l
c0105409	obj/kernel.asm	/^c0105409 <check_vma_overlap>:$/;"	l
c0105409	obj/kernel.asm	/^c0105409:	55                   	push   %ebp$/;"	l
c010540a	obj/kernel.asm	/^c010540a:	89 e5                	mov    %esp,%ebp$/;"	l
c010540c	obj/kernel.asm	/^c010540c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010540f	obj/kernel.asm	/^c010540f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105412	obj/kernel.asm	/^c0105412:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0105415	obj/kernel.asm	/^c0105415:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105418	obj/kernel.asm	/^c0105418:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010541b	obj/kernel.asm	/^c010541b:	39 c2                	cmp    %eax,%edx$/;"	l
c010541d	obj/kernel.asm	/^c010541d:	72 16                	jb     c0105435 <check_vma_overlap+0x2c>$/;"	l
c010541f	obj/kernel.asm	/^c010541f:	68 95 c4 10 c0       	push   $0xc010c495$/;"	l
c0105424	obj/kernel.asm	/^c0105424:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105429	obj/kernel.asm	/^c0105429:	6a 6b                	push   $0x6b$/;"	l
c010542b	obj/kernel.asm	/^c010542b:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105430	obj/kernel.asm	/^c0105430:	e8 a5 af ff ff       	call   c01003da <__panic>$/;"	l
c0105435	obj/kernel.asm	/^c0105435:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105438	obj/kernel.asm	/^c0105438:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010543b	obj/kernel.asm	/^c010543b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010543e	obj/kernel.asm	/^c010543e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105441	obj/kernel.asm	/^c0105441:	39 c2                	cmp    %eax,%edx$/;"	l
c0105443	obj/kernel.asm	/^c0105443:	76 16                	jbe    c010545b <check_vma_overlap+0x52>$/;"	l
c0105445	obj/kernel.asm	/^c0105445:	68 d8 c4 10 c0       	push   $0xc010c4d8$/;"	l
c010544a	obj/kernel.asm	/^c010544a:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c010544f	obj/kernel.asm	/^c010544f:	6a 6c                	push   $0x6c$/;"	l
c0105451	obj/kernel.asm	/^c0105451:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105456	obj/kernel.asm	/^c0105456:	e8 7f af ff ff       	call   c01003da <__panic>$/;"	l
c010545b	obj/kernel.asm	/^c010545b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010545e	obj/kernel.asm	/^c010545e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0105461	obj/kernel.asm	/^c0105461:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105464	obj/kernel.asm	/^c0105464:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105467	obj/kernel.asm	/^c0105467:	39 c2                	cmp    %eax,%edx$/;"	l
c0105469	obj/kernel.asm	/^c0105469:	72 16                	jb     c0105481 <check_vma_overlap+0x78>$/;"	l
c010546b	obj/kernel.asm	/^c010546b:	68 f7 c4 10 c0       	push   $0xc010c4f7$/;"	l
c0105470	obj/kernel.asm	/^c0105470:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105475	obj/kernel.asm	/^c0105475:	6a 6d                	push   $0x6d$/;"	l
c0105477	obj/kernel.asm	/^c0105477:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c010547c	obj/kernel.asm	/^c010547c:	e8 59 af ff ff       	call   c01003da <__panic>$/;"	l
c0105481	obj/kernel.asm	/^c0105481:	c9                   	leave  $/;"	l
c0105482	obj/kernel.asm	/^c0105482:	c3                   	ret    $/;"	l
c0105483	obj/kernel.asm	/^c0105483 <insert_vma_struct>:$/;"	l
c0105483	obj/kernel.asm	/^c0105483:	55                   	push   %ebp$/;"	l
c0105484	obj/kernel.asm	/^c0105484:	89 e5                	mov    %esp,%ebp$/;"	l
c0105486	obj/kernel.asm	/^c0105486:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0105489	obj/kernel.asm	/^c0105489:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010548c	obj/kernel.asm	/^c010548c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010548f	obj/kernel.asm	/^c010548f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105492	obj/kernel.asm	/^c0105492:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105495	obj/kernel.asm	/^c0105495:	39 c2                	cmp    %eax,%edx$/;"	l
c0105497	obj/kernel.asm	/^c0105497:	72 16                	jb     c01054af <insert_vma_struct+0x2c>$/;"	l
c0105499	obj/kernel.asm	/^c0105499:	68 15 c5 10 c0       	push   $0xc010c515$/;"	l
c010549e	obj/kernel.asm	/^c010549e:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c01054a3	obj/kernel.asm	/^c01054a3:	6a 74                	push   $0x74$/;"	l
c01054a5	obj/kernel.asm	/^c01054a5:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c01054aa	obj/kernel.asm	/^c01054aa:	e8 2b af ff ff       	call   c01003da <__panic>$/;"	l
c01054af	obj/kernel.asm	/^c01054af:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01054b2	obj/kernel.asm	/^c01054b2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01054b5	obj/kernel.asm	/^c01054b5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01054b8	obj/kernel.asm	/^c01054b8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01054bb	obj/kernel.asm	/^c01054bb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01054be	obj/kernel.asm	/^c01054be:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01054c1	obj/kernel.asm	/^c01054c1:	eb 21                	jmp    c01054e4 <insert_vma_struct+0x61>$/;"	l
c01054c3	obj/kernel.asm	/^c01054c3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01054c6	obj/kernel.asm	/^c01054c6:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01054c9	obj/kernel.asm	/^c01054c9:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01054cc	obj/kernel.asm	/^c01054cc:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01054cf	obj/kernel.asm	/^c01054cf:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01054d2	obj/kernel.asm	/^c01054d2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01054d5	obj/kernel.asm	/^c01054d5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01054d8	obj/kernel.asm	/^c01054d8:	39 c2                	cmp    %eax,%edx$/;"	l
c01054da	obj/kernel.asm	/^c01054da:	76 02                	jbe    c01054de <insert_vma_struct+0x5b>$/;"	l
c01054dc	obj/kernel.asm	/^c01054dc:	eb 1d                	jmp    c01054fb <insert_vma_struct+0x78>$/;"	l
c01054de	obj/kernel.asm	/^c01054de:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01054e1	obj/kernel.asm	/^c01054e1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01054e4	obj/kernel.asm	/^c01054e4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01054e7	obj/kernel.asm	/^c01054e7:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01054ea	obj/kernel.asm	/^c01054ea:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01054ed	obj/kernel.asm	/^c01054ed:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01054f0	obj/kernel.asm	/^c01054f0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01054f3	obj/kernel.asm	/^c01054f3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01054f6	obj/kernel.asm	/^c01054f6:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01054f9	obj/kernel.asm	/^c01054f9:	75 c8                	jne    c01054c3 <insert_vma_struct+0x40>$/;"	l
c01054fb	obj/kernel.asm	/^c01054fb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01054fe	obj/kernel.asm	/^c01054fe:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105501	obj/kernel.asm	/^c0105501:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105504	obj/kernel.asm	/^c0105504:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105507	obj/kernel.asm	/^c0105507:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010550a	obj/kernel.asm	/^c010550a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010550d	obj/kernel.asm	/^c010550d:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0105510	obj/kernel.asm	/^c0105510:	74 15                	je     c0105527 <insert_vma_struct+0xa4>$/;"	l
c0105512	obj/kernel.asm	/^c0105512:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105515	obj/kernel.asm	/^c0105515:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105518	obj/kernel.asm	/^c0105518:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010551b	obj/kernel.asm	/^c010551b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010551e	obj/kernel.asm	/^c010551e:	50                   	push   %eax$/;"	l
c010551f	obj/kernel.asm	/^c010551f:	e8 e5 fe ff ff       	call   c0105409 <check_vma_overlap>$/;"	l
c0105524	obj/kernel.asm	/^c0105524:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105527	obj/kernel.asm	/^c0105527:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010552a	obj/kernel.asm	/^c010552a:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010552d	obj/kernel.asm	/^c010552d:	74 15                	je     c0105544 <insert_vma_struct+0xc1>$/;"	l
c010552f	obj/kernel.asm	/^c010552f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105532	obj/kernel.asm	/^c0105532:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105535	obj/kernel.asm	/^c0105535:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105538	obj/kernel.asm	/^c0105538:	50                   	push   %eax$/;"	l
c0105539	obj/kernel.asm	/^c0105539:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010553c	obj/kernel.asm	/^c010553c:	e8 c8 fe ff ff       	call   c0105409 <check_vma_overlap>$/;"	l
c0105541	obj/kernel.asm	/^c0105541:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105544	obj/kernel.asm	/^c0105544:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105547	obj/kernel.asm	/^c0105547:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010554a	obj/kernel.asm	/^c010554a:	89 10                	mov    %edx,(%eax)$/;"	l
c010554c	obj/kernel.asm	/^c010554c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010554f	obj/kernel.asm	/^c010554f:	8d 50 10             	lea    0x10(%eax),%edx$/;"	l
c0105552	obj/kernel.asm	/^c0105552:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105555	obj/kernel.asm	/^c0105555:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0105558	obj/kernel.asm	/^c0105558:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010555b	obj/kernel.asm	/^c010555b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010555e	obj/kernel.asm	/^c010555e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105561	obj/kernel.asm	/^c0105561:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0105564	obj/kernel.asm	/^c0105564:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
c0105567	obj/kernel.asm	/^c0105567:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010556a	obj/kernel.asm	/^c010556a:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c010556d	obj/kernel.asm	/^c010556d:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0105570	obj/kernel.asm	/^c0105570:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0105573	obj/kernel.asm	/^c0105573:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0105576	obj/kernel.asm	/^c0105576:	89 10                	mov    %edx,(%eax)$/;"	l
c0105578	obj/kernel.asm	/^c0105578:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010557b	obj/kernel.asm	/^c010557b:	8b 10                	mov    (%eax),%edx$/;"	l
c010557d	obj/kernel.asm	/^c010557d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0105580	obj/kernel.asm	/^c0105580:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0105583	obj/kernel.asm	/^c0105583:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0105586	obj/kernel.asm	/^c0105586:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c0105589	obj/kernel.asm	/^c0105589:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010558c	obj/kernel.asm	/^c010558c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010558f	obj/kernel.asm	/^c010558f:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0105592	obj/kernel.asm	/^c0105592:	89 10                	mov    %edx,(%eax)$/;"	l
c0105594	obj/kernel.asm	/^c0105594:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105597	obj/kernel.asm	/^c0105597:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010559a	obj/kernel.asm	/^c010559a:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010559d	obj/kernel.asm	/^c010559d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01055a0	obj/kernel.asm	/^c01055a0:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01055a3	obj/kernel.asm	/^c01055a3:	c9                   	leave  $/;"	l
c01055a4	obj/kernel.asm	/^c01055a4:	c3                   	ret    $/;"	l
c01055a5	obj/kernel.asm	/^c01055a5 <mm_destroy>:$/;"	l
c01055a5	obj/kernel.asm	/^c01055a5:	55                   	push   %ebp$/;"	l
c01055a6	obj/kernel.asm	/^c01055a6:	89 e5                	mov    %esp,%ebp$/;"	l
c01055a8	obj/kernel.asm	/^c01055a8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01055ab	obj/kernel.asm	/^c01055ab:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01055ae	obj/kernel.asm	/^c01055ae:	e8 75 fc ff ff       	call   c0105228 <mm_count>$/;"	l
c01055b3	obj/kernel.asm	/^c01055b3:	83 c4 04             	add    $0x4,%esp$/;"	l
c01055b6	obj/kernel.asm	/^c01055b6:	85 c0                	test   %eax,%eax$/;"	l
c01055b8	obj/kernel.asm	/^c01055b8:	74 19                	je     c01055d3 <mm_destroy+0x2e>$/;"	l
c01055ba	obj/kernel.asm	/^c01055ba:	68 31 c5 10 c0       	push   $0xc010c531$/;"	l
c01055bf	obj/kernel.asm	/^c01055bf:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c01055c4	obj/kernel.asm	/^c01055c4:	68 94 00 00 00       	push   $0x94$/;"	l
c01055c9	obj/kernel.asm	/^c01055c9:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c01055ce	obj/kernel.asm	/^c01055ce:	e8 07 ae ff ff       	call   c01003da <__panic>$/;"	l
c01055d3	obj/kernel.asm	/^c01055d3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01055d6	obj/kernel.asm	/^c01055d6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01055d9	obj/kernel.asm	/^c01055d9:	eb 3a                	jmp    c0105615 <mm_destroy+0x70>$/;"	l
c01055db	obj/kernel.asm	/^c01055db:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01055de	obj/kernel.asm	/^c01055de:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01055e1	obj/kernel.asm	/^c01055e1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01055e4	obj/kernel.asm	/^c01055e4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01055e7	obj/kernel.asm	/^c01055e7:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01055ea	obj/kernel.asm	/^c01055ea:	8b 12                	mov    (%edx),%edx$/;"	l
c01055ec	obj/kernel.asm	/^c01055ec:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c01055ef	obj/kernel.asm	/^c01055ef:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01055f2	obj/kernel.asm	/^c01055f2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01055f5	obj/kernel.asm	/^c01055f5:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01055f8	obj/kernel.asm	/^c01055f8:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01055fb	obj/kernel.asm	/^c01055fb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01055fe	obj/kernel.asm	/^c01055fe:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0105601	obj/kernel.asm	/^c0105601:	89 10                	mov    %edx,(%eax)$/;"	l
c0105603	obj/kernel.asm	/^c0105603:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105606	obj/kernel.asm	/^c0105606:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105609	obj/kernel.asm	/^c0105609:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010560c	obj/kernel.asm	/^c010560c:	50                   	push   %eax$/;"	l
c010560d	obj/kernel.asm	/^c010560d:	e8 ba 1d 00 00       	call   c01073cc <kfree>$/;"	l
c0105612	obj/kernel.asm	/^c0105612:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105615	obj/kernel.asm	/^c0105615:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105618	obj/kernel.asm	/^c0105618:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010561b	obj/kernel.asm	/^c010561b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010561e	obj/kernel.asm	/^c010561e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105621	obj/kernel.asm	/^c0105621:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105624	obj/kernel.asm	/^c0105624:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105627	obj/kernel.asm	/^c0105627:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010562a	obj/kernel.asm	/^c010562a:	75 af                	jne    c01055db <mm_destroy+0x36>$/;"	l
c010562c	obj/kernel.asm	/^c010562c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010562f	obj/kernel.asm	/^c010562f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105632	obj/kernel.asm	/^c0105632:	e8 95 1d 00 00       	call   c01073cc <kfree>$/;"	l
c0105637	obj/kernel.asm	/^c0105637:	83 c4 10             	add    $0x10,%esp$/;"	l
c010563a	obj/kernel.asm	/^c010563a:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)$/;"	l
c0105641	obj/kernel.asm	/^c0105641:	c9                   	leave  $/;"	l
c0105642	obj/kernel.asm	/^c0105642:	c3                   	ret    $/;"	l
c0105643	obj/kernel.asm	/^c0105643 <mm_map>:$/;"	l
c0105643	obj/kernel.asm	/^c0105643:	55                   	push   %ebp$/;"	l
c0105644	obj/kernel.asm	/^c0105644:	89 e5                	mov    %esp,%ebp$/;"	l
c0105646	obj/kernel.asm	/^c0105646:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105649	obj/kernel.asm	/^c0105649:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010564c	obj/kernel.asm	/^c010564c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010564f	obj/kernel.asm	/^c010564f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105652	obj/kernel.asm	/^c0105652:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0105657	obj/kernel.asm	/^c0105657:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010565a	obj/kernel.asm	/^c010565a:	c7 45 e8 00 10 00 00 	movl   $0x1000,-0x18(%ebp)$/;"	l
c0105661	obj/kernel.asm	/^c0105661:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105664	obj/kernel.asm	/^c0105664:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105667	obj/kernel.asm	/^c0105667:	01 c2                	add    %eax,%edx$/;"	l
c0105669	obj/kernel.asm	/^c0105669:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010566c	obj/kernel.asm	/^c010566c:	01 d0                	add    %edx,%eax$/;"	l
c010566e	obj/kernel.asm	/^c010566e:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0105671	obj/kernel.asm	/^c0105671:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105674	obj/kernel.asm	/^c0105674:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105677	obj/kernel.asm	/^c0105677:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010567c	obj/kernel.asm	/^c010567c:	f7 75 e8             	divl   -0x18(%ebp)$/;"	l
c010567f	obj/kernel.asm	/^c010567f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105682	obj/kernel.asm	/^c0105682:	29 d0                	sub    %edx,%eax$/;"	l
c0105684	obj/kernel.asm	/^c0105684:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105687	obj/kernel.asm	/^c0105687:	81 7d ec ff ff 1f 00 	cmpl   $0x1fffff,-0x14(%ebp)$/;"	l
c010568e	obj/kernel.asm	/^c010568e:	76 11                	jbe    c01056a1 <mm_map+0x5e>$/;"	l
c0105690	obj/kernel.asm	/^c0105690:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105693	obj/kernel.asm	/^c0105693:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0105696	obj/kernel.asm	/^c0105696:	73 09                	jae    c01056a1 <mm_map+0x5e>$/;"	l
c0105698	obj/kernel.asm	/^c0105698:	81 7d e0 00 00 00 b0 	cmpl   $0xb0000000,-0x20(%ebp)$/;"	l
c010569f	obj/kernel.asm	/^c010569f:	76 0a                	jbe    c01056ab <mm_map+0x68>$/;"	l
c01056a1	obj/kernel.asm	/^c01056a1:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01056a6	obj/kernel.asm	/^c01056a6:	e9 9c 00 00 00       	jmp    c0105747 <mm_map+0x104>$/;"	l
c01056ab	obj/kernel.asm	/^c01056ab:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01056af	obj/kernel.asm	/^c01056af:	75 19                	jne    c01056ca <mm_map+0x87>$/;"	l
c01056b1	obj/kernel.asm	/^c01056b1:	68 43 c5 10 c0       	push   $0xc010c543$/;"	l
c01056b6	obj/kernel.asm	/^c01056b6:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c01056bb	obj/kernel.asm	/^c01056bb:	68 a7 00 00 00       	push   $0xa7$/;"	l
c01056c0	obj/kernel.asm	/^c01056c0:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c01056c5	obj/kernel.asm	/^c01056c5:	e8 10 ad ff ff       	call   c01003da <__panic>$/;"	l
c01056ca	obj/kernel.asm	/^c01056ca:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c01056d1	obj/kernel.asm	/^c01056d1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01056d4	obj/kernel.asm	/^c01056d4:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01056d7	obj/kernel.asm	/^c01056d7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01056da	obj/kernel.asm	/^c01056da:	e8 79 fc ff ff       	call   c0105358 <find_vma>$/;"	l
c01056df	obj/kernel.asm	/^c01056df:	83 c4 10             	add    $0x10,%esp$/;"	l
c01056e2	obj/kernel.asm	/^c01056e2:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01056e5	obj/kernel.asm	/^c01056e5:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c01056e9	obj/kernel.asm	/^c01056e9:	74 0d                	je     c01056f8 <mm_map+0xb5>$/;"	l
c01056eb	obj/kernel.asm	/^c01056eb:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01056ee	obj/kernel.asm	/^c01056ee:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01056f1	obj/kernel.asm	/^c01056f1:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c01056f4	obj/kernel.asm	/^c01056f4:	73 02                	jae    c01056f8 <mm_map+0xb5>$/;"	l
c01056f6	obj/kernel.asm	/^c01056f6:	eb 4c                	jmp    c0105744 <mm_map+0x101>$/;"	l
c01056f8	obj/kernel.asm	/^c01056f8:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c01056ff	obj/kernel.asm	/^c01056ff:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105702	obj/kernel.asm	/^c0105702:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0105705	obj/kernel.asm	/^c0105705:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0105708	obj/kernel.asm	/^c0105708:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010570b	obj/kernel.asm	/^c010570b:	e8 0c fc ff ff       	call   c010531c <vma_create>$/;"	l
c0105710	obj/kernel.asm	/^c0105710:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105713	obj/kernel.asm	/^c0105713:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105716	obj/kernel.asm	/^c0105716:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010571a	obj/kernel.asm	/^c010571a:	75 02                	jne    c010571e <mm_map+0xdb>$/;"	l
c010571c	obj/kernel.asm	/^c010571c:	eb 26                	jmp    c0105744 <mm_map+0x101>$/;"	l
c010571e	obj/kernel.asm	/^c010571e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105721	obj/kernel.asm	/^c0105721:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0105724	obj/kernel.asm	/^c0105724:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105727	obj/kernel.asm	/^c0105727:	e8 57 fd ff ff       	call   c0105483 <insert_vma_struct>$/;"	l
c010572c	obj/kernel.asm	/^c010572c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010572f	obj/kernel.asm	/^c010572f:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0105733	obj/kernel.asm	/^c0105733:	74 08                	je     c010573d <mm_map+0xfa>$/;"	l
c0105735	obj/kernel.asm	/^c0105735:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0105738	obj/kernel.asm	/^c0105738:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010573b	obj/kernel.asm	/^c010573b:	89 10                	mov    %edx,(%eax)$/;"	l
c010573d	obj/kernel.asm	/^c010573d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0105744	obj/kernel.asm	/^c0105744:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105747	obj/kernel.asm	/^c0105747:	c9                   	leave  $/;"	l
c0105748	obj/kernel.asm	/^c0105748:	c3                   	ret    $/;"	l
c0105749	obj/kernel.asm	/^c0105749 <dup_mmap>:$/;"	l
c0105749	obj/kernel.asm	/^c0105749:	55                   	push   %ebp$/;"	l
c010574a	obj/kernel.asm	/^c010574a:	89 e5                	mov    %esp,%ebp$/;"	l
c010574c	obj/kernel.asm	/^c010574c:	53                   	push   %ebx$/;"	l
c010574d	obj/kernel.asm	/^c010574d:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0105750	obj/kernel.asm	/^c0105750:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0105754	obj/kernel.asm	/^c0105754:	74 06                	je     c010575c <dup_mmap+0x13>$/;"	l
c0105756	obj/kernel.asm	/^c0105756:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010575a	obj/kernel.asm	/^c010575a:	75 19                	jne    c0105775 <dup_mmap+0x2c>$/;"	l
c010575c	obj/kernel.asm	/^c010575c:	68 4e c5 10 c0       	push   $0xc010c54e$/;"	l
c0105761	obj/kernel.asm	/^c0105761:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105766	obj/kernel.asm	/^c0105766:	68 c0 00 00 00       	push   $0xc0$/;"	l
c010576b	obj/kernel.asm	/^c010576b:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105770	obj/kernel.asm	/^c0105770:	e8 65 ac ff ff       	call   c01003da <__panic>$/;"	l
c0105775	obj/kernel.asm	/^c0105775:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105778	obj/kernel.asm	/^c0105778:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010577b	obj/kernel.asm	/^c010577b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010577e	obj/kernel.asm	/^c010577e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105781	obj/kernel.asm	/^c0105781:	e9 86 00 00 00       	jmp    c010580c <dup_mmap+0xc3>$/;"	l
c0105786	obj/kernel.asm	/^c0105786:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105789	obj/kernel.asm	/^c0105789:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010578c	obj/kernel.asm	/^c010578c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010578f	obj/kernel.asm	/^c010578f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105792	obj/kernel.asm	/^c0105792:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0105795	obj/kernel.asm	/^c0105795:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105798	obj/kernel.asm	/^c0105798:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010579b	obj/kernel.asm	/^c010579b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010579e	obj/kernel.asm	/^c010579e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01057a1	obj/kernel.asm	/^c01057a1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01057a4	obj/kernel.asm	/^c01057a4:	51                   	push   %ecx$/;"	l
c01057a5	obj/kernel.asm	/^c01057a5:	52                   	push   %edx$/;"	l
c01057a6	obj/kernel.asm	/^c01057a6:	50                   	push   %eax$/;"	l
c01057a7	obj/kernel.asm	/^c01057a7:	e8 70 fb ff ff       	call   c010531c <vma_create>$/;"	l
c01057ac	obj/kernel.asm	/^c01057ac:	83 c4 10             	add    $0x10,%esp$/;"	l
c01057af	obj/kernel.asm	/^c01057af:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01057b2	obj/kernel.asm	/^c01057b2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01057b6	obj/kernel.asm	/^c01057b6:	75 07                	jne    c01057bf <dup_mmap+0x76>$/;"	l
c01057b8	obj/kernel.asm	/^c01057b8:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01057bd	obj/kernel.asm	/^c01057bd:	eb 6c                	jmp    c010582b <dup_mmap+0xe2>$/;"	l
c01057bf	obj/kernel.asm	/^c01057bf:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01057c2	obj/kernel.asm	/^c01057c2:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c01057c5	obj/kernel.asm	/^c01057c5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01057c8	obj/kernel.asm	/^c01057c8:	e8 b6 fc ff ff       	call   c0105483 <insert_vma_struct>$/;"	l
c01057cd	obj/kernel.asm	/^c01057cd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01057d0	obj/kernel.asm	/^c01057d0:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c01057d7	obj/kernel.asm	/^c01057d7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01057da	obj/kernel.asm	/^c01057da:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c01057dd	obj/kernel.asm	/^c01057dd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01057e0	obj/kernel.asm	/^c01057e0:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c01057e3	obj/kernel.asm	/^c01057e3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01057e6	obj/kernel.asm	/^c01057e6:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c01057e9	obj/kernel.asm	/^c01057e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01057ec	obj/kernel.asm	/^c01057ec:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01057ef	obj/kernel.asm	/^c01057ef:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01057f2	obj/kernel.asm	/^c01057f2:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01057f5	obj/kernel.asm	/^c01057f5:	53                   	push   %ebx$/;"	l
c01057f6	obj/kernel.asm	/^c01057f6:	51                   	push   %ecx$/;"	l
c01057f7	obj/kernel.asm	/^c01057f7:	52                   	push   %edx$/;"	l
c01057f8	obj/kernel.asm	/^c01057f8:	50                   	push   %eax$/;"	l
c01057f9	obj/kernel.asm	/^c01057f9:	e8 c6 eb ff ff       	call   c01043c4 <copy_range>$/;"	l
c01057fe	obj/kernel.asm	/^c01057fe:	83 c4 20             	add    $0x20,%esp$/;"	l
c0105801	obj/kernel.asm	/^c0105801:	85 c0                	test   %eax,%eax$/;"	l
c0105803	obj/kernel.asm	/^c0105803:	74 07                	je     c010580c <dup_mmap+0xc3>$/;"	l
c0105805	obj/kernel.asm	/^c0105805:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010580a	obj/kernel.asm	/^c010580a:	eb 1f                	jmp    c010582b <dup_mmap+0xe2>$/;"	l
c010580c	obj/kernel.asm	/^c010580c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010580f	obj/kernel.asm	/^c010580f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105812	obj/kernel.asm	/^c0105812:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105815	obj/kernel.asm	/^c0105815:	8b 00                	mov    (%eax),%eax$/;"	l
c0105817	obj/kernel.asm	/^c0105817:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010581a	obj/kernel.asm	/^c010581a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010581d	obj/kernel.asm	/^c010581d:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0105820	obj/kernel.asm	/^c0105820:	0f 85 60 ff ff ff    	jne    c0105786 <dup_mmap+0x3d>$/;"	l
c0105826	obj/kernel.asm	/^c0105826:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010582b	obj/kernel.asm	/^c010582b:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c010582e	obj/kernel.asm	/^c010582e:	c9                   	leave  $/;"	l
c010582f	obj/kernel.asm	/^c010582f:	c3                   	ret    $/;"	l
c0105830	obj/kernel.asm	/^c0105830 <exit_mmap>:$/;"	l
c0105830	obj/kernel.asm	/^c0105830:	55                   	push   %ebp$/;"	l
c0105831	obj/kernel.asm	/^c0105831:	89 e5                	mov    %esp,%ebp$/;"	l
c0105833	obj/kernel.asm	/^c0105833:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105836	obj/kernel.asm	/^c0105836:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010583a	obj/kernel.asm	/^c010583a:	74 0f                	je     c010584b <exit_mmap+0x1b>$/;"	l
c010583c	obj/kernel.asm	/^c010583c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010583f	obj/kernel.asm	/^c010583f:	e8 e4 f9 ff ff       	call   c0105228 <mm_count>$/;"	l
c0105844	obj/kernel.asm	/^c0105844:	83 c4 04             	add    $0x4,%esp$/;"	l
c0105847	obj/kernel.asm	/^c0105847:	85 c0                	test   %eax,%eax$/;"	l
c0105849	obj/kernel.asm	/^c0105849:	74 19                	je     c0105864 <exit_mmap+0x34>$/;"	l
c010584b	obj/kernel.asm	/^c010584b:	68 6c c5 10 c0       	push   $0xc010c56c$/;"	l
c0105850	obj/kernel.asm	/^c0105850:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105855	obj/kernel.asm	/^c0105855:	68 d6 00 00 00       	push   $0xd6$/;"	l
c010585a	obj/kernel.asm	/^c010585a:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c010585f	obj/kernel.asm	/^c010585f:	e8 76 ab ff ff       	call   c01003da <__panic>$/;"	l
c0105864	obj/kernel.asm	/^c0105864:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105867	obj/kernel.asm	/^c0105867:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010586a	obj/kernel.asm	/^c010586a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010586d	obj/kernel.asm	/^c010586d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105870	obj/kernel.asm	/^c0105870:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105873	obj/kernel.asm	/^c0105873:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105876	obj/kernel.asm	/^c0105876:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105879	obj/kernel.asm	/^c0105879:	eb 25                	jmp    c01058a0 <exit_mmap+0x70>$/;"	l
c010587b	obj/kernel.asm	/^c010587b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010587e	obj/kernel.asm	/^c010587e:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105881	obj/kernel.asm	/^c0105881:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105884	obj/kernel.asm	/^c0105884:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105887	obj/kernel.asm	/^c0105887:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010588a	obj/kernel.asm	/^c010588a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010588d	obj/kernel.asm	/^c010588d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105890	obj/kernel.asm	/^c0105890:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105893	obj/kernel.asm	/^c0105893:	52                   	push   %edx$/;"	l
c0105894	obj/kernel.asm	/^c0105894:	50                   	push   %eax$/;"	l
c0105895	obj/kernel.asm	/^c0105895:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0105898	obj/kernel.asm	/^c0105898:	e8 62 e9 ff ff       	call   c01041ff <unmap_range>$/;"	l
c010589d	obj/kernel.asm	/^c010589d:	83 c4 10             	add    $0x10,%esp$/;"	l
c01058a0	obj/kernel.asm	/^c01058a0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058a3	obj/kernel.asm	/^c01058a3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01058a6	obj/kernel.asm	/^c01058a6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01058a9	obj/kernel.asm	/^c01058a9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01058ac	obj/kernel.asm	/^c01058ac:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01058af	obj/kernel.asm	/^c01058af:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058b2	obj/kernel.asm	/^c01058b2:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01058b5	obj/kernel.asm	/^c01058b5:	75 c4                	jne    c010587b <exit_mmap+0x4b>$/;"	l
c01058b7	obj/kernel.asm	/^c01058b7:	eb 25                	jmp    c01058de <exit_mmap+0xae>$/;"	l
c01058b9	obj/kernel.asm	/^c01058b9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058bc	obj/kernel.asm	/^c01058bc:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01058bf	obj/kernel.asm	/^c01058bf:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01058c2	obj/kernel.asm	/^c01058c2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01058c5	obj/kernel.asm	/^c01058c5:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01058c8	obj/kernel.asm	/^c01058c8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01058cb	obj/kernel.asm	/^c01058cb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01058ce	obj/kernel.asm	/^c01058ce:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01058d1	obj/kernel.asm	/^c01058d1:	52                   	push   %edx$/;"	l
c01058d2	obj/kernel.asm	/^c01058d2:	50                   	push   %eax$/;"	l
c01058d3	obj/kernel.asm	/^c01058d3:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01058d6	obj/kernel.asm	/^c01058d6:	e8 f6 e9 ff ff       	call   c01042d1 <exit_range>$/;"	l
c01058db	obj/kernel.asm	/^c01058db:	83 c4 10             	add    $0x10,%esp$/;"	l
c01058de	obj/kernel.asm	/^c01058de:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058e1	obj/kernel.asm	/^c01058e1:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01058e4	obj/kernel.asm	/^c01058e4:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01058e7	obj/kernel.asm	/^c01058e7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01058ea	obj/kernel.asm	/^c01058ea:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01058ed	obj/kernel.asm	/^c01058ed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058f0	obj/kernel.asm	/^c01058f0:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01058f3	obj/kernel.asm	/^c01058f3:	75 c4                	jne    c01058b9 <exit_mmap+0x89>$/;"	l
c01058f5	obj/kernel.asm	/^c01058f5:	c9                   	leave  $/;"	l
c01058f6	obj/kernel.asm	/^c01058f6:	c3                   	ret    $/;"	l
c01058f7	obj/kernel.asm	/^c01058f7 <copy_from_user>:$/;"	l
c01058f7	obj/kernel.asm	/^c01058f7:	55                   	push   %ebp$/;"	l
c01058f8	obj/kernel.asm	/^c01058f8:	89 e5                	mov    %esp,%ebp$/;"	l
c01058fa	obj/kernel.asm	/^c01058fa:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01058fd	obj/kernel.asm	/^c01058fd:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105900	obj/kernel.asm	/^c0105900:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
c0105903	obj/kernel.asm	/^c0105903:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0105906	obj/kernel.asm	/^c0105906:	50                   	push   %eax$/;"	l
c0105907	obj/kernel.asm	/^c0105907:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010590a	obj/kernel.asm	/^c010590a:	e8 c7 08 00 00       	call   c01061d6 <user_mem_check>$/;"	l
c010590f	obj/kernel.asm	/^c010590f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105912	obj/kernel.asm	/^c0105912:	85 c0                	test   %eax,%eax$/;"	l
c0105914	obj/kernel.asm	/^c0105914:	75 07                	jne    c010591d <copy_from_user+0x26>$/;"	l
c0105916	obj/kernel.asm	/^c0105916:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010591b	obj/kernel.asm	/^c010591b:	eb 19                	jmp    c0105936 <copy_from_user+0x3f>$/;"	l
c010591d	obj/kernel.asm	/^c010591d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105920	obj/kernel.asm	/^c0105920:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0105923	obj/kernel.asm	/^c0105923:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0105926	obj/kernel.asm	/^c0105926:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0105929	obj/kernel.asm	/^c0105929:	e8 51 53 00 00       	call   c010ac7f <memcpy>$/;"	l
c010592e	obj/kernel.asm	/^c010592e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105931	obj/kernel.asm	/^c0105931:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0105936	obj/kernel.asm	/^c0105936:	c9                   	leave  $/;"	l
c0105937	obj/kernel.asm	/^c0105937:	c3                   	ret    $/;"	l
c0105938	obj/kernel.asm	/^c0105938 <copy_to_user>:$/;"	l
c0105938	obj/kernel.asm	/^c0105938:	55                   	push   %ebp$/;"	l
c0105939	obj/kernel.asm	/^c0105939:	89 e5                	mov    %esp,%ebp$/;"	l
c010593b	obj/kernel.asm	/^c010593b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010593e	obj/kernel.asm	/^c010593e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105941	obj/kernel.asm	/^c0105941:	6a 01                	push   $0x1$/;"	l
c0105943	obj/kernel.asm	/^c0105943:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0105946	obj/kernel.asm	/^c0105946:	50                   	push   %eax$/;"	l
c0105947	obj/kernel.asm	/^c0105947:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010594a	obj/kernel.asm	/^c010594a:	e8 87 08 00 00       	call   c01061d6 <user_mem_check>$/;"	l
c010594f	obj/kernel.asm	/^c010594f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105952	obj/kernel.asm	/^c0105952:	85 c0                	test   %eax,%eax$/;"	l
c0105954	obj/kernel.asm	/^c0105954:	75 07                	jne    c010595d <copy_to_user+0x25>$/;"	l
c0105956	obj/kernel.asm	/^c0105956:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010595b	obj/kernel.asm	/^c010595b:	eb 19                	jmp    c0105976 <copy_to_user+0x3e>$/;"	l
c010595d	obj/kernel.asm	/^c010595d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105960	obj/kernel.asm	/^c0105960:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0105963	obj/kernel.asm	/^c0105963:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0105966	obj/kernel.asm	/^c0105966:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0105969	obj/kernel.asm	/^c0105969:	e8 11 53 00 00       	call   c010ac7f <memcpy>$/;"	l
c010596e	obj/kernel.asm	/^c010596e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105971	obj/kernel.asm	/^c0105971:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0105976	obj/kernel.asm	/^c0105976:	c9                   	leave  $/;"	l
c0105977	obj/kernel.asm	/^c0105977:	c3                   	ret    $/;"	l
c0105978	obj/kernel.asm	/^c0105978 <vmm_init>:$/;"	l
c0105978	obj/kernel.asm	/^c0105978:	55                   	push   %ebp$/;"	l
c0105979	obj/kernel.asm	/^c0105979:	89 e5                	mov    %esp,%ebp$/;"	l
c010597b	obj/kernel.asm	/^c010597b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010597e	obj/kernel.asm	/^c010597e:	e8 02 00 00 00       	call   c0105985 <check_vmm>$/;"	l
c0105983	obj/kernel.asm	/^c0105983:	c9                   	leave  $/;"	l
c0105984	obj/kernel.asm	/^c0105984:	c3                   	ret    $/;"	l
c0105985	obj/kernel.asm	/^c0105985 <check_vmm>:$/;"	l
c0105985	obj/kernel.asm	/^c0105985:	55                   	push   %ebp$/;"	l
c0105986	obj/kernel.asm	/^c0105986:	89 e5                	mov    %esp,%ebp$/;"	l
c0105988	obj/kernel.asm	/^c0105988:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010598b	obj/kernel.asm	/^c010598b:	e8 7b e0 ff ff       	call   c0103a0b <nr_free_pages>$/;"	l
c0105990	obj/kernel.asm	/^c0105990:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105993	obj/kernel.asm	/^c0105993:	e8 17 00 00 00       	call   c01059af <check_vma_struct>$/;"	l
c0105998	obj/kernel.asm	/^c0105998:	e8 0e 04 00 00       	call   c0105dab <check_pgfault>$/;"	l
c010599d	obj/kernel.asm	/^c010599d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01059a0	obj/kernel.asm	/^c01059a0:	68 8c c5 10 c0       	push   $0xc010c58c$/;"	l
c01059a5	obj/kernel.asm	/^c01059a5:	e8 cb a8 ff ff       	call   c0100275 <cprintf>$/;"	l
c01059aa	obj/kernel.asm	/^c01059aa:	83 c4 10             	add    $0x10,%esp$/;"	l
c01059ad	obj/kernel.asm	/^c01059ad:	c9                   	leave  $/;"	l
c01059ae	obj/kernel.asm	/^c01059ae:	c3                   	ret    $/;"	l
c01059af	obj/kernel.asm	/^c01059af <check_vma_struct>:$/;"	l
c01059af	obj/kernel.asm	/^c01059af:	55                   	push   %ebp$/;"	l
c01059b0	obj/kernel.asm	/^c01059b0:	89 e5                	mov    %esp,%ebp$/;"	l
c01059b2	obj/kernel.asm	/^c01059b2:	83 ec 58             	sub    $0x58,%esp$/;"	l
c01059b5	obj/kernel.asm	/^c01059b5:	e8 51 e0 ff ff       	call   c0103a0b <nr_free_pages>$/;"	l
c01059ba	obj/kernel.asm	/^c01059ba:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01059bd	obj/kernel.asm	/^c01059bd:	e8 bc f8 ff ff       	call   c010527e <mm_create>$/;"	l
c01059c2	obj/kernel.asm	/^c01059c2:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01059c5	obj/kernel.asm	/^c01059c5:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01059c9	obj/kernel.asm	/^c01059c9:	75 19                	jne    c01059e4 <check_vma_struct+0x35>$/;"	l
c01059cb	obj/kernel.asm	/^c01059cb:	68 43 c5 10 c0       	push   $0xc010c543$/;"	l
c01059d0	obj/kernel.asm	/^c01059d0:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c01059d5	obj/kernel.asm	/^c01059d5:	68 0c 01 00 00       	push   $0x10c$/;"	l
c01059da	obj/kernel.asm	/^c01059da:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c01059df	obj/kernel.asm	/^c01059df:	e8 f6 a9 ff ff       	call   c01003da <__panic>$/;"	l
c01059e4	obj/kernel.asm	/^c01059e4:	c7 45 e4 0a 00 00 00 	movl   $0xa,-0x1c(%ebp)$/;"	l
c01059eb	obj/kernel.asm	/^c01059eb:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01059ee	obj/kernel.asm	/^c01059ee:	89 d0                	mov    %edx,%eax$/;"	l
c01059f0	obj/kernel.asm	/^c01059f0:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01059f3	obj/kernel.asm	/^c01059f3:	01 d0                	add    %edx,%eax$/;"	l
c01059f5	obj/kernel.asm	/^c01059f5:	01 c0                	add    %eax,%eax$/;"	l
c01059f7	obj/kernel.asm	/^c01059f7:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01059fa	obj/kernel.asm	/^c01059fa:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01059fd	obj/kernel.asm	/^c01059fd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105a00	obj/kernel.asm	/^c0105a00:	eb 5f                	jmp    c0105a61 <check_vma_struct+0xb2>$/;"	l
c0105a02	obj/kernel.asm	/^c0105a02:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105a05	obj/kernel.asm	/^c0105a05:	89 d0                	mov    %edx,%eax$/;"	l
c0105a07	obj/kernel.asm	/^c0105a07:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105a0a	obj/kernel.asm	/^c0105a0a:	01 d0                	add    %edx,%eax$/;"	l
c0105a0c	obj/kernel.asm	/^c0105a0c:	83 c0 02             	add    $0x2,%eax$/;"	l
c0105a0f	obj/kernel.asm	/^c0105a0f:	89 c1                	mov    %eax,%ecx$/;"	l
c0105a11	obj/kernel.asm	/^c0105a11:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105a14	obj/kernel.asm	/^c0105a14:	89 d0                	mov    %edx,%eax$/;"	l
c0105a16	obj/kernel.asm	/^c0105a16:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105a19	obj/kernel.asm	/^c0105a19:	01 d0                	add    %edx,%eax$/;"	l
c0105a1b	obj/kernel.asm	/^c0105a1b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105a1e	obj/kernel.asm	/^c0105a1e:	6a 00                	push   $0x0$/;"	l
c0105a20	obj/kernel.asm	/^c0105a20:	51                   	push   %ecx$/;"	l
c0105a21	obj/kernel.asm	/^c0105a21:	50                   	push   %eax$/;"	l
c0105a22	obj/kernel.asm	/^c0105a22:	e8 f5 f8 ff ff       	call   c010531c <vma_create>$/;"	l
c0105a27	obj/kernel.asm	/^c0105a27:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105a2a	obj/kernel.asm	/^c0105a2a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105a2d	obj/kernel.asm	/^c0105a2d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0105a31	obj/kernel.asm	/^c0105a31:	75 19                	jne    c0105a4c <check_vma_struct+0x9d>$/;"	l
c0105a33	obj/kernel.asm	/^c0105a33:	68 a4 c5 10 c0       	push   $0xc010c5a4$/;"	l
c0105a38	obj/kernel.asm	/^c0105a38:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105a3d	obj/kernel.asm	/^c0105a3d:	68 13 01 00 00       	push   $0x113$/;"	l
c0105a42	obj/kernel.asm	/^c0105a42:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105a47	obj/kernel.asm	/^c0105a47:	e8 8e a9 ff ff       	call   c01003da <__panic>$/;"	l
c0105a4c	obj/kernel.asm	/^c0105a4c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105a4f	obj/kernel.asm	/^c0105a4f:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0105a52	obj/kernel.asm	/^c0105a52:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105a55	obj/kernel.asm	/^c0105a55:	e8 29 fa ff ff       	call   c0105483 <insert_vma_struct>$/;"	l
c0105a5a	obj/kernel.asm	/^c0105a5a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105a5d	obj/kernel.asm	/^c0105a5d:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0105a61	obj/kernel.asm	/^c0105a61:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105a65	obj/kernel.asm	/^c0105a65:	7f 9b                	jg     c0105a02 <check_vma_struct+0x53>$/;"	l
c0105a67	obj/kernel.asm	/^c0105a67:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105a6a	obj/kernel.asm	/^c0105a6a:	83 c0 01             	add    $0x1,%eax$/;"	l
c0105a6d	obj/kernel.asm	/^c0105a6d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105a70	obj/kernel.asm	/^c0105a70:	eb 5f                	jmp    c0105ad1 <check_vma_struct+0x122>$/;"	l
c0105a72	obj/kernel.asm	/^c0105a72:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105a75	obj/kernel.asm	/^c0105a75:	89 d0                	mov    %edx,%eax$/;"	l
c0105a77	obj/kernel.asm	/^c0105a77:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105a7a	obj/kernel.asm	/^c0105a7a:	01 d0                	add    %edx,%eax$/;"	l
c0105a7c	obj/kernel.asm	/^c0105a7c:	83 c0 02             	add    $0x2,%eax$/;"	l
c0105a7f	obj/kernel.asm	/^c0105a7f:	89 c1                	mov    %eax,%ecx$/;"	l
c0105a81	obj/kernel.asm	/^c0105a81:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105a84	obj/kernel.asm	/^c0105a84:	89 d0                	mov    %edx,%eax$/;"	l
c0105a86	obj/kernel.asm	/^c0105a86:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105a89	obj/kernel.asm	/^c0105a89:	01 d0                	add    %edx,%eax$/;"	l
c0105a8b	obj/kernel.asm	/^c0105a8b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105a8e	obj/kernel.asm	/^c0105a8e:	6a 00                	push   $0x0$/;"	l
c0105a90	obj/kernel.asm	/^c0105a90:	51                   	push   %ecx$/;"	l
c0105a91	obj/kernel.asm	/^c0105a91:	50                   	push   %eax$/;"	l
c0105a92	obj/kernel.asm	/^c0105a92:	e8 85 f8 ff ff       	call   c010531c <vma_create>$/;"	l
c0105a97	obj/kernel.asm	/^c0105a97:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105a9a	obj/kernel.asm	/^c0105a9a:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0105a9d	obj/kernel.asm	/^c0105a9d:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0105aa1	obj/kernel.asm	/^c0105aa1:	75 19                	jne    c0105abc <check_vma_struct+0x10d>$/;"	l
c0105aa3	obj/kernel.asm	/^c0105aa3:	68 a4 c5 10 c0       	push   $0xc010c5a4$/;"	l
c0105aa8	obj/kernel.asm	/^c0105aa8:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105aad	obj/kernel.asm	/^c0105aad:	68 19 01 00 00       	push   $0x119$/;"	l
c0105ab2	obj/kernel.asm	/^c0105ab2:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105ab7	obj/kernel.asm	/^c0105ab7:	e8 1e a9 ff ff       	call   c01003da <__panic>$/;"	l
c0105abc	obj/kernel.asm	/^c0105abc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105abf	obj/kernel.asm	/^c0105abf:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c0105ac2	obj/kernel.asm	/^c0105ac2:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105ac5	obj/kernel.asm	/^c0105ac5:	e8 b9 f9 ff ff       	call   c0105483 <insert_vma_struct>$/;"	l
c0105aca	obj/kernel.asm	/^c0105aca:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105acd	obj/kernel.asm	/^c0105acd:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105ad1	obj/kernel.asm	/^c0105ad1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105ad4	obj/kernel.asm	/^c0105ad4:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0105ad7	obj/kernel.asm	/^c0105ad7:	7e 99                	jle    c0105a72 <check_vma_struct+0xc3>$/;"	l
c0105ad9	obj/kernel.asm	/^c0105ad9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105adc	obj/kernel.asm	/^c0105adc:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0105adf	obj/kernel.asm	/^c0105adf:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0105ae2	obj/kernel.asm	/^c0105ae2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105ae5	obj/kernel.asm	/^c0105ae5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105ae8	obj/kernel.asm	/^c0105ae8:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c0105aef	obj/kernel.asm	/^c0105aef:	e9 81 00 00 00       	jmp    c0105b75 <check_vma_struct+0x1c6>$/;"	l
c0105af4	obj/kernel.asm	/^c0105af4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105af7	obj/kernel.asm	/^c0105af7:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0105afa	obj/kernel.asm	/^c0105afa:	75 19                	jne    c0105b15 <check_vma_struct+0x166>$/;"	l
c0105afc	obj/kernel.asm	/^c0105afc:	68 b0 c5 10 c0       	push   $0xc010c5b0$/;"	l
c0105b01	obj/kernel.asm	/^c0105b01:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105b06	obj/kernel.asm	/^c0105b06:	68 20 01 00 00       	push   $0x120$/;"	l
c0105b0b	obj/kernel.asm	/^c0105b0b:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105b10	obj/kernel.asm	/^c0105b10:	e8 c5 a8 ff ff       	call   c01003da <__panic>$/;"	l
c0105b15	obj/kernel.asm	/^c0105b15:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105b18	obj/kernel.asm	/^c0105b18:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105b1b	obj/kernel.asm	/^c0105b1b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0105b1e	obj/kernel.asm	/^c0105b1e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0105b21	obj/kernel.asm	/^c0105b21:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c0105b24	obj/kernel.asm	/^c0105b24:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105b27	obj/kernel.asm	/^c0105b27:	89 d0                	mov    %edx,%eax$/;"	l
c0105b29	obj/kernel.asm	/^c0105b29:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105b2c	obj/kernel.asm	/^c0105b2c:	01 d0                	add    %edx,%eax$/;"	l
c0105b2e	obj/kernel.asm	/^c0105b2e:	39 c1                	cmp    %eax,%ecx$/;"	l
c0105b30	obj/kernel.asm	/^c0105b30:	75 17                	jne    c0105b49 <check_vma_struct+0x19a>$/;"	l
c0105b32	obj/kernel.asm	/^c0105b32:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0105b35	obj/kernel.asm	/^c0105b35:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
c0105b38	obj/kernel.asm	/^c0105b38:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105b3b	obj/kernel.asm	/^c0105b3b:	89 d0                	mov    %edx,%eax$/;"	l
c0105b3d	obj/kernel.asm	/^c0105b3d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105b40	obj/kernel.asm	/^c0105b40:	01 d0                	add    %edx,%eax$/;"	l
c0105b42	obj/kernel.asm	/^c0105b42:	83 c0 02             	add    $0x2,%eax$/;"	l
c0105b45	obj/kernel.asm	/^c0105b45:	39 c1                	cmp    %eax,%ecx$/;"	l
c0105b47	obj/kernel.asm	/^c0105b47:	74 19                	je     c0105b62 <check_vma_struct+0x1b3>$/;"	l
c0105b49	obj/kernel.asm	/^c0105b49:	68 c8 c5 10 c0       	push   $0xc010c5c8$/;"	l
c0105b4e	obj/kernel.asm	/^c0105b4e:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105b53	obj/kernel.asm	/^c0105b53:	68 22 01 00 00       	push   $0x122$/;"	l
c0105b58	obj/kernel.asm	/^c0105b58:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105b5d	obj/kernel.asm	/^c0105b5d:	e8 78 a8 ff ff       	call   c01003da <__panic>$/;"	l
c0105b62	obj/kernel.asm	/^c0105b62:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105b65	obj/kernel.asm	/^c0105b65:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0105b68	obj/kernel.asm	/^c0105b68:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0105b6b	obj/kernel.asm	/^c0105b6b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105b6e	obj/kernel.asm	/^c0105b6e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105b71	obj/kernel.asm	/^c0105b71:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105b75	obj/kernel.asm	/^c0105b75:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105b78	obj/kernel.asm	/^c0105b78:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0105b7b	obj/kernel.asm	/^c0105b7b:	0f 8e 73 ff ff ff    	jle    c0105af4 <check_vma_struct+0x145>$/;"	l
c0105b81	obj/kernel.asm	/^c0105b81:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%ebp)$/;"	l
c0105b88	obj/kernel.asm	/^c0105b88:	e9 80 01 00 00       	jmp    c0105d0d <check_vma_struct+0x35e>$/;"	l
c0105b8d	obj/kernel.asm	/^c0105b8d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105b90	obj/kernel.asm	/^c0105b90:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105b93	obj/kernel.asm	/^c0105b93:	50                   	push   %eax$/;"	l
c0105b94	obj/kernel.asm	/^c0105b94:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105b97	obj/kernel.asm	/^c0105b97:	e8 bc f7 ff ff       	call   c0105358 <find_vma>$/;"	l
c0105b9c	obj/kernel.asm	/^c0105b9c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105b9f	obj/kernel.asm	/^c0105b9f:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0105ba2	obj/kernel.asm	/^c0105ba2:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c0105ba6	obj/kernel.asm	/^c0105ba6:	75 19                	jne    c0105bc1 <check_vma_struct+0x212>$/;"	l
c0105ba8	obj/kernel.asm	/^c0105ba8:	68 fd c5 10 c0       	push   $0xc010c5fd$/;"	l
c0105bad	obj/kernel.asm	/^c0105bad:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105bb2	obj/kernel.asm	/^c0105bb2:	68 28 01 00 00       	push   $0x128$/;"	l
c0105bb7	obj/kernel.asm	/^c0105bb7:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105bbc	obj/kernel.asm	/^c0105bbc:	e8 19 a8 ff ff       	call   c01003da <__panic>$/;"	l
c0105bc1	obj/kernel.asm	/^c0105bc1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105bc4	obj/kernel.asm	/^c0105bc4:	83 c0 01             	add    $0x1,%eax$/;"	l
c0105bc7	obj/kernel.asm	/^c0105bc7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105bca	obj/kernel.asm	/^c0105bca:	50                   	push   %eax$/;"	l
c0105bcb	obj/kernel.asm	/^c0105bcb:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105bce	obj/kernel.asm	/^c0105bce:	e8 85 f7 ff ff       	call   c0105358 <find_vma>$/;"	l
c0105bd3	obj/kernel.asm	/^c0105bd3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105bd6	obj/kernel.asm	/^c0105bd6:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0105bd9	obj/kernel.asm	/^c0105bd9:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0105bdd	obj/kernel.asm	/^c0105bdd:	75 19                	jne    c0105bf8 <check_vma_struct+0x249>$/;"	l
c0105bdf	obj/kernel.asm	/^c0105bdf:	68 0a c6 10 c0       	push   $0xc010c60a$/;"	l
c0105be4	obj/kernel.asm	/^c0105be4:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105be9	obj/kernel.asm	/^c0105be9:	68 2a 01 00 00       	push   $0x12a$/;"	l
c0105bee	obj/kernel.asm	/^c0105bee:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105bf3	obj/kernel.asm	/^c0105bf3:	e8 e2 a7 ff ff       	call   c01003da <__panic>$/;"	l
c0105bf8	obj/kernel.asm	/^c0105bf8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105bfb	obj/kernel.asm	/^c0105bfb:	83 c0 02             	add    $0x2,%eax$/;"	l
c0105bfe	obj/kernel.asm	/^c0105bfe:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105c01	obj/kernel.asm	/^c0105c01:	50                   	push   %eax$/;"	l
c0105c02	obj/kernel.asm	/^c0105c02:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105c05	obj/kernel.asm	/^c0105c05:	e8 4e f7 ff ff       	call   c0105358 <find_vma>$/;"	l
c0105c0a	obj/kernel.asm	/^c0105c0a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105c0d	obj/kernel.asm	/^c0105c0d:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0105c10	obj/kernel.asm	/^c0105c10:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c0105c14	obj/kernel.asm	/^c0105c14:	74 19                	je     c0105c2f <check_vma_struct+0x280>$/;"	l
c0105c16	obj/kernel.asm	/^c0105c16:	68 17 c6 10 c0       	push   $0xc010c617$/;"	l
c0105c1b	obj/kernel.asm	/^c0105c1b:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105c20	obj/kernel.asm	/^c0105c20:	68 2c 01 00 00       	push   $0x12c$/;"	l
c0105c25	obj/kernel.asm	/^c0105c25:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105c2a	obj/kernel.asm	/^c0105c2a:	e8 ab a7 ff ff       	call   c01003da <__panic>$/;"	l
c0105c2f	obj/kernel.asm	/^c0105c2f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105c32	obj/kernel.asm	/^c0105c32:	83 c0 03             	add    $0x3,%eax$/;"	l
c0105c35	obj/kernel.asm	/^c0105c35:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105c38	obj/kernel.asm	/^c0105c38:	50                   	push   %eax$/;"	l
c0105c39	obj/kernel.asm	/^c0105c39:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105c3c	obj/kernel.asm	/^c0105c3c:	e8 17 f7 ff ff       	call   c0105358 <find_vma>$/;"	l
c0105c41	obj/kernel.asm	/^c0105c41:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105c44	obj/kernel.asm	/^c0105c44:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0105c47	obj/kernel.asm	/^c0105c47:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)$/;"	l
c0105c4b	obj/kernel.asm	/^c0105c4b:	74 19                	je     c0105c66 <check_vma_struct+0x2b7>$/;"	l
c0105c4d	obj/kernel.asm	/^c0105c4d:	68 24 c6 10 c0       	push   $0xc010c624$/;"	l
c0105c52	obj/kernel.asm	/^c0105c52:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105c57	obj/kernel.asm	/^c0105c57:	68 2e 01 00 00       	push   $0x12e$/;"	l
c0105c5c	obj/kernel.asm	/^c0105c5c:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105c61	obj/kernel.asm	/^c0105c61:	e8 74 a7 ff ff       	call   c01003da <__panic>$/;"	l
c0105c66	obj/kernel.asm	/^c0105c66:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105c69	obj/kernel.asm	/^c0105c69:	83 c0 04             	add    $0x4,%eax$/;"	l
c0105c6c	obj/kernel.asm	/^c0105c6c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105c6f	obj/kernel.asm	/^c0105c6f:	50                   	push   %eax$/;"	l
c0105c70	obj/kernel.asm	/^c0105c70:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105c73	obj/kernel.asm	/^c0105c73:	e8 e0 f6 ff ff       	call   c0105358 <find_vma>$/;"	l
c0105c78	obj/kernel.asm	/^c0105c78:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105c7b	obj/kernel.asm	/^c0105c7b:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0105c7e	obj/kernel.asm	/^c0105c7e:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)$/;"	l
c0105c82	obj/kernel.asm	/^c0105c82:	74 19                	je     c0105c9d <check_vma_struct+0x2ee>$/;"	l
c0105c84	obj/kernel.asm	/^c0105c84:	68 31 c6 10 c0       	push   $0xc010c631$/;"	l
c0105c89	obj/kernel.asm	/^c0105c89:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105c8e	obj/kernel.asm	/^c0105c8e:	68 30 01 00 00       	push   $0x130$/;"	l
c0105c93	obj/kernel.asm	/^c0105c93:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105c98	obj/kernel.asm	/^c0105c98:	e8 3d a7 ff ff       	call   c01003da <__panic>$/;"	l
c0105c9d	obj/kernel.asm	/^c0105c9d:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0105ca0	obj/kernel.asm	/^c0105ca0:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0105ca3	obj/kernel.asm	/^c0105ca3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105ca6	obj/kernel.asm	/^c0105ca6:	39 c2                	cmp    %eax,%edx$/;"	l
c0105ca8	obj/kernel.asm	/^c0105ca8:	75 10                	jne    c0105cba <check_vma_struct+0x30b>$/;"	l
c0105caa	obj/kernel.asm	/^c0105caa:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0105cad	obj/kernel.asm	/^c0105cad:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105cb0	obj/kernel.asm	/^c0105cb0:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105cb3	obj/kernel.asm	/^c0105cb3:	83 c2 02             	add    $0x2,%edx$/;"	l
c0105cb6	obj/kernel.asm	/^c0105cb6:	39 d0                	cmp    %edx,%eax$/;"	l
c0105cb8	obj/kernel.asm	/^c0105cb8:	74 19                	je     c0105cd3 <check_vma_struct+0x324>$/;"	l
c0105cba	obj/kernel.asm	/^c0105cba:	68 40 c6 10 c0       	push   $0xc010c640$/;"	l
c0105cbf	obj/kernel.asm	/^c0105cbf:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105cc4	obj/kernel.asm	/^c0105cc4:	68 32 01 00 00       	push   $0x132$/;"	l
c0105cc9	obj/kernel.asm	/^c0105cc9:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105cce	obj/kernel.asm	/^c0105cce:	e8 07 a7 ff ff       	call   c01003da <__panic>$/;"	l
c0105cd3	obj/kernel.asm	/^c0105cd3:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0105cd6	obj/kernel.asm	/^c0105cd6:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0105cd9	obj/kernel.asm	/^c0105cd9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105cdc	obj/kernel.asm	/^c0105cdc:	39 c2                	cmp    %eax,%edx$/;"	l
c0105cde	obj/kernel.asm	/^c0105cde:	75 10                	jne    c0105cf0 <check_vma_struct+0x341>$/;"	l
c0105ce0	obj/kernel.asm	/^c0105ce0:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0105ce3	obj/kernel.asm	/^c0105ce3:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105ce6	obj/kernel.asm	/^c0105ce6:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105ce9	obj/kernel.asm	/^c0105ce9:	83 c2 02             	add    $0x2,%edx$/;"	l
c0105cec	obj/kernel.asm	/^c0105cec:	39 d0                	cmp    %edx,%eax$/;"	l
c0105cee	obj/kernel.asm	/^c0105cee:	74 19                	je     c0105d09 <check_vma_struct+0x35a>$/;"	l
c0105cf0	obj/kernel.asm	/^c0105cf0:	68 70 c6 10 c0       	push   $0xc010c670$/;"	l
c0105cf5	obj/kernel.asm	/^c0105cf5:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105cfa	obj/kernel.asm	/^c0105cfa:	68 33 01 00 00       	push   $0x133$/;"	l
c0105cff	obj/kernel.asm	/^c0105cff:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105d04	obj/kernel.asm	/^c0105d04:	e8 d1 a6 ff ff       	call   c01003da <__panic>$/;"	l
c0105d09	obj/kernel.asm	/^c0105d09:	83 45 f4 05          	addl   $0x5,-0xc(%ebp)$/;"	l
c0105d0d	obj/kernel.asm	/^c0105d0d:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0105d10	obj/kernel.asm	/^c0105d10:	89 d0                	mov    %edx,%eax$/;"	l
c0105d12	obj/kernel.asm	/^c0105d12:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105d15	obj/kernel.asm	/^c0105d15:	01 d0                	add    %edx,%eax$/;"	l
c0105d17	obj/kernel.asm	/^c0105d17:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0105d1a	obj/kernel.asm	/^c0105d1a:	0f 8d 6d fe ff ff    	jge    c0105b8d <check_vma_struct+0x1de>$/;"	l
c0105d20	obj/kernel.asm	/^c0105d20:	c7 45 f4 04 00 00 00 	movl   $0x4,-0xc(%ebp)$/;"	l
c0105d27	obj/kernel.asm	/^c0105d27:	eb 5c                	jmp    c0105d85 <check_vma_struct+0x3d6>$/;"	l
c0105d29	obj/kernel.asm	/^c0105d29:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105d2c	obj/kernel.asm	/^c0105d2c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105d2f	obj/kernel.asm	/^c0105d2f:	50                   	push   %eax$/;"	l
c0105d30	obj/kernel.asm	/^c0105d30:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105d33	obj/kernel.asm	/^c0105d33:	e8 20 f6 ff ff       	call   c0105358 <find_vma>$/;"	l
c0105d38	obj/kernel.asm	/^c0105d38:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105d3b	obj/kernel.asm	/^c0105d3b:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0105d3e	obj/kernel.asm	/^c0105d3e:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0105d42	obj/kernel.asm	/^c0105d42:	74 1e                	je     c0105d62 <check_vma_struct+0x3b3>$/;"	l
c0105d44	obj/kernel.asm	/^c0105d44:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0105d47	obj/kernel.asm	/^c0105d47:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0105d4a	obj/kernel.asm	/^c0105d4a:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0105d4d	obj/kernel.asm	/^c0105d4d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105d50	obj/kernel.asm	/^c0105d50:	52                   	push   %edx$/;"	l
c0105d51	obj/kernel.asm	/^c0105d51:	50                   	push   %eax$/;"	l
c0105d52	obj/kernel.asm	/^c0105d52:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0105d55	obj/kernel.asm	/^c0105d55:	68 a0 c6 10 c0       	push   $0xc010c6a0$/;"	l
c0105d5a	obj/kernel.asm	/^c0105d5a:	e8 16 a5 ff ff       	call   c0100275 <cprintf>$/;"	l
c0105d5f	obj/kernel.asm	/^c0105d5f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105d62	obj/kernel.asm	/^c0105d62:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0105d66	obj/kernel.asm	/^c0105d66:	74 19                	je     c0105d81 <check_vma_struct+0x3d2>$/;"	l
c0105d68	obj/kernel.asm	/^c0105d68:	68 c5 c6 10 c0       	push   $0xc010c6c5$/;"	l
c0105d6d	obj/kernel.asm	/^c0105d6d:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105d72	obj/kernel.asm	/^c0105d72:	68 3b 01 00 00       	push   $0x13b$/;"	l
c0105d77	obj/kernel.asm	/^c0105d77:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105d7c	obj/kernel.asm	/^c0105d7c:	e8 59 a6 ff ff       	call   c01003da <__panic>$/;"	l
c0105d81	obj/kernel.asm	/^c0105d81:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0105d85	obj/kernel.asm	/^c0105d85:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105d89	obj/kernel.asm	/^c0105d89:	79 9e                	jns    c0105d29 <check_vma_struct+0x37a>$/;"	l
c0105d8b	obj/kernel.asm	/^c0105d8b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105d8e	obj/kernel.asm	/^c0105d8e:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105d91	obj/kernel.asm	/^c0105d91:	e8 0f f8 ff ff       	call   c01055a5 <mm_destroy>$/;"	l
c0105d96	obj/kernel.asm	/^c0105d96:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105d99	obj/kernel.asm	/^c0105d99:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105d9c	obj/kernel.asm	/^c0105d9c:	68 dc c6 10 c0       	push   $0xc010c6dc$/;"	l
c0105da1	obj/kernel.asm	/^c0105da1:	e8 cf a4 ff ff       	call   c0100275 <cprintf>$/;"	l
c0105da6	obj/kernel.asm	/^c0105da6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105da9	obj/kernel.asm	/^c0105da9:	c9                   	leave  $/;"	l
c0105daa	obj/kernel.asm	/^c0105daa:	c3                   	ret    $/;"	l
c0105dab	obj/kernel.asm	/^c0105dab <check_pgfault>:$/;"	l
c0105dab	obj/kernel.asm	/^c0105dab:	55                   	push   %ebp$/;"	l
c0105dac	obj/kernel.asm	/^c0105dac:	89 e5                	mov    %esp,%ebp$/;"	l
c0105dae	obj/kernel.asm	/^c0105dae:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105db1	obj/kernel.asm	/^c0105db1:	e8 55 dc ff ff       	call   c0103a0b <nr_free_pages>$/;"	l
c0105db6	obj/kernel.asm	/^c0105db6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105db9	obj/kernel.asm	/^c0105db9:	e8 c0 f4 ff ff       	call   c010527e <mm_create>$/;"	l
c0105dbe	obj/kernel.asm	/^c0105dbe:	a3 9c e0 19 c0       	mov    %eax,0xc019e09c$/;"	l
c0105dc3	obj/kernel.asm	/^c0105dc3:	a1 9c e0 19 c0       	mov    0xc019e09c,%eax$/;"	l
c0105dc8	obj/kernel.asm	/^c0105dc8:	85 c0                	test   %eax,%eax$/;"	l
c0105dca	obj/kernel.asm	/^c0105dca:	75 19                	jne    c0105de5 <check_pgfault+0x3a>$/;"	l
c0105dcc	obj/kernel.asm	/^c0105dcc:	68 fb c6 10 c0       	push   $0xc010c6fb$/;"	l
c0105dd1	obj/kernel.asm	/^c0105dd1:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105dd6	obj/kernel.asm	/^c0105dd6:	68 4b 01 00 00       	push   $0x14b$/;"	l
c0105ddb	obj/kernel.asm	/^c0105ddb:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105de0	obj/kernel.asm	/^c0105de0:	e8 f5 a5 ff ff       	call   c01003da <__panic>$/;"	l
c0105de5	obj/kernel.asm	/^c0105de5:	a1 9c e0 19 c0       	mov    0xc019e09c,%eax$/;"	l
c0105dea	obj/kernel.asm	/^c0105dea:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105ded	obj/kernel.asm	/^c0105ded:	8b 15 04 bf 19 c0    	mov    0xc019bf04,%edx$/;"	l
c0105df3	obj/kernel.asm	/^c0105df3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105df6	obj/kernel.asm	/^c0105df6:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0105df9	obj/kernel.asm	/^c0105df9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105dfc	obj/kernel.asm	/^c0105dfc:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0105dff	obj/kernel.asm	/^c0105dff:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105e02	obj/kernel.asm	/^c0105e02:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105e05	obj/kernel.asm	/^c0105e05:	8b 00                	mov    (%eax),%eax$/;"	l
c0105e07	obj/kernel.asm	/^c0105e07:	85 c0                	test   %eax,%eax$/;"	l
c0105e09	obj/kernel.asm	/^c0105e09:	74 19                	je     c0105e24 <check_pgfault+0x79>$/;"	l
c0105e0b	obj/kernel.asm	/^c0105e0b:	68 13 c7 10 c0       	push   $0xc010c713$/;"	l
c0105e10	obj/kernel.asm	/^c0105e10:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105e15	obj/kernel.asm	/^c0105e15:	68 4f 01 00 00       	push   $0x14f$/;"	l
c0105e1a	obj/kernel.asm	/^c0105e1a:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105e1f	obj/kernel.asm	/^c0105e1f:	e8 b6 a5 ff ff       	call   c01003da <__panic>$/;"	l
c0105e24	obj/kernel.asm	/^c0105e24:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105e27	obj/kernel.asm	/^c0105e27:	6a 02                	push   $0x2$/;"	l
c0105e29	obj/kernel.asm	/^c0105e29:	68 00 00 40 00       	push   $0x400000$/;"	l
c0105e2e	obj/kernel.asm	/^c0105e2e:	6a 00                	push   $0x0$/;"	l
c0105e30	obj/kernel.asm	/^c0105e30:	e8 e7 f4 ff ff       	call   c010531c <vma_create>$/;"	l
c0105e35	obj/kernel.asm	/^c0105e35:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105e38	obj/kernel.asm	/^c0105e38:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105e3b	obj/kernel.asm	/^c0105e3b:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0105e3f	obj/kernel.asm	/^c0105e3f:	75 19                	jne    c0105e5a <check_pgfault+0xaf>$/;"	l
c0105e41	obj/kernel.asm	/^c0105e41:	68 a4 c5 10 c0       	push   $0xc010c5a4$/;"	l
c0105e46	obj/kernel.asm	/^c0105e46:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105e4b	obj/kernel.asm	/^c0105e4b:	68 52 01 00 00       	push   $0x152$/;"	l
c0105e50	obj/kernel.asm	/^c0105e50:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105e55	obj/kernel.asm	/^c0105e55:	e8 80 a5 ff ff       	call   c01003da <__panic>$/;"	l
c0105e5a	obj/kernel.asm	/^c0105e5a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105e5d	obj/kernel.asm	/^c0105e5d:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0105e60	obj/kernel.asm	/^c0105e60:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105e63	obj/kernel.asm	/^c0105e63:	e8 1b f6 ff ff       	call   c0105483 <insert_vma_struct>$/;"	l
c0105e68	obj/kernel.asm	/^c0105e68:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105e6b	obj/kernel.asm	/^c0105e6b:	c7 45 dc 00 01 00 00 	movl   $0x100,-0x24(%ebp)$/;"	l
c0105e72	obj/kernel.asm	/^c0105e72:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105e75	obj/kernel.asm	/^c0105e75:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0105e78	obj/kernel.asm	/^c0105e78:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105e7b	obj/kernel.asm	/^c0105e7b:	e8 d8 f4 ff ff       	call   c0105358 <find_vma>$/;"	l
c0105e80	obj/kernel.asm	/^c0105e80:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105e83	obj/kernel.asm	/^c0105e83:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0105e86	obj/kernel.asm	/^c0105e86:	74 19                	je     c0105ea1 <check_pgfault+0xf6>$/;"	l
c0105e88	obj/kernel.asm	/^c0105e88:	68 21 c7 10 c0       	push   $0xc010c721$/;"	l
c0105e8d	obj/kernel.asm	/^c0105e8d:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105e92	obj/kernel.asm	/^c0105e92:	68 57 01 00 00       	push   $0x157$/;"	l
c0105e97	obj/kernel.asm	/^c0105e97:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105e9c	obj/kernel.asm	/^c0105e9c:	e8 39 a5 ff ff       	call   c01003da <__panic>$/;"	l
c0105ea1	obj/kernel.asm	/^c0105ea1:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0105ea8	obj/kernel.asm	/^c0105ea8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0105eaf	obj/kernel.asm	/^c0105eaf:	eb 19                	jmp    c0105eca <check_pgfault+0x11f>$/;"	l
c0105eb1	obj/kernel.asm	/^c0105eb1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105eb4	obj/kernel.asm	/^c0105eb4:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105eb7	obj/kernel.asm	/^c0105eb7:	01 d0                	add    %edx,%eax$/;"	l
c0105eb9	obj/kernel.asm	/^c0105eb9:	89 c2                	mov    %eax,%edx$/;"	l
c0105ebb	obj/kernel.asm	/^c0105ebb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105ebe	obj/kernel.asm	/^c0105ebe:	88 02                	mov    %al,(%edx)$/;"	l
c0105ec0	obj/kernel.asm	/^c0105ec0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105ec3	obj/kernel.asm	/^c0105ec3:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c0105ec6	obj/kernel.asm	/^c0105ec6:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105eca	obj/kernel.asm	/^c0105eca:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c0105ece	obj/kernel.asm	/^c0105ece:	7e e1                	jle    c0105eb1 <check_pgfault+0x106>$/;"	l
c0105ed0	obj/kernel.asm	/^c0105ed0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0105ed7	obj/kernel.asm	/^c0105ed7:	eb 15                	jmp    c0105eee <check_pgfault+0x143>$/;"	l
c0105ed9	obj/kernel.asm	/^c0105ed9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105edc	obj/kernel.asm	/^c0105edc:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105edf	obj/kernel.asm	/^c0105edf:	01 d0                	add    %edx,%eax$/;"	l
c0105ee1	obj/kernel.asm	/^c0105ee1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0105ee4	obj/kernel.asm	/^c0105ee4:	0f be c0             	movsbl %al,%eax$/;"	l
c0105ee7	obj/kernel.asm	/^c0105ee7:	29 45 f0             	sub    %eax,-0x10(%ebp)$/;"	l
c0105eea	obj/kernel.asm	/^c0105eea:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105eee	obj/kernel.asm	/^c0105eee:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c0105ef2	obj/kernel.asm	/^c0105ef2:	7e e5                	jle    c0105ed9 <check_pgfault+0x12e>$/;"	l
c0105ef4	obj/kernel.asm	/^c0105ef4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0105ef8	obj/kernel.asm	/^c0105ef8:	74 19                	je     c0105f13 <check_pgfault+0x168>$/;"	l
c0105efa	obj/kernel.asm	/^c0105efa:	68 3b c7 10 c0       	push   $0xc010c73b$/;"	l
c0105eff	obj/kernel.asm	/^c0105eff:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105f04	obj/kernel.asm	/^c0105f04:	68 61 01 00 00       	push   $0x161$/;"	l
c0105f09	obj/kernel.asm	/^c0105f09:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105f0e	obj/kernel.asm	/^c0105f0e:	e8 c7 a4 ff ff       	call   c01003da <__panic>$/;"	l
c0105f13	obj/kernel.asm	/^c0105f13:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105f16	obj/kernel.asm	/^c0105f16:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0105f19	obj/kernel.asm	/^c0105f19:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0105f1c	obj/kernel.asm	/^c0105f1c:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0105f21	obj/kernel.asm	/^c0105f21:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105f24	obj/kernel.asm	/^c0105f24:	50                   	push   %eax$/;"	l
c0105f25	obj/kernel.asm	/^c0105f25:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0105f28	obj/kernel.asm	/^c0105f28:	e8 21 e6 ff ff       	call   c010454e <page_remove>$/;"	l
c0105f2d	obj/kernel.asm	/^c0105f2d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105f30	obj/kernel.asm	/^c0105f30:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105f33	obj/kernel.asm	/^c0105f33:	8b 00                	mov    (%eax),%eax$/;"	l
c0105f35	obj/kernel.asm	/^c0105f35:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105f38	obj/kernel.asm	/^c0105f38:	50                   	push   %eax$/;"	l
c0105f39	obj/kernel.asm	/^c0105f39:	e8 03 f3 ff ff       	call   c0105241 <pa2page>$/;"	l
c0105f3e	obj/kernel.asm	/^c0105f3e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105f41	obj/kernel.asm	/^c0105f41:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105f44	obj/kernel.asm	/^c0105f44:	6a 01                	push   $0x1$/;"	l
c0105f46	obj/kernel.asm	/^c0105f46:	50                   	push   %eax$/;"	l
c0105f47	obj/kernel.asm	/^c0105f47:	e8 8b da ff ff       	call   c01039d7 <free_pages>$/;"	l
c0105f4c	obj/kernel.asm	/^c0105f4c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105f4f	obj/kernel.asm	/^c0105f4f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105f52	obj/kernel.asm	/^c0105f52:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0105f58	obj/kernel.asm	/^c0105f58:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105f5b	obj/kernel.asm	/^c0105f5b:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0105f62	obj/kernel.asm	/^c0105f62:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105f65	obj/kernel.asm	/^c0105f65:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105f68	obj/kernel.asm	/^c0105f68:	e8 38 f6 ff ff       	call   c01055a5 <mm_destroy>$/;"	l
c0105f6d	obj/kernel.asm	/^c0105f6d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105f70	obj/kernel.asm	/^c0105f70:	c7 05 9c e0 19 c0 00 	movl   $0x0,0xc019e09c$/;"	l
c0105f77	obj/kernel.asm	/^c0105f77:	00 00 00 $/;"	l
c0105f7a	obj/kernel.asm	/^c0105f7a:	e8 8c da ff ff       	call   c0103a0b <nr_free_pages>$/;"	l
c0105f7f	obj/kernel.asm	/^c0105f7f:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0105f82	obj/kernel.asm	/^c0105f82:	74 19                	je     c0105f9d <check_pgfault+0x1f2>$/;"	l
c0105f84	obj/kernel.asm	/^c0105f84:	68 44 c7 10 c0       	push   $0xc010c744$/;"	l
c0105f89	obj/kernel.asm	/^c0105f89:	68 b3 c4 10 c0       	push   $0xc010c4b3$/;"	l
c0105f8e	obj/kernel.asm	/^c0105f8e:	68 6b 01 00 00       	push   $0x16b$/;"	l
c0105f93	obj/kernel.asm	/^c0105f93:	68 c8 c4 10 c0       	push   $0xc010c4c8$/;"	l
c0105f98	obj/kernel.asm	/^c0105f98:	e8 3d a4 ff ff       	call   c01003da <__panic>$/;"	l
c0105f9d	obj/kernel.asm	/^c0105f9d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105fa0	obj/kernel.asm	/^c0105fa0:	68 6b c7 10 c0       	push   $0xc010c76b$/;"	l
c0105fa5	obj/kernel.asm	/^c0105fa5:	e8 cb a2 ff ff       	call   c0100275 <cprintf>$/;"	l
c0105faa	obj/kernel.asm	/^c0105faa:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105fad	obj/kernel.asm	/^c0105fad:	c9                   	leave  $/;"	l
c0105fae	obj/kernel.asm	/^c0105fae:	c3                   	ret    $/;"	l
c0105faf	obj/kernel.asm	/^c0105faf <do_pgfault>:$/;"	l
c0105faf	obj/kernel.asm	/^c0105faf:	55                   	push   %ebp$/;"	l
c0105fb0	obj/kernel.asm	/^c0105fb0:	89 e5                	mov    %esp,%ebp$/;"	l
c0105fb2	obj/kernel.asm	/^c0105fb2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105fb5	obj/kernel.asm	/^c0105fb5:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0105fbc	obj/kernel.asm	/^c0105fbc:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0105fbf	obj/kernel.asm	/^c0105fbf:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105fc2	obj/kernel.asm	/^c0105fc2:	e8 91 f3 ff ff       	call   c0105358 <find_vma>$/;"	l
c0105fc7	obj/kernel.asm	/^c0105fc7:	83 c4 08             	add    $0x8,%esp$/;"	l
c0105fca	obj/kernel.asm	/^c0105fca:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105fcd	obj/kernel.asm	/^c0105fcd:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c0105fd2	obj/kernel.asm	/^c0105fd2:	83 c0 01             	add    $0x1,%eax$/;"	l
c0105fd5	obj/kernel.asm	/^c0105fd5:	a3 ac bf 19 c0       	mov    %eax,0xc019bfac$/;"	l
c0105fda	obj/kernel.asm	/^c0105fda:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0105fde	obj/kernel.asm	/^c0105fde:	74 0b                	je     c0105feb <do_pgfault+0x3c>$/;"	l
c0105fe0	obj/kernel.asm	/^c0105fe0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105fe3	obj/kernel.asm	/^c0105fe3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105fe6	obj/kernel.asm	/^c0105fe6:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0105fe9	obj/kernel.asm	/^c0105fe9:	76 18                	jbe    c0106003 <do_pgfault+0x54>$/;"	l
c0105feb	obj/kernel.asm	/^c0105feb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105fee	obj/kernel.asm	/^c0105fee:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0105ff1	obj/kernel.asm	/^c0105ff1:	68 88 c7 10 c0       	push   $0xc010c788$/;"	l
c0105ff6	obj/kernel.asm	/^c0105ff6:	e8 7a a2 ff ff       	call   c0100275 <cprintf>$/;"	l
c0105ffb	obj/kernel.asm	/^c0105ffb:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105ffe	obj/kernel.asm	/^c0105ffe:	e9 ce 01 00 00       	jmp    c01061d1 <do_pgfault+0x222>$/;"	l
c0106003	obj/kernel.asm	/^c0106003:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106006	obj/kernel.asm	/^c0106006:	83 e0 03             	and    $0x3,%eax$/;"	l
c0106009	obj/kernel.asm	/^c0106009:	85 c0                	test   %eax,%eax$/;"	l
c010600b	obj/kernel.asm	/^c010600b:	74 3e                	je     c010604b <do_pgfault+0x9c>$/;"	l
c010600d	obj/kernel.asm	/^c010600d:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0106010	obj/kernel.asm	/^c0106010:	74 24                	je     c0106036 <do_pgfault+0x87>$/;"	l
c0106012	obj/kernel.asm	/^c0106012:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106015	obj/kernel.asm	/^c0106015:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106018	obj/kernel.asm	/^c0106018:	83 e0 02             	and    $0x2,%eax$/;"	l
c010601b	obj/kernel.asm	/^c010601b:	85 c0                	test   %eax,%eax$/;"	l
c010601d	obj/kernel.asm	/^c010601d:	75 15                	jne    c0106034 <do_pgfault+0x85>$/;"	l
c010601f	obj/kernel.asm	/^c010601f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106022	obj/kernel.asm	/^c0106022:	68 b8 c7 10 c0       	push   $0xc010c7b8$/;"	l
c0106027	obj/kernel.asm	/^c0106027:	e8 49 a2 ff ff       	call   c0100275 <cprintf>$/;"	l
c010602c	obj/kernel.asm	/^c010602c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010602f	obj/kernel.asm	/^c010602f:	e9 9d 01 00 00       	jmp    c01061d1 <do_pgfault+0x222>$/;"	l
c0106034	obj/kernel.asm	/^c0106034:	eb 37                	jmp    c010606d <do_pgfault+0xbe>$/;"	l
c0106036	obj/kernel.asm	/^c0106036:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106039	obj/kernel.asm	/^c0106039:	68 18 c8 10 c0       	push   $0xc010c818$/;"	l
c010603e	obj/kernel.asm	/^c010603e:	e8 32 a2 ff ff       	call   c0100275 <cprintf>$/;"	l
c0106043	obj/kernel.asm	/^c0106043:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106046	obj/kernel.asm	/^c0106046:	e9 86 01 00 00       	jmp    c01061d1 <do_pgfault+0x222>$/;"	l
c010604b	obj/kernel.asm	/^c010604b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010604e	obj/kernel.asm	/^c010604e:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106051	obj/kernel.asm	/^c0106051:	83 e0 05             	and    $0x5,%eax$/;"	l
c0106054	obj/kernel.asm	/^c0106054:	85 c0                	test   %eax,%eax$/;"	l
c0106056	obj/kernel.asm	/^c0106056:	75 15                	jne    c010606d <do_pgfault+0xbe>$/;"	l
c0106058	obj/kernel.asm	/^c0106058:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010605b	obj/kernel.asm	/^c010605b:	68 50 c8 10 c0       	push   $0xc010c850$/;"	l
c0106060	obj/kernel.asm	/^c0106060:	e8 10 a2 ff ff       	call   c0100275 <cprintf>$/;"	l
c0106065	obj/kernel.asm	/^c0106065:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106068	obj/kernel.asm	/^c0106068:	e9 64 01 00 00       	jmp    c01061d1 <do_pgfault+0x222>$/;"	l
c010606d	obj/kernel.asm	/^c010606d:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%ebp)$/;"	l
c0106074	obj/kernel.asm	/^c0106074:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106077	obj/kernel.asm	/^c0106077:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010607a	obj/kernel.asm	/^c010607a:	83 e0 02             	and    $0x2,%eax$/;"	l
c010607d	obj/kernel.asm	/^c010607d:	85 c0                	test   %eax,%eax$/;"	l
c010607f	obj/kernel.asm	/^c010607f:	74 04                	je     c0106085 <do_pgfault+0xd6>$/;"	l
c0106081	obj/kernel.asm	/^c0106081:	83 4d f0 02          	orl    $0x2,-0x10(%ebp)$/;"	l
c0106085	obj/kernel.asm	/^c0106085:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106088	obj/kernel.asm	/^c0106088:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010608b	obj/kernel.asm	/^c010608b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010608e	obj/kernel.asm	/^c010608e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0106093	obj/kernel.asm	/^c0106093:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c0106096	obj/kernel.asm	/^c0106096:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010609d	obj/kernel.asm	/^c010609d:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c01060a4	obj/kernel.asm	/^c01060a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01060a7	obj/kernel.asm	/^c01060a7:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01060aa	obj/kernel.asm	/^c01060aa:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01060ad	obj/kernel.asm	/^c01060ad:	6a 01                	push   $0x1$/;"	l
c01060af	obj/kernel.asm	/^c01060af:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01060b2	obj/kernel.asm	/^c01060b2:	50                   	push   %eax$/;"	l
c01060b3	obj/kernel.asm	/^c01060b3:	e8 9c df ff ff       	call   c0104054 <get_pte>$/;"	l
c01060b8	obj/kernel.asm	/^c01060b8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01060bb	obj/kernel.asm	/^c01060bb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01060be	obj/kernel.asm	/^c01060be:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01060c2	obj/kernel.asm	/^c01060c2:	75 15                	jne    c01060d9 <do_pgfault+0x12a>$/;"	l
c01060c4	obj/kernel.asm	/^c01060c4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01060c7	obj/kernel.asm	/^c01060c7:	68 b3 c8 10 c0       	push   $0xc010c8b3$/;"	l
c01060cc	obj/kernel.asm	/^c01060cc:	e8 a4 a1 ff ff       	call   c0100275 <cprintf>$/;"	l
c01060d1	obj/kernel.asm	/^c01060d1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01060d4	obj/kernel.asm	/^c01060d4:	e9 f8 00 00 00       	jmp    c01061d1 <do_pgfault+0x222>$/;"	l
c01060d9	obj/kernel.asm	/^c01060d9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01060dc	obj/kernel.asm	/^c01060dc:	8b 00                	mov    (%eax),%eax$/;"	l
c01060de	obj/kernel.asm	/^c01060de:	85 c0                	test   %eax,%eax$/;"	l
c01060e0	obj/kernel.asm	/^c01060e0:	75 3b                	jne    c010611d <do_pgfault+0x16e>$/;"	l
c01060e2	obj/kernel.asm	/^c01060e2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01060e5	obj/kernel.asm	/^c01060e5:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01060e8	obj/kernel.asm	/^c01060e8:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01060eb	obj/kernel.asm	/^c01060eb:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01060ee	obj/kernel.asm	/^c01060ee:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01060f1	obj/kernel.asm	/^c01060f1:	50                   	push   %eax$/;"	l
c01060f2	obj/kernel.asm	/^c01060f2:	e8 97 e5 ff ff       	call   c010468e <pgdir_alloc_page>$/;"	l
c01060f7	obj/kernel.asm	/^c01060f7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01060fa	obj/kernel.asm	/^c01060fa:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01060fd	obj/kernel.asm	/^c01060fd:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0106101	obj/kernel.asm	/^c0106101:	75 15                	jne    c0106118 <do_pgfault+0x169>$/;"	l
c0106103	obj/kernel.asm	/^c0106103:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106106	obj/kernel.asm	/^c0106106:	68 c2 c8 10 c0       	push   $0xc010c8c2$/;"	l
c010610b	obj/kernel.asm	/^c010610b:	e8 65 a1 ff ff       	call   c0100275 <cprintf>$/;"	l
c0106110	obj/kernel.asm	/^c0106110:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106113	obj/kernel.asm	/^c0106113:	e9 b9 00 00 00       	jmp    c01061d1 <do_pgfault+0x222>$/;"	l
c0106118	obj/kernel.asm	/^c0106118:	e9 ad 00 00 00       	jmp    c01061ca <do_pgfault+0x21b>$/;"	l
c010611d	obj/kernel.asm	/^c010611d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106120	obj/kernel.asm	/^c0106120:	8b 00                	mov    (%eax),%eax$/;"	l
c0106122	obj/kernel.asm	/^c0106122:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106125	obj/kernel.asm	/^c0106125:	85 c0                	test   %eax,%eax$/;"	l
c0106127	obj/kernel.asm	/^c0106127:	75 79                	jne    c01061a2 <do_pgfault+0x1f3>$/;"	l
c0106129	obj/kernel.asm	/^c0106129:	a1 b0 bf 19 c0       	mov    0xc019bfb0,%eax$/;"	l
c010612e	obj/kernel.asm	/^c010612e:	85 c0                	test   %eax,%eax$/;"	l
c0106130	obj/kernel.asm	/^c0106130:	74 58                	je     c010618a <do_pgfault+0x1db>$/;"	l
c0106132	obj/kernel.asm	/^c0106132:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0106139	obj/kernel.asm	/^c0106139:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010613c	obj/kernel.asm	/^c010613c:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010613f	obj/kernel.asm	/^c010613f:	50                   	push   %eax$/;"	l
c0106140	obj/kernel.asm	/^c0106140:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0106143	obj/kernel.asm	/^c0106143:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106146	obj/kernel.asm	/^c0106146:	e8 6b 04 00 00       	call   c01065b6 <swap_in>$/;"	l
c010614b	obj/kernel.asm	/^c010614b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010614e	obj/kernel.asm	/^c010614e:	83 4d f0 01          	orl    $0x1,-0x10(%ebp)$/;"	l
c0106152	obj/kernel.asm	/^c0106152:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106155	obj/kernel.asm	/^c0106155:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106158	obj/kernel.asm	/^c0106158:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010615b	obj/kernel.asm	/^c010615b:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010615e	obj/kernel.asm	/^c010615e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106161	obj/kernel.asm	/^c0106161:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106164	obj/kernel.asm	/^c0106164:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0106167	obj/kernel.asm	/^c0106167:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010616a	obj/kernel.asm	/^c010616a:	52                   	push   %edx$/;"	l
c010616b	obj/kernel.asm	/^c010616b:	50                   	push   %eax$/;"	l
c010616c	obj/kernel.asm	/^c010616c:	e8 15 e4 ff ff       	call   c0104586 <page_insert>$/;"	l
c0106171	obj/kernel.asm	/^c0106171:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106174	obj/kernel.asm	/^c0106174:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106177	obj/kernel.asm	/^c0106177:	6a 01                	push   $0x1$/;"	l
c0106179	obj/kernel.asm	/^c0106179:	50                   	push   %eax$/;"	l
c010617a	obj/kernel.asm	/^c010617a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010617d	obj/kernel.asm	/^c010617d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106180	obj/kernel.asm	/^c0106180:	e8 a1 02 00 00       	call   c0106426 <swap_map_swappable>$/;"	l
c0106185	obj/kernel.asm	/^c0106185:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106188	obj/kernel.asm	/^c0106188:	eb 40                	jmp    c01061ca <do_pgfault+0x21b>$/;"	l
c010618a	obj/kernel.asm	/^c010618a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010618d	obj/kernel.asm	/^c010618d:	8b 00                	mov    (%eax),%eax$/;"	l
c010618f	obj/kernel.asm	/^c010618f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106192	obj/kernel.asm	/^c0106192:	50                   	push   %eax$/;"	l
c0106193	obj/kernel.asm	/^c0106193:	68 d8 c8 10 c0       	push   $0xc010c8d8$/;"	l
c0106198	obj/kernel.asm	/^c0106198:	e8 d8 a0 ff ff       	call   c0100275 <cprintf>$/;"	l
c010619d	obj/kernel.asm	/^c010619d:	83 c4 10             	add    $0x10,%esp$/;"	l
c01061a0	obj/kernel.asm	/^c01061a0:	eb 2f                	jmp    c01061d1 <do_pgfault+0x222>$/;"	l
c01061a2	obj/kernel.asm	/^c01061a2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01061a5	obj/kernel.asm	/^c01061a5:	8b 00                	mov    (%eax),%eax$/;"	l
c01061a7	obj/kernel.asm	/^c01061a7:	83 e0 04             	and    $0x4,%eax$/;"	l
c01061aa	obj/kernel.asm	/^c01061aa:	85 c0                	test   %eax,%eax$/;"	l
c01061ac	obj/kernel.asm	/^c01061ac:	75 1c                	jne    c01061ca <do_pgfault+0x21b>$/;"	l
c01061ae	obj/kernel.asm	/^c01061ae:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01061b1	obj/kernel.asm	/^c01061b1:	83 e0 04             	and    $0x4,%eax$/;"	l
c01061b4	obj/kernel.asm	/^c01061b4:	85 c0                	test   %eax,%eax$/;"	l
c01061b6	obj/kernel.asm	/^c01061b6:	74 12                	je     c01061ca <do_pgfault+0x21b>$/;"	l
c01061b8	obj/kernel.asm	/^c01061b8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01061bb	obj/kernel.asm	/^c01061bb:	68 00 c9 10 c0       	push   $0xc010c900$/;"	l
c01061c0	obj/kernel.asm	/^c01061c0:	e8 b0 a0 ff ff       	call   c0100275 <cprintf>$/;"	l
c01061c5	obj/kernel.asm	/^c01061c5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01061c8	obj/kernel.asm	/^c01061c8:	eb 07                	jmp    c01061d1 <do_pgfault+0x222>$/;"	l
c01061ca	obj/kernel.asm	/^c01061ca:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01061d1	obj/kernel.asm	/^c01061d1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01061d4	obj/kernel.asm	/^c01061d4:	c9                   	leave  $/;"	l
c01061d5	obj/kernel.asm	/^c01061d5:	c3                   	ret    $/;"	l
c01061d6	obj/kernel.asm	/^c01061d6 <user_mem_check>:$/;"	l
c01061d6	obj/kernel.asm	/^c01061d6:	55                   	push   %ebp$/;"	l
c01061d7	obj/kernel.asm	/^c01061d7:	89 e5                	mov    %esp,%ebp$/;"	l
c01061d9	obj/kernel.asm	/^c01061d9:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01061dc	obj/kernel.asm	/^c01061dc:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01061e0	obj/kernel.asm	/^c01061e0:	0f 84 dc 00 00 00    	je     c01062c2 <user_mem_check+0xec>$/;"	l
c01061e6	obj/kernel.asm	/^c01061e6:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c01061ed	obj/kernel.asm	/^c01061ed:	76 1c                	jbe    c010620b <user_mem_check+0x35>$/;"	l
c01061ef	obj/kernel.asm	/^c01061ef:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01061f2	obj/kernel.asm	/^c01061f2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01061f5	obj/kernel.asm	/^c01061f5:	01 d0                	add    %edx,%eax$/;"	l
c01061f7	obj/kernel.asm	/^c01061f7:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01061fa	obj/kernel.asm	/^c01061fa:	76 0f                	jbe    c010620b <user_mem_check+0x35>$/;"	l
c01061fc	obj/kernel.asm	/^c01061fc:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01061ff	obj/kernel.asm	/^c01061ff:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106202	obj/kernel.asm	/^c0106202:	01 d0                	add    %edx,%eax$/;"	l
c0106204	obj/kernel.asm	/^c0106204:	3d 00 00 00 b0       	cmp    $0xb0000000,%eax$/;"	l
c0106209	obj/kernel.asm	/^c0106209:	76 0a                	jbe    c0106215 <user_mem_check+0x3f>$/;"	l
c010620b	obj/kernel.asm	/^c010620b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106210	obj/kernel.asm	/^c0106210:	e9 df 00 00 00       	jmp    c01062f4 <user_mem_check+0x11e>$/;"	l
c0106215	obj/kernel.asm	/^c0106215:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106218	obj/kernel.asm	/^c0106218:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010621b	obj/kernel.asm	/^c010621b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010621e	obj/kernel.asm	/^c010621e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106221	obj/kernel.asm	/^c0106221:	01 d0                	add    %edx,%eax$/;"	l
c0106223	obj/kernel.asm	/^c0106223:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0106226	obj/kernel.asm	/^c0106226:	e9 84 00 00 00       	jmp    c01062af <user_mem_check+0xd9>$/;"	l
c010622b	obj/kernel.asm	/^c010622b:	ff 75 fc             	pushl  -0x4(%ebp)$/;"	l
c010622e	obj/kernel.asm	/^c010622e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106231	obj/kernel.asm	/^c0106231:	e8 22 f1 ff ff       	call   c0105358 <find_vma>$/;"	l
c0106236	obj/kernel.asm	/^c0106236:	83 c4 08             	add    $0x8,%esp$/;"	l
c0106239	obj/kernel.asm	/^c0106239:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010623c	obj/kernel.asm	/^c010623c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0106240	obj/kernel.asm	/^c0106240:	74 0b                	je     c010624d <user_mem_check+0x77>$/;"	l
c0106242	obj/kernel.asm	/^c0106242:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106245	obj/kernel.asm	/^c0106245:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106248	obj/kernel.asm	/^c0106248:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c010624b	obj/kernel.asm	/^c010624b:	76 0a                	jbe    c0106257 <user_mem_check+0x81>$/;"	l
c010624d	obj/kernel.asm	/^c010624d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106252	obj/kernel.asm	/^c0106252:	e9 9d 00 00 00       	jmp    c01062f4 <user_mem_check+0x11e>$/;"	l
c0106257	obj/kernel.asm	/^c0106257:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010625a	obj/kernel.asm	/^c010625a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010625d	obj/kernel.asm	/^c010625d:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0106261	obj/kernel.asm	/^c0106261:	74 07                	je     c010626a <user_mem_check+0x94>$/;"	l
c0106263	obj/kernel.asm	/^c0106263:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
c0106268	obj/kernel.asm	/^c0106268:	eb 05                	jmp    c010626f <user_mem_check+0x99>$/;"	l
c010626a	obj/kernel.asm	/^c010626a:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c010626f	obj/kernel.asm	/^c010626f:	21 d0                	and    %edx,%eax$/;"	l
c0106271	obj/kernel.asm	/^c0106271:	85 c0                	test   %eax,%eax$/;"	l
c0106273	obj/kernel.asm	/^c0106273:	75 07                	jne    c010627c <user_mem_check+0xa6>$/;"	l
c0106275	obj/kernel.asm	/^c0106275:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010627a	obj/kernel.asm	/^c010627a:	eb 78                	jmp    c01062f4 <user_mem_check+0x11e>$/;"	l
c010627c	obj/kernel.asm	/^c010627c:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0106280	obj/kernel.asm	/^c0106280:	74 24                	je     c01062a6 <user_mem_check+0xd0>$/;"	l
c0106282	obj/kernel.asm	/^c0106282:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106285	obj/kernel.asm	/^c0106285:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106288	obj/kernel.asm	/^c0106288:	83 e0 08             	and    $0x8,%eax$/;"	l
c010628b	obj/kernel.asm	/^c010628b:	85 c0                	test   %eax,%eax$/;"	l
c010628d	obj/kernel.asm	/^c010628d:	74 17                	je     c01062a6 <user_mem_check+0xd0>$/;"	l
c010628f	obj/kernel.asm	/^c010628f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106292	obj/kernel.asm	/^c0106292:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106295	obj/kernel.asm	/^c0106295:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c010629a	obj/kernel.asm	/^c010629a:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c010629d	obj/kernel.asm	/^c010629d:	76 07                	jbe    c01062a6 <user_mem_check+0xd0>$/;"	l
c010629f	obj/kernel.asm	/^c010629f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01062a4	obj/kernel.asm	/^c01062a4:	eb 4e                	jmp    c01062f4 <user_mem_check+0x11e>$/;"	l
c01062a6	obj/kernel.asm	/^c01062a6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01062a9	obj/kernel.asm	/^c01062a9:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01062ac	obj/kernel.asm	/^c01062ac:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01062af	obj/kernel.asm	/^c01062af:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01062b2	obj/kernel.asm	/^c01062b2:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c01062b5	obj/kernel.asm	/^c01062b5:	0f 82 70 ff ff ff    	jb     c010622b <user_mem_check+0x55>$/;"	l
c01062bb	obj/kernel.asm	/^c01062bb:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01062c0	obj/kernel.asm	/^c01062c0:	eb 32                	jmp    c01062f4 <user_mem_check+0x11e>$/;"	l
c01062c2	obj/kernel.asm	/^c01062c2:	81 7d 0c ff ff ff bf 	cmpl   $0xbfffffff,0xc(%ebp)$/;"	l
c01062c9	obj/kernel.asm	/^c01062c9:	76 23                	jbe    c01062ee <user_mem_check+0x118>$/;"	l
c01062cb	obj/kernel.asm	/^c01062cb:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01062ce	obj/kernel.asm	/^c01062ce:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01062d1	obj/kernel.asm	/^c01062d1:	01 d0                	add    %edx,%eax$/;"	l
c01062d3	obj/kernel.asm	/^c01062d3:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01062d6	obj/kernel.asm	/^c01062d6:	76 16                	jbe    c01062ee <user_mem_check+0x118>$/;"	l
c01062d8	obj/kernel.asm	/^c01062d8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01062db	obj/kernel.asm	/^c01062db:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01062de	obj/kernel.asm	/^c01062de:	01 d0                	add    %edx,%eax$/;"	l
c01062e0	obj/kernel.asm	/^c01062e0:	3d 00 00 00 f8       	cmp    $0xf8000000,%eax$/;"	l
c01062e5	obj/kernel.asm	/^c01062e5:	77 07                	ja     c01062ee <user_mem_check+0x118>$/;"	l
c01062e7	obj/kernel.asm	/^c01062e7:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01062ec	obj/kernel.asm	/^c01062ec:	eb 05                	jmp    c01062f3 <user_mem_check+0x11d>$/;"	l
c01062ee	obj/kernel.asm	/^c01062ee:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01062f3	obj/kernel.asm	/^c01062f3:	90                   	nop$/;"	l
c01062f4	obj/kernel.asm	/^c01062f4:	c9                   	leave  $/;"	l
c01062f5	obj/kernel.asm	/^c01062f5:	c3                   	ret    $/;"	l
c01062f6	obj/kernel.asm	/^c01062f6 <pa2page>:$/;"	l
c01062f6	obj/kernel.asm	/^c01062f6:	55                   	push   %ebp$/;"	l
c01062f7	obj/kernel.asm	/^c01062f7:	89 e5                	mov    %esp,%ebp$/;"	l
c01062f9	obj/kernel.asm	/^c01062f9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01062fc	obj/kernel.asm	/^c01062fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01062ff	obj/kernel.asm	/^c01062ff:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106302	obj/kernel.asm	/^c0106302:	89 c2                	mov    %eax,%edx$/;"	l
c0106304	obj/kernel.asm	/^c0106304:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c0106309	obj/kernel.asm	/^c0106309:	39 c2                	cmp    %eax,%edx$/;"	l
c010630b	obj/kernel.asm	/^c010630b:	72 14                	jb     c0106321 <pa2page+0x2b>$/;"	l
c010630d	obj/kernel.asm	/^c010630d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106310	obj/kernel.asm	/^c0106310:	68 54 c9 10 c0       	push   $0xc010c954$/;"	l
c0106315	obj/kernel.asm	/^c0106315:	6a 5e                	push   $0x5e$/;"	l
c0106317	obj/kernel.asm	/^c0106317:	68 73 c9 10 c0       	push   $0xc010c973$/;"	l
c010631c	obj/kernel.asm	/^c010631c:	e8 b9 a0 ff ff       	call   c01003da <__panic>$/;"	l
c0106321	obj/kernel.asm	/^c0106321:	a1 98 e0 19 c0       	mov    0xc019e098,%eax$/;"	l
c0106326	obj/kernel.asm	/^c0106326:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106329	obj/kernel.asm	/^c0106329:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c010632c	obj/kernel.asm	/^c010632c:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c010632f	obj/kernel.asm	/^c010632f:	01 d0                	add    %edx,%eax$/;"	l
c0106331	obj/kernel.asm	/^c0106331:	c9                   	leave  $/;"	l
c0106332	obj/kernel.asm	/^c0106332:	c3                   	ret    $/;"	l
c0106333	obj/kernel.asm	/^c0106333 <pte2page>:$/;"	l
c0106333	obj/kernel.asm	/^c0106333:	55                   	push   %ebp$/;"	l
c0106334	obj/kernel.asm	/^c0106334:	89 e5                	mov    %esp,%ebp$/;"	l
c0106336	obj/kernel.asm	/^c0106336:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106339	obj/kernel.asm	/^c0106339:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010633c	obj/kernel.asm	/^c010633c:	83 e0 01             	and    $0x1,%eax$/;"	l
c010633f	obj/kernel.asm	/^c010633f:	85 c0                	test   %eax,%eax$/;"	l
c0106341	obj/kernel.asm	/^c0106341:	75 14                	jne    c0106357 <pte2page+0x24>$/;"	l
c0106343	obj/kernel.asm	/^c0106343:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106346	obj/kernel.asm	/^c0106346:	68 84 c9 10 c0       	push   $0xc010c984$/;"	l
c010634b	obj/kernel.asm	/^c010634b:	6a 70                	push   $0x70$/;"	l
c010634d	obj/kernel.asm	/^c010634d:	68 73 c9 10 c0       	push   $0xc010c973$/;"	l
c0106352	obj/kernel.asm	/^c0106352:	e8 83 a0 ff ff       	call   c01003da <__panic>$/;"	l
c0106357	obj/kernel.asm	/^c0106357:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010635a	obj/kernel.asm	/^c010635a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010635f	obj/kernel.asm	/^c010635f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106362	obj/kernel.asm	/^c0106362:	50                   	push   %eax$/;"	l
c0106363	obj/kernel.asm	/^c0106363:	e8 8e ff ff ff       	call   c01062f6 <pa2page>$/;"	l
c0106368	obj/kernel.asm	/^c0106368:	83 c4 10             	add    $0x10,%esp$/;"	l
c010636b	obj/kernel.asm	/^c010636b:	c9                   	leave  $/;"	l
c010636c	obj/kernel.asm	/^c010636c:	c3                   	ret    $/;"	l
c010636d	obj/kernel.asm	/^c010636d <swap_init>:$/;"	l
c010636d	obj/kernel.asm	/^c010636d:	55                   	push   %ebp$/;"	l
c010636e	obj/kernel.asm	/^c010636e:	89 e5                	mov    %esp,%ebp$/;"	l
c0106370	obj/kernel.asm	/^c0106370:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106373	obj/kernel.asm	/^c0106373:	e8 34 26 00 00       	call   c01089ac <swapfs_init>$/;"	l
c0106378	obj/kernel.asm	/^c0106378:	a1 3c e1 19 c0       	mov    0xc019e13c,%eax$/;"	l
c010637d	obj/kernel.asm	/^c010637d:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
c0106382	obj/kernel.asm	/^c0106382:	76 0c                	jbe    c0106390 <swap_init+0x23>$/;"	l
c0106384	obj/kernel.asm	/^c0106384:	a1 3c e1 19 c0       	mov    0xc019e13c,%eax$/;"	l
c0106389	obj/kernel.asm	/^c0106389:	3d ff ff ff 00       	cmp    $0xffffff,%eax$/;"	l
c010638e	obj/kernel.asm	/^c010638e:	76 17                	jbe    c01063a7 <swap_init+0x3a>$/;"	l
c0106390	obj/kernel.asm	/^c0106390:	a1 3c e1 19 c0       	mov    0xc019e13c,%eax$/;"	l
c0106395	obj/kernel.asm	/^c0106395:	50                   	push   %eax$/;"	l
c0106396	obj/kernel.asm	/^c0106396:	68 a5 c9 10 c0       	push   $0xc010c9a5$/;"	l
c010639b	obj/kernel.asm	/^c010639b:	6a 27                	push   $0x27$/;"	l
c010639d	obj/kernel.asm	/^c010639d:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c01063a2	obj/kernel.asm	/^c01063a2:	e8 33 a0 ff ff       	call   c01003da <__panic>$/;"	l
c01063a7	obj/kernel.asm	/^c01063a7:	c7 05 b8 bf 19 c0 c0 	movl   $0xc0129ac0,0xc019bfb8$/;"	l
c01063ae	obj/kernel.asm	/^c01063ae:	9a 12 c0 $/;"	l
c01063b1	obj/kernel.asm	/^c01063b1:	a1 b8 bf 19 c0       	mov    0xc019bfb8,%eax$/;"	l
c01063b6	obj/kernel.asm	/^c01063b6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01063b9	obj/kernel.asm	/^c01063b9:	ff d0                	call   *%eax$/;"	l
c01063bb	obj/kernel.asm	/^c01063bb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01063be	obj/kernel.asm	/^c01063be:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01063c2	obj/kernel.asm	/^c01063c2:	75 27                	jne    c01063eb <swap_init+0x7e>$/;"	l
c01063c4	obj/kernel.asm	/^c01063c4:	c7 05 b0 bf 19 c0 01 	movl   $0x1,0xc019bfb0$/;"	l
c01063cb	obj/kernel.asm	/^c01063cb:	00 00 00 $/;"	l
c01063ce	obj/kernel.asm	/^c01063ce:	a1 b8 bf 19 c0       	mov    0xc019bfb8,%eax$/;"	l
c01063d3	obj/kernel.asm	/^c01063d3:	8b 00                	mov    (%eax),%eax$/;"	l
c01063d5	obj/kernel.asm	/^c01063d5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01063d8	obj/kernel.asm	/^c01063d8:	50                   	push   %eax$/;"	l
c01063d9	obj/kernel.asm	/^c01063d9:	68 cf c9 10 c0       	push   $0xc010c9cf$/;"	l
c01063de	obj/kernel.asm	/^c01063de:	e8 92 9e ff ff       	call   c0100275 <cprintf>$/;"	l
c01063e3	obj/kernel.asm	/^c01063e3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01063e6	obj/kernel.asm	/^c01063e6:	e8 f6 03 00 00       	call   c01067e1 <check_swap>$/;"	l
c01063eb	obj/kernel.asm	/^c01063eb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01063ee	obj/kernel.asm	/^c01063ee:	c9                   	leave  $/;"	l
c01063ef	obj/kernel.asm	/^c01063ef:	c3                   	ret    $/;"	l
c01063f0	obj/kernel.asm	/^c01063f0 <swap_init_mm>:$/;"	l
c01063f0	obj/kernel.asm	/^c01063f0:	55                   	push   %ebp$/;"	l
c01063f1	obj/kernel.asm	/^c01063f1:	89 e5                	mov    %esp,%ebp$/;"	l
c01063f3	obj/kernel.asm	/^c01063f3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01063f6	obj/kernel.asm	/^c01063f6:	a1 b8 bf 19 c0       	mov    0xc019bfb8,%eax$/;"	l
c01063fb	obj/kernel.asm	/^c01063fb:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01063fe	obj/kernel.asm	/^c01063fe:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106401	obj/kernel.asm	/^c0106401:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106404	obj/kernel.asm	/^c0106404:	ff d0                	call   *%eax$/;"	l
c0106406	obj/kernel.asm	/^c0106406:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106409	obj/kernel.asm	/^c0106409:	c9                   	leave  $/;"	l
c010640a	obj/kernel.asm	/^c010640a:	c3                   	ret    $/;"	l
c010640b	obj/kernel.asm	/^c010640b <swap_tick_event>:$/;"	l
c010640b	obj/kernel.asm	/^c010640b:	55                   	push   %ebp$/;"	l
c010640c	obj/kernel.asm	/^c010640c:	89 e5                	mov    %esp,%ebp$/;"	l
c010640e	obj/kernel.asm	/^c010640e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106411	obj/kernel.asm	/^c0106411:	a1 b8 bf 19 c0       	mov    0xc019bfb8,%eax$/;"	l
c0106416	obj/kernel.asm	/^c0106416:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106419	obj/kernel.asm	/^c0106419:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010641c	obj/kernel.asm	/^c010641c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010641f	obj/kernel.asm	/^c010641f:	ff d0                	call   *%eax$/;"	l
c0106421	obj/kernel.asm	/^c0106421:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106424	obj/kernel.asm	/^c0106424:	c9                   	leave  $/;"	l
c0106425	obj/kernel.asm	/^c0106425:	c3                   	ret    $/;"	l
c0106426	obj/kernel.asm	/^c0106426 <swap_map_swappable>:$/;"	l
c0106426	obj/kernel.asm	/^c0106426:	55                   	push   %ebp$/;"	l
c0106427	obj/kernel.asm	/^c0106427:	89 e5                	mov    %esp,%ebp$/;"	l
c0106429	obj/kernel.asm	/^c0106429:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010642c	obj/kernel.asm	/^c010642c:	a1 b8 bf 19 c0       	mov    0xc019bfb8,%eax$/;"	l
c0106431	obj/kernel.asm	/^c0106431:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0106434	obj/kernel.asm	/^c0106434:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0106437	obj/kernel.asm	/^c0106437:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010643a	obj/kernel.asm	/^c010643a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010643d	obj/kernel.asm	/^c010643d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106440	obj/kernel.asm	/^c0106440:	ff d0                	call   *%eax$/;"	l
c0106442	obj/kernel.asm	/^c0106442:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106445	obj/kernel.asm	/^c0106445:	c9                   	leave  $/;"	l
c0106446	obj/kernel.asm	/^c0106446:	c3                   	ret    $/;"	l
c0106447	obj/kernel.asm	/^c0106447 <swap_set_unswappable>:$/;"	l
c0106447	obj/kernel.asm	/^c0106447:	55                   	push   %ebp$/;"	l
c0106448	obj/kernel.asm	/^c0106448:	89 e5                	mov    %esp,%ebp$/;"	l
c010644a	obj/kernel.asm	/^c010644a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010644d	obj/kernel.asm	/^c010644d:	a1 b8 bf 19 c0       	mov    0xc019bfb8,%eax$/;"	l
c0106452	obj/kernel.asm	/^c0106452:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0106455	obj/kernel.asm	/^c0106455:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106458	obj/kernel.asm	/^c0106458:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010645b	obj/kernel.asm	/^c010645b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010645e	obj/kernel.asm	/^c010645e:	ff d0                	call   *%eax$/;"	l
c0106460	obj/kernel.asm	/^c0106460:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106463	obj/kernel.asm	/^c0106463:	c9                   	leave  $/;"	l
c0106464	obj/kernel.asm	/^c0106464:	c3                   	ret    $/;"	l
c0106465	obj/kernel.asm	/^c0106465 <swap_out>:$/;"	l
c0106465	obj/kernel.asm	/^c0106465:	55                   	push   %ebp$/;"	l
c0106466	obj/kernel.asm	/^c0106466:	89 e5                	mov    %esp,%ebp$/;"	l
c0106468	obj/kernel.asm	/^c0106468:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010646b	obj/kernel.asm	/^c010646b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0106472	obj/kernel.asm	/^c0106472:	e9 2e 01 00 00       	jmp    c01065a5 <swap_out+0x140>$/;"	l
c0106477	obj/kernel.asm	/^c0106477:	a1 b8 bf 19 c0       	mov    0xc019bfb8,%eax$/;"	l
c010647c	obj/kernel.asm	/^c010647c:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010647f	obj/kernel.asm	/^c010647f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106482	obj/kernel.asm	/^c0106482:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0106485	obj/kernel.asm	/^c0106485:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c0106488	obj/kernel.asm	/^c0106488:	52                   	push   %edx$/;"	l
c0106489	obj/kernel.asm	/^c0106489:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010648c	obj/kernel.asm	/^c010648c:	ff d0                	call   *%eax$/;"	l
c010648e	obj/kernel.asm	/^c010648e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106491	obj/kernel.asm	/^c0106491:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106494	obj/kernel.asm	/^c0106494:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0106498	obj/kernel.asm	/^c0106498:	74 18                	je     c01064b2 <swap_out+0x4d>$/;"	l
c010649a	obj/kernel.asm	/^c010649a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010649d	obj/kernel.asm	/^c010649d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01064a0	obj/kernel.asm	/^c01064a0:	68 e4 c9 10 c0       	push   $0xc010c9e4$/;"	l
c01064a5	obj/kernel.asm	/^c01064a5:	e8 cb 9d ff ff       	call   c0100275 <cprintf>$/;"	l
c01064aa	obj/kernel.asm	/^c01064aa:	83 c4 10             	add    $0x10,%esp$/;"	l
c01064ad	obj/kernel.asm	/^c01064ad:	e9 ff 00 00 00       	jmp    c01065b1 <swap_out+0x14c>$/;"	l
c01064b2	obj/kernel.asm	/^c01064b2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01064b5	obj/kernel.asm	/^c01064b5:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01064b8	obj/kernel.asm	/^c01064b8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01064bb	obj/kernel.asm	/^c01064bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01064be	obj/kernel.asm	/^c01064be:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01064c1	obj/kernel.asm	/^c01064c1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01064c4	obj/kernel.asm	/^c01064c4:	6a 00                	push   $0x0$/;"	l
c01064c6	obj/kernel.asm	/^c01064c6:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01064c9	obj/kernel.asm	/^c01064c9:	50                   	push   %eax$/;"	l
c01064ca	obj/kernel.asm	/^c01064ca:	e8 85 db ff ff       	call   c0104054 <get_pte>$/;"	l
c01064cf	obj/kernel.asm	/^c01064cf:	83 c4 10             	add    $0x10,%esp$/;"	l
c01064d2	obj/kernel.asm	/^c01064d2:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01064d5	obj/kernel.asm	/^c01064d5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01064d8	obj/kernel.asm	/^c01064d8:	8b 00                	mov    (%eax),%eax$/;"	l
c01064da	obj/kernel.asm	/^c01064da:	83 e0 01             	and    $0x1,%eax$/;"	l
c01064dd	obj/kernel.asm	/^c01064dd:	85 c0                	test   %eax,%eax$/;"	l
c01064df	obj/kernel.asm	/^c01064df:	75 16                	jne    c01064f7 <swap_out+0x92>$/;"	l
c01064e1	obj/kernel.asm	/^c01064e1:	68 11 ca 10 c0       	push   $0xc010ca11$/;"	l
c01064e6	obj/kernel.asm	/^c01064e6:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c01064eb	obj/kernel.asm	/^c01064eb:	6a 67                	push   $0x67$/;"	l
c01064ed	obj/kernel.asm	/^c01064ed:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c01064f2	obj/kernel.asm	/^c01064f2:	e8 e3 9e ff ff       	call   c01003da <__panic>$/;"	l
c01064f7	obj/kernel.asm	/^c01064f7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01064fa	obj/kernel.asm	/^c01064fa:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01064fd	obj/kernel.asm	/^c01064fd:	8b 52 1c             	mov    0x1c(%edx),%edx$/;"	l
c0106500	obj/kernel.asm	/^c0106500:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0106503	obj/kernel.asm	/^c0106503:	83 c2 01             	add    $0x1,%edx$/;"	l
c0106506	obj/kernel.asm	/^c0106506:	c1 e2 08             	shl    $0x8,%edx$/;"	l
c0106509	obj/kernel.asm	/^c0106509:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010650c	obj/kernel.asm	/^c010650c:	50                   	push   %eax$/;"	l
c010650d	obj/kernel.asm	/^c010650d:	52                   	push   %edx$/;"	l
c010650e	obj/kernel.asm	/^c010650e:	e8 34 25 00 00       	call   c0108a47 <swapfs_write>$/;"	l
c0106513	obj/kernel.asm	/^c0106513:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106516	obj/kernel.asm	/^c0106516:	85 c0                	test   %eax,%eax$/;"	l
c0106518	obj/kernel.asm	/^c0106518:	74 2b                	je     c0106545 <swap_out+0xe0>$/;"	l
c010651a	obj/kernel.asm	/^c010651a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010651d	obj/kernel.asm	/^c010651d:	68 3b ca 10 c0       	push   $0xc010ca3b$/;"	l
c0106522	obj/kernel.asm	/^c0106522:	e8 4e 9d ff ff       	call   c0100275 <cprintf>$/;"	l
c0106527	obj/kernel.asm	/^c0106527:	83 c4 10             	add    $0x10,%esp$/;"	l
c010652a	obj/kernel.asm	/^c010652a:	a1 b8 bf 19 c0       	mov    0xc019bfb8,%eax$/;"	l
c010652f	obj/kernel.asm	/^c010652f:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0106532	obj/kernel.asm	/^c0106532:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0106535	obj/kernel.asm	/^c0106535:	6a 00                	push   $0x0$/;"	l
c0106537	obj/kernel.asm	/^c0106537:	52                   	push   %edx$/;"	l
c0106538	obj/kernel.asm	/^c0106538:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010653b	obj/kernel.asm	/^c010653b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010653e	obj/kernel.asm	/^c010653e:	ff d0                	call   *%eax$/;"	l
c0106540	obj/kernel.asm	/^c0106540:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106543	obj/kernel.asm	/^c0106543:	eb 5c                	jmp    c01065a1 <swap_out+0x13c>$/;"	l
c0106545	obj/kernel.asm	/^c0106545:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106548	obj/kernel.asm	/^c0106548:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010654b	obj/kernel.asm	/^c010654b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010654e	obj/kernel.asm	/^c010654e:	83 c0 01             	add    $0x1,%eax$/;"	l
c0106551	obj/kernel.asm	/^c0106551:	50                   	push   %eax$/;"	l
c0106552	obj/kernel.asm	/^c0106552:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0106555	obj/kernel.asm	/^c0106555:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106558	obj/kernel.asm	/^c0106558:	68 54 ca 10 c0       	push   $0xc010ca54$/;"	l
c010655d	obj/kernel.asm	/^c010655d:	e8 13 9d ff ff       	call   c0100275 <cprintf>$/;"	l
c0106562	obj/kernel.asm	/^c0106562:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106565	obj/kernel.asm	/^c0106565:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106568	obj/kernel.asm	/^c0106568:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010656b	obj/kernel.asm	/^c010656b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010656e	obj/kernel.asm	/^c010656e:	83 c0 01             	add    $0x1,%eax$/;"	l
c0106571	obj/kernel.asm	/^c0106571:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c0106574	obj/kernel.asm	/^c0106574:	89 c2                	mov    %eax,%edx$/;"	l
c0106576	obj/kernel.asm	/^c0106576:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106579	obj/kernel.asm	/^c0106579:	89 10                	mov    %edx,(%eax)$/;"	l
c010657b	obj/kernel.asm	/^c010657b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010657e	obj/kernel.asm	/^c010657e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106581	obj/kernel.asm	/^c0106581:	6a 01                	push   $0x1$/;"	l
c0106583	obj/kernel.asm	/^c0106583:	50                   	push   %eax$/;"	l
c0106584	obj/kernel.asm	/^c0106584:	e8 4e d4 ff ff       	call   c01039d7 <free_pages>$/;"	l
c0106589	obj/kernel.asm	/^c0106589:	83 c4 10             	add    $0x10,%esp$/;"	l
c010658c	obj/kernel.asm	/^c010658c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010658f	obj/kernel.asm	/^c010658f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106592	obj/kernel.asm	/^c0106592:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106595	obj/kernel.asm	/^c0106595:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0106598	obj/kernel.asm	/^c0106598:	50                   	push   %eax$/;"	l
c0106599	obj/kernel.asm	/^c0106599:	e8 a1 e0 ff ff       	call   c010463f <tlb_invalidate>$/;"	l
c010659e	obj/kernel.asm	/^c010659e:	83 c4 10             	add    $0x10,%esp$/;"	l
c01065a1	obj/kernel.asm	/^c01065a1:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01065a5	obj/kernel.asm	/^c01065a5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01065a8	obj/kernel.asm	/^c01065a8:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01065ab	obj/kernel.asm	/^c01065ab:	0f 85 c6 fe ff ff    	jne    c0106477 <swap_out+0x12>$/;"	l
c01065b1	obj/kernel.asm	/^c01065b1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01065b4	obj/kernel.asm	/^c01065b4:	c9                   	leave  $/;"	l
c01065b5	obj/kernel.asm	/^c01065b5:	c3                   	ret    $/;"	l
c01065b6	obj/kernel.asm	/^c01065b6 <swap_in>:$/;"	l
c01065b6	obj/kernel.asm	/^c01065b6:	55                   	push   %ebp$/;"	l
c01065b7	obj/kernel.asm	/^c01065b7:	89 e5                	mov    %esp,%ebp$/;"	l
c01065b9	obj/kernel.asm	/^c01065b9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01065bc	obj/kernel.asm	/^c01065bc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01065bf	obj/kernel.asm	/^c01065bf:	6a 01                	push   $0x1$/;"	l
c01065c1	obj/kernel.asm	/^c01065c1:	e8 a5 d3 ff ff       	call   c010396b <alloc_pages>$/;"	l
c01065c6	obj/kernel.asm	/^c01065c6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01065c9	obj/kernel.asm	/^c01065c9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01065cc	obj/kernel.asm	/^c01065cc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01065d0	obj/kernel.asm	/^c01065d0:	75 16                	jne    c01065e8 <swap_in+0x32>$/;"	l
c01065d2	obj/kernel.asm	/^c01065d2:	68 94 ca 10 c0       	push   $0xc010ca94$/;"	l
c01065d7	obj/kernel.asm	/^c01065d7:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c01065dc	obj/kernel.asm	/^c01065dc:	6a 7d                	push   $0x7d$/;"	l
c01065de	obj/kernel.asm	/^c01065de:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c01065e3	obj/kernel.asm	/^c01065e3:	e8 f2 9d ff ff       	call   c01003da <__panic>$/;"	l
c01065e8	obj/kernel.asm	/^c01065e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01065eb	obj/kernel.asm	/^c01065eb:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01065ee	obj/kernel.asm	/^c01065ee:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01065f1	obj/kernel.asm	/^c01065f1:	6a 00                	push   $0x0$/;"	l
c01065f3	obj/kernel.asm	/^c01065f3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01065f6	obj/kernel.asm	/^c01065f6:	50                   	push   %eax$/;"	l
c01065f7	obj/kernel.asm	/^c01065f7:	e8 58 da ff ff       	call   c0104054 <get_pte>$/;"	l
c01065fc	obj/kernel.asm	/^c01065fc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01065ff	obj/kernel.asm	/^c01065ff:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106602	obj/kernel.asm	/^c0106602:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106605	obj/kernel.asm	/^c0106605:	8b 00                	mov    (%eax),%eax$/;"	l
c0106607	obj/kernel.asm	/^c0106607:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010660a	obj/kernel.asm	/^c010660a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010660d	obj/kernel.asm	/^c010660d:	50                   	push   %eax$/;"	l
c010660e	obj/kernel.asm	/^c010660e:	e8 db 23 00 00       	call   c01089ee <swapfs_read>$/;"	l
c0106613	obj/kernel.asm	/^c0106613:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106616	obj/kernel.asm	/^c0106616:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106619	obj/kernel.asm	/^c0106619:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010661d	obj/kernel.asm	/^c010661d:	74 1f                	je     c010663e <swap_in+0x88>$/;"	l
c010661f	obj/kernel.asm	/^c010661f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0106623	obj/kernel.asm	/^c0106623:	75 19                	jne    c010663e <swap_in+0x88>$/;"	l
c0106625	obj/kernel.asm	/^c0106625:	68 a1 ca 10 c0       	push   $0xc010caa1$/;"	l
c010662a	obj/kernel.asm	/^c010662a:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c010662f	obj/kernel.asm	/^c010662f:	68 85 00 00 00       	push   $0x85$/;"	l
c0106634	obj/kernel.asm	/^c0106634:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c0106639	obj/kernel.asm	/^c0106639:	e8 9c 9d ff ff       	call   c01003da <__panic>$/;"	l
c010663e	obj/kernel.asm	/^c010663e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106641	obj/kernel.asm	/^c0106641:	8b 00                	mov    (%eax),%eax$/;"	l
c0106643	obj/kernel.asm	/^c0106643:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0106646	obj/kernel.asm	/^c0106646:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106649	obj/kernel.asm	/^c0106649:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010664c	obj/kernel.asm	/^c010664c:	50                   	push   %eax$/;"	l
c010664d	obj/kernel.asm	/^c010664d:	68 a8 ca 10 c0       	push   $0xc010caa8$/;"	l
c0106652	obj/kernel.asm	/^c0106652:	e8 1e 9c ff ff       	call   c0100275 <cprintf>$/;"	l
c0106657	obj/kernel.asm	/^c0106657:	83 c4 10             	add    $0x10,%esp$/;"	l
c010665a	obj/kernel.asm	/^c010665a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010665d	obj/kernel.asm	/^c010665d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0106660	obj/kernel.asm	/^c0106660:	89 10                	mov    %edx,(%eax)$/;"	l
c0106662	obj/kernel.asm	/^c0106662:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106667	obj/kernel.asm	/^c0106667:	c9                   	leave  $/;"	l
c0106668	obj/kernel.asm	/^c0106668:	c3                   	ret    $/;"	l
c0106669	obj/kernel.asm	/^c0106669 <check_content_set>:$/;"	l
c0106669	obj/kernel.asm	/^c0106669:	55                   	push   %ebp$/;"	l
c010666a	obj/kernel.asm	/^c010666a:	89 e5                	mov    %esp,%ebp$/;"	l
c010666c	obj/kernel.asm	/^c010666c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010666f	obj/kernel.asm	/^c010666f:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0106674	obj/kernel.asm	/^c0106674:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c0106677	obj/kernel.asm	/^c0106677:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c010667c	obj/kernel.asm	/^c010667c:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010667f	obj/kernel.asm	/^c010667f:	74 19                	je     c010669a <check_content_set+0x31>$/;"	l
c0106681	obj/kernel.asm	/^c0106681:	68 e6 ca 10 c0       	push   $0xc010cae6$/;"	l
c0106686	obj/kernel.asm	/^c0106686:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c010668b	obj/kernel.asm	/^c010668b:	68 92 00 00 00       	push   $0x92$/;"	l
c0106690	obj/kernel.asm	/^c0106690:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c0106695	obj/kernel.asm	/^c0106695:	e8 40 9d ff ff       	call   c01003da <__panic>$/;"	l
c010669a	obj/kernel.asm	/^c010669a:	b8 10 10 00 00       	mov    $0x1010,%eax$/;"	l
c010669f	obj/kernel.asm	/^c010669f:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c01066a2	obj/kernel.asm	/^c01066a2:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c01066a7	obj/kernel.asm	/^c01066a7:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01066aa	obj/kernel.asm	/^c01066aa:	74 19                	je     c01066c5 <check_content_set+0x5c>$/;"	l
c01066ac	obj/kernel.asm	/^c01066ac:	68 e6 ca 10 c0       	push   $0xc010cae6$/;"	l
c01066b1	obj/kernel.asm	/^c01066b1:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c01066b6	obj/kernel.asm	/^c01066b6:	68 94 00 00 00       	push   $0x94$/;"	l
c01066bb	obj/kernel.asm	/^c01066bb:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c01066c0	obj/kernel.asm	/^c01066c0:	e8 15 9d ff ff       	call   c01003da <__panic>$/;"	l
c01066c5	obj/kernel.asm	/^c01066c5:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c01066ca	obj/kernel.asm	/^c01066ca:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c01066cd	obj/kernel.asm	/^c01066cd:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c01066d2	obj/kernel.asm	/^c01066d2:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01066d5	obj/kernel.asm	/^c01066d5:	74 19                	je     c01066f0 <check_content_set+0x87>$/;"	l
c01066d7	obj/kernel.asm	/^c01066d7:	68 f5 ca 10 c0       	push   $0xc010caf5$/;"	l
c01066dc	obj/kernel.asm	/^c01066dc:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c01066e1	obj/kernel.asm	/^c01066e1:	68 96 00 00 00       	push   $0x96$/;"	l
c01066e6	obj/kernel.asm	/^c01066e6:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c01066eb	obj/kernel.asm	/^c01066eb:	e8 ea 9c ff ff       	call   c01003da <__panic>$/;"	l
c01066f0	obj/kernel.asm	/^c01066f0:	b8 10 20 00 00       	mov    $0x2010,%eax$/;"	l
c01066f5	obj/kernel.asm	/^c01066f5:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c01066f8	obj/kernel.asm	/^c01066f8:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c01066fd	obj/kernel.asm	/^c01066fd:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0106700	obj/kernel.asm	/^c0106700:	74 19                	je     c010671b <check_content_set+0xb2>$/;"	l
c0106702	obj/kernel.asm	/^c0106702:	68 f5 ca 10 c0       	push   $0xc010caf5$/;"	l
c0106707	obj/kernel.asm	/^c0106707:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c010670c	obj/kernel.asm	/^c010670c:	68 98 00 00 00       	push   $0x98$/;"	l
c0106711	obj/kernel.asm	/^c0106711:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c0106716	obj/kernel.asm	/^c0106716:	e8 bf 9c ff ff       	call   c01003da <__panic>$/;"	l
c010671b	obj/kernel.asm	/^c010671b:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c0106720	obj/kernel.asm	/^c0106720:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0106723	obj/kernel.asm	/^c0106723:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c0106728	obj/kernel.asm	/^c0106728:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010672b	obj/kernel.asm	/^c010672b:	74 19                	je     c0106746 <check_content_set+0xdd>$/;"	l
c010672d	obj/kernel.asm	/^c010672d:	68 04 cb 10 c0       	push   $0xc010cb04$/;"	l
c0106732	obj/kernel.asm	/^c0106732:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c0106737	obj/kernel.asm	/^c0106737:	68 9a 00 00 00       	push   $0x9a$/;"	l
c010673c	obj/kernel.asm	/^c010673c:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c0106741	obj/kernel.asm	/^c0106741:	e8 94 9c ff ff       	call   c01003da <__panic>$/;"	l
c0106746	obj/kernel.asm	/^c0106746:	b8 10 30 00 00       	mov    $0x3010,%eax$/;"	l
c010674b	obj/kernel.asm	/^c010674b:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c010674e	obj/kernel.asm	/^c010674e:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c0106753	obj/kernel.asm	/^c0106753:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0106756	obj/kernel.asm	/^c0106756:	74 19                	je     c0106771 <check_content_set+0x108>$/;"	l
c0106758	obj/kernel.asm	/^c0106758:	68 04 cb 10 c0       	push   $0xc010cb04$/;"	l
c010675d	obj/kernel.asm	/^c010675d:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c0106762	obj/kernel.asm	/^c0106762:	68 9c 00 00 00       	push   $0x9c$/;"	l
c0106767	obj/kernel.asm	/^c0106767:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c010676c	obj/kernel.asm	/^c010676c:	e8 69 9c ff ff       	call   c01003da <__panic>$/;"	l
c0106771	obj/kernel.asm	/^c0106771:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0106776	obj/kernel.asm	/^c0106776:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0106779	obj/kernel.asm	/^c0106779:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c010677e	obj/kernel.asm	/^c010677e:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0106781	obj/kernel.asm	/^c0106781:	74 19                	je     c010679c <check_content_set+0x133>$/;"	l
c0106783	obj/kernel.asm	/^c0106783:	68 13 cb 10 c0       	push   $0xc010cb13$/;"	l
c0106788	obj/kernel.asm	/^c0106788:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c010678d	obj/kernel.asm	/^c010678d:	68 9e 00 00 00       	push   $0x9e$/;"	l
c0106792	obj/kernel.asm	/^c0106792:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c0106797	obj/kernel.asm	/^c0106797:	e8 3e 9c ff ff       	call   c01003da <__panic>$/;"	l
c010679c	obj/kernel.asm	/^c010679c:	b8 10 40 00 00       	mov    $0x4010,%eax$/;"	l
c01067a1	obj/kernel.asm	/^c01067a1:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c01067a4	obj/kernel.asm	/^c01067a4:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c01067a9	obj/kernel.asm	/^c01067a9:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01067ac	obj/kernel.asm	/^c01067ac:	74 19                	je     c01067c7 <check_content_set+0x15e>$/;"	l
c01067ae	obj/kernel.asm	/^c01067ae:	68 13 cb 10 c0       	push   $0xc010cb13$/;"	l
c01067b3	obj/kernel.asm	/^c01067b3:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c01067b8	obj/kernel.asm	/^c01067b8:	68 a0 00 00 00       	push   $0xa0$/;"	l
c01067bd	obj/kernel.asm	/^c01067bd:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c01067c2	obj/kernel.asm	/^c01067c2:	e8 13 9c ff ff       	call   c01003da <__panic>$/;"	l
c01067c7	obj/kernel.asm	/^c01067c7:	c9                   	leave  $/;"	l
c01067c8	obj/kernel.asm	/^c01067c8:	c3                   	ret    $/;"	l
c01067c9	obj/kernel.asm	/^c01067c9 <check_content_access>:$/;"	l
c01067c9	obj/kernel.asm	/^c01067c9:	55                   	push   %ebp$/;"	l
c01067ca	obj/kernel.asm	/^c01067ca:	89 e5                	mov    %esp,%ebp$/;"	l
c01067cc	obj/kernel.asm	/^c01067cc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01067cf	obj/kernel.asm	/^c01067cf:	a1 b8 bf 19 c0       	mov    0xc019bfb8,%eax$/;"	l
c01067d4	obj/kernel.asm	/^c01067d4:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01067d7	obj/kernel.asm	/^c01067d7:	ff d0                	call   *%eax$/;"	l
c01067d9	obj/kernel.asm	/^c01067d9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01067dc	obj/kernel.asm	/^c01067dc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01067df	obj/kernel.asm	/^c01067df:	c9                   	leave  $/;"	l
c01067e0	obj/kernel.asm	/^c01067e0:	c3                   	ret    $/;"	l
c01067e1	obj/kernel.asm	/^c01067e1 <check_swap>:$/;"	l
c01067e1	obj/kernel.asm	/^c01067e1:	55                   	push   %ebp$/;"	l
c01067e2	obj/kernel.asm	/^c01067e2:	89 e5                	mov    %esp,%ebp$/;"	l
c01067e4	obj/kernel.asm	/^c01067e4:	53                   	push   %ebx$/;"	l
c01067e5	obj/kernel.asm	/^c01067e5:	83 ec 64             	sub    $0x64,%esp$/;"	l
c01067e8	obj/kernel.asm	/^c01067e8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01067ef	obj/kernel.asm	/^c01067ef:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01067f6	obj/kernel.asm	/^c01067f6:	c7 45 e8 6c e1 19 c0 	movl   $0xc019e16c,-0x18(%ebp)$/;"	l
c01067fd	obj/kernel.asm	/^c01067fd:	eb 60                	jmp    c010685f <check_swap+0x7e>$/;"	l
c01067ff	obj/kernel.asm	/^c01067ff:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106802	obj/kernel.asm	/^c0106802:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0106805	obj/kernel.asm	/^c0106805:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106808	obj/kernel.asm	/^c0106808:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010680b	obj/kernel.asm	/^c010680b:	83 c0 04             	add    $0x4,%eax$/;"	l
c010680e	obj/kernel.asm	/^c010680e:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)$/;"	l
c0106815	obj/kernel.asm	/^c0106815:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0106818	obj/kernel.asm	/^c0106818:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010681b	obj/kernel.asm	/^c010681b:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c010681e	obj/kernel.asm	/^c010681e:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0106821	obj/kernel.asm	/^c0106821:	19 c0                	sbb    %eax,%eax$/;"	l
c0106823	obj/kernel.asm	/^c0106823:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0106826	obj/kernel.asm	/^c0106826:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c010682a	obj/kernel.asm	/^c010682a:	0f 95 c0             	setne  %al$/;"	l
c010682d	obj/kernel.asm	/^c010682d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0106830	obj/kernel.asm	/^c0106830:	85 c0                	test   %eax,%eax$/;"	l
c0106832	obj/kernel.asm	/^c0106832:	75 19                	jne    c010684d <check_swap+0x6c>$/;"	l
c0106834	obj/kernel.asm	/^c0106834:	68 22 cb 10 c0       	push   $0xc010cb22$/;"	l
c0106839	obj/kernel.asm	/^c0106839:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c010683e	obj/kernel.asm	/^c010683e:	68 bb 00 00 00       	push   $0xbb$/;"	l
c0106843	obj/kernel.asm	/^c0106843:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c0106848	obj/kernel.asm	/^c0106848:	e8 8d 9b ff ff       	call   c01003da <__panic>$/;"	l
c010684d	obj/kernel.asm	/^c010684d:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0106851	obj/kernel.asm	/^c0106851:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106854	obj/kernel.asm	/^c0106854:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0106857	obj/kernel.asm	/^c0106857:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010685a	obj/kernel.asm	/^c010685a:	01 d0                	add    %edx,%eax$/;"	l
c010685c	obj/kernel.asm	/^c010685c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010685f	obj/kernel.asm	/^c010685f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106862	obj/kernel.asm	/^c0106862:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0106865	obj/kernel.asm	/^c0106865:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0106868	obj/kernel.asm	/^c0106868:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010686b	obj/kernel.asm	/^c010686b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010686e	obj/kernel.asm	/^c010686e:	81 7d e8 6c e1 19 c0 	cmpl   $0xc019e16c,-0x18(%ebp)$/;"	l
c0106875	obj/kernel.asm	/^c0106875:	75 88                	jne    c01067ff <check_swap+0x1e>$/;"	l
c0106877	obj/kernel.asm	/^c0106877:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c010687a	obj/kernel.asm	/^c010687a:	e8 8c d1 ff ff       	call   c0103a0b <nr_free_pages>$/;"	l
c010687f	obj/kernel.asm	/^c010687f:	39 c3                	cmp    %eax,%ebx$/;"	l
c0106881	obj/kernel.asm	/^c0106881:	74 19                	je     c010689c <check_swap+0xbb>$/;"	l
c0106883	obj/kernel.asm	/^c0106883:	68 32 cb 10 c0       	push   $0xc010cb32$/;"	l
c0106888	obj/kernel.asm	/^c0106888:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c010688d	obj/kernel.asm	/^c010688d:	68 be 00 00 00       	push   $0xbe$/;"	l
c0106892	obj/kernel.asm	/^c0106892:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c0106897	obj/kernel.asm	/^c0106897:	e8 3e 9b ff ff       	call   c01003da <__panic>$/;"	l
c010689c	obj/kernel.asm	/^c010689c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010689f	obj/kernel.asm	/^c010689f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01068a2	obj/kernel.asm	/^c01068a2:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01068a5	obj/kernel.asm	/^c01068a5:	68 4c cb 10 c0       	push   $0xc010cb4c$/;"	l
c01068aa	obj/kernel.asm	/^c01068aa:	e8 c6 99 ff ff       	call   c0100275 <cprintf>$/;"	l
c01068af	obj/kernel.asm	/^c01068af:	83 c4 10             	add    $0x10,%esp$/;"	l
c01068b2	obj/kernel.asm	/^c01068b2:	e8 c7 e9 ff ff       	call   c010527e <mm_create>$/;"	l
c01068b7	obj/kernel.asm	/^c01068b7:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01068ba	obj/kernel.asm	/^c01068ba:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01068be	obj/kernel.asm	/^c01068be:	75 19                	jne    c01068d9 <check_swap+0xf8>$/;"	l
c01068c0	obj/kernel.asm	/^c01068c0:	68 72 cb 10 c0       	push   $0xc010cb72$/;"	l
c01068c5	obj/kernel.asm	/^c01068c5:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c01068ca	obj/kernel.asm	/^c01068ca:	68 c3 00 00 00       	push   $0xc3$/;"	l
c01068cf	obj/kernel.asm	/^c01068cf:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c01068d4	obj/kernel.asm	/^c01068d4:	e8 01 9b ff ff       	call   c01003da <__panic>$/;"	l
c01068d9	obj/kernel.asm	/^c01068d9:	a1 9c e0 19 c0       	mov    0xc019e09c,%eax$/;"	l
c01068de	obj/kernel.asm	/^c01068de:	85 c0                	test   %eax,%eax$/;"	l
c01068e0	obj/kernel.asm	/^c01068e0:	74 19                	je     c01068fb <check_swap+0x11a>$/;"	l
c01068e2	obj/kernel.asm	/^c01068e2:	68 7d cb 10 c0       	push   $0xc010cb7d$/;"	l
c01068e7	obj/kernel.asm	/^c01068e7:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c01068ec	obj/kernel.asm	/^c01068ec:	68 c6 00 00 00       	push   $0xc6$/;"	l
c01068f1	obj/kernel.asm	/^c01068f1:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c01068f6	obj/kernel.asm	/^c01068f6:	e8 df 9a ff ff       	call   c01003da <__panic>$/;"	l
c01068fb	obj/kernel.asm	/^c01068fb:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01068fe	obj/kernel.asm	/^c01068fe:	a3 9c e0 19 c0       	mov    %eax,0xc019e09c$/;"	l
c0106903	obj/kernel.asm	/^c0106903:	8b 15 04 bf 19 c0    	mov    0xc019bf04,%edx$/;"	l
c0106909	obj/kernel.asm	/^c0106909:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010690c	obj/kernel.asm	/^c010690c:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010690f	obj/kernel.asm	/^c010690f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106912	obj/kernel.asm	/^c0106912:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106915	obj/kernel.asm	/^c0106915:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0106918	obj/kernel.asm	/^c0106918:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010691b	obj/kernel.asm	/^c010691b:	8b 00                	mov    (%eax),%eax$/;"	l
c010691d	obj/kernel.asm	/^c010691d:	85 c0                	test   %eax,%eax$/;"	l
c010691f	obj/kernel.asm	/^c010691f:	74 19                	je     c010693a <check_swap+0x159>$/;"	l
c0106921	obj/kernel.asm	/^c0106921:	68 95 cb 10 c0       	push   $0xc010cb95$/;"	l
c0106926	obj/kernel.asm	/^c0106926:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c010692b	obj/kernel.asm	/^c010692b:	68 cb 00 00 00       	push   $0xcb$/;"	l
c0106930	obj/kernel.asm	/^c0106930:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c0106935	obj/kernel.asm	/^c0106935:	e8 a0 9a ff ff       	call   c01003da <__panic>$/;"	l
c010693a	obj/kernel.asm	/^c010693a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010693d	obj/kernel.asm	/^c010693d:	6a 03                	push   $0x3$/;"	l
c010693f	obj/kernel.asm	/^c010693f:	68 00 60 00 00       	push   $0x6000$/;"	l
c0106944	obj/kernel.asm	/^c0106944:	68 00 10 00 00       	push   $0x1000$/;"	l
c0106949	obj/kernel.asm	/^c0106949:	e8 ce e9 ff ff       	call   c010531c <vma_create>$/;"	l
c010694e	obj/kernel.asm	/^c010694e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106951	obj/kernel.asm	/^c0106951:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0106954	obj/kernel.asm	/^c0106954:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0106958	obj/kernel.asm	/^c0106958:	75 19                	jne    c0106973 <check_swap+0x192>$/;"	l
c010695a	obj/kernel.asm	/^c010695a:	68 a3 cb 10 c0       	push   $0xc010cba3$/;"	l
c010695f	obj/kernel.asm	/^c010695f:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c0106964	obj/kernel.asm	/^c0106964:	68 ce 00 00 00       	push   $0xce$/;"	l
c0106969	obj/kernel.asm	/^c0106969:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c010696e	obj/kernel.asm	/^c010696e:	e8 67 9a ff ff       	call   c01003da <__panic>$/;"	l
c0106973	obj/kernel.asm	/^c0106973:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106976	obj/kernel.asm	/^c0106976:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c0106979	obj/kernel.asm	/^c0106979:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010697c	obj/kernel.asm	/^c010697c:	e8 02 eb ff ff       	call   c0105483 <insert_vma_struct>$/;"	l
c0106981	obj/kernel.asm	/^c0106981:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106984	obj/kernel.asm	/^c0106984:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106987	obj/kernel.asm	/^c0106987:	68 b0 cb 10 c0       	push   $0xc010cbb0$/;"	l
c010698c	obj/kernel.asm	/^c010698c:	e8 e4 98 ff ff       	call   c0100275 <cprintf>$/;"	l
c0106991	obj/kernel.asm	/^c0106991:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106994	obj/kernel.asm	/^c0106994:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c010699b	obj/kernel.asm	/^c010699b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010699e	obj/kernel.asm	/^c010699e:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01069a1	obj/kernel.asm	/^c01069a1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01069a4	obj/kernel.asm	/^c01069a4:	6a 01                	push   $0x1$/;"	l
c01069a6	obj/kernel.asm	/^c01069a6:	68 00 10 00 00       	push   $0x1000$/;"	l
c01069ab	obj/kernel.asm	/^c01069ab:	50                   	push   %eax$/;"	l
c01069ac	obj/kernel.asm	/^c01069ac:	e8 a3 d6 ff ff       	call   c0104054 <get_pte>$/;"	l
c01069b1	obj/kernel.asm	/^c01069b1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01069b4	obj/kernel.asm	/^c01069b4:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01069b7	obj/kernel.asm	/^c01069b7:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
c01069bb	obj/kernel.asm	/^c01069bb:	75 19                	jne    c01069d6 <check_swap+0x1f5>$/;"	l
c01069bd	obj/kernel.asm	/^c01069bd:	68 e4 cb 10 c0       	push   $0xc010cbe4$/;"	l
c01069c2	obj/kernel.asm	/^c01069c2:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c01069c7	obj/kernel.asm	/^c01069c7:	68 d6 00 00 00       	push   $0xd6$/;"	l
c01069cc	obj/kernel.asm	/^c01069cc:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c01069d1	obj/kernel.asm	/^c01069d1:	e8 04 9a ff ff       	call   c01003da <__panic>$/;"	l
c01069d6	obj/kernel.asm	/^c01069d6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01069d9	obj/kernel.asm	/^c01069d9:	68 f8 cb 10 c0       	push   $0xc010cbf8$/;"	l
c01069de	obj/kernel.asm	/^c01069de:	e8 92 98 ff ff       	call   c0100275 <cprintf>$/;"	l
c01069e3	obj/kernel.asm	/^c01069e3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01069e6	obj/kernel.asm	/^c01069e6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c01069ed	obj/kernel.asm	/^c01069ed:	e9 90 00 00 00       	jmp    c0106a82 <check_swap+0x2a1>$/;"	l
c01069f2	obj/kernel.asm	/^c01069f2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01069f5	obj/kernel.asm	/^c01069f5:	6a 01                	push   $0x1$/;"	l
c01069f7	obj/kernel.asm	/^c01069f7:	e8 6f cf ff ff       	call   c010396b <alloc_pages>$/;"	l
c01069fc	obj/kernel.asm	/^c01069fc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01069ff	obj/kernel.asm	/^c01069ff:	89 c2                	mov    %eax,%edx$/;"	l
c0106a01	obj/kernel.asm	/^c0106a01:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106a04	obj/kernel.asm	/^c0106a04:	89 14 85 a0 e0 19 c0 	mov    %edx,-0x3fe61f60(,%eax,4)$/;"	l
c0106a0b	obj/kernel.asm	/^c0106a0b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106a0e	obj/kernel.asm	/^c0106a0e:	8b 04 85 a0 e0 19 c0 	mov    -0x3fe61f60(,%eax,4),%eax$/;"	l
c0106a15	obj/kernel.asm	/^c0106a15:	85 c0                	test   %eax,%eax$/;"	l
c0106a17	obj/kernel.asm	/^c0106a17:	75 19                	jne    c0106a32 <check_swap+0x251>$/;"	l
c0106a19	obj/kernel.asm	/^c0106a19:	68 1c cc 10 c0       	push   $0xc010cc1c$/;"	l
c0106a1e	obj/kernel.asm	/^c0106a1e:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c0106a23	obj/kernel.asm	/^c0106a23:	68 db 00 00 00       	push   $0xdb$/;"	l
c0106a28	obj/kernel.asm	/^c0106a28:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c0106a2d	obj/kernel.asm	/^c0106a2d:	e8 a8 99 ff ff       	call   c01003da <__panic>$/;"	l
c0106a32	obj/kernel.asm	/^c0106a32:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106a35	obj/kernel.asm	/^c0106a35:	8b 04 85 a0 e0 19 c0 	mov    -0x3fe61f60(,%eax,4),%eax$/;"	l
c0106a3c	obj/kernel.asm	/^c0106a3c:	83 c0 04             	add    $0x4,%eax$/;"	l
c0106a3f	obj/kernel.asm	/^c0106a3f:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%ebp)$/;"	l
c0106a46	obj/kernel.asm	/^c0106a46:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0106a49	obj/kernel.asm	/^c0106a49:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0106a4c	obj/kernel.asm	/^c0106a4c:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0106a4f	obj/kernel.asm	/^c0106a4f:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0106a52	obj/kernel.asm	/^c0106a52:	19 c0                	sbb    %eax,%eax$/;"	l
c0106a54	obj/kernel.asm	/^c0106a54:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0106a57	obj/kernel.asm	/^c0106a57:	83 7d ac 00          	cmpl   $0x0,-0x54(%ebp)$/;"	l
c0106a5b	obj/kernel.asm	/^c0106a5b:	0f 95 c0             	setne  %al$/;"	l
c0106a5e	obj/kernel.asm	/^c0106a5e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0106a61	obj/kernel.asm	/^c0106a61:	85 c0                	test   %eax,%eax$/;"	l
c0106a63	obj/kernel.asm	/^c0106a63:	74 19                	je     c0106a7e <check_swap+0x29d>$/;"	l
c0106a65	obj/kernel.asm	/^c0106a65:	68 30 cc 10 c0       	push   $0xc010cc30$/;"	l
c0106a6a	obj/kernel.asm	/^c0106a6a:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c0106a6f	obj/kernel.asm	/^c0106a6f:	68 dc 00 00 00       	push   $0xdc$/;"	l
c0106a74	obj/kernel.asm	/^c0106a74:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c0106a79	obj/kernel.asm	/^c0106a79:	e8 5c 99 ff ff       	call   c01003da <__panic>$/;"	l
c0106a7e	obj/kernel.asm	/^c0106a7e:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106a82	obj/kernel.asm	/^c0106a82:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106a86	obj/kernel.asm	/^c0106a86:	0f 8e 66 ff ff ff    	jle    c01069f2 <check_swap+0x211>$/;"	l
c0106a8c	obj/kernel.asm	/^c0106a8c:	a1 6c e1 19 c0       	mov    0xc019e16c,%eax$/;"	l
c0106a91	obj/kernel.asm	/^c0106a91:	8b 15 70 e1 19 c0    	mov    0xc019e170,%edx$/;"	l
c0106a97	obj/kernel.asm	/^c0106a97:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0106a9a	obj/kernel.asm	/^c0106a9a:	89 55 9c             	mov    %edx,-0x64(%ebp)$/;"	l
c0106a9d	obj/kernel.asm	/^c0106a9d:	c7 45 a8 6c e1 19 c0 	movl   $0xc019e16c,-0x58(%ebp)$/;"	l
c0106aa4	obj/kernel.asm	/^c0106aa4:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0106aa7	obj/kernel.asm	/^c0106aa7:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c0106aaa	obj/kernel.asm	/^c0106aaa:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0106aad	obj/kernel.asm	/^c0106aad:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0106ab0	obj/kernel.asm	/^c0106ab0:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0106ab3	obj/kernel.asm	/^c0106ab3:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0106ab6	obj/kernel.asm	/^c0106ab6:	89 10                	mov    %edx,(%eax)$/;"	l
c0106ab8	obj/kernel.asm	/^c0106ab8:	c7 45 a4 6c e1 19 c0 	movl   $0xc019e16c,-0x5c(%ebp)$/;"	l
c0106abf	obj/kernel.asm	/^c0106abf:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0106ac2	obj/kernel.asm	/^c0106ac2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106ac5	obj/kernel.asm	/^c0106ac5:	39 45 a4             	cmp    %eax,-0x5c(%ebp)$/;"	l
c0106ac8	obj/kernel.asm	/^c0106ac8:	0f 94 c0             	sete   %al$/;"	l
c0106acb	obj/kernel.asm	/^c0106acb:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0106ace	obj/kernel.asm	/^c0106ace:	85 c0                	test   %eax,%eax$/;"	l
c0106ad0	obj/kernel.asm	/^c0106ad0:	75 19                	jne    c0106aeb <check_swap+0x30a>$/;"	l
c0106ad2	obj/kernel.asm	/^c0106ad2:	68 4b cc 10 c0       	push   $0xc010cc4b$/;"	l
c0106ad7	obj/kernel.asm	/^c0106ad7:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c0106adc	obj/kernel.asm	/^c0106adc:	68 e0 00 00 00       	push   $0xe0$/;"	l
c0106ae1	obj/kernel.asm	/^c0106ae1:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c0106ae6	obj/kernel.asm	/^c0106ae6:	e8 ef 98 ff ff       	call   c01003da <__panic>$/;"	l
c0106aeb	obj/kernel.asm	/^c0106aeb:	a1 74 e1 19 c0       	mov    0xc019e174,%eax$/;"	l
c0106af0	obj/kernel.asm	/^c0106af0:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0106af3	obj/kernel.asm	/^c0106af3:	c7 05 74 e1 19 c0 00 	movl   $0x0,0xc019e174$/;"	l
c0106afa	obj/kernel.asm	/^c0106afa:	00 00 00 $/;"	l
c0106afd	obj/kernel.asm	/^c0106afd:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106b04	obj/kernel.asm	/^c0106b04:	eb 1c                	jmp    c0106b22 <check_swap+0x341>$/;"	l
c0106b06	obj/kernel.asm	/^c0106b06:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106b09	obj/kernel.asm	/^c0106b09:	8b 04 85 a0 e0 19 c0 	mov    -0x3fe61f60(,%eax,4),%eax$/;"	l
c0106b10	obj/kernel.asm	/^c0106b10:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106b13	obj/kernel.asm	/^c0106b13:	6a 01                	push   $0x1$/;"	l
c0106b15	obj/kernel.asm	/^c0106b15:	50                   	push   %eax$/;"	l
c0106b16	obj/kernel.asm	/^c0106b16:	e8 bc ce ff ff       	call   c01039d7 <free_pages>$/;"	l
c0106b1b	obj/kernel.asm	/^c0106b1b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106b1e	obj/kernel.asm	/^c0106b1e:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106b22	obj/kernel.asm	/^c0106b22:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106b26	obj/kernel.asm	/^c0106b26:	7e de                	jle    c0106b06 <check_swap+0x325>$/;"	l
c0106b28	obj/kernel.asm	/^c0106b28:	a1 74 e1 19 c0       	mov    0xc019e174,%eax$/;"	l
c0106b2d	obj/kernel.asm	/^c0106b2d:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0106b30	obj/kernel.asm	/^c0106b30:	74 19                	je     c0106b4b <check_swap+0x36a>$/;"	l
c0106b32	obj/kernel.asm	/^c0106b32:	68 64 cc 10 c0       	push   $0xc010cc64$/;"	l
c0106b37	obj/kernel.asm	/^c0106b37:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c0106b3c	obj/kernel.asm	/^c0106b3c:	68 e9 00 00 00       	push   $0xe9$/;"	l
c0106b41	obj/kernel.asm	/^c0106b41:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c0106b46	obj/kernel.asm	/^c0106b46:	e8 8f 98 ff ff       	call   c01003da <__panic>$/;"	l
c0106b4b	obj/kernel.asm	/^c0106b4b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106b4e	obj/kernel.asm	/^c0106b4e:	68 88 cc 10 c0       	push   $0xc010cc88$/;"	l
c0106b53	obj/kernel.asm	/^c0106b53:	e8 1d 97 ff ff       	call   c0100275 <cprintf>$/;"	l
c0106b58	obj/kernel.asm	/^c0106b58:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106b5b	obj/kernel.asm	/^c0106b5b:	c7 05 ac bf 19 c0 00 	movl   $0x0,0xc019bfac$/;"	l
c0106b62	obj/kernel.asm	/^c0106b62:	00 00 00 $/;"	l
c0106b65	obj/kernel.asm	/^c0106b65:	e8 ff fa ff ff       	call   c0106669 <check_content_set>$/;"	l
c0106b6a	obj/kernel.asm	/^c0106b6a:	a1 74 e1 19 c0       	mov    0xc019e174,%eax$/;"	l
c0106b6f	obj/kernel.asm	/^c0106b6f:	85 c0                	test   %eax,%eax$/;"	l
c0106b71	obj/kernel.asm	/^c0106b71:	74 19                	je     c0106b8c <check_swap+0x3ab>$/;"	l
c0106b73	obj/kernel.asm	/^c0106b73:	68 af cc 10 c0       	push   $0xc010ccaf$/;"	l
c0106b78	obj/kernel.asm	/^c0106b78:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c0106b7d	obj/kernel.asm	/^c0106b7d:	68 f2 00 00 00       	push   $0xf2$/;"	l
c0106b82	obj/kernel.asm	/^c0106b82:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c0106b87	obj/kernel.asm	/^c0106b87:	e8 4e 98 ff ff       	call   c01003da <__panic>$/;"	l
c0106b8c	obj/kernel.asm	/^c0106b8c:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106b93	obj/kernel.asm	/^c0106b93:	eb 26                	jmp    c0106bbb <check_swap+0x3da>$/;"	l
c0106b95	obj/kernel.asm	/^c0106b95:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106b98	obj/kernel.asm	/^c0106b98:	c7 04 85 c0 e0 19 c0 	movl   $0xffffffff,-0x3fe61f40(,%eax,4)$/;"	l
c0106b9f	obj/kernel.asm	/^c0106b9f:	ff ff ff ff $/;"	l
c0106ba3	obj/kernel.asm	/^c0106ba3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106ba6	obj/kernel.asm	/^c0106ba6:	8b 14 85 c0 e0 19 c0 	mov    -0x3fe61f40(,%eax,4),%edx$/;"	l
c0106bad	obj/kernel.asm	/^c0106bad:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106bb0	obj/kernel.asm	/^c0106bb0:	89 14 85 00 e1 19 c0 	mov    %edx,-0x3fe61f00(,%eax,4)$/;"	l
c0106bb7	obj/kernel.asm	/^c0106bb7:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106bbb	obj/kernel.asm	/^c0106bbb:	83 7d ec 09          	cmpl   $0x9,-0x14(%ebp)$/;"	l
c0106bbf	obj/kernel.asm	/^c0106bbf:	7e d4                	jle    c0106b95 <check_swap+0x3b4>$/;"	l
c0106bc1	obj/kernel.asm	/^c0106bc1:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106bc8	obj/kernel.asm	/^c0106bc8:	e9 cc 00 00 00       	jmp    c0106c99 <check_swap+0x4b8>$/;"	l
c0106bcd	obj/kernel.asm	/^c0106bcd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106bd0	obj/kernel.asm	/^c0106bd0:	c7 04 85 54 e1 19 c0 	movl   $0x0,-0x3fe61eac(,%eax,4)$/;"	l
c0106bd7	obj/kernel.asm	/^c0106bd7:	00 00 00 00 $/;"	l
c0106bdb	obj/kernel.asm	/^c0106bdb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106bde	obj/kernel.asm	/^c0106bde:	83 c0 01             	add    $0x1,%eax$/;"	l
c0106be1	obj/kernel.asm	/^c0106be1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0106be4	obj/kernel.asm	/^c0106be4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106be7	obj/kernel.asm	/^c0106be7:	6a 00                	push   $0x0$/;"	l
c0106be9	obj/kernel.asm	/^c0106be9:	50                   	push   %eax$/;"	l
c0106bea	obj/kernel.asm	/^c0106bea:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0106bed	obj/kernel.asm	/^c0106bed:	e8 62 d4 ff ff       	call   c0104054 <get_pte>$/;"	l
c0106bf2	obj/kernel.asm	/^c0106bf2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106bf5	obj/kernel.asm	/^c0106bf5:	89 c2                	mov    %eax,%edx$/;"	l
c0106bf7	obj/kernel.asm	/^c0106bf7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106bfa	obj/kernel.asm	/^c0106bfa:	89 14 85 54 e1 19 c0 	mov    %edx,-0x3fe61eac(,%eax,4)$/;"	l
c0106c01	obj/kernel.asm	/^c0106c01:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c04	obj/kernel.asm	/^c0106c04:	8b 04 85 54 e1 19 c0 	mov    -0x3fe61eac(,%eax,4),%eax$/;"	l
c0106c0b	obj/kernel.asm	/^c0106c0b:	85 c0                	test   %eax,%eax$/;"	l
c0106c0d	obj/kernel.asm	/^c0106c0d:	75 19                	jne    c0106c28 <check_swap+0x447>$/;"	l
c0106c0f	obj/kernel.asm	/^c0106c0f:	68 bc cc 10 c0       	push   $0xc010ccbc$/;"	l
c0106c14	obj/kernel.asm	/^c0106c14:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c0106c19	obj/kernel.asm	/^c0106c19:	68 fa 00 00 00       	push   $0xfa$/;"	l
c0106c1e	obj/kernel.asm	/^c0106c1e:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c0106c23	obj/kernel.asm	/^c0106c23:	e8 b2 97 ff ff       	call   c01003da <__panic>$/;"	l
c0106c28	obj/kernel.asm	/^c0106c28:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c2b	obj/kernel.asm	/^c0106c2b:	8b 04 85 54 e1 19 c0 	mov    -0x3fe61eac(,%eax,4),%eax$/;"	l
c0106c32	obj/kernel.asm	/^c0106c32:	8b 00                	mov    (%eax),%eax$/;"	l
c0106c34	obj/kernel.asm	/^c0106c34:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106c37	obj/kernel.asm	/^c0106c37:	50                   	push   %eax$/;"	l
c0106c38	obj/kernel.asm	/^c0106c38:	e8 f6 f6 ff ff       	call   c0106333 <pte2page>$/;"	l
c0106c3d	obj/kernel.asm	/^c0106c3d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106c40	obj/kernel.asm	/^c0106c40:	89 c2                	mov    %eax,%edx$/;"	l
c0106c42	obj/kernel.asm	/^c0106c42:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c45	obj/kernel.asm	/^c0106c45:	8b 04 85 a0 e0 19 c0 	mov    -0x3fe61f60(,%eax,4),%eax$/;"	l
c0106c4c	obj/kernel.asm	/^c0106c4c:	39 c2                	cmp    %eax,%edx$/;"	l
c0106c4e	obj/kernel.asm	/^c0106c4e:	74 19                	je     c0106c69 <check_swap+0x488>$/;"	l
c0106c50	obj/kernel.asm	/^c0106c50:	68 d4 cc 10 c0       	push   $0xc010ccd4$/;"	l
c0106c55	obj/kernel.asm	/^c0106c55:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c0106c5a	obj/kernel.asm	/^c0106c5a:	68 fb 00 00 00       	push   $0xfb$/;"	l
c0106c5f	obj/kernel.asm	/^c0106c5f:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c0106c64	obj/kernel.asm	/^c0106c64:	e8 71 97 ff ff       	call   c01003da <__panic>$/;"	l
c0106c69	obj/kernel.asm	/^c0106c69:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c6c	obj/kernel.asm	/^c0106c6c:	8b 04 85 54 e1 19 c0 	mov    -0x3fe61eac(,%eax,4),%eax$/;"	l
c0106c73	obj/kernel.asm	/^c0106c73:	8b 00                	mov    (%eax),%eax$/;"	l
c0106c75	obj/kernel.asm	/^c0106c75:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106c78	obj/kernel.asm	/^c0106c78:	85 c0                	test   %eax,%eax$/;"	l
c0106c7a	obj/kernel.asm	/^c0106c7a:	75 19                	jne    c0106c95 <check_swap+0x4b4>$/;"	l
c0106c7c	obj/kernel.asm	/^c0106c7c:	68 fc cc 10 c0       	push   $0xc010ccfc$/;"	l
c0106c81	obj/kernel.asm	/^c0106c81:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c0106c86	obj/kernel.asm	/^c0106c86:	68 fc 00 00 00       	push   $0xfc$/;"	l
c0106c8b	obj/kernel.asm	/^c0106c8b:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c0106c90	obj/kernel.asm	/^c0106c90:	e8 45 97 ff ff       	call   c01003da <__panic>$/;"	l
c0106c95	obj/kernel.asm	/^c0106c95:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106c99	obj/kernel.asm	/^c0106c99:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106c9d	obj/kernel.asm	/^c0106c9d:	0f 8e 2a ff ff ff    	jle    c0106bcd <check_swap+0x3ec>$/;"	l
c0106ca3	obj/kernel.asm	/^c0106ca3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106ca6	obj/kernel.asm	/^c0106ca6:	68 18 cd 10 c0       	push   $0xc010cd18$/;"	l
c0106cab	obj/kernel.asm	/^c0106cab:	e8 c5 95 ff ff       	call   c0100275 <cprintf>$/;"	l
c0106cb0	obj/kernel.asm	/^c0106cb0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106cb3	obj/kernel.asm	/^c0106cb3:	e8 11 fb ff ff       	call   c01067c9 <check_content_access>$/;"	l
c0106cb8	obj/kernel.asm	/^c0106cb8:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0106cbb	obj/kernel.asm	/^c0106cbb:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0106cbf	obj/kernel.asm	/^c0106cbf:	74 19                	je     c0106cda <check_swap+0x4f9>$/;"	l
c0106cc1	obj/kernel.asm	/^c0106cc1:	68 3e cd 10 c0       	push   $0xc010cd3e$/;"	l
c0106cc6	obj/kernel.asm	/^c0106cc6:	68 26 ca 10 c0       	push   $0xc010ca26$/;"	l
c0106ccb	obj/kernel.asm	/^c0106ccb:	68 01 01 00 00       	push   $0x101$/;"	l
c0106cd0	obj/kernel.asm	/^c0106cd0:	68 c0 c9 10 c0       	push   $0xc010c9c0$/;"	l
c0106cd5	obj/kernel.asm	/^c0106cd5:	e8 00 97 ff ff       	call   c01003da <__panic>$/;"	l
c0106cda	obj/kernel.asm	/^c0106cda:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106ce1	obj/kernel.asm	/^c0106ce1:	eb 1c                	jmp    c0106cff <check_swap+0x51e>$/;"	l
c0106ce3	obj/kernel.asm	/^c0106ce3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106ce6	obj/kernel.asm	/^c0106ce6:	8b 04 85 a0 e0 19 c0 	mov    -0x3fe61f60(,%eax,4),%eax$/;"	l
c0106ced	obj/kernel.asm	/^c0106ced:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106cf0	obj/kernel.asm	/^c0106cf0:	6a 01                	push   $0x1$/;"	l
c0106cf2	obj/kernel.asm	/^c0106cf2:	50                   	push   %eax$/;"	l
c0106cf3	obj/kernel.asm	/^c0106cf3:	e8 df cc ff ff       	call   c01039d7 <free_pages>$/;"	l
c0106cf8	obj/kernel.asm	/^c0106cf8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106cfb	obj/kernel.asm	/^c0106cfb:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106cff	obj/kernel.asm	/^c0106cff:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106d03	obj/kernel.asm	/^c0106d03:	7e de                	jle    c0106ce3 <check_swap+0x502>$/;"	l
c0106d05	obj/kernel.asm	/^c0106d05:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106d08	obj/kernel.asm	/^c0106d08:	8b 00                	mov    (%eax),%eax$/;"	l
c0106d0a	obj/kernel.asm	/^c0106d0a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106d0d	obj/kernel.asm	/^c0106d0d:	50                   	push   %eax$/;"	l
c0106d0e	obj/kernel.asm	/^c0106d0e:	e8 e3 f5 ff ff       	call   c01062f6 <pa2page>$/;"	l
c0106d13	obj/kernel.asm	/^c0106d13:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106d16	obj/kernel.asm	/^c0106d16:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106d19	obj/kernel.asm	/^c0106d19:	6a 01                	push   $0x1$/;"	l
c0106d1b	obj/kernel.asm	/^c0106d1b:	50                   	push   %eax$/;"	l
c0106d1c	obj/kernel.asm	/^c0106d1c:	e8 b6 cc ff ff       	call   c01039d7 <free_pages>$/;"	l
c0106d21	obj/kernel.asm	/^c0106d21:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106d24	obj/kernel.asm	/^c0106d24:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106d27	obj/kernel.asm	/^c0106d27:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0106d2d	obj/kernel.asm	/^c0106d2d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106d30	obj/kernel.asm	/^c0106d30:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0106d37	obj/kernel.asm	/^c0106d37:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106d3a	obj/kernel.asm	/^c0106d3a:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0106d3d	obj/kernel.asm	/^c0106d3d:	e8 63 e8 ff ff       	call   c01055a5 <mm_destroy>$/;"	l
c0106d42	obj/kernel.asm	/^c0106d42:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106d45	obj/kernel.asm	/^c0106d45:	c7 05 9c e0 19 c0 00 	movl   $0x0,0xc019e09c$/;"	l
c0106d4c	obj/kernel.asm	/^c0106d4c:	00 00 00 $/;"	l
c0106d4f	obj/kernel.asm	/^c0106d4f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0106d52	obj/kernel.asm	/^c0106d52:	a3 74 e1 19 c0       	mov    %eax,0xc019e174$/;"	l
c0106d57	obj/kernel.asm	/^c0106d57:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0106d5a	obj/kernel.asm	/^c0106d5a:	8b 55 9c             	mov    -0x64(%ebp),%edx$/;"	l
c0106d5d	obj/kernel.asm	/^c0106d5d:	a3 6c e1 19 c0       	mov    %eax,0xc019e16c$/;"	l
c0106d62	obj/kernel.asm	/^c0106d62:	89 15 70 e1 19 c0    	mov    %edx,0xc019e170$/;"	l
c0106d68	obj/kernel.asm	/^c0106d68:	c7 45 e8 6c e1 19 c0 	movl   $0xc019e16c,-0x18(%ebp)$/;"	l
c0106d6f	obj/kernel.asm	/^c0106d6f:	eb 1d                	jmp    c0106d8e <check_swap+0x5ad>$/;"	l
c0106d71	obj/kernel.asm	/^c0106d71:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106d74	obj/kernel.asm	/^c0106d74:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0106d77	obj/kernel.asm	/^c0106d77:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0106d7a	obj/kernel.asm	/^c0106d7a:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0106d7e	obj/kernel.asm	/^c0106d7e:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0106d81	obj/kernel.asm	/^c0106d81:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0106d84	obj/kernel.asm	/^c0106d84:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0106d87	obj/kernel.asm	/^c0106d87:	29 c2                	sub    %eax,%edx$/;"	l
c0106d89	obj/kernel.asm	/^c0106d89:	89 d0                	mov    %edx,%eax$/;"	l
c0106d8b	obj/kernel.asm	/^c0106d8b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106d8e	obj/kernel.asm	/^c0106d8e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106d91	obj/kernel.asm	/^c0106d91:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c0106d94	obj/kernel.asm	/^c0106d94:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0106d97	obj/kernel.asm	/^c0106d97:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106d9a	obj/kernel.asm	/^c0106d9a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106d9d	obj/kernel.asm	/^c0106d9d:	81 7d e8 6c e1 19 c0 	cmpl   $0xc019e16c,-0x18(%ebp)$/;"	l
c0106da4	obj/kernel.asm	/^c0106da4:	75 cb                	jne    c0106d71 <check_swap+0x590>$/;"	l
c0106da6	obj/kernel.asm	/^c0106da6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106da9	obj/kernel.asm	/^c0106da9:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0106dac	obj/kernel.asm	/^c0106dac:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106daf	obj/kernel.asm	/^c0106daf:	68 45 cd 10 c0       	push   $0xc010cd45$/;"	l
c0106db4	obj/kernel.asm	/^c0106db4:	e8 bc 94 ff ff       	call   c0100275 <cprintf>$/;"	l
c0106db9	obj/kernel.asm	/^c0106db9:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106dbc	obj/kernel.asm	/^c0106dbc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106dbf	obj/kernel.asm	/^c0106dbf:	68 5f cd 10 c0       	push   $0xc010cd5f$/;"	l
c0106dc4	obj/kernel.asm	/^c0106dc4:	e8 ac 94 ff ff       	call   c0100275 <cprintf>$/;"	l
c0106dc9	obj/kernel.asm	/^c0106dc9:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106dcc	obj/kernel.asm	/^c0106dcc:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0106dcf	obj/kernel.asm	/^c0106dcf:	c9                   	leave  $/;"	l
c0106dd0	obj/kernel.asm	/^c0106dd0:	c3                   	ret    $/;"	l
c0106dd1	obj/kernel.asm	/^c0106dd1 <__intr_save>:$/;"	l
c0106dd1	obj/kernel.asm	/^c0106dd1:	55                   	push   %ebp$/;"	l
c0106dd2	obj/kernel.asm	/^c0106dd2:	89 e5                	mov    %esp,%ebp$/;"	l
c0106dd4	obj/kernel.asm	/^c0106dd4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106dd7	obj/kernel.asm	/^c0106dd7:	9c                   	pushf  $/;"	l
c0106dd8	obj/kernel.asm	/^c0106dd8:	58                   	pop    %eax$/;"	l
c0106dd9	obj/kernel.asm	/^c0106dd9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106ddc	obj/kernel.asm	/^c0106ddc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106ddf	obj/kernel.asm	/^c0106ddf:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0106de4	obj/kernel.asm	/^c0106de4:	85 c0                	test   %eax,%eax$/;"	l
c0106de6	obj/kernel.asm	/^c0106de6:	74 0c                	je     c0106df4 <__intr_save+0x23>$/;"	l
c0106de8	obj/kernel.asm	/^c0106de8:	e8 b0 b2 ff ff       	call   c010209d <intr_disable>$/;"	l
c0106ded	obj/kernel.asm	/^c0106ded:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0106df2	obj/kernel.asm	/^c0106df2:	eb 05                	jmp    c0106df9 <__intr_save+0x28>$/;"	l
c0106df4	obj/kernel.asm	/^c0106df4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106df9	obj/kernel.asm	/^c0106df9:	c9                   	leave  $/;"	l
c0106dfa	obj/kernel.asm	/^c0106dfa:	c3                   	ret    $/;"	l
c0106dfb	obj/kernel.asm	/^c0106dfb <__intr_restore>:$/;"	l
c0106dfb	obj/kernel.asm	/^c0106dfb:	55                   	push   %ebp$/;"	l
c0106dfc	obj/kernel.asm	/^c0106dfc:	89 e5                	mov    %esp,%ebp$/;"	l
c0106dfe	obj/kernel.asm	/^c0106dfe:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106e01	obj/kernel.asm	/^c0106e01:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0106e05	obj/kernel.asm	/^c0106e05:	74 05                	je     c0106e0c <__intr_restore+0x11>$/;"	l
c0106e07	obj/kernel.asm	/^c0106e07:	e8 8b b2 ff ff       	call   c0102097 <intr_enable>$/;"	l
c0106e0c	obj/kernel.asm	/^c0106e0c:	c9                   	leave  $/;"	l
c0106e0d	obj/kernel.asm	/^c0106e0d:	c3                   	ret    $/;"	l
c0106e0e	obj/kernel.asm	/^c0106e0e <page2ppn>:$/;"	l
c0106e0e	obj/kernel.asm	/^c0106e0e:	55                   	push   %ebp$/;"	l
c0106e0f	obj/kernel.asm	/^c0106e0f:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e11	obj/kernel.asm	/^c0106e11:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106e14	obj/kernel.asm	/^c0106e14:	8b 15 98 e0 19 c0    	mov    0xc019e098,%edx$/;"	l
c0106e1a	obj/kernel.asm	/^c0106e1a:	29 d0                	sub    %edx,%eax$/;"	l
c0106e1c	obj/kernel.asm	/^c0106e1c:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0106e1f	obj/kernel.asm	/^c0106e1f:	5d                   	pop    %ebp$/;"	l
c0106e20	obj/kernel.asm	/^c0106e20:	c3                   	ret    $/;"	l
c0106e21	obj/kernel.asm	/^c0106e21 <page2pa>:$/;"	l
c0106e21	obj/kernel.asm	/^c0106e21:	55                   	push   %ebp$/;"	l
c0106e22	obj/kernel.asm	/^c0106e22:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e24	obj/kernel.asm	/^c0106e24:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106e27	obj/kernel.asm	/^c0106e27:	e8 e2 ff ff ff       	call   c0106e0e <page2ppn>$/;"	l
c0106e2c	obj/kernel.asm	/^c0106e2c:	83 c4 04             	add    $0x4,%esp$/;"	l
c0106e2f	obj/kernel.asm	/^c0106e2f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0106e32	obj/kernel.asm	/^c0106e32:	c9                   	leave  $/;"	l
c0106e33	obj/kernel.asm	/^c0106e33:	c3                   	ret    $/;"	l
c0106e34	obj/kernel.asm	/^c0106e34 <pa2page>:$/;"	l
c0106e34	obj/kernel.asm	/^c0106e34:	55                   	push   %ebp$/;"	l
c0106e35	obj/kernel.asm	/^c0106e35:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e37	obj/kernel.asm	/^c0106e37:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106e3a	obj/kernel.asm	/^c0106e3a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106e3d	obj/kernel.asm	/^c0106e3d:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106e40	obj/kernel.asm	/^c0106e40:	89 c2                	mov    %eax,%edx$/;"	l
c0106e42	obj/kernel.asm	/^c0106e42:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c0106e47	obj/kernel.asm	/^c0106e47:	39 c2                	cmp    %eax,%edx$/;"	l
c0106e49	obj/kernel.asm	/^c0106e49:	72 14                	jb     c0106e5f <pa2page+0x2b>$/;"	l
c0106e4b	obj/kernel.asm	/^c0106e4b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106e4e	obj/kernel.asm	/^c0106e4e:	68 78 cd 10 c0       	push   $0xc010cd78$/;"	l
c0106e53	obj/kernel.asm	/^c0106e53:	6a 5e                	push   $0x5e$/;"	l
c0106e55	obj/kernel.asm	/^c0106e55:	68 97 cd 10 c0       	push   $0xc010cd97$/;"	l
c0106e5a	obj/kernel.asm	/^c0106e5a:	e8 7b 95 ff ff       	call   c01003da <__panic>$/;"	l
c0106e5f	obj/kernel.asm	/^c0106e5f:	a1 98 e0 19 c0       	mov    0xc019e098,%eax$/;"	l
c0106e64	obj/kernel.asm	/^c0106e64:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106e67	obj/kernel.asm	/^c0106e67:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0106e6a	obj/kernel.asm	/^c0106e6a:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0106e6d	obj/kernel.asm	/^c0106e6d:	01 d0                	add    %edx,%eax$/;"	l
c0106e6f	obj/kernel.asm	/^c0106e6f:	c9                   	leave  $/;"	l
c0106e70	obj/kernel.asm	/^c0106e70:	c3                   	ret    $/;"	l
c0106e71	obj/kernel.asm	/^c0106e71 <page2kva>:$/;"	l
c0106e71	obj/kernel.asm	/^c0106e71:	55                   	push   %ebp$/;"	l
c0106e72	obj/kernel.asm	/^c0106e72:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e74	obj/kernel.asm	/^c0106e74:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106e77	obj/kernel.asm	/^c0106e77:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106e7a	obj/kernel.asm	/^c0106e7a:	e8 a2 ff ff ff       	call   c0106e21 <page2pa>$/;"	l
c0106e7f	obj/kernel.asm	/^c0106e7f:	83 c4 04             	add    $0x4,%esp$/;"	l
c0106e82	obj/kernel.asm	/^c0106e82:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106e85	obj/kernel.asm	/^c0106e85:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106e88	obj/kernel.asm	/^c0106e88:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106e8b	obj/kernel.asm	/^c0106e8b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106e8e	obj/kernel.asm	/^c0106e8e:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c0106e93	obj/kernel.asm	/^c0106e93:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0106e96	obj/kernel.asm	/^c0106e96:	72 14                	jb     c0106eac <page2kva+0x3b>$/;"	l
c0106e98	obj/kernel.asm	/^c0106e98:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106e9b	obj/kernel.asm	/^c0106e9b:	68 a8 cd 10 c0       	push   $0xc010cda8$/;"	l
c0106ea0	obj/kernel.asm	/^c0106ea0:	6a 65                	push   $0x65$/;"	l
c0106ea2	obj/kernel.asm	/^c0106ea2:	68 97 cd 10 c0       	push   $0xc010cd97$/;"	l
c0106ea7	obj/kernel.asm	/^c0106ea7:	e8 2e 95 ff ff       	call   c01003da <__panic>$/;"	l
c0106eac	obj/kernel.asm	/^c0106eac:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106eaf	obj/kernel.asm	/^c0106eaf:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0106eb4	obj/kernel.asm	/^c0106eb4:	c9                   	leave  $/;"	l
c0106eb5	obj/kernel.asm	/^c0106eb5:	c3                   	ret    $/;"	l
c0106eb6	obj/kernel.asm	/^c0106eb6 <kva2page>:$/;"	l
c0106eb6	obj/kernel.asm	/^c0106eb6:	55                   	push   %ebp$/;"	l
c0106eb7	obj/kernel.asm	/^c0106eb7:	89 e5                	mov    %esp,%ebp$/;"	l
c0106eb9	obj/kernel.asm	/^c0106eb9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106ebc	obj/kernel.asm	/^c0106ebc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106ebf	obj/kernel.asm	/^c0106ebf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106ec2	obj/kernel.asm	/^c0106ec2:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0106ec9	obj/kernel.asm	/^c0106ec9:	77 14                	ja     c0106edf <kva2page+0x29>$/;"	l
c0106ecb	obj/kernel.asm	/^c0106ecb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106ece	obj/kernel.asm	/^c0106ece:	68 cc cd 10 c0       	push   $0xc010cdcc$/;"	l
c0106ed3	obj/kernel.asm	/^c0106ed3:	6a 6a                	push   $0x6a$/;"	l
c0106ed5	obj/kernel.asm	/^c0106ed5:	68 97 cd 10 c0       	push   $0xc010cd97$/;"	l
c0106eda	obj/kernel.asm	/^c0106eda:	e8 fb 94 ff ff       	call   c01003da <__panic>$/;"	l
c0106edf	obj/kernel.asm	/^c0106edf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106ee2	obj/kernel.asm	/^c0106ee2:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0106ee7	obj/kernel.asm	/^c0106ee7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106eea	obj/kernel.asm	/^c0106eea:	50                   	push   %eax$/;"	l
c0106eeb	obj/kernel.asm	/^c0106eeb:	e8 44 ff ff ff       	call   c0106e34 <pa2page>$/;"	l
c0106ef0	obj/kernel.asm	/^c0106ef0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106ef3	obj/kernel.asm	/^c0106ef3:	c9                   	leave  $/;"	l
c0106ef4	obj/kernel.asm	/^c0106ef4:	c3                   	ret    $/;"	l
c0106ef5	obj/kernel.asm	/^c0106ef5 <__slob_get_free_pages>:$/;"	l
c0106ef5	obj/kernel.asm	/^c0106ef5:	55                   	push   %ebp$/;"	l
c0106ef6	obj/kernel.asm	/^c0106ef6:	89 e5                	mov    %esp,%ebp$/;"	l
c0106ef8	obj/kernel.asm	/^c0106ef8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106efb	obj/kernel.asm	/^c0106efb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106efe	obj/kernel.asm	/^c0106efe:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0106f03	obj/kernel.asm	/^c0106f03:	89 c1                	mov    %eax,%ecx$/;"	l
c0106f05	obj/kernel.asm	/^c0106f05:	d3 e2                	shl    %cl,%edx$/;"	d
c0106f07	obj/kernel.asm	/^c0106f07:	89 d0                	mov    %edx,%eax$/;"	l
c0106f09	obj/kernel.asm	/^c0106f09:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106f0c	obj/kernel.asm	/^c0106f0c:	50                   	push   %eax$/;"	l
c0106f0d	obj/kernel.asm	/^c0106f0d:	e8 59 ca ff ff       	call   c010396b <alloc_pages>$/;"	l
c0106f12	obj/kernel.asm	/^c0106f12:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106f15	obj/kernel.asm	/^c0106f15:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106f18	obj/kernel.asm	/^c0106f18:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0106f1c	obj/kernel.asm	/^c0106f1c:	75 07                	jne    c0106f25 <__slob_get_free_pages+0x30>$/;"	l
c0106f1e	obj/kernel.asm	/^c0106f1e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106f23	obj/kernel.asm	/^c0106f23:	eb 0e                	jmp    c0106f33 <__slob_get_free_pages+0x3e>$/;"	l
c0106f25	obj/kernel.asm	/^c0106f25:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106f28	obj/kernel.asm	/^c0106f28:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106f2b	obj/kernel.asm	/^c0106f2b:	e8 41 ff ff ff       	call   c0106e71 <page2kva>$/;"	l
c0106f30	obj/kernel.asm	/^c0106f30:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106f33	obj/kernel.asm	/^c0106f33:	c9                   	leave  $/;"	l
c0106f34	obj/kernel.asm	/^c0106f34:	c3                   	ret    $/;"	l
c0106f35	obj/kernel.asm	/^c0106f35 <__slob_free_pages>:$/;"	l
c0106f35	obj/kernel.asm	/^c0106f35:	55                   	push   %ebp$/;"	l
c0106f36	obj/kernel.asm	/^c0106f36:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f38	obj/kernel.asm	/^c0106f38:	53                   	push   %ebx$/;"	l
c0106f39	obj/kernel.asm	/^c0106f39:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106f3c	obj/kernel.asm	/^c0106f3c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106f3f	obj/kernel.asm	/^c0106f3f:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0106f44	obj/kernel.asm	/^c0106f44:	89 c1                	mov    %eax,%ecx$/;"	l
c0106f46	obj/kernel.asm	/^c0106f46:	d3 e2                	shl    %cl,%edx$/;"	d
c0106f48	obj/kernel.asm	/^c0106f48:	89 d0                	mov    %edx,%eax$/;"	l
c0106f4a	obj/kernel.asm	/^c0106f4a:	89 c3                	mov    %eax,%ebx$/;"	l
c0106f4c	obj/kernel.asm	/^c0106f4c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106f4f	obj/kernel.asm	/^c0106f4f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106f52	obj/kernel.asm	/^c0106f52:	50                   	push   %eax$/;"	l
c0106f53	obj/kernel.asm	/^c0106f53:	e8 5e ff ff ff       	call   c0106eb6 <kva2page>$/;"	l
c0106f58	obj/kernel.asm	/^c0106f58:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106f5b	obj/kernel.asm	/^c0106f5b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106f5e	obj/kernel.asm	/^c0106f5e:	53                   	push   %ebx$/;"	l
c0106f5f	obj/kernel.asm	/^c0106f5f:	50                   	push   %eax$/;"	l
c0106f60	obj/kernel.asm	/^c0106f60:	e8 72 ca ff ff       	call   c01039d7 <free_pages>$/;"	l
c0106f65	obj/kernel.asm	/^c0106f65:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106f68	obj/kernel.asm	/^c0106f68:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0106f6b	obj/kernel.asm	/^c0106f6b:	c9                   	leave  $/;"	l
c0106f6c	obj/kernel.asm	/^c0106f6c:	c3                   	ret    $/;"	l
c0106f6d	obj/kernel.asm	/^c0106f6d <slob_alloc>:$/;"	l
c0106f6d	obj/kernel.asm	/^c0106f6d:	55                   	push   %ebp$/;"	l
c0106f6e	obj/kernel.asm	/^c0106f6e:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f70	obj/kernel.asm	/^c0106f70:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0106f73	obj/kernel.asm	/^c0106f73:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106f76	obj/kernel.asm	/^c0106f76:	83 c0 08             	add    $0x8,%eax$/;"	l
c0106f79	obj/kernel.asm	/^c0106f79:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c0106f7e	obj/kernel.asm	/^c0106f7e:	76 16                	jbe    c0106f96 <slob_alloc+0x29>$/;"	l
c0106f80	obj/kernel.asm	/^c0106f80:	68 f0 cd 10 c0       	push   $0xc010cdf0$/;"	l
c0106f85	obj/kernel.asm	/^c0106f85:	68 0f ce 10 c0       	push   $0xc010ce0f$/;"	l
c0106f8a	obj/kernel.asm	/^c0106f8a:	6a 64                	push   $0x64$/;"	l
c0106f8c	obj/kernel.asm	/^c0106f8c:	68 24 ce 10 c0       	push   $0xc010ce24$/;"	l
c0106f91	obj/kernel.asm	/^c0106f91:	e8 44 94 ff ff       	call   c01003da <__panic>$/;"	l
c0106f96	obj/kernel.asm	/^c0106f96:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106f9d	obj/kernel.asm	/^c0106f9d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0106fa4	obj/kernel.asm	/^c0106fa4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106fa7	obj/kernel.asm	/^c0106fa7:	83 c0 07             	add    $0x7,%eax$/;"	l
c0106faa	obj/kernel.asm	/^c0106faa:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c0106fad	obj/kernel.asm	/^c0106fad:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0106fb0	obj/kernel.asm	/^c0106fb0:	e8 1c fe ff ff       	call   c0106dd1 <__intr_save>$/;"	l
c0106fb5	obj/kernel.asm	/^c0106fb5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106fb8	obj/kernel.asm	/^c0106fb8:	a1 a0 9a 12 c0       	mov    0xc0129aa0,%eax$/;"	l
c0106fbd	obj/kernel.asm	/^c0106fbd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106fc0	obj/kernel.asm	/^c0106fc0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106fc3	obj/kernel.asm	/^c0106fc3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106fc6	obj/kernel.asm	/^c0106fc6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106fc9	obj/kernel.asm	/^c0106fc9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0106fcd	obj/kernel.asm	/^c0106fcd:	74 25                	je     c0106ff4 <slob_alloc+0x87>$/;"	l
c0106fcf	obj/kernel.asm	/^c0106fcf:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0106fd2	obj/kernel.asm	/^c0106fd2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106fd5	obj/kernel.asm	/^c0106fd5:	01 d0                	add    %edx,%eax$/;"	l
c0106fd7	obj/kernel.asm	/^c0106fd7:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0106fda	obj/kernel.asm	/^c0106fda:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106fdd	obj/kernel.asm	/^c0106fdd:	f7 d8                	neg    %eax$/;"	l
c0106fdf	obj/kernel.asm	/^c0106fdf:	21 d0                	and    %edx,%eax$/;"	l
c0106fe1	obj/kernel.asm	/^c0106fe1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106fe4	obj/kernel.asm	/^c0106fe4:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0106fe7	obj/kernel.asm	/^c0106fe7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106fea	obj/kernel.asm	/^c0106fea:	29 c2                	sub    %eax,%edx$/;"	l
c0106fec	obj/kernel.asm	/^c0106fec:	89 d0                	mov    %edx,%eax$/;"	l
c0106fee	obj/kernel.asm	/^c0106fee:	c1 f8 03             	sar    $0x3,%eax$/;"	l
c0106ff1	obj/kernel.asm	/^c0106ff1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106ff4	obj/kernel.asm	/^c0106ff4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106ff7	obj/kernel.asm	/^c0106ff7:	8b 00                	mov    (%eax),%eax$/;"	l
c0106ff9	obj/kernel.asm	/^c0106ff9:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c0106ffc	obj/kernel.asm	/^c0106ffc:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0106fff	obj/kernel.asm	/^c0106fff:	01 ca                	add    %ecx,%edx$/;"	l
c0107001	obj/kernel.asm	/^c0107001:	39 d0                	cmp    %edx,%eax$/;"	l
c0107003	obj/kernel.asm	/^c0107003:	0f 8c b1 00 00 00    	jl     c01070ba <slob_alloc+0x14d>$/;"	l
c0107009	obj/kernel.asm	/^c0107009:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010700d	obj/kernel.asm	/^c010700d:	74 38                	je     c0107047 <slob_alloc+0xda>$/;"	l
c010700f	obj/kernel.asm	/^c010700f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107012	obj/kernel.asm	/^c0107012:	8b 00                	mov    (%eax),%eax$/;"	l
c0107014	obj/kernel.asm	/^c0107014:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
c0107017	obj/kernel.asm	/^c0107017:	89 c2                	mov    %eax,%edx$/;"	l
c0107019	obj/kernel.asm	/^c0107019:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010701c	obj/kernel.asm	/^c010701c:	89 10                	mov    %edx,(%eax)$/;"	l
c010701e	obj/kernel.asm	/^c010701e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107021	obj/kernel.asm	/^c0107021:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107024	obj/kernel.asm	/^c0107024:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107027	obj/kernel.asm	/^c0107027:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010702a	obj/kernel.asm	/^c010702a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010702d	obj/kernel.asm	/^c010702d:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107030	obj/kernel.asm	/^c0107030:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107033	obj/kernel.asm	/^c0107033:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107036	obj/kernel.asm	/^c0107036:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0107039	obj/kernel.asm	/^c0107039:	89 10                	mov    %edx,(%eax)$/;"	l
c010703b	obj/kernel.asm	/^c010703b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010703e	obj/kernel.asm	/^c010703e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107041	obj/kernel.asm	/^c0107041:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107044	obj/kernel.asm	/^c0107044:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107047	obj/kernel.asm	/^c0107047:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010704a	obj/kernel.asm	/^c010704a:	8b 00                	mov    (%eax),%eax$/;"	l
c010704c	obj/kernel.asm	/^c010704c:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c010704f	obj/kernel.asm	/^c010704f:	75 0e                	jne    c010705f <slob_alloc+0xf2>$/;"	l
c0107051	obj/kernel.asm	/^c0107051:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107054	obj/kernel.asm	/^c0107054:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107057	obj/kernel.asm	/^c0107057:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010705a	obj/kernel.asm	/^c010705a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010705d	obj/kernel.asm	/^c010705d:	eb 3c                	jmp    c010709b <slob_alloc+0x12e>$/;"	l
c010705f	obj/kernel.asm	/^c010705f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107062	obj/kernel.asm	/^c0107062:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0107069	obj/kernel.asm	/^c0107069:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010706c	obj/kernel.asm	/^c010706c:	01 c2                	add    %eax,%edx$/;"	l
c010706e	obj/kernel.asm	/^c010706e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107071	obj/kernel.asm	/^c0107071:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107074	obj/kernel.asm	/^c0107074:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107077	obj/kernel.asm	/^c0107077:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010707a	obj/kernel.asm	/^c010707a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010707d	obj/kernel.asm	/^c010707d:	8b 12                	mov    (%edx),%edx$/;"	l
c010707f	obj/kernel.asm	/^c010707f:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
c0107082	obj/kernel.asm	/^c0107082:	89 10                	mov    %edx,(%eax)$/;"	l
c0107084	obj/kernel.asm	/^c0107084:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107087	obj/kernel.asm	/^c0107087:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010708a	obj/kernel.asm	/^c010708a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010708d	obj/kernel.asm	/^c010708d:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
c0107090	obj/kernel.asm	/^c0107090:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107093	obj/kernel.asm	/^c0107093:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107096	obj/kernel.asm	/^c0107096:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0107099	obj/kernel.asm	/^c0107099:	89 10                	mov    %edx,(%eax)$/;"	l
c010709b	obj/kernel.asm	/^c010709b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010709e	obj/kernel.asm	/^c010709e:	a3 a0 9a 12 c0       	mov    %eax,0xc0129aa0$/;"	l
c01070a3	obj/kernel.asm	/^c01070a3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01070a6	obj/kernel.asm	/^c01070a6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01070a9	obj/kernel.asm	/^c01070a9:	50                   	push   %eax$/;"	l
c01070aa	obj/kernel.asm	/^c01070aa:	e8 4c fd ff ff       	call   c0106dfb <__intr_restore>$/;"	l
c01070af	obj/kernel.asm	/^c01070af:	83 c4 10             	add    $0x10,%esp$/;"	l
c01070b2	obj/kernel.asm	/^c01070b2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01070b5	obj/kernel.asm	/^c01070b5:	e9 80 00 00 00       	jmp    c010713a <slob_alloc+0x1cd>$/;"	l
c01070ba	obj/kernel.asm	/^c01070ba:	a1 a0 9a 12 c0       	mov    0xc0129aa0,%eax$/;"	l
c01070bf	obj/kernel.asm	/^c01070bf:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c01070c2	obj/kernel.asm	/^c01070c2:	75 62                	jne    c0107126 <slob_alloc+0x1b9>$/;"	l
c01070c4	obj/kernel.asm	/^c01070c4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01070c7	obj/kernel.asm	/^c01070c7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01070ca	obj/kernel.asm	/^c01070ca:	50                   	push   %eax$/;"	l
c01070cb	obj/kernel.asm	/^c01070cb:	e8 2b fd ff ff       	call   c0106dfb <__intr_restore>$/;"	l
c01070d0	obj/kernel.asm	/^c01070d0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01070d3	obj/kernel.asm	/^c01070d3:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c01070da	obj/kernel.asm	/^c01070da:	75 07                	jne    c01070e3 <slob_alloc+0x176>$/;"	l
c01070dc	obj/kernel.asm	/^c01070dc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01070e1	obj/kernel.asm	/^c01070e1:	eb 57                	jmp    c010713a <slob_alloc+0x1cd>$/;"	l
c01070e3	obj/kernel.asm	/^c01070e3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01070e6	obj/kernel.asm	/^c01070e6:	6a 00                	push   $0x0$/;"	l
c01070e8	obj/kernel.asm	/^c01070e8:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01070eb	obj/kernel.asm	/^c01070eb:	e8 05 fe ff ff       	call   c0106ef5 <__slob_get_free_pages>$/;"	l
c01070f0	obj/kernel.asm	/^c01070f0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01070f3	obj/kernel.asm	/^c01070f3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01070f6	obj/kernel.asm	/^c01070f6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01070fa	obj/kernel.asm	/^c01070fa:	75 07                	jne    c0107103 <slob_alloc+0x196>$/;"	l
c01070fc	obj/kernel.asm	/^c01070fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107101	obj/kernel.asm	/^c0107101:	eb 37                	jmp    c010713a <slob_alloc+0x1cd>$/;"	l
c0107103	obj/kernel.asm	/^c0107103:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107106	obj/kernel.asm	/^c0107106:	68 00 10 00 00       	push   $0x1000$/;"	l
c010710b	obj/kernel.asm	/^c010710b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010710e	obj/kernel.asm	/^c010710e:	e8 29 00 00 00       	call   c010713c <slob_free>$/;"	l
c0107113	obj/kernel.asm	/^c0107113:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107116	obj/kernel.asm	/^c0107116:	e8 b6 fc ff ff       	call   c0106dd1 <__intr_save>$/;"	l
c010711b	obj/kernel.asm	/^c010711b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010711e	obj/kernel.asm	/^c010711e:	a1 a0 9a 12 c0       	mov    0xc0129aa0,%eax$/;"	l
c0107123	obj/kernel.asm	/^c0107123:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107126	obj/kernel.asm	/^c0107126:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107129	obj/kernel.asm	/^c0107129:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010712c	obj/kernel.asm	/^c010712c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010712f	obj/kernel.asm	/^c010712f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107132	obj/kernel.asm	/^c0107132:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107135	obj/kernel.asm	/^c0107135:	e9 8f fe ff ff       	jmp    c0106fc9 <slob_alloc+0x5c>$/;"	l
c010713a	obj/kernel.asm	/^c010713a:	c9                   	leave  $/;"	l
c010713b	obj/kernel.asm	/^c010713b:	c3                   	ret    $/;"	l
c010713c	obj/kernel.asm	/^c010713c <slob_free>:$/;"	l
c010713c	obj/kernel.asm	/^c010713c:	55                   	push   %ebp$/;"	l
c010713d	obj/kernel.asm	/^c010713d:	89 e5                	mov    %esp,%ebp$/;"	l
c010713f	obj/kernel.asm	/^c010713f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107142	obj/kernel.asm	/^c0107142:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107145	obj/kernel.asm	/^c0107145:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107148	obj/kernel.asm	/^c0107148:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010714c	obj/kernel.asm	/^c010714c:	75 05                	jne    c0107153 <slob_free+0x17>$/;"	l
c010714e	obj/kernel.asm	/^c010714e:	e9 03 01 00 00       	jmp    c0107256 <slob_free+0x11a>$/;"	l
c0107153	obj/kernel.asm	/^c0107153:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0107157	obj/kernel.asm	/^c0107157:	74 10                	je     c0107169 <slob_free+0x2d>$/;"	l
c0107159	obj/kernel.asm	/^c0107159:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010715c	obj/kernel.asm	/^c010715c:	83 c0 07             	add    $0x7,%eax$/;"	l
c010715f	obj/kernel.asm	/^c010715f:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c0107162	obj/kernel.asm	/^c0107162:	89 c2                	mov    %eax,%edx$/;"	l
c0107164	obj/kernel.asm	/^c0107164:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107167	obj/kernel.asm	/^c0107167:	89 10                	mov    %edx,(%eax)$/;"	l
c0107169	obj/kernel.asm	/^c0107169:	e8 63 fc ff ff       	call   c0106dd1 <__intr_save>$/;"	l
c010716e	obj/kernel.asm	/^c010716e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107171	obj/kernel.asm	/^c0107171:	a1 a0 9a 12 c0       	mov    0xc0129aa0,%eax$/;"	l
c0107176	obj/kernel.asm	/^c0107176:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107179	obj/kernel.asm	/^c0107179:	eb 27                	jmp    c01071a2 <slob_free+0x66>$/;"	l
c010717b	obj/kernel.asm	/^c010717b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010717e	obj/kernel.asm	/^c010717e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107181	obj/kernel.asm	/^c0107181:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107184	obj/kernel.asm	/^c0107184:	77 13                	ja     c0107199 <slob_free+0x5d>$/;"	l
c0107186	obj/kernel.asm	/^c0107186:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107189	obj/kernel.asm	/^c0107189:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010718c	obj/kernel.asm	/^c010718c:	77 27                	ja     c01071b5 <slob_free+0x79>$/;"	l
c010718e	obj/kernel.asm	/^c010718e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107191	obj/kernel.asm	/^c0107191:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107194	obj/kernel.asm	/^c0107194:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0107197	obj/kernel.asm	/^c0107197:	77 1c                	ja     c01071b5 <slob_free+0x79>$/;"	l
c0107199	obj/kernel.asm	/^c0107199:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010719c	obj/kernel.asm	/^c010719c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010719f	obj/kernel.asm	/^c010719f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01071a2	obj/kernel.asm	/^c01071a2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071a5	obj/kernel.asm	/^c01071a5:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01071a8	obj/kernel.asm	/^c01071a8:	76 d1                	jbe    c010717b <slob_free+0x3f>$/;"	l
c01071aa	obj/kernel.asm	/^c01071aa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071ad	obj/kernel.asm	/^c01071ad:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01071b0	obj/kernel.asm	/^c01071b0:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01071b3	obj/kernel.asm	/^c01071b3:	76 c6                	jbe    c010717b <slob_free+0x3f>$/;"	l
c01071b5	obj/kernel.asm	/^c01071b5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071b8	obj/kernel.asm	/^c01071b8:	8b 00                	mov    (%eax),%eax$/;"	l
c01071ba	obj/kernel.asm	/^c01071ba:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01071c1	obj/kernel.asm	/^c01071c1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071c4	obj/kernel.asm	/^c01071c4:	01 c2                	add    %eax,%edx$/;"	l
c01071c6	obj/kernel.asm	/^c01071c6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071c9	obj/kernel.asm	/^c01071c9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01071cc	obj/kernel.asm	/^c01071cc:	39 c2                	cmp    %eax,%edx$/;"	l
c01071ce	obj/kernel.asm	/^c01071ce:	75 25                	jne    c01071f5 <slob_free+0xb9>$/;"	l
c01071d0	obj/kernel.asm	/^c01071d0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071d3	obj/kernel.asm	/^c01071d3:	8b 10                	mov    (%eax),%edx$/;"	l
c01071d5	obj/kernel.asm	/^c01071d5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071d8	obj/kernel.asm	/^c01071d8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01071db	obj/kernel.asm	/^c01071db:	8b 00                	mov    (%eax),%eax$/;"	l
c01071dd	obj/kernel.asm	/^c01071dd:	01 c2                	add    %eax,%edx$/;"	l
c01071df	obj/kernel.asm	/^c01071df:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071e2	obj/kernel.asm	/^c01071e2:	89 10                	mov    %edx,(%eax)$/;"	l
c01071e4	obj/kernel.asm	/^c01071e4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071e7	obj/kernel.asm	/^c01071e7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01071ea	obj/kernel.asm	/^c01071ea:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01071ed	obj/kernel.asm	/^c01071ed:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071f0	obj/kernel.asm	/^c01071f0:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01071f3	obj/kernel.asm	/^c01071f3:	eb 0c                	jmp    c0107201 <slob_free+0xc5>$/;"	l
c01071f5	obj/kernel.asm	/^c01071f5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071f8	obj/kernel.asm	/^c01071f8:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01071fb	obj/kernel.asm	/^c01071fb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071fe	obj/kernel.asm	/^c01071fe:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107201	obj/kernel.asm	/^c0107201:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107204	obj/kernel.asm	/^c0107204:	8b 00                	mov    (%eax),%eax$/;"	l
c0107206	obj/kernel.asm	/^c0107206:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010720d	obj/kernel.asm	/^c010720d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107210	obj/kernel.asm	/^c0107210:	01 d0                	add    %edx,%eax$/;"	l
c0107212	obj/kernel.asm	/^c0107212:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0107215	obj/kernel.asm	/^c0107215:	75 1f                	jne    c0107236 <slob_free+0xfa>$/;"	l
c0107217	obj/kernel.asm	/^c0107217:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010721a	obj/kernel.asm	/^c010721a:	8b 10                	mov    (%eax),%edx$/;"	l
c010721c	obj/kernel.asm	/^c010721c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010721f	obj/kernel.asm	/^c010721f:	8b 00                	mov    (%eax),%eax$/;"	l
c0107221	obj/kernel.asm	/^c0107221:	01 c2                	add    %eax,%edx$/;"	l
c0107223	obj/kernel.asm	/^c0107223:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107226	obj/kernel.asm	/^c0107226:	89 10                	mov    %edx,(%eax)$/;"	l
c0107228	obj/kernel.asm	/^c0107228:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010722b	obj/kernel.asm	/^c010722b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010722e	obj/kernel.asm	/^c010722e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107231	obj/kernel.asm	/^c0107231:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107234	obj/kernel.asm	/^c0107234:	eb 09                	jmp    c010723f <slob_free+0x103>$/;"	l
c0107236	obj/kernel.asm	/^c0107236:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107239	obj/kernel.asm	/^c0107239:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010723c	obj/kernel.asm	/^c010723c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010723f	obj/kernel.asm	/^c010723f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107242	obj/kernel.asm	/^c0107242:	a3 a0 9a 12 c0       	mov    %eax,0xc0129aa0$/;"	l
c0107247	obj/kernel.asm	/^c0107247:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010724a	obj/kernel.asm	/^c010724a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010724d	obj/kernel.asm	/^c010724d:	50                   	push   %eax$/;"	l
c010724e	obj/kernel.asm	/^c010724e:	e8 a8 fb ff ff       	call   c0106dfb <__intr_restore>$/;"	l
c0107253	obj/kernel.asm	/^c0107253:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107256	obj/kernel.asm	/^c0107256:	c9                   	leave  $/;"	l
c0107257	obj/kernel.asm	/^c0107257:	c3                   	ret    $/;"	l
c0107258	obj/kernel.asm	/^c0107258 <slob_init>:$/;"	l
c0107258	obj/kernel.asm	/^c0107258:	55                   	push   %ebp$/;"	l
c0107259	obj/kernel.asm	/^c0107259:	89 e5                	mov    %esp,%ebp$/;"	l
c010725b	obj/kernel.asm	/^c010725b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010725e	obj/kernel.asm	/^c010725e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107261	obj/kernel.asm	/^c0107261:	68 36 ce 10 c0       	push   $0xc010ce36$/;"	l
c0107266	obj/kernel.asm	/^c0107266:	e8 0a 90 ff ff       	call   c0100275 <cprintf>$/;"	l
c010726b	obj/kernel.asm	/^c010726b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010726e	obj/kernel.asm	/^c010726e:	c9                   	leave  $/;"	l
c010726f	obj/kernel.asm	/^c010726f:	c3                   	ret    $/;"	l
c0107270	obj/kernel.asm	/^c0107270 <kmalloc_init>:$/;"	l
c0107270	obj/kernel.asm	/^c0107270:	55                   	push   %ebp$/;"	l
c0107271	obj/kernel.asm	/^c0107271:	89 e5                	mov    %esp,%ebp$/;"	l
c0107273	obj/kernel.asm	/^c0107273:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107276	obj/kernel.asm	/^c0107276:	e8 dd ff ff ff       	call   c0107258 <slob_init>$/;"	l
c010727b	obj/kernel.asm	/^c010727b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010727e	obj/kernel.asm	/^c010727e:	68 4a ce 10 c0       	push   $0xc010ce4a$/;"	l
c0107283	obj/kernel.asm	/^c0107283:	e8 ed 8f ff ff       	call   c0100275 <cprintf>$/;"	l
c0107288	obj/kernel.asm	/^c0107288:	83 c4 10             	add    $0x10,%esp$/;"	l
c010728b	obj/kernel.asm	/^c010728b:	c9                   	leave  $/;"	l
c010728c	obj/kernel.asm	/^c010728c:	c3                   	ret    $/;"	l
c010728d	obj/kernel.asm	/^c010728d <slob_allocated>:$/;"	l
c010728d	obj/kernel.asm	/^c010728d:	55                   	push   %ebp$/;"	l
c010728e	obj/kernel.asm	/^c010728e:	89 e5                	mov    %esp,%ebp$/;"	l
c0107290	obj/kernel.asm	/^c0107290:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107295	obj/kernel.asm	/^c0107295:	5d                   	pop    %ebp$/;"	l
c0107296	obj/kernel.asm	/^c0107296:	c3                   	ret    $/;"	l
c0107297	obj/kernel.asm	/^c0107297 <kallocated>:$/;"	l
c0107297	obj/kernel.asm	/^c0107297:	55                   	push   %ebp$/;"	l
c0107298	obj/kernel.asm	/^c0107298:	89 e5                	mov    %esp,%ebp$/;"	l
c010729a	obj/kernel.asm	/^c010729a:	e8 ee ff ff ff       	call   c010728d <slob_allocated>$/;"	l
c010729f	obj/kernel.asm	/^c010729f:	5d                   	pop    %ebp$/;"	l
c01072a0	obj/kernel.asm	/^c01072a0:	c3                   	ret    $/;"	l
c01072a1	obj/kernel.asm	/^c01072a1 <find_order>:$/;"	l
c01072a1	obj/kernel.asm	/^c01072a1:	55                   	push   %ebp$/;"	l
c01072a2	obj/kernel.asm	/^c01072a2:	89 e5                	mov    %esp,%ebp$/;"	l
c01072a4	obj/kernel.asm	/^c01072a4:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01072a7	obj/kernel.asm	/^c01072a7:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01072ae	obj/kernel.asm	/^c01072ae:	eb 07                	jmp    c01072b7 <find_order+0x16>$/;"	l
c01072b0	obj/kernel.asm	/^c01072b0:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01072b4	obj/kernel.asm	/^c01072b4:	d1 7d 08             	sarl   0x8(%ebp)$/;"	d
c01072b7	obj/kernel.asm	/^c01072b7:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c01072be	obj/kernel.asm	/^c01072be:	7f f0                	jg     c01072b0 <find_order+0xf>$/;"	l
c01072c0	obj/kernel.asm	/^c01072c0:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01072c3	obj/kernel.asm	/^c01072c3:	c9                   	leave  $/;"	l
c01072c4	obj/kernel.asm	/^c01072c4:	c3                   	ret    $/;"	l
c01072c5	obj/kernel.asm	/^c01072c5 <__kmalloc>:$/;"	l
c01072c5	obj/kernel.asm	/^c01072c5:	55                   	push   %ebp$/;"	l
c01072c6	obj/kernel.asm	/^c01072c6:	89 e5                	mov    %esp,%ebp$/;"	l
c01072c8	obj/kernel.asm	/^c01072c8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01072cb	obj/kernel.asm	/^c01072cb:	81 7d 08 f7 0f 00 00 	cmpl   $0xff7,0x8(%ebp)$/;"	l
c01072d2	obj/kernel.asm	/^c01072d2:	77 35                	ja     c0107309 <__kmalloc+0x44>$/;"	l
c01072d4	obj/kernel.asm	/^c01072d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01072d7	obj/kernel.asm	/^c01072d7:	83 c0 08             	add    $0x8,%eax$/;"	l
c01072da	obj/kernel.asm	/^c01072da:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01072dd	obj/kernel.asm	/^c01072dd:	6a 00                	push   $0x0$/;"	l
c01072df	obj/kernel.asm	/^c01072df:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01072e2	obj/kernel.asm	/^c01072e2:	50                   	push   %eax$/;"	l
c01072e3	obj/kernel.asm	/^c01072e3:	e8 85 fc ff ff       	call   c0106f6d <slob_alloc>$/;"	l
c01072e8	obj/kernel.asm	/^c01072e8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01072eb	obj/kernel.asm	/^c01072eb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01072ee	obj/kernel.asm	/^c01072ee:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01072f2	obj/kernel.asm	/^c01072f2:	74 0b                	je     c01072ff <__kmalloc+0x3a>$/;"	l
c01072f4	obj/kernel.asm	/^c01072f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01072f7	obj/kernel.asm	/^c01072f7:	83 c0 08             	add    $0x8,%eax$/;"	l
c01072fa	obj/kernel.asm	/^c01072fa:	e9 b3 00 00 00       	jmp    c01073b2 <__kmalloc+0xed>$/;"	l
c01072ff	obj/kernel.asm	/^c01072ff:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107304	obj/kernel.asm	/^c0107304:	e9 a9 00 00 00       	jmp    c01073b2 <__kmalloc+0xed>$/;"	l
c0107309	obj/kernel.asm	/^c0107309:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010730c	obj/kernel.asm	/^c010730c:	6a 00                	push   $0x0$/;"	l
c010730e	obj/kernel.asm	/^c010730e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0107311	obj/kernel.asm	/^c0107311:	6a 0c                	push   $0xc$/;"	l
c0107313	obj/kernel.asm	/^c0107313:	e8 55 fc ff ff       	call   c0106f6d <slob_alloc>$/;"	l
c0107318	obj/kernel.asm	/^c0107318:	83 c4 10             	add    $0x10,%esp$/;"	l
c010731b	obj/kernel.asm	/^c010731b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010731e	obj/kernel.asm	/^c010731e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0107322	obj/kernel.asm	/^c0107322:	75 0a                	jne    c010732e <__kmalloc+0x69>$/;"	l
c0107324	obj/kernel.asm	/^c0107324:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107329	obj/kernel.asm	/^c0107329:	e9 84 00 00 00       	jmp    c01073b2 <__kmalloc+0xed>$/;"	l
c010732e	obj/kernel.asm	/^c010732e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107331	obj/kernel.asm	/^c0107331:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107334	obj/kernel.asm	/^c0107334:	50                   	push   %eax$/;"	l
c0107335	obj/kernel.asm	/^c0107335:	e8 67 ff ff ff       	call   c01072a1 <find_order>$/;"	l
c010733a	obj/kernel.asm	/^c010733a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010733d	obj/kernel.asm	/^c010733d:	89 c2                	mov    %eax,%edx$/;"	l
c010733f	obj/kernel.asm	/^c010733f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107342	obj/kernel.asm	/^c0107342:	89 10                	mov    %edx,(%eax)$/;"	l
c0107344	obj/kernel.asm	/^c0107344:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107347	obj/kernel.asm	/^c0107347:	8b 00                	mov    (%eax),%eax$/;"	l
c0107349	obj/kernel.asm	/^c0107349:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010734c	obj/kernel.asm	/^c010734c:	50                   	push   %eax$/;"	l
c010734d	obj/kernel.asm	/^c010734d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0107350	obj/kernel.asm	/^c0107350:	e8 a0 fb ff ff       	call   c0106ef5 <__slob_get_free_pages>$/;"	l
c0107355	obj/kernel.asm	/^c0107355:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107358	obj/kernel.asm	/^c0107358:	89 c2                	mov    %eax,%edx$/;"	l
c010735a	obj/kernel.asm	/^c010735a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010735d	obj/kernel.asm	/^c010735d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107360	obj/kernel.asm	/^c0107360:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107363	obj/kernel.asm	/^c0107363:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107366	obj/kernel.asm	/^c0107366:	85 c0                	test   %eax,%eax$/;"	l
c0107368	obj/kernel.asm	/^c0107368:	74 33                	je     c010739d <__kmalloc+0xd8>$/;"	l
c010736a	obj/kernel.asm	/^c010736a:	e8 62 fa ff ff       	call   c0106dd1 <__intr_save>$/;"	l
c010736f	obj/kernel.asm	/^c010736f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107372	obj/kernel.asm	/^c0107372:	8b 15 bc bf 19 c0    	mov    0xc019bfbc,%edx$/;"	l
c0107378	obj/kernel.asm	/^c0107378:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010737b	obj/kernel.asm	/^c010737b:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010737e	obj/kernel.asm	/^c010737e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107381	obj/kernel.asm	/^c0107381:	a3 bc bf 19 c0       	mov    %eax,0xc019bfbc$/;"	l
c0107386	obj/kernel.asm	/^c0107386:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107389	obj/kernel.asm	/^c0107389:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010738c	obj/kernel.asm	/^c010738c:	50                   	push   %eax$/;"	l
c010738d	obj/kernel.asm	/^c010738d:	e8 69 fa ff ff       	call   c0106dfb <__intr_restore>$/;"	l
c0107392	obj/kernel.asm	/^c0107392:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107395	obj/kernel.asm	/^c0107395:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107398	obj/kernel.asm	/^c0107398:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010739b	obj/kernel.asm	/^c010739b:	eb 15                	jmp    c01073b2 <__kmalloc+0xed>$/;"	l
c010739d	obj/kernel.asm	/^c010739d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01073a0	obj/kernel.asm	/^c01073a0:	6a 0c                	push   $0xc$/;"	l
c01073a2	obj/kernel.asm	/^c01073a2:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01073a5	obj/kernel.asm	/^c01073a5:	e8 92 fd ff ff       	call   c010713c <slob_free>$/;"	l
c01073aa	obj/kernel.asm	/^c01073aa:	83 c4 10             	add    $0x10,%esp$/;"	l
c01073ad	obj/kernel.asm	/^c01073ad:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01073b2	obj/kernel.asm	/^c01073b2:	c9                   	leave  $/;"	l
c01073b3	obj/kernel.asm	/^c01073b3:	c3                   	ret    $/;"	l
c01073b4	obj/kernel.asm	/^c01073b4 <kmalloc>:$/;"	l
c01073b4	obj/kernel.asm	/^c01073b4:	55                   	push   %ebp$/;"	l
c01073b5	obj/kernel.asm	/^c01073b5:	89 e5                	mov    %esp,%ebp$/;"	l
c01073b7	obj/kernel.asm	/^c01073b7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01073ba	obj/kernel.asm	/^c01073ba:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01073bd	obj/kernel.asm	/^c01073bd:	6a 00                	push   $0x0$/;"	l
c01073bf	obj/kernel.asm	/^c01073bf:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01073c2	obj/kernel.asm	/^c01073c2:	e8 fe fe ff ff       	call   c01072c5 <__kmalloc>$/;"	l
c01073c7	obj/kernel.asm	/^c01073c7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01073ca	obj/kernel.asm	/^c01073ca:	c9                   	leave  $/;"	l
c01073cb	obj/kernel.asm	/^c01073cb:	c3                   	ret    $/;"	l
c01073cc	obj/kernel.asm	/^c01073cc <kfree>:$/;"	l
c01073cc	obj/kernel.asm	/^c01073cc:	55                   	push   %ebp$/;"	l
c01073cd	obj/kernel.asm	/^c01073cd:	89 e5                	mov    %esp,%ebp$/;"	l
c01073cf	obj/kernel.asm	/^c01073cf:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01073d2	obj/kernel.asm	/^c01073d2:	c7 45 f0 bc bf 19 c0 	movl   $0xc019bfbc,-0x10(%ebp)$/;"	l
c01073d9	obj/kernel.asm	/^c01073d9:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01073dd	obj/kernel.asm	/^c01073dd:	75 05                	jne    c01073e4 <kfree+0x18>$/;"	l
c01073df	obj/kernel.asm	/^c01073df:	e9 aa 00 00 00       	jmp    c010748e <kfree+0xc2>$/;"	l
c01073e4	obj/kernel.asm	/^c01073e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01073e7	obj/kernel.asm	/^c01073e7:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01073ec	obj/kernel.asm	/^c01073ec:	85 c0                	test   %eax,%eax$/;"	l
c01073ee	obj/kernel.asm	/^c01073ee:	0f 85 85 00 00 00    	jne    c0107479 <kfree+0xad>$/;"	l
c01073f4	obj/kernel.asm	/^c01073f4:	e8 d8 f9 ff ff       	call   c0106dd1 <__intr_save>$/;"	l
c01073f9	obj/kernel.asm	/^c01073f9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01073fc	obj/kernel.asm	/^c01073fc:	a1 bc bf 19 c0       	mov    0xc019bfbc,%eax$/;"	l
c0107401	obj/kernel.asm	/^c0107401:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107404	obj/kernel.asm	/^c0107404:	eb 5e                	jmp    c0107464 <kfree+0x98>$/;"	l
c0107406	obj/kernel.asm	/^c0107406:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107409	obj/kernel.asm	/^c0107409:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010740c	obj/kernel.asm	/^c010740c:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010740f	obj/kernel.asm	/^c010740f:	75 41                	jne    c0107452 <kfree+0x86>$/;"	l
c0107411	obj/kernel.asm	/^c0107411:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107414	obj/kernel.asm	/^c0107414:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107417	obj/kernel.asm	/^c0107417:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010741a	obj/kernel.asm	/^c010741a:	89 10                	mov    %edx,(%eax)$/;"	l
c010741c	obj/kernel.asm	/^c010741c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010741f	obj/kernel.asm	/^c010741f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107422	obj/kernel.asm	/^c0107422:	50                   	push   %eax$/;"	l
c0107423	obj/kernel.asm	/^c0107423:	e8 d3 f9 ff ff       	call   c0106dfb <__intr_restore>$/;"	l
c0107428	obj/kernel.asm	/^c0107428:	83 c4 10             	add    $0x10,%esp$/;"	l
c010742b	obj/kernel.asm	/^c010742b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010742e	obj/kernel.asm	/^c010742e:	8b 10                	mov    (%eax),%edx$/;"	l
c0107430	obj/kernel.asm	/^c0107430:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107433	obj/kernel.asm	/^c0107433:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107436	obj/kernel.asm	/^c0107436:	52                   	push   %edx$/;"	l
c0107437	obj/kernel.asm	/^c0107437:	50                   	push   %eax$/;"	l
c0107438	obj/kernel.asm	/^c0107438:	e8 f8 fa ff ff       	call   c0106f35 <__slob_free_pages>$/;"	l
c010743d	obj/kernel.asm	/^c010743d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107440	obj/kernel.asm	/^c0107440:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107443	obj/kernel.asm	/^c0107443:	6a 0c                	push   $0xc$/;"	l
c0107445	obj/kernel.asm	/^c0107445:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0107448	obj/kernel.asm	/^c0107448:	e8 ef fc ff ff       	call   c010713c <slob_free>$/;"	l
c010744d	obj/kernel.asm	/^c010744d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107450	obj/kernel.asm	/^c0107450:	eb 3c                	jmp    c010748e <kfree+0xc2>$/;"	l
c0107452	obj/kernel.asm	/^c0107452:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107455	obj/kernel.asm	/^c0107455:	83 c0 08             	add    $0x8,%eax$/;"	l
c0107458	obj/kernel.asm	/^c0107458:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010745b	obj/kernel.asm	/^c010745b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010745e	obj/kernel.asm	/^c010745e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107461	obj/kernel.asm	/^c0107461:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107464	obj/kernel.asm	/^c0107464:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107468	obj/kernel.asm	/^c0107468:	75 9c                	jne    c0107406 <kfree+0x3a>$/;"	l
c010746a	obj/kernel.asm	/^c010746a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010746d	obj/kernel.asm	/^c010746d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107470	obj/kernel.asm	/^c0107470:	50                   	push   %eax$/;"	l
c0107471	obj/kernel.asm	/^c0107471:	e8 85 f9 ff ff       	call   c0106dfb <__intr_restore>$/;"	l
c0107476	obj/kernel.asm	/^c0107476:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107479	obj/kernel.asm	/^c0107479:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010747c	obj/kernel.asm	/^c010747c:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010747f	obj/kernel.asm	/^c010747f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107482	obj/kernel.asm	/^c0107482:	6a 00                	push   $0x0$/;"	l
c0107484	obj/kernel.asm	/^c0107484:	50                   	push   %eax$/;"	l
c0107485	obj/kernel.asm	/^c0107485:	e8 b2 fc ff ff       	call   c010713c <slob_free>$/;"	l
c010748a	obj/kernel.asm	/^c010748a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010748d	obj/kernel.asm	/^c010748d:	90                   	nop$/;"	l
c010748e	obj/kernel.asm	/^c010748e:	c9                   	leave  $/;"	l
c010748f	obj/kernel.asm	/^c010748f:	c3                   	ret    $/;"	l
c0107490	obj/kernel.asm	/^c0107490 <ksize>:$/;"	l
c0107490	obj/kernel.asm	/^c0107490:	55                   	push   %ebp$/;"	l
c0107491	obj/kernel.asm	/^c0107491:	89 e5                	mov    %esp,%ebp$/;"	l
c0107493	obj/kernel.asm	/^c0107493:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107496	obj/kernel.asm	/^c0107496:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010749a	obj/kernel.asm	/^c010749a:	75 07                	jne    c01074a3 <ksize+0x13>$/;"	l
c010749c	obj/kernel.asm	/^c010749c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01074a1	obj/kernel.asm	/^c01074a1:	eb 73                	jmp    c0107516 <ksize+0x86>$/;"	l
c01074a3	obj/kernel.asm	/^c01074a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01074a6	obj/kernel.asm	/^c01074a6:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01074ab	obj/kernel.asm	/^c01074ab:	85 c0                	test   %eax,%eax$/;"	l
c01074ad	obj/kernel.asm	/^c01074ad:	75 5c                	jne    c010750b <ksize+0x7b>$/;"	l
c01074af	obj/kernel.asm	/^c01074af:	e8 1d f9 ff ff       	call   c0106dd1 <__intr_save>$/;"	l
c01074b4	obj/kernel.asm	/^c01074b4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01074b7	obj/kernel.asm	/^c01074b7:	a1 bc bf 19 c0       	mov    0xc019bfbc,%eax$/;"	l
c01074bc	obj/kernel.asm	/^c01074bc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01074bf	obj/kernel.asm	/^c01074bf:	eb 35                	jmp    c01074f6 <ksize+0x66>$/;"	l
c01074c1	obj/kernel.asm	/^c01074c1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01074c4	obj/kernel.asm	/^c01074c4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01074c7	obj/kernel.asm	/^c01074c7:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01074ca	obj/kernel.asm	/^c01074ca:	75 21                	jne    c01074ed <ksize+0x5d>$/;"	l
c01074cc	obj/kernel.asm	/^c01074cc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01074cf	obj/kernel.asm	/^c01074cf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01074d2	obj/kernel.asm	/^c01074d2:	50                   	push   %eax$/;"	l
c01074d3	obj/kernel.asm	/^c01074d3:	e8 23 f9 ff ff       	call   c0106dfb <__intr_restore>$/;"	l
c01074d8	obj/kernel.asm	/^c01074d8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01074db	obj/kernel.asm	/^c01074db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01074de	obj/kernel.asm	/^c01074de:	8b 00                	mov    (%eax),%eax$/;"	l
c01074e0	obj/kernel.asm	/^c01074e0:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
c01074e5	obj/kernel.asm	/^c01074e5:	89 c1                	mov    %eax,%ecx$/;"	l
c01074e7	obj/kernel.asm	/^c01074e7:	d3 e2                	shl    %cl,%edx$/;"	d
c01074e9	obj/kernel.asm	/^c01074e9:	89 d0                	mov    %edx,%eax$/;"	l
c01074eb	obj/kernel.asm	/^c01074eb:	eb 29                	jmp    c0107516 <ksize+0x86>$/;"	l
c01074ed	obj/kernel.asm	/^c01074ed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01074f0	obj/kernel.asm	/^c01074f0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01074f3	obj/kernel.asm	/^c01074f3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01074f6	obj/kernel.asm	/^c01074f6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01074fa	obj/kernel.asm	/^c01074fa:	75 c5                	jne    c01074c1 <ksize+0x31>$/;"	l
c01074fc	obj/kernel.asm	/^c01074fc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01074ff	obj/kernel.asm	/^c01074ff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107502	obj/kernel.asm	/^c0107502:	50                   	push   %eax$/;"	l
c0107503	obj/kernel.asm	/^c0107503:	e8 f3 f8 ff ff       	call   c0106dfb <__intr_restore>$/;"	l
c0107508	obj/kernel.asm	/^c0107508:	83 c4 10             	add    $0x10,%esp$/;"	l
c010750b	obj/kernel.asm	/^c010750b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010750e	obj/kernel.asm	/^c010750e:	83 e8 08             	sub    $0x8,%eax$/;"	l
c0107511	obj/kernel.asm	/^c0107511:	8b 00                	mov    (%eax),%eax$/;"	l
c0107513	obj/kernel.asm	/^c0107513:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0107516	obj/kernel.asm	/^c0107516:	c9                   	leave  $/;"	l
c0107517	obj/kernel.asm	/^c0107517:	c3                   	ret    $/;"	l
c0107518	obj/kernel.asm	/^c0107518 <_fifo_init_mm>:$/;"	l
c0107518	obj/kernel.asm	/^c0107518:	55                   	push   %ebp$/;"	l
c0107519	obj/kernel.asm	/^c0107519:	89 e5                	mov    %esp,%ebp$/;"	l
c010751b	obj/kernel.asm	/^c010751b:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010751e	obj/kernel.asm	/^c010751e:	c7 45 fc 64 e1 19 c0 	movl   $0xc019e164,-0x4(%ebp)$/;"	l
c0107525	obj/kernel.asm	/^c0107525:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107528	obj/kernel.asm	/^c0107528:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010752b	obj/kernel.asm	/^c010752b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010752e	obj/kernel.asm	/^c010752e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107531	obj/kernel.asm	/^c0107531:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107534	obj/kernel.asm	/^c0107534:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107537	obj/kernel.asm	/^c0107537:	89 10                	mov    %edx,(%eax)$/;"	l
c0107539	obj/kernel.asm	/^c0107539:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010753c	obj/kernel.asm	/^c010753c:	c7 40 14 64 e1 19 c0 	movl   $0xc019e164,0x14(%eax)$/;"	l
c0107543	obj/kernel.asm	/^c0107543:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107548	obj/kernel.asm	/^c0107548:	c9                   	leave  $/;"	l
c0107549	obj/kernel.asm	/^c0107549:	c3                   	ret    $/;"	l
c010754a	obj/kernel.asm	/^c010754a <_fifo_map_swappable>:$/;"	l
c010754a	obj/kernel.asm	/^c010754a:	55                   	push   %ebp$/;"	l
c010754b	obj/kernel.asm	/^c010754b:	89 e5                	mov    %esp,%ebp$/;"	l
c010754d	obj/kernel.asm	/^c010754d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107550	obj/kernel.asm	/^c0107550:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107553	obj/kernel.asm	/^c0107553:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0107556	obj/kernel.asm	/^c0107556:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107559	obj/kernel.asm	/^c0107559:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010755c	obj/kernel.asm	/^c010755c:	83 c0 14             	add    $0x14,%eax$/;"	l
c010755f	obj/kernel.asm	/^c010755f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107562	obj/kernel.asm	/^c0107562:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0107566	obj/kernel.asm	/^c0107566:	74 06                	je     c010756e <_fifo_map_swappable+0x24>$/;"	l
c0107568	obj/kernel.asm	/^c0107568:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010756c	obj/kernel.asm	/^c010756c:	75 16                	jne    c0107584 <_fifo_map_swappable+0x3a>$/;"	l
c010756e	obj/kernel.asm	/^c010756e:	68 68 ce 10 c0       	push   $0xc010ce68$/;"	l
c0107573	obj/kernel.asm	/^c0107573:	68 86 ce 10 c0       	push   $0xc010ce86$/;"	l
c0107578	obj/kernel.asm	/^c0107578:	6a 32                	push   $0x32$/;"	l
c010757a	obj/kernel.asm	/^c010757a:	68 9b ce 10 c0       	push   $0xc010ce9b$/;"	l
c010757f	obj/kernel.asm	/^c010757f:	e8 56 8e ff ff       	call   c01003da <__panic>$/;"	l
c0107584	obj/kernel.asm	/^c0107584:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107587	obj/kernel.asm	/^c0107587:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010758a	obj/kernel.asm	/^c010758a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010758d	obj/kernel.asm	/^c010758d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107590	obj/kernel.asm	/^c0107590:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107593	obj/kernel.asm	/^c0107593:	8b 00                	mov    (%eax),%eax$/;"	l
c0107595	obj/kernel.asm	/^c0107595:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0107598	obj/kernel.asm	/^c0107598:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010759b	obj/kernel.asm	/^c010759b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010759e	obj/kernel.asm	/^c010759e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01075a1	obj/kernel.asm	/^c01075a1:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01075a4	obj/kernel.asm	/^c01075a4:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01075a7	obj/kernel.asm	/^c01075a7:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01075aa	obj/kernel.asm	/^c01075aa:	89 10                	mov    %edx,(%eax)$/;"	l
c01075ac	obj/kernel.asm	/^c01075ac:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01075af	obj/kernel.asm	/^c01075af:	8b 10                	mov    (%eax),%edx$/;"	l
c01075b1	obj/kernel.asm	/^c01075b1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01075b4	obj/kernel.asm	/^c01075b4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01075b7	obj/kernel.asm	/^c01075b7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01075ba	obj/kernel.asm	/^c01075ba:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01075bd	obj/kernel.asm	/^c01075bd:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01075c0	obj/kernel.asm	/^c01075c0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01075c3	obj/kernel.asm	/^c01075c3:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01075c6	obj/kernel.asm	/^c01075c6:	89 10                	mov    %edx,(%eax)$/;"	l
c01075c8	obj/kernel.asm	/^c01075c8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01075cd	obj/kernel.asm	/^c01075cd:	c9                   	leave  $/;"	l
c01075ce	obj/kernel.asm	/^c01075ce:	c3                   	ret    $/;"	l
c01075cf	obj/kernel.asm	/^c01075cf <_fifo_swap_out_victim>:$/;"	l
c01075cf	obj/kernel.asm	/^c01075cf:	55                   	push   %ebp$/;"	l
c01075d0	obj/kernel.asm	/^c01075d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01075d2	obj/kernel.asm	/^c01075d2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01075d5	obj/kernel.asm	/^c01075d5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01075d8	obj/kernel.asm	/^c01075d8:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c01075db	obj/kernel.asm	/^c01075db:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01075de	obj/kernel.asm	/^c01075de:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01075e2	obj/kernel.asm	/^c01075e2:	75 16                	jne    c01075fa <_fifo_swap_out_victim+0x2b>$/;"	l
c01075e4	obj/kernel.asm	/^c01075e4:	68 af ce 10 c0       	push   $0xc010ceaf$/;"	l
c01075e9	obj/kernel.asm	/^c01075e9:	68 86 ce 10 c0       	push   $0xc010ce86$/;"	l
c01075ee	obj/kernel.asm	/^c01075ee:	6a 4a                	push   $0x4a$/;"	l
c01075f0	obj/kernel.asm	/^c01075f0:	68 9b ce 10 c0       	push   $0xc010ce9b$/;"	l
c01075f5	obj/kernel.asm	/^c01075f5:	e8 e0 8d ff ff       	call   c01003da <__panic>$/;"	l
c01075fa	obj/kernel.asm	/^c01075fa:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01075fe	obj/kernel.asm	/^c01075fe:	74 16                	je     c0107616 <_fifo_swap_out_victim+0x47>$/;"	l
c0107600	obj/kernel.asm	/^c0107600:	68 bc ce 10 c0       	push   $0xc010cebc$/;"	l
c0107605	obj/kernel.asm	/^c0107605:	68 86 ce 10 c0       	push   $0xc010ce86$/;"	l
c010760a	obj/kernel.asm	/^c010760a:	6a 4b                	push   $0x4b$/;"	l
c010760c	obj/kernel.asm	/^c010760c:	68 9b ce 10 c0       	push   $0xc010ce9b$/;"	l
c0107611	obj/kernel.asm	/^c0107611:	e8 c4 8d ff ff       	call   c01003da <__panic>$/;"	l
c0107616	obj/kernel.asm	/^c0107616:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107619	obj/kernel.asm	/^c0107619:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010761c	obj/kernel.asm	/^c010761c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010761f	obj/kernel.asm	/^c010761f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107622	obj/kernel.asm	/^c0107622:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c0107625	obj/kernel.asm	/^c0107625:	0f 94 c0             	sete   %al$/;"	l
c0107628	obj/kernel.asm	/^c0107628:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010762b	obj/kernel.asm	/^c010762b:	85 c0                	test   %eax,%eax$/;"	l
c010762d	obj/kernel.asm	/^c010762d:	74 17                	je     c0107646 <_fifo_swap_out_victim+0x77>$/;"	l
c010762f	obj/kernel.asm	/^c010762f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107632	obj/kernel.asm	/^c0107632:	68 c7 ce 10 c0       	push   $0xc010cec7$/;"	l
c0107637	obj/kernel.asm	/^c0107637:	e8 39 8c ff ff       	call   c0100275 <cprintf>$/;"	l
c010763c	obj/kernel.asm	/^c010763c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010763f	obj/kernel.asm	/^c010763f:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0107644	obj/kernel.asm	/^c0107644:	eb 47                	jmp    c010768d <_fifo_swap_out_victim+0xbe>$/;"	l
c0107646	obj/kernel.asm	/^c0107646:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107649	obj/kernel.asm	/^c0107649:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010764c	obj/kernel.asm	/^c010764c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010764f	obj/kernel.asm	/^c010764f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107652	obj/kernel.asm	/^c0107652:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107655	obj/kernel.asm	/^c0107655:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107658	obj/kernel.asm	/^c0107658:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010765b	obj/kernel.asm	/^c010765b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010765e	obj/kernel.asm	/^c010765e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107661	obj/kernel.asm	/^c0107661:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0107664	obj/kernel.asm	/^c0107664:	8b 12                	mov    (%edx),%edx$/;"	l
c0107666	obj/kernel.asm	/^c0107666:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c0107669	obj/kernel.asm	/^c0107669:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010766c	obj/kernel.asm	/^c010766c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010766f	obj/kernel.asm	/^c010766f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0107672	obj/kernel.asm	/^c0107672:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107675	obj/kernel.asm	/^c0107675:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107678	obj/kernel.asm	/^c0107678:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010767b	obj/kernel.asm	/^c010767b:	89 10                	mov    %edx,(%eax)$/;"	l
c010767d	obj/kernel.asm	/^c010767d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107680	obj/kernel.asm	/^c0107680:	8d 50 ec             	lea    -0x14(%eax),%edx$/;"	l
c0107683	obj/kernel.asm	/^c0107683:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107686	obj/kernel.asm	/^c0107686:	89 10                	mov    %edx,(%eax)$/;"	l
c0107688	obj/kernel.asm	/^c0107688:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010768d	obj/kernel.asm	/^c010768d:	c9                   	leave  $/;"	l
c010768e	obj/kernel.asm	/^c010768e:	c3                   	ret    $/;"	l
c010768f	obj/kernel.asm	/^c010768f <_fifo_check_swap>:$/;"	l
c010768f	obj/kernel.asm	/^c010768f:	55                   	push   %ebp$/;"	l
c0107690	obj/kernel.asm	/^c0107690:	89 e5                	mov    %esp,%ebp$/;"	l
c0107692	obj/kernel.asm	/^c0107692:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107695	obj/kernel.asm	/^c0107695:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107698	obj/kernel.asm	/^c0107698:	68 d8 ce 10 c0       	push   $0xc010ced8$/;"	l
c010769d	obj/kernel.asm	/^c010769d:	e8 d3 8b ff ff       	call   c0100275 <cprintf>$/;"	l
c01076a2	obj/kernel.asm	/^c01076a2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01076a5	obj/kernel.asm	/^c01076a5:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c01076aa	obj/kernel.asm	/^c01076aa:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c01076ad	obj/kernel.asm	/^c01076ad:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c01076b2	obj/kernel.asm	/^c01076b2:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01076b5	obj/kernel.asm	/^c01076b5:	74 16                	je     c01076cd <_fifo_check_swap+0x3e>$/;"	l
c01076b7	obj/kernel.asm	/^c01076b7:	68 fe ce 10 c0       	push   $0xc010cefe$/;"	l
c01076bc	obj/kernel.asm	/^c01076bc:	68 86 ce 10 c0       	push   $0xc010ce86$/;"	l
c01076c1	obj/kernel.asm	/^c01076c1:	6a 5f                	push   $0x5f$/;"	l
c01076c3	obj/kernel.asm	/^c01076c3:	68 9b ce 10 c0       	push   $0xc010ce9b$/;"	l
c01076c8	obj/kernel.asm	/^c01076c8:	e8 0d 8d ff ff       	call   c01003da <__panic>$/;"	l
c01076cd	obj/kernel.asm	/^c01076cd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01076d0	obj/kernel.asm	/^c01076d0:	68 10 cf 10 c0       	push   $0xc010cf10$/;"	l
c01076d5	obj/kernel.asm	/^c01076d5:	e8 9b 8b ff ff       	call   c0100275 <cprintf>$/;"	l
c01076da	obj/kernel.asm	/^c01076da:	83 c4 10             	add    $0x10,%esp$/;"	l
c01076dd	obj/kernel.asm	/^c01076dd:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c01076e2	obj/kernel.asm	/^c01076e2:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c01076e5	obj/kernel.asm	/^c01076e5:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c01076ea	obj/kernel.asm	/^c01076ea:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01076ed	obj/kernel.asm	/^c01076ed:	74 16                	je     c0107705 <_fifo_check_swap+0x76>$/;"	l
c01076ef	obj/kernel.asm	/^c01076ef:	68 fe ce 10 c0       	push   $0xc010cefe$/;"	l
c01076f4	obj/kernel.asm	/^c01076f4:	68 86 ce 10 c0       	push   $0xc010ce86$/;"	l
c01076f9	obj/kernel.asm	/^c01076f9:	6a 62                	push   $0x62$/;"	l
c01076fb	obj/kernel.asm	/^c01076fb:	68 9b ce 10 c0       	push   $0xc010ce9b$/;"	l
c0107700	obj/kernel.asm	/^c0107700:	e8 d5 8c ff ff       	call   c01003da <__panic>$/;"	l
c0107705	obj/kernel.asm	/^c0107705:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107708	obj/kernel.asm	/^c0107708:	68 38 cf 10 c0       	push   $0xc010cf38$/;"	l
c010770d	obj/kernel.asm	/^c010770d:	e8 63 8b ff ff       	call   c0100275 <cprintf>$/;"	l
c0107712	obj/kernel.asm	/^c0107712:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107715	obj/kernel.asm	/^c0107715:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c010771a	obj/kernel.asm	/^c010771a:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c010771d	obj/kernel.asm	/^c010771d:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c0107722	obj/kernel.asm	/^c0107722:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107725	obj/kernel.asm	/^c0107725:	74 16                	je     c010773d <_fifo_check_swap+0xae>$/;"	l
c0107727	obj/kernel.asm	/^c0107727:	68 fe ce 10 c0       	push   $0xc010cefe$/;"	l
c010772c	obj/kernel.asm	/^c010772c:	68 86 ce 10 c0       	push   $0xc010ce86$/;"	l
c0107731	obj/kernel.asm	/^c0107731:	6a 65                	push   $0x65$/;"	l
c0107733	obj/kernel.asm	/^c0107733:	68 9b ce 10 c0       	push   $0xc010ce9b$/;"	l
c0107738	obj/kernel.asm	/^c0107738:	e8 9d 8c ff ff       	call   c01003da <__panic>$/;"	l
c010773d	obj/kernel.asm	/^c010773d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107740	obj/kernel.asm	/^c0107740:	68 60 cf 10 c0       	push   $0xc010cf60$/;"	l
c0107745	obj/kernel.asm	/^c0107745:	e8 2b 8b ff ff       	call   c0100275 <cprintf>$/;"	l
c010774a	obj/kernel.asm	/^c010774a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010774d	obj/kernel.asm	/^c010774d:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0107752	obj/kernel.asm	/^c0107752:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107755	obj/kernel.asm	/^c0107755:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c010775a	obj/kernel.asm	/^c010775a:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c010775d	obj/kernel.asm	/^c010775d:	74 16                	je     c0107775 <_fifo_check_swap+0xe6>$/;"	l
c010775f	obj/kernel.asm	/^c010775f:	68 fe ce 10 c0       	push   $0xc010cefe$/;"	l
c0107764	obj/kernel.asm	/^c0107764:	68 86 ce 10 c0       	push   $0xc010ce86$/;"	l
c0107769	obj/kernel.asm	/^c0107769:	6a 68                	push   $0x68$/;"	l
c010776b	obj/kernel.asm	/^c010776b:	68 9b ce 10 c0       	push   $0xc010ce9b$/;"	l
c0107770	obj/kernel.asm	/^c0107770:	e8 65 8c ff ff       	call   c01003da <__panic>$/;"	l
c0107775	obj/kernel.asm	/^c0107775:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107778	obj/kernel.asm	/^c0107778:	68 88 cf 10 c0       	push   $0xc010cf88$/;"	l
c010777d	obj/kernel.asm	/^c010777d:	e8 f3 8a ff ff       	call   c0100275 <cprintf>$/;"	l
c0107782	obj/kernel.asm	/^c0107782:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107785	obj/kernel.asm	/^c0107785:	b8 00 50 00 00       	mov    $0x5000,%eax$/;"	l
c010778a	obj/kernel.asm	/^c010778a:	c6 00 0e             	movb   $0xe,(%eax)$/;"	l
c010778d	obj/kernel.asm	/^c010778d:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c0107792	obj/kernel.asm	/^c0107792:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c0107795	obj/kernel.asm	/^c0107795:	74 16                	je     c01077ad <_fifo_check_swap+0x11e>$/;"	l
c0107797	obj/kernel.asm	/^c0107797:	68 ae cf 10 c0       	push   $0xc010cfae$/;"	l
c010779c	obj/kernel.asm	/^c010779c:	68 86 ce 10 c0       	push   $0xc010ce86$/;"	l
c01077a1	obj/kernel.asm	/^c01077a1:	6a 6b                	push   $0x6b$/;"	l
c01077a3	obj/kernel.asm	/^c01077a3:	68 9b ce 10 c0       	push   $0xc010ce9b$/;"	l
c01077a8	obj/kernel.asm	/^c01077a8:	e8 2d 8c ff ff       	call   c01003da <__panic>$/;"	l
c01077ad	obj/kernel.asm	/^c01077ad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01077b0	obj/kernel.asm	/^c01077b0:	68 60 cf 10 c0       	push   $0xc010cf60$/;"	l
c01077b5	obj/kernel.asm	/^c01077b5:	e8 bb 8a ff ff       	call   c0100275 <cprintf>$/;"	l
c01077ba	obj/kernel.asm	/^c01077ba:	83 c4 10             	add    $0x10,%esp$/;"	l
c01077bd	obj/kernel.asm	/^c01077bd:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c01077c2	obj/kernel.asm	/^c01077c2:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c01077c5	obj/kernel.asm	/^c01077c5:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c01077ca	obj/kernel.asm	/^c01077ca:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c01077cd	obj/kernel.asm	/^c01077cd:	74 16                	je     c01077e5 <_fifo_check_swap+0x156>$/;"	l
c01077cf	obj/kernel.asm	/^c01077cf:	68 ae cf 10 c0       	push   $0xc010cfae$/;"	l
c01077d4	obj/kernel.asm	/^c01077d4:	68 86 ce 10 c0       	push   $0xc010ce86$/;"	l
c01077d9	obj/kernel.asm	/^c01077d9:	6a 6e                	push   $0x6e$/;"	l
c01077db	obj/kernel.asm	/^c01077db:	68 9b ce 10 c0       	push   $0xc010ce9b$/;"	l
c01077e0	obj/kernel.asm	/^c01077e0:	e8 f5 8b ff ff       	call   c01003da <__panic>$/;"	l
c01077e5	obj/kernel.asm	/^c01077e5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01077e8	obj/kernel.asm	/^c01077e8:	68 10 cf 10 c0       	push   $0xc010cf10$/;"	l
c01077ed	obj/kernel.asm	/^c01077ed:	e8 83 8a ff ff       	call   c0100275 <cprintf>$/;"	l
c01077f2	obj/kernel.asm	/^c01077f2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01077f5	obj/kernel.asm	/^c01077f5:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c01077fa	obj/kernel.asm	/^c01077fa:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c01077fd	obj/kernel.asm	/^c01077fd:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c0107802	obj/kernel.asm	/^c0107802:	83 f8 06             	cmp    $0x6,%eax$/;"	l
c0107805	obj/kernel.asm	/^c0107805:	74 16                	je     c010781d <_fifo_check_swap+0x18e>$/;"	l
c0107807	obj/kernel.asm	/^c0107807:	68 bd cf 10 c0       	push   $0xc010cfbd$/;"	l
c010780c	obj/kernel.asm	/^c010780c:	68 86 ce 10 c0       	push   $0xc010ce86$/;"	l
c0107811	obj/kernel.asm	/^c0107811:	6a 71                	push   $0x71$/;"	l
c0107813	obj/kernel.asm	/^c0107813:	68 9b ce 10 c0       	push   $0xc010ce9b$/;"	l
c0107818	obj/kernel.asm	/^c0107818:	e8 bd 8b ff ff       	call   c01003da <__panic>$/;"	l
c010781d	obj/kernel.asm	/^c010781d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107820	obj/kernel.asm	/^c0107820:	68 60 cf 10 c0       	push   $0xc010cf60$/;"	l
c0107825	obj/kernel.asm	/^c0107825:	e8 4b 8a ff ff       	call   c0100275 <cprintf>$/;"	l
c010782a	obj/kernel.asm	/^c010782a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010782d	obj/kernel.asm	/^c010782d:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0107832	obj/kernel.asm	/^c0107832:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107835	obj/kernel.asm	/^c0107835:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c010783a	obj/kernel.asm	/^c010783a:	83 f8 07             	cmp    $0x7,%eax$/;"	l
c010783d	obj/kernel.asm	/^c010783d:	74 16                	je     c0107855 <_fifo_check_swap+0x1c6>$/;"	l
c010783f	obj/kernel.asm	/^c010783f:	68 cc cf 10 c0       	push   $0xc010cfcc$/;"	l
c0107844	obj/kernel.asm	/^c0107844:	68 86 ce 10 c0       	push   $0xc010ce86$/;"	l
c0107849	obj/kernel.asm	/^c0107849:	6a 74                	push   $0x74$/;"	l
c010784b	obj/kernel.asm	/^c010784b:	68 9b ce 10 c0       	push   $0xc010ce9b$/;"	l
c0107850	obj/kernel.asm	/^c0107850:	e8 85 8b ff ff       	call   c01003da <__panic>$/;"	l
c0107855	obj/kernel.asm	/^c0107855:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107858	obj/kernel.asm	/^c0107858:	68 d8 ce 10 c0       	push   $0xc010ced8$/;"	l
c010785d	obj/kernel.asm	/^c010785d:	e8 13 8a ff ff       	call   c0100275 <cprintf>$/;"	l
c0107862	obj/kernel.asm	/^c0107862:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107865	obj/kernel.asm	/^c0107865:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c010786a	obj/kernel.asm	/^c010786a:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c010786d	obj/kernel.asm	/^c010786d:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c0107872	obj/kernel.asm	/^c0107872:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c0107875	obj/kernel.asm	/^c0107875:	74 16                	je     c010788d <_fifo_check_swap+0x1fe>$/;"	l
c0107877	obj/kernel.asm	/^c0107877:	68 db cf 10 c0       	push   $0xc010cfdb$/;"	l
c010787c	obj/kernel.asm	/^c010787c:	68 86 ce 10 c0       	push   $0xc010ce86$/;"	l
c0107881	obj/kernel.asm	/^c0107881:	6a 77                	push   $0x77$/;"	l
c0107883	obj/kernel.asm	/^c0107883:	68 9b ce 10 c0       	push   $0xc010ce9b$/;"	l
c0107888	obj/kernel.asm	/^c0107888:	e8 4d 8b ff ff       	call   c01003da <__panic>$/;"	l
c010788d	obj/kernel.asm	/^c010788d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107890	obj/kernel.asm	/^c0107890:	68 38 cf 10 c0       	push   $0xc010cf38$/;"	l
c0107895	obj/kernel.asm	/^c0107895:	e8 db 89 ff ff       	call   c0100275 <cprintf>$/;"	l
c010789a	obj/kernel.asm	/^c010789a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010789d	obj/kernel.asm	/^c010789d:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c01078a2	obj/kernel.asm	/^c01078a2:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c01078a5	obj/kernel.asm	/^c01078a5:	a1 ac bf 19 c0       	mov    0xc019bfac,%eax$/;"	l
c01078aa	obj/kernel.asm	/^c01078aa:	83 f8 09             	cmp    $0x9,%eax$/;"	l
c01078ad	obj/kernel.asm	/^c01078ad:	74 16                	je     c01078c5 <_fifo_check_swap+0x236>$/;"	l
c01078af	obj/kernel.asm	/^c01078af:	68 ea cf 10 c0       	push   $0xc010cfea$/;"	l
c01078b4	obj/kernel.asm	/^c01078b4:	68 86 ce 10 c0       	push   $0xc010ce86$/;"	l
c01078b9	obj/kernel.asm	/^c01078b9:	6a 7a                	push   $0x7a$/;"	l
c01078bb	obj/kernel.asm	/^c01078bb:	68 9b ce 10 c0       	push   $0xc010ce9b$/;"	l
c01078c0	obj/kernel.asm	/^c01078c0:	e8 15 8b ff ff       	call   c01003da <__panic>$/;"	l
c01078c5	obj/kernel.asm	/^c01078c5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01078ca	obj/kernel.asm	/^c01078ca:	c9                   	leave  $/;"	l
c01078cb	obj/kernel.asm	/^c01078cb:	c3                   	ret    $/;"	l
c01078cc	obj/kernel.asm	/^c01078cc <_fifo_init>:$/;"	l
c01078cc	obj/kernel.asm	/^c01078cc:	55                   	push   %ebp$/;"	l
c01078cd	obj/kernel.asm	/^c01078cd:	89 e5                	mov    %esp,%ebp$/;"	l
c01078cf	obj/kernel.asm	/^c01078cf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01078d4	obj/kernel.asm	/^c01078d4:	5d                   	pop    %ebp$/;"	l
c01078d5	obj/kernel.asm	/^c01078d5:	c3                   	ret    $/;"	l
c01078d6	obj/kernel.asm	/^c01078d6 <_fifo_set_unswappable>:$/;"	l
c01078d6	obj/kernel.asm	/^c01078d6:	55                   	push   %ebp$/;"	l
c01078d7	obj/kernel.asm	/^c01078d7:	89 e5                	mov    %esp,%ebp$/;"	l
c01078d9	obj/kernel.asm	/^c01078d9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01078de	obj/kernel.asm	/^c01078de:	5d                   	pop    %ebp$/;"	l
c01078df	obj/kernel.asm	/^c01078df:	c3                   	ret    $/;"	l
c01078e0	obj/kernel.asm	/^c01078e0 <_fifo_tick_event>:$/;"	l
c01078e0	obj/kernel.asm	/^c01078e0:	55                   	push   %ebp$/;"	l
c01078e1	obj/kernel.asm	/^c01078e1:	89 e5                	mov    %esp,%ebp$/;"	l
c01078e3	obj/kernel.asm	/^c01078e3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01078e8	obj/kernel.asm	/^c01078e8:	5d                   	pop    %ebp$/;"	l
c01078e9	obj/kernel.asm	/^c01078e9:	c3                   	ret    $/;"	l
c01078ea	obj/kernel.asm	/^c01078ea <page2ppn>:$/;"	l
c01078ea	obj/kernel.asm	/^c01078ea:	55                   	push   %ebp$/;"	l
c01078eb	obj/kernel.asm	/^c01078eb:	89 e5                	mov    %esp,%ebp$/;"	l
c01078ed	obj/kernel.asm	/^c01078ed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01078f0	obj/kernel.asm	/^c01078f0:	8b 15 98 e0 19 c0    	mov    0xc019e098,%edx$/;"	l
c01078f6	obj/kernel.asm	/^c01078f6:	29 d0                	sub    %edx,%eax$/;"	l
c01078f8	obj/kernel.asm	/^c01078f8:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c01078fb	obj/kernel.asm	/^c01078fb:	5d                   	pop    %ebp$/;"	l
c01078fc	obj/kernel.asm	/^c01078fc:	c3                   	ret    $/;"	l
c01078fd	obj/kernel.asm	/^c01078fd <page2pa>:$/;"	l
c01078fd	obj/kernel.asm	/^c01078fd:	55                   	push   %ebp$/;"	l
c01078fe	obj/kernel.asm	/^c01078fe:	89 e5                	mov    %esp,%ebp$/;"	l
c0107900	obj/kernel.asm	/^c0107900:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0107903	obj/kernel.asm	/^c0107903:	e8 e2 ff ff ff       	call   c01078ea <page2ppn>$/;"	l
c0107908	obj/kernel.asm	/^c0107908:	83 c4 04             	add    $0x4,%esp$/;"	l
c010790b	obj/kernel.asm	/^c010790b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010790e	obj/kernel.asm	/^c010790e:	c9                   	leave  $/;"	l
c010790f	obj/kernel.asm	/^c010790f:	c3                   	ret    $/;"	l
c0107910	obj/kernel.asm	/^c0107910 <page_ref>:$/;"	l
c0107910	obj/kernel.asm	/^c0107910:	55                   	push   %ebp$/;"	l
c0107911	obj/kernel.asm	/^c0107911:	89 e5                	mov    %esp,%ebp$/;"	l
c0107913	obj/kernel.asm	/^c0107913:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107916	obj/kernel.asm	/^c0107916:	8b 00                	mov    (%eax),%eax$/;"	l
c0107918	obj/kernel.asm	/^c0107918:	5d                   	pop    %ebp$/;"	l
c0107919	obj/kernel.asm	/^c0107919:	c3                   	ret    $/;"	l
c010791a	obj/kernel.asm	/^c010791a <set_page_ref>:$/;"	l
c010791a	obj/kernel.asm	/^c010791a:	55                   	push   %ebp$/;"	l
c010791b	obj/kernel.asm	/^c010791b:	89 e5                	mov    %esp,%ebp$/;"	l
c010791d	obj/kernel.asm	/^c010791d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107920	obj/kernel.asm	/^c0107920:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107923	obj/kernel.asm	/^c0107923:	89 10                	mov    %edx,(%eax)$/;"	l
c0107925	obj/kernel.asm	/^c0107925:	5d                   	pop    %ebp$/;"	l
c0107926	obj/kernel.asm	/^c0107926:	c3                   	ret    $/;"	l
c0107927	obj/kernel.asm	/^c0107927 <default_init>:$/;"	l
c0107927	obj/kernel.asm	/^c0107927:	55                   	push   %ebp$/;"	l
c0107928	obj/kernel.asm	/^c0107928:	89 e5                	mov    %esp,%ebp$/;"	l
c010792a	obj/kernel.asm	/^c010792a:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010792d	obj/kernel.asm	/^c010792d:	c7 45 fc 6c e1 19 c0 	movl   $0xc019e16c,-0x4(%ebp)$/;"	l
c0107934	obj/kernel.asm	/^c0107934:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107937	obj/kernel.asm	/^c0107937:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010793a	obj/kernel.asm	/^c010793a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010793d	obj/kernel.asm	/^c010793d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107940	obj/kernel.asm	/^c0107940:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107943	obj/kernel.asm	/^c0107943:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107946	obj/kernel.asm	/^c0107946:	89 10                	mov    %edx,(%eax)$/;"	l
c0107948	obj/kernel.asm	/^c0107948:	c7 05 74 e1 19 c0 00 	movl   $0x0,0xc019e174$/;"	l
c010794f	obj/kernel.asm	/^c010794f:	00 00 00 $/;"	l
c0107952	obj/kernel.asm	/^c0107952:	c9                   	leave  $/;"	l
c0107953	obj/kernel.asm	/^c0107953:	c3                   	ret    $/;"	l
c0107954	obj/kernel.asm	/^c0107954 <default_init_memmap>:$/;"	l
c0107954	obj/kernel.asm	/^c0107954:	55                   	push   %ebp$/;"	l
c0107955	obj/kernel.asm	/^c0107955:	89 e5                	mov    %esp,%ebp$/;"	l
c0107957	obj/kernel.asm	/^c0107957:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010795a	obj/kernel.asm	/^c010795a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010795e	obj/kernel.asm	/^c010795e:	75 16                	jne    c0107976 <default_init_memmap+0x22>$/;"	l
c0107960	obj/kernel.asm	/^c0107960:	68 0c d0 10 c0       	push   $0xc010d00c$/;"	l
c0107965	obj/kernel.asm	/^c0107965:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c010796a	obj/kernel.asm	/^c010796a:	6a 46                	push   $0x46$/;"	l
c010796c	obj/kernel.asm	/^c010796c:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0107971	obj/kernel.asm	/^c0107971:	e8 64 8a ff ff       	call   c01003da <__panic>$/;"	l
c0107976	obj/kernel.asm	/^c0107976:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107979	obj/kernel.asm	/^c0107979:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010797c	obj/kernel.asm	/^c010797c:	eb 6c                	jmp    c01079ea <default_init_memmap+0x96>$/;"	l
c010797e	obj/kernel.asm	/^c010797e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107981	obj/kernel.asm	/^c0107981:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107984	obj/kernel.asm	/^c0107984:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010798b	obj/kernel.asm	/^c010798b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010798e	obj/kernel.asm	/^c010798e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107991	obj/kernel.asm	/^c0107991:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0107994	obj/kernel.asm	/^c0107994:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0107997	obj/kernel.asm	/^c0107997:	19 c0                	sbb    %eax,%eax$/;"	l
c0107999	obj/kernel.asm	/^c0107999:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010799c	obj/kernel.asm	/^c010799c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01079a0	obj/kernel.asm	/^c01079a0:	0f 95 c0             	setne  %al$/;"	l
c01079a3	obj/kernel.asm	/^c01079a3:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01079a6	obj/kernel.asm	/^c01079a6:	85 c0                	test   %eax,%eax$/;"	l
c01079a8	obj/kernel.asm	/^c01079a8:	75 16                	jne    c01079c0 <default_init_memmap+0x6c>$/;"	l
c01079aa	obj/kernel.asm	/^c01079aa:	68 3d d0 10 c0       	push   $0xc010d03d$/;"	l
c01079af	obj/kernel.asm	/^c01079af:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c01079b4	obj/kernel.asm	/^c01079b4:	6a 49                	push   $0x49$/;"	l
c01079b6	obj/kernel.asm	/^c01079b6:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c01079bb	obj/kernel.asm	/^c01079bb:	e8 1a 8a ff ff       	call   c01003da <__panic>$/;"	l
c01079c0	obj/kernel.asm	/^c01079c0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01079c3	obj/kernel.asm	/^c01079c3:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c01079ca	obj/kernel.asm	/^c01079ca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01079cd	obj/kernel.asm	/^c01079cd:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01079d0	obj/kernel.asm	/^c01079d0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01079d3	obj/kernel.asm	/^c01079d3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01079d6	obj/kernel.asm	/^c01079d6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01079d9	obj/kernel.asm	/^c01079d9:	6a 00                	push   $0x0$/;"	l
c01079db	obj/kernel.asm	/^c01079db:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01079de	obj/kernel.asm	/^c01079de:	e8 37 ff ff ff       	call   c010791a <set_page_ref>$/;"	l
c01079e3	obj/kernel.asm	/^c01079e3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01079e6	obj/kernel.asm	/^c01079e6:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c01079ea	obj/kernel.asm	/^c01079ea:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01079ed	obj/kernel.asm	/^c01079ed:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c01079f0	obj/kernel.asm	/^c01079f0:	89 c2                	mov    %eax,%edx$/;"	l
c01079f2	obj/kernel.asm	/^c01079f2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01079f5	obj/kernel.asm	/^c01079f5:	01 d0                	add    %edx,%eax$/;"	l
c01079f7	obj/kernel.asm	/^c01079f7:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01079fa	obj/kernel.asm	/^c01079fa:	75 82                	jne    c010797e <default_init_memmap+0x2a>$/;"	l
c01079fc	obj/kernel.asm	/^c01079fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01079ff	obj/kernel.asm	/^c01079ff:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107a02	obj/kernel.asm	/^c0107a02:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107a05	obj/kernel.asm	/^c0107a05:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107a08	obj/kernel.asm	/^c0107a08:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107a0b	obj/kernel.asm	/^c0107a0b:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
c0107a12	obj/kernel.asm	/^c0107a12:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107a15	obj/kernel.asm	/^c0107a15:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107a18	obj/kernel.asm	/^c0107a18:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0107a1b	obj/kernel.asm	/^c0107a1b:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107a1e	obj/kernel.asm	/^c0107a1e:	8b 15 74 e1 19 c0    	mov    0xc019e174,%edx$/;"	l
c0107a24	obj/kernel.asm	/^c0107a24:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107a27	obj/kernel.asm	/^c0107a27:	01 d0                	add    %edx,%eax$/;"	l
c0107a29	obj/kernel.asm	/^c0107a29:	a3 74 e1 19 c0       	mov    %eax,0xc019e174$/;"	l
c0107a2e	obj/kernel.asm	/^c0107a2e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107a31	obj/kernel.asm	/^c0107a31:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0107a34	obj/kernel.asm	/^c0107a34:	c7 45 dc 6c e1 19 c0 	movl   $0xc019e16c,-0x24(%ebp)$/;"	l
c0107a3b	obj/kernel.asm	/^c0107a3b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0107a3e	obj/kernel.asm	/^c0107a3e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107a41	obj/kernel.asm	/^c0107a41:	8b 00                	mov    (%eax),%eax$/;"	l
c0107a43	obj/kernel.asm	/^c0107a43:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107a46	obj/kernel.asm	/^c0107a46:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0107a49	obj/kernel.asm	/^c0107a49:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0107a4c	obj/kernel.asm	/^c0107a4c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107a4f	obj/kernel.asm	/^c0107a4f:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0107a52	obj/kernel.asm	/^c0107a52:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0107a55	obj/kernel.asm	/^c0107a55:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0107a58	obj/kernel.asm	/^c0107a58:	89 10                	mov    %edx,(%eax)$/;"	l
c0107a5a	obj/kernel.asm	/^c0107a5a:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0107a5d	obj/kernel.asm	/^c0107a5d:	8b 10                	mov    (%eax),%edx$/;"	l
c0107a5f	obj/kernel.asm	/^c0107a5f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0107a62	obj/kernel.asm	/^c0107a62:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107a65	obj/kernel.asm	/^c0107a65:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107a68	obj/kernel.asm	/^c0107a68:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0107a6b	obj/kernel.asm	/^c0107a6b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107a6e	obj/kernel.asm	/^c0107a6e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107a71	obj/kernel.asm	/^c0107a71:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0107a74	obj/kernel.asm	/^c0107a74:	89 10                	mov    %edx,(%eax)$/;"	l
c0107a76	obj/kernel.asm	/^c0107a76:	c9                   	leave  $/;"	l
c0107a77	obj/kernel.asm	/^c0107a77:	c3                   	ret    $/;"	l
c0107a78	obj/kernel.asm	/^c0107a78 <default_alloc_pages>:$/;"	l
c0107a78	obj/kernel.asm	/^c0107a78:	55                   	push   %ebp$/;"	l
c0107a79	obj/kernel.asm	/^c0107a79:	89 e5                	mov    %esp,%ebp$/;"	l
c0107a7b	obj/kernel.asm	/^c0107a7b:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0107a7e	obj/kernel.asm	/^c0107a7e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0107a82	obj/kernel.asm	/^c0107a82:	75 16                	jne    c0107a9a <default_alloc_pages+0x22>$/;"	l
c0107a84	obj/kernel.asm	/^c0107a84:	68 0c d0 10 c0       	push   $0xc010d00c$/;"	l
c0107a89	obj/kernel.asm	/^c0107a89:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0107a8e	obj/kernel.asm	/^c0107a8e:	6a 5a                	push   $0x5a$/;"	l
c0107a90	obj/kernel.asm	/^c0107a90:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0107a95	obj/kernel.asm	/^c0107a95:	e8 40 89 ff ff       	call   c01003da <__panic>$/;"	l
c0107a9a	obj/kernel.asm	/^c0107a9a:	a1 74 e1 19 c0       	mov    0xc019e174,%eax$/;"	l
c0107a9f	obj/kernel.asm	/^c0107a9f:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107aa2	obj/kernel.asm	/^c0107aa2:	73 0a                	jae    c0107aae <default_alloc_pages+0x36>$/;"	l
c0107aa4	obj/kernel.asm	/^c0107aa4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107aa9	obj/kernel.asm	/^c0107aa9:	e9 6a 01 00 00       	jmp    c0107c18 <default_alloc_pages+0x1a0>$/;"	l
c0107aae	obj/kernel.asm	/^c0107aae:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0107ab5	obj/kernel.asm	/^c0107ab5:	c7 45 f0 6c e1 19 c0 	movl   $0xc019e16c,-0x10(%ebp)$/;"	l
c0107abc	obj/kernel.asm	/^c0107abc:	eb 1c                	jmp    c0107ada <default_alloc_pages+0x62>$/;"	l
c0107abe	obj/kernel.asm	/^c0107abe:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107ac1	obj/kernel.asm	/^c0107ac1:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0107ac4	obj/kernel.asm	/^c0107ac4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107ac7	obj/kernel.asm	/^c0107ac7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107aca	obj/kernel.asm	/^c0107aca:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107acd	obj/kernel.asm	/^c0107acd:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107ad0	obj/kernel.asm	/^c0107ad0:	72 08                	jb     c0107ada <default_alloc_pages+0x62>$/;"	l
c0107ad2	obj/kernel.asm	/^c0107ad2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107ad5	obj/kernel.asm	/^c0107ad5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107ad8	obj/kernel.asm	/^c0107ad8:	eb 18                	jmp    c0107af2 <default_alloc_pages+0x7a>$/;"	l
c0107ada	obj/kernel.asm	/^c0107ada:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107add	obj/kernel.asm	/^c0107add:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0107ae0	obj/kernel.asm	/^c0107ae0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107ae3	obj/kernel.asm	/^c0107ae3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107ae6	obj/kernel.asm	/^c0107ae6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107ae9	obj/kernel.asm	/^c0107ae9:	81 7d f0 6c e1 19 c0 	cmpl   $0xc019e16c,-0x10(%ebp)$/;"	l
c0107af0	obj/kernel.asm	/^c0107af0:	75 cc                	jne    c0107abe <default_alloc_pages+0x46>$/;"	l
c0107af2	obj/kernel.asm	/^c0107af2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107af6	obj/kernel.asm	/^c0107af6:	0f 84 19 01 00 00    	je     c0107c15 <default_alloc_pages+0x19d>$/;"	l
c0107afc	obj/kernel.asm	/^c0107afc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107aff	obj/kernel.asm	/^c0107aff:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0107b02	obj/kernel.asm	/^c0107b02:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107b05	obj/kernel.asm	/^c0107b05:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b08	obj/kernel.asm	/^c0107b08:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0107b0b	obj/kernel.asm	/^c0107b0b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0107b0e	obj/kernel.asm	/^c0107b0e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0107b11	obj/kernel.asm	/^c0107b11:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107b14	obj/kernel.asm	/^c0107b14:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107b17	obj/kernel.asm	/^c0107b17:	8b 12                	mov    (%edx),%edx$/;"	l
c0107b19	obj/kernel.asm	/^c0107b19:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0107b1c	obj/kernel.asm	/^c0107b1c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0107b1f	obj/kernel.asm	/^c0107b1f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107b22	obj/kernel.asm	/^c0107b22:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0107b25	obj/kernel.asm	/^c0107b25:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107b28	obj/kernel.asm	/^c0107b28:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0107b2b	obj/kernel.asm	/^c0107b2b:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0107b2e	obj/kernel.asm	/^c0107b2e:	89 10                	mov    %edx,(%eax)$/;"	l
c0107b30	obj/kernel.asm	/^c0107b30:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b33	obj/kernel.asm	/^c0107b33:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107b36	obj/kernel.asm	/^c0107b36:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107b39	obj/kernel.asm	/^c0107b39:	0f 86 82 00 00 00    	jbe    c0107bc1 <default_alloc_pages+0x149>$/;"	l
c0107b3f	obj/kernel.asm	/^c0107b3f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107b42	obj/kernel.asm	/^c0107b42:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107b45	obj/kernel.asm	/^c0107b45:	89 c2                	mov    %eax,%edx$/;"	l
c0107b47	obj/kernel.asm	/^c0107b47:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b4a	obj/kernel.asm	/^c0107b4a:	01 d0                	add    %edx,%eax$/;"	l
c0107b4c	obj/kernel.asm	/^c0107b4c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107b4f	obj/kernel.asm	/^c0107b4f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107b52	obj/kernel.asm	/^c0107b52:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107b55	obj/kernel.asm	/^c0107b55:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)$/;"	l
c0107b5c	obj/kernel.asm	/^c0107b5c:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0107b5f	obj/kernel.asm	/^c0107b5f:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0107b62	obj/kernel.asm	/^c0107b62:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0107b65	obj/kernel.asm	/^c0107b65:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107b68	obj/kernel.asm	/^c0107b68:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b6b	obj/kernel.asm	/^c0107b6b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107b6e	obj/kernel.asm	/^c0107b6e:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c0107b71	obj/kernel.asm	/^c0107b71:	89 c2                	mov    %eax,%edx$/;"	l
c0107b73	obj/kernel.asm	/^c0107b73:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107b76	obj/kernel.asm	/^c0107b76:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107b79	obj/kernel.asm	/^c0107b79:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107b7c	obj/kernel.asm	/^c0107b7c:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0107b7f	obj/kernel.asm	/^c0107b7f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107b82	obj/kernel.asm	/^c0107b82:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0107b85	obj/kernel.asm	/^c0107b85:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
c0107b88	obj/kernel.asm	/^c0107b88:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0107b8b	obj/kernel.asm	/^c0107b8b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107b8e	obj/kernel.asm	/^c0107b8e:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c0107b91	obj/kernel.asm	/^c0107b91:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
c0107b94	obj/kernel.asm	/^c0107b94:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0107b97	obj/kernel.asm	/^c0107b97:	89 55 b8             	mov    %edx,-0x48(%ebp)$/;"	l
c0107b9a	obj/kernel.asm	/^c0107b9a:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0107b9d	obj/kernel.asm	/^c0107b9d:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0107ba0	obj/kernel.asm	/^c0107ba0:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c0107ba3	obj/kernel.asm	/^c0107ba3:	89 10                	mov    %edx,(%eax)$/;"	l
c0107ba5	obj/kernel.asm	/^c0107ba5:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0107ba8	obj/kernel.asm	/^c0107ba8:	8b 10                	mov    (%eax),%edx$/;"	l
c0107baa	obj/kernel.asm	/^c0107baa:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0107bad	obj/kernel.asm	/^c0107bad:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107bb0	obj/kernel.asm	/^c0107bb0:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0107bb3	obj/kernel.asm	/^c0107bb3:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0107bb6	obj/kernel.asm	/^c0107bb6:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107bb9	obj/kernel.asm	/^c0107bb9:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0107bbc	obj/kernel.asm	/^c0107bbc:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
c0107bbf	obj/kernel.asm	/^c0107bbf:	89 10                	mov    %edx,(%eax)$/;"	l
c0107bc1	obj/kernel.asm	/^c0107bc1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107bc4	obj/kernel.asm	/^c0107bc4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107bc7	obj/kernel.asm	/^c0107bc7:	eb 14                	jmp    c0107bdd <default_alloc_pages+0x165>$/;"	l
c0107bc9	obj/kernel.asm	/^c0107bc9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107bcc	obj/kernel.asm	/^c0107bcc:	6a 00                	push   $0x0$/;"	l
c0107bce	obj/kernel.asm	/^c0107bce:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0107bd1	obj/kernel.asm	/^c0107bd1:	e8 44 fd ff ff       	call   c010791a <set_page_ref>$/;"	l
c0107bd6	obj/kernel.asm	/^c0107bd6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107bd9	obj/kernel.asm	/^c0107bd9:	83 45 ec 20          	addl   $0x20,-0x14(%ebp)$/;"	l
c0107bdd	obj/kernel.asm	/^c0107bdd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107be0	obj/kernel.asm	/^c0107be0:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107be3	obj/kernel.asm	/^c0107be3:	89 c2                	mov    %eax,%edx$/;"	l
c0107be5	obj/kernel.asm	/^c0107be5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107be8	obj/kernel.asm	/^c0107be8:	01 d0                	add    %edx,%eax$/;"	l
c0107bea	obj/kernel.asm	/^c0107bea:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0107bed	obj/kernel.asm	/^c0107bed:	75 da                	jne    c0107bc9 <default_alloc_pages+0x151>$/;"	l
c0107bef	obj/kernel.asm	/^c0107bef:	a1 74 e1 19 c0       	mov    0xc019e174,%eax$/;"	l
c0107bf4	obj/kernel.asm	/^c0107bf4:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c0107bf7	obj/kernel.asm	/^c0107bf7:	a3 74 e1 19 c0       	mov    %eax,0xc019e174$/;"	l
c0107bfc	obj/kernel.asm	/^c0107bfc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107bff	obj/kernel.asm	/^c0107bff:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107c02	obj/kernel.asm	/^c0107c02:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%ebp)$/;"	l
c0107c09	obj/kernel.asm	/^c0107c09:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0107c0c	obj/kernel.asm	/^c0107c0c:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c0107c0f	obj/kernel.asm	/^c0107c0f:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c0107c12	obj/kernel.asm	/^c0107c12:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0107c15	obj/kernel.asm	/^c0107c15:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107c18	obj/kernel.asm	/^c0107c18:	c9                   	leave  $/;"	l
c0107c19	obj/kernel.asm	/^c0107c19:	c3                   	ret    $/;"	l
c0107c1a	obj/kernel.asm	/^c0107c1a <default_free_pages>:$/;"	l
c0107c1a	obj/kernel.asm	/^c0107c1a:	55                   	push   %ebp$/;"	l
c0107c1b	obj/kernel.asm	/^c0107c1b:	89 e5                	mov    %esp,%ebp$/;"	l
c0107c1d	obj/kernel.asm	/^c0107c1d:	81 ec 88 00 00 00    	sub    $0x88,%esp$/;"	l
c0107c23	obj/kernel.asm	/^c0107c23:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0107c27	obj/kernel.asm	/^c0107c27:	75 19                	jne    c0107c42 <default_free_pages+0x28>$/;"	l
c0107c29	obj/kernel.asm	/^c0107c29:	68 0c d0 10 c0       	push   $0xc010d00c$/;"	l
c0107c2e	obj/kernel.asm	/^c0107c2e:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0107c33	obj/kernel.asm	/^c0107c33:	68 8a 00 00 00       	push   $0x8a$/;"	l
c0107c38	obj/kernel.asm	/^c0107c38:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0107c3d	obj/kernel.asm	/^c0107c3d:	e8 98 87 ff ff       	call   c01003da <__panic>$/;"	l
c0107c42	obj/kernel.asm	/^c0107c42:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107c45	obj/kernel.asm	/^c0107c45:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107c48	obj/kernel.asm	/^c0107c48:	e9 8f 00 00 00       	jmp    c0107cdc <default_free_pages+0xc2>$/;"	l
c0107c4d	obj/kernel.asm	/^c0107c4d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107c50	obj/kernel.asm	/^c0107c50:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107c53	obj/kernel.asm	/^c0107c53:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0107c5a	obj/kernel.asm	/^c0107c5a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107c5d	obj/kernel.asm	/^c0107c5d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107c60	obj/kernel.asm	/^c0107c60:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0107c63	obj/kernel.asm	/^c0107c63:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0107c66	obj/kernel.asm	/^c0107c66:	19 c0                	sbb    %eax,%eax$/;"	l
c0107c68	obj/kernel.asm	/^c0107c68:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0107c6b	obj/kernel.asm	/^c0107c6b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0107c6f	obj/kernel.asm	/^c0107c6f:	0f 95 c0             	setne  %al$/;"	l
c0107c72	obj/kernel.asm	/^c0107c72:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107c75	obj/kernel.asm	/^c0107c75:	85 c0                	test   %eax,%eax$/;"	l
c0107c77	obj/kernel.asm	/^c0107c77:	75 2c                	jne    c0107ca5 <default_free_pages+0x8b>$/;"	l
c0107c79	obj/kernel.asm	/^c0107c79:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107c7c	obj/kernel.asm	/^c0107c7c:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107c7f	obj/kernel.asm	/^c0107c7f:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
c0107c86	obj/kernel.asm	/^c0107c86:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0107c89	obj/kernel.asm	/^c0107c89:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107c8c	obj/kernel.asm	/^c0107c8c:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107c8f	obj/kernel.asm	/^c0107c8f:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0107c92	obj/kernel.asm	/^c0107c92:	19 c0                	sbb    %eax,%eax$/;"	l
c0107c94	obj/kernel.asm	/^c0107c94:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0107c97	obj/kernel.asm	/^c0107c97:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c0107c9b	obj/kernel.asm	/^c0107c9b:	0f 95 c0             	setne  %al$/;"	l
c0107c9e	obj/kernel.asm	/^c0107c9e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107ca1	obj/kernel.asm	/^c0107ca1:	85 c0                	test   %eax,%eax$/;"	l
c0107ca3	obj/kernel.asm	/^c0107ca3:	74 19                	je     c0107cbe <default_free_pages+0xa4>$/;"	l
c0107ca5	obj/kernel.asm	/^c0107ca5:	68 50 d0 10 c0       	push   $0xc010d050$/;"	l
c0107caa	obj/kernel.asm	/^c0107caa:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0107caf	obj/kernel.asm	/^c0107caf:	68 8d 00 00 00       	push   $0x8d$/;"	l
c0107cb4	obj/kernel.asm	/^c0107cb4:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0107cb9	obj/kernel.asm	/^c0107cb9:	e8 1c 87 ff ff       	call   c01003da <__panic>$/;"	l
c0107cbe	obj/kernel.asm	/^c0107cbe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107cc1	obj/kernel.asm	/^c0107cc1:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c0107cc8	obj/kernel.asm	/^c0107cc8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107ccb	obj/kernel.asm	/^c0107ccb:	6a 00                	push   $0x0$/;"	l
c0107ccd	obj/kernel.asm	/^c0107ccd:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0107cd0	obj/kernel.asm	/^c0107cd0:	e8 45 fc ff ff       	call   c010791a <set_page_ref>$/;"	l
c0107cd5	obj/kernel.asm	/^c0107cd5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107cd8	obj/kernel.asm	/^c0107cd8:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0107cdc	obj/kernel.asm	/^c0107cdc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107cdf	obj/kernel.asm	/^c0107cdf:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107ce2	obj/kernel.asm	/^c0107ce2:	89 c2                	mov    %eax,%edx$/;"	l
c0107ce4	obj/kernel.asm	/^c0107ce4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107ce7	obj/kernel.asm	/^c0107ce7:	01 d0                	add    %edx,%eax$/;"	l
c0107ce9	obj/kernel.asm	/^c0107ce9:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107cec	obj/kernel.asm	/^c0107cec:	0f 85 5b ff ff ff    	jne    c0107c4d <default_free_pages+0x33>$/;"	l
c0107cf2	obj/kernel.asm	/^c0107cf2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107cf5	obj/kernel.asm	/^c0107cf5:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107cf8	obj/kernel.asm	/^c0107cf8:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107cfb	obj/kernel.asm	/^c0107cfb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107cfe	obj/kernel.asm	/^c0107cfe:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107d01	obj/kernel.asm	/^c0107d01:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)$/;"	l
c0107d08	obj/kernel.asm	/^c0107d08:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0107d0b	obj/kernel.asm	/^c0107d0b:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0107d0e	obj/kernel.asm	/^c0107d0e:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0107d11	obj/kernel.asm	/^c0107d11:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107d14	obj/kernel.asm	/^c0107d14:	c7 45 c4 6c e1 19 c0 	movl   $0xc019e16c,-0x3c(%ebp)$/;"	l
c0107d1b	obj/kernel.asm	/^c0107d1b:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0107d1e	obj/kernel.asm	/^c0107d1e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107d21	obj/kernel.asm	/^c0107d21:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107d24	obj/kernel.asm	/^c0107d24:	c7 45 ec 6c e1 19 c0 	movl   $0xc019e16c,-0x14(%ebp)$/;"	l
c0107d2b	obj/kernel.asm	/^c0107d2b:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0107d32	obj/kernel.asm	/^c0107d32:	e9 3d 01 00 00       	jmp    c0107e74 <default_free_pages+0x25a>$/;"	l
c0107d37	obj/kernel.asm	/^c0107d37:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107d3a	obj/kernel.asm	/^c0107d3a:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0107d3d	obj/kernel.asm	/^c0107d3d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107d40	obj/kernel.asm	/^c0107d40:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107d43	obj/kernel.asm	/^c0107d43:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0107d46	obj/kernel.asm	/^c0107d46:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0107d49	obj/kernel.asm	/^c0107d49:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107d4c	obj/kernel.asm	/^c0107d4c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107d4f	obj/kernel.asm	/^c0107d4f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d52	obj/kernel.asm	/^c0107d52:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107d55	obj/kernel.asm	/^c0107d55:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107d58	obj/kernel.asm	/^c0107d58:	89 c2                	mov    %eax,%edx$/;"	l
c0107d5a	obj/kernel.asm	/^c0107d5a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d5d	obj/kernel.asm	/^c0107d5d:	01 d0                	add    %edx,%eax$/;"	l
c0107d5f	obj/kernel.asm	/^c0107d5f:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107d62	obj/kernel.asm	/^c0107d62:	75 5d                	jne    c0107dc1 <default_free_pages+0x1a7>$/;"	l
c0107d64	obj/kernel.asm	/^c0107d64:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d67	obj/kernel.asm	/^c0107d67:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107d6a	obj/kernel.asm	/^c0107d6a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107d6d	obj/kernel.asm	/^c0107d6d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107d70	obj/kernel.asm	/^c0107d70:	01 c2                	add    %eax,%edx$/;"	l
c0107d72	obj/kernel.asm	/^c0107d72:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d75	obj/kernel.asm	/^c0107d75:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107d78	obj/kernel.asm	/^c0107d78:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107d7b	obj/kernel.asm	/^c0107d7b:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107d7e	obj/kernel.asm	/^c0107d7e:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%ebp)$/;"	l
c0107d85	obj/kernel.asm	/^c0107d85:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0107d88	obj/kernel.asm	/^c0107d88:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0107d8b	obj/kernel.asm	/^c0107d8b:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c0107d8e	obj/kernel.asm	/^c0107d8e:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0107d91	obj/kernel.asm	/^c0107d91:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107d94	obj/kernel.asm	/^c0107d94:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0107d97	obj/kernel.asm	/^c0107d97:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0107d9a	obj/kernel.asm	/^c0107d9a:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0107d9d	obj/kernel.asm	/^c0107d9d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107da0	obj/kernel.asm	/^c0107da0:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0107da3	obj/kernel.asm	/^c0107da3:	8b 12                	mov    (%edx),%edx$/;"	l
c0107da5	obj/kernel.asm	/^c0107da5:	89 55 b0             	mov    %edx,-0x50(%ebp)$/;"	l
c0107da8	obj/kernel.asm	/^c0107da8:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0107dab	obj/kernel.asm	/^c0107dab:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0107dae	obj/kernel.asm	/^c0107dae:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
c0107db1	obj/kernel.asm	/^c0107db1:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107db4	obj/kernel.asm	/^c0107db4:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c0107db7	obj/kernel.asm	/^c0107db7:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c0107dba	obj/kernel.asm	/^c0107dba:	89 10                	mov    %edx,(%eax)$/;"	l
c0107dbc	obj/kernel.asm	/^c0107dbc:	e9 b3 00 00 00       	jmp    c0107e74 <default_free_pages+0x25a>$/;"	l
c0107dc1	obj/kernel.asm	/^c0107dc1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107dc4	obj/kernel.asm	/^c0107dc4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107dc7	obj/kernel.asm	/^c0107dc7:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107dca	obj/kernel.asm	/^c0107dca:	89 c2                	mov    %eax,%edx$/;"	l
c0107dcc	obj/kernel.asm	/^c0107dcc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107dcf	obj/kernel.asm	/^c0107dcf:	01 d0                	add    %edx,%eax$/;"	l
c0107dd1	obj/kernel.asm	/^c0107dd1:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107dd4	obj/kernel.asm	/^c0107dd4:	75 79                	jne    c0107e4f <default_free_pages+0x235>$/;"	l
c0107dd6	obj/kernel.asm	/^c0107dd6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107dd9	obj/kernel.asm	/^c0107dd9:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107ddc	obj/kernel.asm	/^c0107ddc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107ddf	obj/kernel.asm	/^c0107ddf:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107de2	obj/kernel.asm	/^c0107de2:	01 c2                	add    %eax,%edx$/;"	l
c0107de4	obj/kernel.asm	/^c0107de4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107de7	obj/kernel.asm	/^c0107de7:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107dea	obj/kernel.asm	/^c0107dea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107ded	obj/kernel.asm	/^c0107ded:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107df0	obj/kernel.asm	/^c0107df0:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%ebp)$/;"	l
c0107df7	obj/kernel.asm	/^c0107df7:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c0107dfa	obj/kernel.asm	/^c0107dfa:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0107dfd	obj/kernel.asm	/^c0107dfd:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c0107e00	obj/kernel.asm	/^c0107e00:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0107e03	obj/kernel.asm	/^c0107e03:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e06	obj/kernel.asm	/^c0107e06:	89 45 08             	mov    %eax,0x8(%ebp)$/;"	l
c0107e09	obj/kernel.asm	/^c0107e09:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e0c	obj/kernel.asm	/^c0107e0c:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107e0f	obj/kernel.asm	/^c0107e0f:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%ebp)$/;"	l
c0107e16	obj/kernel.asm	/^c0107e16:	89 45 9c             	mov    %eax,-0x64(%ebp)$/;"	l
c0107e19	obj/kernel.asm	/^c0107e19:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c0107e1c	obj/kernel.asm	/^c0107e1c:	8b 55 a0             	mov    -0x60(%ebp),%edx$/;"	l
c0107e1f	obj/kernel.asm	/^c0107e1f:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107e22	obj/kernel.asm	/^c0107e22:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e25	obj/kernel.asm	/^c0107e25:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0107e28	obj/kernel.asm	/^c0107e28:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0107e2b	obj/kernel.asm	/^c0107e2b:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0107e2e	obj/kernel.asm	/^c0107e2e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107e31	obj/kernel.asm	/^c0107e31:	8b 55 98             	mov    -0x68(%ebp),%edx$/;"	l
c0107e34	obj/kernel.asm	/^c0107e34:	8b 12                	mov    (%edx),%edx$/;"	l
c0107e36	obj/kernel.asm	/^c0107e36:	89 55 94             	mov    %edx,-0x6c(%ebp)$/;"	l
c0107e39	obj/kernel.asm	/^c0107e39:	89 45 90             	mov    %eax,-0x70(%ebp)$/;"	l
c0107e3c	obj/kernel.asm	/^c0107e3c:	8b 45 94             	mov    -0x6c(%ebp),%eax$/;"	l
c0107e3f	obj/kernel.asm	/^c0107e3f:	8b 55 90             	mov    -0x70(%ebp),%edx$/;"	l
c0107e42	obj/kernel.asm	/^c0107e42:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107e45	obj/kernel.asm	/^c0107e45:	8b 45 90             	mov    -0x70(%ebp),%eax$/;"	l
c0107e48	obj/kernel.asm	/^c0107e48:	8b 55 94             	mov    -0x6c(%ebp),%edx$/;"	l
c0107e4b	obj/kernel.asm	/^c0107e4b:	89 10                	mov    %edx,(%eax)$/;"	l
c0107e4d	obj/kernel.asm	/^c0107e4d:	eb 25                	jmp    c0107e74 <default_free_pages+0x25a>$/;"	l
c0107e4f	obj/kernel.asm	/^c0107e4f:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0107e53	obj/kernel.asm	/^c0107e53:	75 1f                	jne    c0107e74 <default_free_pages+0x25a>$/;"	l
c0107e55	obj/kernel.asm	/^c0107e55:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e58	obj/kernel.asm	/^c0107e58:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107e5b	obj/kernel.asm	/^c0107e5b:	76 17                	jbe    c0107e74 <default_free_pages+0x25a>$/;"	l
c0107e5d	obj/kernel.asm	/^c0107e5d:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
c0107e64	obj/kernel.asm	/^c0107e64:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e67	obj/kernel.asm	/^c0107e67:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c0107e6a	obj/kernel.asm	/^c0107e6a:	8b 45 8c             	mov    -0x74(%ebp),%eax$/;"	l
c0107e6d	obj/kernel.asm	/^c0107e6d:	8b 00                	mov    (%eax),%eax$/;"	l
c0107e6f	obj/kernel.asm	/^c0107e6f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107e72	obj/kernel.asm	/^c0107e72:	eb 0d                	jmp    c0107e81 <default_free_pages+0x267>$/;"	l
c0107e74	obj/kernel.asm	/^c0107e74:	81 7d f0 6c e1 19 c0 	cmpl   $0xc019e16c,-0x10(%ebp)$/;"	l
c0107e7b	obj/kernel.asm	/^c0107e7b:	0f 85 b6 fe ff ff    	jne    c0107d37 <default_free_pages+0x11d>$/;"	l
c0107e81	obj/kernel.asm	/^c0107e81:	8b 15 74 e1 19 c0    	mov    0xc019e174,%edx$/;"	l
c0107e87	obj/kernel.asm	/^c0107e87:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107e8a	obj/kernel.asm	/^c0107e8a:	01 d0                	add    %edx,%eax$/;"	l
c0107e8c	obj/kernel.asm	/^c0107e8c:	a3 74 e1 19 c0       	mov    %eax,0xc019e174$/;"	l
c0107e91	obj/kernel.asm	/^c0107e91:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e94	obj/kernel.asm	/^c0107e94:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0107e97	obj/kernel.asm	/^c0107e97:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107e9a	obj/kernel.asm	/^c0107e9a:	89 45 88             	mov    %eax,-0x78(%ebp)$/;"	l
c0107e9d	obj/kernel.asm	/^c0107e9d:	89 55 84             	mov    %edx,-0x7c(%ebp)$/;"	l
c0107ea0	obj/kernel.asm	/^c0107ea0:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
c0107ea3	obj/kernel.asm	/^c0107ea3:	8b 00                	mov    (%eax),%eax$/;"	l
c0107ea5	obj/kernel.asm	/^c0107ea5:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c0107ea8	obj/kernel.asm	/^c0107ea8:	89 55 80             	mov    %edx,-0x80(%ebp)$/;"	l
c0107eab	obj/kernel.asm	/^c0107eab:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)$/;"	l
c0107eb1	obj/kernel.asm	/^c0107eb1:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
c0107eb4	obj/kernel.asm	/^c0107eb4:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)$/;"	l
c0107eba	obj/kernel.asm	/^c0107eba:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax$/;"	l
c0107ec0	obj/kernel.asm	/^c0107ec0:	8b 55 80             	mov    -0x80(%ebp),%edx$/;"	l
c0107ec3	obj/kernel.asm	/^c0107ec3:	89 10                	mov    %edx,(%eax)$/;"	l
c0107ec5	obj/kernel.asm	/^c0107ec5:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax$/;"	l
c0107ecb	obj/kernel.asm	/^c0107ecb:	8b 10                	mov    (%eax),%edx$/;"	l
c0107ecd	obj/kernel.asm	/^c0107ecd:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax$/;"	l
c0107ed3	obj/kernel.asm	/^c0107ed3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107ed6	obj/kernel.asm	/^c0107ed6:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c0107ed9	obj/kernel.asm	/^c0107ed9:	8b 95 78 ff ff ff    	mov    -0x88(%ebp),%edx$/;"	l
c0107edf	obj/kernel.asm	/^c0107edf:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107ee2	obj/kernel.asm	/^c0107ee2:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c0107ee5	obj/kernel.asm	/^c0107ee5:	8b 95 7c ff ff ff    	mov    -0x84(%ebp),%edx$/;"	l
c0107eeb	obj/kernel.asm	/^c0107eeb:	89 10                	mov    %edx,(%eax)$/;"	l
c0107eed	obj/kernel.asm	/^c0107eed:	c9                   	leave  $/;"	l
c0107eee	obj/kernel.asm	/^c0107eee:	c3                   	ret    $/;"	l
c0107eef	obj/kernel.asm	/^c0107eef <print_free_link>:$/;"	l
c0107eef	obj/kernel.asm	/^c0107eef:	55                   	push   %ebp$/;"	l
c0107ef0	obj/kernel.asm	/^c0107ef0:	89 e5                	mov    %esp,%ebp$/;"	l
c0107ef2	obj/kernel.asm	/^c0107ef2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107ef5	obj/kernel.asm	/^c0107ef5:	c7 45 f4 6c e1 19 c0 	movl   $0xc019e16c,-0xc(%ebp)$/;"	l
c0107efc	obj/kernel.asm	/^c0107efc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107eff	obj/kernel.asm	/^c0107eff:	68 78 d0 10 c0       	push   $0xc010d078$/;"	l
c0107f04	obj/kernel.asm	/^c0107f04:	e8 6c 83 ff ff       	call   c0100275 <cprintf>$/;"	l
c0107f09	obj/kernel.asm	/^c0107f09:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107f0c	obj/kernel.asm	/^c0107f0c:	eb 31                	jmp    c0107f3f <print_free_link+0x50>$/;"	l
c0107f0e	obj/kernel.asm	/^c0107f0e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f11	obj/kernel.asm	/^c0107f11:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0107f14	obj/kernel.asm	/^c0107f14:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107f17	obj/kernel.asm	/^c0107f17:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f1a	obj/kernel.asm	/^c0107f1a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107f1d	obj/kernel.asm	/^c0107f1d:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107f20	obj/kernel.asm	/^c0107f20:	89 c2                	mov    %eax,%edx$/;"	l
c0107f22	obj/kernel.asm	/^c0107f22:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f25	obj/kernel.asm	/^c0107f25:	01 c2                	add    %eax,%edx$/;"	l
c0107f27	obj/kernel.asm	/^c0107f27:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f2a	obj/kernel.asm	/^c0107f2a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107f2d	obj/kernel.asm	/^c0107f2d:	52                   	push   %edx$/;"	l
c0107f2e	obj/kernel.asm	/^c0107f2e:	50                   	push   %eax$/;"	l
c0107f2f	obj/kernel.asm	/^c0107f2f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0107f32	obj/kernel.asm	/^c0107f32:	68 b4 d0 10 c0       	push   $0xc010d0b4$/;"	l
c0107f37	obj/kernel.asm	/^c0107f37:	e8 39 83 ff ff       	call   c0100275 <cprintf>$/;"	l
c0107f3c	obj/kernel.asm	/^c0107f3c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107f3f	obj/kernel.asm	/^c0107f3f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f42	obj/kernel.asm	/^c0107f42:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107f45	obj/kernel.asm	/^c0107f45:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107f48	obj/kernel.asm	/^c0107f48:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107f4b	obj/kernel.asm	/^c0107f4b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107f4e	obj/kernel.asm	/^c0107f4e:	81 7d f4 6c e1 19 c0 	cmpl   $0xc019e16c,-0xc(%ebp)$/;"	l
c0107f55	obj/kernel.asm	/^c0107f55:	75 b7                	jne    c0107f0e <print_free_link+0x1f>$/;"	l
c0107f57	obj/kernel.asm	/^c0107f57:	c9                   	leave  $/;"	l
c0107f58	obj/kernel.asm	/^c0107f58:	c3                   	ret    $/;"	l
c0107f59	obj/kernel.asm	/^c0107f59 <default_nr_free_pages>:$/;"	l
c0107f59	obj/kernel.asm	/^c0107f59:	55                   	push   %ebp$/;"	l
c0107f5a	obj/kernel.asm	/^c0107f5a:	89 e5                	mov    %esp,%ebp$/;"	l
c0107f5c	obj/kernel.asm	/^c0107f5c:	a1 74 e1 19 c0       	mov    0xc019e174,%eax$/;"	l
c0107f61	obj/kernel.asm	/^c0107f61:	5d                   	pop    %ebp$/;"	l
c0107f62	obj/kernel.asm	/^c0107f62:	c3                   	ret    $/;"	l
c0107f63	obj/kernel.asm	/^c0107f63 <basic_check>:$/;"	l
c0107f63	obj/kernel.asm	/^c0107f63:	55                   	push   %ebp$/;"	l
c0107f64	obj/kernel.asm	/^c0107f64:	89 e5                	mov    %esp,%ebp$/;"	l
c0107f66	obj/kernel.asm	/^c0107f66:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0107f69	obj/kernel.asm	/^c0107f69:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0107f70	obj/kernel.asm	/^c0107f70:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f73	obj/kernel.asm	/^c0107f73:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107f76	obj/kernel.asm	/^c0107f76:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f79	obj/kernel.asm	/^c0107f79:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107f7c	obj/kernel.asm	/^c0107f7c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107f7f	obj/kernel.asm	/^c0107f7f:	6a 01                	push   $0x1$/;"	l
c0107f81	obj/kernel.asm	/^c0107f81:	e8 e5 b9 ff ff       	call   c010396b <alloc_pages>$/;"	l
c0107f86	obj/kernel.asm	/^c0107f86:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107f89	obj/kernel.asm	/^c0107f89:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107f8c	obj/kernel.asm	/^c0107f8c:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0107f90	obj/kernel.asm	/^c0107f90:	75 19                	jne    c0107fab <basic_check+0x48>$/;"	l
c0107f92	obj/kernel.asm	/^c0107f92:	68 d5 d0 10 c0       	push   $0xc010d0d5$/;"	l
c0107f97	obj/kernel.asm	/^c0107f97:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0107f9c	obj/kernel.asm	/^c0107f9c:	68 ce 00 00 00       	push   $0xce$/;"	l
c0107fa1	obj/kernel.asm	/^c0107fa1:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0107fa6	obj/kernel.asm	/^c0107fa6:	e8 2f 84 ff ff       	call   c01003da <__panic>$/;"	l
c0107fab	obj/kernel.asm	/^c0107fab:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107fae	obj/kernel.asm	/^c0107fae:	6a 01                	push   $0x1$/;"	l
c0107fb0	obj/kernel.asm	/^c0107fb0:	e8 b6 b9 ff ff       	call   c010396b <alloc_pages>$/;"	l
c0107fb5	obj/kernel.asm	/^c0107fb5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107fb8	obj/kernel.asm	/^c0107fb8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107fbb	obj/kernel.asm	/^c0107fbb:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0107fbf	obj/kernel.asm	/^c0107fbf:	75 19                	jne    c0107fda <basic_check+0x77>$/;"	l
c0107fc1	obj/kernel.asm	/^c0107fc1:	68 f1 d0 10 c0       	push   $0xc010d0f1$/;"	l
c0107fc6	obj/kernel.asm	/^c0107fc6:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0107fcb	obj/kernel.asm	/^c0107fcb:	68 cf 00 00 00       	push   $0xcf$/;"	l
c0107fd0	obj/kernel.asm	/^c0107fd0:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0107fd5	obj/kernel.asm	/^c0107fd5:	e8 00 84 ff ff       	call   c01003da <__panic>$/;"	l
c0107fda	obj/kernel.asm	/^c0107fda:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107fdd	obj/kernel.asm	/^c0107fdd:	6a 01                	push   $0x1$/;"	l
c0107fdf	obj/kernel.asm	/^c0107fdf:	e8 87 b9 ff ff       	call   c010396b <alloc_pages>$/;"	l
c0107fe4	obj/kernel.asm	/^c0107fe4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107fe7	obj/kernel.asm	/^c0107fe7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107fea	obj/kernel.asm	/^c0107fea:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107fee	obj/kernel.asm	/^c0107fee:	75 19                	jne    c0108009 <basic_check+0xa6>$/;"	l
c0107ff0	obj/kernel.asm	/^c0107ff0:	68 0d d1 10 c0       	push   $0xc010d10d$/;"	l
c0107ff5	obj/kernel.asm	/^c0107ff5:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0107ffa	obj/kernel.asm	/^c0107ffa:	68 d0 00 00 00       	push   $0xd0$/;"	l
c0107fff	obj/kernel.asm	/^c0107fff:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108004	obj/kernel.asm	/^c0108004:	e8 d1 83 ff ff       	call   c01003da <__panic>$/;"	l
c0108009	obj/kernel.asm	/^c0108009:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010800c	obj/kernel.asm	/^c010800c:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010800f	obj/kernel.asm	/^c010800f:	74 10                	je     c0108021 <basic_check+0xbe>$/;"	l
c0108011	obj/kernel.asm	/^c0108011:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108014	obj/kernel.asm	/^c0108014:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0108017	obj/kernel.asm	/^c0108017:	74 08                	je     c0108021 <basic_check+0xbe>$/;"	l
c0108019	obj/kernel.asm	/^c0108019:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010801c	obj/kernel.asm	/^c010801c:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010801f	obj/kernel.asm	/^c010801f:	75 19                	jne    c010803a <basic_check+0xd7>$/;"	l
c0108021	obj/kernel.asm	/^c0108021:	68 2c d1 10 c0       	push   $0xc010d12c$/;"	l
c0108026	obj/kernel.asm	/^c0108026:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c010802b	obj/kernel.asm	/^c010802b:	68 d2 00 00 00       	push   $0xd2$/;"	l
c0108030	obj/kernel.asm	/^c0108030:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108035	obj/kernel.asm	/^c0108035:	e8 a0 83 ff ff       	call   c01003da <__panic>$/;"	l
c010803a	obj/kernel.asm	/^c010803a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010803d	obj/kernel.asm	/^c010803d:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0108040	obj/kernel.asm	/^c0108040:	e8 cb f8 ff ff       	call   c0107910 <page_ref>$/;"	l
c0108045	obj/kernel.asm	/^c0108045:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108048	obj/kernel.asm	/^c0108048:	85 c0                	test   %eax,%eax$/;"	l
c010804a	obj/kernel.asm	/^c010804a:	75 24                	jne    c0108070 <basic_check+0x10d>$/;"	l
c010804c	obj/kernel.asm	/^c010804c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010804f	obj/kernel.asm	/^c010804f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108052	obj/kernel.asm	/^c0108052:	e8 b9 f8 ff ff       	call   c0107910 <page_ref>$/;"	l
c0108057	obj/kernel.asm	/^c0108057:	83 c4 10             	add    $0x10,%esp$/;"	l
c010805a	obj/kernel.asm	/^c010805a:	85 c0                	test   %eax,%eax$/;"	l
c010805c	obj/kernel.asm	/^c010805c:	75 12                	jne    c0108070 <basic_check+0x10d>$/;"	l
c010805e	obj/kernel.asm	/^c010805e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108061	obj/kernel.asm	/^c0108061:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108064	obj/kernel.asm	/^c0108064:	e8 a7 f8 ff ff       	call   c0107910 <page_ref>$/;"	l
c0108069	obj/kernel.asm	/^c0108069:	83 c4 10             	add    $0x10,%esp$/;"	l
c010806c	obj/kernel.asm	/^c010806c:	85 c0                	test   %eax,%eax$/;"	l
c010806e	obj/kernel.asm	/^c010806e:	74 19                	je     c0108089 <basic_check+0x126>$/;"	l
c0108070	obj/kernel.asm	/^c0108070:	68 50 d1 10 c0       	push   $0xc010d150$/;"	l
c0108075	obj/kernel.asm	/^c0108075:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c010807a	obj/kernel.asm	/^c010807a:	68 d3 00 00 00       	push   $0xd3$/;"	l
c010807f	obj/kernel.asm	/^c010807f:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108084	obj/kernel.asm	/^c0108084:	e8 51 83 ff ff       	call   c01003da <__panic>$/;"	l
c0108089	obj/kernel.asm	/^c0108089:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010808c	obj/kernel.asm	/^c010808c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010808f	obj/kernel.asm	/^c010808f:	e8 69 f8 ff ff       	call   c01078fd <page2pa>$/;"	l
c0108094	obj/kernel.asm	/^c0108094:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108097	obj/kernel.asm	/^c0108097:	89 c2                	mov    %eax,%edx$/;"	l
c0108099	obj/kernel.asm	/^c0108099:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c010809e	obj/kernel.asm	/^c010809e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01080a1	obj/kernel.asm	/^c01080a1:	39 c2                	cmp    %eax,%edx$/;"	l
c01080a3	obj/kernel.asm	/^c01080a3:	72 19                	jb     c01080be <basic_check+0x15b>$/;"	l
c01080a5	obj/kernel.asm	/^c01080a5:	68 8c d1 10 c0       	push   $0xc010d18c$/;"	l
c01080aa	obj/kernel.asm	/^c01080aa:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c01080af	obj/kernel.asm	/^c01080af:	68 d5 00 00 00       	push   $0xd5$/;"	l
c01080b4	obj/kernel.asm	/^c01080b4:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c01080b9	obj/kernel.asm	/^c01080b9:	e8 1c 83 ff ff       	call   c01003da <__panic>$/;"	l
c01080be	obj/kernel.asm	/^c01080be:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01080c1	obj/kernel.asm	/^c01080c1:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01080c4	obj/kernel.asm	/^c01080c4:	e8 34 f8 ff ff       	call   c01078fd <page2pa>$/;"	l
c01080c9	obj/kernel.asm	/^c01080c9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01080cc	obj/kernel.asm	/^c01080cc:	89 c2                	mov    %eax,%edx$/;"	l
c01080ce	obj/kernel.asm	/^c01080ce:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c01080d3	obj/kernel.asm	/^c01080d3:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01080d6	obj/kernel.asm	/^c01080d6:	39 c2                	cmp    %eax,%edx$/;"	l
c01080d8	obj/kernel.asm	/^c01080d8:	72 19                	jb     c01080f3 <basic_check+0x190>$/;"	l
c01080da	obj/kernel.asm	/^c01080da:	68 a9 d1 10 c0       	push   $0xc010d1a9$/;"	l
c01080df	obj/kernel.asm	/^c01080df:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c01080e4	obj/kernel.asm	/^c01080e4:	68 d6 00 00 00       	push   $0xd6$/;"	l
c01080e9	obj/kernel.asm	/^c01080e9:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c01080ee	obj/kernel.asm	/^c01080ee:	e8 e7 82 ff ff       	call   c01003da <__panic>$/;"	l
c01080f3	obj/kernel.asm	/^c01080f3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01080f6	obj/kernel.asm	/^c01080f6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01080f9	obj/kernel.asm	/^c01080f9:	e8 ff f7 ff ff       	call   c01078fd <page2pa>$/;"	l
c01080fe	obj/kernel.asm	/^c01080fe:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108101	obj/kernel.asm	/^c0108101:	89 c2                	mov    %eax,%edx$/;"	l
c0108103	obj/kernel.asm	/^c0108103:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c0108108	obj/kernel.asm	/^c0108108:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010810b	obj/kernel.asm	/^c010810b:	39 c2                	cmp    %eax,%edx$/;"	l
c010810d	obj/kernel.asm	/^c010810d:	72 19                	jb     c0108128 <basic_check+0x1c5>$/;"	l
c010810f	obj/kernel.asm	/^c010810f:	68 c6 d1 10 c0       	push   $0xc010d1c6$/;"	l
c0108114	obj/kernel.asm	/^c0108114:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0108119	obj/kernel.asm	/^c0108119:	68 d7 00 00 00       	push   $0xd7$/;"	l
c010811e	obj/kernel.asm	/^c010811e:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108123	obj/kernel.asm	/^c0108123:	e8 b2 82 ff ff       	call   c01003da <__panic>$/;"	l
c0108128	obj/kernel.asm	/^c0108128:	a1 6c e1 19 c0       	mov    0xc019e16c,%eax$/;"	l
c010812d	obj/kernel.asm	/^c010812d:	8b 15 70 e1 19 c0    	mov    0xc019e170,%edx$/;"	l
c0108133	obj/kernel.asm	/^c0108133:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0108136	obj/kernel.asm	/^c0108136:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0108139	obj/kernel.asm	/^c0108139:	c7 45 e0 6c e1 19 c0 	movl   $0xc019e16c,-0x20(%ebp)$/;"	l
c0108140	obj/kernel.asm	/^c0108140:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108143	obj/kernel.asm	/^c0108143:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0108146	obj/kernel.asm	/^c0108146:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108149	obj/kernel.asm	/^c0108149:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010814c	obj/kernel.asm	/^c010814c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010814f	obj/kernel.asm	/^c010814f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108152	obj/kernel.asm	/^c0108152:	89 10                	mov    %edx,(%eax)$/;"	l
c0108154	obj/kernel.asm	/^c0108154:	c7 45 dc 6c e1 19 c0 	movl   $0xc019e16c,-0x24(%ebp)$/;"	l
c010815b	obj/kernel.asm	/^c010815b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010815e	obj/kernel.asm	/^c010815e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108161	obj/kernel.asm	/^c0108161:	39 45 dc             	cmp    %eax,-0x24(%ebp)$/;"	l
c0108164	obj/kernel.asm	/^c0108164:	0f 94 c0             	sete   %al$/;"	l
c0108167	obj/kernel.asm	/^c0108167:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010816a	obj/kernel.asm	/^c010816a:	85 c0                	test   %eax,%eax$/;"	l
c010816c	obj/kernel.asm	/^c010816c:	75 19                	jne    c0108187 <basic_check+0x224>$/;"	l
c010816e	obj/kernel.asm	/^c010816e:	68 e3 d1 10 c0       	push   $0xc010d1e3$/;"	l
c0108173	obj/kernel.asm	/^c0108173:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0108178	obj/kernel.asm	/^c0108178:	68 db 00 00 00       	push   $0xdb$/;"	l
c010817d	obj/kernel.asm	/^c010817d:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108182	obj/kernel.asm	/^c0108182:	e8 53 82 ff ff       	call   c01003da <__panic>$/;"	l
c0108187	obj/kernel.asm	/^c0108187:	a1 74 e1 19 c0       	mov    0xc019e174,%eax$/;"	l
c010818c	obj/kernel.asm	/^c010818c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010818f	obj/kernel.asm	/^c010818f:	c7 05 74 e1 19 c0 00 	movl   $0x0,0xc019e174$/;"	l
c0108196	obj/kernel.asm	/^c0108196:	00 00 00 $/;"	l
c0108199	obj/kernel.asm	/^c0108199:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010819c	obj/kernel.asm	/^c010819c:	6a 01                	push   $0x1$/;"	l
c010819e	obj/kernel.asm	/^c010819e:	e8 c8 b7 ff ff       	call   c010396b <alloc_pages>$/;"	l
c01081a3	obj/kernel.asm	/^c01081a3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01081a6	obj/kernel.asm	/^c01081a6:	85 c0                	test   %eax,%eax$/;"	l
c01081a8	obj/kernel.asm	/^c01081a8:	74 19                	je     c01081c3 <basic_check+0x260>$/;"	l
c01081aa	obj/kernel.asm	/^c01081aa:	68 fa d1 10 c0       	push   $0xc010d1fa$/;"	l
c01081af	obj/kernel.asm	/^c01081af:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c01081b4	obj/kernel.asm	/^c01081b4:	68 e0 00 00 00       	push   $0xe0$/;"	l
c01081b9	obj/kernel.asm	/^c01081b9:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c01081be	obj/kernel.asm	/^c01081be:	e8 17 82 ff ff       	call   c01003da <__panic>$/;"	l
c01081c3	obj/kernel.asm	/^c01081c3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01081c6	obj/kernel.asm	/^c01081c6:	6a 01                	push   $0x1$/;"	l
c01081c8	obj/kernel.asm	/^c01081c8:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01081cb	obj/kernel.asm	/^c01081cb:	e8 07 b8 ff ff       	call   c01039d7 <free_pages>$/;"	l
c01081d0	obj/kernel.asm	/^c01081d0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01081d3	obj/kernel.asm	/^c01081d3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01081d6	obj/kernel.asm	/^c01081d6:	6a 01                	push   $0x1$/;"	l
c01081d8	obj/kernel.asm	/^c01081d8:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01081db	obj/kernel.asm	/^c01081db:	e8 f7 b7 ff ff       	call   c01039d7 <free_pages>$/;"	l
c01081e0	obj/kernel.asm	/^c01081e0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01081e3	obj/kernel.asm	/^c01081e3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01081e6	obj/kernel.asm	/^c01081e6:	6a 01                	push   $0x1$/;"	l
c01081e8	obj/kernel.asm	/^c01081e8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01081eb	obj/kernel.asm	/^c01081eb:	e8 e7 b7 ff ff       	call   c01039d7 <free_pages>$/;"	l
c01081f0	obj/kernel.asm	/^c01081f0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01081f3	obj/kernel.asm	/^c01081f3:	a1 74 e1 19 c0       	mov    0xc019e174,%eax$/;"	l
c01081f8	obj/kernel.asm	/^c01081f8:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c01081fb	obj/kernel.asm	/^c01081fb:	74 19                	je     c0108216 <basic_check+0x2b3>$/;"	l
c01081fd	obj/kernel.asm	/^c01081fd:	68 0f d2 10 c0       	push   $0xc010d20f$/;"	l
c0108202	obj/kernel.asm	/^c0108202:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0108207	obj/kernel.asm	/^c0108207:	68 e5 00 00 00       	push   $0xe5$/;"	l
c010820c	obj/kernel.asm	/^c010820c:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108211	obj/kernel.asm	/^c0108211:	e8 c4 81 ff ff       	call   c01003da <__panic>$/;"	l
c0108216	obj/kernel.asm	/^c0108216:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108219	obj/kernel.asm	/^c0108219:	6a 01                	push   $0x1$/;"	l
c010821b	obj/kernel.asm	/^c010821b:	e8 4b b7 ff ff       	call   c010396b <alloc_pages>$/;"	l
c0108220	obj/kernel.asm	/^c0108220:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108223	obj/kernel.asm	/^c0108223:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108226	obj/kernel.asm	/^c0108226:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010822a	obj/kernel.asm	/^c010822a:	75 19                	jne    c0108245 <basic_check+0x2e2>$/;"	l
c010822c	obj/kernel.asm	/^c010822c:	68 d5 d0 10 c0       	push   $0xc010d0d5$/;"	l
c0108231	obj/kernel.asm	/^c0108231:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0108236	obj/kernel.asm	/^c0108236:	68 e7 00 00 00       	push   $0xe7$/;"	l
c010823b	obj/kernel.asm	/^c010823b:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108240	obj/kernel.asm	/^c0108240:	e8 95 81 ff ff       	call   c01003da <__panic>$/;"	l
c0108245	obj/kernel.asm	/^c0108245:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108248	obj/kernel.asm	/^c0108248:	6a 01                	push   $0x1$/;"	l
c010824a	obj/kernel.asm	/^c010824a:	e8 1c b7 ff ff       	call   c010396b <alloc_pages>$/;"	l
c010824f	obj/kernel.asm	/^c010824f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108252	obj/kernel.asm	/^c0108252:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108255	obj/kernel.asm	/^c0108255:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0108259	obj/kernel.asm	/^c0108259:	75 19                	jne    c0108274 <basic_check+0x311>$/;"	l
c010825b	obj/kernel.asm	/^c010825b:	68 f1 d0 10 c0       	push   $0xc010d0f1$/;"	l
c0108260	obj/kernel.asm	/^c0108260:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0108265	obj/kernel.asm	/^c0108265:	68 e8 00 00 00       	push   $0xe8$/;"	l
c010826a	obj/kernel.asm	/^c010826a:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c010826f	obj/kernel.asm	/^c010826f:	e8 66 81 ff ff       	call   c01003da <__panic>$/;"	l
c0108274	obj/kernel.asm	/^c0108274:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108277	obj/kernel.asm	/^c0108277:	6a 01                	push   $0x1$/;"	l
c0108279	obj/kernel.asm	/^c0108279:	e8 ed b6 ff ff       	call   c010396b <alloc_pages>$/;"	l
c010827e	obj/kernel.asm	/^c010827e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108281	obj/kernel.asm	/^c0108281:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108284	obj/kernel.asm	/^c0108284:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108288	obj/kernel.asm	/^c0108288:	75 19                	jne    c01082a3 <basic_check+0x340>$/;"	l
c010828a	obj/kernel.asm	/^c010828a:	68 0d d1 10 c0       	push   $0xc010d10d$/;"	l
c010828f	obj/kernel.asm	/^c010828f:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0108294	obj/kernel.asm	/^c0108294:	68 e9 00 00 00       	push   $0xe9$/;"	l
c0108299	obj/kernel.asm	/^c0108299:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c010829e	obj/kernel.asm	/^c010829e:	e8 37 81 ff ff       	call   c01003da <__panic>$/;"	l
c01082a3	obj/kernel.asm	/^c01082a3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01082a6	obj/kernel.asm	/^c01082a6:	6a 01                	push   $0x1$/;"	l
c01082a8	obj/kernel.asm	/^c01082a8:	e8 be b6 ff ff       	call   c010396b <alloc_pages>$/;"	l
c01082ad	obj/kernel.asm	/^c01082ad:	83 c4 10             	add    $0x10,%esp$/;"	l
c01082b0	obj/kernel.asm	/^c01082b0:	85 c0                	test   %eax,%eax$/;"	l
c01082b2	obj/kernel.asm	/^c01082b2:	74 19                	je     c01082cd <basic_check+0x36a>$/;"	l
c01082b4	obj/kernel.asm	/^c01082b4:	68 fa d1 10 c0       	push   $0xc010d1fa$/;"	l
c01082b9	obj/kernel.asm	/^c01082b9:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c01082be	obj/kernel.asm	/^c01082be:	68 eb 00 00 00       	push   $0xeb$/;"	l
c01082c3	obj/kernel.asm	/^c01082c3:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c01082c8	obj/kernel.asm	/^c01082c8:	e8 0d 81 ff ff       	call   c01003da <__panic>$/;"	l
c01082cd	obj/kernel.asm	/^c01082cd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01082d0	obj/kernel.asm	/^c01082d0:	6a 01                	push   $0x1$/;"	l
c01082d2	obj/kernel.asm	/^c01082d2:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01082d5	obj/kernel.asm	/^c01082d5:	e8 fd b6 ff ff       	call   c01039d7 <free_pages>$/;"	l
c01082da	obj/kernel.asm	/^c01082da:	83 c4 10             	add    $0x10,%esp$/;"	l
c01082dd	obj/kernel.asm	/^c01082dd:	c7 45 d8 6c e1 19 c0 	movl   $0xc019e16c,-0x28(%ebp)$/;"	l
c01082e4	obj/kernel.asm	/^c01082e4:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01082e7	obj/kernel.asm	/^c01082e7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01082ea	obj/kernel.asm	/^c01082ea:	39 45 d8             	cmp    %eax,-0x28(%ebp)$/;"	l
c01082ed	obj/kernel.asm	/^c01082ed:	0f 94 c0             	sete   %al$/;"	l
c01082f0	obj/kernel.asm	/^c01082f0:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01082f3	obj/kernel.asm	/^c01082f3:	85 c0                	test   %eax,%eax$/;"	l
c01082f5	obj/kernel.asm	/^c01082f5:	74 19                	je     c0108310 <basic_check+0x3ad>$/;"	l
c01082f7	obj/kernel.asm	/^c01082f7:	68 1c d2 10 c0       	push   $0xc010d21c$/;"	l
c01082fc	obj/kernel.asm	/^c01082fc:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0108301	obj/kernel.asm	/^c0108301:	68 ee 00 00 00       	push   $0xee$/;"	l
c0108306	obj/kernel.asm	/^c0108306:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c010830b	obj/kernel.asm	/^c010830b:	e8 ca 80 ff ff       	call   c01003da <__panic>$/;"	l
c0108310	obj/kernel.asm	/^c0108310:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108313	obj/kernel.asm	/^c0108313:	6a 01                	push   $0x1$/;"	l
c0108315	obj/kernel.asm	/^c0108315:	e8 51 b6 ff ff       	call   c010396b <alloc_pages>$/;"	l
c010831a	obj/kernel.asm	/^c010831a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010831d	obj/kernel.asm	/^c010831d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108320	obj/kernel.asm	/^c0108320:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108323	obj/kernel.asm	/^c0108323:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0108326	obj/kernel.asm	/^c0108326:	74 19                	je     c0108341 <basic_check+0x3de>$/;"	l
c0108328	obj/kernel.asm	/^c0108328:	68 34 d2 10 c0       	push   $0xc010d234$/;"	l
c010832d	obj/kernel.asm	/^c010832d:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0108332	obj/kernel.asm	/^c0108332:	68 f1 00 00 00       	push   $0xf1$/;"	l
c0108337	obj/kernel.asm	/^c0108337:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c010833c	obj/kernel.asm	/^c010833c:	e8 99 80 ff ff       	call   c01003da <__panic>$/;"	l
c0108341	obj/kernel.asm	/^c0108341:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108344	obj/kernel.asm	/^c0108344:	6a 01                	push   $0x1$/;"	l
c0108346	obj/kernel.asm	/^c0108346:	e8 20 b6 ff ff       	call   c010396b <alloc_pages>$/;"	l
c010834b	obj/kernel.asm	/^c010834b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010834e	obj/kernel.asm	/^c010834e:	85 c0                	test   %eax,%eax$/;"	l
c0108350	obj/kernel.asm	/^c0108350:	74 19                	je     c010836b <basic_check+0x408>$/;"	l
c0108352	obj/kernel.asm	/^c0108352:	68 fa d1 10 c0       	push   $0xc010d1fa$/;"	l
c0108357	obj/kernel.asm	/^c0108357:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c010835c	obj/kernel.asm	/^c010835c:	68 f2 00 00 00       	push   $0xf2$/;"	l
c0108361	obj/kernel.asm	/^c0108361:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108366	obj/kernel.asm	/^c0108366:	e8 6f 80 ff ff       	call   c01003da <__panic>$/;"	l
c010836b	obj/kernel.asm	/^c010836b:	a1 74 e1 19 c0       	mov    0xc019e174,%eax$/;"	l
c0108370	obj/kernel.asm	/^c0108370:	85 c0                	test   %eax,%eax$/;"	l
c0108372	obj/kernel.asm	/^c0108372:	74 19                	je     c010838d <basic_check+0x42a>$/;"	l
c0108374	obj/kernel.asm	/^c0108374:	68 4d d2 10 c0       	push   $0xc010d24d$/;"	l
c0108379	obj/kernel.asm	/^c0108379:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c010837e	obj/kernel.asm	/^c010837e:	68 f4 00 00 00       	push   $0xf4$/;"	l
c0108383	obj/kernel.asm	/^c0108383:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108388	obj/kernel.asm	/^c0108388:	e8 4d 80 ff ff       	call   c01003da <__panic>$/;"	l
c010838d	obj/kernel.asm	/^c010838d:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0108390	obj/kernel.asm	/^c0108390:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0108393	obj/kernel.asm	/^c0108393:	a3 6c e1 19 c0       	mov    %eax,0xc019e16c$/;"	l
c0108398	obj/kernel.asm	/^c0108398:	89 15 70 e1 19 c0    	mov    %edx,0xc019e170$/;"	l
c010839e	obj/kernel.asm	/^c010839e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01083a1	obj/kernel.asm	/^c01083a1:	a3 74 e1 19 c0       	mov    %eax,0xc019e174$/;"	l
c01083a6	obj/kernel.asm	/^c01083a6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01083a9	obj/kernel.asm	/^c01083a9:	6a 01                	push   $0x1$/;"	l
c01083ab	obj/kernel.asm	/^c01083ab:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01083ae	obj/kernel.asm	/^c01083ae:	e8 24 b6 ff ff       	call   c01039d7 <free_pages>$/;"	l
c01083b3	obj/kernel.asm	/^c01083b3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01083b6	obj/kernel.asm	/^c01083b6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01083b9	obj/kernel.asm	/^c01083b9:	6a 01                	push   $0x1$/;"	l
c01083bb	obj/kernel.asm	/^c01083bb:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01083be	obj/kernel.asm	/^c01083be:	e8 14 b6 ff ff       	call   c01039d7 <free_pages>$/;"	l
c01083c3	obj/kernel.asm	/^c01083c3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01083c6	obj/kernel.asm	/^c01083c6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01083c9	obj/kernel.asm	/^c01083c9:	6a 01                	push   $0x1$/;"	l
c01083cb	obj/kernel.asm	/^c01083cb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01083ce	obj/kernel.asm	/^c01083ce:	e8 04 b6 ff ff       	call   c01039d7 <free_pages>$/;"	l
c01083d3	obj/kernel.asm	/^c01083d3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01083d6	obj/kernel.asm	/^c01083d6:	c9                   	leave  $/;"	l
c01083d7	obj/kernel.asm	/^c01083d7:	c3                   	ret    $/;"	l
c01083d8	obj/kernel.asm	/^c01083d8 <default_check>:$/;"	l
c01083d8	obj/kernel.asm	/^c01083d8:	55                   	push   %ebp$/;"	l
c01083d9	obj/kernel.asm	/^c01083d9:	89 e5                	mov    %esp,%ebp$/;"	l
c01083db	obj/kernel.asm	/^c01083db:	53                   	push   %ebx$/;"	l
c01083dc	obj/kernel.asm	/^c01083dc:	81 ec 84 00 00 00    	sub    $0x84,%esp$/;"	l
c01083e2	obj/kernel.asm	/^c01083e2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01083e9	obj/kernel.asm	/^c01083e9:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01083f0	obj/kernel.asm	/^c01083f0:	c7 45 ec 6c e1 19 c0 	movl   $0xc019e16c,-0x14(%ebp)$/;"	l
c01083f7	obj/kernel.asm	/^c01083f7:	eb 60                	jmp    c0108459 <default_check+0x81>$/;"	l
c01083f9	obj/kernel.asm	/^c01083f9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01083fc	obj/kernel.asm	/^c01083fc:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01083ff	obj/kernel.asm	/^c01083ff:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108402	obj/kernel.asm	/^c0108402:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108405	obj/kernel.asm	/^c0108405:	83 c0 04             	add    $0x4,%eax$/;"	l
c0108408	obj/kernel.asm	/^c0108408:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)$/;"	l
c010840f	obj/kernel.asm	/^c010840f:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0108412	obj/kernel.asm	/^c0108412:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0108415	obj/kernel.asm	/^c0108415:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0108418	obj/kernel.asm	/^c0108418:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010841b	obj/kernel.asm	/^c010841b:	19 c0                	sbb    %eax,%eax$/;"	l
c010841d	obj/kernel.asm	/^c010841d:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0108420	obj/kernel.asm	/^c0108420:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c0108424	obj/kernel.asm	/^c0108424:	0f 95 c0             	setne  %al$/;"	l
c0108427	obj/kernel.asm	/^c0108427:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010842a	obj/kernel.asm	/^c010842a:	85 c0                	test   %eax,%eax$/;"	l
c010842c	obj/kernel.asm	/^c010842c:	75 19                	jne    c0108447 <default_check+0x6f>$/;"	l
c010842e	obj/kernel.asm	/^c010842e:	68 5a d2 10 c0       	push   $0xc010d25a$/;"	l
c0108433	obj/kernel.asm	/^c0108433:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0108438	obj/kernel.asm	/^c0108438:	68 05 01 00 00       	push   $0x105$/;"	l
c010843d	obj/kernel.asm	/^c010843d:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108442	obj/kernel.asm	/^c0108442:	e8 93 7f ff ff       	call   c01003da <__panic>$/;"	l
c0108447	obj/kernel.asm	/^c0108447:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010844b	obj/kernel.asm	/^c010844b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010844e	obj/kernel.asm	/^c010844e:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0108451	obj/kernel.asm	/^c0108451:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108454	obj/kernel.asm	/^c0108454:	01 d0                	add    %edx,%eax$/;"	l
c0108456	obj/kernel.asm	/^c0108456:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108459	obj/kernel.asm	/^c0108459:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010845c	obj/kernel.asm	/^c010845c:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010845f	obj/kernel.asm	/^c010845f:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0108462	obj/kernel.asm	/^c0108462:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108465	obj/kernel.asm	/^c0108465:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108468	obj/kernel.asm	/^c0108468:	81 7d ec 6c e1 19 c0 	cmpl   $0xc019e16c,-0x14(%ebp)$/;"	l
c010846f	obj/kernel.asm	/^c010846f:	75 88                	jne    c01083f9 <default_check+0x21>$/;"	l
c0108471	obj/kernel.asm	/^c0108471:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c0108474	obj/kernel.asm	/^c0108474:	e8 92 b5 ff ff       	call   c0103a0b <nr_free_pages>$/;"	l
c0108479	obj/kernel.asm	/^c0108479:	39 c3                	cmp    %eax,%ebx$/;"	l
c010847b	obj/kernel.asm	/^c010847b:	74 19                	je     c0108496 <default_check+0xbe>$/;"	l
c010847d	obj/kernel.asm	/^c010847d:	68 6a d2 10 c0       	push   $0xc010d26a$/;"	l
c0108482	obj/kernel.asm	/^c0108482:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0108487	obj/kernel.asm	/^c0108487:	68 08 01 00 00       	push   $0x108$/;"	l
c010848c	obj/kernel.asm	/^c010848c:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108491	obj/kernel.asm	/^c0108491:	e8 44 7f ff ff       	call   c01003da <__panic>$/;"	l
c0108496	obj/kernel.asm	/^c0108496:	e8 c8 fa ff ff       	call   c0107f63 <basic_check>$/;"	l
c010849b	obj/kernel.asm	/^c010849b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010849e	obj/kernel.asm	/^c010849e:	6a 05                	push   $0x5$/;"	l
c01084a0	obj/kernel.asm	/^c01084a0:	e8 c6 b4 ff ff       	call   c010396b <alloc_pages>$/;"	l
c01084a5	obj/kernel.asm	/^c01084a5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01084a8	obj/kernel.asm	/^c01084a8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01084ab	obj/kernel.asm	/^c01084ab:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01084af	obj/kernel.asm	/^c01084af:	75 19                	jne    c01084ca <default_check+0xf2>$/;"	l
c01084b1	obj/kernel.asm	/^c01084b1:	68 83 d2 10 c0       	push   $0xc010d283$/;"	l
c01084b6	obj/kernel.asm	/^c01084b6:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c01084bb	obj/kernel.asm	/^c01084bb:	68 0d 01 00 00       	push   $0x10d$/;"	l
c01084c0	obj/kernel.asm	/^c01084c0:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c01084c5	obj/kernel.asm	/^c01084c5:	e8 10 7f ff ff       	call   c01003da <__panic>$/;"	l
c01084ca	obj/kernel.asm	/^c01084ca:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01084cd	obj/kernel.asm	/^c01084cd:	83 c0 04             	add    $0x4,%eax$/;"	l
c01084d0	obj/kernel.asm	/^c01084d0:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c01084d7	obj/kernel.asm	/^c01084d7:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c01084da	obj/kernel.asm	/^c01084da:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c01084dd	obj/kernel.asm	/^c01084dd:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c01084e0	obj/kernel.asm	/^c01084e0:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01084e3	obj/kernel.asm	/^c01084e3:	19 c0                	sbb    %eax,%eax$/;"	l
c01084e5	obj/kernel.asm	/^c01084e5:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c01084e8	obj/kernel.asm	/^c01084e8:	83 7d b8 00          	cmpl   $0x0,-0x48(%ebp)$/;"	l
c01084ec	obj/kernel.asm	/^c01084ec:	0f 95 c0             	setne  %al$/;"	l
c01084ef	obj/kernel.asm	/^c01084ef:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01084f2	obj/kernel.asm	/^c01084f2:	85 c0                	test   %eax,%eax$/;"	l
c01084f4	obj/kernel.asm	/^c01084f4:	74 19                	je     c010850f <default_check+0x137>$/;"	l
c01084f6	obj/kernel.asm	/^c01084f6:	68 8e d2 10 c0       	push   $0xc010d28e$/;"	l
c01084fb	obj/kernel.asm	/^c01084fb:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0108500	obj/kernel.asm	/^c0108500:	68 0e 01 00 00       	push   $0x10e$/;"	l
c0108505	obj/kernel.asm	/^c0108505:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c010850a	obj/kernel.asm	/^c010850a:	e8 cb 7e ff ff       	call   c01003da <__panic>$/;"	l
c010850f	obj/kernel.asm	/^c010850f:	a1 6c e1 19 c0       	mov    0xc019e16c,%eax$/;"	l
c0108514	obj/kernel.asm	/^c0108514:	8b 15 70 e1 19 c0    	mov    0xc019e170,%edx$/;"	l
c010851a	obj/kernel.asm	/^c010851a:	89 45 80             	mov    %eax,-0x80(%ebp)$/;"	l
c010851d	obj/kernel.asm	/^c010851d:	89 55 84             	mov    %edx,-0x7c(%ebp)$/;"	l
c0108520	obj/kernel.asm	/^c0108520:	c7 45 b4 6c e1 19 c0 	movl   $0xc019e16c,-0x4c(%ebp)$/;"	l
c0108527	obj/kernel.asm	/^c0108527:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010852a	obj/kernel.asm	/^c010852a:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c010852d	obj/kernel.asm	/^c010852d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108530	obj/kernel.asm	/^c0108530:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0108533	obj/kernel.asm	/^c0108533:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108536	obj/kernel.asm	/^c0108536:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0108539	obj/kernel.asm	/^c0108539:	89 10                	mov    %edx,(%eax)$/;"	l
c010853b	obj/kernel.asm	/^c010853b:	c7 45 b0 6c e1 19 c0 	movl   $0xc019e16c,-0x50(%ebp)$/;"	l
c0108542	obj/kernel.asm	/^c0108542:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0108545	obj/kernel.asm	/^c0108545:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108548	obj/kernel.asm	/^c0108548:	39 45 b0             	cmp    %eax,-0x50(%ebp)$/;"	l
c010854b	obj/kernel.asm	/^c010854b:	0f 94 c0             	sete   %al$/;"	l
c010854e	obj/kernel.asm	/^c010854e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108551	obj/kernel.asm	/^c0108551:	85 c0                	test   %eax,%eax$/;"	l
c0108553	obj/kernel.asm	/^c0108553:	75 19                	jne    c010856e <default_check+0x196>$/;"	l
c0108555	obj/kernel.asm	/^c0108555:	68 e3 d1 10 c0       	push   $0xc010d1e3$/;"	l
c010855a	obj/kernel.asm	/^c010855a:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c010855f	obj/kernel.asm	/^c010855f:	68 12 01 00 00       	push   $0x112$/;"	l
c0108564	obj/kernel.asm	/^c0108564:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108569	obj/kernel.asm	/^c0108569:	e8 6c 7e ff ff       	call   c01003da <__panic>$/;"	l
c010856e	obj/kernel.asm	/^c010856e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108571	obj/kernel.asm	/^c0108571:	6a 01                	push   $0x1$/;"	l
c0108573	obj/kernel.asm	/^c0108573:	e8 f3 b3 ff ff       	call   c010396b <alloc_pages>$/;"	l
c0108578	obj/kernel.asm	/^c0108578:	83 c4 10             	add    $0x10,%esp$/;"	l
c010857b	obj/kernel.asm	/^c010857b:	85 c0                	test   %eax,%eax$/;"	l
c010857d	obj/kernel.asm	/^c010857d:	74 19                	je     c0108598 <default_check+0x1c0>$/;"	l
c010857f	obj/kernel.asm	/^c010857f:	68 fa d1 10 c0       	push   $0xc010d1fa$/;"	l
c0108584	obj/kernel.asm	/^c0108584:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0108589	obj/kernel.asm	/^c0108589:	68 13 01 00 00       	push   $0x113$/;"	l
c010858e	obj/kernel.asm	/^c010858e:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108593	obj/kernel.asm	/^c0108593:	e8 42 7e ff ff       	call   c01003da <__panic>$/;"	l
c0108598	obj/kernel.asm	/^c0108598:	a1 74 e1 19 c0       	mov    0xc019e174,%eax$/;"	l
c010859d	obj/kernel.asm	/^c010859d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01085a0	obj/kernel.asm	/^c01085a0:	c7 05 74 e1 19 c0 00 	movl   $0x0,0xc019e174$/;"	l
c01085a7	obj/kernel.asm	/^c01085a7:	00 00 00 $/;"	l
c01085aa	obj/kernel.asm	/^c01085aa:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01085ad	obj/kernel.asm	/^c01085ad:	83 c0 40             	add    $0x40,%eax$/;"	l
c01085b0	obj/kernel.asm	/^c01085b0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01085b3	obj/kernel.asm	/^c01085b3:	6a 03                	push   $0x3$/;"	l
c01085b5	obj/kernel.asm	/^c01085b5:	50                   	push   %eax$/;"	l
c01085b6	obj/kernel.asm	/^c01085b6:	e8 1c b4 ff ff       	call   c01039d7 <free_pages>$/;"	l
c01085bb	obj/kernel.asm	/^c01085bb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01085be	obj/kernel.asm	/^c01085be:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01085c1	obj/kernel.asm	/^c01085c1:	6a 04                	push   $0x4$/;"	l
c01085c3	obj/kernel.asm	/^c01085c3:	e8 a3 b3 ff ff       	call   c010396b <alloc_pages>$/;"	l
c01085c8	obj/kernel.asm	/^c01085c8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01085cb	obj/kernel.asm	/^c01085cb:	85 c0                	test   %eax,%eax$/;"	l
c01085cd	obj/kernel.asm	/^c01085cd:	74 19                	je     c01085e8 <default_check+0x210>$/;"	l
c01085cf	obj/kernel.asm	/^c01085cf:	68 a0 d2 10 c0       	push   $0xc010d2a0$/;"	l
c01085d4	obj/kernel.asm	/^c01085d4:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c01085d9	obj/kernel.asm	/^c01085d9:	68 19 01 00 00       	push   $0x119$/;"	l
c01085de	obj/kernel.asm	/^c01085de:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c01085e3	obj/kernel.asm	/^c01085e3:	e8 f2 7d ff ff       	call   c01003da <__panic>$/;"	l
c01085e8	obj/kernel.asm	/^c01085e8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01085eb	obj/kernel.asm	/^c01085eb:	83 c0 40             	add    $0x40,%eax$/;"	l
c01085ee	obj/kernel.asm	/^c01085ee:	83 c0 04             	add    $0x4,%eax$/;"	l
c01085f1	obj/kernel.asm	/^c01085f1:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%ebp)$/;"	l
c01085f8	obj/kernel.asm	/^c01085f8:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c01085fb	obj/kernel.asm	/^c01085fb:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c01085fe	obj/kernel.asm	/^c01085fe:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
c0108601	obj/kernel.asm	/^c0108601:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0108604	obj/kernel.asm	/^c0108604:	19 c0                	sbb    %eax,%eax$/;"	l
c0108606	obj/kernel.asm	/^c0108606:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c0108609	obj/kernel.asm	/^c0108609:	83 7d a4 00          	cmpl   $0x0,-0x5c(%ebp)$/;"	l
c010860d	obj/kernel.asm	/^c010860d:	0f 95 c0             	setne  %al$/;"	l
c0108610	obj/kernel.asm	/^c0108610:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108613	obj/kernel.asm	/^c0108613:	85 c0                	test   %eax,%eax$/;"	l
c0108615	obj/kernel.asm	/^c0108615:	74 0e                	je     c0108625 <default_check+0x24d>$/;"	l
c0108617	obj/kernel.asm	/^c0108617:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010861a	obj/kernel.asm	/^c010861a:	83 c0 40             	add    $0x40,%eax$/;"	l
c010861d	obj/kernel.asm	/^c010861d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108620	obj/kernel.asm	/^c0108620:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0108623	obj/kernel.asm	/^c0108623:	74 19                	je     c010863e <default_check+0x266>$/;"	l
c0108625	obj/kernel.asm	/^c0108625:	68 b8 d2 10 c0       	push   $0xc010d2b8$/;"	l
c010862a	obj/kernel.asm	/^c010862a:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c010862f	obj/kernel.asm	/^c010862f:	68 1a 01 00 00       	push   $0x11a$/;"	l
c0108634	obj/kernel.asm	/^c0108634:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108639	obj/kernel.asm	/^c0108639:	e8 9c 7d ff ff       	call   c01003da <__panic>$/;"	l
c010863e	obj/kernel.asm	/^c010863e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108641	obj/kernel.asm	/^c0108641:	6a 03                	push   $0x3$/;"	l
c0108643	obj/kernel.asm	/^c0108643:	e8 23 b3 ff ff       	call   c010396b <alloc_pages>$/;"	l
c0108648	obj/kernel.asm	/^c0108648:	83 c4 10             	add    $0x10,%esp$/;"	l
c010864b	obj/kernel.asm	/^c010864b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010864e	obj/kernel.asm	/^c010864e:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0108652	obj/kernel.asm	/^c0108652:	75 19                	jne    c010866d <default_check+0x295>$/;"	l
c0108654	obj/kernel.asm	/^c0108654:	68 e4 d2 10 c0       	push   $0xc010d2e4$/;"	l
c0108659	obj/kernel.asm	/^c0108659:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c010865e	obj/kernel.asm	/^c010865e:	68 1b 01 00 00       	push   $0x11b$/;"	l
c0108663	obj/kernel.asm	/^c0108663:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108668	obj/kernel.asm	/^c0108668:	e8 6d 7d ff ff       	call   c01003da <__panic>$/;"	l
c010866d	obj/kernel.asm	/^c010866d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108670	obj/kernel.asm	/^c0108670:	6a 01                	push   $0x1$/;"	l
c0108672	obj/kernel.asm	/^c0108672:	e8 f4 b2 ff ff       	call   c010396b <alloc_pages>$/;"	l
c0108677	obj/kernel.asm	/^c0108677:	83 c4 10             	add    $0x10,%esp$/;"	l
c010867a	obj/kernel.asm	/^c010867a:	85 c0                	test   %eax,%eax$/;"	l
c010867c	obj/kernel.asm	/^c010867c:	74 19                	je     c0108697 <default_check+0x2bf>$/;"	l
c010867e	obj/kernel.asm	/^c010867e:	68 fa d1 10 c0       	push   $0xc010d1fa$/;"	l
c0108683	obj/kernel.asm	/^c0108683:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0108688	obj/kernel.asm	/^c0108688:	68 1c 01 00 00       	push   $0x11c$/;"	l
c010868d	obj/kernel.asm	/^c010868d:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108692	obj/kernel.asm	/^c0108692:	e8 43 7d ff ff       	call   c01003da <__panic>$/;"	l
c0108697	obj/kernel.asm	/^c0108697:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010869a	obj/kernel.asm	/^c010869a:	83 c0 40             	add    $0x40,%eax$/;"	l
c010869d	obj/kernel.asm	/^c010869d:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c01086a0	obj/kernel.asm	/^c01086a0:	74 19                	je     c01086bb <default_check+0x2e3>$/;"	l
c01086a2	obj/kernel.asm	/^c01086a2:	68 02 d3 10 c0       	push   $0xc010d302$/;"	l
c01086a7	obj/kernel.asm	/^c01086a7:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c01086ac	obj/kernel.asm	/^c01086ac:	68 1d 01 00 00       	push   $0x11d$/;"	l
c01086b1	obj/kernel.asm	/^c01086b1:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c01086b6	obj/kernel.asm	/^c01086b6:	e8 1f 7d ff ff       	call   c01003da <__panic>$/;"	l
c01086bb	obj/kernel.asm	/^c01086bb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01086be	obj/kernel.asm	/^c01086be:	83 c0 20             	add    $0x20,%eax$/;"	l
c01086c1	obj/kernel.asm	/^c01086c1:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01086c4	obj/kernel.asm	/^c01086c4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01086c7	obj/kernel.asm	/^c01086c7:	6a 01                	push   $0x1$/;"	l
c01086c9	obj/kernel.asm	/^c01086c9:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01086cc	obj/kernel.asm	/^c01086cc:	e8 06 b3 ff ff       	call   c01039d7 <free_pages>$/;"	l
c01086d1	obj/kernel.asm	/^c01086d1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01086d4	obj/kernel.asm	/^c01086d4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01086d7	obj/kernel.asm	/^c01086d7:	6a 03                	push   $0x3$/;"	l
c01086d9	obj/kernel.asm	/^c01086d9:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c01086dc	obj/kernel.asm	/^c01086dc:	e8 f6 b2 ff ff       	call   c01039d7 <free_pages>$/;"	l
c01086e1	obj/kernel.asm	/^c01086e1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01086e4	obj/kernel.asm	/^c01086e4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01086e7	obj/kernel.asm	/^c01086e7:	83 c0 04             	add    $0x4,%eax$/;"	l
c01086ea	obj/kernel.asm	/^c01086ea:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%ebp)$/;"	l
c01086f1	obj/kernel.asm	/^c01086f1:	89 45 9c             	mov    %eax,-0x64(%ebp)$/;"	l
c01086f4	obj/kernel.asm	/^c01086f4:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c01086f7	obj/kernel.asm	/^c01086f7:	8b 55 a0             	mov    -0x60(%ebp),%edx$/;"	l
c01086fa	obj/kernel.asm	/^c01086fa:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01086fd	obj/kernel.asm	/^c01086fd:	19 c0                	sbb    %eax,%eax$/;"	l
c01086ff	obj/kernel.asm	/^c01086ff:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0108702	obj/kernel.asm	/^c0108702:	83 7d 98 00          	cmpl   $0x0,-0x68(%ebp)$/;"	l
c0108706	obj/kernel.asm	/^c0108706:	0f 95 c0             	setne  %al$/;"	l
c0108709	obj/kernel.asm	/^c0108709:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010870c	obj/kernel.asm	/^c010870c:	85 c0                	test   %eax,%eax$/;"	l
c010870e	obj/kernel.asm	/^c010870e:	74 0b                	je     c010871b <default_check+0x343>$/;"	l
c0108710	obj/kernel.asm	/^c0108710:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108713	obj/kernel.asm	/^c0108713:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108716	obj/kernel.asm	/^c0108716:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0108719	obj/kernel.asm	/^c0108719:	74 19                	je     c0108734 <default_check+0x35c>$/;"	l
c010871b	obj/kernel.asm	/^c010871b:	68 10 d3 10 c0       	push   $0xc010d310$/;"	l
c0108720	obj/kernel.asm	/^c0108720:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0108725	obj/kernel.asm	/^c0108725:	68 22 01 00 00       	push   $0x122$/;"	l
c010872a	obj/kernel.asm	/^c010872a:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c010872f	obj/kernel.asm	/^c010872f:	e8 a6 7c ff ff       	call   c01003da <__panic>$/;"	l
c0108734	obj/kernel.asm	/^c0108734:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108737	obj/kernel.asm	/^c0108737:	83 c0 04             	add    $0x4,%eax$/;"	l
c010873a	obj/kernel.asm	/^c010873a:	c7 45 94 01 00 00 00 	movl   $0x1,-0x6c(%ebp)$/;"	l
c0108741	obj/kernel.asm	/^c0108741:	89 45 90             	mov    %eax,-0x70(%ebp)$/;"	l
c0108744	obj/kernel.asm	/^c0108744:	8b 45 90             	mov    -0x70(%ebp),%eax$/;"	l
c0108747	obj/kernel.asm	/^c0108747:	8b 55 94             	mov    -0x6c(%ebp),%edx$/;"	l
c010874a	obj/kernel.asm	/^c010874a:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010874d	obj/kernel.asm	/^c010874d:	19 c0                	sbb    %eax,%eax$/;"	l
c010874f	obj/kernel.asm	/^c010874f:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c0108752	obj/kernel.asm	/^c0108752:	83 7d 8c 00          	cmpl   $0x0,-0x74(%ebp)$/;"	l
c0108756	obj/kernel.asm	/^c0108756:	0f 95 c0             	setne  %al$/;"	l
c0108759	obj/kernel.asm	/^c0108759:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010875c	obj/kernel.asm	/^c010875c:	85 c0                	test   %eax,%eax$/;"	l
c010875e	obj/kernel.asm	/^c010875e:	74 0b                	je     c010876b <default_check+0x393>$/;"	l
c0108760	obj/kernel.asm	/^c0108760:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108763	obj/kernel.asm	/^c0108763:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108766	obj/kernel.asm	/^c0108766:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0108769	obj/kernel.asm	/^c0108769:	74 19                	je     c0108784 <default_check+0x3ac>$/;"	l
c010876b	obj/kernel.asm	/^c010876b:	68 38 d3 10 c0       	push   $0xc010d338$/;"	l
c0108770	obj/kernel.asm	/^c0108770:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0108775	obj/kernel.asm	/^c0108775:	68 23 01 00 00       	push   $0x123$/;"	l
c010877a	obj/kernel.asm	/^c010877a:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c010877f	obj/kernel.asm	/^c010877f:	e8 56 7c ff ff       	call   c01003da <__panic>$/;"	l
c0108784	obj/kernel.asm	/^c0108784:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108787	obj/kernel.asm	/^c0108787:	6a 01                	push   $0x1$/;"	l
c0108789	obj/kernel.asm	/^c0108789:	e8 dd b1 ff ff       	call   c010396b <alloc_pages>$/;"	l
c010878e	obj/kernel.asm	/^c010878e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108791	obj/kernel.asm	/^c0108791:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108794	obj/kernel.asm	/^c0108794:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0108797	obj/kernel.asm	/^c0108797:	83 e8 20             	sub    $0x20,%eax$/;"	l
c010879a	obj/kernel.asm	/^c010879a:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c010879d	obj/kernel.asm	/^c010879d:	74 19                	je     c01087b8 <default_check+0x3e0>$/;"	l
c010879f	obj/kernel.asm	/^c010879f:	68 5e d3 10 c0       	push   $0xc010d35e$/;"	l
c01087a4	obj/kernel.asm	/^c01087a4:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c01087a9	obj/kernel.asm	/^c01087a9:	68 25 01 00 00       	push   $0x125$/;"	l
c01087ae	obj/kernel.asm	/^c01087ae:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c01087b3	obj/kernel.asm	/^c01087b3:	e8 22 7c ff ff       	call   c01003da <__panic>$/;"	l
c01087b8	obj/kernel.asm	/^c01087b8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01087bb	obj/kernel.asm	/^c01087bb:	6a 01                	push   $0x1$/;"	l
c01087bd	obj/kernel.asm	/^c01087bd:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01087c0	obj/kernel.asm	/^c01087c0:	e8 12 b2 ff ff       	call   c01039d7 <free_pages>$/;"	l
c01087c5	obj/kernel.asm	/^c01087c5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01087c8	obj/kernel.asm	/^c01087c8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01087cb	obj/kernel.asm	/^c01087cb:	6a 02                	push   $0x2$/;"	l
c01087cd	obj/kernel.asm	/^c01087cd:	e8 99 b1 ff ff       	call   c010396b <alloc_pages>$/;"	l
c01087d2	obj/kernel.asm	/^c01087d2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01087d5	obj/kernel.asm	/^c01087d5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01087d8	obj/kernel.asm	/^c01087d8:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01087db	obj/kernel.asm	/^c01087db:	83 c0 20             	add    $0x20,%eax$/;"	l
c01087de	obj/kernel.asm	/^c01087de:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c01087e1	obj/kernel.asm	/^c01087e1:	74 19                	je     c01087fc <default_check+0x424>$/;"	l
c01087e3	obj/kernel.asm	/^c01087e3:	68 7c d3 10 c0       	push   $0xc010d37c$/;"	l
c01087e8	obj/kernel.asm	/^c01087e8:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c01087ed	obj/kernel.asm	/^c01087ed:	68 27 01 00 00       	push   $0x127$/;"	l
c01087f2	obj/kernel.asm	/^c01087f2:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c01087f7	obj/kernel.asm	/^c01087f7:	e8 de 7b ff ff       	call   c01003da <__panic>$/;"	l
c01087fc	obj/kernel.asm	/^c01087fc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01087ff	obj/kernel.asm	/^c01087ff:	6a 02                	push   $0x2$/;"	l
c0108801	obj/kernel.asm	/^c0108801:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0108804	obj/kernel.asm	/^c0108804:	e8 ce b1 ff ff       	call   c01039d7 <free_pages>$/;"	l
c0108809	obj/kernel.asm	/^c0108809:	83 c4 10             	add    $0x10,%esp$/;"	l
c010880c	obj/kernel.asm	/^c010880c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010880f	obj/kernel.asm	/^c010880f:	6a 01                	push   $0x1$/;"	l
c0108811	obj/kernel.asm	/^c0108811:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c0108814	obj/kernel.asm	/^c0108814:	e8 be b1 ff ff       	call   c01039d7 <free_pages>$/;"	l
c0108819	obj/kernel.asm	/^c0108819:	83 c4 10             	add    $0x10,%esp$/;"	l
c010881c	obj/kernel.asm	/^c010881c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010881f	obj/kernel.asm	/^c010881f:	6a 05                	push   $0x5$/;"	l
c0108821	obj/kernel.asm	/^c0108821:	e8 45 b1 ff ff       	call   c010396b <alloc_pages>$/;"	l
c0108826	obj/kernel.asm	/^c0108826:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108829	obj/kernel.asm	/^c0108829:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010882c	obj/kernel.asm	/^c010882c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0108830	obj/kernel.asm	/^c0108830:	75 19                	jne    c010884b <default_check+0x473>$/;"	l
c0108832	obj/kernel.asm	/^c0108832:	68 9c d3 10 c0       	push   $0xc010d39c$/;"	l
c0108837	obj/kernel.asm	/^c0108837:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c010883c	obj/kernel.asm	/^c010883c:	68 2c 01 00 00       	push   $0x12c$/;"	l
c0108841	obj/kernel.asm	/^c0108841:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108846	obj/kernel.asm	/^c0108846:	e8 8f 7b ff ff       	call   c01003da <__panic>$/;"	l
c010884b	obj/kernel.asm	/^c010884b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010884e	obj/kernel.asm	/^c010884e:	6a 01                	push   $0x1$/;"	l
c0108850	obj/kernel.asm	/^c0108850:	e8 16 b1 ff ff       	call   c010396b <alloc_pages>$/;"	l
c0108855	obj/kernel.asm	/^c0108855:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108858	obj/kernel.asm	/^c0108858:	85 c0                	test   %eax,%eax$/;"	l
c010885a	obj/kernel.asm	/^c010885a:	74 19                	je     c0108875 <default_check+0x49d>$/;"	l
c010885c	obj/kernel.asm	/^c010885c:	68 fa d1 10 c0       	push   $0xc010d1fa$/;"	l
c0108861	obj/kernel.asm	/^c0108861:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0108866	obj/kernel.asm	/^c0108866:	68 2d 01 00 00       	push   $0x12d$/;"	l
c010886b	obj/kernel.asm	/^c010886b:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108870	obj/kernel.asm	/^c0108870:	e8 65 7b ff ff       	call   c01003da <__panic>$/;"	l
c0108875	obj/kernel.asm	/^c0108875:	a1 74 e1 19 c0       	mov    0xc019e174,%eax$/;"	l
c010887a	obj/kernel.asm	/^c010887a:	85 c0                	test   %eax,%eax$/;"	l
c010887c	obj/kernel.asm	/^c010887c:	74 19                	je     c0108897 <default_check+0x4bf>$/;"	l
c010887e	obj/kernel.asm	/^c010887e:	68 4d d2 10 c0       	push   $0xc010d24d$/;"	l
c0108883	obj/kernel.asm	/^c0108883:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c0108888	obj/kernel.asm	/^c0108888:	68 2f 01 00 00       	push   $0x12f$/;"	l
c010888d	obj/kernel.asm	/^c010888d:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108892	obj/kernel.asm	/^c0108892:	e8 43 7b ff ff       	call   c01003da <__panic>$/;"	l
c0108897	obj/kernel.asm	/^c0108897:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010889a	obj/kernel.asm	/^c010889a:	a3 74 e1 19 c0       	mov    %eax,0xc019e174$/;"	l
c010889f	obj/kernel.asm	/^c010889f:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c01088a2	obj/kernel.asm	/^c01088a2:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c01088a5	obj/kernel.asm	/^c01088a5:	a3 6c e1 19 c0       	mov    %eax,0xc019e16c$/;"	l
c01088aa	obj/kernel.asm	/^c01088aa:	89 15 70 e1 19 c0    	mov    %edx,0xc019e170$/;"	l
c01088b0	obj/kernel.asm	/^c01088b0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01088b3	obj/kernel.asm	/^c01088b3:	6a 05                	push   $0x5$/;"	l
c01088b5	obj/kernel.asm	/^c01088b5:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01088b8	obj/kernel.asm	/^c01088b8:	e8 1a b1 ff ff       	call   c01039d7 <free_pages>$/;"	l
c01088bd	obj/kernel.asm	/^c01088bd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01088c0	obj/kernel.asm	/^c01088c0:	c7 45 ec 6c e1 19 c0 	movl   $0xc019e16c,-0x14(%ebp)$/;"	l
c01088c7	obj/kernel.asm	/^c01088c7:	eb 1d                	jmp    c01088e6 <default_check+0x50e>$/;"	l
c01088c9	obj/kernel.asm	/^c01088c9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01088cc	obj/kernel.asm	/^c01088cc:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01088cf	obj/kernel.asm	/^c01088cf:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01088d2	obj/kernel.asm	/^c01088d2:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c01088d6	obj/kernel.asm	/^c01088d6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01088d9	obj/kernel.asm	/^c01088d9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01088dc	obj/kernel.asm	/^c01088dc:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01088df	obj/kernel.asm	/^c01088df:	29 c2                	sub    %eax,%edx$/;"	l
c01088e1	obj/kernel.asm	/^c01088e1:	89 d0                	mov    %edx,%eax$/;"	l
c01088e3	obj/kernel.asm	/^c01088e3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01088e6	obj/kernel.asm	/^c01088e6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01088e9	obj/kernel.asm	/^c01088e9:	89 45 88             	mov    %eax,-0x78(%ebp)$/;"	l
c01088ec	obj/kernel.asm	/^c01088ec:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
c01088ef	obj/kernel.asm	/^c01088ef:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01088f2	obj/kernel.asm	/^c01088f2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01088f5	obj/kernel.asm	/^c01088f5:	81 7d ec 6c e1 19 c0 	cmpl   $0xc019e16c,-0x14(%ebp)$/;"	l
c01088fc	obj/kernel.asm	/^c01088fc:	75 cb                	jne    c01088c9 <default_check+0x4f1>$/;"	l
c01088fe	obj/kernel.asm	/^c01088fe:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108902	obj/kernel.asm	/^c0108902:	74 19                	je     c010891d <default_check+0x545>$/;"	l
c0108904	obj/kernel.asm	/^c0108904:	68 ba d3 10 c0       	push   $0xc010d3ba$/;"	l
c0108909	obj/kernel.asm	/^c0108909:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c010890e	obj/kernel.asm	/^c010890e:	68 3a 01 00 00       	push   $0x13a$/;"	l
c0108913	obj/kernel.asm	/^c0108913:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108918	obj/kernel.asm	/^c0108918:	e8 bd 7a ff ff       	call   c01003da <__panic>$/;"	l
c010891d	obj/kernel.asm	/^c010891d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0108921	obj/kernel.asm	/^c0108921:	74 19                	je     c010893c <default_check+0x564>$/;"	l
c0108923	obj/kernel.asm	/^c0108923:	68 c5 d3 10 c0       	push   $0xc010d3c5$/;"	l
c0108928	obj/kernel.asm	/^c0108928:	68 12 d0 10 c0       	push   $0xc010d012$/;"	l
c010892d	obj/kernel.asm	/^c010892d:	68 3b 01 00 00       	push   $0x13b$/;"	l
c0108932	obj/kernel.asm	/^c0108932:	68 27 d0 10 c0       	push   $0xc010d027$/;"	l
c0108937	obj/kernel.asm	/^c0108937:	e8 9e 7a ff ff       	call   c01003da <__panic>$/;"	l
c010893c	obj/kernel.asm	/^c010893c:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c010893f	obj/kernel.asm	/^c010893f:	c9                   	leave  $/;"	l
c0108940	obj/kernel.asm	/^c0108940:	c3                   	ret    $/;"	l
c0108941	obj/kernel.asm	/^c0108941 <page2ppn>:$/;"	l
c0108941	obj/kernel.asm	/^c0108941:	55                   	push   %ebp$/;"	l
c0108942	obj/kernel.asm	/^c0108942:	89 e5                	mov    %esp,%ebp$/;"	l
c0108944	obj/kernel.asm	/^c0108944:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108947	obj/kernel.asm	/^c0108947:	8b 15 98 e0 19 c0    	mov    0xc019e098,%edx$/;"	l
c010894d	obj/kernel.asm	/^c010894d:	29 d0                	sub    %edx,%eax$/;"	l
c010894f	obj/kernel.asm	/^c010894f:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0108952	obj/kernel.asm	/^c0108952:	5d                   	pop    %ebp$/;"	l
c0108953	obj/kernel.asm	/^c0108953:	c3                   	ret    $/;"	l
c0108954	obj/kernel.asm	/^c0108954 <page2pa>:$/;"	l
c0108954	obj/kernel.asm	/^c0108954:	55                   	push   %ebp$/;"	l
c0108955	obj/kernel.asm	/^c0108955:	89 e5                	mov    %esp,%ebp$/;"	l
c0108957	obj/kernel.asm	/^c0108957:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010895a	obj/kernel.asm	/^c010895a:	e8 e2 ff ff ff       	call   c0108941 <page2ppn>$/;"	l
c010895f	obj/kernel.asm	/^c010895f:	83 c4 04             	add    $0x4,%esp$/;"	l
c0108962	obj/kernel.asm	/^c0108962:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0108965	obj/kernel.asm	/^c0108965:	c9                   	leave  $/;"	l
c0108966	obj/kernel.asm	/^c0108966:	c3                   	ret    $/;"	l
c0108967	obj/kernel.asm	/^c0108967 <page2kva>:$/;"	l
c0108967	obj/kernel.asm	/^c0108967:	55                   	push   %ebp$/;"	l
c0108968	obj/kernel.asm	/^c0108968:	89 e5                	mov    %esp,%ebp$/;"	l
c010896a	obj/kernel.asm	/^c010896a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010896d	obj/kernel.asm	/^c010896d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108970	obj/kernel.asm	/^c0108970:	e8 df ff ff ff       	call   c0108954 <page2pa>$/;"	l
c0108975	obj/kernel.asm	/^c0108975:	83 c4 04             	add    $0x4,%esp$/;"	l
c0108978	obj/kernel.asm	/^c0108978:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010897b	obj/kernel.asm	/^c010897b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010897e	obj/kernel.asm	/^c010897e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0108981	obj/kernel.asm	/^c0108981:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108984	obj/kernel.asm	/^c0108984:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c0108989	obj/kernel.asm	/^c0108989:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010898c	obj/kernel.asm	/^c010898c:	72 14                	jb     c01089a2 <page2kva+0x3b>$/;"	l
c010898e	obj/kernel.asm	/^c010898e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108991	obj/kernel.asm	/^c0108991:	68 00 d4 10 c0       	push   $0xc010d400$/;"	l
c0108996	obj/kernel.asm	/^c0108996:	6a 65                	push   $0x65$/;"	l
c0108998	obj/kernel.asm	/^c0108998:	68 23 d4 10 c0       	push   $0xc010d423$/;"	l
c010899d	obj/kernel.asm	/^c010899d:	e8 38 7a ff ff       	call   c01003da <__panic>$/;"	l
c01089a2	obj/kernel.asm	/^c01089a2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01089a5	obj/kernel.asm	/^c01089a5:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c01089aa	obj/kernel.asm	/^c01089aa:	c9                   	leave  $/;"	l
c01089ab	obj/kernel.asm	/^c01089ab:	c3                   	ret    $/;"	l
c01089ac	obj/kernel.asm	/^c01089ac <swapfs_init>:$/;"	l
c01089ac	obj/kernel.asm	/^c01089ac:	55                   	push   %ebp$/;"	l
c01089ad	obj/kernel.asm	/^c01089ad:	89 e5                	mov    %esp,%ebp$/;"	l
c01089af	obj/kernel.asm	/^c01089af:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01089b2	obj/kernel.asm	/^c01089b2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01089b5	obj/kernel.asm	/^c01089b5:	6a 01                	push   $0x1$/;"	l
c01089b7	obj/kernel.asm	/^c01089b7:	e8 17 87 ff ff       	call   c01010d3 <ide_device_valid>$/;"	l
c01089bc	obj/kernel.asm	/^c01089bc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01089bf	obj/kernel.asm	/^c01089bf:	85 c0                	test   %eax,%eax$/;"	l
c01089c1	obj/kernel.asm	/^c01089c1:	75 14                	jne    c01089d7 <swapfs_init+0x2b>$/;"	l
c01089c3	obj/kernel.asm	/^c01089c3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01089c6	obj/kernel.asm	/^c01089c6:	68 31 d4 10 c0       	push   $0xc010d431$/;"	l
c01089cb	obj/kernel.asm	/^c01089cb:	6a 0d                	push   $0xd$/;"	l
c01089cd	obj/kernel.asm	/^c01089cd:	68 4b d4 10 c0       	push   $0xc010d44b$/;"	l
c01089d2	obj/kernel.asm	/^c01089d2:	e8 03 7a ff ff       	call   c01003da <__panic>$/;"	l
c01089d7	obj/kernel.asm	/^c01089d7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01089da	obj/kernel.asm	/^c01089da:	6a 01                	push   $0x1$/;"	l
c01089dc	obj/kernel.asm	/^c01089dc:	e8 32 87 ff ff       	call   c0101113 <ide_device_size>$/;"	l
c01089e1	obj/kernel.asm	/^c01089e1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01089e4	obj/kernel.asm	/^c01089e4:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c01089e7	obj/kernel.asm	/^c01089e7:	a3 3c e1 19 c0       	mov    %eax,0xc019e13c$/;"	l
c01089ec	obj/kernel.asm	/^c01089ec:	c9                   	leave  $/;"	l
c01089ed	obj/kernel.asm	/^c01089ed:	c3                   	ret    $/;"	l
c01089ee	obj/kernel.asm	/^c01089ee <swapfs_read>:$/;"	l
c01089ee	obj/kernel.asm	/^c01089ee:	55                   	push   %ebp$/;"	l
c01089ef	obj/kernel.asm	/^c01089ef:	89 e5                	mov    %esp,%ebp$/;"	l
c01089f1	obj/kernel.asm	/^c01089f1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01089f4	obj/kernel.asm	/^c01089f4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01089f7	obj/kernel.asm	/^c01089f7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01089fa	obj/kernel.asm	/^c01089fa:	e8 68 ff ff ff       	call   c0108967 <page2kva>$/;"	l
c01089ff	obj/kernel.asm	/^c01089ff:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a02	obj/kernel.asm	/^c0108a02:	89 c2                	mov    %eax,%edx$/;"	l
c0108a04	obj/kernel.asm	/^c0108a04:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108a07	obj/kernel.asm	/^c0108a07:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0108a0a	obj/kernel.asm	/^c0108a0a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108a0d	obj/kernel.asm	/^c0108a0d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108a11	obj/kernel.asm	/^c0108a11:	74 0a                	je     c0108a1d <swapfs_read+0x2f>$/;"	l
c0108a13	obj/kernel.asm	/^c0108a13:	a1 3c e1 19 c0       	mov    0xc019e13c,%eax$/;"	l
c0108a18	obj/kernel.asm	/^c0108a18:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c0108a1b	obj/kernel.asm	/^c0108a1b:	72 14                	jb     c0108a31 <swapfs_read+0x43>$/;"	l
c0108a1d	obj/kernel.asm	/^c0108a1d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108a20	obj/kernel.asm	/^c0108a20:	68 5c d4 10 c0       	push   $0xc010d45c$/;"	l
c0108a25	obj/kernel.asm	/^c0108a25:	6a 14                	push   $0x14$/;"	l
c0108a27	obj/kernel.asm	/^c0108a27:	68 4b d4 10 c0       	push   $0xc010d44b$/;"	l
c0108a2c	obj/kernel.asm	/^c0108a2c:	e8 a9 79 ff ff       	call   c01003da <__panic>$/;"	l
c0108a31	obj/kernel.asm	/^c0108a31:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108a34	obj/kernel.asm	/^c0108a34:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0108a37	obj/kernel.asm	/^c0108a37:	6a 08                	push   $0x8$/;"	l
c0108a39	obj/kernel.asm	/^c0108a39:	52                   	push   %edx$/;"	l
c0108a3a	obj/kernel.asm	/^c0108a3a:	50                   	push   %eax$/;"	l
c0108a3b	obj/kernel.asm	/^c0108a3b:	6a 01                	push   $0x1$/;"	l
c0108a3d	obj/kernel.asm	/^c0108a3d:	e8 12 87 ff ff       	call   c0101154 <ide_read_secs>$/;"	l
c0108a42	obj/kernel.asm	/^c0108a42:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a45	obj/kernel.asm	/^c0108a45:	c9                   	leave  $/;"	l
c0108a46	obj/kernel.asm	/^c0108a46:	c3                   	ret    $/;"	l
c0108a47	obj/kernel.asm	/^c0108a47 <swapfs_write>:$/;"	l
c0108a47	obj/kernel.asm	/^c0108a47:	55                   	push   %ebp$/;"	l
c0108a48	obj/kernel.asm	/^c0108a48:	89 e5                	mov    %esp,%ebp$/;"	l
c0108a4a	obj/kernel.asm	/^c0108a4a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108a4d	obj/kernel.asm	/^c0108a4d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108a50	obj/kernel.asm	/^c0108a50:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0108a53	obj/kernel.asm	/^c0108a53:	e8 0f ff ff ff       	call   c0108967 <page2kva>$/;"	l
c0108a58	obj/kernel.asm	/^c0108a58:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a5b	obj/kernel.asm	/^c0108a5b:	89 c2                	mov    %eax,%edx$/;"	l
c0108a5d	obj/kernel.asm	/^c0108a5d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108a60	obj/kernel.asm	/^c0108a60:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0108a63	obj/kernel.asm	/^c0108a63:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108a66	obj/kernel.asm	/^c0108a66:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108a6a	obj/kernel.asm	/^c0108a6a:	74 0a                	je     c0108a76 <swapfs_write+0x2f>$/;"	l
c0108a6c	obj/kernel.asm	/^c0108a6c:	a1 3c e1 19 c0       	mov    0xc019e13c,%eax$/;"	l
c0108a71	obj/kernel.asm	/^c0108a71:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c0108a74	obj/kernel.asm	/^c0108a74:	72 14                	jb     c0108a8a <swapfs_write+0x43>$/;"	l
c0108a76	obj/kernel.asm	/^c0108a76:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108a79	obj/kernel.asm	/^c0108a79:	68 5c d4 10 c0       	push   $0xc010d45c$/;"	l
c0108a7e	obj/kernel.asm	/^c0108a7e:	6a 19                	push   $0x19$/;"	l
c0108a80	obj/kernel.asm	/^c0108a80:	68 4b d4 10 c0       	push   $0xc010d44b$/;"	l
c0108a85	obj/kernel.asm	/^c0108a85:	e8 50 79 ff ff       	call   c01003da <__panic>$/;"	l
c0108a8a	obj/kernel.asm	/^c0108a8a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108a8d	obj/kernel.asm	/^c0108a8d:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0108a90	obj/kernel.asm	/^c0108a90:	6a 08                	push   $0x8$/;"	l
c0108a92	obj/kernel.asm	/^c0108a92:	52                   	push   %edx$/;"	l
c0108a93	obj/kernel.asm	/^c0108a93:	50                   	push   %eax$/;"	l
c0108a94	obj/kernel.asm	/^c0108a94:	6a 01                	push   $0x1$/;"	l
c0108a96	obj/kernel.asm	/^c0108a96:	e8 e2 88 ff ff       	call   c010137d <ide_write_secs>$/;"	l
c0108a9b	obj/kernel.asm	/^c0108a9b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a9e	obj/kernel.asm	/^c0108a9e:	c9                   	leave  $/;"	l
c0108a9f	obj/kernel.asm	/^c0108a9f:	c3                   	ret    $/;"	l
c0108aa0	obj/kernel.asm	/^c0108aa0 <kernel_thread_entry>:$/;"	l
c0108aa0	obj/kernel.asm	/^c0108aa0:	52                   	push   %edx$/;"	l
c0108aa1	obj/kernel.asm	/^c0108aa1:	ff d3                	call   *%ebx$/;"	l
c0108aa3	obj/kernel.asm	/^c0108aa3:	50                   	push   %eax$/;"	l
c0108aa4	obj/kernel.asm	/^c0108aa4:	e8 0d 0c 00 00       	call   c01096b6 <do_exit>$/;"	l
c0108aa9	obj/kernel.asm	/^c0108aa9 <switch_to>:$/;"	l
c0108aa9	obj/kernel.asm	/^c0108aa9:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c0108aad	obj/kernel.asm	/^c0108aad:	8f 00                	popl   (%eax)$/;"	l
c0108aaf	obj/kernel.asm	/^c0108aaf:	89 60 04             	mov    %esp,0x4(%eax)$/;"	l
c0108ab2	obj/kernel.asm	/^c0108ab2:	89 58 08             	mov    %ebx,0x8(%eax)$/;"	l
c0108ab5	obj/kernel.asm	/^c0108ab5:	89 48 0c             	mov    %ecx,0xc(%eax)$/;"	l
c0108ab8	obj/kernel.asm	/^c0108ab8:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0108abb	obj/kernel.asm	/^c0108abb:	89 70 14             	mov    %esi,0x14(%eax)$/;"	l
c0108abe	obj/kernel.asm	/^c0108abe:	89 78 18             	mov    %edi,0x18(%eax)$/;"	l
c0108ac1	obj/kernel.asm	/^c0108ac1:	89 68 1c             	mov    %ebp,0x1c(%eax)$/;"	l
c0108ac4	obj/kernel.asm	/^c0108ac4:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c0108ac8	obj/kernel.asm	/^c0108ac8:	8b 68 1c             	mov    0x1c(%eax),%ebp$/;"	l
c0108acb	obj/kernel.asm	/^c0108acb:	8b 78 18             	mov    0x18(%eax),%edi$/;"	l
c0108ace	obj/kernel.asm	/^c0108ace:	8b 70 14             	mov    0x14(%eax),%esi$/;"	l
c0108ad1	obj/kernel.asm	/^c0108ad1:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c0108ad4	obj/kernel.asm	/^c0108ad4:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0108ad7	obj/kernel.asm	/^c0108ad7:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c0108ada	obj/kernel.asm	/^c0108ada:	8b 60 04             	mov    0x4(%eax),%esp$/;"	l
c0108add	obj/kernel.asm	/^c0108add:	ff 30                	pushl  (%eax)$/;"	l
c0108adf	obj/kernel.asm	/^c0108adf:	c3                   	ret    $/;"	l
c0108ae0	obj/kernel.asm	/^c0108ae0 <test_and_set_bit>:$/;"	l
c0108ae0	obj/kernel.asm	/^c0108ae0:	55                   	push   %ebp$/;"	l
c0108ae1	obj/kernel.asm	/^c0108ae1:	89 e5                	mov    %esp,%ebp$/;"	l
c0108ae3	obj/kernel.asm	/^c0108ae3:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0108ae6	obj/kernel.asm	/^c0108ae6:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108ae9	obj/kernel.asm	/^c0108ae9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108aec	obj/kernel.asm	/^c0108aec:	0f ab 02             	bts    %eax,(%edx)$/;"	l
c0108aef	obj/kernel.asm	/^c0108aef:	19 c0                	sbb    %eax,%eax$/;"	l
c0108af1	obj/kernel.asm	/^c0108af1:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0108af4	obj/kernel.asm	/^c0108af4:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0108af8	obj/kernel.asm	/^c0108af8:	0f 95 c0             	setne  %al$/;"	l
c0108afb	obj/kernel.asm	/^c0108afb:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108afe	obj/kernel.asm	/^c0108afe:	c9                   	leave  $/;"	l
c0108aff	obj/kernel.asm	/^c0108aff:	c3                   	ret    $/;"	l
c0108b00	obj/kernel.asm	/^c0108b00 <test_and_clear_bit>:$/;"	l
c0108b00	obj/kernel.asm	/^c0108b00:	55                   	push   %ebp$/;"	l
c0108b01	obj/kernel.asm	/^c0108b01:	89 e5                	mov    %esp,%ebp$/;"	l
c0108b03	obj/kernel.asm	/^c0108b03:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0108b06	obj/kernel.asm	/^c0108b06:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108b09	obj/kernel.asm	/^c0108b09:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108b0c	obj/kernel.asm	/^c0108b0c:	0f b3 02             	btr    %eax,(%edx)$/;"	l
c0108b0f	obj/kernel.asm	/^c0108b0f:	19 c0                	sbb    %eax,%eax$/;"	l
c0108b11	obj/kernel.asm	/^c0108b11:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0108b14	obj/kernel.asm	/^c0108b14:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0108b18	obj/kernel.asm	/^c0108b18:	0f 95 c0             	setne  %al$/;"	l
c0108b1b	obj/kernel.asm	/^c0108b1b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108b1e	obj/kernel.asm	/^c0108b1e:	c9                   	leave  $/;"	l
c0108b1f	obj/kernel.asm	/^c0108b1f:	c3                   	ret    $/;"	l
c0108b20	obj/kernel.asm	/^c0108b20 <__intr_save>:$/;"	l
c0108b20	obj/kernel.asm	/^c0108b20:	55                   	push   %ebp$/;"	l
c0108b21	obj/kernel.asm	/^c0108b21:	89 e5                	mov    %esp,%ebp$/;"	l
c0108b23	obj/kernel.asm	/^c0108b23:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108b26	obj/kernel.asm	/^c0108b26:	9c                   	pushf  $/;"	l
c0108b27	obj/kernel.asm	/^c0108b27:	58                   	pop    %eax$/;"	l
c0108b28	obj/kernel.asm	/^c0108b28:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108b2b	obj/kernel.asm	/^c0108b2b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108b2e	obj/kernel.asm	/^c0108b2e:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0108b33	obj/kernel.asm	/^c0108b33:	85 c0                	test   %eax,%eax$/;"	l
c0108b35	obj/kernel.asm	/^c0108b35:	74 0c                	je     c0108b43 <__intr_save+0x23>$/;"	l
c0108b37	obj/kernel.asm	/^c0108b37:	e8 61 95 ff ff       	call   c010209d <intr_disable>$/;"	l
c0108b3c	obj/kernel.asm	/^c0108b3c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0108b41	obj/kernel.asm	/^c0108b41:	eb 05                	jmp    c0108b48 <__intr_save+0x28>$/;"	l
c0108b43	obj/kernel.asm	/^c0108b43:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108b48	obj/kernel.asm	/^c0108b48:	c9                   	leave  $/;"	l
c0108b49	obj/kernel.asm	/^c0108b49:	c3                   	ret    $/;"	l
c0108b4a	obj/kernel.asm	/^c0108b4a <__intr_restore>:$/;"	l
c0108b4a	obj/kernel.asm	/^c0108b4a:	55                   	push   %ebp$/;"	l
c0108b4b	obj/kernel.asm	/^c0108b4b:	89 e5                	mov    %esp,%ebp$/;"	l
c0108b4d	obj/kernel.asm	/^c0108b4d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108b50	obj/kernel.asm	/^c0108b50:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0108b54	obj/kernel.asm	/^c0108b54:	74 05                	je     c0108b5b <__intr_restore+0x11>$/;"	l
c0108b56	obj/kernel.asm	/^c0108b56:	e8 3c 95 ff ff       	call   c0102097 <intr_enable>$/;"	l
c0108b5b	obj/kernel.asm	/^c0108b5b:	c9                   	leave  $/;"	l
c0108b5c	obj/kernel.asm	/^c0108b5c:	c3                   	ret    $/;"	l
c0108b5d	obj/kernel.asm	/^c0108b5d <try_lock>:$/;"	l
c0108b5d	obj/kernel.asm	/^c0108b5d:	55                   	push   %ebp$/;"	l
c0108b5e	obj/kernel.asm	/^c0108b5e:	89 e5                	mov    %esp,%ebp$/;"	l
c0108b60	obj/kernel.asm	/^c0108b60:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108b63	obj/kernel.asm	/^c0108b63:	6a 00                	push   $0x0$/;"	l
c0108b65	obj/kernel.asm	/^c0108b65:	e8 76 ff ff ff       	call   c0108ae0 <test_and_set_bit>$/;"	l
c0108b6a	obj/kernel.asm	/^c0108b6a:	83 c4 08             	add    $0x8,%esp$/;"	l
c0108b6d	obj/kernel.asm	/^c0108b6d:	85 c0                	test   %eax,%eax$/;"	l
c0108b6f	obj/kernel.asm	/^c0108b6f:	0f 94 c0             	sete   %al$/;"	l
c0108b72	obj/kernel.asm	/^c0108b72:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108b75	obj/kernel.asm	/^c0108b75:	c9                   	leave  $/;"	l
c0108b76	obj/kernel.asm	/^c0108b76:	c3                   	ret    $/;"	l
c0108b77	obj/kernel.asm	/^c0108b77 <lock>:$/;"	l
c0108b77	obj/kernel.asm	/^c0108b77:	55                   	push   %ebp$/;"	l
c0108b78	obj/kernel.asm	/^c0108b78:	89 e5                	mov    %esp,%ebp$/;"	l
c0108b7a	obj/kernel.asm	/^c0108b7a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108b7d	obj/kernel.asm	/^c0108b7d:	eb 05                	jmp    c0108b84 <lock+0xd>$/;"	l
c0108b7f	obj/kernel.asm	/^c0108b7f:	e8 39 1a 00 00       	call   c010a5bd <schedule>$/;"	l
c0108b84	obj/kernel.asm	/^c0108b84:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108b87	obj/kernel.asm	/^c0108b87:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108b8a	obj/kernel.asm	/^c0108b8a:	e8 ce ff ff ff       	call   c0108b5d <try_lock>$/;"	l
c0108b8f	obj/kernel.asm	/^c0108b8f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108b92	obj/kernel.asm	/^c0108b92:	85 c0                	test   %eax,%eax$/;"	l
c0108b94	obj/kernel.asm	/^c0108b94:	74 e9                	je     c0108b7f <lock+0x8>$/;"	l
c0108b96	obj/kernel.asm	/^c0108b96:	c9                   	leave  $/;"	l
c0108b97	obj/kernel.asm	/^c0108b97:	c3                   	ret    $/;"	l
c0108b98	obj/kernel.asm	/^c0108b98 <unlock>:$/;"	l
c0108b98	obj/kernel.asm	/^c0108b98:	55                   	push   %ebp$/;"	l
c0108b99	obj/kernel.asm	/^c0108b99:	89 e5                	mov    %esp,%ebp$/;"	l
c0108b9b	obj/kernel.asm	/^c0108b9b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108b9e	obj/kernel.asm	/^c0108b9e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108ba1	obj/kernel.asm	/^c0108ba1:	6a 00                	push   $0x0$/;"	l
c0108ba3	obj/kernel.asm	/^c0108ba3:	e8 58 ff ff ff       	call   c0108b00 <test_and_clear_bit>$/;"	l
c0108ba8	obj/kernel.asm	/^c0108ba8:	83 c4 08             	add    $0x8,%esp$/;"	l
c0108bab	obj/kernel.asm	/^c0108bab:	85 c0                	test   %eax,%eax$/;"	l
c0108bad	obj/kernel.asm	/^c0108bad:	75 14                	jne    c0108bc3 <unlock+0x2b>$/;"	l
c0108baf	obj/kernel.asm	/^c0108baf:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108bb2	obj/kernel.asm	/^c0108bb2:	68 7c d4 10 c0       	push   $0xc010d47c$/;"	l
c0108bb7	obj/kernel.asm	/^c0108bb7:	6a 34                	push   $0x34$/;"	l
c0108bb9	obj/kernel.asm	/^c0108bb9:	68 8c d4 10 c0       	push   $0xc010d48c$/;"	l
c0108bbe	obj/kernel.asm	/^c0108bbe:	e8 17 78 ff ff       	call   c01003da <__panic>$/;"	l
c0108bc3	obj/kernel.asm	/^c0108bc3:	c9                   	leave  $/;"	l
c0108bc4	obj/kernel.asm	/^c0108bc4:	c3                   	ret    $/;"	l
c0108bc5	obj/kernel.asm	/^c0108bc5 <page2ppn>:$/;"	l
c0108bc5	obj/kernel.asm	/^c0108bc5:	55                   	push   %ebp$/;"	l
c0108bc6	obj/kernel.asm	/^c0108bc6:	89 e5                	mov    %esp,%ebp$/;"	l
c0108bc8	obj/kernel.asm	/^c0108bc8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108bcb	obj/kernel.asm	/^c0108bcb:	8b 15 98 e0 19 c0    	mov    0xc019e098,%edx$/;"	l
c0108bd1	obj/kernel.asm	/^c0108bd1:	29 d0                	sub    %edx,%eax$/;"	l
c0108bd3	obj/kernel.asm	/^c0108bd3:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0108bd6	obj/kernel.asm	/^c0108bd6:	5d                   	pop    %ebp$/;"	l
c0108bd7	obj/kernel.asm	/^c0108bd7:	c3                   	ret    $/;"	l
c0108bd8	obj/kernel.asm	/^c0108bd8 <page2pa>:$/;"	l
c0108bd8	obj/kernel.asm	/^c0108bd8:	55                   	push   %ebp$/;"	l
c0108bd9	obj/kernel.asm	/^c0108bd9:	89 e5                	mov    %esp,%ebp$/;"	l
c0108bdb	obj/kernel.asm	/^c0108bdb:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108bde	obj/kernel.asm	/^c0108bde:	e8 e2 ff ff ff       	call   c0108bc5 <page2ppn>$/;"	l
c0108be3	obj/kernel.asm	/^c0108be3:	83 c4 04             	add    $0x4,%esp$/;"	l
c0108be6	obj/kernel.asm	/^c0108be6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0108be9	obj/kernel.asm	/^c0108be9:	c9                   	leave  $/;"	l
c0108bea	obj/kernel.asm	/^c0108bea:	c3                   	ret    $/;"	l
c0108beb	obj/kernel.asm	/^c0108beb <pa2page>:$/;"	l
c0108beb	obj/kernel.asm	/^c0108beb:	55                   	push   %ebp$/;"	l
c0108bec	obj/kernel.asm	/^c0108bec:	89 e5                	mov    %esp,%ebp$/;"	l
c0108bee	obj/kernel.asm	/^c0108bee:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108bf1	obj/kernel.asm	/^c0108bf1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108bf4	obj/kernel.asm	/^c0108bf4:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0108bf7	obj/kernel.asm	/^c0108bf7:	89 c2                	mov    %eax,%edx$/;"	l
c0108bf9	obj/kernel.asm	/^c0108bf9:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c0108bfe	obj/kernel.asm	/^c0108bfe:	39 c2                	cmp    %eax,%edx$/;"	l
c0108c00	obj/kernel.asm	/^c0108c00:	72 14                	jb     c0108c16 <pa2page+0x2b>$/;"	l
c0108c02	obj/kernel.asm	/^c0108c02:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108c05	obj/kernel.asm	/^c0108c05:	68 a0 d4 10 c0       	push   $0xc010d4a0$/;"	l
c0108c0a	obj/kernel.asm	/^c0108c0a:	6a 5e                	push   $0x5e$/;"	l
c0108c0c	obj/kernel.asm	/^c0108c0c:	68 bf d4 10 c0       	push   $0xc010d4bf$/;"	l
c0108c11	obj/kernel.asm	/^c0108c11:	e8 c4 77 ff ff       	call   c01003da <__panic>$/;"	l
c0108c16	obj/kernel.asm	/^c0108c16:	a1 98 e0 19 c0       	mov    0xc019e098,%eax$/;"	l
c0108c1b	obj/kernel.asm	/^c0108c1b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108c1e	obj/kernel.asm	/^c0108c1e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0108c21	obj/kernel.asm	/^c0108c21:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0108c24	obj/kernel.asm	/^c0108c24:	01 d0                	add    %edx,%eax$/;"	l
c0108c26	obj/kernel.asm	/^c0108c26:	c9                   	leave  $/;"	l
c0108c27	obj/kernel.asm	/^c0108c27:	c3                   	ret    $/;"	l
c0108c28	obj/kernel.asm	/^c0108c28 <page2kva>:$/;"	l
c0108c28	obj/kernel.asm	/^c0108c28:	55                   	push   %ebp$/;"	l
c0108c29	obj/kernel.asm	/^c0108c29:	89 e5                	mov    %esp,%ebp$/;"	l
c0108c2b	obj/kernel.asm	/^c0108c2b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108c2e	obj/kernel.asm	/^c0108c2e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108c31	obj/kernel.asm	/^c0108c31:	e8 a2 ff ff ff       	call   c0108bd8 <page2pa>$/;"	l
c0108c36	obj/kernel.asm	/^c0108c36:	83 c4 04             	add    $0x4,%esp$/;"	l
c0108c39	obj/kernel.asm	/^c0108c39:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108c3c	obj/kernel.asm	/^c0108c3c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108c3f	obj/kernel.asm	/^c0108c3f:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0108c42	obj/kernel.asm	/^c0108c42:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108c45	obj/kernel.asm	/^c0108c45:	a1 00 bf 19 c0       	mov    0xc019bf00,%eax$/;"	l
c0108c4a	obj/kernel.asm	/^c0108c4a:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0108c4d	obj/kernel.asm	/^c0108c4d:	72 14                	jb     c0108c63 <page2kva+0x3b>$/;"	l
c0108c4f	obj/kernel.asm	/^c0108c4f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108c52	obj/kernel.asm	/^c0108c52:	68 d0 d4 10 c0       	push   $0xc010d4d0$/;"	l
c0108c57	obj/kernel.asm	/^c0108c57:	6a 65                	push   $0x65$/;"	l
c0108c59	obj/kernel.asm	/^c0108c59:	68 bf d4 10 c0       	push   $0xc010d4bf$/;"	l
c0108c5e	obj/kernel.asm	/^c0108c5e:	e8 77 77 ff ff       	call   c01003da <__panic>$/;"	l
c0108c63	obj/kernel.asm	/^c0108c63:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108c66	obj/kernel.asm	/^c0108c66:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0108c6b	obj/kernel.asm	/^c0108c6b:	c9                   	leave  $/;"	l
c0108c6c	obj/kernel.asm	/^c0108c6c:	c3                   	ret    $/;"	l
c0108c6d	obj/kernel.asm	/^c0108c6d <kva2page>:$/;"	l
c0108c6d	obj/kernel.asm	/^c0108c6d:	55                   	push   %ebp$/;"	l
c0108c6e	obj/kernel.asm	/^c0108c6e:	89 e5                	mov    %esp,%ebp$/;"	l
c0108c70	obj/kernel.asm	/^c0108c70:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108c73	obj/kernel.asm	/^c0108c73:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108c76	obj/kernel.asm	/^c0108c76:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108c79	obj/kernel.asm	/^c0108c79:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0108c80	obj/kernel.asm	/^c0108c80:	77 14                	ja     c0108c96 <kva2page+0x29>$/;"	l
c0108c82	obj/kernel.asm	/^c0108c82:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108c85	obj/kernel.asm	/^c0108c85:	68 f4 d4 10 c0       	push   $0xc010d4f4$/;"	l
c0108c8a	obj/kernel.asm	/^c0108c8a:	6a 6a                	push   $0x6a$/;"	l
c0108c8c	obj/kernel.asm	/^c0108c8c:	68 bf d4 10 c0       	push   $0xc010d4bf$/;"	l
c0108c91	obj/kernel.asm	/^c0108c91:	e8 44 77 ff ff       	call   c01003da <__panic>$/;"	l
c0108c96	obj/kernel.asm	/^c0108c96:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108c99	obj/kernel.asm	/^c0108c99:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0108c9e	obj/kernel.asm	/^c0108c9e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108ca1	obj/kernel.asm	/^c0108ca1:	50                   	push   %eax$/;"	l
c0108ca2	obj/kernel.asm	/^c0108ca2:	e8 44 ff ff ff       	call   c0108beb <pa2page>$/;"	l
c0108ca7	obj/kernel.asm	/^c0108ca7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108caa	obj/kernel.asm	/^c0108caa:	c9                   	leave  $/;"	l
c0108cab	obj/kernel.asm	/^c0108cab:	c3                   	ret    $/;"	l
c0108cac	obj/kernel.asm	/^c0108cac <mm_count_inc>:$/;"	l
c0108cac	obj/kernel.asm	/^c0108cac:	55                   	push   %ebp$/;"	l
c0108cad	obj/kernel.asm	/^c0108cad:	89 e5                	mov    %esp,%ebp$/;"	l
c0108caf	obj/kernel.asm	/^c0108caf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108cb2	obj/kernel.asm	/^c0108cb2:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0108cb5	obj/kernel.asm	/^c0108cb5:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0108cb8	obj/kernel.asm	/^c0108cb8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108cbb	obj/kernel.asm	/^c0108cbb:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0108cbe	obj/kernel.asm	/^c0108cbe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108cc1	obj/kernel.asm	/^c0108cc1:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0108cc4	obj/kernel.asm	/^c0108cc4:	5d                   	pop    %ebp$/;"	l
c0108cc5	obj/kernel.asm	/^c0108cc5:	c3                   	ret    $/;"	l
c0108cc6	obj/kernel.asm	/^c0108cc6 <mm_count_dec>:$/;"	l
c0108cc6	obj/kernel.asm	/^c0108cc6:	55                   	push   %ebp$/;"	l
c0108cc7	obj/kernel.asm	/^c0108cc7:	89 e5                	mov    %esp,%ebp$/;"	l
c0108cc9	obj/kernel.asm	/^c0108cc9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108ccc	obj/kernel.asm	/^c0108ccc:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0108ccf	obj/kernel.asm	/^c0108ccf:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0108cd2	obj/kernel.asm	/^c0108cd2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108cd5	obj/kernel.asm	/^c0108cd5:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0108cd8	obj/kernel.asm	/^c0108cd8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108cdb	obj/kernel.asm	/^c0108cdb:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0108cde	obj/kernel.asm	/^c0108cde:	5d                   	pop    %ebp$/;"	l
c0108cdf	obj/kernel.asm	/^c0108cdf:	c3                   	ret    $/;"	l
c0108ce0	obj/kernel.asm	/^c0108ce0 <lock_mm>:$/;"	l
c0108ce0	obj/kernel.asm	/^c0108ce0:	55                   	push   %ebp$/;"	l
c0108ce1	obj/kernel.asm	/^c0108ce1:	89 e5                	mov    %esp,%ebp$/;"	l
c0108ce3	obj/kernel.asm	/^c0108ce3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108ce6	obj/kernel.asm	/^c0108ce6:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0108cea	obj/kernel.asm	/^c0108cea:	74 12                	je     c0108cfe <lock_mm+0x1e>$/;"	l
c0108cec	obj/kernel.asm	/^c0108cec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108cef	obj/kernel.asm	/^c0108cef:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0108cf2	obj/kernel.asm	/^c0108cf2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108cf5	obj/kernel.asm	/^c0108cf5:	50                   	push   %eax$/;"	l
c0108cf6	obj/kernel.asm	/^c0108cf6:	e8 7c fe ff ff       	call   c0108b77 <lock>$/;"	l
c0108cfb	obj/kernel.asm	/^c0108cfb:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108cfe	obj/kernel.asm	/^c0108cfe:	c9                   	leave  $/;"	l
c0108cff	obj/kernel.asm	/^c0108cff:	c3                   	ret    $/;"	l
c0108d00	obj/kernel.asm	/^c0108d00 <unlock_mm>:$/;"	l
c0108d00	obj/kernel.asm	/^c0108d00:	55                   	push   %ebp$/;"	l
c0108d01	obj/kernel.asm	/^c0108d01:	89 e5                	mov    %esp,%ebp$/;"	l
c0108d03	obj/kernel.asm	/^c0108d03:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108d06	obj/kernel.asm	/^c0108d06:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0108d0a	obj/kernel.asm	/^c0108d0a:	74 12                	je     c0108d1e <unlock_mm+0x1e>$/;"	l
c0108d0c	obj/kernel.asm	/^c0108d0c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108d0f	obj/kernel.asm	/^c0108d0f:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0108d12	obj/kernel.asm	/^c0108d12:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108d15	obj/kernel.asm	/^c0108d15:	50                   	push   %eax$/;"	l
c0108d16	obj/kernel.asm	/^c0108d16:	e8 7d fe ff ff       	call   c0108b98 <unlock>$/;"	l
c0108d1b	obj/kernel.asm	/^c0108d1b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d1e	obj/kernel.asm	/^c0108d1e:	c9                   	leave  $/;"	l
c0108d1f	obj/kernel.asm	/^c0108d1f:	c3                   	ret    $/;"	l
c0108d20	obj/kernel.asm	/^c0108d20 <alloc_proc>:$/;"	l
c0108d20	obj/kernel.asm	/^c0108d20:	55                   	push   %ebp$/;"	l
c0108d21	obj/kernel.asm	/^c0108d21:	89 e5                	mov    %esp,%ebp$/;"	l
c0108d23	obj/kernel.asm	/^c0108d23:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108d26	obj/kernel.asm	/^c0108d26:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108d29	obj/kernel.asm	/^c0108d29:	6a 7c                	push   $0x7c$/;"	l
c0108d2b	obj/kernel.asm	/^c0108d2b:	e8 84 e6 ff ff       	call   c01073b4 <kmalloc>$/;"	l
c0108d30	obj/kernel.asm	/^c0108d30:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d33	obj/kernel.asm	/^c0108d33:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108d36	obj/kernel.asm	/^c0108d36:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108d3a	obj/kernel.asm	/^c0108d3a:	0f 84 91 00 00 00    	je     c0108dd1 <alloc_proc+0xb1>$/;"	l
c0108d40	obj/kernel.asm	/^c0108d40:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108d43	obj/kernel.asm	/^c0108d43:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0108d49	obj/kernel.asm	/^c0108d49:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108d4c	obj/kernel.asm	/^c0108d4c:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c0108d53	obj/kernel.asm	/^c0108d53:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108d56	obj/kernel.asm	/^c0108d56:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0108d5d	obj/kernel.asm	/^c0108d5d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108d60	obj/kernel.asm	/^c0108d60:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0108d67	obj/kernel.asm	/^c0108d67:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108d6a	obj/kernel.asm	/^c0108d6a:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c0108d71	obj/kernel.asm	/^c0108d71:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108d74	obj/kernel.asm	/^c0108d74:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c0108d7b	obj/kernel.asm	/^c0108d7b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108d7e	obj/kernel.asm	/^c0108d7e:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c0108d85	obj/kernel.asm	/^c0108d85:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108d88	obj/kernel.asm	/^c0108d88:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0108d8b	obj/kernel.asm	/^c0108d8b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108d8e	obj/kernel.asm	/^c0108d8e:	6a 20                	push   $0x20$/;"	l
c0108d90	obj/kernel.asm	/^c0108d90:	6a 00                	push   $0x0$/;"	l
c0108d92	obj/kernel.asm	/^c0108d92:	50                   	push   %eax$/;"	l
c0108d93	obj/kernel.asm	/^c0108d93:	e8 04 1e 00 00       	call   c010ab9c <memset>$/;"	l
c0108d98	obj/kernel.asm	/^c0108d98:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d9b	obj/kernel.asm	/^c0108d9b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108d9e	obj/kernel.asm	/^c0108d9e:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%eax)$/;"	l
c0108da5	obj/kernel.asm	/^c0108da5:	8b 15 94 e0 19 c0    	mov    0xc019e094,%edx$/;"	l
c0108dab	obj/kernel.asm	/^c0108dab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108dae	obj/kernel.asm	/^c0108dae:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c0108db1	obj/kernel.asm	/^c0108db1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108db4	obj/kernel.asm	/^c0108db4:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)$/;"	l
c0108dbb	obj/kernel.asm	/^c0108dbb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108dbe	obj/kernel.asm	/^c0108dbe:	83 c0 48             	add    $0x48,%eax$/;"	l
c0108dc1	obj/kernel.asm	/^c0108dc1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108dc4	obj/kernel.asm	/^c0108dc4:	6a 0f                	push   $0xf$/;"	l
c0108dc6	obj/kernel.asm	/^c0108dc6:	6a 00                	push   $0x0$/;"	l
c0108dc8	obj/kernel.asm	/^c0108dc8:	50                   	push   %eax$/;"	l
c0108dc9	obj/kernel.asm	/^c0108dc9:	e8 ce 1d 00 00       	call   c010ab9c <memset>$/;"	l
c0108dce	obj/kernel.asm	/^c0108dce:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108dd1	obj/kernel.asm	/^c0108dd1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108dd4	obj/kernel.asm	/^c0108dd4:	c7 40 6c 00 00 00 00 	movl   $0x0,0x6c(%eax)$/;"	l
c0108ddb	obj/kernel.asm	/^c0108ddb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108dde	obj/kernel.asm	/^c0108dde:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%eax)$/;"	l
c0108de5	obj/kernel.asm	/^c0108de5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108de8	obj/kernel.asm	/^c0108de8:	8b 50 78             	mov    0x78(%eax),%edx$/;"	l
c0108deb	obj/kernel.asm	/^c0108deb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108dee	obj/kernel.asm	/^c0108dee:	89 50 74             	mov    %edx,0x74(%eax)$/;"	l
c0108df1	obj/kernel.asm	/^c0108df1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108df4	obj/kernel.asm	/^c0108df4:	8b 50 74             	mov    0x74(%eax),%edx$/;"	l
c0108df7	obj/kernel.asm	/^c0108df7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108dfa	obj/kernel.asm	/^c0108dfa:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c0108dfd	obj/kernel.asm	/^c0108dfd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e00	obj/kernel.asm	/^c0108e00:	c9                   	leave  $/;"	l
c0108e01	obj/kernel.asm	/^c0108e01:	c3                   	ret    $/;"	l
c0108e02	obj/kernel.asm	/^c0108e02 <set_proc_name>:$/;"	l
c0108e02	obj/kernel.asm	/^c0108e02:	55                   	push   %ebp$/;"	l
c0108e03	obj/kernel.asm	/^c0108e03:	89 e5                	mov    %esp,%ebp$/;"	l
c0108e05	obj/kernel.asm	/^c0108e05:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108e08	obj/kernel.asm	/^c0108e08:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108e0b	obj/kernel.asm	/^c0108e0b:	83 c0 48             	add    $0x48,%eax$/;"	l
c0108e0e	obj/kernel.asm	/^c0108e0e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108e11	obj/kernel.asm	/^c0108e11:	6a 10                	push   $0x10$/;"	l
c0108e13	obj/kernel.asm	/^c0108e13:	6a 00                	push   $0x0$/;"	l
c0108e15	obj/kernel.asm	/^c0108e15:	50                   	push   %eax$/;"	l
c0108e16	obj/kernel.asm	/^c0108e16:	e8 81 1d 00 00       	call   c010ab9c <memset>$/;"	l
c0108e1b	obj/kernel.asm	/^c0108e1b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e1e	obj/kernel.asm	/^c0108e1e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108e21	obj/kernel.asm	/^c0108e21:	83 c0 48             	add    $0x48,%eax$/;"	l
c0108e24	obj/kernel.asm	/^c0108e24:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108e27	obj/kernel.asm	/^c0108e27:	6a 0f                	push   $0xf$/;"	l
c0108e29	obj/kernel.asm	/^c0108e29:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0108e2c	obj/kernel.asm	/^c0108e2c:	50                   	push   %eax$/;"	l
c0108e2d	obj/kernel.asm	/^c0108e2d:	e8 4d 1e 00 00       	call   c010ac7f <memcpy>$/;"	l
c0108e32	obj/kernel.asm	/^c0108e32:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e35	obj/kernel.asm	/^c0108e35:	c9                   	leave  $/;"	l
c0108e36	obj/kernel.asm	/^c0108e36:	c3                   	ret    $/;"	l
c0108e37	obj/kernel.asm	/^c0108e37 <get_proc_name>:$/;"	l
c0108e37	obj/kernel.asm	/^c0108e37:	55                   	push   %ebp$/;"	l
c0108e38	obj/kernel.asm	/^c0108e38:	89 e5                	mov    %esp,%ebp$/;"	l
c0108e3a	obj/kernel.asm	/^c0108e3a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108e3d	obj/kernel.asm	/^c0108e3d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108e40	obj/kernel.asm	/^c0108e40:	6a 10                	push   $0x10$/;"	l
c0108e42	obj/kernel.asm	/^c0108e42:	6a 00                	push   $0x0$/;"	l
c0108e44	obj/kernel.asm	/^c0108e44:	68 04 e0 19 c0       	push   $0xc019e004$/;"	l
c0108e49	obj/kernel.asm	/^c0108e49:	e8 4e 1d 00 00       	call   c010ab9c <memset>$/;"	l
c0108e4e	obj/kernel.asm	/^c0108e4e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e51	obj/kernel.asm	/^c0108e51:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108e54	obj/kernel.asm	/^c0108e54:	83 c0 48             	add    $0x48,%eax$/;"	l
c0108e57	obj/kernel.asm	/^c0108e57:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108e5a	obj/kernel.asm	/^c0108e5a:	6a 0f                	push   $0xf$/;"	l
c0108e5c	obj/kernel.asm	/^c0108e5c:	50                   	push   %eax$/;"	l
c0108e5d	obj/kernel.asm	/^c0108e5d:	68 04 e0 19 c0       	push   $0xc019e004$/;"	l
c0108e62	obj/kernel.asm	/^c0108e62:	e8 18 1e 00 00       	call   c010ac7f <memcpy>$/;"	l
c0108e67	obj/kernel.asm	/^c0108e67:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e6a	obj/kernel.asm	/^c0108e6a:	c9                   	leave  $/;"	l
c0108e6b	obj/kernel.asm	/^c0108e6b:	c3                   	ret    $/;"	l
c0108e6c	obj/kernel.asm	/^c0108e6c <set_links>:$/;"	l
c0108e6c	obj/kernel.asm	/^c0108e6c:	55                   	push   %ebp$/;"	l
c0108e6d	obj/kernel.asm	/^c0108e6d:	89 e5                	mov    %esp,%ebp$/;"	l
c0108e6f	obj/kernel.asm	/^c0108e6f:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0108e72	obj/kernel.asm	/^c0108e72:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108e75	obj/kernel.asm	/^c0108e75:	83 c0 58             	add    $0x58,%eax$/;"	l
c0108e78	obj/kernel.asm	/^c0108e78:	c7 45 fc 78 e1 19 c0 	movl   $0xc019e178,-0x4(%ebp)$/;"	l
c0108e7f	obj/kernel.asm	/^c0108e7f:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0108e82	obj/kernel.asm	/^c0108e82:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108e85	obj/kernel.asm	/^c0108e85:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108e88	obj/kernel.asm	/^c0108e88:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0108e8b	obj/kernel.asm	/^c0108e8b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108e8e	obj/kernel.asm	/^c0108e8e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e91	obj/kernel.asm	/^c0108e91:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108e94	obj/kernel.asm	/^c0108e94:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0108e97	obj/kernel.asm	/^c0108e97:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0108e9a	obj/kernel.asm	/^c0108e9a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108e9d	obj/kernel.asm	/^c0108e9d:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c0108ea0	obj/kernel.asm	/^c0108ea0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108ea3	obj/kernel.asm	/^c0108ea3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108ea6	obj/kernel.asm	/^c0108ea6:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0108ea9	obj/kernel.asm	/^c0108ea9:	89 10                	mov    %edx,(%eax)$/;"	l
c0108eab	obj/kernel.asm	/^c0108eab:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108eae	obj/kernel.asm	/^c0108eae:	8b 10                	mov    (%eax),%edx$/;"	l
c0108eb0	obj/kernel.asm	/^c0108eb0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108eb3	obj/kernel.asm	/^c0108eb3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108eb6	obj/kernel.asm	/^c0108eb6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108eb9	obj/kernel.asm	/^c0108eb9:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0108ebc	obj/kernel.asm	/^c0108ebc:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108ebf	obj/kernel.asm	/^c0108ebf:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108ec2	obj/kernel.asm	/^c0108ec2:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0108ec5	obj/kernel.asm	/^c0108ec5:	89 10                	mov    %edx,(%eax)$/;"	l
c0108ec7	obj/kernel.asm	/^c0108ec7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108eca	obj/kernel.asm	/^c0108eca:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)$/;"	l
c0108ed1	obj/kernel.asm	/^c0108ed1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108ed4	obj/kernel.asm	/^c0108ed4:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0108ed7	obj/kernel.asm	/^c0108ed7:	8b 50 70             	mov    0x70(%eax),%edx$/;"	l
c0108eda	obj/kernel.asm	/^c0108eda:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108edd	obj/kernel.asm	/^c0108edd:	89 50 78             	mov    %edx,0x78(%eax)$/;"	l
c0108ee0	obj/kernel.asm	/^c0108ee0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108ee3	obj/kernel.asm	/^c0108ee3:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0108ee6	obj/kernel.asm	/^c0108ee6:	85 c0                	test   %eax,%eax$/;"	l
c0108ee8	obj/kernel.asm	/^c0108ee8:	74 0c                	je     c0108ef6 <set_links+0x8a>$/;"	l
c0108eea	obj/kernel.asm	/^c0108eea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108eed	obj/kernel.asm	/^c0108eed:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0108ef0	obj/kernel.asm	/^c0108ef0:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108ef3	obj/kernel.asm	/^c0108ef3:	89 50 74             	mov    %edx,0x74(%eax)$/;"	l
c0108ef6	obj/kernel.asm	/^c0108ef6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108ef9	obj/kernel.asm	/^c0108ef9:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0108efc	obj/kernel.asm	/^c0108efc:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108eff	obj/kernel.asm	/^c0108eff:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c0108f02	obj/kernel.asm	/^c0108f02:	a1 00 e0 19 c0       	mov    0xc019e000,%eax$/;"	l
c0108f07	obj/kernel.asm	/^c0108f07:	83 c0 01             	add    $0x1,%eax$/;"	l
c0108f0a	obj/kernel.asm	/^c0108f0a:	a3 00 e0 19 c0       	mov    %eax,0xc019e000$/;"	l
c0108f0f	obj/kernel.asm	/^c0108f0f:	c9                   	leave  $/;"	l
c0108f10	obj/kernel.asm	/^c0108f10:	c3                   	ret    $/;"	l
c0108f11	obj/kernel.asm	/^c0108f11 <remove_links>:$/;"	l
c0108f11	obj/kernel.asm	/^c0108f11:	55                   	push   %ebp$/;"	l
c0108f12	obj/kernel.asm	/^c0108f12:	89 e5                	mov    %esp,%ebp$/;"	l
c0108f14	obj/kernel.asm	/^c0108f14:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0108f17	obj/kernel.asm	/^c0108f17:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f1a	obj/kernel.asm	/^c0108f1a:	83 c0 58             	add    $0x58,%eax$/;"	l
c0108f1d	obj/kernel.asm	/^c0108f1d:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0108f20	obj/kernel.asm	/^c0108f20:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108f23	obj/kernel.asm	/^c0108f23:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108f26	obj/kernel.asm	/^c0108f26:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0108f29	obj/kernel.asm	/^c0108f29:	8b 12                	mov    (%edx),%edx$/;"	l
c0108f2b	obj/kernel.asm	/^c0108f2b:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c0108f2e	obj/kernel.asm	/^c0108f2e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108f31	obj/kernel.asm	/^c0108f31:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0108f34	obj/kernel.asm	/^c0108f34:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108f37	obj/kernel.asm	/^c0108f37:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108f3a	obj/kernel.asm	/^c0108f3a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108f3d	obj/kernel.asm	/^c0108f3d:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c0108f40	obj/kernel.asm	/^c0108f40:	89 10                	mov    %edx,(%eax)$/;"	l
c0108f42	obj/kernel.asm	/^c0108f42:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f45	obj/kernel.asm	/^c0108f45:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0108f48	obj/kernel.asm	/^c0108f48:	85 c0                	test   %eax,%eax$/;"	l
c0108f4a	obj/kernel.asm	/^c0108f4a:	74 0f                	je     c0108f5b <remove_links+0x4a>$/;"	l
c0108f4c	obj/kernel.asm	/^c0108f4c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f4f	obj/kernel.asm	/^c0108f4f:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0108f52	obj/kernel.asm	/^c0108f52:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108f55	obj/kernel.asm	/^c0108f55:	8b 52 74             	mov    0x74(%edx),%edx$/;"	l
c0108f58	obj/kernel.asm	/^c0108f58:	89 50 74             	mov    %edx,0x74(%eax)$/;"	l
c0108f5b	obj/kernel.asm	/^c0108f5b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f5e	obj/kernel.asm	/^c0108f5e:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c0108f61	obj/kernel.asm	/^c0108f61:	85 c0                	test   %eax,%eax$/;"	l
c0108f63	obj/kernel.asm	/^c0108f63:	74 11                	je     c0108f76 <remove_links+0x65>$/;"	l
c0108f65	obj/kernel.asm	/^c0108f65:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f68	obj/kernel.asm	/^c0108f68:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c0108f6b	obj/kernel.asm	/^c0108f6b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108f6e	obj/kernel.asm	/^c0108f6e:	8b 52 78             	mov    0x78(%edx),%edx$/;"	l
c0108f71	obj/kernel.asm	/^c0108f71:	89 50 78             	mov    %edx,0x78(%eax)$/;"	l
c0108f74	obj/kernel.asm	/^c0108f74:	eb 0f                	jmp    c0108f85 <remove_links+0x74>$/;"	l
c0108f76	obj/kernel.asm	/^c0108f76:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f79	obj/kernel.asm	/^c0108f79:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0108f7c	obj/kernel.asm	/^c0108f7c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108f7f	obj/kernel.asm	/^c0108f7f:	8b 52 78             	mov    0x78(%edx),%edx$/;"	l
c0108f82	obj/kernel.asm	/^c0108f82:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c0108f85	obj/kernel.asm	/^c0108f85:	a1 00 e0 19 c0       	mov    0xc019e000,%eax$/;"	l
c0108f8a	obj/kernel.asm	/^c0108f8a:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0108f8d	obj/kernel.asm	/^c0108f8d:	a3 00 e0 19 c0       	mov    %eax,0xc019e000$/;"	l
c0108f92	obj/kernel.asm	/^c0108f92:	c9                   	leave  $/;"	l
c0108f93	obj/kernel.asm	/^c0108f93:	c3                   	ret    $/;"	l
c0108f94	obj/kernel.asm	/^c0108f94 <get_pid>:$/;"	l
c0108f94	obj/kernel.asm	/^c0108f94:	55                   	push   %ebp$/;"	l
c0108f95	obj/kernel.asm	/^c0108f95:	89 e5                	mov    %esp,%ebp$/;"	l
c0108f97	obj/kernel.asm	/^c0108f97:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0108f9a	obj/kernel.asm	/^c0108f9a:	c7 45 f8 78 e1 19 c0 	movl   $0xc019e178,-0x8(%ebp)$/;"	l
c0108fa1	obj/kernel.asm	/^c0108fa1:	a1 e0 9a 12 c0       	mov    0xc0129ae0,%eax$/;"	l
c0108fa6	obj/kernel.asm	/^c0108fa6:	83 c0 01             	add    $0x1,%eax$/;"	l
c0108fa9	obj/kernel.asm	/^c0108fa9:	a3 e0 9a 12 c0       	mov    %eax,0xc0129ae0$/;"	l
c0108fae	obj/kernel.asm	/^c0108fae:	a1 e0 9a 12 c0       	mov    0xc0129ae0,%eax$/;"	l
c0108fb3	obj/kernel.asm	/^c0108fb3:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c0108fb8	obj/kernel.asm	/^c0108fb8:	7e 0c                	jle    c0108fc6 <get_pid+0x32>$/;"	l
c0108fba	obj/kernel.asm	/^c0108fba:	c7 05 e0 9a 12 c0 01 	movl   $0x1,0xc0129ae0$/;"	l
c0108fc1	obj/kernel.asm	/^c0108fc1:	00 00 00 $/;"	l
c0108fc4	obj/kernel.asm	/^c0108fc4:	eb 13                	jmp    c0108fd9 <get_pid+0x45>$/;"	l
c0108fc6	obj/kernel.asm	/^c0108fc6:	8b 15 e0 9a 12 c0    	mov    0xc0129ae0,%edx$/;"	l
c0108fcc	obj/kernel.asm	/^c0108fcc:	a1 e4 9a 12 c0       	mov    0xc0129ae4,%eax$/;"	l
c0108fd1	obj/kernel.asm	/^c0108fd1:	39 c2                	cmp    %eax,%edx$/;"	l
c0108fd3	obj/kernel.asm	/^c0108fd3:	0f 8c ac 00 00 00    	jl     c0109085 <get_pid+0xf1>$/;"	l
c0108fd9	obj/kernel.asm	/^c0108fd9:	c7 05 e4 9a 12 c0 00 	movl   $0x2000,0xc0129ae4$/;"	l
c0108fe0	obj/kernel.asm	/^c0108fe0:	20 00 00 $/;"	l
c0108fe3	obj/kernel.asm	/^c0108fe3:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0108fe6	obj/kernel.asm	/^c0108fe6:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0108fe9	obj/kernel.asm	/^c0108fe9:	eb 7f                	jmp    c010906a <get_pid+0xd6>$/;"	l
c0108feb	obj/kernel.asm	/^c0108feb:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108fee	obj/kernel.asm	/^c0108fee:	83 e8 58             	sub    $0x58,%eax$/;"	l
c0108ff1	obj/kernel.asm	/^c0108ff1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108ff4	obj/kernel.asm	/^c0108ff4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108ff7	obj/kernel.asm	/^c0108ff7:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108ffa	obj/kernel.asm	/^c0108ffa:	a1 e0 9a 12 c0       	mov    0xc0129ae0,%eax$/;"	l
c0108fff	obj/kernel.asm	/^c0108fff:	39 c2                	cmp    %eax,%edx$/;"	l
c0109001	obj/kernel.asm	/^c0109001:	75 3e                	jne    c0109041 <get_pid+0xad>$/;"	l
c0109003	obj/kernel.asm	/^c0109003:	a1 e0 9a 12 c0       	mov    0xc0129ae0,%eax$/;"	l
c0109008	obj/kernel.asm	/^c0109008:	83 c0 01             	add    $0x1,%eax$/;"	l
c010900b	obj/kernel.asm	/^c010900b:	a3 e0 9a 12 c0       	mov    %eax,0xc0129ae0$/;"	l
c0109010	obj/kernel.asm	/^c0109010:	8b 15 e0 9a 12 c0    	mov    0xc0129ae0,%edx$/;"	l
c0109016	obj/kernel.asm	/^c0109016:	a1 e4 9a 12 c0       	mov    0xc0129ae4,%eax$/;"	l
c010901b	obj/kernel.asm	/^c010901b:	39 c2                	cmp    %eax,%edx$/;"	l
c010901d	obj/kernel.asm	/^c010901d:	7c 4b                	jl     c010906a <get_pid+0xd6>$/;"	l
c010901f	obj/kernel.asm	/^c010901f:	a1 e0 9a 12 c0       	mov    0xc0129ae0,%eax$/;"	l
c0109024	obj/kernel.asm	/^c0109024:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c0109029	obj/kernel.asm	/^c0109029:	7e 0a                	jle    c0109035 <get_pid+0xa1>$/;"	l
c010902b	obj/kernel.asm	/^c010902b:	c7 05 e0 9a 12 c0 01 	movl   $0x1,0xc0129ae0$/;"	l
c0109032	obj/kernel.asm	/^c0109032:	00 00 00 $/;"	l
c0109035	obj/kernel.asm	/^c0109035:	c7 05 e4 9a 12 c0 00 	movl   $0x2000,0xc0129ae4$/;"	l
c010903c	obj/kernel.asm	/^c010903c:	20 00 00 $/;"	l
c010903f	obj/kernel.asm	/^c010903f:	eb a2                	jmp    c0108fe3 <get_pid+0x4f>$/;"	l
c0109041	obj/kernel.asm	/^c0109041:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109044	obj/kernel.asm	/^c0109044:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109047	obj/kernel.asm	/^c0109047:	a1 e0 9a 12 c0       	mov    0xc0129ae0,%eax$/;"	l
c010904c	obj/kernel.asm	/^c010904c:	39 c2                	cmp    %eax,%edx$/;"	l
c010904e	obj/kernel.asm	/^c010904e:	7e 1a                	jle    c010906a <get_pid+0xd6>$/;"	l
c0109050	obj/kernel.asm	/^c0109050:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109053	obj/kernel.asm	/^c0109053:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109056	obj/kernel.asm	/^c0109056:	a1 e4 9a 12 c0       	mov    0xc0129ae4,%eax$/;"	l
c010905b	obj/kernel.asm	/^c010905b:	39 c2                	cmp    %eax,%edx$/;"	l
c010905d	obj/kernel.asm	/^c010905d:	7d 0b                	jge    c010906a <get_pid+0xd6>$/;"	l
c010905f	obj/kernel.asm	/^c010905f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109062	obj/kernel.asm	/^c0109062:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109065	obj/kernel.asm	/^c0109065:	a3 e4 9a 12 c0       	mov    %eax,0xc0129ae4$/;"	l
c010906a	obj/kernel.asm	/^c010906a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010906d	obj/kernel.asm	/^c010906d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109070	obj/kernel.asm	/^c0109070:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109073	obj/kernel.asm	/^c0109073:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109076	obj/kernel.asm	/^c0109076:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109079	obj/kernel.asm	/^c0109079:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010907c	obj/kernel.asm	/^c010907c:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c010907f	obj/kernel.asm	/^c010907f:	0f 85 66 ff ff ff    	jne    c0108feb <get_pid+0x57>$/;"	l
c0109085	obj/kernel.asm	/^c0109085:	a1 e0 9a 12 c0       	mov    0xc0129ae0,%eax$/;"	l
c010908a	obj/kernel.asm	/^c010908a:	c9                   	leave  $/;"	l
c010908b	obj/kernel.asm	/^c010908b:	c3                   	ret    $/;"	l
c010908c	obj/kernel.asm	/^c010908c <proc_run>:$/;"	l
c010908c	obj/kernel.asm	/^c010908c:	55                   	push   %ebp$/;"	l
c010908d	obj/kernel.asm	/^c010908d:	89 e5                	mov    %esp,%ebp$/;"	l
c010908f	obj/kernel.asm	/^c010908f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109092	obj/kernel.asm	/^c0109092:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0109097	obj/kernel.asm	/^c0109097:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010909a	obj/kernel.asm	/^c010909a:	74 6b                	je     c0109107 <proc_run+0x7b>$/;"	l
c010909c	obj/kernel.asm	/^c010909c:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c01090a1	obj/kernel.asm	/^c01090a1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01090a4	obj/kernel.asm	/^c01090a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01090a7	obj/kernel.asm	/^c01090a7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01090aa	obj/kernel.asm	/^c01090aa:	e8 71 fa ff ff       	call   c0108b20 <__intr_save>$/;"	l
c01090af	obj/kernel.asm	/^c01090af:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01090b2	obj/kernel.asm	/^c01090b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01090b5	obj/kernel.asm	/^c01090b5:	a3 c8 bf 19 c0       	mov    %eax,0xc019bfc8$/;"	l
c01090ba	obj/kernel.asm	/^c01090ba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01090bd	obj/kernel.asm	/^c01090bd:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01090c0	obj/kernel.asm	/^c01090c0:	05 00 20 00 00       	add    $0x2000,%eax$/;"	l
c01090c5	obj/kernel.asm	/^c01090c5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01090c8	obj/kernel.asm	/^c01090c8:	50                   	push   %eax$/;"	l
c01090c9	obj/kernel.asm	/^c01090c9:	e8 4d a7 ff ff       	call   c010381b <load_esp0>$/;"	l
c01090ce	obj/kernel.asm	/^c01090ce:	83 c4 10             	add    $0x10,%esp$/;"	l
c01090d1	obj/kernel.asm	/^c01090d1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01090d4	obj/kernel.asm	/^c01090d4:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c01090d7	obj/kernel.asm	/^c01090d7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01090da	obj/kernel.asm	/^c01090da:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01090dd	obj/kernel.asm	/^c01090dd:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c01090e0	obj/kernel.asm	/^c01090e0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01090e3	obj/kernel.asm	/^c01090e3:	8d 50 1c             	lea    0x1c(%eax),%edx$/;"	l
c01090e6	obj/kernel.asm	/^c01090e6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01090e9	obj/kernel.asm	/^c01090e9:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c01090ec	obj/kernel.asm	/^c01090ec:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01090ef	obj/kernel.asm	/^c01090ef:	52                   	push   %edx$/;"	l
c01090f0	obj/kernel.asm	/^c01090f0:	50                   	push   %eax$/;"	l
c01090f1	obj/kernel.asm	/^c01090f1:	e8 b3 f9 ff ff       	call   c0108aa9 <switch_to>$/;"	l
c01090f6	obj/kernel.asm	/^c01090f6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01090f9	obj/kernel.asm	/^c01090f9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01090fc	obj/kernel.asm	/^c01090fc:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01090ff	obj/kernel.asm	/^c01090ff:	e8 46 fa ff ff       	call   c0108b4a <__intr_restore>$/;"	l
c0109104	obj/kernel.asm	/^c0109104:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109107	obj/kernel.asm	/^c0109107:	c9                   	leave  $/;"	l
c0109108	obj/kernel.asm	/^c0109108:	c3                   	ret    $/;"	l
c0109109	obj/kernel.asm	/^c0109109 <forkret>:$/;"	l
c0109109	obj/kernel.asm	/^c0109109:	55                   	push   %ebp$/;"	l
c010910a	obj/kernel.asm	/^c010910a:	89 e5                	mov    %esp,%ebp$/;"	l
c010910c	obj/kernel.asm	/^c010910c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010910f	obj/kernel.asm	/^c010910f:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0109114	obj/kernel.asm	/^c0109114:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109117	obj/kernel.asm	/^c0109117:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010911a	obj/kernel.asm	/^c010911a:	50                   	push   %eax$/;"	l
c010911b	obj/kernel.asm	/^c010911b:	e8 3d a5 ff ff       	call   c010365d <forkrets>$/;"	l
c0109120	obj/kernel.asm	/^c0109120:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109123	obj/kernel.asm	/^c0109123:	c9                   	leave  $/;"	l
c0109124	obj/kernel.asm	/^c0109124:	c3                   	ret    $/;"	l
c0109125	obj/kernel.asm	/^c0109125 <hash_proc>:$/;"	l
c0109125	obj/kernel.asm	/^c0109125:	55                   	push   %ebp$/;"	l
c0109126	obj/kernel.asm	/^c0109126:	89 e5                	mov    %esp,%ebp$/;"	l
c0109128	obj/kernel.asm	/^c0109128:	53                   	push   %ebx$/;"	l
c0109129	obj/kernel.asm	/^c0109129:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010912c	obj/kernel.asm	/^c010912c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010912f	obj/kernel.asm	/^c010912f:	8d 58 60             	lea    0x60(%eax),%ebx$/;"	l
c0109132	obj/kernel.asm	/^c0109132:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109135	obj/kernel.asm	/^c0109135:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109138	obj/kernel.asm	/^c0109138:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010913b	obj/kernel.asm	/^c010913b:	6a 0a                	push   $0xa$/;"	l
c010913d	obj/kernel.asm	/^c010913d:	50                   	push   %eax$/;"	l
c010913e	obj/kernel.asm	/^c010913e:	e8 ea 21 00 00       	call   c010b32d <hash32>$/;"	l
c0109143	obj/kernel.asm	/^c0109143:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109146	obj/kernel.asm	/^c0109146:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0109149	obj/kernel.asm	/^c0109149:	05 00 c0 19 c0       	add    $0xc019c000,%eax$/;"	l
c010914e	obj/kernel.asm	/^c010914e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109151	obj/kernel.asm	/^c0109151:	89 5d f0             	mov    %ebx,-0x10(%ebp)$/;"	l
c0109154	obj/kernel.asm	/^c0109154:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109157	obj/kernel.asm	/^c0109157:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010915a	obj/kernel.asm	/^c010915a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010915d	obj/kernel.asm	/^c010915d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109160	obj/kernel.asm	/^c0109160:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109163	obj/kernel.asm	/^c0109163:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109166	obj/kernel.asm	/^c0109166:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0109169	obj/kernel.asm	/^c0109169:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010916c	obj/kernel.asm	/^c010916c:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010916f	obj/kernel.asm	/^c010916f:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c0109172	obj/kernel.asm	/^c0109172:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0109175	obj/kernel.asm	/^c0109175:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0109178	obj/kernel.asm	/^c0109178:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010917b	obj/kernel.asm	/^c010917b:	89 10                	mov    %edx,(%eax)$/;"	l
c010917d	obj/kernel.asm	/^c010917d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0109180	obj/kernel.asm	/^c0109180:	8b 10                	mov    (%eax),%edx$/;"	l
c0109182	obj/kernel.asm	/^c0109182:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109185	obj/kernel.asm	/^c0109185:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109188	obj/kernel.asm	/^c0109188:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010918b	obj/kernel.asm	/^c010918b:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010918e	obj/kernel.asm	/^c010918e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109191	obj/kernel.asm	/^c0109191:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109194	obj/kernel.asm	/^c0109194:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0109197	obj/kernel.asm	/^c0109197:	89 10                	mov    %edx,(%eax)$/;"	l
c0109199	obj/kernel.asm	/^c0109199:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c010919c	obj/kernel.asm	/^c010919c:	c9                   	leave  $/;"	l
c010919d	obj/kernel.asm	/^c010919d:	c3                   	ret    $/;"	l
c010919e	obj/kernel.asm	/^c010919e <unhash_proc>:$/;"	l
c010919e	obj/kernel.asm	/^c010919e:	55                   	push   %ebp$/;"	l
c010919f	obj/kernel.asm	/^c010919f:	89 e5                	mov    %esp,%ebp$/;"	l
c01091a1	obj/kernel.asm	/^c01091a1:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01091a4	obj/kernel.asm	/^c01091a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01091a7	obj/kernel.asm	/^c01091a7:	83 c0 60             	add    $0x60,%eax$/;"	l
c01091aa	obj/kernel.asm	/^c01091aa:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01091ad	obj/kernel.asm	/^c01091ad:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01091b0	obj/kernel.asm	/^c01091b0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01091b3	obj/kernel.asm	/^c01091b3:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01091b6	obj/kernel.asm	/^c01091b6:	8b 12                	mov    (%edx),%edx$/;"	l
c01091b8	obj/kernel.asm	/^c01091b8:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c01091bb	obj/kernel.asm	/^c01091bb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01091be	obj/kernel.asm	/^c01091be:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01091c1	obj/kernel.asm	/^c01091c1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01091c4	obj/kernel.asm	/^c01091c4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01091c7	obj/kernel.asm	/^c01091c7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01091ca	obj/kernel.asm	/^c01091ca:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c01091cd	obj/kernel.asm	/^c01091cd:	89 10                	mov    %edx,(%eax)$/;"	l
c01091cf	obj/kernel.asm	/^c01091cf:	c9                   	leave  $/;"	l
c01091d0	obj/kernel.asm	/^c01091d0:	c3                   	ret    $/;"	l
c01091d1	obj/kernel.asm	/^c01091d1 <find_proc>:$/;"	l
c01091d1	obj/kernel.asm	/^c01091d1:	55                   	push   %ebp$/;"	l
c01091d2	obj/kernel.asm	/^c01091d2:	89 e5                	mov    %esp,%ebp$/;"	l
c01091d4	obj/kernel.asm	/^c01091d4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01091d7	obj/kernel.asm	/^c01091d7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01091db	obj/kernel.asm	/^c01091db:	7e 5d                	jle    c010923a <find_proc+0x69>$/;"	l
c01091dd	obj/kernel.asm	/^c01091dd:	81 7d 08 ff 1f 00 00 	cmpl   $0x1fff,0x8(%ebp)$/;"	l
c01091e4	obj/kernel.asm	/^c01091e4:	7f 54                	jg     c010923a <find_proc+0x69>$/;"	l
c01091e6	obj/kernel.asm	/^c01091e6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01091e9	obj/kernel.asm	/^c01091e9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01091ec	obj/kernel.asm	/^c01091ec:	6a 0a                	push   $0xa$/;"	l
c01091ee	obj/kernel.asm	/^c01091ee:	50                   	push   %eax$/;"	l
c01091ef	obj/kernel.asm	/^c01091ef:	e8 39 21 00 00       	call   c010b32d <hash32>$/;"	l
c01091f4	obj/kernel.asm	/^c01091f4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01091f7	obj/kernel.asm	/^c01091f7:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01091fa	obj/kernel.asm	/^c01091fa:	05 00 c0 19 c0       	add    $0xc019c000,%eax$/;"	l
c01091ff	obj/kernel.asm	/^c01091ff:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109202	obj/kernel.asm	/^c0109202:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109205	obj/kernel.asm	/^c0109205:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109208	obj/kernel.asm	/^c0109208:	eb 19                	jmp    c0109223 <find_proc+0x52>$/;"	l
c010920a	obj/kernel.asm	/^c010920a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010920d	obj/kernel.asm	/^c010920d:	83 e8 60             	sub    $0x60,%eax$/;"	l
c0109210	obj/kernel.asm	/^c0109210:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109213	obj/kernel.asm	/^c0109213:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109216	obj/kernel.asm	/^c0109216:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109219	obj/kernel.asm	/^c0109219:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010921c	obj/kernel.asm	/^c010921c:	75 05                	jne    c0109223 <find_proc+0x52>$/;"	l
c010921e	obj/kernel.asm	/^c010921e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109221	obj/kernel.asm	/^c0109221:	eb 1c                	jmp    c010923f <find_proc+0x6e>$/;"	l
c0109223	obj/kernel.asm	/^c0109223:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109226	obj/kernel.asm	/^c0109226:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109229	obj/kernel.asm	/^c0109229:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010922c	obj/kernel.asm	/^c010922c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010922f	obj/kernel.asm	/^c010922f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109232	obj/kernel.asm	/^c0109232:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109235	obj/kernel.asm	/^c0109235:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0109238	obj/kernel.asm	/^c0109238:	75 d0                	jne    c010920a <find_proc+0x39>$/;"	l
c010923a	obj/kernel.asm	/^c010923a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010923f	obj/kernel.asm	/^c010923f:	c9                   	leave  $/;"	l
c0109240	obj/kernel.asm	/^c0109240:	c3                   	ret    $/;"	l
c0109241	obj/kernel.asm	/^c0109241 <kernel_thread>:$/;"	l
c0109241	obj/kernel.asm	/^c0109241:	55                   	push   %ebp$/;"	l
c0109242	obj/kernel.asm	/^c0109242:	89 e5                	mov    %esp,%ebp$/;"	l
c0109244	obj/kernel.asm	/^c0109244:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0109247	obj/kernel.asm	/^c0109247:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010924a	obj/kernel.asm	/^c010924a:	6a 4c                	push   $0x4c$/;"	l
c010924c	obj/kernel.asm	/^c010924c:	6a 00                	push   $0x0$/;"	l
c010924e	obj/kernel.asm	/^c010924e:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c0109251	obj/kernel.asm	/^c0109251:	50                   	push   %eax$/;"	l
c0109252	obj/kernel.asm	/^c0109252:	e8 45 19 00 00       	call   c010ab9c <memset>$/;"	l
c0109257	obj/kernel.asm	/^c0109257:	83 c4 10             	add    $0x10,%esp$/;"	l
c010925a	obj/kernel.asm	/^c010925a:	66 c7 45 e8 08 00    	movw   $0x8,-0x18(%ebp)$/;"	l
c0109260	obj/kernel.asm	/^c0109260:	66 c7 45 f4 10 00    	movw   $0x10,-0xc(%ebp)$/;"	l
c0109266	obj/kernel.asm	/^c0109266:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c010926a	obj/kernel.asm	/^c010926a:	66 89 45 d4          	mov    %ax,-0x2c(%ebp)$/;"	l
c010926e	obj/kernel.asm	/^c010926e:	0f b7 45 d4          	movzwl -0x2c(%ebp),%eax$/;"	l
c0109272	obj/kernel.asm	/^c0109272:	66 89 45 d8          	mov    %ax,-0x28(%ebp)$/;"	l
c0109276	obj/kernel.asm	/^c0109276:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109279	obj/kernel.asm	/^c0109279:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010927c	obj/kernel.asm	/^c010927c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010927f	obj/kernel.asm	/^c010927f:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0109282	obj/kernel.asm	/^c0109282:	b8 a0 8a 10 c0       	mov    $0xc0108aa0,%eax$/;"	l
c0109287	obj/kernel.asm	/^c0109287:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010928a	obj/kernel.asm	/^c010928a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010928d	obj/kernel.asm	/^c010928d:	80 cc 01             	or     $0x1,%ah$/;"	l
c0109290	obj/kernel.asm	/^c0109290:	89 c2                	mov    %eax,%edx$/;"	l
c0109292	obj/kernel.asm	/^c0109292:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109295	obj/kernel.asm	/^c0109295:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c0109298	obj/kernel.asm	/^c0109298:	50                   	push   %eax$/;"	l
c0109299	obj/kernel.asm	/^c0109299:	6a 00                	push   $0x0$/;"	l
c010929b	obj/kernel.asm	/^c010929b:	52                   	push   %edx$/;"	l
c010929c	obj/kernel.asm	/^c010929c:	e8 f0 02 00 00       	call   c0109591 <do_fork>$/;"	l
c01092a1	obj/kernel.asm	/^c01092a1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01092a4	obj/kernel.asm	/^c01092a4:	c9                   	leave  $/;"	l
c01092a5	obj/kernel.asm	/^c01092a5:	c3                   	ret    $/;"	l
c01092a6	obj/kernel.asm	/^c01092a6 <setup_kstack>:$/;"	l
c01092a6	obj/kernel.asm	/^c01092a6:	55                   	push   %ebp$/;"	l
c01092a7	obj/kernel.asm	/^c01092a7:	89 e5                	mov    %esp,%ebp$/;"	l
c01092a9	obj/kernel.asm	/^c01092a9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01092ac	obj/kernel.asm	/^c01092ac:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01092af	obj/kernel.asm	/^c01092af:	6a 02                	push   $0x2$/;"	l
c01092b1	obj/kernel.asm	/^c01092b1:	e8 b5 a6 ff ff       	call   c010396b <alloc_pages>$/;"	l
c01092b6	obj/kernel.asm	/^c01092b6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01092b9	obj/kernel.asm	/^c01092b9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01092bc	obj/kernel.asm	/^c01092bc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01092c0	obj/kernel.asm	/^c01092c0:	74 1d                	je     c01092df <setup_kstack+0x39>$/;"	l
c01092c2	obj/kernel.asm	/^c01092c2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01092c5	obj/kernel.asm	/^c01092c5:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01092c8	obj/kernel.asm	/^c01092c8:	e8 5b f9 ff ff       	call   c0108c28 <page2kva>$/;"	l
c01092cd	obj/kernel.asm	/^c01092cd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01092d0	obj/kernel.asm	/^c01092d0:	89 c2                	mov    %eax,%edx$/;"	l
c01092d2	obj/kernel.asm	/^c01092d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01092d5	obj/kernel.asm	/^c01092d5:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01092d8	obj/kernel.asm	/^c01092d8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01092dd	obj/kernel.asm	/^c01092dd:	eb 05                	jmp    c01092e4 <setup_kstack+0x3e>$/;"	l
c01092df	obj/kernel.asm	/^c01092df:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01092e4	obj/kernel.asm	/^c01092e4:	c9                   	leave  $/;"	l
c01092e5	obj/kernel.asm	/^c01092e5:	c3                   	ret    $/;"	l
c01092e6	obj/kernel.asm	/^c01092e6 <put_kstack>:$/;"	l
c01092e6	obj/kernel.asm	/^c01092e6:	55                   	push   %ebp$/;"	l
c01092e7	obj/kernel.asm	/^c01092e7:	89 e5                	mov    %esp,%ebp$/;"	l
c01092e9	obj/kernel.asm	/^c01092e9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01092ec	obj/kernel.asm	/^c01092ec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01092ef	obj/kernel.asm	/^c01092ef:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01092f2	obj/kernel.asm	/^c01092f2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01092f5	obj/kernel.asm	/^c01092f5:	50                   	push   %eax$/;"	l
c01092f6	obj/kernel.asm	/^c01092f6:	e8 72 f9 ff ff       	call   c0108c6d <kva2page>$/;"	l
c01092fb	obj/kernel.asm	/^c01092fb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01092fe	obj/kernel.asm	/^c01092fe:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109301	obj/kernel.asm	/^c0109301:	6a 02                	push   $0x2$/;"	l
c0109303	obj/kernel.asm	/^c0109303:	50                   	push   %eax$/;"	l
c0109304	obj/kernel.asm	/^c0109304:	e8 ce a6 ff ff       	call   c01039d7 <free_pages>$/;"	l
c0109309	obj/kernel.asm	/^c0109309:	83 c4 10             	add    $0x10,%esp$/;"	l
c010930c	obj/kernel.asm	/^c010930c:	c9                   	leave  $/;"	l
c010930d	obj/kernel.asm	/^c010930d:	c3                   	ret    $/;"	l
c010930e	obj/kernel.asm	/^c010930e <setup_pgdir>:$/;"	l
c010930e	obj/kernel.asm	/^c010930e:	55                   	push   %ebp$/;"	l
c010930f	obj/kernel.asm	/^c010930f:	89 e5                	mov    %esp,%ebp$/;"	l
c0109311	obj/kernel.asm	/^c0109311:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109314	obj/kernel.asm	/^c0109314:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109317	obj/kernel.asm	/^c0109317:	6a 01                	push   $0x1$/;"	l
c0109319	obj/kernel.asm	/^c0109319:	e8 4d a6 ff ff       	call   c010396b <alloc_pages>$/;"	l
c010931e	obj/kernel.asm	/^c010931e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109321	obj/kernel.asm	/^c0109321:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109324	obj/kernel.asm	/^c0109324:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109328	obj/kernel.asm	/^c0109328:	75 07                	jne    c0109331 <setup_pgdir+0x23>$/;"	l
c010932a	obj/kernel.asm	/^c010932a:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010932f	obj/kernel.asm	/^c010932f:	eb 74                	jmp    c01093a5 <setup_pgdir+0x97>$/;"	l
c0109331	obj/kernel.asm	/^c0109331:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109334	obj/kernel.asm	/^c0109334:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109337	obj/kernel.asm	/^c0109337:	e8 ec f8 ff ff       	call   c0108c28 <page2kva>$/;"	l
c010933c	obj/kernel.asm	/^c010933c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010933f	obj/kernel.asm	/^c010933f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109342	obj/kernel.asm	/^c0109342:	a1 04 bf 19 c0       	mov    0xc019bf04,%eax$/;"	l
c0109347	obj/kernel.asm	/^c0109347:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010934a	obj/kernel.asm	/^c010934a:	68 00 10 00 00       	push   $0x1000$/;"	l
c010934f	obj/kernel.asm	/^c010934f:	50                   	push   %eax$/;"	l
c0109350	obj/kernel.asm	/^c0109350:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109353	obj/kernel.asm	/^c0109353:	e8 27 19 00 00       	call   c010ac7f <memcpy>$/;"	l
c0109358	obj/kernel.asm	/^c0109358:	83 c4 10             	add    $0x10,%esp$/;"	l
c010935b	obj/kernel.asm	/^c010935b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010935e	obj/kernel.asm	/^c010935e:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c0109364	obj/kernel.asm	/^c0109364:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109367	obj/kernel.asm	/^c0109367:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010936a	obj/kernel.asm	/^c010936a:	81 7d ec ff ff ff bf 	cmpl   $0xbfffffff,-0x14(%ebp)$/;"	l
c0109371	obj/kernel.asm	/^c0109371:	77 17                	ja     c010938a <setup_pgdir+0x7c>$/;"	l
c0109373	obj/kernel.asm	/^c0109373:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109376	obj/kernel.asm	/^c0109376:	68 f4 d4 10 c0       	push   $0xc010d4f4$/;"	l
c010937b	obj/kernel.asm	/^c010937b:	68 2e 01 00 00       	push   $0x12e$/;"	l
c0109380	obj/kernel.asm	/^c0109380:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c0109385	obj/kernel.asm	/^c0109385:	e8 50 70 ff ff       	call   c01003da <__panic>$/;"	l
c010938a	obj/kernel.asm	/^c010938a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010938d	obj/kernel.asm	/^c010938d:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0109392	obj/kernel.asm	/^c0109392:	83 c8 03             	or     $0x3,%eax$/;"	l
c0109395	obj/kernel.asm	/^c0109395:	89 02                	mov    %eax,(%edx)$/;"	l
c0109397	obj/kernel.asm	/^c0109397:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010939a	obj/kernel.asm	/^c010939a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010939d	obj/kernel.asm	/^c010939d:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01093a0	obj/kernel.asm	/^c01093a0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01093a5	obj/kernel.asm	/^c01093a5:	c9                   	leave  $/;"	l
c01093a6	obj/kernel.asm	/^c01093a6:	c3                   	ret    $/;"	l
c01093a7	obj/kernel.asm	/^c01093a7 <put_pgdir>:$/;"	l
c01093a7	obj/kernel.asm	/^c01093a7:	55                   	push   %ebp$/;"	l
c01093a8	obj/kernel.asm	/^c01093a8:	89 e5                	mov    %esp,%ebp$/;"	l
c01093aa	obj/kernel.asm	/^c01093aa:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01093ad	obj/kernel.asm	/^c01093ad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093b0	obj/kernel.asm	/^c01093b0:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01093b3	obj/kernel.asm	/^c01093b3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01093b6	obj/kernel.asm	/^c01093b6:	50                   	push   %eax$/;"	l
c01093b7	obj/kernel.asm	/^c01093b7:	e8 b1 f8 ff ff       	call   c0108c6d <kva2page>$/;"	l
c01093bc	obj/kernel.asm	/^c01093bc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01093bf	obj/kernel.asm	/^c01093bf:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01093c2	obj/kernel.asm	/^c01093c2:	6a 01                	push   $0x1$/;"	l
c01093c4	obj/kernel.asm	/^c01093c4:	50                   	push   %eax$/;"	l
c01093c5	obj/kernel.asm	/^c01093c5:	e8 0d a6 ff ff       	call   c01039d7 <free_pages>$/;"	l
c01093ca	obj/kernel.asm	/^c01093ca:	83 c4 10             	add    $0x10,%esp$/;"	l
c01093cd	obj/kernel.asm	/^c01093cd:	c9                   	leave  $/;"	l
c01093ce	obj/kernel.asm	/^c01093ce:	c3                   	ret    $/;"	l
c01093cf	obj/kernel.asm	/^c01093cf <copy_mm>:$/;"	l
c01093cf	obj/kernel.asm	/^c01093cf:	55                   	push   %ebp$/;"	l
c01093d0	obj/kernel.asm	/^c01093d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01093d2	obj/kernel.asm	/^c01093d2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01093d5	obj/kernel.asm	/^c01093d5:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c01093da	obj/kernel.asm	/^c01093da:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01093dd	obj/kernel.asm	/^c01093dd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01093e0	obj/kernel.asm	/^c01093e0:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01093e4	obj/kernel.asm	/^c01093e4:	75 0a                	jne    c01093f0 <copy_mm+0x21>$/;"	l
c01093e6	obj/kernel.asm	/^c01093e6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01093eb	obj/kernel.asm	/^c01093eb:	e9 04 01 00 00       	jmp    c01094f4 <copy_mm+0x125>$/;"	l
c01093f0	obj/kernel.asm	/^c01093f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093f3	obj/kernel.asm	/^c01093f3:	25 00 01 00 00       	and    $0x100,%eax$/;"	l
c01093f8	obj/kernel.asm	/^c01093f8:	85 c0                	test   %eax,%eax$/;"	l
c01093fa	obj/kernel.asm	/^c01093fa:	74 0b                	je     c0109407 <copy_mm+0x38>$/;"	l
c01093fc	obj/kernel.asm	/^c01093fc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01093ff	obj/kernel.asm	/^c01093ff:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109402	obj/kernel.asm	/^c0109402:	e9 86 00 00 00       	jmp    c010948d <copy_mm+0xbe>$/;"	l
c0109407	obj/kernel.asm	/^c0109407:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c010940e	obj/kernel.asm	/^c010940e:	e8 6b be ff ff       	call   c010527e <mm_create>$/;"	l
c0109413	obj/kernel.asm	/^c0109413:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109416	obj/kernel.asm	/^c0109416:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010941a	obj/kernel.asm	/^c010941a:	75 05                	jne    c0109421 <copy_mm+0x52>$/;"	l
c010941c	obj/kernel.asm	/^c010941c:	e9 d0 00 00 00       	jmp    c01094f1 <copy_mm+0x122>$/;"	l
c0109421	obj/kernel.asm	/^c0109421:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109424	obj/kernel.asm	/^c0109424:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109427	obj/kernel.asm	/^c0109427:	e8 e2 fe ff ff       	call   c010930e <setup_pgdir>$/;"	l
c010942c	obj/kernel.asm	/^c010942c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010942f	obj/kernel.asm	/^c010942f:	85 c0                	test   %eax,%eax$/;"	l
c0109431	obj/kernel.asm	/^c0109431:	74 05                	je     c0109438 <copy_mm+0x69>$/;"	l
c0109433	obj/kernel.asm	/^c0109433:	e9 ab 00 00 00       	jmp    c01094e3 <copy_mm+0x114>$/;"	l
c0109438	obj/kernel.asm	/^c0109438:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010943b	obj/kernel.asm	/^c010943b:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010943e	obj/kernel.asm	/^c010943e:	e8 9d f8 ff ff       	call   c0108ce0 <lock_mm>$/;"	l
c0109443	obj/kernel.asm	/^c0109443:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109446	obj/kernel.asm	/^c0109446:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109449	obj/kernel.asm	/^c0109449:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010944c	obj/kernel.asm	/^c010944c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010944f	obj/kernel.asm	/^c010944f:	e8 f5 c2 ff ff       	call   c0105749 <dup_mmap>$/;"	l
c0109454	obj/kernel.asm	/^c0109454:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109457	obj/kernel.asm	/^c0109457:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010945a	obj/kernel.asm	/^c010945a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010945d	obj/kernel.asm	/^c010945d:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109460	obj/kernel.asm	/^c0109460:	e8 9b f8 ff ff       	call   c0108d00 <unlock_mm>$/;"	l
c0109465	obj/kernel.asm	/^c0109465:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109468	obj/kernel.asm	/^c0109468:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010946c	obj/kernel.asm	/^c010946c:	74 1f                	je     c010948d <copy_mm+0xbe>$/;"	l
c010946e	obj/kernel.asm	/^c010946e:	90                   	nop$/;"	l
c010946f	obj/kernel.asm	/^c010946f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109472	obj/kernel.asm	/^c0109472:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109475	obj/kernel.asm	/^c0109475:	e8 b6 c3 ff ff       	call   c0105830 <exit_mmap>$/;"	l
c010947a	obj/kernel.asm	/^c010947a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010947d	obj/kernel.asm	/^c010947d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109480	obj/kernel.asm	/^c0109480:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109483	obj/kernel.asm	/^c0109483:	e8 1f ff ff ff       	call   c01093a7 <put_pgdir>$/;"	l
c0109488	obj/kernel.asm	/^c0109488:	83 c4 10             	add    $0x10,%esp$/;"	l
c010948b	obj/kernel.asm	/^c010948b:	eb 56                	jmp    c01094e3 <copy_mm+0x114>$/;"	l
c010948d	obj/kernel.asm	/^c010948d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109490	obj/kernel.asm	/^c0109490:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109493	obj/kernel.asm	/^c0109493:	e8 14 f8 ff ff       	call   c0108cac <mm_count_inc>$/;"	l
c0109498	obj/kernel.asm	/^c0109498:	83 c4 10             	add    $0x10,%esp$/;"	l
c010949b	obj/kernel.asm	/^c010949b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010949e	obj/kernel.asm	/^c010949e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01094a1	obj/kernel.asm	/^c01094a1:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c01094a4	obj/kernel.asm	/^c01094a4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01094a7	obj/kernel.asm	/^c01094a7:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01094aa	obj/kernel.asm	/^c01094aa:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01094ad	obj/kernel.asm	/^c01094ad:	81 7d e8 ff ff ff bf 	cmpl   $0xbfffffff,-0x18(%ebp)$/;"	l
c01094b4	obj/kernel.asm	/^c01094b4:	77 17                	ja     c01094cd <copy_mm+0xfe>$/;"	l
c01094b6	obj/kernel.asm	/^c01094b6:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c01094b9	obj/kernel.asm	/^c01094b9:	68 f4 d4 10 c0       	push   $0xc010d4f4$/;"	l
c01094be	obj/kernel.asm	/^c01094be:	68 5d 01 00 00       	push   $0x15d$/;"	l
c01094c3	obj/kernel.asm	/^c01094c3:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c01094c8	obj/kernel.asm	/^c01094c8:	e8 0d 6f ff ff       	call   c01003da <__panic>$/;"	l
c01094cd	obj/kernel.asm	/^c01094cd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01094d0	obj/kernel.asm	/^c01094d0:	8d 90 00 00 00 40    	lea    0x40000000(%eax),%edx$/;"	l
c01094d6	obj/kernel.asm	/^c01094d6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01094d9	obj/kernel.asm	/^c01094d9:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c01094dc	obj/kernel.asm	/^c01094dc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01094e1	obj/kernel.asm	/^c01094e1:	eb 11                	jmp    c01094f4 <copy_mm+0x125>$/;"	l
c01094e3	obj/kernel.asm	/^c01094e3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01094e6	obj/kernel.asm	/^c01094e6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01094e9	obj/kernel.asm	/^c01094e9:	e8 b7 c0 ff ff       	call   c01055a5 <mm_destroy>$/;"	l
c01094ee	obj/kernel.asm	/^c01094ee:	83 c4 10             	add    $0x10,%esp$/;"	l
c01094f1	obj/kernel.asm	/^c01094f1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01094f4	obj/kernel.asm	/^c01094f4:	c9                   	leave  $/;"	l
c01094f5	obj/kernel.asm	/^c01094f5:	c3                   	ret    $/;"	l
c01094f6	obj/kernel.asm	/^c01094f6 <copy_thread>:$/;"	l
c01094f6	obj/kernel.asm	/^c01094f6:	55                   	push   %ebp$/;"	l
c01094f7	obj/kernel.asm	/^c01094f7:	89 e5                	mov    %esp,%ebp$/;"	l
c01094f9	obj/kernel.asm	/^c01094f9:	57                   	push   %edi$/;"	l
c01094fa	obj/kernel.asm	/^c01094fa:	56                   	push   %esi$/;"	l
c01094fb	obj/kernel.asm	/^c01094fb:	53                   	push   %ebx$/;"	l
c01094fc	obj/kernel.asm	/^c01094fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01094ff	obj/kernel.asm	/^c01094ff:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109502	obj/kernel.asm	/^c0109502:	05 b4 1f 00 00       	add    $0x1fb4,%eax$/;"	l
c0109507	obj/kernel.asm	/^c0109507:	89 c2                	mov    %eax,%edx$/;"	l
c0109509	obj/kernel.asm	/^c0109509:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010950c	obj/kernel.asm	/^c010950c:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c010950f	obj/kernel.asm	/^c010950f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109512	obj/kernel.asm	/^c0109512:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109515	obj/kernel.asm	/^c0109515:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0109518	obj/kernel.asm	/^c0109518:	89 d3                	mov    %edx,%ebx$/;"	l
c010951a	obj/kernel.asm	/^c010951a:	ba 4c 00 00 00       	mov    $0x4c,%edx$/;"	l
c010951f	obj/kernel.asm	/^c010951f:	8b 0b                	mov    (%ebx),%ecx$/;"	l
c0109521	obj/kernel.asm	/^c0109521:	89 08                	mov    %ecx,(%eax)$/;"	l
c0109523	obj/kernel.asm	/^c0109523:	8b 4c 13 fc          	mov    -0x4(%ebx,%edx,1),%ecx$/;"	l
c0109527	obj/kernel.asm	/^c0109527:	89 4c 10 fc          	mov    %ecx,-0x4(%eax,%edx,1)$/;"	l
c010952b	obj/kernel.asm	/^c010952b:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
c010952e	obj/kernel.asm	/^c010952e:	83 e7 fc             	and    $0xfffffffc,%edi$/;"	l
c0109531	obj/kernel.asm	/^c0109531:	29 f8                	sub    %edi,%eax$/;"	l
c0109533	obj/kernel.asm	/^c0109533:	29 c3                	sub    %eax,%ebx$/;"	l
c0109535	obj/kernel.asm	/^c0109535:	01 c2                	add    %eax,%edx$/;"	l
c0109537	obj/kernel.asm	/^c0109537:	83 e2 fc             	and    $0xfffffffc,%edx$/;"	l
c010953a	obj/kernel.asm	/^c010953a:	89 d0                	mov    %edx,%eax$/;"	l
c010953c	obj/kernel.asm	/^c010953c:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010953f	obj/kernel.asm	/^c010953f:	89 de                	mov    %ebx,%esi$/;"	l
c0109541	obj/kernel.asm	/^c0109541:	89 c1                	mov    %eax,%ecx$/;"	l
c0109543	obj/kernel.asm	/^c0109543:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c0109545	obj/kernel.asm	/^c0109545:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109548	obj/kernel.asm	/^c0109548:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010954b	obj/kernel.asm	/^c010954b:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
c0109552	obj/kernel.asm	/^c0109552:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109555	obj/kernel.asm	/^c0109555:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109558	obj/kernel.asm	/^c0109558:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010955b	obj/kernel.asm	/^c010955b:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010955e	obj/kernel.asm	/^c010955e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109561	obj/kernel.asm	/^c0109561:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109564	obj/kernel.asm	/^c0109564:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109567	obj/kernel.asm	/^c0109567:	8b 52 3c             	mov    0x3c(%edx),%edx$/;"	l
c010956a	obj/kernel.asm	/^c010956a:	8b 52 40             	mov    0x40(%edx),%edx$/;"	l
c010956d	obj/kernel.asm	/^c010956d:	80 ce 02             	or     $0x2,%dh$/;"	l
c0109570	obj/kernel.asm	/^c0109570:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c0109573	obj/kernel.asm	/^c0109573:	ba 09 91 10 c0       	mov    $0xc0109109,%edx$/;"	l
c0109578	obj/kernel.asm	/^c0109578:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010957b	obj/kernel.asm	/^c010957b:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010957e	obj/kernel.asm	/^c010957e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109581	obj/kernel.asm	/^c0109581:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109584	obj/kernel.asm	/^c0109584:	89 c2                	mov    %eax,%edx$/;"	l
c0109586	obj/kernel.asm	/^c0109586:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109589	obj/kernel.asm	/^c0109589:	89 50 20             	mov    %edx,0x20(%eax)$/;"	l
c010958c	obj/kernel.asm	/^c010958c:	5b                   	pop    %ebx$/;"	l
c010958d	obj/kernel.asm	/^c010958d:	5e                   	pop    %esi$/;"	l
c010958e	obj/kernel.asm	/^c010958e:	5f                   	pop    %edi$/;"	l
c010958f	obj/kernel.asm	/^c010958f:	5d                   	pop    %ebp$/;"	l
c0109590	obj/kernel.asm	/^c0109590:	c3                   	ret    $/;"	l
c0109591	obj/kernel.asm	/^c0109591 <do_fork>:$/;"	l
c0109591	obj/kernel.asm	/^c0109591:	55                   	push   %ebp$/;"	l
c0109592	obj/kernel.asm	/^c0109592:	89 e5                	mov    %esp,%ebp$/;"	l
c0109594	obj/kernel.asm	/^c0109594:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109597	obj/kernel.asm	/^c0109597:	c7 45 f4 fb ff ff ff 	movl   $0xfffffffb,-0xc(%ebp)$/;"	l
c010959e	obj/kernel.asm	/^c010959e:	a1 00 e0 19 c0       	mov    0xc019e000,%eax$/;"	l
c01095a3	obj/kernel.asm	/^c01095a3:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c01095a8	obj/kernel.asm	/^c01095a8:	7e 05                	jle    c01095af <do_fork+0x1e>$/;"	l
c01095aa	obj/kernel.asm	/^c01095aa:	e9 f0 00 00 00       	jmp    c010969f <do_fork+0x10e>$/;"	l
c01095af	obj/kernel.asm	/^c01095af:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c01095b6	obj/kernel.asm	/^c01095b6:	e8 65 f7 ff ff       	call   c0108d20 <alloc_proc>$/;"	l
c01095bb	obj/kernel.asm	/^c01095bb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01095be	obj/kernel.asm	/^c01095be:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01095c2	obj/kernel.asm	/^c01095c2:	75 05                	jne    c01095c9 <do_fork+0x38>$/;"	l
c01095c4	obj/kernel.asm	/^c01095c4:	e9 d6 00 00 00       	jmp    c010969f <do_fork+0x10e>$/;"	l
c01095c9	obj/kernel.asm	/^c01095c9:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c01095ce	obj/kernel.asm	/^c01095ce:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c01095d1	obj/kernel.asm	/^c01095d1:	85 c0                	test   %eax,%eax$/;"	l
c01095d3	obj/kernel.asm	/^c01095d3:	74 17                	je     c01095ec <do_fork+0x5b>$/;"	l
c01095d5	obj/kernel.asm	/^c01095d5:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01095d8	obj/kernel.asm	/^c01095d8:	68 2c d5 10 c0       	push   $0xc010d52c$/;"	l
c01095dd	obj/kernel.asm	/^c01095dd:	68 a2 01 00 00       	push   $0x1a2$/;"	l
c01095e2	obj/kernel.asm	/^c01095e2:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c01095e7	obj/kernel.asm	/^c01095e7:	e8 ee 6d ff ff       	call   c01003da <__panic>$/;"	l
c01095ec	obj/kernel.asm	/^c01095ec:	8b 15 c8 bf 19 c0    	mov    0xc019bfc8,%edx$/;"	l
c01095f2	obj/kernel.asm	/^c01095f2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01095f5	obj/kernel.asm	/^c01095f5:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c01095f8	obj/kernel.asm	/^c01095f8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01095fb	obj/kernel.asm	/^c01095fb:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01095fe	obj/kernel.asm	/^c01095fe:	e8 a3 fc ff ff       	call   c01092a6 <setup_kstack>$/;"	l
c0109603	obj/kernel.asm	/^c0109603:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109606	obj/kernel.asm	/^c0109606:	85 c0                	test   %eax,%eax$/;"	l
c0109608	obj/kernel.asm	/^c0109608:	74 05                	je     c010960f <do_fork+0x7e>$/;"	l
c010960a	obj/kernel.asm	/^c010960a:	e9 95 00 00 00       	jmp    c01096a4 <do_fork+0x113>$/;"	l
c010960f	obj/kernel.asm	/^c010960f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109612	obj/kernel.asm	/^c0109612:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109615	obj/kernel.asm	/^c0109615:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109618	obj/kernel.asm	/^c0109618:	e8 b2 fd ff ff       	call   c01093cf <copy_mm>$/;"	l
c010961d	obj/kernel.asm	/^c010961d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109620	obj/kernel.asm	/^c0109620:	85 c0                	test   %eax,%eax$/;"	l
c0109622	obj/kernel.asm	/^c0109622:	74 11                	je     c0109635 <do_fork+0xa4>$/;"	l
c0109624	obj/kernel.asm	/^c0109624:	90                   	nop$/;"	l
c0109625	obj/kernel.asm	/^c0109625:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109628	obj/kernel.asm	/^c0109628:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010962b	obj/kernel.asm	/^c010962b:	e8 b6 fc ff ff       	call   c01092e6 <put_kstack>$/;"	l
c0109630	obj/kernel.asm	/^c0109630:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109633	obj/kernel.asm	/^c0109633:	eb 6f                	jmp    c01096a4 <do_fork+0x113>$/;"	l
c0109635	obj/kernel.asm	/^c0109635:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109638	obj/kernel.asm	/^c0109638:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010963b	obj/kernel.asm	/^c010963b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010963e	obj/kernel.asm	/^c010963e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109641	obj/kernel.asm	/^c0109641:	e8 b0 fe ff ff       	call   c01094f6 <copy_thread>$/;"	l
c0109646	obj/kernel.asm	/^c0109646:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109649	obj/kernel.asm	/^c0109649:	e8 d2 f4 ff ff       	call   c0108b20 <__intr_save>$/;"	l
c010964e	obj/kernel.asm	/^c010964e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109651	obj/kernel.asm	/^c0109651:	e8 3e f9 ff ff       	call   c0108f94 <get_pid>$/;"	l
c0109656	obj/kernel.asm	/^c0109656:	89 c2                	mov    %eax,%edx$/;"	l
c0109658	obj/kernel.asm	/^c0109658:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010965b	obj/kernel.asm	/^c010965b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010965e	obj/kernel.asm	/^c010965e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109661	obj/kernel.asm	/^c0109661:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109664	obj/kernel.asm	/^c0109664:	e8 bc fa ff ff       	call   c0109125 <hash_proc>$/;"	l
c0109669	obj/kernel.asm	/^c0109669:	83 c4 10             	add    $0x10,%esp$/;"	l
c010966c	obj/kernel.asm	/^c010966c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010966f	obj/kernel.asm	/^c010966f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109672	obj/kernel.asm	/^c0109672:	e8 f5 f7 ff ff       	call   c0108e6c <set_links>$/;"	l
c0109677	obj/kernel.asm	/^c0109677:	83 c4 10             	add    $0x10,%esp$/;"	l
c010967a	obj/kernel.asm	/^c010967a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010967d	obj/kernel.asm	/^c010967d:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109680	obj/kernel.asm	/^c0109680:	e8 c5 f4 ff ff       	call   c0108b4a <__intr_restore>$/;"	l
c0109685	obj/kernel.asm	/^c0109685:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109688	obj/kernel.asm	/^c0109688:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010968b	obj/kernel.asm	/^c010968b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010968e	obj/kernel.asm	/^c010968e:	e8 b6 0e 00 00       	call   c010a549 <wakeup_proc>$/;"	l
c0109693	obj/kernel.asm	/^c0109693:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109696	obj/kernel.asm	/^c0109696:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109699	obj/kernel.asm	/^c0109699:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010969c	obj/kernel.asm	/^c010969c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010969f	obj/kernel.asm	/^c010969f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01096a2	obj/kernel.asm	/^c01096a2:	eb 10                	jmp    c01096b4 <do_fork+0x123>$/;"	l
c01096a4	obj/kernel.asm	/^c01096a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01096a7	obj/kernel.asm	/^c01096a7:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01096aa	obj/kernel.asm	/^c01096aa:	e8 1d dd ff ff       	call   c01073cc <kfree>$/;"	l
c01096af	obj/kernel.asm	/^c01096af:	83 c4 10             	add    $0x10,%esp$/;"	l
c01096b2	obj/kernel.asm	/^c01096b2:	eb eb                	jmp    c010969f <do_fork+0x10e>$/;"	l
c01096b4	obj/kernel.asm	/^c01096b4:	c9                   	leave  $/;"	l
c01096b5	obj/kernel.asm	/^c01096b5:	c3                   	ret    $/;"	l
c01096b6	obj/kernel.asm	/^c01096b6 <do_exit>:$/;"	l
c01096b6	obj/kernel.asm	/^c01096b6:	55                   	push   %ebp$/;"	l
c01096b7	obj/kernel.asm	/^c01096b7:	89 e5                	mov    %esp,%ebp$/;"	l
c01096b9	obj/kernel.asm	/^c01096b9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01096bc	obj/kernel.asm	/^c01096bc:	8b 15 c8 bf 19 c0    	mov    0xc019bfc8,%edx$/;"	l
c01096c2	obj/kernel.asm	/^c01096c2:	a1 c0 bf 19 c0       	mov    0xc019bfc0,%eax$/;"	l
c01096c7	obj/kernel.asm	/^c01096c7:	39 c2                	cmp    %eax,%edx$/;"	l
c01096c9	obj/kernel.asm	/^c01096c9:	75 17                	jne    c01096e2 <do_exit+0x2c>$/;"	l
c01096cb	obj/kernel.asm	/^c01096cb:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01096ce	obj/kernel.asm	/^c01096ce:	68 41 d5 10 c0       	push   $0xc010d541$/;"	l
c01096d3	obj/kernel.asm	/^c01096d3:	68 d4 01 00 00       	push   $0x1d4$/;"	l
c01096d8	obj/kernel.asm	/^c01096d8:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c01096dd	obj/kernel.asm	/^c01096dd:	e8 f8 6c ff ff       	call   c01003da <__panic>$/;"	l
c01096e2	obj/kernel.asm	/^c01096e2:	8b 15 c8 bf 19 c0    	mov    0xc019bfc8,%edx$/;"	l
c01096e8	obj/kernel.asm	/^c01096e8:	a1 c4 bf 19 c0       	mov    0xc019bfc4,%eax$/;"	l
c01096ed	obj/kernel.asm	/^c01096ed:	39 c2                	cmp    %eax,%edx$/;"	l
c01096ef	obj/kernel.asm	/^c01096ef:	75 17                	jne    c0109708 <do_exit+0x52>$/;"	l
c01096f1	obj/kernel.asm	/^c01096f1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01096f4	obj/kernel.asm	/^c01096f4:	68 51 d5 10 c0       	push   $0xc010d551$/;"	l
c01096f9	obj/kernel.asm	/^c01096f9:	68 d7 01 00 00       	push   $0x1d7$/;"	l
c01096fe	obj/kernel.asm	/^c01096fe:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c0109703	obj/kernel.asm	/^c0109703:	e8 d2 6c ff ff       	call   c01003da <__panic>$/;"	l
c0109708	obj/kernel.asm	/^c0109708:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010970d	obj/kernel.asm	/^c010970d:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109710	obj/kernel.asm	/^c0109710:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109713	obj/kernel.asm	/^c0109713:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109717	obj/kernel.asm	/^c0109717:	74 56                	je     c010976f <do_exit+0xb9>$/;"	l
c0109719	obj/kernel.asm	/^c0109719:	a1 94 e0 19 c0       	mov    0xc019e094,%eax$/;"	l
c010971e	obj/kernel.asm	/^c010971e:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109721	obj/kernel.asm	/^c0109721:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109724	obj/kernel.asm	/^c0109724:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0109727	obj/kernel.asm	/^c0109727:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010972a	obj/kernel.asm	/^c010972a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010972d	obj/kernel.asm	/^c010972d:	e8 94 f5 ff ff       	call   c0108cc6 <mm_count_dec>$/;"	l
c0109732	obj/kernel.asm	/^c0109732:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109735	obj/kernel.asm	/^c0109735:	85 c0                	test   %eax,%eax$/;"	l
c0109737	obj/kernel.asm	/^c0109737:	75 2a                	jne    c0109763 <do_exit+0xad>$/;"	l
c0109739	obj/kernel.asm	/^c0109739:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010973c	obj/kernel.asm	/^c010973c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010973f	obj/kernel.asm	/^c010973f:	e8 ec c0 ff ff       	call   c0105830 <exit_mmap>$/;"	l
c0109744	obj/kernel.asm	/^c0109744:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109747	obj/kernel.asm	/^c0109747:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010974a	obj/kernel.asm	/^c010974a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010974d	obj/kernel.asm	/^c010974d:	e8 55 fc ff ff       	call   c01093a7 <put_pgdir>$/;"	l
c0109752	obj/kernel.asm	/^c0109752:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109755	obj/kernel.asm	/^c0109755:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109758	obj/kernel.asm	/^c0109758:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010975b	obj/kernel.asm	/^c010975b:	e8 45 be ff ff       	call   c01055a5 <mm_destroy>$/;"	l
c0109760	obj/kernel.asm	/^c0109760:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109763	obj/kernel.asm	/^c0109763:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0109768	obj/kernel.asm	/^c0109768:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010976f	obj/kernel.asm	/^c010976f:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0109774	obj/kernel.asm	/^c0109774:	c7 00 03 00 00 00    	movl   $0x3,(%eax)$/;"	l
c010977a	obj/kernel.asm	/^c010977a:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010977f	obj/kernel.asm	/^c010977f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109782	obj/kernel.asm	/^c0109782:	89 50 68             	mov    %edx,0x68(%eax)$/;"	l
c0109785	obj/kernel.asm	/^c0109785:	e8 96 f3 ff ff       	call   c0108b20 <__intr_save>$/;"	l
c010978a	obj/kernel.asm	/^c010978a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010978d	obj/kernel.asm	/^c010978d:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0109792	obj/kernel.asm	/^c0109792:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0109795	obj/kernel.asm	/^c0109795:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109798	obj/kernel.asm	/^c0109798:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010979b	obj/kernel.asm	/^c010979b:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c010979e	obj/kernel.asm	/^c010979e:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c01097a3	obj/kernel.asm	/^c01097a3:	75 0e                	jne    c01097b3 <do_exit+0xfd>$/;"	l
c01097a5	obj/kernel.asm	/^c01097a5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01097a8	obj/kernel.asm	/^c01097a8:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01097ab	obj/kernel.asm	/^c01097ab:	e8 99 0d 00 00       	call   c010a549 <wakeup_proc>$/;"	l
c01097b0	obj/kernel.asm	/^c01097b0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01097b3	obj/kernel.asm	/^c01097b3:	e9 8a 00 00 00       	jmp    c0109842 <do_exit+0x18c>$/;"	l
c01097b8	obj/kernel.asm	/^c01097b8:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c01097bd	obj/kernel.asm	/^c01097bd:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c01097c0	obj/kernel.asm	/^c01097c0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01097c3	obj/kernel.asm	/^c01097c3:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c01097c8	obj/kernel.asm	/^c01097c8:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01097cb	obj/kernel.asm	/^c01097cb:	8b 52 78             	mov    0x78(%edx),%edx$/;"	l
c01097ce	obj/kernel.asm	/^c01097ce:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c01097d1	obj/kernel.asm	/^c01097d1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01097d4	obj/kernel.asm	/^c01097d4:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)$/;"	l
c01097db	obj/kernel.asm	/^c01097db:	a1 c4 bf 19 c0       	mov    0xc019bfc4,%eax$/;"	l
c01097e0	obj/kernel.asm	/^c01097e0:	8b 50 70             	mov    0x70(%eax),%edx$/;"	l
c01097e3	obj/kernel.asm	/^c01097e3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01097e6	obj/kernel.asm	/^c01097e6:	89 50 78             	mov    %edx,0x78(%eax)$/;"	l
c01097e9	obj/kernel.asm	/^c01097e9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01097ec	obj/kernel.asm	/^c01097ec:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c01097ef	obj/kernel.asm	/^c01097ef:	85 c0                	test   %eax,%eax$/;"	l
c01097f1	obj/kernel.asm	/^c01097f1:	74 0e                	je     c0109801 <do_exit+0x14b>$/;"	l
c01097f3	obj/kernel.asm	/^c01097f3:	a1 c4 bf 19 c0       	mov    0xc019bfc4,%eax$/;"	l
c01097f8	obj/kernel.asm	/^c01097f8:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c01097fb	obj/kernel.asm	/^c01097fb:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01097fe	obj/kernel.asm	/^c01097fe:	89 50 74             	mov    %edx,0x74(%eax)$/;"	l
c0109801	obj/kernel.asm	/^c0109801:	8b 15 c4 bf 19 c0    	mov    0xc019bfc4,%edx$/;"	l
c0109807	obj/kernel.asm	/^c0109807:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010980a	obj/kernel.asm	/^c010980a:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010980d	obj/kernel.asm	/^c010980d:	a1 c4 bf 19 c0       	mov    0xc019bfc4,%eax$/;"	l
c0109812	obj/kernel.asm	/^c0109812:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109815	obj/kernel.asm	/^c0109815:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c0109818	obj/kernel.asm	/^c0109818:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010981b	obj/kernel.asm	/^c010981b:	8b 00                	mov    (%eax),%eax$/;"	l
c010981d	obj/kernel.asm	/^c010981d:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0109820	obj/kernel.asm	/^c0109820:	75 20                	jne    c0109842 <do_exit+0x18c>$/;"	l
c0109822	obj/kernel.asm	/^c0109822:	a1 c4 bf 19 c0       	mov    0xc019bfc4,%eax$/;"	l
c0109827	obj/kernel.asm	/^c0109827:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c010982a	obj/kernel.asm	/^c010982a:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c010982f	obj/kernel.asm	/^c010982f:	75 11                	jne    c0109842 <do_exit+0x18c>$/;"	l
c0109831	obj/kernel.asm	/^c0109831:	a1 c4 bf 19 c0       	mov    0xc019bfc4,%eax$/;"	l
c0109836	obj/kernel.asm	/^c0109836:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109839	obj/kernel.asm	/^c0109839:	50                   	push   %eax$/;"	l
c010983a	obj/kernel.asm	/^c010983a:	e8 0a 0d 00 00       	call   c010a549 <wakeup_proc>$/;"	l
c010983f	obj/kernel.asm	/^c010983f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109842	obj/kernel.asm	/^c0109842:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0109847	obj/kernel.asm	/^c0109847:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c010984a	obj/kernel.asm	/^c010984a:	85 c0                	test   %eax,%eax$/;"	l
c010984c	obj/kernel.asm	/^c010984c:	0f 85 66 ff ff ff    	jne    c01097b8 <do_exit+0x102>$/;"	l
c0109852	obj/kernel.asm	/^c0109852:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109855	obj/kernel.asm	/^c0109855:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109858	obj/kernel.asm	/^c0109858:	e8 ed f2 ff ff       	call   c0108b4a <__intr_restore>$/;"	l
c010985d	obj/kernel.asm	/^c010985d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109860	obj/kernel.asm	/^c0109860:	e8 58 0d 00 00       	call   c010a5bd <schedule>$/;"	l
c0109865	obj/kernel.asm	/^c0109865:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010986a	obj/kernel.asm	/^c010986a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010986d	obj/kernel.asm	/^c010986d:	50                   	push   %eax$/;"	l
c010986e	obj/kernel.asm	/^c010986e:	68 64 d5 10 c0       	push   $0xc010d564$/;"	l
c0109873	obj/kernel.asm	/^c0109873:	68 03 02 00 00       	push   $0x203$/;"	l
c0109878	obj/kernel.asm	/^c0109878:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c010987d	obj/kernel.asm	/^c010987d:	e8 58 6b ff ff       	call   c01003da <__panic>$/;"	l
c0109882	obj/kernel.asm	/^c0109882 <load_icode>:$/;"	l
c0109882	obj/kernel.asm	/^c0109882:	55                   	push   %ebp$/;"	l
c0109883	obj/kernel.asm	/^c0109883:	89 e5                	mov    %esp,%ebp$/;"	l
c0109885	obj/kernel.asm	/^c0109885:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0109888	obj/kernel.asm	/^c0109888:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010988d	obj/kernel.asm	/^c010988d:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109890	obj/kernel.asm	/^c0109890:	85 c0                	test   %eax,%eax$/;"	l
c0109892	obj/kernel.asm	/^c0109892:	74 17                	je     c01098ab <load_icode+0x29>$/;"	l
c0109894	obj/kernel.asm	/^c0109894:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109897	obj/kernel.asm	/^c0109897:	68 84 d5 10 c0       	push   $0xc010d584$/;"	l
c010989c	obj/kernel.asm	/^c010989c:	68 0d 02 00 00       	push   $0x20d$/;"	l
c01098a1	obj/kernel.asm	/^c01098a1:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c01098a6	obj/kernel.asm	/^c01098a6:	e8 2f 6b ff ff       	call   c01003da <__panic>$/;"	l
c01098ab	obj/kernel.asm	/^c01098ab:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c01098b2	obj/kernel.asm	/^c01098b2:	e8 c7 b9 ff ff       	call   c010527e <mm_create>$/;"	l
c01098b7	obj/kernel.asm	/^c01098b7:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01098ba	obj/kernel.asm	/^c01098ba:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c01098be	obj/kernel.asm	/^c01098be:	75 06                	jne    c01098c6 <load_icode+0x44>$/;"	l
c01098c0	obj/kernel.asm	/^c01098c0:	90                   	nop$/;"	l
c01098c1	obj/kernel.asm	/^c01098c1:	e9 52 05 00 00       	jmp    c0109e18 <load_icode+0x596>$/;"	l
c01098c6	obj/kernel.asm	/^c01098c6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01098c9	obj/kernel.asm	/^c01098c9:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c01098cc	obj/kernel.asm	/^c01098cc:	e8 3d fa ff ff       	call   c010930e <setup_pgdir>$/;"	l
c01098d1	obj/kernel.asm	/^c01098d1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01098d4	obj/kernel.asm	/^c01098d4:	85 c0                	test   %eax,%eax$/;"	l
c01098d6	obj/kernel.asm	/^c01098d6:	74 05                	je     c01098dd <load_icode+0x5b>$/;"	l
c01098d8	obj/kernel.asm	/^c01098d8:	e9 5c 05 00 00       	jmp    c0109e39 <load_icode+0x5b7>$/;"	l
c01098dd	obj/kernel.asm	/^c01098dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01098e0	obj/kernel.asm	/^c01098e0:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01098e3	obj/kernel.asm	/^c01098e3:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01098e6	obj/kernel.asm	/^c01098e6:	8b 50 1c             	mov    0x1c(%eax),%edx$/;"	l
c01098e9	obj/kernel.asm	/^c01098e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01098ec	obj/kernel.asm	/^c01098ec:	01 d0                	add    %edx,%eax$/;"	l
c01098ee	obj/kernel.asm	/^c01098ee:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01098f1	obj/kernel.asm	/^c01098f1:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01098f4	obj/kernel.asm	/^c01098f4:	8b 00                	mov    (%eax),%eax$/;"	l
c01098f6	obj/kernel.asm	/^c01098f6:	3d 7f 45 4c 46       	cmp    $0x464c457f,%eax$/;"	l
c01098fb	obj/kernel.asm	/^c01098fb:	74 0c                	je     c0109909 <load_icode+0x87>$/;"	l
c01098fd	obj/kernel.asm	/^c01098fd:	c7 45 f4 f8 ff ff ff 	movl   $0xfffffff8,-0xc(%ebp)$/;"	l
c0109904	obj/kernel.asm	/^c0109904:	e9 22 05 00 00       	jmp    c0109e2b <load_icode+0x5a9>$/;"	l
c0109909	obj/kernel.asm	/^c0109909:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010990c	obj/kernel.asm	/^c010990c:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c0109910	obj/kernel.asm	/^c0109910:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0109913	obj/kernel.asm	/^c0109913:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0109916	obj/kernel.asm	/^c0109916:	89 c2                	mov    %eax,%edx$/;"	l
c0109918	obj/kernel.asm	/^c0109918:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010991b	obj/kernel.asm	/^c010991b:	01 d0                	add    %edx,%eax$/;"	l
c010991d	obj/kernel.asm	/^c010991d:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0109920	obj/kernel.asm	/^c0109920:	e9 d7 02 00 00       	jmp    c0109bfc <load_icode+0x37a>$/;"	l
c0109925	obj/kernel.asm	/^c0109925:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109928	obj/kernel.asm	/^c0109928:	8b 00                	mov    (%eax),%eax$/;"	l
c010992a	obj/kernel.asm	/^c010992a:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010992d	obj/kernel.asm	/^c010992d:	74 05                	je     c0109934 <load_icode+0xb2>$/;"	l
c010992f	obj/kernel.asm	/^c010992f:	e9 c4 02 00 00       	jmp    c0109bf8 <load_icode+0x376>$/;"	l
c0109934	obj/kernel.asm	/^c0109934:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109937	obj/kernel.asm	/^c0109937:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010993a	obj/kernel.asm	/^c010993a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010993d	obj/kernel.asm	/^c010993d:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0109940	obj/kernel.asm	/^c0109940:	39 c2                	cmp    %eax,%edx$/;"	l
c0109942	obj/kernel.asm	/^c0109942:	76 0c                	jbe    c0109950 <load_icode+0xce>$/;"	l
c0109944	obj/kernel.asm	/^c0109944:	c7 45 f4 f8 ff ff ff 	movl   $0xfffffff8,-0xc(%ebp)$/;"	l
c010994b	obj/kernel.asm	/^c010994b:	e9 cd 04 00 00       	jmp    c0109e1d <load_icode+0x59b>$/;"	l
c0109950	obj/kernel.asm	/^c0109950:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109953	obj/kernel.asm	/^c0109953:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109956	obj/kernel.asm	/^c0109956:	85 c0                	test   %eax,%eax$/;"	l
c0109958	obj/kernel.asm	/^c0109958:	75 05                	jne    c010995f <load_icode+0xdd>$/;"	l
c010995a	obj/kernel.asm	/^c010995a:	e9 99 02 00 00       	jmp    c0109bf8 <load_icode+0x376>$/;"	l
c010995f	obj/kernel.asm	/^c010995f:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0109966	obj/kernel.asm	/^c0109966:	c7 45 e4 04 00 00 00 	movl   $0x4,-0x1c(%ebp)$/;"	l
c010996d	obj/kernel.asm	/^c010996d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109970	obj/kernel.asm	/^c0109970:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109973	obj/kernel.asm	/^c0109973:	83 e0 01             	and    $0x1,%eax$/;"	l
c0109976	obj/kernel.asm	/^c0109976:	85 c0                	test   %eax,%eax$/;"	l
c0109978	obj/kernel.asm	/^c0109978:	74 04                	je     c010997e <load_icode+0xfc>$/;"	l
c010997a	obj/kernel.asm	/^c010997a:	83 4d e8 04          	orl    $0x4,-0x18(%ebp)$/;"	l
c010997e	obj/kernel.asm	/^c010997e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109981	obj/kernel.asm	/^c0109981:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109984	obj/kernel.asm	/^c0109984:	83 e0 02             	and    $0x2,%eax$/;"	l
c0109987	obj/kernel.asm	/^c0109987:	85 c0                	test   %eax,%eax$/;"	l
c0109989	obj/kernel.asm	/^c0109989:	74 04                	je     c010998f <load_icode+0x10d>$/;"	l
c010998b	obj/kernel.asm	/^c010998b:	83 4d e8 02          	orl    $0x2,-0x18(%ebp)$/;"	l
c010998f	obj/kernel.asm	/^c010998f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109992	obj/kernel.asm	/^c0109992:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109995	obj/kernel.asm	/^c0109995:	83 e0 04             	and    $0x4,%eax$/;"	l
c0109998	obj/kernel.asm	/^c0109998:	85 c0                	test   %eax,%eax$/;"	l
c010999a	obj/kernel.asm	/^c010999a:	74 04                	je     c01099a0 <load_icode+0x11e>$/;"	l
c010999c	obj/kernel.asm	/^c010999c:	83 4d e8 01          	orl    $0x1,-0x18(%ebp)$/;"	l
c01099a0	obj/kernel.asm	/^c01099a0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01099a3	obj/kernel.asm	/^c01099a3:	83 e0 02             	and    $0x2,%eax$/;"	l
c01099a6	obj/kernel.asm	/^c01099a6:	85 c0                	test   %eax,%eax$/;"	l
c01099a8	obj/kernel.asm	/^c01099a8:	74 04                	je     c01099ae <load_icode+0x12c>$/;"	l
c01099aa	obj/kernel.asm	/^c01099aa:	83 4d e4 02          	orl    $0x2,-0x1c(%ebp)$/;"	l
c01099ae	obj/kernel.asm	/^c01099ae:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01099b1	obj/kernel.asm	/^c01099b1:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c01099b4	obj/kernel.asm	/^c01099b4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01099b7	obj/kernel.asm	/^c01099b7:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01099ba	obj/kernel.asm	/^c01099ba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01099bd	obj/kernel.asm	/^c01099bd:	6a 00                	push   $0x0$/;"	l
c01099bf	obj/kernel.asm	/^c01099bf:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c01099c2	obj/kernel.asm	/^c01099c2:	52                   	push   %edx$/;"	l
c01099c3	obj/kernel.asm	/^c01099c3:	50                   	push   %eax$/;"	l
c01099c4	obj/kernel.asm	/^c01099c4:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c01099c7	obj/kernel.asm	/^c01099c7:	e8 77 bc ff ff       	call   c0105643 <mm_map>$/;"	l
c01099cc	obj/kernel.asm	/^c01099cc:	83 c4 20             	add    $0x20,%esp$/;"	l
c01099cf	obj/kernel.asm	/^c01099cf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01099d2	obj/kernel.asm	/^c01099d2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01099d6	obj/kernel.asm	/^c01099d6:	74 05                	je     c01099dd <load_icode+0x15b>$/;"	l
c01099d8	obj/kernel.asm	/^c01099d8:	e9 40 04 00 00       	jmp    c0109e1d <load_icode+0x59b>$/;"	l
c01099dd	obj/kernel.asm	/^c01099dd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01099e0	obj/kernel.asm	/^c01099e0:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01099e3	obj/kernel.asm	/^c01099e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099e6	obj/kernel.asm	/^c01099e6:	01 d0                	add    %edx,%eax$/;"	l
c01099e8	obj/kernel.asm	/^c01099e8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01099eb	obj/kernel.asm	/^c01099eb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01099ee	obj/kernel.asm	/^c01099ee:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01099f1	obj/kernel.asm	/^c01099f1:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01099f4	obj/kernel.asm	/^c01099f4:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01099f7	obj/kernel.asm	/^c01099f7:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c01099fa	obj/kernel.asm	/^c01099fa:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c01099fd	obj/kernel.asm	/^c01099fd:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0109a02	obj/kernel.asm	/^c0109a02:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0109a05	obj/kernel.asm	/^c0109a05:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0109a0c	obj/kernel.asm	/^c0109a0c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109a0f	obj/kernel.asm	/^c0109a0f:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0109a12	obj/kernel.asm	/^c0109a12:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109a15	obj/kernel.asm	/^c0109a15:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109a18	obj/kernel.asm	/^c0109a18:	01 d0                	add    %edx,%eax$/;"	l
c0109a1a	obj/kernel.asm	/^c0109a1a:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0109a1d	obj/kernel.asm	/^c0109a1d:	e9 85 00 00 00       	jmp    c0109aa7 <load_icode+0x225>$/;"	l
c0109a22	obj/kernel.asm	/^c0109a22:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109a25	obj/kernel.asm	/^c0109a25:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109a28	obj/kernel.asm	/^c0109a28:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109a2b	obj/kernel.asm	/^c0109a2b:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0109a2e	obj/kernel.asm	/^c0109a2e:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
c0109a31	obj/kernel.asm	/^c0109a31:	50                   	push   %eax$/;"	l
c0109a32	obj/kernel.asm	/^c0109a32:	e8 57 ac ff ff       	call   c010468e <pgdir_alloc_page>$/;"	l
c0109a37	obj/kernel.asm	/^c0109a37:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109a3a	obj/kernel.asm	/^c0109a3a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109a3d	obj/kernel.asm	/^c0109a3d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109a41	obj/kernel.asm	/^c0109a41:	75 05                	jne    c0109a48 <load_icode+0x1c6>$/;"	l
c0109a43	obj/kernel.asm	/^c0109a43:	e9 d5 03 00 00       	jmp    c0109e1d <load_icode+0x59b>$/;"	l
c0109a48	obj/kernel.asm	/^c0109a48:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109a4b	obj/kernel.asm	/^c0109a4b:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c0109a4e	obj/kernel.asm	/^c0109a4e:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0109a51	obj/kernel.asm	/^c0109a51:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0109a56	obj/kernel.asm	/^c0109a56:	2b 45 bc             	sub    -0x44(%ebp),%eax$/;"	l
c0109a59	obj/kernel.asm	/^c0109a59:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0109a5c	obj/kernel.asm	/^c0109a5c:	81 45 d4 00 10 00 00 	addl   $0x1000,-0x2c(%ebp)$/;"	l
c0109a63	obj/kernel.asm	/^c0109a63:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0109a66	obj/kernel.asm	/^c0109a66:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0109a69	obj/kernel.asm	/^c0109a69:	73 09                	jae    c0109a74 <load_icode+0x1f2>$/;"	l
c0109a6b	obj/kernel.asm	/^c0109a6b:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0109a6e	obj/kernel.asm	/^c0109a6e:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c0109a71	obj/kernel.asm	/^c0109a71:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c0109a74	obj/kernel.asm	/^c0109a74:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109a77	obj/kernel.asm	/^c0109a77:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109a7a	obj/kernel.asm	/^c0109a7a:	e8 a9 f1 ff ff       	call   c0108c28 <page2kva>$/;"	l
c0109a7f	obj/kernel.asm	/^c0109a7f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109a82	obj/kernel.asm	/^c0109a82:	89 c2                	mov    %eax,%edx$/;"	l
c0109a84	obj/kernel.asm	/^c0109a84:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0109a87	obj/kernel.asm	/^c0109a87:	01 d0                	add    %edx,%eax$/;"	l
c0109a89	obj/kernel.asm	/^c0109a89:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109a8c	obj/kernel.asm	/^c0109a8c:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0109a8f	obj/kernel.asm	/^c0109a8f:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0109a92	obj/kernel.asm	/^c0109a92:	50                   	push   %eax$/;"	l
c0109a93	obj/kernel.asm	/^c0109a93:	e8 e7 11 00 00       	call   c010ac7f <memcpy>$/;"	l
c0109a98	obj/kernel.asm	/^c0109a98:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109a9b	obj/kernel.asm	/^c0109a9b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0109a9e	obj/kernel.asm	/^c0109a9e:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c0109aa1	obj/kernel.asm	/^c0109aa1:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0109aa4	obj/kernel.asm	/^c0109aa4:	01 45 e0             	add    %eax,-0x20(%ebp)$/;"	l
c0109aa7	obj/kernel.asm	/^c0109aa7:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109aaa	obj/kernel.asm	/^c0109aaa:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c0109aad	obj/kernel.asm	/^c0109aad:	0f 82 6f ff ff ff    	jb     c0109a22 <load_icode+0x1a0>$/;"	l
c0109ab3	obj/kernel.asm	/^c0109ab3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109ab6	obj/kernel.asm	/^c0109ab6:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0109ab9	obj/kernel.asm	/^c0109ab9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109abc	obj/kernel.asm	/^c0109abc:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0109abf	obj/kernel.asm	/^c0109abf:	01 d0                	add    %edx,%eax$/;"	l
c0109ac1	obj/kernel.asm	/^c0109ac1:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0109ac4	obj/kernel.asm	/^c0109ac4:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109ac7	obj/kernel.asm	/^c0109ac7:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0109aca	obj/kernel.asm	/^c0109aca:	0f 83 9c 00 00 00    	jae    c0109b6c <load_icode+0x2ea>$/;"	l
c0109ad0	obj/kernel.asm	/^c0109ad0:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109ad3	obj/kernel.asm	/^c0109ad3:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c0109ad6	obj/kernel.asm	/^c0109ad6:	75 05                	jne    c0109add <load_icode+0x25b>$/;"	l
c0109ad8	obj/kernel.asm	/^c0109ad8:	e9 1b 01 00 00       	jmp    c0109bf8 <load_icode+0x376>$/;"	l
c0109add	obj/kernel.asm	/^c0109add:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109ae0	obj/kernel.asm	/^c0109ae0:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c0109ae3	obj/kernel.asm	/^c0109ae3:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c0109ae8	obj/kernel.asm	/^c0109ae8:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0109aeb	obj/kernel.asm	/^c0109aeb:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0109af0	obj/kernel.asm	/^c0109af0:	2b 45 bc             	sub    -0x44(%ebp),%eax$/;"	l
c0109af3	obj/kernel.asm	/^c0109af3:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0109af6	obj/kernel.asm	/^c0109af6:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0109af9	obj/kernel.asm	/^c0109af9:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0109afc	obj/kernel.asm	/^c0109afc:	73 09                	jae    c0109b07 <load_icode+0x285>$/;"	l
c0109afe	obj/kernel.asm	/^c0109afe:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0109b01	obj/kernel.asm	/^c0109b01:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c0109b04	obj/kernel.asm	/^c0109b04:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c0109b07	obj/kernel.asm	/^c0109b07:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109b0a	obj/kernel.asm	/^c0109b0a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109b0d	obj/kernel.asm	/^c0109b0d:	e8 16 f1 ff ff       	call   c0108c28 <page2kva>$/;"	l
c0109b12	obj/kernel.asm	/^c0109b12:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109b15	obj/kernel.asm	/^c0109b15:	89 c2                	mov    %eax,%edx$/;"	l
c0109b17	obj/kernel.asm	/^c0109b17:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0109b1a	obj/kernel.asm	/^c0109b1a:	01 d0                	add    %edx,%eax$/;"	l
c0109b1c	obj/kernel.asm	/^c0109b1c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109b1f	obj/kernel.asm	/^c0109b1f:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0109b22	obj/kernel.asm	/^c0109b22:	6a 00                	push   $0x0$/;"	l
c0109b24	obj/kernel.asm	/^c0109b24:	50                   	push   %eax$/;"	l
c0109b25	obj/kernel.asm	/^c0109b25:	e8 72 10 00 00       	call   c010ab9c <memset>$/;"	l
c0109b2a	obj/kernel.asm	/^c0109b2a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109b2d	obj/kernel.asm	/^c0109b2d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0109b30	obj/kernel.asm	/^c0109b30:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c0109b33	obj/kernel.asm	/^c0109b33:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0109b36	obj/kernel.asm	/^c0109b36:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0109b39	obj/kernel.asm	/^c0109b39:	73 08                	jae    c0109b43 <load_icode+0x2c1>$/;"	l
c0109b3b	obj/kernel.asm	/^c0109b3b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109b3e	obj/kernel.asm	/^c0109b3e:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c0109b41	obj/kernel.asm	/^c0109b41:	74 29                	je     c0109b6c <load_icode+0x2ea>$/;"	l
c0109b43	obj/kernel.asm	/^c0109b43:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0109b46	obj/kernel.asm	/^c0109b46:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0109b49	obj/kernel.asm	/^c0109b49:	72 08                	jb     c0109b53 <load_icode+0x2d1>$/;"	l
c0109b4b	obj/kernel.asm	/^c0109b4b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109b4e	obj/kernel.asm	/^c0109b4e:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0109b51	obj/kernel.asm	/^c0109b51:	74 19                	je     c0109b6c <load_icode+0x2ea>$/;"	l
c0109b53	obj/kernel.asm	/^c0109b53:	68 ac d5 10 c0       	push   $0xc010d5ac$/;"	l
c0109b58	obj/kernel.asm	/^c0109b58:	68 e5 d5 10 c0       	push   $0xc010d5e5$/;"	l
c0109b5d	obj/kernel.asm	/^c0109b5d:	68 5f 02 00 00       	push   $0x25f$/;"	l
c0109b62	obj/kernel.asm	/^c0109b62:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c0109b67	obj/kernel.asm	/^c0109b67:	e8 6e 68 ff ff       	call   c01003da <__panic>$/;"	l
c0109b6c	obj/kernel.asm	/^c0109b6c:	eb 7e                	jmp    c0109bec <load_icode+0x36a>$/;"	l
c0109b6e	obj/kernel.asm	/^c0109b6e:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109b71	obj/kernel.asm	/^c0109b71:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109b74	obj/kernel.asm	/^c0109b74:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109b77	obj/kernel.asm	/^c0109b77:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0109b7a	obj/kernel.asm	/^c0109b7a:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
c0109b7d	obj/kernel.asm	/^c0109b7d:	50                   	push   %eax$/;"	l
c0109b7e	obj/kernel.asm	/^c0109b7e:	e8 0b ab ff ff       	call   c010468e <pgdir_alloc_page>$/;"	l
c0109b83	obj/kernel.asm	/^c0109b83:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109b86	obj/kernel.asm	/^c0109b86:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109b89	obj/kernel.asm	/^c0109b89:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109b8d	obj/kernel.asm	/^c0109b8d:	75 05                	jne    c0109b94 <load_icode+0x312>$/;"	l
c0109b8f	obj/kernel.asm	/^c0109b8f:	e9 89 02 00 00       	jmp    c0109e1d <load_icode+0x59b>$/;"	l
c0109b94	obj/kernel.asm	/^c0109b94:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109b97	obj/kernel.asm	/^c0109b97:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c0109b9a	obj/kernel.asm	/^c0109b9a:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0109b9d	obj/kernel.asm	/^c0109b9d:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0109ba2	obj/kernel.asm	/^c0109ba2:	2b 45 bc             	sub    -0x44(%ebp),%eax$/;"	l
c0109ba5	obj/kernel.asm	/^c0109ba5:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0109ba8	obj/kernel.asm	/^c0109ba8:	81 45 d4 00 10 00 00 	addl   $0x1000,-0x2c(%ebp)$/;"	l
c0109baf	obj/kernel.asm	/^c0109baf:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0109bb2	obj/kernel.asm	/^c0109bb2:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0109bb5	obj/kernel.asm	/^c0109bb5:	73 09                	jae    c0109bc0 <load_icode+0x33e>$/;"	l
c0109bb7	obj/kernel.asm	/^c0109bb7:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0109bba	obj/kernel.asm	/^c0109bba:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c0109bbd	obj/kernel.asm	/^c0109bbd:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c0109bc0	obj/kernel.asm	/^c0109bc0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109bc3	obj/kernel.asm	/^c0109bc3:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109bc6	obj/kernel.asm	/^c0109bc6:	e8 5d f0 ff ff       	call   c0108c28 <page2kva>$/;"	l
c0109bcb	obj/kernel.asm	/^c0109bcb:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109bce	obj/kernel.asm	/^c0109bce:	89 c2                	mov    %eax,%edx$/;"	l
c0109bd0	obj/kernel.asm	/^c0109bd0:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0109bd3	obj/kernel.asm	/^c0109bd3:	01 d0                	add    %edx,%eax$/;"	l
c0109bd5	obj/kernel.asm	/^c0109bd5:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109bd8	obj/kernel.asm	/^c0109bd8:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0109bdb	obj/kernel.asm	/^c0109bdb:	6a 00                	push   $0x0$/;"	l
c0109bdd	obj/kernel.asm	/^c0109bdd:	50                   	push   %eax$/;"	l
c0109bde	obj/kernel.asm	/^c0109bde:	e8 b9 0f 00 00       	call   c010ab9c <memset>$/;"	l
c0109be3	obj/kernel.asm	/^c0109be3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109be6	obj/kernel.asm	/^c0109be6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0109be9	obj/kernel.asm	/^c0109be9:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c0109bec	obj/kernel.asm	/^c0109bec:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109bef	obj/kernel.asm	/^c0109bef:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c0109bf2	obj/kernel.asm	/^c0109bf2:	0f 82 76 ff ff ff    	jb     c0109b6e <load_icode+0x2ec>$/;"	l
c0109bf8	obj/kernel.asm	/^c0109bf8:	83 45 ec 20          	addl   $0x20,-0x14(%ebp)$/;"	l
c0109bfc	obj/kernel.asm	/^c0109bfc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109bff	obj/kernel.asm	/^c0109bff:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0109c02	obj/kernel.asm	/^c0109c02:	0f 82 1d fd ff ff    	jb     c0109925 <load_icode+0xa3>$/;"	l
c0109c08	obj/kernel.asm	/^c0109c08:	c7 45 e8 0b 00 00 00 	movl   $0xb,-0x18(%ebp)$/;"	l
c0109c0f	obj/kernel.asm	/^c0109c0f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109c12	obj/kernel.asm	/^c0109c12:	6a 00                	push   $0x0$/;"	l
c0109c14	obj/kernel.asm	/^c0109c14:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0109c17	obj/kernel.asm	/^c0109c17:	68 00 00 10 00       	push   $0x100000$/;"	l
c0109c1c	obj/kernel.asm	/^c0109c1c:	68 00 00 f0 af       	push   $0xaff00000$/;"	l
c0109c21	obj/kernel.asm	/^c0109c21:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c0109c24	obj/kernel.asm	/^c0109c24:	e8 1a ba ff ff       	call   c0105643 <mm_map>$/;"	l
c0109c29	obj/kernel.asm	/^c0109c29:	83 c4 20             	add    $0x20,%esp$/;"	l
c0109c2c	obj/kernel.asm	/^c0109c2c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109c2f	obj/kernel.asm	/^c0109c2f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109c33	obj/kernel.asm	/^c0109c33:	74 05                	je     c0109c3a <load_icode+0x3b8>$/;"	l
c0109c35	obj/kernel.asm	/^c0109c35:	e9 e3 01 00 00       	jmp    c0109e1d <load_icode+0x59b>$/;"	l
c0109c3a	obj/kernel.asm	/^c0109c3a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109c3d	obj/kernel.asm	/^c0109c3d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109c40	obj/kernel.asm	/^c0109c40:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109c43	obj/kernel.asm	/^c0109c43:	6a 07                	push   $0x7$/;"	l
c0109c45	obj/kernel.asm	/^c0109c45:	68 00 f0 ff af       	push   $0xaffff000$/;"	l
c0109c4a	obj/kernel.asm	/^c0109c4a:	50                   	push   %eax$/;"	l
c0109c4b	obj/kernel.asm	/^c0109c4b:	e8 3e aa ff ff       	call   c010468e <pgdir_alloc_page>$/;"	l
c0109c50	obj/kernel.asm	/^c0109c50:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109c53	obj/kernel.asm	/^c0109c53:	85 c0                	test   %eax,%eax$/;"	l
c0109c55	obj/kernel.asm	/^c0109c55:	75 19                	jne    c0109c70 <load_icode+0x3ee>$/;"	l
c0109c57	obj/kernel.asm	/^c0109c57:	68 fc d5 10 c0       	push   $0xc010d5fc$/;"	l
c0109c5c	obj/kernel.asm	/^c0109c5c:	68 e5 d5 10 c0       	push   $0xc010d5e5$/;"	l
c0109c61	obj/kernel.asm	/^c0109c61:	68 72 02 00 00       	push   $0x272$/;"	l
c0109c66	obj/kernel.asm	/^c0109c66:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c0109c6b	obj/kernel.asm	/^c0109c6b:	e8 6a 67 ff ff       	call   c01003da <__panic>$/;"	l
c0109c70	obj/kernel.asm	/^c0109c70:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109c73	obj/kernel.asm	/^c0109c73:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109c76	obj/kernel.asm	/^c0109c76:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109c79	obj/kernel.asm	/^c0109c79:	6a 07                	push   $0x7$/;"	l
c0109c7b	obj/kernel.asm	/^c0109c7b:	68 00 e0 ff af       	push   $0xafffe000$/;"	l
c0109c80	obj/kernel.asm	/^c0109c80:	50                   	push   %eax$/;"	l
c0109c81	obj/kernel.asm	/^c0109c81:	e8 08 aa ff ff       	call   c010468e <pgdir_alloc_page>$/;"	l
c0109c86	obj/kernel.asm	/^c0109c86:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109c89	obj/kernel.asm	/^c0109c89:	85 c0                	test   %eax,%eax$/;"	l
c0109c8b	obj/kernel.asm	/^c0109c8b:	75 19                	jne    c0109ca6 <load_icode+0x424>$/;"	l
c0109c8d	obj/kernel.asm	/^c0109c8d:	68 40 d6 10 c0       	push   $0xc010d640$/;"	l
c0109c92	obj/kernel.asm	/^c0109c92:	68 e5 d5 10 c0       	push   $0xc010d5e5$/;"	l
c0109c97	obj/kernel.asm	/^c0109c97:	68 73 02 00 00       	push   $0x273$/;"	l
c0109c9c	obj/kernel.asm	/^c0109c9c:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c0109ca1	obj/kernel.asm	/^c0109ca1:	e8 34 67 ff ff       	call   c01003da <__panic>$/;"	l
c0109ca6	obj/kernel.asm	/^c0109ca6:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109ca9	obj/kernel.asm	/^c0109ca9:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109cac	obj/kernel.asm	/^c0109cac:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109caf	obj/kernel.asm	/^c0109caf:	6a 07                	push   $0x7$/;"	l
c0109cb1	obj/kernel.asm	/^c0109cb1:	68 00 d0 ff af       	push   $0xafffd000$/;"	l
c0109cb6	obj/kernel.asm	/^c0109cb6:	50                   	push   %eax$/;"	l
c0109cb7	obj/kernel.asm	/^c0109cb7:	e8 d2 a9 ff ff       	call   c010468e <pgdir_alloc_page>$/;"	l
c0109cbc	obj/kernel.asm	/^c0109cbc:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109cbf	obj/kernel.asm	/^c0109cbf:	85 c0                	test   %eax,%eax$/;"	l
c0109cc1	obj/kernel.asm	/^c0109cc1:	75 19                	jne    c0109cdc <load_icode+0x45a>$/;"	l
c0109cc3	obj/kernel.asm	/^c0109cc3:	68 84 d6 10 c0       	push   $0xc010d684$/;"	l
c0109cc8	obj/kernel.asm	/^c0109cc8:	68 e5 d5 10 c0       	push   $0xc010d5e5$/;"	l
c0109ccd	obj/kernel.asm	/^c0109ccd:	68 74 02 00 00       	push   $0x274$/;"	l
c0109cd2	obj/kernel.asm	/^c0109cd2:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c0109cd7	obj/kernel.asm	/^c0109cd7:	e8 fe 66 ff ff       	call   c01003da <__panic>$/;"	l
c0109cdc	obj/kernel.asm	/^c0109cdc:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109cdf	obj/kernel.asm	/^c0109cdf:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109ce2	obj/kernel.asm	/^c0109ce2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109ce5	obj/kernel.asm	/^c0109ce5:	6a 07                	push   $0x7$/;"	l
c0109ce7	obj/kernel.asm	/^c0109ce7:	68 00 c0 ff af       	push   $0xafffc000$/;"	l
c0109cec	obj/kernel.asm	/^c0109cec:	50                   	push   %eax$/;"	l
c0109ced	obj/kernel.asm	/^c0109ced:	e8 9c a9 ff ff       	call   c010468e <pgdir_alloc_page>$/;"	l
c0109cf2	obj/kernel.asm	/^c0109cf2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109cf5	obj/kernel.asm	/^c0109cf5:	85 c0                	test   %eax,%eax$/;"	l
c0109cf7	obj/kernel.asm	/^c0109cf7:	75 19                	jne    c0109d12 <load_icode+0x490>$/;"	l
c0109cf9	obj/kernel.asm	/^c0109cf9:	68 c8 d6 10 c0       	push   $0xc010d6c8$/;"	l
c0109cfe	obj/kernel.asm	/^c0109cfe:	68 e5 d5 10 c0       	push   $0xc010d5e5$/;"	l
c0109d03	obj/kernel.asm	/^c0109d03:	68 75 02 00 00       	push   $0x275$/;"	l
c0109d08	obj/kernel.asm	/^c0109d08:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c0109d0d	obj/kernel.asm	/^c0109d0d:	e8 c8 66 ff ff       	call   c01003da <__panic>$/;"	l
c0109d12	obj/kernel.asm	/^c0109d12:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109d15	obj/kernel.asm	/^c0109d15:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c0109d18	obj/kernel.asm	/^c0109d18:	e8 8f ef ff ff       	call   c0108cac <mm_count_inc>$/;"	l
c0109d1d	obj/kernel.asm	/^c0109d1d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109d20	obj/kernel.asm	/^c0109d20:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0109d25	obj/kernel.asm	/^c0109d25:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0109d28	obj/kernel.asm	/^c0109d28:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0109d2b	obj/kernel.asm	/^c0109d2b:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0109d30	obj/kernel.asm	/^c0109d30:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0109d33	obj/kernel.asm	/^c0109d33:	8b 52 0c             	mov    0xc(%edx),%edx$/;"	l
c0109d36	obj/kernel.asm	/^c0109d36:	89 55 b8             	mov    %edx,-0x48(%ebp)$/;"	l
c0109d39	obj/kernel.asm	/^c0109d39:	81 7d b8 ff ff ff bf 	cmpl   $0xbfffffff,-0x48(%ebp)$/;"	l
c0109d40	obj/kernel.asm	/^c0109d40:	77 17                	ja     c0109d59 <load_icode+0x4d7>$/;"	l
c0109d42	obj/kernel.asm	/^c0109d42:	ff 75 b8             	pushl  -0x48(%ebp)$/;"	l
c0109d45	obj/kernel.asm	/^c0109d45:	68 f4 d4 10 c0       	push   $0xc010d4f4$/;"	l
c0109d4a	obj/kernel.asm	/^c0109d4a:	68 7a 02 00 00       	push   $0x27a$/;"	l
c0109d4f	obj/kernel.asm	/^c0109d4f:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c0109d54	obj/kernel.asm	/^c0109d54:	e8 81 66 ff ff       	call   c01003da <__panic>$/;"	l
c0109d59	obj/kernel.asm	/^c0109d59:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
c0109d5c	obj/kernel.asm	/^c0109d5c:	81 c2 00 00 00 40    	add    $0x40000000,%edx$/;"	l
c0109d62	obj/kernel.asm	/^c0109d62:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c0109d65	obj/kernel.asm	/^c0109d65:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109d68	obj/kernel.asm	/^c0109d68:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109d6b	obj/kernel.asm	/^c0109d6b:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0109d6e	obj/kernel.asm	/^c0109d6e:	81 7d b4 ff ff ff bf 	cmpl   $0xbfffffff,-0x4c(%ebp)$/;"	l
c0109d75	obj/kernel.asm	/^c0109d75:	77 17                	ja     c0109d8e <load_icode+0x50c>$/;"	l
c0109d77	obj/kernel.asm	/^c0109d77:	ff 75 b4             	pushl  -0x4c(%ebp)$/;"	l
c0109d7a	obj/kernel.asm	/^c0109d7a:	68 f4 d4 10 c0       	push   $0xc010d4f4$/;"	l
c0109d7f	obj/kernel.asm	/^c0109d7f:	68 7b 02 00 00       	push   $0x27b$/;"	l
c0109d84	obj/kernel.asm	/^c0109d84:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c0109d89	obj/kernel.asm	/^c0109d89:	e8 4c 66 ff ff       	call   c01003da <__panic>$/;"	l
c0109d8e	obj/kernel.asm	/^c0109d8e:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0109d91	obj/kernel.asm	/^c0109d91:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0109d96	obj/kernel.asm	/^c0109d96:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0109d99	obj/kernel.asm	/^c0109d99:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c0109d9c	obj/kernel.asm	/^c0109d9c:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0109d9f	obj/kernel.asm	/^c0109d9f:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0109da4	obj/kernel.asm	/^c0109da4:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109da7	obj/kernel.asm	/^c0109da7:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0109daa	obj/kernel.asm	/^c0109daa:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109dad	obj/kernel.asm	/^c0109dad:	6a 4c                	push   $0x4c$/;"	l
c0109daf	obj/kernel.asm	/^c0109daf:	6a 00                	push   $0x0$/;"	l
c0109db1	obj/kernel.asm	/^c0109db1:	ff 75 b0             	pushl  -0x50(%ebp)$/;"	l
c0109db4	obj/kernel.asm	/^c0109db4:	e8 e3 0d 00 00       	call   c010ab9c <memset>$/;"	l
c0109db9	obj/kernel.asm	/^c0109db9:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109dbc	obj/kernel.asm	/^c0109dbc:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109dbf	obj/kernel.asm	/^c0109dbf:	66 c7 40 3c 1b 00    	movw   $0x1b,0x3c(%eax)$/;"	l
c0109dc5	obj/kernel.asm	/^c0109dc5:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109dc8	obj/kernel.asm	/^c0109dc8:	66 c7 40 48 23 00    	movw   $0x23,0x48(%eax)$/;"	l
c0109dce	obj/kernel.asm	/^c0109dce:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109dd1	obj/kernel.asm	/^c0109dd1:	0f b7 50 48          	movzwl 0x48(%eax),%edx$/;"	l
c0109dd5	obj/kernel.asm	/^c0109dd5:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109dd8	obj/kernel.asm	/^c0109dd8:	66 89 50 28          	mov    %dx,0x28(%eax)$/;"	l
c0109ddc	obj/kernel.asm	/^c0109ddc:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109ddf	obj/kernel.asm	/^c0109ddf:	0f b7 50 28          	movzwl 0x28(%eax),%edx$/;"	l
c0109de3	obj/kernel.asm	/^c0109de3:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109de6	obj/kernel.asm	/^c0109de6:	66 89 50 2c          	mov    %dx,0x2c(%eax)$/;"	l
c0109dea	obj/kernel.asm	/^c0109dea:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109ded	obj/kernel.asm	/^c0109ded:	c7 40 44 00 00 00 b0 	movl   $0xb0000000,0x44(%eax)$/;"	l
c0109df4	obj/kernel.asm	/^c0109df4:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0109df7	obj/kernel.asm	/^c0109df7:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c0109dfa	obj/kernel.asm	/^c0109dfa:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109dfd	obj/kernel.asm	/^c0109dfd:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
c0109e00	obj/kernel.asm	/^c0109e00:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109e03	obj/kernel.asm	/^c0109e03:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c0109e06	obj/kernel.asm	/^c0109e06:	80 cc 02             	or     $0x2,%ah$/;"	l
c0109e09	obj/kernel.asm	/^c0109e09:	89 c2                	mov    %eax,%edx$/;"	l
c0109e0b	obj/kernel.asm	/^c0109e0b:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109e0e	obj/kernel.asm	/^c0109e0e:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c0109e11	obj/kernel.asm	/^c0109e11:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109e18	obj/kernel.asm	/^c0109e18:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109e1b	obj/kernel.asm	/^c0109e1b:	eb 2c                	jmp    c0109e49 <load_icode+0x5c7>$/;"	l
c0109e1d	obj/kernel.asm	/^c0109e1d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109e20	obj/kernel.asm	/^c0109e20:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c0109e23	obj/kernel.asm	/^c0109e23:	e8 08 ba ff ff       	call   c0105830 <exit_mmap>$/;"	l
c0109e28	obj/kernel.asm	/^c0109e28:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e2b	obj/kernel.asm	/^c0109e2b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109e2e	obj/kernel.asm	/^c0109e2e:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c0109e31	obj/kernel.asm	/^c0109e31:	e8 71 f5 ff ff       	call   c01093a7 <put_pgdir>$/;"	l
c0109e36	obj/kernel.asm	/^c0109e36:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e39	obj/kernel.asm	/^c0109e39:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109e3c	obj/kernel.asm	/^c0109e3c:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c0109e3f	obj/kernel.asm	/^c0109e3f:	e8 61 b7 ff ff       	call   c01055a5 <mm_destroy>$/;"	l
c0109e44	obj/kernel.asm	/^c0109e44:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e47	obj/kernel.asm	/^c0109e47:	eb cf                	jmp    c0109e18 <load_icode+0x596>$/;"	l
c0109e49	obj/kernel.asm	/^c0109e49:	c9                   	leave  $/;"	l
c0109e4a	obj/kernel.asm	/^c0109e4a:	c3                   	ret    $/;"	l
c0109e4b	obj/kernel.asm	/^c0109e4b <do_execve>:$/;"	l
c0109e4b	obj/kernel.asm	/^c0109e4b:	55                   	push   %ebp$/;"	l
c0109e4c	obj/kernel.asm	/^c0109e4c:	89 e5                	mov    %esp,%ebp$/;"	l
c0109e4e	obj/kernel.asm	/^c0109e4e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109e51	obj/kernel.asm	/^c0109e51:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0109e56	obj/kernel.asm	/^c0109e56:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109e59	obj/kernel.asm	/^c0109e59:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109e5c	obj/kernel.asm	/^c0109e5c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109e5f	obj/kernel.asm	/^c0109e5f:	6a 00                	push   $0x0$/;"	l
c0109e61	obj/kernel.asm	/^c0109e61:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109e64	obj/kernel.asm	/^c0109e64:	50                   	push   %eax$/;"	l
c0109e65	obj/kernel.asm	/^c0109e65:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109e68	obj/kernel.asm	/^c0109e68:	e8 69 c3 ff ff       	call   c01061d6 <user_mem_check>$/;"	l
c0109e6d	obj/kernel.asm	/^c0109e6d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e70	obj/kernel.asm	/^c0109e70:	85 c0                	test   %eax,%eax$/;"	l
c0109e72	obj/kernel.asm	/^c0109e72:	75 0a                	jne    c0109e7e <do_execve+0x33>$/;"	l
c0109e74	obj/kernel.asm	/^c0109e74:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0109e79	obj/kernel.asm	/^c0109e79:	e9 eb 00 00 00       	jmp    c0109f69 <do_execve+0x11e>$/;"	l
c0109e7e	obj/kernel.asm	/^c0109e7e:	83 7d 0c 0f          	cmpl   $0xf,0xc(%ebp)$/;"	l
c0109e82	obj/kernel.asm	/^c0109e82:	76 07                	jbe    c0109e8b <do_execve+0x40>$/;"	l
c0109e84	obj/kernel.asm	/^c0109e84:	c7 45 0c 0f 00 00 00 	movl   $0xf,0xc(%ebp)$/;"	l
c0109e8b	obj/kernel.asm	/^c0109e8b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109e8e	obj/kernel.asm	/^c0109e8e:	6a 10                	push   $0x10$/;"	l
c0109e90	obj/kernel.asm	/^c0109e90:	6a 00                	push   $0x0$/;"	l
c0109e92	obj/kernel.asm	/^c0109e92:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0109e95	obj/kernel.asm	/^c0109e95:	50                   	push   %eax$/;"	l
c0109e96	obj/kernel.asm	/^c0109e96:	e8 01 0d 00 00       	call   c010ab9c <memset>$/;"	l
c0109e9b	obj/kernel.asm	/^c0109e9b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e9e	obj/kernel.asm	/^c0109e9e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109ea1	obj/kernel.asm	/^c0109ea1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109ea4	obj/kernel.asm	/^c0109ea4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109ea7	obj/kernel.asm	/^c0109ea7:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0109eaa	obj/kernel.asm	/^c0109eaa:	50                   	push   %eax$/;"	l
c0109eab	obj/kernel.asm	/^c0109eab:	e8 cf 0d 00 00       	call   c010ac7f <memcpy>$/;"	l
c0109eb0	obj/kernel.asm	/^c0109eb0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109eb3	obj/kernel.asm	/^c0109eb3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109eb7	obj/kernel.asm	/^c0109eb7:	74 56                	je     c0109f0f <do_execve+0xc4>$/;"	l
c0109eb9	obj/kernel.asm	/^c0109eb9:	a1 94 e0 19 c0       	mov    0xc019e094,%eax$/;"	l
c0109ebe	obj/kernel.asm	/^c0109ebe:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109ec1	obj/kernel.asm	/^c0109ec1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109ec4	obj/kernel.asm	/^c0109ec4:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0109ec7	obj/kernel.asm	/^c0109ec7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109eca	obj/kernel.asm	/^c0109eca:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109ecd	obj/kernel.asm	/^c0109ecd:	e8 f4 ed ff ff       	call   c0108cc6 <mm_count_dec>$/;"	l
c0109ed2	obj/kernel.asm	/^c0109ed2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ed5	obj/kernel.asm	/^c0109ed5:	85 c0                	test   %eax,%eax$/;"	l
c0109ed7	obj/kernel.asm	/^c0109ed7:	75 2a                	jne    c0109f03 <do_execve+0xb8>$/;"	l
c0109ed9	obj/kernel.asm	/^c0109ed9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109edc	obj/kernel.asm	/^c0109edc:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109edf	obj/kernel.asm	/^c0109edf:	e8 4c b9 ff ff       	call   c0105830 <exit_mmap>$/;"	l
c0109ee4	obj/kernel.asm	/^c0109ee4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ee7	obj/kernel.asm	/^c0109ee7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109eea	obj/kernel.asm	/^c0109eea:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109eed	obj/kernel.asm	/^c0109eed:	e8 b5 f4 ff ff       	call   c01093a7 <put_pgdir>$/;"	l
c0109ef2	obj/kernel.asm	/^c0109ef2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ef5	obj/kernel.asm	/^c0109ef5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109ef8	obj/kernel.asm	/^c0109ef8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109efb	obj/kernel.asm	/^c0109efb:	e8 a5 b6 ff ff       	call   c01055a5 <mm_destroy>$/;"	l
c0109f00	obj/kernel.asm	/^c0109f00:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f03	obj/kernel.asm	/^c0109f03:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0109f08	obj/kernel.asm	/^c0109f08:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c0109f0f	obj/kernel.asm	/^c0109f0f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109f12	obj/kernel.asm	/^c0109f12:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0109f15	obj/kernel.asm	/^c0109f15:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0109f18	obj/kernel.asm	/^c0109f18:	e8 65 f9 ff ff       	call   c0109882 <load_icode>$/;"	l
c0109f1d	obj/kernel.asm	/^c0109f1d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f20	obj/kernel.asm	/^c0109f20:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109f23	obj/kernel.asm	/^c0109f23:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109f27	obj/kernel.asm	/^c0109f27:	74 26                	je     c0109f4f <do_execve+0x104>$/;"	l
c0109f29	obj/kernel.asm	/^c0109f29:	90                   	nop$/;"	l
c0109f2a	obj/kernel.asm	/^c0109f2a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109f2d	obj/kernel.asm	/^c0109f2d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109f30	obj/kernel.asm	/^c0109f30:	e8 81 f7 ff ff       	call   c01096b6 <do_exit>$/;"	l
c0109f35	obj/kernel.asm	/^c0109f35:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f38	obj/kernel.asm	/^c0109f38:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109f3b	obj/kernel.asm	/^c0109f3b:	68 0b d7 10 c0       	push   $0xc010d70b$/;"	l
c0109f40	obj/kernel.asm	/^c0109f40:	68 bf 02 00 00       	push   $0x2bf$/;"	l
c0109f45	obj/kernel.asm	/^c0109f45:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c0109f4a	obj/kernel.asm	/^c0109f4a:	e8 8b 64 ff ff       	call   c01003da <__panic>$/;"	l
c0109f4f	obj/kernel.asm	/^c0109f4f:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0109f54	obj/kernel.asm	/^c0109f54:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109f57	obj/kernel.asm	/^c0109f57:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c0109f5a	obj/kernel.asm	/^c0109f5a:	52                   	push   %edx$/;"	l
c0109f5b	obj/kernel.asm	/^c0109f5b:	50                   	push   %eax$/;"	l
c0109f5c	obj/kernel.asm	/^c0109f5c:	e8 a1 ee ff ff       	call   c0108e02 <set_proc_name>$/;"	l
c0109f61	obj/kernel.asm	/^c0109f61:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f64	obj/kernel.asm	/^c0109f64:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109f69	obj/kernel.asm	/^c0109f69:	c9                   	leave  $/;"	l
c0109f6a	obj/kernel.asm	/^c0109f6a:	c3                   	ret    $/;"	l
c0109f6b	obj/kernel.asm	/^c0109f6b <do_yield>:$/;"	l
c0109f6b	obj/kernel.asm	/^c0109f6b:	55                   	push   %ebp$/;"	l
c0109f6c	obj/kernel.asm	/^c0109f6c:	89 e5                	mov    %esp,%ebp$/;"	l
c0109f6e	obj/kernel.asm	/^c0109f6e:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0109f73	obj/kernel.asm	/^c0109f73:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c0109f7a	obj/kernel.asm	/^c0109f7a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109f7f	obj/kernel.asm	/^c0109f7f:	5d                   	pop    %ebp$/;"	l
c0109f80	obj/kernel.asm	/^c0109f80:	c3                   	ret    $/;"	l
c0109f81	obj/kernel.asm	/^c0109f81 <do_wait>:$/;"	l
c0109f81	obj/kernel.asm	/^c0109f81:	55                   	push   %ebp$/;"	l
c0109f82	obj/kernel.asm	/^c0109f82:	89 e5                	mov    %esp,%ebp$/;"	l
c0109f84	obj/kernel.asm	/^c0109f84:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109f87	obj/kernel.asm	/^c0109f87:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0109f8c	obj/kernel.asm	/^c0109f8c:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109f8f	obj/kernel.asm	/^c0109f8f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109f92	obj/kernel.asm	/^c0109f92:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0109f96	obj/kernel.asm	/^c0109f96:	74 21                	je     c0109fb9 <do_wait+0x38>$/;"	l
c0109f98	obj/kernel.asm	/^c0109f98:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109f9b	obj/kernel.asm	/^c0109f9b:	6a 01                	push   $0x1$/;"	l
c0109f9d	obj/kernel.asm	/^c0109f9d:	6a 04                	push   $0x4$/;"	l
c0109f9f	obj/kernel.asm	/^c0109f9f:	50                   	push   %eax$/;"	l
c0109fa0	obj/kernel.asm	/^c0109fa0:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109fa3	obj/kernel.asm	/^c0109fa3:	e8 2e c2 ff ff       	call   c01061d6 <user_mem_check>$/;"	l
c0109fa8	obj/kernel.asm	/^c0109fa8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109fab	obj/kernel.asm	/^c0109fab:	85 c0                	test   %eax,%eax$/;"	l
c0109fad	obj/kernel.asm	/^c0109fad:	75 0a                	jne    c0109fb9 <do_wait+0x38>$/;"	l
c0109faf	obj/kernel.asm	/^c0109faf:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0109fb4	obj/kernel.asm	/^c0109fb4:	e9 51 01 00 00       	jmp    c010a10a <do_wait+0x189>$/;"	l
c0109fb9	obj/kernel.asm	/^c0109fb9:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0109fc0	obj/kernel.asm	/^c0109fc0:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0109fc4	obj/kernel.asm	/^c0109fc4:	74 39                	je     c0109fff <do_wait+0x7e>$/;"	l
c0109fc6	obj/kernel.asm	/^c0109fc6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109fc9	obj/kernel.asm	/^c0109fc9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109fcc	obj/kernel.asm	/^c0109fcc:	e8 00 f2 ff ff       	call   c01091d1 <find_proc>$/;"	l
c0109fd1	obj/kernel.asm	/^c0109fd1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109fd4	obj/kernel.asm	/^c0109fd4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109fd7	obj/kernel.asm	/^c0109fd7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109fdb	obj/kernel.asm	/^c0109fdb:	74 51                	je     c010a02e <do_wait+0xad>$/;"	l
c0109fdd	obj/kernel.asm	/^c0109fdd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109fe0	obj/kernel.asm	/^c0109fe0:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c0109fe3	obj/kernel.asm	/^c0109fe3:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c0109fe8	obj/kernel.asm	/^c0109fe8:	39 c2                	cmp    %eax,%edx$/;"	l
c0109fea	obj/kernel.asm	/^c0109fea:	75 42                	jne    c010a02e <do_wait+0xad>$/;"	l
c0109fec	obj/kernel.asm	/^c0109fec:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c0109ff3	obj/kernel.asm	/^c0109ff3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109ff6	obj/kernel.asm	/^c0109ff6:	8b 00                	mov    (%eax),%eax$/;"	l
c0109ff8	obj/kernel.asm	/^c0109ff8:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0109ffb	obj/kernel.asm	/^c0109ffb:	75 31                	jne    c010a02e <do_wait+0xad>$/;"	l
c0109ffd	obj/kernel.asm	/^c0109ffd:	eb 7c                	jmp    c010a07b <do_wait+0xfa>$/;"	l
c0109fff	obj/kernel.asm	/^c0109fff:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010a004	obj/kernel.asm	/^c010a004:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c010a007	obj/kernel.asm	/^c010a007:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a00a	obj/kernel.asm	/^c010a00a:	eb 1c                	jmp    c010a028 <do_wait+0xa7>$/;"	l
c010a00c	obj/kernel.asm	/^c010a00c:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010a013	obj/kernel.asm	/^c010a013:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a016	obj/kernel.asm	/^c010a016:	8b 00                	mov    (%eax),%eax$/;"	l
c010a018	obj/kernel.asm	/^c010a018:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a01b	obj/kernel.asm	/^c010a01b:	75 02                	jne    c010a01f <do_wait+0x9e>$/;"	l
c010a01d	obj/kernel.asm	/^c010a01d:	eb 5c                	jmp    c010a07b <do_wait+0xfa>$/;"	l
c010a01f	obj/kernel.asm	/^c010a01f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a022	obj/kernel.asm	/^c010a022:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010a025	obj/kernel.asm	/^c010a025:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a028	obj/kernel.asm	/^c010a028:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a02c	obj/kernel.asm	/^c010a02c:	75 de                	jne    c010a00c <do_wait+0x8b>$/;"	l
c010a02e	obj/kernel.asm	/^c010a02e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a032	obj/kernel.asm	/^c010a032:	74 3d                	je     c010a071 <do_wait+0xf0>$/;"	l
c010a034	obj/kernel.asm	/^c010a034:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010a039	obj/kernel.asm	/^c010a039:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010a03f	obj/kernel.asm	/^c010a03f:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010a044	obj/kernel.asm	/^c010a044:	c7 40 6c 01 00 00 80 	movl   $0x80000001,0x6c(%eax)$/;"	l
c010a04b	obj/kernel.asm	/^c010a04b:	e8 6d 05 00 00       	call   c010a5bd <schedule>$/;"	l
c010a050	obj/kernel.asm	/^c010a050:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010a055	obj/kernel.asm	/^c010a055:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010a058	obj/kernel.asm	/^c010a058:	83 e0 01             	and    $0x1,%eax$/;"	l
c010a05b	obj/kernel.asm	/^c010a05b:	85 c0                	test   %eax,%eax$/;"	l
c010a05d	obj/kernel.asm	/^c010a05d:	74 0d                	je     c010a06c <do_wait+0xeb>$/;"	l
c010a05f	obj/kernel.asm	/^c010a05f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a062	obj/kernel.asm	/^c010a062:	6a f7                	push   $0xfffffff7$/;"	l
c010a064	obj/kernel.asm	/^c010a064:	e8 4d f6 ff ff       	call   c01096b6 <do_exit>$/;"	l
c010a069	obj/kernel.asm	/^c010a069:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a06c	obj/kernel.asm	/^c010a06c:	e9 48 ff ff ff       	jmp    c0109fb9 <do_wait+0x38>$/;"	l
c010a071	obj/kernel.asm	/^c010a071:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
c010a076	obj/kernel.asm	/^c010a076:	e9 8f 00 00 00       	jmp    c010a10a <do_wait+0x189>$/;"	l
c010a07b	obj/kernel.asm	/^c010a07b:	a1 c0 bf 19 c0       	mov    0xc019bfc0,%eax$/;"	l
c010a080	obj/kernel.asm	/^c010a080:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010a083	obj/kernel.asm	/^c010a083:	74 0a                	je     c010a08f <do_wait+0x10e>$/;"	l
c010a085	obj/kernel.asm	/^c010a085:	a1 c4 bf 19 c0       	mov    0xc019bfc4,%eax$/;"	l
c010a08a	obj/kernel.asm	/^c010a08a:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010a08d	obj/kernel.asm	/^c010a08d:	75 17                	jne    c010a0a6 <do_wait+0x125>$/;"	l
c010a08f	obj/kernel.asm	/^c010a08f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a092	obj/kernel.asm	/^c010a092:	68 1e d7 10 c0       	push   $0xc010d71e$/;"	l
c010a097	obj/kernel.asm	/^c010a097:	68 f8 02 00 00       	push   $0x2f8$/;"	l
c010a09c	obj/kernel.asm	/^c010a09c:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c010a0a1	obj/kernel.asm	/^c010a0a1:	e8 34 63 ff ff       	call   c01003da <__panic>$/;"	l
c010a0a6	obj/kernel.asm	/^c010a0a6:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010a0aa	obj/kernel.asm	/^c010a0aa:	74 0b                	je     c010a0b7 <do_wait+0x136>$/;"	l
c010a0ac	obj/kernel.asm	/^c010a0ac:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a0af	obj/kernel.asm	/^c010a0af:	8b 50 68             	mov    0x68(%eax),%edx$/;"	l
c010a0b2	obj/kernel.asm	/^c010a0b2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a0b5	obj/kernel.asm	/^c010a0b5:	89 10                	mov    %edx,(%eax)$/;"	l
c010a0b7	obj/kernel.asm	/^c010a0b7:	e8 64 ea ff ff       	call   c0108b20 <__intr_save>$/;"	l
c010a0bc	obj/kernel.asm	/^c010a0bc:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a0bf	obj/kernel.asm	/^c010a0bf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a0c2	obj/kernel.asm	/^c010a0c2:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a0c5	obj/kernel.asm	/^c010a0c5:	e8 d4 f0 ff ff       	call   c010919e <unhash_proc>$/;"	l
c010a0ca	obj/kernel.asm	/^c010a0ca:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a0cd	obj/kernel.asm	/^c010a0cd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a0d0	obj/kernel.asm	/^c010a0d0:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a0d3	obj/kernel.asm	/^c010a0d3:	e8 39 ee ff ff       	call   c0108f11 <remove_links>$/;"	l
c010a0d8	obj/kernel.asm	/^c010a0d8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a0db	obj/kernel.asm	/^c010a0db:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a0de	obj/kernel.asm	/^c010a0de:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010a0e1	obj/kernel.asm	/^c010a0e1:	e8 64 ea ff ff       	call   c0108b4a <__intr_restore>$/;"	l
c010a0e6	obj/kernel.asm	/^c010a0e6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a0e9	obj/kernel.asm	/^c010a0e9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a0ec	obj/kernel.asm	/^c010a0ec:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a0ef	obj/kernel.asm	/^c010a0ef:	e8 f2 f1 ff ff       	call   c01092e6 <put_kstack>$/;"	l
c010a0f4	obj/kernel.asm	/^c010a0f4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a0f7	obj/kernel.asm	/^c010a0f7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a0fa	obj/kernel.asm	/^c010a0fa:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a0fd	obj/kernel.asm	/^c010a0fd:	e8 ca d2 ff ff       	call   c01073cc <kfree>$/;"	l
c010a102	obj/kernel.asm	/^c010a102:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a105	obj/kernel.asm	/^c010a105:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a10a	obj/kernel.asm	/^c010a10a:	c9                   	leave  $/;"	l
c010a10b	obj/kernel.asm	/^c010a10b:	c3                   	ret    $/;"	l
c010a10c	obj/kernel.asm	/^c010a10c <do_kill>:$/;"	l
c010a10c	obj/kernel.asm	/^c010a10c:	55                   	push   %ebp$/;"	l
c010a10d	obj/kernel.asm	/^c010a10d:	89 e5                	mov    %esp,%ebp$/;"	l
c010a10f	obj/kernel.asm	/^c010a10f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a112	obj/kernel.asm	/^c010a112:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a115	obj/kernel.asm	/^c010a115:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a118	obj/kernel.asm	/^c010a118:	e8 b4 f0 ff ff       	call   c01091d1 <find_proc>$/;"	l
c010a11d	obj/kernel.asm	/^c010a11d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a120	obj/kernel.asm	/^c010a120:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a123	obj/kernel.asm	/^c010a123:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a127	obj/kernel.asm	/^c010a127:	74 44                	je     c010a16d <do_kill+0x61>$/;"	l
c010a129	obj/kernel.asm	/^c010a129:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a12c	obj/kernel.asm	/^c010a12c:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010a12f	obj/kernel.asm	/^c010a12f:	83 e0 01             	and    $0x1,%eax$/;"	l
c010a132	obj/kernel.asm	/^c010a132:	85 c0                	test   %eax,%eax$/;"	l
c010a134	obj/kernel.asm	/^c010a134:	75 30                	jne    c010a166 <do_kill+0x5a>$/;"	l
c010a136	obj/kernel.asm	/^c010a136:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a139	obj/kernel.asm	/^c010a139:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010a13c	obj/kernel.asm	/^c010a13c:	83 c8 01             	or     $0x1,%eax$/;"	l
c010a13f	obj/kernel.asm	/^c010a13f:	89 c2                	mov    %eax,%edx$/;"	l
c010a141	obj/kernel.asm	/^c010a141:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a144	obj/kernel.asm	/^c010a144:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010a147	obj/kernel.asm	/^c010a147:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a14a	obj/kernel.asm	/^c010a14a:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c010a14d	obj/kernel.asm	/^c010a14d:	85 c0                	test   %eax,%eax$/;"	l
c010a14f	obj/kernel.asm	/^c010a14f:	79 0e                	jns    c010a15f <do_kill+0x53>$/;"	l
c010a151	obj/kernel.asm	/^c010a151:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a154	obj/kernel.asm	/^c010a154:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a157	obj/kernel.asm	/^c010a157:	e8 ed 03 00 00       	call   c010a549 <wakeup_proc>$/;"	l
c010a15c	obj/kernel.asm	/^c010a15c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a15f	obj/kernel.asm	/^c010a15f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a164	obj/kernel.asm	/^c010a164:	eb 0c                	jmp    c010a172 <do_kill+0x66>$/;"	l
c010a166	obj/kernel.asm	/^c010a166:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax$/;"	l
c010a16b	obj/kernel.asm	/^c010a16b:	eb 05                	jmp    c010a172 <do_kill+0x66>$/;"	l
c010a16d	obj/kernel.asm	/^c010a16d:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a172	obj/kernel.asm	/^c010a172:	c9                   	leave  $/;"	l
c010a173	obj/kernel.asm	/^c010a173:	c3                   	ret    $/;"	l
c010a174	obj/kernel.asm	/^c010a174 <kernel_execve>:$/;"	l
c010a174	obj/kernel.asm	/^c010a174:	55                   	push   %ebp$/;"	l
c010a175	obj/kernel.asm	/^c010a175:	89 e5                	mov    %esp,%ebp$/;"	l
c010a177	obj/kernel.asm	/^c010a177:	57                   	push   %edi$/;"	l
c010a178	obj/kernel.asm	/^c010a178:	56                   	push   %esi$/;"	l
c010a179	obj/kernel.asm	/^c010a179:	53                   	push   %ebx$/;"	l
c010a17a	obj/kernel.asm	/^c010a17a:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
c010a17d	obj/kernel.asm	/^c010a17d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a180	obj/kernel.asm	/^c010a180:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a183	obj/kernel.asm	/^c010a183:	e8 e3 06 00 00       	call   c010a86b <strlen>$/;"	l
c010a188	obj/kernel.asm	/^c010a188:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a18b	obj/kernel.asm	/^c010a18b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010a18e	obj/kernel.asm	/^c010a18e:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
c010a193	obj/kernel.asm	/^c010a193:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010a196	obj/kernel.asm	/^c010a196:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
c010a199	obj/kernel.asm	/^c010a199:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
c010a19c	obj/kernel.asm	/^c010a19c:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
c010a19f	obj/kernel.asm	/^c010a19f:	89 f7                	mov    %esi,%edi$/;"	l
c010a1a1	obj/kernel.asm	/^c010a1a1:	cd 80                	int    $0x80$/;"	l
c010a1a3	obj/kernel.asm	/^c010a1a3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010a1a6	obj/kernel.asm	/^c010a1a6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a1a9	obj/kernel.asm	/^c010a1a9:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
c010a1ac	obj/kernel.asm	/^c010a1ac:	5b                   	pop    %ebx$/;"	l
c010a1ad	obj/kernel.asm	/^c010a1ad:	5e                   	pop    %esi$/;"	l
c010a1ae	obj/kernel.asm	/^c010a1ae:	5f                   	pop    %edi$/;"	l
c010a1af	obj/kernel.asm	/^c010a1af:	5d                   	pop    %ebp$/;"	l
c010a1b0	obj/kernel.asm	/^c010a1b0:	c3                   	ret    $/;"	l
c010a1b1	obj/kernel.asm	/^c010a1b1 <user_main>:$/;"	l
c010a1b1	obj/kernel.asm	/^c010a1b1:	55                   	push   %ebp$/;"	l
c010a1b2	obj/kernel.asm	/^c010a1b2:	89 e5                	mov    %esp,%ebp$/;"	l
c010a1b4	obj/kernel.asm	/^c010a1b4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a1b7	obj/kernel.asm	/^c010a1b7:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010a1bc	obj/kernel.asm	/^c010a1bc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a1bf	obj/kernel.asm	/^c010a1bf:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a1c2	obj/kernel.asm	/^c010a1c2:	68 3a d7 10 c0       	push   $0xc010d73a$/;"	l
c010a1c7	obj/kernel.asm	/^c010a1c7:	50                   	push   %eax$/;"	l
c010a1c8	obj/kernel.asm	/^c010a1c8:	68 40 d7 10 c0       	push   $0xc010d740$/;"	l
c010a1cd	obj/kernel.asm	/^c010a1cd:	e8 a3 60 ff ff       	call   c0100275 <cprintf>$/;"	l
c010a1d2	obj/kernel.asm	/^c010a1d2:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a1d5	obj/kernel.asm	/^c010a1d5:	b8 b8 78 00 00       	mov    $0x78b8,%eax$/;"	l
c010a1da	obj/kernel.asm	/^c010a1da:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a1dd	obj/kernel.asm	/^c010a1dd:	50                   	push   %eax$/;"	l
c010a1de	obj/kernel.asm	/^c010a1de:	68 68 e8 15 c0       	push   $0xc015e868$/;"	l
c010a1e3	obj/kernel.asm	/^c010a1e3:	68 3a d7 10 c0       	push   $0xc010d73a$/;"	l
c010a1e8	obj/kernel.asm	/^c010a1e8:	e8 87 ff ff ff       	call   c010a174 <kernel_execve>$/;"	l
c010a1ed	obj/kernel.asm	/^c010a1ed:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a1f0	obj/kernel.asm	/^c010a1f0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a1f3	obj/kernel.asm	/^c010a1f3:	68 67 d7 10 c0       	push   $0xc010d767$/;"	l
c010a1f8	obj/kernel.asm	/^c010a1f8:	68 41 03 00 00       	push   $0x341$/;"	l
c010a1fd	obj/kernel.asm	/^c010a1fd:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c010a202	obj/kernel.asm	/^c010a202:	e8 d3 61 ff ff       	call   c01003da <__panic>$/;"	l
c010a207	obj/kernel.asm	/^c010a207 <init_main>:$/;"	l
c010a207	obj/kernel.asm	/^c010a207:	55                   	push   %ebp$/;"	l
c010a208	obj/kernel.asm	/^c010a208:	89 e5                	mov    %esp,%ebp$/;"	l
c010a20a	obj/kernel.asm	/^c010a20a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a20d	obj/kernel.asm	/^c010a20d:	e8 f9 97 ff ff       	call   c0103a0b <nr_free_pages>$/;"	l
c010a212	obj/kernel.asm	/^c010a212:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a215	obj/kernel.asm	/^c010a215:	e8 7d d0 ff ff       	call   c0107297 <kallocated>$/;"	l
c010a21a	obj/kernel.asm	/^c010a21a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a21d	obj/kernel.asm	/^c010a21d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a220	obj/kernel.asm	/^c010a220:	6a 00                	push   $0x0$/;"	l
c010a222	obj/kernel.asm	/^c010a222:	6a 00                	push   $0x0$/;"	l
c010a224	obj/kernel.asm	/^c010a224:	68 b1 a1 10 c0       	push   $0xc010a1b1$/;"	l
c010a229	obj/kernel.asm	/^c010a229:	e8 13 f0 ff ff       	call   c0109241 <kernel_thread>$/;"	l
c010a22e	obj/kernel.asm	/^c010a22e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a231	obj/kernel.asm	/^c010a231:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a234	obj/kernel.asm	/^c010a234:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a238	obj/kernel.asm	/^c010a238:	7f 17                	jg     c010a251 <init_main+0x4a>$/;"	l
c010a23a	obj/kernel.asm	/^c010a23a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a23d	obj/kernel.asm	/^c010a23d:	68 81 d7 10 c0       	push   $0xc010d781$/;"	l
c010a242	obj/kernel.asm	/^c010a242:	68 4c 03 00 00       	push   $0x34c$/;"	l
c010a247	obj/kernel.asm	/^c010a247:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c010a24c	obj/kernel.asm	/^c010a24c:	e8 89 61 ff ff       	call   c01003da <__panic>$/;"	l
c010a251	obj/kernel.asm	/^c010a251:	eb 05                	jmp    c010a258 <init_main+0x51>$/;"	l
c010a253	obj/kernel.asm	/^c010a253:	e8 65 03 00 00       	call   c010a5bd <schedule>$/;"	l
c010a258	obj/kernel.asm	/^c010a258:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a25b	obj/kernel.asm	/^c010a25b:	6a 00                	push   $0x0$/;"	l
c010a25d	obj/kernel.asm	/^c010a25d:	6a 00                	push   $0x0$/;"	l
c010a25f	obj/kernel.asm	/^c010a25f:	e8 1d fd ff ff       	call   c0109f81 <do_wait>$/;"	l
c010a264	obj/kernel.asm	/^c010a264:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a267	obj/kernel.asm	/^c010a267:	85 c0                	test   %eax,%eax$/;"	l
c010a269	obj/kernel.asm	/^c010a269:	74 e8                	je     c010a253 <init_main+0x4c>$/;"	l
c010a26b	obj/kernel.asm	/^c010a26b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a26e	obj/kernel.asm	/^c010a26e:	68 9c d7 10 c0       	push   $0xc010d79c$/;"	l
c010a273	obj/kernel.asm	/^c010a273:	e8 fd 5f ff ff       	call   c0100275 <cprintf>$/;"	l
c010a278	obj/kernel.asm	/^c010a278:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a27b	obj/kernel.asm	/^c010a27b:	a1 c4 bf 19 c0       	mov    0xc019bfc4,%eax$/;"	l
c010a280	obj/kernel.asm	/^c010a280:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c010a283	obj/kernel.asm	/^c010a283:	85 c0                	test   %eax,%eax$/;"	l
c010a285	obj/kernel.asm	/^c010a285:	75 18                	jne    c010a29f <init_main+0x98>$/;"	l
c010a287	obj/kernel.asm	/^c010a287:	a1 c4 bf 19 c0       	mov    0xc019bfc4,%eax$/;"	l
c010a28c	obj/kernel.asm	/^c010a28c:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c010a28f	obj/kernel.asm	/^c010a28f:	85 c0                	test   %eax,%eax$/;"	l
c010a291	obj/kernel.asm	/^c010a291:	75 0c                	jne    c010a29f <init_main+0x98>$/;"	l
c010a293	obj/kernel.asm	/^c010a293:	a1 c4 bf 19 c0       	mov    0xc019bfc4,%eax$/;"	l
c010a298	obj/kernel.asm	/^c010a298:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010a29b	obj/kernel.asm	/^c010a29b:	85 c0                	test   %eax,%eax$/;"	l
c010a29d	obj/kernel.asm	/^c010a29d:	74 19                	je     c010a2b8 <init_main+0xb1>$/;"	l
c010a29f	obj/kernel.asm	/^c010a29f:	68 c0 d7 10 c0       	push   $0xc010d7c0$/;"	l
c010a2a4	obj/kernel.asm	/^c010a2a4:	68 e5 d5 10 c0       	push   $0xc010d5e5$/;"	l
c010a2a9	obj/kernel.asm	/^c010a2a9:	68 54 03 00 00       	push   $0x354$/;"	l
c010a2ae	obj/kernel.asm	/^c010a2ae:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c010a2b3	obj/kernel.asm	/^c010a2b3:	e8 22 61 ff ff       	call   c01003da <__panic>$/;"	l
c010a2b8	obj/kernel.asm	/^c010a2b8:	a1 00 e0 19 c0       	mov    0xc019e000,%eax$/;"	l
c010a2bd	obj/kernel.asm	/^c010a2bd:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a2c0	obj/kernel.asm	/^c010a2c0:	74 19                	je     c010a2db <init_main+0xd4>$/;"	l
c010a2c2	obj/kernel.asm	/^c010a2c2:	68 0b d8 10 c0       	push   $0xc010d80b$/;"	l
c010a2c7	obj/kernel.asm	/^c010a2c7:	68 e5 d5 10 c0       	push   $0xc010d5e5$/;"	l
c010a2cc	obj/kernel.asm	/^c010a2cc:	68 55 03 00 00       	push   $0x355$/;"	l
c010a2d1	obj/kernel.asm	/^c010a2d1:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c010a2d6	obj/kernel.asm	/^c010a2d6:	e8 ff 60 ff ff       	call   c01003da <__panic>$/;"	l
c010a2db	obj/kernel.asm	/^c010a2db:	c7 45 e8 78 e1 19 c0 	movl   $0xc019e178,-0x18(%ebp)$/;"	l
c010a2e2	obj/kernel.asm	/^c010a2e2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a2e5	obj/kernel.asm	/^c010a2e5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a2e8	obj/kernel.asm	/^c010a2e8:	8b 15 c4 bf 19 c0    	mov    0xc019bfc4,%edx$/;"	l
c010a2ee	obj/kernel.asm	/^c010a2ee:	83 c2 58             	add    $0x58,%edx$/;"	l
c010a2f1	obj/kernel.asm	/^c010a2f1:	39 d0                	cmp    %edx,%eax$/;"	l
c010a2f3	obj/kernel.asm	/^c010a2f3:	74 19                	je     c010a30e <init_main+0x107>$/;"	l
c010a2f5	obj/kernel.asm	/^c010a2f5:	68 1c d8 10 c0       	push   $0xc010d81c$/;"	l
c010a2fa	obj/kernel.asm	/^c010a2fa:	68 e5 d5 10 c0       	push   $0xc010d5e5$/;"	l
c010a2ff	obj/kernel.asm	/^c010a2ff:	68 56 03 00 00       	push   $0x356$/;"	l
c010a304	obj/kernel.asm	/^c010a304:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c010a309	obj/kernel.asm	/^c010a309:	e8 cc 60 ff ff       	call   c01003da <__panic>$/;"	l
c010a30e	obj/kernel.asm	/^c010a30e:	c7 45 e4 78 e1 19 c0 	movl   $0xc019e178,-0x1c(%ebp)$/;"	l
c010a315	obj/kernel.asm	/^c010a315:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a318	obj/kernel.asm	/^c010a318:	8b 00                	mov    (%eax),%eax$/;"	l
c010a31a	obj/kernel.asm	/^c010a31a:	8b 15 c4 bf 19 c0    	mov    0xc019bfc4,%edx$/;"	l
c010a320	obj/kernel.asm	/^c010a320:	83 c2 58             	add    $0x58,%edx$/;"	l
c010a323	obj/kernel.asm	/^c010a323:	39 d0                	cmp    %edx,%eax$/;"	l
c010a325	obj/kernel.asm	/^c010a325:	74 19                	je     c010a340 <init_main+0x139>$/;"	l
c010a327	obj/kernel.asm	/^c010a327:	68 4c d8 10 c0       	push   $0xc010d84c$/;"	l
c010a32c	obj/kernel.asm	/^c010a32c:	68 e5 d5 10 c0       	push   $0xc010d5e5$/;"	l
c010a331	obj/kernel.asm	/^c010a331:	68 57 03 00 00       	push   $0x357$/;"	l
c010a336	obj/kernel.asm	/^c010a336:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c010a33b	obj/kernel.asm	/^c010a33b:	e8 9a 60 ff ff       	call   c01003da <__panic>$/;"	l
c010a340	obj/kernel.asm	/^c010a340:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a343	obj/kernel.asm	/^c010a343:	68 7c d8 10 c0       	push   $0xc010d87c$/;"	l
c010a348	obj/kernel.asm	/^c010a348:	e8 28 5f ff ff       	call   c0100275 <cprintf>$/;"	l
c010a34d	obj/kernel.asm	/^c010a34d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a350	obj/kernel.asm	/^c010a350:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a355	obj/kernel.asm	/^c010a355:	c9                   	leave  $/;"	l
c010a356	obj/kernel.asm	/^c010a356:	c3                   	ret    $/;"	l
c010a357	obj/kernel.asm	/^c010a357 <proc_init>:$/;"	l
c010a357	obj/kernel.asm	/^c010a357:	55                   	push   %ebp$/;"	l
c010a358	obj/kernel.asm	/^c010a358:	89 e5                	mov    %esp,%ebp$/;"	l
c010a35a	obj/kernel.asm	/^c010a35a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a35d	obj/kernel.asm	/^c010a35d:	c7 45 ec 78 e1 19 c0 	movl   $0xc019e178,-0x14(%ebp)$/;"	l
c010a364	obj/kernel.asm	/^c010a364:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a367	obj/kernel.asm	/^c010a367:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010a36a	obj/kernel.asm	/^c010a36a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a36d	obj/kernel.asm	/^c010a36d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a370	obj/kernel.asm	/^c010a370:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010a373	obj/kernel.asm	/^c010a373:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a376	obj/kernel.asm	/^c010a376:	89 10                	mov    %edx,(%eax)$/;"	l
c010a378	obj/kernel.asm	/^c010a378:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010a37f	obj/kernel.asm	/^c010a37f:	eb 26                	jmp    c010a3a7 <proc_init+0x50>$/;"	l
c010a381	obj/kernel.asm	/^c010a381:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a384	obj/kernel.asm	/^c010a384:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010a387	obj/kernel.asm	/^c010a387:	05 00 c0 19 c0       	add    $0xc019c000,%eax$/;"	l
c010a38c	obj/kernel.asm	/^c010a38c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a38f	obj/kernel.asm	/^c010a38f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a392	obj/kernel.asm	/^c010a392:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010a395	obj/kernel.asm	/^c010a395:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a398	obj/kernel.asm	/^c010a398:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a39b	obj/kernel.asm	/^c010a39b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010a39e	obj/kernel.asm	/^c010a39e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a3a1	obj/kernel.asm	/^c010a3a1:	89 10                	mov    %edx,(%eax)$/;"	l
c010a3a3	obj/kernel.asm	/^c010a3a3:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010a3a7	obj/kernel.asm	/^c010a3a7:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
c010a3ae	obj/kernel.asm	/^c010a3ae:	7e d1                	jle    c010a381 <proc_init+0x2a>$/;"	l
c010a3b0	obj/kernel.asm	/^c010a3b0:	e8 6b e9 ff ff       	call   c0108d20 <alloc_proc>$/;"	l
c010a3b5	obj/kernel.asm	/^c010a3b5:	a3 c0 bf 19 c0       	mov    %eax,0xc019bfc0$/;"	l
c010a3ba	obj/kernel.asm	/^c010a3ba:	a1 c0 bf 19 c0       	mov    0xc019bfc0,%eax$/;"	l
c010a3bf	obj/kernel.asm	/^c010a3bf:	85 c0                	test   %eax,%eax$/;"	l
c010a3c1	obj/kernel.asm	/^c010a3c1:	75 17                	jne    c010a3da <proc_init+0x83>$/;"	l
c010a3c3	obj/kernel.asm	/^c010a3c3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a3c6	obj/kernel.asm	/^c010a3c6:	68 95 d8 10 c0       	push   $0xc010d895$/;"	l
c010a3cb	obj/kernel.asm	/^c010a3cb:	68 69 03 00 00       	push   $0x369$/;"	l
c010a3d0	obj/kernel.asm	/^c010a3d0:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c010a3d5	obj/kernel.asm	/^c010a3d5:	e8 00 60 ff ff       	call   c01003da <__panic>$/;"	l
c010a3da	obj/kernel.asm	/^c010a3da:	a1 c0 bf 19 c0       	mov    0xc019bfc0,%eax$/;"	l
c010a3df	obj/kernel.asm	/^c010a3df:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c010a3e6	obj/kernel.asm	/^c010a3e6:	a1 c0 bf 19 c0       	mov    0xc019bfc0,%eax$/;"	l
c010a3eb	obj/kernel.asm	/^c010a3eb:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010a3f1	obj/kernel.asm	/^c010a3f1:	a1 c0 bf 19 c0       	mov    0xc019bfc0,%eax$/;"	l
c010a3f6	obj/kernel.asm	/^c010a3f6:	ba 00 70 12 c0       	mov    $0xc0127000,%edx$/;"	l
c010a3fb	obj/kernel.asm	/^c010a3fb:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010a3fe	obj/kernel.asm	/^c010a3fe:	a1 c0 bf 19 c0       	mov    0xc019bfc0,%eax$/;"	l
c010a403	obj/kernel.asm	/^c010a403:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010a40a	obj/kernel.asm	/^c010a40a:	a1 c0 bf 19 c0       	mov    0xc019bfc0,%eax$/;"	l
c010a40f	obj/kernel.asm	/^c010a40f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a412	obj/kernel.asm	/^c010a412:	68 ad d8 10 c0       	push   $0xc010d8ad$/;"	l
c010a417	obj/kernel.asm	/^c010a417:	50                   	push   %eax$/;"	l
c010a418	obj/kernel.asm	/^c010a418:	e8 e5 e9 ff ff       	call   c0108e02 <set_proc_name>$/;"	l
c010a41d	obj/kernel.asm	/^c010a41d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a420	obj/kernel.asm	/^c010a420:	a1 00 e0 19 c0       	mov    0xc019e000,%eax$/;"	l
c010a425	obj/kernel.asm	/^c010a425:	83 c0 01             	add    $0x1,%eax$/;"	l
c010a428	obj/kernel.asm	/^c010a428:	a3 00 e0 19 c0       	mov    %eax,0xc019e000$/;"	l
c010a42d	obj/kernel.asm	/^c010a42d:	a1 c0 bf 19 c0       	mov    0xc019bfc0,%eax$/;"	l
c010a432	obj/kernel.asm	/^c010a432:	a3 c8 bf 19 c0       	mov    %eax,0xc019bfc8$/;"	l
c010a437	obj/kernel.asm	/^c010a437:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a43a	obj/kernel.asm	/^c010a43a:	6a 00                	push   $0x0$/;"	l
c010a43c	obj/kernel.asm	/^c010a43c:	6a 00                	push   $0x0$/;"	l
c010a43e	obj/kernel.asm	/^c010a43e:	68 07 a2 10 c0       	push   $0xc010a207$/;"	l
c010a443	obj/kernel.asm	/^c010a443:	e8 f9 ed ff ff       	call   c0109241 <kernel_thread>$/;"	l
c010a448	obj/kernel.asm	/^c010a448:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a44b	obj/kernel.asm	/^c010a44b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a44e	obj/kernel.asm	/^c010a44e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a452	obj/kernel.asm	/^c010a452:	7f 17                	jg     c010a46b <proc_init+0x114>$/;"	l
c010a454	obj/kernel.asm	/^c010a454:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a457	obj/kernel.asm	/^c010a457:	68 b2 d8 10 c0       	push   $0xc010d8b2$/;"	l
c010a45c	obj/kernel.asm	/^c010a45c:	68 77 03 00 00       	push   $0x377$/;"	l
c010a461	obj/kernel.asm	/^c010a461:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c010a466	obj/kernel.asm	/^c010a466:	e8 6f 5f ff ff       	call   c01003da <__panic>$/;"	l
c010a46b	obj/kernel.asm	/^c010a46b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a46e	obj/kernel.asm	/^c010a46e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a471	obj/kernel.asm	/^c010a471:	e8 5b ed ff ff       	call   c01091d1 <find_proc>$/;"	l
c010a476	obj/kernel.asm	/^c010a476:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a479	obj/kernel.asm	/^c010a479:	a3 c4 bf 19 c0       	mov    %eax,0xc019bfc4$/;"	l
c010a47e	obj/kernel.asm	/^c010a47e:	a1 c4 bf 19 c0       	mov    0xc019bfc4,%eax$/;"	l
c010a483	obj/kernel.asm	/^c010a483:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a486	obj/kernel.asm	/^c010a486:	68 cc d8 10 c0       	push   $0xc010d8cc$/;"	l
c010a48b	obj/kernel.asm	/^c010a48b:	50                   	push   %eax$/;"	l
c010a48c	obj/kernel.asm	/^c010a48c:	e8 71 e9 ff ff       	call   c0108e02 <set_proc_name>$/;"	l
c010a491	obj/kernel.asm	/^c010a491:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a494	obj/kernel.asm	/^c010a494:	a1 c0 bf 19 c0       	mov    0xc019bfc0,%eax$/;"	l
c010a499	obj/kernel.asm	/^c010a499:	85 c0                	test   %eax,%eax$/;"	l
c010a49b	obj/kernel.asm	/^c010a49b:	74 0c                	je     c010a4a9 <proc_init+0x152>$/;"	l
c010a49d	obj/kernel.asm	/^c010a49d:	a1 c0 bf 19 c0       	mov    0xc019bfc0,%eax$/;"	l
c010a4a2	obj/kernel.asm	/^c010a4a2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a4a5	obj/kernel.asm	/^c010a4a5:	85 c0                	test   %eax,%eax$/;"	l
c010a4a7	obj/kernel.asm	/^c010a4a7:	74 19                	je     c010a4c2 <proc_init+0x16b>$/;"	l
c010a4a9	obj/kernel.asm	/^c010a4a9:	68 d4 d8 10 c0       	push   $0xc010d8d4$/;"	l
c010a4ae	obj/kernel.asm	/^c010a4ae:	68 e5 d5 10 c0       	push   $0xc010d5e5$/;"	l
c010a4b3	obj/kernel.asm	/^c010a4b3:	68 7d 03 00 00       	push   $0x37d$/;"	l
c010a4b8	obj/kernel.asm	/^c010a4b8:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c010a4bd	obj/kernel.asm	/^c010a4bd:	e8 18 5f ff ff       	call   c01003da <__panic>$/;"	l
c010a4c2	obj/kernel.asm	/^c010a4c2:	a1 c4 bf 19 c0       	mov    0xc019bfc4,%eax$/;"	l
c010a4c7	obj/kernel.asm	/^c010a4c7:	85 c0                	test   %eax,%eax$/;"	l
c010a4c9	obj/kernel.asm	/^c010a4c9:	74 0d                	je     c010a4d8 <proc_init+0x181>$/;"	l
c010a4cb	obj/kernel.asm	/^c010a4cb:	a1 c4 bf 19 c0       	mov    0xc019bfc4,%eax$/;"	l
c010a4d0	obj/kernel.asm	/^c010a4d0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a4d3	obj/kernel.asm	/^c010a4d3:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a4d6	obj/kernel.asm	/^c010a4d6:	74 19                	je     c010a4f1 <proc_init+0x19a>$/;"	l
c010a4d8	obj/kernel.asm	/^c010a4d8:	68 fc d8 10 c0       	push   $0xc010d8fc$/;"	l
c010a4dd	obj/kernel.asm	/^c010a4dd:	68 e5 d5 10 c0       	push   $0xc010d5e5$/;"	l
c010a4e2	obj/kernel.asm	/^c010a4e2:	68 7e 03 00 00       	push   $0x37e$/;"	l
c010a4e7	obj/kernel.asm	/^c010a4e7:	68 18 d5 10 c0       	push   $0xc010d518$/;"	l
c010a4ec	obj/kernel.asm	/^c010a4ec:	e8 e9 5e ff ff       	call   c01003da <__panic>$/;"	l
c010a4f1	obj/kernel.asm	/^c010a4f1:	c9                   	leave  $/;"	l
c010a4f2	obj/kernel.asm	/^c010a4f2:	c3                   	ret    $/;"	l
c010a4f3	obj/kernel.asm	/^c010a4f3 <cpu_idle>:$/;"	l
c010a4f3	obj/kernel.asm	/^c010a4f3:	55                   	push   %ebp$/;"	l
c010a4f4	obj/kernel.asm	/^c010a4f4:	89 e5                	mov    %esp,%ebp$/;"	l
c010a4f6	obj/kernel.asm	/^c010a4f6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a4f9	obj/kernel.asm	/^c010a4f9:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010a4fe	obj/kernel.asm	/^c010a4fe:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a501	obj/kernel.asm	/^c010a501:	85 c0                	test   %eax,%eax$/;"	l
c010a503	obj/kernel.asm	/^c010a503:	74 05                	je     c010a50a <cpu_idle+0x17>$/;"	l
c010a505	obj/kernel.asm	/^c010a505:	e8 b3 00 00 00       	call   c010a5bd <schedule>$/;"	l
c010a50a	obj/kernel.asm	/^c010a50a:	eb ed                	jmp    c010a4f9 <cpu_idle+0x6>$/;"	l
c010a50c	obj/kernel.asm	/^c010a50c <__intr_save>:$/;"	l
c010a50c	obj/kernel.asm	/^c010a50c:	55                   	push   %ebp$/;"	l
c010a50d	obj/kernel.asm	/^c010a50d:	89 e5                	mov    %esp,%ebp$/;"	l
c010a50f	obj/kernel.asm	/^c010a50f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a512	obj/kernel.asm	/^c010a512:	9c                   	pushf  $/;"	l
c010a513	obj/kernel.asm	/^c010a513:	58                   	pop    %eax$/;"	l
c010a514	obj/kernel.asm	/^c010a514:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a517	obj/kernel.asm	/^c010a517:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a51a	obj/kernel.asm	/^c010a51a:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010a51f	obj/kernel.asm	/^c010a51f:	85 c0                	test   %eax,%eax$/;"	l
c010a521	obj/kernel.asm	/^c010a521:	74 0c                	je     c010a52f <__intr_save+0x23>$/;"	l
c010a523	obj/kernel.asm	/^c010a523:	e8 75 7b ff ff       	call   c010209d <intr_disable>$/;"	l
c010a528	obj/kernel.asm	/^c010a528:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010a52d	obj/kernel.asm	/^c010a52d:	eb 05                	jmp    c010a534 <__intr_save+0x28>$/;"	l
c010a52f	obj/kernel.asm	/^c010a52f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a534	obj/kernel.asm	/^c010a534:	c9                   	leave  $/;"	l
c010a535	obj/kernel.asm	/^c010a535:	c3                   	ret    $/;"	l
c010a536	obj/kernel.asm	/^c010a536 <__intr_restore>:$/;"	l
c010a536	obj/kernel.asm	/^c010a536:	55                   	push   %ebp$/;"	l
c010a537	obj/kernel.asm	/^c010a537:	89 e5                	mov    %esp,%ebp$/;"	l
c010a539	obj/kernel.asm	/^c010a539:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a53c	obj/kernel.asm	/^c010a53c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010a540	obj/kernel.asm	/^c010a540:	74 05                	je     c010a547 <__intr_restore+0x11>$/;"	l
c010a542	obj/kernel.asm	/^c010a542:	e8 50 7b ff ff       	call   c0102097 <intr_enable>$/;"	l
c010a547	obj/kernel.asm	/^c010a547:	c9                   	leave  $/;"	l
c010a548	obj/kernel.asm	/^c010a548:	c3                   	ret    $/;"	l
c010a549	obj/kernel.asm	/^c010a549 <wakeup_proc>:$/;"	l
c010a549	obj/kernel.asm	/^c010a549:	55                   	push   %ebp$/;"	l
c010a54a	obj/kernel.asm	/^c010a54a:	89 e5                	mov    %esp,%ebp$/;"	l
c010a54c	obj/kernel.asm	/^c010a54c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a54f	obj/kernel.asm	/^c010a54f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a552	obj/kernel.asm	/^c010a552:	8b 00                	mov    (%eax),%eax$/;"	l
c010a554	obj/kernel.asm	/^c010a554:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a557	obj/kernel.asm	/^c010a557:	75 16                	jne    c010a56f <wakeup_proc+0x26>$/;"	l
c010a559	obj/kernel.asm	/^c010a559:	68 23 d9 10 c0       	push   $0xc010d923$/;"	l
c010a55e	obj/kernel.asm	/^c010a55e:	68 3e d9 10 c0       	push   $0xc010d93e$/;"	l
c010a563	obj/kernel.asm	/^c010a563:	6a 09                	push   $0x9$/;"	l
c010a565	obj/kernel.asm	/^c010a565:	68 53 d9 10 c0       	push   $0xc010d953$/;"	l
c010a56a	obj/kernel.asm	/^c010a56a:	e8 6b 5e ff ff       	call   c01003da <__panic>$/;"	l
c010a56f	obj/kernel.asm	/^c010a56f:	e8 98 ff ff ff       	call   c010a50c <__intr_save>$/;"	l
c010a574	obj/kernel.asm	/^c010a574:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a577	obj/kernel.asm	/^c010a577:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a57a	obj/kernel.asm	/^c010a57a:	8b 00                	mov    (%eax),%eax$/;"	l
c010a57c	obj/kernel.asm	/^c010a57c:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a57f	obj/kernel.asm	/^c010a57f:	74 15                	je     c010a596 <wakeup_proc+0x4d>$/;"	l
c010a581	obj/kernel.asm	/^c010a581:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a584	obj/kernel.asm	/^c010a584:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010a58a	obj/kernel.asm	/^c010a58a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a58d	obj/kernel.asm	/^c010a58d:	c7 40 6c 00 00 00 00 	movl   $0x0,0x6c(%eax)$/;"	l
c010a594	obj/kernel.asm	/^c010a594:	eb 17                	jmp    c010a5ad <wakeup_proc+0x64>$/;"	l
c010a596	obj/kernel.asm	/^c010a596:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a599	obj/kernel.asm	/^c010a599:	68 69 d9 10 c0       	push   $0xc010d969$/;"	l
c010a59e	obj/kernel.asm	/^c010a59e:	6a 12                	push   $0x12$/;"	l
c010a5a0	obj/kernel.asm	/^c010a5a0:	68 53 d9 10 c0       	push   $0xc010d953$/;"	l
c010a5a5	obj/kernel.asm	/^c010a5a5:	e8 9d 5e ff ff       	call   c0100447 <__warn>$/;"	l
c010a5aa	obj/kernel.asm	/^c010a5aa:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a5ad	obj/kernel.asm	/^c010a5ad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a5b0	obj/kernel.asm	/^c010a5b0:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a5b3	obj/kernel.asm	/^c010a5b3:	e8 7e ff ff ff       	call   c010a536 <__intr_restore>$/;"	l
c010a5b8	obj/kernel.asm	/^c010a5b8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a5bb	obj/kernel.asm	/^c010a5bb:	c9                   	leave  $/;"	l
c010a5bc	obj/kernel.asm	/^c010a5bc:	c3                   	ret    $/;"	l
c010a5bd	obj/kernel.asm	/^c010a5bd <schedule>:$/;"	l
c010a5bd	obj/kernel.asm	/^c010a5bd:	55                   	push   %ebp$/;"	l
c010a5be	obj/kernel.asm	/^c010a5be:	89 e5                	mov    %esp,%ebp$/;"	l
c010a5c0	obj/kernel.asm	/^c010a5c0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a5c3	obj/kernel.asm	/^c010a5c3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010a5ca	obj/kernel.asm	/^c010a5ca:	e8 3d ff ff ff       	call   c010a50c <__intr_save>$/;"	l
c010a5cf	obj/kernel.asm	/^c010a5cf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a5d2	obj/kernel.asm	/^c010a5d2:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010a5d7	obj/kernel.asm	/^c010a5d7:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010a5de	obj/kernel.asm	/^c010a5de:	8b 15 c8 bf 19 c0    	mov    0xc019bfc8,%edx$/;"	l
c010a5e4	obj/kernel.asm	/^c010a5e4:	a1 c0 bf 19 c0       	mov    0xc019bfc0,%eax$/;"	l
c010a5e9	obj/kernel.asm	/^c010a5e9:	39 c2                	cmp    %eax,%edx$/;"	l
c010a5eb	obj/kernel.asm	/^c010a5eb:	74 0a                	je     c010a5f7 <schedule+0x3a>$/;"	l
c010a5ed	obj/kernel.asm	/^c010a5ed:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010a5f2	obj/kernel.asm	/^c010a5f2:	83 c0 58             	add    $0x58,%eax$/;"	l
c010a5f5	obj/kernel.asm	/^c010a5f5:	eb 05                	jmp    c010a5fc <schedule+0x3f>$/;"	l
c010a5f7	obj/kernel.asm	/^c010a5f7:	b8 78 e1 19 c0       	mov    $0xc019e178,%eax$/;"	l
c010a5fc	obj/kernel.asm	/^c010a5fc:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a5ff	obj/kernel.asm	/^c010a5ff:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a602	obj/kernel.asm	/^c010a602:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a605	obj/kernel.asm	/^c010a605:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a608	obj/kernel.asm	/^c010a608:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010a60b	obj/kernel.asm	/^c010a60b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a60e	obj/kernel.asm	/^c010a60e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a611	obj/kernel.asm	/^c010a611:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a614	obj/kernel.asm	/^c010a614:	81 7d f4 78 e1 19 c0 	cmpl   $0xc019e178,-0xc(%ebp)$/;"	l
c010a61b	obj/kernel.asm	/^c010a61b:	74 15                	je     c010a632 <schedule+0x75>$/;"	l
c010a61d	obj/kernel.asm	/^c010a61d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a620	obj/kernel.asm	/^c010a620:	83 e8 58             	sub    $0x58,%eax$/;"	l
c010a623	obj/kernel.asm	/^c010a623:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a626	obj/kernel.asm	/^c010a626:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a629	obj/kernel.asm	/^c010a629:	8b 00                	mov    (%eax),%eax$/;"	l
c010a62b	obj/kernel.asm	/^c010a62b:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a62e	obj/kernel.asm	/^c010a62e:	75 02                	jne    c010a632 <schedule+0x75>$/;"	l
c010a630	obj/kernel.asm	/^c010a630:	eb 08                	jmp    c010a63a <schedule+0x7d>$/;"	l
c010a632	obj/kernel.asm	/^c010a632:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a635	obj/kernel.asm	/^c010a635:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c010a638	obj/kernel.asm	/^c010a638:	75 cb                	jne    c010a605 <schedule+0x48>$/;"	l
c010a63a	obj/kernel.asm	/^c010a63a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a63e	obj/kernel.asm	/^c010a63e:	74 0a                	je     c010a64a <schedule+0x8d>$/;"	l
c010a640	obj/kernel.asm	/^c010a640:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a643	obj/kernel.asm	/^c010a643:	8b 00                	mov    (%eax),%eax$/;"	l
c010a645	obj/kernel.asm	/^c010a645:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a648	obj/kernel.asm	/^c010a648:	74 08                	je     c010a652 <schedule+0x95>$/;"	l
c010a64a	obj/kernel.asm	/^c010a64a:	a1 c0 bf 19 c0       	mov    0xc019bfc0,%eax$/;"	l
c010a64f	obj/kernel.asm	/^c010a64f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a652	obj/kernel.asm	/^c010a652:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a655	obj/kernel.asm	/^c010a655:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a658	obj/kernel.asm	/^c010a658:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010a65b	obj/kernel.asm	/^c010a65b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a65e	obj/kernel.asm	/^c010a65e:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010a661	obj/kernel.asm	/^c010a661:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010a666	obj/kernel.asm	/^c010a666:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010a669	obj/kernel.asm	/^c010a669:	74 0e                	je     c010a679 <schedule+0xbc>$/;"	l
c010a66b	obj/kernel.asm	/^c010a66b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a66e	obj/kernel.asm	/^c010a66e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a671	obj/kernel.asm	/^c010a671:	e8 16 ea ff ff       	call   c010908c <proc_run>$/;"	l
c010a676	obj/kernel.asm	/^c010a676:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a679	obj/kernel.asm	/^c010a679:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a67c	obj/kernel.asm	/^c010a67c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010a67f	obj/kernel.asm	/^c010a67f:	e8 b2 fe ff ff       	call   c010a536 <__intr_restore>$/;"	l
c010a684	obj/kernel.asm	/^c010a684:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a687	obj/kernel.asm	/^c010a687:	c9                   	leave  $/;"	l
c010a688	obj/kernel.asm	/^c010a688:	c3                   	ret    $/;"	l
c010a689	obj/kernel.asm	/^c010a689 <sys_exit>:$/;"	l
c010a689	obj/kernel.asm	/^c010a689:	55                   	push   %ebp$/;"	l
c010a68a	obj/kernel.asm	/^c010a68a:	89 e5                	mov    %esp,%ebp$/;"	l
c010a68c	obj/kernel.asm	/^c010a68c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a68f	obj/kernel.asm	/^c010a68f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a692	obj/kernel.asm	/^c010a692:	8b 00                	mov    (%eax),%eax$/;"	l
c010a694	obj/kernel.asm	/^c010a694:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a697	obj/kernel.asm	/^c010a697:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a69a	obj/kernel.asm	/^c010a69a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a69d	obj/kernel.asm	/^c010a69d:	e8 14 f0 ff ff       	call   c01096b6 <do_exit>$/;"	l
c010a6a2	obj/kernel.asm	/^c010a6a2:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a6a5	obj/kernel.asm	/^c010a6a5:	c9                   	leave  $/;"	l
c010a6a6	obj/kernel.asm	/^c010a6a6:	c3                   	ret    $/;"	l
c010a6a7	obj/kernel.asm	/^c010a6a7 <sys_fork>:$/;"	l
c010a6a7	obj/kernel.asm	/^c010a6a7:	55                   	push   %ebp$/;"	l
c010a6a8	obj/kernel.asm	/^c010a6a8:	89 e5                	mov    %esp,%ebp$/;"	l
c010a6aa	obj/kernel.asm	/^c010a6aa:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a6ad	obj/kernel.asm	/^c010a6ad:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010a6b2	obj/kernel.asm	/^c010a6b2:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a6b5	obj/kernel.asm	/^c010a6b5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a6b8	obj/kernel.asm	/^c010a6b8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a6bb	obj/kernel.asm	/^c010a6bb:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010a6be	obj/kernel.asm	/^c010a6be:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a6c1	obj/kernel.asm	/^c010a6c1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a6c4	obj/kernel.asm	/^c010a6c4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a6c7	obj/kernel.asm	/^c010a6c7:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a6ca	obj/kernel.asm	/^c010a6ca:	6a 00                	push   $0x0$/;"	l
c010a6cc	obj/kernel.asm	/^c010a6cc:	e8 c0 ee ff ff       	call   c0109591 <do_fork>$/;"	l
c010a6d1	obj/kernel.asm	/^c010a6d1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a6d4	obj/kernel.asm	/^c010a6d4:	c9                   	leave  $/;"	l
c010a6d5	obj/kernel.asm	/^c010a6d5:	c3                   	ret    $/;"	l
c010a6d6	obj/kernel.asm	/^c010a6d6 <sys_wait>:$/;"	l
c010a6d6	obj/kernel.asm	/^c010a6d6:	55                   	push   %ebp$/;"	l
c010a6d7	obj/kernel.asm	/^c010a6d7:	89 e5                	mov    %esp,%ebp$/;"	l
c010a6d9	obj/kernel.asm	/^c010a6d9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a6dc	obj/kernel.asm	/^c010a6dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a6df	obj/kernel.asm	/^c010a6df:	8b 00                	mov    (%eax),%eax$/;"	l
c010a6e1	obj/kernel.asm	/^c010a6e1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a6e4	obj/kernel.asm	/^c010a6e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a6e7	obj/kernel.asm	/^c010a6e7:	83 c0 04             	add    $0x4,%eax$/;"	l
c010a6ea	obj/kernel.asm	/^c010a6ea:	8b 00                	mov    (%eax),%eax$/;"	l
c010a6ec	obj/kernel.asm	/^c010a6ec:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a6ef	obj/kernel.asm	/^c010a6ef:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a6f2	obj/kernel.asm	/^c010a6f2:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a6f5	obj/kernel.asm	/^c010a6f5:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a6f8	obj/kernel.asm	/^c010a6f8:	e8 84 f8 ff ff       	call   c0109f81 <do_wait>$/;"	l
c010a6fd	obj/kernel.asm	/^c010a6fd:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a700	obj/kernel.asm	/^c010a700:	c9                   	leave  $/;"	l
c010a701	obj/kernel.asm	/^c010a701:	c3                   	ret    $/;"	l
c010a702	obj/kernel.asm	/^c010a702 <sys_exec>:$/;"	l
c010a702	obj/kernel.asm	/^c010a702:	55                   	push   %ebp$/;"	l
c010a703	obj/kernel.asm	/^c010a703:	89 e5                	mov    %esp,%ebp$/;"	l
c010a705	obj/kernel.asm	/^c010a705:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a708	obj/kernel.asm	/^c010a708:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a70b	obj/kernel.asm	/^c010a70b:	8b 00                	mov    (%eax),%eax$/;"	l
c010a70d	obj/kernel.asm	/^c010a70d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a710	obj/kernel.asm	/^c010a710:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a713	obj/kernel.asm	/^c010a713:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a716	obj/kernel.asm	/^c010a716:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a719	obj/kernel.asm	/^c010a719:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a71c	obj/kernel.asm	/^c010a71c:	83 c0 08             	add    $0x8,%eax$/;"	l
c010a71f	obj/kernel.asm	/^c010a71f:	8b 00                	mov    (%eax),%eax$/;"	l
c010a721	obj/kernel.asm	/^c010a721:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a724	obj/kernel.asm	/^c010a724:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a727	obj/kernel.asm	/^c010a727:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a72a	obj/kernel.asm	/^c010a72a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a72d	obj/kernel.asm	/^c010a72d:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010a730	obj/kernel.asm	/^c010a730:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010a733	obj/kernel.asm	/^c010a733:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a736	obj/kernel.asm	/^c010a736:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a739	obj/kernel.asm	/^c010a739:	e8 0d f7 ff ff       	call   c0109e4b <do_execve>$/;"	l
c010a73e	obj/kernel.asm	/^c010a73e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a741	obj/kernel.asm	/^c010a741:	c9                   	leave  $/;"	l
c010a742	obj/kernel.asm	/^c010a742:	c3                   	ret    $/;"	l
c010a743	obj/kernel.asm	/^c010a743 <sys_yield>:$/;"	l
c010a743	obj/kernel.asm	/^c010a743:	55                   	push   %ebp$/;"	l
c010a744	obj/kernel.asm	/^c010a744:	89 e5                	mov    %esp,%ebp$/;"	l
c010a746	obj/kernel.asm	/^c010a746:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a749	obj/kernel.asm	/^c010a749:	e8 1d f8 ff ff       	call   c0109f6b <do_yield>$/;"	l
c010a74e	obj/kernel.asm	/^c010a74e:	c9                   	leave  $/;"	l
c010a74f	obj/kernel.asm	/^c010a74f:	c3                   	ret    $/;"	l
c010a750	obj/kernel.asm	/^c010a750 <sys_kill>:$/;"	l
c010a750	obj/kernel.asm	/^c010a750:	55                   	push   %ebp$/;"	l
c010a751	obj/kernel.asm	/^c010a751:	89 e5                	mov    %esp,%ebp$/;"	l
c010a753	obj/kernel.asm	/^c010a753:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a756	obj/kernel.asm	/^c010a756:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a759	obj/kernel.asm	/^c010a759:	8b 00                	mov    (%eax),%eax$/;"	l
c010a75b	obj/kernel.asm	/^c010a75b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a75e	obj/kernel.asm	/^c010a75e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a761	obj/kernel.asm	/^c010a761:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a764	obj/kernel.asm	/^c010a764:	e8 a3 f9 ff ff       	call   c010a10c <do_kill>$/;"	l
c010a769	obj/kernel.asm	/^c010a769:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a76c	obj/kernel.asm	/^c010a76c:	c9                   	leave  $/;"	l
c010a76d	obj/kernel.asm	/^c010a76d:	c3                   	ret    $/;"	l
c010a76e	obj/kernel.asm	/^c010a76e <sys_getpid>:$/;"	l
c010a76e	obj/kernel.asm	/^c010a76e:	55                   	push   %ebp$/;"	l
c010a76f	obj/kernel.asm	/^c010a76f:	89 e5                	mov    %esp,%ebp$/;"	l
c010a771	obj/kernel.asm	/^c010a771:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010a776	obj/kernel.asm	/^c010a776:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a779	obj/kernel.asm	/^c010a779:	5d                   	pop    %ebp$/;"	l
c010a77a	obj/kernel.asm	/^c010a77a:	c3                   	ret    $/;"	l
c010a77b	obj/kernel.asm	/^c010a77b <sys_putc>:$/;"	l
c010a77b	obj/kernel.asm	/^c010a77b:	55                   	push   %ebp$/;"	l
c010a77c	obj/kernel.asm	/^c010a77c:	89 e5                	mov    %esp,%ebp$/;"	l
c010a77e	obj/kernel.asm	/^c010a77e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a781	obj/kernel.asm	/^c010a781:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a784	obj/kernel.asm	/^c010a784:	8b 00                	mov    (%eax),%eax$/;"	l
c010a786	obj/kernel.asm	/^c010a786:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a789	obj/kernel.asm	/^c010a789:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a78c	obj/kernel.asm	/^c010a78c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a78f	obj/kernel.asm	/^c010a78f:	e8 07 5b ff ff       	call   c010029b <cputchar>$/;"	l
c010a794	obj/kernel.asm	/^c010a794:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a797	obj/kernel.asm	/^c010a797:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a79c	obj/kernel.asm	/^c010a79c:	c9                   	leave  $/;"	l
c010a79d	obj/kernel.asm	/^c010a79d:	c3                   	ret    $/;"	l
c010a79e	obj/kernel.asm	/^c010a79e <sys_pgdir>:$/;"	l
c010a79e	obj/kernel.asm	/^c010a79e:	55                   	push   %ebp$/;"	l
c010a79f	obj/kernel.asm	/^c010a79f:	89 e5                	mov    %esp,%ebp$/;"	l
c010a7a1	obj/kernel.asm	/^c010a7a1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a7a4	obj/kernel.asm	/^c010a7a4:	e8 1e a9 ff ff       	call   c01050c7 <print_pgdir>$/;"	l
c010a7a9	obj/kernel.asm	/^c010a7a9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a7ae	obj/kernel.asm	/^c010a7ae:	c9                   	leave  $/;"	l
c010a7af	obj/kernel.asm	/^c010a7af:	c3                   	ret    $/;"	l
c010a7b0	obj/kernel.asm	/^c010a7b0 <syscall>:$/;"	l
c010a7b0	obj/kernel.asm	/^c010a7b0:	55                   	push   %ebp$/;"	l
c010a7b1	obj/kernel.asm	/^c010a7b1:	89 e5                	mov    %esp,%ebp$/;"	l
c010a7b3	obj/kernel.asm	/^c010a7b3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a7b6	obj/kernel.asm	/^c010a7b6:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010a7bb	obj/kernel.asm	/^c010a7bb:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a7be	obj/kernel.asm	/^c010a7be:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a7c1	obj/kernel.asm	/^c010a7c1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a7c4	obj/kernel.asm	/^c010a7c4:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010a7c7	obj/kernel.asm	/^c010a7c7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a7ca	obj/kernel.asm	/^c010a7ca:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a7ce	obj/kernel.asm	/^c010a7ce:	78 62                	js     c010a832 <syscall+0x82>$/;"	l
c010a7d0	obj/kernel.asm	/^c010a7d0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a7d3	obj/kernel.asm	/^c010a7d3:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
c010a7d6	obj/kernel.asm	/^c010a7d6:	77 5a                	ja     c010a832 <syscall+0x82>$/;"	l
c010a7d8	obj/kernel.asm	/^c010a7d8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a7db	obj/kernel.asm	/^c010a7db:	8b 04 85 00 9b 12 c0 	mov    -0x3fed6500(,%eax,4),%eax$/;"	l
c010a7e2	obj/kernel.asm	/^c010a7e2:	85 c0                	test   %eax,%eax$/;"	l
c010a7e4	obj/kernel.asm	/^c010a7e4:	74 4c                	je     c010a832 <syscall+0x82>$/;"	l
c010a7e6	obj/kernel.asm	/^c010a7e6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a7e9	obj/kernel.asm	/^c010a7e9:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a7ec	obj/kernel.asm	/^c010a7ec:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010a7ef	obj/kernel.asm	/^c010a7ef:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a7f2	obj/kernel.asm	/^c010a7f2:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a7f5	obj/kernel.asm	/^c010a7f5:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010a7f8	obj/kernel.asm	/^c010a7f8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a7fb	obj/kernel.asm	/^c010a7fb:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a7fe	obj/kernel.asm	/^c010a7fe:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010a801	obj/kernel.asm	/^c010a801:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a804	obj/kernel.asm	/^c010a804:	8b 00                	mov    (%eax),%eax$/;"	l
c010a806	obj/kernel.asm	/^c010a806:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a809	obj/kernel.asm	/^c010a809:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a80c	obj/kernel.asm	/^c010a80c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a80f	obj/kernel.asm	/^c010a80f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a812	obj/kernel.asm	/^c010a812:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a815	obj/kernel.asm	/^c010a815:	8b 04 85 00 9b 12 c0 	mov    -0x3fed6500(,%eax,4),%eax$/;"	l
c010a81c	obj/kernel.asm	/^c010a81c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a81f	obj/kernel.asm	/^c010a81f:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c010a822	obj/kernel.asm	/^c010a822:	52                   	push   %edx$/;"	l
c010a823	obj/kernel.asm	/^c010a823:	ff d0                	call   *%eax$/;"	l
c010a825	obj/kernel.asm	/^c010a825:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a828	obj/kernel.asm	/^c010a828:	89 c2                	mov    %eax,%edx$/;"	l
c010a82a	obj/kernel.asm	/^c010a82a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a82d	obj/kernel.asm	/^c010a82d:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010a830	obj/kernel.asm	/^c010a830:	eb 37                	jmp    c010a869 <syscall+0xb9>$/;"	l
c010a832	obj/kernel.asm	/^c010a832:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a835	obj/kernel.asm	/^c010a835:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a838	obj/kernel.asm	/^c010a838:	e8 f2 7b ff ff       	call   c010242f <print_trapframe>$/;"	l
c010a83d	obj/kernel.asm	/^c010a83d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a840	obj/kernel.asm	/^c010a840:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010a845	obj/kernel.asm	/^c010a845:	8d 50 48             	lea    0x48(%eax),%edx$/;"	l
c010a848	obj/kernel.asm	/^c010a848:	a1 c8 bf 19 c0       	mov    0xc019bfc8,%eax$/;"	l
c010a84d	obj/kernel.asm	/^c010a84d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a850	obj/kernel.asm	/^c010a850:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a853	obj/kernel.asm	/^c010a853:	52                   	push   %edx$/;"	l
c010a854	obj/kernel.asm	/^c010a854:	50                   	push   %eax$/;"	l
c010a855	obj/kernel.asm	/^c010a855:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a858	obj/kernel.asm	/^c010a858:	68 84 d9 10 c0       	push   $0xc010d984$/;"	l
c010a85d	obj/kernel.asm	/^c010a85d:	6a 63                	push   $0x63$/;"	l
c010a85f	obj/kernel.asm	/^c010a85f:	68 b0 d9 10 c0       	push   $0xc010d9b0$/;"	l
c010a864	obj/kernel.asm	/^c010a864:	e8 71 5b ff ff       	call   c01003da <__panic>$/;"	l
c010a869	obj/kernel.asm	/^c010a869:	c9                   	leave  $/;"	l
c010a86a	obj/kernel.asm	/^c010a86a:	c3                   	ret    $/;"	l
c010a86b	obj/kernel.asm	/^c010a86b <strlen>:$/;"	l
c010a86b	obj/kernel.asm	/^c010a86b:	55                   	push   %ebp$/;"	l
c010a86c	obj/kernel.asm	/^c010a86c:	89 e5                	mov    %esp,%ebp$/;"	l
c010a86e	obj/kernel.asm	/^c010a86e:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010a871	obj/kernel.asm	/^c010a871:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010a878	obj/kernel.asm	/^c010a878:	eb 04                	jmp    c010a87e <strlen+0x13>$/;"	l
c010a87a	obj/kernel.asm	/^c010a87a:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010a87e	obj/kernel.asm	/^c010a87e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a881	obj/kernel.asm	/^c010a881:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010a884	obj/kernel.asm	/^c010a884:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c010a887	obj/kernel.asm	/^c010a887:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010a88a	obj/kernel.asm	/^c010a88a:	84 c0                	test   %al,%al$/;"	l
c010a88c	obj/kernel.asm	/^c010a88c:	75 ec                	jne    c010a87a <strlen+0xf>$/;"	l
c010a88e	obj/kernel.asm	/^c010a88e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a891	obj/kernel.asm	/^c010a891:	c9                   	leave  $/;"	l
c010a892	obj/kernel.asm	/^c010a892:	c3                   	ret    $/;"	l
c010a893	obj/kernel.asm	/^c010a893 <strnlen>:$/;"	l
c010a893	obj/kernel.asm	/^c010a893:	55                   	push   %ebp$/;"	l
c010a894	obj/kernel.asm	/^c010a894:	89 e5                	mov    %esp,%ebp$/;"	l
c010a896	obj/kernel.asm	/^c010a896:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010a899	obj/kernel.asm	/^c010a899:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010a8a0	obj/kernel.asm	/^c010a8a0:	eb 04                	jmp    c010a8a6 <strnlen+0x13>$/;"	l
c010a8a2	obj/kernel.asm	/^c010a8a2:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010a8a6	obj/kernel.asm	/^c010a8a6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a8a9	obj/kernel.asm	/^c010a8a9:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010a8ac	obj/kernel.asm	/^c010a8ac:	73 10                	jae    c010a8be <strnlen+0x2b>$/;"	l
c010a8ae	obj/kernel.asm	/^c010a8ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a8b1	obj/kernel.asm	/^c010a8b1:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010a8b4	obj/kernel.asm	/^c010a8b4:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c010a8b7	obj/kernel.asm	/^c010a8b7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010a8ba	obj/kernel.asm	/^c010a8ba:	84 c0                	test   %al,%al$/;"	l
c010a8bc	obj/kernel.asm	/^c010a8bc:	75 e4                	jne    c010a8a2 <strnlen+0xf>$/;"	l
c010a8be	obj/kernel.asm	/^c010a8be:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a8c1	obj/kernel.asm	/^c010a8c1:	c9                   	leave  $/;"	l
c010a8c2	obj/kernel.asm	/^c010a8c2:	c3                   	ret    $/;"	l
c010a8c3	obj/kernel.asm	/^c010a8c3 <strcpy>:$/;"	l
c010a8c3	obj/kernel.asm	/^c010a8c3:	55                   	push   %ebp$/;"	l
c010a8c4	obj/kernel.asm	/^c010a8c4:	89 e5                	mov    %esp,%ebp$/;"	l
c010a8c6	obj/kernel.asm	/^c010a8c6:	57                   	push   %edi$/;"	l
c010a8c7	obj/kernel.asm	/^c010a8c7:	56                   	push   %esi$/;"	l
c010a8c8	obj/kernel.asm	/^c010a8c8:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010a8cb	obj/kernel.asm	/^c010a8cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a8ce	obj/kernel.asm	/^c010a8ce:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a8d1	obj/kernel.asm	/^c010a8d1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a8d4	obj/kernel.asm	/^c010a8d4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a8d7	obj/kernel.asm	/^c010a8d7:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010a8da	obj/kernel.asm	/^c010a8da:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a8dd	obj/kernel.asm	/^c010a8dd:	89 d1                	mov    %edx,%ecx$/;"	l
c010a8df	obj/kernel.asm	/^c010a8df:	89 c2                	mov    %eax,%edx$/;"	l
c010a8e1	obj/kernel.asm	/^c010a8e1:	89 ce                	mov    %ecx,%esi$/;"	l
c010a8e3	obj/kernel.asm	/^c010a8e3:	89 d7                	mov    %edx,%edi$/;"	l
c010a8e5	obj/kernel.asm	/^c010a8e5:	ac                   	lods   %ds:(%esi),%al$/;"	l
c010a8e6	obj/kernel.asm	/^c010a8e6:	aa                   	stos   %al,%es:(%edi)$/;"	l
c010a8e7	obj/kernel.asm	/^c010a8e7:	84 c0                	test   %al,%al$/;"	l
c010a8e9	obj/kernel.asm	/^c010a8e9:	75 fa                	jne    c010a8e5 <strcpy+0x22>$/;"	l
c010a8eb	obj/kernel.asm	/^c010a8eb:	89 fa                	mov    %edi,%edx$/;"	l
c010a8ed	obj/kernel.asm	/^c010a8ed:	89 f1                	mov    %esi,%ecx$/;"	l
c010a8ef	obj/kernel.asm	/^c010a8ef:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c010a8f2	obj/kernel.asm	/^c010a8f2:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010a8f5	obj/kernel.asm	/^c010a8f5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010a8f8	obj/kernel.asm	/^c010a8f8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a8fb	obj/kernel.asm	/^c010a8fb:	90                   	nop$/;"	l
c010a8fc	obj/kernel.asm	/^c010a8fc:	83 c4 20             	add    $0x20,%esp$/;"	l
c010a8ff	obj/kernel.asm	/^c010a8ff:	5e                   	pop    %esi$/;"	l
c010a900	obj/kernel.asm	/^c010a900:	5f                   	pop    %edi$/;"	l
c010a901	obj/kernel.asm	/^c010a901:	5d                   	pop    %ebp$/;"	l
c010a902	obj/kernel.asm	/^c010a902:	c3                   	ret    $/;"	l
c010a903	obj/kernel.asm	/^c010a903 <strncpy>:$/;"	l
c010a903	obj/kernel.asm	/^c010a903:	55                   	push   %ebp$/;"	l
c010a904	obj/kernel.asm	/^c010a904:	89 e5                	mov    %esp,%ebp$/;"	l
c010a906	obj/kernel.asm	/^c010a906:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010a909	obj/kernel.asm	/^c010a909:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a90c	obj/kernel.asm	/^c010a90c:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010a90f	obj/kernel.asm	/^c010a90f:	eb 21                	jmp    c010a932 <strncpy+0x2f>$/;"	l
c010a911	obj/kernel.asm	/^c010a911:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a914	obj/kernel.asm	/^c010a914:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c010a917	obj/kernel.asm	/^c010a917:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a91a	obj/kernel.asm	/^c010a91a:	88 10                	mov    %dl,(%eax)$/;"	l
c010a91c	obj/kernel.asm	/^c010a91c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a91f	obj/kernel.asm	/^c010a91f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010a922	obj/kernel.asm	/^c010a922:	84 c0                	test   %al,%al$/;"	l
c010a924	obj/kernel.asm	/^c010a924:	74 04                	je     c010a92a <strncpy+0x27>$/;"	l
c010a926	obj/kernel.asm	/^c010a926:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c010a92a	obj/kernel.asm	/^c010a92a:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010a92e	obj/kernel.asm	/^c010a92e:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010a932	obj/kernel.asm	/^c010a932:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010a936	obj/kernel.asm	/^c010a936:	75 d9                	jne    c010a911 <strncpy+0xe>$/;"	l
c010a938	obj/kernel.asm	/^c010a938:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a93b	obj/kernel.asm	/^c010a93b:	c9                   	leave  $/;"	l
c010a93c	obj/kernel.asm	/^c010a93c:	c3                   	ret    $/;"	l
c010a93d	obj/kernel.asm	/^c010a93d <strcmp>:$/;"	l
c010a93d	obj/kernel.asm	/^c010a93d:	55                   	push   %ebp$/;"	l
c010a93e	obj/kernel.asm	/^c010a93e:	89 e5                	mov    %esp,%ebp$/;"	l
c010a940	obj/kernel.asm	/^c010a940:	57                   	push   %edi$/;"	l
c010a941	obj/kernel.asm	/^c010a941:	56                   	push   %esi$/;"	l
c010a942	obj/kernel.asm	/^c010a942:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010a945	obj/kernel.asm	/^c010a945:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a948	obj/kernel.asm	/^c010a948:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a94b	obj/kernel.asm	/^c010a94b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a94e	obj/kernel.asm	/^c010a94e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a951	obj/kernel.asm	/^c010a951:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a954	obj/kernel.asm	/^c010a954:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a957	obj/kernel.asm	/^c010a957:	89 d1                	mov    %edx,%ecx$/;"	l
c010a959	obj/kernel.asm	/^c010a959:	89 c2                	mov    %eax,%edx$/;"	l
c010a95b	obj/kernel.asm	/^c010a95b:	89 ce                	mov    %ecx,%esi$/;"	l
c010a95d	obj/kernel.asm	/^c010a95d:	89 d7                	mov    %edx,%edi$/;"	l
c010a95f	obj/kernel.asm	/^c010a95f:	ac                   	lods   %ds:(%esi),%al$/;"	l
c010a960	obj/kernel.asm	/^c010a960:	ae                   	scas   %es:(%edi),%al$/;"	l
c010a961	obj/kernel.asm	/^c010a961:	75 08                	jne    c010a96b <strcmp+0x2e>$/;"	l
c010a963	obj/kernel.asm	/^c010a963:	84 c0                	test   %al,%al$/;"	l
c010a965	obj/kernel.asm	/^c010a965:	75 f8                	jne    c010a95f <strcmp+0x22>$/;"	l
c010a967	obj/kernel.asm	/^c010a967:	31 c0                	xor    %eax,%eax$/;"	l
c010a969	obj/kernel.asm	/^c010a969:	eb 04                	jmp    c010a96f <strcmp+0x32>$/;"	l
c010a96b	obj/kernel.asm	/^c010a96b:	19 c0                	sbb    %eax,%eax$/;"	l
c010a96d	obj/kernel.asm	/^c010a96d:	0c 01                	or     $0x1,%al$/;"	l
c010a96f	obj/kernel.asm	/^c010a96f:	89 fa                	mov    %edi,%edx$/;"	l
c010a971	obj/kernel.asm	/^c010a971:	89 f1                	mov    %esi,%ecx$/;"	l
c010a973	obj/kernel.asm	/^c010a973:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a976	obj/kernel.asm	/^c010a976:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c010a979	obj/kernel.asm	/^c010a979:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010a97c	obj/kernel.asm	/^c010a97c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a97f	obj/kernel.asm	/^c010a97f:	90                   	nop$/;"	l
c010a980	obj/kernel.asm	/^c010a980:	83 c4 20             	add    $0x20,%esp$/;"	l
c010a983	obj/kernel.asm	/^c010a983:	5e                   	pop    %esi$/;"	l
c010a984	obj/kernel.asm	/^c010a984:	5f                   	pop    %edi$/;"	l
c010a985	obj/kernel.asm	/^c010a985:	5d                   	pop    %ebp$/;"	l
c010a986	obj/kernel.asm	/^c010a986:	c3                   	ret    $/;"	l
c010a987	obj/kernel.asm	/^c010a987 <strncmp>:$/;"	l
c010a987	obj/kernel.asm	/^c010a987:	55                   	push   %ebp$/;"	l
c010a988	obj/kernel.asm	/^c010a988:	89 e5                	mov    %esp,%ebp$/;"	l
c010a98a	obj/kernel.asm	/^c010a98a:	eb 0c                	jmp    c010a998 <strncmp+0x11>$/;"	l
c010a98c	obj/kernel.asm	/^c010a98c:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010a990	obj/kernel.asm	/^c010a990:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010a994	obj/kernel.asm	/^c010a994:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c010a998	obj/kernel.asm	/^c010a998:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010a99c	obj/kernel.asm	/^c010a99c:	74 1a                	je     c010a9b8 <strncmp+0x31>$/;"	l
c010a99e	obj/kernel.asm	/^c010a99e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a9a1	obj/kernel.asm	/^c010a9a1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010a9a4	obj/kernel.asm	/^c010a9a4:	84 c0                	test   %al,%al$/;"	l
c010a9a6	obj/kernel.asm	/^c010a9a6:	74 10                	je     c010a9b8 <strncmp+0x31>$/;"	l
c010a9a8	obj/kernel.asm	/^c010a9a8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a9ab	obj/kernel.asm	/^c010a9ab:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c010a9ae	obj/kernel.asm	/^c010a9ae:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a9b1	obj/kernel.asm	/^c010a9b1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010a9b4	obj/kernel.asm	/^c010a9b4:	38 c2                	cmp    %al,%dl$/;"	l
c010a9b6	obj/kernel.asm	/^c010a9b6:	74 d4                	je     c010a98c <strncmp+0x5>$/;"	l
c010a9b8	obj/kernel.asm	/^c010a9b8:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010a9bc	obj/kernel.asm	/^c010a9bc:	74 18                	je     c010a9d6 <strncmp+0x4f>$/;"	l
c010a9be	obj/kernel.asm	/^c010a9be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a9c1	obj/kernel.asm	/^c010a9c1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010a9c4	obj/kernel.asm	/^c010a9c4:	0f b6 d0             	movzbl %al,%edx$/;"	l
c010a9c7	obj/kernel.asm	/^c010a9c7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a9ca	obj/kernel.asm	/^c010a9ca:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010a9cd	obj/kernel.asm	/^c010a9cd:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010a9d0	obj/kernel.asm	/^c010a9d0:	29 c2                	sub    %eax,%edx$/;"	l
c010a9d2	obj/kernel.asm	/^c010a9d2:	89 d0                	mov    %edx,%eax$/;"	l
c010a9d4	obj/kernel.asm	/^c010a9d4:	eb 05                	jmp    c010a9db <strncmp+0x54>$/;"	l
c010a9d6	obj/kernel.asm	/^c010a9d6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a9db	obj/kernel.asm	/^c010a9db:	5d                   	pop    %ebp$/;"	l
c010a9dc	obj/kernel.asm	/^c010a9dc:	c3                   	ret    $/;"	l
c010a9dd	obj/kernel.asm	/^c010a9dd <strchr>:$/;"	l
c010a9dd	obj/kernel.asm	/^c010a9dd:	55                   	push   %ebp$/;"	l
c010a9de	obj/kernel.asm	/^c010a9de:	89 e5                	mov    %esp,%ebp$/;"	l
c010a9e0	obj/kernel.asm	/^c010a9e0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a9e3	obj/kernel.asm	/^c010a9e3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a9e6	obj/kernel.asm	/^c010a9e6:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c010a9e9	obj/kernel.asm	/^c010a9e9:	eb 14                	jmp    c010a9ff <strchr+0x22>$/;"	l
c010a9eb	obj/kernel.asm	/^c010a9eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a9ee	obj/kernel.asm	/^c010a9ee:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010a9f1	obj/kernel.asm	/^c010a9f1:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c010a9f4	obj/kernel.asm	/^c010a9f4:	75 05                	jne    c010a9fb <strchr+0x1e>$/;"	l
c010a9f6	obj/kernel.asm	/^c010a9f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a9f9	obj/kernel.asm	/^c010a9f9:	eb 13                	jmp    c010aa0e <strchr+0x31>$/;"	l
c010a9fb	obj/kernel.asm	/^c010a9fb:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010a9ff	obj/kernel.asm	/^c010a9ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aa02	obj/kernel.asm	/^c010aa02:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010aa05	obj/kernel.asm	/^c010aa05:	84 c0                	test   %al,%al$/;"	l
c010aa07	obj/kernel.asm	/^c010aa07:	75 e2                	jne    c010a9eb <strchr+0xe>$/;"	l
c010aa09	obj/kernel.asm	/^c010aa09:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010aa0e	obj/kernel.asm	/^c010aa0e:	c9                   	leave  $/;"	l
c010aa0f	obj/kernel.asm	/^c010aa0f:	c3                   	ret    $/;"	l
c010aa10	obj/kernel.asm	/^c010aa10 <strfind>:$/;"	l
c010aa10	obj/kernel.asm	/^c010aa10:	55                   	push   %ebp$/;"	l
c010aa11	obj/kernel.asm	/^c010aa11:	89 e5                	mov    %esp,%ebp$/;"	l
c010aa13	obj/kernel.asm	/^c010aa13:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010aa16	obj/kernel.asm	/^c010aa16:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aa19	obj/kernel.asm	/^c010aa19:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c010aa1c	obj/kernel.asm	/^c010aa1c:	eb 11                	jmp    c010aa2f <strfind+0x1f>$/;"	l
c010aa1e	obj/kernel.asm	/^c010aa1e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aa21	obj/kernel.asm	/^c010aa21:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010aa24	obj/kernel.asm	/^c010aa24:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c010aa27	obj/kernel.asm	/^c010aa27:	75 02                	jne    c010aa2b <strfind+0x1b>$/;"	l
c010aa29	obj/kernel.asm	/^c010aa29:	eb 0e                	jmp    c010aa39 <strfind+0x29>$/;"	l
c010aa2b	obj/kernel.asm	/^c010aa2b:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010aa2f	obj/kernel.asm	/^c010aa2f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aa32	obj/kernel.asm	/^c010aa32:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010aa35	obj/kernel.asm	/^c010aa35:	84 c0                	test   %al,%al$/;"	l
c010aa37	obj/kernel.asm	/^c010aa37:	75 e5                	jne    c010aa1e <strfind+0xe>$/;"	l
c010aa39	obj/kernel.asm	/^c010aa39:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aa3c	obj/kernel.asm	/^c010aa3c:	c9                   	leave  $/;"	l
c010aa3d	obj/kernel.asm	/^c010aa3d:	c3                   	ret    $/;"	l
c010aa3e	obj/kernel.asm	/^c010aa3e <strtol>:$/;"	l
c010aa3e	obj/kernel.asm	/^c010aa3e:	55                   	push   %ebp$/;"	l
c010aa3f	obj/kernel.asm	/^c010aa3f:	89 e5                	mov    %esp,%ebp$/;"	l
c010aa41	obj/kernel.asm	/^c010aa41:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010aa44	obj/kernel.asm	/^c010aa44:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010aa4b	obj/kernel.asm	/^c010aa4b:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c010aa52	obj/kernel.asm	/^c010aa52:	eb 04                	jmp    c010aa58 <strtol+0x1a>$/;"	l
c010aa54	obj/kernel.asm	/^c010aa54:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010aa58	obj/kernel.asm	/^c010aa58:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aa5b	obj/kernel.asm	/^c010aa5b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010aa5e	obj/kernel.asm	/^c010aa5e:	3c 20                	cmp    $0x20,%al$/;"	l
c010aa60	obj/kernel.asm	/^c010aa60:	74 f2                	je     c010aa54 <strtol+0x16>$/;"	l
c010aa62	obj/kernel.asm	/^c010aa62:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aa65	obj/kernel.asm	/^c010aa65:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010aa68	obj/kernel.asm	/^c010aa68:	3c 09                	cmp    $0x9,%al$/;"	l
c010aa6a	obj/kernel.asm	/^c010aa6a:	74 e8                	je     c010aa54 <strtol+0x16>$/;"	l
c010aa6c	obj/kernel.asm	/^c010aa6c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aa6f	obj/kernel.asm	/^c010aa6f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010aa72	obj/kernel.asm	/^c010aa72:	3c 2b                	cmp    $0x2b,%al$/;"	l
c010aa74	obj/kernel.asm	/^c010aa74:	75 06                	jne    c010aa7c <strtol+0x3e>$/;"	l
c010aa76	obj/kernel.asm	/^c010aa76:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010aa7a	obj/kernel.asm	/^c010aa7a:	eb 15                	jmp    c010aa91 <strtol+0x53>$/;"	l
c010aa7c	obj/kernel.asm	/^c010aa7c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aa7f	obj/kernel.asm	/^c010aa7f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010aa82	obj/kernel.asm	/^c010aa82:	3c 2d                	cmp    $0x2d,%al$/;"	l
c010aa84	obj/kernel.asm	/^c010aa84:	75 0b                	jne    c010aa91 <strtol+0x53>$/;"	l
c010aa86	obj/kernel.asm	/^c010aa86:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010aa8a	obj/kernel.asm	/^c010aa8a:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)$/;"	l
c010aa91	obj/kernel.asm	/^c010aa91:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010aa95	obj/kernel.asm	/^c010aa95:	74 06                	je     c010aa9d <strtol+0x5f>$/;"	l
c010aa97	obj/kernel.asm	/^c010aa97:	83 7d 10 10          	cmpl   $0x10,0x10(%ebp)$/;"	l
c010aa9b	obj/kernel.asm	/^c010aa9b:	75 24                	jne    c010aac1 <strtol+0x83>$/;"	l
c010aa9d	obj/kernel.asm	/^c010aa9d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aaa0	obj/kernel.asm	/^c010aaa0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010aaa3	obj/kernel.asm	/^c010aaa3:	3c 30                	cmp    $0x30,%al$/;"	l
c010aaa5	obj/kernel.asm	/^c010aaa5:	75 1a                	jne    c010aac1 <strtol+0x83>$/;"	l
c010aaa7	obj/kernel.asm	/^c010aaa7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aaaa	obj/kernel.asm	/^c010aaaa:	83 c0 01             	add    $0x1,%eax$/;"	l
c010aaad	obj/kernel.asm	/^c010aaad:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010aab0	obj/kernel.asm	/^c010aab0:	3c 78                	cmp    $0x78,%al$/;"	l
c010aab2	obj/kernel.asm	/^c010aab2:	75 0d                	jne    c010aac1 <strtol+0x83>$/;"	l
c010aab4	obj/kernel.asm	/^c010aab4:	83 45 08 02          	addl   $0x2,0x8(%ebp)$/;"	l
c010aab8	obj/kernel.asm	/^c010aab8:	c7 45 10 10 00 00 00 	movl   $0x10,0x10(%ebp)$/;"	l
c010aabf	obj/kernel.asm	/^c010aabf:	eb 2a                	jmp    c010aaeb <strtol+0xad>$/;"	l
c010aac1	obj/kernel.asm	/^c010aac1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010aac5	obj/kernel.asm	/^c010aac5:	75 17                	jne    c010aade <strtol+0xa0>$/;"	l
c010aac7	obj/kernel.asm	/^c010aac7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aaca	obj/kernel.asm	/^c010aaca:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010aacd	obj/kernel.asm	/^c010aacd:	3c 30                	cmp    $0x30,%al$/;"	l
c010aacf	obj/kernel.asm	/^c010aacf:	75 0d                	jne    c010aade <strtol+0xa0>$/;"	l
c010aad1	obj/kernel.asm	/^c010aad1:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010aad5	obj/kernel.asm	/^c010aad5:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)$/;"	l
c010aadc	obj/kernel.asm	/^c010aadc:	eb 0d                	jmp    c010aaeb <strtol+0xad>$/;"	l
c010aade	obj/kernel.asm	/^c010aade:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010aae2	obj/kernel.asm	/^c010aae2:	75 07                	jne    c010aaeb <strtol+0xad>$/;"	l
c010aae4	obj/kernel.asm	/^c010aae4:	c7 45 10 0a 00 00 00 	movl   $0xa,0x10(%ebp)$/;"	l
c010aaeb	obj/kernel.asm	/^c010aaeb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aaee	obj/kernel.asm	/^c010aaee:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010aaf1	obj/kernel.asm	/^c010aaf1:	3c 2f                	cmp    $0x2f,%al$/;"	l
c010aaf3	obj/kernel.asm	/^c010aaf3:	7e 1b                	jle    c010ab10 <strtol+0xd2>$/;"	l
c010aaf5	obj/kernel.asm	/^c010aaf5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aaf8	obj/kernel.asm	/^c010aaf8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010aafb	obj/kernel.asm	/^c010aafb:	3c 39                	cmp    $0x39,%al$/;"	l
c010aafd	obj/kernel.asm	/^c010aafd:	7f 11                	jg     c010ab10 <strtol+0xd2>$/;"	l
c010aaff	obj/kernel.asm	/^c010aaff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ab02	obj/kernel.asm	/^c010ab02:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ab05	obj/kernel.asm	/^c010ab05:	0f be c0             	movsbl %al,%eax$/;"	l
c010ab08	obj/kernel.asm	/^c010ab08:	83 e8 30             	sub    $0x30,%eax$/;"	l
c010ab0b	obj/kernel.asm	/^c010ab0b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ab0e	obj/kernel.asm	/^c010ab0e:	eb 48                	jmp    c010ab58 <strtol+0x11a>$/;"	l
c010ab10	obj/kernel.asm	/^c010ab10:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ab13	obj/kernel.asm	/^c010ab13:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ab16	obj/kernel.asm	/^c010ab16:	3c 60                	cmp    $0x60,%al$/;"	l
c010ab18	obj/kernel.asm	/^c010ab18:	7e 1b                	jle    c010ab35 <strtol+0xf7>$/;"	l
c010ab1a	obj/kernel.asm	/^c010ab1a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ab1d	obj/kernel.asm	/^c010ab1d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ab20	obj/kernel.asm	/^c010ab20:	3c 7a                	cmp    $0x7a,%al$/;"	l
c010ab22	obj/kernel.asm	/^c010ab22:	7f 11                	jg     c010ab35 <strtol+0xf7>$/;"	l
c010ab24	obj/kernel.asm	/^c010ab24:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ab27	obj/kernel.asm	/^c010ab27:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ab2a	obj/kernel.asm	/^c010ab2a:	0f be c0             	movsbl %al,%eax$/;"	l
c010ab2d	obj/kernel.asm	/^c010ab2d:	83 e8 57             	sub    $0x57,%eax$/;"	l
c010ab30	obj/kernel.asm	/^c010ab30:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ab33	obj/kernel.asm	/^c010ab33:	eb 23                	jmp    c010ab58 <strtol+0x11a>$/;"	l
c010ab35	obj/kernel.asm	/^c010ab35:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ab38	obj/kernel.asm	/^c010ab38:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ab3b	obj/kernel.asm	/^c010ab3b:	3c 40                	cmp    $0x40,%al$/;"	l
c010ab3d	obj/kernel.asm	/^c010ab3d:	7e 3d                	jle    c010ab7c <strtol+0x13e>$/;"	l
c010ab3f	obj/kernel.asm	/^c010ab3f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ab42	obj/kernel.asm	/^c010ab42:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ab45	obj/kernel.asm	/^c010ab45:	3c 5a                	cmp    $0x5a,%al$/;"	l
c010ab47	obj/kernel.asm	/^c010ab47:	7f 33                	jg     c010ab7c <strtol+0x13e>$/;"	l
c010ab49	obj/kernel.asm	/^c010ab49:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ab4c	obj/kernel.asm	/^c010ab4c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ab4f	obj/kernel.asm	/^c010ab4f:	0f be c0             	movsbl %al,%eax$/;"	l
c010ab52	obj/kernel.asm	/^c010ab52:	83 e8 37             	sub    $0x37,%eax$/;"	l
c010ab55	obj/kernel.asm	/^c010ab55:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ab58	obj/kernel.asm	/^c010ab58:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ab5b	obj/kernel.asm	/^c010ab5b:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010ab5e	obj/kernel.asm	/^c010ab5e:	7c 02                	jl     c010ab62 <strtol+0x124>$/;"	l
c010ab60	obj/kernel.asm	/^c010ab60:	eb 1a                	jmp    c010ab7c <strtol+0x13e>$/;"	l
c010ab62	obj/kernel.asm	/^c010ab62:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010ab66	obj/kernel.asm	/^c010ab66:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010ab69	obj/kernel.asm	/^c010ab69:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
c010ab6d	obj/kernel.asm	/^c010ab6d:	89 c2                	mov    %eax,%edx$/;"	l
c010ab6f	obj/kernel.asm	/^c010ab6f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ab72	obj/kernel.asm	/^c010ab72:	01 d0                	add    %edx,%eax$/;"	l
c010ab74	obj/kernel.asm	/^c010ab74:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010ab77	obj/kernel.asm	/^c010ab77:	e9 6f ff ff ff       	jmp    c010aaeb <strtol+0xad>$/;"	l
c010ab7c	obj/kernel.asm	/^c010ab7c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010ab80	obj/kernel.asm	/^c010ab80:	74 08                	je     c010ab8a <strtol+0x14c>$/;"	l
c010ab82	obj/kernel.asm	/^c010ab82:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ab85	obj/kernel.asm	/^c010ab85:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010ab88	obj/kernel.asm	/^c010ab88:	89 10                	mov    %edx,(%eax)$/;"	l
c010ab8a	obj/kernel.asm	/^c010ab8a:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c010ab8e	obj/kernel.asm	/^c010ab8e:	74 07                	je     c010ab97 <strtol+0x159>$/;"	l
c010ab90	obj/kernel.asm	/^c010ab90:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010ab93	obj/kernel.asm	/^c010ab93:	f7 d8                	neg    %eax$/;"	l
c010ab95	obj/kernel.asm	/^c010ab95:	eb 03                	jmp    c010ab9a <strtol+0x15c>$/;"	l
c010ab97	obj/kernel.asm	/^c010ab97:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010ab9a	obj/kernel.asm	/^c010ab9a:	c9                   	leave  $/;"	l
c010ab9b	obj/kernel.asm	/^c010ab9b:	c3                   	ret    $/;"	l
c010ab9c	obj/kernel.asm	/^c010ab9c <memset>:$/;"	l
c010ab9c	obj/kernel.asm	/^c010ab9c:	55                   	push   %ebp$/;"	l
c010ab9d	obj/kernel.asm	/^c010ab9d:	89 e5                	mov    %esp,%ebp$/;"	l
c010ab9f	obj/kernel.asm	/^c010ab9f:	57                   	push   %edi$/;"	l
c010aba0	obj/kernel.asm	/^c010aba0:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010aba3	obj/kernel.asm	/^c010aba3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aba6	obj/kernel.asm	/^c010aba6:	88 45 d8             	mov    %al,-0x28(%ebp)$/;"	l
c010aba9	obj/kernel.asm	/^c010aba9:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
c010abad	obj/kernel.asm	/^c010abad:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010abb0	obj/kernel.asm	/^c010abb0:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c010abb3	obj/kernel.asm	/^c010abb3:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c010abb6	obj/kernel.asm	/^c010abb6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010abb9	obj/kernel.asm	/^c010abb9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010abbc	obj/kernel.asm	/^c010abbc:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c010abbf	obj/kernel.asm	/^c010abbf:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax$/;"	l
c010abc3	obj/kernel.asm	/^c010abc3:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010abc6	obj/kernel.asm	/^c010abc6:	89 d7                	mov    %edx,%edi$/;"	l
c010abc8	obj/kernel.asm	/^c010abc8:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
c010abca	obj/kernel.asm	/^c010abca:	89 fa                	mov    %edi,%edx$/;"	l
c010abcc	obj/kernel.asm	/^c010abcc:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c010abcf	obj/kernel.asm	/^c010abcf:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010abd2	obj/kernel.asm	/^c010abd2:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010abd5	obj/kernel.asm	/^c010abd5:	90                   	nop$/;"	l
c010abd6	obj/kernel.asm	/^c010abd6:	83 c4 24             	add    $0x24,%esp$/;"	l
c010abd9	obj/kernel.asm	/^c010abd9:	5f                   	pop    %edi$/;"	l
c010abda	obj/kernel.asm	/^c010abda:	5d                   	pop    %ebp$/;"	l
c010abdb	obj/kernel.asm	/^c010abdb:	c3                   	ret    $/;"	l
c010abdc	obj/kernel.asm	/^c010abdc <memmove>:$/;"	l
c010abdc	obj/kernel.asm	/^c010abdc:	55                   	push   %ebp$/;"	l
c010abdd	obj/kernel.asm	/^c010abdd:	89 e5                	mov    %esp,%ebp$/;"	l
c010abdf	obj/kernel.asm	/^c010abdf:	57                   	push   %edi$/;"	l
c010abe0	obj/kernel.asm	/^c010abe0:	56                   	push   %esi$/;"	l
c010abe1	obj/kernel.asm	/^c010abe1:	53                   	push   %ebx$/;"	l
c010abe2	obj/kernel.asm	/^c010abe2:	83 ec 30             	sub    $0x30,%esp$/;"	l
c010abe5	obj/kernel.asm	/^c010abe5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010abe8	obj/kernel.asm	/^c010abe8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010abeb	obj/kernel.asm	/^c010abeb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010abee	obj/kernel.asm	/^c010abee:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010abf1	obj/kernel.asm	/^c010abf1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010abf4	obj/kernel.asm	/^c010abf4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010abf7	obj/kernel.asm	/^c010abf7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010abfa	obj/kernel.asm	/^c010abfa:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010abfd	obj/kernel.asm	/^c010abfd:	73 42                	jae    c010ac41 <memmove+0x65>$/;"	l
c010abff	obj/kernel.asm	/^c010abff:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ac02	obj/kernel.asm	/^c010ac02:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010ac05	obj/kernel.asm	/^c010ac05:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ac08	obj/kernel.asm	/^c010ac08:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010ac0b	obj/kernel.asm	/^c010ac0b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ac0e	obj/kernel.asm	/^c010ac0e:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010ac11	obj/kernel.asm	/^c010ac11:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010ac14	obj/kernel.asm	/^c010ac14:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010ac17	obj/kernel.asm	/^c010ac17:	89 c1                	mov    %eax,%ecx$/;"	l
c010ac19	obj/kernel.asm	/^c010ac19:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010ac1c	obj/kernel.asm	/^c010ac1c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ac1f	obj/kernel.asm	/^c010ac1f:	89 d7                	mov    %edx,%edi$/;"	l
c010ac21	obj/kernel.asm	/^c010ac21:	89 c6                	mov    %eax,%esi$/;"	l
c010ac23	obj/kernel.asm	/^c010ac23:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c010ac25	obj/kernel.asm	/^c010ac25:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c010ac28	obj/kernel.asm	/^c010ac28:	83 e1 03             	and    $0x3,%ecx$/;"	l
c010ac2b	obj/kernel.asm	/^c010ac2b:	74 02                	je     c010ac2f <memmove+0x53>$/;"	l
c010ac2d	obj/kernel.asm	/^c010ac2d:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c010ac2f	obj/kernel.asm	/^c010ac2f:	89 f0                	mov    %esi,%eax$/;"	l
c010ac31	obj/kernel.asm	/^c010ac31:	89 fa                	mov    %edi,%edx$/;"	l
c010ac33	obj/kernel.asm	/^c010ac33:	89 4d d8             	mov    %ecx,-0x28(%ebp)$/;"	l
c010ac36	obj/kernel.asm	/^c010ac36:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010ac39	obj/kernel.asm	/^c010ac39:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010ac3c	obj/kernel.asm	/^c010ac3c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010ac3f	obj/kernel.asm	/^c010ac3f:	eb 36                	jmp    c010ac77 <memmove+0x9b>$/;"	l
c010ac41	obj/kernel.asm	/^c010ac41:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ac44	obj/kernel.asm	/^c010ac44:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010ac47	obj/kernel.asm	/^c010ac47:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ac4a	obj/kernel.asm	/^c010ac4a:	01 c2                	add    %eax,%edx$/;"	l
c010ac4c	obj/kernel.asm	/^c010ac4c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ac4f	obj/kernel.asm	/^c010ac4f:	8d 48 ff             	lea    -0x1(%eax),%ecx$/;"	l
c010ac52	obj/kernel.asm	/^c010ac52:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ac55	obj/kernel.asm	/^c010ac55:	8d 1c 01             	lea    (%ecx,%eax,1),%ebx$/;"	l
c010ac58	obj/kernel.asm	/^c010ac58:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ac5b	obj/kernel.asm	/^c010ac5b:	89 c1                	mov    %eax,%ecx$/;"	l
c010ac5d	obj/kernel.asm	/^c010ac5d:	89 d8                	mov    %ebx,%eax$/;"	l
c010ac5f	obj/kernel.asm	/^c010ac5f:	89 d6                	mov    %edx,%esi$/;"	l
c010ac61	obj/kernel.asm	/^c010ac61:	89 c7                	mov    %eax,%edi$/;"	l
c010ac63	obj/kernel.asm	/^c010ac63:	fd                   	std    $/;"	l
c010ac64	obj/kernel.asm	/^c010ac64:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c010ac66	obj/kernel.asm	/^c010ac66:	fc                   	cld    $/;"	l
c010ac67	obj/kernel.asm	/^c010ac67:	89 f8                	mov    %edi,%eax$/;"	l
c010ac69	obj/kernel.asm	/^c010ac69:	89 f2                	mov    %esi,%edx$/;"	l
c010ac6b	obj/kernel.asm	/^c010ac6b:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
c010ac6e	obj/kernel.asm	/^c010ac6e:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c010ac71	obj/kernel.asm	/^c010ac71:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010ac74	obj/kernel.asm	/^c010ac74:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ac77	obj/kernel.asm	/^c010ac77:	83 c4 30             	add    $0x30,%esp$/;"	l
c010ac7a	obj/kernel.asm	/^c010ac7a:	5b                   	pop    %ebx$/;"	l
c010ac7b	obj/kernel.asm	/^c010ac7b:	5e                   	pop    %esi$/;"	l
c010ac7c	obj/kernel.asm	/^c010ac7c:	5f                   	pop    %edi$/;"	l
c010ac7d	obj/kernel.asm	/^c010ac7d:	5d                   	pop    %ebp$/;"	l
c010ac7e	obj/kernel.asm	/^c010ac7e:	c3                   	ret    $/;"	l
c010ac7f	obj/kernel.asm	/^c010ac7f <memcpy>:$/;"	l
c010ac7f	obj/kernel.asm	/^c010ac7f:	55                   	push   %ebp$/;"	l
c010ac80	obj/kernel.asm	/^c010ac80:	89 e5                	mov    %esp,%ebp$/;"	l
c010ac82	obj/kernel.asm	/^c010ac82:	57                   	push   %edi$/;"	l
c010ac83	obj/kernel.asm	/^c010ac83:	56                   	push   %esi$/;"	l
c010ac84	obj/kernel.asm	/^c010ac84:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010ac87	obj/kernel.asm	/^c010ac87:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ac8a	obj/kernel.asm	/^c010ac8a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ac8d	obj/kernel.asm	/^c010ac8d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ac90	obj/kernel.asm	/^c010ac90:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ac93	obj/kernel.asm	/^c010ac93:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010ac96	obj/kernel.asm	/^c010ac96:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ac99	obj/kernel.asm	/^c010ac99:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ac9c	obj/kernel.asm	/^c010ac9c:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010ac9f	obj/kernel.asm	/^c010ac9f:	89 c1                	mov    %eax,%ecx$/;"	l
c010aca1	obj/kernel.asm	/^c010aca1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010aca4	obj/kernel.asm	/^c010aca4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aca7	obj/kernel.asm	/^c010aca7:	89 d7                	mov    %edx,%edi$/;"	l
c010aca9	obj/kernel.asm	/^c010aca9:	89 c6                	mov    %eax,%esi$/;"	l
c010acab	obj/kernel.asm	/^c010acab:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c010acad	obj/kernel.asm	/^c010acad:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
c010acb0	obj/kernel.asm	/^c010acb0:	83 e1 03             	and    $0x3,%ecx$/;"	l
c010acb3	obj/kernel.asm	/^c010acb3:	74 02                	je     c010acb7 <memcpy+0x38>$/;"	l
c010acb5	obj/kernel.asm	/^c010acb5:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c010acb7	obj/kernel.asm	/^c010acb7:	89 f0                	mov    %esi,%eax$/;"	l
c010acb9	obj/kernel.asm	/^c010acb9:	89 fa                	mov    %edi,%edx$/;"	l
c010acbb	obj/kernel.asm	/^c010acbb:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c010acbe	obj/kernel.asm	/^c010acbe:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010acc1	obj/kernel.asm	/^c010acc1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010acc4	obj/kernel.asm	/^c010acc4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010acc7	obj/kernel.asm	/^c010acc7:	90                   	nop$/;"	l
c010acc8	obj/kernel.asm	/^c010acc8:	83 c4 20             	add    $0x20,%esp$/;"	l
c010accb	obj/kernel.asm	/^c010accb:	5e                   	pop    %esi$/;"	l
c010accc	obj/kernel.asm	/^c010accc:	5f                   	pop    %edi$/;"	l
c010accd	obj/kernel.asm	/^c010accd:	5d                   	pop    %ebp$/;"	l
c010acce	obj/kernel.asm	/^c010acce:	c3                   	ret    $/;"	l
c010accf	obj/kernel.asm	/^c010accf <memcmp>:$/;"	l
c010accf	obj/kernel.asm	/^c010accf:	55                   	push   %ebp$/;"	l
c010acd0	obj/kernel.asm	/^c010acd0:	89 e5                	mov    %esp,%ebp$/;"	l
c010acd2	obj/kernel.asm	/^c010acd2:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010acd5	obj/kernel.asm	/^c010acd5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010acd8	obj/kernel.asm	/^c010acd8:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010acdb	obj/kernel.asm	/^c010acdb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010acde	obj/kernel.asm	/^c010acde:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010ace1	obj/kernel.asm	/^c010ace1:	eb 30                	jmp    c010ad13 <memcmp+0x44>$/;"	l
c010ace3	obj/kernel.asm	/^c010ace3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010ace6	obj/kernel.asm	/^c010ace6:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c010ace9	obj/kernel.asm	/^c010ace9:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010acec	obj/kernel.asm	/^c010acec:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010acef	obj/kernel.asm	/^c010acef:	38 c2                	cmp    %al,%dl$/;"	l
c010acf1	obj/kernel.asm	/^c010acf1:	74 18                	je     c010ad0b <memcmp+0x3c>$/;"	l
c010acf3	obj/kernel.asm	/^c010acf3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010acf6	obj/kernel.asm	/^c010acf6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010acf9	obj/kernel.asm	/^c010acf9:	0f b6 d0             	movzbl %al,%edx$/;"	l
c010acfc	obj/kernel.asm	/^c010acfc:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010acff	obj/kernel.asm	/^c010acff:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ad02	obj/kernel.asm	/^c010ad02:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010ad05	obj/kernel.asm	/^c010ad05:	29 c2                	sub    %eax,%edx$/;"	l
c010ad07	obj/kernel.asm	/^c010ad07:	89 d0                	mov    %edx,%eax$/;"	l
c010ad09	obj/kernel.asm	/^c010ad09:	eb 1a                	jmp    c010ad25 <memcmp+0x56>$/;"	l
c010ad0b	obj/kernel.asm	/^c010ad0b:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010ad0f	obj/kernel.asm	/^c010ad0f:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
c010ad13	obj/kernel.asm	/^c010ad13:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010ad16	obj/kernel.asm	/^c010ad16:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010ad19	obj/kernel.asm	/^c010ad19:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c010ad1c	obj/kernel.asm	/^c010ad1c:	85 c0                	test   %eax,%eax$/;"	l
c010ad1e	obj/kernel.asm	/^c010ad1e:	75 c3                	jne    c010ace3 <memcmp+0x14>$/;"	l
c010ad20	obj/kernel.asm	/^c010ad20:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ad25	obj/kernel.asm	/^c010ad25:	c9                   	leave  $/;"	l
c010ad26	obj/kernel.asm	/^c010ad26:	c3                   	ret    $/;"	l
c010ad27	obj/kernel.asm	/^c010ad27 <printnum>:$/;"	l
c010ad27	obj/kernel.asm	/^c010ad27:	55                   	push   %ebp$/;"	l
c010ad28	obj/kernel.asm	/^c010ad28:	89 e5                	mov    %esp,%ebp$/;"	l
c010ad2a	obj/kernel.asm	/^c010ad2a:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010ad2d	obj/kernel.asm	/^c010ad2d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010ad30	obj/kernel.asm	/^c010ad30:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010ad33	obj/kernel.asm	/^c010ad33:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010ad36	obj/kernel.asm	/^c010ad36:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010ad39	obj/kernel.asm	/^c010ad39:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010ad3c	obj/kernel.asm	/^c010ad3c:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010ad3f	obj/kernel.asm	/^c010ad3f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ad42	obj/kernel.asm	/^c010ad42:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010ad45	obj/kernel.asm	/^c010ad45:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010ad48	obj/kernel.asm	/^c010ad48:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010ad4b	obj/kernel.asm	/^c010ad4b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ad4e	obj/kernel.asm	/^c010ad4e:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010ad51	obj/kernel.asm	/^c010ad51:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010ad54	obj/kernel.asm	/^c010ad54:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c010ad57	obj/kernel.asm	/^c010ad57:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ad5a	obj/kernel.asm	/^c010ad5a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ad5d	obj/kernel.asm	/^c010ad5d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ad61	obj/kernel.asm	/^c010ad61:	74 1c                	je     c010ad7f <printnum+0x58>$/;"	l
c010ad63	obj/kernel.asm	/^c010ad63:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ad66	obj/kernel.asm	/^c010ad66:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010ad6b	obj/kernel.asm	/^c010ad6b:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c010ad6e	obj/kernel.asm	/^c010ad6e:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010ad71	obj/kernel.asm	/^c010ad71:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ad74	obj/kernel.asm	/^c010ad74:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010ad79	obj/kernel.asm	/^c010ad79:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c010ad7c	obj/kernel.asm	/^c010ad7c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ad7f	obj/kernel.asm	/^c010ad7f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ad82	obj/kernel.asm	/^c010ad82:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010ad85	obj/kernel.asm	/^c010ad85:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c010ad88	obj/kernel.asm	/^c010ad88:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010ad8b	obj/kernel.asm	/^c010ad8b:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
c010ad8e	obj/kernel.asm	/^c010ad8e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ad91	obj/kernel.asm	/^c010ad91:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010ad94	obj/kernel.asm	/^c010ad94:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ad97	obj/kernel.asm	/^c010ad97:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010ad9a	obj/kernel.asm	/^c010ad9a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010ad9d	obj/kernel.asm	/^c010ad9d:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010ada0	obj/kernel.asm	/^c010ada0:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010ada3	obj/kernel.asm	/^c010ada3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010ada8	obj/kernel.asm	/^c010ada8:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c010adab	obj/kernel.asm	/^c010adab:	77 41                	ja     c010adee <printnum+0xc7>$/;"	l
c010adad	obj/kernel.asm	/^c010adad:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c010adb0	obj/kernel.asm	/^c010adb0:	72 05                	jb     c010adb7 <printnum+0x90>$/;"	l
c010adb2	obj/kernel.asm	/^c010adb2:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c010adb5	obj/kernel.asm	/^c010adb5:	77 37                	ja     c010adee <printnum+0xc7>$/;"	l
c010adb7	obj/kernel.asm	/^c010adb7:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c010adba	obj/kernel.asm	/^c010adba:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010adbd	obj/kernel.asm	/^c010adbd:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010adc0	obj/kernel.asm	/^c010adc0:	ff 75 20             	pushl  0x20(%ebp)$/;"	l
c010adc3	obj/kernel.asm	/^c010adc3:	50                   	push   %eax$/;"	l
c010adc4	obj/kernel.asm	/^c010adc4:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
c010adc7	obj/kernel.asm	/^c010adc7:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010adca	obj/kernel.asm	/^c010adca:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010adcd	obj/kernel.asm	/^c010adcd:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010add0	obj/kernel.asm	/^c010add0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010add3	obj/kernel.asm	/^c010add3:	e8 4f ff ff ff       	call   c010ad27 <printnum>$/;"	l
c010add8	obj/kernel.asm	/^c010add8:	83 c4 20             	add    $0x20,%esp$/;"	l
c010addb	obj/kernel.asm	/^c010addb:	eb 1b                	jmp    c010adf8 <printnum+0xd1>$/;"	l
c010addd	obj/kernel.asm	/^c010addd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ade0	obj/kernel.asm	/^c010ade0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010ade3	obj/kernel.asm	/^c010ade3:	ff 75 20             	pushl  0x20(%ebp)$/;"	l
c010ade6	obj/kernel.asm	/^c010ade6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ade9	obj/kernel.asm	/^c010ade9:	ff d0                	call   *%eax$/;"	l
c010adeb	obj/kernel.asm	/^c010adeb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010adee	obj/kernel.asm	/^c010adee:	83 6d 1c 01          	subl   $0x1,0x1c(%ebp)$/;"	l
c010adf2	obj/kernel.asm	/^c010adf2:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c010adf6	obj/kernel.asm	/^c010adf6:	7f e5                	jg     c010addd <printnum+0xb6>$/;"	l
c010adf8	obj/kernel.asm	/^c010adf8:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010adfb	obj/kernel.asm	/^c010adfb:	05 24 db 10 c0       	add    $0xc010db24,%eax$/;"	l
c010ae00	obj/kernel.asm	/^c010ae00:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ae03	obj/kernel.asm	/^c010ae03:	0f be c0             	movsbl %al,%eax$/;"	l
c010ae06	obj/kernel.asm	/^c010ae06:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ae09	obj/kernel.asm	/^c010ae09:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010ae0c	obj/kernel.asm	/^c010ae0c:	50                   	push   %eax$/;"	l
c010ae0d	obj/kernel.asm	/^c010ae0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae10	obj/kernel.asm	/^c010ae10:	ff d0                	call   *%eax$/;"	l
c010ae12	obj/kernel.asm	/^c010ae12:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ae15	obj/kernel.asm	/^c010ae15:	c9                   	leave  $/;"	l
c010ae16	obj/kernel.asm	/^c010ae16:	c3                   	ret    $/;"	l
c010ae17	obj/kernel.asm	/^c010ae17 <getuint>:$/;"	l
c010ae17	obj/kernel.asm	/^c010ae17:	55                   	push   %ebp$/;"	l
c010ae18	obj/kernel.asm	/^c010ae18:	89 e5                	mov    %esp,%ebp$/;"	l
c010ae1a	obj/kernel.asm	/^c010ae1a:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c010ae1e	obj/kernel.asm	/^c010ae1e:	7e 14                	jle    c010ae34 <getuint+0x1d>$/;"	l
c010ae20	obj/kernel.asm	/^c010ae20:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae23	obj/kernel.asm	/^c010ae23:	8b 00                	mov    (%eax),%eax$/;"	l
c010ae25	obj/kernel.asm	/^c010ae25:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c010ae28	obj/kernel.asm	/^c010ae28:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010ae2b	obj/kernel.asm	/^c010ae2b:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010ae2d	obj/kernel.asm	/^c010ae2d:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010ae30	obj/kernel.asm	/^c010ae30:	8b 00                	mov    (%eax),%eax$/;"	l
c010ae32	obj/kernel.asm	/^c010ae32:	eb 30                	jmp    c010ae64 <getuint+0x4d>$/;"	l
c010ae34	obj/kernel.asm	/^c010ae34:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010ae38	obj/kernel.asm	/^c010ae38:	74 16                	je     c010ae50 <getuint+0x39>$/;"	l
c010ae3a	obj/kernel.asm	/^c010ae3a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae3d	obj/kernel.asm	/^c010ae3d:	8b 00                	mov    (%eax),%eax$/;"	l
c010ae3f	obj/kernel.asm	/^c010ae3f:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010ae42	obj/kernel.asm	/^c010ae42:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010ae45	obj/kernel.asm	/^c010ae45:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010ae47	obj/kernel.asm	/^c010ae47:	8b 00                	mov    (%eax),%eax$/;"	l
c010ae49	obj/kernel.asm	/^c010ae49:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010ae4e	obj/kernel.asm	/^c010ae4e:	eb 14                	jmp    c010ae64 <getuint+0x4d>$/;"	l
c010ae50	obj/kernel.asm	/^c010ae50:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae53	obj/kernel.asm	/^c010ae53:	8b 00                	mov    (%eax),%eax$/;"	l
c010ae55	obj/kernel.asm	/^c010ae55:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010ae58	obj/kernel.asm	/^c010ae58:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010ae5b	obj/kernel.asm	/^c010ae5b:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010ae5d	obj/kernel.asm	/^c010ae5d:	8b 00                	mov    (%eax),%eax$/;"	l
c010ae5f	obj/kernel.asm	/^c010ae5f:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010ae64	obj/kernel.asm	/^c010ae64:	5d                   	pop    %ebp$/;"	l
c010ae65	obj/kernel.asm	/^c010ae65:	c3                   	ret    $/;"	l
c010ae66	obj/kernel.asm	/^c010ae66 <getint>:$/;"	l
c010ae66	obj/kernel.asm	/^c010ae66:	55                   	push   %ebp$/;"	l
c010ae67	obj/kernel.asm	/^c010ae67:	89 e5                	mov    %esp,%ebp$/;"	l
c010ae69	obj/kernel.asm	/^c010ae69:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c010ae6d	obj/kernel.asm	/^c010ae6d:	7e 14                	jle    c010ae83 <getint+0x1d>$/;"	l
c010ae6f	obj/kernel.asm	/^c010ae6f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae72	obj/kernel.asm	/^c010ae72:	8b 00                	mov    (%eax),%eax$/;"	l
c010ae74	obj/kernel.asm	/^c010ae74:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c010ae77	obj/kernel.asm	/^c010ae77:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010ae7a	obj/kernel.asm	/^c010ae7a:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010ae7c	obj/kernel.asm	/^c010ae7c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010ae7f	obj/kernel.asm	/^c010ae7f:	8b 00                	mov    (%eax),%eax$/;"	l
c010ae81	obj/kernel.asm	/^c010ae81:	eb 28                	jmp    c010aeab <getint+0x45>$/;"	l
c010ae83	obj/kernel.asm	/^c010ae83:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010ae87	obj/kernel.asm	/^c010ae87:	74 12                	je     c010ae9b <getint+0x35>$/;"	l
c010ae89	obj/kernel.asm	/^c010ae89:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae8c	obj/kernel.asm	/^c010ae8c:	8b 00                	mov    (%eax),%eax$/;"	l
c010ae8e	obj/kernel.asm	/^c010ae8e:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010ae91	obj/kernel.asm	/^c010ae91:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010ae94	obj/kernel.asm	/^c010ae94:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010ae96	obj/kernel.asm	/^c010ae96:	8b 00                	mov    (%eax),%eax$/;"	l
c010ae98	obj/kernel.asm	/^c010ae98:	99                   	cltd   $/;"	l
c010ae99	obj/kernel.asm	/^c010ae99:	eb 10                	jmp    c010aeab <getint+0x45>$/;"	l
c010ae9b	obj/kernel.asm	/^c010ae9b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae9e	obj/kernel.asm	/^c010ae9e:	8b 00                	mov    (%eax),%eax$/;"	l
c010aea0	obj/kernel.asm	/^c010aea0:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010aea3	obj/kernel.asm	/^c010aea3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010aea6	obj/kernel.asm	/^c010aea6:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010aea8	obj/kernel.asm	/^c010aea8:	8b 00                	mov    (%eax),%eax$/;"	l
c010aeaa	obj/kernel.asm	/^c010aeaa:	99                   	cltd   $/;"	l
c010aeab	obj/kernel.asm	/^c010aeab:	5d                   	pop    %ebp$/;"	l
c010aeac	obj/kernel.asm	/^c010aeac:	c3                   	ret    $/;"	l
c010aead	obj/kernel.asm	/^c010aead <printfmt>:$/;"	l
c010aead	obj/kernel.asm	/^c010aead:	55                   	push   %ebp$/;"	l
c010aeae	obj/kernel.asm	/^c010aeae:	89 e5                	mov    %esp,%ebp$/;"	l
c010aeb0	obj/kernel.asm	/^c010aeb0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010aeb3	obj/kernel.asm	/^c010aeb3:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010aeb6	obj/kernel.asm	/^c010aeb6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aeb9	obj/kernel.asm	/^c010aeb9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aebc	obj/kernel.asm	/^c010aebc:	50                   	push   %eax$/;"	l
c010aebd	obj/kernel.asm	/^c010aebd:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010aec0	obj/kernel.asm	/^c010aec0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010aec3	obj/kernel.asm	/^c010aec3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010aec6	obj/kernel.asm	/^c010aec6:	e8 05 00 00 00       	call   c010aed0 <vprintfmt>$/;"	l
c010aecb	obj/kernel.asm	/^c010aecb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aece	obj/kernel.asm	/^c010aece:	c9                   	leave  $/;"	l
c010aecf	obj/kernel.asm	/^c010aecf:	c3                   	ret    $/;"	l
c010aed0	obj/kernel.asm	/^c010aed0 <vprintfmt>:$/;"	l
c010aed0	obj/kernel.asm	/^c010aed0:	55                   	push   %ebp$/;"	l
c010aed1	obj/kernel.asm	/^c010aed1:	89 e5                	mov    %esp,%ebp$/;"	l
c010aed3	obj/kernel.asm	/^c010aed3:	56                   	push   %esi$/;"	l
c010aed4	obj/kernel.asm	/^c010aed4:	53                   	push   %ebx$/;"	l
c010aed5	obj/kernel.asm	/^c010aed5:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010aed8	obj/kernel.asm	/^c010aed8:	eb 18                	jmp    c010aef2 <vprintfmt+0x22>$/;"	l
c010aeda	obj/kernel.asm	/^c010aeda:	85 db                	test   %ebx,%ebx$/;"	l
c010aedc	obj/kernel.asm	/^c010aedc:	75 05                	jne    c010aee3 <vprintfmt+0x13>$/;"	l
c010aede	obj/kernel.asm	/^c010aede:	e9 8b 03 00 00       	jmp    c010b26e <vprintfmt+0x39e>$/;"	l
c010aee3	obj/kernel.asm	/^c010aee3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010aee6	obj/kernel.asm	/^c010aee6:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010aee9	obj/kernel.asm	/^c010aee9:	53                   	push   %ebx$/;"	l
c010aeea	obj/kernel.asm	/^c010aeea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aeed	obj/kernel.asm	/^c010aeed:	ff d0                	call   *%eax$/;"	l
c010aeef	obj/kernel.asm	/^c010aeef:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aef2	obj/kernel.asm	/^c010aef2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010aef5	obj/kernel.asm	/^c010aef5:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010aef8	obj/kernel.asm	/^c010aef8:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c010aefb	obj/kernel.asm	/^c010aefb:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010aefe	obj/kernel.asm	/^c010aefe:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c010af01	obj/kernel.asm	/^c010af01:	83 fb 25             	cmp    $0x25,%ebx$/;"	l
c010af04	obj/kernel.asm	/^c010af04:	75 d4                	jne    c010aeda <vprintfmt+0xa>$/;"	l
c010af06	obj/kernel.asm	/^c010af06:	c6 45 db 20          	movb   $0x20,-0x25(%ebp)$/;"	l
c010af0a	obj/kernel.asm	/^c010af0a:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c010af11	obj/kernel.asm	/^c010af11:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010af14	obj/kernel.asm	/^c010af14:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010af17	obj/kernel.asm	/^c010af17:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c010af1e	obj/kernel.asm	/^c010af1e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010af21	obj/kernel.asm	/^c010af21:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010af24	obj/kernel.asm	/^c010af24:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010af27	obj/kernel.asm	/^c010af27:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010af2a	obj/kernel.asm	/^c010af2a:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c010af2d	obj/kernel.asm	/^c010af2d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010af30	obj/kernel.asm	/^c010af30:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c010af33	obj/kernel.asm	/^c010af33:	8d 43 dd             	lea    -0x23(%ebx),%eax$/;"	l
c010af36	obj/kernel.asm	/^c010af36:	83 f8 55             	cmp    $0x55,%eax$/;"	l
c010af39	obj/kernel.asm	/^c010af39:	0f 87 02 03 00 00    	ja     c010b241 <vprintfmt+0x371>$/;"	l
c010af3f	obj/kernel.asm	/^c010af3f:	8b 04 85 48 db 10 c0 	mov    -0x3fef24b8(,%eax,4),%eax$/;"	l
c010af46	obj/kernel.asm	/^c010af46:	ff e0                	jmp    *%eax$/;"	l
c010af48	obj/kernel.asm	/^c010af48:	c6 45 db 2d          	movb   $0x2d,-0x25(%ebp)$/;"	l
c010af4c	obj/kernel.asm	/^c010af4c:	eb d6                	jmp    c010af24 <vprintfmt+0x54>$/;"	l
c010af4e	obj/kernel.asm	/^c010af4e:	c6 45 db 30          	movb   $0x30,-0x25(%ebp)$/;"	l
c010af52	obj/kernel.asm	/^c010af52:	eb d0                	jmp    c010af24 <vprintfmt+0x54>$/;"	l
c010af54	obj/kernel.asm	/^c010af54:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c010af5b	obj/kernel.asm	/^c010af5b:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010af5e	obj/kernel.asm	/^c010af5e:	89 d0                	mov    %edx,%eax$/;"	l
c010af60	obj/kernel.asm	/^c010af60:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010af63	obj/kernel.asm	/^c010af63:	01 d0                	add    %edx,%eax$/;"	l
c010af65	obj/kernel.asm	/^c010af65:	01 c0                	add    %eax,%eax$/;"	l
c010af67	obj/kernel.asm	/^c010af67:	01 d8                	add    %ebx,%eax$/;"	l
c010af69	obj/kernel.asm	/^c010af69:	83 e8 30             	sub    $0x30,%eax$/;"	l
c010af6c	obj/kernel.asm	/^c010af6c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010af6f	obj/kernel.asm	/^c010af6f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010af72	obj/kernel.asm	/^c010af72:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010af75	obj/kernel.asm	/^c010af75:	0f be d8             	movsbl %al,%ebx$/;"	l
c010af78	obj/kernel.asm	/^c010af78:	83 fb 2f             	cmp    $0x2f,%ebx$/;"	l
c010af7b	obj/kernel.asm	/^c010af7b:	7e 0b                	jle    c010af88 <vprintfmt+0xb8>$/;"	l
c010af7d	obj/kernel.asm	/^c010af7d:	83 fb 39             	cmp    $0x39,%ebx$/;"	l
c010af80	obj/kernel.asm	/^c010af80:	7f 06                	jg     c010af88 <vprintfmt+0xb8>$/;"	l
c010af82	obj/kernel.asm	/^c010af82:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c010af86	obj/kernel.asm	/^c010af86:	eb d3                	jmp    c010af5b <vprintfmt+0x8b>$/;"	l
c010af88	obj/kernel.asm	/^c010af88:	eb 2e                	jmp    c010afb8 <vprintfmt+0xe8>$/;"	l
c010af8a	obj/kernel.asm	/^c010af8a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010af8d	obj/kernel.asm	/^c010af8d:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010af90	obj/kernel.asm	/^c010af90:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010af93	obj/kernel.asm	/^c010af93:	8b 00                	mov    (%eax),%eax$/;"	l
c010af95	obj/kernel.asm	/^c010af95:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010af98	obj/kernel.asm	/^c010af98:	eb 1e                	jmp    c010afb8 <vprintfmt+0xe8>$/;"	l
c010af9a	obj/kernel.asm	/^c010af9a:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010af9e	obj/kernel.asm	/^c010af9e:	79 07                	jns    c010afa7 <vprintfmt+0xd7>$/;"	l
c010afa0	obj/kernel.asm	/^c010afa0:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c010afa7	obj/kernel.asm	/^c010afa7:	e9 78 ff ff ff       	jmp    c010af24 <vprintfmt+0x54>$/;"	l
c010afac	obj/kernel.asm	/^c010afac:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
c010afb3	obj/kernel.asm	/^c010afb3:	e9 6c ff ff ff       	jmp    c010af24 <vprintfmt+0x54>$/;"	l
c010afb8	obj/kernel.asm	/^c010afb8:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010afbc	obj/kernel.asm	/^c010afbc:	79 0d                	jns    c010afcb <vprintfmt+0xfb>$/;"	l
c010afbe	obj/kernel.asm	/^c010afbe:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010afc1	obj/kernel.asm	/^c010afc1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010afc4	obj/kernel.asm	/^c010afc4:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c010afcb	obj/kernel.asm	/^c010afcb:	e9 54 ff ff ff       	jmp    c010af24 <vprintfmt+0x54>$/;"	l
c010afd0	obj/kernel.asm	/^c010afd0:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
c010afd4	obj/kernel.asm	/^c010afd4:	e9 4b ff ff ff       	jmp    c010af24 <vprintfmt+0x54>$/;"	l
c010afd9	obj/kernel.asm	/^c010afd9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010afdc	obj/kernel.asm	/^c010afdc:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010afdf	obj/kernel.asm	/^c010afdf:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010afe2	obj/kernel.asm	/^c010afe2:	8b 00                	mov    (%eax),%eax$/;"	l
c010afe4	obj/kernel.asm	/^c010afe4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010afe7	obj/kernel.asm	/^c010afe7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010afea	obj/kernel.asm	/^c010afea:	50                   	push   %eax$/;"	l
c010afeb	obj/kernel.asm	/^c010afeb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010afee	obj/kernel.asm	/^c010afee:	ff d0                	call   *%eax$/;"	l
c010aff0	obj/kernel.asm	/^c010aff0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aff3	obj/kernel.asm	/^c010aff3:	e9 71 02 00 00       	jmp    c010b269 <vprintfmt+0x399>$/;"	l
c010aff8	obj/kernel.asm	/^c010aff8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010affb	obj/kernel.asm	/^c010affb:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010affe	obj/kernel.asm	/^c010affe:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010b001	obj/kernel.asm	/^c010b001:	8b 18                	mov    (%eax),%ebx$/;"	l
c010b003	obj/kernel.asm	/^c010b003:	85 db                	test   %ebx,%ebx$/;"	l
c010b005	obj/kernel.asm	/^c010b005:	79 02                	jns    c010b009 <vprintfmt+0x139>$/;"	l
c010b007	obj/kernel.asm	/^c010b007:	f7 db                	neg    %ebx$/;"	l
c010b009	obj/kernel.asm	/^c010b009:	83 fb 18             	cmp    $0x18,%ebx$/;"	l
c010b00c	obj/kernel.asm	/^c010b00c:	7f 0b                	jg     c010b019 <vprintfmt+0x149>$/;"	l
c010b00e	obj/kernel.asm	/^c010b00e:	8b 34 9d c0 da 10 c0 	mov    -0x3fef2540(,%ebx,4),%esi$/;"	l
c010b015	obj/kernel.asm	/^c010b015:	85 f6                	test   %esi,%esi$/;"	l
c010b017	obj/kernel.asm	/^c010b017:	75 19                	jne    c010b032 <vprintfmt+0x162>$/;"	l
c010b019	obj/kernel.asm	/^c010b019:	53                   	push   %ebx$/;"	l
c010b01a	obj/kernel.asm	/^c010b01a:	68 35 db 10 c0       	push   $0xc010db35$/;"	l
c010b01f	obj/kernel.asm	/^c010b01f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b022	obj/kernel.asm	/^c010b022:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b025	obj/kernel.asm	/^c010b025:	e8 83 fe ff ff       	call   c010aead <printfmt>$/;"	l
c010b02a	obj/kernel.asm	/^c010b02a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b02d	obj/kernel.asm	/^c010b02d:	e9 37 02 00 00       	jmp    c010b269 <vprintfmt+0x399>$/;"	l
c010b032	obj/kernel.asm	/^c010b032:	56                   	push   %esi$/;"	l
c010b033	obj/kernel.asm	/^c010b033:	68 3e db 10 c0       	push   $0xc010db3e$/;"	l
c010b038	obj/kernel.asm	/^c010b038:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b03b	obj/kernel.asm	/^c010b03b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b03e	obj/kernel.asm	/^c010b03e:	e8 6a fe ff ff       	call   c010aead <printfmt>$/;"	l
c010b043	obj/kernel.asm	/^c010b043:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b046	obj/kernel.asm	/^c010b046:	e9 1e 02 00 00       	jmp    c010b269 <vprintfmt+0x399>$/;"	l
c010b04b	obj/kernel.asm	/^c010b04b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010b04e	obj/kernel.asm	/^c010b04e:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010b051	obj/kernel.asm	/^c010b051:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010b054	obj/kernel.asm	/^c010b054:	8b 30                	mov    (%eax),%esi$/;"	l
c010b056	obj/kernel.asm	/^c010b056:	85 f6                	test   %esi,%esi$/;"	l
c010b058	obj/kernel.asm	/^c010b058:	75 05                	jne    c010b05f <vprintfmt+0x18f>$/;"	l
c010b05a	obj/kernel.asm	/^c010b05a:	be 41 db 10 c0       	mov    $0xc010db41,%esi$/;"	l
c010b05f	obj/kernel.asm	/^c010b05f:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b063	obj/kernel.asm	/^c010b063:	7e 3f                	jle    c010b0a4 <vprintfmt+0x1d4>$/;"	l
c010b065	obj/kernel.asm	/^c010b065:	80 7d db 2d          	cmpb   $0x2d,-0x25(%ebp)$/;"	l
c010b069	obj/kernel.asm	/^c010b069:	74 39                	je     c010b0a4 <vprintfmt+0x1d4>$/;"	l
c010b06b	obj/kernel.asm	/^c010b06b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b06e	obj/kernel.asm	/^c010b06e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b071	obj/kernel.asm	/^c010b071:	50                   	push   %eax$/;"	l
c010b072	obj/kernel.asm	/^c010b072:	56                   	push   %esi$/;"	l
c010b073	obj/kernel.asm	/^c010b073:	e8 1b f8 ff ff       	call   c010a893 <strnlen>$/;"	l
c010b078	obj/kernel.asm	/^c010b078:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b07b	obj/kernel.asm	/^c010b07b:	89 c2                	mov    %eax,%edx$/;"	l
c010b07d	obj/kernel.asm	/^c010b07d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b080	obj/kernel.asm	/^c010b080:	29 d0                	sub    %edx,%eax$/;"	l
c010b082	obj/kernel.asm	/^c010b082:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b085	obj/kernel.asm	/^c010b085:	eb 17                	jmp    c010b09e <vprintfmt+0x1ce>$/;"	l
c010b087	obj/kernel.asm	/^c010b087:	0f be 45 db          	movsbl -0x25(%ebp),%eax$/;"	l
c010b08b	obj/kernel.asm	/^c010b08b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b08e	obj/kernel.asm	/^c010b08e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b091	obj/kernel.asm	/^c010b091:	50                   	push   %eax$/;"	l
c010b092	obj/kernel.asm	/^c010b092:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b095	obj/kernel.asm	/^c010b095:	ff d0                	call   *%eax$/;"	l
c010b097	obj/kernel.asm	/^c010b097:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b09a	obj/kernel.asm	/^c010b09a:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c010b09e	obj/kernel.asm	/^c010b09e:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b0a2	obj/kernel.asm	/^c010b0a2:	7f e3                	jg     c010b087 <vprintfmt+0x1b7>$/;"	l
c010b0a4	obj/kernel.asm	/^c010b0a4:	eb 35                	jmp    c010b0db <vprintfmt+0x20b>$/;"	l
c010b0a6	obj/kernel.asm	/^c010b0a6:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010b0aa	obj/kernel.asm	/^c010b0aa:	74 1c                	je     c010b0c8 <vprintfmt+0x1f8>$/;"	l
c010b0ac	obj/kernel.asm	/^c010b0ac:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
c010b0af	obj/kernel.asm	/^c010b0af:	7e 05                	jle    c010b0b6 <vprintfmt+0x1e6>$/;"	l
c010b0b1	obj/kernel.asm	/^c010b0b1:	83 fb 7e             	cmp    $0x7e,%ebx$/;"	l
c010b0b4	obj/kernel.asm	/^c010b0b4:	7e 12                	jle    c010b0c8 <vprintfmt+0x1f8>$/;"	l
c010b0b6	obj/kernel.asm	/^c010b0b6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b0b9	obj/kernel.asm	/^c010b0b9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b0bc	obj/kernel.asm	/^c010b0bc:	6a 3f                	push   $0x3f$/;"	l
c010b0be	obj/kernel.asm	/^c010b0be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b0c1	obj/kernel.asm	/^c010b0c1:	ff d0                	call   *%eax$/;"	l
c010b0c3	obj/kernel.asm	/^c010b0c3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b0c6	obj/kernel.asm	/^c010b0c6:	eb 0f                	jmp    c010b0d7 <vprintfmt+0x207>$/;"	l
c010b0c8	obj/kernel.asm	/^c010b0c8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b0cb	obj/kernel.asm	/^c010b0cb:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b0ce	obj/kernel.asm	/^c010b0ce:	53                   	push   %ebx$/;"	l
c010b0cf	obj/kernel.asm	/^c010b0cf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b0d2	obj/kernel.asm	/^c010b0d2:	ff d0                	call   *%eax$/;"	l
c010b0d4	obj/kernel.asm	/^c010b0d4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b0d7	obj/kernel.asm	/^c010b0d7:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c010b0db	obj/kernel.asm	/^c010b0db:	89 f0                	mov    %esi,%eax$/;"	l
c010b0dd	obj/kernel.asm	/^c010b0dd:	8d 70 01             	lea    0x1(%eax),%esi$/;"	l
c010b0e0	obj/kernel.asm	/^c010b0e0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b0e3	obj/kernel.asm	/^c010b0e3:	0f be d8             	movsbl %al,%ebx$/;"	l
c010b0e6	obj/kernel.asm	/^c010b0e6:	85 db                	test   %ebx,%ebx$/;"	l
c010b0e8	obj/kernel.asm	/^c010b0e8:	74 10                	je     c010b0fa <vprintfmt+0x22a>$/;"	l
c010b0ea	obj/kernel.asm	/^c010b0ea:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010b0ee	obj/kernel.asm	/^c010b0ee:	78 b6                	js     c010b0a6 <vprintfmt+0x1d6>$/;"	l
c010b0f0	obj/kernel.asm	/^c010b0f0:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
c010b0f4	obj/kernel.asm	/^c010b0f4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010b0f8	obj/kernel.asm	/^c010b0f8:	79 ac                	jns    c010b0a6 <vprintfmt+0x1d6>$/;"	l
c010b0fa	obj/kernel.asm	/^c010b0fa:	eb 14                	jmp    c010b110 <vprintfmt+0x240>$/;"	l
c010b0fc	obj/kernel.asm	/^c010b0fc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b0ff	obj/kernel.asm	/^c010b0ff:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b102	obj/kernel.asm	/^c010b102:	6a 20                	push   $0x20$/;"	l
c010b104	obj/kernel.asm	/^c010b104:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b107	obj/kernel.asm	/^c010b107:	ff d0                	call   *%eax$/;"	l
c010b109	obj/kernel.asm	/^c010b109:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b10c	obj/kernel.asm	/^c010b10c:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c010b110	obj/kernel.asm	/^c010b110:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b114	obj/kernel.asm	/^c010b114:	7f e6                	jg     c010b0fc <vprintfmt+0x22c>$/;"	l
c010b116	obj/kernel.asm	/^c010b116:	e9 4e 01 00 00       	jmp    c010b269 <vprintfmt+0x399>$/;"	l
c010b11b	obj/kernel.asm	/^c010b11b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b11e	obj/kernel.asm	/^c010b11e:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010b121	obj/kernel.asm	/^c010b121:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010b124	obj/kernel.asm	/^c010b124:	50                   	push   %eax$/;"	l
c010b125	obj/kernel.asm	/^c010b125:	e8 3c fd ff ff       	call   c010ae66 <getint>$/;"	l
c010b12a	obj/kernel.asm	/^c010b12a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b12d	obj/kernel.asm	/^c010b12d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b130	obj/kernel.asm	/^c010b130:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010b133	obj/kernel.asm	/^c010b133:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b136	obj/kernel.asm	/^c010b136:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b139	obj/kernel.asm	/^c010b139:	85 d2                	test   %edx,%edx$/;"	l
c010b13b	obj/kernel.asm	/^c010b13b:	79 23                	jns    c010b160 <vprintfmt+0x290>$/;"	l
c010b13d	obj/kernel.asm	/^c010b13d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b140	obj/kernel.asm	/^c010b140:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b143	obj/kernel.asm	/^c010b143:	6a 2d                	push   $0x2d$/;"	l
c010b145	obj/kernel.asm	/^c010b145:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b148	obj/kernel.asm	/^c010b148:	ff d0                	call   *%eax$/;"	l
c010b14a	obj/kernel.asm	/^c010b14a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b14d	obj/kernel.asm	/^c010b14d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b150	obj/kernel.asm	/^c010b150:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b153	obj/kernel.asm	/^c010b153:	f7 d8                	neg    %eax$/;"	l
c010b155	obj/kernel.asm	/^c010b155:	83 d2 00             	adc    $0x0,%edx$/;"	l
c010b158	obj/kernel.asm	/^c010b158:	f7 da                	neg    %edx$/;"	l
c010b15a	obj/kernel.asm	/^c010b15a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b15d	obj/kernel.asm	/^c010b15d:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010b160	obj/kernel.asm	/^c010b160:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c010b167	obj/kernel.asm	/^c010b167:	e9 9f 00 00 00       	jmp    c010b20b <vprintfmt+0x33b>$/;"	l
c010b16c	obj/kernel.asm	/^c010b16c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b16f	obj/kernel.asm	/^c010b16f:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010b172	obj/kernel.asm	/^c010b172:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010b175	obj/kernel.asm	/^c010b175:	50                   	push   %eax$/;"	l
c010b176	obj/kernel.asm	/^c010b176:	e8 9c fc ff ff       	call   c010ae17 <getuint>$/;"	l
c010b17b	obj/kernel.asm	/^c010b17b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b17e	obj/kernel.asm	/^c010b17e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b181	obj/kernel.asm	/^c010b181:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010b184	obj/kernel.asm	/^c010b184:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c010b18b	obj/kernel.asm	/^c010b18b:	eb 7e                	jmp    c010b20b <vprintfmt+0x33b>$/;"	l
c010b18d	obj/kernel.asm	/^c010b18d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b190	obj/kernel.asm	/^c010b190:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010b193	obj/kernel.asm	/^c010b193:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010b196	obj/kernel.asm	/^c010b196:	50                   	push   %eax$/;"	l
c010b197	obj/kernel.asm	/^c010b197:	e8 7b fc ff ff       	call   c010ae17 <getuint>$/;"	l
c010b19c	obj/kernel.asm	/^c010b19c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b19f	obj/kernel.asm	/^c010b19f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b1a2	obj/kernel.asm	/^c010b1a2:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010b1a5	obj/kernel.asm	/^c010b1a5:	c7 45 ec 08 00 00 00 	movl   $0x8,-0x14(%ebp)$/;"	l
c010b1ac	obj/kernel.asm	/^c010b1ac:	eb 5d                	jmp    c010b20b <vprintfmt+0x33b>$/;"	l
c010b1ae	obj/kernel.asm	/^c010b1ae:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b1b1	obj/kernel.asm	/^c010b1b1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b1b4	obj/kernel.asm	/^c010b1b4:	6a 30                	push   $0x30$/;"	l
c010b1b6	obj/kernel.asm	/^c010b1b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1b9	obj/kernel.asm	/^c010b1b9:	ff d0                	call   *%eax$/;"	l
c010b1bb	obj/kernel.asm	/^c010b1bb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b1be	obj/kernel.asm	/^c010b1be:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b1c1	obj/kernel.asm	/^c010b1c1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b1c4	obj/kernel.asm	/^c010b1c4:	6a 78                	push   $0x78$/;"	l
c010b1c6	obj/kernel.asm	/^c010b1c6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1c9	obj/kernel.asm	/^c010b1c9:	ff d0                	call   *%eax$/;"	l
c010b1cb	obj/kernel.asm	/^c010b1cb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b1ce	obj/kernel.asm	/^c010b1ce:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010b1d1	obj/kernel.asm	/^c010b1d1:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010b1d4	obj/kernel.asm	/^c010b1d4:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010b1d7	obj/kernel.asm	/^c010b1d7:	8b 00                	mov    (%eax),%eax$/;"	l
c010b1d9	obj/kernel.asm	/^c010b1d9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b1dc	obj/kernel.asm	/^c010b1dc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b1e3	obj/kernel.asm	/^c010b1e3:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c010b1ea	obj/kernel.asm	/^c010b1ea:	eb 1f                	jmp    c010b20b <vprintfmt+0x33b>$/;"	l
c010b1ec	obj/kernel.asm	/^c010b1ec:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b1ef	obj/kernel.asm	/^c010b1ef:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010b1f2	obj/kernel.asm	/^c010b1f2:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010b1f5	obj/kernel.asm	/^c010b1f5:	50                   	push   %eax$/;"	l
c010b1f6	obj/kernel.asm	/^c010b1f6:	e8 1c fc ff ff       	call   c010ae17 <getuint>$/;"	l
c010b1fb	obj/kernel.asm	/^c010b1fb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b1fe	obj/kernel.asm	/^c010b1fe:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b201	obj/kernel.asm	/^c010b201:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010b204	obj/kernel.asm	/^c010b204:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c010b20b	obj/kernel.asm	/^c010b20b:	0f be 55 db          	movsbl -0x25(%ebp),%edx$/;"	l
c010b20f	obj/kernel.asm	/^c010b20f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b212	obj/kernel.asm	/^c010b212:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b215	obj/kernel.asm	/^c010b215:	52                   	push   %edx$/;"	l
c010b216	obj/kernel.asm	/^c010b216:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010b219	obj/kernel.asm	/^c010b219:	50                   	push   %eax$/;"	l
c010b21a	obj/kernel.asm	/^c010b21a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010b21d	obj/kernel.asm	/^c010b21d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010b220	obj/kernel.asm	/^c010b220:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b223	obj/kernel.asm	/^c010b223:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b226	obj/kernel.asm	/^c010b226:	e8 fc fa ff ff       	call   c010ad27 <printnum>$/;"	l
c010b22b	obj/kernel.asm	/^c010b22b:	83 c4 20             	add    $0x20,%esp$/;"	l
c010b22e	obj/kernel.asm	/^c010b22e:	eb 39                	jmp    c010b269 <vprintfmt+0x399>$/;"	l
c010b230	obj/kernel.asm	/^c010b230:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b233	obj/kernel.asm	/^c010b233:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b236	obj/kernel.asm	/^c010b236:	53                   	push   %ebx$/;"	l
c010b237	obj/kernel.asm	/^c010b237:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b23a	obj/kernel.asm	/^c010b23a:	ff d0                	call   *%eax$/;"	l
c010b23c	obj/kernel.asm	/^c010b23c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b23f	obj/kernel.asm	/^c010b23f:	eb 28                	jmp    c010b269 <vprintfmt+0x399>$/;"	l
c010b241	obj/kernel.asm	/^c010b241:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b244	obj/kernel.asm	/^c010b244:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b247	obj/kernel.asm	/^c010b247:	6a 25                	push   $0x25$/;"	l
c010b249	obj/kernel.asm	/^c010b249:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b24c	obj/kernel.asm	/^c010b24c:	ff d0                	call   *%eax$/;"	l
c010b24e	obj/kernel.asm	/^c010b24e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b251	obj/kernel.asm	/^c010b251:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010b255	obj/kernel.asm	/^c010b255:	eb 04                	jmp    c010b25b <vprintfmt+0x38b>$/;"	l
c010b257	obj/kernel.asm	/^c010b257:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010b25b	obj/kernel.asm	/^c010b25b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b25e	obj/kernel.asm	/^c010b25e:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010b261	obj/kernel.asm	/^c010b261:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b264	obj/kernel.asm	/^c010b264:	3c 25                	cmp    $0x25,%al$/;"	l
c010b266	obj/kernel.asm	/^c010b266:	75 ef                	jne    c010b257 <vprintfmt+0x387>$/;"	l
c010b268	obj/kernel.asm	/^c010b268:	90                   	nop$/;"	l
c010b269	obj/kernel.asm	/^c010b269:	e9 6a fc ff ff       	jmp    c010aed8 <vprintfmt+0x8>$/;"	l
c010b26e	obj/kernel.asm	/^c010b26e:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c010b271	obj/kernel.asm	/^c010b271:	5b                   	pop    %ebx$/;"	l
c010b272	obj/kernel.asm	/^c010b272:	5e                   	pop    %esi$/;"	l
c010b273	obj/kernel.asm	/^c010b273:	5d                   	pop    %ebp$/;"	l
c010b274	obj/kernel.asm	/^c010b274:	c3                   	ret    $/;"	l
c010b275	obj/kernel.asm	/^c010b275 <sprintputch>:$/;"	l
c010b275	obj/kernel.asm	/^c010b275:	55                   	push   %ebp$/;"	l
c010b276	obj/kernel.asm	/^c010b276:	89 e5                	mov    %esp,%ebp$/;"	l
c010b278	obj/kernel.asm	/^c010b278:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b27b	obj/kernel.asm	/^c010b27b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010b27e	obj/kernel.asm	/^c010b27e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010b281	obj/kernel.asm	/^c010b281:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b284	obj/kernel.asm	/^c010b284:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010b287	obj/kernel.asm	/^c010b287:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b28a	obj/kernel.asm	/^c010b28a:	8b 10                	mov    (%eax),%edx$/;"	l
c010b28c	obj/kernel.asm	/^c010b28c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b28f	obj/kernel.asm	/^c010b28f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b292	obj/kernel.asm	/^c010b292:	39 c2                	cmp    %eax,%edx$/;"	l
c010b294	obj/kernel.asm	/^c010b294:	73 12                	jae    c010b2a8 <sprintputch+0x33>$/;"	l
c010b296	obj/kernel.asm	/^c010b296:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b299	obj/kernel.asm	/^c010b299:	8b 00                	mov    (%eax),%eax$/;"	l
c010b29b	obj/kernel.asm	/^c010b29b:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c010b29e	obj/kernel.asm	/^c010b29e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010b2a1	obj/kernel.asm	/^c010b2a1:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b2a3	obj/kernel.asm	/^c010b2a3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b2a6	obj/kernel.asm	/^c010b2a6:	88 10                	mov    %dl,(%eax)$/;"	l
c010b2a8	obj/kernel.asm	/^c010b2a8:	5d                   	pop    %ebp$/;"	l
c010b2a9	obj/kernel.asm	/^c010b2a9:	c3                   	ret    $/;"	l
c010b2aa	obj/kernel.asm	/^c010b2aa <snprintf>:$/;"	l
c010b2aa	obj/kernel.asm	/^c010b2aa:	55                   	push   %ebp$/;"	l
c010b2ab	obj/kernel.asm	/^c010b2ab:	89 e5                	mov    %esp,%ebp$/;"	l
c010b2ad	obj/kernel.asm	/^c010b2ad:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b2b0	obj/kernel.asm	/^c010b2b0:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010b2b3	obj/kernel.asm	/^c010b2b3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b2b6	obj/kernel.asm	/^c010b2b6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b2b9	obj/kernel.asm	/^c010b2b9:	50                   	push   %eax$/;"	l
c010b2ba	obj/kernel.asm	/^c010b2ba:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010b2bd	obj/kernel.asm	/^c010b2bd:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b2c0	obj/kernel.asm	/^c010b2c0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b2c3	obj/kernel.asm	/^c010b2c3:	e8 0b 00 00 00       	call   c010b2d3 <vsnprintf>$/;"	l
c010b2c8	obj/kernel.asm	/^c010b2c8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b2cb	obj/kernel.asm	/^c010b2cb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b2ce	obj/kernel.asm	/^c010b2ce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b2d1	obj/kernel.asm	/^c010b2d1:	c9                   	leave  $/;"	l
c010b2d2	obj/kernel.asm	/^c010b2d2:	c3                   	ret    $/;"	l
c010b2d3	obj/kernel.asm	/^c010b2d3 <vsnprintf>:$/;"	l
c010b2d3	obj/kernel.asm	/^c010b2d3:	55                   	push   %ebp$/;"	l
c010b2d4	obj/kernel.asm	/^c010b2d4:	89 e5                	mov    %esp,%ebp$/;"	l
c010b2d6	obj/kernel.asm	/^c010b2d6:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b2d9	obj/kernel.asm	/^c010b2d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b2dc	obj/kernel.asm	/^c010b2dc:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b2df	obj/kernel.asm	/^c010b2df:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b2e2	obj/kernel.asm	/^c010b2e2:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010b2e5	obj/kernel.asm	/^c010b2e5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b2e8	obj/kernel.asm	/^c010b2e8:	01 d0                	add    %edx,%eax$/;"	l
c010b2ea	obj/kernel.asm	/^c010b2ea:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b2ed	obj/kernel.asm	/^c010b2ed:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b2f4	obj/kernel.asm	/^c010b2f4:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b2f8	obj/kernel.asm	/^c010b2f8:	74 0a                	je     c010b304 <vsnprintf+0x31>$/;"	l
c010b2fa	obj/kernel.asm	/^c010b2fa:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010b2fd	obj/kernel.asm	/^c010b2fd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b300	obj/kernel.asm	/^c010b300:	39 c2                	cmp    %eax,%edx$/;"	l
c010b302	obj/kernel.asm	/^c010b302:	76 07                	jbe    c010b30b <vsnprintf+0x38>$/;"	l
c010b304	obj/kernel.asm	/^c010b304:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010b309	obj/kernel.asm	/^c010b309:	eb 20                	jmp    c010b32b <vsnprintf+0x58>$/;"	l
c010b30b	obj/kernel.asm	/^c010b30b:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010b30e	obj/kernel.asm	/^c010b30e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010b311	obj/kernel.asm	/^c010b311:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010b314	obj/kernel.asm	/^c010b314:	50                   	push   %eax$/;"	l
c010b315	obj/kernel.asm	/^c010b315:	68 75 b2 10 c0       	push   $0xc010b275$/;"	l
c010b31a	obj/kernel.asm	/^c010b31a:	e8 b1 fb ff ff       	call   c010aed0 <vprintfmt>$/;"	l
c010b31f	obj/kernel.asm	/^c010b31f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b322	obj/kernel.asm	/^c010b322:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b325	obj/kernel.asm	/^c010b325:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c010b328	obj/kernel.asm	/^c010b328:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b32b	obj/kernel.asm	/^c010b32b:	c9                   	leave  $/;"	l
c010b32c	obj/kernel.asm	/^c010b32c:	c3                   	ret    $/;"	l
c010b32d	obj/kernel.asm	/^c010b32d <hash32>:$/;"	l
c010b32d	obj/kernel.asm	/^c010b32d:	55                   	push   %ebp$/;"	l
c010b32e	obj/kernel.asm	/^c010b32e:	89 e5                	mov    %esp,%ebp$/;"	l
c010b330	obj/kernel.asm	/^c010b330:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010b333	obj/kernel.asm	/^c010b333:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b336	obj/kernel.asm	/^c010b336:	69 c0 01 00 37 9e    	imul   $0x9e370001,%eax,%eax$/;"	l
c010b33c	obj/kernel.asm	/^c010b33c:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010b33f	obj/kernel.asm	/^c010b33f:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
c010b344	obj/kernel.asm	/^c010b344:	2b 45 0c             	sub    0xc(%ebp),%eax$/;"	l
c010b347	obj/kernel.asm	/^c010b347:	89 c2                	mov    %eax,%edx$/;"	l
c010b349	obj/kernel.asm	/^c010b349:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b34c	obj/kernel.asm	/^c010b34c:	89 d1                	mov    %edx,%ecx$/;"	l
c010b34e	obj/kernel.asm	/^c010b34e:	d3 e8                	shr    %cl,%eax$/;"	d
c010b350	obj/kernel.asm	/^c010b350:	c9                   	leave  $/;"	l
c010b351	obj/kernel.asm	/^c010b351:	c3                   	ret    $/;"	l
c010b352	obj/kernel.asm	/^c010b352 <rand>:$/;"	l
c010b352	obj/kernel.asm	/^c010b352:	55                   	push   %ebp$/;"	l
c010b353	obj/kernel.asm	/^c010b353:	89 e5                	mov    %esp,%ebp$/;"	l
c010b355	obj/kernel.asm	/^c010b355:	57                   	push   %edi$/;"	l
c010b356	obj/kernel.asm	/^c010b356:	56                   	push   %esi$/;"	l
c010b357	obj/kernel.asm	/^c010b357:	53                   	push   %ebx$/;"	l
c010b358	obj/kernel.asm	/^c010b358:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010b35b	obj/kernel.asm	/^c010b35b:	a1 80 9b 12 c0       	mov    0xc0129b80,%eax$/;"	l
c010b360	obj/kernel.asm	/^c010b360:	8b 15 84 9b 12 c0    	mov    0xc0129b84,%edx$/;"	l
c010b366	obj/kernel.asm	/^c010b366:	69 fa 6d e6 ec de    	imul   $0xdeece66d,%edx,%edi$/;"	l
c010b36c	obj/kernel.asm	/^c010b36c:	6b f0 05             	imul   $0x5,%eax,%esi$/;"	l
c010b36f	obj/kernel.asm	/^c010b36f:	01 fe                	add    %edi,%esi$/;"	l
c010b371	obj/kernel.asm	/^c010b371:	bf 6d e6 ec de       	mov    $0xdeece66d,%edi$/;"	l
c010b376	obj/kernel.asm	/^c010b376:	f7 e7                	mul    %edi$/;"	l
c010b378	obj/kernel.asm	/^c010b378:	01 d6                	add    %edx,%esi$/;"	l
c010b37a	obj/kernel.asm	/^c010b37a:	89 f2                	mov    %esi,%edx$/;"	l
c010b37c	obj/kernel.asm	/^c010b37c:	83 c0 0b             	add    $0xb,%eax$/;"	l
c010b37f	obj/kernel.asm	/^c010b37f:	83 d2 00             	adc    $0x0,%edx$/;"	l
c010b382	obj/kernel.asm	/^c010b382:	89 c7                	mov    %eax,%edi$/;"	l
c010b384	obj/kernel.asm	/^c010b384:	83 e7 ff             	and    $0xffffffff,%edi$/;"	l
c010b387	obj/kernel.asm	/^c010b387:	89 f9                	mov    %edi,%ecx$/;"	l
c010b389	obj/kernel.asm	/^c010b389:	0f b7 da             	movzwl %dx,%ebx$/;"	l
c010b38c	obj/kernel.asm	/^c010b38c:	89 0d 80 9b 12 c0    	mov    %ecx,0xc0129b80$/;"	l
c010b392	obj/kernel.asm	/^c010b392:	89 1d 84 9b 12 c0    	mov    %ebx,0xc0129b84$/;"	l
c010b398	obj/kernel.asm	/^c010b398:	a1 80 9b 12 c0       	mov    0xc0129b80,%eax$/;"	l
c010b39d	obj/kernel.asm	/^c010b39d:	8b 15 84 9b 12 c0    	mov    0xc0129b84,%edx$/;"	l
c010b3a3	obj/kernel.asm	/^c010b3a3:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c010b3a7	obj/kernel.asm	/^c010b3a7:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c010b3aa	obj/kernel.asm	/^c010b3aa:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b3ad	obj/kernel.asm	/^c010b3ad:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010b3b0	obj/kernel.asm	/^c010b3b0:	c7 45 dc 00 00 00 80 	movl   $0x80000000,-0x24(%ebp)$/;"	l
c010b3b7	obj/kernel.asm	/^c010b3b7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b3ba	obj/kernel.asm	/^c010b3ba:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010b3bd	obj/kernel.asm	/^c010b3bd:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010b3c0	obj/kernel.asm	/^c010b3c0:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010b3c3	obj/kernel.asm	/^c010b3c3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b3c6	obj/kernel.asm	/^c010b3c6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b3c9	obj/kernel.asm	/^c010b3c9:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b3cd	obj/kernel.asm	/^c010b3cd:	74 1c                	je     c010b3eb <rand+0x99>$/;"	l
c010b3cf	obj/kernel.asm	/^c010b3cf:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b3d2	obj/kernel.asm	/^c010b3d2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b3d7	obj/kernel.asm	/^c010b3d7:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c010b3da	obj/kernel.asm	/^c010b3da:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010b3dd	obj/kernel.asm	/^c010b3dd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b3e0	obj/kernel.asm	/^c010b3e0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b3e5	obj/kernel.asm	/^c010b3e5:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c010b3e8	obj/kernel.asm	/^c010b3e8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b3eb	obj/kernel.asm	/^c010b3eb:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010b3ee	obj/kernel.asm	/^c010b3ee:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010b3f1	obj/kernel.asm	/^c010b3f1:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c010b3f4	obj/kernel.asm	/^c010b3f4:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010b3f7	obj/kernel.asm	/^c010b3f7:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010b3fa	obj/kernel.asm	/^c010b3fa:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010b3fd	obj/kernel.asm	/^c010b3fd:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010b400	obj/kernel.asm	/^c010b400:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b403	obj/kernel.asm	/^c010b403:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010b406	obj/kernel.asm	/^c010b406:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010b409	obj/kernel.asm	/^c010b409:	83 c4 24             	add    $0x24,%esp$/;"	l
c010b40c	obj/kernel.asm	/^c010b40c:	5b                   	pop    %ebx$/;"	l
c010b40d	obj/kernel.asm	/^c010b40d:	5e                   	pop    %esi$/;"	l
c010b40e	obj/kernel.asm	/^c010b40e:	5f                   	pop    %edi$/;"	l
c010b40f	obj/kernel.asm	/^c010b40f:	5d                   	pop    %ebp$/;"	l
c010b410	obj/kernel.asm	/^c010b410:	c3                   	ret    $/;"	l
c010b411	obj/kernel.asm	/^c010b411 <srand>:$/;"	l
c010b411	obj/kernel.asm	/^c010b411:	55                   	push   %ebp$/;"	l
c010b412	obj/kernel.asm	/^c010b412:	89 e5                	mov    %esp,%ebp$/;"	l
c010b414	obj/kernel.asm	/^c010b414:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b417	obj/kernel.asm	/^c010b417:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b41c	obj/kernel.asm	/^c010b41c:	a3 80 9b 12 c0       	mov    %eax,0xc0129b80$/;"	l
c010b421	obj/kernel.asm	/^c010b421:	89 15 84 9b 12 c0    	mov    %edx,0xc0129b84$/;"	l
c010b427	obj/kernel.asm	/^c010b427:	5d                   	pop    %ebp$/;"	l
c010b428	obj/kernel.asm	/^c010b428:	c3                   	ret    $/;"	l
ch	obj/kernel.asm	/^                ch = *fmt;$/;"	d
char	obj/kernel.asm	/^char *$/;"	l
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = mm;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = mm_create();$/;"	d
cnt	obj/kernel.asm	/^    cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
const	obj/kernel.asm	/^        const struct userstabdata *usd = (struct userstabdata *)USTAB;$/;"	t
const	obj/kernel.asm	/^    const struct stab *stabs, *stab_end;$/;"	t
cp	obj/kernel.asm	/^        cp = (uint16_t*)(MONO_BUF + KERNBASE);$/;"	d
crt_buf	obj/kernel.asm	/^    crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	obj/kernel.asm	/^    crt_pos = pos;$/;"	d
cur	obj/kernel.asm	/^				cur = aligned;$/;"	d
cur	obj/kernel.asm	/^			cur = (slob_t *)__slob_get_free_page(gfp);$/;"	d
cur	obj/kernel.asm	/^			cur = slobfree;$/;"	d
current	obj/kernel.asm	/^            current = proc;$/;"	d
current	obj/kernel.asm	/^    current = idleproc;$/;"	d
data	obj/kernel.asm	/^        data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kernel.asm	/^    data = inb(KBDATAP);$/;"	d
default	obj/kernel.asm	/^        default:$/;"	l
default	obj/kernel.asm	/^    default:$/;"	l
delta	obj/kernel.asm	/^			delta = aligned - cur;$/;"	d
did_init	obj/kernel.asm	/^    did_init = 1;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
end	obj/kernel.asm	/^                end = KMEMSIZE;$/;"	d
end	obj/kernel.asm	/^                end = ROUNDDOWN(end, PGSIZE);$/;"	d
end	obj/kernel.asm	/^        end = ph->p_va + ph->p_filesz;$/;"	d
end	obj/kernel.asm	/^        end = ph->p_va + ph->p_memsz;$/;"	d
err	obj/kernel.asm	/^                err = -err;$/;"	d
err	obj/kernel.asm	/^            err = va_arg(ap, int);$/;"	d
execve_exit	obj/kernel.asm	/^execve_exit:$/;"	l
extern	obj/kernel.asm	/^         extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^     extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^    extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^extern size_t npage;$/;"	l
extern	obj/kernel.asm	/^extern struct Page *pages;$/;"	t
extern	obj/kernel.asm	/^extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^extern uintptr_t __vectors[];$/;"	l
failed	obj/kernel.asm	/^failed:$/;"	l
fork_out	obj/kernel.asm	/^fork_out:$/;"	l
forkrets	obj/kernel.asm	/^forkrets:$/;"	l
found	obj/kernel.asm	/^                        found = 1;$/;"	d
found	obj/kernel.asm	/^found:$/;"	l
free_list	obj/kernel.asm	/^     free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^    free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^#define free_list (free_area.free_list)$/;"	d
good_mm	obj/kernel.asm	/^good_mm:$/;"	l
haskid	obj/kernel.asm	/^            haskid = 1;$/;"	d
haskid	obj/kernel.asm	/^    haskid = 0;$/;"	d
initproc	obj/kernel.asm	/^    initproc = find_proc(pid);$/;"	d
inline	obj/kernel.asm	/^inline void $/;"	l
inside	obj/kernel.asm	/^    inside:$/;"	l
int	obj/kernel.asm	/^int kern_init(void) __attribute__((noreturn));$/;"	l
int	obj/kernel.asm	/^int$/;"	l
int_gate	obj/kernel.asm	/^#define int_gate(gate) {asm volatile ("int %0" :: "i" (gate));}$/;"	d
iobase	obj/kernel.asm	/^        iobase = IO_BASE(ideno);$/;"	d
irq_mask	obj/kernel.asm	/^    irq_mask = mask;$/;"	d
is_find_big_one	obj/kernel.asm	/^            is_find_big_one = 1;$/;"	d
is_panic	obj/kernel.asm	/^    is_panic = 1;$/;"	d
kern_entry	obj/kernel.asm	/^kern_entry:$/;"	l
kernel_thread_entry	obj/kernel.asm	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
l	obj/kernel.asm	/^            l = m;$/;"	d
l	obj/kernel.asm	/^            l = true_m + 1;$/;"	d
l	obj/kernel.asm	/^        l = *region_right;$/;"	d
la	obj/kernel.asm	/^    la = ROUNDDOWN(la, PGSIZE);$/;"	d
last	obj/kernel.asm	/^        last = (current == idleproc) ? &proc_list : &(current->list_link);$/;"	d
last_pid	obj/kernel.asm	/^                        last_pid = 1;$/;"	d
last_pid	obj/kernel.asm	/^        last_pid = 1;$/;"	d
le	obj/kernel.asm	/^        le = last;$/;"	d
le	obj/kernel.asm	/^        le = list;$/;"	d
le	obj/kernel.asm	/^        le = list_next(le);$/;"	d
le	obj/kernel.asm	/^     le = &free_list;$/;"	d
le	obj/kernel.asm	/^    le = &free_list;$/;"	d
le_next	obj/kernel.asm	/^    le_next = list_next(le_prev);$/;"	d
le_pos	obj/kernel.asm	/^            le_pos = list_prev(le);$/;"	d
le_prev	obj/kernel.asm	/^            le_prev = le;$/;"	d
len	obj/kernel.asm	/^        len = PROC_NAME_LEN;$/;"	d
lflag	obj/kernel.asm	/^        lflag = altflag = 0;$/;"	d
lline	obj/kernel.asm	/^        lline = lfile;$/;"	d
lline	obj/kernel.asm	/^        lline = lfun;$/;"	d
local_intr_restore	obj/kernel.asm	/^#define local_intr_restore(x)   __intr_restore(x);$/;"	d
long	obj/kernel.asm	/^long$/;"	l
m	obj/kernel.asm	/^		m = slob_alloc(size + SLOB_UNIT, gfp, 0);$/;"	d
max_swap_offset	obj/kernel.asm	/^    max_swap_offset = ide_device_size(SWAP_DEV_NO) \/ (PGSIZE \/ SECTSIZE);$/;"	d
maxpa	obj/kernel.asm	/^                maxpa = end;$/;"	d
maxpa	obj/kernel.asm	/^        maxpa = KMEMSIZE;$/;"	d
mm	obj/kernel.asm	/^        mm = check_mm_struct;$/;"	d
mm	obj/kernel.asm	/^        mm = current->mm;$/;"	d
mm	obj/kernel.asm	/^        mm = oldmm;$/;"	d
next	obj/kernel.asm	/^                next = le2proc(le, list_link);$/;"	d
next	obj/kernel.asm	/^            next = idleproc;$/;"	d
next	obj/kernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/kernel.asm	/^    next = seed;$/;"	d
next_safe	obj/kernel.asm	/^                    next_safe = MAX_PID;$/;"	d
next_safe	obj/kernel.asm	/^                next_safe = proc->pid;$/;"	d
next_safe	obj/kernel.asm	/^        next_safe = MAX_PID;$/;"	d
npage	obj/kernel.asm	/^    npage = maxpa \/ PGSIZE;$/;"	d
nr_free	obj/kernel.asm	/^     nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^     nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^#define nr_free (free_area.nr_free)$/;"	d
num	obj/kernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/kernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/kernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/kernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/kernel.asm	/^        number:$/;"	l
nvma	obj/kernel.asm	/^        nvma = vma_create(vma->vm_start, vma->vm_end, vma->vm_flags);$/;"	d
off	obj/kernel.asm	/^            off = start + PGSIZE - la, size = PGSIZE - off;$/;"	d
off	obj/kernel.asm	/^            off = start - la, size = PGSIZE - off, la += PGSIZE;$/;"	d
out	obj/kernel.asm	/^out:$/;"	l
p	obj/kernel.asm	/^                p = "(null)";$/;"	d
p	obj/kernel.asm	/^        p = le2page(le, page_link);$/;"	d
p	obj/kernel.asm	/^    p = alloc_page();$/;"	d
p0	obj/kernel.asm	/^    p0 = p1 = p2 = NULL;$/;"	d
p1	obj/kernel.asm	/^    p1 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = p0 + 1;$/;"	d
pa	obj/kernel.asm	/^    pa = ROUNDDOWN(pa, PGSIZE);$/;"	d
padc	obj/kernel.asm	/^            padc = '-';$/;"	d
padc	obj/kernel.asm	/^            padc = '0';$/;"	d
page	obj/kernel.asm	/^              page = pmm_manager->alloc_pages(n);$/;"	d
page	obj/kernel.asm	/^            page = p;$/;"	d
pages	obj/kernel.asm	/^    pages = (struct Page *)ROUNDUP((void *)end, PGSIZE);$/;"	d
panic_dead	obj/kernel.asm	/^panic_dead:$/;"	l
pmm_manager	obj/kernel.asm	/^    pmm_manager = &default_pmm_manager;$/;"	d
pos	obj/kernel.asm	/^    pos = inb(addr_6845 + 1) << 8;$/;"	d
precision	obj/kernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kernel.asm	/^            precision = va_arg(ap, int);$/;"	d
prev	obj/kernel.asm	/^				prev = cur;$/;"	d
prev	obj/kernel.asm	/^	prev = slobfree;$/;"	d
proc	obj/kernel.asm	/^            proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^            proc = le2proc(le, list_link);$/;"	d
proc	obj/kernel.asm	/^        proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^        proc = current->parent;$/;"	d
proc	obj/kernel.asm	/^        proc = find_proc(pid);$/;"	d
proc	obj/kernel.asm	/^    proc = alloc_proc();$/;"	d
process_precision	obj/kernel.asm	/^        process_precision:$/;"	l
pte_t	obj/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kernel.asm	/^    ptep = &((pte_t *)KADDR(PDE_ADDR(boot_pgdir[0])))[1];$/;"	d
ptep	obj/kernel.asm	/^   ptep = get_pte(mm->pgdir, addr, 1);$/;"	d
r	obj/kernel.asm	/^            r = m - 1;$/;"	d
relocated	obj/kernel.asm	/^relocated:$/;"	l
repeat	obj/kernel.asm	/^    repeat:$/;"	l
repeat	obj/kernel.asm	/^repeat:$/;"	l
reswitch	obj/kernel.asm	/^    reswitch:$/;"	l
ret	obj/kernel.asm	/^            ret = -E_INVAL_ELF;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_INVAL_ELF;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^        ret = dup_mmap(mm, oldmm);$/;"	d
ret	obj/kernel.asm	/^        ret = pmm_manager->nr_free_pages();$/;"	d
ret	obj/kernel.asm	/^    ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^    ret = 0;$/;"	d
ret	obj/kernel.asm	/^    ret = proc->pid;$/;"	d
ret	obj/kernel.asm	/^   ret = 0;$/;"	d
rline	obj/kernel.asm	/^        rline = rfile;$/;"	d
rline	obj/kernel.asm	/^        rline = rfun;$/;"	d
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA);$/;"	d
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA_EXT);$/;"	d
serial_exists	obj/kernel.asm	/^    serial_exists = (inb(COM1 + COM_LSR) != 0xFF);$/;"	d
size_t	obj/kernel.asm	/^size_t$/;"	l
slobfree	obj/kernel.asm	/^			slobfree = prev;$/;"	d
slobfree	obj/kernel.asm	/^	slobfree = cur;$/;"	d
sm	obj/kernel.asm	/^     sm = &swap_manager_fifo;$/;"	d
spin	obj/kernel.asm	/^spin:$/;"	l
stab_end	obj/kernel.asm	/^        stab_end = __STAB_END__;$/;"	d
stab_end	obj/kernel.asm	/^        stab_end = usd->stab_end;$/;"	d
stabs	obj/kernel.asm	/^        stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kernel.asm	/^        stabs = usd->stabs;$/;"	d
stabstr	obj/kernel.asm	/^        stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kernel.asm	/^        stabstr = usd->stabstr;$/;"	d
stabstr_end	obj/kernel.asm	/^        stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kernel.asm	/^        stabstr_end = usd->stabstr_end;$/;"	d
start	obj/kernel.asm	/^            start = ROUNDDOWN(start + PTSIZE, PTSIZE);$/;"	d
start	obj/kernel.asm	/^            start = vma->vm_end;$/;"	d
start	obj/kernel.asm	/^    start = ROUNDDOWN(start, PTSIZE);$/;"	d
static	obj/kernel.asm	/^static __noinline uint32_t$/;"	l
static	obj/kernel.asm	/^static bigblock_t *bigblocks;$/;"	l
static	obj/kernel.asm	/^static bool did_init = 0;$/;"	l
static	obj/kernel.asm	/^static bool serial_exists = 0;$/;"	l
static	obj/kernel.asm	/^static const char *$/;"	l
static	obj/kernel.asm	/^static inline bool$/;"	l
static	obj/kernel.asm	/^static inline char *$/;"	l
static	obj/kernel.asm	/^static inline int$/;"	l
static	obj/kernel.asm	/^static inline list_entry_t *$/;"	l
static	obj/kernel.asm	/^static inline ppn_t$/;"	l
static	obj/kernel.asm	/^static inline struct Page *$/;"	l
static	obj/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kernel.asm	/^static inline uintptr_t$/;"	l
static	obj/kernel.asm	/^static inline void *$/;"	l
static	obj/kernel.asm	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	l
static	obj/kernel.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/kernel.asm	/^static inline void$/;"	l
static	obj/kernel.asm	/^static int find_order(int size)$/;"	l
static	obj/kernel.asm	/^static int$/;"	l
static	obj/kernel.asm	/^static long long$/;"	l
static	obj/kernel.asm	/^static size_t$/;"	l
static	obj/kernel.asm	/^static slob_t *slobfree = &arena;$/;"	l
static	obj/kernel.asm	/^static struct Page *$/;"	t
static	obj/kernel.asm	/^static struct proc_struct *$/;"	t
static	obj/kernel.asm	/^static uint16_t addr_6845;$/;"	l
static	obj/kernel.asm	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	l
static	obj/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kernel.asm	/^static void *$/;"	l
static	obj/kernel.asm	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	l
static	obj/kernel.asm	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	l
static	obj/kernel.asm	/^static void check_pgfault(void);$/;"	l
static	obj/kernel.asm	/^static void check_swap(void);$/;"	l
static	obj/kernel.asm	/^static void check_vma_struct(void);$/;"	l
static	obj/kernel.asm	/^static void lab1_switch_test(void);$/;"	l
static	obj/kernel.asm	/^static void print_ticks() {$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *b, int size);$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *block, int size)$/;"	l
static	obj/kernel.asm	/^static void$/;"	l
static	obj/kernel.asm	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	l
static	obj/kernel.asm	/^static volatile int in_swap_tick_event = 0;$/;"	l
swap_init_ok	obj/kernel.asm	/^          swap_init_ok = 1;$/;"	d
switch_to	obj/kernel.asm	/^switch_to:                      # switch_to(from, to)$/;"	l
temp_ptep	obj/kernel.asm	/^     temp_ptep = get_pte(mm->pgdir, BEING_CHECK_VALID_VADDR, 1);$/;"	d
ticks	obj/kernel.asm	/^    ticks = 0;$/;"	d
ticks_record	obj/kernel.asm	/^            ticks_record = 0;$/;"	d
tmp_kernel_frame	obj/kernel.asm	/^            tmp_kernel_frame = (struct trapframe *)(tf->tf_esp - (sizeof(struct trapframe) - 8));$/;"	d
tmp_user_frame	obj/kernel.asm	/^            tmp_user_frame = *tf;$/;"	d
typedef	obj/kernel.asm	/^typedef volatile bool lock_t;$/;"	l
uint32_t	obj/kernel.asm	/^uint32_t$/;"	l
unsigned	obj/kernel.asm	/^unsigned int ksize(const void *block)$/;"	l
vector0	obj/kernel.asm	/^vector0:$/;"	l
vector1	obj/kernel.asm	/^vector1:$/;"	l
vector10	obj/kernel.asm	/^vector10:$/;"	l
vector100	obj/kernel.asm	/^vector100:$/;"	l
vector101	obj/kernel.asm	/^vector101:$/;"	l
vector102	obj/kernel.asm	/^vector102:$/;"	l
vector103	obj/kernel.asm	/^vector103:$/;"	l
vector104	obj/kernel.asm	/^vector104:$/;"	l
vector105	obj/kernel.asm	/^vector105:$/;"	l
vector106	obj/kernel.asm	/^vector106:$/;"	l
vector107	obj/kernel.asm	/^vector107:$/;"	l
vector108	obj/kernel.asm	/^vector108:$/;"	l
vector109	obj/kernel.asm	/^vector109:$/;"	l
vector11	obj/kernel.asm	/^vector11:$/;"	l
vector110	obj/kernel.asm	/^vector110:$/;"	l
vector111	obj/kernel.asm	/^vector111:$/;"	l
vector112	obj/kernel.asm	/^vector112:$/;"	l
vector113	obj/kernel.asm	/^vector113:$/;"	l
vector114	obj/kernel.asm	/^vector114:$/;"	l
vector115	obj/kernel.asm	/^vector115:$/;"	l
vector116	obj/kernel.asm	/^vector116:$/;"	l
vector117	obj/kernel.asm	/^vector117:$/;"	l
vector118	obj/kernel.asm	/^vector118:$/;"	l
vector119	obj/kernel.asm	/^vector119:$/;"	l
vector12	obj/kernel.asm	/^vector12:$/;"	l
vector120	obj/kernel.asm	/^vector120:$/;"	l
vector121	obj/kernel.asm	/^vector121:$/;"	l
vector122	obj/kernel.asm	/^vector122:$/;"	l
vector123	obj/kernel.asm	/^vector123:$/;"	l
vector124	obj/kernel.asm	/^vector124:$/;"	l
vector125	obj/kernel.asm	/^vector125:$/;"	l
vector126	obj/kernel.asm	/^vector126:$/;"	l
vector127	obj/kernel.asm	/^vector127:$/;"	l
vector128	obj/kernel.asm	/^vector128:$/;"	l
vector129	obj/kernel.asm	/^vector129:$/;"	l
vector13	obj/kernel.asm	/^vector13:$/;"	l
vector130	obj/kernel.asm	/^vector130:$/;"	l
vector131	obj/kernel.asm	/^vector131:$/;"	l
vector132	obj/kernel.asm	/^vector132:$/;"	l
vector133	obj/kernel.asm	/^vector133:$/;"	l
vector134	obj/kernel.asm	/^vector134:$/;"	l
vector135	obj/kernel.asm	/^vector135:$/;"	l
vector136	obj/kernel.asm	/^vector136:$/;"	l
vector137	obj/kernel.asm	/^vector137:$/;"	l
vector138	obj/kernel.asm	/^vector138:$/;"	l
vector139	obj/kernel.asm	/^vector139:$/;"	l
vector14	obj/kernel.asm	/^vector14:$/;"	l
vector140	obj/kernel.asm	/^vector140:$/;"	l
vector141	obj/kernel.asm	/^vector141:$/;"	l
vector142	obj/kernel.asm	/^vector142:$/;"	l
vector143	obj/kernel.asm	/^vector143:$/;"	l
vector144	obj/kernel.asm	/^vector144:$/;"	l
vector145	obj/kernel.asm	/^vector145:$/;"	l
vector146	obj/kernel.asm	/^vector146:$/;"	l
vector147	obj/kernel.asm	/^vector147:$/;"	l
vector148	obj/kernel.asm	/^vector148:$/;"	l
vector149	obj/kernel.asm	/^vector149:$/;"	l
vector15	obj/kernel.asm	/^vector15:$/;"	l
vector150	obj/kernel.asm	/^vector150:$/;"	l
vector151	obj/kernel.asm	/^vector151:$/;"	l
vector152	obj/kernel.asm	/^vector152:$/;"	l
vector153	obj/kernel.asm	/^vector153:$/;"	l
vector154	obj/kernel.asm	/^vector154:$/;"	l
vector155	obj/kernel.asm	/^vector155:$/;"	l
vector156	obj/kernel.asm	/^vector156:$/;"	l
vector157	obj/kernel.asm	/^vector157:$/;"	l
vector158	obj/kernel.asm	/^vector158:$/;"	l
vector159	obj/kernel.asm	/^vector159:$/;"	l
vector16	obj/kernel.asm	/^vector16:$/;"	l
vector160	obj/kernel.asm	/^vector160:$/;"	l
vector161	obj/kernel.asm	/^vector161:$/;"	l
vector162	obj/kernel.asm	/^vector162:$/;"	l
vector163	obj/kernel.asm	/^vector163:$/;"	l
vector164	obj/kernel.asm	/^vector164:$/;"	l
vector165	obj/kernel.asm	/^vector165:$/;"	l
vector166	obj/kernel.asm	/^vector166:$/;"	l
vector167	obj/kernel.asm	/^vector167:$/;"	l
vector168	obj/kernel.asm	/^vector168:$/;"	l
vector169	obj/kernel.asm	/^vector169:$/;"	l
vector17	obj/kernel.asm	/^vector17:$/;"	l
vector170	obj/kernel.asm	/^vector170:$/;"	l
vector171	obj/kernel.asm	/^vector171:$/;"	l
vector172	obj/kernel.asm	/^vector172:$/;"	l
vector173	obj/kernel.asm	/^vector173:$/;"	l
vector174	obj/kernel.asm	/^vector174:$/;"	l
vector175	obj/kernel.asm	/^vector175:$/;"	l
vector176	obj/kernel.asm	/^vector176:$/;"	l
vector177	obj/kernel.asm	/^vector177:$/;"	l
vector178	obj/kernel.asm	/^vector178:$/;"	l
vector179	obj/kernel.asm	/^vector179:$/;"	l
vector18	obj/kernel.asm	/^vector18:$/;"	l
vector180	obj/kernel.asm	/^vector180:$/;"	l
vector181	obj/kernel.asm	/^vector181:$/;"	l
vector182	obj/kernel.asm	/^vector182:$/;"	l
vector183	obj/kernel.asm	/^vector183:$/;"	l
vector184	obj/kernel.asm	/^vector184:$/;"	l
vector185	obj/kernel.asm	/^vector185:$/;"	l
vector186	obj/kernel.asm	/^vector186:$/;"	l
vector187	obj/kernel.asm	/^vector187:$/;"	l
vector188	obj/kernel.asm	/^vector188:$/;"	l
vector189	obj/kernel.asm	/^vector189:$/;"	l
vector19	obj/kernel.asm	/^vector19:$/;"	l
vector190	obj/kernel.asm	/^vector190:$/;"	l
vector191	obj/kernel.asm	/^vector191:$/;"	l
vector192	obj/kernel.asm	/^vector192:$/;"	l
vector193	obj/kernel.asm	/^vector193:$/;"	l
vector194	obj/kernel.asm	/^vector194:$/;"	l
vector195	obj/kernel.asm	/^vector195:$/;"	l
vector196	obj/kernel.asm	/^vector196:$/;"	l
vector197	obj/kernel.asm	/^vector197:$/;"	l
vector198	obj/kernel.asm	/^vector198:$/;"	l
vector199	obj/kernel.asm	/^vector199:$/;"	l
vector2	obj/kernel.asm	/^vector2:$/;"	l
vector20	obj/kernel.asm	/^vector20:$/;"	l
vector200	obj/kernel.asm	/^vector200:$/;"	l
vector201	obj/kernel.asm	/^vector201:$/;"	l
vector202	obj/kernel.asm	/^vector202:$/;"	l
vector203	obj/kernel.asm	/^vector203:$/;"	l
vector204	obj/kernel.asm	/^vector204:$/;"	l
vector205	obj/kernel.asm	/^vector205:$/;"	l
vector206	obj/kernel.asm	/^vector206:$/;"	l
vector207	obj/kernel.asm	/^vector207:$/;"	l
vector208	obj/kernel.asm	/^vector208:$/;"	l
vector209	obj/kernel.asm	/^vector209:$/;"	l
vector21	obj/kernel.asm	/^vector21:$/;"	l
vector210	obj/kernel.asm	/^vector210:$/;"	l
vector211	obj/kernel.asm	/^vector211:$/;"	l
vector212	obj/kernel.asm	/^vector212:$/;"	l
vector213	obj/kernel.asm	/^vector213:$/;"	l
vector214	obj/kernel.asm	/^vector214:$/;"	l
vector215	obj/kernel.asm	/^vector215:$/;"	l
vector216	obj/kernel.asm	/^vector216:$/;"	l
vector217	obj/kernel.asm	/^vector217:$/;"	l
vector218	obj/kernel.asm	/^vector218:$/;"	l
vector219	obj/kernel.asm	/^vector219:$/;"	l
vector22	obj/kernel.asm	/^vector22:$/;"	l
vector220	obj/kernel.asm	/^vector220:$/;"	l
vector221	obj/kernel.asm	/^vector221:$/;"	l
vector222	obj/kernel.asm	/^vector222:$/;"	l
vector223	obj/kernel.asm	/^vector223:$/;"	l
vector224	obj/kernel.asm	/^vector224:$/;"	l
vector225	obj/kernel.asm	/^vector225:$/;"	l
vector226	obj/kernel.asm	/^vector226:$/;"	l
vector227	obj/kernel.asm	/^vector227:$/;"	l
vector228	obj/kernel.asm	/^vector228:$/;"	l
vector229	obj/kernel.asm	/^vector229:$/;"	l
vector23	obj/kernel.asm	/^vector23:$/;"	l
vector230	obj/kernel.asm	/^vector230:$/;"	l
vector231	obj/kernel.asm	/^vector231:$/;"	l
vector232	obj/kernel.asm	/^vector232:$/;"	l
vector233	obj/kernel.asm	/^vector233:$/;"	l
vector234	obj/kernel.asm	/^vector234:$/;"	l
vector235	obj/kernel.asm	/^vector235:$/;"	l
vector236	obj/kernel.asm	/^vector236:$/;"	l
vector237	obj/kernel.asm	/^vector237:$/;"	l
vector238	obj/kernel.asm	/^vector238:$/;"	l
vector239	obj/kernel.asm	/^vector239:$/;"	l
vector24	obj/kernel.asm	/^vector24:$/;"	l
vector240	obj/kernel.asm	/^vector240:$/;"	l
vector241	obj/kernel.asm	/^vector241:$/;"	l
vector242	obj/kernel.asm	/^vector242:$/;"	l
vector243	obj/kernel.asm	/^vector243:$/;"	l
vector244	obj/kernel.asm	/^vector244:$/;"	l
vector245	obj/kernel.asm	/^vector245:$/;"	l
vector246	obj/kernel.asm	/^vector246:$/;"	l
vector247	obj/kernel.asm	/^vector247:$/;"	l
vector248	obj/kernel.asm	/^vector248:$/;"	l
vector249	obj/kernel.asm	/^vector249:$/;"	l
vector25	obj/kernel.asm	/^vector25:$/;"	l
vector250	obj/kernel.asm	/^vector250:$/;"	l
vector251	obj/kernel.asm	/^vector251:$/;"	l
vector252	obj/kernel.asm	/^vector252:$/;"	l
vector253	obj/kernel.asm	/^vector253:$/;"	l
vector254	obj/kernel.asm	/^vector254:$/;"	l
vector255	obj/kernel.asm	/^vector255:$/;"	l
vector26	obj/kernel.asm	/^vector26:$/;"	l
vector27	obj/kernel.asm	/^vector27:$/;"	l
vector28	obj/kernel.asm	/^vector28:$/;"	l
vector29	obj/kernel.asm	/^vector29:$/;"	l
vector3	obj/kernel.asm	/^vector3:$/;"	l
vector30	obj/kernel.asm	/^vector30:$/;"	l
vector31	obj/kernel.asm	/^vector31:$/;"	l
vector32	obj/kernel.asm	/^vector32:$/;"	l
vector33	obj/kernel.asm	/^vector33:$/;"	l
vector34	obj/kernel.asm	/^vector34:$/;"	l
vector35	obj/kernel.asm	/^vector35:$/;"	l
vector36	obj/kernel.asm	/^vector36:$/;"	l
vector37	obj/kernel.asm	/^vector37:$/;"	l
vector38	obj/kernel.asm	/^vector38:$/;"	l
vector39	obj/kernel.asm	/^vector39:$/;"	l
vector4	obj/kernel.asm	/^vector4:$/;"	l
vector40	obj/kernel.asm	/^vector40:$/;"	l
vector41	obj/kernel.asm	/^vector41:$/;"	l
vector42	obj/kernel.asm	/^vector42:$/;"	l
vector43	obj/kernel.asm	/^vector43:$/;"	l
vector44	obj/kernel.asm	/^vector44:$/;"	l
vector45	obj/kernel.asm	/^vector45:$/;"	l
vector46	obj/kernel.asm	/^vector46:$/;"	l
vector47	obj/kernel.asm	/^vector47:$/;"	l
vector48	obj/kernel.asm	/^vector48:$/;"	l
vector49	obj/kernel.asm	/^vector49:$/;"	l
vector5	obj/kernel.asm	/^vector5:$/;"	l
vector50	obj/kernel.asm	/^vector50:$/;"	l
vector51	obj/kernel.asm	/^vector51:$/;"	l
vector52	obj/kernel.asm	/^vector52:$/;"	l
vector53	obj/kernel.asm	/^vector53:$/;"	l
vector54	obj/kernel.asm	/^vector54:$/;"	l
vector55	obj/kernel.asm	/^vector55:$/;"	l
vector56	obj/kernel.asm	/^vector56:$/;"	l
vector57	obj/kernel.asm	/^vector57:$/;"	l
vector58	obj/kernel.asm	/^vector58:$/;"	l
vector59	obj/kernel.asm	/^vector59:$/;"	l
vector6	obj/kernel.asm	/^vector6:$/;"	l
vector60	obj/kernel.asm	/^vector60:$/;"	l
vector61	obj/kernel.asm	/^vector61:$/;"	l
vector62	obj/kernel.asm	/^vector62:$/;"	l
vector63	obj/kernel.asm	/^vector63:$/;"	l
vector64	obj/kernel.asm	/^vector64:$/;"	l
vector65	obj/kernel.asm	/^vector65:$/;"	l
vector66	obj/kernel.asm	/^vector66:$/;"	l
vector67	obj/kernel.asm	/^vector67:$/;"	l
vector68	obj/kernel.asm	/^vector68:$/;"	l
vector69	obj/kernel.asm	/^vector69:$/;"	l
vector7	obj/kernel.asm	/^vector7:$/;"	l
vector70	obj/kernel.asm	/^vector70:$/;"	l
vector71	obj/kernel.asm	/^vector71:$/;"	l
vector72	obj/kernel.asm	/^vector72:$/;"	l
vector73	obj/kernel.asm	/^vector73:$/;"	l
vector74	obj/kernel.asm	/^vector74:$/;"	l
vector75	obj/kernel.asm	/^vector75:$/;"	l
vector76	obj/kernel.asm	/^vector76:$/;"	l
vector77	obj/kernel.asm	/^vector77:$/;"	l
vector78	obj/kernel.asm	/^vector78:$/;"	l
vector79	obj/kernel.asm	/^vector79:$/;"	l
vector8	obj/kernel.asm	/^vector8:$/;"	l
vector80	obj/kernel.asm	/^vector80:$/;"	l
vector81	obj/kernel.asm	/^vector81:$/;"	l
vector82	obj/kernel.asm	/^vector82:$/;"	l
vector83	obj/kernel.asm	/^vector83:$/;"	l
vector84	obj/kernel.asm	/^vector84:$/;"	l
vector85	obj/kernel.asm	/^vector85:$/;"	l
vector86	obj/kernel.asm	/^vector86:$/;"	l
vector87	obj/kernel.asm	/^vector87:$/;"	l
vector88	obj/kernel.asm	/^vector88:$/;"	l
vector89	obj/kernel.asm	/^vector89:$/;"	l
vector9	obj/kernel.asm	/^vector9:$/;"	l
vector90	obj/kernel.asm	/^vector90:$/;"	l
vector91	obj/kernel.asm	/^vector91:$/;"	l
vector92	obj/kernel.asm	/^vector92:$/;"	l
vector93	obj/kernel.asm	/^vector93:$/;"	l
vector94	obj/kernel.asm	/^vector94:$/;"	l
vector95	obj/kernel.asm	/^vector95:$/;"	l
vector96	obj/kernel.asm	/^vector96:$/;"	l
vector97	obj/kernel.asm	/^vector97:$/;"	l
vector98	obj/kernel.asm	/^vector98:$/;"	l
vector99	obj/kernel.asm	/^vector99:$/;"	l
vm_flags	obj/kernel.asm	/^        vm_flags = 0, perm = PTE_U;$/;"	d
vm_flags	obj/kernel.asm	/^    vm_flags = VM_READ | VM_WRITE | VM_STACK;$/;"	d
vma	obj/kernel.asm	/^                    vma = NULL;$/;"	d
vma	obj/kernel.asm	/^                    vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = mm->mmap_cache;$/;"	d
void	obj/kernel.asm	/^void *$/;"	l
void	obj/kernel.asm	/^void __attribute__((noinline))$/;"	l
void	obj/kernel.asm	/^void forkrets(struct trapframe *tf);$/;"	l
void	obj/kernel.asm	/^void grade_backtrace(void);$/;"	l
void	obj/kernel.asm	/^void kfree(void *block)$/;"	l
void	obj/kernel.asm	/^void print_free_link(){$/;"	l
void	obj/kernel.asm	/^void switch_to(struct context *from, struct context *to);$/;"	l
void	obj/kernel.asm	/^void$/;"	l
volatile	obj/kernel.asm	/^volatile unsigned int swap_out_num=0;$/;"	l
width	obj/kernel.asm	/^                width = 0;$/;"	d
width	obj/kernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/kernel.asm	/^        width = precision = -1;$/;"	d
Disassembly	obj/user/badarg.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/badarg.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/badarg.asm	/^_start:$/;"	l
altflag	obj/user/badarg.asm	/^            altflag = 1;$/;"	d
base	obj/user/badarg.asm	/^            base = 10;$/;"	d
base	obj/user/badarg.asm	/^            base = 16;$/;"	d
base	obj/user/badarg.asm	/^            base = 8;$/;"	d
base	obj/user/badarg.asm	/^        base = 10;$/;"	d
ch	obj/user/badarg.asm	/^                ch = *fmt;$/;"	d
char	obj/user/badarg.asm	/^char *$/;"	l
cnt	obj/user/badarg.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/badarg.asm	/^        default:$/;"	l
dig	obj/user/badarg.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/badarg.asm	/^                err = -err;$/;"	d
err	obj/user/badarg.asm	/^            err = va_arg(ap, int);$/;"	d
int	obj/user/badarg.asm	/^int main(void);$/;"	l
int	obj/user/badarg.asm	/^int$/;"	l
lflag	obj/user/badarg.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/badarg.asm	/^long$/;"	l
next	obj/user/badarg.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badarg.asm	/^    next = seed;$/;"	d
num	obj/user/badarg.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badarg.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badarg.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badarg.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/badarg.asm	/^        number:$/;"	l
p	obj/user/badarg.asm	/^                p = "(null)";$/;"	d
padc	obj/user/badarg.asm	/^            padc = '-';$/;"	d
padc	obj/user/badarg.asm	/^            padc = '0';$/;"	d
precision	obj/user/badarg.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badarg.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/badarg.asm	/^        process_precision:$/;"	l
reswitch	obj/user/badarg.asm	/^    reswitch:$/;"	l
size_t	obj/user/badarg.asm	/^size_t$/;"	l
static	obj/user/badarg.asm	/^static inline char *$/;"	l
static	obj/user/badarg.asm	/^static inline int$/;"	l
static	obj/user/badarg.asm	/^static inline void *$/;"	l
static	obj/user/badarg.asm	/^static long long$/;"	l
static	obj/user/badarg.asm	/^static unsigned long long$/;"	l
static	obj/user/badarg.asm	/^static void$/;"	l
uint32_t	obj/user/badarg.asm	/^uint32_t$/;"	l
void	obj/user/badarg.asm	/^void *$/;"	l
void	obj/user/badarg.asm	/^void$/;"	l
width	obj/user/badarg.asm	/^                width = 0;$/;"	d
width	obj/user/badarg.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badarg.asm	/^        width = precision = -1;$/;"	d
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/badsegment.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
altflag	obj/user/badsegment.asm	/^            altflag = 1;$/;"	d
base	obj/user/badsegment.asm	/^            base = 10;$/;"	d
base	obj/user/badsegment.asm	/^            base = 16;$/;"	d
base	obj/user/badsegment.asm	/^            base = 8;$/;"	d
base	obj/user/badsegment.asm	/^        base = 10;$/;"	d
ch	obj/user/badsegment.asm	/^                ch = *fmt;$/;"	d
char	obj/user/badsegment.asm	/^char *$/;"	l
cnt	obj/user/badsegment.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/badsegment.asm	/^        default:$/;"	l
dig	obj/user/badsegment.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/badsegment.asm	/^                err = -err;$/;"	d
err	obj/user/badsegment.asm	/^            err = va_arg(ap, int);$/;"	d
int	obj/user/badsegment.asm	/^int main(void);$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
lflag	obj/user/badsegment.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/badsegment.asm	/^long$/;"	l
next	obj/user/badsegment.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badsegment.asm	/^    next = seed;$/;"	d
num	obj/user/badsegment.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badsegment.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badsegment.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/badsegment.asm	/^        number:$/;"	l
p	obj/user/badsegment.asm	/^                p = "(null)";$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '0';$/;"	d
precision	obj/user/badsegment.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/badsegment.asm	/^        process_precision:$/;"	l
reswitch	obj/user/badsegment.asm	/^    reswitch:$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
static	obj/user/badsegment.asm	/^static inline char *$/;"	l
static	obj/user/badsegment.asm	/^static inline int$/;"	l
static	obj/user/badsegment.asm	/^static inline void *$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
uint32_t	obj/user/badsegment.asm	/^uint32_t$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
width	obj/user/badsegment.asm	/^                width = 0;$/;"	d
width	obj/user/badsegment.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^        width = precision = -1;$/;"	d
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/divzero.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/divzero.asm	/^_start:$/;"	l
altflag	obj/user/divzero.asm	/^            altflag = 1;$/;"	d
base	obj/user/divzero.asm	/^            base = 10;$/;"	d
base	obj/user/divzero.asm	/^            base = 16;$/;"	d
base	obj/user/divzero.asm	/^            base = 8;$/;"	d
base	obj/user/divzero.asm	/^        base = 10;$/;"	d
ch	obj/user/divzero.asm	/^                ch = *fmt;$/;"	d
char	obj/user/divzero.asm	/^char *$/;"	l
cnt	obj/user/divzero.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/divzero.asm	/^        default:$/;"	l
dig	obj/user/divzero.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/divzero.asm	/^                err = -err;$/;"	d
err	obj/user/divzero.asm	/^            err = va_arg(ap, int);$/;"	d
int	obj/user/divzero.asm	/^int main(void);$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
lflag	obj/user/divzero.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/divzero.asm	/^long$/;"	l
next	obj/user/divzero.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/divzero.asm	/^    next = seed;$/;"	d
num	obj/user/divzero.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/divzero.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/divzero.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/divzero.asm	/^        number:$/;"	l
p	obj/user/divzero.asm	/^                p = "(null)";$/;"	d
padc	obj/user/divzero.asm	/^            padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^            padc = '0';$/;"	d
precision	obj/user/divzero.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/divzero.asm	/^        process_precision:$/;"	l
reswitch	obj/user/divzero.asm	/^    reswitch:$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
static	obj/user/divzero.asm	/^static inline char *$/;"	l
static	obj/user/divzero.asm	/^static inline int$/;"	l
static	obj/user/divzero.asm	/^static inline void *$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
uint32_t	obj/user/divzero.asm	/^uint32_t$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
width	obj/user/divzero.asm	/^                width = 0;$/;"	d
width	obj/user/divzero.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^        width = precision = -1;$/;"	d
Disassembly	obj/user/exit.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/exit.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/exit.asm	/^_start:$/;"	l
altflag	obj/user/exit.asm	/^            altflag = 1;$/;"	d
base	obj/user/exit.asm	/^            base = 10;$/;"	d
base	obj/user/exit.asm	/^            base = 16;$/;"	d
base	obj/user/exit.asm	/^            base = 8;$/;"	d
base	obj/user/exit.asm	/^        base = 10;$/;"	d
ch	obj/user/exit.asm	/^                ch = *fmt;$/;"	d
char	obj/user/exit.asm	/^char *$/;"	l
cnt	obj/user/exit.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/exit.asm	/^        default:$/;"	l
dig	obj/user/exit.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/exit.asm	/^                err = -err;$/;"	d
err	obj/user/exit.asm	/^            err = va_arg(ap, int);$/;"	d
int	obj/user/exit.asm	/^int magic = -0x10384;$/;"	l
int	obj/user/exit.asm	/^int main(void);$/;"	l
int	obj/user/exit.asm	/^int$/;"	l
lflag	obj/user/exit.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/exit.asm	/^long$/;"	l
next	obj/user/exit.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/exit.asm	/^    next = seed;$/;"	d
num	obj/user/exit.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/exit.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/exit.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/exit.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/exit.asm	/^        number:$/;"	l
p	obj/user/exit.asm	/^                p = "(null)";$/;"	d
padc	obj/user/exit.asm	/^            padc = '-';$/;"	d
padc	obj/user/exit.asm	/^            padc = '0';$/;"	d
precision	obj/user/exit.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/exit.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/exit.asm	/^        process_precision:$/;"	l
reswitch	obj/user/exit.asm	/^    reswitch:$/;"	l
size_t	obj/user/exit.asm	/^size_t$/;"	l
static	obj/user/exit.asm	/^static inline char *$/;"	l
static	obj/user/exit.asm	/^static inline int$/;"	l
static	obj/user/exit.asm	/^static inline void *$/;"	l
static	obj/user/exit.asm	/^static long long$/;"	l
static	obj/user/exit.asm	/^static unsigned long long$/;"	l
static	obj/user/exit.asm	/^static void$/;"	l
uint32_t	obj/user/exit.asm	/^uint32_t$/;"	l
void	obj/user/exit.asm	/^void *$/;"	l
void	obj/user/exit.asm	/^void$/;"	l
width	obj/user/exit.asm	/^                width = 0;$/;"	d
width	obj/user/exit.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/exit.asm	/^        width = precision = -1;$/;"	d
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/faultread.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/faultread.asm	/^_start:$/;"	l
altflag	obj/user/faultread.asm	/^            altflag = 1;$/;"	d
base	obj/user/faultread.asm	/^            base = 10;$/;"	d
base	obj/user/faultread.asm	/^            base = 16;$/;"	d
base	obj/user/faultread.asm	/^            base = 8;$/;"	d
base	obj/user/faultread.asm	/^        base = 10;$/;"	d
ch	obj/user/faultread.asm	/^                ch = *fmt;$/;"	d
char	obj/user/faultread.asm	/^char *$/;"	l
cnt	obj/user/faultread.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/faultread.asm	/^        default:$/;"	l
dig	obj/user/faultread.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/faultread.asm	/^                err = -err;$/;"	d
err	obj/user/faultread.asm	/^            err = va_arg(ap, int);$/;"	d
int	obj/user/faultread.asm	/^int main(void);$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
lflag	obj/user/faultread.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/faultread.asm	/^long$/;"	l
next	obj/user/faultread.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultread.asm	/^    next = seed;$/;"	d
num	obj/user/faultread.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultread.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultread.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultread.asm	/^        number:$/;"	l
p	obj/user/faultread.asm	/^                p = "(null)";$/;"	d
padc	obj/user/faultread.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^            padc = '0';$/;"	d
precision	obj/user/faultread.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultread.asm	/^        process_precision:$/;"	l
reswitch	obj/user/faultread.asm	/^    reswitch:$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
static	obj/user/faultread.asm	/^static inline char *$/;"	l
static	obj/user/faultread.asm	/^static inline int$/;"	l
static	obj/user/faultread.asm	/^static inline void *$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
uint32_t	obj/user/faultread.asm	/^uint32_t$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
width	obj/user/faultread.asm	/^                width = 0;$/;"	d
width	obj/user/faultread.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^        width = precision = -1;$/;"	d
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/faultreadkernel.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
altflag	obj/user/faultreadkernel.asm	/^            altflag = 1;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^        base = 10;$/;"	d
ch	obj/user/faultreadkernel.asm	/^                ch = *fmt;$/;"	d
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
cnt	obj/user/faultreadkernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/faultreadkernel.asm	/^        default:$/;"	l
dig	obj/user/faultreadkernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/faultreadkernel.asm	/^                err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^            err = va_arg(ap, int);$/;"	d
int	obj/user/faultreadkernel.asm	/^int main(void);$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
lflag	obj/user/faultreadkernel.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/faultreadkernel.asm	/^long$/;"	l
next	obj/user/faultreadkernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultreadkernel.asm	/^    next = seed;$/;"	d
num	obj/user/faultreadkernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultreadkernel.asm	/^        number:$/;"	l
p	obj/user/faultreadkernel.asm	/^                p = "(null)";$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultreadkernel.asm	/^        process_precision:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^    reswitch:$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline char *$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline int$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline void *$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
uint32_t	obj/user/faultreadkernel.asm	/^uint32_t$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
width	obj/user/faultreadkernel.asm	/^                width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^        width = precision = -1;$/;"	d
Disassembly	obj/user/forktest.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/forktest.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/forktest.asm	/^_start:$/;"	l
altflag	obj/user/forktest.asm	/^            altflag = 1;$/;"	d
base	obj/user/forktest.asm	/^            base = 10;$/;"	d
base	obj/user/forktest.asm	/^            base = 16;$/;"	d
base	obj/user/forktest.asm	/^            base = 8;$/;"	d
base	obj/user/forktest.asm	/^        base = 10;$/;"	d
ch	obj/user/forktest.asm	/^                ch = *fmt;$/;"	d
char	obj/user/forktest.asm	/^char *$/;"	l
cnt	obj/user/forktest.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
const	obj/user/forktest.asm	/^const int max_child = 32;$/;"	l
default	obj/user/forktest.asm	/^        default:$/;"	l
dig	obj/user/forktest.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/forktest.asm	/^                err = -err;$/;"	d
err	obj/user/forktest.asm	/^            err = va_arg(ap, int);$/;"	d
int	obj/user/forktest.asm	/^int main(void);$/;"	l
int	obj/user/forktest.asm	/^int$/;"	l
lflag	obj/user/forktest.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/forktest.asm	/^long$/;"	l
next	obj/user/forktest.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktest.asm	/^    next = seed;$/;"	d
num	obj/user/forktest.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktest.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktest.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktest.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/forktest.asm	/^        number:$/;"	l
p	obj/user/forktest.asm	/^                p = "(null)";$/;"	d
padc	obj/user/forktest.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktest.asm	/^            padc = '0';$/;"	d
precision	obj/user/forktest.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktest.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/forktest.asm	/^        process_precision:$/;"	l
reswitch	obj/user/forktest.asm	/^    reswitch:$/;"	l
size_t	obj/user/forktest.asm	/^size_t$/;"	l
static	obj/user/forktest.asm	/^static inline char *$/;"	l
static	obj/user/forktest.asm	/^static inline int$/;"	l
static	obj/user/forktest.asm	/^static inline void *$/;"	l
static	obj/user/forktest.asm	/^static long long$/;"	l
static	obj/user/forktest.asm	/^static unsigned long long$/;"	l
static	obj/user/forktest.asm	/^static void$/;"	l
uint32_t	obj/user/forktest.asm	/^uint32_t$/;"	l
void	obj/user/forktest.asm	/^void *$/;"	l
void	obj/user/forktest.asm	/^void$/;"	l
width	obj/user/forktest.asm	/^                width = 0;$/;"	d
width	obj/user/forktest.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktest.asm	/^        width = precision = -1;$/;"	d
DEPTH	obj/user/forktree.asm	/^#define DEPTH 4$/;"	d
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/forktree.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/forktree.asm	/^_start:$/;"	l
altflag	obj/user/forktree.asm	/^            altflag = 1;$/;"	d
base	obj/user/forktree.asm	/^            base = 10;$/;"	d
base	obj/user/forktree.asm	/^            base = 16;$/;"	d
base	obj/user/forktree.asm	/^            base = 8;$/;"	d
base	obj/user/forktree.asm	/^        base = 10;$/;"	d
ch	obj/user/forktree.asm	/^                ch = *fmt;$/;"	d
char	obj/user/forktree.asm	/^char *$/;"	l
cnt	obj/user/forktree.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/forktree.asm	/^        default:$/;"	l
dig	obj/user/forktree.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/forktree.asm	/^                err = -err;$/;"	d
err	obj/user/forktree.asm	/^            err = va_arg(ap, int);$/;"	d
int	obj/user/forktree.asm	/^int main(void);$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
lflag	obj/user/forktree.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/forktree.asm	/^long$/;"	l
next	obj/user/forktree.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktree.asm	/^    next = seed;$/;"	d
num	obj/user/forktree.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktree.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktree.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/forktree.asm	/^        number:$/;"	l
p	obj/user/forktree.asm	/^                p = "(null)";$/;"	d
padc	obj/user/forktree.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^            padc = '0';$/;"	d
precision	obj/user/forktree.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/forktree.asm	/^        process_precision:$/;"	l
reswitch	obj/user/forktree.asm	/^    reswitch:$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
static	obj/user/forktree.asm	/^static inline char *$/;"	l
static	obj/user/forktree.asm	/^static inline int$/;"	l
static	obj/user/forktree.asm	/^static inline void *$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
uint32_t	obj/user/forktree.asm	/^uint32_t$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
width	obj/user/forktree.asm	/^                width = 0;$/;"	d
width	obj/user/forktree.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^        width = precision = -1;$/;"	d
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/hello.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/hello.asm	/^_start:$/;"	l
altflag	obj/user/hello.asm	/^            altflag = 1;$/;"	d
base	obj/user/hello.asm	/^            base = 10;$/;"	d
base	obj/user/hello.asm	/^            base = 16;$/;"	d
base	obj/user/hello.asm	/^            base = 8;$/;"	d
base	obj/user/hello.asm	/^        base = 10;$/;"	d
ch	obj/user/hello.asm	/^                ch = *fmt;$/;"	d
char	obj/user/hello.asm	/^char *$/;"	l
cnt	obj/user/hello.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/hello.asm	/^        default:$/;"	l
dig	obj/user/hello.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/hello.asm	/^                err = -err;$/;"	d
err	obj/user/hello.asm	/^            err = va_arg(ap, int);$/;"	d
int	obj/user/hello.asm	/^int main(void);$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
lflag	obj/user/hello.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/hello.asm	/^long$/;"	l
next	obj/user/hello.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/hello.asm	/^    next = seed;$/;"	d
num	obj/user/hello.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/hello.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/hello.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/hello.asm	/^        number:$/;"	l
p	obj/user/hello.asm	/^                p = "(null)";$/;"	d
padc	obj/user/hello.asm	/^            padc = '-';$/;"	d
padc	obj/user/hello.asm	/^            padc = '0';$/;"	d
precision	obj/user/hello.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/hello.asm	/^        process_precision:$/;"	l
reswitch	obj/user/hello.asm	/^    reswitch:$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
static	obj/user/hello.asm	/^static inline char *$/;"	l
static	obj/user/hello.asm	/^static inline int$/;"	l
static	obj/user/hello.asm	/^static inline void *$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
uint32_t	obj/user/hello.asm	/^uint32_t$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
width	obj/user/hello.asm	/^                width = 0;$/;"	d
width	obj/user/hello.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^        width = precision = -1;$/;"	d
Disassembly	obj/user/pgdir.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/pgdir.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/pgdir.asm	/^_start:$/;"	l
altflag	obj/user/pgdir.asm	/^            altflag = 1;$/;"	d
base	obj/user/pgdir.asm	/^            base = 10;$/;"	d
base	obj/user/pgdir.asm	/^            base = 16;$/;"	d
base	obj/user/pgdir.asm	/^            base = 8;$/;"	d
base	obj/user/pgdir.asm	/^        base = 10;$/;"	d
ch	obj/user/pgdir.asm	/^                ch = *fmt;$/;"	d
char	obj/user/pgdir.asm	/^char *$/;"	l
cnt	obj/user/pgdir.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/pgdir.asm	/^        default:$/;"	l
dig	obj/user/pgdir.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/pgdir.asm	/^                err = -err;$/;"	d
err	obj/user/pgdir.asm	/^            err = va_arg(ap, int);$/;"	d
int	obj/user/pgdir.asm	/^int main(void);$/;"	l
int	obj/user/pgdir.asm	/^int$/;"	l
lflag	obj/user/pgdir.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/pgdir.asm	/^long$/;"	l
next	obj/user/pgdir.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/pgdir.asm	/^    next = seed;$/;"	d
num	obj/user/pgdir.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/pgdir.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/pgdir.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/pgdir.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/pgdir.asm	/^        number:$/;"	l
p	obj/user/pgdir.asm	/^                p = "(null)";$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '-';$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '0';$/;"	d
precision	obj/user/pgdir.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pgdir.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/pgdir.asm	/^        process_precision:$/;"	l
reswitch	obj/user/pgdir.asm	/^    reswitch:$/;"	l
size_t	obj/user/pgdir.asm	/^size_t$/;"	l
static	obj/user/pgdir.asm	/^static inline char *$/;"	l
static	obj/user/pgdir.asm	/^static inline int$/;"	l
static	obj/user/pgdir.asm	/^static inline void *$/;"	l
static	obj/user/pgdir.asm	/^static long long$/;"	l
static	obj/user/pgdir.asm	/^static unsigned long long$/;"	l
static	obj/user/pgdir.asm	/^static void$/;"	l
uint32_t	obj/user/pgdir.asm	/^uint32_t$/;"	l
void	obj/user/pgdir.asm	/^void *$/;"	l
void	obj/user/pgdir.asm	/^void$/;"	l
width	obj/user/pgdir.asm	/^                width = 0;$/;"	d
width	obj/user/pgdir.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/pgdir.asm	/^        width = precision = -1;$/;"	d
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/softint.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/softint.asm	/^_start:$/;"	l
altflag	obj/user/softint.asm	/^            altflag = 1;$/;"	d
base	obj/user/softint.asm	/^            base = 10;$/;"	d
base	obj/user/softint.asm	/^            base = 16;$/;"	d
base	obj/user/softint.asm	/^            base = 8;$/;"	d
base	obj/user/softint.asm	/^        base = 10;$/;"	d
ch	obj/user/softint.asm	/^                ch = *fmt;$/;"	d
char	obj/user/softint.asm	/^char *$/;"	l
cnt	obj/user/softint.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/softint.asm	/^        default:$/;"	l
dig	obj/user/softint.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/softint.asm	/^                err = -err;$/;"	d
err	obj/user/softint.asm	/^            err = va_arg(ap, int);$/;"	d
int	obj/user/softint.asm	/^int main(void);$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
lflag	obj/user/softint.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/softint.asm	/^long$/;"	l
next	obj/user/softint.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/softint.asm	/^    next = seed;$/;"	d
num	obj/user/softint.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/softint.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/softint.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/softint.asm	/^        number:$/;"	l
p	obj/user/softint.asm	/^                p = "(null)";$/;"	d
padc	obj/user/softint.asm	/^            padc = '-';$/;"	d
padc	obj/user/softint.asm	/^            padc = '0';$/;"	d
precision	obj/user/softint.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/softint.asm	/^        process_precision:$/;"	l
reswitch	obj/user/softint.asm	/^    reswitch:$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
static	obj/user/softint.asm	/^static inline char *$/;"	l
static	obj/user/softint.asm	/^static inline int$/;"	l
static	obj/user/softint.asm	/^static inline void *$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
uint32_t	obj/user/softint.asm	/^uint32_t$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
width	obj/user/softint.asm	/^                width = 0;$/;"	d
width	obj/user/softint.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^        width = precision = -1;$/;"	d
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/spin.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/spin.asm	/^_start:$/;"	l
altflag	obj/user/spin.asm	/^            altflag = 1;$/;"	d
base	obj/user/spin.asm	/^            base = 10;$/;"	d
base	obj/user/spin.asm	/^            base = 16;$/;"	d
base	obj/user/spin.asm	/^            base = 8;$/;"	d
base	obj/user/spin.asm	/^        base = 10;$/;"	d
ch	obj/user/spin.asm	/^                ch = *fmt;$/;"	d
char	obj/user/spin.asm	/^char *$/;"	l
cnt	obj/user/spin.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/spin.asm	/^        default:$/;"	l
dig	obj/user/spin.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/spin.asm	/^                err = -err;$/;"	d
err	obj/user/spin.asm	/^            err = va_arg(ap, int);$/;"	d
int	obj/user/spin.asm	/^int main(void);$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
lflag	obj/user/spin.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/spin.asm	/^long$/;"	l
next	obj/user/spin.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/spin.asm	/^    next = seed;$/;"	d
num	obj/user/spin.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/spin.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/spin.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/spin.asm	/^        number:$/;"	l
p	obj/user/spin.asm	/^                p = "(null)";$/;"	d
padc	obj/user/spin.asm	/^            padc = '-';$/;"	d
padc	obj/user/spin.asm	/^            padc = '0';$/;"	d
precision	obj/user/spin.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/spin.asm	/^        process_precision:$/;"	l
reswitch	obj/user/spin.asm	/^    reswitch:$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
static	obj/user/spin.asm	/^static inline char *$/;"	l
static	obj/user/spin.asm	/^static inline int$/;"	l
static	obj/user/spin.asm	/^static inline void *$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
uint32_t	obj/user/spin.asm	/^uint32_t$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
width	obj/user/spin.asm	/^                width = 0;$/;"	d
width	obj/user/spin.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^        width = precision = -1;$/;"	d
ARRAYSIZE	obj/user/testbss.asm	/^#define ARRAYSIZE (1024*1024)$/;"	d
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/testbss.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/testbss.asm	/^_start:$/;"	l
altflag	obj/user/testbss.asm	/^            altflag = 1;$/;"	d
base	obj/user/testbss.asm	/^            base = 10;$/;"	d
base	obj/user/testbss.asm	/^            base = 16;$/;"	d
base	obj/user/testbss.asm	/^            base = 8;$/;"	d
base	obj/user/testbss.asm	/^        base = 10;$/;"	d
ch	obj/user/testbss.asm	/^                ch = *fmt;$/;"	d
char	obj/user/testbss.asm	/^char *$/;"	l
cnt	obj/user/testbss.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/testbss.asm	/^        default:$/;"	l
dig	obj/user/testbss.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/testbss.asm	/^                err = -err;$/;"	d
err	obj/user/testbss.asm	/^            err = va_arg(ap, int);$/;"	d
int	obj/user/testbss.asm	/^int main(void);$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
lflag	obj/user/testbss.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/testbss.asm	/^long$/;"	l
next	obj/user/testbss.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/testbss.asm	/^    next = seed;$/;"	d
num	obj/user/testbss.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/testbss.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/testbss.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/testbss.asm	/^        number:$/;"	l
p	obj/user/testbss.asm	/^                p = "(null)";$/;"	d
padc	obj/user/testbss.asm	/^            padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^            padc = '0';$/;"	d
precision	obj/user/testbss.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testbss.asm	/^        process_precision:$/;"	l
reswitch	obj/user/testbss.asm	/^    reswitch:$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
static	obj/user/testbss.asm	/^static inline char *$/;"	l
static	obj/user/testbss.asm	/^static inline int$/;"	l
static	obj/user/testbss.asm	/^static inline void *$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
width	obj/user/testbss.asm	/^                width = 0;$/;"	d
width	obj/user/testbss.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^        width = precision = -1;$/;"	d
Disassembly	obj/user/waitkill.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/waitkill.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/waitkill.asm	/^_start:$/;"	l
altflag	obj/user/waitkill.asm	/^            altflag = 1;$/;"	d
base	obj/user/waitkill.asm	/^            base = 10;$/;"	d
base	obj/user/waitkill.asm	/^            base = 16;$/;"	d
base	obj/user/waitkill.asm	/^            base = 8;$/;"	d
base	obj/user/waitkill.asm	/^        base = 10;$/;"	d
ch	obj/user/waitkill.asm	/^                ch = *fmt;$/;"	d
char	obj/user/waitkill.asm	/^char *$/;"	l
cnt	obj/user/waitkill.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/waitkill.asm	/^        default:$/;"	l
dig	obj/user/waitkill.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/waitkill.asm	/^                err = -err;$/;"	d
err	obj/user/waitkill.asm	/^            err = va_arg(ap, int);$/;"	d
int	obj/user/waitkill.asm	/^int main(void);$/;"	l
int	obj/user/waitkill.asm	/^int parent, pid1, pid2;$/;"	l
int	obj/user/waitkill.asm	/^int$/;"	l
lflag	obj/user/waitkill.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/waitkill.asm	/^long$/;"	l
next	obj/user/waitkill.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/waitkill.asm	/^    next = seed;$/;"	d
num	obj/user/waitkill.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/waitkill.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/waitkill.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/waitkill.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/waitkill.asm	/^        number:$/;"	l
p	obj/user/waitkill.asm	/^                p = "(null)";$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '-';$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '0';$/;"	d
parent	obj/user/waitkill.asm	/^    parent = getpid();$/;"	d
precision	obj/user/waitkill.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/waitkill.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/waitkill.asm	/^        process_precision:$/;"	l
reswitch	obj/user/waitkill.asm	/^    reswitch:$/;"	l
size_t	obj/user/waitkill.asm	/^size_t$/;"	l
static	obj/user/waitkill.asm	/^static inline char *$/;"	l
static	obj/user/waitkill.asm	/^static inline int$/;"	l
static	obj/user/waitkill.asm	/^static inline void *$/;"	l
static	obj/user/waitkill.asm	/^static long long$/;"	l
static	obj/user/waitkill.asm	/^static unsigned long long$/;"	l
static	obj/user/waitkill.asm	/^static void$/;"	l
uint32_t	obj/user/waitkill.asm	/^uint32_t$/;"	l
void	obj/user/waitkill.asm	/^void *$/;"	l
void	obj/user/waitkill.asm	/^void$/;"	l
width	obj/user/waitkill.asm	/^                width = 0;$/;"	d
width	obj/user/waitkill.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/waitkill.asm	/^        width = precision = -1;$/;"	d
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/yield.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/yield.asm	/^_start:$/;"	l
altflag	obj/user/yield.asm	/^            altflag = 1;$/;"	d
base	obj/user/yield.asm	/^            base = 10;$/;"	d
base	obj/user/yield.asm	/^            base = 16;$/;"	d
base	obj/user/yield.asm	/^            base = 8;$/;"	d
base	obj/user/yield.asm	/^        base = 10;$/;"	d
ch	obj/user/yield.asm	/^                ch = *fmt;$/;"	d
char	obj/user/yield.asm	/^char *$/;"	l
cnt	obj/user/yield.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/yield.asm	/^        default:$/;"	l
dig	obj/user/yield.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/yield.asm	/^                err = -err;$/;"	d
err	obj/user/yield.asm	/^            err = va_arg(ap, int);$/;"	d
int	obj/user/yield.asm	/^int main(void);$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
lflag	obj/user/yield.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/yield.asm	/^long$/;"	l
next	obj/user/yield.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/yield.asm	/^    next = seed;$/;"	d
num	obj/user/yield.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/yield.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/yield.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/yield.asm	/^        number:$/;"	l
p	obj/user/yield.asm	/^                p = "(null)";$/;"	d
padc	obj/user/yield.asm	/^            padc = '-';$/;"	d
padc	obj/user/yield.asm	/^            padc = '0';$/;"	d
precision	obj/user/yield.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/yield.asm	/^        process_precision:$/;"	l
reswitch	obj/user/yield.asm	/^    reswitch:$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
static	obj/user/yield.asm	/^static inline char *$/;"	l
static	obj/user/yield.asm	/^static inline int$/;"	l
static	obj/user/yield.asm	/^static inline void *$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
uint32_t	obj/user/yield.asm	/^uint32_t$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
width	obj/user/yield.asm	/^                width = 0;$/;"	d
width	obj/user/yield.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^        width = precision = -1;$/;"	d
OBJPREFIX	tools/function.mk	/^OBJPREFIX	:= __objs_$/;"	m
add_dependency	tools/function.mk	/^add_dependency = $(eval $(1): $(2))$/;"	m
add_files	tools/function.mk	/^add_files = $(eval $(call do_add_files_to_packet,$(1),$(2),$(3),$(4),$(5)))$/;"	m
add_objs	tools/function.mk	/^add_objs = $(eval $(call do_add_objs_to_packet,$(1),$(2)))$/;"	m
cc_compile	tools/function.mk	/^cc_compile = $(eval $(call do_cc_compile,$(1),$(2),$(3),$(4)))$/;"	m
cc_template	tools/function.mk	/^define cc_template$/;"	m
create_target	tools/function.mk	/^create_target = $(eval $(call do_create_target,$(1),$(2),$(3),$(4),$(5)))$/;"	m
do_add_files_to_packet	tools/function.mk	/^define do_add_files_to_packet$/;"	m
do_add_objs_to_packet	tools/function.mk	/^define do_add_objs_to_packet$/;"	m
do_cc_compile	tools/function.mk	/^define do_cc_compile$/;"	m
do_create_target	tools/function.mk	/^define do_create_target$/;"	m
do_finish_all	tools/function.mk	/^define do_finish_all$/;"	m
finish_all	tools/function.mk	/^finish_all = $(eval $(call do_finish_all))$/;"	m
listf	tools/function.mk	/^listf = $(filter $(if $(2),$(addprefix %.,$(2)),%),\\$/;"	m
packetname	tools/function.mk	/^packetname = $(if $(1),$(addprefix $(OBJPREFIX),$(1)),$(OBJPREFIX))$/;"	m
read_packet	tools/function.mk	/^read_packet = $(foreach p,$(call packetname,$(1)),$($(p)))$/;"	m
todep	tools/function.mk	/^todep = $(patsubst %.o,%.d,$(call toobj,$(1),$(2)))$/;"	m
toobj	tools/function.mk	/^toobj = $(addprefix $(OBJDIR)$(SLASH)$(if $(2),$(2)$(SLASH)),\\$/;"	m
totarget	tools/function.mk	/^totarget = $(addprefix $(BINDIR)$(SLASH),$(1))$/;"	m
build_run	tools/grade.sh	/^build_run() {$/;"	f
check_regexps	tools/grade.sh	/^check_regexps() {$/;"	f
check_result	tools/grade.sh	/^check_result() {$/;"	f
default_check	tools/grade.sh	/^default_check() {$/;"	f
fail	tools/grade.sh	/^fail() {$/;"	f
get_time	tools/grade.sh	/^get_time() {$/;"	f
make_print	tools/grade.sh	/^make_print() {$/;"	f
pass	tools/grade.sh	/^pass() {$/;"	f
quick_check	tools/grade.sh	/^quick_check() {$/;"	f
quick_run	tools/grade.sh	/^quick_run() {$/;"	f
run_qemu	tools/grade.sh	/^run_qemu() {$/;"	f
run_test	tools/grade.sh	/^run_test() {$/;"	f
show_build_tag	tools/grade.sh	/^show_build_tag() {$/;"	f
show_check_tag	tools/grade.sh	/^show_check_tag() {$/;"	f
show_final	tools/grade.sh	/^show_final() {$/;"	f
show_msg	tools/grade.sh	/^show_msg() {$/;"	f
show_part	tools/grade.sh	/^show_part() {$/;"	f
show_time	tools/grade.sh	/^show_time() {$/;"	f
update_score	tools/grade.sh	/^update_score() {$/;"	f
main	tools/sign.c	/^main(int argc, char *argv[]) {$/;"	f
main	tools/vector.c	/^main(void) {$/;"	f
main	user/badarg.c	/^main(void) {$/;"	f
main	user/badsegment.c	/^main(void) {$/;"	f
main	user/divzero.c	/^main(void) {$/;"	f
zero	user/divzero.c	/^int zero;$/;"	v
magic	user/exit.c	/^int magic = -0x10384;$/;"	v
main	user/exit.c	/^main(void) {$/;"	f
main	user/faultread.c	/^main(void) {$/;"	f
main	user/faultreadkernel.c	/^main(void) {$/;"	f
main	user/forktest.c	/^main(void) {$/;"	f
max_child	user/forktest.c	/^const int max_child = 32;$/;"	v
DEPTH	user/forktree.c	5;"	d	file:
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch) {$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur) {$/;"	f
main	user/forktree.c	/^main(void) {$/;"	f
main	user/hello.c	/^main(void) {$/;"	f
_start	user/libs/initcode.S	/^_start:$/;"	l
__panic	user/libs/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__warn	user/libs/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
cprintf	user/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cputch	user/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputs	user/libs/stdio.c	/^cputs(const char *str) {$/;"	f
vcprintf	user/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
MAX_ARGS	user/libs/syscall.c	6;"	d	file:
sys_exit	user/libs/syscall.c	/^sys_exit(int error_code) {$/;"	f
sys_fork	user/libs/syscall.c	/^sys_fork(void) {$/;"	f
sys_getpid	user/libs/syscall.c	/^sys_getpid(void) {$/;"	f
sys_kill	user/libs/syscall.c	/^sys_kill(int pid) {$/;"	f
sys_pgdir	user/libs/syscall.c	/^sys_pgdir(void) {$/;"	f
sys_putc	user/libs/syscall.c	/^sys_putc(int c) {$/;"	f
sys_wait	user/libs/syscall.c	/^sys_wait(int pid, int *store) {$/;"	f
sys_yield	user/libs/syscall.c	/^sys_yield(void) {$/;"	f
syscall	user/libs/syscall.c	/^syscall(int num, ...) {$/;"	f	file:
__USER_LIBS_SYSCALL_H__	user/libs/syscall.h	2;"	d
exit	user/libs/ulib.c	/^exit(int error_code) {$/;"	f
fork	user/libs/ulib.c	/^fork(void) {$/;"	f
getpid	user/libs/ulib.c	/^getpid(void) {$/;"	f
kill	user/libs/ulib.c	/^kill(int pid) {$/;"	f
print_pgdir	user/libs/ulib.c	/^print_pgdir(void) {$/;"	f
wait	user/libs/ulib.c	/^wait(void) {$/;"	f
waitpid	user/libs/ulib.c	/^waitpid(int pid, int *store) {$/;"	f
yield	user/libs/ulib.c	/^yield(void) {$/;"	f
__USER_LIBS_ULIB_H__	user/libs/ulib.h	2;"	d
assert	user/libs/ulib.h	15;"	d
panic	user/libs/ulib.h	12;"	d
static_assert	user/libs/ulib.h	23;"	d
warn	user/libs/ulib.h	9;"	d
umain	user/libs/umain.c	/^umain(void) {$/;"	f
main	user/pgdir.c	/^main(void) {$/;"	f
main	user/softint.c	/^main(void) {$/;"	f
main	user/spin.c	/^main(void) {$/;"	f
ARRAYSIZE	user/testbss.c	4;"	d	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
main	user/testbss.c	/^main(void) {$/;"	f
do_yield	user/waitkill.c	/^do_yield(void) {$/;"	f
loop	user/waitkill.c	/^loop(void) {$/;"	f
main	user/waitkill.c	/^main(void) {$/;"	f
parent	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid1	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid2	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
work	user/waitkill.c	/^work(void) {$/;"	f
main	user/yield.c	/^main(void) {$/;"	f
