!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
.DEFAULT_GOAL	Makefile	/^.DEFAULT_GOAL := TARGETS$/;"	m
ALIGN	kern/mm/kmalloc.c	55;"	d	file:
ALLDEPS	Makefile	/^ALLDEPS	:=$/;"	m
ALLOBJS	Makefile	/^ALLOBJS	:=$/;"	m
ALT	kern/driver/console.c	260;"	d	file:
ARRAYSIZE	obj/user/testbss.asm	/^#define ARRAYSIZE (1024*1024)$/;"	d
ARRAYSIZE	user/testbss.c	4;"	d	file:
AWK	Makefile	/^AWK		:= awk$/;"	m
BEING_CHECK_VALID_VADDR	kern/mm/swap.c	14;"	d	file:
BIG_STRIDE	kern/schedule/default_sched_stride.c	12;"	d	file:
BINDIR	Makefile	/^BINDIR	:= bin$/;"	m
BS_OCMD	kern/driver/kbdreg.h	23;"	d
BUFSIZE	kern/libs/readline.c	3;"	d	file:
C	kern/driver/console.c	323;"	d	file:
CAPSLOCK	kern/driver/console.c	262;"	d	file:
CC	Makefile	/^CC		:= $(GCCPREFIX)gcc$/;"	m
CC	Makefile	/^CC		:= clang$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -g -m32 -mno-sse -nostdinc $(DEFS)$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc $(DEFS)$/;"	m
CGA_BASE	kern/driver/console.c	45;"	d	file:
CGA_BUF	kern/driver/console.c	46;"	d	file:
CHECK_VALID_PHY_PAGE_NUM	kern/mm/swap.c	17;"	d	file:
CHECK_VALID_VADDR	kern/mm/swap.c	15;"	d	file:
CHECK_VALID_VIR_PAGE_NUM	kern/mm/swap.c	13;"	d	file:
CLONE_THREAD	libs/unistd.h	28;"	d
CLONE_VM	libs/unistd.h	27;"	d
CMDBYTE	kern/driver/kbdreg.h	60;"	d
COM1	kern/driver/console.c	21;"	d	file:
COM_DLL	kern/driver/console.c	25;"	d	file:
COM_DLM	kern/driver/console.c	26;"	d	file:
COM_FCR	kern/driver/console.c	30;"	d	file:
COM_IER	kern/driver/console.c	27;"	d	file:
COM_IER_RDI	kern/driver/console.c	28;"	d	file:
COM_IIR	kern/driver/console.c	29;"	d	file:
COM_LCR	kern/driver/console.c	31;"	d	file:
COM_LCR_DLAB	kern/driver/console.c	32;"	d	file:
COM_LCR_WLEN8	kern/driver/console.c	33;"	d	file:
COM_LSR	kern/driver/console.c	38;"	d	file:
COM_LSR_DATA	kern/driver/console.c	39;"	d	file:
COM_LSR_TSRE	kern/driver/console.c	41;"	d	file:
COM_LSR_TXRDY	kern/driver/console.c	40;"	d	file:
COM_MCR	kern/driver/console.c	34;"	d	file:
COM_MCR_DTR	kern/driver/console.c	36;"	d	file:
COM_MCR_OUT2	kern/driver/console.c	37;"	d	file:
COM_MCR_RTS	kern/driver/console.c	35;"	d	file:
COM_RX	kern/driver/console.c	23;"	d	file:
COM_TX	kern/driver/console.c	24;"	d	file:
CONSBUFSIZE	kern/driver/console.c	208;"	d	file:
COPY	Makefile	/^COPY	:= cp$/;"	m
CR0_AM	kern/mm/mmu.h	258;"	d
CR0_CD	kern/mm/mmu.h	260;"	d
CR0_EM	kern/mm/mmu.h	253;"	d
CR0_ET	kern/mm/mmu.h	255;"	d
CR0_MP	kern/mm/mmu.h	252;"	d
CR0_NE	kern/mm/mmu.h	256;"	d
CR0_NW	kern/mm/mmu.h	259;"	d
CR0_PE	kern/mm/mmu.h	251;"	d
CR0_PG	kern/mm/mmu.h	261;"	d
CR0_TS	kern/mm/mmu.h	254;"	d
CR0_WP	kern/mm/mmu.h	257;"	d
CR4_DE	kern/mm/mmu.h	266;"	d
CR4_MCE	kern/mm/mmu.h	264;"	d
CR4_PCE	kern/mm/mmu.h	263;"	d
CR4_PSE	kern/mm/mmu.h	265;"	d
CR4_PVI	kern/mm/mmu.h	268;"	d
CR4_TSD	kern/mm/mmu.h	267;"	d
CR4_VME	kern/mm/mmu.h	269;"	d
CRT_COLS	kern/driver/console.c	48;"	d	file:
CRT_ROWS	kern/driver/console.c	47;"	d	file:
CRT_SIZE	kern/driver/console.c	49;"	d	file:
CTL	kern/driver/console.c	259;"	d	file:
CTYPE	Makefile	/^CTYPE	:= c S$/;"	m
ClearPageProperty	kern/mm/memlayout.h	146;"	d
ClearPageReserved	kern/mm/memlayout.h	143;"	d
DEPTH	obj/user/forktree.asm	/^#define DEPTH 4$/;"	d
DEPTH	user/forktree.c	5;"	d	file:
DPL_KERNEL	kern/mm/memlayout.h	20;"	d
DPL_USER	kern/mm/memlayout.h	21;"	d
Disassembly	obj/bootblock.asm	/^Disassembly of section .startup:$/;"	l
Disassembly	obj/bootblock.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badarg.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/exit.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/matrix.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pgdir.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/priority.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sleep.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/sleepkill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/waitkill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/driver/console.c	266;"	d	file:
E820MAX	kern/mm/memlayout.h	111;"	d
E820_ARM	kern/mm/memlayout.h	112;"	d
E820_ARR	kern/mm/memlayout.h	113;"	d
EATING	kern/sync/check_sync.c	12;"	d	file:
ELFHDR	boot/bootmain.c	34;"	d	file:
ELFHDR	obj/bootblock.asm	/^#define ELFHDR          ((struct elfhdr *)0x10000)      \/\/ scratch space$/;"	d
ELF_MAGIC	libs/elf.h	6;"	d
ELF_PF_R	libs/elf.h	45;"	d
ELF_PF_W	libs/elf.h	44;"	d
ELF_PF_X	libs/elf.h	43;"	d
ELF_PT_LOAD	libs/elf.h	40;"	d
EMPTY	Makefile	/^EMPTY	:=$/;"	m
E_BAD_PROC	libs/error.h	6;"	d
E_BUSY	libs/error.h	19;"	d
E_EXISTS	libs/error.h	27;"	d
E_FAULT	libs/error.h	10;"	d
E_INVAL	libs/error.h	7;"	d
E_INVAL_ELF	libs/error.h	12;"	d
E_ISDIR	libs/error.h	21;"	d
E_KILLED	libs/error.h	13;"	d
E_MAX_OPEN	libs/error.h	26;"	d
E_NA_DEV	libs/error.h	18;"	d
E_NOENT	libs/error.h	20;"	d
E_NOTDIR	libs/error.h	22;"	d
E_NOTEMPTY	libs/error.h	28;"	d
E_NO_DEV	libs/error.h	17;"	d
E_NO_FREE_PROC	libs/error.h	9;"	d
E_NO_MEM	libs/error.h	8;"	d
E_PANIC	libs/error.h	14;"	d
E_SEEK	libs/error.h	25;"	d
E_SWAP_FAULT	libs/error.h	11;"	d
E_TIMEOUT	libs/error.h	15;"	d
E_TOO_BIG	libs/error.h	16;"	d
E_UNIMP	libs/error.h	24;"	d
E_UNSPECIFIED	libs/error.h	5;"	d
E_XDEV	libs/error.h	23;"	d
FL_AC	kern/mm/mmu.h	22;"	d
FL_AF	kern/mm/mmu.h	7;"	d
FL_CF	kern/mm/mmu.h	5;"	d
FL_DF	kern/mm/mmu.h	12;"	d
FL_ID	kern/mm/mmu.h	25;"	d
FL_IF	kern/mm/mmu.h	11;"	d
FL_IOPL_0	kern/mm/mmu.h	15;"	d
FL_IOPL_1	kern/mm/mmu.h	16;"	d
FL_IOPL_2	kern/mm/mmu.h	17;"	d
FL_IOPL_3	kern/mm/mmu.h	18;"	d
FL_IOPL_MASK	kern/mm/mmu.h	14;"	d
FL_NT	kern/mm/mmu.h	19;"	d
FL_OF	kern/mm/mmu.h	13;"	d
FL_PF	kern/mm/mmu.h	6;"	d
FL_RF	kern/mm/mmu.h	20;"	d
FL_SF	kern/mm/mmu.h	9;"	d
FL_TF	kern/mm/mmu.h	10;"	d
FL_VIF	kern/mm/mmu.h	23;"	d
FL_VIP	kern/mm/mmu.h	24;"	d
FL_VM	kern/mm/mmu.h	21;"	d
FL_ZF	kern/mm/mmu.h	8;"	d
GCCPREFIX	Makefile	/^GCCPREFIX := $(shell if i386-ucore-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GDB	Makefile	/^GDB		:= $(GCCPREFIX)gdb$/;"	m
GD_KDATA	kern/mm/memlayout.h	15;"	d
GD_KTEXT	kern/mm/memlayout.h	14;"	d
GD_TSS	kern/mm/memlayout.h	18;"	d
GD_UDATA	kern/mm/memlayout.h	17;"	d
GD_UTEXT	kern/mm/memlayout.h	16;"	d
GOLDEN_RATIO_PRIME_32	libs/hash.c	4;"	d	file:
GRADE_GDB_IN	Makefile	/^GRADE_GDB_IN	:= .gdb.in$/;"	m
GRADE_QEMU_OUT	Makefile	/^GRADE_QEMU_OUT	:= .qemu.out$/;"	m
HANDIN	Makefile	/^HANDIN			:= lab$(PROJ)-handin.tar.gz$/;"	m
HASH_LIST_SIZE	kern/process/proc.c	66;"	d	file:
HASH_SHIFT	kern/process/proc.c	65;"	d	file:
HOSTCC	Makefile	/^HOSTCC		:= clang$/;"	m
HOSTCC	Makefile	/^HOSTCC		:= gcc$/;"	m
HOSTCFLAGS	Makefile	/^HOSTCFLAGS	:= -g -Wall -O2$/;"	m
HUNGRY	kern/sync/check_sync.c	11;"	d	file:
IA32flags	kern/trap/trap.c	/^static const char *IA32flags[] = {$/;"	v	file:
IDE_BSY	kern/driver/ide.c	22;"	d	file:
IDE_CMD_IDENTIFY	kern/driver/ide.c	30;"	d	file:
IDE_CMD_READ	kern/driver/ide.c	28;"	d	file:
IDE_CMD_WRITE	kern/driver/ide.c	29;"	d	file:
IDE_DF	kern/driver/ide.c	24;"	d	file:
IDE_DRDY	kern/driver/ide.c	23;"	d	file:
IDE_DRQ	kern/driver/ide.c	25;"	d	file:
IDE_ERR	kern/driver/ide.c	26;"	d	file:
IDE_IDENT_CAPABILITIES	kern/driver/ide.c	34;"	d	file:
IDE_IDENT_CMDSETS	kern/driver/ide.c	35;"	d	file:
IDE_IDENT_MAX_LBA	kern/driver/ide.c	36;"	d	file:
IDE_IDENT_MAX_LBA_EXT	kern/driver/ide.c	37;"	d	file:
IDE_IDENT_MODEL	kern/driver/ide.c	33;"	d	file:
IDE_IDENT_SECTORS	kern/driver/ide.c	32;"	d	file:
IGNORE_ALLDEPS	Makefile	/^IGNORE_ALLDEPS	= clean \\$/;"	m
IO_BASE	kern/driver/ide.c	57;"	d	file:
IO_BASE0	kern/driver/ide.c	39;"	d	file:
IO_BASE1	kern/driver/ide.c	40;"	d	file:
IO_CTRL	kern/driver/ide.c	58;"	d	file:
IO_CTRL0	kern/driver/ide.c	41;"	d	file:
IO_CTRL1	kern/driver/ide.c	42;"	d	file:
IO_PIC1	kern/driver/picirq.c	6;"	d	file:
IO_PIC2	kern/driver/picirq.c	7;"	d	file:
IO_TIMER1	kern/driver/clock.c	11;"	d	file:
IRQ_COM1	kern/trap/trap.h	35;"	d
IRQ_ERROR	kern/trap/trap.h	38;"	d
IRQ_IDE1	kern/trap/trap.h	36;"	d
IRQ_IDE2	kern/trap/trap.h	37;"	d
IRQ_KBD	kern/trap/trap.h	34;"	d
IRQ_OFFSET	kern/driver/picirq.h	7;"	d
IRQ_OFFSET	kern/trap/trap.h	31;"	d
IRQ_SLAVE	kern/driver/picirq.c	9;"	d	file:
IRQ_SPURIOUS	kern/trap/trap.h	39;"	d
IRQ_TIMER	kern/trap/trap.h	33;"	d
ISA_COMMAND	kern/driver/ide.c	19;"	d	file:
ISA_CTRL	kern/driver/ide.c	13;"	d	file:
ISA_CYL_HI	kern/driver/ide.c	17;"	d	file:
ISA_CYL_LO	kern/driver/ide.c	16;"	d	file:
ISA_DATA	kern/driver/ide.c	10;"	d	file:
ISA_ERROR	kern/driver/ide.c	11;"	d	file:
ISA_PRECOMP	kern/driver/ide.c	12;"	d	file:
ISA_SDH	kern/driver/ide.c	18;"	d	file:
ISA_SECCNT	kern/driver/ide.c	14;"	d	file:
ISA_SECTOR	kern/driver/ide.c	15;"	d	file:
ISA_STATUS	kern/driver/ide.c	20;"	d	file:
KADDR	kern/mm/pmm.h	69;"	d
KBCMDP	kern/driver/kbdreg.h	29;"	d
KBC_AUXDISABLE	kern/driver/kbdreg.h	32;"	d
KBC_AUXECHO	kern/driver/kbdreg.h	36;"	d
KBC_AUXENABLE	kern/driver/kbdreg.h	33;"	d
KBC_AUXTEST	kern/driver/kbdreg.h	34;"	d
KBC_AUXWRITE	kern/driver/kbdreg.h	37;"	d
KBC_DISABLE	kern/driver/kbdreg.h	66;"	d
KBC_ECHO	kern/driver/kbdreg.h	71;"	d
KBC_ENABLE	kern/driver/kbdreg.h	67;"	d
KBC_KBDDISABLE	kern/driver/kbdreg.h	40;"	d
KBC_KBDECHO	kern/driver/kbdreg.h	35;"	d
KBC_KBDENABLE	kern/driver/kbdreg.h	41;"	d
KBC_KBDTEST	kern/driver/kbdreg.h	39;"	d
KBC_MODEIND	kern/driver/kbdreg.h	70;"	d
KBC_PULSE0	kern/driver/kbdreg.h	42;"	d
KBC_PULSE1	kern/driver/kbdreg.h	43;"	d
KBC_PULSE2	kern/driver/kbdreg.h	44;"	d
KBC_PULSE3	kern/driver/kbdreg.h	45;"	d
KBC_RAMREAD	kern/driver/kbdreg.h	30;"	d
KBC_RAMWRITE	kern/driver/kbdreg.h	31;"	d
KBC_RESEND	kern/driver/kbdreg.h	64;"	d
KBC_RESET	kern/driver/kbdreg.h	63;"	d
KBC_SELFTEST	kern/driver/kbdreg.h	38;"	d
KBC_SETDEFAULT	kern/driver/kbdreg.h	65;"	d
KBC_SETTABLE	kern/driver/kbdreg.h	69;"	d
KBC_TYPEMATIC	kern/driver/kbdreg.h	68;"	d
KBDATAP	kern/driver/kbdreg.h	47;"	d
KBOUTP	kern/driver/kbdreg.h	48;"	d
KBR_ACK	kern/driver/kbdreg.h	76;"	d
KBR_BREAK	kern/driver/kbdreg.h	79;"	d
KBR_ECHO	kern/driver/kbdreg.h	81;"	d
KBR_EXTENDED	kern/driver/kbdreg.h	74;"	d
KBR_FAILURE	kern/driver/kbdreg.h	78;"	d
KBR_OVERRUN	kern/driver/kbdreg.h	77;"	d
KBR_RESEND	kern/driver/kbdreg.h	75;"	d
KBR_RSTDONE	kern/driver/kbdreg.h	80;"	d
KBSTATP	kern/driver/kbdreg.h	19;"	d
KBS_DIB	kern/driver/kbdreg.h	20;"	d
KBS_IBF	kern/driver/kbdreg.h	21;"	d
KBS_NOSEC	kern/driver/kbdreg.h	24;"	d
KBS_PERR	kern/driver/kbdreg.h	27;"	d
KBS_RERR	kern/driver/kbdreg.h	26;"	d
KBS_TERR	kern/driver/kbdreg.h	25;"	d
KBS_WARM	kern/driver/kbdreg.h	22;"	d
KC8_CPU	kern/driver/kbdreg.h	57;"	d
KC8_IGNSEC	kern/driver/kbdreg.h	56;"	d
KC8_KDISABLE	kern/driver/kbdreg.h	55;"	d
KC8_KENABLE	kern/driver/kbdreg.h	59;"	d
KC8_MDISABLE	kern/driver/kbdreg.h	54;"	d
KC8_MENABLE	kern/driver/kbdreg.h	58;"	d
KC8_TRANS	kern/driver/kbdreg.h	53;"	d
KERNBASE	kern/mm/memlayout.h	70;"	d
KERNEL_CS	kern/mm/memlayout.h	23;"	d
KERNEL_DS	kern/mm/memlayout.h	24;"	d
KERNEL_EXECVE	kern/process/proc.c	832;"	d	file:
KERNEL_EXECVE2	kern/process/proc.c	844;"	d	file:
KERNEL_EXECVE2	obj/kernel.asm	/^#define KERNEL_EXECVE2(x, xstart, xsize)        __KERNEL_EXECVE2(x, xstart, xsize)$/;"	d
KERNTOP	kern/mm/memlayout.h	72;"	d
KERN_ACCESS	kern/mm/memlayout.h	97;"	d
KEY_DEL	kern/driver/kbdreg.h	14;"	d
KEY_DN	kern/driver/kbdreg.h	8;"	d
KEY_END	kern/driver/kbdreg.h	6;"	d
KEY_HOME	kern/driver/kbdreg.h	5;"	d
KEY_INS	kern/driver/kbdreg.h	13;"	d
KEY_LF	kern/driver/kbdreg.h	9;"	d
KEY_PGDN	kern/driver/kbdreg.h	12;"	d
KEY_PGUP	kern/driver/kbdreg.h	11;"	d
KEY_RT	kern/driver/kbdreg.h	10;"	d
KEY_UP	kern/driver/kbdreg.h	7;"	d
KMALLOC_MAX_ORDER	kern/mm/kmalloc.h	6;"	d
KMEMSIZE	kern/mm/memlayout.h	71;"	d
KOBJS	Makefile	/^KOBJS	= $(call read_packet,kernel libs)$/;"	m
KSTACKPAGE	kern/mm/memlayout.h	82;"	d
KSTACKSIZE	kern/mm/memlayout.h	83;"	d
K_LDCMDBYTE	kern/driver/kbdreg.h	51;"	d
K_RDCMDBYTE	kern/driver/kbdreg.h	50;"	d
L1_CACHE_BYTES	kern/mm/kmalloc.c	51;"	d	file:
LD	Makefile	/^LD      := $(GCCPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS	:= -m $(shell $(LD) -V | grep elf_i386 2>\/dev\/null)$/;"	m
LEFT	kern/sync/check_sync.c	8;"	d	file:
LPTPORT	kern/driver/console.c	51;"	d	file:
MAKEOPTS	Makefile	/^MAKEOPTS		:= --quiet --no-print-directory$/;"	m
MAKEOPTS	Makefile	/^MAKEOPTS	:= --quiet --no-print-directory$/;"	m
MATSIZE	user/matrix.c	6;"	d	file:
MAXARGS	kern/debug/kmonitor.c	33;"	d	file:
MAXARGS	obj/kernel.asm	/^#define MAXARGS         16$/;"	d
MAXERROR	libs/error.h	30;"	d
MAX_ARGS	obj/user/badarg.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/badsegment.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/divzero.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/exit.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/faultread.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/faultreadkernel.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/forktest.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/forktree.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/hello.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/matrix.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/pgdir.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/priority.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/sleep.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/sleepkill.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/softint.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/spin.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/testbss.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/waitkill.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/yield.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	user/libs/syscall.c	6;"	d	file:
MAX_DISK_NSECS	kern/driver/ide.c	46;"	d	file:
MAX_IDE	kern/driver/ide.c	44;"	d	file:
MAX_NSECS	kern/driver/ide.c	45;"	d	file:
MAX_PID	kern/process/proc.h	39;"	d
MAX_PROCESS	kern/process/proc.h	38;"	d
MAX_SEQ_NO	kern/mm/swap.c	19;"	d	file:
MAX_SWAP_OFFSET_LIMIT	kern/mm/swap.h	17;"	d
MAX_TIME	user/priority.c	8;"	d	file:
MAX_TIME_SLICE	kern/schedule/sched.h	8;"	d
MKDIR	Makefile	/^MKDIR   := mkdir -p$/;"	m
MONO_BASE	kern/driver/console.c	43;"	d	file:
MONO_BUF	kern/driver/console.c	44;"	d	file:
MV	Makefile	/^MV		:= mv$/;"	m
N	kern/sync/check_sync.c	7;"	d	file:
NCOMMANDS	kern/debug/kmonitor.c	29;"	d	file:
NO	kern/driver/console.c	256;"	d	file:
NPDEENTRY	kern/mm/mmu.h	223;"	d
NPTEENTRY	kern/mm/mmu.h	224;"	d
NULL	libs/defs.h	5;"	d
NUMLOCK	kern/driver/console.c	263;"	d	file:
NUM_SYSCALLS	kern/syscall/syscall.c	101;"	d	file:
NUM_SYSCALLS	obj/kernel.asm	/^#define NUM_SYSCALLS        ((sizeof(syscalls)) \/ (sizeof(syscalls[0])))$/;"	d
N_BCOMM	kern/debug/stab.h	39;"	d
N_BINCL	kern/debug/stab.h	31;"	d
N_BSLINE	kern/debug/stab.h	27;"	d
N_DSLINE	kern/debug/stab.h	26;"	d
N_ECOML	kern/debug/stab.h	41;"	d
N_ECOMM	kern/debug/stab.h	40;"	d
N_EINCL	kern/debug/stab.h	34;"	d
N_ENTRY	kern/debug/stab.h	35;"	d
N_EXCL	kern/debug/stab.h	37;"	d
N_FNAME	kern/debug/stab.h	18;"	d
N_FUN	kern/debug/stab.h	19;"	d
N_GSYM	kern/debug/stab.h	17;"	d
N_LBRAC	kern/debug/stab.h	36;"	d
N_LCSYM	kern/debug/stab.h	21;"	d
N_LENG	kern/debug/stab.h	42;"	d
N_LSYM	kern/debug/stab.h	30;"	d
N_MAIN	kern/debug/stab.h	22;"	d
N_PC	kern/debug/stab.h	23;"	d
N_PSYM	kern/debug/stab.h	33;"	d
N_RBRAC	kern/debug/stab.h	38;"	d
N_RSYM	kern/debug/stab.h	24;"	d
N_SLINE	kern/debug/stab.h	25;"	d
N_SO	kern/debug/stab.h	29;"	d
N_SOL	kern/debug/stab.h	32;"	d
N_SSYM	kern/debug/stab.h	28;"	d
N_STSYM	kern/debug/stab.h	20;"	d
OBJCOPY	Makefile	/^OBJCOPY := $(GCCPREFIX)objcopy$/;"	m
OBJDIR	Makefile	/^OBJDIR	:= obj$/;"	m
OBJDUMP	Makefile	/^OBJDUMP := $(GCCPREFIX)objdump$/;"	m
OBJPREFIX	tools/function.mk	/^OBJPREFIX	:= __objs_$/;"	m
PADDR	kern/mm/pmm.h	57;"	d
PAGE_NSECT	kern/fs/fs.h	7;"	d
PAGE_SIZE	kern/mm/kmalloc.c	47;"	d	file:
PDE_ADDR	kern/mm/mmu.h	220;"	d
PDX	kern/mm/mmu.h	204;"	d
PDXSHIFT	kern/mm/mmu.h	232;"	d
PF_EXITING	kern/process/proc.h	69;"	d
PGADDR	kern/mm/mmu.h	216;"	d
PGOFF	kern/mm/mmu.h	213;"	d
PGSHIFT	kern/mm/mmu.h	227;"	d
PGSIZE	kern/mm/mmu.h	226;"	d
PG_property	kern/mm/memlayout.h	140;"	d
PG_reserved	kern/mm/memlayout.h	139;"	d
PPN	kern/mm/mmu.h	210;"	d
PROC_NAME_LEN	kern/process/proc.h	37;"	d
PROC_RUNNABLE	kern/process/proc.h	/^    PROC_RUNNABLE,    \/\/ runnable(maybe running)$/;"	e	enum:proc_state
PROC_SLEEPING	kern/process/proc.h	/^    PROC_SLEEPING,    \/\/ sleeping$/;"	e	enum:proc_state
PROC_UNINIT	kern/process/proc.h	/^    PROC_UNINIT = 0,  \/\/ uninitialized$/;"	e	enum:proc_state
PROC_ZOMBIE	kern/process/proc.h	/^    PROC_ZOMBIE,      \/\/ almost dead, and wait parent proc to reclaim his resource$/;"	e	enum:proc_state
PROJ	Makefile	/^PROJ	:= 7$/;"	m
PTE_A	kern/mm/mmu.h	240;"	d
PTE_ADDR	kern/mm/mmu.h	219;"	d
PTE_AVAIL	kern/mm/mmu.h	244;"	d
PTE_D	kern/mm/mmu.h	241;"	d
PTE_MBZ	kern/mm/mmu.h	243;"	d
PTE_P	kern/mm/mmu.h	235;"	d
PTE_PCD	kern/mm/mmu.h	239;"	d
PTE_PS	kern/mm/mmu.h	242;"	d
PTE_PWT	kern/mm/mmu.h	238;"	d
PTE_U	kern/mm/mmu.h	237;"	d
PTE_USER	kern/mm/mmu.h	248;"	d
PTE_W	kern/mm/mmu.h	236;"	d
PTSHIFT	kern/mm/mmu.h	229;"	d
PTSIZE	kern/mm/mmu.h	228;"	d
PTX	kern/mm/mmu.h	207;"	d
PTXSHIFT	kern/mm/mmu.h	231;"	d
Page	kern/mm/memlayout.h	/^struct Page {$/;"	s
PageProperty	kern/mm/memlayout.h	147;"	d
PageReserved	kern/mm/memlayout.h	144;"	d
QEMU	Makefile	/^QEMU := $(shell if which qemu-system-i386 > \/dev\/null; \\$/;"	m
QEMUOPTS	Makefile	/^QEMUOPTS = -hda $(UCOREIMG) -drive file=$(SWAPIMG),media=disk,cache=writeback$/;"	m
RAND_MAX	libs/stdlib.h	7;"	d
REALLOC	kern/init/entry.S	/^#define REALLOC(x) (x - KERNBASE)$/;"	d
RIGHT	kern/sync/check_sync.c	9;"	d	file:
RM	Makefile	/^RM		:= rm -f$/;"	m
ROUNDDOWN	libs/defs.h	43;"	d
ROUNDUP	libs/defs.h	49;"	d
RUN_PREFIX	Makefile	/^RUN_PREFIX	:= _binary_$(OBJDIR)_$(USER_PREFIX)$/;"	m
SCROLLLOCK	kern/driver/console.c	264;"	d	file:
SECTSIZE	boot/bootmain.c	33;"	d	file:
SECTSIZE	kern/fs/fs.h	6;"	d
SED	Makefile	/^SED		:= sed$/;"	m
SEG	kern/mm/mmu.h	131;"	d
SEGTSS	kern/mm/mmu.h	139;"	d
SEG_ASM	boot/asm.h	11;"	d
SEG_ASM	kern/mm/mmu.h	55;"	d
SEG_KDATA	kern/mm/memlayout.h	8;"	d
SEG_KTEXT	kern/mm/memlayout.h	7;"	d
SEG_NULL	kern/mm/mmu.h	128;"	d
SEG_NULL	kern/mm/mmu.h	51;"	d
SEG_NULLASM	boot/asm.h	7;"	d
SEG_TSS	kern/mm/memlayout.h	11;"	d
SEG_UDATA	kern/mm/memlayout.h	10;"	d
SEG_UTEXT	kern/mm/memlayout.h	9;"	d
SETCALLGATE	kern/mm/mmu.h	99;"	d
SETGATE	kern/mm/mmu.h	86;"	d
SH	Makefile	/^SH		:= sh$/;"	m
SHIFT	kern/driver/console.c	258;"	d	file:
SLASH	Makefile	/^SLASH	:= \/$/;"	m
SLEEP_TIME	kern/sync/check_sync.c	14;"	d	file:
SLEEP_TIME	user/priority.c	9;"	d	file:
SLOB_ALIGN	kern/mm/kmalloc.c	67;"	d	file:
SLOB_UNIT	kern/mm/kmalloc.c	65;"	d	file:
SLOB_UNITS	kern/mm/kmalloc.c	66;"	d	file:
SPACE	Makefile	/^SPACE	:= $(EMPTY) $(EMPTY)$/;"	m
STACKFRAME_DEPTH	kern/debug/kdebug.c	14;"	d	file:
STA_A	boot/asm.h	23;"	d
STA_A	kern/mm/mmu.h	33;"	d
STA_C	boot/asm.h	20;"	d
STA_C	kern/mm/mmu.h	30;"	d
STA_E	boot/asm.h	19;"	d
STA_E	kern/mm/mmu.h	29;"	d
STA_R	boot/asm.h	22;"	d
STA_R	kern/mm/mmu.h	32;"	d
STA_W	boot/asm.h	21;"	d
STA_W	kern/mm/mmu.h	31;"	d
STA_X	boot/asm.h	18;"	d
STA_X	kern/mm/mmu.h	28;"	d
STS_CG16	kern/mm/mmu.h	39;"	d
STS_CG32	kern/mm/mmu.h	45;"	d
STS_IG16	kern/mm/mmu.h	41;"	d
STS_IG32	kern/mm/mmu.h	46;"	d
STS_LDT	kern/mm/mmu.h	37;"	d
STS_T16A	kern/mm/mmu.h	36;"	d
STS_T16B	kern/mm/mmu.h	38;"	d
STS_T32A	kern/mm/mmu.h	43;"	d
STS_T32B	kern/mm/mmu.h	44;"	d
STS_TG	kern/mm/mmu.h	40;"	d
STS_TG16	kern/mm/mmu.h	42;"	d
STS_TG32	kern/mm/mmu.h	47;"	d
SWAPIMG	Makefile	/^SWAPIMG		:= $(call totarget,swap.img)$/;"	m
SWAP_DEV_NO	kern/fs/fs.h	9;"	d
SYS_brk	libs/unistd.h	17;"	d
SYS_clone	libs/unistd.h	11;"	d
SYS_exec	libs/unistd.h	10;"	d
SYS_exit	libs/unistd.h	7;"	d
SYS_fork	libs/unistd.h	8;"	d
SYS_getpid	libs/unistd.h	16;"	d
SYS_gettime	libs/unistd.h	15;"	d
SYS_kill	libs/unistd.h	14;"	d
SYS_lab6_set_priority	libs/unistd.h	24;"	d
SYS_mmap	libs/unistd.h	18;"	d
SYS_munmap	libs/unistd.h	19;"	d
SYS_pgdir	libs/unistd.h	22;"	d
SYS_putc	libs/unistd.h	21;"	d
SYS_shmem	libs/unistd.h	20;"	d
SYS_sleep	libs/unistd.h	13;"	d
SYS_wait	libs/unistd.h	9;"	d
SYS_yield	libs/unistd.h	12;"	d
SetPageProperty	kern/mm/memlayout.h	145;"	d
SetPageReserved	kern/mm/memlayout.h	142;"	d
TARGETS	Makefile	/^TARGETS	:=$/;"	m
TERMINAL	Makefile	/^TERMINAL := gnome-terminal$/;"	m
THINKING	kern/sync/check_sync.c	10;"	d	file:
TICK_NUM	kern/trap/trap.c	20;"	d	file:
TICK_NUM	obj/kernel.asm	/^#define TICK_NUM 100$/;"	d
TIMER_16BIT	kern/driver/clock.c	24;"	d	file:
TIMER_DIV	kern/driver/clock.c	19;"	d	file:
TIMER_FREQ	kern/driver/clock.c	18;"	d	file:
TIMER_MODE	kern/driver/clock.c	21;"	d	file:
TIMER_RATEGEN	kern/driver/clock.c	23;"	d	file:
TIMER_SEL0	kern/driver/clock.c	22;"	d	file:
TIMES	kern/sync/check_sync.c	13;"	d	file:
TOTAL	user/priority.c	6;"	d	file:
TOUCH	Makefile	/^TOUCH	:= touch -c$/;"	m
TOUCH_FILES	Makefile	/^TOUCH_FILES		:= kern\/process\/proc.c$/;"	m
TR	Makefile	/^TR		:= tr$/;"	m
T_ALIGN	kern/trap/trap.h	26;"	d
T_BOUND	kern/trap/trap.h	14;"	d
T_BRKPT	kern/trap/trap.h	12;"	d
T_DBLFLT	kern/trap/trap.h	17;"	d
T_DEBUG	kern/trap/trap.h	10;"	d
T_DEVICE	kern/trap/trap.h	16;"	d
T_DIVIDE	kern/trap/trap.h	9;"	d
T_FPERR	kern/trap/trap.h	25;"	d
T_GPFLT	kern/trap/trap.h	22;"	d
T_ILLOP	kern/trap/trap.h	15;"	d
T_MCHK	kern/trap/trap.h	27;"	d
T_NMI	kern/trap/trap.h	11;"	d
T_OFLOW	kern/trap/trap.h	13;"	d
T_PGFLT	kern/trap/trap.h	23;"	d
T_SEGNP	kern/trap/trap.h	20;"	d
T_SIMDERR	kern/trap/trap.h	28;"	d
T_STACK	kern/trap/trap.h	21;"	d
T_SWITCH_TOK	kern/trap/trap.h	46;"	d
T_SWITCH_TOU	kern/trap/trap.h	45;"	d
T_SYSCALL	libs/unistd.h	4;"	d
T_TSS	kern/trap/trap.h	19;"	d
UCOREIMG	Makefile	/^UCOREIMG	:= $(call totarget,ucore.img)$/;"	m
UOBJS	Makefile	/^UOBJS	:= $(call read_packet,ulibs libs)$/;"	m
USERBASE	kern/mm/memlayout.h	90;"	d
USERTOP	kern/mm/memlayout.h	85;"	d
USER_ACCESS	kern/mm/memlayout.h	94;"	d
USER_BINS	Makefile	/^USER_BINS	:=$/;"	m
USER_CS	kern/mm/memlayout.h	25;"	d
USER_DS	kern/mm/memlayout.h	26;"	d
USER_PREFIX	Makefile	/^USER_PREFIX	:= __user_$/;"	m
USE_SKEW_HEAP	kern/schedule/default_sched_stride.c	7;"	d	file:
USTAB	kern/mm/memlayout.h	92;"	d
USTACKPAGE	kern/mm/memlayout.h	87;"	d
USTACKSIZE	kern/mm/memlayout.h	88;"	d
USTACKTOP	kern/mm/memlayout.h	86;"	d
UTEXT	kern/mm/memlayout.h	91;"	d
V	Makefile	/^V       := @$/;"	m
VALID_IDE	kern/driver/ide.c	47;"	d	file:
VM_EXEC	kern/mm/vmm.h	29;"	d
VM_READ	kern/mm/vmm.h	27;"	d
VM_STACK	kern/mm/vmm.h	30;"	d
VM_WRITE	kern/mm/vmm.h	28;"	d
VPT	kern/mm/memlayout.h	80;"	d
WHITESPACE	kern/debug/kmonitor.c	34;"	d	file:
WHITESPACE	obj/kernel.asm	/^#define WHITESPACE      " \\t\\n\\r"$/;"	d
WT_CHILD	kern/process/proc.h	72;"	d
WT_INTERRUPTED	kern/process/proc.h	71;"	d
WT_KSEM	kern/process/proc.h	73;"	d
WT_TIMER	kern/process/proc.h	74;"	d
__BOOT_ASM_H__	boot/asm.h	2;"	d
__HAVE_ARCH_MEMCPY	libs/x86.h	283;"	d
__HAVE_ARCH_MEMCPY	obj/kernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/sleep.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	libs/x86.h	264;"	d
__HAVE_ARCH_MEMMOVE	obj/kernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/sleep.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	libs/x86.h	250;"	d
__HAVE_ARCH_MEMSET	obj/kernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/sleep.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	libs/x86.h	210;"	d
__HAVE_ARCH_STRCMP	obj/kernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/matrix.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/priority.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/sleep.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	libs/x86.h	234;"	d
__HAVE_ARCH_STRCPY	obj/kernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/matrix.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/priority.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/sleep.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__KERNEL_EXECVE	kern/process/proc.c	826;"	d	file:
__KERNEL_EXECVE2	kern/process/proc.c	839;"	d	file:
__KERN_DEBUG_ASSERT_H__	kern/debug/assert.h	2;"	d
__KERN_DEBUG_KDEBUG_H__	kern/debug/kdebug.h	2;"	d
__KERN_DEBUG_MONITOR_H__	kern/debug/kmonitor.h	2;"	d
__KERN_DEBUG_STAB_H__	kern/debug/stab.h	2;"	d
__KERN_DRIVER_CLOCK_H__	kern/driver/clock.h	2;"	d
__KERN_DRIVER_CONSOLE_H__	kern/driver/console.h	2;"	d
__KERN_DRIVER_IDE_H__	kern/driver/ide.h	2;"	d
__KERN_DRIVER_INTR_H__	kern/driver/intr.h	2;"	d
__KERN_DRIVER_KBDREG_H__	kern/driver/kbdreg.h	2;"	d
__KERN_DRIVER_PICIRQ_H__	kern/driver/picirq.h	2;"	d
__KERN_FS_FS_H__	kern/fs/fs.h	2;"	d
__KERN_FS_SWAPFS_H__	kern/fs/swapfs.h	2;"	d
__KERN_MM_DEFAULT_PMM_H__	kern/mm/default_pmm.h	2;"	d
__KERN_MM_KMALLOC_H__	kern/mm/kmalloc.h	2;"	d
__KERN_MM_MEMLAYOUT_H__	kern/mm/memlayout.h	2;"	d
__KERN_MM_MMU_H__	kern/mm/mmu.h	2;"	d
__KERN_MM_PMM_H__	kern/mm/pmm.h	2;"	d
__KERN_MM_SWAP_FIFO_H__	kern/mm/swap_fifo.h	2;"	d
__KERN_MM_SWAP_H__	kern/mm/swap.h	2;"	d
__KERN_MM_VMM_H__	kern/mm/vmm.h	2;"	d
__KERN_PROCESS_PROC_H__	kern/process/proc.h	2;"	d
__KERN_SCHEDULE_SCHED_H__	kern/schedule/sched.h	2;"	d
__KERN_SCHEDULE_SCHED_RR_H__	kern/schedule/default_sched_stride.h	2;"	d
__KERN_SYNC_MOINTOR_CONDVAR_H__	kern/sync/monitor.h	2;"	d
__KERN_SYNC_SEM_H__	kern/sync/sem.h	2;"	d
__KERN_SYNC_SYNC_H__	kern/sync/sync.h	2;"	d
__KERN_SYNC_WAIT_H__	kern/sync/wait.h	2;"	d
__KERN_SYSCALL_SYSCALL_H__	kern/syscall/syscall.h	2;"	d
__KERN_TRAP_TRAP_H__	kern/trap/trap.h	2;"	d
__LIBS_ATOMIC_H__	libs/atomic.h	2;"	d
__LIBS_DEFS_H__	libs/defs.h	2;"	d
__LIBS_ELF_H__	libs/elf.h	2;"	d
__LIBS_ERROR_H__	libs/error.h	2;"	d
__LIBS_LIST_H__	libs/list.h	2;"	d
__LIBS_SKEW_HEAP_H__	libs/skew_heap.h	2;"	d
__LIBS_STDARG_H__	libs/stdarg.h	2;"	d
__LIBS_STDIO_H__	libs/stdio.h	2;"	d
__LIBS_STDLIB_H__	libs/stdlib.h	2;"	d
__LIBS_STRING_H__	libs/string.h	2;"	d
__LIBS_UNISTD_H__	libs/unistd.h	2;"	d
__LIBS_X86_H__	libs/x86.h	2;"	d
__USER_LIBS_SYSCALL_H__	user/libs/syscall.h	2;"	d
__USER_LIBS_ULIB_H__	user/libs/ulib.h	2;"	d
__alltraps	kern/trap/trapentry.S	/^__alltraps:$/;"	l
__alltraps	obj/kernel.asm	/^__alltraps:$/;"	l
__always_inline	libs/defs.h	8;"	d
__down	kern/sync/sem.c	/^static __noinline uint32_t __down(semaphore_t *sem, uint32_t wait_state) {$/;"	f	file:
__gdt	kern/init/entry.S	/^__gdt:$/;"	l
__gdtdesc	kern/init/entry.S	/^__gdtdesc:$/;"	l
__intr_restore	kern/sync/sync.h	/^__intr_restore(bool flag) {$/;"	f
__intr_save	kern/sync/sync.h	/^__intr_save(void) {$/;"	f
__kmalloc	kern/mm/kmalloc.c	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	f	file:
__list_add	libs/list.h	/^__list_add(list_entry_t *elm, list_entry_t *prev, list_entry_t *next) {$/;"	f
__list_del	libs/list.h	/^__list_del(list_entry_t *prev, list_entry_t *next) {$/;"	f
__memcpy	libs/x86.h	/^__memcpy(void *dst, const void *src, size_t n) {$/;"	f
__memmove	libs/x86.h	/^__memmove(void *dst, const void *src, size_t n) {$/;"	f
__memset	libs/x86.h	/^__memset(void *s, char c, size_t n) {$/;"	f
__noinline	libs/defs.h	9;"	d
__noreturn	libs/defs.h	10;"	d
__panic	kern/debug/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__panic	user/libs/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__rq	kern/schedule/sched.c	/^static struct run_queue __rq;$/;"	v	typeref:struct:run_queue	file:
__slob_free_pages	kern/mm/kmalloc.c	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	f	file:
__slob_get_free_page	kern/mm/kmalloc.c	89;"	d	file:
__slob_get_free_page	obj/kernel.asm	/^#define __slob_get_free_page(gfp) __slob_get_free_pages(gfp, 0)$/;"	d
__slob_get_free_pages	kern/mm/kmalloc.c	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	f	file:
__strcmp	libs/x86.h	/^__strcmp(const char *s1, const char *s2) {$/;"	f
__strcpy	libs/x86.h	/^__strcpy(char *dst, const char *src) {$/;"	f
__trapret	kern/trap/trapentry.S	/^__trapret:$/;"	l
__trapret	obj/kernel.asm	/^__trapret:$/;"	l
__up	kern/sync/sem.c	/^static __noinline void __up(semaphore_t *sem, uint32_t wait_state) {$/;"	f	file:
__vectors	kern/trap/vectors.S	/^__vectors:$/;"	l
__warn	kern/debug/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
__warn	user/libs/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
_fifo_check_swap	kern/mm/swap_fifo.c	/^_fifo_check_swap(void) {$/;"	f	file:
_fifo_init	kern/mm/swap_fifo.c	/^_fifo_init(void)$/;"	f	file:
_fifo_init_mm	kern/mm/swap_fifo.c	/^_fifo_init_mm(struct mm_struct *mm)$/;"	f	file:
_fifo_map_swappable	kern/mm/swap_fifo.c	/^_fifo_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f	file:
_fifo_set_unswappable	kern/mm/swap_fifo.c	/^_fifo_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f	file:
_fifo_swap_out_victim	kern/mm/swap_fifo.c	/^_fifo_swap_out_victim(struct mm_struct *mm, struct Page ** ptr_page, int in_tick)$/;"	f	file:
_fifo_tick_event	kern/mm/swap_fifo.c	/^_fifo_tick_event(struct mm_struct *mm)$/;"	f	file:
_start	obj/user/badarg.asm	/^_start:$/;"	l
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/exit.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/forktest.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/matrix.asm	/^_start:$/;"	l
_start	obj/user/pgdir.asm	/^_start:$/;"	l
_start	obj/user/priority.asm	/^_start:$/;"	l
_start	obj/user/sleep.asm	/^_start:$/;"	l
_start	obj/user/sleepkill.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/waitkill.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_start	user/libs/initcode.S	/^_start:$/;"	l
acc	user/priority.c	/^unsigned int acc[TOTAL];$/;"	v
add_dependency	tools/function.mk	/^add_dependency = $(eval $(1): $(2))$/;"	m
add_files	tools/function.mk	/^add_files = $(eval $(call do_add_files_to_packet,$(1),$(2),$(3),$(4),$(5)))$/;"	m
add_files_cc	Makefile	/^add_files_cc = $(call add_files,$(1),$(CC),$(CFLAGS) $(3),$(2),$(4))$/;"	m
add_files_host	Makefile	/^add_files_host = $(call add_files,$(1),$(HOSTCC),$(HOSTCFLAGS),$(2),$(3))$/;"	m
add_objs	tools/function.mk	/^add_objs = $(eval $(call do_add_objs_to_packet,$(1),$(2)))$/;"	m
add_timer	kern/schedule/sched.c	/^add_timer(timer_t *timer) {$/;"	f
addr	kern/mm/memlayout.h	/^        uint64_t addr;$/;"	m	struct:e820map::__anon5
addr	obj/kernel.asm	/^    addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr_6845	kern/driver/console.c	/^static uint16_t addr_6845;$/;"	v	file:
addr_6845	obj/kernel.asm	/^        addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kernel.asm	/^        addr_6845 = MONO_BASE;$/;"	d
aligned	obj/kernel.asm	/^			aligned = (slob_t *)ALIGN((unsigned long)cur, align);$/;"	d
alloc_page	kern/mm/pmm.h	35;"	d
alloc_pages	kern/mm/pmm.c	/^alloc_pages(size_t n) {$/;"	f
alloc_pages	kern/mm/pmm.h	/^    struct Page *(*alloc_pages)(size_t n);            \/\/ allocate >=n pages, depend on the allocation algorithm $/;"	m	struct:pmm_manager	typeref:struct:pmm_manager::alloc_pages
alloc_proc	kern/process/proc.c	/^alloc_proc(void) {$/;"	f	file:
altflag	obj/kernel.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/badarg.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/exit.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/forktest.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/matrix.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/pgdir.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/priority.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/sleep.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/sleepkill.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/waitkill.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^            altflag = 1;$/;"	d
any_matches	obj/kernel.asm	/^        any_matches = 1;$/;"	d
arena	kern/mm/kmalloc.c	/^static slob_t arena = { .next = &arena, .units = 1 };$/;"	v	file:
asmfile	Makefile	/^asmfile = $(call cgtype,$(call toobj,$(1)),o,asm)$/;"	m
assert	kern/debug/assert.h	15;"	d
assert	user/libs/ulib.h	15;"	d
bad	obj/bootblock.asm	/^bad:$/;"	l
bad_cleanup_mmap	obj/kernel.asm	/^bad_cleanup_mmap:$/;"	l
bad_dup_cleanup_mmap	obj/kernel.asm	/^bad_dup_cleanup_mmap:$/;"	l
bad_elf_cleanup_pgdir	obj/kernel.asm	/^bad_elf_cleanup_pgdir:$/;"	l
bad_fork_cleanup_kstack	obj/kernel.asm	/^bad_fork_cleanup_kstack:$/;"	l
bad_fork_cleanup_proc	obj/kernel.asm	/^bad_fork_cleanup_proc:$/;"	l
bad_mm	obj/kernel.asm	/^bad_mm:$/;"	l
bad_pgdir_cleanup_mm	obj/kernel.asm	/^bad_pgdir_cleanup_mm:$/;"	l
barrier	libs/x86.h	21;"	d
base	kern/driver/ide.c	/^    unsigned short base;        \/\/ I\/O Base$/;"	m	struct:__anon7	file:
base	obj/kernel.asm	/^            base = 10;$/;"	d
base	obj/kernel.asm	/^            base = 16;$/;"	d
base	obj/kernel.asm	/^            base = 8;$/;"	d
base	obj/kernel.asm	/^            base = p;$/;"	d
base	obj/kernel.asm	/^        base = 10;$/;"	d
base	obj/user/badarg.asm	/^            base = 10;$/;"	d
base	obj/user/badarg.asm	/^            base = 16;$/;"	d
base	obj/user/badarg.asm	/^            base = 8;$/;"	d
base	obj/user/badarg.asm	/^        base = 10;$/;"	d
base	obj/user/badsegment.asm	/^            base = 10;$/;"	d
base	obj/user/badsegment.asm	/^            base = 16;$/;"	d
base	obj/user/badsegment.asm	/^            base = 8;$/;"	d
base	obj/user/badsegment.asm	/^        base = 10;$/;"	d
base	obj/user/divzero.asm	/^            base = 10;$/;"	d
base	obj/user/divzero.asm	/^            base = 16;$/;"	d
base	obj/user/divzero.asm	/^            base = 8;$/;"	d
base	obj/user/divzero.asm	/^        base = 10;$/;"	d
base	obj/user/exit.asm	/^            base = 10;$/;"	d
base	obj/user/exit.asm	/^            base = 16;$/;"	d
base	obj/user/exit.asm	/^            base = 8;$/;"	d
base	obj/user/exit.asm	/^        base = 10;$/;"	d
base	obj/user/faultread.asm	/^            base = 10;$/;"	d
base	obj/user/faultread.asm	/^            base = 16;$/;"	d
base	obj/user/faultread.asm	/^            base = 8;$/;"	d
base	obj/user/faultread.asm	/^        base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^        base = 10;$/;"	d
base	obj/user/forktest.asm	/^            base = 10;$/;"	d
base	obj/user/forktest.asm	/^            base = 16;$/;"	d
base	obj/user/forktest.asm	/^            base = 8;$/;"	d
base	obj/user/forktest.asm	/^        base = 10;$/;"	d
base	obj/user/forktree.asm	/^            base = 10;$/;"	d
base	obj/user/forktree.asm	/^            base = 16;$/;"	d
base	obj/user/forktree.asm	/^            base = 8;$/;"	d
base	obj/user/forktree.asm	/^        base = 10;$/;"	d
base	obj/user/hello.asm	/^            base = 10;$/;"	d
base	obj/user/hello.asm	/^            base = 16;$/;"	d
base	obj/user/hello.asm	/^            base = 8;$/;"	d
base	obj/user/hello.asm	/^        base = 10;$/;"	d
base	obj/user/matrix.asm	/^            base = 10;$/;"	d
base	obj/user/matrix.asm	/^            base = 16;$/;"	d
base	obj/user/matrix.asm	/^            base = 8;$/;"	d
base	obj/user/matrix.asm	/^        base = 10;$/;"	d
base	obj/user/pgdir.asm	/^            base = 10;$/;"	d
base	obj/user/pgdir.asm	/^            base = 16;$/;"	d
base	obj/user/pgdir.asm	/^            base = 8;$/;"	d
base	obj/user/pgdir.asm	/^        base = 10;$/;"	d
base	obj/user/priority.asm	/^            base = 10;$/;"	d
base	obj/user/priority.asm	/^            base = 16;$/;"	d
base	obj/user/priority.asm	/^            base = 8;$/;"	d
base	obj/user/priority.asm	/^        base = 10;$/;"	d
base	obj/user/sleep.asm	/^            base = 10;$/;"	d
base	obj/user/sleep.asm	/^            base = 16;$/;"	d
base	obj/user/sleep.asm	/^            base = 8;$/;"	d
base	obj/user/sleep.asm	/^        base = 10;$/;"	d
base	obj/user/sleepkill.asm	/^            base = 10;$/;"	d
base	obj/user/sleepkill.asm	/^            base = 16;$/;"	d
base	obj/user/sleepkill.asm	/^            base = 8;$/;"	d
base	obj/user/sleepkill.asm	/^        base = 10;$/;"	d
base	obj/user/softint.asm	/^            base = 10;$/;"	d
base	obj/user/softint.asm	/^            base = 16;$/;"	d
base	obj/user/softint.asm	/^            base = 8;$/;"	d
base	obj/user/softint.asm	/^        base = 10;$/;"	d
base	obj/user/spin.asm	/^            base = 10;$/;"	d
base	obj/user/spin.asm	/^            base = 16;$/;"	d
base	obj/user/spin.asm	/^            base = 8;$/;"	d
base	obj/user/spin.asm	/^        base = 10;$/;"	d
base	obj/user/testbss.asm	/^            base = 10;$/;"	d
base	obj/user/testbss.asm	/^            base = 16;$/;"	d
base	obj/user/testbss.asm	/^            base = 8;$/;"	d
base	obj/user/testbss.asm	/^        base = 10;$/;"	d
base	obj/user/waitkill.asm	/^            base = 10;$/;"	d
base	obj/user/waitkill.asm	/^            base = 16;$/;"	d
base	obj/user/waitkill.asm	/^            base = 8;$/;"	d
base	obj/user/waitkill.asm	/^        base = 10;$/;"	d
base	obj/user/yield.asm	/^            base = 10;$/;"	d
base	obj/user/yield.asm	/^            base = 16;$/;"	d
base	obj/user/yield.asm	/^            base = 8;$/;"	d
base	obj/user/yield.asm	/^        base = 10;$/;"	d
basic_check	kern/mm/default_pmm.c	/^basic_check(void) {$/;"	f	file:
bb	obj/kernel.asm	/^	bb = slob_alloc(sizeof(bigblock_t), gfp, 0);$/;"	d
begin	obj/kernel.asm	/^                begin = ROUNDUP(begin, PGSIZE);$/;"	d
begin	obj/kernel.asm	/^                begin = freemem;$/;"	d
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
bigblock	kern/mm/kmalloc.c	/^struct bigblock {$/;"	s	file:
bigblock_t	kern/mm/kmalloc.c	/^typedef struct bigblock bigblock_t;$/;"	t	typeref:struct:bigblock	file:
bigblocks	kern/mm/kmalloc.c	/^static bigblock_t *bigblocks;$/;"	v	file:
bigblocks	obj/kernel.asm	/^		bigblocks = bb;$/;"	d
bool	libs/defs.h	/^typedef int bool;$/;"	t
bool	obj/kernel.asm	/^bool copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable);$/;"	l
bool	obj/kernel.asm	/^bool copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len);$/;"	l
bool	obj/kernel.asm	/^bool user_mem_check(struct mm_struct *mm, uintptr_t start, size_t len, bool write);$/;"	l
bool	obj/kernel.asm	/^bool$/;"	l
boot_alloc_page	kern/mm/pmm.c	/^boot_alloc_page(void) {$/;"	f	file:
boot_cr3	kern/mm/pmm.c	/^uintptr_t boot_cr3;$/;"	v
boot_cr3	obj/kernel.asm	/^    boot_cr3 = PADDR(boot_pgdir);$/;"	d
boot_map_segment	kern/mm/pmm.c	/^boot_map_segment(pde_t *pgdir, uintptr_t la, size_t size, uintptr_t pa, uint32_t perm) {$/;"	f	file:
boot_pgdir	kern/mm/pmm.c	/^pde_t *boot_pgdir = NULL;$/;"	v
boot_pgdir	obj/kernel.asm	/^    boot_pgdir = boot_alloc_page();$/;"	d
bootblock	Makefile	/^bootblock = $(call totarget,bootblock)$/;"	m
bootfiles	Makefile	/^bootfiles = $(call listf_cc,boot)$/;"	m
bootmain	boot/bootmain.c	/^bootmain(void) {$/;"	f
bootstack	kern/init/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/init/entry.S	/^bootstacktop:$/;"	l
breakpoint	libs/x86.h	/^breakpoint(void) {$/;"	f
buf	kern/driver/console.c	/^    uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon8	file:
buf	kern/libs/readline.c	/^static char buf[BUFSIZE];$/;"	v	file:
buf	libs/printfmt.c	/^    char *buf;          \/\/ address pointer points to the first unused memory$/;"	m	struct:sprintbuf	file:
build_run	tools/grade.sh	/^build_run() {$/;"	f
c	obj/kernel.asm	/^            c = cons.buf[cons.rpos ++];$/;"	d
c	obj/kernel.asm	/^        c = '\\b';$/;"	d
c	obj/kernel.asm	/^        c = cons_getc();$/;"	d
c	obj/kernel.asm	/^        c = getchar();$/;"	d
c	obj/kernel.asm	/^    c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c0100000	obj/kernel.asm	/^c0100000 <kern_entry>:$/;"	l
c0100000	obj/kernel.asm	/^c0100000:	0f 01 15 18 00 13 00 	lgdtl  0x130018$/;"	l
c0100007	obj/kernel.asm	/^c0100007:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c010000c	obj/kernel.asm	/^c010000c:	8e d8                	mov    %eax,%ds$/;"	l
c010000e	obj/kernel.asm	/^c010000e:	8e c0                	mov    %eax,%es$/;"	l
c0100010	obj/kernel.asm	/^c0100010:	8e d0                	mov    %eax,%ss$/;"	l
c0100012	obj/kernel.asm	/^c0100012:	ea 19 00 10 c0 08 00 	ljmp   $0x8,$0xc0100019$/;"	l
c0100019	obj/kernel.asm	/^c0100019 <relocated>:$/;"	l
c0100019	obj/kernel.asm	/^c0100019:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
c010001e	obj/kernel.asm	/^c010001e:	bc 00 00 13 c0       	mov    $0xc0130000,%esp$/;"	l
c0100023	obj/kernel.asm	/^c0100023:	e8 02 00 00 00       	call   c010002a <kern_init>$/;"	l
c0100028	obj/kernel.asm	/^c0100028 <spin>:$/;"	l
c0100028	obj/kernel.asm	/^c0100028:	eb fe                	jmp    c0100028 <spin>$/;"	l
c010002a	obj/kernel.asm	/^c010002a <kern_init>:$/;"	l
c010002a	obj/kernel.asm	/^c010002a:	55                   	push   %ebp$/;"	l
c010002b	obj/kernel.asm	/^c010002b:	89 e5                	mov    %esp,%ebp$/;"	l
c010002d	obj/kernel.asm	/^c010002d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100030	obj/kernel.asm	/^c0100030:	ba 64 47 1c c0       	mov    $0xc01c4764,%edx$/;"	l
c0100035	obj/kernel.asm	/^c0100035:	b8 64 13 1c c0       	mov    $0xc01c1364,%eax$/;"	l
c010003a	obj/kernel.asm	/^c010003a:	29 c2                	sub    %eax,%edx$/;"	l
c010003c	obj/kernel.asm	/^c010003c:	89 d0                	mov    %edx,%eax$/;"	l
c010003e	obj/kernel.asm	/^c010003e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100041	obj/kernel.asm	/^c0100041:	50                   	push   %eax$/;"	l
c0100042	obj/kernel.asm	/^c0100042:	6a 00                	push   $0x0$/;"	l
c0100044	obj/kernel.asm	/^c0100044:	68 64 13 1c c0       	push   $0xc01c1364$/;"	l
c0100049	obj/kernel.asm	/^c0100049:	e8 aa c2 00 00       	call   c010c2f8 <memset>$/;"	l
c010004e	obj/kernel.asm	/^c010004e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100051	obj/kernel.asm	/^c0100051:	e8 9c 1d 00 00       	call   c0101df2 <cons_init>$/;"	l
c0100056	obj/kernel.asm	/^c0100056:	c7 45 f4 c0 cb 10 c0 	movl   $0xc010cbc0,-0xc(%ebp)$/;"	l
c010005d	obj/kernel.asm	/^c010005d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100060	obj/kernel.asm	/^c0100060:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100063	obj/kernel.asm	/^c0100063:	68 dc cb 10 c0       	push   $0xc010cbdc$/;"	l
c0100068	obj/kernel.asm	/^c0100068:	e8 0d 02 00 00       	call   c010027a <cprintf>$/;"	l
c010006d	obj/kernel.asm	/^c010006d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100070	obj/kernel.asm	/^c0100070:	e8 62 09 00 00       	call   c01009d7 <print_kerninfo>$/;"	l
c0100075	obj/kernel.asm	/^c0100075:	e8 8d 00 00 00       	call   c0100107 <grade_backtrace>$/;"	l
c010007a	obj/kernel.asm	/^c010007a:	e8 bf 3e 00 00       	call   c0103f3e <pmm_init>$/;"	l
c010007f	obj/kernel.asm	/^c010007f:	e8 dc 1e 00 00       	call   c0101f60 <pic_init>$/;"	l
c0100084	obj/kernel.asm	/^c0100084:	e8 5b 20 00 00       	call   c01020e4 <idt_init>$/;"	l
c0100089	obj/kernel.asm	/^c0100089:	e8 22 59 00 00       	call   c01059b0 <vmm_init>$/;"	l
c010008e	obj/kernel.asm	/^c010008e:	e8 08 b5 00 00       	call   c010b59b <sched_init>$/;"	l
c0100093	obj/kernel.asm	/^c0100093:	e8 bb b1 00 00       	call   c010b253 <proc_init>$/;"	l
c0100098	obj/kernel.asm	/^c0100098:	e8 38 0d 00 00       	call   c0100dd5 <ide_init>$/;"	l
c010009d	obj/kernel.asm	/^c010009d:	e8 03 63 00 00       	call   c01063a5 <swap_init>$/;"	l
c01000a2	obj/kernel.asm	/^c01000a2:	e8 04 15 00 00       	call   c01015ab <clock_init>$/;"	l
c01000a7	obj/kernel.asm	/^c01000a7:	e8 f0 1f 00 00       	call   c010209c <intr_enable>$/;"	l
c01000ac	obj/kernel.asm	/^c01000ac:	e8 3e b3 00 00       	call   c010b3ef <cpu_idle>$/;"	l
c01000b1	obj/kernel.asm	/^c01000b1 <grade_backtrace2>:$/;"	l
c01000b1	obj/kernel.asm	/^c01000b1:	55                   	push   %ebp$/;"	l
c01000b2	obj/kernel.asm	/^c01000b2:	89 e5                	mov    %esp,%ebp$/;"	l
c01000b4	obj/kernel.asm	/^c01000b4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01000b7	obj/kernel.asm	/^c01000b7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01000ba	obj/kernel.asm	/^c01000ba:	6a 00                	push   $0x0$/;"	l
c01000bc	obj/kernel.asm	/^c01000bc:	6a 00                	push   $0x0$/;"	l
c01000be	obj/kernel.asm	/^c01000be:	6a 00                	push   $0x0$/;"	l
c01000c0	obj/kernel.asm	/^c01000c0:	e8 a4 0c 00 00       	call   c0100d69 <mon_backtrace>$/;"	l
c01000c5	obj/kernel.asm	/^c01000c5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01000c8	obj/kernel.asm	/^c01000c8:	c9                   	leave  $/;"	l
c01000c9	obj/kernel.asm	/^c01000c9:	c3                   	ret    $/;"	l
c01000ca	obj/kernel.asm	/^c01000ca <grade_backtrace1>:$/;"	l
c01000ca	obj/kernel.asm	/^c01000ca:	55                   	push   %ebp$/;"	l
c01000cb	obj/kernel.asm	/^c01000cb:	89 e5                	mov    %esp,%ebp$/;"	l
c01000cd	obj/kernel.asm	/^c01000cd:	53                   	push   %ebx$/;"	l
c01000ce	obj/kernel.asm	/^c01000ce:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01000d1	obj/kernel.asm	/^c01000d1:	8d 4d 0c             	lea    0xc(%ebp),%ecx$/;"	l
c01000d4	obj/kernel.asm	/^c01000d4:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01000d7	obj/kernel.asm	/^c01000d7:	8d 5d 08             	lea    0x8(%ebp),%ebx$/;"	l
c01000da	obj/kernel.asm	/^c01000da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01000dd	obj/kernel.asm	/^c01000dd:	51                   	push   %ecx$/;"	l
c01000de	obj/kernel.asm	/^c01000de:	52                   	push   %edx$/;"	l
c01000df	obj/kernel.asm	/^c01000df:	53                   	push   %ebx$/;"	l
c01000e0	obj/kernel.asm	/^c01000e0:	50                   	push   %eax$/;"	l
c01000e1	obj/kernel.asm	/^c01000e1:	e8 cb ff ff ff       	call   c01000b1 <grade_backtrace2>$/;"	l
c01000e6	obj/kernel.asm	/^c01000e6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01000e9	obj/kernel.asm	/^c01000e9:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c01000ec	obj/kernel.asm	/^c01000ec:	c9                   	leave  $/;"	l
c01000ed	obj/kernel.asm	/^c01000ed:	c3                   	ret    $/;"	l
c01000ee	obj/kernel.asm	/^c01000ee <grade_backtrace0>:$/;"	l
c01000ee	obj/kernel.asm	/^c01000ee:	55                   	push   %ebp$/;"	l
c01000ef	obj/kernel.asm	/^c01000ef:	89 e5                	mov    %esp,%ebp$/;"	l
c01000f1	obj/kernel.asm	/^c01000f1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01000f4	obj/kernel.asm	/^c01000f4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01000f7	obj/kernel.asm	/^c01000f7:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01000fa	obj/kernel.asm	/^c01000fa:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01000fd	obj/kernel.asm	/^c01000fd:	e8 c8 ff ff ff       	call   c01000ca <grade_backtrace1>$/;"	l
c0100102	obj/kernel.asm	/^c0100102:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100105	obj/kernel.asm	/^c0100105:	c9                   	leave  $/;"	l
c0100106	obj/kernel.asm	/^c0100106:	c3                   	ret    $/;"	l
c0100107	obj/kernel.asm	/^c0100107 <grade_backtrace>:$/;"	l
c0100107	obj/kernel.asm	/^c0100107:	55                   	push   %ebp$/;"	l
c0100108	obj/kernel.asm	/^c0100108:	89 e5                	mov    %esp,%ebp$/;"	l
c010010a	obj/kernel.asm	/^c010010a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010010d	obj/kernel.asm	/^c010010d:	b8 2a 00 10 c0       	mov    $0xc010002a,%eax$/;"	l
c0100112	obj/kernel.asm	/^c0100112:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100115	obj/kernel.asm	/^c0100115:	68 00 00 ff ff       	push   $0xffff0000$/;"	l
c010011a	obj/kernel.asm	/^c010011a:	50                   	push   %eax$/;"	l
c010011b	obj/kernel.asm	/^c010011b:	6a 00                	push   $0x0$/;"	l
c010011d	obj/kernel.asm	/^c010011d:	e8 cc ff ff ff       	call   c01000ee <grade_backtrace0>$/;"	l
c0100122	obj/kernel.asm	/^c0100122:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100125	obj/kernel.asm	/^c0100125:	c9                   	leave  $/;"	l
c0100126	obj/kernel.asm	/^c0100126:	c3                   	ret    $/;"	l
c0100127	obj/kernel.asm	/^c0100127 <lab1_print_cur_status>:$/;"	l
c0100127	obj/kernel.asm	/^c0100127:	55                   	push   %ebp$/;"	l
c0100128	obj/kernel.asm	/^c0100128:	89 e5                	mov    %esp,%ebp$/;"	l
c010012a	obj/kernel.asm	/^c010012a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010012d	obj/kernel.asm	/^c010012d:	8c 4d f6             	mov    %cs,-0xa(%ebp)$/;"	l
c0100130	obj/kernel.asm	/^c0100130:	8c 5d f4             	mov    %ds,-0xc(%ebp)$/;"	l
c0100133	obj/kernel.asm	/^c0100133:	8c 45 f2             	mov    %es,-0xe(%ebp)$/;"	l
c0100136	obj/kernel.asm	/^c0100136:	8c 55 f0             	mov    %ss,-0x10(%ebp)$/;"	l
c0100139	obj/kernel.asm	/^c0100139:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010013d	obj/kernel.asm	/^c010013d:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100140	obj/kernel.asm	/^c0100140:	83 e0 03             	and    $0x3,%eax$/;"	l
c0100143	obj/kernel.asm	/^c0100143:	89 c2                	mov    %eax,%edx$/;"	l
c0100145	obj/kernel.asm	/^c0100145:	a1 80 13 1c c0       	mov    0xc01c1380,%eax$/;"	l
c010014a	obj/kernel.asm	/^c010014a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010014d	obj/kernel.asm	/^c010014d:	52                   	push   %edx$/;"	l
c010014e	obj/kernel.asm	/^c010014e:	50                   	push   %eax$/;"	l
c010014f	obj/kernel.asm	/^c010014f:	68 e1 cb 10 c0       	push   $0xc010cbe1$/;"	l
c0100154	obj/kernel.asm	/^c0100154:	e8 21 01 00 00       	call   c010027a <cprintf>$/;"	l
c0100159	obj/kernel.asm	/^c0100159:	83 c4 10             	add    $0x10,%esp$/;"	l
c010015c	obj/kernel.asm	/^c010015c:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100160	obj/kernel.asm	/^c0100160:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c0100163	obj/kernel.asm	/^c0100163:	a1 80 13 1c c0       	mov    0xc01c1380,%eax$/;"	l
c0100168	obj/kernel.asm	/^c0100168:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010016b	obj/kernel.asm	/^c010016b:	52                   	push   %edx$/;"	l
c010016c	obj/kernel.asm	/^c010016c:	50                   	push   %eax$/;"	l
c010016d	obj/kernel.asm	/^c010016d:	68 ef cb 10 c0       	push   $0xc010cbef$/;"	l
c0100172	obj/kernel.asm	/^c0100172:	e8 03 01 00 00       	call   c010027a <cprintf>$/;"	l
c0100177	obj/kernel.asm	/^c0100177:	83 c4 10             	add    $0x10,%esp$/;"	l
c010017a	obj/kernel.asm	/^c010017a:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c010017e	obj/kernel.asm	/^c010017e:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c0100181	obj/kernel.asm	/^c0100181:	a1 80 13 1c c0       	mov    0xc01c1380,%eax$/;"	l
c0100186	obj/kernel.asm	/^c0100186:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100189	obj/kernel.asm	/^c0100189:	52                   	push   %edx$/;"	l
c010018a	obj/kernel.asm	/^c010018a:	50                   	push   %eax$/;"	l
c010018b	obj/kernel.asm	/^c010018b:	68 fd cb 10 c0       	push   $0xc010cbfd$/;"	l
c0100190	obj/kernel.asm	/^c0100190:	e8 e5 00 00 00       	call   c010027a <cprintf>$/;"	l
c0100195	obj/kernel.asm	/^c0100195:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100198	obj/kernel.asm	/^c0100198:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010019c	obj/kernel.asm	/^c010019c:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c010019f	obj/kernel.asm	/^c010019f:	a1 80 13 1c c0       	mov    0xc01c1380,%eax$/;"	l
c01001a4	obj/kernel.asm	/^c01001a4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01001a7	obj/kernel.asm	/^c01001a7:	52                   	push   %edx$/;"	l
c01001a8	obj/kernel.asm	/^c01001a8:	50                   	push   %eax$/;"	l
c01001a9	obj/kernel.asm	/^c01001a9:	68 0b cc 10 c0       	push   $0xc010cc0b$/;"	l
c01001ae	obj/kernel.asm	/^c01001ae:	e8 c7 00 00 00       	call   c010027a <cprintf>$/;"	l
c01001b3	obj/kernel.asm	/^c01001b3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01001b6	obj/kernel.asm	/^c01001b6:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c01001ba	obj/kernel.asm	/^c01001ba:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01001bd	obj/kernel.asm	/^c01001bd:	a1 80 13 1c c0       	mov    0xc01c1380,%eax$/;"	l
c01001c2	obj/kernel.asm	/^c01001c2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01001c5	obj/kernel.asm	/^c01001c5:	52                   	push   %edx$/;"	l
c01001c6	obj/kernel.asm	/^c01001c6:	50                   	push   %eax$/;"	l
c01001c7	obj/kernel.asm	/^c01001c7:	68 19 cc 10 c0       	push   $0xc010cc19$/;"	l
c01001cc	obj/kernel.asm	/^c01001cc:	e8 a9 00 00 00       	call   c010027a <cprintf>$/;"	l
c01001d1	obj/kernel.asm	/^c01001d1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01001d4	obj/kernel.asm	/^c01001d4:	a1 80 13 1c c0       	mov    0xc01c1380,%eax$/;"	l
c01001d9	obj/kernel.asm	/^c01001d9:	83 c0 01             	add    $0x1,%eax$/;"	l
c01001dc	obj/kernel.asm	/^c01001dc:	a3 80 13 1c c0       	mov    %eax,0xc01c1380$/;"	l
c01001e1	obj/kernel.asm	/^c01001e1:	c9                   	leave  $/;"	l
c01001e2	obj/kernel.asm	/^c01001e2:	c3                   	ret    $/;"	l
c01001e3	obj/kernel.asm	/^c01001e3 <lab1_switch_to_user>:$/;"	l
c01001e3	obj/kernel.asm	/^c01001e3:	55                   	push   %ebp$/;"	l
c01001e4	obj/kernel.asm	/^c01001e4:	89 e5                	mov    %esp,%ebp$/;"	l
c01001e6	obj/kernel.asm	/^c01001e6:	5d                   	pop    %ebp$/;"	l
c01001e7	obj/kernel.asm	/^c01001e7:	c3                   	ret    $/;"	l
c01001e8	obj/kernel.asm	/^c01001e8 <lab1_switch_to_kernel>:$/;"	l
c01001e8	obj/kernel.asm	/^c01001e8:	55                   	push   %ebp$/;"	l
c01001e9	obj/kernel.asm	/^c01001e9:	89 e5                	mov    %esp,%ebp$/;"	l
c01001eb	obj/kernel.asm	/^c01001eb:	5d                   	pop    %ebp$/;"	l
c01001ec	obj/kernel.asm	/^c01001ec:	c3                   	ret    $/;"	l
c01001ed	obj/kernel.asm	/^c01001ed <lab1_switch_test>:$/;"	l
c01001ed	obj/kernel.asm	/^c01001ed:	55                   	push   %ebp$/;"	l
c01001ee	obj/kernel.asm	/^c01001ee:	89 e5                	mov    %esp,%ebp$/;"	l
c01001f0	obj/kernel.asm	/^c01001f0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01001f3	obj/kernel.asm	/^c01001f3:	e8 2f ff ff ff       	call   c0100127 <lab1_print_cur_status>$/;"	l
c01001f8	obj/kernel.asm	/^c01001f8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01001fb	obj/kernel.asm	/^c01001fb:	68 28 cc 10 c0       	push   $0xc010cc28$/;"	l
c0100200	obj/kernel.asm	/^c0100200:	e8 75 00 00 00       	call   c010027a <cprintf>$/;"	l
c0100205	obj/kernel.asm	/^c0100205:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100208	obj/kernel.asm	/^c0100208:	e8 d6 ff ff ff       	call   c01001e3 <lab1_switch_to_user>$/;"	l
c010020d	obj/kernel.asm	/^c010020d:	e8 15 ff ff ff       	call   c0100127 <lab1_print_cur_status>$/;"	l
c0100212	obj/kernel.asm	/^c0100212:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100215	obj/kernel.asm	/^c0100215:	68 48 cc 10 c0       	push   $0xc010cc48$/;"	l
c010021a	obj/kernel.asm	/^c010021a:	e8 5b 00 00 00       	call   c010027a <cprintf>$/;"	l
c010021f	obj/kernel.asm	/^c010021f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100222	obj/kernel.asm	/^c0100222:	e8 c1 ff ff ff       	call   c01001e8 <lab1_switch_to_kernel>$/;"	l
c0100227	obj/kernel.asm	/^c0100227:	e8 fb fe ff ff       	call   c0100127 <lab1_print_cur_status>$/;"	l
c010022c	obj/kernel.asm	/^c010022c:	c9                   	leave  $/;"	l
c010022d	obj/kernel.asm	/^c010022d:	c3                   	ret    $/;"	l
c010022e	obj/kernel.asm	/^c010022e <cputch>:$/;"	l
c010022e	obj/kernel.asm	/^c010022e:	55                   	push   %ebp$/;"	l
c010022f	obj/kernel.asm	/^c010022f:	89 e5                	mov    %esp,%ebp$/;"	l
c0100231	obj/kernel.asm	/^c0100231:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100234	obj/kernel.asm	/^c0100234:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100237	obj/kernel.asm	/^c0100237:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010023a	obj/kernel.asm	/^c010023a:	e8 e3 1b 00 00       	call   c0101e22 <cons_putc>$/;"	l
c010023f	obj/kernel.asm	/^c010023f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100242	obj/kernel.asm	/^c0100242:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100245	obj/kernel.asm	/^c0100245:	8b 00                	mov    (%eax),%eax$/;"	l
c0100247	obj/kernel.asm	/^c0100247:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010024a	obj/kernel.asm	/^c010024a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010024d	obj/kernel.asm	/^c010024d:	89 10                	mov    %edx,(%eax)$/;"	l
c010024f	obj/kernel.asm	/^c010024f:	c9                   	leave  $/;"	l
c0100250	obj/kernel.asm	/^c0100250:	c3                   	ret    $/;"	l
c0100251	obj/kernel.asm	/^c0100251 <vcprintf>:$/;"	l
c0100251	obj/kernel.asm	/^c0100251:	55                   	push   %ebp$/;"	l
c0100252	obj/kernel.asm	/^c0100252:	89 e5                	mov    %esp,%ebp$/;"	l
c0100254	obj/kernel.asm	/^c0100254:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100257	obj/kernel.asm	/^c0100257:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010025e	obj/kernel.asm	/^c010025e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0100261	obj/kernel.asm	/^c0100261:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100264	obj/kernel.asm	/^c0100264:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c0100267	obj/kernel.asm	/^c0100267:	50                   	push   %eax$/;"	l
c0100268	obj/kernel.asm	/^c0100268:	68 2e 02 10 c0       	push   $0xc010022e$/;"	l
c010026d	obj/kernel.asm	/^c010026d:	e8 ba c3 00 00       	call   c010c62c <vprintfmt>$/;"	l
c0100272	obj/kernel.asm	/^c0100272:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100275	obj/kernel.asm	/^c0100275:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100278	obj/kernel.asm	/^c0100278:	c9                   	leave  $/;"	l
c0100279	obj/kernel.asm	/^c0100279:	c3                   	ret    $/;"	l
c010027a	obj/kernel.asm	/^c010027a <cprintf>:$/;"	l
c010027a	obj/kernel.asm	/^c010027a:	55                   	push   %ebp$/;"	l
c010027b	obj/kernel.asm	/^c010027b:	89 e5                	mov    %esp,%ebp$/;"	l
c010027d	obj/kernel.asm	/^c010027d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100280	obj/kernel.asm	/^c0100280:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
c0100283	obj/kernel.asm	/^c0100283:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100286	obj/kernel.asm	/^c0100286:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100289	obj/kernel.asm	/^c0100289:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010028c	obj/kernel.asm	/^c010028c:	50                   	push   %eax$/;"	l
c010028d	obj/kernel.asm	/^c010028d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100290	obj/kernel.asm	/^c0100290:	e8 bc ff ff ff       	call   c0100251 <vcprintf>$/;"	l
c0100295	obj/kernel.asm	/^c0100295:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100298	obj/kernel.asm	/^c0100298:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010029b	obj/kernel.asm	/^c010029b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010029e	obj/kernel.asm	/^c010029e:	c9                   	leave  $/;"	l
c010029f	obj/kernel.asm	/^c010029f:	c3                   	ret    $/;"	l
c01002a0	obj/kernel.asm	/^c01002a0 <cputchar>:$/;"	l
c01002a0	obj/kernel.asm	/^c01002a0:	55                   	push   %ebp$/;"	l
c01002a1	obj/kernel.asm	/^c01002a1:	89 e5                	mov    %esp,%ebp$/;"	l
c01002a3	obj/kernel.asm	/^c01002a3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01002a6	obj/kernel.asm	/^c01002a6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01002a9	obj/kernel.asm	/^c01002a9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01002ac	obj/kernel.asm	/^c01002ac:	e8 71 1b 00 00       	call   c0101e22 <cons_putc>$/;"	l
c01002b1	obj/kernel.asm	/^c01002b1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01002b4	obj/kernel.asm	/^c01002b4:	c9                   	leave  $/;"	l
c01002b5	obj/kernel.asm	/^c01002b5:	c3                   	ret    $/;"	l
c01002b6	obj/kernel.asm	/^c01002b6 <cputs>:$/;"	l
c01002b6	obj/kernel.asm	/^c01002b6:	55                   	push   %ebp$/;"	l
c01002b7	obj/kernel.asm	/^c01002b7:	89 e5                	mov    %esp,%ebp$/;"	l
c01002b9	obj/kernel.asm	/^c01002b9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01002bc	obj/kernel.asm	/^c01002bc:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01002c3	obj/kernel.asm	/^c01002c3:	eb 14                	jmp    c01002d9 <cputs+0x23>$/;"	l
c01002c5	obj/kernel.asm	/^c01002c5:	0f be 45 f7          	movsbl -0x9(%ebp),%eax$/;"	l
c01002c9	obj/kernel.asm	/^c01002c9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01002cc	obj/kernel.asm	/^c01002cc:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c01002cf	obj/kernel.asm	/^c01002cf:	52                   	push   %edx$/;"	l
c01002d0	obj/kernel.asm	/^c01002d0:	50                   	push   %eax$/;"	l
c01002d1	obj/kernel.asm	/^c01002d1:	e8 58 ff ff ff       	call   c010022e <cputch>$/;"	l
c01002d6	obj/kernel.asm	/^c01002d6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01002d9	obj/kernel.asm	/^c01002d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01002dc	obj/kernel.asm	/^c01002dc:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01002df	obj/kernel.asm	/^c01002df:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c01002e2	obj/kernel.asm	/^c01002e2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01002e5	obj/kernel.asm	/^c01002e5:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c01002e8	obj/kernel.asm	/^c01002e8:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)$/;"	l
c01002ec	obj/kernel.asm	/^c01002ec:	75 d7                	jne    c01002c5 <cputs+0xf>$/;"	l
c01002ee	obj/kernel.asm	/^c01002ee:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01002f1	obj/kernel.asm	/^c01002f1:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c01002f4	obj/kernel.asm	/^c01002f4:	50                   	push   %eax$/;"	l
c01002f5	obj/kernel.asm	/^c01002f5:	6a 0a                	push   $0xa$/;"	l
c01002f7	obj/kernel.asm	/^c01002f7:	e8 32 ff ff ff       	call   c010022e <cputch>$/;"	l
c01002fc	obj/kernel.asm	/^c01002fc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01002ff	obj/kernel.asm	/^c01002ff:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100302	obj/kernel.asm	/^c0100302:	c9                   	leave  $/;"	l
c0100303	obj/kernel.asm	/^c0100303:	c3                   	ret    $/;"	l
c0100304	obj/kernel.asm	/^c0100304 <getchar>:$/;"	l
c0100304	obj/kernel.asm	/^c0100304:	55                   	push   %ebp$/;"	l
c0100305	obj/kernel.asm	/^c0100305:	89 e5                	mov    %esp,%ebp$/;"	l
c0100307	obj/kernel.asm	/^c0100307:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010030a	obj/kernel.asm	/^c010030a:	e8 5b 1b 00 00       	call   c0101e6a <cons_getc>$/;"	l
c010030f	obj/kernel.asm	/^c010030f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100312	obj/kernel.asm	/^c0100312:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100316	obj/kernel.asm	/^c0100316:	74 f2                	je     c010030a <getchar+0x6>$/;"	l
c0100318	obj/kernel.asm	/^c0100318:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010031b	obj/kernel.asm	/^c010031b:	c9                   	leave  $/;"	l
c010031c	obj/kernel.asm	/^c010031c:	c3                   	ret    $/;"	l
c010031d	obj/kernel.asm	/^c010031d <readline>:$/;"	l
c010031d	obj/kernel.asm	/^c010031d:	55                   	push   %ebp$/;"	l
c010031e	obj/kernel.asm	/^c010031e:	89 e5                	mov    %esp,%ebp$/;"	l
c0100320	obj/kernel.asm	/^c0100320:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100323	obj/kernel.asm	/^c0100323:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100327	obj/kernel.asm	/^c0100327:	74 13                	je     c010033c <readline+0x1f>$/;"	l
c0100329	obj/kernel.asm	/^c0100329:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010032c	obj/kernel.asm	/^c010032c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010032f	obj/kernel.asm	/^c010032f:	68 67 cc 10 c0       	push   $0xc010cc67$/;"	l
c0100334	obj/kernel.asm	/^c0100334:	e8 41 ff ff ff       	call   c010027a <cprintf>$/;"	l
c0100339	obj/kernel.asm	/^c0100339:	83 c4 10             	add    $0x10,%esp$/;"	l
c010033c	obj/kernel.asm	/^c010033c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100343	obj/kernel.asm	/^c0100343:	e8 bc ff ff ff       	call   c0100304 <getchar>$/;"	l
c0100348	obj/kernel.asm	/^c0100348:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010034b	obj/kernel.asm	/^c010034b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010034f	obj/kernel.asm	/^c010034f:	79 0a                	jns    c010035b <readline+0x3e>$/;"	l
c0100351	obj/kernel.asm	/^c0100351:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100356	obj/kernel.asm	/^c0100356:	e9 82 00 00 00       	jmp    c01003dd <readline+0xc0>$/;"	l
c010035b	obj/kernel.asm	/^c010035b:	83 7d f0 1f          	cmpl   $0x1f,-0x10(%ebp)$/;"	l
c010035f	obj/kernel.asm	/^c010035f:	7e 2b                	jle    c010038c <readline+0x6f>$/;"	l
c0100361	obj/kernel.asm	/^c0100361:	81 7d f4 fe 03 00 00 	cmpl   $0x3fe,-0xc(%ebp)$/;"	l
c0100368	obj/kernel.asm	/^c0100368:	7f 22                	jg     c010038c <readline+0x6f>$/;"	l
c010036a	obj/kernel.asm	/^c010036a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010036d	obj/kernel.asm	/^c010036d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0100370	obj/kernel.asm	/^c0100370:	e8 2b ff ff ff       	call   c01002a0 <cputchar>$/;"	l
c0100375	obj/kernel.asm	/^c0100375:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100378	obj/kernel.asm	/^c0100378:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010037b	obj/kernel.asm	/^c010037b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010037e	obj/kernel.asm	/^c010037e:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0100381	obj/kernel.asm	/^c0100381:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100384	obj/kernel.asm	/^c0100384:	88 90 c0 13 1c c0    	mov    %dl,-0x3fe3ec40(%eax)$/;"	l
c010038a	obj/kernel.asm	/^c010038a:	eb 4c                	jmp    c01003d8 <readline+0xbb>$/;"	l
c010038c	obj/kernel.asm	/^c010038c:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)$/;"	l
c0100390	obj/kernel.asm	/^c0100390:	75 1a                	jne    c01003ac <readline+0x8f>$/;"	l
c0100392	obj/kernel.asm	/^c0100392:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100396	obj/kernel.asm	/^c0100396:	7e 14                	jle    c01003ac <readline+0x8f>$/;"	l
c0100398	obj/kernel.asm	/^c0100398:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010039b	obj/kernel.asm	/^c010039b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010039e	obj/kernel.asm	/^c010039e:	e8 fd fe ff ff       	call   c01002a0 <cputchar>$/;"	l
c01003a3	obj/kernel.asm	/^c01003a3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01003a6	obj/kernel.asm	/^c01003a6:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c01003aa	obj/kernel.asm	/^c01003aa:	eb 2c                	jmp    c01003d8 <readline+0xbb>$/;"	l
c01003ac	obj/kernel.asm	/^c01003ac:	83 7d f0 0a          	cmpl   $0xa,-0x10(%ebp)$/;"	l
c01003b0	obj/kernel.asm	/^c01003b0:	74 06                	je     c01003b8 <readline+0x9b>$/;"	l
c01003b2	obj/kernel.asm	/^c01003b2:	83 7d f0 0d          	cmpl   $0xd,-0x10(%ebp)$/;"	l
c01003b6	obj/kernel.asm	/^c01003b6:	75 20                	jne    c01003d8 <readline+0xbb>$/;"	l
c01003b8	obj/kernel.asm	/^c01003b8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01003bb	obj/kernel.asm	/^c01003bb:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01003be	obj/kernel.asm	/^c01003be:	e8 dd fe ff ff       	call   c01002a0 <cputchar>$/;"	l
c01003c3	obj/kernel.asm	/^c01003c3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01003c6	obj/kernel.asm	/^c01003c6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01003c9	obj/kernel.asm	/^c01003c9:	05 c0 13 1c c0       	add    $0xc01c13c0,%eax$/;"	l
c01003ce	obj/kernel.asm	/^c01003ce:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01003d1	obj/kernel.asm	/^c01003d1:	b8 c0 13 1c c0       	mov    $0xc01c13c0,%eax$/;"	l
c01003d6	obj/kernel.asm	/^c01003d6:	eb 05                	jmp    c01003dd <readline+0xc0>$/;"	l
c01003d8	obj/kernel.asm	/^c01003d8:	e9 66 ff ff ff       	jmp    c0100343 <readline+0x26>$/;"	l
c01003dd	obj/kernel.asm	/^c01003dd:	c9                   	leave  $/;"	l
c01003de	obj/kernel.asm	/^c01003de:	c3                   	ret    $/;"	l
c01003df	obj/kernel.asm	/^c01003df <__panic>:$/;"	l
c01003df	obj/kernel.asm	/^c01003df:	55                   	push   %ebp$/;"	l
c01003e0	obj/kernel.asm	/^c01003e0:	89 e5                	mov    %esp,%ebp$/;"	l
c01003e2	obj/kernel.asm	/^c01003e2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01003e5	obj/kernel.asm	/^c01003e5:	a1 c0 17 1c c0       	mov    0xc01c17c0,%eax$/;"	l
c01003ea	obj/kernel.asm	/^c01003ea:	85 c0                	test   %eax,%eax$/;"	l
c01003ec	obj/kernel.asm	/^c01003ec:	74 02                	je     c01003f0 <__panic+0x11>$/;"	l
c01003ee	obj/kernel.asm	/^c01003ee:	eb 48                	jmp    c0100438 <__panic+0x59>$/;"	l
c01003f0	obj/kernel.asm	/^c01003f0:	c7 05 c0 17 1c c0 01 	movl   $0x1,0xc01c17c0$/;"	l
c01003f7	obj/kernel.asm	/^c01003f7:	00 00 00 $/;"	l
c01003fa	obj/kernel.asm	/^c01003fa:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c01003fd	obj/kernel.asm	/^c01003fd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100400	obj/kernel.asm	/^c0100400:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100403	obj/kernel.asm	/^c0100403:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0100406	obj/kernel.asm	/^c0100406:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100409	obj/kernel.asm	/^c0100409:	68 6a cc 10 c0       	push   $0xc010cc6a$/;"	l
c010040e	obj/kernel.asm	/^c010040e:	e8 67 fe ff ff       	call   c010027a <cprintf>$/;"	l
c0100413	obj/kernel.asm	/^c0100413:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100416	obj/kernel.asm	/^c0100416:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100419	obj/kernel.asm	/^c0100419:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010041c	obj/kernel.asm	/^c010041c:	50                   	push   %eax$/;"	l
c010041d	obj/kernel.asm	/^c010041d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0100420	obj/kernel.asm	/^c0100420:	e8 2c fe ff ff       	call   c0100251 <vcprintf>$/;"	l
c0100425	obj/kernel.asm	/^c0100425:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100428	obj/kernel.asm	/^c0100428:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010042b	obj/kernel.asm	/^c010042b:	68 86 cc 10 c0       	push   $0xc010cc86$/;"	l
c0100430	obj/kernel.asm	/^c0100430:	e8 45 fe ff ff       	call   c010027a <cprintf>$/;"	l
c0100435	obj/kernel.asm	/^c0100435:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100438	obj/kernel.asm	/^c0100438:	e8 65 1c 00 00       	call   c01020a2 <intr_disable>$/;"	l
c010043d	obj/kernel.asm	/^c010043d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100440	obj/kernel.asm	/^c0100440:	6a 00                	push   $0x0$/;"	l
c0100442	obj/kernel.asm	/^c0100442:	e8 47 08 00 00       	call   c0100c8e <kmonitor>$/;"	l
c0100447	obj/kernel.asm	/^c0100447:	83 c4 10             	add    $0x10,%esp$/;"	l
c010044a	obj/kernel.asm	/^c010044a:	eb f1                	jmp    c010043d <__panic+0x5e>$/;"	l
c010044c	obj/kernel.asm	/^c010044c <__warn>:$/;"	l
c010044c	obj/kernel.asm	/^c010044c:	55                   	push   %ebp$/;"	l
c010044d	obj/kernel.asm	/^c010044d:	89 e5                	mov    %esp,%ebp$/;"	l
c010044f	obj/kernel.asm	/^c010044f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100452	obj/kernel.asm	/^c0100452:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0100455	obj/kernel.asm	/^c0100455:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100458	obj/kernel.asm	/^c0100458:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010045b	obj/kernel.asm	/^c010045b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010045e	obj/kernel.asm	/^c010045e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100461	obj/kernel.asm	/^c0100461:	68 88 cc 10 c0       	push   $0xc010cc88$/;"	l
c0100466	obj/kernel.asm	/^c0100466:	e8 0f fe ff ff       	call   c010027a <cprintf>$/;"	l
c010046b	obj/kernel.asm	/^c010046b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010046e	obj/kernel.asm	/^c010046e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100471	obj/kernel.asm	/^c0100471:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100474	obj/kernel.asm	/^c0100474:	50                   	push   %eax$/;"	l
c0100475	obj/kernel.asm	/^c0100475:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0100478	obj/kernel.asm	/^c0100478:	e8 d4 fd ff ff       	call   c0100251 <vcprintf>$/;"	l
c010047d	obj/kernel.asm	/^c010047d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100480	obj/kernel.asm	/^c0100480:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100483	obj/kernel.asm	/^c0100483:	68 86 cc 10 c0       	push   $0xc010cc86$/;"	l
c0100488	obj/kernel.asm	/^c0100488:	e8 ed fd ff ff       	call   c010027a <cprintf>$/;"	l
c010048d	obj/kernel.asm	/^c010048d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100490	obj/kernel.asm	/^c0100490:	c9                   	leave  $/;"	l
c0100491	obj/kernel.asm	/^c0100491:	c3                   	ret    $/;"	l
c0100492	obj/kernel.asm	/^c0100492 <is_kernel_panic>:$/;"	l
c0100492	obj/kernel.asm	/^c0100492:	55                   	push   %ebp$/;"	l
c0100493	obj/kernel.asm	/^c0100493:	89 e5                	mov    %esp,%ebp$/;"	l
c0100495	obj/kernel.asm	/^c0100495:	a1 c0 17 1c c0       	mov    0xc01c17c0,%eax$/;"	l
c010049a	obj/kernel.asm	/^c010049a:	5d                   	pop    %ebp$/;"	l
c010049b	obj/kernel.asm	/^c010049b:	c3                   	ret    $/;"	l
c010049c	obj/kernel.asm	/^c010049c <stab_binsearch>:$/;"	l
c010049c	obj/kernel.asm	/^c010049c:	55                   	push   %ebp$/;"	l
c010049d	obj/kernel.asm	/^c010049d:	89 e5                	mov    %esp,%ebp$/;"	l
c010049f	obj/kernel.asm	/^c010049f:	83 ec 20             	sub    $0x20,%esp$/;"	l
c01004a2	obj/kernel.asm	/^c01004a2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01004a5	obj/kernel.asm	/^c01004a5:	8b 00                	mov    (%eax),%eax$/;"	l
c01004a7	obj/kernel.asm	/^c01004a7:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01004aa	obj/kernel.asm	/^c01004aa:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01004ad	obj/kernel.asm	/^c01004ad:	8b 00                	mov    (%eax),%eax$/;"	l
c01004af	obj/kernel.asm	/^c01004af:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01004b2	obj/kernel.asm	/^c01004b2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01004b9	obj/kernel.asm	/^c01004b9:	e9 d2 00 00 00       	jmp    c0100590 <stab_binsearch+0xf4>$/;"	l
c01004be	obj/kernel.asm	/^c01004be:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01004c1	obj/kernel.asm	/^c01004c1:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01004c4	obj/kernel.asm	/^c01004c4:	01 d0                	add    %edx,%eax$/;"	l
c01004c6	obj/kernel.asm	/^c01004c6:	89 c2                	mov    %eax,%edx$/;"	l
c01004c8	obj/kernel.asm	/^c01004c8:	c1 ea 1f             	shr    $0x1f,%edx$/;"	l
c01004cb	obj/kernel.asm	/^c01004cb:	01 d0                	add    %edx,%eax$/;"	l
c01004cd	obj/kernel.asm	/^c01004cd:	d1 f8                	sar    %eax$/;"	d
c01004cf	obj/kernel.asm	/^c01004cf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01004d2	obj/kernel.asm	/^c01004d2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01004d5	obj/kernel.asm	/^c01004d5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01004d8	obj/kernel.asm	/^c01004d8:	eb 04                	jmp    c01004de <stab_binsearch+0x42>$/;"	l
c01004da	obj/kernel.asm	/^c01004da:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
c01004de	obj/kernel.asm	/^c01004de:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01004e1	obj/kernel.asm	/^c01004e1:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01004e4	obj/kernel.asm	/^c01004e4:	7c 1f                	jl     c0100505 <stab_binsearch+0x69>$/;"	l
c01004e6	obj/kernel.asm	/^c01004e6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01004e9	obj/kernel.asm	/^c01004e9:	89 d0                	mov    %edx,%eax$/;"	l
c01004eb	obj/kernel.asm	/^c01004eb:	01 c0                	add    %eax,%eax$/;"	l
c01004ed	obj/kernel.asm	/^c01004ed:	01 d0                	add    %edx,%eax$/;"	l
c01004ef	obj/kernel.asm	/^c01004ef:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01004f2	obj/kernel.asm	/^c01004f2:	89 c2                	mov    %eax,%edx$/;"	l
c01004f4	obj/kernel.asm	/^c01004f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01004f7	obj/kernel.asm	/^c01004f7:	01 d0                	add    %edx,%eax$/;"	l
c01004f9	obj/kernel.asm	/^c01004f9:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01004fd	obj/kernel.asm	/^c01004fd:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100500	obj/kernel.asm	/^c0100500:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0100503	obj/kernel.asm	/^c0100503:	75 d5                	jne    c01004da <stab_binsearch+0x3e>$/;"	l
c0100505	obj/kernel.asm	/^c0100505:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100508	obj/kernel.asm	/^c0100508:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c010050b	obj/kernel.asm	/^c010050b:	7d 0b                	jge    c0100518 <stab_binsearch+0x7c>$/;"	l
c010050d	obj/kernel.asm	/^c010050d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100510	obj/kernel.asm	/^c0100510:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100513	obj/kernel.asm	/^c0100513:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100516	obj/kernel.asm	/^c0100516:	eb 78                	jmp    c0100590 <stab_binsearch+0xf4>$/;"	l
c0100518	obj/kernel.asm	/^c0100518:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010051f	obj/kernel.asm	/^c010051f:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100522	obj/kernel.asm	/^c0100522:	89 d0                	mov    %edx,%eax$/;"	l
c0100524	obj/kernel.asm	/^c0100524:	01 c0                	add    %eax,%eax$/;"	l
c0100526	obj/kernel.asm	/^c0100526:	01 d0                	add    %edx,%eax$/;"	l
c0100528	obj/kernel.asm	/^c0100528:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010052b	obj/kernel.asm	/^c010052b:	89 c2                	mov    %eax,%edx$/;"	l
c010052d	obj/kernel.asm	/^c010052d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100530	obj/kernel.asm	/^c0100530:	01 d0                	add    %edx,%eax$/;"	l
c0100532	obj/kernel.asm	/^c0100532:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100535	obj/kernel.asm	/^c0100535:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c0100538	obj/kernel.asm	/^c0100538:	73 13                	jae    c010054d <stab_binsearch+0xb1>$/;"	l
c010053a	obj/kernel.asm	/^c010053a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010053d	obj/kernel.asm	/^c010053d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100540	obj/kernel.asm	/^c0100540:	89 10                	mov    %edx,(%eax)$/;"	l
c0100542	obj/kernel.asm	/^c0100542:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100545	obj/kernel.asm	/^c0100545:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100548	obj/kernel.asm	/^c0100548:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010054b	obj/kernel.asm	/^c010054b:	eb 43                	jmp    c0100590 <stab_binsearch+0xf4>$/;"	l
c010054d	obj/kernel.asm	/^c010054d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100550	obj/kernel.asm	/^c0100550:	89 d0                	mov    %edx,%eax$/;"	l
c0100552	obj/kernel.asm	/^c0100552:	01 c0                	add    %eax,%eax$/;"	l
c0100554	obj/kernel.asm	/^c0100554:	01 d0                	add    %edx,%eax$/;"	l
c0100556	obj/kernel.asm	/^c0100556:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100559	obj/kernel.asm	/^c0100559:	89 c2                	mov    %eax,%edx$/;"	l
c010055b	obj/kernel.asm	/^c010055b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010055e	obj/kernel.asm	/^c010055e:	01 d0                	add    %edx,%eax$/;"	l
c0100560	obj/kernel.asm	/^c0100560:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100563	obj/kernel.asm	/^c0100563:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c0100566	obj/kernel.asm	/^c0100566:	76 16                	jbe    c010057e <stab_binsearch+0xe2>$/;"	l
c0100568	obj/kernel.asm	/^c0100568:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010056b	obj/kernel.asm	/^c010056b:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010056e	obj/kernel.asm	/^c010056e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100571	obj/kernel.asm	/^c0100571:	89 10                	mov    %edx,(%eax)$/;"	l
c0100573	obj/kernel.asm	/^c0100573:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100576	obj/kernel.asm	/^c0100576:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100579	obj/kernel.asm	/^c0100579:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010057c	obj/kernel.asm	/^c010057c:	eb 12                	jmp    c0100590 <stab_binsearch+0xf4>$/;"	l
c010057e	obj/kernel.asm	/^c010057e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100581	obj/kernel.asm	/^c0100581:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100584	obj/kernel.asm	/^c0100584:	89 10                	mov    %edx,(%eax)$/;"	l
c0100586	obj/kernel.asm	/^c0100586:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100589	obj/kernel.asm	/^c0100589:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010058c	obj/kernel.asm	/^c010058c:	83 45 18 01          	addl   $0x1,0x18(%ebp)$/;"	l
c0100590	obj/kernel.asm	/^c0100590:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100593	obj/kernel.asm	/^c0100593:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c0100596	obj/kernel.asm	/^c0100596:	0f 8e 22 ff ff ff    	jle    c01004be <stab_binsearch+0x22>$/;"	l
c010059c	obj/kernel.asm	/^c010059c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01005a0	obj/kernel.asm	/^c01005a0:	75 0f                	jne    c01005b1 <stab_binsearch+0x115>$/;"	l
c01005a2	obj/kernel.asm	/^c01005a2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01005a5	obj/kernel.asm	/^c01005a5:	8b 00                	mov    (%eax),%eax$/;"	l
c01005a7	obj/kernel.asm	/^c01005a7:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01005aa	obj/kernel.asm	/^c01005aa:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01005ad	obj/kernel.asm	/^c01005ad:	89 10                	mov    %edx,(%eax)$/;"	l
c01005af	obj/kernel.asm	/^c01005af:	eb 3f                	jmp    c01005f0 <stab_binsearch+0x154>$/;"	l
c01005b1	obj/kernel.asm	/^c01005b1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01005b4	obj/kernel.asm	/^c01005b4:	8b 00                	mov    (%eax),%eax$/;"	l
c01005b6	obj/kernel.asm	/^c01005b6:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01005b9	obj/kernel.asm	/^c01005b9:	eb 04                	jmp    c01005bf <stab_binsearch+0x123>$/;"	l
c01005bb	obj/kernel.asm	/^c01005bb:	83 6d fc 01          	subl   $0x1,-0x4(%ebp)$/;"	l
c01005bf	obj/kernel.asm	/^c01005bf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01005c2	obj/kernel.asm	/^c01005c2:	8b 00                	mov    (%eax),%eax$/;"	l
c01005c4	obj/kernel.asm	/^c01005c4:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01005c7	obj/kernel.asm	/^c01005c7:	7d 1f                	jge    c01005e8 <stab_binsearch+0x14c>$/;"	l
c01005c9	obj/kernel.asm	/^c01005c9:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01005cc	obj/kernel.asm	/^c01005cc:	89 d0                	mov    %edx,%eax$/;"	l
c01005ce	obj/kernel.asm	/^c01005ce:	01 c0                	add    %eax,%eax$/;"	l
c01005d0	obj/kernel.asm	/^c01005d0:	01 d0                	add    %edx,%eax$/;"	l
c01005d2	obj/kernel.asm	/^c01005d2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01005d5	obj/kernel.asm	/^c01005d5:	89 c2                	mov    %eax,%edx$/;"	l
c01005d7	obj/kernel.asm	/^c01005d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01005da	obj/kernel.asm	/^c01005da:	01 d0                	add    %edx,%eax$/;"	l
c01005dc	obj/kernel.asm	/^c01005dc:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01005e0	obj/kernel.asm	/^c01005e0:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01005e3	obj/kernel.asm	/^c01005e3:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c01005e6	obj/kernel.asm	/^c01005e6:	75 d3                	jne    c01005bb <stab_binsearch+0x11f>$/;"	l
c01005e8	obj/kernel.asm	/^c01005e8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01005eb	obj/kernel.asm	/^c01005eb:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01005ee	obj/kernel.asm	/^c01005ee:	89 10                	mov    %edx,(%eax)$/;"	l
c01005f0	obj/kernel.asm	/^c01005f0:	c9                   	leave  $/;"	l
c01005f1	obj/kernel.asm	/^c01005f1:	c3                   	ret    $/;"	l
c01005f2	obj/kernel.asm	/^c01005f2 <debuginfo_eip>:$/;"	l
c01005f2	obj/kernel.asm	/^c01005f2:	55                   	push   %ebp$/;"	l
c01005f3	obj/kernel.asm	/^c01005f3:	89 e5                	mov    %esp,%ebp$/;"	l
c01005f5	obj/kernel.asm	/^c01005f5:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01005f8	obj/kernel.asm	/^c01005f8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01005fb	obj/kernel.asm	/^c01005fb:	c7 00 a8 cc 10 c0    	movl   $0xc010cca8,(%eax)$/;"	l
c0100601	obj/kernel.asm	/^c0100601:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100604	obj/kernel.asm	/^c0100604:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c010060b	obj/kernel.asm	/^c010060b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010060e	obj/kernel.asm	/^c010060e:	c7 40 08 a8 cc 10 c0 	movl   $0xc010cca8,0x8(%eax)$/;"	l
c0100615	obj/kernel.asm	/^c0100615:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100618	obj/kernel.asm	/^c0100618:	c7 40 0c 09 00 00 00 	movl   $0x9,0xc(%eax)$/;"	l
c010061f	obj/kernel.asm	/^c010061f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100622	obj/kernel.asm	/^c0100622:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100625	obj/kernel.asm	/^c0100625:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0100628	obj/kernel.asm	/^c0100628:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010062b	obj/kernel.asm	/^c010062b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c0100632	obj/kernel.asm	/^c0100632:	81 7d 08 ff ff ff bf 	cmpl   $0xbfffffff,0x8(%ebp)$/;"	l
c0100639	obj/kernel.asm	/^c0100639:	76 21                	jbe    c010065c <debuginfo_eip+0x6a>$/;"	l
c010063b	obj/kernel.asm	/^c010063b:	c7 45 f4 60 f9 10 c0 	movl   $0xc010f960,-0xc(%ebp)$/;"	l
c0100642	obj/kernel.asm	/^c0100642:	c7 45 f0 04 6f 12 c0 	movl   $0xc0126f04,-0x10(%ebp)$/;"	l
c0100649	obj/kernel.asm	/^c0100649:	c7 45 ec 05 6f 12 c0 	movl   $0xc0126f05,-0x14(%ebp)$/;"	l
c0100650	obj/kernel.asm	/^c0100650:	c7 45 e8 4c de 12 c0 	movl   $0xc012de4c,-0x18(%ebp)$/;"	l
c0100657	obj/kernel.asm	/^c0100657:	e9 c3 00 00 00       	jmp    c010071f <debuginfo_eip+0x12d>$/;"	l
c010065c	obj/kernel.asm	/^c010065c:	c7 45 e4 00 00 20 00 	movl   $0x200000,-0x1c(%ebp)$/;"	l
c0100663	obj/kernel.asm	/^c0100663:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c0100668	obj/kernel.asm	/^c0100668:	85 c0                	test   %eax,%eax$/;"	l
c010066a	obj/kernel.asm	/^c010066a:	74 11                	je     c010067d <debuginfo_eip+0x8b>$/;"	l
c010066c	obj/kernel.asm	/^c010066c:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c0100671	obj/kernel.asm	/^c0100671:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0100674	obj/kernel.asm	/^c0100674:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100677	obj/kernel.asm	/^c0100677:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c010067b	obj/kernel.asm	/^c010067b:	75 0a                	jne    c0100687 <debuginfo_eip+0x95>$/;"	l
c010067d	obj/kernel.asm	/^c010067d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100682	obj/kernel.asm	/^c0100682:	e9 4e 03 00 00       	jmp    c01009d5 <debuginfo_eip+0x3e3>$/;"	l
c0100687	obj/kernel.asm	/^c0100687:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010068a	obj/kernel.asm	/^c010068a:	6a 00                	push   $0x0$/;"	l
c010068c	obj/kernel.asm	/^c010068c:	6a 10                	push   $0x10$/;"	l
c010068e	obj/kernel.asm	/^c010068e:	50                   	push   %eax$/;"	l
c010068f	obj/kernel.asm	/^c010068f:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0100692	obj/kernel.asm	/^c0100692:	e8 77 5b 00 00       	call   c010620e <user_mem_check>$/;"	l
c0100697	obj/kernel.asm	/^c0100697:	83 c4 10             	add    $0x10,%esp$/;"	l
c010069a	obj/kernel.asm	/^c010069a:	85 c0                	test   %eax,%eax$/;"	l
c010069c	obj/kernel.asm	/^c010069c:	75 0a                	jne    c01006a8 <debuginfo_eip+0xb6>$/;"	l
c010069e	obj/kernel.asm	/^c010069e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01006a3	obj/kernel.asm	/^c01006a3:	e9 2d 03 00 00       	jmp    c01009d5 <debuginfo_eip+0x3e3>$/;"	l
c01006a8	obj/kernel.asm	/^c01006a8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01006ab	obj/kernel.asm	/^c01006ab:	8b 00                	mov    (%eax),%eax$/;"	l
c01006ad	obj/kernel.asm	/^c01006ad:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01006b0	obj/kernel.asm	/^c01006b0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01006b3	obj/kernel.asm	/^c01006b3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01006b6	obj/kernel.asm	/^c01006b6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01006b9	obj/kernel.asm	/^c01006b9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01006bc	obj/kernel.asm	/^c01006bc:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01006bf	obj/kernel.asm	/^c01006bf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01006c2	obj/kernel.asm	/^c01006c2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01006c5	obj/kernel.asm	/^c01006c5:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01006c8	obj/kernel.asm	/^c01006c8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01006cb	obj/kernel.asm	/^c01006cb:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01006ce	obj/kernel.asm	/^c01006ce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01006d1	obj/kernel.asm	/^c01006d1:	29 c2                	sub    %eax,%edx$/;"	l
c01006d3	obj/kernel.asm	/^c01006d3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01006d6	obj/kernel.asm	/^c01006d6:	6a 00                	push   $0x0$/;"	l
c01006d8	obj/kernel.asm	/^c01006d8:	52                   	push   %edx$/;"	l
c01006d9	obj/kernel.asm	/^c01006d9:	50                   	push   %eax$/;"	l
c01006da	obj/kernel.asm	/^c01006da:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01006dd	obj/kernel.asm	/^c01006dd:	e8 2c 5b 00 00       	call   c010620e <user_mem_check>$/;"	l
c01006e2	obj/kernel.asm	/^c01006e2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01006e5	obj/kernel.asm	/^c01006e5:	85 c0                	test   %eax,%eax$/;"	l
c01006e7	obj/kernel.asm	/^c01006e7:	75 0a                	jne    c01006f3 <debuginfo_eip+0x101>$/;"	l
c01006e9	obj/kernel.asm	/^c01006e9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01006ee	obj/kernel.asm	/^c01006ee:	e9 e2 02 00 00       	jmp    c01009d5 <debuginfo_eip+0x3e3>$/;"	l
c01006f3	obj/kernel.asm	/^c01006f3:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01006f6	obj/kernel.asm	/^c01006f6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01006f9	obj/kernel.asm	/^c01006f9:	29 c2                	sub    %eax,%edx$/;"	l
c01006fb	obj/kernel.asm	/^c01006fb:	89 d0                	mov    %edx,%eax$/;"	l
c01006fd	obj/kernel.asm	/^c01006fd:	89 c2                	mov    %eax,%edx$/;"	l
c01006ff	obj/kernel.asm	/^c01006ff:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100702	obj/kernel.asm	/^c0100702:	6a 00                	push   $0x0$/;"	l
c0100704	obj/kernel.asm	/^c0100704:	52                   	push   %edx$/;"	l
c0100705	obj/kernel.asm	/^c0100705:	50                   	push   %eax$/;"	l
c0100706	obj/kernel.asm	/^c0100706:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0100709	obj/kernel.asm	/^c0100709:	e8 00 5b 00 00       	call   c010620e <user_mem_check>$/;"	l
c010070e	obj/kernel.asm	/^c010070e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100711	obj/kernel.asm	/^c0100711:	85 c0                	test   %eax,%eax$/;"	l
c0100713	obj/kernel.asm	/^c0100713:	75 0a                	jne    c010071f <debuginfo_eip+0x12d>$/;"	l
c0100715	obj/kernel.asm	/^c0100715:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010071a	obj/kernel.asm	/^c010071a:	e9 b6 02 00 00       	jmp    c01009d5 <debuginfo_eip+0x3e3>$/;"	l
c010071f	obj/kernel.asm	/^c010071f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100722	obj/kernel.asm	/^c0100722:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0100725	obj/kernel.asm	/^c0100725:	76 0d                	jbe    c0100734 <debuginfo_eip+0x142>$/;"	l
c0100727	obj/kernel.asm	/^c0100727:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010072a	obj/kernel.asm	/^c010072a:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010072d	obj/kernel.asm	/^c010072d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100730	obj/kernel.asm	/^c0100730:	84 c0                	test   %al,%al$/;"	l
c0100732	obj/kernel.asm	/^c0100732:	74 0a                	je     c010073e <debuginfo_eip+0x14c>$/;"	l
c0100734	obj/kernel.asm	/^c0100734:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100739	obj/kernel.asm	/^c0100739:	e9 97 02 00 00       	jmp    c01009d5 <debuginfo_eip+0x3e3>$/;"	l
c010073e	obj/kernel.asm	/^c010073e:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0100745	obj/kernel.asm	/^c0100745:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100748	obj/kernel.asm	/^c0100748:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010074b	obj/kernel.asm	/^c010074b:	29 c2                	sub    %eax,%edx$/;"	l
c010074d	obj/kernel.asm	/^c010074d:	89 d0                	mov    %edx,%eax$/;"	l
c010074f	obj/kernel.asm	/^c010074f:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c0100752	obj/kernel.asm	/^c0100752:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
c0100758	obj/kernel.asm	/^c0100758:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010075b	obj/kernel.asm	/^c010075b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010075e	obj/kernel.asm	/^c010075e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100761	obj/kernel.asm	/^c0100761:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100764	obj/kernel.asm	/^c0100764:	6a 64                	push   $0x64$/;"	l
c0100766	obj/kernel.asm	/^c0100766:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c0100769	obj/kernel.asm	/^c0100769:	50                   	push   %eax$/;"	l
c010076a	obj/kernel.asm	/^c010076a:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010076d	obj/kernel.asm	/^c010076d:	50                   	push   %eax$/;"	l
c010076e	obj/kernel.asm	/^c010076e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100771	obj/kernel.asm	/^c0100771:	e8 26 fd ff ff       	call   c010049c <stab_binsearch>$/;"	l
c0100776	obj/kernel.asm	/^c0100776:	83 c4 20             	add    $0x20,%esp$/;"	l
c0100779	obj/kernel.asm	/^c0100779:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010077c	obj/kernel.asm	/^c010077c:	85 c0                	test   %eax,%eax$/;"	l
c010077e	obj/kernel.asm	/^c010077e:	75 0a                	jne    c010078a <debuginfo_eip+0x198>$/;"	l
c0100780	obj/kernel.asm	/^c0100780:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100785	obj/kernel.asm	/^c0100785:	e9 4b 02 00 00       	jmp    c01009d5 <debuginfo_eip+0x3e3>$/;"	l
c010078a	obj/kernel.asm	/^c010078a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010078d	obj/kernel.asm	/^c010078d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0100790	obj/kernel.asm	/^c0100790:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0100793	obj/kernel.asm	/^c0100793:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0100796	obj/kernel.asm	/^c0100796:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100799	obj/kernel.asm	/^c0100799:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010079c	obj/kernel.asm	/^c010079c:	6a 24                	push   $0x24$/;"	l
c010079e	obj/kernel.asm	/^c010079e:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
c01007a1	obj/kernel.asm	/^c01007a1:	50                   	push   %eax$/;"	l
c01007a2	obj/kernel.asm	/^c01007a2:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c01007a5	obj/kernel.asm	/^c01007a5:	50                   	push   %eax$/;"	l
c01007a6	obj/kernel.asm	/^c01007a6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01007a9	obj/kernel.asm	/^c01007a9:	e8 ee fc ff ff       	call   c010049c <stab_binsearch>$/;"	l
c01007ae	obj/kernel.asm	/^c01007ae:	83 c4 20             	add    $0x20,%esp$/;"	l
c01007b1	obj/kernel.asm	/^c01007b1:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01007b4	obj/kernel.asm	/^c01007b4:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01007b7	obj/kernel.asm	/^c01007b7:	39 c2                	cmp    %eax,%edx$/;"	l
c01007b9	obj/kernel.asm	/^c01007b9:	7f 7c                	jg     c0100837 <debuginfo_eip+0x245>$/;"	l
c01007bb	obj/kernel.asm	/^c01007bb:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01007be	obj/kernel.asm	/^c01007be:	89 c2                	mov    %eax,%edx$/;"	l
c01007c0	obj/kernel.asm	/^c01007c0:	89 d0                	mov    %edx,%eax$/;"	l
c01007c2	obj/kernel.asm	/^c01007c2:	01 c0                	add    %eax,%eax$/;"	l
c01007c4	obj/kernel.asm	/^c01007c4:	01 d0                	add    %edx,%eax$/;"	l
c01007c6	obj/kernel.asm	/^c01007c6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01007c9	obj/kernel.asm	/^c01007c9:	89 c2                	mov    %eax,%edx$/;"	l
c01007cb	obj/kernel.asm	/^c01007cb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007ce	obj/kernel.asm	/^c01007ce:	01 d0                	add    %edx,%eax$/;"	l
c01007d0	obj/kernel.asm	/^c01007d0:	8b 00                	mov    (%eax),%eax$/;"	l
c01007d2	obj/kernel.asm	/^c01007d2:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c01007d5	obj/kernel.asm	/^c01007d5:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01007d8	obj/kernel.asm	/^c01007d8:	29 d1                	sub    %edx,%ecx$/;"	l
c01007da	obj/kernel.asm	/^c01007da:	89 ca                	mov    %ecx,%edx$/;"	l
c01007dc	obj/kernel.asm	/^c01007dc:	39 d0                	cmp    %edx,%eax$/;"	l
c01007de	obj/kernel.asm	/^c01007de:	73 22                	jae    c0100802 <debuginfo_eip+0x210>$/;"	l
c01007e0	obj/kernel.asm	/^c01007e0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01007e3	obj/kernel.asm	/^c01007e3:	89 c2                	mov    %eax,%edx$/;"	l
c01007e5	obj/kernel.asm	/^c01007e5:	89 d0                	mov    %edx,%eax$/;"	l
c01007e7	obj/kernel.asm	/^c01007e7:	01 c0                	add    %eax,%eax$/;"	l
c01007e9	obj/kernel.asm	/^c01007e9:	01 d0                	add    %edx,%eax$/;"	l
c01007eb	obj/kernel.asm	/^c01007eb:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01007ee	obj/kernel.asm	/^c01007ee:	89 c2                	mov    %eax,%edx$/;"	l
c01007f0	obj/kernel.asm	/^c01007f0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007f3	obj/kernel.asm	/^c01007f3:	01 d0                	add    %edx,%eax$/;"	l
c01007f5	obj/kernel.asm	/^c01007f5:	8b 10                	mov    (%eax),%edx$/;"	l
c01007f7	obj/kernel.asm	/^c01007f7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01007fa	obj/kernel.asm	/^c01007fa:	01 c2                	add    %eax,%edx$/;"	l
c01007fc	obj/kernel.asm	/^c01007fc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01007ff	obj/kernel.asm	/^c01007ff:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0100802	obj/kernel.asm	/^c0100802:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100805	obj/kernel.asm	/^c0100805:	89 c2                	mov    %eax,%edx$/;"	l
c0100807	obj/kernel.asm	/^c0100807:	89 d0                	mov    %edx,%eax$/;"	l
c0100809	obj/kernel.asm	/^c0100809:	01 c0                	add    %eax,%eax$/;"	l
c010080b	obj/kernel.asm	/^c010080b:	01 d0                	add    %edx,%eax$/;"	l
c010080d	obj/kernel.asm	/^c010080d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100810	obj/kernel.asm	/^c0100810:	89 c2                	mov    %eax,%edx$/;"	l
c0100812	obj/kernel.asm	/^c0100812:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100815	obj/kernel.asm	/^c0100815:	01 d0                	add    %edx,%eax$/;"	l
c0100817	obj/kernel.asm	/^c0100817:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010081a	obj/kernel.asm	/^c010081a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010081d	obj/kernel.asm	/^c010081d:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0100820	obj/kernel.asm	/^c0100820:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100823	obj/kernel.asm	/^c0100823:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0100826	obj/kernel.asm	/^c0100826:	29 45 08             	sub    %eax,0x8(%ebp)$/;"	l
c0100829	obj/kernel.asm	/^c0100829:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010082c	obj/kernel.asm	/^c010082c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010082f	obj/kernel.asm	/^c010082f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100832	obj/kernel.asm	/^c0100832:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0100835	obj/kernel.asm	/^c0100835:	eb 15                	jmp    c010084c <debuginfo_eip+0x25a>$/;"	l
c0100837	obj/kernel.asm	/^c0100837:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010083a	obj/kernel.asm	/^c010083a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010083d	obj/kernel.asm	/^c010083d:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0100840	obj/kernel.asm	/^c0100840:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100843	obj/kernel.asm	/^c0100843:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100846	obj/kernel.asm	/^c0100846:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0100849	obj/kernel.asm	/^c0100849:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010084c	obj/kernel.asm	/^c010084c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010084f	obj/kernel.asm	/^c010084f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100852	obj/kernel.asm	/^c0100852:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100855	obj/kernel.asm	/^c0100855:	6a 3a                	push   $0x3a$/;"	l
c0100857	obj/kernel.asm	/^c0100857:	50                   	push   %eax$/;"	l
c0100858	obj/kernel.asm	/^c0100858:	e8 0f b9 00 00       	call   c010c16c <strfind>$/;"	l
c010085d	obj/kernel.asm	/^c010085d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100860	obj/kernel.asm	/^c0100860:	89 c2                	mov    %eax,%edx$/;"	l
c0100862	obj/kernel.asm	/^c0100862:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100865	obj/kernel.asm	/^c0100865:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100868	obj/kernel.asm	/^c0100868:	29 c2                	sub    %eax,%edx$/;"	l
c010086a	obj/kernel.asm	/^c010086a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010086d	obj/kernel.asm	/^c010086d:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0100870	obj/kernel.asm	/^c0100870:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100873	obj/kernel.asm	/^c0100873:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100876	obj/kernel.asm	/^c0100876:	6a 44                	push   $0x44$/;"	l
c0100878	obj/kernel.asm	/^c0100878:	8d 45 c8             	lea    -0x38(%ebp),%eax$/;"	l
c010087b	obj/kernel.asm	/^c010087b:	50                   	push   %eax$/;"	l
c010087c	obj/kernel.asm	/^c010087c:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c010087f	obj/kernel.asm	/^c010087f:	50                   	push   %eax$/;"	l
c0100880	obj/kernel.asm	/^c0100880:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100883	obj/kernel.asm	/^c0100883:	e8 14 fc ff ff       	call   c010049c <stab_binsearch>$/;"	l
c0100888	obj/kernel.asm	/^c0100888:	83 c4 20             	add    $0x20,%esp$/;"	l
c010088b	obj/kernel.asm	/^c010088b:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010088e	obj/kernel.asm	/^c010088e:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0100891	obj/kernel.asm	/^c0100891:	39 c2                	cmp    %eax,%edx$/;"	l
c0100893	obj/kernel.asm	/^c0100893:	7f 24                	jg     c01008b9 <debuginfo_eip+0x2c7>$/;"	l
c0100895	obj/kernel.asm	/^c0100895:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0100898	obj/kernel.asm	/^c0100898:	89 c2                	mov    %eax,%edx$/;"	l
c010089a	obj/kernel.asm	/^c010089a:	89 d0                	mov    %edx,%eax$/;"	l
c010089c	obj/kernel.asm	/^c010089c:	01 c0                	add    %eax,%eax$/;"	l
c010089e	obj/kernel.asm	/^c010089e:	01 d0                	add    %edx,%eax$/;"	l
c01008a0	obj/kernel.asm	/^c01008a0:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01008a3	obj/kernel.asm	/^c01008a3:	89 c2                	mov    %eax,%edx$/;"	l
c01008a5	obj/kernel.asm	/^c01008a5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01008a8	obj/kernel.asm	/^c01008a8:	01 d0                	add    %edx,%eax$/;"	l
c01008aa	obj/kernel.asm	/^c01008aa:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c01008ae	obj/kernel.asm	/^c01008ae:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01008b1	obj/kernel.asm	/^c01008b1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01008b4	obj/kernel.asm	/^c01008b4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01008b7	obj/kernel.asm	/^c01008b7:	eb 13                	jmp    c01008cc <debuginfo_eip+0x2da>$/;"	l
c01008b9	obj/kernel.asm	/^c01008b9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01008be	obj/kernel.asm	/^c01008be:	e9 12 01 00 00       	jmp    c01009d5 <debuginfo_eip+0x3e3>$/;"	l
c01008c3	obj/kernel.asm	/^c01008c3:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01008c6	obj/kernel.asm	/^c01008c6:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01008c9	obj/kernel.asm	/^c01008c9:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01008cc	obj/kernel.asm	/^c01008cc:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01008cf	obj/kernel.asm	/^c01008cf:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01008d2	obj/kernel.asm	/^c01008d2:	39 c2                	cmp    %eax,%edx$/;"	l
c01008d4	obj/kernel.asm	/^c01008d4:	7c 56                	jl     c010092c <debuginfo_eip+0x33a>$/;"	l
c01008d6	obj/kernel.asm	/^c01008d6:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01008d9	obj/kernel.asm	/^c01008d9:	89 c2                	mov    %eax,%edx$/;"	l
c01008db	obj/kernel.asm	/^c01008db:	89 d0                	mov    %edx,%eax$/;"	l
c01008dd	obj/kernel.asm	/^c01008dd:	01 c0                	add    %eax,%eax$/;"	l
c01008df	obj/kernel.asm	/^c01008df:	01 d0                	add    %edx,%eax$/;"	l
c01008e1	obj/kernel.asm	/^c01008e1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01008e4	obj/kernel.asm	/^c01008e4:	89 c2                	mov    %eax,%edx$/;"	l
c01008e6	obj/kernel.asm	/^c01008e6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01008e9	obj/kernel.asm	/^c01008e9:	01 d0                	add    %edx,%eax$/;"	l
c01008eb	obj/kernel.asm	/^c01008eb:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01008ef	obj/kernel.asm	/^c01008ef:	3c 84                	cmp    $0x84,%al$/;"	l
c01008f1	obj/kernel.asm	/^c01008f1:	74 39                	je     c010092c <debuginfo_eip+0x33a>$/;"	l
c01008f3	obj/kernel.asm	/^c01008f3:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01008f6	obj/kernel.asm	/^c01008f6:	89 c2                	mov    %eax,%edx$/;"	l
c01008f8	obj/kernel.asm	/^c01008f8:	89 d0                	mov    %edx,%eax$/;"	l
c01008fa	obj/kernel.asm	/^c01008fa:	01 c0                	add    %eax,%eax$/;"	l
c01008fc	obj/kernel.asm	/^c01008fc:	01 d0                	add    %edx,%eax$/;"	l
c01008fe	obj/kernel.asm	/^c01008fe:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100901	obj/kernel.asm	/^c0100901:	89 c2                	mov    %eax,%edx$/;"	l
c0100903	obj/kernel.asm	/^c0100903:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100906	obj/kernel.asm	/^c0100906:	01 d0                	add    %edx,%eax$/;"	l
c0100908	obj/kernel.asm	/^c0100908:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c010090c	obj/kernel.asm	/^c010090c:	3c 64                	cmp    $0x64,%al$/;"	l
c010090e	obj/kernel.asm	/^c010090e:	75 b3                	jne    c01008c3 <debuginfo_eip+0x2d1>$/;"	l
c0100910	obj/kernel.asm	/^c0100910:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100913	obj/kernel.asm	/^c0100913:	89 c2                	mov    %eax,%edx$/;"	l
c0100915	obj/kernel.asm	/^c0100915:	89 d0                	mov    %edx,%eax$/;"	l
c0100917	obj/kernel.asm	/^c0100917:	01 c0                	add    %eax,%eax$/;"	l
c0100919	obj/kernel.asm	/^c0100919:	01 d0                	add    %edx,%eax$/;"	l
c010091b	obj/kernel.asm	/^c010091b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010091e	obj/kernel.asm	/^c010091e:	89 c2                	mov    %eax,%edx$/;"	l
c0100920	obj/kernel.asm	/^c0100920:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100923	obj/kernel.asm	/^c0100923:	01 d0                	add    %edx,%eax$/;"	l
c0100925	obj/kernel.asm	/^c0100925:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100928	obj/kernel.asm	/^c0100928:	85 c0                	test   %eax,%eax$/;"	l
c010092a	obj/kernel.asm	/^c010092a:	74 97                	je     c01008c3 <debuginfo_eip+0x2d1>$/;"	l
c010092c	obj/kernel.asm	/^c010092c:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010092f	obj/kernel.asm	/^c010092f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100932	obj/kernel.asm	/^c0100932:	39 c2                	cmp    %eax,%edx$/;"	l
c0100934	obj/kernel.asm	/^c0100934:	7c 46                	jl     c010097c <debuginfo_eip+0x38a>$/;"	l
c0100936	obj/kernel.asm	/^c0100936:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100939	obj/kernel.asm	/^c0100939:	89 c2                	mov    %eax,%edx$/;"	l
c010093b	obj/kernel.asm	/^c010093b:	89 d0                	mov    %edx,%eax$/;"	l
c010093d	obj/kernel.asm	/^c010093d:	01 c0                	add    %eax,%eax$/;"	l
c010093f	obj/kernel.asm	/^c010093f:	01 d0                	add    %edx,%eax$/;"	l
c0100941	obj/kernel.asm	/^c0100941:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100944	obj/kernel.asm	/^c0100944:	89 c2                	mov    %eax,%edx$/;"	l
c0100946	obj/kernel.asm	/^c0100946:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100949	obj/kernel.asm	/^c0100949:	01 d0                	add    %edx,%eax$/;"	l
c010094b	obj/kernel.asm	/^c010094b:	8b 00                	mov    (%eax),%eax$/;"	l
c010094d	obj/kernel.asm	/^c010094d:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c0100950	obj/kernel.asm	/^c0100950:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0100953	obj/kernel.asm	/^c0100953:	29 d1                	sub    %edx,%ecx$/;"	l
c0100955	obj/kernel.asm	/^c0100955:	89 ca                	mov    %ecx,%edx$/;"	l
c0100957	obj/kernel.asm	/^c0100957:	39 d0                	cmp    %edx,%eax$/;"	l
c0100959	obj/kernel.asm	/^c0100959:	73 21                	jae    c010097c <debuginfo_eip+0x38a>$/;"	l
c010095b	obj/kernel.asm	/^c010095b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010095e	obj/kernel.asm	/^c010095e:	89 c2                	mov    %eax,%edx$/;"	l
c0100960	obj/kernel.asm	/^c0100960:	89 d0                	mov    %edx,%eax$/;"	l
c0100962	obj/kernel.asm	/^c0100962:	01 c0                	add    %eax,%eax$/;"	l
c0100964	obj/kernel.asm	/^c0100964:	01 d0                	add    %edx,%eax$/;"	l
c0100966	obj/kernel.asm	/^c0100966:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100969	obj/kernel.asm	/^c0100969:	89 c2                	mov    %eax,%edx$/;"	l
c010096b	obj/kernel.asm	/^c010096b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010096e	obj/kernel.asm	/^c010096e:	01 d0                	add    %edx,%eax$/;"	l
c0100970	obj/kernel.asm	/^c0100970:	8b 10                	mov    (%eax),%edx$/;"	l
c0100972	obj/kernel.asm	/^c0100972:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100975	obj/kernel.asm	/^c0100975:	01 c2                	add    %eax,%edx$/;"	l
c0100977	obj/kernel.asm	/^c0100977:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010097a	obj/kernel.asm	/^c010097a:	89 10                	mov    %edx,(%eax)$/;"	l
c010097c	obj/kernel.asm	/^c010097c:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010097f	obj/kernel.asm	/^c010097f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100982	obj/kernel.asm	/^c0100982:	39 c2                	cmp    %eax,%edx$/;"	l
c0100984	obj/kernel.asm	/^c0100984:	7d 4a                	jge    c01009d0 <debuginfo_eip+0x3de>$/;"	l
c0100986	obj/kernel.asm	/^c0100986:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100989	obj/kernel.asm	/^c0100989:	83 c0 01             	add    $0x1,%eax$/;"	l
c010098c	obj/kernel.asm	/^c010098c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010098f	obj/kernel.asm	/^c010098f:	eb 18                	jmp    c01009a9 <debuginfo_eip+0x3b7>$/;"	l
c0100991	obj/kernel.asm	/^c0100991:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100994	obj/kernel.asm	/^c0100994:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0100997	obj/kernel.asm	/^c0100997:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010099a	obj/kernel.asm	/^c010099a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010099d	obj/kernel.asm	/^c010099d:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c01009a0	obj/kernel.asm	/^c01009a0:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01009a3	obj/kernel.asm	/^c01009a3:	83 c0 01             	add    $0x1,%eax$/;"	l
c01009a6	obj/kernel.asm	/^c01009a6:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01009a9	obj/kernel.asm	/^c01009a9:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01009ac	obj/kernel.asm	/^c01009ac:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01009af	obj/kernel.asm	/^c01009af:	39 c2                	cmp    %eax,%edx$/;"	l
c01009b1	obj/kernel.asm	/^c01009b1:	7d 1d                	jge    c01009d0 <debuginfo_eip+0x3de>$/;"	l
c01009b3	obj/kernel.asm	/^c01009b3:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01009b6	obj/kernel.asm	/^c01009b6:	89 c2                	mov    %eax,%edx$/;"	l
c01009b8	obj/kernel.asm	/^c01009b8:	89 d0                	mov    %edx,%eax$/;"	l
c01009ba	obj/kernel.asm	/^c01009ba:	01 c0                	add    %eax,%eax$/;"	l
c01009bc	obj/kernel.asm	/^c01009bc:	01 d0                	add    %edx,%eax$/;"	l
c01009be	obj/kernel.asm	/^c01009be:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01009c1	obj/kernel.asm	/^c01009c1:	89 c2                	mov    %eax,%edx$/;"	l
c01009c3	obj/kernel.asm	/^c01009c3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01009c6	obj/kernel.asm	/^c01009c6:	01 d0                	add    %edx,%eax$/;"	l
c01009c8	obj/kernel.asm	/^c01009c8:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01009cc	obj/kernel.asm	/^c01009cc:	3c a0                	cmp    $0xa0,%al$/;"	l
c01009ce	obj/kernel.asm	/^c01009ce:	74 c1                	je     c0100991 <debuginfo_eip+0x39f>$/;"	l
c01009d0	obj/kernel.asm	/^c01009d0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01009d5	obj/kernel.asm	/^c01009d5:	c9                   	leave  $/;"	l
c01009d6	obj/kernel.asm	/^c01009d6:	c3                   	ret    $/;"	l
c01009d7	obj/kernel.asm	/^c01009d7 <print_kerninfo>:$/;"	l
c01009d7	obj/kernel.asm	/^c01009d7:	55                   	push   %ebp$/;"	l
c01009d8	obj/kernel.asm	/^c01009d8:	89 e5                	mov    %esp,%ebp$/;"	l
c01009da	obj/kernel.asm	/^c01009da:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01009dd	obj/kernel.asm	/^c01009dd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01009e0	obj/kernel.asm	/^c01009e0:	68 b2 cc 10 c0       	push   $0xc010ccb2$/;"	l
c01009e5	obj/kernel.asm	/^c01009e5:	e8 90 f8 ff ff       	call   c010027a <cprintf>$/;"	l
c01009ea	obj/kernel.asm	/^c01009ea:	83 c4 10             	add    $0x10,%esp$/;"	l
c01009ed	obj/kernel.asm	/^c01009ed:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01009f0	obj/kernel.asm	/^c01009f0:	68 2a 00 10 c0       	push   $0xc010002a$/;"	l
c01009f5	obj/kernel.asm	/^c01009f5:	68 cb cc 10 c0       	push   $0xc010cccb$/;"	l
c01009fa	obj/kernel.asm	/^c01009fa:	e8 7b f8 ff ff       	call   c010027a <cprintf>$/;"	l
c01009ff	obj/kernel.asm	/^c01009ff:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a02	obj/kernel.asm	/^c0100a02:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100a05	obj/kernel.asm	/^c0100a05:	68 85 cb 10 c0       	push   $0xc010cb85$/;"	l
c0100a0a	obj/kernel.asm	/^c0100a0a:	68 e3 cc 10 c0       	push   $0xc010cce3$/;"	l
c0100a0f	obj/kernel.asm	/^c0100a0f:	e8 66 f8 ff ff       	call   c010027a <cprintf>$/;"	l
c0100a14	obj/kernel.asm	/^c0100a14:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a17	obj/kernel.asm	/^c0100a17:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100a1a	obj/kernel.asm	/^c0100a1a:	68 64 13 1c c0       	push   $0xc01c1364$/;"	l
c0100a1f	obj/kernel.asm	/^c0100a1f:	68 fb cc 10 c0       	push   $0xc010ccfb$/;"	l
c0100a24	obj/kernel.asm	/^c0100a24:	e8 51 f8 ff ff       	call   c010027a <cprintf>$/;"	l
c0100a29	obj/kernel.asm	/^c0100a29:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a2c	obj/kernel.asm	/^c0100a2c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100a2f	obj/kernel.asm	/^c0100a2f:	68 64 47 1c c0       	push   $0xc01c4764$/;"	l
c0100a34	obj/kernel.asm	/^c0100a34:	68 13 cd 10 c0       	push   $0xc010cd13$/;"	l
c0100a39	obj/kernel.asm	/^c0100a39:	e8 3c f8 ff ff       	call   c010027a <cprintf>$/;"	l
c0100a3e	obj/kernel.asm	/^c0100a3e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a41	obj/kernel.asm	/^c0100a41:	b8 64 47 1c c0       	mov    $0xc01c4764,%eax$/;"	l
c0100a46	obj/kernel.asm	/^c0100a46:	05 ff 03 00 00       	add    $0x3ff,%eax$/;"	l
c0100a4b	obj/kernel.asm	/^c0100a4b:	ba 2a 00 10 c0       	mov    $0xc010002a,%edx$/;"	l
c0100a50	obj/kernel.asm	/^c0100a50:	29 d0                	sub    %edx,%eax$/;"	l
c0100a52	obj/kernel.asm	/^c0100a52:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
c0100a58	obj/kernel.asm	/^c0100a58:	85 c0                	test   %eax,%eax$/;"	l
c0100a5a	obj/kernel.asm	/^c0100a5a:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c0100a5d	obj/kernel.asm	/^c0100a5d:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
c0100a60	obj/kernel.asm	/^c0100a60:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100a63	obj/kernel.asm	/^c0100a63:	50                   	push   %eax$/;"	l
c0100a64	obj/kernel.asm	/^c0100a64:	68 2c cd 10 c0       	push   $0xc010cd2c$/;"	l
c0100a69	obj/kernel.asm	/^c0100a69:	e8 0c f8 ff ff       	call   c010027a <cprintf>$/;"	l
c0100a6e	obj/kernel.asm	/^c0100a6e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a71	obj/kernel.asm	/^c0100a71:	c9                   	leave  $/;"	l
c0100a72	obj/kernel.asm	/^c0100a72:	c3                   	ret    $/;"	l
c0100a73	obj/kernel.asm	/^c0100a73 <print_debuginfo>:$/;"	l
c0100a73	obj/kernel.asm	/^c0100a73:	55                   	push   %ebp$/;"	l
c0100a74	obj/kernel.asm	/^c0100a74:	89 e5                	mov    %esp,%ebp$/;"	l
c0100a76	obj/kernel.asm	/^c0100a76:	81 ec 28 01 00 00    	sub    $0x128,%esp$/;"	l
c0100a7c	obj/kernel.asm	/^c0100a7c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100a7f	obj/kernel.asm	/^c0100a7f:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0100a82	obj/kernel.asm	/^c0100a82:	50                   	push   %eax$/;"	l
c0100a83	obj/kernel.asm	/^c0100a83:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100a86	obj/kernel.asm	/^c0100a86:	e8 67 fb ff ff       	call   c01005f2 <debuginfo_eip>$/;"	l
c0100a8b	obj/kernel.asm	/^c0100a8b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a8e	obj/kernel.asm	/^c0100a8e:	85 c0                	test   %eax,%eax$/;"	l
c0100a90	obj/kernel.asm	/^c0100a90:	74 15                	je     c0100aa7 <print_debuginfo+0x34>$/;"	l
c0100a92	obj/kernel.asm	/^c0100a92:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100a95	obj/kernel.asm	/^c0100a95:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100a98	obj/kernel.asm	/^c0100a98:	68 56 cd 10 c0       	push   $0xc010cd56$/;"	l
c0100a9d	obj/kernel.asm	/^c0100a9d:	e8 d8 f7 ff ff       	call   c010027a <cprintf>$/;"	l
c0100aa2	obj/kernel.asm	/^c0100aa2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100aa5	obj/kernel.asm	/^c0100aa5:	eb 65                	jmp    c0100b0c <print_debuginfo+0x99>$/;"	l
c0100aa7	obj/kernel.asm	/^c0100aa7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100aae	obj/kernel.asm	/^c0100aae:	eb 1c                	jmp    c0100acc <print_debuginfo+0x59>$/;"	l
c0100ab0	obj/kernel.asm	/^c0100ab0:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0100ab3	obj/kernel.asm	/^c0100ab3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100ab6	obj/kernel.asm	/^c0100ab6:	01 d0                	add    %edx,%eax$/;"	l
c0100ab8	obj/kernel.asm	/^c0100ab8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100abb	obj/kernel.asm	/^c0100abb:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0100ac1	obj/kernel.asm	/^c0100ac1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100ac4	obj/kernel.asm	/^c0100ac4:	01 ca                	add    %ecx,%edx$/;"	l
c0100ac6	obj/kernel.asm	/^c0100ac6:	88 02                	mov    %al,(%edx)$/;"	l
c0100ac8	obj/kernel.asm	/^c0100ac8:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100acc	obj/kernel.asm	/^c0100acc:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100acf	obj/kernel.asm	/^c0100acf:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0100ad2	obj/kernel.asm	/^c0100ad2:	7f dc                	jg     c0100ab0 <print_debuginfo+0x3d>$/;"	l
c0100ad4	obj/kernel.asm	/^c0100ad4:	8d 95 dc fe ff ff    	lea    -0x124(%ebp),%edx$/;"	l
c0100ada	obj/kernel.asm	/^c0100ada:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100add	obj/kernel.asm	/^c0100add:	01 d0                	add    %edx,%eax$/;"	l
c0100adf	obj/kernel.asm	/^c0100adf:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100ae2	obj/kernel.asm	/^c0100ae2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100ae5	obj/kernel.asm	/^c0100ae5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100ae8	obj/kernel.asm	/^c0100ae8:	89 d1                	mov    %edx,%ecx$/;"	l
c0100aea	obj/kernel.asm	/^c0100aea:	29 c1                	sub    %eax,%ecx$/;"	l
c0100aec	obj/kernel.asm	/^c0100aec:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0100aef	obj/kernel.asm	/^c0100aef:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100af2	obj/kernel.asm	/^c0100af2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100af5	obj/kernel.asm	/^c0100af5:	51                   	push   %ecx$/;"	l
c0100af6	obj/kernel.asm	/^c0100af6:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0100afc	obj/kernel.asm	/^c0100afc:	51                   	push   %ecx$/;"	l
c0100afd	obj/kernel.asm	/^c0100afd:	52                   	push   %edx$/;"	l
c0100afe	obj/kernel.asm	/^c0100afe:	50                   	push   %eax$/;"	l
c0100aff	obj/kernel.asm	/^c0100aff:	68 72 cd 10 c0       	push   $0xc010cd72$/;"	l
c0100b04	obj/kernel.asm	/^c0100b04:	e8 71 f7 ff ff       	call   c010027a <cprintf>$/;"	l
c0100b09	obj/kernel.asm	/^c0100b09:	83 c4 20             	add    $0x20,%esp$/;"	l
c0100b0c	obj/kernel.asm	/^c0100b0c:	c9                   	leave  $/;"	l
c0100b0d	obj/kernel.asm	/^c0100b0d:	c3                   	ret    $/;"	l
c0100b0e	obj/kernel.asm	/^c0100b0e <read_eip>:$/;"	l
c0100b0e	obj/kernel.asm	/^c0100b0e:	55                   	push   %ebp$/;"	l
c0100b0f	obj/kernel.asm	/^c0100b0f:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b11	obj/kernel.asm	/^c0100b11:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0100b14	obj/kernel.asm	/^c0100b14:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
c0100b17	obj/kernel.asm	/^c0100b17:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100b1a	obj/kernel.asm	/^c0100b1a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100b1d	obj/kernel.asm	/^c0100b1d:	c9                   	leave  $/;"	l
c0100b1e	obj/kernel.asm	/^c0100b1e:	c3                   	ret    $/;"	l
c0100b1f	obj/kernel.asm	/^c0100b1f <print_stackframe>:$/;"	l
c0100b1f	obj/kernel.asm	/^c0100b1f:	55                   	push   %ebp$/;"	l
c0100b20	obj/kernel.asm	/^c0100b20:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b22	obj/kernel.asm	/^c0100b22:	5d                   	pop    %ebp$/;"	l
c0100b23	obj/kernel.asm	/^c0100b23:	c3                   	ret    $/;"	l
c0100b24	obj/kernel.asm	/^c0100b24 <parse>:$/;"	l
c0100b24	obj/kernel.asm	/^c0100b24:	55                   	push   %ebp$/;"	l
c0100b25	obj/kernel.asm	/^c0100b25:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b27	obj/kernel.asm	/^c0100b27:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100b2a	obj/kernel.asm	/^c0100b2a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100b31	obj/kernel.asm	/^c0100b31:	eb 0c                	jmp    c0100b3f <parse+0x1b>$/;"	l
c0100b33	obj/kernel.asm	/^c0100b33:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b36	obj/kernel.asm	/^c0100b36:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100b39	obj/kernel.asm	/^c0100b39:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0100b3c	obj/kernel.asm	/^c0100b3c:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100b3f	obj/kernel.asm	/^c0100b3f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b42	obj/kernel.asm	/^c0100b42:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100b45	obj/kernel.asm	/^c0100b45:	84 c0                	test   %al,%al$/;"	l
c0100b47	obj/kernel.asm	/^c0100b47:	74 1e                	je     c0100b67 <parse+0x43>$/;"	l
c0100b49	obj/kernel.asm	/^c0100b49:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b4c	obj/kernel.asm	/^c0100b4c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100b4f	obj/kernel.asm	/^c0100b4f:	0f be c0             	movsbl %al,%eax$/;"	l
c0100b52	obj/kernel.asm	/^c0100b52:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100b55	obj/kernel.asm	/^c0100b55:	50                   	push   %eax$/;"	l
c0100b56	obj/kernel.asm	/^c0100b56:	68 04 ce 10 c0       	push   $0xc010ce04$/;"	l
c0100b5b	obj/kernel.asm	/^c0100b5b:	e8 d9 b5 00 00       	call   c010c139 <strchr>$/;"	l
c0100b60	obj/kernel.asm	/^c0100b60:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b63	obj/kernel.asm	/^c0100b63:	85 c0                	test   %eax,%eax$/;"	l
c0100b65	obj/kernel.asm	/^c0100b65:	75 cc                	jne    c0100b33 <parse+0xf>$/;"	l
c0100b67	obj/kernel.asm	/^c0100b67:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b6a	obj/kernel.asm	/^c0100b6a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100b6d	obj/kernel.asm	/^c0100b6d:	84 c0                	test   %al,%al$/;"	l
c0100b6f	obj/kernel.asm	/^c0100b6f:	75 02                	jne    c0100b73 <parse+0x4f>$/;"	l
c0100b71	obj/kernel.asm	/^c0100b71:	eb 65                	jmp    c0100bd8 <parse+0xb4>$/;"	l
c0100b73	obj/kernel.asm	/^c0100b73:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)$/;"	l
c0100b77	obj/kernel.asm	/^c0100b77:	75 12                	jne    c0100b8b <parse+0x67>$/;"	l
c0100b79	obj/kernel.asm	/^c0100b79:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100b7c	obj/kernel.asm	/^c0100b7c:	6a 10                	push   $0x10$/;"	l
c0100b7e	obj/kernel.asm	/^c0100b7e:	68 09 ce 10 c0       	push   $0xc010ce09$/;"	l
c0100b83	obj/kernel.asm	/^c0100b83:	e8 f2 f6 ff ff       	call   c010027a <cprintf>$/;"	l
c0100b88	obj/kernel.asm	/^c0100b88:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b8b	obj/kernel.asm	/^c0100b8b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b8e	obj/kernel.asm	/^c0100b8e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100b91	obj/kernel.asm	/^c0100b91:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0100b94	obj/kernel.asm	/^c0100b94:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0100b9b	obj/kernel.asm	/^c0100b9b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100b9e	obj/kernel.asm	/^c0100b9e:	01 c2                	add    %eax,%edx$/;"	l
c0100ba0	obj/kernel.asm	/^c0100ba0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100ba3	obj/kernel.asm	/^c0100ba3:	89 02                	mov    %eax,(%edx)$/;"	l
c0100ba5	obj/kernel.asm	/^c0100ba5:	eb 04                	jmp    c0100bab <parse+0x87>$/;"	l
c0100ba7	obj/kernel.asm	/^c0100ba7:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0100bab	obj/kernel.asm	/^c0100bab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100bae	obj/kernel.asm	/^c0100bae:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100bb1	obj/kernel.asm	/^c0100bb1:	84 c0                	test   %al,%al$/;"	l
c0100bb3	obj/kernel.asm	/^c0100bb3:	74 1e                	je     c0100bd3 <parse+0xaf>$/;"	l
c0100bb5	obj/kernel.asm	/^c0100bb5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100bb8	obj/kernel.asm	/^c0100bb8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100bbb	obj/kernel.asm	/^c0100bbb:	0f be c0             	movsbl %al,%eax$/;"	l
c0100bbe	obj/kernel.asm	/^c0100bbe:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100bc1	obj/kernel.asm	/^c0100bc1:	50                   	push   %eax$/;"	l
c0100bc2	obj/kernel.asm	/^c0100bc2:	68 04 ce 10 c0       	push   $0xc010ce04$/;"	l
c0100bc7	obj/kernel.asm	/^c0100bc7:	e8 6d b5 00 00       	call   c010c139 <strchr>$/;"	l
c0100bcc	obj/kernel.asm	/^c0100bcc:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100bcf	obj/kernel.asm	/^c0100bcf:	85 c0                	test   %eax,%eax$/;"	l
c0100bd1	obj/kernel.asm	/^c0100bd1:	74 d4                	je     c0100ba7 <parse+0x83>$/;"	l
c0100bd3	obj/kernel.asm	/^c0100bd3:	e9 59 ff ff ff       	jmp    c0100b31 <parse+0xd>$/;"	l
c0100bd8	obj/kernel.asm	/^c0100bd8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100bdb	obj/kernel.asm	/^c0100bdb:	c9                   	leave  $/;"	l
c0100bdc	obj/kernel.asm	/^c0100bdc:	c3                   	ret    $/;"	l
c0100bdd	obj/kernel.asm	/^c0100bdd <runcmd>:$/;"	l
c0100bdd	obj/kernel.asm	/^c0100bdd:	55                   	push   %ebp$/;"	l
c0100bde	obj/kernel.asm	/^c0100bde:	89 e5                	mov    %esp,%ebp$/;"	l
c0100be0	obj/kernel.asm	/^c0100be0:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0100be3	obj/kernel.asm	/^c0100be3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100be6	obj/kernel.asm	/^c0100be6:	8d 45 b0             	lea    -0x50(%ebp),%eax$/;"	l
c0100be9	obj/kernel.asm	/^c0100be9:	50                   	push   %eax$/;"	l
c0100bea	obj/kernel.asm	/^c0100bea:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100bed	obj/kernel.asm	/^c0100bed:	e8 32 ff ff ff       	call   c0100b24 <parse>$/;"	l
c0100bf2	obj/kernel.asm	/^c0100bf2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100bf5	obj/kernel.asm	/^c0100bf5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100bf8	obj/kernel.asm	/^c0100bf8:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0100bfc	obj/kernel.asm	/^c0100bfc:	75 0a                	jne    c0100c08 <runcmd+0x2b>$/;"	l
c0100bfe	obj/kernel.asm	/^c0100bfe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100c03	obj/kernel.asm	/^c0100c03:	e9 84 00 00 00       	jmp    c0100c8c <runcmd+0xaf>$/;"	l
c0100c08	obj/kernel.asm	/^c0100c08:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100c0f	obj/kernel.asm	/^c0100c0f:	eb 5a                	jmp    c0100c6b <runcmd+0x8e>$/;"	l
c0100c11	obj/kernel.asm	/^c0100c11:	8b 4d b0             	mov    -0x50(%ebp),%ecx$/;"	l
c0100c14	obj/kernel.asm	/^c0100c14:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100c17	obj/kernel.asm	/^c0100c17:	89 d0                	mov    %edx,%eax$/;"	l
c0100c19	obj/kernel.asm	/^c0100c19:	01 c0                	add    %eax,%eax$/;"	l
c0100c1b	obj/kernel.asm	/^c0100c1b:	01 d0                	add    %edx,%eax$/;"	l
c0100c1d	obj/kernel.asm	/^c0100c1d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100c20	obj/kernel.asm	/^c0100c20:	05 20 00 13 c0       	add    $0xc0130020,%eax$/;"	l
c0100c25	obj/kernel.asm	/^c0100c25:	8b 00                	mov    (%eax),%eax$/;"	l
c0100c27	obj/kernel.asm	/^c0100c27:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100c2a	obj/kernel.asm	/^c0100c2a:	51                   	push   %ecx$/;"	l
c0100c2b	obj/kernel.asm	/^c0100c2b:	50                   	push   %eax$/;"	l
c0100c2c	obj/kernel.asm	/^c0100c2c:	e8 68 b4 00 00       	call   c010c099 <strcmp>$/;"	l
c0100c31	obj/kernel.asm	/^c0100c31:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100c34	obj/kernel.asm	/^c0100c34:	85 c0                	test   %eax,%eax$/;"	l
c0100c36	obj/kernel.asm	/^c0100c36:	75 2f                	jne    c0100c67 <runcmd+0x8a>$/;"	l
c0100c38	obj/kernel.asm	/^c0100c38:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100c3b	obj/kernel.asm	/^c0100c3b:	89 d0                	mov    %edx,%eax$/;"	l
c0100c3d	obj/kernel.asm	/^c0100c3d:	01 c0                	add    %eax,%eax$/;"	l
c0100c3f	obj/kernel.asm	/^c0100c3f:	01 d0                	add    %edx,%eax$/;"	l
c0100c41	obj/kernel.asm	/^c0100c41:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100c44	obj/kernel.asm	/^c0100c44:	05 20 00 13 c0       	add    $0xc0130020,%eax$/;"	l
c0100c49	obj/kernel.asm	/^c0100c49:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100c4c	obj/kernel.asm	/^c0100c4c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100c4f	obj/kernel.asm	/^c0100c4f:	83 ea 01             	sub    $0x1,%edx$/;"	l
c0100c52	obj/kernel.asm	/^c0100c52:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100c55	obj/kernel.asm	/^c0100c55:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0100c58	obj/kernel.asm	/^c0100c58:	8d 4d b0             	lea    -0x50(%ebp),%ecx$/;"	l
c0100c5b	obj/kernel.asm	/^c0100c5b:	83 c1 04             	add    $0x4,%ecx$/;"	l
c0100c5e	obj/kernel.asm	/^c0100c5e:	51                   	push   %ecx$/;"	l
c0100c5f	obj/kernel.asm	/^c0100c5f:	52                   	push   %edx$/;"	l
c0100c60	obj/kernel.asm	/^c0100c60:	ff d0                	call   *%eax$/;"	l
c0100c62	obj/kernel.asm	/^c0100c62:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100c65	obj/kernel.asm	/^c0100c65:	eb 25                	jmp    c0100c8c <runcmd+0xaf>$/;"	l
c0100c67	obj/kernel.asm	/^c0100c67:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100c6b	obj/kernel.asm	/^c0100c6b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100c6e	obj/kernel.asm	/^c0100c6e:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100c71	obj/kernel.asm	/^c0100c71:	76 9e                	jbe    c0100c11 <runcmd+0x34>$/;"	l
c0100c73	obj/kernel.asm	/^c0100c73:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0100c76	obj/kernel.asm	/^c0100c76:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100c79	obj/kernel.asm	/^c0100c79:	50                   	push   %eax$/;"	l
c0100c7a	obj/kernel.asm	/^c0100c7a:	68 27 ce 10 c0       	push   $0xc010ce27$/;"	l
c0100c7f	obj/kernel.asm	/^c0100c7f:	e8 f6 f5 ff ff       	call   c010027a <cprintf>$/;"	l
c0100c84	obj/kernel.asm	/^c0100c84:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100c87	obj/kernel.asm	/^c0100c87:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100c8c	obj/kernel.asm	/^c0100c8c:	c9                   	leave  $/;"	l
c0100c8d	obj/kernel.asm	/^c0100c8d:	c3                   	ret    $/;"	l
c0100c8e	obj/kernel.asm	/^c0100c8e <kmonitor>:$/;"	l
c0100c8e	obj/kernel.asm	/^c0100c8e:	55                   	push   %ebp$/;"	l
c0100c8f	obj/kernel.asm	/^c0100c8f:	89 e5                	mov    %esp,%ebp$/;"	l
c0100c91	obj/kernel.asm	/^c0100c91:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100c94	obj/kernel.asm	/^c0100c94:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100c97	obj/kernel.asm	/^c0100c97:	68 40 ce 10 c0       	push   $0xc010ce40$/;"	l
c0100c9c	obj/kernel.asm	/^c0100c9c:	e8 d9 f5 ff ff       	call   c010027a <cprintf>$/;"	l
c0100ca1	obj/kernel.asm	/^c0100ca1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100ca4	obj/kernel.asm	/^c0100ca4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100ca7	obj/kernel.asm	/^c0100ca7:	68 68 ce 10 c0       	push   $0xc010ce68$/;"	l
c0100cac	obj/kernel.asm	/^c0100cac:	e8 c9 f5 ff ff       	call   c010027a <cprintf>$/;"	l
c0100cb1	obj/kernel.asm	/^c0100cb1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100cb4	obj/kernel.asm	/^c0100cb4:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100cb8	obj/kernel.asm	/^c0100cb8:	74 0e                	je     c0100cc8 <kmonitor+0x3a>$/;"	l
c0100cba	obj/kernel.asm	/^c0100cba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100cbd	obj/kernel.asm	/^c0100cbd:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100cc0	obj/kernel.asm	/^c0100cc0:	e8 6f 17 00 00       	call   c0102434 <print_trapframe>$/;"	l
c0100cc5	obj/kernel.asm	/^c0100cc5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100cc8	obj/kernel.asm	/^c0100cc8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100ccb	obj/kernel.asm	/^c0100ccb:	68 8d ce 10 c0       	push   $0xc010ce8d$/;"	l
c0100cd0	obj/kernel.asm	/^c0100cd0:	e8 48 f6 ff ff       	call   c010031d <readline>$/;"	l
c0100cd5	obj/kernel.asm	/^c0100cd5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100cd8	obj/kernel.asm	/^c0100cd8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100cdb	obj/kernel.asm	/^c0100cdb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100cdf	obj/kernel.asm	/^c0100cdf:	74 17                	je     c0100cf8 <kmonitor+0x6a>$/;"	l
c0100ce1	obj/kernel.asm	/^c0100ce1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100ce4	obj/kernel.asm	/^c0100ce4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100ce7	obj/kernel.asm	/^c0100ce7:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100cea	obj/kernel.asm	/^c0100cea:	e8 ee fe ff ff       	call   c0100bdd <runcmd>$/;"	l
c0100cef	obj/kernel.asm	/^c0100cef:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100cf2	obj/kernel.asm	/^c0100cf2:	85 c0                	test   %eax,%eax$/;"	l
c0100cf4	obj/kernel.asm	/^c0100cf4:	79 02                	jns    c0100cf8 <kmonitor+0x6a>$/;"	l
c0100cf6	obj/kernel.asm	/^c0100cf6:	eb 02                	jmp    c0100cfa <kmonitor+0x6c>$/;"	l
c0100cf8	obj/kernel.asm	/^c0100cf8:	eb ce                	jmp    c0100cc8 <kmonitor+0x3a>$/;"	l
c0100cfa	obj/kernel.asm	/^c0100cfa:	c9                   	leave  $/;"	l
c0100cfb	obj/kernel.asm	/^c0100cfb:	c3                   	ret    $/;"	l
c0100cfc	obj/kernel.asm	/^c0100cfc <mon_help>:$/;"	l
c0100cfc	obj/kernel.asm	/^c0100cfc:	55                   	push   %ebp$/;"	l
c0100cfd	obj/kernel.asm	/^c0100cfd:	89 e5                	mov    %esp,%ebp$/;"	l
c0100cff	obj/kernel.asm	/^c0100cff:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100d02	obj/kernel.asm	/^c0100d02:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100d09	obj/kernel.asm	/^c0100d09:	eb 3d                	jmp    c0100d48 <mon_help+0x4c>$/;"	l
c0100d0b	obj/kernel.asm	/^c0100d0b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100d0e	obj/kernel.asm	/^c0100d0e:	89 d0                	mov    %edx,%eax$/;"	l
c0100d10	obj/kernel.asm	/^c0100d10:	01 c0                	add    %eax,%eax$/;"	l
c0100d12	obj/kernel.asm	/^c0100d12:	01 d0                	add    %edx,%eax$/;"	l
c0100d14	obj/kernel.asm	/^c0100d14:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d17	obj/kernel.asm	/^c0100d17:	05 20 00 13 c0       	add    $0xc0130020,%eax$/;"	l
c0100d1c	obj/kernel.asm	/^c0100d1c:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c0100d1f	obj/kernel.asm	/^c0100d1f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100d22	obj/kernel.asm	/^c0100d22:	89 d0                	mov    %edx,%eax$/;"	l
c0100d24	obj/kernel.asm	/^c0100d24:	01 c0                	add    %eax,%eax$/;"	l
c0100d26	obj/kernel.asm	/^c0100d26:	01 d0                	add    %edx,%eax$/;"	l
c0100d28	obj/kernel.asm	/^c0100d28:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d2b	obj/kernel.asm	/^c0100d2b:	05 20 00 13 c0       	add    $0xc0130020,%eax$/;"	l
c0100d30	obj/kernel.asm	/^c0100d30:	8b 00                	mov    (%eax),%eax$/;"	l
c0100d32	obj/kernel.asm	/^c0100d32:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100d35	obj/kernel.asm	/^c0100d35:	51                   	push   %ecx$/;"	l
c0100d36	obj/kernel.asm	/^c0100d36:	50                   	push   %eax$/;"	l
c0100d37	obj/kernel.asm	/^c0100d37:	68 91 ce 10 c0       	push   $0xc010ce91$/;"	l
c0100d3c	obj/kernel.asm	/^c0100d3c:	e8 39 f5 ff ff       	call   c010027a <cprintf>$/;"	l
c0100d41	obj/kernel.asm	/^c0100d41:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100d44	obj/kernel.asm	/^c0100d44:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100d48	obj/kernel.asm	/^c0100d48:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100d4b	obj/kernel.asm	/^c0100d4b:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100d4e	obj/kernel.asm	/^c0100d4e:	76 bb                	jbe    c0100d0b <mon_help+0xf>$/;"	l
c0100d50	obj/kernel.asm	/^c0100d50:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100d55	obj/kernel.asm	/^c0100d55:	c9                   	leave  $/;"	l
c0100d56	obj/kernel.asm	/^c0100d56:	c3                   	ret    $/;"	l
c0100d57	obj/kernel.asm	/^c0100d57 <mon_kerninfo>:$/;"	l
c0100d57	obj/kernel.asm	/^c0100d57:	55                   	push   %ebp$/;"	l
c0100d58	obj/kernel.asm	/^c0100d58:	89 e5                	mov    %esp,%ebp$/;"	l
c0100d5a	obj/kernel.asm	/^c0100d5a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100d5d	obj/kernel.asm	/^c0100d5d:	e8 75 fc ff ff       	call   c01009d7 <print_kerninfo>$/;"	l
c0100d62	obj/kernel.asm	/^c0100d62:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100d67	obj/kernel.asm	/^c0100d67:	c9                   	leave  $/;"	l
c0100d68	obj/kernel.asm	/^c0100d68:	c3                   	ret    $/;"	l
c0100d69	obj/kernel.asm	/^c0100d69 <mon_backtrace>:$/;"	l
c0100d69	obj/kernel.asm	/^c0100d69:	55                   	push   %ebp$/;"	l
c0100d6a	obj/kernel.asm	/^c0100d6a:	89 e5                	mov    %esp,%ebp$/;"	l
c0100d6c	obj/kernel.asm	/^c0100d6c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100d6f	obj/kernel.asm	/^c0100d6f:	e8 ab fd ff ff       	call   c0100b1f <print_stackframe>$/;"	l
c0100d74	obj/kernel.asm	/^c0100d74:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100d79	obj/kernel.asm	/^c0100d79:	c9                   	leave  $/;"	l
c0100d7a	obj/kernel.asm	/^c0100d7a:	c3                   	ret    $/;"	l
c0100d7b	obj/kernel.asm	/^c0100d7b <ide_wait_ready>:$/;"	l
c0100d7b	obj/kernel.asm	/^c0100d7b:	55                   	push   %ebp$/;"	l
c0100d7c	obj/kernel.asm	/^c0100d7c:	89 e5                	mov    %esp,%ebp$/;"	l
c0100d7e	obj/kernel.asm	/^c0100d7e:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0100d81	obj/kernel.asm	/^c0100d81:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d84	obj/kernel.asm	/^c0100d84:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c0100d88	obj/kernel.asm	/^c0100d88:	90                   	nop$/;"	l
c0100d89	obj/kernel.asm	/^c0100d89:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0100d8d	obj/kernel.asm	/^c0100d8d:	83 c0 07             	add    $0x7,%eax$/;"	l
c0100d90	obj/kernel.asm	/^c0100d90:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100d93	obj/kernel.asm	/^c0100d93:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c0100d97	obj/kernel.asm	/^c0100d97:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0100d9b	obj/kernel.asm	/^c0100d9b:	89 c2                	mov    %eax,%edx$/;"	l
c0100d9d	obj/kernel.asm	/^c0100d9d:	ec                   	in     (%dx),%al$/;"	l
c0100d9e	obj/kernel.asm	/^c0100d9e:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0100da1	obj/kernel.asm	/^c0100da1:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0100da5	obj/kernel.asm	/^c0100da5:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100da8	obj/kernel.asm	/^c0100da8:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100dab	obj/kernel.asm	/^c0100dab:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100dae	obj/kernel.asm	/^c0100dae:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
c0100db3	obj/kernel.asm	/^c0100db3:	85 c0                	test   %eax,%eax$/;"	l
c0100db5	obj/kernel.asm	/^c0100db5:	75 d2                	jne    c0100d89 <ide_wait_ready+0xe>$/;"	l
c0100db7	obj/kernel.asm	/^c0100db7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0100dbb	obj/kernel.asm	/^c0100dbb:	74 11                	je     c0100dce <ide_wait_ready+0x53>$/;"	l
c0100dbd	obj/kernel.asm	/^c0100dbd:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100dc0	obj/kernel.asm	/^c0100dc0:	83 e0 21             	and    $0x21,%eax$/;"	l
c0100dc3	obj/kernel.asm	/^c0100dc3:	85 c0                	test   %eax,%eax$/;"	l
c0100dc5	obj/kernel.asm	/^c0100dc5:	74 07                	je     c0100dce <ide_wait_ready+0x53>$/;"	l
c0100dc7	obj/kernel.asm	/^c0100dc7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100dcc	obj/kernel.asm	/^c0100dcc:	eb 05                	jmp    c0100dd3 <ide_wait_ready+0x58>$/;"	l
c0100dce	obj/kernel.asm	/^c0100dce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100dd3	obj/kernel.asm	/^c0100dd3:	c9                   	leave  $/;"	l
c0100dd4	obj/kernel.asm	/^c0100dd4:	c3                   	ret    $/;"	l
c0100dd5	obj/kernel.asm	/^c0100dd5 <ide_init>:$/;"	l
c0100dd5	obj/kernel.asm	/^c0100dd5:	55                   	push   %ebp$/;"	l
c0100dd6	obj/kernel.asm	/^c0100dd6:	89 e5                	mov    %esp,%ebp$/;"	l
c0100dd8	obj/kernel.asm	/^c0100dd8:	57                   	push   %edi$/;"	l
c0100dd9	obj/kernel.asm	/^c0100dd9:	53                   	push   %ebx$/;"	l
c0100dda	obj/kernel.asm	/^c0100dda:	81 ec 40 02 00 00    	sub    $0x240,%esp$/;"	l
c0100de0	obj/kernel.asm	/^c0100de0:	66 c7 45 f6 00 00    	movw   $0x0,-0xa(%ebp)$/;"	l
c0100de6	obj/kernel.asm	/^c0100de6:	e9 c1 02 00 00       	jmp    c01010ac <ide_init+0x2d7>$/;"	l
c0100deb	obj/kernel.asm	/^c0100deb:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100def	obj/kernel.asm	/^c0100def:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0100df2	obj/kernel.asm	/^c0100df2:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0100df9	obj/kernel.asm	/^c0100df9:	29 c2                	sub    %eax,%edx$/;"	l
c0100dfb	obj/kernel.asm	/^c0100dfb:	89 d0                	mov    %edx,%eax$/;"	l
c0100dfd	obj/kernel.asm	/^c0100dfd:	05 00 18 1c c0       	add    $0xc01c1800,%eax$/;"	l
c0100e02	obj/kernel.asm	/^c0100e02:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100e05	obj/kernel.asm	/^c0100e05:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100e09	obj/kernel.asm	/^c0100e09:	66 d1 e8             	shr    %ax$/;"	l
c0100e0c	obj/kernel.asm	/^c0100e0c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100e0f	obj/kernel.asm	/^c0100e0f:	0f b7 04 85 9c ce 10 	movzwl -0x3fef3164(,%eax,4),%eax$/;"	l
c0100e16	obj/kernel.asm	/^c0100e16:	c0 $/;"	l
c0100e17	obj/kernel.asm	/^c0100e17:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0100e1b	obj/kernel.asm	/^c0100e1b:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100e1f	obj/kernel.asm	/^c0100e1f:	6a 00                	push   $0x0$/;"	l
c0100e21	obj/kernel.asm	/^c0100e21:	50                   	push   %eax$/;"	l
c0100e22	obj/kernel.asm	/^c0100e22:	e8 54 ff ff ff       	call   c0100d7b <ide_wait_ready>$/;"	l
c0100e27	obj/kernel.asm	/^c0100e27:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100e2a	obj/kernel.asm	/^c0100e2a:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100e2e	obj/kernel.asm	/^c0100e2e:	83 e0 01             	and    $0x1,%eax$/;"	l
c0100e31	obj/kernel.asm	/^c0100e31:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0100e34	obj/kernel.asm	/^c0100e34:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0100e37	obj/kernel.asm	/^c0100e37:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100e3a	obj/kernel.asm	/^c0100e3a:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0100e3e	obj/kernel.asm	/^c0100e3e:	83 c2 06             	add    $0x6,%edx$/;"	l
c0100e41	obj/kernel.asm	/^c0100e41:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0100e44	obj/kernel.asm	/^c0100e44:	66 89 55 d2          	mov    %dx,-0x2e(%ebp)$/;"	l
c0100e48	obj/kernel.asm	/^c0100e48:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c0100e4b	obj/kernel.asm	/^c0100e4b:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c0100e4f	obj/kernel.asm	/^c0100e4f:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c0100e53	obj/kernel.asm	/^c0100e53:	ee                   	out    %al,(%dx)$/;"	l
c0100e54	obj/kernel.asm	/^c0100e54:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100e58	obj/kernel.asm	/^c0100e58:	6a 00                	push   $0x0$/;"	l
c0100e5a	obj/kernel.asm	/^c0100e5a:	50                   	push   %eax$/;"	l
c0100e5b	obj/kernel.asm	/^c0100e5b:	e8 1b ff ff ff       	call   c0100d7b <ide_wait_ready>$/;"	l
c0100e60	obj/kernel.asm	/^c0100e60:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100e63	obj/kernel.asm	/^c0100e63:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100e67	obj/kernel.asm	/^c0100e67:	83 c0 07             	add    $0x7,%eax$/;"	l
c0100e6a	obj/kernel.asm	/^c0100e6a:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100e6d	obj/kernel.asm	/^c0100e6d:	66 89 45 ce          	mov    %ax,-0x32(%ebp)$/;"	l
c0100e71	obj/kernel.asm	/^c0100e71:	c6 45 cd ec          	movb   $0xec,-0x33(%ebp)$/;"	l
c0100e75	obj/kernel.asm	/^c0100e75:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c0100e79	obj/kernel.asm	/^c0100e79:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c0100e7d	obj/kernel.asm	/^c0100e7d:	ee                   	out    %al,(%dx)$/;"	l
c0100e7e	obj/kernel.asm	/^c0100e7e:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100e82	obj/kernel.asm	/^c0100e82:	6a 00                	push   $0x0$/;"	l
c0100e84	obj/kernel.asm	/^c0100e84:	50                   	push   %eax$/;"	l
c0100e85	obj/kernel.asm	/^c0100e85:	e8 f1 fe ff ff       	call   c0100d7b <ide_wait_ready>$/;"	l
c0100e8a	obj/kernel.asm	/^c0100e8a:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100e8d	obj/kernel.asm	/^c0100e8d:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100e91	obj/kernel.asm	/^c0100e91:	83 c0 07             	add    $0x7,%eax$/;"	l
c0100e94	obj/kernel.asm	/^c0100e94:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100e97	obj/kernel.asm	/^c0100e97:	66 89 45 ca          	mov    %ax,-0x36(%ebp)$/;"	l
c0100e9b	obj/kernel.asm	/^c0100e9b:	0f b7 45 ca          	movzwl -0x36(%ebp),%eax$/;"	l
c0100e9f	obj/kernel.asm	/^c0100e9f:	89 c2                	mov    %eax,%edx$/;"	l
c0100ea1	obj/kernel.asm	/^c0100ea1:	ec                   	in     (%dx),%al$/;"	l
c0100ea2	obj/kernel.asm	/^c0100ea2:	88 45 c9             	mov    %al,-0x37(%ebp)$/;"	l
c0100ea5	obj/kernel.asm	/^c0100ea5:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c0100ea9	obj/kernel.asm	/^c0100ea9:	84 c0                	test   %al,%al$/;"	l
c0100eab	obj/kernel.asm	/^c0100eab:	0f 84 f0 01 00 00    	je     c01010a1 <ide_init+0x2cc>$/;"	l
c0100eb1	obj/kernel.asm	/^c0100eb1:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100eb5	obj/kernel.asm	/^c0100eb5:	6a 01                	push   $0x1$/;"	l
c0100eb7	obj/kernel.asm	/^c0100eb7:	50                   	push   %eax$/;"	l
c0100eb8	obj/kernel.asm	/^c0100eb8:	e8 be fe ff ff       	call   c0100d7b <ide_wait_ready>$/;"	l
c0100ebd	obj/kernel.asm	/^c0100ebd:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100ec0	obj/kernel.asm	/^c0100ec0:	85 c0                	test   %eax,%eax$/;"	l
c0100ec2	obj/kernel.asm	/^c0100ec2:	0f 85 d9 01 00 00    	jne    c01010a1 <ide_init+0x2cc>$/;"	l
c0100ec8	obj/kernel.asm	/^c0100ec8:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100ecc	obj/kernel.asm	/^c0100ecc:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0100ecf	obj/kernel.asm	/^c0100ecf:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0100ed6	obj/kernel.asm	/^c0100ed6:	29 c2                	sub    %eax,%edx$/;"	l
c0100ed8	obj/kernel.asm	/^c0100ed8:	89 d0                	mov    %edx,%eax$/;"	l
c0100eda	obj/kernel.asm	/^c0100eda:	05 00 18 1c c0       	add    $0xc01c1800,%eax$/;"	l
c0100edf	obj/kernel.asm	/^c0100edf:	c6 00 01             	movb   $0x1,(%eax)$/;"	l
c0100ee2	obj/kernel.asm	/^c0100ee2:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100ee6	obj/kernel.asm	/^c0100ee6:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0100ee9	obj/kernel.asm	/^c0100ee9:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c0100eef	obj/kernel.asm	/^c0100eef:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0100ef2	obj/kernel.asm	/^c0100ef2:	c7 45 bc 80 00 00 00 	movl   $0x80,-0x44(%ebp)$/;"	l
c0100ef9	obj/kernel.asm	/^c0100ef9:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0100efc	obj/kernel.asm	/^c0100efc:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
c0100eff	obj/kernel.asm	/^c0100eff:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0100f02	obj/kernel.asm	/^c0100f02:	89 cb                	mov    %ecx,%ebx$/;"	l
c0100f04	obj/kernel.asm	/^c0100f04:	89 df                	mov    %ebx,%edi$/;"	l
c0100f06	obj/kernel.asm	/^c0100f06:	89 c1                	mov    %eax,%ecx$/;"	l
c0100f08	obj/kernel.asm	/^c0100f08:	fc                   	cld    $/;"	l
c0100f09	obj/kernel.asm	/^c0100f09:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c0100f0b	obj/kernel.asm	/^c0100f0b:	89 c8                	mov    %ecx,%eax$/;"	l
c0100f0d	obj/kernel.asm	/^c0100f0d:	89 fb                	mov    %edi,%ebx$/;"	l
c0100f0f	obj/kernel.asm	/^c0100f0f:	89 5d c0             	mov    %ebx,-0x40(%ebp)$/;"	l
c0100f12	obj/kernel.asm	/^c0100f12:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0100f15	obj/kernel.asm	/^c0100f15:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c0100f1b	obj/kernel.asm	/^c0100f1b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0100f1e	obj/kernel.asm	/^c0100f1e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100f21	obj/kernel.asm	/^c0100f21:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax$/;"	l
c0100f27	obj/kernel.asm	/^c0100f27:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100f2a	obj/kernel.asm	/^c0100f2a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100f2d	obj/kernel.asm	/^c0100f2d:	25 00 00 00 04       	and    $0x4000000,%eax$/;"	l
c0100f32	obj/kernel.asm	/^c0100f32:	85 c0                	test   %eax,%eax$/;"	l
c0100f34	obj/kernel.asm	/^c0100f34:	74 0e                	je     c0100f44 <ide_init+0x16f>$/;"	l
c0100f36	obj/kernel.asm	/^c0100f36:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100f39	obj/kernel.asm	/^c0100f39:	8b 80 c8 00 00 00    	mov    0xc8(%eax),%eax$/;"	l
c0100f3f	obj/kernel.asm	/^c0100f3f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100f42	obj/kernel.asm	/^c0100f42:	eb 09                	jmp    c0100f4d <ide_init+0x178>$/;"	l
c0100f44	obj/kernel.asm	/^c0100f44:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100f47	obj/kernel.asm	/^c0100f47:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0100f4a	obj/kernel.asm	/^c0100f4a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100f4d	obj/kernel.asm	/^c0100f4d:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100f51	obj/kernel.asm	/^c0100f51:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0100f54	obj/kernel.asm	/^c0100f54:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0100f5b	obj/kernel.asm	/^c0100f5b:	29 c2                	sub    %eax,%edx$/;"	l
c0100f5d	obj/kernel.asm	/^c0100f5d:	89 d0                	mov    %edx,%eax$/;"	l
c0100f5f	obj/kernel.asm	/^c0100f5f:	8d 90 00 18 1c c0    	lea    -0x3fe3e800(%eax),%edx$/;"	l
c0100f65	obj/kernel.asm	/^c0100f65:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100f68	obj/kernel.asm	/^c0100f68:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c0100f6b	obj/kernel.asm	/^c0100f6b:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100f6f	obj/kernel.asm	/^c0100f6f:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0100f72	obj/kernel.asm	/^c0100f72:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0100f79	obj/kernel.asm	/^c0100f79:	29 c2                	sub    %eax,%edx$/;"	l
c0100f7b	obj/kernel.asm	/^c0100f7b:	89 d0                	mov    %edx,%eax$/;"	l
c0100f7d	obj/kernel.asm	/^c0100f7d:	8d 90 00 18 1c c0    	lea    -0x3fe3e800(%eax),%edx$/;"	l
c0100f83	obj/kernel.asm	/^c0100f83:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100f86	obj/kernel.asm	/^c0100f86:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c0100f89	obj/kernel.asm	/^c0100f89:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100f8c	obj/kernel.asm	/^c0100f8c:	83 c0 62             	add    $0x62,%eax$/;"	l
c0100f8f	obj/kernel.asm	/^c0100f8f:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c0100f92	obj/kernel.asm	/^c0100f92:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100f95	obj/kernel.asm	/^c0100f95:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0100f9a	obj/kernel.asm	/^c0100f9a:	85 c0                	test   %eax,%eax$/;"	l
c0100f9c	obj/kernel.asm	/^c0100f9c:	75 16                	jne    c0100fb4 <ide_init+0x1df>$/;"	l
c0100f9e	obj/kernel.asm	/^c0100f9e:	68 a4 ce 10 c0       	push   $0xc010cea4$/;"	l
c0100fa3	obj/kernel.asm	/^c0100fa3:	68 e7 ce 10 c0       	push   $0xc010cee7$/;"	l
c0100fa8	obj/kernel.asm	/^c0100fa8:	6a 7d                	push   $0x7d$/;"	l
c0100faa	obj/kernel.asm	/^c0100faa:	68 fc ce 10 c0       	push   $0xc010cefc$/;"	l
c0100faf	obj/kernel.asm	/^c0100faf:	e8 2b f4 ff ff       	call   c01003df <__panic>$/;"	l
c0100fb4	obj/kernel.asm	/^c0100fb4:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100fb8	obj/kernel.asm	/^c0100fb8:	89 c2                	mov    %eax,%edx$/;"	l
c0100fba	obj/kernel.asm	/^c0100fba:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c0100fc1	obj/kernel.asm	/^c0100fc1:	89 c2                	mov    %eax,%edx$/;"	l
c0100fc3	obj/kernel.asm	/^c0100fc3:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c0100fca	obj/kernel.asm	/^c0100fca:	29 d0                	sub    %edx,%eax$/;"	l
c0100fcc	obj/kernel.asm	/^c0100fcc:	05 00 18 1c c0       	add    $0xc01c1800,%eax$/;"	l
c0100fd1	obj/kernel.asm	/^c0100fd1:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0100fd4	obj/kernel.asm	/^c0100fd4:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0100fd7	obj/kernel.asm	/^c0100fd7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100fda	obj/kernel.asm	/^c0100fda:	83 c0 36             	add    $0x36,%eax$/;"	l
c0100fdd	obj/kernel.asm	/^c0100fdd:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0100fe0	obj/kernel.asm	/^c0100fe0:	c7 45 d4 28 00 00 00 	movl   $0x28,-0x2c(%ebp)$/;"	l
c0100fe7	obj/kernel.asm	/^c0100fe7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0100fee	obj/kernel.asm	/^c0100fee:	eb 34                	jmp    c0101024 <ide_init+0x24f>$/;"	l
c0100ff0	obj/kernel.asm	/^c0100ff0:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0100ff3	obj/kernel.asm	/^c0100ff3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100ff6	obj/kernel.asm	/^c0100ff6:	01 c2                	add    %eax,%edx$/;"	l
c0100ff8	obj/kernel.asm	/^c0100ff8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100ffb	obj/kernel.asm	/^c0100ffb:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0100ffe	obj/kernel.asm	/^c0100ffe:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0101001	obj/kernel.asm	/^c0101001:	01 c8                	add    %ecx,%eax$/;"	l
c0101003	obj/kernel.asm	/^c0101003:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101006	obj/kernel.asm	/^c0101006:	88 02                	mov    %al,(%edx)$/;"	l
c0101008	obj/kernel.asm	/^c0101008:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010100b	obj/kernel.asm	/^c010100b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010100e	obj/kernel.asm	/^c010100e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0101011	obj/kernel.asm	/^c0101011:	01 c2                	add    %eax,%edx$/;"	l
c0101013	obj/kernel.asm	/^c0101013:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
c0101016	obj/kernel.asm	/^c0101016:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101019	obj/kernel.asm	/^c0101019:	01 c8                	add    %ecx,%eax$/;"	l
c010101b	obj/kernel.asm	/^c010101b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010101e	obj/kernel.asm	/^c010101e:	88 02                	mov    %al,(%edx)$/;"	l
c0101020	obj/kernel.asm	/^c0101020:	83 45 ec 02          	addl   $0x2,-0x14(%ebp)$/;"	l
c0101024	obj/kernel.asm	/^c0101024:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101027	obj/kernel.asm	/^c0101027:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010102a	obj/kernel.asm	/^c010102a:	72 c4                	jb     c0100ff0 <ide_init+0x21b>$/;"	l
c010102c	obj/kernel.asm	/^c010102c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010102f	obj/kernel.asm	/^c010102f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101032	obj/kernel.asm	/^c0101032:	01 d0                	add    %edx,%eax$/;"	l
c0101034	obj/kernel.asm	/^c0101034:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0101037	obj/kernel.asm	/^c0101037:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010103a	obj/kernel.asm	/^c010103a:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010103d	obj/kernel.asm	/^c010103d:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0101040	obj/kernel.asm	/^c0101040:	85 c0                	test   %eax,%eax$/;"	l
c0101042	obj/kernel.asm	/^c0101042:	74 0f                	je     c0101053 <ide_init+0x27e>$/;"	l
c0101044	obj/kernel.asm	/^c0101044:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0101047	obj/kernel.asm	/^c0101047:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010104a	obj/kernel.asm	/^c010104a:	01 d0                	add    %edx,%eax$/;"	l
c010104c	obj/kernel.asm	/^c010104c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010104f	obj/kernel.asm	/^c010104f:	3c 20                	cmp    $0x20,%al$/;"	l
c0101051	obj/kernel.asm	/^c0101051:	74 d9                	je     c010102c <ide_init+0x257>$/;"	l
c0101053	obj/kernel.asm	/^c0101053:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101057	obj/kernel.asm	/^c0101057:	89 c2                	mov    %eax,%edx$/;"	l
c0101059	obj/kernel.asm	/^c0101059:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c0101060	obj/kernel.asm	/^c0101060:	89 c2                	mov    %eax,%edx$/;"	l
c0101062	obj/kernel.asm	/^c0101062:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c0101069	obj/kernel.asm	/^c0101069:	29 d0                	sub    %edx,%eax$/;"	l
c010106b	obj/kernel.asm	/^c010106b:	05 00 18 1c c0       	add    $0xc01c1800,%eax$/;"	l
c0101070	obj/kernel.asm	/^c0101070:	8d 48 0c             	lea    0xc(%eax),%ecx$/;"	l
c0101073	obj/kernel.asm	/^c0101073:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101077	obj/kernel.asm	/^c0101077:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010107a	obj/kernel.asm	/^c010107a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101081	obj/kernel.asm	/^c0101081:	29 c2                	sub    %eax,%edx$/;"	l
c0101083	obj/kernel.asm	/^c0101083:	89 d0                	mov    %edx,%eax$/;"	l
c0101085	obj/kernel.asm	/^c0101085:	05 00 18 1c c0       	add    $0xc01c1800,%eax$/;"	l
c010108a	obj/kernel.asm	/^c010108a:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010108d	obj/kernel.asm	/^c010108d:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101091	obj/kernel.asm	/^c0101091:	51                   	push   %ecx$/;"	l
c0101092	obj/kernel.asm	/^c0101092:	52                   	push   %edx$/;"	l
c0101093	obj/kernel.asm	/^c0101093:	50                   	push   %eax$/;"	l
c0101094	obj/kernel.asm	/^c0101094:	68 0e cf 10 c0       	push   $0xc010cf0e$/;"	l
c0101099	obj/kernel.asm	/^c0101099:	e8 dc f1 ff ff       	call   c010027a <cprintf>$/;"	l
c010109e	obj/kernel.asm	/^c010109e:	83 c4 10             	add    $0x10,%esp$/;"	l
c01010a1	obj/kernel.asm	/^c01010a1:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c01010a5	obj/kernel.asm	/^c01010a5:	83 c0 01             	add    $0x1,%eax$/;"	l
c01010a8	obj/kernel.asm	/^c01010a8:	66 89 45 f6          	mov    %ax,-0xa(%ebp)$/;"	l
c01010ac	obj/kernel.asm	/^c01010ac:	66 83 7d f6 03       	cmpw   $0x3,-0xa(%ebp)$/;"	l
c01010b1	obj/kernel.asm	/^c01010b1:	0f 86 34 fd ff ff    	jbe    c0100deb <ide_init+0x16>$/;"	l
c01010b7	obj/kernel.asm	/^c01010b7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01010ba	obj/kernel.asm	/^c01010ba:	6a 0e                	push   $0xe$/;"	l
c01010bc	obj/kernel.asm	/^c01010bc:	e8 73 0e 00 00       	call   c0101f34 <pic_enable>$/;"	l
c01010c1	obj/kernel.asm	/^c01010c1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01010c4	obj/kernel.asm	/^c01010c4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01010c7	obj/kernel.asm	/^c01010c7:	6a 0f                	push   $0xf$/;"	l
c01010c9	obj/kernel.asm	/^c01010c9:	e8 66 0e 00 00       	call   c0101f34 <pic_enable>$/;"	l
c01010ce	obj/kernel.asm	/^c01010ce:	83 c4 10             	add    $0x10,%esp$/;"	l
c01010d1	obj/kernel.asm	/^c01010d1:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c01010d4	obj/kernel.asm	/^c01010d4:	5b                   	pop    %ebx$/;"	l
c01010d5	obj/kernel.asm	/^c01010d5:	5f                   	pop    %edi$/;"	l
c01010d6	obj/kernel.asm	/^c01010d6:	5d                   	pop    %ebp$/;"	l
c01010d7	obj/kernel.asm	/^c01010d7:	c3                   	ret    $/;"	l
c01010d8	obj/kernel.asm	/^c01010d8 <ide_device_valid>:$/;"	l
c01010d8	obj/kernel.asm	/^c01010d8:	55                   	push   %ebp$/;"	l
c01010d9	obj/kernel.asm	/^c01010d9:	89 e5                	mov    %esp,%ebp$/;"	l
c01010db	obj/kernel.asm	/^c01010db:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01010de	obj/kernel.asm	/^c01010de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01010e1	obj/kernel.asm	/^c01010e1:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c01010e5	obj/kernel.asm	/^c01010e5:	66 83 7d fc 03       	cmpw   $0x3,-0x4(%ebp)$/;"	l
c01010ea	obj/kernel.asm	/^c01010ea:	77 25                	ja     c0101111 <ide_device_valid+0x39>$/;"	l
c01010ec	obj/kernel.asm	/^c01010ec:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c01010f0	obj/kernel.asm	/^c01010f0:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01010f3	obj/kernel.asm	/^c01010f3:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01010fa	obj/kernel.asm	/^c01010fa:	29 c2                	sub    %eax,%edx$/;"	l
c01010fc	obj/kernel.asm	/^c01010fc:	89 d0                	mov    %edx,%eax$/;"	l
c01010fe	obj/kernel.asm	/^c01010fe:	05 00 18 1c c0       	add    $0xc01c1800,%eax$/;"	l
c0101103	obj/kernel.asm	/^c0101103:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101106	obj/kernel.asm	/^c0101106:	84 c0                	test   %al,%al$/;"	l
c0101108	obj/kernel.asm	/^c0101108:	74 07                	je     c0101111 <ide_device_valid+0x39>$/;"	l
c010110a	obj/kernel.asm	/^c010110a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010110f	obj/kernel.asm	/^c010110f:	eb 05                	jmp    c0101116 <ide_device_valid+0x3e>$/;"	l
c0101111	obj/kernel.asm	/^c0101111:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101116	obj/kernel.asm	/^c0101116:	c9                   	leave  $/;"	l
c0101117	obj/kernel.asm	/^c0101117:	c3                   	ret    $/;"	l
c0101118	obj/kernel.asm	/^c0101118 <ide_device_size>:$/;"	l
c0101118	obj/kernel.asm	/^c0101118:	55                   	push   %ebp$/;"	l
c0101119	obj/kernel.asm	/^c0101119:	89 e5                	mov    %esp,%ebp$/;"	l
c010111b	obj/kernel.asm	/^c010111b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010111e	obj/kernel.asm	/^c010111e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101121	obj/kernel.asm	/^c0101121:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c0101125	obj/kernel.asm	/^c0101125:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101129	obj/kernel.asm	/^c0101129:	50                   	push   %eax$/;"	l
c010112a	obj/kernel.asm	/^c010112a:	e8 a9 ff ff ff       	call   c01010d8 <ide_device_valid>$/;"	l
c010112f	obj/kernel.asm	/^c010112f:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101132	obj/kernel.asm	/^c0101132:	85 c0                	test   %eax,%eax$/;"	l
c0101134	obj/kernel.asm	/^c0101134:	74 1c                	je     c0101152 <ide_device_size+0x3a>$/;"	l
c0101136	obj/kernel.asm	/^c0101136:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c010113a	obj/kernel.asm	/^c010113a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010113d	obj/kernel.asm	/^c010113d:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101144	obj/kernel.asm	/^c0101144:	29 c2                	sub    %eax,%edx$/;"	l
c0101146	obj/kernel.asm	/^c0101146:	89 d0                	mov    %edx,%eax$/;"	l
c0101148	obj/kernel.asm	/^c0101148:	05 00 18 1c c0       	add    $0xc01c1800,%eax$/;"	l
c010114d	obj/kernel.asm	/^c010114d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0101150	obj/kernel.asm	/^c0101150:	eb 05                	jmp    c0101157 <ide_device_size+0x3f>$/;"	l
c0101152	obj/kernel.asm	/^c0101152:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101157	obj/kernel.asm	/^c0101157:	c9                   	leave  $/;"	l
c0101158	obj/kernel.asm	/^c0101158:	c3                   	ret    $/;"	l
c0101159	obj/kernel.asm	/^c0101159 <ide_read_secs>:$/;"	l
c0101159	obj/kernel.asm	/^c0101159:	55                   	push   %ebp$/;"	l
c010115a	obj/kernel.asm	/^c010115a:	89 e5                	mov    %esp,%ebp$/;"	l
c010115c	obj/kernel.asm	/^c010115c:	57                   	push   %edi$/;"	l
c010115d	obj/kernel.asm	/^c010115d:	53                   	push   %ebx$/;"	l
c010115e	obj/kernel.asm	/^c010115e:	83 ec 40             	sub    $0x40,%esp$/;"	l
c0101161	obj/kernel.asm	/^c0101161:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101164	obj/kernel.asm	/^c0101164:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101168	obj/kernel.asm	/^c0101168:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c010116f	obj/kernel.asm	/^c010116f:	77 25                	ja     c0101196 <ide_read_secs+0x3d>$/;"	l
c0101171	obj/kernel.asm	/^c0101171:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c0101176	obj/kernel.asm	/^c0101176:	77 1e                	ja     c0101196 <ide_read_secs+0x3d>$/;"	l
c0101178	obj/kernel.asm	/^c0101178:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c010117c	obj/kernel.asm	/^c010117c:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010117f	obj/kernel.asm	/^c010117f:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101186	obj/kernel.asm	/^c0101186:	29 c2                	sub    %eax,%edx$/;"	l
c0101188	obj/kernel.asm	/^c0101188:	89 d0                	mov    %edx,%eax$/;"	l
c010118a	obj/kernel.asm	/^c010118a:	05 00 18 1c c0       	add    $0xc01c1800,%eax$/;"	l
c010118f	obj/kernel.asm	/^c010118f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101192	obj/kernel.asm	/^c0101192:	84 c0                	test   %al,%al$/;"	l
c0101194	obj/kernel.asm	/^c0101194:	75 19                	jne    c01011af <ide_read_secs+0x56>$/;"	l
c0101196	obj/kernel.asm	/^c0101196:	68 2c cf 10 c0       	push   $0xc010cf2c$/;"	l
c010119b	obj/kernel.asm	/^c010119b:	68 e7 ce 10 c0       	push   $0xc010cee7$/;"	l
c01011a0	obj/kernel.asm	/^c01011a0:	68 9f 00 00 00       	push   $0x9f$/;"	l
c01011a5	obj/kernel.asm	/^c01011a5:	68 fc ce 10 c0       	push   $0xc010cefc$/;"	l
c01011aa	obj/kernel.asm	/^c01011aa:	e8 30 f2 ff ff       	call   c01003df <__panic>$/;"	l
c01011af	obj/kernel.asm	/^c01011af:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c01011b6	obj/kernel.asm	/^c01011b6:	77 0f                	ja     c01011c7 <ide_read_secs+0x6e>$/;"	l
c01011b8	obj/kernel.asm	/^c01011b8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01011bb	obj/kernel.asm	/^c01011bb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01011be	obj/kernel.asm	/^c01011be:	01 d0                	add    %edx,%eax$/;"	l
c01011c0	obj/kernel.asm	/^c01011c0:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c01011c5	obj/kernel.asm	/^c01011c5:	76 19                	jbe    c01011e0 <ide_read_secs+0x87>$/;"	l
c01011c7	obj/kernel.asm	/^c01011c7:	68 54 cf 10 c0       	push   $0xc010cf54$/;"	l
c01011cc	obj/kernel.asm	/^c01011cc:	68 e7 ce 10 c0       	push   $0xc010cee7$/;"	l
c01011d1	obj/kernel.asm	/^c01011d1:	68 a0 00 00 00       	push   $0xa0$/;"	l
c01011d6	obj/kernel.asm	/^c01011d6:	68 fc ce 10 c0       	push   $0xc010cefc$/;"	l
c01011db	obj/kernel.asm	/^c01011db:	e8 ff f1 ff ff       	call   c01003df <__panic>$/;"	l
c01011e0	obj/kernel.asm	/^c01011e0:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01011e4	obj/kernel.asm	/^c01011e4:	66 d1 e8             	shr    %ax$/;"	l
c01011e7	obj/kernel.asm	/^c01011e7:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01011ea	obj/kernel.asm	/^c01011ea:	0f b7 04 85 9c ce 10 	movzwl -0x3fef3164(,%eax,4),%eax$/;"	l
c01011f1	obj/kernel.asm	/^c01011f1:	c0 $/;"	l
c01011f2	obj/kernel.asm	/^c01011f2:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c01011f6	obj/kernel.asm	/^c01011f6:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01011fa	obj/kernel.asm	/^c01011fa:	66 d1 e8             	shr    %ax$/;"	l
c01011fd	obj/kernel.asm	/^c01011fd:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101200	obj/kernel.asm	/^c0101200:	0f b7 04 85 9e ce 10 	movzwl -0x3fef3162(,%eax,4),%eax$/;"	l
c0101207	obj/kernel.asm	/^c0101207:	c0 $/;"	l
c0101208	obj/kernel.asm	/^c0101208:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c010120c	obj/kernel.asm	/^c010120c:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101210	obj/kernel.asm	/^c0101210:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101213	obj/kernel.asm	/^c0101213:	6a 00                	push   $0x0$/;"	l
c0101215	obj/kernel.asm	/^c0101215:	50                   	push   %eax$/;"	l
c0101216	obj/kernel.asm	/^c0101216:	e8 60 fb ff ff       	call   c0100d7b <ide_wait_ready>$/;"	l
c010121b	obj/kernel.asm	/^c010121b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010121e	obj/kernel.asm	/^c010121e:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101222	obj/kernel.asm	/^c0101222:	83 c0 02             	add    $0x2,%eax$/;"	l
c0101225	obj/kernel.asm	/^c0101225:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101228	obj/kernel.asm	/^c0101228:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c010122c	obj/kernel.asm	/^c010122c:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c0101230	obj/kernel.asm	/^c0101230:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101234	obj/kernel.asm	/^c0101234:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101238	obj/kernel.asm	/^c0101238:	ee                   	out    %al,(%dx)$/;"	l
c0101239	obj/kernel.asm	/^c0101239:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010123c	obj/kernel.asm	/^c010123c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010123f	obj/kernel.asm	/^c010123f:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101243	obj/kernel.asm	/^c0101243:	83 c2 02             	add    $0x2,%edx$/;"	l
c0101246	obj/kernel.asm	/^c0101246:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101249	obj/kernel.asm	/^c0101249:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c010124d	obj/kernel.asm	/^c010124d:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c0101250	obj/kernel.asm	/^c0101250:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101254	obj/kernel.asm	/^c0101254:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101258	obj/kernel.asm	/^c0101258:	ee                   	out    %al,(%dx)$/;"	l
c0101259	obj/kernel.asm	/^c0101259:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010125c	obj/kernel.asm	/^c010125c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010125f	obj/kernel.asm	/^c010125f:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101263	obj/kernel.asm	/^c0101263:	83 c2 03             	add    $0x3,%edx$/;"	l
c0101266	obj/kernel.asm	/^c0101266:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101269	obj/kernel.asm	/^c0101269:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c010126d	obj/kernel.asm	/^c010126d:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101270	obj/kernel.asm	/^c0101270:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101274	obj/kernel.asm	/^c0101274:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101278	obj/kernel.asm	/^c0101278:	ee                   	out    %al,(%dx)$/;"	l
c0101279	obj/kernel.asm	/^c0101279:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010127c	obj/kernel.asm	/^c010127c:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c010127f	obj/kernel.asm	/^c010127f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101282	obj/kernel.asm	/^c0101282:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101286	obj/kernel.asm	/^c0101286:	83 c2 04             	add    $0x4,%edx$/;"	l
c0101289	obj/kernel.asm	/^c0101289:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010128c	obj/kernel.asm	/^c010128c:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c0101290	obj/kernel.asm	/^c0101290:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c0101293	obj/kernel.asm	/^c0101293:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0101297	obj/kernel.asm	/^c0101297:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c010129b	obj/kernel.asm	/^c010129b:	ee                   	out    %al,(%dx)$/;"	l
c010129c	obj/kernel.asm	/^c010129c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010129f	obj/kernel.asm	/^c010129f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01012a2	obj/kernel.asm	/^c01012a2:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01012a5	obj/kernel.asm	/^c01012a5:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01012a9	obj/kernel.asm	/^c01012a9:	83 c2 05             	add    $0x5,%edx$/;"	l
c01012ac	obj/kernel.asm	/^c01012ac:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01012af	obj/kernel.asm	/^c01012af:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c01012b3	obj/kernel.asm	/^c01012b3:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c01012b6	obj/kernel.asm	/^c01012b6:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c01012ba	obj/kernel.asm	/^c01012ba:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c01012be	obj/kernel.asm	/^c01012be:	ee                   	out    %al,(%dx)$/;"	l
c01012bf	obj/kernel.asm	/^c01012bf:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01012c3	obj/kernel.asm	/^c01012c3:	83 e0 01             	and    $0x1,%eax$/;"	l
c01012c6	obj/kernel.asm	/^c01012c6:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c01012c9	obj/kernel.asm	/^c01012c9:	89 c2                	mov    %eax,%edx$/;"	l
c01012cb	obj/kernel.asm	/^c01012cb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01012ce	obj/kernel.asm	/^c01012ce:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c01012d1	obj/kernel.asm	/^c01012d1:	83 e0 0f             	and    $0xf,%eax$/;"	l
c01012d4	obj/kernel.asm	/^c01012d4:	09 d0                	or     %edx,%eax$/;"	l
c01012d6	obj/kernel.asm	/^c01012d6:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c01012d9	obj/kernel.asm	/^c01012d9:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01012dc	obj/kernel.asm	/^c01012dc:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01012e0	obj/kernel.asm	/^c01012e0:	83 c2 06             	add    $0x6,%edx$/;"	l
c01012e3	obj/kernel.asm	/^c01012e3:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01012e6	obj/kernel.asm	/^c01012e6:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c01012ea	obj/kernel.asm	/^c01012ea:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c01012ed	obj/kernel.asm	/^c01012ed:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c01012f1	obj/kernel.asm	/^c01012f1:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c01012f5	obj/kernel.asm	/^c01012f5:	ee                   	out    %al,(%dx)$/;"	l
c01012f6	obj/kernel.asm	/^c01012f6:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01012fa	obj/kernel.asm	/^c01012fa:	83 c0 07             	add    $0x7,%eax$/;"	l
c01012fd	obj/kernel.asm	/^c01012fd:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101300	obj/kernel.asm	/^c0101300:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c0101304	obj/kernel.asm	/^c0101304:	c6 45 d5 20          	movb   $0x20,-0x2b(%ebp)$/;"	l
c0101308	obj/kernel.asm	/^c0101308:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c010130c	obj/kernel.asm	/^c010130c:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0101310	obj/kernel.asm	/^c0101310:	ee                   	out    %al,(%dx)$/;"	l
c0101311	obj/kernel.asm	/^c0101311:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101318	obj/kernel.asm	/^c0101318:	eb 58                	jmp    c0101372 <ide_read_secs+0x219>$/;"	l
c010131a	obj/kernel.asm	/^c010131a:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010131e	obj/kernel.asm	/^c010131e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101321	obj/kernel.asm	/^c0101321:	6a 01                	push   $0x1$/;"	l
c0101323	obj/kernel.asm	/^c0101323:	50                   	push   %eax$/;"	l
c0101324	obj/kernel.asm	/^c0101324:	e8 52 fa ff ff       	call   c0100d7b <ide_wait_ready>$/;"	l
c0101329	obj/kernel.asm	/^c0101329:	83 c4 10             	add    $0x10,%esp$/;"	l
c010132c	obj/kernel.asm	/^c010132c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010132f	obj/kernel.asm	/^c010132f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101333	obj/kernel.asm	/^c0101333:	74 02                	je     c0101337 <ide_read_secs+0x1de>$/;"	l
c0101335	obj/kernel.asm	/^c0101335:	eb 41                	jmp    c0101378 <ide_read_secs+0x21f>$/;"	l
c0101337	obj/kernel.asm	/^c0101337:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010133b	obj/kernel.asm	/^c010133b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010133e	obj/kernel.asm	/^c010133e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101341	obj/kernel.asm	/^c0101341:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0101344	obj/kernel.asm	/^c0101344:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c010134b	obj/kernel.asm	/^c010134b:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010134e	obj/kernel.asm	/^c010134e:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c0101351	obj/kernel.asm	/^c0101351:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0101354	obj/kernel.asm	/^c0101354:	89 cb                	mov    %ecx,%ebx$/;"	l
c0101356	obj/kernel.asm	/^c0101356:	89 df                	mov    %ebx,%edi$/;"	l
c0101358	obj/kernel.asm	/^c0101358:	89 c1                	mov    %eax,%ecx$/;"	l
c010135a	obj/kernel.asm	/^c010135a:	fc                   	cld    $/;"	l
c010135b	obj/kernel.asm	/^c010135b:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c010135d	obj/kernel.asm	/^c010135d:	89 c8                	mov    %ecx,%eax$/;"	l
c010135f	obj/kernel.asm	/^c010135f:	89 fb                	mov    %edi,%ebx$/;"	l
c0101361	obj/kernel.asm	/^c0101361:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c0101364	obj/kernel.asm	/^c0101364:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0101367	obj/kernel.asm	/^c0101367:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c010136b	obj/kernel.asm	/^c010136b:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c0101372	obj/kernel.asm	/^c0101372:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0101376	obj/kernel.asm	/^c0101376:	75 a2                	jne    c010131a <ide_read_secs+0x1c1>$/;"	l
c0101378	obj/kernel.asm	/^c0101378:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010137b	obj/kernel.asm	/^c010137b:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c010137e	obj/kernel.asm	/^c010137e:	5b                   	pop    %ebx$/;"	l
c010137f	obj/kernel.asm	/^c010137f:	5f                   	pop    %edi$/;"	l
c0101380	obj/kernel.asm	/^c0101380:	5d                   	pop    %ebp$/;"	l
c0101381	obj/kernel.asm	/^c0101381:	c3                   	ret    $/;"	l
c0101382	obj/kernel.asm	/^c0101382 <ide_write_secs>:$/;"	l
c0101382	obj/kernel.asm	/^c0101382:	55                   	push   %ebp$/;"	l
c0101383	obj/kernel.asm	/^c0101383:	89 e5                	mov    %esp,%ebp$/;"	l
c0101385	obj/kernel.asm	/^c0101385:	56                   	push   %esi$/;"	l
c0101386	obj/kernel.asm	/^c0101386:	53                   	push   %ebx$/;"	l
c0101387	obj/kernel.asm	/^c0101387:	83 ec 40             	sub    $0x40,%esp$/;"	l
c010138a	obj/kernel.asm	/^c010138a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010138d	obj/kernel.asm	/^c010138d:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101391	obj/kernel.asm	/^c0101391:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c0101398	obj/kernel.asm	/^c0101398:	77 25                	ja     c01013bf <ide_write_secs+0x3d>$/;"	l
c010139a	obj/kernel.asm	/^c010139a:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c010139f	obj/kernel.asm	/^c010139f:	77 1e                	ja     c01013bf <ide_write_secs+0x3d>$/;"	l
c01013a1	obj/kernel.asm	/^c01013a1:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01013a5	obj/kernel.asm	/^c01013a5:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01013a8	obj/kernel.asm	/^c01013a8:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01013af	obj/kernel.asm	/^c01013af:	29 c2                	sub    %eax,%edx$/;"	l
c01013b1	obj/kernel.asm	/^c01013b1:	89 d0                	mov    %edx,%eax$/;"	l
c01013b3	obj/kernel.asm	/^c01013b3:	05 00 18 1c c0       	add    $0xc01c1800,%eax$/;"	l
c01013b8	obj/kernel.asm	/^c01013b8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01013bb	obj/kernel.asm	/^c01013bb:	84 c0                	test   %al,%al$/;"	l
c01013bd	obj/kernel.asm	/^c01013bd:	75 19                	jne    c01013d8 <ide_write_secs+0x56>$/;"	l
c01013bf	obj/kernel.asm	/^c01013bf:	68 2c cf 10 c0       	push   $0xc010cf2c$/;"	l
c01013c4	obj/kernel.asm	/^c01013c4:	68 e7 ce 10 c0       	push   $0xc010cee7$/;"	l
c01013c9	obj/kernel.asm	/^c01013c9:	68 bc 00 00 00       	push   $0xbc$/;"	l
c01013ce	obj/kernel.asm	/^c01013ce:	68 fc ce 10 c0       	push   $0xc010cefc$/;"	l
c01013d3	obj/kernel.asm	/^c01013d3:	e8 07 f0 ff ff       	call   c01003df <__panic>$/;"	l
c01013d8	obj/kernel.asm	/^c01013d8:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c01013df	obj/kernel.asm	/^c01013df:	77 0f                	ja     c01013f0 <ide_write_secs+0x6e>$/;"	l
c01013e1	obj/kernel.asm	/^c01013e1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01013e4	obj/kernel.asm	/^c01013e4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01013e7	obj/kernel.asm	/^c01013e7:	01 d0                	add    %edx,%eax$/;"	l
c01013e9	obj/kernel.asm	/^c01013e9:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c01013ee	obj/kernel.asm	/^c01013ee:	76 19                	jbe    c0101409 <ide_write_secs+0x87>$/;"	l
c01013f0	obj/kernel.asm	/^c01013f0:	68 54 cf 10 c0       	push   $0xc010cf54$/;"	l
c01013f5	obj/kernel.asm	/^c01013f5:	68 e7 ce 10 c0       	push   $0xc010cee7$/;"	l
c01013fa	obj/kernel.asm	/^c01013fa:	68 bd 00 00 00       	push   $0xbd$/;"	l
c01013ff	obj/kernel.asm	/^c01013ff:	68 fc ce 10 c0       	push   $0xc010cefc$/;"	l
c0101404	obj/kernel.asm	/^c0101404:	e8 d6 ef ff ff       	call   c01003df <__panic>$/;"	l
c0101409	obj/kernel.asm	/^c0101409:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c010140d	obj/kernel.asm	/^c010140d:	66 d1 e8             	shr    %ax$/;"	l
c0101410	obj/kernel.asm	/^c0101410:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101413	obj/kernel.asm	/^c0101413:	0f b7 04 85 9c ce 10 	movzwl -0x3fef3164(,%eax,4),%eax$/;"	l
c010141a	obj/kernel.asm	/^c010141a:	c0 $/;"	l
c010141b	obj/kernel.asm	/^c010141b:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c010141f	obj/kernel.asm	/^c010141f:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101423	obj/kernel.asm	/^c0101423:	66 d1 e8             	shr    %ax$/;"	l
c0101426	obj/kernel.asm	/^c0101426:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101429	obj/kernel.asm	/^c0101429:	0f b7 04 85 9e ce 10 	movzwl -0x3fef3162(,%eax,4),%eax$/;"	l
c0101430	obj/kernel.asm	/^c0101430:	c0 $/;"	l
c0101431	obj/kernel.asm	/^c0101431:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c0101435	obj/kernel.asm	/^c0101435:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101439	obj/kernel.asm	/^c0101439:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010143c	obj/kernel.asm	/^c010143c:	6a 00                	push   $0x0$/;"	l
c010143e	obj/kernel.asm	/^c010143e:	50                   	push   %eax$/;"	l
c010143f	obj/kernel.asm	/^c010143f:	e8 37 f9 ff ff       	call   c0100d7b <ide_wait_ready>$/;"	l
c0101444	obj/kernel.asm	/^c0101444:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101447	obj/kernel.asm	/^c0101447:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c010144b	obj/kernel.asm	/^c010144b:	83 c0 02             	add    $0x2,%eax$/;"	l
c010144e	obj/kernel.asm	/^c010144e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101451	obj/kernel.asm	/^c0101451:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0101455	obj/kernel.asm	/^c0101455:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c0101459	obj/kernel.asm	/^c0101459:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c010145d	obj/kernel.asm	/^c010145d:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101461	obj/kernel.asm	/^c0101461:	ee                   	out    %al,(%dx)$/;"	l
c0101462	obj/kernel.asm	/^c0101462:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101465	obj/kernel.asm	/^c0101465:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101468	obj/kernel.asm	/^c0101468:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010146c	obj/kernel.asm	/^c010146c:	83 c2 02             	add    $0x2,%edx$/;"	l
c010146f	obj/kernel.asm	/^c010146f:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101472	obj/kernel.asm	/^c0101472:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c0101476	obj/kernel.asm	/^c0101476:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c0101479	obj/kernel.asm	/^c0101479:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c010147d	obj/kernel.asm	/^c010147d:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101481	obj/kernel.asm	/^c0101481:	ee                   	out    %al,(%dx)$/;"	l
c0101482	obj/kernel.asm	/^c0101482:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101485	obj/kernel.asm	/^c0101485:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101488	obj/kernel.asm	/^c0101488:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010148c	obj/kernel.asm	/^c010148c:	83 c2 03             	add    $0x3,%edx$/;"	l
c010148f	obj/kernel.asm	/^c010148f:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101492	obj/kernel.asm	/^c0101492:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101496	obj/kernel.asm	/^c0101496:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101499	obj/kernel.asm	/^c0101499:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c010149d	obj/kernel.asm	/^c010149d:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01014a1	obj/kernel.asm	/^c01014a1:	ee                   	out    %al,(%dx)$/;"	l
c01014a2	obj/kernel.asm	/^c01014a2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01014a5	obj/kernel.asm	/^c01014a5:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c01014a8	obj/kernel.asm	/^c01014a8:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01014ab	obj/kernel.asm	/^c01014ab:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01014af	obj/kernel.asm	/^c01014af:	83 c2 04             	add    $0x4,%edx$/;"	l
c01014b2	obj/kernel.asm	/^c01014b2:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01014b5	obj/kernel.asm	/^c01014b5:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c01014b9	obj/kernel.asm	/^c01014b9:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c01014bc	obj/kernel.asm	/^c01014bc:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01014c0	obj/kernel.asm	/^c01014c0:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c01014c4	obj/kernel.asm	/^c01014c4:	ee                   	out    %al,(%dx)$/;"	l
c01014c5	obj/kernel.asm	/^c01014c5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01014c8	obj/kernel.asm	/^c01014c8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01014cb	obj/kernel.asm	/^c01014cb:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01014ce	obj/kernel.asm	/^c01014ce:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01014d2	obj/kernel.asm	/^c01014d2:	83 c2 05             	add    $0x5,%edx$/;"	l
c01014d5	obj/kernel.asm	/^c01014d5:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01014d8	obj/kernel.asm	/^c01014d8:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c01014dc	obj/kernel.asm	/^c01014dc:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c01014df	obj/kernel.asm	/^c01014df:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c01014e3	obj/kernel.asm	/^c01014e3:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c01014e7	obj/kernel.asm	/^c01014e7:	ee                   	out    %al,(%dx)$/;"	l
c01014e8	obj/kernel.asm	/^c01014e8:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01014ec	obj/kernel.asm	/^c01014ec:	83 e0 01             	and    $0x1,%eax$/;"	l
c01014ef	obj/kernel.asm	/^c01014ef:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c01014f2	obj/kernel.asm	/^c01014f2:	89 c2                	mov    %eax,%edx$/;"	l
c01014f4	obj/kernel.asm	/^c01014f4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01014f7	obj/kernel.asm	/^c01014f7:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c01014fa	obj/kernel.asm	/^c01014fa:	83 e0 0f             	and    $0xf,%eax$/;"	l
c01014fd	obj/kernel.asm	/^c01014fd:	09 d0                	or     %edx,%eax$/;"	l
c01014ff	obj/kernel.asm	/^c01014ff:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0101502	obj/kernel.asm	/^c0101502:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101505	obj/kernel.asm	/^c0101505:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101509	obj/kernel.asm	/^c0101509:	83 c2 06             	add    $0x6,%edx$/;"	l
c010150c	obj/kernel.asm	/^c010150c:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010150f	obj/kernel.asm	/^c010150f:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c0101513	obj/kernel.asm	/^c0101513:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c0101516	obj/kernel.asm	/^c0101516:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c010151a	obj/kernel.asm	/^c010151a:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c010151e	obj/kernel.asm	/^c010151e:	ee                   	out    %al,(%dx)$/;"	l
c010151f	obj/kernel.asm	/^c010151f:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101523	obj/kernel.asm	/^c0101523:	83 c0 07             	add    $0x7,%eax$/;"	l
c0101526	obj/kernel.asm	/^c0101526:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101529	obj/kernel.asm	/^c0101529:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c010152d	obj/kernel.asm	/^c010152d:	c6 45 d5 30          	movb   $0x30,-0x2b(%ebp)$/;"	l
c0101531	obj/kernel.asm	/^c0101531:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0101535	obj/kernel.asm	/^c0101535:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0101539	obj/kernel.asm	/^c0101539:	ee                   	out    %al,(%dx)$/;"	l
c010153a	obj/kernel.asm	/^c010153a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101541	obj/kernel.asm	/^c0101541:	eb 58                	jmp    c010159b <ide_write_secs+0x219>$/;"	l
c0101543	obj/kernel.asm	/^c0101543:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101547	obj/kernel.asm	/^c0101547:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010154a	obj/kernel.asm	/^c010154a:	6a 01                	push   $0x1$/;"	l
c010154c	obj/kernel.asm	/^c010154c:	50                   	push   %eax$/;"	l
c010154d	obj/kernel.asm	/^c010154d:	e8 29 f8 ff ff       	call   c0100d7b <ide_wait_ready>$/;"	l
c0101552	obj/kernel.asm	/^c0101552:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101555	obj/kernel.asm	/^c0101555:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101558	obj/kernel.asm	/^c0101558:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010155c	obj/kernel.asm	/^c010155c:	74 02                	je     c0101560 <ide_write_secs+0x1de>$/;"	l
c010155e	obj/kernel.asm	/^c010155e:	eb 41                	jmp    c01015a1 <ide_write_secs+0x21f>$/;"	l
c0101560	obj/kernel.asm	/^c0101560:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101564	obj/kernel.asm	/^c0101564:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0101567	obj/kernel.asm	/^c0101567:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010156a	obj/kernel.asm	/^c010156a:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010156d	obj/kernel.asm	/^c010156d:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c0101574	obj/kernel.asm	/^c0101574:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0101577	obj/kernel.asm	/^c0101577:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c010157a	obj/kernel.asm	/^c010157a:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010157d	obj/kernel.asm	/^c010157d:	89 cb                	mov    %ecx,%ebx$/;"	l
c010157f	obj/kernel.asm	/^c010157f:	89 de                	mov    %ebx,%esi$/;"	l
c0101581	obj/kernel.asm	/^c0101581:	89 c1                	mov    %eax,%ecx$/;"	l
c0101583	obj/kernel.asm	/^c0101583:	fc                   	cld    $/;"	l
c0101584	obj/kernel.asm	/^c0101584:	f2 6f                	repnz outsl %ds:(%esi),(%dx)$/;"	l
c0101586	obj/kernel.asm	/^c0101586:	89 c8                	mov    %ecx,%eax$/;"	l
c0101588	obj/kernel.asm	/^c0101588:	89 f3                	mov    %esi,%ebx$/;"	l
c010158a	obj/kernel.asm	/^c010158a:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c010158d	obj/kernel.asm	/^c010158d:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0101590	obj/kernel.asm	/^c0101590:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0101594	obj/kernel.asm	/^c0101594:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c010159b	obj/kernel.asm	/^c010159b:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010159f	obj/kernel.asm	/^c010159f:	75 a2                	jne    c0101543 <ide_write_secs+0x1c1>$/;"	l
c01015a1	obj/kernel.asm	/^c01015a1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01015a4	obj/kernel.asm	/^c01015a4:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c01015a7	obj/kernel.asm	/^c01015a7:	5b                   	pop    %ebx$/;"	l
c01015a8	obj/kernel.asm	/^c01015a8:	5e                   	pop    %esi$/;"	l
c01015a9	obj/kernel.asm	/^c01015a9:	5d                   	pop    %ebp$/;"	l
c01015aa	obj/kernel.asm	/^c01015aa:	c3                   	ret    $/;"	l
c01015ab	obj/kernel.asm	/^c01015ab <clock_init>:$/;"	l
c01015ab	obj/kernel.asm	/^c01015ab:	55                   	push   %ebp$/;"	l
c01015ac	obj/kernel.asm	/^c01015ac:	89 e5                	mov    %esp,%ebp$/;"	l
c01015ae	obj/kernel.asm	/^c01015ae:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01015b1	obj/kernel.asm	/^c01015b1:	66 c7 45 f6 43 00    	movw   $0x43,-0xa(%ebp)$/;"	l
c01015b7	obj/kernel.asm	/^c01015b7:	c6 45 f5 34          	movb   $0x34,-0xb(%ebp)$/;"	l
c01015bb	obj/kernel.asm	/^c01015bb:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c01015bf	obj/kernel.asm	/^c01015bf:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c01015c3	obj/kernel.asm	/^c01015c3:	ee                   	out    %al,(%dx)$/;"	l
c01015c4	obj/kernel.asm	/^c01015c4:	66 c7 45 f2 40 00    	movw   $0x40,-0xe(%ebp)$/;"	l
c01015ca	obj/kernel.asm	/^c01015ca:	c6 45 f1 9c          	movb   $0x9c,-0xf(%ebp)$/;"	l
c01015ce	obj/kernel.asm	/^c01015ce:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01015d2	obj/kernel.asm	/^c01015d2:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01015d6	obj/kernel.asm	/^c01015d6:	ee                   	out    %al,(%dx)$/;"	l
c01015d7	obj/kernel.asm	/^c01015d7:	66 c7 45 ee 40 00    	movw   $0x40,-0x12(%ebp)$/;"	l
c01015dd	obj/kernel.asm	/^c01015dd:	c6 45 ed 2e          	movb   $0x2e,-0x13(%ebp)$/;"	l
c01015e1	obj/kernel.asm	/^c01015e1:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01015e5	obj/kernel.asm	/^c01015e5:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01015e9	obj/kernel.asm	/^c01015e9:	ee                   	out    %al,(%dx)$/;"	l
c01015ea	obj/kernel.asm	/^c01015ea:	c7 05 38 45 1c c0 00 	movl   $0x0,0xc01c4538$/;"	l
c01015f1	obj/kernel.asm	/^c01015f1:	00 00 00 $/;"	l
c01015f4	obj/kernel.asm	/^c01015f4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01015f7	obj/kernel.asm	/^c01015f7:	68 8e cf 10 c0       	push   $0xc010cf8e$/;"	l
c01015fc	obj/kernel.asm	/^c01015fc:	e8 79 ec ff ff       	call   c010027a <cprintf>$/;"	l
c0101601	obj/kernel.asm	/^c0101601:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101604	obj/kernel.asm	/^c0101604:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101607	obj/kernel.asm	/^c0101607:	6a 00                	push   $0x0$/;"	l
c0101609	obj/kernel.asm	/^c0101609:	e8 26 09 00 00       	call   c0101f34 <pic_enable>$/;"	l
c010160e	obj/kernel.asm	/^c010160e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101611	obj/kernel.asm	/^c0101611:	c9                   	leave  $/;"	l
c0101612	obj/kernel.asm	/^c0101612:	c3                   	ret    $/;"	l
c0101613	obj/kernel.asm	/^c0101613 <__intr_save>:$/;"	l
c0101613	obj/kernel.asm	/^c0101613:	55                   	push   %ebp$/;"	l
c0101614	obj/kernel.asm	/^c0101614:	89 e5                	mov    %esp,%ebp$/;"	l
c0101616	obj/kernel.asm	/^c0101616:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101619	obj/kernel.asm	/^c0101619:	9c                   	pushf  $/;"	l
c010161a	obj/kernel.asm	/^c010161a:	58                   	pop    %eax$/;"	l
c010161b	obj/kernel.asm	/^c010161b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010161e	obj/kernel.asm	/^c010161e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101621	obj/kernel.asm	/^c0101621:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0101626	obj/kernel.asm	/^c0101626:	85 c0                	test   %eax,%eax$/;"	l
c0101628	obj/kernel.asm	/^c0101628:	74 0c                	je     c0101636 <__intr_save+0x23>$/;"	l
c010162a	obj/kernel.asm	/^c010162a:	e8 73 0a 00 00       	call   c01020a2 <intr_disable>$/;"	l
c010162f	obj/kernel.asm	/^c010162f:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0101634	obj/kernel.asm	/^c0101634:	eb 05                	jmp    c010163b <__intr_save+0x28>$/;"	l
c0101636	obj/kernel.asm	/^c0101636:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010163b	obj/kernel.asm	/^c010163b:	c9                   	leave  $/;"	l
c010163c	obj/kernel.asm	/^c010163c:	c3                   	ret    $/;"	l
c010163d	obj/kernel.asm	/^c010163d <__intr_restore>:$/;"	l
c010163d	obj/kernel.asm	/^c010163d:	55                   	push   %ebp$/;"	l
c010163e	obj/kernel.asm	/^c010163e:	89 e5                	mov    %esp,%ebp$/;"	l
c0101640	obj/kernel.asm	/^c0101640:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101643	obj/kernel.asm	/^c0101643:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0101647	obj/kernel.asm	/^c0101647:	74 05                	je     c010164e <__intr_restore+0x11>$/;"	l
c0101649	obj/kernel.asm	/^c0101649:	e8 4e 0a 00 00       	call   c010209c <intr_enable>$/;"	l
c010164e	obj/kernel.asm	/^c010164e:	c9                   	leave  $/;"	l
c010164f	obj/kernel.asm	/^c010164f:	c3                   	ret    $/;"	l
c0101650	obj/kernel.asm	/^c0101650 <delay>:$/;"	l
c0101650	obj/kernel.asm	/^c0101650:	55                   	push   %ebp$/;"	l
c0101651	obj/kernel.asm	/^c0101651:	89 e5                	mov    %esp,%ebp$/;"	l
c0101653	obj/kernel.asm	/^c0101653:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101656	obj/kernel.asm	/^c0101656:	66 c7 45 fe 84 00    	movw   $0x84,-0x2(%ebp)$/;"	l
c010165c	obj/kernel.asm	/^c010165c:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c0101660	obj/kernel.asm	/^c0101660:	89 c2                	mov    %eax,%edx$/;"	l
c0101662	obj/kernel.asm	/^c0101662:	ec                   	in     (%dx),%al$/;"	l
c0101663	obj/kernel.asm	/^c0101663:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c0101666	obj/kernel.asm	/^c0101666:	66 c7 45 fa 84 00    	movw   $0x84,-0x6(%ebp)$/;"	l
c010166c	obj/kernel.asm	/^c010166c:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101670	obj/kernel.asm	/^c0101670:	89 c2                	mov    %eax,%edx$/;"	l
c0101672	obj/kernel.asm	/^c0101672:	ec                   	in     (%dx),%al$/;"	l
c0101673	obj/kernel.asm	/^c0101673:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101676	obj/kernel.asm	/^c0101676:	66 c7 45 f6 84 00    	movw   $0x84,-0xa(%ebp)$/;"	l
c010167c	obj/kernel.asm	/^c010167c:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101680	obj/kernel.asm	/^c0101680:	89 c2                	mov    %eax,%edx$/;"	l
c0101682	obj/kernel.asm	/^c0101682:	ec                   	in     (%dx),%al$/;"	l
c0101683	obj/kernel.asm	/^c0101683:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101686	obj/kernel.asm	/^c0101686:	66 c7 45 f2 84 00    	movw   $0x84,-0xe(%ebp)$/;"	l
c010168c	obj/kernel.asm	/^c010168c:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101690	obj/kernel.asm	/^c0101690:	89 c2                	mov    %eax,%edx$/;"	l
c0101692	obj/kernel.asm	/^c0101692:	ec                   	in     (%dx),%al$/;"	l
c0101693	obj/kernel.asm	/^c0101693:	88 45 f1             	mov    %al,-0xf(%ebp)$/;"	l
c0101696	obj/kernel.asm	/^c0101696:	c9                   	leave  $/;"	l
c0101697	obj/kernel.asm	/^c0101697:	c3                   	ret    $/;"	l
c0101698	obj/kernel.asm	/^c0101698 <cga_init>:$/;"	l
c0101698	obj/kernel.asm	/^c0101698:	55                   	push   %ebp$/;"	l
c0101699	obj/kernel.asm	/^c0101699:	89 e5                	mov    %esp,%ebp$/;"	l
c010169b	obj/kernel.asm	/^c010169b:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010169e	obj/kernel.asm	/^c010169e:	c7 45 fc 00 80 0b c0 	movl   $0xc00b8000,-0x4(%ebp)$/;"	l
c01016a5	obj/kernel.asm	/^c01016a5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01016a8	obj/kernel.asm	/^c01016a8:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c01016ab	obj/kernel.asm	/^c01016ab:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c01016af	obj/kernel.asm	/^c01016af:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01016b2	obj/kernel.asm	/^c01016b2:	66 c7 00 5a a5       	movw   $0xa55a,(%eax)$/;"	l
c01016b7	obj/kernel.asm	/^c01016b7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01016ba	obj/kernel.asm	/^c01016ba:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c01016bd	obj/kernel.asm	/^c01016bd:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
c01016c1	obj/kernel.asm	/^c01016c1:	74 12                	je     c01016d5 <cga_init+0x3d>$/;"	l
c01016c3	obj/kernel.asm	/^c01016c3:	c7 45 fc 00 00 0b c0 	movl   $0xc00b0000,-0x4(%ebp)$/;"	l
c01016ca	obj/kernel.asm	/^c01016ca:	66 c7 05 06 19 1c c0 	movw   $0x3b4,0xc01c1906$/;"	l
c01016d1	obj/kernel.asm	/^c01016d1:	b4 03 $/;"	l
c01016d3	obj/kernel.asm	/^c01016d3:	eb 13                	jmp    c01016e8 <cga_init+0x50>$/;"	l
c01016d5	obj/kernel.asm	/^c01016d5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01016d8	obj/kernel.asm	/^c01016d8:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c01016dc	obj/kernel.asm	/^c01016dc:	66 89 10             	mov    %dx,(%eax)$/;"	l
c01016df	obj/kernel.asm	/^c01016df:	66 c7 05 06 19 1c c0 	movw   $0x3d4,0xc01c1906$/;"	l
c01016e6	obj/kernel.asm	/^c01016e6:	d4 03 $/;"	d
c01016e8	obj/kernel.asm	/^c01016e8:	0f b7 05 06 19 1c c0 	movzwl 0xc01c1906,%eax$/;"	l
c01016ef	obj/kernel.asm	/^c01016ef:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01016f2	obj/kernel.asm	/^c01016f2:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c01016f6	obj/kernel.asm	/^c01016f6:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c01016fa	obj/kernel.asm	/^c01016fa:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01016fe	obj/kernel.asm	/^c01016fe:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101702	obj/kernel.asm	/^c0101702:	ee                   	out    %al,(%dx)$/;"	l
c0101703	obj/kernel.asm	/^c0101703:	0f b7 05 06 19 1c c0 	movzwl 0xc01c1906,%eax$/;"	l
c010170a	obj/kernel.asm	/^c010170a:	83 c0 01             	add    $0x1,%eax$/;"	l
c010170d	obj/kernel.asm	/^c010170d:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101710	obj/kernel.asm	/^c0101710:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0101714	obj/kernel.asm	/^c0101714:	0f b7 45 ee          	movzwl -0x12(%ebp),%eax$/;"	l
c0101718	obj/kernel.asm	/^c0101718:	89 c2                	mov    %eax,%edx$/;"	l
c010171a	obj/kernel.asm	/^c010171a:	ec                   	in     (%dx),%al$/;"	l
c010171b	obj/kernel.asm	/^c010171b:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c010171e	obj/kernel.asm	/^c010171e:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101722	obj/kernel.asm	/^c0101722:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101725	obj/kernel.asm	/^c0101725:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c0101728	obj/kernel.asm	/^c0101728:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010172b	obj/kernel.asm	/^c010172b:	0f b7 05 06 19 1c c0 	movzwl 0xc01c1906,%eax$/;"	l
c0101732	obj/kernel.asm	/^c0101732:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101735	obj/kernel.asm	/^c0101735:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0101739	obj/kernel.asm	/^c0101739:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c010173d	obj/kernel.asm	/^c010173d:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101741	obj/kernel.asm	/^c0101741:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101745	obj/kernel.asm	/^c0101745:	ee                   	out    %al,(%dx)$/;"	l
c0101746	obj/kernel.asm	/^c0101746:	0f b7 05 06 19 1c c0 	movzwl 0xc01c1906,%eax$/;"	l
c010174d	obj/kernel.asm	/^c010174d:	83 c0 01             	add    $0x1,%eax$/;"	l
c0101750	obj/kernel.asm	/^c0101750:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101753	obj/kernel.asm	/^c0101753:	66 89 45 e6          	mov    %ax,-0x1a(%ebp)$/;"	l
c0101757	obj/kernel.asm	/^c0101757:	0f b7 45 e6          	movzwl -0x1a(%ebp),%eax$/;"	l
c010175b	obj/kernel.asm	/^c010175b:	89 c2                	mov    %eax,%edx$/;"	l
c010175d	obj/kernel.asm	/^c010175d:	ec                   	in     (%dx),%al$/;"	l
c010175e	obj/kernel.asm	/^c010175e:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101761	obj/kernel.asm	/^c0101761:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101765	obj/kernel.asm	/^c0101765:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101768	obj/kernel.asm	/^c0101768:	09 45 f4             	or     %eax,-0xc(%ebp)$/;"	l
c010176b	obj/kernel.asm	/^c010176b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010176e	obj/kernel.asm	/^c010176e:	a3 00 19 1c c0       	mov    %eax,0xc01c1900$/;"	l
c0101773	obj/kernel.asm	/^c0101773:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101776	obj/kernel.asm	/^c0101776:	66 a3 04 19 1c c0    	mov    %ax,0xc01c1904$/;"	l
c010177c	obj/kernel.asm	/^c010177c:	c9                   	leave  $/;"	l
c010177d	obj/kernel.asm	/^c010177d:	c3                   	ret    $/;"	l
c010177e	obj/kernel.asm	/^c010177e <serial_init>:$/;"	l
c010177e	obj/kernel.asm	/^c010177e:	55                   	push   %ebp$/;"	l
c010177f	obj/kernel.asm	/^c010177f:	89 e5                	mov    %esp,%ebp$/;"	l
c0101781	obj/kernel.asm	/^c0101781:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0101784	obj/kernel.asm	/^c0101784:	66 c7 45 f6 fa 03    	movw   $0x3fa,-0xa(%ebp)$/;"	l
c010178a	obj/kernel.asm	/^c010178a:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)$/;"	l
c010178e	obj/kernel.asm	/^c010178e:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101792	obj/kernel.asm	/^c0101792:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101796	obj/kernel.asm	/^c0101796:	ee                   	out    %al,(%dx)$/;"	l
c0101797	obj/kernel.asm	/^c0101797:	66 c7 45 f2 fb 03    	movw   $0x3fb,-0xe(%ebp)$/;"	l
c010179d	obj/kernel.asm	/^c010179d:	c6 45 f1 80          	movb   $0x80,-0xf(%ebp)$/;"	l
c01017a1	obj/kernel.asm	/^c01017a1:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01017a5	obj/kernel.asm	/^c01017a5:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01017a9	obj/kernel.asm	/^c01017a9:	ee                   	out    %al,(%dx)$/;"	l
c01017aa	obj/kernel.asm	/^c01017aa:	66 c7 45 ee f8 03    	movw   $0x3f8,-0x12(%ebp)$/;"	l
c01017b0	obj/kernel.asm	/^c01017b0:	c6 45 ed 0c          	movb   $0xc,-0x13(%ebp)$/;"	l
c01017b4	obj/kernel.asm	/^c01017b4:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01017b8	obj/kernel.asm	/^c01017b8:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01017bc	obj/kernel.asm	/^c01017bc:	ee                   	out    %al,(%dx)$/;"	l
c01017bd	obj/kernel.asm	/^c01017bd:	66 c7 45 ea f9 03    	movw   $0x3f9,-0x16(%ebp)$/;"	l
c01017c3	obj/kernel.asm	/^c01017c3:	c6 45 e9 00          	movb   $0x0,-0x17(%ebp)$/;"	l
c01017c7	obj/kernel.asm	/^c01017c7:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c01017cb	obj/kernel.asm	/^c01017cb:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c01017cf	obj/kernel.asm	/^c01017cf:	ee                   	out    %al,(%dx)$/;"	l
c01017d0	obj/kernel.asm	/^c01017d0:	66 c7 45 e6 fb 03    	movw   $0x3fb,-0x1a(%ebp)$/;"	l
c01017d6	obj/kernel.asm	/^c01017d6:	c6 45 e5 03          	movb   $0x3,-0x1b(%ebp)$/;"	l
c01017da	obj/kernel.asm	/^c01017da:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c01017de	obj/kernel.asm	/^c01017de:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01017e2	obj/kernel.asm	/^c01017e2:	ee                   	out    %al,(%dx)$/;"	l
c01017e3	obj/kernel.asm	/^c01017e3:	66 c7 45 e2 fc 03    	movw   $0x3fc,-0x1e(%ebp)$/;"	l
c01017e9	obj/kernel.asm	/^c01017e9:	c6 45 e1 00          	movb   $0x0,-0x1f(%ebp)$/;"	l
c01017ed	obj/kernel.asm	/^c01017ed:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01017f1	obj/kernel.asm	/^c01017f1:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c01017f5	obj/kernel.asm	/^c01017f5:	ee                   	out    %al,(%dx)$/;"	l
c01017f6	obj/kernel.asm	/^c01017f6:	66 c7 45 de f9 03    	movw   $0x3f9,-0x22(%ebp)$/;"	l
c01017fc	obj/kernel.asm	/^c01017fc:	c6 45 dd 01          	movb   $0x1,-0x23(%ebp)$/;"	l
c0101800	obj/kernel.asm	/^c0101800:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0101804	obj/kernel.asm	/^c0101804:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0101808	obj/kernel.asm	/^c0101808:	ee                   	out    %al,(%dx)$/;"	l
c0101809	obj/kernel.asm	/^c0101809:	66 c7 45 da fd 03    	movw   $0x3fd,-0x26(%ebp)$/;"	l
c010180f	obj/kernel.asm	/^c010180f:	0f b7 45 da          	movzwl -0x26(%ebp),%eax$/;"	l
c0101813	obj/kernel.asm	/^c0101813:	89 c2                	mov    %eax,%edx$/;"	l
c0101815	obj/kernel.asm	/^c0101815:	ec                   	in     (%dx),%al$/;"	l
c0101816	obj/kernel.asm	/^c0101816:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c0101819	obj/kernel.asm	/^c0101819:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c010181d	obj/kernel.asm	/^c010181d:	3c ff                	cmp    $0xff,%al$/;"	l
c010181f	obj/kernel.asm	/^c010181f:	0f 95 c0             	setne  %al$/;"	l
c0101822	obj/kernel.asm	/^c0101822:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101825	obj/kernel.asm	/^c0101825:	a3 08 19 1c c0       	mov    %eax,0xc01c1908$/;"	l
c010182a	obj/kernel.asm	/^c010182a:	66 c7 45 d6 fa 03    	movw   $0x3fa,-0x2a(%ebp)$/;"	l
c0101830	obj/kernel.asm	/^c0101830:	0f b7 45 d6          	movzwl -0x2a(%ebp),%eax$/;"	l
c0101834	obj/kernel.asm	/^c0101834:	89 c2                	mov    %eax,%edx$/;"	l
c0101836	obj/kernel.asm	/^c0101836:	ec                   	in     (%dx),%al$/;"	l
c0101837	obj/kernel.asm	/^c0101837:	88 45 d5             	mov    %al,-0x2b(%ebp)$/;"	l
c010183a	obj/kernel.asm	/^c010183a:	66 c7 45 d2 f8 03    	movw   $0x3f8,-0x2e(%ebp)$/;"	l
c0101840	obj/kernel.asm	/^c0101840:	0f b7 45 d2          	movzwl -0x2e(%ebp),%eax$/;"	l
c0101844	obj/kernel.asm	/^c0101844:	89 c2                	mov    %eax,%edx$/;"	l
c0101846	obj/kernel.asm	/^c0101846:	ec                   	in     (%dx),%al$/;"	l
c0101847	obj/kernel.asm	/^c0101847:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c010184a	obj/kernel.asm	/^c010184a:	a1 08 19 1c c0       	mov    0xc01c1908,%eax$/;"	l
c010184f	obj/kernel.asm	/^c010184f:	85 c0                	test   %eax,%eax$/;"	l
c0101851	obj/kernel.asm	/^c0101851:	74 0d                	je     c0101860 <serial_init+0xe2>$/;"	l
c0101853	obj/kernel.asm	/^c0101853:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101856	obj/kernel.asm	/^c0101856:	6a 04                	push   $0x4$/;"	l
c0101858	obj/kernel.asm	/^c0101858:	e8 d7 06 00 00       	call   c0101f34 <pic_enable>$/;"	l
c010185d	obj/kernel.asm	/^c010185d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101860	obj/kernel.asm	/^c0101860:	c9                   	leave  $/;"	l
c0101861	obj/kernel.asm	/^c0101861:	c3                   	ret    $/;"	l
c0101862	obj/kernel.asm	/^c0101862 <lpt_putc_sub>:$/;"	l
c0101862	obj/kernel.asm	/^c0101862:	55                   	push   %ebp$/;"	l
c0101863	obj/kernel.asm	/^c0101863:	89 e5                	mov    %esp,%ebp$/;"	l
c0101865	obj/kernel.asm	/^c0101865:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0101868	obj/kernel.asm	/^c0101868:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010186f	obj/kernel.asm	/^c010186f:	eb 09                	jmp    c010187a <lpt_putc_sub+0x18>$/;"	l
c0101871	obj/kernel.asm	/^c0101871:	e8 da fd ff ff       	call   c0101650 <delay>$/;"	l
c0101876	obj/kernel.asm	/^c0101876:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010187a	obj/kernel.asm	/^c010187a:	66 c7 45 fa 79 03    	movw   $0x379,-0x6(%ebp)$/;"	l
c0101880	obj/kernel.asm	/^c0101880:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101884	obj/kernel.asm	/^c0101884:	89 c2                	mov    %eax,%edx$/;"	l
c0101886	obj/kernel.asm	/^c0101886:	ec                   	in     (%dx),%al$/;"	l
c0101887	obj/kernel.asm	/^c0101887:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c010188a	obj/kernel.asm	/^c010188a:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c010188e	obj/kernel.asm	/^c010188e:	84 c0                	test   %al,%al$/;"	l
c0101890	obj/kernel.asm	/^c0101890:	78 09                	js     c010189b <lpt_putc_sub+0x39>$/;"	l
c0101892	obj/kernel.asm	/^c0101892:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c0101899	obj/kernel.asm	/^c0101899:	7e d6                	jle    c0101871 <lpt_putc_sub+0xf>$/;"	l
c010189b	obj/kernel.asm	/^c010189b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010189e	obj/kernel.asm	/^c010189e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01018a1	obj/kernel.asm	/^c01018a1:	66 c7 45 f6 78 03    	movw   $0x378,-0xa(%ebp)$/;"	l
c01018a7	obj/kernel.asm	/^c01018a7:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c01018aa	obj/kernel.asm	/^c01018aa:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c01018ae	obj/kernel.asm	/^c01018ae:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c01018b2	obj/kernel.asm	/^c01018b2:	ee                   	out    %al,(%dx)$/;"	l
c01018b3	obj/kernel.asm	/^c01018b3:	66 c7 45 f2 7a 03    	movw   $0x37a,-0xe(%ebp)$/;"	l
c01018b9	obj/kernel.asm	/^c01018b9:	c6 45 f1 0d          	movb   $0xd,-0xf(%ebp)$/;"	l
c01018bd	obj/kernel.asm	/^c01018bd:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01018c1	obj/kernel.asm	/^c01018c1:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01018c5	obj/kernel.asm	/^c01018c5:	ee                   	out    %al,(%dx)$/;"	l
c01018c6	obj/kernel.asm	/^c01018c6:	66 c7 45 ee 7a 03    	movw   $0x37a,-0x12(%ebp)$/;"	l
c01018cc	obj/kernel.asm	/^c01018cc:	c6 45 ed 08          	movb   $0x8,-0x13(%ebp)$/;"	l
c01018d0	obj/kernel.asm	/^c01018d0:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01018d4	obj/kernel.asm	/^c01018d4:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01018d8	obj/kernel.asm	/^c01018d8:	ee                   	out    %al,(%dx)$/;"	l
c01018d9	obj/kernel.asm	/^c01018d9:	c9                   	leave  $/;"	l
c01018da	obj/kernel.asm	/^c01018da:	c3                   	ret    $/;"	l
c01018db	obj/kernel.asm	/^c01018db <lpt_putc>:$/;"	l
c01018db	obj/kernel.asm	/^c01018db:	55                   	push   %ebp$/;"	l
c01018dc	obj/kernel.asm	/^c01018dc:	89 e5                	mov    %esp,%ebp$/;"	l
c01018de	obj/kernel.asm	/^c01018de:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c01018e2	obj/kernel.asm	/^c01018e2:	74 0d                	je     c01018f1 <lpt_putc+0x16>$/;"	l
c01018e4	obj/kernel.asm	/^c01018e4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01018e7	obj/kernel.asm	/^c01018e7:	e8 76 ff ff ff       	call   c0101862 <lpt_putc_sub>$/;"	l
c01018ec	obj/kernel.asm	/^c01018ec:	83 c4 04             	add    $0x4,%esp$/;"	l
c01018ef	obj/kernel.asm	/^c01018ef:	eb 1e                	jmp    c010190f <lpt_putc+0x34>$/;"	l
c01018f1	obj/kernel.asm	/^c01018f1:	6a 08                	push   $0x8$/;"	l
c01018f3	obj/kernel.asm	/^c01018f3:	e8 6a ff ff ff       	call   c0101862 <lpt_putc_sub>$/;"	l
c01018f8	obj/kernel.asm	/^c01018f8:	83 c4 04             	add    $0x4,%esp$/;"	l
c01018fb	obj/kernel.asm	/^c01018fb:	6a 20                	push   $0x20$/;"	l
c01018fd	obj/kernel.asm	/^c01018fd:	e8 60 ff ff ff       	call   c0101862 <lpt_putc_sub>$/;"	l
c0101902	obj/kernel.asm	/^c0101902:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101905	obj/kernel.asm	/^c0101905:	6a 08                	push   $0x8$/;"	l
c0101907	obj/kernel.asm	/^c0101907:	e8 56 ff ff ff       	call   c0101862 <lpt_putc_sub>$/;"	l
c010190c	obj/kernel.asm	/^c010190c:	83 c4 04             	add    $0x4,%esp$/;"	l
c010190f	obj/kernel.asm	/^c010190f:	c9                   	leave  $/;"	l
c0101910	obj/kernel.asm	/^c0101910:	c3                   	ret    $/;"	l
c0101911	obj/kernel.asm	/^c0101911 <cga_putc>:$/;"	l
c0101911	obj/kernel.asm	/^c0101911:	55                   	push   %ebp$/;"	l
c0101912	obj/kernel.asm	/^c0101912:	89 e5                	mov    %esp,%ebp$/;"	l
c0101914	obj/kernel.asm	/^c0101914:	53                   	push   %ebx$/;"	l
c0101915	obj/kernel.asm	/^c0101915:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0101918	obj/kernel.asm	/^c0101918:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010191b	obj/kernel.asm	/^c010191b:	b0 00                	mov    $0x0,%al$/;"	l
c010191d	obj/kernel.asm	/^c010191d:	85 c0                	test   %eax,%eax$/;"	l
c010191f	obj/kernel.asm	/^c010191f:	75 07                	jne    c0101928 <cga_putc+0x17>$/;"	l
c0101921	obj/kernel.asm	/^c0101921:	81 4d 08 00 07 00 00 	orl    $0x700,0x8(%ebp)$/;"	l
c0101928	obj/kernel.asm	/^c0101928:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010192b	obj/kernel.asm	/^c010192b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010192e	obj/kernel.asm	/^c010192e:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
c0101931	obj/kernel.asm	/^c0101931:	74 4c                	je     c010197f <cga_putc+0x6e>$/;"	l
c0101933	obj/kernel.asm	/^c0101933:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
c0101936	obj/kernel.asm	/^c0101936:	74 57                	je     c010198f <cga_putc+0x7e>$/;"	l
c0101938	obj/kernel.asm	/^c0101938:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c010193b	obj/kernel.asm	/^c010193b:	0f 85 88 00 00 00    	jne    c01019c9 <cga_putc+0xb8>$/;"	l
c0101941	obj/kernel.asm	/^c0101941:	0f b7 05 04 19 1c c0 	movzwl 0xc01c1904,%eax$/;"	l
c0101948	obj/kernel.asm	/^c0101948:	66 85 c0             	test   %ax,%ax$/;"	l
c010194b	obj/kernel.asm	/^c010194b:	74 30                	je     c010197d <cga_putc+0x6c>$/;"	l
c010194d	obj/kernel.asm	/^c010194d:	0f b7 05 04 19 1c c0 	movzwl 0xc01c1904,%eax$/;"	l
c0101954	obj/kernel.asm	/^c0101954:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0101957	obj/kernel.asm	/^c0101957:	66 a3 04 19 1c c0    	mov    %ax,0xc01c1904$/;"	l
c010195d	obj/kernel.asm	/^c010195d:	a1 00 19 1c c0       	mov    0xc01c1900,%eax$/;"	l
c0101962	obj/kernel.asm	/^c0101962:	0f b7 15 04 19 1c c0 	movzwl 0xc01c1904,%edx$/;"	l
c0101969	obj/kernel.asm	/^c0101969:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010196c	obj/kernel.asm	/^c010196c:	01 d2                	add    %edx,%edx$/;"	l
c010196e	obj/kernel.asm	/^c010196e:	01 d0                	add    %edx,%eax$/;"	l
c0101970	obj/kernel.asm	/^c0101970:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0101973	obj/kernel.asm	/^c0101973:	b2 00                	mov    $0x0,%dl$/;"	l
c0101975	obj/kernel.asm	/^c0101975:	83 ca 20             	or     $0x20,%edx$/;"	l
c0101978	obj/kernel.asm	/^c0101978:	66 89 10             	mov    %dx,(%eax)$/;"	l
c010197b	obj/kernel.asm	/^c010197b:	eb 71                	jmp    c01019ee <cga_putc+0xdd>$/;"	l
c010197d	obj/kernel.asm	/^c010197d:	eb 6f                	jmp    c01019ee <cga_putc+0xdd>$/;"	l
c010197f	obj/kernel.asm	/^c010197f:	0f b7 05 04 19 1c c0 	movzwl 0xc01c1904,%eax$/;"	l
c0101986	obj/kernel.asm	/^c0101986:	83 c0 50             	add    $0x50,%eax$/;"	l
c0101989	obj/kernel.asm	/^c0101989:	66 a3 04 19 1c c0    	mov    %ax,0xc01c1904$/;"	l
c010198f	obj/kernel.asm	/^c010198f:	0f b7 1d 04 19 1c c0 	movzwl 0xc01c1904,%ebx$/;"	l
c0101996	obj/kernel.asm	/^c0101996:	0f b7 0d 04 19 1c c0 	movzwl 0xc01c1904,%ecx$/;"	l
c010199d	obj/kernel.asm	/^c010199d:	0f b7 c1             	movzwl %cx,%eax$/;"	l
c01019a0	obj/kernel.asm	/^c01019a0:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
c01019a6	obj/kernel.asm	/^c01019a6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01019a9	obj/kernel.asm	/^c01019a9:	89 c2                	mov    %eax,%edx$/;"	l
c01019ab	obj/kernel.asm	/^c01019ab:	66 c1 ea 06          	shr    $0x6,%dx$/;"	l
c01019af	obj/kernel.asm	/^c01019af:	89 d0                	mov    %edx,%eax$/;"	l
c01019b1	obj/kernel.asm	/^c01019b1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01019b4	obj/kernel.asm	/^c01019b4:	01 d0                	add    %edx,%eax$/;"	l
c01019b6	obj/kernel.asm	/^c01019b6:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c01019b9	obj/kernel.asm	/^c01019b9:	29 c1                	sub    %eax,%ecx$/;"	l
c01019bb	obj/kernel.asm	/^c01019bb:	89 ca                	mov    %ecx,%edx$/;"	l
c01019bd	obj/kernel.asm	/^c01019bd:	89 d8                	mov    %ebx,%eax$/;"	l
c01019bf	obj/kernel.asm	/^c01019bf:	29 d0                	sub    %edx,%eax$/;"	l
c01019c1	obj/kernel.asm	/^c01019c1:	66 a3 04 19 1c c0    	mov    %ax,0xc01c1904$/;"	l
c01019c7	obj/kernel.asm	/^c01019c7:	eb 25                	jmp    c01019ee <cga_putc+0xdd>$/;"	l
c01019c9	obj/kernel.asm	/^c01019c9:	8b 0d 00 19 1c c0    	mov    0xc01c1900,%ecx$/;"	l
c01019cf	obj/kernel.asm	/^c01019cf:	0f b7 05 04 19 1c c0 	movzwl 0xc01c1904,%eax$/;"	l
c01019d6	obj/kernel.asm	/^c01019d6:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01019d9	obj/kernel.asm	/^c01019d9:	66 89 15 04 19 1c c0 	mov    %dx,0xc01c1904$/;"	l
c01019e0	obj/kernel.asm	/^c01019e0:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01019e3	obj/kernel.asm	/^c01019e3:	01 c0                	add    %eax,%eax$/;"	l
c01019e5	obj/kernel.asm	/^c01019e5:	01 c8                	add    %ecx,%eax$/;"	l
c01019e7	obj/kernel.asm	/^c01019e7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01019ea	obj/kernel.asm	/^c01019ea:	66 89 10             	mov    %dx,(%eax)$/;"	l
c01019ed	obj/kernel.asm	/^c01019ed:	90                   	nop$/;"	l
c01019ee	obj/kernel.asm	/^c01019ee:	0f b7 05 04 19 1c c0 	movzwl 0xc01c1904,%eax$/;"	l
c01019f5	obj/kernel.asm	/^c01019f5:	66 3d cf 07          	cmp    $0x7cf,%ax$/;"	l
c01019f9	obj/kernel.asm	/^c01019f9:	76 59                	jbe    c0101a54 <cga_putc+0x143>$/;"	l
c01019fb	obj/kernel.asm	/^c01019fb:	a1 00 19 1c c0       	mov    0xc01c1900,%eax$/;"	l
c0101a00	obj/kernel.asm	/^c0101a00:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
c0101a06	obj/kernel.asm	/^c0101a06:	a1 00 19 1c c0       	mov    0xc01c1900,%eax$/;"	l
c0101a0b	obj/kernel.asm	/^c0101a0b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0101a0e	obj/kernel.asm	/^c0101a0e:	68 00 0f 00 00       	push   $0xf00$/;"	l
c0101a13	obj/kernel.asm	/^c0101a13:	52                   	push   %edx$/;"	l
c0101a14	obj/kernel.asm	/^c0101a14:	50                   	push   %eax$/;"	l
c0101a15	obj/kernel.asm	/^c0101a15:	e8 1e a9 00 00       	call   c010c338 <memmove>$/;"	l
c0101a1a	obj/kernel.asm	/^c0101a1a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101a1d	obj/kernel.asm	/^c0101a1d:	c7 45 f4 80 07 00 00 	movl   $0x780,-0xc(%ebp)$/;"	l
c0101a24	obj/kernel.asm	/^c0101a24:	eb 15                	jmp    c0101a3b <cga_putc+0x12a>$/;"	l
c0101a26	obj/kernel.asm	/^c0101a26:	a1 00 19 1c c0       	mov    0xc01c1900,%eax$/;"	l
c0101a2b	obj/kernel.asm	/^c0101a2b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0101a2e	obj/kernel.asm	/^c0101a2e:	01 d2                	add    %edx,%edx$/;"	l
c0101a30	obj/kernel.asm	/^c0101a30:	01 d0                	add    %edx,%eax$/;"	l
c0101a32	obj/kernel.asm	/^c0101a32:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
c0101a37	obj/kernel.asm	/^c0101a37:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0101a3b	obj/kernel.asm	/^c0101a3b:	81 7d f4 cf 07 00 00 	cmpl   $0x7cf,-0xc(%ebp)$/;"	l
c0101a42	obj/kernel.asm	/^c0101a42:	7e e2                	jle    c0101a26 <cga_putc+0x115>$/;"	l
c0101a44	obj/kernel.asm	/^c0101a44:	0f b7 05 04 19 1c c0 	movzwl 0xc01c1904,%eax$/;"	l
c0101a4b	obj/kernel.asm	/^c0101a4b:	83 e8 50             	sub    $0x50,%eax$/;"	l
c0101a4e	obj/kernel.asm	/^c0101a4e:	66 a3 04 19 1c c0    	mov    %ax,0xc01c1904$/;"	l
c0101a54	obj/kernel.asm	/^c0101a54:	0f b7 05 06 19 1c c0 	movzwl 0xc01c1906,%eax$/;"	l
c0101a5b	obj/kernel.asm	/^c0101a5b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101a5e	obj/kernel.asm	/^c0101a5e:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0101a62	obj/kernel.asm	/^c0101a62:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c0101a66	obj/kernel.asm	/^c0101a66:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0101a6a	obj/kernel.asm	/^c0101a6a:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101a6e	obj/kernel.asm	/^c0101a6e:	ee                   	out    %al,(%dx)$/;"	l
c0101a6f	obj/kernel.asm	/^c0101a6f:	0f b7 05 04 19 1c c0 	movzwl 0xc01c1904,%eax$/;"	l
c0101a76	obj/kernel.asm	/^c0101a76:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c0101a7a	obj/kernel.asm	/^c0101a7a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101a7d	obj/kernel.asm	/^c0101a7d:	0f b7 15 06 19 1c c0 	movzwl 0xc01c1906,%edx$/;"	l
c0101a84	obj/kernel.asm	/^c0101a84:	83 c2 01             	add    $0x1,%edx$/;"	l
c0101a87	obj/kernel.asm	/^c0101a87:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101a8a	obj/kernel.asm	/^c0101a8a:	66 89 55 ee          	mov    %dx,-0x12(%ebp)$/;"	l
c0101a8e	obj/kernel.asm	/^c0101a8e:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c0101a91	obj/kernel.asm	/^c0101a91:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101a95	obj/kernel.asm	/^c0101a95:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101a99	obj/kernel.asm	/^c0101a99:	ee                   	out    %al,(%dx)$/;"	l
c0101a9a	obj/kernel.asm	/^c0101a9a:	0f b7 05 06 19 1c c0 	movzwl 0xc01c1906,%eax$/;"	l
c0101aa1	obj/kernel.asm	/^c0101aa1:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101aa4	obj/kernel.asm	/^c0101aa4:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0101aa8	obj/kernel.asm	/^c0101aa8:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c0101aac	obj/kernel.asm	/^c0101aac:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101ab0	obj/kernel.asm	/^c0101ab0:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101ab4	obj/kernel.asm	/^c0101ab4:	ee                   	out    %al,(%dx)$/;"	l
c0101ab5	obj/kernel.asm	/^c0101ab5:	0f b7 05 04 19 1c c0 	movzwl 0xc01c1904,%eax$/;"	l
c0101abc	obj/kernel.asm	/^c0101abc:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101abf	obj/kernel.asm	/^c0101abf:	0f b7 15 06 19 1c c0 	movzwl 0xc01c1906,%edx$/;"	l
c0101ac6	obj/kernel.asm	/^c0101ac6:	83 c2 01             	add    $0x1,%edx$/;"	l
c0101ac9	obj/kernel.asm	/^c0101ac9:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101acc	obj/kernel.asm	/^c0101acc:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101ad0	obj/kernel.asm	/^c0101ad0:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101ad3	obj/kernel.asm	/^c0101ad3:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101ad7	obj/kernel.asm	/^c0101ad7:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101adb	obj/kernel.asm	/^c0101adb:	ee                   	out    %al,(%dx)$/;"	l
c0101adc	obj/kernel.asm	/^c0101adc:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0101adf	obj/kernel.asm	/^c0101adf:	c9                   	leave  $/;"	l
c0101ae0	obj/kernel.asm	/^c0101ae0:	c3                   	ret    $/;"	l
c0101ae1	obj/kernel.asm	/^c0101ae1 <serial_putc_sub>:$/;"	l
c0101ae1	obj/kernel.asm	/^c0101ae1:	55                   	push   %ebp$/;"	l
c0101ae2	obj/kernel.asm	/^c0101ae2:	89 e5                	mov    %esp,%ebp$/;"	l
c0101ae4	obj/kernel.asm	/^c0101ae4:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101ae7	obj/kernel.asm	/^c0101ae7:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0101aee	obj/kernel.asm	/^c0101aee:	eb 09                	jmp    c0101af9 <serial_putc_sub+0x18>$/;"	l
c0101af0	obj/kernel.asm	/^c0101af0:	e8 5b fb ff ff       	call   c0101650 <delay>$/;"	l
c0101af5	obj/kernel.asm	/^c0101af5:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0101af9	obj/kernel.asm	/^c0101af9:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c0101aff	obj/kernel.asm	/^c0101aff:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101b03	obj/kernel.asm	/^c0101b03:	89 c2                	mov    %eax,%edx$/;"	l
c0101b05	obj/kernel.asm	/^c0101b05:	ec                   	in     (%dx),%al$/;"	l
c0101b06	obj/kernel.asm	/^c0101b06:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101b09	obj/kernel.asm	/^c0101b09:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101b0d	obj/kernel.asm	/^c0101b0d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101b10	obj/kernel.asm	/^c0101b10:	83 e0 20             	and    $0x20,%eax$/;"	l
c0101b13	obj/kernel.asm	/^c0101b13:	85 c0                	test   %eax,%eax$/;"	l
c0101b15	obj/kernel.asm	/^c0101b15:	75 09                	jne    c0101b20 <serial_putc_sub+0x3f>$/;"	l
c0101b17	obj/kernel.asm	/^c0101b17:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c0101b1e	obj/kernel.asm	/^c0101b1e:	7e d0                	jle    c0101af0 <serial_putc_sub+0xf>$/;"	l
c0101b20	obj/kernel.asm	/^c0101b20:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101b23	obj/kernel.asm	/^c0101b23:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101b26	obj/kernel.asm	/^c0101b26:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c0101b2c	obj/kernel.asm	/^c0101b2c:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101b2f	obj/kernel.asm	/^c0101b2f:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101b33	obj/kernel.asm	/^c0101b33:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101b37	obj/kernel.asm	/^c0101b37:	ee                   	out    %al,(%dx)$/;"	l
c0101b38	obj/kernel.asm	/^c0101b38:	c9                   	leave  $/;"	l
c0101b39	obj/kernel.asm	/^c0101b39:	c3                   	ret    $/;"	l
c0101b3a	obj/kernel.asm	/^c0101b3a <serial_putc>:$/;"	l
c0101b3a	obj/kernel.asm	/^c0101b3a:	55                   	push   %ebp$/;"	l
c0101b3b	obj/kernel.asm	/^c0101b3b:	89 e5                	mov    %esp,%ebp$/;"	l
c0101b3d	obj/kernel.asm	/^c0101b3d:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c0101b41	obj/kernel.asm	/^c0101b41:	74 0d                	je     c0101b50 <serial_putc+0x16>$/;"	l
c0101b43	obj/kernel.asm	/^c0101b43:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101b46	obj/kernel.asm	/^c0101b46:	e8 96 ff ff ff       	call   c0101ae1 <serial_putc_sub>$/;"	l
c0101b4b	obj/kernel.asm	/^c0101b4b:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101b4e	obj/kernel.asm	/^c0101b4e:	eb 1e                	jmp    c0101b6e <serial_putc+0x34>$/;"	l
c0101b50	obj/kernel.asm	/^c0101b50:	6a 08                	push   $0x8$/;"	l
c0101b52	obj/kernel.asm	/^c0101b52:	e8 8a ff ff ff       	call   c0101ae1 <serial_putc_sub>$/;"	l
c0101b57	obj/kernel.asm	/^c0101b57:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101b5a	obj/kernel.asm	/^c0101b5a:	6a 20                	push   $0x20$/;"	l
c0101b5c	obj/kernel.asm	/^c0101b5c:	e8 80 ff ff ff       	call   c0101ae1 <serial_putc_sub>$/;"	l
c0101b61	obj/kernel.asm	/^c0101b61:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101b64	obj/kernel.asm	/^c0101b64:	6a 08                	push   $0x8$/;"	l
c0101b66	obj/kernel.asm	/^c0101b66:	e8 76 ff ff ff       	call   c0101ae1 <serial_putc_sub>$/;"	l
c0101b6b	obj/kernel.asm	/^c0101b6b:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101b6e	obj/kernel.asm	/^c0101b6e:	c9                   	leave  $/;"	l
c0101b6f	obj/kernel.asm	/^c0101b6f:	c3                   	ret    $/;"	l
c0101b70	obj/kernel.asm	/^c0101b70 <cons_intr>:$/;"	l
c0101b70	obj/kernel.asm	/^c0101b70:	55                   	push   %ebp$/;"	l
c0101b71	obj/kernel.asm	/^c0101b71:	89 e5                	mov    %esp,%ebp$/;"	l
c0101b73	obj/kernel.asm	/^c0101b73:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101b76	obj/kernel.asm	/^c0101b76:	eb 33                	jmp    c0101bab <cons_intr+0x3b>$/;"	l
c0101b78	obj/kernel.asm	/^c0101b78:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101b7c	obj/kernel.asm	/^c0101b7c:	74 2d                	je     c0101bab <cons_intr+0x3b>$/;"	l
c0101b7e	obj/kernel.asm	/^c0101b7e:	a1 44 1b 1c c0       	mov    0xc01c1b44,%eax$/;"	l
c0101b83	obj/kernel.asm	/^c0101b83:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101b86	obj/kernel.asm	/^c0101b86:	89 15 44 1b 1c c0    	mov    %edx,0xc01c1b44$/;"	l
c0101b8c	obj/kernel.asm	/^c0101b8c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0101b8f	obj/kernel.asm	/^c0101b8f:	88 90 40 19 1c c0    	mov    %dl,-0x3fe3e6c0(%eax)$/;"	l
c0101b95	obj/kernel.asm	/^c0101b95:	a1 44 1b 1c c0       	mov    0xc01c1b44,%eax$/;"	l
c0101b9a	obj/kernel.asm	/^c0101b9a:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c0101b9f	obj/kernel.asm	/^c0101b9f:	75 0a                	jne    c0101bab <cons_intr+0x3b>$/;"	l
c0101ba1	obj/kernel.asm	/^c0101ba1:	c7 05 44 1b 1c c0 00 	movl   $0x0,0xc01c1b44$/;"	l
c0101ba8	obj/kernel.asm	/^c0101ba8:	00 00 00 $/;"	l
c0101bab	obj/kernel.asm	/^c0101bab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101bae	obj/kernel.asm	/^c0101bae:	ff d0                	call   *%eax$/;"	l
c0101bb0	obj/kernel.asm	/^c0101bb0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101bb3	obj/kernel.asm	/^c0101bb3:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)$/;"	l
c0101bb7	obj/kernel.asm	/^c0101bb7:	75 bf                	jne    c0101b78 <cons_intr+0x8>$/;"	l
c0101bb9	obj/kernel.asm	/^c0101bb9:	c9                   	leave  $/;"	l
c0101bba	obj/kernel.asm	/^c0101bba:	c3                   	ret    $/;"	l
c0101bbb	obj/kernel.asm	/^c0101bbb <serial_proc_data>:$/;"	l
c0101bbb	obj/kernel.asm	/^c0101bbb:	55                   	push   %ebp$/;"	l
c0101bbc	obj/kernel.asm	/^c0101bbc:	89 e5                	mov    %esp,%ebp$/;"	l
c0101bbe	obj/kernel.asm	/^c0101bbe:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101bc1	obj/kernel.asm	/^c0101bc1:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c0101bc7	obj/kernel.asm	/^c0101bc7:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101bcb	obj/kernel.asm	/^c0101bcb:	89 c2                	mov    %eax,%edx$/;"	l
c0101bcd	obj/kernel.asm	/^c0101bcd:	ec                   	in     (%dx),%al$/;"	l
c0101bce	obj/kernel.asm	/^c0101bce:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101bd1	obj/kernel.asm	/^c0101bd1:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101bd5	obj/kernel.asm	/^c0101bd5:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101bd8	obj/kernel.asm	/^c0101bd8:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101bdb	obj/kernel.asm	/^c0101bdb:	85 c0                	test   %eax,%eax$/;"	l
c0101bdd	obj/kernel.asm	/^c0101bdd:	75 07                	jne    c0101be6 <serial_proc_data+0x2b>$/;"	l
c0101bdf	obj/kernel.asm	/^c0101bdf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0101be4	obj/kernel.asm	/^c0101be4:	eb 2a                	jmp    c0101c10 <serial_proc_data+0x55>$/;"	l
c0101be6	obj/kernel.asm	/^c0101be6:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c0101bec	obj/kernel.asm	/^c0101bec:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101bf0	obj/kernel.asm	/^c0101bf0:	89 c2                	mov    %eax,%edx$/;"	l
c0101bf2	obj/kernel.asm	/^c0101bf2:	ec                   	in     (%dx),%al$/;"	l
c0101bf3	obj/kernel.asm	/^c0101bf3:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101bf6	obj/kernel.asm	/^c0101bf6:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101bfa	obj/kernel.asm	/^c0101bfa:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101bfd	obj/kernel.asm	/^c0101bfd:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0101c00	obj/kernel.asm	/^c0101c00:	83 7d fc 7f          	cmpl   $0x7f,-0x4(%ebp)$/;"	l
c0101c04	obj/kernel.asm	/^c0101c04:	75 07                	jne    c0101c0d <serial_proc_data+0x52>$/;"	l
c0101c06	obj/kernel.asm	/^c0101c06:	c7 45 fc 08 00 00 00 	movl   $0x8,-0x4(%ebp)$/;"	l
c0101c0d	obj/kernel.asm	/^c0101c0d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101c10	obj/kernel.asm	/^c0101c10:	c9                   	leave  $/;"	l
c0101c11	obj/kernel.asm	/^c0101c11:	c3                   	ret    $/;"	l
c0101c12	obj/kernel.asm	/^c0101c12 <serial_intr>:$/;"	l
c0101c12	obj/kernel.asm	/^c0101c12:	55                   	push   %ebp$/;"	l
c0101c13	obj/kernel.asm	/^c0101c13:	89 e5                	mov    %esp,%ebp$/;"	l
c0101c15	obj/kernel.asm	/^c0101c15:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101c18	obj/kernel.asm	/^c0101c18:	a1 08 19 1c c0       	mov    0xc01c1908,%eax$/;"	l
c0101c1d	obj/kernel.asm	/^c0101c1d:	85 c0                	test   %eax,%eax$/;"	l
c0101c1f	obj/kernel.asm	/^c0101c1f:	74 10                	je     c0101c31 <serial_intr+0x1f>$/;"	l
c0101c21	obj/kernel.asm	/^c0101c21:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101c24	obj/kernel.asm	/^c0101c24:	68 bb 1b 10 c0       	push   $0xc0101bbb$/;"	l
c0101c29	obj/kernel.asm	/^c0101c29:	e8 42 ff ff ff       	call   c0101b70 <cons_intr>$/;"	l
c0101c2e	obj/kernel.asm	/^c0101c2e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101c31	obj/kernel.asm	/^c0101c31:	c9                   	leave  $/;"	l
c0101c32	obj/kernel.asm	/^c0101c32:	c3                   	ret    $/;"	l
c0101c33	obj/kernel.asm	/^c0101c33 <kbd_proc_data>:$/;"	l
c0101c33	obj/kernel.asm	/^c0101c33:	55                   	push   %ebp$/;"	l
c0101c34	obj/kernel.asm	/^c0101c34:	89 e5                	mov    %esp,%ebp$/;"	l
c0101c36	obj/kernel.asm	/^c0101c36:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0101c39	obj/kernel.asm	/^c0101c39:	66 c7 45 f0 64 00    	movw   $0x64,-0x10(%ebp)$/;"	l
c0101c3f	obj/kernel.asm	/^c0101c3f:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101c43	obj/kernel.asm	/^c0101c43:	89 c2                	mov    %eax,%edx$/;"	l
c0101c45	obj/kernel.asm	/^c0101c45:	ec                   	in     (%dx),%al$/;"	l
c0101c46	obj/kernel.asm	/^c0101c46:	88 45 ef             	mov    %al,-0x11(%ebp)$/;"	l
c0101c49	obj/kernel.asm	/^c0101c49:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax$/;"	l
c0101c4d	obj/kernel.asm	/^c0101c4d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101c50	obj/kernel.asm	/^c0101c50:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101c53	obj/kernel.asm	/^c0101c53:	85 c0                	test   %eax,%eax$/;"	l
c0101c55	obj/kernel.asm	/^c0101c55:	75 0a                	jne    c0101c61 <kbd_proc_data+0x2e>$/;"	l
c0101c57	obj/kernel.asm	/^c0101c57:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0101c5c	obj/kernel.asm	/^c0101c5c:	e9 5d 01 00 00       	jmp    c0101dbe <kbd_proc_data+0x18b>$/;"	l
c0101c61	obj/kernel.asm	/^c0101c61:	66 c7 45 ec 60 00    	movw   $0x60,-0x14(%ebp)$/;"	l
c0101c67	obj/kernel.asm	/^c0101c67:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0101c6b	obj/kernel.asm	/^c0101c6b:	89 c2                	mov    %eax,%edx$/;"	l
c0101c6d	obj/kernel.asm	/^c0101c6d:	ec                   	in     (%dx),%al$/;"	l
c0101c6e	obj/kernel.asm	/^c0101c6e:	88 45 eb             	mov    %al,-0x15(%ebp)$/;"	l
c0101c71	obj/kernel.asm	/^c0101c71:	0f b6 45 eb          	movzbl -0x15(%ebp),%eax$/;"	l
c0101c75	obj/kernel.asm	/^c0101c75:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0101c78	obj/kernel.asm	/^c0101c78:	80 7d f3 e0          	cmpb   $0xe0,-0xd(%ebp)$/;"	l
c0101c7c	obj/kernel.asm	/^c0101c7c:	75 17                	jne    c0101c95 <kbd_proc_data+0x62>$/;"	l
c0101c7e	obj/kernel.asm	/^c0101c7e:	a1 48 1b 1c c0       	mov    0xc01c1b48,%eax$/;"	l
c0101c83	obj/kernel.asm	/^c0101c83:	83 c8 40             	or     $0x40,%eax$/;"	l
c0101c86	obj/kernel.asm	/^c0101c86:	a3 48 1b 1c c0       	mov    %eax,0xc01c1b48$/;"	l
c0101c8b	obj/kernel.asm	/^c0101c8b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101c90	obj/kernel.asm	/^c0101c90:	e9 29 01 00 00       	jmp    c0101dbe <kbd_proc_data+0x18b>$/;"	l
c0101c95	obj/kernel.asm	/^c0101c95:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101c99	obj/kernel.asm	/^c0101c99:	84 c0                	test   %al,%al$/;"	l
c0101c9b	obj/kernel.asm	/^c0101c9b:	79 47                	jns    c0101ce4 <kbd_proc_data+0xb1>$/;"	l
c0101c9d	obj/kernel.asm	/^c0101c9d:	a1 48 1b 1c c0       	mov    0xc01c1b48,%eax$/;"	l
c0101ca2	obj/kernel.asm	/^c0101ca2:	83 e0 40             	and    $0x40,%eax$/;"	l
c0101ca5	obj/kernel.asm	/^c0101ca5:	85 c0                	test   %eax,%eax$/;"	l
c0101ca7	obj/kernel.asm	/^c0101ca7:	75 09                	jne    c0101cb2 <kbd_proc_data+0x7f>$/;"	l
c0101ca9	obj/kernel.asm	/^c0101ca9:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101cad	obj/kernel.asm	/^c0101cad:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c0101cb0	obj/kernel.asm	/^c0101cb0:	eb 04                	jmp    c0101cb6 <kbd_proc_data+0x83>$/;"	l
c0101cb2	obj/kernel.asm	/^c0101cb2:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101cb6	obj/kernel.asm	/^c0101cb6:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0101cb9	obj/kernel.asm	/^c0101cb9:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101cbd	obj/kernel.asm	/^c0101cbd:	0f b6 80 80 00 13 c0 	movzbl -0x3fecff80(%eax),%eax$/;"	l
c0101cc4	obj/kernel.asm	/^c0101cc4:	83 c8 40             	or     $0x40,%eax$/;"	l
c0101cc7	obj/kernel.asm	/^c0101cc7:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101cca	obj/kernel.asm	/^c0101cca:	f7 d0                	not    %eax$/;"	l
c0101ccc	obj/kernel.asm	/^c0101ccc:	89 c2                	mov    %eax,%edx$/;"	l
c0101cce	obj/kernel.asm	/^c0101cce:	a1 48 1b 1c c0       	mov    0xc01c1b48,%eax$/;"	l
c0101cd3	obj/kernel.asm	/^c0101cd3:	21 d0                	and    %edx,%eax$/;"	l
c0101cd5	obj/kernel.asm	/^c0101cd5:	a3 48 1b 1c c0       	mov    %eax,0xc01c1b48$/;"	l
c0101cda	obj/kernel.asm	/^c0101cda:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101cdf	obj/kernel.asm	/^c0101cdf:	e9 da 00 00 00       	jmp    c0101dbe <kbd_proc_data+0x18b>$/;"	l
c0101ce4	obj/kernel.asm	/^c0101ce4:	a1 48 1b 1c c0       	mov    0xc01c1b48,%eax$/;"	l
c0101ce9	obj/kernel.asm	/^c0101ce9:	83 e0 40             	and    $0x40,%eax$/;"	l
c0101cec	obj/kernel.asm	/^c0101cec:	85 c0                	test   %eax,%eax$/;"	l
c0101cee	obj/kernel.asm	/^c0101cee:	74 11                	je     c0101d01 <kbd_proc_data+0xce>$/;"	l
c0101cf0	obj/kernel.asm	/^c0101cf0:	80 4d f3 80          	orb    $0x80,-0xd(%ebp)$/;"	l
c0101cf4	obj/kernel.asm	/^c0101cf4:	a1 48 1b 1c c0       	mov    0xc01c1b48,%eax$/;"	l
c0101cf9	obj/kernel.asm	/^c0101cf9:	83 e0 bf             	and    $0xffffffbf,%eax$/;"	l
c0101cfc	obj/kernel.asm	/^c0101cfc:	a3 48 1b 1c c0       	mov    %eax,0xc01c1b48$/;"	l
c0101d01	obj/kernel.asm	/^c0101d01:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101d05	obj/kernel.asm	/^c0101d05:	0f b6 80 80 00 13 c0 	movzbl -0x3fecff80(%eax),%eax$/;"	l
c0101d0c	obj/kernel.asm	/^c0101d0c:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0101d0f	obj/kernel.asm	/^c0101d0f:	a1 48 1b 1c c0       	mov    0xc01c1b48,%eax$/;"	l
c0101d14	obj/kernel.asm	/^c0101d14:	09 d0                	or     %edx,%eax$/;"	l
c0101d16	obj/kernel.asm	/^c0101d16:	a3 48 1b 1c c0       	mov    %eax,0xc01c1b48$/;"	l
c0101d1b	obj/kernel.asm	/^c0101d1b:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101d1f	obj/kernel.asm	/^c0101d1f:	0f b6 80 80 01 13 c0 	movzbl -0x3fecfe80(%eax),%eax$/;"	l
c0101d26	obj/kernel.asm	/^c0101d26:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0101d29	obj/kernel.asm	/^c0101d29:	a1 48 1b 1c c0       	mov    0xc01c1b48,%eax$/;"	l
c0101d2e	obj/kernel.asm	/^c0101d2e:	31 d0                	xor    %edx,%eax$/;"	l
c0101d30	obj/kernel.asm	/^c0101d30:	a3 48 1b 1c c0       	mov    %eax,0xc01c1b48$/;"	l
c0101d35	obj/kernel.asm	/^c0101d35:	a1 48 1b 1c c0       	mov    0xc01c1b48,%eax$/;"	l
c0101d3a	obj/kernel.asm	/^c0101d3a:	83 e0 03             	and    $0x3,%eax$/;"	l
c0101d3d	obj/kernel.asm	/^c0101d3d:	8b 14 85 80 05 13 c0 	mov    -0x3fecfa80(,%eax,4),%edx$/;"	l
c0101d44	obj/kernel.asm	/^c0101d44:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101d48	obj/kernel.asm	/^c0101d48:	01 d0                	add    %edx,%eax$/;"	l
c0101d4a	obj/kernel.asm	/^c0101d4a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101d4d	obj/kernel.asm	/^c0101d4d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101d50	obj/kernel.asm	/^c0101d50:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101d53	obj/kernel.asm	/^c0101d53:	a1 48 1b 1c c0       	mov    0xc01c1b48,%eax$/;"	l
c0101d58	obj/kernel.asm	/^c0101d58:	83 e0 08             	and    $0x8,%eax$/;"	l
c0101d5b	obj/kernel.asm	/^c0101d5b:	85 c0                	test   %eax,%eax$/;"	l
c0101d5d	obj/kernel.asm	/^c0101d5d:	74 22                	je     c0101d81 <kbd_proc_data+0x14e>$/;"	l
c0101d5f	obj/kernel.asm	/^c0101d5f:	83 7d f4 60          	cmpl   $0x60,-0xc(%ebp)$/;"	l
c0101d63	obj/kernel.asm	/^c0101d63:	7e 0c                	jle    c0101d71 <kbd_proc_data+0x13e>$/;"	l
c0101d65	obj/kernel.asm	/^c0101d65:	83 7d f4 7a          	cmpl   $0x7a,-0xc(%ebp)$/;"	l
c0101d69	obj/kernel.asm	/^c0101d69:	7f 06                	jg     c0101d71 <kbd_proc_data+0x13e>$/;"	l
c0101d6b	obj/kernel.asm	/^c0101d6b:	83 6d f4 20          	subl   $0x20,-0xc(%ebp)$/;"	l
c0101d6f	obj/kernel.asm	/^c0101d6f:	eb 10                	jmp    c0101d81 <kbd_proc_data+0x14e>$/;"	l
c0101d71	obj/kernel.asm	/^c0101d71:	83 7d f4 40          	cmpl   $0x40,-0xc(%ebp)$/;"	l
c0101d75	obj/kernel.asm	/^c0101d75:	7e 0a                	jle    c0101d81 <kbd_proc_data+0x14e>$/;"	l
c0101d77	obj/kernel.asm	/^c0101d77:	83 7d f4 5a          	cmpl   $0x5a,-0xc(%ebp)$/;"	l
c0101d7b	obj/kernel.asm	/^c0101d7b:	7f 04                	jg     c0101d81 <kbd_proc_data+0x14e>$/;"	l
c0101d7d	obj/kernel.asm	/^c0101d7d:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0101d81	obj/kernel.asm	/^c0101d81:	a1 48 1b 1c c0       	mov    0xc01c1b48,%eax$/;"	l
c0101d86	obj/kernel.asm	/^c0101d86:	f7 d0                	not    %eax$/;"	l
c0101d88	obj/kernel.asm	/^c0101d88:	83 e0 06             	and    $0x6,%eax$/;"	l
c0101d8b	obj/kernel.asm	/^c0101d8b:	85 c0                	test   %eax,%eax$/;"	l
c0101d8d	obj/kernel.asm	/^c0101d8d:	75 2c                	jne    c0101dbb <kbd_proc_data+0x188>$/;"	l
c0101d8f	obj/kernel.asm	/^c0101d8f:	81 7d f4 e9 00 00 00 	cmpl   $0xe9,-0xc(%ebp)$/;"	l
c0101d96	obj/kernel.asm	/^c0101d96:	75 23                	jne    c0101dbb <kbd_proc_data+0x188>$/;"	l
c0101d98	obj/kernel.asm	/^c0101d98:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101d9b	obj/kernel.asm	/^c0101d9b:	68 a9 cf 10 c0       	push   $0xc010cfa9$/;"	l
c0101da0	obj/kernel.asm	/^c0101da0:	e8 d5 e4 ff ff       	call   c010027a <cprintf>$/;"	l
c0101da5	obj/kernel.asm	/^c0101da5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101da8	obj/kernel.asm	/^c0101da8:	66 c7 45 e8 92 00    	movw   $0x92,-0x18(%ebp)$/;"	l
c0101dae	obj/kernel.asm	/^c0101dae:	c6 45 e7 03          	movb   $0x3,-0x19(%ebp)$/;"	l
c0101db2	obj/kernel.asm	/^c0101db2:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
c0101db6	obj/kernel.asm	/^c0101db6:	0f b7 55 e8          	movzwl -0x18(%ebp),%edx$/;"	l
c0101dba	obj/kernel.asm	/^c0101dba:	ee                   	out    %al,(%dx)$/;"	l
c0101dbb	obj/kernel.asm	/^c0101dbb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101dbe	obj/kernel.asm	/^c0101dbe:	c9                   	leave  $/;"	l
c0101dbf	obj/kernel.asm	/^c0101dbf:	c3                   	ret    $/;"	l
c0101dc0	obj/kernel.asm	/^c0101dc0 <kbd_intr>:$/;"	l
c0101dc0	obj/kernel.asm	/^c0101dc0:	55                   	push   %ebp$/;"	l
c0101dc1	obj/kernel.asm	/^c0101dc1:	89 e5                	mov    %esp,%ebp$/;"	l
c0101dc3	obj/kernel.asm	/^c0101dc3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101dc6	obj/kernel.asm	/^c0101dc6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101dc9	obj/kernel.asm	/^c0101dc9:	68 33 1c 10 c0       	push   $0xc0101c33$/;"	l
c0101dce	obj/kernel.asm	/^c0101dce:	e8 9d fd ff ff       	call   c0101b70 <cons_intr>$/;"	l
c0101dd3	obj/kernel.asm	/^c0101dd3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101dd6	obj/kernel.asm	/^c0101dd6:	c9                   	leave  $/;"	l
c0101dd7	obj/kernel.asm	/^c0101dd7:	c3                   	ret    $/;"	l
c0101dd8	obj/kernel.asm	/^c0101dd8 <kbd_init>:$/;"	l
c0101dd8	obj/kernel.asm	/^c0101dd8:	55                   	push   %ebp$/;"	l
c0101dd9	obj/kernel.asm	/^c0101dd9:	89 e5                	mov    %esp,%ebp$/;"	l
c0101ddb	obj/kernel.asm	/^c0101ddb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101dde	obj/kernel.asm	/^c0101dde:	e8 dd ff ff ff       	call   c0101dc0 <kbd_intr>$/;"	l
c0101de3	obj/kernel.asm	/^c0101de3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101de6	obj/kernel.asm	/^c0101de6:	6a 01                	push   $0x1$/;"	l
c0101de8	obj/kernel.asm	/^c0101de8:	e8 47 01 00 00       	call   c0101f34 <pic_enable>$/;"	l
c0101ded	obj/kernel.asm	/^c0101ded:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101df0	obj/kernel.asm	/^c0101df0:	c9                   	leave  $/;"	l
c0101df1	obj/kernel.asm	/^c0101df1:	c3                   	ret    $/;"	l
c0101df2	obj/kernel.asm	/^c0101df2 <cons_init>:$/;"	l
c0101df2	obj/kernel.asm	/^c0101df2:	55                   	push   %ebp$/;"	l
c0101df3	obj/kernel.asm	/^c0101df3:	89 e5                	mov    %esp,%ebp$/;"	l
c0101df5	obj/kernel.asm	/^c0101df5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101df8	obj/kernel.asm	/^c0101df8:	e8 9b f8 ff ff       	call   c0101698 <cga_init>$/;"	l
c0101dfd	obj/kernel.asm	/^c0101dfd:	e8 7c f9 ff ff       	call   c010177e <serial_init>$/;"	l
c0101e02	obj/kernel.asm	/^c0101e02:	e8 d1 ff ff ff       	call   c0101dd8 <kbd_init>$/;"	l
c0101e07	obj/kernel.asm	/^c0101e07:	a1 08 19 1c c0       	mov    0xc01c1908,%eax$/;"	l
c0101e0c	obj/kernel.asm	/^c0101e0c:	85 c0                	test   %eax,%eax$/;"	l
c0101e0e	obj/kernel.asm	/^c0101e0e:	75 10                	jne    c0101e20 <cons_init+0x2e>$/;"	l
c0101e10	obj/kernel.asm	/^c0101e10:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101e13	obj/kernel.asm	/^c0101e13:	68 b5 cf 10 c0       	push   $0xc010cfb5$/;"	l
c0101e18	obj/kernel.asm	/^c0101e18:	e8 5d e4 ff ff       	call   c010027a <cprintf>$/;"	l
c0101e1d	obj/kernel.asm	/^c0101e1d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101e20	obj/kernel.asm	/^c0101e20:	c9                   	leave  $/;"	l
c0101e21	obj/kernel.asm	/^c0101e21:	c3                   	ret    $/;"	l
c0101e22	obj/kernel.asm	/^c0101e22 <cons_putc>:$/;"	l
c0101e22	obj/kernel.asm	/^c0101e22:	55                   	push   %ebp$/;"	l
c0101e23	obj/kernel.asm	/^c0101e23:	89 e5                	mov    %esp,%ebp$/;"	l
c0101e25	obj/kernel.asm	/^c0101e25:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101e28	obj/kernel.asm	/^c0101e28:	e8 e6 f7 ff ff       	call   c0101613 <__intr_save>$/;"	l
c0101e2d	obj/kernel.asm	/^c0101e2d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101e30	obj/kernel.asm	/^c0101e30:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101e33	obj/kernel.asm	/^c0101e33:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101e36	obj/kernel.asm	/^c0101e36:	e8 a0 fa ff ff       	call   c01018db <lpt_putc>$/;"	l
c0101e3b	obj/kernel.asm	/^c0101e3b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101e3e	obj/kernel.asm	/^c0101e3e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101e41	obj/kernel.asm	/^c0101e41:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101e44	obj/kernel.asm	/^c0101e44:	e8 c8 fa ff ff       	call   c0101911 <cga_putc>$/;"	l
c0101e49	obj/kernel.asm	/^c0101e49:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101e4c	obj/kernel.asm	/^c0101e4c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101e4f	obj/kernel.asm	/^c0101e4f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101e52	obj/kernel.asm	/^c0101e52:	e8 e3 fc ff ff       	call   c0101b3a <serial_putc>$/;"	l
c0101e57	obj/kernel.asm	/^c0101e57:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101e5a	obj/kernel.asm	/^c0101e5a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101e5d	obj/kernel.asm	/^c0101e5d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0101e60	obj/kernel.asm	/^c0101e60:	e8 d8 f7 ff ff       	call   c010163d <__intr_restore>$/;"	l
c0101e65	obj/kernel.asm	/^c0101e65:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101e68	obj/kernel.asm	/^c0101e68:	c9                   	leave  $/;"	l
c0101e69	obj/kernel.asm	/^c0101e69:	c3                   	ret    $/;"	l
c0101e6a	obj/kernel.asm	/^c0101e6a <cons_getc>:$/;"	l
c0101e6a	obj/kernel.asm	/^c0101e6a:	55                   	push   %ebp$/;"	l
c0101e6b	obj/kernel.asm	/^c0101e6b:	89 e5                	mov    %esp,%ebp$/;"	l
c0101e6d	obj/kernel.asm	/^c0101e6d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101e70	obj/kernel.asm	/^c0101e70:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101e77	obj/kernel.asm	/^c0101e77:	e8 97 f7 ff ff       	call   c0101613 <__intr_save>$/;"	l
c0101e7c	obj/kernel.asm	/^c0101e7c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0101e7f	obj/kernel.asm	/^c0101e7f:	e8 8e fd ff ff       	call   c0101c12 <serial_intr>$/;"	l
c0101e84	obj/kernel.asm	/^c0101e84:	e8 37 ff ff ff       	call   c0101dc0 <kbd_intr>$/;"	l
c0101e89	obj/kernel.asm	/^c0101e89:	8b 15 40 1b 1c c0    	mov    0xc01c1b40,%edx$/;"	l
c0101e8f	obj/kernel.asm	/^c0101e8f:	a1 44 1b 1c c0       	mov    0xc01c1b44,%eax$/;"	l
c0101e94	obj/kernel.asm	/^c0101e94:	39 c2                	cmp    %eax,%edx$/;"	l
c0101e96	obj/kernel.asm	/^c0101e96:	74 31                	je     c0101ec9 <cons_getc+0x5f>$/;"	l
c0101e98	obj/kernel.asm	/^c0101e98:	a1 40 1b 1c c0       	mov    0xc01c1b40,%eax$/;"	l
c0101e9d	obj/kernel.asm	/^c0101e9d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101ea0	obj/kernel.asm	/^c0101ea0:	89 15 40 1b 1c c0    	mov    %edx,0xc01c1b40$/;"	l
c0101ea6	obj/kernel.asm	/^c0101ea6:	0f b6 80 40 19 1c c0 	movzbl -0x3fe3e6c0(%eax),%eax$/;"	l
c0101ead	obj/kernel.asm	/^c0101ead:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101eb0	obj/kernel.asm	/^c0101eb0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101eb3	obj/kernel.asm	/^c0101eb3:	a1 40 1b 1c c0       	mov    0xc01c1b40,%eax$/;"	l
c0101eb8	obj/kernel.asm	/^c0101eb8:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c0101ebd	obj/kernel.asm	/^c0101ebd:	75 0a                	jne    c0101ec9 <cons_getc+0x5f>$/;"	l
c0101ebf	obj/kernel.asm	/^c0101ebf:	c7 05 40 1b 1c c0 00 	movl   $0x0,0xc01c1b40$/;"	l
c0101ec6	obj/kernel.asm	/^c0101ec6:	00 00 00 $/;"	l
c0101ec9	obj/kernel.asm	/^c0101ec9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101ecc	obj/kernel.asm	/^c0101ecc:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0101ecf	obj/kernel.asm	/^c0101ecf:	e8 69 f7 ff ff       	call   c010163d <__intr_restore>$/;"	l
c0101ed4	obj/kernel.asm	/^c0101ed4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101ed7	obj/kernel.asm	/^c0101ed7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101eda	obj/kernel.asm	/^c0101eda:	c9                   	leave  $/;"	l
c0101edb	obj/kernel.asm	/^c0101edb:	c3                   	ret    $/;"	l
c0101edc	obj/kernel.asm	/^c0101edc <pic_setmask>:$/;"	l
c0101edc	obj/kernel.asm	/^c0101edc:	55                   	push   %ebp$/;"	l
c0101edd	obj/kernel.asm	/^c0101edd:	89 e5                	mov    %esp,%ebp$/;"	l
c0101edf	obj/kernel.asm	/^c0101edf:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0101ee2	obj/kernel.asm	/^c0101ee2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101ee5	obj/kernel.asm	/^c0101ee5:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c0101ee9	obj/kernel.asm	/^c0101ee9:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0101eed	obj/kernel.asm	/^c0101eed:	66 a3 90 05 13 c0    	mov    %ax,0xc0130590$/;"	l
c0101ef3	obj/kernel.asm	/^c0101ef3:	a1 4c 1b 1c c0       	mov    0xc01c1b4c,%eax$/;"	l
c0101ef8	obj/kernel.asm	/^c0101ef8:	85 c0                	test   %eax,%eax$/;"	l
c0101efa	obj/kernel.asm	/^c0101efa:	74 36                	je     c0101f32 <pic_setmask+0x56>$/;"	l
c0101efc	obj/kernel.asm	/^c0101efc:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0101f00	obj/kernel.asm	/^c0101f00:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101f03	obj/kernel.asm	/^c0101f03:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c0101f09	obj/kernel.asm	/^c0101f09:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c0101f0c	obj/kernel.asm	/^c0101f0c:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c0101f10	obj/kernel.asm	/^c0101f10:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c0101f14	obj/kernel.asm	/^c0101f14:	ee                   	out    %al,(%dx)$/;"	l
c0101f15	obj/kernel.asm	/^c0101f15:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0101f19	obj/kernel.asm	/^c0101f19:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c0101f1d	obj/kernel.asm	/^c0101f1d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101f20	obj/kernel.asm	/^c0101f20:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c0101f26	obj/kernel.asm	/^c0101f26:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101f29	obj/kernel.asm	/^c0101f29:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101f2d	obj/kernel.asm	/^c0101f2d:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c0101f31	obj/kernel.asm	/^c0101f31:	ee                   	out    %al,(%dx)$/;"	l
c0101f32	obj/kernel.asm	/^c0101f32:	c9                   	leave  $/;"	l
c0101f33	obj/kernel.asm	/^c0101f33:	c3                   	ret    $/;"	l
c0101f34	obj/kernel.asm	/^c0101f34 <pic_enable>:$/;"	l
c0101f34	obj/kernel.asm	/^c0101f34:	55                   	push   %ebp$/;"	l
c0101f35	obj/kernel.asm	/^c0101f35:	89 e5                	mov    %esp,%ebp$/;"	l
c0101f37	obj/kernel.asm	/^c0101f37:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101f3a	obj/kernel.asm	/^c0101f3a:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0101f3f	obj/kernel.asm	/^c0101f3f:	89 c1                	mov    %eax,%ecx$/;"	l
c0101f41	obj/kernel.asm	/^c0101f41:	d3 e2                	shl    %cl,%edx$/;"	d
c0101f43	obj/kernel.asm	/^c0101f43:	89 d0                	mov    %edx,%eax$/;"	l
c0101f45	obj/kernel.asm	/^c0101f45:	f7 d0                	not    %eax$/;"	l
c0101f47	obj/kernel.asm	/^c0101f47:	89 c2                	mov    %eax,%edx$/;"	l
c0101f49	obj/kernel.asm	/^c0101f49:	0f b7 05 90 05 13 c0 	movzwl 0xc0130590,%eax$/;"	l
c0101f50	obj/kernel.asm	/^c0101f50:	21 d0                	and    %edx,%eax$/;"	l
c0101f52	obj/kernel.asm	/^c0101f52:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101f55	obj/kernel.asm	/^c0101f55:	50                   	push   %eax$/;"	l
c0101f56	obj/kernel.asm	/^c0101f56:	e8 81 ff ff ff       	call   c0101edc <pic_setmask>$/;"	l
c0101f5b	obj/kernel.asm	/^c0101f5b:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101f5e	obj/kernel.asm	/^c0101f5e:	c9                   	leave  $/;"	l
c0101f5f	obj/kernel.asm	/^c0101f5f:	c3                   	ret    $/;"	l
c0101f60	obj/kernel.asm	/^c0101f60 <pic_init>:$/;"	l
c0101f60	obj/kernel.asm	/^c0101f60:	55                   	push   %ebp$/;"	l
c0101f61	obj/kernel.asm	/^c0101f61:	89 e5                	mov    %esp,%ebp$/;"	l
c0101f63	obj/kernel.asm	/^c0101f63:	83 ec 40             	sub    $0x40,%esp$/;"	l
c0101f66	obj/kernel.asm	/^c0101f66:	c7 05 4c 1b 1c c0 01 	movl   $0x1,0xc01c1b4c$/;"	l
c0101f6d	obj/kernel.asm	/^c0101f6d:	00 00 00 $/;"	l
c0101f70	obj/kernel.asm	/^c0101f70:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c0101f76	obj/kernel.asm	/^c0101f76:	c6 45 fd ff          	movb   $0xff,-0x3(%ebp)$/;"	l
c0101f7a	obj/kernel.asm	/^c0101f7a:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c0101f7e	obj/kernel.asm	/^c0101f7e:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c0101f82	obj/kernel.asm	/^c0101f82:	ee                   	out    %al,(%dx)$/;"	l
c0101f83	obj/kernel.asm	/^c0101f83:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c0101f89	obj/kernel.asm	/^c0101f89:	c6 45 f9 ff          	movb   $0xff,-0x7(%ebp)$/;"	l
c0101f8d	obj/kernel.asm	/^c0101f8d:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101f91	obj/kernel.asm	/^c0101f91:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c0101f95	obj/kernel.asm	/^c0101f95:	ee                   	out    %al,(%dx)$/;"	l
c0101f96	obj/kernel.asm	/^c0101f96:	66 c7 45 f6 20 00    	movw   $0x20,-0xa(%ebp)$/;"	l
c0101f9c	obj/kernel.asm	/^c0101f9c:	c6 45 f5 11          	movb   $0x11,-0xb(%ebp)$/;"	l
c0101fa0	obj/kernel.asm	/^c0101fa0:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101fa4	obj/kernel.asm	/^c0101fa4:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101fa8	obj/kernel.asm	/^c0101fa8:	ee                   	out    %al,(%dx)$/;"	l
c0101fa9	obj/kernel.asm	/^c0101fa9:	66 c7 45 f2 21 00    	movw   $0x21,-0xe(%ebp)$/;"	l
c0101faf	obj/kernel.asm	/^c0101faf:	c6 45 f1 20          	movb   $0x20,-0xf(%ebp)$/;"	l
c0101fb3	obj/kernel.asm	/^c0101fb3:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0101fb7	obj/kernel.asm	/^c0101fb7:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101fbb	obj/kernel.asm	/^c0101fbb:	ee                   	out    %al,(%dx)$/;"	l
c0101fbc	obj/kernel.asm	/^c0101fbc:	66 c7 45 ee 21 00    	movw   $0x21,-0x12(%ebp)$/;"	l
c0101fc2	obj/kernel.asm	/^c0101fc2:	c6 45 ed 04          	movb   $0x4,-0x13(%ebp)$/;"	l
c0101fc6	obj/kernel.asm	/^c0101fc6:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101fca	obj/kernel.asm	/^c0101fca:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101fce	obj/kernel.asm	/^c0101fce:	ee                   	out    %al,(%dx)$/;"	l
c0101fcf	obj/kernel.asm	/^c0101fcf:	66 c7 45 ea 21 00    	movw   $0x21,-0x16(%ebp)$/;"	l
c0101fd5	obj/kernel.asm	/^c0101fd5:	c6 45 e9 03          	movb   $0x3,-0x17(%ebp)$/;"	l
c0101fd9	obj/kernel.asm	/^c0101fd9:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101fdd	obj/kernel.asm	/^c0101fdd:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101fe1	obj/kernel.asm	/^c0101fe1:	ee                   	out    %al,(%dx)$/;"	l
c0101fe2	obj/kernel.asm	/^c0101fe2:	66 c7 45 e6 a0 00    	movw   $0xa0,-0x1a(%ebp)$/;"	l
c0101fe8	obj/kernel.asm	/^c0101fe8:	c6 45 e5 11          	movb   $0x11,-0x1b(%ebp)$/;"	l
c0101fec	obj/kernel.asm	/^c0101fec:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101ff0	obj/kernel.asm	/^c0101ff0:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101ff4	obj/kernel.asm	/^c0101ff4:	ee                   	out    %al,(%dx)$/;"	l
c0101ff5	obj/kernel.asm	/^c0101ff5:	66 c7 45 e2 a1 00    	movw   $0xa1,-0x1e(%ebp)$/;"	l
c0101ffb	obj/kernel.asm	/^c0101ffb:	c6 45 e1 28          	movb   $0x28,-0x1f(%ebp)$/;"	l
c0101fff	obj/kernel.asm	/^c0101fff:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0102003	obj/kernel.asm	/^c0102003:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c0102007	obj/kernel.asm	/^c0102007:	ee                   	out    %al,(%dx)$/;"	l
c0102008	obj/kernel.asm	/^c0102008:	66 c7 45 de a1 00    	movw   $0xa1,-0x22(%ebp)$/;"	l
c010200e	obj/kernel.asm	/^c010200e:	c6 45 dd 02          	movb   $0x2,-0x23(%ebp)$/;"	l
c0102012	obj/kernel.asm	/^c0102012:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0102016	obj/kernel.asm	/^c0102016:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c010201a	obj/kernel.asm	/^c010201a:	ee                   	out    %al,(%dx)$/;"	l
c010201b	obj/kernel.asm	/^c010201b:	66 c7 45 da a1 00    	movw   $0xa1,-0x26(%ebp)$/;"	l
c0102021	obj/kernel.asm	/^c0102021:	c6 45 d9 03          	movb   $0x3,-0x27(%ebp)$/;"	l
c0102025	obj/kernel.asm	/^c0102025:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0102029	obj/kernel.asm	/^c0102029:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c010202d	obj/kernel.asm	/^c010202d:	ee                   	out    %al,(%dx)$/;"	l
c010202e	obj/kernel.asm	/^c010202e:	66 c7 45 d6 20 00    	movw   $0x20,-0x2a(%ebp)$/;"	l
c0102034	obj/kernel.asm	/^c0102034:	c6 45 d5 68          	movb   $0x68,-0x2b(%ebp)$/;"	l
c0102038	obj/kernel.asm	/^c0102038:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c010203c	obj/kernel.asm	/^c010203c:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0102040	obj/kernel.asm	/^c0102040:	ee                   	out    %al,(%dx)$/;"	l
c0102041	obj/kernel.asm	/^c0102041:	66 c7 45 d2 20 00    	movw   $0x20,-0x2e(%ebp)$/;"	l
c0102047	obj/kernel.asm	/^c0102047:	c6 45 d1 0a          	movb   $0xa,-0x2f(%ebp)$/;"	l
c010204b	obj/kernel.asm	/^c010204b:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c010204f	obj/kernel.asm	/^c010204f:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c0102053	obj/kernel.asm	/^c0102053:	ee                   	out    %al,(%dx)$/;"	l
c0102054	obj/kernel.asm	/^c0102054:	66 c7 45 ce a0 00    	movw   $0xa0,-0x32(%ebp)$/;"	l
c010205a	obj/kernel.asm	/^c010205a:	c6 45 cd 68          	movb   $0x68,-0x33(%ebp)$/;"	l
c010205e	obj/kernel.asm	/^c010205e:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c0102062	obj/kernel.asm	/^c0102062:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c0102066	obj/kernel.asm	/^c0102066:	ee                   	out    %al,(%dx)$/;"	l
c0102067	obj/kernel.asm	/^c0102067:	66 c7 45 ca a0 00    	movw   $0xa0,-0x36(%ebp)$/;"	l
c010206d	obj/kernel.asm	/^c010206d:	c6 45 c9 0a          	movb   $0xa,-0x37(%ebp)$/;"	l
c0102071	obj/kernel.asm	/^c0102071:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c0102075	obj/kernel.asm	/^c0102075:	0f b7 55 ca          	movzwl -0x36(%ebp),%edx$/;"	l
c0102079	obj/kernel.asm	/^c0102079:	ee                   	out    %al,(%dx)$/;"	l
c010207a	obj/kernel.asm	/^c010207a:	0f b7 05 90 05 13 c0 	movzwl 0xc0130590,%eax$/;"	l
c0102081	obj/kernel.asm	/^c0102081:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
c0102085	obj/kernel.asm	/^c0102085:	74 13                	je     c010209a <pic_init+0x13a>$/;"	l
c0102087	obj/kernel.asm	/^c0102087:	0f b7 05 90 05 13 c0 	movzwl 0xc0130590,%eax$/;"	l
c010208e	obj/kernel.asm	/^c010208e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102091	obj/kernel.asm	/^c0102091:	50                   	push   %eax$/;"	l
c0102092	obj/kernel.asm	/^c0102092:	e8 45 fe ff ff       	call   c0101edc <pic_setmask>$/;"	l
c0102097	obj/kernel.asm	/^c0102097:	83 c4 04             	add    $0x4,%esp$/;"	l
c010209a	obj/kernel.asm	/^c010209a:	c9                   	leave  $/;"	l
c010209b	obj/kernel.asm	/^c010209b:	c3                   	ret    $/;"	l
c010209c	obj/kernel.asm	/^c010209c <intr_enable>:$/;"	l
c010209c	obj/kernel.asm	/^c010209c:	55                   	push   %ebp$/;"	l
c010209d	obj/kernel.asm	/^c010209d:	89 e5                	mov    %esp,%ebp$/;"	l
c010209f	obj/kernel.asm	/^c010209f:	fb                   	sti    $/;"	l
c01020a0	obj/kernel.asm	/^c01020a0:	5d                   	pop    %ebp$/;"	l
c01020a1	obj/kernel.asm	/^c01020a1:	c3                   	ret    $/;"	l
c01020a2	obj/kernel.asm	/^c01020a2 <intr_disable>:$/;"	l
c01020a2	obj/kernel.asm	/^c01020a2:	55                   	push   %ebp$/;"	l
c01020a3	obj/kernel.asm	/^c01020a3:	89 e5                	mov    %esp,%ebp$/;"	l
c01020a5	obj/kernel.asm	/^c01020a5:	fa                   	cli    $/;"	l
c01020a6	obj/kernel.asm	/^c01020a6:	5d                   	pop    %ebp$/;"	l
c01020a7	obj/kernel.asm	/^c01020a7:	c3                   	ret    $/;"	l
c01020a8	obj/kernel.asm	/^c01020a8 <print_ticks>:$/;"	l
c01020a8	obj/kernel.asm	/^c01020a8:	55                   	push   %ebp$/;"	l
c01020a9	obj/kernel.asm	/^c01020a9:	89 e5                	mov    %esp,%ebp$/;"	l
c01020ab	obj/kernel.asm	/^c01020ab:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01020ae	obj/kernel.asm	/^c01020ae:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01020b1	obj/kernel.asm	/^c01020b1:	6a 64                	push   $0x64$/;"	l
c01020b3	obj/kernel.asm	/^c01020b3:	68 00 d0 10 c0       	push   $0xc010d000$/;"	l
c01020b8	obj/kernel.asm	/^c01020b8:	e8 bd e1 ff ff       	call   c010027a <cprintf>$/;"	l
c01020bd	obj/kernel.asm	/^c01020bd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01020c0	obj/kernel.asm	/^c01020c0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01020c3	obj/kernel.asm	/^c01020c3:	68 0a d0 10 c0       	push   $0xc010d00a$/;"	l
c01020c8	obj/kernel.asm	/^c01020c8:	e8 ad e1 ff ff       	call   c010027a <cprintf>$/;"	l
c01020cd	obj/kernel.asm	/^c01020cd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01020d0	obj/kernel.asm	/^c01020d0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01020d3	obj/kernel.asm	/^c01020d3:	68 18 d0 10 c0       	push   $0xc010d018$/;"	l
c01020d8	obj/kernel.asm	/^c01020d8:	6a 1a                	push   $0x1a$/;"	l
c01020da	obj/kernel.asm	/^c01020da:	68 2e d0 10 c0       	push   $0xc010d02e$/;"	l
c01020df	obj/kernel.asm	/^c01020df:	e8 fb e2 ff ff       	call   c01003df <__panic>$/;"	l
c01020e4	obj/kernel.asm	/^c01020e4 <idt_init>:$/;"	l
c01020e4	obj/kernel.asm	/^c01020e4:	55                   	push   %ebp$/;"	l
c01020e5	obj/kernel.asm	/^c01020e5:	89 e5                	mov    %esp,%ebp$/;"	l
c01020e7	obj/kernel.asm	/^c01020e7:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01020ea	obj/kernel.asm	/^c01020ea:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01020f1	obj/kernel.asm	/^c01020f1:	e9 5c 02 00 00       	jmp    c0102352 <idt_init+0x26e>$/;"	l
c01020f6	obj/kernel.asm	/^c01020f6:	81 7d fc 80 00 00 00 	cmpl   $0x80,-0x4(%ebp)$/;"	l
c01020fd	obj/kernel.asm	/^c01020fd:	0f 85 c1 00 00 00    	jne    c01021c4 <idt_init+0xe0>$/;"	l
c0102103	obj/kernel.asm	/^c0102103:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102106	obj/kernel.asm	/^c0102106:	8b 04 85 60 06 13 c0 	mov    -0x3fecf9a0(,%eax,4),%eax$/;"	l
c010210d	obj/kernel.asm	/^c010210d:	89 c2                	mov    %eax,%edx$/;"	l
c010210f	obj/kernel.asm	/^c010210f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102112	obj/kernel.asm	/^c0102112:	66 89 14 c5 80 1b 1c 	mov    %dx,-0x3fe3e480(,%eax,8)$/;"	l
c0102119	obj/kernel.asm	/^c0102119:	c0 $/;"	l
c010211a	obj/kernel.asm	/^c010211a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010211d	obj/kernel.asm	/^c010211d:	66 c7 04 c5 82 1b 1c 	movw   $0x8,-0x3fe3e47e(,%eax,8)$/;"	l
c0102124	obj/kernel.asm	/^c0102124:	c0 08 00 $/;"	l
c0102127	obj/kernel.asm	/^c0102127:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010212a	obj/kernel.asm	/^c010212a:	0f b6 14 c5 84 1b 1c 	movzbl -0x3fe3e47c(,%eax,8),%edx$/;"	l
c0102131	obj/kernel.asm	/^c0102131:	c0 $/;"	l
c0102132	obj/kernel.asm	/^c0102132:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c0102135	obj/kernel.asm	/^c0102135:	88 14 c5 84 1b 1c c0 	mov    %dl,-0x3fe3e47c(,%eax,8)$/;"	l
c010213c	obj/kernel.asm	/^c010213c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010213f	obj/kernel.asm	/^c010213f:	0f b6 14 c5 84 1b 1c 	movzbl -0x3fe3e47c(,%eax,8),%edx$/;"	l
c0102146	obj/kernel.asm	/^c0102146:	c0 $/;"	l
c0102147	obj/kernel.asm	/^c0102147:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c010214a	obj/kernel.asm	/^c010214a:	88 14 c5 84 1b 1c c0 	mov    %dl,-0x3fe3e47c(,%eax,8)$/;"	l
c0102151	obj/kernel.asm	/^c0102151:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102154	obj/kernel.asm	/^c0102154:	0f b6 14 c5 85 1b 1c 	movzbl -0x3fe3e47b(,%eax,8),%edx$/;"	l
c010215b	obj/kernel.asm	/^c010215b:	c0 $/;"	l
c010215c	obj/kernel.asm	/^c010215c:	83 ca 0f             	or     $0xf,%edx$/;"	l
c010215f	obj/kernel.asm	/^c010215f:	88 14 c5 85 1b 1c c0 	mov    %dl,-0x3fe3e47b(,%eax,8)$/;"	l
c0102166	obj/kernel.asm	/^c0102166:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102169	obj/kernel.asm	/^c0102169:	0f b6 14 c5 85 1b 1c 	movzbl -0x3fe3e47b(,%eax,8),%edx$/;"	l
c0102170	obj/kernel.asm	/^c0102170:	c0 $/;"	l
c0102171	obj/kernel.asm	/^c0102171:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c0102174	obj/kernel.asm	/^c0102174:	88 14 c5 85 1b 1c c0 	mov    %dl,-0x3fe3e47b(,%eax,8)$/;"	l
c010217b	obj/kernel.asm	/^c010217b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010217e	obj/kernel.asm	/^c010217e:	0f b6 14 c5 85 1b 1c 	movzbl -0x3fe3e47b(,%eax,8),%edx$/;"	l
c0102185	obj/kernel.asm	/^c0102185:	c0 $/;"	l
c0102186	obj/kernel.asm	/^c0102186:	83 ca 60             	or     $0x60,%edx$/;"	l
c0102189	obj/kernel.asm	/^c0102189:	88 14 c5 85 1b 1c c0 	mov    %dl,-0x3fe3e47b(,%eax,8)$/;"	l
c0102190	obj/kernel.asm	/^c0102190:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102193	obj/kernel.asm	/^c0102193:	0f b6 14 c5 85 1b 1c 	movzbl -0x3fe3e47b(,%eax,8),%edx$/;"	l
c010219a	obj/kernel.asm	/^c010219a:	c0 $/;"	l
c010219b	obj/kernel.asm	/^c010219b:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c010219e	obj/kernel.asm	/^c010219e:	88 14 c5 85 1b 1c c0 	mov    %dl,-0x3fe3e47b(,%eax,8)$/;"	l
c01021a5	obj/kernel.asm	/^c01021a5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021a8	obj/kernel.asm	/^c01021a8:	8b 04 85 60 06 13 c0 	mov    -0x3fecf9a0(,%eax,4),%eax$/;"	l
c01021af	obj/kernel.asm	/^c01021af:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01021b2	obj/kernel.asm	/^c01021b2:	89 c2                	mov    %eax,%edx$/;"	l
c01021b4	obj/kernel.asm	/^c01021b4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021b7	obj/kernel.asm	/^c01021b7:	66 89 14 c5 86 1b 1c 	mov    %dx,-0x3fe3e47a(,%eax,8)$/;"	l
c01021be	obj/kernel.asm	/^c01021be:	c0 $/;"	l
c01021bf	obj/kernel.asm	/^c01021bf:	e9 8a 01 00 00       	jmp    c010234e <idt_init+0x26a>$/;"	l
c01021c4	obj/kernel.asm	/^c01021c4:	83 7d fc 1f          	cmpl   $0x1f,-0x4(%ebp)$/;"	l
c01021c8	obj/kernel.asm	/^c01021c8:	0f 8f c1 00 00 00    	jg     c010228f <idt_init+0x1ab>$/;"	l
c01021ce	obj/kernel.asm	/^c01021ce:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021d1	obj/kernel.asm	/^c01021d1:	8b 04 85 60 06 13 c0 	mov    -0x3fecf9a0(,%eax,4),%eax$/;"	l
c01021d8	obj/kernel.asm	/^c01021d8:	89 c2                	mov    %eax,%edx$/;"	l
c01021da	obj/kernel.asm	/^c01021da:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021dd	obj/kernel.asm	/^c01021dd:	66 89 14 c5 80 1b 1c 	mov    %dx,-0x3fe3e480(,%eax,8)$/;"	l
c01021e4	obj/kernel.asm	/^c01021e4:	c0 $/;"	l
c01021e5	obj/kernel.asm	/^c01021e5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021e8	obj/kernel.asm	/^c01021e8:	66 c7 04 c5 82 1b 1c 	movw   $0x8,-0x3fe3e47e(,%eax,8)$/;"	l
c01021ef	obj/kernel.asm	/^c01021ef:	c0 08 00 $/;"	l
c01021f2	obj/kernel.asm	/^c01021f2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021f5	obj/kernel.asm	/^c01021f5:	0f b6 14 c5 84 1b 1c 	movzbl -0x3fe3e47c(,%eax,8),%edx$/;"	l
c01021fc	obj/kernel.asm	/^c01021fc:	c0 $/;"	l
c01021fd	obj/kernel.asm	/^c01021fd:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c0102200	obj/kernel.asm	/^c0102200:	88 14 c5 84 1b 1c c0 	mov    %dl,-0x3fe3e47c(,%eax,8)$/;"	l
c0102207	obj/kernel.asm	/^c0102207:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010220a	obj/kernel.asm	/^c010220a:	0f b6 14 c5 84 1b 1c 	movzbl -0x3fe3e47c(,%eax,8),%edx$/;"	l
c0102211	obj/kernel.asm	/^c0102211:	c0 $/;"	l
c0102212	obj/kernel.asm	/^c0102212:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c0102215	obj/kernel.asm	/^c0102215:	88 14 c5 84 1b 1c c0 	mov    %dl,-0x3fe3e47c(,%eax,8)$/;"	l
c010221c	obj/kernel.asm	/^c010221c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010221f	obj/kernel.asm	/^c010221f:	0f b6 14 c5 85 1b 1c 	movzbl -0x3fe3e47b(,%eax,8),%edx$/;"	l
c0102226	obj/kernel.asm	/^c0102226:	c0 $/;"	l
c0102227	obj/kernel.asm	/^c0102227:	83 ca 0f             	or     $0xf,%edx$/;"	l
c010222a	obj/kernel.asm	/^c010222a:	88 14 c5 85 1b 1c c0 	mov    %dl,-0x3fe3e47b(,%eax,8)$/;"	l
c0102231	obj/kernel.asm	/^c0102231:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102234	obj/kernel.asm	/^c0102234:	0f b6 14 c5 85 1b 1c 	movzbl -0x3fe3e47b(,%eax,8),%edx$/;"	l
c010223b	obj/kernel.asm	/^c010223b:	c0 $/;"	l
c010223c	obj/kernel.asm	/^c010223c:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c010223f	obj/kernel.asm	/^c010223f:	88 14 c5 85 1b 1c c0 	mov    %dl,-0x3fe3e47b(,%eax,8)$/;"	l
c0102246	obj/kernel.asm	/^c0102246:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102249	obj/kernel.asm	/^c0102249:	0f b6 14 c5 85 1b 1c 	movzbl -0x3fe3e47b(,%eax,8),%edx$/;"	l
c0102250	obj/kernel.asm	/^c0102250:	c0 $/;"	l
c0102251	obj/kernel.asm	/^c0102251:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c0102254	obj/kernel.asm	/^c0102254:	88 14 c5 85 1b 1c c0 	mov    %dl,-0x3fe3e47b(,%eax,8)$/;"	l
c010225b	obj/kernel.asm	/^c010225b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010225e	obj/kernel.asm	/^c010225e:	0f b6 14 c5 85 1b 1c 	movzbl -0x3fe3e47b(,%eax,8),%edx$/;"	l
c0102265	obj/kernel.asm	/^c0102265:	c0 $/;"	l
c0102266	obj/kernel.asm	/^c0102266:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c0102269	obj/kernel.asm	/^c0102269:	88 14 c5 85 1b 1c c0 	mov    %dl,-0x3fe3e47b(,%eax,8)$/;"	l
c0102270	obj/kernel.asm	/^c0102270:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102273	obj/kernel.asm	/^c0102273:	8b 04 85 60 06 13 c0 	mov    -0x3fecf9a0(,%eax,4),%eax$/;"	l
c010227a	obj/kernel.asm	/^c010227a:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010227d	obj/kernel.asm	/^c010227d:	89 c2                	mov    %eax,%edx$/;"	l
c010227f	obj/kernel.asm	/^c010227f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102282	obj/kernel.asm	/^c0102282:	66 89 14 c5 86 1b 1c 	mov    %dx,-0x3fe3e47a(,%eax,8)$/;"	l
c0102289	obj/kernel.asm	/^c0102289:	c0 $/;"	l
c010228a	obj/kernel.asm	/^c010228a:	e9 bf 00 00 00       	jmp    c010234e <idt_init+0x26a>$/;"	l
c010228f	obj/kernel.asm	/^c010228f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102292	obj/kernel.asm	/^c0102292:	8b 04 85 60 06 13 c0 	mov    -0x3fecf9a0(,%eax,4),%eax$/;"	l
c0102299	obj/kernel.asm	/^c0102299:	89 c2                	mov    %eax,%edx$/;"	l
c010229b	obj/kernel.asm	/^c010229b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010229e	obj/kernel.asm	/^c010229e:	66 89 14 c5 80 1b 1c 	mov    %dx,-0x3fe3e480(,%eax,8)$/;"	l
c01022a5	obj/kernel.asm	/^c01022a5:	c0 $/;"	l
c01022a6	obj/kernel.asm	/^c01022a6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022a9	obj/kernel.asm	/^c01022a9:	66 c7 04 c5 82 1b 1c 	movw   $0x8,-0x3fe3e47e(,%eax,8)$/;"	l
c01022b0	obj/kernel.asm	/^c01022b0:	c0 08 00 $/;"	l
c01022b3	obj/kernel.asm	/^c01022b3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022b6	obj/kernel.asm	/^c01022b6:	0f b6 14 c5 84 1b 1c 	movzbl -0x3fe3e47c(,%eax,8),%edx$/;"	l
c01022bd	obj/kernel.asm	/^c01022bd:	c0 $/;"	l
c01022be	obj/kernel.asm	/^c01022be:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c01022c1	obj/kernel.asm	/^c01022c1:	88 14 c5 84 1b 1c c0 	mov    %dl,-0x3fe3e47c(,%eax,8)$/;"	l
c01022c8	obj/kernel.asm	/^c01022c8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022cb	obj/kernel.asm	/^c01022cb:	0f b6 14 c5 84 1b 1c 	movzbl -0x3fe3e47c(,%eax,8),%edx$/;"	l
c01022d2	obj/kernel.asm	/^c01022d2:	c0 $/;"	l
c01022d3	obj/kernel.asm	/^c01022d3:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c01022d6	obj/kernel.asm	/^c01022d6:	88 14 c5 84 1b 1c c0 	mov    %dl,-0x3fe3e47c(,%eax,8)$/;"	l
c01022dd	obj/kernel.asm	/^c01022dd:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022e0	obj/kernel.asm	/^c01022e0:	0f b6 14 c5 85 1b 1c 	movzbl -0x3fe3e47b(,%eax,8),%edx$/;"	l
c01022e7	obj/kernel.asm	/^c01022e7:	c0 $/;"	l
c01022e8	obj/kernel.asm	/^c01022e8:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c01022eb	obj/kernel.asm	/^c01022eb:	83 ca 0e             	or     $0xe,%edx$/;"	l
c01022ee	obj/kernel.asm	/^c01022ee:	88 14 c5 85 1b 1c c0 	mov    %dl,-0x3fe3e47b(,%eax,8)$/;"	l
c01022f5	obj/kernel.asm	/^c01022f5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022f8	obj/kernel.asm	/^c01022f8:	0f b6 14 c5 85 1b 1c 	movzbl -0x3fe3e47b(,%eax,8),%edx$/;"	l
c01022ff	obj/kernel.asm	/^c01022ff:	c0 $/;"	l
c0102300	obj/kernel.asm	/^c0102300:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c0102303	obj/kernel.asm	/^c0102303:	88 14 c5 85 1b 1c c0 	mov    %dl,-0x3fe3e47b(,%eax,8)$/;"	l
c010230a	obj/kernel.asm	/^c010230a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010230d	obj/kernel.asm	/^c010230d:	0f b6 14 c5 85 1b 1c 	movzbl -0x3fe3e47b(,%eax,8),%edx$/;"	l
c0102314	obj/kernel.asm	/^c0102314:	c0 $/;"	l
c0102315	obj/kernel.asm	/^c0102315:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c0102318	obj/kernel.asm	/^c0102318:	88 14 c5 85 1b 1c c0 	mov    %dl,-0x3fe3e47b(,%eax,8)$/;"	l
c010231f	obj/kernel.asm	/^c010231f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102322	obj/kernel.asm	/^c0102322:	0f b6 14 c5 85 1b 1c 	movzbl -0x3fe3e47b(,%eax,8),%edx$/;"	l
c0102329	obj/kernel.asm	/^c0102329:	c0 $/;"	l
c010232a	obj/kernel.asm	/^c010232a:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c010232d	obj/kernel.asm	/^c010232d:	88 14 c5 85 1b 1c c0 	mov    %dl,-0x3fe3e47b(,%eax,8)$/;"	l
c0102334	obj/kernel.asm	/^c0102334:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102337	obj/kernel.asm	/^c0102337:	8b 04 85 60 06 13 c0 	mov    -0x3fecf9a0(,%eax,4),%eax$/;"	l
c010233e	obj/kernel.asm	/^c010233e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0102341	obj/kernel.asm	/^c0102341:	89 c2                	mov    %eax,%edx$/;"	l
c0102343	obj/kernel.asm	/^c0102343:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102346	obj/kernel.asm	/^c0102346:	66 89 14 c5 86 1b 1c 	mov    %dx,-0x3fe3e47a(,%eax,8)$/;"	l
c010234d	obj/kernel.asm	/^c010234d:	c0 $/;"	l
c010234e	obj/kernel.asm	/^c010234e:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0102352	obj/kernel.asm	/^c0102352:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)$/;"	l
c0102359	obj/kernel.asm	/^c0102359:	0f 8e 97 fd ff ff    	jle    c01020f6 <idt_init+0x12>$/;"	l
c010235f	obj/kernel.asm	/^c010235f:	a1 44 08 13 c0       	mov    0xc0130844,%eax$/;"	l
c0102364	obj/kernel.asm	/^c0102364:	66 a3 48 1f 1c c0    	mov    %ax,0xc01c1f48$/;"	l
c010236a	obj/kernel.asm	/^c010236a:	66 c7 05 4a 1f 1c c0 	movw   $0x8,0xc01c1f4a$/;"	l
c0102371	obj/kernel.asm	/^c0102371:	08 00 $/;"	l
c0102373	obj/kernel.asm	/^c0102373:	0f b6 05 4c 1f 1c c0 	movzbl 0xc01c1f4c,%eax$/;"	l
c010237a	obj/kernel.asm	/^c010237a:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
c010237d	obj/kernel.asm	/^c010237d:	a2 4c 1f 1c c0       	mov    %al,0xc01c1f4c$/;"	l
c0102382	obj/kernel.asm	/^c0102382:	0f b6 05 4c 1f 1c c0 	movzbl 0xc01c1f4c,%eax$/;"	l
c0102389	obj/kernel.asm	/^c0102389:	83 e0 1f             	and    $0x1f,%eax$/;"	l
c010238c	obj/kernel.asm	/^c010238c:	a2 4c 1f 1c c0       	mov    %al,0xc01c1f4c$/;"	l
c0102391	obj/kernel.asm	/^c0102391:	0f b6 05 4d 1f 1c c0 	movzbl 0xc01c1f4d,%eax$/;"	l
c0102398	obj/kernel.asm	/^c0102398:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c010239b	obj/kernel.asm	/^c010239b:	83 c8 0e             	or     $0xe,%eax$/;"	l
c010239e	obj/kernel.asm	/^c010239e:	a2 4d 1f 1c c0       	mov    %al,0xc01c1f4d$/;"	l
c01023a3	obj/kernel.asm	/^c01023a3:	0f b6 05 4d 1f 1c c0 	movzbl 0xc01c1f4d,%eax$/;"	l
c01023aa	obj/kernel.asm	/^c01023aa:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c01023ad	obj/kernel.asm	/^c01023ad:	a2 4d 1f 1c c0       	mov    %al,0xc01c1f4d$/;"	l
c01023b2	obj/kernel.asm	/^c01023b2:	0f b6 05 4d 1f 1c c0 	movzbl 0xc01c1f4d,%eax$/;"	l
c01023b9	obj/kernel.asm	/^c01023b9:	83 c8 60             	or     $0x60,%eax$/;"	l
c01023bc	obj/kernel.asm	/^c01023bc:	a2 4d 1f 1c c0       	mov    %al,0xc01c1f4d$/;"	l
c01023c1	obj/kernel.asm	/^c01023c1:	0f b6 05 4d 1f 1c c0 	movzbl 0xc01c1f4d,%eax$/;"	l
c01023c8	obj/kernel.asm	/^c01023c8:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c01023cb	obj/kernel.asm	/^c01023cb:	a2 4d 1f 1c c0       	mov    %al,0xc01c1f4d$/;"	l
c01023d0	obj/kernel.asm	/^c01023d0:	a1 44 08 13 c0       	mov    0xc0130844,%eax$/;"	l
c01023d5	obj/kernel.asm	/^c01023d5:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01023d8	obj/kernel.asm	/^c01023d8:	66 a3 4e 1f 1c c0    	mov    %ax,0xc01c1f4e$/;"	l
c01023de	obj/kernel.asm	/^c01023de:	c7 45 f8 c0 05 13 c0 	movl   $0xc01305c0,-0x8(%ebp)$/;"	l
c01023e5	obj/kernel.asm	/^c01023e5:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01023e8	obj/kernel.asm	/^c01023e8:	0f 01 18             	lidtl  (%eax)$/;"	l
c01023eb	obj/kernel.asm	/^c01023eb:	c9                   	leave  $/;"	l
c01023ec	obj/kernel.asm	/^c01023ec:	c3                   	ret    $/;"	l
c01023ed	obj/kernel.asm	/^c01023ed <trapname>:$/;"	l
c01023ed	obj/kernel.asm	/^c01023ed:	55                   	push   %ebp$/;"	l
c01023ee	obj/kernel.asm	/^c01023ee:	89 e5                	mov    %esp,%ebp$/;"	l
c01023f0	obj/kernel.asm	/^c01023f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023f3	obj/kernel.asm	/^c01023f3:	83 f8 13             	cmp    $0x13,%eax$/;"	l
c01023f6	obj/kernel.asm	/^c01023f6:	77 0c                	ja     c0102404 <trapname+0x17>$/;"	l
c01023f8	obj/kernel.asm	/^c01023f8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023fb	obj/kernel.asm	/^c01023fb:	8b 04 85 c0 d4 10 c0 	mov    -0x3fef2b40(,%eax,4),%eax$/;"	l
c0102402	obj/kernel.asm	/^c0102402:	eb 18                	jmp    c010241c <trapname+0x2f>$/;"	l
c0102404	obj/kernel.asm	/^c0102404:	83 7d 08 1f          	cmpl   $0x1f,0x8(%ebp)$/;"	l
c0102408	obj/kernel.asm	/^c0102408:	7e 0d                	jle    c0102417 <trapname+0x2a>$/;"	l
c010240a	obj/kernel.asm	/^c010240a:	83 7d 08 2f          	cmpl   $0x2f,0x8(%ebp)$/;"	l
c010240e	obj/kernel.asm	/^c010240e:	7f 07                	jg     c0102417 <trapname+0x2a>$/;"	l
c0102410	obj/kernel.asm	/^c0102410:	b8 3f d0 10 c0       	mov    $0xc010d03f,%eax$/;"	l
c0102415	obj/kernel.asm	/^c0102415:	eb 05                	jmp    c010241c <trapname+0x2f>$/;"	l
c0102417	obj/kernel.asm	/^c0102417:	b8 52 d0 10 c0       	mov    $0xc010d052,%eax$/;"	l
c010241c	obj/kernel.asm	/^c010241c:	5d                   	pop    %ebp$/;"	l
c010241d	obj/kernel.asm	/^c010241d:	c3                   	ret    $/;"	l
c010241e	obj/kernel.asm	/^c010241e <trap_in_kernel>:$/;"	l
c010241e	obj/kernel.asm	/^c010241e:	55                   	push   %ebp$/;"	l
c010241f	obj/kernel.asm	/^c010241f:	89 e5                	mov    %esp,%ebp$/;"	l
c0102421	obj/kernel.asm	/^c0102421:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102424	obj/kernel.asm	/^c0102424:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c0102428	obj/kernel.asm	/^c0102428:	66 83 f8 08          	cmp    $0x8,%ax$/;"	l
c010242c	obj/kernel.asm	/^c010242c:	0f 94 c0             	sete   %al$/;"	l
c010242f	obj/kernel.asm	/^c010242f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102432	obj/kernel.asm	/^c0102432:	5d                   	pop    %ebp$/;"	l
c0102433	obj/kernel.asm	/^c0102433:	c3                   	ret    $/;"	l
c0102434	obj/kernel.asm	/^c0102434 <print_trapframe>:$/;"	l
c0102434	obj/kernel.asm	/^c0102434:	55                   	push   %ebp$/;"	l
c0102435	obj/kernel.asm	/^c0102435:	89 e5                	mov    %esp,%ebp$/;"	l
c0102437	obj/kernel.asm	/^c0102437:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010243a	obj/kernel.asm	/^c010243a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010243d	obj/kernel.asm	/^c010243d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102440	obj/kernel.asm	/^c0102440:	68 93 d0 10 c0       	push   $0xc010d093$/;"	l
c0102445	obj/kernel.asm	/^c0102445:	e8 30 de ff ff       	call   c010027a <cprintf>$/;"	l
c010244a	obj/kernel.asm	/^c010244a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010244d	obj/kernel.asm	/^c010244d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102450	obj/kernel.asm	/^c0102450:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102453	obj/kernel.asm	/^c0102453:	50                   	push   %eax$/;"	l
c0102454	obj/kernel.asm	/^c0102454:	e8 b7 01 00 00       	call   c0102610 <print_regs>$/;"	l
c0102459	obj/kernel.asm	/^c0102459:	83 c4 10             	add    $0x10,%esp$/;"	l
c010245c	obj/kernel.asm	/^c010245c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010245f	obj/kernel.asm	/^c010245f:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c0102463	obj/kernel.asm	/^c0102463:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102466	obj/kernel.asm	/^c0102466:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102469	obj/kernel.asm	/^c0102469:	50                   	push   %eax$/;"	l
c010246a	obj/kernel.asm	/^c010246a:	68 a4 d0 10 c0       	push   $0xc010d0a4$/;"	l
c010246f	obj/kernel.asm	/^c010246f:	e8 06 de ff ff       	call   c010027a <cprintf>$/;"	l
c0102474	obj/kernel.asm	/^c0102474:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102477	obj/kernel.asm	/^c0102477:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010247a	obj/kernel.asm	/^c010247a:	0f b7 40 28          	movzwl 0x28(%eax),%eax$/;"	l
c010247e	obj/kernel.asm	/^c010247e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102481	obj/kernel.asm	/^c0102481:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102484	obj/kernel.asm	/^c0102484:	50                   	push   %eax$/;"	l
c0102485	obj/kernel.asm	/^c0102485:	68 b7 d0 10 c0       	push   $0xc010d0b7$/;"	l
c010248a	obj/kernel.asm	/^c010248a:	e8 eb dd ff ff       	call   c010027a <cprintf>$/;"	l
c010248f	obj/kernel.asm	/^c010248f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102492	obj/kernel.asm	/^c0102492:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102495	obj/kernel.asm	/^c0102495:	0f b7 40 24          	movzwl 0x24(%eax),%eax$/;"	l
c0102499	obj/kernel.asm	/^c0102499:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010249c	obj/kernel.asm	/^c010249c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010249f	obj/kernel.asm	/^c010249f:	50                   	push   %eax$/;"	l
c01024a0	obj/kernel.asm	/^c01024a0:	68 ca d0 10 c0       	push   $0xc010d0ca$/;"	l
c01024a5	obj/kernel.asm	/^c01024a5:	e8 d0 dd ff ff       	call   c010027a <cprintf>$/;"	l
c01024aa	obj/kernel.asm	/^c01024aa:	83 c4 10             	add    $0x10,%esp$/;"	l
c01024ad	obj/kernel.asm	/^c01024ad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024b0	obj/kernel.asm	/^c01024b0:	0f b7 40 20          	movzwl 0x20(%eax),%eax$/;"	l
c01024b4	obj/kernel.asm	/^c01024b4:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01024b7	obj/kernel.asm	/^c01024b7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01024ba	obj/kernel.asm	/^c01024ba:	50                   	push   %eax$/;"	l
c01024bb	obj/kernel.asm	/^c01024bb:	68 dd d0 10 c0       	push   $0xc010d0dd$/;"	l
c01024c0	obj/kernel.asm	/^c01024c0:	e8 b5 dd ff ff       	call   c010027a <cprintf>$/;"	l
c01024c5	obj/kernel.asm	/^c01024c5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01024c8	obj/kernel.asm	/^c01024c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024cb	obj/kernel.asm	/^c01024cb:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01024ce	obj/kernel.asm	/^c01024ce:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01024d1	obj/kernel.asm	/^c01024d1:	50                   	push   %eax$/;"	l
c01024d2	obj/kernel.asm	/^c01024d2:	e8 16 ff ff ff       	call   c01023ed <trapname>$/;"	l
c01024d7	obj/kernel.asm	/^c01024d7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01024da	obj/kernel.asm	/^c01024da:	89 c2                	mov    %eax,%edx$/;"	l
c01024dc	obj/kernel.asm	/^c01024dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024df	obj/kernel.asm	/^c01024df:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01024e2	obj/kernel.asm	/^c01024e2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01024e5	obj/kernel.asm	/^c01024e5:	52                   	push   %edx$/;"	l
c01024e6	obj/kernel.asm	/^c01024e6:	50                   	push   %eax$/;"	l
c01024e7	obj/kernel.asm	/^c01024e7:	68 f0 d0 10 c0       	push   $0xc010d0f0$/;"	l
c01024ec	obj/kernel.asm	/^c01024ec:	e8 89 dd ff ff       	call   c010027a <cprintf>$/;"	l
c01024f1	obj/kernel.asm	/^c01024f1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01024f4	obj/kernel.asm	/^c01024f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024f7	obj/kernel.asm	/^c01024f7:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01024fa	obj/kernel.asm	/^c01024fa:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01024fd	obj/kernel.asm	/^c01024fd:	50                   	push   %eax$/;"	l
c01024fe	obj/kernel.asm	/^c01024fe:	68 02 d1 10 c0       	push   $0xc010d102$/;"	l
c0102503	obj/kernel.asm	/^c0102503:	e8 72 dd ff ff       	call   c010027a <cprintf>$/;"	l
c0102508	obj/kernel.asm	/^c0102508:	83 c4 10             	add    $0x10,%esp$/;"	l
c010250b	obj/kernel.asm	/^c010250b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010250e	obj/kernel.asm	/^c010250e:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0102511	obj/kernel.asm	/^c0102511:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102514	obj/kernel.asm	/^c0102514:	50                   	push   %eax$/;"	l
c0102515	obj/kernel.asm	/^c0102515:	68 11 d1 10 c0       	push   $0xc010d111$/;"	l
c010251a	obj/kernel.asm	/^c010251a:	e8 5b dd ff ff       	call   c010027a <cprintf>$/;"	l
c010251f	obj/kernel.asm	/^c010251f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102522	obj/kernel.asm	/^c0102522:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102525	obj/kernel.asm	/^c0102525:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c0102529	obj/kernel.asm	/^c0102529:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010252c	obj/kernel.asm	/^c010252c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010252f	obj/kernel.asm	/^c010252f:	50                   	push   %eax$/;"	l
c0102530	obj/kernel.asm	/^c0102530:	68 20 d1 10 c0       	push   $0xc010d120$/;"	l
c0102535	obj/kernel.asm	/^c0102535:	e8 40 dd ff ff       	call   c010027a <cprintf>$/;"	l
c010253a	obj/kernel.asm	/^c010253a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010253d	obj/kernel.asm	/^c010253d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102540	obj/kernel.asm	/^c0102540:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c0102543	obj/kernel.asm	/^c0102543:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102546	obj/kernel.asm	/^c0102546:	50                   	push   %eax$/;"	l
c0102547	obj/kernel.asm	/^c0102547:	68 33 d1 10 c0       	push   $0xc010d133$/;"	l
c010254c	obj/kernel.asm	/^c010254c:	e8 29 dd ff ff       	call   c010027a <cprintf>$/;"	l
c0102551	obj/kernel.asm	/^c0102551:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102554	obj/kernel.asm	/^c0102554:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010255b	obj/kernel.asm	/^c010255b:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c0102562	obj/kernel.asm	/^c0102562:	eb 3f                	jmp    c01025a3 <print_trapframe+0x16f>$/;"	l
c0102564	obj/kernel.asm	/^c0102564:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102567	obj/kernel.asm	/^c0102567:	8b 50 40             	mov    0x40(%eax),%edx$/;"	l
c010256a	obj/kernel.asm	/^c010256a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010256d	obj/kernel.asm	/^c010256d:	21 d0                	and    %edx,%eax$/;"	l
c010256f	obj/kernel.asm	/^c010256f:	85 c0                	test   %eax,%eax$/;"	l
c0102571	obj/kernel.asm	/^c0102571:	74 29                	je     c010259c <print_trapframe+0x168>$/;"	l
c0102573	obj/kernel.asm	/^c0102573:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102576	obj/kernel.asm	/^c0102576:	8b 04 85 00 06 13 c0 	mov    -0x3fecfa00(,%eax,4),%eax$/;"	l
c010257d	obj/kernel.asm	/^c010257d:	85 c0                	test   %eax,%eax$/;"	l
c010257f	obj/kernel.asm	/^c010257f:	74 1b                	je     c010259c <print_trapframe+0x168>$/;"	l
c0102581	obj/kernel.asm	/^c0102581:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102584	obj/kernel.asm	/^c0102584:	8b 04 85 00 06 13 c0 	mov    -0x3fecfa00(,%eax,4),%eax$/;"	l
c010258b	obj/kernel.asm	/^c010258b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010258e	obj/kernel.asm	/^c010258e:	50                   	push   %eax$/;"	l
c010258f	obj/kernel.asm	/^c010258f:	68 42 d1 10 c0       	push   $0xc010d142$/;"	l
c0102594	obj/kernel.asm	/^c0102594:	e8 e1 dc ff ff       	call   c010027a <cprintf>$/;"	l
c0102599	obj/kernel.asm	/^c0102599:	83 c4 10             	add    $0x10,%esp$/;"	l
c010259c	obj/kernel.asm	/^c010259c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01025a0	obj/kernel.asm	/^c01025a0:	d1 65 f0             	shll   -0x10(%ebp)$/;"	d
c01025a3	obj/kernel.asm	/^c01025a3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01025a6	obj/kernel.asm	/^c01025a6:	83 f8 17             	cmp    $0x17,%eax$/;"	l
c01025a9	obj/kernel.asm	/^c01025a9:	76 b9                	jbe    c0102564 <print_trapframe+0x130>$/;"	l
c01025ab	obj/kernel.asm	/^c01025ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025ae	obj/kernel.asm	/^c01025ae:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c01025b1	obj/kernel.asm	/^c01025b1:	25 00 30 00 00       	and    $0x3000,%eax$/;"	l
c01025b6	obj/kernel.asm	/^c01025b6:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01025b9	obj/kernel.asm	/^c01025b9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01025bc	obj/kernel.asm	/^c01025bc:	50                   	push   %eax$/;"	l
c01025bd	obj/kernel.asm	/^c01025bd:	68 46 d1 10 c0       	push   $0xc010d146$/;"	l
c01025c2	obj/kernel.asm	/^c01025c2:	e8 b3 dc ff ff       	call   c010027a <cprintf>$/;"	l
c01025c7	obj/kernel.asm	/^c01025c7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025ca	obj/kernel.asm	/^c01025ca:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01025cd	obj/kernel.asm	/^c01025cd:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01025d0	obj/kernel.asm	/^c01025d0:	e8 49 fe ff ff       	call   c010241e <trap_in_kernel>$/;"	l
c01025d5	obj/kernel.asm	/^c01025d5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025d8	obj/kernel.asm	/^c01025d8:	85 c0                	test   %eax,%eax$/;"	l
c01025da	obj/kernel.asm	/^c01025da:	75 32                	jne    c010260e <print_trapframe+0x1da>$/;"	l
c01025dc	obj/kernel.asm	/^c01025dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025df	obj/kernel.asm	/^c01025df:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c01025e2	obj/kernel.asm	/^c01025e2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01025e5	obj/kernel.asm	/^c01025e5:	50                   	push   %eax$/;"	l
c01025e6	obj/kernel.asm	/^c01025e6:	68 4f d1 10 c0       	push   $0xc010d14f$/;"	l
c01025eb	obj/kernel.asm	/^c01025eb:	e8 8a dc ff ff       	call   c010027a <cprintf>$/;"	l
c01025f0	obj/kernel.asm	/^c01025f0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025f3	obj/kernel.asm	/^c01025f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025f6	obj/kernel.asm	/^c01025f6:	0f b7 40 48          	movzwl 0x48(%eax),%eax$/;"	l
c01025fa	obj/kernel.asm	/^c01025fa:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01025fd	obj/kernel.asm	/^c01025fd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102600	obj/kernel.asm	/^c0102600:	50                   	push   %eax$/;"	l
c0102601	obj/kernel.asm	/^c0102601:	68 5e d1 10 c0       	push   $0xc010d15e$/;"	l
c0102606	obj/kernel.asm	/^c0102606:	e8 6f dc ff ff       	call   c010027a <cprintf>$/;"	l
c010260b	obj/kernel.asm	/^c010260b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010260e	obj/kernel.asm	/^c010260e:	c9                   	leave  $/;"	l
c010260f	obj/kernel.asm	/^c010260f:	c3                   	ret    $/;"	l
c0102610	obj/kernel.asm	/^c0102610 <print_regs>:$/;"	l
c0102610	obj/kernel.asm	/^c0102610:	55                   	push   %ebp$/;"	l
c0102611	obj/kernel.asm	/^c0102611:	89 e5                	mov    %esp,%ebp$/;"	l
c0102613	obj/kernel.asm	/^c0102613:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102616	obj/kernel.asm	/^c0102616:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102619	obj/kernel.asm	/^c0102619:	8b 00                	mov    (%eax),%eax$/;"	l
c010261b	obj/kernel.asm	/^c010261b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010261e	obj/kernel.asm	/^c010261e:	50                   	push   %eax$/;"	l
c010261f	obj/kernel.asm	/^c010261f:	68 71 d1 10 c0       	push   $0xc010d171$/;"	l
c0102624	obj/kernel.asm	/^c0102624:	e8 51 dc ff ff       	call   c010027a <cprintf>$/;"	l
c0102629	obj/kernel.asm	/^c0102629:	83 c4 10             	add    $0x10,%esp$/;"	l
c010262c	obj/kernel.asm	/^c010262c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010262f	obj/kernel.asm	/^c010262f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0102632	obj/kernel.asm	/^c0102632:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102635	obj/kernel.asm	/^c0102635:	50                   	push   %eax$/;"	l
c0102636	obj/kernel.asm	/^c0102636:	68 80 d1 10 c0       	push   $0xc010d180$/;"	l
c010263b	obj/kernel.asm	/^c010263b:	e8 3a dc ff ff       	call   c010027a <cprintf>$/;"	l
c0102640	obj/kernel.asm	/^c0102640:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102643	obj/kernel.asm	/^c0102643:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102646	obj/kernel.asm	/^c0102646:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0102649	obj/kernel.asm	/^c0102649:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010264c	obj/kernel.asm	/^c010264c:	50                   	push   %eax$/;"	l
c010264d	obj/kernel.asm	/^c010264d:	68 8f d1 10 c0       	push   $0xc010d18f$/;"	l
c0102652	obj/kernel.asm	/^c0102652:	e8 23 dc ff ff       	call   c010027a <cprintf>$/;"	l
c0102657	obj/kernel.asm	/^c0102657:	83 c4 10             	add    $0x10,%esp$/;"	l
c010265a	obj/kernel.asm	/^c010265a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010265d	obj/kernel.asm	/^c010265d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0102660	obj/kernel.asm	/^c0102660:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102663	obj/kernel.asm	/^c0102663:	50                   	push   %eax$/;"	l
c0102664	obj/kernel.asm	/^c0102664:	68 9e d1 10 c0       	push   $0xc010d19e$/;"	l
c0102669	obj/kernel.asm	/^c0102669:	e8 0c dc ff ff       	call   c010027a <cprintf>$/;"	l
c010266e	obj/kernel.asm	/^c010266e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102671	obj/kernel.asm	/^c0102671:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102674	obj/kernel.asm	/^c0102674:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0102677	obj/kernel.asm	/^c0102677:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010267a	obj/kernel.asm	/^c010267a:	50                   	push   %eax$/;"	l
c010267b	obj/kernel.asm	/^c010267b:	68 ad d1 10 c0       	push   $0xc010d1ad$/;"	l
c0102680	obj/kernel.asm	/^c0102680:	e8 f5 db ff ff       	call   c010027a <cprintf>$/;"	l
c0102685	obj/kernel.asm	/^c0102685:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102688	obj/kernel.asm	/^c0102688:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010268b	obj/kernel.asm	/^c010268b:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010268e	obj/kernel.asm	/^c010268e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102691	obj/kernel.asm	/^c0102691:	50                   	push   %eax$/;"	l
c0102692	obj/kernel.asm	/^c0102692:	68 bc d1 10 c0       	push   $0xc010d1bc$/;"	l
c0102697	obj/kernel.asm	/^c0102697:	e8 de db ff ff       	call   c010027a <cprintf>$/;"	l
c010269c	obj/kernel.asm	/^c010269c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010269f	obj/kernel.asm	/^c010269f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026a2	obj/kernel.asm	/^c01026a2:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01026a5	obj/kernel.asm	/^c01026a5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01026a8	obj/kernel.asm	/^c01026a8:	50                   	push   %eax$/;"	l
c01026a9	obj/kernel.asm	/^c01026a9:	68 cb d1 10 c0       	push   $0xc010d1cb$/;"	l
c01026ae	obj/kernel.asm	/^c01026ae:	e8 c7 db ff ff       	call   c010027a <cprintf>$/;"	l
c01026b3	obj/kernel.asm	/^c01026b3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01026b6	obj/kernel.asm	/^c01026b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026b9	obj/kernel.asm	/^c01026b9:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01026bc	obj/kernel.asm	/^c01026bc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01026bf	obj/kernel.asm	/^c01026bf:	50                   	push   %eax$/;"	l
c01026c0	obj/kernel.asm	/^c01026c0:	68 da d1 10 c0       	push   $0xc010d1da$/;"	l
c01026c5	obj/kernel.asm	/^c01026c5:	e8 b0 db ff ff       	call   c010027a <cprintf>$/;"	l
c01026ca	obj/kernel.asm	/^c01026ca:	83 c4 10             	add    $0x10,%esp$/;"	l
c01026cd	obj/kernel.asm	/^c01026cd:	c9                   	leave  $/;"	l
c01026ce	obj/kernel.asm	/^c01026ce:	c3                   	ret    $/;"	l
c01026cf	obj/kernel.asm	/^c01026cf <print_pgfault>:$/;"	l
c01026cf	obj/kernel.asm	/^c01026cf:	55                   	push   %ebp$/;"	l
c01026d0	obj/kernel.asm	/^c01026d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01026d2	obj/kernel.asm	/^c01026d2:	53                   	push   %ebx$/;"	l
c01026d3	obj/kernel.asm	/^c01026d3:	83 ec 14             	sub    $0x14,%esp$/;"	l
c01026d6	obj/kernel.asm	/^c01026d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026d9	obj/kernel.asm	/^c01026d9:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01026dc	obj/kernel.asm	/^c01026dc:	83 e0 01             	and    $0x1,%eax$/;"	l
c01026df	obj/kernel.asm	/^c01026df:	85 c0                	test   %eax,%eax$/;"	l
c01026e1	obj/kernel.asm	/^c01026e1:	74 07                	je     c01026ea <print_pgfault+0x1b>$/;"	l
c01026e3	obj/kernel.asm	/^c01026e3:	bb e9 d1 10 c0       	mov    $0xc010d1e9,%ebx$/;"	l
c01026e8	obj/kernel.asm	/^c01026e8:	eb 05                	jmp    c01026ef <print_pgfault+0x20>$/;"	l
c01026ea	obj/kernel.asm	/^c01026ea:	bb fa d1 10 c0       	mov    $0xc010d1fa,%ebx$/;"	l
c01026ef	obj/kernel.asm	/^c01026ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026f2	obj/kernel.asm	/^c01026f2:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01026f5	obj/kernel.asm	/^c01026f5:	83 e0 02             	and    $0x2,%eax$/;"	l
c01026f8	obj/kernel.asm	/^c01026f8:	85 c0                	test   %eax,%eax$/;"	l
c01026fa	obj/kernel.asm	/^c01026fa:	74 07                	je     c0102703 <print_pgfault+0x34>$/;"	l
c01026fc	obj/kernel.asm	/^c01026fc:	b9 57 00 00 00       	mov    $0x57,%ecx$/;"	l
c0102701	obj/kernel.asm	/^c0102701:	eb 05                	jmp    c0102708 <print_pgfault+0x39>$/;"	l
c0102703	obj/kernel.asm	/^c0102703:	b9 52 00 00 00       	mov    $0x52,%ecx$/;"	l
c0102708	obj/kernel.asm	/^c0102708:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010270b	obj/kernel.asm	/^c010270b:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010270e	obj/kernel.asm	/^c010270e:	83 e0 04             	and    $0x4,%eax$/;"	l
c0102711	obj/kernel.asm	/^c0102711:	85 c0                	test   %eax,%eax$/;"	l
c0102713	obj/kernel.asm	/^c0102713:	74 07                	je     c010271c <print_pgfault+0x4d>$/;"	l
c0102715	obj/kernel.asm	/^c0102715:	ba 55 00 00 00       	mov    $0x55,%edx$/;"	l
c010271a	obj/kernel.asm	/^c010271a:	eb 05                	jmp    c0102721 <print_pgfault+0x52>$/;"	l
c010271c	obj/kernel.asm	/^c010271c:	ba 4b 00 00 00       	mov    $0x4b,%edx$/;"	l
c0102721	obj/kernel.asm	/^c0102721:	0f 20 d0             	mov    %cr2,%eax$/;"	l
c0102724	obj/kernel.asm	/^c0102724:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102727	obj/kernel.asm	/^c0102727:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010272a	obj/kernel.asm	/^c010272a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010272d	obj/kernel.asm	/^c010272d:	53                   	push   %ebx$/;"	l
c010272e	obj/kernel.asm	/^c010272e:	51                   	push   %ecx$/;"	l
c010272f	obj/kernel.asm	/^c010272f:	52                   	push   %edx$/;"	l
c0102730	obj/kernel.asm	/^c0102730:	50                   	push   %eax$/;"	l
c0102731	obj/kernel.asm	/^c0102731:	68 08 d2 10 c0       	push   $0xc010d208$/;"	l
c0102736	obj/kernel.asm	/^c0102736:	e8 3f db ff ff       	call   c010027a <cprintf>$/;"	l
c010273b	obj/kernel.asm	/^c010273b:	83 c4 20             	add    $0x20,%esp$/;"	l
c010273e	obj/kernel.asm	/^c010273e:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0102741	obj/kernel.asm	/^c0102741:	c9                   	leave  $/;"	l
c0102742	obj/kernel.asm	/^c0102742:	c3                   	ret    $/;"	l
c0102743	obj/kernel.asm	/^c0102743 <pgfault_handler>:$/;"	l
c0102743	obj/kernel.asm	/^c0102743:	55                   	push   %ebp$/;"	l
c0102744	obj/kernel.asm	/^c0102744:	89 e5                	mov    %esp,%ebp$/;"	l
c0102746	obj/kernel.asm	/^c0102746:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102749	obj/kernel.asm	/^c0102749:	a1 9c 45 1c c0       	mov    0xc01c459c,%eax$/;"	l
c010274e	obj/kernel.asm	/^c010274e:	85 c0                	test   %eax,%eax$/;"	l
c0102750	obj/kernel.asm	/^c0102750:	74 0e                	je     c0102760 <pgfault_handler+0x1d>$/;"	l
c0102752	obj/kernel.asm	/^c0102752:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102755	obj/kernel.asm	/^c0102755:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102758	obj/kernel.asm	/^c0102758:	e8 72 ff ff ff       	call   c01026cf <print_pgfault>$/;"	l
c010275d	obj/kernel.asm	/^c010275d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102760	obj/kernel.asm	/^c0102760:	a1 9c 45 1c c0       	mov    0xc01c459c,%eax$/;"	l
c0102765	obj/kernel.asm	/^c0102765:	85 c0                	test   %eax,%eax$/;"	l
c0102767	obj/kernel.asm	/^c0102767:	74 32                	je     c010279b <pgfault_handler+0x58>$/;"	l
c0102769	obj/kernel.asm	/^c0102769:	8b 15 88 24 1c c0    	mov    0xc01c2488,%edx$/;"	l
c010276f	obj/kernel.asm	/^c010276f:	a1 80 24 1c c0       	mov    0xc01c2480,%eax$/;"	l
c0102774	obj/kernel.asm	/^c0102774:	39 c2                	cmp    %eax,%edx$/;"	l
c0102776	obj/kernel.asm	/^c0102776:	74 19                	je     c0102791 <pgfault_handler+0x4e>$/;"	l
c0102778	obj/kernel.asm	/^c0102778:	68 2b d2 10 c0       	push   $0xc010d22b$/;"	l
c010277d	obj/kernel.asm	/^c010277d:	68 3f d2 10 c0       	push   $0xc010d23f$/;"	l
c0102782	obj/kernel.asm	/^c0102782:	68 bc 00 00 00       	push   $0xbc$/;"	l
c0102787	obj/kernel.asm	/^c0102787:	68 2e d0 10 c0       	push   $0xc010d02e$/;"	l
c010278c	obj/kernel.asm	/^c010278c:	e8 4e dc ff ff       	call   c01003df <__panic>$/;"	l
c0102791	obj/kernel.asm	/^c0102791:	a1 9c 45 1c c0       	mov    0xc01c459c,%eax$/;"	l
c0102796	obj/kernel.asm	/^c0102796:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102799	obj/kernel.asm	/^c0102799:	eb 47                	jmp    c01027e2 <pgfault_handler+0x9f>$/;"	l
c010279b	obj/kernel.asm	/^c010279b:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c01027a0	obj/kernel.asm	/^c01027a0:	85 c0                	test   %eax,%eax$/;"	l
c01027a2	obj/kernel.asm	/^c01027a2:	75 33                	jne    c01027d7 <pgfault_handler+0x94>$/;"	l
c01027a4	obj/kernel.asm	/^c01027a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01027a7	obj/kernel.asm	/^c01027a7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01027aa	obj/kernel.asm	/^c01027aa:	e8 85 fc ff ff       	call   c0102434 <print_trapframe>$/;"	l
c01027af	obj/kernel.asm	/^c01027af:	83 c4 10             	add    $0x10,%esp$/;"	l
c01027b2	obj/kernel.asm	/^c01027b2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01027b5	obj/kernel.asm	/^c01027b5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01027b8	obj/kernel.asm	/^c01027b8:	e8 12 ff ff ff       	call   c01026cf <print_pgfault>$/;"	l
c01027bd	obj/kernel.asm	/^c01027bd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01027c0	obj/kernel.asm	/^c01027c0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01027c3	obj/kernel.asm	/^c01027c3:	68 54 d2 10 c0       	push   $0xc010d254$/;"	l
c01027c8	obj/kernel.asm	/^c01027c8:	68 c3 00 00 00       	push   $0xc3$/;"	l
c01027cd	obj/kernel.asm	/^c01027cd:	68 2e d0 10 c0       	push   $0xc010d02e$/;"	l
c01027d2	obj/kernel.asm	/^c01027d2:	e8 08 dc ff ff       	call   c01003df <__panic>$/;"	l
c01027d7	obj/kernel.asm	/^c01027d7:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c01027dc	obj/kernel.asm	/^c01027dc:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01027df	obj/kernel.asm	/^c01027df:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01027e2	obj/kernel.asm	/^c01027e2:	0f 20 d0             	mov    %cr2,%eax$/;"	l
c01027e5	obj/kernel.asm	/^c01027e5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01027e8	obj/kernel.asm	/^c01027e8:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01027eb	obj/kernel.asm	/^c01027eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01027ee	obj/kernel.asm	/^c01027ee:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01027f1	obj/kernel.asm	/^c01027f1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01027f4	obj/kernel.asm	/^c01027f4:	52                   	push   %edx$/;"	l
c01027f5	obj/kernel.asm	/^c01027f5:	50                   	push   %eax$/;"	l
c01027f6	obj/kernel.asm	/^c01027f6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01027f9	obj/kernel.asm	/^c01027f9:	e8 e9 37 00 00       	call   c0105fe7 <do_pgfault>$/;"	l
c01027fe	obj/kernel.asm	/^c01027fe:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102801	obj/kernel.asm	/^c0102801:	c9                   	leave  $/;"	l
c0102802	obj/kernel.asm	/^c0102802:	c3                   	ret    $/;"	l
c0102803	obj/kernel.asm	/^c0102803 <trap_dispatch>:$/;"	l
c0102803	obj/kernel.asm	/^c0102803:	55                   	push   %ebp$/;"	l
c0102804	obj/kernel.asm	/^c0102804:	89 e5                	mov    %esp,%ebp$/;"	l
c0102806	obj/kernel.asm	/^c0102806:	57                   	push   %edi$/;"	l
c0102807	obj/kernel.asm	/^c0102807:	56                   	push   %esi$/;"	l
c0102808	obj/kernel.asm	/^c0102808:	53                   	push   %ebx$/;"	l
c0102809	obj/kernel.asm	/^c0102809:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
c010280c	obj/kernel.asm	/^c010280c:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0102813	obj/kernel.asm	/^c0102813:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102816	obj/kernel.asm	/^c0102816:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0102819	obj/kernel.asm	/^c0102819:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
c010281c	obj/kernel.asm	/^c010281c:	77 38                	ja     c0102856 <trap_dispatch+0x53>$/;"	l
c010281e	obj/kernel.asm	/^c010281e:	83 f8 2e             	cmp    $0x2e,%eax$/;"	l
c0102821	obj/kernel.asm	/^c0102821:	0f 83 fa 02 00 00    	jae    c0102b21 <trap_dispatch+0x31e>$/;"	l
c0102827	obj/kernel.asm	/^c0102827:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c010282a	obj/kernel.asm	/^c010282a:	0f 84 ec 00 00 00    	je     c010291c <trap_dispatch+0x119>$/;"	l
c0102830	obj/kernel.asm	/^c0102830:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c0102833	obj/kernel.asm	/^c0102833:	77 0a                	ja     c010283f <trap_dispatch+0x3c>$/;"	l
c0102835	obj/kernel.asm	/^c0102835:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
c0102838	obj/kernel.asm	/^c0102838:	74 3e                	je     c0102878 <trap_dispatch+0x75>$/;"	l
c010283a	obj/kernel.asm	/^c010283a:	e9 97 02 00 00       	jmp    c0102ad6 <trap_dispatch+0x2d3>$/;"	l
c010283f	obj/kernel.asm	/^c010283f:	83 f8 21             	cmp    $0x21,%eax$/;"	l
c0102842	obj/kernel.asm	/^c0102842:	0f 84 12 01 00 00    	je     c010295a <trap_dispatch+0x157>$/;"	l
c0102848	obj/kernel.asm	/^c0102848:	83 f8 24             	cmp    $0x24,%eax$/;"	l
c010284b	obj/kernel.asm	/^c010284b:	0f 84 e2 00 00 00    	je     c0102933 <trap_dispatch+0x130>$/;"	l
c0102851	obj/kernel.asm	/^c0102851:	e9 80 02 00 00       	jmp    c0102ad6 <trap_dispatch+0x2d3>$/;"	l
c0102856	obj/kernel.asm	/^c0102856:	83 f8 79             	cmp    $0x79,%eax$/;"	l
c0102859	obj/kernel.asm	/^c0102859:	0f 84 dd 01 00 00    	je     c0102a3c <trap_dispatch+0x239>$/;"	l
c010285f	obj/kernel.asm	/^c010285f:	3d 80 00 00 00       	cmp    $0x80,%eax$/;"	l
c0102864	obj/kernel.asm	/^c0102864:	0f 84 a8 00 00 00    	je     c0102912 <trap_dispatch+0x10f>$/;"	l
c010286a	obj/kernel.asm	/^c010286a:	83 f8 78             	cmp    $0x78,%eax$/;"	l
c010286d	obj/kernel.asm	/^c010286d:	0f 84 0e 01 00 00    	je     c0102981 <trap_dispatch+0x17e>$/;"	l
c0102873	obj/kernel.asm	/^c0102873:	e9 5e 02 00 00       	jmp    c0102ad6 <trap_dispatch+0x2d3>$/;"	l
c0102878	obj/kernel.asm	/^c0102878:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010287b	obj/kernel.asm	/^c010287b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010287e	obj/kernel.asm	/^c010287e:	e8 c0 fe ff ff       	call   c0102743 <pgfault_handler>$/;"	l
c0102883	obj/kernel.asm	/^c0102883:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102886	obj/kernel.asm	/^c0102886:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0102889	obj/kernel.asm	/^c0102889:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010288d	obj/kernel.asm	/^c010288d:	74 7e                	je     c010290d <trap_dispatch+0x10a>$/;"	l
c010288f	obj/kernel.asm	/^c010288f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102892	obj/kernel.asm	/^c0102892:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102895	obj/kernel.asm	/^c0102895:	e8 9a fb ff ff       	call   c0102434 <print_trapframe>$/;"	l
c010289a	obj/kernel.asm	/^c010289a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010289d	obj/kernel.asm	/^c010289d:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c01028a2	obj/kernel.asm	/^c01028a2:	85 c0                	test   %eax,%eax$/;"	l
c01028a4	obj/kernel.asm	/^c01028a4:	75 17                	jne    c01028bd <trap_dispatch+0xba>$/;"	l
c01028a6	obj/kernel.asm	/^c01028a6:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01028a9	obj/kernel.asm	/^c01028a9:	68 6c d2 10 c0       	push   $0xc010d26c$/;"	l
c01028ae	obj/kernel.asm	/^c01028ae:	68 d8 00 00 00       	push   $0xd8$/;"	l
c01028b3	obj/kernel.asm	/^c01028b3:	68 2e d0 10 c0       	push   $0xc010d02e$/;"	l
c01028b8	obj/kernel.asm	/^c01028b8:	e8 22 db ff ff       	call   c01003df <__panic>$/;"	l
c01028bd	obj/kernel.asm	/^c01028bd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01028c0	obj/kernel.asm	/^c01028c0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01028c3	obj/kernel.asm	/^c01028c3:	e8 56 fb ff ff       	call   c010241e <trap_in_kernel>$/;"	l
c01028c8	obj/kernel.asm	/^c01028c8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01028cb	obj/kernel.asm	/^c01028cb:	85 c0                	test   %eax,%eax$/;"	l
c01028cd	obj/kernel.asm	/^c01028cd:	74 17                	je     c01028e6 <trap_dispatch+0xe3>$/;"	l
c01028cf	obj/kernel.asm	/^c01028cf:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01028d2	obj/kernel.asm	/^c01028d2:	68 8c d2 10 c0       	push   $0xc010d28c$/;"	l
c01028d7	obj/kernel.asm	/^c01028d7:	68 dc 00 00 00       	push   $0xdc$/;"	l
c01028dc	obj/kernel.asm	/^c01028dc:	68 2e d0 10 c0       	push   $0xc010d02e$/;"	l
c01028e1	obj/kernel.asm	/^c01028e1:	e8 f9 da ff ff       	call   c01003df <__panic>$/;"	l
c01028e6	obj/kernel.asm	/^c01028e6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01028e9	obj/kernel.asm	/^c01028e9:	68 ba d2 10 c0       	push   $0xc010d2ba$/;"	l
c01028ee	obj/kernel.asm	/^c01028ee:	e8 87 d9 ff ff       	call   c010027a <cprintf>$/;"	l
c01028f3	obj/kernel.asm	/^c01028f3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01028f6	obj/kernel.asm	/^c01028f6:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01028f9	obj/kernel.asm	/^c01028f9:	68 d0 d2 10 c0       	push   $0xc010d2d0$/;"	l
c01028fe	obj/kernel.asm	/^c01028fe:	68 df 00 00 00       	push   $0xdf$/;"	l
c0102903	obj/kernel.asm	/^c0102903:	68 2e d0 10 c0       	push   $0xc010d02e$/;"	l
c0102908	obj/kernel.asm	/^c0102908:	e8 d2 da ff ff       	call   c01003df <__panic>$/;"	l
c010290d	obj/kernel.asm	/^c010290d:	e9 10 02 00 00       	jmp    c0102b22 <trap_dispatch+0x31f>$/;"	l
c0102912	obj/kernel.asm	/^c0102912:	e8 f3 95 00 00       	call   c010bf0a <syscall>$/;"	l
c0102917	obj/kernel.asm	/^c0102917:	e9 06 02 00 00       	jmp    c0102b22 <trap_dispatch+0x31f>$/;"	l
c010291c	obj/kernel.asm	/^c010291c:	a1 38 45 1c c0       	mov    0xc01c4538,%eax$/;"	l
c0102921	obj/kernel.asm	/^c0102921:	83 c0 01             	add    $0x1,%eax$/;"	l
c0102924	obj/kernel.asm	/^c0102924:	a3 38 45 1c c0       	mov    %eax,0xc01c4538$/;"	l
c0102929	obj/kernel.asm	/^c0102929:	e8 f2 8f 00 00       	call   c010b920 <run_timer_list>$/;"	l
c010292e	obj/kernel.asm	/^c010292e:	e9 ef 01 00 00       	jmp    c0102b22 <trap_dispatch+0x31f>$/;"	l
c0102933	obj/kernel.asm	/^c0102933:	e8 32 f5 ff ff       	call   c0101e6a <cons_getc>$/;"	l
c0102938	obj/kernel.asm	/^c0102938:	88 45 e3             	mov    %al,-0x1d(%ebp)$/;"	l
c010293b	obj/kernel.asm	/^c010293b:	0f be 55 e3          	movsbl -0x1d(%ebp),%edx$/;"	l
c010293f	obj/kernel.asm	/^c010293f:	0f be 45 e3          	movsbl -0x1d(%ebp),%eax$/;"	l
c0102943	obj/kernel.asm	/^c0102943:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0102946	obj/kernel.asm	/^c0102946:	52                   	push   %edx$/;"	l
c0102947	obj/kernel.asm	/^c0102947:	50                   	push   %eax$/;"	l
c0102948	obj/kernel.asm	/^c0102948:	68 f9 d2 10 c0       	push   $0xc010d2f9$/;"	l
c010294d	obj/kernel.asm	/^c010294d:	e8 28 d9 ff ff       	call   c010027a <cprintf>$/;"	l
c0102952	obj/kernel.asm	/^c0102952:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102955	obj/kernel.asm	/^c0102955:	e9 c8 01 00 00       	jmp    c0102b22 <trap_dispatch+0x31f>$/;"	l
c010295a	obj/kernel.asm	/^c010295a:	e8 0b f5 ff ff       	call   c0101e6a <cons_getc>$/;"	l
c010295f	obj/kernel.asm	/^c010295f:	88 45 e3             	mov    %al,-0x1d(%ebp)$/;"	l
c0102962	obj/kernel.asm	/^c0102962:	0f be 55 e3          	movsbl -0x1d(%ebp),%edx$/;"	l
c0102966	obj/kernel.asm	/^c0102966:	0f be 45 e3          	movsbl -0x1d(%ebp),%eax$/;"	l
c010296a	obj/kernel.asm	/^c010296a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010296d	obj/kernel.asm	/^c010296d:	52                   	push   %edx$/;"	l
c010296e	obj/kernel.asm	/^c010296e:	50                   	push   %eax$/;"	l
c010296f	obj/kernel.asm	/^c010296f:	68 0b d3 10 c0       	push   $0xc010d30b$/;"	l
c0102974	obj/kernel.asm	/^c0102974:	e8 01 d9 ff ff       	call   c010027a <cprintf>$/;"	l
c0102979	obj/kernel.asm	/^c0102979:	83 c4 10             	add    $0x10,%esp$/;"	l
c010297c	obj/kernel.asm	/^c010297c:	e9 a1 01 00 00       	jmp    c0102b22 <trap_dispatch+0x31f>$/;"	l
c0102981	obj/kernel.asm	/^c0102981:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102984	obj/kernel.asm	/^c0102984:	68 1a d3 10 c0       	push   $0xc010d31a$/;"	l
c0102989	obj/kernel.asm	/^c0102989:	e8 ec d8 ff ff       	call   c010027a <cprintf>$/;"	l
c010298e	obj/kernel.asm	/^c010298e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102991	obj/kernel.asm	/^c0102991:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102994	obj/kernel.asm	/^c0102994:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c0102998	obj/kernel.asm	/^c0102998:	66 83 f8 1b          	cmp    $0x1b,%ax$/;"	l
c010299c	obj/kernel.asm	/^c010299c:	0f 84 95 00 00 00    	je     c0102a37 <trap_dispatch+0x234>$/;"	l
c01029a2	obj/kernel.asm	/^c01029a2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01029a5	obj/kernel.asm	/^c01029a5:	b8 40 45 1c c0       	mov    $0xc01c4540,%eax$/;"	l
c01029aa	obj/kernel.asm	/^c01029aa:	89 d3                	mov    %edx,%ebx$/;"	l
c01029ac	obj/kernel.asm	/^c01029ac:	ba 4c 00 00 00       	mov    $0x4c,%edx$/;"	l
c01029b1	obj/kernel.asm	/^c01029b1:	8b 0b                	mov    (%ebx),%ecx$/;"	l
c01029b3	obj/kernel.asm	/^c01029b3:	89 08                	mov    %ecx,(%eax)$/;"	l
c01029b5	obj/kernel.asm	/^c01029b5:	8b 4c 13 fc          	mov    -0x4(%ebx,%edx,1),%ecx$/;"	l
c01029b9	obj/kernel.asm	/^c01029b9:	89 4c 10 fc          	mov    %ecx,-0x4(%eax,%edx,1)$/;"	l
c01029bd	obj/kernel.asm	/^c01029bd:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
c01029c0	obj/kernel.asm	/^c01029c0:	83 e7 fc             	and    $0xfffffffc,%edi$/;"	l
c01029c3	obj/kernel.asm	/^c01029c3:	29 f8                	sub    %edi,%eax$/;"	l
c01029c5	obj/kernel.asm	/^c01029c5:	29 c3                	sub    %eax,%ebx$/;"	l
c01029c7	obj/kernel.asm	/^c01029c7:	01 c2                	add    %eax,%edx$/;"	l
c01029c9	obj/kernel.asm	/^c01029c9:	83 e2 fc             	and    $0xfffffffc,%edx$/;"	l
c01029cc	obj/kernel.asm	/^c01029cc:	89 d0                	mov    %edx,%eax$/;"	l
c01029ce	obj/kernel.asm	/^c01029ce:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c01029d1	obj/kernel.asm	/^c01029d1:	89 de                	mov    %ebx,%esi$/;"	l
c01029d3	obj/kernel.asm	/^c01029d3:	89 c1                	mov    %eax,%ecx$/;"	l
c01029d5	obj/kernel.asm	/^c01029d5:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c01029d7	obj/kernel.asm	/^c01029d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01029da	obj/kernel.asm	/^c01029da:	83 c0 44             	add    $0x44,%eax$/;"	l
c01029dd	obj/kernel.asm	/^c01029dd:	a3 84 45 1c c0       	mov    %eax,0xc01c4584$/;"	l
c01029e2	obj/kernel.asm	/^c01029e2:	66 c7 05 7c 45 1c c0 	movw   $0x1b,0xc01c457c$/;"	l
c01029e9	obj/kernel.asm	/^c01029e9:	1b 00 $/;"	l
c01029eb	obj/kernel.asm	/^c01029eb:	66 c7 05 6c 45 1c c0 	movw   $0x23,0xc01c456c$/;"	l
c01029f2	obj/kernel.asm	/^c01029f2:	23 00 $/;"	l
c01029f4	obj/kernel.asm	/^c01029f4:	66 c7 05 88 45 1c c0 	movw   $0x23,0xc01c4588$/;"	l
c01029fb	obj/kernel.asm	/^c01029fb:	23 00 $/;"	l
c01029fd	obj/kernel.asm	/^c01029fd:	66 c7 05 68 45 1c c0 	movw   $0x23,0xc01c4568$/;"	l
c0102a04	obj/kernel.asm	/^c0102a04:	23 00 $/;"	l
c0102a06	obj/kernel.asm	/^c0102a06:	66 c7 05 64 45 1c c0 	movw   $0x23,0xc01c4564$/;"	l
c0102a0d	obj/kernel.asm	/^c0102a0d:	23 00 $/;"	l
c0102a0f	obj/kernel.asm	/^c0102a0f:	66 c7 05 60 45 1c c0 	movw   $0x23,0xc01c4560$/;"	l
c0102a16	obj/kernel.asm	/^c0102a16:	23 00 $/;"	l
c0102a18	obj/kernel.asm	/^c0102a18:	a1 80 45 1c c0       	mov    0xc01c4580,%eax$/;"	l
c0102a1d	obj/kernel.asm	/^c0102a1d:	80 cc 30             	or     $0x30,%ah$/;"	l
c0102a20	obj/kernel.asm	/^c0102a20:	a3 80 45 1c c0       	mov    %eax,0xc01c4580$/;"	l
c0102a25	obj/kernel.asm	/^c0102a25:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a28	obj/kernel.asm	/^c0102a28:	83 e8 04             	sub    $0x4,%eax$/;"	l
c0102a2b	obj/kernel.asm	/^c0102a2b:	ba 40 45 1c c0       	mov    $0xc01c4540,%edx$/;"	l
c0102a30	obj/kernel.asm	/^c0102a30:	89 10                	mov    %edx,(%eax)$/;"	l
c0102a32	obj/kernel.asm	/^c0102a32:	e9 eb 00 00 00       	jmp    c0102b22 <trap_dispatch+0x31f>$/;"	l
c0102a37	obj/kernel.asm	/^c0102a37:	e9 e6 00 00 00       	jmp    c0102b22 <trap_dispatch+0x31f>$/;"	l
c0102a3c	obj/kernel.asm	/^c0102a3c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102a3f	obj/kernel.asm	/^c0102a3f:	68 28 d3 10 c0       	push   $0xc010d328$/;"	l
c0102a44	obj/kernel.asm	/^c0102a44:	e8 31 d8 ff ff       	call   c010027a <cprintf>$/;"	l
c0102a49	obj/kernel.asm	/^c0102a49:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102a4c	obj/kernel.asm	/^c0102a4c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a4f	obj/kernel.asm	/^c0102a4f:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c0102a53	obj/kernel.asm	/^c0102a53:	66 83 f8 08          	cmp    $0x8,%ax$/;"	l
c0102a57	obj/kernel.asm	/^c0102a57:	74 7b                	je     c0102ad4 <trap_dispatch+0x2d1>$/;"	l
c0102a59	obj/kernel.asm	/^c0102a59:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a5c	obj/kernel.asm	/^c0102a5c:	66 c7 40 3c 08 00    	movw   $0x8,0x3c(%eax)$/;"	l
c0102a62	obj/kernel.asm	/^c0102a62:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a65	obj/kernel.asm	/^c0102a65:	66 c7 40 2c 10 00    	movw   $0x10,0x2c(%eax)$/;"	l
c0102a6b	obj/kernel.asm	/^c0102a6b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a6e	obj/kernel.asm	/^c0102a6e:	66 c7 40 48 10 00    	movw   $0x10,0x48(%eax)$/;"	l
c0102a74	obj/kernel.asm	/^c0102a74:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a77	obj/kernel.asm	/^c0102a77:	66 c7 40 28 10 00    	movw   $0x10,0x28(%eax)$/;"	l
c0102a7d	obj/kernel.asm	/^c0102a7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a80	obj/kernel.asm	/^c0102a80:	66 c7 40 24 10 00    	movw   $0x10,0x24(%eax)$/;"	l
c0102a86	obj/kernel.asm	/^c0102a86:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a89	obj/kernel.asm	/^c0102a89:	66 c7 40 20 10 00    	movw   $0x10,0x20(%eax)$/;"	l
c0102a8f	obj/kernel.asm	/^c0102a8f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a92	obj/kernel.asm	/^c0102a92:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c0102a95	obj/kernel.asm	/^c0102a95:	80 e4 cf             	and    $0xcf,%ah$/;"	l
c0102a98	obj/kernel.asm	/^c0102a98:	89 c2                	mov    %eax,%edx$/;"	l
c0102a9a	obj/kernel.asm	/^c0102a9a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a9d	obj/kernel.asm	/^c0102a9d:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c0102aa0	obj/kernel.asm	/^c0102aa0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102aa3	obj/kernel.asm	/^c0102aa3:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c0102aa6	obj/kernel.asm	/^c0102aa6:	83 e8 44             	sub    $0x44,%eax$/;"	l
c0102aa9	obj/kernel.asm	/^c0102aa9:	a3 8c 45 1c c0       	mov    %eax,0xc01c458c$/;"	l
c0102aae	obj/kernel.asm	/^c0102aae:	a1 8c 45 1c c0       	mov    0xc01c458c,%eax$/;"	l
c0102ab3	obj/kernel.asm	/^c0102ab3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0102ab6	obj/kernel.asm	/^c0102ab6:	6a 44                	push   $0x44$/;"	l
c0102ab8	obj/kernel.asm	/^c0102ab8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102abb	obj/kernel.asm	/^c0102abb:	50                   	push   %eax$/;"	l
c0102abc	obj/kernel.asm	/^c0102abc:	e8 77 98 00 00       	call   c010c338 <memmove>$/;"	l
c0102ac1	obj/kernel.asm	/^c0102ac1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102ac4	obj/kernel.asm	/^c0102ac4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102ac7	obj/kernel.asm	/^c0102ac7:	83 e8 04             	sub    $0x4,%eax$/;"	l
c0102aca	obj/kernel.asm	/^c0102aca:	8b 15 8c 45 1c c0    	mov    0xc01c458c,%edx$/;"	l
c0102ad0	obj/kernel.asm	/^c0102ad0:	89 10                	mov    %edx,(%eax)$/;"	l
c0102ad2	obj/kernel.asm	/^c0102ad2:	eb 4e                	jmp    c0102b22 <trap_dispatch+0x31f>$/;"	l
c0102ad4	obj/kernel.asm	/^c0102ad4:	eb 4c                	jmp    c0102b22 <trap_dispatch+0x31f>$/;"	l
c0102ad6	obj/kernel.asm	/^c0102ad6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102ad9	obj/kernel.asm	/^c0102ad9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102adc	obj/kernel.asm	/^c0102adc:	e8 53 f9 ff ff       	call   c0102434 <print_trapframe>$/;"	l
c0102ae1	obj/kernel.asm	/^c0102ae1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102ae4	obj/kernel.asm	/^c0102ae4:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c0102ae9	obj/kernel.asm	/^c0102ae9:	85 c0                	test   %eax,%eax$/;"	l
c0102aeb	obj/kernel.asm	/^c0102aeb:	74 1d                	je     c0102b0a <trap_dispatch+0x307>$/;"	l
c0102aed	obj/kernel.asm	/^c0102aed:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102af0	obj/kernel.asm	/^c0102af0:	68 36 d3 10 c0       	push   $0xc010d336$/;"	l
c0102af5	obj/kernel.asm	/^c0102af5:	e8 80 d7 ff ff       	call   c010027a <cprintf>$/;"	l
c0102afa	obj/kernel.asm	/^c0102afa:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102afd	obj/kernel.asm	/^c0102afd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102b00	obj/kernel.asm	/^c0102b00:	6a f7                	push   $0xfffffff7$/;"	l
c0102b02	obj/kernel.asm	/^c0102b02:	e8 61 7a 00 00       	call   c010a568 <do_exit>$/;"	l
c0102b07	obj/kernel.asm	/^c0102b07:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102b0a	obj/kernel.asm	/^c0102b0a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0102b0d	obj/kernel.asm	/^c0102b0d:	68 47 d3 10 c0       	push   $0xc010d347$/;"	l
c0102b12	obj/kernel.asm	/^c0102b12:	68 39 01 00 00       	push   $0x139$/;"	l
c0102b17	obj/kernel.asm	/^c0102b17:	68 2e d0 10 c0       	push   $0xc010d02e$/;"	l
c0102b1c	obj/kernel.asm	/^c0102b1c:	e8 be d8 ff ff       	call   c01003df <__panic>$/;"	l
c0102b21	obj/kernel.asm	/^c0102b21:	90                   	nop$/;"	l
c0102b22	obj/kernel.asm	/^c0102b22:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
c0102b25	obj/kernel.asm	/^c0102b25:	5b                   	pop    %ebx$/;"	l
c0102b26	obj/kernel.asm	/^c0102b26:	5e                   	pop    %esi$/;"	l
c0102b27	obj/kernel.asm	/^c0102b27:	5f                   	pop    %edi$/;"	l
c0102b28	obj/kernel.asm	/^c0102b28:	5d                   	pop    %ebp$/;"	l
c0102b29	obj/kernel.asm	/^c0102b29:	c3                   	ret    $/;"	l
c0102b2a	obj/kernel.asm	/^c0102b2a <trap>:$/;"	l
c0102b2a	obj/kernel.asm	/^c0102b2a:	55                   	push   %ebp$/;"	l
c0102b2b	obj/kernel.asm	/^c0102b2b:	89 e5                	mov    %esp,%ebp$/;"	l
c0102b2d	obj/kernel.asm	/^c0102b2d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102b30	obj/kernel.asm	/^c0102b30:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c0102b35	obj/kernel.asm	/^c0102b35:	85 c0                	test   %eax,%eax$/;"	l
c0102b37	obj/kernel.asm	/^c0102b37:	75 10                	jne    c0102b49 <trap+0x1f>$/;"	l
c0102b39	obj/kernel.asm	/^c0102b39:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102b3c	obj/kernel.asm	/^c0102b3c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102b3f	obj/kernel.asm	/^c0102b3f:	e8 bf fc ff ff       	call   c0102803 <trap_dispatch>$/;"	l
c0102b44	obj/kernel.asm	/^c0102b44:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102b47	obj/kernel.asm	/^c0102b47:	eb 73                	jmp    c0102bbc <trap+0x92>$/;"	l
c0102b49	obj/kernel.asm	/^c0102b49:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c0102b4e	obj/kernel.asm	/^c0102b4e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0102b51	obj/kernel.asm	/^c0102b51:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102b54	obj/kernel.asm	/^c0102b54:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c0102b59	obj/kernel.asm	/^c0102b59:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0102b5c	obj/kernel.asm	/^c0102b5c:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0102b5f	obj/kernel.asm	/^c0102b5f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102b62	obj/kernel.asm	/^c0102b62:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102b65	obj/kernel.asm	/^c0102b65:	e8 b4 f8 ff ff       	call   c010241e <trap_in_kernel>$/;"	l
c0102b6a	obj/kernel.asm	/^c0102b6a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102b6d	obj/kernel.asm	/^c0102b6d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0102b70	obj/kernel.asm	/^c0102b70:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102b73	obj/kernel.asm	/^c0102b73:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102b76	obj/kernel.asm	/^c0102b76:	e8 88 fc ff ff       	call   c0102803 <trap_dispatch>$/;"	l
c0102b7b	obj/kernel.asm	/^c0102b7b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102b7e	obj/kernel.asm	/^c0102b7e:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c0102b83	obj/kernel.asm	/^c0102b83:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0102b86	obj/kernel.asm	/^c0102b86:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0102b89	obj/kernel.asm	/^c0102b89:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0102b8d	obj/kernel.asm	/^c0102b8d:	75 2d                	jne    c0102bbc <trap+0x92>$/;"	l
c0102b8f	obj/kernel.asm	/^c0102b8f:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c0102b94	obj/kernel.asm	/^c0102b94:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c0102b97	obj/kernel.asm	/^c0102b97:	83 e0 01             	and    $0x1,%eax$/;"	l
c0102b9a	obj/kernel.asm	/^c0102b9a:	85 c0                	test   %eax,%eax$/;"	l
c0102b9c	obj/kernel.asm	/^c0102b9c:	74 0d                	je     c0102bab <trap+0x81>$/;"	l
c0102b9e	obj/kernel.asm	/^c0102b9e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102ba1	obj/kernel.asm	/^c0102ba1:	6a f7                	push   $0xfffffff7$/;"	l
c0102ba3	obj/kernel.asm	/^c0102ba3:	e8 c0 79 00 00       	call   c010a568 <do_exit>$/;"	l
c0102ba8	obj/kernel.asm	/^c0102ba8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102bab	obj/kernel.asm	/^c0102bab:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c0102bb0	obj/kernel.asm	/^c0102bb0:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0102bb3	obj/kernel.asm	/^c0102bb3:	85 c0                	test   %eax,%eax$/;"	l
c0102bb5	obj/kernel.asm	/^c0102bb5:	74 05                	je     c0102bbc <trap+0x92>$/;"	l
c0102bb7	obj/kernel.asm	/^c0102bb7:	e8 e0 8a 00 00       	call   c010b69c <schedule>$/;"	l
c0102bbc	obj/kernel.asm	/^c0102bbc:	c9                   	leave  $/;"	l
c0102bbd	obj/kernel.asm	/^c0102bbd:	c3                   	ret    $/;"	l
c0102bbe	obj/kernel.asm	/^c0102bbe <vector0>:$/;"	l
c0102bbe	obj/kernel.asm	/^c0102bbe:	6a 00                	push   $0x0$/;"	l
c0102bc0	obj/kernel.asm	/^c0102bc0:	6a 00                	push   $0x0$/;"	l
c0102bc2	obj/kernel.asm	/^c0102bc2:	e9 67 0a 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102bc7	obj/kernel.asm	/^c0102bc7 <vector1>:$/;"	l
c0102bc7	obj/kernel.asm	/^c0102bc7:	6a 00                	push   $0x0$/;"	l
c0102bc9	obj/kernel.asm	/^c0102bc9:	6a 01                	push   $0x1$/;"	l
c0102bcb	obj/kernel.asm	/^c0102bcb:	e9 5e 0a 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102bd0	obj/kernel.asm	/^c0102bd0 <vector2>:$/;"	l
c0102bd0	obj/kernel.asm	/^c0102bd0:	6a 00                	push   $0x0$/;"	l
c0102bd2	obj/kernel.asm	/^c0102bd2:	6a 02                	push   $0x2$/;"	l
c0102bd4	obj/kernel.asm	/^c0102bd4:	e9 55 0a 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102bd9	obj/kernel.asm	/^c0102bd9 <vector3>:$/;"	l
c0102bd9	obj/kernel.asm	/^c0102bd9:	6a 00                	push   $0x0$/;"	l
c0102bdb	obj/kernel.asm	/^c0102bdb:	6a 03                	push   $0x3$/;"	l
c0102bdd	obj/kernel.asm	/^c0102bdd:	e9 4c 0a 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102be2	obj/kernel.asm	/^c0102be2 <vector4>:$/;"	l
c0102be2	obj/kernel.asm	/^c0102be2:	6a 00                	push   $0x0$/;"	l
c0102be4	obj/kernel.asm	/^c0102be4:	6a 04                	push   $0x4$/;"	l
c0102be6	obj/kernel.asm	/^c0102be6:	e9 43 0a 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102beb	obj/kernel.asm	/^c0102beb <vector5>:$/;"	l
c0102beb	obj/kernel.asm	/^c0102beb:	6a 00                	push   $0x0$/;"	l
c0102bed	obj/kernel.asm	/^c0102bed:	6a 05                	push   $0x5$/;"	l
c0102bef	obj/kernel.asm	/^c0102bef:	e9 3a 0a 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102bf4	obj/kernel.asm	/^c0102bf4 <vector6>:$/;"	l
c0102bf4	obj/kernel.asm	/^c0102bf4:	6a 00                	push   $0x0$/;"	l
c0102bf6	obj/kernel.asm	/^c0102bf6:	6a 06                	push   $0x6$/;"	l
c0102bf8	obj/kernel.asm	/^c0102bf8:	e9 31 0a 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102bfd	obj/kernel.asm	/^c0102bfd <vector7>:$/;"	l
c0102bfd	obj/kernel.asm	/^c0102bfd:	6a 00                	push   $0x0$/;"	l
c0102bff	obj/kernel.asm	/^c0102bff:	6a 07                	push   $0x7$/;"	l
c0102c01	obj/kernel.asm	/^c0102c01:	e9 28 0a 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c06	obj/kernel.asm	/^c0102c06 <vector8>:$/;"	l
c0102c06	obj/kernel.asm	/^c0102c06:	6a 08                	push   $0x8$/;"	l
c0102c08	obj/kernel.asm	/^c0102c08:	e9 21 0a 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c0d	obj/kernel.asm	/^c0102c0d <vector9>:$/;"	l
c0102c0d	obj/kernel.asm	/^c0102c0d:	6a 09                	push   $0x9$/;"	l
c0102c0f	obj/kernel.asm	/^c0102c0f:	e9 1a 0a 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c14	obj/kernel.asm	/^c0102c14 <vector10>:$/;"	l
c0102c14	obj/kernel.asm	/^c0102c14:	6a 0a                	push   $0xa$/;"	l
c0102c16	obj/kernel.asm	/^c0102c16:	e9 13 0a 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c1b	obj/kernel.asm	/^c0102c1b <vector11>:$/;"	l
c0102c1b	obj/kernel.asm	/^c0102c1b:	6a 0b                	push   $0xb$/;"	l
c0102c1d	obj/kernel.asm	/^c0102c1d:	e9 0c 0a 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c22	obj/kernel.asm	/^c0102c22 <vector12>:$/;"	l
c0102c22	obj/kernel.asm	/^c0102c22:	6a 0c                	push   $0xc$/;"	l
c0102c24	obj/kernel.asm	/^c0102c24:	e9 05 0a 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c29	obj/kernel.asm	/^c0102c29 <vector13>:$/;"	l
c0102c29	obj/kernel.asm	/^c0102c29:	6a 0d                	push   $0xd$/;"	l
c0102c2b	obj/kernel.asm	/^c0102c2b:	e9 fe 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c30	obj/kernel.asm	/^c0102c30 <vector14>:$/;"	l
c0102c30	obj/kernel.asm	/^c0102c30:	6a 0e                	push   $0xe$/;"	l
c0102c32	obj/kernel.asm	/^c0102c32:	e9 f7 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c37	obj/kernel.asm	/^c0102c37 <vector15>:$/;"	l
c0102c37	obj/kernel.asm	/^c0102c37:	6a 00                	push   $0x0$/;"	l
c0102c39	obj/kernel.asm	/^c0102c39:	6a 0f                	push   $0xf$/;"	l
c0102c3b	obj/kernel.asm	/^c0102c3b:	e9 ee 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c40	obj/kernel.asm	/^c0102c40 <vector16>:$/;"	l
c0102c40	obj/kernel.asm	/^c0102c40:	6a 00                	push   $0x0$/;"	l
c0102c42	obj/kernel.asm	/^c0102c42:	6a 10                	push   $0x10$/;"	l
c0102c44	obj/kernel.asm	/^c0102c44:	e9 e5 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c49	obj/kernel.asm	/^c0102c49 <vector17>:$/;"	l
c0102c49	obj/kernel.asm	/^c0102c49:	6a 11                	push   $0x11$/;"	l
c0102c4b	obj/kernel.asm	/^c0102c4b:	e9 de 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c50	obj/kernel.asm	/^c0102c50 <vector18>:$/;"	l
c0102c50	obj/kernel.asm	/^c0102c50:	6a 00                	push   $0x0$/;"	l
c0102c52	obj/kernel.asm	/^c0102c52:	6a 12                	push   $0x12$/;"	l
c0102c54	obj/kernel.asm	/^c0102c54:	e9 d5 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c59	obj/kernel.asm	/^c0102c59 <vector19>:$/;"	l
c0102c59	obj/kernel.asm	/^c0102c59:	6a 00                	push   $0x0$/;"	l
c0102c5b	obj/kernel.asm	/^c0102c5b:	6a 13                	push   $0x13$/;"	l
c0102c5d	obj/kernel.asm	/^c0102c5d:	e9 cc 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c62	obj/kernel.asm	/^c0102c62 <vector20>:$/;"	l
c0102c62	obj/kernel.asm	/^c0102c62:	6a 00                	push   $0x0$/;"	l
c0102c64	obj/kernel.asm	/^c0102c64:	6a 14                	push   $0x14$/;"	l
c0102c66	obj/kernel.asm	/^c0102c66:	e9 c3 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c6b	obj/kernel.asm	/^c0102c6b <vector21>:$/;"	l
c0102c6b	obj/kernel.asm	/^c0102c6b:	6a 00                	push   $0x0$/;"	l
c0102c6d	obj/kernel.asm	/^c0102c6d:	6a 15                	push   $0x15$/;"	l
c0102c6f	obj/kernel.asm	/^c0102c6f:	e9 ba 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c74	obj/kernel.asm	/^c0102c74 <vector22>:$/;"	l
c0102c74	obj/kernel.asm	/^c0102c74:	6a 00                	push   $0x0$/;"	l
c0102c76	obj/kernel.asm	/^c0102c76:	6a 16                	push   $0x16$/;"	l
c0102c78	obj/kernel.asm	/^c0102c78:	e9 b1 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c7d	obj/kernel.asm	/^c0102c7d <vector23>:$/;"	l
c0102c7d	obj/kernel.asm	/^c0102c7d:	6a 00                	push   $0x0$/;"	l
c0102c7f	obj/kernel.asm	/^c0102c7f:	6a 17                	push   $0x17$/;"	l
c0102c81	obj/kernel.asm	/^c0102c81:	e9 a8 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c86	obj/kernel.asm	/^c0102c86 <vector24>:$/;"	l
c0102c86	obj/kernel.asm	/^c0102c86:	6a 00                	push   $0x0$/;"	l
c0102c88	obj/kernel.asm	/^c0102c88:	6a 18                	push   $0x18$/;"	l
c0102c8a	obj/kernel.asm	/^c0102c8a:	e9 9f 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c8f	obj/kernel.asm	/^c0102c8f <vector25>:$/;"	l
c0102c8f	obj/kernel.asm	/^c0102c8f:	6a 00                	push   $0x0$/;"	l
c0102c91	obj/kernel.asm	/^c0102c91:	6a 19                	push   $0x19$/;"	l
c0102c93	obj/kernel.asm	/^c0102c93:	e9 96 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102c98	obj/kernel.asm	/^c0102c98 <vector26>:$/;"	l
c0102c98	obj/kernel.asm	/^c0102c98:	6a 00                	push   $0x0$/;"	l
c0102c9a	obj/kernel.asm	/^c0102c9a:	6a 1a                	push   $0x1a$/;"	l
c0102c9c	obj/kernel.asm	/^c0102c9c:	e9 8d 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102ca1	obj/kernel.asm	/^c0102ca1 <vector27>:$/;"	l
c0102ca1	obj/kernel.asm	/^c0102ca1:	6a 00                	push   $0x0$/;"	l
c0102ca3	obj/kernel.asm	/^c0102ca3:	6a 1b                	push   $0x1b$/;"	l
c0102ca5	obj/kernel.asm	/^c0102ca5:	e9 84 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102caa	obj/kernel.asm	/^c0102caa <vector28>:$/;"	l
c0102caa	obj/kernel.asm	/^c0102caa:	6a 00                	push   $0x0$/;"	l
c0102cac	obj/kernel.asm	/^c0102cac:	6a 1c                	push   $0x1c$/;"	l
c0102cae	obj/kernel.asm	/^c0102cae:	e9 7b 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102cb3	obj/kernel.asm	/^c0102cb3 <vector29>:$/;"	l
c0102cb3	obj/kernel.asm	/^c0102cb3:	6a 00                	push   $0x0$/;"	l
c0102cb5	obj/kernel.asm	/^c0102cb5:	6a 1d                	push   $0x1d$/;"	l
c0102cb7	obj/kernel.asm	/^c0102cb7:	e9 72 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102cbc	obj/kernel.asm	/^c0102cbc <vector30>:$/;"	l
c0102cbc	obj/kernel.asm	/^c0102cbc:	6a 00                	push   $0x0$/;"	l
c0102cbe	obj/kernel.asm	/^c0102cbe:	6a 1e                	push   $0x1e$/;"	l
c0102cc0	obj/kernel.asm	/^c0102cc0:	e9 69 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102cc5	obj/kernel.asm	/^c0102cc5 <vector31>:$/;"	l
c0102cc5	obj/kernel.asm	/^c0102cc5:	6a 00                	push   $0x0$/;"	l
c0102cc7	obj/kernel.asm	/^c0102cc7:	6a 1f                	push   $0x1f$/;"	l
c0102cc9	obj/kernel.asm	/^c0102cc9:	e9 60 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102cce	obj/kernel.asm	/^c0102cce <vector32>:$/;"	l
c0102cce	obj/kernel.asm	/^c0102cce:	6a 00                	push   $0x0$/;"	l
c0102cd0	obj/kernel.asm	/^c0102cd0:	6a 20                	push   $0x20$/;"	l
c0102cd2	obj/kernel.asm	/^c0102cd2:	e9 57 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102cd7	obj/kernel.asm	/^c0102cd7 <vector33>:$/;"	l
c0102cd7	obj/kernel.asm	/^c0102cd7:	6a 00                	push   $0x0$/;"	l
c0102cd9	obj/kernel.asm	/^c0102cd9:	6a 21                	push   $0x21$/;"	l
c0102cdb	obj/kernel.asm	/^c0102cdb:	e9 4e 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102ce0	obj/kernel.asm	/^c0102ce0 <vector34>:$/;"	l
c0102ce0	obj/kernel.asm	/^c0102ce0:	6a 00                	push   $0x0$/;"	l
c0102ce2	obj/kernel.asm	/^c0102ce2:	6a 22                	push   $0x22$/;"	l
c0102ce4	obj/kernel.asm	/^c0102ce4:	e9 45 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102ce9	obj/kernel.asm	/^c0102ce9 <vector35>:$/;"	l
c0102ce9	obj/kernel.asm	/^c0102ce9:	6a 00                	push   $0x0$/;"	l
c0102ceb	obj/kernel.asm	/^c0102ceb:	6a 23                	push   $0x23$/;"	l
c0102ced	obj/kernel.asm	/^c0102ced:	e9 3c 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102cf2	obj/kernel.asm	/^c0102cf2 <vector36>:$/;"	l
c0102cf2	obj/kernel.asm	/^c0102cf2:	6a 00                	push   $0x0$/;"	l
c0102cf4	obj/kernel.asm	/^c0102cf4:	6a 24                	push   $0x24$/;"	l
c0102cf6	obj/kernel.asm	/^c0102cf6:	e9 33 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102cfb	obj/kernel.asm	/^c0102cfb <vector37>:$/;"	l
c0102cfb	obj/kernel.asm	/^c0102cfb:	6a 00                	push   $0x0$/;"	l
c0102cfd	obj/kernel.asm	/^c0102cfd:	6a 25                	push   $0x25$/;"	l
c0102cff	obj/kernel.asm	/^c0102cff:	e9 2a 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102d04	obj/kernel.asm	/^c0102d04 <vector38>:$/;"	l
c0102d04	obj/kernel.asm	/^c0102d04:	6a 00                	push   $0x0$/;"	l
c0102d06	obj/kernel.asm	/^c0102d06:	6a 26                	push   $0x26$/;"	l
c0102d08	obj/kernel.asm	/^c0102d08:	e9 21 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102d0d	obj/kernel.asm	/^c0102d0d <vector39>:$/;"	l
c0102d0d	obj/kernel.asm	/^c0102d0d:	6a 00                	push   $0x0$/;"	l
c0102d0f	obj/kernel.asm	/^c0102d0f:	6a 27                	push   $0x27$/;"	l
c0102d11	obj/kernel.asm	/^c0102d11:	e9 18 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102d16	obj/kernel.asm	/^c0102d16 <vector40>:$/;"	l
c0102d16	obj/kernel.asm	/^c0102d16:	6a 00                	push   $0x0$/;"	l
c0102d18	obj/kernel.asm	/^c0102d18:	6a 28                	push   $0x28$/;"	l
c0102d1a	obj/kernel.asm	/^c0102d1a:	e9 0f 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102d1f	obj/kernel.asm	/^c0102d1f <vector41>:$/;"	l
c0102d1f	obj/kernel.asm	/^c0102d1f:	6a 00                	push   $0x0$/;"	l
c0102d21	obj/kernel.asm	/^c0102d21:	6a 29                	push   $0x29$/;"	l
c0102d23	obj/kernel.asm	/^c0102d23:	e9 06 09 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102d28	obj/kernel.asm	/^c0102d28 <vector42>:$/;"	l
c0102d28	obj/kernel.asm	/^c0102d28:	6a 00                	push   $0x0$/;"	l
c0102d2a	obj/kernel.asm	/^c0102d2a:	6a 2a                	push   $0x2a$/;"	l
c0102d2c	obj/kernel.asm	/^c0102d2c:	e9 fd 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102d31	obj/kernel.asm	/^c0102d31 <vector43>:$/;"	l
c0102d31	obj/kernel.asm	/^c0102d31:	6a 00                	push   $0x0$/;"	l
c0102d33	obj/kernel.asm	/^c0102d33:	6a 2b                	push   $0x2b$/;"	l
c0102d35	obj/kernel.asm	/^c0102d35:	e9 f4 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102d3a	obj/kernel.asm	/^c0102d3a <vector44>:$/;"	l
c0102d3a	obj/kernel.asm	/^c0102d3a:	6a 00                	push   $0x0$/;"	l
c0102d3c	obj/kernel.asm	/^c0102d3c:	6a 2c                	push   $0x2c$/;"	l
c0102d3e	obj/kernel.asm	/^c0102d3e:	e9 eb 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102d43	obj/kernel.asm	/^c0102d43 <vector45>:$/;"	l
c0102d43	obj/kernel.asm	/^c0102d43:	6a 00                	push   $0x0$/;"	l
c0102d45	obj/kernel.asm	/^c0102d45:	6a 2d                	push   $0x2d$/;"	l
c0102d47	obj/kernel.asm	/^c0102d47:	e9 e2 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102d4c	obj/kernel.asm	/^c0102d4c <vector46>:$/;"	l
c0102d4c	obj/kernel.asm	/^c0102d4c:	6a 00                	push   $0x0$/;"	l
c0102d4e	obj/kernel.asm	/^c0102d4e:	6a 2e                	push   $0x2e$/;"	l
c0102d50	obj/kernel.asm	/^c0102d50:	e9 d9 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102d55	obj/kernel.asm	/^c0102d55 <vector47>:$/;"	l
c0102d55	obj/kernel.asm	/^c0102d55:	6a 00                	push   $0x0$/;"	l
c0102d57	obj/kernel.asm	/^c0102d57:	6a 2f                	push   $0x2f$/;"	l
c0102d59	obj/kernel.asm	/^c0102d59:	e9 d0 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102d5e	obj/kernel.asm	/^c0102d5e <vector48>:$/;"	l
c0102d5e	obj/kernel.asm	/^c0102d5e:	6a 00                	push   $0x0$/;"	l
c0102d60	obj/kernel.asm	/^c0102d60:	6a 30                	push   $0x30$/;"	l
c0102d62	obj/kernel.asm	/^c0102d62:	e9 c7 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102d67	obj/kernel.asm	/^c0102d67 <vector49>:$/;"	l
c0102d67	obj/kernel.asm	/^c0102d67:	6a 00                	push   $0x0$/;"	l
c0102d69	obj/kernel.asm	/^c0102d69:	6a 31                	push   $0x31$/;"	l
c0102d6b	obj/kernel.asm	/^c0102d6b:	e9 be 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102d70	obj/kernel.asm	/^c0102d70 <vector50>:$/;"	l
c0102d70	obj/kernel.asm	/^c0102d70:	6a 00                	push   $0x0$/;"	l
c0102d72	obj/kernel.asm	/^c0102d72:	6a 32                	push   $0x32$/;"	l
c0102d74	obj/kernel.asm	/^c0102d74:	e9 b5 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102d79	obj/kernel.asm	/^c0102d79 <vector51>:$/;"	l
c0102d79	obj/kernel.asm	/^c0102d79:	6a 00                	push   $0x0$/;"	l
c0102d7b	obj/kernel.asm	/^c0102d7b:	6a 33                	push   $0x33$/;"	l
c0102d7d	obj/kernel.asm	/^c0102d7d:	e9 ac 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102d82	obj/kernel.asm	/^c0102d82 <vector52>:$/;"	l
c0102d82	obj/kernel.asm	/^c0102d82:	6a 00                	push   $0x0$/;"	l
c0102d84	obj/kernel.asm	/^c0102d84:	6a 34                	push   $0x34$/;"	l
c0102d86	obj/kernel.asm	/^c0102d86:	e9 a3 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102d8b	obj/kernel.asm	/^c0102d8b <vector53>:$/;"	l
c0102d8b	obj/kernel.asm	/^c0102d8b:	6a 00                	push   $0x0$/;"	l
c0102d8d	obj/kernel.asm	/^c0102d8d:	6a 35                	push   $0x35$/;"	l
c0102d8f	obj/kernel.asm	/^c0102d8f:	e9 9a 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102d94	obj/kernel.asm	/^c0102d94 <vector54>:$/;"	l
c0102d94	obj/kernel.asm	/^c0102d94:	6a 00                	push   $0x0$/;"	l
c0102d96	obj/kernel.asm	/^c0102d96:	6a 36                	push   $0x36$/;"	l
c0102d98	obj/kernel.asm	/^c0102d98:	e9 91 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102d9d	obj/kernel.asm	/^c0102d9d <vector55>:$/;"	l
c0102d9d	obj/kernel.asm	/^c0102d9d:	6a 00                	push   $0x0$/;"	l
c0102d9f	obj/kernel.asm	/^c0102d9f:	6a 37                	push   $0x37$/;"	l
c0102da1	obj/kernel.asm	/^c0102da1:	e9 88 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102da6	obj/kernel.asm	/^c0102da6 <vector56>:$/;"	l
c0102da6	obj/kernel.asm	/^c0102da6:	6a 00                	push   $0x0$/;"	l
c0102da8	obj/kernel.asm	/^c0102da8:	6a 38                	push   $0x38$/;"	l
c0102daa	obj/kernel.asm	/^c0102daa:	e9 7f 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102daf	obj/kernel.asm	/^c0102daf <vector57>:$/;"	l
c0102daf	obj/kernel.asm	/^c0102daf:	6a 00                	push   $0x0$/;"	l
c0102db1	obj/kernel.asm	/^c0102db1:	6a 39                	push   $0x39$/;"	l
c0102db3	obj/kernel.asm	/^c0102db3:	e9 76 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102db8	obj/kernel.asm	/^c0102db8 <vector58>:$/;"	l
c0102db8	obj/kernel.asm	/^c0102db8:	6a 00                	push   $0x0$/;"	l
c0102dba	obj/kernel.asm	/^c0102dba:	6a 3a                	push   $0x3a$/;"	l
c0102dbc	obj/kernel.asm	/^c0102dbc:	e9 6d 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102dc1	obj/kernel.asm	/^c0102dc1 <vector59>:$/;"	l
c0102dc1	obj/kernel.asm	/^c0102dc1:	6a 00                	push   $0x0$/;"	l
c0102dc3	obj/kernel.asm	/^c0102dc3:	6a 3b                	push   $0x3b$/;"	l
c0102dc5	obj/kernel.asm	/^c0102dc5:	e9 64 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102dca	obj/kernel.asm	/^c0102dca <vector60>:$/;"	l
c0102dca	obj/kernel.asm	/^c0102dca:	6a 00                	push   $0x0$/;"	l
c0102dcc	obj/kernel.asm	/^c0102dcc:	6a 3c                	push   $0x3c$/;"	l
c0102dce	obj/kernel.asm	/^c0102dce:	e9 5b 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102dd3	obj/kernel.asm	/^c0102dd3 <vector61>:$/;"	l
c0102dd3	obj/kernel.asm	/^c0102dd3:	6a 00                	push   $0x0$/;"	l
c0102dd5	obj/kernel.asm	/^c0102dd5:	6a 3d                	push   $0x3d$/;"	l
c0102dd7	obj/kernel.asm	/^c0102dd7:	e9 52 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102ddc	obj/kernel.asm	/^c0102ddc <vector62>:$/;"	l
c0102ddc	obj/kernel.asm	/^c0102ddc:	6a 00                	push   $0x0$/;"	l
c0102dde	obj/kernel.asm	/^c0102dde:	6a 3e                	push   $0x3e$/;"	l
c0102de0	obj/kernel.asm	/^c0102de0:	e9 49 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102de5	obj/kernel.asm	/^c0102de5 <vector63>:$/;"	l
c0102de5	obj/kernel.asm	/^c0102de5:	6a 00                	push   $0x0$/;"	l
c0102de7	obj/kernel.asm	/^c0102de7:	6a 3f                	push   $0x3f$/;"	l
c0102de9	obj/kernel.asm	/^c0102de9:	e9 40 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102dee	obj/kernel.asm	/^c0102dee <vector64>:$/;"	l
c0102dee	obj/kernel.asm	/^c0102dee:	6a 00                	push   $0x0$/;"	l
c0102df0	obj/kernel.asm	/^c0102df0:	6a 40                	push   $0x40$/;"	l
c0102df2	obj/kernel.asm	/^c0102df2:	e9 37 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102df7	obj/kernel.asm	/^c0102df7 <vector65>:$/;"	l
c0102df7	obj/kernel.asm	/^c0102df7:	6a 00                	push   $0x0$/;"	l
c0102df9	obj/kernel.asm	/^c0102df9:	6a 41                	push   $0x41$/;"	l
c0102dfb	obj/kernel.asm	/^c0102dfb:	e9 2e 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102e00	obj/kernel.asm	/^c0102e00 <vector66>:$/;"	l
c0102e00	obj/kernel.asm	/^c0102e00:	6a 00                	push   $0x0$/;"	l
c0102e02	obj/kernel.asm	/^c0102e02:	6a 42                	push   $0x42$/;"	l
c0102e04	obj/kernel.asm	/^c0102e04:	e9 25 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102e09	obj/kernel.asm	/^c0102e09 <vector67>:$/;"	l
c0102e09	obj/kernel.asm	/^c0102e09:	6a 00                	push   $0x0$/;"	l
c0102e0b	obj/kernel.asm	/^c0102e0b:	6a 43                	push   $0x43$/;"	l
c0102e0d	obj/kernel.asm	/^c0102e0d:	e9 1c 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102e12	obj/kernel.asm	/^c0102e12 <vector68>:$/;"	l
c0102e12	obj/kernel.asm	/^c0102e12:	6a 00                	push   $0x0$/;"	l
c0102e14	obj/kernel.asm	/^c0102e14:	6a 44                	push   $0x44$/;"	l
c0102e16	obj/kernel.asm	/^c0102e16:	e9 13 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102e1b	obj/kernel.asm	/^c0102e1b <vector69>:$/;"	l
c0102e1b	obj/kernel.asm	/^c0102e1b:	6a 00                	push   $0x0$/;"	l
c0102e1d	obj/kernel.asm	/^c0102e1d:	6a 45                	push   $0x45$/;"	l
c0102e1f	obj/kernel.asm	/^c0102e1f:	e9 0a 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102e24	obj/kernel.asm	/^c0102e24 <vector70>:$/;"	l
c0102e24	obj/kernel.asm	/^c0102e24:	6a 00                	push   $0x0$/;"	l
c0102e26	obj/kernel.asm	/^c0102e26:	6a 46                	push   $0x46$/;"	l
c0102e28	obj/kernel.asm	/^c0102e28:	e9 01 08 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102e2d	obj/kernel.asm	/^c0102e2d <vector71>:$/;"	l
c0102e2d	obj/kernel.asm	/^c0102e2d:	6a 00                	push   $0x0$/;"	l
c0102e2f	obj/kernel.asm	/^c0102e2f:	6a 47                	push   $0x47$/;"	l
c0102e31	obj/kernel.asm	/^c0102e31:	e9 f8 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102e36	obj/kernel.asm	/^c0102e36 <vector72>:$/;"	l
c0102e36	obj/kernel.asm	/^c0102e36:	6a 00                	push   $0x0$/;"	l
c0102e38	obj/kernel.asm	/^c0102e38:	6a 48                	push   $0x48$/;"	l
c0102e3a	obj/kernel.asm	/^c0102e3a:	e9 ef 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102e3f	obj/kernel.asm	/^c0102e3f <vector73>:$/;"	l
c0102e3f	obj/kernel.asm	/^c0102e3f:	6a 00                	push   $0x0$/;"	l
c0102e41	obj/kernel.asm	/^c0102e41:	6a 49                	push   $0x49$/;"	l
c0102e43	obj/kernel.asm	/^c0102e43:	e9 e6 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102e48	obj/kernel.asm	/^c0102e48 <vector74>:$/;"	l
c0102e48	obj/kernel.asm	/^c0102e48:	6a 00                	push   $0x0$/;"	l
c0102e4a	obj/kernel.asm	/^c0102e4a:	6a 4a                	push   $0x4a$/;"	l
c0102e4c	obj/kernel.asm	/^c0102e4c:	e9 dd 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102e51	obj/kernel.asm	/^c0102e51 <vector75>:$/;"	l
c0102e51	obj/kernel.asm	/^c0102e51:	6a 00                	push   $0x0$/;"	l
c0102e53	obj/kernel.asm	/^c0102e53:	6a 4b                	push   $0x4b$/;"	l
c0102e55	obj/kernel.asm	/^c0102e55:	e9 d4 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102e5a	obj/kernel.asm	/^c0102e5a <vector76>:$/;"	l
c0102e5a	obj/kernel.asm	/^c0102e5a:	6a 00                	push   $0x0$/;"	l
c0102e5c	obj/kernel.asm	/^c0102e5c:	6a 4c                	push   $0x4c$/;"	l
c0102e5e	obj/kernel.asm	/^c0102e5e:	e9 cb 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102e63	obj/kernel.asm	/^c0102e63 <vector77>:$/;"	l
c0102e63	obj/kernel.asm	/^c0102e63:	6a 00                	push   $0x0$/;"	l
c0102e65	obj/kernel.asm	/^c0102e65:	6a 4d                	push   $0x4d$/;"	l
c0102e67	obj/kernel.asm	/^c0102e67:	e9 c2 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102e6c	obj/kernel.asm	/^c0102e6c <vector78>:$/;"	l
c0102e6c	obj/kernel.asm	/^c0102e6c:	6a 00                	push   $0x0$/;"	l
c0102e6e	obj/kernel.asm	/^c0102e6e:	6a 4e                	push   $0x4e$/;"	l
c0102e70	obj/kernel.asm	/^c0102e70:	e9 b9 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102e75	obj/kernel.asm	/^c0102e75 <vector79>:$/;"	l
c0102e75	obj/kernel.asm	/^c0102e75:	6a 00                	push   $0x0$/;"	l
c0102e77	obj/kernel.asm	/^c0102e77:	6a 4f                	push   $0x4f$/;"	l
c0102e79	obj/kernel.asm	/^c0102e79:	e9 b0 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102e7e	obj/kernel.asm	/^c0102e7e <vector80>:$/;"	l
c0102e7e	obj/kernel.asm	/^c0102e7e:	6a 00                	push   $0x0$/;"	l
c0102e80	obj/kernel.asm	/^c0102e80:	6a 50                	push   $0x50$/;"	l
c0102e82	obj/kernel.asm	/^c0102e82:	e9 a7 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102e87	obj/kernel.asm	/^c0102e87 <vector81>:$/;"	l
c0102e87	obj/kernel.asm	/^c0102e87:	6a 00                	push   $0x0$/;"	l
c0102e89	obj/kernel.asm	/^c0102e89:	6a 51                	push   $0x51$/;"	l
c0102e8b	obj/kernel.asm	/^c0102e8b:	e9 9e 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102e90	obj/kernel.asm	/^c0102e90 <vector82>:$/;"	l
c0102e90	obj/kernel.asm	/^c0102e90:	6a 00                	push   $0x0$/;"	l
c0102e92	obj/kernel.asm	/^c0102e92:	6a 52                	push   $0x52$/;"	l
c0102e94	obj/kernel.asm	/^c0102e94:	e9 95 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102e99	obj/kernel.asm	/^c0102e99 <vector83>:$/;"	l
c0102e99	obj/kernel.asm	/^c0102e99:	6a 00                	push   $0x0$/;"	l
c0102e9b	obj/kernel.asm	/^c0102e9b:	6a 53                	push   $0x53$/;"	l
c0102e9d	obj/kernel.asm	/^c0102e9d:	e9 8c 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102ea2	obj/kernel.asm	/^c0102ea2 <vector84>:$/;"	l
c0102ea2	obj/kernel.asm	/^c0102ea2:	6a 00                	push   $0x0$/;"	l
c0102ea4	obj/kernel.asm	/^c0102ea4:	6a 54                	push   $0x54$/;"	l
c0102ea6	obj/kernel.asm	/^c0102ea6:	e9 83 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102eab	obj/kernel.asm	/^c0102eab <vector85>:$/;"	l
c0102eab	obj/kernel.asm	/^c0102eab:	6a 00                	push   $0x0$/;"	l
c0102ead	obj/kernel.asm	/^c0102ead:	6a 55                	push   $0x55$/;"	l
c0102eaf	obj/kernel.asm	/^c0102eaf:	e9 7a 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102eb4	obj/kernel.asm	/^c0102eb4 <vector86>:$/;"	l
c0102eb4	obj/kernel.asm	/^c0102eb4:	6a 00                	push   $0x0$/;"	l
c0102eb6	obj/kernel.asm	/^c0102eb6:	6a 56                	push   $0x56$/;"	l
c0102eb8	obj/kernel.asm	/^c0102eb8:	e9 71 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102ebd	obj/kernel.asm	/^c0102ebd <vector87>:$/;"	l
c0102ebd	obj/kernel.asm	/^c0102ebd:	6a 00                	push   $0x0$/;"	l
c0102ebf	obj/kernel.asm	/^c0102ebf:	6a 57                	push   $0x57$/;"	l
c0102ec1	obj/kernel.asm	/^c0102ec1:	e9 68 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102ec6	obj/kernel.asm	/^c0102ec6 <vector88>:$/;"	l
c0102ec6	obj/kernel.asm	/^c0102ec6:	6a 00                	push   $0x0$/;"	l
c0102ec8	obj/kernel.asm	/^c0102ec8:	6a 58                	push   $0x58$/;"	l
c0102eca	obj/kernel.asm	/^c0102eca:	e9 5f 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102ecf	obj/kernel.asm	/^c0102ecf <vector89>:$/;"	l
c0102ecf	obj/kernel.asm	/^c0102ecf:	6a 00                	push   $0x0$/;"	l
c0102ed1	obj/kernel.asm	/^c0102ed1:	6a 59                	push   $0x59$/;"	l
c0102ed3	obj/kernel.asm	/^c0102ed3:	e9 56 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102ed8	obj/kernel.asm	/^c0102ed8 <vector90>:$/;"	l
c0102ed8	obj/kernel.asm	/^c0102ed8:	6a 00                	push   $0x0$/;"	l
c0102eda	obj/kernel.asm	/^c0102eda:	6a 5a                	push   $0x5a$/;"	l
c0102edc	obj/kernel.asm	/^c0102edc:	e9 4d 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102ee1	obj/kernel.asm	/^c0102ee1 <vector91>:$/;"	l
c0102ee1	obj/kernel.asm	/^c0102ee1:	6a 00                	push   $0x0$/;"	l
c0102ee3	obj/kernel.asm	/^c0102ee3:	6a 5b                	push   $0x5b$/;"	l
c0102ee5	obj/kernel.asm	/^c0102ee5:	e9 44 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102eea	obj/kernel.asm	/^c0102eea <vector92>:$/;"	l
c0102eea	obj/kernel.asm	/^c0102eea:	6a 00                	push   $0x0$/;"	l
c0102eec	obj/kernel.asm	/^c0102eec:	6a 5c                	push   $0x5c$/;"	l
c0102eee	obj/kernel.asm	/^c0102eee:	e9 3b 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102ef3	obj/kernel.asm	/^c0102ef3 <vector93>:$/;"	l
c0102ef3	obj/kernel.asm	/^c0102ef3:	6a 00                	push   $0x0$/;"	l
c0102ef5	obj/kernel.asm	/^c0102ef5:	6a 5d                	push   $0x5d$/;"	l
c0102ef7	obj/kernel.asm	/^c0102ef7:	e9 32 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102efc	obj/kernel.asm	/^c0102efc <vector94>:$/;"	l
c0102efc	obj/kernel.asm	/^c0102efc:	6a 00                	push   $0x0$/;"	l
c0102efe	obj/kernel.asm	/^c0102efe:	6a 5e                	push   $0x5e$/;"	l
c0102f00	obj/kernel.asm	/^c0102f00:	e9 29 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102f05	obj/kernel.asm	/^c0102f05 <vector95>:$/;"	l
c0102f05	obj/kernel.asm	/^c0102f05:	6a 00                	push   $0x0$/;"	l
c0102f07	obj/kernel.asm	/^c0102f07:	6a 5f                	push   $0x5f$/;"	l
c0102f09	obj/kernel.asm	/^c0102f09:	e9 20 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102f0e	obj/kernel.asm	/^c0102f0e <vector96>:$/;"	l
c0102f0e	obj/kernel.asm	/^c0102f0e:	6a 00                	push   $0x0$/;"	l
c0102f10	obj/kernel.asm	/^c0102f10:	6a 60                	push   $0x60$/;"	l
c0102f12	obj/kernel.asm	/^c0102f12:	e9 17 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102f17	obj/kernel.asm	/^c0102f17 <vector97>:$/;"	l
c0102f17	obj/kernel.asm	/^c0102f17:	6a 00                	push   $0x0$/;"	l
c0102f19	obj/kernel.asm	/^c0102f19:	6a 61                	push   $0x61$/;"	l
c0102f1b	obj/kernel.asm	/^c0102f1b:	e9 0e 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102f20	obj/kernel.asm	/^c0102f20 <vector98>:$/;"	l
c0102f20	obj/kernel.asm	/^c0102f20:	6a 00                	push   $0x0$/;"	l
c0102f22	obj/kernel.asm	/^c0102f22:	6a 62                	push   $0x62$/;"	l
c0102f24	obj/kernel.asm	/^c0102f24:	e9 05 07 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102f29	obj/kernel.asm	/^c0102f29 <vector99>:$/;"	l
c0102f29	obj/kernel.asm	/^c0102f29:	6a 00                	push   $0x0$/;"	l
c0102f2b	obj/kernel.asm	/^c0102f2b:	6a 63                	push   $0x63$/;"	l
c0102f2d	obj/kernel.asm	/^c0102f2d:	e9 fc 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102f32	obj/kernel.asm	/^c0102f32 <vector100>:$/;"	l
c0102f32	obj/kernel.asm	/^c0102f32:	6a 00                	push   $0x0$/;"	l
c0102f34	obj/kernel.asm	/^c0102f34:	6a 64                	push   $0x64$/;"	l
c0102f36	obj/kernel.asm	/^c0102f36:	e9 f3 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102f3b	obj/kernel.asm	/^c0102f3b <vector101>:$/;"	l
c0102f3b	obj/kernel.asm	/^c0102f3b:	6a 00                	push   $0x0$/;"	l
c0102f3d	obj/kernel.asm	/^c0102f3d:	6a 65                	push   $0x65$/;"	l
c0102f3f	obj/kernel.asm	/^c0102f3f:	e9 ea 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102f44	obj/kernel.asm	/^c0102f44 <vector102>:$/;"	l
c0102f44	obj/kernel.asm	/^c0102f44:	6a 00                	push   $0x0$/;"	l
c0102f46	obj/kernel.asm	/^c0102f46:	6a 66                	push   $0x66$/;"	l
c0102f48	obj/kernel.asm	/^c0102f48:	e9 e1 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102f4d	obj/kernel.asm	/^c0102f4d <vector103>:$/;"	l
c0102f4d	obj/kernel.asm	/^c0102f4d:	6a 00                	push   $0x0$/;"	l
c0102f4f	obj/kernel.asm	/^c0102f4f:	6a 67                	push   $0x67$/;"	l
c0102f51	obj/kernel.asm	/^c0102f51:	e9 d8 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102f56	obj/kernel.asm	/^c0102f56 <vector104>:$/;"	l
c0102f56	obj/kernel.asm	/^c0102f56:	6a 00                	push   $0x0$/;"	l
c0102f58	obj/kernel.asm	/^c0102f58:	6a 68                	push   $0x68$/;"	l
c0102f5a	obj/kernel.asm	/^c0102f5a:	e9 cf 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102f5f	obj/kernel.asm	/^c0102f5f <vector105>:$/;"	l
c0102f5f	obj/kernel.asm	/^c0102f5f:	6a 00                	push   $0x0$/;"	l
c0102f61	obj/kernel.asm	/^c0102f61:	6a 69                	push   $0x69$/;"	l
c0102f63	obj/kernel.asm	/^c0102f63:	e9 c6 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102f68	obj/kernel.asm	/^c0102f68 <vector106>:$/;"	l
c0102f68	obj/kernel.asm	/^c0102f68:	6a 00                	push   $0x0$/;"	l
c0102f6a	obj/kernel.asm	/^c0102f6a:	6a 6a                	push   $0x6a$/;"	l
c0102f6c	obj/kernel.asm	/^c0102f6c:	e9 bd 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102f71	obj/kernel.asm	/^c0102f71 <vector107>:$/;"	l
c0102f71	obj/kernel.asm	/^c0102f71:	6a 00                	push   $0x0$/;"	l
c0102f73	obj/kernel.asm	/^c0102f73:	6a 6b                	push   $0x6b$/;"	l
c0102f75	obj/kernel.asm	/^c0102f75:	e9 b4 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102f7a	obj/kernel.asm	/^c0102f7a <vector108>:$/;"	l
c0102f7a	obj/kernel.asm	/^c0102f7a:	6a 00                	push   $0x0$/;"	l
c0102f7c	obj/kernel.asm	/^c0102f7c:	6a 6c                	push   $0x6c$/;"	l
c0102f7e	obj/kernel.asm	/^c0102f7e:	e9 ab 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102f83	obj/kernel.asm	/^c0102f83 <vector109>:$/;"	l
c0102f83	obj/kernel.asm	/^c0102f83:	6a 00                	push   $0x0$/;"	l
c0102f85	obj/kernel.asm	/^c0102f85:	6a 6d                	push   $0x6d$/;"	l
c0102f87	obj/kernel.asm	/^c0102f87:	e9 a2 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102f8c	obj/kernel.asm	/^c0102f8c <vector110>:$/;"	l
c0102f8c	obj/kernel.asm	/^c0102f8c:	6a 00                	push   $0x0$/;"	l
c0102f8e	obj/kernel.asm	/^c0102f8e:	6a 6e                	push   $0x6e$/;"	l
c0102f90	obj/kernel.asm	/^c0102f90:	e9 99 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102f95	obj/kernel.asm	/^c0102f95 <vector111>:$/;"	l
c0102f95	obj/kernel.asm	/^c0102f95:	6a 00                	push   $0x0$/;"	l
c0102f97	obj/kernel.asm	/^c0102f97:	6a 6f                	push   $0x6f$/;"	l
c0102f99	obj/kernel.asm	/^c0102f99:	e9 90 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102f9e	obj/kernel.asm	/^c0102f9e <vector112>:$/;"	l
c0102f9e	obj/kernel.asm	/^c0102f9e:	6a 00                	push   $0x0$/;"	l
c0102fa0	obj/kernel.asm	/^c0102fa0:	6a 70                	push   $0x70$/;"	l
c0102fa2	obj/kernel.asm	/^c0102fa2:	e9 87 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102fa7	obj/kernel.asm	/^c0102fa7 <vector113>:$/;"	l
c0102fa7	obj/kernel.asm	/^c0102fa7:	6a 00                	push   $0x0$/;"	l
c0102fa9	obj/kernel.asm	/^c0102fa9:	6a 71                	push   $0x71$/;"	l
c0102fab	obj/kernel.asm	/^c0102fab:	e9 7e 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102fb0	obj/kernel.asm	/^c0102fb0 <vector114>:$/;"	l
c0102fb0	obj/kernel.asm	/^c0102fb0:	6a 00                	push   $0x0$/;"	l
c0102fb2	obj/kernel.asm	/^c0102fb2:	6a 72                	push   $0x72$/;"	l
c0102fb4	obj/kernel.asm	/^c0102fb4:	e9 75 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102fb9	obj/kernel.asm	/^c0102fb9 <vector115>:$/;"	l
c0102fb9	obj/kernel.asm	/^c0102fb9:	6a 00                	push   $0x0$/;"	l
c0102fbb	obj/kernel.asm	/^c0102fbb:	6a 73                	push   $0x73$/;"	l
c0102fbd	obj/kernel.asm	/^c0102fbd:	e9 6c 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102fc2	obj/kernel.asm	/^c0102fc2 <vector116>:$/;"	l
c0102fc2	obj/kernel.asm	/^c0102fc2:	6a 00                	push   $0x0$/;"	l
c0102fc4	obj/kernel.asm	/^c0102fc4:	6a 74                	push   $0x74$/;"	l
c0102fc6	obj/kernel.asm	/^c0102fc6:	e9 63 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102fcb	obj/kernel.asm	/^c0102fcb <vector117>:$/;"	l
c0102fcb	obj/kernel.asm	/^c0102fcb:	6a 00                	push   $0x0$/;"	l
c0102fcd	obj/kernel.asm	/^c0102fcd:	6a 75                	push   $0x75$/;"	l
c0102fcf	obj/kernel.asm	/^c0102fcf:	e9 5a 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102fd4	obj/kernel.asm	/^c0102fd4 <vector118>:$/;"	l
c0102fd4	obj/kernel.asm	/^c0102fd4:	6a 00                	push   $0x0$/;"	l
c0102fd6	obj/kernel.asm	/^c0102fd6:	6a 76                	push   $0x76$/;"	l
c0102fd8	obj/kernel.asm	/^c0102fd8:	e9 51 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102fdd	obj/kernel.asm	/^c0102fdd <vector119>:$/;"	l
c0102fdd	obj/kernel.asm	/^c0102fdd:	6a 00                	push   $0x0$/;"	l
c0102fdf	obj/kernel.asm	/^c0102fdf:	6a 77                	push   $0x77$/;"	l
c0102fe1	obj/kernel.asm	/^c0102fe1:	e9 48 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102fe6	obj/kernel.asm	/^c0102fe6 <vector120>:$/;"	l
c0102fe6	obj/kernel.asm	/^c0102fe6:	6a 00                	push   $0x0$/;"	l
c0102fe8	obj/kernel.asm	/^c0102fe8:	6a 78                	push   $0x78$/;"	l
c0102fea	obj/kernel.asm	/^c0102fea:	e9 3f 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102fef	obj/kernel.asm	/^c0102fef <vector121>:$/;"	l
c0102fef	obj/kernel.asm	/^c0102fef:	6a 00                	push   $0x0$/;"	l
c0102ff1	obj/kernel.asm	/^c0102ff1:	6a 79                	push   $0x79$/;"	l
c0102ff3	obj/kernel.asm	/^c0102ff3:	e9 36 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0102ff8	obj/kernel.asm	/^c0102ff8 <vector122>:$/;"	l
c0102ff8	obj/kernel.asm	/^c0102ff8:	6a 00                	push   $0x0$/;"	l
c0102ffa	obj/kernel.asm	/^c0102ffa:	6a 7a                	push   $0x7a$/;"	l
c0102ffc	obj/kernel.asm	/^c0102ffc:	e9 2d 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103001	obj/kernel.asm	/^c0103001 <vector123>:$/;"	l
c0103001	obj/kernel.asm	/^c0103001:	6a 00                	push   $0x0$/;"	l
c0103003	obj/kernel.asm	/^c0103003:	6a 7b                	push   $0x7b$/;"	l
c0103005	obj/kernel.asm	/^c0103005:	e9 24 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010300a	obj/kernel.asm	/^c010300a <vector124>:$/;"	l
c010300a	obj/kernel.asm	/^c010300a:	6a 00                	push   $0x0$/;"	l
c010300c	obj/kernel.asm	/^c010300c:	6a 7c                	push   $0x7c$/;"	l
c010300e	obj/kernel.asm	/^c010300e:	e9 1b 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103013	obj/kernel.asm	/^c0103013 <vector125>:$/;"	l
c0103013	obj/kernel.asm	/^c0103013:	6a 00                	push   $0x0$/;"	l
c0103015	obj/kernel.asm	/^c0103015:	6a 7d                	push   $0x7d$/;"	l
c0103017	obj/kernel.asm	/^c0103017:	e9 12 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010301c	obj/kernel.asm	/^c010301c <vector126>:$/;"	l
c010301c	obj/kernel.asm	/^c010301c:	6a 00                	push   $0x0$/;"	l
c010301e	obj/kernel.asm	/^c010301e:	6a 7e                	push   $0x7e$/;"	l
c0103020	obj/kernel.asm	/^c0103020:	e9 09 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103025	obj/kernel.asm	/^c0103025 <vector127>:$/;"	l
c0103025	obj/kernel.asm	/^c0103025:	6a 00                	push   $0x0$/;"	l
c0103027	obj/kernel.asm	/^c0103027:	6a 7f                	push   $0x7f$/;"	l
c0103029	obj/kernel.asm	/^c0103029:	e9 00 06 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010302e	obj/kernel.asm	/^c010302e <vector128>:$/;"	l
c010302e	obj/kernel.asm	/^c010302e:	6a 00                	push   $0x0$/;"	l
c0103030	obj/kernel.asm	/^c0103030:	68 80 00 00 00       	push   $0x80$/;"	l
c0103035	obj/kernel.asm	/^c0103035:	e9 f4 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010303a	obj/kernel.asm	/^c010303a <vector129>:$/;"	l
c010303a	obj/kernel.asm	/^c010303a:	6a 00                	push   $0x0$/;"	l
c010303c	obj/kernel.asm	/^c010303c:	68 81 00 00 00       	push   $0x81$/;"	l
c0103041	obj/kernel.asm	/^c0103041:	e9 e8 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103046	obj/kernel.asm	/^c0103046 <vector130>:$/;"	l
c0103046	obj/kernel.asm	/^c0103046:	6a 00                	push   $0x0$/;"	l
c0103048	obj/kernel.asm	/^c0103048:	68 82 00 00 00       	push   $0x82$/;"	l
c010304d	obj/kernel.asm	/^c010304d:	e9 dc 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103052	obj/kernel.asm	/^c0103052 <vector131>:$/;"	l
c0103052	obj/kernel.asm	/^c0103052:	6a 00                	push   $0x0$/;"	l
c0103054	obj/kernel.asm	/^c0103054:	68 83 00 00 00       	push   $0x83$/;"	l
c0103059	obj/kernel.asm	/^c0103059:	e9 d0 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010305e	obj/kernel.asm	/^c010305e <vector132>:$/;"	l
c010305e	obj/kernel.asm	/^c010305e:	6a 00                	push   $0x0$/;"	l
c0103060	obj/kernel.asm	/^c0103060:	68 84 00 00 00       	push   $0x84$/;"	l
c0103065	obj/kernel.asm	/^c0103065:	e9 c4 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010306a	obj/kernel.asm	/^c010306a <vector133>:$/;"	l
c010306a	obj/kernel.asm	/^c010306a:	6a 00                	push   $0x0$/;"	l
c010306c	obj/kernel.asm	/^c010306c:	68 85 00 00 00       	push   $0x85$/;"	l
c0103071	obj/kernel.asm	/^c0103071:	e9 b8 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103076	obj/kernel.asm	/^c0103076 <vector134>:$/;"	l
c0103076	obj/kernel.asm	/^c0103076:	6a 00                	push   $0x0$/;"	l
c0103078	obj/kernel.asm	/^c0103078:	68 86 00 00 00       	push   $0x86$/;"	l
c010307d	obj/kernel.asm	/^c010307d:	e9 ac 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103082	obj/kernel.asm	/^c0103082 <vector135>:$/;"	l
c0103082	obj/kernel.asm	/^c0103082:	6a 00                	push   $0x0$/;"	l
c0103084	obj/kernel.asm	/^c0103084:	68 87 00 00 00       	push   $0x87$/;"	l
c0103089	obj/kernel.asm	/^c0103089:	e9 a0 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010308e	obj/kernel.asm	/^c010308e <vector136>:$/;"	l
c010308e	obj/kernel.asm	/^c010308e:	6a 00                	push   $0x0$/;"	l
c0103090	obj/kernel.asm	/^c0103090:	68 88 00 00 00       	push   $0x88$/;"	l
c0103095	obj/kernel.asm	/^c0103095:	e9 94 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010309a	obj/kernel.asm	/^c010309a <vector137>:$/;"	l
c010309a	obj/kernel.asm	/^c010309a:	6a 00                	push   $0x0$/;"	l
c010309c	obj/kernel.asm	/^c010309c:	68 89 00 00 00       	push   $0x89$/;"	l
c01030a1	obj/kernel.asm	/^c01030a1:	e9 88 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01030a6	obj/kernel.asm	/^c01030a6 <vector138>:$/;"	l
c01030a6	obj/kernel.asm	/^c01030a6:	6a 00                	push   $0x0$/;"	l
c01030a8	obj/kernel.asm	/^c01030a8:	68 8a 00 00 00       	push   $0x8a$/;"	l
c01030ad	obj/kernel.asm	/^c01030ad:	e9 7c 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01030b2	obj/kernel.asm	/^c01030b2 <vector139>:$/;"	l
c01030b2	obj/kernel.asm	/^c01030b2:	6a 00                	push   $0x0$/;"	l
c01030b4	obj/kernel.asm	/^c01030b4:	68 8b 00 00 00       	push   $0x8b$/;"	l
c01030b9	obj/kernel.asm	/^c01030b9:	e9 70 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01030be	obj/kernel.asm	/^c01030be <vector140>:$/;"	l
c01030be	obj/kernel.asm	/^c01030be:	6a 00                	push   $0x0$/;"	l
c01030c0	obj/kernel.asm	/^c01030c0:	68 8c 00 00 00       	push   $0x8c$/;"	l
c01030c5	obj/kernel.asm	/^c01030c5:	e9 64 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01030ca	obj/kernel.asm	/^c01030ca <vector141>:$/;"	l
c01030ca	obj/kernel.asm	/^c01030ca:	6a 00                	push   $0x0$/;"	l
c01030cc	obj/kernel.asm	/^c01030cc:	68 8d 00 00 00       	push   $0x8d$/;"	l
c01030d1	obj/kernel.asm	/^c01030d1:	e9 58 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01030d6	obj/kernel.asm	/^c01030d6 <vector142>:$/;"	l
c01030d6	obj/kernel.asm	/^c01030d6:	6a 00                	push   $0x0$/;"	l
c01030d8	obj/kernel.asm	/^c01030d8:	68 8e 00 00 00       	push   $0x8e$/;"	l
c01030dd	obj/kernel.asm	/^c01030dd:	e9 4c 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01030e2	obj/kernel.asm	/^c01030e2 <vector143>:$/;"	l
c01030e2	obj/kernel.asm	/^c01030e2:	6a 00                	push   $0x0$/;"	l
c01030e4	obj/kernel.asm	/^c01030e4:	68 8f 00 00 00       	push   $0x8f$/;"	l
c01030e9	obj/kernel.asm	/^c01030e9:	e9 40 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01030ee	obj/kernel.asm	/^c01030ee <vector144>:$/;"	l
c01030ee	obj/kernel.asm	/^c01030ee:	6a 00                	push   $0x0$/;"	l
c01030f0	obj/kernel.asm	/^c01030f0:	68 90 00 00 00       	push   $0x90$/;"	l
c01030f5	obj/kernel.asm	/^c01030f5:	e9 34 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01030fa	obj/kernel.asm	/^c01030fa <vector145>:$/;"	l
c01030fa	obj/kernel.asm	/^c01030fa:	6a 00                	push   $0x0$/;"	l
c01030fc	obj/kernel.asm	/^c01030fc:	68 91 00 00 00       	push   $0x91$/;"	l
c0103101	obj/kernel.asm	/^c0103101:	e9 28 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103106	obj/kernel.asm	/^c0103106 <vector146>:$/;"	l
c0103106	obj/kernel.asm	/^c0103106:	6a 00                	push   $0x0$/;"	l
c0103108	obj/kernel.asm	/^c0103108:	68 92 00 00 00       	push   $0x92$/;"	l
c010310d	obj/kernel.asm	/^c010310d:	e9 1c 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103112	obj/kernel.asm	/^c0103112 <vector147>:$/;"	l
c0103112	obj/kernel.asm	/^c0103112:	6a 00                	push   $0x0$/;"	l
c0103114	obj/kernel.asm	/^c0103114:	68 93 00 00 00       	push   $0x93$/;"	l
c0103119	obj/kernel.asm	/^c0103119:	e9 10 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010311e	obj/kernel.asm	/^c010311e <vector148>:$/;"	l
c010311e	obj/kernel.asm	/^c010311e:	6a 00                	push   $0x0$/;"	l
c0103120	obj/kernel.asm	/^c0103120:	68 94 00 00 00       	push   $0x94$/;"	l
c0103125	obj/kernel.asm	/^c0103125:	e9 04 05 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010312a	obj/kernel.asm	/^c010312a <vector149>:$/;"	l
c010312a	obj/kernel.asm	/^c010312a:	6a 00                	push   $0x0$/;"	l
c010312c	obj/kernel.asm	/^c010312c:	68 95 00 00 00       	push   $0x95$/;"	l
c0103131	obj/kernel.asm	/^c0103131:	e9 f8 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103136	obj/kernel.asm	/^c0103136 <vector150>:$/;"	l
c0103136	obj/kernel.asm	/^c0103136:	6a 00                	push   $0x0$/;"	l
c0103138	obj/kernel.asm	/^c0103138:	68 96 00 00 00       	push   $0x96$/;"	l
c010313d	obj/kernel.asm	/^c010313d:	e9 ec 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103142	obj/kernel.asm	/^c0103142 <vector151>:$/;"	l
c0103142	obj/kernel.asm	/^c0103142:	6a 00                	push   $0x0$/;"	l
c0103144	obj/kernel.asm	/^c0103144:	68 97 00 00 00       	push   $0x97$/;"	l
c0103149	obj/kernel.asm	/^c0103149:	e9 e0 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010314e	obj/kernel.asm	/^c010314e <vector152>:$/;"	l
c010314e	obj/kernel.asm	/^c010314e:	6a 00                	push   $0x0$/;"	l
c0103150	obj/kernel.asm	/^c0103150:	68 98 00 00 00       	push   $0x98$/;"	l
c0103155	obj/kernel.asm	/^c0103155:	e9 d4 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010315a	obj/kernel.asm	/^c010315a <vector153>:$/;"	l
c010315a	obj/kernel.asm	/^c010315a:	6a 00                	push   $0x0$/;"	l
c010315c	obj/kernel.asm	/^c010315c:	68 99 00 00 00       	push   $0x99$/;"	l
c0103161	obj/kernel.asm	/^c0103161:	e9 c8 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103166	obj/kernel.asm	/^c0103166 <vector154>:$/;"	l
c0103166	obj/kernel.asm	/^c0103166:	6a 00                	push   $0x0$/;"	l
c0103168	obj/kernel.asm	/^c0103168:	68 9a 00 00 00       	push   $0x9a$/;"	l
c010316d	obj/kernel.asm	/^c010316d:	e9 bc 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103172	obj/kernel.asm	/^c0103172 <vector155>:$/;"	l
c0103172	obj/kernel.asm	/^c0103172:	6a 00                	push   $0x0$/;"	l
c0103174	obj/kernel.asm	/^c0103174:	68 9b 00 00 00       	push   $0x9b$/;"	l
c0103179	obj/kernel.asm	/^c0103179:	e9 b0 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010317e	obj/kernel.asm	/^c010317e <vector156>:$/;"	l
c010317e	obj/kernel.asm	/^c010317e:	6a 00                	push   $0x0$/;"	l
c0103180	obj/kernel.asm	/^c0103180:	68 9c 00 00 00       	push   $0x9c$/;"	l
c0103185	obj/kernel.asm	/^c0103185:	e9 a4 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010318a	obj/kernel.asm	/^c010318a <vector157>:$/;"	l
c010318a	obj/kernel.asm	/^c010318a:	6a 00                	push   $0x0$/;"	l
c010318c	obj/kernel.asm	/^c010318c:	68 9d 00 00 00       	push   $0x9d$/;"	l
c0103191	obj/kernel.asm	/^c0103191:	e9 98 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103196	obj/kernel.asm	/^c0103196 <vector158>:$/;"	l
c0103196	obj/kernel.asm	/^c0103196:	6a 00                	push   $0x0$/;"	l
c0103198	obj/kernel.asm	/^c0103198:	68 9e 00 00 00       	push   $0x9e$/;"	l
c010319d	obj/kernel.asm	/^c010319d:	e9 8c 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01031a2	obj/kernel.asm	/^c01031a2 <vector159>:$/;"	l
c01031a2	obj/kernel.asm	/^c01031a2:	6a 00                	push   $0x0$/;"	l
c01031a4	obj/kernel.asm	/^c01031a4:	68 9f 00 00 00       	push   $0x9f$/;"	l
c01031a9	obj/kernel.asm	/^c01031a9:	e9 80 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01031ae	obj/kernel.asm	/^c01031ae <vector160>:$/;"	l
c01031ae	obj/kernel.asm	/^c01031ae:	6a 00                	push   $0x0$/;"	l
c01031b0	obj/kernel.asm	/^c01031b0:	68 a0 00 00 00       	push   $0xa0$/;"	l
c01031b5	obj/kernel.asm	/^c01031b5:	e9 74 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01031ba	obj/kernel.asm	/^c01031ba <vector161>:$/;"	l
c01031ba	obj/kernel.asm	/^c01031ba:	6a 00                	push   $0x0$/;"	l
c01031bc	obj/kernel.asm	/^c01031bc:	68 a1 00 00 00       	push   $0xa1$/;"	l
c01031c1	obj/kernel.asm	/^c01031c1:	e9 68 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01031c6	obj/kernel.asm	/^c01031c6 <vector162>:$/;"	l
c01031c6	obj/kernel.asm	/^c01031c6:	6a 00                	push   $0x0$/;"	l
c01031c8	obj/kernel.asm	/^c01031c8:	68 a2 00 00 00       	push   $0xa2$/;"	l
c01031cd	obj/kernel.asm	/^c01031cd:	e9 5c 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01031d2	obj/kernel.asm	/^c01031d2 <vector163>:$/;"	l
c01031d2	obj/kernel.asm	/^c01031d2:	6a 00                	push   $0x0$/;"	l
c01031d4	obj/kernel.asm	/^c01031d4:	68 a3 00 00 00       	push   $0xa3$/;"	l
c01031d9	obj/kernel.asm	/^c01031d9:	e9 50 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01031de	obj/kernel.asm	/^c01031de <vector164>:$/;"	l
c01031de	obj/kernel.asm	/^c01031de:	6a 00                	push   $0x0$/;"	l
c01031e0	obj/kernel.asm	/^c01031e0:	68 a4 00 00 00       	push   $0xa4$/;"	l
c01031e5	obj/kernel.asm	/^c01031e5:	e9 44 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01031ea	obj/kernel.asm	/^c01031ea <vector165>:$/;"	l
c01031ea	obj/kernel.asm	/^c01031ea:	6a 00                	push   $0x0$/;"	l
c01031ec	obj/kernel.asm	/^c01031ec:	68 a5 00 00 00       	push   $0xa5$/;"	l
c01031f1	obj/kernel.asm	/^c01031f1:	e9 38 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01031f6	obj/kernel.asm	/^c01031f6 <vector166>:$/;"	l
c01031f6	obj/kernel.asm	/^c01031f6:	6a 00                	push   $0x0$/;"	l
c01031f8	obj/kernel.asm	/^c01031f8:	68 a6 00 00 00       	push   $0xa6$/;"	l
c01031fd	obj/kernel.asm	/^c01031fd:	e9 2c 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103202	obj/kernel.asm	/^c0103202 <vector167>:$/;"	l
c0103202	obj/kernel.asm	/^c0103202:	6a 00                	push   $0x0$/;"	l
c0103204	obj/kernel.asm	/^c0103204:	68 a7 00 00 00       	push   $0xa7$/;"	l
c0103209	obj/kernel.asm	/^c0103209:	e9 20 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010320e	obj/kernel.asm	/^c010320e <vector168>:$/;"	l
c010320e	obj/kernel.asm	/^c010320e:	6a 00                	push   $0x0$/;"	l
c0103210	obj/kernel.asm	/^c0103210:	68 a8 00 00 00       	push   $0xa8$/;"	l
c0103215	obj/kernel.asm	/^c0103215:	e9 14 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010321a	obj/kernel.asm	/^c010321a <vector169>:$/;"	l
c010321a	obj/kernel.asm	/^c010321a:	6a 00                	push   $0x0$/;"	l
c010321c	obj/kernel.asm	/^c010321c:	68 a9 00 00 00       	push   $0xa9$/;"	l
c0103221	obj/kernel.asm	/^c0103221:	e9 08 04 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103226	obj/kernel.asm	/^c0103226 <vector170>:$/;"	l
c0103226	obj/kernel.asm	/^c0103226:	6a 00                	push   $0x0$/;"	l
c0103228	obj/kernel.asm	/^c0103228:	68 aa 00 00 00       	push   $0xaa$/;"	l
c010322d	obj/kernel.asm	/^c010322d:	e9 fc 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103232	obj/kernel.asm	/^c0103232 <vector171>:$/;"	l
c0103232	obj/kernel.asm	/^c0103232:	6a 00                	push   $0x0$/;"	l
c0103234	obj/kernel.asm	/^c0103234:	68 ab 00 00 00       	push   $0xab$/;"	l
c0103239	obj/kernel.asm	/^c0103239:	e9 f0 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010323e	obj/kernel.asm	/^c010323e <vector172>:$/;"	l
c010323e	obj/kernel.asm	/^c010323e:	6a 00                	push   $0x0$/;"	l
c0103240	obj/kernel.asm	/^c0103240:	68 ac 00 00 00       	push   $0xac$/;"	l
c0103245	obj/kernel.asm	/^c0103245:	e9 e4 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010324a	obj/kernel.asm	/^c010324a <vector173>:$/;"	l
c010324a	obj/kernel.asm	/^c010324a:	6a 00                	push   $0x0$/;"	l
c010324c	obj/kernel.asm	/^c010324c:	68 ad 00 00 00       	push   $0xad$/;"	l
c0103251	obj/kernel.asm	/^c0103251:	e9 d8 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103256	obj/kernel.asm	/^c0103256 <vector174>:$/;"	l
c0103256	obj/kernel.asm	/^c0103256:	6a 00                	push   $0x0$/;"	l
c0103258	obj/kernel.asm	/^c0103258:	68 ae 00 00 00       	push   $0xae$/;"	l
c010325d	obj/kernel.asm	/^c010325d:	e9 cc 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103262	obj/kernel.asm	/^c0103262 <vector175>:$/;"	l
c0103262	obj/kernel.asm	/^c0103262:	6a 00                	push   $0x0$/;"	l
c0103264	obj/kernel.asm	/^c0103264:	68 af 00 00 00       	push   $0xaf$/;"	l
c0103269	obj/kernel.asm	/^c0103269:	e9 c0 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010326e	obj/kernel.asm	/^c010326e <vector176>:$/;"	l
c010326e	obj/kernel.asm	/^c010326e:	6a 00                	push   $0x0$/;"	l
c0103270	obj/kernel.asm	/^c0103270:	68 b0 00 00 00       	push   $0xb0$/;"	l
c0103275	obj/kernel.asm	/^c0103275:	e9 b4 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010327a	obj/kernel.asm	/^c010327a <vector177>:$/;"	l
c010327a	obj/kernel.asm	/^c010327a:	6a 00                	push   $0x0$/;"	l
c010327c	obj/kernel.asm	/^c010327c:	68 b1 00 00 00       	push   $0xb1$/;"	l
c0103281	obj/kernel.asm	/^c0103281:	e9 a8 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103286	obj/kernel.asm	/^c0103286 <vector178>:$/;"	l
c0103286	obj/kernel.asm	/^c0103286:	6a 00                	push   $0x0$/;"	l
c0103288	obj/kernel.asm	/^c0103288:	68 b2 00 00 00       	push   $0xb2$/;"	l
c010328d	obj/kernel.asm	/^c010328d:	e9 9c 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103292	obj/kernel.asm	/^c0103292 <vector179>:$/;"	l
c0103292	obj/kernel.asm	/^c0103292:	6a 00                	push   $0x0$/;"	l
c0103294	obj/kernel.asm	/^c0103294:	68 b3 00 00 00       	push   $0xb3$/;"	l
c0103299	obj/kernel.asm	/^c0103299:	e9 90 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010329e	obj/kernel.asm	/^c010329e <vector180>:$/;"	l
c010329e	obj/kernel.asm	/^c010329e:	6a 00                	push   $0x0$/;"	l
c01032a0	obj/kernel.asm	/^c01032a0:	68 b4 00 00 00       	push   $0xb4$/;"	l
c01032a5	obj/kernel.asm	/^c01032a5:	e9 84 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01032aa	obj/kernel.asm	/^c01032aa <vector181>:$/;"	l
c01032aa	obj/kernel.asm	/^c01032aa:	6a 00                	push   $0x0$/;"	l
c01032ac	obj/kernel.asm	/^c01032ac:	68 b5 00 00 00       	push   $0xb5$/;"	l
c01032b1	obj/kernel.asm	/^c01032b1:	e9 78 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01032b6	obj/kernel.asm	/^c01032b6 <vector182>:$/;"	l
c01032b6	obj/kernel.asm	/^c01032b6:	6a 00                	push   $0x0$/;"	l
c01032b8	obj/kernel.asm	/^c01032b8:	68 b6 00 00 00       	push   $0xb6$/;"	l
c01032bd	obj/kernel.asm	/^c01032bd:	e9 6c 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01032c2	obj/kernel.asm	/^c01032c2 <vector183>:$/;"	l
c01032c2	obj/kernel.asm	/^c01032c2:	6a 00                	push   $0x0$/;"	l
c01032c4	obj/kernel.asm	/^c01032c4:	68 b7 00 00 00       	push   $0xb7$/;"	l
c01032c9	obj/kernel.asm	/^c01032c9:	e9 60 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01032ce	obj/kernel.asm	/^c01032ce <vector184>:$/;"	l
c01032ce	obj/kernel.asm	/^c01032ce:	6a 00                	push   $0x0$/;"	l
c01032d0	obj/kernel.asm	/^c01032d0:	68 b8 00 00 00       	push   $0xb8$/;"	l
c01032d5	obj/kernel.asm	/^c01032d5:	e9 54 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01032da	obj/kernel.asm	/^c01032da <vector185>:$/;"	l
c01032da	obj/kernel.asm	/^c01032da:	6a 00                	push   $0x0$/;"	l
c01032dc	obj/kernel.asm	/^c01032dc:	68 b9 00 00 00       	push   $0xb9$/;"	l
c01032e1	obj/kernel.asm	/^c01032e1:	e9 48 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01032e6	obj/kernel.asm	/^c01032e6 <vector186>:$/;"	l
c01032e6	obj/kernel.asm	/^c01032e6:	6a 00                	push   $0x0$/;"	l
c01032e8	obj/kernel.asm	/^c01032e8:	68 ba 00 00 00       	push   $0xba$/;"	l
c01032ed	obj/kernel.asm	/^c01032ed:	e9 3c 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01032f2	obj/kernel.asm	/^c01032f2 <vector187>:$/;"	l
c01032f2	obj/kernel.asm	/^c01032f2:	6a 00                	push   $0x0$/;"	l
c01032f4	obj/kernel.asm	/^c01032f4:	68 bb 00 00 00       	push   $0xbb$/;"	l
c01032f9	obj/kernel.asm	/^c01032f9:	e9 30 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01032fe	obj/kernel.asm	/^c01032fe <vector188>:$/;"	l
c01032fe	obj/kernel.asm	/^c01032fe:	6a 00                	push   $0x0$/;"	l
c0103300	obj/kernel.asm	/^c0103300:	68 bc 00 00 00       	push   $0xbc$/;"	l
c0103305	obj/kernel.asm	/^c0103305:	e9 24 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010330a	obj/kernel.asm	/^c010330a <vector189>:$/;"	l
c010330a	obj/kernel.asm	/^c010330a:	6a 00                	push   $0x0$/;"	l
c010330c	obj/kernel.asm	/^c010330c:	68 bd 00 00 00       	push   $0xbd$/;"	l
c0103311	obj/kernel.asm	/^c0103311:	e9 18 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103316	obj/kernel.asm	/^c0103316 <vector190>:$/;"	l
c0103316	obj/kernel.asm	/^c0103316:	6a 00                	push   $0x0$/;"	l
c0103318	obj/kernel.asm	/^c0103318:	68 be 00 00 00       	push   $0xbe$/;"	l
c010331d	obj/kernel.asm	/^c010331d:	e9 0c 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103322	obj/kernel.asm	/^c0103322 <vector191>:$/;"	l
c0103322	obj/kernel.asm	/^c0103322:	6a 00                	push   $0x0$/;"	l
c0103324	obj/kernel.asm	/^c0103324:	68 bf 00 00 00       	push   $0xbf$/;"	l
c0103329	obj/kernel.asm	/^c0103329:	e9 00 03 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010332e	obj/kernel.asm	/^c010332e <vector192>:$/;"	l
c010332e	obj/kernel.asm	/^c010332e:	6a 00                	push   $0x0$/;"	l
c0103330	obj/kernel.asm	/^c0103330:	68 c0 00 00 00       	push   $0xc0$/;"	l
c0103335	obj/kernel.asm	/^c0103335:	e9 f4 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010333a	obj/kernel.asm	/^c010333a <vector193>:$/;"	l
c010333a	obj/kernel.asm	/^c010333a:	6a 00                	push   $0x0$/;"	l
c010333c	obj/kernel.asm	/^c010333c:	68 c1 00 00 00       	push   $0xc1$/;"	l
c0103341	obj/kernel.asm	/^c0103341:	e9 e8 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103346	obj/kernel.asm	/^c0103346 <vector194>:$/;"	l
c0103346	obj/kernel.asm	/^c0103346:	6a 00                	push   $0x0$/;"	l
c0103348	obj/kernel.asm	/^c0103348:	68 c2 00 00 00       	push   $0xc2$/;"	l
c010334d	obj/kernel.asm	/^c010334d:	e9 dc 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103352	obj/kernel.asm	/^c0103352 <vector195>:$/;"	l
c0103352	obj/kernel.asm	/^c0103352:	6a 00                	push   $0x0$/;"	l
c0103354	obj/kernel.asm	/^c0103354:	68 c3 00 00 00       	push   $0xc3$/;"	l
c0103359	obj/kernel.asm	/^c0103359:	e9 d0 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010335e	obj/kernel.asm	/^c010335e <vector196>:$/;"	l
c010335e	obj/kernel.asm	/^c010335e:	6a 00                	push   $0x0$/;"	l
c0103360	obj/kernel.asm	/^c0103360:	68 c4 00 00 00       	push   $0xc4$/;"	l
c0103365	obj/kernel.asm	/^c0103365:	e9 c4 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010336a	obj/kernel.asm	/^c010336a <vector197>:$/;"	l
c010336a	obj/kernel.asm	/^c010336a:	6a 00                	push   $0x0$/;"	l
c010336c	obj/kernel.asm	/^c010336c:	68 c5 00 00 00       	push   $0xc5$/;"	l
c0103371	obj/kernel.asm	/^c0103371:	e9 b8 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103376	obj/kernel.asm	/^c0103376 <vector198>:$/;"	l
c0103376	obj/kernel.asm	/^c0103376:	6a 00                	push   $0x0$/;"	l
c0103378	obj/kernel.asm	/^c0103378:	68 c6 00 00 00       	push   $0xc6$/;"	l
c010337d	obj/kernel.asm	/^c010337d:	e9 ac 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103382	obj/kernel.asm	/^c0103382 <vector199>:$/;"	l
c0103382	obj/kernel.asm	/^c0103382:	6a 00                	push   $0x0$/;"	l
c0103384	obj/kernel.asm	/^c0103384:	68 c7 00 00 00       	push   $0xc7$/;"	l
c0103389	obj/kernel.asm	/^c0103389:	e9 a0 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010338e	obj/kernel.asm	/^c010338e <vector200>:$/;"	l
c010338e	obj/kernel.asm	/^c010338e:	6a 00                	push   $0x0$/;"	l
c0103390	obj/kernel.asm	/^c0103390:	68 c8 00 00 00       	push   $0xc8$/;"	l
c0103395	obj/kernel.asm	/^c0103395:	e9 94 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010339a	obj/kernel.asm	/^c010339a <vector201>:$/;"	l
c010339a	obj/kernel.asm	/^c010339a:	6a 00                	push   $0x0$/;"	l
c010339c	obj/kernel.asm	/^c010339c:	68 c9 00 00 00       	push   $0xc9$/;"	l
c01033a1	obj/kernel.asm	/^c01033a1:	e9 88 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01033a6	obj/kernel.asm	/^c01033a6 <vector202>:$/;"	l
c01033a6	obj/kernel.asm	/^c01033a6:	6a 00                	push   $0x0$/;"	l
c01033a8	obj/kernel.asm	/^c01033a8:	68 ca 00 00 00       	push   $0xca$/;"	l
c01033ad	obj/kernel.asm	/^c01033ad:	e9 7c 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01033b2	obj/kernel.asm	/^c01033b2 <vector203>:$/;"	l
c01033b2	obj/kernel.asm	/^c01033b2:	6a 00                	push   $0x0$/;"	l
c01033b4	obj/kernel.asm	/^c01033b4:	68 cb 00 00 00       	push   $0xcb$/;"	l
c01033b9	obj/kernel.asm	/^c01033b9:	e9 70 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01033be	obj/kernel.asm	/^c01033be <vector204>:$/;"	l
c01033be	obj/kernel.asm	/^c01033be:	6a 00                	push   $0x0$/;"	l
c01033c0	obj/kernel.asm	/^c01033c0:	68 cc 00 00 00       	push   $0xcc$/;"	l
c01033c5	obj/kernel.asm	/^c01033c5:	e9 64 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01033ca	obj/kernel.asm	/^c01033ca <vector205>:$/;"	l
c01033ca	obj/kernel.asm	/^c01033ca:	6a 00                	push   $0x0$/;"	l
c01033cc	obj/kernel.asm	/^c01033cc:	68 cd 00 00 00       	push   $0xcd$/;"	l
c01033d1	obj/kernel.asm	/^c01033d1:	e9 58 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01033d6	obj/kernel.asm	/^c01033d6 <vector206>:$/;"	l
c01033d6	obj/kernel.asm	/^c01033d6:	6a 00                	push   $0x0$/;"	l
c01033d8	obj/kernel.asm	/^c01033d8:	68 ce 00 00 00       	push   $0xce$/;"	l
c01033dd	obj/kernel.asm	/^c01033dd:	e9 4c 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01033e2	obj/kernel.asm	/^c01033e2 <vector207>:$/;"	l
c01033e2	obj/kernel.asm	/^c01033e2:	6a 00                	push   $0x0$/;"	l
c01033e4	obj/kernel.asm	/^c01033e4:	68 cf 00 00 00       	push   $0xcf$/;"	l
c01033e9	obj/kernel.asm	/^c01033e9:	e9 40 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01033ee	obj/kernel.asm	/^c01033ee <vector208>:$/;"	l
c01033ee	obj/kernel.asm	/^c01033ee:	6a 00                	push   $0x0$/;"	l
c01033f0	obj/kernel.asm	/^c01033f0:	68 d0 00 00 00       	push   $0xd0$/;"	l
c01033f5	obj/kernel.asm	/^c01033f5:	e9 34 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01033fa	obj/kernel.asm	/^c01033fa <vector209>:$/;"	l
c01033fa	obj/kernel.asm	/^c01033fa:	6a 00                	push   $0x0$/;"	l
c01033fc	obj/kernel.asm	/^c01033fc:	68 d1 00 00 00       	push   $0xd1$/;"	l
c0103401	obj/kernel.asm	/^c0103401:	e9 28 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103406	obj/kernel.asm	/^c0103406 <vector210>:$/;"	l
c0103406	obj/kernel.asm	/^c0103406:	6a 00                	push   $0x0$/;"	l
c0103408	obj/kernel.asm	/^c0103408:	68 d2 00 00 00       	push   $0xd2$/;"	l
c010340d	obj/kernel.asm	/^c010340d:	e9 1c 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103412	obj/kernel.asm	/^c0103412 <vector211>:$/;"	l
c0103412	obj/kernel.asm	/^c0103412:	6a 00                	push   $0x0$/;"	l
c0103414	obj/kernel.asm	/^c0103414:	68 d3 00 00 00       	push   $0xd3$/;"	l
c0103419	obj/kernel.asm	/^c0103419:	e9 10 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010341e	obj/kernel.asm	/^c010341e <vector212>:$/;"	l
c010341e	obj/kernel.asm	/^c010341e:	6a 00                	push   $0x0$/;"	l
c0103420	obj/kernel.asm	/^c0103420:	68 d4 00 00 00       	push   $0xd4$/;"	l
c0103425	obj/kernel.asm	/^c0103425:	e9 04 02 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010342a	obj/kernel.asm	/^c010342a <vector213>:$/;"	l
c010342a	obj/kernel.asm	/^c010342a:	6a 00                	push   $0x0$/;"	l
c010342c	obj/kernel.asm	/^c010342c:	68 d5 00 00 00       	push   $0xd5$/;"	l
c0103431	obj/kernel.asm	/^c0103431:	e9 f8 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103436	obj/kernel.asm	/^c0103436 <vector214>:$/;"	l
c0103436	obj/kernel.asm	/^c0103436:	6a 00                	push   $0x0$/;"	l
c0103438	obj/kernel.asm	/^c0103438:	68 d6 00 00 00       	push   $0xd6$/;"	l
c010343d	obj/kernel.asm	/^c010343d:	e9 ec 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103442	obj/kernel.asm	/^c0103442 <vector215>:$/;"	l
c0103442	obj/kernel.asm	/^c0103442:	6a 00                	push   $0x0$/;"	l
c0103444	obj/kernel.asm	/^c0103444:	68 d7 00 00 00       	push   $0xd7$/;"	l
c0103449	obj/kernel.asm	/^c0103449:	e9 e0 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010344e	obj/kernel.asm	/^c010344e <vector216>:$/;"	l
c010344e	obj/kernel.asm	/^c010344e:	6a 00                	push   $0x0$/;"	l
c0103450	obj/kernel.asm	/^c0103450:	68 d8 00 00 00       	push   $0xd8$/;"	l
c0103455	obj/kernel.asm	/^c0103455:	e9 d4 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010345a	obj/kernel.asm	/^c010345a <vector217>:$/;"	l
c010345a	obj/kernel.asm	/^c010345a:	6a 00                	push   $0x0$/;"	l
c010345c	obj/kernel.asm	/^c010345c:	68 d9 00 00 00       	push   $0xd9$/;"	l
c0103461	obj/kernel.asm	/^c0103461:	e9 c8 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103466	obj/kernel.asm	/^c0103466 <vector218>:$/;"	l
c0103466	obj/kernel.asm	/^c0103466:	6a 00                	push   $0x0$/;"	l
c0103468	obj/kernel.asm	/^c0103468:	68 da 00 00 00       	push   $0xda$/;"	l
c010346d	obj/kernel.asm	/^c010346d:	e9 bc 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103472	obj/kernel.asm	/^c0103472 <vector219>:$/;"	l
c0103472	obj/kernel.asm	/^c0103472:	6a 00                	push   $0x0$/;"	l
c0103474	obj/kernel.asm	/^c0103474:	68 db 00 00 00       	push   $0xdb$/;"	l
c0103479	obj/kernel.asm	/^c0103479:	e9 b0 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010347e	obj/kernel.asm	/^c010347e <vector220>:$/;"	l
c010347e	obj/kernel.asm	/^c010347e:	6a 00                	push   $0x0$/;"	l
c0103480	obj/kernel.asm	/^c0103480:	68 dc 00 00 00       	push   $0xdc$/;"	l
c0103485	obj/kernel.asm	/^c0103485:	e9 a4 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010348a	obj/kernel.asm	/^c010348a <vector221>:$/;"	l
c010348a	obj/kernel.asm	/^c010348a:	6a 00                	push   $0x0$/;"	l
c010348c	obj/kernel.asm	/^c010348c:	68 dd 00 00 00       	push   $0xdd$/;"	l
c0103491	obj/kernel.asm	/^c0103491:	e9 98 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103496	obj/kernel.asm	/^c0103496 <vector222>:$/;"	l
c0103496	obj/kernel.asm	/^c0103496:	6a 00                	push   $0x0$/;"	l
c0103498	obj/kernel.asm	/^c0103498:	68 de 00 00 00       	push   $0xde$/;"	l
c010349d	obj/kernel.asm	/^c010349d:	e9 8c 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01034a2	obj/kernel.asm	/^c01034a2 <vector223>:$/;"	l
c01034a2	obj/kernel.asm	/^c01034a2:	6a 00                	push   $0x0$/;"	l
c01034a4	obj/kernel.asm	/^c01034a4:	68 df 00 00 00       	push   $0xdf$/;"	l
c01034a9	obj/kernel.asm	/^c01034a9:	e9 80 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01034ae	obj/kernel.asm	/^c01034ae <vector224>:$/;"	l
c01034ae	obj/kernel.asm	/^c01034ae:	6a 00                	push   $0x0$/;"	l
c01034b0	obj/kernel.asm	/^c01034b0:	68 e0 00 00 00       	push   $0xe0$/;"	l
c01034b5	obj/kernel.asm	/^c01034b5:	e9 74 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01034ba	obj/kernel.asm	/^c01034ba <vector225>:$/;"	l
c01034ba	obj/kernel.asm	/^c01034ba:	6a 00                	push   $0x0$/;"	l
c01034bc	obj/kernel.asm	/^c01034bc:	68 e1 00 00 00       	push   $0xe1$/;"	l
c01034c1	obj/kernel.asm	/^c01034c1:	e9 68 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01034c6	obj/kernel.asm	/^c01034c6 <vector226>:$/;"	l
c01034c6	obj/kernel.asm	/^c01034c6:	6a 00                	push   $0x0$/;"	l
c01034c8	obj/kernel.asm	/^c01034c8:	68 e2 00 00 00       	push   $0xe2$/;"	l
c01034cd	obj/kernel.asm	/^c01034cd:	e9 5c 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01034d2	obj/kernel.asm	/^c01034d2 <vector227>:$/;"	l
c01034d2	obj/kernel.asm	/^c01034d2:	6a 00                	push   $0x0$/;"	l
c01034d4	obj/kernel.asm	/^c01034d4:	68 e3 00 00 00       	push   $0xe3$/;"	l
c01034d9	obj/kernel.asm	/^c01034d9:	e9 50 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01034de	obj/kernel.asm	/^c01034de <vector228>:$/;"	l
c01034de	obj/kernel.asm	/^c01034de:	6a 00                	push   $0x0$/;"	l
c01034e0	obj/kernel.asm	/^c01034e0:	68 e4 00 00 00       	push   $0xe4$/;"	l
c01034e5	obj/kernel.asm	/^c01034e5:	e9 44 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01034ea	obj/kernel.asm	/^c01034ea <vector229>:$/;"	l
c01034ea	obj/kernel.asm	/^c01034ea:	6a 00                	push   $0x0$/;"	l
c01034ec	obj/kernel.asm	/^c01034ec:	68 e5 00 00 00       	push   $0xe5$/;"	l
c01034f1	obj/kernel.asm	/^c01034f1:	e9 38 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01034f6	obj/kernel.asm	/^c01034f6 <vector230>:$/;"	l
c01034f6	obj/kernel.asm	/^c01034f6:	6a 00                	push   $0x0$/;"	l
c01034f8	obj/kernel.asm	/^c01034f8:	68 e6 00 00 00       	push   $0xe6$/;"	l
c01034fd	obj/kernel.asm	/^c01034fd:	e9 2c 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103502	obj/kernel.asm	/^c0103502 <vector231>:$/;"	l
c0103502	obj/kernel.asm	/^c0103502:	6a 00                	push   $0x0$/;"	l
c0103504	obj/kernel.asm	/^c0103504:	68 e7 00 00 00       	push   $0xe7$/;"	l
c0103509	obj/kernel.asm	/^c0103509:	e9 20 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010350e	obj/kernel.asm	/^c010350e <vector232>:$/;"	l
c010350e	obj/kernel.asm	/^c010350e:	6a 00                	push   $0x0$/;"	l
c0103510	obj/kernel.asm	/^c0103510:	68 e8 00 00 00       	push   $0xe8$/;"	l
c0103515	obj/kernel.asm	/^c0103515:	e9 14 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010351a	obj/kernel.asm	/^c010351a <vector233>:$/;"	l
c010351a	obj/kernel.asm	/^c010351a:	6a 00                	push   $0x0$/;"	l
c010351c	obj/kernel.asm	/^c010351c:	68 e9 00 00 00       	push   $0xe9$/;"	l
c0103521	obj/kernel.asm	/^c0103521:	e9 08 01 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103526	obj/kernel.asm	/^c0103526 <vector234>:$/;"	l
c0103526	obj/kernel.asm	/^c0103526:	6a 00                	push   $0x0$/;"	l
c0103528	obj/kernel.asm	/^c0103528:	68 ea 00 00 00       	push   $0xea$/;"	l
c010352d	obj/kernel.asm	/^c010352d:	e9 fc 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103532	obj/kernel.asm	/^c0103532 <vector235>:$/;"	l
c0103532	obj/kernel.asm	/^c0103532:	6a 00                	push   $0x0$/;"	l
c0103534	obj/kernel.asm	/^c0103534:	68 eb 00 00 00       	push   $0xeb$/;"	l
c0103539	obj/kernel.asm	/^c0103539:	e9 f0 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010353e	obj/kernel.asm	/^c010353e <vector236>:$/;"	l
c010353e	obj/kernel.asm	/^c010353e:	6a 00                	push   $0x0$/;"	l
c0103540	obj/kernel.asm	/^c0103540:	68 ec 00 00 00       	push   $0xec$/;"	l
c0103545	obj/kernel.asm	/^c0103545:	e9 e4 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010354a	obj/kernel.asm	/^c010354a <vector237>:$/;"	l
c010354a	obj/kernel.asm	/^c010354a:	6a 00                	push   $0x0$/;"	l
c010354c	obj/kernel.asm	/^c010354c:	68 ed 00 00 00       	push   $0xed$/;"	l
c0103551	obj/kernel.asm	/^c0103551:	e9 d8 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103556	obj/kernel.asm	/^c0103556 <vector238>:$/;"	l
c0103556	obj/kernel.asm	/^c0103556:	6a 00                	push   $0x0$/;"	l
c0103558	obj/kernel.asm	/^c0103558:	68 ee 00 00 00       	push   $0xee$/;"	l
c010355d	obj/kernel.asm	/^c010355d:	e9 cc 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103562	obj/kernel.asm	/^c0103562 <vector239>:$/;"	l
c0103562	obj/kernel.asm	/^c0103562:	6a 00                	push   $0x0$/;"	l
c0103564	obj/kernel.asm	/^c0103564:	68 ef 00 00 00       	push   $0xef$/;"	l
c0103569	obj/kernel.asm	/^c0103569:	e9 c0 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010356e	obj/kernel.asm	/^c010356e <vector240>:$/;"	l
c010356e	obj/kernel.asm	/^c010356e:	6a 00                	push   $0x0$/;"	l
c0103570	obj/kernel.asm	/^c0103570:	68 f0 00 00 00       	push   $0xf0$/;"	l
c0103575	obj/kernel.asm	/^c0103575:	e9 b4 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010357a	obj/kernel.asm	/^c010357a <vector241>:$/;"	l
c010357a	obj/kernel.asm	/^c010357a:	6a 00                	push   $0x0$/;"	l
c010357c	obj/kernel.asm	/^c010357c:	68 f1 00 00 00       	push   $0xf1$/;"	l
c0103581	obj/kernel.asm	/^c0103581:	e9 a8 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103586	obj/kernel.asm	/^c0103586 <vector242>:$/;"	l
c0103586	obj/kernel.asm	/^c0103586:	6a 00                	push   $0x0$/;"	l
c0103588	obj/kernel.asm	/^c0103588:	68 f2 00 00 00       	push   $0xf2$/;"	l
c010358d	obj/kernel.asm	/^c010358d:	e9 9c 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103592	obj/kernel.asm	/^c0103592 <vector243>:$/;"	l
c0103592	obj/kernel.asm	/^c0103592:	6a 00                	push   $0x0$/;"	l
c0103594	obj/kernel.asm	/^c0103594:	68 f3 00 00 00       	push   $0xf3$/;"	l
c0103599	obj/kernel.asm	/^c0103599:	e9 90 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010359e	obj/kernel.asm	/^c010359e <vector244>:$/;"	l
c010359e	obj/kernel.asm	/^c010359e:	6a 00                	push   $0x0$/;"	l
c01035a0	obj/kernel.asm	/^c01035a0:	68 f4 00 00 00       	push   $0xf4$/;"	l
c01035a5	obj/kernel.asm	/^c01035a5:	e9 84 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01035aa	obj/kernel.asm	/^c01035aa <vector245>:$/;"	l
c01035aa	obj/kernel.asm	/^c01035aa:	6a 00                	push   $0x0$/;"	l
c01035ac	obj/kernel.asm	/^c01035ac:	68 f5 00 00 00       	push   $0xf5$/;"	l
c01035b1	obj/kernel.asm	/^c01035b1:	e9 78 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01035b6	obj/kernel.asm	/^c01035b6 <vector246>:$/;"	l
c01035b6	obj/kernel.asm	/^c01035b6:	6a 00                	push   $0x0$/;"	l
c01035b8	obj/kernel.asm	/^c01035b8:	68 f6 00 00 00       	push   $0xf6$/;"	l
c01035bd	obj/kernel.asm	/^c01035bd:	e9 6c 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01035c2	obj/kernel.asm	/^c01035c2 <vector247>:$/;"	l
c01035c2	obj/kernel.asm	/^c01035c2:	6a 00                	push   $0x0$/;"	l
c01035c4	obj/kernel.asm	/^c01035c4:	68 f7 00 00 00       	push   $0xf7$/;"	l
c01035c9	obj/kernel.asm	/^c01035c9:	e9 60 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01035ce	obj/kernel.asm	/^c01035ce <vector248>:$/;"	l
c01035ce	obj/kernel.asm	/^c01035ce:	6a 00                	push   $0x0$/;"	l
c01035d0	obj/kernel.asm	/^c01035d0:	68 f8 00 00 00       	push   $0xf8$/;"	l
c01035d5	obj/kernel.asm	/^c01035d5:	e9 54 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01035da	obj/kernel.asm	/^c01035da <vector249>:$/;"	l
c01035da	obj/kernel.asm	/^c01035da:	6a 00                	push   $0x0$/;"	l
c01035dc	obj/kernel.asm	/^c01035dc:	68 f9 00 00 00       	push   $0xf9$/;"	l
c01035e1	obj/kernel.asm	/^c01035e1:	e9 48 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01035e6	obj/kernel.asm	/^c01035e6 <vector250>:$/;"	l
c01035e6	obj/kernel.asm	/^c01035e6:	6a 00                	push   $0x0$/;"	l
c01035e8	obj/kernel.asm	/^c01035e8:	68 fa 00 00 00       	push   $0xfa$/;"	l
c01035ed	obj/kernel.asm	/^c01035ed:	e9 3c 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01035f2	obj/kernel.asm	/^c01035f2 <vector251>:$/;"	l
c01035f2	obj/kernel.asm	/^c01035f2:	6a 00                	push   $0x0$/;"	l
c01035f4	obj/kernel.asm	/^c01035f4:	68 fb 00 00 00       	push   $0xfb$/;"	l
c01035f9	obj/kernel.asm	/^c01035f9:	e9 30 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c01035fe	obj/kernel.asm	/^c01035fe <vector252>:$/;"	l
c01035fe	obj/kernel.asm	/^c01035fe:	6a 00                	push   $0x0$/;"	l
c0103600	obj/kernel.asm	/^c0103600:	68 fc 00 00 00       	push   $0xfc$/;"	l
c0103605	obj/kernel.asm	/^c0103605:	e9 24 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010360a	obj/kernel.asm	/^c010360a <vector253>:$/;"	l
c010360a	obj/kernel.asm	/^c010360a:	6a 00                	push   $0x0$/;"	l
c010360c	obj/kernel.asm	/^c010360c:	68 fd 00 00 00       	push   $0xfd$/;"	l
c0103611	obj/kernel.asm	/^c0103611:	e9 18 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103616	obj/kernel.asm	/^c0103616 <vector254>:$/;"	l
c0103616	obj/kernel.asm	/^c0103616:	6a 00                	push   $0x0$/;"	l
c0103618	obj/kernel.asm	/^c0103618:	68 fe 00 00 00       	push   $0xfe$/;"	l
c010361d	obj/kernel.asm	/^c010361d:	e9 0c 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c0103622	obj/kernel.asm	/^c0103622 <vector255>:$/;"	l
c0103622	obj/kernel.asm	/^c0103622:	6a 00                	push   $0x0$/;"	l
c0103624	obj/kernel.asm	/^c0103624:	68 ff 00 00 00       	push   $0xff$/;"	l
c0103629	obj/kernel.asm	/^c0103629:	e9 00 00 00 00       	jmp    c010362e <__alltraps>$/;"	l
c010362e	obj/kernel.asm	/^c010362e <__alltraps>:$/;"	l
c010362e	obj/kernel.asm	/^c010362e:	1e                   	push   %ds$/;"	l
c010362f	obj/kernel.asm	/^c010362f:	06                   	push   %es$/;"	l
c0103630	obj/kernel.asm	/^c0103630:	0f a0                	push   %fs$/;"	l
c0103632	obj/kernel.asm	/^c0103632:	0f a8                	push   %gs$/;"	l
c0103634	obj/kernel.asm	/^c0103634:	60                   	pusha  $/;"	l
c0103635	obj/kernel.asm	/^c0103635:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c010363a	obj/kernel.asm	/^c010363a:	8e d8                	mov    %eax,%ds$/;"	l
c010363c	obj/kernel.asm	/^c010363c:	8e c0                	mov    %eax,%es$/;"	l
c010363e	obj/kernel.asm	/^c010363e:	54                   	push   %esp$/;"	l
c010363f	obj/kernel.asm	/^c010363f:	e8 e6 f4 ff ff       	call   c0102b2a <trap>$/;"	l
c0103644	obj/kernel.asm	/^c0103644:	5c                   	pop    %esp$/;"	l
c0103645	obj/kernel.asm	/^c0103645 <__trapret>:$/;"	l
c0103645	obj/kernel.asm	/^c0103645:	61                   	popa   $/;"	l
c0103646	obj/kernel.asm	/^c0103646:	0f a9                	pop    %gs$/;"	l
c0103648	obj/kernel.asm	/^c0103648:	0f a1                	pop    %fs$/;"	l
c010364a	obj/kernel.asm	/^c010364a:	07                   	pop    %es$/;"	l
c010364b	obj/kernel.asm	/^c010364b:	1f                   	pop    %ds$/;"	l
c010364c	obj/kernel.asm	/^c010364c:	83 c4 08             	add    $0x8,%esp$/;"	l
c010364f	obj/kernel.asm	/^c010364f:	cf                   	iret   $/;"	l
c0103650	obj/kernel.asm	/^c0103650 <forkrets>:$/;"	l
c0103650	obj/kernel.asm	/^c0103650:	8b 64 24 04          	mov    0x4(%esp),%esp$/;"	l
c0103654	obj/kernel.asm	/^c0103654:	e9 ec ff ff ff       	jmp    c0103645 <__trapret>$/;"	l
c0103659	obj/kernel.asm	/^c0103659 <page2ppn>:$/;"	l
c0103659	obj/kernel.asm	/^c0103659:	55                   	push   %ebp$/;"	l
c010365a	obj/kernel.asm	/^c010365a:	89 e5                	mov    %esp,%ebp$/;"	l
c010365c	obj/kernel.asm	/^c010365c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010365f	obj/kernel.asm	/^c010365f:	8b 15 98 45 1c c0    	mov    0xc01c4598,%edx$/;"	l
c0103665	obj/kernel.asm	/^c0103665:	29 d0                	sub    %edx,%eax$/;"	l
c0103667	obj/kernel.asm	/^c0103667:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c010366a	obj/kernel.asm	/^c010366a:	5d                   	pop    %ebp$/;"	l
c010366b	obj/kernel.asm	/^c010366b:	c3                   	ret    $/;"	l
c010366c	obj/kernel.asm	/^c010366c <page2pa>:$/;"	l
c010366c	obj/kernel.asm	/^c010366c:	55                   	push   %ebp$/;"	l
c010366d	obj/kernel.asm	/^c010366d:	89 e5                	mov    %esp,%ebp$/;"	l
c010366f	obj/kernel.asm	/^c010366f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0103672	obj/kernel.asm	/^c0103672:	e8 e2 ff ff ff       	call   c0103659 <page2ppn>$/;"	l
c0103677	obj/kernel.asm	/^c0103677:	83 c4 04             	add    $0x4,%esp$/;"	l
c010367a	obj/kernel.asm	/^c010367a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010367d	obj/kernel.asm	/^c010367d:	c9                   	leave  $/;"	l
c010367e	obj/kernel.asm	/^c010367e:	c3                   	ret    $/;"	l
c010367f	obj/kernel.asm	/^c010367f <pa2page>:$/;"	l
c010367f	obj/kernel.asm	/^c010367f:	55                   	push   %ebp$/;"	l
c0103680	obj/kernel.asm	/^c0103680:	89 e5                	mov    %esp,%ebp$/;"	l
c0103682	obj/kernel.asm	/^c0103682:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103685	obj/kernel.asm	/^c0103685:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103688	obj/kernel.asm	/^c0103688:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010368b	obj/kernel.asm	/^c010368b:	89 c2                	mov    %eax,%edx$/;"	l
c010368d	obj/kernel.asm	/^c010368d:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c0103692	obj/kernel.asm	/^c0103692:	39 c2                	cmp    %eax,%edx$/;"	l
c0103694	obj/kernel.asm	/^c0103694:	72 14                	jb     c01036aa <pa2page+0x2b>$/;"	l
c0103696	obj/kernel.asm	/^c0103696:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103699	obj/kernel.asm	/^c0103699:	68 10 d5 10 c0       	push   $0xc010d510$/;"	l
c010369e	obj/kernel.asm	/^c010369e:	6a 5e                	push   $0x5e$/;"	l
c01036a0	obj/kernel.asm	/^c01036a0:	68 2f d5 10 c0       	push   $0xc010d52f$/;"	l
c01036a5	obj/kernel.asm	/^c01036a5:	e8 35 cd ff ff       	call   c01003df <__panic>$/;"	l
c01036aa	obj/kernel.asm	/^c01036aa:	a1 98 45 1c c0       	mov    0xc01c4598,%eax$/;"	l
c01036af	obj/kernel.asm	/^c01036af:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01036b2	obj/kernel.asm	/^c01036b2:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c01036b5	obj/kernel.asm	/^c01036b5:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c01036b8	obj/kernel.asm	/^c01036b8:	01 d0                	add    %edx,%eax$/;"	l
c01036ba	obj/kernel.asm	/^c01036ba:	c9                   	leave  $/;"	l
c01036bb	obj/kernel.asm	/^c01036bb:	c3                   	ret    $/;"	l
c01036bc	obj/kernel.asm	/^c01036bc <page2kva>:$/;"	l
c01036bc	obj/kernel.asm	/^c01036bc:	55                   	push   %ebp$/;"	l
c01036bd	obj/kernel.asm	/^c01036bd:	89 e5                	mov    %esp,%ebp$/;"	l
c01036bf	obj/kernel.asm	/^c01036bf:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01036c2	obj/kernel.asm	/^c01036c2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01036c5	obj/kernel.asm	/^c01036c5:	e8 a2 ff ff ff       	call   c010366c <page2pa>$/;"	l
c01036ca	obj/kernel.asm	/^c01036ca:	83 c4 04             	add    $0x4,%esp$/;"	l
c01036cd	obj/kernel.asm	/^c01036cd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01036d0	obj/kernel.asm	/^c01036d0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01036d3	obj/kernel.asm	/^c01036d3:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01036d6	obj/kernel.asm	/^c01036d6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01036d9	obj/kernel.asm	/^c01036d9:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c01036de	obj/kernel.asm	/^c01036de:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c01036e1	obj/kernel.asm	/^c01036e1:	72 14                	jb     c01036f7 <page2kva+0x3b>$/;"	l
c01036e3	obj/kernel.asm	/^c01036e3:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01036e6	obj/kernel.asm	/^c01036e6:	68 40 d5 10 c0       	push   $0xc010d540$/;"	l
c01036eb	obj/kernel.asm	/^c01036eb:	6a 65                	push   $0x65$/;"	l
c01036ed	obj/kernel.asm	/^c01036ed:	68 2f d5 10 c0       	push   $0xc010d52f$/;"	l
c01036f2	obj/kernel.asm	/^c01036f2:	e8 e8 cc ff ff       	call   c01003df <__panic>$/;"	l
c01036f7	obj/kernel.asm	/^c01036f7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01036fa	obj/kernel.asm	/^c01036fa:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c01036ff	obj/kernel.asm	/^c01036ff:	c9                   	leave  $/;"	l
c0103700	obj/kernel.asm	/^c0103700:	c3                   	ret    $/;"	l
c0103701	obj/kernel.asm	/^c0103701 <pte2page>:$/;"	l
c0103701	obj/kernel.asm	/^c0103701:	55                   	push   %ebp$/;"	l
c0103702	obj/kernel.asm	/^c0103702:	89 e5                	mov    %esp,%ebp$/;"	l
c0103704	obj/kernel.asm	/^c0103704:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103707	obj/kernel.asm	/^c0103707:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010370a	obj/kernel.asm	/^c010370a:	83 e0 01             	and    $0x1,%eax$/;"	l
c010370d	obj/kernel.asm	/^c010370d:	85 c0                	test   %eax,%eax$/;"	l
c010370f	obj/kernel.asm	/^c010370f:	75 14                	jne    c0103725 <pte2page+0x24>$/;"	l
c0103711	obj/kernel.asm	/^c0103711:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103714	obj/kernel.asm	/^c0103714:	68 64 d5 10 c0       	push   $0xc010d564$/;"	l
c0103719	obj/kernel.asm	/^c0103719:	6a 70                	push   $0x70$/;"	l
c010371b	obj/kernel.asm	/^c010371b:	68 2f d5 10 c0       	push   $0xc010d52f$/;"	l
c0103720	obj/kernel.asm	/^c0103720:	e8 ba cc ff ff       	call   c01003df <__panic>$/;"	l
c0103725	obj/kernel.asm	/^c0103725:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103728	obj/kernel.asm	/^c0103728:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010372d	obj/kernel.asm	/^c010372d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103730	obj/kernel.asm	/^c0103730:	50                   	push   %eax$/;"	l
c0103731	obj/kernel.asm	/^c0103731:	e8 49 ff ff ff       	call   c010367f <pa2page>$/;"	l
c0103736	obj/kernel.asm	/^c0103736:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103739	obj/kernel.asm	/^c0103739:	c9                   	leave  $/;"	l
c010373a	obj/kernel.asm	/^c010373a:	c3                   	ret    $/;"	l
c010373b	obj/kernel.asm	/^c010373b <pde2page>:$/;"	l
c010373b	obj/kernel.asm	/^c010373b:	55                   	push   %ebp$/;"	l
c010373c	obj/kernel.asm	/^c010373c:	89 e5                	mov    %esp,%ebp$/;"	l
c010373e	obj/kernel.asm	/^c010373e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103741	obj/kernel.asm	/^c0103741:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103744	obj/kernel.asm	/^c0103744:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0103749	obj/kernel.asm	/^c0103749:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010374c	obj/kernel.asm	/^c010374c:	50                   	push   %eax$/;"	l
c010374d	obj/kernel.asm	/^c010374d:	e8 2d ff ff ff       	call   c010367f <pa2page>$/;"	l
c0103752	obj/kernel.asm	/^c0103752:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103755	obj/kernel.asm	/^c0103755:	c9                   	leave  $/;"	l
c0103756	obj/kernel.asm	/^c0103756:	c3                   	ret    $/;"	l
c0103757	obj/kernel.asm	/^c0103757 <page_ref>:$/;"	l
c0103757	obj/kernel.asm	/^c0103757:	55                   	push   %ebp$/;"	l
c0103758	obj/kernel.asm	/^c0103758:	89 e5                	mov    %esp,%ebp$/;"	l
c010375a	obj/kernel.asm	/^c010375a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010375d	obj/kernel.asm	/^c010375d:	8b 00                	mov    (%eax),%eax$/;"	l
c010375f	obj/kernel.asm	/^c010375f:	5d                   	pop    %ebp$/;"	l
c0103760	obj/kernel.asm	/^c0103760:	c3                   	ret    $/;"	l
c0103761	obj/kernel.asm	/^c0103761 <set_page_ref>:$/;"	l
c0103761	obj/kernel.asm	/^c0103761:	55                   	push   %ebp$/;"	l
c0103762	obj/kernel.asm	/^c0103762:	89 e5                	mov    %esp,%ebp$/;"	l
c0103764	obj/kernel.asm	/^c0103764:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103767	obj/kernel.asm	/^c0103767:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010376a	obj/kernel.asm	/^c010376a:	89 10                	mov    %edx,(%eax)$/;"	l
c010376c	obj/kernel.asm	/^c010376c:	5d                   	pop    %ebp$/;"	l
c010376d	obj/kernel.asm	/^c010376d:	c3                   	ret    $/;"	l
c010376e	obj/kernel.asm	/^c010376e <page_ref_inc>:$/;"	l
c010376e	obj/kernel.asm	/^c010376e:	55                   	push   %ebp$/;"	l
c010376f	obj/kernel.asm	/^c010376f:	89 e5                	mov    %esp,%ebp$/;"	l
c0103771	obj/kernel.asm	/^c0103771:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103774	obj/kernel.asm	/^c0103774:	8b 00                	mov    (%eax),%eax$/;"	l
c0103776	obj/kernel.asm	/^c0103776:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0103779	obj/kernel.asm	/^c0103779:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010377c	obj/kernel.asm	/^c010377c:	89 10                	mov    %edx,(%eax)$/;"	l
c010377e	obj/kernel.asm	/^c010377e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103781	obj/kernel.asm	/^c0103781:	8b 00                	mov    (%eax),%eax$/;"	l
c0103783	obj/kernel.asm	/^c0103783:	5d                   	pop    %ebp$/;"	l
c0103784	obj/kernel.asm	/^c0103784:	c3                   	ret    $/;"	l
c0103785	obj/kernel.asm	/^c0103785 <page_ref_dec>:$/;"	l
c0103785	obj/kernel.asm	/^c0103785:	55                   	push   %ebp$/;"	l
c0103786	obj/kernel.asm	/^c0103786:	89 e5                	mov    %esp,%ebp$/;"	l
c0103788	obj/kernel.asm	/^c0103788:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010378b	obj/kernel.asm	/^c010378b:	8b 00                	mov    (%eax),%eax$/;"	l
c010378d	obj/kernel.asm	/^c010378d:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0103790	obj/kernel.asm	/^c0103790:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103793	obj/kernel.asm	/^c0103793:	89 10                	mov    %edx,(%eax)$/;"	l
c0103795	obj/kernel.asm	/^c0103795:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103798	obj/kernel.asm	/^c0103798:	8b 00                	mov    (%eax),%eax$/;"	l
c010379a	obj/kernel.asm	/^c010379a:	5d                   	pop    %ebp$/;"	l
c010379b	obj/kernel.asm	/^c010379b:	c3                   	ret    $/;"	l
c010379c	obj/kernel.asm	/^c010379c <__intr_save>:$/;"	l
c010379c	obj/kernel.asm	/^c010379c:	55                   	push   %ebp$/;"	l
c010379d	obj/kernel.asm	/^c010379d:	89 e5                	mov    %esp,%ebp$/;"	l
c010379f	obj/kernel.asm	/^c010379f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01037a2	obj/kernel.asm	/^c01037a2:	9c                   	pushf  $/;"	l
c01037a3	obj/kernel.asm	/^c01037a3:	58                   	pop    %eax$/;"	l
c01037a4	obj/kernel.asm	/^c01037a4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01037a7	obj/kernel.asm	/^c01037a7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01037aa	obj/kernel.asm	/^c01037aa:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c01037af	obj/kernel.asm	/^c01037af:	85 c0                	test   %eax,%eax$/;"	l
c01037b1	obj/kernel.asm	/^c01037b1:	74 0c                	je     c01037bf <__intr_save+0x23>$/;"	l
c01037b3	obj/kernel.asm	/^c01037b3:	e8 ea e8 ff ff       	call   c01020a2 <intr_disable>$/;"	l
c01037b8	obj/kernel.asm	/^c01037b8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01037bd	obj/kernel.asm	/^c01037bd:	eb 05                	jmp    c01037c4 <__intr_save+0x28>$/;"	l
c01037bf	obj/kernel.asm	/^c01037bf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01037c4	obj/kernel.asm	/^c01037c4:	c9                   	leave  $/;"	l
c01037c5	obj/kernel.asm	/^c01037c5:	c3                   	ret    $/;"	l
c01037c6	obj/kernel.asm	/^c01037c6 <__intr_restore>:$/;"	l
c01037c6	obj/kernel.asm	/^c01037c6:	55                   	push   %ebp$/;"	l
c01037c7	obj/kernel.asm	/^c01037c7:	89 e5                	mov    %esp,%ebp$/;"	l
c01037c9	obj/kernel.asm	/^c01037c9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01037cc	obj/kernel.asm	/^c01037cc:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01037d0	obj/kernel.asm	/^c01037d0:	74 05                	je     c01037d7 <__intr_restore+0x11>$/;"	l
c01037d2	obj/kernel.asm	/^c01037d2:	e8 c5 e8 ff ff       	call   c010209c <intr_enable>$/;"	l
c01037d7	obj/kernel.asm	/^c01037d7:	c9                   	leave  $/;"	l
c01037d8	obj/kernel.asm	/^c01037d8:	c3                   	ret    $/;"	l
c01037d9	obj/kernel.asm	/^c01037d9 <lgdt>:$/;"	l
c01037d9	obj/kernel.asm	/^c01037d9:	55                   	push   %ebp$/;"	l
c01037da	obj/kernel.asm	/^c01037da:	89 e5                	mov    %esp,%ebp$/;"	l
c01037dc	obj/kernel.asm	/^c01037dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01037df	obj/kernel.asm	/^c01037df:	0f 01 10             	lgdtl  (%eax)$/;"	l
c01037e2	obj/kernel.asm	/^c01037e2:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c01037e7	obj/kernel.asm	/^c01037e7:	8e e8                	mov    %eax,%gs$/;"	l
c01037e9	obj/kernel.asm	/^c01037e9:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c01037ee	obj/kernel.asm	/^c01037ee:	8e e0                	mov    %eax,%fs$/;"	l
c01037f0	obj/kernel.asm	/^c01037f0:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c01037f5	obj/kernel.asm	/^c01037f5:	8e c0                	mov    %eax,%es$/;"	l
c01037f7	obj/kernel.asm	/^c01037f7:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c01037fc	obj/kernel.asm	/^c01037fc:	8e d8                	mov    %eax,%ds$/;"	l
c01037fe	obj/kernel.asm	/^c01037fe:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0103803	obj/kernel.asm	/^c0103803:	8e d0                	mov    %eax,%ss$/;"	l
c0103805	obj/kernel.asm	/^c0103805:	ea 0c 38 10 c0 08 00 	ljmp   $0x8,$0xc010380c$/;"	l
c010380c	obj/kernel.asm	/^c010380c:	5d                   	pop    %ebp$/;"	l
c010380d	obj/kernel.asm	/^c010380d:	c3                   	ret    $/;"	l
c010380e	obj/kernel.asm	/^c010380e <load_esp0>:$/;"	l
c010380e	obj/kernel.asm	/^c010380e:	55                   	push   %ebp$/;"	l
c010380f	obj/kernel.asm	/^c010380f:	89 e5                	mov    %esp,%ebp$/;"	l
c0103811	obj/kernel.asm	/^c0103811:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103814	obj/kernel.asm	/^c0103814:	a3 04 24 1c c0       	mov    %eax,0xc01c2404$/;"	l
c0103819	obj/kernel.asm	/^c0103819:	5d                   	pop    %ebp$/;"	l
c010381a	obj/kernel.asm	/^c010381a:	c3                   	ret    $/;"	l
c010381b	obj/kernel.asm	/^c010381b <gdt_init>:$/;"	l
c010381b	obj/kernel.asm	/^c010381b:	55                   	push   %ebp$/;"	l
c010381c	obj/kernel.asm	/^c010381c:	89 e5                	mov    %esp,%ebp$/;"	l
c010381e	obj/kernel.asm	/^c010381e:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0103821	obj/kernel.asm	/^c0103821:	b8 00 00 13 c0       	mov    $0xc0130000,%eax$/;"	l
c0103826	obj/kernel.asm	/^c0103826:	50                   	push   %eax$/;"	l
c0103827	obj/kernel.asm	/^c0103827:	e8 e2 ff ff ff       	call   c010380e <load_esp0>$/;"	l
c010382c	obj/kernel.asm	/^c010382c:	83 c4 04             	add    $0x4,%esp$/;"	l
c010382f	obj/kernel.asm	/^c010382f:	66 c7 05 08 24 1c c0 	movw   $0x10,0xc01c2408$/;"	l
c0103836	obj/kernel.asm	/^c0103836:	10 00 $/;"	l
c0103838	obj/kernel.asm	/^c0103838:	66 c7 05 88 0a 13 c0 	movw   $0x68,0xc0130a88$/;"	l
c010383f	obj/kernel.asm	/^c010383f:	68 00 $/;"	l
c0103841	obj/kernel.asm	/^c0103841:	b8 00 24 1c c0       	mov    $0xc01c2400,%eax$/;"	l
c0103846	obj/kernel.asm	/^c0103846:	66 a3 8a 0a 13 c0    	mov    %ax,0xc0130a8a$/;"	l
c010384c	obj/kernel.asm	/^c010384c:	b8 00 24 1c c0       	mov    $0xc01c2400,%eax$/;"	l
c0103851	obj/kernel.asm	/^c0103851:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0103854	obj/kernel.asm	/^c0103854:	a2 8c 0a 13 c0       	mov    %al,0xc0130a8c$/;"	l
c0103859	obj/kernel.asm	/^c0103859:	0f b6 05 8d 0a 13 c0 	movzbl 0xc0130a8d,%eax$/;"	l
c0103860	obj/kernel.asm	/^c0103860:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c0103863	obj/kernel.asm	/^c0103863:	83 c8 09             	or     $0x9,%eax$/;"	l
c0103866	obj/kernel.asm	/^c0103866:	a2 8d 0a 13 c0       	mov    %al,0xc0130a8d$/;"	l
c010386b	obj/kernel.asm	/^c010386b:	0f b6 05 8d 0a 13 c0 	movzbl 0xc0130a8d,%eax$/;"	l
c0103872	obj/kernel.asm	/^c0103872:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c0103875	obj/kernel.asm	/^c0103875:	a2 8d 0a 13 c0       	mov    %al,0xc0130a8d$/;"	l
c010387a	obj/kernel.asm	/^c010387a:	0f b6 05 8d 0a 13 c0 	movzbl 0xc0130a8d,%eax$/;"	l
c0103881	obj/kernel.asm	/^c0103881:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
c0103884	obj/kernel.asm	/^c0103884:	a2 8d 0a 13 c0       	mov    %al,0xc0130a8d$/;"	l
c0103889	obj/kernel.asm	/^c0103889:	0f b6 05 8d 0a 13 c0 	movzbl 0xc0130a8d,%eax$/;"	l
c0103890	obj/kernel.asm	/^c0103890:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c0103893	obj/kernel.asm	/^c0103893:	a2 8d 0a 13 c0       	mov    %al,0xc0130a8d$/;"	l
c0103898	obj/kernel.asm	/^c0103898:	0f b6 05 8e 0a 13 c0 	movzbl 0xc0130a8e,%eax$/;"	l
c010389f	obj/kernel.asm	/^c010389f:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c01038a2	obj/kernel.asm	/^c01038a2:	a2 8e 0a 13 c0       	mov    %al,0xc0130a8e$/;"	l
c01038a7	obj/kernel.asm	/^c01038a7:	0f b6 05 8e 0a 13 c0 	movzbl 0xc0130a8e,%eax$/;"	l
c01038ae	obj/kernel.asm	/^c01038ae:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c01038b1	obj/kernel.asm	/^c01038b1:	a2 8e 0a 13 c0       	mov    %al,0xc0130a8e$/;"	l
c01038b6	obj/kernel.asm	/^c01038b6:	0f b6 05 8e 0a 13 c0 	movzbl 0xc0130a8e,%eax$/;"	l
c01038bd	obj/kernel.asm	/^c01038bd:	83 e0 df             	and    $0xffffffdf,%eax$/;"	l
c01038c0	obj/kernel.asm	/^c01038c0:	a2 8e 0a 13 c0       	mov    %al,0xc0130a8e$/;"	l
c01038c5	obj/kernel.asm	/^c01038c5:	0f b6 05 8e 0a 13 c0 	movzbl 0xc0130a8e,%eax$/;"	l
c01038cc	obj/kernel.asm	/^c01038cc:	83 c8 40             	or     $0x40,%eax$/;"	l
c01038cf	obj/kernel.asm	/^c01038cf:	a2 8e 0a 13 c0       	mov    %al,0xc0130a8e$/;"	l
c01038d4	obj/kernel.asm	/^c01038d4:	0f b6 05 8e 0a 13 c0 	movzbl 0xc0130a8e,%eax$/;"	l
c01038db	obj/kernel.asm	/^c01038db:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c01038de	obj/kernel.asm	/^c01038de:	a2 8e 0a 13 c0       	mov    %al,0xc0130a8e$/;"	l
c01038e3	obj/kernel.asm	/^c01038e3:	b8 00 24 1c c0       	mov    $0xc01c2400,%eax$/;"	l
c01038e8	obj/kernel.asm	/^c01038e8:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c01038eb	obj/kernel.asm	/^c01038eb:	a2 8f 0a 13 c0       	mov    %al,0xc0130a8f$/;"	l
c01038f0	obj/kernel.asm	/^c01038f0:	68 90 0a 13 c0       	push   $0xc0130a90$/;"	l
c01038f5	obj/kernel.asm	/^c01038f5:	e8 df fe ff ff       	call   c01037d9 <lgdt>$/;"	l
c01038fa	obj/kernel.asm	/^c01038fa:	83 c4 04             	add    $0x4,%esp$/;"	l
c01038fd	obj/kernel.asm	/^c01038fd:	66 c7 45 fe 28 00    	movw   $0x28,-0x2(%ebp)$/;"	l
c0103903	obj/kernel.asm	/^c0103903:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c0103907	obj/kernel.asm	/^c0103907:	0f 00 d8             	ltr    %ax$/;"	l
c010390a	obj/kernel.asm	/^c010390a:	c9                   	leave  $/;"	l
c010390b	obj/kernel.asm	/^c010390b:	c3                   	ret    $/;"	l
c010390c	obj/kernel.asm	/^c010390c <init_pmm_manager>:$/;"	l
c010390c	obj/kernel.asm	/^c010390c:	55                   	push   %ebp$/;"	l
c010390d	obj/kernel.asm	/^c010390d:	89 e5                	mov    %esp,%ebp$/;"	l
c010390f	obj/kernel.asm	/^c010390f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103912	obj/kernel.asm	/^c0103912:	c7 05 90 45 1c c0 64 	movl   $0xc010eb64,0xc01c4590$/;"	l
c0103919	obj/kernel.asm	/^c0103919:	eb 10 c0 $/;"	l
c010391c	obj/kernel.asm	/^c010391c:	a1 90 45 1c c0       	mov    0xc01c4590,%eax$/;"	l
c0103921	obj/kernel.asm	/^c0103921:	8b 00                	mov    (%eax),%eax$/;"	l
c0103923	obj/kernel.asm	/^c0103923:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103926	obj/kernel.asm	/^c0103926:	50                   	push   %eax$/;"	l
c0103927	obj/kernel.asm	/^c0103927:	68 90 d5 10 c0       	push   $0xc010d590$/;"	l
c010392c	obj/kernel.asm	/^c010392c:	e8 49 c9 ff ff       	call   c010027a <cprintf>$/;"	l
c0103931	obj/kernel.asm	/^c0103931:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103934	obj/kernel.asm	/^c0103934:	a1 90 45 1c c0       	mov    0xc01c4590,%eax$/;"	l
c0103939	obj/kernel.asm	/^c0103939:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010393c	obj/kernel.asm	/^c010393c:	ff d0                	call   *%eax$/;"	l
c010393e	obj/kernel.asm	/^c010393e:	c9                   	leave  $/;"	l
c010393f	obj/kernel.asm	/^c010393f:	c3                   	ret    $/;"	l
c0103940	obj/kernel.asm	/^c0103940 <init_memmap>:$/;"	l
c0103940	obj/kernel.asm	/^c0103940:	55                   	push   %ebp$/;"	l
c0103941	obj/kernel.asm	/^c0103941:	89 e5                	mov    %esp,%ebp$/;"	l
c0103943	obj/kernel.asm	/^c0103943:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103946	obj/kernel.asm	/^c0103946:	a1 90 45 1c c0       	mov    0xc01c4590,%eax$/;"	l
c010394b	obj/kernel.asm	/^c010394b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010394e	obj/kernel.asm	/^c010394e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103951	obj/kernel.asm	/^c0103951:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0103954	obj/kernel.asm	/^c0103954:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0103957	obj/kernel.asm	/^c0103957:	ff d0                	call   *%eax$/;"	l
c0103959	obj/kernel.asm	/^c0103959:	83 c4 10             	add    $0x10,%esp$/;"	l
c010395c	obj/kernel.asm	/^c010395c:	c9                   	leave  $/;"	l
c010395d	obj/kernel.asm	/^c010395d:	c3                   	ret    $/;"	l
c010395e	obj/kernel.asm	/^c010395e <alloc_pages>:$/;"	l
c010395e	obj/kernel.asm	/^c010395e:	55                   	push   %ebp$/;"	l
c010395f	obj/kernel.asm	/^c010395f:	89 e5                	mov    %esp,%ebp$/;"	l
c0103961	obj/kernel.asm	/^c0103961:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103964	obj/kernel.asm	/^c0103964:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010396b	obj/kernel.asm	/^c010396b:	e8 2c fe ff ff       	call   c010379c <__intr_save>$/;"	l
c0103970	obj/kernel.asm	/^c0103970:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103973	obj/kernel.asm	/^c0103973:	a1 90 45 1c c0       	mov    0xc01c4590,%eax$/;"	l
c0103978	obj/kernel.asm	/^c0103978:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010397b	obj/kernel.asm	/^c010397b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010397e	obj/kernel.asm	/^c010397e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0103981	obj/kernel.asm	/^c0103981:	ff d0                	call   *%eax$/;"	l
c0103983	obj/kernel.asm	/^c0103983:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103986	obj/kernel.asm	/^c0103986:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103989	obj/kernel.asm	/^c0103989:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010398c	obj/kernel.asm	/^c010398c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010398f	obj/kernel.asm	/^c010398f:	e8 32 fe ff ff       	call   c01037c6 <__intr_restore>$/;"	l
c0103994	obj/kernel.asm	/^c0103994:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103997	obj/kernel.asm	/^c0103997:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010399b	obj/kernel.asm	/^c010399b:	75 28                	jne    c01039c5 <alloc_pages+0x67>$/;"	l
c010399d	obj/kernel.asm	/^c010399d:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
c01039a1	obj/kernel.asm	/^c01039a1:	77 22                	ja     c01039c5 <alloc_pages+0x67>$/;"	l
c01039a3	obj/kernel.asm	/^c01039a3:	a1 70 24 1c c0       	mov    0xc01c2470,%eax$/;"	l
c01039a8	obj/kernel.asm	/^c01039a8:	85 c0                	test   %eax,%eax$/;"	l
c01039aa	obj/kernel.asm	/^c01039aa:	74 19                	je     c01039c5 <alloc_pages+0x67>$/;"	l
c01039ac	obj/kernel.asm	/^c01039ac:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01039af	obj/kernel.asm	/^c01039af:	a1 9c 45 1c c0       	mov    0xc01c459c,%eax$/;"	l
c01039b4	obj/kernel.asm	/^c01039b4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01039b7	obj/kernel.asm	/^c01039b7:	6a 00                	push   $0x0$/;"	l
c01039b9	obj/kernel.asm	/^c01039b9:	52                   	push   %edx$/;"	l
c01039ba	obj/kernel.asm	/^c01039ba:	50                   	push   %eax$/;"	l
c01039bb	obj/kernel.asm	/^c01039bb:	e8 dd 2a 00 00       	call   c010649d <swap_out>$/;"	l
c01039c0	obj/kernel.asm	/^c01039c0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01039c3	obj/kernel.asm	/^c01039c3:	eb a6                	jmp    c010396b <alloc_pages+0xd>$/;"	l
c01039c5	obj/kernel.asm	/^c01039c5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01039c8	obj/kernel.asm	/^c01039c8:	c9                   	leave  $/;"	l
c01039c9	obj/kernel.asm	/^c01039c9:	c3                   	ret    $/;"	l
c01039ca	obj/kernel.asm	/^c01039ca <free_pages>:$/;"	l
c01039ca	obj/kernel.asm	/^c01039ca:	55                   	push   %ebp$/;"	l
c01039cb	obj/kernel.asm	/^c01039cb:	89 e5                	mov    %esp,%ebp$/;"	l
c01039cd	obj/kernel.asm	/^c01039cd:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01039d0	obj/kernel.asm	/^c01039d0:	e8 c7 fd ff ff       	call   c010379c <__intr_save>$/;"	l
c01039d5	obj/kernel.asm	/^c01039d5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01039d8	obj/kernel.asm	/^c01039d8:	a1 90 45 1c c0       	mov    0xc01c4590,%eax$/;"	l
c01039dd	obj/kernel.asm	/^c01039dd:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01039e0	obj/kernel.asm	/^c01039e0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01039e3	obj/kernel.asm	/^c01039e3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01039e6	obj/kernel.asm	/^c01039e6:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01039e9	obj/kernel.asm	/^c01039e9:	ff d0                	call   *%eax$/;"	l
c01039eb	obj/kernel.asm	/^c01039eb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01039ee	obj/kernel.asm	/^c01039ee:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01039f1	obj/kernel.asm	/^c01039f1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01039f4	obj/kernel.asm	/^c01039f4:	e8 cd fd ff ff       	call   c01037c6 <__intr_restore>$/;"	l
c01039f9	obj/kernel.asm	/^c01039f9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01039fc	obj/kernel.asm	/^c01039fc:	c9                   	leave  $/;"	l
c01039fd	obj/kernel.asm	/^c01039fd:	c3                   	ret    $/;"	l
c01039fe	obj/kernel.asm	/^c01039fe <nr_free_pages>:$/;"	l
c01039fe	obj/kernel.asm	/^c01039fe:	55                   	push   %ebp$/;"	l
c01039ff	obj/kernel.asm	/^c01039ff:	89 e5                	mov    %esp,%ebp$/;"	l
c0103a01	obj/kernel.asm	/^c0103a01:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103a04	obj/kernel.asm	/^c0103a04:	e8 93 fd ff ff       	call   c010379c <__intr_save>$/;"	l
c0103a09	obj/kernel.asm	/^c0103a09:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103a0c	obj/kernel.asm	/^c0103a0c:	a1 90 45 1c c0       	mov    0xc01c4590,%eax$/;"	l
c0103a11	obj/kernel.asm	/^c0103a11:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0103a14	obj/kernel.asm	/^c0103a14:	ff d0                	call   *%eax$/;"	l
c0103a16	obj/kernel.asm	/^c0103a16:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103a19	obj/kernel.asm	/^c0103a19:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103a1c	obj/kernel.asm	/^c0103a1c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0103a1f	obj/kernel.asm	/^c0103a1f:	e8 a2 fd ff ff       	call   c01037c6 <__intr_restore>$/;"	l
c0103a24	obj/kernel.asm	/^c0103a24:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103a27	obj/kernel.asm	/^c0103a27:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103a2a	obj/kernel.asm	/^c0103a2a:	c9                   	leave  $/;"	l
c0103a2b	obj/kernel.asm	/^c0103a2b:	c3                   	ret    $/;"	l
c0103a2c	obj/kernel.asm	/^c0103a2c <page_init>:$/;"	l
c0103a2c	obj/kernel.asm	/^c0103a2c:	55                   	push   %ebp$/;"	l
c0103a2d	obj/kernel.asm	/^c0103a2d:	89 e5                	mov    %esp,%ebp$/;"	l
c0103a2f	obj/kernel.asm	/^c0103a2f:	57                   	push   %edi$/;"	l
c0103a30	obj/kernel.asm	/^c0103a30:	56                   	push   %esi$/;"	l
c0103a31	obj/kernel.asm	/^c0103a31:	53                   	push   %ebx$/;"	l
c0103a32	obj/kernel.asm	/^c0103a32:	83 ec 7c             	sub    $0x7c,%esp$/;"	l
c0103a35	obj/kernel.asm	/^c0103a35:	c7 45 c4 00 80 00 c0 	movl   $0xc0008000,-0x3c(%ebp)$/;"	l
c0103a3c	obj/kernel.asm	/^c0103a3c:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
c0103a43	obj/kernel.asm	/^c0103a43:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0103a4a	obj/kernel.asm	/^c0103a4a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103a4d	obj/kernel.asm	/^c0103a4d:	68 a7 d5 10 c0       	push   $0xc010d5a7$/;"	l
c0103a52	obj/kernel.asm	/^c0103a52:	e8 23 c8 ff ff       	call   c010027a <cprintf>$/;"	l
c0103a57	obj/kernel.asm	/^c0103a57:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103a5a	obj/kernel.asm	/^c0103a5a:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0103a61	obj/kernel.asm	/^c0103a61:	e9 fe 00 00 00       	jmp    c0103b64 <page_init+0x138>$/;"	l
c0103a66	obj/kernel.asm	/^c0103a66:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103a69	obj/kernel.asm	/^c0103a69:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103a6c	obj/kernel.asm	/^c0103a6c:	89 d0                	mov    %edx,%eax$/;"	l
c0103a6e	obj/kernel.asm	/^c0103a6e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a71	obj/kernel.asm	/^c0103a71:	01 d0                	add    %edx,%eax$/;"	l
c0103a73	obj/kernel.asm	/^c0103a73:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a76	obj/kernel.asm	/^c0103a76:	01 c8                	add    %ecx,%eax$/;"	l
c0103a78	obj/kernel.asm	/^c0103a78:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0103a7b	obj/kernel.asm	/^c0103a7b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103a7e	obj/kernel.asm	/^c0103a7e:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0103a81	obj/kernel.asm	/^c0103a81:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
c0103a84	obj/kernel.asm	/^c0103a84:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103a87	obj/kernel.asm	/^c0103a87:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103a8a	obj/kernel.asm	/^c0103a8a:	89 d0                	mov    %edx,%eax$/;"	l
c0103a8c	obj/kernel.asm	/^c0103a8c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a8f	obj/kernel.asm	/^c0103a8f:	01 d0                	add    %edx,%eax$/;"	l
c0103a91	obj/kernel.asm	/^c0103a91:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a94	obj/kernel.asm	/^c0103a94:	01 c8                	add    %ecx,%eax$/;"	l
c0103a96	obj/kernel.asm	/^c0103a96:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0103a99	obj/kernel.asm	/^c0103a99:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c0103a9c	obj/kernel.asm	/^c0103a9c:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0103a9f	obj/kernel.asm	/^c0103a9f:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c0103aa2	obj/kernel.asm	/^c0103aa2:	01 c8                	add    %ecx,%eax$/;"	l
c0103aa4	obj/kernel.asm	/^c0103aa4:	11 da                	adc    %ebx,%edx$/;"	l
c0103aa6	obj/kernel.asm	/^c0103aa6:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0103aa9	obj/kernel.asm	/^c0103aa9:	89 55 b4             	mov    %edx,-0x4c(%ebp)$/;"	l
c0103aac	obj/kernel.asm	/^c0103aac:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103aaf	obj/kernel.asm	/^c0103aaf:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103ab2	obj/kernel.asm	/^c0103ab2:	89 d0                	mov    %edx,%eax$/;"	l
c0103ab4	obj/kernel.asm	/^c0103ab4:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103ab7	obj/kernel.asm	/^c0103ab7:	01 d0                	add    %edx,%eax$/;"	l
c0103ab9	obj/kernel.asm	/^c0103ab9:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103abc	obj/kernel.asm	/^c0103abc:	01 c8                	add    %ecx,%eax$/;"	l
c0103abe	obj/kernel.asm	/^c0103abe:	83 c0 10             	add    $0x10,%eax$/;"	l
c0103ac1	obj/kernel.asm	/^c0103ac1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103ac4	obj/kernel.asm	/^c0103ac4:	89 45 84             	mov    %eax,-0x7c(%ebp)$/;"	l
c0103ac7	obj/kernel.asm	/^c0103ac7:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0103aca	obj/kernel.asm	/^c0103aca:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0103acd	obj/kernel.asm	/^c0103acd:	83 c0 ff             	add    $0xffffffff,%eax$/;"	l
c0103ad0	obj/kernel.asm	/^c0103ad0:	83 d2 ff             	adc    $0xffffffff,%edx$/;"	l
c0103ad3	obj/kernel.asm	/^c0103ad3:	89 c1                	mov    %eax,%ecx$/;"	l
c0103ad5	obj/kernel.asm	/^c0103ad5:	89 d3                	mov    %edx,%ebx$/;"	l
c0103ad7	obj/kernel.asm	/^c0103ad7:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0103ada	obj/kernel.asm	/^c0103ada:	89 55 80             	mov    %edx,-0x80(%ebp)$/;"	l
c0103add	obj/kernel.asm	/^c0103add:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103ae0	obj/kernel.asm	/^c0103ae0:	89 d0                	mov    %edx,%eax$/;"	l
c0103ae2	obj/kernel.asm	/^c0103ae2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103ae5	obj/kernel.asm	/^c0103ae5:	01 d0                	add    %edx,%eax$/;"	l
c0103ae7	obj/kernel.asm	/^c0103ae7:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103aea	obj/kernel.asm	/^c0103aea:	03 45 80             	add    -0x80(%ebp),%eax$/;"	l
c0103aed	obj/kernel.asm	/^c0103aed:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c0103af0	obj/kernel.asm	/^c0103af0:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0103af3	obj/kernel.asm	/^c0103af3:	ff 75 84             	pushl  -0x7c(%ebp)$/;"	l
c0103af6	obj/kernel.asm	/^c0103af6:	53                   	push   %ebx$/;"	l
c0103af7	obj/kernel.asm	/^c0103af7:	51                   	push   %ecx$/;"	l
c0103af8	obj/kernel.asm	/^c0103af8:	ff 75 bc             	pushl  -0x44(%ebp)$/;"	l
c0103afb	obj/kernel.asm	/^c0103afb:	ff 75 b8             	pushl  -0x48(%ebp)$/;"	l
c0103afe	obj/kernel.asm	/^c0103afe:	52                   	push   %edx$/;"	l
c0103aff	obj/kernel.asm	/^c0103aff:	50                   	push   %eax$/;"	l
c0103b00	obj/kernel.asm	/^c0103b00:	68 b4 d5 10 c0       	push   $0xc010d5b4$/;"	l
c0103b05	obj/kernel.asm	/^c0103b05:	e8 70 c7 ff ff       	call   c010027a <cprintf>$/;"	l
c0103b0a	obj/kernel.asm	/^c0103b0a:	83 c4 20             	add    $0x20,%esp$/;"	l
c0103b0d	obj/kernel.asm	/^c0103b0d:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103b10	obj/kernel.asm	/^c0103b10:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103b13	obj/kernel.asm	/^c0103b13:	89 d0                	mov    %edx,%eax$/;"	l
c0103b15	obj/kernel.asm	/^c0103b15:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103b18	obj/kernel.asm	/^c0103b18:	01 d0                	add    %edx,%eax$/;"	l
c0103b1a	obj/kernel.asm	/^c0103b1a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103b1d	obj/kernel.asm	/^c0103b1d:	01 c8                	add    %ecx,%eax$/;"	l
c0103b1f	obj/kernel.asm	/^c0103b1f:	83 c0 10             	add    $0x10,%eax$/;"	l
c0103b22	obj/kernel.asm	/^c0103b22:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103b25	obj/kernel.asm	/^c0103b25:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0103b28	obj/kernel.asm	/^c0103b28:	75 36                	jne    c0103b60 <page_init+0x134>$/;"	l
c0103b2a	obj/kernel.asm	/^c0103b2a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103b2d	obj/kernel.asm	/^c0103b2d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0103b30	obj/kernel.asm	/^c0103b30:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c0103b33	obj/kernel.asm	/^c0103b33:	77 2b                	ja     c0103b60 <page_init+0x134>$/;"	l
c0103b35	obj/kernel.asm	/^c0103b35:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c0103b38	obj/kernel.asm	/^c0103b38:	72 05                	jb     c0103b3f <page_init+0x113>$/;"	l
c0103b3a	obj/kernel.asm	/^c0103b3a:	3b 45 b0             	cmp    -0x50(%ebp),%eax$/;"	l
c0103b3d	obj/kernel.asm	/^c0103b3d:	73 21                	jae    c0103b60 <page_init+0x134>$/;"	l
c0103b3f	obj/kernel.asm	/^c0103b3f:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0103b43	obj/kernel.asm	/^c0103b43:	77 1b                	ja     c0103b60 <page_init+0x134>$/;"	l
c0103b45	obj/kernel.asm	/^c0103b45:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0103b49	obj/kernel.asm	/^c0103b49:	72 09                	jb     c0103b54 <page_init+0x128>$/;"	l
c0103b4b	obj/kernel.asm	/^c0103b4b:	81 7d b8 ff ff ff 37 	cmpl   $0x37ffffff,-0x48(%ebp)$/;"	l
c0103b52	obj/kernel.asm	/^c0103b52:	77 0c                	ja     c0103b60 <page_init+0x134>$/;"	l
c0103b54	obj/kernel.asm	/^c0103b54:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0103b57	obj/kernel.asm	/^c0103b57:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0103b5a	obj/kernel.asm	/^c0103b5a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0103b5d	obj/kernel.asm	/^c0103b5d:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0103b60	obj/kernel.asm	/^c0103b60:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0103b64	obj/kernel.asm	/^c0103b64:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0103b67	obj/kernel.asm	/^c0103b67:	8b 00                	mov    (%eax),%eax$/;"	l
c0103b69	obj/kernel.asm	/^c0103b69:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c0103b6c	obj/kernel.asm	/^c0103b6c:	0f 8f f4 fe ff ff    	jg     c0103a66 <page_init+0x3a>$/;"	l
c0103b72	obj/kernel.asm	/^c0103b72:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0103b76	obj/kernel.asm	/^c0103b76:	72 1d                	jb     c0103b95 <page_init+0x169>$/;"	l
c0103b78	obj/kernel.asm	/^c0103b78:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0103b7c	obj/kernel.asm	/^c0103b7c:	77 09                	ja     c0103b87 <page_init+0x15b>$/;"	l
c0103b7e	obj/kernel.asm	/^c0103b7e:	81 7d e0 00 00 00 38 	cmpl   $0x38000000,-0x20(%ebp)$/;"	l
c0103b85	obj/kernel.asm	/^c0103b85:	76 0e                	jbe    c0103b95 <page_init+0x169>$/;"	l
c0103b87	obj/kernel.asm	/^c0103b87:	c7 45 e0 00 00 00 38 	movl   $0x38000000,-0x20(%ebp)$/;"	l
c0103b8e	obj/kernel.asm	/^c0103b8e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0103b95	obj/kernel.asm	/^c0103b95:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103b98	obj/kernel.asm	/^c0103b98:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0103b9b	obj/kernel.asm	/^c0103b9b:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c0103b9f	obj/kernel.asm	/^c0103b9f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0103ba2	obj/kernel.asm	/^c0103ba2:	a3 c0 23 1c c0       	mov    %eax,0xc01c23c0$/;"	l
c0103ba7	obj/kernel.asm	/^c0103ba7:	c7 45 ac 00 10 00 00 	movl   $0x1000,-0x54(%ebp)$/;"	l
c0103bae	obj/kernel.asm	/^c0103bae:	b8 64 47 1c c0       	mov    $0xc01c4764,%eax$/;"	l
c0103bb3	obj/kernel.asm	/^c0103bb3:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0103bb6	obj/kernel.asm	/^c0103bb6:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c0103bb9	obj/kernel.asm	/^c0103bb9:	01 d0                	add    %edx,%eax$/;"	l
c0103bbb	obj/kernel.asm	/^c0103bbb:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c0103bbe	obj/kernel.asm	/^c0103bbe:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0103bc1	obj/kernel.asm	/^c0103bc1:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103bc6	obj/kernel.asm	/^c0103bc6:	f7 75 ac             	divl   -0x54(%ebp)$/;"	l
c0103bc9	obj/kernel.asm	/^c0103bc9:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0103bcc	obj/kernel.asm	/^c0103bcc:	29 d0                	sub    %edx,%eax$/;"	l
c0103bce	obj/kernel.asm	/^c0103bce:	a3 98 45 1c c0       	mov    %eax,0xc01c4598$/;"	l
c0103bd3	obj/kernel.asm	/^c0103bd3:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0103bda	obj/kernel.asm	/^c0103bda:	eb 27                	jmp    c0103c03 <page_init+0x1d7>$/;"	l
c0103bdc	obj/kernel.asm	/^c0103bdc:	a1 98 45 1c c0       	mov    0xc01c4598,%eax$/;"	l
c0103be1	obj/kernel.asm	/^c0103be1:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103be4	obj/kernel.asm	/^c0103be4:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0103be7	obj/kernel.asm	/^c0103be7:	01 d0                	add    %edx,%eax$/;"	l
c0103be9	obj/kernel.asm	/^c0103be9:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103bec	obj/kernel.asm	/^c0103bec:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)$/;"	l
c0103bf3	obj/kernel.asm	/^c0103bf3:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c0103bf6	obj/kernel.asm	/^c0103bf6:	8b 45 8c             	mov    -0x74(%ebp),%eax$/;"	l
c0103bf9	obj/kernel.asm	/^c0103bf9:	8b 55 90             	mov    -0x70(%ebp),%edx$/;"	l
c0103bfc	obj/kernel.asm	/^c0103bfc:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0103bff	obj/kernel.asm	/^c0103bff:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0103c03	obj/kernel.asm	/^c0103c03:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103c06	obj/kernel.asm	/^c0103c06:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c0103c0b	obj/kernel.asm	/^c0103c0b:	39 c2                	cmp    %eax,%edx$/;"	l
c0103c0d	obj/kernel.asm	/^c0103c0d:	72 cd                	jb     c0103bdc <page_init+0x1b0>$/;"	l
c0103c0f	obj/kernel.asm	/^c0103c0f:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c0103c14	obj/kernel.asm	/^c0103c14:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0103c17	obj/kernel.asm	/^c0103c17:	89 c2                	mov    %eax,%edx$/;"	l
c0103c19	obj/kernel.asm	/^c0103c19:	a1 98 45 1c c0       	mov    0xc01c4598,%eax$/;"	l
c0103c1e	obj/kernel.asm	/^c0103c1e:	01 d0                	add    %edx,%eax$/;"	l
c0103c20	obj/kernel.asm	/^c0103c20:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c0103c23	obj/kernel.asm	/^c0103c23:	81 7d a4 ff ff ff bf 	cmpl   $0xbfffffff,-0x5c(%ebp)$/;"	l
c0103c2a	obj/kernel.asm	/^c0103c2a:	77 17                	ja     c0103c43 <page_init+0x217>$/;"	l
c0103c2c	obj/kernel.asm	/^c0103c2c:	ff 75 a4             	pushl  -0x5c(%ebp)$/;"	l
c0103c2f	obj/kernel.asm	/^c0103c2f:	68 e4 d5 10 c0       	push   $0xc010d5e4$/;"	l
c0103c34	obj/kernel.asm	/^c0103c34:	68 e9 00 00 00       	push   $0xe9$/;"	l
c0103c39	obj/kernel.asm	/^c0103c39:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0103c3e	obj/kernel.asm	/^c0103c3e:	e8 9c c7 ff ff       	call   c01003df <__panic>$/;"	l
c0103c43	obj/kernel.asm	/^c0103c43:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0103c46	obj/kernel.asm	/^c0103c46:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0103c4b	obj/kernel.asm	/^c0103c4b:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c0103c4e	obj/kernel.asm	/^c0103c4e:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0103c55	obj/kernel.asm	/^c0103c55:	e9 6a 01 00 00       	jmp    c0103dc4 <page_init+0x398>$/;"	l
c0103c5a	obj/kernel.asm	/^c0103c5a:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103c5d	obj/kernel.asm	/^c0103c5d:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103c60	obj/kernel.asm	/^c0103c60:	89 d0                	mov    %edx,%eax$/;"	l
c0103c62	obj/kernel.asm	/^c0103c62:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103c65	obj/kernel.asm	/^c0103c65:	01 d0                	add    %edx,%eax$/;"	l
c0103c67	obj/kernel.asm	/^c0103c67:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103c6a	obj/kernel.asm	/^c0103c6a:	01 c8                	add    %ecx,%eax$/;"	l
c0103c6c	obj/kernel.asm	/^c0103c6c:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0103c6f	obj/kernel.asm	/^c0103c6f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103c72	obj/kernel.asm	/^c0103c72:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103c75	obj/kernel.asm	/^c0103c75:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0103c78	obj/kernel.asm	/^c0103c78:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103c7b	obj/kernel.asm	/^c0103c7b:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103c7e	obj/kernel.asm	/^c0103c7e:	89 d0                	mov    %edx,%eax$/;"	l
c0103c80	obj/kernel.asm	/^c0103c80:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103c83	obj/kernel.asm	/^c0103c83:	01 d0                	add    %edx,%eax$/;"	l
c0103c85	obj/kernel.asm	/^c0103c85:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103c88	obj/kernel.asm	/^c0103c88:	01 c8                	add    %ecx,%eax$/;"	l
c0103c8a	obj/kernel.asm	/^c0103c8a:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0103c8d	obj/kernel.asm	/^c0103c8d:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c0103c90	obj/kernel.asm	/^c0103c90:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103c93	obj/kernel.asm	/^c0103c93:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103c96	obj/kernel.asm	/^c0103c96:	01 c8                	add    %ecx,%eax$/;"	l
c0103c98	obj/kernel.asm	/^c0103c98:	11 da                	adc    %ebx,%edx$/;"	l
c0103c9a	obj/kernel.asm	/^c0103c9a:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0103c9d	obj/kernel.asm	/^c0103c9d:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c0103ca0	obj/kernel.asm	/^c0103ca0:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103ca3	obj/kernel.asm	/^c0103ca3:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103ca6	obj/kernel.asm	/^c0103ca6:	89 d0                	mov    %edx,%eax$/;"	l
c0103ca8	obj/kernel.asm	/^c0103ca8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103cab	obj/kernel.asm	/^c0103cab:	01 d0                	add    %edx,%eax$/;"	l
c0103cad	obj/kernel.asm	/^c0103cad:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103cb0	obj/kernel.asm	/^c0103cb0:	01 c8                	add    %ecx,%eax$/;"	l
c0103cb2	obj/kernel.asm	/^c0103cb2:	83 c0 10             	add    $0x10,%eax$/;"	l
c0103cb5	obj/kernel.asm	/^c0103cb5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103cb8	obj/kernel.asm	/^c0103cb8:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0103cbb	obj/kernel.asm	/^c0103cbb:	0f 85 ff 00 00 00    	jne    c0103dc0 <page_init+0x394>$/;"	l
c0103cc1	obj/kernel.asm	/^c0103cc1:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0103cc4	obj/kernel.asm	/^c0103cc4:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103cc9	obj/kernel.asm	/^c0103cc9:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0103ccc	obj/kernel.asm	/^c0103ccc:	72 17                	jb     c0103ce5 <page_init+0x2b9>$/;"	l
c0103cce	obj/kernel.asm	/^c0103cce:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0103cd1	obj/kernel.asm	/^c0103cd1:	77 05                	ja     c0103cd8 <page_init+0x2ac>$/;"	l
c0103cd3	obj/kernel.asm	/^c0103cd3:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c0103cd6	obj/kernel.asm	/^c0103cd6:	76 0d                	jbe    c0103ce5 <page_init+0x2b9>$/;"	l
c0103cd8	obj/kernel.asm	/^c0103cd8:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0103cdb	obj/kernel.asm	/^c0103cdb:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103cde	obj/kernel.asm	/^c0103cde:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c0103ce5	obj/kernel.asm	/^c0103ce5:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0103ce9	obj/kernel.asm	/^c0103ce9:	72 1d                	jb     c0103d08 <page_init+0x2dc>$/;"	l
c0103ceb	obj/kernel.asm	/^c0103ceb:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0103cef	obj/kernel.asm	/^c0103cef:	77 09                	ja     c0103cfa <page_init+0x2ce>$/;"	l
c0103cf1	obj/kernel.asm	/^c0103cf1:	81 7d c8 00 00 00 38 	cmpl   $0x38000000,-0x38(%ebp)$/;"	l
c0103cf8	obj/kernel.asm	/^c0103cf8:	76 0e                	jbe    c0103d08 <page_init+0x2dc>$/;"	l
c0103cfa	obj/kernel.asm	/^c0103cfa:	c7 45 c8 00 00 00 38 	movl   $0x38000000,-0x38(%ebp)$/;"	l
c0103d01	obj/kernel.asm	/^c0103d01:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
c0103d08	obj/kernel.asm	/^c0103d08:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103d0b	obj/kernel.asm	/^c0103d0b:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103d0e	obj/kernel.asm	/^c0103d0e:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103d11	obj/kernel.asm	/^c0103d11:	0f 87 a9 00 00 00    	ja     c0103dc0 <page_init+0x394>$/;"	l
c0103d17	obj/kernel.asm	/^c0103d17:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103d1a	obj/kernel.asm	/^c0103d1a:	72 09                	jb     c0103d25 <page_init+0x2f9>$/;"	l
c0103d1c	obj/kernel.asm	/^c0103d1c:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0103d1f	obj/kernel.asm	/^c0103d1f:	0f 83 9b 00 00 00    	jae    c0103dc0 <page_init+0x394>$/;"	l
c0103d25	obj/kernel.asm	/^c0103d25:	c7 45 9c 00 10 00 00 	movl   $0x1000,-0x64(%ebp)$/;"	l
c0103d2c	obj/kernel.asm	/^c0103d2c:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0103d2f	obj/kernel.asm	/^c0103d2f:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c0103d32	obj/kernel.asm	/^c0103d32:	01 d0                	add    %edx,%eax$/;"	l
c0103d34	obj/kernel.asm	/^c0103d34:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0103d37	obj/kernel.asm	/^c0103d37:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0103d3a	obj/kernel.asm	/^c0103d3a:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0103d3d	obj/kernel.asm	/^c0103d3d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103d42	obj/kernel.asm	/^c0103d42:	f7 75 9c             	divl   -0x64(%ebp)$/;"	l
c0103d45	obj/kernel.asm	/^c0103d45:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0103d48	obj/kernel.asm	/^c0103d48:	29 d0                	sub    %edx,%eax$/;"	l
c0103d4a	obj/kernel.asm	/^c0103d4a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103d4f	obj/kernel.asm	/^c0103d4f:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103d52	obj/kernel.asm	/^c0103d52:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0103d55	obj/kernel.asm	/^c0103d55:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0103d58	obj/kernel.asm	/^c0103d58:	89 45 94             	mov    %eax,-0x6c(%ebp)$/;"	l
c0103d5b	obj/kernel.asm	/^c0103d5b:	8b 45 94             	mov    -0x6c(%ebp),%eax$/;"	l
c0103d5e	obj/kernel.asm	/^c0103d5e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103d63	obj/kernel.asm	/^c0103d63:	89 c3                	mov    %eax,%ebx$/;"	l
c0103d65	obj/kernel.asm	/^c0103d65:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
c0103d6b	obj/kernel.asm	/^c0103d6b:	89 de                	mov    %ebx,%esi$/;"	l
c0103d6d	obj/kernel.asm	/^c0103d6d:	89 d0                	mov    %edx,%eax$/;"	l
c0103d6f	obj/kernel.asm	/^c0103d6f:	83 e0 00             	and    $0x0,%eax$/;"	l
c0103d72	obj/kernel.asm	/^c0103d72:	89 c7                	mov    %eax,%edi$/;"	l
c0103d74	obj/kernel.asm	/^c0103d74:	89 75 c8             	mov    %esi,-0x38(%ebp)$/;"	l
c0103d77	obj/kernel.asm	/^c0103d77:	89 7d cc             	mov    %edi,-0x34(%ebp)$/;"	l
c0103d7a	obj/kernel.asm	/^c0103d7a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103d7d	obj/kernel.asm	/^c0103d7d:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103d80	obj/kernel.asm	/^c0103d80:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103d83	obj/kernel.asm	/^c0103d83:	77 3b                	ja     c0103dc0 <page_init+0x394>$/;"	l
c0103d85	obj/kernel.asm	/^c0103d85:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103d88	obj/kernel.asm	/^c0103d88:	72 05                	jb     c0103d8f <page_init+0x363>$/;"	l
c0103d8a	obj/kernel.asm	/^c0103d8a:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0103d8d	obj/kernel.asm	/^c0103d8d:	73 31                	jae    c0103dc0 <page_init+0x394>$/;"	l
c0103d8f	obj/kernel.asm	/^c0103d8f:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0103d92	obj/kernel.asm	/^c0103d92:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0103d95	obj/kernel.asm	/^c0103d95:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
c0103d98	obj/kernel.asm	/^c0103d98:	1b 55 d4             	sbb    -0x2c(%ebp),%edx$/;"	l
c0103d9b	obj/kernel.asm	/^c0103d9b:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c0103d9f	obj/kernel.asm	/^c0103d9f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0103da2	obj/kernel.asm	/^c0103da2:	89 c3                	mov    %eax,%ebx$/;"	l
c0103da4	obj/kernel.asm	/^c0103da4:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103da7	obj/kernel.asm	/^c0103da7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103daa	obj/kernel.asm	/^c0103daa:	50                   	push   %eax$/;"	l
c0103dab	obj/kernel.asm	/^c0103dab:	e8 cf f8 ff ff       	call   c010367f <pa2page>$/;"	l
c0103db0	obj/kernel.asm	/^c0103db0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103db3	obj/kernel.asm	/^c0103db3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103db6	obj/kernel.asm	/^c0103db6:	53                   	push   %ebx$/;"	l
c0103db7	obj/kernel.asm	/^c0103db7:	50                   	push   %eax$/;"	l
c0103db8	obj/kernel.asm	/^c0103db8:	e8 83 fb ff ff       	call   c0103940 <init_memmap>$/;"	l
c0103dbd	obj/kernel.asm	/^c0103dbd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103dc0	obj/kernel.asm	/^c0103dc0:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0103dc4	obj/kernel.asm	/^c0103dc4:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0103dc7	obj/kernel.asm	/^c0103dc7:	8b 00                	mov    (%eax),%eax$/;"	l
c0103dc9	obj/kernel.asm	/^c0103dc9:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c0103dcc	obj/kernel.asm	/^c0103dcc:	0f 8f 88 fe ff ff    	jg     c0103c5a <page_init+0x22e>$/;"	l
c0103dd2	obj/kernel.asm	/^c0103dd2:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
c0103dd5	obj/kernel.asm	/^c0103dd5:	5b                   	pop    %ebx$/;"	l
c0103dd6	obj/kernel.asm	/^c0103dd6:	5e                   	pop    %esi$/;"	l
c0103dd7	obj/kernel.asm	/^c0103dd7:	5f                   	pop    %edi$/;"	l
c0103dd8	obj/kernel.asm	/^c0103dd8:	5d                   	pop    %ebp$/;"	l
c0103dd9	obj/kernel.asm	/^c0103dd9:	c3                   	ret    $/;"	l
c0103dda	obj/kernel.asm	/^c0103dda <enable_paging>:$/;"	l
c0103dda	obj/kernel.asm	/^c0103dda:	55                   	push   %ebp$/;"	l
c0103ddb	obj/kernel.asm	/^c0103ddb:	89 e5                	mov    %esp,%ebp$/;"	l
c0103ddd	obj/kernel.asm	/^c0103ddd:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0103de0	obj/kernel.asm	/^c0103de0:	a1 94 45 1c c0       	mov    0xc01c4594,%eax$/;"	l
c0103de5	obj/kernel.asm	/^c0103de5:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0103de8	obj/kernel.asm	/^c0103de8:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0103deb	obj/kernel.asm	/^c0103deb:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0103dee	obj/kernel.asm	/^c0103dee:	0f 20 c0             	mov    %cr0,%eax$/;"	l
c0103df1	obj/kernel.asm	/^c0103df1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103df4	obj/kernel.asm	/^c0103df4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103df7	obj/kernel.asm	/^c0103df7:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0103dfa	obj/kernel.asm	/^c0103dfa:	81 4d fc 2f 00 05 80 	orl    $0x8005002f,-0x4(%ebp)$/;"	l
c0103e01	obj/kernel.asm	/^c0103e01:	83 65 fc f3          	andl   $0xfffffff3,-0x4(%ebp)$/;"	l
c0103e05	obj/kernel.asm	/^c0103e05:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0103e08	obj/kernel.asm	/^c0103e08:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103e0b	obj/kernel.asm	/^c0103e0b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103e0e	obj/kernel.asm	/^c0103e0e:	0f 22 c0             	mov    %eax,%cr0$/;"	l
c0103e11	obj/kernel.asm	/^c0103e11:	c9                   	leave  $/;"	l
c0103e12	obj/kernel.asm	/^c0103e12:	c3                   	ret    $/;"	l
c0103e13	obj/kernel.asm	/^c0103e13 <boot_map_segment>:$/;"	l
c0103e13	obj/kernel.asm	/^c0103e13:	55                   	push   %ebp$/;"	l
c0103e14	obj/kernel.asm	/^c0103e14:	89 e5                	mov    %esp,%ebp$/;"	l
c0103e16	obj/kernel.asm	/^c0103e16:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0103e19	obj/kernel.asm	/^c0103e19:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103e1c	obj/kernel.asm	/^c0103e1c:	33 45 14             	xor    0x14(%ebp),%eax$/;"	l
c0103e1f	obj/kernel.asm	/^c0103e1f:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0103e24	obj/kernel.asm	/^c0103e24:	85 c0                	test   %eax,%eax$/;"	l
c0103e26	obj/kernel.asm	/^c0103e26:	74 19                	je     c0103e41 <boot_map_segment+0x2e>$/;"	l
c0103e28	obj/kernel.asm	/^c0103e28:	68 16 d6 10 c0       	push   $0xc010d616$/;"	l
c0103e2d	obj/kernel.asm	/^c0103e2d:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0103e32	obj/kernel.asm	/^c0103e32:	68 12 01 00 00       	push   $0x112$/;"	l
c0103e37	obj/kernel.asm	/^c0103e37:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0103e3c	obj/kernel.asm	/^c0103e3c:	e8 9e c5 ff ff       	call   c01003df <__panic>$/;"	l
c0103e41	obj/kernel.asm	/^c0103e41:	c7 45 f0 00 10 00 00 	movl   $0x1000,-0x10(%ebp)$/;"	l
c0103e48	obj/kernel.asm	/^c0103e48:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103e4b	obj/kernel.asm	/^c0103e4b:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0103e50	obj/kernel.asm	/^c0103e50:	89 c2                	mov    %eax,%edx$/;"	l
c0103e52	obj/kernel.asm	/^c0103e52:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0103e55	obj/kernel.asm	/^c0103e55:	01 c2                	add    %eax,%edx$/;"	l
c0103e57	obj/kernel.asm	/^c0103e57:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103e5a	obj/kernel.asm	/^c0103e5a:	01 d0                	add    %edx,%eax$/;"	l
c0103e5c	obj/kernel.asm	/^c0103e5c:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0103e5f	obj/kernel.asm	/^c0103e5f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103e62	obj/kernel.asm	/^c0103e62:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103e65	obj/kernel.asm	/^c0103e65:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103e6a	obj/kernel.asm	/^c0103e6a:	f7 75 f0             	divl   -0x10(%ebp)$/;"	l
c0103e6d	obj/kernel.asm	/^c0103e6d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103e70	obj/kernel.asm	/^c0103e70:	29 d0                	sub    %edx,%eax$/;"	l
c0103e72	obj/kernel.asm	/^c0103e72:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0103e75	obj/kernel.asm	/^c0103e75:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103e78	obj/kernel.asm	/^c0103e78:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103e7b	obj/kernel.asm	/^c0103e7b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0103e7e	obj/kernel.asm	/^c0103e7e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0103e81	obj/kernel.asm	/^c0103e81:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0103e86	obj/kernel.asm	/^c0103e86:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0103e89	obj/kernel.asm	/^c0103e89:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0103e8c	obj/kernel.asm	/^c0103e8c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0103e8f	obj/kernel.asm	/^c0103e8f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0103e92	obj/kernel.asm	/^c0103e92:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0103e97	obj/kernel.asm	/^c0103e97:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
c0103e9a	obj/kernel.asm	/^c0103e9a:	eb 57                	jmp    c0103ef3 <boot_map_segment+0xe0>$/;"	l
c0103e9c	obj/kernel.asm	/^c0103e9c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103e9f	obj/kernel.asm	/^c0103e9f:	6a 01                	push   $0x1$/;"	l
c0103ea1	obj/kernel.asm	/^c0103ea1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0103ea4	obj/kernel.asm	/^c0103ea4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0103ea7	obj/kernel.asm	/^c0103ea7:	e8 9b 01 00 00       	call   c0104047 <get_pte>$/;"	l
c0103eac	obj/kernel.asm	/^c0103eac:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103eaf	obj/kernel.asm	/^c0103eaf:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0103eb2	obj/kernel.asm	/^c0103eb2:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0103eb6	obj/kernel.asm	/^c0103eb6:	75 19                	jne    c0103ed1 <boot_map_segment+0xbe>$/;"	l
c0103eb8	obj/kernel.asm	/^c0103eb8:	68 42 d6 10 c0       	push   $0xc010d642$/;"	l
c0103ebd	obj/kernel.asm	/^c0103ebd:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0103ec2	obj/kernel.asm	/^c0103ec2:	68 18 01 00 00       	push   $0x118$/;"	l
c0103ec7	obj/kernel.asm	/^c0103ec7:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0103ecc	obj/kernel.asm	/^c0103ecc:	e8 0e c5 ff ff       	call   c01003df <__panic>$/;"	l
c0103ed1	obj/kernel.asm	/^c0103ed1:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0103ed4	obj/kernel.asm	/^c0103ed4:	0b 45 18             	or     0x18(%ebp),%eax$/;"	l
c0103ed7	obj/kernel.asm	/^c0103ed7:	83 c8 01             	or     $0x1,%eax$/;"	l
c0103eda	obj/kernel.asm	/^c0103eda:	89 c2                	mov    %eax,%edx$/;"	l
c0103edc	obj/kernel.asm	/^c0103edc:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103edf	obj/kernel.asm	/^c0103edf:	89 10                	mov    %edx,(%eax)$/;"	l
c0103ee1	obj/kernel.asm	/^c0103ee1:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0103ee5	obj/kernel.asm	/^c0103ee5:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c0103eec	obj/kernel.asm	/^c0103eec:	81 45 14 00 10 00 00 	addl   $0x1000,0x14(%ebp)$/;"	l
c0103ef3	obj/kernel.asm	/^c0103ef3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103ef7	obj/kernel.asm	/^c0103ef7:	75 a3                	jne    c0103e9c <boot_map_segment+0x89>$/;"	l
c0103ef9	obj/kernel.asm	/^c0103ef9:	c9                   	leave  $/;"	l
c0103efa	obj/kernel.asm	/^c0103efa:	c3                   	ret    $/;"	l
c0103efb	obj/kernel.asm	/^c0103efb <boot_alloc_page>:$/;"	l
c0103efb	obj/kernel.asm	/^c0103efb:	55                   	push   %ebp$/;"	l
c0103efc	obj/kernel.asm	/^c0103efc:	89 e5                	mov    %esp,%ebp$/;"	l
c0103efe	obj/kernel.asm	/^c0103efe:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103f01	obj/kernel.asm	/^c0103f01:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103f04	obj/kernel.asm	/^c0103f04:	6a 01                	push   $0x1$/;"	l
c0103f06	obj/kernel.asm	/^c0103f06:	e8 53 fa ff ff       	call   c010395e <alloc_pages>$/;"	l
c0103f0b	obj/kernel.asm	/^c0103f0b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103f0e	obj/kernel.asm	/^c0103f0e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103f11	obj/kernel.asm	/^c0103f11:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103f15	obj/kernel.asm	/^c0103f15:	75 17                	jne    c0103f2e <boot_alloc_page+0x33>$/;"	l
c0103f17	obj/kernel.asm	/^c0103f17:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103f1a	obj/kernel.asm	/^c0103f1a:	68 4f d6 10 c0       	push   $0xc010d64f$/;"	l
c0103f1f	obj/kernel.asm	/^c0103f1f:	68 24 01 00 00       	push   $0x124$/;"	l
c0103f24	obj/kernel.asm	/^c0103f24:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0103f29	obj/kernel.asm	/^c0103f29:	e8 b1 c4 ff ff       	call   c01003df <__panic>$/;"	l
c0103f2e	obj/kernel.asm	/^c0103f2e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103f31	obj/kernel.asm	/^c0103f31:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0103f34	obj/kernel.asm	/^c0103f34:	e8 83 f7 ff ff       	call   c01036bc <page2kva>$/;"	l
c0103f39	obj/kernel.asm	/^c0103f39:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103f3c	obj/kernel.asm	/^c0103f3c:	c9                   	leave  $/;"	l
c0103f3d	obj/kernel.asm	/^c0103f3d:	c3                   	ret    $/;"	l
c0103f3e	obj/kernel.asm	/^c0103f3e <pmm_init>:$/;"	l
c0103f3e	obj/kernel.asm	/^c0103f3e:	55                   	push   %ebp$/;"	l
c0103f3f	obj/kernel.asm	/^c0103f3f:	89 e5                	mov    %esp,%ebp$/;"	l
c0103f41	obj/kernel.asm	/^c0103f41:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103f44	obj/kernel.asm	/^c0103f44:	e8 c3 f9 ff ff       	call   c010390c <init_pmm_manager>$/;"	l
c0103f49	obj/kernel.asm	/^c0103f49:	e8 de fa ff ff       	call   c0103a2c <page_init>$/;"	l
c0103f4e	obj/kernel.asm	/^c0103f4e:	e8 30 08 00 00       	call   c0104783 <check_alloc_page>$/;"	l
c0103f53	obj/kernel.asm	/^c0103f53:	e8 a3 ff ff ff       	call   c0103efb <boot_alloc_page>$/;"	l
c0103f58	obj/kernel.asm	/^c0103f58:	a3 c4 23 1c c0       	mov    %eax,0xc01c23c4$/;"	l
c0103f5d	obj/kernel.asm	/^c0103f5d:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0103f62	obj/kernel.asm	/^c0103f62:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103f65	obj/kernel.asm	/^c0103f65:	68 00 10 00 00       	push   $0x1000$/;"	l
c0103f6a	obj/kernel.asm	/^c0103f6a:	6a 00                	push   $0x0$/;"	l
c0103f6c	obj/kernel.asm	/^c0103f6c:	50                   	push   %eax$/;"	l
c0103f6d	obj/kernel.asm	/^c0103f6d:	e8 86 83 00 00       	call   c010c2f8 <memset>$/;"	l
c0103f72	obj/kernel.asm	/^c0103f72:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103f75	obj/kernel.asm	/^c0103f75:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0103f7a	obj/kernel.asm	/^c0103f7a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103f7d	obj/kernel.asm	/^c0103f7d:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0103f84	obj/kernel.asm	/^c0103f84:	77 17                	ja     c0103f9d <pmm_init+0x5f>$/;"	l
c0103f86	obj/kernel.asm	/^c0103f86:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0103f89	obj/kernel.asm	/^c0103f89:	68 e4 d5 10 c0       	push   $0xc010d5e4$/;"	l
c0103f8e	obj/kernel.asm	/^c0103f8e:	68 3e 01 00 00       	push   $0x13e$/;"	l
c0103f93	obj/kernel.asm	/^c0103f93:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0103f98	obj/kernel.asm	/^c0103f98:	e8 42 c4 ff ff       	call   c01003df <__panic>$/;"	l
c0103f9d	obj/kernel.asm	/^c0103f9d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103fa0	obj/kernel.asm	/^c0103fa0:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0103fa5	obj/kernel.asm	/^c0103fa5:	a3 94 45 1c c0       	mov    %eax,0xc01c4594$/;"	l
c0103faa	obj/kernel.asm	/^c0103faa:	e8 f6 07 00 00       	call   c01047a5 <check_pgdir>$/;"	l
c0103faf	obj/kernel.asm	/^c0103faf:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0103fb4	obj/kernel.asm	/^c0103fb4:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c0103fba	obj/kernel.asm	/^c0103fba:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0103fbf	obj/kernel.asm	/^c0103fbf:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103fc2	obj/kernel.asm	/^c0103fc2:	81 7d f0 ff ff ff bf 	cmpl   $0xbfffffff,-0x10(%ebp)$/;"	l
c0103fc9	obj/kernel.asm	/^c0103fc9:	77 17                	ja     c0103fe2 <pmm_init+0xa4>$/;"	l
c0103fcb	obj/kernel.asm	/^c0103fcb:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0103fce	obj/kernel.asm	/^c0103fce:	68 e4 d5 10 c0       	push   $0xc010d5e4$/;"	l
c0103fd3	obj/kernel.asm	/^c0103fd3:	68 46 01 00 00       	push   $0x146$/;"	l
c0103fd8	obj/kernel.asm	/^c0103fd8:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0103fdd	obj/kernel.asm	/^c0103fdd:	e8 fd c3 ff ff       	call   c01003df <__panic>$/;"	l
c0103fe2	obj/kernel.asm	/^c0103fe2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103fe5	obj/kernel.asm	/^c0103fe5:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0103fea	obj/kernel.asm	/^c0103fea:	83 c8 03             	or     $0x3,%eax$/;"	l
c0103fed	obj/kernel.asm	/^c0103fed:	89 02                	mov    %eax,(%edx)$/;"	l
c0103fef	obj/kernel.asm	/^c0103fef:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0103ff4	obj/kernel.asm	/^c0103ff4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103ff7	obj/kernel.asm	/^c0103ff7:	6a 02                	push   $0x2$/;"	l
c0103ff9	obj/kernel.asm	/^c0103ff9:	6a 00                	push   $0x0$/;"	l
c0103ffb	obj/kernel.asm	/^c0103ffb:	68 00 00 00 38       	push   $0x38000000$/;"	l
c0104000	obj/kernel.asm	/^c0104000:	68 00 00 00 c0       	push   $0xc0000000$/;"	l
c0104005	obj/kernel.asm	/^c0104005:	50                   	push   %eax$/;"	l
c0104006	obj/kernel.asm	/^c0104006:	e8 08 fe ff ff       	call   c0103e13 <boot_map_segment>$/;"	l
c010400b	obj/kernel.asm	/^c010400b:	83 c4 20             	add    $0x20,%esp$/;"	l
c010400e	obj/kernel.asm	/^c010400e:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104013	obj/kernel.asm	/^c0104013:	8b 15 c4 23 1c c0    	mov    0xc01c23c4,%edx$/;"	l
c0104019	obj/kernel.asm	/^c0104019:	8b 92 00 0c 00 00    	mov    0xc00(%edx),%edx$/;"	l
c010401f	obj/kernel.asm	/^c010401f:	89 10                	mov    %edx,(%eax)$/;"	l
c0104021	obj/kernel.asm	/^c0104021:	e8 b4 fd ff ff       	call   c0103dda <enable_paging>$/;"	l
c0104026	obj/kernel.asm	/^c0104026:	e8 f0 f7 ff ff       	call   c010381b <gdt_init>$/;"	l
c010402b	obj/kernel.asm	/^c010402b:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104030	obj/kernel.asm	/^c0104030:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0104036	obj/kernel.asm	/^c0104036:	e8 cf 0c 00 00       	call   c0104d0a <check_boot_pgdir>$/;"	l
c010403b	obj/kernel.asm	/^c010403b:	e8 cb 10 00 00       	call   c010510b <print_pgdir>$/;"	l
c0104040	obj/kernel.asm	/^c0104040:	e8 63 32 00 00       	call   c01072a8 <kmalloc_init>$/;"	l
c0104045	obj/kernel.asm	/^c0104045:	c9                   	leave  $/;"	l
c0104046	obj/kernel.asm	/^c0104046:	c3                   	ret    $/;"	l
c0104047	obj/kernel.asm	/^c0104047 <get_pte>:$/;"	l
c0104047	obj/kernel.asm	/^c0104047:	55                   	push   %ebp$/;"	l
c0104048	obj/kernel.asm	/^c0104048:	89 e5                	mov    %esp,%ebp$/;"	l
c010404a	obj/kernel.asm	/^c010404a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010404d	obj/kernel.asm	/^c010404d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104050	obj/kernel.asm	/^c0104050:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0104053	obj/kernel.asm	/^c0104053:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010405a	obj/kernel.asm	/^c010405a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010405d	obj/kernel.asm	/^c010405d:	01 d0                	add    %edx,%eax$/;"	l
c010405f	obj/kernel.asm	/^c010405f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104062	obj/kernel.asm	/^c0104062:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104065	obj/kernel.asm	/^c0104065:	8b 00                	mov    (%eax),%eax$/;"	l
c0104067	obj/kernel.asm	/^c0104067:	83 e0 01             	and    $0x1,%eax$/;"	l
c010406a	obj/kernel.asm	/^c010406a:	85 c0                	test   %eax,%eax$/;"	l
c010406c	obj/kernel.asm	/^c010406c:	75 75                	jne    c01040e3 <get_pte+0x9c>$/;"	l
c010406e	obj/kernel.asm	/^c010406e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0104075	obj/kernel.asm	/^c0104075:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0104079	obj/kernel.asm	/^c0104079:	74 61                	je     c01040dc <get_pte+0x95>$/;"	l
c010407b	obj/kernel.asm	/^c010407b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010407e	obj/kernel.asm	/^c010407e:	6a 01                	push   $0x1$/;"	l
c0104080	obj/kernel.asm	/^c0104080:	e8 d9 f8 ff ff       	call   c010395e <alloc_pages>$/;"	l
c0104085	obj/kernel.asm	/^c0104085:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104088	obj/kernel.asm	/^c0104088:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010408b	obj/kernel.asm	/^c010408b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010408f	obj/kernel.asm	/^c010408f:	74 4b                	je     c01040dc <get_pte+0x95>$/;"	l
c0104091	obj/kernel.asm	/^c0104091:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104094	obj/kernel.asm	/^c0104094:	6a 01                	push   $0x1$/;"	l
c0104096	obj/kernel.asm	/^c0104096:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0104099	obj/kernel.asm	/^c0104099:	e8 c3 f6 ff ff       	call   c0103761 <set_page_ref>$/;"	l
c010409e	obj/kernel.asm	/^c010409e:	83 c4 10             	add    $0x10,%esp$/;"	l
c01040a1	obj/kernel.asm	/^c01040a1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01040a4	obj/kernel.asm	/^c01040a4:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01040a7	obj/kernel.asm	/^c01040a7:	e8 10 f6 ff ff       	call   c01036bc <page2kva>$/;"	l
c01040ac	obj/kernel.asm	/^c01040ac:	83 c4 10             	add    $0x10,%esp$/;"	l
c01040af	obj/kernel.asm	/^c01040af:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01040b2	obj/kernel.asm	/^c01040b2:	68 00 10 00 00       	push   $0x1000$/;"	l
c01040b7	obj/kernel.asm	/^c01040b7:	6a 00                	push   $0x0$/;"	l
c01040b9	obj/kernel.asm	/^c01040b9:	50                   	push   %eax$/;"	l
c01040ba	obj/kernel.asm	/^c01040ba:	e8 39 82 00 00       	call   c010c2f8 <memset>$/;"	l
c01040bf	obj/kernel.asm	/^c01040bf:	83 c4 10             	add    $0x10,%esp$/;"	l
c01040c2	obj/kernel.asm	/^c01040c2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01040c5	obj/kernel.asm	/^c01040c5:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01040c8	obj/kernel.asm	/^c01040c8:	e8 9f f5 ff ff       	call   c010366c <page2pa>$/;"	l
c01040cd	obj/kernel.asm	/^c01040cd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01040d0	obj/kernel.asm	/^c01040d0:	83 c8 07             	or     $0x7,%eax$/;"	l
c01040d3	obj/kernel.asm	/^c01040d3:	89 c2                	mov    %eax,%edx$/;"	l
c01040d5	obj/kernel.asm	/^c01040d5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01040d8	obj/kernel.asm	/^c01040d8:	89 10                	mov    %edx,(%eax)$/;"	l
c01040da	obj/kernel.asm	/^c01040da:	eb 07                	jmp    c01040e3 <get_pte+0x9c>$/;"	l
c01040dc	obj/kernel.asm	/^c01040dc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01040e1	obj/kernel.asm	/^c01040e1:	eb 51                	jmp    c0104134 <get_pte+0xed>$/;"	l
c01040e3	obj/kernel.asm	/^c01040e3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01040e6	obj/kernel.asm	/^c01040e6:	8b 00                	mov    (%eax),%eax$/;"	l
c01040e8	obj/kernel.asm	/^c01040e8:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01040ed	obj/kernel.asm	/^c01040ed:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01040f0	obj/kernel.asm	/^c01040f0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01040f3	obj/kernel.asm	/^c01040f3:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01040f6	obj/kernel.asm	/^c01040f6:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01040f9	obj/kernel.asm	/^c01040f9:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c01040fe	obj/kernel.asm	/^c01040fe:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c0104101	obj/kernel.asm	/^c0104101:	72 17                	jb     c010411a <get_pte+0xd3>$/;"	l
c0104103	obj/kernel.asm	/^c0104103:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0104106	obj/kernel.asm	/^c0104106:	68 40 d5 10 c0       	push   $0xc010d540$/;"	l
c010410b	obj/kernel.asm	/^c010410b:	68 8f 01 00 00       	push   $0x18f$/;"	l
c0104110	obj/kernel.asm	/^c0104110:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104115	obj/kernel.asm	/^c0104115:	e8 c5 c2 ff ff       	call   c01003df <__panic>$/;"	l
c010411a	obj/kernel.asm	/^c010411a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010411d	obj/kernel.asm	/^c010411d:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104122	obj/kernel.asm	/^c0104122:	89 c2                	mov    %eax,%edx$/;"	l
c0104124	obj/kernel.asm	/^c0104124:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104127	obj/kernel.asm	/^c0104127:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010412a	obj/kernel.asm	/^c010412a:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
c010412f	obj/kernel.asm	/^c010412f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0104132	obj/kernel.asm	/^c0104132:	01 d0                	add    %edx,%eax$/;"	l
c0104134	obj/kernel.asm	/^c0104134:	c9                   	leave  $/;"	l
c0104135	obj/kernel.asm	/^c0104135:	c3                   	ret    $/;"	l
c0104136	obj/kernel.asm	/^c0104136 <get_page>:$/;"	l
c0104136	obj/kernel.asm	/^c0104136:	55                   	push   %ebp$/;"	l
c0104137	obj/kernel.asm	/^c0104137:	89 e5                	mov    %esp,%ebp$/;"	l
c0104139	obj/kernel.asm	/^c0104139:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010413c	obj/kernel.asm	/^c010413c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010413f	obj/kernel.asm	/^c010413f:	6a 00                	push   $0x0$/;"	l
c0104141	obj/kernel.asm	/^c0104141:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104144	obj/kernel.asm	/^c0104144:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104147	obj/kernel.asm	/^c0104147:	e8 fb fe ff ff       	call   c0104047 <get_pte>$/;"	l
c010414c	obj/kernel.asm	/^c010414c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010414f	obj/kernel.asm	/^c010414f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104152	obj/kernel.asm	/^c0104152:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0104156	obj/kernel.asm	/^c0104156:	74 08                	je     c0104160 <get_page+0x2a>$/;"	l
c0104158	obj/kernel.asm	/^c0104158:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010415b	obj/kernel.asm	/^c010415b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010415e	obj/kernel.asm	/^c010415e:	89 10                	mov    %edx,(%eax)$/;"	l
c0104160	obj/kernel.asm	/^c0104160:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104164	obj/kernel.asm	/^c0104164:	74 1f                	je     c0104185 <get_page+0x4f>$/;"	l
c0104166	obj/kernel.asm	/^c0104166:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104169	obj/kernel.asm	/^c0104169:	8b 00                	mov    (%eax),%eax$/;"	l
c010416b	obj/kernel.asm	/^c010416b:	83 e0 01             	and    $0x1,%eax$/;"	l
c010416e	obj/kernel.asm	/^c010416e:	85 c0                	test   %eax,%eax$/;"	l
c0104170	obj/kernel.asm	/^c0104170:	74 13                	je     c0104185 <get_page+0x4f>$/;"	l
c0104172	obj/kernel.asm	/^c0104172:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104175	obj/kernel.asm	/^c0104175:	8b 00                	mov    (%eax),%eax$/;"	l
c0104177	obj/kernel.asm	/^c0104177:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010417a	obj/kernel.asm	/^c010417a:	50                   	push   %eax$/;"	l
c010417b	obj/kernel.asm	/^c010417b:	e8 ff f4 ff ff       	call   c010367f <pa2page>$/;"	l
c0104180	obj/kernel.asm	/^c0104180:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104183	obj/kernel.asm	/^c0104183:	eb 05                	jmp    c010418a <get_page+0x54>$/;"	l
c0104185	obj/kernel.asm	/^c0104185:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010418a	obj/kernel.asm	/^c010418a:	c9                   	leave  $/;"	l
c010418b	obj/kernel.asm	/^c010418b:	c3                   	ret    $/;"	l
c010418c	obj/kernel.asm	/^c010418c <page_remove_pte>:$/;"	l
c010418c	obj/kernel.asm	/^c010418c:	55                   	push   %ebp$/;"	l
c010418d	obj/kernel.asm	/^c010418d:	89 e5                	mov    %esp,%ebp$/;"	l
c010418f	obj/kernel.asm	/^c010418f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104192	obj/kernel.asm	/^c0104192:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104195	obj/kernel.asm	/^c0104195:	8b 00                	mov    (%eax),%eax$/;"	l
c0104197	obj/kernel.asm	/^c0104197:	83 e0 01             	and    $0x1,%eax$/;"	l
c010419a	obj/kernel.asm	/^c010419a:	85 c0                	test   %eax,%eax$/;"	l
c010419c	obj/kernel.asm	/^c010419c:	75 02                	jne    c01041a0 <page_remove_pte+0x14>$/;"	l
c010419e	obj/kernel.asm	/^c010419e:	eb 50                	jmp    c01041f0 <page_remove_pte+0x64>$/;"	l
c01041a0	obj/kernel.asm	/^c01041a0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01041a3	obj/kernel.asm	/^c01041a3:	8b 00                	mov    (%eax),%eax$/;"	l
c01041a5	obj/kernel.asm	/^c01041a5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01041a8	obj/kernel.asm	/^c01041a8:	50                   	push   %eax$/;"	l
c01041a9	obj/kernel.asm	/^c01041a9:	e8 53 f5 ff ff       	call   c0103701 <pte2page>$/;"	l
c01041ae	obj/kernel.asm	/^c01041ae:	83 c4 10             	add    $0x10,%esp$/;"	l
c01041b1	obj/kernel.asm	/^c01041b1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01041b4	obj/kernel.asm	/^c01041b4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01041b7	obj/kernel.asm	/^c01041b7:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01041ba	obj/kernel.asm	/^c01041ba:	e8 c6 f5 ff ff       	call   c0103785 <page_ref_dec>$/;"	l
c01041bf	obj/kernel.asm	/^c01041bf:	83 c4 10             	add    $0x10,%esp$/;"	l
c01041c2	obj/kernel.asm	/^c01041c2:	85 c0                	test   %eax,%eax$/;"	l
c01041c4	obj/kernel.asm	/^c01041c4:	75 10                	jne    c01041d6 <page_remove_pte+0x4a>$/;"	l
c01041c6	obj/kernel.asm	/^c01041c6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01041c9	obj/kernel.asm	/^c01041c9:	6a 01                	push   $0x1$/;"	l
c01041cb	obj/kernel.asm	/^c01041cb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01041ce	obj/kernel.asm	/^c01041ce:	e8 f7 f7 ff ff       	call   c01039ca <free_pages>$/;"	l
c01041d3	obj/kernel.asm	/^c01041d3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01041d6	obj/kernel.asm	/^c01041d6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01041d9	obj/kernel.asm	/^c01041d9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01041df	obj/kernel.asm	/^c01041df:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01041e2	obj/kernel.asm	/^c01041e2:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01041e5	obj/kernel.asm	/^c01041e5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01041e8	obj/kernel.asm	/^c01041e8:	e8 96 04 00 00       	call   c0104683 <tlb_invalidate>$/;"	l
c01041ed	obj/kernel.asm	/^c01041ed:	83 c4 10             	add    $0x10,%esp$/;"	l
c01041f0	obj/kernel.asm	/^c01041f0:	c9                   	leave  $/;"	l
c01041f1	obj/kernel.asm	/^c01041f1:	c3                   	ret    $/;"	l
c01041f2	obj/kernel.asm	/^c01041f2 <unmap_range>:$/;"	l
c01041f2	obj/kernel.asm	/^c01041f2:	55                   	push   %ebp$/;"	l
c01041f3	obj/kernel.asm	/^c01041f3:	89 e5                	mov    %esp,%ebp$/;"	l
c01041f5	obj/kernel.asm	/^c01041f5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01041f8	obj/kernel.asm	/^c01041f8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01041fb	obj/kernel.asm	/^c01041fb:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0104200	obj/kernel.asm	/^c0104200:	85 c0                	test   %eax,%eax$/;"	l
c0104202	obj/kernel.asm	/^c0104202:	75 0c                	jne    c0104210 <unmap_range+0x1e>$/;"	l
c0104204	obj/kernel.asm	/^c0104204:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104207	obj/kernel.asm	/^c0104207:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c010420c	obj/kernel.asm	/^c010420c:	85 c0                	test   %eax,%eax$/;"	l
c010420e	obj/kernel.asm	/^c010420e:	74 19                	je     c0104229 <unmap_range+0x37>$/;"	l
c0104210	obj/kernel.asm	/^c0104210:	68 68 d6 10 c0       	push   $0xc010d668$/;"	l
c0104215	obj/kernel.asm	/^c0104215:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c010421a	obj/kernel.asm	/^c010421a:	68 d6 01 00 00       	push   $0x1d6$/;"	l
c010421f	obj/kernel.asm	/^c010421f:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104224	obj/kernel.asm	/^c0104224:	e8 b6 c1 ff ff       	call   c01003df <__panic>$/;"	l
c0104229	obj/kernel.asm	/^c0104229:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0104230	obj/kernel.asm	/^c0104230:	76 11                	jbe    c0104243 <unmap_range+0x51>$/;"	l
c0104232	obj/kernel.asm	/^c0104232:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104235	obj/kernel.asm	/^c0104235:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0104238	obj/kernel.asm	/^c0104238:	73 09                	jae    c0104243 <unmap_range+0x51>$/;"	l
c010423a	obj/kernel.asm	/^c010423a:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c0104241	obj/kernel.asm	/^c0104241:	76 19                	jbe    c010425c <unmap_range+0x6a>$/;"	l
c0104243	obj/kernel.asm	/^c0104243:	68 91 d6 10 c0       	push   $0xc010d691$/;"	l
c0104248	obj/kernel.asm	/^c0104248:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c010424d	obj/kernel.asm	/^c010424d:	68 d7 01 00 00       	push   $0x1d7$/;"	l
c0104252	obj/kernel.asm	/^c0104252:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104257	obj/kernel.asm	/^c0104257:	e8 83 c1 ff ff       	call   c01003df <__panic>$/;"	l
c010425c	obj/kernel.asm	/^c010425c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010425f	obj/kernel.asm	/^c010425f:	6a 00                	push   $0x0$/;"	l
c0104261	obj/kernel.asm	/^c0104261:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104264	obj/kernel.asm	/^c0104264:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104267	obj/kernel.asm	/^c0104267:	e8 db fd ff ff       	call   c0104047 <get_pte>$/;"	l
c010426c	obj/kernel.asm	/^c010426c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010426f	obj/kernel.asm	/^c010426f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104272	obj/kernel.asm	/^c0104272:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104276	obj/kernel.asm	/^c0104276:	75 18                	jne    c0104290 <unmap_range+0x9e>$/;"	l
c0104278	obj/kernel.asm	/^c0104278:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010427b	obj/kernel.asm	/^c010427b:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c0104280	obj/kernel.asm	/^c0104280:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104283	obj/kernel.asm	/^c0104283:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104286	obj/kernel.asm	/^c0104286:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c010428b	obj/kernel.asm	/^c010428b:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c010428e	obj/kernel.asm	/^c010428e:	eb 24                	jmp    c01042b4 <unmap_range+0xc2>$/;"	l
c0104290	obj/kernel.asm	/^c0104290:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104293	obj/kernel.asm	/^c0104293:	8b 00                	mov    (%eax),%eax$/;"	l
c0104295	obj/kernel.asm	/^c0104295:	85 c0                	test   %eax,%eax$/;"	l
c0104297	obj/kernel.asm	/^c0104297:	74 14                	je     c01042ad <unmap_range+0xbb>$/;"	l
c0104299	obj/kernel.asm	/^c0104299:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010429c	obj/kernel.asm	/^c010429c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010429f	obj/kernel.asm	/^c010429f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01042a2	obj/kernel.asm	/^c01042a2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01042a5	obj/kernel.asm	/^c01042a5:	e8 e2 fe ff ff       	call   c010418c <page_remove_pte>$/;"	l
c01042aa	obj/kernel.asm	/^c01042aa:	83 c4 10             	add    $0x10,%esp$/;"	l
c01042ad	obj/kernel.asm	/^c01042ad:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c01042b4	obj/kernel.asm	/^c01042b4:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01042b8	obj/kernel.asm	/^c01042b8:	74 08                	je     c01042c2 <unmap_range+0xd0>$/;"	l
c01042ba	obj/kernel.asm	/^c01042ba:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01042bd	obj/kernel.asm	/^c01042bd:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c01042c0	obj/kernel.asm	/^c01042c0:	72 9a                	jb     c010425c <unmap_range+0x6a>$/;"	l
c01042c2	obj/kernel.asm	/^c01042c2:	c9                   	leave  $/;"	l
c01042c3	obj/kernel.asm	/^c01042c3:	c3                   	ret    $/;"	l
c01042c4	obj/kernel.asm	/^c01042c4 <exit_range>:$/;"	l
c01042c4	obj/kernel.asm	/^c01042c4:	55                   	push   %ebp$/;"	l
c01042c5	obj/kernel.asm	/^c01042c5:	89 e5                	mov    %esp,%ebp$/;"	l
c01042c7	obj/kernel.asm	/^c01042c7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01042ca	obj/kernel.asm	/^c01042ca:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01042cd	obj/kernel.asm	/^c01042cd:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01042d2	obj/kernel.asm	/^c01042d2:	85 c0                	test   %eax,%eax$/;"	l
c01042d4	obj/kernel.asm	/^c01042d4:	75 0c                	jne    c01042e2 <exit_range+0x1e>$/;"	l
c01042d6	obj/kernel.asm	/^c01042d6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01042d9	obj/kernel.asm	/^c01042d9:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01042de	obj/kernel.asm	/^c01042de:	85 c0                	test   %eax,%eax$/;"	l
c01042e0	obj/kernel.asm	/^c01042e0:	74 19                	je     c01042fb <exit_range+0x37>$/;"	l
c01042e2	obj/kernel.asm	/^c01042e2:	68 68 d6 10 c0       	push   $0xc010d668$/;"	l
c01042e7	obj/kernel.asm	/^c01042e7:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c01042ec	obj/kernel.asm	/^c01042ec:	68 e8 01 00 00       	push   $0x1e8$/;"	l
c01042f1	obj/kernel.asm	/^c01042f1:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c01042f6	obj/kernel.asm	/^c01042f6:	e8 e4 c0 ff ff       	call   c01003df <__panic>$/;"	l
c01042fb	obj/kernel.asm	/^c01042fb:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0104302	obj/kernel.asm	/^c0104302:	76 11                	jbe    c0104315 <exit_range+0x51>$/;"	l
c0104304	obj/kernel.asm	/^c0104304:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104307	obj/kernel.asm	/^c0104307:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010430a	obj/kernel.asm	/^c010430a:	73 09                	jae    c0104315 <exit_range+0x51>$/;"	l
c010430c	obj/kernel.asm	/^c010430c:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c0104313	obj/kernel.asm	/^c0104313:	76 19                	jbe    c010432e <exit_range+0x6a>$/;"	l
c0104315	obj/kernel.asm	/^c0104315:	68 91 d6 10 c0       	push   $0xc010d691$/;"	l
c010431a	obj/kernel.asm	/^c010431a:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c010431f	obj/kernel.asm	/^c010431f:	68 e9 01 00 00       	push   $0x1e9$/;"	l
c0104324	obj/kernel.asm	/^c0104324:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104329	obj/kernel.asm	/^c0104329:	e8 b1 c0 ff ff       	call   c01003df <__panic>$/;"	l
c010432e	obj/kernel.asm	/^c010432e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104331	obj/kernel.asm	/^c0104331:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104334	obj/kernel.asm	/^c0104334:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104337	obj/kernel.asm	/^c0104337:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c010433c	obj/kernel.asm	/^c010433c:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c010433f	obj/kernel.asm	/^c010433f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104342	obj/kernel.asm	/^c0104342:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0104345	obj/kernel.asm	/^c0104345:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104348	obj/kernel.asm	/^c0104348:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010434b	obj/kernel.asm	/^c010434b:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0104352	obj/kernel.asm	/^c0104352:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104355	obj/kernel.asm	/^c0104355:	01 d0                	add    %edx,%eax$/;"	l
c0104357	obj/kernel.asm	/^c0104357:	8b 00                	mov    (%eax),%eax$/;"	l
c0104359	obj/kernel.asm	/^c0104359:	83 e0 01             	and    $0x1,%eax$/;"	l
c010435c	obj/kernel.asm	/^c010435c:	85 c0                	test   %eax,%eax$/;"	l
c010435e	obj/kernel.asm	/^c010435e:	74 40                	je     c01043a0 <exit_range+0xdc>$/;"	l
c0104360	obj/kernel.asm	/^c0104360:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104363	obj/kernel.asm	/^c0104363:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010436a	obj/kernel.asm	/^c010436a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010436d	obj/kernel.asm	/^c010436d:	01 d0                	add    %edx,%eax$/;"	l
c010436f	obj/kernel.asm	/^c010436f:	8b 00                	mov    (%eax),%eax$/;"	l
c0104371	obj/kernel.asm	/^c0104371:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104374	obj/kernel.asm	/^c0104374:	50                   	push   %eax$/;"	l
c0104375	obj/kernel.asm	/^c0104375:	e8 c1 f3 ff ff       	call   c010373b <pde2page>$/;"	l
c010437a	obj/kernel.asm	/^c010437a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010437d	obj/kernel.asm	/^c010437d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104380	obj/kernel.asm	/^c0104380:	6a 01                	push   $0x1$/;"	l
c0104382	obj/kernel.asm	/^c0104382:	50                   	push   %eax$/;"	l
c0104383	obj/kernel.asm	/^c0104383:	e8 42 f6 ff ff       	call   c01039ca <free_pages>$/;"	l
c0104388	obj/kernel.asm	/^c0104388:	83 c4 10             	add    $0x10,%esp$/;"	l
c010438b	obj/kernel.asm	/^c010438b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010438e	obj/kernel.asm	/^c010438e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0104395	obj/kernel.asm	/^c0104395:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104398	obj/kernel.asm	/^c0104398:	01 d0                	add    %edx,%eax$/;"	l
c010439a	obj/kernel.asm	/^c010439a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01043a0	obj/kernel.asm	/^c01043a0:	81 45 0c 00 00 40 00 	addl   $0x400000,0xc(%ebp)$/;"	l
c01043a7	obj/kernel.asm	/^c01043a7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01043ab	obj/kernel.asm	/^c01043ab:	74 08                	je     c01043b5 <exit_range+0xf1>$/;"	l
c01043ad	obj/kernel.asm	/^c01043ad:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01043b0	obj/kernel.asm	/^c01043b0:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c01043b3	obj/kernel.asm	/^c01043b3:	72 8a                	jb     c010433f <exit_range+0x7b>$/;"	l
c01043b5	obj/kernel.asm	/^c01043b5:	c9                   	leave  $/;"	l
c01043b6	obj/kernel.asm	/^c01043b6:	c3                   	ret    $/;"	l
c01043b7	obj/kernel.asm	/^c01043b7 <copy_range>:$/;"	l
c01043b7	obj/kernel.asm	/^c01043b7:	55                   	push   %ebp$/;"	l
c01043b8	obj/kernel.asm	/^c01043b8:	89 e5                	mov    %esp,%ebp$/;"	l
c01043ba	obj/kernel.asm	/^c01043ba:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01043bd	obj/kernel.asm	/^c01043bd:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01043c0	obj/kernel.asm	/^c01043c0:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01043c5	obj/kernel.asm	/^c01043c5:	85 c0                	test   %eax,%eax$/;"	l
c01043c7	obj/kernel.asm	/^c01043c7:	75 0c                	jne    c01043d5 <copy_range+0x1e>$/;"	l
c01043c9	obj/kernel.asm	/^c01043c9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01043cc	obj/kernel.asm	/^c01043cc:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01043d1	obj/kernel.asm	/^c01043d1:	85 c0                	test   %eax,%eax$/;"	l
c01043d3	obj/kernel.asm	/^c01043d3:	74 19                	je     c01043ee <copy_range+0x37>$/;"	l
c01043d5	obj/kernel.asm	/^c01043d5:	68 68 d6 10 c0       	push   $0xc010d668$/;"	l
c01043da	obj/kernel.asm	/^c01043da:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c01043df	obj/kernel.asm	/^c01043df:	68 fe 01 00 00       	push   $0x1fe$/;"	l
c01043e4	obj/kernel.asm	/^c01043e4:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c01043e9	obj/kernel.asm	/^c01043e9:	e8 f1 bf ff ff       	call   c01003df <__panic>$/;"	l
c01043ee	obj/kernel.asm	/^c01043ee:	81 7d 10 ff ff 1f 00 	cmpl   $0x1fffff,0x10(%ebp)$/;"	l
c01043f5	obj/kernel.asm	/^c01043f5:	76 11                	jbe    c0104408 <copy_range+0x51>$/;"	l
c01043f7	obj/kernel.asm	/^c01043f7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01043fa	obj/kernel.asm	/^c01043fa:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c01043fd	obj/kernel.asm	/^c01043fd:	73 09                	jae    c0104408 <copy_range+0x51>$/;"	l
c01043ff	obj/kernel.asm	/^c01043ff:	81 7d 14 00 00 00 b0 	cmpl   $0xb0000000,0x14(%ebp)$/;"	l
c0104406	obj/kernel.asm	/^c0104406:	76 19                	jbe    c0104421 <copy_range+0x6a>$/;"	l
c0104408	obj/kernel.asm	/^c0104408:	68 91 d6 10 c0       	push   $0xc010d691$/;"	l
c010440d	obj/kernel.asm	/^c010440d:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104412	obj/kernel.asm	/^c0104412:	68 ff 01 00 00       	push   $0x1ff$/;"	l
c0104417	obj/kernel.asm	/^c0104417:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c010441c	obj/kernel.asm	/^c010441c:	e8 be bf ff ff       	call   c01003df <__panic>$/;"	l
c0104421	obj/kernel.asm	/^c0104421:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104424	obj/kernel.asm	/^c0104424:	6a 00                	push   $0x0$/;"	l
c0104426	obj/kernel.asm	/^c0104426:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0104429	obj/kernel.asm	/^c0104429:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010442c	obj/kernel.asm	/^c010442c:	e8 16 fc ff ff       	call   c0104047 <get_pte>$/;"	l
c0104431	obj/kernel.asm	/^c0104431:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104434	obj/kernel.asm	/^c0104434:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104437	obj/kernel.asm	/^c0104437:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010443b	obj/kernel.asm	/^c010443b:	75 1b                	jne    c0104458 <copy_range+0xa1>$/;"	l
c010443d	obj/kernel.asm	/^c010443d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104440	obj/kernel.asm	/^c0104440:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c0104445	obj/kernel.asm	/^c0104445:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104448	obj/kernel.asm	/^c0104448:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010444b	obj/kernel.asm	/^c010444b:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0104450	obj/kernel.asm	/^c0104450:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c0104453	obj/kernel.asm	/^c0104453:	e9 21 01 00 00       	jmp    c0104579 <copy_range+0x1c2>$/;"	l
c0104458	obj/kernel.asm	/^c0104458:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010445b	obj/kernel.asm	/^c010445b:	8b 00                	mov    (%eax),%eax$/;"	l
c010445d	obj/kernel.asm	/^c010445d:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104460	obj/kernel.asm	/^c0104460:	85 c0                	test   %eax,%eax$/;"	l
c0104462	obj/kernel.asm	/^c0104462:	0f 84 0a 01 00 00    	je     c0104572 <copy_range+0x1bb>$/;"	l
c0104468	obj/kernel.asm	/^c0104468:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010446b	obj/kernel.asm	/^c010446b:	6a 01                	push   $0x1$/;"	l
c010446d	obj/kernel.asm	/^c010446d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0104470	obj/kernel.asm	/^c0104470:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104473	obj/kernel.asm	/^c0104473:	e8 cf fb ff ff       	call   c0104047 <get_pte>$/;"	l
c0104478	obj/kernel.asm	/^c0104478:	83 c4 10             	add    $0x10,%esp$/;"	l
c010447b	obj/kernel.asm	/^c010447b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010447e	obj/kernel.asm	/^c010447e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0104482	obj/kernel.asm	/^c0104482:	75 0a                	jne    c010448e <copy_range+0xd7>$/;"	l
c0104484	obj/kernel.asm	/^c0104484:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0104489	obj/kernel.asm	/^c0104489:	e9 02 01 00 00       	jmp    c0104590 <copy_range+0x1d9>$/;"	l
c010448e	obj/kernel.asm	/^c010448e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104491	obj/kernel.asm	/^c0104491:	8b 00                	mov    (%eax),%eax$/;"	l
c0104493	obj/kernel.asm	/^c0104493:	83 e0 07             	and    $0x7,%eax$/;"	l
c0104496	obj/kernel.asm	/^c0104496:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104499	obj/kernel.asm	/^c0104499:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010449c	obj/kernel.asm	/^c010449c:	8b 00                	mov    (%eax),%eax$/;"	l
c010449e	obj/kernel.asm	/^c010449e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01044a1	obj/kernel.asm	/^c01044a1:	50                   	push   %eax$/;"	l
c01044a2	obj/kernel.asm	/^c01044a2:	e8 5a f2 ff ff       	call   c0103701 <pte2page>$/;"	l
c01044a7	obj/kernel.asm	/^c01044a7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01044aa	obj/kernel.asm	/^c01044aa:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01044ad	obj/kernel.asm	/^c01044ad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01044b0	obj/kernel.asm	/^c01044b0:	6a 01                	push   $0x1$/;"	l
c01044b2	obj/kernel.asm	/^c01044b2:	e8 a7 f4 ff ff       	call   c010395e <alloc_pages>$/;"	l
c01044b7	obj/kernel.asm	/^c01044b7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01044ba	obj/kernel.asm	/^c01044ba:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01044bd	obj/kernel.asm	/^c01044bd:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01044c1	obj/kernel.asm	/^c01044c1:	75 19                	jne    c01044dc <copy_range+0x125>$/;"	l
c01044c3	obj/kernel.asm	/^c01044c3:	68 a9 d6 10 c0       	push   $0xc010d6a9$/;"	l
c01044c8	obj/kernel.asm	/^c01044c8:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c01044cd	obj/kernel.asm	/^c01044cd:	68 12 02 00 00       	push   $0x212$/;"	l
c01044d2	obj/kernel.asm	/^c01044d2:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c01044d7	obj/kernel.asm	/^c01044d7:	e8 03 bf ff ff       	call   c01003df <__panic>$/;"	l
c01044dc	obj/kernel.asm	/^c01044dc:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01044e0	obj/kernel.asm	/^c01044e0:	75 19                	jne    c01044fb <copy_range+0x144>$/;"	l
c01044e2	obj/kernel.asm	/^c01044e2:	68 b4 d6 10 c0       	push   $0xc010d6b4$/;"	l
c01044e7	obj/kernel.asm	/^c01044e7:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c01044ec	obj/kernel.asm	/^c01044ec:	68 13 02 00 00       	push   $0x213$/;"	l
c01044f1	obj/kernel.asm	/^c01044f1:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c01044f6	obj/kernel.asm	/^c01044f6:	e8 e4 be ff ff       	call   c01003df <__panic>$/;"	l
c01044fb	obj/kernel.asm	/^c01044fb:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0104502	obj/kernel.asm	/^c0104502:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104505	obj/kernel.asm	/^c0104505:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104508	obj/kernel.asm	/^c0104508:	e8 af f1 ff ff       	call   c01036bc <page2kva>$/;"	l
c010450d	obj/kernel.asm	/^c010450d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104510	obj/kernel.asm	/^c0104510:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0104513	obj/kernel.asm	/^c0104513:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104516	obj/kernel.asm	/^c0104516:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104519	obj/kernel.asm	/^c0104519:	e8 9e f1 ff ff       	call   c01036bc <page2kva>$/;"	l
c010451e	obj/kernel.asm	/^c010451e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104521	obj/kernel.asm	/^c0104521:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0104524	obj/kernel.asm	/^c0104524:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0104527	obj/kernel.asm	/^c0104527:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010452a	obj/kernel.asm	/^c010452a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010452d	obj/kernel.asm	/^c010452d:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104532	obj/kernel.asm	/^c0104532:	52                   	push   %edx$/;"	l
c0104533	obj/kernel.asm	/^c0104533:	50                   	push   %eax$/;"	l
c0104534	obj/kernel.asm	/^c0104534:	e8 a2 7e 00 00       	call   c010c3db <memcpy>$/;"	l
c0104539	obj/kernel.asm	/^c0104539:	83 c4 10             	add    $0x10,%esp$/;"	l
c010453c	obj/kernel.asm	/^c010453c:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010453f	obj/kernel.asm	/^c010453f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0104542	obj/kernel.asm	/^c0104542:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104545	obj/kernel.asm	/^c0104545:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104548	obj/kernel.asm	/^c0104548:	e8 7d 00 00 00       	call   c01045ca <page_insert>$/;"	l
c010454d	obj/kernel.asm	/^c010454d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104550	obj/kernel.asm	/^c0104550:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0104553	obj/kernel.asm	/^c0104553:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0104557	obj/kernel.asm	/^c0104557:	74 19                	je     c0104572 <copy_range+0x1bb>$/;"	l
c0104559	obj/kernel.asm	/^c0104559:	68 c0 d6 10 c0       	push   $0xc010d6c0$/;"	l
c010455e	obj/kernel.asm	/^c010455e:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104563	obj/kernel.asm	/^c0104563:	68 29 02 00 00       	push   $0x229$/;"	l
c0104568	obj/kernel.asm	/^c0104568:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c010456d	obj/kernel.asm	/^c010456d:	e8 6d be ff ff       	call   c01003df <__panic>$/;"	l
c0104572	obj/kernel.asm	/^c0104572:	81 45 10 00 10 00 00 	addl   $0x1000,0x10(%ebp)$/;"	l
c0104579	obj/kernel.asm	/^c0104579:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010457d	obj/kernel.asm	/^c010457d:	74 0c                	je     c010458b <copy_range+0x1d4>$/;"	l
c010457f	obj/kernel.asm	/^c010457f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104582	obj/kernel.asm	/^c0104582:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0104585	obj/kernel.asm	/^c0104585:	0f 82 96 fe ff ff    	jb     c0104421 <copy_range+0x6a>$/;"	l
c010458b	obj/kernel.asm	/^c010458b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104590	obj/kernel.asm	/^c0104590:	c9                   	leave  $/;"	l
c0104591	obj/kernel.asm	/^c0104591:	c3                   	ret    $/;"	l
c0104592	obj/kernel.asm	/^c0104592 <page_remove>:$/;"	l
c0104592	obj/kernel.asm	/^c0104592:	55                   	push   %ebp$/;"	l
c0104593	obj/kernel.asm	/^c0104593:	89 e5                	mov    %esp,%ebp$/;"	l
c0104595	obj/kernel.asm	/^c0104595:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104598	obj/kernel.asm	/^c0104598:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010459b	obj/kernel.asm	/^c010459b:	6a 00                	push   $0x0$/;"	l
c010459d	obj/kernel.asm	/^c010459d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01045a0	obj/kernel.asm	/^c01045a0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01045a3	obj/kernel.asm	/^c01045a3:	e8 9f fa ff ff       	call   c0104047 <get_pte>$/;"	l
c01045a8	obj/kernel.asm	/^c01045a8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01045ab	obj/kernel.asm	/^c01045ab:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01045ae	obj/kernel.asm	/^c01045ae:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01045b2	obj/kernel.asm	/^c01045b2:	74 14                	je     c01045c8 <page_remove+0x36>$/;"	l
c01045b4	obj/kernel.asm	/^c01045b4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01045b7	obj/kernel.asm	/^c01045b7:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01045ba	obj/kernel.asm	/^c01045ba:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01045bd	obj/kernel.asm	/^c01045bd:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01045c0	obj/kernel.asm	/^c01045c0:	e8 c7 fb ff ff       	call   c010418c <page_remove_pte>$/;"	l
c01045c5	obj/kernel.asm	/^c01045c5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01045c8	obj/kernel.asm	/^c01045c8:	c9                   	leave  $/;"	l
c01045c9	obj/kernel.asm	/^c01045c9:	c3                   	ret    $/;"	l
c01045ca	obj/kernel.asm	/^c01045ca <page_insert>:$/;"	l
c01045ca	obj/kernel.asm	/^c01045ca:	55                   	push   %ebp$/;"	l
c01045cb	obj/kernel.asm	/^c01045cb:	89 e5                	mov    %esp,%ebp$/;"	l
c01045cd	obj/kernel.asm	/^c01045cd:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01045d0	obj/kernel.asm	/^c01045d0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01045d3	obj/kernel.asm	/^c01045d3:	6a 01                	push   $0x1$/;"	l
c01045d5	obj/kernel.asm	/^c01045d5:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01045d8	obj/kernel.asm	/^c01045d8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01045db	obj/kernel.asm	/^c01045db:	e8 67 fa ff ff       	call   c0104047 <get_pte>$/;"	l
c01045e0	obj/kernel.asm	/^c01045e0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01045e3	obj/kernel.asm	/^c01045e3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01045e6	obj/kernel.asm	/^c01045e6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01045ea	obj/kernel.asm	/^c01045ea:	75 0a                	jne    c01045f6 <page_insert+0x2c>$/;"	l
c01045ec	obj/kernel.asm	/^c01045ec:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01045f1	obj/kernel.asm	/^c01045f1:	e9 8b 00 00 00       	jmp    c0104681 <page_insert+0xb7>$/;"	l
c01045f6	obj/kernel.asm	/^c01045f6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01045f9	obj/kernel.asm	/^c01045f9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01045fc	obj/kernel.asm	/^c01045fc:	e8 6d f1 ff ff       	call   c010376e <page_ref_inc>$/;"	l
c0104601	obj/kernel.asm	/^c0104601:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104604	obj/kernel.asm	/^c0104604:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104607	obj/kernel.asm	/^c0104607:	8b 00                	mov    (%eax),%eax$/;"	l
c0104609	obj/kernel.asm	/^c0104609:	83 e0 01             	and    $0x1,%eax$/;"	l
c010460c	obj/kernel.asm	/^c010460c:	85 c0                	test   %eax,%eax$/;"	l
c010460e	obj/kernel.asm	/^c010460e:	74 40                	je     c0104650 <page_insert+0x86>$/;"	l
c0104610	obj/kernel.asm	/^c0104610:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104613	obj/kernel.asm	/^c0104613:	8b 00                	mov    (%eax),%eax$/;"	l
c0104615	obj/kernel.asm	/^c0104615:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104618	obj/kernel.asm	/^c0104618:	50                   	push   %eax$/;"	l
c0104619	obj/kernel.asm	/^c0104619:	e8 e3 f0 ff ff       	call   c0103701 <pte2page>$/;"	l
c010461e	obj/kernel.asm	/^c010461e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104621	obj/kernel.asm	/^c0104621:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104624	obj/kernel.asm	/^c0104624:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104627	obj/kernel.asm	/^c0104627:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010462a	obj/kernel.asm	/^c010462a:	75 10                	jne    c010463c <page_insert+0x72>$/;"	l
c010462c	obj/kernel.asm	/^c010462c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010462f	obj/kernel.asm	/^c010462f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104632	obj/kernel.asm	/^c0104632:	e8 4e f1 ff ff       	call   c0103785 <page_ref_dec>$/;"	l
c0104637	obj/kernel.asm	/^c0104637:	83 c4 10             	add    $0x10,%esp$/;"	l
c010463a	obj/kernel.asm	/^c010463a:	eb 14                	jmp    c0104650 <page_insert+0x86>$/;"	l
c010463c	obj/kernel.asm	/^c010463c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010463f	obj/kernel.asm	/^c010463f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104642	obj/kernel.asm	/^c0104642:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0104645	obj/kernel.asm	/^c0104645:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104648	obj/kernel.asm	/^c0104648:	e8 3f fb ff ff       	call   c010418c <page_remove_pte>$/;"	l
c010464d	obj/kernel.asm	/^c010464d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104650	obj/kernel.asm	/^c0104650:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104653	obj/kernel.asm	/^c0104653:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104656	obj/kernel.asm	/^c0104656:	e8 11 f0 ff ff       	call   c010366c <page2pa>$/;"	l
c010465b	obj/kernel.asm	/^c010465b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010465e	obj/kernel.asm	/^c010465e:	0b 45 14             	or     0x14(%ebp),%eax$/;"	l
c0104661	obj/kernel.asm	/^c0104661:	83 c8 01             	or     $0x1,%eax$/;"	l
c0104664	obj/kernel.asm	/^c0104664:	89 c2                	mov    %eax,%edx$/;"	l
c0104666	obj/kernel.asm	/^c0104666:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104669	obj/kernel.asm	/^c0104669:	89 10                	mov    %edx,(%eax)$/;"	l
c010466b	obj/kernel.asm	/^c010466b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010466e	obj/kernel.asm	/^c010466e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0104671	obj/kernel.asm	/^c0104671:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104674	obj/kernel.asm	/^c0104674:	e8 0a 00 00 00       	call   c0104683 <tlb_invalidate>$/;"	l
c0104679	obj/kernel.asm	/^c0104679:	83 c4 10             	add    $0x10,%esp$/;"	l
c010467c	obj/kernel.asm	/^c010467c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104681	obj/kernel.asm	/^c0104681:	c9                   	leave  $/;"	l
c0104682	obj/kernel.asm	/^c0104682:	c3                   	ret    $/;"	l
c0104683	obj/kernel.asm	/^c0104683 <tlb_invalidate>:$/;"	l
c0104683	obj/kernel.asm	/^c0104683:	55                   	push   %ebp$/;"	l
c0104684	obj/kernel.asm	/^c0104684:	89 e5                	mov    %esp,%ebp$/;"	l
c0104686	obj/kernel.asm	/^c0104686:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104689	obj/kernel.asm	/^c0104689:	0f 20 d8             	mov    %cr3,%eax$/;"	l
c010468c	obj/kernel.asm	/^c010468c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010468f	obj/kernel.asm	/^c010468f:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104692	obj/kernel.asm	/^c0104692:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104695	obj/kernel.asm	/^c0104695:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104698	obj/kernel.asm	/^c0104698:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c010469f	obj/kernel.asm	/^c010469f:	77 17                	ja     c01046b8 <tlb_invalidate+0x35>$/;"	l
c01046a1	obj/kernel.asm	/^c01046a1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01046a4	obj/kernel.asm	/^c01046a4:	68 e4 d5 10 c0       	push   $0xc010d5e4$/;"	l
c01046a9	obj/kernel.asm	/^c01046a9:	68 5a 02 00 00       	push   $0x25a$/;"	l
c01046ae	obj/kernel.asm	/^c01046ae:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c01046b3	obj/kernel.asm	/^c01046b3:	e8 27 bd ff ff       	call   c01003df <__panic>$/;"	l
c01046b8	obj/kernel.asm	/^c01046b8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01046bb	obj/kernel.asm	/^c01046bb:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c01046c0	obj/kernel.asm	/^c01046c0:	39 c2                	cmp    %eax,%edx$/;"	l
c01046c2	obj/kernel.asm	/^c01046c2:	75 0c                	jne    c01046d0 <tlb_invalidate+0x4d>$/;"	l
c01046c4	obj/kernel.asm	/^c01046c4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01046c7	obj/kernel.asm	/^c01046c7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01046ca	obj/kernel.asm	/^c01046ca:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01046cd	obj/kernel.asm	/^c01046cd:	0f 01 38             	invlpg (%eax)$/;"	l
c01046d0	obj/kernel.asm	/^c01046d0:	c9                   	leave  $/;"	l
c01046d1	obj/kernel.asm	/^c01046d1:	c3                   	ret    $/;"	l
c01046d2	obj/kernel.asm	/^c01046d2 <pgdir_alloc_page>:$/;"	l
c01046d2	obj/kernel.asm	/^c01046d2:	55                   	push   %ebp$/;"	l
c01046d3	obj/kernel.asm	/^c01046d3:	89 e5                	mov    %esp,%ebp$/;"	l
c01046d5	obj/kernel.asm	/^c01046d5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01046d8	obj/kernel.asm	/^c01046d8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01046db	obj/kernel.asm	/^c01046db:	6a 01                	push   $0x1$/;"	l
c01046dd	obj/kernel.asm	/^c01046dd:	e8 7c f2 ff ff       	call   c010395e <alloc_pages>$/;"	l
c01046e2	obj/kernel.asm	/^c01046e2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01046e5	obj/kernel.asm	/^c01046e5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01046e8	obj/kernel.asm	/^c01046e8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01046ec	obj/kernel.asm	/^c01046ec:	0f 84 8c 00 00 00    	je     c010477e <pgdir_alloc_page+0xac>$/;"	l
c01046f2	obj/kernel.asm	/^c01046f2:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01046f5	obj/kernel.asm	/^c01046f5:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01046f8	obj/kernel.asm	/^c01046f8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01046fb	obj/kernel.asm	/^c01046fb:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01046fe	obj/kernel.asm	/^c01046fe:	e8 c7 fe ff ff       	call   c01045ca <page_insert>$/;"	l
c0104703	obj/kernel.asm	/^c0104703:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104706	obj/kernel.asm	/^c0104706:	85 c0                	test   %eax,%eax$/;"	l
c0104708	obj/kernel.asm	/^c0104708:	74 17                	je     c0104721 <pgdir_alloc_page+0x4f>$/;"	l
c010470a	obj/kernel.asm	/^c010470a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010470d	obj/kernel.asm	/^c010470d:	6a 01                	push   $0x1$/;"	l
c010470f	obj/kernel.asm	/^c010470f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104712	obj/kernel.asm	/^c0104712:	e8 b3 f2 ff ff       	call   c01039ca <free_pages>$/;"	l
c0104717	obj/kernel.asm	/^c0104717:	83 c4 10             	add    $0x10,%esp$/;"	l
c010471a	obj/kernel.asm	/^c010471a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010471f	obj/kernel.asm	/^c010471f:	eb 60                	jmp    c0104781 <pgdir_alloc_page+0xaf>$/;"	l
c0104721	obj/kernel.asm	/^c0104721:	a1 70 24 1c c0       	mov    0xc01c2470,%eax$/;"	l
c0104726	obj/kernel.asm	/^c0104726:	85 c0                	test   %eax,%eax$/;"	l
c0104728	obj/kernel.asm	/^c0104728:	74 54                	je     c010477e <pgdir_alloc_page+0xac>$/;"	l
c010472a	obj/kernel.asm	/^c010472a:	a1 9c 45 1c c0       	mov    0xc01c459c,%eax$/;"	l
c010472f	obj/kernel.asm	/^c010472f:	85 c0                	test   %eax,%eax$/;"	l
c0104731	obj/kernel.asm	/^c0104731:	74 4b                	je     c010477e <pgdir_alloc_page+0xac>$/;"	l
c0104733	obj/kernel.asm	/^c0104733:	a1 9c 45 1c c0       	mov    0xc01c459c,%eax$/;"	l
c0104738	obj/kernel.asm	/^c0104738:	6a 00                	push   $0x0$/;"	l
c010473a	obj/kernel.asm	/^c010473a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010473d	obj/kernel.asm	/^c010473d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104740	obj/kernel.asm	/^c0104740:	50                   	push   %eax$/;"	l
c0104741	obj/kernel.asm	/^c0104741:	e8 18 1d 00 00       	call   c010645e <swap_map_swappable>$/;"	l
c0104746	obj/kernel.asm	/^c0104746:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104749	obj/kernel.asm	/^c0104749:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010474c	obj/kernel.asm	/^c010474c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010474f	obj/kernel.asm	/^c010474f:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c0104752	obj/kernel.asm	/^c0104752:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104755	obj/kernel.asm	/^c0104755:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104758	obj/kernel.asm	/^c0104758:	e8 fa ef ff ff       	call   c0103757 <page_ref>$/;"	l
c010475d	obj/kernel.asm	/^c010475d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104760	obj/kernel.asm	/^c0104760:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104763	obj/kernel.asm	/^c0104763:	74 19                	je     c010477e <pgdir_alloc_page+0xac>$/;"	l
c0104765	obj/kernel.asm	/^c0104765:	68 c9 d6 10 c0       	push   $0xc010d6c9$/;"	l
c010476a	obj/kernel.asm	/^c010476a:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c010476f	obj/kernel.asm	/^c010476f:	68 6e 02 00 00       	push   $0x26e$/;"	l
c0104774	obj/kernel.asm	/^c0104774:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104779	obj/kernel.asm	/^c0104779:	e8 61 bc ff ff       	call   c01003df <__panic>$/;"	l
c010477e	obj/kernel.asm	/^c010477e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104781	obj/kernel.asm	/^c0104781:	c9                   	leave  $/;"	l
c0104782	obj/kernel.asm	/^c0104782:	c3                   	ret    $/;"	l
c0104783	obj/kernel.asm	/^c0104783 <check_alloc_page>:$/;"	l
c0104783	obj/kernel.asm	/^c0104783:	55                   	push   %ebp$/;"	l
c0104784	obj/kernel.asm	/^c0104784:	89 e5                	mov    %esp,%ebp$/;"	l
c0104786	obj/kernel.asm	/^c0104786:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104789	obj/kernel.asm	/^c0104789:	a1 90 45 1c c0       	mov    0xc01c4590,%eax$/;"	l
c010478e	obj/kernel.asm	/^c010478e:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0104791	obj/kernel.asm	/^c0104791:	ff d0                	call   *%eax$/;"	l
c0104793	obj/kernel.asm	/^c0104793:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104796	obj/kernel.asm	/^c0104796:	68 e0 d6 10 c0       	push   $0xc010d6e0$/;"	l
c010479b	obj/kernel.asm	/^c010479b:	e8 da ba ff ff       	call   c010027a <cprintf>$/;"	l
c01047a0	obj/kernel.asm	/^c01047a0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01047a3	obj/kernel.asm	/^c01047a3:	c9                   	leave  $/;"	l
c01047a4	obj/kernel.asm	/^c01047a4:	c3                   	ret    $/;"	l
c01047a5	obj/kernel.asm	/^c01047a5 <check_pgdir>:$/;"	l
c01047a5	obj/kernel.asm	/^c01047a5:	55                   	push   %ebp$/;"	l
c01047a6	obj/kernel.asm	/^c01047a6:	89 e5                	mov    %esp,%ebp$/;"	l
c01047a8	obj/kernel.asm	/^c01047a8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01047ab	obj/kernel.asm	/^c01047ab:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c01047b0	obj/kernel.asm	/^c01047b0:	3d 00 80 03 00       	cmp    $0x38000,%eax$/;"	l
c01047b5	obj/kernel.asm	/^c01047b5:	76 19                	jbe    c01047d0 <check_pgdir+0x2b>$/;"	l
c01047b7	obj/kernel.asm	/^c01047b7:	68 ff d6 10 c0       	push   $0xc010d6ff$/;"	l
c01047bc	obj/kernel.asm	/^c01047bc:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c01047c1	obj/kernel.asm	/^c01047c1:	68 86 02 00 00       	push   $0x286$/;"	l
c01047c6	obj/kernel.asm	/^c01047c6:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c01047cb	obj/kernel.asm	/^c01047cb:	e8 0f bc ff ff       	call   c01003df <__panic>$/;"	l
c01047d0	obj/kernel.asm	/^c01047d0:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c01047d5	obj/kernel.asm	/^c01047d5:	85 c0                	test   %eax,%eax$/;"	l
c01047d7	obj/kernel.asm	/^c01047d7:	74 0e                	je     c01047e7 <check_pgdir+0x42>$/;"	l
c01047d9	obj/kernel.asm	/^c01047d9:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c01047de	obj/kernel.asm	/^c01047de:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01047e3	obj/kernel.asm	/^c01047e3:	85 c0                	test   %eax,%eax$/;"	l
c01047e5	obj/kernel.asm	/^c01047e5:	74 19                	je     c0104800 <check_pgdir+0x5b>$/;"	l
c01047e7	obj/kernel.asm	/^c01047e7:	68 1c d7 10 c0       	push   $0xc010d71c$/;"	l
c01047ec	obj/kernel.asm	/^c01047ec:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c01047f1	obj/kernel.asm	/^c01047f1:	68 87 02 00 00       	push   $0x287$/;"	l
c01047f6	obj/kernel.asm	/^c01047f6:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c01047fb	obj/kernel.asm	/^c01047fb:	e8 df bb ff ff       	call   c01003df <__panic>$/;"	l
c0104800	obj/kernel.asm	/^c0104800:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104805	obj/kernel.asm	/^c0104805:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104808	obj/kernel.asm	/^c0104808:	6a 00                	push   $0x0$/;"	l
c010480a	obj/kernel.asm	/^c010480a:	6a 00                	push   $0x0$/;"	l
c010480c	obj/kernel.asm	/^c010480c:	50                   	push   %eax$/;"	l
c010480d	obj/kernel.asm	/^c010480d:	e8 24 f9 ff ff       	call   c0104136 <get_page>$/;"	l
c0104812	obj/kernel.asm	/^c0104812:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104815	obj/kernel.asm	/^c0104815:	85 c0                	test   %eax,%eax$/;"	l
c0104817	obj/kernel.asm	/^c0104817:	74 19                	je     c0104832 <check_pgdir+0x8d>$/;"	l
c0104819	obj/kernel.asm	/^c0104819:	68 54 d7 10 c0       	push   $0xc010d754$/;"	l
c010481e	obj/kernel.asm	/^c010481e:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104823	obj/kernel.asm	/^c0104823:	68 88 02 00 00       	push   $0x288$/;"	l
c0104828	obj/kernel.asm	/^c0104828:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c010482d	obj/kernel.asm	/^c010482d:	e8 ad bb ff ff       	call   c01003df <__panic>$/;"	l
c0104832	obj/kernel.asm	/^c0104832:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104835	obj/kernel.asm	/^c0104835:	6a 01                	push   $0x1$/;"	l
c0104837	obj/kernel.asm	/^c0104837:	e8 22 f1 ff ff       	call   c010395e <alloc_pages>$/;"	l
c010483c	obj/kernel.asm	/^c010483c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010483f	obj/kernel.asm	/^c010483f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104842	obj/kernel.asm	/^c0104842:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104847	obj/kernel.asm	/^c0104847:	6a 00                	push   $0x0$/;"	l
c0104849	obj/kernel.asm	/^c0104849:	6a 00                	push   $0x0$/;"	l
c010484b	obj/kernel.asm	/^c010484b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010484e	obj/kernel.asm	/^c010484e:	50                   	push   %eax$/;"	l
c010484f	obj/kernel.asm	/^c010484f:	e8 76 fd ff ff       	call   c01045ca <page_insert>$/;"	l
c0104854	obj/kernel.asm	/^c0104854:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104857	obj/kernel.asm	/^c0104857:	85 c0                	test   %eax,%eax$/;"	l
c0104859	obj/kernel.asm	/^c0104859:	74 19                	je     c0104874 <check_pgdir+0xcf>$/;"	l
c010485b	obj/kernel.asm	/^c010485b:	68 7c d7 10 c0       	push   $0xc010d77c$/;"	l
c0104860	obj/kernel.asm	/^c0104860:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104865	obj/kernel.asm	/^c0104865:	68 8c 02 00 00       	push   $0x28c$/;"	l
c010486a	obj/kernel.asm	/^c010486a:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c010486f	obj/kernel.asm	/^c010486f:	e8 6b bb ff ff       	call   c01003df <__panic>$/;"	l
c0104874	obj/kernel.asm	/^c0104874:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104879	obj/kernel.asm	/^c0104879:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010487c	obj/kernel.asm	/^c010487c:	6a 00                	push   $0x0$/;"	l
c010487e	obj/kernel.asm	/^c010487e:	6a 00                	push   $0x0$/;"	l
c0104880	obj/kernel.asm	/^c0104880:	50                   	push   %eax$/;"	l
c0104881	obj/kernel.asm	/^c0104881:	e8 c1 f7 ff ff       	call   c0104047 <get_pte>$/;"	l
c0104886	obj/kernel.asm	/^c0104886:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104889	obj/kernel.asm	/^c0104889:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010488c	obj/kernel.asm	/^c010488c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104890	obj/kernel.asm	/^c0104890:	75 19                	jne    c01048ab <check_pgdir+0x106>$/;"	l
c0104892	obj/kernel.asm	/^c0104892:	68 a8 d7 10 c0       	push   $0xc010d7a8$/;"	l
c0104897	obj/kernel.asm	/^c0104897:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c010489c	obj/kernel.asm	/^c010489c:	68 8f 02 00 00       	push   $0x28f$/;"	l
c01048a1	obj/kernel.asm	/^c01048a1:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c01048a6	obj/kernel.asm	/^c01048a6:	e8 34 bb ff ff       	call   c01003df <__panic>$/;"	l
c01048ab	obj/kernel.asm	/^c01048ab:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01048ae	obj/kernel.asm	/^c01048ae:	8b 00                	mov    (%eax),%eax$/;"	l
c01048b0	obj/kernel.asm	/^c01048b0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01048b3	obj/kernel.asm	/^c01048b3:	50                   	push   %eax$/;"	l
c01048b4	obj/kernel.asm	/^c01048b4:	e8 c6 ed ff ff       	call   c010367f <pa2page>$/;"	l
c01048b9	obj/kernel.asm	/^c01048b9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01048bc	obj/kernel.asm	/^c01048bc:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01048bf	obj/kernel.asm	/^c01048bf:	74 19                	je     c01048da <check_pgdir+0x135>$/;"	l
c01048c1	obj/kernel.asm	/^c01048c1:	68 d5 d7 10 c0       	push   $0xc010d7d5$/;"	l
c01048c6	obj/kernel.asm	/^c01048c6:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c01048cb	obj/kernel.asm	/^c01048cb:	68 90 02 00 00       	push   $0x290$/;"	l
c01048d0	obj/kernel.asm	/^c01048d0:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c01048d5	obj/kernel.asm	/^c01048d5:	e8 05 bb ff ff       	call   c01003df <__panic>$/;"	l
c01048da	obj/kernel.asm	/^c01048da:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01048dd	obj/kernel.asm	/^c01048dd:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01048e0	obj/kernel.asm	/^c01048e0:	e8 72 ee ff ff       	call   c0103757 <page_ref>$/;"	l
c01048e5	obj/kernel.asm	/^c01048e5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01048e8	obj/kernel.asm	/^c01048e8:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01048eb	obj/kernel.asm	/^c01048eb:	74 19                	je     c0104906 <check_pgdir+0x161>$/;"	l
c01048ed	obj/kernel.asm	/^c01048ed:	68 ea d7 10 c0       	push   $0xc010d7ea$/;"	l
c01048f2	obj/kernel.asm	/^c01048f2:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c01048f7	obj/kernel.asm	/^c01048f7:	68 91 02 00 00       	push   $0x291$/;"	l
c01048fc	obj/kernel.asm	/^c01048fc:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104901	obj/kernel.asm	/^c0104901:	e8 d9 ba ff ff       	call   c01003df <__panic>$/;"	l
c0104906	obj/kernel.asm	/^c0104906:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c010490b	obj/kernel.asm	/^c010490b:	8b 00                	mov    (%eax),%eax$/;"	l
c010490d	obj/kernel.asm	/^c010490d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104912	obj/kernel.asm	/^c0104912:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104915	obj/kernel.asm	/^c0104915:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104918	obj/kernel.asm	/^c0104918:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010491b	obj/kernel.asm	/^c010491b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010491e	obj/kernel.asm	/^c010491e:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c0104923	obj/kernel.asm	/^c0104923:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c0104926	obj/kernel.asm	/^c0104926:	72 17                	jb     c010493f <check_pgdir+0x19a>$/;"	l
c0104928	obj/kernel.asm	/^c0104928:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010492b	obj/kernel.asm	/^c010492b:	68 40 d5 10 c0       	push   $0xc010d540$/;"	l
c0104930	obj/kernel.asm	/^c0104930:	68 93 02 00 00       	push   $0x293$/;"	l
c0104935	obj/kernel.asm	/^c0104935:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c010493a	obj/kernel.asm	/^c010493a:	e8 a0 ba ff ff       	call   c01003df <__panic>$/;"	l
c010493f	obj/kernel.asm	/^c010493f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104942	obj/kernel.asm	/^c0104942:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104947	obj/kernel.asm	/^c0104947:	83 c0 04             	add    $0x4,%eax$/;"	l
c010494a	obj/kernel.asm	/^c010494a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010494d	obj/kernel.asm	/^c010494d:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104952	obj/kernel.asm	/^c0104952:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104955	obj/kernel.asm	/^c0104955:	6a 00                	push   $0x0$/;"	l
c0104957	obj/kernel.asm	/^c0104957:	68 00 10 00 00       	push   $0x1000$/;"	l
c010495c	obj/kernel.asm	/^c010495c:	50                   	push   %eax$/;"	l
c010495d	obj/kernel.asm	/^c010495d:	e8 e5 f6 ff ff       	call   c0104047 <get_pte>$/;"	l
c0104962	obj/kernel.asm	/^c0104962:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104965	obj/kernel.asm	/^c0104965:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0104968	obj/kernel.asm	/^c0104968:	74 19                	je     c0104983 <check_pgdir+0x1de>$/;"	l
c010496a	obj/kernel.asm	/^c010496a:	68 fc d7 10 c0       	push   $0xc010d7fc$/;"	l
c010496f	obj/kernel.asm	/^c010496f:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104974	obj/kernel.asm	/^c0104974:	68 94 02 00 00       	push   $0x294$/;"	l
c0104979	obj/kernel.asm	/^c0104979:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c010497e	obj/kernel.asm	/^c010497e:	e8 5c ba ff ff       	call   c01003df <__panic>$/;"	l
c0104983	obj/kernel.asm	/^c0104983:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104986	obj/kernel.asm	/^c0104986:	6a 01                	push   $0x1$/;"	l
c0104988	obj/kernel.asm	/^c0104988:	e8 d1 ef ff ff       	call   c010395e <alloc_pages>$/;"	l
c010498d	obj/kernel.asm	/^c010498d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104990	obj/kernel.asm	/^c0104990:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104993	obj/kernel.asm	/^c0104993:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104998	obj/kernel.asm	/^c0104998:	6a 06                	push   $0x6$/;"	l
c010499a	obj/kernel.asm	/^c010499a:	68 00 10 00 00       	push   $0x1000$/;"	l
c010499f	obj/kernel.asm	/^c010499f:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01049a2	obj/kernel.asm	/^c01049a2:	50                   	push   %eax$/;"	l
c01049a3	obj/kernel.asm	/^c01049a3:	e8 22 fc ff ff       	call   c01045ca <page_insert>$/;"	l
c01049a8	obj/kernel.asm	/^c01049a8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01049ab	obj/kernel.asm	/^c01049ab:	85 c0                	test   %eax,%eax$/;"	l
c01049ad	obj/kernel.asm	/^c01049ad:	74 19                	je     c01049c8 <check_pgdir+0x223>$/;"	l
c01049af	obj/kernel.asm	/^c01049af:	68 24 d8 10 c0       	push   $0xc010d824$/;"	l
c01049b4	obj/kernel.asm	/^c01049b4:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c01049b9	obj/kernel.asm	/^c01049b9:	68 97 02 00 00       	push   $0x297$/;"	l
c01049be	obj/kernel.asm	/^c01049be:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c01049c3	obj/kernel.asm	/^c01049c3:	e8 17 ba ff ff       	call   c01003df <__panic>$/;"	l
c01049c8	obj/kernel.asm	/^c01049c8:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c01049cd	obj/kernel.asm	/^c01049cd:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01049d0	obj/kernel.asm	/^c01049d0:	6a 00                	push   $0x0$/;"	l
c01049d2	obj/kernel.asm	/^c01049d2:	68 00 10 00 00       	push   $0x1000$/;"	l
c01049d7	obj/kernel.asm	/^c01049d7:	50                   	push   %eax$/;"	l
c01049d8	obj/kernel.asm	/^c01049d8:	e8 6a f6 ff ff       	call   c0104047 <get_pte>$/;"	l
c01049dd	obj/kernel.asm	/^c01049dd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01049e0	obj/kernel.asm	/^c01049e0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01049e3	obj/kernel.asm	/^c01049e3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01049e7	obj/kernel.asm	/^c01049e7:	75 19                	jne    c0104a02 <check_pgdir+0x25d>$/;"	l
c01049e9	obj/kernel.asm	/^c01049e9:	68 5c d8 10 c0       	push   $0xc010d85c$/;"	l
c01049ee	obj/kernel.asm	/^c01049ee:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c01049f3	obj/kernel.asm	/^c01049f3:	68 98 02 00 00       	push   $0x298$/;"	l
c01049f8	obj/kernel.asm	/^c01049f8:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c01049fd	obj/kernel.asm	/^c01049fd:	e8 dd b9 ff ff       	call   c01003df <__panic>$/;"	l
c0104a02	obj/kernel.asm	/^c0104a02:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a05	obj/kernel.asm	/^c0104a05:	8b 00                	mov    (%eax),%eax$/;"	l
c0104a07	obj/kernel.asm	/^c0104a07:	83 e0 04             	and    $0x4,%eax$/;"	l
c0104a0a	obj/kernel.asm	/^c0104a0a:	85 c0                	test   %eax,%eax$/;"	l
c0104a0c	obj/kernel.asm	/^c0104a0c:	75 19                	jne    c0104a27 <check_pgdir+0x282>$/;"	l
c0104a0e	obj/kernel.asm	/^c0104a0e:	68 8c d8 10 c0       	push   $0xc010d88c$/;"	l
c0104a13	obj/kernel.asm	/^c0104a13:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104a18	obj/kernel.asm	/^c0104a18:	68 99 02 00 00       	push   $0x299$/;"	l
c0104a1d	obj/kernel.asm	/^c0104a1d:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104a22	obj/kernel.asm	/^c0104a22:	e8 b8 b9 ff ff       	call   c01003df <__panic>$/;"	l
c0104a27	obj/kernel.asm	/^c0104a27:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a2a	obj/kernel.asm	/^c0104a2a:	8b 00                	mov    (%eax),%eax$/;"	l
c0104a2c	obj/kernel.asm	/^c0104a2c:	83 e0 02             	and    $0x2,%eax$/;"	l
c0104a2f	obj/kernel.asm	/^c0104a2f:	85 c0                	test   %eax,%eax$/;"	l
c0104a31	obj/kernel.asm	/^c0104a31:	75 19                	jne    c0104a4c <check_pgdir+0x2a7>$/;"	l
c0104a33	obj/kernel.asm	/^c0104a33:	68 9a d8 10 c0       	push   $0xc010d89a$/;"	l
c0104a38	obj/kernel.asm	/^c0104a38:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104a3d	obj/kernel.asm	/^c0104a3d:	68 9a 02 00 00       	push   $0x29a$/;"	l
c0104a42	obj/kernel.asm	/^c0104a42:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104a47	obj/kernel.asm	/^c0104a47:	e8 93 b9 ff ff       	call   c01003df <__panic>$/;"	l
c0104a4c	obj/kernel.asm	/^c0104a4c:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104a51	obj/kernel.asm	/^c0104a51:	8b 00                	mov    (%eax),%eax$/;"	l
c0104a53	obj/kernel.asm	/^c0104a53:	83 e0 04             	and    $0x4,%eax$/;"	l
c0104a56	obj/kernel.asm	/^c0104a56:	85 c0                	test   %eax,%eax$/;"	l
c0104a58	obj/kernel.asm	/^c0104a58:	75 19                	jne    c0104a73 <check_pgdir+0x2ce>$/;"	l
c0104a5a	obj/kernel.asm	/^c0104a5a:	68 a8 d8 10 c0       	push   $0xc010d8a8$/;"	l
c0104a5f	obj/kernel.asm	/^c0104a5f:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104a64	obj/kernel.asm	/^c0104a64:	68 9b 02 00 00       	push   $0x29b$/;"	l
c0104a69	obj/kernel.asm	/^c0104a69:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104a6e	obj/kernel.asm	/^c0104a6e:	e8 6c b9 ff ff       	call   c01003df <__panic>$/;"	l
c0104a73	obj/kernel.asm	/^c0104a73:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104a76	obj/kernel.asm	/^c0104a76:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104a79	obj/kernel.asm	/^c0104a79:	e8 d9 ec ff ff       	call   c0103757 <page_ref>$/;"	l
c0104a7e	obj/kernel.asm	/^c0104a7e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104a81	obj/kernel.asm	/^c0104a81:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104a84	obj/kernel.asm	/^c0104a84:	74 19                	je     c0104a9f <check_pgdir+0x2fa>$/;"	l
c0104a86	obj/kernel.asm	/^c0104a86:	68 be d8 10 c0       	push   $0xc010d8be$/;"	l
c0104a8b	obj/kernel.asm	/^c0104a8b:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104a90	obj/kernel.asm	/^c0104a90:	68 9c 02 00 00       	push   $0x29c$/;"	l
c0104a95	obj/kernel.asm	/^c0104a95:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104a9a	obj/kernel.asm	/^c0104a9a:	e8 40 b9 ff ff       	call   c01003df <__panic>$/;"	l
c0104a9f	obj/kernel.asm	/^c0104a9f:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104aa4	obj/kernel.asm	/^c0104aa4:	6a 00                	push   $0x0$/;"	l
c0104aa6	obj/kernel.asm	/^c0104aa6:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104aab	obj/kernel.asm	/^c0104aab:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104aae	obj/kernel.asm	/^c0104aae:	50                   	push   %eax$/;"	l
c0104aaf	obj/kernel.asm	/^c0104aaf:	e8 16 fb ff ff       	call   c01045ca <page_insert>$/;"	l
c0104ab4	obj/kernel.asm	/^c0104ab4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ab7	obj/kernel.asm	/^c0104ab7:	85 c0                	test   %eax,%eax$/;"	l
c0104ab9	obj/kernel.asm	/^c0104ab9:	74 19                	je     c0104ad4 <check_pgdir+0x32f>$/;"	l
c0104abb	obj/kernel.asm	/^c0104abb:	68 d0 d8 10 c0       	push   $0xc010d8d0$/;"	l
c0104ac0	obj/kernel.asm	/^c0104ac0:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104ac5	obj/kernel.asm	/^c0104ac5:	68 9e 02 00 00       	push   $0x29e$/;"	l
c0104aca	obj/kernel.asm	/^c0104aca:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104acf	obj/kernel.asm	/^c0104acf:	e8 0b b9 ff ff       	call   c01003df <__panic>$/;"	l
c0104ad4	obj/kernel.asm	/^c0104ad4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104ad7	obj/kernel.asm	/^c0104ad7:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104ada	obj/kernel.asm	/^c0104ada:	e8 78 ec ff ff       	call   c0103757 <page_ref>$/;"	l
c0104adf	obj/kernel.asm	/^c0104adf:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ae2	obj/kernel.asm	/^c0104ae2:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0104ae5	obj/kernel.asm	/^c0104ae5:	74 19                	je     c0104b00 <check_pgdir+0x35b>$/;"	l
c0104ae7	obj/kernel.asm	/^c0104ae7:	68 fc d8 10 c0       	push   $0xc010d8fc$/;"	l
c0104aec	obj/kernel.asm	/^c0104aec:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104af1	obj/kernel.asm	/^c0104af1:	68 9f 02 00 00       	push   $0x29f$/;"	l
c0104af6	obj/kernel.asm	/^c0104af6:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104afb	obj/kernel.asm	/^c0104afb:	e8 df b8 ff ff       	call   c01003df <__panic>$/;"	l
c0104b00	obj/kernel.asm	/^c0104b00:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104b03	obj/kernel.asm	/^c0104b03:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104b06	obj/kernel.asm	/^c0104b06:	e8 4c ec ff ff       	call   c0103757 <page_ref>$/;"	l
c0104b0b	obj/kernel.asm	/^c0104b0b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104b0e	obj/kernel.asm	/^c0104b0e:	85 c0                	test   %eax,%eax$/;"	l
c0104b10	obj/kernel.asm	/^c0104b10:	74 19                	je     c0104b2b <check_pgdir+0x386>$/;"	l
c0104b12	obj/kernel.asm	/^c0104b12:	68 0e d9 10 c0       	push   $0xc010d90e$/;"	l
c0104b17	obj/kernel.asm	/^c0104b17:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104b1c	obj/kernel.asm	/^c0104b1c:	68 a0 02 00 00       	push   $0x2a0$/;"	l
c0104b21	obj/kernel.asm	/^c0104b21:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104b26	obj/kernel.asm	/^c0104b26:	e8 b4 b8 ff ff       	call   c01003df <__panic>$/;"	l
c0104b2b	obj/kernel.asm	/^c0104b2b:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104b30	obj/kernel.asm	/^c0104b30:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104b33	obj/kernel.asm	/^c0104b33:	6a 00                	push   $0x0$/;"	l
c0104b35	obj/kernel.asm	/^c0104b35:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104b3a	obj/kernel.asm	/^c0104b3a:	50                   	push   %eax$/;"	l
c0104b3b	obj/kernel.asm	/^c0104b3b:	e8 07 f5 ff ff       	call   c0104047 <get_pte>$/;"	l
c0104b40	obj/kernel.asm	/^c0104b40:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104b43	obj/kernel.asm	/^c0104b43:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104b46	obj/kernel.asm	/^c0104b46:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104b4a	obj/kernel.asm	/^c0104b4a:	75 19                	jne    c0104b65 <check_pgdir+0x3c0>$/;"	l
c0104b4c	obj/kernel.asm	/^c0104b4c:	68 5c d8 10 c0       	push   $0xc010d85c$/;"	l
c0104b51	obj/kernel.asm	/^c0104b51:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104b56	obj/kernel.asm	/^c0104b56:	68 a1 02 00 00       	push   $0x2a1$/;"	l
c0104b5b	obj/kernel.asm	/^c0104b5b:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104b60	obj/kernel.asm	/^c0104b60:	e8 7a b8 ff ff       	call   c01003df <__panic>$/;"	l
c0104b65	obj/kernel.asm	/^c0104b65:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b68	obj/kernel.asm	/^c0104b68:	8b 00                	mov    (%eax),%eax$/;"	l
c0104b6a	obj/kernel.asm	/^c0104b6a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104b6d	obj/kernel.asm	/^c0104b6d:	50                   	push   %eax$/;"	l
c0104b6e	obj/kernel.asm	/^c0104b6e:	e8 0c eb ff ff       	call   c010367f <pa2page>$/;"	l
c0104b73	obj/kernel.asm	/^c0104b73:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104b76	obj/kernel.asm	/^c0104b76:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0104b79	obj/kernel.asm	/^c0104b79:	74 19                	je     c0104b94 <check_pgdir+0x3ef>$/;"	l
c0104b7b	obj/kernel.asm	/^c0104b7b:	68 d5 d7 10 c0       	push   $0xc010d7d5$/;"	l
c0104b80	obj/kernel.asm	/^c0104b80:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104b85	obj/kernel.asm	/^c0104b85:	68 a2 02 00 00       	push   $0x2a2$/;"	l
c0104b8a	obj/kernel.asm	/^c0104b8a:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104b8f	obj/kernel.asm	/^c0104b8f:	e8 4b b8 ff ff       	call   c01003df <__panic>$/;"	l
c0104b94	obj/kernel.asm	/^c0104b94:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b97	obj/kernel.asm	/^c0104b97:	8b 00                	mov    (%eax),%eax$/;"	l
c0104b99	obj/kernel.asm	/^c0104b99:	83 e0 04             	and    $0x4,%eax$/;"	l
c0104b9c	obj/kernel.asm	/^c0104b9c:	85 c0                	test   %eax,%eax$/;"	l
c0104b9e	obj/kernel.asm	/^c0104b9e:	74 19                	je     c0104bb9 <check_pgdir+0x414>$/;"	l
c0104ba0	obj/kernel.asm	/^c0104ba0:	68 20 d9 10 c0       	push   $0xc010d920$/;"	l
c0104ba5	obj/kernel.asm	/^c0104ba5:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104baa	obj/kernel.asm	/^c0104baa:	68 a3 02 00 00       	push   $0x2a3$/;"	l
c0104baf	obj/kernel.asm	/^c0104baf:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104bb4	obj/kernel.asm	/^c0104bb4:	e8 26 b8 ff ff       	call   c01003df <__panic>$/;"	l
c0104bb9	obj/kernel.asm	/^c0104bb9:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104bbe	obj/kernel.asm	/^c0104bbe:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104bc1	obj/kernel.asm	/^c0104bc1:	6a 00                	push   $0x0$/;"	l
c0104bc3	obj/kernel.asm	/^c0104bc3:	50                   	push   %eax$/;"	l
c0104bc4	obj/kernel.asm	/^c0104bc4:	e8 c9 f9 ff ff       	call   c0104592 <page_remove>$/;"	l
c0104bc9	obj/kernel.asm	/^c0104bc9:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104bcc	obj/kernel.asm	/^c0104bcc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104bcf	obj/kernel.asm	/^c0104bcf:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104bd2	obj/kernel.asm	/^c0104bd2:	e8 80 eb ff ff       	call   c0103757 <page_ref>$/;"	l
c0104bd7	obj/kernel.asm	/^c0104bd7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104bda	obj/kernel.asm	/^c0104bda:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104bdd	obj/kernel.asm	/^c0104bdd:	74 19                	je     c0104bf8 <check_pgdir+0x453>$/;"	l
c0104bdf	obj/kernel.asm	/^c0104bdf:	68 ea d7 10 c0       	push   $0xc010d7ea$/;"	l
c0104be4	obj/kernel.asm	/^c0104be4:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104be9	obj/kernel.asm	/^c0104be9:	68 a6 02 00 00       	push   $0x2a6$/;"	l
c0104bee	obj/kernel.asm	/^c0104bee:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104bf3	obj/kernel.asm	/^c0104bf3:	e8 e7 b7 ff ff       	call   c01003df <__panic>$/;"	l
c0104bf8	obj/kernel.asm	/^c0104bf8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104bfb	obj/kernel.asm	/^c0104bfb:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104bfe	obj/kernel.asm	/^c0104bfe:	e8 54 eb ff ff       	call   c0103757 <page_ref>$/;"	l
c0104c03	obj/kernel.asm	/^c0104c03:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c06	obj/kernel.asm	/^c0104c06:	85 c0                	test   %eax,%eax$/;"	l
c0104c08	obj/kernel.asm	/^c0104c08:	74 19                	je     c0104c23 <check_pgdir+0x47e>$/;"	l
c0104c0a	obj/kernel.asm	/^c0104c0a:	68 0e d9 10 c0       	push   $0xc010d90e$/;"	l
c0104c0f	obj/kernel.asm	/^c0104c0f:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104c14	obj/kernel.asm	/^c0104c14:	68 a7 02 00 00       	push   $0x2a7$/;"	l
c0104c19	obj/kernel.asm	/^c0104c19:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104c1e	obj/kernel.asm	/^c0104c1e:	e8 bc b7 ff ff       	call   c01003df <__panic>$/;"	l
c0104c23	obj/kernel.asm	/^c0104c23:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104c28	obj/kernel.asm	/^c0104c28:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104c2b	obj/kernel.asm	/^c0104c2b:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104c30	obj/kernel.asm	/^c0104c30:	50                   	push   %eax$/;"	l
c0104c31	obj/kernel.asm	/^c0104c31:	e8 5c f9 ff ff       	call   c0104592 <page_remove>$/;"	l
c0104c36	obj/kernel.asm	/^c0104c36:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c39	obj/kernel.asm	/^c0104c39:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104c3c	obj/kernel.asm	/^c0104c3c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104c3f	obj/kernel.asm	/^c0104c3f:	e8 13 eb ff ff       	call   c0103757 <page_ref>$/;"	l
c0104c44	obj/kernel.asm	/^c0104c44:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c47	obj/kernel.asm	/^c0104c47:	85 c0                	test   %eax,%eax$/;"	l
c0104c49	obj/kernel.asm	/^c0104c49:	74 19                	je     c0104c64 <check_pgdir+0x4bf>$/;"	l
c0104c4b	obj/kernel.asm	/^c0104c4b:	68 35 d9 10 c0       	push   $0xc010d935$/;"	l
c0104c50	obj/kernel.asm	/^c0104c50:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104c55	obj/kernel.asm	/^c0104c55:	68 aa 02 00 00       	push   $0x2aa$/;"	l
c0104c5a	obj/kernel.asm	/^c0104c5a:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104c5f	obj/kernel.asm	/^c0104c5f:	e8 7b b7 ff ff       	call   c01003df <__panic>$/;"	l
c0104c64	obj/kernel.asm	/^c0104c64:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104c67	obj/kernel.asm	/^c0104c67:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104c6a	obj/kernel.asm	/^c0104c6a:	e8 e8 ea ff ff       	call   c0103757 <page_ref>$/;"	l
c0104c6f	obj/kernel.asm	/^c0104c6f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c72	obj/kernel.asm	/^c0104c72:	85 c0                	test   %eax,%eax$/;"	l
c0104c74	obj/kernel.asm	/^c0104c74:	74 19                	je     c0104c8f <check_pgdir+0x4ea>$/;"	l
c0104c76	obj/kernel.asm	/^c0104c76:	68 0e d9 10 c0       	push   $0xc010d90e$/;"	l
c0104c7b	obj/kernel.asm	/^c0104c7b:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104c80	obj/kernel.asm	/^c0104c80:	68 ab 02 00 00       	push   $0x2ab$/;"	l
c0104c85	obj/kernel.asm	/^c0104c85:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104c8a	obj/kernel.asm	/^c0104c8a:	e8 50 b7 ff ff       	call   c01003df <__panic>$/;"	l
c0104c8f	obj/kernel.asm	/^c0104c8f:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104c94	obj/kernel.asm	/^c0104c94:	8b 00                	mov    (%eax),%eax$/;"	l
c0104c96	obj/kernel.asm	/^c0104c96:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104c99	obj/kernel.asm	/^c0104c99:	50                   	push   %eax$/;"	l
c0104c9a	obj/kernel.asm	/^c0104c9a:	e8 e0 e9 ff ff       	call   c010367f <pa2page>$/;"	l
c0104c9f	obj/kernel.asm	/^c0104c9f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ca2	obj/kernel.asm	/^c0104ca2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104ca5	obj/kernel.asm	/^c0104ca5:	50                   	push   %eax$/;"	l
c0104ca6	obj/kernel.asm	/^c0104ca6:	e8 ac ea ff ff       	call   c0103757 <page_ref>$/;"	l
c0104cab	obj/kernel.asm	/^c0104cab:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104cae	obj/kernel.asm	/^c0104cae:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104cb1	obj/kernel.asm	/^c0104cb1:	74 19                	je     c0104ccc <check_pgdir+0x527>$/;"	l
c0104cb3	obj/kernel.asm	/^c0104cb3:	68 48 d9 10 c0       	push   $0xc010d948$/;"	l
c0104cb8	obj/kernel.asm	/^c0104cb8:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104cbd	obj/kernel.asm	/^c0104cbd:	68 ad 02 00 00       	push   $0x2ad$/;"	l
c0104cc2	obj/kernel.asm	/^c0104cc2:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104cc7	obj/kernel.asm	/^c0104cc7:	e8 13 b7 ff ff       	call   c01003df <__panic>$/;"	l
c0104ccc	obj/kernel.asm	/^c0104ccc:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104cd1	obj/kernel.asm	/^c0104cd1:	8b 00                	mov    (%eax),%eax$/;"	l
c0104cd3	obj/kernel.asm	/^c0104cd3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104cd6	obj/kernel.asm	/^c0104cd6:	50                   	push   %eax$/;"	l
c0104cd7	obj/kernel.asm	/^c0104cd7:	e8 a3 e9 ff ff       	call   c010367f <pa2page>$/;"	l
c0104cdc	obj/kernel.asm	/^c0104cdc:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104cdf	obj/kernel.asm	/^c0104cdf:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104ce2	obj/kernel.asm	/^c0104ce2:	6a 01                	push   $0x1$/;"	l
c0104ce4	obj/kernel.asm	/^c0104ce4:	50                   	push   %eax$/;"	l
c0104ce5	obj/kernel.asm	/^c0104ce5:	e8 e0 ec ff ff       	call   c01039ca <free_pages>$/;"	l
c0104cea	obj/kernel.asm	/^c0104cea:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ced	obj/kernel.asm	/^c0104ced:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104cf2	obj/kernel.asm	/^c0104cf2:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0104cf8	obj/kernel.asm	/^c0104cf8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104cfb	obj/kernel.asm	/^c0104cfb:	68 6e d9 10 c0       	push   $0xc010d96e$/;"	l
c0104d00	obj/kernel.asm	/^c0104d00:	e8 75 b5 ff ff       	call   c010027a <cprintf>$/;"	l
c0104d05	obj/kernel.asm	/^c0104d05:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104d08	obj/kernel.asm	/^c0104d08:	c9                   	leave  $/;"	l
c0104d09	obj/kernel.asm	/^c0104d09:	c3                   	ret    $/;"	l
c0104d0a	obj/kernel.asm	/^c0104d0a <check_boot_pgdir>:$/;"	l
c0104d0a	obj/kernel.asm	/^c0104d0a:	55                   	push   %ebp$/;"	l
c0104d0b	obj/kernel.asm	/^c0104d0b:	89 e5                	mov    %esp,%ebp$/;"	l
c0104d0d	obj/kernel.asm	/^c0104d0d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104d10	obj/kernel.asm	/^c0104d10:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0104d17	obj/kernel.asm	/^c0104d17:	e9 a3 00 00 00       	jmp    c0104dbf <check_boot_pgdir+0xb5>$/;"	l
c0104d1c	obj/kernel.asm	/^c0104d1c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d1f	obj/kernel.asm	/^c0104d1f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104d22	obj/kernel.asm	/^c0104d22:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104d25	obj/kernel.asm	/^c0104d25:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104d28	obj/kernel.asm	/^c0104d28:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104d2b	obj/kernel.asm	/^c0104d2b:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c0104d30	obj/kernel.asm	/^c0104d30:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c0104d33	obj/kernel.asm	/^c0104d33:	72 17                	jb     c0104d4c <check_boot_pgdir+0x42>$/;"	l
c0104d35	obj/kernel.asm	/^c0104d35:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0104d38	obj/kernel.asm	/^c0104d38:	68 40 d5 10 c0       	push   $0xc010d540$/;"	l
c0104d3d	obj/kernel.asm	/^c0104d3d:	68 b9 02 00 00       	push   $0x2b9$/;"	l
c0104d42	obj/kernel.asm	/^c0104d42:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104d47	obj/kernel.asm	/^c0104d47:	e8 93 b6 ff ff       	call   c01003df <__panic>$/;"	l
c0104d4c	obj/kernel.asm	/^c0104d4c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104d4f	obj/kernel.asm	/^c0104d4f:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104d54	obj/kernel.asm	/^c0104d54:	89 c2                	mov    %eax,%edx$/;"	l
c0104d56	obj/kernel.asm	/^c0104d56:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104d5b	obj/kernel.asm	/^c0104d5b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104d5e	obj/kernel.asm	/^c0104d5e:	6a 00                	push   $0x0$/;"	l
c0104d60	obj/kernel.asm	/^c0104d60:	52                   	push   %edx$/;"	l
c0104d61	obj/kernel.asm	/^c0104d61:	50                   	push   %eax$/;"	l
c0104d62	obj/kernel.asm	/^c0104d62:	e8 e0 f2 ff ff       	call   c0104047 <get_pte>$/;"	l
c0104d67	obj/kernel.asm	/^c0104d67:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104d6a	obj/kernel.asm	/^c0104d6a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104d6d	obj/kernel.asm	/^c0104d6d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0104d71	obj/kernel.asm	/^c0104d71:	75 19                	jne    c0104d8c <check_boot_pgdir+0x82>$/;"	l
c0104d73	obj/kernel.asm	/^c0104d73:	68 88 d9 10 c0       	push   $0xc010d988$/;"	l
c0104d78	obj/kernel.asm	/^c0104d78:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104d7d	obj/kernel.asm	/^c0104d7d:	68 b9 02 00 00       	push   $0x2b9$/;"	l
c0104d82	obj/kernel.asm	/^c0104d82:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104d87	obj/kernel.asm	/^c0104d87:	e8 53 b6 ff ff       	call   c01003df <__panic>$/;"	l
c0104d8c	obj/kernel.asm	/^c0104d8c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0104d8f	obj/kernel.asm	/^c0104d8f:	8b 00                	mov    (%eax),%eax$/;"	l
c0104d91	obj/kernel.asm	/^c0104d91:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104d96	obj/kernel.asm	/^c0104d96:	89 c2                	mov    %eax,%edx$/;"	l
c0104d98	obj/kernel.asm	/^c0104d98:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d9b	obj/kernel.asm	/^c0104d9b:	39 c2                	cmp    %eax,%edx$/;"	l
c0104d9d	obj/kernel.asm	/^c0104d9d:	74 19                	je     c0104db8 <check_boot_pgdir+0xae>$/;"	l
c0104d9f	obj/kernel.asm	/^c0104d9f:	68 c5 d9 10 c0       	push   $0xc010d9c5$/;"	l
c0104da4	obj/kernel.asm	/^c0104da4:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104da9	obj/kernel.asm	/^c0104da9:	68 ba 02 00 00       	push   $0x2ba$/;"	l
c0104dae	obj/kernel.asm	/^c0104dae:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104db3	obj/kernel.asm	/^c0104db3:	e8 27 b6 ff ff       	call   c01003df <__panic>$/;"	l
c0104db8	obj/kernel.asm	/^c0104db8:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
c0104dbf	obj/kernel.asm	/^c0104dbf:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0104dc2	obj/kernel.asm	/^c0104dc2:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c0104dc7	obj/kernel.asm	/^c0104dc7:	39 c2                	cmp    %eax,%edx$/;"	l
c0104dc9	obj/kernel.asm	/^c0104dc9:	0f 82 4d ff ff ff    	jb     c0104d1c <check_boot_pgdir+0x12>$/;"	l
c0104dcf	obj/kernel.asm	/^c0104dcf:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104dd4	obj/kernel.asm	/^c0104dd4:	05 ac 0f 00 00       	add    $0xfac,%eax$/;"	l
c0104dd9	obj/kernel.asm	/^c0104dd9:	8b 00                	mov    (%eax),%eax$/;"	l
c0104ddb	obj/kernel.asm	/^c0104ddb:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104de0	obj/kernel.asm	/^c0104de0:	89 c2                	mov    %eax,%edx$/;"	l
c0104de2	obj/kernel.asm	/^c0104de2:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104de7	obj/kernel.asm	/^c0104de7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104dea	obj/kernel.asm	/^c0104dea:	81 7d e4 ff ff ff bf 	cmpl   $0xbfffffff,-0x1c(%ebp)$/;"	l
c0104df1	obj/kernel.asm	/^c0104df1:	77 17                	ja     c0104e0a <check_boot_pgdir+0x100>$/;"	l
c0104df3	obj/kernel.asm	/^c0104df3:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104df6	obj/kernel.asm	/^c0104df6:	68 e4 d5 10 c0       	push   $0xc010d5e4$/;"	l
c0104dfb	obj/kernel.asm	/^c0104dfb:	68 bd 02 00 00       	push   $0x2bd$/;"	l
c0104e00	obj/kernel.asm	/^c0104e00:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104e05	obj/kernel.asm	/^c0104e05:	e8 d5 b5 ff ff       	call   c01003df <__panic>$/;"	l
c0104e0a	obj/kernel.asm	/^c0104e0a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104e0d	obj/kernel.asm	/^c0104e0d:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0104e12	obj/kernel.asm	/^c0104e12:	39 c2                	cmp    %eax,%edx$/;"	l
c0104e14	obj/kernel.asm	/^c0104e14:	74 19                	je     c0104e2f <check_boot_pgdir+0x125>$/;"	l
c0104e16	obj/kernel.asm	/^c0104e16:	68 dc d9 10 c0       	push   $0xc010d9dc$/;"	l
c0104e1b	obj/kernel.asm	/^c0104e1b:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104e20	obj/kernel.asm	/^c0104e20:	68 bd 02 00 00       	push   $0x2bd$/;"	l
c0104e25	obj/kernel.asm	/^c0104e25:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104e2a	obj/kernel.asm	/^c0104e2a:	e8 b0 b5 ff ff       	call   c01003df <__panic>$/;"	l
c0104e2f	obj/kernel.asm	/^c0104e2f:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104e34	obj/kernel.asm	/^c0104e34:	8b 00                	mov    (%eax),%eax$/;"	l
c0104e36	obj/kernel.asm	/^c0104e36:	85 c0                	test   %eax,%eax$/;"	l
c0104e38	obj/kernel.asm	/^c0104e38:	74 19                	je     c0104e53 <check_boot_pgdir+0x149>$/;"	l
c0104e3a	obj/kernel.asm	/^c0104e3a:	68 10 da 10 c0       	push   $0xc010da10$/;"	l
c0104e3f	obj/kernel.asm	/^c0104e3f:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104e44	obj/kernel.asm	/^c0104e44:	68 bf 02 00 00       	push   $0x2bf$/;"	l
c0104e49	obj/kernel.asm	/^c0104e49:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104e4e	obj/kernel.asm	/^c0104e4e:	e8 8c b5 ff ff       	call   c01003df <__panic>$/;"	l
c0104e53	obj/kernel.asm	/^c0104e53:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104e56	obj/kernel.asm	/^c0104e56:	6a 01                	push   $0x1$/;"	l
c0104e58	obj/kernel.asm	/^c0104e58:	e8 01 eb ff ff       	call   c010395e <alloc_pages>$/;"	l
c0104e5d	obj/kernel.asm	/^c0104e5d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104e60	obj/kernel.asm	/^c0104e60:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0104e63	obj/kernel.asm	/^c0104e63:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104e68	obj/kernel.asm	/^c0104e68:	6a 02                	push   $0x2$/;"	l
c0104e6a	obj/kernel.asm	/^c0104e6a:	68 00 01 00 00       	push   $0x100$/;"	l
c0104e6f	obj/kernel.asm	/^c0104e6f:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104e72	obj/kernel.asm	/^c0104e72:	50                   	push   %eax$/;"	l
c0104e73	obj/kernel.asm	/^c0104e73:	e8 52 f7 ff ff       	call   c01045ca <page_insert>$/;"	l
c0104e78	obj/kernel.asm	/^c0104e78:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104e7b	obj/kernel.asm	/^c0104e7b:	85 c0                	test   %eax,%eax$/;"	l
c0104e7d	obj/kernel.asm	/^c0104e7d:	74 19                	je     c0104e98 <check_boot_pgdir+0x18e>$/;"	l
c0104e7f	obj/kernel.asm	/^c0104e7f:	68 24 da 10 c0       	push   $0xc010da24$/;"	l
c0104e84	obj/kernel.asm	/^c0104e84:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104e89	obj/kernel.asm	/^c0104e89:	68 c3 02 00 00       	push   $0x2c3$/;"	l
c0104e8e	obj/kernel.asm	/^c0104e8e:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104e93	obj/kernel.asm	/^c0104e93:	e8 47 b5 ff ff       	call   c01003df <__panic>$/;"	l
c0104e98	obj/kernel.asm	/^c0104e98:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104e9b	obj/kernel.asm	/^c0104e9b:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104e9e	obj/kernel.asm	/^c0104e9e:	e8 b4 e8 ff ff       	call   c0103757 <page_ref>$/;"	l
c0104ea3	obj/kernel.asm	/^c0104ea3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ea6	obj/kernel.asm	/^c0104ea6:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104ea9	obj/kernel.asm	/^c0104ea9:	74 19                	je     c0104ec4 <check_boot_pgdir+0x1ba>$/;"	l
c0104eab	obj/kernel.asm	/^c0104eab:	68 52 da 10 c0       	push   $0xc010da52$/;"	l
c0104eb0	obj/kernel.asm	/^c0104eb0:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104eb5	obj/kernel.asm	/^c0104eb5:	68 c4 02 00 00       	push   $0x2c4$/;"	l
c0104eba	obj/kernel.asm	/^c0104eba:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104ebf	obj/kernel.asm	/^c0104ebf:	e8 1b b5 ff ff       	call   c01003df <__panic>$/;"	l
c0104ec4	obj/kernel.asm	/^c0104ec4:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104ec9	obj/kernel.asm	/^c0104ec9:	6a 02                	push   $0x2$/;"	l
c0104ecb	obj/kernel.asm	/^c0104ecb:	68 00 11 00 00       	push   $0x1100$/;"	l
c0104ed0	obj/kernel.asm	/^c0104ed0:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104ed3	obj/kernel.asm	/^c0104ed3:	50                   	push   %eax$/;"	l
c0104ed4	obj/kernel.asm	/^c0104ed4:	e8 f1 f6 ff ff       	call   c01045ca <page_insert>$/;"	l
c0104ed9	obj/kernel.asm	/^c0104ed9:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104edc	obj/kernel.asm	/^c0104edc:	85 c0                	test   %eax,%eax$/;"	l
c0104ede	obj/kernel.asm	/^c0104ede:	74 19                	je     c0104ef9 <check_boot_pgdir+0x1ef>$/;"	l
c0104ee0	obj/kernel.asm	/^c0104ee0:	68 64 da 10 c0       	push   $0xc010da64$/;"	l
c0104ee5	obj/kernel.asm	/^c0104ee5:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104eea	obj/kernel.asm	/^c0104eea:	68 c5 02 00 00       	push   $0x2c5$/;"	l
c0104eef	obj/kernel.asm	/^c0104eef:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104ef4	obj/kernel.asm	/^c0104ef4:	e8 e6 b4 ff ff       	call   c01003df <__panic>$/;"	l
c0104ef9	obj/kernel.asm	/^c0104ef9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104efc	obj/kernel.asm	/^c0104efc:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104eff	obj/kernel.asm	/^c0104eff:	e8 53 e8 ff ff       	call   c0103757 <page_ref>$/;"	l
c0104f04	obj/kernel.asm	/^c0104f04:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104f07	obj/kernel.asm	/^c0104f07:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0104f0a	obj/kernel.asm	/^c0104f0a:	74 19                	je     c0104f25 <check_boot_pgdir+0x21b>$/;"	l
c0104f0c	obj/kernel.asm	/^c0104f0c:	68 9b da 10 c0       	push   $0xc010da9b$/;"	l
c0104f11	obj/kernel.asm	/^c0104f11:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104f16	obj/kernel.asm	/^c0104f16:	68 c6 02 00 00       	push   $0x2c6$/;"	l
c0104f1b	obj/kernel.asm	/^c0104f1b:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104f20	obj/kernel.asm	/^c0104f20:	e8 ba b4 ff ff       	call   c01003df <__panic>$/;"	l
c0104f25	obj/kernel.asm	/^c0104f25:	c7 45 dc ac da 10 c0 	movl   $0xc010daac,-0x24(%ebp)$/;"	l
c0104f2c	obj/kernel.asm	/^c0104f2c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104f2f	obj/kernel.asm	/^c0104f2f:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0104f32	obj/kernel.asm	/^c0104f32:	68 00 01 00 00       	push   $0x100$/;"	l
c0104f37	obj/kernel.asm	/^c0104f37:	e8 e3 70 00 00       	call   c010c01f <strcpy>$/;"	l
c0104f3c	obj/kernel.asm	/^c0104f3c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104f3f	obj/kernel.asm	/^c0104f3f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104f42	obj/kernel.asm	/^c0104f42:	68 00 11 00 00       	push   $0x1100$/;"	l
c0104f47	obj/kernel.asm	/^c0104f47:	68 00 01 00 00       	push   $0x100$/;"	l
c0104f4c	obj/kernel.asm	/^c0104f4c:	e8 48 71 00 00       	call   c010c099 <strcmp>$/;"	l
c0104f51	obj/kernel.asm	/^c0104f51:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104f54	obj/kernel.asm	/^c0104f54:	85 c0                	test   %eax,%eax$/;"	l
c0104f56	obj/kernel.asm	/^c0104f56:	74 19                	je     c0104f71 <check_boot_pgdir+0x267>$/;"	l
c0104f58	obj/kernel.asm	/^c0104f58:	68 c4 da 10 c0       	push   $0xc010dac4$/;"	l
c0104f5d	obj/kernel.asm	/^c0104f5d:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104f62	obj/kernel.asm	/^c0104f62:	68 ca 02 00 00       	push   $0x2ca$/;"	l
c0104f67	obj/kernel.asm	/^c0104f67:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104f6c	obj/kernel.asm	/^c0104f6c:	e8 6e b4 ff ff       	call   c01003df <__panic>$/;"	l
c0104f71	obj/kernel.asm	/^c0104f71:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104f74	obj/kernel.asm	/^c0104f74:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104f77	obj/kernel.asm	/^c0104f77:	e8 40 e7 ff ff       	call   c01036bc <page2kva>$/;"	l
c0104f7c	obj/kernel.asm	/^c0104f7c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104f7f	obj/kernel.asm	/^c0104f7f:	05 00 01 00 00       	add    $0x100,%eax$/;"	l
c0104f84	obj/kernel.asm	/^c0104f84:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0104f87	obj/kernel.asm	/^c0104f87:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104f8a	obj/kernel.asm	/^c0104f8a:	68 00 01 00 00       	push   $0x100$/;"	l
c0104f8f	obj/kernel.asm	/^c0104f8f:	e8 33 70 00 00       	call   c010bfc7 <strlen>$/;"	l
c0104f94	obj/kernel.asm	/^c0104f94:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104f97	obj/kernel.asm	/^c0104f97:	85 c0                	test   %eax,%eax$/;"	l
c0104f99	obj/kernel.asm	/^c0104f99:	74 19                	je     c0104fb4 <check_boot_pgdir+0x2aa>$/;"	l
c0104f9b	obj/kernel.asm	/^c0104f9b:	68 fc da 10 c0       	push   $0xc010dafc$/;"	l
c0104fa0	obj/kernel.asm	/^c0104fa0:	68 2d d6 10 c0       	push   $0xc010d62d$/;"	l
c0104fa5	obj/kernel.asm	/^c0104fa5:	68 cd 02 00 00       	push   $0x2cd$/;"	l
c0104faa	obj/kernel.asm	/^c0104faa:	68 08 d6 10 c0       	push   $0xc010d608$/;"	l
c0104faf	obj/kernel.asm	/^c0104faf:	e8 2b b4 ff ff       	call   c01003df <__panic>$/;"	l
c0104fb4	obj/kernel.asm	/^c0104fb4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104fb7	obj/kernel.asm	/^c0104fb7:	6a 01                	push   $0x1$/;"	l
c0104fb9	obj/kernel.asm	/^c0104fb9:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104fbc	obj/kernel.asm	/^c0104fbc:	e8 09 ea ff ff       	call   c01039ca <free_pages>$/;"	l
c0104fc1	obj/kernel.asm	/^c0104fc1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104fc4	obj/kernel.asm	/^c0104fc4:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104fc9	obj/kernel.asm	/^c0104fc9:	8b 00                	mov    (%eax),%eax$/;"	l
c0104fcb	obj/kernel.asm	/^c0104fcb:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104fd0	obj/kernel.asm	/^c0104fd0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104fd3	obj/kernel.asm	/^c0104fd3:	50                   	push   %eax$/;"	l
c0104fd4	obj/kernel.asm	/^c0104fd4:	e8 a6 e6 ff ff       	call   c010367f <pa2page>$/;"	l
c0104fd9	obj/kernel.asm	/^c0104fd9:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104fdc	obj/kernel.asm	/^c0104fdc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104fdf	obj/kernel.asm	/^c0104fdf:	6a 01                	push   $0x1$/;"	l
c0104fe1	obj/kernel.asm	/^c0104fe1:	50                   	push   %eax$/;"	l
c0104fe2	obj/kernel.asm	/^c0104fe2:	e8 e3 e9 ff ff       	call   c01039ca <free_pages>$/;"	l
c0104fe7	obj/kernel.asm	/^c0104fe7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104fea	obj/kernel.asm	/^c0104fea:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c0104fef	obj/kernel.asm	/^c0104fef:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0104ff5	obj/kernel.asm	/^c0104ff5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104ff8	obj/kernel.asm	/^c0104ff8:	68 20 db 10 c0       	push   $0xc010db20$/;"	l
c0104ffd	obj/kernel.asm	/^c0104ffd:	e8 78 b2 ff ff       	call   c010027a <cprintf>$/;"	l
c0105002	obj/kernel.asm	/^c0105002:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105005	obj/kernel.asm	/^c0105005:	c9                   	leave  $/;"	l
c0105006	obj/kernel.asm	/^c0105006:	c3                   	ret    $/;"	l
c0105007	obj/kernel.asm	/^c0105007 <perm2str>:$/;"	l
c0105007	obj/kernel.asm	/^c0105007:	55                   	push   %ebp$/;"	l
c0105008	obj/kernel.asm	/^c0105008:	89 e5                	mov    %esp,%ebp$/;"	l
c010500a	obj/kernel.asm	/^c010500a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010500d	obj/kernel.asm	/^c010500d:	83 e0 04             	and    $0x4,%eax$/;"	l
c0105010	obj/kernel.asm	/^c0105010:	85 c0                	test   %eax,%eax$/;"	l
c0105012	obj/kernel.asm	/^c0105012:	74 07                	je     c010501b <perm2str+0x14>$/;"	l
c0105014	obj/kernel.asm	/^c0105014:	b8 75 00 00 00       	mov    $0x75,%eax$/;"	l
c0105019	obj/kernel.asm	/^c0105019:	eb 05                	jmp    c0105020 <perm2str+0x19>$/;"	l
c010501b	obj/kernel.asm	/^c010501b:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c0105020	obj/kernel.asm	/^c0105020:	a2 68 24 1c c0       	mov    %al,0xc01c2468$/;"	l
c0105025	obj/kernel.asm	/^c0105025:	c6 05 69 24 1c c0 72 	movb   $0x72,0xc01c2469$/;"	l
c010502c	obj/kernel.asm	/^c010502c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010502f	obj/kernel.asm	/^c010502f:	83 e0 02             	and    $0x2,%eax$/;"	l
c0105032	obj/kernel.asm	/^c0105032:	85 c0                	test   %eax,%eax$/;"	l
c0105034	obj/kernel.asm	/^c0105034:	74 07                	je     c010503d <perm2str+0x36>$/;"	l
c0105036	obj/kernel.asm	/^c0105036:	b8 77 00 00 00       	mov    $0x77,%eax$/;"	l
c010503b	obj/kernel.asm	/^c010503b:	eb 05                	jmp    c0105042 <perm2str+0x3b>$/;"	l
c010503d	obj/kernel.asm	/^c010503d:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c0105042	obj/kernel.asm	/^c0105042:	a2 6a 24 1c c0       	mov    %al,0xc01c246a$/;"	l
c0105047	obj/kernel.asm	/^c0105047:	c6 05 6b 24 1c c0 00 	movb   $0x0,0xc01c246b$/;"	l
c010504e	obj/kernel.asm	/^c010504e:	b8 68 24 1c c0       	mov    $0xc01c2468,%eax$/;"	l
c0105053	obj/kernel.asm	/^c0105053:	5d                   	pop    %ebp$/;"	l
c0105054	obj/kernel.asm	/^c0105054:	c3                   	ret    $/;"	l
c0105055	obj/kernel.asm	/^c0105055 <get_pgtable_items>:$/;"	l
c0105055	obj/kernel.asm	/^c0105055:	55                   	push   %ebp$/;"	l
c0105056	obj/kernel.asm	/^c0105056:	89 e5                	mov    %esp,%ebp$/;"	l
c0105058	obj/kernel.asm	/^c0105058:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010505b	obj/kernel.asm	/^c010505b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010505e	obj/kernel.asm	/^c010505e:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0105061	obj/kernel.asm	/^c0105061:	72 0a                	jb     c010506d <get_pgtable_items+0x18>$/;"	l
c0105063	obj/kernel.asm	/^c0105063:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105068	obj/kernel.asm	/^c0105068:	e9 9c 00 00 00       	jmp    c0105109 <get_pgtable_items+0xb4>$/;"	l
c010506d	obj/kernel.asm	/^c010506d:	eb 04                	jmp    c0105073 <get_pgtable_items+0x1e>$/;"	l
c010506f	obj/kernel.asm	/^c010506f:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0105073	obj/kernel.asm	/^c0105073:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105076	obj/kernel.asm	/^c0105076:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0105079	obj/kernel.asm	/^c0105079:	73 18                	jae    c0105093 <get_pgtable_items+0x3e>$/;"	l
c010507b	obj/kernel.asm	/^c010507b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010507e	obj/kernel.asm	/^c010507e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0105085	obj/kernel.asm	/^c0105085:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0105088	obj/kernel.asm	/^c0105088:	01 d0                	add    %edx,%eax$/;"	l
c010508a	obj/kernel.asm	/^c010508a:	8b 00                	mov    (%eax),%eax$/;"	l
c010508c	obj/kernel.asm	/^c010508c:	83 e0 01             	and    $0x1,%eax$/;"	l
c010508f	obj/kernel.asm	/^c010508f:	85 c0                	test   %eax,%eax$/;"	l
c0105091	obj/kernel.asm	/^c0105091:	74 dc                	je     c010506f <get_pgtable_items+0x1a>$/;"	l
c0105093	obj/kernel.asm	/^c0105093:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105096	obj/kernel.asm	/^c0105096:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0105099	obj/kernel.asm	/^c0105099:	73 69                	jae    c0105104 <get_pgtable_items+0xaf>$/;"	l
c010509b	obj/kernel.asm	/^c010509b:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c010509f	obj/kernel.asm	/^c010509f:	74 08                	je     c01050a9 <get_pgtable_items+0x54>$/;"	l
c01050a1	obj/kernel.asm	/^c01050a1:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01050a4	obj/kernel.asm	/^c01050a4:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01050a7	obj/kernel.asm	/^c01050a7:	89 10                	mov    %edx,(%eax)$/;"	l
c01050a9	obj/kernel.asm	/^c01050a9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01050ac	obj/kernel.asm	/^c01050ac:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01050af	obj/kernel.asm	/^c01050af:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c01050b2	obj/kernel.asm	/^c01050b2:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c01050b9	obj/kernel.asm	/^c01050b9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01050bc	obj/kernel.asm	/^c01050bc:	01 d0                	add    %edx,%eax$/;"	l
c01050be	obj/kernel.asm	/^c01050be:	8b 00                	mov    (%eax),%eax$/;"	l
c01050c0	obj/kernel.asm	/^c01050c0:	83 e0 07             	and    $0x7,%eax$/;"	l
c01050c3	obj/kernel.asm	/^c01050c3:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01050c6	obj/kernel.asm	/^c01050c6:	eb 04                	jmp    c01050cc <get_pgtable_items+0x77>$/;"	l
c01050c8	obj/kernel.asm	/^c01050c8:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c01050cc	obj/kernel.asm	/^c01050cc:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01050cf	obj/kernel.asm	/^c01050cf:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01050d2	obj/kernel.asm	/^c01050d2:	73 1d                	jae    c01050f1 <get_pgtable_items+0x9c>$/;"	l
c01050d4	obj/kernel.asm	/^c01050d4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01050d7	obj/kernel.asm	/^c01050d7:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c01050de	obj/kernel.asm	/^c01050de:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01050e1	obj/kernel.asm	/^c01050e1:	01 d0                	add    %edx,%eax$/;"	l
c01050e3	obj/kernel.asm	/^c01050e3:	8b 00                	mov    (%eax),%eax$/;"	l
c01050e5	obj/kernel.asm	/^c01050e5:	83 e0 07             	and    $0x7,%eax$/;"	l
c01050e8	obj/kernel.asm	/^c01050e8:	89 c2                	mov    %eax,%edx$/;"	l
c01050ea	obj/kernel.asm	/^c01050ea:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01050ed	obj/kernel.asm	/^c01050ed:	39 c2                	cmp    %eax,%edx$/;"	l
c01050ef	obj/kernel.asm	/^c01050ef:	74 d7                	je     c01050c8 <get_pgtable_items+0x73>$/;"	l
c01050f1	obj/kernel.asm	/^c01050f1:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c01050f5	obj/kernel.asm	/^c01050f5:	74 08                	je     c01050ff <get_pgtable_items+0xaa>$/;"	l
c01050f7	obj/kernel.asm	/^c01050f7:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c01050fa	obj/kernel.asm	/^c01050fa:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01050fd	obj/kernel.asm	/^c01050fd:	89 10                	mov    %edx,(%eax)$/;"	l
c01050ff	obj/kernel.asm	/^c01050ff:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0105102	obj/kernel.asm	/^c0105102:	eb 05                	jmp    c0105109 <get_pgtable_items+0xb4>$/;"	l
c0105104	obj/kernel.asm	/^c0105104:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105109	obj/kernel.asm	/^c0105109:	c9                   	leave  $/;"	l
c010510a	obj/kernel.asm	/^c010510a:	c3                   	ret    $/;"	l
c010510b	obj/kernel.asm	/^c010510b <print_pgdir>:$/;"	l
c010510b	obj/kernel.asm	/^c010510b:	55                   	push   %ebp$/;"	l
c010510c	obj/kernel.asm	/^c010510c:	89 e5                	mov    %esp,%ebp$/;"	l
c010510e	obj/kernel.asm	/^c010510e:	57                   	push   %edi$/;"	l
c010510f	obj/kernel.asm	/^c010510f:	56                   	push   %esi$/;"	l
c0105110	obj/kernel.asm	/^c0105110:	53                   	push   %ebx$/;"	l
c0105111	obj/kernel.asm	/^c0105111:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
c0105114	obj/kernel.asm	/^c0105114:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105117	obj/kernel.asm	/^c0105117:	68 40 db 10 c0       	push   $0xc010db40$/;"	l
c010511c	obj/kernel.asm	/^c010511c:	e8 59 b1 ff ff       	call   c010027a <cprintf>$/;"	l
c0105121	obj/kernel.asm	/^c0105121:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105124	obj/kernel.asm	/^c0105124:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c010512b	obj/kernel.asm	/^c010512b:	e9 e5 00 00 00       	jmp    c0105215 <print_pgdir+0x10a>$/;"	l
c0105130	obj/kernel.asm	/^c0105130:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105133	obj/kernel.asm	/^c0105133:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105136	obj/kernel.asm	/^c0105136:	50                   	push   %eax$/;"	l
c0105137	obj/kernel.asm	/^c0105137:	e8 cb fe ff ff       	call   c0105007 <perm2str>$/;"	l
c010513c	obj/kernel.asm	/^c010513c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010513f	obj/kernel.asm	/^c010513f:	89 c7                	mov    %eax,%edi$/;"	l
c0105141	obj/kernel.asm	/^c0105141:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105144	obj/kernel.asm	/^c0105144:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105147	obj/kernel.asm	/^c0105147:	29 c2                	sub    %eax,%edx$/;"	l
c0105149	obj/kernel.asm	/^c0105149:	89 d0                	mov    %edx,%eax$/;"	l
c010514b	obj/kernel.asm	/^c010514b:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c010514e	obj/kernel.asm	/^c010514e:	89 c3                	mov    %eax,%ebx$/;"	l
c0105150	obj/kernel.asm	/^c0105150:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105153	obj/kernel.asm	/^c0105153:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c0105156	obj/kernel.asm	/^c0105156:	89 c1                	mov    %eax,%ecx$/;"	l
c0105158	obj/kernel.asm	/^c0105158:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010515b	obj/kernel.asm	/^c010515b:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c010515e	obj/kernel.asm	/^c010515e:	89 c2                	mov    %eax,%edx$/;"	l
c0105160	obj/kernel.asm	/^c0105160:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
c0105163	obj/kernel.asm	/^c0105163:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105166	obj/kernel.asm	/^c0105166:	29 c6                	sub    %eax,%esi$/;"	l
c0105168	obj/kernel.asm	/^c0105168:	89 f0                	mov    %esi,%eax$/;"	l
c010516a	obj/kernel.asm	/^c010516a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010516d	obj/kernel.asm	/^c010516d:	57                   	push   %edi$/;"	l
c010516e	obj/kernel.asm	/^c010516e:	53                   	push   %ebx$/;"	l
c010516f	obj/kernel.asm	/^c010516f:	51                   	push   %ecx$/;"	l
c0105170	obj/kernel.asm	/^c0105170:	52                   	push   %edx$/;"	l
c0105171	obj/kernel.asm	/^c0105171:	50                   	push   %eax$/;"	l
c0105172	obj/kernel.asm	/^c0105172:	68 71 db 10 c0       	push   $0xc010db71$/;"	l
c0105177	obj/kernel.asm	/^c0105177:	e8 fe b0 ff ff       	call   c010027a <cprintf>$/;"	l
c010517c	obj/kernel.asm	/^c010517c:	83 c4 20             	add    $0x20,%esp$/;"	l
c010517f	obj/kernel.asm	/^c010517f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105182	obj/kernel.asm	/^c0105182:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
c0105185	obj/kernel.asm	/^c0105185:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0105188	obj/kernel.asm	/^c0105188:	eb 4f                	jmp    c01051d9 <print_pgdir+0xce>$/;"	l
c010518a	obj/kernel.asm	/^c010518a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010518d	obj/kernel.asm	/^c010518d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105190	obj/kernel.asm	/^c0105190:	50                   	push   %eax$/;"	l
c0105191	obj/kernel.asm	/^c0105191:	e8 71 fe ff ff       	call   c0105007 <perm2str>$/;"	l
c0105196	obj/kernel.asm	/^c0105196:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105199	obj/kernel.asm	/^c0105199:	89 c7                	mov    %eax,%edi$/;"	l
c010519b	obj/kernel.asm	/^c010519b:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010519e	obj/kernel.asm	/^c010519e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01051a1	obj/kernel.asm	/^c01051a1:	29 c2                	sub    %eax,%edx$/;"	l
c01051a3	obj/kernel.asm	/^c01051a3:	89 d0                	mov    %edx,%eax$/;"	l
c01051a5	obj/kernel.asm	/^c01051a5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01051a8	obj/kernel.asm	/^c01051a8:	89 c3                	mov    %eax,%ebx$/;"	l
c01051aa	obj/kernel.asm	/^c01051aa:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01051ad	obj/kernel.asm	/^c01051ad:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01051b0	obj/kernel.asm	/^c01051b0:	89 c1                	mov    %eax,%ecx$/;"	l
c01051b2	obj/kernel.asm	/^c01051b2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01051b5	obj/kernel.asm	/^c01051b5:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01051b8	obj/kernel.asm	/^c01051b8:	89 c2                	mov    %eax,%edx$/;"	l
c01051ba	obj/kernel.asm	/^c01051ba:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
c01051bd	obj/kernel.asm	/^c01051bd:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01051c0	obj/kernel.asm	/^c01051c0:	29 c6                	sub    %eax,%esi$/;"	l
c01051c2	obj/kernel.asm	/^c01051c2:	89 f0                	mov    %esi,%eax$/;"	l
c01051c4	obj/kernel.asm	/^c01051c4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01051c7	obj/kernel.asm	/^c01051c7:	57                   	push   %edi$/;"	l
c01051c8	obj/kernel.asm	/^c01051c8:	53                   	push   %ebx$/;"	l
c01051c9	obj/kernel.asm	/^c01051c9:	51                   	push   %ecx$/;"	l
c01051ca	obj/kernel.asm	/^c01051ca:	52                   	push   %edx$/;"	l
c01051cb	obj/kernel.asm	/^c01051cb:	50                   	push   %eax$/;"	l
c01051cc	obj/kernel.asm	/^c01051cc:	68 90 db 10 c0       	push   $0xc010db90$/;"	l
c01051d1	obj/kernel.asm	/^c01051d1:	e8 a4 b0 ff ff       	call   c010027a <cprintf>$/;"	l
c01051d6	obj/kernel.asm	/^c01051d6:	83 c4 20             	add    $0x20,%esp$/;"	l
c01051d9	obj/kernel.asm	/^c01051d9:	be 00 00 c0 fa       	mov    $0xfac00000,%esi$/;"	l
c01051de	obj/kernel.asm	/^c01051de:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01051e1	obj/kernel.asm	/^c01051e1:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01051e4	obj/kernel.asm	/^c01051e4:	89 d3                	mov    %edx,%ebx$/;"	l
c01051e6	obj/kernel.asm	/^c01051e6:	c1 e3 0a             	shl    $0xa,%ebx$/;"	l
c01051e9	obj/kernel.asm	/^c01051e9:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01051ec	obj/kernel.asm	/^c01051ec:	89 d1                	mov    %edx,%ecx$/;"	l
c01051ee	obj/kernel.asm	/^c01051ee:	c1 e1 0a             	shl    $0xa,%ecx$/;"	l
c01051f1	obj/kernel.asm	/^c01051f1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01051f4	obj/kernel.asm	/^c01051f4:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
c01051f7	obj/kernel.asm	/^c01051f7:	52                   	push   %edx$/;"	l
c01051f8	obj/kernel.asm	/^c01051f8:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
c01051fb	obj/kernel.asm	/^c01051fb:	52                   	push   %edx$/;"	l
c01051fc	obj/kernel.asm	/^c01051fc:	56                   	push   %esi$/;"	l
c01051fd	obj/kernel.asm	/^c01051fd:	50                   	push   %eax$/;"	l
c01051fe	obj/kernel.asm	/^c01051fe:	53                   	push   %ebx$/;"	l
c01051ff	obj/kernel.asm	/^c01051ff:	51                   	push   %ecx$/;"	l
c0105200	obj/kernel.asm	/^c0105200:	e8 50 fe ff ff       	call   c0105055 <get_pgtable_items>$/;"	l
c0105205	obj/kernel.asm	/^c0105205:	83 c4 20             	add    $0x20,%esp$/;"	l
c0105208	obj/kernel.asm	/^c0105208:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010520b	obj/kernel.asm	/^c010520b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010520f	obj/kernel.asm	/^c010520f:	0f 85 75 ff ff ff    	jne    c010518a <print_pgdir+0x7f>$/;"	l
c0105215	obj/kernel.asm	/^c0105215:	b9 00 b0 fe fa       	mov    $0xfafeb000,%ecx$/;"	l
c010521a	obj/kernel.asm	/^c010521a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010521d	obj/kernel.asm	/^c010521d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105220	obj/kernel.asm	/^c0105220:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c0105223	obj/kernel.asm	/^c0105223:	52                   	push   %edx$/;"	l
c0105224	obj/kernel.asm	/^c0105224:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
c0105227	obj/kernel.asm	/^c0105227:	52                   	push   %edx$/;"	l
c0105228	obj/kernel.asm	/^c0105228:	51                   	push   %ecx$/;"	l
c0105229	obj/kernel.asm	/^c0105229:	50                   	push   %eax$/;"	l
c010522a	obj/kernel.asm	/^c010522a:	68 00 04 00 00       	push   $0x400$/;"	l
c010522f	obj/kernel.asm	/^c010522f:	6a 00                	push   $0x0$/;"	l
c0105231	obj/kernel.asm	/^c0105231:	e8 1f fe ff ff       	call   c0105055 <get_pgtable_items>$/;"	l
c0105236	obj/kernel.asm	/^c0105236:	83 c4 20             	add    $0x20,%esp$/;"	l
c0105239	obj/kernel.asm	/^c0105239:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010523c	obj/kernel.asm	/^c010523c:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0105240	obj/kernel.asm	/^c0105240:	0f 85 ea fe ff ff    	jne    c0105130 <print_pgdir+0x25>$/;"	l
c0105246	obj/kernel.asm	/^c0105246:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105249	obj/kernel.asm	/^c0105249:	68 b4 db 10 c0       	push   $0xc010dbb4$/;"	l
c010524e	obj/kernel.asm	/^c010524e:	e8 27 b0 ff ff       	call   c010027a <cprintf>$/;"	l
c0105253	obj/kernel.asm	/^c0105253:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105256	obj/kernel.asm	/^c0105256:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
c0105259	obj/kernel.asm	/^c0105259:	5b                   	pop    %ebx$/;"	l
c010525a	obj/kernel.asm	/^c010525a:	5e                   	pop    %esi$/;"	l
c010525b	obj/kernel.asm	/^c010525b:	5f                   	pop    %edi$/;"	l
c010525c	obj/kernel.asm	/^c010525c:	5d                   	pop    %ebp$/;"	l
c010525d	obj/kernel.asm	/^c010525d:	c3                   	ret    $/;"	l
c010525e	obj/kernel.asm	/^c010525e <mm_count>:$/;"	l
c010525e	obj/kernel.asm	/^c010525e:	55                   	push   %ebp$/;"	l
c010525f	obj/kernel.asm	/^c010525f:	89 e5                	mov    %esp,%ebp$/;"	l
c0105261	obj/kernel.asm	/^c0105261:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105264	obj/kernel.asm	/^c0105264:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0105267	obj/kernel.asm	/^c0105267:	5d                   	pop    %ebp$/;"	l
c0105268	obj/kernel.asm	/^c0105268:	c3                   	ret    $/;"	l
c0105269	obj/kernel.asm	/^c0105269 <set_mm_count>:$/;"	l
c0105269	obj/kernel.asm	/^c0105269:	55                   	push   %ebp$/;"	l
c010526a	obj/kernel.asm	/^c010526a:	89 e5                	mov    %esp,%ebp$/;"	l
c010526c	obj/kernel.asm	/^c010526c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010526f	obj/kernel.asm	/^c010526f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105272	obj/kernel.asm	/^c0105272:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0105275	obj/kernel.asm	/^c0105275:	5d                   	pop    %ebp$/;"	l
c0105276	obj/kernel.asm	/^c0105276:	c3                   	ret    $/;"	l
c0105277	obj/kernel.asm	/^c0105277 <pa2page>:$/;"	l
c0105277	obj/kernel.asm	/^c0105277:	55                   	push   %ebp$/;"	l
c0105278	obj/kernel.asm	/^c0105278:	89 e5                	mov    %esp,%ebp$/;"	l
c010527a	obj/kernel.asm	/^c010527a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010527d	obj/kernel.asm	/^c010527d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105280	obj/kernel.asm	/^c0105280:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0105283	obj/kernel.asm	/^c0105283:	89 c2                	mov    %eax,%edx$/;"	l
c0105285	obj/kernel.asm	/^c0105285:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c010528a	obj/kernel.asm	/^c010528a:	39 c2                	cmp    %eax,%edx$/;"	l
c010528c	obj/kernel.asm	/^c010528c:	72 14                	jb     c01052a2 <pa2page+0x2b>$/;"	l
c010528e	obj/kernel.asm	/^c010528e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105291	obj/kernel.asm	/^c0105291:	68 e8 db 10 c0       	push   $0xc010dbe8$/;"	l
c0105296	obj/kernel.asm	/^c0105296:	6a 5e                	push   $0x5e$/;"	l
c0105298	obj/kernel.asm	/^c0105298:	68 07 dc 10 c0       	push   $0xc010dc07$/;"	l
c010529d	obj/kernel.asm	/^c010529d:	e8 3d b1 ff ff       	call   c01003df <__panic>$/;"	l
c01052a2	obj/kernel.asm	/^c01052a2:	a1 98 45 1c c0       	mov    0xc01c4598,%eax$/;"	l
c01052a7	obj/kernel.asm	/^c01052a7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01052aa	obj/kernel.asm	/^c01052aa:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c01052ad	obj/kernel.asm	/^c01052ad:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c01052b0	obj/kernel.asm	/^c01052b0:	01 d0                	add    %edx,%eax$/;"	l
c01052b2	obj/kernel.asm	/^c01052b2:	c9                   	leave  $/;"	l
c01052b3	obj/kernel.asm	/^c01052b3:	c3                   	ret    $/;"	l
c01052b4	obj/kernel.asm	/^c01052b4 <mm_create>:$/;"	l
c01052b4	obj/kernel.asm	/^c01052b4:	55                   	push   %ebp$/;"	l
c01052b5	obj/kernel.asm	/^c01052b5:	89 e5                	mov    %esp,%ebp$/;"	l
c01052b7	obj/kernel.asm	/^c01052b7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01052ba	obj/kernel.asm	/^c01052ba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01052bd	obj/kernel.asm	/^c01052bd:	6a 2c                	push   $0x2c$/;"	l
c01052bf	obj/kernel.asm	/^c01052bf:	e8 28 21 00 00       	call   c01073ec <kmalloc>$/;"	l
c01052c4	obj/kernel.asm	/^c01052c4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01052c7	obj/kernel.asm	/^c01052c7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01052ca	obj/kernel.asm	/^c01052ca:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01052ce	obj/kernel.asm	/^c01052ce:	74 7f                	je     c010534f <mm_create+0x9b>$/;"	l
c01052d0	obj/kernel.asm	/^c01052d0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01052d3	obj/kernel.asm	/^c01052d3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01052d6	obj/kernel.asm	/^c01052d6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01052d9	obj/kernel.asm	/^c01052d9:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01052dc	obj/kernel.asm	/^c01052dc:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01052df	obj/kernel.asm	/^c01052df:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01052e2	obj/kernel.asm	/^c01052e2:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01052e5	obj/kernel.asm	/^c01052e5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01052e8	obj/kernel.asm	/^c01052e8:	89 10                	mov    %edx,(%eax)$/;"	l
c01052ea	obj/kernel.asm	/^c01052ea:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01052ed	obj/kernel.asm	/^c01052ed:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c01052f4	obj/kernel.asm	/^c01052f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01052f7	obj/kernel.asm	/^c01052f7:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c01052fe	obj/kernel.asm	/^c01052fe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105301	obj/kernel.asm	/^c0105301:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c0105308	obj/kernel.asm	/^c0105308:	a1 70 24 1c c0       	mov    0xc01c2470,%eax$/;"	l
c010530d	obj/kernel.asm	/^c010530d:	85 c0                	test   %eax,%eax$/;"	l
c010530f	obj/kernel.asm	/^c010530f:	74 10                	je     c0105321 <mm_create+0x6d>$/;"	l
c0105311	obj/kernel.asm	/^c0105311:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105314	obj/kernel.asm	/^c0105314:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0105317	obj/kernel.asm	/^c0105317:	e8 0c 11 00 00       	call   c0106428 <swap_init_mm>$/;"	l
c010531c	obj/kernel.asm	/^c010531c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010531f	obj/kernel.asm	/^c010531f:	eb 0a                	jmp    c010532b <mm_create+0x77>$/;"	l
c0105321	obj/kernel.asm	/^c0105321:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105324	obj/kernel.asm	/^c0105324:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c010532b	obj/kernel.asm	/^c010532b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010532e	obj/kernel.asm	/^c010532e:	6a 00                	push   $0x0$/;"	l
c0105330	obj/kernel.asm	/^c0105330:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0105333	obj/kernel.asm	/^c0105333:	e8 31 ff ff ff       	call   c0105269 <set_mm_count>$/;"	l
c0105338	obj/kernel.asm	/^c0105338:	83 c4 10             	add    $0x10,%esp$/;"	l
c010533b	obj/kernel.asm	/^c010533b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010533e	obj/kernel.asm	/^c010533e:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0105341	obj/kernel.asm	/^c0105341:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105344	obj/kernel.asm	/^c0105344:	6a 01                	push   $0x1$/;"	l
c0105346	obj/kernel.asm	/^c0105346:	50                   	push   %eax$/;"	l
c0105347	obj/kernel.asm	/^c0105347:	e8 78 40 00 00       	call   c01093c4 <sem_init>$/;"	l
c010534c	obj/kernel.asm	/^c010534c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010534f	obj/kernel.asm	/^c010534f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105352	obj/kernel.asm	/^c0105352:	c9                   	leave  $/;"	l
c0105353	obj/kernel.asm	/^c0105353:	c3                   	ret    $/;"	l
c0105354	obj/kernel.asm	/^c0105354 <vma_create>:$/;"	l
c0105354	obj/kernel.asm	/^c0105354:	55                   	push   %ebp$/;"	l
c0105355	obj/kernel.asm	/^c0105355:	89 e5                	mov    %esp,%ebp$/;"	l
c0105357	obj/kernel.asm	/^c0105357:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010535a	obj/kernel.asm	/^c010535a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010535d	obj/kernel.asm	/^c010535d:	6a 18                	push   $0x18$/;"	l
c010535f	obj/kernel.asm	/^c010535f:	e8 88 20 00 00       	call   c01073ec <kmalloc>$/;"	l
c0105364	obj/kernel.asm	/^c0105364:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105367	obj/kernel.asm	/^c0105367:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010536a	obj/kernel.asm	/^c010536a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010536e	obj/kernel.asm	/^c010536e:	74 1b                	je     c010538b <vma_create+0x37>$/;"	l
c0105370	obj/kernel.asm	/^c0105370:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105373	obj/kernel.asm	/^c0105373:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0105376	obj/kernel.asm	/^c0105376:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0105379	obj/kernel.asm	/^c0105379:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010537c	obj/kernel.asm	/^c010537c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010537f	obj/kernel.asm	/^c010537f:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0105382	obj/kernel.asm	/^c0105382:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105385	obj/kernel.asm	/^c0105385:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0105388	obj/kernel.asm	/^c0105388:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010538b	obj/kernel.asm	/^c010538b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010538e	obj/kernel.asm	/^c010538e:	c9                   	leave  $/;"	l
c010538f	obj/kernel.asm	/^c010538f:	c3                   	ret    $/;"	l
c0105390	obj/kernel.asm	/^c0105390 <find_vma>:$/;"	l
c0105390	obj/kernel.asm	/^c0105390:	55                   	push   %ebp$/;"	l
c0105391	obj/kernel.asm	/^c0105391:	89 e5                	mov    %esp,%ebp$/;"	l
c0105393	obj/kernel.asm	/^c0105393:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0105396	obj/kernel.asm	/^c0105396:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010539d	obj/kernel.asm	/^c010539d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01053a1	obj/kernel.asm	/^c01053a1:	0f 84 95 00 00 00    	je     c010543c <find_vma+0xac>$/;"	l
c01053a7	obj/kernel.asm	/^c01053a7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01053aa	obj/kernel.asm	/^c01053aa:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01053ad	obj/kernel.asm	/^c01053ad:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01053b0	obj/kernel.asm	/^c01053b0:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c01053b4	obj/kernel.asm	/^c01053b4:	74 16                	je     c01053cc <find_vma+0x3c>$/;"	l
c01053b6	obj/kernel.asm	/^c01053b6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01053b9	obj/kernel.asm	/^c01053b9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01053bc	obj/kernel.asm	/^c01053bc:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01053bf	obj/kernel.asm	/^c01053bf:	77 0b                	ja     c01053cc <find_vma+0x3c>$/;"	l
c01053c1	obj/kernel.asm	/^c01053c1:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01053c4	obj/kernel.asm	/^c01053c4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01053c7	obj/kernel.asm	/^c01053c7:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01053ca	obj/kernel.asm	/^c01053ca:	77 61                	ja     c010542d <find_vma+0x9d>$/;"	l
c01053cc	obj/kernel.asm	/^c01053cc:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c01053d3	obj/kernel.asm	/^c01053d3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01053d6	obj/kernel.asm	/^c01053d6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01053d9	obj/kernel.asm	/^c01053d9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01053dc	obj/kernel.asm	/^c01053dc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01053df	obj/kernel.asm	/^c01053df:	eb 28                	jmp    c0105409 <find_vma+0x79>$/;"	l
c01053e1	obj/kernel.asm	/^c01053e1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01053e4	obj/kernel.asm	/^c01053e4:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01053e7	obj/kernel.asm	/^c01053e7:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01053ea	obj/kernel.asm	/^c01053ea:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01053ed	obj/kernel.asm	/^c01053ed:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01053f0	obj/kernel.asm	/^c01053f0:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01053f3	obj/kernel.asm	/^c01053f3:	77 14                	ja     c0105409 <find_vma+0x79>$/;"	l
c01053f5	obj/kernel.asm	/^c01053f5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01053f8	obj/kernel.asm	/^c01053f8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01053fb	obj/kernel.asm	/^c01053fb:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01053fe	obj/kernel.asm	/^c01053fe:	76 09                	jbe    c0105409 <find_vma+0x79>$/;"	l
c0105400	obj/kernel.asm	/^c0105400:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%ebp)$/;"	l
c0105407	obj/kernel.asm	/^c0105407:	eb 17                	jmp    c0105420 <find_vma+0x90>$/;"	l
c0105409	obj/kernel.asm	/^c0105409:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010540c	obj/kernel.asm	/^c010540c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010540f	obj/kernel.asm	/^c010540f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105412	obj/kernel.asm	/^c0105412:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105415	obj/kernel.asm	/^c0105415:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105418	obj/kernel.asm	/^c0105418:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010541b	obj/kernel.asm	/^c010541b:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010541e	obj/kernel.asm	/^c010541e:	75 c1                	jne    c01053e1 <find_vma+0x51>$/;"	l
c0105420	obj/kernel.asm	/^c0105420:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)$/;"	l
c0105424	obj/kernel.asm	/^c0105424:	75 07                	jne    c010542d <find_vma+0x9d>$/;"	l
c0105426	obj/kernel.asm	/^c0105426:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010542d	obj/kernel.asm	/^c010542d:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0105431	obj/kernel.asm	/^c0105431:	74 09                	je     c010543c <find_vma+0xac>$/;"	l
c0105433	obj/kernel.asm	/^c0105433:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105436	obj/kernel.asm	/^c0105436:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0105439	obj/kernel.asm	/^c0105439:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010543c	obj/kernel.asm	/^c010543c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010543f	obj/kernel.asm	/^c010543f:	c9                   	leave  $/;"	l
c0105440	obj/kernel.asm	/^c0105440:	c3                   	ret    $/;"	l
c0105441	obj/kernel.asm	/^c0105441 <check_vma_overlap>:$/;"	l
c0105441	obj/kernel.asm	/^c0105441:	55                   	push   %ebp$/;"	l
c0105442	obj/kernel.asm	/^c0105442:	89 e5                	mov    %esp,%ebp$/;"	l
c0105444	obj/kernel.asm	/^c0105444:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105447	obj/kernel.asm	/^c0105447:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010544a	obj/kernel.asm	/^c010544a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010544d	obj/kernel.asm	/^c010544d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105450	obj/kernel.asm	/^c0105450:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105453	obj/kernel.asm	/^c0105453:	39 c2                	cmp    %eax,%edx$/;"	l
c0105455	obj/kernel.asm	/^c0105455:	72 16                	jb     c010546d <check_vma_overlap+0x2c>$/;"	l
c0105457	obj/kernel.asm	/^c0105457:	68 15 dc 10 c0       	push   $0xc010dc15$/;"	l
c010545c	obj/kernel.asm	/^c010545c:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105461	obj/kernel.asm	/^c0105461:	6a 6b                	push   $0x6b$/;"	l
c0105463	obj/kernel.asm	/^c0105463:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105468	obj/kernel.asm	/^c0105468:	e8 72 af ff ff       	call   c01003df <__panic>$/;"	l
c010546d	obj/kernel.asm	/^c010546d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105470	obj/kernel.asm	/^c0105470:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0105473	obj/kernel.asm	/^c0105473:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105476	obj/kernel.asm	/^c0105476:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105479	obj/kernel.asm	/^c0105479:	39 c2                	cmp    %eax,%edx$/;"	l
c010547b	obj/kernel.asm	/^c010547b:	76 16                	jbe    c0105493 <check_vma_overlap+0x52>$/;"	l
c010547d	obj/kernel.asm	/^c010547d:	68 58 dc 10 c0       	push   $0xc010dc58$/;"	l
c0105482	obj/kernel.asm	/^c0105482:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105487	obj/kernel.asm	/^c0105487:	6a 6c                	push   $0x6c$/;"	l
c0105489	obj/kernel.asm	/^c0105489:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c010548e	obj/kernel.asm	/^c010548e:	e8 4c af ff ff       	call   c01003df <__panic>$/;"	l
c0105493	obj/kernel.asm	/^c0105493:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105496	obj/kernel.asm	/^c0105496:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0105499	obj/kernel.asm	/^c0105499:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010549c	obj/kernel.asm	/^c010549c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010549f	obj/kernel.asm	/^c010549f:	39 c2                	cmp    %eax,%edx$/;"	l
c01054a1	obj/kernel.asm	/^c01054a1:	72 16                	jb     c01054b9 <check_vma_overlap+0x78>$/;"	l
c01054a3	obj/kernel.asm	/^c01054a3:	68 77 dc 10 c0       	push   $0xc010dc77$/;"	l
c01054a8	obj/kernel.asm	/^c01054a8:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c01054ad	obj/kernel.asm	/^c01054ad:	6a 6d                	push   $0x6d$/;"	l
c01054af	obj/kernel.asm	/^c01054af:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c01054b4	obj/kernel.asm	/^c01054b4:	e8 26 af ff ff       	call   c01003df <__panic>$/;"	l
c01054b9	obj/kernel.asm	/^c01054b9:	c9                   	leave  $/;"	l
c01054ba	obj/kernel.asm	/^c01054ba:	c3                   	ret    $/;"	l
c01054bb	obj/kernel.asm	/^c01054bb <insert_vma_struct>:$/;"	l
c01054bb	obj/kernel.asm	/^c01054bb:	55                   	push   %ebp$/;"	l
c01054bc	obj/kernel.asm	/^c01054bc:	89 e5                	mov    %esp,%ebp$/;"	l
c01054be	obj/kernel.asm	/^c01054be:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01054c1	obj/kernel.asm	/^c01054c1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01054c4	obj/kernel.asm	/^c01054c4:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01054c7	obj/kernel.asm	/^c01054c7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01054ca	obj/kernel.asm	/^c01054ca:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01054cd	obj/kernel.asm	/^c01054cd:	39 c2                	cmp    %eax,%edx$/;"	l
c01054cf	obj/kernel.asm	/^c01054cf:	72 16                	jb     c01054e7 <insert_vma_struct+0x2c>$/;"	l
c01054d1	obj/kernel.asm	/^c01054d1:	68 95 dc 10 c0       	push   $0xc010dc95$/;"	l
c01054d6	obj/kernel.asm	/^c01054d6:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c01054db	obj/kernel.asm	/^c01054db:	6a 74                	push   $0x74$/;"	l
c01054dd	obj/kernel.asm	/^c01054dd:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c01054e2	obj/kernel.asm	/^c01054e2:	e8 f8 ae ff ff       	call   c01003df <__panic>$/;"	l
c01054e7	obj/kernel.asm	/^c01054e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01054ea	obj/kernel.asm	/^c01054ea:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01054ed	obj/kernel.asm	/^c01054ed:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01054f0	obj/kernel.asm	/^c01054f0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01054f3	obj/kernel.asm	/^c01054f3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01054f6	obj/kernel.asm	/^c01054f6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01054f9	obj/kernel.asm	/^c01054f9:	eb 21                	jmp    c010551c <insert_vma_struct+0x61>$/;"	l
c01054fb	obj/kernel.asm	/^c01054fb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01054fe	obj/kernel.asm	/^c01054fe:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105501	obj/kernel.asm	/^c0105501:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105504	obj/kernel.asm	/^c0105504:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105507	obj/kernel.asm	/^c0105507:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010550a	obj/kernel.asm	/^c010550a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010550d	obj/kernel.asm	/^c010550d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105510	obj/kernel.asm	/^c0105510:	39 c2                	cmp    %eax,%edx$/;"	l
c0105512	obj/kernel.asm	/^c0105512:	76 02                	jbe    c0105516 <insert_vma_struct+0x5b>$/;"	l
c0105514	obj/kernel.asm	/^c0105514:	eb 1d                	jmp    c0105533 <insert_vma_struct+0x78>$/;"	l
c0105516	obj/kernel.asm	/^c0105516:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105519	obj/kernel.asm	/^c0105519:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010551c	obj/kernel.asm	/^c010551c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010551f	obj/kernel.asm	/^c010551f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105522	obj/kernel.asm	/^c0105522:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105525	obj/kernel.asm	/^c0105525:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105528	obj/kernel.asm	/^c0105528:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010552b	obj/kernel.asm	/^c010552b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010552e	obj/kernel.asm	/^c010552e:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0105531	obj/kernel.asm	/^c0105531:	75 c8                	jne    c01054fb <insert_vma_struct+0x40>$/;"	l
c0105533	obj/kernel.asm	/^c0105533:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105536	obj/kernel.asm	/^c0105536:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105539	obj/kernel.asm	/^c0105539:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010553c	obj/kernel.asm	/^c010553c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010553f	obj/kernel.asm	/^c010553f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105542	obj/kernel.asm	/^c0105542:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105545	obj/kernel.asm	/^c0105545:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0105548	obj/kernel.asm	/^c0105548:	74 15                	je     c010555f <insert_vma_struct+0xa4>$/;"	l
c010554a	obj/kernel.asm	/^c010554a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010554d	obj/kernel.asm	/^c010554d:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105550	obj/kernel.asm	/^c0105550:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105553	obj/kernel.asm	/^c0105553:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0105556	obj/kernel.asm	/^c0105556:	50                   	push   %eax$/;"	l
c0105557	obj/kernel.asm	/^c0105557:	e8 e5 fe ff ff       	call   c0105441 <check_vma_overlap>$/;"	l
c010555c	obj/kernel.asm	/^c010555c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010555f	obj/kernel.asm	/^c010555f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105562	obj/kernel.asm	/^c0105562:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0105565	obj/kernel.asm	/^c0105565:	74 15                	je     c010557c <insert_vma_struct+0xc1>$/;"	l
c0105567	obj/kernel.asm	/^c0105567:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010556a	obj/kernel.asm	/^c010556a:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010556d	obj/kernel.asm	/^c010556d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105570	obj/kernel.asm	/^c0105570:	50                   	push   %eax$/;"	l
c0105571	obj/kernel.asm	/^c0105571:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0105574	obj/kernel.asm	/^c0105574:	e8 c8 fe ff ff       	call   c0105441 <check_vma_overlap>$/;"	l
c0105579	obj/kernel.asm	/^c0105579:	83 c4 10             	add    $0x10,%esp$/;"	l
c010557c	obj/kernel.asm	/^c010557c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010557f	obj/kernel.asm	/^c010557f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0105582	obj/kernel.asm	/^c0105582:	89 10                	mov    %edx,(%eax)$/;"	l
c0105584	obj/kernel.asm	/^c0105584:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105587	obj/kernel.asm	/^c0105587:	8d 50 10             	lea    0x10(%eax),%edx$/;"	l
c010558a	obj/kernel.asm	/^c010558a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010558d	obj/kernel.asm	/^c010558d:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0105590	obj/kernel.asm	/^c0105590:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0105593	obj/kernel.asm	/^c0105593:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0105596	obj/kernel.asm	/^c0105596:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105599	obj/kernel.asm	/^c0105599:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010559c	obj/kernel.asm	/^c010559c:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
c010559f	obj/kernel.asm	/^c010559f:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c01055a2	obj/kernel.asm	/^c01055a2:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c01055a5	obj/kernel.asm	/^c01055a5:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01055a8	obj/kernel.asm	/^c01055a8:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01055ab	obj/kernel.asm	/^c01055ab:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c01055ae	obj/kernel.asm	/^c01055ae:	89 10                	mov    %edx,(%eax)$/;"	l
c01055b0	obj/kernel.asm	/^c01055b0:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01055b3	obj/kernel.asm	/^c01055b3:	8b 10                	mov    (%eax),%edx$/;"	l
c01055b5	obj/kernel.asm	/^c01055b5:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01055b8	obj/kernel.asm	/^c01055b8:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01055bb	obj/kernel.asm	/^c01055bb:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01055be	obj/kernel.asm	/^c01055be:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c01055c1	obj/kernel.asm	/^c01055c1:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01055c4	obj/kernel.asm	/^c01055c4:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01055c7	obj/kernel.asm	/^c01055c7:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01055ca	obj/kernel.asm	/^c01055ca:	89 10                	mov    %edx,(%eax)$/;"	l
c01055cc	obj/kernel.asm	/^c01055cc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01055cf	obj/kernel.asm	/^c01055cf:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01055d2	obj/kernel.asm	/^c01055d2:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01055d5	obj/kernel.asm	/^c01055d5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01055d8	obj/kernel.asm	/^c01055d8:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01055db	obj/kernel.asm	/^c01055db:	c9                   	leave  $/;"	l
c01055dc	obj/kernel.asm	/^c01055dc:	c3                   	ret    $/;"	l
c01055dd	obj/kernel.asm	/^c01055dd <mm_destroy>:$/;"	l
c01055dd	obj/kernel.asm	/^c01055dd:	55                   	push   %ebp$/;"	l
c01055de	obj/kernel.asm	/^c01055de:	89 e5                	mov    %esp,%ebp$/;"	l
c01055e0	obj/kernel.asm	/^c01055e0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01055e3	obj/kernel.asm	/^c01055e3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01055e6	obj/kernel.asm	/^c01055e6:	e8 73 fc ff ff       	call   c010525e <mm_count>$/;"	l
c01055eb	obj/kernel.asm	/^c01055eb:	83 c4 04             	add    $0x4,%esp$/;"	l
c01055ee	obj/kernel.asm	/^c01055ee:	85 c0                	test   %eax,%eax$/;"	l
c01055f0	obj/kernel.asm	/^c01055f0:	74 19                	je     c010560b <mm_destroy+0x2e>$/;"	l
c01055f2	obj/kernel.asm	/^c01055f2:	68 b1 dc 10 c0       	push   $0xc010dcb1$/;"	l
c01055f7	obj/kernel.asm	/^c01055f7:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c01055fc	obj/kernel.asm	/^c01055fc:	68 94 00 00 00       	push   $0x94$/;"	l
c0105601	obj/kernel.asm	/^c0105601:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105606	obj/kernel.asm	/^c0105606:	e8 d4 ad ff ff       	call   c01003df <__panic>$/;"	l
c010560b	obj/kernel.asm	/^c010560b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010560e	obj/kernel.asm	/^c010560e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105611	obj/kernel.asm	/^c0105611:	eb 3a                	jmp    c010564d <mm_destroy+0x70>$/;"	l
c0105613	obj/kernel.asm	/^c0105613:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105616	obj/kernel.asm	/^c0105616:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105619	obj/kernel.asm	/^c0105619:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010561c	obj/kernel.asm	/^c010561c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010561f	obj/kernel.asm	/^c010561f:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0105622	obj/kernel.asm	/^c0105622:	8b 12                	mov    (%edx),%edx$/;"	l
c0105624	obj/kernel.asm	/^c0105624:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c0105627	obj/kernel.asm	/^c0105627:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010562a	obj/kernel.asm	/^c010562a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010562d	obj/kernel.asm	/^c010562d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0105630	obj/kernel.asm	/^c0105630:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0105633	obj/kernel.asm	/^c0105633:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105636	obj/kernel.asm	/^c0105636:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0105639	obj/kernel.asm	/^c0105639:	89 10                	mov    %edx,(%eax)$/;"	l
c010563b	obj/kernel.asm	/^c010563b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010563e	obj/kernel.asm	/^c010563e:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105641	obj/kernel.asm	/^c0105641:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105644	obj/kernel.asm	/^c0105644:	50                   	push   %eax$/;"	l
c0105645	obj/kernel.asm	/^c0105645:	e8 ba 1d 00 00       	call   c0107404 <kfree>$/;"	l
c010564a	obj/kernel.asm	/^c010564a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010564d	obj/kernel.asm	/^c010564d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105650	obj/kernel.asm	/^c0105650:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105653	obj/kernel.asm	/^c0105653:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105656	obj/kernel.asm	/^c0105656:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105659	obj/kernel.asm	/^c0105659:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010565c	obj/kernel.asm	/^c010565c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010565f	obj/kernel.asm	/^c010565f:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0105662	obj/kernel.asm	/^c0105662:	75 af                	jne    c0105613 <mm_destroy+0x36>$/;"	l
c0105664	obj/kernel.asm	/^c0105664:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105667	obj/kernel.asm	/^c0105667:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010566a	obj/kernel.asm	/^c010566a:	e8 95 1d 00 00       	call   c0107404 <kfree>$/;"	l
c010566f	obj/kernel.asm	/^c010566f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105672	obj/kernel.asm	/^c0105672:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)$/;"	l
c0105679	obj/kernel.asm	/^c0105679:	c9                   	leave  $/;"	l
c010567a	obj/kernel.asm	/^c010567a:	c3                   	ret    $/;"	l
c010567b	obj/kernel.asm	/^c010567b <mm_map>:$/;"	l
c010567b	obj/kernel.asm	/^c010567b:	55                   	push   %ebp$/;"	l
c010567c	obj/kernel.asm	/^c010567c:	89 e5                	mov    %esp,%ebp$/;"	l
c010567e	obj/kernel.asm	/^c010567e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105681	obj/kernel.asm	/^c0105681:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105684	obj/kernel.asm	/^c0105684:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105687	obj/kernel.asm	/^c0105687:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010568a	obj/kernel.asm	/^c010568a:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010568f	obj/kernel.asm	/^c010568f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105692	obj/kernel.asm	/^c0105692:	c7 45 e8 00 10 00 00 	movl   $0x1000,-0x18(%ebp)$/;"	l
c0105699	obj/kernel.asm	/^c0105699:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010569c	obj/kernel.asm	/^c010569c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010569f	obj/kernel.asm	/^c010569f:	01 c2                	add    %eax,%edx$/;"	l
c01056a1	obj/kernel.asm	/^c01056a1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01056a4	obj/kernel.asm	/^c01056a4:	01 d0                	add    %edx,%eax$/;"	l
c01056a6	obj/kernel.asm	/^c01056a6:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01056a9	obj/kernel.asm	/^c01056a9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01056ac	obj/kernel.asm	/^c01056ac:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01056af	obj/kernel.asm	/^c01056af:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01056b4	obj/kernel.asm	/^c01056b4:	f7 75 e8             	divl   -0x18(%ebp)$/;"	l
c01056b7	obj/kernel.asm	/^c01056b7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01056ba	obj/kernel.asm	/^c01056ba:	29 d0                	sub    %edx,%eax$/;"	l
c01056bc	obj/kernel.asm	/^c01056bc:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01056bf	obj/kernel.asm	/^c01056bf:	81 7d ec ff ff 1f 00 	cmpl   $0x1fffff,-0x14(%ebp)$/;"	l
c01056c6	obj/kernel.asm	/^c01056c6:	76 11                	jbe    c01056d9 <mm_map+0x5e>$/;"	l
c01056c8	obj/kernel.asm	/^c01056c8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01056cb	obj/kernel.asm	/^c01056cb:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c01056ce	obj/kernel.asm	/^c01056ce:	73 09                	jae    c01056d9 <mm_map+0x5e>$/;"	l
c01056d0	obj/kernel.asm	/^c01056d0:	81 7d e0 00 00 00 b0 	cmpl   $0xb0000000,-0x20(%ebp)$/;"	l
c01056d7	obj/kernel.asm	/^c01056d7:	76 0a                	jbe    c01056e3 <mm_map+0x68>$/;"	l
c01056d9	obj/kernel.asm	/^c01056d9:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01056de	obj/kernel.asm	/^c01056de:	e9 9c 00 00 00       	jmp    c010577f <mm_map+0x104>$/;"	l
c01056e3	obj/kernel.asm	/^c01056e3:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01056e7	obj/kernel.asm	/^c01056e7:	75 19                	jne    c0105702 <mm_map+0x87>$/;"	l
c01056e9	obj/kernel.asm	/^c01056e9:	68 c3 dc 10 c0       	push   $0xc010dcc3$/;"	l
c01056ee	obj/kernel.asm	/^c01056ee:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c01056f3	obj/kernel.asm	/^c01056f3:	68 a7 00 00 00       	push   $0xa7$/;"	l
c01056f8	obj/kernel.asm	/^c01056f8:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c01056fd	obj/kernel.asm	/^c01056fd:	e8 dd ac ff ff       	call   c01003df <__panic>$/;"	l
c0105702	obj/kernel.asm	/^c0105702:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0105709	obj/kernel.asm	/^c0105709:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010570c	obj/kernel.asm	/^c010570c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010570f	obj/kernel.asm	/^c010570f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105712	obj/kernel.asm	/^c0105712:	e8 79 fc ff ff       	call   c0105390 <find_vma>$/;"	l
c0105717	obj/kernel.asm	/^c0105717:	83 c4 10             	add    $0x10,%esp$/;"	l
c010571a	obj/kernel.asm	/^c010571a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010571d	obj/kernel.asm	/^c010571d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0105721	obj/kernel.asm	/^c0105721:	74 0d                	je     c0105730 <mm_map+0xb5>$/;"	l
c0105723	obj/kernel.asm	/^c0105723:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105726	obj/kernel.asm	/^c0105726:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105729	obj/kernel.asm	/^c0105729:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c010572c	obj/kernel.asm	/^c010572c:	73 02                	jae    c0105730 <mm_map+0xb5>$/;"	l
c010572e	obj/kernel.asm	/^c010572e:	eb 4c                	jmp    c010577c <mm_map+0x101>$/;"	l
c0105730	obj/kernel.asm	/^c0105730:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0105737	obj/kernel.asm	/^c0105737:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010573a	obj/kernel.asm	/^c010573a:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010573d	obj/kernel.asm	/^c010573d:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0105740	obj/kernel.asm	/^c0105740:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0105743	obj/kernel.asm	/^c0105743:	e8 0c fc ff ff       	call   c0105354 <vma_create>$/;"	l
c0105748	obj/kernel.asm	/^c0105748:	83 c4 10             	add    $0x10,%esp$/;"	l
c010574b	obj/kernel.asm	/^c010574b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010574e	obj/kernel.asm	/^c010574e:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0105752	obj/kernel.asm	/^c0105752:	75 02                	jne    c0105756 <mm_map+0xdb>$/;"	l
c0105754	obj/kernel.asm	/^c0105754:	eb 26                	jmp    c010577c <mm_map+0x101>$/;"	l
c0105756	obj/kernel.asm	/^c0105756:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105759	obj/kernel.asm	/^c0105759:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c010575c	obj/kernel.asm	/^c010575c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010575f	obj/kernel.asm	/^c010575f:	e8 57 fd ff ff       	call   c01054bb <insert_vma_struct>$/;"	l
c0105764	obj/kernel.asm	/^c0105764:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105767	obj/kernel.asm	/^c0105767:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c010576b	obj/kernel.asm	/^c010576b:	74 08                	je     c0105775 <mm_map+0xfa>$/;"	l
c010576d	obj/kernel.asm	/^c010576d:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0105770	obj/kernel.asm	/^c0105770:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105773	obj/kernel.asm	/^c0105773:	89 10                	mov    %edx,(%eax)$/;"	l
c0105775	obj/kernel.asm	/^c0105775:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010577c	obj/kernel.asm	/^c010577c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010577f	obj/kernel.asm	/^c010577f:	c9                   	leave  $/;"	l
c0105780	obj/kernel.asm	/^c0105780:	c3                   	ret    $/;"	l
c0105781	obj/kernel.asm	/^c0105781 <dup_mmap>:$/;"	l
c0105781	obj/kernel.asm	/^c0105781:	55                   	push   %ebp$/;"	l
c0105782	obj/kernel.asm	/^c0105782:	89 e5                	mov    %esp,%ebp$/;"	l
c0105784	obj/kernel.asm	/^c0105784:	53                   	push   %ebx$/;"	l
c0105785	obj/kernel.asm	/^c0105785:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0105788	obj/kernel.asm	/^c0105788:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010578c	obj/kernel.asm	/^c010578c:	74 06                	je     c0105794 <dup_mmap+0x13>$/;"	l
c010578e	obj/kernel.asm	/^c010578e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0105792	obj/kernel.asm	/^c0105792:	75 19                	jne    c01057ad <dup_mmap+0x2c>$/;"	l
c0105794	obj/kernel.asm	/^c0105794:	68 ce dc 10 c0       	push   $0xc010dcce$/;"	l
c0105799	obj/kernel.asm	/^c0105799:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c010579e	obj/kernel.asm	/^c010579e:	68 c0 00 00 00       	push   $0xc0$/;"	l
c01057a3	obj/kernel.asm	/^c01057a3:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c01057a8	obj/kernel.asm	/^c01057a8:	e8 32 ac ff ff       	call   c01003df <__panic>$/;"	l
c01057ad	obj/kernel.asm	/^c01057ad:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01057b0	obj/kernel.asm	/^c01057b0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01057b3	obj/kernel.asm	/^c01057b3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01057b6	obj/kernel.asm	/^c01057b6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01057b9	obj/kernel.asm	/^c01057b9:	e9 86 00 00 00       	jmp    c0105844 <dup_mmap+0xc3>$/;"	l
c01057be	obj/kernel.asm	/^c01057be:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01057c1	obj/kernel.asm	/^c01057c1:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01057c4	obj/kernel.asm	/^c01057c4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01057c7	obj/kernel.asm	/^c01057c7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01057ca	obj/kernel.asm	/^c01057ca:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c01057cd	obj/kernel.asm	/^c01057cd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01057d0	obj/kernel.asm	/^c01057d0:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01057d3	obj/kernel.asm	/^c01057d3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01057d6	obj/kernel.asm	/^c01057d6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01057d9	obj/kernel.asm	/^c01057d9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01057dc	obj/kernel.asm	/^c01057dc:	51                   	push   %ecx$/;"	l
c01057dd	obj/kernel.asm	/^c01057dd:	52                   	push   %edx$/;"	l
c01057de	obj/kernel.asm	/^c01057de:	50                   	push   %eax$/;"	l
c01057df	obj/kernel.asm	/^c01057df:	e8 70 fb ff ff       	call   c0105354 <vma_create>$/;"	l
c01057e4	obj/kernel.asm	/^c01057e4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01057e7	obj/kernel.asm	/^c01057e7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01057ea	obj/kernel.asm	/^c01057ea:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01057ee	obj/kernel.asm	/^c01057ee:	75 07                	jne    c01057f7 <dup_mmap+0x76>$/;"	l
c01057f0	obj/kernel.asm	/^c01057f0:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01057f5	obj/kernel.asm	/^c01057f5:	eb 6c                	jmp    c0105863 <dup_mmap+0xe2>$/;"	l
c01057f7	obj/kernel.asm	/^c01057f7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01057fa	obj/kernel.asm	/^c01057fa:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c01057fd	obj/kernel.asm	/^c01057fd:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105800	obj/kernel.asm	/^c0105800:	e8 b6 fc ff ff       	call   c01054bb <insert_vma_struct>$/;"	l
c0105805	obj/kernel.asm	/^c0105805:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105808	obj/kernel.asm	/^c0105808:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c010580f	obj/kernel.asm	/^c010580f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105812	obj/kernel.asm	/^c0105812:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c0105815	obj/kernel.asm	/^c0105815:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105818	obj/kernel.asm	/^c0105818:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c010581b	obj/kernel.asm	/^c010581b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010581e	obj/kernel.asm	/^c010581e:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c0105821	obj/kernel.asm	/^c0105821:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105824	obj/kernel.asm	/^c0105824:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0105827	obj/kernel.asm	/^c0105827:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010582a	obj/kernel.asm	/^c010582a:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c010582d	obj/kernel.asm	/^c010582d:	53                   	push   %ebx$/;"	l
c010582e	obj/kernel.asm	/^c010582e:	51                   	push   %ecx$/;"	l
c010582f	obj/kernel.asm	/^c010582f:	52                   	push   %edx$/;"	l
c0105830	obj/kernel.asm	/^c0105830:	50                   	push   %eax$/;"	l
c0105831	obj/kernel.asm	/^c0105831:	e8 81 eb ff ff       	call   c01043b7 <copy_range>$/;"	l
c0105836	obj/kernel.asm	/^c0105836:	83 c4 20             	add    $0x20,%esp$/;"	l
c0105839	obj/kernel.asm	/^c0105839:	85 c0                	test   %eax,%eax$/;"	l
c010583b	obj/kernel.asm	/^c010583b:	74 07                	je     c0105844 <dup_mmap+0xc3>$/;"	l
c010583d	obj/kernel.asm	/^c010583d:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0105842	obj/kernel.asm	/^c0105842:	eb 1f                	jmp    c0105863 <dup_mmap+0xe2>$/;"	l
c0105844	obj/kernel.asm	/^c0105844:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105847	obj/kernel.asm	/^c0105847:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010584a	obj/kernel.asm	/^c010584a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010584d	obj/kernel.asm	/^c010584d:	8b 00                	mov    (%eax),%eax$/;"	l
c010584f	obj/kernel.asm	/^c010584f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105852	obj/kernel.asm	/^c0105852:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105855	obj/kernel.asm	/^c0105855:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0105858	obj/kernel.asm	/^c0105858:	0f 85 60 ff ff ff    	jne    c01057be <dup_mmap+0x3d>$/;"	l
c010585e	obj/kernel.asm	/^c010585e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105863	obj/kernel.asm	/^c0105863:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0105866	obj/kernel.asm	/^c0105866:	c9                   	leave  $/;"	l
c0105867	obj/kernel.asm	/^c0105867:	c3                   	ret    $/;"	l
c0105868	obj/kernel.asm	/^c0105868 <exit_mmap>:$/;"	l
c0105868	obj/kernel.asm	/^c0105868:	55                   	push   %ebp$/;"	l
c0105869	obj/kernel.asm	/^c0105869:	89 e5                	mov    %esp,%ebp$/;"	l
c010586b	obj/kernel.asm	/^c010586b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010586e	obj/kernel.asm	/^c010586e:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0105872	obj/kernel.asm	/^c0105872:	74 0f                	je     c0105883 <exit_mmap+0x1b>$/;"	l
c0105874	obj/kernel.asm	/^c0105874:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105877	obj/kernel.asm	/^c0105877:	e8 e2 f9 ff ff       	call   c010525e <mm_count>$/;"	l
c010587c	obj/kernel.asm	/^c010587c:	83 c4 04             	add    $0x4,%esp$/;"	l
c010587f	obj/kernel.asm	/^c010587f:	85 c0                	test   %eax,%eax$/;"	l
c0105881	obj/kernel.asm	/^c0105881:	74 19                	je     c010589c <exit_mmap+0x34>$/;"	l
c0105883	obj/kernel.asm	/^c0105883:	68 ec dc 10 c0       	push   $0xc010dcec$/;"	l
c0105888	obj/kernel.asm	/^c0105888:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c010588d	obj/kernel.asm	/^c010588d:	68 d6 00 00 00       	push   $0xd6$/;"	l
c0105892	obj/kernel.asm	/^c0105892:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105897	obj/kernel.asm	/^c0105897:	e8 43 ab ff ff       	call   c01003df <__panic>$/;"	l
c010589c	obj/kernel.asm	/^c010589c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010589f	obj/kernel.asm	/^c010589f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01058a2	obj/kernel.asm	/^c01058a2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01058a5	obj/kernel.asm	/^c01058a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01058a8	obj/kernel.asm	/^c01058a8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01058ab	obj/kernel.asm	/^c01058ab:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01058ae	obj/kernel.asm	/^c01058ae:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01058b1	obj/kernel.asm	/^c01058b1:	eb 25                	jmp    c01058d8 <exit_mmap+0x70>$/;"	l
c01058b3	obj/kernel.asm	/^c01058b3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058b6	obj/kernel.asm	/^c01058b6:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01058b9	obj/kernel.asm	/^c01058b9:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01058bc	obj/kernel.asm	/^c01058bc:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01058bf	obj/kernel.asm	/^c01058bf:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01058c2	obj/kernel.asm	/^c01058c2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01058c5	obj/kernel.asm	/^c01058c5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01058c8	obj/kernel.asm	/^c01058c8:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01058cb	obj/kernel.asm	/^c01058cb:	52                   	push   %edx$/;"	l
c01058cc	obj/kernel.asm	/^c01058cc:	50                   	push   %eax$/;"	l
c01058cd	obj/kernel.asm	/^c01058cd:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01058d0	obj/kernel.asm	/^c01058d0:	e8 1d e9 ff ff       	call   c01041f2 <unmap_range>$/;"	l
c01058d5	obj/kernel.asm	/^c01058d5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01058d8	obj/kernel.asm	/^c01058d8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058db	obj/kernel.asm	/^c01058db:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01058de	obj/kernel.asm	/^c01058de:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01058e1	obj/kernel.asm	/^c01058e1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01058e4	obj/kernel.asm	/^c01058e4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01058e7	obj/kernel.asm	/^c01058e7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058ea	obj/kernel.asm	/^c01058ea:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01058ed	obj/kernel.asm	/^c01058ed:	75 c4                	jne    c01058b3 <exit_mmap+0x4b>$/;"	l
c01058ef	obj/kernel.asm	/^c01058ef:	eb 25                	jmp    c0105916 <exit_mmap+0xae>$/;"	l
c01058f1	obj/kernel.asm	/^c01058f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058f4	obj/kernel.asm	/^c01058f4:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01058f7	obj/kernel.asm	/^c01058f7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01058fa	obj/kernel.asm	/^c01058fa:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01058fd	obj/kernel.asm	/^c01058fd:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0105900	obj/kernel.asm	/^c0105900:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105903	obj/kernel.asm	/^c0105903:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105906	obj/kernel.asm	/^c0105906:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105909	obj/kernel.asm	/^c0105909:	52                   	push   %edx$/;"	l
c010590a	obj/kernel.asm	/^c010590a:	50                   	push   %eax$/;"	l
c010590b	obj/kernel.asm	/^c010590b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010590e	obj/kernel.asm	/^c010590e:	e8 b1 e9 ff ff       	call   c01042c4 <exit_range>$/;"	l
c0105913	obj/kernel.asm	/^c0105913:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105916	obj/kernel.asm	/^c0105916:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105919	obj/kernel.asm	/^c0105919:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010591c	obj/kernel.asm	/^c010591c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010591f	obj/kernel.asm	/^c010591f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105922	obj/kernel.asm	/^c0105922:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105925	obj/kernel.asm	/^c0105925:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105928	obj/kernel.asm	/^c0105928:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010592b	obj/kernel.asm	/^c010592b:	75 c4                	jne    c01058f1 <exit_mmap+0x89>$/;"	l
c010592d	obj/kernel.asm	/^c010592d:	c9                   	leave  $/;"	l
c010592e	obj/kernel.asm	/^c010592e:	c3                   	ret    $/;"	l
c010592f	obj/kernel.asm	/^c010592f <copy_from_user>:$/;"	l
c010592f	obj/kernel.asm	/^c010592f:	55                   	push   %ebp$/;"	l
c0105930	obj/kernel.asm	/^c0105930:	89 e5                	mov    %esp,%ebp$/;"	l
c0105932	obj/kernel.asm	/^c0105932:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105935	obj/kernel.asm	/^c0105935:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105938	obj/kernel.asm	/^c0105938:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
c010593b	obj/kernel.asm	/^c010593b:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010593e	obj/kernel.asm	/^c010593e:	50                   	push   %eax$/;"	l
c010593f	obj/kernel.asm	/^c010593f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105942	obj/kernel.asm	/^c0105942:	e8 c7 08 00 00       	call   c010620e <user_mem_check>$/;"	l
c0105947	obj/kernel.asm	/^c0105947:	83 c4 10             	add    $0x10,%esp$/;"	l
c010594a	obj/kernel.asm	/^c010594a:	85 c0                	test   %eax,%eax$/;"	l
c010594c	obj/kernel.asm	/^c010594c:	75 07                	jne    c0105955 <copy_from_user+0x26>$/;"	l
c010594e	obj/kernel.asm	/^c010594e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105953	obj/kernel.asm	/^c0105953:	eb 19                	jmp    c010596e <copy_from_user+0x3f>$/;"	l
c0105955	obj/kernel.asm	/^c0105955:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105958	obj/kernel.asm	/^c0105958:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010595b	obj/kernel.asm	/^c010595b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010595e	obj/kernel.asm	/^c010595e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0105961	obj/kernel.asm	/^c0105961:	e8 75 6a 00 00       	call   c010c3db <memcpy>$/;"	l
c0105966	obj/kernel.asm	/^c0105966:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105969	obj/kernel.asm	/^c0105969:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010596e	obj/kernel.asm	/^c010596e:	c9                   	leave  $/;"	l
c010596f	obj/kernel.asm	/^c010596f:	c3                   	ret    $/;"	l
c0105970	obj/kernel.asm	/^c0105970 <copy_to_user>:$/;"	l
c0105970	obj/kernel.asm	/^c0105970:	55                   	push   %ebp$/;"	l
c0105971	obj/kernel.asm	/^c0105971:	89 e5                	mov    %esp,%ebp$/;"	l
c0105973	obj/kernel.asm	/^c0105973:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105976	obj/kernel.asm	/^c0105976:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105979	obj/kernel.asm	/^c0105979:	6a 01                	push   $0x1$/;"	l
c010597b	obj/kernel.asm	/^c010597b:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010597e	obj/kernel.asm	/^c010597e:	50                   	push   %eax$/;"	l
c010597f	obj/kernel.asm	/^c010597f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105982	obj/kernel.asm	/^c0105982:	e8 87 08 00 00       	call   c010620e <user_mem_check>$/;"	l
c0105987	obj/kernel.asm	/^c0105987:	83 c4 10             	add    $0x10,%esp$/;"	l
c010598a	obj/kernel.asm	/^c010598a:	85 c0                	test   %eax,%eax$/;"	l
c010598c	obj/kernel.asm	/^c010598c:	75 07                	jne    c0105995 <copy_to_user+0x25>$/;"	l
c010598e	obj/kernel.asm	/^c010598e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105993	obj/kernel.asm	/^c0105993:	eb 19                	jmp    c01059ae <copy_to_user+0x3e>$/;"	l
c0105995	obj/kernel.asm	/^c0105995:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105998	obj/kernel.asm	/^c0105998:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010599b	obj/kernel.asm	/^c010599b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010599e	obj/kernel.asm	/^c010599e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01059a1	obj/kernel.asm	/^c01059a1:	e8 35 6a 00 00       	call   c010c3db <memcpy>$/;"	l
c01059a6	obj/kernel.asm	/^c01059a6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01059a9	obj/kernel.asm	/^c01059a9:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01059ae	obj/kernel.asm	/^c01059ae:	c9                   	leave  $/;"	l
c01059af	obj/kernel.asm	/^c01059af:	c3                   	ret    $/;"	l
c01059b0	obj/kernel.asm	/^c01059b0 <vmm_init>:$/;"	l
c01059b0	obj/kernel.asm	/^c01059b0:	55                   	push   %ebp$/;"	l
c01059b1	obj/kernel.asm	/^c01059b1:	89 e5                	mov    %esp,%ebp$/;"	l
c01059b3	obj/kernel.asm	/^c01059b3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01059b6	obj/kernel.asm	/^c01059b6:	e8 02 00 00 00       	call   c01059bd <check_vmm>$/;"	l
c01059bb	obj/kernel.asm	/^c01059bb:	c9                   	leave  $/;"	l
c01059bc	obj/kernel.asm	/^c01059bc:	c3                   	ret    $/;"	l
c01059bd	obj/kernel.asm	/^c01059bd <check_vmm>:$/;"	l
c01059bd	obj/kernel.asm	/^c01059bd:	55                   	push   %ebp$/;"	l
c01059be	obj/kernel.asm	/^c01059be:	89 e5                	mov    %esp,%ebp$/;"	l
c01059c0	obj/kernel.asm	/^c01059c0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01059c3	obj/kernel.asm	/^c01059c3:	e8 36 e0 ff ff       	call   c01039fe <nr_free_pages>$/;"	l
c01059c8	obj/kernel.asm	/^c01059c8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01059cb	obj/kernel.asm	/^c01059cb:	e8 17 00 00 00       	call   c01059e7 <check_vma_struct>$/;"	l
c01059d0	obj/kernel.asm	/^c01059d0:	e8 0e 04 00 00       	call   c0105de3 <check_pgfault>$/;"	l
c01059d5	obj/kernel.asm	/^c01059d5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01059d8	obj/kernel.asm	/^c01059d8:	68 0c dd 10 c0       	push   $0xc010dd0c$/;"	l
c01059dd	obj/kernel.asm	/^c01059dd:	e8 98 a8 ff ff       	call   c010027a <cprintf>$/;"	l
c01059e2	obj/kernel.asm	/^c01059e2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01059e5	obj/kernel.asm	/^c01059e5:	c9                   	leave  $/;"	l
c01059e6	obj/kernel.asm	/^c01059e6:	c3                   	ret    $/;"	l
c01059e7	obj/kernel.asm	/^c01059e7 <check_vma_struct>:$/;"	l
c01059e7	obj/kernel.asm	/^c01059e7:	55                   	push   %ebp$/;"	l
c01059e8	obj/kernel.asm	/^c01059e8:	89 e5                	mov    %esp,%ebp$/;"	l
c01059ea	obj/kernel.asm	/^c01059ea:	83 ec 58             	sub    $0x58,%esp$/;"	l
c01059ed	obj/kernel.asm	/^c01059ed:	e8 0c e0 ff ff       	call   c01039fe <nr_free_pages>$/;"	l
c01059f2	obj/kernel.asm	/^c01059f2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01059f5	obj/kernel.asm	/^c01059f5:	e8 ba f8 ff ff       	call   c01052b4 <mm_create>$/;"	l
c01059fa	obj/kernel.asm	/^c01059fa:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01059fd	obj/kernel.asm	/^c01059fd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0105a01	obj/kernel.asm	/^c0105a01:	75 19                	jne    c0105a1c <check_vma_struct+0x35>$/;"	l
c0105a03	obj/kernel.asm	/^c0105a03:	68 c3 dc 10 c0       	push   $0xc010dcc3$/;"	l
c0105a08	obj/kernel.asm	/^c0105a08:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105a0d	obj/kernel.asm	/^c0105a0d:	68 0c 01 00 00       	push   $0x10c$/;"	l
c0105a12	obj/kernel.asm	/^c0105a12:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105a17	obj/kernel.asm	/^c0105a17:	e8 c3 a9 ff ff       	call   c01003df <__panic>$/;"	l
c0105a1c	obj/kernel.asm	/^c0105a1c:	c7 45 e4 0a 00 00 00 	movl   $0xa,-0x1c(%ebp)$/;"	l
c0105a23	obj/kernel.asm	/^c0105a23:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0105a26	obj/kernel.asm	/^c0105a26:	89 d0                	mov    %edx,%eax$/;"	l
c0105a28	obj/kernel.asm	/^c0105a28:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105a2b	obj/kernel.asm	/^c0105a2b:	01 d0                	add    %edx,%eax$/;"	l
c0105a2d	obj/kernel.asm	/^c0105a2d:	01 c0                	add    %eax,%eax$/;"	l
c0105a2f	obj/kernel.asm	/^c0105a2f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105a32	obj/kernel.asm	/^c0105a32:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105a35	obj/kernel.asm	/^c0105a35:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105a38	obj/kernel.asm	/^c0105a38:	eb 5f                	jmp    c0105a99 <check_vma_struct+0xb2>$/;"	l
c0105a3a	obj/kernel.asm	/^c0105a3a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105a3d	obj/kernel.asm	/^c0105a3d:	89 d0                	mov    %edx,%eax$/;"	l
c0105a3f	obj/kernel.asm	/^c0105a3f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105a42	obj/kernel.asm	/^c0105a42:	01 d0                	add    %edx,%eax$/;"	l
c0105a44	obj/kernel.asm	/^c0105a44:	83 c0 02             	add    $0x2,%eax$/;"	l
c0105a47	obj/kernel.asm	/^c0105a47:	89 c1                	mov    %eax,%ecx$/;"	l
c0105a49	obj/kernel.asm	/^c0105a49:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105a4c	obj/kernel.asm	/^c0105a4c:	89 d0                	mov    %edx,%eax$/;"	l
c0105a4e	obj/kernel.asm	/^c0105a4e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105a51	obj/kernel.asm	/^c0105a51:	01 d0                	add    %edx,%eax$/;"	l
c0105a53	obj/kernel.asm	/^c0105a53:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105a56	obj/kernel.asm	/^c0105a56:	6a 00                	push   $0x0$/;"	l
c0105a58	obj/kernel.asm	/^c0105a58:	51                   	push   %ecx$/;"	l
c0105a59	obj/kernel.asm	/^c0105a59:	50                   	push   %eax$/;"	l
c0105a5a	obj/kernel.asm	/^c0105a5a:	e8 f5 f8 ff ff       	call   c0105354 <vma_create>$/;"	l
c0105a5f	obj/kernel.asm	/^c0105a5f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105a62	obj/kernel.asm	/^c0105a62:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105a65	obj/kernel.asm	/^c0105a65:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0105a69	obj/kernel.asm	/^c0105a69:	75 19                	jne    c0105a84 <check_vma_struct+0x9d>$/;"	l
c0105a6b	obj/kernel.asm	/^c0105a6b:	68 24 dd 10 c0       	push   $0xc010dd24$/;"	l
c0105a70	obj/kernel.asm	/^c0105a70:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105a75	obj/kernel.asm	/^c0105a75:	68 13 01 00 00       	push   $0x113$/;"	l
c0105a7a	obj/kernel.asm	/^c0105a7a:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105a7f	obj/kernel.asm	/^c0105a7f:	e8 5b a9 ff ff       	call   c01003df <__panic>$/;"	l
c0105a84	obj/kernel.asm	/^c0105a84:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105a87	obj/kernel.asm	/^c0105a87:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0105a8a	obj/kernel.asm	/^c0105a8a:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105a8d	obj/kernel.asm	/^c0105a8d:	e8 29 fa ff ff       	call   c01054bb <insert_vma_struct>$/;"	l
c0105a92	obj/kernel.asm	/^c0105a92:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105a95	obj/kernel.asm	/^c0105a95:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0105a99	obj/kernel.asm	/^c0105a99:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105a9d	obj/kernel.asm	/^c0105a9d:	7f 9b                	jg     c0105a3a <check_vma_struct+0x53>$/;"	l
c0105a9f	obj/kernel.asm	/^c0105a9f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105aa2	obj/kernel.asm	/^c0105aa2:	83 c0 01             	add    $0x1,%eax$/;"	l
c0105aa5	obj/kernel.asm	/^c0105aa5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105aa8	obj/kernel.asm	/^c0105aa8:	eb 5f                	jmp    c0105b09 <check_vma_struct+0x122>$/;"	l
c0105aaa	obj/kernel.asm	/^c0105aaa:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105aad	obj/kernel.asm	/^c0105aad:	89 d0                	mov    %edx,%eax$/;"	l
c0105aaf	obj/kernel.asm	/^c0105aaf:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105ab2	obj/kernel.asm	/^c0105ab2:	01 d0                	add    %edx,%eax$/;"	l
c0105ab4	obj/kernel.asm	/^c0105ab4:	83 c0 02             	add    $0x2,%eax$/;"	l
c0105ab7	obj/kernel.asm	/^c0105ab7:	89 c1                	mov    %eax,%ecx$/;"	l
c0105ab9	obj/kernel.asm	/^c0105ab9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105abc	obj/kernel.asm	/^c0105abc:	89 d0                	mov    %edx,%eax$/;"	l
c0105abe	obj/kernel.asm	/^c0105abe:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105ac1	obj/kernel.asm	/^c0105ac1:	01 d0                	add    %edx,%eax$/;"	l
c0105ac3	obj/kernel.asm	/^c0105ac3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105ac6	obj/kernel.asm	/^c0105ac6:	6a 00                	push   $0x0$/;"	l
c0105ac8	obj/kernel.asm	/^c0105ac8:	51                   	push   %ecx$/;"	l
c0105ac9	obj/kernel.asm	/^c0105ac9:	50                   	push   %eax$/;"	l
c0105aca	obj/kernel.asm	/^c0105aca:	e8 85 f8 ff ff       	call   c0105354 <vma_create>$/;"	l
c0105acf	obj/kernel.asm	/^c0105acf:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105ad2	obj/kernel.asm	/^c0105ad2:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0105ad5	obj/kernel.asm	/^c0105ad5:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0105ad9	obj/kernel.asm	/^c0105ad9:	75 19                	jne    c0105af4 <check_vma_struct+0x10d>$/;"	l
c0105adb	obj/kernel.asm	/^c0105adb:	68 24 dd 10 c0       	push   $0xc010dd24$/;"	l
c0105ae0	obj/kernel.asm	/^c0105ae0:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105ae5	obj/kernel.asm	/^c0105ae5:	68 19 01 00 00       	push   $0x119$/;"	l
c0105aea	obj/kernel.asm	/^c0105aea:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105aef	obj/kernel.asm	/^c0105aef:	e8 eb a8 ff ff       	call   c01003df <__panic>$/;"	l
c0105af4	obj/kernel.asm	/^c0105af4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105af7	obj/kernel.asm	/^c0105af7:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c0105afa	obj/kernel.asm	/^c0105afa:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105afd	obj/kernel.asm	/^c0105afd:	e8 b9 f9 ff ff       	call   c01054bb <insert_vma_struct>$/;"	l
c0105b02	obj/kernel.asm	/^c0105b02:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105b05	obj/kernel.asm	/^c0105b05:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105b09	obj/kernel.asm	/^c0105b09:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105b0c	obj/kernel.asm	/^c0105b0c:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0105b0f	obj/kernel.asm	/^c0105b0f:	7e 99                	jle    c0105aaa <check_vma_struct+0xc3>$/;"	l
c0105b11	obj/kernel.asm	/^c0105b11:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105b14	obj/kernel.asm	/^c0105b14:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0105b17	obj/kernel.asm	/^c0105b17:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0105b1a	obj/kernel.asm	/^c0105b1a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105b1d	obj/kernel.asm	/^c0105b1d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105b20	obj/kernel.asm	/^c0105b20:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c0105b27	obj/kernel.asm	/^c0105b27:	e9 81 00 00 00       	jmp    c0105bad <check_vma_struct+0x1c6>$/;"	l
c0105b2c	obj/kernel.asm	/^c0105b2c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105b2f	obj/kernel.asm	/^c0105b2f:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0105b32	obj/kernel.asm	/^c0105b32:	75 19                	jne    c0105b4d <check_vma_struct+0x166>$/;"	l
c0105b34	obj/kernel.asm	/^c0105b34:	68 30 dd 10 c0       	push   $0xc010dd30$/;"	l
c0105b39	obj/kernel.asm	/^c0105b39:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105b3e	obj/kernel.asm	/^c0105b3e:	68 20 01 00 00       	push   $0x120$/;"	l
c0105b43	obj/kernel.asm	/^c0105b43:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105b48	obj/kernel.asm	/^c0105b48:	e8 92 a8 ff ff       	call   c01003df <__panic>$/;"	l
c0105b4d	obj/kernel.asm	/^c0105b4d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105b50	obj/kernel.asm	/^c0105b50:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105b53	obj/kernel.asm	/^c0105b53:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0105b56	obj/kernel.asm	/^c0105b56:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0105b59	obj/kernel.asm	/^c0105b59:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c0105b5c	obj/kernel.asm	/^c0105b5c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105b5f	obj/kernel.asm	/^c0105b5f:	89 d0                	mov    %edx,%eax$/;"	l
c0105b61	obj/kernel.asm	/^c0105b61:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105b64	obj/kernel.asm	/^c0105b64:	01 d0                	add    %edx,%eax$/;"	l
c0105b66	obj/kernel.asm	/^c0105b66:	39 c1                	cmp    %eax,%ecx$/;"	l
c0105b68	obj/kernel.asm	/^c0105b68:	75 17                	jne    c0105b81 <check_vma_struct+0x19a>$/;"	l
c0105b6a	obj/kernel.asm	/^c0105b6a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0105b6d	obj/kernel.asm	/^c0105b6d:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
c0105b70	obj/kernel.asm	/^c0105b70:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105b73	obj/kernel.asm	/^c0105b73:	89 d0                	mov    %edx,%eax$/;"	l
c0105b75	obj/kernel.asm	/^c0105b75:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105b78	obj/kernel.asm	/^c0105b78:	01 d0                	add    %edx,%eax$/;"	l
c0105b7a	obj/kernel.asm	/^c0105b7a:	83 c0 02             	add    $0x2,%eax$/;"	l
c0105b7d	obj/kernel.asm	/^c0105b7d:	39 c1                	cmp    %eax,%ecx$/;"	l
c0105b7f	obj/kernel.asm	/^c0105b7f:	74 19                	je     c0105b9a <check_vma_struct+0x1b3>$/;"	l
c0105b81	obj/kernel.asm	/^c0105b81:	68 48 dd 10 c0       	push   $0xc010dd48$/;"	l
c0105b86	obj/kernel.asm	/^c0105b86:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105b8b	obj/kernel.asm	/^c0105b8b:	68 22 01 00 00       	push   $0x122$/;"	l
c0105b90	obj/kernel.asm	/^c0105b90:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105b95	obj/kernel.asm	/^c0105b95:	e8 45 a8 ff ff       	call   c01003df <__panic>$/;"	l
c0105b9a	obj/kernel.asm	/^c0105b9a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105b9d	obj/kernel.asm	/^c0105b9d:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0105ba0	obj/kernel.asm	/^c0105ba0:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0105ba3	obj/kernel.asm	/^c0105ba3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105ba6	obj/kernel.asm	/^c0105ba6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105ba9	obj/kernel.asm	/^c0105ba9:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105bad	obj/kernel.asm	/^c0105bad:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105bb0	obj/kernel.asm	/^c0105bb0:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0105bb3	obj/kernel.asm	/^c0105bb3:	0f 8e 73 ff ff ff    	jle    c0105b2c <check_vma_struct+0x145>$/;"	l
c0105bb9	obj/kernel.asm	/^c0105bb9:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%ebp)$/;"	l
c0105bc0	obj/kernel.asm	/^c0105bc0:	e9 80 01 00 00       	jmp    c0105d45 <check_vma_struct+0x35e>$/;"	l
c0105bc5	obj/kernel.asm	/^c0105bc5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105bc8	obj/kernel.asm	/^c0105bc8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105bcb	obj/kernel.asm	/^c0105bcb:	50                   	push   %eax$/;"	l
c0105bcc	obj/kernel.asm	/^c0105bcc:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105bcf	obj/kernel.asm	/^c0105bcf:	e8 bc f7 ff ff       	call   c0105390 <find_vma>$/;"	l
c0105bd4	obj/kernel.asm	/^c0105bd4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105bd7	obj/kernel.asm	/^c0105bd7:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0105bda	obj/kernel.asm	/^c0105bda:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c0105bde	obj/kernel.asm	/^c0105bde:	75 19                	jne    c0105bf9 <check_vma_struct+0x212>$/;"	l
c0105be0	obj/kernel.asm	/^c0105be0:	68 7d dd 10 c0       	push   $0xc010dd7d$/;"	l
c0105be5	obj/kernel.asm	/^c0105be5:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105bea	obj/kernel.asm	/^c0105bea:	68 28 01 00 00       	push   $0x128$/;"	l
c0105bef	obj/kernel.asm	/^c0105bef:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105bf4	obj/kernel.asm	/^c0105bf4:	e8 e6 a7 ff ff       	call   c01003df <__panic>$/;"	l
c0105bf9	obj/kernel.asm	/^c0105bf9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105bfc	obj/kernel.asm	/^c0105bfc:	83 c0 01             	add    $0x1,%eax$/;"	l
c0105bff	obj/kernel.asm	/^c0105bff:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105c02	obj/kernel.asm	/^c0105c02:	50                   	push   %eax$/;"	l
c0105c03	obj/kernel.asm	/^c0105c03:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105c06	obj/kernel.asm	/^c0105c06:	e8 85 f7 ff ff       	call   c0105390 <find_vma>$/;"	l
c0105c0b	obj/kernel.asm	/^c0105c0b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105c0e	obj/kernel.asm	/^c0105c0e:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0105c11	obj/kernel.asm	/^c0105c11:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0105c15	obj/kernel.asm	/^c0105c15:	75 19                	jne    c0105c30 <check_vma_struct+0x249>$/;"	l
c0105c17	obj/kernel.asm	/^c0105c17:	68 8a dd 10 c0       	push   $0xc010dd8a$/;"	l
c0105c1c	obj/kernel.asm	/^c0105c1c:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105c21	obj/kernel.asm	/^c0105c21:	68 2a 01 00 00       	push   $0x12a$/;"	l
c0105c26	obj/kernel.asm	/^c0105c26:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105c2b	obj/kernel.asm	/^c0105c2b:	e8 af a7 ff ff       	call   c01003df <__panic>$/;"	l
c0105c30	obj/kernel.asm	/^c0105c30:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105c33	obj/kernel.asm	/^c0105c33:	83 c0 02             	add    $0x2,%eax$/;"	l
c0105c36	obj/kernel.asm	/^c0105c36:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105c39	obj/kernel.asm	/^c0105c39:	50                   	push   %eax$/;"	l
c0105c3a	obj/kernel.asm	/^c0105c3a:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105c3d	obj/kernel.asm	/^c0105c3d:	e8 4e f7 ff ff       	call   c0105390 <find_vma>$/;"	l
c0105c42	obj/kernel.asm	/^c0105c42:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105c45	obj/kernel.asm	/^c0105c45:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0105c48	obj/kernel.asm	/^c0105c48:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c0105c4c	obj/kernel.asm	/^c0105c4c:	74 19                	je     c0105c67 <check_vma_struct+0x280>$/;"	l
c0105c4e	obj/kernel.asm	/^c0105c4e:	68 97 dd 10 c0       	push   $0xc010dd97$/;"	l
c0105c53	obj/kernel.asm	/^c0105c53:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105c58	obj/kernel.asm	/^c0105c58:	68 2c 01 00 00       	push   $0x12c$/;"	l
c0105c5d	obj/kernel.asm	/^c0105c5d:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105c62	obj/kernel.asm	/^c0105c62:	e8 78 a7 ff ff       	call   c01003df <__panic>$/;"	l
c0105c67	obj/kernel.asm	/^c0105c67:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105c6a	obj/kernel.asm	/^c0105c6a:	83 c0 03             	add    $0x3,%eax$/;"	l
c0105c6d	obj/kernel.asm	/^c0105c6d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105c70	obj/kernel.asm	/^c0105c70:	50                   	push   %eax$/;"	l
c0105c71	obj/kernel.asm	/^c0105c71:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105c74	obj/kernel.asm	/^c0105c74:	e8 17 f7 ff ff       	call   c0105390 <find_vma>$/;"	l
c0105c79	obj/kernel.asm	/^c0105c79:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105c7c	obj/kernel.asm	/^c0105c7c:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0105c7f	obj/kernel.asm	/^c0105c7f:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)$/;"	l
c0105c83	obj/kernel.asm	/^c0105c83:	74 19                	je     c0105c9e <check_vma_struct+0x2b7>$/;"	l
c0105c85	obj/kernel.asm	/^c0105c85:	68 a4 dd 10 c0       	push   $0xc010dda4$/;"	l
c0105c8a	obj/kernel.asm	/^c0105c8a:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105c8f	obj/kernel.asm	/^c0105c8f:	68 2e 01 00 00       	push   $0x12e$/;"	l
c0105c94	obj/kernel.asm	/^c0105c94:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105c99	obj/kernel.asm	/^c0105c99:	e8 41 a7 ff ff       	call   c01003df <__panic>$/;"	l
c0105c9e	obj/kernel.asm	/^c0105c9e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105ca1	obj/kernel.asm	/^c0105ca1:	83 c0 04             	add    $0x4,%eax$/;"	l
c0105ca4	obj/kernel.asm	/^c0105ca4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105ca7	obj/kernel.asm	/^c0105ca7:	50                   	push   %eax$/;"	l
c0105ca8	obj/kernel.asm	/^c0105ca8:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105cab	obj/kernel.asm	/^c0105cab:	e8 e0 f6 ff ff       	call   c0105390 <find_vma>$/;"	l
c0105cb0	obj/kernel.asm	/^c0105cb0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105cb3	obj/kernel.asm	/^c0105cb3:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0105cb6	obj/kernel.asm	/^c0105cb6:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)$/;"	l
c0105cba	obj/kernel.asm	/^c0105cba:	74 19                	je     c0105cd5 <check_vma_struct+0x2ee>$/;"	l
c0105cbc	obj/kernel.asm	/^c0105cbc:	68 b1 dd 10 c0       	push   $0xc010ddb1$/;"	l
c0105cc1	obj/kernel.asm	/^c0105cc1:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105cc6	obj/kernel.asm	/^c0105cc6:	68 30 01 00 00       	push   $0x130$/;"	l
c0105ccb	obj/kernel.asm	/^c0105ccb:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105cd0	obj/kernel.asm	/^c0105cd0:	e8 0a a7 ff ff       	call   c01003df <__panic>$/;"	l
c0105cd5	obj/kernel.asm	/^c0105cd5:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0105cd8	obj/kernel.asm	/^c0105cd8:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0105cdb	obj/kernel.asm	/^c0105cdb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105cde	obj/kernel.asm	/^c0105cde:	39 c2                	cmp    %eax,%edx$/;"	l
c0105ce0	obj/kernel.asm	/^c0105ce0:	75 10                	jne    c0105cf2 <check_vma_struct+0x30b>$/;"	l
c0105ce2	obj/kernel.asm	/^c0105ce2:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0105ce5	obj/kernel.asm	/^c0105ce5:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105ce8	obj/kernel.asm	/^c0105ce8:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105ceb	obj/kernel.asm	/^c0105ceb:	83 c2 02             	add    $0x2,%edx$/;"	l
c0105cee	obj/kernel.asm	/^c0105cee:	39 d0                	cmp    %edx,%eax$/;"	l
c0105cf0	obj/kernel.asm	/^c0105cf0:	74 19                	je     c0105d0b <check_vma_struct+0x324>$/;"	l
c0105cf2	obj/kernel.asm	/^c0105cf2:	68 c0 dd 10 c0       	push   $0xc010ddc0$/;"	l
c0105cf7	obj/kernel.asm	/^c0105cf7:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105cfc	obj/kernel.asm	/^c0105cfc:	68 32 01 00 00       	push   $0x132$/;"	l
c0105d01	obj/kernel.asm	/^c0105d01:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105d06	obj/kernel.asm	/^c0105d06:	e8 d4 a6 ff ff       	call   c01003df <__panic>$/;"	l
c0105d0b	obj/kernel.asm	/^c0105d0b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0105d0e	obj/kernel.asm	/^c0105d0e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0105d11	obj/kernel.asm	/^c0105d11:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105d14	obj/kernel.asm	/^c0105d14:	39 c2                	cmp    %eax,%edx$/;"	l
c0105d16	obj/kernel.asm	/^c0105d16:	75 10                	jne    c0105d28 <check_vma_struct+0x341>$/;"	l
c0105d18	obj/kernel.asm	/^c0105d18:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0105d1b	obj/kernel.asm	/^c0105d1b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105d1e	obj/kernel.asm	/^c0105d1e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105d21	obj/kernel.asm	/^c0105d21:	83 c2 02             	add    $0x2,%edx$/;"	l
c0105d24	obj/kernel.asm	/^c0105d24:	39 d0                	cmp    %edx,%eax$/;"	l
c0105d26	obj/kernel.asm	/^c0105d26:	74 19                	je     c0105d41 <check_vma_struct+0x35a>$/;"	l
c0105d28	obj/kernel.asm	/^c0105d28:	68 f0 dd 10 c0       	push   $0xc010ddf0$/;"	l
c0105d2d	obj/kernel.asm	/^c0105d2d:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105d32	obj/kernel.asm	/^c0105d32:	68 33 01 00 00       	push   $0x133$/;"	l
c0105d37	obj/kernel.asm	/^c0105d37:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105d3c	obj/kernel.asm	/^c0105d3c:	e8 9e a6 ff ff       	call   c01003df <__panic>$/;"	l
c0105d41	obj/kernel.asm	/^c0105d41:	83 45 f4 05          	addl   $0x5,-0xc(%ebp)$/;"	l
c0105d45	obj/kernel.asm	/^c0105d45:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0105d48	obj/kernel.asm	/^c0105d48:	89 d0                	mov    %edx,%eax$/;"	l
c0105d4a	obj/kernel.asm	/^c0105d4a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105d4d	obj/kernel.asm	/^c0105d4d:	01 d0                	add    %edx,%eax$/;"	l
c0105d4f	obj/kernel.asm	/^c0105d4f:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0105d52	obj/kernel.asm	/^c0105d52:	0f 8d 6d fe ff ff    	jge    c0105bc5 <check_vma_struct+0x1de>$/;"	l
c0105d58	obj/kernel.asm	/^c0105d58:	c7 45 f4 04 00 00 00 	movl   $0x4,-0xc(%ebp)$/;"	l
c0105d5f	obj/kernel.asm	/^c0105d5f:	eb 5c                	jmp    c0105dbd <check_vma_struct+0x3d6>$/;"	l
c0105d61	obj/kernel.asm	/^c0105d61:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105d64	obj/kernel.asm	/^c0105d64:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105d67	obj/kernel.asm	/^c0105d67:	50                   	push   %eax$/;"	l
c0105d68	obj/kernel.asm	/^c0105d68:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105d6b	obj/kernel.asm	/^c0105d6b:	e8 20 f6 ff ff       	call   c0105390 <find_vma>$/;"	l
c0105d70	obj/kernel.asm	/^c0105d70:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105d73	obj/kernel.asm	/^c0105d73:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0105d76	obj/kernel.asm	/^c0105d76:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0105d7a	obj/kernel.asm	/^c0105d7a:	74 1e                	je     c0105d9a <check_vma_struct+0x3b3>$/;"	l
c0105d7c	obj/kernel.asm	/^c0105d7c:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0105d7f	obj/kernel.asm	/^c0105d7f:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0105d82	obj/kernel.asm	/^c0105d82:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0105d85	obj/kernel.asm	/^c0105d85:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105d88	obj/kernel.asm	/^c0105d88:	52                   	push   %edx$/;"	l
c0105d89	obj/kernel.asm	/^c0105d89:	50                   	push   %eax$/;"	l
c0105d8a	obj/kernel.asm	/^c0105d8a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0105d8d	obj/kernel.asm	/^c0105d8d:	68 20 de 10 c0       	push   $0xc010de20$/;"	l
c0105d92	obj/kernel.asm	/^c0105d92:	e8 e3 a4 ff ff       	call   c010027a <cprintf>$/;"	l
c0105d97	obj/kernel.asm	/^c0105d97:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105d9a	obj/kernel.asm	/^c0105d9a:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0105d9e	obj/kernel.asm	/^c0105d9e:	74 19                	je     c0105db9 <check_vma_struct+0x3d2>$/;"	l
c0105da0	obj/kernel.asm	/^c0105da0:	68 45 de 10 c0       	push   $0xc010de45$/;"	l
c0105da5	obj/kernel.asm	/^c0105da5:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105daa	obj/kernel.asm	/^c0105daa:	68 3b 01 00 00       	push   $0x13b$/;"	l
c0105daf	obj/kernel.asm	/^c0105daf:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105db4	obj/kernel.asm	/^c0105db4:	e8 26 a6 ff ff       	call   c01003df <__panic>$/;"	l
c0105db9	obj/kernel.asm	/^c0105db9:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0105dbd	obj/kernel.asm	/^c0105dbd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105dc1	obj/kernel.asm	/^c0105dc1:	79 9e                	jns    c0105d61 <check_vma_struct+0x37a>$/;"	l
c0105dc3	obj/kernel.asm	/^c0105dc3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105dc6	obj/kernel.asm	/^c0105dc6:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105dc9	obj/kernel.asm	/^c0105dc9:	e8 0f f8 ff ff       	call   c01055dd <mm_destroy>$/;"	l
c0105dce	obj/kernel.asm	/^c0105dce:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105dd1	obj/kernel.asm	/^c0105dd1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105dd4	obj/kernel.asm	/^c0105dd4:	68 5c de 10 c0       	push   $0xc010de5c$/;"	l
c0105dd9	obj/kernel.asm	/^c0105dd9:	e8 9c a4 ff ff       	call   c010027a <cprintf>$/;"	l
c0105dde	obj/kernel.asm	/^c0105dde:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105de1	obj/kernel.asm	/^c0105de1:	c9                   	leave  $/;"	l
c0105de2	obj/kernel.asm	/^c0105de2:	c3                   	ret    $/;"	l
c0105de3	obj/kernel.asm	/^c0105de3 <check_pgfault>:$/;"	l
c0105de3	obj/kernel.asm	/^c0105de3:	55                   	push   %ebp$/;"	l
c0105de4	obj/kernel.asm	/^c0105de4:	89 e5                	mov    %esp,%ebp$/;"	l
c0105de6	obj/kernel.asm	/^c0105de6:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105de9	obj/kernel.asm	/^c0105de9:	e8 10 dc ff ff       	call   c01039fe <nr_free_pages>$/;"	l
c0105dee	obj/kernel.asm	/^c0105dee:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105df1	obj/kernel.asm	/^c0105df1:	e8 be f4 ff ff       	call   c01052b4 <mm_create>$/;"	l
c0105df6	obj/kernel.asm	/^c0105df6:	a3 9c 45 1c c0       	mov    %eax,0xc01c459c$/;"	l
c0105dfb	obj/kernel.asm	/^c0105dfb:	a1 9c 45 1c c0       	mov    0xc01c459c,%eax$/;"	l
c0105e00	obj/kernel.asm	/^c0105e00:	85 c0                	test   %eax,%eax$/;"	l
c0105e02	obj/kernel.asm	/^c0105e02:	75 19                	jne    c0105e1d <check_pgfault+0x3a>$/;"	l
c0105e04	obj/kernel.asm	/^c0105e04:	68 7b de 10 c0       	push   $0xc010de7b$/;"	l
c0105e09	obj/kernel.asm	/^c0105e09:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105e0e	obj/kernel.asm	/^c0105e0e:	68 4b 01 00 00       	push   $0x14b$/;"	l
c0105e13	obj/kernel.asm	/^c0105e13:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105e18	obj/kernel.asm	/^c0105e18:	e8 c2 a5 ff ff       	call   c01003df <__panic>$/;"	l
c0105e1d	obj/kernel.asm	/^c0105e1d:	a1 9c 45 1c c0       	mov    0xc01c459c,%eax$/;"	l
c0105e22	obj/kernel.asm	/^c0105e22:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105e25	obj/kernel.asm	/^c0105e25:	8b 15 c4 23 1c c0    	mov    0xc01c23c4,%edx$/;"	l
c0105e2b	obj/kernel.asm	/^c0105e2b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105e2e	obj/kernel.asm	/^c0105e2e:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0105e31	obj/kernel.asm	/^c0105e31:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105e34	obj/kernel.asm	/^c0105e34:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0105e37	obj/kernel.asm	/^c0105e37:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105e3a	obj/kernel.asm	/^c0105e3a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105e3d	obj/kernel.asm	/^c0105e3d:	8b 00                	mov    (%eax),%eax$/;"	l
c0105e3f	obj/kernel.asm	/^c0105e3f:	85 c0                	test   %eax,%eax$/;"	l
c0105e41	obj/kernel.asm	/^c0105e41:	74 19                	je     c0105e5c <check_pgfault+0x79>$/;"	l
c0105e43	obj/kernel.asm	/^c0105e43:	68 93 de 10 c0       	push   $0xc010de93$/;"	l
c0105e48	obj/kernel.asm	/^c0105e48:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105e4d	obj/kernel.asm	/^c0105e4d:	68 4f 01 00 00       	push   $0x14f$/;"	l
c0105e52	obj/kernel.asm	/^c0105e52:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105e57	obj/kernel.asm	/^c0105e57:	e8 83 a5 ff ff       	call   c01003df <__panic>$/;"	l
c0105e5c	obj/kernel.asm	/^c0105e5c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105e5f	obj/kernel.asm	/^c0105e5f:	6a 02                	push   $0x2$/;"	l
c0105e61	obj/kernel.asm	/^c0105e61:	68 00 00 40 00       	push   $0x400000$/;"	l
c0105e66	obj/kernel.asm	/^c0105e66:	6a 00                	push   $0x0$/;"	l
c0105e68	obj/kernel.asm	/^c0105e68:	e8 e7 f4 ff ff       	call   c0105354 <vma_create>$/;"	l
c0105e6d	obj/kernel.asm	/^c0105e6d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105e70	obj/kernel.asm	/^c0105e70:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105e73	obj/kernel.asm	/^c0105e73:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0105e77	obj/kernel.asm	/^c0105e77:	75 19                	jne    c0105e92 <check_pgfault+0xaf>$/;"	l
c0105e79	obj/kernel.asm	/^c0105e79:	68 24 dd 10 c0       	push   $0xc010dd24$/;"	l
c0105e7e	obj/kernel.asm	/^c0105e7e:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105e83	obj/kernel.asm	/^c0105e83:	68 52 01 00 00       	push   $0x152$/;"	l
c0105e88	obj/kernel.asm	/^c0105e88:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105e8d	obj/kernel.asm	/^c0105e8d:	e8 4d a5 ff ff       	call   c01003df <__panic>$/;"	l
c0105e92	obj/kernel.asm	/^c0105e92:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105e95	obj/kernel.asm	/^c0105e95:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0105e98	obj/kernel.asm	/^c0105e98:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105e9b	obj/kernel.asm	/^c0105e9b:	e8 1b f6 ff ff       	call   c01054bb <insert_vma_struct>$/;"	l
c0105ea0	obj/kernel.asm	/^c0105ea0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105ea3	obj/kernel.asm	/^c0105ea3:	c7 45 dc 00 01 00 00 	movl   $0x100,-0x24(%ebp)$/;"	l
c0105eaa	obj/kernel.asm	/^c0105eaa:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105ead	obj/kernel.asm	/^c0105ead:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0105eb0	obj/kernel.asm	/^c0105eb0:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105eb3	obj/kernel.asm	/^c0105eb3:	e8 d8 f4 ff ff       	call   c0105390 <find_vma>$/;"	l
c0105eb8	obj/kernel.asm	/^c0105eb8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105ebb	obj/kernel.asm	/^c0105ebb:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0105ebe	obj/kernel.asm	/^c0105ebe:	74 19                	je     c0105ed9 <check_pgfault+0xf6>$/;"	l
c0105ec0	obj/kernel.asm	/^c0105ec0:	68 a1 de 10 c0       	push   $0xc010dea1$/;"	l
c0105ec5	obj/kernel.asm	/^c0105ec5:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105eca	obj/kernel.asm	/^c0105eca:	68 57 01 00 00       	push   $0x157$/;"	l
c0105ecf	obj/kernel.asm	/^c0105ecf:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105ed4	obj/kernel.asm	/^c0105ed4:	e8 06 a5 ff ff       	call   c01003df <__panic>$/;"	l
c0105ed9	obj/kernel.asm	/^c0105ed9:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0105ee0	obj/kernel.asm	/^c0105ee0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0105ee7	obj/kernel.asm	/^c0105ee7:	eb 19                	jmp    c0105f02 <check_pgfault+0x11f>$/;"	l
c0105ee9	obj/kernel.asm	/^c0105ee9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105eec	obj/kernel.asm	/^c0105eec:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105eef	obj/kernel.asm	/^c0105eef:	01 d0                	add    %edx,%eax$/;"	l
c0105ef1	obj/kernel.asm	/^c0105ef1:	89 c2                	mov    %eax,%edx$/;"	l
c0105ef3	obj/kernel.asm	/^c0105ef3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105ef6	obj/kernel.asm	/^c0105ef6:	88 02                	mov    %al,(%edx)$/;"	l
c0105ef8	obj/kernel.asm	/^c0105ef8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105efb	obj/kernel.asm	/^c0105efb:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c0105efe	obj/kernel.asm	/^c0105efe:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105f02	obj/kernel.asm	/^c0105f02:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c0105f06	obj/kernel.asm	/^c0105f06:	7e e1                	jle    c0105ee9 <check_pgfault+0x106>$/;"	l
c0105f08	obj/kernel.asm	/^c0105f08:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0105f0f	obj/kernel.asm	/^c0105f0f:	eb 15                	jmp    c0105f26 <check_pgfault+0x143>$/;"	l
c0105f11	obj/kernel.asm	/^c0105f11:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105f14	obj/kernel.asm	/^c0105f14:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105f17	obj/kernel.asm	/^c0105f17:	01 d0                	add    %edx,%eax$/;"	l
c0105f19	obj/kernel.asm	/^c0105f19:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0105f1c	obj/kernel.asm	/^c0105f1c:	0f be c0             	movsbl %al,%eax$/;"	l
c0105f1f	obj/kernel.asm	/^c0105f1f:	29 45 f0             	sub    %eax,-0x10(%ebp)$/;"	l
c0105f22	obj/kernel.asm	/^c0105f22:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105f26	obj/kernel.asm	/^c0105f26:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c0105f2a	obj/kernel.asm	/^c0105f2a:	7e e5                	jle    c0105f11 <check_pgfault+0x12e>$/;"	l
c0105f2c	obj/kernel.asm	/^c0105f2c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0105f30	obj/kernel.asm	/^c0105f30:	74 19                	je     c0105f4b <check_pgfault+0x168>$/;"	l
c0105f32	obj/kernel.asm	/^c0105f32:	68 bb de 10 c0       	push   $0xc010debb$/;"	l
c0105f37	obj/kernel.asm	/^c0105f37:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105f3c	obj/kernel.asm	/^c0105f3c:	68 61 01 00 00       	push   $0x161$/;"	l
c0105f41	obj/kernel.asm	/^c0105f41:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105f46	obj/kernel.asm	/^c0105f46:	e8 94 a4 ff ff       	call   c01003df <__panic>$/;"	l
c0105f4b	obj/kernel.asm	/^c0105f4b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105f4e	obj/kernel.asm	/^c0105f4e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0105f51	obj/kernel.asm	/^c0105f51:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0105f54	obj/kernel.asm	/^c0105f54:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0105f59	obj/kernel.asm	/^c0105f59:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105f5c	obj/kernel.asm	/^c0105f5c:	50                   	push   %eax$/;"	l
c0105f5d	obj/kernel.asm	/^c0105f5d:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0105f60	obj/kernel.asm	/^c0105f60:	e8 2d e6 ff ff       	call   c0104592 <page_remove>$/;"	l
c0105f65	obj/kernel.asm	/^c0105f65:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105f68	obj/kernel.asm	/^c0105f68:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105f6b	obj/kernel.asm	/^c0105f6b:	8b 00                	mov    (%eax),%eax$/;"	l
c0105f6d	obj/kernel.asm	/^c0105f6d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105f70	obj/kernel.asm	/^c0105f70:	50                   	push   %eax$/;"	l
c0105f71	obj/kernel.asm	/^c0105f71:	e8 01 f3 ff ff       	call   c0105277 <pa2page>$/;"	l
c0105f76	obj/kernel.asm	/^c0105f76:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105f79	obj/kernel.asm	/^c0105f79:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105f7c	obj/kernel.asm	/^c0105f7c:	6a 01                	push   $0x1$/;"	l
c0105f7e	obj/kernel.asm	/^c0105f7e:	50                   	push   %eax$/;"	l
c0105f7f	obj/kernel.asm	/^c0105f7f:	e8 46 da ff ff       	call   c01039ca <free_pages>$/;"	l
c0105f84	obj/kernel.asm	/^c0105f84:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105f87	obj/kernel.asm	/^c0105f87:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105f8a	obj/kernel.asm	/^c0105f8a:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0105f90	obj/kernel.asm	/^c0105f90:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105f93	obj/kernel.asm	/^c0105f93:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0105f9a	obj/kernel.asm	/^c0105f9a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105f9d	obj/kernel.asm	/^c0105f9d:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105fa0	obj/kernel.asm	/^c0105fa0:	e8 38 f6 ff ff       	call   c01055dd <mm_destroy>$/;"	l
c0105fa5	obj/kernel.asm	/^c0105fa5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105fa8	obj/kernel.asm	/^c0105fa8:	c7 05 9c 45 1c c0 00 	movl   $0x0,0xc01c459c$/;"	l
c0105faf	obj/kernel.asm	/^c0105faf:	00 00 00 $/;"	l
c0105fb2	obj/kernel.asm	/^c0105fb2:	e8 47 da ff ff       	call   c01039fe <nr_free_pages>$/;"	l
c0105fb7	obj/kernel.asm	/^c0105fb7:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0105fba	obj/kernel.asm	/^c0105fba:	74 19                	je     c0105fd5 <check_pgfault+0x1f2>$/;"	l
c0105fbc	obj/kernel.asm	/^c0105fbc:	68 c4 de 10 c0       	push   $0xc010dec4$/;"	l
c0105fc1	obj/kernel.asm	/^c0105fc1:	68 33 dc 10 c0       	push   $0xc010dc33$/;"	l
c0105fc6	obj/kernel.asm	/^c0105fc6:	68 6b 01 00 00       	push   $0x16b$/;"	l
c0105fcb	obj/kernel.asm	/^c0105fcb:	68 48 dc 10 c0       	push   $0xc010dc48$/;"	l
c0105fd0	obj/kernel.asm	/^c0105fd0:	e8 0a a4 ff ff       	call   c01003df <__panic>$/;"	l
c0105fd5	obj/kernel.asm	/^c0105fd5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105fd8	obj/kernel.asm	/^c0105fd8:	68 eb de 10 c0       	push   $0xc010deeb$/;"	l
c0105fdd	obj/kernel.asm	/^c0105fdd:	e8 98 a2 ff ff       	call   c010027a <cprintf>$/;"	l
c0105fe2	obj/kernel.asm	/^c0105fe2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105fe5	obj/kernel.asm	/^c0105fe5:	c9                   	leave  $/;"	l
c0105fe6	obj/kernel.asm	/^c0105fe6:	c3                   	ret    $/;"	l
c0105fe7	obj/kernel.asm	/^c0105fe7 <do_pgfault>:$/;"	l
c0105fe7	obj/kernel.asm	/^c0105fe7:	55                   	push   %ebp$/;"	l
c0105fe8	obj/kernel.asm	/^c0105fe8:	89 e5                	mov    %esp,%ebp$/;"	l
c0105fea	obj/kernel.asm	/^c0105fea:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105fed	obj/kernel.asm	/^c0105fed:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0105ff4	obj/kernel.asm	/^c0105ff4:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0105ff7	obj/kernel.asm	/^c0105ff7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105ffa	obj/kernel.asm	/^c0105ffa:	e8 91 f3 ff ff       	call   c0105390 <find_vma>$/;"	l
c0105fff	obj/kernel.asm	/^c0105fff:	83 c4 08             	add    $0x8,%esp$/;"	l
c0106002	obj/kernel.asm	/^c0106002:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106005	obj/kernel.asm	/^c0106005:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c010600a	obj/kernel.asm	/^c010600a:	83 c0 01             	add    $0x1,%eax$/;"	l
c010600d	obj/kernel.asm	/^c010600d:	a3 6c 24 1c c0       	mov    %eax,0xc01c246c$/;"	l
c0106012	obj/kernel.asm	/^c0106012:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0106016	obj/kernel.asm	/^c0106016:	74 0b                	je     c0106023 <do_pgfault+0x3c>$/;"	l
c0106018	obj/kernel.asm	/^c0106018:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010601b	obj/kernel.asm	/^c010601b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010601e	obj/kernel.asm	/^c010601e:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0106021	obj/kernel.asm	/^c0106021:	76 18                	jbe    c010603b <do_pgfault+0x54>$/;"	l
c0106023	obj/kernel.asm	/^c0106023:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106026	obj/kernel.asm	/^c0106026:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0106029	obj/kernel.asm	/^c0106029:	68 08 df 10 c0       	push   $0xc010df08$/;"	l
c010602e	obj/kernel.asm	/^c010602e:	e8 47 a2 ff ff       	call   c010027a <cprintf>$/;"	l
c0106033	obj/kernel.asm	/^c0106033:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106036	obj/kernel.asm	/^c0106036:	e9 ce 01 00 00       	jmp    c0106209 <do_pgfault+0x222>$/;"	l
c010603b	obj/kernel.asm	/^c010603b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010603e	obj/kernel.asm	/^c010603e:	83 e0 03             	and    $0x3,%eax$/;"	l
c0106041	obj/kernel.asm	/^c0106041:	85 c0                	test   %eax,%eax$/;"	l
c0106043	obj/kernel.asm	/^c0106043:	74 3e                	je     c0106083 <do_pgfault+0x9c>$/;"	l
c0106045	obj/kernel.asm	/^c0106045:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0106048	obj/kernel.asm	/^c0106048:	74 24                	je     c010606e <do_pgfault+0x87>$/;"	l
c010604a	obj/kernel.asm	/^c010604a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010604d	obj/kernel.asm	/^c010604d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106050	obj/kernel.asm	/^c0106050:	83 e0 02             	and    $0x2,%eax$/;"	l
c0106053	obj/kernel.asm	/^c0106053:	85 c0                	test   %eax,%eax$/;"	l
c0106055	obj/kernel.asm	/^c0106055:	75 15                	jne    c010606c <do_pgfault+0x85>$/;"	l
c0106057	obj/kernel.asm	/^c0106057:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010605a	obj/kernel.asm	/^c010605a:	68 38 df 10 c0       	push   $0xc010df38$/;"	l
c010605f	obj/kernel.asm	/^c010605f:	e8 16 a2 ff ff       	call   c010027a <cprintf>$/;"	l
c0106064	obj/kernel.asm	/^c0106064:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106067	obj/kernel.asm	/^c0106067:	e9 9d 01 00 00       	jmp    c0106209 <do_pgfault+0x222>$/;"	l
c010606c	obj/kernel.asm	/^c010606c:	eb 37                	jmp    c01060a5 <do_pgfault+0xbe>$/;"	l
c010606e	obj/kernel.asm	/^c010606e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106071	obj/kernel.asm	/^c0106071:	68 98 df 10 c0       	push   $0xc010df98$/;"	l
c0106076	obj/kernel.asm	/^c0106076:	e8 ff a1 ff ff       	call   c010027a <cprintf>$/;"	l
c010607b	obj/kernel.asm	/^c010607b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010607e	obj/kernel.asm	/^c010607e:	e9 86 01 00 00       	jmp    c0106209 <do_pgfault+0x222>$/;"	l
c0106083	obj/kernel.asm	/^c0106083:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106086	obj/kernel.asm	/^c0106086:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106089	obj/kernel.asm	/^c0106089:	83 e0 05             	and    $0x5,%eax$/;"	l
c010608c	obj/kernel.asm	/^c010608c:	85 c0                	test   %eax,%eax$/;"	l
c010608e	obj/kernel.asm	/^c010608e:	75 15                	jne    c01060a5 <do_pgfault+0xbe>$/;"	l
c0106090	obj/kernel.asm	/^c0106090:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106093	obj/kernel.asm	/^c0106093:	68 d0 df 10 c0       	push   $0xc010dfd0$/;"	l
c0106098	obj/kernel.asm	/^c0106098:	e8 dd a1 ff ff       	call   c010027a <cprintf>$/;"	l
c010609d	obj/kernel.asm	/^c010609d:	83 c4 10             	add    $0x10,%esp$/;"	l
c01060a0	obj/kernel.asm	/^c01060a0:	e9 64 01 00 00       	jmp    c0106209 <do_pgfault+0x222>$/;"	l
c01060a5	obj/kernel.asm	/^c01060a5:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%ebp)$/;"	l
c01060ac	obj/kernel.asm	/^c01060ac:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01060af	obj/kernel.asm	/^c01060af:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01060b2	obj/kernel.asm	/^c01060b2:	83 e0 02             	and    $0x2,%eax$/;"	l
c01060b5	obj/kernel.asm	/^c01060b5:	85 c0                	test   %eax,%eax$/;"	l
c01060b7	obj/kernel.asm	/^c01060b7:	74 04                	je     c01060bd <do_pgfault+0xd6>$/;"	l
c01060b9	obj/kernel.asm	/^c01060b9:	83 4d f0 02          	orl    $0x2,-0x10(%ebp)$/;"	l
c01060bd	obj/kernel.asm	/^c01060bd:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01060c0	obj/kernel.asm	/^c01060c0:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01060c3	obj/kernel.asm	/^c01060c3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01060c6	obj/kernel.asm	/^c01060c6:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01060cb	obj/kernel.asm	/^c01060cb:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c01060ce	obj/kernel.asm	/^c01060ce:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c01060d5	obj/kernel.asm	/^c01060d5:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c01060dc	obj/kernel.asm	/^c01060dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01060df	obj/kernel.asm	/^c01060df:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01060e2	obj/kernel.asm	/^c01060e2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01060e5	obj/kernel.asm	/^c01060e5:	6a 01                	push   $0x1$/;"	l
c01060e7	obj/kernel.asm	/^c01060e7:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01060ea	obj/kernel.asm	/^c01060ea:	50                   	push   %eax$/;"	l
c01060eb	obj/kernel.asm	/^c01060eb:	e8 57 df ff ff       	call   c0104047 <get_pte>$/;"	l
c01060f0	obj/kernel.asm	/^c01060f0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01060f3	obj/kernel.asm	/^c01060f3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01060f6	obj/kernel.asm	/^c01060f6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01060fa	obj/kernel.asm	/^c01060fa:	75 15                	jne    c0106111 <do_pgfault+0x12a>$/;"	l
c01060fc	obj/kernel.asm	/^c01060fc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01060ff	obj/kernel.asm	/^c01060ff:	68 33 e0 10 c0       	push   $0xc010e033$/;"	l
c0106104	obj/kernel.asm	/^c0106104:	e8 71 a1 ff ff       	call   c010027a <cprintf>$/;"	l
c0106109	obj/kernel.asm	/^c0106109:	83 c4 10             	add    $0x10,%esp$/;"	l
c010610c	obj/kernel.asm	/^c010610c:	e9 f8 00 00 00       	jmp    c0106209 <do_pgfault+0x222>$/;"	l
c0106111	obj/kernel.asm	/^c0106111:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106114	obj/kernel.asm	/^c0106114:	8b 00                	mov    (%eax),%eax$/;"	l
c0106116	obj/kernel.asm	/^c0106116:	85 c0                	test   %eax,%eax$/;"	l
c0106118	obj/kernel.asm	/^c0106118:	75 3b                	jne    c0106155 <do_pgfault+0x16e>$/;"	l
c010611a	obj/kernel.asm	/^c010611a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010611d	obj/kernel.asm	/^c010611d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106120	obj/kernel.asm	/^c0106120:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106123	obj/kernel.asm	/^c0106123:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0106126	obj/kernel.asm	/^c0106126:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0106129	obj/kernel.asm	/^c0106129:	50                   	push   %eax$/;"	l
c010612a	obj/kernel.asm	/^c010612a:	e8 a3 e5 ff ff       	call   c01046d2 <pgdir_alloc_page>$/;"	l
c010612f	obj/kernel.asm	/^c010612f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106132	obj/kernel.asm	/^c0106132:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0106135	obj/kernel.asm	/^c0106135:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0106139	obj/kernel.asm	/^c0106139:	75 15                	jne    c0106150 <do_pgfault+0x169>$/;"	l
c010613b	obj/kernel.asm	/^c010613b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010613e	obj/kernel.asm	/^c010613e:	68 42 e0 10 c0       	push   $0xc010e042$/;"	l
c0106143	obj/kernel.asm	/^c0106143:	e8 32 a1 ff ff       	call   c010027a <cprintf>$/;"	l
c0106148	obj/kernel.asm	/^c0106148:	83 c4 10             	add    $0x10,%esp$/;"	l
c010614b	obj/kernel.asm	/^c010614b:	e9 b9 00 00 00       	jmp    c0106209 <do_pgfault+0x222>$/;"	l
c0106150	obj/kernel.asm	/^c0106150:	e9 ad 00 00 00       	jmp    c0106202 <do_pgfault+0x21b>$/;"	l
c0106155	obj/kernel.asm	/^c0106155:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106158	obj/kernel.asm	/^c0106158:	8b 00                	mov    (%eax),%eax$/;"	l
c010615a	obj/kernel.asm	/^c010615a:	83 e0 01             	and    $0x1,%eax$/;"	l
c010615d	obj/kernel.asm	/^c010615d:	85 c0                	test   %eax,%eax$/;"	l
c010615f	obj/kernel.asm	/^c010615f:	75 79                	jne    c01061da <do_pgfault+0x1f3>$/;"	l
c0106161	obj/kernel.asm	/^c0106161:	a1 70 24 1c c0       	mov    0xc01c2470,%eax$/;"	l
c0106166	obj/kernel.asm	/^c0106166:	85 c0                	test   %eax,%eax$/;"	l
c0106168	obj/kernel.asm	/^c0106168:	74 58                	je     c01061c2 <do_pgfault+0x1db>$/;"	l
c010616a	obj/kernel.asm	/^c010616a:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0106171	obj/kernel.asm	/^c0106171:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106174	obj/kernel.asm	/^c0106174:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0106177	obj/kernel.asm	/^c0106177:	50                   	push   %eax$/;"	l
c0106178	obj/kernel.asm	/^c0106178:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010617b	obj/kernel.asm	/^c010617b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010617e	obj/kernel.asm	/^c010617e:	e8 6b 04 00 00       	call   c01065ee <swap_in>$/;"	l
c0106183	obj/kernel.asm	/^c0106183:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106186	obj/kernel.asm	/^c0106186:	83 4d f0 01          	orl    $0x1,-0x10(%ebp)$/;"	l
c010618a	obj/kernel.asm	/^c010618a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010618d	obj/kernel.asm	/^c010618d:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106190	obj/kernel.asm	/^c0106190:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c0106193	obj/kernel.asm	/^c0106193:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0106196	obj/kernel.asm	/^c0106196:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106199	obj/kernel.asm	/^c0106199:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010619c	obj/kernel.asm	/^c010619c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010619f	obj/kernel.asm	/^c010619f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01061a2	obj/kernel.asm	/^c01061a2:	52                   	push   %edx$/;"	l
c01061a3	obj/kernel.asm	/^c01061a3:	50                   	push   %eax$/;"	l
c01061a4	obj/kernel.asm	/^c01061a4:	e8 21 e4 ff ff       	call   c01045ca <page_insert>$/;"	l
c01061a9	obj/kernel.asm	/^c01061a9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01061ac	obj/kernel.asm	/^c01061ac:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01061af	obj/kernel.asm	/^c01061af:	6a 01                	push   $0x1$/;"	l
c01061b1	obj/kernel.asm	/^c01061b1:	50                   	push   %eax$/;"	l
c01061b2	obj/kernel.asm	/^c01061b2:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01061b5	obj/kernel.asm	/^c01061b5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01061b8	obj/kernel.asm	/^c01061b8:	e8 a1 02 00 00       	call   c010645e <swap_map_swappable>$/;"	l
c01061bd	obj/kernel.asm	/^c01061bd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01061c0	obj/kernel.asm	/^c01061c0:	eb 40                	jmp    c0106202 <do_pgfault+0x21b>$/;"	l
c01061c2	obj/kernel.asm	/^c01061c2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01061c5	obj/kernel.asm	/^c01061c5:	8b 00                	mov    (%eax),%eax$/;"	l
c01061c7	obj/kernel.asm	/^c01061c7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01061ca	obj/kernel.asm	/^c01061ca:	50                   	push   %eax$/;"	l
c01061cb	obj/kernel.asm	/^c01061cb:	68 58 e0 10 c0       	push   $0xc010e058$/;"	l
c01061d0	obj/kernel.asm	/^c01061d0:	e8 a5 a0 ff ff       	call   c010027a <cprintf>$/;"	l
c01061d5	obj/kernel.asm	/^c01061d5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01061d8	obj/kernel.asm	/^c01061d8:	eb 2f                	jmp    c0106209 <do_pgfault+0x222>$/;"	l
c01061da	obj/kernel.asm	/^c01061da:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01061dd	obj/kernel.asm	/^c01061dd:	8b 00                	mov    (%eax),%eax$/;"	l
c01061df	obj/kernel.asm	/^c01061df:	83 e0 04             	and    $0x4,%eax$/;"	l
c01061e2	obj/kernel.asm	/^c01061e2:	85 c0                	test   %eax,%eax$/;"	l
c01061e4	obj/kernel.asm	/^c01061e4:	75 1c                	jne    c0106202 <do_pgfault+0x21b>$/;"	l
c01061e6	obj/kernel.asm	/^c01061e6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01061e9	obj/kernel.asm	/^c01061e9:	83 e0 04             	and    $0x4,%eax$/;"	l
c01061ec	obj/kernel.asm	/^c01061ec:	85 c0                	test   %eax,%eax$/;"	l
c01061ee	obj/kernel.asm	/^c01061ee:	74 12                	je     c0106202 <do_pgfault+0x21b>$/;"	l
c01061f0	obj/kernel.asm	/^c01061f0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01061f3	obj/kernel.asm	/^c01061f3:	68 80 e0 10 c0       	push   $0xc010e080$/;"	l
c01061f8	obj/kernel.asm	/^c01061f8:	e8 7d a0 ff ff       	call   c010027a <cprintf>$/;"	l
c01061fd	obj/kernel.asm	/^c01061fd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106200	obj/kernel.asm	/^c0106200:	eb 07                	jmp    c0106209 <do_pgfault+0x222>$/;"	l
c0106202	obj/kernel.asm	/^c0106202:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0106209	obj/kernel.asm	/^c0106209:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010620c	obj/kernel.asm	/^c010620c:	c9                   	leave  $/;"	l
c010620d	obj/kernel.asm	/^c010620d:	c3                   	ret    $/;"	l
c010620e	obj/kernel.asm	/^c010620e <user_mem_check>:$/;"	l
c010620e	obj/kernel.asm	/^c010620e:	55                   	push   %ebp$/;"	l
c010620f	obj/kernel.asm	/^c010620f:	89 e5                	mov    %esp,%ebp$/;"	l
c0106211	obj/kernel.asm	/^c0106211:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0106214	obj/kernel.asm	/^c0106214:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0106218	obj/kernel.asm	/^c0106218:	0f 84 dc 00 00 00    	je     c01062fa <user_mem_check+0xec>$/;"	l
c010621e	obj/kernel.asm	/^c010621e:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0106225	obj/kernel.asm	/^c0106225:	76 1c                	jbe    c0106243 <user_mem_check+0x35>$/;"	l
c0106227	obj/kernel.asm	/^c0106227:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010622a	obj/kernel.asm	/^c010622a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010622d	obj/kernel.asm	/^c010622d:	01 d0                	add    %edx,%eax$/;"	l
c010622f	obj/kernel.asm	/^c010622f:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106232	obj/kernel.asm	/^c0106232:	76 0f                	jbe    c0106243 <user_mem_check+0x35>$/;"	l
c0106234	obj/kernel.asm	/^c0106234:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106237	obj/kernel.asm	/^c0106237:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010623a	obj/kernel.asm	/^c010623a:	01 d0                	add    %edx,%eax$/;"	l
c010623c	obj/kernel.asm	/^c010623c:	3d 00 00 00 b0       	cmp    $0xb0000000,%eax$/;"	l
c0106241	obj/kernel.asm	/^c0106241:	76 0a                	jbe    c010624d <user_mem_check+0x3f>$/;"	l
c0106243	obj/kernel.asm	/^c0106243:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106248	obj/kernel.asm	/^c0106248:	e9 df 00 00 00       	jmp    c010632c <user_mem_check+0x11e>$/;"	l
c010624d	obj/kernel.asm	/^c010624d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106250	obj/kernel.asm	/^c0106250:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0106253	obj/kernel.asm	/^c0106253:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106256	obj/kernel.asm	/^c0106256:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106259	obj/kernel.asm	/^c0106259:	01 d0                	add    %edx,%eax$/;"	l
c010625b	obj/kernel.asm	/^c010625b:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010625e	obj/kernel.asm	/^c010625e:	e9 84 00 00 00       	jmp    c01062e7 <user_mem_check+0xd9>$/;"	l
c0106263	obj/kernel.asm	/^c0106263:	ff 75 fc             	pushl  -0x4(%ebp)$/;"	l
c0106266	obj/kernel.asm	/^c0106266:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106269	obj/kernel.asm	/^c0106269:	e8 22 f1 ff ff       	call   c0105390 <find_vma>$/;"	l
c010626e	obj/kernel.asm	/^c010626e:	83 c4 08             	add    $0x8,%esp$/;"	l
c0106271	obj/kernel.asm	/^c0106271:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106274	obj/kernel.asm	/^c0106274:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0106278	obj/kernel.asm	/^c0106278:	74 0b                	je     c0106285 <user_mem_check+0x77>$/;"	l
c010627a	obj/kernel.asm	/^c010627a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010627d	obj/kernel.asm	/^c010627d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106280	obj/kernel.asm	/^c0106280:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0106283	obj/kernel.asm	/^c0106283:	76 0a                	jbe    c010628f <user_mem_check+0x81>$/;"	l
c0106285	obj/kernel.asm	/^c0106285:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010628a	obj/kernel.asm	/^c010628a:	e9 9d 00 00 00       	jmp    c010632c <user_mem_check+0x11e>$/;"	l
c010628f	obj/kernel.asm	/^c010628f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106292	obj/kernel.asm	/^c0106292:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106295	obj/kernel.asm	/^c0106295:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0106299	obj/kernel.asm	/^c0106299:	74 07                	je     c01062a2 <user_mem_check+0x94>$/;"	l
c010629b	obj/kernel.asm	/^c010629b:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
c01062a0	obj/kernel.asm	/^c01062a0:	eb 05                	jmp    c01062a7 <user_mem_check+0x99>$/;"	l
c01062a2	obj/kernel.asm	/^c01062a2:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c01062a7	obj/kernel.asm	/^c01062a7:	21 d0                	and    %edx,%eax$/;"	l
c01062a9	obj/kernel.asm	/^c01062a9:	85 c0                	test   %eax,%eax$/;"	l
c01062ab	obj/kernel.asm	/^c01062ab:	75 07                	jne    c01062b4 <user_mem_check+0xa6>$/;"	l
c01062ad	obj/kernel.asm	/^c01062ad:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01062b2	obj/kernel.asm	/^c01062b2:	eb 78                	jmp    c010632c <user_mem_check+0x11e>$/;"	l
c01062b4	obj/kernel.asm	/^c01062b4:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01062b8	obj/kernel.asm	/^c01062b8:	74 24                	je     c01062de <user_mem_check+0xd0>$/;"	l
c01062ba	obj/kernel.asm	/^c01062ba:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01062bd	obj/kernel.asm	/^c01062bd:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01062c0	obj/kernel.asm	/^c01062c0:	83 e0 08             	and    $0x8,%eax$/;"	l
c01062c3	obj/kernel.asm	/^c01062c3:	85 c0                	test   %eax,%eax$/;"	l
c01062c5	obj/kernel.asm	/^c01062c5:	74 17                	je     c01062de <user_mem_check+0xd0>$/;"	l
c01062c7	obj/kernel.asm	/^c01062c7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01062ca	obj/kernel.asm	/^c01062ca:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01062cd	obj/kernel.asm	/^c01062cd:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c01062d2	obj/kernel.asm	/^c01062d2:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01062d5	obj/kernel.asm	/^c01062d5:	76 07                	jbe    c01062de <user_mem_check+0xd0>$/;"	l
c01062d7	obj/kernel.asm	/^c01062d7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01062dc	obj/kernel.asm	/^c01062dc:	eb 4e                	jmp    c010632c <user_mem_check+0x11e>$/;"	l
c01062de	obj/kernel.asm	/^c01062de:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01062e1	obj/kernel.asm	/^c01062e1:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01062e4	obj/kernel.asm	/^c01062e4:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01062e7	obj/kernel.asm	/^c01062e7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01062ea	obj/kernel.asm	/^c01062ea:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c01062ed	obj/kernel.asm	/^c01062ed:	0f 82 70 ff ff ff    	jb     c0106263 <user_mem_check+0x55>$/;"	l
c01062f3	obj/kernel.asm	/^c01062f3:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01062f8	obj/kernel.asm	/^c01062f8:	eb 32                	jmp    c010632c <user_mem_check+0x11e>$/;"	l
c01062fa	obj/kernel.asm	/^c01062fa:	81 7d 0c ff ff ff bf 	cmpl   $0xbfffffff,0xc(%ebp)$/;"	l
c0106301	obj/kernel.asm	/^c0106301:	76 23                	jbe    c0106326 <user_mem_check+0x118>$/;"	l
c0106303	obj/kernel.asm	/^c0106303:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106306	obj/kernel.asm	/^c0106306:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106309	obj/kernel.asm	/^c0106309:	01 d0                	add    %edx,%eax$/;"	l
c010630b	obj/kernel.asm	/^c010630b:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010630e	obj/kernel.asm	/^c010630e:	76 16                	jbe    c0106326 <user_mem_check+0x118>$/;"	l
c0106310	obj/kernel.asm	/^c0106310:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106313	obj/kernel.asm	/^c0106313:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106316	obj/kernel.asm	/^c0106316:	01 d0                	add    %edx,%eax$/;"	l
c0106318	obj/kernel.asm	/^c0106318:	3d 00 00 00 f8       	cmp    $0xf8000000,%eax$/;"	l
c010631d	obj/kernel.asm	/^c010631d:	77 07                	ja     c0106326 <user_mem_check+0x118>$/;"	l
c010631f	obj/kernel.asm	/^c010631f:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0106324	obj/kernel.asm	/^c0106324:	eb 05                	jmp    c010632b <user_mem_check+0x11d>$/;"	l
c0106326	obj/kernel.asm	/^c0106326:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010632b	obj/kernel.asm	/^c010632b:	90                   	nop$/;"	l
c010632c	obj/kernel.asm	/^c010632c:	c9                   	leave  $/;"	l
c010632d	obj/kernel.asm	/^c010632d:	c3                   	ret    $/;"	l
c010632e	obj/kernel.asm	/^c010632e <pa2page>:$/;"	l
c010632e	obj/kernel.asm	/^c010632e:	55                   	push   %ebp$/;"	l
c010632f	obj/kernel.asm	/^c010632f:	89 e5                	mov    %esp,%ebp$/;"	l
c0106331	obj/kernel.asm	/^c0106331:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106334	obj/kernel.asm	/^c0106334:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106337	obj/kernel.asm	/^c0106337:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010633a	obj/kernel.asm	/^c010633a:	89 c2                	mov    %eax,%edx$/;"	l
c010633c	obj/kernel.asm	/^c010633c:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c0106341	obj/kernel.asm	/^c0106341:	39 c2                	cmp    %eax,%edx$/;"	l
c0106343	obj/kernel.asm	/^c0106343:	72 14                	jb     c0106359 <pa2page+0x2b>$/;"	l
c0106345	obj/kernel.asm	/^c0106345:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106348	obj/kernel.asm	/^c0106348:	68 d4 e0 10 c0       	push   $0xc010e0d4$/;"	l
c010634d	obj/kernel.asm	/^c010634d:	6a 5e                	push   $0x5e$/;"	l
c010634f	obj/kernel.asm	/^c010634f:	68 f3 e0 10 c0       	push   $0xc010e0f3$/;"	l
c0106354	obj/kernel.asm	/^c0106354:	e8 86 a0 ff ff       	call   c01003df <__panic>$/;"	l
c0106359	obj/kernel.asm	/^c0106359:	a1 98 45 1c c0       	mov    0xc01c4598,%eax$/;"	l
c010635e	obj/kernel.asm	/^c010635e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106361	obj/kernel.asm	/^c0106361:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0106364	obj/kernel.asm	/^c0106364:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0106367	obj/kernel.asm	/^c0106367:	01 d0                	add    %edx,%eax$/;"	l
c0106369	obj/kernel.asm	/^c0106369:	c9                   	leave  $/;"	l
c010636a	obj/kernel.asm	/^c010636a:	c3                   	ret    $/;"	l
c010636b	obj/kernel.asm	/^c010636b <pte2page>:$/;"	l
c010636b	obj/kernel.asm	/^c010636b:	55                   	push   %ebp$/;"	l
c010636c	obj/kernel.asm	/^c010636c:	89 e5                	mov    %esp,%ebp$/;"	l
c010636e	obj/kernel.asm	/^c010636e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106371	obj/kernel.asm	/^c0106371:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106374	obj/kernel.asm	/^c0106374:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106377	obj/kernel.asm	/^c0106377:	85 c0                	test   %eax,%eax$/;"	l
c0106379	obj/kernel.asm	/^c0106379:	75 14                	jne    c010638f <pte2page+0x24>$/;"	l
c010637b	obj/kernel.asm	/^c010637b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010637e	obj/kernel.asm	/^c010637e:	68 04 e1 10 c0       	push   $0xc010e104$/;"	l
c0106383	obj/kernel.asm	/^c0106383:	6a 70                	push   $0x70$/;"	l
c0106385	obj/kernel.asm	/^c0106385:	68 f3 e0 10 c0       	push   $0xc010e0f3$/;"	l
c010638a	obj/kernel.asm	/^c010638a:	e8 50 a0 ff ff       	call   c01003df <__panic>$/;"	l
c010638f	obj/kernel.asm	/^c010638f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106392	obj/kernel.asm	/^c0106392:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0106397	obj/kernel.asm	/^c0106397:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010639a	obj/kernel.asm	/^c010639a:	50                   	push   %eax$/;"	l
c010639b	obj/kernel.asm	/^c010639b:	e8 8e ff ff ff       	call   c010632e <pa2page>$/;"	l
c01063a0	obj/kernel.asm	/^c01063a0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01063a3	obj/kernel.asm	/^c01063a3:	c9                   	leave  $/;"	l
c01063a4	obj/kernel.asm	/^c01063a4:	c3                   	ret    $/;"	l
c01063a5	obj/kernel.asm	/^c01063a5 <swap_init>:$/;"	l
c01063a5	obj/kernel.asm	/^c01063a5:	55                   	push   %ebp$/;"	l
c01063a6	obj/kernel.asm	/^c01063a6:	89 e5                	mov    %esp,%ebp$/;"	l
c01063a8	obj/kernel.asm	/^c01063a8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01063ab	obj/kernel.asm	/^c01063ab:	e8 26 34 00 00       	call   c01097d6 <swapfs_init>$/;"	l
c01063b0	obj/kernel.asm	/^c01063b0:	a1 3c 46 1c c0       	mov    0xc01c463c,%eax$/;"	l
c01063b5	obj/kernel.asm	/^c01063b5:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
c01063ba	obj/kernel.asm	/^c01063ba:	76 0c                	jbe    c01063c8 <swap_init+0x23>$/;"	l
c01063bc	obj/kernel.asm	/^c01063bc:	a1 3c 46 1c c0       	mov    0xc01c463c,%eax$/;"	l
c01063c1	obj/kernel.asm	/^c01063c1:	3d ff ff ff 00       	cmp    $0xffffff,%eax$/;"	l
c01063c6	obj/kernel.asm	/^c01063c6:	76 17                	jbe    c01063df <swap_init+0x3a>$/;"	l
c01063c8	obj/kernel.asm	/^c01063c8:	a1 3c 46 1c c0       	mov    0xc01c463c,%eax$/;"	l
c01063cd	obj/kernel.asm	/^c01063cd:	50                   	push   %eax$/;"	l
c01063ce	obj/kernel.asm	/^c01063ce:	68 25 e1 10 c0       	push   $0xc010e125$/;"	l
c01063d3	obj/kernel.asm	/^c01063d3:	6a 27                	push   $0x27$/;"	l
c01063d5	obj/kernel.asm	/^c01063d5:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c01063da	obj/kernel.asm	/^c01063da:	e8 00 a0 ff ff       	call   c01003df <__panic>$/;"	l
c01063df	obj/kernel.asm	/^c01063df:	c7 05 78 24 1c c0 c0 	movl   $0xc0130ac0,0xc01c2478$/;"	l
c01063e6	obj/kernel.asm	/^c01063e6:	0a 13 c0 $/;"	l
c01063e9	obj/kernel.asm	/^c01063e9:	a1 78 24 1c c0       	mov    0xc01c2478,%eax$/;"	l
c01063ee	obj/kernel.asm	/^c01063ee:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01063f1	obj/kernel.asm	/^c01063f1:	ff d0                	call   *%eax$/;"	l
c01063f3	obj/kernel.asm	/^c01063f3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01063f6	obj/kernel.asm	/^c01063f6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01063fa	obj/kernel.asm	/^c01063fa:	75 27                	jne    c0106423 <swap_init+0x7e>$/;"	l
c01063fc	obj/kernel.asm	/^c01063fc:	c7 05 70 24 1c c0 01 	movl   $0x1,0xc01c2470$/;"	l
c0106403	obj/kernel.asm	/^c0106403:	00 00 00 $/;"	l
c0106406	obj/kernel.asm	/^c0106406:	a1 78 24 1c c0       	mov    0xc01c2478,%eax$/;"	l
c010640b	obj/kernel.asm	/^c010640b:	8b 00                	mov    (%eax),%eax$/;"	l
c010640d	obj/kernel.asm	/^c010640d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106410	obj/kernel.asm	/^c0106410:	50                   	push   %eax$/;"	l
c0106411	obj/kernel.asm	/^c0106411:	68 4f e1 10 c0       	push   $0xc010e14f$/;"	l
c0106416	obj/kernel.asm	/^c0106416:	e8 5f 9e ff ff       	call   c010027a <cprintf>$/;"	l
c010641b	obj/kernel.asm	/^c010641b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010641e	obj/kernel.asm	/^c010641e:	e8 f6 03 00 00       	call   c0106819 <check_swap>$/;"	l
c0106423	obj/kernel.asm	/^c0106423:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106426	obj/kernel.asm	/^c0106426:	c9                   	leave  $/;"	l
c0106427	obj/kernel.asm	/^c0106427:	c3                   	ret    $/;"	l
c0106428	obj/kernel.asm	/^c0106428 <swap_init_mm>:$/;"	l
c0106428	obj/kernel.asm	/^c0106428:	55                   	push   %ebp$/;"	l
c0106429	obj/kernel.asm	/^c0106429:	89 e5                	mov    %esp,%ebp$/;"	l
c010642b	obj/kernel.asm	/^c010642b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010642e	obj/kernel.asm	/^c010642e:	a1 78 24 1c c0       	mov    0xc01c2478,%eax$/;"	l
c0106433	obj/kernel.asm	/^c0106433:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0106436	obj/kernel.asm	/^c0106436:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106439	obj/kernel.asm	/^c0106439:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010643c	obj/kernel.asm	/^c010643c:	ff d0                	call   *%eax$/;"	l
c010643e	obj/kernel.asm	/^c010643e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106441	obj/kernel.asm	/^c0106441:	c9                   	leave  $/;"	l
c0106442	obj/kernel.asm	/^c0106442:	c3                   	ret    $/;"	l
c0106443	obj/kernel.asm	/^c0106443 <swap_tick_event>:$/;"	l
c0106443	obj/kernel.asm	/^c0106443:	55                   	push   %ebp$/;"	l
c0106444	obj/kernel.asm	/^c0106444:	89 e5                	mov    %esp,%ebp$/;"	l
c0106446	obj/kernel.asm	/^c0106446:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106449	obj/kernel.asm	/^c0106449:	a1 78 24 1c c0       	mov    0xc01c2478,%eax$/;"	l
c010644e	obj/kernel.asm	/^c010644e:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106451	obj/kernel.asm	/^c0106451:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106454	obj/kernel.asm	/^c0106454:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106457	obj/kernel.asm	/^c0106457:	ff d0                	call   *%eax$/;"	l
c0106459	obj/kernel.asm	/^c0106459:	83 c4 10             	add    $0x10,%esp$/;"	l
c010645c	obj/kernel.asm	/^c010645c:	c9                   	leave  $/;"	l
c010645d	obj/kernel.asm	/^c010645d:	c3                   	ret    $/;"	l
c010645e	obj/kernel.asm	/^c010645e <swap_map_swappable>:$/;"	l
c010645e	obj/kernel.asm	/^c010645e:	55                   	push   %ebp$/;"	l
c010645f	obj/kernel.asm	/^c010645f:	89 e5                	mov    %esp,%ebp$/;"	l
c0106461	obj/kernel.asm	/^c0106461:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106464	obj/kernel.asm	/^c0106464:	a1 78 24 1c c0       	mov    0xc01c2478,%eax$/;"	l
c0106469	obj/kernel.asm	/^c0106469:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010646c	obj/kernel.asm	/^c010646c:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010646f	obj/kernel.asm	/^c010646f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0106472	obj/kernel.asm	/^c0106472:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0106475	obj/kernel.asm	/^c0106475:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106478	obj/kernel.asm	/^c0106478:	ff d0                	call   *%eax$/;"	l
c010647a	obj/kernel.asm	/^c010647a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010647d	obj/kernel.asm	/^c010647d:	c9                   	leave  $/;"	l
c010647e	obj/kernel.asm	/^c010647e:	c3                   	ret    $/;"	l
c010647f	obj/kernel.asm	/^c010647f <swap_set_unswappable>:$/;"	l
c010647f	obj/kernel.asm	/^c010647f:	55                   	push   %ebp$/;"	l
c0106480	obj/kernel.asm	/^c0106480:	89 e5                	mov    %esp,%ebp$/;"	l
c0106482	obj/kernel.asm	/^c0106482:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106485	obj/kernel.asm	/^c0106485:	a1 78 24 1c c0       	mov    0xc01c2478,%eax$/;"	l
c010648a	obj/kernel.asm	/^c010648a:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010648d	obj/kernel.asm	/^c010648d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106490	obj/kernel.asm	/^c0106490:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0106493	obj/kernel.asm	/^c0106493:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106496	obj/kernel.asm	/^c0106496:	ff d0                	call   *%eax$/;"	l
c0106498	obj/kernel.asm	/^c0106498:	83 c4 10             	add    $0x10,%esp$/;"	l
c010649b	obj/kernel.asm	/^c010649b:	c9                   	leave  $/;"	l
c010649c	obj/kernel.asm	/^c010649c:	c3                   	ret    $/;"	l
c010649d	obj/kernel.asm	/^c010649d <swap_out>:$/;"	l
c010649d	obj/kernel.asm	/^c010649d:	55                   	push   %ebp$/;"	l
c010649e	obj/kernel.asm	/^c010649e:	89 e5                	mov    %esp,%ebp$/;"	l
c01064a0	obj/kernel.asm	/^c01064a0:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01064a3	obj/kernel.asm	/^c01064a3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01064aa	obj/kernel.asm	/^c01064aa:	e9 2e 01 00 00       	jmp    c01065dd <swap_out+0x140>$/;"	l
c01064af	obj/kernel.asm	/^c01064af:	a1 78 24 1c c0       	mov    0xc01c2478,%eax$/;"	l
c01064b4	obj/kernel.asm	/^c01064b4:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01064b7	obj/kernel.asm	/^c01064b7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01064ba	obj/kernel.asm	/^c01064ba:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01064bd	obj/kernel.asm	/^c01064bd:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c01064c0	obj/kernel.asm	/^c01064c0:	52                   	push   %edx$/;"	l
c01064c1	obj/kernel.asm	/^c01064c1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01064c4	obj/kernel.asm	/^c01064c4:	ff d0                	call   *%eax$/;"	l
c01064c6	obj/kernel.asm	/^c01064c6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01064c9	obj/kernel.asm	/^c01064c9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01064cc	obj/kernel.asm	/^c01064cc:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01064d0	obj/kernel.asm	/^c01064d0:	74 18                	je     c01064ea <swap_out+0x4d>$/;"	l
c01064d2	obj/kernel.asm	/^c01064d2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01064d5	obj/kernel.asm	/^c01064d5:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01064d8	obj/kernel.asm	/^c01064d8:	68 64 e1 10 c0       	push   $0xc010e164$/;"	l
c01064dd	obj/kernel.asm	/^c01064dd:	e8 98 9d ff ff       	call   c010027a <cprintf>$/;"	l
c01064e2	obj/kernel.asm	/^c01064e2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01064e5	obj/kernel.asm	/^c01064e5:	e9 ff 00 00 00       	jmp    c01065e9 <swap_out+0x14c>$/;"	l
c01064ea	obj/kernel.asm	/^c01064ea:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01064ed	obj/kernel.asm	/^c01064ed:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01064f0	obj/kernel.asm	/^c01064f0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01064f3	obj/kernel.asm	/^c01064f3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01064f6	obj/kernel.asm	/^c01064f6:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01064f9	obj/kernel.asm	/^c01064f9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01064fc	obj/kernel.asm	/^c01064fc:	6a 00                	push   $0x0$/;"	l
c01064fe	obj/kernel.asm	/^c01064fe:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0106501	obj/kernel.asm	/^c0106501:	50                   	push   %eax$/;"	l
c0106502	obj/kernel.asm	/^c0106502:	e8 40 db ff ff       	call   c0104047 <get_pte>$/;"	l
c0106507	obj/kernel.asm	/^c0106507:	83 c4 10             	add    $0x10,%esp$/;"	l
c010650a	obj/kernel.asm	/^c010650a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010650d	obj/kernel.asm	/^c010650d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106510	obj/kernel.asm	/^c0106510:	8b 00                	mov    (%eax),%eax$/;"	l
c0106512	obj/kernel.asm	/^c0106512:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106515	obj/kernel.asm	/^c0106515:	85 c0                	test   %eax,%eax$/;"	l
c0106517	obj/kernel.asm	/^c0106517:	75 16                	jne    c010652f <swap_out+0x92>$/;"	l
c0106519	obj/kernel.asm	/^c0106519:	68 91 e1 10 c0       	push   $0xc010e191$/;"	l
c010651e	obj/kernel.asm	/^c010651e:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c0106523	obj/kernel.asm	/^c0106523:	6a 67                	push   $0x67$/;"	l
c0106525	obj/kernel.asm	/^c0106525:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c010652a	obj/kernel.asm	/^c010652a:	e8 b0 9e ff ff       	call   c01003df <__panic>$/;"	l
c010652f	obj/kernel.asm	/^c010652f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106532	obj/kernel.asm	/^c0106532:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0106535	obj/kernel.asm	/^c0106535:	8b 52 1c             	mov    0x1c(%edx),%edx$/;"	l
c0106538	obj/kernel.asm	/^c0106538:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c010653b	obj/kernel.asm	/^c010653b:	83 c2 01             	add    $0x1,%edx$/;"	l
c010653e	obj/kernel.asm	/^c010653e:	c1 e2 08             	shl    $0x8,%edx$/;"	l
c0106541	obj/kernel.asm	/^c0106541:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106544	obj/kernel.asm	/^c0106544:	50                   	push   %eax$/;"	l
c0106545	obj/kernel.asm	/^c0106545:	52                   	push   %edx$/;"	l
c0106546	obj/kernel.asm	/^c0106546:	e8 26 33 00 00       	call   c0109871 <swapfs_write>$/;"	l
c010654b	obj/kernel.asm	/^c010654b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010654e	obj/kernel.asm	/^c010654e:	85 c0                	test   %eax,%eax$/;"	l
c0106550	obj/kernel.asm	/^c0106550:	74 2b                	je     c010657d <swap_out+0xe0>$/;"	l
c0106552	obj/kernel.asm	/^c0106552:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106555	obj/kernel.asm	/^c0106555:	68 bb e1 10 c0       	push   $0xc010e1bb$/;"	l
c010655a	obj/kernel.asm	/^c010655a:	e8 1b 9d ff ff       	call   c010027a <cprintf>$/;"	l
c010655f	obj/kernel.asm	/^c010655f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106562	obj/kernel.asm	/^c0106562:	a1 78 24 1c c0       	mov    0xc01c2478,%eax$/;"	l
c0106567	obj/kernel.asm	/^c0106567:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010656a	obj/kernel.asm	/^c010656a:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010656d	obj/kernel.asm	/^c010656d:	6a 00                	push   $0x0$/;"	l
c010656f	obj/kernel.asm	/^c010656f:	52                   	push   %edx$/;"	l
c0106570	obj/kernel.asm	/^c0106570:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0106573	obj/kernel.asm	/^c0106573:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106576	obj/kernel.asm	/^c0106576:	ff d0                	call   *%eax$/;"	l
c0106578	obj/kernel.asm	/^c0106578:	83 c4 10             	add    $0x10,%esp$/;"	l
c010657b	obj/kernel.asm	/^c010657b:	eb 5c                	jmp    c01065d9 <swap_out+0x13c>$/;"	l
c010657d	obj/kernel.asm	/^c010657d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106580	obj/kernel.asm	/^c0106580:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0106583	obj/kernel.asm	/^c0106583:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106586	obj/kernel.asm	/^c0106586:	83 c0 01             	add    $0x1,%eax$/;"	l
c0106589	obj/kernel.asm	/^c0106589:	50                   	push   %eax$/;"	l
c010658a	obj/kernel.asm	/^c010658a:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010658d	obj/kernel.asm	/^c010658d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106590	obj/kernel.asm	/^c0106590:	68 d4 e1 10 c0       	push   $0xc010e1d4$/;"	l
c0106595	obj/kernel.asm	/^c0106595:	e8 e0 9c ff ff       	call   c010027a <cprintf>$/;"	l
c010659a	obj/kernel.asm	/^c010659a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010659d	obj/kernel.asm	/^c010659d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01065a0	obj/kernel.asm	/^c01065a0:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01065a3	obj/kernel.asm	/^c01065a3:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01065a6	obj/kernel.asm	/^c01065a6:	83 c0 01             	add    $0x1,%eax$/;"	l
c01065a9	obj/kernel.asm	/^c01065a9:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c01065ac	obj/kernel.asm	/^c01065ac:	89 c2                	mov    %eax,%edx$/;"	l
c01065ae	obj/kernel.asm	/^c01065ae:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01065b1	obj/kernel.asm	/^c01065b1:	89 10                	mov    %edx,(%eax)$/;"	l
c01065b3	obj/kernel.asm	/^c01065b3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01065b6	obj/kernel.asm	/^c01065b6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01065b9	obj/kernel.asm	/^c01065b9:	6a 01                	push   $0x1$/;"	l
c01065bb	obj/kernel.asm	/^c01065bb:	50                   	push   %eax$/;"	l
c01065bc	obj/kernel.asm	/^c01065bc:	e8 09 d4 ff ff       	call   c01039ca <free_pages>$/;"	l
c01065c1	obj/kernel.asm	/^c01065c1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01065c4	obj/kernel.asm	/^c01065c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01065c7	obj/kernel.asm	/^c01065c7:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01065ca	obj/kernel.asm	/^c01065ca:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01065cd	obj/kernel.asm	/^c01065cd:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01065d0	obj/kernel.asm	/^c01065d0:	50                   	push   %eax$/;"	l
c01065d1	obj/kernel.asm	/^c01065d1:	e8 ad e0 ff ff       	call   c0104683 <tlb_invalidate>$/;"	l
c01065d6	obj/kernel.asm	/^c01065d6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01065d9	obj/kernel.asm	/^c01065d9:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01065dd	obj/kernel.asm	/^c01065dd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01065e0	obj/kernel.asm	/^c01065e0:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01065e3	obj/kernel.asm	/^c01065e3:	0f 85 c6 fe ff ff    	jne    c01064af <swap_out+0x12>$/;"	l
c01065e9	obj/kernel.asm	/^c01065e9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01065ec	obj/kernel.asm	/^c01065ec:	c9                   	leave  $/;"	l
c01065ed	obj/kernel.asm	/^c01065ed:	c3                   	ret    $/;"	l
c01065ee	obj/kernel.asm	/^c01065ee <swap_in>:$/;"	l
c01065ee	obj/kernel.asm	/^c01065ee:	55                   	push   %ebp$/;"	l
c01065ef	obj/kernel.asm	/^c01065ef:	89 e5                	mov    %esp,%ebp$/;"	l
c01065f1	obj/kernel.asm	/^c01065f1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01065f4	obj/kernel.asm	/^c01065f4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01065f7	obj/kernel.asm	/^c01065f7:	6a 01                	push   $0x1$/;"	l
c01065f9	obj/kernel.asm	/^c01065f9:	e8 60 d3 ff ff       	call   c010395e <alloc_pages>$/;"	l
c01065fe	obj/kernel.asm	/^c01065fe:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106601	obj/kernel.asm	/^c0106601:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106604	obj/kernel.asm	/^c0106604:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0106608	obj/kernel.asm	/^c0106608:	75 16                	jne    c0106620 <swap_in+0x32>$/;"	l
c010660a	obj/kernel.asm	/^c010660a:	68 14 e2 10 c0       	push   $0xc010e214$/;"	l
c010660f	obj/kernel.asm	/^c010660f:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c0106614	obj/kernel.asm	/^c0106614:	6a 7d                	push   $0x7d$/;"	l
c0106616	obj/kernel.asm	/^c0106616:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c010661b	obj/kernel.asm	/^c010661b:	e8 bf 9d ff ff       	call   c01003df <__panic>$/;"	l
c0106620	obj/kernel.asm	/^c0106620:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106623	obj/kernel.asm	/^c0106623:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106626	obj/kernel.asm	/^c0106626:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106629	obj/kernel.asm	/^c0106629:	6a 00                	push   $0x0$/;"	l
c010662b	obj/kernel.asm	/^c010662b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010662e	obj/kernel.asm	/^c010662e:	50                   	push   %eax$/;"	l
c010662f	obj/kernel.asm	/^c010662f:	e8 13 da ff ff       	call   c0104047 <get_pte>$/;"	l
c0106634	obj/kernel.asm	/^c0106634:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106637	obj/kernel.asm	/^c0106637:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010663a	obj/kernel.asm	/^c010663a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010663d	obj/kernel.asm	/^c010663d:	8b 00                	mov    (%eax),%eax$/;"	l
c010663f	obj/kernel.asm	/^c010663f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106642	obj/kernel.asm	/^c0106642:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106645	obj/kernel.asm	/^c0106645:	50                   	push   %eax$/;"	l
c0106646	obj/kernel.asm	/^c0106646:	e8 cd 31 00 00       	call   c0109818 <swapfs_read>$/;"	l
c010664b	obj/kernel.asm	/^c010664b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010664e	obj/kernel.asm	/^c010664e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106651	obj/kernel.asm	/^c0106651:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0106655	obj/kernel.asm	/^c0106655:	74 1f                	je     c0106676 <swap_in+0x88>$/;"	l
c0106657	obj/kernel.asm	/^c0106657:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010665b	obj/kernel.asm	/^c010665b:	75 19                	jne    c0106676 <swap_in+0x88>$/;"	l
c010665d	obj/kernel.asm	/^c010665d:	68 21 e2 10 c0       	push   $0xc010e221$/;"	l
c0106662	obj/kernel.asm	/^c0106662:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c0106667	obj/kernel.asm	/^c0106667:	68 85 00 00 00       	push   $0x85$/;"	l
c010666c	obj/kernel.asm	/^c010666c:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c0106671	obj/kernel.asm	/^c0106671:	e8 69 9d ff ff       	call   c01003df <__panic>$/;"	l
c0106676	obj/kernel.asm	/^c0106676:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106679	obj/kernel.asm	/^c0106679:	8b 00                	mov    (%eax),%eax$/;"	l
c010667b	obj/kernel.asm	/^c010667b:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c010667e	obj/kernel.asm	/^c010667e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106681	obj/kernel.asm	/^c0106681:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0106684	obj/kernel.asm	/^c0106684:	50                   	push   %eax$/;"	l
c0106685	obj/kernel.asm	/^c0106685:	68 28 e2 10 c0       	push   $0xc010e228$/;"	l
c010668a	obj/kernel.asm	/^c010668a:	e8 eb 9b ff ff       	call   c010027a <cprintf>$/;"	l
c010668f	obj/kernel.asm	/^c010668f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106692	obj/kernel.asm	/^c0106692:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106695	obj/kernel.asm	/^c0106695:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0106698	obj/kernel.asm	/^c0106698:	89 10                	mov    %edx,(%eax)$/;"	l
c010669a	obj/kernel.asm	/^c010669a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010669f	obj/kernel.asm	/^c010669f:	c9                   	leave  $/;"	l
c01066a0	obj/kernel.asm	/^c01066a0:	c3                   	ret    $/;"	l
c01066a1	obj/kernel.asm	/^c01066a1 <check_content_set>:$/;"	l
c01066a1	obj/kernel.asm	/^c01066a1:	55                   	push   %ebp$/;"	l
c01066a2	obj/kernel.asm	/^c01066a2:	89 e5                	mov    %esp,%ebp$/;"	l
c01066a4	obj/kernel.asm	/^c01066a4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01066a7	obj/kernel.asm	/^c01066a7:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c01066ac	obj/kernel.asm	/^c01066ac:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c01066af	obj/kernel.asm	/^c01066af:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c01066b4	obj/kernel.asm	/^c01066b4:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01066b7	obj/kernel.asm	/^c01066b7:	74 19                	je     c01066d2 <check_content_set+0x31>$/;"	l
c01066b9	obj/kernel.asm	/^c01066b9:	68 66 e2 10 c0       	push   $0xc010e266$/;"	l
c01066be	obj/kernel.asm	/^c01066be:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c01066c3	obj/kernel.asm	/^c01066c3:	68 92 00 00 00       	push   $0x92$/;"	l
c01066c8	obj/kernel.asm	/^c01066c8:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c01066cd	obj/kernel.asm	/^c01066cd:	e8 0d 9d ff ff       	call   c01003df <__panic>$/;"	l
c01066d2	obj/kernel.asm	/^c01066d2:	b8 10 10 00 00       	mov    $0x1010,%eax$/;"	l
c01066d7	obj/kernel.asm	/^c01066d7:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c01066da	obj/kernel.asm	/^c01066da:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c01066df	obj/kernel.asm	/^c01066df:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01066e2	obj/kernel.asm	/^c01066e2:	74 19                	je     c01066fd <check_content_set+0x5c>$/;"	l
c01066e4	obj/kernel.asm	/^c01066e4:	68 66 e2 10 c0       	push   $0xc010e266$/;"	l
c01066e9	obj/kernel.asm	/^c01066e9:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c01066ee	obj/kernel.asm	/^c01066ee:	68 94 00 00 00       	push   $0x94$/;"	l
c01066f3	obj/kernel.asm	/^c01066f3:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c01066f8	obj/kernel.asm	/^c01066f8:	e8 e2 9c ff ff       	call   c01003df <__panic>$/;"	l
c01066fd	obj/kernel.asm	/^c01066fd:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0106702	obj/kernel.asm	/^c0106702:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0106705	obj/kernel.asm	/^c0106705:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c010670a	obj/kernel.asm	/^c010670a:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010670d	obj/kernel.asm	/^c010670d:	74 19                	je     c0106728 <check_content_set+0x87>$/;"	l
c010670f	obj/kernel.asm	/^c010670f:	68 75 e2 10 c0       	push   $0xc010e275$/;"	l
c0106714	obj/kernel.asm	/^c0106714:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c0106719	obj/kernel.asm	/^c0106719:	68 96 00 00 00       	push   $0x96$/;"	l
c010671e	obj/kernel.asm	/^c010671e:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c0106723	obj/kernel.asm	/^c0106723:	e8 b7 9c ff ff       	call   c01003df <__panic>$/;"	l
c0106728	obj/kernel.asm	/^c0106728:	b8 10 20 00 00       	mov    $0x2010,%eax$/;"	l
c010672d	obj/kernel.asm	/^c010672d:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0106730	obj/kernel.asm	/^c0106730:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c0106735	obj/kernel.asm	/^c0106735:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0106738	obj/kernel.asm	/^c0106738:	74 19                	je     c0106753 <check_content_set+0xb2>$/;"	l
c010673a	obj/kernel.asm	/^c010673a:	68 75 e2 10 c0       	push   $0xc010e275$/;"	l
c010673f	obj/kernel.asm	/^c010673f:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c0106744	obj/kernel.asm	/^c0106744:	68 98 00 00 00       	push   $0x98$/;"	l
c0106749	obj/kernel.asm	/^c0106749:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c010674e	obj/kernel.asm	/^c010674e:	e8 8c 9c ff ff       	call   c01003df <__panic>$/;"	l
c0106753	obj/kernel.asm	/^c0106753:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c0106758	obj/kernel.asm	/^c0106758:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c010675b	obj/kernel.asm	/^c010675b:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c0106760	obj/kernel.asm	/^c0106760:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0106763	obj/kernel.asm	/^c0106763:	74 19                	je     c010677e <check_content_set+0xdd>$/;"	l
c0106765	obj/kernel.asm	/^c0106765:	68 84 e2 10 c0       	push   $0xc010e284$/;"	l
c010676a	obj/kernel.asm	/^c010676a:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c010676f	obj/kernel.asm	/^c010676f:	68 9a 00 00 00       	push   $0x9a$/;"	l
c0106774	obj/kernel.asm	/^c0106774:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c0106779	obj/kernel.asm	/^c0106779:	e8 61 9c ff ff       	call   c01003df <__panic>$/;"	l
c010677e	obj/kernel.asm	/^c010677e:	b8 10 30 00 00       	mov    $0x3010,%eax$/;"	l
c0106783	obj/kernel.asm	/^c0106783:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0106786	obj/kernel.asm	/^c0106786:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c010678b	obj/kernel.asm	/^c010678b:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010678e	obj/kernel.asm	/^c010678e:	74 19                	je     c01067a9 <check_content_set+0x108>$/;"	l
c0106790	obj/kernel.asm	/^c0106790:	68 84 e2 10 c0       	push   $0xc010e284$/;"	l
c0106795	obj/kernel.asm	/^c0106795:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c010679a	obj/kernel.asm	/^c010679a:	68 9c 00 00 00       	push   $0x9c$/;"	l
c010679f	obj/kernel.asm	/^c010679f:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c01067a4	obj/kernel.asm	/^c01067a4:	e8 36 9c ff ff       	call   c01003df <__panic>$/;"	l
c01067a9	obj/kernel.asm	/^c01067a9:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c01067ae	obj/kernel.asm	/^c01067ae:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c01067b1	obj/kernel.asm	/^c01067b1:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c01067b6	obj/kernel.asm	/^c01067b6:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01067b9	obj/kernel.asm	/^c01067b9:	74 19                	je     c01067d4 <check_content_set+0x133>$/;"	l
c01067bb	obj/kernel.asm	/^c01067bb:	68 93 e2 10 c0       	push   $0xc010e293$/;"	l
c01067c0	obj/kernel.asm	/^c01067c0:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c01067c5	obj/kernel.asm	/^c01067c5:	68 9e 00 00 00       	push   $0x9e$/;"	l
c01067ca	obj/kernel.asm	/^c01067ca:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c01067cf	obj/kernel.asm	/^c01067cf:	e8 0b 9c ff ff       	call   c01003df <__panic>$/;"	l
c01067d4	obj/kernel.asm	/^c01067d4:	b8 10 40 00 00       	mov    $0x4010,%eax$/;"	l
c01067d9	obj/kernel.asm	/^c01067d9:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c01067dc	obj/kernel.asm	/^c01067dc:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c01067e1	obj/kernel.asm	/^c01067e1:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01067e4	obj/kernel.asm	/^c01067e4:	74 19                	je     c01067ff <check_content_set+0x15e>$/;"	l
c01067e6	obj/kernel.asm	/^c01067e6:	68 93 e2 10 c0       	push   $0xc010e293$/;"	l
c01067eb	obj/kernel.asm	/^c01067eb:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c01067f0	obj/kernel.asm	/^c01067f0:	68 a0 00 00 00       	push   $0xa0$/;"	l
c01067f5	obj/kernel.asm	/^c01067f5:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c01067fa	obj/kernel.asm	/^c01067fa:	e8 e0 9b ff ff       	call   c01003df <__panic>$/;"	l
c01067ff	obj/kernel.asm	/^c01067ff:	c9                   	leave  $/;"	l
c0106800	obj/kernel.asm	/^c0106800:	c3                   	ret    $/;"	l
c0106801	obj/kernel.asm	/^c0106801 <check_content_access>:$/;"	l
c0106801	obj/kernel.asm	/^c0106801:	55                   	push   %ebp$/;"	l
c0106802	obj/kernel.asm	/^c0106802:	89 e5                	mov    %esp,%ebp$/;"	l
c0106804	obj/kernel.asm	/^c0106804:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106807	obj/kernel.asm	/^c0106807:	a1 78 24 1c c0       	mov    0xc01c2478,%eax$/;"	l
c010680c	obj/kernel.asm	/^c010680c:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010680f	obj/kernel.asm	/^c010680f:	ff d0                	call   *%eax$/;"	l
c0106811	obj/kernel.asm	/^c0106811:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106814	obj/kernel.asm	/^c0106814:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106817	obj/kernel.asm	/^c0106817:	c9                   	leave  $/;"	l
c0106818	obj/kernel.asm	/^c0106818:	c3                   	ret    $/;"	l
c0106819	obj/kernel.asm	/^c0106819 <check_swap>:$/;"	l
c0106819	obj/kernel.asm	/^c0106819:	55                   	push   %ebp$/;"	l
c010681a	obj/kernel.asm	/^c010681a:	89 e5                	mov    %esp,%ebp$/;"	l
c010681c	obj/kernel.asm	/^c010681c:	53                   	push   %ebx$/;"	l
c010681d	obj/kernel.asm	/^c010681d:	83 ec 64             	sub    $0x64,%esp$/;"	l
c0106820	obj/kernel.asm	/^c0106820:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0106827	obj/kernel.asm	/^c0106827:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010682e	obj/kernel.asm	/^c010682e:	c7 45 e8 6c 46 1c c0 	movl   $0xc01c466c,-0x18(%ebp)$/;"	l
c0106835	obj/kernel.asm	/^c0106835:	eb 60                	jmp    c0106897 <check_swap+0x7e>$/;"	l
c0106837	obj/kernel.asm	/^c0106837:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010683a	obj/kernel.asm	/^c010683a:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c010683d	obj/kernel.asm	/^c010683d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106840	obj/kernel.asm	/^c0106840:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106843	obj/kernel.asm	/^c0106843:	83 c0 04             	add    $0x4,%eax$/;"	l
c0106846	obj/kernel.asm	/^c0106846:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)$/;"	l
c010684d	obj/kernel.asm	/^c010684d:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0106850	obj/kernel.asm	/^c0106850:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0106853	obj/kernel.asm	/^c0106853:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0106856	obj/kernel.asm	/^c0106856:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0106859	obj/kernel.asm	/^c0106859:	19 c0                	sbb    %eax,%eax$/;"	l
c010685b	obj/kernel.asm	/^c010685b:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010685e	obj/kernel.asm	/^c010685e:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0106862	obj/kernel.asm	/^c0106862:	0f 95 c0             	setne  %al$/;"	l
c0106865	obj/kernel.asm	/^c0106865:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0106868	obj/kernel.asm	/^c0106868:	85 c0                	test   %eax,%eax$/;"	l
c010686a	obj/kernel.asm	/^c010686a:	75 19                	jne    c0106885 <check_swap+0x6c>$/;"	l
c010686c	obj/kernel.asm	/^c010686c:	68 a2 e2 10 c0       	push   $0xc010e2a2$/;"	l
c0106871	obj/kernel.asm	/^c0106871:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c0106876	obj/kernel.asm	/^c0106876:	68 bb 00 00 00       	push   $0xbb$/;"	l
c010687b	obj/kernel.asm	/^c010687b:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c0106880	obj/kernel.asm	/^c0106880:	e8 5a 9b ff ff       	call   c01003df <__panic>$/;"	l
c0106885	obj/kernel.asm	/^c0106885:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0106889	obj/kernel.asm	/^c0106889:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010688c	obj/kernel.asm	/^c010688c:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010688f	obj/kernel.asm	/^c010688f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106892	obj/kernel.asm	/^c0106892:	01 d0                	add    %edx,%eax$/;"	l
c0106894	obj/kernel.asm	/^c0106894:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106897	obj/kernel.asm	/^c0106897:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010689a	obj/kernel.asm	/^c010689a:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c010689d	obj/kernel.asm	/^c010689d:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c01068a0	obj/kernel.asm	/^c01068a0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01068a3	obj/kernel.asm	/^c01068a3:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01068a6	obj/kernel.asm	/^c01068a6:	81 7d e8 6c 46 1c c0 	cmpl   $0xc01c466c,-0x18(%ebp)$/;"	l
c01068ad	obj/kernel.asm	/^c01068ad:	75 88                	jne    c0106837 <check_swap+0x1e>$/;"	l
c01068af	obj/kernel.asm	/^c01068af:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c01068b2	obj/kernel.asm	/^c01068b2:	e8 47 d1 ff ff       	call   c01039fe <nr_free_pages>$/;"	l
c01068b7	obj/kernel.asm	/^c01068b7:	39 c3                	cmp    %eax,%ebx$/;"	l
c01068b9	obj/kernel.asm	/^c01068b9:	74 19                	je     c01068d4 <check_swap+0xbb>$/;"	l
c01068bb	obj/kernel.asm	/^c01068bb:	68 b2 e2 10 c0       	push   $0xc010e2b2$/;"	l
c01068c0	obj/kernel.asm	/^c01068c0:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c01068c5	obj/kernel.asm	/^c01068c5:	68 be 00 00 00       	push   $0xbe$/;"	l
c01068ca	obj/kernel.asm	/^c01068ca:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c01068cf	obj/kernel.asm	/^c01068cf:	e8 0b 9b ff ff       	call   c01003df <__panic>$/;"	l
c01068d4	obj/kernel.asm	/^c01068d4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01068d7	obj/kernel.asm	/^c01068d7:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01068da	obj/kernel.asm	/^c01068da:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01068dd	obj/kernel.asm	/^c01068dd:	68 cc e2 10 c0       	push   $0xc010e2cc$/;"	l
c01068e2	obj/kernel.asm	/^c01068e2:	e8 93 99 ff ff       	call   c010027a <cprintf>$/;"	l
c01068e7	obj/kernel.asm	/^c01068e7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01068ea	obj/kernel.asm	/^c01068ea:	e8 c5 e9 ff ff       	call   c01052b4 <mm_create>$/;"	l
c01068ef	obj/kernel.asm	/^c01068ef:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01068f2	obj/kernel.asm	/^c01068f2:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01068f6	obj/kernel.asm	/^c01068f6:	75 19                	jne    c0106911 <check_swap+0xf8>$/;"	l
c01068f8	obj/kernel.asm	/^c01068f8:	68 f2 e2 10 c0       	push   $0xc010e2f2$/;"	l
c01068fd	obj/kernel.asm	/^c01068fd:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c0106902	obj/kernel.asm	/^c0106902:	68 c3 00 00 00       	push   $0xc3$/;"	l
c0106907	obj/kernel.asm	/^c0106907:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c010690c	obj/kernel.asm	/^c010690c:	e8 ce 9a ff ff       	call   c01003df <__panic>$/;"	l
c0106911	obj/kernel.asm	/^c0106911:	a1 9c 45 1c c0       	mov    0xc01c459c,%eax$/;"	l
c0106916	obj/kernel.asm	/^c0106916:	85 c0                	test   %eax,%eax$/;"	l
c0106918	obj/kernel.asm	/^c0106918:	74 19                	je     c0106933 <check_swap+0x11a>$/;"	l
c010691a	obj/kernel.asm	/^c010691a:	68 fd e2 10 c0       	push   $0xc010e2fd$/;"	l
c010691f	obj/kernel.asm	/^c010691f:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c0106924	obj/kernel.asm	/^c0106924:	68 c6 00 00 00       	push   $0xc6$/;"	l
c0106929	obj/kernel.asm	/^c0106929:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c010692e	obj/kernel.asm	/^c010692e:	e8 ac 9a ff ff       	call   c01003df <__panic>$/;"	l
c0106933	obj/kernel.asm	/^c0106933:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106936	obj/kernel.asm	/^c0106936:	a3 9c 45 1c c0       	mov    %eax,0xc01c459c$/;"	l
c010693b	obj/kernel.asm	/^c010693b:	8b 15 c4 23 1c c0    	mov    0xc01c23c4,%edx$/;"	l
c0106941	obj/kernel.asm	/^c0106941:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106944	obj/kernel.asm	/^c0106944:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0106947	obj/kernel.asm	/^c0106947:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010694a	obj/kernel.asm	/^c010694a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010694d	obj/kernel.asm	/^c010694d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0106950	obj/kernel.asm	/^c0106950:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106953	obj/kernel.asm	/^c0106953:	8b 00                	mov    (%eax),%eax$/;"	l
c0106955	obj/kernel.asm	/^c0106955:	85 c0                	test   %eax,%eax$/;"	l
c0106957	obj/kernel.asm	/^c0106957:	74 19                	je     c0106972 <check_swap+0x159>$/;"	l
c0106959	obj/kernel.asm	/^c0106959:	68 15 e3 10 c0       	push   $0xc010e315$/;"	l
c010695e	obj/kernel.asm	/^c010695e:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c0106963	obj/kernel.asm	/^c0106963:	68 cb 00 00 00       	push   $0xcb$/;"	l
c0106968	obj/kernel.asm	/^c0106968:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c010696d	obj/kernel.asm	/^c010696d:	e8 6d 9a ff ff       	call   c01003df <__panic>$/;"	l
c0106972	obj/kernel.asm	/^c0106972:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106975	obj/kernel.asm	/^c0106975:	6a 03                	push   $0x3$/;"	l
c0106977	obj/kernel.asm	/^c0106977:	68 00 60 00 00       	push   $0x6000$/;"	l
c010697c	obj/kernel.asm	/^c010697c:	68 00 10 00 00       	push   $0x1000$/;"	l
c0106981	obj/kernel.asm	/^c0106981:	e8 ce e9 ff ff       	call   c0105354 <vma_create>$/;"	l
c0106986	obj/kernel.asm	/^c0106986:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106989	obj/kernel.asm	/^c0106989:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010698c	obj/kernel.asm	/^c010698c:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0106990	obj/kernel.asm	/^c0106990:	75 19                	jne    c01069ab <check_swap+0x192>$/;"	l
c0106992	obj/kernel.asm	/^c0106992:	68 23 e3 10 c0       	push   $0xc010e323$/;"	l
c0106997	obj/kernel.asm	/^c0106997:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c010699c	obj/kernel.asm	/^c010699c:	68 ce 00 00 00       	push   $0xce$/;"	l
c01069a1	obj/kernel.asm	/^c01069a1:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c01069a6	obj/kernel.asm	/^c01069a6:	e8 34 9a ff ff       	call   c01003df <__panic>$/;"	l
c01069ab	obj/kernel.asm	/^c01069ab:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01069ae	obj/kernel.asm	/^c01069ae:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c01069b1	obj/kernel.asm	/^c01069b1:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01069b4	obj/kernel.asm	/^c01069b4:	e8 02 eb ff ff       	call   c01054bb <insert_vma_struct>$/;"	l
c01069b9	obj/kernel.asm	/^c01069b9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01069bc	obj/kernel.asm	/^c01069bc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01069bf	obj/kernel.asm	/^c01069bf:	68 30 e3 10 c0       	push   $0xc010e330$/;"	l
c01069c4	obj/kernel.asm	/^c01069c4:	e8 b1 98 ff ff       	call   c010027a <cprintf>$/;"	l
c01069c9	obj/kernel.asm	/^c01069c9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01069cc	obj/kernel.asm	/^c01069cc:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c01069d3	obj/kernel.asm	/^c01069d3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01069d6	obj/kernel.asm	/^c01069d6:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01069d9	obj/kernel.asm	/^c01069d9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01069dc	obj/kernel.asm	/^c01069dc:	6a 01                	push   $0x1$/;"	l
c01069de	obj/kernel.asm	/^c01069de:	68 00 10 00 00       	push   $0x1000$/;"	l
c01069e3	obj/kernel.asm	/^c01069e3:	50                   	push   %eax$/;"	l
c01069e4	obj/kernel.asm	/^c01069e4:	e8 5e d6 ff ff       	call   c0104047 <get_pte>$/;"	l
c01069e9	obj/kernel.asm	/^c01069e9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01069ec	obj/kernel.asm	/^c01069ec:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01069ef	obj/kernel.asm	/^c01069ef:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
c01069f3	obj/kernel.asm	/^c01069f3:	75 19                	jne    c0106a0e <check_swap+0x1f5>$/;"	l
c01069f5	obj/kernel.asm	/^c01069f5:	68 64 e3 10 c0       	push   $0xc010e364$/;"	l
c01069fa	obj/kernel.asm	/^c01069fa:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c01069ff	obj/kernel.asm	/^c01069ff:	68 d6 00 00 00       	push   $0xd6$/;"	l
c0106a04	obj/kernel.asm	/^c0106a04:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c0106a09	obj/kernel.asm	/^c0106a09:	e8 d1 99 ff ff       	call   c01003df <__panic>$/;"	l
c0106a0e	obj/kernel.asm	/^c0106a0e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106a11	obj/kernel.asm	/^c0106a11:	68 78 e3 10 c0       	push   $0xc010e378$/;"	l
c0106a16	obj/kernel.asm	/^c0106a16:	e8 5f 98 ff ff       	call   c010027a <cprintf>$/;"	l
c0106a1b	obj/kernel.asm	/^c0106a1b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106a1e	obj/kernel.asm	/^c0106a1e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106a25	obj/kernel.asm	/^c0106a25:	e9 90 00 00 00       	jmp    c0106aba <check_swap+0x2a1>$/;"	l
c0106a2a	obj/kernel.asm	/^c0106a2a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106a2d	obj/kernel.asm	/^c0106a2d:	6a 01                	push   $0x1$/;"	l
c0106a2f	obj/kernel.asm	/^c0106a2f:	e8 2a cf ff ff       	call   c010395e <alloc_pages>$/;"	l
c0106a34	obj/kernel.asm	/^c0106a34:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106a37	obj/kernel.asm	/^c0106a37:	89 c2                	mov    %eax,%edx$/;"	l
c0106a39	obj/kernel.asm	/^c0106a39:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106a3c	obj/kernel.asm	/^c0106a3c:	89 14 85 a0 45 1c c0 	mov    %edx,-0x3fe3ba60(,%eax,4)$/;"	l
c0106a43	obj/kernel.asm	/^c0106a43:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106a46	obj/kernel.asm	/^c0106a46:	8b 04 85 a0 45 1c c0 	mov    -0x3fe3ba60(,%eax,4),%eax$/;"	l
c0106a4d	obj/kernel.asm	/^c0106a4d:	85 c0                	test   %eax,%eax$/;"	l
c0106a4f	obj/kernel.asm	/^c0106a4f:	75 19                	jne    c0106a6a <check_swap+0x251>$/;"	l
c0106a51	obj/kernel.asm	/^c0106a51:	68 9c e3 10 c0       	push   $0xc010e39c$/;"	l
c0106a56	obj/kernel.asm	/^c0106a56:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c0106a5b	obj/kernel.asm	/^c0106a5b:	68 db 00 00 00       	push   $0xdb$/;"	l
c0106a60	obj/kernel.asm	/^c0106a60:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c0106a65	obj/kernel.asm	/^c0106a65:	e8 75 99 ff ff       	call   c01003df <__panic>$/;"	l
c0106a6a	obj/kernel.asm	/^c0106a6a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106a6d	obj/kernel.asm	/^c0106a6d:	8b 04 85 a0 45 1c c0 	mov    -0x3fe3ba60(,%eax,4),%eax$/;"	l
c0106a74	obj/kernel.asm	/^c0106a74:	83 c0 04             	add    $0x4,%eax$/;"	l
c0106a77	obj/kernel.asm	/^c0106a77:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%ebp)$/;"	l
c0106a7e	obj/kernel.asm	/^c0106a7e:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0106a81	obj/kernel.asm	/^c0106a81:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0106a84	obj/kernel.asm	/^c0106a84:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0106a87	obj/kernel.asm	/^c0106a87:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0106a8a	obj/kernel.asm	/^c0106a8a:	19 c0                	sbb    %eax,%eax$/;"	l
c0106a8c	obj/kernel.asm	/^c0106a8c:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0106a8f	obj/kernel.asm	/^c0106a8f:	83 7d ac 00          	cmpl   $0x0,-0x54(%ebp)$/;"	l
c0106a93	obj/kernel.asm	/^c0106a93:	0f 95 c0             	setne  %al$/;"	l
c0106a96	obj/kernel.asm	/^c0106a96:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0106a99	obj/kernel.asm	/^c0106a99:	85 c0                	test   %eax,%eax$/;"	l
c0106a9b	obj/kernel.asm	/^c0106a9b:	74 19                	je     c0106ab6 <check_swap+0x29d>$/;"	l
c0106a9d	obj/kernel.asm	/^c0106a9d:	68 b0 e3 10 c0       	push   $0xc010e3b0$/;"	l
c0106aa2	obj/kernel.asm	/^c0106aa2:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c0106aa7	obj/kernel.asm	/^c0106aa7:	68 dc 00 00 00       	push   $0xdc$/;"	l
c0106aac	obj/kernel.asm	/^c0106aac:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c0106ab1	obj/kernel.asm	/^c0106ab1:	e8 29 99 ff ff       	call   c01003df <__panic>$/;"	l
c0106ab6	obj/kernel.asm	/^c0106ab6:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106aba	obj/kernel.asm	/^c0106aba:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106abe	obj/kernel.asm	/^c0106abe:	0f 8e 66 ff ff ff    	jle    c0106a2a <check_swap+0x211>$/;"	l
c0106ac4	obj/kernel.asm	/^c0106ac4:	a1 6c 46 1c c0       	mov    0xc01c466c,%eax$/;"	l
c0106ac9	obj/kernel.asm	/^c0106ac9:	8b 15 70 46 1c c0    	mov    0xc01c4670,%edx$/;"	l
c0106acf	obj/kernel.asm	/^c0106acf:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0106ad2	obj/kernel.asm	/^c0106ad2:	89 55 9c             	mov    %edx,-0x64(%ebp)$/;"	l
c0106ad5	obj/kernel.asm	/^c0106ad5:	c7 45 a8 6c 46 1c c0 	movl   $0xc01c466c,-0x58(%ebp)$/;"	l
c0106adc	obj/kernel.asm	/^c0106adc:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0106adf	obj/kernel.asm	/^c0106adf:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c0106ae2	obj/kernel.asm	/^c0106ae2:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0106ae5	obj/kernel.asm	/^c0106ae5:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0106ae8	obj/kernel.asm	/^c0106ae8:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0106aeb	obj/kernel.asm	/^c0106aeb:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0106aee	obj/kernel.asm	/^c0106aee:	89 10                	mov    %edx,(%eax)$/;"	l
c0106af0	obj/kernel.asm	/^c0106af0:	c7 45 a4 6c 46 1c c0 	movl   $0xc01c466c,-0x5c(%ebp)$/;"	l
c0106af7	obj/kernel.asm	/^c0106af7:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0106afa	obj/kernel.asm	/^c0106afa:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106afd	obj/kernel.asm	/^c0106afd:	39 45 a4             	cmp    %eax,-0x5c(%ebp)$/;"	l
c0106b00	obj/kernel.asm	/^c0106b00:	0f 94 c0             	sete   %al$/;"	l
c0106b03	obj/kernel.asm	/^c0106b03:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0106b06	obj/kernel.asm	/^c0106b06:	85 c0                	test   %eax,%eax$/;"	l
c0106b08	obj/kernel.asm	/^c0106b08:	75 19                	jne    c0106b23 <check_swap+0x30a>$/;"	l
c0106b0a	obj/kernel.asm	/^c0106b0a:	68 cb e3 10 c0       	push   $0xc010e3cb$/;"	l
c0106b0f	obj/kernel.asm	/^c0106b0f:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c0106b14	obj/kernel.asm	/^c0106b14:	68 e0 00 00 00       	push   $0xe0$/;"	l
c0106b19	obj/kernel.asm	/^c0106b19:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c0106b1e	obj/kernel.asm	/^c0106b1e:	e8 bc 98 ff ff       	call   c01003df <__panic>$/;"	l
c0106b23	obj/kernel.asm	/^c0106b23:	a1 74 46 1c c0       	mov    0xc01c4674,%eax$/;"	l
c0106b28	obj/kernel.asm	/^c0106b28:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0106b2b	obj/kernel.asm	/^c0106b2b:	c7 05 74 46 1c c0 00 	movl   $0x0,0xc01c4674$/;"	l
c0106b32	obj/kernel.asm	/^c0106b32:	00 00 00 $/;"	l
c0106b35	obj/kernel.asm	/^c0106b35:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106b3c	obj/kernel.asm	/^c0106b3c:	eb 1c                	jmp    c0106b5a <check_swap+0x341>$/;"	l
c0106b3e	obj/kernel.asm	/^c0106b3e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106b41	obj/kernel.asm	/^c0106b41:	8b 04 85 a0 45 1c c0 	mov    -0x3fe3ba60(,%eax,4),%eax$/;"	l
c0106b48	obj/kernel.asm	/^c0106b48:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106b4b	obj/kernel.asm	/^c0106b4b:	6a 01                	push   $0x1$/;"	l
c0106b4d	obj/kernel.asm	/^c0106b4d:	50                   	push   %eax$/;"	l
c0106b4e	obj/kernel.asm	/^c0106b4e:	e8 77 ce ff ff       	call   c01039ca <free_pages>$/;"	l
c0106b53	obj/kernel.asm	/^c0106b53:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106b56	obj/kernel.asm	/^c0106b56:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106b5a	obj/kernel.asm	/^c0106b5a:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106b5e	obj/kernel.asm	/^c0106b5e:	7e de                	jle    c0106b3e <check_swap+0x325>$/;"	l
c0106b60	obj/kernel.asm	/^c0106b60:	a1 74 46 1c c0       	mov    0xc01c4674,%eax$/;"	l
c0106b65	obj/kernel.asm	/^c0106b65:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0106b68	obj/kernel.asm	/^c0106b68:	74 19                	je     c0106b83 <check_swap+0x36a>$/;"	l
c0106b6a	obj/kernel.asm	/^c0106b6a:	68 e4 e3 10 c0       	push   $0xc010e3e4$/;"	l
c0106b6f	obj/kernel.asm	/^c0106b6f:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c0106b74	obj/kernel.asm	/^c0106b74:	68 e9 00 00 00       	push   $0xe9$/;"	l
c0106b79	obj/kernel.asm	/^c0106b79:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c0106b7e	obj/kernel.asm	/^c0106b7e:	e8 5c 98 ff ff       	call   c01003df <__panic>$/;"	l
c0106b83	obj/kernel.asm	/^c0106b83:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106b86	obj/kernel.asm	/^c0106b86:	68 08 e4 10 c0       	push   $0xc010e408$/;"	l
c0106b8b	obj/kernel.asm	/^c0106b8b:	e8 ea 96 ff ff       	call   c010027a <cprintf>$/;"	l
c0106b90	obj/kernel.asm	/^c0106b90:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106b93	obj/kernel.asm	/^c0106b93:	c7 05 6c 24 1c c0 00 	movl   $0x0,0xc01c246c$/;"	l
c0106b9a	obj/kernel.asm	/^c0106b9a:	00 00 00 $/;"	l
c0106b9d	obj/kernel.asm	/^c0106b9d:	e8 ff fa ff ff       	call   c01066a1 <check_content_set>$/;"	l
c0106ba2	obj/kernel.asm	/^c0106ba2:	a1 74 46 1c c0       	mov    0xc01c4674,%eax$/;"	l
c0106ba7	obj/kernel.asm	/^c0106ba7:	85 c0                	test   %eax,%eax$/;"	l
c0106ba9	obj/kernel.asm	/^c0106ba9:	74 19                	je     c0106bc4 <check_swap+0x3ab>$/;"	l
c0106bab	obj/kernel.asm	/^c0106bab:	68 2f e4 10 c0       	push   $0xc010e42f$/;"	l
c0106bb0	obj/kernel.asm	/^c0106bb0:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c0106bb5	obj/kernel.asm	/^c0106bb5:	68 f2 00 00 00       	push   $0xf2$/;"	l
c0106bba	obj/kernel.asm	/^c0106bba:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c0106bbf	obj/kernel.asm	/^c0106bbf:	e8 1b 98 ff ff       	call   c01003df <__panic>$/;"	l
c0106bc4	obj/kernel.asm	/^c0106bc4:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106bcb	obj/kernel.asm	/^c0106bcb:	eb 26                	jmp    c0106bf3 <check_swap+0x3da>$/;"	l
c0106bcd	obj/kernel.asm	/^c0106bcd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106bd0	obj/kernel.asm	/^c0106bd0:	c7 04 85 c0 45 1c c0 	movl   $0xffffffff,-0x3fe3ba40(,%eax,4)$/;"	l
c0106bd7	obj/kernel.asm	/^c0106bd7:	ff ff ff ff $/;"	l
c0106bdb	obj/kernel.asm	/^c0106bdb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106bde	obj/kernel.asm	/^c0106bde:	8b 14 85 c0 45 1c c0 	mov    -0x3fe3ba40(,%eax,4),%edx$/;"	l
c0106be5	obj/kernel.asm	/^c0106be5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106be8	obj/kernel.asm	/^c0106be8:	89 14 85 00 46 1c c0 	mov    %edx,-0x3fe3ba00(,%eax,4)$/;"	l
c0106bef	obj/kernel.asm	/^c0106bef:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106bf3	obj/kernel.asm	/^c0106bf3:	83 7d ec 09          	cmpl   $0x9,-0x14(%ebp)$/;"	l
c0106bf7	obj/kernel.asm	/^c0106bf7:	7e d4                	jle    c0106bcd <check_swap+0x3b4>$/;"	l
c0106bf9	obj/kernel.asm	/^c0106bf9:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106c00	obj/kernel.asm	/^c0106c00:	e9 cc 00 00 00       	jmp    c0106cd1 <check_swap+0x4b8>$/;"	l
c0106c05	obj/kernel.asm	/^c0106c05:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c08	obj/kernel.asm	/^c0106c08:	c7 04 85 54 46 1c c0 	movl   $0x0,-0x3fe3b9ac(,%eax,4)$/;"	l
c0106c0f	obj/kernel.asm	/^c0106c0f:	00 00 00 00 $/;"	l
c0106c13	obj/kernel.asm	/^c0106c13:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c16	obj/kernel.asm	/^c0106c16:	83 c0 01             	add    $0x1,%eax$/;"	l
c0106c19	obj/kernel.asm	/^c0106c19:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0106c1c	obj/kernel.asm	/^c0106c1c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106c1f	obj/kernel.asm	/^c0106c1f:	6a 00                	push   $0x0$/;"	l
c0106c21	obj/kernel.asm	/^c0106c21:	50                   	push   %eax$/;"	l
c0106c22	obj/kernel.asm	/^c0106c22:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0106c25	obj/kernel.asm	/^c0106c25:	e8 1d d4 ff ff       	call   c0104047 <get_pte>$/;"	l
c0106c2a	obj/kernel.asm	/^c0106c2a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106c2d	obj/kernel.asm	/^c0106c2d:	89 c2                	mov    %eax,%edx$/;"	l
c0106c2f	obj/kernel.asm	/^c0106c2f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c32	obj/kernel.asm	/^c0106c32:	89 14 85 54 46 1c c0 	mov    %edx,-0x3fe3b9ac(,%eax,4)$/;"	l
c0106c39	obj/kernel.asm	/^c0106c39:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c3c	obj/kernel.asm	/^c0106c3c:	8b 04 85 54 46 1c c0 	mov    -0x3fe3b9ac(,%eax,4),%eax$/;"	l
c0106c43	obj/kernel.asm	/^c0106c43:	85 c0                	test   %eax,%eax$/;"	l
c0106c45	obj/kernel.asm	/^c0106c45:	75 19                	jne    c0106c60 <check_swap+0x447>$/;"	l
c0106c47	obj/kernel.asm	/^c0106c47:	68 3c e4 10 c0       	push   $0xc010e43c$/;"	l
c0106c4c	obj/kernel.asm	/^c0106c4c:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c0106c51	obj/kernel.asm	/^c0106c51:	68 fa 00 00 00       	push   $0xfa$/;"	l
c0106c56	obj/kernel.asm	/^c0106c56:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c0106c5b	obj/kernel.asm	/^c0106c5b:	e8 7f 97 ff ff       	call   c01003df <__panic>$/;"	l
c0106c60	obj/kernel.asm	/^c0106c60:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c63	obj/kernel.asm	/^c0106c63:	8b 04 85 54 46 1c c0 	mov    -0x3fe3b9ac(,%eax,4),%eax$/;"	l
c0106c6a	obj/kernel.asm	/^c0106c6a:	8b 00                	mov    (%eax),%eax$/;"	l
c0106c6c	obj/kernel.asm	/^c0106c6c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106c6f	obj/kernel.asm	/^c0106c6f:	50                   	push   %eax$/;"	l
c0106c70	obj/kernel.asm	/^c0106c70:	e8 f6 f6 ff ff       	call   c010636b <pte2page>$/;"	l
c0106c75	obj/kernel.asm	/^c0106c75:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106c78	obj/kernel.asm	/^c0106c78:	89 c2                	mov    %eax,%edx$/;"	l
c0106c7a	obj/kernel.asm	/^c0106c7a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c7d	obj/kernel.asm	/^c0106c7d:	8b 04 85 a0 45 1c c0 	mov    -0x3fe3ba60(,%eax,4),%eax$/;"	l
c0106c84	obj/kernel.asm	/^c0106c84:	39 c2                	cmp    %eax,%edx$/;"	l
c0106c86	obj/kernel.asm	/^c0106c86:	74 19                	je     c0106ca1 <check_swap+0x488>$/;"	l
c0106c88	obj/kernel.asm	/^c0106c88:	68 54 e4 10 c0       	push   $0xc010e454$/;"	l
c0106c8d	obj/kernel.asm	/^c0106c8d:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c0106c92	obj/kernel.asm	/^c0106c92:	68 fb 00 00 00       	push   $0xfb$/;"	l
c0106c97	obj/kernel.asm	/^c0106c97:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c0106c9c	obj/kernel.asm	/^c0106c9c:	e8 3e 97 ff ff       	call   c01003df <__panic>$/;"	l
c0106ca1	obj/kernel.asm	/^c0106ca1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106ca4	obj/kernel.asm	/^c0106ca4:	8b 04 85 54 46 1c c0 	mov    -0x3fe3b9ac(,%eax,4),%eax$/;"	l
c0106cab	obj/kernel.asm	/^c0106cab:	8b 00                	mov    (%eax),%eax$/;"	l
c0106cad	obj/kernel.asm	/^c0106cad:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106cb0	obj/kernel.asm	/^c0106cb0:	85 c0                	test   %eax,%eax$/;"	l
c0106cb2	obj/kernel.asm	/^c0106cb2:	75 19                	jne    c0106ccd <check_swap+0x4b4>$/;"	l
c0106cb4	obj/kernel.asm	/^c0106cb4:	68 7c e4 10 c0       	push   $0xc010e47c$/;"	l
c0106cb9	obj/kernel.asm	/^c0106cb9:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c0106cbe	obj/kernel.asm	/^c0106cbe:	68 fc 00 00 00       	push   $0xfc$/;"	l
c0106cc3	obj/kernel.asm	/^c0106cc3:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c0106cc8	obj/kernel.asm	/^c0106cc8:	e8 12 97 ff ff       	call   c01003df <__panic>$/;"	l
c0106ccd	obj/kernel.asm	/^c0106ccd:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106cd1	obj/kernel.asm	/^c0106cd1:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106cd5	obj/kernel.asm	/^c0106cd5:	0f 8e 2a ff ff ff    	jle    c0106c05 <check_swap+0x3ec>$/;"	l
c0106cdb	obj/kernel.asm	/^c0106cdb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106cde	obj/kernel.asm	/^c0106cde:	68 98 e4 10 c0       	push   $0xc010e498$/;"	l
c0106ce3	obj/kernel.asm	/^c0106ce3:	e8 92 95 ff ff       	call   c010027a <cprintf>$/;"	l
c0106ce8	obj/kernel.asm	/^c0106ce8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106ceb	obj/kernel.asm	/^c0106ceb:	e8 11 fb ff ff       	call   c0106801 <check_content_access>$/;"	l
c0106cf0	obj/kernel.asm	/^c0106cf0:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0106cf3	obj/kernel.asm	/^c0106cf3:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0106cf7	obj/kernel.asm	/^c0106cf7:	74 19                	je     c0106d12 <check_swap+0x4f9>$/;"	l
c0106cf9	obj/kernel.asm	/^c0106cf9:	68 be e4 10 c0       	push   $0xc010e4be$/;"	l
c0106cfe	obj/kernel.asm	/^c0106cfe:	68 a6 e1 10 c0       	push   $0xc010e1a6$/;"	l
c0106d03	obj/kernel.asm	/^c0106d03:	68 01 01 00 00       	push   $0x101$/;"	l
c0106d08	obj/kernel.asm	/^c0106d08:	68 40 e1 10 c0       	push   $0xc010e140$/;"	l
c0106d0d	obj/kernel.asm	/^c0106d0d:	e8 cd 96 ff ff       	call   c01003df <__panic>$/;"	l
c0106d12	obj/kernel.asm	/^c0106d12:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106d19	obj/kernel.asm	/^c0106d19:	eb 1c                	jmp    c0106d37 <check_swap+0x51e>$/;"	l
c0106d1b	obj/kernel.asm	/^c0106d1b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106d1e	obj/kernel.asm	/^c0106d1e:	8b 04 85 a0 45 1c c0 	mov    -0x3fe3ba60(,%eax,4),%eax$/;"	l
c0106d25	obj/kernel.asm	/^c0106d25:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106d28	obj/kernel.asm	/^c0106d28:	6a 01                	push   $0x1$/;"	l
c0106d2a	obj/kernel.asm	/^c0106d2a:	50                   	push   %eax$/;"	l
c0106d2b	obj/kernel.asm	/^c0106d2b:	e8 9a cc ff ff       	call   c01039ca <free_pages>$/;"	l
c0106d30	obj/kernel.asm	/^c0106d30:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106d33	obj/kernel.asm	/^c0106d33:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106d37	obj/kernel.asm	/^c0106d37:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106d3b	obj/kernel.asm	/^c0106d3b:	7e de                	jle    c0106d1b <check_swap+0x502>$/;"	l
c0106d3d	obj/kernel.asm	/^c0106d3d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106d40	obj/kernel.asm	/^c0106d40:	8b 00                	mov    (%eax),%eax$/;"	l
c0106d42	obj/kernel.asm	/^c0106d42:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106d45	obj/kernel.asm	/^c0106d45:	50                   	push   %eax$/;"	l
c0106d46	obj/kernel.asm	/^c0106d46:	e8 e3 f5 ff ff       	call   c010632e <pa2page>$/;"	l
c0106d4b	obj/kernel.asm	/^c0106d4b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106d4e	obj/kernel.asm	/^c0106d4e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106d51	obj/kernel.asm	/^c0106d51:	6a 01                	push   $0x1$/;"	l
c0106d53	obj/kernel.asm	/^c0106d53:	50                   	push   %eax$/;"	l
c0106d54	obj/kernel.asm	/^c0106d54:	e8 71 cc ff ff       	call   c01039ca <free_pages>$/;"	l
c0106d59	obj/kernel.asm	/^c0106d59:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106d5c	obj/kernel.asm	/^c0106d5c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106d5f	obj/kernel.asm	/^c0106d5f:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0106d65	obj/kernel.asm	/^c0106d65:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106d68	obj/kernel.asm	/^c0106d68:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0106d6f	obj/kernel.asm	/^c0106d6f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106d72	obj/kernel.asm	/^c0106d72:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0106d75	obj/kernel.asm	/^c0106d75:	e8 63 e8 ff ff       	call   c01055dd <mm_destroy>$/;"	l
c0106d7a	obj/kernel.asm	/^c0106d7a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106d7d	obj/kernel.asm	/^c0106d7d:	c7 05 9c 45 1c c0 00 	movl   $0x0,0xc01c459c$/;"	l
c0106d84	obj/kernel.asm	/^c0106d84:	00 00 00 $/;"	l
c0106d87	obj/kernel.asm	/^c0106d87:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0106d8a	obj/kernel.asm	/^c0106d8a:	a3 74 46 1c c0       	mov    %eax,0xc01c4674$/;"	l
c0106d8f	obj/kernel.asm	/^c0106d8f:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0106d92	obj/kernel.asm	/^c0106d92:	8b 55 9c             	mov    -0x64(%ebp),%edx$/;"	l
c0106d95	obj/kernel.asm	/^c0106d95:	a3 6c 46 1c c0       	mov    %eax,0xc01c466c$/;"	l
c0106d9a	obj/kernel.asm	/^c0106d9a:	89 15 70 46 1c c0    	mov    %edx,0xc01c4670$/;"	l
c0106da0	obj/kernel.asm	/^c0106da0:	c7 45 e8 6c 46 1c c0 	movl   $0xc01c466c,-0x18(%ebp)$/;"	l
c0106da7	obj/kernel.asm	/^c0106da7:	eb 1d                	jmp    c0106dc6 <check_swap+0x5ad>$/;"	l
c0106da9	obj/kernel.asm	/^c0106da9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106dac	obj/kernel.asm	/^c0106dac:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0106daf	obj/kernel.asm	/^c0106daf:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0106db2	obj/kernel.asm	/^c0106db2:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0106db6	obj/kernel.asm	/^c0106db6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0106db9	obj/kernel.asm	/^c0106db9:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0106dbc	obj/kernel.asm	/^c0106dbc:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0106dbf	obj/kernel.asm	/^c0106dbf:	29 c2                	sub    %eax,%edx$/;"	l
c0106dc1	obj/kernel.asm	/^c0106dc1:	89 d0                	mov    %edx,%eax$/;"	l
c0106dc3	obj/kernel.asm	/^c0106dc3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106dc6	obj/kernel.asm	/^c0106dc6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106dc9	obj/kernel.asm	/^c0106dc9:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c0106dcc	obj/kernel.asm	/^c0106dcc:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0106dcf	obj/kernel.asm	/^c0106dcf:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106dd2	obj/kernel.asm	/^c0106dd2:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106dd5	obj/kernel.asm	/^c0106dd5:	81 7d e8 6c 46 1c c0 	cmpl   $0xc01c466c,-0x18(%ebp)$/;"	l
c0106ddc	obj/kernel.asm	/^c0106ddc:	75 cb                	jne    c0106da9 <check_swap+0x590>$/;"	l
c0106dde	obj/kernel.asm	/^c0106dde:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106de1	obj/kernel.asm	/^c0106de1:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0106de4	obj/kernel.asm	/^c0106de4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106de7	obj/kernel.asm	/^c0106de7:	68 c5 e4 10 c0       	push   $0xc010e4c5$/;"	l
c0106dec	obj/kernel.asm	/^c0106dec:	e8 89 94 ff ff       	call   c010027a <cprintf>$/;"	l
c0106df1	obj/kernel.asm	/^c0106df1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106df4	obj/kernel.asm	/^c0106df4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106df7	obj/kernel.asm	/^c0106df7:	68 df e4 10 c0       	push   $0xc010e4df$/;"	l
c0106dfc	obj/kernel.asm	/^c0106dfc:	e8 79 94 ff ff       	call   c010027a <cprintf>$/;"	l
c0106e01	obj/kernel.asm	/^c0106e01:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106e04	obj/kernel.asm	/^c0106e04:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0106e07	obj/kernel.asm	/^c0106e07:	c9                   	leave  $/;"	l
c0106e08	obj/kernel.asm	/^c0106e08:	c3                   	ret    $/;"	l
c0106e09	obj/kernel.asm	/^c0106e09 <__intr_save>:$/;"	l
c0106e09	obj/kernel.asm	/^c0106e09:	55                   	push   %ebp$/;"	l
c0106e0a	obj/kernel.asm	/^c0106e0a:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e0c	obj/kernel.asm	/^c0106e0c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106e0f	obj/kernel.asm	/^c0106e0f:	9c                   	pushf  $/;"	l
c0106e10	obj/kernel.asm	/^c0106e10:	58                   	pop    %eax$/;"	l
c0106e11	obj/kernel.asm	/^c0106e11:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106e14	obj/kernel.asm	/^c0106e14:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106e17	obj/kernel.asm	/^c0106e17:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0106e1c	obj/kernel.asm	/^c0106e1c:	85 c0                	test   %eax,%eax$/;"	l
c0106e1e	obj/kernel.asm	/^c0106e1e:	74 0c                	je     c0106e2c <__intr_save+0x23>$/;"	l
c0106e20	obj/kernel.asm	/^c0106e20:	e8 7d b2 ff ff       	call   c01020a2 <intr_disable>$/;"	l
c0106e25	obj/kernel.asm	/^c0106e25:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0106e2a	obj/kernel.asm	/^c0106e2a:	eb 05                	jmp    c0106e31 <__intr_save+0x28>$/;"	l
c0106e2c	obj/kernel.asm	/^c0106e2c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106e31	obj/kernel.asm	/^c0106e31:	c9                   	leave  $/;"	l
c0106e32	obj/kernel.asm	/^c0106e32:	c3                   	ret    $/;"	l
c0106e33	obj/kernel.asm	/^c0106e33 <__intr_restore>:$/;"	l
c0106e33	obj/kernel.asm	/^c0106e33:	55                   	push   %ebp$/;"	l
c0106e34	obj/kernel.asm	/^c0106e34:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e36	obj/kernel.asm	/^c0106e36:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106e39	obj/kernel.asm	/^c0106e39:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0106e3d	obj/kernel.asm	/^c0106e3d:	74 05                	je     c0106e44 <__intr_restore+0x11>$/;"	l
c0106e3f	obj/kernel.asm	/^c0106e3f:	e8 58 b2 ff ff       	call   c010209c <intr_enable>$/;"	l
c0106e44	obj/kernel.asm	/^c0106e44:	c9                   	leave  $/;"	l
c0106e45	obj/kernel.asm	/^c0106e45:	c3                   	ret    $/;"	l
c0106e46	obj/kernel.asm	/^c0106e46 <page2ppn>:$/;"	l
c0106e46	obj/kernel.asm	/^c0106e46:	55                   	push   %ebp$/;"	l
c0106e47	obj/kernel.asm	/^c0106e47:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e49	obj/kernel.asm	/^c0106e49:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106e4c	obj/kernel.asm	/^c0106e4c:	8b 15 98 45 1c c0    	mov    0xc01c4598,%edx$/;"	l
c0106e52	obj/kernel.asm	/^c0106e52:	29 d0                	sub    %edx,%eax$/;"	l
c0106e54	obj/kernel.asm	/^c0106e54:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0106e57	obj/kernel.asm	/^c0106e57:	5d                   	pop    %ebp$/;"	l
c0106e58	obj/kernel.asm	/^c0106e58:	c3                   	ret    $/;"	l
c0106e59	obj/kernel.asm	/^c0106e59 <page2pa>:$/;"	l
c0106e59	obj/kernel.asm	/^c0106e59:	55                   	push   %ebp$/;"	l
c0106e5a	obj/kernel.asm	/^c0106e5a:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e5c	obj/kernel.asm	/^c0106e5c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106e5f	obj/kernel.asm	/^c0106e5f:	e8 e2 ff ff ff       	call   c0106e46 <page2ppn>$/;"	l
c0106e64	obj/kernel.asm	/^c0106e64:	83 c4 04             	add    $0x4,%esp$/;"	l
c0106e67	obj/kernel.asm	/^c0106e67:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0106e6a	obj/kernel.asm	/^c0106e6a:	c9                   	leave  $/;"	l
c0106e6b	obj/kernel.asm	/^c0106e6b:	c3                   	ret    $/;"	l
c0106e6c	obj/kernel.asm	/^c0106e6c <pa2page>:$/;"	l
c0106e6c	obj/kernel.asm	/^c0106e6c:	55                   	push   %ebp$/;"	l
c0106e6d	obj/kernel.asm	/^c0106e6d:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e6f	obj/kernel.asm	/^c0106e6f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106e72	obj/kernel.asm	/^c0106e72:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106e75	obj/kernel.asm	/^c0106e75:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106e78	obj/kernel.asm	/^c0106e78:	89 c2                	mov    %eax,%edx$/;"	l
c0106e7a	obj/kernel.asm	/^c0106e7a:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c0106e7f	obj/kernel.asm	/^c0106e7f:	39 c2                	cmp    %eax,%edx$/;"	l
c0106e81	obj/kernel.asm	/^c0106e81:	72 14                	jb     c0106e97 <pa2page+0x2b>$/;"	l
c0106e83	obj/kernel.asm	/^c0106e83:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106e86	obj/kernel.asm	/^c0106e86:	68 f8 e4 10 c0       	push   $0xc010e4f8$/;"	l
c0106e8b	obj/kernel.asm	/^c0106e8b:	6a 5e                	push   $0x5e$/;"	l
c0106e8d	obj/kernel.asm	/^c0106e8d:	68 17 e5 10 c0       	push   $0xc010e517$/;"	l
c0106e92	obj/kernel.asm	/^c0106e92:	e8 48 95 ff ff       	call   c01003df <__panic>$/;"	l
c0106e97	obj/kernel.asm	/^c0106e97:	a1 98 45 1c c0       	mov    0xc01c4598,%eax$/;"	l
c0106e9c	obj/kernel.asm	/^c0106e9c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106e9f	obj/kernel.asm	/^c0106e9f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0106ea2	obj/kernel.asm	/^c0106ea2:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0106ea5	obj/kernel.asm	/^c0106ea5:	01 d0                	add    %edx,%eax$/;"	l
c0106ea7	obj/kernel.asm	/^c0106ea7:	c9                   	leave  $/;"	l
c0106ea8	obj/kernel.asm	/^c0106ea8:	c3                   	ret    $/;"	l
c0106ea9	obj/kernel.asm	/^c0106ea9 <page2kva>:$/;"	l
c0106ea9	obj/kernel.asm	/^c0106ea9:	55                   	push   %ebp$/;"	l
c0106eaa	obj/kernel.asm	/^c0106eaa:	89 e5                	mov    %esp,%ebp$/;"	l
c0106eac	obj/kernel.asm	/^c0106eac:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106eaf	obj/kernel.asm	/^c0106eaf:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106eb2	obj/kernel.asm	/^c0106eb2:	e8 a2 ff ff ff       	call   c0106e59 <page2pa>$/;"	l
c0106eb7	obj/kernel.asm	/^c0106eb7:	83 c4 04             	add    $0x4,%esp$/;"	l
c0106eba	obj/kernel.asm	/^c0106eba:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106ebd	obj/kernel.asm	/^c0106ebd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106ec0	obj/kernel.asm	/^c0106ec0:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106ec3	obj/kernel.asm	/^c0106ec3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106ec6	obj/kernel.asm	/^c0106ec6:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c0106ecb	obj/kernel.asm	/^c0106ecb:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0106ece	obj/kernel.asm	/^c0106ece:	72 14                	jb     c0106ee4 <page2kva+0x3b>$/;"	l
c0106ed0	obj/kernel.asm	/^c0106ed0:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106ed3	obj/kernel.asm	/^c0106ed3:	68 28 e5 10 c0       	push   $0xc010e528$/;"	l
c0106ed8	obj/kernel.asm	/^c0106ed8:	6a 65                	push   $0x65$/;"	l
c0106eda	obj/kernel.asm	/^c0106eda:	68 17 e5 10 c0       	push   $0xc010e517$/;"	l
c0106edf	obj/kernel.asm	/^c0106edf:	e8 fb 94 ff ff       	call   c01003df <__panic>$/;"	l
c0106ee4	obj/kernel.asm	/^c0106ee4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106ee7	obj/kernel.asm	/^c0106ee7:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0106eec	obj/kernel.asm	/^c0106eec:	c9                   	leave  $/;"	l
c0106eed	obj/kernel.asm	/^c0106eed:	c3                   	ret    $/;"	l
c0106eee	obj/kernel.asm	/^c0106eee <kva2page>:$/;"	l
c0106eee	obj/kernel.asm	/^c0106eee:	55                   	push   %ebp$/;"	l
c0106eef	obj/kernel.asm	/^c0106eef:	89 e5                	mov    %esp,%ebp$/;"	l
c0106ef1	obj/kernel.asm	/^c0106ef1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106ef4	obj/kernel.asm	/^c0106ef4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106ef7	obj/kernel.asm	/^c0106ef7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106efa	obj/kernel.asm	/^c0106efa:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0106f01	obj/kernel.asm	/^c0106f01:	77 14                	ja     c0106f17 <kva2page+0x29>$/;"	l
c0106f03	obj/kernel.asm	/^c0106f03:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106f06	obj/kernel.asm	/^c0106f06:	68 4c e5 10 c0       	push   $0xc010e54c$/;"	l
c0106f0b	obj/kernel.asm	/^c0106f0b:	6a 6a                	push   $0x6a$/;"	l
c0106f0d	obj/kernel.asm	/^c0106f0d:	68 17 e5 10 c0       	push   $0xc010e517$/;"	l
c0106f12	obj/kernel.asm	/^c0106f12:	e8 c8 94 ff ff       	call   c01003df <__panic>$/;"	l
c0106f17	obj/kernel.asm	/^c0106f17:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106f1a	obj/kernel.asm	/^c0106f1a:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0106f1f	obj/kernel.asm	/^c0106f1f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106f22	obj/kernel.asm	/^c0106f22:	50                   	push   %eax$/;"	l
c0106f23	obj/kernel.asm	/^c0106f23:	e8 44 ff ff ff       	call   c0106e6c <pa2page>$/;"	l
c0106f28	obj/kernel.asm	/^c0106f28:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106f2b	obj/kernel.asm	/^c0106f2b:	c9                   	leave  $/;"	l
c0106f2c	obj/kernel.asm	/^c0106f2c:	c3                   	ret    $/;"	l
c0106f2d	obj/kernel.asm	/^c0106f2d <__slob_get_free_pages>:$/;"	l
c0106f2d	obj/kernel.asm	/^c0106f2d:	55                   	push   %ebp$/;"	l
c0106f2e	obj/kernel.asm	/^c0106f2e:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f30	obj/kernel.asm	/^c0106f30:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106f33	obj/kernel.asm	/^c0106f33:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106f36	obj/kernel.asm	/^c0106f36:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0106f3b	obj/kernel.asm	/^c0106f3b:	89 c1                	mov    %eax,%ecx$/;"	l
c0106f3d	obj/kernel.asm	/^c0106f3d:	d3 e2                	shl    %cl,%edx$/;"	d
c0106f3f	obj/kernel.asm	/^c0106f3f:	89 d0                	mov    %edx,%eax$/;"	l
c0106f41	obj/kernel.asm	/^c0106f41:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106f44	obj/kernel.asm	/^c0106f44:	50                   	push   %eax$/;"	l
c0106f45	obj/kernel.asm	/^c0106f45:	e8 14 ca ff ff       	call   c010395e <alloc_pages>$/;"	l
c0106f4a	obj/kernel.asm	/^c0106f4a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106f4d	obj/kernel.asm	/^c0106f4d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106f50	obj/kernel.asm	/^c0106f50:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0106f54	obj/kernel.asm	/^c0106f54:	75 07                	jne    c0106f5d <__slob_get_free_pages+0x30>$/;"	l
c0106f56	obj/kernel.asm	/^c0106f56:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106f5b	obj/kernel.asm	/^c0106f5b:	eb 0e                	jmp    c0106f6b <__slob_get_free_pages+0x3e>$/;"	l
c0106f5d	obj/kernel.asm	/^c0106f5d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106f60	obj/kernel.asm	/^c0106f60:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106f63	obj/kernel.asm	/^c0106f63:	e8 41 ff ff ff       	call   c0106ea9 <page2kva>$/;"	l
c0106f68	obj/kernel.asm	/^c0106f68:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106f6b	obj/kernel.asm	/^c0106f6b:	c9                   	leave  $/;"	l
c0106f6c	obj/kernel.asm	/^c0106f6c:	c3                   	ret    $/;"	l
c0106f6d	obj/kernel.asm	/^c0106f6d <__slob_free_pages>:$/;"	l
c0106f6d	obj/kernel.asm	/^c0106f6d:	55                   	push   %ebp$/;"	l
c0106f6e	obj/kernel.asm	/^c0106f6e:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f70	obj/kernel.asm	/^c0106f70:	53                   	push   %ebx$/;"	l
c0106f71	obj/kernel.asm	/^c0106f71:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106f74	obj/kernel.asm	/^c0106f74:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106f77	obj/kernel.asm	/^c0106f77:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0106f7c	obj/kernel.asm	/^c0106f7c:	89 c1                	mov    %eax,%ecx$/;"	l
c0106f7e	obj/kernel.asm	/^c0106f7e:	d3 e2                	shl    %cl,%edx$/;"	d
c0106f80	obj/kernel.asm	/^c0106f80:	89 d0                	mov    %edx,%eax$/;"	l
c0106f82	obj/kernel.asm	/^c0106f82:	89 c3                	mov    %eax,%ebx$/;"	l
c0106f84	obj/kernel.asm	/^c0106f84:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106f87	obj/kernel.asm	/^c0106f87:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106f8a	obj/kernel.asm	/^c0106f8a:	50                   	push   %eax$/;"	l
c0106f8b	obj/kernel.asm	/^c0106f8b:	e8 5e ff ff ff       	call   c0106eee <kva2page>$/;"	l
c0106f90	obj/kernel.asm	/^c0106f90:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106f93	obj/kernel.asm	/^c0106f93:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106f96	obj/kernel.asm	/^c0106f96:	53                   	push   %ebx$/;"	l
c0106f97	obj/kernel.asm	/^c0106f97:	50                   	push   %eax$/;"	l
c0106f98	obj/kernel.asm	/^c0106f98:	e8 2d ca ff ff       	call   c01039ca <free_pages>$/;"	l
c0106f9d	obj/kernel.asm	/^c0106f9d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106fa0	obj/kernel.asm	/^c0106fa0:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0106fa3	obj/kernel.asm	/^c0106fa3:	c9                   	leave  $/;"	l
c0106fa4	obj/kernel.asm	/^c0106fa4:	c3                   	ret    $/;"	l
c0106fa5	obj/kernel.asm	/^c0106fa5 <slob_alloc>:$/;"	l
c0106fa5	obj/kernel.asm	/^c0106fa5:	55                   	push   %ebp$/;"	l
c0106fa6	obj/kernel.asm	/^c0106fa6:	89 e5                	mov    %esp,%ebp$/;"	l
c0106fa8	obj/kernel.asm	/^c0106fa8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0106fab	obj/kernel.asm	/^c0106fab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106fae	obj/kernel.asm	/^c0106fae:	83 c0 08             	add    $0x8,%eax$/;"	l
c0106fb1	obj/kernel.asm	/^c0106fb1:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c0106fb6	obj/kernel.asm	/^c0106fb6:	76 16                	jbe    c0106fce <slob_alloc+0x29>$/;"	l
c0106fb8	obj/kernel.asm	/^c0106fb8:	68 70 e5 10 c0       	push   $0xc010e570$/;"	l
c0106fbd	obj/kernel.asm	/^c0106fbd:	68 8f e5 10 c0       	push   $0xc010e58f$/;"	l
c0106fc2	obj/kernel.asm	/^c0106fc2:	6a 64                	push   $0x64$/;"	l
c0106fc4	obj/kernel.asm	/^c0106fc4:	68 a4 e5 10 c0       	push   $0xc010e5a4$/;"	l
c0106fc9	obj/kernel.asm	/^c0106fc9:	e8 11 94 ff ff       	call   c01003df <__panic>$/;"	l
c0106fce	obj/kernel.asm	/^c0106fce:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106fd5	obj/kernel.asm	/^c0106fd5:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0106fdc	obj/kernel.asm	/^c0106fdc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106fdf	obj/kernel.asm	/^c0106fdf:	83 c0 07             	add    $0x7,%eax$/;"	l
c0106fe2	obj/kernel.asm	/^c0106fe2:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c0106fe5	obj/kernel.asm	/^c0106fe5:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0106fe8	obj/kernel.asm	/^c0106fe8:	e8 1c fe ff ff       	call   c0106e09 <__intr_save>$/;"	l
c0106fed	obj/kernel.asm	/^c0106fed:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106ff0	obj/kernel.asm	/^c0106ff0:	a1 a0 0a 13 c0       	mov    0xc0130aa0,%eax$/;"	l
c0106ff5	obj/kernel.asm	/^c0106ff5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106ff8	obj/kernel.asm	/^c0106ff8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106ffb	obj/kernel.asm	/^c0106ffb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106ffe	obj/kernel.asm	/^c0106ffe:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107001	obj/kernel.asm	/^c0107001:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0107005	obj/kernel.asm	/^c0107005:	74 25                	je     c010702c <slob_alloc+0x87>$/;"	l
c0107007	obj/kernel.asm	/^c0107007:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010700a	obj/kernel.asm	/^c010700a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010700d	obj/kernel.asm	/^c010700d:	01 d0                	add    %edx,%eax$/;"	l
c010700f	obj/kernel.asm	/^c010700f:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0107012	obj/kernel.asm	/^c0107012:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107015	obj/kernel.asm	/^c0107015:	f7 d8                	neg    %eax$/;"	l
c0107017	obj/kernel.asm	/^c0107017:	21 d0                	and    %edx,%eax$/;"	l
c0107019	obj/kernel.asm	/^c0107019:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010701c	obj/kernel.asm	/^c010701c:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010701f	obj/kernel.asm	/^c010701f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107022	obj/kernel.asm	/^c0107022:	29 c2                	sub    %eax,%edx$/;"	l
c0107024	obj/kernel.asm	/^c0107024:	89 d0                	mov    %edx,%eax$/;"	l
c0107026	obj/kernel.asm	/^c0107026:	c1 f8 03             	sar    $0x3,%eax$/;"	l
c0107029	obj/kernel.asm	/^c0107029:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010702c	obj/kernel.asm	/^c010702c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010702f	obj/kernel.asm	/^c010702f:	8b 00                	mov    (%eax),%eax$/;"	l
c0107031	obj/kernel.asm	/^c0107031:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c0107034	obj/kernel.asm	/^c0107034:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0107037	obj/kernel.asm	/^c0107037:	01 ca                	add    %ecx,%edx$/;"	l
c0107039	obj/kernel.asm	/^c0107039:	39 d0                	cmp    %edx,%eax$/;"	l
c010703b	obj/kernel.asm	/^c010703b:	0f 8c b1 00 00 00    	jl     c01070f2 <slob_alloc+0x14d>$/;"	l
c0107041	obj/kernel.asm	/^c0107041:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0107045	obj/kernel.asm	/^c0107045:	74 38                	je     c010707f <slob_alloc+0xda>$/;"	l
c0107047	obj/kernel.asm	/^c0107047:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010704a	obj/kernel.asm	/^c010704a:	8b 00                	mov    (%eax),%eax$/;"	l
c010704c	obj/kernel.asm	/^c010704c:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
c010704f	obj/kernel.asm	/^c010704f:	89 c2                	mov    %eax,%edx$/;"	l
c0107051	obj/kernel.asm	/^c0107051:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107054	obj/kernel.asm	/^c0107054:	89 10                	mov    %edx,(%eax)$/;"	l
c0107056	obj/kernel.asm	/^c0107056:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107059	obj/kernel.asm	/^c0107059:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010705c	obj/kernel.asm	/^c010705c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010705f	obj/kernel.asm	/^c010705f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107062	obj/kernel.asm	/^c0107062:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107065	obj/kernel.asm	/^c0107065:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107068	obj/kernel.asm	/^c0107068:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010706b	obj/kernel.asm	/^c010706b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010706e	obj/kernel.asm	/^c010706e:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0107071	obj/kernel.asm	/^c0107071:	89 10                	mov    %edx,(%eax)$/;"	l
c0107073	obj/kernel.asm	/^c0107073:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107076	obj/kernel.asm	/^c0107076:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107079	obj/kernel.asm	/^c0107079:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010707c	obj/kernel.asm	/^c010707c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010707f	obj/kernel.asm	/^c010707f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107082	obj/kernel.asm	/^c0107082:	8b 00                	mov    (%eax),%eax$/;"	l
c0107084	obj/kernel.asm	/^c0107084:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0107087	obj/kernel.asm	/^c0107087:	75 0e                	jne    c0107097 <slob_alloc+0xf2>$/;"	l
c0107089	obj/kernel.asm	/^c0107089:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010708c	obj/kernel.asm	/^c010708c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010708f	obj/kernel.asm	/^c010708f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107092	obj/kernel.asm	/^c0107092:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107095	obj/kernel.asm	/^c0107095:	eb 3c                	jmp    c01070d3 <slob_alloc+0x12e>$/;"	l
c0107097	obj/kernel.asm	/^c0107097:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010709a	obj/kernel.asm	/^c010709a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01070a1	obj/kernel.asm	/^c01070a1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01070a4	obj/kernel.asm	/^c01070a4:	01 c2                	add    %eax,%edx$/;"	l
c01070a6	obj/kernel.asm	/^c01070a6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01070a9	obj/kernel.asm	/^c01070a9:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01070ac	obj/kernel.asm	/^c01070ac:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01070af	obj/kernel.asm	/^c01070af:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01070b2	obj/kernel.asm	/^c01070b2:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01070b5	obj/kernel.asm	/^c01070b5:	8b 12                	mov    (%edx),%edx$/;"	l
c01070b7	obj/kernel.asm	/^c01070b7:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
c01070ba	obj/kernel.asm	/^c01070ba:	89 10                	mov    %edx,(%eax)$/;"	l
c01070bc	obj/kernel.asm	/^c01070bc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01070bf	obj/kernel.asm	/^c01070bf:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01070c2	obj/kernel.asm	/^c01070c2:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01070c5	obj/kernel.asm	/^c01070c5:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
c01070c8	obj/kernel.asm	/^c01070c8:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01070cb	obj/kernel.asm	/^c01070cb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01070ce	obj/kernel.asm	/^c01070ce:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01070d1	obj/kernel.asm	/^c01070d1:	89 10                	mov    %edx,(%eax)$/;"	l
c01070d3	obj/kernel.asm	/^c01070d3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01070d6	obj/kernel.asm	/^c01070d6:	a3 a0 0a 13 c0       	mov    %eax,0xc0130aa0$/;"	l
c01070db	obj/kernel.asm	/^c01070db:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01070de	obj/kernel.asm	/^c01070de:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01070e1	obj/kernel.asm	/^c01070e1:	50                   	push   %eax$/;"	l
c01070e2	obj/kernel.asm	/^c01070e2:	e8 4c fd ff ff       	call   c0106e33 <__intr_restore>$/;"	l
c01070e7	obj/kernel.asm	/^c01070e7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01070ea	obj/kernel.asm	/^c01070ea:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01070ed	obj/kernel.asm	/^c01070ed:	e9 80 00 00 00       	jmp    c0107172 <slob_alloc+0x1cd>$/;"	l
c01070f2	obj/kernel.asm	/^c01070f2:	a1 a0 0a 13 c0       	mov    0xc0130aa0,%eax$/;"	l
c01070f7	obj/kernel.asm	/^c01070f7:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c01070fa	obj/kernel.asm	/^c01070fa:	75 62                	jne    c010715e <slob_alloc+0x1b9>$/;"	l
c01070fc	obj/kernel.asm	/^c01070fc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01070ff	obj/kernel.asm	/^c01070ff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107102	obj/kernel.asm	/^c0107102:	50                   	push   %eax$/;"	l
c0107103	obj/kernel.asm	/^c0107103:	e8 2b fd ff ff       	call   c0106e33 <__intr_restore>$/;"	l
c0107108	obj/kernel.asm	/^c0107108:	83 c4 10             	add    $0x10,%esp$/;"	l
c010710b	obj/kernel.asm	/^c010710b:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c0107112	obj/kernel.asm	/^c0107112:	75 07                	jne    c010711b <slob_alloc+0x176>$/;"	l
c0107114	obj/kernel.asm	/^c0107114:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107119	obj/kernel.asm	/^c0107119:	eb 57                	jmp    c0107172 <slob_alloc+0x1cd>$/;"	l
c010711b	obj/kernel.asm	/^c010711b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010711e	obj/kernel.asm	/^c010711e:	6a 00                	push   $0x0$/;"	l
c0107120	obj/kernel.asm	/^c0107120:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0107123	obj/kernel.asm	/^c0107123:	e8 05 fe ff ff       	call   c0106f2d <__slob_get_free_pages>$/;"	l
c0107128	obj/kernel.asm	/^c0107128:	83 c4 10             	add    $0x10,%esp$/;"	l
c010712b	obj/kernel.asm	/^c010712b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010712e	obj/kernel.asm	/^c010712e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0107132	obj/kernel.asm	/^c0107132:	75 07                	jne    c010713b <slob_alloc+0x196>$/;"	l
c0107134	obj/kernel.asm	/^c0107134:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107139	obj/kernel.asm	/^c0107139:	eb 37                	jmp    c0107172 <slob_alloc+0x1cd>$/;"	l
c010713b	obj/kernel.asm	/^c010713b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010713e	obj/kernel.asm	/^c010713e:	68 00 10 00 00       	push   $0x1000$/;"	l
c0107143	obj/kernel.asm	/^c0107143:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0107146	obj/kernel.asm	/^c0107146:	e8 29 00 00 00       	call   c0107174 <slob_free>$/;"	l
c010714b	obj/kernel.asm	/^c010714b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010714e	obj/kernel.asm	/^c010714e:	e8 b6 fc ff ff       	call   c0106e09 <__intr_save>$/;"	l
c0107153	obj/kernel.asm	/^c0107153:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107156	obj/kernel.asm	/^c0107156:	a1 a0 0a 13 c0       	mov    0xc0130aa0,%eax$/;"	l
c010715b	obj/kernel.asm	/^c010715b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010715e	obj/kernel.asm	/^c010715e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107161	obj/kernel.asm	/^c0107161:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107164	obj/kernel.asm	/^c0107164:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107167	obj/kernel.asm	/^c0107167:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010716a	obj/kernel.asm	/^c010716a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010716d	obj/kernel.asm	/^c010716d:	e9 8f fe ff ff       	jmp    c0107001 <slob_alloc+0x5c>$/;"	l
c0107172	obj/kernel.asm	/^c0107172:	c9                   	leave  $/;"	l
c0107173	obj/kernel.asm	/^c0107173:	c3                   	ret    $/;"	l
c0107174	obj/kernel.asm	/^c0107174 <slob_free>:$/;"	l
c0107174	obj/kernel.asm	/^c0107174:	55                   	push   %ebp$/;"	l
c0107175	obj/kernel.asm	/^c0107175:	89 e5                	mov    %esp,%ebp$/;"	l
c0107177	obj/kernel.asm	/^c0107177:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010717a	obj/kernel.asm	/^c010717a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010717d	obj/kernel.asm	/^c010717d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107180	obj/kernel.asm	/^c0107180:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0107184	obj/kernel.asm	/^c0107184:	75 05                	jne    c010718b <slob_free+0x17>$/;"	l
c0107186	obj/kernel.asm	/^c0107186:	e9 03 01 00 00       	jmp    c010728e <slob_free+0x11a>$/;"	l
c010718b	obj/kernel.asm	/^c010718b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010718f	obj/kernel.asm	/^c010718f:	74 10                	je     c01071a1 <slob_free+0x2d>$/;"	l
c0107191	obj/kernel.asm	/^c0107191:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107194	obj/kernel.asm	/^c0107194:	83 c0 07             	add    $0x7,%eax$/;"	l
c0107197	obj/kernel.asm	/^c0107197:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c010719a	obj/kernel.asm	/^c010719a:	89 c2                	mov    %eax,%edx$/;"	l
c010719c	obj/kernel.asm	/^c010719c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010719f	obj/kernel.asm	/^c010719f:	89 10                	mov    %edx,(%eax)$/;"	l
c01071a1	obj/kernel.asm	/^c01071a1:	e8 63 fc ff ff       	call   c0106e09 <__intr_save>$/;"	l
c01071a6	obj/kernel.asm	/^c01071a6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01071a9	obj/kernel.asm	/^c01071a9:	a1 a0 0a 13 c0       	mov    0xc0130aa0,%eax$/;"	l
c01071ae	obj/kernel.asm	/^c01071ae:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01071b1	obj/kernel.asm	/^c01071b1:	eb 27                	jmp    c01071da <slob_free+0x66>$/;"	l
c01071b3	obj/kernel.asm	/^c01071b3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071b6	obj/kernel.asm	/^c01071b6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01071b9	obj/kernel.asm	/^c01071b9:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01071bc	obj/kernel.asm	/^c01071bc:	77 13                	ja     c01071d1 <slob_free+0x5d>$/;"	l
c01071be	obj/kernel.asm	/^c01071be:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071c1	obj/kernel.asm	/^c01071c1:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01071c4	obj/kernel.asm	/^c01071c4:	77 27                	ja     c01071ed <slob_free+0x79>$/;"	l
c01071c6	obj/kernel.asm	/^c01071c6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071c9	obj/kernel.asm	/^c01071c9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01071cc	obj/kernel.asm	/^c01071cc:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01071cf	obj/kernel.asm	/^c01071cf:	77 1c                	ja     c01071ed <slob_free+0x79>$/;"	l
c01071d1	obj/kernel.asm	/^c01071d1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071d4	obj/kernel.asm	/^c01071d4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01071d7	obj/kernel.asm	/^c01071d7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01071da	obj/kernel.asm	/^c01071da:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071dd	obj/kernel.asm	/^c01071dd:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01071e0	obj/kernel.asm	/^c01071e0:	76 d1                	jbe    c01071b3 <slob_free+0x3f>$/;"	l
c01071e2	obj/kernel.asm	/^c01071e2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071e5	obj/kernel.asm	/^c01071e5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01071e8	obj/kernel.asm	/^c01071e8:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01071eb	obj/kernel.asm	/^c01071eb:	76 c6                	jbe    c01071b3 <slob_free+0x3f>$/;"	l
c01071ed	obj/kernel.asm	/^c01071ed:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071f0	obj/kernel.asm	/^c01071f0:	8b 00                	mov    (%eax),%eax$/;"	l
c01071f2	obj/kernel.asm	/^c01071f2:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01071f9	obj/kernel.asm	/^c01071f9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071fc	obj/kernel.asm	/^c01071fc:	01 c2                	add    %eax,%edx$/;"	l
c01071fe	obj/kernel.asm	/^c01071fe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107201	obj/kernel.asm	/^c0107201:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107204	obj/kernel.asm	/^c0107204:	39 c2                	cmp    %eax,%edx$/;"	l
c0107206	obj/kernel.asm	/^c0107206:	75 25                	jne    c010722d <slob_free+0xb9>$/;"	l
c0107208	obj/kernel.asm	/^c0107208:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010720b	obj/kernel.asm	/^c010720b:	8b 10                	mov    (%eax),%edx$/;"	l
c010720d	obj/kernel.asm	/^c010720d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107210	obj/kernel.asm	/^c0107210:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107213	obj/kernel.asm	/^c0107213:	8b 00                	mov    (%eax),%eax$/;"	l
c0107215	obj/kernel.asm	/^c0107215:	01 c2                	add    %eax,%edx$/;"	l
c0107217	obj/kernel.asm	/^c0107217:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010721a	obj/kernel.asm	/^c010721a:	89 10                	mov    %edx,(%eax)$/;"	l
c010721c	obj/kernel.asm	/^c010721c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010721f	obj/kernel.asm	/^c010721f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107222	obj/kernel.asm	/^c0107222:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107225	obj/kernel.asm	/^c0107225:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107228	obj/kernel.asm	/^c0107228:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010722b	obj/kernel.asm	/^c010722b:	eb 0c                	jmp    c0107239 <slob_free+0xc5>$/;"	l
c010722d	obj/kernel.asm	/^c010722d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107230	obj/kernel.asm	/^c0107230:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107233	obj/kernel.asm	/^c0107233:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107236	obj/kernel.asm	/^c0107236:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107239	obj/kernel.asm	/^c0107239:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010723c	obj/kernel.asm	/^c010723c:	8b 00                	mov    (%eax),%eax$/;"	l
c010723e	obj/kernel.asm	/^c010723e:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0107245	obj/kernel.asm	/^c0107245:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107248	obj/kernel.asm	/^c0107248:	01 d0                	add    %edx,%eax$/;"	l
c010724a	obj/kernel.asm	/^c010724a:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010724d	obj/kernel.asm	/^c010724d:	75 1f                	jne    c010726e <slob_free+0xfa>$/;"	l
c010724f	obj/kernel.asm	/^c010724f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107252	obj/kernel.asm	/^c0107252:	8b 10                	mov    (%eax),%edx$/;"	l
c0107254	obj/kernel.asm	/^c0107254:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107257	obj/kernel.asm	/^c0107257:	8b 00                	mov    (%eax),%eax$/;"	l
c0107259	obj/kernel.asm	/^c0107259:	01 c2                	add    %eax,%edx$/;"	l
c010725b	obj/kernel.asm	/^c010725b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010725e	obj/kernel.asm	/^c010725e:	89 10                	mov    %edx,(%eax)$/;"	l
c0107260	obj/kernel.asm	/^c0107260:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107263	obj/kernel.asm	/^c0107263:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107266	obj/kernel.asm	/^c0107266:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107269	obj/kernel.asm	/^c0107269:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010726c	obj/kernel.asm	/^c010726c:	eb 09                	jmp    c0107277 <slob_free+0x103>$/;"	l
c010726e	obj/kernel.asm	/^c010726e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107271	obj/kernel.asm	/^c0107271:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0107274	obj/kernel.asm	/^c0107274:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107277	obj/kernel.asm	/^c0107277:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010727a	obj/kernel.asm	/^c010727a:	a3 a0 0a 13 c0       	mov    %eax,0xc0130aa0$/;"	l
c010727f	obj/kernel.asm	/^c010727f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107282	obj/kernel.asm	/^c0107282:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107285	obj/kernel.asm	/^c0107285:	50                   	push   %eax$/;"	l
c0107286	obj/kernel.asm	/^c0107286:	e8 a8 fb ff ff       	call   c0106e33 <__intr_restore>$/;"	l
c010728b	obj/kernel.asm	/^c010728b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010728e	obj/kernel.asm	/^c010728e:	c9                   	leave  $/;"	l
c010728f	obj/kernel.asm	/^c010728f:	c3                   	ret    $/;"	l
c0107290	obj/kernel.asm	/^c0107290 <slob_init>:$/;"	l
c0107290	obj/kernel.asm	/^c0107290:	55                   	push   %ebp$/;"	l
c0107291	obj/kernel.asm	/^c0107291:	89 e5                	mov    %esp,%ebp$/;"	l
c0107293	obj/kernel.asm	/^c0107293:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107296	obj/kernel.asm	/^c0107296:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107299	obj/kernel.asm	/^c0107299:	68 b6 e5 10 c0       	push   $0xc010e5b6$/;"	l
c010729e	obj/kernel.asm	/^c010729e:	e8 d7 8f ff ff       	call   c010027a <cprintf>$/;"	l
c01072a3	obj/kernel.asm	/^c01072a3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01072a6	obj/kernel.asm	/^c01072a6:	c9                   	leave  $/;"	l
c01072a7	obj/kernel.asm	/^c01072a7:	c3                   	ret    $/;"	l
c01072a8	obj/kernel.asm	/^c01072a8 <kmalloc_init>:$/;"	l
c01072a8	obj/kernel.asm	/^c01072a8:	55                   	push   %ebp$/;"	l
c01072a9	obj/kernel.asm	/^c01072a9:	89 e5                	mov    %esp,%ebp$/;"	l
c01072ab	obj/kernel.asm	/^c01072ab:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01072ae	obj/kernel.asm	/^c01072ae:	e8 dd ff ff ff       	call   c0107290 <slob_init>$/;"	l
c01072b3	obj/kernel.asm	/^c01072b3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01072b6	obj/kernel.asm	/^c01072b6:	68 ca e5 10 c0       	push   $0xc010e5ca$/;"	l
c01072bb	obj/kernel.asm	/^c01072bb:	e8 ba 8f ff ff       	call   c010027a <cprintf>$/;"	l
c01072c0	obj/kernel.asm	/^c01072c0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01072c3	obj/kernel.asm	/^c01072c3:	c9                   	leave  $/;"	l
c01072c4	obj/kernel.asm	/^c01072c4:	c3                   	ret    $/;"	l
c01072c5	obj/kernel.asm	/^c01072c5 <slob_allocated>:$/;"	l
c01072c5	obj/kernel.asm	/^c01072c5:	55                   	push   %ebp$/;"	l
c01072c6	obj/kernel.asm	/^c01072c6:	89 e5                	mov    %esp,%ebp$/;"	l
c01072c8	obj/kernel.asm	/^c01072c8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01072cd	obj/kernel.asm	/^c01072cd:	5d                   	pop    %ebp$/;"	l
c01072ce	obj/kernel.asm	/^c01072ce:	c3                   	ret    $/;"	l
c01072cf	obj/kernel.asm	/^c01072cf <kallocated>:$/;"	l
c01072cf	obj/kernel.asm	/^c01072cf:	55                   	push   %ebp$/;"	l
c01072d0	obj/kernel.asm	/^c01072d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01072d2	obj/kernel.asm	/^c01072d2:	e8 ee ff ff ff       	call   c01072c5 <slob_allocated>$/;"	l
c01072d7	obj/kernel.asm	/^c01072d7:	5d                   	pop    %ebp$/;"	l
c01072d8	obj/kernel.asm	/^c01072d8:	c3                   	ret    $/;"	l
c01072d9	obj/kernel.asm	/^c01072d9 <find_order>:$/;"	l
c01072d9	obj/kernel.asm	/^c01072d9:	55                   	push   %ebp$/;"	l
c01072da	obj/kernel.asm	/^c01072da:	89 e5                	mov    %esp,%ebp$/;"	l
c01072dc	obj/kernel.asm	/^c01072dc:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01072df	obj/kernel.asm	/^c01072df:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01072e6	obj/kernel.asm	/^c01072e6:	eb 07                	jmp    c01072ef <find_order+0x16>$/;"	l
c01072e8	obj/kernel.asm	/^c01072e8:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01072ec	obj/kernel.asm	/^c01072ec:	d1 7d 08             	sarl   0x8(%ebp)$/;"	d
c01072ef	obj/kernel.asm	/^c01072ef:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c01072f6	obj/kernel.asm	/^c01072f6:	7f f0                	jg     c01072e8 <find_order+0xf>$/;"	l
c01072f8	obj/kernel.asm	/^c01072f8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01072fb	obj/kernel.asm	/^c01072fb:	c9                   	leave  $/;"	l
c01072fc	obj/kernel.asm	/^c01072fc:	c3                   	ret    $/;"	l
c01072fd	obj/kernel.asm	/^c01072fd <__kmalloc>:$/;"	l
c01072fd	obj/kernel.asm	/^c01072fd:	55                   	push   %ebp$/;"	l
c01072fe	obj/kernel.asm	/^c01072fe:	89 e5                	mov    %esp,%ebp$/;"	l
c0107300	obj/kernel.asm	/^c0107300:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107303	obj/kernel.asm	/^c0107303:	81 7d 08 f7 0f 00 00 	cmpl   $0xff7,0x8(%ebp)$/;"	l
c010730a	obj/kernel.asm	/^c010730a:	77 35                	ja     c0107341 <__kmalloc+0x44>$/;"	l
c010730c	obj/kernel.asm	/^c010730c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010730f	obj/kernel.asm	/^c010730f:	83 c0 08             	add    $0x8,%eax$/;"	l
c0107312	obj/kernel.asm	/^c0107312:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0107315	obj/kernel.asm	/^c0107315:	6a 00                	push   $0x0$/;"	l
c0107317	obj/kernel.asm	/^c0107317:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010731a	obj/kernel.asm	/^c010731a:	50                   	push   %eax$/;"	l
c010731b	obj/kernel.asm	/^c010731b:	e8 85 fc ff ff       	call   c0106fa5 <slob_alloc>$/;"	l
c0107320	obj/kernel.asm	/^c0107320:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107323	obj/kernel.asm	/^c0107323:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107326	obj/kernel.asm	/^c0107326:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010732a	obj/kernel.asm	/^c010732a:	74 0b                	je     c0107337 <__kmalloc+0x3a>$/;"	l
c010732c	obj/kernel.asm	/^c010732c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010732f	obj/kernel.asm	/^c010732f:	83 c0 08             	add    $0x8,%eax$/;"	l
c0107332	obj/kernel.asm	/^c0107332:	e9 b3 00 00 00       	jmp    c01073ea <__kmalloc+0xed>$/;"	l
c0107337	obj/kernel.asm	/^c0107337:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010733c	obj/kernel.asm	/^c010733c:	e9 a9 00 00 00       	jmp    c01073ea <__kmalloc+0xed>$/;"	l
c0107341	obj/kernel.asm	/^c0107341:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0107344	obj/kernel.asm	/^c0107344:	6a 00                	push   $0x0$/;"	l
c0107346	obj/kernel.asm	/^c0107346:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0107349	obj/kernel.asm	/^c0107349:	6a 0c                	push   $0xc$/;"	l
c010734b	obj/kernel.asm	/^c010734b:	e8 55 fc ff ff       	call   c0106fa5 <slob_alloc>$/;"	l
c0107350	obj/kernel.asm	/^c0107350:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107353	obj/kernel.asm	/^c0107353:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107356	obj/kernel.asm	/^c0107356:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010735a	obj/kernel.asm	/^c010735a:	75 0a                	jne    c0107366 <__kmalloc+0x69>$/;"	l
c010735c	obj/kernel.asm	/^c010735c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107361	obj/kernel.asm	/^c0107361:	e9 84 00 00 00       	jmp    c01073ea <__kmalloc+0xed>$/;"	l
c0107366	obj/kernel.asm	/^c0107366:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107369	obj/kernel.asm	/^c0107369:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010736c	obj/kernel.asm	/^c010736c:	50                   	push   %eax$/;"	l
c010736d	obj/kernel.asm	/^c010736d:	e8 67 ff ff ff       	call   c01072d9 <find_order>$/;"	l
c0107372	obj/kernel.asm	/^c0107372:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107375	obj/kernel.asm	/^c0107375:	89 c2                	mov    %eax,%edx$/;"	l
c0107377	obj/kernel.asm	/^c0107377:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010737a	obj/kernel.asm	/^c010737a:	89 10                	mov    %edx,(%eax)$/;"	l
c010737c	obj/kernel.asm	/^c010737c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010737f	obj/kernel.asm	/^c010737f:	8b 00                	mov    (%eax),%eax$/;"	l
c0107381	obj/kernel.asm	/^c0107381:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107384	obj/kernel.asm	/^c0107384:	50                   	push   %eax$/;"	l
c0107385	obj/kernel.asm	/^c0107385:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0107388	obj/kernel.asm	/^c0107388:	e8 a0 fb ff ff       	call   c0106f2d <__slob_get_free_pages>$/;"	l
c010738d	obj/kernel.asm	/^c010738d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107390	obj/kernel.asm	/^c0107390:	89 c2                	mov    %eax,%edx$/;"	l
c0107392	obj/kernel.asm	/^c0107392:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107395	obj/kernel.asm	/^c0107395:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107398	obj/kernel.asm	/^c0107398:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010739b	obj/kernel.asm	/^c010739b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010739e	obj/kernel.asm	/^c010739e:	85 c0                	test   %eax,%eax$/;"	l
c01073a0	obj/kernel.asm	/^c01073a0:	74 33                	je     c01073d5 <__kmalloc+0xd8>$/;"	l
c01073a2	obj/kernel.asm	/^c01073a2:	e8 62 fa ff ff       	call   c0106e09 <__intr_save>$/;"	l
c01073a7	obj/kernel.asm	/^c01073a7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01073aa	obj/kernel.asm	/^c01073aa:	8b 15 7c 24 1c c0    	mov    0xc01c247c,%edx$/;"	l
c01073b0	obj/kernel.asm	/^c01073b0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01073b3	obj/kernel.asm	/^c01073b3:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01073b6	obj/kernel.asm	/^c01073b6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01073b9	obj/kernel.asm	/^c01073b9:	a3 7c 24 1c c0       	mov    %eax,0xc01c247c$/;"	l
c01073be	obj/kernel.asm	/^c01073be:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01073c1	obj/kernel.asm	/^c01073c1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01073c4	obj/kernel.asm	/^c01073c4:	50                   	push   %eax$/;"	l
c01073c5	obj/kernel.asm	/^c01073c5:	e8 69 fa ff ff       	call   c0106e33 <__intr_restore>$/;"	l
c01073ca	obj/kernel.asm	/^c01073ca:	83 c4 10             	add    $0x10,%esp$/;"	l
c01073cd	obj/kernel.asm	/^c01073cd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01073d0	obj/kernel.asm	/^c01073d0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01073d3	obj/kernel.asm	/^c01073d3:	eb 15                	jmp    c01073ea <__kmalloc+0xed>$/;"	l
c01073d5	obj/kernel.asm	/^c01073d5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01073d8	obj/kernel.asm	/^c01073d8:	6a 0c                	push   $0xc$/;"	l
c01073da	obj/kernel.asm	/^c01073da:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01073dd	obj/kernel.asm	/^c01073dd:	e8 92 fd ff ff       	call   c0107174 <slob_free>$/;"	l
c01073e2	obj/kernel.asm	/^c01073e2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01073e5	obj/kernel.asm	/^c01073e5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01073ea	obj/kernel.asm	/^c01073ea:	c9                   	leave  $/;"	l
c01073eb	obj/kernel.asm	/^c01073eb:	c3                   	ret    $/;"	l
c01073ec	obj/kernel.asm	/^c01073ec <kmalloc>:$/;"	l
c01073ec	obj/kernel.asm	/^c01073ec:	55                   	push   %ebp$/;"	l
c01073ed	obj/kernel.asm	/^c01073ed:	89 e5                	mov    %esp,%ebp$/;"	l
c01073ef	obj/kernel.asm	/^c01073ef:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01073f2	obj/kernel.asm	/^c01073f2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01073f5	obj/kernel.asm	/^c01073f5:	6a 00                	push   $0x0$/;"	l
c01073f7	obj/kernel.asm	/^c01073f7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01073fa	obj/kernel.asm	/^c01073fa:	e8 fe fe ff ff       	call   c01072fd <__kmalloc>$/;"	l
c01073ff	obj/kernel.asm	/^c01073ff:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107402	obj/kernel.asm	/^c0107402:	c9                   	leave  $/;"	l
c0107403	obj/kernel.asm	/^c0107403:	c3                   	ret    $/;"	l
c0107404	obj/kernel.asm	/^c0107404 <kfree>:$/;"	l
c0107404	obj/kernel.asm	/^c0107404:	55                   	push   %ebp$/;"	l
c0107405	obj/kernel.asm	/^c0107405:	89 e5                	mov    %esp,%ebp$/;"	l
c0107407	obj/kernel.asm	/^c0107407:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010740a	obj/kernel.asm	/^c010740a:	c7 45 f0 7c 24 1c c0 	movl   $0xc01c247c,-0x10(%ebp)$/;"	l
c0107411	obj/kernel.asm	/^c0107411:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0107415	obj/kernel.asm	/^c0107415:	75 05                	jne    c010741c <kfree+0x18>$/;"	l
c0107417	obj/kernel.asm	/^c0107417:	e9 aa 00 00 00       	jmp    c01074c6 <kfree+0xc2>$/;"	l
c010741c	obj/kernel.asm	/^c010741c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010741f	obj/kernel.asm	/^c010741f:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0107424	obj/kernel.asm	/^c0107424:	85 c0                	test   %eax,%eax$/;"	l
c0107426	obj/kernel.asm	/^c0107426:	0f 85 85 00 00 00    	jne    c01074b1 <kfree+0xad>$/;"	l
c010742c	obj/kernel.asm	/^c010742c:	e8 d8 f9 ff ff       	call   c0106e09 <__intr_save>$/;"	l
c0107431	obj/kernel.asm	/^c0107431:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107434	obj/kernel.asm	/^c0107434:	a1 7c 24 1c c0       	mov    0xc01c247c,%eax$/;"	l
c0107439	obj/kernel.asm	/^c0107439:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010743c	obj/kernel.asm	/^c010743c:	eb 5e                	jmp    c010749c <kfree+0x98>$/;"	l
c010743e	obj/kernel.asm	/^c010743e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107441	obj/kernel.asm	/^c0107441:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107444	obj/kernel.asm	/^c0107444:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107447	obj/kernel.asm	/^c0107447:	75 41                	jne    c010748a <kfree+0x86>$/;"	l
c0107449	obj/kernel.asm	/^c0107449:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010744c	obj/kernel.asm	/^c010744c:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010744f	obj/kernel.asm	/^c010744f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107452	obj/kernel.asm	/^c0107452:	89 10                	mov    %edx,(%eax)$/;"	l
c0107454	obj/kernel.asm	/^c0107454:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107457	obj/kernel.asm	/^c0107457:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010745a	obj/kernel.asm	/^c010745a:	50                   	push   %eax$/;"	l
c010745b	obj/kernel.asm	/^c010745b:	e8 d3 f9 ff ff       	call   c0106e33 <__intr_restore>$/;"	l
c0107460	obj/kernel.asm	/^c0107460:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107463	obj/kernel.asm	/^c0107463:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107466	obj/kernel.asm	/^c0107466:	8b 10                	mov    (%eax),%edx$/;"	l
c0107468	obj/kernel.asm	/^c0107468:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010746b	obj/kernel.asm	/^c010746b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010746e	obj/kernel.asm	/^c010746e:	52                   	push   %edx$/;"	l
c010746f	obj/kernel.asm	/^c010746f:	50                   	push   %eax$/;"	l
c0107470	obj/kernel.asm	/^c0107470:	e8 f8 fa ff ff       	call   c0106f6d <__slob_free_pages>$/;"	l
c0107475	obj/kernel.asm	/^c0107475:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107478	obj/kernel.asm	/^c0107478:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010747b	obj/kernel.asm	/^c010747b:	6a 0c                	push   $0xc$/;"	l
c010747d	obj/kernel.asm	/^c010747d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0107480	obj/kernel.asm	/^c0107480:	e8 ef fc ff ff       	call   c0107174 <slob_free>$/;"	l
c0107485	obj/kernel.asm	/^c0107485:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107488	obj/kernel.asm	/^c0107488:	eb 3c                	jmp    c01074c6 <kfree+0xc2>$/;"	l
c010748a	obj/kernel.asm	/^c010748a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010748d	obj/kernel.asm	/^c010748d:	83 c0 08             	add    $0x8,%eax$/;"	l
c0107490	obj/kernel.asm	/^c0107490:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107493	obj/kernel.asm	/^c0107493:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107496	obj/kernel.asm	/^c0107496:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107499	obj/kernel.asm	/^c0107499:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010749c	obj/kernel.asm	/^c010749c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01074a0	obj/kernel.asm	/^c01074a0:	75 9c                	jne    c010743e <kfree+0x3a>$/;"	l
c01074a2	obj/kernel.asm	/^c01074a2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01074a5	obj/kernel.asm	/^c01074a5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01074a8	obj/kernel.asm	/^c01074a8:	50                   	push   %eax$/;"	l
c01074a9	obj/kernel.asm	/^c01074a9:	e8 85 f9 ff ff       	call   c0106e33 <__intr_restore>$/;"	l
c01074ae	obj/kernel.asm	/^c01074ae:	83 c4 10             	add    $0x10,%esp$/;"	l
c01074b1	obj/kernel.asm	/^c01074b1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01074b4	obj/kernel.asm	/^c01074b4:	83 e8 08             	sub    $0x8,%eax$/;"	l
c01074b7	obj/kernel.asm	/^c01074b7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01074ba	obj/kernel.asm	/^c01074ba:	6a 00                	push   $0x0$/;"	l
c01074bc	obj/kernel.asm	/^c01074bc:	50                   	push   %eax$/;"	l
c01074bd	obj/kernel.asm	/^c01074bd:	e8 b2 fc ff ff       	call   c0107174 <slob_free>$/;"	l
c01074c2	obj/kernel.asm	/^c01074c2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01074c5	obj/kernel.asm	/^c01074c5:	90                   	nop$/;"	l
c01074c6	obj/kernel.asm	/^c01074c6:	c9                   	leave  $/;"	l
c01074c7	obj/kernel.asm	/^c01074c7:	c3                   	ret    $/;"	l
c01074c8	obj/kernel.asm	/^c01074c8 <ksize>:$/;"	l
c01074c8	obj/kernel.asm	/^c01074c8:	55                   	push   %ebp$/;"	l
c01074c9	obj/kernel.asm	/^c01074c9:	89 e5                	mov    %esp,%ebp$/;"	l
c01074cb	obj/kernel.asm	/^c01074cb:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01074ce	obj/kernel.asm	/^c01074ce:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01074d2	obj/kernel.asm	/^c01074d2:	75 07                	jne    c01074db <ksize+0x13>$/;"	l
c01074d4	obj/kernel.asm	/^c01074d4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01074d9	obj/kernel.asm	/^c01074d9:	eb 73                	jmp    c010754e <ksize+0x86>$/;"	l
c01074db	obj/kernel.asm	/^c01074db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01074de	obj/kernel.asm	/^c01074de:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01074e3	obj/kernel.asm	/^c01074e3:	85 c0                	test   %eax,%eax$/;"	l
c01074e5	obj/kernel.asm	/^c01074e5:	75 5c                	jne    c0107543 <ksize+0x7b>$/;"	l
c01074e7	obj/kernel.asm	/^c01074e7:	e8 1d f9 ff ff       	call   c0106e09 <__intr_save>$/;"	l
c01074ec	obj/kernel.asm	/^c01074ec:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01074ef	obj/kernel.asm	/^c01074ef:	a1 7c 24 1c c0       	mov    0xc01c247c,%eax$/;"	l
c01074f4	obj/kernel.asm	/^c01074f4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01074f7	obj/kernel.asm	/^c01074f7:	eb 35                	jmp    c010752e <ksize+0x66>$/;"	l
c01074f9	obj/kernel.asm	/^c01074f9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01074fc	obj/kernel.asm	/^c01074fc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01074ff	obj/kernel.asm	/^c01074ff:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107502	obj/kernel.asm	/^c0107502:	75 21                	jne    c0107525 <ksize+0x5d>$/;"	l
c0107504	obj/kernel.asm	/^c0107504:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107507	obj/kernel.asm	/^c0107507:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010750a	obj/kernel.asm	/^c010750a:	50                   	push   %eax$/;"	l
c010750b	obj/kernel.asm	/^c010750b:	e8 23 f9 ff ff       	call   c0106e33 <__intr_restore>$/;"	l
c0107510	obj/kernel.asm	/^c0107510:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107513	obj/kernel.asm	/^c0107513:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107516	obj/kernel.asm	/^c0107516:	8b 00                	mov    (%eax),%eax$/;"	l
c0107518	obj/kernel.asm	/^c0107518:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
c010751d	obj/kernel.asm	/^c010751d:	89 c1                	mov    %eax,%ecx$/;"	l
c010751f	obj/kernel.asm	/^c010751f:	d3 e2                	shl    %cl,%edx$/;"	d
c0107521	obj/kernel.asm	/^c0107521:	89 d0                	mov    %edx,%eax$/;"	l
c0107523	obj/kernel.asm	/^c0107523:	eb 29                	jmp    c010754e <ksize+0x86>$/;"	l
c0107525	obj/kernel.asm	/^c0107525:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107528	obj/kernel.asm	/^c0107528:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010752b	obj/kernel.asm	/^c010752b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010752e	obj/kernel.asm	/^c010752e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107532	obj/kernel.asm	/^c0107532:	75 c5                	jne    c01074f9 <ksize+0x31>$/;"	l
c0107534	obj/kernel.asm	/^c0107534:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107537	obj/kernel.asm	/^c0107537:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010753a	obj/kernel.asm	/^c010753a:	50                   	push   %eax$/;"	l
c010753b	obj/kernel.asm	/^c010753b:	e8 f3 f8 ff ff       	call   c0106e33 <__intr_restore>$/;"	l
c0107540	obj/kernel.asm	/^c0107540:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107543	obj/kernel.asm	/^c0107543:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107546	obj/kernel.asm	/^c0107546:	83 e8 08             	sub    $0x8,%eax$/;"	l
c0107549	obj/kernel.asm	/^c0107549:	8b 00                	mov    (%eax),%eax$/;"	l
c010754b	obj/kernel.asm	/^c010754b:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010754e	obj/kernel.asm	/^c010754e:	c9                   	leave  $/;"	l
c010754f	obj/kernel.asm	/^c010754f:	c3                   	ret    $/;"	l
c0107550	obj/kernel.asm	/^c0107550 <_fifo_init_mm>:$/;"	l
c0107550	obj/kernel.asm	/^c0107550:	55                   	push   %ebp$/;"	l
c0107551	obj/kernel.asm	/^c0107551:	89 e5                	mov    %esp,%ebp$/;"	l
c0107553	obj/kernel.asm	/^c0107553:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0107556	obj/kernel.asm	/^c0107556:	c7 45 fc 64 46 1c c0 	movl   $0xc01c4664,-0x4(%ebp)$/;"	l
c010755d	obj/kernel.asm	/^c010755d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107560	obj/kernel.asm	/^c0107560:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0107563	obj/kernel.asm	/^c0107563:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107566	obj/kernel.asm	/^c0107566:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107569	obj/kernel.asm	/^c0107569:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010756c	obj/kernel.asm	/^c010756c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010756f	obj/kernel.asm	/^c010756f:	89 10                	mov    %edx,(%eax)$/;"	l
c0107571	obj/kernel.asm	/^c0107571:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107574	obj/kernel.asm	/^c0107574:	c7 40 14 64 46 1c c0 	movl   $0xc01c4664,0x14(%eax)$/;"	l
c010757b	obj/kernel.asm	/^c010757b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107580	obj/kernel.asm	/^c0107580:	c9                   	leave  $/;"	l
c0107581	obj/kernel.asm	/^c0107581:	c3                   	ret    $/;"	l
c0107582	obj/kernel.asm	/^c0107582 <_fifo_map_swappable>:$/;"	l
c0107582	obj/kernel.asm	/^c0107582:	55                   	push   %ebp$/;"	l
c0107583	obj/kernel.asm	/^c0107583:	89 e5                	mov    %esp,%ebp$/;"	l
c0107585	obj/kernel.asm	/^c0107585:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107588	obj/kernel.asm	/^c0107588:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010758b	obj/kernel.asm	/^c010758b:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010758e	obj/kernel.asm	/^c010758e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107591	obj/kernel.asm	/^c0107591:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107594	obj/kernel.asm	/^c0107594:	83 c0 14             	add    $0x14,%eax$/;"	l
c0107597	obj/kernel.asm	/^c0107597:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010759a	obj/kernel.asm	/^c010759a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010759e	obj/kernel.asm	/^c010759e:	74 06                	je     c01075a6 <_fifo_map_swappable+0x24>$/;"	l
c01075a0	obj/kernel.asm	/^c01075a0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01075a4	obj/kernel.asm	/^c01075a4:	75 16                	jne    c01075bc <_fifo_map_swappable+0x3a>$/;"	l
c01075a6	obj/kernel.asm	/^c01075a6:	68 e8 e5 10 c0       	push   $0xc010e5e8$/;"	l
c01075ab	obj/kernel.asm	/^c01075ab:	68 06 e6 10 c0       	push   $0xc010e606$/;"	l
c01075b0	obj/kernel.asm	/^c01075b0:	6a 32                	push   $0x32$/;"	l
c01075b2	obj/kernel.asm	/^c01075b2:	68 1b e6 10 c0       	push   $0xc010e61b$/;"	l
c01075b7	obj/kernel.asm	/^c01075b7:	e8 23 8e ff ff       	call   c01003df <__panic>$/;"	l
c01075bc	obj/kernel.asm	/^c01075bc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01075bf	obj/kernel.asm	/^c01075bf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01075c2	obj/kernel.asm	/^c01075c2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01075c5	obj/kernel.asm	/^c01075c5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01075c8	obj/kernel.asm	/^c01075c8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01075cb	obj/kernel.asm	/^c01075cb:	8b 00                	mov    (%eax),%eax$/;"	l
c01075cd	obj/kernel.asm	/^c01075cd:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01075d0	obj/kernel.asm	/^c01075d0:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c01075d3	obj/kernel.asm	/^c01075d3:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01075d6	obj/kernel.asm	/^c01075d6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01075d9	obj/kernel.asm	/^c01075d9:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01075dc	obj/kernel.asm	/^c01075dc:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01075df	obj/kernel.asm	/^c01075df:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01075e2	obj/kernel.asm	/^c01075e2:	89 10                	mov    %edx,(%eax)$/;"	l
c01075e4	obj/kernel.asm	/^c01075e4:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01075e7	obj/kernel.asm	/^c01075e7:	8b 10                	mov    (%eax),%edx$/;"	l
c01075e9	obj/kernel.asm	/^c01075e9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01075ec	obj/kernel.asm	/^c01075ec:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01075ef	obj/kernel.asm	/^c01075ef:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01075f2	obj/kernel.asm	/^c01075f2:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01075f5	obj/kernel.asm	/^c01075f5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01075f8	obj/kernel.asm	/^c01075f8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01075fb	obj/kernel.asm	/^c01075fb:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01075fe	obj/kernel.asm	/^c01075fe:	89 10                	mov    %edx,(%eax)$/;"	l
c0107600	obj/kernel.asm	/^c0107600:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107605	obj/kernel.asm	/^c0107605:	c9                   	leave  $/;"	l
c0107606	obj/kernel.asm	/^c0107606:	c3                   	ret    $/;"	l
c0107607	obj/kernel.asm	/^c0107607 <_fifo_swap_out_victim>:$/;"	l
c0107607	obj/kernel.asm	/^c0107607:	55                   	push   %ebp$/;"	l
c0107608	obj/kernel.asm	/^c0107608:	89 e5                	mov    %esp,%ebp$/;"	l
c010760a	obj/kernel.asm	/^c010760a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010760d	obj/kernel.asm	/^c010760d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107610	obj/kernel.asm	/^c0107610:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0107613	obj/kernel.asm	/^c0107613:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107616	obj/kernel.asm	/^c0107616:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010761a	obj/kernel.asm	/^c010761a:	75 16                	jne    c0107632 <_fifo_swap_out_victim+0x2b>$/;"	l
c010761c	obj/kernel.asm	/^c010761c:	68 2f e6 10 c0       	push   $0xc010e62f$/;"	l
c0107621	obj/kernel.asm	/^c0107621:	68 06 e6 10 c0       	push   $0xc010e606$/;"	l
c0107626	obj/kernel.asm	/^c0107626:	6a 4a                	push   $0x4a$/;"	l
c0107628	obj/kernel.asm	/^c0107628:	68 1b e6 10 c0       	push   $0xc010e61b$/;"	l
c010762d	obj/kernel.asm	/^c010762d:	e8 ad 8d ff ff       	call   c01003df <__panic>$/;"	l
c0107632	obj/kernel.asm	/^c0107632:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0107636	obj/kernel.asm	/^c0107636:	74 16                	je     c010764e <_fifo_swap_out_victim+0x47>$/;"	l
c0107638	obj/kernel.asm	/^c0107638:	68 3c e6 10 c0       	push   $0xc010e63c$/;"	l
c010763d	obj/kernel.asm	/^c010763d:	68 06 e6 10 c0       	push   $0xc010e606$/;"	l
c0107642	obj/kernel.asm	/^c0107642:	6a 4b                	push   $0x4b$/;"	l
c0107644	obj/kernel.asm	/^c0107644:	68 1b e6 10 c0       	push   $0xc010e61b$/;"	l
c0107649	obj/kernel.asm	/^c0107649:	e8 91 8d ff ff       	call   c01003df <__panic>$/;"	l
c010764e	obj/kernel.asm	/^c010764e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107651	obj/kernel.asm	/^c0107651:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107654	obj/kernel.asm	/^c0107654:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107657	obj/kernel.asm	/^c0107657:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010765a	obj/kernel.asm	/^c010765a:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c010765d	obj/kernel.asm	/^c010765d:	0f 94 c0             	sete   %al$/;"	l
c0107660	obj/kernel.asm	/^c0107660:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107663	obj/kernel.asm	/^c0107663:	85 c0                	test   %eax,%eax$/;"	l
c0107665	obj/kernel.asm	/^c0107665:	74 17                	je     c010767e <_fifo_swap_out_victim+0x77>$/;"	l
c0107667	obj/kernel.asm	/^c0107667:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010766a	obj/kernel.asm	/^c010766a:	68 47 e6 10 c0       	push   $0xc010e647$/;"	l
c010766f	obj/kernel.asm	/^c010766f:	e8 06 8c ff ff       	call   c010027a <cprintf>$/;"	l
c0107674	obj/kernel.asm	/^c0107674:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107677	obj/kernel.asm	/^c0107677:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010767c	obj/kernel.asm	/^c010767c:	eb 47                	jmp    c01076c5 <_fifo_swap_out_victim+0xbe>$/;"	l
c010767e	obj/kernel.asm	/^c010767e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107681	obj/kernel.asm	/^c0107681:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107684	obj/kernel.asm	/^c0107684:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107687	obj/kernel.asm	/^c0107687:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010768a	obj/kernel.asm	/^c010768a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010768d	obj/kernel.asm	/^c010768d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107690	obj/kernel.asm	/^c0107690:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107693	obj/kernel.asm	/^c0107693:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107696	obj/kernel.asm	/^c0107696:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107699	obj/kernel.asm	/^c0107699:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010769c	obj/kernel.asm	/^c010769c:	8b 12                	mov    (%edx),%edx$/;"	l
c010769e	obj/kernel.asm	/^c010769e:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c01076a1	obj/kernel.asm	/^c01076a1:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01076a4	obj/kernel.asm	/^c01076a4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01076a7	obj/kernel.asm	/^c01076a7:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01076aa	obj/kernel.asm	/^c01076aa:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01076ad	obj/kernel.asm	/^c01076ad:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01076b0	obj/kernel.asm	/^c01076b0:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01076b3	obj/kernel.asm	/^c01076b3:	89 10                	mov    %edx,(%eax)$/;"	l
c01076b5	obj/kernel.asm	/^c01076b5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01076b8	obj/kernel.asm	/^c01076b8:	8d 50 ec             	lea    -0x14(%eax),%edx$/;"	l
c01076bb	obj/kernel.asm	/^c01076bb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01076be	obj/kernel.asm	/^c01076be:	89 10                	mov    %edx,(%eax)$/;"	l
c01076c0	obj/kernel.asm	/^c01076c0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01076c5	obj/kernel.asm	/^c01076c5:	c9                   	leave  $/;"	l
c01076c6	obj/kernel.asm	/^c01076c6:	c3                   	ret    $/;"	l
c01076c7	obj/kernel.asm	/^c01076c7 <_fifo_check_swap>:$/;"	l
c01076c7	obj/kernel.asm	/^c01076c7:	55                   	push   %ebp$/;"	l
c01076c8	obj/kernel.asm	/^c01076c8:	89 e5                	mov    %esp,%ebp$/;"	l
c01076ca	obj/kernel.asm	/^c01076ca:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01076cd	obj/kernel.asm	/^c01076cd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01076d0	obj/kernel.asm	/^c01076d0:	68 58 e6 10 c0       	push   $0xc010e658$/;"	l
c01076d5	obj/kernel.asm	/^c01076d5:	e8 a0 8b ff ff       	call   c010027a <cprintf>$/;"	l
c01076da	obj/kernel.asm	/^c01076da:	83 c4 10             	add    $0x10,%esp$/;"	l
c01076dd	obj/kernel.asm	/^c01076dd:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c01076e2	obj/kernel.asm	/^c01076e2:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c01076e5	obj/kernel.asm	/^c01076e5:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c01076ea	obj/kernel.asm	/^c01076ea:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01076ed	obj/kernel.asm	/^c01076ed:	74 16                	je     c0107705 <_fifo_check_swap+0x3e>$/;"	l
c01076ef	obj/kernel.asm	/^c01076ef:	68 7e e6 10 c0       	push   $0xc010e67e$/;"	l
c01076f4	obj/kernel.asm	/^c01076f4:	68 06 e6 10 c0       	push   $0xc010e606$/;"	l
c01076f9	obj/kernel.asm	/^c01076f9:	6a 5f                	push   $0x5f$/;"	l
c01076fb	obj/kernel.asm	/^c01076fb:	68 1b e6 10 c0       	push   $0xc010e61b$/;"	l
c0107700	obj/kernel.asm	/^c0107700:	e8 da 8c ff ff       	call   c01003df <__panic>$/;"	l
c0107705	obj/kernel.asm	/^c0107705:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107708	obj/kernel.asm	/^c0107708:	68 90 e6 10 c0       	push   $0xc010e690$/;"	l
c010770d	obj/kernel.asm	/^c010770d:	e8 68 8b ff ff       	call   c010027a <cprintf>$/;"	l
c0107712	obj/kernel.asm	/^c0107712:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107715	obj/kernel.asm	/^c0107715:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010771a	obj/kernel.asm	/^c010771a:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c010771d	obj/kernel.asm	/^c010771d:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c0107722	obj/kernel.asm	/^c0107722:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107725	obj/kernel.asm	/^c0107725:	74 16                	je     c010773d <_fifo_check_swap+0x76>$/;"	l
c0107727	obj/kernel.asm	/^c0107727:	68 7e e6 10 c0       	push   $0xc010e67e$/;"	l
c010772c	obj/kernel.asm	/^c010772c:	68 06 e6 10 c0       	push   $0xc010e606$/;"	l
c0107731	obj/kernel.asm	/^c0107731:	6a 62                	push   $0x62$/;"	l
c0107733	obj/kernel.asm	/^c0107733:	68 1b e6 10 c0       	push   $0xc010e61b$/;"	l
c0107738	obj/kernel.asm	/^c0107738:	e8 a2 8c ff ff       	call   c01003df <__panic>$/;"	l
c010773d	obj/kernel.asm	/^c010773d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107740	obj/kernel.asm	/^c0107740:	68 b8 e6 10 c0       	push   $0xc010e6b8$/;"	l
c0107745	obj/kernel.asm	/^c0107745:	e8 30 8b ff ff       	call   c010027a <cprintf>$/;"	l
c010774a	obj/kernel.asm	/^c010774a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010774d	obj/kernel.asm	/^c010774d:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0107752	obj/kernel.asm	/^c0107752:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0107755	obj/kernel.asm	/^c0107755:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c010775a	obj/kernel.asm	/^c010775a:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c010775d	obj/kernel.asm	/^c010775d:	74 16                	je     c0107775 <_fifo_check_swap+0xae>$/;"	l
c010775f	obj/kernel.asm	/^c010775f:	68 7e e6 10 c0       	push   $0xc010e67e$/;"	l
c0107764	obj/kernel.asm	/^c0107764:	68 06 e6 10 c0       	push   $0xc010e606$/;"	l
c0107769	obj/kernel.asm	/^c0107769:	6a 65                	push   $0x65$/;"	l
c010776b	obj/kernel.asm	/^c010776b:	68 1b e6 10 c0       	push   $0xc010e61b$/;"	l
c0107770	obj/kernel.asm	/^c0107770:	e8 6a 8c ff ff       	call   c01003df <__panic>$/;"	l
c0107775	obj/kernel.asm	/^c0107775:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107778	obj/kernel.asm	/^c0107778:	68 e0 e6 10 c0       	push   $0xc010e6e0$/;"	l
c010777d	obj/kernel.asm	/^c010777d:	e8 f8 8a ff ff       	call   c010027a <cprintf>$/;"	l
c0107782	obj/kernel.asm	/^c0107782:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107785	obj/kernel.asm	/^c0107785:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c010778a	obj/kernel.asm	/^c010778a:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c010778d	obj/kernel.asm	/^c010778d:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c0107792	obj/kernel.asm	/^c0107792:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107795	obj/kernel.asm	/^c0107795:	74 16                	je     c01077ad <_fifo_check_swap+0xe6>$/;"	l
c0107797	obj/kernel.asm	/^c0107797:	68 7e e6 10 c0       	push   $0xc010e67e$/;"	l
c010779c	obj/kernel.asm	/^c010779c:	68 06 e6 10 c0       	push   $0xc010e606$/;"	l
c01077a1	obj/kernel.asm	/^c01077a1:	6a 68                	push   $0x68$/;"	l
c01077a3	obj/kernel.asm	/^c01077a3:	68 1b e6 10 c0       	push   $0xc010e61b$/;"	l
c01077a8	obj/kernel.asm	/^c01077a8:	e8 32 8c ff ff       	call   c01003df <__panic>$/;"	l
c01077ad	obj/kernel.asm	/^c01077ad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01077b0	obj/kernel.asm	/^c01077b0:	68 08 e7 10 c0       	push   $0xc010e708$/;"	l
c01077b5	obj/kernel.asm	/^c01077b5:	e8 c0 8a ff ff       	call   c010027a <cprintf>$/;"	l
c01077ba	obj/kernel.asm	/^c01077ba:	83 c4 10             	add    $0x10,%esp$/;"	l
c01077bd	obj/kernel.asm	/^c01077bd:	b8 00 50 00 00       	mov    $0x5000,%eax$/;"	l
c01077c2	obj/kernel.asm	/^c01077c2:	c6 00 0e             	movb   $0xe,(%eax)$/;"	l
c01077c5	obj/kernel.asm	/^c01077c5:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c01077ca	obj/kernel.asm	/^c01077ca:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c01077cd	obj/kernel.asm	/^c01077cd:	74 16                	je     c01077e5 <_fifo_check_swap+0x11e>$/;"	l
c01077cf	obj/kernel.asm	/^c01077cf:	68 2e e7 10 c0       	push   $0xc010e72e$/;"	l
c01077d4	obj/kernel.asm	/^c01077d4:	68 06 e6 10 c0       	push   $0xc010e606$/;"	l
c01077d9	obj/kernel.asm	/^c01077d9:	6a 6b                	push   $0x6b$/;"	l
c01077db	obj/kernel.asm	/^c01077db:	68 1b e6 10 c0       	push   $0xc010e61b$/;"	l
c01077e0	obj/kernel.asm	/^c01077e0:	e8 fa 8b ff ff       	call   c01003df <__panic>$/;"	l
c01077e5	obj/kernel.asm	/^c01077e5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01077e8	obj/kernel.asm	/^c01077e8:	68 e0 e6 10 c0       	push   $0xc010e6e0$/;"	l
c01077ed	obj/kernel.asm	/^c01077ed:	e8 88 8a ff ff       	call   c010027a <cprintf>$/;"	l
c01077f2	obj/kernel.asm	/^c01077f2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01077f5	obj/kernel.asm	/^c01077f5:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c01077fa	obj/kernel.asm	/^c01077fa:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c01077fd	obj/kernel.asm	/^c01077fd:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c0107802	obj/kernel.asm	/^c0107802:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c0107805	obj/kernel.asm	/^c0107805:	74 16                	je     c010781d <_fifo_check_swap+0x156>$/;"	l
c0107807	obj/kernel.asm	/^c0107807:	68 2e e7 10 c0       	push   $0xc010e72e$/;"	l
c010780c	obj/kernel.asm	/^c010780c:	68 06 e6 10 c0       	push   $0xc010e606$/;"	l
c0107811	obj/kernel.asm	/^c0107811:	6a 6e                	push   $0x6e$/;"	l
c0107813	obj/kernel.asm	/^c0107813:	68 1b e6 10 c0       	push   $0xc010e61b$/;"	l
c0107818	obj/kernel.asm	/^c0107818:	e8 c2 8b ff ff       	call   c01003df <__panic>$/;"	l
c010781d	obj/kernel.asm	/^c010781d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107820	obj/kernel.asm	/^c0107820:	68 90 e6 10 c0       	push   $0xc010e690$/;"	l
c0107825	obj/kernel.asm	/^c0107825:	e8 50 8a ff ff       	call   c010027a <cprintf>$/;"	l
c010782a	obj/kernel.asm	/^c010782a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010782d	obj/kernel.asm	/^c010782d:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0107832	obj/kernel.asm	/^c0107832:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c0107835	obj/kernel.asm	/^c0107835:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c010783a	obj/kernel.asm	/^c010783a:	83 f8 06             	cmp    $0x6,%eax$/;"	l
c010783d	obj/kernel.asm	/^c010783d:	74 16                	je     c0107855 <_fifo_check_swap+0x18e>$/;"	l
c010783f	obj/kernel.asm	/^c010783f:	68 3d e7 10 c0       	push   $0xc010e73d$/;"	l
c0107844	obj/kernel.asm	/^c0107844:	68 06 e6 10 c0       	push   $0xc010e606$/;"	l
c0107849	obj/kernel.asm	/^c0107849:	6a 71                	push   $0x71$/;"	l
c010784b	obj/kernel.asm	/^c010784b:	68 1b e6 10 c0       	push   $0xc010e61b$/;"	l
c0107850	obj/kernel.asm	/^c0107850:	e8 8a 8b ff ff       	call   c01003df <__panic>$/;"	l
c0107855	obj/kernel.asm	/^c0107855:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107858	obj/kernel.asm	/^c0107858:	68 e0 e6 10 c0       	push   $0xc010e6e0$/;"	l
c010785d	obj/kernel.asm	/^c010785d:	e8 18 8a ff ff       	call   c010027a <cprintf>$/;"	l
c0107862	obj/kernel.asm	/^c0107862:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107865	obj/kernel.asm	/^c0107865:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c010786a	obj/kernel.asm	/^c010786a:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c010786d	obj/kernel.asm	/^c010786d:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c0107872	obj/kernel.asm	/^c0107872:	83 f8 07             	cmp    $0x7,%eax$/;"	l
c0107875	obj/kernel.asm	/^c0107875:	74 16                	je     c010788d <_fifo_check_swap+0x1c6>$/;"	l
c0107877	obj/kernel.asm	/^c0107877:	68 4c e7 10 c0       	push   $0xc010e74c$/;"	l
c010787c	obj/kernel.asm	/^c010787c:	68 06 e6 10 c0       	push   $0xc010e606$/;"	l
c0107881	obj/kernel.asm	/^c0107881:	6a 74                	push   $0x74$/;"	l
c0107883	obj/kernel.asm	/^c0107883:	68 1b e6 10 c0       	push   $0xc010e61b$/;"	l
c0107888	obj/kernel.asm	/^c0107888:	e8 52 8b ff ff       	call   c01003df <__panic>$/;"	l
c010788d	obj/kernel.asm	/^c010788d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107890	obj/kernel.asm	/^c0107890:	68 58 e6 10 c0       	push   $0xc010e658$/;"	l
c0107895	obj/kernel.asm	/^c0107895:	e8 e0 89 ff ff       	call   c010027a <cprintf>$/;"	l
c010789a	obj/kernel.asm	/^c010789a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010789d	obj/kernel.asm	/^c010789d:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c01078a2	obj/kernel.asm	/^c01078a2:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c01078a5	obj/kernel.asm	/^c01078a5:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c01078aa	obj/kernel.asm	/^c01078aa:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c01078ad	obj/kernel.asm	/^c01078ad:	74 16                	je     c01078c5 <_fifo_check_swap+0x1fe>$/;"	l
c01078af	obj/kernel.asm	/^c01078af:	68 5b e7 10 c0       	push   $0xc010e75b$/;"	l
c01078b4	obj/kernel.asm	/^c01078b4:	68 06 e6 10 c0       	push   $0xc010e606$/;"	l
c01078b9	obj/kernel.asm	/^c01078b9:	6a 77                	push   $0x77$/;"	l
c01078bb	obj/kernel.asm	/^c01078bb:	68 1b e6 10 c0       	push   $0xc010e61b$/;"	l
c01078c0	obj/kernel.asm	/^c01078c0:	e8 1a 8b ff ff       	call   c01003df <__panic>$/;"	l
c01078c5	obj/kernel.asm	/^c01078c5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01078c8	obj/kernel.asm	/^c01078c8:	68 b8 e6 10 c0       	push   $0xc010e6b8$/;"	l
c01078cd	obj/kernel.asm	/^c01078cd:	e8 a8 89 ff ff       	call   c010027a <cprintf>$/;"	l
c01078d2	obj/kernel.asm	/^c01078d2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01078d5	obj/kernel.asm	/^c01078d5:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c01078da	obj/kernel.asm	/^c01078da:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c01078dd	obj/kernel.asm	/^c01078dd:	a1 6c 24 1c c0       	mov    0xc01c246c,%eax$/;"	l
c01078e2	obj/kernel.asm	/^c01078e2:	83 f8 09             	cmp    $0x9,%eax$/;"	l
c01078e5	obj/kernel.asm	/^c01078e5:	74 16                	je     c01078fd <_fifo_check_swap+0x236>$/;"	l
c01078e7	obj/kernel.asm	/^c01078e7:	68 6a e7 10 c0       	push   $0xc010e76a$/;"	l
c01078ec	obj/kernel.asm	/^c01078ec:	68 06 e6 10 c0       	push   $0xc010e606$/;"	l
c01078f1	obj/kernel.asm	/^c01078f1:	6a 7a                	push   $0x7a$/;"	l
c01078f3	obj/kernel.asm	/^c01078f3:	68 1b e6 10 c0       	push   $0xc010e61b$/;"	l
c01078f8	obj/kernel.asm	/^c01078f8:	e8 e2 8a ff ff       	call   c01003df <__panic>$/;"	l
c01078fd	obj/kernel.asm	/^c01078fd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107902	obj/kernel.asm	/^c0107902:	c9                   	leave  $/;"	l
c0107903	obj/kernel.asm	/^c0107903:	c3                   	ret    $/;"	l
c0107904	obj/kernel.asm	/^c0107904 <_fifo_init>:$/;"	l
c0107904	obj/kernel.asm	/^c0107904:	55                   	push   %ebp$/;"	l
c0107905	obj/kernel.asm	/^c0107905:	89 e5                	mov    %esp,%ebp$/;"	l
c0107907	obj/kernel.asm	/^c0107907:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010790c	obj/kernel.asm	/^c010790c:	5d                   	pop    %ebp$/;"	l
c010790d	obj/kernel.asm	/^c010790d:	c3                   	ret    $/;"	l
c010790e	obj/kernel.asm	/^c010790e <_fifo_set_unswappable>:$/;"	l
c010790e	obj/kernel.asm	/^c010790e:	55                   	push   %ebp$/;"	l
c010790f	obj/kernel.asm	/^c010790f:	89 e5                	mov    %esp,%ebp$/;"	l
c0107911	obj/kernel.asm	/^c0107911:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107916	obj/kernel.asm	/^c0107916:	5d                   	pop    %ebp$/;"	l
c0107917	obj/kernel.asm	/^c0107917:	c3                   	ret    $/;"	l
c0107918	obj/kernel.asm	/^c0107918 <_fifo_tick_event>:$/;"	l
c0107918	obj/kernel.asm	/^c0107918:	55                   	push   %ebp$/;"	l
c0107919	obj/kernel.asm	/^c0107919:	89 e5                	mov    %esp,%ebp$/;"	l
c010791b	obj/kernel.asm	/^c010791b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107920	obj/kernel.asm	/^c0107920:	5d                   	pop    %ebp$/;"	l
c0107921	obj/kernel.asm	/^c0107921:	c3                   	ret    $/;"	l
c0107922	obj/kernel.asm	/^c0107922 <page2ppn>:$/;"	l
c0107922	obj/kernel.asm	/^c0107922:	55                   	push   %ebp$/;"	l
c0107923	obj/kernel.asm	/^c0107923:	89 e5                	mov    %esp,%ebp$/;"	l
c0107925	obj/kernel.asm	/^c0107925:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107928	obj/kernel.asm	/^c0107928:	8b 15 98 45 1c c0    	mov    0xc01c4598,%edx$/;"	l
c010792e	obj/kernel.asm	/^c010792e:	29 d0                	sub    %edx,%eax$/;"	l
c0107930	obj/kernel.asm	/^c0107930:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0107933	obj/kernel.asm	/^c0107933:	5d                   	pop    %ebp$/;"	l
c0107934	obj/kernel.asm	/^c0107934:	c3                   	ret    $/;"	l
c0107935	obj/kernel.asm	/^c0107935 <page2pa>:$/;"	l
c0107935	obj/kernel.asm	/^c0107935:	55                   	push   %ebp$/;"	l
c0107936	obj/kernel.asm	/^c0107936:	89 e5                	mov    %esp,%ebp$/;"	l
c0107938	obj/kernel.asm	/^c0107938:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010793b	obj/kernel.asm	/^c010793b:	e8 e2 ff ff ff       	call   c0107922 <page2ppn>$/;"	l
c0107940	obj/kernel.asm	/^c0107940:	83 c4 04             	add    $0x4,%esp$/;"	l
c0107943	obj/kernel.asm	/^c0107943:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0107946	obj/kernel.asm	/^c0107946:	c9                   	leave  $/;"	l
c0107947	obj/kernel.asm	/^c0107947:	c3                   	ret    $/;"	l
c0107948	obj/kernel.asm	/^c0107948 <page_ref>:$/;"	l
c0107948	obj/kernel.asm	/^c0107948:	55                   	push   %ebp$/;"	l
c0107949	obj/kernel.asm	/^c0107949:	89 e5                	mov    %esp,%ebp$/;"	l
c010794b	obj/kernel.asm	/^c010794b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010794e	obj/kernel.asm	/^c010794e:	8b 00                	mov    (%eax),%eax$/;"	l
c0107950	obj/kernel.asm	/^c0107950:	5d                   	pop    %ebp$/;"	l
c0107951	obj/kernel.asm	/^c0107951:	c3                   	ret    $/;"	l
c0107952	obj/kernel.asm	/^c0107952 <set_page_ref>:$/;"	l
c0107952	obj/kernel.asm	/^c0107952:	55                   	push   %ebp$/;"	l
c0107953	obj/kernel.asm	/^c0107953:	89 e5                	mov    %esp,%ebp$/;"	l
c0107955	obj/kernel.asm	/^c0107955:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107958	obj/kernel.asm	/^c0107958:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010795b	obj/kernel.asm	/^c010795b:	89 10                	mov    %edx,(%eax)$/;"	l
c010795d	obj/kernel.asm	/^c010795d:	5d                   	pop    %ebp$/;"	l
c010795e	obj/kernel.asm	/^c010795e:	c3                   	ret    $/;"	l
c010795f	obj/kernel.asm	/^c010795f <default_init>:$/;"	l
c010795f	obj/kernel.asm	/^c010795f:	55                   	push   %ebp$/;"	l
c0107960	obj/kernel.asm	/^c0107960:	89 e5                	mov    %esp,%ebp$/;"	l
c0107962	obj/kernel.asm	/^c0107962:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0107965	obj/kernel.asm	/^c0107965:	c7 45 fc 6c 46 1c c0 	movl   $0xc01c466c,-0x4(%ebp)$/;"	l
c010796c	obj/kernel.asm	/^c010796c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010796f	obj/kernel.asm	/^c010796f:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0107972	obj/kernel.asm	/^c0107972:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107975	obj/kernel.asm	/^c0107975:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107978	obj/kernel.asm	/^c0107978:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010797b	obj/kernel.asm	/^c010797b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010797e	obj/kernel.asm	/^c010797e:	89 10                	mov    %edx,(%eax)$/;"	l
c0107980	obj/kernel.asm	/^c0107980:	c7 05 74 46 1c c0 00 	movl   $0x0,0xc01c4674$/;"	l
c0107987	obj/kernel.asm	/^c0107987:	00 00 00 $/;"	l
c010798a	obj/kernel.asm	/^c010798a:	c9                   	leave  $/;"	l
c010798b	obj/kernel.asm	/^c010798b:	c3                   	ret    $/;"	l
c010798c	obj/kernel.asm	/^c010798c <default_init_memmap>:$/;"	l
c010798c	obj/kernel.asm	/^c010798c:	55                   	push   %ebp$/;"	l
c010798d	obj/kernel.asm	/^c010798d:	89 e5                	mov    %esp,%ebp$/;"	l
c010798f	obj/kernel.asm	/^c010798f:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0107992	obj/kernel.asm	/^c0107992:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0107996	obj/kernel.asm	/^c0107996:	75 16                	jne    c01079ae <default_init_memmap+0x22>$/;"	l
c0107998	obj/kernel.asm	/^c0107998:	68 8c e7 10 c0       	push   $0xc010e78c$/;"	l
c010799d	obj/kernel.asm	/^c010799d:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c01079a2	obj/kernel.asm	/^c01079a2:	6a 46                	push   $0x46$/;"	l
c01079a4	obj/kernel.asm	/^c01079a4:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01079a9	obj/kernel.asm	/^c01079a9:	e8 31 8a ff ff       	call   c01003df <__panic>$/;"	l
c01079ae	obj/kernel.asm	/^c01079ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01079b1	obj/kernel.asm	/^c01079b1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01079b4	obj/kernel.asm	/^c01079b4:	eb 6c                	jmp    c0107a22 <default_init_memmap+0x96>$/;"	l
c01079b6	obj/kernel.asm	/^c01079b6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01079b9	obj/kernel.asm	/^c01079b9:	83 c0 04             	add    $0x4,%eax$/;"	l
c01079bc	obj/kernel.asm	/^c01079bc:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01079c3	obj/kernel.asm	/^c01079c3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01079c6	obj/kernel.asm	/^c01079c6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01079c9	obj/kernel.asm	/^c01079c9:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01079cc	obj/kernel.asm	/^c01079cc:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01079cf	obj/kernel.asm	/^c01079cf:	19 c0                	sbb    %eax,%eax$/;"	l
c01079d1	obj/kernel.asm	/^c01079d1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01079d4	obj/kernel.asm	/^c01079d4:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01079d8	obj/kernel.asm	/^c01079d8:	0f 95 c0             	setne  %al$/;"	l
c01079db	obj/kernel.asm	/^c01079db:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01079de	obj/kernel.asm	/^c01079de:	85 c0                	test   %eax,%eax$/;"	l
c01079e0	obj/kernel.asm	/^c01079e0:	75 16                	jne    c01079f8 <default_init_memmap+0x6c>$/;"	l
c01079e2	obj/kernel.asm	/^c01079e2:	68 bd e7 10 c0       	push   $0xc010e7bd$/;"	l
c01079e7	obj/kernel.asm	/^c01079e7:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c01079ec	obj/kernel.asm	/^c01079ec:	6a 49                	push   $0x49$/;"	l
c01079ee	obj/kernel.asm	/^c01079ee:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01079f3	obj/kernel.asm	/^c01079f3:	e8 e7 89 ff ff       	call   c01003df <__panic>$/;"	l
c01079f8	obj/kernel.asm	/^c01079f8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01079fb	obj/kernel.asm	/^c01079fb:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0107a02	obj/kernel.asm	/^c0107a02:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107a05	obj/kernel.asm	/^c0107a05:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107a08	obj/kernel.asm	/^c0107a08:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107a0b	obj/kernel.asm	/^c0107a0b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107a0e	obj/kernel.asm	/^c0107a0e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107a11	obj/kernel.asm	/^c0107a11:	6a 00                	push   $0x0$/;"	l
c0107a13	obj/kernel.asm	/^c0107a13:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0107a16	obj/kernel.asm	/^c0107a16:	e8 37 ff ff ff       	call   c0107952 <set_page_ref>$/;"	l
c0107a1b	obj/kernel.asm	/^c0107a1b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107a1e	obj/kernel.asm	/^c0107a1e:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0107a22	obj/kernel.asm	/^c0107a22:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107a25	obj/kernel.asm	/^c0107a25:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107a28	obj/kernel.asm	/^c0107a28:	89 c2                	mov    %eax,%edx$/;"	l
c0107a2a	obj/kernel.asm	/^c0107a2a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107a2d	obj/kernel.asm	/^c0107a2d:	01 d0                	add    %edx,%eax$/;"	l
c0107a2f	obj/kernel.asm	/^c0107a2f:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107a32	obj/kernel.asm	/^c0107a32:	75 82                	jne    c01079b6 <default_init_memmap+0x2a>$/;"	l
c0107a34	obj/kernel.asm	/^c0107a34:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107a37	obj/kernel.asm	/^c0107a37:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107a3a	obj/kernel.asm	/^c0107a3a:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107a3d	obj/kernel.asm	/^c0107a3d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107a40	obj/kernel.asm	/^c0107a40:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107a43	obj/kernel.asm	/^c0107a43:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
c0107a4a	obj/kernel.asm	/^c0107a4a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107a4d	obj/kernel.asm	/^c0107a4d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107a50	obj/kernel.asm	/^c0107a50:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0107a53	obj/kernel.asm	/^c0107a53:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107a56	obj/kernel.asm	/^c0107a56:	8b 15 74 46 1c c0    	mov    0xc01c4674,%edx$/;"	l
c0107a5c	obj/kernel.asm	/^c0107a5c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107a5f	obj/kernel.asm	/^c0107a5f:	01 d0                	add    %edx,%eax$/;"	l
c0107a61	obj/kernel.asm	/^c0107a61:	a3 74 46 1c c0       	mov    %eax,0xc01c4674$/;"	l
c0107a66	obj/kernel.asm	/^c0107a66:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107a69	obj/kernel.asm	/^c0107a69:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0107a6c	obj/kernel.asm	/^c0107a6c:	c7 45 dc 6c 46 1c c0 	movl   $0xc01c466c,-0x24(%ebp)$/;"	l
c0107a73	obj/kernel.asm	/^c0107a73:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0107a76	obj/kernel.asm	/^c0107a76:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107a79	obj/kernel.asm	/^c0107a79:	8b 00                	mov    (%eax),%eax$/;"	l
c0107a7b	obj/kernel.asm	/^c0107a7b:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107a7e	obj/kernel.asm	/^c0107a7e:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0107a81	obj/kernel.asm	/^c0107a81:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0107a84	obj/kernel.asm	/^c0107a84:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107a87	obj/kernel.asm	/^c0107a87:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0107a8a	obj/kernel.asm	/^c0107a8a:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0107a8d	obj/kernel.asm	/^c0107a8d:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0107a90	obj/kernel.asm	/^c0107a90:	89 10                	mov    %edx,(%eax)$/;"	l
c0107a92	obj/kernel.asm	/^c0107a92:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0107a95	obj/kernel.asm	/^c0107a95:	8b 10                	mov    (%eax),%edx$/;"	l
c0107a97	obj/kernel.asm	/^c0107a97:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0107a9a	obj/kernel.asm	/^c0107a9a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107a9d	obj/kernel.asm	/^c0107a9d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107aa0	obj/kernel.asm	/^c0107aa0:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0107aa3	obj/kernel.asm	/^c0107aa3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107aa6	obj/kernel.asm	/^c0107aa6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107aa9	obj/kernel.asm	/^c0107aa9:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0107aac	obj/kernel.asm	/^c0107aac:	89 10                	mov    %edx,(%eax)$/;"	l
c0107aae	obj/kernel.asm	/^c0107aae:	c9                   	leave  $/;"	l
c0107aaf	obj/kernel.asm	/^c0107aaf:	c3                   	ret    $/;"	l
c0107ab0	obj/kernel.asm	/^c0107ab0 <default_alloc_pages>:$/;"	l
c0107ab0	obj/kernel.asm	/^c0107ab0:	55                   	push   %ebp$/;"	l
c0107ab1	obj/kernel.asm	/^c0107ab1:	89 e5                	mov    %esp,%ebp$/;"	l
c0107ab3	obj/kernel.asm	/^c0107ab3:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0107ab6	obj/kernel.asm	/^c0107ab6:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0107aba	obj/kernel.asm	/^c0107aba:	75 16                	jne    c0107ad2 <default_alloc_pages+0x22>$/;"	l
c0107abc	obj/kernel.asm	/^c0107abc:	68 8c e7 10 c0       	push   $0xc010e78c$/;"	l
c0107ac1	obj/kernel.asm	/^c0107ac1:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0107ac6	obj/kernel.asm	/^c0107ac6:	6a 5a                	push   $0x5a$/;"	l
c0107ac8	obj/kernel.asm	/^c0107ac8:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c0107acd	obj/kernel.asm	/^c0107acd:	e8 0d 89 ff ff       	call   c01003df <__panic>$/;"	l
c0107ad2	obj/kernel.asm	/^c0107ad2:	a1 74 46 1c c0       	mov    0xc01c4674,%eax$/;"	l
c0107ad7	obj/kernel.asm	/^c0107ad7:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107ada	obj/kernel.asm	/^c0107ada:	73 0a                	jae    c0107ae6 <default_alloc_pages+0x36>$/;"	l
c0107adc	obj/kernel.asm	/^c0107adc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107ae1	obj/kernel.asm	/^c0107ae1:	e9 6a 01 00 00       	jmp    c0107c50 <default_alloc_pages+0x1a0>$/;"	l
c0107ae6	obj/kernel.asm	/^c0107ae6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0107aed	obj/kernel.asm	/^c0107aed:	c7 45 f0 6c 46 1c c0 	movl   $0xc01c466c,-0x10(%ebp)$/;"	l
c0107af4	obj/kernel.asm	/^c0107af4:	eb 1c                	jmp    c0107b12 <default_alloc_pages+0x62>$/;"	l
c0107af6	obj/kernel.asm	/^c0107af6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107af9	obj/kernel.asm	/^c0107af9:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0107afc	obj/kernel.asm	/^c0107afc:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107aff	obj/kernel.asm	/^c0107aff:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107b02	obj/kernel.asm	/^c0107b02:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107b05	obj/kernel.asm	/^c0107b05:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107b08	obj/kernel.asm	/^c0107b08:	72 08                	jb     c0107b12 <default_alloc_pages+0x62>$/;"	l
c0107b0a	obj/kernel.asm	/^c0107b0a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107b0d	obj/kernel.asm	/^c0107b0d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107b10	obj/kernel.asm	/^c0107b10:	eb 18                	jmp    c0107b2a <default_alloc_pages+0x7a>$/;"	l
c0107b12	obj/kernel.asm	/^c0107b12:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107b15	obj/kernel.asm	/^c0107b15:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0107b18	obj/kernel.asm	/^c0107b18:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107b1b	obj/kernel.asm	/^c0107b1b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107b1e	obj/kernel.asm	/^c0107b1e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107b21	obj/kernel.asm	/^c0107b21:	81 7d f0 6c 46 1c c0 	cmpl   $0xc01c466c,-0x10(%ebp)$/;"	l
c0107b28	obj/kernel.asm	/^c0107b28:	75 cc                	jne    c0107af6 <default_alloc_pages+0x46>$/;"	l
c0107b2a	obj/kernel.asm	/^c0107b2a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107b2e	obj/kernel.asm	/^c0107b2e:	0f 84 19 01 00 00    	je     c0107c4d <default_alloc_pages+0x19d>$/;"	l
c0107b34	obj/kernel.asm	/^c0107b34:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b37	obj/kernel.asm	/^c0107b37:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0107b3a	obj/kernel.asm	/^c0107b3a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107b3d	obj/kernel.asm	/^c0107b3d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b40	obj/kernel.asm	/^c0107b40:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0107b43	obj/kernel.asm	/^c0107b43:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0107b46	obj/kernel.asm	/^c0107b46:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0107b49	obj/kernel.asm	/^c0107b49:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107b4c	obj/kernel.asm	/^c0107b4c:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107b4f	obj/kernel.asm	/^c0107b4f:	8b 12                	mov    (%edx),%edx$/;"	l
c0107b51	obj/kernel.asm	/^c0107b51:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0107b54	obj/kernel.asm	/^c0107b54:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0107b57	obj/kernel.asm	/^c0107b57:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107b5a	obj/kernel.asm	/^c0107b5a:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0107b5d	obj/kernel.asm	/^c0107b5d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107b60	obj/kernel.asm	/^c0107b60:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0107b63	obj/kernel.asm	/^c0107b63:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0107b66	obj/kernel.asm	/^c0107b66:	89 10                	mov    %edx,(%eax)$/;"	l
c0107b68	obj/kernel.asm	/^c0107b68:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b6b	obj/kernel.asm	/^c0107b6b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107b6e	obj/kernel.asm	/^c0107b6e:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107b71	obj/kernel.asm	/^c0107b71:	0f 86 82 00 00 00    	jbe    c0107bf9 <default_alloc_pages+0x149>$/;"	l
c0107b77	obj/kernel.asm	/^c0107b77:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107b7a	obj/kernel.asm	/^c0107b7a:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107b7d	obj/kernel.asm	/^c0107b7d:	89 c2                	mov    %eax,%edx$/;"	l
c0107b7f	obj/kernel.asm	/^c0107b7f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b82	obj/kernel.asm	/^c0107b82:	01 d0                	add    %edx,%eax$/;"	l
c0107b84	obj/kernel.asm	/^c0107b84:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107b87	obj/kernel.asm	/^c0107b87:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107b8a	obj/kernel.asm	/^c0107b8a:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107b8d	obj/kernel.asm	/^c0107b8d:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)$/;"	l
c0107b94	obj/kernel.asm	/^c0107b94:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0107b97	obj/kernel.asm	/^c0107b97:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0107b9a	obj/kernel.asm	/^c0107b9a:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0107b9d	obj/kernel.asm	/^c0107b9d:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107ba0	obj/kernel.asm	/^c0107ba0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107ba3	obj/kernel.asm	/^c0107ba3:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107ba6	obj/kernel.asm	/^c0107ba6:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c0107ba9	obj/kernel.asm	/^c0107ba9:	89 c2                	mov    %eax,%edx$/;"	l
c0107bab	obj/kernel.asm	/^c0107bab:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107bae	obj/kernel.asm	/^c0107bae:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107bb1	obj/kernel.asm	/^c0107bb1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107bb4	obj/kernel.asm	/^c0107bb4:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0107bb7	obj/kernel.asm	/^c0107bb7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107bba	obj/kernel.asm	/^c0107bba:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0107bbd	obj/kernel.asm	/^c0107bbd:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
c0107bc0	obj/kernel.asm	/^c0107bc0:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0107bc3	obj/kernel.asm	/^c0107bc3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107bc6	obj/kernel.asm	/^c0107bc6:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c0107bc9	obj/kernel.asm	/^c0107bc9:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
c0107bcc	obj/kernel.asm	/^c0107bcc:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0107bcf	obj/kernel.asm	/^c0107bcf:	89 55 b8             	mov    %edx,-0x48(%ebp)$/;"	l
c0107bd2	obj/kernel.asm	/^c0107bd2:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0107bd5	obj/kernel.asm	/^c0107bd5:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0107bd8	obj/kernel.asm	/^c0107bd8:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c0107bdb	obj/kernel.asm	/^c0107bdb:	89 10                	mov    %edx,(%eax)$/;"	l
c0107bdd	obj/kernel.asm	/^c0107bdd:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0107be0	obj/kernel.asm	/^c0107be0:	8b 10                	mov    (%eax),%edx$/;"	l
c0107be2	obj/kernel.asm	/^c0107be2:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0107be5	obj/kernel.asm	/^c0107be5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107be8	obj/kernel.asm	/^c0107be8:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0107beb	obj/kernel.asm	/^c0107beb:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0107bee	obj/kernel.asm	/^c0107bee:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107bf1	obj/kernel.asm	/^c0107bf1:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0107bf4	obj/kernel.asm	/^c0107bf4:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
c0107bf7	obj/kernel.asm	/^c0107bf7:	89 10                	mov    %edx,(%eax)$/;"	l
c0107bf9	obj/kernel.asm	/^c0107bf9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107bfc	obj/kernel.asm	/^c0107bfc:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107bff	obj/kernel.asm	/^c0107bff:	eb 14                	jmp    c0107c15 <default_alloc_pages+0x165>$/;"	l
c0107c01	obj/kernel.asm	/^c0107c01:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107c04	obj/kernel.asm	/^c0107c04:	6a 00                	push   $0x0$/;"	l
c0107c06	obj/kernel.asm	/^c0107c06:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0107c09	obj/kernel.asm	/^c0107c09:	e8 44 fd ff ff       	call   c0107952 <set_page_ref>$/;"	l
c0107c0e	obj/kernel.asm	/^c0107c0e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107c11	obj/kernel.asm	/^c0107c11:	83 45 ec 20          	addl   $0x20,-0x14(%ebp)$/;"	l
c0107c15	obj/kernel.asm	/^c0107c15:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107c18	obj/kernel.asm	/^c0107c18:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107c1b	obj/kernel.asm	/^c0107c1b:	89 c2                	mov    %eax,%edx$/;"	l
c0107c1d	obj/kernel.asm	/^c0107c1d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107c20	obj/kernel.asm	/^c0107c20:	01 d0                	add    %edx,%eax$/;"	l
c0107c22	obj/kernel.asm	/^c0107c22:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0107c25	obj/kernel.asm	/^c0107c25:	75 da                	jne    c0107c01 <default_alloc_pages+0x151>$/;"	l
c0107c27	obj/kernel.asm	/^c0107c27:	a1 74 46 1c c0       	mov    0xc01c4674,%eax$/;"	l
c0107c2c	obj/kernel.asm	/^c0107c2c:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c0107c2f	obj/kernel.asm	/^c0107c2f:	a3 74 46 1c c0       	mov    %eax,0xc01c4674$/;"	l
c0107c34	obj/kernel.asm	/^c0107c34:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107c37	obj/kernel.asm	/^c0107c37:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107c3a	obj/kernel.asm	/^c0107c3a:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%ebp)$/;"	l
c0107c41	obj/kernel.asm	/^c0107c41:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0107c44	obj/kernel.asm	/^c0107c44:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c0107c47	obj/kernel.asm	/^c0107c47:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c0107c4a	obj/kernel.asm	/^c0107c4a:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0107c4d	obj/kernel.asm	/^c0107c4d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107c50	obj/kernel.asm	/^c0107c50:	c9                   	leave  $/;"	l
c0107c51	obj/kernel.asm	/^c0107c51:	c3                   	ret    $/;"	l
c0107c52	obj/kernel.asm	/^c0107c52 <default_free_pages>:$/;"	l
c0107c52	obj/kernel.asm	/^c0107c52:	55                   	push   %ebp$/;"	l
c0107c53	obj/kernel.asm	/^c0107c53:	89 e5                	mov    %esp,%ebp$/;"	l
c0107c55	obj/kernel.asm	/^c0107c55:	81 ec 88 00 00 00    	sub    $0x88,%esp$/;"	l
c0107c5b	obj/kernel.asm	/^c0107c5b:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0107c5f	obj/kernel.asm	/^c0107c5f:	75 19                	jne    c0107c7a <default_free_pages+0x28>$/;"	l
c0107c61	obj/kernel.asm	/^c0107c61:	68 8c e7 10 c0       	push   $0xc010e78c$/;"	l
c0107c66	obj/kernel.asm	/^c0107c66:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0107c6b	obj/kernel.asm	/^c0107c6b:	68 8a 00 00 00       	push   $0x8a$/;"	l
c0107c70	obj/kernel.asm	/^c0107c70:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c0107c75	obj/kernel.asm	/^c0107c75:	e8 65 87 ff ff       	call   c01003df <__panic>$/;"	l
c0107c7a	obj/kernel.asm	/^c0107c7a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107c7d	obj/kernel.asm	/^c0107c7d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107c80	obj/kernel.asm	/^c0107c80:	e9 8f 00 00 00       	jmp    c0107d14 <default_free_pages+0xc2>$/;"	l
c0107c85	obj/kernel.asm	/^c0107c85:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107c88	obj/kernel.asm	/^c0107c88:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107c8b	obj/kernel.asm	/^c0107c8b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0107c92	obj/kernel.asm	/^c0107c92:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107c95	obj/kernel.asm	/^c0107c95:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107c98	obj/kernel.asm	/^c0107c98:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0107c9b	obj/kernel.asm	/^c0107c9b:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0107c9e	obj/kernel.asm	/^c0107c9e:	19 c0                	sbb    %eax,%eax$/;"	l
c0107ca0	obj/kernel.asm	/^c0107ca0:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0107ca3	obj/kernel.asm	/^c0107ca3:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0107ca7	obj/kernel.asm	/^c0107ca7:	0f 95 c0             	setne  %al$/;"	l
c0107caa	obj/kernel.asm	/^c0107caa:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107cad	obj/kernel.asm	/^c0107cad:	85 c0                	test   %eax,%eax$/;"	l
c0107caf	obj/kernel.asm	/^c0107caf:	75 2c                	jne    c0107cdd <default_free_pages+0x8b>$/;"	l
c0107cb1	obj/kernel.asm	/^c0107cb1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107cb4	obj/kernel.asm	/^c0107cb4:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107cb7	obj/kernel.asm	/^c0107cb7:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
c0107cbe	obj/kernel.asm	/^c0107cbe:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0107cc1	obj/kernel.asm	/^c0107cc1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107cc4	obj/kernel.asm	/^c0107cc4:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107cc7	obj/kernel.asm	/^c0107cc7:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0107cca	obj/kernel.asm	/^c0107cca:	19 c0                	sbb    %eax,%eax$/;"	l
c0107ccc	obj/kernel.asm	/^c0107ccc:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0107ccf	obj/kernel.asm	/^c0107ccf:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c0107cd3	obj/kernel.asm	/^c0107cd3:	0f 95 c0             	setne  %al$/;"	l
c0107cd6	obj/kernel.asm	/^c0107cd6:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107cd9	obj/kernel.asm	/^c0107cd9:	85 c0                	test   %eax,%eax$/;"	l
c0107cdb	obj/kernel.asm	/^c0107cdb:	74 19                	je     c0107cf6 <default_free_pages+0xa4>$/;"	l
c0107cdd	obj/kernel.asm	/^c0107cdd:	68 d0 e7 10 c0       	push   $0xc010e7d0$/;"	l
c0107ce2	obj/kernel.asm	/^c0107ce2:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0107ce7	obj/kernel.asm	/^c0107ce7:	68 8d 00 00 00       	push   $0x8d$/;"	l
c0107cec	obj/kernel.asm	/^c0107cec:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c0107cf1	obj/kernel.asm	/^c0107cf1:	e8 e9 86 ff ff       	call   c01003df <__panic>$/;"	l
c0107cf6	obj/kernel.asm	/^c0107cf6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107cf9	obj/kernel.asm	/^c0107cf9:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c0107d00	obj/kernel.asm	/^c0107d00:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107d03	obj/kernel.asm	/^c0107d03:	6a 00                	push   $0x0$/;"	l
c0107d05	obj/kernel.asm	/^c0107d05:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0107d08	obj/kernel.asm	/^c0107d08:	e8 45 fc ff ff       	call   c0107952 <set_page_ref>$/;"	l
c0107d0d	obj/kernel.asm	/^c0107d0d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107d10	obj/kernel.asm	/^c0107d10:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0107d14	obj/kernel.asm	/^c0107d14:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107d17	obj/kernel.asm	/^c0107d17:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107d1a	obj/kernel.asm	/^c0107d1a:	89 c2                	mov    %eax,%edx$/;"	l
c0107d1c	obj/kernel.asm	/^c0107d1c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d1f	obj/kernel.asm	/^c0107d1f:	01 d0                	add    %edx,%eax$/;"	l
c0107d21	obj/kernel.asm	/^c0107d21:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107d24	obj/kernel.asm	/^c0107d24:	0f 85 5b ff ff ff    	jne    c0107c85 <default_free_pages+0x33>$/;"	l
c0107d2a	obj/kernel.asm	/^c0107d2a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d2d	obj/kernel.asm	/^c0107d2d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107d30	obj/kernel.asm	/^c0107d30:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107d33	obj/kernel.asm	/^c0107d33:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d36	obj/kernel.asm	/^c0107d36:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107d39	obj/kernel.asm	/^c0107d39:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)$/;"	l
c0107d40	obj/kernel.asm	/^c0107d40:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0107d43	obj/kernel.asm	/^c0107d43:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0107d46	obj/kernel.asm	/^c0107d46:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0107d49	obj/kernel.asm	/^c0107d49:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107d4c	obj/kernel.asm	/^c0107d4c:	c7 45 c4 6c 46 1c c0 	movl   $0xc01c466c,-0x3c(%ebp)$/;"	l
c0107d53	obj/kernel.asm	/^c0107d53:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0107d56	obj/kernel.asm	/^c0107d56:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107d59	obj/kernel.asm	/^c0107d59:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107d5c	obj/kernel.asm	/^c0107d5c:	c7 45 ec 6c 46 1c c0 	movl   $0xc01c466c,-0x14(%ebp)$/;"	l
c0107d63	obj/kernel.asm	/^c0107d63:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0107d6a	obj/kernel.asm	/^c0107d6a:	e9 3d 01 00 00       	jmp    c0107eac <default_free_pages+0x25a>$/;"	l
c0107d6f	obj/kernel.asm	/^c0107d6f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107d72	obj/kernel.asm	/^c0107d72:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0107d75	obj/kernel.asm	/^c0107d75:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107d78	obj/kernel.asm	/^c0107d78:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107d7b	obj/kernel.asm	/^c0107d7b:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0107d7e	obj/kernel.asm	/^c0107d7e:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0107d81	obj/kernel.asm	/^c0107d81:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107d84	obj/kernel.asm	/^c0107d84:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107d87	obj/kernel.asm	/^c0107d87:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d8a	obj/kernel.asm	/^c0107d8a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107d8d	obj/kernel.asm	/^c0107d8d:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107d90	obj/kernel.asm	/^c0107d90:	89 c2                	mov    %eax,%edx$/;"	l
c0107d92	obj/kernel.asm	/^c0107d92:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d95	obj/kernel.asm	/^c0107d95:	01 d0                	add    %edx,%eax$/;"	l
c0107d97	obj/kernel.asm	/^c0107d97:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107d9a	obj/kernel.asm	/^c0107d9a:	75 5d                	jne    c0107df9 <default_free_pages+0x1a7>$/;"	l
c0107d9c	obj/kernel.asm	/^c0107d9c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d9f	obj/kernel.asm	/^c0107d9f:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107da2	obj/kernel.asm	/^c0107da2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107da5	obj/kernel.asm	/^c0107da5:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107da8	obj/kernel.asm	/^c0107da8:	01 c2                	add    %eax,%edx$/;"	l
c0107daa	obj/kernel.asm	/^c0107daa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107dad	obj/kernel.asm	/^c0107dad:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107db0	obj/kernel.asm	/^c0107db0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107db3	obj/kernel.asm	/^c0107db3:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107db6	obj/kernel.asm	/^c0107db6:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%ebp)$/;"	l
c0107dbd	obj/kernel.asm	/^c0107dbd:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0107dc0	obj/kernel.asm	/^c0107dc0:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0107dc3	obj/kernel.asm	/^c0107dc3:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c0107dc6	obj/kernel.asm	/^c0107dc6:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0107dc9	obj/kernel.asm	/^c0107dc9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107dcc	obj/kernel.asm	/^c0107dcc:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0107dcf	obj/kernel.asm	/^c0107dcf:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0107dd2	obj/kernel.asm	/^c0107dd2:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0107dd5	obj/kernel.asm	/^c0107dd5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107dd8	obj/kernel.asm	/^c0107dd8:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0107ddb	obj/kernel.asm	/^c0107ddb:	8b 12                	mov    (%edx),%edx$/;"	l
c0107ddd	obj/kernel.asm	/^c0107ddd:	89 55 b0             	mov    %edx,-0x50(%ebp)$/;"	l
c0107de0	obj/kernel.asm	/^c0107de0:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0107de3	obj/kernel.asm	/^c0107de3:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0107de6	obj/kernel.asm	/^c0107de6:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
c0107de9	obj/kernel.asm	/^c0107de9:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107dec	obj/kernel.asm	/^c0107dec:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c0107def	obj/kernel.asm	/^c0107def:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c0107df2	obj/kernel.asm	/^c0107df2:	89 10                	mov    %edx,(%eax)$/;"	l
c0107df4	obj/kernel.asm	/^c0107df4:	e9 b3 00 00 00       	jmp    c0107eac <default_free_pages+0x25a>$/;"	l
c0107df9	obj/kernel.asm	/^c0107df9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107dfc	obj/kernel.asm	/^c0107dfc:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107dff	obj/kernel.asm	/^c0107dff:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107e02	obj/kernel.asm	/^c0107e02:	89 c2                	mov    %eax,%edx$/;"	l
c0107e04	obj/kernel.asm	/^c0107e04:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e07	obj/kernel.asm	/^c0107e07:	01 d0                	add    %edx,%eax$/;"	l
c0107e09	obj/kernel.asm	/^c0107e09:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107e0c	obj/kernel.asm	/^c0107e0c:	75 79                	jne    c0107e87 <default_free_pages+0x235>$/;"	l
c0107e0e	obj/kernel.asm	/^c0107e0e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e11	obj/kernel.asm	/^c0107e11:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107e14	obj/kernel.asm	/^c0107e14:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e17	obj/kernel.asm	/^c0107e17:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107e1a	obj/kernel.asm	/^c0107e1a:	01 c2                	add    %eax,%edx$/;"	l
c0107e1c	obj/kernel.asm	/^c0107e1c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e1f	obj/kernel.asm	/^c0107e1f:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107e22	obj/kernel.asm	/^c0107e22:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e25	obj/kernel.asm	/^c0107e25:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107e28	obj/kernel.asm	/^c0107e28:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%ebp)$/;"	l
c0107e2f	obj/kernel.asm	/^c0107e2f:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c0107e32	obj/kernel.asm	/^c0107e32:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0107e35	obj/kernel.asm	/^c0107e35:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c0107e38	obj/kernel.asm	/^c0107e38:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0107e3b	obj/kernel.asm	/^c0107e3b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e3e	obj/kernel.asm	/^c0107e3e:	89 45 08             	mov    %eax,0x8(%ebp)$/;"	l
c0107e41	obj/kernel.asm	/^c0107e41:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e44	obj/kernel.asm	/^c0107e44:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107e47	obj/kernel.asm	/^c0107e47:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%ebp)$/;"	l
c0107e4e	obj/kernel.asm	/^c0107e4e:	89 45 9c             	mov    %eax,-0x64(%ebp)$/;"	l
c0107e51	obj/kernel.asm	/^c0107e51:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c0107e54	obj/kernel.asm	/^c0107e54:	8b 55 a0             	mov    -0x60(%ebp),%edx$/;"	l
c0107e57	obj/kernel.asm	/^c0107e57:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107e5a	obj/kernel.asm	/^c0107e5a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e5d	obj/kernel.asm	/^c0107e5d:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0107e60	obj/kernel.asm	/^c0107e60:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0107e63	obj/kernel.asm	/^c0107e63:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0107e66	obj/kernel.asm	/^c0107e66:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107e69	obj/kernel.asm	/^c0107e69:	8b 55 98             	mov    -0x68(%ebp),%edx$/;"	l
c0107e6c	obj/kernel.asm	/^c0107e6c:	8b 12                	mov    (%edx),%edx$/;"	l
c0107e6e	obj/kernel.asm	/^c0107e6e:	89 55 94             	mov    %edx,-0x6c(%ebp)$/;"	l
c0107e71	obj/kernel.asm	/^c0107e71:	89 45 90             	mov    %eax,-0x70(%ebp)$/;"	l
c0107e74	obj/kernel.asm	/^c0107e74:	8b 45 94             	mov    -0x6c(%ebp),%eax$/;"	l
c0107e77	obj/kernel.asm	/^c0107e77:	8b 55 90             	mov    -0x70(%ebp),%edx$/;"	l
c0107e7a	obj/kernel.asm	/^c0107e7a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107e7d	obj/kernel.asm	/^c0107e7d:	8b 45 90             	mov    -0x70(%ebp),%eax$/;"	l
c0107e80	obj/kernel.asm	/^c0107e80:	8b 55 94             	mov    -0x6c(%ebp),%edx$/;"	l
c0107e83	obj/kernel.asm	/^c0107e83:	89 10                	mov    %edx,(%eax)$/;"	l
c0107e85	obj/kernel.asm	/^c0107e85:	eb 25                	jmp    c0107eac <default_free_pages+0x25a>$/;"	l
c0107e87	obj/kernel.asm	/^c0107e87:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0107e8b	obj/kernel.asm	/^c0107e8b:	75 1f                	jne    c0107eac <default_free_pages+0x25a>$/;"	l
c0107e8d	obj/kernel.asm	/^c0107e8d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e90	obj/kernel.asm	/^c0107e90:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107e93	obj/kernel.asm	/^c0107e93:	76 17                	jbe    c0107eac <default_free_pages+0x25a>$/;"	l
c0107e95	obj/kernel.asm	/^c0107e95:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
c0107e9c	obj/kernel.asm	/^c0107e9c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e9f	obj/kernel.asm	/^c0107e9f:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c0107ea2	obj/kernel.asm	/^c0107ea2:	8b 45 8c             	mov    -0x74(%ebp),%eax$/;"	l
c0107ea5	obj/kernel.asm	/^c0107ea5:	8b 00                	mov    (%eax),%eax$/;"	l
c0107ea7	obj/kernel.asm	/^c0107ea7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107eaa	obj/kernel.asm	/^c0107eaa:	eb 0d                	jmp    c0107eb9 <default_free_pages+0x267>$/;"	l
c0107eac	obj/kernel.asm	/^c0107eac:	81 7d f0 6c 46 1c c0 	cmpl   $0xc01c466c,-0x10(%ebp)$/;"	l
c0107eb3	obj/kernel.asm	/^c0107eb3:	0f 85 b6 fe ff ff    	jne    c0107d6f <default_free_pages+0x11d>$/;"	l
c0107eb9	obj/kernel.asm	/^c0107eb9:	8b 15 74 46 1c c0    	mov    0xc01c4674,%edx$/;"	l
c0107ebf	obj/kernel.asm	/^c0107ebf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107ec2	obj/kernel.asm	/^c0107ec2:	01 d0                	add    %edx,%eax$/;"	l
c0107ec4	obj/kernel.asm	/^c0107ec4:	a3 74 46 1c c0       	mov    %eax,0xc01c4674$/;"	l
c0107ec9	obj/kernel.asm	/^c0107ec9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107ecc	obj/kernel.asm	/^c0107ecc:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0107ecf	obj/kernel.asm	/^c0107ecf:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107ed2	obj/kernel.asm	/^c0107ed2:	89 45 88             	mov    %eax,-0x78(%ebp)$/;"	l
c0107ed5	obj/kernel.asm	/^c0107ed5:	89 55 84             	mov    %edx,-0x7c(%ebp)$/;"	l
c0107ed8	obj/kernel.asm	/^c0107ed8:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
c0107edb	obj/kernel.asm	/^c0107edb:	8b 00                	mov    (%eax),%eax$/;"	l
c0107edd	obj/kernel.asm	/^c0107edd:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c0107ee0	obj/kernel.asm	/^c0107ee0:	89 55 80             	mov    %edx,-0x80(%ebp)$/;"	l
c0107ee3	obj/kernel.asm	/^c0107ee3:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)$/;"	l
c0107ee9	obj/kernel.asm	/^c0107ee9:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
c0107eec	obj/kernel.asm	/^c0107eec:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)$/;"	l
c0107ef2	obj/kernel.asm	/^c0107ef2:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax$/;"	l
c0107ef8	obj/kernel.asm	/^c0107ef8:	8b 55 80             	mov    -0x80(%ebp),%edx$/;"	l
c0107efb	obj/kernel.asm	/^c0107efb:	89 10                	mov    %edx,(%eax)$/;"	l
c0107efd	obj/kernel.asm	/^c0107efd:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax$/;"	l
c0107f03	obj/kernel.asm	/^c0107f03:	8b 10                	mov    (%eax),%edx$/;"	l
c0107f05	obj/kernel.asm	/^c0107f05:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax$/;"	l
c0107f0b	obj/kernel.asm	/^c0107f0b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107f0e	obj/kernel.asm	/^c0107f0e:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c0107f11	obj/kernel.asm	/^c0107f11:	8b 95 78 ff ff ff    	mov    -0x88(%ebp),%edx$/;"	l
c0107f17	obj/kernel.asm	/^c0107f17:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107f1a	obj/kernel.asm	/^c0107f1a:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c0107f1d	obj/kernel.asm	/^c0107f1d:	8b 95 7c ff ff ff    	mov    -0x84(%ebp),%edx$/;"	l
c0107f23	obj/kernel.asm	/^c0107f23:	89 10                	mov    %edx,(%eax)$/;"	l
c0107f25	obj/kernel.asm	/^c0107f25:	c9                   	leave  $/;"	l
c0107f26	obj/kernel.asm	/^c0107f26:	c3                   	ret    $/;"	l
c0107f27	obj/kernel.asm	/^c0107f27 <print_free_link>:$/;"	l
c0107f27	obj/kernel.asm	/^c0107f27:	55                   	push   %ebp$/;"	l
c0107f28	obj/kernel.asm	/^c0107f28:	89 e5                	mov    %esp,%ebp$/;"	l
c0107f2a	obj/kernel.asm	/^c0107f2a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107f2d	obj/kernel.asm	/^c0107f2d:	c7 45 f4 6c 46 1c c0 	movl   $0xc01c466c,-0xc(%ebp)$/;"	l
c0107f34	obj/kernel.asm	/^c0107f34:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107f37	obj/kernel.asm	/^c0107f37:	68 f8 e7 10 c0       	push   $0xc010e7f8$/;"	l
c0107f3c	obj/kernel.asm	/^c0107f3c:	e8 39 83 ff ff       	call   c010027a <cprintf>$/;"	l
c0107f41	obj/kernel.asm	/^c0107f41:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107f44	obj/kernel.asm	/^c0107f44:	eb 31                	jmp    c0107f77 <print_free_link+0x50>$/;"	l
c0107f46	obj/kernel.asm	/^c0107f46:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f49	obj/kernel.asm	/^c0107f49:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0107f4c	obj/kernel.asm	/^c0107f4c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107f4f	obj/kernel.asm	/^c0107f4f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f52	obj/kernel.asm	/^c0107f52:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107f55	obj/kernel.asm	/^c0107f55:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107f58	obj/kernel.asm	/^c0107f58:	89 c2                	mov    %eax,%edx$/;"	l
c0107f5a	obj/kernel.asm	/^c0107f5a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f5d	obj/kernel.asm	/^c0107f5d:	01 c2                	add    %eax,%edx$/;"	l
c0107f5f	obj/kernel.asm	/^c0107f5f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f62	obj/kernel.asm	/^c0107f62:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107f65	obj/kernel.asm	/^c0107f65:	52                   	push   %edx$/;"	l
c0107f66	obj/kernel.asm	/^c0107f66:	50                   	push   %eax$/;"	l
c0107f67	obj/kernel.asm	/^c0107f67:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0107f6a	obj/kernel.asm	/^c0107f6a:	68 34 e8 10 c0       	push   $0xc010e834$/;"	l
c0107f6f	obj/kernel.asm	/^c0107f6f:	e8 06 83 ff ff       	call   c010027a <cprintf>$/;"	l
c0107f74	obj/kernel.asm	/^c0107f74:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107f77	obj/kernel.asm	/^c0107f77:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f7a	obj/kernel.asm	/^c0107f7a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107f7d	obj/kernel.asm	/^c0107f7d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107f80	obj/kernel.asm	/^c0107f80:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107f83	obj/kernel.asm	/^c0107f83:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107f86	obj/kernel.asm	/^c0107f86:	81 7d f4 6c 46 1c c0 	cmpl   $0xc01c466c,-0xc(%ebp)$/;"	l
c0107f8d	obj/kernel.asm	/^c0107f8d:	75 b7                	jne    c0107f46 <print_free_link+0x1f>$/;"	l
c0107f8f	obj/kernel.asm	/^c0107f8f:	c9                   	leave  $/;"	l
c0107f90	obj/kernel.asm	/^c0107f90:	c3                   	ret    $/;"	l
c0107f91	obj/kernel.asm	/^c0107f91 <default_nr_free_pages>:$/;"	l
c0107f91	obj/kernel.asm	/^c0107f91:	55                   	push   %ebp$/;"	l
c0107f92	obj/kernel.asm	/^c0107f92:	89 e5                	mov    %esp,%ebp$/;"	l
c0107f94	obj/kernel.asm	/^c0107f94:	a1 74 46 1c c0       	mov    0xc01c4674,%eax$/;"	l
c0107f99	obj/kernel.asm	/^c0107f99:	5d                   	pop    %ebp$/;"	l
c0107f9a	obj/kernel.asm	/^c0107f9a:	c3                   	ret    $/;"	l
c0107f9b	obj/kernel.asm	/^c0107f9b <basic_check>:$/;"	l
c0107f9b	obj/kernel.asm	/^c0107f9b:	55                   	push   %ebp$/;"	l
c0107f9c	obj/kernel.asm	/^c0107f9c:	89 e5                	mov    %esp,%ebp$/;"	l
c0107f9e	obj/kernel.asm	/^c0107f9e:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0107fa1	obj/kernel.asm	/^c0107fa1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0107fa8	obj/kernel.asm	/^c0107fa8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107fab	obj/kernel.asm	/^c0107fab:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107fae	obj/kernel.asm	/^c0107fae:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107fb1	obj/kernel.asm	/^c0107fb1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107fb4	obj/kernel.asm	/^c0107fb4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107fb7	obj/kernel.asm	/^c0107fb7:	6a 01                	push   $0x1$/;"	l
c0107fb9	obj/kernel.asm	/^c0107fb9:	e8 a0 b9 ff ff       	call   c010395e <alloc_pages>$/;"	l
c0107fbe	obj/kernel.asm	/^c0107fbe:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107fc1	obj/kernel.asm	/^c0107fc1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107fc4	obj/kernel.asm	/^c0107fc4:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0107fc8	obj/kernel.asm	/^c0107fc8:	75 19                	jne    c0107fe3 <basic_check+0x48>$/;"	l
c0107fca	obj/kernel.asm	/^c0107fca:	68 55 e8 10 c0       	push   $0xc010e855$/;"	l
c0107fcf	obj/kernel.asm	/^c0107fcf:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0107fd4	obj/kernel.asm	/^c0107fd4:	68 ce 00 00 00       	push   $0xce$/;"	l
c0107fd9	obj/kernel.asm	/^c0107fd9:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c0107fde	obj/kernel.asm	/^c0107fde:	e8 fc 83 ff ff       	call   c01003df <__panic>$/;"	l
c0107fe3	obj/kernel.asm	/^c0107fe3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107fe6	obj/kernel.asm	/^c0107fe6:	6a 01                	push   $0x1$/;"	l
c0107fe8	obj/kernel.asm	/^c0107fe8:	e8 71 b9 ff ff       	call   c010395e <alloc_pages>$/;"	l
c0107fed	obj/kernel.asm	/^c0107fed:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107ff0	obj/kernel.asm	/^c0107ff0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107ff3	obj/kernel.asm	/^c0107ff3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0107ff7	obj/kernel.asm	/^c0107ff7:	75 19                	jne    c0108012 <basic_check+0x77>$/;"	l
c0107ff9	obj/kernel.asm	/^c0107ff9:	68 71 e8 10 c0       	push   $0xc010e871$/;"	l
c0107ffe	obj/kernel.asm	/^c0107ffe:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0108003	obj/kernel.asm	/^c0108003:	68 cf 00 00 00       	push   $0xcf$/;"	l
c0108008	obj/kernel.asm	/^c0108008:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c010800d	obj/kernel.asm	/^c010800d:	e8 cd 83 ff ff       	call   c01003df <__panic>$/;"	l
c0108012	obj/kernel.asm	/^c0108012:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108015	obj/kernel.asm	/^c0108015:	6a 01                	push   $0x1$/;"	l
c0108017	obj/kernel.asm	/^c0108017:	e8 42 b9 ff ff       	call   c010395e <alloc_pages>$/;"	l
c010801c	obj/kernel.asm	/^c010801c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010801f	obj/kernel.asm	/^c010801f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108022	obj/kernel.asm	/^c0108022:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108026	obj/kernel.asm	/^c0108026:	75 19                	jne    c0108041 <basic_check+0xa6>$/;"	l
c0108028	obj/kernel.asm	/^c0108028:	68 8d e8 10 c0       	push   $0xc010e88d$/;"	l
c010802d	obj/kernel.asm	/^c010802d:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0108032	obj/kernel.asm	/^c0108032:	68 d0 00 00 00       	push   $0xd0$/;"	l
c0108037	obj/kernel.asm	/^c0108037:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c010803c	obj/kernel.asm	/^c010803c:	e8 9e 83 ff ff       	call   c01003df <__panic>$/;"	l
c0108041	obj/kernel.asm	/^c0108041:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108044	obj/kernel.asm	/^c0108044:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0108047	obj/kernel.asm	/^c0108047:	74 10                	je     c0108059 <basic_check+0xbe>$/;"	l
c0108049	obj/kernel.asm	/^c0108049:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010804c	obj/kernel.asm	/^c010804c:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010804f	obj/kernel.asm	/^c010804f:	74 08                	je     c0108059 <basic_check+0xbe>$/;"	l
c0108051	obj/kernel.asm	/^c0108051:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108054	obj/kernel.asm	/^c0108054:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0108057	obj/kernel.asm	/^c0108057:	75 19                	jne    c0108072 <basic_check+0xd7>$/;"	l
c0108059	obj/kernel.asm	/^c0108059:	68 ac e8 10 c0       	push   $0xc010e8ac$/;"	l
c010805e	obj/kernel.asm	/^c010805e:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0108063	obj/kernel.asm	/^c0108063:	68 d2 00 00 00       	push   $0xd2$/;"	l
c0108068	obj/kernel.asm	/^c0108068:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c010806d	obj/kernel.asm	/^c010806d:	e8 6d 83 ff ff       	call   c01003df <__panic>$/;"	l
c0108072	obj/kernel.asm	/^c0108072:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108075	obj/kernel.asm	/^c0108075:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0108078	obj/kernel.asm	/^c0108078:	e8 cb f8 ff ff       	call   c0107948 <page_ref>$/;"	l
c010807d	obj/kernel.asm	/^c010807d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108080	obj/kernel.asm	/^c0108080:	85 c0                	test   %eax,%eax$/;"	l
c0108082	obj/kernel.asm	/^c0108082:	75 24                	jne    c01080a8 <basic_check+0x10d>$/;"	l
c0108084	obj/kernel.asm	/^c0108084:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108087	obj/kernel.asm	/^c0108087:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010808a	obj/kernel.asm	/^c010808a:	e8 b9 f8 ff ff       	call   c0107948 <page_ref>$/;"	l
c010808f	obj/kernel.asm	/^c010808f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108092	obj/kernel.asm	/^c0108092:	85 c0                	test   %eax,%eax$/;"	l
c0108094	obj/kernel.asm	/^c0108094:	75 12                	jne    c01080a8 <basic_check+0x10d>$/;"	l
c0108096	obj/kernel.asm	/^c0108096:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108099	obj/kernel.asm	/^c0108099:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010809c	obj/kernel.asm	/^c010809c:	e8 a7 f8 ff ff       	call   c0107948 <page_ref>$/;"	l
c01080a1	obj/kernel.asm	/^c01080a1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01080a4	obj/kernel.asm	/^c01080a4:	85 c0                	test   %eax,%eax$/;"	l
c01080a6	obj/kernel.asm	/^c01080a6:	74 19                	je     c01080c1 <basic_check+0x126>$/;"	l
c01080a8	obj/kernel.asm	/^c01080a8:	68 d0 e8 10 c0       	push   $0xc010e8d0$/;"	l
c01080ad	obj/kernel.asm	/^c01080ad:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c01080b2	obj/kernel.asm	/^c01080b2:	68 d3 00 00 00       	push   $0xd3$/;"	l
c01080b7	obj/kernel.asm	/^c01080b7:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01080bc	obj/kernel.asm	/^c01080bc:	e8 1e 83 ff ff       	call   c01003df <__panic>$/;"	l
c01080c1	obj/kernel.asm	/^c01080c1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01080c4	obj/kernel.asm	/^c01080c4:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01080c7	obj/kernel.asm	/^c01080c7:	e8 69 f8 ff ff       	call   c0107935 <page2pa>$/;"	l
c01080cc	obj/kernel.asm	/^c01080cc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01080cf	obj/kernel.asm	/^c01080cf:	89 c2                	mov    %eax,%edx$/;"	l
c01080d1	obj/kernel.asm	/^c01080d1:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c01080d6	obj/kernel.asm	/^c01080d6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01080d9	obj/kernel.asm	/^c01080d9:	39 c2                	cmp    %eax,%edx$/;"	l
c01080db	obj/kernel.asm	/^c01080db:	72 19                	jb     c01080f6 <basic_check+0x15b>$/;"	l
c01080dd	obj/kernel.asm	/^c01080dd:	68 0c e9 10 c0       	push   $0xc010e90c$/;"	l
c01080e2	obj/kernel.asm	/^c01080e2:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c01080e7	obj/kernel.asm	/^c01080e7:	68 d5 00 00 00       	push   $0xd5$/;"	l
c01080ec	obj/kernel.asm	/^c01080ec:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01080f1	obj/kernel.asm	/^c01080f1:	e8 e9 82 ff ff       	call   c01003df <__panic>$/;"	l
c01080f6	obj/kernel.asm	/^c01080f6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01080f9	obj/kernel.asm	/^c01080f9:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01080fc	obj/kernel.asm	/^c01080fc:	e8 34 f8 ff ff       	call   c0107935 <page2pa>$/;"	l
c0108101	obj/kernel.asm	/^c0108101:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108104	obj/kernel.asm	/^c0108104:	89 c2                	mov    %eax,%edx$/;"	l
c0108106	obj/kernel.asm	/^c0108106:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c010810b	obj/kernel.asm	/^c010810b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010810e	obj/kernel.asm	/^c010810e:	39 c2                	cmp    %eax,%edx$/;"	l
c0108110	obj/kernel.asm	/^c0108110:	72 19                	jb     c010812b <basic_check+0x190>$/;"	l
c0108112	obj/kernel.asm	/^c0108112:	68 29 e9 10 c0       	push   $0xc010e929$/;"	l
c0108117	obj/kernel.asm	/^c0108117:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c010811c	obj/kernel.asm	/^c010811c:	68 d6 00 00 00       	push   $0xd6$/;"	l
c0108121	obj/kernel.asm	/^c0108121:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c0108126	obj/kernel.asm	/^c0108126:	e8 b4 82 ff ff       	call   c01003df <__panic>$/;"	l
c010812b	obj/kernel.asm	/^c010812b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010812e	obj/kernel.asm	/^c010812e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108131	obj/kernel.asm	/^c0108131:	e8 ff f7 ff ff       	call   c0107935 <page2pa>$/;"	l
c0108136	obj/kernel.asm	/^c0108136:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108139	obj/kernel.asm	/^c0108139:	89 c2                	mov    %eax,%edx$/;"	l
c010813b	obj/kernel.asm	/^c010813b:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c0108140	obj/kernel.asm	/^c0108140:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0108143	obj/kernel.asm	/^c0108143:	39 c2                	cmp    %eax,%edx$/;"	l
c0108145	obj/kernel.asm	/^c0108145:	72 19                	jb     c0108160 <basic_check+0x1c5>$/;"	l
c0108147	obj/kernel.asm	/^c0108147:	68 46 e9 10 c0       	push   $0xc010e946$/;"	l
c010814c	obj/kernel.asm	/^c010814c:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0108151	obj/kernel.asm	/^c0108151:	68 d7 00 00 00       	push   $0xd7$/;"	l
c0108156	obj/kernel.asm	/^c0108156:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c010815b	obj/kernel.asm	/^c010815b:	e8 7f 82 ff ff       	call   c01003df <__panic>$/;"	l
c0108160	obj/kernel.asm	/^c0108160:	a1 6c 46 1c c0       	mov    0xc01c466c,%eax$/;"	l
c0108165	obj/kernel.asm	/^c0108165:	8b 15 70 46 1c c0    	mov    0xc01c4670,%edx$/;"	l
c010816b	obj/kernel.asm	/^c010816b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010816e	obj/kernel.asm	/^c010816e:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0108171	obj/kernel.asm	/^c0108171:	c7 45 e0 6c 46 1c c0 	movl   $0xc01c466c,-0x20(%ebp)$/;"	l
c0108178	obj/kernel.asm	/^c0108178:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010817b	obj/kernel.asm	/^c010817b:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010817e	obj/kernel.asm	/^c010817e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108181	obj/kernel.asm	/^c0108181:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108184	obj/kernel.asm	/^c0108184:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108187	obj/kernel.asm	/^c0108187:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010818a	obj/kernel.asm	/^c010818a:	89 10                	mov    %edx,(%eax)$/;"	l
c010818c	obj/kernel.asm	/^c010818c:	c7 45 dc 6c 46 1c c0 	movl   $0xc01c466c,-0x24(%ebp)$/;"	l
c0108193	obj/kernel.asm	/^c0108193:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108196	obj/kernel.asm	/^c0108196:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108199	obj/kernel.asm	/^c0108199:	39 45 dc             	cmp    %eax,-0x24(%ebp)$/;"	l
c010819c	obj/kernel.asm	/^c010819c:	0f 94 c0             	sete   %al$/;"	l
c010819f	obj/kernel.asm	/^c010819f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01081a2	obj/kernel.asm	/^c01081a2:	85 c0                	test   %eax,%eax$/;"	l
c01081a4	obj/kernel.asm	/^c01081a4:	75 19                	jne    c01081bf <basic_check+0x224>$/;"	l
c01081a6	obj/kernel.asm	/^c01081a6:	68 63 e9 10 c0       	push   $0xc010e963$/;"	l
c01081ab	obj/kernel.asm	/^c01081ab:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c01081b0	obj/kernel.asm	/^c01081b0:	68 db 00 00 00       	push   $0xdb$/;"	l
c01081b5	obj/kernel.asm	/^c01081b5:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01081ba	obj/kernel.asm	/^c01081ba:	e8 20 82 ff ff       	call   c01003df <__panic>$/;"	l
c01081bf	obj/kernel.asm	/^c01081bf:	a1 74 46 1c c0       	mov    0xc01c4674,%eax$/;"	l
c01081c4	obj/kernel.asm	/^c01081c4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01081c7	obj/kernel.asm	/^c01081c7:	c7 05 74 46 1c c0 00 	movl   $0x0,0xc01c4674$/;"	l
c01081ce	obj/kernel.asm	/^c01081ce:	00 00 00 $/;"	l
c01081d1	obj/kernel.asm	/^c01081d1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01081d4	obj/kernel.asm	/^c01081d4:	6a 01                	push   $0x1$/;"	l
c01081d6	obj/kernel.asm	/^c01081d6:	e8 83 b7 ff ff       	call   c010395e <alloc_pages>$/;"	l
c01081db	obj/kernel.asm	/^c01081db:	83 c4 10             	add    $0x10,%esp$/;"	l
c01081de	obj/kernel.asm	/^c01081de:	85 c0                	test   %eax,%eax$/;"	l
c01081e0	obj/kernel.asm	/^c01081e0:	74 19                	je     c01081fb <basic_check+0x260>$/;"	l
c01081e2	obj/kernel.asm	/^c01081e2:	68 7a e9 10 c0       	push   $0xc010e97a$/;"	l
c01081e7	obj/kernel.asm	/^c01081e7:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c01081ec	obj/kernel.asm	/^c01081ec:	68 e0 00 00 00       	push   $0xe0$/;"	l
c01081f1	obj/kernel.asm	/^c01081f1:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01081f6	obj/kernel.asm	/^c01081f6:	e8 e4 81 ff ff       	call   c01003df <__panic>$/;"	l
c01081fb	obj/kernel.asm	/^c01081fb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01081fe	obj/kernel.asm	/^c01081fe:	6a 01                	push   $0x1$/;"	l
c0108200	obj/kernel.asm	/^c0108200:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0108203	obj/kernel.asm	/^c0108203:	e8 c2 b7 ff ff       	call   c01039ca <free_pages>$/;"	l
c0108208	obj/kernel.asm	/^c0108208:	83 c4 10             	add    $0x10,%esp$/;"	l
c010820b	obj/kernel.asm	/^c010820b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010820e	obj/kernel.asm	/^c010820e:	6a 01                	push   $0x1$/;"	l
c0108210	obj/kernel.asm	/^c0108210:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108213	obj/kernel.asm	/^c0108213:	e8 b2 b7 ff ff       	call   c01039ca <free_pages>$/;"	l
c0108218	obj/kernel.asm	/^c0108218:	83 c4 10             	add    $0x10,%esp$/;"	l
c010821b	obj/kernel.asm	/^c010821b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010821e	obj/kernel.asm	/^c010821e:	6a 01                	push   $0x1$/;"	l
c0108220	obj/kernel.asm	/^c0108220:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108223	obj/kernel.asm	/^c0108223:	e8 a2 b7 ff ff       	call   c01039ca <free_pages>$/;"	l
c0108228	obj/kernel.asm	/^c0108228:	83 c4 10             	add    $0x10,%esp$/;"	l
c010822b	obj/kernel.asm	/^c010822b:	a1 74 46 1c c0       	mov    0xc01c4674,%eax$/;"	l
c0108230	obj/kernel.asm	/^c0108230:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0108233	obj/kernel.asm	/^c0108233:	74 19                	je     c010824e <basic_check+0x2b3>$/;"	l
c0108235	obj/kernel.asm	/^c0108235:	68 8f e9 10 c0       	push   $0xc010e98f$/;"	l
c010823a	obj/kernel.asm	/^c010823a:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c010823f	obj/kernel.asm	/^c010823f:	68 e5 00 00 00       	push   $0xe5$/;"	l
c0108244	obj/kernel.asm	/^c0108244:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c0108249	obj/kernel.asm	/^c0108249:	e8 91 81 ff ff       	call   c01003df <__panic>$/;"	l
c010824e	obj/kernel.asm	/^c010824e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108251	obj/kernel.asm	/^c0108251:	6a 01                	push   $0x1$/;"	l
c0108253	obj/kernel.asm	/^c0108253:	e8 06 b7 ff ff       	call   c010395e <alloc_pages>$/;"	l
c0108258	obj/kernel.asm	/^c0108258:	83 c4 10             	add    $0x10,%esp$/;"	l
c010825b	obj/kernel.asm	/^c010825b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010825e	obj/kernel.asm	/^c010825e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0108262	obj/kernel.asm	/^c0108262:	75 19                	jne    c010827d <basic_check+0x2e2>$/;"	l
c0108264	obj/kernel.asm	/^c0108264:	68 55 e8 10 c0       	push   $0xc010e855$/;"	l
c0108269	obj/kernel.asm	/^c0108269:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c010826e	obj/kernel.asm	/^c010826e:	68 e7 00 00 00       	push   $0xe7$/;"	l
c0108273	obj/kernel.asm	/^c0108273:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c0108278	obj/kernel.asm	/^c0108278:	e8 62 81 ff ff       	call   c01003df <__panic>$/;"	l
c010827d	obj/kernel.asm	/^c010827d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108280	obj/kernel.asm	/^c0108280:	6a 01                	push   $0x1$/;"	l
c0108282	obj/kernel.asm	/^c0108282:	e8 d7 b6 ff ff       	call   c010395e <alloc_pages>$/;"	l
c0108287	obj/kernel.asm	/^c0108287:	83 c4 10             	add    $0x10,%esp$/;"	l
c010828a	obj/kernel.asm	/^c010828a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010828d	obj/kernel.asm	/^c010828d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0108291	obj/kernel.asm	/^c0108291:	75 19                	jne    c01082ac <basic_check+0x311>$/;"	l
c0108293	obj/kernel.asm	/^c0108293:	68 71 e8 10 c0       	push   $0xc010e871$/;"	l
c0108298	obj/kernel.asm	/^c0108298:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c010829d	obj/kernel.asm	/^c010829d:	68 e8 00 00 00       	push   $0xe8$/;"	l
c01082a2	obj/kernel.asm	/^c01082a2:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01082a7	obj/kernel.asm	/^c01082a7:	e8 33 81 ff ff       	call   c01003df <__panic>$/;"	l
c01082ac	obj/kernel.asm	/^c01082ac:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01082af	obj/kernel.asm	/^c01082af:	6a 01                	push   $0x1$/;"	l
c01082b1	obj/kernel.asm	/^c01082b1:	e8 a8 b6 ff ff       	call   c010395e <alloc_pages>$/;"	l
c01082b6	obj/kernel.asm	/^c01082b6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01082b9	obj/kernel.asm	/^c01082b9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01082bc	obj/kernel.asm	/^c01082bc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01082c0	obj/kernel.asm	/^c01082c0:	75 19                	jne    c01082db <basic_check+0x340>$/;"	l
c01082c2	obj/kernel.asm	/^c01082c2:	68 8d e8 10 c0       	push   $0xc010e88d$/;"	l
c01082c7	obj/kernel.asm	/^c01082c7:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c01082cc	obj/kernel.asm	/^c01082cc:	68 e9 00 00 00       	push   $0xe9$/;"	l
c01082d1	obj/kernel.asm	/^c01082d1:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01082d6	obj/kernel.asm	/^c01082d6:	e8 04 81 ff ff       	call   c01003df <__panic>$/;"	l
c01082db	obj/kernel.asm	/^c01082db:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01082de	obj/kernel.asm	/^c01082de:	6a 01                	push   $0x1$/;"	l
c01082e0	obj/kernel.asm	/^c01082e0:	e8 79 b6 ff ff       	call   c010395e <alloc_pages>$/;"	l
c01082e5	obj/kernel.asm	/^c01082e5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01082e8	obj/kernel.asm	/^c01082e8:	85 c0                	test   %eax,%eax$/;"	l
c01082ea	obj/kernel.asm	/^c01082ea:	74 19                	je     c0108305 <basic_check+0x36a>$/;"	l
c01082ec	obj/kernel.asm	/^c01082ec:	68 7a e9 10 c0       	push   $0xc010e97a$/;"	l
c01082f1	obj/kernel.asm	/^c01082f1:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c01082f6	obj/kernel.asm	/^c01082f6:	68 eb 00 00 00       	push   $0xeb$/;"	l
c01082fb	obj/kernel.asm	/^c01082fb:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c0108300	obj/kernel.asm	/^c0108300:	e8 da 80 ff ff       	call   c01003df <__panic>$/;"	l
c0108305	obj/kernel.asm	/^c0108305:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108308	obj/kernel.asm	/^c0108308:	6a 01                	push   $0x1$/;"	l
c010830a	obj/kernel.asm	/^c010830a:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010830d	obj/kernel.asm	/^c010830d:	e8 b8 b6 ff ff       	call   c01039ca <free_pages>$/;"	l
c0108312	obj/kernel.asm	/^c0108312:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108315	obj/kernel.asm	/^c0108315:	c7 45 d8 6c 46 1c c0 	movl   $0xc01c466c,-0x28(%ebp)$/;"	l
c010831c	obj/kernel.asm	/^c010831c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010831f	obj/kernel.asm	/^c010831f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108322	obj/kernel.asm	/^c0108322:	39 45 d8             	cmp    %eax,-0x28(%ebp)$/;"	l
c0108325	obj/kernel.asm	/^c0108325:	0f 94 c0             	sete   %al$/;"	l
c0108328	obj/kernel.asm	/^c0108328:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010832b	obj/kernel.asm	/^c010832b:	85 c0                	test   %eax,%eax$/;"	l
c010832d	obj/kernel.asm	/^c010832d:	74 19                	je     c0108348 <basic_check+0x3ad>$/;"	l
c010832f	obj/kernel.asm	/^c010832f:	68 9c e9 10 c0       	push   $0xc010e99c$/;"	l
c0108334	obj/kernel.asm	/^c0108334:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0108339	obj/kernel.asm	/^c0108339:	68 ee 00 00 00       	push   $0xee$/;"	l
c010833e	obj/kernel.asm	/^c010833e:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c0108343	obj/kernel.asm	/^c0108343:	e8 97 80 ff ff       	call   c01003df <__panic>$/;"	l
c0108348	obj/kernel.asm	/^c0108348:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010834b	obj/kernel.asm	/^c010834b:	6a 01                	push   $0x1$/;"	l
c010834d	obj/kernel.asm	/^c010834d:	e8 0c b6 ff ff       	call   c010395e <alloc_pages>$/;"	l
c0108352	obj/kernel.asm	/^c0108352:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108355	obj/kernel.asm	/^c0108355:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108358	obj/kernel.asm	/^c0108358:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010835b	obj/kernel.asm	/^c010835b:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010835e	obj/kernel.asm	/^c010835e:	74 19                	je     c0108379 <basic_check+0x3de>$/;"	l
c0108360	obj/kernel.asm	/^c0108360:	68 b4 e9 10 c0       	push   $0xc010e9b4$/;"	l
c0108365	obj/kernel.asm	/^c0108365:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c010836a	obj/kernel.asm	/^c010836a:	68 f1 00 00 00       	push   $0xf1$/;"	l
c010836f	obj/kernel.asm	/^c010836f:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c0108374	obj/kernel.asm	/^c0108374:	e8 66 80 ff ff       	call   c01003df <__panic>$/;"	l
c0108379	obj/kernel.asm	/^c0108379:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010837c	obj/kernel.asm	/^c010837c:	6a 01                	push   $0x1$/;"	l
c010837e	obj/kernel.asm	/^c010837e:	e8 db b5 ff ff       	call   c010395e <alloc_pages>$/;"	l
c0108383	obj/kernel.asm	/^c0108383:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108386	obj/kernel.asm	/^c0108386:	85 c0                	test   %eax,%eax$/;"	l
c0108388	obj/kernel.asm	/^c0108388:	74 19                	je     c01083a3 <basic_check+0x408>$/;"	l
c010838a	obj/kernel.asm	/^c010838a:	68 7a e9 10 c0       	push   $0xc010e97a$/;"	l
c010838f	obj/kernel.asm	/^c010838f:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0108394	obj/kernel.asm	/^c0108394:	68 f2 00 00 00       	push   $0xf2$/;"	l
c0108399	obj/kernel.asm	/^c0108399:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c010839e	obj/kernel.asm	/^c010839e:	e8 3c 80 ff ff       	call   c01003df <__panic>$/;"	l
c01083a3	obj/kernel.asm	/^c01083a3:	a1 74 46 1c c0       	mov    0xc01c4674,%eax$/;"	l
c01083a8	obj/kernel.asm	/^c01083a8:	85 c0                	test   %eax,%eax$/;"	l
c01083aa	obj/kernel.asm	/^c01083aa:	74 19                	je     c01083c5 <basic_check+0x42a>$/;"	l
c01083ac	obj/kernel.asm	/^c01083ac:	68 cd e9 10 c0       	push   $0xc010e9cd$/;"	l
c01083b1	obj/kernel.asm	/^c01083b1:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c01083b6	obj/kernel.asm	/^c01083b6:	68 f4 00 00 00       	push   $0xf4$/;"	l
c01083bb	obj/kernel.asm	/^c01083bb:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01083c0	obj/kernel.asm	/^c01083c0:	e8 1a 80 ff ff       	call   c01003df <__panic>$/;"	l
c01083c5	obj/kernel.asm	/^c01083c5:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01083c8	obj/kernel.asm	/^c01083c8:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01083cb	obj/kernel.asm	/^c01083cb:	a3 6c 46 1c c0       	mov    %eax,0xc01c466c$/;"	l
c01083d0	obj/kernel.asm	/^c01083d0:	89 15 70 46 1c c0    	mov    %edx,0xc01c4670$/;"	l
c01083d6	obj/kernel.asm	/^c01083d6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01083d9	obj/kernel.asm	/^c01083d9:	a3 74 46 1c c0       	mov    %eax,0xc01c4674$/;"	l
c01083de	obj/kernel.asm	/^c01083de:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01083e1	obj/kernel.asm	/^c01083e1:	6a 01                	push   $0x1$/;"	l
c01083e3	obj/kernel.asm	/^c01083e3:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01083e6	obj/kernel.asm	/^c01083e6:	e8 df b5 ff ff       	call   c01039ca <free_pages>$/;"	l
c01083eb	obj/kernel.asm	/^c01083eb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01083ee	obj/kernel.asm	/^c01083ee:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01083f1	obj/kernel.asm	/^c01083f1:	6a 01                	push   $0x1$/;"	l
c01083f3	obj/kernel.asm	/^c01083f3:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01083f6	obj/kernel.asm	/^c01083f6:	e8 cf b5 ff ff       	call   c01039ca <free_pages>$/;"	l
c01083fb	obj/kernel.asm	/^c01083fb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01083fe	obj/kernel.asm	/^c01083fe:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108401	obj/kernel.asm	/^c0108401:	6a 01                	push   $0x1$/;"	l
c0108403	obj/kernel.asm	/^c0108403:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108406	obj/kernel.asm	/^c0108406:	e8 bf b5 ff ff       	call   c01039ca <free_pages>$/;"	l
c010840b	obj/kernel.asm	/^c010840b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010840e	obj/kernel.asm	/^c010840e:	c9                   	leave  $/;"	l
c010840f	obj/kernel.asm	/^c010840f:	c3                   	ret    $/;"	l
c0108410	obj/kernel.asm	/^c0108410 <default_check>:$/;"	l
c0108410	obj/kernel.asm	/^c0108410:	55                   	push   %ebp$/;"	l
c0108411	obj/kernel.asm	/^c0108411:	89 e5                	mov    %esp,%ebp$/;"	l
c0108413	obj/kernel.asm	/^c0108413:	53                   	push   %ebx$/;"	l
c0108414	obj/kernel.asm	/^c0108414:	81 ec 84 00 00 00    	sub    $0x84,%esp$/;"	l
c010841a	obj/kernel.asm	/^c010841a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108421	obj/kernel.asm	/^c0108421:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0108428	obj/kernel.asm	/^c0108428:	c7 45 ec 6c 46 1c c0 	movl   $0xc01c466c,-0x14(%ebp)$/;"	l
c010842f	obj/kernel.asm	/^c010842f:	eb 60                	jmp    c0108491 <default_check+0x81>$/;"	l
c0108431	obj/kernel.asm	/^c0108431:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108434	obj/kernel.asm	/^c0108434:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0108437	obj/kernel.asm	/^c0108437:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010843a	obj/kernel.asm	/^c010843a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010843d	obj/kernel.asm	/^c010843d:	83 c0 04             	add    $0x4,%eax$/;"	l
c0108440	obj/kernel.asm	/^c0108440:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)$/;"	l
c0108447	obj/kernel.asm	/^c0108447:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010844a	obj/kernel.asm	/^c010844a:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010844d	obj/kernel.asm	/^c010844d:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0108450	obj/kernel.asm	/^c0108450:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0108453	obj/kernel.asm	/^c0108453:	19 c0                	sbb    %eax,%eax$/;"	l
c0108455	obj/kernel.asm	/^c0108455:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0108458	obj/kernel.asm	/^c0108458:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c010845c	obj/kernel.asm	/^c010845c:	0f 95 c0             	setne  %al$/;"	l
c010845f	obj/kernel.asm	/^c010845f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108462	obj/kernel.asm	/^c0108462:	85 c0                	test   %eax,%eax$/;"	l
c0108464	obj/kernel.asm	/^c0108464:	75 19                	jne    c010847f <default_check+0x6f>$/;"	l
c0108466	obj/kernel.asm	/^c0108466:	68 da e9 10 c0       	push   $0xc010e9da$/;"	l
c010846b	obj/kernel.asm	/^c010846b:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0108470	obj/kernel.asm	/^c0108470:	68 05 01 00 00       	push   $0x105$/;"	l
c0108475	obj/kernel.asm	/^c0108475:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c010847a	obj/kernel.asm	/^c010847a:	e8 60 7f ff ff       	call   c01003df <__panic>$/;"	l
c010847f	obj/kernel.asm	/^c010847f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108483	obj/kernel.asm	/^c0108483:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108486	obj/kernel.asm	/^c0108486:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0108489	obj/kernel.asm	/^c0108489:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010848c	obj/kernel.asm	/^c010848c:	01 d0                	add    %edx,%eax$/;"	l
c010848e	obj/kernel.asm	/^c010848e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108491	obj/kernel.asm	/^c0108491:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108494	obj/kernel.asm	/^c0108494:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0108497	obj/kernel.asm	/^c0108497:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010849a	obj/kernel.asm	/^c010849a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010849d	obj/kernel.asm	/^c010849d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01084a0	obj/kernel.asm	/^c01084a0:	81 7d ec 6c 46 1c c0 	cmpl   $0xc01c466c,-0x14(%ebp)$/;"	l
c01084a7	obj/kernel.asm	/^c01084a7:	75 88                	jne    c0108431 <default_check+0x21>$/;"	l
c01084a9	obj/kernel.asm	/^c01084a9:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c01084ac	obj/kernel.asm	/^c01084ac:	e8 4d b5 ff ff       	call   c01039fe <nr_free_pages>$/;"	l
c01084b1	obj/kernel.asm	/^c01084b1:	39 c3                	cmp    %eax,%ebx$/;"	l
c01084b3	obj/kernel.asm	/^c01084b3:	74 19                	je     c01084ce <default_check+0xbe>$/;"	l
c01084b5	obj/kernel.asm	/^c01084b5:	68 ea e9 10 c0       	push   $0xc010e9ea$/;"	l
c01084ba	obj/kernel.asm	/^c01084ba:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c01084bf	obj/kernel.asm	/^c01084bf:	68 08 01 00 00       	push   $0x108$/;"	l
c01084c4	obj/kernel.asm	/^c01084c4:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01084c9	obj/kernel.asm	/^c01084c9:	e8 11 7f ff ff       	call   c01003df <__panic>$/;"	l
c01084ce	obj/kernel.asm	/^c01084ce:	e8 c8 fa ff ff       	call   c0107f9b <basic_check>$/;"	l
c01084d3	obj/kernel.asm	/^c01084d3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01084d6	obj/kernel.asm	/^c01084d6:	6a 05                	push   $0x5$/;"	l
c01084d8	obj/kernel.asm	/^c01084d8:	e8 81 b4 ff ff       	call   c010395e <alloc_pages>$/;"	l
c01084dd	obj/kernel.asm	/^c01084dd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01084e0	obj/kernel.asm	/^c01084e0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01084e3	obj/kernel.asm	/^c01084e3:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01084e7	obj/kernel.asm	/^c01084e7:	75 19                	jne    c0108502 <default_check+0xf2>$/;"	l
c01084e9	obj/kernel.asm	/^c01084e9:	68 03 ea 10 c0       	push   $0xc010ea03$/;"	l
c01084ee	obj/kernel.asm	/^c01084ee:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c01084f3	obj/kernel.asm	/^c01084f3:	68 0d 01 00 00       	push   $0x10d$/;"	l
c01084f8	obj/kernel.asm	/^c01084f8:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01084fd	obj/kernel.asm	/^c01084fd:	e8 dd 7e ff ff       	call   c01003df <__panic>$/;"	l
c0108502	obj/kernel.asm	/^c0108502:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108505	obj/kernel.asm	/^c0108505:	83 c0 04             	add    $0x4,%eax$/;"	l
c0108508	obj/kernel.asm	/^c0108508:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c010850f	obj/kernel.asm	/^c010850f:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0108512	obj/kernel.asm	/^c0108512:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0108515	obj/kernel.asm	/^c0108515:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c0108518	obj/kernel.asm	/^c0108518:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010851b	obj/kernel.asm	/^c010851b:	19 c0                	sbb    %eax,%eax$/;"	l
c010851d	obj/kernel.asm	/^c010851d:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0108520	obj/kernel.asm	/^c0108520:	83 7d b8 00          	cmpl   $0x0,-0x48(%ebp)$/;"	l
c0108524	obj/kernel.asm	/^c0108524:	0f 95 c0             	setne  %al$/;"	l
c0108527	obj/kernel.asm	/^c0108527:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010852a	obj/kernel.asm	/^c010852a:	85 c0                	test   %eax,%eax$/;"	l
c010852c	obj/kernel.asm	/^c010852c:	74 19                	je     c0108547 <default_check+0x137>$/;"	l
c010852e	obj/kernel.asm	/^c010852e:	68 0e ea 10 c0       	push   $0xc010ea0e$/;"	l
c0108533	obj/kernel.asm	/^c0108533:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0108538	obj/kernel.asm	/^c0108538:	68 0e 01 00 00       	push   $0x10e$/;"	l
c010853d	obj/kernel.asm	/^c010853d:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c0108542	obj/kernel.asm	/^c0108542:	e8 98 7e ff ff       	call   c01003df <__panic>$/;"	l
c0108547	obj/kernel.asm	/^c0108547:	a1 6c 46 1c c0       	mov    0xc01c466c,%eax$/;"	l
c010854c	obj/kernel.asm	/^c010854c:	8b 15 70 46 1c c0    	mov    0xc01c4670,%edx$/;"	l
c0108552	obj/kernel.asm	/^c0108552:	89 45 80             	mov    %eax,-0x80(%ebp)$/;"	l
c0108555	obj/kernel.asm	/^c0108555:	89 55 84             	mov    %edx,-0x7c(%ebp)$/;"	l
c0108558	obj/kernel.asm	/^c0108558:	c7 45 b4 6c 46 1c c0 	movl   $0xc01c466c,-0x4c(%ebp)$/;"	l
c010855f	obj/kernel.asm	/^c010855f:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0108562	obj/kernel.asm	/^c0108562:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0108565	obj/kernel.asm	/^c0108565:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108568	obj/kernel.asm	/^c0108568:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010856b	obj/kernel.asm	/^c010856b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010856e	obj/kernel.asm	/^c010856e:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0108571	obj/kernel.asm	/^c0108571:	89 10                	mov    %edx,(%eax)$/;"	l
c0108573	obj/kernel.asm	/^c0108573:	c7 45 b0 6c 46 1c c0 	movl   $0xc01c466c,-0x50(%ebp)$/;"	l
c010857a	obj/kernel.asm	/^c010857a:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010857d	obj/kernel.asm	/^c010857d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108580	obj/kernel.asm	/^c0108580:	39 45 b0             	cmp    %eax,-0x50(%ebp)$/;"	l
c0108583	obj/kernel.asm	/^c0108583:	0f 94 c0             	sete   %al$/;"	l
c0108586	obj/kernel.asm	/^c0108586:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108589	obj/kernel.asm	/^c0108589:	85 c0                	test   %eax,%eax$/;"	l
c010858b	obj/kernel.asm	/^c010858b:	75 19                	jne    c01085a6 <default_check+0x196>$/;"	l
c010858d	obj/kernel.asm	/^c010858d:	68 63 e9 10 c0       	push   $0xc010e963$/;"	l
c0108592	obj/kernel.asm	/^c0108592:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0108597	obj/kernel.asm	/^c0108597:	68 12 01 00 00       	push   $0x112$/;"	l
c010859c	obj/kernel.asm	/^c010859c:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01085a1	obj/kernel.asm	/^c01085a1:	e8 39 7e ff ff       	call   c01003df <__panic>$/;"	l
c01085a6	obj/kernel.asm	/^c01085a6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01085a9	obj/kernel.asm	/^c01085a9:	6a 01                	push   $0x1$/;"	l
c01085ab	obj/kernel.asm	/^c01085ab:	e8 ae b3 ff ff       	call   c010395e <alloc_pages>$/;"	l
c01085b0	obj/kernel.asm	/^c01085b0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01085b3	obj/kernel.asm	/^c01085b3:	85 c0                	test   %eax,%eax$/;"	l
c01085b5	obj/kernel.asm	/^c01085b5:	74 19                	je     c01085d0 <default_check+0x1c0>$/;"	l
c01085b7	obj/kernel.asm	/^c01085b7:	68 7a e9 10 c0       	push   $0xc010e97a$/;"	l
c01085bc	obj/kernel.asm	/^c01085bc:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c01085c1	obj/kernel.asm	/^c01085c1:	68 13 01 00 00       	push   $0x113$/;"	l
c01085c6	obj/kernel.asm	/^c01085c6:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01085cb	obj/kernel.asm	/^c01085cb:	e8 0f 7e ff ff       	call   c01003df <__panic>$/;"	l
c01085d0	obj/kernel.asm	/^c01085d0:	a1 74 46 1c c0       	mov    0xc01c4674,%eax$/;"	l
c01085d5	obj/kernel.asm	/^c01085d5:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01085d8	obj/kernel.asm	/^c01085d8:	c7 05 74 46 1c c0 00 	movl   $0x0,0xc01c4674$/;"	l
c01085df	obj/kernel.asm	/^c01085df:	00 00 00 $/;"	l
c01085e2	obj/kernel.asm	/^c01085e2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01085e5	obj/kernel.asm	/^c01085e5:	83 c0 40             	add    $0x40,%eax$/;"	l
c01085e8	obj/kernel.asm	/^c01085e8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01085eb	obj/kernel.asm	/^c01085eb:	6a 03                	push   $0x3$/;"	l
c01085ed	obj/kernel.asm	/^c01085ed:	50                   	push   %eax$/;"	l
c01085ee	obj/kernel.asm	/^c01085ee:	e8 d7 b3 ff ff       	call   c01039ca <free_pages>$/;"	l
c01085f3	obj/kernel.asm	/^c01085f3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01085f6	obj/kernel.asm	/^c01085f6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01085f9	obj/kernel.asm	/^c01085f9:	6a 04                	push   $0x4$/;"	l
c01085fb	obj/kernel.asm	/^c01085fb:	e8 5e b3 ff ff       	call   c010395e <alloc_pages>$/;"	l
c0108600	obj/kernel.asm	/^c0108600:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108603	obj/kernel.asm	/^c0108603:	85 c0                	test   %eax,%eax$/;"	l
c0108605	obj/kernel.asm	/^c0108605:	74 19                	je     c0108620 <default_check+0x210>$/;"	l
c0108607	obj/kernel.asm	/^c0108607:	68 20 ea 10 c0       	push   $0xc010ea20$/;"	l
c010860c	obj/kernel.asm	/^c010860c:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0108611	obj/kernel.asm	/^c0108611:	68 19 01 00 00       	push   $0x119$/;"	l
c0108616	obj/kernel.asm	/^c0108616:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c010861b	obj/kernel.asm	/^c010861b:	e8 bf 7d ff ff       	call   c01003df <__panic>$/;"	l
c0108620	obj/kernel.asm	/^c0108620:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108623	obj/kernel.asm	/^c0108623:	83 c0 40             	add    $0x40,%eax$/;"	l
c0108626	obj/kernel.asm	/^c0108626:	83 c0 04             	add    $0x4,%eax$/;"	l
c0108629	obj/kernel.asm	/^c0108629:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%ebp)$/;"	l
c0108630	obj/kernel.asm	/^c0108630:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c0108633	obj/kernel.asm	/^c0108633:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0108636	obj/kernel.asm	/^c0108636:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
c0108639	obj/kernel.asm	/^c0108639:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010863c	obj/kernel.asm	/^c010863c:	19 c0                	sbb    %eax,%eax$/;"	l
c010863e	obj/kernel.asm	/^c010863e:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c0108641	obj/kernel.asm	/^c0108641:	83 7d a4 00          	cmpl   $0x0,-0x5c(%ebp)$/;"	l
c0108645	obj/kernel.asm	/^c0108645:	0f 95 c0             	setne  %al$/;"	l
c0108648	obj/kernel.asm	/^c0108648:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010864b	obj/kernel.asm	/^c010864b:	85 c0                	test   %eax,%eax$/;"	l
c010864d	obj/kernel.asm	/^c010864d:	74 0e                	je     c010865d <default_check+0x24d>$/;"	l
c010864f	obj/kernel.asm	/^c010864f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108652	obj/kernel.asm	/^c0108652:	83 c0 40             	add    $0x40,%eax$/;"	l
c0108655	obj/kernel.asm	/^c0108655:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108658	obj/kernel.asm	/^c0108658:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010865b	obj/kernel.asm	/^c010865b:	74 19                	je     c0108676 <default_check+0x266>$/;"	l
c010865d	obj/kernel.asm	/^c010865d:	68 38 ea 10 c0       	push   $0xc010ea38$/;"	l
c0108662	obj/kernel.asm	/^c0108662:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0108667	obj/kernel.asm	/^c0108667:	68 1a 01 00 00       	push   $0x11a$/;"	l
c010866c	obj/kernel.asm	/^c010866c:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c0108671	obj/kernel.asm	/^c0108671:	e8 69 7d ff ff       	call   c01003df <__panic>$/;"	l
c0108676	obj/kernel.asm	/^c0108676:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108679	obj/kernel.asm	/^c0108679:	6a 03                	push   $0x3$/;"	l
c010867b	obj/kernel.asm	/^c010867b:	e8 de b2 ff ff       	call   c010395e <alloc_pages>$/;"	l
c0108680	obj/kernel.asm	/^c0108680:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108683	obj/kernel.asm	/^c0108683:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0108686	obj/kernel.asm	/^c0108686:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010868a	obj/kernel.asm	/^c010868a:	75 19                	jne    c01086a5 <default_check+0x295>$/;"	l
c010868c	obj/kernel.asm	/^c010868c:	68 64 ea 10 c0       	push   $0xc010ea64$/;"	l
c0108691	obj/kernel.asm	/^c0108691:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0108696	obj/kernel.asm	/^c0108696:	68 1b 01 00 00       	push   $0x11b$/;"	l
c010869b	obj/kernel.asm	/^c010869b:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01086a0	obj/kernel.asm	/^c01086a0:	e8 3a 7d ff ff       	call   c01003df <__panic>$/;"	l
c01086a5	obj/kernel.asm	/^c01086a5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01086a8	obj/kernel.asm	/^c01086a8:	6a 01                	push   $0x1$/;"	l
c01086aa	obj/kernel.asm	/^c01086aa:	e8 af b2 ff ff       	call   c010395e <alloc_pages>$/;"	l
c01086af	obj/kernel.asm	/^c01086af:	83 c4 10             	add    $0x10,%esp$/;"	l
c01086b2	obj/kernel.asm	/^c01086b2:	85 c0                	test   %eax,%eax$/;"	l
c01086b4	obj/kernel.asm	/^c01086b4:	74 19                	je     c01086cf <default_check+0x2bf>$/;"	l
c01086b6	obj/kernel.asm	/^c01086b6:	68 7a e9 10 c0       	push   $0xc010e97a$/;"	l
c01086bb	obj/kernel.asm	/^c01086bb:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c01086c0	obj/kernel.asm	/^c01086c0:	68 1c 01 00 00       	push   $0x11c$/;"	l
c01086c5	obj/kernel.asm	/^c01086c5:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01086ca	obj/kernel.asm	/^c01086ca:	e8 10 7d ff ff       	call   c01003df <__panic>$/;"	l
c01086cf	obj/kernel.asm	/^c01086cf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01086d2	obj/kernel.asm	/^c01086d2:	83 c0 40             	add    $0x40,%eax$/;"	l
c01086d5	obj/kernel.asm	/^c01086d5:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c01086d8	obj/kernel.asm	/^c01086d8:	74 19                	je     c01086f3 <default_check+0x2e3>$/;"	l
c01086da	obj/kernel.asm	/^c01086da:	68 82 ea 10 c0       	push   $0xc010ea82$/;"	l
c01086df	obj/kernel.asm	/^c01086df:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c01086e4	obj/kernel.asm	/^c01086e4:	68 1d 01 00 00       	push   $0x11d$/;"	l
c01086e9	obj/kernel.asm	/^c01086e9:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01086ee	obj/kernel.asm	/^c01086ee:	e8 ec 7c ff ff       	call   c01003df <__panic>$/;"	l
c01086f3	obj/kernel.asm	/^c01086f3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01086f6	obj/kernel.asm	/^c01086f6:	83 c0 20             	add    $0x20,%eax$/;"	l
c01086f9	obj/kernel.asm	/^c01086f9:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01086fc	obj/kernel.asm	/^c01086fc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01086ff	obj/kernel.asm	/^c01086ff:	6a 01                	push   $0x1$/;"	l
c0108701	obj/kernel.asm	/^c0108701:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0108704	obj/kernel.asm	/^c0108704:	e8 c1 b2 ff ff       	call   c01039ca <free_pages>$/;"	l
c0108709	obj/kernel.asm	/^c0108709:	83 c4 10             	add    $0x10,%esp$/;"	l
c010870c	obj/kernel.asm	/^c010870c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010870f	obj/kernel.asm	/^c010870f:	6a 03                	push   $0x3$/;"	l
c0108711	obj/kernel.asm	/^c0108711:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0108714	obj/kernel.asm	/^c0108714:	e8 b1 b2 ff ff       	call   c01039ca <free_pages>$/;"	l
c0108719	obj/kernel.asm	/^c0108719:	83 c4 10             	add    $0x10,%esp$/;"	l
c010871c	obj/kernel.asm	/^c010871c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010871f	obj/kernel.asm	/^c010871f:	83 c0 04             	add    $0x4,%eax$/;"	l
c0108722	obj/kernel.asm	/^c0108722:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%ebp)$/;"	l
c0108729	obj/kernel.asm	/^c0108729:	89 45 9c             	mov    %eax,-0x64(%ebp)$/;"	l
c010872c	obj/kernel.asm	/^c010872c:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010872f	obj/kernel.asm	/^c010872f:	8b 55 a0             	mov    -0x60(%ebp),%edx$/;"	l
c0108732	obj/kernel.asm	/^c0108732:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0108735	obj/kernel.asm	/^c0108735:	19 c0                	sbb    %eax,%eax$/;"	l
c0108737	obj/kernel.asm	/^c0108737:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c010873a	obj/kernel.asm	/^c010873a:	83 7d 98 00          	cmpl   $0x0,-0x68(%ebp)$/;"	l
c010873e	obj/kernel.asm	/^c010873e:	0f 95 c0             	setne  %al$/;"	l
c0108741	obj/kernel.asm	/^c0108741:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108744	obj/kernel.asm	/^c0108744:	85 c0                	test   %eax,%eax$/;"	l
c0108746	obj/kernel.asm	/^c0108746:	74 0b                	je     c0108753 <default_check+0x343>$/;"	l
c0108748	obj/kernel.asm	/^c0108748:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010874b	obj/kernel.asm	/^c010874b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010874e	obj/kernel.asm	/^c010874e:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0108751	obj/kernel.asm	/^c0108751:	74 19                	je     c010876c <default_check+0x35c>$/;"	l
c0108753	obj/kernel.asm	/^c0108753:	68 90 ea 10 c0       	push   $0xc010ea90$/;"	l
c0108758	obj/kernel.asm	/^c0108758:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c010875d	obj/kernel.asm	/^c010875d:	68 22 01 00 00       	push   $0x122$/;"	l
c0108762	obj/kernel.asm	/^c0108762:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c0108767	obj/kernel.asm	/^c0108767:	e8 73 7c ff ff       	call   c01003df <__panic>$/;"	l
c010876c	obj/kernel.asm	/^c010876c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010876f	obj/kernel.asm	/^c010876f:	83 c0 04             	add    $0x4,%eax$/;"	l
c0108772	obj/kernel.asm	/^c0108772:	c7 45 94 01 00 00 00 	movl   $0x1,-0x6c(%ebp)$/;"	l
c0108779	obj/kernel.asm	/^c0108779:	89 45 90             	mov    %eax,-0x70(%ebp)$/;"	l
c010877c	obj/kernel.asm	/^c010877c:	8b 45 90             	mov    -0x70(%ebp),%eax$/;"	l
c010877f	obj/kernel.asm	/^c010877f:	8b 55 94             	mov    -0x6c(%ebp),%edx$/;"	l
c0108782	obj/kernel.asm	/^c0108782:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0108785	obj/kernel.asm	/^c0108785:	19 c0                	sbb    %eax,%eax$/;"	l
c0108787	obj/kernel.asm	/^c0108787:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c010878a	obj/kernel.asm	/^c010878a:	83 7d 8c 00          	cmpl   $0x0,-0x74(%ebp)$/;"	l
c010878e	obj/kernel.asm	/^c010878e:	0f 95 c0             	setne  %al$/;"	l
c0108791	obj/kernel.asm	/^c0108791:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108794	obj/kernel.asm	/^c0108794:	85 c0                	test   %eax,%eax$/;"	l
c0108796	obj/kernel.asm	/^c0108796:	74 0b                	je     c01087a3 <default_check+0x393>$/;"	l
c0108798	obj/kernel.asm	/^c0108798:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010879b	obj/kernel.asm	/^c010879b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010879e	obj/kernel.asm	/^c010879e:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c01087a1	obj/kernel.asm	/^c01087a1:	74 19                	je     c01087bc <default_check+0x3ac>$/;"	l
c01087a3	obj/kernel.asm	/^c01087a3:	68 b8 ea 10 c0       	push   $0xc010eab8$/;"	l
c01087a8	obj/kernel.asm	/^c01087a8:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c01087ad	obj/kernel.asm	/^c01087ad:	68 23 01 00 00       	push   $0x123$/;"	l
c01087b2	obj/kernel.asm	/^c01087b2:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01087b7	obj/kernel.asm	/^c01087b7:	e8 23 7c ff ff       	call   c01003df <__panic>$/;"	l
c01087bc	obj/kernel.asm	/^c01087bc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01087bf	obj/kernel.asm	/^c01087bf:	6a 01                	push   $0x1$/;"	l
c01087c1	obj/kernel.asm	/^c01087c1:	e8 98 b1 ff ff       	call   c010395e <alloc_pages>$/;"	l
c01087c6	obj/kernel.asm	/^c01087c6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01087c9	obj/kernel.asm	/^c01087c9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01087cc	obj/kernel.asm	/^c01087cc:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01087cf	obj/kernel.asm	/^c01087cf:	83 e8 20             	sub    $0x20,%eax$/;"	l
c01087d2	obj/kernel.asm	/^c01087d2:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c01087d5	obj/kernel.asm	/^c01087d5:	74 19                	je     c01087f0 <default_check+0x3e0>$/;"	l
c01087d7	obj/kernel.asm	/^c01087d7:	68 de ea 10 c0       	push   $0xc010eade$/;"	l
c01087dc	obj/kernel.asm	/^c01087dc:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c01087e1	obj/kernel.asm	/^c01087e1:	68 25 01 00 00       	push   $0x125$/;"	l
c01087e6	obj/kernel.asm	/^c01087e6:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01087eb	obj/kernel.asm	/^c01087eb:	e8 ef 7b ff ff       	call   c01003df <__panic>$/;"	l
c01087f0	obj/kernel.asm	/^c01087f0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01087f3	obj/kernel.asm	/^c01087f3:	6a 01                	push   $0x1$/;"	l
c01087f5	obj/kernel.asm	/^c01087f5:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01087f8	obj/kernel.asm	/^c01087f8:	e8 cd b1 ff ff       	call   c01039ca <free_pages>$/;"	l
c01087fd	obj/kernel.asm	/^c01087fd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108800	obj/kernel.asm	/^c0108800:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108803	obj/kernel.asm	/^c0108803:	6a 02                	push   $0x2$/;"	l
c0108805	obj/kernel.asm	/^c0108805:	e8 54 b1 ff ff       	call   c010395e <alloc_pages>$/;"	l
c010880a	obj/kernel.asm	/^c010880a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010880d	obj/kernel.asm	/^c010880d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108810	obj/kernel.asm	/^c0108810:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0108813	obj/kernel.asm	/^c0108813:	83 c0 20             	add    $0x20,%eax$/;"	l
c0108816	obj/kernel.asm	/^c0108816:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c0108819	obj/kernel.asm	/^c0108819:	74 19                	je     c0108834 <default_check+0x424>$/;"	l
c010881b	obj/kernel.asm	/^c010881b:	68 fc ea 10 c0       	push   $0xc010eafc$/;"	l
c0108820	obj/kernel.asm	/^c0108820:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0108825	obj/kernel.asm	/^c0108825:	68 27 01 00 00       	push   $0x127$/;"	l
c010882a	obj/kernel.asm	/^c010882a:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c010882f	obj/kernel.asm	/^c010882f:	e8 ab 7b ff ff       	call   c01003df <__panic>$/;"	l
c0108834	obj/kernel.asm	/^c0108834:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108837	obj/kernel.asm	/^c0108837:	6a 02                	push   $0x2$/;"	l
c0108839	obj/kernel.asm	/^c0108839:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c010883c	obj/kernel.asm	/^c010883c:	e8 89 b1 ff ff       	call   c01039ca <free_pages>$/;"	l
c0108841	obj/kernel.asm	/^c0108841:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108844	obj/kernel.asm	/^c0108844:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108847	obj/kernel.asm	/^c0108847:	6a 01                	push   $0x1$/;"	l
c0108849	obj/kernel.asm	/^c0108849:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c010884c	obj/kernel.asm	/^c010884c:	e8 79 b1 ff ff       	call   c01039ca <free_pages>$/;"	l
c0108851	obj/kernel.asm	/^c0108851:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108854	obj/kernel.asm	/^c0108854:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108857	obj/kernel.asm	/^c0108857:	6a 05                	push   $0x5$/;"	l
c0108859	obj/kernel.asm	/^c0108859:	e8 00 b1 ff ff       	call   c010395e <alloc_pages>$/;"	l
c010885e	obj/kernel.asm	/^c010885e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108861	obj/kernel.asm	/^c0108861:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108864	obj/kernel.asm	/^c0108864:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0108868	obj/kernel.asm	/^c0108868:	75 19                	jne    c0108883 <default_check+0x473>$/;"	l
c010886a	obj/kernel.asm	/^c010886a:	68 1c eb 10 c0       	push   $0xc010eb1c$/;"	l
c010886f	obj/kernel.asm	/^c010886f:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0108874	obj/kernel.asm	/^c0108874:	68 2c 01 00 00       	push   $0x12c$/;"	l
c0108879	obj/kernel.asm	/^c0108879:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c010887e	obj/kernel.asm	/^c010887e:	e8 5c 7b ff ff       	call   c01003df <__panic>$/;"	l
c0108883	obj/kernel.asm	/^c0108883:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108886	obj/kernel.asm	/^c0108886:	6a 01                	push   $0x1$/;"	l
c0108888	obj/kernel.asm	/^c0108888:	e8 d1 b0 ff ff       	call   c010395e <alloc_pages>$/;"	l
c010888d	obj/kernel.asm	/^c010888d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108890	obj/kernel.asm	/^c0108890:	85 c0                	test   %eax,%eax$/;"	l
c0108892	obj/kernel.asm	/^c0108892:	74 19                	je     c01088ad <default_check+0x49d>$/;"	l
c0108894	obj/kernel.asm	/^c0108894:	68 7a e9 10 c0       	push   $0xc010e97a$/;"	l
c0108899	obj/kernel.asm	/^c0108899:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c010889e	obj/kernel.asm	/^c010889e:	68 2d 01 00 00       	push   $0x12d$/;"	l
c01088a3	obj/kernel.asm	/^c01088a3:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01088a8	obj/kernel.asm	/^c01088a8:	e8 32 7b ff ff       	call   c01003df <__panic>$/;"	l
c01088ad	obj/kernel.asm	/^c01088ad:	a1 74 46 1c c0       	mov    0xc01c4674,%eax$/;"	l
c01088b2	obj/kernel.asm	/^c01088b2:	85 c0                	test   %eax,%eax$/;"	l
c01088b4	obj/kernel.asm	/^c01088b4:	74 19                	je     c01088cf <default_check+0x4bf>$/;"	l
c01088b6	obj/kernel.asm	/^c01088b6:	68 cd e9 10 c0       	push   $0xc010e9cd$/;"	l
c01088bb	obj/kernel.asm	/^c01088bb:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c01088c0	obj/kernel.asm	/^c01088c0:	68 2f 01 00 00       	push   $0x12f$/;"	l
c01088c5	obj/kernel.asm	/^c01088c5:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c01088ca	obj/kernel.asm	/^c01088ca:	e8 10 7b ff ff       	call   c01003df <__panic>$/;"	l
c01088cf	obj/kernel.asm	/^c01088cf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01088d2	obj/kernel.asm	/^c01088d2:	a3 74 46 1c c0       	mov    %eax,0xc01c4674$/;"	l
c01088d7	obj/kernel.asm	/^c01088d7:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c01088da	obj/kernel.asm	/^c01088da:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c01088dd	obj/kernel.asm	/^c01088dd:	a3 6c 46 1c c0       	mov    %eax,0xc01c466c$/;"	l
c01088e2	obj/kernel.asm	/^c01088e2:	89 15 70 46 1c c0    	mov    %edx,0xc01c4670$/;"	l
c01088e8	obj/kernel.asm	/^c01088e8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01088eb	obj/kernel.asm	/^c01088eb:	6a 05                	push   $0x5$/;"	l
c01088ed	obj/kernel.asm	/^c01088ed:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01088f0	obj/kernel.asm	/^c01088f0:	e8 d5 b0 ff ff       	call   c01039ca <free_pages>$/;"	l
c01088f5	obj/kernel.asm	/^c01088f5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01088f8	obj/kernel.asm	/^c01088f8:	c7 45 ec 6c 46 1c c0 	movl   $0xc01c466c,-0x14(%ebp)$/;"	l
c01088ff	obj/kernel.asm	/^c01088ff:	eb 1d                	jmp    c010891e <default_check+0x50e>$/;"	l
c0108901	obj/kernel.asm	/^c0108901:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108904	obj/kernel.asm	/^c0108904:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0108907	obj/kernel.asm	/^c0108907:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010890a	obj/kernel.asm	/^c010890a:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c010890e	obj/kernel.asm	/^c010890e:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0108911	obj/kernel.asm	/^c0108911:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0108914	obj/kernel.asm	/^c0108914:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108917	obj/kernel.asm	/^c0108917:	29 c2                	sub    %eax,%edx$/;"	l
c0108919	obj/kernel.asm	/^c0108919:	89 d0                	mov    %edx,%eax$/;"	l
c010891b	obj/kernel.asm	/^c010891b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010891e	obj/kernel.asm	/^c010891e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108921	obj/kernel.asm	/^c0108921:	89 45 88             	mov    %eax,-0x78(%ebp)$/;"	l
c0108924	obj/kernel.asm	/^c0108924:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
c0108927	obj/kernel.asm	/^c0108927:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010892a	obj/kernel.asm	/^c010892a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010892d	obj/kernel.asm	/^c010892d:	81 7d ec 6c 46 1c c0 	cmpl   $0xc01c466c,-0x14(%ebp)$/;"	l
c0108934	obj/kernel.asm	/^c0108934:	75 cb                	jne    c0108901 <default_check+0x4f1>$/;"	l
c0108936	obj/kernel.asm	/^c0108936:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010893a	obj/kernel.asm	/^c010893a:	74 19                	je     c0108955 <default_check+0x545>$/;"	l
c010893c	obj/kernel.asm	/^c010893c:	68 3a eb 10 c0       	push   $0xc010eb3a$/;"	l
c0108941	obj/kernel.asm	/^c0108941:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0108946	obj/kernel.asm	/^c0108946:	68 3a 01 00 00       	push   $0x13a$/;"	l
c010894b	obj/kernel.asm	/^c010894b:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c0108950	obj/kernel.asm	/^c0108950:	e8 8a 7a ff ff       	call   c01003df <__panic>$/;"	l
c0108955	obj/kernel.asm	/^c0108955:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0108959	obj/kernel.asm	/^c0108959:	74 19                	je     c0108974 <default_check+0x564>$/;"	l
c010895b	obj/kernel.asm	/^c010895b:	68 45 eb 10 c0       	push   $0xc010eb45$/;"	l
c0108960	obj/kernel.asm	/^c0108960:	68 92 e7 10 c0       	push   $0xc010e792$/;"	l
c0108965	obj/kernel.asm	/^c0108965:	68 3b 01 00 00       	push   $0x13b$/;"	l
c010896a	obj/kernel.asm	/^c010896a:	68 a7 e7 10 c0       	push   $0xc010e7a7$/;"	l
c010896f	obj/kernel.asm	/^c010896f:	e8 6b 7a ff ff       	call   c01003df <__panic>$/;"	l
c0108974	obj/kernel.asm	/^c0108974:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0108977	obj/kernel.asm	/^c0108977:	c9                   	leave  $/;"	l
c0108978	obj/kernel.asm	/^c0108978:	c3                   	ret    $/;"	l
c0108979	obj/kernel.asm	/^c0108979 <phi_test_sema>:$/;"	l
c0108979	obj/kernel.asm	/^c0108979:	55                   	push   %ebp$/;"	l
c010897a	obj/kernel.asm	/^c010897a:	89 e5                	mov    %esp,%ebp$/;"	l
c010897c	obj/kernel.asm	/^c010897c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010897f	obj/kernel.asm	/^c010897f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108982	obj/kernel.asm	/^c0108982:	8b 04 85 80 46 1c c0 	mov    -0x3fe3b980(,%eax,4),%eax$/;"	l
c0108989	obj/kernel.asm	/^c0108989:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010898c	obj/kernel.asm	/^c010898c:	0f 85 8d 00 00 00    	jne    c0108a1f <phi_test_sema+0xa6>$/;"	l
c0108992	obj/kernel.asm	/^c0108992:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108995	obj/kernel.asm	/^c0108995:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0108998	obj/kernel.asm	/^c0108998:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c010899d	obj/kernel.asm	/^c010899d:	89 c8                	mov    %ecx,%eax$/;"	l
c010899f	obj/kernel.asm	/^c010899f:	f7 ea                	imul   %edx$/;"	l
c01089a1	obj/kernel.asm	/^c01089a1:	d1 fa                	sar    %edx$/;"	d
c01089a3	obj/kernel.asm	/^c01089a3:	89 c8                	mov    %ecx,%eax$/;"	l
c01089a5	obj/kernel.asm	/^c01089a5:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c01089a8	obj/kernel.asm	/^c01089a8:	29 c2                	sub    %eax,%edx$/;"	l
c01089aa	obj/kernel.asm	/^c01089aa:	89 d0                	mov    %edx,%eax$/;"	l
c01089ac	obj/kernel.asm	/^c01089ac:	89 c2                	mov    %eax,%edx$/;"	l
c01089ae	obj/kernel.asm	/^c01089ae:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c01089b1	obj/kernel.asm	/^c01089b1:	01 c2                	add    %eax,%edx$/;"	l
c01089b3	obj/kernel.asm	/^c01089b3:	89 c8                	mov    %ecx,%eax$/;"	l
c01089b5	obj/kernel.asm	/^c01089b5:	29 d0                	sub    %edx,%eax$/;"	l
c01089b7	obj/kernel.asm	/^c01089b7:	8b 04 85 80 46 1c c0 	mov    -0x3fe3b980(,%eax,4),%eax$/;"	l
c01089be	obj/kernel.asm	/^c01089be:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01089c1	obj/kernel.asm	/^c01089c1:	74 5c                	je     c0108a1f <phi_test_sema+0xa6>$/;"	l
c01089c3	obj/kernel.asm	/^c01089c3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01089c6	obj/kernel.asm	/^c01089c6:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c01089c9	obj/kernel.asm	/^c01089c9:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c01089ce	obj/kernel.asm	/^c01089ce:	89 c8                	mov    %ecx,%eax$/;"	l
c01089d0	obj/kernel.asm	/^c01089d0:	f7 ea                	imul   %edx$/;"	l
c01089d2	obj/kernel.asm	/^c01089d2:	d1 fa                	sar    %edx$/;"	d
c01089d4	obj/kernel.asm	/^c01089d4:	89 c8                	mov    %ecx,%eax$/;"	l
c01089d6	obj/kernel.asm	/^c01089d6:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c01089d9	obj/kernel.asm	/^c01089d9:	29 c2                	sub    %eax,%edx$/;"	l
c01089db	obj/kernel.asm	/^c01089db:	89 d0                	mov    %edx,%eax$/;"	l
c01089dd	obj/kernel.asm	/^c01089dd:	89 c2                	mov    %eax,%edx$/;"	l
c01089df	obj/kernel.asm	/^c01089df:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c01089e2	obj/kernel.asm	/^c01089e2:	01 c2                	add    %eax,%edx$/;"	l
c01089e4	obj/kernel.asm	/^c01089e4:	89 c8                	mov    %ecx,%eax$/;"	l
c01089e6	obj/kernel.asm	/^c01089e6:	29 d0                	sub    %edx,%eax$/;"	l
c01089e8	obj/kernel.asm	/^c01089e8:	8b 04 85 80 46 1c c0 	mov    -0x3fe3b980(,%eax,4),%eax$/;"	l
c01089ef	obj/kernel.asm	/^c01089ef:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01089f2	obj/kernel.asm	/^c01089f2:	74 2b                	je     c0108a1f <phi_test_sema+0xa6>$/;"	l
c01089f4	obj/kernel.asm	/^c01089f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01089f7	obj/kernel.asm	/^c01089f7:	c7 04 85 80 46 1c c0 	movl   $0x2,-0x3fe3b980(,%eax,4)$/;"	l
c01089fe	obj/kernel.asm	/^c01089fe:	02 00 00 00 $/;"	l
c0108a02	obj/kernel.asm	/^c0108a02:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108a05	obj/kernel.asm	/^c0108a05:	89 d0                	mov    %edx,%eax$/;"	l
c0108a07	obj/kernel.asm	/^c0108a07:	01 c0                	add    %eax,%eax$/;"	l
c0108a09	obj/kernel.asm	/^c0108a09:	01 d0                	add    %edx,%eax$/;"	l
c0108a0b	obj/kernel.asm	/^c0108a0b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108a0e	obj/kernel.asm	/^c0108a0e:	05 20 47 1c c0       	add    $0xc01c4720,%eax$/;"	l
c0108a13	obj/kernel.asm	/^c0108a13:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108a16	obj/kernel.asm	/^c0108a16:	50                   	push   %eax$/;"	l
c0108a17	obj/kernel.asm	/^c0108a17:	e8 13 0b 00 00       	call   c010952f <up>$/;"	l
c0108a1c	obj/kernel.asm	/^c0108a1c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a1f	obj/kernel.asm	/^c0108a1f:	c9                   	leave  $/;"	l
c0108a20	obj/kernel.asm	/^c0108a20:	c3                   	ret    $/;"	l
c0108a21	obj/kernel.asm	/^c0108a21 <phi_take_forks_sema>:$/;"	l
c0108a21	obj/kernel.asm	/^c0108a21:	55                   	push   %ebp$/;"	l
c0108a22	obj/kernel.asm	/^c0108a22:	89 e5                	mov    %esp,%ebp$/;"	l
c0108a24	obj/kernel.asm	/^c0108a24:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108a27	obj/kernel.asm	/^c0108a27:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108a2a	obj/kernel.asm	/^c0108a2a:	68 a8 46 1c c0       	push   $0xc01c46a8$/;"	l
c0108a2f	obj/kernel.asm	/^c0108a2f:	e8 16 0b 00 00       	call   c010954a <down>$/;"	l
c0108a34	obj/kernel.asm	/^c0108a34:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a37	obj/kernel.asm	/^c0108a37:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108a3a	obj/kernel.asm	/^c0108a3a:	c7 04 85 80 46 1c c0 	movl   $0x1,-0x3fe3b980(,%eax,4)$/;"	l
c0108a41	obj/kernel.asm	/^c0108a41:	01 00 00 00 $/;"	l
c0108a45	obj/kernel.asm	/^c0108a45:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108a48	obj/kernel.asm	/^c0108a48:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108a4b	obj/kernel.asm	/^c0108a4b:	e8 29 ff ff ff       	call   c0108979 <phi_test_sema>$/;"	l
c0108a50	obj/kernel.asm	/^c0108a50:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a53	obj/kernel.asm	/^c0108a53:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108a56	obj/kernel.asm	/^c0108a56:	68 a8 46 1c c0       	push   $0xc01c46a8$/;"	l
c0108a5b	obj/kernel.asm	/^c0108a5b:	e8 cf 0a 00 00       	call   c010952f <up>$/;"	l
c0108a60	obj/kernel.asm	/^c0108a60:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a63	obj/kernel.asm	/^c0108a63:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108a66	obj/kernel.asm	/^c0108a66:	89 d0                	mov    %edx,%eax$/;"	l
c0108a68	obj/kernel.asm	/^c0108a68:	01 c0                	add    %eax,%eax$/;"	l
c0108a6a	obj/kernel.asm	/^c0108a6a:	01 d0                	add    %edx,%eax$/;"	l
c0108a6c	obj/kernel.asm	/^c0108a6c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108a6f	obj/kernel.asm	/^c0108a6f:	05 20 47 1c c0       	add    $0xc01c4720,%eax$/;"	l
c0108a74	obj/kernel.asm	/^c0108a74:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108a77	obj/kernel.asm	/^c0108a77:	50                   	push   %eax$/;"	l
c0108a78	obj/kernel.asm	/^c0108a78:	e8 cd 0a 00 00       	call   c010954a <down>$/;"	l
c0108a7d	obj/kernel.asm	/^c0108a7d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a80	obj/kernel.asm	/^c0108a80:	c9                   	leave  $/;"	l
c0108a81	obj/kernel.asm	/^c0108a81:	c3                   	ret    $/;"	l
c0108a82	obj/kernel.asm	/^c0108a82 <phi_put_forks_sema>:$/;"	l
c0108a82	obj/kernel.asm	/^c0108a82:	55                   	push   %ebp$/;"	l
c0108a83	obj/kernel.asm	/^c0108a83:	89 e5                	mov    %esp,%ebp$/;"	l
c0108a85	obj/kernel.asm	/^c0108a85:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108a88	obj/kernel.asm	/^c0108a88:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108a8b	obj/kernel.asm	/^c0108a8b:	68 a8 46 1c c0       	push   $0xc01c46a8$/;"	l
c0108a90	obj/kernel.asm	/^c0108a90:	e8 b5 0a 00 00       	call   c010954a <down>$/;"	l
c0108a95	obj/kernel.asm	/^c0108a95:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a98	obj/kernel.asm	/^c0108a98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108a9b	obj/kernel.asm	/^c0108a9b:	c7 04 85 80 46 1c c0 	movl   $0x0,-0x3fe3b980(,%eax,4)$/;"	l
c0108aa2	obj/kernel.asm	/^c0108aa2:	00 00 00 00 $/;"	l
c0108aa6	obj/kernel.asm	/^c0108aa6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108aa9	obj/kernel.asm	/^c0108aa9:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0108aac	obj/kernel.asm	/^c0108aac:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0108ab1	obj/kernel.asm	/^c0108ab1:	89 c8                	mov    %ecx,%eax$/;"	l
c0108ab3	obj/kernel.asm	/^c0108ab3:	f7 ea                	imul   %edx$/;"	l
c0108ab5	obj/kernel.asm	/^c0108ab5:	d1 fa                	sar    %edx$/;"	d
c0108ab7	obj/kernel.asm	/^c0108ab7:	89 c8                	mov    %ecx,%eax$/;"	l
c0108ab9	obj/kernel.asm	/^c0108ab9:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0108abc	obj/kernel.asm	/^c0108abc:	29 c2                	sub    %eax,%edx$/;"	l
c0108abe	obj/kernel.asm	/^c0108abe:	89 d0                	mov    %edx,%eax$/;"	l
c0108ac0	obj/kernel.asm	/^c0108ac0:	89 c2                	mov    %eax,%edx$/;"	l
c0108ac2	obj/kernel.asm	/^c0108ac2:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0108ac5	obj/kernel.asm	/^c0108ac5:	01 c2                	add    %eax,%edx$/;"	l
c0108ac7	obj/kernel.asm	/^c0108ac7:	89 c8                	mov    %ecx,%eax$/;"	l
c0108ac9	obj/kernel.asm	/^c0108ac9:	29 d0                	sub    %edx,%eax$/;"	l
c0108acb	obj/kernel.asm	/^c0108acb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108ace	obj/kernel.asm	/^c0108ace:	50                   	push   %eax$/;"	l
c0108acf	obj/kernel.asm	/^c0108acf:	e8 a5 fe ff ff       	call   c0108979 <phi_test_sema>$/;"	l
c0108ad4	obj/kernel.asm	/^c0108ad4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108ad7	obj/kernel.asm	/^c0108ad7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108ada	obj/kernel.asm	/^c0108ada:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0108add	obj/kernel.asm	/^c0108add:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0108ae2	obj/kernel.asm	/^c0108ae2:	89 c8                	mov    %ecx,%eax$/;"	l
c0108ae4	obj/kernel.asm	/^c0108ae4:	f7 ea                	imul   %edx$/;"	l
c0108ae6	obj/kernel.asm	/^c0108ae6:	d1 fa                	sar    %edx$/;"	d
c0108ae8	obj/kernel.asm	/^c0108ae8:	89 c8                	mov    %ecx,%eax$/;"	l
c0108aea	obj/kernel.asm	/^c0108aea:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0108aed	obj/kernel.asm	/^c0108aed:	29 c2                	sub    %eax,%edx$/;"	l
c0108aef	obj/kernel.asm	/^c0108aef:	89 d0                	mov    %edx,%eax$/;"	l
c0108af1	obj/kernel.asm	/^c0108af1:	89 c2                	mov    %eax,%edx$/;"	l
c0108af3	obj/kernel.asm	/^c0108af3:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0108af6	obj/kernel.asm	/^c0108af6:	01 c2                	add    %eax,%edx$/;"	l
c0108af8	obj/kernel.asm	/^c0108af8:	89 c8                	mov    %ecx,%eax$/;"	l
c0108afa	obj/kernel.asm	/^c0108afa:	29 d0                	sub    %edx,%eax$/;"	l
c0108afc	obj/kernel.asm	/^c0108afc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108aff	obj/kernel.asm	/^c0108aff:	50                   	push   %eax$/;"	l
c0108b00	obj/kernel.asm	/^c0108b00:	e8 74 fe ff ff       	call   c0108979 <phi_test_sema>$/;"	l
c0108b05	obj/kernel.asm	/^c0108b05:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108b08	obj/kernel.asm	/^c0108b08:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108b0b	obj/kernel.asm	/^c0108b0b:	68 a8 46 1c c0       	push   $0xc01c46a8$/;"	l
c0108b10	obj/kernel.asm	/^c0108b10:	e8 1a 0a 00 00       	call   c010952f <up>$/;"	l
c0108b15	obj/kernel.asm	/^c0108b15:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108b18	obj/kernel.asm	/^c0108b18:	c9                   	leave  $/;"	l
c0108b19	obj/kernel.asm	/^c0108b19:	c3                   	ret    $/;"	l
c0108b1a	obj/kernel.asm	/^c0108b1a <philosopher_using_semaphore>:$/;"	l
c0108b1a	obj/kernel.asm	/^c0108b1a:	55                   	push   %ebp$/;"	l
c0108b1b	obj/kernel.asm	/^c0108b1b:	89 e5                	mov    %esp,%ebp$/;"	l
c0108b1d	obj/kernel.asm	/^c0108b1d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108b20	obj/kernel.asm	/^c0108b20:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108b27	obj/kernel.asm	/^c0108b27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108b2a	obj/kernel.asm	/^c0108b2a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108b2d	obj/kernel.asm	/^c0108b2d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108b30	obj/kernel.asm	/^c0108b30:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108b33	obj/kernel.asm	/^c0108b33:	68 80 eb 10 c0       	push   $0xc010eb80$/;"	l
c0108b38	obj/kernel.asm	/^c0108b38:	e8 3d 77 ff ff       	call   c010027a <cprintf>$/;"	l
c0108b3d	obj/kernel.asm	/^c0108b3d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108b40	obj/kernel.asm	/^c0108b40:	eb 62                	jmp    c0108ba4 <philosopher_using_semaphore+0x8a>$/;"	l
c0108b42	obj/kernel.asm	/^c0108b42:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108b45	obj/kernel.asm	/^c0108b45:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108b48	obj/kernel.asm	/^c0108b48:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108b4b	obj/kernel.asm	/^c0108b4b:	68 a0 eb 10 c0       	push   $0xc010eba0$/;"	l
c0108b50	obj/kernel.asm	/^c0108b50:	e8 25 77 ff ff       	call   c010027a <cprintf>$/;"	l
c0108b55	obj/kernel.asm	/^c0108b55:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108b58	obj/kernel.asm	/^c0108b58:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108b5b	obj/kernel.asm	/^c0108b5b:	6a 0a                	push   $0xa$/;"	l
c0108b5d	obj/kernel.asm	/^c0108b5d:	e8 d0 28 00 00       	call   c010b432 <do_sleep>$/;"	l
c0108b62	obj/kernel.asm	/^c0108b62:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108b65	obj/kernel.asm	/^c0108b65:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108b68	obj/kernel.asm	/^c0108b68:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108b6b	obj/kernel.asm	/^c0108b6b:	e8 b1 fe ff ff       	call   c0108a21 <phi_take_forks_sema>$/;"	l
c0108b70	obj/kernel.asm	/^c0108b70:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108b73	obj/kernel.asm	/^c0108b73:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108b76	obj/kernel.asm	/^c0108b76:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108b79	obj/kernel.asm	/^c0108b79:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108b7c	obj/kernel.asm	/^c0108b7c:	68 d0 eb 10 c0       	push   $0xc010ebd0$/;"	l
c0108b81	obj/kernel.asm	/^c0108b81:	e8 f4 76 ff ff       	call   c010027a <cprintf>$/;"	l
c0108b86	obj/kernel.asm	/^c0108b86:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108b89	obj/kernel.asm	/^c0108b89:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108b8c	obj/kernel.asm	/^c0108b8c:	6a 0a                	push   $0xa$/;"	l
c0108b8e	obj/kernel.asm	/^c0108b8e:	e8 9f 28 00 00       	call   c010b432 <do_sleep>$/;"	l
c0108b93	obj/kernel.asm	/^c0108b93:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108b96	obj/kernel.asm	/^c0108b96:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108b99	obj/kernel.asm	/^c0108b99:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108b9c	obj/kernel.asm	/^c0108b9c:	e8 e1 fe ff ff       	call   c0108a82 <phi_put_forks_sema>$/;"	l
c0108ba1	obj/kernel.asm	/^c0108ba1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108ba4	obj/kernel.asm	/^c0108ba4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108ba7	obj/kernel.asm	/^c0108ba7:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0108baa	obj/kernel.asm	/^c0108baa:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0108bad	obj/kernel.asm	/^c0108bad:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0108bb0	obj/kernel.asm	/^c0108bb0:	7e 90                	jle    c0108b42 <philosopher_using_semaphore+0x28>$/;"	l
c0108bb2	obj/kernel.asm	/^c0108bb2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108bb5	obj/kernel.asm	/^c0108bb5:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108bb8	obj/kernel.asm	/^c0108bb8:	68 fb eb 10 c0       	push   $0xc010ebfb$/;"	l
c0108bbd	obj/kernel.asm	/^c0108bbd:	e8 b8 76 ff ff       	call   c010027a <cprintf>$/;"	l
c0108bc2	obj/kernel.asm	/^c0108bc2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108bc5	obj/kernel.asm	/^c0108bc5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108bca	obj/kernel.asm	/^c0108bca:	c9                   	leave  $/;"	l
c0108bcb	obj/kernel.asm	/^c0108bcb:	c3                   	ret    $/;"	l
c0108bcc	obj/kernel.asm	/^c0108bcc <phi_test_condvar>:$/;"	l
c0108bcc	obj/kernel.asm	/^c0108bcc:	55                   	push   %ebp$/;"	l
c0108bcd	obj/kernel.asm	/^c0108bcd:	89 e5                	mov    %esp,%ebp$/;"	l
c0108bcf	obj/kernel.asm	/^c0108bcf:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108bd2	obj/kernel.asm	/^c0108bd2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108bd5	obj/kernel.asm	/^c0108bd5:	8b 04 85 e0 46 1c c0 	mov    -0x3fe3b920(,%eax,4),%eax$/;"	l
c0108bdc	obj/kernel.asm	/^c0108bdc:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0108bdf	obj/kernel.asm	/^c0108bdf:	0f 85 bd 00 00 00    	jne    c0108ca2 <phi_test_condvar+0xd6>$/;"	l
c0108be5	obj/kernel.asm	/^c0108be5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108be8	obj/kernel.asm	/^c0108be8:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0108beb	obj/kernel.asm	/^c0108beb:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0108bf0	obj/kernel.asm	/^c0108bf0:	89 c8                	mov    %ecx,%eax$/;"	l
c0108bf2	obj/kernel.asm	/^c0108bf2:	f7 ea                	imul   %edx$/;"	l
c0108bf4	obj/kernel.asm	/^c0108bf4:	d1 fa                	sar    %edx$/;"	d
c0108bf6	obj/kernel.asm	/^c0108bf6:	89 c8                	mov    %ecx,%eax$/;"	l
c0108bf8	obj/kernel.asm	/^c0108bf8:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0108bfb	obj/kernel.asm	/^c0108bfb:	29 c2                	sub    %eax,%edx$/;"	l
c0108bfd	obj/kernel.asm	/^c0108bfd:	89 d0                	mov    %edx,%eax$/;"	l
c0108bff	obj/kernel.asm	/^c0108bff:	89 c2                	mov    %eax,%edx$/;"	l
c0108c01	obj/kernel.asm	/^c0108c01:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0108c04	obj/kernel.asm	/^c0108c04:	01 c2                	add    %eax,%edx$/;"	l
c0108c06	obj/kernel.asm	/^c0108c06:	89 c8                	mov    %ecx,%eax$/;"	l
c0108c08	obj/kernel.asm	/^c0108c08:	29 d0                	sub    %edx,%eax$/;"	l
c0108c0a	obj/kernel.asm	/^c0108c0a:	8b 04 85 e0 46 1c c0 	mov    -0x3fe3b920(,%eax,4),%eax$/;"	l
c0108c11	obj/kernel.asm	/^c0108c11:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0108c14	obj/kernel.asm	/^c0108c14:	0f 84 88 00 00 00    	je     c0108ca2 <phi_test_condvar+0xd6>$/;"	l
c0108c1a	obj/kernel.asm	/^c0108c1a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108c1d	obj/kernel.asm	/^c0108c1d:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0108c20	obj/kernel.asm	/^c0108c20:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0108c25	obj/kernel.asm	/^c0108c25:	89 c8                	mov    %ecx,%eax$/;"	l
c0108c27	obj/kernel.asm	/^c0108c27:	f7 ea                	imul   %edx$/;"	l
c0108c29	obj/kernel.asm	/^c0108c29:	d1 fa                	sar    %edx$/;"	d
c0108c2b	obj/kernel.asm	/^c0108c2b:	89 c8                	mov    %ecx,%eax$/;"	l
c0108c2d	obj/kernel.asm	/^c0108c2d:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0108c30	obj/kernel.asm	/^c0108c30:	29 c2                	sub    %eax,%edx$/;"	l
c0108c32	obj/kernel.asm	/^c0108c32:	89 d0                	mov    %edx,%eax$/;"	l
c0108c34	obj/kernel.asm	/^c0108c34:	89 c2                	mov    %eax,%edx$/;"	l
c0108c36	obj/kernel.asm	/^c0108c36:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0108c39	obj/kernel.asm	/^c0108c39:	01 c2                	add    %eax,%edx$/;"	l
c0108c3b	obj/kernel.asm	/^c0108c3b:	89 c8                	mov    %ecx,%eax$/;"	l
c0108c3d	obj/kernel.asm	/^c0108c3d:	29 d0                	sub    %edx,%eax$/;"	l
c0108c3f	obj/kernel.asm	/^c0108c3f:	8b 04 85 e0 46 1c c0 	mov    -0x3fe3b920(,%eax,4),%eax$/;"	l
c0108c46	obj/kernel.asm	/^c0108c46:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0108c49	obj/kernel.asm	/^c0108c49:	74 57                	je     c0108ca2 <phi_test_condvar+0xd6>$/;"	l
c0108c4b	obj/kernel.asm	/^c0108c4b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108c4e	obj/kernel.asm	/^c0108c4e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108c51	obj/kernel.asm	/^c0108c51:	68 18 ec 10 c0       	push   $0xc010ec18$/;"	l
c0108c56	obj/kernel.asm	/^c0108c56:	e8 1f 76 ff ff       	call   c010027a <cprintf>$/;"	l
c0108c5b	obj/kernel.asm	/^c0108c5b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108c5e	obj/kernel.asm	/^c0108c5e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108c61	obj/kernel.asm	/^c0108c61:	c7 04 85 e0 46 1c c0 	movl   $0x2,-0x3fe3b920(,%eax,4)$/;"	l
c0108c68	obj/kernel.asm	/^c0108c68:	02 00 00 00 $/;"	l
c0108c6c	obj/kernel.asm	/^c0108c6c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108c6f	obj/kernel.asm	/^c0108c6f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108c72	obj/kernel.asm	/^c0108c72:	68 4c ec 10 c0       	push   $0xc010ec4c$/;"	l
c0108c77	obj/kernel.asm	/^c0108c77:	e8 fe 75 ff ff       	call   c010027a <cprintf>$/;"	l
c0108c7c	obj/kernel.asm	/^c0108c7c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108c7f	obj/kernel.asm	/^c0108c7f:	a1 e0 0a 13 c0       	mov    0xc0130ae0,%eax$/;"	l
c0108c84	obj/kernel.asm	/^c0108c84:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c0108c87	obj/kernel.asm	/^c0108c87:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108c8a	obj/kernel.asm	/^c0108c8a:	89 d0                	mov    %edx,%eax$/;"	l
c0108c8c	obj/kernel.asm	/^c0108c8c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108c8f	obj/kernel.asm	/^c0108c8f:	01 d0                	add    %edx,%eax$/;"	l
c0108c91	obj/kernel.asm	/^c0108c91:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108c94	obj/kernel.asm	/^c0108c94:	01 c8                	add    %ecx,%eax$/;"	l
c0108c96	obj/kernel.asm	/^c0108c96:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108c99	obj/kernel.asm	/^c0108c99:	50                   	push   %eax$/;"	l
c0108c9a	obj/kernel.asm	/^c0108c9a:	e8 38 0a 00 00       	call   c01096d7 <cond_signal>$/;"	l
c0108c9f	obj/kernel.asm	/^c0108c9f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108ca2	obj/kernel.asm	/^c0108ca2:	c9                   	leave  $/;"	l
c0108ca3	obj/kernel.asm	/^c0108ca3:	c3                   	ret    $/;"	l
c0108ca4	obj/kernel.asm	/^c0108ca4 <phi_take_forks_condvar>:$/;"	l
c0108ca4	obj/kernel.asm	/^c0108ca4:	55                   	push   %ebp$/;"	l
c0108ca5	obj/kernel.asm	/^c0108ca5:	89 e5                	mov    %esp,%ebp$/;"	l
c0108ca7	obj/kernel.asm	/^c0108ca7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108caa	obj/kernel.asm	/^c0108caa:	a1 e0 0a 13 c0       	mov    0xc0130ae0,%eax$/;"	l
c0108caf	obj/kernel.asm	/^c0108caf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108cb2	obj/kernel.asm	/^c0108cb2:	50                   	push   %eax$/;"	l
c0108cb3	obj/kernel.asm	/^c0108cb3:	e8 92 08 00 00       	call   c010954a <down>$/;"	l
c0108cb8	obj/kernel.asm	/^c0108cb8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108cbb	obj/kernel.asm	/^c0108cbb:	a1 e0 0a 13 c0       	mov    0xc0130ae0,%eax$/;"	l
c0108cc0	obj/kernel.asm	/^c0108cc0:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0108cc3	obj/kernel.asm	/^c0108cc3:	85 c0                	test   %eax,%eax$/;"	l
c0108cc5	obj/kernel.asm	/^c0108cc5:	7e 16                	jle    c0108cdd <phi_take_forks_condvar+0x39>$/;"	l
c0108cc7	obj/kernel.asm	/^c0108cc7:	a1 e0 0a 13 c0       	mov    0xc0130ae0,%eax$/;"	l
c0108ccc	obj/kernel.asm	/^c0108ccc:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0108ccf	obj/kernel.asm	/^c0108ccf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108cd2	obj/kernel.asm	/^c0108cd2:	50                   	push   %eax$/;"	l
c0108cd3	obj/kernel.asm	/^c0108cd3:	e8 57 08 00 00       	call   c010952f <up>$/;"	l
c0108cd8	obj/kernel.asm	/^c0108cd8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108cdb	obj/kernel.asm	/^c0108cdb:	eb 11                	jmp    c0108cee <phi_take_forks_condvar+0x4a>$/;"	l
c0108cdd	obj/kernel.asm	/^c0108cdd:	a1 e0 0a 13 c0       	mov    0xc0130ae0,%eax$/;"	l
c0108ce2	obj/kernel.asm	/^c0108ce2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108ce5	obj/kernel.asm	/^c0108ce5:	50                   	push   %eax$/;"	l
c0108ce6	obj/kernel.asm	/^c0108ce6:	e8 44 08 00 00       	call   c010952f <up>$/;"	l
c0108ceb	obj/kernel.asm	/^c0108ceb:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108cee	obj/kernel.asm	/^c0108cee:	c9                   	leave  $/;"	l
c0108cef	obj/kernel.asm	/^c0108cef:	c3                   	ret    $/;"	l
c0108cf0	obj/kernel.asm	/^c0108cf0 <phi_put_forks_condvar>:$/;"	l
c0108cf0	obj/kernel.asm	/^c0108cf0:	55                   	push   %ebp$/;"	l
c0108cf1	obj/kernel.asm	/^c0108cf1:	89 e5                	mov    %esp,%ebp$/;"	l
c0108cf3	obj/kernel.asm	/^c0108cf3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108cf6	obj/kernel.asm	/^c0108cf6:	a1 e0 0a 13 c0       	mov    0xc0130ae0,%eax$/;"	l
c0108cfb	obj/kernel.asm	/^c0108cfb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108cfe	obj/kernel.asm	/^c0108cfe:	50                   	push   %eax$/;"	l
c0108cff	obj/kernel.asm	/^c0108cff:	e8 46 08 00 00       	call   c010954a <down>$/;"	l
c0108d04	obj/kernel.asm	/^c0108d04:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d07	obj/kernel.asm	/^c0108d07:	a1 e0 0a 13 c0       	mov    0xc0130ae0,%eax$/;"	l
c0108d0c	obj/kernel.asm	/^c0108d0c:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0108d0f	obj/kernel.asm	/^c0108d0f:	85 c0                	test   %eax,%eax$/;"	l
c0108d11	obj/kernel.asm	/^c0108d11:	7e 16                	jle    c0108d29 <phi_put_forks_condvar+0x39>$/;"	l
c0108d13	obj/kernel.asm	/^c0108d13:	a1 e0 0a 13 c0       	mov    0xc0130ae0,%eax$/;"	l
c0108d18	obj/kernel.asm	/^c0108d18:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0108d1b	obj/kernel.asm	/^c0108d1b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108d1e	obj/kernel.asm	/^c0108d1e:	50                   	push   %eax$/;"	l
c0108d1f	obj/kernel.asm	/^c0108d1f:	e8 0b 08 00 00       	call   c010952f <up>$/;"	l
c0108d24	obj/kernel.asm	/^c0108d24:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d27	obj/kernel.asm	/^c0108d27:	eb 11                	jmp    c0108d3a <phi_put_forks_condvar+0x4a>$/;"	l
c0108d29	obj/kernel.asm	/^c0108d29:	a1 e0 0a 13 c0       	mov    0xc0130ae0,%eax$/;"	l
c0108d2e	obj/kernel.asm	/^c0108d2e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108d31	obj/kernel.asm	/^c0108d31:	50                   	push   %eax$/;"	l
c0108d32	obj/kernel.asm	/^c0108d32:	e8 f8 07 00 00       	call   c010952f <up>$/;"	l
c0108d37	obj/kernel.asm	/^c0108d37:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d3a	obj/kernel.asm	/^c0108d3a:	c9                   	leave  $/;"	l
c0108d3b	obj/kernel.asm	/^c0108d3b:	c3                   	ret    $/;"	l
c0108d3c	obj/kernel.asm	/^c0108d3c <philosopher_using_condvar>:$/;"	l
c0108d3c	obj/kernel.asm	/^c0108d3c:	55                   	push   %ebp$/;"	l
c0108d3d	obj/kernel.asm	/^c0108d3d:	89 e5                	mov    %esp,%ebp$/;"	l
c0108d3f	obj/kernel.asm	/^c0108d3f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108d42	obj/kernel.asm	/^c0108d42:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108d49	obj/kernel.asm	/^c0108d49:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108d4c	obj/kernel.asm	/^c0108d4c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108d4f	obj/kernel.asm	/^c0108d4f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108d52	obj/kernel.asm	/^c0108d52:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108d55	obj/kernel.asm	/^c0108d55:	68 74 ec 10 c0       	push   $0xc010ec74$/;"	l
c0108d5a	obj/kernel.asm	/^c0108d5a:	e8 1b 75 ff ff       	call   c010027a <cprintf>$/;"	l
c0108d5f	obj/kernel.asm	/^c0108d5f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d62	obj/kernel.asm	/^c0108d62:	eb 62                	jmp    c0108dc6 <philosopher_using_condvar+0x8a>$/;"	l
c0108d64	obj/kernel.asm	/^c0108d64:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108d67	obj/kernel.asm	/^c0108d67:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108d6a	obj/kernel.asm	/^c0108d6a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108d6d	obj/kernel.asm	/^c0108d6d:	68 94 ec 10 c0       	push   $0xc010ec94$/;"	l
c0108d72	obj/kernel.asm	/^c0108d72:	e8 03 75 ff ff       	call   c010027a <cprintf>$/;"	l
c0108d77	obj/kernel.asm	/^c0108d77:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d7a	obj/kernel.asm	/^c0108d7a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108d7d	obj/kernel.asm	/^c0108d7d:	6a 0a                	push   $0xa$/;"	l
c0108d7f	obj/kernel.asm	/^c0108d7f:	e8 ae 26 00 00       	call   c010b432 <do_sleep>$/;"	l
c0108d84	obj/kernel.asm	/^c0108d84:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d87	obj/kernel.asm	/^c0108d87:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108d8a	obj/kernel.asm	/^c0108d8a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108d8d	obj/kernel.asm	/^c0108d8d:	e8 12 ff ff ff       	call   c0108ca4 <phi_take_forks_condvar>$/;"	l
c0108d92	obj/kernel.asm	/^c0108d92:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d95	obj/kernel.asm	/^c0108d95:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108d98	obj/kernel.asm	/^c0108d98:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108d9b	obj/kernel.asm	/^c0108d9b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108d9e	obj/kernel.asm	/^c0108d9e:	68 c4 ec 10 c0       	push   $0xc010ecc4$/;"	l
c0108da3	obj/kernel.asm	/^c0108da3:	e8 d2 74 ff ff       	call   c010027a <cprintf>$/;"	l
c0108da8	obj/kernel.asm	/^c0108da8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108dab	obj/kernel.asm	/^c0108dab:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108dae	obj/kernel.asm	/^c0108dae:	6a 0a                	push   $0xa$/;"	l
c0108db0	obj/kernel.asm	/^c0108db0:	e8 7d 26 00 00       	call   c010b432 <do_sleep>$/;"	l
c0108db5	obj/kernel.asm	/^c0108db5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108db8	obj/kernel.asm	/^c0108db8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108dbb	obj/kernel.asm	/^c0108dbb:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108dbe	obj/kernel.asm	/^c0108dbe:	e8 2d ff ff ff       	call   c0108cf0 <phi_put_forks_condvar>$/;"	l
c0108dc3	obj/kernel.asm	/^c0108dc3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108dc6	obj/kernel.asm	/^c0108dc6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108dc9	obj/kernel.asm	/^c0108dc9:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0108dcc	obj/kernel.asm	/^c0108dcc:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0108dcf	obj/kernel.asm	/^c0108dcf:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0108dd2	obj/kernel.asm	/^c0108dd2:	7e 90                	jle    c0108d64 <philosopher_using_condvar+0x28>$/;"	l
c0108dd4	obj/kernel.asm	/^c0108dd4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108dd7	obj/kernel.asm	/^c0108dd7:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108dda	obj/kernel.asm	/^c0108dda:	68 f4 ec 10 c0       	push   $0xc010ecf4$/;"	l
c0108ddf	obj/kernel.asm	/^c0108ddf:	e8 96 74 ff ff       	call   c010027a <cprintf>$/;"	l
c0108de4	obj/kernel.asm	/^c0108de4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108de7	obj/kernel.asm	/^c0108de7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108dec	obj/kernel.asm	/^c0108dec:	c9                   	leave  $/;"	l
c0108ded	obj/kernel.asm	/^c0108ded:	c3                   	ret    $/;"	l
c0108dee	obj/kernel.asm	/^c0108dee <check_sync>:$/;"	l
c0108dee	obj/kernel.asm	/^c0108dee:	55                   	push   %ebp$/;"	l
c0108def	obj/kernel.asm	/^c0108def:	89 e5                	mov    %esp,%ebp$/;"	l
c0108df1	obj/kernel.asm	/^c0108df1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108df4	obj/kernel.asm	/^c0108df4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108df7	obj/kernel.asm	/^c0108df7:	6a 01                	push   $0x1$/;"	l
c0108df9	obj/kernel.asm	/^c0108df9:	68 a8 46 1c c0       	push   $0xc01c46a8$/;"	l
c0108dfe	obj/kernel.asm	/^c0108dfe:	e8 c1 05 00 00       	call   c01093c4 <sem_init>$/;"	l
c0108e03	obj/kernel.asm	/^c0108e03:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e06	obj/kernel.asm	/^c0108e06:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108e0d	obj/kernel.asm	/^c0108e0d:	e9 8e 00 00 00       	jmp    c0108ea0 <check_sync+0xb2>$/;"	l
c0108e12	obj/kernel.asm	/^c0108e12:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108e15	obj/kernel.asm	/^c0108e15:	89 d0                	mov    %edx,%eax$/;"	l
c0108e17	obj/kernel.asm	/^c0108e17:	01 c0                	add    %eax,%eax$/;"	l
c0108e19	obj/kernel.asm	/^c0108e19:	01 d0                	add    %edx,%eax$/;"	l
c0108e1b	obj/kernel.asm	/^c0108e1b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108e1e	obj/kernel.asm	/^c0108e1e:	05 20 47 1c c0       	add    $0xc01c4720,%eax$/;"	l
c0108e23	obj/kernel.asm	/^c0108e23:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108e26	obj/kernel.asm	/^c0108e26:	6a 00                	push   $0x0$/;"	l
c0108e28	obj/kernel.asm	/^c0108e28:	50                   	push   %eax$/;"	l
c0108e29	obj/kernel.asm	/^c0108e29:	e8 96 05 00 00       	call   c01093c4 <sem_init>$/;"	l
c0108e2e	obj/kernel.asm	/^c0108e2e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e31	obj/kernel.asm	/^c0108e31:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e34	obj/kernel.asm	/^c0108e34:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108e37	obj/kernel.asm	/^c0108e37:	6a 00                	push   $0x0$/;"	l
c0108e39	obj/kernel.asm	/^c0108e39:	50                   	push   %eax$/;"	l
c0108e3a	obj/kernel.asm	/^c0108e3a:	68 1a 8b 10 c0       	push   $0xc0108b1a$/;"	l
c0108e3f	obj/kernel.asm	/^c0108e3f:	e8 ac 12 00 00       	call   c010a0f0 <kernel_thread>$/;"	l
c0108e44	obj/kernel.asm	/^c0108e44:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e47	obj/kernel.asm	/^c0108e47:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108e4a	obj/kernel.asm	/^c0108e4a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0108e4e	obj/kernel.asm	/^c0108e4e:	7f 17                	jg     c0108e67 <check_sync+0x79>$/;"	l
c0108e50	obj/kernel.asm	/^c0108e50:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108e53	obj/kernel.asm	/^c0108e53:	68 14 ed 10 c0       	push   $0xc010ed14$/;"	l
c0108e58	obj/kernel.asm	/^c0108e58:	68 b3 00 00 00       	push   $0xb3$/;"	l
c0108e5d	obj/kernel.asm	/^c0108e5d:	68 46 ed 10 c0       	push   $0xc010ed46$/;"	l
c0108e62	obj/kernel.asm	/^c0108e62:	e8 78 75 ff ff       	call   c01003df <__panic>$/;"	l
c0108e67	obj/kernel.asm	/^c0108e67:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108e6a	obj/kernel.asm	/^c0108e6a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108e6d	obj/kernel.asm	/^c0108e6d:	e8 0c 12 00 00       	call   c010a07e <find_proc>$/;"	l
c0108e72	obj/kernel.asm	/^c0108e72:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e75	obj/kernel.asm	/^c0108e75:	89 c2                	mov    %eax,%edx$/;"	l
c0108e77	obj/kernel.asm	/^c0108e77:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e7a	obj/kernel.asm	/^c0108e7a:	89 14 85 f4 46 1c c0 	mov    %edx,-0x3fe3b90c(,%eax,4)$/;"	l
c0108e81	obj/kernel.asm	/^c0108e81:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e84	obj/kernel.asm	/^c0108e84:	8b 04 85 f4 46 1c c0 	mov    -0x3fe3b90c(,%eax,4),%eax$/;"	l
c0108e8b	obj/kernel.asm	/^c0108e8b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108e8e	obj/kernel.asm	/^c0108e8e:	68 5d ed 10 c0       	push   $0xc010ed5d$/;"	l
c0108e93	obj/kernel.asm	/^c0108e93:	50                   	push   %eax$/;"	l
c0108e94	obj/kernel.asm	/^c0108e94:	e8 de 0d 00 00       	call   c0109c77 <set_proc_name>$/;"	l
c0108e99	obj/kernel.asm	/^c0108e99:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e9c	obj/kernel.asm	/^c0108e9c:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108ea0	obj/kernel.asm	/^c0108ea0:	83 7d f4 04          	cmpl   $0x4,-0xc(%ebp)$/;"	l
c0108ea4	obj/kernel.asm	/^c0108ea4:	0f 8e 68 ff ff ff    	jle    c0108e12 <check_sync+0x24>$/;"	l
c0108eaa	obj/kernel.asm	/^c0108eaa:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108ead	obj/kernel.asm	/^c0108ead:	6a 05                	push   $0x5$/;"	l
c0108eaf	obj/kernel.asm	/^c0108eaf:	68 c0 46 1c c0       	push   $0xc01c46c0$/;"	l
c0108eb4	obj/kernel.asm	/^c0108eb4:	e8 10 07 00 00       	call   c01095c9 <monitor_init>$/;"	l
c0108eb9	obj/kernel.asm	/^c0108eb9:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108ebc	obj/kernel.asm	/^c0108ebc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108ec3	obj/kernel.asm	/^c0108ec3:	eb 7d                	jmp    c0108f42 <check_sync+0x154>$/;"	l
c0108ec5	obj/kernel.asm	/^c0108ec5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108ec8	obj/kernel.asm	/^c0108ec8:	c7 04 85 e0 46 1c c0 	movl   $0x0,-0x3fe3b920(,%eax,4)$/;"	l
c0108ecf	obj/kernel.asm	/^c0108ecf:	00 00 00 00 $/;"	l
c0108ed3	obj/kernel.asm	/^c0108ed3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108ed6	obj/kernel.asm	/^c0108ed6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108ed9	obj/kernel.asm	/^c0108ed9:	6a 00                	push   $0x0$/;"	l
c0108edb	obj/kernel.asm	/^c0108edb:	50                   	push   %eax$/;"	l
c0108edc	obj/kernel.asm	/^c0108edc:	68 3c 8d 10 c0       	push   $0xc0108d3c$/;"	l
c0108ee1	obj/kernel.asm	/^c0108ee1:	e8 0a 12 00 00       	call   c010a0f0 <kernel_thread>$/;"	l
c0108ee6	obj/kernel.asm	/^c0108ee6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108ee9	obj/kernel.asm	/^c0108ee9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108eec	obj/kernel.asm	/^c0108eec:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0108ef0	obj/kernel.asm	/^c0108ef0:	7f 17                	jg     c0108f09 <check_sync+0x11b>$/;"	l
c0108ef2	obj/kernel.asm	/^c0108ef2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108ef5	obj/kernel.asm	/^c0108ef5:	68 74 ed 10 c0       	push   $0xc010ed74$/;"	l
c0108efa	obj/kernel.asm	/^c0108efa:	68 bf 00 00 00       	push   $0xbf$/;"	l
c0108eff	obj/kernel.asm	/^c0108eff:	68 46 ed 10 c0       	push   $0xc010ed46$/;"	l
c0108f04	obj/kernel.asm	/^c0108f04:	e8 d6 74 ff ff       	call   c01003df <__panic>$/;"	l
c0108f09	obj/kernel.asm	/^c0108f09:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108f0c	obj/kernel.asm	/^c0108f0c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0108f0f	obj/kernel.asm	/^c0108f0f:	e8 6a 11 00 00       	call   c010a07e <find_proc>$/;"	l
c0108f14	obj/kernel.asm	/^c0108f14:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108f17	obj/kernel.asm	/^c0108f17:	89 c2                	mov    %eax,%edx$/;"	l
c0108f19	obj/kernel.asm	/^c0108f19:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108f1c	obj/kernel.asm	/^c0108f1c:	89 14 85 94 46 1c c0 	mov    %edx,-0x3fe3b96c(,%eax,4)$/;"	l
c0108f23	obj/kernel.asm	/^c0108f23:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108f26	obj/kernel.asm	/^c0108f26:	8b 04 85 94 46 1c c0 	mov    -0x3fe3b96c(,%eax,4),%eax$/;"	l
c0108f2d	obj/kernel.asm	/^c0108f2d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108f30	obj/kernel.asm	/^c0108f30:	68 a4 ed 10 c0       	push   $0xc010eda4$/;"	l
c0108f35	obj/kernel.asm	/^c0108f35:	50                   	push   %eax$/;"	l
c0108f36	obj/kernel.asm	/^c0108f36:	e8 3c 0d 00 00       	call   c0109c77 <set_proc_name>$/;"	l
c0108f3b	obj/kernel.asm	/^c0108f3b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108f3e	obj/kernel.asm	/^c0108f3e:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108f42	obj/kernel.asm	/^c0108f42:	83 7d f4 04          	cmpl   $0x4,-0xc(%ebp)$/;"	l
c0108f46	obj/kernel.asm	/^c0108f46:	0f 8e 79 ff ff ff    	jle    c0108ec5 <check_sync+0xd7>$/;"	l
c0108f4c	obj/kernel.asm	/^c0108f4c:	c9                   	leave  $/;"	l
c0108f4d	obj/kernel.asm	/^c0108f4d:	c3                   	ret    $/;"	l
c0108f4e	obj/kernel.asm	/^c0108f4e <wait_init>:$/;"	l
c0108f4e	obj/kernel.asm	/^c0108f4e:	55                   	push   %ebp$/;"	l
c0108f4f	obj/kernel.asm	/^c0108f4f:	89 e5                	mov    %esp,%ebp$/;"	l
c0108f51	obj/kernel.asm	/^c0108f51:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0108f54	obj/kernel.asm	/^c0108f54:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f57	obj/kernel.asm	/^c0108f57:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108f5a	obj/kernel.asm	/^c0108f5a:	89 10                	mov    %edx,(%eax)$/;"	l
c0108f5c	obj/kernel.asm	/^c0108f5c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f5f	obj/kernel.asm	/^c0108f5f:	c7 40 04 00 00 00 80 	movl   $0x80000000,0x4(%eax)$/;"	l
c0108f66	obj/kernel.asm	/^c0108f66:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f69	obj/kernel.asm	/^c0108f69:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0108f6c	obj/kernel.asm	/^c0108f6c:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0108f6f	obj/kernel.asm	/^c0108f6f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108f72	obj/kernel.asm	/^c0108f72:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0108f75	obj/kernel.asm	/^c0108f75:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108f78	obj/kernel.asm	/^c0108f78:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108f7b	obj/kernel.asm	/^c0108f7b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108f7e	obj/kernel.asm	/^c0108f7e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108f81	obj/kernel.asm	/^c0108f81:	89 10                	mov    %edx,(%eax)$/;"	l
c0108f83	obj/kernel.asm	/^c0108f83:	c9                   	leave  $/;"	l
c0108f84	obj/kernel.asm	/^c0108f84:	c3                   	ret    $/;"	l
c0108f85	obj/kernel.asm	/^c0108f85 <wait_queue_init>:$/;"	l
c0108f85	obj/kernel.asm	/^c0108f85:	55                   	push   %ebp$/;"	l
c0108f86	obj/kernel.asm	/^c0108f86:	89 e5                	mov    %esp,%ebp$/;"	l
c0108f88	obj/kernel.asm	/^c0108f88:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0108f8b	obj/kernel.asm	/^c0108f8b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f8e	obj/kernel.asm	/^c0108f8e:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0108f91	obj/kernel.asm	/^c0108f91:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108f94	obj/kernel.asm	/^c0108f94:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0108f97	obj/kernel.asm	/^c0108f97:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108f9a	obj/kernel.asm	/^c0108f9a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108f9d	obj/kernel.asm	/^c0108f9d:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108fa0	obj/kernel.asm	/^c0108fa0:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108fa3	obj/kernel.asm	/^c0108fa3:	89 10                	mov    %edx,(%eax)$/;"	l
c0108fa5	obj/kernel.asm	/^c0108fa5:	c9                   	leave  $/;"	l
c0108fa6	obj/kernel.asm	/^c0108fa6:	c3                   	ret    $/;"	l
c0108fa7	obj/kernel.asm	/^c0108fa7 <wait_queue_add>:$/;"	l
c0108fa7	obj/kernel.asm	/^c0108fa7:	55                   	push   %ebp$/;"	l
c0108fa8	obj/kernel.asm	/^c0108fa8:	89 e5                	mov    %esp,%ebp$/;"	l
c0108faa	obj/kernel.asm	/^c0108faa:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0108fad	obj/kernel.asm	/^c0108fad:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108fb0	obj/kernel.asm	/^c0108fb0:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0108fb3	obj/kernel.asm	/^c0108fb3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108fb6	obj/kernel.asm	/^c0108fb6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108fb9	obj/kernel.asm	/^c0108fb9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108fbc	obj/kernel.asm	/^c0108fbc:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c0108fbf	obj/kernel.asm	/^c0108fbf:	0f 94 c0             	sete   %al$/;"	l
c0108fc2	obj/kernel.asm	/^c0108fc2:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108fc5	obj/kernel.asm	/^c0108fc5:	85 c0                	test   %eax,%eax$/;"	l
c0108fc7	obj/kernel.asm	/^c0108fc7:	74 09                	je     c0108fd2 <wait_queue_add+0x2b>$/;"	l
c0108fc9	obj/kernel.asm	/^c0108fc9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108fcc	obj/kernel.asm	/^c0108fcc:	8b 00                	mov    (%eax),%eax$/;"	l
c0108fce	obj/kernel.asm	/^c0108fce:	85 c0                	test   %eax,%eax$/;"	l
c0108fd0	obj/kernel.asm	/^c0108fd0:	75 16                	jne    c0108fe8 <wait_queue_add+0x41>$/;"	l
c0108fd2	obj/kernel.asm	/^c0108fd2:	68 c0 ed 10 c0       	push   $0xc010edc0$/;"	l
c0108fd7	obj/kernel.asm	/^c0108fd7:	68 f5 ed 10 c0       	push   $0xc010edf5$/;"	l
c0108fdc	obj/kernel.asm	/^c0108fdc:	6a 15                	push   $0x15$/;"	l
c0108fde	obj/kernel.asm	/^c0108fde:	68 0a ee 10 c0       	push   $0xc010ee0a$/;"	l
c0108fe3	obj/kernel.asm	/^c0108fe3:	e8 f7 73 ff ff       	call   c01003df <__panic>$/;"	l
c0108fe8	obj/kernel.asm	/^c0108fe8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108feb	obj/kernel.asm	/^c0108feb:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108fee	obj/kernel.asm	/^c0108fee:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0108ff1	obj/kernel.asm	/^c0108ff1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108ff4	obj/kernel.asm	/^c0108ff4:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0108ff7	obj/kernel.asm	/^c0108ff7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108ffa	obj/kernel.asm	/^c0108ffa:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108ffd	obj/kernel.asm	/^c0108ffd:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0109000	obj/kernel.asm	/^c0109000:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109003	obj/kernel.asm	/^c0109003:	8b 00                	mov    (%eax),%eax$/;"	l
c0109005	obj/kernel.asm	/^c0109005:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109008	obj/kernel.asm	/^c0109008:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010900b	obj/kernel.asm	/^c010900b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010900e	obj/kernel.asm	/^c010900e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109011	obj/kernel.asm	/^c0109011:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0109014	obj/kernel.asm	/^c0109014:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109017	obj/kernel.asm	/^c0109017:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010901a	obj/kernel.asm	/^c010901a:	89 10                	mov    %edx,(%eax)$/;"	l
c010901c	obj/kernel.asm	/^c010901c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010901f	obj/kernel.asm	/^c010901f:	8b 10                	mov    (%eax),%edx$/;"	l
c0109021	obj/kernel.asm	/^c0109021:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109024	obj/kernel.asm	/^c0109024:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109027	obj/kernel.asm	/^c0109027:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010902a	obj/kernel.asm	/^c010902a:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010902d	obj/kernel.asm	/^c010902d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109030	obj/kernel.asm	/^c0109030:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109033	obj/kernel.asm	/^c0109033:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0109036	obj/kernel.asm	/^c0109036:	89 10                	mov    %edx,(%eax)$/;"	l
c0109038	obj/kernel.asm	/^c0109038:	c9                   	leave  $/;"	l
c0109039	obj/kernel.asm	/^c0109039:	c3                   	ret    $/;"	l
c010903a	obj/kernel.asm	/^c010903a <wait_queue_del>:$/;"	l
c010903a	obj/kernel.asm	/^c010903a:	55                   	push   %ebp$/;"	l
c010903b	obj/kernel.asm	/^c010903b:	89 e5                	mov    %esp,%ebp$/;"	l
c010903d	obj/kernel.asm	/^c010903d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109040	obj/kernel.asm	/^c0109040:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109043	obj/kernel.asm	/^c0109043:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109046	obj/kernel.asm	/^c0109046:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109049	obj/kernel.asm	/^c0109049:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010904c	obj/kernel.asm	/^c010904c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010904f	obj/kernel.asm	/^c010904f:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c0109052	obj/kernel.asm	/^c0109052:	0f 94 c0             	sete   %al$/;"	l
c0109055	obj/kernel.asm	/^c0109055:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109058	obj/kernel.asm	/^c0109058:	85 c0                	test   %eax,%eax$/;"	l
c010905a	obj/kernel.asm	/^c010905a:	75 0b                	jne    c0109067 <wait_queue_del+0x2d>$/;"	l
c010905c	obj/kernel.asm	/^c010905c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010905f	obj/kernel.asm	/^c010905f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0109062	obj/kernel.asm	/^c0109062:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0109065	obj/kernel.asm	/^c0109065:	74 16                	je     c010907d <wait_queue_del+0x43>$/;"	l
c0109067	obj/kernel.asm	/^c0109067:	68 1c ee 10 c0       	push   $0xc010ee1c$/;"	l
c010906c	obj/kernel.asm	/^c010906c:	68 f5 ed 10 c0       	push   $0xc010edf5$/;"	l
c0109071	obj/kernel.asm	/^c0109071:	6a 1c                	push   $0x1c$/;"	l
c0109073	obj/kernel.asm	/^c0109073:	68 0a ee 10 c0       	push   $0xc010ee0a$/;"	l
c0109078	obj/kernel.asm	/^c0109078:	e8 62 73 ff ff       	call   c01003df <__panic>$/;"	l
c010907d	obj/kernel.asm	/^c010907d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109080	obj/kernel.asm	/^c0109080:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109083	obj/kernel.asm	/^c0109083:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109086	obj/kernel.asm	/^c0109086:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109089	obj/kernel.asm	/^c0109089:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010908c	obj/kernel.asm	/^c010908c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010908f	obj/kernel.asm	/^c010908f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109092	obj/kernel.asm	/^c0109092:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109095	obj/kernel.asm	/^c0109095:	8b 12                	mov    (%edx),%edx$/;"	l
c0109097	obj/kernel.asm	/^c0109097:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010909a	obj/kernel.asm	/^c010909a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010909d	obj/kernel.asm	/^c010909d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01090a0	obj/kernel.asm	/^c01090a0:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01090a3	obj/kernel.asm	/^c01090a3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01090a6	obj/kernel.asm	/^c01090a6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01090a9	obj/kernel.asm	/^c01090a9:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01090ac	obj/kernel.asm	/^c01090ac:	89 10                	mov    %edx,(%eax)$/;"	l
c01090ae	obj/kernel.asm	/^c01090ae:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01090b1	obj/kernel.asm	/^c01090b1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01090b4	obj/kernel.asm	/^c01090b4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01090b7	obj/kernel.asm	/^c01090b7:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01090ba	obj/kernel.asm	/^c01090ba:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01090bd	obj/kernel.asm	/^c01090bd:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01090c0	obj/kernel.asm	/^c01090c0:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01090c3	obj/kernel.asm	/^c01090c3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01090c6	obj/kernel.asm	/^c01090c6:	89 10                	mov    %edx,(%eax)$/;"	l
c01090c8	obj/kernel.asm	/^c01090c8:	c9                   	leave  $/;"	l
c01090c9	obj/kernel.asm	/^c01090c9:	c3                   	ret    $/;"	l
c01090ca	obj/kernel.asm	/^c01090ca <wait_queue_next>:$/;"	l
c01090ca	obj/kernel.asm	/^c01090ca:	55                   	push   %ebp$/;"	l
c01090cb	obj/kernel.asm	/^c01090cb:	89 e5                	mov    %esp,%ebp$/;"	l
c01090cd	obj/kernel.asm	/^c01090cd:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01090d0	obj/kernel.asm	/^c01090d0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01090d3	obj/kernel.asm	/^c01090d3:	83 c0 0c             	add    $0xc,%eax$/;"	l
c01090d6	obj/kernel.asm	/^c01090d6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01090d9	obj/kernel.asm	/^c01090d9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01090dc	obj/kernel.asm	/^c01090dc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01090df	obj/kernel.asm	/^c01090df:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c01090e2	obj/kernel.asm	/^c01090e2:	0f 94 c0             	sete   %al$/;"	l
c01090e5	obj/kernel.asm	/^c01090e5:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01090e8	obj/kernel.asm	/^c01090e8:	85 c0                	test   %eax,%eax$/;"	l
c01090ea	obj/kernel.asm	/^c01090ea:	75 0b                	jne    c01090f7 <wait_queue_next+0x2d>$/;"	l
c01090ec	obj/kernel.asm	/^c01090ec:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01090ef	obj/kernel.asm	/^c01090ef:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01090f2	obj/kernel.asm	/^c01090f2:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01090f5	obj/kernel.asm	/^c01090f5:	74 16                	je     c010910d <wait_queue_next+0x43>$/;"	l
c01090f7	obj/kernel.asm	/^c01090f7:	68 1c ee 10 c0       	push   $0xc010ee1c$/;"	l
c01090fc	obj/kernel.asm	/^c01090fc:	68 f5 ed 10 c0       	push   $0xc010edf5$/;"	l
c0109101	obj/kernel.asm	/^c0109101:	6a 22                	push   $0x22$/;"	l
c0109103	obj/kernel.asm	/^c0109103:	68 0a ee 10 c0       	push   $0xc010ee0a$/;"	l
c0109108	obj/kernel.asm	/^c0109108:	e8 d2 72 ff ff       	call   c01003df <__panic>$/;"	l
c010910d	obj/kernel.asm	/^c010910d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109110	obj/kernel.asm	/^c0109110:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109113	obj/kernel.asm	/^c0109113:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109116	obj/kernel.asm	/^c0109116:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109119	obj/kernel.asm	/^c0109119:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010911c	obj/kernel.asm	/^c010911c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010911f	obj/kernel.asm	/^c010911f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109122	obj/kernel.asm	/^c0109122:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0109125	obj/kernel.asm	/^c0109125:	74 08                	je     c010912f <wait_queue_next+0x65>$/;"	l
c0109127	obj/kernel.asm	/^c0109127:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010912a	obj/kernel.asm	/^c010912a:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c010912d	obj/kernel.asm	/^c010912d:	eb 05                	jmp    c0109134 <wait_queue_next+0x6a>$/;"	l
c010912f	obj/kernel.asm	/^c010912f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109134	obj/kernel.asm	/^c0109134:	c9                   	leave  $/;"	l
c0109135	obj/kernel.asm	/^c0109135:	c3                   	ret    $/;"	l
c0109136	obj/kernel.asm	/^c0109136 <wait_queue_prev>:$/;"	l
c0109136	obj/kernel.asm	/^c0109136:	55                   	push   %ebp$/;"	l
c0109137	obj/kernel.asm	/^c0109137:	89 e5                	mov    %esp,%ebp$/;"	l
c0109139	obj/kernel.asm	/^c0109139:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010913c	obj/kernel.asm	/^c010913c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010913f	obj/kernel.asm	/^c010913f:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109142	obj/kernel.asm	/^c0109142:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109145	obj/kernel.asm	/^c0109145:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109148	obj/kernel.asm	/^c0109148:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010914b	obj/kernel.asm	/^c010914b:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010914e	obj/kernel.asm	/^c010914e:	0f 94 c0             	sete   %al$/;"	l
c0109151	obj/kernel.asm	/^c0109151:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109154	obj/kernel.asm	/^c0109154:	85 c0                	test   %eax,%eax$/;"	l
c0109156	obj/kernel.asm	/^c0109156:	75 0b                	jne    c0109163 <wait_queue_prev+0x2d>$/;"	l
c0109158	obj/kernel.asm	/^c0109158:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010915b	obj/kernel.asm	/^c010915b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010915e	obj/kernel.asm	/^c010915e:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0109161	obj/kernel.asm	/^c0109161:	74 16                	je     c0109179 <wait_queue_prev+0x43>$/;"	l
c0109163	obj/kernel.asm	/^c0109163:	68 1c ee 10 c0       	push   $0xc010ee1c$/;"	l
c0109168	obj/kernel.asm	/^c0109168:	68 f5 ed 10 c0       	push   $0xc010edf5$/;"	l
c010916d	obj/kernel.asm	/^c010916d:	6a 2c                	push   $0x2c$/;"	l
c010916f	obj/kernel.asm	/^c010916f:	68 0a ee 10 c0       	push   $0xc010ee0a$/;"	l
c0109174	obj/kernel.asm	/^c0109174:	e8 66 72 ff ff       	call   c01003df <__panic>$/;"	l
c0109179	obj/kernel.asm	/^c0109179:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010917c	obj/kernel.asm	/^c010917c:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010917f	obj/kernel.asm	/^c010917f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109182	obj/kernel.asm	/^c0109182:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109185	obj/kernel.asm	/^c0109185:	8b 00                	mov    (%eax),%eax$/;"	l
c0109187	obj/kernel.asm	/^c0109187:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010918a	obj/kernel.asm	/^c010918a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010918d	obj/kernel.asm	/^c010918d:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0109190	obj/kernel.asm	/^c0109190:	74 08                	je     c010919a <wait_queue_prev+0x64>$/;"	l
c0109192	obj/kernel.asm	/^c0109192:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109195	obj/kernel.asm	/^c0109195:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0109198	obj/kernel.asm	/^c0109198:	eb 05                	jmp    c010919f <wait_queue_prev+0x69>$/;"	l
c010919a	obj/kernel.asm	/^c010919a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010919f	obj/kernel.asm	/^c010919f:	c9                   	leave  $/;"	l
c01091a0	obj/kernel.asm	/^c01091a0:	c3                   	ret    $/;"	l
c01091a1	obj/kernel.asm	/^c01091a1 <wait_queue_first>:$/;"	l
c01091a1	obj/kernel.asm	/^c01091a1:	55                   	push   %ebp$/;"	l
c01091a2	obj/kernel.asm	/^c01091a2:	89 e5                	mov    %esp,%ebp$/;"	l
c01091a4	obj/kernel.asm	/^c01091a4:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01091a7	obj/kernel.asm	/^c01091a7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01091aa	obj/kernel.asm	/^c01091aa:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01091ad	obj/kernel.asm	/^c01091ad:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01091b0	obj/kernel.asm	/^c01091b0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01091b3	obj/kernel.asm	/^c01091b3:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01091b6	obj/kernel.asm	/^c01091b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01091b9	obj/kernel.asm	/^c01091b9:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01091bc	obj/kernel.asm	/^c01091bc:	74 08                	je     c01091c6 <wait_queue_first+0x25>$/;"	l
c01091be	obj/kernel.asm	/^c01091be:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01091c1	obj/kernel.asm	/^c01091c1:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01091c4	obj/kernel.asm	/^c01091c4:	eb 05                	jmp    c01091cb <wait_queue_first+0x2a>$/;"	l
c01091c6	obj/kernel.asm	/^c01091c6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01091cb	obj/kernel.asm	/^c01091cb:	c9                   	leave  $/;"	l
c01091cc	obj/kernel.asm	/^c01091cc:	c3                   	ret    $/;"	l
c01091cd	obj/kernel.asm	/^c01091cd <wait_queue_last>:$/;"	l
c01091cd	obj/kernel.asm	/^c01091cd:	55                   	push   %ebp$/;"	l
c01091ce	obj/kernel.asm	/^c01091ce:	89 e5                	mov    %esp,%ebp$/;"	l
c01091d0	obj/kernel.asm	/^c01091d0:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01091d3	obj/kernel.asm	/^c01091d3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01091d6	obj/kernel.asm	/^c01091d6:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01091d9	obj/kernel.asm	/^c01091d9:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01091dc	obj/kernel.asm	/^c01091dc:	8b 00                	mov    (%eax),%eax$/;"	l
c01091de	obj/kernel.asm	/^c01091de:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01091e1	obj/kernel.asm	/^c01091e1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01091e4	obj/kernel.asm	/^c01091e4:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01091e7	obj/kernel.asm	/^c01091e7:	74 08                	je     c01091f1 <wait_queue_last+0x24>$/;"	l
c01091e9	obj/kernel.asm	/^c01091e9:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01091ec	obj/kernel.asm	/^c01091ec:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01091ef	obj/kernel.asm	/^c01091ef:	eb 05                	jmp    c01091f6 <wait_queue_last+0x29>$/;"	l
c01091f1	obj/kernel.asm	/^c01091f1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01091f6	obj/kernel.asm	/^c01091f6:	c9                   	leave  $/;"	l
c01091f7	obj/kernel.asm	/^c01091f7:	c3                   	ret    $/;"	l
c01091f8	obj/kernel.asm	/^c01091f8 <wait_queue_empty>:$/;"	l
c01091f8	obj/kernel.asm	/^c01091f8:	55                   	push   %ebp$/;"	l
c01091f9	obj/kernel.asm	/^c01091f9:	89 e5                	mov    %esp,%ebp$/;"	l
c01091fb	obj/kernel.asm	/^c01091fb:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01091fe	obj/kernel.asm	/^c01091fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109201	obj/kernel.asm	/^c0109201:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109204	obj/kernel.asm	/^c0109204:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109207	obj/kernel.asm	/^c0109207:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010920a	obj/kernel.asm	/^c010920a:	39 45 fc             	cmp    %eax,-0x4(%ebp)$/;"	l
c010920d	obj/kernel.asm	/^c010920d:	0f 94 c0             	sete   %al$/;"	l
c0109210	obj/kernel.asm	/^c0109210:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109213	obj/kernel.asm	/^c0109213:	90                   	nop$/;"	l
c0109214	obj/kernel.asm	/^c0109214:	c9                   	leave  $/;"	l
c0109215	obj/kernel.asm	/^c0109215:	c3                   	ret    $/;"	l
c0109216	obj/kernel.asm	/^c0109216 <wait_in_queue>:$/;"	l
c0109216	obj/kernel.asm	/^c0109216:	55                   	push   %ebp$/;"	l
c0109217	obj/kernel.asm	/^c0109217:	89 e5                	mov    %esp,%ebp$/;"	l
c0109219	obj/kernel.asm	/^c0109219:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010921c	obj/kernel.asm	/^c010921c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010921f	obj/kernel.asm	/^c010921f:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109222	obj/kernel.asm	/^c0109222:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109225	obj/kernel.asm	/^c0109225:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109228	obj/kernel.asm	/^c0109228:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010922b	obj/kernel.asm	/^c010922b:	39 45 fc             	cmp    %eax,-0x4(%ebp)$/;"	l
c010922e	obj/kernel.asm	/^c010922e:	0f 94 c0             	sete   %al$/;"	l
c0109231	obj/kernel.asm	/^c0109231:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109234	obj/kernel.asm	/^c0109234:	85 c0                	test   %eax,%eax$/;"	l
c0109236	obj/kernel.asm	/^c0109236:	0f 94 c0             	sete   %al$/;"	l
c0109239	obj/kernel.asm	/^c0109239:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010923c	obj/kernel.asm	/^c010923c:	c9                   	leave  $/;"	l
c010923d	obj/kernel.asm	/^c010923d:	c3                   	ret    $/;"	l
c010923e	obj/kernel.asm	/^c010923e <wakeup_wait>:$/;"	l
c010923e	obj/kernel.asm	/^c010923e:	55                   	push   %ebp$/;"	l
c010923f	obj/kernel.asm	/^c010923f:	89 e5                	mov    %esp,%ebp$/;"	l
c0109241	obj/kernel.asm	/^c0109241:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109244	obj/kernel.asm	/^c0109244:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0109248	obj/kernel.asm	/^c0109248:	74 11                	je     c010925b <wakeup_wait+0x1d>$/;"	l
c010924a	obj/kernel.asm	/^c010924a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010924d	obj/kernel.asm	/^c010924d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109250	obj/kernel.asm	/^c0109250:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109253	obj/kernel.asm	/^c0109253:	e8 e2 fd ff ff       	call   c010903a <wait_queue_del>$/;"	l
c0109258	obj/kernel.asm	/^c0109258:	83 c4 10             	add    $0x10,%esp$/;"	l
c010925b	obj/kernel.asm	/^c010925b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010925e	obj/kernel.asm	/^c010925e:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0109261	obj/kernel.asm	/^c0109261:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109264	obj/kernel.asm	/^c0109264:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109267	obj/kernel.asm	/^c0109267:	8b 00                	mov    (%eax),%eax$/;"	l
c0109269	obj/kernel.asm	/^c0109269:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010926c	obj/kernel.asm	/^c010926c:	50                   	push   %eax$/;"	l
c010926d	obj/kernel.asm	/^c010926d:	e8 9b 23 00 00       	call   c010b60d <wakeup_proc>$/;"	l
c0109272	obj/kernel.asm	/^c0109272:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109275	obj/kernel.asm	/^c0109275:	c9                   	leave  $/;"	l
c0109276	obj/kernel.asm	/^c0109276:	c3                   	ret    $/;"	l
c0109277	obj/kernel.asm	/^c0109277 <wakeup_first>:$/;"	l
c0109277	obj/kernel.asm	/^c0109277:	55                   	push   %ebp$/;"	l
c0109278	obj/kernel.asm	/^c0109278:	89 e5                	mov    %esp,%ebp$/;"	l
c010927a	obj/kernel.asm	/^c010927a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010927d	obj/kernel.asm	/^c010927d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109280	obj/kernel.asm	/^c0109280:	e8 1c ff ff ff       	call   c01091a1 <wait_queue_first>$/;"	l
c0109285	obj/kernel.asm	/^c0109285:	83 c4 04             	add    $0x4,%esp$/;"	l
c0109288	obj/kernel.asm	/^c0109288:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010928b	obj/kernel.asm	/^c010928b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010928f	obj/kernel.asm	/^c010928f:	74 14                	je     c01092a5 <wakeup_first+0x2e>$/;"	l
c0109291	obj/kernel.asm	/^c0109291:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0109294	obj/kernel.asm	/^c0109294:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109297	obj/kernel.asm	/^c0109297:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010929a	obj/kernel.asm	/^c010929a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010929d	obj/kernel.asm	/^c010929d:	e8 9c ff ff ff       	call   c010923e <wakeup_wait>$/;"	l
c01092a2	obj/kernel.asm	/^c01092a2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01092a5	obj/kernel.asm	/^c01092a5:	c9                   	leave  $/;"	l
c01092a6	obj/kernel.asm	/^c01092a6:	c3                   	ret    $/;"	l
c01092a7	obj/kernel.asm	/^c01092a7 <wakeup_queue>:$/;"	l
c01092a7	obj/kernel.asm	/^c01092a7:	55                   	push   %ebp$/;"	l
c01092a8	obj/kernel.asm	/^c01092a8:	89 e5                	mov    %esp,%ebp$/;"	l
c01092aa	obj/kernel.asm	/^c01092aa:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01092ad	obj/kernel.asm	/^c01092ad:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01092b0	obj/kernel.asm	/^c01092b0:	e8 ec fe ff ff       	call   c01091a1 <wait_queue_first>$/;"	l
c01092b5	obj/kernel.asm	/^c01092b5:	83 c4 04             	add    $0x4,%esp$/;"	l
c01092b8	obj/kernel.asm	/^c01092b8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01092bb	obj/kernel.asm	/^c01092bb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01092bf	obj/kernel.asm	/^c01092bf:	74 5f                	je     c0109320 <wakeup_queue+0x79>$/;"	l
c01092c1	obj/kernel.asm	/^c01092c1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01092c5	obj/kernel.asm	/^c01092c5:	74 2c                	je     c01092f3 <wakeup_queue+0x4c>$/;"	l
c01092c7	obj/kernel.asm	/^c01092c7:	6a 01                	push   $0x1$/;"	l
c01092c9	obj/kernel.asm	/^c01092c9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01092cc	obj/kernel.asm	/^c01092cc:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01092cf	obj/kernel.asm	/^c01092cf:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01092d2	obj/kernel.asm	/^c01092d2:	e8 67 ff ff ff       	call   c010923e <wakeup_wait>$/;"	l
c01092d7	obj/kernel.asm	/^c01092d7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01092da	obj/kernel.asm	/^c01092da:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01092dd	obj/kernel.asm	/^c01092dd:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01092e0	obj/kernel.asm	/^c01092e0:	e8 bc fe ff ff       	call   c01091a1 <wait_queue_first>$/;"	l
c01092e5	obj/kernel.asm	/^c01092e5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01092e8	obj/kernel.asm	/^c01092e8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01092eb	obj/kernel.asm	/^c01092eb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01092ef	obj/kernel.asm	/^c01092ef:	75 d6                	jne    c01092c7 <wakeup_queue+0x20>$/;"	l
c01092f1	obj/kernel.asm	/^c01092f1:	eb 2d                	jmp    c0109320 <wakeup_queue+0x79>$/;"	l
c01092f3	obj/kernel.asm	/^c01092f3:	6a 00                	push   $0x0$/;"	l
c01092f5	obj/kernel.asm	/^c01092f5:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01092f8	obj/kernel.asm	/^c01092f8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01092fb	obj/kernel.asm	/^c01092fb:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01092fe	obj/kernel.asm	/^c01092fe:	e8 3b ff ff ff       	call   c010923e <wakeup_wait>$/;"	l
c0109303	obj/kernel.asm	/^c0109303:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109306	obj/kernel.asm	/^c0109306:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109309	obj/kernel.asm	/^c0109309:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010930c	obj/kernel.asm	/^c010930c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010930f	obj/kernel.asm	/^c010930f:	e8 b6 fd ff ff       	call   c01090ca <wait_queue_next>$/;"	l
c0109314	obj/kernel.asm	/^c0109314:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109317	obj/kernel.asm	/^c0109317:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010931a	obj/kernel.asm	/^c010931a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010931e	obj/kernel.asm	/^c010931e:	75 d3                	jne    c01092f3 <wakeup_queue+0x4c>$/;"	l
c0109320	obj/kernel.asm	/^c0109320:	c9                   	leave  $/;"	l
c0109321	obj/kernel.asm	/^c0109321:	c3                   	ret    $/;"	l
c0109322	obj/kernel.asm	/^c0109322 <wait_current_set>:$/;"	l
c0109322	obj/kernel.asm	/^c0109322:	55                   	push   %ebp$/;"	l
c0109323	obj/kernel.asm	/^c0109323:	89 e5                	mov    %esp,%ebp$/;"	l
c0109325	obj/kernel.asm	/^c0109325:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109328	obj/kernel.asm	/^c0109328:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010932d	obj/kernel.asm	/^c010932d:	85 c0                	test   %eax,%eax$/;"	l
c010932f	obj/kernel.asm	/^c010932f:	75 16                	jne    c0109347 <wait_current_set+0x25>$/;"	l
c0109331	obj/kernel.asm	/^c0109331:	68 59 ee 10 c0       	push   $0xc010ee59$/;"	l
c0109336	obj/kernel.asm	/^c0109336:	68 f5 ed 10 c0       	push   $0xc010edf5$/;"	l
c010933b	obj/kernel.asm	/^c010933b:	6a 74                	push   $0x74$/;"	l
c010933d	obj/kernel.asm	/^c010933d:	68 0a ee 10 c0       	push   $0xc010ee0a$/;"	l
c0109342	obj/kernel.asm	/^c0109342:	e8 98 70 ff ff       	call   c01003df <__panic>$/;"	l
c0109347	obj/kernel.asm	/^c0109347:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010934c	obj/kernel.asm	/^c010934c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010934f	obj/kernel.asm	/^c010934f:	50                   	push   %eax$/;"	l
c0109350	obj/kernel.asm	/^c0109350:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109353	obj/kernel.asm	/^c0109353:	e8 f6 fb ff ff       	call   c0108f4e <wait_init>$/;"	l
c0109358	obj/kernel.asm	/^c0109358:	83 c4 10             	add    $0x10,%esp$/;"	l
c010935b	obj/kernel.asm	/^c010935b:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c0109360	obj/kernel.asm	/^c0109360:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c0109366	obj/kernel.asm	/^c0109366:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010936b	obj/kernel.asm	/^c010936b:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010936e	obj/kernel.asm	/^c010936e:	89 90 90 00 00 00    	mov    %edx,0x90(%eax)$/;"	l
c0109374	obj/kernel.asm	/^c0109374:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109377	obj/kernel.asm	/^c0109377:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010937a	obj/kernel.asm	/^c010937a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010937d	obj/kernel.asm	/^c010937d:	e8 25 fc ff ff       	call   c0108fa7 <wait_queue_add>$/;"	l
c0109382	obj/kernel.asm	/^c0109382:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109385	obj/kernel.asm	/^c0109385:	c9                   	leave  $/;"	l
c0109386	obj/kernel.asm	/^c0109386:	c3                   	ret    $/;"	l
c0109387	obj/kernel.asm	/^c0109387 <__intr_save>:$/;"	l
c0109387	obj/kernel.asm	/^c0109387:	55                   	push   %ebp$/;"	l
c0109388	obj/kernel.asm	/^c0109388:	89 e5                	mov    %esp,%ebp$/;"	l
c010938a	obj/kernel.asm	/^c010938a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010938d	obj/kernel.asm	/^c010938d:	9c                   	pushf  $/;"	l
c010938e	obj/kernel.asm	/^c010938e:	58                   	pop    %eax$/;"	l
c010938f	obj/kernel.asm	/^c010938f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109392	obj/kernel.asm	/^c0109392:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109395	obj/kernel.asm	/^c0109395:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010939a	obj/kernel.asm	/^c010939a:	85 c0                	test   %eax,%eax$/;"	l
c010939c	obj/kernel.asm	/^c010939c:	74 0c                	je     c01093aa <__intr_save+0x23>$/;"	l
c010939e	obj/kernel.asm	/^c010939e:	e8 ff 8c ff ff       	call   c01020a2 <intr_disable>$/;"	l
c01093a3	obj/kernel.asm	/^c01093a3:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01093a8	obj/kernel.asm	/^c01093a8:	eb 05                	jmp    c01093af <__intr_save+0x28>$/;"	l
c01093aa	obj/kernel.asm	/^c01093aa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01093af	obj/kernel.asm	/^c01093af:	c9                   	leave  $/;"	l
c01093b0	obj/kernel.asm	/^c01093b0:	c3                   	ret    $/;"	l
c01093b1	obj/kernel.asm	/^c01093b1 <__intr_restore>:$/;"	l
c01093b1	obj/kernel.asm	/^c01093b1:	55                   	push   %ebp$/;"	l
c01093b2	obj/kernel.asm	/^c01093b2:	89 e5                	mov    %esp,%ebp$/;"	l
c01093b4	obj/kernel.asm	/^c01093b4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01093b7	obj/kernel.asm	/^c01093b7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01093bb	obj/kernel.asm	/^c01093bb:	74 05                	je     c01093c2 <__intr_restore+0x11>$/;"	l
c01093bd	obj/kernel.asm	/^c01093bd:	e8 da 8c ff ff       	call   c010209c <intr_enable>$/;"	l
c01093c2	obj/kernel.asm	/^c01093c2:	c9                   	leave  $/;"	l
c01093c3	obj/kernel.asm	/^c01093c3:	c3                   	ret    $/;"	l
c01093c4	obj/kernel.asm	/^c01093c4 <sem_init>:$/;"	l
c01093c4	obj/kernel.asm	/^c01093c4:	55                   	push   %ebp$/;"	l
c01093c5	obj/kernel.asm	/^c01093c5:	89 e5                	mov    %esp,%ebp$/;"	l
c01093c7	obj/kernel.asm	/^c01093c7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01093ca	obj/kernel.asm	/^c01093ca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093cd	obj/kernel.asm	/^c01093cd:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01093d0	obj/kernel.asm	/^c01093d0:	89 10                	mov    %edx,(%eax)$/;"	l
c01093d2	obj/kernel.asm	/^c01093d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093d5	obj/kernel.asm	/^c01093d5:	83 c0 04             	add    $0x4,%eax$/;"	l
c01093d8	obj/kernel.asm	/^c01093d8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01093db	obj/kernel.asm	/^c01093db:	50                   	push   %eax$/;"	l
c01093dc	obj/kernel.asm	/^c01093dc:	e8 a4 fb ff ff       	call   c0108f85 <wait_queue_init>$/;"	l
c01093e1	obj/kernel.asm	/^c01093e1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01093e4	obj/kernel.asm	/^c01093e4:	c9                   	leave  $/;"	l
c01093e5	obj/kernel.asm	/^c01093e5:	c3                   	ret    $/;"	l
c01093e6	obj/kernel.asm	/^c01093e6 <__up>:$/;"	l
c01093e6	obj/kernel.asm	/^c01093e6:	55                   	push   %ebp$/;"	l
c01093e7	obj/kernel.asm	/^c01093e7:	89 e5                	mov    %esp,%ebp$/;"	l
c01093e9	obj/kernel.asm	/^c01093e9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01093ec	obj/kernel.asm	/^c01093ec:	e8 96 ff ff ff       	call   c0109387 <__intr_save>$/;"	l
c01093f1	obj/kernel.asm	/^c01093f1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01093f4	obj/kernel.asm	/^c01093f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093f7	obj/kernel.asm	/^c01093f7:	83 c0 04             	add    $0x4,%eax$/;"	l
c01093fa	obj/kernel.asm	/^c01093fa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01093fd	obj/kernel.asm	/^c01093fd:	50                   	push   %eax$/;"	l
c01093fe	obj/kernel.asm	/^c01093fe:	e8 9e fd ff ff       	call   c01091a1 <wait_queue_first>$/;"	l
c0109403	obj/kernel.asm	/^c0109403:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109406	obj/kernel.asm	/^c0109406:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109409	obj/kernel.asm	/^c0109409:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010940d	obj/kernel.asm	/^c010940d:	75 0f                	jne    c010941e <__up+0x38>$/;"	l
c010940f	obj/kernel.asm	/^c010940f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109412	obj/kernel.asm	/^c0109412:	8b 00                	mov    (%eax),%eax$/;"	l
c0109414	obj/kernel.asm	/^c0109414:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0109417	obj/kernel.asm	/^c0109417:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010941a	obj/kernel.asm	/^c010941a:	89 10                	mov    %edx,(%eax)$/;"	l
c010941c	obj/kernel.asm	/^c010941c:	eb 3d                	jmp    c010945b <__up+0x75>$/;"	l
c010941e	obj/kernel.asm	/^c010941e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109421	obj/kernel.asm	/^c0109421:	8b 00                	mov    (%eax),%eax$/;"	l
c0109423	obj/kernel.asm	/^c0109423:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c0109429	obj/kernel.asm	/^c0109429:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010942c	obj/kernel.asm	/^c010942c:	74 16                	je     c0109444 <__up+0x5e>$/;"	l
c010942e	obj/kernel.asm	/^c010942e:	68 6c ee 10 c0       	push   $0xc010ee6c$/;"	l
c0109433	obj/kernel.asm	/^c0109433:	68 91 ee 10 c0       	push   $0xc010ee91$/;"	l
c0109438	obj/kernel.asm	/^c0109438:	6a 19                	push   $0x19$/;"	l
c010943a	obj/kernel.asm	/^c010943a:	68 a6 ee 10 c0       	push   $0xc010eea6$/;"	l
c010943f	obj/kernel.asm	/^c010943f:	e8 9b 6f ff ff       	call   c01003df <__panic>$/;"	l
c0109444	obj/kernel.asm	/^c0109444:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109447	obj/kernel.asm	/^c0109447:	83 c0 04             	add    $0x4,%eax$/;"	l
c010944a	obj/kernel.asm	/^c010944a:	6a 01                	push   $0x1$/;"	l
c010944c	obj/kernel.asm	/^c010944c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010944f	obj/kernel.asm	/^c010944f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109452	obj/kernel.asm	/^c0109452:	50                   	push   %eax$/;"	l
c0109453	obj/kernel.asm	/^c0109453:	e8 e6 fd ff ff       	call   c010923e <wakeup_wait>$/;"	l
c0109458	obj/kernel.asm	/^c0109458:	83 c4 10             	add    $0x10,%esp$/;"	l
c010945b	obj/kernel.asm	/^c010945b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010945e	obj/kernel.asm	/^c010945e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109461	obj/kernel.asm	/^c0109461:	e8 4b ff ff ff       	call   c01093b1 <__intr_restore>$/;"	l
c0109466	obj/kernel.asm	/^c0109466:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109469	obj/kernel.asm	/^c0109469:	c9                   	leave  $/;"	l
c010946a	obj/kernel.asm	/^c010946a:	c3                   	ret    $/;"	l
c010946b	obj/kernel.asm	/^c010946b <__down>:$/;"	l
c010946b	obj/kernel.asm	/^c010946b:	55                   	push   %ebp$/;"	l
c010946c	obj/kernel.asm	/^c010946c:	89 e5                	mov    %esp,%ebp$/;"	l
c010946e	obj/kernel.asm	/^c010946e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109471	obj/kernel.asm	/^c0109471:	e8 11 ff ff ff       	call   c0109387 <__intr_save>$/;"	l
c0109476	obj/kernel.asm	/^c0109476:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109479	obj/kernel.asm	/^c0109479:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010947c	obj/kernel.asm	/^c010947c:	8b 00                	mov    (%eax),%eax$/;"	l
c010947e	obj/kernel.asm	/^c010947e:	85 c0                	test   %eax,%eax$/;"	l
c0109480	obj/kernel.asm	/^c0109480:	7e 25                	jle    c01094a7 <__down+0x3c>$/;"	l
c0109482	obj/kernel.asm	/^c0109482:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109485	obj/kernel.asm	/^c0109485:	8b 00                	mov    (%eax),%eax$/;"	l
c0109487	obj/kernel.asm	/^c0109487:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010948a	obj/kernel.asm	/^c010948a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010948d	obj/kernel.asm	/^c010948d:	89 10                	mov    %edx,(%eax)$/;"	l
c010948f	obj/kernel.asm	/^c010948f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109492	obj/kernel.asm	/^c0109492:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109495	obj/kernel.asm	/^c0109495:	e8 17 ff ff ff       	call   c01093b1 <__intr_restore>$/;"	l
c010949a	obj/kernel.asm	/^c010949a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010949d	obj/kernel.asm	/^c010949d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01094a2	obj/kernel.asm	/^c01094a2:	e9 86 00 00 00       	jmp    c010952d <__down+0xc2>$/;"	l
c01094a7	obj/kernel.asm	/^c01094a7:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c01094aa	obj/kernel.asm	/^c01094aa:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01094ad	obj/kernel.asm	/^c01094ad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01094b0	obj/kernel.asm	/^c01094b0:	83 c0 04             	add    $0x4,%eax$/;"	l
c01094b3	obj/kernel.asm	/^c01094b3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01094b6	obj/kernel.asm	/^c01094b6:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01094b9	obj/kernel.asm	/^c01094b9:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01094bc	obj/kernel.asm	/^c01094bc:	50                   	push   %eax$/;"	l
c01094bd	obj/kernel.asm	/^c01094bd:	e8 60 fe ff ff       	call   c0109322 <wait_current_set>$/;"	l
c01094c2	obj/kernel.asm	/^c01094c2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01094c5	obj/kernel.asm	/^c01094c5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01094c8	obj/kernel.asm	/^c01094c8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01094cb	obj/kernel.asm	/^c01094cb:	e8 e1 fe ff ff       	call   c01093b1 <__intr_restore>$/;"	l
c01094d0	obj/kernel.asm	/^c01094d0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01094d3	obj/kernel.asm	/^c01094d3:	e8 c4 21 00 00       	call   c010b69c <schedule>$/;"	l
c01094d8	obj/kernel.asm	/^c01094d8:	e8 aa fe ff ff       	call   c0109387 <__intr_save>$/;"	l
c01094dd	obj/kernel.asm	/^c01094dd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01094e0	obj/kernel.asm	/^c01094e0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01094e3	obj/kernel.asm	/^c01094e3:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01094e6	obj/kernel.asm	/^c01094e6:	e8 2b fd ff ff       	call   c0109216 <wait_in_queue>$/;"	l
c01094eb	obj/kernel.asm	/^c01094eb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01094ee	obj/kernel.asm	/^c01094ee:	85 c0                	test   %eax,%eax$/;"	l
c01094f0	obj/kernel.asm	/^c01094f0:	74 15                	je     c0109507 <__down+0x9c>$/;"	l
c01094f2	obj/kernel.asm	/^c01094f2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01094f5	obj/kernel.asm	/^c01094f5:	83 c0 04             	add    $0x4,%eax$/;"	l
c01094f8	obj/kernel.asm	/^c01094f8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01094fb	obj/kernel.asm	/^c01094fb:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01094fe	obj/kernel.asm	/^c01094fe:	50                   	push   %eax$/;"	l
c01094ff	obj/kernel.asm	/^c01094ff:	e8 36 fb ff ff       	call   c010903a <wait_queue_del>$/;"	l
c0109504	obj/kernel.asm	/^c0109504:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109507	obj/kernel.asm	/^c0109507:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010950a	obj/kernel.asm	/^c010950a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010950d	obj/kernel.asm	/^c010950d:	e8 9f fe ff ff       	call   c01093b1 <__intr_restore>$/;"	l
c0109512	obj/kernel.asm	/^c0109512:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109515	obj/kernel.asm	/^c0109515:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109518	obj/kernel.asm	/^c0109518:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010951b	obj/kernel.asm	/^c010951b:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010951e	obj/kernel.asm	/^c010951e:	74 08                	je     c0109528 <__down+0xbd>$/;"	l
c0109520	obj/kernel.asm	/^c0109520:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109523	obj/kernel.asm	/^c0109523:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109526	obj/kernel.asm	/^c0109526:	eb 05                	jmp    c010952d <__down+0xc2>$/;"	l
c0109528	obj/kernel.asm	/^c0109528:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010952d	obj/kernel.asm	/^c010952d:	c9                   	leave  $/;"	l
c010952e	obj/kernel.asm	/^c010952e:	c3                   	ret    $/;"	l
c010952f	obj/kernel.asm	/^c010952f <up>:$/;"	l
c010952f	obj/kernel.asm	/^c010952f:	55                   	push   %ebp$/;"	l
c0109530	obj/kernel.asm	/^c0109530:	89 e5                	mov    %esp,%ebp$/;"	l
c0109532	obj/kernel.asm	/^c0109532:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109535	obj/kernel.asm	/^c0109535:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109538	obj/kernel.asm	/^c0109538:	68 00 01 00 00       	push   $0x100$/;"	l
c010953d	obj/kernel.asm	/^c010953d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109540	obj/kernel.asm	/^c0109540:	e8 a1 fe ff ff       	call   c01093e6 <__up>$/;"	l
c0109545	obj/kernel.asm	/^c0109545:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109548	obj/kernel.asm	/^c0109548:	c9                   	leave  $/;"	l
c0109549	obj/kernel.asm	/^c0109549:	c3                   	ret    $/;"	l
c010954a	obj/kernel.asm	/^c010954a <down>:$/;"	l
c010954a	obj/kernel.asm	/^c010954a:	55                   	push   %ebp$/;"	l
c010954b	obj/kernel.asm	/^c010954b:	89 e5                	mov    %esp,%ebp$/;"	l
c010954d	obj/kernel.asm	/^c010954d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109550	obj/kernel.asm	/^c0109550:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109553	obj/kernel.asm	/^c0109553:	68 00 01 00 00       	push   $0x100$/;"	l
c0109558	obj/kernel.asm	/^c0109558:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010955b	obj/kernel.asm	/^c010955b:	e8 0b ff ff ff       	call   c010946b <__down>$/;"	l
c0109560	obj/kernel.asm	/^c0109560:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109563	obj/kernel.asm	/^c0109563:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109566	obj/kernel.asm	/^c0109566:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010956a	obj/kernel.asm	/^c010956a:	74 16                	je     c0109582 <down+0x38>$/;"	l
c010956c	obj/kernel.asm	/^c010956c:	68 b6 ee 10 c0       	push   $0xc010eeb6$/;"	l
c0109571	obj/kernel.asm	/^c0109571:	68 91 ee 10 c0       	push   $0xc010ee91$/;"	l
c0109576	obj/kernel.asm	/^c0109576:	6a 40                	push   $0x40$/;"	l
c0109578	obj/kernel.asm	/^c0109578:	68 a6 ee 10 c0       	push   $0xc010eea6$/;"	l
c010957d	obj/kernel.asm	/^c010957d:	e8 5d 6e ff ff       	call   c01003df <__panic>$/;"	l
c0109582	obj/kernel.asm	/^c0109582:	c9                   	leave  $/;"	l
c0109583	obj/kernel.asm	/^c0109583:	c3                   	ret    $/;"	l
c0109584	obj/kernel.asm	/^c0109584 <try_down>:$/;"	l
c0109584	obj/kernel.asm	/^c0109584:	55                   	push   %ebp$/;"	l
c0109585	obj/kernel.asm	/^c0109585:	89 e5                	mov    %esp,%ebp$/;"	l
c0109587	obj/kernel.asm	/^c0109587:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010958a	obj/kernel.asm	/^c010958a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109591	obj/kernel.asm	/^c0109591:	e8 f1 fd ff ff       	call   c0109387 <__intr_save>$/;"	l
c0109596	obj/kernel.asm	/^c0109596:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109599	obj/kernel.asm	/^c0109599:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010959c	obj/kernel.asm	/^c010959c:	8b 00                	mov    (%eax),%eax$/;"	l
c010959e	obj/kernel.asm	/^c010959e:	85 c0                	test   %eax,%eax$/;"	l
c01095a0	obj/kernel.asm	/^c01095a0:	7e 14                	jle    c01095b6 <try_down+0x32>$/;"	l
c01095a2	obj/kernel.asm	/^c01095a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095a5	obj/kernel.asm	/^c01095a5:	8b 00                	mov    (%eax),%eax$/;"	l
c01095a7	obj/kernel.asm	/^c01095a7:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01095aa	obj/kernel.asm	/^c01095aa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095ad	obj/kernel.asm	/^c01095ad:	89 10                	mov    %edx,(%eax)$/;"	l
c01095af	obj/kernel.asm	/^c01095af:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c01095b6	obj/kernel.asm	/^c01095b6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01095b9	obj/kernel.asm	/^c01095b9:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01095bc	obj/kernel.asm	/^c01095bc:	e8 f0 fd ff ff       	call   c01093b1 <__intr_restore>$/;"	l
c01095c1	obj/kernel.asm	/^c01095c1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01095c4	obj/kernel.asm	/^c01095c4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01095c7	obj/kernel.asm	/^c01095c7:	c9                   	leave  $/;"	l
c01095c8	obj/kernel.asm	/^c01095c8:	c3                   	ret    $/;"	l
c01095c9	obj/kernel.asm	/^c01095c9 <monitor_init>:$/;"	l
c01095c9	obj/kernel.asm	/^c01095c9:	55                   	push   %ebp$/;"	l
c01095ca	obj/kernel.asm	/^c01095ca:	89 e5                	mov    %esp,%ebp$/;"	l
c01095cc	obj/kernel.asm	/^c01095cc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01095cf	obj/kernel.asm	/^c01095cf:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01095d3	obj/kernel.asm	/^c01095d3:	75 16                	jne    c01095eb <monitor_init+0x22>$/;"	l
c01095d5	obj/kernel.asm	/^c01095d5:	68 c4 ee 10 c0       	push   $0xc010eec4$/;"	l
c01095da	obj/kernel.asm	/^c01095da:	68 cd ee 10 c0       	push   $0xc010eecd$/;"	l
c01095df	obj/kernel.asm	/^c01095df:	6a 0b                	push   $0xb$/;"	l
c01095e1	obj/kernel.asm	/^c01095e1:	68 e2 ee 10 c0       	push   $0xc010eee2$/;"	l
c01095e6	obj/kernel.asm	/^c01095e6:	e8 f4 6d ff ff       	call   c01003df <__panic>$/;"	l
c01095eb	obj/kernel.asm	/^c01095eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095ee	obj/kernel.asm	/^c01095ee:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c01095f5	obj/kernel.asm	/^c01095f5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095f8	obj/kernel.asm	/^c01095f8:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
c01095ff	obj/kernel.asm	/^c01095ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109602	obj/kernel.asm	/^c0109602:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109605	obj/kernel.asm	/^c0109605:	6a 01                	push   $0x1$/;"	l
c0109607	obj/kernel.asm	/^c0109607:	50                   	push   %eax$/;"	l
c0109608	obj/kernel.asm	/^c0109608:	e8 b7 fd ff ff       	call   c01093c4 <sem_init>$/;"	l
c010960d	obj/kernel.asm	/^c010960d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109610	obj/kernel.asm	/^c0109610:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109613	obj/kernel.asm	/^c0109613:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109616	obj/kernel.asm	/^c0109616:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109619	obj/kernel.asm	/^c0109619:	6a 00                	push   $0x0$/;"	l
c010961b	obj/kernel.asm	/^c010961b:	50                   	push   %eax$/;"	l
c010961c	obj/kernel.asm	/^c010961c:	e8 a3 fd ff ff       	call   c01093c4 <sem_init>$/;"	l
c0109621	obj/kernel.asm	/^c0109621:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109624	obj/kernel.asm	/^c0109624:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0109627	obj/kernel.asm	/^c0109627:	89 d0                	mov    %edx,%eax$/;"	l
c0109629	obj/kernel.asm	/^c0109629:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010962c	obj/kernel.asm	/^c010962c:	01 d0                	add    %edx,%eax$/;"	l
c010962e	obj/kernel.asm	/^c010962e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109631	obj/kernel.asm	/^c0109631:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109634	obj/kernel.asm	/^c0109634:	50                   	push   %eax$/;"	l
c0109635	obj/kernel.asm	/^c0109635:	e8 b2 dd ff ff       	call   c01073ec <kmalloc>$/;"	l
c010963a	obj/kernel.asm	/^c010963a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010963d	obj/kernel.asm	/^c010963d:	89 c2                	mov    %eax,%edx$/;"	l
c010963f	obj/kernel.asm	/^c010963f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109642	obj/kernel.asm	/^c0109642:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c0109645	obj/kernel.asm	/^c0109645:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109648	obj/kernel.asm	/^c0109648:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010964b	obj/kernel.asm	/^c010964b:	85 c0                	test   %eax,%eax$/;"	l
c010964d	obj/kernel.asm	/^c010964d:	75 16                	jne    c0109665 <monitor_init+0x9c>$/;"	l
c010964f	obj/kernel.asm	/^c010964f:	68 f6 ee 10 c0       	push   $0xc010eef6$/;"	l
c0109654	obj/kernel.asm	/^c0109654:	68 cd ee 10 c0       	push   $0xc010eecd$/;"	l
c0109659	obj/kernel.asm	/^c0109659:	6a 11                	push   $0x11$/;"	l
c010965b	obj/kernel.asm	/^c010965b:	68 e2 ee 10 c0       	push   $0xc010eee2$/;"	l
c0109660	obj/kernel.asm	/^c0109660:	e8 7a 6d ff ff       	call   c01003df <__panic>$/;"	l
c0109665	obj/kernel.asm	/^c0109665:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010966c	obj/kernel.asm	/^c010966c:	eb 5f                	jmp    c01096cd <monitor_init+0x104>$/;"	l
c010966e	obj/kernel.asm	/^c010966e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109671	obj/kernel.asm	/^c0109671:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c0109674	obj/kernel.asm	/^c0109674:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0109677	obj/kernel.asm	/^c0109677:	89 d0                	mov    %edx,%eax$/;"	l
c0109679	obj/kernel.asm	/^c0109679:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010967c	obj/kernel.asm	/^c010967c:	01 d0                	add    %edx,%eax$/;"	l
c010967e	obj/kernel.asm	/^c010967e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109681	obj/kernel.asm	/^c0109681:	01 c8                	add    %ecx,%eax$/;"	l
c0109683	obj/kernel.asm	/^c0109683:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c010968a	obj/kernel.asm	/^c010968a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010968d	obj/kernel.asm	/^c010968d:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c0109690	obj/kernel.asm	/^c0109690:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0109693	obj/kernel.asm	/^c0109693:	89 d0                	mov    %edx,%eax$/;"	l
c0109695	obj/kernel.asm	/^c0109695:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109698	obj/kernel.asm	/^c0109698:	01 d0                	add    %edx,%eax$/;"	l
c010969a	obj/kernel.asm	/^c010969a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010969d	obj/kernel.asm	/^c010969d:	01 c8                	add    %ecx,%eax$/;"	l
c010969f	obj/kernel.asm	/^c010969f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01096a2	obj/kernel.asm	/^c01096a2:	6a 00                	push   $0x0$/;"	l
c01096a4	obj/kernel.asm	/^c01096a4:	50                   	push   %eax$/;"	l
c01096a5	obj/kernel.asm	/^c01096a5:	e8 1a fd ff ff       	call   c01093c4 <sem_init>$/;"	l
c01096aa	obj/kernel.asm	/^c01096aa:	83 c4 10             	add    $0x10,%esp$/;"	l
c01096ad	obj/kernel.asm	/^c01096ad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01096b0	obj/kernel.asm	/^c01096b0:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c01096b3	obj/kernel.asm	/^c01096b3:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01096b6	obj/kernel.asm	/^c01096b6:	89 d0                	mov    %edx,%eax$/;"	l
c01096b8	obj/kernel.asm	/^c01096b8:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01096bb	obj/kernel.asm	/^c01096bb:	01 d0                	add    %edx,%eax$/;"	l
c01096bd	obj/kernel.asm	/^c01096bd:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01096c0	obj/kernel.asm	/^c01096c0:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
c01096c3	obj/kernel.asm	/^c01096c3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01096c6	obj/kernel.asm	/^c01096c6:	89 42 10             	mov    %eax,0x10(%edx)$/;"	l
c01096c9	obj/kernel.asm	/^c01096c9:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01096cd	obj/kernel.asm	/^c01096cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01096d0	obj/kernel.asm	/^c01096d0:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01096d3	obj/kernel.asm	/^c01096d3:	72 99                	jb     c010966e <monitor_init+0xa5>$/;"	l
c01096d5	obj/kernel.asm	/^c01096d5:	c9                   	leave  $/;"	l
c01096d6	obj/kernel.asm	/^c01096d6:	c3                   	ret    $/;"	l
c01096d7	obj/kernel.asm	/^c01096d7 <cond_signal>:$/;"	l
c01096d7	obj/kernel.asm	/^c01096d7:	55                   	push   %ebp$/;"	l
c01096d8	obj/kernel.asm	/^c01096d8:	89 e5                	mov    %esp,%ebp$/;"	l
c01096da	obj/kernel.asm	/^c01096da:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01096dd	obj/kernel.asm	/^c01096dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01096e0	obj/kernel.asm	/^c01096e0:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01096e3	obj/kernel.asm	/^c01096e3:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c01096e6	obj/kernel.asm	/^c01096e6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01096e9	obj/kernel.asm	/^c01096e9:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01096ec	obj/kernel.asm	/^c01096ec:	52                   	push   %edx$/;"	l
c01096ed	obj/kernel.asm	/^c01096ed:	50                   	push   %eax$/;"	l
c01096ee	obj/kernel.asm	/^c01096ee:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01096f1	obj/kernel.asm	/^c01096f1:	68 04 ef 10 c0       	push   $0xc010ef04$/;"	l
c01096f6	obj/kernel.asm	/^c01096f6:	e8 7f 6b ff ff       	call   c010027a <cprintf>$/;"	l
c01096fb	obj/kernel.asm	/^c01096fb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01096fe	obj/kernel.asm	/^c01096fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109701	obj/kernel.asm	/^c0109701:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109704	obj/kernel.asm	/^c0109704:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c0109707	obj/kernel.asm	/^c0109707:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010970a	obj/kernel.asm	/^c010970a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010970d	obj/kernel.asm	/^c010970d:	52                   	push   %edx$/;"	l
c010970e	obj/kernel.asm	/^c010970e:	50                   	push   %eax$/;"	l
c010970f	obj/kernel.asm	/^c010970f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109712	obj/kernel.asm	/^c0109712:	68 4c ef 10 c0       	push   $0xc010ef4c$/;"	l
c0109717	obj/kernel.asm	/^c0109717:	e8 5e 6b ff ff       	call   c010027a <cprintf>$/;"	l
c010971c	obj/kernel.asm	/^c010971c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010971f	obj/kernel.asm	/^c010971f:	c9                   	leave  $/;"	l
c0109720	obj/kernel.asm	/^c0109720:	c3                   	ret    $/;"	l
c0109721	obj/kernel.asm	/^c0109721 <cond_wait>:$/;"	l
c0109721	obj/kernel.asm	/^c0109721:	55                   	push   %ebp$/;"	l
c0109722	obj/kernel.asm	/^c0109722:	89 e5                	mov    %esp,%ebp$/;"	l
c0109724	obj/kernel.asm	/^c0109724:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109727	obj/kernel.asm	/^c0109727:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010972a	obj/kernel.asm	/^c010972a:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010972d	obj/kernel.asm	/^c010972d:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c0109730	obj/kernel.asm	/^c0109730:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109733	obj/kernel.asm	/^c0109733:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109736	obj/kernel.asm	/^c0109736:	52                   	push   %edx$/;"	l
c0109737	obj/kernel.asm	/^c0109737:	50                   	push   %eax$/;"	l
c0109738	obj/kernel.asm	/^c0109738:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010973b	obj/kernel.asm	/^c010973b:	68 90 ef 10 c0       	push   $0xc010ef90$/;"	l
c0109740	obj/kernel.asm	/^c0109740:	e8 35 6b ff ff       	call   c010027a <cprintf>$/;"	l
c0109745	obj/kernel.asm	/^c0109745:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109748	obj/kernel.asm	/^c0109748:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010974b	obj/kernel.asm	/^c010974b:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010974e	obj/kernel.asm	/^c010974e:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c0109751	obj/kernel.asm	/^c0109751:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109754	obj/kernel.asm	/^c0109754:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109757	obj/kernel.asm	/^c0109757:	52                   	push   %edx$/;"	l
c0109758	obj/kernel.asm	/^c0109758:	50                   	push   %eax$/;"	l
c0109759	obj/kernel.asm	/^c0109759:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010975c	obj/kernel.asm	/^c010975c:	68 d4 ef 10 c0       	push   $0xc010efd4$/;"	l
c0109761	obj/kernel.asm	/^c0109761:	e8 14 6b ff ff       	call   c010027a <cprintf>$/;"	l
c0109766	obj/kernel.asm	/^c0109766:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109769	obj/kernel.asm	/^c0109769:	c9                   	leave  $/;"	l
c010976a	obj/kernel.asm	/^c010976a:	c3                   	ret    $/;"	l
c010976b	obj/kernel.asm	/^c010976b <page2ppn>:$/;"	l
c010976b	obj/kernel.asm	/^c010976b:	55                   	push   %ebp$/;"	l
c010976c	obj/kernel.asm	/^c010976c:	89 e5                	mov    %esp,%ebp$/;"	l
c010976e	obj/kernel.asm	/^c010976e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109771	obj/kernel.asm	/^c0109771:	8b 15 98 45 1c c0    	mov    0xc01c4598,%edx$/;"	l
c0109777	obj/kernel.asm	/^c0109777:	29 d0                	sub    %edx,%eax$/;"	l
c0109779	obj/kernel.asm	/^c0109779:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c010977c	obj/kernel.asm	/^c010977c:	5d                   	pop    %ebp$/;"	l
c010977d	obj/kernel.asm	/^c010977d:	c3                   	ret    $/;"	l
c010977e	obj/kernel.asm	/^c010977e <page2pa>:$/;"	l
c010977e	obj/kernel.asm	/^c010977e:	55                   	push   %ebp$/;"	l
c010977f	obj/kernel.asm	/^c010977f:	89 e5                	mov    %esp,%ebp$/;"	l
c0109781	obj/kernel.asm	/^c0109781:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109784	obj/kernel.asm	/^c0109784:	e8 e2 ff ff ff       	call   c010976b <page2ppn>$/;"	l
c0109789	obj/kernel.asm	/^c0109789:	83 c4 04             	add    $0x4,%esp$/;"	l
c010978c	obj/kernel.asm	/^c010978c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010978f	obj/kernel.asm	/^c010978f:	c9                   	leave  $/;"	l
c0109790	obj/kernel.asm	/^c0109790:	c3                   	ret    $/;"	l
c0109791	obj/kernel.asm	/^c0109791 <page2kva>:$/;"	l
c0109791	obj/kernel.asm	/^c0109791:	55                   	push   %ebp$/;"	l
c0109792	obj/kernel.asm	/^c0109792:	89 e5                	mov    %esp,%ebp$/;"	l
c0109794	obj/kernel.asm	/^c0109794:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109797	obj/kernel.asm	/^c0109797:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010979a	obj/kernel.asm	/^c010979a:	e8 df ff ff ff       	call   c010977e <page2pa>$/;"	l
c010979f	obj/kernel.asm	/^c010979f:	83 c4 04             	add    $0x4,%esp$/;"	l
c01097a2	obj/kernel.asm	/^c01097a2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01097a5	obj/kernel.asm	/^c01097a5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01097a8	obj/kernel.asm	/^c01097a8:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01097ab	obj/kernel.asm	/^c01097ab:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01097ae	obj/kernel.asm	/^c01097ae:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c01097b3	obj/kernel.asm	/^c01097b3:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c01097b6	obj/kernel.asm	/^c01097b6:	72 14                	jb     c01097cc <page2kva+0x3b>$/;"	l
c01097b8	obj/kernel.asm	/^c01097b8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01097bb	obj/kernel.asm	/^c01097bb:	68 18 f0 10 c0       	push   $0xc010f018$/;"	l
c01097c0	obj/kernel.asm	/^c01097c0:	6a 65                	push   $0x65$/;"	l
c01097c2	obj/kernel.asm	/^c01097c2:	68 3b f0 10 c0       	push   $0xc010f03b$/;"	l
c01097c7	obj/kernel.asm	/^c01097c7:	e8 13 6c ff ff       	call   c01003df <__panic>$/;"	l
c01097cc	obj/kernel.asm	/^c01097cc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01097cf	obj/kernel.asm	/^c01097cf:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c01097d4	obj/kernel.asm	/^c01097d4:	c9                   	leave  $/;"	l
c01097d5	obj/kernel.asm	/^c01097d5:	c3                   	ret    $/;"	l
c01097d6	obj/kernel.asm	/^c01097d6 <swapfs_init>:$/;"	l
c01097d6	obj/kernel.asm	/^c01097d6:	55                   	push   %ebp$/;"	l
c01097d7	obj/kernel.asm	/^c01097d7:	89 e5                	mov    %esp,%ebp$/;"	l
c01097d9	obj/kernel.asm	/^c01097d9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01097dc	obj/kernel.asm	/^c01097dc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01097df	obj/kernel.asm	/^c01097df:	6a 01                	push   $0x1$/;"	l
c01097e1	obj/kernel.asm	/^c01097e1:	e8 f2 78 ff ff       	call   c01010d8 <ide_device_valid>$/;"	l
c01097e6	obj/kernel.asm	/^c01097e6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01097e9	obj/kernel.asm	/^c01097e9:	85 c0                	test   %eax,%eax$/;"	l
c01097eb	obj/kernel.asm	/^c01097eb:	75 14                	jne    c0109801 <swapfs_init+0x2b>$/;"	l
c01097ed	obj/kernel.asm	/^c01097ed:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01097f0	obj/kernel.asm	/^c01097f0:	68 49 f0 10 c0       	push   $0xc010f049$/;"	l
c01097f5	obj/kernel.asm	/^c01097f5:	6a 0d                	push   $0xd$/;"	l
c01097f7	obj/kernel.asm	/^c01097f7:	68 63 f0 10 c0       	push   $0xc010f063$/;"	l
c01097fc	obj/kernel.asm	/^c01097fc:	e8 de 6b ff ff       	call   c01003df <__panic>$/;"	l
c0109801	obj/kernel.asm	/^c0109801:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109804	obj/kernel.asm	/^c0109804:	6a 01                	push   $0x1$/;"	l
c0109806	obj/kernel.asm	/^c0109806:	e8 0d 79 ff ff       	call   c0101118 <ide_device_size>$/;"	l
c010980b	obj/kernel.asm	/^c010980b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010980e	obj/kernel.asm	/^c010980e:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c0109811	obj/kernel.asm	/^c0109811:	a3 3c 46 1c c0       	mov    %eax,0xc01c463c$/;"	l
c0109816	obj/kernel.asm	/^c0109816:	c9                   	leave  $/;"	l
c0109817	obj/kernel.asm	/^c0109817:	c3                   	ret    $/;"	l
c0109818	obj/kernel.asm	/^c0109818 <swapfs_read>:$/;"	l
c0109818	obj/kernel.asm	/^c0109818:	55                   	push   %ebp$/;"	l
c0109819	obj/kernel.asm	/^c0109819:	89 e5                	mov    %esp,%ebp$/;"	l
c010981b	obj/kernel.asm	/^c010981b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010981e	obj/kernel.asm	/^c010981e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109821	obj/kernel.asm	/^c0109821:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109824	obj/kernel.asm	/^c0109824:	e8 68 ff ff ff       	call   c0109791 <page2kva>$/;"	l
c0109829	obj/kernel.asm	/^c0109829:	83 c4 10             	add    $0x10,%esp$/;"	l
c010982c	obj/kernel.asm	/^c010982c:	89 c2                	mov    %eax,%edx$/;"	l
c010982e	obj/kernel.asm	/^c010982e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109831	obj/kernel.asm	/^c0109831:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0109834	obj/kernel.asm	/^c0109834:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109837	obj/kernel.asm	/^c0109837:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010983b	obj/kernel.asm	/^c010983b:	74 0a                	je     c0109847 <swapfs_read+0x2f>$/;"	l
c010983d	obj/kernel.asm	/^c010983d:	a1 3c 46 1c c0       	mov    0xc01c463c,%eax$/;"	l
c0109842	obj/kernel.asm	/^c0109842:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c0109845	obj/kernel.asm	/^c0109845:	72 14                	jb     c010985b <swapfs_read+0x43>$/;"	l
c0109847	obj/kernel.asm	/^c0109847:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010984a	obj/kernel.asm	/^c010984a:	68 74 f0 10 c0       	push   $0xc010f074$/;"	l
c010984f	obj/kernel.asm	/^c010984f:	6a 14                	push   $0x14$/;"	l
c0109851	obj/kernel.asm	/^c0109851:	68 63 f0 10 c0       	push   $0xc010f063$/;"	l
c0109856	obj/kernel.asm	/^c0109856:	e8 84 6b ff ff       	call   c01003df <__panic>$/;"	l
c010985b	obj/kernel.asm	/^c010985b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010985e	obj/kernel.asm	/^c010985e:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0109861	obj/kernel.asm	/^c0109861:	6a 08                	push   $0x8$/;"	l
c0109863	obj/kernel.asm	/^c0109863:	52                   	push   %edx$/;"	l
c0109864	obj/kernel.asm	/^c0109864:	50                   	push   %eax$/;"	l
c0109865	obj/kernel.asm	/^c0109865:	6a 01                	push   $0x1$/;"	l
c0109867	obj/kernel.asm	/^c0109867:	e8 ed 78 ff ff       	call   c0101159 <ide_read_secs>$/;"	l
c010986c	obj/kernel.asm	/^c010986c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010986f	obj/kernel.asm	/^c010986f:	c9                   	leave  $/;"	l
c0109870	obj/kernel.asm	/^c0109870:	c3                   	ret    $/;"	l
c0109871	obj/kernel.asm	/^c0109871 <swapfs_write>:$/;"	l
c0109871	obj/kernel.asm	/^c0109871:	55                   	push   %ebp$/;"	l
c0109872	obj/kernel.asm	/^c0109872:	89 e5                	mov    %esp,%ebp$/;"	l
c0109874	obj/kernel.asm	/^c0109874:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109877	obj/kernel.asm	/^c0109877:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010987a	obj/kernel.asm	/^c010987a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010987d	obj/kernel.asm	/^c010987d:	e8 0f ff ff ff       	call   c0109791 <page2kva>$/;"	l
c0109882	obj/kernel.asm	/^c0109882:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109885	obj/kernel.asm	/^c0109885:	89 c2                	mov    %eax,%edx$/;"	l
c0109887	obj/kernel.asm	/^c0109887:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010988a	obj/kernel.asm	/^c010988a:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c010988d	obj/kernel.asm	/^c010988d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109890	obj/kernel.asm	/^c0109890:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109894	obj/kernel.asm	/^c0109894:	74 0a                	je     c01098a0 <swapfs_write+0x2f>$/;"	l
c0109896	obj/kernel.asm	/^c0109896:	a1 3c 46 1c c0       	mov    0xc01c463c,%eax$/;"	l
c010989b	obj/kernel.asm	/^c010989b:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010989e	obj/kernel.asm	/^c010989e:	72 14                	jb     c01098b4 <swapfs_write+0x43>$/;"	l
c01098a0	obj/kernel.asm	/^c01098a0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01098a3	obj/kernel.asm	/^c01098a3:	68 74 f0 10 c0       	push   $0xc010f074$/;"	l
c01098a8	obj/kernel.asm	/^c01098a8:	6a 19                	push   $0x19$/;"	l
c01098aa	obj/kernel.asm	/^c01098aa:	68 63 f0 10 c0       	push   $0xc010f063$/;"	l
c01098af	obj/kernel.asm	/^c01098af:	e8 2b 6b ff ff       	call   c01003df <__panic>$/;"	l
c01098b4	obj/kernel.asm	/^c01098b4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01098b7	obj/kernel.asm	/^c01098b7:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01098ba	obj/kernel.asm	/^c01098ba:	6a 08                	push   $0x8$/;"	l
c01098bc	obj/kernel.asm	/^c01098bc:	52                   	push   %edx$/;"	l
c01098bd	obj/kernel.asm	/^c01098bd:	50                   	push   %eax$/;"	l
c01098be	obj/kernel.asm	/^c01098be:	6a 01                	push   $0x1$/;"	l
c01098c0	obj/kernel.asm	/^c01098c0:	e8 bd 7a ff ff       	call   c0101382 <ide_write_secs>$/;"	l
c01098c5	obj/kernel.asm	/^c01098c5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01098c8	obj/kernel.asm	/^c01098c8:	c9                   	leave  $/;"	l
c01098c9	obj/kernel.asm	/^c01098c9:	c3                   	ret    $/;"	l
c01098ca	obj/kernel.asm	/^c01098ca <kernel_thread_entry>:$/;"	l
c01098ca	obj/kernel.asm	/^c01098ca:	52                   	push   %edx$/;"	l
c01098cb	obj/kernel.asm	/^c01098cb:	ff d3                	call   *%ebx$/;"	l
c01098cd	obj/kernel.asm	/^c01098cd:	50                   	push   %eax$/;"	l
c01098ce	obj/kernel.asm	/^c01098ce:	e8 95 0c 00 00       	call   c010a568 <do_exit>$/;"	l
c01098d3	obj/kernel.asm	/^c01098d3 <switch_to>:$/;"	l
c01098d3	obj/kernel.asm	/^c01098d3:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c01098d7	obj/kernel.asm	/^c01098d7:	8f 00                	popl   (%eax)$/;"	l
c01098d9	obj/kernel.asm	/^c01098d9:	89 60 04             	mov    %esp,0x4(%eax)$/;"	l
c01098dc	obj/kernel.asm	/^c01098dc:	89 58 08             	mov    %ebx,0x8(%eax)$/;"	l
c01098df	obj/kernel.asm	/^c01098df:	89 48 0c             	mov    %ecx,0xc(%eax)$/;"	l
c01098e2	obj/kernel.asm	/^c01098e2:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01098e5	obj/kernel.asm	/^c01098e5:	89 70 14             	mov    %esi,0x14(%eax)$/;"	l
c01098e8	obj/kernel.asm	/^c01098e8:	89 78 18             	mov    %edi,0x18(%eax)$/;"	l
c01098eb	obj/kernel.asm	/^c01098eb:	89 68 1c             	mov    %ebp,0x1c(%eax)$/;"	l
c01098ee	obj/kernel.asm	/^c01098ee:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c01098f2	obj/kernel.asm	/^c01098f2:	8b 68 1c             	mov    0x1c(%eax),%ebp$/;"	l
c01098f5	obj/kernel.asm	/^c01098f5:	8b 78 18             	mov    0x18(%eax),%edi$/;"	l
c01098f8	obj/kernel.asm	/^c01098f8:	8b 70 14             	mov    0x14(%eax),%esi$/;"	l
c01098fb	obj/kernel.asm	/^c01098fb:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c01098fe	obj/kernel.asm	/^c01098fe:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0109901	obj/kernel.asm	/^c0109901:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c0109904	obj/kernel.asm	/^c0109904:	8b 60 04             	mov    0x4(%eax),%esp$/;"	l
c0109907	obj/kernel.asm	/^c0109907:	ff 30                	pushl  (%eax)$/;"	l
c0109909	obj/kernel.asm	/^c0109909:	c3                   	ret    $/;"	l
c010990a	obj/kernel.asm	/^c010990a <timer_init>:$/;"	l
c010990a	obj/kernel.asm	/^c010990a:	55                   	push   %ebp$/;"	l
c010990b	obj/kernel.asm	/^c010990b:	89 e5                	mov    %esp,%ebp$/;"	l
c010990d	obj/kernel.asm	/^c010990d:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0109910	obj/kernel.asm	/^c0109910:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0109913	obj/kernel.asm	/^c0109913:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109916	obj/kernel.asm	/^c0109916:	89 10                	mov    %edx,(%eax)$/;"	l
c0109918	obj/kernel.asm	/^c0109918:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010991b	obj/kernel.asm	/^c010991b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010991e	obj/kernel.asm	/^c010991e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109921	obj/kernel.asm	/^c0109921:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109924	obj/kernel.asm	/^c0109924:	83 c0 08             	add    $0x8,%eax$/;"	l
c0109927	obj/kernel.asm	/^c0109927:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010992a	obj/kernel.asm	/^c010992a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010992d	obj/kernel.asm	/^c010992d:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0109930	obj/kernel.asm	/^c0109930:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109933	obj/kernel.asm	/^c0109933:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109936	obj/kernel.asm	/^c0109936:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109939	obj/kernel.asm	/^c0109939:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010993c	obj/kernel.asm	/^c010993c:	89 10                	mov    %edx,(%eax)$/;"	l
c010993e	obj/kernel.asm	/^c010993e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109941	obj/kernel.asm	/^c0109941:	c9                   	leave  $/;"	l
c0109942	obj/kernel.asm	/^c0109942:	c3                   	ret    $/;"	l
c0109943	obj/kernel.asm	/^c0109943 <__intr_save>:$/;"	l
c0109943	obj/kernel.asm	/^c0109943:	55                   	push   %ebp$/;"	l
c0109944	obj/kernel.asm	/^c0109944:	89 e5                	mov    %esp,%ebp$/;"	l
c0109946	obj/kernel.asm	/^c0109946:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109949	obj/kernel.asm	/^c0109949:	9c                   	pushf  $/;"	l
c010994a	obj/kernel.asm	/^c010994a:	58                   	pop    %eax$/;"	l
c010994b	obj/kernel.asm	/^c010994b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010994e	obj/kernel.asm	/^c010994e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109951	obj/kernel.asm	/^c0109951:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0109956	obj/kernel.asm	/^c0109956:	85 c0                	test   %eax,%eax$/;"	l
c0109958	obj/kernel.asm	/^c0109958:	74 0c                	je     c0109966 <__intr_save+0x23>$/;"	l
c010995a	obj/kernel.asm	/^c010995a:	e8 43 87 ff ff       	call   c01020a2 <intr_disable>$/;"	l
c010995f	obj/kernel.asm	/^c010995f:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0109964	obj/kernel.asm	/^c0109964:	eb 05                	jmp    c010996b <__intr_save+0x28>$/;"	l
c0109966	obj/kernel.asm	/^c0109966:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010996b	obj/kernel.asm	/^c010996b:	c9                   	leave  $/;"	l
c010996c	obj/kernel.asm	/^c010996c:	c3                   	ret    $/;"	l
c010996d	obj/kernel.asm	/^c010996d <__intr_restore>:$/;"	l
c010996d	obj/kernel.asm	/^c010996d:	55                   	push   %ebp$/;"	l
c010996e	obj/kernel.asm	/^c010996e:	89 e5                	mov    %esp,%ebp$/;"	l
c0109970	obj/kernel.asm	/^c0109970:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109973	obj/kernel.asm	/^c0109973:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0109977	obj/kernel.asm	/^c0109977:	74 05                	je     c010997e <__intr_restore+0x11>$/;"	l
c0109979	obj/kernel.asm	/^c0109979:	e8 1e 87 ff ff       	call   c010209c <intr_enable>$/;"	l
c010997e	obj/kernel.asm	/^c010997e:	c9                   	leave  $/;"	l
c010997f	obj/kernel.asm	/^c010997f:	c3                   	ret    $/;"	l
c0109980	obj/kernel.asm	/^c0109980 <page2ppn>:$/;"	l
c0109980	obj/kernel.asm	/^c0109980:	55                   	push   %ebp$/;"	l
c0109981	obj/kernel.asm	/^c0109981:	89 e5                	mov    %esp,%ebp$/;"	l
c0109983	obj/kernel.asm	/^c0109983:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109986	obj/kernel.asm	/^c0109986:	8b 15 98 45 1c c0    	mov    0xc01c4598,%edx$/;"	l
c010998c	obj/kernel.asm	/^c010998c:	29 d0                	sub    %edx,%eax$/;"	l
c010998e	obj/kernel.asm	/^c010998e:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0109991	obj/kernel.asm	/^c0109991:	5d                   	pop    %ebp$/;"	l
c0109992	obj/kernel.asm	/^c0109992:	c3                   	ret    $/;"	l
c0109993	obj/kernel.asm	/^c0109993 <page2pa>:$/;"	l
c0109993	obj/kernel.asm	/^c0109993:	55                   	push   %ebp$/;"	l
c0109994	obj/kernel.asm	/^c0109994:	89 e5                	mov    %esp,%ebp$/;"	l
c0109996	obj/kernel.asm	/^c0109996:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109999	obj/kernel.asm	/^c0109999:	e8 e2 ff ff ff       	call   c0109980 <page2ppn>$/;"	l
c010999e	obj/kernel.asm	/^c010999e:	83 c4 04             	add    $0x4,%esp$/;"	l
c01099a1	obj/kernel.asm	/^c01099a1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01099a4	obj/kernel.asm	/^c01099a4:	c9                   	leave  $/;"	l
c01099a5	obj/kernel.asm	/^c01099a5:	c3                   	ret    $/;"	l
c01099a6	obj/kernel.asm	/^c01099a6 <pa2page>:$/;"	l
c01099a6	obj/kernel.asm	/^c01099a6:	55                   	push   %ebp$/;"	l
c01099a7	obj/kernel.asm	/^c01099a7:	89 e5                	mov    %esp,%ebp$/;"	l
c01099a9	obj/kernel.asm	/^c01099a9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01099ac	obj/kernel.asm	/^c01099ac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01099af	obj/kernel.asm	/^c01099af:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01099b2	obj/kernel.asm	/^c01099b2:	89 c2                	mov    %eax,%edx$/;"	l
c01099b4	obj/kernel.asm	/^c01099b4:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c01099b9	obj/kernel.asm	/^c01099b9:	39 c2                	cmp    %eax,%edx$/;"	l
c01099bb	obj/kernel.asm	/^c01099bb:	72 14                	jb     c01099d1 <pa2page+0x2b>$/;"	l
c01099bd	obj/kernel.asm	/^c01099bd:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01099c0	obj/kernel.asm	/^c01099c0:	68 94 f0 10 c0       	push   $0xc010f094$/;"	l
c01099c5	obj/kernel.asm	/^c01099c5:	6a 5e                	push   $0x5e$/;"	l
c01099c7	obj/kernel.asm	/^c01099c7:	68 b3 f0 10 c0       	push   $0xc010f0b3$/;"	l
c01099cc	obj/kernel.asm	/^c01099cc:	e8 0e 6a ff ff       	call   c01003df <__panic>$/;"	l
c01099d1	obj/kernel.asm	/^c01099d1:	a1 98 45 1c c0       	mov    0xc01c4598,%eax$/;"	l
c01099d6	obj/kernel.asm	/^c01099d6:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01099d9	obj/kernel.asm	/^c01099d9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c01099dc	obj/kernel.asm	/^c01099dc:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c01099df	obj/kernel.asm	/^c01099df:	01 d0                	add    %edx,%eax$/;"	l
c01099e1	obj/kernel.asm	/^c01099e1:	c9                   	leave  $/;"	l
c01099e2	obj/kernel.asm	/^c01099e2:	c3                   	ret    $/;"	l
c01099e3	obj/kernel.asm	/^c01099e3 <page2kva>:$/;"	l
c01099e3	obj/kernel.asm	/^c01099e3:	55                   	push   %ebp$/;"	l
c01099e4	obj/kernel.asm	/^c01099e4:	89 e5                	mov    %esp,%ebp$/;"	l
c01099e6	obj/kernel.asm	/^c01099e6:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01099e9	obj/kernel.asm	/^c01099e9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01099ec	obj/kernel.asm	/^c01099ec:	e8 a2 ff ff ff       	call   c0109993 <page2pa>$/;"	l
c01099f1	obj/kernel.asm	/^c01099f1:	83 c4 04             	add    $0x4,%esp$/;"	l
c01099f4	obj/kernel.asm	/^c01099f4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01099f7	obj/kernel.asm	/^c01099f7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01099fa	obj/kernel.asm	/^c01099fa:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01099fd	obj/kernel.asm	/^c01099fd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109a00	obj/kernel.asm	/^c0109a00:	a1 c0 23 1c c0       	mov    0xc01c23c0,%eax$/;"	l
c0109a05	obj/kernel.asm	/^c0109a05:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0109a08	obj/kernel.asm	/^c0109a08:	72 14                	jb     c0109a1e <page2kva+0x3b>$/;"	l
c0109a0a	obj/kernel.asm	/^c0109a0a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109a0d	obj/kernel.asm	/^c0109a0d:	68 c4 f0 10 c0       	push   $0xc010f0c4$/;"	l
c0109a12	obj/kernel.asm	/^c0109a12:	6a 65                	push   $0x65$/;"	l
c0109a14	obj/kernel.asm	/^c0109a14:	68 b3 f0 10 c0       	push   $0xc010f0b3$/;"	l
c0109a19	obj/kernel.asm	/^c0109a19:	e8 c1 69 ff ff       	call   c01003df <__panic>$/;"	l
c0109a1e	obj/kernel.asm	/^c0109a1e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109a21	obj/kernel.asm	/^c0109a21:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0109a26	obj/kernel.asm	/^c0109a26:	c9                   	leave  $/;"	l
c0109a27	obj/kernel.asm	/^c0109a27:	c3                   	ret    $/;"	l
c0109a28	obj/kernel.asm	/^c0109a28 <kva2page>:$/;"	l
c0109a28	obj/kernel.asm	/^c0109a28:	55                   	push   %ebp$/;"	l
c0109a29	obj/kernel.asm	/^c0109a29:	89 e5                	mov    %esp,%ebp$/;"	l
c0109a2b	obj/kernel.asm	/^c0109a2b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109a2e	obj/kernel.asm	/^c0109a2e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a31	obj/kernel.asm	/^c0109a31:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109a34	obj/kernel.asm	/^c0109a34:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0109a3b	obj/kernel.asm	/^c0109a3b:	77 14                	ja     c0109a51 <kva2page+0x29>$/;"	l
c0109a3d	obj/kernel.asm	/^c0109a3d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109a40	obj/kernel.asm	/^c0109a40:	68 e8 f0 10 c0       	push   $0xc010f0e8$/;"	l
c0109a45	obj/kernel.asm	/^c0109a45:	6a 6a                	push   $0x6a$/;"	l
c0109a47	obj/kernel.asm	/^c0109a47:	68 b3 f0 10 c0       	push   $0xc010f0b3$/;"	l
c0109a4c	obj/kernel.asm	/^c0109a4c:	e8 8e 69 ff ff       	call   c01003df <__panic>$/;"	l
c0109a51	obj/kernel.asm	/^c0109a51:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109a54	obj/kernel.asm	/^c0109a54:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0109a59	obj/kernel.asm	/^c0109a59:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109a5c	obj/kernel.asm	/^c0109a5c:	50                   	push   %eax$/;"	l
c0109a5d	obj/kernel.asm	/^c0109a5d:	e8 44 ff ff ff       	call   c01099a6 <pa2page>$/;"	l
c0109a62	obj/kernel.asm	/^c0109a62:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109a65	obj/kernel.asm	/^c0109a65:	c9                   	leave  $/;"	l
c0109a66	obj/kernel.asm	/^c0109a66:	c3                   	ret    $/;"	l
c0109a67	obj/kernel.asm	/^c0109a67 <mm_count_inc>:$/;"	l
c0109a67	obj/kernel.asm	/^c0109a67:	55                   	push   %ebp$/;"	l
c0109a68	obj/kernel.asm	/^c0109a68:	89 e5                	mov    %esp,%ebp$/;"	l
c0109a6a	obj/kernel.asm	/^c0109a6a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a6d	obj/kernel.asm	/^c0109a6d:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109a70	obj/kernel.asm	/^c0109a70:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0109a73	obj/kernel.asm	/^c0109a73:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a76	obj/kernel.asm	/^c0109a76:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0109a79	obj/kernel.asm	/^c0109a79:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a7c	obj/kernel.asm	/^c0109a7c:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109a7f	obj/kernel.asm	/^c0109a7f:	5d                   	pop    %ebp$/;"	l
c0109a80	obj/kernel.asm	/^c0109a80:	c3                   	ret    $/;"	l
c0109a81	obj/kernel.asm	/^c0109a81 <mm_count_dec>:$/;"	l
c0109a81	obj/kernel.asm	/^c0109a81:	55                   	push   %ebp$/;"	l
c0109a82	obj/kernel.asm	/^c0109a82:	89 e5                	mov    %esp,%ebp$/;"	l
c0109a84	obj/kernel.asm	/^c0109a84:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a87	obj/kernel.asm	/^c0109a87:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109a8a	obj/kernel.asm	/^c0109a8a:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0109a8d	obj/kernel.asm	/^c0109a8d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a90	obj/kernel.asm	/^c0109a90:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0109a93	obj/kernel.asm	/^c0109a93:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a96	obj/kernel.asm	/^c0109a96:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109a99	obj/kernel.asm	/^c0109a99:	5d                   	pop    %ebp$/;"	l
c0109a9a	obj/kernel.asm	/^c0109a9a:	c3                   	ret    $/;"	l
c0109a9b	obj/kernel.asm	/^c0109a9b <lock_mm>:$/;"	l
c0109a9b	obj/kernel.asm	/^c0109a9b:	55                   	push   %ebp$/;"	l
c0109a9c	obj/kernel.asm	/^c0109a9c:	89 e5                	mov    %esp,%ebp$/;"	l
c0109a9e	obj/kernel.asm	/^c0109a9e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109aa1	obj/kernel.asm	/^c0109aa1:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0109aa5	obj/kernel.asm	/^c0109aa5:	74 29                	je     c0109ad0 <lock_mm+0x35>$/;"	l
c0109aa7	obj/kernel.asm	/^c0109aa7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109aaa	obj/kernel.asm	/^c0109aaa:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0109aad	obj/kernel.asm	/^c0109aad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109ab0	obj/kernel.asm	/^c0109ab0:	50                   	push   %eax$/;"	l
c0109ab1	obj/kernel.asm	/^c0109ab1:	e8 94 fa ff ff       	call   c010954a <down>$/;"	l
c0109ab6	obj/kernel.asm	/^c0109ab6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ab9	obj/kernel.asm	/^c0109ab9:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c0109abe	obj/kernel.asm	/^c0109abe:	85 c0                	test   %eax,%eax$/;"	l
c0109ac0	obj/kernel.asm	/^c0109ac0:	74 0e                	je     c0109ad0 <lock_mm+0x35>$/;"	l
c0109ac2	obj/kernel.asm	/^c0109ac2:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c0109ac7	obj/kernel.asm	/^c0109ac7:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109aca	obj/kernel.asm	/^c0109aca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109acd	obj/kernel.asm	/^c0109acd:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
c0109ad0	obj/kernel.asm	/^c0109ad0:	c9                   	leave  $/;"	l
c0109ad1	obj/kernel.asm	/^c0109ad1:	c3                   	ret    $/;"	l
c0109ad2	obj/kernel.asm	/^c0109ad2 <unlock_mm>:$/;"	l
c0109ad2	obj/kernel.asm	/^c0109ad2:	55                   	push   %ebp$/;"	l
c0109ad3	obj/kernel.asm	/^c0109ad3:	89 e5                	mov    %esp,%ebp$/;"	l
c0109ad5	obj/kernel.asm	/^c0109ad5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109ad8	obj/kernel.asm	/^c0109ad8:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0109adc	obj/kernel.asm	/^c0109adc:	74 1c                	je     c0109afa <unlock_mm+0x28>$/;"	l
c0109ade	obj/kernel.asm	/^c0109ade:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109ae1	obj/kernel.asm	/^c0109ae1:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0109ae4	obj/kernel.asm	/^c0109ae4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109ae7	obj/kernel.asm	/^c0109ae7:	50                   	push   %eax$/;"	l
c0109ae8	obj/kernel.asm	/^c0109ae8:	e8 42 fa ff ff       	call   c010952f <up>$/;"	l
c0109aed	obj/kernel.asm	/^c0109aed:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109af0	obj/kernel.asm	/^c0109af0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109af3	obj/kernel.asm	/^c0109af3:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)$/;"	l
c0109afa	obj/kernel.asm	/^c0109afa:	c9                   	leave  $/;"	l
c0109afb	obj/kernel.asm	/^c0109afb:	c3                   	ret    $/;"	l
c0109afc	obj/kernel.asm	/^c0109afc <alloc_proc>:$/;"	l
c0109afc	obj/kernel.asm	/^c0109afc:	55                   	push   %ebp$/;"	l
c0109afd	obj/kernel.asm	/^c0109afd:	89 e5                	mov    %esp,%ebp$/;"	l
c0109aff	obj/kernel.asm	/^c0109aff:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109b02	obj/kernel.asm	/^c0109b02:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109b05	obj/kernel.asm	/^c0109b05:	68 c4 00 00 00       	push   $0xc4$/;"	l
c0109b0a	obj/kernel.asm	/^c0109b0a:	e8 dd d8 ff ff       	call   c01073ec <kmalloc>$/;"	l
c0109b0f	obj/kernel.asm	/^c0109b0f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109b12	obj/kernel.asm	/^c0109b12:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109b15	obj/kernel.asm	/^c0109b15:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109b19	obj/kernel.asm	/^c0109b19:	0f 84 53 01 00 00    	je     c0109c72 <alloc_proc+0x176>$/;"	l
c0109b1f	obj/kernel.asm	/^c0109b1f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b22	obj/kernel.asm	/^c0109b22:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0109b28	obj/kernel.asm	/^c0109b28:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b2b	obj/kernel.asm	/^c0109b2b:	c7 40 04 ff ff ff ff 	movl   $0xffffffff,0x4(%eax)$/;"	l
c0109b32	obj/kernel.asm	/^c0109b32:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b35	obj/kernel.asm	/^c0109b35:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0109b3c	obj/kernel.asm	/^c0109b3c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b3f	obj/kernel.asm	/^c0109b3f:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0109b46	obj/kernel.asm	/^c0109b46:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b49	obj/kernel.asm	/^c0109b49:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c0109b50	obj/kernel.asm	/^c0109b50:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b53	obj/kernel.asm	/^c0109b53:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c0109b5a	obj/kernel.asm	/^c0109b5a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b5d	obj/kernel.asm	/^c0109b5d:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c0109b64	obj/kernel.asm	/^c0109b64:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b67	obj/kernel.asm	/^c0109b67:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0109b6a	obj/kernel.asm	/^c0109b6a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109b6d	obj/kernel.asm	/^c0109b6d:	6a 20                	push   $0x20$/;"	l
c0109b6f	obj/kernel.asm	/^c0109b6f:	6a 00                	push   $0x0$/;"	l
c0109b71	obj/kernel.asm	/^c0109b71:	50                   	push   %eax$/;"	l
c0109b72	obj/kernel.asm	/^c0109b72:	e8 81 27 00 00       	call   c010c2f8 <memset>$/;"	l
c0109b77	obj/kernel.asm	/^c0109b77:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109b7a	obj/kernel.asm	/^c0109b7a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b7d	obj/kernel.asm	/^c0109b7d:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%eax)$/;"	l
c0109b84	obj/kernel.asm	/^c0109b84:	8b 15 94 45 1c c0    	mov    0xc01c4594,%edx$/;"	l
c0109b8a	obj/kernel.asm	/^c0109b8a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b8d	obj/kernel.asm	/^c0109b8d:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c0109b90	obj/kernel.asm	/^c0109b90:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b93	obj/kernel.asm	/^c0109b93:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)$/;"	l
c0109b9a	obj/kernel.asm	/^c0109b9a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109b9d	obj/kernel.asm	/^c0109b9d:	83 c0 48             	add    $0x48,%eax$/;"	l
c0109ba0	obj/kernel.asm	/^c0109ba0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109ba3	obj/kernel.asm	/^c0109ba3:	6a 32                	push   $0x32$/;"	l
c0109ba5	obj/kernel.asm	/^c0109ba5:	6a 00                	push   $0x0$/;"	l
c0109ba7	obj/kernel.asm	/^c0109ba7:	50                   	push   %eax$/;"	l
c0109ba8	obj/kernel.asm	/^c0109ba8:	e8 4b 27 00 00       	call   c010c2f8 <memset>$/;"	l
c0109bad	obj/kernel.asm	/^c0109bad:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109bb0	obj/kernel.asm	/^c0109bb0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109bb3	obj/kernel.asm	/^c0109bb3:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%eax)$/;"	l
c0109bba	obj/kernel.asm	/^c0109bba:	00 00 00 $/;"	l
c0109bbd	obj/kernel.asm	/^c0109bbd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109bc0	obj/kernel.asm	/^c0109bc0:	c7 80 9c 00 00 00 00 	movl   $0x0,0x9c(%eax)$/;"	l
c0109bc7	obj/kernel.asm	/^c0109bc7:	00 00 00 $/;"	l
c0109bca	obj/kernel.asm	/^c0109bca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109bcd	obj/kernel.asm	/^c0109bcd:	8b 90 9c 00 00 00    	mov    0x9c(%eax),%edx$/;"	l
c0109bd3	obj/kernel.asm	/^c0109bd3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109bd6	obj/kernel.asm	/^c0109bd6:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c0109bdc	obj/kernel.asm	/^c0109bdc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109bdf	obj/kernel.asm	/^c0109bdf:	8b 90 98 00 00 00    	mov    0x98(%eax),%edx$/;"	l
c0109be5	obj/kernel.asm	/^c0109be5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109be8	obj/kernel.asm	/^c0109be8:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c0109bee	obj/kernel.asm	/^c0109bee:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109bf1	obj/kernel.asm	/^c0109bf1:	c7 80 a0 00 00 00 00 	movl   $0x0,0xa0(%eax)$/;"	l
c0109bf8	obj/kernel.asm	/^c0109bf8:	00 00 00 $/;"	l
c0109bfb	obj/kernel.asm	/^c0109bfb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109bfe	obj/kernel.asm	/^c0109bfe:	c7 80 a8 00 00 00 00 	movl   $0x0,0xa8(%eax)$/;"	l
c0109c05	obj/kernel.asm	/^c0109c05:	00 00 00 $/;"	l
c0109c08	obj/kernel.asm	/^c0109c08:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c0b	obj/kernel.asm	/^c0109c0b:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx$/;"	l
c0109c11	obj/kernel.asm	/^c0109c11:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c14	obj/kernel.asm	/^c0109c14:	89 90 a4 00 00 00    	mov    %edx,0xa4(%eax)$/;"	l
c0109c1a	obj/kernel.asm	/^c0109c1a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c1d	obj/kernel.asm	/^c0109c1d:	c7 80 ac 00 00 00 00 	movl   $0x0,0xac(%eax)$/;"	l
c0109c24	obj/kernel.asm	/^c0109c24:	00 00 00 $/;"	l
c0109c27	obj/kernel.asm	/^c0109c27:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c2a	obj/kernel.asm	/^c0109c2a:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%eax)$/;"	l
c0109c31	obj/kernel.asm	/^c0109c31:	00 00 00 $/;"	l
c0109c34	obj/kernel.asm	/^c0109c34:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c37	obj/kernel.asm	/^c0109c37:	8b 90 b0 00 00 00    	mov    0xb0(%eax),%edx$/;"	l
c0109c3d	obj/kernel.asm	/^c0109c3d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c40	obj/kernel.asm	/^c0109c40:	89 90 b8 00 00 00    	mov    %edx,0xb8(%eax)$/;"	l
c0109c46	obj/kernel.asm	/^c0109c46:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c49	obj/kernel.asm	/^c0109c49:	8b 90 b8 00 00 00    	mov    0xb8(%eax),%edx$/;"	l
c0109c4f	obj/kernel.asm	/^c0109c4f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c52	obj/kernel.asm	/^c0109c52:	89 90 b4 00 00 00    	mov    %edx,0xb4(%eax)$/;"	l
c0109c58	obj/kernel.asm	/^c0109c58:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c5b	obj/kernel.asm	/^c0109c5b:	c7 80 bc 00 00 00 00 	movl   $0x0,0xbc(%eax)$/;"	l
c0109c62	obj/kernel.asm	/^c0109c62:	00 00 00 $/;"	l
c0109c65	obj/kernel.asm	/^c0109c65:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c68	obj/kernel.asm	/^c0109c68:	c7 80 c0 00 00 00 00 	movl   $0x0,0xc0(%eax)$/;"	l
c0109c6f	obj/kernel.asm	/^c0109c6f:	00 00 00 $/;"	l
c0109c72	obj/kernel.asm	/^c0109c72:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c75	obj/kernel.asm	/^c0109c75:	c9                   	leave  $/;"	l
c0109c76	obj/kernel.asm	/^c0109c76:	c3                   	ret    $/;"	l
c0109c77	obj/kernel.asm	/^c0109c77 <set_proc_name>:$/;"	l
c0109c77	obj/kernel.asm	/^c0109c77:	55                   	push   %ebp$/;"	l
c0109c78	obj/kernel.asm	/^c0109c78:	89 e5                	mov    %esp,%ebp$/;"	l
c0109c7a	obj/kernel.asm	/^c0109c7a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109c7d	obj/kernel.asm	/^c0109c7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109c80	obj/kernel.asm	/^c0109c80:	83 c0 48             	add    $0x48,%eax$/;"	l
c0109c83	obj/kernel.asm	/^c0109c83:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109c86	obj/kernel.asm	/^c0109c86:	6a 33                	push   $0x33$/;"	l
c0109c88	obj/kernel.asm	/^c0109c88:	6a 00                	push   $0x0$/;"	l
c0109c8a	obj/kernel.asm	/^c0109c8a:	50                   	push   %eax$/;"	l
c0109c8b	obj/kernel.asm	/^c0109c8b:	e8 68 26 00 00       	call   c010c2f8 <memset>$/;"	l
c0109c90	obj/kernel.asm	/^c0109c90:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109c93	obj/kernel.asm	/^c0109c93:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109c96	obj/kernel.asm	/^c0109c96:	83 c0 48             	add    $0x48,%eax$/;"	l
c0109c99	obj/kernel.asm	/^c0109c99:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109c9c	obj/kernel.asm	/^c0109c9c:	6a 32                	push   $0x32$/;"	l
c0109c9e	obj/kernel.asm	/^c0109c9e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109ca1	obj/kernel.asm	/^c0109ca1:	50                   	push   %eax$/;"	l
c0109ca2	obj/kernel.asm	/^c0109ca2:	e8 34 27 00 00       	call   c010c3db <memcpy>$/;"	l
c0109ca7	obj/kernel.asm	/^c0109ca7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109caa	obj/kernel.asm	/^c0109caa:	c9                   	leave  $/;"	l
c0109cab	obj/kernel.asm	/^c0109cab:	c3                   	ret    $/;"	l
c0109cac	obj/kernel.asm	/^c0109cac <get_proc_name>:$/;"	l
c0109cac	obj/kernel.asm	/^c0109cac:	55                   	push   %ebp$/;"	l
c0109cad	obj/kernel.asm	/^c0109cad:	89 e5                	mov    %esp,%ebp$/;"	l
c0109caf	obj/kernel.asm	/^c0109caf:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109cb2	obj/kernel.asm	/^c0109cb2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109cb5	obj/kernel.asm	/^c0109cb5:	6a 33                	push   $0x33$/;"	l
c0109cb7	obj/kernel.asm	/^c0109cb7:	6a 00                	push   $0x0$/;"	l
c0109cb9	obj/kernel.asm	/^c0109cb9:	68 e0 44 1c c0       	push   $0xc01c44e0$/;"	l
c0109cbe	obj/kernel.asm	/^c0109cbe:	e8 35 26 00 00       	call   c010c2f8 <memset>$/;"	l
c0109cc3	obj/kernel.asm	/^c0109cc3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109cc6	obj/kernel.asm	/^c0109cc6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109cc9	obj/kernel.asm	/^c0109cc9:	83 c0 48             	add    $0x48,%eax$/;"	l
c0109ccc	obj/kernel.asm	/^c0109ccc:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109ccf	obj/kernel.asm	/^c0109ccf:	6a 32                	push   $0x32$/;"	l
c0109cd1	obj/kernel.asm	/^c0109cd1:	50                   	push   %eax$/;"	l
c0109cd2	obj/kernel.asm	/^c0109cd2:	68 e0 44 1c c0       	push   $0xc01c44e0$/;"	l
c0109cd7	obj/kernel.asm	/^c0109cd7:	e8 ff 26 00 00       	call   c010c3db <memcpy>$/;"	l
c0109cdc	obj/kernel.asm	/^c0109cdc:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109cdf	obj/kernel.asm	/^c0109cdf:	c9                   	leave  $/;"	l
c0109ce0	obj/kernel.asm	/^c0109ce0:	c3                   	ret    $/;"	l
c0109ce1	obj/kernel.asm	/^c0109ce1 <set_links>:$/;"	l
c0109ce1	obj/kernel.asm	/^c0109ce1:	55                   	push   %ebp$/;"	l
c0109ce2	obj/kernel.asm	/^c0109ce2:	89 e5                	mov    %esp,%ebp$/;"	l
c0109ce4	obj/kernel.asm	/^c0109ce4:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0109ce7	obj/kernel.asm	/^c0109ce7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109cea	obj/kernel.asm	/^c0109cea:	83 c0 7c             	add    $0x7c,%eax$/;"	l
c0109ced	obj/kernel.asm	/^c0109ced:	c7 45 fc 5c 47 1c c0 	movl   $0xc01c475c,-0x4(%ebp)$/;"	l
c0109cf4	obj/kernel.asm	/^c0109cf4:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0109cf7	obj/kernel.asm	/^c0109cf7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109cfa	obj/kernel.asm	/^c0109cfa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109cfd	obj/kernel.asm	/^c0109cfd:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0109d00	obj/kernel.asm	/^c0109d00:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109d03	obj/kernel.asm	/^c0109d03:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109d06	obj/kernel.asm	/^c0109d06:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109d09	obj/kernel.asm	/^c0109d09:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0109d0c	obj/kernel.asm	/^c0109d0c:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0109d0f	obj/kernel.asm	/^c0109d0f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0109d12	obj/kernel.asm	/^c0109d12:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c0109d15	obj/kernel.asm	/^c0109d15:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0109d18	obj/kernel.asm	/^c0109d18:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109d1b	obj/kernel.asm	/^c0109d1b:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109d1e	obj/kernel.asm	/^c0109d1e:	89 10                	mov    %edx,(%eax)$/;"	l
c0109d20	obj/kernel.asm	/^c0109d20:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109d23	obj/kernel.asm	/^c0109d23:	8b 10                	mov    (%eax),%edx$/;"	l
c0109d25	obj/kernel.asm	/^c0109d25:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109d28	obj/kernel.asm	/^c0109d28:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109d2b	obj/kernel.asm	/^c0109d2b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109d2e	obj/kernel.asm	/^c0109d2e:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0109d31	obj/kernel.asm	/^c0109d31:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109d34	obj/kernel.asm	/^c0109d34:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109d37	obj/kernel.asm	/^c0109d37:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0109d3a	obj/kernel.asm	/^c0109d3a:	89 10                	mov    %edx,(%eax)$/;"	l
c0109d3c	obj/kernel.asm	/^c0109d3c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109d3f	obj/kernel.asm	/^c0109d3f:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%eax)$/;"	l
c0109d46	obj/kernel.asm	/^c0109d46:	00 00 00 $/;"	l
c0109d49	obj/kernel.asm	/^c0109d49:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109d4c	obj/kernel.asm	/^c0109d4c:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0109d4f	obj/kernel.asm	/^c0109d4f:	8b 90 94 00 00 00    	mov    0x94(%eax),%edx$/;"	l
c0109d55	obj/kernel.asm	/^c0109d55:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109d58	obj/kernel.asm	/^c0109d58:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c0109d5e	obj/kernel.asm	/^c0109d5e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109d61	obj/kernel.asm	/^c0109d61:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c0109d67	obj/kernel.asm	/^c0109d67:	85 c0                	test   %eax,%eax$/;"	l
c0109d69	obj/kernel.asm	/^c0109d69:	74 12                	je     c0109d7d <set_links+0x9c>$/;"	l
c0109d6b	obj/kernel.asm	/^c0109d6b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109d6e	obj/kernel.asm	/^c0109d6e:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c0109d74	obj/kernel.asm	/^c0109d74:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109d77	obj/kernel.asm	/^c0109d77:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c0109d7d	obj/kernel.asm	/^c0109d7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109d80	obj/kernel.asm	/^c0109d80:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0109d83	obj/kernel.asm	/^c0109d83:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109d86	obj/kernel.asm	/^c0109d86:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c0109d8c	obj/kernel.asm	/^c0109d8c:	a1 c0 44 1c c0       	mov    0xc01c44c0,%eax$/;"	l
c0109d91	obj/kernel.asm	/^c0109d91:	83 c0 01             	add    $0x1,%eax$/;"	l
c0109d94	obj/kernel.asm	/^c0109d94:	a3 c0 44 1c c0       	mov    %eax,0xc01c44c0$/;"	l
c0109d99	obj/kernel.asm	/^c0109d99:	c9                   	leave  $/;"	l
c0109d9a	obj/kernel.asm	/^c0109d9a:	c3                   	ret    $/;"	l
c0109d9b	obj/kernel.asm	/^c0109d9b <remove_links>:$/;"	l
c0109d9b	obj/kernel.asm	/^c0109d9b:	55                   	push   %ebp$/;"	l
c0109d9c	obj/kernel.asm	/^c0109d9c:	89 e5                	mov    %esp,%ebp$/;"	l
c0109d9e	obj/kernel.asm	/^c0109d9e:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0109da1	obj/kernel.asm	/^c0109da1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109da4	obj/kernel.asm	/^c0109da4:	83 c0 7c             	add    $0x7c,%eax$/;"	l
c0109da7	obj/kernel.asm	/^c0109da7:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109daa	obj/kernel.asm	/^c0109daa:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109dad	obj/kernel.asm	/^c0109dad:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109db0	obj/kernel.asm	/^c0109db0:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0109db3	obj/kernel.asm	/^c0109db3:	8b 12                	mov    (%edx),%edx$/;"	l
c0109db5	obj/kernel.asm	/^c0109db5:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c0109db8	obj/kernel.asm	/^c0109db8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109dbb	obj/kernel.asm	/^c0109dbb:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0109dbe	obj/kernel.asm	/^c0109dbe:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0109dc1	obj/kernel.asm	/^c0109dc1:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109dc4	obj/kernel.asm	/^c0109dc4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109dc7	obj/kernel.asm	/^c0109dc7:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c0109dca	obj/kernel.asm	/^c0109dca:	89 10                	mov    %edx,(%eax)$/;"	l
c0109dcc	obj/kernel.asm	/^c0109dcc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109dcf	obj/kernel.asm	/^c0109dcf:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c0109dd5	obj/kernel.asm	/^c0109dd5:	85 c0                	test   %eax,%eax$/;"	l
c0109dd7	obj/kernel.asm	/^c0109dd7:	74 18                	je     c0109df1 <remove_links+0x56>$/;"	l
c0109dd9	obj/kernel.asm	/^c0109dd9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109ddc	obj/kernel.asm	/^c0109ddc:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c0109de2	obj/kernel.asm	/^c0109de2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109de5	obj/kernel.asm	/^c0109de5:	8b 92 98 00 00 00    	mov    0x98(%edx),%edx$/;"	l
c0109deb	obj/kernel.asm	/^c0109deb:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c0109df1	obj/kernel.asm	/^c0109df1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109df4	obj/kernel.asm	/^c0109df4:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax$/;"	l
c0109dfa	obj/kernel.asm	/^c0109dfa:	85 c0                	test   %eax,%eax$/;"	l
c0109dfc	obj/kernel.asm	/^c0109dfc:	74 1a                	je     c0109e18 <remove_links+0x7d>$/;"	l
c0109dfe	obj/kernel.asm	/^c0109dfe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109e01	obj/kernel.asm	/^c0109e01:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax$/;"	l
c0109e07	obj/kernel.asm	/^c0109e07:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109e0a	obj/kernel.asm	/^c0109e0a:	8b 92 9c 00 00 00    	mov    0x9c(%edx),%edx$/;"	l
c0109e10	obj/kernel.asm	/^c0109e10:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c0109e16	obj/kernel.asm	/^c0109e16:	eb 15                	jmp    c0109e2d <remove_links+0x92>$/;"	l
c0109e18	obj/kernel.asm	/^c0109e18:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109e1b	obj/kernel.asm	/^c0109e1b:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0109e1e	obj/kernel.asm	/^c0109e1e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0109e21	obj/kernel.asm	/^c0109e21:	8b 92 9c 00 00 00    	mov    0x9c(%edx),%edx$/;"	l
c0109e27	obj/kernel.asm	/^c0109e27:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c0109e2d	obj/kernel.asm	/^c0109e2d:	a1 c0 44 1c c0       	mov    0xc01c44c0,%eax$/;"	l
c0109e32	obj/kernel.asm	/^c0109e32:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0109e35	obj/kernel.asm	/^c0109e35:	a3 c0 44 1c c0       	mov    %eax,0xc01c44c0$/;"	l
c0109e3a	obj/kernel.asm	/^c0109e3a:	c9                   	leave  $/;"	l
c0109e3b	obj/kernel.asm	/^c0109e3b:	c3                   	ret    $/;"	l
c0109e3c	obj/kernel.asm	/^c0109e3c <get_pid>:$/;"	l
c0109e3c	obj/kernel.asm	/^c0109e3c:	55                   	push   %ebp$/;"	l
c0109e3d	obj/kernel.asm	/^c0109e3d:	89 e5                	mov    %esp,%ebp$/;"	l
c0109e3f	obj/kernel.asm	/^c0109e3f:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0109e42	obj/kernel.asm	/^c0109e42:	c7 45 f8 5c 47 1c c0 	movl   $0xc01c475c,-0x8(%ebp)$/;"	l
c0109e49	obj/kernel.asm	/^c0109e49:	a1 e4 0a 13 c0       	mov    0xc0130ae4,%eax$/;"	l
c0109e4e	obj/kernel.asm	/^c0109e4e:	83 c0 01             	add    $0x1,%eax$/;"	l
c0109e51	obj/kernel.asm	/^c0109e51:	a3 e4 0a 13 c0       	mov    %eax,0xc0130ae4$/;"	l
c0109e56	obj/kernel.asm	/^c0109e56:	a1 e4 0a 13 c0       	mov    0xc0130ae4,%eax$/;"	l
c0109e5b	obj/kernel.asm	/^c0109e5b:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c0109e60	obj/kernel.asm	/^c0109e60:	7e 0c                	jle    c0109e6e <get_pid+0x32>$/;"	l
c0109e62	obj/kernel.asm	/^c0109e62:	c7 05 e4 0a 13 c0 01 	movl   $0x1,0xc0130ae4$/;"	l
c0109e69	obj/kernel.asm	/^c0109e69:	00 00 00 $/;"	l
c0109e6c	obj/kernel.asm	/^c0109e6c:	eb 13                	jmp    c0109e81 <get_pid+0x45>$/;"	l
c0109e6e	obj/kernel.asm	/^c0109e6e:	8b 15 e4 0a 13 c0    	mov    0xc0130ae4,%edx$/;"	l
c0109e74	obj/kernel.asm	/^c0109e74:	a1 e8 0a 13 c0       	mov    0xc0130ae8,%eax$/;"	l
c0109e79	obj/kernel.asm	/^c0109e79:	39 c2                	cmp    %eax,%edx$/;"	l
c0109e7b	obj/kernel.asm	/^c0109e7b:	0f 8c ac 00 00 00    	jl     c0109f2d <get_pid+0xf1>$/;"	l
c0109e81	obj/kernel.asm	/^c0109e81:	c7 05 e8 0a 13 c0 00 	movl   $0x2000,0xc0130ae8$/;"	l
c0109e88	obj/kernel.asm	/^c0109e88:	20 00 00 $/;"	l
c0109e8b	obj/kernel.asm	/^c0109e8b:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0109e8e	obj/kernel.asm	/^c0109e8e:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109e91	obj/kernel.asm	/^c0109e91:	eb 7f                	jmp    c0109f12 <get_pid+0xd6>$/;"	l
c0109e93	obj/kernel.asm	/^c0109e93:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109e96	obj/kernel.asm	/^c0109e96:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
c0109e99	obj/kernel.asm	/^c0109e99:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109e9c	obj/kernel.asm	/^c0109e9c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109e9f	obj/kernel.asm	/^c0109e9f:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109ea2	obj/kernel.asm	/^c0109ea2:	a1 e4 0a 13 c0       	mov    0xc0130ae4,%eax$/;"	l
c0109ea7	obj/kernel.asm	/^c0109ea7:	39 c2                	cmp    %eax,%edx$/;"	l
c0109ea9	obj/kernel.asm	/^c0109ea9:	75 3e                	jne    c0109ee9 <get_pid+0xad>$/;"	l
c0109eab	obj/kernel.asm	/^c0109eab:	a1 e4 0a 13 c0       	mov    0xc0130ae4,%eax$/;"	l
c0109eb0	obj/kernel.asm	/^c0109eb0:	83 c0 01             	add    $0x1,%eax$/;"	l
c0109eb3	obj/kernel.asm	/^c0109eb3:	a3 e4 0a 13 c0       	mov    %eax,0xc0130ae4$/;"	l
c0109eb8	obj/kernel.asm	/^c0109eb8:	8b 15 e4 0a 13 c0    	mov    0xc0130ae4,%edx$/;"	l
c0109ebe	obj/kernel.asm	/^c0109ebe:	a1 e8 0a 13 c0       	mov    0xc0130ae8,%eax$/;"	l
c0109ec3	obj/kernel.asm	/^c0109ec3:	39 c2                	cmp    %eax,%edx$/;"	l
c0109ec5	obj/kernel.asm	/^c0109ec5:	7c 4b                	jl     c0109f12 <get_pid+0xd6>$/;"	l
c0109ec7	obj/kernel.asm	/^c0109ec7:	a1 e4 0a 13 c0       	mov    0xc0130ae4,%eax$/;"	l
c0109ecc	obj/kernel.asm	/^c0109ecc:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c0109ed1	obj/kernel.asm	/^c0109ed1:	7e 0a                	jle    c0109edd <get_pid+0xa1>$/;"	l
c0109ed3	obj/kernel.asm	/^c0109ed3:	c7 05 e4 0a 13 c0 01 	movl   $0x1,0xc0130ae4$/;"	l
c0109eda	obj/kernel.asm	/^c0109eda:	00 00 00 $/;"	l
c0109edd	obj/kernel.asm	/^c0109edd:	c7 05 e8 0a 13 c0 00 	movl   $0x2000,0xc0130ae8$/;"	l
c0109ee4	obj/kernel.asm	/^c0109ee4:	20 00 00 $/;"	l
c0109ee7	obj/kernel.asm	/^c0109ee7:	eb a2                	jmp    c0109e8b <get_pid+0x4f>$/;"	l
c0109ee9	obj/kernel.asm	/^c0109ee9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109eec	obj/kernel.asm	/^c0109eec:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109eef	obj/kernel.asm	/^c0109eef:	a1 e4 0a 13 c0       	mov    0xc0130ae4,%eax$/;"	l
c0109ef4	obj/kernel.asm	/^c0109ef4:	39 c2                	cmp    %eax,%edx$/;"	l
c0109ef6	obj/kernel.asm	/^c0109ef6:	7e 1a                	jle    c0109f12 <get_pid+0xd6>$/;"	l
c0109ef8	obj/kernel.asm	/^c0109ef8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109efb	obj/kernel.asm	/^c0109efb:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109efe	obj/kernel.asm	/^c0109efe:	a1 e8 0a 13 c0       	mov    0xc0130ae8,%eax$/;"	l
c0109f03	obj/kernel.asm	/^c0109f03:	39 c2                	cmp    %eax,%edx$/;"	l
c0109f05	obj/kernel.asm	/^c0109f05:	7d 0b                	jge    c0109f12 <get_pid+0xd6>$/;"	l
c0109f07	obj/kernel.asm	/^c0109f07:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109f0a	obj/kernel.asm	/^c0109f0a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109f0d	obj/kernel.asm	/^c0109f0d:	a3 e8 0a 13 c0       	mov    %eax,0xc0130ae8$/;"	l
c0109f12	obj/kernel.asm	/^c0109f12:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109f15	obj/kernel.asm	/^c0109f15:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109f18	obj/kernel.asm	/^c0109f18:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109f1b	obj/kernel.asm	/^c0109f1b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109f1e	obj/kernel.asm	/^c0109f1e:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109f21	obj/kernel.asm	/^c0109f21:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0109f24	obj/kernel.asm	/^c0109f24:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c0109f27	obj/kernel.asm	/^c0109f27:	0f 85 66 ff ff ff    	jne    c0109e93 <get_pid+0x57>$/;"	l
c0109f2d	obj/kernel.asm	/^c0109f2d:	a1 e4 0a 13 c0       	mov    0xc0130ae4,%eax$/;"	l
c0109f32	obj/kernel.asm	/^c0109f32:	c9                   	leave  $/;"	l
c0109f33	obj/kernel.asm	/^c0109f33:	c3                   	ret    $/;"	l
c0109f34	obj/kernel.asm	/^c0109f34 <proc_run>:$/;"	l
c0109f34	obj/kernel.asm	/^c0109f34:	55                   	push   %ebp$/;"	l
c0109f35	obj/kernel.asm	/^c0109f35:	89 e5                	mov    %esp,%ebp$/;"	l
c0109f37	obj/kernel.asm	/^c0109f37:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109f3a	obj/kernel.asm	/^c0109f3a:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c0109f3f	obj/kernel.asm	/^c0109f3f:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c0109f42	obj/kernel.asm	/^c0109f42:	74 6b                	je     c0109faf <proc_run+0x7b>$/;"	l
c0109f44	obj/kernel.asm	/^c0109f44:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c0109f49	obj/kernel.asm	/^c0109f49:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109f4c	obj/kernel.asm	/^c0109f4c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109f4f	obj/kernel.asm	/^c0109f4f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109f52	obj/kernel.asm	/^c0109f52:	e8 ec f9 ff ff       	call   c0109943 <__intr_save>$/;"	l
c0109f57	obj/kernel.asm	/^c0109f57:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109f5a	obj/kernel.asm	/^c0109f5a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109f5d	obj/kernel.asm	/^c0109f5d:	a3 88 24 1c c0       	mov    %eax,0xc01c2488$/;"	l
c0109f62	obj/kernel.asm	/^c0109f62:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109f65	obj/kernel.asm	/^c0109f65:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109f68	obj/kernel.asm	/^c0109f68:	05 00 20 00 00       	add    $0x2000,%eax$/;"	l
c0109f6d	obj/kernel.asm	/^c0109f6d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109f70	obj/kernel.asm	/^c0109f70:	50                   	push   %eax$/;"	l
c0109f71	obj/kernel.asm	/^c0109f71:	e8 98 98 ff ff       	call   c010380e <load_esp0>$/;"	l
c0109f76	obj/kernel.asm	/^c0109f76:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f79	obj/kernel.asm	/^c0109f79:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109f7c	obj/kernel.asm	/^c0109f7c:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c0109f7f	obj/kernel.asm	/^c0109f7f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109f82	obj/kernel.asm	/^c0109f82:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109f85	obj/kernel.asm	/^c0109f85:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0109f88	obj/kernel.asm	/^c0109f88:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109f8b	obj/kernel.asm	/^c0109f8b:	8d 50 1c             	lea    0x1c(%eax),%edx$/;"	l
c0109f8e	obj/kernel.asm	/^c0109f8e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109f91	obj/kernel.asm	/^c0109f91:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0109f94	obj/kernel.asm	/^c0109f94:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109f97	obj/kernel.asm	/^c0109f97:	52                   	push   %edx$/;"	l
c0109f98	obj/kernel.asm	/^c0109f98:	50                   	push   %eax$/;"	l
c0109f99	obj/kernel.asm	/^c0109f99:	e8 35 f9 ff ff       	call   c01098d3 <switch_to>$/;"	l
c0109f9e	obj/kernel.asm	/^c0109f9e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109fa1	obj/kernel.asm	/^c0109fa1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109fa4	obj/kernel.asm	/^c0109fa4:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109fa7	obj/kernel.asm	/^c0109fa7:	e8 c1 f9 ff ff       	call   c010996d <__intr_restore>$/;"	l
c0109fac	obj/kernel.asm	/^c0109fac:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109faf	obj/kernel.asm	/^c0109faf:	c9                   	leave  $/;"	l
c0109fb0	obj/kernel.asm	/^c0109fb0:	c3                   	ret    $/;"	l
c0109fb1	obj/kernel.asm	/^c0109fb1 <forkret>:$/;"	l
c0109fb1	obj/kernel.asm	/^c0109fb1:	55                   	push   %ebp$/;"	l
c0109fb2	obj/kernel.asm	/^c0109fb2:	89 e5                	mov    %esp,%ebp$/;"	l
c0109fb4	obj/kernel.asm	/^c0109fb4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109fb7	obj/kernel.asm	/^c0109fb7:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c0109fbc	obj/kernel.asm	/^c0109fbc:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109fbf	obj/kernel.asm	/^c0109fbf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109fc2	obj/kernel.asm	/^c0109fc2:	50                   	push   %eax$/;"	l
c0109fc3	obj/kernel.asm	/^c0109fc3:	e8 88 96 ff ff       	call   c0103650 <forkrets>$/;"	l
c0109fc8	obj/kernel.asm	/^c0109fc8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109fcb	obj/kernel.asm	/^c0109fcb:	c9                   	leave  $/;"	l
c0109fcc	obj/kernel.asm	/^c0109fcc:	c3                   	ret    $/;"	l
c0109fcd	obj/kernel.asm	/^c0109fcd <hash_proc>:$/;"	l
c0109fcd	obj/kernel.asm	/^c0109fcd:	55                   	push   %ebp$/;"	l
c0109fce	obj/kernel.asm	/^c0109fce:	89 e5                	mov    %esp,%ebp$/;"	l
c0109fd0	obj/kernel.asm	/^c0109fd0:	53                   	push   %ebx$/;"	l
c0109fd1	obj/kernel.asm	/^c0109fd1:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0109fd4	obj/kernel.asm	/^c0109fd4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109fd7	obj/kernel.asm	/^c0109fd7:	8d 98 84 00 00 00    	lea    0x84(%eax),%ebx$/;"	l
c0109fdd	obj/kernel.asm	/^c0109fdd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109fe0	obj/kernel.asm	/^c0109fe0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109fe3	obj/kernel.asm	/^c0109fe3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109fe6	obj/kernel.asm	/^c0109fe6:	6a 0a                	push   $0xa$/;"	l
c0109fe8	obj/kernel.asm	/^c0109fe8:	50                   	push   %eax$/;"	l
c0109fe9	obj/kernel.asm	/^c0109fe9:	e8 9b 2a 00 00       	call   c010ca89 <hash32>$/;"	l
c0109fee	obj/kernel.asm	/^c0109fee:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ff1	obj/kernel.asm	/^c0109ff1:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0109ff4	obj/kernel.asm	/^c0109ff4:	05 c0 24 1c c0       	add    $0xc01c24c0,%eax$/;"	l
c0109ff9	obj/kernel.asm	/^c0109ff9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109ffc	obj/kernel.asm	/^c0109ffc:	89 5d f0             	mov    %ebx,-0x10(%ebp)$/;"	l
c0109fff	obj/kernel.asm	/^c0109fff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a002	obj/kernel.asm	/^c010a002:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a005	obj/kernel.asm	/^c010a005:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a008	obj/kernel.asm	/^c010a008:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a00b	obj/kernel.asm	/^c010a00b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a00e	obj/kernel.asm	/^c010a00e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a011	obj/kernel.asm	/^c010a011:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010a014	obj/kernel.asm	/^c010a014:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010a017	obj/kernel.asm	/^c010a017:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010a01a	obj/kernel.asm	/^c010a01a:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c010a01d	obj/kernel.asm	/^c010a01d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010a020	obj/kernel.asm	/^c010a020:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a023	obj/kernel.asm	/^c010a023:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010a026	obj/kernel.asm	/^c010a026:	89 10                	mov    %edx,(%eax)$/;"	l
c010a028	obj/kernel.asm	/^c010a028:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a02b	obj/kernel.asm	/^c010a02b:	8b 10                	mov    (%eax),%edx$/;"	l
c010a02d	obj/kernel.asm	/^c010a02d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a030	obj/kernel.asm	/^c010a030:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a033	obj/kernel.asm	/^c010a033:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a036	obj/kernel.asm	/^c010a036:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010a039	obj/kernel.asm	/^c010a039:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a03c	obj/kernel.asm	/^c010a03c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a03f	obj/kernel.asm	/^c010a03f:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010a042	obj/kernel.asm	/^c010a042:	89 10                	mov    %edx,(%eax)$/;"	l
c010a044	obj/kernel.asm	/^c010a044:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c010a047	obj/kernel.asm	/^c010a047:	c9                   	leave  $/;"	l
c010a048	obj/kernel.asm	/^c010a048:	c3                   	ret    $/;"	l
c010a049	obj/kernel.asm	/^c010a049 <unhash_proc>:$/;"	l
c010a049	obj/kernel.asm	/^c010a049:	55                   	push   %ebp$/;"	l
c010a04a	obj/kernel.asm	/^c010a04a:	89 e5                	mov    %esp,%ebp$/;"	l
c010a04c	obj/kernel.asm	/^c010a04c:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010a04f	obj/kernel.asm	/^c010a04f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a052	obj/kernel.asm	/^c010a052:	05 84 00 00 00       	add    $0x84,%eax$/;"	l
c010a057	obj/kernel.asm	/^c010a057:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010a05a	obj/kernel.asm	/^c010a05a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a05d	obj/kernel.asm	/^c010a05d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a060	obj/kernel.asm	/^c010a060:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010a063	obj/kernel.asm	/^c010a063:	8b 12                	mov    (%edx),%edx$/;"	l
c010a065	obj/kernel.asm	/^c010a065:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c010a068	obj/kernel.asm	/^c010a068:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a06b	obj/kernel.asm	/^c010a06b:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010a06e	obj/kernel.asm	/^c010a06e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a071	obj/kernel.asm	/^c010a071:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a074	obj/kernel.asm	/^c010a074:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a077	obj/kernel.asm	/^c010a077:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010a07a	obj/kernel.asm	/^c010a07a:	89 10                	mov    %edx,(%eax)$/;"	l
c010a07c	obj/kernel.asm	/^c010a07c:	c9                   	leave  $/;"	l
c010a07d	obj/kernel.asm	/^c010a07d:	c3                   	ret    $/;"	l
c010a07e	obj/kernel.asm	/^c010a07e <find_proc>:$/;"	l
c010a07e	obj/kernel.asm	/^c010a07e:	55                   	push   %ebp$/;"	l
c010a07f	obj/kernel.asm	/^c010a07f:	89 e5                	mov    %esp,%ebp$/;"	l
c010a081	obj/kernel.asm	/^c010a081:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a084	obj/kernel.asm	/^c010a084:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010a088	obj/kernel.asm	/^c010a088:	7e 5f                	jle    c010a0e9 <find_proc+0x6b>$/;"	l
c010a08a	obj/kernel.asm	/^c010a08a:	81 7d 08 ff 1f 00 00 	cmpl   $0x1fff,0x8(%ebp)$/;"	l
c010a091	obj/kernel.asm	/^c010a091:	7f 56                	jg     c010a0e9 <find_proc+0x6b>$/;"	l
c010a093	obj/kernel.asm	/^c010a093:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a096	obj/kernel.asm	/^c010a096:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a099	obj/kernel.asm	/^c010a099:	6a 0a                	push   $0xa$/;"	l
c010a09b	obj/kernel.asm	/^c010a09b:	50                   	push   %eax$/;"	l
c010a09c	obj/kernel.asm	/^c010a09c:	e8 e8 29 00 00       	call   c010ca89 <hash32>$/;"	l
c010a0a1	obj/kernel.asm	/^c010a0a1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a0a4	obj/kernel.asm	/^c010a0a4:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010a0a7	obj/kernel.asm	/^c010a0a7:	05 c0 24 1c c0       	add    $0xc01c24c0,%eax$/;"	l
c010a0ac	obj/kernel.asm	/^c010a0ac:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a0af	obj/kernel.asm	/^c010a0af:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a0b2	obj/kernel.asm	/^c010a0b2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a0b5	obj/kernel.asm	/^c010a0b5:	eb 1b                	jmp    c010a0d2 <find_proc+0x54>$/;"	l
c010a0b7	obj/kernel.asm	/^c010a0b7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a0ba	obj/kernel.asm	/^c010a0ba:	2d 84 00 00 00       	sub    $0x84,%eax$/;"	l
c010a0bf	obj/kernel.asm	/^c010a0bf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a0c2	obj/kernel.asm	/^c010a0c2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a0c5	obj/kernel.asm	/^c010a0c5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a0c8	obj/kernel.asm	/^c010a0c8:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010a0cb	obj/kernel.asm	/^c010a0cb:	75 05                	jne    c010a0d2 <find_proc+0x54>$/;"	l
c010a0cd	obj/kernel.asm	/^c010a0cd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a0d0	obj/kernel.asm	/^c010a0d0:	eb 1c                	jmp    c010a0ee <find_proc+0x70>$/;"	l
c010a0d2	obj/kernel.asm	/^c010a0d2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a0d5	obj/kernel.asm	/^c010a0d5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a0d8	obj/kernel.asm	/^c010a0d8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a0db	obj/kernel.asm	/^c010a0db:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a0de	obj/kernel.asm	/^c010a0de:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a0e1	obj/kernel.asm	/^c010a0e1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a0e4	obj/kernel.asm	/^c010a0e4:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010a0e7	obj/kernel.asm	/^c010a0e7:	75 ce                	jne    c010a0b7 <find_proc+0x39>$/;"	l
c010a0e9	obj/kernel.asm	/^c010a0e9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a0ee	obj/kernel.asm	/^c010a0ee:	c9                   	leave  $/;"	l
c010a0ef	obj/kernel.asm	/^c010a0ef:	c3                   	ret    $/;"	l
c010a0f0	obj/kernel.asm	/^c010a0f0 <kernel_thread>:$/;"	l
c010a0f0	obj/kernel.asm	/^c010a0f0:	55                   	push   %ebp$/;"	l
c010a0f1	obj/kernel.asm	/^c010a0f1:	89 e5                	mov    %esp,%ebp$/;"	l
c010a0f3	obj/kernel.asm	/^c010a0f3:	83 ec 58             	sub    $0x58,%esp$/;"	l
c010a0f6	obj/kernel.asm	/^c010a0f6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a0f9	obj/kernel.asm	/^c010a0f9:	6a 4c                	push   $0x4c$/;"	l
c010a0fb	obj/kernel.asm	/^c010a0fb:	6a 00                	push   $0x0$/;"	l
c010a0fd	obj/kernel.asm	/^c010a0fd:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c010a100	obj/kernel.asm	/^c010a100:	50                   	push   %eax$/;"	l
c010a101	obj/kernel.asm	/^c010a101:	e8 f2 21 00 00       	call   c010c2f8 <memset>$/;"	l
c010a106	obj/kernel.asm	/^c010a106:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a109	obj/kernel.asm	/^c010a109:	66 c7 45 e8 08 00    	movw   $0x8,-0x18(%ebp)$/;"	l
c010a10f	obj/kernel.asm	/^c010a10f:	66 c7 45 f4 10 00    	movw   $0x10,-0xc(%ebp)$/;"	l
c010a115	obj/kernel.asm	/^c010a115:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c010a119	obj/kernel.asm	/^c010a119:	66 89 45 d4          	mov    %ax,-0x2c(%ebp)$/;"	l
c010a11d	obj/kernel.asm	/^c010a11d:	0f b7 45 d4          	movzwl -0x2c(%ebp),%eax$/;"	l
c010a121	obj/kernel.asm	/^c010a121:	66 89 45 d8          	mov    %ax,-0x28(%ebp)$/;"	l
c010a125	obj/kernel.asm	/^c010a125:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a128	obj/kernel.asm	/^c010a128:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010a12b	obj/kernel.asm	/^c010a12b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a12e	obj/kernel.asm	/^c010a12e:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010a131	obj/kernel.asm	/^c010a131:	b8 ca 98 10 c0       	mov    $0xc01098ca,%eax$/;"	l
c010a136	obj/kernel.asm	/^c010a136:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010a139	obj/kernel.asm	/^c010a139:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010a13c	obj/kernel.asm	/^c010a13c:	80 cc 01             	or     $0x1,%ah$/;"	l
c010a13f	obj/kernel.asm	/^c010a13f:	89 c2                	mov    %eax,%edx$/;"	l
c010a141	obj/kernel.asm	/^c010a141:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a144	obj/kernel.asm	/^c010a144:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c010a147	obj/kernel.asm	/^c010a147:	50                   	push   %eax$/;"	l
c010a148	obj/kernel.asm	/^c010a148:	6a 00                	push   $0x0$/;"	l
c010a14a	obj/kernel.asm	/^c010a14a:	52                   	push   %edx$/;"	l
c010a14b	obj/kernel.asm	/^c010a14b:	e8 f0 02 00 00       	call   c010a440 <do_fork>$/;"	l
c010a150	obj/kernel.asm	/^c010a150:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a153	obj/kernel.asm	/^c010a153:	c9                   	leave  $/;"	l
c010a154	obj/kernel.asm	/^c010a154:	c3                   	ret    $/;"	l
c010a155	obj/kernel.asm	/^c010a155 <setup_kstack>:$/;"	l
c010a155	obj/kernel.asm	/^c010a155:	55                   	push   %ebp$/;"	l
c010a156	obj/kernel.asm	/^c010a156:	89 e5                	mov    %esp,%ebp$/;"	l
c010a158	obj/kernel.asm	/^c010a158:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a15b	obj/kernel.asm	/^c010a15b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a15e	obj/kernel.asm	/^c010a15e:	6a 02                	push   $0x2$/;"	l
c010a160	obj/kernel.asm	/^c010a160:	e8 f9 97 ff ff       	call   c010395e <alloc_pages>$/;"	l
c010a165	obj/kernel.asm	/^c010a165:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a168	obj/kernel.asm	/^c010a168:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a16b	obj/kernel.asm	/^c010a16b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a16f	obj/kernel.asm	/^c010a16f:	74 1d                	je     c010a18e <setup_kstack+0x39>$/;"	l
c010a171	obj/kernel.asm	/^c010a171:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a174	obj/kernel.asm	/^c010a174:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a177	obj/kernel.asm	/^c010a177:	e8 67 f8 ff ff       	call   c01099e3 <page2kva>$/;"	l
c010a17c	obj/kernel.asm	/^c010a17c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a17f	obj/kernel.asm	/^c010a17f:	89 c2                	mov    %eax,%edx$/;"	l
c010a181	obj/kernel.asm	/^c010a181:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a184	obj/kernel.asm	/^c010a184:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010a187	obj/kernel.asm	/^c010a187:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a18c	obj/kernel.asm	/^c010a18c:	eb 05                	jmp    c010a193 <setup_kstack+0x3e>$/;"	l
c010a18e	obj/kernel.asm	/^c010a18e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010a193	obj/kernel.asm	/^c010a193:	c9                   	leave  $/;"	l
c010a194	obj/kernel.asm	/^c010a194:	c3                   	ret    $/;"	l
c010a195	obj/kernel.asm	/^c010a195 <put_kstack>:$/;"	l
c010a195	obj/kernel.asm	/^c010a195:	55                   	push   %ebp$/;"	l
c010a196	obj/kernel.asm	/^c010a196:	89 e5                	mov    %esp,%ebp$/;"	l
c010a198	obj/kernel.asm	/^c010a198:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a19b	obj/kernel.asm	/^c010a19b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a19e	obj/kernel.asm	/^c010a19e:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a1a1	obj/kernel.asm	/^c010a1a1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a1a4	obj/kernel.asm	/^c010a1a4:	50                   	push   %eax$/;"	l
c010a1a5	obj/kernel.asm	/^c010a1a5:	e8 7e f8 ff ff       	call   c0109a28 <kva2page>$/;"	l
c010a1aa	obj/kernel.asm	/^c010a1aa:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a1ad	obj/kernel.asm	/^c010a1ad:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a1b0	obj/kernel.asm	/^c010a1b0:	6a 02                	push   $0x2$/;"	l
c010a1b2	obj/kernel.asm	/^c010a1b2:	50                   	push   %eax$/;"	l
c010a1b3	obj/kernel.asm	/^c010a1b3:	e8 12 98 ff ff       	call   c01039ca <free_pages>$/;"	l
c010a1b8	obj/kernel.asm	/^c010a1b8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a1bb	obj/kernel.asm	/^c010a1bb:	c9                   	leave  $/;"	l
c010a1bc	obj/kernel.asm	/^c010a1bc:	c3                   	ret    $/;"	l
c010a1bd	obj/kernel.asm	/^c010a1bd <setup_pgdir>:$/;"	l
c010a1bd	obj/kernel.asm	/^c010a1bd:	55                   	push   %ebp$/;"	l
c010a1be	obj/kernel.asm	/^c010a1be:	89 e5                	mov    %esp,%ebp$/;"	l
c010a1c0	obj/kernel.asm	/^c010a1c0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a1c3	obj/kernel.asm	/^c010a1c3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a1c6	obj/kernel.asm	/^c010a1c6:	6a 01                	push   $0x1$/;"	l
c010a1c8	obj/kernel.asm	/^c010a1c8:	e8 91 97 ff ff       	call   c010395e <alloc_pages>$/;"	l
c010a1cd	obj/kernel.asm	/^c010a1cd:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a1d0	obj/kernel.asm	/^c010a1d0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a1d3	obj/kernel.asm	/^c010a1d3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a1d7	obj/kernel.asm	/^c010a1d7:	75 07                	jne    c010a1e0 <setup_pgdir+0x23>$/;"	l
c010a1d9	obj/kernel.asm	/^c010a1d9:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010a1de	obj/kernel.asm	/^c010a1de:	eb 74                	jmp    c010a254 <setup_pgdir+0x97>$/;"	l
c010a1e0	obj/kernel.asm	/^c010a1e0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a1e3	obj/kernel.asm	/^c010a1e3:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a1e6	obj/kernel.asm	/^c010a1e6:	e8 f8 f7 ff ff       	call   c01099e3 <page2kva>$/;"	l
c010a1eb	obj/kernel.asm	/^c010a1eb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a1ee	obj/kernel.asm	/^c010a1ee:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a1f1	obj/kernel.asm	/^c010a1f1:	a1 c4 23 1c c0       	mov    0xc01c23c4,%eax$/;"	l
c010a1f6	obj/kernel.asm	/^c010a1f6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a1f9	obj/kernel.asm	/^c010a1f9:	68 00 10 00 00       	push   $0x1000$/;"	l
c010a1fe	obj/kernel.asm	/^c010a1fe:	50                   	push   %eax$/;"	l
c010a1ff	obj/kernel.asm	/^c010a1ff:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a202	obj/kernel.asm	/^c010a202:	e8 d4 21 00 00       	call   c010c3db <memcpy>$/;"	l
c010a207	obj/kernel.asm	/^c010a207:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a20a	obj/kernel.asm	/^c010a20a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a20d	obj/kernel.asm	/^c010a20d:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c010a213	obj/kernel.asm	/^c010a213:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a216	obj/kernel.asm	/^c010a216:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a219	obj/kernel.asm	/^c010a219:	81 7d ec ff ff ff bf 	cmpl   $0xbfffffff,-0x14(%ebp)$/;"	l
c010a220	obj/kernel.asm	/^c010a220:	77 17                	ja     c010a239 <setup_pgdir+0x7c>$/;"	l
c010a222	obj/kernel.asm	/^c010a222:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010a225	obj/kernel.asm	/^c010a225:	68 e8 f0 10 c0       	push   $0xc010f0e8$/;"	l
c010a22a	obj/kernel.asm	/^c010a22a:	68 3e 01 00 00       	push   $0x13e$/;"	l
c010a22f	obj/kernel.asm	/^c010a22f:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010a234	obj/kernel.asm	/^c010a234:	e8 a6 61 ff ff       	call   c01003df <__panic>$/;"	l
c010a239	obj/kernel.asm	/^c010a239:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a23c	obj/kernel.asm	/^c010a23c:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010a241	obj/kernel.asm	/^c010a241:	83 c8 03             	or     $0x3,%eax$/;"	l
c010a244	obj/kernel.asm	/^c010a244:	89 02                	mov    %eax,(%edx)$/;"	l
c010a246	obj/kernel.asm	/^c010a246:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a249	obj/kernel.asm	/^c010a249:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010a24c	obj/kernel.asm	/^c010a24c:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010a24f	obj/kernel.asm	/^c010a24f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a254	obj/kernel.asm	/^c010a254:	c9                   	leave  $/;"	l
c010a255	obj/kernel.asm	/^c010a255:	c3                   	ret    $/;"	l
c010a256	obj/kernel.asm	/^c010a256 <put_pgdir>:$/;"	l
c010a256	obj/kernel.asm	/^c010a256:	55                   	push   %ebp$/;"	l
c010a257	obj/kernel.asm	/^c010a257:	89 e5                	mov    %esp,%ebp$/;"	l
c010a259	obj/kernel.asm	/^c010a259:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a25c	obj/kernel.asm	/^c010a25c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a25f	obj/kernel.asm	/^c010a25f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a262	obj/kernel.asm	/^c010a262:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a265	obj/kernel.asm	/^c010a265:	50                   	push   %eax$/;"	l
c010a266	obj/kernel.asm	/^c010a266:	e8 bd f7 ff ff       	call   c0109a28 <kva2page>$/;"	l
c010a26b	obj/kernel.asm	/^c010a26b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a26e	obj/kernel.asm	/^c010a26e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a271	obj/kernel.asm	/^c010a271:	6a 01                	push   $0x1$/;"	l
c010a273	obj/kernel.asm	/^c010a273:	50                   	push   %eax$/;"	l
c010a274	obj/kernel.asm	/^c010a274:	e8 51 97 ff ff       	call   c01039ca <free_pages>$/;"	l
c010a279	obj/kernel.asm	/^c010a279:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a27c	obj/kernel.asm	/^c010a27c:	c9                   	leave  $/;"	l
c010a27d	obj/kernel.asm	/^c010a27d:	c3                   	ret    $/;"	l
c010a27e	obj/kernel.asm	/^c010a27e <copy_mm>:$/;"	l
c010a27e	obj/kernel.asm	/^c010a27e:	55                   	push   %ebp$/;"	l
c010a27f	obj/kernel.asm	/^c010a27f:	89 e5                	mov    %esp,%ebp$/;"	l
c010a281	obj/kernel.asm	/^c010a281:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a284	obj/kernel.asm	/^c010a284:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010a289	obj/kernel.asm	/^c010a289:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a28c	obj/kernel.asm	/^c010a28c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a28f	obj/kernel.asm	/^c010a28f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a293	obj/kernel.asm	/^c010a293:	75 0a                	jne    c010a29f <copy_mm+0x21>$/;"	l
c010a295	obj/kernel.asm	/^c010a295:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a29a	obj/kernel.asm	/^c010a29a:	e9 04 01 00 00       	jmp    c010a3a3 <copy_mm+0x125>$/;"	l
c010a29f	obj/kernel.asm	/^c010a29f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a2a2	obj/kernel.asm	/^c010a2a2:	25 00 01 00 00       	and    $0x100,%eax$/;"	l
c010a2a7	obj/kernel.asm	/^c010a2a7:	85 c0                	test   %eax,%eax$/;"	l
c010a2a9	obj/kernel.asm	/^c010a2a9:	74 0b                	je     c010a2b6 <copy_mm+0x38>$/;"	l
c010a2ab	obj/kernel.asm	/^c010a2ab:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a2ae	obj/kernel.asm	/^c010a2ae:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a2b1	obj/kernel.asm	/^c010a2b1:	e9 86 00 00 00       	jmp    c010a33c <copy_mm+0xbe>$/;"	l
c010a2b6	obj/kernel.asm	/^c010a2b6:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c010a2bd	obj/kernel.asm	/^c010a2bd:	e8 f2 af ff ff       	call   c01052b4 <mm_create>$/;"	l
c010a2c2	obj/kernel.asm	/^c010a2c2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a2c5	obj/kernel.asm	/^c010a2c5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a2c9	obj/kernel.asm	/^c010a2c9:	75 05                	jne    c010a2d0 <copy_mm+0x52>$/;"	l
c010a2cb	obj/kernel.asm	/^c010a2cb:	e9 d0 00 00 00       	jmp    c010a3a0 <copy_mm+0x122>$/;"	l
c010a2d0	obj/kernel.asm	/^c010a2d0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a2d3	obj/kernel.asm	/^c010a2d3:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a2d6	obj/kernel.asm	/^c010a2d6:	e8 e2 fe ff ff       	call   c010a1bd <setup_pgdir>$/;"	l
c010a2db	obj/kernel.asm	/^c010a2db:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a2de	obj/kernel.asm	/^c010a2de:	85 c0                	test   %eax,%eax$/;"	l
c010a2e0	obj/kernel.asm	/^c010a2e0:	74 05                	je     c010a2e7 <copy_mm+0x69>$/;"	l
c010a2e2	obj/kernel.asm	/^c010a2e2:	e9 ab 00 00 00       	jmp    c010a392 <copy_mm+0x114>$/;"	l
c010a2e7	obj/kernel.asm	/^c010a2e7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a2ea	obj/kernel.asm	/^c010a2ea:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010a2ed	obj/kernel.asm	/^c010a2ed:	e8 a9 f7 ff ff       	call   c0109a9b <lock_mm>$/;"	l
c010a2f2	obj/kernel.asm	/^c010a2f2:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a2f5	obj/kernel.asm	/^c010a2f5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a2f8	obj/kernel.asm	/^c010a2f8:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010a2fb	obj/kernel.asm	/^c010a2fb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a2fe	obj/kernel.asm	/^c010a2fe:	e8 7e b4 ff ff       	call   c0105781 <dup_mmap>$/;"	l
c010a303	obj/kernel.asm	/^c010a303:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a306	obj/kernel.asm	/^c010a306:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a309	obj/kernel.asm	/^c010a309:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a30c	obj/kernel.asm	/^c010a30c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010a30f	obj/kernel.asm	/^c010a30f:	e8 be f7 ff ff       	call   c0109ad2 <unlock_mm>$/;"	l
c010a314	obj/kernel.asm	/^c010a314:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a317	obj/kernel.asm	/^c010a317:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a31b	obj/kernel.asm	/^c010a31b:	74 1f                	je     c010a33c <copy_mm+0xbe>$/;"	l
c010a31d	obj/kernel.asm	/^c010a31d:	90                   	nop$/;"	l
c010a31e	obj/kernel.asm	/^c010a31e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a321	obj/kernel.asm	/^c010a321:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a324	obj/kernel.asm	/^c010a324:	e8 3f b5 ff ff       	call   c0105868 <exit_mmap>$/;"	l
c010a329	obj/kernel.asm	/^c010a329:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a32c	obj/kernel.asm	/^c010a32c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a32f	obj/kernel.asm	/^c010a32f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a332	obj/kernel.asm	/^c010a332:	e8 1f ff ff ff       	call   c010a256 <put_pgdir>$/;"	l
c010a337	obj/kernel.asm	/^c010a337:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a33a	obj/kernel.asm	/^c010a33a:	eb 56                	jmp    c010a392 <copy_mm+0x114>$/;"	l
c010a33c	obj/kernel.asm	/^c010a33c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a33f	obj/kernel.asm	/^c010a33f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a342	obj/kernel.asm	/^c010a342:	e8 20 f7 ff ff       	call   c0109a67 <mm_count_inc>$/;"	l
c010a347	obj/kernel.asm	/^c010a347:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a34a	obj/kernel.asm	/^c010a34a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a34d	obj/kernel.asm	/^c010a34d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a350	obj/kernel.asm	/^c010a350:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010a353	obj/kernel.asm	/^c010a353:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a356	obj/kernel.asm	/^c010a356:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a359	obj/kernel.asm	/^c010a359:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a35c	obj/kernel.asm	/^c010a35c:	81 7d e8 ff ff ff bf 	cmpl   $0xbfffffff,-0x18(%ebp)$/;"	l
c010a363	obj/kernel.asm	/^c010a363:	77 17                	ja     c010a37c <copy_mm+0xfe>$/;"	l
c010a365	obj/kernel.asm	/^c010a365:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010a368	obj/kernel.asm	/^c010a368:	68 e8 f0 10 c0       	push   $0xc010f0e8$/;"	l
c010a36d	obj/kernel.asm	/^c010a36d:	68 6d 01 00 00       	push   $0x16d$/;"	l
c010a372	obj/kernel.asm	/^c010a372:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010a377	obj/kernel.asm	/^c010a377:	e8 63 60 ff ff       	call   c01003df <__panic>$/;"	l
c010a37c	obj/kernel.asm	/^c010a37c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a37f	obj/kernel.asm	/^c010a37f:	8d 90 00 00 00 40    	lea    0x40000000(%eax),%edx$/;"	l
c010a385	obj/kernel.asm	/^c010a385:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a388	obj/kernel.asm	/^c010a388:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010a38b	obj/kernel.asm	/^c010a38b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a390	obj/kernel.asm	/^c010a390:	eb 11                	jmp    c010a3a3 <copy_mm+0x125>$/;"	l
c010a392	obj/kernel.asm	/^c010a392:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a395	obj/kernel.asm	/^c010a395:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a398	obj/kernel.asm	/^c010a398:	e8 40 b2 ff ff       	call   c01055dd <mm_destroy>$/;"	l
c010a39d	obj/kernel.asm	/^c010a39d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a3a0	obj/kernel.asm	/^c010a3a0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a3a3	obj/kernel.asm	/^c010a3a3:	c9                   	leave  $/;"	l
c010a3a4	obj/kernel.asm	/^c010a3a4:	c3                   	ret    $/;"	l
c010a3a5	obj/kernel.asm	/^c010a3a5 <copy_thread>:$/;"	l
c010a3a5	obj/kernel.asm	/^c010a3a5:	55                   	push   %ebp$/;"	l
c010a3a6	obj/kernel.asm	/^c010a3a6:	89 e5                	mov    %esp,%ebp$/;"	l
c010a3a8	obj/kernel.asm	/^c010a3a8:	57                   	push   %edi$/;"	l
c010a3a9	obj/kernel.asm	/^c010a3a9:	56                   	push   %esi$/;"	l
c010a3aa	obj/kernel.asm	/^c010a3aa:	53                   	push   %ebx$/;"	l
c010a3ab	obj/kernel.asm	/^c010a3ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3ae	obj/kernel.asm	/^c010a3ae:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a3b1	obj/kernel.asm	/^c010a3b1:	05 b4 1f 00 00       	add    $0x1fb4,%eax$/;"	l
c010a3b6	obj/kernel.asm	/^c010a3b6:	89 c2                	mov    %eax,%edx$/;"	l
c010a3b8	obj/kernel.asm	/^c010a3b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3bb	obj/kernel.asm	/^c010a3bb:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c010a3be	obj/kernel.asm	/^c010a3be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3c1	obj/kernel.asm	/^c010a3c1:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a3c4	obj/kernel.asm	/^c010a3c4:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010a3c7	obj/kernel.asm	/^c010a3c7:	89 d3                	mov    %edx,%ebx$/;"	l
c010a3c9	obj/kernel.asm	/^c010a3c9:	ba 4c 00 00 00       	mov    $0x4c,%edx$/;"	l
c010a3ce	obj/kernel.asm	/^c010a3ce:	8b 0b                	mov    (%ebx),%ecx$/;"	l
c010a3d0	obj/kernel.asm	/^c010a3d0:	89 08                	mov    %ecx,(%eax)$/;"	l
c010a3d2	obj/kernel.asm	/^c010a3d2:	8b 4c 13 fc          	mov    -0x4(%ebx,%edx,1),%ecx$/;"	l
c010a3d6	obj/kernel.asm	/^c010a3d6:	89 4c 10 fc          	mov    %ecx,-0x4(%eax,%edx,1)$/;"	l
c010a3da	obj/kernel.asm	/^c010a3da:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
c010a3dd	obj/kernel.asm	/^c010a3dd:	83 e7 fc             	and    $0xfffffffc,%edi$/;"	l
c010a3e0	obj/kernel.asm	/^c010a3e0:	29 f8                	sub    %edi,%eax$/;"	l
c010a3e2	obj/kernel.asm	/^c010a3e2:	29 c3                	sub    %eax,%ebx$/;"	l
c010a3e4	obj/kernel.asm	/^c010a3e4:	01 c2                	add    %eax,%edx$/;"	l
c010a3e6	obj/kernel.asm	/^c010a3e6:	83 e2 fc             	and    $0xfffffffc,%edx$/;"	l
c010a3e9	obj/kernel.asm	/^c010a3e9:	89 d0                	mov    %edx,%eax$/;"	l
c010a3eb	obj/kernel.asm	/^c010a3eb:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010a3ee	obj/kernel.asm	/^c010a3ee:	89 de                	mov    %ebx,%esi$/;"	l
c010a3f0	obj/kernel.asm	/^c010a3f0:	89 c1                	mov    %eax,%ecx$/;"	l
c010a3f2	obj/kernel.asm	/^c010a3f2:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c010a3f4	obj/kernel.asm	/^c010a3f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3f7	obj/kernel.asm	/^c010a3f7:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a3fa	obj/kernel.asm	/^c010a3fa:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
c010a401	obj/kernel.asm	/^c010a401:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a404	obj/kernel.asm	/^c010a404:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a407	obj/kernel.asm	/^c010a407:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010a40a	obj/kernel.asm	/^c010a40a:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010a40d	obj/kernel.asm	/^c010a40d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a410	obj/kernel.asm	/^c010a410:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a413	obj/kernel.asm	/^c010a413:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010a416	obj/kernel.asm	/^c010a416:	8b 52 3c             	mov    0x3c(%edx),%edx$/;"	l
c010a419	obj/kernel.asm	/^c010a419:	8b 52 40             	mov    0x40(%edx),%edx$/;"	l
c010a41c	obj/kernel.asm	/^c010a41c:	80 ce 02             	or     $0x2,%dh$/;"	l
c010a41f	obj/kernel.asm	/^c010a41f:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010a422	obj/kernel.asm	/^c010a422:	ba b1 9f 10 c0       	mov    $0xc0109fb1,%edx$/;"	l
c010a427	obj/kernel.asm	/^c010a427:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a42a	obj/kernel.asm	/^c010a42a:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010a42d	obj/kernel.asm	/^c010a42d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a430	obj/kernel.asm	/^c010a430:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a433	obj/kernel.asm	/^c010a433:	89 c2                	mov    %eax,%edx$/;"	l
c010a435	obj/kernel.asm	/^c010a435:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a438	obj/kernel.asm	/^c010a438:	89 50 20             	mov    %edx,0x20(%eax)$/;"	l
c010a43b	obj/kernel.asm	/^c010a43b:	5b                   	pop    %ebx$/;"	l
c010a43c	obj/kernel.asm	/^c010a43c:	5e                   	pop    %esi$/;"	l
c010a43d	obj/kernel.asm	/^c010a43d:	5f                   	pop    %edi$/;"	l
c010a43e	obj/kernel.asm	/^c010a43e:	5d                   	pop    %ebp$/;"	l
c010a43f	obj/kernel.asm	/^c010a43f:	c3                   	ret    $/;"	l
c010a440	obj/kernel.asm	/^c010a440 <do_fork>:$/;"	l
c010a440	obj/kernel.asm	/^c010a440:	55                   	push   %ebp$/;"	l
c010a441	obj/kernel.asm	/^c010a441:	89 e5                	mov    %esp,%ebp$/;"	l
c010a443	obj/kernel.asm	/^c010a443:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a446	obj/kernel.asm	/^c010a446:	c7 45 f4 fb ff ff ff 	movl   $0xfffffffb,-0xc(%ebp)$/;"	l
c010a44d	obj/kernel.asm	/^c010a44d:	a1 c0 44 1c c0       	mov    0xc01c44c0,%eax$/;"	l
c010a452	obj/kernel.asm	/^c010a452:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c010a457	obj/kernel.asm	/^c010a457:	7e 05                	jle    c010a45e <do_fork+0x1e>$/;"	l
c010a459	obj/kernel.asm	/^c010a459:	e9 f3 00 00 00       	jmp    c010a551 <do_fork+0x111>$/;"	l
c010a45e	obj/kernel.asm	/^c010a45e:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010a465	obj/kernel.asm	/^c010a465:	e8 92 f6 ff ff       	call   c0109afc <alloc_proc>$/;"	l
c010a46a	obj/kernel.asm	/^c010a46a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a46d	obj/kernel.asm	/^c010a46d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a471	obj/kernel.asm	/^c010a471:	75 05                	jne    c010a478 <do_fork+0x38>$/;"	l
c010a473	obj/kernel.asm	/^c010a473:	e9 d9 00 00 00       	jmp    c010a551 <do_fork+0x111>$/;"	l
c010a478	obj/kernel.asm	/^c010a478:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010a47d	obj/kernel.asm	/^c010a47d:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010a483	obj/kernel.asm	/^c010a483:	85 c0                	test   %eax,%eax$/;"	l
c010a485	obj/kernel.asm	/^c010a485:	74 17                	je     c010a49e <do_fork+0x5e>$/;"	l
c010a487	obj/kernel.asm	/^c010a487:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a48a	obj/kernel.asm	/^c010a48a:	68 20 f1 10 c0       	push   $0xc010f120$/;"	l
c010a48f	obj/kernel.asm	/^c010a48f:	68 b3 01 00 00       	push   $0x1b3$/;"	l
c010a494	obj/kernel.asm	/^c010a494:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010a499	obj/kernel.asm	/^c010a499:	e8 41 5f ff ff       	call   c01003df <__panic>$/;"	l
c010a49e	obj/kernel.asm	/^c010a49e:	8b 15 88 24 1c c0    	mov    0xc01c2488,%edx$/;"	l
c010a4a4	obj/kernel.asm	/^c010a4a4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a4a7	obj/kernel.asm	/^c010a4a7:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010a4aa	obj/kernel.asm	/^c010a4aa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a4ad	obj/kernel.asm	/^c010a4ad:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a4b0	obj/kernel.asm	/^c010a4b0:	e8 a0 fc ff ff       	call   c010a155 <setup_kstack>$/;"	l
c010a4b5	obj/kernel.asm	/^c010a4b5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a4b8	obj/kernel.asm	/^c010a4b8:	85 c0                	test   %eax,%eax$/;"	l
c010a4ba	obj/kernel.asm	/^c010a4ba:	74 05                	je     c010a4c1 <do_fork+0x81>$/;"	l
c010a4bc	obj/kernel.asm	/^c010a4bc:	e9 95 00 00 00       	jmp    c010a556 <do_fork+0x116>$/;"	l
c010a4c1	obj/kernel.asm	/^c010a4c1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a4c4	obj/kernel.asm	/^c010a4c4:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a4c7	obj/kernel.asm	/^c010a4c7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a4ca	obj/kernel.asm	/^c010a4ca:	e8 af fd ff ff       	call   c010a27e <copy_mm>$/;"	l
c010a4cf	obj/kernel.asm	/^c010a4cf:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a4d2	obj/kernel.asm	/^c010a4d2:	85 c0                	test   %eax,%eax$/;"	l
c010a4d4	obj/kernel.asm	/^c010a4d4:	74 11                	je     c010a4e7 <do_fork+0xa7>$/;"	l
c010a4d6	obj/kernel.asm	/^c010a4d6:	90                   	nop$/;"	l
c010a4d7	obj/kernel.asm	/^c010a4d7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a4da	obj/kernel.asm	/^c010a4da:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a4dd	obj/kernel.asm	/^c010a4dd:	e8 b3 fc ff ff       	call   c010a195 <put_kstack>$/;"	l
c010a4e2	obj/kernel.asm	/^c010a4e2:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a4e5	obj/kernel.asm	/^c010a4e5:	eb 6f                	jmp    c010a556 <do_fork+0x116>$/;"	l
c010a4e7	obj/kernel.asm	/^c010a4e7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a4ea	obj/kernel.asm	/^c010a4ea:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010a4ed	obj/kernel.asm	/^c010a4ed:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010a4f0	obj/kernel.asm	/^c010a4f0:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a4f3	obj/kernel.asm	/^c010a4f3:	e8 ad fe ff ff       	call   c010a3a5 <copy_thread>$/;"	l
c010a4f8	obj/kernel.asm	/^c010a4f8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a4fb	obj/kernel.asm	/^c010a4fb:	e8 43 f4 ff ff       	call   c0109943 <__intr_save>$/;"	l
c010a500	obj/kernel.asm	/^c010a500:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a503	obj/kernel.asm	/^c010a503:	e8 34 f9 ff ff       	call   c0109e3c <get_pid>$/;"	l
c010a508	obj/kernel.asm	/^c010a508:	89 c2                	mov    %eax,%edx$/;"	l
c010a50a	obj/kernel.asm	/^c010a50a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a50d	obj/kernel.asm	/^c010a50d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a510	obj/kernel.asm	/^c010a510:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a513	obj/kernel.asm	/^c010a513:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a516	obj/kernel.asm	/^c010a516:	e8 b2 fa ff ff       	call   c0109fcd <hash_proc>$/;"	l
c010a51b	obj/kernel.asm	/^c010a51b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a51e	obj/kernel.asm	/^c010a51e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a521	obj/kernel.asm	/^c010a521:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a524	obj/kernel.asm	/^c010a524:	e8 b8 f7 ff ff       	call   c0109ce1 <set_links>$/;"	l
c010a529	obj/kernel.asm	/^c010a529:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a52c	obj/kernel.asm	/^c010a52c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a52f	obj/kernel.asm	/^c010a52f:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010a532	obj/kernel.asm	/^c010a532:	e8 36 f4 ff ff       	call   c010996d <__intr_restore>$/;"	l
c010a537	obj/kernel.asm	/^c010a537:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a53a	obj/kernel.asm	/^c010a53a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a53d	obj/kernel.asm	/^c010a53d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a540	obj/kernel.asm	/^c010a540:	e8 c8 10 00 00       	call   c010b60d <wakeup_proc>$/;"	l
c010a545	obj/kernel.asm	/^c010a545:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a548	obj/kernel.asm	/^c010a548:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a54b	obj/kernel.asm	/^c010a54b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a54e	obj/kernel.asm	/^c010a54e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a551	obj/kernel.asm	/^c010a551:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a554	obj/kernel.asm	/^c010a554:	eb 10                	jmp    c010a566 <do_fork+0x126>$/;"	l
c010a556	obj/kernel.asm	/^c010a556:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a559	obj/kernel.asm	/^c010a559:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a55c	obj/kernel.asm	/^c010a55c:	e8 a3 ce ff ff       	call   c0107404 <kfree>$/;"	l
c010a561	obj/kernel.asm	/^c010a561:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a564	obj/kernel.asm	/^c010a564:	eb eb                	jmp    c010a551 <do_fork+0x111>$/;"	l
c010a566	obj/kernel.asm	/^c010a566:	c9                   	leave  $/;"	l
c010a567	obj/kernel.asm	/^c010a567:	c3                   	ret    $/;"	l
c010a568	obj/kernel.asm	/^c010a568 <do_exit>:$/;"	l
c010a568	obj/kernel.asm	/^c010a568:	55                   	push   %ebp$/;"	l
c010a569	obj/kernel.asm	/^c010a569:	89 e5                	mov    %esp,%ebp$/;"	l
c010a56b	obj/kernel.asm	/^c010a56b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a56e	obj/kernel.asm	/^c010a56e:	8b 15 88 24 1c c0    	mov    0xc01c2488,%edx$/;"	l
c010a574	obj/kernel.asm	/^c010a574:	a1 80 24 1c c0       	mov    0xc01c2480,%eax$/;"	l
c010a579	obj/kernel.asm	/^c010a579:	39 c2                	cmp    %eax,%edx$/;"	l
c010a57b	obj/kernel.asm	/^c010a57b:	75 17                	jne    c010a594 <do_exit+0x2c>$/;"	l
c010a57d	obj/kernel.asm	/^c010a57d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a580	obj/kernel.asm	/^c010a580:	68 35 f1 10 c0       	push   $0xc010f135$/;"	l
c010a585	obj/kernel.asm	/^c010a585:	68 e9 01 00 00       	push   $0x1e9$/;"	l
c010a58a	obj/kernel.asm	/^c010a58a:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010a58f	obj/kernel.asm	/^c010a58f:	e8 4b 5e ff ff       	call   c01003df <__panic>$/;"	l
c010a594	obj/kernel.asm	/^c010a594:	8b 15 88 24 1c c0    	mov    0xc01c2488,%edx$/;"	l
c010a59a	obj/kernel.asm	/^c010a59a:	a1 84 24 1c c0       	mov    0xc01c2484,%eax$/;"	l
c010a59f	obj/kernel.asm	/^c010a59f:	39 c2                	cmp    %eax,%edx$/;"	l
c010a5a1	obj/kernel.asm	/^c010a5a1:	75 17                	jne    c010a5ba <do_exit+0x52>$/;"	l
c010a5a3	obj/kernel.asm	/^c010a5a3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a5a6	obj/kernel.asm	/^c010a5a6:	68 45 f1 10 c0       	push   $0xc010f145$/;"	l
c010a5ab	obj/kernel.asm	/^c010a5ab:	68 ec 01 00 00       	push   $0x1ec$/;"	l
c010a5b0	obj/kernel.asm	/^c010a5b0:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010a5b5	obj/kernel.asm	/^c010a5b5:	e8 25 5e ff ff       	call   c01003df <__panic>$/;"	l
c010a5ba	obj/kernel.asm	/^c010a5ba:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010a5bf	obj/kernel.asm	/^c010a5bf:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a5c2	obj/kernel.asm	/^c010a5c2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a5c5	obj/kernel.asm	/^c010a5c5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a5c9	obj/kernel.asm	/^c010a5c9:	74 56                	je     c010a621 <do_exit+0xb9>$/;"	l
c010a5cb	obj/kernel.asm	/^c010a5cb:	a1 94 45 1c c0       	mov    0xc01c4594,%eax$/;"	l
c010a5d0	obj/kernel.asm	/^c010a5d0:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a5d3	obj/kernel.asm	/^c010a5d3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a5d6	obj/kernel.asm	/^c010a5d6:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010a5d9	obj/kernel.asm	/^c010a5d9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a5dc	obj/kernel.asm	/^c010a5dc:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a5df	obj/kernel.asm	/^c010a5df:	e8 9d f4 ff ff       	call   c0109a81 <mm_count_dec>$/;"	l
c010a5e4	obj/kernel.asm	/^c010a5e4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a5e7	obj/kernel.asm	/^c010a5e7:	85 c0                	test   %eax,%eax$/;"	l
c010a5e9	obj/kernel.asm	/^c010a5e9:	75 2a                	jne    c010a615 <do_exit+0xad>$/;"	l
c010a5eb	obj/kernel.asm	/^c010a5eb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a5ee	obj/kernel.asm	/^c010a5ee:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a5f1	obj/kernel.asm	/^c010a5f1:	e8 72 b2 ff ff       	call   c0105868 <exit_mmap>$/;"	l
c010a5f6	obj/kernel.asm	/^c010a5f6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a5f9	obj/kernel.asm	/^c010a5f9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a5fc	obj/kernel.asm	/^c010a5fc:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a5ff	obj/kernel.asm	/^c010a5ff:	e8 52 fc ff ff       	call   c010a256 <put_pgdir>$/;"	l
c010a604	obj/kernel.asm	/^c010a604:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a607	obj/kernel.asm	/^c010a607:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a60a	obj/kernel.asm	/^c010a60a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a60d	obj/kernel.asm	/^c010a60d:	e8 cb af ff ff       	call   c01055dd <mm_destroy>$/;"	l
c010a612	obj/kernel.asm	/^c010a612:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a615	obj/kernel.asm	/^c010a615:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010a61a	obj/kernel.asm	/^c010a61a:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010a621	obj/kernel.asm	/^c010a621:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010a626	obj/kernel.asm	/^c010a626:	c7 00 03 00 00 00    	movl   $0x3,(%eax)$/;"	l
c010a62c	obj/kernel.asm	/^c010a62c:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010a631	obj/kernel.asm	/^c010a631:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010a634	obj/kernel.asm	/^c010a634:	89 90 8c 00 00 00    	mov    %edx,0x8c(%eax)$/;"	l
c010a63a	obj/kernel.asm	/^c010a63a:	e8 04 f3 ff ff       	call   c0109943 <__intr_save>$/;"	l
c010a63f	obj/kernel.asm	/^c010a63f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a642	obj/kernel.asm	/^c010a642:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010a647	obj/kernel.asm	/^c010a647:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a64a	obj/kernel.asm	/^c010a64a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a64d	obj/kernel.asm	/^c010a64d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a650	obj/kernel.asm	/^c010a650:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010a656	obj/kernel.asm	/^c010a656:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c010a65b	obj/kernel.asm	/^c010a65b:	75 0e                	jne    c010a66b <do_exit+0x103>$/;"	l
c010a65d	obj/kernel.asm	/^c010a65d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a660	obj/kernel.asm	/^c010a660:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010a663	obj/kernel.asm	/^c010a663:	e8 a5 0f 00 00       	call   c010b60d <wakeup_proc>$/;"	l
c010a668	obj/kernel.asm	/^c010a668:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a66b	obj/kernel.asm	/^c010a66b:	e9 ab 00 00 00       	jmp    c010a71b <do_exit+0x1b3>$/;"	l
c010a670	obj/kernel.asm	/^c010a670:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010a675	obj/kernel.asm	/^c010a675:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010a67b	obj/kernel.asm	/^c010a67b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a67e	obj/kernel.asm	/^c010a67e:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010a683	obj/kernel.asm	/^c010a683:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010a686	obj/kernel.asm	/^c010a686:	8b 92 9c 00 00 00    	mov    0x9c(%edx),%edx$/;"	l
c010a68c	obj/kernel.asm	/^c010a68c:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010a692	obj/kernel.asm	/^c010a692:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a695	obj/kernel.asm	/^c010a695:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%eax)$/;"	l
c010a69c	obj/kernel.asm	/^c010a69c:	00 00 00 $/;"	l
c010a69f	obj/kernel.asm	/^c010a69f:	a1 84 24 1c c0       	mov    0xc01c2484,%eax$/;"	l
c010a6a4	obj/kernel.asm	/^c010a6a4:	8b 90 94 00 00 00    	mov    0x94(%eax),%edx$/;"	l
c010a6aa	obj/kernel.asm	/^c010a6aa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a6ad	obj/kernel.asm	/^c010a6ad:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010a6b3	obj/kernel.asm	/^c010a6b3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a6b6	obj/kernel.asm	/^c010a6b6:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010a6bc	obj/kernel.asm	/^c010a6bc:	85 c0                	test   %eax,%eax$/;"	l
c010a6be	obj/kernel.asm	/^c010a6be:	74 14                	je     c010a6d4 <do_exit+0x16c>$/;"	l
c010a6c0	obj/kernel.asm	/^c010a6c0:	a1 84 24 1c c0       	mov    0xc01c2484,%eax$/;"	l
c010a6c5	obj/kernel.asm	/^c010a6c5:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010a6cb	obj/kernel.asm	/^c010a6cb:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010a6ce	obj/kernel.asm	/^c010a6ce:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c010a6d4	obj/kernel.asm	/^c010a6d4:	8b 15 84 24 1c c0    	mov    0xc01c2484,%edx$/;"	l
c010a6da	obj/kernel.asm	/^c010a6da:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a6dd	obj/kernel.asm	/^c010a6dd:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010a6e0	obj/kernel.asm	/^c010a6e0:	a1 84 24 1c c0       	mov    0xc01c2484,%eax$/;"	l
c010a6e5	obj/kernel.asm	/^c010a6e5:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010a6e8	obj/kernel.asm	/^c010a6e8:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010a6ee	obj/kernel.asm	/^c010a6ee:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a6f1	obj/kernel.asm	/^c010a6f1:	8b 00                	mov    (%eax),%eax$/;"	l
c010a6f3	obj/kernel.asm	/^c010a6f3:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a6f6	obj/kernel.asm	/^c010a6f6:	75 23                	jne    c010a71b <do_exit+0x1b3>$/;"	l
c010a6f8	obj/kernel.asm	/^c010a6f8:	a1 84 24 1c c0       	mov    0xc01c2484,%eax$/;"	l
c010a6fd	obj/kernel.asm	/^c010a6fd:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010a703	obj/kernel.asm	/^c010a703:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c010a708	obj/kernel.asm	/^c010a708:	75 11                	jne    c010a71b <do_exit+0x1b3>$/;"	l
c010a70a	obj/kernel.asm	/^c010a70a:	a1 84 24 1c c0       	mov    0xc01c2484,%eax$/;"	l
c010a70f	obj/kernel.asm	/^c010a70f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a712	obj/kernel.asm	/^c010a712:	50                   	push   %eax$/;"	l
c010a713	obj/kernel.asm	/^c010a713:	e8 f5 0e 00 00       	call   c010b60d <wakeup_proc>$/;"	l
c010a718	obj/kernel.asm	/^c010a718:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a71b	obj/kernel.asm	/^c010a71b:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010a720	obj/kernel.asm	/^c010a720:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010a726	obj/kernel.asm	/^c010a726:	85 c0                	test   %eax,%eax$/;"	l
c010a728	obj/kernel.asm	/^c010a728:	0f 85 42 ff ff ff    	jne    c010a670 <do_exit+0x108>$/;"	l
c010a72e	obj/kernel.asm	/^c010a72e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a731	obj/kernel.asm	/^c010a731:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a734	obj/kernel.asm	/^c010a734:	e8 34 f2 ff ff       	call   c010996d <__intr_restore>$/;"	l
c010a739	obj/kernel.asm	/^c010a739:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a73c	obj/kernel.asm	/^c010a73c:	e8 5b 0f 00 00       	call   c010b69c <schedule>$/;"	l
c010a741	obj/kernel.asm	/^c010a741:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010a746	obj/kernel.asm	/^c010a746:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a749	obj/kernel.asm	/^c010a749:	50                   	push   %eax$/;"	l
c010a74a	obj/kernel.asm	/^c010a74a:	68 58 f1 10 c0       	push   $0xc010f158$/;"	l
c010a74f	obj/kernel.asm	/^c010a74f:	68 18 02 00 00       	push   $0x218$/;"	l
c010a754	obj/kernel.asm	/^c010a754:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010a759	obj/kernel.asm	/^c010a759:	e8 81 5c ff ff       	call   c01003df <__panic>$/;"	l
c010a75e	obj/kernel.asm	/^c010a75e <load_icode>:$/;"	l
c010a75e	obj/kernel.asm	/^c010a75e:	55                   	push   %ebp$/;"	l
c010a75f	obj/kernel.asm	/^c010a75f:	89 e5                	mov    %esp,%ebp$/;"	l
c010a761	obj/kernel.asm	/^c010a761:	83 ec 58             	sub    $0x58,%esp$/;"	l
c010a764	obj/kernel.asm	/^c010a764:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010a769	obj/kernel.asm	/^c010a769:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a76c	obj/kernel.asm	/^c010a76c:	85 c0                	test   %eax,%eax$/;"	l
c010a76e	obj/kernel.asm	/^c010a76e:	74 17                	je     c010a787 <load_icode+0x29>$/;"	l
c010a770	obj/kernel.asm	/^c010a770:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a773	obj/kernel.asm	/^c010a773:	68 78 f1 10 c0       	push   $0xc010f178$/;"	l
c010a778	obj/kernel.asm	/^c010a778:	68 22 02 00 00       	push   $0x222$/;"	l
c010a77d	obj/kernel.asm	/^c010a77d:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010a782	obj/kernel.asm	/^c010a782:	e8 58 5c ff ff       	call   c01003df <__panic>$/;"	l
c010a787	obj/kernel.asm	/^c010a787:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010a78e	obj/kernel.asm	/^c010a78e:	e8 21 ab ff ff       	call   c01052b4 <mm_create>$/;"	l
c010a793	obj/kernel.asm	/^c010a793:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010a796	obj/kernel.asm	/^c010a796:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c010a79a	obj/kernel.asm	/^c010a79a:	75 06                	jne    c010a7a2 <load_icode+0x44>$/;"	l
c010a79c	obj/kernel.asm	/^c010a79c:	90                   	nop$/;"	l
c010a79d	obj/kernel.asm	/^c010a79d:	e9 52 05 00 00       	jmp    c010acf4 <load_icode+0x596>$/;"	l
c010a7a2	obj/kernel.asm	/^c010a7a2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a7a5	obj/kernel.asm	/^c010a7a5:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c010a7a8	obj/kernel.asm	/^c010a7a8:	e8 10 fa ff ff       	call   c010a1bd <setup_pgdir>$/;"	l
c010a7ad	obj/kernel.asm	/^c010a7ad:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a7b0	obj/kernel.asm	/^c010a7b0:	85 c0                	test   %eax,%eax$/;"	l
c010a7b2	obj/kernel.asm	/^c010a7b2:	74 05                	je     c010a7b9 <load_icode+0x5b>$/;"	l
c010a7b4	obj/kernel.asm	/^c010a7b4:	e9 5c 05 00 00       	jmp    c010ad15 <load_icode+0x5b7>$/;"	l
c010a7b9	obj/kernel.asm	/^c010a7b9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a7bc	obj/kernel.asm	/^c010a7bc:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010a7bf	obj/kernel.asm	/^c010a7bf:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010a7c2	obj/kernel.asm	/^c010a7c2:	8b 50 1c             	mov    0x1c(%eax),%edx$/;"	l
c010a7c5	obj/kernel.asm	/^c010a7c5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a7c8	obj/kernel.asm	/^c010a7c8:	01 d0                	add    %edx,%eax$/;"	l
c010a7ca	obj/kernel.asm	/^c010a7ca:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a7cd	obj/kernel.asm	/^c010a7cd:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010a7d0	obj/kernel.asm	/^c010a7d0:	8b 00                	mov    (%eax),%eax$/;"	l
c010a7d2	obj/kernel.asm	/^c010a7d2:	3d 7f 45 4c 46       	cmp    $0x464c457f,%eax$/;"	l
c010a7d7	obj/kernel.asm	/^c010a7d7:	74 0c                	je     c010a7e5 <load_icode+0x87>$/;"	l
c010a7d9	obj/kernel.asm	/^c010a7d9:	c7 45 f4 f8 ff ff ff 	movl   $0xfffffff8,-0xc(%ebp)$/;"	l
c010a7e0	obj/kernel.asm	/^c010a7e0:	e9 22 05 00 00       	jmp    c010ad07 <load_icode+0x5a9>$/;"	l
c010a7e5	obj/kernel.asm	/^c010a7e5:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010a7e8	obj/kernel.asm	/^c010a7e8:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c010a7ec	obj/kernel.asm	/^c010a7ec:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010a7ef	obj/kernel.asm	/^c010a7ef:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c010a7f2	obj/kernel.asm	/^c010a7f2:	89 c2                	mov    %eax,%edx$/;"	l
c010a7f4	obj/kernel.asm	/^c010a7f4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a7f7	obj/kernel.asm	/^c010a7f7:	01 d0                	add    %edx,%eax$/;"	l
c010a7f9	obj/kernel.asm	/^c010a7f9:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010a7fc	obj/kernel.asm	/^c010a7fc:	e9 d7 02 00 00       	jmp    c010aad8 <load_icode+0x37a>$/;"	l
c010a801	obj/kernel.asm	/^c010a801:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a804	obj/kernel.asm	/^c010a804:	8b 00                	mov    (%eax),%eax$/;"	l
c010a806	obj/kernel.asm	/^c010a806:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a809	obj/kernel.asm	/^c010a809:	74 05                	je     c010a810 <load_icode+0xb2>$/;"	l
c010a80b	obj/kernel.asm	/^c010a80b:	e9 c4 02 00 00       	jmp    c010aad4 <load_icode+0x376>$/;"	l
c010a810	obj/kernel.asm	/^c010a810:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a813	obj/kernel.asm	/^c010a813:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010a816	obj/kernel.asm	/^c010a816:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a819	obj/kernel.asm	/^c010a819:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a81c	obj/kernel.asm	/^c010a81c:	39 c2                	cmp    %eax,%edx$/;"	l
c010a81e	obj/kernel.asm	/^c010a81e:	76 0c                	jbe    c010a82c <load_icode+0xce>$/;"	l
c010a820	obj/kernel.asm	/^c010a820:	c7 45 f4 f8 ff ff ff 	movl   $0xfffffff8,-0xc(%ebp)$/;"	l
c010a827	obj/kernel.asm	/^c010a827:	e9 cd 04 00 00       	jmp    c010acf9 <load_icode+0x59b>$/;"	l
c010a82c	obj/kernel.asm	/^c010a82c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a82f	obj/kernel.asm	/^c010a82f:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a832	obj/kernel.asm	/^c010a832:	85 c0                	test   %eax,%eax$/;"	l
c010a834	obj/kernel.asm	/^c010a834:	75 05                	jne    c010a83b <load_icode+0xdd>$/;"	l
c010a836	obj/kernel.asm	/^c010a836:	e9 99 02 00 00       	jmp    c010aad4 <load_icode+0x376>$/;"	l
c010a83b	obj/kernel.asm	/^c010a83b:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c010a842	obj/kernel.asm	/^c010a842:	c7 45 e4 04 00 00 00 	movl   $0x4,-0x1c(%ebp)$/;"	l
c010a849	obj/kernel.asm	/^c010a849:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a84c	obj/kernel.asm	/^c010a84c:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a84f	obj/kernel.asm	/^c010a84f:	83 e0 01             	and    $0x1,%eax$/;"	l
c010a852	obj/kernel.asm	/^c010a852:	85 c0                	test   %eax,%eax$/;"	l
c010a854	obj/kernel.asm	/^c010a854:	74 04                	je     c010a85a <load_icode+0xfc>$/;"	l
c010a856	obj/kernel.asm	/^c010a856:	83 4d e8 04          	orl    $0x4,-0x18(%ebp)$/;"	l
c010a85a	obj/kernel.asm	/^c010a85a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a85d	obj/kernel.asm	/^c010a85d:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a860	obj/kernel.asm	/^c010a860:	83 e0 02             	and    $0x2,%eax$/;"	l
c010a863	obj/kernel.asm	/^c010a863:	85 c0                	test   %eax,%eax$/;"	l
c010a865	obj/kernel.asm	/^c010a865:	74 04                	je     c010a86b <load_icode+0x10d>$/;"	l
c010a867	obj/kernel.asm	/^c010a867:	83 4d e8 02          	orl    $0x2,-0x18(%ebp)$/;"	l
c010a86b	obj/kernel.asm	/^c010a86b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a86e	obj/kernel.asm	/^c010a86e:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a871	obj/kernel.asm	/^c010a871:	83 e0 04             	and    $0x4,%eax$/;"	l
c010a874	obj/kernel.asm	/^c010a874:	85 c0                	test   %eax,%eax$/;"	l
c010a876	obj/kernel.asm	/^c010a876:	74 04                	je     c010a87c <load_icode+0x11e>$/;"	l
c010a878	obj/kernel.asm	/^c010a878:	83 4d e8 01          	orl    $0x1,-0x18(%ebp)$/;"	l
c010a87c	obj/kernel.asm	/^c010a87c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a87f	obj/kernel.asm	/^c010a87f:	83 e0 02             	and    $0x2,%eax$/;"	l
c010a882	obj/kernel.asm	/^c010a882:	85 c0                	test   %eax,%eax$/;"	l
c010a884	obj/kernel.asm	/^c010a884:	74 04                	je     c010a88a <load_icode+0x12c>$/;"	l
c010a886	obj/kernel.asm	/^c010a886:	83 4d e4 02          	orl    $0x2,-0x1c(%ebp)$/;"	l
c010a88a	obj/kernel.asm	/^c010a88a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a88d	obj/kernel.asm	/^c010a88d:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c010a890	obj/kernel.asm	/^c010a890:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a893	obj/kernel.asm	/^c010a893:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a896	obj/kernel.asm	/^c010a896:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a899	obj/kernel.asm	/^c010a899:	6a 00                	push   $0x0$/;"	l
c010a89b	obj/kernel.asm	/^c010a89b:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010a89e	obj/kernel.asm	/^c010a89e:	52                   	push   %edx$/;"	l
c010a89f	obj/kernel.asm	/^c010a89f:	50                   	push   %eax$/;"	l
c010a8a0	obj/kernel.asm	/^c010a8a0:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c010a8a3	obj/kernel.asm	/^c010a8a3:	e8 d3 ad ff ff       	call   c010567b <mm_map>$/;"	l
c010a8a8	obj/kernel.asm	/^c010a8a8:	83 c4 20             	add    $0x20,%esp$/;"	l
c010a8ab	obj/kernel.asm	/^c010a8ab:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a8ae	obj/kernel.asm	/^c010a8ae:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a8b2	obj/kernel.asm	/^c010a8b2:	74 05                	je     c010a8b9 <load_icode+0x15b>$/;"	l
c010a8b4	obj/kernel.asm	/^c010a8b4:	e9 40 04 00 00       	jmp    c010acf9 <load_icode+0x59b>$/;"	l
c010a8b9	obj/kernel.asm	/^c010a8b9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a8bc	obj/kernel.asm	/^c010a8bc:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010a8bf	obj/kernel.asm	/^c010a8bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a8c2	obj/kernel.asm	/^c010a8c2:	01 d0                	add    %edx,%eax$/;"	l
c010a8c4	obj/kernel.asm	/^c010a8c4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010a8c7	obj/kernel.asm	/^c010a8c7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a8ca	obj/kernel.asm	/^c010a8ca:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a8cd	obj/kernel.asm	/^c010a8cd:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010a8d0	obj/kernel.asm	/^c010a8d0:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a8d3	obj/kernel.asm	/^c010a8d3:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010a8d6	obj/kernel.asm	/^c010a8d6:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010a8d9	obj/kernel.asm	/^c010a8d9:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010a8de	obj/kernel.asm	/^c010a8de:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010a8e1	obj/kernel.asm	/^c010a8e1:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010a8e8	obj/kernel.asm	/^c010a8e8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a8eb	obj/kernel.asm	/^c010a8eb:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010a8ee	obj/kernel.asm	/^c010a8ee:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a8f1	obj/kernel.asm	/^c010a8f1:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a8f4	obj/kernel.asm	/^c010a8f4:	01 d0                	add    %edx,%eax$/;"	l
c010a8f6	obj/kernel.asm	/^c010a8f6:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010a8f9	obj/kernel.asm	/^c010a8f9:	e9 85 00 00 00       	jmp    c010a983 <load_icode+0x225>$/;"	l
c010a8fe	obj/kernel.asm	/^c010a8fe:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a901	obj/kernel.asm	/^c010a901:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a904	obj/kernel.asm	/^c010a904:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a907	obj/kernel.asm	/^c010a907:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c010a90a	obj/kernel.asm	/^c010a90a:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
c010a90d	obj/kernel.asm	/^c010a90d:	50                   	push   %eax$/;"	l
c010a90e	obj/kernel.asm	/^c010a90e:	e8 bf 9d ff ff       	call   c01046d2 <pgdir_alloc_page>$/;"	l
c010a913	obj/kernel.asm	/^c010a913:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a916	obj/kernel.asm	/^c010a916:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a919	obj/kernel.asm	/^c010a919:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a91d	obj/kernel.asm	/^c010a91d:	75 05                	jne    c010a924 <load_icode+0x1c6>$/;"	l
c010a91f	obj/kernel.asm	/^c010a91f:	e9 d5 03 00 00       	jmp    c010acf9 <load_icode+0x59b>$/;"	l
c010a924	obj/kernel.asm	/^c010a924:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a927	obj/kernel.asm	/^c010a927:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c010a92a	obj/kernel.asm	/^c010a92a:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010a92d	obj/kernel.asm	/^c010a92d:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010a932	obj/kernel.asm	/^c010a932:	2b 45 bc             	sub    -0x44(%ebp),%eax$/;"	l
c010a935	obj/kernel.asm	/^c010a935:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010a938	obj/kernel.asm	/^c010a938:	81 45 d4 00 10 00 00 	addl   $0x1000,-0x2c(%ebp)$/;"	l
c010a93f	obj/kernel.asm	/^c010a93f:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010a942	obj/kernel.asm	/^c010a942:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010a945	obj/kernel.asm	/^c010a945:	73 09                	jae    c010a950 <load_icode+0x1f2>$/;"	l
c010a947	obj/kernel.asm	/^c010a947:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010a94a	obj/kernel.asm	/^c010a94a:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c010a94d	obj/kernel.asm	/^c010a94d:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010a950	obj/kernel.asm	/^c010a950:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a953	obj/kernel.asm	/^c010a953:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a956	obj/kernel.asm	/^c010a956:	e8 88 f0 ff ff       	call   c01099e3 <page2kva>$/;"	l
c010a95b	obj/kernel.asm	/^c010a95b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a95e	obj/kernel.asm	/^c010a95e:	89 c2                	mov    %eax,%edx$/;"	l
c010a960	obj/kernel.asm	/^c010a960:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c010a963	obj/kernel.asm	/^c010a963:	01 d0                	add    %edx,%eax$/;"	l
c010a965	obj/kernel.asm	/^c010a965:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a968	obj/kernel.asm	/^c010a968:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c010a96b	obj/kernel.asm	/^c010a96b:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010a96e	obj/kernel.asm	/^c010a96e:	50                   	push   %eax$/;"	l
c010a96f	obj/kernel.asm	/^c010a96f:	e8 67 1a 00 00       	call   c010c3db <memcpy>$/;"	l
c010a974	obj/kernel.asm	/^c010a974:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a977	obj/kernel.asm	/^c010a977:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a97a	obj/kernel.asm	/^c010a97a:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010a97d	obj/kernel.asm	/^c010a97d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a980	obj/kernel.asm	/^c010a980:	01 45 e0             	add    %eax,-0x20(%ebp)$/;"	l
c010a983	obj/kernel.asm	/^c010a983:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a986	obj/kernel.asm	/^c010a986:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c010a989	obj/kernel.asm	/^c010a989:	0f 82 6f ff ff ff    	jb     c010a8fe <load_icode+0x1a0>$/;"	l
c010a98f	obj/kernel.asm	/^c010a98f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a992	obj/kernel.asm	/^c010a992:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010a995	obj/kernel.asm	/^c010a995:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a998	obj/kernel.asm	/^c010a998:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a99b	obj/kernel.asm	/^c010a99b:	01 d0                	add    %edx,%eax$/;"	l
c010a99d	obj/kernel.asm	/^c010a99d:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010a9a0	obj/kernel.asm	/^c010a9a0:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a9a3	obj/kernel.asm	/^c010a9a3:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010a9a6	obj/kernel.asm	/^c010a9a6:	0f 83 9c 00 00 00    	jae    c010aa48 <load_icode+0x2ea>$/;"	l
c010a9ac	obj/kernel.asm	/^c010a9ac:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a9af	obj/kernel.asm	/^c010a9af:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c010a9b2	obj/kernel.asm	/^c010a9b2:	75 05                	jne    c010a9b9 <load_icode+0x25b>$/;"	l
c010a9b4	obj/kernel.asm	/^c010a9b4:	e9 1b 01 00 00       	jmp    c010aad4 <load_icode+0x376>$/;"	l
c010a9b9	obj/kernel.asm	/^c010a9b9:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a9bc	obj/kernel.asm	/^c010a9bc:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c010a9bf	obj/kernel.asm	/^c010a9bf:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c010a9c4	obj/kernel.asm	/^c010a9c4:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010a9c7	obj/kernel.asm	/^c010a9c7:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010a9cc	obj/kernel.asm	/^c010a9cc:	2b 45 bc             	sub    -0x44(%ebp),%eax$/;"	l
c010a9cf	obj/kernel.asm	/^c010a9cf:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010a9d2	obj/kernel.asm	/^c010a9d2:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010a9d5	obj/kernel.asm	/^c010a9d5:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010a9d8	obj/kernel.asm	/^c010a9d8:	73 09                	jae    c010a9e3 <load_icode+0x285>$/;"	l
c010a9da	obj/kernel.asm	/^c010a9da:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010a9dd	obj/kernel.asm	/^c010a9dd:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c010a9e0	obj/kernel.asm	/^c010a9e0:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010a9e3	obj/kernel.asm	/^c010a9e3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a9e6	obj/kernel.asm	/^c010a9e6:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a9e9	obj/kernel.asm	/^c010a9e9:	e8 f5 ef ff ff       	call   c01099e3 <page2kva>$/;"	l
c010a9ee	obj/kernel.asm	/^c010a9ee:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a9f1	obj/kernel.asm	/^c010a9f1:	89 c2                	mov    %eax,%edx$/;"	l
c010a9f3	obj/kernel.asm	/^c010a9f3:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c010a9f6	obj/kernel.asm	/^c010a9f6:	01 d0                	add    %edx,%eax$/;"	l
c010a9f8	obj/kernel.asm	/^c010a9f8:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a9fb	obj/kernel.asm	/^c010a9fb:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c010a9fe	obj/kernel.asm	/^c010a9fe:	6a 00                	push   $0x0$/;"	l
c010aa00	obj/kernel.asm	/^c010aa00:	50                   	push   %eax$/;"	l
c010aa01	obj/kernel.asm	/^c010aa01:	e8 f2 18 00 00       	call   c010c2f8 <memset>$/;"	l
c010aa06	obj/kernel.asm	/^c010aa06:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aa09	obj/kernel.asm	/^c010aa09:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010aa0c	obj/kernel.asm	/^c010aa0c:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010aa0f	obj/kernel.asm	/^c010aa0f:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010aa12	obj/kernel.asm	/^c010aa12:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010aa15	obj/kernel.asm	/^c010aa15:	73 08                	jae    c010aa1f <load_icode+0x2c1>$/;"	l
c010aa17	obj/kernel.asm	/^c010aa17:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010aa1a	obj/kernel.asm	/^c010aa1a:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c010aa1d	obj/kernel.asm	/^c010aa1d:	74 29                	je     c010aa48 <load_icode+0x2ea>$/;"	l
c010aa1f	obj/kernel.asm	/^c010aa1f:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010aa22	obj/kernel.asm	/^c010aa22:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010aa25	obj/kernel.asm	/^c010aa25:	72 08                	jb     c010aa2f <load_icode+0x2d1>$/;"	l
c010aa27	obj/kernel.asm	/^c010aa27:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010aa2a	obj/kernel.asm	/^c010aa2a:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010aa2d	obj/kernel.asm	/^c010aa2d:	74 19                	je     c010aa48 <load_icode+0x2ea>$/;"	l
c010aa2f	obj/kernel.asm	/^c010aa2f:	68 a0 f1 10 c0       	push   $0xc010f1a0$/;"	l
c010aa34	obj/kernel.asm	/^c010aa34:	68 d9 f1 10 c0       	push   $0xc010f1d9$/;"	l
c010aa39	obj/kernel.asm	/^c010aa39:	68 74 02 00 00       	push   $0x274$/;"	l
c010aa3e	obj/kernel.asm	/^c010aa3e:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010aa43	obj/kernel.asm	/^c010aa43:	e8 97 59 ff ff       	call   c01003df <__panic>$/;"	l
c010aa48	obj/kernel.asm	/^c010aa48:	eb 7e                	jmp    c010aac8 <load_icode+0x36a>$/;"	l
c010aa4a	obj/kernel.asm	/^c010aa4a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010aa4d	obj/kernel.asm	/^c010aa4d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010aa50	obj/kernel.asm	/^c010aa50:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010aa53	obj/kernel.asm	/^c010aa53:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c010aa56	obj/kernel.asm	/^c010aa56:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
c010aa59	obj/kernel.asm	/^c010aa59:	50                   	push   %eax$/;"	l
c010aa5a	obj/kernel.asm	/^c010aa5a:	e8 73 9c ff ff       	call   c01046d2 <pgdir_alloc_page>$/;"	l
c010aa5f	obj/kernel.asm	/^c010aa5f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aa62	obj/kernel.asm	/^c010aa62:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010aa65	obj/kernel.asm	/^c010aa65:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010aa69	obj/kernel.asm	/^c010aa69:	75 05                	jne    c010aa70 <load_icode+0x312>$/;"	l
c010aa6b	obj/kernel.asm	/^c010aa6b:	e9 89 02 00 00       	jmp    c010acf9 <load_icode+0x59b>$/;"	l
c010aa70	obj/kernel.asm	/^c010aa70:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010aa73	obj/kernel.asm	/^c010aa73:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c010aa76	obj/kernel.asm	/^c010aa76:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010aa79	obj/kernel.asm	/^c010aa79:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010aa7e	obj/kernel.asm	/^c010aa7e:	2b 45 bc             	sub    -0x44(%ebp),%eax$/;"	l
c010aa81	obj/kernel.asm	/^c010aa81:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010aa84	obj/kernel.asm	/^c010aa84:	81 45 d4 00 10 00 00 	addl   $0x1000,-0x2c(%ebp)$/;"	l
c010aa8b	obj/kernel.asm	/^c010aa8b:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010aa8e	obj/kernel.asm	/^c010aa8e:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010aa91	obj/kernel.asm	/^c010aa91:	73 09                	jae    c010aa9c <load_icode+0x33e>$/;"	l
c010aa93	obj/kernel.asm	/^c010aa93:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010aa96	obj/kernel.asm	/^c010aa96:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c010aa99	obj/kernel.asm	/^c010aa99:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010aa9c	obj/kernel.asm	/^c010aa9c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010aa9f	obj/kernel.asm	/^c010aa9f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010aaa2	obj/kernel.asm	/^c010aaa2:	e8 3c ef ff ff       	call   c01099e3 <page2kva>$/;"	l
c010aaa7	obj/kernel.asm	/^c010aaa7:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aaaa	obj/kernel.asm	/^c010aaaa:	89 c2                	mov    %eax,%edx$/;"	l
c010aaac	obj/kernel.asm	/^c010aaac:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c010aaaf	obj/kernel.asm	/^c010aaaf:	01 d0                	add    %edx,%eax$/;"	l
c010aab1	obj/kernel.asm	/^c010aab1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010aab4	obj/kernel.asm	/^c010aab4:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c010aab7	obj/kernel.asm	/^c010aab7:	6a 00                	push   $0x0$/;"	l
c010aab9	obj/kernel.asm	/^c010aab9:	50                   	push   %eax$/;"	l
c010aaba	obj/kernel.asm	/^c010aaba:	e8 39 18 00 00       	call   c010c2f8 <memset>$/;"	l
c010aabf	obj/kernel.asm	/^c010aabf:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aac2	obj/kernel.asm	/^c010aac2:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010aac5	obj/kernel.asm	/^c010aac5:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010aac8	obj/kernel.asm	/^c010aac8:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010aacb	obj/kernel.asm	/^c010aacb:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c010aace	obj/kernel.asm	/^c010aace:	0f 82 76 ff ff ff    	jb     c010aa4a <load_icode+0x2ec>$/;"	l
c010aad4	obj/kernel.asm	/^c010aad4:	83 45 ec 20          	addl   $0x20,-0x14(%ebp)$/;"	l
c010aad8	obj/kernel.asm	/^c010aad8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010aadb	obj/kernel.asm	/^c010aadb:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c010aade	obj/kernel.asm	/^c010aade:	0f 82 1d fd ff ff    	jb     c010a801 <load_icode+0xa3>$/;"	l
c010aae4	obj/kernel.asm	/^c010aae4:	c7 45 e8 0b 00 00 00 	movl   $0xb,-0x18(%ebp)$/;"	l
c010aaeb	obj/kernel.asm	/^c010aaeb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010aaee	obj/kernel.asm	/^c010aaee:	6a 00                	push   $0x0$/;"	l
c010aaf0	obj/kernel.asm	/^c010aaf0:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010aaf3	obj/kernel.asm	/^c010aaf3:	68 00 00 10 00       	push   $0x100000$/;"	l
c010aaf8	obj/kernel.asm	/^c010aaf8:	68 00 00 f0 af       	push   $0xaff00000$/;"	l
c010aafd	obj/kernel.asm	/^c010aafd:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c010ab00	obj/kernel.asm	/^c010ab00:	e8 76 ab ff ff       	call   c010567b <mm_map>$/;"	l
c010ab05	obj/kernel.asm	/^c010ab05:	83 c4 20             	add    $0x20,%esp$/;"	l
c010ab08	obj/kernel.asm	/^c010ab08:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ab0b	obj/kernel.asm	/^c010ab0b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ab0f	obj/kernel.asm	/^c010ab0f:	74 05                	je     c010ab16 <load_icode+0x3b8>$/;"	l
c010ab11	obj/kernel.asm	/^c010ab11:	e9 e3 01 00 00       	jmp    c010acf9 <load_icode+0x59b>$/;"	l
c010ab16	obj/kernel.asm	/^c010ab16:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010ab19	obj/kernel.asm	/^c010ab19:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010ab1c	obj/kernel.asm	/^c010ab1c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010ab1f	obj/kernel.asm	/^c010ab1f:	6a 07                	push   $0x7$/;"	l
c010ab21	obj/kernel.asm	/^c010ab21:	68 00 f0 ff af       	push   $0xaffff000$/;"	l
c010ab26	obj/kernel.asm	/^c010ab26:	50                   	push   %eax$/;"	l
c010ab27	obj/kernel.asm	/^c010ab27:	e8 a6 9b ff ff       	call   c01046d2 <pgdir_alloc_page>$/;"	l
c010ab2c	obj/kernel.asm	/^c010ab2c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ab2f	obj/kernel.asm	/^c010ab2f:	85 c0                	test   %eax,%eax$/;"	l
c010ab31	obj/kernel.asm	/^c010ab31:	75 19                	jne    c010ab4c <load_icode+0x3ee>$/;"	l
c010ab33	obj/kernel.asm	/^c010ab33:	68 f0 f1 10 c0       	push   $0xc010f1f0$/;"	l
c010ab38	obj/kernel.asm	/^c010ab38:	68 d9 f1 10 c0       	push   $0xc010f1d9$/;"	l
c010ab3d	obj/kernel.asm	/^c010ab3d:	68 87 02 00 00       	push   $0x287$/;"	l
c010ab42	obj/kernel.asm	/^c010ab42:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010ab47	obj/kernel.asm	/^c010ab47:	e8 93 58 ff ff       	call   c01003df <__panic>$/;"	l
c010ab4c	obj/kernel.asm	/^c010ab4c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010ab4f	obj/kernel.asm	/^c010ab4f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010ab52	obj/kernel.asm	/^c010ab52:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010ab55	obj/kernel.asm	/^c010ab55:	6a 07                	push   $0x7$/;"	l
c010ab57	obj/kernel.asm	/^c010ab57:	68 00 e0 ff af       	push   $0xafffe000$/;"	l
c010ab5c	obj/kernel.asm	/^c010ab5c:	50                   	push   %eax$/;"	l
c010ab5d	obj/kernel.asm	/^c010ab5d:	e8 70 9b ff ff       	call   c01046d2 <pgdir_alloc_page>$/;"	l
c010ab62	obj/kernel.asm	/^c010ab62:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ab65	obj/kernel.asm	/^c010ab65:	85 c0                	test   %eax,%eax$/;"	l
c010ab67	obj/kernel.asm	/^c010ab67:	75 19                	jne    c010ab82 <load_icode+0x424>$/;"	l
c010ab69	obj/kernel.asm	/^c010ab69:	68 34 f2 10 c0       	push   $0xc010f234$/;"	l
c010ab6e	obj/kernel.asm	/^c010ab6e:	68 d9 f1 10 c0       	push   $0xc010f1d9$/;"	l
c010ab73	obj/kernel.asm	/^c010ab73:	68 88 02 00 00       	push   $0x288$/;"	l
c010ab78	obj/kernel.asm	/^c010ab78:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010ab7d	obj/kernel.asm	/^c010ab7d:	e8 5d 58 ff ff       	call   c01003df <__panic>$/;"	l
c010ab82	obj/kernel.asm	/^c010ab82:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010ab85	obj/kernel.asm	/^c010ab85:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010ab88	obj/kernel.asm	/^c010ab88:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010ab8b	obj/kernel.asm	/^c010ab8b:	6a 07                	push   $0x7$/;"	l
c010ab8d	obj/kernel.asm	/^c010ab8d:	68 00 d0 ff af       	push   $0xafffd000$/;"	l
c010ab92	obj/kernel.asm	/^c010ab92:	50                   	push   %eax$/;"	l
c010ab93	obj/kernel.asm	/^c010ab93:	e8 3a 9b ff ff       	call   c01046d2 <pgdir_alloc_page>$/;"	l
c010ab98	obj/kernel.asm	/^c010ab98:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ab9b	obj/kernel.asm	/^c010ab9b:	85 c0                	test   %eax,%eax$/;"	l
c010ab9d	obj/kernel.asm	/^c010ab9d:	75 19                	jne    c010abb8 <load_icode+0x45a>$/;"	l
c010ab9f	obj/kernel.asm	/^c010ab9f:	68 78 f2 10 c0       	push   $0xc010f278$/;"	l
c010aba4	obj/kernel.asm	/^c010aba4:	68 d9 f1 10 c0       	push   $0xc010f1d9$/;"	l
c010aba9	obj/kernel.asm	/^c010aba9:	68 89 02 00 00       	push   $0x289$/;"	l
c010abae	obj/kernel.asm	/^c010abae:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010abb3	obj/kernel.asm	/^c010abb3:	e8 27 58 ff ff       	call   c01003df <__panic>$/;"	l
c010abb8	obj/kernel.asm	/^c010abb8:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010abbb	obj/kernel.asm	/^c010abbb:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010abbe	obj/kernel.asm	/^c010abbe:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010abc1	obj/kernel.asm	/^c010abc1:	6a 07                	push   $0x7$/;"	l
c010abc3	obj/kernel.asm	/^c010abc3:	68 00 c0 ff af       	push   $0xafffc000$/;"	l
c010abc8	obj/kernel.asm	/^c010abc8:	50                   	push   %eax$/;"	l
c010abc9	obj/kernel.asm	/^c010abc9:	e8 04 9b ff ff       	call   c01046d2 <pgdir_alloc_page>$/;"	l
c010abce	obj/kernel.asm	/^c010abce:	83 c4 10             	add    $0x10,%esp$/;"	l
c010abd1	obj/kernel.asm	/^c010abd1:	85 c0                	test   %eax,%eax$/;"	l
c010abd3	obj/kernel.asm	/^c010abd3:	75 19                	jne    c010abee <load_icode+0x490>$/;"	l
c010abd5	obj/kernel.asm	/^c010abd5:	68 bc f2 10 c0       	push   $0xc010f2bc$/;"	l
c010abda	obj/kernel.asm	/^c010abda:	68 d9 f1 10 c0       	push   $0xc010f1d9$/;"	l
c010abdf	obj/kernel.asm	/^c010abdf:	68 8a 02 00 00       	push   $0x28a$/;"	l
c010abe4	obj/kernel.asm	/^c010abe4:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010abe9	obj/kernel.asm	/^c010abe9:	e8 f1 57 ff ff       	call   c01003df <__panic>$/;"	l
c010abee	obj/kernel.asm	/^c010abee:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010abf1	obj/kernel.asm	/^c010abf1:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c010abf4	obj/kernel.asm	/^c010abf4:	e8 6e ee ff ff       	call   c0109a67 <mm_count_inc>$/;"	l
c010abf9	obj/kernel.asm	/^c010abf9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010abfc	obj/kernel.asm	/^c010abfc:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010ac01	obj/kernel.asm	/^c010ac01:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010ac04	obj/kernel.asm	/^c010ac04:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010ac07	obj/kernel.asm	/^c010ac07:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010ac0c	obj/kernel.asm	/^c010ac0c:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010ac0f	obj/kernel.asm	/^c010ac0f:	8b 52 0c             	mov    0xc(%edx),%edx$/;"	l
c010ac12	obj/kernel.asm	/^c010ac12:	89 55 b8             	mov    %edx,-0x48(%ebp)$/;"	l
c010ac15	obj/kernel.asm	/^c010ac15:	81 7d b8 ff ff ff bf 	cmpl   $0xbfffffff,-0x48(%ebp)$/;"	l
c010ac1c	obj/kernel.asm	/^c010ac1c:	77 17                	ja     c010ac35 <load_icode+0x4d7>$/;"	l
c010ac1e	obj/kernel.asm	/^c010ac1e:	ff 75 b8             	pushl  -0x48(%ebp)$/;"	l
c010ac21	obj/kernel.asm	/^c010ac21:	68 e8 f0 10 c0       	push   $0xc010f0e8$/;"	l
c010ac26	obj/kernel.asm	/^c010ac26:	68 8f 02 00 00       	push   $0x28f$/;"	l
c010ac2b	obj/kernel.asm	/^c010ac2b:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010ac30	obj/kernel.asm	/^c010ac30:	e8 aa 57 ff ff       	call   c01003df <__panic>$/;"	l
c010ac35	obj/kernel.asm	/^c010ac35:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
c010ac38	obj/kernel.asm	/^c010ac38:	81 c2 00 00 00 40    	add    $0x40000000,%edx$/;"	l
c010ac3e	obj/kernel.asm	/^c010ac3e:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010ac41	obj/kernel.asm	/^c010ac41:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010ac44	obj/kernel.asm	/^c010ac44:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010ac47	obj/kernel.asm	/^c010ac47:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c010ac4a	obj/kernel.asm	/^c010ac4a:	81 7d b4 ff ff ff bf 	cmpl   $0xbfffffff,-0x4c(%ebp)$/;"	l
c010ac51	obj/kernel.asm	/^c010ac51:	77 17                	ja     c010ac6a <load_icode+0x50c>$/;"	l
c010ac53	obj/kernel.asm	/^c010ac53:	ff 75 b4             	pushl  -0x4c(%ebp)$/;"	l
c010ac56	obj/kernel.asm	/^c010ac56:	68 e8 f0 10 c0       	push   $0xc010f0e8$/;"	l
c010ac5b	obj/kernel.asm	/^c010ac5b:	68 90 02 00 00       	push   $0x290$/;"	l
c010ac60	obj/kernel.asm	/^c010ac60:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010ac65	obj/kernel.asm	/^c010ac65:	e8 75 57 ff ff       	call   c01003df <__panic>$/;"	l
c010ac6a	obj/kernel.asm	/^c010ac6a:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010ac6d	obj/kernel.asm	/^c010ac6d:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010ac72	obj/kernel.asm	/^c010ac72:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c010ac75	obj/kernel.asm	/^c010ac75:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c010ac78	obj/kernel.asm	/^c010ac78:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010ac7b	obj/kernel.asm	/^c010ac7b:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010ac80	obj/kernel.asm	/^c010ac80:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ac83	obj/kernel.asm	/^c010ac83:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c010ac86	obj/kernel.asm	/^c010ac86:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010ac89	obj/kernel.asm	/^c010ac89:	6a 4c                	push   $0x4c$/;"	l
c010ac8b	obj/kernel.asm	/^c010ac8b:	6a 00                	push   $0x0$/;"	l
c010ac8d	obj/kernel.asm	/^c010ac8d:	ff 75 b0             	pushl  -0x50(%ebp)$/;"	l
c010ac90	obj/kernel.asm	/^c010ac90:	e8 63 16 00 00       	call   c010c2f8 <memset>$/;"	l
c010ac95	obj/kernel.asm	/^c010ac95:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ac98	obj/kernel.asm	/^c010ac98:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010ac9b	obj/kernel.asm	/^c010ac9b:	66 c7 40 3c 1b 00    	movw   $0x1b,0x3c(%eax)$/;"	l
c010aca1	obj/kernel.asm	/^c010aca1:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010aca4	obj/kernel.asm	/^c010aca4:	66 c7 40 48 23 00    	movw   $0x23,0x48(%eax)$/;"	l
c010acaa	obj/kernel.asm	/^c010acaa:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010acad	obj/kernel.asm	/^c010acad:	0f b7 50 48          	movzwl 0x48(%eax),%edx$/;"	l
c010acb1	obj/kernel.asm	/^c010acb1:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010acb4	obj/kernel.asm	/^c010acb4:	66 89 50 28          	mov    %dx,0x28(%eax)$/;"	l
c010acb8	obj/kernel.asm	/^c010acb8:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010acbb	obj/kernel.asm	/^c010acbb:	0f b7 50 28          	movzwl 0x28(%eax),%edx$/;"	l
c010acbf	obj/kernel.asm	/^c010acbf:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010acc2	obj/kernel.asm	/^c010acc2:	66 89 50 2c          	mov    %dx,0x2c(%eax)$/;"	l
c010acc6	obj/kernel.asm	/^c010acc6:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010acc9	obj/kernel.asm	/^c010acc9:	c7 40 44 00 00 00 b0 	movl   $0xb0000000,0x44(%eax)$/;"	l
c010acd0	obj/kernel.asm	/^c010acd0:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010acd3	obj/kernel.asm	/^c010acd3:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c010acd6	obj/kernel.asm	/^c010acd6:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010acd9	obj/kernel.asm	/^c010acd9:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
c010acdc	obj/kernel.asm	/^c010acdc:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010acdf	obj/kernel.asm	/^c010acdf:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c010ace2	obj/kernel.asm	/^c010ace2:	80 cc 02             	or     $0x2,%ah$/;"	l
c010ace5	obj/kernel.asm	/^c010ace5:	89 c2                	mov    %eax,%edx$/;"	l
c010ace7	obj/kernel.asm	/^c010ace7:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010acea	obj/kernel.asm	/^c010acea:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010aced	obj/kernel.asm	/^c010aced:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010acf4	obj/kernel.asm	/^c010acf4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010acf7	obj/kernel.asm	/^c010acf7:	eb 2c                	jmp    c010ad25 <load_icode+0x5c7>$/;"	l
c010acf9	obj/kernel.asm	/^c010acf9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010acfc	obj/kernel.asm	/^c010acfc:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c010acff	obj/kernel.asm	/^c010acff:	e8 64 ab ff ff       	call   c0105868 <exit_mmap>$/;"	l
c010ad04	obj/kernel.asm	/^c010ad04:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ad07	obj/kernel.asm	/^c010ad07:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ad0a	obj/kernel.asm	/^c010ad0a:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c010ad0d	obj/kernel.asm	/^c010ad0d:	e8 44 f5 ff ff       	call   c010a256 <put_pgdir>$/;"	l
c010ad12	obj/kernel.asm	/^c010ad12:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ad15	obj/kernel.asm	/^c010ad15:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ad18	obj/kernel.asm	/^c010ad18:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c010ad1b	obj/kernel.asm	/^c010ad1b:	e8 bd a8 ff ff       	call   c01055dd <mm_destroy>$/;"	l
c010ad20	obj/kernel.asm	/^c010ad20:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ad23	obj/kernel.asm	/^c010ad23:	eb cf                	jmp    c010acf4 <load_icode+0x596>$/;"	l
c010ad25	obj/kernel.asm	/^c010ad25:	c9                   	leave  $/;"	l
c010ad26	obj/kernel.asm	/^c010ad26:	c3                   	ret    $/;"	l
c010ad27	obj/kernel.asm	/^c010ad27 <do_execve>:$/;"	l
c010ad27	obj/kernel.asm	/^c010ad27:	55                   	push   %ebp$/;"	l
c010ad28	obj/kernel.asm	/^c010ad28:	89 e5                	mov    %esp,%ebp$/;"	l
c010ad2a	obj/kernel.asm	/^c010ad2a:	83 ec 48             	sub    $0x48,%esp$/;"	l
c010ad2d	obj/kernel.asm	/^c010ad2d:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010ad32	obj/kernel.asm	/^c010ad32:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ad35	obj/kernel.asm	/^c010ad35:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ad38	obj/kernel.asm	/^c010ad38:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad3b	obj/kernel.asm	/^c010ad3b:	6a 00                	push   $0x0$/;"	l
c010ad3d	obj/kernel.asm	/^c010ad3d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010ad40	obj/kernel.asm	/^c010ad40:	50                   	push   %eax$/;"	l
c010ad41	obj/kernel.asm	/^c010ad41:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010ad44	obj/kernel.asm	/^c010ad44:	e8 c5 b4 ff ff       	call   c010620e <user_mem_check>$/;"	l
c010ad49	obj/kernel.asm	/^c010ad49:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ad4c	obj/kernel.asm	/^c010ad4c:	85 c0                	test   %eax,%eax$/;"	l
c010ad4e	obj/kernel.asm	/^c010ad4e:	75 0a                	jne    c010ad5a <do_execve+0x33>$/;"	l
c010ad50	obj/kernel.asm	/^c010ad50:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010ad55	obj/kernel.asm	/^c010ad55:	e9 eb 00 00 00       	jmp    c010ae45 <do_execve+0x11e>$/;"	l
c010ad5a	obj/kernel.asm	/^c010ad5a:	83 7d 0c 32          	cmpl   $0x32,0xc(%ebp)$/;"	l
c010ad5e	obj/kernel.asm	/^c010ad5e:	76 07                	jbe    c010ad67 <do_execve+0x40>$/;"	l
c010ad60	obj/kernel.asm	/^c010ad60:	c7 45 0c 32 00 00 00 	movl   $0x32,0xc(%ebp)$/;"	l
c010ad67	obj/kernel.asm	/^c010ad67:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010ad6a	obj/kernel.asm	/^c010ad6a:	6a 33                	push   $0x33$/;"	l
c010ad6c	obj/kernel.asm	/^c010ad6c:	6a 00                	push   $0x0$/;"	l
c010ad6e	obj/kernel.asm	/^c010ad6e:	8d 45 b9             	lea    -0x47(%ebp),%eax$/;"	l
c010ad71	obj/kernel.asm	/^c010ad71:	50                   	push   %eax$/;"	l
c010ad72	obj/kernel.asm	/^c010ad72:	e8 81 15 00 00       	call   c010c2f8 <memset>$/;"	l
c010ad77	obj/kernel.asm	/^c010ad77:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ad7a	obj/kernel.asm	/^c010ad7a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010ad7d	obj/kernel.asm	/^c010ad7d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010ad80	obj/kernel.asm	/^c010ad80:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ad83	obj/kernel.asm	/^c010ad83:	8d 45 b9             	lea    -0x47(%ebp),%eax$/;"	l
c010ad86	obj/kernel.asm	/^c010ad86:	50                   	push   %eax$/;"	l
c010ad87	obj/kernel.asm	/^c010ad87:	e8 4f 16 00 00       	call   c010c3db <memcpy>$/;"	l
c010ad8c	obj/kernel.asm	/^c010ad8c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ad8f	obj/kernel.asm	/^c010ad8f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ad93	obj/kernel.asm	/^c010ad93:	74 56                	je     c010adeb <do_execve+0xc4>$/;"	l
c010ad95	obj/kernel.asm	/^c010ad95:	a1 94 45 1c c0       	mov    0xc01c4594,%eax$/;"	l
c010ad9a	obj/kernel.asm	/^c010ad9a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ad9d	obj/kernel.asm	/^c010ad9d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ada0	obj/kernel.asm	/^c010ada0:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010ada3	obj/kernel.asm	/^c010ada3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ada6	obj/kernel.asm	/^c010ada6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010ada9	obj/kernel.asm	/^c010ada9:	e8 d3 ec ff ff       	call   c0109a81 <mm_count_dec>$/;"	l
c010adae	obj/kernel.asm	/^c010adae:	83 c4 10             	add    $0x10,%esp$/;"	l
c010adb1	obj/kernel.asm	/^c010adb1:	85 c0                	test   %eax,%eax$/;"	l
c010adb3	obj/kernel.asm	/^c010adb3:	75 2a                	jne    c010addf <do_execve+0xb8>$/;"	l
c010adb5	obj/kernel.asm	/^c010adb5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010adb8	obj/kernel.asm	/^c010adb8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010adbb	obj/kernel.asm	/^c010adbb:	e8 a8 aa ff ff       	call   c0105868 <exit_mmap>$/;"	l
c010adc0	obj/kernel.asm	/^c010adc0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010adc3	obj/kernel.asm	/^c010adc3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010adc6	obj/kernel.asm	/^c010adc6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010adc9	obj/kernel.asm	/^c010adc9:	e8 88 f4 ff ff       	call   c010a256 <put_pgdir>$/;"	l
c010adce	obj/kernel.asm	/^c010adce:	83 c4 10             	add    $0x10,%esp$/;"	l
c010add1	obj/kernel.asm	/^c010add1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010add4	obj/kernel.asm	/^c010add4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010add7	obj/kernel.asm	/^c010add7:	e8 01 a8 ff ff       	call   c01055dd <mm_destroy>$/;"	l
c010addc	obj/kernel.asm	/^c010addc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010addf	obj/kernel.asm	/^c010addf:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010ade4	obj/kernel.asm	/^c010ade4:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010adeb	obj/kernel.asm	/^c010adeb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010adee	obj/kernel.asm	/^c010adee:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010adf1	obj/kernel.asm	/^c010adf1:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010adf4	obj/kernel.asm	/^c010adf4:	e8 65 f9 ff ff       	call   c010a75e <load_icode>$/;"	l
c010adf9	obj/kernel.asm	/^c010adf9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010adfc	obj/kernel.asm	/^c010adfc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010adff	obj/kernel.asm	/^c010adff:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ae03	obj/kernel.asm	/^c010ae03:	74 26                	je     c010ae2b <do_execve+0x104>$/;"	l
c010ae05	obj/kernel.asm	/^c010ae05:	90                   	nop$/;"	l
c010ae06	obj/kernel.asm	/^c010ae06:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ae09	obj/kernel.asm	/^c010ae09:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010ae0c	obj/kernel.asm	/^c010ae0c:	e8 57 f7 ff ff       	call   c010a568 <do_exit>$/;"	l
c010ae11	obj/kernel.asm	/^c010ae11:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ae14	obj/kernel.asm	/^c010ae14:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010ae17	obj/kernel.asm	/^c010ae17:	68 ff f2 10 c0       	push   $0xc010f2ff$/;"	l
c010ae1c	obj/kernel.asm	/^c010ae1c:	68 d4 02 00 00       	push   $0x2d4$/;"	l
c010ae21	obj/kernel.asm	/^c010ae21:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010ae26	obj/kernel.asm	/^c010ae26:	e8 b4 55 ff ff       	call   c01003df <__panic>$/;"	l
c010ae2b	obj/kernel.asm	/^c010ae2b:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010ae30	obj/kernel.asm	/^c010ae30:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ae33	obj/kernel.asm	/^c010ae33:	8d 55 b9             	lea    -0x47(%ebp),%edx$/;"	l
c010ae36	obj/kernel.asm	/^c010ae36:	52                   	push   %edx$/;"	l
c010ae37	obj/kernel.asm	/^c010ae37:	50                   	push   %eax$/;"	l
c010ae38	obj/kernel.asm	/^c010ae38:	e8 3a ee ff ff       	call   c0109c77 <set_proc_name>$/;"	l
c010ae3d	obj/kernel.asm	/^c010ae3d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ae40	obj/kernel.asm	/^c010ae40:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ae45	obj/kernel.asm	/^c010ae45:	c9                   	leave  $/;"	l
c010ae46	obj/kernel.asm	/^c010ae46:	c3                   	ret    $/;"	l
c010ae47	obj/kernel.asm	/^c010ae47 <do_yield>:$/;"	l
c010ae47	obj/kernel.asm	/^c010ae47:	55                   	push   %ebp$/;"	l
c010ae48	obj/kernel.asm	/^c010ae48:	89 e5                	mov    %esp,%ebp$/;"	l
c010ae4a	obj/kernel.asm	/^c010ae4a:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010ae4f	obj/kernel.asm	/^c010ae4f:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010ae56	obj/kernel.asm	/^c010ae56:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ae5b	obj/kernel.asm	/^c010ae5b:	5d                   	pop    %ebp$/;"	l
c010ae5c	obj/kernel.asm	/^c010ae5c:	c3                   	ret    $/;"	l
c010ae5d	obj/kernel.asm	/^c010ae5d <do_wait>:$/;"	l
c010ae5d	obj/kernel.asm	/^c010ae5d:	55                   	push   %ebp$/;"	l
c010ae5e	obj/kernel.asm	/^c010ae5e:	89 e5                	mov    %esp,%ebp$/;"	l
c010ae60	obj/kernel.asm	/^c010ae60:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ae63	obj/kernel.asm	/^c010ae63:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010ae68	obj/kernel.asm	/^c010ae68:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ae6b	obj/kernel.asm	/^c010ae6b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ae6e	obj/kernel.asm	/^c010ae6e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010ae72	obj/kernel.asm	/^c010ae72:	74 21                	je     c010ae95 <do_wait+0x38>$/;"	l
c010ae74	obj/kernel.asm	/^c010ae74:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ae77	obj/kernel.asm	/^c010ae77:	6a 01                	push   $0x1$/;"	l
c010ae79	obj/kernel.asm	/^c010ae79:	6a 04                	push   $0x4$/;"	l
c010ae7b	obj/kernel.asm	/^c010ae7b:	50                   	push   %eax$/;"	l
c010ae7c	obj/kernel.asm	/^c010ae7c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010ae7f	obj/kernel.asm	/^c010ae7f:	e8 8a b3 ff ff       	call   c010620e <user_mem_check>$/;"	l
c010ae84	obj/kernel.asm	/^c010ae84:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ae87	obj/kernel.asm	/^c010ae87:	85 c0                	test   %eax,%eax$/;"	l
c010ae89	obj/kernel.asm	/^c010ae89:	75 0a                	jne    c010ae95 <do_wait+0x38>$/;"	l
c010ae8b	obj/kernel.asm	/^c010ae8b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010ae90	obj/kernel.asm	/^c010ae90:	e9 60 01 00 00       	jmp    c010aff5 <do_wait+0x198>$/;"	l
c010ae95	obj/kernel.asm	/^c010ae95:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010ae9c	obj/kernel.asm	/^c010ae9c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010aea0	obj/kernel.asm	/^c010aea0:	74 3c                	je     c010aede <do_wait+0x81>$/;"	l
c010aea2	obj/kernel.asm	/^c010aea2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010aea5	obj/kernel.asm	/^c010aea5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010aea8	obj/kernel.asm	/^c010aea8:	e8 d1 f1 ff ff       	call   c010a07e <find_proc>$/;"	l
c010aead	obj/kernel.asm	/^c010aead:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aeb0	obj/kernel.asm	/^c010aeb0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aeb3	obj/kernel.asm	/^c010aeb3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010aeb7	obj/kernel.asm	/^c010aeb7:	74 5a                	je     c010af13 <do_wait+0xb6>$/;"	l
c010aeb9	obj/kernel.asm	/^c010aeb9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aebc	obj/kernel.asm	/^c010aebc:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c010aebf	obj/kernel.asm	/^c010aebf:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010aec4	obj/kernel.asm	/^c010aec4:	39 c2                	cmp    %eax,%edx$/;"	l
c010aec6	obj/kernel.asm	/^c010aec6:	75 4b                	jne    c010af13 <do_wait+0xb6>$/;"	l
c010aec8	obj/kernel.asm	/^c010aec8:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010aecf	obj/kernel.asm	/^c010aecf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aed2	obj/kernel.asm	/^c010aed2:	8b 00                	mov    (%eax),%eax$/;"	l
c010aed4	obj/kernel.asm	/^c010aed4:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010aed7	obj/kernel.asm	/^c010aed7:	75 3a                	jne    c010af13 <do_wait+0xb6>$/;"	l
c010aed9	obj/kernel.asm	/^c010aed9:	e9 85 00 00 00       	jmp    c010af63 <do_wait+0x106>$/;"	l
c010aede	obj/kernel.asm	/^c010aede:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010aee3	obj/kernel.asm	/^c010aee3:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010aee9	obj/kernel.asm	/^c010aee9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aeec	obj/kernel.asm	/^c010aeec:	eb 1f                	jmp    c010af0d <do_wait+0xb0>$/;"	l
c010aeee	obj/kernel.asm	/^c010aeee:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010aef5	obj/kernel.asm	/^c010aef5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aef8	obj/kernel.asm	/^c010aef8:	8b 00                	mov    (%eax),%eax$/;"	l
c010aefa	obj/kernel.asm	/^c010aefa:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010aefd	obj/kernel.asm	/^c010aefd:	75 02                	jne    c010af01 <do_wait+0xa4>$/;"	l
c010aeff	obj/kernel.asm	/^c010aeff:	eb 62                	jmp    c010af63 <do_wait+0x106>$/;"	l
c010af01	obj/kernel.asm	/^c010af01:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af04	obj/kernel.asm	/^c010af04:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010af0a	obj/kernel.asm	/^c010af0a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010af0d	obj/kernel.asm	/^c010af0d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010af11	obj/kernel.asm	/^c010af11:	75 db                	jne    c010aeee <do_wait+0x91>$/;"	l
c010af13	obj/kernel.asm	/^c010af13:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010af17	obj/kernel.asm	/^c010af17:	74 40                	je     c010af59 <do_wait+0xfc>$/;"	l
c010af19	obj/kernel.asm	/^c010af19:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010af1e	obj/kernel.asm	/^c010af1e:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010af24	obj/kernel.asm	/^c010af24:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010af29	obj/kernel.asm	/^c010af29:	c7 80 90 00 00 00 01 	movl   $0x80000001,0x90(%eax)$/;"	l
c010af30	obj/kernel.asm	/^c010af30:	00 00 80 $/;"	l
c010af33	obj/kernel.asm	/^c010af33:	e8 64 07 00 00       	call   c010b69c <schedule>$/;"	l
c010af38	obj/kernel.asm	/^c010af38:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010af3d	obj/kernel.asm	/^c010af3d:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010af40	obj/kernel.asm	/^c010af40:	83 e0 01             	and    $0x1,%eax$/;"	l
c010af43	obj/kernel.asm	/^c010af43:	85 c0                	test   %eax,%eax$/;"	l
c010af45	obj/kernel.asm	/^c010af45:	74 0d                	je     c010af54 <do_wait+0xf7>$/;"	l
c010af47	obj/kernel.asm	/^c010af47:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010af4a	obj/kernel.asm	/^c010af4a:	6a f7                	push   $0xfffffff7$/;"	l
c010af4c	obj/kernel.asm	/^c010af4c:	e8 17 f6 ff ff       	call   c010a568 <do_exit>$/;"	l
c010af51	obj/kernel.asm	/^c010af51:	83 c4 10             	add    $0x10,%esp$/;"	l
c010af54	obj/kernel.asm	/^c010af54:	e9 3c ff ff ff       	jmp    c010ae95 <do_wait+0x38>$/;"	l
c010af59	obj/kernel.asm	/^c010af59:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
c010af5e	obj/kernel.asm	/^c010af5e:	e9 92 00 00 00       	jmp    c010aff5 <do_wait+0x198>$/;"	l
c010af63	obj/kernel.asm	/^c010af63:	a1 80 24 1c c0       	mov    0xc01c2480,%eax$/;"	l
c010af68	obj/kernel.asm	/^c010af68:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010af6b	obj/kernel.asm	/^c010af6b:	74 0a                	je     c010af77 <do_wait+0x11a>$/;"	l
c010af6d	obj/kernel.asm	/^c010af6d:	a1 84 24 1c c0       	mov    0xc01c2484,%eax$/;"	l
c010af72	obj/kernel.asm	/^c010af72:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010af75	obj/kernel.asm	/^c010af75:	75 17                	jne    c010af8e <do_wait+0x131>$/;"	l
c010af77	obj/kernel.asm	/^c010af77:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010af7a	obj/kernel.asm	/^c010af7a:	68 12 f3 10 c0       	push   $0xc010f312$/;"	l
c010af7f	obj/kernel.asm	/^c010af7f:	68 0d 03 00 00       	push   $0x30d$/;"	l
c010af84	obj/kernel.asm	/^c010af84:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010af89	obj/kernel.asm	/^c010af89:	e8 51 54 ff ff       	call   c01003df <__panic>$/;"	l
c010af8e	obj/kernel.asm	/^c010af8e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010af92	obj/kernel.asm	/^c010af92:	74 0e                	je     c010afa2 <do_wait+0x145>$/;"	l
c010af94	obj/kernel.asm	/^c010af94:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af97	obj/kernel.asm	/^c010af97:	8b 90 8c 00 00 00    	mov    0x8c(%eax),%edx$/;"	l
c010af9d	obj/kernel.asm	/^c010af9d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010afa0	obj/kernel.asm	/^c010afa0:	89 10                	mov    %edx,(%eax)$/;"	l
c010afa2	obj/kernel.asm	/^c010afa2:	e8 9c e9 ff ff       	call   c0109943 <__intr_save>$/;"	l
c010afa7	obj/kernel.asm	/^c010afa7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010afaa	obj/kernel.asm	/^c010afaa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010afad	obj/kernel.asm	/^c010afad:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010afb0	obj/kernel.asm	/^c010afb0:	e8 94 f0 ff ff       	call   c010a049 <unhash_proc>$/;"	l
c010afb5	obj/kernel.asm	/^c010afb5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010afb8	obj/kernel.asm	/^c010afb8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010afbb	obj/kernel.asm	/^c010afbb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010afbe	obj/kernel.asm	/^c010afbe:	e8 d8 ed ff ff       	call   c0109d9b <remove_links>$/;"	l
c010afc3	obj/kernel.asm	/^c010afc3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010afc6	obj/kernel.asm	/^c010afc6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010afc9	obj/kernel.asm	/^c010afc9:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010afcc	obj/kernel.asm	/^c010afcc:	e8 9c e9 ff ff       	call   c010996d <__intr_restore>$/;"	l
c010afd1	obj/kernel.asm	/^c010afd1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010afd4	obj/kernel.asm	/^c010afd4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010afd7	obj/kernel.asm	/^c010afd7:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010afda	obj/kernel.asm	/^c010afda:	e8 b6 f1 ff ff       	call   c010a195 <put_kstack>$/;"	l
c010afdf	obj/kernel.asm	/^c010afdf:	83 c4 10             	add    $0x10,%esp$/;"	l
c010afe2	obj/kernel.asm	/^c010afe2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010afe5	obj/kernel.asm	/^c010afe5:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010afe8	obj/kernel.asm	/^c010afe8:	e8 17 c4 ff ff       	call   c0107404 <kfree>$/;"	l
c010afed	obj/kernel.asm	/^c010afed:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aff0	obj/kernel.asm	/^c010aff0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010aff5	obj/kernel.asm	/^c010aff5:	c9                   	leave  $/;"	l
c010aff6	obj/kernel.asm	/^c010aff6:	c3                   	ret    $/;"	l
c010aff7	obj/kernel.asm	/^c010aff7 <do_kill>:$/;"	l
c010aff7	obj/kernel.asm	/^c010aff7:	55                   	push   %ebp$/;"	l
c010aff8	obj/kernel.asm	/^c010aff8:	89 e5                	mov    %esp,%ebp$/;"	l
c010affa	obj/kernel.asm	/^c010affa:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010affd	obj/kernel.asm	/^c010affd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b000	obj/kernel.asm	/^c010b000:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b003	obj/kernel.asm	/^c010b003:	e8 76 f0 ff ff       	call   c010a07e <find_proc>$/;"	l
c010b008	obj/kernel.asm	/^c010b008:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b00b	obj/kernel.asm	/^c010b00b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b00e	obj/kernel.asm	/^c010b00e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b012	obj/kernel.asm	/^c010b012:	74 47                	je     c010b05b <do_kill+0x64>$/;"	l
c010b014	obj/kernel.asm	/^c010b014:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b017	obj/kernel.asm	/^c010b017:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010b01a	obj/kernel.asm	/^c010b01a:	83 e0 01             	and    $0x1,%eax$/;"	l
c010b01d	obj/kernel.asm	/^c010b01d:	85 c0                	test   %eax,%eax$/;"	l
c010b01f	obj/kernel.asm	/^c010b01f:	75 33                	jne    c010b054 <do_kill+0x5d>$/;"	l
c010b021	obj/kernel.asm	/^c010b021:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b024	obj/kernel.asm	/^c010b024:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010b027	obj/kernel.asm	/^c010b027:	83 c8 01             	or     $0x1,%eax$/;"	l
c010b02a	obj/kernel.asm	/^c010b02a:	89 c2                	mov    %eax,%edx$/;"	l
c010b02c	obj/kernel.asm	/^c010b02c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b02f	obj/kernel.asm	/^c010b02f:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010b032	obj/kernel.asm	/^c010b032:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b035	obj/kernel.asm	/^c010b035:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010b03b	obj/kernel.asm	/^c010b03b:	85 c0                	test   %eax,%eax$/;"	l
c010b03d	obj/kernel.asm	/^c010b03d:	79 0e                	jns    c010b04d <do_kill+0x56>$/;"	l
c010b03f	obj/kernel.asm	/^c010b03f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b042	obj/kernel.asm	/^c010b042:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010b045	obj/kernel.asm	/^c010b045:	e8 c3 05 00 00       	call   c010b60d <wakeup_proc>$/;"	l
c010b04a	obj/kernel.asm	/^c010b04a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b04d	obj/kernel.asm	/^c010b04d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b052	obj/kernel.asm	/^c010b052:	eb 0c                	jmp    c010b060 <do_kill+0x69>$/;"	l
c010b054	obj/kernel.asm	/^c010b054:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax$/;"	l
c010b059	obj/kernel.asm	/^c010b059:	eb 05                	jmp    c010b060 <do_kill+0x69>$/;"	l
c010b05b	obj/kernel.asm	/^c010b05b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010b060	obj/kernel.asm	/^c010b060:	c9                   	leave  $/;"	l
c010b061	obj/kernel.asm	/^c010b061:	c3                   	ret    $/;"	l
c010b062	obj/kernel.asm	/^c010b062 <kernel_execve>:$/;"	l
c010b062	obj/kernel.asm	/^c010b062:	55                   	push   %ebp$/;"	l
c010b063	obj/kernel.asm	/^c010b063:	89 e5                	mov    %esp,%ebp$/;"	l
c010b065	obj/kernel.asm	/^c010b065:	57                   	push   %edi$/;"	l
c010b066	obj/kernel.asm	/^c010b066:	56                   	push   %esi$/;"	l
c010b067	obj/kernel.asm	/^c010b067:	53                   	push   %ebx$/;"	l
c010b068	obj/kernel.asm	/^c010b068:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
c010b06b	obj/kernel.asm	/^c010b06b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b06e	obj/kernel.asm	/^c010b06e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b071	obj/kernel.asm	/^c010b071:	e8 51 0f 00 00       	call   c010bfc7 <strlen>$/;"	l
c010b076	obj/kernel.asm	/^c010b076:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b079	obj/kernel.asm	/^c010b079:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b07c	obj/kernel.asm	/^c010b07c:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
c010b081	obj/kernel.asm	/^c010b081:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b084	obj/kernel.asm	/^c010b084:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
c010b087	obj/kernel.asm	/^c010b087:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
c010b08a	obj/kernel.asm	/^c010b08a:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
c010b08d	obj/kernel.asm	/^c010b08d:	89 f7                	mov    %esi,%edi$/;"	l
c010b08f	obj/kernel.asm	/^c010b08f:	cd 80                	int    $0x80$/;"	l
c010b091	obj/kernel.asm	/^c010b091:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b094	obj/kernel.asm	/^c010b094:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b097	obj/kernel.asm	/^c010b097:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
c010b09a	obj/kernel.asm	/^c010b09a:	5b                   	pop    %ebx$/;"	l
c010b09b	obj/kernel.asm	/^c010b09b:	5e                   	pop    %esi$/;"	l
c010b09c	obj/kernel.asm	/^c010b09c:	5f                   	pop    %edi$/;"	l
c010b09d	obj/kernel.asm	/^c010b09d:	5d                   	pop    %ebp$/;"	l
c010b09e	obj/kernel.asm	/^c010b09e:	c3                   	ret    $/;"	l
c010b09f	obj/kernel.asm	/^c010b09f <user_main>:$/;"	l
c010b09f	obj/kernel.asm	/^c010b09f:	55                   	push   %ebp$/;"	l
c010b0a0	obj/kernel.asm	/^c010b0a0:	89 e5                	mov    %esp,%ebp$/;"	l
c010b0a2	obj/kernel.asm	/^c010b0a2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b0a5	obj/kernel.asm	/^c010b0a5:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010b0aa	obj/kernel.asm	/^c010b0aa:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b0ad	obj/kernel.asm	/^c010b0ad:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b0b0	obj/kernel.asm	/^c010b0b0:	68 2e f3 10 c0       	push   $0xc010f32e$/;"	l
c010b0b5	obj/kernel.asm	/^c010b0b5:	50                   	push   %eax$/;"	l
c010b0b6	obj/kernel.asm	/^c010b0b6:	68 38 f3 10 c0       	push   $0xc010f338$/;"	l
c010b0bb	obj/kernel.asm	/^c010b0bb:	e8 ba 51 ff ff       	call   c010027a <cprintf>$/;"	l
c010b0c0	obj/kernel.asm	/^c010b0c0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b0c3	obj/kernel.asm	/^c010b0c3:	b8 e8 79 00 00       	mov    $0x79e8,%eax$/;"	l
c010b0c8	obj/kernel.asm	/^c010b0c8:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b0cb	obj/kernel.asm	/^c010b0cb:	50                   	push   %eax$/;"	l
c010b0cc	obj/kernel.asm	/^c010b0cc:	68 6c da 16 c0       	push   $0xc016da6c$/;"	l
c010b0d1	obj/kernel.asm	/^c010b0d1:	68 2e f3 10 c0       	push   $0xc010f32e$/;"	l
c010b0d6	obj/kernel.asm	/^c010b0d6:	e8 87 ff ff ff       	call   c010b062 <kernel_execve>$/;"	l
c010b0db	obj/kernel.asm	/^c010b0db:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b0de	obj/kernel.asm	/^c010b0de:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b0e1	obj/kernel.asm	/^c010b0e1:	68 5f f3 10 c0       	push   $0xc010f35f$/;"	l
c010b0e6	obj/kernel.asm	/^c010b0e6:	68 56 03 00 00       	push   $0x356$/;"	l
c010b0eb	obj/kernel.asm	/^c010b0eb:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010b0f0	obj/kernel.asm	/^c010b0f0:	e8 ea 52 ff ff       	call   c01003df <__panic>$/;"	l
c010b0f5	obj/kernel.asm	/^c010b0f5 <init_main>:$/;"	l
c010b0f5	obj/kernel.asm	/^c010b0f5:	55                   	push   %ebp$/;"	l
c010b0f6	obj/kernel.asm	/^c010b0f6:	89 e5                	mov    %esp,%ebp$/;"	l
c010b0f8	obj/kernel.asm	/^c010b0f8:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b0fb	obj/kernel.asm	/^c010b0fb:	e8 fe 88 ff ff       	call   c01039fe <nr_free_pages>$/;"	l
c010b100	obj/kernel.asm	/^c010b100:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b103	obj/kernel.asm	/^c010b103:	e8 c7 c1 ff ff       	call   c01072cf <kallocated>$/;"	l
c010b108	obj/kernel.asm	/^c010b108:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b10b	obj/kernel.asm	/^c010b10b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b10e	obj/kernel.asm	/^c010b10e:	6a 00                	push   $0x0$/;"	l
c010b110	obj/kernel.asm	/^c010b110:	6a 00                	push   $0x0$/;"	l
c010b112	obj/kernel.asm	/^c010b112:	68 9f b0 10 c0       	push   $0xc010b09f$/;"	l
c010b117	obj/kernel.asm	/^c010b117:	e8 d4 ef ff ff       	call   c010a0f0 <kernel_thread>$/;"	l
c010b11c	obj/kernel.asm	/^c010b11c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b11f	obj/kernel.asm	/^c010b11f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b122	obj/kernel.asm	/^c010b122:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010b126	obj/kernel.asm	/^c010b126:	7f 17                	jg     c010b13f <init_main+0x4a>$/;"	l
c010b128	obj/kernel.asm	/^c010b128:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b12b	obj/kernel.asm	/^c010b12b:	68 79 f3 10 c0       	push   $0xc010f379$/;"	l
c010b130	obj/kernel.asm	/^c010b130:	68 61 03 00 00       	push   $0x361$/;"	l
c010b135	obj/kernel.asm	/^c010b135:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010b13a	obj/kernel.asm	/^c010b13a:	e8 a0 52 ff ff       	call   c01003df <__panic>$/;"	l
c010b13f	obj/kernel.asm	/^c010b13f:	e8 aa dc ff ff       	call   c0108dee <check_sync>$/;"	l
c010b144	obj/kernel.asm	/^c010b144:	eb 05                	jmp    c010b14b <init_main+0x56>$/;"	l
c010b146	obj/kernel.asm	/^c010b146:	e8 51 05 00 00       	call   c010b69c <schedule>$/;"	l
c010b14b	obj/kernel.asm	/^c010b14b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b14e	obj/kernel.asm	/^c010b14e:	6a 00                	push   $0x0$/;"	l
c010b150	obj/kernel.asm	/^c010b150:	6a 00                	push   $0x0$/;"	l
c010b152	obj/kernel.asm	/^c010b152:	e8 06 fd ff ff       	call   c010ae5d <do_wait>$/;"	l
c010b157	obj/kernel.asm	/^c010b157:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b15a	obj/kernel.asm	/^c010b15a:	85 c0                	test   %eax,%eax$/;"	l
c010b15c	obj/kernel.asm	/^c010b15c:	74 e8                	je     c010b146 <init_main+0x51>$/;"	l
c010b15e	obj/kernel.asm	/^c010b15e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b161	obj/kernel.asm	/^c010b161:	68 94 f3 10 c0       	push   $0xc010f394$/;"	l
c010b166	obj/kernel.asm	/^c010b166:	e8 0f 51 ff ff       	call   c010027a <cprintf>$/;"	l
c010b16b	obj/kernel.asm	/^c010b16b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b16e	obj/kernel.asm	/^c010b16e:	a1 84 24 1c c0       	mov    0xc01c2484,%eax$/;"	l
c010b173	obj/kernel.asm	/^c010b173:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010b179	obj/kernel.asm	/^c010b179:	85 c0                	test   %eax,%eax$/;"	l
c010b17b	obj/kernel.asm	/^c010b17b:	75 1e                	jne    c010b19b <init_main+0xa6>$/;"	l
c010b17d	obj/kernel.asm	/^c010b17d:	a1 84 24 1c c0       	mov    0xc01c2484,%eax$/;"	l
c010b182	obj/kernel.asm	/^c010b182:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax$/;"	l
c010b188	obj/kernel.asm	/^c010b188:	85 c0                	test   %eax,%eax$/;"	l
c010b18a	obj/kernel.asm	/^c010b18a:	75 0f                	jne    c010b19b <init_main+0xa6>$/;"	l
c010b18c	obj/kernel.asm	/^c010b18c:	a1 84 24 1c c0       	mov    0xc01c2484,%eax$/;"	l
c010b191	obj/kernel.asm	/^c010b191:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010b197	obj/kernel.asm	/^c010b197:	85 c0                	test   %eax,%eax$/;"	l
c010b199	obj/kernel.asm	/^c010b199:	74 19                	je     c010b1b4 <init_main+0xbf>$/;"	l
c010b19b	obj/kernel.asm	/^c010b19b:	68 b8 f3 10 c0       	push   $0xc010f3b8$/;"	l
c010b1a0	obj/kernel.asm	/^c010b1a0:	68 d9 f1 10 c0       	push   $0xc010f1d9$/;"	l
c010b1a5	obj/kernel.asm	/^c010b1a5:	68 6b 03 00 00       	push   $0x36b$/;"	l
c010b1aa	obj/kernel.asm	/^c010b1aa:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010b1af	obj/kernel.asm	/^c010b1af:	e8 2b 52 ff ff       	call   c01003df <__panic>$/;"	l
c010b1b4	obj/kernel.asm	/^c010b1b4:	a1 c0 44 1c c0       	mov    0xc01c44c0,%eax$/;"	l
c010b1b9	obj/kernel.asm	/^c010b1b9:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010b1bc	obj/kernel.asm	/^c010b1bc:	74 19                	je     c010b1d7 <init_main+0xe2>$/;"	l
c010b1be	obj/kernel.asm	/^c010b1be:	68 03 f4 10 c0       	push   $0xc010f403$/;"	l
c010b1c3	obj/kernel.asm	/^c010b1c3:	68 d9 f1 10 c0       	push   $0xc010f1d9$/;"	l
c010b1c8	obj/kernel.asm	/^c010b1c8:	68 6c 03 00 00       	push   $0x36c$/;"	l
c010b1cd	obj/kernel.asm	/^c010b1cd:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010b1d2	obj/kernel.asm	/^c010b1d2:	e8 08 52 ff ff       	call   c01003df <__panic>$/;"	l
c010b1d7	obj/kernel.asm	/^c010b1d7:	c7 45 e8 5c 47 1c c0 	movl   $0xc01c475c,-0x18(%ebp)$/;"	l
c010b1de	obj/kernel.asm	/^c010b1de:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b1e1	obj/kernel.asm	/^c010b1e1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b1e4	obj/kernel.asm	/^c010b1e4:	8b 15 84 24 1c c0    	mov    0xc01c2484,%edx$/;"	l
c010b1ea	obj/kernel.asm	/^c010b1ea:	83 c2 7c             	add    $0x7c,%edx$/;"	l
c010b1ed	obj/kernel.asm	/^c010b1ed:	39 d0                	cmp    %edx,%eax$/;"	l
c010b1ef	obj/kernel.asm	/^c010b1ef:	74 19                	je     c010b20a <init_main+0x115>$/;"	l
c010b1f1	obj/kernel.asm	/^c010b1f1:	68 14 f4 10 c0       	push   $0xc010f414$/;"	l
c010b1f6	obj/kernel.asm	/^c010b1f6:	68 d9 f1 10 c0       	push   $0xc010f1d9$/;"	l
c010b1fb	obj/kernel.asm	/^c010b1fb:	68 6d 03 00 00       	push   $0x36d$/;"	l
c010b200	obj/kernel.asm	/^c010b200:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010b205	obj/kernel.asm	/^c010b205:	e8 d5 51 ff ff       	call   c01003df <__panic>$/;"	l
c010b20a	obj/kernel.asm	/^c010b20a:	c7 45 e4 5c 47 1c c0 	movl   $0xc01c475c,-0x1c(%ebp)$/;"	l
c010b211	obj/kernel.asm	/^c010b211:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b214	obj/kernel.asm	/^c010b214:	8b 00                	mov    (%eax),%eax$/;"	l
c010b216	obj/kernel.asm	/^c010b216:	8b 15 84 24 1c c0    	mov    0xc01c2484,%edx$/;"	l
c010b21c	obj/kernel.asm	/^c010b21c:	83 c2 7c             	add    $0x7c,%edx$/;"	l
c010b21f	obj/kernel.asm	/^c010b21f:	39 d0                	cmp    %edx,%eax$/;"	l
c010b221	obj/kernel.asm	/^c010b221:	74 19                	je     c010b23c <init_main+0x147>$/;"	l
c010b223	obj/kernel.asm	/^c010b223:	68 44 f4 10 c0       	push   $0xc010f444$/;"	l
c010b228	obj/kernel.asm	/^c010b228:	68 d9 f1 10 c0       	push   $0xc010f1d9$/;"	l
c010b22d	obj/kernel.asm	/^c010b22d:	68 6e 03 00 00       	push   $0x36e$/;"	l
c010b232	obj/kernel.asm	/^c010b232:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010b237	obj/kernel.asm	/^c010b237:	e8 a3 51 ff ff       	call   c01003df <__panic>$/;"	l
c010b23c	obj/kernel.asm	/^c010b23c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b23f	obj/kernel.asm	/^c010b23f:	68 74 f4 10 c0       	push   $0xc010f474$/;"	l
c010b244	obj/kernel.asm	/^c010b244:	e8 31 50 ff ff       	call   c010027a <cprintf>$/;"	l
c010b249	obj/kernel.asm	/^c010b249:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b24c	obj/kernel.asm	/^c010b24c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b251	obj/kernel.asm	/^c010b251:	c9                   	leave  $/;"	l
c010b252	obj/kernel.asm	/^c010b252:	c3                   	ret    $/;"	l
c010b253	obj/kernel.asm	/^c010b253 <proc_init>:$/;"	l
c010b253	obj/kernel.asm	/^c010b253:	55                   	push   %ebp$/;"	l
c010b254	obj/kernel.asm	/^c010b254:	89 e5                	mov    %esp,%ebp$/;"	l
c010b256	obj/kernel.asm	/^c010b256:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b259	obj/kernel.asm	/^c010b259:	c7 45 ec 5c 47 1c c0 	movl   $0xc01c475c,-0x14(%ebp)$/;"	l
c010b260	obj/kernel.asm	/^c010b260:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b263	obj/kernel.asm	/^c010b263:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010b266	obj/kernel.asm	/^c010b266:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b269	obj/kernel.asm	/^c010b269:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b26c	obj/kernel.asm	/^c010b26c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b26f	obj/kernel.asm	/^c010b26f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b272	obj/kernel.asm	/^c010b272:	89 10                	mov    %edx,(%eax)$/;"	l
c010b274	obj/kernel.asm	/^c010b274:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b27b	obj/kernel.asm	/^c010b27b:	eb 26                	jmp    c010b2a3 <proc_init+0x50>$/;"	l
c010b27d	obj/kernel.asm	/^c010b27d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b280	obj/kernel.asm	/^c010b280:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010b283	obj/kernel.asm	/^c010b283:	05 c0 24 1c c0       	add    $0xc01c24c0,%eax$/;"	l
c010b288	obj/kernel.asm	/^c010b288:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b28b	obj/kernel.asm	/^c010b28b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b28e	obj/kernel.asm	/^c010b28e:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010b291	obj/kernel.asm	/^c010b291:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b294	obj/kernel.asm	/^c010b294:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b297	obj/kernel.asm	/^c010b297:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b29a	obj/kernel.asm	/^c010b29a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b29d	obj/kernel.asm	/^c010b29d:	89 10                	mov    %edx,(%eax)$/;"	l
c010b29f	obj/kernel.asm	/^c010b29f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010b2a3	obj/kernel.asm	/^c010b2a3:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
c010b2aa	obj/kernel.asm	/^c010b2aa:	7e d1                	jle    c010b27d <proc_init+0x2a>$/;"	l
c010b2ac	obj/kernel.asm	/^c010b2ac:	e8 4b e8 ff ff       	call   c0109afc <alloc_proc>$/;"	l
c010b2b1	obj/kernel.asm	/^c010b2b1:	a3 80 24 1c c0       	mov    %eax,0xc01c2480$/;"	l
c010b2b6	obj/kernel.asm	/^c010b2b6:	a1 80 24 1c c0       	mov    0xc01c2480,%eax$/;"	l
c010b2bb	obj/kernel.asm	/^c010b2bb:	85 c0                	test   %eax,%eax$/;"	l
c010b2bd	obj/kernel.asm	/^c010b2bd:	75 17                	jne    c010b2d6 <proc_init+0x83>$/;"	l
c010b2bf	obj/kernel.asm	/^c010b2bf:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b2c2	obj/kernel.asm	/^c010b2c2:	68 8d f4 10 c0       	push   $0xc010f48d$/;"	l
c010b2c7	obj/kernel.asm	/^c010b2c7:	68 80 03 00 00       	push   $0x380$/;"	l
c010b2cc	obj/kernel.asm	/^c010b2cc:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010b2d1	obj/kernel.asm	/^c010b2d1:	e8 09 51 ff ff       	call   c01003df <__panic>$/;"	l
c010b2d6	obj/kernel.asm	/^c010b2d6:	a1 80 24 1c c0       	mov    0xc01c2480,%eax$/;"	l
c010b2db	obj/kernel.asm	/^c010b2db:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c010b2e2	obj/kernel.asm	/^c010b2e2:	a1 80 24 1c c0       	mov    0xc01c2480,%eax$/;"	l
c010b2e7	obj/kernel.asm	/^c010b2e7:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010b2ed	obj/kernel.asm	/^c010b2ed:	a1 80 24 1c c0       	mov    0xc01c2480,%eax$/;"	l
c010b2f2	obj/kernel.asm	/^c010b2f2:	ba 00 e0 12 c0       	mov    $0xc012e000,%edx$/;"	l
c010b2f7	obj/kernel.asm	/^c010b2f7:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010b2fa	obj/kernel.asm	/^c010b2fa:	a1 80 24 1c c0       	mov    0xc01c2480,%eax$/;"	l
c010b2ff	obj/kernel.asm	/^c010b2ff:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010b306	obj/kernel.asm	/^c010b306:	a1 80 24 1c c0       	mov    0xc01c2480,%eax$/;"	l
c010b30b	obj/kernel.asm	/^c010b30b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b30e	obj/kernel.asm	/^c010b30e:	68 a5 f4 10 c0       	push   $0xc010f4a5$/;"	l
c010b313	obj/kernel.asm	/^c010b313:	50                   	push   %eax$/;"	l
c010b314	obj/kernel.asm	/^c010b314:	e8 5e e9 ff ff       	call   c0109c77 <set_proc_name>$/;"	l
c010b319	obj/kernel.asm	/^c010b319:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b31c	obj/kernel.asm	/^c010b31c:	a1 c0 44 1c c0       	mov    0xc01c44c0,%eax$/;"	l
c010b321	obj/kernel.asm	/^c010b321:	83 c0 01             	add    $0x1,%eax$/;"	l
c010b324	obj/kernel.asm	/^c010b324:	a3 c0 44 1c c0       	mov    %eax,0xc01c44c0$/;"	l
c010b329	obj/kernel.asm	/^c010b329:	a1 80 24 1c c0       	mov    0xc01c2480,%eax$/;"	l
c010b32e	obj/kernel.asm	/^c010b32e:	a3 88 24 1c c0       	mov    %eax,0xc01c2488$/;"	l
c010b333	obj/kernel.asm	/^c010b333:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b336	obj/kernel.asm	/^c010b336:	6a 00                	push   $0x0$/;"	l
c010b338	obj/kernel.asm	/^c010b338:	6a 00                	push   $0x0$/;"	l
c010b33a	obj/kernel.asm	/^c010b33a:	68 f5 b0 10 c0       	push   $0xc010b0f5$/;"	l
c010b33f	obj/kernel.asm	/^c010b33f:	e8 ac ed ff ff       	call   c010a0f0 <kernel_thread>$/;"	l
c010b344	obj/kernel.asm	/^c010b344:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b347	obj/kernel.asm	/^c010b347:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b34a	obj/kernel.asm	/^c010b34a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010b34e	obj/kernel.asm	/^c010b34e:	7f 17                	jg     c010b367 <proc_init+0x114>$/;"	l
c010b350	obj/kernel.asm	/^c010b350:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b353	obj/kernel.asm	/^c010b353:	68 aa f4 10 c0       	push   $0xc010f4aa$/;"	l
c010b358	obj/kernel.asm	/^c010b358:	68 8e 03 00 00       	push   $0x38e$/;"	l
c010b35d	obj/kernel.asm	/^c010b35d:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010b362	obj/kernel.asm	/^c010b362:	e8 78 50 ff ff       	call   c01003df <__panic>$/;"	l
c010b367	obj/kernel.asm	/^c010b367:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b36a	obj/kernel.asm	/^c010b36a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010b36d	obj/kernel.asm	/^c010b36d:	e8 0c ed ff ff       	call   c010a07e <find_proc>$/;"	l
c010b372	obj/kernel.asm	/^c010b372:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b375	obj/kernel.asm	/^c010b375:	a3 84 24 1c c0       	mov    %eax,0xc01c2484$/;"	l
c010b37a	obj/kernel.asm	/^c010b37a:	a1 84 24 1c c0       	mov    0xc01c2484,%eax$/;"	l
c010b37f	obj/kernel.asm	/^c010b37f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b382	obj/kernel.asm	/^c010b382:	68 c4 f4 10 c0       	push   $0xc010f4c4$/;"	l
c010b387	obj/kernel.asm	/^c010b387:	50                   	push   %eax$/;"	l
c010b388	obj/kernel.asm	/^c010b388:	e8 ea e8 ff ff       	call   c0109c77 <set_proc_name>$/;"	l
c010b38d	obj/kernel.asm	/^c010b38d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b390	obj/kernel.asm	/^c010b390:	a1 80 24 1c c0       	mov    0xc01c2480,%eax$/;"	l
c010b395	obj/kernel.asm	/^c010b395:	85 c0                	test   %eax,%eax$/;"	l
c010b397	obj/kernel.asm	/^c010b397:	74 0c                	je     c010b3a5 <proc_init+0x152>$/;"	l
c010b399	obj/kernel.asm	/^c010b399:	a1 80 24 1c c0       	mov    0xc01c2480,%eax$/;"	l
c010b39e	obj/kernel.asm	/^c010b39e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b3a1	obj/kernel.asm	/^c010b3a1:	85 c0                	test   %eax,%eax$/;"	l
c010b3a3	obj/kernel.asm	/^c010b3a3:	74 19                	je     c010b3be <proc_init+0x16b>$/;"	l
c010b3a5	obj/kernel.asm	/^c010b3a5:	68 cc f4 10 c0       	push   $0xc010f4cc$/;"	l
c010b3aa	obj/kernel.asm	/^c010b3aa:	68 d9 f1 10 c0       	push   $0xc010f1d9$/;"	l
c010b3af	obj/kernel.asm	/^c010b3af:	68 94 03 00 00       	push   $0x394$/;"	l
c010b3b4	obj/kernel.asm	/^c010b3b4:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010b3b9	obj/kernel.asm	/^c010b3b9:	e8 21 50 ff ff       	call   c01003df <__panic>$/;"	l
c010b3be	obj/kernel.asm	/^c010b3be:	a1 84 24 1c c0       	mov    0xc01c2484,%eax$/;"	l
c010b3c3	obj/kernel.asm	/^c010b3c3:	85 c0                	test   %eax,%eax$/;"	l
c010b3c5	obj/kernel.asm	/^c010b3c5:	74 0d                	je     c010b3d4 <proc_init+0x181>$/;"	l
c010b3c7	obj/kernel.asm	/^c010b3c7:	a1 84 24 1c c0       	mov    0xc01c2484,%eax$/;"	l
c010b3cc	obj/kernel.asm	/^c010b3cc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b3cf	obj/kernel.asm	/^c010b3cf:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010b3d2	obj/kernel.asm	/^c010b3d2:	74 19                	je     c010b3ed <proc_init+0x19a>$/;"	l
c010b3d4	obj/kernel.asm	/^c010b3d4:	68 f4 f4 10 c0       	push   $0xc010f4f4$/;"	l
c010b3d9	obj/kernel.asm	/^c010b3d9:	68 d9 f1 10 c0       	push   $0xc010f1d9$/;"	l
c010b3de	obj/kernel.asm	/^c010b3de:	68 95 03 00 00       	push   $0x395$/;"	l
c010b3e3	obj/kernel.asm	/^c010b3e3:	68 0c f1 10 c0       	push   $0xc010f10c$/;"	l
c010b3e8	obj/kernel.asm	/^c010b3e8:	e8 f2 4f ff ff       	call   c01003df <__panic>$/;"	l
c010b3ed	obj/kernel.asm	/^c010b3ed:	c9                   	leave  $/;"	l
c010b3ee	obj/kernel.asm	/^c010b3ee:	c3                   	ret    $/;"	l
c010b3ef	obj/kernel.asm	/^c010b3ef <cpu_idle>:$/;"	l
c010b3ef	obj/kernel.asm	/^c010b3ef:	55                   	push   %ebp$/;"	l
c010b3f0	obj/kernel.asm	/^c010b3f0:	89 e5                	mov    %esp,%ebp$/;"	l
c010b3f2	obj/kernel.asm	/^c010b3f2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b3f5	obj/kernel.asm	/^c010b3f5:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010b3fa	obj/kernel.asm	/^c010b3fa:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010b3fd	obj/kernel.asm	/^c010b3fd:	85 c0                	test   %eax,%eax$/;"	l
c010b3ff	obj/kernel.asm	/^c010b3ff:	74 05                	je     c010b406 <cpu_idle+0x17>$/;"	l
c010b401	obj/kernel.asm	/^c010b401:	e8 96 02 00 00       	call   c010b69c <schedule>$/;"	l
c010b406	obj/kernel.asm	/^c010b406:	eb ed                	jmp    c010b3f5 <cpu_idle+0x6>$/;"	l
c010b408	obj/kernel.asm	/^c010b408 <lab6_set_priority>:$/;"	l
c010b408	obj/kernel.asm	/^c010b408:	55                   	push   %ebp$/;"	l
c010b409	obj/kernel.asm	/^c010b409:	89 e5                	mov    %esp,%ebp$/;"	l
c010b40b	obj/kernel.asm	/^c010b40b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b40f	obj/kernel.asm	/^c010b40f:	75 11                	jne    c010b422 <lab6_set_priority+0x1a>$/;"	l
c010b411	obj/kernel.asm	/^c010b411:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010b416	obj/kernel.asm	/^c010b416:	c7 80 c0 00 00 00 01 	movl   $0x1,0xc0(%eax)$/;"	l
c010b41d	obj/kernel.asm	/^c010b41d:	00 00 00 $/;"	l
c010b420	obj/kernel.asm	/^c010b420:	eb 0e                	jmp    c010b430 <lab6_set_priority+0x28>$/;"	l
c010b422	obj/kernel.asm	/^c010b422:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010b427	obj/kernel.asm	/^c010b427:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b42a	obj/kernel.asm	/^c010b42a:	89 90 c0 00 00 00    	mov    %edx,0xc0(%eax)$/;"	l
c010b430	obj/kernel.asm	/^c010b430:	5d                   	pop    %ebp$/;"	l
c010b431	obj/kernel.asm	/^c010b431:	c3                   	ret    $/;"	l
c010b432	obj/kernel.asm	/^c010b432 <do_sleep>:$/;"	l
c010b432	obj/kernel.asm	/^c010b432:	55                   	push   %ebp$/;"	l
c010b433	obj/kernel.asm	/^c010b433:	89 e5                	mov    %esp,%ebp$/;"	l
c010b435	obj/kernel.asm	/^c010b435:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b438	obj/kernel.asm	/^c010b438:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b43c	obj/kernel.asm	/^c010b43c:	75 07                	jne    c010b445 <do_sleep+0x13>$/;"	l
c010b43e	obj/kernel.asm	/^c010b43e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b443	obj/kernel.asm	/^c010b443:	eb 72                	jmp    c010b4b7 <do_sleep+0x85>$/;"	l
c010b445	obj/kernel.asm	/^c010b445:	e8 f9 e4 ff ff       	call   c0109943 <__intr_save>$/;"	l
c010b44a	obj/kernel.asm	/^c010b44a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b44d	obj/kernel.asm	/^c010b44d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b450	obj/kernel.asm	/^c010b450:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010b455	obj/kernel.asm	/^c010b455:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b458	obj/kernel.asm	/^c010b458:	52                   	push   %edx$/;"	l
c010b459	obj/kernel.asm	/^c010b459:	50                   	push   %eax$/;"	l
c010b45a	obj/kernel.asm	/^c010b45a:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c010b45d	obj/kernel.asm	/^c010b45d:	50                   	push   %eax$/;"	l
c010b45e	obj/kernel.asm	/^c010b45e:	e8 a7 e4 ff ff       	call   c010990a <timer_init>$/;"	l
c010b463	obj/kernel.asm	/^c010b463:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b466	obj/kernel.asm	/^c010b466:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b469	obj/kernel.asm	/^c010b469:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010b46e	obj/kernel.asm	/^c010b46e:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010b474	obj/kernel.asm	/^c010b474:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010b479	obj/kernel.asm	/^c010b479:	c7 80 90 00 00 00 02 	movl   $0x80000002,0x90(%eax)$/;"	l
c010b480	obj/kernel.asm	/^c010b480:	00 00 80 $/;"	l
c010b483	obj/kernel.asm	/^c010b483:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b486	obj/kernel.asm	/^c010b486:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010b489	obj/kernel.asm	/^c010b489:	e8 a6 02 00 00       	call   c010b734 <add_timer>$/;"	l
c010b48e	obj/kernel.asm	/^c010b48e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b491	obj/kernel.asm	/^c010b491:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b494	obj/kernel.asm	/^c010b494:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010b497	obj/kernel.asm	/^c010b497:	e8 d1 e4 ff ff       	call   c010996d <__intr_restore>$/;"	l
c010b49c	obj/kernel.asm	/^c010b49c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b49f	obj/kernel.asm	/^c010b49f:	e8 f8 01 00 00       	call   c010b69c <schedule>$/;"	l
c010b4a4	obj/kernel.asm	/^c010b4a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b4a7	obj/kernel.asm	/^c010b4a7:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010b4aa	obj/kernel.asm	/^c010b4aa:	e8 aa 03 00 00       	call   c010b859 <del_timer>$/;"	l
c010b4af	obj/kernel.asm	/^c010b4af:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b4b2	obj/kernel.asm	/^c010b4b2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b4b7	obj/kernel.asm	/^c010b4b7:	c9                   	leave  $/;"	l
c010b4b8	obj/kernel.asm	/^c010b4b8:	c3                   	ret    $/;"	l
c010b4b9	obj/kernel.asm	/^c010b4b9 <__intr_save>:$/;"	l
c010b4b9	obj/kernel.asm	/^c010b4b9:	55                   	push   %ebp$/;"	l
c010b4ba	obj/kernel.asm	/^c010b4ba:	89 e5                	mov    %esp,%ebp$/;"	l
c010b4bc	obj/kernel.asm	/^c010b4bc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b4bf	obj/kernel.asm	/^c010b4bf:	9c                   	pushf  $/;"	l
c010b4c0	obj/kernel.asm	/^c010b4c0:	58                   	pop    %eax$/;"	l
c010b4c1	obj/kernel.asm	/^c010b4c1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b4c4	obj/kernel.asm	/^c010b4c4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b4c7	obj/kernel.asm	/^c010b4c7:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010b4cc	obj/kernel.asm	/^c010b4cc:	85 c0                	test   %eax,%eax$/;"	l
c010b4ce	obj/kernel.asm	/^c010b4ce:	74 0c                	je     c010b4dc <__intr_save+0x23>$/;"	l
c010b4d0	obj/kernel.asm	/^c010b4d0:	e8 cd 6b ff ff       	call   c01020a2 <intr_disable>$/;"	l
c010b4d5	obj/kernel.asm	/^c010b4d5:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010b4da	obj/kernel.asm	/^c010b4da:	eb 05                	jmp    c010b4e1 <__intr_save+0x28>$/;"	l
c010b4dc	obj/kernel.asm	/^c010b4dc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b4e1	obj/kernel.asm	/^c010b4e1:	c9                   	leave  $/;"	l
c010b4e2	obj/kernel.asm	/^c010b4e2:	c3                   	ret    $/;"	l
c010b4e3	obj/kernel.asm	/^c010b4e3 <__intr_restore>:$/;"	l
c010b4e3	obj/kernel.asm	/^c010b4e3:	55                   	push   %ebp$/;"	l
c010b4e4	obj/kernel.asm	/^c010b4e4:	89 e5                	mov    %esp,%ebp$/;"	l
c010b4e6	obj/kernel.asm	/^c010b4e6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b4e9	obj/kernel.asm	/^c010b4e9:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b4ed	obj/kernel.asm	/^c010b4ed:	74 05                	je     c010b4f4 <__intr_restore+0x11>$/;"	l
c010b4ef	obj/kernel.asm	/^c010b4ef:	e8 a8 6b ff ff       	call   c010209c <intr_enable>$/;"	l
c010b4f4	obj/kernel.asm	/^c010b4f4:	c9                   	leave  $/;"	l
c010b4f5	obj/kernel.asm	/^c010b4f5:	c3                   	ret    $/;"	l
c010b4f6	obj/kernel.asm	/^c010b4f6 <sched_class_enqueue>:$/;"	l
c010b4f6	obj/kernel.asm	/^c010b4f6:	55                   	push   %ebp$/;"	l
c010b4f7	obj/kernel.asm	/^c010b4f7:	89 e5                	mov    %esp,%ebp$/;"	l
c010b4f9	obj/kernel.asm	/^c010b4f9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b4fc	obj/kernel.asm	/^c010b4fc:	a1 80 24 1c c0       	mov    0xc01c2480,%eax$/;"	l
c010b501	obj/kernel.asm	/^c010b501:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010b504	obj/kernel.asm	/^c010b504:	74 1a                	je     c010b520 <sched_class_enqueue+0x2a>$/;"	l
c010b506	obj/kernel.asm	/^c010b506:	a1 1c 45 1c c0       	mov    0xc01c451c,%eax$/;"	l
c010b50b	obj/kernel.asm	/^c010b50b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010b50e	obj/kernel.asm	/^c010b50e:	8b 15 20 45 1c c0    	mov    0xc01c4520,%edx$/;"	l
c010b514	obj/kernel.asm	/^c010b514:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b517	obj/kernel.asm	/^c010b517:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b51a	obj/kernel.asm	/^c010b51a:	52                   	push   %edx$/;"	l
c010b51b	obj/kernel.asm	/^c010b51b:	ff d0                	call   *%eax$/;"	l
c010b51d	obj/kernel.asm	/^c010b51d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b520	obj/kernel.asm	/^c010b520:	c9                   	leave  $/;"	l
c010b521	obj/kernel.asm	/^c010b521:	c3                   	ret    $/;"	l
c010b522	obj/kernel.asm	/^c010b522 <sched_class_dequeue>:$/;"	l
c010b522	obj/kernel.asm	/^c010b522:	55                   	push   %ebp$/;"	l
c010b523	obj/kernel.asm	/^c010b523:	89 e5                	mov    %esp,%ebp$/;"	l
c010b525	obj/kernel.asm	/^c010b525:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b528	obj/kernel.asm	/^c010b528:	a1 1c 45 1c c0       	mov    0xc01c451c,%eax$/;"	l
c010b52d	obj/kernel.asm	/^c010b52d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010b530	obj/kernel.asm	/^c010b530:	8b 15 20 45 1c c0    	mov    0xc01c4520,%edx$/;"	l
c010b536	obj/kernel.asm	/^c010b536:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b539	obj/kernel.asm	/^c010b539:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b53c	obj/kernel.asm	/^c010b53c:	52                   	push   %edx$/;"	l
c010b53d	obj/kernel.asm	/^c010b53d:	ff d0                	call   *%eax$/;"	l
c010b53f	obj/kernel.asm	/^c010b53f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b542	obj/kernel.asm	/^c010b542:	c9                   	leave  $/;"	l
c010b543	obj/kernel.asm	/^c010b543:	c3                   	ret    $/;"	l
c010b544	obj/kernel.asm	/^c010b544 <sched_class_pick_next>:$/;"	l
c010b544	obj/kernel.asm	/^c010b544:	55                   	push   %ebp$/;"	l
c010b545	obj/kernel.asm	/^c010b545:	89 e5                	mov    %esp,%ebp$/;"	l
c010b547	obj/kernel.asm	/^c010b547:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b54a	obj/kernel.asm	/^c010b54a:	a1 1c 45 1c c0       	mov    0xc01c451c,%eax$/;"	l
c010b54f	obj/kernel.asm	/^c010b54f:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010b552	obj/kernel.asm	/^c010b552:	8b 15 20 45 1c c0    	mov    0xc01c4520,%edx$/;"	l
c010b558	obj/kernel.asm	/^c010b558:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b55b	obj/kernel.asm	/^c010b55b:	52                   	push   %edx$/;"	l
c010b55c	obj/kernel.asm	/^c010b55c:	ff d0                	call   *%eax$/;"	l
c010b55e	obj/kernel.asm	/^c010b55e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b561	obj/kernel.asm	/^c010b561:	c9                   	leave  $/;"	l
c010b562	obj/kernel.asm	/^c010b562:	c3                   	ret    $/;"	l
c010b563	obj/kernel.asm	/^c010b563 <sched_class_proc_tick>:$/;"	l
c010b563	obj/kernel.asm	/^c010b563:	55                   	push   %ebp$/;"	l
c010b564	obj/kernel.asm	/^c010b564:	89 e5                	mov    %esp,%ebp$/;"	l
c010b566	obj/kernel.asm	/^c010b566:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b569	obj/kernel.asm	/^c010b569:	a1 80 24 1c c0       	mov    0xc01c2480,%eax$/;"	l
c010b56e	obj/kernel.asm	/^c010b56e:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010b571	obj/kernel.asm	/^c010b571:	74 1c                	je     c010b58f <sched_class_proc_tick+0x2c>$/;"	l
c010b573	obj/kernel.asm	/^c010b573:	a1 1c 45 1c c0       	mov    0xc01c451c,%eax$/;"	l
c010b578	obj/kernel.asm	/^c010b578:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010b57b	obj/kernel.asm	/^c010b57b:	8b 15 20 45 1c c0    	mov    0xc01c4520,%edx$/;"	l
c010b581	obj/kernel.asm	/^c010b581:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b584	obj/kernel.asm	/^c010b584:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b587	obj/kernel.asm	/^c010b587:	52                   	push   %edx$/;"	l
c010b588	obj/kernel.asm	/^c010b588:	ff d0                	call   *%eax$/;"	l
c010b58a	obj/kernel.asm	/^c010b58a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b58d	obj/kernel.asm	/^c010b58d:	eb 0a                	jmp    c010b599 <sched_class_proc_tick+0x36>$/;"	l
c010b58f	obj/kernel.asm	/^c010b58f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b592	obj/kernel.asm	/^c010b592:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010b599	obj/kernel.asm	/^c010b599:	c9                   	leave  $/;"	l
c010b59a	obj/kernel.asm	/^c010b59a:	c3                   	ret    $/;"	l
c010b59b	obj/kernel.asm	/^c010b59b <sched_init>:$/;"	l
c010b59b	obj/kernel.asm	/^c010b59b:	55                   	push   %ebp$/;"	l
c010b59c	obj/kernel.asm	/^c010b59c:	89 e5                	mov    %esp,%ebp$/;"	l
c010b59e	obj/kernel.asm	/^c010b59e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b5a1	obj/kernel.asm	/^c010b5a1:	c7 45 f4 14 45 1c c0 	movl   $0xc01c4514,-0xc(%ebp)$/;"	l
c010b5a8	obj/kernel.asm	/^c010b5a8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b5ab	obj/kernel.asm	/^c010b5ab:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b5ae	obj/kernel.asm	/^c010b5ae:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b5b1	obj/kernel.asm	/^c010b5b1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b5b4	obj/kernel.asm	/^c010b5b4:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b5b7	obj/kernel.asm	/^c010b5b7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b5ba	obj/kernel.asm	/^c010b5ba:	89 10                	mov    %edx,(%eax)$/;"	l
c010b5bc	obj/kernel.asm	/^c010b5bc:	c7 05 1c 45 1c c0 ec 	movl   $0xc0130aec,0xc01c451c$/;"	l
c010b5c3	obj/kernel.asm	/^c010b5c3:	0a 13 c0 $/;"	l
c010b5c6	obj/kernel.asm	/^c010b5c6:	c7 05 20 45 1c c0 24 	movl   $0xc01c4524,0xc01c4520$/;"	l
c010b5cd	obj/kernel.asm	/^c010b5cd:	45 1c c0 $/;"	l
c010b5d0	obj/kernel.asm	/^c010b5d0:	a1 20 45 1c c0       	mov    0xc01c4520,%eax$/;"	l
c010b5d5	obj/kernel.asm	/^c010b5d5:	c7 40 0c 14 00 00 00 	movl   $0x14,0xc(%eax)$/;"	l
c010b5dc	obj/kernel.asm	/^c010b5dc:	a1 1c 45 1c c0       	mov    0xc01c451c,%eax$/;"	l
c010b5e1	obj/kernel.asm	/^c010b5e1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b5e4	obj/kernel.asm	/^c010b5e4:	8b 15 20 45 1c c0    	mov    0xc01c4520,%edx$/;"	l
c010b5ea	obj/kernel.asm	/^c010b5ea:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b5ed	obj/kernel.asm	/^c010b5ed:	52                   	push   %edx$/;"	l
c010b5ee	obj/kernel.asm	/^c010b5ee:	ff d0                	call   *%eax$/;"	l
c010b5f0	obj/kernel.asm	/^c010b5f0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b5f3	obj/kernel.asm	/^c010b5f3:	a1 1c 45 1c c0       	mov    0xc01c451c,%eax$/;"	l
c010b5f8	obj/kernel.asm	/^c010b5f8:	8b 00                	mov    (%eax),%eax$/;"	l
c010b5fa	obj/kernel.asm	/^c010b5fa:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b5fd	obj/kernel.asm	/^c010b5fd:	50                   	push   %eax$/;"	l
c010b5fe	obj/kernel.asm	/^c010b5fe:	68 1c f5 10 c0       	push   $0xc010f51c$/;"	l
c010b603	obj/kernel.asm	/^c010b603:	e8 72 4c ff ff       	call   c010027a <cprintf>$/;"	l
c010b608	obj/kernel.asm	/^c010b608:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b60b	obj/kernel.asm	/^c010b60b:	c9                   	leave  $/;"	l
c010b60c	obj/kernel.asm	/^c010b60c:	c3                   	ret    $/;"	l
c010b60d	obj/kernel.asm	/^c010b60d <wakeup_proc>:$/;"	l
c010b60d	obj/kernel.asm	/^c010b60d:	55                   	push   %ebp$/;"	l
c010b60e	obj/kernel.asm	/^c010b60e:	89 e5                	mov    %esp,%ebp$/;"	l
c010b610	obj/kernel.asm	/^c010b610:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b613	obj/kernel.asm	/^c010b613:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b616	obj/kernel.asm	/^c010b616:	8b 00                	mov    (%eax),%eax$/;"	l
c010b618	obj/kernel.asm	/^c010b618:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010b61b	obj/kernel.asm	/^c010b61b:	75 16                	jne    c010b633 <wakeup_proc+0x26>$/;"	l
c010b61d	obj/kernel.asm	/^c010b61d:	68 2d f5 10 c0       	push   $0xc010f52d$/;"	l
c010b622	obj/kernel.asm	/^c010b622:	68 48 f5 10 c0       	push   $0xc010f548$/;"	l
c010b627	obj/kernel.asm	/^c010b627:	6a 3c                	push   $0x3c$/;"	l
c010b629	obj/kernel.asm	/^c010b629:	68 5d f5 10 c0       	push   $0xc010f55d$/;"	l
c010b62e	obj/kernel.asm	/^c010b62e:	e8 ac 4d ff ff       	call   c01003df <__panic>$/;"	l
c010b633	obj/kernel.asm	/^c010b633:	e8 81 fe ff ff       	call   c010b4b9 <__intr_save>$/;"	l
c010b638	obj/kernel.asm	/^c010b638:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b63b	obj/kernel.asm	/^c010b63b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b63e	obj/kernel.asm	/^c010b63e:	8b 00                	mov    (%eax),%eax$/;"	l
c010b640	obj/kernel.asm	/^c010b640:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010b643	obj/kernel.asm	/^c010b643:	74 30                	je     c010b675 <wakeup_proc+0x68>$/;"	l
c010b645	obj/kernel.asm	/^c010b645:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b648	obj/kernel.asm	/^c010b648:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010b64e	obj/kernel.asm	/^c010b64e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b651	obj/kernel.asm	/^c010b651:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%eax)$/;"	l
c010b658	obj/kernel.asm	/^c010b658:	00 00 00 $/;"	l
c010b65b	obj/kernel.asm	/^c010b65b:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010b660	obj/kernel.asm	/^c010b660:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010b663	obj/kernel.asm	/^c010b663:	74 27                	je     c010b68c <wakeup_proc+0x7f>$/;"	l
c010b665	obj/kernel.asm	/^c010b665:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b668	obj/kernel.asm	/^c010b668:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b66b	obj/kernel.asm	/^c010b66b:	e8 86 fe ff ff       	call   c010b4f6 <sched_class_enqueue>$/;"	l
c010b670	obj/kernel.asm	/^c010b670:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b673	obj/kernel.asm	/^c010b673:	eb 17                	jmp    c010b68c <wakeup_proc+0x7f>$/;"	l
c010b675	obj/kernel.asm	/^c010b675:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b678	obj/kernel.asm	/^c010b678:	68 73 f5 10 c0       	push   $0xc010f573$/;"	l
c010b67d	obj/kernel.asm	/^c010b67d:	6a 48                	push   $0x48$/;"	l
c010b67f	obj/kernel.asm	/^c010b67f:	68 5d f5 10 c0       	push   $0xc010f55d$/;"	l
c010b684	obj/kernel.asm	/^c010b684:	e8 c3 4d ff ff       	call   c010044c <__warn>$/;"	l
c010b689	obj/kernel.asm	/^c010b689:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b68c	obj/kernel.asm	/^c010b68c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b68f	obj/kernel.asm	/^c010b68f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010b692	obj/kernel.asm	/^c010b692:	e8 4c fe ff ff       	call   c010b4e3 <__intr_restore>$/;"	l
c010b697	obj/kernel.asm	/^c010b697:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b69a	obj/kernel.asm	/^c010b69a:	c9                   	leave  $/;"	l
c010b69b	obj/kernel.asm	/^c010b69b:	c3                   	ret    $/;"	l
c010b69c	obj/kernel.asm	/^c010b69c <schedule>:$/;"	l
c010b69c	obj/kernel.asm	/^c010b69c:	55                   	push   %ebp$/;"	l
c010b69d	obj/kernel.asm	/^c010b69d:	89 e5                	mov    %esp,%ebp$/;"	l
c010b69f	obj/kernel.asm	/^c010b69f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b6a2	obj/kernel.asm	/^c010b6a2:	e8 12 fe ff ff       	call   c010b4b9 <__intr_save>$/;"	l
c010b6a7	obj/kernel.asm	/^c010b6a7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b6aa	obj/kernel.asm	/^c010b6aa:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010b6af	obj/kernel.asm	/^c010b6af:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010b6b6	obj/kernel.asm	/^c010b6b6:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010b6bb	obj/kernel.asm	/^c010b6bb:	8b 00                	mov    (%eax),%eax$/;"	l
c010b6bd	obj/kernel.asm	/^c010b6bd:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010b6c0	obj/kernel.asm	/^c010b6c0:	75 11                	jne    c010b6d3 <schedule+0x37>$/;"	l
c010b6c2	obj/kernel.asm	/^c010b6c2:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010b6c7	obj/kernel.asm	/^c010b6c7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b6ca	obj/kernel.asm	/^c010b6ca:	50                   	push   %eax$/;"	l
c010b6cb	obj/kernel.asm	/^c010b6cb:	e8 26 fe ff ff       	call   c010b4f6 <sched_class_enqueue>$/;"	l
c010b6d0	obj/kernel.asm	/^c010b6d0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b6d3	obj/kernel.asm	/^c010b6d3:	e8 6c fe ff ff       	call   c010b544 <sched_class_pick_next>$/;"	l
c010b6d8	obj/kernel.asm	/^c010b6d8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b6db	obj/kernel.asm	/^c010b6db:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b6df	obj/kernel.asm	/^c010b6df:	74 0e                	je     c010b6ef <schedule+0x53>$/;"	l
c010b6e1	obj/kernel.asm	/^c010b6e1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b6e4	obj/kernel.asm	/^c010b6e4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010b6e7	obj/kernel.asm	/^c010b6e7:	e8 36 fe ff ff       	call   c010b522 <sched_class_dequeue>$/;"	l
c010b6ec	obj/kernel.asm	/^c010b6ec:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b6ef	obj/kernel.asm	/^c010b6ef:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b6f3	obj/kernel.asm	/^c010b6f3:	75 08                	jne    c010b6fd <schedule+0x61>$/;"	l
c010b6f5	obj/kernel.asm	/^c010b6f5:	a1 80 24 1c c0       	mov    0xc01c2480,%eax$/;"	l
c010b6fa	obj/kernel.asm	/^c010b6fa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b6fd	obj/kernel.asm	/^c010b6fd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b700	obj/kernel.asm	/^c010b700:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010b703	obj/kernel.asm	/^c010b703:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010b706	obj/kernel.asm	/^c010b706:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b709	obj/kernel.asm	/^c010b709:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010b70c	obj/kernel.asm	/^c010b70c:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010b711	obj/kernel.asm	/^c010b711:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010b714	obj/kernel.asm	/^c010b714:	74 0e                	je     c010b724 <schedule+0x88>$/;"	l
c010b716	obj/kernel.asm	/^c010b716:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b719	obj/kernel.asm	/^c010b719:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010b71c	obj/kernel.asm	/^c010b71c:	e8 13 e8 ff ff       	call   c0109f34 <proc_run>$/;"	l
c010b721	obj/kernel.asm	/^c010b721:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b724	obj/kernel.asm	/^c010b724:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b727	obj/kernel.asm	/^c010b727:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010b72a	obj/kernel.asm	/^c010b72a:	e8 b4 fd ff ff       	call   c010b4e3 <__intr_restore>$/;"	l
c010b72f	obj/kernel.asm	/^c010b72f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b732	obj/kernel.asm	/^c010b732:	c9                   	leave  $/;"	l
c010b733	obj/kernel.asm	/^c010b733:	c3                   	ret    $/;"	l
c010b734	obj/kernel.asm	/^c010b734 <add_timer>:$/;"	l
c010b734	obj/kernel.asm	/^c010b734:	55                   	push   %ebp$/;"	l
c010b735	obj/kernel.asm	/^c010b735:	89 e5                	mov    %esp,%ebp$/;"	l
c010b737	obj/kernel.asm	/^c010b737:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010b73a	obj/kernel.asm	/^c010b73a:	e8 7a fd ff ff       	call   c010b4b9 <__intr_save>$/;"	l
c010b73f	obj/kernel.asm	/^c010b73f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b742	obj/kernel.asm	/^c010b742:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b745	obj/kernel.asm	/^c010b745:	8b 00                	mov    (%eax),%eax$/;"	l
c010b747	obj/kernel.asm	/^c010b747:	85 c0                	test   %eax,%eax$/;"	l
c010b749	obj/kernel.asm	/^c010b749:	74 0a                	je     c010b755 <add_timer+0x21>$/;"	l
c010b74b	obj/kernel.asm	/^c010b74b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b74e	obj/kernel.asm	/^c010b74e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b751	obj/kernel.asm	/^c010b751:	85 c0                	test   %eax,%eax$/;"	l
c010b753	obj/kernel.asm	/^c010b753:	75 16                	jne    c010b76b <add_timer+0x37>$/;"	l
c010b755	obj/kernel.asm	/^c010b755:	68 90 f5 10 c0       	push   $0xc010f590$/;"	l
c010b75a	obj/kernel.asm	/^c010b75a:	68 48 f5 10 c0       	push   $0xc010f548$/;"	l
c010b75f	obj/kernel.asm	/^c010b75f:	6a 6e                	push   $0x6e$/;"	l
c010b761	obj/kernel.asm	/^c010b761:	68 5d f5 10 c0       	push   $0xc010f55d$/;"	l
c010b766	obj/kernel.asm	/^c010b766:	e8 74 4c ff ff       	call   c01003df <__panic>$/;"	l
c010b76b	obj/kernel.asm	/^c010b76b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b76e	obj/kernel.asm	/^c010b76e:	83 c0 08             	add    $0x8,%eax$/;"	l
c010b771	obj/kernel.asm	/^c010b771:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b774	obj/kernel.asm	/^c010b774:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b777	obj/kernel.asm	/^c010b777:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b77a	obj/kernel.asm	/^c010b77a:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010b77d	obj/kernel.asm	/^c010b77d:	0f 94 c0             	sete   %al$/;"	l
c010b780	obj/kernel.asm	/^c010b780:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010b783	obj/kernel.asm	/^c010b783:	85 c0                	test   %eax,%eax$/;"	l
c010b785	obj/kernel.asm	/^c010b785:	75 16                	jne    c010b79d <add_timer+0x69>$/;"	l
c010b787	obj/kernel.asm	/^c010b787:	68 bc f5 10 c0       	push   $0xc010f5bc$/;"	l
c010b78c	obj/kernel.asm	/^c010b78c:	68 48 f5 10 c0       	push   $0xc010f548$/;"	l
c010b791	obj/kernel.asm	/^c010b791:	6a 6f                	push   $0x6f$/;"	l
c010b793	obj/kernel.asm	/^c010b793:	68 5d f5 10 c0       	push   $0xc010f55d$/;"	l
c010b798	obj/kernel.asm	/^c010b798:	e8 42 4c ff ff       	call   c01003df <__panic>$/;"	l
c010b79d	obj/kernel.asm	/^c010b79d:	c7 45 e4 14 45 1c c0 	movl   $0xc01c4514,-0x1c(%ebp)$/;"	l
c010b7a4	obj/kernel.asm	/^c010b7a4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b7a7	obj/kernel.asm	/^c010b7a7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b7aa	obj/kernel.asm	/^c010b7aa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b7ad	obj/kernel.asm	/^c010b7ad:	eb 4a                	jmp    c010b7f9 <add_timer+0xc5>$/;"	l
c010b7af	obj/kernel.asm	/^c010b7af:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b7b2	obj/kernel.asm	/^c010b7b2:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010b7b5	obj/kernel.asm	/^c010b7b5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b7b8	obj/kernel.asm	/^c010b7b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b7bb	obj/kernel.asm	/^c010b7bb:	8b 10                	mov    (%eax),%edx$/;"	l
c010b7bd	obj/kernel.asm	/^c010b7bd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b7c0	obj/kernel.asm	/^c010b7c0:	8b 00                	mov    (%eax),%eax$/;"	l
c010b7c2	obj/kernel.asm	/^c010b7c2:	39 c2                	cmp    %eax,%edx$/;"	l
c010b7c4	obj/kernel.asm	/^c010b7c4:	73 13                	jae    c010b7d9 <add_timer+0xa5>$/;"	l
c010b7c6	obj/kernel.asm	/^c010b7c6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b7c9	obj/kernel.asm	/^c010b7c9:	8b 10                	mov    (%eax),%edx$/;"	l
c010b7cb	obj/kernel.asm	/^c010b7cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b7ce	obj/kernel.asm	/^c010b7ce:	8b 00                	mov    (%eax),%eax$/;"	l
c010b7d0	obj/kernel.asm	/^c010b7d0:	29 c2                	sub    %eax,%edx$/;"	l
c010b7d2	obj/kernel.asm	/^c010b7d2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b7d5	obj/kernel.asm	/^c010b7d5:	89 10                	mov    %edx,(%eax)$/;"	l
c010b7d7	obj/kernel.asm	/^c010b7d7:	eb 29                	jmp    c010b802 <add_timer+0xce>$/;"	l
c010b7d9	obj/kernel.asm	/^c010b7d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b7dc	obj/kernel.asm	/^c010b7dc:	8b 10                	mov    (%eax),%edx$/;"	l
c010b7de	obj/kernel.asm	/^c010b7de:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b7e1	obj/kernel.asm	/^c010b7e1:	8b 00                	mov    (%eax),%eax$/;"	l
c010b7e3	obj/kernel.asm	/^c010b7e3:	29 c2                	sub    %eax,%edx$/;"	l
c010b7e5	obj/kernel.asm	/^c010b7e5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b7e8	obj/kernel.asm	/^c010b7e8:	89 10                	mov    %edx,(%eax)$/;"	l
c010b7ea	obj/kernel.asm	/^c010b7ea:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b7ed	obj/kernel.asm	/^c010b7ed:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b7f0	obj/kernel.asm	/^c010b7f0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b7f3	obj/kernel.asm	/^c010b7f3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b7f6	obj/kernel.asm	/^c010b7f6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b7f9	obj/kernel.asm	/^c010b7f9:	81 7d f4 14 45 1c c0 	cmpl   $0xc01c4514,-0xc(%ebp)$/;"	l
c010b800	obj/kernel.asm	/^c010b800:	75 ad                	jne    c010b7af <add_timer+0x7b>$/;"	l
c010b802	obj/kernel.asm	/^c010b802:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b805	obj/kernel.asm	/^c010b805:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
c010b808	obj/kernel.asm	/^c010b808:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b80b	obj/kernel.asm	/^c010b80b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010b80e	obj/kernel.asm	/^c010b80e:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010b811	obj/kernel.asm	/^c010b811:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010b814	obj/kernel.asm	/^c010b814:	8b 00                	mov    (%eax),%eax$/;"	l
c010b816	obj/kernel.asm	/^c010b816:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010b819	obj/kernel.asm	/^c010b819:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010b81c	obj/kernel.asm	/^c010b81c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010b81f	obj/kernel.asm	/^c010b81f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010b822	obj/kernel.asm	/^c010b822:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010b825	obj/kernel.asm	/^c010b825:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010b828	obj/kernel.asm	/^c010b828:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010b82b	obj/kernel.asm	/^c010b82b:	89 10                	mov    %edx,(%eax)$/;"	l
c010b82d	obj/kernel.asm	/^c010b82d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010b830	obj/kernel.asm	/^c010b830:	8b 10                	mov    (%eax),%edx$/;"	l
c010b832	obj/kernel.asm	/^c010b832:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010b835	obj/kernel.asm	/^c010b835:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b838	obj/kernel.asm	/^c010b838:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010b83b	obj/kernel.asm	/^c010b83b:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010b83e	obj/kernel.asm	/^c010b83e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b841	obj/kernel.asm	/^c010b841:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010b844	obj/kernel.asm	/^c010b844:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010b847	obj/kernel.asm	/^c010b847:	89 10                	mov    %edx,(%eax)$/;"	l
c010b849	obj/kernel.asm	/^c010b849:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b84c	obj/kernel.asm	/^c010b84c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010b84f	obj/kernel.asm	/^c010b84f:	e8 8f fc ff ff       	call   c010b4e3 <__intr_restore>$/;"	l
c010b854	obj/kernel.asm	/^c010b854:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b857	obj/kernel.asm	/^c010b857:	c9                   	leave  $/;"	l
c010b858	obj/kernel.asm	/^c010b858:	c3                   	ret    $/;"	l
c010b859	obj/kernel.asm	/^c010b859 <del_timer>:$/;"	l
c010b859	obj/kernel.asm	/^c010b859:	55                   	push   %ebp$/;"	l
c010b85a	obj/kernel.asm	/^c010b85a:	89 e5                	mov    %esp,%ebp$/;"	l
c010b85c	obj/kernel.asm	/^c010b85c:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010b85f	obj/kernel.asm	/^c010b85f:	e8 55 fc ff ff       	call   c010b4b9 <__intr_save>$/;"	l
c010b864	obj/kernel.asm	/^c010b864:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b867	obj/kernel.asm	/^c010b867:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b86a	obj/kernel.asm	/^c010b86a:	83 c0 08             	add    $0x8,%eax$/;"	l
c010b86d	obj/kernel.asm	/^c010b86d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b870	obj/kernel.asm	/^c010b870:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b873	obj/kernel.asm	/^c010b873:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b876	obj/kernel.asm	/^c010b876:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010b879	obj/kernel.asm	/^c010b879:	0f 94 c0             	sete   %al$/;"	l
c010b87c	obj/kernel.asm	/^c010b87c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010b87f	obj/kernel.asm	/^c010b87f:	85 c0                	test   %eax,%eax$/;"	l
c010b881	obj/kernel.asm	/^c010b881:	0f 85 89 00 00 00    	jne    c010b910 <del_timer+0xb7>$/;"	l
c010b887	obj/kernel.asm	/^c010b887:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b88a	obj/kernel.asm	/^c010b88a:	8b 00                	mov    (%eax),%eax$/;"	l
c010b88c	obj/kernel.asm	/^c010b88c:	85 c0                	test   %eax,%eax$/;"	l
c010b88e	obj/kernel.asm	/^c010b88e:	74 35                	je     c010b8c5 <del_timer+0x6c>$/;"	l
c010b890	obj/kernel.asm	/^c010b890:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b893	obj/kernel.asm	/^c010b893:	83 c0 08             	add    $0x8,%eax$/;"	l
c010b896	obj/kernel.asm	/^c010b896:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b899	obj/kernel.asm	/^c010b899:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b89c	obj/kernel.asm	/^c010b89c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b89f	obj/kernel.asm	/^c010b89f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b8a2	obj/kernel.asm	/^c010b8a2:	81 7d f0 14 45 1c c0 	cmpl   $0xc01c4514,-0x10(%ebp)$/;"	l
c010b8a9	obj/kernel.asm	/^c010b8a9:	74 1a                	je     c010b8c5 <del_timer+0x6c>$/;"	l
c010b8ab	obj/kernel.asm	/^c010b8ab:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b8ae	obj/kernel.asm	/^c010b8ae:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010b8b1	obj/kernel.asm	/^c010b8b1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b8b4	obj/kernel.asm	/^c010b8b4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b8b7	obj/kernel.asm	/^c010b8b7:	8b 10                	mov    (%eax),%edx$/;"	l
c010b8b9	obj/kernel.asm	/^c010b8b9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8bc	obj/kernel.asm	/^c010b8bc:	8b 00                	mov    (%eax),%eax$/;"	l
c010b8be	obj/kernel.asm	/^c010b8be:	01 c2                	add    %eax,%edx$/;"	l
c010b8c0	obj/kernel.asm	/^c010b8c0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b8c3	obj/kernel.asm	/^c010b8c3:	89 10                	mov    %edx,(%eax)$/;"	l
c010b8c5	obj/kernel.asm	/^c010b8c5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8c8	obj/kernel.asm	/^c010b8c8:	83 c0 08             	add    $0x8,%eax$/;"	l
c010b8cb	obj/kernel.asm	/^c010b8cb:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b8ce	obj/kernel.asm	/^c010b8ce:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b8d1	obj/kernel.asm	/^c010b8d1:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010b8d4	obj/kernel.asm	/^c010b8d4:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010b8d7	obj/kernel.asm	/^c010b8d7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b8da	obj/kernel.asm	/^c010b8da:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010b8dd	obj/kernel.asm	/^c010b8dd:	8b 12                	mov    (%edx),%edx$/;"	l
c010b8df	obj/kernel.asm	/^c010b8df:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010b8e2	obj/kernel.asm	/^c010b8e2:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010b8e5	obj/kernel.asm	/^c010b8e5:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010b8e8	obj/kernel.asm	/^c010b8e8:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010b8eb	obj/kernel.asm	/^c010b8eb:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b8ee	obj/kernel.asm	/^c010b8ee:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010b8f1	obj/kernel.asm	/^c010b8f1:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010b8f4	obj/kernel.asm	/^c010b8f4:	89 10                	mov    %edx,(%eax)$/;"	l
c010b8f6	obj/kernel.asm	/^c010b8f6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b8f9	obj/kernel.asm	/^c010b8f9:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010b8fc	obj/kernel.asm	/^c010b8fc:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010b8ff	obj/kernel.asm	/^c010b8ff:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010b902	obj/kernel.asm	/^c010b902:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b905	obj/kernel.asm	/^c010b905:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010b908	obj/kernel.asm	/^c010b908:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b90b	obj/kernel.asm	/^c010b90b:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010b90e	obj/kernel.asm	/^c010b90e:	89 10                	mov    %edx,(%eax)$/;"	l
c010b910	obj/kernel.asm	/^c010b910:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b913	obj/kernel.asm	/^c010b913:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010b916	obj/kernel.asm	/^c010b916:	e8 c8 fb ff ff       	call   c010b4e3 <__intr_restore>$/;"	l
c010b91b	obj/kernel.asm	/^c010b91b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b91e	obj/kernel.asm	/^c010b91e:	c9                   	leave  $/;"	l
c010b91f	obj/kernel.asm	/^c010b91f:	c3                   	ret    $/;"	l
c010b920	obj/kernel.asm	/^c010b920 <run_timer_list>:$/;"	l
c010b920	obj/kernel.asm	/^c010b920:	55                   	push   %ebp$/;"	l
c010b921	obj/kernel.asm	/^c010b921:	89 e5                	mov    %esp,%ebp$/;"	l
c010b923	obj/kernel.asm	/^c010b923:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010b926	obj/kernel.asm	/^c010b926:	e8 8e fb ff ff       	call   c010b4b9 <__intr_save>$/;"	l
c010b92b	obj/kernel.asm	/^c010b92b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b92e	obj/kernel.asm	/^c010b92e:	c7 45 e4 14 45 1c c0 	movl   $0xc01c4514,-0x1c(%ebp)$/;"	l
c010b935	obj/kernel.asm	/^c010b935:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b938	obj/kernel.asm	/^c010b938:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b93b	obj/kernel.asm	/^c010b93b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b93e	obj/kernel.asm	/^c010b93e:	81 7d f4 14 45 1c c0 	cmpl   $0xc01c4514,-0xc(%ebp)$/;"	l
c010b945	obj/kernel.asm	/^c010b945:	0f 84 e3 00 00 00    	je     c010ba2e <run_timer_list+0x10e>$/;"	l
c010b94b	obj/kernel.asm	/^c010b94b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b94e	obj/kernel.asm	/^c010b94e:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010b951	obj/kernel.asm	/^c010b951:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b954	obj/kernel.asm	/^c010b954:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b957	obj/kernel.asm	/^c010b957:	8b 00                	mov    (%eax),%eax$/;"	l
c010b959	obj/kernel.asm	/^c010b959:	85 c0                	test   %eax,%eax$/;"	l
c010b95b	obj/kernel.asm	/^c010b95b:	75 19                	jne    c010b976 <run_timer_list+0x56>$/;"	l
c010b95d	obj/kernel.asm	/^c010b95d:	68 dd f5 10 c0       	push   $0xc010f5dd$/;"	l
c010b962	obj/kernel.asm	/^c010b962:	68 48 f5 10 c0       	push   $0xc010f548$/;"	l
c010b967	obj/kernel.asm	/^c010b967:	68 9c 00 00 00       	push   $0x9c$/;"	l
c010b96c	obj/kernel.asm	/^c010b96c:	68 5d f5 10 c0       	push   $0xc010f55d$/;"	l
c010b971	obj/kernel.asm	/^c010b971:	e8 69 4a ff ff       	call   c01003df <__panic>$/;"	l
c010b976	obj/kernel.asm	/^c010b976:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b979	obj/kernel.asm	/^c010b979:	8b 00                	mov    (%eax),%eax$/;"	l
c010b97b	obj/kernel.asm	/^c010b97b:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010b97e	obj/kernel.asm	/^c010b97e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b981	obj/kernel.asm	/^c010b981:	89 10                	mov    %edx,(%eax)$/;"	l
c010b983	obj/kernel.asm	/^c010b983:	e9 99 00 00 00       	jmp    c010ba21 <run_timer_list+0x101>$/;"	l
c010b988	obj/kernel.asm	/^c010b988:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b98b	obj/kernel.asm	/^c010b98b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b98e	obj/kernel.asm	/^c010b98e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b991	obj/kernel.asm	/^c010b991:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b994	obj/kernel.asm	/^c010b994:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b997	obj/kernel.asm	/^c010b997:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b99a	obj/kernel.asm	/^c010b99a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b99d	obj/kernel.asm	/^c010b99d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b9a0	obj/kernel.asm	/^c010b9a0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b9a3	obj/kernel.asm	/^c010b9a3:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010b9a9	obj/kernel.asm	/^c010b9a9:	85 c0                	test   %eax,%eax$/;"	l
c010b9ab	obj/kernel.asm	/^c010b9ab:	74 26                	je     c010b9d3 <run_timer_list+0xb3>$/;"	l
c010b9ad	obj/kernel.asm	/^c010b9ad:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b9b0	obj/kernel.asm	/^c010b9b0:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010b9b6	obj/kernel.asm	/^c010b9b6:	85 c0                	test   %eax,%eax$/;"	l
c010b9b8	obj/kernel.asm	/^c010b9b8:	78 37                	js     c010b9f1 <run_timer_list+0xd1>$/;"	l
c010b9ba	obj/kernel.asm	/^c010b9ba:	68 f4 f5 10 c0       	push   $0xc010f5f4$/;"	l
c010b9bf	obj/kernel.asm	/^c010b9bf:	68 48 f5 10 c0       	push   $0xc010f548$/;"	l
c010b9c4	obj/kernel.asm	/^c010b9c4:	68 a2 00 00 00       	push   $0xa2$/;"	l
c010b9c9	obj/kernel.asm	/^c010b9c9:	68 5d f5 10 c0       	push   $0xc010f55d$/;"	l
c010b9ce	obj/kernel.asm	/^c010b9ce:	e8 0c 4a ff ff       	call   c01003df <__panic>$/;"	l
c010b9d3	obj/kernel.asm	/^c010b9d3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b9d6	obj/kernel.asm	/^c010b9d6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b9d9	obj/kernel.asm	/^c010b9d9:	50                   	push   %eax$/;"	l
c010b9da	obj/kernel.asm	/^c010b9da:	68 18 f6 10 c0       	push   $0xc010f618$/;"	l
c010b9df	obj/kernel.asm	/^c010b9df:	68 a5 00 00 00       	push   $0xa5$/;"	l
c010b9e4	obj/kernel.asm	/^c010b9e4:	68 5d f5 10 c0       	push   $0xc010f55d$/;"	l
c010b9e9	obj/kernel.asm	/^c010b9e9:	e8 5e 4a ff ff       	call   c010044c <__warn>$/;"	l
c010b9ee	obj/kernel.asm	/^c010b9ee:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b9f1	obj/kernel.asm	/^c010b9f1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b9f4	obj/kernel.asm	/^c010b9f4:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010b9f7	obj/kernel.asm	/^c010b9f7:	e8 11 fc ff ff       	call   c010b60d <wakeup_proc>$/;"	l
c010b9fc	obj/kernel.asm	/^c010b9fc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b9ff	obj/kernel.asm	/^c010b9ff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ba02	obj/kernel.asm	/^c010ba02:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010ba05	obj/kernel.asm	/^c010ba05:	e8 4f fe ff ff       	call   c010b859 <del_timer>$/;"	l
c010ba0a	obj/kernel.asm	/^c010ba0a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ba0d	obj/kernel.asm	/^c010ba0d:	81 7d f4 14 45 1c c0 	cmpl   $0xc01c4514,-0xc(%ebp)$/;"	l
c010ba14	obj/kernel.asm	/^c010ba14:	75 02                	jne    c010ba18 <run_timer_list+0xf8>$/;"	l
c010ba16	obj/kernel.asm	/^c010ba16:	eb 16                	jmp    c010ba2e <run_timer_list+0x10e>$/;"	l
c010ba18	obj/kernel.asm	/^c010ba18:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ba1b	obj/kernel.asm	/^c010ba1b:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010ba1e	obj/kernel.asm	/^c010ba1e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ba21	obj/kernel.asm	/^c010ba21:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ba24	obj/kernel.asm	/^c010ba24:	8b 00                	mov    (%eax),%eax$/;"	l
c010ba26	obj/kernel.asm	/^c010ba26:	85 c0                	test   %eax,%eax$/;"	l
c010ba28	obj/kernel.asm	/^c010ba28:	0f 84 5a ff ff ff    	je     c010b988 <run_timer_list+0x68>$/;"	l
c010ba2e	obj/kernel.asm	/^c010ba2e:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010ba33	obj/kernel.asm	/^c010ba33:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ba36	obj/kernel.asm	/^c010ba36:	50                   	push   %eax$/;"	l
c010ba37	obj/kernel.asm	/^c010ba37:	e8 27 fb ff ff       	call   c010b563 <sched_class_proc_tick>$/;"	l
c010ba3c	obj/kernel.asm	/^c010ba3c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ba3f	obj/kernel.asm	/^c010ba3f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ba42	obj/kernel.asm	/^c010ba42:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010ba45	obj/kernel.asm	/^c010ba45:	e8 99 fa ff ff       	call   c010b4e3 <__intr_restore>$/;"	l
c010ba4a	obj/kernel.asm	/^c010ba4a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ba4d	obj/kernel.asm	/^c010ba4d:	c9                   	leave  $/;"	l
c010ba4e	obj/kernel.asm	/^c010ba4e:	c3                   	ret    $/;"	l
c010ba4f	obj/kernel.asm	/^c010ba4f <skew_heap_merge>:$/;"	l
c010ba4f	obj/kernel.asm	/^c010ba4f:	55                   	push   %ebp$/;"	l
c010ba50	obj/kernel.asm	/^c010ba50:	89 e5                	mov    %esp,%ebp$/;"	l
c010ba52	obj/kernel.asm	/^c010ba52:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ba55	obj/kernel.asm	/^c010ba55:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010ba59	obj/kernel.asm	/^c010ba59:	75 08                	jne    c010ba63 <skew_heap_merge+0x14>$/;"	l
c010ba5b	obj/kernel.asm	/^c010ba5b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ba5e	obj/kernel.asm	/^c010ba5e:	e9 b4 00 00 00       	jmp    c010bb17 <skew_heap_merge+0xc8>$/;"	l
c010ba63	obj/kernel.asm	/^c010ba63:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010ba67	obj/kernel.asm	/^c010ba67:	75 08                	jne    c010ba71 <skew_heap_merge+0x22>$/;"	l
c010ba69	obj/kernel.asm	/^c010ba69:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba6c	obj/kernel.asm	/^c010ba6c:	e9 a6 00 00 00       	jmp    c010bb17 <skew_heap_merge+0xc8>$/;"	l
c010ba71	obj/kernel.asm	/^c010ba71:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ba74	obj/kernel.asm	/^c010ba74:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010ba77	obj/kernel.asm	/^c010ba77:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ba7a	obj/kernel.asm	/^c010ba7a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010ba7d	obj/kernel.asm	/^c010ba7d:	ff d0                	call   *%eax$/;"	l
c010ba7f	obj/kernel.asm	/^c010ba7f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ba82	obj/kernel.asm	/^c010ba82:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
c010ba85	obj/kernel.asm	/^c010ba85:	75 49                	jne    c010bad0 <skew_heap_merge+0x81>$/;"	l
c010ba87	obj/kernel.asm	/^c010ba87:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba8a	obj/kernel.asm	/^c010ba8a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ba8d	obj/kernel.asm	/^c010ba8d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ba90	obj/kernel.asm	/^c010ba90:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba93	obj/kernel.asm	/^c010ba93:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010ba96	obj/kernel.asm	/^c010ba96:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010ba99	obj/kernel.asm	/^c010ba99:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010ba9c	obj/kernel.asm	/^c010ba9c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010ba9f	obj/kernel.asm	/^c010ba9f:	50                   	push   %eax$/;"	l
c010baa0	obj/kernel.asm	/^c010baa0:	e8 aa ff ff ff       	call   c010ba4f <skew_heap_merge>$/;"	l
c010baa5	obj/kernel.asm	/^c010baa5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010baa8	obj/kernel.asm	/^c010baa8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010baab	obj/kernel.asm	/^c010baab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010baae	obj/kernel.asm	/^c010baae:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010bab1	obj/kernel.asm	/^c010bab1:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010bab4	obj/kernel.asm	/^c010bab4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bab7	obj/kernel.asm	/^c010bab7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010baba	obj/kernel.asm	/^c010baba:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010babd	obj/kernel.asm	/^c010babd:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010bac1	obj/kernel.asm	/^c010bac1:	74 08                	je     c010bacb <skew_heap_merge+0x7c>$/;"	l
c010bac3	obj/kernel.asm	/^c010bac3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bac6	obj/kernel.asm	/^c010bac6:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010bac9	obj/kernel.asm	/^c010bac9:	89 10                	mov    %edx,(%eax)$/;"	l
c010bacb	obj/kernel.asm	/^c010bacb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bace	obj/kernel.asm	/^c010bace:	eb 47                	jmp    c010bb17 <skew_heap_merge+0xc8>$/;"	l
c010bad0	obj/kernel.asm	/^c010bad0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bad3	obj/kernel.asm	/^c010bad3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010bad6	obj/kernel.asm	/^c010bad6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bad9	obj/kernel.asm	/^c010bad9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010badc	obj/kernel.asm	/^c010badc:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010badf	obj/kernel.asm	/^c010badf:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010bae2	obj/kernel.asm	/^c010bae2:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010bae5	obj/kernel.asm	/^c010bae5:	50                   	push   %eax$/;"	l
c010bae6	obj/kernel.asm	/^c010bae6:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010bae9	obj/kernel.asm	/^c010bae9:	e8 61 ff ff ff       	call   c010ba4f <skew_heap_merge>$/;"	l
c010baee	obj/kernel.asm	/^c010baee:	83 c4 10             	add    $0x10,%esp$/;"	l
c010baf1	obj/kernel.asm	/^c010baf1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010baf4	obj/kernel.asm	/^c010baf4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010baf7	obj/kernel.asm	/^c010baf7:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010bafa	obj/kernel.asm	/^c010bafa:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010bafd	obj/kernel.asm	/^c010bafd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bb00	obj/kernel.asm	/^c010bb00:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010bb03	obj/kernel.asm	/^c010bb03:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010bb06	obj/kernel.asm	/^c010bb06:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010bb0a	obj/kernel.asm	/^c010bb0a:	74 08                	je     c010bb14 <skew_heap_merge+0xc5>$/;"	l
c010bb0c	obj/kernel.asm	/^c010bb0c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bb0f	obj/kernel.asm	/^c010bb0f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010bb12	obj/kernel.asm	/^c010bb12:	89 10                	mov    %edx,(%eax)$/;"	l
c010bb14	obj/kernel.asm	/^c010bb14:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bb17	obj/kernel.asm	/^c010bb17:	c9                   	leave  $/;"	l
c010bb18	obj/kernel.asm	/^c010bb18:	c3                   	ret    $/;"	l
c010bb19	obj/kernel.asm	/^c010bb19 <proc_stride_comp_f>:$/;"	l
c010bb19	obj/kernel.asm	/^c010bb19:	55                   	push   %ebp$/;"	l
c010bb1a	obj/kernel.asm	/^c010bb1a:	89 e5                	mov    %esp,%ebp$/;"	l
c010bb1c	obj/kernel.asm	/^c010bb1c:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010bb1f	obj/kernel.asm	/^c010bb1f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb22	obj/kernel.asm	/^c010bb22:	2d b0 00 00 00       	sub    $0xb0,%eax$/;"	l
c010bb27	obj/kernel.asm	/^c010bb27:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010bb2a	obj/kernel.asm	/^c010bb2a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bb2d	obj/kernel.asm	/^c010bb2d:	2d b0 00 00 00       	sub    $0xb0,%eax$/;"	l
c010bb32	obj/kernel.asm	/^c010bb32:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010bb35	obj/kernel.asm	/^c010bb35:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010bb38	obj/kernel.asm	/^c010bb38:	8b 90 bc 00 00 00    	mov    0xbc(%eax),%edx$/;"	l
c010bb3e	obj/kernel.asm	/^c010bb3e:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010bb41	obj/kernel.asm	/^c010bb41:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax$/;"	l
c010bb47	obj/kernel.asm	/^c010bb47:	29 c2                	sub    %eax,%edx$/;"	l
c010bb49	obj/kernel.asm	/^c010bb49:	89 d0                	mov    %edx,%eax$/;"	l
c010bb4b	obj/kernel.asm	/^c010bb4b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bb4e	obj/kernel.asm	/^c010bb4e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bb52	obj/kernel.asm	/^c010bb52:	7e 07                	jle    c010bb5b <proc_stride_comp_f+0x42>$/;"	l
c010bb54	obj/kernel.asm	/^c010bb54:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010bb59	obj/kernel.asm	/^c010bb59:	eb 12                	jmp    c010bb6d <proc_stride_comp_f+0x54>$/;"	l
c010bb5b	obj/kernel.asm	/^c010bb5b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bb5f	obj/kernel.asm	/^c010bb5f:	75 07                	jne    c010bb68 <proc_stride_comp_f+0x4f>$/;"	l
c010bb61	obj/kernel.asm	/^c010bb61:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010bb66	obj/kernel.asm	/^c010bb66:	eb 05                	jmp    c010bb6d <proc_stride_comp_f+0x54>$/;"	l
c010bb68	obj/kernel.asm	/^c010bb68:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010bb6d	obj/kernel.asm	/^c010bb6d:	c9                   	leave  $/;"	l
c010bb6e	obj/kernel.asm	/^c010bb6e:	c3                   	ret    $/;"	l
c010bb6f	obj/kernel.asm	/^c010bb6f <stride_init>:$/;"	l
c010bb6f	obj/kernel.asm	/^c010bb6f:	55                   	push   %ebp$/;"	l
c010bb70	obj/kernel.asm	/^c010bb70:	89 e5                	mov    %esp,%ebp$/;"	l
c010bb72	obj/kernel.asm	/^c010bb72:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010bb75	obj/kernel.asm	/^c010bb75:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb78	obj/kernel.asm	/^c010bb78:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010bb7b	obj/kernel.asm	/^c010bb7b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010bb7e	obj/kernel.asm	/^c010bb7e:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010bb81	obj/kernel.asm	/^c010bb81:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010bb84	obj/kernel.asm	/^c010bb84:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010bb87	obj/kernel.asm	/^c010bb87:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010bb8a	obj/kernel.asm	/^c010bb8a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010bb8d	obj/kernel.asm	/^c010bb8d:	89 10                	mov    %edx,(%eax)$/;"	l
c010bb8f	obj/kernel.asm	/^c010bb8f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb92	obj/kernel.asm	/^c010bb92:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010bb99	obj/kernel.asm	/^c010bb99:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb9c	obj/kernel.asm	/^c010bb9c:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010bba3	obj/kernel.asm	/^c010bba3:	c9                   	leave  $/;"	l
c010bba4	obj/kernel.asm	/^c010bba4:	c3                   	ret    $/;"	l
c010bba5	obj/kernel.asm	/^c010bba5 <stride_enqueue>:$/;"	l
c010bba5	obj/kernel.asm	/^c010bba5:	55                   	push   %ebp$/;"	l
c010bba6	obj/kernel.asm	/^c010bba6:	89 e5                	mov    %esp,%ebp$/;"	l
c010bba8	obj/kernel.asm	/^c010bba8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bbab	obj/kernel.asm	/^c010bbab:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bbae	obj/kernel.asm	/^c010bbae:	8d 90 b0 00 00 00    	lea    0xb0(%eax),%edx$/;"	l
c010bbb4	obj/kernel.asm	/^c010bbb4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bbb7	obj/kernel.asm	/^c010bbb7:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010bbba	obj/kernel.asm	/^c010bbba:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bbbd	obj/kernel.asm	/^c010bbbd:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c010bbc0	obj/kernel.asm	/^c010bbc0:	c7 45 ec 19 bb 10 c0 	movl   $0xc010bb19,-0x14(%ebp)$/;"	l
c010bbc7	obj/kernel.asm	/^c010bbc7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bbca	obj/kernel.asm	/^c010bbca:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010bbcd	obj/kernel.asm	/^c010bbcd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010bbd0	obj/kernel.asm	/^c010bbd0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010bbd6	obj/kernel.asm	/^c010bbd6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010bbd9	obj/kernel.asm	/^c010bbd9:	8b 10                	mov    (%eax),%edx$/;"	l
c010bbdb	obj/kernel.asm	/^c010bbdb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010bbde	obj/kernel.asm	/^c010bbde:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010bbe1	obj/kernel.asm	/^c010bbe1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010bbe4	obj/kernel.asm	/^c010bbe4:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010bbe7	obj/kernel.asm	/^c010bbe7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010bbea	obj/kernel.asm	/^c010bbea:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010bbed	obj/kernel.asm	/^c010bbed:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010bbf0	obj/kernel.asm	/^c010bbf0:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010bbf3	obj/kernel.asm	/^c010bbf3:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010bbf6	obj/kernel.asm	/^c010bbf6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bbf9	obj/kernel.asm	/^c010bbf9:	e8 51 fe ff ff       	call   c010ba4f <skew_heap_merge>$/;"	l
c010bbfe	obj/kernel.asm	/^c010bbfe:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bc01	obj/kernel.asm	/^c010bc01:	89 c2                	mov    %eax,%edx$/;"	l
c010bc03	obj/kernel.asm	/^c010bc03:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc06	obj/kernel.asm	/^c010bc06:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010bc09	obj/kernel.asm	/^c010bc09:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bc0c	obj/kernel.asm	/^c010bc0c:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010bc12	obj/kernel.asm	/^c010bc12:	85 c0                	test   %eax,%eax$/;"	l
c010bc14	obj/kernel.asm	/^c010bc14:	74 13                	je     c010bc29 <stride_enqueue+0x84>$/;"	l
c010bc16	obj/kernel.asm	/^c010bc16:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bc19	obj/kernel.asm	/^c010bc19:	8b 90 ac 00 00 00    	mov    0xac(%eax),%edx$/;"	l
c010bc1f	obj/kernel.asm	/^c010bc1f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc22	obj/kernel.asm	/^c010bc22:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010bc25	obj/kernel.asm	/^c010bc25:	39 c2                	cmp    %eax,%edx$/;"	l
c010bc27	obj/kernel.asm	/^c010bc27:	7e 0f                	jle    c010bc38 <stride_enqueue+0x93>$/;"	l
c010bc29	obj/kernel.asm	/^c010bc29:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc2c	obj/kernel.asm	/^c010bc2c:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010bc2f	obj/kernel.asm	/^c010bc2f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bc32	obj/kernel.asm	/^c010bc32:	89 90 ac 00 00 00    	mov    %edx,0xac(%eax)$/;"	l
c010bc38	obj/kernel.asm	/^c010bc38:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bc3b	obj/kernel.asm	/^c010bc3b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010bc3e	obj/kernel.asm	/^c010bc3e:	89 90 a0 00 00 00    	mov    %edx,0xa0(%eax)$/;"	l
c010bc44	obj/kernel.asm	/^c010bc44:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc47	obj/kernel.asm	/^c010bc47:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010bc4a	obj/kernel.asm	/^c010bc4a:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010bc4d	obj/kernel.asm	/^c010bc4d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc50	obj/kernel.asm	/^c010bc50:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010bc53	obj/kernel.asm	/^c010bc53:	c9                   	leave  $/;"	l
c010bc54	obj/kernel.asm	/^c010bc54:	c3                   	ret    $/;"	l
c010bc55	obj/kernel.asm	/^c010bc55 <stride_dequeue>:$/;"	l
c010bc55	obj/kernel.asm	/^c010bc55:	55                   	push   %ebp$/;"	l
c010bc56	obj/kernel.asm	/^c010bc56:	89 e5                	mov    %esp,%ebp$/;"	l
c010bc58	obj/kernel.asm	/^c010bc58:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010bc5b	obj/kernel.asm	/^c010bc5b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bc5e	obj/kernel.asm	/^c010bc5e:	8d 90 b0 00 00 00    	lea    0xb0(%eax),%edx$/;"	l
c010bc64	obj/kernel.asm	/^c010bc64:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bc67	obj/kernel.asm	/^c010bc67:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010bc6a	obj/kernel.asm	/^c010bc6a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bc6d	obj/kernel.asm	/^c010bc6d:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c010bc70	obj/kernel.asm	/^c010bc70:	c7 45 ec 19 bb 10 c0 	movl   $0xc010bb19,-0x14(%ebp)$/;"	l
c010bc77	obj/kernel.asm	/^c010bc77:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bc7a	obj/kernel.asm	/^c010bc7a:	8b 00                	mov    (%eax),%eax$/;"	l
c010bc7c	obj/kernel.asm	/^c010bc7c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010bc7f	obj/kernel.asm	/^c010bc7f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bc82	obj/kernel.asm	/^c010bc82:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010bc85	obj/kernel.asm	/^c010bc85:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bc88	obj/kernel.asm	/^c010bc88:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010bc8b	obj/kernel.asm	/^c010bc8b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010bc8e	obj/kernel.asm	/^c010bc8e:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010bc91	obj/kernel.asm	/^c010bc91:	52                   	push   %edx$/;"	l
c010bc92	obj/kernel.asm	/^c010bc92:	50                   	push   %eax$/;"	l
c010bc93	obj/kernel.asm	/^c010bc93:	e8 b7 fd ff ff       	call   c010ba4f <skew_heap_merge>$/;"	l
c010bc98	obj/kernel.asm	/^c010bc98:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bc9b	obj/kernel.asm	/^c010bc9b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010bc9e	obj/kernel.asm	/^c010bc9e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010bca2	obj/kernel.asm	/^c010bca2:	74 08                	je     c010bcac <stride_dequeue+0x57>$/;"	l
c010bca4	obj/kernel.asm	/^c010bca4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010bca7	obj/kernel.asm	/^c010bca7:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010bcaa	obj/kernel.asm	/^c010bcaa:	89 10                	mov    %edx,(%eax)$/;"	l
c010bcac	obj/kernel.asm	/^c010bcac:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010bcb0	obj/kernel.asm	/^c010bcb0:	74 24                	je     c010bcd6 <stride_dequeue+0x81>$/;"	l
c010bcb2	obj/kernel.asm	/^c010bcb2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010bcb5	obj/kernel.asm	/^c010bcb5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010bcb8	obj/kernel.asm	/^c010bcb8:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010bcbb	obj/kernel.asm	/^c010bcbb:	75 0b                	jne    c010bcc8 <stride_dequeue+0x73>$/;"	l
c010bcbd	obj/kernel.asm	/^c010bcbd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010bcc0	obj/kernel.asm	/^c010bcc0:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010bcc3	obj/kernel.asm	/^c010bcc3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010bcc6	obj/kernel.asm	/^c010bcc6:	eb 09                	jmp    c010bcd1 <stride_dequeue+0x7c>$/;"	l
c010bcc8	obj/kernel.asm	/^c010bcc8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010bccb	obj/kernel.asm	/^c010bccb:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010bcce	obj/kernel.asm	/^c010bcce:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010bcd1	obj/kernel.asm	/^c010bcd1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bcd4	obj/kernel.asm	/^c010bcd4:	eb 03                	jmp    c010bcd9 <stride_dequeue+0x84>$/;"	l
c010bcd6	obj/kernel.asm	/^c010bcd6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010bcd9	obj/kernel.asm	/^c010bcd9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010bcdc	obj/kernel.asm	/^c010bcdc:	89 42 10             	mov    %eax,0x10(%edx)$/;"	l
c010bcdf	obj/kernel.asm	/^c010bcdf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bce2	obj/kernel.asm	/^c010bce2:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010bce5	obj/kernel.asm	/^c010bce5:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010bce8	obj/kernel.asm	/^c010bce8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bceb	obj/kernel.asm	/^c010bceb:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010bcee	obj/kernel.asm	/^c010bcee:	c9                   	leave  $/;"	l
c010bcef	obj/kernel.asm	/^c010bcef:	c3                   	ret    $/;"	l
c010bcf0	obj/kernel.asm	/^c010bcf0 <stride_pick_next>:$/;"	l
c010bcf0	obj/kernel.asm	/^c010bcf0:	55                   	push   %ebp$/;"	l
c010bcf1	obj/kernel.asm	/^c010bcf1:	89 e5                	mov    %esp,%ebp$/;"	l
c010bcf3	obj/kernel.asm	/^c010bcf3:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010bcf6	obj/kernel.asm	/^c010bcf6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bcf9	obj/kernel.asm	/^c010bcf9:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010bcfc	obj/kernel.asm	/^c010bcfc:	85 c0                	test   %eax,%eax$/;"	l
c010bcfe	obj/kernel.asm	/^c010bcfe:	75 07                	jne    c010bd07 <stride_pick_next+0x17>$/;"	l
c010bd00	obj/kernel.asm	/^c010bd00:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010bd05	obj/kernel.asm	/^c010bd05:	eb 4f                	jmp    c010bd56 <stride_pick_next+0x66>$/;"	l
c010bd07	obj/kernel.asm	/^c010bd07:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd0a	obj/kernel.asm	/^c010bd0a:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010bd0d	obj/kernel.asm	/^c010bd0d:	2d b0 00 00 00       	sub    $0xb0,%eax$/;"	l
c010bd12	obj/kernel.asm	/^c010bd12:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010bd15	obj/kernel.asm	/^c010bd15:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010bd18	obj/kernel.asm	/^c010bd18:	8b 80 c0 00 00 00    	mov    0xc0(%eax),%eax$/;"	l
c010bd1e	obj/kernel.asm	/^c010bd1e:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010bd21	obj/kernel.asm	/^c010bd21:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010bd24	obj/kernel.asm	/^c010bd24:	8b 80 c0 00 00 00    	mov    0xc0(%eax),%eax$/;"	l
c010bd2a	obj/kernel.asm	/^c010bd2a:	85 c0                	test   %eax,%eax$/;"	l
c010bd2c	obj/kernel.asm	/^c010bd2c:	75 07                	jne    c010bd35 <stride_pick_next+0x45>$/;"	l
c010bd2e	obj/kernel.asm	/^c010bd2e:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)$/;"	l
c010bd35	obj/kernel.asm	/^c010bd35:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010bd38	obj/kernel.asm	/^c010bd38:	8b 88 bc 00 00 00    	mov    0xbc(%eax),%ecx$/;"	l
c010bd3e	obj/kernel.asm	/^c010bd3e:	b8 00 00 10 00       	mov    $0x100000,%eax$/;"	l
c010bd43	obj/kernel.asm	/^c010bd43:	99                   	cltd   $/;"	l
c010bd44	obj/kernel.asm	/^c010bd44:	f7 7d fc             	idivl  -0x4(%ebp)$/;"	l
c010bd47	obj/kernel.asm	/^c010bd47:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
c010bd4a	obj/kernel.asm	/^c010bd4a:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010bd4d	obj/kernel.asm	/^c010bd4d:	89 90 bc 00 00 00    	mov    %edx,0xbc(%eax)$/;"	l
c010bd53	obj/kernel.asm	/^c010bd53:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010bd56	obj/kernel.asm	/^c010bd56:	c9                   	leave  $/;"	l
c010bd57	obj/kernel.asm	/^c010bd57:	c3                   	ret    $/;"	l
c010bd58	obj/kernel.asm	/^c010bd58 <stride_proc_tick>:$/;"	l
c010bd58	obj/kernel.asm	/^c010bd58:	55                   	push   %ebp$/;"	l
c010bd59	obj/kernel.asm	/^c010bd59:	89 e5                	mov    %esp,%ebp$/;"	l
c010bd5b	obj/kernel.asm	/^c010bd5b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bd5e	obj/kernel.asm	/^c010bd5e:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010bd64	obj/kernel.asm	/^c010bd64:	85 c0                	test   %eax,%eax$/;"	l
c010bd66	obj/kernel.asm	/^c010bd66:	7e 17                	jle    c010bd7f <stride_proc_tick+0x27>$/;"	l
c010bd68	obj/kernel.asm	/^c010bd68:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bd6b	obj/kernel.asm	/^c010bd6b:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010bd71	obj/kernel.asm	/^c010bd71:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010bd74	obj/kernel.asm	/^c010bd74:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bd77	obj/kernel.asm	/^c010bd77:	89 90 ac 00 00 00    	mov    %edx,0xac(%eax)$/;"	l
c010bd7d	obj/kernel.asm	/^c010bd7d:	eb 17                	jmp    c010bd96 <stride_proc_tick+0x3e>$/;"	l
c010bd7f	obj/kernel.asm	/^c010bd7f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bd82	obj/kernel.asm	/^c010bd82:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010bd88	obj/kernel.asm	/^c010bd88:	85 c0                	test   %eax,%eax$/;"	l
c010bd8a	obj/kernel.asm	/^c010bd8a:	75 0a                	jne    c010bd96 <stride_proc_tick+0x3e>$/;"	l
c010bd8c	obj/kernel.asm	/^c010bd8c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bd8f	obj/kernel.asm	/^c010bd8f:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010bd96	obj/kernel.asm	/^c010bd96:	5d                   	pop    %ebp$/;"	l
c010bd97	obj/kernel.asm	/^c010bd97:	c3                   	ret    $/;"	l
c010bd98	obj/kernel.asm	/^c010bd98 <sys_exit>:$/;"	l
c010bd98	obj/kernel.asm	/^c010bd98:	55                   	push   %ebp$/;"	l
c010bd99	obj/kernel.asm	/^c010bd99:	89 e5                	mov    %esp,%ebp$/;"	l
c010bd9b	obj/kernel.asm	/^c010bd9b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bd9e	obj/kernel.asm	/^c010bd9e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bda1	obj/kernel.asm	/^c010bda1:	8b 00                	mov    (%eax),%eax$/;"	l
c010bda3	obj/kernel.asm	/^c010bda3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bda6	obj/kernel.asm	/^c010bda6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bda9	obj/kernel.asm	/^c010bda9:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bdac	obj/kernel.asm	/^c010bdac:	e8 b7 e7 ff ff       	call   c010a568 <do_exit>$/;"	l
c010bdb1	obj/kernel.asm	/^c010bdb1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bdb4	obj/kernel.asm	/^c010bdb4:	c9                   	leave  $/;"	l
c010bdb5	obj/kernel.asm	/^c010bdb5:	c3                   	ret    $/;"	l
c010bdb6	obj/kernel.asm	/^c010bdb6 <sys_fork>:$/;"	l
c010bdb6	obj/kernel.asm	/^c010bdb6:	55                   	push   %ebp$/;"	l
c010bdb7	obj/kernel.asm	/^c010bdb7:	89 e5                	mov    %esp,%ebp$/;"	l
c010bdb9	obj/kernel.asm	/^c010bdb9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bdbc	obj/kernel.asm	/^c010bdbc:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010bdc1	obj/kernel.asm	/^c010bdc1:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010bdc4	obj/kernel.asm	/^c010bdc4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bdc7	obj/kernel.asm	/^c010bdc7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bdca	obj/kernel.asm	/^c010bdca:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010bdcd	obj/kernel.asm	/^c010bdcd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bdd0	obj/kernel.asm	/^c010bdd0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010bdd3	obj/kernel.asm	/^c010bdd3:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bdd6	obj/kernel.asm	/^c010bdd6:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010bdd9	obj/kernel.asm	/^c010bdd9:	6a 00                	push   $0x0$/;"	l
c010bddb	obj/kernel.asm	/^c010bddb:	e8 60 e6 ff ff       	call   c010a440 <do_fork>$/;"	l
c010bde0	obj/kernel.asm	/^c010bde0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bde3	obj/kernel.asm	/^c010bde3:	c9                   	leave  $/;"	l
c010bde4	obj/kernel.asm	/^c010bde4:	c3                   	ret    $/;"	l
c010bde5	obj/kernel.asm	/^c010bde5 <sys_wait>:$/;"	l
c010bde5	obj/kernel.asm	/^c010bde5:	55                   	push   %ebp$/;"	l
c010bde6	obj/kernel.asm	/^c010bde6:	89 e5                	mov    %esp,%ebp$/;"	l
c010bde8	obj/kernel.asm	/^c010bde8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bdeb	obj/kernel.asm	/^c010bdeb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bdee	obj/kernel.asm	/^c010bdee:	8b 00                	mov    (%eax),%eax$/;"	l
c010bdf0	obj/kernel.asm	/^c010bdf0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bdf3	obj/kernel.asm	/^c010bdf3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bdf6	obj/kernel.asm	/^c010bdf6:	83 c0 04             	add    $0x4,%eax$/;"	l
c010bdf9	obj/kernel.asm	/^c010bdf9:	8b 00                	mov    (%eax),%eax$/;"	l
c010bdfb	obj/kernel.asm	/^c010bdfb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bdfe	obj/kernel.asm	/^c010bdfe:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010be01	obj/kernel.asm	/^c010be01:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010be04	obj/kernel.asm	/^c010be04:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010be07	obj/kernel.asm	/^c010be07:	e8 51 f0 ff ff       	call   c010ae5d <do_wait>$/;"	l
c010be0c	obj/kernel.asm	/^c010be0c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010be0f	obj/kernel.asm	/^c010be0f:	c9                   	leave  $/;"	l
c010be10	obj/kernel.asm	/^c010be10:	c3                   	ret    $/;"	l
c010be11	obj/kernel.asm	/^c010be11 <sys_exec>:$/;"	l
c010be11	obj/kernel.asm	/^c010be11:	55                   	push   %ebp$/;"	l
c010be12	obj/kernel.asm	/^c010be12:	89 e5                	mov    %esp,%ebp$/;"	l
c010be14	obj/kernel.asm	/^c010be14:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010be17	obj/kernel.asm	/^c010be17:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be1a	obj/kernel.asm	/^c010be1a:	8b 00                	mov    (%eax),%eax$/;"	l
c010be1c	obj/kernel.asm	/^c010be1c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010be1f	obj/kernel.asm	/^c010be1f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be22	obj/kernel.asm	/^c010be22:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010be25	obj/kernel.asm	/^c010be25:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010be28	obj/kernel.asm	/^c010be28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be2b	obj/kernel.asm	/^c010be2b:	83 c0 08             	add    $0x8,%eax$/;"	l
c010be2e	obj/kernel.asm	/^c010be2e:	8b 00                	mov    (%eax),%eax$/;"	l
c010be30	obj/kernel.asm	/^c010be30:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010be33	obj/kernel.asm	/^c010be33:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be36	obj/kernel.asm	/^c010be36:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010be39	obj/kernel.asm	/^c010be39:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010be3c	obj/kernel.asm	/^c010be3c:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010be3f	obj/kernel.asm	/^c010be3f:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010be42	obj/kernel.asm	/^c010be42:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010be45	obj/kernel.asm	/^c010be45:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010be48	obj/kernel.asm	/^c010be48:	e8 da ee ff ff       	call   c010ad27 <do_execve>$/;"	l
c010be4d	obj/kernel.asm	/^c010be4d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010be50	obj/kernel.asm	/^c010be50:	c9                   	leave  $/;"	l
c010be51	obj/kernel.asm	/^c010be51:	c3                   	ret    $/;"	l
c010be52	obj/kernel.asm	/^c010be52 <sys_yield>:$/;"	l
c010be52	obj/kernel.asm	/^c010be52:	55                   	push   %ebp$/;"	l
c010be53	obj/kernel.asm	/^c010be53:	89 e5                	mov    %esp,%ebp$/;"	l
c010be55	obj/kernel.asm	/^c010be55:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010be58	obj/kernel.asm	/^c010be58:	e8 ea ef ff ff       	call   c010ae47 <do_yield>$/;"	l
c010be5d	obj/kernel.asm	/^c010be5d:	c9                   	leave  $/;"	l
c010be5e	obj/kernel.asm	/^c010be5e:	c3                   	ret    $/;"	l
c010be5f	obj/kernel.asm	/^c010be5f <sys_kill>:$/;"	l
c010be5f	obj/kernel.asm	/^c010be5f:	55                   	push   %ebp$/;"	l
c010be60	obj/kernel.asm	/^c010be60:	89 e5                	mov    %esp,%ebp$/;"	l
c010be62	obj/kernel.asm	/^c010be62:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010be65	obj/kernel.asm	/^c010be65:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be68	obj/kernel.asm	/^c010be68:	8b 00                	mov    (%eax),%eax$/;"	l
c010be6a	obj/kernel.asm	/^c010be6a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010be6d	obj/kernel.asm	/^c010be6d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010be70	obj/kernel.asm	/^c010be70:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010be73	obj/kernel.asm	/^c010be73:	e8 7f f1 ff ff       	call   c010aff7 <do_kill>$/;"	l
c010be78	obj/kernel.asm	/^c010be78:	83 c4 10             	add    $0x10,%esp$/;"	l
c010be7b	obj/kernel.asm	/^c010be7b:	c9                   	leave  $/;"	l
c010be7c	obj/kernel.asm	/^c010be7c:	c3                   	ret    $/;"	l
c010be7d	obj/kernel.asm	/^c010be7d <sys_getpid>:$/;"	l
c010be7d	obj/kernel.asm	/^c010be7d:	55                   	push   %ebp$/;"	l
c010be7e	obj/kernel.asm	/^c010be7e:	89 e5                	mov    %esp,%ebp$/;"	l
c010be80	obj/kernel.asm	/^c010be80:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010be85	obj/kernel.asm	/^c010be85:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010be88	obj/kernel.asm	/^c010be88:	5d                   	pop    %ebp$/;"	l
c010be89	obj/kernel.asm	/^c010be89:	c3                   	ret    $/;"	l
c010be8a	obj/kernel.asm	/^c010be8a <sys_putc>:$/;"	l
c010be8a	obj/kernel.asm	/^c010be8a:	55                   	push   %ebp$/;"	l
c010be8b	obj/kernel.asm	/^c010be8b:	89 e5                	mov    %esp,%ebp$/;"	l
c010be8d	obj/kernel.asm	/^c010be8d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010be90	obj/kernel.asm	/^c010be90:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be93	obj/kernel.asm	/^c010be93:	8b 00                	mov    (%eax),%eax$/;"	l
c010be95	obj/kernel.asm	/^c010be95:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010be98	obj/kernel.asm	/^c010be98:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010be9b	obj/kernel.asm	/^c010be9b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010be9e	obj/kernel.asm	/^c010be9e:	e8 fd 43 ff ff       	call   c01002a0 <cputchar>$/;"	l
c010bea3	obj/kernel.asm	/^c010bea3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bea6	obj/kernel.asm	/^c010bea6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010beab	obj/kernel.asm	/^c010beab:	c9                   	leave  $/;"	l
c010beac	obj/kernel.asm	/^c010beac:	c3                   	ret    $/;"	l
c010bead	obj/kernel.asm	/^c010bead <sys_pgdir>:$/;"	l
c010bead	obj/kernel.asm	/^c010bead:	55                   	push   %ebp$/;"	l
c010beae	obj/kernel.asm	/^c010beae:	89 e5                	mov    %esp,%ebp$/;"	l
c010beb0	obj/kernel.asm	/^c010beb0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010beb3	obj/kernel.asm	/^c010beb3:	e8 53 92 ff ff       	call   c010510b <print_pgdir>$/;"	l
c010beb8	obj/kernel.asm	/^c010beb8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010bebd	obj/kernel.asm	/^c010bebd:	c9                   	leave  $/;"	l
c010bebe	obj/kernel.asm	/^c010bebe:	c3                   	ret    $/;"	l
c010bebf	obj/kernel.asm	/^c010bebf <sys_gettime>:$/;"	l
c010bebf	obj/kernel.asm	/^c010bebf:	55                   	push   %ebp$/;"	l
c010bec0	obj/kernel.asm	/^c010bec0:	89 e5                	mov    %esp,%ebp$/;"	l
c010bec2	obj/kernel.asm	/^c010bec2:	a1 38 45 1c c0       	mov    0xc01c4538,%eax$/;"	l
c010bec7	obj/kernel.asm	/^c010bec7:	5d                   	pop    %ebp$/;"	l
c010bec8	obj/kernel.asm	/^c010bec8:	c3                   	ret    $/;"	l
c010bec9	obj/kernel.asm	/^c010bec9 <sys_lab6_set_priority>:$/;"	l
c010bec9	obj/kernel.asm	/^c010bec9:	55                   	push   %ebp$/;"	l
c010beca	obj/kernel.asm	/^c010beca:	89 e5                	mov    %esp,%ebp$/;"	l
c010becc	obj/kernel.asm	/^c010becc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010becf	obj/kernel.asm	/^c010becf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bed2	obj/kernel.asm	/^c010bed2:	8b 00                	mov    (%eax),%eax$/;"	l
c010bed4	obj/kernel.asm	/^c010bed4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bed7	obj/kernel.asm	/^c010bed7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010beda	obj/kernel.asm	/^c010beda:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bedd	obj/kernel.asm	/^c010bedd:	e8 26 f5 ff ff       	call   c010b408 <lab6_set_priority>$/;"	l
c010bee2	obj/kernel.asm	/^c010bee2:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bee5	obj/kernel.asm	/^c010bee5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010beea	obj/kernel.asm	/^c010beea:	c9                   	leave  $/;"	l
c010beeb	obj/kernel.asm	/^c010beeb:	c3                   	ret    $/;"	l
c010beec	obj/kernel.asm	/^c010beec <sys_sleep>:$/;"	l
c010beec	obj/kernel.asm	/^c010beec:	55                   	push   %ebp$/;"	l
c010beed	obj/kernel.asm	/^c010beed:	89 e5                	mov    %esp,%ebp$/;"	l
c010beef	obj/kernel.asm	/^c010beef:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bef2	obj/kernel.asm	/^c010bef2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bef5	obj/kernel.asm	/^c010bef5:	8b 00                	mov    (%eax),%eax$/;"	l
c010bef7	obj/kernel.asm	/^c010bef7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010befa	obj/kernel.asm	/^c010befa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010befd	obj/kernel.asm	/^c010befd:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bf00	obj/kernel.asm	/^c010bf00:	e8 2d f5 ff ff       	call   c010b432 <do_sleep>$/;"	l
c010bf05	obj/kernel.asm	/^c010bf05:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bf08	obj/kernel.asm	/^c010bf08:	c9                   	leave  $/;"	l
c010bf09	obj/kernel.asm	/^c010bf09:	c3                   	ret    $/;"	l
c010bf0a	obj/kernel.asm	/^c010bf0a <syscall>:$/;"	l
c010bf0a	obj/kernel.asm	/^c010bf0a:	55                   	push   %ebp$/;"	l
c010bf0b	obj/kernel.asm	/^c010bf0b:	89 e5                	mov    %esp,%ebp$/;"	l
c010bf0d	obj/kernel.asm	/^c010bf0d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010bf10	obj/kernel.asm	/^c010bf10:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010bf15	obj/kernel.asm	/^c010bf15:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010bf18	obj/kernel.asm	/^c010bf18:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bf1b	obj/kernel.asm	/^c010bf1b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf1e	obj/kernel.asm	/^c010bf1e:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010bf21	obj/kernel.asm	/^c010bf21:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bf24	obj/kernel.asm	/^c010bf24:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010bf28	obj/kernel.asm	/^c010bf28:	78 64                	js     c010bf8e <syscall+0x84>$/;"	l
c010bf2a	obj/kernel.asm	/^c010bf2a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bf2d	obj/kernel.asm	/^c010bf2d:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c010bf32	obj/kernel.asm	/^c010bf32:	77 5a                	ja     c010bf8e <syscall+0x84>$/;"	l
c010bf34	obj/kernel.asm	/^c010bf34:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bf37	obj/kernel.asm	/^c010bf37:	8b 04 85 40 0b 13 c0 	mov    -0x3fecf4c0(,%eax,4),%eax$/;"	l
c010bf3e	obj/kernel.asm	/^c010bf3e:	85 c0                	test   %eax,%eax$/;"	l
c010bf40	obj/kernel.asm	/^c010bf40:	74 4c                	je     c010bf8e <syscall+0x84>$/;"	l
c010bf42	obj/kernel.asm	/^c010bf42:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf45	obj/kernel.asm	/^c010bf45:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010bf48	obj/kernel.asm	/^c010bf48:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010bf4b	obj/kernel.asm	/^c010bf4b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf4e	obj/kernel.asm	/^c010bf4e:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010bf51	obj/kernel.asm	/^c010bf51:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010bf54	obj/kernel.asm	/^c010bf54:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf57	obj/kernel.asm	/^c010bf57:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010bf5a	obj/kernel.asm	/^c010bf5a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010bf5d	obj/kernel.asm	/^c010bf5d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf60	obj/kernel.asm	/^c010bf60:	8b 00                	mov    (%eax),%eax$/;"	l
c010bf62	obj/kernel.asm	/^c010bf62:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010bf65	obj/kernel.asm	/^c010bf65:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf68	obj/kernel.asm	/^c010bf68:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010bf6b	obj/kernel.asm	/^c010bf6b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010bf6e	obj/kernel.asm	/^c010bf6e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bf71	obj/kernel.asm	/^c010bf71:	8b 04 85 40 0b 13 c0 	mov    -0x3fecf4c0(,%eax,4),%eax$/;"	l
c010bf78	obj/kernel.asm	/^c010bf78:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bf7b	obj/kernel.asm	/^c010bf7b:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c010bf7e	obj/kernel.asm	/^c010bf7e:	52                   	push   %edx$/;"	l
c010bf7f	obj/kernel.asm	/^c010bf7f:	ff d0                	call   *%eax$/;"	l
c010bf81	obj/kernel.asm	/^c010bf81:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bf84	obj/kernel.asm	/^c010bf84:	89 c2                	mov    %eax,%edx$/;"	l
c010bf86	obj/kernel.asm	/^c010bf86:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf89	obj/kernel.asm	/^c010bf89:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010bf8c	obj/kernel.asm	/^c010bf8c:	eb 37                	jmp    c010bfc5 <syscall+0xbb>$/;"	l
c010bf8e	obj/kernel.asm	/^c010bf8e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bf91	obj/kernel.asm	/^c010bf91:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bf94	obj/kernel.asm	/^c010bf94:	e8 9b 64 ff ff       	call   c0102434 <print_trapframe>$/;"	l
c010bf99	obj/kernel.asm	/^c010bf99:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bf9c	obj/kernel.asm	/^c010bf9c:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010bfa1	obj/kernel.asm	/^c010bfa1:	8d 50 48             	lea    0x48(%eax),%edx$/;"	l
c010bfa4	obj/kernel.asm	/^c010bfa4:	a1 88 24 1c c0       	mov    0xc01c2488,%eax$/;"	l
c010bfa9	obj/kernel.asm	/^c010bfa9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010bfac	obj/kernel.asm	/^c010bfac:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010bfaf	obj/kernel.asm	/^c010bfaf:	52                   	push   %edx$/;"	l
c010bfb0	obj/kernel.asm	/^c010bfb0:	50                   	push   %eax$/;"	l
c010bfb1	obj/kernel.asm	/^c010bfb1:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010bfb4	obj/kernel.asm	/^c010bfb4:	68 48 f6 10 c0       	push   $0xc010f648$/;"	l
c010bfb9	obj/kernel.asm	/^c010bfb9:	6a 79                	push   $0x79$/;"	l
c010bfbb	obj/kernel.asm	/^c010bfbb:	68 74 f6 10 c0       	push   $0xc010f674$/;"	l
c010bfc0	obj/kernel.asm	/^c010bfc0:	e8 1a 44 ff ff       	call   c01003df <__panic>$/;"	l
c010bfc5	obj/kernel.asm	/^c010bfc5:	c9                   	leave  $/;"	l
c010bfc6	obj/kernel.asm	/^c010bfc6:	c3                   	ret    $/;"	l
c010bfc7	obj/kernel.asm	/^c010bfc7 <strlen>:$/;"	l
c010bfc7	obj/kernel.asm	/^c010bfc7:	55                   	push   %ebp$/;"	l
c010bfc8	obj/kernel.asm	/^c010bfc8:	89 e5                	mov    %esp,%ebp$/;"	l
c010bfca	obj/kernel.asm	/^c010bfca:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010bfcd	obj/kernel.asm	/^c010bfcd:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010bfd4	obj/kernel.asm	/^c010bfd4:	eb 04                	jmp    c010bfda <strlen+0x13>$/;"	l
c010bfd6	obj/kernel.asm	/^c010bfd6:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010bfda	obj/kernel.asm	/^c010bfda:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bfdd	obj/kernel.asm	/^c010bfdd:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010bfe0	obj/kernel.asm	/^c010bfe0:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c010bfe3	obj/kernel.asm	/^c010bfe3:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010bfe6	obj/kernel.asm	/^c010bfe6:	84 c0                	test   %al,%al$/;"	l
c010bfe8	obj/kernel.asm	/^c010bfe8:	75 ec                	jne    c010bfd6 <strlen+0xf>$/;"	l
c010bfea	obj/kernel.asm	/^c010bfea:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010bfed	obj/kernel.asm	/^c010bfed:	c9                   	leave  $/;"	l
c010bfee	obj/kernel.asm	/^c010bfee:	c3                   	ret    $/;"	l
c010bfef	obj/kernel.asm	/^c010bfef <strnlen>:$/;"	l
c010bfef	obj/kernel.asm	/^c010bfef:	55                   	push   %ebp$/;"	l
c010bff0	obj/kernel.asm	/^c010bff0:	89 e5                	mov    %esp,%ebp$/;"	l
c010bff2	obj/kernel.asm	/^c010bff2:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010bff5	obj/kernel.asm	/^c010bff5:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010bffc	obj/kernel.asm	/^c010bffc:	eb 04                	jmp    c010c002 <strnlen+0x13>$/;"	l
c010bffe	obj/kernel.asm	/^c010bffe:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010c002	obj/kernel.asm	/^c010c002:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c005	obj/kernel.asm	/^c010c005:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010c008	obj/kernel.asm	/^c010c008:	73 10                	jae    c010c01a <strnlen+0x2b>$/;"	l
c010c00a	obj/kernel.asm	/^c010c00a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c00d	obj/kernel.asm	/^c010c00d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010c010	obj/kernel.asm	/^c010c010:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c010c013	obj/kernel.asm	/^c010c013:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c016	obj/kernel.asm	/^c010c016:	84 c0                	test   %al,%al$/;"	l
c010c018	obj/kernel.asm	/^c010c018:	75 e4                	jne    c010bffe <strnlen+0xf>$/;"	l
c010c01a	obj/kernel.asm	/^c010c01a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c01d	obj/kernel.asm	/^c010c01d:	c9                   	leave  $/;"	l
c010c01e	obj/kernel.asm	/^c010c01e:	c3                   	ret    $/;"	l
c010c01f	obj/kernel.asm	/^c010c01f <strcpy>:$/;"	l
c010c01f	obj/kernel.asm	/^c010c01f:	55                   	push   %ebp$/;"	l
c010c020	obj/kernel.asm	/^c010c020:	89 e5                	mov    %esp,%ebp$/;"	l
c010c022	obj/kernel.asm	/^c010c022:	57                   	push   %edi$/;"	l
c010c023	obj/kernel.asm	/^c010c023:	56                   	push   %esi$/;"	l
c010c024	obj/kernel.asm	/^c010c024:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010c027	obj/kernel.asm	/^c010c027:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c02a	obj/kernel.asm	/^c010c02a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c02d	obj/kernel.asm	/^c010c02d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c030	obj/kernel.asm	/^c010c030:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c033	obj/kernel.asm	/^c010c033:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010c036	obj/kernel.asm	/^c010c036:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c039	obj/kernel.asm	/^c010c039:	89 d1                	mov    %edx,%ecx$/;"	l
c010c03b	obj/kernel.asm	/^c010c03b:	89 c2                	mov    %eax,%edx$/;"	l
c010c03d	obj/kernel.asm	/^c010c03d:	89 ce                	mov    %ecx,%esi$/;"	l
c010c03f	obj/kernel.asm	/^c010c03f:	89 d7                	mov    %edx,%edi$/;"	l
c010c041	obj/kernel.asm	/^c010c041:	ac                   	lods   %ds:(%esi),%al$/;"	l
c010c042	obj/kernel.asm	/^c010c042:	aa                   	stos   %al,%es:(%edi)$/;"	l
c010c043	obj/kernel.asm	/^c010c043:	84 c0                	test   %al,%al$/;"	l
c010c045	obj/kernel.asm	/^c010c045:	75 fa                	jne    c010c041 <strcpy+0x22>$/;"	l
c010c047	obj/kernel.asm	/^c010c047:	89 fa                	mov    %edi,%edx$/;"	l
c010c049	obj/kernel.asm	/^c010c049:	89 f1                	mov    %esi,%ecx$/;"	l
c010c04b	obj/kernel.asm	/^c010c04b:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c010c04e	obj/kernel.asm	/^c010c04e:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010c051	obj/kernel.asm	/^c010c051:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010c054	obj/kernel.asm	/^c010c054:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c057	obj/kernel.asm	/^c010c057:	90                   	nop$/;"	l
c010c058	obj/kernel.asm	/^c010c058:	83 c4 20             	add    $0x20,%esp$/;"	l
c010c05b	obj/kernel.asm	/^c010c05b:	5e                   	pop    %esi$/;"	l
c010c05c	obj/kernel.asm	/^c010c05c:	5f                   	pop    %edi$/;"	l
c010c05d	obj/kernel.asm	/^c010c05d:	5d                   	pop    %ebp$/;"	l
c010c05e	obj/kernel.asm	/^c010c05e:	c3                   	ret    $/;"	l
c010c05f	obj/kernel.asm	/^c010c05f <strncpy>:$/;"	l
c010c05f	obj/kernel.asm	/^c010c05f:	55                   	push   %ebp$/;"	l
c010c060	obj/kernel.asm	/^c010c060:	89 e5                	mov    %esp,%ebp$/;"	l
c010c062	obj/kernel.asm	/^c010c062:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010c065	obj/kernel.asm	/^c010c065:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c068	obj/kernel.asm	/^c010c068:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010c06b	obj/kernel.asm	/^c010c06b:	eb 21                	jmp    c010c08e <strncpy+0x2f>$/;"	l
c010c06d	obj/kernel.asm	/^c010c06d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c070	obj/kernel.asm	/^c010c070:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c010c073	obj/kernel.asm	/^c010c073:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c076	obj/kernel.asm	/^c010c076:	88 10                	mov    %dl,(%eax)$/;"	l
c010c078	obj/kernel.asm	/^c010c078:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c07b	obj/kernel.asm	/^c010c07b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c07e	obj/kernel.asm	/^c010c07e:	84 c0                	test   %al,%al$/;"	l
c010c080	obj/kernel.asm	/^c010c080:	74 04                	je     c010c086 <strncpy+0x27>$/;"	l
c010c082	obj/kernel.asm	/^c010c082:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c010c086	obj/kernel.asm	/^c010c086:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010c08a	obj/kernel.asm	/^c010c08a:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010c08e	obj/kernel.asm	/^c010c08e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010c092	obj/kernel.asm	/^c010c092:	75 d9                	jne    c010c06d <strncpy+0xe>$/;"	l
c010c094	obj/kernel.asm	/^c010c094:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c097	obj/kernel.asm	/^c010c097:	c9                   	leave  $/;"	l
c010c098	obj/kernel.asm	/^c010c098:	c3                   	ret    $/;"	l
c010c099	obj/kernel.asm	/^c010c099 <strcmp>:$/;"	l
c010c099	obj/kernel.asm	/^c010c099:	55                   	push   %ebp$/;"	l
c010c09a	obj/kernel.asm	/^c010c09a:	89 e5                	mov    %esp,%ebp$/;"	l
c010c09c	obj/kernel.asm	/^c010c09c:	57                   	push   %edi$/;"	l
c010c09d	obj/kernel.asm	/^c010c09d:	56                   	push   %esi$/;"	l
c010c09e	obj/kernel.asm	/^c010c09e:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010c0a1	obj/kernel.asm	/^c010c0a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c0a4	obj/kernel.asm	/^c010c0a4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c0a7	obj/kernel.asm	/^c010c0a7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c0aa	obj/kernel.asm	/^c010c0aa:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c0ad	obj/kernel.asm	/^c010c0ad:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c0b0	obj/kernel.asm	/^c010c0b0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c0b3	obj/kernel.asm	/^c010c0b3:	89 d1                	mov    %edx,%ecx$/;"	l
c010c0b5	obj/kernel.asm	/^c010c0b5:	89 c2                	mov    %eax,%edx$/;"	l
c010c0b7	obj/kernel.asm	/^c010c0b7:	89 ce                	mov    %ecx,%esi$/;"	l
c010c0b9	obj/kernel.asm	/^c010c0b9:	89 d7                	mov    %edx,%edi$/;"	l
c010c0bb	obj/kernel.asm	/^c010c0bb:	ac                   	lods   %ds:(%esi),%al$/;"	l
c010c0bc	obj/kernel.asm	/^c010c0bc:	ae                   	scas   %es:(%edi),%al$/;"	l
c010c0bd	obj/kernel.asm	/^c010c0bd:	75 08                	jne    c010c0c7 <strcmp+0x2e>$/;"	l
c010c0bf	obj/kernel.asm	/^c010c0bf:	84 c0                	test   %al,%al$/;"	l
c010c0c1	obj/kernel.asm	/^c010c0c1:	75 f8                	jne    c010c0bb <strcmp+0x22>$/;"	l
c010c0c3	obj/kernel.asm	/^c010c0c3:	31 c0                	xor    %eax,%eax$/;"	l
c010c0c5	obj/kernel.asm	/^c010c0c5:	eb 04                	jmp    c010c0cb <strcmp+0x32>$/;"	l
c010c0c7	obj/kernel.asm	/^c010c0c7:	19 c0                	sbb    %eax,%eax$/;"	l
c010c0c9	obj/kernel.asm	/^c010c0c9:	0c 01                	or     $0x1,%al$/;"	l
c010c0cb	obj/kernel.asm	/^c010c0cb:	89 fa                	mov    %edi,%edx$/;"	l
c010c0cd	obj/kernel.asm	/^c010c0cd:	89 f1                	mov    %esi,%ecx$/;"	l
c010c0cf	obj/kernel.asm	/^c010c0cf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c0d2	obj/kernel.asm	/^c010c0d2:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c010c0d5	obj/kernel.asm	/^c010c0d5:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010c0d8	obj/kernel.asm	/^c010c0d8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c0db	obj/kernel.asm	/^c010c0db:	90                   	nop$/;"	l
c010c0dc	obj/kernel.asm	/^c010c0dc:	83 c4 20             	add    $0x20,%esp$/;"	l
c010c0df	obj/kernel.asm	/^c010c0df:	5e                   	pop    %esi$/;"	l
c010c0e0	obj/kernel.asm	/^c010c0e0:	5f                   	pop    %edi$/;"	l
c010c0e1	obj/kernel.asm	/^c010c0e1:	5d                   	pop    %ebp$/;"	l
c010c0e2	obj/kernel.asm	/^c010c0e2:	c3                   	ret    $/;"	l
c010c0e3	obj/kernel.asm	/^c010c0e3 <strncmp>:$/;"	l
c010c0e3	obj/kernel.asm	/^c010c0e3:	55                   	push   %ebp$/;"	l
c010c0e4	obj/kernel.asm	/^c010c0e4:	89 e5                	mov    %esp,%ebp$/;"	l
c010c0e6	obj/kernel.asm	/^c010c0e6:	eb 0c                	jmp    c010c0f4 <strncmp+0x11>$/;"	l
c010c0e8	obj/kernel.asm	/^c010c0e8:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010c0ec	obj/kernel.asm	/^c010c0ec:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010c0f0	obj/kernel.asm	/^c010c0f0:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c010c0f4	obj/kernel.asm	/^c010c0f4:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010c0f8	obj/kernel.asm	/^c010c0f8:	74 1a                	je     c010c114 <strncmp+0x31>$/;"	l
c010c0fa	obj/kernel.asm	/^c010c0fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c0fd	obj/kernel.asm	/^c010c0fd:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c100	obj/kernel.asm	/^c010c100:	84 c0                	test   %al,%al$/;"	l
c010c102	obj/kernel.asm	/^c010c102:	74 10                	je     c010c114 <strncmp+0x31>$/;"	l
c010c104	obj/kernel.asm	/^c010c104:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c107	obj/kernel.asm	/^c010c107:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c010c10a	obj/kernel.asm	/^c010c10a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c10d	obj/kernel.asm	/^c010c10d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c110	obj/kernel.asm	/^c010c110:	38 c2                	cmp    %al,%dl$/;"	l
c010c112	obj/kernel.asm	/^c010c112:	74 d4                	je     c010c0e8 <strncmp+0x5>$/;"	l
c010c114	obj/kernel.asm	/^c010c114:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010c118	obj/kernel.asm	/^c010c118:	74 18                	je     c010c132 <strncmp+0x4f>$/;"	l
c010c11a	obj/kernel.asm	/^c010c11a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c11d	obj/kernel.asm	/^c010c11d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c120	obj/kernel.asm	/^c010c120:	0f b6 d0             	movzbl %al,%edx$/;"	l
c010c123	obj/kernel.asm	/^c010c123:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c126	obj/kernel.asm	/^c010c126:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c129	obj/kernel.asm	/^c010c129:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010c12c	obj/kernel.asm	/^c010c12c:	29 c2                	sub    %eax,%edx$/;"	l
c010c12e	obj/kernel.asm	/^c010c12e:	89 d0                	mov    %edx,%eax$/;"	l
c010c130	obj/kernel.asm	/^c010c130:	eb 05                	jmp    c010c137 <strncmp+0x54>$/;"	l
c010c132	obj/kernel.asm	/^c010c132:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c137	obj/kernel.asm	/^c010c137:	5d                   	pop    %ebp$/;"	l
c010c138	obj/kernel.asm	/^c010c138:	c3                   	ret    $/;"	l
c010c139	obj/kernel.asm	/^c010c139 <strchr>:$/;"	l
c010c139	obj/kernel.asm	/^c010c139:	55                   	push   %ebp$/;"	l
c010c13a	obj/kernel.asm	/^c010c13a:	89 e5                	mov    %esp,%ebp$/;"	l
c010c13c	obj/kernel.asm	/^c010c13c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c13f	obj/kernel.asm	/^c010c13f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c142	obj/kernel.asm	/^c010c142:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c010c145	obj/kernel.asm	/^c010c145:	eb 14                	jmp    c010c15b <strchr+0x22>$/;"	l
c010c147	obj/kernel.asm	/^c010c147:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c14a	obj/kernel.asm	/^c010c14a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c14d	obj/kernel.asm	/^c010c14d:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c010c150	obj/kernel.asm	/^c010c150:	75 05                	jne    c010c157 <strchr+0x1e>$/;"	l
c010c152	obj/kernel.asm	/^c010c152:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c155	obj/kernel.asm	/^c010c155:	eb 13                	jmp    c010c16a <strchr+0x31>$/;"	l
c010c157	obj/kernel.asm	/^c010c157:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010c15b	obj/kernel.asm	/^c010c15b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c15e	obj/kernel.asm	/^c010c15e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c161	obj/kernel.asm	/^c010c161:	84 c0                	test   %al,%al$/;"	l
c010c163	obj/kernel.asm	/^c010c163:	75 e2                	jne    c010c147 <strchr+0xe>$/;"	l
c010c165	obj/kernel.asm	/^c010c165:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c16a	obj/kernel.asm	/^c010c16a:	c9                   	leave  $/;"	l
c010c16b	obj/kernel.asm	/^c010c16b:	c3                   	ret    $/;"	l
c010c16c	obj/kernel.asm	/^c010c16c <strfind>:$/;"	l
c010c16c	obj/kernel.asm	/^c010c16c:	55                   	push   %ebp$/;"	l
c010c16d	obj/kernel.asm	/^c010c16d:	89 e5                	mov    %esp,%ebp$/;"	l
c010c16f	obj/kernel.asm	/^c010c16f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c172	obj/kernel.asm	/^c010c172:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c175	obj/kernel.asm	/^c010c175:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c010c178	obj/kernel.asm	/^c010c178:	eb 11                	jmp    c010c18b <strfind+0x1f>$/;"	l
c010c17a	obj/kernel.asm	/^c010c17a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c17d	obj/kernel.asm	/^c010c17d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c180	obj/kernel.asm	/^c010c180:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c010c183	obj/kernel.asm	/^c010c183:	75 02                	jne    c010c187 <strfind+0x1b>$/;"	l
c010c185	obj/kernel.asm	/^c010c185:	eb 0e                	jmp    c010c195 <strfind+0x29>$/;"	l
c010c187	obj/kernel.asm	/^c010c187:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010c18b	obj/kernel.asm	/^c010c18b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c18e	obj/kernel.asm	/^c010c18e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c191	obj/kernel.asm	/^c010c191:	84 c0                	test   %al,%al$/;"	l
c010c193	obj/kernel.asm	/^c010c193:	75 e5                	jne    c010c17a <strfind+0xe>$/;"	l
c010c195	obj/kernel.asm	/^c010c195:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c198	obj/kernel.asm	/^c010c198:	c9                   	leave  $/;"	l
c010c199	obj/kernel.asm	/^c010c199:	c3                   	ret    $/;"	l
c010c19a	obj/kernel.asm	/^c010c19a <strtol>:$/;"	l
c010c19a	obj/kernel.asm	/^c010c19a:	55                   	push   %ebp$/;"	l
c010c19b	obj/kernel.asm	/^c010c19b:	89 e5                	mov    %esp,%ebp$/;"	l
c010c19d	obj/kernel.asm	/^c010c19d:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010c1a0	obj/kernel.asm	/^c010c1a0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010c1a7	obj/kernel.asm	/^c010c1a7:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c010c1ae	obj/kernel.asm	/^c010c1ae:	eb 04                	jmp    c010c1b4 <strtol+0x1a>$/;"	l
c010c1b0	obj/kernel.asm	/^c010c1b0:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010c1b4	obj/kernel.asm	/^c010c1b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c1b7	obj/kernel.asm	/^c010c1b7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c1ba	obj/kernel.asm	/^c010c1ba:	3c 20                	cmp    $0x20,%al$/;"	l
c010c1bc	obj/kernel.asm	/^c010c1bc:	74 f2                	je     c010c1b0 <strtol+0x16>$/;"	l
c010c1be	obj/kernel.asm	/^c010c1be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c1c1	obj/kernel.asm	/^c010c1c1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c1c4	obj/kernel.asm	/^c010c1c4:	3c 09                	cmp    $0x9,%al$/;"	l
c010c1c6	obj/kernel.asm	/^c010c1c6:	74 e8                	je     c010c1b0 <strtol+0x16>$/;"	l
c010c1c8	obj/kernel.asm	/^c010c1c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c1cb	obj/kernel.asm	/^c010c1cb:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c1ce	obj/kernel.asm	/^c010c1ce:	3c 2b                	cmp    $0x2b,%al$/;"	l
c010c1d0	obj/kernel.asm	/^c010c1d0:	75 06                	jne    c010c1d8 <strtol+0x3e>$/;"	l
c010c1d2	obj/kernel.asm	/^c010c1d2:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010c1d6	obj/kernel.asm	/^c010c1d6:	eb 15                	jmp    c010c1ed <strtol+0x53>$/;"	l
c010c1d8	obj/kernel.asm	/^c010c1d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c1db	obj/kernel.asm	/^c010c1db:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c1de	obj/kernel.asm	/^c010c1de:	3c 2d                	cmp    $0x2d,%al$/;"	l
c010c1e0	obj/kernel.asm	/^c010c1e0:	75 0b                	jne    c010c1ed <strtol+0x53>$/;"	l
c010c1e2	obj/kernel.asm	/^c010c1e2:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010c1e6	obj/kernel.asm	/^c010c1e6:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)$/;"	l
c010c1ed	obj/kernel.asm	/^c010c1ed:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010c1f1	obj/kernel.asm	/^c010c1f1:	74 06                	je     c010c1f9 <strtol+0x5f>$/;"	l
c010c1f3	obj/kernel.asm	/^c010c1f3:	83 7d 10 10          	cmpl   $0x10,0x10(%ebp)$/;"	l
c010c1f7	obj/kernel.asm	/^c010c1f7:	75 24                	jne    c010c21d <strtol+0x83>$/;"	l
c010c1f9	obj/kernel.asm	/^c010c1f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c1fc	obj/kernel.asm	/^c010c1fc:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c1ff	obj/kernel.asm	/^c010c1ff:	3c 30                	cmp    $0x30,%al$/;"	l
c010c201	obj/kernel.asm	/^c010c201:	75 1a                	jne    c010c21d <strtol+0x83>$/;"	l
c010c203	obj/kernel.asm	/^c010c203:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c206	obj/kernel.asm	/^c010c206:	83 c0 01             	add    $0x1,%eax$/;"	l
c010c209	obj/kernel.asm	/^c010c209:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c20c	obj/kernel.asm	/^c010c20c:	3c 78                	cmp    $0x78,%al$/;"	l
c010c20e	obj/kernel.asm	/^c010c20e:	75 0d                	jne    c010c21d <strtol+0x83>$/;"	l
c010c210	obj/kernel.asm	/^c010c210:	83 45 08 02          	addl   $0x2,0x8(%ebp)$/;"	l
c010c214	obj/kernel.asm	/^c010c214:	c7 45 10 10 00 00 00 	movl   $0x10,0x10(%ebp)$/;"	l
c010c21b	obj/kernel.asm	/^c010c21b:	eb 2a                	jmp    c010c247 <strtol+0xad>$/;"	l
c010c21d	obj/kernel.asm	/^c010c21d:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010c221	obj/kernel.asm	/^c010c221:	75 17                	jne    c010c23a <strtol+0xa0>$/;"	l
c010c223	obj/kernel.asm	/^c010c223:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c226	obj/kernel.asm	/^c010c226:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c229	obj/kernel.asm	/^c010c229:	3c 30                	cmp    $0x30,%al$/;"	l
c010c22b	obj/kernel.asm	/^c010c22b:	75 0d                	jne    c010c23a <strtol+0xa0>$/;"	l
c010c22d	obj/kernel.asm	/^c010c22d:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010c231	obj/kernel.asm	/^c010c231:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)$/;"	l
c010c238	obj/kernel.asm	/^c010c238:	eb 0d                	jmp    c010c247 <strtol+0xad>$/;"	l
c010c23a	obj/kernel.asm	/^c010c23a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010c23e	obj/kernel.asm	/^c010c23e:	75 07                	jne    c010c247 <strtol+0xad>$/;"	l
c010c240	obj/kernel.asm	/^c010c240:	c7 45 10 0a 00 00 00 	movl   $0xa,0x10(%ebp)$/;"	l
c010c247	obj/kernel.asm	/^c010c247:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c24a	obj/kernel.asm	/^c010c24a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c24d	obj/kernel.asm	/^c010c24d:	3c 2f                	cmp    $0x2f,%al$/;"	l
c010c24f	obj/kernel.asm	/^c010c24f:	7e 1b                	jle    c010c26c <strtol+0xd2>$/;"	l
c010c251	obj/kernel.asm	/^c010c251:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c254	obj/kernel.asm	/^c010c254:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c257	obj/kernel.asm	/^c010c257:	3c 39                	cmp    $0x39,%al$/;"	l
c010c259	obj/kernel.asm	/^c010c259:	7f 11                	jg     c010c26c <strtol+0xd2>$/;"	l
c010c25b	obj/kernel.asm	/^c010c25b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c25e	obj/kernel.asm	/^c010c25e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c261	obj/kernel.asm	/^c010c261:	0f be c0             	movsbl %al,%eax$/;"	l
c010c264	obj/kernel.asm	/^c010c264:	83 e8 30             	sub    $0x30,%eax$/;"	l
c010c267	obj/kernel.asm	/^c010c267:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c26a	obj/kernel.asm	/^c010c26a:	eb 48                	jmp    c010c2b4 <strtol+0x11a>$/;"	l
c010c26c	obj/kernel.asm	/^c010c26c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c26f	obj/kernel.asm	/^c010c26f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c272	obj/kernel.asm	/^c010c272:	3c 60                	cmp    $0x60,%al$/;"	l
c010c274	obj/kernel.asm	/^c010c274:	7e 1b                	jle    c010c291 <strtol+0xf7>$/;"	l
c010c276	obj/kernel.asm	/^c010c276:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c279	obj/kernel.asm	/^c010c279:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c27c	obj/kernel.asm	/^c010c27c:	3c 7a                	cmp    $0x7a,%al$/;"	l
c010c27e	obj/kernel.asm	/^c010c27e:	7f 11                	jg     c010c291 <strtol+0xf7>$/;"	l
c010c280	obj/kernel.asm	/^c010c280:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c283	obj/kernel.asm	/^c010c283:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c286	obj/kernel.asm	/^c010c286:	0f be c0             	movsbl %al,%eax$/;"	l
c010c289	obj/kernel.asm	/^c010c289:	83 e8 57             	sub    $0x57,%eax$/;"	l
c010c28c	obj/kernel.asm	/^c010c28c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c28f	obj/kernel.asm	/^c010c28f:	eb 23                	jmp    c010c2b4 <strtol+0x11a>$/;"	l
c010c291	obj/kernel.asm	/^c010c291:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c294	obj/kernel.asm	/^c010c294:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c297	obj/kernel.asm	/^c010c297:	3c 40                	cmp    $0x40,%al$/;"	l
c010c299	obj/kernel.asm	/^c010c299:	7e 3d                	jle    c010c2d8 <strtol+0x13e>$/;"	l
c010c29b	obj/kernel.asm	/^c010c29b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c29e	obj/kernel.asm	/^c010c29e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c2a1	obj/kernel.asm	/^c010c2a1:	3c 5a                	cmp    $0x5a,%al$/;"	l
c010c2a3	obj/kernel.asm	/^c010c2a3:	7f 33                	jg     c010c2d8 <strtol+0x13e>$/;"	l
c010c2a5	obj/kernel.asm	/^c010c2a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c2a8	obj/kernel.asm	/^c010c2a8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c2ab	obj/kernel.asm	/^c010c2ab:	0f be c0             	movsbl %al,%eax$/;"	l
c010c2ae	obj/kernel.asm	/^c010c2ae:	83 e8 37             	sub    $0x37,%eax$/;"	l
c010c2b1	obj/kernel.asm	/^c010c2b1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c2b4	obj/kernel.asm	/^c010c2b4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c2b7	obj/kernel.asm	/^c010c2b7:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010c2ba	obj/kernel.asm	/^c010c2ba:	7c 02                	jl     c010c2be <strtol+0x124>$/;"	l
c010c2bc	obj/kernel.asm	/^c010c2bc:	eb 1a                	jmp    c010c2d8 <strtol+0x13e>$/;"	l
c010c2be	obj/kernel.asm	/^c010c2be:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010c2c2	obj/kernel.asm	/^c010c2c2:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c2c5	obj/kernel.asm	/^c010c2c5:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
c010c2c9	obj/kernel.asm	/^c010c2c9:	89 c2                	mov    %eax,%edx$/;"	l
c010c2cb	obj/kernel.asm	/^c010c2cb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c2ce	obj/kernel.asm	/^c010c2ce:	01 d0                	add    %edx,%eax$/;"	l
c010c2d0	obj/kernel.asm	/^c010c2d0:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010c2d3	obj/kernel.asm	/^c010c2d3:	e9 6f ff ff ff       	jmp    c010c247 <strtol+0xad>$/;"	l
c010c2d8	obj/kernel.asm	/^c010c2d8:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010c2dc	obj/kernel.asm	/^c010c2dc:	74 08                	je     c010c2e6 <strtol+0x14c>$/;"	l
c010c2de	obj/kernel.asm	/^c010c2de:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c2e1	obj/kernel.asm	/^c010c2e1:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c2e4	obj/kernel.asm	/^c010c2e4:	89 10                	mov    %edx,(%eax)$/;"	l
c010c2e6	obj/kernel.asm	/^c010c2e6:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c010c2ea	obj/kernel.asm	/^c010c2ea:	74 07                	je     c010c2f3 <strtol+0x159>$/;"	l
c010c2ec	obj/kernel.asm	/^c010c2ec:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c2ef	obj/kernel.asm	/^c010c2ef:	f7 d8                	neg    %eax$/;"	l
c010c2f1	obj/kernel.asm	/^c010c2f1:	eb 03                	jmp    c010c2f6 <strtol+0x15c>$/;"	l
c010c2f3	obj/kernel.asm	/^c010c2f3:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c2f6	obj/kernel.asm	/^c010c2f6:	c9                   	leave  $/;"	l
c010c2f7	obj/kernel.asm	/^c010c2f7:	c3                   	ret    $/;"	l
c010c2f8	obj/kernel.asm	/^c010c2f8 <memset>:$/;"	l
c010c2f8	obj/kernel.asm	/^c010c2f8:	55                   	push   %ebp$/;"	l
c010c2f9	obj/kernel.asm	/^c010c2f9:	89 e5                	mov    %esp,%ebp$/;"	l
c010c2fb	obj/kernel.asm	/^c010c2fb:	57                   	push   %edi$/;"	l
c010c2fc	obj/kernel.asm	/^c010c2fc:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010c2ff	obj/kernel.asm	/^c010c2ff:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c302	obj/kernel.asm	/^c010c302:	88 45 d8             	mov    %al,-0x28(%ebp)$/;"	l
c010c305	obj/kernel.asm	/^c010c305:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
c010c309	obj/kernel.asm	/^c010c309:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c30c	obj/kernel.asm	/^c010c30c:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c010c30f	obj/kernel.asm	/^c010c30f:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c010c312	obj/kernel.asm	/^c010c312:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c315	obj/kernel.asm	/^c010c315:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c318	obj/kernel.asm	/^c010c318:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c010c31b	obj/kernel.asm	/^c010c31b:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax$/;"	l
c010c31f	obj/kernel.asm	/^c010c31f:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010c322	obj/kernel.asm	/^c010c322:	89 d7                	mov    %edx,%edi$/;"	l
c010c324	obj/kernel.asm	/^c010c324:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
c010c326	obj/kernel.asm	/^c010c326:	89 fa                	mov    %edi,%edx$/;"	l
c010c328	obj/kernel.asm	/^c010c328:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c010c32b	obj/kernel.asm	/^c010c32b:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010c32e	obj/kernel.asm	/^c010c32e:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c331	obj/kernel.asm	/^c010c331:	90                   	nop$/;"	l
c010c332	obj/kernel.asm	/^c010c332:	83 c4 24             	add    $0x24,%esp$/;"	l
c010c335	obj/kernel.asm	/^c010c335:	5f                   	pop    %edi$/;"	l
c010c336	obj/kernel.asm	/^c010c336:	5d                   	pop    %ebp$/;"	l
c010c337	obj/kernel.asm	/^c010c337:	c3                   	ret    $/;"	l
c010c338	obj/kernel.asm	/^c010c338 <memmove>:$/;"	l
c010c338	obj/kernel.asm	/^c010c338:	55                   	push   %ebp$/;"	l
c010c339	obj/kernel.asm	/^c010c339:	89 e5                	mov    %esp,%ebp$/;"	l
c010c33b	obj/kernel.asm	/^c010c33b:	57                   	push   %edi$/;"	l
c010c33c	obj/kernel.asm	/^c010c33c:	56                   	push   %esi$/;"	l
c010c33d	obj/kernel.asm	/^c010c33d:	53                   	push   %ebx$/;"	l
c010c33e	obj/kernel.asm	/^c010c33e:	83 ec 30             	sub    $0x30,%esp$/;"	l
c010c341	obj/kernel.asm	/^c010c341:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c344	obj/kernel.asm	/^c010c344:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c347	obj/kernel.asm	/^c010c347:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c34a	obj/kernel.asm	/^c010c34a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c34d	obj/kernel.asm	/^c010c34d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c350	obj/kernel.asm	/^c010c350:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c353	obj/kernel.asm	/^c010c353:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c356	obj/kernel.asm	/^c010c356:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010c359	obj/kernel.asm	/^c010c359:	73 42                	jae    c010c39d <memmove+0x65>$/;"	l
c010c35b	obj/kernel.asm	/^c010c35b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c35e	obj/kernel.asm	/^c010c35e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010c361	obj/kernel.asm	/^c010c361:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c364	obj/kernel.asm	/^c010c364:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010c367	obj/kernel.asm	/^c010c367:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c36a	obj/kernel.asm	/^c010c36a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010c36d	obj/kernel.asm	/^c010c36d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010c370	obj/kernel.asm	/^c010c370:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010c373	obj/kernel.asm	/^c010c373:	89 c1                	mov    %eax,%ecx$/;"	l
c010c375	obj/kernel.asm	/^c010c375:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010c378	obj/kernel.asm	/^c010c378:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010c37b	obj/kernel.asm	/^c010c37b:	89 d7                	mov    %edx,%edi$/;"	l
c010c37d	obj/kernel.asm	/^c010c37d:	89 c6                	mov    %eax,%esi$/;"	l
c010c37f	obj/kernel.asm	/^c010c37f:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c010c381	obj/kernel.asm	/^c010c381:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c010c384	obj/kernel.asm	/^c010c384:	83 e1 03             	and    $0x3,%ecx$/;"	l
c010c387	obj/kernel.asm	/^c010c387:	74 02                	je     c010c38b <memmove+0x53>$/;"	l
c010c389	obj/kernel.asm	/^c010c389:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c010c38b	obj/kernel.asm	/^c010c38b:	89 f0                	mov    %esi,%eax$/;"	l
c010c38d	obj/kernel.asm	/^c010c38d:	89 fa                	mov    %edi,%edx$/;"	l
c010c38f	obj/kernel.asm	/^c010c38f:	89 4d d8             	mov    %ecx,-0x28(%ebp)$/;"	l
c010c392	obj/kernel.asm	/^c010c392:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010c395	obj/kernel.asm	/^c010c395:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010c398	obj/kernel.asm	/^c010c398:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c39b	obj/kernel.asm	/^c010c39b:	eb 36                	jmp    c010c3d3 <memmove+0x9b>$/;"	l
c010c39d	obj/kernel.asm	/^c010c39d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c3a0	obj/kernel.asm	/^c010c3a0:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010c3a3	obj/kernel.asm	/^c010c3a3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c3a6	obj/kernel.asm	/^c010c3a6:	01 c2                	add    %eax,%edx$/;"	l
c010c3a8	obj/kernel.asm	/^c010c3a8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c3ab	obj/kernel.asm	/^c010c3ab:	8d 48 ff             	lea    -0x1(%eax),%ecx$/;"	l
c010c3ae	obj/kernel.asm	/^c010c3ae:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c3b1	obj/kernel.asm	/^c010c3b1:	8d 1c 01             	lea    (%ecx,%eax,1),%ebx$/;"	l
c010c3b4	obj/kernel.asm	/^c010c3b4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c3b7	obj/kernel.asm	/^c010c3b7:	89 c1                	mov    %eax,%ecx$/;"	l
c010c3b9	obj/kernel.asm	/^c010c3b9:	89 d8                	mov    %ebx,%eax$/;"	l
c010c3bb	obj/kernel.asm	/^c010c3bb:	89 d6                	mov    %edx,%esi$/;"	l
c010c3bd	obj/kernel.asm	/^c010c3bd:	89 c7                	mov    %eax,%edi$/;"	l
c010c3bf	obj/kernel.asm	/^c010c3bf:	fd                   	std    $/;"	l
c010c3c0	obj/kernel.asm	/^c010c3c0:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c010c3c2	obj/kernel.asm	/^c010c3c2:	fc                   	cld    $/;"	l
c010c3c3	obj/kernel.asm	/^c010c3c3:	89 f8                	mov    %edi,%eax$/;"	l
c010c3c5	obj/kernel.asm	/^c010c3c5:	89 f2                	mov    %esi,%edx$/;"	l
c010c3c7	obj/kernel.asm	/^c010c3c7:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
c010c3ca	obj/kernel.asm	/^c010c3ca:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c010c3cd	obj/kernel.asm	/^c010c3cd:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010c3d0	obj/kernel.asm	/^c010c3d0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c3d3	obj/kernel.asm	/^c010c3d3:	83 c4 30             	add    $0x30,%esp$/;"	l
c010c3d6	obj/kernel.asm	/^c010c3d6:	5b                   	pop    %ebx$/;"	l
c010c3d7	obj/kernel.asm	/^c010c3d7:	5e                   	pop    %esi$/;"	l
c010c3d8	obj/kernel.asm	/^c010c3d8:	5f                   	pop    %edi$/;"	l
c010c3d9	obj/kernel.asm	/^c010c3d9:	5d                   	pop    %ebp$/;"	l
c010c3da	obj/kernel.asm	/^c010c3da:	c3                   	ret    $/;"	l
c010c3db	obj/kernel.asm	/^c010c3db <memcpy>:$/;"	l
c010c3db	obj/kernel.asm	/^c010c3db:	55                   	push   %ebp$/;"	l
c010c3dc	obj/kernel.asm	/^c010c3dc:	89 e5                	mov    %esp,%ebp$/;"	l
c010c3de	obj/kernel.asm	/^c010c3de:	57                   	push   %edi$/;"	l
c010c3df	obj/kernel.asm	/^c010c3df:	56                   	push   %esi$/;"	l
c010c3e0	obj/kernel.asm	/^c010c3e0:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010c3e3	obj/kernel.asm	/^c010c3e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c3e6	obj/kernel.asm	/^c010c3e6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c3e9	obj/kernel.asm	/^c010c3e9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c3ec	obj/kernel.asm	/^c010c3ec:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c3ef	obj/kernel.asm	/^c010c3ef:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c3f2	obj/kernel.asm	/^c010c3f2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c3f5	obj/kernel.asm	/^c010c3f5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c3f8	obj/kernel.asm	/^c010c3f8:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010c3fb	obj/kernel.asm	/^c010c3fb:	89 c1                	mov    %eax,%ecx$/;"	l
c010c3fd	obj/kernel.asm	/^c010c3fd:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c400	obj/kernel.asm	/^c010c400:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c403	obj/kernel.asm	/^c010c403:	89 d7                	mov    %edx,%edi$/;"	l
c010c405	obj/kernel.asm	/^c010c405:	89 c6                	mov    %eax,%esi$/;"	l
c010c407	obj/kernel.asm	/^c010c407:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c010c409	obj/kernel.asm	/^c010c409:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
c010c40c	obj/kernel.asm	/^c010c40c:	83 e1 03             	and    $0x3,%ecx$/;"	l
c010c40f	obj/kernel.asm	/^c010c40f:	74 02                	je     c010c413 <memcpy+0x38>$/;"	l
c010c411	obj/kernel.asm	/^c010c411:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c010c413	obj/kernel.asm	/^c010c413:	89 f0                	mov    %esi,%eax$/;"	l
c010c415	obj/kernel.asm	/^c010c415:	89 fa                	mov    %edi,%edx$/;"	l
c010c417	obj/kernel.asm	/^c010c417:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c010c41a	obj/kernel.asm	/^c010c41a:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010c41d	obj/kernel.asm	/^c010c41d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010c420	obj/kernel.asm	/^c010c420:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c423	obj/kernel.asm	/^c010c423:	90                   	nop$/;"	l
c010c424	obj/kernel.asm	/^c010c424:	83 c4 20             	add    $0x20,%esp$/;"	l
c010c427	obj/kernel.asm	/^c010c427:	5e                   	pop    %esi$/;"	l
c010c428	obj/kernel.asm	/^c010c428:	5f                   	pop    %edi$/;"	l
c010c429	obj/kernel.asm	/^c010c429:	5d                   	pop    %ebp$/;"	l
c010c42a	obj/kernel.asm	/^c010c42a:	c3                   	ret    $/;"	l
c010c42b	obj/kernel.asm	/^c010c42b <memcmp>:$/;"	l
c010c42b	obj/kernel.asm	/^c010c42b:	55                   	push   %ebp$/;"	l
c010c42c	obj/kernel.asm	/^c010c42c:	89 e5                	mov    %esp,%ebp$/;"	l
c010c42e	obj/kernel.asm	/^c010c42e:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010c431	obj/kernel.asm	/^c010c431:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c434	obj/kernel.asm	/^c010c434:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010c437	obj/kernel.asm	/^c010c437:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c43a	obj/kernel.asm	/^c010c43a:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010c43d	obj/kernel.asm	/^c010c43d:	eb 30                	jmp    c010c46f <memcmp+0x44>$/;"	l
c010c43f	obj/kernel.asm	/^c010c43f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c442	obj/kernel.asm	/^c010c442:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c010c445	obj/kernel.asm	/^c010c445:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c448	obj/kernel.asm	/^c010c448:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c44b	obj/kernel.asm	/^c010c44b:	38 c2                	cmp    %al,%dl$/;"	l
c010c44d	obj/kernel.asm	/^c010c44d:	74 18                	je     c010c467 <memcmp+0x3c>$/;"	l
c010c44f	obj/kernel.asm	/^c010c44f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010c452	obj/kernel.asm	/^c010c452:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c455	obj/kernel.asm	/^c010c455:	0f b6 d0             	movzbl %al,%edx$/;"	l
c010c458	obj/kernel.asm	/^c010c458:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010c45b	obj/kernel.asm	/^c010c45b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c45e	obj/kernel.asm	/^c010c45e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010c461	obj/kernel.asm	/^c010c461:	29 c2                	sub    %eax,%edx$/;"	l
c010c463	obj/kernel.asm	/^c010c463:	89 d0                	mov    %edx,%eax$/;"	l
c010c465	obj/kernel.asm	/^c010c465:	eb 1a                	jmp    c010c481 <memcmp+0x56>$/;"	l
c010c467	obj/kernel.asm	/^c010c467:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010c46b	obj/kernel.asm	/^c010c46b:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
c010c46f	obj/kernel.asm	/^c010c46f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c472	obj/kernel.asm	/^c010c472:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010c475	obj/kernel.asm	/^c010c475:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c010c478	obj/kernel.asm	/^c010c478:	85 c0                	test   %eax,%eax$/;"	l
c010c47a	obj/kernel.asm	/^c010c47a:	75 c3                	jne    c010c43f <memcmp+0x14>$/;"	l
c010c47c	obj/kernel.asm	/^c010c47c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c481	obj/kernel.asm	/^c010c481:	c9                   	leave  $/;"	l
c010c482	obj/kernel.asm	/^c010c482:	c3                   	ret    $/;"	l
c010c483	obj/kernel.asm	/^c010c483 <printnum>:$/;"	l
c010c483	obj/kernel.asm	/^c010c483:	55                   	push   %ebp$/;"	l
c010c484	obj/kernel.asm	/^c010c484:	89 e5                	mov    %esp,%ebp$/;"	l
c010c486	obj/kernel.asm	/^c010c486:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010c489	obj/kernel.asm	/^c010c489:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c48c	obj/kernel.asm	/^c010c48c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010c48f	obj/kernel.asm	/^c010c48f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010c492	obj/kernel.asm	/^c010c492:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010c495	obj/kernel.asm	/^c010c495:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010c498	obj/kernel.asm	/^c010c498:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010c49b	obj/kernel.asm	/^c010c49b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c49e	obj/kernel.asm	/^c010c49e:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010c4a1	obj/kernel.asm	/^c010c4a1:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010c4a4	obj/kernel.asm	/^c010c4a4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010c4a7	obj/kernel.asm	/^c010c4a7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c4aa	obj/kernel.asm	/^c010c4aa:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010c4ad	obj/kernel.asm	/^c010c4ad:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010c4b0	obj/kernel.asm	/^c010c4b0:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c010c4b3	obj/kernel.asm	/^c010c4b3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c4b6	obj/kernel.asm	/^c010c4b6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c4b9	obj/kernel.asm	/^c010c4b9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010c4bd	obj/kernel.asm	/^c010c4bd:	74 1c                	je     c010c4db <printnum+0x58>$/;"	l
c010c4bf	obj/kernel.asm	/^c010c4bf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c4c2	obj/kernel.asm	/^c010c4c2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010c4c7	obj/kernel.asm	/^c010c4c7:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c010c4ca	obj/kernel.asm	/^c010c4ca:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010c4cd	obj/kernel.asm	/^c010c4cd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c4d0	obj/kernel.asm	/^c010c4d0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010c4d5	obj/kernel.asm	/^c010c4d5:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c010c4d8	obj/kernel.asm	/^c010c4d8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c4db	obj/kernel.asm	/^c010c4db:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010c4de	obj/kernel.asm	/^c010c4de:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c4e1	obj/kernel.asm	/^c010c4e1:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c010c4e4	obj/kernel.asm	/^c010c4e4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010c4e7	obj/kernel.asm	/^c010c4e7:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
c010c4ea	obj/kernel.asm	/^c010c4ea:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010c4ed	obj/kernel.asm	/^c010c4ed:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010c4f0	obj/kernel.asm	/^c010c4f0:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c4f3	obj/kernel.asm	/^c010c4f3:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010c4f6	obj/kernel.asm	/^c010c4f6:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010c4f9	obj/kernel.asm	/^c010c4f9:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010c4fc	obj/kernel.asm	/^c010c4fc:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010c4ff	obj/kernel.asm	/^c010c4ff:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010c504	obj/kernel.asm	/^c010c504:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c010c507	obj/kernel.asm	/^c010c507:	77 41                	ja     c010c54a <printnum+0xc7>$/;"	l
c010c509	obj/kernel.asm	/^c010c509:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c010c50c	obj/kernel.asm	/^c010c50c:	72 05                	jb     c010c513 <printnum+0x90>$/;"	l
c010c50e	obj/kernel.asm	/^c010c50e:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c010c511	obj/kernel.asm	/^c010c511:	77 37                	ja     c010c54a <printnum+0xc7>$/;"	l
c010c513	obj/kernel.asm	/^c010c513:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c010c516	obj/kernel.asm	/^c010c516:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010c519	obj/kernel.asm	/^c010c519:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c51c	obj/kernel.asm	/^c010c51c:	ff 75 20             	pushl  0x20(%ebp)$/;"	l
c010c51f	obj/kernel.asm	/^c010c51f:	50                   	push   %eax$/;"	l
c010c520	obj/kernel.asm	/^c010c520:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
c010c523	obj/kernel.asm	/^c010c523:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010c526	obj/kernel.asm	/^c010c526:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010c529	obj/kernel.asm	/^c010c529:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c52c	obj/kernel.asm	/^c010c52c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c52f	obj/kernel.asm	/^c010c52f:	e8 4f ff ff ff       	call   c010c483 <printnum>$/;"	l
c010c534	obj/kernel.asm	/^c010c534:	83 c4 20             	add    $0x20,%esp$/;"	l
c010c537	obj/kernel.asm	/^c010c537:	eb 1b                	jmp    c010c554 <printnum+0xd1>$/;"	l
c010c539	obj/kernel.asm	/^c010c539:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c53c	obj/kernel.asm	/^c010c53c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c53f	obj/kernel.asm	/^c010c53f:	ff 75 20             	pushl  0x20(%ebp)$/;"	l
c010c542	obj/kernel.asm	/^c010c542:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c545	obj/kernel.asm	/^c010c545:	ff d0                	call   *%eax$/;"	l
c010c547	obj/kernel.asm	/^c010c547:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c54a	obj/kernel.asm	/^c010c54a:	83 6d 1c 01          	subl   $0x1,0x1c(%ebp)$/;"	l
c010c54e	obj/kernel.asm	/^c010c54e:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c010c552	obj/kernel.asm	/^c010c552:	7f e5                	jg     c010c539 <printnum+0xb6>$/;"	l
c010c554	obj/kernel.asm	/^c010c554:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010c557	obj/kernel.asm	/^c010c557:	05 e4 f7 10 c0       	add    $0xc010f7e4,%eax$/;"	l
c010c55c	obj/kernel.asm	/^c010c55c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c55f	obj/kernel.asm	/^c010c55f:	0f be c0             	movsbl %al,%eax$/;"	l
c010c562	obj/kernel.asm	/^c010c562:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c565	obj/kernel.asm	/^c010c565:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c568	obj/kernel.asm	/^c010c568:	50                   	push   %eax$/;"	l
c010c569	obj/kernel.asm	/^c010c569:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c56c	obj/kernel.asm	/^c010c56c:	ff d0                	call   *%eax$/;"	l
c010c56e	obj/kernel.asm	/^c010c56e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c571	obj/kernel.asm	/^c010c571:	c9                   	leave  $/;"	l
c010c572	obj/kernel.asm	/^c010c572:	c3                   	ret    $/;"	l
c010c573	obj/kernel.asm	/^c010c573 <getuint>:$/;"	l
c010c573	obj/kernel.asm	/^c010c573:	55                   	push   %ebp$/;"	l
c010c574	obj/kernel.asm	/^c010c574:	89 e5                	mov    %esp,%ebp$/;"	l
c010c576	obj/kernel.asm	/^c010c576:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c010c57a	obj/kernel.asm	/^c010c57a:	7e 14                	jle    c010c590 <getuint+0x1d>$/;"	l
c010c57c	obj/kernel.asm	/^c010c57c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c57f	obj/kernel.asm	/^c010c57f:	8b 00                	mov    (%eax),%eax$/;"	l
c010c581	obj/kernel.asm	/^c010c581:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c010c584	obj/kernel.asm	/^c010c584:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c587	obj/kernel.asm	/^c010c587:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010c589	obj/kernel.asm	/^c010c589:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010c58c	obj/kernel.asm	/^c010c58c:	8b 00                	mov    (%eax),%eax$/;"	l
c010c58e	obj/kernel.asm	/^c010c58e:	eb 30                	jmp    c010c5c0 <getuint+0x4d>$/;"	l
c010c590	obj/kernel.asm	/^c010c590:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010c594	obj/kernel.asm	/^c010c594:	74 16                	je     c010c5ac <getuint+0x39>$/;"	l
c010c596	obj/kernel.asm	/^c010c596:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c599	obj/kernel.asm	/^c010c599:	8b 00                	mov    (%eax),%eax$/;"	l
c010c59b	obj/kernel.asm	/^c010c59b:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010c59e	obj/kernel.asm	/^c010c59e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c5a1	obj/kernel.asm	/^c010c5a1:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010c5a3	obj/kernel.asm	/^c010c5a3:	8b 00                	mov    (%eax),%eax$/;"	l
c010c5a5	obj/kernel.asm	/^c010c5a5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010c5aa	obj/kernel.asm	/^c010c5aa:	eb 14                	jmp    c010c5c0 <getuint+0x4d>$/;"	l
c010c5ac	obj/kernel.asm	/^c010c5ac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c5af	obj/kernel.asm	/^c010c5af:	8b 00                	mov    (%eax),%eax$/;"	l
c010c5b1	obj/kernel.asm	/^c010c5b1:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010c5b4	obj/kernel.asm	/^c010c5b4:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c5b7	obj/kernel.asm	/^c010c5b7:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010c5b9	obj/kernel.asm	/^c010c5b9:	8b 00                	mov    (%eax),%eax$/;"	l
c010c5bb	obj/kernel.asm	/^c010c5bb:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010c5c0	obj/kernel.asm	/^c010c5c0:	5d                   	pop    %ebp$/;"	l
c010c5c1	obj/kernel.asm	/^c010c5c1:	c3                   	ret    $/;"	l
c010c5c2	obj/kernel.asm	/^c010c5c2 <getint>:$/;"	l
c010c5c2	obj/kernel.asm	/^c010c5c2:	55                   	push   %ebp$/;"	l
c010c5c3	obj/kernel.asm	/^c010c5c3:	89 e5                	mov    %esp,%ebp$/;"	l
c010c5c5	obj/kernel.asm	/^c010c5c5:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c010c5c9	obj/kernel.asm	/^c010c5c9:	7e 14                	jle    c010c5df <getint+0x1d>$/;"	l
c010c5cb	obj/kernel.asm	/^c010c5cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c5ce	obj/kernel.asm	/^c010c5ce:	8b 00                	mov    (%eax),%eax$/;"	l
c010c5d0	obj/kernel.asm	/^c010c5d0:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c010c5d3	obj/kernel.asm	/^c010c5d3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c5d6	obj/kernel.asm	/^c010c5d6:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010c5d8	obj/kernel.asm	/^c010c5d8:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010c5db	obj/kernel.asm	/^c010c5db:	8b 00                	mov    (%eax),%eax$/;"	l
c010c5dd	obj/kernel.asm	/^c010c5dd:	eb 28                	jmp    c010c607 <getint+0x45>$/;"	l
c010c5df	obj/kernel.asm	/^c010c5df:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010c5e3	obj/kernel.asm	/^c010c5e3:	74 12                	je     c010c5f7 <getint+0x35>$/;"	l
c010c5e5	obj/kernel.asm	/^c010c5e5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c5e8	obj/kernel.asm	/^c010c5e8:	8b 00                	mov    (%eax),%eax$/;"	l
c010c5ea	obj/kernel.asm	/^c010c5ea:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010c5ed	obj/kernel.asm	/^c010c5ed:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c5f0	obj/kernel.asm	/^c010c5f0:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010c5f2	obj/kernel.asm	/^c010c5f2:	8b 00                	mov    (%eax),%eax$/;"	l
c010c5f4	obj/kernel.asm	/^c010c5f4:	99                   	cltd   $/;"	l
c010c5f5	obj/kernel.asm	/^c010c5f5:	eb 10                	jmp    c010c607 <getint+0x45>$/;"	l
c010c5f7	obj/kernel.asm	/^c010c5f7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c5fa	obj/kernel.asm	/^c010c5fa:	8b 00                	mov    (%eax),%eax$/;"	l
c010c5fc	obj/kernel.asm	/^c010c5fc:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010c5ff	obj/kernel.asm	/^c010c5ff:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c602	obj/kernel.asm	/^c010c602:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010c604	obj/kernel.asm	/^c010c604:	8b 00                	mov    (%eax),%eax$/;"	l
c010c606	obj/kernel.asm	/^c010c606:	99                   	cltd   $/;"	l
c010c607	obj/kernel.asm	/^c010c607:	5d                   	pop    %ebp$/;"	l
c010c608	obj/kernel.asm	/^c010c608:	c3                   	ret    $/;"	l
c010c609	obj/kernel.asm	/^c010c609 <printfmt>:$/;"	l
c010c609	obj/kernel.asm	/^c010c609:	55                   	push   %ebp$/;"	l
c010c60a	obj/kernel.asm	/^c010c60a:	89 e5                	mov    %esp,%ebp$/;"	l
c010c60c	obj/kernel.asm	/^c010c60c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c60f	obj/kernel.asm	/^c010c60f:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010c612	obj/kernel.asm	/^c010c612:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c615	obj/kernel.asm	/^c010c615:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c618	obj/kernel.asm	/^c010c618:	50                   	push   %eax$/;"	l
c010c619	obj/kernel.asm	/^c010c619:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010c61c	obj/kernel.asm	/^c010c61c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c61f	obj/kernel.asm	/^c010c61f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c622	obj/kernel.asm	/^c010c622:	e8 05 00 00 00       	call   c010c62c <vprintfmt>$/;"	l
c010c627	obj/kernel.asm	/^c010c627:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c62a	obj/kernel.asm	/^c010c62a:	c9                   	leave  $/;"	l
c010c62b	obj/kernel.asm	/^c010c62b:	c3                   	ret    $/;"	l
c010c62c	obj/kernel.asm	/^c010c62c <vprintfmt>:$/;"	l
c010c62c	obj/kernel.asm	/^c010c62c:	55                   	push   %ebp$/;"	l
c010c62d	obj/kernel.asm	/^c010c62d:	89 e5                	mov    %esp,%ebp$/;"	l
c010c62f	obj/kernel.asm	/^c010c62f:	56                   	push   %esi$/;"	l
c010c630	obj/kernel.asm	/^c010c630:	53                   	push   %ebx$/;"	l
c010c631	obj/kernel.asm	/^c010c631:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010c634	obj/kernel.asm	/^c010c634:	eb 18                	jmp    c010c64e <vprintfmt+0x22>$/;"	l
c010c636	obj/kernel.asm	/^c010c636:	85 db                	test   %ebx,%ebx$/;"	l
c010c638	obj/kernel.asm	/^c010c638:	75 05                	jne    c010c63f <vprintfmt+0x13>$/;"	l
c010c63a	obj/kernel.asm	/^c010c63a:	e9 8b 03 00 00       	jmp    c010c9ca <vprintfmt+0x39e>$/;"	l
c010c63f	obj/kernel.asm	/^c010c63f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c642	obj/kernel.asm	/^c010c642:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c645	obj/kernel.asm	/^c010c645:	53                   	push   %ebx$/;"	l
c010c646	obj/kernel.asm	/^c010c646:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c649	obj/kernel.asm	/^c010c649:	ff d0                	call   *%eax$/;"	l
c010c64b	obj/kernel.asm	/^c010c64b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c64e	obj/kernel.asm	/^c010c64e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c651	obj/kernel.asm	/^c010c651:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010c654	obj/kernel.asm	/^c010c654:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c010c657	obj/kernel.asm	/^c010c657:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c65a	obj/kernel.asm	/^c010c65a:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c010c65d	obj/kernel.asm	/^c010c65d:	83 fb 25             	cmp    $0x25,%ebx$/;"	l
c010c660	obj/kernel.asm	/^c010c660:	75 d4                	jne    c010c636 <vprintfmt+0xa>$/;"	l
c010c662	obj/kernel.asm	/^c010c662:	c6 45 db 20          	movb   $0x20,-0x25(%ebp)$/;"	l
c010c666	obj/kernel.asm	/^c010c666:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c010c66d	obj/kernel.asm	/^c010c66d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c670	obj/kernel.asm	/^c010c670:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c673	obj/kernel.asm	/^c010c673:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c010c67a	obj/kernel.asm	/^c010c67a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010c67d	obj/kernel.asm	/^c010c67d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010c680	obj/kernel.asm	/^c010c680:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c683	obj/kernel.asm	/^c010c683:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010c686	obj/kernel.asm	/^c010c686:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c010c689	obj/kernel.asm	/^c010c689:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c68c	obj/kernel.asm	/^c010c68c:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c010c68f	obj/kernel.asm	/^c010c68f:	8d 43 dd             	lea    -0x23(%ebx),%eax$/;"	l
c010c692	obj/kernel.asm	/^c010c692:	83 f8 55             	cmp    $0x55,%eax$/;"	l
c010c695	obj/kernel.asm	/^c010c695:	0f 87 02 03 00 00    	ja     c010c99d <vprintfmt+0x371>$/;"	l
c010c69b	obj/kernel.asm	/^c010c69b:	8b 04 85 08 f8 10 c0 	mov    -0x3fef07f8(,%eax,4),%eax$/;"	l
c010c6a2	obj/kernel.asm	/^c010c6a2:	ff e0                	jmp    *%eax$/;"	l
c010c6a4	obj/kernel.asm	/^c010c6a4:	c6 45 db 2d          	movb   $0x2d,-0x25(%ebp)$/;"	l
c010c6a8	obj/kernel.asm	/^c010c6a8:	eb d6                	jmp    c010c680 <vprintfmt+0x54>$/;"	l
c010c6aa	obj/kernel.asm	/^c010c6aa:	c6 45 db 30          	movb   $0x30,-0x25(%ebp)$/;"	l
c010c6ae	obj/kernel.asm	/^c010c6ae:	eb d0                	jmp    c010c680 <vprintfmt+0x54>$/;"	l
c010c6b0	obj/kernel.asm	/^c010c6b0:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c010c6b7	obj/kernel.asm	/^c010c6b7:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010c6ba	obj/kernel.asm	/^c010c6ba:	89 d0                	mov    %edx,%eax$/;"	l
c010c6bc	obj/kernel.asm	/^c010c6bc:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010c6bf	obj/kernel.asm	/^c010c6bf:	01 d0                	add    %edx,%eax$/;"	l
c010c6c1	obj/kernel.asm	/^c010c6c1:	01 c0                	add    %eax,%eax$/;"	l
c010c6c3	obj/kernel.asm	/^c010c6c3:	01 d8                	add    %ebx,%eax$/;"	l
c010c6c5	obj/kernel.asm	/^c010c6c5:	83 e8 30             	sub    $0x30,%eax$/;"	l
c010c6c8	obj/kernel.asm	/^c010c6c8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010c6cb	obj/kernel.asm	/^c010c6cb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c6ce	obj/kernel.asm	/^c010c6ce:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c6d1	obj/kernel.asm	/^c010c6d1:	0f be d8             	movsbl %al,%ebx$/;"	l
c010c6d4	obj/kernel.asm	/^c010c6d4:	83 fb 2f             	cmp    $0x2f,%ebx$/;"	l
c010c6d7	obj/kernel.asm	/^c010c6d7:	7e 0b                	jle    c010c6e4 <vprintfmt+0xb8>$/;"	l
c010c6d9	obj/kernel.asm	/^c010c6d9:	83 fb 39             	cmp    $0x39,%ebx$/;"	l
c010c6dc	obj/kernel.asm	/^c010c6dc:	7f 06                	jg     c010c6e4 <vprintfmt+0xb8>$/;"	l
c010c6de	obj/kernel.asm	/^c010c6de:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c010c6e2	obj/kernel.asm	/^c010c6e2:	eb d3                	jmp    c010c6b7 <vprintfmt+0x8b>$/;"	l
c010c6e4	obj/kernel.asm	/^c010c6e4:	eb 2e                	jmp    c010c714 <vprintfmt+0xe8>$/;"	l
c010c6e6	obj/kernel.asm	/^c010c6e6:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010c6e9	obj/kernel.asm	/^c010c6e9:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010c6ec	obj/kernel.asm	/^c010c6ec:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010c6ef	obj/kernel.asm	/^c010c6ef:	8b 00                	mov    (%eax),%eax$/;"	l
c010c6f1	obj/kernel.asm	/^c010c6f1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010c6f4	obj/kernel.asm	/^c010c6f4:	eb 1e                	jmp    c010c714 <vprintfmt+0xe8>$/;"	l
c010c6f6	obj/kernel.asm	/^c010c6f6:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010c6fa	obj/kernel.asm	/^c010c6fa:	79 07                	jns    c010c703 <vprintfmt+0xd7>$/;"	l
c010c6fc	obj/kernel.asm	/^c010c6fc:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c010c703	obj/kernel.asm	/^c010c703:	e9 78 ff ff ff       	jmp    c010c680 <vprintfmt+0x54>$/;"	l
c010c708	obj/kernel.asm	/^c010c708:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
c010c70f	obj/kernel.asm	/^c010c70f:	e9 6c ff ff ff       	jmp    c010c680 <vprintfmt+0x54>$/;"	l
c010c714	obj/kernel.asm	/^c010c714:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010c718	obj/kernel.asm	/^c010c718:	79 0d                	jns    c010c727 <vprintfmt+0xfb>$/;"	l
c010c71a	obj/kernel.asm	/^c010c71a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c71d	obj/kernel.asm	/^c010c71d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c720	obj/kernel.asm	/^c010c720:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c010c727	obj/kernel.asm	/^c010c727:	e9 54 ff ff ff       	jmp    c010c680 <vprintfmt+0x54>$/;"	l
c010c72c	obj/kernel.asm	/^c010c72c:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
c010c730	obj/kernel.asm	/^c010c730:	e9 4b ff ff ff       	jmp    c010c680 <vprintfmt+0x54>$/;"	l
c010c735	obj/kernel.asm	/^c010c735:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010c738	obj/kernel.asm	/^c010c738:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010c73b	obj/kernel.asm	/^c010c73b:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010c73e	obj/kernel.asm	/^c010c73e:	8b 00                	mov    (%eax),%eax$/;"	l
c010c740	obj/kernel.asm	/^c010c740:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c743	obj/kernel.asm	/^c010c743:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c746	obj/kernel.asm	/^c010c746:	50                   	push   %eax$/;"	l
c010c747	obj/kernel.asm	/^c010c747:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c74a	obj/kernel.asm	/^c010c74a:	ff d0                	call   *%eax$/;"	l
c010c74c	obj/kernel.asm	/^c010c74c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c74f	obj/kernel.asm	/^c010c74f:	e9 71 02 00 00       	jmp    c010c9c5 <vprintfmt+0x399>$/;"	l
c010c754	obj/kernel.asm	/^c010c754:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010c757	obj/kernel.asm	/^c010c757:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010c75a	obj/kernel.asm	/^c010c75a:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010c75d	obj/kernel.asm	/^c010c75d:	8b 18                	mov    (%eax),%ebx$/;"	l
c010c75f	obj/kernel.asm	/^c010c75f:	85 db                	test   %ebx,%ebx$/;"	l
c010c761	obj/kernel.asm	/^c010c761:	79 02                	jns    c010c765 <vprintfmt+0x139>$/;"	l
c010c763	obj/kernel.asm	/^c010c763:	f7 db                	neg    %ebx$/;"	l
c010c765	obj/kernel.asm	/^c010c765:	83 fb 18             	cmp    $0x18,%ebx$/;"	l
c010c768	obj/kernel.asm	/^c010c768:	7f 0b                	jg     c010c775 <vprintfmt+0x149>$/;"	l
c010c76a	obj/kernel.asm	/^c010c76a:	8b 34 9d 80 f7 10 c0 	mov    -0x3fef0880(,%ebx,4),%esi$/;"	l
c010c771	obj/kernel.asm	/^c010c771:	85 f6                	test   %esi,%esi$/;"	l
c010c773	obj/kernel.asm	/^c010c773:	75 19                	jne    c010c78e <vprintfmt+0x162>$/;"	l
c010c775	obj/kernel.asm	/^c010c775:	53                   	push   %ebx$/;"	l
c010c776	obj/kernel.asm	/^c010c776:	68 f5 f7 10 c0       	push   $0xc010f7f5$/;"	l
c010c77b	obj/kernel.asm	/^c010c77b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c77e	obj/kernel.asm	/^c010c77e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c781	obj/kernel.asm	/^c010c781:	e8 83 fe ff ff       	call   c010c609 <printfmt>$/;"	l
c010c786	obj/kernel.asm	/^c010c786:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c789	obj/kernel.asm	/^c010c789:	e9 37 02 00 00       	jmp    c010c9c5 <vprintfmt+0x399>$/;"	l
c010c78e	obj/kernel.asm	/^c010c78e:	56                   	push   %esi$/;"	l
c010c78f	obj/kernel.asm	/^c010c78f:	68 fe f7 10 c0       	push   $0xc010f7fe$/;"	l
c010c794	obj/kernel.asm	/^c010c794:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c797	obj/kernel.asm	/^c010c797:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c79a	obj/kernel.asm	/^c010c79a:	e8 6a fe ff ff       	call   c010c609 <printfmt>$/;"	l
c010c79f	obj/kernel.asm	/^c010c79f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c7a2	obj/kernel.asm	/^c010c7a2:	e9 1e 02 00 00       	jmp    c010c9c5 <vprintfmt+0x399>$/;"	l
c010c7a7	obj/kernel.asm	/^c010c7a7:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010c7aa	obj/kernel.asm	/^c010c7aa:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010c7ad	obj/kernel.asm	/^c010c7ad:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010c7b0	obj/kernel.asm	/^c010c7b0:	8b 30                	mov    (%eax),%esi$/;"	l
c010c7b2	obj/kernel.asm	/^c010c7b2:	85 f6                	test   %esi,%esi$/;"	l
c010c7b4	obj/kernel.asm	/^c010c7b4:	75 05                	jne    c010c7bb <vprintfmt+0x18f>$/;"	l
c010c7b6	obj/kernel.asm	/^c010c7b6:	be 01 f8 10 c0       	mov    $0xc010f801,%esi$/;"	l
c010c7bb	obj/kernel.asm	/^c010c7bb:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010c7bf	obj/kernel.asm	/^c010c7bf:	7e 3f                	jle    c010c800 <vprintfmt+0x1d4>$/;"	l
c010c7c1	obj/kernel.asm	/^c010c7c1:	80 7d db 2d          	cmpb   $0x2d,-0x25(%ebp)$/;"	l
c010c7c5	obj/kernel.asm	/^c010c7c5:	74 39                	je     c010c800 <vprintfmt+0x1d4>$/;"	l
c010c7c7	obj/kernel.asm	/^c010c7c7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010c7ca	obj/kernel.asm	/^c010c7ca:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c7cd	obj/kernel.asm	/^c010c7cd:	50                   	push   %eax$/;"	l
c010c7ce	obj/kernel.asm	/^c010c7ce:	56                   	push   %esi$/;"	l
c010c7cf	obj/kernel.asm	/^c010c7cf:	e8 1b f8 ff ff       	call   c010bfef <strnlen>$/;"	l
c010c7d4	obj/kernel.asm	/^c010c7d4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c7d7	obj/kernel.asm	/^c010c7d7:	89 c2                	mov    %eax,%edx$/;"	l
c010c7d9	obj/kernel.asm	/^c010c7d9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c7dc	obj/kernel.asm	/^c010c7dc:	29 d0                	sub    %edx,%eax$/;"	l
c010c7de	obj/kernel.asm	/^c010c7de:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c7e1	obj/kernel.asm	/^c010c7e1:	eb 17                	jmp    c010c7fa <vprintfmt+0x1ce>$/;"	l
c010c7e3	obj/kernel.asm	/^c010c7e3:	0f be 45 db          	movsbl -0x25(%ebp),%eax$/;"	l
c010c7e7	obj/kernel.asm	/^c010c7e7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c7ea	obj/kernel.asm	/^c010c7ea:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c7ed	obj/kernel.asm	/^c010c7ed:	50                   	push   %eax$/;"	l
c010c7ee	obj/kernel.asm	/^c010c7ee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c7f1	obj/kernel.asm	/^c010c7f1:	ff d0                	call   *%eax$/;"	l
c010c7f3	obj/kernel.asm	/^c010c7f3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c7f6	obj/kernel.asm	/^c010c7f6:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c010c7fa	obj/kernel.asm	/^c010c7fa:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010c7fe	obj/kernel.asm	/^c010c7fe:	7f e3                	jg     c010c7e3 <vprintfmt+0x1b7>$/;"	l
c010c800	obj/kernel.asm	/^c010c800:	eb 35                	jmp    c010c837 <vprintfmt+0x20b>$/;"	l
c010c802	obj/kernel.asm	/^c010c802:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010c806	obj/kernel.asm	/^c010c806:	74 1c                	je     c010c824 <vprintfmt+0x1f8>$/;"	l
c010c808	obj/kernel.asm	/^c010c808:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
c010c80b	obj/kernel.asm	/^c010c80b:	7e 05                	jle    c010c812 <vprintfmt+0x1e6>$/;"	l
c010c80d	obj/kernel.asm	/^c010c80d:	83 fb 7e             	cmp    $0x7e,%ebx$/;"	l
c010c810	obj/kernel.asm	/^c010c810:	7e 12                	jle    c010c824 <vprintfmt+0x1f8>$/;"	l
c010c812	obj/kernel.asm	/^c010c812:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c815	obj/kernel.asm	/^c010c815:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c818	obj/kernel.asm	/^c010c818:	6a 3f                	push   $0x3f$/;"	l
c010c81a	obj/kernel.asm	/^c010c81a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c81d	obj/kernel.asm	/^c010c81d:	ff d0                	call   *%eax$/;"	l
c010c81f	obj/kernel.asm	/^c010c81f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c822	obj/kernel.asm	/^c010c822:	eb 0f                	jmp    c010c833 <vprintfmt+0x207>$/;"	l
c010c824	obj/kernel.asm	/^c010c824:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c827	obj/kernel.asm	/^c010c827:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c82a	obj/kernel.asm	/^c010c82a:	53                   	push   %ebx$/;"	l
c010c82b	obj/kernel.asm	/^c010c82b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c82e	obj/kernel.asm	/^c010c82e:	ff d0                	call   *%eax$/;"	l
c010c830	obj/kernel.asm	/^c010c830:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c833	obj/kernel.asm	/^c010c833:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c010c837	obj/kernel.asm	/^c010c837:	89 f0                	mov    %esi,%eax$/;"	l
c010c839	obj/kernel.asm	/^c010c839:	8d 70 01             	lea    0x1(%eax),%esi$/;"	l
c010c83c	obj/kernel.asm	/^c010c83c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c83f	obj/kernel.asm	/^c010c83f:	0f be d8             	movsbl %al,%ebx$/;"	l
c010c842	obj/kernel.asm	/^c010c842:	85 db                	test   %ebx,%ebx$/;"	l
c010c844	obj/kernel.asm	/^c010c844:	74 10                	je     c010c856 <vprintfmt+0x22a>$/;"	l
c010c846	obj/kernel.asm	/^c010c846:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010c84a	obj/kernel.asm	/^c010c84a:	78 b6                	js     c010c802 <vprintfmt+0x1d6>$/;"	l
c010c84c	obj/kernel.asm	/^c010c84c:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
c010c850	obj/kernel.asm	/^c010c850:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010c854	obj/kernel.asm	/^c010c854:	79 ac                	jns    c010c802 <vprintfmt+0x1d6>$/;"	l
c010c856	obj/kernel.asm	/^c010c856:	eb 14                	jmp    c010c86c <vprintfmt+0x240>$/;"	l
c010c858	obj/kernel.asm	/^c010c858:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c85b	obj/kernel.asm	/^c010c85b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c85e	obj/kernel.asm	/^c010c85e:	6a 20                	push   $0x20$/;"	l
c010c860	obj/kernel.asm	/^c010c860:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c863	obj/kernel.asm	/^c010c863:	ff d0                	call   *%eax$/;"	l
c010c865	obj/kernel.asm	/^c010c865:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c868	obj/kernel.asm	/^c010c868:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c010c86c	obj/kernel.asm	/^c010c86c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010c870	obj/kernel.asm	/^c010c870:	7f e6                	jg     c010c858 <vprintfmt+0x22c>$/;"	l
c010c872	obj/kernel.asm	/^c010c872:	e9 4e 01 00 00       	jmp    c010c9c5 <vprintfmt+0x399>$/;"	l
c010c877	obj/kernel.asm	/^c010c877:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c87a	obj/kernel.asm	/^c010c87a:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010c87d	obj/kernel.asm	/^c010c87d:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010c880	obj/kernel.asm	/^c010c880:	50                   	push   %eax$/;"	l
c010c881	obj/kernel.asm	/^c010c881:	e8 3c fd ff ff       	call   c010c5c2 <getint>$/;"	l
c010c886	obj/kernel.asm	/^c010c886:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c889	obj/kernel.asm	/^c010c889:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c88c	obj/kernel.asm	/^c010c88c:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010c88f	obj/kernel.asm	/^c010c88f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c892	obj/kernel.asm	/^c010c892:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c895	obj/kernel.asm	/^c010c895:	85 d2                	test   %edx,%edx$/;"	l
c010c897	obj/kernel.asm	/^c010c897:	79 23                	jns    c010c8bc <vprintfmt+0x290>$/;"	l
c010c899	obj/kernel.asm	/^c010c899:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c89c	obj/kernel.asm	/^c010c89c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c89f	obj/kernel.asm	/^c010c89f:	6a 2d                	push   $0x2d$/;"	l
c010c8a1	obj/kernel.asm	/^c010c8a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c8a4	obj/kernel.asm	/^c010c8a4:	ff d0                	call   *%eax$/;"	l
c010c8a6	obj/kernel.asm	/^c010c8a6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c8a9	obj/kernel.asm	/^c010c8a9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c8ac	obj/kernel.asm	/^c010c8ac:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010c8af	obj/kernel.asm	/^c010c8af:	f7 d8                	neg    %eax$/;"	l
c010c8b1	obj/kernel.asm	/^c010c8b1:	83 d2 00             	adc    $0x0,%edx$/;"	l
c010c8b4	obj/kernel.asm	/^c010c8b4:	f7 da                	neg    %edx$/;"	l
c010c8b6	obj/kernel.asm	/^c010c8b6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c8b9	obj/kernel.asm	/^c010c8b9:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010c8bc	obj/kernel.asm	/^c010c8bc:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c010c8c3	obj/kernel.asm	/^c010c8c3:	e9 9f 00 00 00       	jmp    c010c967 <vprintfmt+0x33b>$/;"	l
c010c8c8	obj/kernel.asm	/^c010c8c8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c8cb	obj/kernel.asm	/^c010c8cb:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010c8ce	obj/kernel.asm	/^c010c8ce:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010c8d1	obj/kernel.asm	/^c010c8d1:	50                   	push   %eax$/;"	l
c010c8d2	obj/kernel.asm	/^c010c8d2:	e8 9c fc ff ff       	call   c010c573 <getuint>$/;"	l
c010c8d7	obj/kernel.asm	/^c010c8d7:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c8da	obj/kernel.asm	/^c010c8da:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c8dd	obj/kernel.asm	/^c010c8dd:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010c8e0	obj/kernel.asm	/^c010c8e0:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c010c8e7	obj/kernel.asm	/^c010c8e7:	eb 7e                	jmp    c010c967 <vprintfmt+0x33b>$/;"	l
c010c8e9	obj/kernel.asm	/^c010c8e9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c8ec	obj/kernel.asm	/^c010c8ec:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010c8ef	obj/kernel.asm	/^c010c8ef:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010c8f2	obj/kernel.asm	/^c010c8f2:	50                   	push   %eax$/;"	l
c010c8f3	obj/kernel.asm	/^c010c8f3:	e8 7b fc ff ff       	call   c010c573 <getuint>$/;"	l
c010c8f8	obj/kernel.asm	/^c010c8f8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c8fb	obj/kernel.asm	/^c010c8fb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c8fe	obj/kernel.asm	/^c010c8fe:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010c901	obj/kernel.asm	/^c010c901:	c7 45 ec 08 00 00 00 	movl   $0x8,-0x14(%ebp)$/;"	l
c010c908	obj/kernel.asm	/^c010c908:	eb 5d                	jmp    c010c967 <vprintfmt+0x33b>$/;"	l
c010c90a	obj/kernel.asm	/^c010c90a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c90d	obj/kernel.asm	/^c010c90d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c910	obj/kernel.asm	/^c010c910:	6a 30                	push   $0x30$/;"	l
c010c912	obj/kernel.asm	/^c010c912:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c915	obj/kernel.asm	/^c010c915:	ff d0                	call   *%eax$/;"	l
c010c917	obj/kernel.asm	/^c010c917:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c91a	obj/kernel.asm	/^c010c91a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c91d	obj/kernel.asm	/^c010c91d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c920	obj/kernel.asm	/^c010c920:	6a 78                	push   $0x78$/;"	l
c010c922	obj/kernel.asm	/^c010c922:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c925	obj/kernel.asm	/^c010c925:	ff d0                	call   *%eax$/;"	l
c010c927	obj/kernel.asm	/^c010c927:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c92a	obj/kernel.asm	/^c010c92a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010c92d	obj/kernel.asm	/^c010c92d:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010c930	obj/kernel.asm	/^c010c930:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010c933	obj/kernel.asm	/^c010c933:	8b 00                	mov    (%eax),%eax$/;"	l
c010c935	obj/kernel.asm	/^c010c935:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c938	obj/kernel.asm	/^c010c938:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010c93f	obj/kernel.asm	/^c010c93f:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c010c946	obj/kernel.asm	/^c010c946:	eb 1f                	jmp    c010c967 <vprintfmt+0x33b>$/;"	l
c010c948	obj/kernel.asm	/^c010c948:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c94b	obj/kernel.asm	/^c010c94b:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010c94e	obj/kernel.asm	/^c010c94e:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010c951	obj/kernel.asm	/^c010c951:	50                   	push   %eax$/;"	l
c010c952	obj/kernel.asm	/^c010c952:	e8 1c fc ff ff       	call   c010c573 <getuint>$/;"	l
c010c957	obj/kernel.asm	/^c010c957:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c95a	obj/kernel.asm	/^c010c95a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c95d	obj/kernel.asm	/^c010c95d:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010c960	obj/kernel.asm	/^c010c960:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c010c967	obj/kernel.asm	/^c010c967:	0f be 55 db          	movsbl -0x25(%ebp),%edx$/;"	l
c010c96b	obj/kernel.asm	/^c010c96b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c96e	obj/kernel.asm	/^c010c96e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c971	obj/kernel.asm	/^c010c971:	52                   	push   %edx$/;"	l
c010c972	obj/kernel.asm	/^c010c972:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010c975	obj/kernel.asm	/^c010c975:	50                   	push   %eax$/;"	l
c010c976	obj/kernel.asm	/^c010c976:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c979	obj/kernel.asm	/^c010c979:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c97c	obj/kernel.asm	/^c010c97c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c97f	obj/kernel.asm	/^c010c97f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c982	obj/kernel.asm	/^c010c982:	e8 fc fa ff ff       	call   c010c483 <printnum>$/;"	l
c010c987	obj/kernel.asm	/^c010c987:	83 c4 20             	add    $0x20,%esp$/;"	l
c010c98a	obj/kernel.asm	/^c010c98a:	eb 39                	jmp    c010c9c5 <vprintfmt+0x399>$/;"	l
c010c98c	obj/kernel.asm	/^c010c98c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c98f	obj/kernel.asm	/^c010c98f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c992	obj/kernel.asm	/^c010c992:	53                   	push   %ebx$/;"	l
c010c993	obj/kernel.asm	/^c010c993:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c996	obj/kernel.asm	/^c010c996:	ff d0                	call   *%eax$/;"	l
c010c998	obj/kernel.asm	/^c010c998:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c99b	obj/kernel.asm	/^c010c99b:	eb 28                	jmp    c010c9c5 <vprintfmt+0x399>$/;"	l
c010c99d	obj/kernel.asm	/^c010c99d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c9a0	obj/kernel.asm	/^c010c9a0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c9a3	obj/kernel.asm	/^c010c9a3:	6a 25                	push   $0x25$/;"	l
c010c9a5	obj/kernel.asm	/^c010c9a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c9a8	obj/kernel.asm	/^c010c9a8:	ff d0                	call   *%eax$/;"	l
c010c9aa	obj/kernel.asm	/^c010c9aa:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c9ad	obj/kernel.asm	/^c010c9ad:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010c9b1	obj/kernel.asm	/^c010c9b1:	eb 04                	jmp    c010c9b7 <vprintfmt+0x38b>$/;"	l
c010c9b3	obj/kernel.asm	/^c010c9b3:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010c9b7	obj/kernel.asm	/^c010c9b7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c9ba	obj/kernel.asm	/^c010c9ba:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010c9bd	obj/kernel.asm	/^c010c9bd:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010c9c0	obj/kernel.asm	/^c010c9c0:	3c 25                	cmp    $0x25,%al$/;"	l
c010c9c2	obj/kernel.asm	/^c010c9c2:	75 ef                	jne    c010c9b3 <vprintfmt+0x387>$/;"	l
c010c9c4	obj/kernel.asm	/^c010c9c4:	90                   	nop$/;"	l
c010c9c5	obj/kernel.asm	/^c010c9c5:	e9 6a fc ff ff       	jmp    c010c634 <vprintfmt+0x8>$/;"	l
c010c9ca	obj/kernel.asm	/^c010c9ca:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c010c9cd	obj/kernel.asm	/^c010c9cd:	5b                   	pop    %ebx$/;"	l
c010c9ce	obj/kernel.asm	/^c010c9ce:	5e                   	pop    %esi$/;"	l
c010c9cf	obj/kernel.asm	/^c010c9cf:	5d                   	pop    %ebp$/;"	l
c010c9d0	obj/kernel.asm	/^c010c9d0:	c3                   	ret    $/;"	l
c010c9d1	obj/kernel.asm	/^c010c9d1 <sprintputch>:$/;"	l
c010c9d1	obj/kernel.asm	/^c010c9d1:	55                   	push   %ebp$/;"	l
c010c9d2	obj/kernel.asm	/^c010c9d2:	89 e5                	mov    %esp,%ebp$/;"	l
c010c9d4	obj/kernel.asm	/^c010c9d4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c9d7	obj/kernel.asm	/^c010c9d7:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010c9da	obj/kernel.asm	/^c010c9da:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010c9dd	obj/kernel.asm	/^c010c9dd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c9e0	obj/kernel.asm	/^c010c9e0:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010c9e3	obj/kernel.asm	/^c010c9e3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c9e6	obj/kernel.asm	/^c010c9e6:	8b 10                	mov    (%eax),%edx$/;"	l
c010c9e8	obj/kernel.asm	/^c010c9e8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c9eb	obj/kernel.asm	/^c010c9eb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c9ee	obj/kernel.asm	/^c010c9ee:	39 c2                	cmp    %eax,%edx$/;"	l
c010c9f0	obj/kernel.asm	/^c010c9f0:	73 12                	jae    c010ca04 <sprintputch+0x33>$/;"	l
c010c9f2	obj/kernel.asm	/^c010c9f2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c9f5	obj/kernel.asm	/^c010c9f5:	8b 00                	mov    (%eax),%eax$/;"	l
c010c9f7	obj/kernel.asm	/^c010c9f7:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c010c9fa	obj/kernel.asm	/^c010c9fa:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010c9fd	obj/kernel.asm	/^c010c9fd:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010c9ff	obj/kernel.asm	/^c010c9ff:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010ca02	obj/kernel.asm	/^c010ca02:	88 10                	mov    %dl,(%eax)$/;"	l
c010ca04	obj/kernel.asm	/^c010ca04:	5d                   	pop    %ebp$/;"	l
c010ca05	obj/kernel.asm	/^c010ca05:	c3                   	ret    $/;"	l
c010ca06	obj/kernel.asm	/^c010ca06 <snprintf>:$/;"	l
c010ca06	obj/kernel.asm	/^c010ca06:	55                   	push   %ebp$/;"	l
c010ca07	obj/kernel.asm	/^c010ca07:	89 e5                	mov    %esp,%ebp$/;"	l
c010ca09	obj/kernel.asm	/^c010ca09:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ca0c	obj/kernel.asm	/^c010ca0c:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010ca0f	obj/kernel.asm	/^c010ca0f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ca12	obj/kernel.asm	/^c010ca12:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ca15	obj/kernel.asm	/^c010ca15:	50                   	push   %eax$/;"	l
c010ca16	obj/kernel.asm	/^c010ca16:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010ca19	obj/kernel.asm	/^c010ca19:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010ca1c	obj/kernel.asm	/^c010ca1c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ca1f	obj/kernel.asm	/^c010ca1f:	e8 0b 00 00 00       	call   c010ca2f <vsnprintf>$/;"	l
c010ca24	obj/kernel.asm	/^c010ca24:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ca27	obj/kernel.asm	/^c010ca27:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ca2a	obj/kernel.asm	/^c010ca2a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ca2d	obj/kernel.asm	/^c010ca2d:	c9                   	leave  $/;"	l
c010ca2e	obj/kernel.asm	/^c010ca2e:	c3                   	ret    $/;"	l
c010ca2f	obj/kernel.asm	/^c010ca2f <vsnprintf>:$/;"	l
c010ca2f	obj/kernel.asm	/^c010ca2f:	55                   	push   %ebp$/;"	l
c010ca30	obj/kernel.asm	/^c010ca30:	89 e5                	mov    %esp,%ebp$/;"	l
c010ca32	obj/kernel.asm	/^c010ca32:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ca35	obj/kernel.asm	/^c010ca35:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ca38	obj/kernel.asm	/^c010ca38:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ca3b	obj/kernel.asm	/^c010ca3b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ca3e	obj/kernel.asm	/^c010ca3e:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010ca41	obj/kernel.asm	/^c010ca41:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ca44	obj/kernel.asm	/^c010ca44:	01 d0                	add    %edx,%eax$/;"	l
c010ca46	obj/kernel.asm	/^c010ca46:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ca49	obj/kernel.asm	/^c010ca49:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010ca50	obj/kernel.asm	/^c010ca50:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010ca54	obj/kernel.asm	/^c010ca54:	74 0a                	je     c010ca60 <vsnprintf+0x31>$/;"	l
c010ca56	obj/kernel.asm	/^c010ca56:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010ca59	obj/kernel.asm	/^c010ca59:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ca5c	obj/kernel.asm	/^c010ca5c:	39 c2                	cmp    %eax,%edx$/;"	l
c010ca5e	obj/kernel.asm	/^c010ca5e:	76 07                	jbe    c010ca67 <vsnprintf+0x38>$/;"	l
c010ca60	obj/kernel.asm	/^c010ca60:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010ca65	obj/kernel.asm	/^c010ca65:	eb 20                	jmp    c010ca87 <vsnprintf+0x58>$/;"	l
c010ca67	obj/kernel.asm	/^c010ca67:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010ca6a	obj/kernel.asm	/^c010ca6a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010ca6d	obj/kernel.asm	/^c010ca6d:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010ca70	obj/kernel.asm	/^c010ca70:	50                   	push   %eax$/;"	l
c010ca71	obj/kernel.asm	/^c010ca71:	68 d1 c9 10 c0       	push   $0xc010c9d1$/;"	l
c010ca76	obj/kernel.asm	/^c010ca76:	e8 b1 fb ff ff       	call   c010c62c <vprintfmt>$/;"	l
c010ca7b	obj/kernel.asm	/^c010ca7b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ca7e	obj/kernel.asm	/^c010ca7e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ca81	obj/kernel.asm	/^c010ca81:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c010ca84	obj/kernel.asm	/^c010ca84:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ca87	obj/kernel.asm	/^c010ca87:	c9                   	leave  $/;"	l
c010ca88	obj/kernel.asm	/^c010ca88:	c3                   	ret    $/;"	l
c010ca89	obj/kernel.asm	/^c010ca89 <hash32>:$/;"	l
c010ca89	obj/kernel.asm	/^c010ca89:	55                   	push   %ebp$/;"	l
c010ca8a	obj/kernel.asm	/^c010ca8a:	89 e5                	mov    %esp,%ebp$/;"	l
c010ca8c	obj/kernel.asm	/^c010ca8c:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010ca8f	obj/kernel.asm	/^c010ca8f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ca92	obj/kernel.asm	/^c010ca92:	69 c0 01 00 37 9e    	imul   $0x9e370001,%eax,%eax$/;"	l
c010ca98	obj/kernel.asm	/^c010ca98:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010ca9b	obj/kernel.asm	/^c010ca9b:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
c010caa0	obj/kernel.asm	/^c010caa0:	2b 45 0c             	sub    0xc(%ebp),%eax$/;"	l
c010caa3	obj/kernel.asm	/^c010caa3:	89 c2                	mov    %eax,%edx$/;"	l
c010caa5	obj/kernel.asm	/^c010caa5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010caa8	obj/kernel.asm	/^c010caa8:	89 d1                	mov    %edx,%ecx$/;"	l
c010caaa	obj/kernel.asm	/^c010caaa:	d3 e8                	shr    %cl,%eax$/;"	d
c010caac	obj/kernel.asm	/^c010caac:	c9                   	leave  $/;"	l
c010caad	obj/kernel.asm	/^c010caad:	c3                   	ret    $/;"	l
c010caae	obj/kernel.asm	/^c010caae <rand>:$/;"	l
c010caae	obj/kernel.asm	/^c010caae:	55                   	push   %ebp$/;"	l
c010caaf	obj/kernel.asm	/^c010caaf:	89 e5                	mov    %esp,%ebp$/;"	l
c010cab1	obj/kernel.asm	/^c010cab1:	57                   	push   %edi$/;"	l
c010cab2	obj/kernel.asm	/^c010cab2:	56                   	push   %esi$/;"	l
c010cab3	obj/kernel.asm	/^c010cab3:	53                   	push   %ebx$/;"	l
c010cab4	obj/kernel.asm	/^c010cab4:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010cab7	obj/kernel.asm	/^c010cab7:	a1 40 0f 13 c0       	mov    0xc0130f40,%eax$/;"	l
c010cabc	obj/kernel.asm	/^c010cabc:	8b 15 44 0f 13 c0    	mov    0xc0130f44,%edx$/;"	l
c010cac2	obj/kernel.asm	/^c010cac2:	69 fa 6d e6 ec de    	imul   $0xdeece66d,%edx,%edi$/;"	l
c010cac8	obj/kernel.asm	/^c010cac8:	6b f0 05             	imul   $0x5,%eax,%esi$/;"	l
c010cacb	obj/kernel.asm	/^c010cacb:	01 fe                	add    %edi,%esi$/;"	l
c010cacd	obj/kernel.asm	/^c010cacd:	bf 6d e6 ec de       	mov    $0xdeece66d,%edi$/;"	l
c010cad2	obj/kernel.asm	/^c010cad2:	f7 e7                	mul    %edi$/;"	l
c010cad4	obj/kernel.asm	/^c010cad4:	01 d6                	add    %edx,%esi$/;"	l
c010cad6	obj/kernel.asm	/^c010cad6:	89 f2                	mov    %esi,%edx$/;"	l
c010cad8	obj/kernel.asm	/^c010cad8:	83 c0 0b             	add    $0xb,%eax$/;"	l
c010cadb	obj/kernel.asm	/^c010cadb:	83 d2 00             	adc    $0x0,%edx$/;"	l
c010cade	obj/kernel.asm	/^c010cade:	89 c7                	mov    %eax,%edi$/;"	l
c010cae0	obj/kernel.asm	/^c010cae0:	83 e7 ff             	and    $0xffffffff,%edi$/;"	l
c010cae3	obj/kernel.asm	/^c010cae3:	89 f9                	mov    %edi,%ecx$/;"	l
c010cae5	obj/kernel.asm	/^c010cae5:	0f b7 da             	movzwl %dx,%ebx$/;"	l
c010cae8	obj/kernel.asm	/^c010cae8:	89 0d 40 0f 13 c0    	mov    %ecx,0xc0130f40$/;"	l
c010caee	obj/kernel.asm	/^c010caee:	89 1d 44 0f 13 c0    	mov    %ebx,0xc0130f44$/;"	l
c010caf4	obj/kernel.asm	/^c010caf4:	a1 40 0f 13 c0       	mov    0xc0130f40,%eax$/;"	l
c010caf9	obj/kernel.asm	/^c010caf9:	8b 15 44 0f 13 c0    	mov    0xc0130f44,%edx$/;"	l
c010caff	obj/kernel.asm	/^c010caff:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c010cb03	obj/kernel.asm	/^c010cb03:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c010cb06	obj/kernel.asm	/^c010cb06:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010cb09	obj/kernel.asm	/^c010cb09:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010cb0c	obj/kernel.asm	/^c010cb0c:	c7 45 dc 00 00 00 80 	movl   $0x80000000,-0x24(%ebp)$/;"	l
c010cb13	obj/kernel.asm	/^c010cb13:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010cb16	obj/kernel.asm	/^c010cb16:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010cb19	obj/kernel.asm	/^c010cb19:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010cb1c	obj/kernel.asm	/^c010cb1c:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010cb1f	obj/kernel.asm	/^c010cb1f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010cb22	obj/kernel.asm	/^c010cb22:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010cb25	obj/kernel.asm	/^c010cb25:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010cb29	obj/kernel.asm	/^c010cb29:	74 1c                	je     c010cb47 <rand+0x99>$/;"	l
c010cb2b	obj/kernel.asm	/^c010cb2b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010cb2e	obj/kernel.asm	/^c010cb2e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010cb33	obj/kernel.asm	/^c010cb33:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c010cb36	obj/kernel.asm	/^c010cb36:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010cb39	obj/kernel.asm	/^c010cb39:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010cb3c	obj/kernel.asm	/^c010cb3c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010cb41	obj/kernel.asm	/^c010cb41:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c010cb44	obj/kernel.asm	/^c010cb44:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010cb47	obj/kernel.asm	/^c010cb47:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010cb4a	obj/kernel.asm	/^c010cb4a:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010cb4d	obj/kernel.asm	/^c010cb4d:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c010cb50	obj/kernel.asm	/^c010cb50:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010cb53	obj/kernel.asm	/^c010cb53:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010cb56	obj/kernel.asm	/^c010cb56:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010cb59	obj/kernel.asm	/^c010cb59:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010cb5c	obj/kernel.asm	/^c010cb5c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010cb5f	obj/kernel.asm	/^c010cb5f:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010cb62	obj/kernel.asm	/^c010cb62:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010cb65	obj/kernel.asm	/^c010cb65:	83 c4 24             	add    $0x24,%esp$/;"	l
c010cb68	obj/kernel.asm	/^c010cb68:	5b                   	pop    %ebx$/;"	l
c010cb69	obj/kernel.asm	/^c010cb69:	5e                   	pop    %esi$/;"	l
c010cb6a	obj/kernel.asm	/^c010cb6a:	5f                   	pop    %edi$/;"	l
c010cb6b	obj/kernel.asm	/^c010cb6b:	5d                   	pop    %ebp$/;"	l
c010cb6c	obj/kernel.asm	/^c010cb6c:	c3                   	ret    $/;"	l
c010cb6d	obj/kernel.asm	/^c010cb6d <srand>:$/;"	l
c010cb6d	obj/kernel.asm	/^c010cb6d:	55                   	push   %ebp$/;"	l
c010cb6e	obj/kernel.asm	/^c010cb6e:	89 e5                	mov    %esp,%ebp$/;"	l
c010cb70	obj/kernel.asm	/^c010cb70:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010cb73	obj/kernel.asm	/^c010cb73:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010cb78	obj/kernel.asm	/^c010cb78:	a3 40 0f 13 c0       	mov    %eax,0xc0130f40$/;"	l
c010cb7d	obj/kernel.asm	/^c010cb7d:	89 15 44 0f 13 c0    	mov    %edx,0xc0130f44$/;"	l
c010cb83	obj/kernel.asm	/^c010cb83:	5d                   	pop    %ebp$/;"	l
c010cb84	obj/kernel.asm	/^c010cb84:	c3                   	ret    $/;"	l
cc_compile	tools/function.mk	/^cc_compile = $(eval $(call do_cc_compile,$(1),$(2),$(3),$(4)))$/;"	m
cc_template	tools/function.mk	/^define cc_template$/;"	m
cga_init	kern/driver/console.c	/^cga_init(void) {$/;"	f	file:
cga_putc	kern/driver/console.c	/^cga_putc(int c) {$/;"	f	file:
cgtype	Makefile	/^cgtype = $(patsubst %.$(2),%.$(3),$(1))$/;"	m
ch	obj/kernel.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/badarg.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/exit.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/forktest.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/matrix.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/pgdir.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/priority.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/sleep.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/sleepkill.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/waitkill.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^                ch = *fmt;$/;"	d
change_bit	libs/atomic.h	/^change_bit(int nr, volatile void *addr) {$/;"	f
channels	kern/driver/ide.c	/^} channels[2] = {$/;"	v	typeref:struct:__anon7	file:
char	obj/kernel.asm	/^char *$/;"	l
char	obj/user/badarg.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/exit.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/forktest.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/matrix.asm	/^char *$/;"	l
char	obj/user/pgdir.asm	/^char *$/;"	l
char	obj/user/priority.asm	/^char *$/;"	l
char	obj/user/sleep.asm	/^char *$/;"	l
char	obj/user/sleepkill.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/waitkill.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/driver/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check	kern/mm/pmm.h	/^    void (*check)(void);                              \/\/ check the correctness of XXX_pmm_manager $/;"	m	struct:pmm_manager
check_alloc_page	kern/mm/pmm.c	/^check_alloc_page(void) {$/;"	f	file:
check_boot_pgdir	kern/mm/pmm.c	/^check_boot_pgdir(void) {$/;"	f	file:
check_content_access	kern/mm/swap.c	/^check_content_access(void)$/;"	f	file:
check_content_set	kern/mm/swap.c	/^check_content_set(void)$/;"	f	file:
check_mm_struct	kern/mm/vmm.c	/^struct mm_struct *check_mm_struct;$/;"	v	typeref:struct:mm_struct
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = mm;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = mm_create();$/;"	d
check_pgdir	kern/mm/pmm.c	/^check_pgdir(void) {$/;"	f	file:
check_pgfault	kern/mm/vmm.c	/^check_pgfault(void) {$/;"	f	file:
check_ptep	kern/mm/swap.c	/^pte_t * check_ptep[CHECK_VALID_PHY_PAGE_NUM];$/;"	v
check_regexps	tools/grade.sh	/^check_regexps() {$/;"	f
check_result	tools/grade.sh	/^check_result() {$/;"	f
check_rp	kern/mm/swap.c	/^struct Page * check_rp[CHECK_VALID_PHY_PAGE_NUM];$/;"	v	typeref:struct:Page
check_swap	kern/mm/swap.c	/^check_swap(void)$/;"	f	file:
check_swap	kern/mm/swap.h	/^     int (*check_swap)(void);     $/;"	m	struct:swap_manager
check_swap_addr	kern/mm/swap.c	/^unsigned int check_swap_addr[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
check_sync	kern/sync/check_sync.c	/^void check_sync(void){$/;"	f
check_vma_overlap	kern/mm/vmm.c	/^check_vma_overlap(struct vma_struct *prev, struct vma_struct *next) {$/;"	f	file:
check_vma_struct	kern/mm/vmm.c	/^check_vma_struct(void) {$/;"	f	file:
check_vmm	kern/mm/vmm.c	/^check_vmm(void) {$/;"	f	file:
clear_bit	libs/atomic.h	/^clear_bit(int nr, volatile void *addr) {$/;"	f
cli	libs/x86.h	/^cli(void) {$/;"	f
clock_init	kern/driver/clock.c	/^clock_init(void) {$/;"	f
cnt	libs/printfmt.c	/^    int cnt;            \/\/ the number of characters that have been placed in this buffer$/;"	m	struct:sprintbuf	file:
cnt	obj/kernel.asm	/^    cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/badarg.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/exit.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/forktest.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/matrix.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/pgdir.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/priority.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/sleep.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/sleepkill.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/waitkill.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
command	kern/debug/kmonitor.c	/^struct command {$/;"	s	file:
commands	kern/debug/kmonitor.c	/^static struct command commands[] = {$/;"	v	typeref:struct:command	file:
compare_f	libs/skew_heap.h	/^typedef int(*compare_f)(void *a, void *b);$/;"	t
cond_signal	kern/sync/monitor.c	/^cond_signal (condvar_t *cvp) {$/;"	f
cond_signal	obj/kernel.asm	/^cond_signal (condvar_t *cvp) {$/;"	l
cond_wait	kern/sync/monitor.c	/^cond_wait (condvar_t *cvp) {$/;"	f
cond_wait	obj/kernel.asm	/^cond_wait (condvar_t *cvp) {$/;"	l
condvar	kern/sync/monitor.h	/^typedef struct condvar{$/;"	s
condvar_t	kern/sync/monitor.h	/^} condvar_t;$/;"	t	typeref:struct:condvar
cons	kern/driver/console.c	/^} cons;$/;"	v	typeref:struct:__anon8	file:
cons_getc	kern/driver/console.c	/^cons_getc(void) {$/;"	f
cons_init	kern/driver/console.c	/^cons_init(void) {$/;"	f
cons_intr	kern/driver/console.c	/^cons_intr(int (*proc)(void)) {$/;"	f	file:
cons_putc	kern/driver/console.c	/^cons_putc(int c) {$/;"	f
const	obj/kernel.asm	/^        const struct userstabdata *usd = (struct userstabdata *)USTAB;$/;"	t
const	obj/kernel.asm	/^    const struct stab *stabs, *stab_end;$/;"	t
const	obj/user/forktest.asm	/^const int max_child = 32;$/;"	l
const	obj/user/matrix.asm	/^const int total = 21;$/;"	l
cont	boot/bootasm.S	/^cont:$/;"	l
cont	obj/bootblock.asm	/^cont:$/;"	l
context	kern/process/proc.h	/^    struct context context;                     \/\/ Switch here to run process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::context
context	kern/process/proc.h	/^struct context {$/;"	s
copy_from_user	kern/mm/vmm.c	/^copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable) {$/;"	f
copy_mm	kern/process/proc.c	/^copy_mm(uint32_t clone_flags, struct proc_struct *proc) {$/;"	f	file:
copy_range	kern/mm/pmm.c	/^copy_range(pde_t *to, pde_t *from, uintptr_t start, uintptr_t end, bool share) {$/;"	f
copy_thread	kern/process/proc.c	/^copy_thread(struct proc_struct *proc, uintptr_t esp, struct trapframe *tf) {$/;"	f	file:
copy_to_user	kern/mm/vmm.c	/^copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len) {$/;"	f
count	kern/sync/monitor.h	/^    int count;              \/\/ the number of waiters on condvar$/;"	m	struct:condvar
cp	obj/kernel.asm	/^        cp = (uint16_t*)(MONO_BUF + KERNBASE);$/;"	d
cprintf	kern/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cprintf	user/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
cpu_idle	kern/process/proc.c	/^cpu_idle(void) {$/;"	f
cputch	kern/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputch	user/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputchar	kern/libs/stdio.c	/^cputchar(int c) {$/;"	f
cputs	kern/libs/stdio.c	/^cputs(const char *str) {$/;"	f
cputs	user/libs/stdio.c	/^cputs(const char *str) {$/;"	f
cr3	kern/process/proc.h	/^    uintptr_t cr3;                              \/\/ CR3 register: the base addr of Page Directroy Table(PDT)$/;"	m	struct:proc_struct
create_target	tools/function.mk	/^create_target = $(eval $(call do_create_target,$(1),$(2),$(3),$(4),$(5)))$/;"	m
create_target_cc	Makefile	/^create_target_cc = $(call create_target,$(1),$(2),$(3),$(CC),$(CFLAGS))$/;"	m
create_target_host	Makefile	/^create_target_host = $(call create_target,$(1),$(2),$(3),$(HOSTCC),$(HOSTCFLAGS))$/;"	m
crt_buf	kern/driver/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kernel.asm	/^    crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/driver/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kernel.asm	/^    crt_pos = pos;$/;"	d
ctlmap	kern/driver/console.c	/^static uint8_t ctlmap[256] = {$/;"	v	file:
ctrl	kern/driver/ide.c	/^    unsigned short ctrl;        \/\/ Control Base$/;"	m	struct:__anon7	file:
cur	obj/kernel.asm	/^				cur = aligned;$/;"	d
cur	obj/kernel.asm	/^			cur = (slob_t *)__slob_get_free_page(gfp);$/;"	d
cur	obj/kernel.asm	/^			cur = slobfree;$/;"	d
current	kern/process/proc.c	/^struct proc_struct *current = NULL;$/;"	v	typeref:struct:proc_struct
current	obj/kernel.asm	/^            current = proc;$/;"	d
current	obj/kernel.asm	/^    current = idleproc;$/;"	d
cv	kern/sync/monitor.h	/^    condvar_t *cv;          \/\/ the condvars in monitor$/;"	m	struct:monitor
data	obj/kernel.asm	/^        data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kernel.asm	/^    data = inb(KBDATAP);$/;"	d
debuginfo_eip	kern/debug/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct eipdebuginfo *info) {$/;"	f
default	obj/kernel.asm	/^        default:$/;"	l
default	obj/kernel.asm	/^    default:$/;"	l
default	obj/user/badarg.asm	/^        default:$/;"	l
default	obj/user/badsegment.asm	/^        default:$/;"	l
default	obj/user/divzero.asm	/^        default:$/;"	l
default	obj/user/exit.asm	/^        default:$/;"	l
default	obj/user/faultread.asm	/^        default:$/;"	l
default	obj/user/faultreadkernel.asm	/^        default:$/;"	l
default	obj/user/forktest.asm	/^        default:$/;"	l
default	obj/user/forktree.asm	/^        default:$/;"	l
default	obj/user/hello.asm	/^        default:$/;"	l
default	obj/user/matrix.asm	/^        default:$/;"	l
default	obj/user/pgdir.asm	/^        default:$/;"	l
default	obj/user/priority.asm	/^        default:$/;"	l
default	obj/user/sleep.asm	/^        default:$/;"	l
default	obj/user/sleepkill.asm	/^        default:$/;"	l
default	obj/user/softint.asm	/^        default:$/;"	l
default	obj/user/spin.asm	/^        default:$/;"	l
default	obj/user/testbss.asm	/^        default:$/;"	l
default	obj/user/waitkill.asm	/^        default:$/;"	l
default	obj/user/yield.asm	/^        default:$/;"	l
default_alloc_pages	kern/mm/default_pmm.c	/^default_alloc_pages(size_t n) {$/;"	f	file:
default_check	kern/mm/default_pmm.c	/^default_check(void) {$/;"	f	file:
default_check	tools/grade.sh	/^default_check() {$/;"	f
default_free_pages	kern/mm/default_pmm.c	/^default_free_pages(struct Page *base, size_t n) {$/;"	f	file:
default_init	kern/mm/default_pmm.c	/^default_init(void) {$/;"	f	file:
default_init_memmap	kern/mm/default_pmm.c	/^default_init_memmap(struct Page *base, size_t n) {$/;"	f	file:
default_nr_free_pages	kern/mm/default_pmm.c	/^default_nr_free_pages(void) {$/;"	f	file:
default_pmm_manager	kern/mm/default_pmm.c	/^const struct pmm_manager default_pmm_manager = {$/;"	v	typeref:struct:pmm_manager
default_sched_class	kern/schedule/default_sched_stride.c	/^struct sched_class default_sched_class = {$/;"	v	typeref:struct:sched_class
del_timer	kern/schedule/sched.c	/^del_timer(timer_t *timer) {$/;"	f
delay	kern/driver/console.c	/^delay(void) {$/;"	f	file:
delta	obj/kernel.asm	/^			delta = aligned - cur;$/;"	d
dequeue	kern/schedule/sched.h	/^    void (*dequeue)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
desc	kern/debug/kmonitor.c	/^    const char *desc;$/;"	m	struct:command	file:
did_init	kern/driver/picirq.c	/^static bool did_init = 0;$/;"	v	file:
did_init	obj/kernel.asm	/^    did_init = 1;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sleep.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/sleep.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sleep.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/sleepkill.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/sleepkill.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sleepkill.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'a' + 10;$/;"	d
do_add_files_to_packet	tools/function.mk	/^define do_add_files_to_packet$/;"	m
do_add_objs_to_packet	tools/function.mk	/^define do_add_objs_to_packet$/;"	m
do_cc_compile	tools/function.mk	/^define do_cc_compile$/;"	m
do_create_target	tools/function.mk	/^define do_create_target$/;"	m
do_div	libs/x86.h	6;"	d
do_execve	kern/process/proc.c	/^do_execve(const char *name, size_t len, unsigned char *binary, size_t size) {$/;"	f
do_exit	kern/process/proc.c	/^do_exit(int error_code) {$/;"	f
do_finish_all	tools/function.mk	/^define do_finish_all$/;"	m
do_fork	kern/process/proc.c	/^do_fork(uint32_t clone_flags, uintptr_t stack, struct trapframe *tf) {$/;"	f
do_kill	kern/process/proc.c	/^do_kill(int pid) {$/;"	f
do_pgfault	kern/mm/vmm.c	/^do_pgfault(struct mm_struct *mm, uint32_t error_code, uintptr_t addr) {$/;"	f
do_sleep	kern/process/proc.c	/^do_sleep(unsigned int time) {$/;"	f
do_wait	kern/process/proc.c	/^do_wait(int pid, int *code_store) {$/;"	f
do_yield	kern/process/proc.c	/^do_yield(void) {$/;"	f
do_yield	user/waitkill.c	/^do_yield(void) {$/;"	f
down	kern/sync/sem.c	/^down(semaphore_t *sem) {$/;"	f
dup_mmap	kern/mm/vmm.c	/^dup_mmap(struct mm_struct *to, struct mm_struct *from) {$/;"	f
e820map	kern/mm/memlayout.h	/^struct e820map {$/;"	s
e_ehsize	libs/elf.h	/^    uint16_t e_ehsize;    \/\/ size of this elf header$/;"	m	struct:elfhdr
e_elf	libs/elf.h	/^    uint8_t e_elf[12];$/;"	m	struct:elfhdr
e_entry	libs/elf.h	/^    uint32_t e_entry;     \/\/ entry point if executable$/;"	m	struct:elfhdr
e_flags	libs/elf.h	/^    uint32_t e_flags;     \/\/ architecture-specific flags, usually 0$/;"	m	struct:elfhdr
e_machine	libs/elf.h	/^    uint16_t e_machine;   \/\/ 3=x86, 4=68K, etc.$/;"	m	struct:elfhdr
e_magic	libs/elf.h	/^    uint32_t e_magic;     \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
e_phentsize	libs/elf.h	/^    uint16_t e_phentsize; \/\/ size of an entry in program header$/;"	m	struct:elfhdr
e_phnum	libs/elf.h	/^    uint16_t e_phnum;     \/\/ number of entries in program header or 0$/;"	m	struct:elfhdr
e_phoff	libs/elf.h	/^    uint32_t e_phoff;     \/\/ file position of program header or 0$/;"	m	struct:elfhdr
e_shentsize	libs/elf.h	/^    uint16_t e_shentsize; \/\/ size of an entry in section header$/;"	m	struct:elfhdr
e_shnum	libs/elf.h	/^    uint16_t e_shnum;     \/\/ number of entries in section header or 0$/;"	m	struct:elfhdr
e_shoff	libs/elf.h	/^    uint32_t e_shoff;     \/\/ file position of section header or 0$/;"	m	struct:elfhdr
e_shstrndx	libs/elf.h	/^    uint16_t e_shstrndx;  \/\/ section number that contains section name strings$/;"	m	struct:elfhdr
e_type	libs/elf.h	/^    uint16_t e_type;      \/\/ 1=relocatable, 2=executable, 3=shared object, 4=core image$/;"	m	struct:elfhdr
e_version	libs/elf.h	/^    uint32_t e_version;   \/\/ file version, always 1$/;"	m	struct:elfhdr
ebp	kern/process/proc.h	/^    uint32_t ebp;$/;"	m	struct:context
ebuf	libs/printfmt.c	/^    char *ebuf;         \/\/ points the end of the buffer$/;"	m	struct:sprintbuf	file:
ebx	kern/process/proc.h	/^    uint32_t ebx;$/;"	m	struct:context
ecx	kern/process/proc.h	/^    uint32_t ecx;$/;"	m	struct:context
edi	kern/process/proc.h	/^    uint32_t edi;$/;"	m	struct:context
edx	kern/process/proc.h	/^    uint32_t edx;$/;"	m	struct:context
eip	kern/process/proc.h	/^    uint32_t eip;$/;"	m	struct:context
eip_file	kern/debug/kdebug.c	/^    const char *eip_file;                   \/\/ source code filename for eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_addr	kern/debug/kdebug.c	/^    uintptr_t eip_fn_addr;                  \/\/ start address of function$/;"	m	struct:eipdebuginfo	file:
eip_fn_name	kern/debug/kdebug.c	/^    const char *eip_fn_name;                \/\/ name of function containing eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_namelen	kern/debug/kdebug.c	/^    int eip_fn_namelen;                     \/\/ length of function's name$/;"	m	struct:eipdebuginfo	file:
eip_fn_narg	kern/debug/kdebug.c	/^    int eip_fn_narg;                        \/\/ number of function arguments$/;"	m	struct:eipdebuginfo	file:
eip_line	kern/debug/kdebug.c	/^    int eip_line;                           \/\/ source code line number for eip$/;"	m	struct:eipdebuginfo	file:
eipdebuginfo	kern/debug/kdebug.c	/^struct eipdebuginfo {$/;"	s	file:
elfhdr	libs/elf.h	/^struct elfhdr {$/;"	s
enable_paging	kern/mm/pmm.c	/^enable_paging(void) {$/;"	f	file:
end	obj/kernel.asm	/^                end = KMEMSIZE;$/;"	d
end	obj/kernel.asm	/^                end = ROUNDDOWN(end, PGSIZE);$/;"	d
end	obj/kernel.asm	/^        end = ph->p_va + ph->p_filesz;$/;"	d
end	obj/kernel.asm	/^        end = ph->p_va + ph->p_memsz;$/;"	d
enqueue	kern/schedule/sched.h	/^    void (*enqueue)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
eph	obj/bootblock.asm	/^    eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kernel.asm	/^                err = -err;$/;"	d
err	obj/kernel.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/badarg.asm	/^                err = -err;$/;"	d
err	obj/user/badarg.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^                err = -err;$/;"	d
err	obj/user/badsegment.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^                err = -err;$/;"	d
err	obj/user/divzero.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/exit.asm	/^                err = -err;$/;"	d
err	obj/user/exit.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^                err = -err;$/;"	d
err	obj/user/faultread.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^                err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/forktest.asm	/^                err = -err;$/;"	d
err	obj/user/forktest.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^                err = -err;$/;"	d
err	obj/user/forktree.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^                err = -err;$/;"	d
err	obj/user/hello.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/matrix.asm	/^                err = -err;$/;"	d
err	obj/user/matrix.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/pgdir.asm	/^                err = -err;$/;"	d
err	obj/user/pgdir.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/priority.asm	/^                err = -err;$/;"	d
err	obj/user/priority.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/sleep.asm	/^                err = -err;$/;"	d
err	obj/user/sleep.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/sleepkill.asm	/^                err = -err;$/;"	d
err	obj/user/sleepkill.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^                err = -err;$/;"	d
err	obj/user/softint.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^                err = -err;$/;"	d
err	obj/user/spin.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^                err = -err;$/;"	d
err	obj/user/testbss.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/waitkill.asm	/^                err = -err;$/;"	d
err	obj/user/waitkill.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^                err = -err;$/;"	d
err	obj/user/yield.asm	/^            err = va_arg(ap, int);$/;"	d
error_string	libs/printfmt.c	/^static const char * const error_string[MAXERROR + 1] = {$/;"	v	file:
esi	kern/process/proc.h	/^    uint32_t esi;$/;"	m	struct:context
esp	kern/process/proc.h	/^    uint32_t esp;$/;"	m	struct:context
execve_exit	obj/kernel.asm	/^execve_exit:$/;"	l
exit	user/libs/ulib.c	/^exit(int error_code) {$/;"	f
exit_code	kern/process/proc.h	/^    int exit_code;                              \/\/ exit code (be sent to parent proc)$/;"	m	struct:proc_struct
exit_mmap	kern/mm/vmm.c	/^exit_mmap(struct mm_struct *mm) {$/;"	f
exit_range	kern/mm/pmm.c	/^exit_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
expires	kern/schedule/sched.h	/^    unsigned int expires;       \/\/the expire time$/;"	m	struct:__anon4
extern	obj/kernel.asm	/^         extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^     extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^    extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^extern size_t npage;$/;"	l
extern	obj/kernel.asm	/^extern struct Page *pages;$/;"	t
extern	obj/kernel.asm	/^extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^extern uintptr_t __vectors[];$/;"	l
fail	tools/grade.sh	/^fail() {$/;"	f
failed	obj/kernel.asm	/^failed:$/;"	l
failed	obj/user/matrix.asm	/^failed:$/;"	l
failed	obj/user/priority.asm	/^failed:$/;"	l
filename	Makefile	/^filename = $(basename $(notdir $(1)))$/;"	m
find_order	kern/mm/kmalloc.c	/^static int find_order(int size)$/;"	f	file:
find_proc	kern/process/proc.c	/^find_proc(int pid) {$/;"	f
find_vma	kern/mm/vmm.c	/^find_vma(struct mm_struct *mm, uintptr_t addr) {$/;"	f
finish_all	tools/function.mk	/^finish_all = $(eval $(call do_finish_all))$/;"	m
finish_probe	boot/bootasm.S	/^finish_probe:$/;"	l
flags	kern/mm/memlayout.h	/^    uint32_t flags;                 \/\/ array of flags that describe the status of the page frame$/;"	m	struct:Page
flags	kern/process/proc.h	/^    uint32_t flags;                             \/\/ Process flag$/;"	m	struct:proc_struct
fork	user/libs/ulib.c	/^fork(void) {$/;"	f
fork_out	obj/kernel.asm	/^fork_out:$/;"	l
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch) {$/;"	f
forkret	kern/process/proc.c	/^forkret(void) {$/;"	f	file:
forkrets	kern/trap/trapentry.S	/^forkrets:$/;"	l
forkrets	obj/kernel.asm	/^forkrets:$/;"	l
forktree	user/forktree.c	/^forktree(const char *cur) {$/;"	f
found	obj/kernel.asm	/^                        found = 1;$/;"	d
found	obj/kernel.asm	/^found:$/;"	l
free_area	kern/mm/default_pmm.c	/^free_area_t free_area;$/;"	v
free_area_t	kern/mm/memlayout.h	/^} free_area_t;$/;"	t	typeref:struct:__anon6
free_list	kern/mm/default_pmm.c	59;"	d	file:
free_list	kern/mm/memlayout.h	/^    list_entry_t free_list;         \/\/ the list header$/;"	m	struct:__anon6
free_list	kern/mm/swap.c	176;"	d	file:
free_list	obj/kernel.asm	/^     free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^    free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^#define free_list (free_area.free_list)$/;"	d
free_page	kern/mm/pmm.h	36;"	d
free_pages	kern/mm/pmm.c	/^free_pages(struct Page *base, size_t n) {$/;"	f
free_pages	kern/mm/pmm.h	/^    void (*free_pages)(struct Page *base, size_t n);  \/\/ free >=n pages with "base" addr of Page descriptor structures(memlayout.h)$/;"	m	struct:pmm_manager
func	kern/debug/kmonitor.c	/^    int(*func)(int argc, char **argv, struct trapframe *tf);$/;"	m	struct:command	file:
gatedesc	kern/mm/mmu.h	/^struct gatedesc {$/;"	s
gd_args	kern/mm/mmu.h	/^    unsigned gd_args : 5;           \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:gatedesc
gd_dpl	kern/mm/mmu.h	/^    unsigned gd_dpl : 2;            \/\/ descriptor(meaning new) privilege level$/;"	m	struct:gatedesc
gd_off_15_0	kern/mm/mmu.h	/^    unsigned gd_off_15_0 : 16;      \/\/ low 16 bits of offset in segment$/;"	m	struct:gatedesc
gd_off_31_16	kern/mm/mmu.h	/^    unsigned gd_off_31_16 : 16;     \/\/ high bits of offset in segment$/;"	m	struct:gatedesc
gd_p	kern/mm/mmu.h	/^    unsigned gd_p : 1;              \/\/ Present$/;"	m	struct:gatedesc
gd_rsv1	kern/mm/mmu.h	/^    unsigned gd_rsv1 : 3;           \/\/ reserved(should be zero I guess)$/;"	m	struct:gatedesc
gd_s	kern/mm/mmu.h	/^    unsigned gd_s : 1;              \/\/ must be 0 (system)$/;"	m	struct:gatedesc
gd_ss	kern/mm/mmu.h	/^    unsigned gd_ss : 16;            \/\/ segment selector$/;"	m	struct:gatedesc
gd_type	kern/mm/mmu.h	/^    unsigned gd_type : 4;           \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:gatedesc
gdt	boot/bootasm.S	/^gdt:$/;"	l
gdt	kern/mm/pmm.c	/^static struct segdesc gdt[] = {$/;"	v	typeref:struct:segdesc	file:
gdt_init	kern/mm/pmm.c	/^gdt_init(void) {$/;"	f	file:
gdt_pd	kern/mm/pmm.c	/^static struct pseudodesc gdt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
gdtdesc	boot/bootasm.S	/^gdtdesc:$/;"	l
get_page	kern/mm/pmm.c	/^get_page(pde_t *pgdir, uintptr_t la, pte_t **ptep_store) {$/;"	f
get_pgtable_items	kern/mm/pmm.c	/^get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t *table, size_t *left_store, size_t *right_store) {$/;"	f	file:
get_pid	kern/process/proc.c	/^get_pid(void) {$/;"	f	file:
get_proc_name	kern/process/proc.c	/^get_proc_name(struct proc_struct *proc) {$/;"	f
get_pte	kern/mm/pmm.c	/^get_pte(pde_t *pgdir, uintptr_t la, bool create) {$/;"	f
get_time	tools/grade.sh	/^get_time() {$/;"	f
getchar	kern/libs/stdio.c	/^getchar(void) {$/;"	f
getint	libs/printfmt.c	/^getint(va_list *ap, int lflag) {$/;"	f	file:
getpid	user/libs/ulib.c	/^getpid(void) {$/;"	f
gettime_msec	user/libs/ulib.c	/^gettime_msec(void) {$/;"	f
getuint	libs/printfmt.c	/^getuint(va_list *ap, int lflag) {$/;"	f	file:
gfp_t	kern/mm/kmalloc.c	/^typedef unsigned int gfp_t;$/;"	t	file:
good_mm	obj/kernel.asm	/^good_mm:$/;"	l
grade_backtrace	kern/init/init.c	/^grade_backtrace(void) {$/;"	f
grade_backtrace0	kern/init/init.c	/^grade_backtrace0(int arg0, int arg1, int arg2) {$/;"	f
grade_backtrace1	kern/init/init.c	/^grade_backtrace1(int arg0, int arg1) {$/;"	f
grade_backtrace2	kern/init/init.c	/^grade_backtrace2(int arg0, int arg1, int arg2, int arg3) {$/;"	f
hash32	libs/hash.c	/^hash32(uint32_t val, unsigned int bits) {$/;"	f
hash_link	kern/process/proc.h	/^    list_entry_t hash_link;                     \/\/ Process hash list$/;"	m	struct:proc_struct
hash_list	kern/process/proc.c	/^static list_entry_t hash_list[HASH_LIST_SIZE];$/;"	v	file:
hash_proc	kern/process/proc.c	/^hash_proc(struct proc_struct *proc) {$/;"	f	file:
haskid	obj/kernel.asm	/^            haskid = 1;$/;"	d
haskid	obj/kernel.asm	/^    haskid = 0;$/;"	d
ide_device	kern/driver/ide.c	/^static struct ide_device {$/;"	s	file:
ide_device_size	kern/driver/ide.c	/^ide_device_size(unsigned short ideno) {$/;"	f
ide_device_valid	kern/driver/ide.c	/^ide_device_valid(unsigned short ideno) {$/;"	f
ide_devices	kern/driver/ide.c	/^} ide_devices[MAX_IDE];$/;"	v	typeref:struct:ide_device	file:
ide_init	kern/driver/ide.c	/^ide_init(void) {$/;"	f
ide_read_secs	kern/driver/ide.c	/^ide_read_secs(unsigned short ideno, uint32_t secno, void *dst, size_t nsecs) {$/;"	f
ide_wait_ready	kern/driver/ide.c	/^ide_wait_ready(unsigned short iobase, bool check_error) {$/;"	f	file:
ide_write_secs	kern/driver/ide.c	/^ide_write_secs(unsigned short ideno, uint32_t secno, const void *src, size_t nsecs) {$/;"	f
idleproc	kern/process/proc.c	/^struct proc_struct *idleproc = NULL;$/;"	v	typeref:struct:proc_struct
idt	kern/trap/trap.c	/^static struct gatedesc idt[256] = {{0}};$/;"	v	typeref:struct:gatedesc	file:
idt_init	kern/trap/trap.c	/^idt_init(void) {$/;"	f
idt_pd	kern/trap/trap.c	/^static struct pseudodesc idt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
in_swap_tick_event	kern/trap/trap.c	/^static volatile int in_swap_tick_event = 0;$/;"	v	file:
inb	libs/x86.h	/^inb(uint16_t port) {$/;"	f
init	kern/mm/pmm.h	/^    void (*init)(void);                               \/\/ initialize internal description&management data structure$/;"	m	struct:pmm_manager
init	kern/mm/swap.h	/^     int (*init)            (void);$/;"	m	struct:swap_manager
init	kern/schedule/sched.h	/^    void (*init)(struct run_queue *rq);$/;"	m	struct:sched_class
init_main	kern/process/proc.c	/^init_main(void *arg) {$/;"	f	file:
init_memmap	kern/mm/pmm.c	/^init_memmap(struct Page *base, size_t n) {$/;"	f	file:
init_memmap	kern/mm/pmm.h	/^    void (*init_memmap)(struct Page *base, size_t n); \/\/ setup description&management data structcure according to$/;"	m	struct:pmm_manager
init_mm	kern/mm/swap.h	/^     int (*init_mm)         (struct mm_struct *mm);$/;"	m	struct:swap_manager
init_pmm_manager	kern/mm/pmm.c	/^init_pmm_manager(void) {$/;"	f	file:
initproc	kern/process/proc.c	/^struct proc_struct *initproc = NULL;$/;"	v	typeref:struct:proc_struct
initproc	obj/kernel.asm	/^    initproc = find_proc(pid);$/;"	d
inline	obj/kernel.asm	/^inline void $/;"	l
insert_vma_struct	kern/mm/vmm.c	/^insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma) {$/;"	f
inside	obj/kernel.asm	/^    inside:$/;"	l
insl	libs/x86.h	/^insl(uint32_t port, void *addr, int cnt) {$/;"	f
int	obj/kernel.asm	/^int kern_init(void) __attribute__((noreturn));$/;"	l
int	obj/kernel.asm	/^int philosopher_using_condvar(void * arg) { \/* arg is the No. of philosopher 0~N-1*\/$/;"	l
int	obj/kernel.asm	/^int philosopher_using_semaphore(void * arg) \/* i：哲学家号码，从0到N-1 *\/$/;"	l
int	obj/kernel.asm	/^int state_condvar[N];                            \/\/ the philosopher's state: EATING, HUNGARY, THINKING  $/;"	l
int	obj/kernel.asm	/^int$/;"	l
int	obj/user/badarg.asm	/^int main(void);$/;"	l
int	obj/user/badarg.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int main(void);$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int main(void);$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/exit.asm	/^int magic = -0x10384;$/;"	l
int	obj/user/exit.asm	/^int main(void);$/;"	l
int	obj/user/exit.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int main(void);$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int main(void);$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/forktest.asm	/^int main(void);$/;"	l
int	obj/user/forktest.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int main(void);$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int main(void);$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/matrix.asm	/^int main(void);$/;"	l
int	obj/user/matrix.asm	/^int$/;"	l
int	obj/user/pgdir.asm	/^int main(void);$/;"	l
int	obj/user/pgdir.asm	/^int$/;"	l
int	obj/user/priority.asm	/^int main(void);$/;"	l
int	obj/user/priority.asm	/^int pids[TOTAL];$/;"	l
int	obj/user/priority.asm	/^int status[TOTAL];$/;"	l
int	obj/user/priority.asm	/^int$/;"	l
int	obj/user/sleep.asm	/^int main(void);$/;"	l
int	obj/user/sleep.asm	/^int$/;"	l
int	obj/user/sleepkill.asm	/^int main(void);$/;"	l
int	obj/user/sleepkill.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int main(void);$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int main(void);$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int main(void);$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/waitkill.asm	/^int main(void);$/;"	l
int	obj/user/waitkill.asm	/^int parent, pid1, pid2;$/;"	l
int	obj/user/waitkill.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int main(void);$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	libs/defs.h	/^typedef short int16_t;$/;"	t
int32_t	libs/defs.h	/^typedef int int32_t;$/;"	t
int64_t	libs/defs.h	/^typedef long long int64_t;$/;"	t
int8_t	libs/defs.h	/^typedef char int8_t;$/;"	t
int_gate	kern/trap/trap.c	165;"	d	file:
int_gate	obj/kernel.asm	/^#define int_gate(gate) {asm volatile ("int %0" :: "i" (gate));}$/;"	d
intptr_t	libs/defs.h	/^typedef int32_t intptr_t;$/;"	t
intr_disable	kern/driver/intr.c	/^intr_disable(void) {$/;"	f
intr_enable	kern/driver/intr.c	/^intr_enable(void) {$/;"	f
invlpg	libs/x86.h	/^invlpg(void *addr) {$/;"	f
iobase	obj/kernel.asm	/^        iobase = IO_BASE(ideno);$/;"	d
irq_mask	kern/driver/picirq.c	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	v	file:
irq_mask	obj/kernel.asm	/^    irq_mask = mask;$/;"	d
is_find_big_one	obj/kernel.asm	/^            is_find_big_one = 1;$/;"	d
is_kernel_panic	kern/debug/panic.c	/^is_kernel_panic(void) {$/;"	f
is_panic	kern/debug/panic.c	/^static bool is_panic = 0;$/;"	v	file:
is_panic	obj/kernel.asm	/^    is_panic = 1;$/;"	d
j	obj/user/priority.asm	/^          j = !j;$/;"	d
kallocated	kern/mm/kmalloc.c	/^kallocated(void) {$/;"	f
kbd_init	kern/driver/console.c	/^kbd_init(void) {$/;"	f	file:
kbd_intr	kern/driver/console.c	/^kbd_intr(void) {$/;"	f	file:
kbd_proc_data	kern/driver/console.c	/^kbd_proc_data(void) {$/;"	f	file:
kern_entry	kern/init/entry.S	/^kern_entry:$/;"	l
kern_entry	obj/kernel.asm	/^kern_entry:$/;"	l
kern_init	kern/init/init.c	/^kern_init(void) {$/;"	f
kernel	Makefile	/^kernel = $(call totarget,kernel)$/;"	m
kernel_execve	kern/process/proc.c	/^kernel_execve(const char *name, unsigned char *binary, size_t size) {$/;"	f	file:
kernel_thread	kern/process/proc.c	/^kernel_thread(int (*fn)(void *), void *arg, uint32_t clone_flags) {$/;"	f
kernel_thread_entry	kern/process/entry.S	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
kernel_thread_entry	obj/kernel.asm	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
kfree	kern/mm/kmalloc.c	/^void kfree(void *block)$/;"	f
kill	user/libs/ulib.c	/^kill(int pid) {$/;"	f
kmalloc	kern/mm/kmalloc.c	/^kmalloc(size_t size)$/;"	f
kmalloc_init	kern/mm/kmalloc.c	/^kmalloc_init(void) {$/;"	f
kmonitor	kern/debug/kmonitor.c	/^kmonitor(struct trapframe *tf) {$/;"	f
ksize	kern/mm/kmalloc.c	/^unsigned int ksize(const void *block)$/;"	f
kstack	kern/process/proc.h	/^    uintptr_t kstack;                           \/\/ Process kernel stack$/;"	m	struct:proc_struct
kva2page	kern/mm/pmm.h	/^kva2page(void *kva) {$/;"	f
l	obj/kernel.asm	/^            l = m;$/;"	d
l	obj/kernel.asm	/^            l = true_m + 1;$/;"	d
l	obj/kernel.asm	/^          l = skew_heap_merge(a, b->right, comp);$/;"	d
l	obj/kernel.asm	/^          l = skew_heap_merge(a->right, b, comp);$/;"	d
l	obj/kernel.asm	/^        l = *region_right;$/;"	d
la	obj/kernel.asm	/^    la = ROUNDDOWN(la, PGSIZE);$/;"	d
lab1_print_cur_status	kern/init/init.c	/^lab1_print_cur_status(void) {$/;"	f	file:
lab1_switch_test	kern/init/init.c	/^lab1_switch_test(void) {$/;"	f	file:
lab1_switch_to_kernel	kern/init/init.c	/^lab1_switch_to_kernel(void) {$/;"	f	file:
lab1_switch_to_user	kern/init/init.c	/^lab1_switch_to_user(void) {$/;"	f	file:
lab6_priority	kern/process/proc.h	/^    uint32_t lab6_priority;                     \/\/ FOR LAB6 ONLY: the priority of process, set by lab6_set_priority(uint32_t)$/;"	m	struct:proc_struct
lab6_run_pool	kern/process/proc.h	/^    skew_heap_entry_t lab6_run_pool;            \/\/ FOR LAB6 ONLY: the entry in the run pool$/;"	m	struct:proc_struct
lab6_run_pool	kern/schedule/sched.h	/^    skew_heap_entry_t *lab6_run_pool;$/;"	m	struct:run_queue
lab6_set_priority	kern/process/proc.c	/^lab6_set_priority(uint32_t priority)$/;"	f
lab6_set_priority	user/libs/ulib.c	/^lab6_set_priority(uint32_t priority)$/;"	f
lab6_stride	kern/process/proc.h	/^    uint32_t lab6_stride;                       \/\/ FOR LAB6 ONLY: the current stride of the process $/;"	m	struct:proc_struct
last_pid	obj/kernel.asm	/^                        last_pid = 1;$/;"	d
last_pid	obj/kernel.asm	/^        last_pid = 1;$/;"	d
lcr0	libs/x86.h	/^lcr0(uintptr_t cr0) {$/;"	f
lcr3	libs/x86.h	/^lcr3(uintptr_t cr3) {$/;"	f
le	obj/kernel.asm	/^                le = list_next(le);$/;"	d
le	obj/kernel.asm	/^            le = list_next(le);$/;"	d
le	obj/kernel.asm	/^        le = list;$/;"	d
le	obj/kernel.asm	/^        le = list_next(le);$/;"	d
le	obj/kernel.asm	/^     le = &free_list;$/;"	d
le	obj/kernel.asm	/^    le = &free_list;$/;"	d
le2page	kern/mm/memlayout.h	150;"	d
le2proc	kern/process/proc.h	76;"	d
le2timer	kern/schedule/sched.h	18;"	d
le2timer	obj/kernel.asm	/^#define le2timer(le, member)            \\$/;"	d
le2vma	kern/mm/vmm.h	24;"	d
le2wait	kern/sync/wait.h	19;"	d
le_next	obj/kernel.asm	/^    le_next = list_next(le_prev);$/;"	d
le_pos	obj/kernel.asm	/^            le_pos = list_prev(le);$/;"	d
le_prev	obj/kernel.asm	/^            le_prev = le;$/;"	d
left	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::
len	obj/kernel.asm	/^        len = PROC_NAME_LEN;$/;"	d
lflag	obj/kernel.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/badarg.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/exit.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/forktest.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/matrix.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/pgdir.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/priority.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/sleep.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/sleepkill.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/waitkill.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^        lflag = altflag = 0;$/;"	d
lgdt	kern/mm/pmm.c	/^lgdt(struct pseudodesc *pd) {$/;"	f	file:
lidt	libs/x86.h	/^lidt(struct pseudodesc *pd) {$/;"	f
list_add	libs/list.h	/^list_add(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_after	libs/list.h	/^list_add_after(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_before	libs/list.h	/^list_add_before(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_del	libs/list.h	/^list_del(list_entry_t *listelm) {$/;"	f
list_del_init	libs/list.h	/^list_del_init(list_entry_t *listelm) {$/;"	f
list_empty	libs/list.h	/^list_empty(list_entry_t *list) {$/;"	f
list_entry	libs/list.h	/^struct list_entry {$/;"	s
list_entry_t	libs/list.h	/^typedef struct list_entry list_entry_t;$/;"	t	typeref:struct:list_entry
list_init	libs/list.h	/^list_init(list_entry_t *elm) {$/;"	f
list_link	kern/mm/vmm.h	/^    list_entry_t list_link;  \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:vma_struct
list_link	kern/process/proc.h	/^    list_entry_t list_link;                     \/\/ Process link list $/;"	m	struct:proc_struct
list_next	libs/list.h	/^list_next(list_entry_t *listelm) {$/;"	f
list_prev	libs/list.h	/^list_prev(list_entry_t *listelm) {$/;"	f
listf	tools/function.mk	/^listf = $(filter $(if $(2),$(addprefix %.,$(2)),%),\\$/;"	m
listf_cc	Makefile	/^listf_cc = $(call listf,$(1),$(CTYPE))$/;"	m
lline	obj/kernel.asm	/^        lline = lfile;$/;"	d
lline	obj/kernel.asm	/^        lline = lfun;$/;"	d
load_esp0	kern/mm/pmm.c	/^load_esp0(uintptr_t esp0) {$/;"	f
load_icode	kern/process/proc.c	/^load_icode(unsigned char *binary, size_t size) {$/;"	f	file:
local_intr_restore	kern/sync/sync.h	28;"	d
local_intr_save	kern/sync/sync.h	27;"	d
lock_mm	kern/mm/vmm.h	/^lock_mm(struct mm_struct *mm) {$/;"	f
locked_by	kern/mm/vmm.h	/^    int locked_by;                 \/\/ the lock owner process's pid$/;"	m	struct:mm_struct
long	obj/kernel.asm	/^long$/;"	l
long	obj/user/badarg.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/exit.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/forktest.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/matrix.asm	/^long$/;"	l
long	obj/user/pgdir.asm	/^long$/;"	l
long	obj/user/priority.asm	/^long$/;"	l
long	obj/user/sleep.asm	/^long$/;"	l
long	obj/user/sleepkill.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/waitkill.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
loop	user/waitkill.c	/^loop(void) {$/;"	f
lpt_putc	kern/driver/console.c	/^lpt_putc(int c) {$/;"	f	file:
lpt_putc_sub	kern/driver/console.c	/^lpt_putc_sub(int c) {$/;"	f	file:
ltr	libs/x86.h	/^ltr(uint16_t sel) {$/;"	f
m	obj/kernel.asm	/^		m = slob_alloc(size + SLOB_UNIT, gfp, 0);$/;"	d
magic	user/exit.c	/^int magic = -0x10384;$/;"	v
main	tools/sign.c	/^main(int argc, char *argv[]) {$/;"	f
main	tools/vector.c	/^main(void) {$/;"	f
main	user/badarg.c	/^main(void) {$/;"	f
main	user/badsegment.c	/^main(void) {$/;"	f
main	user/divzero.c	/^main(void) {$/;"	f
main	user/exit.c	/^main(void) {$/;"	f
main	user/faultread.c	/^main(void) {$/;"	f
main	user/faultreadkernel.c	/^main(void) {$/;"	f
main	user/forktest.c	/^main(void) {$/;"	f
main	user/forktree.c	/^main(void) {$/;"	f
main	user/hello.c	/^main(void) {$/;"	f
main	user/matrix.c	/^main(void) {$/;"	f
main	user/pgdir.c	/^main(void) {$/;"	f
main	user/priority.c	/^main(void) {$/;"	f
main	user/sleep.c	/^main(void) {$/;"	f
main	user/sleepkill.c	/^main(void) {$/;"	f
main	user/softint.c	/^main(void) {$/;"	f
main	user/spin.c	/^main(void) {$/;"	f
main	user/testbss.c	/^main(void) {$/;"	f
main	user/waitkill.c	/^main(void) {$/;"	f
main	user/yield.c	/^main(void) {$/;"	f
make_print	tools/grade.sh	/^make_print() {$/;"	f
map	kern/mm/memlayout.h	/^    } __attribute__((packed)) map[E820MAX];$/;"	m	struct:e820map	typeref:struct:e820map::__anon5
map_count	kern/mm/vmm.h	/^    int map_count;                 \/\/ the count of these vma$/;"	m	struct:mm_struct
map_swappable	kern/mm/swap.h	/^     int (*map_swappable)   (struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in);$/;"	m	struct:swap_manager
mata	user/matrix.c	/^static int mata[MATSIZE][MATSIZE];$/;"	v	file:
matb	user/matrix.c	/^static int matb[MATSIZE][MATSIZE];$/;"	v	file:
matc	user/matrix.c	/^static int matc[MATSIZE][MATSIZE];$/;"	v	file:
match	Makefile	/^match = $(shell echo $(2) | $(AWK) '{for(i=1;i<=NF;i++){if(match("$(1)","^"$$(i)"$$")){exit 1;}}}'; echo $$?)$/;"	m
max_child	user/forktest.c	/^const int max_child = 32;$/;"	v
max_swap_offset	kern/mm/swap.c	/^size_t max_swap_offset;$/;"	v
max_swap_offset	obj/kernel.asm	/^    max_swap_offset = ide_device_size(SWAP_DEV_NO) \/ (PGSIZE \/ SECTSIZE);$/;"	d
max_time_slice	kern/schedule/sched.h	/^    int max_time_slice;$/;"	m	struct:run_queue
maxpa	obj/kernel.asm	/^                maxpa = end;$/;"	d
maxpa	obj/kernel.asm	/^        maxpa = KMEMSIZE;$/;"	d
memcmp	libs/string.c	/^memcmp(const void *v1, const void *v2, size_t n) {$/;"	f
memcpy	libs/string.c	/^memcpy(void *dst, const void *src, size_t n) {$/;"	f
memmove	libs/string.c	/^memmove(void *dst, const void *src, size_t n) {$/;"	f
memset	libs/string.c	/^memset(void *s, char c, size_t n) {$/;"	f
mm	kern/process/proc.h	/^    struct mm_struct *mm;                       \/\/ Process's memory management field$/;"	m	struct:proc_struct	typeref:struct:proc_struct::mm_struct
mm	obj/kernel.asm	/^        mm = check_mm_struct;$/;"	d
mm	obj/kernel.asm	/^        mm = current->mm;$/;"	d
mm	obj/kernel.asm	/^        mm = oldmm;$/;"	d
mm_count	kern/mm/vmm.h	/^    int mm_count;                  \/\/ the number ofprocess which shared the mm$/;"	m	struct:mm_struct
mm_count	kern/mm/vmm.h	/^mm_count(struct mm_struct *mm) {$/;"	f
mm_count_dec	kern/mm/vmm.h	/^mm_count_dec(struct mm_struct *mm) {$/;"	f
mm_count_inc	kern/mm/vmm.h	/^mm_count_inc(struct mm_struct *mm) {$/;"	f
mm_create	kern/mm/vmm.c	/^mm_create(void) {$/;"	f
mm_destroy	kern/mm/vmm.c	/^mm_destroy(struct mm_struct *mm) {$/;"	f
mm_map	kern/mm/vmm.c	/^mm_map(struct mm_struct *mm, uintptr_t addr, size_t len, uint32_t vm_flags,$/;"	f
mm_sem	kern/mm/vmm.h	/^    semaphore_t mm_sem;            \/\/ mutex for using dup_mmap fun to duplicat the mm $/;"	m	struct:mm_struct
mm_struct	kern/mm/vmm.h	/^struct mm_struct {$/;"	s
mmap_cache	kern/mm/vmm.h	/^    struct vma_struct *mmap_cache; \/\/ current accessed vma, used for speed purpose$/;"	m	struct:mm_struct	typeref:struct:mm_struct::vma_struct
mmap_list	kern/mm/vmm.h	/^    list_entry_t mmap_list;        \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:mm_struct
model	kern/driver/ide.c	/^    unsigned char model[41];    \/\/ Model in String$/;"	m	struct:ide_device	file:
mon_backtrace	kern/debug/kmonitor.c	/^mon_backtrace(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_help	kern/debug/kmonitor.c	/^mon_help(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_kerninfo	kern/debug/kmonitor.c	/^mon_kerninfo(int argc, char **argv, struct trapframe *tf) {$/;"	f
monitor	kern/sync/monitor.h	/^typedef struct monitor{$/;"	s
monitor_init	kern/sync/monitor.c	/^monitor_init (monitor_t * mtp, size_t num_cv) {$/;"	f
monitor_init	obj/kernel.asm	/^monitor_init (monitor_t * mtp, size_t num_cv) {$/;"	l
monitor_t	kern/sync/monitor.h	/^typedef struct monitor monitor_t;$/;"	t	typeref:struct:monitor
monitor_t	kern/sync/monitor.h	/^} monitor_t;$/;"	t	typeref:struct:monitor
monitor_t	obj/kernel.asm	/^monitor_t mt, *mtp=&mt;                          \/\/ monitor$/;"	l
mt	kern/sync/check_sync.c	/^monitor_t mt, *mtp=&mt;                          \/\/ monitor$/;"	v
mtp	kern/sync/check_sync.c	/^monitor_t mt, *mtp=&mt;                          \/\/ monitor$/;"	v
mutex	kern/sync/check_sync.c	/^semaphore_t mutex; \/* 临界区互斥 *\/$/;"	v
mutex	kern/sync/monitor.h	/^    semaphore_t mutex;      \/\/ the mutex lock for going into the routines in monitor, should be initialized to 1$/;"	m	struct:monitor
n_desc	kern/debug/stab.h	/^    uint16_t n_desc;        \/\/ description field$/;"	m	struct:stab
n_other	kern/debug/stab.h	/^    uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:stab
n_strx	kern/debug/stab.h	/^    uint32_t n_strx;        \/\/ index into string table of name$/;"	m	struct:stab
n_type	kern/debug/stab.h	/^    uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:stab
n_value	kern/debug/stab.h	/^    uintptr_t n_value;      \/\/ value of symbol$/;"	m	struct:stab
name	kern/debug/kmonitor.c	/^    const char *name;$/;"	m	struct:command	file:
name	kern/mm/pmm.h	/^    const char *name;                                 \/\/ XXX_pmm_manager's name$/;"	m	struct:pmm_manager
name	kern/mm/swap.h	/^     const char *name;$/;"	m	struct:swap_manager
name	kern/process/proc.h	/^    char name[PROC_NAME_LEN + 1];               \/\/ Process name$/;"	m	struct:proc_struct
name	kern/schedule/sched.h	/^    const char *name;$/;"	m	struct:sched_class
need_resched	kern/process/proc.h	/^    volatile bool need_resched;                 \/\/ bool value: need to be rescheduled to release CPU?$/;"	m	struct:proc_struct
next	kern/mm/kmalloc.c	/^	struct bigblock *next;$/;"	m	struct:bigblock	typeref:struct:bigblock::bigblock	file:
next	kern/mm/kmalloc.c	/^	struct slob_block *next;$/;"	m	struct:slob_block	typeref:struct:slob_block::slob_block	file:
next	kern/sync/monitor.h	/^    semaphore_t next;       \/\/ the next semaphore is used to down the signaling proc itself, and the other OR wakeuped waiting proc should wake up the sleeped signaling proc.$/;"	m	struct:monitor
next	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::
next	libs/rand.c	/^static unsigned long long next = 1;$/;"	v	file:
next	obj/kernel.asm	/^            next = idleproc;$/;"	d
next	obj/kernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/kernel.asm	/^    next = seed;$/;"	d
next	obj/user/badarg.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badarg.asm	/^    next = seed;$/;"	d
next	obj/user/badsegment.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badsegment.asm	/^    next = seed;$/;"	d
next	obj/user/divzero.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/divzero.asm	/^    next = seed;$/;"	d
next	obj/user/exit.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/exit.asm	/^    next = seed;$/;"	d
next	obj/user/faultread.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultread.asm	/^    next = seed;$/;"	d
next	obj/user/faultreadkernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultreadkernel.asm	/^    next = seed;$/;"	d
next	obj/user/forktest.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktest.asm	/^    next = seed;$/;"	d
next	obj/user/forktree.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktree.asm	/^    next = seed;$/;"	d
next	obj/user/hello.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/hello.asm	/^    next = seed;$/;"	d
next	obj/user/matrix.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/matrix.asm	/^    next = seed;$/;"	d
next	obj/user/pgdir.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/pgdir.asm	/^    next = seed;$/;"	d
next	obj/user/priority.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/priority.asm	/^    next = seed;$/;"	d
next	obj/user/sleep.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/sleep.asm	/^    next = seed;$/;"	d
next	obj/user/sleepkill.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/sleepkill.asm	/^    next = seed;$/;"	d
next	obj/user/softint.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/softint.asm	/^    next = seed;$/;"	d
next	obj/user/spin.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/spin.asm	/^    next = seed;$/;"	d
next	obj/user/testbss.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/testbss.asm	/^    next = seed;$/;"	d
next	obj/user/waitkill.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/waitkill.asm	/^    next = seed;$/;"	d
next	obj/user/yield.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/yield.asm	/^    next = seed;$/;"	d
next_count	kern/sync/monitor.h	/^    int next_count;         \/\/ the number of of sleeped signaling proc$/;"	m	struct:monitor
next_safe	obj/kernel.asm	/^                    next_safe = MAX_PID;$/;"	d
next_safe	obj/kernel.asm	/^                next_safe = proc->pid;$/;"	d
next_safe	obj/kernel.asm	/^        next_safe = MAX_PID;$/;"	d
normalmap	kern/driver/console.c	/^static uint8_t normalmap[256] = {$/;"	v	file:
npage	kern/mm/pmm.c	/^size_t npage = 0;$/;"	v
npage	obj/kernel.asm	/^    npage = maxpa \/ PGSIZE;$/;"	d
nr_free	kern/mm/default_pmm.c	60;"	d	file:
nr_free	kern/mm/memlayout.h	/^    unsigned int nr_free;           \/\/ # of free pages in this free list$/;"	m	struct:__anon6
nr_free	kern/mm/swap.c	177;"	d	file:
nr_free	obj/kernel.asm	/^     nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^     nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^#define nr_free (free_area.nr_free)$/;"	d
nr_free_pages	kern/mm/pmm.c	/^nr_free_pages(void) {$/;"	f
nr_free_pages	kern/mm/pmm.h	/^    size_t (*nr_free_pages)(void);                    \/\/ return the number of free pages $/;"	m	struct:pmm_manager
nr_map	kern/mm/memlayout.h	/^    int nr_map;$/;"	m	struct:e820map
nr_process	kern/process/proc.c	/^static int nr_process = 0;$/;"	v	file:
num	obj/kernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/kernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/kernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/kernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/badarg.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badarg.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badarg.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badarg.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badsegment.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badsegment.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/divzero.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/divzero.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/exit.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/exit.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/exit.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/exit.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultread.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultread.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktest.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktest.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktest.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktest.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktree.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktree.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/hello.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/hello.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/matrix.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/matrix.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/matrix.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/matrix.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/pgdir.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/pgdir.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/pgdir.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/pgdir.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/priority.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/priority.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/priority.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/priority.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/sleep.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/sleep.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/sleep.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/sleep.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/sleepkill.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/sleepkill.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/sleepkill.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/sleepkill.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/softint.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/softint.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/spin.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/spin.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/testbss.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/testbss.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/waitkill.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/waitkill.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/waitkill.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/waitkill.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/yield.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/yield.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/kernel.asm	/^        number:$/;"	l
number	obj/user/badarg.asm	/^        number:$/;"	l
number	obj/user/badsegment.asm	/^        number:$/;"	l
number	obj/user/divzero.asm	/^        number:$/;"	l
number	obj/user/exit.asm	/^        number:$/;"	l
number	obj/user/faultread.asm	/^        number:$/;"	l
number	obj/user/faultreadkernel.asm	/^        number:$/;"	l
number	obj/user/forktest.asm	/^        number:$/;"	l
number	obj/user/forktree.asm	/^        number:$/;"	l
number	obj/user/hello.asm	/^        number:$/;"	l
number	obj/user/matrix.asm	/^        number:$/;"	l
number	obj/user/pgdir.asm	/^        number:$/;"	l
number	obj/user/priority.asm	/^        number:$/;"	l
number	obj/user/sleep.asm	/^        number:$/;"	l
number	obj/user/sleepkill.asm	/^        number:$/;"	l
number	obj/user/softint.asm	/^        number:$/;"	l
number	obj/user/spin.asm	/^        number:$/;"	l
number	obj/user/testbss.asm	/^        number:$/;"	l
number	obj/user/waitkill.asm	/^        number:$/;"	l
number	obj/user/yield.asm	/^        number:$/;"	l
nvma	obj/kernel.asm	/^        nvma = vma_create(vma->vm_start, vma->vm_end, vma->vm_flags);$/;"	d
objfile	Makefile	/^objfile = $(call toobj,$(1))$/;"	m
off	obj/kernel.asm	/^            off = start + PGSIZE - la, size = PGSIZE - off;$/;"	d
off	obj/kernel.asm	/^            off = start - la, size = PGSIZE - off, la += PGSIZE;$/;"	d
offsetof	libs/defs.h	55;"	d
optr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
order	kern/mm/kmalloc.c	/^	int order;$/;"	m	struct:bigblock	file:
out	obj/kernel.asm	/^out:$/;"	l
outb	libs/x86.h	/^outb(uint16_t port, uint8_t data) {$/;"	f
outfile	Makefile	/^outfile = $(call cgtype,$(call toobj,$(1)),o,out)$/;"	m
outsl	libs/x86.h	/^outsl(uint32_t port, const void *addr, int cnt) {$/;"	f
outw	libs/x86.h	/^outw(uint16_t port, uint16_t data) {$/;"	f
owner	kern/sync/monitor.h	/^    monitor_t * owner;      \/\/ the owner(monitor) of this condvar$/;"	m	struct:condvar
p	obj/kernel.asm	/^                p = "(null)";$/;"	d
p	obj/kernel.asm	/^        p = le2page(le, page_link);$/;"	d
p	obj/kernel.asm	/^    p = alloc_page();$/;"	d
p	obj/user/badarg.asm	/^                p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^                p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^                p = "(null)";$/;"	d
p	obj/user/exit.asm	/^                p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^                p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^                p = "(null)";$/;"	d
p	obj/user/forktest.asm	/^                p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^                p = "(null)";$/;"	d
p	obj/user/hello.asm	/^                p = "(null)";$/;"	d
p	obj/user/matrix.asm	/^                p = "(null)";$/;"	d
p	obj/user/pgdir.asm	/^                p = "(null)";$/;"	d
p	obj/user/priority.asm	/^                p = "(null)";$/;"	d
p	obj/user/sleep.asm	/^                p = "(null)";$/;"	d
p	obj/user/sleepkill.asm	/^                p = "(null)";$/;"	d
p	obj/user/softint.asm	/^                p = "(null)";$/;"	d
p	obj/user/spin.asm	/^                p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^                p = "(null)";$/;"	d
p	obj/user/waitkill.asm	/^                p = "(null)";$/;"	d
p	obj/user/yield.asm	/^                p = "(null)";$/;"	d
p0	obj/kernel.asm	/^    p0 = p1 = p2 = NULL;$/;"	d
p1	obj/kernel.asm	/^    p1 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = p0 + 1;$/;"	d
p_align	libs/elf.h	/^    uint32_t p_align;  \/\/ required alignment, invariably hardware page size$/;"	m	struct:proghdr
p_filesz	libs/elf.h	/^    uint32_t p_filesz; \/\/ size of segment in file$/;"	m	struct:proghdr
p_flags	libs/elf.h	/^    uint32_t p_flags;  \/\/ read\/write\/execute bits$/;"	m	struct:proghdr
p_memsz	libs/elf.h	/^    uint32_t p_memsz;  \/\/ size of segment in memory (bigger if contains bss）$/;"	m	struct:proghdr
p_offset	libs/elf.h	/^    uint32_t p_offset; \/\/ file offset of segment$/;"	m	struct:proghdr
p_pa	libs/elf.h	/^    uint32_t p_pa;     \/\/ physical address, not used$/;"	m	struct:proghdr
p_type	libs/elf.h	/^    uint32_t p_type;   \/\/ loadable code or data, dynamic linking info,etc.$/;"	m	struct:proghdr
p_va	libs/elf.h	/^    uint32_t p_va;     \/\/ virtual address to map segment$/;"	m	struct:proghdr
pa	obj/kernel.asm	/^    pa = ROUNDDOWN(pa, PGSIZE);$/;"	d
pa2page	kern/mm/pmm.h	/^pa2page(uintptr_t pa) {$/;"	f
packetname	tools/function.mk	/^packetname = $(if $(1),$(addprefix $(OBJPREFIX),$(1)),$(OBJPREFIX))$/;"	m
padc	obj/kernel.asm	/^            padc = '-';$/;"	d
padc	obj/kernel.asm	/^            padc = '0';$/;"	d
padc	obj/user/badarg.asm	/^            padc = '-';$/;"	d
padc	obj/user/badarg.asm	/^            padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^            padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^            padc = '0';$/;"	d
padc	obj/user/exit.asm	/^            padc = '-';$/;"	d
padc	obj/user/exit.asm	/^            padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^            padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '0';$/;"	d
padc	obj/user/forktest.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktest.asm	/^            padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^            padc = '0';$/;"	d
padc	obj/user/hello.asm	/^            padc = '-';$/;"	d
padc	obj/user/hello.asm	/^            padc = '0';$/;"	d
padc	obj/user/matrix.asm	/^            padc = '-';$/;"	d
padc	obj/user/matrix.asm	/^            padc = '0';$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '-';$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '0';$/;"	d
padc	obj/user/priority.asm	/^            padc = '-';$/;"	d
padc	obj/user/priority.asm	/^            padc = '0';$/;"	d
padc	obj/user/sleep.asm	/^            padc = '-';$/;"	d
padc	obj/user/sleep.asm	/^            padc = '0';$/;"	d
padc	obj/user/sleepkill.asm	/^            padc = '-';$/;"	d
padc	obj/user/sleepkill.asm	/^            padc = '0';$/;"	d
padc	obj/user/softint.asm	/^            padc = '-';$/;"	d
padc	obj/user/softint.asm	/^            padc = '0';$/;"	d
padc	obj/user/spin.asm	/^            padc = '-';$/;"	d
padc	obj/user/spin.asm	/^            padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^            padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^            padc = '0';$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '-';$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '0';$/;"	d
padc	obj/user/yield.asm	/^            padc = '-';$/;"	d
padc	obj/user/yield.asm	/^            padc = '0';$/;"	d
page	obj/kernel.asm	/^              page = pmm_manager->alloc_pages(n);$/;"	d
page	obj/kernel.asm	/^            page = p;$/;"	d
page2kva	kern/mm/pmm.h	/^page2kva(struct Page *page) {$/;"	f
page2pa	kern/mm/pmm.h	/^page2pa(struct Page *page) {$/;"	f
page2ppn	kern/mm/pmm.h	/^page2ppn(struct Page *page) {$/;"	f
page_init	kern/mm/pmm.c	/^page_init(void) {$/;"	f	file:
page_insert	kern/mm/pmm.c	/^page_insert(pde_t *pgdir, struct Page *page, uintptr_t la, uint32_t perm) {$/;"	f
page_link	kern/mm/memlayout.h	/^    list_entry_t page_link;         \/\/ free list link$/;"	m	struct:Page
page_ref	kern/mm/pmm.h	/^page_ref(struct Page *page) {$/;"	f
page_ref_dec	kern/mm/pmm.h	/^page_ref_dec(struct Page *page) {$/;"	f
page_ref_inc	kern/mm/pmm.h	/^page_ref_inc(struct Page *page) {$/;"	f
page_remove	kern/mm/pmm.c	/^page_remove(pde_t *pgdir, uintptr_t la) {$/;"	f
page_remove_pte	kern/mm/pmm.c	/^page_remove_pte(pde_t *pgdir, uintptr_t la, pte_t *ptep) {$/;"	f	file:
pages	kern/mm/kmalloc.c	/^	void *pages;$/;"	m	struct:bigblock	file:
pages	kern/mm/pmm.c	/^struct Page *pages;$/;"	v	typeref:struct:Page
pages	obj/kernel.asm	/^    pages = (struct Page *)ROUNDUP((void *)end, PGSIZE);$/;"	d
panic	kern/debug/assert.h	12;"	d
panic	user/libs/ulib.h	12;"	d
panic_dead	obj/kernel.asm	/^panic_dead:$/;"	l
parent	kern/process/proc.h	/^    struct proc_struct *parent;                 \/\/ the parent process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
parent	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::skew_heap_entry
parent	obj/user/waitkill.asm	/^    parent = getpid();$/;"	d
parent	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
parse	kern/debug/kmonitor.c	/^parse(char *buf, char **argv) {$/;"	f	file:
pass	tools/grade.sh	/^pass() {$/;"	f
pd_base	libs/x86.h	/^    uintptr_t pd_base;      \/\/ Base address$/;"	m	struct:pseudodesc
pd_lim	libs/x86.h	/^    uint16_t pd_lim;        \/\/ Limit$/;"	m	struct:pseudodesc
pde2page	kern/mm/pmm.h	/^pde2page(pde_t pde) {$/;"	f
pde_t	kern/mm/memlayout.h	/^typedef uintptr_t pde_t;$/;"	t
perm2str	kern/mm/pmm.c	/^perm2str(int perm) {$/;"	f	file:
pgdir	kern/mm/vmm.h	/^    pde_t *pgdir;                  \/\/ the PDT of these vma$/;"	m	struct:mm_struct
pgdir_alloc_page	kern/mm/pmm.c	/^pgdir_alloc_page(pde_t *pgdir, uintptr_t la, uint32_t perm) {$/;"	f
pgfault_handler	kern/trap/trap.c	/^pgfault_handler(struct trapframe *tf) {$/;"	f	file:
pgfault_num	kern/mm/vmm.c	/^volatile unsigned int pgfault_num=0;$/;"	v
ph	obj/bootblock.asm	/^    ph = (struct proghdr *)((uintptr_t)ELFHDR + ELFHDR->e_phoff);$/;"	d
phi_put_forks_condvar	kern/sync/check_sync.c	/^void phi_put_forks_condvar(int i) {$/;"	f
phi_put_forks_sema	kern/sync/check_sync.c	/^void phi_put_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	f
phi_take_forks_condvar	kern/sync/check_sync.c	/^void phi_take_forks_condvar(int i) {$/;"	f
phi_take_forks_sema	kern/sync/check_sync.c	/^void phi_take_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	f
phi_test_condvar	kern/sync/check_sync.c	/^void phi_test_condvar (i) { $/;"	f
phi_test_sema	kern/sync/check_sync.c	/^void phi_test_sema(i) \/* i：哲学家号码从0到N-1 *\/$/;"	f
philosopher_proc_condvar	kern/sync/check_sync.c	/^struct proc_struct *philosopher_proc_condvar[N]; \/\/ N philosopher$/;"	v	typeref:struct:proc_struct
philosopher_proc_sema	kern/sync/check_sync.c	/^struct proc_struct *philosopher_proc_sema[N];$/;"	v	typeref:struct:proc_struct
philosopher_using_condvar	kern/sync/check_sync.c	/^int philosopher_using_condvar(void * arg) { \/* arg is the No. of philosopher 0~N-1*\/$/;"	f
philosopher_using_semaphore	kern/sync/check_sync.c	/^int philosopher_using_semaphore(void * arg) \/* i：哲学家号码，从0到N-1 *\/$/;"	f
pic_enable	kern/driver/picirq.c	/^pic_enable(unsigned int irq) {$/;"	f
pic_init	kern/driver/picirq.c	/^pic_init(void) {$/;"	f
pic_setmask	kern/driver/picirq.c	/^pic_setmask(uint16_t mask) {$/;"	f	file:
pick_next	kern/schedule/sched.h	/^    struct proc_struct *(*pick_next)(struct run_queue *rq);$/;"	m	struct:sched_class	typeref:struct:sched_class::pick_next
pid	kern/process/proc.h	/^    int pid;                                    \/\/ Process ID$/;"	m	struct:proc_struct
pid	obj/user/spin.asm	/^    pid = fork();$/;"	d
pid1	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid2	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid_hashfn	kern/process/proc.c	67;"	d	file:
pids	user/priority.c	/^int pids[TOTAL];$/;"	v
pmm_init	kern/mm/pmm.c	/^pmm_init(void) {$/;"	f
pmm_manager	kern/mm/pmm.c	/^const struct pmm_manager *pmm_manager;$/;"	v	typeref:struct:pmm_manager
pmm_manager	kern/mm/pmm.h	/^struct pmm_manager {$/;"	s
pmm_manager	obj/kernel.asm	/^    pmm_manager = &default_pmm_manager;$/;"	d
pos	obj/kernel.asm	/^    pos = inb(addr_6845 + 1) << 8;$/;"	d
ppn_t	libs/defs.h	/^typedef size_t ppn_t;$/;"	t
pra_list_head	kern/mm/swap_fifo.c	/^list_entry_t pra_list_head;$/;"	v
pra_page_link	kern/mm/memlayout.h	/^    list_entry_t pra_page_link;     \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
pra_vaddr	kern/mm/memlayout.h	/^    uintptr_t pra_vaddr;            \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
precision	obj/kernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kernel.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/badarg.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badarg.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/exit.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/exit.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktest.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktest.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/matrix.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/matrix.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/pgdir.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pgdir.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/priority.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/priority.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/sleep.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sleep.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/sleepkill.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sleepkill.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/waitkill.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/waitkill.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^            precision = va_arg(ap, int);$/;"	d
prev	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::list_entry
prev	obj/kernel.asm	/^				prev = cur;$/;"	d
prev	obj/kernel.asm	/^	prev = slobfree;$/;"	d
print_debuginfo	kern/debug/kdebug.c	/^print_debuginfo(uintptr_t eip) {$/;"	f
print_free_link	kern/mm/default_pmm.c	/^void print_free_link(){$/;"	f
print_kerninfo	kern/debug/kdebug.c	/^print_kerninfo(void) {$/;"	f
print_pgdir	kern/mm/pmm.c	/^print_pgdir(void) {$/;"	f
print_pgdir	user/libs/ulib.c	/^print_pgdir(void) {$/;"	f
print_pgfault	kern/trap/trap.c	/^print_pgfault(struct trapframe *tf) {$/;"	f	file:
print_regs	kern/trap/trap.c	/^print_regs(struct pushregs *regs) {$/;"	f
print_stackframe	kern/debug/kdebug.c	/^print_stackframe(void) {$/;"	f
print_ticks	kern/trap/trap.c	/^static void print_ticks() {$/;"	f	file:
print_trapframe	kern/trap/trap.c	/^print_trapframe(struct trapframe *tf) {$/;"	f
printfmt	libs/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...) {$/;"	f
printnum	libs/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
probe_memory	boot/bootasm.S	/^probe_memory:$/;"	l
probe_memory	obj/bootblock.asm	/^probe_memory:$/;"	l
proc	kern/schedule/sched.h	/^    struct proc_struct *proc;   \/\/the proc wait in this timer. If the expire time is end, then this proc will be scheduled$/;"	m	struct:__anon4	typeref:struct:__anon4::proc_struct
proc	kern/sync/wait.h	/^    struct proc_struct *proc;$/;"	m	struct:__anon2	typeref:struct:__anon2::proc_struct
proc	obj/kernel.asm	/^            proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^            proc = le2proc(le, list_link);$/;"	d
proc	obj/kernel.asm	/^        proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^        proc = current->parent;$/;"	d
proc	obj/kernel.asm	/^        proc = find_proc(pid);$/;"	d
proc	obj/kernel.asm	/^    proc = alloc_proc();$/;"	d
proc_init	kern/process/proc.c	/^proc_init(void) {$/;"	f
proc_list	kern/process/proc.c	/^list_entry_t proc_list;$/;"	v
proc_num	kern/schedule/sched.h	/^    unsigned int proc_num;$/;"	m	struct:run_queue
proc_run	kern/process/proc.c	/^proc_run(struct proc_struct *proc) {$/;"	f
proc_state	kern/process/proc.h	/^enum proc_state {$/;"	g
proc_stride_comp_f	kern/schedule/default_sched_stride.c	/^proc_stride_comp_f(void *a, void *b)$/;"	f	file:
proc_struct	kern/process/proc.h	/^struct proc_struct {$/;"	s
proc_tick	kern/schedule/sched.h	/^    void (*proc_tick)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
process_precision	obj/kernel.asm	/^        process_precision:$/;"	l
process_precision	obj/user/badarg.asm	/^        process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^        process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^        process_precision:$/;"	l
process_precision	obj/user/exit.asm	/^        process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^        process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^        process_precision:$/;"	l
process_precision	obj/user/forktest.asm	/^        process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^        process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^        process_precision:$/;"	l
process_precision	obj/user/matrix.asm	/^        process_precision:$/;"	l
process_precision	obj/user/pgdir.asm	/^        process_precision:$/;"	l
process_precision	obj/user/priority.asm	/^        process_precision:$/;"	l
process_precision	obj/user/sleep.asm	/^        process_precision:$/;"	l
process_precision	obj/user/sleepkill.asm	/^        process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^        process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^        process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^        process_precision:$/;"	l
process_precision	obj/user/waitkill.asm	/^        process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^        process_precision:$/;"	l
proghdr	libs/elf.h	/^struct proghdr {$/;"	s
property	kern/mm/memlayout.h	/^    unsigned int property;          \/\/ the num of free block, used in first fit pm manager$/;"	m	struct:Page
protcseg	boot/bootasm.S	/^protcseg:$/;"	l
protcseg	obj/bootblock.asm	/^protcseg:$/;"	l
pseudodesc	libs/x86.h	/^struct pseudodesc {$/;"	s
pte2page	kern/mm/pmm.h	/^pte2page(pte_t pte) {$/;"	f
pte_t	kern/mm/memlayout.h	/^typedef uintptr_t pte_t;$/;"	t
pte_t	obj/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kernel.asm	/^    ptep = &((pte_t *)KADDR(PDE_ADDR(boot_pgdir[0])))[1];$/;"	d
ptep	obj/kernel.asm	/^   ptep = get_pte(mm->pgdir, addr, 1);$/;"	d
pushregs	kern/trap/trap.h	/^struct pushregs {$/;"	s
put_kstack	kern/process/proc.c	/^put_kstack(struct proc_struct *proc) {$/;"	f	file:
put_pgdir	kern/process/proc.c	/^put_pgdir(struct mm_struct *mm) {$/;"	f	file:
quick_check	tools/grade.sh	/^quick_check() {$/;"	f
quick_run	tools/grade.sh	/^quick_run() {$/;"	f
r	obj/kernel.asm	/^            r = m - 1;$/;"	d
r	obj/kernel.asm	/^          r = a->left;$/;"	d
r	obj/kernel.asm	/^          r = b->left;$/;"	d
rand	libs/rand.c	/^rand(void) {$/;"	f
rcr0	libs/x86.h	/^rcr0(void) {$/;"	f
rcr1	libs/x86.h	/^rcr1(void) {$/;"	f
rcr2	libs/x86.h	/^rcr2(void) {$/;"	f
rcr3	libs/x86.h	/^rcr3(void) {$/;"	f
read_dr	libs/x86.h	/^read_dr(unsigned regnum) {$/;"	f
read_ebp	libs/x86.h	/^read_ebp(void) {$/;"	f
read_eflags	libs/x86.h	/^read_eflags(void) {$/;"	f
read_eip	kern/debug/kdebug.c	/^read_eip(void) {$/;"	f	file:
read_packet	tools/function.mk	/^read_packet = $(foreach p,$(call packetname,$(1)),$($(p)))$/;"	m
readline	kern/libs/readline.c	/^readline(const char *prompt) {$/;"	f
readsect	boot/bootmain.c	/^readsect(void *dst, uint32_t secno) {$/;"	f	file:
readseg	boot/bootmain.c	/^readseg(uintptr_t va, uint32_t count, uint32_t offset) {$/;"	f	file:
ref	kern/mm/memlayout.h	/^    int ref;                        \/\/ page frame's reference counter$/;"	m	struct:Page
reg_eax	kern/trap/trap.h	/^    uint32_t reg_eax;$/;"	m	struct:pushregs
reg_ebp	kern/trap/trap.h	/^    uint32_t reg_ebp;$/;"	m	struct:pushregs
reg_ebx	kern/trap/trap.h	/^    uint32_t reg_ebx;$/;"	m	struct:pushregs
reg_ecx	kern/trap/trap.h	/^    uint32_t reg_ecx;$/;"	m	struct:pushregs
reg_edi	kern/trap/trap.h	/^    uint32_t reg_edi;$/;"	m	struct:pushregs
reg_edx	kern/trap/trap.h	/^    uint32_t reg_edx;$/;"	m	struct:pushregs
reg_esi	kern/trap/trap.h	/^    uint32_t reg_esi;$/;"	m	struct:pushregs
reg_oesp	kern/trap/trap.h	/^    uint32_t reg_oesp;          \/* Useless *\/$/;"	m	struct:pushregs
relocated	kern/init/entry.S	/^relocated:$/;"	l
relocated	obj/kernel.asm	/^relocated:$/;"	l
remove_links	kern/process/proc.c	/^remove_links(struct proc_struct *proc) {$/;"	f	file:
repeat	obj/kernel.asm	/^    repeat:$/;"	l
repeat	obj/kernel.asm	/^repeat:$/;"	l
reswitch	obj/kernel.asm	/^    reswitch:$/;"	l
reswitch	obj/user/badarg.asm	/^    reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^    reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^    reswitch:$/;"	l
reswitch	obj/user/exit.asm	/^    reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^    reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^    reswitch:$/;"	l
reswitch	obj/user/forktest.asm	/^    reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^    reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^    reswitch:$/;"	l
reswitch	obj/user/matrix.asm	/^    reswitch:$/;"	l
reswitch	obj/user/pgdir.asm	/^    reswitch:$/;"	l
reswitch	obj/user/priority.asm	/^    reswitch:$/;"	l
reswitch	obj/user/sleep.asm	/^    reswitch:$/;"	l
reswitch	obj/user/sleepkill.asm	/^    reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^    reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^    reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^    reswitch:$/;"	l
reswitch	obj/user/waitkill.asm	/^    reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^    reswitch:$/;"	l
ret	obj/kernel.asm	/^            ret = -E_INVAL_ELF;$/;"	d
ret	obj/kernel.asm	/^         ret = page_insert(to, npage, start, perm);$/;"	d
ret	obj/kernel.asm	/^        ret = -E_INVAL_ELF;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^        ret = dup_mmap(mm, oldmm);$/;"	d
ret	obj/kernel.asm	/^        ret = pmm_manager->nr_free_pages();$/;"	d
ret	obj/kernel.asm	/^    ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^    ret = 0;$/;"	d
ret	obj/kernel.asm	/^    ret = proc->pid;$/;"	d
ret	obj/kernel.asm	/^   ret = 0;$/;"	d
right	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::
rline	obj/kernel.asm	/^        rline = rfile;$/;"	d
rline	obj/kernel.asm	/^        rline = rfun;$/;"	d
rpos	kern/driver/console.c	/^    uint32_t rpos;$/;"	m	struct:__anon8	file:
rq	kern/process/proc.h	/^    struct run_queue *rq;                       \/\/ running queue contains Process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::run_queue
rq	kern/schedule/sched.c	/^static struct run_queue *rq;$/;"	v	typeref:struct:run_queue	file:
rq	obj/kernel.asm	/^    rq = &__rq;$/;"	d
run_link	kern/process/proc.h	/^    list_entry_t run_link;                      \/\/ the entry linked in run queue$/;"	m	struct:proc_struct
run_list	kern/schedule/sched.h	/^    list_entry_t run_list;$/;"	m	struct:run_queue
run_qemu	tools/grade.sh	/^run_qemu() {$/;"	f
run_queue	kern/schedule/sched.h	/^struct run_queue {$/;"	s
run_test	tools/grade.sh	/^run_test() {$/;"	f
run_timer_list	kern/schedule/sched.c	/^run_timer_list(void) {$/;"	f
runcmd	kern/debug/kmonitor.c	/^runcmd(char *buf, struct trapframe *tf) {$/;"	f	file:
runs	kern/process/proc.h	/^    int runs;                                   \/\/ the running times of Proces$/;"	m	struct:proc_struct
s	kern/sync/check_sync.c	/^semaphore_t s[N]; \/* 每个哲学家一个信号量 *\/$/;"	v
sched_class	kern/schedule/sched.c	/^static struct sched_class *sched_class;$/;"	v	typeref:struct:sched_class	file:
sched_class	kern/schedule/sched.h	/^struct sched_class {$/;"	s
sched_class	obj/kernel.asm	/^    sched_class = &default_sched_class;$/;"	d
sched_class_dequeue	kern/schedule/sched.c	/^sched_class_dequeue(struct proc_struct *proc) {$/;"	f	file:
sched_class_enqueue	kern/schedule/sched.c	/^sched_class_enqueue(struct proc_struct *proc) {$/;"	f	file:
sched_class_pick_next	kern/schedule/sched.c	/^sched_class_pick_next(void) {$/;"	f	file:
sched_class_proc_tick	kern/schedule/sched.c	/^sched_class_proc_tick(struct proc_struct *proc) {$/;"	f	file:
sched_init	kern/schedule/sched.c	/^sched_init(void) {$/;"	f
schedule	kern/schedule/sched.c	/^schedule(void) {$/;"	f
sd_avl	kern/mm/mmu.h	/^    unsigned sd_avl : 1;            \/\/ unused (available for software use)$/;"	m	struct:segdesc
sd_base_15_0	kern/mm/mmu.h	/^    unsigned sd_base_15_0 : 16;     \/\/ low bits of segment base address$/;"	m	struct:segdesc
sd_base_23_16	kern/mm/mmu.h	/^    unsigned sd_base_23_16 : 8;     \/\/ middle bits of segment base address$/;"	m	struct:segdesc
sd_base_31_24	kern/mm/mmu.h	/^    unsigned sd_base_31_24 : 8;     \/\/ high bits of segment base address$/;"	m	struct:segdesc
sd_db	kern/mm/mmu.h	/^    unsigned sd_db : 1;             \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:segdesc
sd_dpl	kern/mm/mmu.h	/^    unsigned sd_dpl : 2;            \/\/ descriptor Privilege Level$/;"	m	struct:segdesc
sd_g	kern/mm/mmu.h	/^    unsigned sd_g : 1;              \/\/ granularity: limit scaled by 4K when set$/;"	m	struct:segdesc
sd_lim_15_0	kern/mm/mmu.h	/^    unsigned sd_lim_15_0 : 16;      \/\/ low bits of segment limit$/;"	m	struct:segdesc
sd_lim_19_16	kern/mm/mmu.h	/^    unsigned sd_lim_19_16 : 4;      \/\/ high bits of segment limit$/;"	m	struct:segdesc
sd_p	kern/mm/mmu.h	/^    unsigned sd_p : 1;              \/\/ present$/;"	m	struct:segdesc
sd_rsv1	kern/mm/mmu.h	/^    unsigned sd_rsv1 : 1;           \/\/ reserved$/;"	m	struct:segdesc
sd_s	kern/mm/mmu.h	/^    unsigned sd_s : 1;              \/\/ 0 = system, 1 = application$/;"	m	struct:segdesc
sd_type	kern/mm/mmu.h	/^    unsigned sd_type : 4;           \/\/ segment type (see STS_ constants)$/;"	m	struct:segdesc
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA);$/;"	d
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA_EXT);$/;"	d
segdesc	kern/mm/mmu.h	/^struct segdesc {$/;"	s
sem	kern/sync/monitor.h	/^    semaphore_t sem;        \/\/ the sem semaphore  is used to down the waiting proc, and the signaling proc should up the waiting proc$/;"	m	struct:condvar
sem_init	kern/sync/sem.c	/^sem_init(semaphore_t *sem, int value) {$/;"	f
semaphore_t	kern/sync/sem.h	/^} semaphore_t;$/;"	t	typeref:struct:__anon3
semaphore_t	obj/kernel.asm	/^semaphore_t s[N]; \/* 每个哲学家一个信号量 *\/$/;"	l
serial_exists	kern/driver/console.c	/^static bool serial_exists = 0;$/;"	v	file:
serial_exists	obj/kernel.asm	/^    serial_exists = (inb(COM1 + COM_LSR) != 0xFF);$/;"	d
serial_init	kern/driver/console.c	/^serial_init(void) {$/;"	f	file:
serial_intr	kern/driver/console.c	/^serial_intr(void) {$/;"	f
serial_proc_data	kern/driver/console.c	/^serial_proc_data(void) {$/;"	f	file:
serial_putc	kern/driver/console.c	/^serial_putc(int c) {$/;"	f	file:
serial_putc_sub	kern/driver/console.c	/^serial_putc_sub(int c) {$/;"	f	file:
set_bit	libs/atomic.h	/^set_bit(int nr, volatile void *addr) {$/;"	f
set_links	kern/process/proc.c	/^set_links(struct proc_struct *proc) {$/;"	f	file:
set_mm_count	kern/mm/vmm.h	/^set_mm_count(struct mm_struct *mm, int val) {$/;"	f
set_page_ref	kern/mm/pmm.h	/^set_page_ref(struct Page *page, int val) {$/;"	f
set_proc_name	kern/process/proc.c	/^set_proc_name(struct proc_struct *proc, const char *name) {$/;"	f
set_unswappable	kern/mm/swap.h	/^     int (*set_unswappable) (struct mm_struct *mm, uintptr_t addr);$/;"	m	struct:swap_manager
sets	kern/driver/ide.c	/^    unsigned int sets;          \/\/ Commend Sets Supported$/;"	m	struct:ide_device	file:
setup_kstack	kern/process/proc.c	/^setup_kstack(struct proc_struct *proc) {$/;"	f	file:
setup_pgdir	kern/process/proc.c	/^setup_pgdir(struct mm_struct *mm) {$/;"	f	file:
shiftcode	kern/driver/console.c	/^static uint8_t shiftcode[256] = {$/;"	v	file:
shiftmap	kern/driver/console.c	/^static uint8_t shiftmap[256] = {$/;"	v	file:
show_build_tag	tools/grade.sh	/^show_build_tag() {$/;"	f
show_check_tag	tools/grade.sh	/^show_check_tag() {$/;"	f
show_final	tools/grade.sh	/^show_final() {$/;"	f
show_msg	tools/grade.sh	/^show_msg() {$/;"	f
show_part	tools/grade.sh	/^show_part() {$/;"	f
show_time	tools/grade.sh	/^show_time() {$/;"	f
size	kern/driver/ide.c	/^    unsigned int size;          \/\/ Size in Sectors$/;"	m	struct:ide_device	file:
size	kern/mm/memlayout.h	/^        uint64_t size;$/;"	m	struct:e820map::__anon5
size_t	libs/defs.h	/^typedef uintptr_t size_t;$/;"	t
size_t	obj/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badarg.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/exit.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/forktest.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/matrix.asm	/^size_t$/;"	l
size_t	obj/user/pgdir.asm	/^size_t$/;"	l
size_t	obj/user/priority.asm	/^size_t$/;"	l
size_t	obj/user/sleep.asm	/^size_t$/;"	l
size_t	obj/user/sleepkill.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/waitkill.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skew_heap_entry	libs/skew_heap.h	/^struct skew_heap_entry {$/;"	s
skew_heap_entry_t	libs/skew_heap.h	/^typedef struct skew_heap_entry skew_heap_entry_t;$/;"	t	typeref:struct:skew_heap_entry
skew_heap_init	libs/skew_heap.h	/^skew_heap_init(skew_heap_entry_t *a)$/;"	f
skew_heap_insert	libs/skew_heap.h	/^skew_heap_insert(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
skew_heap_merge	libs/skew_heap.h	/^skew_heap_merge(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
skew_heap_remove	libs/skew_heap.h	/^skew_heap_remove(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
sleep	user/libs/ulib.c	/^sleep(unsigned int time) {$/;"	f
sleepy	user/sleep.c	/^sleepy(int pid) {$/;"	f
slob_alloc	kern/mm/kmalloc.c	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	f	file:
slob_allocated	kern/mm/kmalloc.c	/^slob_allocated(void) {$/;"	f
slob_block	kern/mm/kmalloc.c	/^struct slob_block {$/;"	s	file:
slob_free	kern/mm/kmalloc.c	/^static void slob_free(void *block, int size)$/;"	f	file:
slob_init	kern/mm/kmalloc.c	/^slob_init(void) {$/;"	f
slob_t	kern/mm/kmalloc.c	/^typedef struct slob_block slob_t;$/;"	t	typeref:struct:slob_block	file:
slobfree	kern/mm/kmalloc.c	/^static slob_t *slobfree = &arena;$/;"	v	file:
slobfree	obj/kernel.asm	/^			slobfree = prev;$/;"	d
slobfree	obj/kernel.asm	/^	slobfree = cur;$/;"	d
sm	kern/mm/swap.c	/^static struct swap_manager *sm;$/;"	v	typeref:struct:swap_manager	file:
sm	obj/kernel.asm	/^     sm = &swap_manager_fifo;$/;"	d
sm_priv	kern/mm/vmm.h	/^    void *sm_priv;                 \/\/ the private data for swap manager$/;"	m	struct:mm_struct
snprintf	libs/printfmt.c	/^snprintf(char *str, size_t size, const char *fmt, ...) {$/;"	f
spin	boot/bootasm.S	/^spin:$/;"	l
spin	kern/init/entry.S	/^spin:$/;"	l
spin	obj/bootblock.asm	/^spin:$/;"	l
spin	obj/kernel.asm	/^spin:$/;"	l
spin_delay	user/priority.c	/^spin_delay(void)$/;"	f	file:
spin_lock_irqsave	kern/mm/kmalloc.c	43;"	d	file:
spin_unlock_irqrestore	kern/mm/kmalloc.c	44;"	d	file:
sprintbuf	libs/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	libs/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b) {$/;"	f	file:
srand	libs/rand.c	/^srand(unsigned int seed) {$/;"	f
stab	kern/debug/stab.h	/^struct stab {$/;"	s
stab_binsearch	kern/debug/kdebug.c	/^stab_binsearch(const struct stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/debug/kdebug.c	/^    const struct stab *stab_end;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stab_end	obj/kernel.asm	/^        stab_end = __STAB_END__;$/;"	d
stab_end	obj/kernel.asm	/^        stab_end = usd->stab_end;$/;"	d
stabs	kern/debug/kdebug.c	/^    const struct stab *stabs;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stabs	obj/kernel.asm	/^        stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kernel.asm	/^        stabs = usd->stabs;$/;"	d
stabstr	kern/debug/kdebug.c	/^    const char *stabstr;$/;"	m	struct:userstabdata	file:
stabstr	obj/kernel.asm	/^        stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kernel.asm	/^        stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/debug/kdebug.c	/^    const char *stabstr_end;$/;"	m	struct:userstabdata	file:
stabstr_end	obj/kernel.asm	/^        stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kernel.asm	/^        stabstr_end = usd->stabstr_end;$/;"	d
start	boot/bootasm.S	/^start:$/;"	l
start	obj/bootblock.asm	/^start:$/;"	l
start	obj/kernel.asm	/^            start = ROUNDDOWN(start + PTSIZE, PTSIZE);$/;"	d
start	obj/kernel.asm	/^            start = vma->vm_end;$/;"	d
start	obj/kernel.asm	/^    start = ROUNDDOWN(start, PTSIZE);$/;"	d
start_probe	boot/bootasm.S	/^start_probe:$/;"	l
start_probe	obj/bootblock.asm	/^start_probe:$/;"	l
state	kern/process/proc.h	/^    enum proc_state state;                      \/\/ Process state$/;"	m	struct:proc_struct	typeref:enum:proc_struct::proc_state
state_condvar	kern/sync/check_sync.c	/^int state_condvar[N];                            \/\/ the philosopher's state: EATING, HUNGARY, THINKING  $/;"	v
state_sema	kern/sync/check_sync.c	/^int state_sema[N]; \/* 记录每个人状态的数组 *\/$/;"	v
static	obj/bootblock.asm	/^static inline uint8_t$/;"	l
static	obj/bootblock.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/bootblock.asm	/^static inline void$/;"	l
static	obj/bootblock.asm	/^static void$/;"	l
static	obj/kernel.asm	/^static __noinline uint32_t __down(semaphore_t *sem, uint32_t wait_state) {$/;"	l
static	obj/kernel.asm	/^static __noinline uint32_t$/;"	l
static	obj/kernel.asm	/^static __noinline void __up(semaphore_t *sem, uint32_t wait_state) {$/;"	l
static	obj/kernel.asm	/^static bigblock_t *bigblocks;$/;"	l
static	obj/kernel.asm	/^static bool did_init = 0;$/;"	l
static	obj/kernel.asm	/^static bool serial_exists = 0;$/;"	l
static	obj/kernel.asm	/^static const char *$/;"	l
static	obj/kernel.asm	/^static inline bool$/;"	l
static	obj/kernel.asm	/^static inline char *$/;"	l
static	obj/kernel.asm	/^static inline int$/;"	l
static	obj/kernel.asm	/^static inline list_entry_t *$/;"	l
static	obj/kernel.asm	/^static inline ppn_t$/;"	l
static	obj/kernel.asm	/^static inline skew_heap_entry_t *$/;"	l
static	obj/kernel.asm	/^static inline struct Page *$/;"	l
static	obj/kernel.asm	/^static inline struct proc_struct *$/;"	l
static	obj/kernel.asm	/^static inline timer_t *$/;"	l
static	obj/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kernel.asm	/^static inline uintptr_t$/;"	l
static	obj/kernel.asm	/^static inline void *$/;"	l
static	obj/kernel.asm	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	l
static	obj/kernel.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/kernel.asm	/^static inline void$/;"	l
static	obj/kernel.asm	/^static int find_order(int size)$/;"	l
static	obj/kernel.asm	/^static int$/;"	l
static	obj/kernel.asm	/^static long long$/;"	l
static	obj/kernel.asm	/^static size_t$/;"	l
static	obj/kernel.asm	/^static slob_t *slobfree = &arena;$/;"	l
static	obj/kernel.asm	/^static struct Page *$/;"	t
static	obj/kernel.asm	/^static struct proc_struct *$/;"	t
static	obj/kernel.asm	/^static struct run_queue *rq;$/;"	t
static	obj/kernel.asm	/^static struct run_queue __rq;$/;"	t
static	obj/kernel.asm	/^static struct sched_class *sched_class;$/;"	t
static	obj/kernel.asm	/^static uint16_t addr_6845;$/;"	l
static	obj/kernel.asm	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	l
static	obj/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kernel.asm	/^static void *$/;"	l
static	obj/kernel.asm	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	l
static	obj/kernel.asm	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	l
static	obj/kernel.asm	/^static void check_pgfault(void);$/;"	l
static	obj/kernel.asm	/^static void check_swap(void);$/;"	l
static	obj/kernel.asm	/^static void check_vma_struct(void);$/;"	l
static	obj/kernel.asm	/^static void lab1_switch_test(void);$/;"	l
static	obj/kernel.asm	/^static void print_ticks() {$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *b, int size);$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *block, int size)$/;"	l
static	obj/kernel.asm	/^static void$/;"	l
static	obj/kernel.asm	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	l
static	obj/kernel.asm	/^static volatile int in_swap_tick_event = 0;$/;"	l
static	obj/user/badarg.asm	/^static inline char *$/;"	l
static	obj/user/badarg.asm	/^static inline int$/;"	l
static	obj/user/badarg.asm	/^static inline void *$/;"	l
static	obj/user/badarg.asm	/^static long long$/;"	l
static	obj/user/badarg.asm	/^static unsigned long long$/;"	l
static	obj/user/badarg.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static inline char *$/;"	l
static	obj/user/badsegment.asm	/^static inline int$/;"	l
static	obj/user/badsegment.asm	/^static inline void *$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static inline char *$/;"	l
static	obj/user/divzero.asm	/^static inline int$/;"	l
static	obj/user/divzero.asm	/^static inline void *$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/exit.asm	/^static inline char *$/;"	l
static	obj/user/exit.asm	/^static inline int$/;"	l
static	obj/user/exit.asm	/^static inline void *$/;"	l
static	obj/user/exit.asm	/^static long long$/;"	l
static	obj/user/exit.asm	/^static unsigned long long$/;"	l
static	obj/user/exit.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static inline char *$/;"	l
static	obj/user/faultread.asm	/^static inline int$/;"	l
static	obj/user/faultread.asm	/^static inline void *$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline char *$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline int$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline void *$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/forktest.asm	/^static inline char *$/;"	l
static	obj/user/forktest.asm	/^static inline int$/;"	l
static	obj/user/forktest.asm	/^static inline void *$/;"	l
static	obj/user/forktest.asm	/^static long long$/;"	l
static	obj/user/forktest.asm	/^static unsigned long long$/;"	l
static	obj/user/forktest.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static inline char *$/;"	l
static	obj/user/forktree.asm	/^static inline int$/;"	l
static	obj/user/forktree.asm	/^static inline void *$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static inline char *$/;"	l
static	obj/user/hello.asm	/^static inline int$/;"	l
static	obj/user/hello.asm	/^static inline void *$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/matrix.asm	/^static inline char *$/;"	l
static	obj/user/matrix.asm	/^static inline int$/;"	l
static	obj/user/matrix.asm	/^static inline void *$/;"	l
static	obj/user/matrix.asm	/^static int mata[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int matb[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int matc[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static long long$/;"	l
static	obj/user/matrix.asm	/^static unsigned long long$/;"	l
static	obj/user/matrix.asm	/^static void$/;"	l
static	obj/user/pgdir.asm	/^static inline char *$/;"	l
static	obj/user/pgdir.asm	/^static inline int$/;"	l
static	obj/user/pgdir.asm	/^static inline void *$/;"	l
static	obj/user/pgdir.asm	/^static long long$/;"	l
static	obj/user/pgdir.asm	/^static unsigned long long$/;"	l
static	obj/user/pgdir.asm	/^static void$/;"	l
static	obj/user/priority.asm	/^static inline char *$/;"	l
static	obj/user/priority.asm	/^static inline int$/;"	l
static	obj/user/priority.asm	/^static inline void *$/;"	l
static	obj/user/priority.asm	/^static long long$/;"	l
static	obj/user/priority.asm	/^static unsigned long long$/;"	l
static	obj/user/priority.asm	/^static void$/;"	l
static	obj/user/sleep.asm	/^static inline char *$/;"	l
static	obj/user/sleep.asm	/^static inline int$/;"	l
static	obj/user/sleep.asm	/^static inline void *$/;"	l
static	obj/user/sleep.asm	/^static long long$/;"	l
static	obj/user/sleep.asm	/^static unsigned long long$/;"	l
static	obj/user/sleep.asm	/^static void$/;"	l
static	obj/user/sleepkill.asm	/^static inline char *$/;"	l
static	obj/user/sleepkill.asm	/^static inline int$/;"	l
static	obj/user/sleepkill.asm	/^static inline void *$/;"	l
static	obj/user/sleepkill.asm	/^static long long$/;"	l
static	obj/user/sleepkill.asm	/^static unsigned long long$/;"	l
static	obj/user/sleepkill.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static inline char *$/;"	l
static	obj/user/softint.asm	/^static inline int$/;"	l
static	obj/user/softint.asm	/^static inline void *$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static inline char *$/;"	l
static	obj/user/spin.asm	/^static inline int$/;"	l
static	obj/user/spin.asm	/^static inline void *$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static inline char *$/;"	l
static	obj/user/testbss.asm	/^static inline int$/;"	l
static	obj/user/testbss.asm	/^static inline void *$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/waitkill.asm	/^static inline char *$/;"	l
static	obj/user/waitkill.asm	/^static inline int$/;"	l
static	obj/user/waitkill.asm	/^static inline void *$/;"	l
static	obj/user/waitkill.asm	/^static long long$/;"	l
static	obj/user/waitkill.asm	/^static unsigned long long$/;"	l
static	obj/user/waitkill.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static inline char *$/;"	l
static	obj/user/yield.asm	/^static inline int$/;"	l
static	obj/user/yield.asm	/^static inline void *$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	kern/debug/assert.h	23;"	d
static_assert	user/libs/ulib.h	23;"	d
status	user/priority.c	/^int status[TOTAL];$/;"	v
sti	libs/x86.h	/^sti(void) {$/;"	f
strchr	libs/string.c	/^strchr(const char *s, char c) {$/;"	f
strcmp	libs/string.c	/^strcmp(const char *s1, const char *s2) {$/;"	f
strcpy	libs/string.c	/^strcpy(char *dst, const char *src) {$/;"	f
strfind	libs/string.c	/^strfind(const char *s, char c) {$/;"	f
stride_dequeue	kern/schedule/default_sched_stride.c	/^stride_dequeue(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
stride_enqueue	kern/schedule/default_sched_stride.c	/^stride_enqueue(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
stride_init	kern/schedule/default_sched_stride.c	/^stride_init(struct run_queue *rq) {$/;"	f	file:
stride_pick_next	kern/schedule/default_sched_stride.c	/^stride_pick_next(struct run_queue *rq) {$/;"	f	file:
stride_proc_tick	kern/schedule/default_sched_stride.c	/^stride_proc_tick(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
strlen	libs/string.c	/^strlen(const char *s) {$/;"	f
strncmp	libs/string.c	/^strncmp(const char *s1, const char *s2, size_t n) {$/;"	f
strncpy	libs/string.c	/^strncpy(char *dst, const char *src, size_t len) {$/;"	f
strnlen	libs/string.c	/^strnlen(const char *s, size_t len) {$/;"	f
strtol	libs/string.c	/^strtol(const char *s, char **endptr, int base) {$/;"	f
swap_entry_t	kern/mm/memlayout.h	/^typedef pte_t swap_entry_t; \/\/the pte can also be a swap entry$/;"	t
swap_in	kern/mm/swap.c	/^swap_in(struct mm_struct *mm, uintptr_t addr, struct Page **ptr_result)$/;"	f
swap_in_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_init	kern/mm/swap.c	/^swap_init(void)$/;"	f
swap_init_mm	kern/mm/swap.c	/^swap_init_mm(struct mm_struct *mm)$/;"	f
swap_init_ok	kern/mm/swap.c	/^volatile int swap_init_ok = 0;$/;"	v
swap_init_ok	obj/kernel.asm	/^          swap_init_ok = 1;$/;"	d
swap_manager	kern/mm/swap.h	/^struct swap_manager$/;"	s
swap_manager_fifo	kern/mm/swap_fifo.c	/^struct swap_manager swap_manager_fifo =$/;"	v	typeref:struct:swap_manager
swap_map_swappable	kern/mm/swap.c	/^swap_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f
swap_offset	kern/mm/swap.h	25;"	d
swap_out	kern/mm/swap.c	/^swap_out(struct mm_struct *mm, int n, int in_tick)$/;"	f
swap_out_num	kern/mm/swap.c	/^volatile unsigned int swap_out_num=0;$/;"	v
swap_out_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_out_victim	kern/mm/swap.h	/^     int (*swap_out_victim) (struct mm_struct *mm, struct Page **ptr_page, int in_tick);$/;"	m	struct:swap_manager
swap_page	kern/mm/swap.c	/^unsigned int swap_page[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
swap_set_unswappable	kern/mm/swap.c	/^swap_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f
swap_tick_event	kern/mm/swap.c	/^swap_tick_event(struct mm_struct *mm)$/;"	f
swapfs_init	kern/fs/swapfs.c	/^swapfs_init(void) {$/;"	f
swapfs_read	kern/fs/swapfs.c	/^swapfs_read(swap_entry_t entry, struct Page *page) {$/;"	f
swapfs_write	kern/fs/swapfs.c	/^swapfs_write(swap_entry_t entry, struct Page *page) {$/;"	f
switch_to	kern/process/switch.S	/^switch_to:                      # switch_to(from, to)$/;"	l
switch_to	obj/kernel.asm	/^switch_to:                      # switch_to(from, to)$/;"	l
symfile	Makefile	/^symfile = $(call cgtype,$(call toobj,$(1)),o,sym)$/;"	m
sys_exec	kern/syscall/syscall.c	/^sys_exec(uint32_t arg[]) {$/;"	f	file:
sys_exit	kern/syscall/syscall.c	/^sys_exit(uint32_t arg[]) {$/;"	f	file:
sys_exit	user/libs/syscall.c	/^sys_exit(int error_code) {$/;"	f
sys_fork	kern/syscall/syscall.c	/^sys_fork(uint32_t arg[]) {$/;"	f	file:
sys_fork	user/libs/syscall.c	/^sys_fork(void) {$/;"	f
sys_getpid	kern/syscall/syscall.c	/^sys_getpid(uint32_t arg[]) {$/;"	f	file:
sys_getpid	user/libs/syscall.c	/^sys_getpid(void) {$/;"	f
sys_gettime	kern/syscall/syscall.c	/^sys_gettime(uint32_t arg[]) {$/;"	f	file:
sys_gettime	user/libs/syscall.c	/^sys_gettime(void) {$/;"	f
sys_kill	kern/syscall/syscall.c	/^sys_kill(uint32_t arg[]) {$/;"	f	file:
sys_kill	user/libs/syscall.c	/^sys_kill(int pid) {$/;"	f
sys_lab6_set_priority	kern/syscall/syscall.c	/^sys_lab6_set_priority(uint32_t arg[])$/;"	f	file:
sys_lab6_set_priority	user/libs/syscall.c	/^sys_lab6_set_priority(uint32_t priority)$/;"	f
sys_pgdir	kern/syscall/syscall.c	/^sys_pgdir(uint32_t arg[]) {$/;"	f	file:
sys_pgdir	user/libs/syscall.c	/^sys_pgdir(void) {$/;"	f
sys_putc	kern/syscall/syscall.c	/^sys_putc(uint32_t arg[]) {$/;"	f	file:
sys_putc	user/libs/syscall.c	/^sys_putc(int c) {$/;"	f
sys_sleep	kern/syscall/syscall.c	/^sys_sleep(uint32_t arg[]) {$/;"	f	file:
sys_sleep	user/libs/syscall.c	/^sys_sleep(unsigned int time) {$/;"	f
sys_wait	kern/syscall/syscall.c	/^sys_wait(uint32_t arg[]) {$/;"	f	file:
sys_wait	user/libs/syscall.c	/^sys_wait(int pid, int *store) {$/;"	f
sys_yield	kern/syscall/syscall.c	/^sys_yield(uint32_t arg[]) {$/;"	f	file:
sys_yield	user/libs/syscall.c	/^sys_yield(void) {$/;"	f
syscall	kern/syscall/syscall.c	/^syscall(void) {$/;"	f
syscall	user/libs/syscall.c	/^syscall(int num, ...) {$/;"	f	file:
syscalls	kern/syscall/syscall.c	/^static int (*syscalls[])(uint32_t arg[]) = {$/;"	v	file:
t_priority	obj/kernel.asm	/^            t_priority = 1;$/;"	d
taskstate	kern/mm/mmu.h	/^struct taskstate {$/;"	s
temp_ptep	obj/kernel.asm	/^     temp_ptep = get_pte(mm->pgdir, BEING_CHECK_VALID_VADDR, 1);$/;"	d
test_bit	libs/atomic.h	/^test_bit(int nr, volatile void *addr) {$/;"	f
tf	kern/process/proc.h	/^    struct trapframe *tf;                       \/\/ Trap frame for current interrupt$/;"	m	struct:proc_struct	typeref:struct:proc_struct::trapframe
tf_cs	kern/trap/trap.h	/^    uint16_t tf_cs;$/;"	m	struct:trapframe
tf_ds	kern/trap/trap.h	/^    uint16_t tf_ds;$/;"	m	struct:trapframe
tf_eflags	kern/trap/trap.h	/^    uint32_t tf_eflags;$/;"	m	struct:trapframe
tf_eip	kern/trap/trap.h	/^    uintptr_t tf_eip;$/;"	m	struct:trapframe
tf_err	kern/trap/trap.h	/^    uint32_t tf_err;$/;"	m	struct:trapframe
tf_es	kern/trap/trap.h	/^    uint16_t tf_es;$/;"	m	struct:trapframe
tf_esp	kern/trap/trap.h	/^    uintptr_t tf_esp;$/;"	m	struct:trapframe
tf_fs	kern/trap/trap.h	/^    uint16_t tf_fs;$/;"	m	struct:trapframe
tf_gs	kern/trap/trap.h	/^    uint16_t tf_gs;$/;"	m	struct:trapframe
tf_padding0	kern/trap/trap.h	/^    uint16_t tf_padding0;$/;"	m	struct:trapframe
tf_padding1	kern/trap/trap.h	/^    uint16_t tf_padding1;$/;"	m	struct:trapframe
tf_padding2	kern/trap/trap.h	/^    uint16_t tf_padding2;$/;"	m	struct:trapframe
tf_padding3	kern/trap/trap.h	/^    uint16_t tf_padding3;$/;"	m	struct:trapframe
tf_padding4	kern/trap/trap.h	/^    uint16_t tf_padding4;$/;"	m	struct:trapframe
tf_padding5	kern/trap/trap.h	/^    uint16_t tf_padding5;$/;"	m	struct:trapframe
tf_regs	kern/trap/trap.h	/^    struct pushregs tf_regs;$/;"	m	struct:trapframe	typeref:struct:trapframe::pushregs
tf_ss	kern/trap/trap.h	/^    uint16_t tf_ss;$/;"	m	struct:trapframe
tf_trapno	kern/trap/trap.h	/^    uint32_t tf_trapno;$/;"	m	struct:trapframe
tick_event	kern/mm/swap.h	/^     int (*tick_event)      (struct mm_struct *mm);$/;"	m	struct:swap_manager
ticks	kern/driver/clock.c	/^volatile size_t ticks;$/;"	v
ticks	obj/kernel.asm	/^    ticks = 0;$/;"	d
time_slice	kern/process/proc.h	/^    int time_slice;                             \/\/ time slice for occupying the CPU$/;"	m	struct:proc_struct
timer	obj/kernel.asm	/^                timer = le2timer(le, timer_link);$/;"	d
timer_init	kern/schedule/sched.h	/^timer_init(timer_t *timer, struct proc_struct *proc, int expires) {$/;"	f
timer_link	kern/schedule/sched.h	/^    list_entry_t timer_link;    \/\/the timer list$/;"	m	struct:__anon4
timer_list	kern/schedule/sched.c	/^static list_entry_t timer_list;$/;"	v	file:
timer_t	kern/schedule/sched.h	/^} timer_t;$/;"	t	typeref:struct:__anon4
times	obj/user/matrix.asm	/^            times = (times * times + 10) * 100;$/;"	d
tlb_invalidate	kern/mm/pmm.c	/^tlb_invalidate(pde_t *pgdir, uintptr_t la) {$/;"	f
tmp_kernel_frame	kern/trap/trap.c	/^struct trapframe *tmp_kernel_frame, tmp_user_frame;$/;"	v	typeref:struct:trapframe
tmp_kernel_frame	obj/kernel.asm	/^            tmp_kernel_frame = (struct trapframe *)(tf->tf_esp - (sizeof(struct trapframe) - 8));$/;"	d
tmp_user_frame	kern/trap/trap.c	/^struct trapframe *tmp_kernel_frame, tmp_user_frame;$/;"	v	typeref:struct:
tmp_user_frame	obj/kernel.asm	/^            tmp_user_frame = *tf;$/;"	d
to_struct	libs/defs.h	64;"	d
todep	tools/function.mk	/^todep = $(patsubst %.o,%.d,$(call toobj,$(1),$(2)))$/;"	m
togglecode	kern/driver/console.c	/^static uint8_t togglecode[256] = {$/;"	v	file:
toobj	tools/function.mk	/^toobj = $(addprefix $(OBJDIR)$(SLASH)$(if $(2),$(2)$(SLASH)),\\$/;"	m
total	user/matrix.c	/^const int total = 21;$/;"	v
totarget	tools/function.mk	/^totarget = $(addprefix $(BINDIR)$(SLASH),$(1))$/;"	m
trap	kern/trap/trap.c	/^trap(struct trapframe *tf) {$/;"	f
trap_dispatch	kern/trap/trap.c	/^trap_dispatch(struct trapframe *tf) {$/;"	f	file:
trap_in_kernel	kern/trap/trap.c	/^trap_in_kernel(struct trapframe *tf) {$/;"	f
trapframe	kern/trap/trap.h	/^struct trapframe {$/;"	s
trapname	kern/trap/trap.c	/^trapname(int trapno) {$/;"	f	file:
try_down	kern/sync/sem.c	/^try_down(semaphore_t *sem) {$/;"	f
ts	kern/mm/pmm.c	/^static struct taskstate ts = {0};$/;"	v	typeref:struct:taskstate	file:
ts_cr3	kern/mm/mmu.h	/^    uintptr_t ts_cr3;       \/\/ page directory base$/;"	m	struct:taskstate
ts_cs	kern/mm/mmu.h	/^    uint16_t ts_cs;$/;"	m	struct:taskstate
ts_ds	kern/mm/mmu.h	/^    uint16_t ts_ds;$/;"	m	struct:taskstate
ts_eax	kern/mm/mmu.h	/^    uint32_t ts_eax;        \/\/ more saved state (registers)$/;"	m	struct:taskstate
ts_ebp	kern/mm/mmu.h	/^    uintptr_t ts_ebp;$/;"	m	struct:taskstate
ts_ebx	kern/mm/mmu.h	/^    uint32_t ts_ebx;$/;"	m	struct:taskstate
ts_ecx	kern/mm/mmu.h	/^    uint32_t ts_ecx;$/;"	m	struct:taskstate
ts_edi	kern/mm/mmu.h	/^    uint32_t ts_edi;$/;"	m	struct:taskstate
ts_edx	kern/mm/mmu.h	/^    uint32_t ts_edx;$/;"	m	struct:taskstate
ts_eflags	kern/mm/mmu.h	/^    uint32_t ts_eflags;$/;"	m	struct:taskstate
ts_eip	kern/mm/mmu.h	/^    uintptr_t ts_eip;       \/\/ saved state from last task switch$/;"	m	struct:taskstate
ts_es	kern/mm/mmu.h	/^    uint16_t ts_es;         \/\/ even more saved state (segment selectors)$/;"	m	struct:taskstate
ts_esi	kern/mm/mmu.h	/^    uint32_t ts_esi;$/;"	m	struct:taskstate
ts_esp	kern/mm/mmu.h	/^    uintptr_t ts_esp;$/;"	m	struct:taskstate
ts_esp0	kern/mm/mmu.h	/^    uintptr_t ts_esp0;      \/\/ stack pointers and segment selectors$/;"	m	struct:taskstate
ts_esp1	kern/mm/mmu.h	/^    uintptr_t ts_esp1;$/;"	m	struct:taskstate
ts_esp2	kern/mm/mmu.h	/^    uintptr_t ts_esp2;$/;"	m	struct:taskstate
ts_fs	kern/mm/mmu.h	/^    uint16_t ts_fs;$/;"	m	struct:taskstate
ts_gs	kern/mm/mmu.h	/^    uint16_t ts_gs;$/;"	m	struct:taskstate
ts_iomb	kern/mm/mmu.h	/^    uint16_t ts_iomb;       \/\/ i\/o map base address$/;"	m	struct:taskstate
ts_ldt	kern/mm/mmu.h	/^    uint16_t ts_ldt;$/;"	m	struct:taskstate
ts_link	kern/mm/mmu.h	/^    uint32_t ts_link;       \/\/ old ts selector$/;"	m	struct:taskstate
ts_padding1	kern/mm/mmu.h	/^    uint16_t ts_padding1;$/;"	m	struct:taskstate
ts_padding10	kern/mm/mmu.h	/^    uint16_t ts_padding10;$/;"	m	struct:taskstate
ts_padding2	kern/mm/mmu.h	/^    uint16_t ts_padding2;$/;"	m	struct:taskstate
ts_padding3	kern/mm/mmu.h	/^    uint16_t ts_padding3;$/;"	m	struct:taskstate
ts_padding4	kern/mm/mmu.h	/^    uint16_t ts_padding4;$/;"	m	struct:taskstate
ts_padding5	kern/mm/mmu.h	/^    uint16_t ts_padding5;$/;"	m	struct:taskstate
ts_padding6	kern/mm/mmu.h	/^    uint16_t ts_padding6;$/;"	m	struct:taskstate
ts_padding7	kern/mm/mmu.h	/^    uint16_t ts_padding7;$/;"	m	struct:taskstate
ts_padding8	kern/mm/mmu.h	/^    uint16_t ts_padding8;$/;"	m	struct:taskstate
ts_padding9	kern/mm/mmu.h	/^    uint16_t ts_padding9;$/;"	m	struct:taskstate
ts_ss	kern/mm/mmu.h	/^    uint16_t ts_ss;$/;"	m	struct:taskstate
ts_ss0	kern/mm/mmu.h	/^    uint16_t ts_ss0;        \/\/ after an increase in privilege level$/;"	m	struct:taskstate
ts_ss1	kern/mm/mmu.h	/^    uint16_t ts_ss1;$/;"	m	struct:taskstate
ts_ss2	kern/mm/mmu.h	/^    uint16_t ts_ss2;$/;"	m	struct:taskstate
ts_t	kern/mm/mmu.h	/^    uint16_t ts_t;          \/\/ trap on task switch$/;"	m	struct:taskstate
type	kern/mm/memlayout.h	/^        uint32_t type;$/;"	m	struct:e820map::__anon5
ubinfile	Makefile	/^ubinfile = $(call outfile,$(addprefix $(USER_PREFIX),$(call filename,$(1))))$/;"	m
uint16_t	libs/defs.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	libs/defs.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/kernel.asm	/^uint32_t$/;"	l
uint32_t	obj/user/badarg.asm	/^uint32_t$/;"	l
uint32_t	obj/user/badsegment.asm	/^uint32_t$/;"	l
uint32_t	obj/user/divzero.asm	/^uint32_t$/;"	l
uint32_t	obj/user/exit.asm	/^uint32_t$/;"	l
uint32_t	obj/user/faultread.asm	/^uint32_t$/;"	l
uint32_t	obj/user/faultreadkernel.asm	/^uint32_t$/;"	l
uint32_t	obj/user/forktest.asm	/^uint32_t$/;"	l
uint32_t	obj/user/forktree.asm	/^uint32_t$/;"	l
uint32_t	obj/user/hello.asm	/^uint32_t$/;"	l
uint32_t	obj/user/matrix.asm	/^uint32_t$/;"	l
uint32_t	obj/user/pgdir.asm	/^uint32_t$/;"	l
uint32_t	obj/user/priority.asm	/^uint32_t$/;"	l
uint32_t	obj/user/sleep.asm	/^uint32_t$/;"	l
uint32_t	obj/user/sleepkill.asm	/^uint32_t$/;"	l
uint32_t	obj/user/softint.asm	/^uint32_t$/;"	l
uint32_t	obj/user/spin.asm	/^uint32_t$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t$/;"	l
uint32_t	obj/user/waitkill.asm	/^uint32_t$/;"	l
uint32_t	obj/user/yield.asm	/^uint32_t$/;"	l
uint64_t	libs/defs.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	libs/defs.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	libs/defs.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/libs/umain.c	/^umain(void) {$/;"	f
unhash_proc	kern/process/proc.c	/^unhash_proc(struct proc_struct *proc) {$/;"	f	file:
units	kern/mm/kmalloc.c	/^	int units;$/;"	m	struct:slob_block	file:
unlock_mm	kern/mm/vmm.h	/^unlock_mm(struct mm_struct *mm) {$/;"	f
unmap_range	kern/mm/pmm.c	/^unmap_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
unsigned	obj/kernel.asm	/^unsigned int ksize(const void *block)$/;"	l
unsigned	obj/user/badarg.asm	/^unsigned int$/;"	l
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
unsigned	obj/user/exit.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktest.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
unsigned	obj/user/matrix.asm	/^unsigned int$/;"	l
unsigned	obj/user/pgdir.asm	/^unsigned int$/;"	l
unsigned	obj/user/priority.asm	/^unsigned int$/;"	l
unsigned	obj/user/sleep.asm	/^unsigned int$/;"	l
unsigned	obj/user/sleepkill.asm	/^unsigned int$/;"	l
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
unsigned	obj/user/waitkill.asm	/^unsigned int$/;"	l
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
up	kern/sync/sem.c	/^up(semaphore_t *sem) {$/;"	f
update_score	tools/grade.sh	/^update_score() {$/;"	f
uprog_ld	Makefile	/^define uprog_ld$/;"	m
user_main	kern/process/proc.c	/^user_main(void *arg) {$/;"	f	file:
user_mem_check	kern/mm/vmm.c	/^user_mem_check(struct mm_struct *mm, uintptr_t addr, size_t len, bool write) {$/;"	f
userstabdata	kern/debug/kdebug.c	/^struct userstabdata {$/;"	s	file:
va_arg	libs/stdarg.h	8;"	d
va_end	libs/stdarg.h	9;"	d
va_list	libs/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	libs/stdarg.h	7;"	d
valid	kern/driver/ide.c	/^    unsigned char valid;        \/\/ 0 or 1 (If Device Really Exists)$/;"	m	struct:ide_device	file:
value	kern/sync/sem.h	/^    int value;$/;"	m	struct:__anon3
vcprintf	kern/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
vcprintf	user/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
vector0	kern/trap/vectors.S	/^vector0:$/;"	l
vector0	obj/kernel.asm	/^vector0:$/;"	l
vector1	kern/trap/vectors.S	/^vector1:$/;"	l
vector1	obj/kernel.asm	/^vector1:$/;"	l
vector10	kern/trap/vectors.S	/^vector10:$/;"	l
vector10	obj/kernel.asm	/^vector10:$/;"	l
vector100	kern/trap/vectors.S	/^vector100:$/;"	l
vector100	obj/kernel.asm	/^vector100:$/;"	l
vector101	kern/trap/vectors.S	/^vector101:$/;"	l
vector101	obj/kernel.asm	/^vector101:$/;"	l
vector102	kern/trap/vectors.S	/^vector102:$/;"	l
vector102	obj/kernel.asm	/^vector102:$/;"	l
vector103	kern/trap/vectors.S	/^vector103:$/;"	l
vector103	obj/kernel.asm	/^vector103:$/;"	l
vector104	kern/trap/vectors.S	/^vector104:$/;"	l
vector104	obj/kernel.asm	/^vector104:$/;"	l
vector105	kern/trap/vectors.S	/^vector105:$/;"	l
vector105	obj/kernel.asm	/^vector105:$/;"	l
vector106	kern/trap/vectors.S	/^vector106:$/;"	l
vector106	obj/kernel.asm	/^vector106:$/;"	l
vector107	kern/trap/vectors.S	/^vector107:$/;"	l
vector107	obj/kernel.asm	/^vector107:$/;"	l
vector108	kern/trap/vectors.S	/^vector108:$/;"	l
vector108	obj/kernel.asm	/^vector108:$/;"	l
vector109	kern/trap/vectors.S	/^vector109:$/;"	l
vector109	obj/kernel.asm	/^vector109:$/;"	l
vector11	kern/trap/vectors.S	/^vector11:$/;"	l
vector11	obj/kernel.asm	/^vector11:$/;"	l
vector110	kern/trap/vectors.S	/^vector110:$/;"	l
vector110	obj/kernel.asm	/^vector110:$/;"	l
vector111	kern/trap/vectors.S	/^vector111:$/;"	l
vector111	obj/kernel.asm	/^vector111:$/;"	l
vector112	kern/trap/vectors.S	/^vector112:$/;"	l
vector112	obj/kernel.asm	/^vector112:$/;"	l
vector113	kern/trap/vectors.S	/^vector113:$/;"	l
vector113	obj/kernel.asm	/^vector113:$/;"	l
vector114	kern/trap/vectors.S	/^vector114:$/;"	l
vector114	obj/kernel.asm	/^vector114:$/;"	l
vector115	kern/trap/vectors.S	/^vector115:$/;"	l
vector115	obj/kernel.asm	/^vector115:$/;"	l
vector116	kern/trap/vectors.S	/^vector116:$/;"	l
vector116	obj/kernel.asm	/^vector116:$/;"	l
vector117	kern/trap/vectors.S	/^vector117:$/;"	l
vector117	obj/kernel.asm	/^vector117:$/;"	l
vector118	kern/trap/vectors.S	/^vector118:$/;"	l
vector118	obj/kernel.asm	/^vector118:$/;"	l
vector119	kern/trap/vectors.S	/^vector119:$/;"	l
vector119	obj/kernel.asm	/^vector119:$/;"	l
vector12	kern/trap/vectors.S	/^vector12:$/;"	l
vector12	obj/kernel.asm	/^vector12:$/;"	l
vector120	kern/trap/vectors.S	/^vector120:$/;"	l
vector120	obj/kernel.asm	/^vector120:$/;"	l
vector121	kern/trap/vectors.S	/^vector121:$/;"	l
vector121	obj/kernel.asm	/^vector121:$/;"	l
vector122	kern/trap/vectors.S	/^vector122:$/;"	l
vector122	obj/kernel.asm	/^vector122:$/;"	l
vector123	kern/trap/vectors.S	/^vector123:$/;"	l
vector123	obj/kernel.asm	/^vector123:$/;"	l
vector124	kern/trap/vectors.S	/^vector124:$/;"	l
vector124	obj/kernel.asm	/^vector124:$/;"	l
vector125	kern/trap/vectors.S	/^vector125:$/;"	l
vector125	obj/kernel.asm	/^vector125:$/;"	l
vector126	kern/trap/vectors.S	/^vector126:$/;"	l
vector126	obj/kernel.asm	/^vector126:$/;"	l
vector127	kern/trap/vectors.S	/^vector127:$/;"	l
vector127	obj/kernel.asm	/^vector127:$/;"	l
vector128	kern/trap/vectors.S	/^vector128:$/;"	l
vector128	obj/kernel.asm	/^vector128:$/;"	l
vector129	kern/trap/vectors.S	/^vector129:$/;"	l
vector129	obj/kernel.asm	/^vector129:$/;"	l
vector13	kern/trap/vectors.S	/^vector13:$/;"	l
vector13	obj/kernel.asm	/^vector13:$/;"	l
vector130	kern/trap/vectors.S	/^vector130:$/;"	l
vector130	obj/kernel.asm	/^vector130:$/;"	l
vector131	kern/trap/vectors.S	/^vector131:$/;"	l
vector131	obj/kernel.asm	/^vector131:$/;"	l
vector132	kern/trap/vectors.S	/^vector132:$/;"	l
vector132	obj/kernel.asm	/^vector132:$/;"	l
vector133	kern/trap/vectors.S	/^vector133:$/;"	l
vector133	obj/kernel.asm	/^vector133:$/;"	l
vector134	kern/trap/vectors.S	/^vector134:$/;"	l
vector134	obj/kernel.asm	/^vector134:$/;"	l
vector135	kern/trap/vectors.S	/^vector135:$/;"	l
vector135	obj/kernel.asm	/^vector135:$/;"	l
vector136	kern/trap/vectors.S	/^vector136:$/;"	l
vector136	obj/kernel.asm	/^vector136:$/;"	l
vector137	kern/trap/vectors.S	/^vector137:$/;"	l
vector137	obj/kernel.asm	/^vector137:$/;"	l
vector138	kern/trap/vectors.S	/^vector138:$/;"	l
vector138	obj/kernel.asm	/^vector138:$/;"	l
vector139	kern/trap/vectors.S	/^vector139:$/;"	l
vector139	obj/kernel.asm	/^vector139:$/;"	l
vector14	kern/trap/vectors.S	/^vector14:$/;"	l
vector14	obj/kernel.asm	/^vector14:$/;"	l
vector140	kern/trap/vectors.S	/^vector140:$/;"	l
vector140	obj/kernel.asm	/^vector140:$/;"	l
vector141	kern/trap/vectors.S	/^vector141:$/;"	l
vector141	obj/kernel.asm	/^vector141:$/;"	l
vector142	kern/trap/vectors.S	/^vector142:$/;"	l
vector142	obj/kernel.asm	/^vector142:$/;"	l
vector143	kern/trap/vectors.S	/^vector143:$/;"	l
vector143	obj/kernel.asm	/^vector143:$/;"	l
vector144	kern/trap/vectors.S	/^vector144:$/;"	l
vector144	obj/kernel.asm	/^vector144:$/;"	l
vector145	kern/trap/vectors.S	/^vector145:$/;"	l
vector145	obj/kernel.asm	/^vector145:$/;"	l
vector146	kern/trap/vectors.S	/^vector146:$/;"	l
vector146	obj/kernel.asm	/^vector146:$/;"	l
vector147	kern/trap/vectors.S	/^vector147:$/;"	l
vector147	obj/kernel.asm	/^vector147:$/;"	l
vector148	kern/trap/vectors.S	/^vector148:$/;"	l
vector148	obj/kernel.asm	/^vector148:$/;"	l
vector149	kern/trap/vectors.S	/^vector149:$/;"	l
vector149	obj/kernel.asm	/^vector149:$/;"	l
vector15	kern/trap/vectors.S	/^vector15:$/;"	l
vector15	obj/kernel.asm	/^vector15:$/;"	l
vector150	kern/trap/vectors.S	/^vector150:$/;"	l
vector150	obj/kernel.asm	/^vector150:$/;"	l
vector151	kern/trap/vectors.S	/^vector151:$/;"	l
vector151	obj/kernel.asm	/^vector151:$/;"	l
vector152	kern/trap/vectors.S	/^vector152:$/;"	l
vector152	obj/kernel.asm	/^vector152:$/;"	l
vector153	kern/trap/vectors.S	/^vector153:$/;"	l
vector153	obj/kernel.asm	/^vector153:$/;"	l
vector154	kern/trap/vectors.S	/^vector154:$/;"	l
vector154	obj/kernel.asm	/^vector154:$/;"	l
vector155	kern/trap/vectors.S	/^vector155:$/;"	l
vector155	obj/kernel.asm	/^vector155:$/;"	l
vector156	kern/trap/vectors.S	/^vector156:$/;"	l
vector156	obj/kernel.asm	/^vector156:$/;"	l
vector157	kern/trap/vectors.S	/^vector157:$/;"	l
vector157	obj/kernel.asm	/^vector157:$/;"	l
vector158	kern/trap/vectors.S	/^vector158:$/;"	l
vector158	obj/kernel.asm	/^vector158:$/;"	l
vector159	kern/trap/vectors.S	/^vector159:$/;"	l
vector159	obj/kernel.asm	/^vector159:$/;"	l
vector16	kern/trap/vectors.S	/^vector16:$/;"	l
vector16	obj/kernel.asm	/^vector16:$/;"	l
vector160	kern/trap/vectors.S	/^vector160:$/;"	l
vector160	obj/kernel.asm	/^vector160:$/;"	l
vector161	kern/trap/vectors.S	/^vector161:$/;"	l
vector161	obj/kernel.asm	/^vector161:$/;"	l
vector162	kern/trap/vectors.S	/^vector162:$/;"	l
vector162	obj/kernel.asm	/^vector162:$/;"	l
vector163	kern/trap/vectors.S	/^vector163:$/;"	l
vector163	obj/kernel.asm	/^vector163:$/;"	l
vector164	kern/trap/vectors.S	/^vector164:$/;"	l
vector164	obj/kernel.asm	/^vector164:$/;"	l
vector165	kern/trap/vectors.S	/^vector165:$/;"	l
vector165	obj/kernel.asm	/^vector165:$/;"	l
vector166	kern/trap/vectors.S	/^vector166:$/;"	l
vector166	obj/kernel.asm	/^vector166:$/;"	l
vector167	kern/trap/vectors.S	/^vector167:$/;"	l
vector167	obj/kernel.asm	/^vector167:$/;"	l
vector168	kern/trap/vectors.S	/^vector168:$/;"	l
vector168	obj/kernel.asm	/^vector168:$/;"	l
vector169	kern/trap/vectors.S	/^vector169:$/;"	l
vector169	obj/kernel.asm	/^vector169:$/;"	l
vector17	kern/trap/vectors.S	/^vector17:$/;"	l
vector17	obj/kernel.asm	/^vector17:$/;"	l
vector170	kern/trap/vectors.S	/^vector170:$/;"	l
vector170	obj/kernel.asm	/^vector170:$/;"	l
vector171	kern/trap/vectors.S	/^vector171:$/;"	l
vector171	obj/kernel.asm	/^vector171:$/;"	l
vector172	kern/trap/vectors.S	/^vector172:$/;"	l
vector172	obj/kernel.asm	/^vector172:$/;"	l
vector173	kern/trap/vectors.S	/^vector173:$/;"	l
vector173	obj/kernel.asm	/^vector173:$/;"	l
vector174	kern/trap/vectors.S	/^vector174:$/;"	l
vector174	obj/kernel.asm	/^vector174:$/;"	l
vector175	kern/trap/vectors.S	/^vector175:$/;"	l
vector175	obj/kernel.asm	/^vector175:$/;"	l
vector176	kern/trap/vectors.S	/^vector176:$/;"	l
vector176	obj/kernel.asm	/^vector176:$/;"	l
vector177	kern/trap/vectors.S	/^vector177:$/;"	l
vector177	obj/kernel.asm	/^vector177:$/;"	l
vector178	kern/trap/vectors.S	/^vector178:$/;"	l
vector178	obj/kernel.asm	/^vector178:$/;"	l
vector179	kern/trap/vectors.S	/^vector179:$/;"	l
vector179	obj/kernel.asm	/^vector179:$/;"	l
vector18	kern/trap/vectors.S	/^vector18:$/;"	l
vector18	obj/kernel.asm	/^vector18:$/;"	l
vector180	kern/trap/vectors.S	/^vector180:$/;"	l
vector180	obj/kernel.asm	/^vector180:$/;"	l
vector181	kern/trap/vectors.S	/^vector181:$/;"	l
vector181	obj/kernel.asm	/^vector181:$/;"	l
vector182	kern/trap/vectors.S	/^vector182:$/;"	l
vector182	obj/kernel.asm	/^vector182:$/;"	l
vector183	kern/trap/vectors.S	/^vector183:$/;"	l
vector183	obj/kernel.asm	/^vector183:$/;"	l
vector184	kern/trap/vectors.S	/^vector184:$/;"	l
vector184	obj/kernel.asm	/^vector184:$/;"	l
vector185	kern/trap/vectors.S	/^vector185:$/;"	l
vector185	obj/kernel.asm	/^vector185:$/;"	l
vector186	kern/trap/vectors.S	/^vector186:$/;"	l
vector186	obj/kernel.asm	/^vector186:$/;"	l
vector187	kern/trap/vectors.S	/^vector187:$/;"	l
vector187	obj/kernel.asm	/^vector187:$/;"	l
vector188	kern/trap/vectors.S	/^vector188:$/;"	l
vector188	obj/kernel.asm	/^vector188:$/;"	l
vector189	kern/trap/vectors.S	/^vector189:$/;"	l
vector189	obj/kernel.asm	/^vector189:$/;"	l
vector19	kern/trap/vectors.S	/^vector19:$/;"	l
vector19	obj/kernel.asm	/^vector19:$/;"	l
vector190	kern/trap/vectors.S	/^vector190:$/;"	l
vector190	obj/kernel.asm	/^vector190:$/;"	l
vector191	kern/trap/vectors.S	/^vector191:$/;"	l
vector191	obj/kernel.asm	/^vector191:$/;"	l
vector192	kern/trap/vectors.S	/^vector192:$/;"	l
vector192	obj/kernel.asm	/^vector192:$/;"	l
vector193	kern/trap/vectors.S	/^vector193:$/;"	l
vector193	obj/kernel.asm	/^vector193:$/;"	l
vector194	kern/trap/vectors.S	/^vector194:$/;"	l
vector194	obj/kernel.asm	/^vector194:$/;"	l
vector195	kern/trap/vectors.S	/^vector195:$/;"	l
vector195	obj/kernel.asm	/^vector195:$/;"	l
vector196	kern/trap/vectors.S	/^vector196:$/;"	l
vector196	obj/kernel.asm	/^vector196:$/;"	l
vector197	kern/trap/vectors.S	/^vector197:$/;"	l
vector197	obj/kernel.asm	/^vector197:$/;"	l
vector198	kern/trap/vectors.S	/^vector198:$/;"	l
vector198	obj/kernel.asm	/^vector198:$/;"	l
vector199	kern/trap/vectors.S	/^vector199:$/;"	l
vector199	obj/kernel.asm	/^vector199:$/;"	l
vector2	kern/trap/vectors.S	/^vector2:$/;"	l
vector2	obj/kernel.asm	/^vector2:$/;"	l
vector20	kern/trap/vectors.S	/^vector20:$/;"	l
vector20	obj/kernel.asm	/^vector20:$/;"	l
vector200	kern/trap/vectors.S	/^vector200:$/;"	l
vector200	obj/kernel.asm	/^vector200:$/;"	l
vector201	kern/trap/vectors.S	/^vector201:$/;"	l
vector201	obj/kernel.asm	/^vector201:$/;"	l
vector202	kern/trap/vectors.S	/^vector202:$/;"	l
vector202	obj/kernel.asm	/^vector202:$/;"	l
vector203	kern/trap/vectors.S	/^vector203:$/;"	l
vector203	obj/kernel.asm	/^vector203:$/;"	l
vector204	kern/trap/vectors.S	/^vector204:$/;"	l
vector204	obj/kernel.asm	/^vector204:$/;"	l
vector205	kern/trap/vectors.S	/^vector205:$/;"	l
vector205	obj/kernel.asm	/^vector205:$/;"	l
vector206	kern/trap/vectors.S	/^vector206:$/;"	l
vector206	obj/kernel.asm	/^vector206:$/;"	l
vector207	kern/trap/vectors.S	/^vector207:$/;"	l
vector207	obj/kernel.asm	/^vector207:$/;"	l
vector208	kern/trap/vectors.S	/^vector208:$/;"	l
vector208	obj/kernel.asm	/^vector208:$/;"	l
vector209	kern/trap/vectors.S	/^vector209:$/;"	l
vector209	obj/kernel.asm	/^vector209:$/;"	l
vector21	kern/trap/vectors.S	/^vector21:$/;"	l
vector21	obj/kernel.asm	/^vector21:$/;"	l
vector210	kern/trap/vectors.S	/^vector210:$/;"	l
vector210	obj/kernel.asm	/^vector210:$/;"	l
vector211	kern/trap/vectors.S	/^vector211:$/;"	l
vector211	obj/kernel.asm	/^vector211:$/;"	l
vector212	kern/trap/vectors.S	/^vector212:$/;"	l
vector212	obj/kernel.asm	/^vector212:$/;"	l
vector213	kern/trap/vectors.S	/^vector213:$/;"	l
vector213	obj/kernel.asm	/^vector213:$/;"	l
vector214	kern/trap/vectors.S	/^vector214:$/;"	l
vector214	obj/kernel.asm	/^vector214:$/;"	l
vector215	kern/trap/vectors.S	/^vector215:$/;"	l
vector215	obj/kernel.asm	/^vector215:$/;"	l
vector216	kern/trap/vectors.S	/^vector216:$/;"	l
vector216	obj/kernel.asm	/^vector216:$/;"	l
vector217	kern/trap/vectors.S	/^vector217:$/;"	l
vector217	obj/kernel.asm	/^vector217:$/;"	l
vector218	kern/trap/vectors.S	/^vector218:$/;"	l
vector218	obj/kernel.asm	/^vector218:$/;"	l
vector219	kern/trap/vectors.S	/^vector219:$/;"	l
vector219	obj/kernel.asm	/^vector219:$/;"	l
vector22	kern/trap/vectors.S	/^vector22:$/;"	l
vector22	obj/kernel.asm	/^vector22:$/;"	l
vector220	kern/trap/vectors.S	/^vector220:$/;"	l
vector220	obj/kernel.asm	/^vector220:$/;"	l
vector221	kern/trap/vectors.S	/^vector221:$/;"	l
vector221	obj/kernel.asm	/^vector221:$/;"	l
vector222	kern/trap/vectors.S	/^vector222:$/;"	l
vector222	obj/kernel.asm	/^vector222:$/;"	l
vector223	kern/trap/vectors.S	/^vector223:$/;"	l
vector223	obj/kernel.asm	/^vector223:$/;"	l
vector224	kern/trap/vectors.S	/^vector224:$/;"	l
vector224	obj/kernel.asm	/^vector224:$/;"	l
vector225	kern/trap/vectors.S	/^vector225:$/;"	l
vector225	obj/kernel.asm	/^vector225:$/;"	l
vector226	kern/trap/vectors.S	/^vector226:$/;"	l
vector226	obj/kernel.asm	/^vector226:$/;"	l
vector227	kern/trap/vectors.S	/^vector227:$/;"	l
vector227	obj/kernel.asm	/^vector227:$/;"	l
vector228	kern/trap/vectors.S	/^vector228:$/;"	l
vector228	obj/kernel.asm	/^vector228:$/;"	l
vector229	kern/trap/vectors.S	/^vector229:$/;"	l
vector229	obj/kernel.asm	/^vector229:$/;"	l
vector23	kern/trap/vectors.S	/^vector23:$/;"	l
vector23	obj/kernel.asm	/^vector23:$/;"	l
vector230	kern/trap/vectors.S	/^vector230:$/;"	l
vector230	obj/kernel.asm	/^vector230:$/;"	l
vector231	kern/trap/vectors.S	/^vector231:$/;"	l
vector231	obj/kernel.asm	/^vector231:$/;"	l
vector232	kern/trap/vectors.S	/^vector232:$/;"	l
vector232	obj/kernel.asm	/^vector232:$/;"	l
vector233	kern/trap/vectors.S	/^vector233:$/;"	l
vector233	obj/kernel.asm	/^vector233:$/;"	l
vector234	kern/trap/vectors.S	/^vector234:$/;"	l
vector234	obj/kernel.asm	/^vector234:$/;"	l
vector235	kern/trap/vectors.S	/^vector235:$/;"	l
vector235	obj/kernel.asm	/^vector235:$/;"	l
vector236	kern/trap/vectors.S	/^vector236:$/;"	l
vector236	obj/kernel.asm	/^vector236:$/;"	l
vector237	kern/trap/vectors.S	/^vector237:$/;"	l
vector237	obj/kernel.asm	/^vector237:$/;"	l
vector238	kern/trap/vectors.S	/^vector238:$/;"	l
vector238	obj/kernel.asm	/^vector238:$/;"	l
vector239	kern/trap/vectors.S	/^vector239:$/;"	l
vector239	obj/kernel.asm	/^vector239:$/;"	l
vector24	kern/trap/vectors.S	/^vector24:$/;"	l
vector24	obj/kernel.asm	/^vector24:$/;"	l
vector240	kern/trap/vectors.S	/^vector240:$/;"	l
vector240	obj/kernel.asm	/^vector240:$/;"	l
vector241	kern/trap/vectors.S	/^vector241:$/;"	l
vector241	obj/kernel.asm	/^vector241:$/;"	l
vector242	kern/trap/vectors.S	/^vector242:$/;"	l
vector242	obj/kernel.asm	/^vector242:$/;"	l
vector243	kern/trap/vectors.S	/^vector243:$/;"	l
vector243	obj/kernel.asm	/^vector243:$/;"	l
vector244	kern/trap/vectors.S	/^vector244:$/;"	l
vector244	obj/kernel.asm	/^vector244:$/;"	l
vector245	kern/trap/vectors.S	/^vector245:$/;"	l
vector245	obj/kernel.asm	/^vector245:$/;"	l
vector246	kern/trap/vectors.S	/^vector246:$/;"	l
vector246	obj/kernel.asm	/^vector246:$/;"	l
vector247	kern/trap/vectors.S	/^vector247:$/;"	l
vector247	obj/kernel.asm	/^vector247:$/;"	l
vector248	kern/trap/vectors.S	/^vector248:$/;"	l
vector248	obj/kernel.asm	/^vector248:$/;"	l
vector249	kern/trap/vectors.S	/^vector249:$/;"	l
vector249	obj/kernel.asm	/^vector249:$/;"	l
vector25	kern/trap/vectors.S	/^vector25:$/;"	l
vector25	obj/kernel.asm	/^vector25:$/;"	l
vector250	kern/trap/vectors.S	/^vector250:$/;"	l
vector250	obj/kernel.asm	/^vector250:$/;"	l
vector251	kern/trap/vectors.S	/^vector251:$/;"	l
vector251	obj/kernel.asm	/^vector251:$/;"	l
vector252	kern/trap/vectors.S	/^vector252:$/;"	l
vector252	obj/kernel.asm	/^vector252:$/;"	l
vector253	kern/trap/vectors.S	/^vector253:$/;"	l
vector253	obj/kernel.asm	/^vector253:$/;"	l
vector254	kern/trap/vectors.S	/^vector254:$/;"	l
vector254	obj/kernel.asm	/^vector254:$/;"	l
vector255	kern/trap/vectors.S	/^vector255:$/;"	l
vector255	obj/kernel.asm	/^vector255:$/;"	l
vector26	kern/trap/vectors.S	/^vector26:$/;"	l
vector26	obj/kernel.asm	/^vector26:$/;"	l
vector27	kern/trap/vectors.S	/^vector27:$/;"	l
vector27	obj/kernel.asm	/^vector27:$/;"	l
vector28	kern/trap/vectors.S	/^vector28:$/;"	l
vector28	obj/kernel.asm	/^vector28:$/;"	l
vector29	kern/trap/vectors.S	/^vector29:$/;"	l
vector29	obj/kernel.asm	/^vector29:$/;"	l
vector3	kern/trap/vectors.S	/^vector3:$/;"	l
vector3	obj/kernel.asm	/^vector3:$/;"	l
vector30	kern/trap/vectors.S	/^vector30:$/;"	l
vector30	obj/kernel.asm	/^vector30:$/;"	l
vector31	kern/trap/vectors.S	/^vector31:$/;"	l
vector31	obj/kernel.asm	/^vector31:$/;"	l
vector32	kern/trap/vectors.S	/^vector32:$/;"	l
vector32	obj/kernel.asm	/^vector32:$/;"	l
vector33	kern/trap/vectors.S	/^vector33:$/;"	l
vector33	obj/kernel.asm	/^vector33:$/;"	l
vector34	kern/trap/vectors.S	/^vector34:$/;"	l
vector34	obj/kernel.asm	/^vector34:$/;"	l
vector35	kern/trap/vectors.S	/^vector35:$/;"	l
vector35	obj/kernel.asm	/^vector35:$/;"	l
vector36	kern/trap/vectors.S	/^vector36:$/;"	l
vector36	obj/kernel.asm	/^vector36:$/;"	l
vector37	kern/trap/vectors.S	/^vector37:$/;"	l
vector37	obj/kernel.asm	/^vector37:$/;"	l
vector38	kern/trap/vectors.S	/^vector38:$/;"	l
vector38	obj/kernel.asm	/^vector38:$/;"	l
vector39	kern/trap/vectors.S	/^vector39:$/;"	l
vector39	obj/kernel.asm	/^vector39:$/;"	l
vector4	kern/trap/vectors.S	/^vector4:$/;"	l
vector4	obj/kernel.asm	/^vector4:$/;"	l
vector40	kern/trap/vectors.S	/^vector40:$/;"	l
vector40	obj/kernel.asm	/^vector40:$/;"	l
vector41	kern/trap/vectors.S	/^vector41:$/;"	l
vector41	obj/kernel.asm	/^vector41:$/;"	l
vector42	kern/trap/vectors.S	/^vector42:$/;"	l
vector42	obj/kernel.asm	/^vector42:$/;"	l
vector43	kern/trap/vectors.S	/^vector43:$/;"	l
vector43	obj/kernel.asm	/^vector43:$/;"	l
vector44	kern/trap/vectors.S	/^vector44:$/;"	l
vector44	obj/kernel.asm	/^vector44:$/;"	l
vector45	kern/trap/vectors.S	/^vector45:$/;"	l
vector45	obj/kernel.asm	/^vector45:$/;"	l
vector46	kern/trap/vectors.S	/^vector46:$/;"	l
vector46	obj/kernel.asm	/^vector46:$/;"	l
vector47	kern/trap/vectors.S	/^vector47:$/;"	l
vector47	obj/kernel.asm	/^vector47:$/;"	l
vector48	kern/trap/vectors.S	/^vector48:$/;"	l
vector48	obj/kernel.asm	/^vector48:$/;"	l
vector49	kern/trap/vectors.S	/^vector49:$/;"	l
vector49	obj/kernel.asm	/^vector49:$/;"	l
vector5	kern/trap/vectors.S	/^vector5:$/;"	l
vector5	obj/kernel.asm	/^vector5:$/;"	l
vector50	kern/trap/vectors.S	/^vector50:$/;"	l
vector50	obj/kernel.asm	/^vector50:$/;"	l
vector51	kern/trap/vectors.S	/^vector51:$/;"	l
vector51	obj/kernel.asm	/^vector51:$/;"	l
vector52	kern/trap/vectors.S	/^vector52:$/;"	l
vector52	obj/kernel.asm	/^vector52:$/;"	l
vector53	kern/trap/vectors.S	/^vector53:$/;"	l
vector53	obj/kernel.asm	/^vector53:$/;"	l
vector54	kern/trap/vectors.S	/^vector54:$/;"	l
vector54	obj/kernel.asm	/^vector54:$/;"	l
vector55	kern/trap/vectors.S	/^vector55:$/;"	l
vector55	obj/kernel.asm	/^vector55:$/;"	l
vector56	kern/trap/vectors.S	/^vector56:$/;"	l
vector56	obj/kernel.asm	/^vector56:$/;"	l
vector57	kern/trap/vectors.S	/^vector57:$/;"	l
vector57	obj/kernel.asm	/^vector57:$/;"	l
vector58	kern/trap/vectors.S	/^vector58:$/;"	l
vector58	obj/kernel.asm	/^vector58:$/;"	l
vector59	kern/trap/vectors.S	/^vector59:$/;"	l
vector59	obj/kernel.asm	/^vector59:$/;"	l
vector6	kern/trap/vectors.S	/^vector6:$/;"	l
vector6	obj/kernel.asm	/^vector6:$/;"	l
vector60	kern/trap/vectors.S	/^vector60:$/;"	l
vector60	obj/kernel.asm	/^vector60:$/;"	l
vector61	kern/trap/vectors.S	/^vector61:$/;"	l
vector61	obj/kernel.asm	/^vector61:$/;"	l
vector62	kern/trap/vectors.S	/^vector62:$/;"	l
vector62	obj/kernel.asm	/^vector62:$/;"	l
vector63	kern/trap/vectors.S	/^vector63:$/;"	l
vector63	obj/kernel.asm	/^vector63:$/;"	l
vector64	kern/trap/vectors.S	/^vector64:$/;"	l
vector64	obj/kernel.asm	/^vector64:$/;"	l
vector65	kern/trap/vectors.S	/^vector65:$/;"	l
vector65	obj/kernel.asm	/^vector65:$/;"	l
vector66	kern/trap/vectors.S	/^vector66:$/;"	l
vector66	obj/kernel.asm	/^vector66:$/;"	l
vector67	kern/trap/vectors.S	/^vector67:$/;"	l
vector67	obj/kernel.asm	/^vector67:$/;"	l
vector68	kern/trap/vectors.S	/^vector68:$/;"	l
vector68	obj/kernel.asm	/^vector68:$/;"	l
vector69	kern/trap/vectors.S	/^vector69:$/;"	l
vector69	obj/kernel.asm	/^vector69:$/;"	l
vector7	kern/trap/vectors.S	/^vector7:$/;"	l
vector7	obj/kernel.asm	/^vector7:$/;"	l
vector70	kern/trap/vectors.S	/^vector70:$/;"	l
vector70	obj/kernel.asm	/^vector70:$/;"	l
vector71	kern/trap/vectors.S	/^vector71:$/;"	l
vector71	obj/kernel.asm	/^vector71:$/;"	l
vector72	kern/trap/vectors.S	/^vector72:$/;"	l
vector72	obj/kernel.asm	/^vector72:$/;"	l
vector73	kern/trap/vectors.S	/^vector73:$/;"	l
vector73	obj/kernel.asm	/^vector73:$/;"	l
vector74	kern/trap/vectors.S	/^vector74:$/;"	l
vector74	obj/kernel.asm	/^vector74:$/;"	l
vector75	kern/trap/vectors.S	/^vector75:$/;"	l
vector75	obj/kernel.asm	/^vector75:$/;"	l
vector76	kern/trap/vectors.S	/^vector76:$/;"	l
vector76	obj/kernel.asm	/^vector76:$/;"	l
vector77	kern/trap/vectors.S	/^vector77:$/;"	l
vector77	obj/kernel.asm	/^vector77:$/;"	l
vector78	kern/trap/vectors.S	/^vector78:$/;"	l
vector78	obj/kernel.asm	/^vector78:$/;"	l
vector79	kern/trap/vectors.S	/^vector79:$/;"	l
vector79	obj/kernel.asm	/^vector79:$/;"	l
vector8	kern/trap/vectors.S	/^vector8:$/;"	l
vector8	obj/kernel.asm	/^vector8:$/;"	l
vector80	kern/trap/vectors.S	/^vector80:$/;"	l
vector80	obj/kernel.asm	/^vector80:$/;"	l
vector81	kern/trap/vectors.S	/^vector81:$/;"	l
vector81	obj/kernel.asm	/^vector81:$/;"	l
vector82	kern/trap/vectors.S	/^vector82:$/;"	l
vector82	obj/kernel.asm	/^vector82:$/;"	l
vector83	kern/trap/vectors.S	/^vector83:$/;"	l
vector83	obj/kernel.asm	/^vector83:$/;"	l
vector84	kern/trap/vectors.S	/^vector84:$/;"	l
vector84	obj/kernel.asm	/^vector84:$/;"	l
vector85	kern/trap/vectors.S	/^vector85:$/;"	l
vector85	obj/kernel.asm	/^vector85:$/;"	l
vector86	kern/trap/vectors.S	/^vector86:$/;"	l
vector86	obj/kernel.asm	/^vector86:$/;"	l
vector87	kern/trap/vectors.S	/^vector87:$/;"	l
vector87	obj/kernel.asm	/^vector87:$/;"	l
vector88	kern/trap/vectors.S	/^vector88:$/;"	l
vector88	obj/kernel.asm	/^vector88:$/;"	l
vector89	kern/trap/vectors.S	/^vector89:$/;"	l
vector89	obj/kernel.asm	/^vector89:$/;"	l
vector9	kern/trap/vectors.S	/^vector9:$/;"	l
vector9	obj/kernel.asm	/^vector9:$/;"	l
vector90	kern/trap/vectors.S	/^vector90:$/;"	l
vector90	obj/kernel.asm	/^vector90:$/;"	l
vector91	kern/trap/vectors.S	/^vector91:$/;"	l
vector91	obj/kernel.asm	/^vector91:$/;"	l
vector92	kern/trap/vectors.S	/^vector92:$/;"	l
vector92	obj/kernel.asm	/^vector92:$/;"	l
vector93	kern/trap/vectors.S	/^vector93:$/;"	l
vector93	obj/kernel.asm	/^vector93:$/;"	l
vector94	kern/trap/vectors.S	/^vector94:$/;"	l
vector94	obj/kernel.asm	/^vector94:$/;"	l
vector95	kern/trap/vectors.S	/^vector95:$/;"	l
vector95	obj/kernel.asm	/^vector95:$/;"	l
vector96	kern/trap/vectors.S	/^vector96:$/;"	l
vector96	obj/kernel.asm	/^vector96:$/;"	l
vector97	kern/trap/vectors.S	/^vector97:$/;"	l
vector97	obj/kernel.asm	/^vector97:$/;"	l
vector98	kern/trap/vectors.S	/^vector98:$/;"	l
vector98	obj/kernel.asm	/^vector98:$/;"	l
vector99	kern/trap/vectors.S	/^vector99:$/;"	l
vector99	obj/kernel.asm	/^vector99:$/;"	l
vm_end	kern/mm/vmm.h	/^    uintptr_t vm_end;        \/\/ end addr of vma, not include the vm_end itself$/;"	m	struct:vma_struct
vm_flags	kern/mm/vmm.h	/^    uint32_t vm_flags;       \/\/ flags of vma$/;"	m	struct:vma_struct
vm_flags	obj/kernel.asm	/^        vm_flags = 0, perm = PTE_U;$/;"	d
vm_flags	obj/kernel.asm	/^    vm_flags = VM_READ | VM_WRITE | VM_STACK;$/;"	d
vm_mm	kern/mm/vmm.h	/^    struct mm_struct *vm_mm; \/\/ the set of vma using the same PDT $/;"	m	struct:vma_struct	typeref:struct:vma_struct::mm_struct
vm_start	kern/mm/vmm.h	/^    uintptr_t vm_start;      \/\/ start addr of vma      $/;"	m	struct:vma_struct
vma	obj/kernel.asm	/^                    vma = NULL;$/;"	d
vma	obj/kernel.asm	/^                    vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = mm->mmap_cache;$/;"	d
vma_create	kern/mm/vmm.c	/^vma_create(uintptr_t vm_start, uintptr_t vm_end, uint32_t vm_flags) {$/;"	f
vma_struct	kern/mm/vmm.h	/^struct vma_struct {$/;"	s
vmm_init	kern/mm/vmm.c	/^vmm_init(void) {$/;"	f
void	obj/bootblock.asm	/^void$/;"	l
void	obj/kernel.asm	/^void     $/;"	l
void	obj/kernel.asm	/^void $/;"	l
void	obj/kernel.asm	/^void *$/;"	l
void	obj/kernel.asm	/^void __attribute__((noinline))$/;"	l
void	obj/kernel.asm	/^void check_sync(void){$/;"	l
void	obj/kernel.asm	/^void forkrets(struct trapframe *tf);$/;"	l
void	obj/kernel.asm	/^void grade_backtrace(void);$/;"	l
void	obj/kernel.asm	/^void kfree(void *block)$/;"	l
void	obj/kernel.asm	/^void phi_put_forks_condvar(int i) {$/;"	l
void	obj/kernel.asm	/^void phi_put_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	l
void	obj/kernel.asm	/^void phi_take_forks_condvar(int i) {$/;"	l
void	obj/kernel.asm	/^void phi_take_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	l
void	obj/kernel.asm	/^void phi_test_condvar (i) { $/;"	l
void	obj/kernel.asm	/^void phi_test_sema(i) \/* i：哲学家号码从0到N-1 *\/$/;"	l
void	obj/kernel.asm	/^void print_free_link(){$/;"	l
void	obj/kernel.asm	/^void switch_to(struct context *from, struct context *to);$/;"	l
void	obj/kernel.asm	/^void$/;"	l
void	obj/user/badarg.asm	/^void *$/;"	l
void	obj/user/badarg.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/exit.asm	/^void *$/;"	l
void	obj/user/exit.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/forktest.asm	/^void *$/;"	l
void	obj/user/forktest.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/matrix.asm	/^void *$/;"	l
void	obj/user/matrix.asm	/^void$/;"	l
void	obj/user/pgdir.asm	/^void *$/;"	l
void	obj/user/pgdir.asm	/^void$/;"	l
void	obj/user/priority.asm	/^void *$/;"	l
void	obj/user/priority.asm	/^void$/;"	l
void	obj/user/sleep.asm	/^void *$/;"	l
void	obj/user/sleep.asm	/^void$/;"	l
void	obj/user/sleepkill.asm	/^void *$/;"	l
void	obj/user/sleepkill.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/waitkill.asm	/^void *$/;"	l
void	obj/user/waitkill.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kernel.asm	/^volatile unsigned int swap_out_num=0;$/;"	l
vpd	kern/mm/pmm.c	/^pde_t * const vpd = (pde_t *)PGADDR(PDX(VPT), PDX(VPT), 0);$/;"	v
vprintfmt	libs/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap) {$/;"	f
vpt	kern/mm/pmm.c	/^pte_t * const vpt = (pte_t *)VPT;$/;"	v
vsnprintf	libs/printfmt.c	/^vsnprintf(char *str, size_t size, const char *fmt, va_list ap) {$/;"	f
wait	user/libs/ulib.c	/^wait(void) {$/;"	f
wait_current_del	kern/sync/wait.h	40;"	d
wait_current_set	kern/sync/wait.c	/^wait_current_set(wait_queue_t *queue, wait_t *wait, uint32_t wait_state) {$/;"	f
wait_head	kern/sync/wait.h	/^    list_entry_t wait_head;$/;"	m	struct:__anon1
wait_in_queue	kern/sync/wait.c	/^wait_in_queue(wait_t *wait) {$/;"	f
wait_init	kern/sync/wait.c	/^wait_init(wait_t *wait, struct proc_struct *proc) {$/;"	f
wait_link	kern/sync/wait.h	/^    list_entry_t wait_link;$/;"	m	struct:__anon2
wait_queue	kern/sync/sem.h	/^    wait_queue_t wait_queue;$/;"	m	struct:__anon3
wait_queue	kern/sync/wait.h	/^    wait_queue_t *wait_queue;$/;"	m	struct:__anon2
wait_queue_add	kern/sync/wait.c	/^wait_queue_add(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_del	kern/sync/wait.c	/^wait_queue_del(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_empty	kern/sync/wait.c	/^wait_queue_empty(wait_queue_t *queue) {$/;"	f
wait_queue_first	kern/sync/wait.c	/^wait_queue_first(wait_queue_t *queue) {$/;"	f
wait_queue_init	kern/sync/wait.c	/^wait_queue_init(wait_queue_t *queue) {$/;"	f
wait_queue_last	kern/sync/wait.c	/^wait_queue_last(wait_queue_t *queue) {$/;"	f
wait_queue_next	kern/sync/wait.c	/^wait_queue_next(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_prev	kern/sync/wait.c	/^wait_queue_prev(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_t	kern/sync/wait.h	/^} wait_queue_t;$/;"	t	typeref:struct:__anon1
wait_state	kern/process/proc.h	/^    uint32_t wait_state;                        \/\/ waiting state$/;"	m	struct:proc_struct
wait_t	kern/sync/wait.h	/^} wait_t;$/;"	t	typeref:struct:__anon2
wait_t	obj/kernel.asm	/^wait_t *$/;"	l
waitdisk	boot/bootmain.c	/^waitdisk(void) {$/;"	f	file:
waitpid	user/libs/ulib.c	/^waitpid(int pid, int *store) {$/;"	f
wakeup_first	kern/sync/wait.c	/^wakeup_first(wait_queue_t *queue, uint32_t wakeup_flags, bool del) {$/;"	f
wakeup_flags	kern/sync/wait.h	/^    uint32_t wakeup_flags;$/;"	m	struct:__anon2
wakeup_proc	kern/schedule/sched.c	/^wakeup_proc(struct proc_struct *proc) {$/;"	f
wakeup_queue	kern/sync/wait.c	/^wakeup_queue(wait_queue_t *queue, uint32_t wakeup_flags, bool del) {$/;"	f
wakeup_wait	kern/sync/wait.c	/^wakeup_wait(wait_queue_t *queue, wait_t *wait, uint32_t wakeup_flags, bool del) {$/;"	f
warn	kern/debug/assert.h	9;"	d
warn	user/libs/ulib.h	9;"	d
width	obj/kernel.asm	/^                width = 0;$/;"	d
width	obj/kernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/kernel.asm	/^        width = precision = -1;$/;"	d
width	obj/user/badarg.asm	/^                width = 0;$/;"	d
width	obj/user/badarg.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badarg.asm	/^        width = precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^                width = 0;$/;"	d
width	obj/user/badsegment.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^        width = precision = -1;$/;"	d
width	obj/user/divzero.asm	/^                width = 0;$/;"	d
width	obj/user/divzero.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^        width = precision = -1;$/;"	d
width	obj/user/exit.asm	/^                width = 0;$/;"	d
width	obj/user/exit.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/exit.asm	/^        width = precision = -1;$/;"	d
width	obj/user/faultread.asm	/^                width = 0;$/;"	d
width	obj/user/faultread.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^        width = precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^                width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^        width = precision = -1;$/;"	d
width	obj/user/forktest.asm	/^                width = 0;$/;"	d
width	obj/user/forktest.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktest.asm	/^        width = precision = -1;$/;"	d
width	obj/user/forktree.asm	/^                width = 0;$/;"	d
width	obj/user/forktree.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^        width = precision = -1;$/;"	d
width	obj/user/hello.asm	/^                width = 0;$/;"	d
width	obj/user/hello.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^        width = precision = -1;$/;"	d
width	obj/user/matrix.asm	/^                width = 0;$/;"	d
width	obj/user/matrix.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/matrix.asm	/^        width = precision = -1;$/;"	d
width	obj/user/pgdir.asm	/^                width = 0;$/;"	d
width	obj/user/pgdir.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/pgdir.asm	/^        width = precision = -1;$/;"	d
width	obj/user/priority.asm	/^                width = 0;$/;"	d
width	obj/user/priority.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/priority.asm	/^        width = precision = -1;$/;"	d
width	obj/user/sleep.asm	/^                width = 0;$/;"	d
width	obj/user/sleep.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/sleep.asm	/^        width = precision = -1;$/;"	d
width	obj/user/sleepkill.asm	/^                width = 0;$/;"	d
width	obj/user/sleepkill.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/sleepkill.asm	/^        width = precision = -1;$/;"	d
width	obj/user/softint.asm	/^                width = 0;$/;"	d
width	obj/user/softint.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^        width = precision = -1;$/;"	d
width	obj/user/spin.asm	/^                width = 0;$/;"	d
width	obj/user/spin.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^        width = precision = -1;$/;"	d
width	obj/user/testbss.asm	/^                width = 0;$/;"	d
width	obj/user/testbss.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^        width = precision = -1;$/;"	d
width	obj/user/waitkill.asm	/^                width = 0;$/;"	d
width	obj/user/waitkill.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/waitkill.asm	/^        width = precision = -1;$/;"	d
width	obj/user/yield.asm	/^                width = 0;$/;"	d
width	obj/user/yield.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^        width = precision = -1;$/;"	d
work	user/matrix.c	/^work(unsigned int times) {$/;"	f
work	user/waitkill.c	/^work(void) {$/;"	f
wpos	kern/driver/console.c	/^    uint32_t wpos;$/;"	m	struct:__anon8	file:
write_dr	libs/x86.h	/^write_dr(unsigned regnum, uint32_t value) {$/;"	f
write_eflags	libs/x86.h	/^write_eflags(uint32_t eflags) {$/;"	f
yield	user/libs/ulib.c	/^yield(void) {$/;"	f
yptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
zero	user/divzero.c	/^int zero;$/;"	v
