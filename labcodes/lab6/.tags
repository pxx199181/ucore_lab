!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
.DEFAULT_GOAL	Makefile	/^.DEFAULT_GOAL := TARGETS$/;"	m
ALIGN	kern/mm/kmalloc.c	55;"	d	file:
ALLDEPS	Makefile	/^ALLDEPS	:=$/;"	m
ALLOBJS	Makefile	/^ALLOBJS	:=$/;"	m
ALT	kern/driver/console.c	260;"	d	file:
ARRAYSIZE	obj/user/testbss.asm	/^#define ARRAYSIZE (1024*1024)$/;"	d
ARRAYSIZE	user/testbss.c	4;"	d	file:
AWK	Makefile	/^AWK		:= awk$/;"	m
BEING_CHECK_VALID_VADDR	kern/mm/swap.c	14;"	d	file:
BINDIR	Makefile	/^BINDIR	:= bin$/;"	m
BS_OCMD	kern/driver/kbdreg.h	23;"	d
BUFSIZE	kern/libs/readline.c	3;"	d	file:
C	kern/driver/console.c	323;"	d	file:
CAPSLOCK	kern/driver/console.c	262;"	d	file:
CC	Makefile	/^CC		:= $(GCCPREFIX)gcc$/;"	m
CC	Makefile	/^CC		:= clang$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -g -m32 -mno-sse -nostdinc $(DEFS)$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc $(DEFS)$/;"	m
CGA_BASE	kern/driver/console.c	45;"	d	file:
CGA_BUF	kern/driver/console.c	46;"	d	file:
CHECK_VALID_PHY_PAGE_NUM	kern/mm/swap.c	17;"	d	file:
CHECK_VALID_VADDR	kern/mm/swap.c	15;"	d	file:
CHECK_VALID_VIR_PAGE_NUM	kern/mm/swap.c	13;"	d	file:
CLONE_THREAD	libs/unistd.h	28;"	d
CLONE_VM	libs/unistd.h	27;"	d
CMDBYTE	kern/driver/kbdreg.h	60;"	d
COM1	kern/driver/console.c	21;"	d	file:
COM_DLL	kern/driver/console.c	25;"	d	file:
COM_DLM	kern/driver/console.c	26;"	d	file:
COM_FCR	kern/driver/console.c	30;"	d	file:
COM_IER	kern/driver/console.c	27;"	d	file:
COM_IER_RDI	kern/driver/console.c	28;"	d	file:
COM_IIR	kern/driver/console.c	29;"	d	file:
COM_LCR	kern/driver/console.c	31;"	d	file:
COM_LCR_DLAB	kern/driver/console.c	32;"	d	file:
COM_LCR_WLEN8	kern/driver/console.c	33;"	d	file:
COM_LSR	kern/driver/console.c	38;"	d	file:
COM_LSR_DATA	kern/driver/console.c	39;"	d	file:
COM_LSR_TSRE	kern/driver/console.c	41;"	d	file:
COM_LSR_TXRDY	kern/driver/console.c	40;"	d	file:
COM_MCR	kern/driver/console.c	34;"	d	file:
COM_MCR_DTR	kern/driver/console.c	36;"	d	file:
COM_MCR_OUT2	kern/driver/console.c	37;"	d	file:
COM_MCR_RTS	kern/driver/console.c	35;"	d	file:
COM_RX	kern/driver/console.c	23;"	d	file:
COM_TX	kern/driver/console.c	24;"	d	file:
CONSBUFSIZE	kern/driver/console.c	208;"	d	file:
COPY	Makefile	/^COPY	:= cp$/;"	m
CR0_AM	kern/mm/mmu.h	258;"	d
CR0_CD	kern/mm/mmu.h	260;"	d
CR0_EM	kern/mm/mmu.h	253;"	d
CR0_ET	kern/mm/mmu.h	255;"	d
CR0_MP	kern/mm/mmu.h	252;"	d
CR0_NE	kern/mm/mmu.h	256;"	d
CR0_NW	kern/mm/mmu.h	259;"	d
CR0_PE	kern/mm/mmu.h	251;"	d
CR0_PG	kern/mm/mmu.h	261;"	d
CR0_TS	kern/mm/mmu.h	254;"	d
CR0_WP	kern/mm/mmu.h	257;"	d
CR4_DE	kern/mm/mmu.h	266;"	d
CR4_MCE	kern/mm/mmu.h	264;"	d
CR4_PCE	kern/mm/mmu.h	263;"	d
CR4_PSE	kern/mm/mmu.h	265;"	d
CR4_PVI	kern/mm/mmu.h	268;"	d
CR4_TSD	kern/mm/mmu.h	267;"	d
CR4_VME	kern/mm/mmu.h	269;"	d
CRT_COLS	kern/driver/console.c	48;"	d	file:
CRT_ROWS	kern/driver/console.c	47;"	d	file:
CRT_SIZE	kern/driver/console.c	49;"	d	file:
CTL	kern/driver/console.c	259;"	d	file:
CTYPE	Makefile	/^CTYPE	:= c S$/;"	m
ClearPageProperty	kern/mm/memlayout.h	146;"	d
ClearPageReserved	kern/mm/memlayout.h	143;"	d
DEPTH	obj/user/forktree.asm	/^#define DEPTH 4$/;"	d
DEPTH	user/forktree.c	5;"	d	file:
DPL_KERNEL	kern/mm/memlayout.h	20;"	d
DPL_USER	kern/mm/memlayout.h	21;"	d
Disassembly	obj/bootblock.asm	/^Disassembly of section .startup:$/;"	l
Disassembly	obj/bootblock.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/kernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badarg.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/exit.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktest.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/matrix.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/pgdir.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/priority.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/waitkill.asm	/^Disassembly of section .text:$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
E0ESC	kern/driver/console.c	266;"	d	file:
E820MAX	kern/mm/memlayout.h	111;"	d
E820_ARM	kern/mm/memlayout.h	112;"	d
E820_ARR	kern/mm/memlayout.h	113;"	d
ELFHDR	boot/bootmain.c	34;"	d	file:
ELFHDR	obj/bootblock.asm	/^#define ELFHDR          ((struct elfhdr *)0x10000)      \/\/ scratch space$/;"	d
ELF_MAGIC	libs/elf.h	6;"	d
ELF_PF_R	libs/elf.h	45;"	d
ELF_PF_W	libs/elf.h	44;"	d
ELF_PF_X	libs/elf.h	43;"	d
ELF_PT_LOAD	libs/elf.h	40;"	d
EMPTY	Makefile	/^EMPTY	:=$/;"	m
E_BAD_PROC	libs/error.h	6;"	d
E_BUSY	libs/error.h	19;"	d
E_EXISTS	libs/error.h	27;"	d
E_FAULT	libs/error.h	10;"	d
E_INVAL	libs/error.h	7;"	d
E_INVAL_ELF	libs/error.h	12;"	d
E_ISDIR	libs/error.h	21;"	d
E_KILLED	libs/error.h	13;"	d
E_MAX_OPEN	libs/error.h	26;"	d
E_NA_DEV	libs/error.h	18;"	d
E_NOENT	libs/error.h	20;"	d
E_NOTDIR	libs/error.h	22;"	d
E_NOTEMPTY	libs/error.h	28;"	d
E_NO_DEV	libs/error.h	17;"	d
E_NO_FREE_PROC	libs/error.h	9;"	d
E_NO_MEM	libs/error.h	8;"	d
E_PANIC	libs/error.h	14;"	d
E_SEEK	libs/error.h	25;"	d
E_SWAP_FAULT	libs/error.h	11;"	d
E_TIMEOUT	libs/error.h	15;"	d
E_TOO_BIG	libs/error.h	16;"	d
E_UNIMP	libs/error.h	24;"	d
E_UNSPECIFIED	libs/error.h	5;"	d
E_XDEV	libs/error.h	23;"	d
FL_AC	kern/mm/mmu.h	22;"	d
FL_AF	kern/mm/mmu.h	7;"	d
FL_CF	kern/mm/mmu.h	5;"	d
FL_DF	kern/mm/mmu.h	12;"	d
FL_ID	kern/mm/mmu.h	25;"	d
FL_IF	kern/mm/mmu.h	11;"	d
FL_IOPL_0	kern/mm/mmu.h	15;"	d
FL_IOPL_1	kern/mm/mmu.h	16;"	d
FL_IOPL_2	kern/mm/mmu.h	17;"	d
FL_IOPL_3	kern/mm/mmu.h	18;"	d
FL_IOPL_MASK	kern/mm/mmu.h	14;"	d
FL_NT	kern/mm/mmu.h	19;"	d
FL_OF	kern/mm/mmu.h	13;"	d
FL_PF	kern/mm/mmu.h	6;"	d
FL_RF	kern/mm/mmu.h	20;"	d
FL_SF	kern/mm/mmu.h	9;"	d
FL_TF	kern/mm/mmu.h	10;"	d
FL_VIF	kern/mm/mmu.h	23;"	d
FL_VIP	kern/mm/mmu.h	24;"	d
FL_VM	kern/mm/mmu.h	21;"	d
FL_ZF	kern/mm/mmu.h	8;"	d
GCCPREFIX	Makefile	/^GCCPREFIX := $(shell if i386-ucore-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GDB	Makefile	/^GDB		:= $(GCCPREFIX)gdb$/;"	m
GD_KDATA	kern/mm/memlayout.h	15;"	d
GD_KTEXT	kern/mm/memlayout.h	14;"	d
GD_TSS	kern/mm/memlayout.h	18;"	d
GD_UDATA	kern/mm/memlayout.h	17;"	d
GD_UTEXT	kern/mm/memlayout.h	16;"	d
GOLDEN_RATIO_PRIME_32	libs/hash.c	4;"	d	file:
GRADE_GDB_IN	Makefile	/^GRADE_GDB_IN	:= .gdb.in$/;"	m
GRADE_QEMU_OUT	Makefile	/^GRADE_QEMU_OUT	:= .qemu.out$/;"	m
HANDIN	Makefile	/^HANDIN			:= lab$(PROJ)-handin.tar.gz$/;"	m
HASH_LIST_SIZE	kern/process/proc.c	66;"	d	file:
HASH_SHIFT	kern/process/proc.c	65;"	d	file:
HOSTCC	Makefile	/^HOSTCC		:= clang$/;"	m
HOSTCC	Makefile	/^HOSTCC		:= gcc$/;"	m
HOSTCFLAGS	Makefile	/^HOSTCFLAGS	:= -g -Wall -O2$/;"	m
IA32flags	kern/trap/trap.c	/^static const char *IA32flags[] = {$/;"	v	file:
IDE_BSY	kern/driver/ide.c	22;"	d	file:
IDE_CMD_IDENTIFY	kern/driver/ide.c	30;"	d	file:
IDE_CMD_READ	kern/driver/ide.c	28;"	d	file:
IDE_CMD_WRITE	kern/driver/ide.c	29;"	d	file:
IDE_DF	kern/driver/ide.c	24;"	d	file:
IDE_DRDY	kern/driver/ide.c	23;"	d	file:
IDE_DRQ	kern/driver/ide.c	25;"	d	file:
IDE_ERR	kern/driver/ide.c	26;"	d	file:
IDE_IDENT_CAPABILITIES	kern/driver/ide.c	34;"	d	file:
IDE_IDENT_CMDSETS	kern/driver/ide.c	35;"	d	file:
IDE_IDENT_MAX_LBA	kern/driver/ide.c	36;"	d	file:
IDE_IDENT_MAX_LBA_EXT	kern/driver/ide.c	37;"	d	file:
IDE_IDENT_MODEL	kern/driver/ide.c	33;"	d	file:
IDE_IDENT_SECTORS	kern/driver/ide.c	32;"	d	file:
IGNORE_ALLDEPS	Makefile	/^IGNORE_ALLDEPS	= clean \\$/;"	m
IO_BASE	kern/driver/ide.c	57;"	d	file:
IO_BASE0	kern/driver/ide.c	39;"	d	file:
IO_BASE1	kern/driver/ide.c	40;"	d	file:
IO_CTRL	kern/driver/ide.c	58;"	d	file:
IO_CTRL0	kern/driver/ide.c	41;"	d	file:
IO_CTRL1	kern/driver/ide.c	42;"	d	file:
IO_PIC1	kern/driver/picirq.c	6;"	d	file:
IO_PIC2	kern/driver/picirq.c	7;"	d	file:
IO_TIMER1	kern/driver/clock.c	11;"	d	file:
IRQ_COM1	kern/trap/trap.h	35;"	d
IRQ_ERROR	kern/trap/trap.h	38;"	d
IRQ_IDE1	kern/trap/trap.h	36;"	d
IRQ_IDE2	kern/trap/trap.h	37;"	d
IRQ_KBD	kern/trap/trap.h	34;"	d
IRQ_OFFSET	kern/driver/picirq.h	7;"	d
IRQ_OFFSET	kern/trap/trap.h	31;"	d
IRQ_SLAVE	kern/driver/picirq.c	9;"	d	file:
IRQ_SPURIOUS	kern/trap/trap.h	39;"	d
IRQ_TIMER	kern/trap/trap.h	33;"	d
ISA_COMMAND	kern/driver/ide.c	19;"	d	file:
ISA_CTRL	kern/driver/ide.c	13;"	d	file:
ISA_CYL_HI	kern/driver/ide.c	17;"	d	file:
ISA_CYL_LO	kern/driver/ide.c	16;"	d	file:
ISA_DATA	kern/driver/ide.c	10;"	d	file:
ISA_ERROR	kern/driver/ide.c	11;"	d	file:
ISA_PRECOMP	kern/driver/ide.c	12;"	d	file:
ISA_SDH	kern/driver/ide.c	18;"	d	file:
ISA_SECCNT	kern/driver/ide.c	14;"	d	file:
ISA_SECTOR	kern/driver/ide.c	15;"	d	file:
ISA_STATUS	kern/driver/ide.c	20;"	d	file:
KADDR	kern/mm/pmm.h	69;"	d
KBCMDP	kern/driver/kbdreg.h	29;"	d
KBC_AUXDISABLE	kern/driver/kbdreg.h	32;"	d
KBC_AUXECHO	kern/driver/kbdreg.h	36;"	d
KBC_AUXENABLE	kern/driver/kbdreg.h	33;"	d
KBC_AUXTEST	kern/driver/kbdreg.h	34;"	d
KBC_AUXWRITE	kern/driver/kbdreg.h	37;"	d
KBC_DISABLE	kern/driver/kbdreg.h	66;"	d
KBC_ECHO	kern/driver/kbdreg.h	71;"	d
KBC_ENABLE	kern/driver/kbdreg.h	67;"	d
KBC_KBDDISABLE	kern/driver/kbdreg.h	40;"	d
KBC_KBDECHO	kern/driver/kbdreg.h	35;"	d
KBC_KBDENABLE	kern/driver/kbdreg.h	41;"	d
KBC_KBDTEST	kern/driver/kbdreg.h	39;"	d
KBC_MODEIND	kern/driver/kbdreg.h	70;"	d
KBC_PULSE0	kern/driver/kbdreg.h	42;"	d
KBC_PULSE1	kern/driver/kbdreg.h	43;"	d
KBC_PULSE2	kern/driver/kbdreg.h	44;"	d
KBC_PULSE3	kern/driver/kbdreg.h	45;"	d
KBC_RAMREAD	kern/driver/kbdreg.h	30;"	d
KBC_RAMWRITE	kern/driver/kbdreg.h	31;"	d
KBC_RESEND	kern/driver/kbdreg.h	64;"	d
KBC_RESET	kern/driver/kbdreg.h	63;"	d
KBC_SELFTEST	kern/driver/kbdreg.h	38;"	d
KBC_SETDEFAULT	kern/driver/kbdreg.h	65;"	d
KBC_SETTABLE	kern/driver/kbdreg.h	69;"	d
KBC_TYPEMATIC	kern/driver/kbdreg.h	68;"	d
KBDATAP	kern/driver/kbdreg.h	47;"	d
KBOUTP	kern/driver/kbdreg.h	48;"	d
KBR_ACK	kern/driver/kbdreg.h	76;"	d
KBR_BREAK	kern/driver/kbdreg.h	79;"	d
KBR_ECHO	kern/driver/kbdreg.h	81;"	d
KBR_EXTENDED	kern/driver/kbdreg.h	74;"	d
KBR_FAILURE	kern/driver/kbdreg.h	78;"	d
KBR_OVERRUN	kern/driver/kbdreg.h	77;"	d
KBR_RESEND	kern/driver/kbdreg.h	75;"	d
KBR_RSTDONE	kern/driver/kbdreg.h	80;"	d
KBSTATP	kern/driver/kbdreg.h	19;"	d
KBS_DIB	kern/driver/kbdreg.h	20;"	d
KBS_IBF	kern/driver/kbdreg.h	21;"	d
KBS_NOSEC	kern/driver/kbdreg.h	24;"	d
KBS_PERR	kern/driver/kbdreg.h	27;"	d
KBS_RERR	kern/driver/kbdreg.h	26;"	d
KBS_TERR	kern/driver/kbdreg.h	25;"	d
KBS_WARM	kern/driver/kbdreg.h	22;"	d
KC8_CPU	kern/driver/kbdreg.h	57;"	d
KC8_IGNSEC	kern/driver/kbdreg.h	56;"	d
KC8_KDISABLE	kern/driver/kbdreg.h	55;"	d
KC8_KENABLE	kern/driver/kbdreg.h	59;"	d
KC8_MDISABLE	kern/driver/kbdreg.h	54;"	d
KC8_MENABLE	kern/driver/kbdreg.h	58;"	d
KC8_TRANS	kern/driver/kbdreg.h	53;"	d
KERNBASE	kern/mm/memlayout.h	70;"	d
KERNEL_CS	kern/mm/memlayout.h	23;"	d
KERNEL_DS	kern/mm/memlayout.h	24;"	d
KERNEL_EXECVE	kern/process/proc.c	811;"	d	file:
KERNEL_EXECVE2	kern/process/proc.c	823;"	d	file:
KERNEL_EXECVE2	obj/kernel.asm	/^#define KERNEL_EXECVE2(x, xstart, xsize)        __KERNEL_EXECVE2(x, xstart, xsize)$/;"	d
KERNTOP	kern/mm/memlayout.h	72;"	d
KERN_ACCESS	kern/mm/memlayout.h	97;"	d
KEY_DEL	kern/driver/kbdreg.h	14;"	d
KEY_DN	kern/driver/kbdreg.h	8;"	d
KEY_END	kern/driver/kbdreg.h	6;"	d
KEY_HOME	kern/driver/kbdreg.h	5;"	d
KEY_INS	kern/driver/kbdreg.h	13;"	d
KEY_LF	kern/driver/kbdreg.h	9;"	d
KEY_PGDN	kern/driver/kbdreg.h	12;"	d
KEY_PGUP	kern/driver/kbdreg.h	11;"	d
KEY_RT	kern/driver/kbdreg.h	10;"	d
KEY_UP	kern/driver/kbdreg.h	7;"	d
KMALLOC_MAX_ORDER	kern/mm/kmalloc.h	6;"	d
KMEMSIZE	kern/mm/memlayout.h	71;"	d
KOBJS	Makefile	/^KOBJS	= $(call read_packet,kernel libs)$/;"	m
KSTACKPAGE	kern/mm/memlayout.h	82;"	d
KSTACKSIZE	kern/mm/memlayout.h	83;"	d
K_LDCMDBYTE	kern/driver/kbdreg.h	51;"	d
K_RDCMDBYTE	kern/driver/kbdreg.h	50;"	d
L1_CACHE_BYTES	kern/mm/kmalloc.c	51;"	d	file:
LD	Makefile	/^LD      := $(GCCPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS	:= -m $(shell $(LD) -V | grep elf_i386 2>\/dev\/null)$/;"	m
LPTPORT	kern/driver/console.c	51;"	d	file:
MAKEOPTS	Makefile	/^MAKEOPTS		:= --quiet --no-print-directory$/;"	m
MAKEOPTS	Makefile	/^MAKEOPTS	:= --quiet --no-print-directory$/;"	m
MATSIZE	user/matrix.c	6;"	d	file:
MAXARGS	kern/debug/kmonitor.c	33;"	d	file:
MAXARGS	obj/kernel.asm	/^#define MAXARGS         16$/;"	d
MAXERROR	libs/error.h	30;"	d
MAX_ARGS	obj/user/badarg.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/badsegment.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/divzero.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/exit.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/faultread.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/faultreadkernel.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/forktest.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/forktree.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/hello.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/matrix.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/pgdir.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/priority.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/softint.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/spin.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/testbss.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/waitkill.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	obj/user/yield.asm	/^#define MAX_ARGS            5$/;"	d
MAX_ARGS	user/libs/syscall.c	6;"	d	file:
MAX_DISK_NSECS	kern/driver/ide.c	46;"	d	file:
MAX_IDE	kern/driver/ide.c	44;"	d	file:
MAX_NSECS	kern/driver/ide.c	45;"	d	file:
MAX_PID	kern/process/proc.h	39;"	d
MAX_PROCESS	kern/process/proc.h	38;"	d
MAX_SEQ_NO	kern/mm/swap.c	19;"	d	file:
MAX_SWAP_OFFSET_LIMIT	kern/mm/swap.h	17;"	d
MAX_TIME	user/priority.c	8;"	d	file:
MAX_TIME_SLICE	kern/schedule/sched.h	8;"	d
MKDIR	Makefile	/^MKDIR   := mkdir -p$/;"	m
MONO_BASE	kern/driver/console.c	43;"	d	file:
MONO_BUF	kern/driver/console.c	44;"	d	file:
MV	Makefile	/^MV		:= mv$/;"	m
NCOMMANDS	kern/debug/kmonitor.c	29;"	d	file:
NO	kern/driver/console.c	256;"	d	file:
NPDEENTRY	kern/mm/mmu.h	223;"	d
NPTEENTRY	kern/mm/mmu.h	224;"	d
NULL	libs/defs.h	5;"	d
NUMLOCK	kern/driver/console.c	263;"	d	file:
NUM_SYSCALLS	kern/syscall/syscall.c	94;"	d	file:
NUM_SYSCALLS	obj/kernel.asm	/^#define NUM_SYSCALLS        ((sizeof(syscalls)) \/ (sizeof(syscalls[0])))$/;"	d
N_BCOMM	kern/debug/stab.h	39;"	d
N_BINCL	kern/debug/stab.h	31;"	d
N_BSLINE	kern/debug/stab.h	27;"	d
N_DSLINE	kern/debug/stab.h	26;"	d
N_ECOML	kern/debug/stab.h	41;"	d
N_ECOMM	kern/debug/stab.h	40;"	d
N_EINCL	kern/debug/stab.h	34;"	d
N_ENTRY	kern/debug/stab.h	35;"	d
N_EXCL	kern/debug/stab.h	37;"	d
N_FNAME	kern/debug/stab.h	18;"	d
N_FUN	kern/debug/stab.h	19;"	d
N_GSYM	kern/debug/stab.h	17;"	d
N_LBRAC	kern/debug/stab.h	36;"	d
N_LCSYM	kern/debug/stab.h	21;"	d
N_LENG	kern/debug/stab.h	42;"	d
N_LSYM	kern/debug/stab.h	30;"	d
N_MAIN	kern/debug/stab.h	22;"	d
N_PC	kern/debug/stab.h	23;"	d
N_PSYM	kern/debug/stab.h	33;"	d
N_RBRAC	kern/debug/stab.h	38;"	d
N_RSYM	kern/debug/stab.h	24;"	d
N_SLINE	kern/debug/stab.h	25;"	d
N_SO	kern/debug/stab.h	29;"	d
N_SOL	kern/debug/stab.h	32;"	d
N_SSYM	kern/debug/stab.h	28;"	d
N_STSYM	kern/debug/stab.h	20;"	d
OBJCOPY	Makefile	/^OBJCOPY := $(GCCPREFIX)objcopy$/;"	m
OBJDIR	Makefile	/^OBJDIR	:= obj$/;"	m
OBJDUMP	Makefile	/^OBJDUMP := $(GCCPREFIX)objdump$/;"	m
OBJPREFIX	tools/function.mk	/^OBJPREFIX	:= __objs_$/;"	m
PADDR	kern/mm/pmm.h	57;"	d
PAGE_NSECT	kern/fs/fs.h	7;"	d
PAGE_SIZE	kern/mm/kmalloc.c	47;"	d	file:
PDE_ADDR	kern/mm/mmu.h	220;"	d
PDX	kern/mm/mmu.h	204;"	d
PDXSHIFT	kern/mm/mmu.h	232;"	d
PF_EXITING	kern/process/proc.h	69;"	d
PGADDR	kern/mm/mmu.h	216;"	d
PGOFF	kern/mm/mmu.h	213;"	d
PGSHIFT	kern/mm/mmu.h	227;"	d
PGSIZE	kern/mm/mmu.h	226;"	d
PG_property	kern/mm/memlayout.h	140;"	d
PG_reserved	kern/mm/memlayout.h	139;"	d
PPN	kern/mm/mmu.h	210;"	d
PROC_NAME_LEN	kern/process/proc.h	37;"	d
PROC_RUNNABLE	kern/process/proc.h	/^    PROC_RUNNABLE,    \/\/ runnable(maybe running)$/;"	e	enum:proc_state
PROC_SLEEPING	kern/process/proc.h	/^    PROC_SLEEPING,    \/\/ sleeping$/;"	e	enum:proc_state
PROC_UNINIT	kern/process/proc.h	/^    PROC_UNINIT = 0,  \/\/ uninitialized$/;"	e	enum:proc_state
PROC_ZOMBIE	kern/process/proc.h	/^    PROC_ZOMBIE,      \/\/ almost dead, and wait parent proc to reclaim his resource$/;"	e	enum:proc_state
PROJ	Makefile	/^PROJ	:= 6$/;"	m
PTE_A	kern/mm/mmu.h	240;"	d
PTE_ADDR	kern/mm/mmu.h	219;"	d
PTE_AVAIL	kern/mm/mmu.h	244;"	d
PTE_D	kern/mm/mmu.h	241;"	d
PTE_MBZ	kern/mm/mmu.h	243;"	d
PTE_P	kern/mm/mmu.h	235;"	d
PTE_PCD	kern/mm/mmu.h	239;"	d
PTE_PS	kern/mm/mmu.h	242;"	d
PTE_PWT	kern/mm/mmu.h	238;"	d
PTE_U	kern/mm/mmu.h	237;"	d
PTE_USER	kern/mm/mmu.h	248;"	d
PTE_W	kern/mm/mmu.h	236;"	d
PTSHIFT	kern/mm/mmu.h	229;"	d
PTSIZE	kern/mm/mmu.h	228;"	d
PTX	kern/mm/mmu.h	207;"	d
PTXSHIFT	kern/mm/mmu.h	231;"	d
Page	kern/mm/memlayout.h	/^struct Page {$/;"	s
PageProperty	kern/mm/memlayout.h	147;"	d
PageReserved	kern/mm/memlayout.h	144;"	d
QEMU	Makefile	/^QEMU := $(shell if which qemu-system-i386 > \/dev\/null; \\$/;"	m
QEMUOPTS	Makefile	/^QEMUOPTS = -hda $(UCOREIMG) -drive file=$(SWAPIMG),media=disk,cache=writeback$/;"	m
RAND_MAX	libs/stdlib.h	7;"	d
REALLOC	kern/init/entry.S	/^#define REALLOC(x) (x - KERNBASE)$/;"	d
RM	Makefile	/^RM		:= rm -f$/;"	m
ROUNDDOWN	libs/defs.h	43;"	d
ROUNDUP	libs/defs.h	49;"	d
RR_dequeue	kern/schedule/default_sched.c	/^RR_dequeue(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
RR_enqueue	kern/schedule/default_sched.c	/^RR_enqueue(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
RR_init	kern/schedule/default_sched.c	/^RR_init(struct run_queue *rq) {$/;"	f	file:
RR_pick_next	kern/schedule/default_sched.c	/^RR_pick_next(struct run_queue *rq) {$/;"	f	file:
RR_proc_tick	kern/schedule/default_sched.c	/^RR_proc_tick(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
RUN_PREFIX	Makefile	/^RUN_PREFIX	:= _binary_$(OBJDIR)_$(USER_PREFIX)$/;"	m
SCROLLLOCK	kern/driver/console.c	264;"	d	file:
SECTSIZE	boot/bootmain.c	33;"	d	file:
SECTSIZE	kern/fs/fs.h	6;"	d
SED	Makefile	/^SED		:= sed$/;"	m
SEG	kern/mm/mmu.h	131;"	d
SEGTSS	kern/mm/mmu.h	139;"	d
SEG_ASM	boot/asm.h	11;"	d
SEG_ASM	kern/mm/mmu.h	55;"	d
SEG_KDATA	kern/mm/memlayout.h	8;"	d
SEG_KTEXT	kern/mm/memlayout.h	7;"	d
SEG_NULL	kern/mm/mmu.h	128;"	d
SEG_NULL	kern/mm/mmu.h	51;"	d
SEG_NULLASM	boot/asm.h	7;"	d
SEG_TSS	kern/mm/memlayout.h	11;"	d
SEG_UDATA	kern/mm/memlayout.h	10;"	d
SEG_UTEXT	kern/mm/memlayout.h	9;"	d
SETCALLGATE	kern/mm/mmu.h	99;"	d
SETGATE	kern/mm/mmu.h	86;"	d
SH	Makefile	/^SH		:= sh$/;"	m
SHIFT	kern/driver/console.c	258;"	d	file:
SLASH	Makefile	/^SLASH	:= \/$/;"	m
SLOB_ALIGN	kern/mm/kmalloc.c	67;"	d	file:
SLOB_UNIT	kern/mm/kmalloc.c	65;"	d	file:
SLOB_UNITS	kern/mm/kmalloc.c	66;"	d	file:
SPACE	Makefile	/^SPACE	:= $(EMPTY) $(EMPTY)$/;"	m
STACKFRAME_DEPTH	kern/debug/kdebug.c	14;"	d	file:
STA_A	boot/asm.h	23;"	d
STA_A	kern/mm/mmu.h	33;"	d
STA_C	boot/asm.h	20;"	d
STA_C	kern/mm/mmu.h	30;"	d
STA_E	boot/asm.h	19;"	d
STA_E	kern/mm/mmu.h	29;"	d
STA_R	boot/asm.h	22;"	d
STA_R	kern/mm/mmu.h	32;"	d
STA_W	boot/asm.h	21;"	d
STA_W	kern/mm/mmu.h	31;"	d
STA_X	boot/asm.h	18;"	d
STA_X	kern/mm/mmu.h	28;"	d
STS_CG16	kern/mm/mmu.h	39;"	d
STS_CG32	kern/mm/mmu.h	45;"	d
STS_IG16	kern/mm/mmu.h	41;"	d
STS_IG32	kern/mm/mmu.h	46;"	d
STS_LDT	kern/mm/mmu.h	37;"	d
STS_T16A	kern/mm/mmu.h	36;"	d
STS_T16B	kern/mm/mmu.h	38;"	d
STS_T32A	kern/mm/mmu.h	43;"	d
STS_T32B	kern/mm/mmu.h	44;"	d
STS_TG	kern/mm/mmu.h	40;"	d
STS_TG16	kern/mm/mmu.h	42;"	d
STS_TG32	kern/mm/mmu.h	47;"	d
SWAPIMG	Makefile	/^SWAPIMG		:= $(call totarget,swap.img)$/;"	m
SWAP_DEV_NO	kern/fs/fs.h	9;"	d
SYS_brk	libs/unistd.h	17;"	d
SYS_clone	libs/unistd.h	11;"	d
SYS_exec	libs/unistd.h	10;"	d
SYS_exit	libs/unistd.h	7;"	d
SYS_fork	libs/unistd.h	8;"	d
SYS_getpid	libs/unistd.h	16;"	d
SYS_gettime	libs/unistd.h	15;"	d
SYS_kill	libs/unistd.h	14;"	d
SYS_lab6_set_priority	libs/unistd.h	24;"	d
SYS_mmap	libs/unistd.h	18;"	d
SYS_munmap	libs/unistd.h	19;"	d
SYS_pgdir	libs/unistd.h	22;"	d
SYS_putc	libs/unistd.h	21;"	d
SYS_shmem	libs/unistd.h	20;"	d
SYS_sleep	libs/unistd.h	13;"	d
SYS_wait	libs/unistd.h	9;"	d
SYS_yield	libs/unistd.h	12;"	d
SetPageProperty	kern/mm/memlayout.h	145;"	d
SetPageReserved	kern/mm/memlayout.h	142;"	d
TARGETS	Makefile	/^TARGETS	:=$/;"	m
TERMINAL	Makefile	/^TERMINAL := gnome-terminal$/;"	m
TICK_NUM	kern/trap/trap.c	20;"	d	file:
TICK_NUM	obj/kernel.asm	/^#define TICK_NUM 100$/;"	d
TIMER_16BIT	kern/driver/clock.c	24;"	d	file:
TIMER_DIV	kern/driver/clock.c	19;"	d	file:
TIMER_FREQ	kern/driver/clock.c	18;"	d	file:
TIMER_MODE	kern/driver/clock.c	21;"	d	file:
TIMER_RATEGEN	kern/driver/clock.c	23;"	d	file:
TIMER_SEL0	kern/driver/clock.c	22;"	d	file:
TOTAL	user/priority.c	6;"	d	file:
TOUCH	Makefile	/^TOUCH	:= touch -c$/;"	m
TOUCH_FILES	Makefile	/^TOUCH_FILES		:= kern\/process\/proc.c$/;"	m
TR	Makefile	/^TR		:= tr$/;"	m
T_ALIGN	kern/trap/trap.h	26;"	d
T_BOUND	kern/trap/trap.h	14;"	d
T_BRKPT	kern/trap/trap.h	12;"	d
T_DBLFLT	kern/trap/trap.h	17;"	d
T_DEBUG	kern/trap/trap.h	10;"	d
T_DEVICE	kern/trap/trap.h	16;"	d
T_DIVIDE	kern/trap/trap.h	9;"	d
T_FPERR	kern/trap/trap.h	25;"	d
T_GPFLT	kern/trap/trap.h	22;"	d
T_ILLOP	kern/trap/trap.h	15;"	d
T_MCHK	kern/trap/trap.h	27;"	d
T_NMI	kern/trap/trap.h	11;"	d
T_OFLOW	kern/trap/trap.h	13;"	d
T_PGFLT	kern/trap/trap.h	23;"	d
T_SEGNP	kern/trap/trap.h	20;"	d
T_SIMDERR	kern/trap/trap.h	28;"	d
T_STACK	kern/trap/trap.h	21;"	d
T_SWITCH_TOK	kern/trap/trap.h	46;"	d
T_SWITCH_TOU	kern/trap/trap.h	45;"	d
T_SYSCALL	libs/unistd.h	4;"	d
T_TSS	kern/trap/trap.h	19;"	d
UCOREIMG	Makefile	/^UCOREIMG	:= $(call totarget,ucore.img)$/;"	m
UOBJS	Makefile	/^UOBJS	:= $(call read_packet,ulibs libs)$/;"	m
USERBASE	kern/mm/memlayout.h	90;"	d
USERTOP	kern/mm/memlayout.h	85;"	d
USER_ACCESS	kern/mm/memlayout.h	94;"	d
USER_BINS	Makefile	/^USER_BINS	:=$/;"	m
USER_CS	kern/mm/memlayout.h	25;"	d
USER_DS	kern/mm/memlayout.h	26;"	d
USER_PREFIX	Makefile	/^USER_PREFIX	:= __user_$/;"	m
USTAB	kern/mm/memlayout.h	92;"	d
USTACKPAGE	kern/mm/memlayout.h	87;"	d
USTACKSIZE	kern/mm/memlayout.h	88;"	d
USTACKTOP	kern/mm/memlayout.h	86;"	d
UTEXT	kern/mm/memlayout.h	91;"	d
V	Makefile	/^V       := @$/;"	m
VALID_IDE	kern/driver/ide.c	47;"	d	file:
VM_EXEC	kern/mm/vmm.h	27;"	d
VM_READ	kern/mm/vmm.h	25;"	d
VM_STACK	kern/mm/vmm.h	28;"	d
VM_WRITE	kern/mm/vmm.h	26;"	d
VPT	kern/mm/memlayout.h	80;"	d
WHITESPACE	kern/debug/kmonitor.c	34;"	d	file:
WHITESPACE	obj/kernel.asm	/^#define WHITESPACE      " \\t\\n\\r"$/;"	d
WT_CHILD	kern/process/proc.h	71;"	d
WT_INTERRUPTED	kern/process/proc.h	72;"	d
__BOOT_ASM_H__	boot/asm.h	2;"	d
__HAVE_ARCH_MEMCPY	libs/x86.h	283;"	d
__HAVE_ARCH_MEMCPY	obj/kernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	libs/x86.h	264;"	d
__HAVE_ARCH_MEMMOVE	obj/kernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	libs/x86.h	250;"	d
__HAVE_ARCH_MEMSET	obj/kernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_MEMSET	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	libs/x86.h	210;"	d
__HAVE_ARCH_STRCMP	obj/kernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/matrix.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/priority.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCMP	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	libs/x86.h	234;"	d
__HAVE_ARCH_STRCPY	obj/kernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/matrix.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/priority.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__HAVE_ARCH_STRCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__KERNEL_EXECVE	kern/process/proc.c	805;"	d	file:
__KERNEL_EXECVE2	kern/process/proc.c	818;"	d	file:
__KERN_DEBUG_ASSERT_H__	kern/debug/assert.h	2;"	d
__KERN_DEBUG_KDEBUG_H__	kern/debug/kdebug.h	2;"	d
__KERN_DEBUG_MONITOR_H__	kern/debug/kmonitor.h	2;"	d
__KERN_DEBUG_STAB_H__	kern/debug/stab.h	2;"	d
__KERN_DRIVER_CLOCK_H__	kern/driver/clock.h	2;"	d
__KERN_DRIVER_CONSOLE_H__	kern/driver/console.h	2;"	d
__KERN_DRIVER_IDE_H__	kern/driver/ide.h	2;"	d
__KERN_DRIVER_INTR_H__	kern/driver/intr.h	2;"	d
__KERN_DRIVER_KBDREG_H__	kern/driver/kbdreg.h	2;"	d
__KERN_DRIVER_PICIRQ_H__	kern/driver/picirq.h	2;"	d
__KERN_FS_FS_H__	kern/fs/fs.h	2;"	d
__KERN_FS_SWAPFS_H__	kern/fs/swapfs.h	2;"	d
__KERN_MM_DEFAULT_PMM_H__	kern/mm/default_pmm.h	2;"	d
__KERN_MM_KMALLOC_H__	kern/mm/kmalloc.h	2;"	d
__KERN_MM_MEMLAYOUT_H__	kern/mm/memlayout.h	2;"	d
__KERN_MM_MMU_H__	kern/mm/mmu.h	2;"	d
__KERN_MM_PMM_H__	kern/mm/pmm.h	2;"	d
__KERN_MM_SWAP_FIFO_H__	kern/mm/swap_fifo.h	2;"	d
__KERN_MM_SWAP_H__	kern/mm/swap.h	2;"	d
__KERN_MM_VMM_H__	kern/mm/vmm.h	2;"	d
__KERN_PROCESS_PROC_H__	kern/process/proc.h	2;"	d
__KERN_SCHEDULE_SCHED_H__	kern/schedule/sched.h	2;"	d
__KERN_SCHEDULE_SCHED_RR_H__	kern/schedule/default_sched.h	2;"	d
__KERN_SYNC_SYNC_H__	kern/sync/sync.h	2;"	d
__KERN_SYSCALL_SYSCALL_H__	kern/syscall/syscall.h	2;"	d
__KERN_TRAP_TRAP_H__	kern/trap/trap.h	2;"	d
__LIBS_ATOMIC_H__	libs/atomic.h	2;"	d
__LIBS_DEFS_H__	libs/defs.h	2;"	d
__LIBS_ELF_H__	libs/elf.h	2;"	d
__LIBS_ERROR_H__	libs/error.h	2;"	d
__LIBS_LIST_H__	libs/list.h	2;"	d
__LIBS_SKEW_HEAP_H__	libs/skew_heap.h	2;"	d
__LIBS_STDARG_H__	libs/stdarg.h	2;"	d
__LIBS_STDIO_H__	libs/stdio.h	2;"	d
__LIBS_STDLIB_H__	libs/stdlib.h	2;"	d
__LIBS_STRING_H__	libs/string.h	2;"	d
__LIBS_UNISTD_H__	libs/unistd.h	2;"	d
__LIBS_X86_H__	libs/x86.h	2;"	d
__USER_LIBS_SYSCALL_H__	user/libs/syscall.h	2;"	d
__USER_LIBS_ULIB_H__	user/libs/ulib.h	2;"	d
__alltraps	kern/trap/trapentry.S	/^__alltraps:$/;"	l
__alltraps	obj/kernel.asm	/^__alltraps:$/;"	l
__always_inline	libs/defs.h	8;"	d
__gdt	kern/init/entry.S	/^__gdt:$/;"	l
__gdtdesc	kern/init/entry.S	/^__gdtdesc:$/;"	l
__intr_restore	kern/sync/sync.h	/^__intr_restore(bool flag) {$/;"	f
__intr_save	kern/sync/sync.h	/^__intr_save(void) {$/;"	f
__kmalloc	kern/mm/kmalloc.c	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	f	file:
__list_add	libs/list.h	/^__list_add(list_entry_t *elm, list_entry_t *prev, list_entry_t *next) {$/;"	f
__list_del	libs/list.h	/^__list_del(list_entry_t *prev, list_entry_t *next) {$/;"	f
__memcpy	libs/x86.h	/^__memcpy(void *dst, const void *src, size_t n) {$/;"	f
__memmove	libs/x86.h	/^__memmove(void *dst, const void *src, size_t n) {$/;"	f
__memset	libs/x86.h	/^__memset(void *s, char c, size_t n) {$/;"	f
__noinline	libs/defs.h	9;"	d
__noreturn	libs/defs.h	10;"	d
__panic	kern/debug/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__panic	user/libs/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__rq	kern/schedule/sched.c	/^static struct run_queue __rq;$/;"	v	typeref:struct:run_queue	file:
__slob_free_pages	kern/mm/kmalloc.c	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	f	file:
__slob_get_free_page	kern/mm/kmalloc.c	89;"	d	file:
__slob_get_free_page	obj/kernel.asm	/^#define __slob_get_free_page(gfp) __slob_get_free_pages(gfp, 0)$/;"	d
__slob_get_free_pages	kern/mm/kmalloc.c	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	f	file:
__strcmp	libs/x86.h	/^__strcmp(const char *s1, const char *s2) {$/;"	f
__strcpy	libs/x86.h	/^__strcpy(char *dst, const char *src) {$/;"	f
__trapret	kern/trap/trapentry.S	/^__trapret:$/;"	l
__trapret	obj/kernel.asm	/^__trapret:$/;"	l
__vectors	kern/trap/vectors.S	/^__vectors:$/;"	l
__warn	kern/debug/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
__warn	user/libs/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
_fifo_check_swap	kern/mm/swap_fifo.c	/^_fifo_check_swap(void) {$/;"	f	file:
_fifo_init	kern/mm/swap_fifo.c	/^_fifo_init(void)$/;"	f	file:
_fifo_init_mm	kern/mm/swap_fifo.c	/^_fifo_init_mm(struct mm_struct *mm)$/;"	f	file:
_fifo_map_swappable	kern/mm/swap_fifo.c	/^_fifo_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f	file:
_fifo_set_unswappable	kern/mm/swap_fifo.c	/^_fifo_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f	file:
_fifo_swap_out_victim	kern/mm/swap_fifo.c	/^_fifo_swap_out_victim(struct mm_struct *mm, struct Page ** ptr_page, int in_tick)$/;"	f	file:
_fifo_tick_event	kern/mm/swap_fifo.c	/^_fifo_tick_event(struct mm_struct *mm)$/;"	f	file:
_start	obj/user/badarg.asm	/^_start:$/;"	l
_start	obj/user/badsegment.asm	/^_start:$/;"	l
_start	obj/user/divzero.asm	/^_start:$/;"	l
_start	obj/user/exit.asm	/^_start:$/;"	l
_start	obj/user/faultread.asm	/^_start:$/;"	l
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
_start	obj/user/forktest.asm	/^_start:$/;"	l
_start	obj/user/forktree.asm	/^_start:$/;"	l
_start	obj/user/hello.asm	/^_start:$/;"	l
_start	obj/user/matrix.asm	/^_start:$/;"	l
_start	obj/user/pgdir.asm	/^_start:$/;"	l
_start	obj/user/priority.asm	/^_start:$/;"	l
_start	obj/user/softint.asm	/^_start:$/;"	l
_start	obj/user/spin.asm	/^_start:$/;"	l
_start	obj/user/testbss.asm	/^_start:$/;"	l
_start	obj/user/waitkill.asm	/^_start:$/;"	l
_start	obj/user/yield.asm	/^_start:$/;"	l
_start	user/libs/initcode.S	/^_start:$/;"	l
acc	user/priority.c	/^unsigned int acc[TOTAL];$/;"	v
add_dependency	tools/function.mk	/^add_dependency = $(eval $(1): $(2))$/;"	m
add_files	tools/function.mk	/^add_files = $(eval $(call do_add_files_to_packet,$(1),$(2),$(3),$(4),$(5)))$/;"	m
add_files_cc	Makefile	/^add_files_cc = $(call add_files,$(1),$(CC),$(CFLAGS) $(3),$(2),$(4))$/;"	m
add_files_host	Makefile	/^add_files_host = $(call add_files,$(1),$(HOSTCC),$(HOSTCFLAGS),$(2),$(3))$/;"	m
add_objs	tools/function.mk	/^add_objs = $(eval $(call do_add_objs_to_packet,$(1),$(2)))$/;"	m
add_timer	kern/schedule/sched.c	/^add_timer(timer_t *timer) {$/;"	f
addr	kern/mm/memlayout.h	/^        uint64_t addr;$/;"	m	struct:e820map::__anon2
addr	obj/kernel.asm	/^    addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr_6845	kern/driver/console.c	/^static uint16_t addr_6845;$/;"	v	file:
addr_6845	obj/kernel.asm	/^        addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kernel.asm	/^        addr_6845 = MONO_BASE;$/;"	d
aligned	obj/kernel.asm	/^			aligned = (slob_t *)ALIGN((unsigned long)cur, align);$/;"	d
alloc_page	kern/mm/pmm.h	35;"	d
alloc_pages	kern/mm/pmm.c	/^alloc_pages(size_t n) {$/;"	f
alloc_pages	kern/mm/pmm.h	/^    struct Page *(*alloc_pages)(size_t n);            \/\/ allocate >=n pages, depend on the allocation algorithm $/;"	m	struct:pmm_manager	typeref:struct:pmm_manager::alloc_pages
alloc_proc	kern/process/proc.c	/^alloc_proc(void) {$/;"	f	file:
altflag	obj/kernel.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/badarg.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/badsegment.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/divzero.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/exit.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/faultread.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/faultreadkernel.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/forktest.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/forktree.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/hello.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/matrix.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/pgdir.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/priority.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/softint.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/spin.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/testbss.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/waitkill.asm	/^            altflag = 1;$/;"	d
altflag	obj/user/yield.asm	/^            altflag = 1;$/;"	d
any_matches	obj/kernel.asm	/^        any_matches = 1;$/;"	d
arena	kern/mm/kmalloc.c	/^static slob_t arena = { .next = &arena, .units = 1 };$/;"	v	file:
asmfile	Makefile	/^asmfile = $(call cgtype,$(call toobj,$(1)),o,asm)$/;"	m
assert	kern/debug/assert.h	15;"	d
assert	user/libs/ulib.h	15;"	d
bad	obj/bootblock.asm	/^bad:$/;"	l
bad_cleanup_mmap	obj/kernel.asm	/^bad_cleanup_mmap:$/;"	l
bad_dup_cleanup_mmap	obj/kernel.asm	/^bad_dup_cleanup_mmap:$/;"	l
bad_elf_cleanup_pgdir	obj/kernel.asm	/^bad_elf_cleanup_pgdir:$/;"	l
bad_fork_cleanup_kstack	obj/kernel.asm	/^bad_fork_cleanup_kstack:$/;"	l
bad_fork_cleanup_proc	obj/kernel.asm	/^bad_fork_cleanup_proc:$/;"	l
bad_mm	obj/kernel.asm	/^bad_mm:$/;"	l
bad_pgdir_cleanup_mm	obj/kernel.asm	/^bad_pgdir_cleanup_mm:$/;"	l
barrier	libs/x86.h	21;"	d
base	kern/driver/ide.c	/^    unsigned short base;        \/\/ I\/O Base$/;"	m	struct:__anon4	file:
base	obj/kernel.asm	/^            base = 10;$/;"	d
base	obj/kernel.asm	/^            base = 16;$/;"	d
base	obj/kernel.asm	/^            base = 8;$/;"	d
base	obj/kernel.asm	/^            base = p;$/;"	d
base	obj/kernel.asm	/^        base = 10;$/;"	d
base	obj/user/badarg.asm	/^            base = 10;$/;"	d
base	obj/user/badarg.asm	/^            base = 16;$/;"	d
base	obj/user/badarg.asm	/^            base = 8;$/;"	d
base	obj/user/badarg.asm	/^        base = 10;$/;"	d
base	obj/user/badsegment.asm	/^            base = 10;$/;"	d
base	obj/user/badsegment.asm	/^            base = 16;$/;"	d
base	obj/user/badsegment.asm	/^            base = 8;$/;"	d
base	obj/user/badsegment.asm	/^        base = 10;$/;"	d
base	obj/user/divzero.asm	/^            base = 10;$/;"	d
base	obj/user/divzero.asm	/^            base = 16;$/;"	d
base	obj/user/divzero.asm	/^            base = 8;$/;"	d
base	obj/user/divzero.asm	/^        base = 10;$/;"	d
base	obj/user/exit.asm	/^            base = 10;$/;"	d
base	obj/user/exit.asm	/^            base = 16;$/;"	d
base	obj/user/exit.asm	/^            base = 8;$/;"	d
base	obj/user/exit.asm	/^        base = 10;$/;"	d
base	obj/user/faultread.asm	/^            base = 10;$/;"	d
base	obj/user/faultread.asm	/^            base = 16;$/;"	d
base	obj/user/faultread.asm	/^            base = 8;$/;"	d
base	obj/user/faultread.asm	/^        base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^        base = 10;$/;"	d
base	obj/user/forktest.asm	/^            base = 10;$/;"	d
base	obj/user/forktest.asm	/^            base = 16;$/;"	d
base	obj/user/forktest.asm	/^            base = 8;$/;"	d
base	obj/user/forktest.asm	/^        base = 10;$/;"	d
base	obj/user/forktree.asm	/^            base = 10;$/;"	d
base	obj/user/forktree.asm	/^            base = 16;$/;"	d
base	obj/user/forktree.asm	/^            base = 8;$/;"	d
base	obj/user/forktree.asm	/^        base = 10;$/;"	d
base	obj/user/hello.asm	/^            base = 10;$/;"	d
base	obj/user/hello.asm	/^            base = 16;$/;"	d
base	obj/user/hello.asm	/^            base = 8;$/;"	d
base	obj/user/hello.asm	/^        base = 10;$/;"	d
base	obj/user/matrix.asm	/^            base = 10;$/;"	d
base	obj/user/matrix.asm	/^            base = 16;$/;"	d
base	obj/user/matrix.asm	/^            base = 8;$/;"	d
base	obj/user/matrix.asm	/^        base = 10;$/;"	d
base	obj/user/pgdir.asm	/^            base = 10;$/;"	d
base	obj/user/pgdir.asm	/^            base = 16;$/;"	d
base	obj/user/pgdir.asm	/^            base = 8;$/;"	d
base	obj/user/pgdir.asm	/^        base = 10;$/;"	d
base	obj/user/priority.asm	/^            base = 10;$/;"	d
base	obj/user/priority.asm	/^            base = 16;$/;"	d
base	obj/user/priority.asm	/^            base = 8;$/;"	d
base	obj/user/priority.asm	/^        base = 10;$/;"	d
base	obj/user/softint.asm	/^            base = 10;$/;"	d
base	obj/user/softint.asm	/^            base = 16;$/;"	d
base	obj/user/softint.asm	/^            base = 8;$/;"	d
base	obj/user/softint.asm	/^        base = 10;$/;"	d
base	obj/user/spin.asm	/^            base = 10;$/;"	d
base	obj/user/spin.asm	/^            base = 16;$/;"	d
base	obj/user/spin.asm	/^            base = 8;$/;"	d
base	obj/user/spin.asm	/^        base = 10;$/;"	d
base	obj/user/testbss.asm	/^            base = 10;$/;"	d
base	obj/user/testbss.asm	/^            base = 16;$/;"	d
base	obj/user/testbss.asm	/^            base = 8;$/;"	d
base	obj/user/testbss.asm	/^        base = 10;$/;"	d
base	obj/user/waitkill.asm	/^            base = 10;$/;"	d
base	obj/user/waitkill.asm	/^            base = 16;$/;"	d
base	obj/user/waitkill.asm	/^            base = 8;$/;"	d
base	obj/user/waitkill.asm	/^        base = 10;$/;"	d
base	obj/user/yield.asm	/^            base = 10;$/;"	d
base	obj/user/yield.asm	/^            base = 16;$/;"	d
base	obj/user/yield.asm	/^            base = 8;$/;"	d
base	obj/user/yield.asm	/^        base = 10;$/;"	d
basic_check	kern/mm/default_pmm.c	/^basic_check(void) {$/;"	f	file:
bb	obj/kernel.asm	/^	bb = slob_alloc(sizeof(bigblock_t), gfp, 0);$/;"	d
begin	obj/kernel.asm	/^                begin = ROUNDUP(begin, PGSIZE);$/;"	d
begin	obj/kernel.asm	/^                begin = freemem;$/;"	d
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
bigblock	kern/mm/kmalloc.c	/^struct bigblock {$/;"	s	file:
bigblock_t	kern/mm/kmalloc.c	/^typedef struct bigblock bigblock_t;$/;"	t	typeref:struct:bigblock	file:
bigblocks	kern/mm/kmalloc.c	/^static bigblock_t *bigblocks;$/;"	v	file:
bigblocks	obj/kernel.asm	/^		bigblocks = bb;$/;"	d
bool	libs/defs.h	/^typedef int bool;$/;"	t
bool	obj/kernel.asm	/^bool copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable);$/;"	l
bool	obj/kernel.asm	/^bool copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len);$/;"	l
bool	obj/kernel.asm	/^bool user_mem_check(struct mm_struct *mm, uintptr_t start, size_t len, bool write);$/;"	l
bool	obj/kernel.asm	/^bool$/;"	l
boot_alloc_page	kern/mm/pmm.c	/^boot_alloc_page(void) {$/;"	f	file:
boot_cr3	kern/mm/pmm.c	/^uintptr_t boot_cr3;$/;"	v
boot_cr3	obj/kernel.asm	/^    boot_cr3 = PADDR(boot_pgdir);$/;"	d
boot_map_segment	kern/mm/pmm.c	/^boot_map_segment(pde_t *pgdir, uintptr_t la, size_t size, uintptr_t pa, uint32_t perm) {$/;"	f	file:
boot_pgdir	kern/mm/pmm.c	/^pde_t *boot_pgdir = NULL;$/;"	v
boot_pgdir	obj/kernel.asm	/^    boot_pgdir = boot_alloc_page();$/;"	d
bootblock	Makefile	/^bootblock = $(call totarget,bootblock)$/;"	m
bootfiles	Makefile	/^bootfiles = $(call listf_cc,boot)$/;"	m
bootmain	boot/bootmain.c	/^bootmain(void) {$/;"	f
bootstack	kern/init/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/init/entry.S	/^bootstacktop:$/;"	l
breakpoint	libs/x86.h	/^breakpoint(void) {$/;"	f
buf	kern/driver/console.c	/^    uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon5	file:
buf	kern/libs/readline.c	/^static char buf[BUFSIZE];$/;"	v	file:
buf	libs/printfmt.c	/^    char *buf;          \/\/ address pointer points to the first unused memory$/;"	m	struct:sprintbuf	file:
build_run	tools/grade.sh	/^build_run() {$/;"	f
c	obj/kernel.asm	/^            c = cons.buf[cons.rpos ++];$/;"	d
c	obj/kernel.asm	/^        c = '\\b';$/;"	d
c	obj/kernel.asm	/^        c = cons_getc();$/;"	d
c	obj/kernel.asm	/^        c = getchar();$/;"	d
c	obj/kernel.asm	/^    c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c0100000	obj/kernel.asm	/^c0100000 <kern_entry>:$/;"	l
c0100000	obj/kernel.asm	/^c0100000:	0f 01 15 18 c0 12 00 	lgdtl  0x12c018$/;"	l
c0100007	obj/kernel.asm	/^c0100007:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c010000c	obj/kernel.asm	/^c010000c:	8e d8                	mov    %eax,%ds$/;"	l
c010000e	obj/kernel.asm	/^c010000e:	8e c0                	mov    %eax,%es$/;"	l
c0100010	obj/kernel.asm	/^c0100010:	8e d0                	mov    %eax,%ss$/;"	l
c0100012	obj/kernel.asm	/^c0100012:	ea 19 00 10 c0 08 00 	ljmp   $0x8,$0xc0100019$/;"	l
c0100019	obj/kernel.asm	/^c0100019 <relocated>:$/;"	l
c0100019	obj/kernel.asm	/^c0100019:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
c010001e	obj/kernel.asm	/^c010001e:	bc 00 c0 12 c0       	mov    $0xc012c000,%esp$/;"	l
c0100023	obj/kernel.asm	/^c0100023:	e8 02 00 00 00       	call   c010002a <kern_init>$/;"	l
c0100028	obj/kernel.asm	/^c0100028 <spin>:$/;"	l
c0100028	obj/kernel.asm	/^c0100028:	eb fe                	jmp    c0100028 <spin>$/;"	l
c010002a	obj/kernel.asm	/^c010002a <kern_init>:$/;"	l
c010002a	obj/kernel.asm	/^c010002a:	55                   	push   %ebp$/;"	l
c010002b	obj/kernel.asm	/^c010002b:	89 e5                	mov    %esp,%ebp$/;"	l
c010002d	obj/kernel.asm	/^c010002d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100030	obj/kernel.asm	/^c0100030:	ba 00 10 1b c0       	mov    $0xc01b1000,%edx$/;"	l
c0100035	obj/kernel.asm	/^c0100035:	b8 3c dd 1a c0       	mov    $0xc01add3c,%eax$/;"	l
c010003a	obj/kernel.asm	/^c010003a:	29 c2                	sub    %eax,%edx$/;"	l
c010003c	obj/kernel.asm	/^c010003c:	89 d0                	mov    %edx,%eax$/;"	l
c010003e	obj/kernel.asm	/^c010003e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100041	obj/kernel.asm	/^c0100041:	50                   	push   %eax$/;"	l
c0100042	obj/kernel.asm	/^c0100042:	6a 00                	push   $0x0$/;"	l
c0100044	obj/kernel.asm	/^c0100044:	68 3c dd 1a c0       	push   $0xc01add3c$/;"	l
c0100049	obj/kernel.asm	/^c0100049:	e8 f5 b1 00 00       	call   c010b243 <memset>$/;"	l
c010004e	obj/kernel.asm	/^c010004e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100051	obj/kernel.asm	/^c0100051:	e8 9c 1d 00 00       	call   c0101df2 <cons_init>$/;"	l
c0100056	obj/kernel.asm	/^c0100056:	c7 45 f4 00 bb 10 c0 	movl   $0xc010bb00,-0xc(%ebp)$/;"	l
c010005d	obj/kernel.asm	/^c010005d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100060	obj/kernel.asm	/^c0100060:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100063	obj/kernel.asm	/^c0100063:	68 1c bb 10 c0       	push   $0xc010bb1c$/;"	l
c0100068	obj/kernel.asm	/^c0100068:	e8 0d 02 00 00       	call   c010027a <cprintf>$/;"	l
c010006d	obj/kernel.asm	/^c010006d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100070	obj/kernel.asm	/^c0100070:	e8 62 09 00 00       	call   c01009d7 <print_kerninfo>$/;"	l
c0100075	obj/kernel.asm	/^c0100075:	e8 8d 00 00 00       	call   c0100107 <grade_backtrace>$/;"	l
c010007a	obj/kernel.asm	/^c010007a:	e8 b6 3e 00 00       	call   c0103f35 <pmm_init>$/;"	l
c010007f	obj/kernel.asm	/^c010007f:	e8 dc 1e 00 00       	call   c0101f60 <pic_init>$/;"	l
c0100084	obj/kernel.asm	/^c0100084:	e8 39 20 00 00       	call   c01020c2 <idt_init>$/;"	l
c0100089	obj/kernel.asm	/^c0100089:	e8 25 59 00 00       	call   c01059b3 <vmm_init>$/;"	l
c010008e	obj/kernel.asm	/^c010008e:	e8 c3 a5 00 00       	call   c010a656 <sched_init>$/;"	l
c0100093	obj/kernel.asm	/^c0100093:	e8 fd a2 00 00       	call   c010a395 <proc_init>$/;"	l
c0100098	obj/kernel.asm	/^c0100098:	e8 38 0d 00 00       	call   c0100dd5 <ide_init>$/;"	l
c010009d	obj/kernel.asm	/^c010009d:	e8 06 63 00 00       	call   c01063a8 <swap_init>$/;"	l
c01000a2	obj/kernel.asm	/^c01000a2:	e8 04 15 00 00       	call   c01015ab <clock_init>$/;"	l
c01000a7	obj/kernel.asm	/^c01000a7:	e8 f0 1f 00 00       	call   c010209c <intr_enable>$/;"	l
c01000ac	obj/kernel.asm	/^c01000ac:	e8 80 a4 00 00       	call   c010a531 <cpu_idle>$/;"	l
c01000b1	obj/kernel.asm	/^c01000b1 <grade_backtrace2>:$/;"	l
c01000b1	obj/kernel.asm	/^c01000b1:	55                   	push   %ebp$/;"	l
c01000b2	obj/kernel.asm	/^c01000b2:	89 e5                	mov    %esp,%ebp$/;"	l
c01000b4	obj/kernel.asm	/^c01000b4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01000b7	obj/kernel.asm	/^c01000b7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01000ba	obj/kernel.asm	/^c01000ba:	6a 00                	push   $0x0$/;"	l
c01000bc	obj/kernel.asm	/^c01000bc:	6a 00                	push   $0x0$/;"	l
c01000be	obj/kernel.asm	/^c01000be:	6a 00                	push   $0x0$/;"	l
c01000c0	obj/kernel.asm	/^c01000c0:	e8 a4 0c 00 00       	call   c0100d69 <mon_backtrace>$/;"	l
c01000c5	obj/kernel.asm	/^c01000c5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01000c8	obj/kernel.asm	/^c01000c8:	c9                   	leave  $/;"	l
c01000c9	obj/kernel.asm	/^c01000c9:	c3                   	ret    $/;"	l
c01000ca	obj/kernel.asm	/^c01000ca <grade_backtrace1>:$/;"	l
c01000ca	obj/kernel.asm	/^c01000ca:	55                   	push   %ebp$/;"	l
c01000cb	obj/kernel.asm	/^c01000cb:	89 e5                	mov    %esp,%ebp$/;"	l
c01000cd	obj/kernel.asm	/^c01000cd:	53                   	push   %ebx$/;"	l
c01000ce	obj/kernel.asm	/^c01000ce:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01000d1	obj/kernel.asm	/^c01000d1:	8d 4d 0c             	lea    0xc(%ebp),%ecx$/;"	l
c01000d4	obj/kernel.asm	/^c01000d4:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01000d7	obj/kernel.asm	/^c01000d7:	8d 5d 08             	lea    0x8(%ebp),%ebx$/;"	l
c01000da	obj/kernel.asm	/^c01000da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01000dd	obj/kernel.asm	/^c01000dd:	51                   	push   %ecx$/;"	l
c01000de	obj/kernel.asm	/^c01000de:	52                   	push   %edx$/;"	l
c01000df	obj/kernel.asm	/^c01000df:	53                   	push   %ebx$/;"	l
c01000e0	obj/kernel.asm	/^c01000e0:	50                   	push   %eax$/;"	l
c01000e1	obj/kernel.asm	/^c01000e1:	e8 cb ff ff ff       	call   c01000b1 <grade_backtrace2>$/;"	l
c01000e6	obj/kernel.asm	/^c01000e6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01000e9	obj/kernel.asm	/^c01000e9:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c01000ec	obj/kernel.asm	/^c01000ec:	c9                   	leave  $/;"	l
c01000ed	obj/kernel.asm	/^c01000ed:	c3                   	ret    $/;"	l
c01000ee	obj/kernel.asm	/^c01000ee <grade_backtrace0>:$/;"	l
c01000ee	obj/kernel.asm	/^c01000ee:	55                   	push   %ebp$/;"	l
c01000ef	obj/kernel.asm	/^c01000ef:	89 e5                	mov    %esp,%ebp$/;"	l
c01000f1	obj/kernel.asm	/^c01000f1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01000f4	obj/kernel.asm	/^c01000f4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01000f7	obj/kernel.asm	/^c01000f7:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01000fa	obj/kernel.asm	/^c01000fa:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01000fd	obj/kernel.asm	/^c01000fd:	e8 c8 ff ff ff       	call   c01000ca <grade_backtrace1>$/;"	l
c0100102	obj/kernel.asm	/^c0100102:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100105	obj/kernel.asm	/^c0100105:	c9                   	leave  $/;"	l
c0100106	obj/kernel.asm	/^c0100106:	c3                   	ret    $/;"	l
c0100107	obj/kernel.asm	/^c0100107 <grade_backtrace>:$/;"	l
c0100107	obj/kernel.asm	/^c0100107:	55                   	push   %ebp$/;"	l
c0100108	obj/kernel.asm	/^c0100108:	89 e5                	mov    %esp,%ebp$/;"	l
c010010a	obj/kernel.asm	/^c010010a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010010d	obj/kernel.asm	/^c010010d:	b8 2a 00 10 c0       	mov    $0xc010002a,%eax$/;"	l
c0100112	obj/kernel.asm	/^c0100112:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100115	obj/kernel.asm	/^c0100115:	68 00 00 ff ff       	push   $0xffff0000$/;"	l
c010011a	obj/kernel.asm	/^c010011a:	50                   	push   %eax$/;"	l
c010011b	obj/kernel.asm	/^c010011b:	6a 00                	push   $0x0$/;"	l
c010011d	obj/kernel.asm	/^c010011d:	e8 cc ff ff ff       	call   c01000ee <grade_backtrace0>$/;"	l
c0100122	obj/kernel.asm	/^c0100122:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100125	obj/kernel.asm	/^c0100125:	c9                   	leave  $/;"	l
c0100126	obj/kernel.asm	/^c0100126:	c3                   	ret    $/;"	l
c0100127	obj/kernel.asm	/^c0100127 <lab1_print_cur_status>:$/;"	l
c0100127	obj/kernel.asm	/^c0100127:	55                   	push   %ebp$/;"	l
c0100128	obj/kernel.asm	/^c0100128:	89 e5                	mov    %esp,%ebp$/;"	l
c010012a	obj/kernel.asm	/^c010012a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010012d	obj/kernel.asm	/^c010012d:	8c 4d f6             	mov    %cs,-0xa(%ebp)$/;"	l
c0100130	obj/kernel.asm	/^c0100130:	8c 5d f4             	mov    %ds,-0xc(%ebp)$/;"	l
c0100133	obj/kernel.asm	/^c0100133:	8c 45 f2             	mov    %es,-0xe(%ebp)$/;"	l
c0100136	obj/kernel.asm	/^c0100136:	8c 55 f0             	mov    %ss,-0x10(%ebp)$/;"	l
c0100139	obj/kernel.asm	/^c0100139:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010013d	obj/kernel.asm	/^c010013d:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100140	obj/kernel.asm	/^c0100140:	83 e0 03             	and    $0x3,%eax$/;"	l
c0100143	obj/kernel.asm	/^c0100143:	89 c2                	mov    %eax,%edx$/;"	l
c0100145	obj/kernel.asm	/^c0100145:	a1 40 dd 1a c0       	mov    0xc01add40,%eax$/;"	l
c010014a	obj/kernel.asm	/^c010014a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010014d	obj/kernel.asm	/^c010014d:	52                   	push   %edx$/;"	l
c010014e	obj/kernel.asm	/^c010014e:	50                   	push   %eax$/;"	l
c010014f	obj/kernel.asm	/^c010014f:	68 21 bb 10 c0       	push   $0xc010bb21$/;"	l
c0100154	obj/kernel.asm	/^c0100154:	e8 21 01 00 00       	call   c010027a <cprintf>$/;"	l
c0100159	obj/kernel.asm	/^c0100159:	83 c4 10             	add    $0x10,%esp$/;"	l
c010015c	obj/kernel.asm	/^c010015c:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100160	obj/kernel.asm	/^c0100160:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c0100163	obj/kernel.asm	/^c0100163:	a1 40 dd 1a c0       	mov    0xc01add40,%eax$/;"	l
c0100168	obj/kernel.asm	/^c0100168:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010016b	obj/kernel.asm	/^c010016b:	52                   	push   %edx$/;"	l
c010016c	obj/kernel.asm	/^c010016c:	50                   	push   %eax$/;"	l
c010016d	obj/kernel.asm	/^c010016d:	68 2f bb 10 c0       	push   $0xc010bb2f$/;"	l
c0100172	obj/kernel.asm	/^c0100172:	e8 03 01 00 00       	call   c010027a <cprintf>$/;"	l
c0100177	obj/kernel.asm	/^c0100177:	83 c4 10             	add    $0x10,%esp$/;"	l
c010017a	obj/kernel.asm	/^c010017a:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c010017e	obj/kernel.asm	/^c010017e:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c0100181	obj/kernel.asm	/^c0100181:	a1 40 dd 1a c0       	mov    0xc01add40,%eax$/;"	l
c0100186	obj/kernel.asm	/^c0100186:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100189	obj/kernel.asm	/^c0100189:	52                   	push   %edx$/;"	l
c010018a	obj/kernel.asm	/^c010018a:	50                   	push   %eax$/;"	l
c010018b	obj/kernel.asm	/^c010018b:	68 3d bb 10 c0       	push   $0xc010bb3d$/;"	l
c0100190	obj/kernel.asm	/^c0100190:	e8 e5 00 00 00       	call   c010027a <cprintf>$/;"	l
c0100195	obj/kernel.asm	/^c0100195:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100198	obj/kernel.asm	/^c0100198:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010019c	obj/kernel.asm	/^c010019c:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c010019f	obj/kernel.asm	/^c010019f:	a1 40 dd 1a c0       	mov    0xc01add40,%eax$/;"	l
c01001a4	obj/kernel.asm	/^c01001a4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01001a7	obj/kernel.asm	/^c01001a7:	52                   	push   %edx$/;"	l
c01001a8	obj/kernel.asm	/^c01001a8:	50                   	push   %eax$/;"	l
c01001a9	obj/kernel.asm	/^c01001a9:	68 4b bb 10 c0       	push   $0xc010bb4b$/;"	l
c01001ae	obj/kernel.asm	/^c01001ae:	e8 c7 00 00 00       	call   c010027a <cprintf>$/;"	l
c01001b3	obj/kernel.asm	/^c01001b3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01001b6	obj/kernel.asm	/^c01001b6:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c01001ba	obj/kernel.asm	/^c01001ba:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01001bd	obj/kernel.asm	/^c01001bd:	a1 40 dd 1a c0       	mov    0xc01add40,%eax$/;"	l
c01001c2	obj/kernel.asm	/^c01001c2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01001c5	obj/kernel.asm	/^c01001c5:	52                   	push   %edx$/;"	l
c01001c6	obj/kernel.asm	/^c01001c6:	50                   	push   %eax$/;"	l
c01001c7	obj/kernel.asm	/^c01001c7:	68 59 bb 10 c0       	push   $0xc010bb59$/;"	l
c01001cc	obj/kernel.asm	/^c01001cc:	e8 a9 00 00 00       	call   c010027a <cprintf>$/;"	l
c01001d1	obj/kernel.asm	/^c01001d1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01001d4	obj/kernel.asm	/^c01001d4:	a1 40 dd 1a c0       	mov    0xc01add40,%eax$/;"	l
c01001d9	obj/kernel.asm	/^c01001d9:	83 c0 01             	add    $0x1,%eax$/;"	l
c01001dc	obj/kernel.asm	/^c01001dc:	a3 40 dd 1a c0       	mov    %eax,0xc01add40$/;"	l
c01001e1	obj/kernel.asm	/^c01001e1:	c9                   	leave  $/;"	l
c01001e2	obj/kernel.asm	/^c01001e2:	c3                   	ret    $/;"	l
c01001e3	obj/kernel.asm	/^c01001e3 <lab1_switch_to_user>:$/;"	l
c01001e3	obj/kernel.asm	/^c01001e3:	55                   	push   %ebp$/;"	l
c01001e4	obj/kernel.asm	/^c01001e4:	89 e5                	mov    %esp,%ebp$/;"	l
c01001e6	obj/kernel.asm	/^c01001e6:	5d                   	pop    %ebp$/;"	l
c01001e7	obj/kernel.asm	/^c01001e7:	c3                   	ret    $/;"	l
c01001e8	obj/kernel.asm	/^c01001e8 <lab1_switch_to_kernel>:$/;"	l
c01001e8	obj/kernel.asm	/^c01001e8:	55                   	push   %ebp$/;"	l
c01001e9	obj/kernel.asm	/^c01001e9:	89 e5                	mov    %esp,%ebp$/;"	l
c01001eb	obj/kernel.asm	/^c01001eb:	5d                   	pop    %ebp$/;"	l
c01001ec	obj/kernel.asm	/^c01001ec:	c3                   	ret    $/;"	l
c01001ed	obj/kernel.asm	/^c01001ed <lab1_switch_test>:$/;"	l
c01001ed	obj/kernel.asm	/^c01001ed:	55                   	push   %ebp$/;"	l
c01001ee	obj/kernel.asm	/^c01001ee:	89 e5                	mov    %esp,%ebp$/;"	l
c01001f0	obj/kernel.asm	/^c01001f0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01001f3	obj/kernel.asm	/^c01001f3:	e8 2f ff ff ff       	call   c0100127 <lab1_print_cur_status>$/;"	l
c01001f8	obj/kernel.asm	/^c01001f8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01001fb	obj/kernel.asm	/^c01001fb:	68 68 bb 10 c0       	push   $0xc010bb68$/;"	l
c0100200	obj/kernel.asm	/^c0100200:	e8 75 00 00 00       	call   c010027a <cprintf>$/;"	l
c0100205	obj/kernel.asm	/^c0100205:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100208	obj/kernel.asm	/^c0100208:	e8 d6 ff ff ff       	call   c01001e3 <lab1_switch_to_user>$/;"	l
c010020d	obj/kernel.asm	/^c010020d:	e8 15 ff ff ff       	call   c0100127 <lab1_print_cur_status>$/;"	l
c0100212	obj/kernel.asm	/^c0100212:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100215	obj/kernel.asm	/^c0100215:	68 88 bb 10 c0       	push   $0xc010bb88$/;"	l
c010021a	obj/kernel.asm	/^c010021a:	e8 5b 00 00 00       	call   c010027a <cprintf>$/;"	l
c010021f	obj/kernel.asm	/^c010021f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100222	obj/kernel.asm	/^c0100222:	e8 c1 ff ff ff       	call   c01001e8 <lab1_switch_to_kernel>$/;"	l
c0100227	obj/kernel.asm	/^c0100227:	e8 fb fe ff ff       	call   c0100127 <lab1_print_cur_status>$/;"	l
c010022c	obj/kernel.asm	/^c010022c:	c9                   	leave  $/;"	l
c010022d	obj/kernel.asm	/^c010022d:	c3                   	ret    $/;"	l
c010022e	obj/kernel.asm	/^c010022e <cputch>:$/;"	l
c010022e	obj/kernel.asm	/^c010022e:	55                   	push   %ebp$/;"	l
c010022f	obj/kernel.asm	/^c010022f:	89 e5                	mov    %esp,%ebp$/;"	l
c0100231	obj/kernel.asm	/^c0100231:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100234	obj/kernel.asm	/^c0100234:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100237	obj/kernel.asm	/^c0100237:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010023a	obj/kernel.asm	/^c010023a:	e8 e3 1b 00 00       	call   c0101e22 <cons_putc>$/;"	l
c010023f	obj/kernel.asm	/^c010023f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100242	obj/kernel.asm	/^c0100242:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100245	obj/kernel.asm	/^c0100245:	8b 00                	mov    (%eax),%eax$/;"	l
c0100247	obj/kernel.asm	/^c0100247:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010024a	obj/kernel.asm	/^c010024a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010024d	obj/kernel.asm	/^c010024d:	89 10                	mov    %edx,(%eax)$/;"	l
c010024f	obj/kernel.asm	/^c010024f:	c9                   	leave  $/;"	l
c0100250	obj/kernel.asm	/^c0100250:	c3                   	ret    $/;"	l
c0100251	obj/kernel.asm	/^c0100251 <vcprintf>:$/;"	l
c0100251	obj/kernel.asm	/^c0100251:	55                   	push   %ebp$/;"	l
c0100252	obj/kernel.asm	/^c0100252:	89 e5                	mov    %esp,%ebp$/;"	l
c0100254	obj/kernel.asm	/^c0100254:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100257	obj/kernel.asm	/^c0100257:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010025e	obj/kernel.asm	/^c010025e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0100261	obj/kernel.asm	/^c0100261:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100264	obj/kernel.asm	/^c0100264:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c0100267	obj/kernel.asm	/^c0100267:	50                   	push   %eax$/;"	l
c0100268	obj/kernel.asm	/^c0100268:	68 2e 02 10 c0       	push   $0xc010022e$/;"	l
c010026d	obj/kernel.asm	/^c010026d:	e8 05 b3 00 00       	call   c010b577 <vprintfmt>$/;"	l
c0100272	obj/kernel.asm	/^c0100272:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100275	obj/kernel.asm	/^c0100275:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100278	obj/kernel.asm	/^c0100278:	c9                   	leave  $/;"	l
c0100279	obj/kernel.asm	/^c0100279:	c3                   	ret    $/;"	l
c010027a	obj/kernel.asm	/^c010027a <cprintf>:$/;"	l
c010027a	obj/kernel.asm	/^c010027a:	55                   	push   %ebp$/;"	l
c010027b	obj/kernel.asm	/^c010027b:	89 e5                	mov    %esp,%ebp$/;"	l
c010027d	obj/kernel.asm	/^c010027d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100280	obj/kernel.asm	/^c0100280:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
c0100283	obj/kernel.asm	/^c0100283:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100286	obj/kernel.asm	/^c0100286:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100289	obj/kernel.asm	/^c0100289:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010028c	obj/kernel.asm	/^c010028c:	50                   	push   %eax$/;"	l
c010028d	obj/kernel.asm	/^c010028d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100290	obj/kernel.asm	/^c0100290:	e8 bc ff ff ff       	call   c0100251 <vcprintf>$/;"	l
c0100295	obj/kernel.asm	/^c0100295:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100298	obj/kernel.asm	/^c0100298:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010029b	obj/kernel.asm	/^c010029b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010029e	obj/kernel.asm	/^c010029e:	c9                   	leave  $/;"	l
c010029f	obj/kernel.asm	/^c010029f:	c3                   	ret    $/;"	l
c01002a0	obj/kernel.asm	/^c01002a0 <cputchar>:$/;"	l
c01002a0	obj/kernel.asm	/^c01002a0:	55                   	push   %ebp$/;"	l
c01002a1	obj/kernel.asm	/^c01002a1:	89 e5                	mov    %esp,%ebp$/;"	l
c01002a3	obj/kernel.asm	/^c01002a3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01002a6	obj/kernel.asm	/^c01002a6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01002a9	obj/kernel.asm	/^c01002a9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01002ac	obj/kernel.asm	/^c01002ac:	e8 71 1b 00 00       	call   c0101e22 <cons_putc>$/;"	l
c01002b1	obj/kernel.asm	/^c01002b1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01002b4	obj/kernel.asm	/^c01002b4:	c9                   	leave  $/;"	l
c01002b5	obj/kernel.asm	/^c01002b5:	c3                   	ret    $/;"	l
c01002b6	obj/kernel.asm	/^c01002b6 <cputs>:$/;"	l
c01002b6	obj/kernel.asm	/^c01002b6:	55                   	push   %ebp$/;"	l
c01002b7	obj/kernel.asm	/^c01002b7:	89 e5                	mov    %esp,%ebp$/;"	l
c01002b9	obj/kernel.asm	/^c01002b9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01002bc	obj/kernel.asm	/^c01002bc:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01002c3	obj/kernel.asm	/^c01002c3:	eb 14                	jmp    c01002d9 <cputs+0x23>$/;"	l
c01002c5	obj/kernel.asm	/^c01002c5:	0f be 45 f7          	movsbl -0x9(%ebp),%eax$/;"	l
c01002c9	obj/kernel.asm	/^c01002c9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01002cc	obj/kernel.asm	/^c01002cc:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c01002cf	obj/kernel.asm	/^c01002cf:	52                   	push   %edx$/;"	l
c01002d0	obj/kernel.asm	/^c01002d0:	50                   	push   %eax$/;"	l
c01002d1	obj/kernel.asm	/^c01002d1:	e8 58 ff ff ff       	call   c010022e <cputch>$/;"	l
c01002d6	obj/kernel.asm	/^c01002d6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01002d9	obj/kernel.asm	/^c01002d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01002dc	obj/kernel.asm	/^c01002dc:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01002df	obj/kernel.asm	/^c01002df:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c01002e2	obj/kernel.asm	/^c01002e2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01002e5	obj/kernel.asm	/^c01002e5:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c01002e8	obj/kernel.asm	/^c01002e8:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)$/;"	l
c01002ec	obj/kernel.asm	/^c01002ec:	75 d7                	jne    c01002c5 <cputs+0xf>$/;"	l
c01002ee	obj/kernel.asm	/^c01002ee:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01002f1	obj/kernel.asm	/^c01002f1:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c01002f4	obj/kernel.asm	/^c01002f4:	50                   	push   %eax$/;"	l
c01002f5	obj/kernel.asm	/^c01002f5:	6a 0a                	push   $0xa$/;"	l
c01002f7	obj/kernel.asm	/^c01002f7:	e8 32 ff ff ff       	call   c010022e <cputch>$/;"	l
c01002fc	obj/kernel.asm	/^c01002fc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01002ff	obj/kernel.asm	/^c01002ff:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100302	obj/kernel.asm	/^c0100302:	c9                   	leave  $/;"	l
c0100303	obj/kernel.asm	/^c0100303:	c3                   	ret    $/;"	l
c0100304	obj/kernel.asm	/^c0100304 <getchar>:$/;"	l
c0100304	obj/kernel.asm	/^c0100304:	55                   	push   %ebp$/;"	l
c0100305	obj/kernel.asm	/^c0100305:	89 e5                	mov    %esp,%ebp$/;"	l
c0100307	obj/kernel.asm	/^c0100307:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010030a	obj/kernel.asm	/^c010030a:	e8 5b 1b 00 00       	call   c0101e6a <cons_getc>$/;"	l
c010030f	obj/kernel.asm	/^c010030f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100312	obj/kernel.asm	/^c0100312:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100316	obj/kernel.asm	/^c0100316:	74 f2                	je     c010030a <getchar+0x6>$/;"	l
c0100318	obj/kernel.asm	/^c0100318:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010031b	obj/kernel.asm	/^c010031b:	c9                   	leave  $/;"	l
c010031c	obj/kernel.asm	/^c010031c:	c3                   	ret    $/;"	l
c010031d	obj/kernel.asm	/^c010031d <readline>:$/;"	l
c010031d	obj/kernel.asm	/^c010031d:	55                   	push   %ebp$/;"	l
c010031e	obj/kernel.asm	/^c010031e:	89 e5                	mov    %esp,%ebp$/;"	l
c0100320	obj/kernel.asm	/^c0100320:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100323	obj/kernel.asm	/^c0100323:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100327	obj/kernel.asm	/^c0100327:	74 13                	je     c010033c <readline+0x1f>$/;"	l
c0100329	obj/kernel.asm	/^c0100329:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010032c	obj/kernel.asm	/^c010032c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010032f	obj/kernel.asm	/^c010032f:	68 a7 bb 10 c0       	push   $0xc010bba7$/;"	l
c0100334	obj/kernel.asm	/^c0100334:	e8 41 ff ff ff       	call   c010027a <cprintf>$/;"	l
c0100339	obj/kernel.asm	/^c0100339:	83 c4 10             	add    $0x10,%esp$/;"	l
c010033c	obj/kernel.asm	/^c010033c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100343	obj/kernel.asm	/^c0100343:	e8 bc ff ff ff       	call   c0100304 <getchar>$/;"	l
c0100348	obj/kernel.asm	/^c0100348:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010034b	obj/kernel.asm	/^c010034b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010034f	obj/kernel.asm	/^c010034f:	79 0a                	jns    c010035b <readline+0x3e>$/;"	l
c0100351	obj/kernel.asm	/^c0100351:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100356	obj/kernel.asm	/^c0100356:	e9 82 00 00 00       	jmp    c01003dd <readline+0xc0>$/;"	l
c010035b	obj/kernel.asm	/^c010035b:	83 7d f0 1f          	cmpl   $0x1f,-0x10(%ebp)$/;"	l
c010035f	obj/kernel.asm	/^c010035f:	7e 2b                	jle    c010038c <readline+0x6f>$/;"	l
c0100361	obj/kernel.asm	/^c0100361:	81 7d f4 fe 03 00 00 	cmpl   $0x3fe,-0xc(%ebp)$/;"	l
c0100368	obj/kernel.asm	/^c0100368:	7f 22                	jg     c010038c <readline+0x6f>$/;"	l
c010036a	obj/kernel.asm	/^c010036a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010036d	obj/kernel.asm	/^c010036d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0100370	obj/kernel.asm	/^c0100370:	e8 2b ff ff ff       	call   c01002a0 <cputchar>$/;"	l
c0100375	obj/kernel.asm	/^c0100375:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100378	obj/kernel.asm	/^c0100378:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010037b	obj/kernel.asm	/^c010037b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010037e	obj/kernel.asm	/^c010037e:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0100381	obj/kernel.asm	/^c0100381:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100384	obj/kernel.asm	/^c0100384:	88 90 80 dd 1a c0    	mov    %dl,-0x3fe52280(%eax)$/;"	l
c010038a	obj/kernel.asm	/^c010038a:	eb 4c                	jmp    c01003d8 <readline+0xbb>$/;"	l
c010038c	obj/kernel.asm	/^c010038c:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)$/;"	l
c0100390	obj/kernel.asm	/^c0100390:	75 1a                	jne    c01003ac <readline+0x8f>$/;"	l
c0100392	obj/kernel.asm	/^c0100392:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100396	obj/kernel.asm	/^c0100396:	7e 14                	jle    c01003ac <readline+0x8f>$/;"	l
c0100398	obj/kernel.asm	/^c0100398:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010039b	obj/kernel.asm	/^c010039b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010039e	obj/kernel.asm	/^c010039e:	e8 fd fe ff ff       	call   c01002a0 <cputchar>$/;"	l
c01003a3	obj/kernel.asm	/^c01003a3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01003a6	obj/kernel.asm	/^c01003a6:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c01003aa	obj/kernel.asm	/^c01003aa:	eb 2c                	jmp    c01003d8 <readline+0xbb>$/;"	l
c01003ac	obj/kernel.asm	/^c01003ac:	83 7d f0 0a          	cmpl   $0xa,-0x10(%ebp)$/;"	l
c01003b0	obj/kernel.asm	/^c01003b0:	74 06                	je     c01003b8 <readline+0x9b>$/;"	l
c01003b2	obj/kernel.asm	/^c01003b2:	83 7d f0 0d          	cmpl   $0xd,-0x10(%ebp)$/;"	l
c01003b6	obj/kernel.asm	/^c01003b6:	75 20                	jne    c01003d8 <readline+0xbb>$/;"	l
c01003b8	obj/kernel.asm	/^c01003b8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01003bb	obj/kernel.asm	/^c01003bb:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01003be	obj/kernel.asm	/^c01003be:	e8 dd fe ff ff       	call   c01002a0 <cputchar>$/;"	l
c01003c3	obj/kernel.asm	/^c01003c3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01003c6	obj/kernel.asm	/^c01003c6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01003c9	obj/kernel.asm	/^c01003c9:	05 80 dd 1a c0       	add    $0xc01add80,%eax$/;"	l
c01003ce	obj/kernel.asm	/^c01003ce:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01003d1	obj/kernel.asm	/^c01003d1:	b8 80 dd 1a c0       	mov    $0xc01add80,%eax$/;"	l
c01003d6	obj/kernel.asm	/^c01003d6:	eb 05                	jmp    c01003dd <readline+0xc0>$/;"	l
c01003d8	obj/kernel.asm	/^c01003d8:	e9 66 ff ff ff       	jmp    c0100343 <readline+0x26>$/;"	l
c01003dd	obj/kernel.asm	/^c01003dd:	c9                   	leave  $/;"	l
c01003de	obj/kernel.asm	/^c01003de:	c3                   	ret    $/;"	l
c01003df	obj/kernel.asm	/^c01003df <__panic>:$/;"	l
c01003df	obj/kernel.asm	/^c01003df:	55                   	push   %ebp$/;"	l
c01003e0	obj/kernel.asm	/^c01003e0:	89 e5                	mov    %esp,%ebp$/;"	l
c01003e2	obj/kernel.asm	/^c01003e2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01003e5	obj/kernel.asm	/^c01003e5:	a1 80 e1 1a c0       	mov    0xc01ae180,%eax$/;"	l
c01003ea	obj/kernel.asm	/^c01003ea:	85 c0                	test   %eax,%eax$/;"	l
c01003ec	obj/kernel.asm	/^c01003ec:	74 02                	je     c01003f0 <__panic+0x11>$/;"	l
c01003ee	obj/kernel.asm	/^c01003ee:	eb 48                	jmp    c0100438 <__panic+0x59>$/;"	l
c01003f0	obj/kernel.asm	/^c01003f0:	c7 05 80 e1 1a c0 01 	movl   $0x1,0xc01ae180$/;"	l
c01003f7	obj/kernel.asm	/^c01003f7:	00 00 00 $/;"	l
c01003fa	obj/kernel.asm	/^c01003fa:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c01003fd	obj/kernel.asm	/^c01003fd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100400	obj/kernel.asm	/^c0100400:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100403	obj/kernel.asm	/^c0100403:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0100406	obj/kernel.asm	/^c0100406:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100409	obj/kernel.asm	/^c0100409:	68 aa bb 10 c0       	push   $0xc010bbaa$/;"	l
c010040e	obj/kernel.asm	/^c010040e:	e8 67 fe ff ff       	call   c010027a <cprintf>$/;"	l
c0100413	obj/kernel.asm	/^c0100413:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100416	obj/kernel.asm	/^c0100416:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100419	obj/kernel.asm	/^c0100419:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010041c	obj/kernel.asm	/^c010041c:	50                   	push   %eax$/;"	l
c010041d	obj/kernel.asm	/^c010041d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0100420	obj/kernel.asm	/^c0100420:	e8 2c fe ff ff       	call   c0100251 <vcprintf>$/;"	l
c0100425	obj/kernel.asm	/^c0100425:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100428	obj/kernel.asm	/^c0100428:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010042b	obj/kernel.asm	/^c010042b:	68 c6 bb 10 c0       	push   $0xc010bbc6$/;"	l
c0100430	obj/kernel.asm	/^c0100430:	e8 45 fe ff ff       	call   c010027a <cprintf>$/;"	l
c0100435	obj/kernel.asm	/^c0100435:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100438	obj/kernel.asm	/^c0100438:	e8 65 1c 00 00       	call   c01020a2 <intr_disable>$/;"	l
c010043d	obj/kernel.asm	/^c010043d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100440	obj/kernel.asm	/^c0100440:	6a 00                	push   $0x0$/;"	l
c0100442	obj/kernel.asm	/^c0100442:	e8 47 08 00 00       	call   c0100c8e <kmonitor>$/;"	l
c0100447	obj/kernel.asm	/^c0100447:	83 c4 10             	add    $0x10,%esp$/;"	l
c010044a	obj/kernel.asm	/^c010044a:	eb f1                	jmp    c010043d <__panic+0x5e>$/;"	l
c010044c	obj/kernel.asm	/^c010044c <__warn>:$/;"	l
c010044c	obj/kernel.asm	/^c010044c:	55                   	push   %ebp$/;"	l
c010044d	obj/kernel.asm	/^c010044d:	89 e5                	mov    %esp,%ebp$/;"	l
c010044f	obj/kernel.asm	/^c010044f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100452	obj/kernel.asm	/^c0100452:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0100455	obj/kernel.asm	/^c0100455:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100458	obj/kernel.asm	/^c0100458:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010045b	obj/kernel.asm	/^c010045b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010045e	obj/kernel.asm	/^c010045e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100461	obj/kernel.asm	/^c0100461:	68 c8 bb 10 c0       	push   $0xc010bbc8$/;"	l
c0100466	obj/kernel.asm	/^c0100466:	e8 0f fe ff ff       	call   c010027a <cprintf>$/;"	l
c010046b	obj/kernel.asm	/^c010046b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010046e	obj/kernel.asm	/^c010046e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100471	obj/kernel.asm	/^c0100471:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100474	obj/kernel.asm	/^c0100474:	50                   	push   %eax$/;"	l
c0100475	obj/kernel.asm	/^c0100475:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0100478	obj/kernel.asm	/^c0100478:	e8 d4 fd ff ff       	call   c0100251 <vcprintf>$/;"	l
c010047d	obj/kernel.asm	/^c010047d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100480	obj/kernel.asm	/^c0100480:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100483	obj/kernel.asm	/^c0100483:	68 c6 bb 10 c0       	push   $0xc010bbc6$/;"	l
c0100488	obj/kernel.asm	/^c0100488:	e8 ed fd ff ff       	call   c010027a <cprintf>$/;"	l
c010048d	obj/kernel.asm	/^c010048d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100490	obj/kernel.asm	/^c0100490:	c9                   	leave  $/;"	l
c0100491	obj/kernel.asm	/^c0100491:	c3                   	ret    $/;"	l
c0100492	obj/kernel.asm	/^c0100492 <is_kernel_panic>:$/;"	l
c0100492	obj/kernel.asm	/^c0100492:	55                   	push   %ebp$/;"	l
c0100493	obj/kernel.asm	/^c0100493:	89 e5                	mov    %esp,%ebp$/;"	l
c0100495	obj/kernel.asm	/^c0100495:	a1 80 e1 1a c0       	mov    0xc01ae180,%eax$/;"	l
c010049a	obj/kernel.asm	/^c010049a:	5d                   	pop    %ebp$/;"	l
c010049b	obj/kernel.asm	/^c010049b:	c3                   	ret    $/;"	l
c010049c	obj/kernel.asm	/^c010049c <stab_binsearch>:$/;"	l
c010049c	obj/kernel.asm	/^c010049c:	55                   	push   %ebp$/;"	l
c010049d	obj/kernel.asm	/^c010049d:	89 e5                	mov    %esp,%ebp$/;"	l
c010049f	obj/kernel.asm	/^c010049f:	83 ec 20             	sub    $0x20,%esp$/;"	l
c01004a2	obj/kernel.asm	/^c01004a2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01004a5	obj/kernel.asm	/^c01004a5:	8b 00                	mov    (%eax),%eax$/;"	l
c01004a7	obj/kernel.asm	/^c01004a7:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01004aa	obj/kernel.asm	/^c01004aa:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01004ad	obj/kernel.asm	/^c01004ad:	8b 00                	mov    (%eax),%eax$/;"	l
c01004af	obj/kernel.asm	/^c01004af:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01004b2	obj/kernel.asm	/^c01004b2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01004b9	obj/kernel.asm	/^c01004b9:	e9 d2 00 00 00       	jmp    c0100590 <stab_binsearch+0xf4>$/;"	l
c01004be	obj/kernel.asm	/^c01004be:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01004c1	obj/kernel.asm	/^c01004c1:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01004c4	obj/kernel.asm	/^c01004c4:	01 d0                	add    %edx,%eax$/;"	l
c01004c6	obj/kernel.asm	/^c01004c6:	89 c2                	mov    %eax,%edx$/;"	l
c01004c8	obj/kernel.asm	/^c01004c8:	c1 ea 1f             	shr    $0x1f,%edx$/;"	l
c01004cb	obj/kernel.asm	/^c01004cb:	01 d0                	add    %edx,%eax$/;"	l
c01004cd	obj/kernel.asm	/^c01004cd:	d1 f8                	sar    %eax$/;"	d
c01004cf	obj/kernel.asm	/^c01004cf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01004d2	obj/kernel.asm	/^c01004d2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01004d5	obj/kernel.asm	/^c01004d5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01004d8	obj/kernel.asm	/^c01004d8:	eb 04                	jmp    c01004de <stab_binsearch+0x42>$/;"	l
c01004da	obj/kernel.asm	/^c01004da:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
c01004de	obj/kernel.asm	/^c01004de:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01004e1	obj/kernel.asm	/^c01004e1:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01004e4	obj/kernel.asm	/^c01004e4:	7c 1f                	jl     c0100505 <stab_binsearch+0x69>$/;"	l
c01004e6	obj/kernel.asm	/^c01004e6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01004e9	obj/kernel.asm	/^c01004e9:	89 d0                	mov    %edx,%eax$/;"	l
c01004eb	obj/kernel.asm	/^c01004eb:	01 c0                	add    %eax,%eax$/;"	l
c01004ed	obj/kernel.asm	/^c01004ed:	01 d0                	add    %edx,%eax$/;"	l
c01004ef	obj/kernel.asm	/^c01004ef:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01004f2	obj/kernel.asm	/^c01004f2:	89 c2                	mov    %eax,%edx$/;"	l
c01004f4	obj/kernel.asm	/^c01004f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01004f7	obj/kernel.asm	/^c01004f7:	01 d0                	add    %edx,%eax$/;"	l
c01004f9	obj/kernel.asm	/^c01004f9:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01004fd	obj/kernel.asm	/^c01004fd:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100500	obj/kernel.asm	/^c0100500:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c0100503	obj/kernel.asm	/^c0100503:	75 d5                	jne    c01004da <stab_binsearch+0x3e>$/;"	l
c0100505	obj/kernel.asm	/^c0100505:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100508	obj/kernel.asm	/^c0100508:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c010050b	obj/kernel.asm	/^c010050b:	7d 0b                	jge    c0100518 <stab_binsearch+0x7c>$/;"	l
c010050d	obj/kernel.asm	/^c010050d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100510	obj/kernel.asm	/^c0100510:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100513	obj/kernel.asm	/^c0100513:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100516	obj/kernel.asm	/^c0100516:	eb 78                	jmp    c0100590 <stab_binsearch+0xf4>$/;"	l
c0100518	obj/kernel.asm	/^c0100518:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010051f	obj/kernel.asm	/^c010051f:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100522	obj/kernel.asm	/^c0100522:	89 d0                	mov    %edx,%eax$/;"	l
c0100524	obj/kernel.asm	/^c0100524:	01 c0                	add    %eax,%eax$/;"	l
c0100526	obj/kernel.asm	/^c0100526:	01 d0                	add    %edx,%eax$/;"	l
c0100528	obj/kernel.asm	/^c0100528:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010052b	obj/kernel.asm	/^c010052b:	89 c2                	mov    %eax,%edx$/;"	l
c010052d	obj/kernel.asm	/^c010052d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100530	obj/kernel.asm	/^c0100530:	01 d0                	add    %edx,%eax$/;"	l
c0100532	obj/kernel.asm	/^c0100532:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100535	obj/kernel.asm	/^c0100535:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c0100538	obj/kernel.asm	/^c0100538:	73 13                	jae    c010054d <stab_binsearch+0xb1>$/;"	l
c010053a	obj/kernel.asm	/^c010053a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010053d	obj/kernel.asm	/^c010053d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100540	obj/kernel.asm	/^c0100540:	89 10                	mov    %edx,(%eax)$/;"	l
c0100542	obj/kernel.asm	/^c0100542:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100545	obj/kernel.asm	/^c0100545:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100548	obj/kernel.asm	/^c0100548:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010054b	obj/kernel.asm	/^c010054b:	eb 43                	jmp    c0100590 <stab_binsearch+0xf4>$/;"	l
c010054d	obj/kernel.asm	/^c010054d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100550	obj/kernel.asm	/^c0100550:	89 d0                	mov    %edx,%eax$/;"	l
c0100552	obj/kernel.asm	/^c0100552:	01 c0                	add    %eax,%eax$/;"	l
c0100554	obj/kernel.asm	/^c0100554:	01 d0                	add    %edx,%eax$/;"	l
c0100556	obj/kernel.asm	/^c0100556:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100559	obj/kernel.asm	/^c0100559:	89 c2                	mov    %eax,%edx$/;"	l
c010055b	obj/kernel.asm	/^c010055b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010055e	obj/kernel.asm	/^c010055e:	01 d0                	add    %edx,%eax$/;"	l
c0100560	obj/kernel.asm	/^c0100560:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100563	obj/kernel.asm	/^c0100563:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c0100566	obj/kernel.asm	/^c0100566:	76 16                	jbe    c010057e <stab_binsearch+0xe2>$/;"	l
c0100568	obj/kernel.asm	/^c0100568:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010056b	obj/kernel.asm	/^c010056b:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010056e	obj/kernel.asm	/^c010056e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100571	obj/kernel.asm	/^c0100571:	89 10                	mov    %edx,(%eax)$/;"	l
c0100573	obj/kernel.asm	/^c0100573:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100576	obj/kernel.asm	/^c0100576:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100579	obj/kernel.asm	/^c0100579:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010057c	obj/kernel.asm	/^c010057c:	eb 12                	jmp    c0100590 <stab_binsearch+0xf4>$/;"	l
c010057e	obj/kernel.asm	/^c010057e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100581	obj/kernel.asm	/^c0100581:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100584	obj/kernel.asm	/^c0100584:	89 10                	mov    %edx,(%eax)$/;"	l
c0100586	obj/kernel.asm	/^c0100586:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100589	obj/kernel.asm	/^c0100589:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010058c	obj/kernel.asm	/^c010058c:	83 45 18 01          	addl   $0x1,0x18(%ebp)$/;"	l
c0100590	obj/kernel.asm	/^c0100590:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100593	obj/kernel.asm	/^c0100593:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c0100596	obj/kernel.asm	/^c0100596:	0f 8e 22 ff ff ff    	jle    c01004be <stab_binsearch+0x22>$/;"	l
c010059c	obj/kernel.asm	/^c010059c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01005a0	obj/kernel.asm	/^c01005a0:	75 0f                	jne    c01005b1 <stab_binsearch+0x115>$/;"	l
c01005a2	obj/kernel.asm	/^c01005a2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01005a5	obj/kernel.asm	/^c01005a5:	8b 00                	mov    (%eax),%eax$/;"	l
c01005a7	obj/kernel.asm	/^c01005a7:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01005aa	obj/kernel.asm	/^c01005aa:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01005ad	obj/kernel.asm	/^c01005ad:	89 10                	mov    %edx,(%eax)$/;"	l
c01005af	obj/kernel.asm	/^c01005af:	eb 3f                	jmp    c01005f0 <stab_binsearch+0x154>$/;"	l
c01005b1	obj/kernel.asm	/^c01005b1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01005b4	obj/kernel.asm	/^c01005b4:	8b 00                	mov    (%eax),%eax$/;"	l
c01005b6	obj/kernel.asm	/^c01005b6:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01005b9	obj/kernel.asm	/^c01005b9:	eb 04                	jmp    c01005bf <stab_binsearch+0x123>$/;"	l
c01005bb	obj/kernel.asm	/^c01005bb:	83 6d fc 01          	subl   $0x1,-0x4(%ebp)$/;"	l
c01005bf	obj/kernel.asm	/^c01005bf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01005c2	obj/kernel.asm	/^c01005c2:	8b 00                	mov    (%eax),%eax$/;"	l
c01005c4	obj/kernel.asm	/^c01005c4:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01005c7	obj/kernel.asm	/^c01005c7:	7d 1f                	jge    c01005e8 <stab_binsearch+0x14c>$/;"	l
c01005c9	obj/kernel.asm	/^c01005c9:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01005cc	obj/kernel.asm	/^c01005cc:	89 d0                	mov    %edx,%eax$/;"	l
c01005ce	obj/kernel.asm	/^c01005ce:	01 c0                	add    %eax,%eax$/;"	l
c01005d0	obj/kernel.asm	/^c01005d0:	01 d0                	add    %edx,%eax$/;"	l
c01005d2	obj/kernel.asm	/^c01005d2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01005d5	obj/kernel.asm	/^c01005d5:	89 c2                	mov    %eax,%edx$/;"	l
c01005d7	obj/kernel.asm	/^c01005d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01005da	obj/kernel.asm	/^c01005da:	01 d0                	add    %edx,%eax$/;"	l
c01005dc	obj/kernel.asm	/^c01005dc:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01005e0	obj/kernel.asm	/^c01005e0:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01005e3	obj/kernel.asm	/^c01005e3:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c01005e6	obj/kernel.asm	/^c01005e6:	75 d3                	jne    c01005bb <stab_binsearch+0x11f>$/;"	l
c01005e8	obj/kernel.asm	/^c01005e8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01005eb	obj/kernel.asm	/^c01005eb:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01005ee	obj/kernel.asm	/^c01005ee:	89 10                	mov    %edx,(%eax)$/;"	l
c01005f0	obj/kernel.asm	/^c01005f0:	c9                   	leave  $/;"	l
c01005f1	obj/kernel.asm	/^c01005f1:	c3                   	ret    $/;"	l
c01005f2	obj/kernel.asm	/^c01005f2 <debuginfo_eip>:$/;"	l
c01005f2	obj/kernel.asm	/^c01005f2:	55                   	push   %ebp$/;"	l
c01005f3	obj/kernel.asm	/^c01005f3:	89 e5                	mov    %esp,%ebp$/;"	l
c01005f5	obj/kernel.asm	/^c01005f5:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01005f8	obj/kernel.asm	/^c01005f8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01005fb	obj/kernel.asm	/^c01005fb:	c7 00 e8 bb 10 c0    	movl   $0xc010bbe8,(%eax)$/;"	l
c0100601	obj/kernel.asm	/^c0100601:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100604	obj/kernel.asm	/^c0100604:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c010060b	obj/kernel.asm	/^c010060b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010060e	obj/kernel.asm	/^c010060e:	c7 40 08 e8 bb 10 c0 	movl   $0xc010bbe8,0x8(%eax)$/;"	l
c0100615	obj/kernel.asm	/^c0100615:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100618	obj/kernel.asm	/^c0100618:	c7 40 0c 09 00 00 00 	movl   $0x9,0xc(%eax)$/;"	l
c010061f	obj/kernel.asm	/^c010061f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100622	obj/kernel.asm	/^c0100622:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100625	obj/kernel.asm	/^c0100625:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0100628	obj/kernel.asm	/^c0100628:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010062b	obj/kernel.asm	/^c010062b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c0100632	obj/kernel.asm	/^c0100632:	81 7d 08 ff ff ff bf 	cmpl   $0xbfffffff,0x8(%ebp)$/;"	l
c0100639	obj/kernel.asm	/^c0100639:	76 21                	jbe    c010065c <debuginfo_eip+0x6a>$/;"	l
c010063b	obj/kernel.asm	/^c010063b:	c7 45 f4 a0 e4 10 c0 	movl   $0xc010e4a0,-0xc(%ebp)$/;"	l
c0100642	obj/kernel.asm	/^c0100642:	c7 45 f0 e0 39 12 c0 	movl   $0xc01239e0,-0x10(%ebp)$/;"	l
c0100649	obj/kernel.asm	/^c0100649:	c7 45 ec e1 39 12 c0 	movl   $0xc01239e1,-0x14(%ebp)$/;"	l
c0100650	obj/kernel.asm	/^c0100650:	c7 45 e8 5d 9e 12 c0 	movl   $0xc0129e5d,-0x18(%ebp)$/;"	l
c0100657	obj/kernel.asm	/^c0100657:	e9 c3 00 00 00       	jmp    c010071f <debuginfo_eip+0x12d>$/;"	l
c010065c	obj/kernel.asm	/^c010065c:	c7 45 e4 00 00 20 00 	movl   $0x200000,-0x1c(%ebp)$/;"	l
c0100663	obj/kernel.asm	/^c0100663:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0100668	obj/kernel.asm	/^c0100668:	85 c0                	test   %eax,%eax$/;"	l
c010066a	obj/kernel.asm	/^c010066a:	74 11                	je     c010067d <debuginfo_eip+0x8b>$/;"	l
c010066c	obj/kernel.asm	/^c010066c:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0100671	obj/kernel.asm	/^c0100671:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0100674	obj/kernel.asm	/^c0100674:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100677	obj/kernel.asm	/^c0100677:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c010067b	obj/kernel.asm	/^c010067b:	75 0a                	jne    c0100687 <debuginfo_eip+0x95>$/;"	l
c010067d	obj/kernel.asm	/^c010067d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100682	obj/kernel.asm	/^c0100682:	e9 4e 03 00 00       	jmp    c01009d5 <debuginfo_eip+0x3e3>$/;"	l
c0100687	obj/kernel.asm	/^c0100687:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010068a	obj/kernel.asm	/^c010068a:	6a 00                	push   $0x0$/;"	l
c010068c	obj/kernel.asm	/^c010068c:	6a 10                	push   $0x10$/;"	l
c010068e	obj/kernel.asm	/^c010068e:	50                   	push   %eax$/;"	l
c010068f	obj/kernel.asm	/^c010068f:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0100692	obj/kernel.asm	/^c0100692:	e8 7a 5b 00 00       	call   c0106211 <user_mem_check>$/;"	l
c0100697	obj/kernel.asm	/^c0100697:	83 c4 10             	add    $0x10,%esp$/;"	l
c010069a	obj/kernel.asm	/^c010069a:	85 c0                	test   %eax,%eax$/;"	l
c010069c	obj/kernel.asm	/^c010069c:	75 0a                	jne    c01006a8 <debuginfo_eip+0xb6>$/;"	l
c010069e	obj/kernel.asm	/^c010069e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01006a3	obj/kernel.asm	/^c01006a3:	e9 2d 03 00 00       	jmp    c01009d5 <debuginfo_eip+0x3e3>$/;"	l
c01006a8	obj/kernel.asm	/^c01006a8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01006ab	obj/kernel.asm	/^c01006ab:	8b 00                	mov    (%eax),%eax$/;"	l
c01006ad	obj/kernel.asm	/^c01006ad:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01006b0	obj/kernel.asm	/^c01006b0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01006b3	obj/kernel.asm	/^c01006b3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01006b6	obj/kernel.asm	/^c01006b6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01006b9	obj/kernel.asm	/^c01006b9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01006bc	obj/kernel.asm	/^c01006bc:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01006bf	obj/kernel.asm	/^c01006bf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01006c2	obj/kernel.asm	/^c01006c2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01006c5	obj/kernel.asm	/^c01006c5:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01006c8	obj/kernel.asm	/^c01006c8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01006cb	obj/kernel.asm	/^c01006cb:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01006ce	obj/kernel.asm	/^c01006ce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01006d1	obj/kernel.asm	/^c01006d1:	29 c2                	sub    %eax,%edx$/;"	l
c01006d3	obj/kernel.asm	/^c01006d3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01006d6	obj/kernel.asm	/^c01006d6:	6a 00                	push   $0x0$/;"	l
c01006d8	obj/kernel.asm	/^c01006d8:	52                   	push   %edx$/;"	l
c01006d9	obj/kernel.asm	/^c01006d9:	50                   	push   %eax$/;"	l
c01006da	obj/kernel.asm	/^c01006da:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01006dd	obj/kernel.asm	/^c01006dd:	e8 2f 5b 00 00       	call   c0106211 <user_mem_check>$/;"	l
c01006e2	obj/kernel.asm	/^c01006e2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01006e5	obj/kernel.asm	/^c01006e5:	85 c0                	test   %eax,%eax$/;"	l
c01006e7	obj/kernel.asm	/^c01006e7:	75 0a                	jne    c01006f3 <debuginfo_eip+0x101>$/;"	l
c01006e9	obj/kernel.asm	/^c01006e9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01006ee	obj/kernel.asm	/^c01006ee:	e9 e2 02 00 00       	jmp    c01009d5 <debuginfo_eip+0x3e3>$/;"	l
c01006f3	obj/kernel.asm	/^c01006f3:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01006f6	obj/kernel.asm	/^c01006f6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01006f9	obj/kernel.asm	/^c01006f9:	29 c2                	sub    %eax,%edx$/;"	l
c01006fb	obj/kernel.asm	/^c01006fb:	89 d0                	mov    %edx,%eax$/;"	l
c01006fd	obj/kernel.asm	/^c01006fd:	89 c2                	mov    %eax,%edx$/;"	l
c01006ff	obj/kernel.asm	/^c01006ff:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100702	obj/kernel.asm	/^c0100702:	6a 00                	push   $0x0$/;"	l
c0100704	obj/kernel.asm	/^c0100704:	52                   	push   %edx$/;"	l
c0100705	obj/kernel.asm	/^c0100705:	50                   	push   %eax$/;"	l
c0100706	obj/kernel.asm	/^c0100706:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0100709	obj/kernel.asm	/^c0100709:	e8 03 5b 00 00       	call   c0106211 <user_mem_check>$/;"	l
c010070e	obj/kernel.asm	/^c010070e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100711	obj/kernel.asm	/^c0100711:	85 c0                	test   %eax,%eax$/;"	l
c0100713	obj/kernel.asm	/^c0100713:	75 0a                	jne    c010071f <debuginfo_eip+0x12d>$/;"	l
c0100715	obj/kernel.asm	/^c0100715:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010071a	obj/kernel.asm	/^c010071a:	e9 b6 02 00 00       	jmp    c01009d5 <debuginfo_eip+0x3e3>$/;"	l
c010071f	obj/kernel.asm	/^c010071f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100722	obj/kernel.asm	/^c0100722:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0100725	obj/kernel.asm	/^c0100725:	76 0d                	jbe    c0100734 <debuginfo_eip+0x142>$/;"	l
c0100727	obj/kernel.asm	/^c0100727:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010072a	obj/kernel.asm	/^c010072a:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010072d	obj/kernel.asm	/^c010072d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100730	obj/kernel.asm	/^c0100730:	84 c0                	test   %al,%al$/;"	l
c0100732	obj/kernel.asm	/^c0100732:	74 0a                	je     c010073e <debuginfo_eip+0x14c>$/;"	l
c0100734	obj/kernel.asm	/^c0100734:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100739	obj/kernel.asm	/^c0100739:	e9 97 02 00 00       	jmp    c01009d5 <debuginfo_eip+0x3e3>$/;"	l
c010073e	obj/kernel.asm	/^c010073e:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0100745	obj/kernel.asm	/^c0100745:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100748	obj/kernel.asm	/^c0100748:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010074b	obj/kernel.asm	/^c010074b:	29 c2                	sub    %eax,%edx$/;"	l
c010074d	obj/kernel.asm	/^c010074d:	89 d0                	mov    %edx,%eax$/;"	l
c010074f	obj/kernel.asm	/^c010074f:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c0100752	obj/kernel.asm	/^c0100752:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
c0100758	obj/kernel.asm	/^c0100758:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010075b	obj/kernel.asm	/^c010075b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010075e	obj/kernel.asm	/^c010075e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100761	obj/kernel.asm	/^c0100761:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100764	obj/kernel.asm	/^c0100764:	6a 64                	push   $0x64$/;"	l
c0100766	obj/kernel.asm	/^c0100766:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c0100769	obj/kernel.asm	/^c0100769:	50                   	push   %eax$/;"	l
c010076a	obj/kernel.asm	/^c010076a:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010076d	obj/kernel.asm	/^c010076d:	50                   	push   %eax$/;"	l
c010076e	obj/kernel.asm	/^c010076e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100771	obj/kernel.asm	/^c0100771:	e8 26 fd ff ff       	call   c010049c <stab_binsearch>$/;"	l
c0100776	obj/kernel.asm	/^c0100776:	83 c4 20             	add    $0x20,%esp$/;"	l
c0100779	obj/kernel.asm	/^c0100779:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010077c	obj/kernel.asm	/^c010077c:	85 c0                	test   %eax,%eax$/;"	l
c010077e	obj/kernel.asm	/^c010077e:	75 0a                	jne    c010078a <debuginfo_eip+0x198>$/;"	l
c0100780	obj/kernel.asm	/^c0100780:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100785	obj/kernel.asm	/^c0100785:	e9 4b 02 00 00       	jmp    c01009d5 <debuginfo_eip+0x3e3>$/;"	l
c010078a	obj/kernel.asm	/^c010078a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010078d	obj/kernel.asm	/^c010078d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0100790	obj/kernel.asm	/^c0100790:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0100793	obj/kernel.asm	/^c0100793:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0100796	obj/kernel.asm	/^c0100796:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100799	obj/kernel.asm	/^c0100799:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010079c	obj/kernel.asm	/^c010079c:	6a 24                	push   $0x24$/;"	l
c010079e	obj/kernel.asm	/^c010079e:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
c01007a1	obj/kernel.asm	/^c01007a1:	50                   	push   %eax$/;"	l
c01007a2	obj/kernel.asm	/^c01007a2:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c01007a5	obj/kernel.asm	/^c01007a5:	50                   	push   %eax$/;"	l
c01007a6	obj/kernel.asm	/^c01007a6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01007a9	obj/kernel.asm	/^c01007a9:	e8 ee fc ff ff       	call   c010049c <stab_binsearch>$/;"	l
c01007ae	obj/kernel.asm	/^c01007ae:	83 c4 20             	add    $0x20,%esp$/;"	l
c01007b1	obj/kernel.asm	/^c01007b1:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01007b4	obj/kernel.asm	/^c01007b4:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01007b7	obj/kernel.asm	/^c01007b7:	39 c2                	cmp    %eax,%edx$/;"	l
c01007b9	obj/kernel.asm	/^c01007b9:	7f 7c                	jg     c0100837 <debuginfo_eip+0x245>$/;"	l
c01007bb	obj/kernel.asm	/^c01007bb:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01007be	obj/kernel.asm	/^c01007be:	89 c2                	mov    %eax,%edx$/;"	l
c01007c0	obj/kernel.asm	/^c01007c0:	89 d0                	mov    %edx,%eax$/;"	l
c01007c2	obj/kernel.asm	/^c01007c2:	01 c0                	add    %eax,%eax$/;"	l
c01007c4	obj/kernel.asm	/^c01007c4:	01 d0                	add    %edx,%eax$/;"	l
c01007c6	obj/kernel.asm	/^c01007c6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01007c9	obj/kernel.asm	/^c01007c9:	89 c2                	mov    %eax,%edx$/;"	l
c01007cb	obj/kernel.asm	/^c01007cb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007ce	obj/kernel.asm	/^c01007ce:	01 d0                	add    %edx,%eax$/;"	l
c01007d0	obj/kernel.asm	/^c01007d0:	8b 00                	mov    (%eax),%eax$/;"	l
c01007d2	obj/kernel.asm	/^c01007d2:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c01007d5	obj/kernel.asm	/^c01007d5:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01007d8	obj/kernel.asm	/^c01007d8:	29 d1                	sub    %edx,%ecx$/;"	l
c01007da	obj/kernel.asm	/^c01007da:	89 ca                	mov    %ecx,%edx$/;"	l
c01007dc	obj/kernel.asm	/^c01007dc:	39 d0                	cmp    %edx,%eax$/;"	l
c01007de	obj/kernel.asm	/^c01007de:	73 22                	jae    c0100802 <debuginfo_eip+0x210>$/;"	l
c01007e0	obj/kernel.asm	/^c01007e0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01007e3	obj/kernel.asm	/^c01007e3:	89 c2                	mov    %eax,%edx$/;"	l
c01007e5	obj/kernel.asm	/^c01007e5:	89 d0                	mov    %edx,%eax$/;"	l
c01007e7	obj/kernel.asm	/^c01007e7:	01 c0                	add    %eax,%eax$/;"	l
c01007e9	obj/kernel.asm	/^c01007e9:	01 d0                	add    %edx,%eax$/;"	l
c01007eb	obj/kernel.asm	/^c01007eb:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01007ee	obj/kernel.asm	/^c01007ee:	89 c2                	mov    %eax,%edx$/;"	l
c01007f0	obj/kernel.asm	/^c01007f0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007f3	obj/kernel.asm	/^c01007f3:	01 d0                	add    %edx,%eax$/;"	l
c01007f5	obj/kernel.asm	/^c01007f5:	8b 10                	mov    (%eax),%edx$/;"	l
c01007f7	obj/kernel.asm	/^c01007f7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01007fa	obj/kernel.asm	/^c01007fa:	01 c2                	add    %eax,%edx$/;"	l
c01007fc	obj/kernel.asm	/^c01007fc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01007ff	obj/kernel.asm	/^c01007ff:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0100802	obj/kernel.asm	/^c0100802:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100805	obj/kernel.asm	/^c0100805:	89 c2                	mov    %eax,%edx$/;"	l
c0100807	obj/kernel.asm	/^c0100807:	89 d0                	mov    %edx,%eax$/;"	l
c0100809	obj/kernel.asm	/^c0100809:	01 c0                	add    %eax,%eax$/;"	l
c010080b	obj/kernel.asm	/^c010080b:	01 d0                	add    %edx,%eax$/;"	l
c010080d	obj/kernel.asm	/^c010080d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100810	obj/kernel.asm	/^c0100810:	89 c2                	mov    %eax,%edx$/;"	l
c0100812	obj/kernel.asm	/^c0100812:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100815	obj/kernel.asm	/^c0100815:	01 d0                	add    %edx,%eax$/;"	l
c0100817	obj/kernel.asm	/^c0100817:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010081a	obj/kernel.asm	/^c010081a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010081d	obj/kernel.asm	/^c010081d:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0100820	obj/kernel.asm	/^c0100820:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100823	obj/kernel.asm	/^c0100823:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0100826	obj/kernel.asm	/^c0100826:	29 45 08             	sub    %eax,0x8(%ebp)$/;"	l
c0100829	obj/kernel.asm	/^c0100829:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010082c	obj/kernel.asm	/^c010082c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010082f	obj/kernel.asm	/^c010082f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100832	obj/kernel.asm	/^c0100832:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0100835	obj/kernel.asm	/^c0100835:	eb 15                	jmp    c010084c <debuginfo_eip+0x25a>$/;"	l
c0100837	obj/kernel.asm	/^c0100837:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010083a	obj/kernel.asm	/^c010083a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010083d	obj/kernel.asm	/^c010083d:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0100840	obj/kernel.asm	/^c0100840:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100843	obj/kernel.asm	/^c0100843:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100846	obj/kernel.asm	/^c0100846:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0100849	obj/kernel.asm	/^c0100849:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010084c	obj/kernel.asm	/^c010084c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010084f	obj/kernel.asm	/^c010084f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100852	obj/kernel.asm	/^c0100852:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100855	obj/kernel.asm	/^c0100855:	6a 3a                	push   $0x3a$/;"	l
c0100857	obj/kernel.asm	/^c0100857:	50                   	push   %eax$/;"	l
c0100858	obj/kernel.asm	/^c0100858:	e8 5a a8 00 00       	call   c010b0b7 <strfind>$/;"	l
c010085d	obj/kernel.asm	/^c010085d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100860	obj/kernel.asm	/^c0100860:	89 c2                	mov    %eax,%edx$/;"	l
c0100862	obj/kernel.asm	/^c0100862:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100865	obj/kernel.asm	/^c0100865:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100868	obj/kernel.asm	/^c0100868:	29 c2                	sub    %eax,%edx$/;"	l
c010086a	obj/kernel.asm	/^c010086a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010086d	obj/kernel.asm	/^c010086d:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0100870	obj/kernel.asm	/^c0100870:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100873	obj/kernel.asm	/^c0100873:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100876	obj/kernel.asm	/^c0100876:	6a 44                	push   $0x44$/;"	l
c0100878	obj/kernel.asm	/^c0100878:	8d 45 c8             	lea    -0x38(%ebp),%eax$/;"	l
c010087b	obj/kernel.asm	/^c010087b:	50                   	push   %eax$/;"	l
c010087c	obj/kernel.asm	/^c010087c:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c010087f	obj/kernel.asm	/^c010087f:	50                   	push   %eax$/;"	l
c0100880	obj/kernel.asm	/^c0100880:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100883	obj/kernel.asm	/^c0100883:	e8 14 fc ff ff       	call   c010049c <stab_binsearch>$/;"	l
c0100888	obj/kernel.asm	/^c0100888:	83 c4 20             	add    $0x20,%esp$/;"	l
c010088b	obj/kernel.asm	/^c010088b:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010088e	obj/kernel.asm	/^c010088e:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0100891	obj/kernel.asm	/^c0100891:	39 c2                	cmp    %eax,%edx$/;"	l
c0100893	obj/kernel.asm	/^c0100893:	7f 24                	jg     c01008b9 <debuginfo_eip+0x2c7>$/;"	l
c0100895	obj/kernel.asm	/^c0100895:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0100898	obj/kernel.asm	/^c0100898:	89 c2                	mov    %eax,%edx$/;"	l
c010089a	obj/kernel.asm	/^c010089a:	89 d0                	mov    %edx,%eax$/;"	l
c010089c	obj/kernel.asm	/^c010089c:	01 c0                	add    %eax,%eax$/;"	l
c010089e	obj/kernel.asm	/^c010089e:	01 d0                	add    %edx,%eax$/;"	l
c01008a0	obj/kernel.asm	/^c01008a0:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01008a3	obj/kernel.asm	/^c01008a3:	89 c2                	mov    %eax,%edx$/;"	l
c01008a5	obj/kernel.asm	/^c01008a5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01008a8	obj/kernel.asm	/^c01008a8:	01 d0                	add    %edx,%eax$/;"	l
c01008aa	obj/kernel.asm	/^c01008aa:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c01008ae	obj/kernel.asm	/^c01008ae:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01008b1	obj/kernel.asm	/^c01008b1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01008b4	obj/kernel.asm	/^c01008b4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01008b7	obj/kernel.asm	/^c01008b7:	eb 13                	jmp    c01008cc <debuginfo_eip+0x2da>$/;"	l
c01008b9	obj/kernel.asm	/^c01008b9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01008be	obj/kernel.asm	/^c01008be:	e9 12 01 00 00       	jmp    c01009d5 <debuginfo_eip+0x3e3>$/;"	l
c01008c3	obj/kernel.asm	/^c01008c3:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01008c6	obj/kernel.asm	/^c01008c6:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01008c9	obj/kernel.asm	/^c01008c9:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01008cc	obj/kernel.asm	/^c01008cc:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01008cf	obj/kernel.asm	/^c01008cf:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01008d2	obj/kernel.asm	/^c01008d2:	39 c2                	cmp    %eax,%edx$/;"	l
c01008d4	obj/kernel.asm	/^c01008d4:	7c 56                	jl     c010092c <debuginfo_eip+0x33a>$/;"	l
c01008d6	obj/kernel.asm	/^c01008d6:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01008d9	obj/kernel.asm	/^c01008d9:	89 c2                	mov    %eax,%edx$/;"	l
c01008db	obj/kernel.asm	/^c01008db:	89 d0                	mov    %edx,%eax$/;"	l
c01008dd	obj/kernel.asm	/^c01008dd:	01 c0                	add    %eax,%eax$/;"	l
c01008df	obj/kernel.asm	/^c01008df:	01 d0                	add    %edx,%eax$/;"	l
c01008e1	obj/kernel.asm	/^c01008e1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01008e4	obj/kernel.asm	/^c01008e4:	89 c2                	mov    %eax,%edx$/;"	l
c01008e6	obj/kernel.asm	/^c01008e6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01008e9	obj/kernel.asm	/^c01008e9:	01 d0                	add    %edx,%eax$/;"	l
c01008eb	obj/kernel.asm	/^c01008eb:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01008ef	obj/kernel.asm	/^c01008ef:	3c 84                	cmp    $0x84,%al$/;"	l
c01008f1	obj/kernel.asm	/^c01008f1:	74 39                	je     c010092c <debuginfo_eip+0x33a>$/;"	l
c01008f3	obj/kernel.asm	/^c01008f3:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01008f6	obj/kernel.asm	/^c01008f6:	89 c2                	mov    %eax,%edx$/;"	l
c01008f8	obj/kernel.asm	/^c01008f8:	89 d0                	mov    %edx,%eax$/;"	l
c01008fa	obj/kernel.asm	/^c01008fa:	01 c0                	add    %eax,%eax$/;"	l
c01008fc	obj/kernel.asm	/^c01008fc:	01 d0                	add    %edx,%eax$/;"	l
c01008fe	obj/kernel.asm	/^c01008fe:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100901	obj/kernel.asm	/^c0100901:	89 c2                	mov    %eax,%edx$/;"	l
c0100903	obj/kernel.asm	/^c0100903:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100906	obj/kernel.asm	/^c0100906:	01 d0                	add    %edx,%eax$/;"	l
c0100908	obj/kernel.asm	/^c0100908:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c010090c	obj/kernel.asm	/^c010090c:	3c 64                	cmp    $0x64,%al$/;"	l
c010090e	obj/kernel.asm	/^c010090e:	75 b3                	jne    c01008c3 <debuginfo_eip+0x2d1>$/;"	l
c0100910	obj/kernel.asm	/^c0100910:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100913	obj/kernel.asm	/^c0100913:	89 c2                	mov    %eax,%edx$/;"	l
c0100915	obj/kernel.asm	/^c0100915:	89 d0                	mov    %edx,%eax$/;"	l
c0100917	obj/kernel.asm	/^c0100917:	01 c0                	add    %eax,%eax$/;"	l
c0100919	obj/kernel.asm	/^c0100919:	01 d0                	add    %edx,%eax$/;"	l
c010091b	obj/kernel.asm	/^c010091b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010091e	obj/kernel.asm	/^c010091e:	89 c2                	mov    %eax,%edx$/;"	l
c0100920	obj/kernel.asm	/^c0100920:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100923	obj/kernel.asm	/^c0100923:	01 d0                	add    %edx,%eax$/;"	l
c0100925	obj/kernel.asm	/^c0100925:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100928	obj/kernel.asm	/^c0100928:	85 c0                	test   %eax,%eax$/;"	l
c010092a	obj/kernel.asm	/^c010092a:	74 97                	je     c01008c3 <debuginfo_eip+0x2d1>$/;"	l
c010092c	obj/kernel.asm	/^c010092c:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010092f	obj/kernel.asm	/^c010092f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100932	obj/kernel.asm	/^c0100932:	39 c2                	cmp    %eax,%edx$/;"	l
c0100934	obj/kernel.asm	/^c0100934:	7c 46                	jl     c010097c <debuginfo_eip+0x38a>$/;"	l
c0100936	obj/kernel.asm	/^c0100936:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100939	obj/kernel.asm	/^c0100939:	89 c2                	mov    %eax,%edx$/;"	l
c010093b	obj/kernel.asm	/^c010093b:	89 d0                	mov    %edx,%eax$/;"	l
c010093d	obj/kernel.asm	/^c010093d:	01 c0                	add    %eax,%eax$/;"	l
c010093f	obj/kernel.asm	/^c010093f:	01 d0                	add    %edx,%eax$/;"	l
c0100941	obj/kernel.asm	/^c0100941:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100944	obj/kernel.asm	/^c0100944:	89 c2                	mov    %eax,%edx$/;"	l
c0100946	obj/kernel.asm	/^c0100946:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100949	obj/kernel.asm	/^c0100949:	01 d0                	add    %edx,%eax$/;"	l
c010094b	obj/kernel.asm	/^c010094b:	8b 00                	mov    (%eax),%eax$/;"	l
c010094d	obj/kernel.asm	/^c010094d:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c0100950	obj/kernel.asm	/^c0100950:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0100953	obj/kernel.asm	/^c0100953:	29 d1                	sub    %edx,%ecx$/;"	l
c0100955	obj/kernel.asm	/^c0100955:	89 ca                	mov    %ecx,%edx$/;"	l
c0100957	obj/kernel.asm	/^c0100957:	39 d0                	cmp    %edx,%eax$/;"	l
c0100959	obj/kernel.asm	/^c0100959:	73 21                	jae    c010097c <debuginfo_eip+0x38a>$/;"	l
c010095b	obj/kernel.asm	/^c010095b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010095e	obj/kernel.asm	/^c010095e:	89 c2                	mov    %eax,%edx$/;"	l
c0100960	obj/kernel.asm	/^c0100960:	89 d0                	mov    %edx,%eax$/;"	l
c0100962	obj/kernel.asm	/^c0100962:	01 c0                	add    %eax,%eax$/;"	l
c0100964	obj/kernel.asm	/^c0100964:	01 d0                	add    %edx,%eax$/;"	l
c0100966	obj/kernel.asm	/^c0100966:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100969	obj/kernel.asm	/^c0100969:	89 c2                	mov    %eax,%edx$/;"	l
c010096b	obj/kernel.asm	/^c010096b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010096e	obj/kernel.asm	/^c010096e:	01 d0                	add    %edx,%eax$/;"	l
c0100970	obj/kernel.asm	/^c0100970:	8b 10                	mov    (%eax),%edx$/;"	l
c0100972	obj/kernel.asm	/^c0100972:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100975	obj/kernel.asm	/^c0100975:	01 c2                	add    %eax,%edx$/;"	l
c0100977	obj/kernel.asm	/^c0100977:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010097a	obj/kernel.asm	/^c010097a:	89 10                	mov    %edx,(%eax)$/;"	l
c010097c	obj/kernel.asm	/^c010097c:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010097f	obj/kernel.asm	/^c010097f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100982	obj/kernel.asm	/^c0100982:	39 c2                	cmp    %eax,%edx$/;"	l
c0100984	obj/kernel.asm	/^c0100984:	7d 4a                	jge    c01009d0 <debuginfo_eip+0x3de>$/;"	l
c0100986	obj/kernel.asm	/^c0100986:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100989	obj/kernel.asm	/^c0100989:	83 c0 01             	add    $0x1,%eax$/;"	l
c010098c	obj/kernel.asm	/^c010098c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010098f	obj/kernel.asm	/^c010098f:	eb 18                	jmp    c01009a9 <debuginfo_eip+0x3b7>$/;"	l
c0100991	obj/kernel.asm	/^c0100991:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100994	obj/kernel.asm	/^c0100994:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0100997	obj/kernel.asm	/^c0100997:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010099a	obj/kernel.asm	/^c010099a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010099d	obj/kernel.asm	/^c010099d:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c01009a0	obj/kernel.asm	/^c01009a0:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01009a3	obj/kernel.asm	/^c01009a3:	83 c0 01             	add    $0x1,%eax$/;"	l
c01009a6	obj/kernel.asm	/^c01009a6:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01009a9	obj/kernel.asm	/^c01009a9:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01009ac	obj/kernel.asm	/^c01009ac:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01009af	obj/kernel.asm	/^c01009af:	39 c2                	cmp    %eax,%edx$/;"	l
c01009b1	obj/kernel.asm	/^c01009b1:	7d 1d                	jge    c01009d0 <debuginfo_eip+0x3de>$/;"	l
c01009b3	obj/kernel.asm	/^c01009b3:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01009b6	obj/kernel.asm	/^c01009b6:	89 c2                	mov    %eax,%edx$/;"	l
c01009b8	obj/kernel.asm	/^c01009b8:	89 d0                	mov    %edx,%eax$/;"	l
c01009ba	obj/kernel.asm	/^c01009ba:	01 c0                	add    %eax,%eax$/;"	l
c01009bc	obj/kernel.asm	/^c01009bc:	01 d0                	add    %edx,%eax$/;"	l
c01009be	obj/kernel.asm	/^c01009be:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01009c1	obj/kernel.asm	/^c01009c1:	89 c2                	mov    %eax,%edx$/;"	l
c01009c3	obj/kernel.asm	/^c01009c3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01009c6	obj/kernel.asm	/^c01009c6:	01 d0                	add    %edx,%eax$/;"	l
c01009c8	obj/kernel.asm	/^c01009c8:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01009cc	obj/kernel.asm	/^c01009cc:	3c a0                	cmp    $0xa0,%al$/;"	l
c01009ce	obj/kernel.asm	/^c01009ce:	74 c1                	je     c0100991 <debuginfo_eip+0x39f>$/;"	l
c01009d0	obj/kernel.asm	/^c01009d0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01009d5	obj/kernel.asm	/^c01009d5:	c9                   	leave  $/;"	l
c01009d6	obj/kernel.asm	/^c01009d6:	c3                   	ret    $/;"	l
c01009d7	obj/kernel.asm	/^c01009d7 <print_kerninfo>:$/;"	l
c01009d7	obj/kernel.asm	/^c01009d7:	55                   	push   %ebp$/;"	l
c01009d8	obj/kernel.asm	/^c01009d8:	89 e5                	mov    %esp,%ebp$/;"	l
c01009da	obj/kernel.asm	/^c01009da:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01009dd	obj/kernel.asm	/^c01009dd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01009e0	obj/kernel.asm	/^c01009e0:	68 f2 bb 10 c0       	push   $0xc010bbf2$/;"	l
c01009e5	obj/kernel.asm	/^c01009e5:	e8 90 f8 ff ff       	call   c010027a <cprintf>$/;"	l
c01009ea	obj/kernel.asm	/^c01009ea:	83 c4 10             	add    $0x10,%esp$/;"	l
c01009ed	obj/kernel.asm	/^c01009ed:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01009f0	obj/kernel.asm	/^c01009f0:	68 2a 00 10 c0       	push   $0xc010002a$/;"	l
c01009f5	obj/kernel.asm	/^c01009f5:	68 0b bc 10 c0       	push   $0xc010bc0b$/;"	l
c01009fa	obj/kernel.asm	/^c01009fa:	e8 7b f8 ff ff       	call   c010027a <cprintf>$/;"	l
c01009ff	obj/kernel.asm	/^c01009ff:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a02	obj/kernel.asm	/^c0100a02:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100a05	obj/kernel.asm	/^c0100a05:	68 d0 ba 10 c0       	push   $0xc010bad0$/;"	l
c0100a0a	obj/kernel.asm	/^c0100a0a:	68 23 bc 10 c0       	push   $0xc010bc23$/;"	l
c0100a0f	obj/kernel.asm	/^c0100a0f:	e8 66 f8 ff ff       	call   c010027a <cprintf>$/;"	l
c0100a14	obj/kernel.asm	/^c0100a14:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a17	obj/kernel.asm	/^c0100a17:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100a1a	obj/kernel.asm	/^c0100a1a:	68 3c dd 1a c0       	push   $0xc01add3c$/;"	l
c0100a1f	obj/kernel.asm	/^c0100a1f:	68 3b bc 10 c0       	push   $0xc010bc3b$/;"	l
c0100a24	obj/kernel.asm	/^c0100a24:	e8 51 f8 ff ff       	call   c010027a <cprintf>$/;"	l
c0100a29	obj/kernel.asm	/^c0100a29:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a2c	obj/kernel.asm	/^c0100a2c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100a2f	obj/kernel.asm	/^c0100a2f:	68 00 10 1b c0       	push   $0xc01b1000$/;"	l
c0100a34	obj/kernel.asm	/^c0100a34:	68 53 bc 10 c0       	push   $0xc010bc53$/;"	l
c0100a39	obj/kernel.asm	/^c0100a39:	e8 3c f8 ff ff       	call   c010027a <cprintf>$/;"	l
c0100a3e	obj/kernel.asm	/^c0100a3e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a41	obj/kernel.asm	/^c0100a41:	b8 00 10 1b c0       	mov    $0xc01b1000,%eax$/;"	l
c0100a46	obj/kernel.asm	/^c0100a46:	05 ff 03 00 00       	add    $0x3ff,%eax$/;"	l
c0100a4b	obj/kernel.asm	/^c0100a4b:	ba 2a 00 10 c0       	mov    $0xc010002a,%edx$/;"	l
c0100a50	obj/kernel.asm	/^c0100a50:	29 d0                	sub    %edx,%eax$/;"	l
c0100a52	obj/kernel.asm	/^c0100a52:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
c0100a58	obj/kernel.asm	/^c0100a58:	85 c0                	test   %eax,%eax$/;"	l
c0100a5a	obj/kernel.asm	/^c0100a5a:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c0100a5d	obj/kernel.asm	/^c0100a5d:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
c0100a60	obj/kernel.asm	/^c0100a60:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100a63	obj/kernel.asm	/^c0100a63:	50                   	push   %eax$/;"	l
c0100a64	obj/kernel.asm	/^c0100a64:	68 6c bc 10 c0       	push   $0xc010bc6c$/;"	l
c0100a69	obj/kernel.asm	/^c0100a69:	e8 0c f8 ff ff       	call   c010027a <cprintf>$/;"	l
c0100a6e	obj/kernel.asm	/^c0100a6e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a71	obj/kernel.asm	/^c0100a71:	c9                   	leave  $/;"	l
c0100a72	obj/kernel.asm	/^c0100a72:	c3                   	ret    $/;"	l
c0100a73	obj/kernel.asm	/^c0100a73 <print_debuginfo>:$/;"	l
c0100a73	obj/kernel.asm	/^c0100a73:	55                   	push   %ebp$/;"	l
c0100a74	obj/kernel.asm	/^c0100a74:	89 e5                	mov    %esp,%ebp$/;"	l
c0100a76	obj/kernel.asm	/^c0100a76:	81 ec 28 01 00 00    	sub    $0x128,%esp$/;"	l
c0100a7c	obj/kernel.asm	/^c0100a7c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100a7f	obj/kernel.asm	/^c0100a7f:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0100a82	obj/kernel.asm	/^c0100a82:	50                   	push   %eax$/;"	l
c0100a83	obj/kernel.asm	/^c0100a83:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100a86	obj/kernel.asm	/^c0100a86:	e8 67 fb ff ff       	call   c01005f2 <debuginfo_eip>$/;"	l
c0100a8b	obj/kernel.asm	/^c0100a8b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100a8e	obj/kernel.asm	/^c0100a8e:	85 c0                	test   %eax,%eax$/;"	l
c0100a90	obj/kernel.asm	/^c0100a90:	74 15                	je     c0100aa7 <print_debuginfo+0x34>$/;"	l
c0100a92	obj/kernel.asm	/^c0100a92:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100a95	obj/kernel.asm	/^c0100a95:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100a98	obj/kernel.asm	/^c0100a98:	68 96 bc 10 c0       	push   $0xc010bc96$/;"	l
c0100a9d	obj/kernel.asm	/^c0100a9d:	e8 d8 f7 ff ff       	call   c010027a <cprintf>$/;"	l
c0100aa2	obj/kernel.asm	/^c0100aa2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100aa5	obj/kernel.asm	/^c0100aa5:	eb 65                	jmp    c0100b0c <print_debuginfo+0x99>$/;"	l
c0100aa7	obj/kernel.asm	/^c0100aa7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100aae	obj/kernel.asm	/^c0100aae:	eb 1c                	jmp    c0100acc <print_debuginfo+0x59>$/;"	l
c0100ab0	obj/kernel.asm	/^c0100ab0:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0100ab3	obj/kernel.asm	/^c0100ab3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100ab6	obj/kernel.asm	/^c0100ab6:	01 d0                	add    %edx,%eax$/;"	l
c0100ab8	obj/kernel.asm	/^c0100ab8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100abb	obj/kernel.asm	/^c0100abb:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0100ac1	obj/kernel.asm	/^c0100ac1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100ac4	obj/kernel.asm	/^c0100ac4:	01 ca                	add    %ecx,%edx$/;"	l
c0100ac6	obj/kernel.asm	/^c0100ac6:	88 02                	mov    %al,(%edx)$/;"	l
c0100ac8	obj/kernel.asm	/^c0100ac8:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100acc	obj/kernel.asm	/^c0100acc:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100acf	obj/kernel.asm	/^c0100acf:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0100ad2	obj/kernel.asm	/^c0100ad2:	7f dc                	jg     c0100ab0 <print_debuginfo+0x3d>$/;"	l
c0100ad4	obj/kernel.asm	/^c0100ad4:	8d 95 dc fe ff ff    	lea    -0x124(%ebp),%edx$/;"	l
c0100ada	obj/kernel.asm	/^c0100ada:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100add	obj/kernel.asm	/^c0100add:	01 d0                	add    %edx,%eax$/;"	l
c0100adf	obj/kernel.asm	/^c0100adf:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100ae2	obj/kernel.asm	/^c0100ae2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100ae5	obj/kernel.asm	/^c0100ae5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100ae8	obj/kernel.asm	/^c0100ae8:	89 d1                	mov    %edx,%ecx$/;"	l
c0100aea	obj/kernel.asm	/^c0100aea:	29 c1                	sub    %eax,%ecx$/;"	l
c0100aec	obj/kernel.asm	/^c0100aec:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0100aef	obj/kernel.asm	/^c0100aef:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100af2	obj/kernel.asm	/^c0100af2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100af5	obj/kernel.asm	/^c0100af5:	51                   	push   %ecx$/;"	l
c0100af6	obj/kernel.asm	/^c0100af6:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0100afc	obj/kernel.asm	/^c0100afc:	51                   	push   %ecx$/;"	l
c0100afd	obj/kernel.asm	/^c0100afd:	52                   	push   %edx$/;"	l
c0100afe	obj/kernel.asm	/^c0100afe:	50                   	push   %eax$/;"	l
c0100aff	obj/kernel.asm	/^c0100aff:	68 b2 bc 10 c0       	push   $0xc010bcb2$/;"	l
c0100b04	obj/kernel.asm	/^c0100b04:	e8 71 f7 ff ff       	call   c010027a <cprintf>$/;"	l
c0100b09	obj/kernel.asm	/^c0100b09:	83 c4 20             	add    $0x20,%esp$/;"	l
c0100b0c	obj/kernel.asm	/^c0100b0c:	c9                   	leave  $/;"	l
c0100b0d	obj/kernel.asm	/^c0100b0d:	c3                   	ret    $/;"	l
c0100b0e	obj/kernel.asm	/^c0100b0e <read_eip>:$/;"	l
c0100b0e	obj/kernel.asm	/^c0100b0e:	55                   	push   %ebp$/;"	l
c0100b0f	obj/kernel.asm	/^c0100b0f:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b11	obj/kernel.asm	/^c0100b11:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0100b14	obj/kernel.asm	/^c0100b14:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
c0100b17	obj/kernel.asm	/^c0100b17:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100b1a	obj/kernel.asm	/^c0100b1a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100b1d	obj/kernel.asm	/^c0100b1d:	c9                   	leave  $/;"	l
c0100b1e	obj/kernel.asm	/^c0100b1e:	c3                   	ret    $/;"	l
c0100b1f	obj/kernel.asm	/^c0100b1f <print_stackframe>:$/;"	l
c0100b1f	obj/kernel.asm	/^c0100b1f:	55                   	push   %ebp$/;"	l
c0100b20	obj/kernel.asm	/^c0100b20:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b22	obj/kernel.asm	/^c0100b22:	5d                   	pop    %ebp$/;"	l
c0100b23	obj/kernel.asm	/^c0100b23:	c3                   	ret    $/;"	l
c0100b24	obj/kernel.asm	/^c0100b24 <parse>:$/;"	l
c0100b24	obj/kernel.asm	/^c0100b24:	55                   	push   %ebp$/;"	l
c0100b25	obj/kernel.asm	/^c0100b25:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b27	obj/kernel.asm	/^c0100b27:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100b2a	obj/kernel.asm	/^c0100b2a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100b31	obj/kernel.asm	/^c0100b31:	eb 0c                	jmp    c0100b3f <parse+0x1b>$/;"	l
c0100b33	obj/kernel.asm	/^c0100b33:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b36	obj/kernel.asm	/^c0100b36:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100b39	obj/kernel.asm	/^c0100b39:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0100b3c	obj/kernel.asm	/^c0100b3c:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100b3f	obj/kernel.asm	/^c0100b3f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b42	obj/kernel.asm	/^c0100b42:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100b45	obj/kernel.asm	/^c0100b45:	84 c0                	test   %al,%al$/;"	l
c0100b47	obj/kernel.asm	/^c0100b47:	74 1e                	je     c0100b67 <parse+0x43>$/;"	l
c0100b49	obj/kernel.asm	/^c0100b49:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b4c	obj/kernel.asm	/^c0100b4c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100b4f	obj/kernel.asm	/^c0100b4f:	0f be c0             	movsbl %al,%eax$/;"	l
c0100b52	obj/kernel.asm	/^c0100b52:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100b55	obj/kernel.asm	/^c0100b55:	50                   	push   %eax$/;"	l
c0100b56	obj/kernel.asm	/^c0100b56:	68 44 bd 10 c0       	push   $0xc010bd44$/;"	l
c0100b5b	obj/kernel.asm	/^c0100b5b:	e8 24 a5 00 00       	call   c010b084 <strchr>$/;"	l
c0100b60	obj/kernel.asm	/^c0100b60:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b63	obj/kernel.asm	/^c0100b63:	85 c0                	test   %eax,%eax$/;"	l
c0100b65	obj/kernel.asm	/^c0100b65:	75 cc                	jne    c0100b33 <parse+0xf>$/;"	l
c0100b67	obj/kernel.asm	/^c0100b67:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100b6a	obj/kernel.asm	/^c0100b6a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100b6d	obj/kernel.asm	/^c0100b6d:	84 c0                	test   %al,%al$/;"	l
c0100b6f	obj/kernel.asm	/^c0100b6f:	75 02                	jne    c0100b73 <parse+0x4f>$/;"	l
c0100b71	obj/kernel.asm	/^c0100b71:	eb 65                	jmp    c0100bd8 <parse+0xb4>$/;"	l
c0100b73	obj/kernel.asm	/^c0100b73:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)$/;"	l
c0100b77	obj/kernel.asm	/^c0100b77:	75 12                	jne    c0100b8b <parse+0x67>$/;"	l
c0100b79	obj/kernel.asm	/^c0100b79:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100b7c	obj/kernel.asm	/^c0100b7c:	6a 10                	push   $0x10$/;"	l
c0100b7e	obj/kernel.asm	/^c0100b7e:	68 49 bd 10 c0       	push   $0xc010bd49$/;"	l
c0100b83	obj/kernel.asm	/^c0100b83:	e8 f2 f6 ff ff       	call   c010027a <cprintf>$/;"	l
c0100b88	obj/kernel.asm	/^c0100b88:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b8b	obj/kernel.asm	/^c0100b8b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100b8e	obj/kernel.asm	/^c0100b8e:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100b91	obj/kernel.asm	/^c0100b91:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0100b94	obj/kernel.asm	/^c0100b94:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0100b9b	obj/kernel.asm	/^c0100b9b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100b9e	obj/kernel.asm	/^c0100b9e:	01 c2                	add    %eax,%edx$/;"	l
c0100ba0	obj/kernel.asm	/^c0100ba0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100ba3	obj/kernel.asm	/^c0100ba3:	89 02                	mov    %eax,(%edx)$/;"	l
c0100ba5	obj/kernel.asm	/^c0100ba5:	eb 04                	jmp    c0100bab <parse+0x87>$/;"	l
c0100ba7	obj/kernel.asm	/^c0100ba7:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0100bab	obj/kernel.asm	/^c0100bab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100bae	obj/kernel.asm	/^c0100bae:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100bb1	obj/kernel.asm	/^c0100bb1:	84 c0                	test   %al,%al$/;"	l
c0100bb3	obj/kernel.asm	/^c0100bb3:	74 1e                	je     c0100bd3 <parse+0xaf>$/;"	l
c0100bb5	obj/kernel.asm	/^c0100bb5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100bb8	obj/kernel.asm	/^c0100bb8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100bbb	obj/kernel.asm	/^c0100bbb:	0f be c0             	movsbl %al,%eax$/;"	l
c0100bbe	obj/kernel.asm	/^c0100bbe:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100bc1	obj/kernel.asm	/^c0100bc1:	50                   	push   %eax$/;"	l
c0100bc2	obj/kernel.asm	/^c0100bc2:	68 44 bd 10 c0       	push   $0xc010bd44$/;"	l
c0100bc7	obj/kernel.asm	/^c0100bc7:	e8 b8 a4 00 00       	call   c010b084 <strchr>$/;"	l
c0100bcc	obj/kernel.asm	/^c0100bcc:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100bcf	obj/kernel.asm	/^c0100bcf:	85 c0                	test   %eax,%eax$/;"	l
c0100bd1	obj/kernel.asm	/^c0100bd1:	74 d4                	je     c0100ba7 <parse+0x83>$/;"	l
c0100bd3	obj/kernel.asm	/^c0100bd3:	e9 59 ff ff ff       	jmp    c0100b31 <parse+0xd>$/;"	l
c0100bd8	obj/kernel.asm	/^c0100bd8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100bdb	obj/kernel.asm	/^c0100bdb:	c9                   	leave  $/;"	l
c0100bdc	obj/kernel.asm	/^c0100bdc:	c3                   	ret    $/;"	l
c0100bdd	obj/kernel.asm	/^c0100bdd <runcmd>:$/;"	l
c0100bdd	obj/kernel.asm	/^c0100bdd:	55                   	push   %ebp$/;"	l
c0100bde	obj/kernel.asm	/^c0100bde:	89 e5                	mov    %esp,%ebp$/;"	l
c0100be0	obj/kernel.asm	/^c0100be0:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0100be3	obj/kernel.asm	/^c0100be3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100be6	obj/kernel.asm	/^c0100be6:	8d 45 b0             	lea    -0x50(%ebp),%eax$/;"	l
c0100be9	obj/kernel.asm	/^c0100be9:	50                   	push   %eax$/;"	l
c0100bea	obj/kernel.asm	/^c0100bea:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100bed	obj/kernel.asm	/^c0100bed:	e8 32 ff ff ff       	call   c0100b24 <parse>$/;"	l
c0100bf2	obj/kernel.asm	/^c0100bf2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100bf5	obj/kernel.asm	/^c0100bf5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100bf8	obj/kernel.asm	/^c0100bf8:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0100bfc	obj/kernel.asm	/^c0100bfc:	75 0a                	jne    c0100c08 <runcmd+0x2b>$/;"	l
c0100bfe	obj/kernel.asm	/^c0100bfe:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100c03	obj/kernel.asm	/^c0100c03:	e9 84 00 00 00       	jmp    c0100c8c <runcmd+0xaf>$/;"	l
c0100c08	obj/kernel.asm	/^c0100c08:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100c0f	obj/kernel.asm	/^c0100c0f:	eb 5a                	jmp    c0100c6b <runcmd+0x8e>$/;"	l
c0100c11	obj/kernel.asm	/^c0100c11:	8b 4d b0             	mov    -0x50(%ebp),%ecx$/;"	l
c0100c14	obj/kernel.asm	/^c0100c14:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100c17	obj/kernel.asm	/^c0100c17:	89 d0                	mov    %edx,%eax$/;"	l
c0100c19	obj/kernel.asm	/^c0100c19:	01 c0                	add    %eax,%eax$/;"	l
c0100c1b	obj/kernel.asm	/^c0100c1b:	01 d0                	add    %edx,%eax$/;"	l
c0100c1d	obj/kernel.asm	/^c0100c1d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100c20	obj/kernel.asm	/^c0100c20:	05 20 c0 12 c0       	add    $0xc012c020,%eax$/;"	l
c0100c25	obj/kernel.asm	/^c0100c25:	8b 00                	mov    (%eax),%eax$/;"	l
c0100c27	obj/kernel.asm	/^c0100c27:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100c2a	obj/kernel.asm	/^c0100c2a:	51                   	push   %ecx$/;"	l
c0100c2b	obj/kernel.asm	/^c0100c2b:	50                   	push   %eax$/;"	l
c0100c2c	obj/kernel.asm	/^c0100c2c:	e8 b3 a3 00 00       	call   c010afe4 <strcmp>$/;"	l
c0100c31	obj/kernel.asm	/^c0100c31:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100c34	obj/kernel.asm	/^c0100c34:	85 c0                	test   %eax,%eax$/;"	l
c0100c36	obj/kernel.asm	/^c0100c36:	75 2f                	jne    c0100c67 <runcmd+0x8a>$/;"	l
c0100c38	obj/kernel.asm	/^c0100c38:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100c3b	obj/kernel.asm	/^c0100c3b:	89 d0                	mov    %edx,%eax$/;"	l
c0100c3d	obj/kernel.asm	/^c0100c3d:	01 c0                	add    %eax,%eax$/;"	l
c0100c3f	obj/kernel.asm	/^c0100c3f:	01 d0                	add    %edx,%eax$/;"	l
c0100c41	obj/kernel.asm	/^c0100c41:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100c44	obj/kernel.asm	/^c0100c44:	05 20 c0 12 c0       	add    $0xc012c020,%eax$/;"	l
c0100c49	obj/kernel.asm	/^c0100c49:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100c4c	obj/kernel.asm	/^c0100c4c:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100c4f	obj/kernel.asm	/^c0100c4f:	83 ea 01             	sub    $0x1,%edx$/;"	l
c0100c52	obj/kernel.asm	/^c0100c52:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100c55	obj/kernel.asm	/^c0100c55:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0100c58	obj/kernel.asm	/^c0100c58:	8d 4d b0             	lea    -0x50(%ebp),%ecx$/;"	l
c0100c5b	obj/kernel.asm	/^c0100c5b:	83 c1 04             	add    $0x4,%ecx$/;"	l
c0100c5e	obj/kernel.asm	/^c0100c5e:	51                   	push   %ecx$/;"	l
c0100c5f	obj/kernel.asm	/^c0100c5f:	52                   	push   %edx$/;"	l
c0100c60	obj/kernel.asm	/^c0100c60:	ff d0                	call   *%eax$/;"	l
c0100c62	obj/kernel.asm	/^c0100c62:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100c65	obj/kernel.asm	/^c0100c65:	eb 25                	jmp    c0100c8c <runcmd+0xaf>$/;"	l
c0100c67	obj/kernel.asm	/^c0100c67:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100c6b	obj/kernel.asm	/^c0100c6b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100c6e	obj/kernel.asm	/^c0100c6e:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100c71	obj/kernel.asm	/^c0100c71:	76 9e                	jbe    c0100c11 <runcmd+0x34>$/;"	l
c0100c73	obj/kernel.asm	/^c0100c73:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0100c76	obj/kernel.asm	/^c0100c76:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100c79	obj/kernel.asm	/^c0100c79:	50                   	push   %eax$/;"	l
c0100c7a	obj/kernel.asm	/^c0100c7a:	68 67 bd 10 c0       	push   $0xc010bd67$/;"	l
c0100c7f	obj/kernel.asm	/^c0100c7f:	e8 f6 f5 ff ff       	call   c010027a <cprintf>$/;"	l
c0100c84	obj/kernel.asm	/^c0100c84:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100c87	obj/kernel.asm	/^c0100c87:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100c8c	obj/kernel.asm	/^c0100c8c:	c9                   	leave  $/;"	l
c0100c8d	obj/kernel.asm	/^c0100c8d:	c3                   	ret    $/;"	l
c0100c8e	obj/kernel.asm	/^c0100c8e <kmonitor>:$/;"	l
c0100c8e	obj/kernel.asm	/^c0100c8e:	55                   	push   %ebp$/;"	l
c0100c8f	obj/kernel.asm	/^c0100c8f:	89 e5                	mov    %esp,%ebp$/;"	l
c0100c91	obj/kernel.asm	/^c0100c91:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100c94	obj/kernel.asm	/^c0100c94:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100c97	obj/kernel.asm	/^c0100c97:	68 80 bd 10 c0       	push   $0xc010bd80$/;"	l
c0100c9c	obj/kernel.asm	/^c0100c9c:	e8 d9 f5 ff ff       	call   c010027a <cprintf>$/;"	l
c0100ca1	obj/kernel.asm	/^c0100ca1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100ca4	obj/kernel.asm	/^c0100ca4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100ca7	obj/kernel.asm	/^c0100ca7:	68 a8 bd 10 c0       	push   $0xc010bda8$/;"	l
c0100cac	obj/kernel.asm	/^c0100cac:	e8 c9 f5 ff ff       	call   c010027a <cprintf>$/;"	l
c0100cb1	obj/kernel.asm	/^c0100cb1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100cb4	obj/kernel.asm	/^c0100cb4:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100cb8	obj/kernel.asm	/^c0100cb8:	74 0e                	je     c0100cc8 <kmonitor+0x3a>$/;"	l
c0100cba	obj/kernel.asm	/^c0100cba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100cbd	obj/kernel.asm	/^c0100cbd:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100cc0	obj/kernel.asm	/^c0100cc0:	e8 4d 17 00 00       	call   c0102412 <print_trapframe>$/;"	l
c0100cc5	obj/kernel.asm	/^c0100cc5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100cc8	obj/kernel.asm	/^c0100cc8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100ccb	obj/kernel.asm	/^c0100ccb:	68 cd bd 10 c0       	push   $0xc010bdcd$/;"	l
c0100cd0	obj/kernel.asm	/^c0100cd0:	e8 48 f6 ff ff       	call   c010031d <readline>$/;"	l
c0100cd5	obj/kernel.asm	/^c0100cd5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100cd8	obj/kernel.asm	/^c0100cd8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100cdb	obj/kernel.asm	/^c0100cdb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100cdf	obj/kernel.asm	/^c0100cdf:	74 17                	je     c0100cf8 <kmonitor+0x6a>$/;"	l
c0100ce1	obj/kernel.asm	/^c0100ce1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100ce4	obj/kernel.asm	/^c0100ce4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100ce7	obj/kernel.asm	/^c0100ce7:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100cea	obj/kernel.asm	/^c0100cea:	e8 ee fe ff ff       	call   c0100bdd <runcmd>$/;"	l
c0100cef	obj/kernel.asm	/^c0100cef:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100cf2	obj/kernel.asm	/^c0100cf2:	85 c0                	test   %eax,%eax$/;"	l
c0100cf4	obj/kernel.asm	/^c0100cf4:	79 02                	jns    c0100cf8 <kmonitor+0x6a>$/;"	l
c0100cf6	obj/kernel.asm	/^c0100cf6:	eb 02                	jmp    c0100cfa <kmonitor+0x6c>$/;"	l
c0100cf8	obj/kernel.asm	/^c0100cf8:	eb ce                	jmp    c0100cc8 <kmonitor+0x3a>$/;"	l
c0100cfa	obj/kernel.asm	/^c0100cfa:	c9                   	leave  $/;"	l
c0100cfb	obj/kernel.asm	/^c0100cfb:	c3                   	ret    $/;"	l
c0100cfc	obj/kernel.asm	/^c0100cfc <mon_help>:$/;"	l
c0100cfc	obj/kernel.asm	/^c0100cfc:	55                   	push   %ebp$/;"	l
c0100cfd	obj/kernel.asm	/^c0100cfd:	89 e5                	mov    %esp,%ebp$/;"	l
c0100cff	obj/kernel.asm	/^c0100cff:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100d02	obj/kernel.asm	/^c0100d02:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100d09	obj/kernel.asm	/^c0100d09:	eb 3d                	jmp    c0100d48 <mon_help+0x4c>$/;"	l
c0100d0b	obj/kernel.asm	/^c0100d0b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100d0e	obj/kernel.asm	/^c0100d0e:	89 d0                	mov    %edx,%eax$/;"	l
c0100d10	obj/kernel.asm	/^c0100d10:	01 c0                	add    %eax,%eax$/;"	l
c0100d12	obj/kernel.asm	/^c0100d12:	01 d0                	add    %edx,%eax$/;"	l
c0100d14	obj/kernel.asm	/^c0100d14:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d17	obj/kernel.asm	/^c0100d17:	05 20 c0 12 c0       	add    $0xc012c020,%eax$/;"	l
c0100d1c	obj/kernel.asm	/^c0100d1c:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c0100d1f	obj/kernel.asm	/^c0100d1f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100d22	obj/kernel.asm	/^c0100d22:	89 d0                	mov    %edx,%eax$/;"	l
c0100d24	obj/kernel.asm	/^c0100d24:	01 c0                	add    %eax,%eax$/;"	l
c0100d26	obj/kernel.asm	/^c0100d26:	01 d0                	add    %edx,%eax$/;"	l
c0100d28	obj/kernel.asm	/^c0100d28:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100d2b	obj/kernel.asm	/^c0100d2b:	05 20 c0 12 c0       	add    $0xc012c020,%eax$/;"	l
c0100d30	obj/kernel.asm	/^c0100d30:	8b 00                	mov    (%eax),%eax$/;"	l
c0100d32	obj/kernel.asm	/^c0100d32:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100d35	obj/kernel.asm	/^c0100d35:	51                   	push   %ecx$/;"	l
c0100d36	obj/kernel.asm	/^c0100d36:	50                   	push   %eax$/;"	l
c0100d37	obj/kernel.asm	/^c0100d37:	68 d1 bd 10 c0       	push   $0xc010bdd1$/;"	l
c0100d3c	obj/kernel.asm	/^c0100d3c:	e8 39 f5 ff ff       	call   c010027a <cprintf>$/;"	l
c0100d41	obj/kernel.asm	/^c0100d41:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100d44	obj/kernel.asm	/^c0100d44:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100d48	obj/kernel.asm	/^c0100d48:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100d4b	obj/kernel.asm	/^c0100d4b:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100d4e	obj/kernel.asm	/^c0100d4e:	76 bb                	jbe    c0100d0b <mon_help+0xf>$/;"	l
c0100d50	obj/kernel.asm	/^c0100d50:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100d55	obj/kernel.asm	/^c0100d55:	c9                   	leave  $/;"	l
c0100d56	obj/kernel.asm	/^c0100d56:	c3                   	ret    $/;"	l
c0100d57	obj/kernel.asm	/^c0100d57 <mon_kerninfo>:$/;"	l
c0100d57	obj/kernel.asm	/^c0100d57:	55                   	push   %ebp$/;"	l
c0100d58	obj/kernel.asm	/^c0100d58:	89 e5                	mov    %esp,%ebp$/;"	l
c0100d5a	obj/kernel.asm	/^c0100d5a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100d5d	obj/kernel.asm	/^c0100d5d:	e8 75 fc ff ff       	call   c01009d7 <print_kerninfo>$/;"	l
c0100d62	obj/kernel.asm	/^c0100d62:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100d67	obj/kernel.asm	/^c0100d67:	c9                   	leave  $/;"	l
c0100d68	obj/kernel.asm	/^c0100d68:	c3                   	ret    $/;"	l
c0100d69	obj/kernel.asm	/^c0100d69 <mon_backtrace>:$/;"	l
c0100d69	obj/kernel.asm	/^c0100d69:	55                   	push   %ebp$/;"	l
c0100d6a	obj/kernel.asm	/^c0100d6a:	89 e5                	mov    %esp,%ebp$/;"	l
c0100d6c	obj/kernel.asm	/^c0100d6c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100d6f	obj/kernel.asm	/^c0100d6f:	e8 ab fd ff ff       	call   c0100b1f <print_stackframe>$/;"	l
c0100d74	obj/kernel.asm	/^c0100d74:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100d79	obj/kernel.asm	/^c0100d79:	c9                   	leave  $/;"	l
c0100d7a	obj/kernel.asm	/^c0100d7a:	c3                   	ret    $/;"	l
c0100d7b	obj/kernel.asm	/^c0100d7b <ide_wait_ready>:$/;"	l
c0100d7b	obj/kernel.asm	/^c0100d7b:	55                   	push   %ebp$/;"	l
c0100d7c	obj/kernel.asm	/^c0100d7c:	89 e5                	mov    %esp,%ebp$/;"	l
c0100d7e	obj/kernel.asm	/^c0100d7e:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0100d81	obj/kernel.asm	/^c0100d81:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d84	obj/kernel.asm	/^c0100d84:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c0100d88	obj/kernel.asm	/^c0100d88:	90                   	nop$/;"	l
c0100d89	obj/kernel.asm	/^c0100d89:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0100d8d	obj/kernel.asm	/^c0100d8d:	83 c0 07             	add    $0x7,%eax$/;"	l
c0100d90	obj/kernel.asm	/^c0100d90:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100d93	obj/kernel.asm	/^c0100d93:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c0100d97	obj/kernel.asm	/^c0100d97:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0100d9b	obj/kernel.asm	/^c0100d9b:	89 c2                	mov    %eax,%edx$/;"	l
c0100d9d	obj/kernel.asm	/^c0100d9d:	ec                   	in     (%dx),%al$/;"	l
c0100d9e	obj/kernel.asm	/^c0100d9e:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0100da1	obj/kernel.asm	/^c0100da1:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0100da5	obj/kernel.asm	/^c0100da5:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100da8	obj/kernel.asm	/^c0100da8:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100dab	obj/kernel.asm	/^c0100dab:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100dae	obj/kernel.asm	/^c0100dae:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
c0100db3	obj/kernel.asm	/^c0100db3:	85 c0                	test   %eax,%eax$/;"	l
c0100db5	obj/kernel.asm	/^c0100db5:	75 d2                	jne    c0100d89 <ide_wait_ready+0xe>$/;"	l
c0100db7	obj/kernel.asm	/^c0100db7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0100dbb	obj/kernel.asm	/^c0100dbb:	74 11                	je     c0100dce <ide_wait_ready+0x53>$/;"	l
c0100dbd	obj/kernel.asm	/^c0100dbd:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100dc0	obj/kernel.asm	/^c0100dc0:	83 e0 21             	and    $0x21,%eax$/;"	l
c0100dc3	obj/kernel.asm	/^c0100dc3:	85 c0                	test   %eax,%eax$/;"	l
c0100dc5	obj/kernel.asm	/^c0100dc5:	74 07                	je     c0100dce <ide_wait_ready+0x53>$/;"	l
c0100dc7	obj/kernel.asm	/^c0100dc7:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100dcc	obj/kernel.asm	/^c0100dcc:	eb 05                	jmp    c0100dd3 <ide_wait_ready+0x58>$/;"	l
c0100dce	obj/kernel.asm	/^c0100dce:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100dd3	obj/kernel.asm	/^c0100dd3:	c9                   	leave  $/;"	l
c0100dd4	obj/kernel.asm	/^c0100dd4:	c3                   	ret    $/;"	l
c0100dd5	obj/kernel.asm	/^c0100dd5 <ide_init>:$/;"	l
c0100dd5	obj/kernel.asm	/^c0100dd5:	55                   	push   %ebp$/;"	l
c0100dd6	obj/kernel.asm	/^c0100dd6:	89 e5                	mov    %esp,%ebp$/;"	l
c0100dd8	obj/kernel.asm	/^c0100dd8:	57                   	push   %edi$/;"	l
c0100dd9	obj/kernel.asm	/^c0100dd9:	53                   	push   %ebx$/;"	l
c0100dda	obj/kernel.asm	/^c0100dda:	81 ec 40 02 00 00    	sub    $0x240,%esp$/;"	l
c0100de0	obj/kernel.asm	/^c0100de0:	66 c7 45 f6 00 00    	movw   $0x0,-0xa(%ebp)$/;"	l
c0100de6	obj/kernel.asm	/^c0100de6:	e9 c1 02 00 00       	jmp    c01010ac <ide_init+0x2d7>$/;"	l
c0100deb	obj/kernel.asm	/^c0100deb:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100def	obj/kernel.asm	/^c0100def:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0100df2	obj/kernel.asm	/^c0100df2:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0100df9	obj/kernel.asm	/^c0100df9:	29 c2                	sub    %eax,%edx$/;"	l
c0100dfb	obj/kernel.asm	/^c0100dfb:	89 d0                	mov    %edx,%eax$/;"	l
c0100dfd	obj/kernel.asm	/^c0100dfd:	05 c0 e1 1a c0       	add    $0xc01ae1c0,%eax$/;"	l
c0100e02	obj/kernel.asm	/^c0100e02:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100e05	obj/kernel.asm	/^c0100e05:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100e09	obj/kernel.asm	/^c0100e09:	66 d1 e8             	shr    %ax$/;"	l
c0100e0c	obj/kernel.asm	/^c0100e0c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100e0f	obj/kernel.asm	/^c0100e0f:	0f b7 04 85 dc bd 10 	movzwl -0x3fef4224(,%eax,4),%eax$/;"	l
c0100e16	obj/kernel.asm	/^c0100e16:	c0 $/;"	l
c0100e17	obj/kernel.asm	/^c0100e17:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0100e1b	obj/kernel.asm	/^c0100e1b:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100e1f	obj/kernel.asm	/^c0100e1f:	6a 00                	push   $0x0$/;"	l
c0100e21	obj/kernel.asm	/^c0100e21:	50                   	push   %eax$/;"	l
c0100e22	obj/kernel.asm	/^c0100e22:	e8 54 ff ff ff       	call   c0100d7b <ide_wait_ready>$/;"	l
c0100e27	obj/kernel.asm	/^c0100e27:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100e2a	obj/kernel.asm	/^c0100e2a:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100e2e	obj/kernel.asm	/^c0100e2e:	83 e0 01             	and    $0x1,%eax$/;"	l
c0100e31	obj/kernel.asm	/^c0100e31:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0100e34	obj/kernel.asm	/^c0100e34:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0100e37	obj/kernel.asm	/^c0100e37:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100e3a	obj/kernel.asm	/^c0100e3a:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0100e3e	obj/kernel.asm	/^c0100e3e:	83 c2 06             	add    $0x6,%edx$/;"	l
c0100e41	obj/kernel.asm	/^c0100e41:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0100e44	obj/kernel.asm	/^c0100e44:	66 89 55 d2          	mov    %dx,-0x2e(%ebp)$/;"	l
c0100e48	obj/kernel.asm	/^c0100e48:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c0100e4b	obj/kernel.asm	/^c0100e4b:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c0100e4f	obj/kernel.asm	/^c0100e4f:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c0100e53	obj/kernel.asm	/^c0100e53:	ee                   	out    %al,(%dx)$/;"	l
c0100e54	obj/kernel.asm	/^c0100e54:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100e58	obj/kernel.asm	/^c0100e58:	6a 00                	push   $0x0$/;"	l
c0100e5a	obj/kernel.asm	/^c0100e5a:	50                   	push   %eax$/;"	l
c0100e5b	obj/kernel.asm	/^c0100e5b:	e8 1b ff ff ff       	call   c0100d7b <ide_wait_ready>$/;"	l
c0100e60	obj/kernel.asm	/^c0100e60:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100e63	obj/kernel.asm	/^c0100e63:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100e67	obj/kernel.asm	/^c0100e67:	83 c0 07             	add    $0x7,%eax$/;"	l
c0100e6a	obj/kernel.asm	/^c0100e6a:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100e6d	obj/kernel.asm	/^c0100e6d:	66 89 45 ce          	mov    %ax,-0x32(%ebp)$/;"	l
c0100e71	obj/kernel.asm	/^c0100e71:	c6 45 cd ec          	movb   $0xec,-0x33(%ebp)$/;"	l
c0100e75	obj/kernel.asm	/^c0100e75:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c0100e79	obj/kernel.asm	/^c0100e79:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c0100e7d	obj/kernel.asm	/^c0100e7d:	ee                   	out    %al,(%dx)$/;"	l
c0100e7e	obj/kernel.asm	/^c0100e7e:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100e82	obj/kernel.asm	/^c0100e82:	6a 00                	push   $0x0$/;"	l
c0100e84	obj/kernel.asm	/^c0100e84:	50                   	push   %eax$/;"	l
c0100e85	obj/kernel.asm	/^c0100e85:	e8 f1 fe ff ff       	call   c0100d7b <ide_wait_ready>$/;"	l
c0100e8a	obj/kernel.asm	/^c0100e8a:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100e8d	obj/kernel.asm	/^c0100e8d:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100e91	obj/kernel.asm	/^c0100e91:	83 c0 07             	add    $0x7,%eax$/;"	l
c0100e94	obj/kernel.asm	/^c0100e94:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100e97	obj/kernel.asm	/^c0100e97:	66 89 45 ca          	mov    %ax,-0x36(%ebp)$/;"	l
c0100e9b	obj/kernel.asm	/^c0100e9b:	0f b7 45 ca          	movzwl -0x36(%ebp),%eax$/;"	l
c0100e9f	obj/kernel.asm	/^c0100e9f:	89 c2                	mov    %eax,%edx$/;"	l
c0100ea1	obj/kernel.asm	/^c0100ea1:	ec                   	in     (%dx),%al$/;"	l
c0100ea2	obj/kernel.asm	/^c0100ea2:	88 45 c9             	mov    %al,-0x37(%ebp)$/;"	l
c0100ea5	obj/kernel.asm	/^c0100ea5:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c0100ea9	obj/kernel.asm	/^c0100ea9:	84 c0                	test   %al,%al$/;"	l
c0100eab	obj/kernel.asm	/^c0100eab:	0f 84 f0 01 00 00    	je     c01010a1 <ide_init+0x2cc>$/;"	l
c0100eb1	obj/kernel.asm	/^c0100eb1:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100eb5	obj/kernel.asm	/^c0100eb5:	6a 01                	push   $0x1$/;"	l
c0100eb7	obj/kernel.asm	/^c0100eb7:	50                   	push   %eax$/;"	l
c0100eb8	obj/kernel.asm	/^c0100eb8:	e8 be fe ff ff       	call   c0100d7b <ide_wait_ready>$/;"	l
c0100ebd	obj/kernel.asm	/^c0100ebd:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100ec0	obj/kernel.asm	/^c0100ec0:	85 c0                	test   %eax,%eax$/;"	l
c0100ec2	obj/kernel.asm	/^c0100ec2:	0f 85 d9 01 00 00    	jne    c01010a1 <ide_init+0x2cc>$/;"	l
c0100ec8	obj/kernel.asm	/^c0100ec8:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100ecc	obj/kernel.asm	/^c0100ecc:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0100ecf	obj/kernel.asm	/^c0100ecf:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0100ed6	obj/kernel.asm	/^c0100ed6:	29 c2                	sub    %eax,%edx$/;"	l
c0100ed8	obj/kernel.asm	/^c0100ed8:	89 d0                	mov    %edx,%eax$/;"	l
c0100eda	obj/kernel.asm	/^c0100eda:	05 c0 e1 1a c0       	add    $0xc01ae1c0,%eax$/;"	l
c0100edf	obj/kernel.asm	/^c0100edf:	c6 00 01             	movb   $0x1,(%eax)$/;"	l
c0100ee2	obj/kernel.asm	/^c0100ee2:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100ee6	obj/kernel.asm	/^c0100ee6:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0100ee9	obj/kernel.asm	/^c0100ee9:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c0100eef	obj/kernel.asm	/^c0100eef:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0100ef2	obj/kernel.asm	/^c0100ef2:	c7 45 bc 80 00 00 00 	movl   $0x80,-0x44(%ebp)$/;"	l
c0100ef9	obj/kernel.asm	/^c0100ef9:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0100efc	obj/kernel.asm	/^c0100efc:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
c0100eff	obj/kernel.asm	/^c0100eff:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0100f02	obj/kernel.asm	/^c0100f02:	89 cb                	mov    %ecx,%ebx$/;"	l
c0100f04	obj/kernel.asm	/^c0100f04:	89 df                	mov    %ebx,%edi$/;"	l
c0100f06	obj/kernel.asm	/^c0100f06:	89 c1                	mov    %eax,%ecx$/;"	l
c0100f08	obj/kernel.asm	/^c0100f08:	fc                   	cld    $/;"	l
c0100f09	obj/kernel.asm	/^c0100f09:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c0100f0b	obj/kernel.asm	/^c0100f0b:	89 c8                	mov    %ecx,%eax$/;"	l
c0100f0d	obj/kernel.asm	/^c0100f0d:	89 fb                	mov    %edi,%ebx$/;"	l
c0100f0f	obj/kernel.asm	/^c0100f0f:	89 5d c0             	mov    %ebx,-0x40(%ebp)$/;"	l
c0100f12	obj/kernel.asm	/^c0100f12:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0100f15	obj/kernel.asm	/^c0100f15:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c0100f1b	obj/kernel.asm	/^c0100f1b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0100f1e	obj/kernel.asm	/^c0100f1e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100f21	obj/kernel.asm	/^c0100f21:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax$/;"	l
c0100f27	obj/kernel.asm	/^c0100f27:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100f2a	obj/kernel.asm	/^c0100f2a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100f2d	obj/kernel.asm	/^c0100f2d:	25 00 00 00 04       	and    $0x4000000,%eax$/;"	l
c0100f32	obj/kernel.asm	/^c0100f32:	85 c0                	test   %eax,%eax$/;"	l
c0100f34	obj/kernel.asm	/^c0100f34:	74 0e                	je     c0100f44 <ide_init+0x16f>$/;"	l
c0100f36	obj/kernel.asm	/^c0100f36:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100f39	obj/kernel.asm	/^c0100f39:	8b 80 c8 00 00 00    	mov    0xc8(%eax),%eax$/;"	l
c0100f3f	obj/kernel.asm	/^c0100f3f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100f42	obj/kernel.asm	/^c0100f42:	eb 09                	jmp    c0100f4d <ide_init+0x178>$/;"	l
c0100f44	obj/kernel.asm	/^c0100f44:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100f47	obj/kernel.asm	/^c0100f47:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0100f4a	obj/kernel.asm	/^c0100f4a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100f4d	obj/kernel.asm	/^c0100f4d:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100f51	obj/kernel.asm	/^c0100f51:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0100f54	obj/kernel.asm	/^c0100f54:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0100f5b	obj/kernel.asm	/^c0100f5b:	29 c2                	sub    %eax,%edx$/;"	l
c0100f5d	obj/kernel.asm	/^c0100f5d:	89 d0                	mov    %edx,%eax$/;"	l
c0100f5f	obj/kernel.asm	/^c0100f5f:	8d 90 c0 e1 1a c0    	lea    -0x3fe51e40(%eax),%edx$/;"	l
c0100f65	obj/kernel.asm	/^c0100f65:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100f68	obj/kernel.asm	/^c0100f68:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c0100f6b	obj/kernel.asm	/^c0100f6b:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100f6f	obj/kernel.asm	/^c0100f6f:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0100f72	obj/kernel.asm	/^c0100f72:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0100f79	obj/kernel.asm	/^c0100f79:	29 c2                	sub    %eax,%edx$/;"	l
c0100f7b	obj/kernel.asm	/^c0100f7b:	89 d0                	mov    %edx,%eax$/;"	l
c0100f7d	obj/kernel.asm	/^c0100f7d:	8d 90 c0 e1 1a c0    	lea    -0x3fe51e40(%eax),%edx$/;"	l
c0100f83	obj/kernel.asm	/^c0100f83:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100f86	obj/kernel.asm	/^c0100f86:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c0100f89	obj/kernel.asm	/^c0100f89:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100f8c	obj/kernel.asm	/^c0100f8c:	83 c0 62             	add    $0x62,%eax$/;"	l
c0100f8f	obj/kernel.asm	/^c0100f8f:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c0100f92	obj/kernel.asm	/^c0100f92:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100f95	obj/kernel.asm	/^c0100f95:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0100f9a	obj/kernel.asm	/^c0100f9a:	85 c0                	test   %eax,%eax$/;"	l
c0100f9c	obj/kernel.asm	/^c0100f9c:	75 16                	jne    c0100fb4 <ide_init+0x1df>$/;"	l
c0100f9e	obj/kernel.asm	/^c0100f9e:	68 e4 bd 10 c0       	push   $0xc010bde4$/;"	l
c0100fa3	obj/kernel.asm	/^c0100fa3:	68 27 be 10 c0       	push   $0xc010be27$/;"	l
c0100fa8	obj/kernel.asm	/^c0100fa8:	6a 7d                	push   $0x7d$/;"	l
c0100faa	obj/kernel.asm	/^c0100faa:	68 3c be 10 c0       	push   $0xc010be3c$/;"	l
c0100faf	obj/kernel.asm	/^c0100faf:	e8 2b f4 ff ff       	call   c01003df <__panic>$/;"	l
c0100fb4	obj/kernel.asm	/^c0100fb4:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100fb8	obj/kernel.asm	/^c0100fb8:	89 c2                	mov    %eax,%edx$/;"	l
c0100fba	obj/kernel.asm	/^c0100fba:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c0100fc1	obj/kernel.asm	/^c0100fc1:	89 c2                	mov    %eax,%edx$/;"	l
c0100fc3	obj/kernel.asm	/^c0100fc3:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c0100fca	obj/kernel.asm	/^c0100fca:	29 d0                	sub    %edx,%eax$/;"	l
c0100fcc	obj/kernel.asm	/^c0100fcc:	05 c0 e1 1a c0       	add    $0xc01ae1c0,%eax$/;"	l
c0100fd1	obj/kernel.asm	/^c0100fd1:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0100fd4	obj/kernel.asm	/^c0100fd4:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0100fd7	obj/kernel.asm	/^c0100fd7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100fda	obj/kernel.asm	/^c0100fda:	83 c0 36             	add    $0x36,%eax$/;"	l
c0100fdd	obj/kernel.asm	/^c0100fdd:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0100fe0	obj/kernel.asm	/^c0100fe0:	c7 45 d4 28 00 00 00 	movl   $0x28,-0x2c(%ebp)$/;"	l
c0100fe7	obj/kernel.asm	/^c0100fe7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0100fee	obj/kernel.asm	/^c0100fee:	eb 34                	jmp    c0101024 <ide_init+0x24f>$/;"	l
c0100ff0	obj/kernel.asm	/^c0100ff0:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0100ff3	obj/kernel.asm	/^c0100ff3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100ff6	obj/kernel.asm	/^c0100ff6:	01 c2                	add    %eax,%edx$/;"	l
c0100ff8	obj/kernel.asm	/^c0100ff8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100ffb	obj/kernel.asm	/^c0100ffb:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0100ffe	obj/kernel.asm	/^c0100ffe:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0101001	obj/kernel.asm	/^c0101001:	01 c8                	add    %ecx,%eax$/;"	l
c0101003	obj/kernel.asm	/^c0101003:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101006	obj/kernel.asm	/^c0101006:	88 02                	mov    %al,(%edx)$/;"	l
c0101008	obj/kernel.asm	/^c0101008:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010100b	obj/kernel.asm	/^c010100b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010100e	obj/kernel.asm	/^c010100e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0101011	obj/kernel.asm	/^c0101011:	01 c2                	add    %eax,%edx$/;"	l
c0101013	obj/kernel.asm	/^c0101013:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
c0101016	obj/kernel.asm	/^c0101016:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101019	obj/kernel.asm	/^c0101019:	01 c8                	add    %ecx,%eax$/;"	l
c010101b	obj/kernel.asm	/^c010101b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010101e	obj/kernel.asm	/^c010101e:	88 02                	mov    %al,(%edx)$/;"	l
c0101020	obj/kernel.asm	/^c0101020:	83 45 ec 02          	addl   $0x2,-0x14(%ebp)$/;"	l
c0101024	obj/kernel.asm	/^c0101024:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101027	obj/kernel.asm	/^c0101027:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010102a	obj/kernel.asm	/^c010102a:	72 c4                	jb     c0100ff0 <ide_init+0x21b>$/;"	l
c010102c	obj/kernel.asm	/^c010102c:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010102f	obj/kernel.asm	/^c010102f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0101032	obj/kernel.asm	/^c0101032:	01 d0                	add    %edx,%eax$/;"	l
c0101034	obj/kernel.asm	/^c0101034:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0101037	obj/kernel.asm	/^c0101037:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010103a	obj/kernel.asm	/^c010103a:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010103d	obj/kernel.asm	/^c010103d:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0101040	obj/kernel.asm	/^c0101040:	85 c0                	test   %eax,%eax$/;"	l
c0101042	obj/kernel.asm	/^c0101042:	74 0f                	je     c0101053 <ide_init+0x27e>$/;"	l
c0101044	obj/kernel.asm	/^c0101044:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0101047	obj/kernel.asm	/^c0101047:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010104a	obj/kernel.asm	/^c010104a:	01 d0                	add    %edx,%eax$/;"	l
c010104c	obj/kernel.asm	/^c010104c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010104f	obj/kernel.asm	/^c010104f:	3c 20                	cmp    $0x20,%al$/;"	l
c0101051	obj/kernel.asm	/^c0101051:	74 d9                	je     c010102c <ide_init+0x257>$/;"	l
c0101053	obj/kernel.asm	/^c0101053:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101057	obj/kernel.asm	/^c0101057:	89 c2                	mov    %eax,%edx$/;"	l
c0101059	obj/kernel.asm	/^c0101059:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c0101060	obj/kernel.asm	/^c0101060:	89 c2                	mov    %eax,%edx$/;"	l
c0101062	obj/kernel.asm	/^c0101062:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c0101069	obj/kernel.asm	/^c0101069:	29 d0                	sub    %edx,%eax$/;"	l
c010106b	obj/kernel.asm	/^c010106b:	05 c0 e1 1a c0       	add    $0xc01ae1c0,%eax$/;"	l
c0101070	obj/kernel.asm	/^c0101070:	8d 48 0c             	lea    0xc(%eax),%ecx$/;"	l
c0101073	obj/kernel.asm	/^c0101073:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101077	obj/kernel.asm	/^c0101077:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010107a	obj/kernel.asm	/^c010107a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101081	obj/kernel.asm	/^c0101081:	29 c2                	sub    %eax,%edx$/;"	l
c0101083	obj/kernel.asm	/^c0101083:	89 d0                	mov    %edx,%eax$/;"	l
c0101085	obj/kernel.asm	/^c0101085:	05 c0 e1 1a c0       	add    $0xc01ae1c0,%eax$/;"	l
c010108a	obj/kernel.asm	/^c010108a:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010108d	obj/kernel.asm	/^c010108d:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101091	obj/kernel.asm	/^c0101091:	51                   	push   %ecx$/;"	l
c0101092	obj/kernel.asm	/^c0101092:	52                   	push   %edx$/;"	l
c0101093	obj/kernel.asm	/^c0101093:	50                   	push   %eax$/;"	l
c0101094	obj/kernel.asm	/^c0101094:	68 4e be 10 c0       	push   $0xc010be4e$/;"	l
c0101099	obj/kernel.asm	/^c0101099:	e8 dc f1 ff ff       	call   c010027a <cprintf>$/;"	l
c010109e	obj/kernel.asm	/^c010109e:	83 c4 10             	add    $0x10,%esp$/;"	l
c01010a1	obj/kernel.asm	/^c01010a1:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c01010a5	obj/kernel.asm	/^c01010a5:	83 c0 01             	add    $0x1,%eax$/;"	l
c01010a8	obj/kernel.asm	/^c01010a8:	66 89 45 f6          	mov    %ax,-0xa(%ebp)$/;"	l
c01010ac	obj/kernel.asm	/^c01010ac:	66 83 7d f6 03       	cmpw   $0x3,-0xa(%ebp)$/;"	l
c01010b1	obj/kernel.asm	/^c01010b1:	0f 86 34 fd ff ff    	jbe    c0100deb <ide_init+0x16>$/;"	l
c01010b7	obj/kernel.asm	/^c01010b7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01010ba	obj/kernel.asm	/^c01010ba:	6a 0e                	push   $0xe$/;"	l
c01010bc	obj/kernel.asm	/^c01010bc:	e8 73 0e 00 00       	call   c0101f34 <pic_enable>$/;"	l
c01010c1	obj/kernel.asm	/^c01010c1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01010c4	obj/kernel.asm	/^c01010c4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01010c7	obj/kernel.asm	/^c01010c7:	6a 0f                	push   $0xf$/;"	l
c01010c9	obj/kernel.asm	/^c01010c9:	e8 66 0e 00 00       	call   c0101f34 <pic_enable>$/;"	l
c01010ce	obj/kernel.asm	/^c01010ce:	83 c4 10             	add    $0x10,%esp$/;"	l
c01010d1	obj/kernel.asm	/^c01010d1:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c01010d4	obj/kernel.asm	/^c01010d4:	5b                   	pop    %ebx$/;"	l
c01010d5	obj/kernel.asm	/^c01010d5:	5f                   	pop    %edi$/;"	l
c01010d6	obj/kernel.asm	/^c01010d6:	5d                   	pop    %ebp$/;"	l
c01010d7	obj/kernel.asm	/^c01010d7:	c3                   	ret    $/;"	l
c01010d8	obj/kernel.asm	/^c01010d8 <ide_device_valid>:$/;"	l
c01010d8	obj/kernel.asm	/^c01010d8:	55                   	push   %ebp$/;"	l
c01010d9	obj/kernel.asm	/^c01010d9:	89 e5                	mov    %esp,%ebp$/;"	l
c01010db	obj/kernel.asm	/^c01010db:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01010de	obj/kernel.asm	/^c01010de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01010e1	obj/kernel.asm	/^c01010e1:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c01010e5	obj/kernel.asm	/^c01010e5:	66 83 7d fc 03       	cmpw   $0x3,-0x4(%ebp)$/;"	l
c01010ea	obj/kernel.asm	/^c01010ea:	77 25                	ja     c0101111 <ide_device_valid+0x39>$/;"	l
c01010ec	obj/kernel.asm	/^c01010ec:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c01010f0	obj/kernel.asm	/^c01010f0:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01010f3	obj/kernel.asm	/^c01010f3:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01010fa	obj/kernel.asm	/^c01010fa:	29 c2                	sub    %eax,%edx$/;"	l
c01010fc	obj/kernel.asm	/^c01010fc:	89 d0                	mov    %edx,%eax$/;"	l
c01010fe	obj/kernel.asm	/^c01010fe:	05 c0 e1 1a c0       	add    $0xc01ae1c0,%eax$/;"	l
c0101103	obj/kernel.asm	/^c0101103:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101106	obj/kernel.asm	/^c0101106:	84 c0                	test   %al,%al$/;"	l
c0101108	obj/kernel.asm	/^c0101108:	74 07                	je     c0101111 <ide_device_valid+0x39>$/;"	l
c010110a	obj/kernel.asm	/^c010110a:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010110f	obj/kernel.asm	/^c010110f:	eb 05                	jmp    c0101116 <ide_device_valid+0x3e>$/;"	l
c0101111	obj/kernel.asm	/^c0101111:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101116	obj/kernel.asm	/^c0101116:	c9                   	leave  $/;"	l
c0101117	obj/kernel.asm	/^c0101117:	c3                   	ret    $/;"	l
c0101118	obj/kernel.asm	/^c0101118 <ide_device_size>:$/;"	l
c0101118	obj/kernel.asm	/^c0101118:	55                   	push   %ebp$/;"	l
c0101119	obj/kernel.asm	/^c0101119:	89 e5                	mov    %esp,%ebp$/;"	l
c010111b	obj/kernel.asm	/^c010111b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010111e	obj/kernel.asm	/^c010111e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101121	obj/kernel.asm	/^c0101121:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c0101125	obj/kernel.asm	/^c0101125:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c0101129	obj/kernel.asm	/^c0101129:	50                   	push   %eax$/;"	l
c010112a	obj/kernel.asm	/^c010112a:	e8 a9 ff ff ff       	call   c01010d8 <ide_device_valid>$/;"	l
c010112f	obj/kernel.asm	/^c010112f:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101132	obj/kernel.asm	/^c0101132:	85 c0                	test   %eax,%eax$/;"	l
c0101134	obj/kernel.asm	/^c0101134:	74 1c                	je     c0101152 <ide_device_size+0x3a>$/;"	l
c0101136	obj/kernel.asm	/^c0101136:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c010113a	obj/kernel.asm	/^c010113a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010113d	obj/kernel.asm	/^c010113d:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101144	obj/kernel.asm	/^c0101144:	29 c2                	sub    %eax,%edx$/;"	l
c0101146	obj/kernel.asm	/^c0101146:	89 d0                	mov    %edx,%eax$/;"	l
c0101148	obj/kernel.asm	/^c0101148:	05 c0 e1 1a c0       	add    $0xc01ae1c0,%eax$/;"	l
c010114d	obj/kernel.asm	/^c010114d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0101150	obj/kernel.asm	/^c0101150:	eb 05                	jmp    c0101157 <ide_device_size+0x3f>$/;"	l
c0101152	obj/kernel.asm	/^c0101152:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101157	obj/kernel.asm	/^c0101157:	c9                   	leave  $/;"	l
c0101158	obj/kernel.asm	/^c0101158:	c3                   	ret    $/;"	l
c0101159	obj/kernel.asm	/^c0101159 <ide_read_secs>:$/;"	l
c0101159	obj/kernel.asm	/^c0101159:	55                   	push   %ebp$/;"	l
c010115a	obj/kernel.asm	/^c010115a:	89 e5                	mov    %esp,%ebp$/;"	l
c010115c	obj/kernel.asm	/^c010115c:	57                   	push   %edi$/;"	l
c010115d	obj/kernel.asm	/^c010115d:	53                   	push   %ebx$/;"	l
c010115e	obj/kernel.asm	/^c010115e:	83 ec 40             	sub    $0x40,%esp$/;"	l
c0101161	obj/kernel.asm	/^c0101161:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101164	obj/kernel.asm	/^c0101164:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101168	obj/kernel.asm	/^c0101168:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c010116f	obj/kernel.asm	/^c010116f:	77 25                	ja     c0101196 <ide_read_secs+0x3d>$/;"	l
c0101171	obj/kernel.asm	/^c0101171:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c0101176	obj/kernel.asm	/^c0101176:	77 1e                	ja     c0101196 <ide_read_secs+0x3d>$/;"	l
c0101178	obj/kernel.asm	/^c0101178:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c010117c	obj/kernel.asm	/^c010117c:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010117f	obj/kernel.asm	/^c010117f:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101186	obj/kernel.asm	/^c0101186:	29 c2                	sub    %eax,%edx$/;"	l
c0101188	obj/kernel.asm	/^c0101188:	89 d0                	mov    %edx,%eax$/;"	l
c010118a	obj/kernel.asm	/^c010118a:	05 c0 e1 1a c0       	add    $0xc01ae1c0,%eax$/;"	l
c010118f	obj/kernel.asm	/^c010118f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101192	obj/kernel.asm	/^c0101192:	84 c0                	test   %al,%al$/;"	l
c0101194	obj/kernel.asm	/^c0101194:	75 19                	jne    c01011af <ide_read_secs+0x56>$/;"	l
c0101196	obj/kernel.asm	/^c0101196:	68 6c be 10 c0       	push   $0xc010be6c$/;"	l
c010119b	obj/kernel.asm	/^c010119b:	68 27 be 10 c0       	push   $0xc010be27$/;"	l
c01011a0	obj/kernel.asm	/^c01011a0:	68 9f 00 00 00       	push   $0x9f$/;"	l
c01011a5	obj/kernel.asm	/^c01011a5:	68 3c be 10 c0       	push   $0xc010be3c$/;"	l
c01011aa	obj/kernel.asm	/^c01011aa:	e8 30 f2 ff ff       	call   c01003df <__panic>$/;"	l
c01011af	obj/kernel.asm	/^c01011af:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c01011b6	obj/kernel.asm	/^c01011b6:	77 0f                	ja     c01011c7 <ide_read_secs+0x6e>$/;"	l
c01011b8	obj/kernel.asm	/^c01011b8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01011bb	obj/kernel.asm	/^c01011bb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01011be	obj/kernel.asm	/^c01011be:	01 d0                	add    %edx,%eax$/;"	l
c01011c0	obj/kernel.asm	/^c01011c0:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c01011c5	obj/kernel.asm	/^c01011c5:	76 19                	jbe    c01011e0 <ide_read_secs+0x87>$/;"	l
c01011c7	obj/kernel.asm	/^c01011c7:	68 94 be 10 c0       	push   $0xc010be94$/;"	l
c01011cc	obj/kernel.asm	/^c01011cc:	68 27 be 10 c0       	push   $0xc010be27$/;"	l
c01011d1	obj/kernel.asm	/^c01011d1:	68 a0 00 00 00       	push   $0xa0$/;"	l
c01011d6	obj/kernel.asm	/^c01011d6:	68 3c be 10 c0       	push   $0xc010be3c$/;"	l
c01011db	obj/kernel.asm	/^c01011db:	e8 ff f1 ff ff       	call   c01003df <__panic>$/;"	l
c01011e0	obj/kernel.asm	/^c01011e0:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01011e4	obj/kernel.asm	/^c01011e4:	66 d1 e8             	shr    %ax$/;"	l
c01011e7	obj/kernel.asm	/^c01011e7:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01011ea	obj/kernel.asm	/^c01011ea:	0f b7 04 85 dc bd 10 	movzwl -0x3fef4224(,%eax,4),%eax$/;"	l
c01011f1	obj/kernel.asm	/^c01011f1:	c0 $/;"	l
c01011f2	obj/kernel.asm	/^c01011f2:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c01011f6	obj/kernel.asm	/^c01011f6:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01011fa	obj/kernel.asm	/^c01011fa:	66 d1 e8             	shr    %ax$/;"	l
c01011fd	obj/kernel.asm	/^c01011fd:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101200	obj/kernel.asm	/^c0101200:	0f b7 04 85 de bd 10 	movzwl -0x3fef4222(,%eax,4),%eax$/;"	l
c0101207	obj/kernel.asm	/^c0101207:	c0 $/;"	l
c0101208	obj/kernel.asm	/^c0101208:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c010120c	obj/kernel.asm	/^c010120c:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101210	obj/kernel.asm	/^c0101210:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101213	obj/kernel.asm	/^c0101213:	6a 00                	push   $0x0$/;"	l
c0101215	obj/kernel.asm	/^c0101215:	50                   	push   %eax$/;"	l
c0101216	obj/kernel.asm	/^c0101216:	e8 60 fb ff ff       	call   c0100d7b <ide_wait_ready>$/;"	l
c010121b	obj/kernel.asm	/^c010121b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010121e	obj/kernel.asm	/^c010121e:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101222	obj/kernel.asm	/^c0101222:	83 c0 02             	add    $0x2,%eax$/;"	l
c0101225	obj/kernel.asm	/^c0101225:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101228	obj/kernel.asm	/^c0101228:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c010122c	obj/kernel.asm	/^c010122c:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c0101230	obj/kernel.asm	/^c0101230:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101234	obj/kernel.asm	/^c0101234:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101238	obj/kernel.asm	/^c0101238:	ee                   	out    %al,(%dx)$/;"	l
c0101239	obj/kernel.asm	/^c0101239:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010123c	obj/kernel.asm	/^c010123c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010123f	obj/kernel.asm	/^c010123f:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101243	obj/kernel.asm	/^c0101243:	83 c2 02             	add    $0x2,%edx$/;"	l
c0101246	obj/kernel.asm	/^c0101246:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101249	obj/kernel.asm	/^c0101249:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c010124d	obj/kernel.asm	/^c010124d:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c0101250	obj/kernel.asm	/^c0101250:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101254	obj/kernel.asm	/^c0101254:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101258	obj/kernel.asm	/^c0101258:	ee                   	out    %al,(%dx)$/;"	l
c0101259	obj/kernel.asm	/^c0101259:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010125c	obj/kernel.asm	/^c010125c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010125f	obj/kernel.asm	/^c010125f:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101263	obj/kernel.asm	/^c0101263:	83 c2 03             	add    $0x3,%edx$/;"	l
c0101266	obj/kernel.asm	/^c0101266:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101269	obj/kernel.asm	/^c0101269:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c010126d	obj/kernel.asm	/^c010126d:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101270	obj/kernel.asm	/^c0101270:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101274	obj/kernel.asm	/^c0101274:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101278	obj/kernel.asm	/^c0101278:	ee                   	out    %al,(%dx)$/;"	l
c0101279	obj/kernel.asm	/^c0101279:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010127c	obj/kernel.asm	/^c010127c:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c010127f	obj/kernel.asm	/^c010127f:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101282	obj/kernel.asm	/^c0101282:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101286	obj/kernel.asm	/^c0101286:	83 c2 04             	add    $0x4,%edx$/;"	l
c0101289	obj/kernel.asm	/^c0101289:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010128c	obj/kernel.asm	/^c010128c:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c0101290	obj/kernel.asm	/^c0101290:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c0101293	obj/kernel.asm	/^c0101293:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0101297	obj/kernel.asm	/^c0101297:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c010129b	obj/kernel.asm	/^c010129b:	ee                   	out    %al,(%dx)$/;"	l
c010129c	obj/kernel.asm	/^c010129c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010129f	obj/kernel.asm	/^c010129f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01012a2	obj/kernel.asm	/^c01012a2:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01012a5	obj/kernel.asm	/^c01012a5:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01012a9	obj/kernel.asm	/^c01012a9:	83 c2 05             	add    $0x5,%edx$/;"	l
c01012ac	obj/kernel.asm	/^c01012ac:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01012af	obj/kernel.asm	/^c01012af:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c01012b3	obj/kernel.asm	/^c01012b3:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c01012b6	obj/kernel.asm	/^c01012b6:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c01012ba	obj/kernel.asm	/^c01012ba:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c01012be	obj/kernel.asm	/^c01012be:	ee                   	out    %al,(%dx)$/;"	l
c01012bf	obj/kernel.asm	/^c01012bf:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01012c3	obj/kernel.asm	/^c01012c3:	83 e0 01             	and    $0x1,%eax$/;"	l
c01012c6	obj/kernel.asm	/^c01012c6:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c01012c9	obj/kernel.asm	/^c01012c9:	89 c2                	mov    %eax,%edx$/;"	l
c01012cb	obj/kernel.asm	/^c01012cb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01012ce	obj/kernel.asm	/^c01012ce:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c01012d1	obj/kernel.asm	/^c01012d1:	83 e0 0f             	and    $0xf,%eax$/;"	l
c01012d4	obj/kernel.asm	/^c01012d4:	09 d0                	or     %edx,%eax$/;"	l
c01012d6	obj/kernel.asm	/^c01012d6:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c01012d9	obj/kernel.asm	/^c01012d9:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01012dc	obj/kernel.asm	/^c01012dc:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01012e0	obj/kernel.asm	/^c01012e0:	83 c2 06             	add    $0x6,%edx$/;"	l
c01012e3	obj/kernel.asm	/^c01012e3:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01012e6	obj/kernel.asm	/^c01012e6:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c01012ea	obj/kernel.asm	/^c01012ea:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c01012ed	obj/kernel.asm	/^c01012ed:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c01012f1	obj/kernel.asm	/^c01012f1:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c01012f5	obj/kernel.asm	/^c01012f5:	ee                   	out    %al,(%dx)$/;"	l
c01012f6	obj/kernel.asm	/^c01012f6:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01012fa	obj/kernel.asm	/^c01012fa:	83 c0 07             	add    $0x7,%eax$/;"	l
c01012fd	obj/kernel.asm	/^c01012fd:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101300	obj/kernel.asm	/^c0101300:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c0101304	obj/kernel.asm	/^c0101304:	c6 45 d5 20          	movb   $0x20,-0x2b(%ebp)$/;"	l
c0101308	obj/kernel.asm	/^c0101308:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c010130c	obj/kernel.asm	/^c010130c:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0101310	obj/kernel.asm	/^c0101310:	ee                   	out    %al,(%dx)$/;"	l
c0101311	obj/kernel.asm	/^c0101311:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101318	obj/kernel.asm	/^c0101318:	eb 58                	jmp    c0101372 <ide_read_secs+0x219>$/;"	l
c010131a	obj/kernel.asm	/^c010131a:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010131e	obj/kernel.asm	/^c010131e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101321	obj/kernel.asm	/^c0101321:	6a 01                	push   $0x1$/;"	l
c0101323	obj/kernel.asm	/^c0101323:	50                   	push   %eax$/;"	l
c0101324	obj/kernel.asm	/^c0101324:	e8 52 fa ff ff       	call   c0100d7b <ide_wait_ready>$/;"	l
c0101329	obj/kernel.asm	/^c0101329:	83 c4 10             	add    $0x10,%esp$/;"	l
c010132c	obj/kernel.asm	/^c010132c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010132f	obj/kernel.asm	/^c010132f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101333	obj/kernel.asm	/^c0101333:	74 02                	je     c0101337 <ide_read_secs+0x1de>$/;"	l
c0101335	obj/kernel.asm	/^c0101335:	eb 41                	jmp    c0101378 <ide_read_secs+0x21f>$/;"	l
c0101337	obj/kernel.asm	/^c0101337:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c010133b	obj/kernel.asm	/^c010133b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010133e	obj/kernel.asm	/^c010133e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101341	obj/kernel.asm	/^c0101341:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0101344	obj/kernel.asm	/^c0101344:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c010134b	obj/kernel.asm	/^c010134b:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010134e	obj/kernel.asm	/^c010134e:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c0101351	obj/kernel.asm	/^c0101351:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0101354	obj/kernel.asm	/^c0101354:	89 cb                	mov    %ecx,%ebx$/;"	l
c0101356	obj/kernel.asm	/^c0101356:	89 df                	mov    %ebx,%edi$/;"	l
c0101358	obj/kernel.asm	/^c0101358:	89 c1                	mov    %eax,%ecx$/;"	l
c010135a	obj/kernel.asm	/^c010135a:	fc                   	cld    $/;"	l
c010135b	obj/kernel.asm	/^c010135b:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c010135d	obj/kernel.asm	/^c010135d:	89 c8                	mov    %ecx,%eax$/;"	l
c010135f	obj/kernel.asm	/^c010135f:	89 fb                	mov    %edi,%ebx$/;"	l
c0101361	obj/kernel.asm	/^c0101361:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c0101364	obj/kernel.asm	/^c0101364:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0101367	obj/kernel.asm	/^c0101367:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c010136b	obj/kernel.asm	/^c010136b:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c0101372	obj/kernel.asm	/^c0101372:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0101376	obj/kernel.asm	/^c0101376:	75 a2                	jne    c010131a <ide_read_secs+0x1c1>$/;"	l
c0101378	obj/kernel.asm	/^c0101378:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010137b	obj/kernel.asm	/^c010137b:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c010137e	obj/kernel.asm	/^c010137e:	5b                   	pop    %ebx$/;"	l
c010137f	obj/kernel.asm	/^c010137f:	5f                   	pop    %edi$/;"	l
c0101380	obj/kernel.asm	/^c0101380:	5d                   	pop    %ebp$/;"	l
c0101381	obj/kernel.asm	/^c0101381:	c3                   	ret    $/;"	l
c0101382	obj/kernel.asm	/^c0101382 <ide_write_secs>:$/;"	l
c0101382	obj/kernel.asm	/^c0101382:	55                   	push   %ebp$/;"	l
c0101383	obj/kernel.asm	/^c0101383:	89 e5                	mov    %esp,%ebp$/;"	l
c0101385	obj/kernel.asm	/^c0101385:	56                   	push   %esi$/;"	l
c0101386	obj/kernel.asm	/^c0101386:	53                   	push   %ebx$/;"	l
c0101387	obj/kernel.asm	/^c0101387:	83 ec 40             	sub    $0x40,%esp$/;"	l
c010138a	obj/kernel.asm	/^c010138a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010138d	obj/kernel.asm	/^c010138d:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101391	obj/kernel.asm	/^c0101391:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c0101398	obj/kernel.asm	/^c0101398:	77 25                	ja     c01013bf <ide_write_secs+0x3d>$/;"	l
c010139a	obj/kernel.asm	/^c010139a:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c010139f	obj/kernel.asm	/^c010139f:	77 1e                	ja     c01013bf <ide_write_secs+0x3d>$/;"	l
c01013a1	obj/kernel.asm	/^c01013a1:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01013a5	obj/kernel.asm	/^c01013a5:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01013a8	obj/kernel.asm	/^c01013a8:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01013af	obj/kernel.asm	/^c01013af:	29 c2                	sub    %eax,%edx$/;"	l
c01013b1	obj/kernel.asm	/^c01013b1:	89 d0                	mov    %edx,%eax$/;"	l
c01013b3	obj/kernel.asm	/^c01013b3:	05 c0 e1 1a c0       	add    $0xc01ae1c0,%eax$/;"	l
c01013b8	obj/kernel.asm	/^c01013b8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01013bb	obj/kernel.asm	/^c01013bb:	84 c0                	test   %al,%al$/;"	l
c01013bd	obj/kernel.asm	/^c01013bd:	75 19                	jne    c01013d8 <ide_write_secs+0x56>$/;"	l
c01013bf	obj/kernel.asm	/^c01013bf:	68 6c be 10 c0       	push   $0xc010be6c$/;"	l
c01013c4	obj/kernel.asm	/^c01013c4:	68 27 be 10 c0       	push   $0xc010be27$/;"	l
c01013c9	obj/kernel.asm	/^c01013c9:	68 bc 00 00 00       	push   $0xbc$/;"	l
c01013ce	obj/kernel.asm	/^c01013ce:	68 3c be 10 c0       	push   $0xc010be3c$/;"	l
c01013d3	obj/kernel.asm	/^c01013d3:	e8 07 f0 ff ff       	call   c01003df <__panic>$/;"	l
c01013d8	obj/kernel.asm	/^c01013d8:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c01013df	obj/kernel.asm	/^c01013df:	77 0f                	ja     c01013f0 <ide_write_secs+0x6e>$/;"	l
c01013e1	obj/kernel.asm	/^c01013e1:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01013e4	obj/kernel.asm	/^c01013e4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01013e7	obj/kernel.asm	/^c01013e7:	01 d0                	add    %edx,%eax$/;"	l
c01013e9	obj/kernel.asm	/^c01013e9:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c01013ee	obj/kernel.asm	/^c01013ee:	76 19                	jbe    c0101409 <ide_write_secs+0x87>$/;"	l
c01013f0	obj/kernel.asm	/^c01013f0:	68 94 be 10 c0       	push   $0xc010be94$/;"	l
c01013f5	obj/kernel.asm	/^c01013f5:	68 27 be 10 c0       	push   $0xc010be27$/;"	l
c01013fa	obj/kernel.asm	/^c01013fa:	68 bd 00 00 00       	push   $0xbd$/;"	l
c01013ff	obj/kernel.asm	/^c01013ff:	68 3c be 10 c0       	push   $0xc010be3c$/;"	l
c0101404	obj/kernel.asm	/^c0101404:	e8 d6 ef ff ff       	call   c01003df <__panic>$/;"	l
c0101409	obj/kernel.asm	/^c0101409:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c010140d	obj/kernel.asm	/^c010140d:	66 d1 e8             	shr    %ax$/;"	l
c0101410	obj/kernel.asm	/^c0101410:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101413	obj/kernel.asm	/^c0101413:	0f b7 04 85 dc bd 10 	movzwl -0x3fef4224(,%eax,4),%eax$/;"	l
c010141a	obj/kernel.asm	/^c010141a:	c0 $/;"	l
c010141b	obj/kernel.asm	/^c010141b:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c010141f	obj/kernel.asm	/^c010141f:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101423	obj/kernel.asm	/^c0101423:	66 d1 e8             	shr    %ax$/;"	l
c0101426	obj/kernel.asm	/^c0101426:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101429	obj/kernel.asm	/^c0101429:	0f b7 04 85 de bd 10 	movzwl -0x3fef4222(,%eax,4),%eax$/;"	l
c0101430	obj/kernel.asm	/^c0101430:	c0 $/;"	l
c0101431	obj/kernel.asm	/^c0101431:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c0101435	obj/kernel.asm	/^c0101435:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101439	obj/kernel.asm	/^c0101439:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010143c	obj/kernel.asm	/^c010143c:	6a 00                	push   $0x0$/;"	l
c010143e	obj/kernel.asm	/^c010143e:	50                   	push   %eax$/;"	l
c010143f	obj/kernel.asm	/^c010143f:	e8 37 f9 ff ff       	call   c0100d7b <ide_wait_ready>$/;"	l
c0101444	obj/kernel.asm	/^c0101444:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101447	obj/kernel.asm	/^c0101447:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c010144b	obj/kernel.asm	/^c010144b:	83 c0 02             	add    $0x2,%eax$/;"	l
c010144e	obj/kernel.asm	/^c010144e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101451	obj/kernel.asm	/^c0101451:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0101455	obj/kernel.asm	/^c0101455:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c0101459	obj/kernel.asm	/^c0101459:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c010145d	obj/kernel.asm	/^c010145d:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101461	obj/kernel.asm	/^c0101461:	ee                   	out    %al,(%dx)$/;"	l
c0101462	obj/kernel.asm	/^c0101462:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101465	obj/kernel.asm	/^c0101465:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101468	obj/kernel.asm	/^c0101468:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010146c	obj/kernel.asm	/^c010146c:	83 c2 02             	add    $0x2,%edx$/;"	l
c010146f	obj/kernel.asm	/^c010146f:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101472	obj/kernel.asm	/^c0101472:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c0101476	obj/kernel.asm	/^c0101476:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c0101479	obj/kernel.asm	/^c0101479:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c010147d	obj/kernel.asm	/^c010147d:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101481	obj/kernel.asm	/^c0101481:	ee                   	out    %al,(%dx)$/;"	l
c0101482	obj/kernel.asm	/^c0101482:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101485	obj/kernel.asm	/^c0101485:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101488	obj/kernel.asm	/^c0101488:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010148c	obj/kernel.asm	/^c010148c:	83 c2 03             	add    $0x3,%edx$/;"	l
c010148f	obj/kernel.asm	/^c010148f:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101492	obj/kernel.asm	/^c0101492:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101496	obj/kernel.asm	/^c0101496:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101499	obj/kernel.asm	/^c0101499:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c010149d	obj/kernel.asm	/^c010149d:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01014a1	obj/kernel.asm	/^c01014a1:	ee                   	out    %al,(%dx)$/;"	l
c01014a2	obj/kernel.asm	/^c01014a2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01014a5	obj/kernel.asm	/^c01014a5:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c01014a8	obj/kernel.asm	/^c01014a8:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01014ab	obj/kernel.asm	/^c01014ab:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01014af	obj/kernel.asm	/^c01014af:	83 c2 04             	add    $0x4,%edx$/;"	l
c01014b2	obj/kernel.asm	/^c01014b2:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01014b5	obj/kernel.asm	/^c01014b5:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c01014b9	obj/kernel.asm	/^c01014b9:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c01014bc	obj/kernel.asm	/^c01014bc:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01014c0	obj/kernel.asm	/^c01014c0:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c01014c4	obj/kernel.asm	/^c01014c4:	ee                   	out    %al,(%dx)$/;"	l
c01014c5	obj/kernel.asm	/^c01014c5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01014c8	obj/kernel.asm	/^c01014c8:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01014cb	obj/kernel.asm	/^c01014cb:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01014ce	obj/kernel.asm	/^c01014ce:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01014d2	obj/kernel.asm	/^c01014d2:	83 c2 05             	add    $0x5,%edx$/;"	l
c01014d5	obj/kernel.asm	/^c01014d5:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01014d8	obj/kernel.asm	/^c01014d8:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c01014dc	obj/kernel.asm	/^c01014dc:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c01014df	obj/kernel.asm	/^c01014df:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c01014e3	obj/kernel.asm	/^c01014e3:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c01014e7	obj/kernel.asm	/^c01014e7:	ee                   	out    %al,(%dx)$/;"	l
c01014e8	obj/kernel.asm	/^c01014e8:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01014ec	obj/kernel.asm	/^c01014ec:	83 e0 01             	and    $0x1,%eax$/;"	l
c01014ef	obj/kernel.asm	/^c01014ef:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c01014f2	obj/kernel.asm	/^c01014f2:	89 c2                	mov    %eax,%edx$/;"	l
c01014f4	obj/kernel.asm	/^c01014f4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01014f7	obj/kernel.asm	/^c01014f7:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c01014fa	obj/kernel.asm	/^c01014fa:	83 e0 0f             	and    $0xf,%eax$/;"	l
c01014fd	obj/kernel.asm	/^c01014fd:	09 d0                	or     %edx,%eax$/;"	l
c01014ff	obj/kernel.asm	/^c01014ff:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0101502	obj/kernel.asm	/^c0101502:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101505	obj/kernel.asm	/^c0101505:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101509	obj/kernel.asm	/^c0101509:	83 c2 06             	add    $0x6,%edx$/;"	l
c010150c	obj/kernel.asm	/^c010150c:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010150f	obj/kernel.asm	/^c010150f:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c0101513	obj/kernel.asm	/^c0101513:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c0101516	obj/kernel.asm	/^c0101516:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c010151a	obj/kernel.asm	/^c010151a:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c010151e	obj/kernel.asm	/^c010151e:	ee                   	out    %al,(%dx)$/;"	l
c010151f	obj/kernel.asm	/^c010151f:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101523	obj/kernel.asm	/^c0101523:	83 c0 07             	add    $0x7,%eax$/;"	l
c0101526	obj/kernel.asm	/^c0101526:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101529	obj/kernel.asm	/^c0101529:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c010152d	obj/kernel.asm	/^c010152d:	c6 45 d5 30          	movb   $0x30,-0x2b(%ebp)$/;"	l
c0101531	obj/kernel.asm	/^c0101531:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c0101535	obj/kernel.asm	/^c0101535:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0101539	obj/kernel.asm	/^c0101539:	ee                   	out    %al,(%dx)$/;"	l
c010153a	obj/kernel.asm	/^c010153a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101541	obj/kernel.asm	/^c0101541:	eb 58                	jmp    c010159b <ide_write_secs+0x219>$/;"	l
c0101543	obj/kernel.asm	/^c0101543:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101547	obj/kernel.asm	/^c0101547:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010154a	obj/kernel.asm	/^c010154a:	6a 01                	push   $0x1$/;"	l
c010154c	obj/kernel.asm	/^c010154c:	50                   	push   %eax$/;"	l
c010154d	obj/kernel.asm	/^c010154d:	e8 29 f8 ff ff       	call   c0100d7b <ide_wait_ready>$/;"	l
c0101552	obj/kernel.asm	/^c0101552:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101555	obj/kernel.asm	/^c0101555:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101558	obj/kernel.asm	/^c0101558:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010155c	obj/kernel.asm	/^c010155c:	74 02                	je     c0101560 <ide_write_secs+0x1de>$/;"	l
c010155e	obj/kernel.asm	/^c010155e:	eb 41                	jmp    c01015a1 <ide_write_secs+0x21f>$/;"	l
c0101560	obj/kernel.asm	/^c0101560:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101564	obj/kernel.asm	/^c0101564:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0101567	obj/kernel.asm	/^c0101567:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010156a	obj/kernel.asm	/^c010156a:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010156d	obj/kernel.asm	/^c010156d:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c0101574	obj/kernel.asm	/^c0101574:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0101577	obj/kernel.asm	/^c0101577:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c010157a	obj/kernel.asm	/^c010157a:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010157d	obj/kernel.asm	/^c010157d:	89 cb                	mov    %ecx,%ebx$/;"	l
c010157f	obj/kernel.asm	/^c010157f:	89 de                	mov    %ebx,%esi$/;"	l
c0101581	obj/kernel.asm	/^c0101581:	89 c1                	mov    %eax,%ecx$/;"	l
c0101583	obj/kernel.asm	/^c0101583:	fc                   	cld    $/;"	l
c0101584	obj/kernel.asm	/^c0101584:	f2 6f                	repnz outsl %ds:(%esi),(%dx)$/;"	l
c0101586	obj/kernel.asm	/^c0101586:	89 c8                	mov    %ecx,%eax$/;"	l
c0101588	obj/kernel.asm	/^c0101588:	89 f3                	mov    %esi,%ebx$/;"	l
c010158a	obj/kernel.asm	/^c010158a:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c010158d	obj/kernel.asm	/^c010158d:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0101590	obj/kernel.asm	/^c0101590:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0101594	obj/kernel.asm	/^c0101594:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c010159b	obj/kernel.asm	/^c010159b:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010159f	obj/kernel.asm	/^c010159f:	75 a2                	jne    c0101543 <ide_write_secs+0x1c1>$/;"	l
c01015a1	obj/kernel.asm	/^c01015a1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01015a4	obj/kernel.asm	/^c01015a4:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c01015a7	obj/kernel.asm	/^c01015a7:	5b                   	pop    %ebx$/;"	l
c01015a8	obj/kernel.asm	/^c01015a8:	5e                   	pop    %esi$/;"	l
c01015a9	obj/kernel.asm	/^c01015a9:	5d                   	pop    %ebp$/;"	l
c01015aa	obj/kernel.asm	/^c01015aa:	c3                   	ret    $/;"	l
c01015ab	obj/kernel.asm	/^c01015ab <clock_init>:$/;"	l
c01015ab	obj/kernel.asm	/^c01015ab:	55                   	push   %ebp$/;"	l
c01015ac	obj/kernel.asm	/^c01015ac:	89 e5                	mov    %esp,%ebp$/;"	l
c01015ae	obj/kernel.asm	/^c01015ae:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01015b1	obj/kernel.asm	/^c01015b1:	66 c7 45 f6 43 00    	movw   $0x43,-0xa(%ebp)$/;"	l
c01015b7	obj/kernel.asm	/^c01015b7:	c6 45 f5 34          	movb   $0x34,-0xb(%ebp)$/;"	l
c01015bb	obj/kernel.asm	/^c01015bb:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c01015bf	obj/kernel.asm	/^c01015bf:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c01015c3	obj/kernel.asm	/^c01015c3:	ee                   	out    %al,(%dx)$/;"	l
c01015c4	obj/kernel.asm	/^c01015c4:	66 c7 45 f2 40 00    	movw   $0x40,-0xe(%ebp)$/;"	l
c01015ca	obj/kernel.asm	/^c01015ca:	c6 45 f1 9c          	movb   $0x9c,-0xf(%ebp)$/;"	l
c01015ce	obj/kernel.asm	/^c01015ce:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01015d2	obj/kernel.asm	/^c01015d2:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01015d6	obj/kernel.asm	/^c01015d6:	ee                   	out    %al,(%dx)$/;"	l
c01015d7	obj/kernel.asm	/^c01015d7:	66 c7 45 ee 40 00    	movw   $0x40,-0x12(%ebp)$/;"	l
c01015dd	obj/kernel.asm	/^c01015dd:	c6 45 ed 2e          	movb   $0x2e,-0x13(%ebp)$/;"	l
c01015e1	obj/kernel.asm	/^c01015e1:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01015e5	obj/kernel.asm	/^c01015e5:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01015e9	obj/kernel.asm	/^c01015e9:	ee                   	out    %al,(%dx)$/;"	l
c01015ea	obj/kernel.asm	/^c01015ea:	c7 05 b8 0e 1b c0 00 	movl   $0x0,0xc01b0eb8$/;"	l
c01015f1	obj/kernel.asm	/^c01015f1:	00 00 00 $/;"	l
c01015f4	obj/kernel.asm	/^c01015f4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01015f7	obj/kernel.asm	/^c01015f7:	68 ce be 10 c0       	push   $0xc010bece$/;"	l
c01015fc	obj/kernel.asm	/^c01015fc:	e8 79 ec ff ff       	call   c010027a <cprintf>$/;"	l
c0101601	obj/kernel.asm	/^c0101601:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101604	obj/kernel.asm	/^c0101604:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101607	obj/kernel.asm	/^c0101607:	6a 00                	push   $0x0$/;"	l
c0101609	obj/kernel.asm	/^c0101609:	e8 26 09 00 00       	call   c0101f34 <pic_enable>$/;"	l
c010160e	obj/kernel.asm	/^c010160e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101611	obj/kernel.asm	/^c0101611:	c9                   	leave  $/;"	l
c0101612	obj/kernel.asm	/^c0101612:	c3                   	ret    $/;"	l
c0101613	obj/kernel.asm	/^c0101613 <__intr_save>:$/;"	l
c0101613	obj/kernel.asm	/^c0101613:	55                   	push   %ebp$/;"	l
c0101614	obj/kernel.asm	/^c0101614:	89 e5                	mov    %esp,%ebp$/;"	l
c0101616	obj/kernel.asm	/^c0101616:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101619	obj/kernel.asm	/^c0101619:	9c                   	pushf  $/;"	l
c010161a	obj/kernel.asm	/^c010161a:	58                   	pop    %eax$/;"	l
c010161b	obj/kernel.asm	/^c010161b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010161e	obj/kernel.asm	/^c010161e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101621	obj/kernel.asm	/^c0101621:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0101626	obj/kernel.asm	/^c0101626:	85 c0                	test   %eax,%eax$/;"	l
c0101628	obj/kernel.asm	/^c0101628:	74 0c                	je     c0101636 <__intr_save+0x23>$/;"	l
c010162a	obj/kernel.asm	/^c010162a:	e8 73 0a 00 00       	call   c01020a2 <intr_disable>$/;"	l
c010162f	obj/kernel.asm	/^c010162f:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0101634	obj/kernel.asm	/^c0101634:	eb 05                	jmp    c010163b <__intr_save+0x28>$/;"	l
c0101636	obj/kernel.asm	/^c0101636:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010163b	obj/kernel.asm	/^c010163b:	c9                   	leave  $/;"	l
c010163c	obj/kernel.asm	/^c010163c:	c3                   	ret    $/;"	l
c010163d	obj/kernel.asm	/^c010163d <__intr_restore>:$/;"	l
c010163d	obj/kernel.asm	/^c010163d:	55                   	push   %ebp$/;"	l
c010163e	obj/kernel.asm	/^c010163e:	89 e5                	mov    %esp,%ebp$/;"	l
c0101640	obj/kernel.asm	/^c0101640:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101643	obj/kernel.asm	/^c0101643:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0101647	obj/kernel.asm	/^c0101647:	74 05                	je     c010164e <__intr_restore+0x11>$/;"	l
c0101649	obj/kernel.asm	/^c0101649:	e8 4e 0a 00 00       	call   c010209c <intr_enable>$/;"	l
c010164e	obj/kernel.asm	/^c010164e:	c9                   	leave  $/;"	l
c010164f	obj/kernel.asm	/^c010164f:	c3                   	ret    $/;"	l
c0101650	obj/kernel.asm	/^c0101650 <delay>:$/;"	l
c0101650	obj/kernel.asm	/^c0101650:	55                   	push   %ebp$/;"	l
c0101651	obj/kernel.asm	/^c0101651:	89 e5                	mov    %esp,%ebp$/;"	l
c0101653	obj/kernel.asm	/^c0101653:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101656	obj/kernel.asm	/^c0101656:	66 c7 45 fe 84 00    	movw   $0x84,-0x2(%ebp)$/;"	l
c010165c	obj/kernel.asm	/^c010165c:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c0101660	obj/kernel.asm	/^c0101660:	89 c2                	mov    %eax,%edx$/;"	l
c0101662	obj/kernel.asm	/^c0101662:	ec                   	in     (%dx),%al$/;"	l
c0101663	obj/kernel.asm	/^c0101663:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c0101666	obj/kernel.asm	/^c0101666:	66 c7 45 fa 84 00    	movw   $0x84,-0x6(%ebp)$/;"	l
c010166c	obj/kernel.asm	/^c010166c:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101670	obj/kernel.asm	/^c0101670:	89 c2                	mov    %eax,%edx$/;"	l
c0101672	obj/kernel.asm	/^c0101672:	ec                   	in     (%dx),%al$/;"	l
c0101673	obj/kernel.asm	/^c0101673:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101676	obj/kernel.asm	/^c0101676:	66 c7 45 f6 84 00    	movw   $0x84,-0xa(%ebp)$/;"	l
c010167c	obj/kernel.asm	/^c010167c:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101680	obj/kernel.asm	/^c0101680:	89 c2                	mov    %eax,%edx$/;"	l
c0101682	obj/kernel.asm	/^c0101682:	ec                   	in     (%dx),%al$/;"	l
c0101683	obj/kernel.asm	/^c0101683:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101686	obj/kernel.asm	/^c0101686:	66 c7 45 f2 84 00    	movw   $0x84,-0xe(%ebp)$/;"	l
c010168c	obj/kernel.asm	/^c010168c:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101690	obj/kernel.asm	/^c0101690:	89 c2                	mov    %eax,%edx$/;"	l
c0101692	obj/kernel.asm	/^c0101692:	ec                   	in     (%dx),%al$/;"	l
c0101693	obj/kernel.asm	/^c0101693:	88 45 f1             	mov    %al,-0xf(%ebp)$/;"	l
c0101696	obj/kernel.asm	/^c0101696:	c9                   	leave  $/;"	l
c0101697	obj/kernel.asm	/^c0101697:	c3                   	ret    $/;"	l
c0101698	obj/kernel.asm	/^c0101698 <cga_init>:$/;"	l
c0101698	obj/kernel.asm	/^c0101698:	55                   	push   %ebp$/;"	l
c0101699	obj/kernel.asm	/^c0101699:	89 e5                	mov    %esp,%ebp$/;"	l
c010169b	obj/kernel.asm	/^c010169b:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010169e	obj/kernel.asm	/^c010169e:	c7 45 fc 00 80 0b c0 	movl   $0xc00b8000,-0x4(%ebp)$/;"	l
c01016a5	obj/kernel.asm	/^c01016a5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01016a8	obj/kernel.asm	/^c01016a8:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c01016ab	obj/kernel.asm	/^c01016ab:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c01016af	obj/kernel.asm	/^c01016af:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01016b2	obj/kernel.asm	/^c01016b2:	66 c7 00 5a a5       	movw   $0xa55a,(%eax)$/;"	l
c01016b7	obj/kernel.asm	/^c01016b7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01016ba	obj/kernel.asm	/^c01016ba:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c01016bd	obj/kernel.asm	/^c01016bd:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
c01016c1	obj/kernel.asm	/^c01016c1:	74 12                	je     c01016d5 <cga_init+0x3d>$/;"	l
c01016c3	obj/kernel.asm	/^c01016c3:	c7 45 fc 00 00 0b c0 	movl   $0xc00b0000,-0x4(%ebp)$/;"	l
c01016ca	obj/kernel.asm	/^c01016ca:	66 c7 05 c6 e2 1a c0 	movw   $0x3b4,0xc01ae2c6$/;"	l
c01016d1	obj/kernel.asm	/^c01016d1:	b4 03 $/;"	l
c01016d3	obj/kernel.asm	/^c01016d3:	eb 13                	jmp    c01016e8 <cga_init+0x50>$/;"	l
c01016d5	obj/kernel.asm	/^c01016d5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01016d8	obj/kernel.asm	/^c01016d8:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c01016dc	obj/kernel.asm	/^c01016dc:	66 89 10             	mov    %dx,(%eax)$/;"	l
c01016df	obj/kernel.asm	/^c01016df:	66 c7 05 c6 e2 1a c0 	movw   $0x3d4,0xc01ae2c6$/;"	l
c01016e6	obj/kernel.asm	/^c01016e6:	d4 03 $/;"	d
c01016e8	obj/kernel.asm	/^c01016e8:	0f b7 05 c6 e2 1a c0 	movzwl 0xc01ae2c6,%eax$/;"	l
c01016ef	obj/kernel.asm	/^c01016ef:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01016f2	obj/kernel.asm	/^c01016f2:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c01016f6	obj/kernel.asm	/^c01016f6:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c01016fa	obj/kernel.asm	/^c01016fa:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01016fe	obj/kernel.asm	/^c01016fe:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101702	obj/kernel.asm	/^c0101702:	ee                   	out    %al,(%dx)$/;"	l
c0101703	obj/kernel.asm	/^c0101703:	0f b7 05 c6 e2 1a c0 	movzwl 0xc01ae2c6,%eax$/;"	l
c010170a	obj/kernel.asm	/^c010170a:	83 c0 01             	add    $0x1,%eax$/;"	l
c010170d	obj/kernel.asm	/^c010170d:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101710	obj/kernel.asm	/^c0101710:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0101714	obj/kernel.asm	/^c0101714:	0f b7 45 ee          	movzwl -0x12(%ebp),%eax$/;"	l
c0101718	obj/kernel.asm	/^c0101718:	89 c2                	mov    %eax,%edx$/;"	l
c010171a	obj/kernel.asm	/^c010171a:	ec                   	in     (%dx),%al$/;"	l
c010171b	obj/kernel.asm	/^c010171b:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c010171e	obj/kernel.asm	/^c010171e:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101722	obj/kernel.asm	/^c0101722:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101725	obj/kernel.asm	/^c0101725:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c0101728	obj/kernel.asm	/^c0101728:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010172b	obj/kernel.asm	/^c010172b:	0f b7 05 c6 e2 1a c0 	movzwl 0xc01ae2c6,%eax$/;"	l
c0101732	obj/kernel.asm	/^c0101732:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101735	obj/kernel.asm	/^c0101735:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0101739	obj/kernel.asm	/^c0101739:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c010173d	obj/kernel.asm	/^c010173d:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101741	obj/kernel.asm	/^c0101741:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101745	obj/kernel.asm	/^c0101745:	ee                   	out    %al,(%dx)$/;"	l
c0101746	obj/kernel.asm	/^c0101746:	0f b7 05 c6 e2 1a c0 	movzwl 0xc01ae2c6,%eax$/;"	l
c010174d	obj/kernel.asm	/^c010174d:	83 c0 01             	add    $0x1,%eax$/;"	l
c0101750	obj/kernel.asm	/^c0101750:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101753	obj/kernel.asm	/^c0101753:	66 89 45 e6          	mov    %ax,-0x1a(%ebp)$/;"	l
c0101757	obj/kernel.asm	/^c0101757:	0f b7 45 e6          	movzwl -0x1a(%ebp),%eax$/;"	l
c010175b	obj/kernel.asm	/^c010175b:	89 c2                	mov    %eax,%edx$/;"	l
c010175d	obj/kernel.asm	/^c010175d:	ec                   	in     (%dx),%al$/;"	l
c010175e	obj/kernel.asm	/^c010175e:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101761	obj/kernel.asm	/^c0101761:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101765	obj/kernel.asm	/^c0101765:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101768	obj/kernel.asm	/^c0101768:	09 45 f4             	or     %eax,-0xc(%ebp)$/;"	l
c010176b	obj/kernel.asm	/^c010176b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010176e	obj/kernel.asm	/^c010176e:	a3 c0 e2 1a c0       	mov    %eax,0xc01ae2c0$/;"	l
c0101773	obj/kernel.asm	/^c0101773:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101776	obj/kernel.asm	/^c0101776:	66 a3 c4 e2 1a c0    	mov    %ax,0xc01ae2c4$/;"	l
c010177c	obj/kernel.asm	/^c010177c:	c9                   	leave  $/;"	l
c010177d	obj/kernel.asm	/^c010177d:	c3                   	ret    $/;"	l
c010177e	obj/kernel.asm	/^c010177e <serial_init>:$/;"	l
c010177e	obj/kernel.asm	/^c010177e:	55                   	push   %ebp$/;"	l
c010177f	obj/kernel.asm	/^c010177f:	89 e5                	mov    %esp,%ebp$/;"	l
c0101781	obj/kernel.asm	/^c0101781:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0101784	obj/kernel.asm	/^c0101784:	66 c7 45 f6 fa 03    	movw   $0x3fa,-0xa(%ebp)$/;"	l
c010178a	obj/kernel.asm	/^c010178a:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)$/;"	l
c010178e	obj/kernel.asm	/^c010178e:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101792	obj/kernel.asm	/^c0101792:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101796	obj/kernel.asm	/^c0101796:	ee                   	out    %al,(%dx)$/;"	l
c0101797	obj/kernel.asm	/^c0101797:	66 c7 45 f2 fb 03    	movw   $0x3fb,-0xe(%ebp)$/;"	l
c010179d	obj/kernel.asm	/^c010179d:	c6 45 f1 80          	movb   $0x80,-0xf(%ebp)$/;"	l
c01017a1	obj/kernel.asm	/^c01017a1:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01017a5	obj/kernel.asm	/^c01017a5:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01017a9	obj/kernel.asm	/^c01017a9:	ee                   	out    %al,(%dx)$/;"	l
c01017aa	obj/kernel.asm	/^c01017aa:	66 c7 45 ee f8 03    	movw   $0x3f8,-0x12(%ebp)$/;"	l
c01017b0	obj/kernel.asm	/^c01017b0:	c6 45 ed 0c          	movb   $0xc,-0x13(%ebp)$/;"	l
c01017b4	obj/kernel.asm	/^c01017b4:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01017b8	obj/kernel.asm	/^c01017b8:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01017bc	obj/kernel.asm	/^c01017bc:	ee                   	out    %al,(%dx)$/;"	l
c01017bd	obj/kernel.asm	/^c01017bd:	66 c7 45 ea f9 03    	movw   $0x3f9,-0x16(%ebp)$/;"	l
c01017c3	obj/kernel.asm	/^c01017c3:	c6 45 e9 00          	movb   $0x0,-0x17(%ebp)$/;"	l
c01017c7	obj/kernel.asm	/^c01017c7:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c01017cb	obj/kernel.asm	/^c01017cb:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c01017cf	obj/kernel.asm	/^c01017cf:	ee                   	out    %al,(%dx)$/;"	l
c01017d0	obj/kernel.asm	/^c01017d0:	66 c7 45 e6 fb 03    	movw   $0x3fb,-0x1a(%ebp)$/;"	l
c01017d6	obj/kernel.asm	/^c01017d6:	c6 45 e5 03          	movb   $0x3,-0x1b(%ebp)$/;"	l
c01017da	obj/kernel.asm	/^c01017da:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c01017de	obj/kernel.asm	/^c01017de:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01017e2	obj/kernel.asm	/^c01017e2:	ee                   	out    %al,(%dx)$/;"	l
c01017e3	obj/kernel.asm	/^c01017e3:	66 c7 45 e2 fc 03    	movw   $0x3fc,-0x1e(%ebp)$/;"	l
c01017e9	obj/kernel.asm	/^c01017e9:	c6 45 e1 00          	movb   $0x0,-0x1f(%ebp)$/;"	l
c01017ed	obj/kernel.asm	/^c01017ed:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01017f1	obj/kernel.asm	/^c01017f1:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c01017f5	obj/kernel.asm	/^c01017f5:	ee                   	out    %al,(%dx)$/;"	l
c01017f6	obj/kernel.asm	/^c01017f6:	66 c7 45 de f9 03    	movw   $0x3f9,-0x22(%ebp)$/;"	l
c01017fc	obj/kernel.asm	/^c01017fc:	c6 45 dd 01          	movb   $0x1,-0x23(%ebp)$/;"	l
c0101800	obj/kernel.asm	/^c0101800:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0101804	obj/kernel.asm	/^c0101804:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0101808	obj/kernel.asm	/^c0101808:	ee                   	out    %al,(%dx)$/;"	l
c0101809	obj/kernel.asm	/^c0101809:	66 c7 45 da fd 03    	movw   $0x3fd,-0x26(%ebp)$/;"	l
c010180f	obj/kernel.asm	/^c010180f:	0f b7 45 da          	movzwl -0x26(%ebp),%eax$/;"	l
c0101813	obj/kernel.asm	/^c0101813:	89 c2                	mov    %eax,%edx$/;"	l
c0101815	obj/kernel.asm	/^c0101815:	ec                   	in     (%dx),%al$/;"	l
c0101816	obj/kernel.asm	/^c0101816:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c0101819	obj/kernel.asm	/^c0101819:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c010181d	obj/kernel.asm	/^c010181d:	3c ff                	cmp    $0xff,%al$/;"	l
c010181f	obj/kernel.asm	/^c010181f:	0f 95 c0             	setne  %al$/;"	l
c0101822	obj/kernel.asm	/^c0101822:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101825	obj/kernel.asm	/^c0101825:	a3 c8 e2 1a c0       	mov    %eax,0xc01ae2c8$/;"	l
c010182a	obj/kernel.asm	/^c010182a:	66 c7 45 d6 fa 03    	movw   $0x3fa,-0x2a(%ebp)$/;"	l
c0101830	obj/kernel.asm	/^c0101830:	0f b7 45 d6          	movzwl -0x2a(%ebp),%eax$/;"	l
c0101834	obj/kernel.asm	/^c0101834:	89 c2                	mov    %eax,%edx$/;"	l
c0101836	obj/kernel.asm	/^c0101836:	ec                   	in     (%dx),%al$/;"	l
c0101837	obj/kernel.asm	/^c0101837:	88 45 d5             	mov    %al,-0x2b(%ebp)$/;"	l
c010183a	obj/kernel.asm	/^c010183a:	66 c7 45 d2 f8 03    	movw   $0x3f8,-0x2e(%ebp)$/;"	l
c0101840	obj/kernel.asm	/^c0101840:	0f b7 45 d2          	movzwl -0x2e(%ebp),%eax$/;"	l
c0101844	obj/kernel.asm	/^c0101844:	89 c2                	mov    %eax,%edx$/;"	l
c0101846	obj/kernel.asm	/^c0101846:	ec                   	in     (%dx),%al$/;"	l
c0101847	obj/kernel.asm	/^c0101847:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c010184a	obj/kernel.asm	/^c010184a:	a1 c8 e2 1a c0       	mov    0xc01ae2c8,%eax$/;"	l
c010184f	obj/kernel.asm	/^c010184f:	85 c0                	test   %eax,%eax$/;"	l
c0101851	obj/kernel.asm	/^c0101851:	74 0d                	je     c0101860 <serial_init+0xe2>$/;"	l
c0101853	obj/kernel.asm	/^c0101853:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101856	obj/kernel.asm	/^c0101856:	6a 04                	push   $0x4$/;"	l
c0101858	obj/kernel.asm	/^c0101858:	e8 d7 06 00 00       	call   c0101f34 <pic_enable>$/;"	l
c010185d	obj/kernel.asm	/^c010185d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101860	obj/kernel.asm	/^c0101860:	c9                   	leave  $/;"	l
c0101861	obj/kernel.asm	/^c0101861:	c3                   	ret    $/;"	l
c0101862	obj/kernel.asm	/^c0101862 <lpt_putc_sub>:$/;"	l
c0101862	obj/kernel.asm	/^c0101862:	55                   	push   %ebp$/;"	l
c0101863	obj/kernel.asm	/^c0101863:	89 e5                	mov    %esp,%ebp$/;"	l
c0101865	obj/kernel.asm	/^c0101865:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0101868	obj/kernel.asm	/^c0101868:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010186f	obj/kernel.asm	/^c010186f:	eb 09                	jmp    c010187a <lpt_putc_sub+0x18>$/;"	l
c0101871	obj/kernel.asm	/^c0101871:	e8 da fd ff ff       	call   c0101650 <delay>$/;"	l
c0101876	obj/kernel.asm	/^c0101876:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010187a	obj/kernel.asm	/^c010187a:	66 c7 45 fa 79 03    	movw   $0x379,-0x6(%ebp)$/;"	l
c0101880	obj/kernel.asm	/^c0101880:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101884	obj/kernel.asm	/^c0101884:	89 c2                	mov    %eax,%edx$/;"	l
c0101886	obj/kernel.asm	/^c0101886:	ec                   	in     (%dx),%al$/;"	l
c0101887	obj/kernel.asm	/^c0101887:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c010188a	obj/kernel.asm	/^c010188a:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c010188e	obj/kernel.asm	/^c010188e:	84 c0                	test   %al,%al$/;"	l
c0101890	obj/kernel.asm	/^c0101890:	78 09                	js     c010189b <lpt_putc_sub+0x39>$/;"	l
c0101892	obj/kernel.asm	/^c0101892:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c0101899	obj/kernel.asm	/^c0101899:	7e d6                	jle    c0101871 <lpt_putc_sub+0xf>$/;"	l
c010189b	obj/kernel.asm	/^c010189b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010189e	obj/kernel.asm	/^c010189e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01018a1	obj/kernel.asm	/^c01018a1:	66 c7 45 f6 78 03    	movw   $0x378,-0xa(%ebp)$/;"	l
c01018a7	obj/kernel.asm	/^c01018a7:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c01018aa	obj/kernel.asm	/^c01018aa:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c01018ae	obj/kernel.asm	/^c01018ae:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c01018b2	obj/kernel.asm	/^c01018b2:	ee                   	out    %al,(%dx)$/;"	l
c01018b3	obj/kernel.asm	/^c01018b3:	66 c7 45 f2 7a 03    	movw   $0x37a,-0xe(%ebp)$/;"	l
c01018b9	obj/kernel.asm	/^c01018b9:	c6 45 f1 0d          	movb   $0xd,-0xf(%ebp)$/;"	l
c01018bd	obj/kernel.asm	/^c01018bd:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01018c1	obj/kernel.asm	/^c01018c1:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01018c5	obj/kernel.asm	/^c01018c5:	ee                   	out    %al,(%dx)$/;"	l
c01018c6	obj/kernel.asm	/^c01018c6:	66 c7 45 ee 7a 03    	movw   $0x37a,-0x12(%ebp)$/;"	l
c01018cc	obj/kernel.asm	/^c01018cc:	c6 45 ed 08          	movb   $0x8,-0x13(%ebp)$/;"	l
c01018d0	obj/kernel.asm	/^c01018d0:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01018d4	obj/kernel.asm	/^c01018d4:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01018d8	obj/kernel.asm	/^c01018d8:	ee                   	out    %al,(%dx)$/;"	l
c01018d9	obj/kernel.asm	/^c01018d9:	c9                   	leave  $/;"	l
c01018da	obj/kernel.asm	/^c01018da:	c3                   	ret    $/;"	l
c01018db	obj/kernel.asm	/^c01018db <lpt_putc>:$/;"	l
c01018db	obj/kernel.asm	/^c01018db:	55                   	push   %ebp$/;"	l
c01018dc	obj/kernel.asm	/^c01018dc:	89 e5                	mov    %esp,%ebp$/;"	l
c01018de	obj/kernel.asm	/^c01018de:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c01018e2	obj/kernel.asm	/^c01018e2:	74 0d                	je     c01018f1 <lpt_putc+0x16>$/;"	l
c01018e4	obj/kernel.asm	/^c01018e4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01018e7	obj/kernel.asm	/^c01018e7:	e8 76 ff ff ff       	call   c0101862 <lpt_putc_sub>$/;"	l
c01018ec	obj/kernel.asm	/^c01018ec:	83 c4 04             	add    $0x4,%esp$/;"	l
c01018ef	obj/kernel.asm	/^c01018ef:	eb 1e                	jmp    c010190f <lpt_putc+0x34>$/;"	l
c01018f1	obj/kernel.asm	/^c01018f1:	6a 08                	push   $0x8$/;"	l
c01018f3	obj/kernel.asm	/^c01018f3:	e8 6a ff ff ff       	call   c0101862 <lpt_putc_sub>$/;"	l
c01018f8	obj/kernel.asm	/^c01018f8:	83 c4 04             	add    $0x4,%esp$/;"	l
c01018fb	obj/kernel.asm	/^c01018fb:	6a 20                	push   $0x20$/;"	l
c01018fd	obj/kernel.asm	/^c01018fd:	e8 60 ff ff ff       	call   c0101862 <lpt_putc_sub>$/;"	l
c0101902	obj/kernel.asm	/^c0101902:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101905	obj/kernel.asm	/^c0101905:	6a 08                	push   $0x8$/;"	l
c0101907	obj/kernel.asm	/^c0101907:	e8 56 ff ff ff       	call   c0101862 <lpt_putc_sub>$/;"	l
c010190c	obj/kernel.asm	/^c010190c:	83 c4 04             	add    $0x4,%esp$/;"	l
c010190f	obj/kernel.asm	/^c010190f:	c9                   	leave  $/;"	l
c0101910	obj/kernel.asm	/^c0101910:	c3                   	ret    $/;"	l
c0101911	obj/kernel.asm	/^c0101911 <cga_putc>:$/;"	l
c0101911	obj/kernel.asm	/^c0101911:	55                   	push   %ebp$/;"	l
c0101912	obj/kernel.asm	/^c0101912:	89 e5                	mov    %esp,%ebp$/;"	l
c0101914	obj/kernel.asm	/^c0101914:	53                   	push   %ebx$/;"	l
c0101915	obj/kernel.asm	/^c0101915:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0101918	obj/kernel.asm	/^c0101918:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010191b	obj/kernel.asm	/^c010191b:	b0 00                	mov    $0x0,%al$/;"	l
c010191d	obj/kernel.asm	/^c010191d:	85 c0                	test   %eax,%eax$/;"	l
c010191f	obj/kernel.asm	/^c010191f:	75 07                	jne    c0101928 <cga_putc+0x17>$/;"	l
c0101921	obj/kernel.asm	/^c0101921:	81 4d 08 00 07 00 00 	orl    $0x700,0x8(%ebp)$/;"	l
c0101928	obj/kernel.asm	/^c0101928:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010192b	obj/kernel.asm	/^c010192b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010192e	obj/kernel.asm	/^c010192e:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
c0101931	obj/kernel.asm	/^c0101931:	74 4c                	je     c010197f <cga_putc+0x6e>$/;"	l
c0101933	obj/kernel.asm	/^c0101933:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
c0101936	obj/kernel.asm	/^c0101936:	74 57                	je     c010198f <cga_putc+0x7e>$/;"	l
c0101938	obj/kernel.asm	/^c0101938:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c010193b	obj/kernel.asm	/^c010193b:	0f 85 88 00 00 00    	jne    c01019c9 <cga_putc+0xb8>$/;"	l
c0101941	obj/kernel.asm	/^c0101941:	0f b7 05 c4 e2 1a c0 	movzwl 0xc01ae2c4,%eax$/;"	l
c0101948	obj/kernel.asm	/^c0101948:	66 85 c0             	test   %ax,%ax$/;"	l
c010194b	obj/kernel.asm	/^c010194b:	74 30                	je     c010197d <cga_putc+0x6c>$/;"	l
c010194d	obj/kernel.asm	/^c010194d:	0f b7 05 c4 e2 1a c0 	movzwl 0xc01ae2c4,%eax$/;"	l
c0101954	obj/kernel.asm	/^c0101954:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0101957	obj/kernel.asm	/^c0101957:	66 a3 c4 e2 1a c0    	mov    %ax,0xc01ae2c4$/;"	l
c010195d	obj/kernel.asm	/^c010195d:	a1 c0 e2 1a c0       	mov    0xc01ae2c0,%eax$/;"	l
c0101962	obj/kernel.asm	/^c0101962:	0f b7 15 c4 e2 1a c0 	movzwl 0xc01ae2c4,%edx$/;"	l
c0101969	obj/kernel.asm	/^c0101969:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010196c	obj/kernel.asm	/^c010196c:	01 d2                	add    %edx,%edx$/;"	l
c010196e	obj/kernel.asm	/^c010196e:	01 d0                	add    %edx,%eax$/;"	l
c0101970	obj/kernel.asm	/^c0101970:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0101973	obj/kernel.asm	/^c0101973:	b2 00                	mov    $0x0,%dl$/;"	l
c0101975	obj/kernel.asm	/^c0101975:	83 ca 20             	or     $0x20,%edx$/;"	l
c0101978	obj/kernel.asm	/^c0101978:	66 89 10             	mov    %dx,(%eax)$/;"	l
c010197b	obj/kernel.asm	/^c010197b:	eb 71                	jmp    c01019ee <cga_putc+0xdd>$/;"	l
c010197d	obj/kernel.asm	/^c010197d:	eb 6f                	jmp    c01019ee <cga_putc+0xdd>$/;"	l
c010197f	obj/kernel.asm	/^c010197f:	0f b7 05 c4 e2 1a c0 	movzwl 0xc01ae2c4,%eax$/;"	l
c0101986	obj/kernel.asm	/^c0101986:	83 c0 50             	add    $0x50,%eax$/;"	l
c0101989	obj/kernel.asm	/^c0101989:	66 a3 c4 e2 1a c0    	mov    %ax,0xc01ae2c4$/;"	l
c010198f	obj/kernel.asm	/^c010198f:	0f b7 1d c4 e2 1a c0 	movzwl 0xc01ae2c4,%ebx$/;"	l
c0101996	obj/kernel.asm	/^c0101996:	0f b7 0d c4 e2 1a c0 	movzwl 0xc01ae2c4,%ecx$/;"	l
c010199d	obj/kernel.asm	/^c010199d:	0f b7 c1             	movzwl %cx,%eax$/;"	l
c01019a0	obj/kernel.asm	/^c01019a0:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
c01019a6	obj/kernel.asm	/^c01019a6:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01019a9	obj/kernel.asm	/^c01019a9:	89 c2                	mov    %eax,%edx$/;"	l
c01019ab	obj/kernel.asm	/^c01019ab:	66 c1 ea 06          	shr    $0x6,%dx$/;"	l
c01019af	obj/kernel.asm	/^c01019af:	89 d0                	mov    %edx,%eax$/;"	l
c01019b1	obj/kernel.asm	/^c01019b1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01019b4	obj/kernel.asm	/^c01019b4:	01 d0                	add    %edx,%eax$/;"	l
c01019b6	obj/kernel.asm	/^c01019b6:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c01019b9	obj/kernel.asm	/^c01019b9:	29 c1                	sub    %eax,%ecx$/;"	l
c01019bb	obj/kernel.asm	/^c01019bb:	89 ca                	mov    %ecx,%edx$/;"	l
c01019bd	obj/kernel.asm	/^c01019bd:	89 d8                	mov    %ebx,%eax$/;"	l
c01019bf	obj/kernel.asm	/^c01019bf:	29 d0                	sub    %edx,%eax$/;"	l
c01019c1	obj/kernel.asm	/^c01019c1:	66 a3 c4 e2 1a c0    	mov    %ax,0xc01ae2c4$/;"	l
c01019c7	obj/kernel.asm	/^c01019c7:	eb 25                	jmp    c01019ee <cga_putc+0xdd>$/;"	l
c01019c9	obj/kernel.asm	/^c01019c9:	8b 0d c0 e2 1a c0    	mov    0xc01ae2c0,%ecx$/;"	l
c01019cf	obj/kernel.asm	/^c01019cf:	0f b7 05 c4 e2 1a c0 	movzwl 0xc01ae2c4,%eax$/;"	l
c01019d6	obj/kernel.asm	/^c01019d6:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01019d9	obj/kernel.asm	/^c01019d9:	66 89 15 c4 e2 1a c0 	mov    %dx,0xc01ae2c4$/;"	l
c01019e0	obj/kernel.asm	/^c01019e0:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01019e3	obj/kernel.asm	/^c01019e3:	01 c0                	add    %eax,%eax$/;"	l
c01019e5	obj/kernel.asm	/^c01019e5:	01 c8                	add    %ecx,%eax$/;"	l
c01019e7	obj/kernel.asm	/^c01019e7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01019ea	obj/kernel.asm	/^c01019ea:	66 89 10             	mov    %dx,(%eax)$/;"	l
c01019ed	obj/kernel.asm	/^c01019ed:	90                   	nop$/;"	l
c01019ee	obj/kernel.asm	/^c01019ee:	0f b7 05 c4 e2 1a c0 	movzwl 0xc01ae2c4,%eax$/;"	l
c01019f5	obj/kernel.asm	/^c01019f5:	66 3d cf 07          	cmp    $0x7cf,%ax$/;"	l
c01019f9	obj/kernel.asm	/^c01019f9:	76 59                	jbe    c0101a54 <cga_putc+0x143>$/;"	l
c01019fb	obj/kernel.asm	/^c01019fb:	a1 c0 e2 1a c0       	mov    0xc01ae2c0,%eax$/;"	l
c0101a00	obj/kernel.asm	/^c0101a00:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
c0101a06	obj/kernel.asm	/^c0101a06:	a1 c0 e2 1a c0       	mov    0xc01ae2c0,%eax$/;"	l
c0101a0b	obj/kernel.asm	/^c0101a0b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0101a0e	obj/kernel.asm	/^c0101a0e:	68 00 0f 00 00       	push   $0xf00$/;"	l
c0101a13	obj/kernel.asm	/^c0101a13:	52                   	push   %edx$/;"	l
c0101a14	obj/kernel.asm	/^c0101a14:	50                   	push   %eax$/;"	l
c0101a15	obj/kernel.asm	/^c0101a15:	e8 69 98 00 00       	call   c010b283 <memmove>$/;"	l
c0101a1a	obj/kernel.asm	/^c0101a1a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101a1d	obj/kernel.asm	/^c0101a1d:	c7 45 f4 80 07 00 00 	movl   $0x780,-0xc(%ebp)$/;"	l
c0101a24	obj/kernel.asm	/^c0101a24:	eb 15                	jmp    c0101a3b <cga_putc+0x12a>$/;"	l
c0101a26	obj/kernel.asm	/^c0101a26:	a1 c0 e2 1a c0       	mov    0xc01ae2c0,%eax$/;"	l
c0101a2b	obj/kernel.asm	/^c0101a2b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0101a2e	obj/kernel.asm	/^c0101a2e:	01 d2                	add    %edx,%edx$/;"	l
c0101a30	obj/kernel.asm	/^c0101a30:	01 d0                	add    %edx,%eax$/;"	l
c0101a32	obj/kernel.asm	/^c0101a32:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
c0101a37	obj/kernel.asm	/^c0101a37:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0101a3b	obj/kernel.asm	/^c0101a3b:	81 7d f4 cf 07 00 00 	cmpl   $0x7cf,-0xc(%ebp)$/;"	l
c0101a42	obj/kernel.asm	/^c0101a42:	7e e2                	jle    c0101a26 <cga_putc+0x115>$/;"	l
c0101a44	obj/kernel.asm	/^c0101a44:	0f b7 05 c4 e2 1a c0 	movzwl 0xc01ae2c4,%eax$/;"	l
c0101a4b	obj/kernel.asm	/^c0101a4b:	83 e8 50             	sub    $0x50,%eax$/;"	l
c0101a4e	obj/kernel.asm	/^c0101a4e:	66 a3 c4 e2 1a c0    	mov    %ax,0xc01ae2c4$/;"	l
c0101a54	obj/kernel.asm	/^c0101a54:	0f b7 05 c6 e2 1a c0 	movzwl 0xc01ae2c6,%eax$/;"	l
c0101a5b	obj/kernel.asm	/^c0101a5b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101a5e	obj/kernel.asm	/^c0101a5e:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0101a62	obj/kernel.asm	/^c0101a62:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c0101a66	obj/kernel.asm	/^c0101a66:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0101a6a	obj/kernel.asm	/^c0101a6a:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101a6e	obj/kernel.asm	/^c0101a6e:	ee                   	out    %al,(%dx)$/;"	l
c0101a6f	obj/kernel.asm	/^c0101a6f:	0f b7 05 c4 e2 1a c0 	movzwl 0xc01ae2c4,%eax$/;"	l
c0101a76	obj/kernel.asm	/^c0101a76:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c0101a7a	obj/kernel.asm	/^c0101a7a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101a7d	obj/kernel.asm	/^c0101a7d:	0f b7 15 c6 e2 1a c0 	movzwl 0xc01ae2c6,%edx$/;"	l
c0101a84	obj/kernel.asm	/^c0101a84:	83 c2 01             	add    $0x1,%edx$/;"	l
c0101a87	obj/kernel.asm	/^c0101a87:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101a8a	obj/kernel.asm	/^c0101a8a:	66 89 55 ee          	mov    %dx,-0x12(%ebp)$/;"	l
c0101a8e	obj/kernel.asm	/^c0101a8e:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c0101a91	obj/kernel.asm	/^c0101a91:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101a95	obj/kernel.asm	/^c0101a95:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101a99	obj/kernel.asm	/^c0101a99:	ee                   	out    %al,(%dx)$/;"	l
c0101a9a	obj/kernel.asm	/^c0101a9a:	0f b7 05 c6 e2 1a c0 	movzwl 0xc01ae2c6,%eax$/;"	l
c0101aa1	obj/kernel.asm	/^c0101aa1:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101aa4	obj/kernel.asm	/^c0101aa4:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0101aa8	obj/kernel.asm	/^c0101aa8:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c0101aac	obj/kernel.asm	/^c0101aac:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101ab0	obj/kernel.asm	/^c0101ab0:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101ab4	obj/kernel.asm	/^c0101ab4:	ee                   	out    %al,(%dx)$/;"	l
c0101ab5	obj/kernel.asm	/^c0101ab5:	0f b7 05 c4 e2 1a c0 	movzwl 0xc01ae2c4,%eax$/;"	l
c0101abc	obj/kernel.asm	/^c0101abc:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101abf	obj/kernel.asm	/^c0101abf:	0f b7 15 c6 e2 1a c0 	movzwl 0xc01ae2c6,%edx$/;"	l
c0101ac6	obj/kernel.asm	/^c0101ac6:	83 c2 01             	add    $0x1,%edx$/;"	l
c0101ac9	obj/kernel.asm	/^c0101ac9:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101acc	obj/kernel.asm	/^c0101acc:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101ad0	obj/kernel.asm	/^c0101ad0:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101ad3	obj/kernel.asm	/^c0101ad3:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101ad7	obj/kernel.asm	/^c0101ad7:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101adb	obj/kernel.asm	/^c0101adb:	ee                   	out    %al,(%dx)$/;"	l
c0101adc	obj/kernel.asm	/^c0101adc:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0101adf	obj/kernel.asm	/^c0101adf:	c9                   	leave  $/;"	l
c0101ae0	obj/kernel.asm	/^c0101ae0:	c3                   	ret    $/;"	l
c0101ae1	obj/kernel.asm	/^c0101ae1 <serial_putc_sub>:$/;"	l
c0101ae1	obj/kernel.asm	/^c0101ae1:	55                   	push   %ebp$/;"	l
c0101ae2	obj/kernel.asm	/^c0101ae2:	89 e5                	mov    %esp,%ebp$/;"	l
c0101ae4	obj/kernel.asm	/^c0101ae4:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101ae7	obj/kernel.asm	/^c0101ae7:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0101aee	obj/kernel.asm	/^c0101aee:	eb 09                	jmp    c0101af9 <serial_putc_sub+0x18>$/;"	l
c0101af0	obj/kernel.asm	/^c0101af0:	e8 5b fb ff ff       	call   c0101650 <delay>$/;"	l
c0101af5	obj/kernel.asm	/^c0101af5:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0101af9	obj/kernel.asm	/^c0101af9:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c0101aff	obj/kernel.asm	/^c0101aff:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101b03	obj/kernel.asm	/^c0101b03:	89 c2                	mov    %eax,%edx$/;"	l
c0101b05	obj/kernel.asm	/^c0101b05:	ec                   	in     (%dx),%al$/;"	l
c0101b06	obj/kernel.asm	/^c0101b06:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101b09	obj/kernel.asm	/^c0101b09:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101b0d	obj/kernel.asm	/^c0101b0d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101b10	obj/kernel.asm	/^c0101b10:	83 e0 20             	and    $0x20,%eax$/;"	l
c0101b13	obj/kernel.asm	/^c0101b13:	85 c0                	test   %eax,%eax$/;"	l
c0101b15	obj/kernel.asm	/^c0101b15:	75 09                	jne    c0101b20 <serial_putc_sub+0x3f>$/;"	l
c0101b17	obj/kernel.asm	/^c0101b17:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c0101b1e	obj/kernel.asm	/^c0101b1e:	7e d0                	jle    c0101af0 <serial_putc_sub+0xf>$/;"	l
c0101b20	obj/kernel.asm	/^c0101b20:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101b23	obj/kernel.asm	/^c0101b23:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101b26	obj/kernel.asm	/^c0101b26:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c0101b2c	obj/kernel.asm	/^c0101b2c:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101b2f	obj/kernel.asm	/^c0101b2f:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101b33	obj/kernel.asm	/^c0101b33:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101b37	obj/kernel.asm	/^c0101b37:	ee                   	out    %al,(%dx)$/;"	l
c0101b38	obj/kernel.asm	/^c0101b38:	c9                   	leave  $/;"	l
c0101b39	obj/kernel.asm	/^c0101b39:	c3                   	ret    $/;"	l
c0101b3a	obj/kernel.asm	/^c0101b3a <serial_putc>:$/;"	l
c0101b3a	obj/kernel.asm	/^c0101b3a:	55                   	push   %ebp$/;"	l
c0101b3b	obj/kernel.asm	/^c0101b3b:	89 e5                	mov    %esp,%ebp$/;"	l
c0101b3d	obj/kernel.asm	/^c0101b3d:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c0101b41	obj/kernel.asm	/^c0101b41:	74 0d                	je     c0101b50 <serial_putc+0x16>$/;"	l
c0101b43	obj/kernel.asm	/^c0101b43:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101b46	obj/kernel.asm	/^c0101b46:	e8 96 ff ff ff       	call   c0101ae1 <serial_putc_sub>$/;"	l
c0101b4b	obj/kernel.asm	/^c0101b4b:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101b4e	obj/kernel.asm	/^c0101b4e:	eb 1e                	jmp    c0101b6e <serial_putc+0x34>$/;"	l
c0101b50	obj/kernel.asm	/^c0101b50:	6a 08                	push   $0x8$/;"	l
c0101b52	obj/kernel.asm	/^c0101b52:	e8 8a ff ff ff       	call   c0101ae1 <serial_putc_sub>$/;"	l
c0101b57	obj/kernel.asm	/^c0101b57:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101b5a	obj/kernel.asm	/^c0101b5a:	6a 20                	push   $0x20$/;"	l
c0101b5c	obj/kernel.asm	/^c0101b5c:	e8 80 ff ff ff       	call   c0101ae1 <serial_putc_sub>$/;"	l
c0101b61	obj/kernel.asm	/^c0101b61:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101b64	obj/kernel.asm	/^c0101b64:	6a 08                	push   $0x8$/;"	l
c0101b66	obj/kernel.asm	/^c0101b66:	e8 76 ff ff ff       	call   c0101ae1 <serial_putc_sub>$/;"	l
c0101b6b	obj/kernel.asm	/^c0101b6b:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101b6e	obj/kernel.asm	/^c0101b6e:	c9                   	leave  $/;"	l
c0101b6f	obj/kernel.asm	/^c0101b6f:	c3                   	ret    $/;"	l
c0101b70	obj/kernel.asm	/^c0101b70 <cons_intr>:$/;"	l
c0101b70	obj/kernel.asm	/^c0101b70:	55                   	push   %ebp$/;"	l
c0101b71	obj/kernel.asm	/^c0101b71:	89 e5                	mov    %esp,%ebp$/;"	l
c0101b73	obj/kernel.asm	/^c0101b73:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101b76	obj/kernel.asm	/^c0101b76:	eb 33                	jmp    c0101bab <cons_intr+0x3b>$/;"	l
c0101b78	obj/kernel.asm	/^c0101b78:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101b7c	obj/kernel.asm	/^c0101b7c:	74 2d                	je     c0101bab <cons_intr+0x3b>$/;"	l
c0101b7e	obj/kernel.asm	/^c0101b7e:	a1 04 e5 1a c0       	mov    0xc01ae504,%eax$/;"	l
c0101b83	obj/kernel.asm	/^c0101b83:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101b86	obj/kernel.asm	/^c0101b86:	89 15 04 e5 1a c0    	mov    %edx,0xc01ae504$/;"	l
c0101b8c	obj/kernel.asm	/^c0101b8c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0101b8f	obj/kernel.asm	/^c0101b8f:	88 90 00 e3 1a c0    	mov    %dl,-0x3fe51d00(%eax)$/;"	l
c0101b95	obj/kernel.asm	/^c0101b95:	a1 04 e5 1a c0       	mov    0xc01ae504,%eax$/;"	l
c0101b9a	obj/kernel.asm	/^c0101b9a:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c0101b9f	obj/kernel.asm	/^c0101b9f:	75 0a                	jne    c0101bab <cons_intr+0x3b>$/;"	l
c0101ba1	obj/kernel.asm	/^c0101ba1:	c7 05 04 e5 1a c0 00 	movl   $0x0,0xc01ae504$/;"	l
c0101ba8	obj/kernel.asm	/^c0101ba8:	00 00 00 $/;"	l
c0101bab	obj/kernel.asm	/^c0101bab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101bae	obj/kernel.asm	/^c0101bae:	ff d0                	call   *%eax$/;"	l
c0101bb0	obj/kernel.asm	/^c0101bb0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101bb3	obj/kernel.asm	/^c0101bb3:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)$/;"	l
c0101bb7	obj/kernel.asm	/^c0101bb7:	75 bf                	jne    c0101b78 <cons_intr+0x8>$/;"	l
c0101bb9	obj/kernel.asm	/^c0101bb9:	c9                   	leave  $/;"	l
c0101bba	obj/kernel.asm	/^c0101bba:	c3                   	ret    $/;"	l
c0101bbb	obj/kernel.asm	/^c0101bbb <serial_proc_data>:$/;"	l
c0101bbb	obj/kernel.asm	/^c0101bbb:	55                   	push   %ebp$/;"	l
c0101bbc	obj/kernel.asm	/^c0101bbc:	89 e5                	mov    %esp,%ebp$/;"	l
c0101bbe	obj/kernel.asm	/^c0101bbe:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101bc1	obj/kernel.asm	/^c0101bc1:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c0101bc7	obj/kernel.asm	/^c0101bc7:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101bcb	obj/kernel.asm	/^c0101bcb:	89 c2                	mov    %eax,%edx$/;"	l
c0101bcd	obj/kernel.asm	/^c0101bcd:	ec                   	in     (%dx),%al$/;"	l
c0101bce	obj/kernel.asm	/^c0101bce:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101bd1	obj/kernel.asm	/^c0101bd1:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101bd5	obj/kernel.asm	/^c0101bd5:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101bd8	obj/kernel.asm	/^c0101bd8:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101bdb	obj/kernel.asm	/^c0101bdb:	85 c0                	test   %eax,%eax$/;"	l
c0101bdd	obj/kernel.asm	/^c0101bdd:	75 07                	jne    c0101be6 <serial_proc_data+0x2b>$/;"	l
c0101bdf	obj/kernel.asm	/^c0101bdf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0101be4	obj/kernel.asm	/^c0101be4:	eb 2a                	jmp    c0101c10 <serial_proc_data+0x55>$/;"	l
c0101be6	obj/kernel.asm	/^c0101be6:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c0101bec	obj/kernel.asm	/^c0101bec:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101bf0	obj/kernel.asm	/^c0101bf0:	89 c2                	mov    %eax,%edx$/;"	l
c0101bf2	obj/kernel.asm	/^c0101bf2:	ec                   	in     (%dx),%al$/;"	l
c0101bf3	obj/kernel.asm	/^c0101bf3:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101bf6	obj/kernel.asm	/^c0101bf6:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101bfa	obj/kernel.asm	/^c0101bfa:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101bfd	obj/kernel.asm	/^c0101bfd:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0101c00	obj/kernel.asm	/^c0101c00:	83 7d fc 7f          	cmpl   $0x7f,-0x4(%ebp)$/;"	l
c0101c04	obj/kernel.asm	/^c0101c04:	75 07                	jne    c0101c0d <serial_proc_data+0x52>$/;"	l
c0101c06	obj/kernel.asm	/^c0101c06:	c7 45 fc 08 00 00 00 	movl   $0x8,-0x4(%ebp)$/;"	l
c0101c0d	obj/kernel.asm	/^c0101c0d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101c10	obj/kernel.asm	/^c0101c10:	c9                   	leave  $/;"	l
c0101c11	obj/kernel.asm	/^c0101c11:	c3                   	ret    $/;"	l
c0101c12	obj/kernel.asm	/^c0101c12 <serial_intr>:$/;"	l
c0101c12	obj/kernel.asm	/^c0101c12:	55                   	push   %ebp$/;"	l
c0101c13	obj/kernel.asm	/^c0101c13:	89 e5                	mov    %esp,%ebp$/;"	l
c0101c15	obj/kernel.asm	/^c0101c15:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101c18	obj/kernel.asm	/^c0101c18:	a1 c8 e2 1a c0       	mov    0xc01ae2c8,%eax$/;"	l
c0101c1d	obj/kernel.asm	/^c0101c1d:	85 c0                	test   %eax,%eax$/;"	l
c0101c1f	obj/kernel.asm	/^c0101c1f:	74 10                	je     c0101c31 <serial_intr+0x1f>$/;"	l
c0101c21	obj/kernel.asm	/^c0101c21:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101c24	obj/kernel.asm	/^c0101c24:	68 bb 1b 10 c0       	push   $0xc0101bbb$/;"	l
c0101c29	obj/kernel.asm	/^c0101c29:	e8 42 ff ff ff       	call   c0101b70 <cons_intr>$/;"	l
c0101c2e	obj/kernel.asm	/^c0101c2e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101c31	obj/kernel.asm	/^c0101c31:	c9                   	leave  $/;"	l
c0101c32	obj/kernel.asm	/^c0101c32:	c3                   	ret    $/;"	l
c0101c33	obj/kernel.asm	/^c0101c33 <kbd_proc_data>:$/;"	l
c0101c33	obj/kernel.asm	/^c0101c33:	55                   	push   %ebp$/;"	l
c0101c34	obj/kernel.asm	/^c0101c34:	89 e5                	mov    %esp,%ebp$/;"	l
c0101c36	obj/kernel.asm	/^c0101c36:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0101c39	obj/kernel.asm	/^c0101c39:	66 c7 45 f0 64 00    	movw   $0x64,-0x10(%ebp)$/;"	l
c0101c3f	obj/kernel.asm	/^c0101c3f:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101c43	obj/kernel.asm	/^c0101c43:	89 c2                	mov    %eax,%edx$/;"	l
c0101c45	obj/kernel.asm	/^c0101c45:	ec                   	in     (%dx),%al$/;"	l
c0101c46	obj/kernel.asm	/^c0101c46:	88 45 ef             	mov    %al,-0x11(%ebp)$/;"	l
c0101c49	obj/kernel.asm	/^c0101c49:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax$/;"	l
c0101c4d	obj/kernel.asm	/^c0101c4d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101c50	obj/kernel.asm	/^c0101c50:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101c53	obj/kernel.asm	/^c0101c53:	85 c0                	test   %eax,%eax$/;"	l
c0101c55	obj/kernel.asm	/^c0101c55:	75 0a                	jne    c0101c61 <kbd_proc_data+0x2e>$/;"	l
c0101c57	obj/kernel.asm	/^c0101c57:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0101c5c	obj/kernel.asm	/^c0101c5c:	e9 5d 01 00 00       	jmp    c0101dbe <kbd_proc_data+0x18b>$/;"	l
c0101c61	obj/kernel.asm	/^c0101c61:	66 c7 45 ec 60 00    	movw   $0x60,-0x14(%ebp)$/;"	l
c0101c67	obj/kernel.asm	/^c0101c67:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0101c6b	obj/kernel.asm	/^c0101c6b:	89 c2                	mov    %eax,%edx$/;"	l
c0101c6d	obj/kernel.asm	/^c0101c6d:	ec                   	in     (%dx),%al$/;"	l
c0101c6e	obj/kernel.asm	/^c0101c6e:	88 45 eb             	mov    %al,-0x15(%ebp)$/;"	l
c0101c71	obj/kernel.asm	/^c0101c71:	0f b6 45 eb          	movzbl -0x15(%ebp),%eax$/;"	l
c0101c75	obj/kernel.asm	/^c0101c75:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0101c78	obj/kernel.asm	/^c0101c78:	80 7d f3 e0          	cmpb   $0xe0,-0xd(%ebp)$/;"	l
c0101c7c	obj/kernel.asm	/^c0101c7c:	75 17                	jne    c0101c95 <kbd_proc_data+0x62>$/;"	l
c0101c7e	obj/kernel.asm	/^c0101c7e:	a1 08 e5 1a c0       	mov    0xc01ae508,%eax$/;"	l
c0101c83	obj/kernel.asm	/^c0101c83:	83 c8 40             	or     $0x40,%eax$/;"	l
c0101c86	obj/kernel.asm	/^c0101c86:	a3 08 e5 1a c0       	mov    %eax,0xc01ae508$/;"	l
c0101c8b	obj/kernel.asm	/^c0101c8b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101c90	obj/kernel.asm	/^c0101c90:	e9 29 01 00 00       	jmp    c0101dbe <kbd_proc_data+0x18b>$/;"	l
c0101c95	obj/kernel.asm	/^c0101c95:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101c99	obj/kernel.asm	/^c0101c99:	84 c0                	test   %al,%al$/;"	l
c0101c9b	obj/kernel.asm	/^c0101c9b:	79 47                	jns    c0101ce4 <kbd_proc_data+0xb1>$/;"	l
c0101c9d	obj/kernel.asm	/^c0101c9d:	a1 08 e5 1a c0       	mov    0xc01ae508,%eax$/;"	l
c0101ca2	obj/kernel.asm	/^c0101ca2:	83 e0 40             	and    $0x40,%eax$/;"	l
c0101ca5	obj/kernel.asm	/^c0101ca5:	85 c0                	test   %eax,%eax$/;"	l
c0101ca7	obj/kernel.asm	/^c0101ca7:	75 09                	jne    c0101cb2 <kbd_proc_data+0x7f>$/;"	l
c0101ca9	obj/kernel.asm	/^c0101ca9:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101cad	obj/kernel.asm	/^c0101cad:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c0101cb0	obj/kernel.asm	/^c0101cb0:	eb 04                	jmp    c0101cb6 <kbd_proc_data+0x83>$/;"	l
c0101cb2	obj/kernel.asm	/^c0101cb2:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101cb6	obj/kernel.asm	/^c0101cb6:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0101cb9	obj/kernel.asm	/^c0101cb9:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101cbd	obj/kernel.asm	/^c0101cbd:	0f b6 80 80 c0 12 c0 	movzbl -0x3fed3f80(%eax),%eax$/;"	l
c0101cc4	obj/kernel.asm	/^c0101cc4:	83 c8 40             	or     $0x40,%eax$/;"	l
c0101cc7	obj/kernel.asm	/^c0101cc7:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101cca	obj/kernel.asm	/^c0101cca:	f7 d0                	not    %eax$/;"	l
c0101ccc	obj/kernel.asm	/^c0101ccc:	89 c2                	mov    %eax,%edx$/;"	l
c0101cce	obj/kernel.asm	/^c0101cce:	a1 08 e5 1a c0       	mov    0xc01ae508,%eax$/;"	l
c0101cd3	obj/kernel.asm	/^c0101cd3:	21 d0                	and    %edx,%eax$/;"	l
c0101cd5	obj/kernel.asm	/^c0101cd5:	a3 08 e5 1a c0       	mov    %eax,0xc01ae508$/;"	l
c0101cda	obj/kernel.asm	/^c0101cda:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101cdf	obj/kernel.asm	/^c0101cdf:	e9 da 00 00 00       	jmp    c0101dbe <kbd_proc_data+0x18b>$/;"	l
c0101ce4	obj/kernel.asm	/^c0101ce4:	a1 08 e5 1a c0       	mov    0xc01ae508,%eax$/;"	l
c0101ce9	obj/kernel.asm	/^c0101ce9:	83 e0 40             	and    $0x40,%eax$/;"	l
c0101cec	obj/kernel.asm	/^c0101cec:	85 c0                	test   %eax,%eax$/;"	l
c0101cee	obj/kernel.asm	/^c0101cee:	74 11                	je     c0101d01 <kbd_proc_data+0xce>$/;"	l
c0101cf0	obj/kernel.asm	/^c0101cf0:	80 4d f3 80          	orb    $0x80,-0xd(%ebp)$/;"	l
c0101cf4	obj/kernel.asm	/^c0101cf4:	a1 08 e5 1a c0       	mov    0xc01ae508,%eax$/;"	l
c0101cf9	obj/kernel.asm	/^c0101cf9:	83 e0 bf             	and    $0xffffffbf,%eax$/;"	l
c0101cfc	obj/kernel.asm	/^c0101cfc:	a3 08 e5 1a c0       	mov    %eax,0xc01ae508$/;"	l
c0101d01	obj/kernel.asm	/^c0101d01:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101d05	obj/kernel.asm	/^c0101d05:	0f b6 80 80 c0 12 c0 	movzbl -0x3fed3f80(%eax),%eax$/;"	l
c0101d0c	obj/kernel.asm	/^c0101d0c:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0101d0f	obj/kernel.asm	/^c0101d0f:	a1 08 e5 1a c0       	mov    0xc01ae508,%eax$/;"	l
c0101d14	obj/kernel.asm	/^c0101d14:	09 d0                	or     %edx,%eax$/;"	l
c0101d16	obj/kernel.asm	/^c0101d16:	a3 08 e5 1a c0       	mov    %eax,0xc01ae508$/;"	l
c0101d1b	obj/kernel.asm	/^c0101d1b:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101d1f	obj/kernel.asm	/^c0101d1f:	0f b6 80 80 c1 12 c0 	movzbl -0x3fed3e80(%eax),%eax$/;"	l
c0101d26	obj/kernel.asm	/^c0101d26:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0101d29	obj/kernel.asm	/^c0101d29:	a1 08 e5 1a c0       	mov    0xc01ae508,%eax$/;"	l
c0101d2e	obj/kernel.asm	/^c0101d2e:	31 d0                	xor    %edx,%eax$/;"	l
c0101d30	obj/kernel.asm	/^c0101d30:	a3 08 e5 1a c0       	mov    %eax,0xc01ae508$/;"	l
c0101d35	obj/kernel.asm	/^c0101d35:	a1 08 e5 1a c0       	mov    0xc01ae508,%eax$/;"	l
c0101d3a	obj/kernel.asm	/^c0101d3a:	83 e0 03             	and    $0x3,%eax$/;"	l
c0101d3d	obj/kernel.asm	/^c0101d3d:	8b 14 85 80 c5 12 c0 	mov    -0x3fed3a80(,%eax,4),%edx$/;"	l
c0101d44	obj/kernel.asm	/^c0101d44:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101d48	obj/kernel.asm	/^c0101d48:	01 d0                	add    %edx,%eax$/;"	l
c0101d4a	obj/kernel.asm	/^c0101d4a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101d4d	obj/kernel.asm	/^c0101d4d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101d50	obj/kernel.asm	/^c0101d50:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101d53	obj/kernel.asm	/^c0101d53:	a1 08 e5 1a c0       	mov    0xc01ae508,%eax$/;"	l
c0101d58	obj/kernel.asm	/^c0101d58:	83 e0 08             	and    $0x8,%eax$/;"	l
c0101d5b	obj/kernel.asm	/^c0101d5b:	85 c0                	test   %eax,%eax$/;"	l
c0101d5d	obj/kernel.asm	/^c0101d5d:	74 22                	je     c0101d81 <kbd_proc_data+0x14e>$/;"	l
c0101d5f	obj/kernel.asm	/^c0101d5f:	83 7d f4 60          	cmpl   $0x60,-0xc(%ebp)$/;"	l
c0101d63	obj/kernel.asm	/^c0101d63:	7e 0c                	jle    c0101d71 <kbd_proc_data+0x13e>$/;"	l
c0101d65	obj/kernel.asm	/^c0101d65:	83 7d f4 7a          	cmpl   $0x7a,-0xc(%ebp)$/;"	l
c0101d69	obj/kernel.asm	/^c0101d69:	7f 06                	jg     c0101d71 <kbd_proc_data+0x13e>$/;"	l
c0101d6b	obj/kernel.asm	/^c0101d6b:	83 6d f4 20          	subl   $0x20,-0xc(%ebp)$/;"	l
c0101d6f	obj/kernel.asm	/^c0101d6f:	eb 10                	jmp    c0101d81 <kbd_proc_data+0x14e>$/;"	l
c0101d71	obj/kernel.asm	/^c0101d71:	83 7d f4 40          	cmpl   $0x40,-0xc(%ebp)$/;"	l
c0101d75	obj/kernel.asm	/^c0101d75:	7e 0a                	jle    c0101d81 <kbd_proc_data+0x14e>$/;"	l
c0101d77	obj/kernel.asm	/^c0101d77:	83 7d f4 5a          	cmpl   $0x5a,-0xc(%ebp)$/;"	l
c0101d7b	obj/kernel.asm	/^c0101d7b:	7f 04                	jg     c0101d81 <kbd_proc_data+0x14e>$/;"	l
c0101d7d	obj/kernel.asm	/^c0101d7d:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0101d81	obj/kernel.asm	/^c0101d81:	a1 08 e5 1a c0       	mov    0xc01ae508,%eax$/;"	l
c0101d86	obj/kernel.asm	/^c0101d86:	f7 d0                	not    %eax$/;"	l
c0101d88	obj/kernel.asm	/^c0101d88:	83 e0 06             	and    $0x6,%eax$/;"	l
c0101d8b	obj/kernel.asm	/^c0101d8b:	85 c0                	test   %eax,%eax$/;"	l
c0101d8d	obj/kernel.asm	/^c0101d8d:	75 2c                	jne    c0101dbb <kbd_proc_data+0x188>$/;"	l
c0101d8f	obj/kernel.asm	/^c0101d8f:	81 7d f4 e9 00 00 00 	cmpl   $0xe9,-0xc(%ebp)$/;"	l
c0101d96	obj/kernel.asm	/^c0101d96:	75 23                	jne    c0101dbb <kbd_proc_data+0x188>$/;"	l
c0101d98	obj/kernel.asm	/^c0101d98:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101d9b	obj/kernel.asm	/^c0101d9b:	68 e9 be 10 c0       	push   $0xc010bee9$/;"	l
c0101da0	obj/kernel.asm	/^c0101da0:	e8 d5 e4 ff ff       	call   c010027a <cprintf>$/;"	l
c0101da5	obj/kernel.asm	/^c0101da5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101da8	obj/kernel.asm	/^c0101da8:	66 c7 45 e8 92 00    	movw   $0x92,-0x18(%ebp)$/;"	l
c0101dae	obj/kernel.asm	/^c0101dae:	c6 45 e7 03          	movb   $0x3,-0x19(%ebp)$/;"	l
c0101db2	obj/kernel.asm	/^c0101db2:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
c0101db6	obj/kernel.asm	/^c0101db6:	0f b7 55 e8          	movzwl -0x18(%ebp),%edx$/;"	l
c0101dba	obj/kernel.asm	/^c0101dba:	ee                   	out    %al,(%dx)$/;"	l
c0101dbb	obj/kernel.asm	/^c0101dbb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101dbe	obj/kernel.asm	/^c0101dbe:	c9                   	leave  $/;"	l
c0101dbf	obj/kernel.asm	/^c0101dbf:	c3                   	ret    $/;"	l
c0101dc0	obj/kernel.asm	/^c0101dc0 <kbd_intr>:$/;"	l
c0101dc0	obj/kernel.asm	/^c0101dc0:	55                   	push   %ebp$/;"	l
c0101dc1	obj/kernel.asm	/^c0101dc1:	89 e5                	mov    %esp,%ebp$/;"	l
c0101dc3	obj/kernel.asm	/^c0101dc3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101dc6	obj/kernel.asm	/^c0101dc6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101dc9	obj/kernel.asm	/^c0101dc9:	68 33 1c 10 c0       	push   $0xc0101c33$/;"	l
c0101dce	obj/kernel.asm	/^c0101dce:	e8 9d fd ff ff       	call   c0101b70 <cons_intr>$/;"	l
c0101dd3	obj/kernel.asm	/^c0101dd3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101dd6	obj/kernel.asm	/^c0101dd6:	c9                   	leave  $/;"	l
c0101dd7	obj/kernel.asm	/^c0101dd7:	c3                   	ret    $/;"	l
c0101dd8	obj/kernel.asm	/^c0101dd8 <kbd_init>:$/;"	l
c0101dd8	obj/kernel.asm	/^c0101dd8:	55                   	push   %ebp$/;"	l
c0101dd9	obj/kernel.asm	/^c0101dd9:	89 e5                	mov    %esp,%ebp$/;"	l
c0101ddb	obj/kernel.asm	/^c0101ddb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101dde	obj/kernel.asm	/^c0101dde:	e8 dd ff ff ff       	call   c0101dc0 <kbd_intr>$/;"	l
c0101de3	obj/kernel.asm	/^c0101de3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101de6	obj/kernel.asm	/^c0101de6:	6a 01                	push   $0x1$/;"	l
c0101de8	obj/kernel.asm	/^c0101de8:	e8 47 01 00 00       	call   c0101f34 <pic_enable>$/;"	l
c0101ded	obj/kernel.asm	/^c0101ded:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101df0	obj/kernel.asm	/^c0101df0:	c9                   	leave  $/;"	l
c0101df1	obj/kernel.asm	/^c0101df1:	c3                   	ret    $/;"	l
c0101df2	obj/kernel.asm	/^c0101df2 <cons_init>:$/;"	l
c0101df2	obj/kernel.asm	/^c0101df2:	55                   	push   %ebp$/;"	l
c0101df3	obj/kernel.asm	/^c0101df3:	89 e5                	mov    %esp,%ebp$/;"	l
c0101df5	obj/kernel.asm	/^c0101df5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101df8	obj/kernel.asm	/^c0101df8:	e8 9b f8 ff ff       	call   c0101698 <cga_init>$/;"	l
c0101dfd	obj/kernel.asm	/^c0101dfd:	e8 7c f9 ff ff       	call   c010177e <serial_init>$/;"	l
c0101e02	obj/kernel.asm	/^c0101e02:	e8 d1 ff ff ff       	call   c0101dd8 <kbd_init>$/;"	l
c0101e07	obj/kernel.asm	/^c0101e07:	a1 c8 e2 1a c0       	mov    0xc01ae2c8,%eax$/;"	l
c0101e0c	obj/kernel.asm	/^c0101e0c:	85 c0                	test   %eax,%eax$/;"	l
c0101e0e	obj/kernel.asm	/^c0101e0e:	75 10                	jne    c0101e20 <cons_init+0x2e>$/;"	l
c0101e10	obj/kernel.asm	/^c0101e10:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101e13	obj/kernel.asm	/^c0101e13:	68 f5 be 10 c0       	push   $0xc010bef5$/;"	l
c0101e18	obj/kernel.asm	/^c0101e18:	e8 5d e4 ff ff       	call   c010027a <cprintf>$/;"	l
c0101e1d	obj/kernel.asm	/^c0101e1d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101e20	obj/kernel.asm	/^c0101e20:	c9                   	leave  $/;"	l
c0101e21	obj/kernel.asm	/^c0101e21:	c3                   	ret    $/;"	l
c0101e22	obj/kernel.asm	/^c0101e22 <cons_putc>:$/;"	l
c0101e22	obj/kernel.asm	/^c0101e22:	55                   	push   %ebp$/;"	l
c0101e23	obj/kernel.asm	/^c0101e23:	89 e5                	mov    %esp,%ebp$/;"	l
c0101e25	obj/kernel.asm	/^c0101e25:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101e28	obj/kernel.asm	/^c0101e28:	e8 e6 f7 ff ff       	call   c0101613 <__intr_save>$/;"	l
c0101e2d	obj/kernel.asm	/^c0101e2d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101e30	obj/kernel.asm	/^c0101e30:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101e33	obj/kernel.asm	/^c0101e33:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101e36	obj/kernel.asm	/^c0101e36:	e8 a0 fa ff ff       	call   c01018db <lpt_putc>$/;"	l
c0101e3b	obj/kernel.asm	/^c0101e3b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101e3e	obj/kernel.asm	/^c0101e3e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101e41	obj/kernel.asm	/^c0101e41:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101e44	obj/kernel.asm	/^c0101e44:	e8 c8 fa ff ff       	call   c0101911 <cga_putc>$/;"	l
c0101e49	obj/kernel.asm	/^c0101e49:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101e4c	obj/kernel.asm	/^c0101e4c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101e4f	obj/kernel.asm	/^c0101e4f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101e52	obj/kernel.asm	/^c0101e52:	e8 e3 fc ff ff       	call   c0101b3a <serial_putc>$/;"	l
c0101e57	obj/kernel.asm	/^c0101e57:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101e5a	obj/kernel.asm	/^c0101e5a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101e5d	obj/kernel.asm	/^c0101e5d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0101e60	obj/kernel.asm	/^c0101e60:	e8 d8 f7 ff ff       	call   c010163d <__intr_restore>$/;"	l
c0101e65	obj/kernel.asm	/^c0101e65:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101e68	obj/kernel.asm	/^c0101e68:	c9                   	leave  $/;"	l
c0101e69	obj/kernel.asm	/^c0101e69:	c3                   	ret    $/;"	l
c0101e6a	obj/kernel.asm	/^c0101e6a <cons_getc>:$/;"	l
c0101e6a	obj/kernel.asm	/^c0101e6a:	55                   	push   %ebp$/;"	l
c0101e6b	obj/kernel.asm	/^c0101e6b:	89 e5                	mov    %esp,%ebp$/;"	l
c0101e6d	obj/kernel.asm	/^c0101e6d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101e70	obj/kernel.asm	/^c0101e70:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0101e77	obj/kernel.asm	/^c0101e77:	e8 97 f7 ff ff       	call   c0101613 <__intr_save>$/;"	l
c0101e7c	obj/kernel.asm	/^c0101e7c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0101e7f	obj/kernel.asm	/^c0101e7f:	e8 8e fd ff ff       	call   c0101c12 <serial_intr>$/;"	l
c0101e84	obj/kernel.asm	/^c0101e84:	e8 37 ff ff ff       	call   c0101dc0 <kbd_intr>$/;"	l
c0101e89	obj/kernel.asm	/^c0101e89:	8b 15 00 e5 1a c0    	mov    0xc01ae500,%edx$/;"	l
c0101e8f	obj/kernel.asm	/^c0101e8f:	a1 04 e5 1a c0       	mov    0xc01ae504,%eax$/;"	l
c0101e94	obj/kernel.asm	/^c0101e94:	39 c2                	cmp    %eax,%edx$/;"	l
c0101e96	obj/kernel.asm	/^c0101e96:	74 31                	je     c0101ec9 <cons_getc+0x5f>$/;"	l
c0101e98	obj/kernel.asm	/^c0101e98:	a1 00 e5 1a c0       	mov    0xc01ae500,%eax$/;"	l
c0101e9d	obj/kernel.asm	/^c0101e9d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101ea0	obj/kernel.asm	/^c0101ea0:	89 15 00 e5 1a c0    	mov    %edx,0xc01ae500$/;"	l
c0101ea6	obj/kernel.asm	/^c0101ea6:	0f b6 80 00 e3 1a c0 	movzbl -0x3fe51d00(%eax),%eax$/;"	l
c0101ead	obj/kernel.asm	/^c0101ead:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101eb0	obj/kernel.asm	/^c0101eb0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101eb3	obj/kernel.asm	/^c0101eb3:	a1 00 e5 1a c0       	mov    0xc01ae500,%eax$/;"	l
c0101eb8	obj/kernel.asm	/^c0101eb8:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c0101ebd	obj/kernel.asm	/^c0101ebd:	75 0a                	jne    c0101ec9 <cons_getc+0x5f>$/;"	l
c0101ebf	obj/kernel.asm	/^c0101ebf:	c7 05 00 e5 1a c0 00 	movl   $0x0,0xc01ae500$/;"	l
c0101ec6	obj/kernel.asm	/^c0101ec6:	00 00 00 $/;"	l
c0101ec9	obj/kernel.asm	/^c0101ec9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101ecc	obj/kernel.asm	/^c0101ecc:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0101ecf	obj/kernel.asm	/^c0101ecf:	e8 69 f7 ff ff       	call   c010163d <__intr_restore>$/;"	l
c0101ed4	obj/kernel.asm	/^c0101ed4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101ed7	obj/kernel.asm	/^c0101ed7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101eda	obj/kernel.asm	/^c0101eda:	c9                   	leave  $/;"	l
c0101edb	obj/kernel.asm	/^c0101edb:	c3                   	ret    $/;"	l
c0101edc	obj/kernel.asm	/^c0101edc <pic_setmask>:$/;"	l
c0101edc	obj/kernel.asm	/^c0101edc:	55                   	push   %ebp$/;"	l
c0101edd	obj/kernel.asm	/^c0101edd:	89 e5                	mov    %esp,%ebp$/;"	l
c0101edf	obj/kernel.asm	/^c0101edf:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0101ee2	obj/kernel.asm	/^c0101ee2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101ee5	obj/kernel.asm	/^c0101ee5:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c0101ee9	obj/kernel.asm	/^c0101ee9:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0101eed	obj/kernel.asm	/^c0101eed:	66 a3 90 c5 12 c0    	mov    %ax,0xc012c590$/;"	l
c0101ef3	obj/kernel.asm	/^c0101ef3:	a1 0c e5 1a c0       	mov    0xc01ae50c,%eax$/;"	l
c0101ef8	obj/kernel.asm	/^c0101ef8:	85 c0                	test   %eax,%eax$/;"	l
c0101efa	obj/kernel.asm	/^c0101efa:	74 36                	je     c0101f32 <pic_setmask+0x56>$/;"	l
c0101efc	obj/kernel.asm	/^c0101efc:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0101f00	obj/kernel.asm	/^c0101f00:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101f03	obj/kernel.asm	/^c0101f03:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c0101f09	obj/kernel.asm	/^c0101f09:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c0101f0c	obj/kernel.asm	/^c0101f0c:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c0101f10	obj/kernel.asm	/^c0101f10:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c0101f14	obj/kernel.asm	/^c0101f14:	ee                   	out    %al,(%dx)$/;"	l
c0101f15	obj/kernel.asm	/^c0101f15:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0101f19	obj/kernel.asm	/^c0101f19:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c0101f1d	obj/kernel.asm	/^c0101f1d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101f20	obj/kernel.asm	/^c0101f20:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c0101f26	obj/kernel.asm	/^c0101f26:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101f29	obj/kernel.asm	/^c0101f29:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101f2d	obj/kernel.asm	/^c0101f2d:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c0101f31	obj/kernel.asm	/^c0101f31:	ee                   	out    %al,(%dx)$/;"	l
c0101f32	obj/kernel.asm	/^c0101f32:	c9                   	leave  $/;"	l
c0101f33	obj/kernel.asm	/^c0101f33:	c3                   	ret    $/;"	l
c0101f34	obj/kernel.asm	/^c0101f34 <pic_enable>:$/;"	l
c0101f34	obj/kernel.asm	/^c0101f34:	55                   	push   %ebp$/;"	l
c0101f35	obj/kernel.asm	/^c0101f35:	89 e5                	mov    %esp,%ebp$/;"	l
c0101f37	obj/kernel.asm	/^c0101f37:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101f3a	obj/kernel.asm	/^c0101f3a:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0101f3f	obj/kernel.asm	/^c0101f3f:	89 c1                	mov    %eax,%ecx$/;"	l
c0101f41	obj/kernel.asm	/^c0101f41:	d3 e2                	shl    %cl,%edx$/;"	d
c0101f43	obj/kernel.asm	/^c0101f43:	89 d0                	mov    %edx,%eax$/;"	l
c0101f45	obj/kernel.asm	/^c0101f45:	f7 d0                	not    %eax$/;"	l
c0101f47	obj/kernel.asm	/^c0101f47:	89 c2                	mov    %eax,%edx$/;"	l
c0101f49	obj/kernel.asm	/^c0101f49:	0f b7 05 90 c5 12 c0 	movzwl 0xc012c590,%eax$/;"	l
c0101f50	obj/kernel.asm	/^c0101f50:	21 d0                	and    %edx,%eax$/;"	l
c0101f52	obj/kernel.asm	/^c0101f52:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101f55	obj/kernel.asm	/^c0101f55:	50                   	push   %eax$/;"	l
c0101f56	obj/kernel.asm	/^c0101f56:	e8 81 ff ff ff       	call   c0101edc <pic_setmask>$/;"	l
c0101f5b	obj/kernel.asm	/^c0101f5b:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101f5e	obj/kernel.asm	/^c0101f5e:	c9                   	leave  $/;"	l
c0101f5f	obj/kernel.asm	/^c0101f5f:	c3                   	ret    $/;"	l
c0101f60	obj/kernel.asm	/^c0101f60 <pic_init>:$/;"	l
c0101f60	obj/kernel.asm	/^c0101f60:	55                   	push   %ebp$/;"	l
c0101f61	obj/kernel.asm	/^c0101f61:	89 e5                	mov    %esp,%ebp$/;"	l
c0101f63	obj/kernel.asm	/^c0101f63:	83 ec 40             	sub    $0x40,%esp$/;"	l
c0101f66	obj/kernel.asm	/^c0101f66:	c7 05 0c e5 1a c0 01 	movl   $0x1,0xc01ae50c$/;"	l
c0101f6d	obj/kernel.asm	/^c0101f6d:	00 00 00 $/;"	l
c0101f70	obj/kernel.asm	/^c0101f70:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c0101f76	obj/kernel.asm	/^c0101f76:	c6 45 fd ff          	movb   $0xff,-0x3(%ebp)$/;"	l
c0101f7a	obj/kernel.asm	/^c0101f7a:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c0101f7e	obj/kernel.asm	/^c0101f7e:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c0101f82	obj/kernel.asm	/^c0101f82:	ee                   	out    %al,(%dx)$/;"	l
c0101f83	obj/kernel.asm	/^c0101f83:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c0101f89	obj/kernel.asm	/^c0101f89:	c6 45 f9 ff          	movb   $0xff,-0x7(%ebp)$/;"	l
c0101f8d	obj/kernel.asm	/^c0101f8d:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101f91	obj/kernel.asm	/^c0101f91:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c0101f95	obj/kernel.asm	/^c0101f95:	ee                   	out    %al,(%dx)$/;"	l
c0101f96	obj/kernel.asm	/^c0101f96:	66 c7 45 f6 20 00    	movw   $0x20,-0xa(%ebp)$/;"	l
c0101f9c	obj/kernel.asm	/^c0101f9c:	c6 45 f5 11          	movb   $0x11,-0xb(%ebp)$/;"	l
c0101fa0	obj/kernel.asm	/^c0101fa0:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101fa4	obj/kernel.asm	/^c0101fa4:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101fa8	obj/kernel.asm	/^c0101fa8:	ee                   	out    %al,(%dx)$/;"	l
c0101fa9	obj/kernel.asm	/^c0101fa9:	66 c7 45 f2 21 00    	movw   $0x21,-0xe(%ebp)$/;"	l
c0101faf	obj/kernel.asm	/^c0101faf:	c6 45 f1 20          	movb   $0x20,-0xf(%ebp)$/;"	l
c0101fb3	obj/kernel.asm	/^c0101fb3:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0101fb7	obj/kernel.asm	/^c0101fb7:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101fbb	obj/kernel.asm	/^c0101fbb:	ee                   	out    %al,(%dx)$/;"	l
c0101fbc	obj/kernel.asm	/^c0101fbc:	66 c7 45 ee 21 00    	movw   $0x21,-0x12(%ebp)$/;"	l
c0101fc2	obj/kernel.asm	/^c0101fc2:	c6 45 ed 04          	movb   $0x4,-0x13(%ebp)$/;"	l
c0101fc6	obj/kernel.asm	/^c0101fc6:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101fca	obj/kernel.asm	/^c0101fca:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101fce	obj/kernel.asm	/^c0101fce:	ee                   	out    %al,(%dx)$/;"	l
c0101fcf	obj/kernel.asm	/^c0101fcf:	66 c7 45 ea 21 00    	movw   $0x21,-0x16(%ebp)$/;"	l
c0101fd5	obj/kernel.asm	/^c0101fd5:	c6 45 e9 03          	movb   $0x3,-0x17(%ebp)$/;"	l
c0101fd9	obj/kernel.asm	/^c0101fd9:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101fdd	obj/kernel.asm	/^c0101fdd:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101fe1	obj/kernel.asm	/^c0101fe1:	ee                   	out    %al,(%dx)$/;"	l
c0101fe2	obj/kernel.asm	/^c0101fe2:	66 c7 45 e6 a0 00    	movw   $0xa0,-0x1a(%ebp)$/;"	l
c0101fe8	obj/kernel.asm	/^c0101fe8:	c6 45 e5 11          	movb   $0x11,-0x1b(%ebp)$/;"	l
c0101fec	obj/kernel.asm	/^c0101fec:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101ff0	obj/kernel.asm	/^c0101ff0:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101ff4	obj/kernel.asm	/^c0101ff4:	ee                   	out    %al,(%dx)$/;"	l
c0101ff5	obj/kernel.asm	/^c0101ff5:	66 c7 45 e2 a1 00    	movw   $0xa1,-0x1e(%ebp)$/;"	l
c0101ffb	obj/kernel.asm	/^c0101ffb:	c6 45 e1 28          	movb   $0x28,-0x1f(%ebp)$/;"	l
c0101fff	obj/kernel.asm	/^c0101fff:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0102003	obj/kernel.asm	/^c0102003:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c0102007	obj/kernel.asm	/^c0102007:	ee                   	out    %al,(%dx)$/;"	l
c0102008	obj/kernel.asm	/^c0102008:	66 c7 45 de a1 00    	movw   $0xa1,-0x22(%ebp)$/;"	l
c010200e	obj/kernel.asm	/^c010200e:	c6 45 dd 02          	movb   $0x2,-0x23(%ebp)$/;"	l
c0102012	obj/kernel.asm	/^c0102012:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0102016	obj/kernel.asm	/^c0102016:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c010201a	obj/kernel.asm	/^c010201a:	ee                   	out    %al,(%dx)$/;"	l
c010201b	obj/kernel.asm	/^c010201b:	66 c7 45 da a1 00    	movw   $0xa1,-0x26(%ebp)$/;"	l
c0102021	obj/kernel.asm	/^c0102021:	c6 45 d9 03          	movb   $0x3,-0x27(%ebp)$/;"	l
c0102025	obj/kernel.asm	/^c0102025:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c0102029	obj/kernel.asm	/^c0102029:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c010202d	obj/kernel.asm	/^c010202d:	ee                   	out    %al,(%dx)$/;"	l
c010202e	obj/kernel.asm	/^c010202e:	66 c7 45 d6 20 00    	movw   $0x20,-0x2a(%ebp)$/;"	l
c0102034	obj/kernel.asm	/^c0102034:	c6 45 d5 68          	movb   $0x68,-0x2b(%ebp)$/;"	l
c0102038	obj/kernel.asm	/^c0102038:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c010203c	obj/kernel.asm	/^c010203c:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c0102040	obj/kernel.asm	/^c0102040:	ee                   	out    %al,(%dx)$/;"	l
c0102041	obj/kernel.asm	/^c0102041:	66 c7 45 d2 20 00    	movw   $0x20,-0x2e(%ebp)$/;"	l
c0102047	obj/kernel.asm	/^c0102047:	c6 45 d1 0a          	movb   $0xa,-0x2f(%ebp)$/;"	l
c010204b	obj/kernel.asm	/^c010204b:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c010204f	obj/kernel.asm	/^c010204f:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c0102053	obj/kernel.asm	/^c0102053:	ee                   	out    %al,(%dx)$/;"	l
c0102054	obj/kernel.asm	/^c0102054:	66 c7 45 ce a0 00    	movw   $0xa0,-0x32(%ebp)$/;"	l
c010205a	obj/kernel.asm	/^c010205a:	c6 45 cd 68          	movb   $0x68,-0x33(%ebp)$/;"	l
c010205e	obj/kernel.asm	/^c010205e:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c0102062	obj/kernel.asm	/^c0102062:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c0102066	obj/kernel.asm	/^c0102066:	ee                   	out    %al,(%dx)$/;"	l
c0102067	obj/kernel.asm	/^c0102067:	66 c7 45 ca a0 00    	movw   $0xa0,-0x36(%ebp)$/;"	l
c010206d	obj/kernel.asm	/^c010206d:	c6 45 c9 0a          	movb   $0xa,-0x37(%ebp)$/;"	l
c0102071	obj/kernel.asm	/^c0102071:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c0102075	obj/kernel.asm	/^c0102075:	0f b7 55 ca          	movzwl -0x36(%ebp),%edx$/;"	l
c0102079	obj/kernel.asm	/^c0102079:	ee                   	out    %al,(%dx)$/;"	l
c010207a	obj/kernel.asm	/^c010207a:	0f b7 05 90 c5 12 c0 	movzwl 0xc012c590,%eax$/;"	l
c0102081	obj/kernel.asm	/^c0102081:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
c0102085	obj/kernel.asm	/^c0102085:	74 13                	je     c010209a <pic_init+0x13a>$/;"	l
c0102087	obj/kernel.asm	/^c0102087:	0f b7 05 90 c5 12 c0 	movzwl 0xc012c590,%eax$/;"	l
c010208e	obj/kernel.asm	/^c010208e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102091	obj/kernel.asm	/^c0102091:	50                   	push   %eax$/;"	l
c0102092	obj/kernel.asm	/^c0102092:	e8 45 fe ff ff       	call   c0101edc <pic_setmask>$/;"	l
c0102097	obj/kernel.asm	/^c0102097:	83 c4 04             	add    $0x4,%esp$/;"	l
c010209a	obj/kernel.asm	/^c010209a:	c9                   	leave  $/;"	l
c010209b	obj/kernel.asm	/^c010209b:	c3                   	ret    $/;"	l
c010209c	obj/kernel.asm	/^c010209c <intr_enable>:$/;"	l
c010209c	obj/kernel.asm	/^c010209c:	55                   	push   %ebp$/;"	l
c010209d	obj/kernel.asm	/^c010209d:	89 e5                	mov    %esp,%ebp$/;"	l
c010209f	obj/kernel.asm	/^c010209f:	fb                   	sti    $/;"	l
c01020a0	obj/kernel.asm	/^c01020a0:	5d                   	pop    %ebp$/;"	l
c01020a1	obj/kernel.asm	/^c01020a1:	c3                   	ret    $/;"	l
c01020a2	obj/kernel.asm	/^c01020a2 <intr_disable>:$/;"	l
c01020a2	obj/kernel.asm	/^c01020a2:	55                   	push   %ebp$/;"	l
c01020a3	obj/kernel.asm	/^c01020a3:	89 e5                	mov    %esp,%ebp$/;"	l
c01020a5	obj/kernel.asm	/^c01020a5:	fa                   	cli    $/;"	l
c01020a6	obj/kernel.asm	/^c01020a6:	5d                   	pop    %ebp$/;"	l
c01020a7	obj/kernel.asm	/^c01020a7:	c3                   	ret    $/;"	l
c01020a8	obj/kernel.asm	/^c01020a8 <print_ticks>:$/;"	l
c01020a8	obj/kernel.asm	/^c01020a8:	55                   	push   %ebp$/;"	l
c01020a9	obj/kernel.asm	/^c01020a9:	89 e5                	mov    %esp,%ebp$/;"	l
c01020ab	obj/kernel.asm	/^c01020ab:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01020ae	obj/kernel.asm	/^c01020ae:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01020b1	obj/kernel.asm	/^c01020b1:	6a 64                	push   $0x64$/;"	l
c01020b3	obj/kernel.asm	/^c01020b3:	68 40 bf 10 c0       	push   $0xc010bf40$/;"	l
c01020b8	obj/kernel.asm	/^c01020b8:	e8 bd e1 ff ff       	call   c010027a <cprintf>$/;"	l
c01020bd	obj/kernel.asm	/^c01020bd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01020c0	obj/kernel.asm	/^c01020c0:	c9                   	leave  $/;"	l
c01020c1	obj/kernel.asm	/^c01020c1:	c3                   	ret    $/;"	l
c01020c2	obj/kernel.asm	/^c01020c2 <idt_init>:$/;"	l
c01020c2	obj/kernel.asm	/^c01020c2:	55                   	push   %ebp$/;"	l
c01020c3	obj/kernel.asm	/^c01020c3:	89 e5                	mov    %esp,%ebp$/;"	l
c01020c5	obj/kernel.asm	/^c01020c5:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01020c8	obj/kernel.asm	/^c01020c8:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01020cf	obj/kernel.asm	/^c01020cf:	e9 5c 02 00 00       	jmp    c0102330 <idt_init+0x26e>$/;"	l
c01020d4	obj/kernel.asm	/^c01020d4:	81 7d fc 80 00 00 00 	cmpl   $0x80,-0x4(%ebp)$/;"	l
c01020db	obj/kernel.asm	/^c01020db:	0f 85 c1 00 00 00    	jne    c01021a2 <idt_init+0xe0>$/;"	l
c01020e1	obj/kernel.asm	/^c01020e1:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01020e4	obj/kernel.asm	/^c01020e4:	8b 04 85 60 c6 12 c0 	mov    -0x3fed39a0(,%eax,4),%eax$/;"	l
c01020eb	obj/kernel.asm	/^c01020eb:	89 c2                	mov    %eax,%edx$/;"	l
c01020ed	obj/kernel.asm	/^c01020ed:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01020f0	obj/kernel.asm	/^c01020f0:	66 89 14 c5 40 e5 1a 	mov    %dx,-0x3fe51ac0(,%eax,8)$/;"	l
c01020f7	obj/kernel.asm	/^c01020f7:	c0 $/;"	l
c01020f8	obj/kernel.asm	/^c01020f8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01020fb	obj/kernel.asm	/^c01020fb:	66 c7 04 c5 42 e5 1a 	movw   $0x8,-0x3fe51abe(,%eax,8)$/;"	l
c0102102	obj/kernel.asm	/^c0102102:	c0 08 00 $/;"	l
c0102105	obj/kernel.asm	/^c0102105:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102108	obj/kernel.asm	/^c0102108:	0f b6 14 c5 44 e5 1a 	movzbl -0x3fe51abc(,%eax,8),%edx$/;"	l
c010210f	obj/kernel.asm	/^c010210f:	c0 $/;"	l
c0102110	obj/kernel.asm	/^c0102110:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c0102113	obj/kernel.asm	/^c0102113:	88 14 c5 44 e5 1a c0 	mov    %dl,-0x3fe51abc(,%eax,8)$/;"	l
c010211a	obj/kernel.asm	/^c010211a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010211d	obj/kernel.asm	/^c010211d:	0f b6 14 c5 44 e5 1a 	movzbl -0x3fe51abc(,%eax,8),%edx$/;"	l
c0102124	obj/kernel.asm	/^c0102124:	c0 $/;"	l
c0102125	obj/kernel.asm	/^c0102125:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c0102128	obj/kernel.asm	/^c0102128:	88 14 c5 44 e5 1a c0 	mov    %dl,-0x3fe51abc(,%eax,8)$/;"	l
c010212f	obj/kernel.asm	/^c010212f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102132	obj/kernel.asm	/^c0102132:	0f b6 14 c5 45 e5 1a 	movzbl -0x3fe51abb(,%eax,8),%edx$/;"	l
c0102139	obj/kernel.asm	/^c0102139:	c0 $/;"	l
c010213a	obj/kernel.asm	/^c010213a:	83 ca 0f             	or     $0xf,%edx$/;"	l
c010213d	obj/kernel.asm	/^c010213d:	88 14 c5 45 e5 1a c0 	mov    %dl,-0x3fe51abb(,%eax,8)$/;"	l
c0102144	obj/kernel.asm	/^c0102144:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102147	obj/kernel.asm	/^c0102147:	0f b6 14 c5 45 e5 1a 	movzbl -0x3fe51abb(,%eax,8),%edx$/;"	l
c010214e	obj/kernel.asm	/^c010214e:	c0 $/;"	l
c010214f	obj/kernel.asm	/^c010214f:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c0102152	obj/kernel.asm	/^c0102152:	88 14 c5 45 e5 1a c0 	mov    %dl,-0x3fe51abb(,%eax,8)$/;"	l
c0102159	obj/kernel.asm	/^c0102159:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010215c	obj/kernel.asm	/^c010215c:	0f b6 14 c5 45 e5 1a 	movzbl -0x3fe51abb(,%eax,8),%edx$/;"	l
c0102163	obj/kernel.asm	/^c0102163:	c0 $/;"	l
c0102164	obj/kernel.asm	/^c0102164:	83 ca 60             	or     $0x60,%edx$/;"	l
c0102167	obj/kernel.asm	/^c0102167:	88 14 c5 45 e5 1a c0 	mov    %dl,-0x3fe51abb(,%eax,8)$/;"	l
c010216e	obj/kernel.asm	/^c010216e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102171	obj/kernel.asm	/^c0102171:	0f b6 14 c5 45 e5 1a 	movzbl -0x3fe51abb(,%eax,8),%edx$/;"	l
c0102178	obj/kernel.asm	/^c0102178:	c0 $/;"	l
c0102179	obj/kernel.asm	/^c0102179:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c010217c	obj/kernel.asm	/^c010217c:	88 14 c5 45 e5 1a c0 	mov    %dl,-0x3fe51abb(,%eax,8)$/;"	l
c0102183	obj/kernel.asm	/^c0102183:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102186	obj/kernel.asm	/^c0102186:	8b 04 85 60 c6 12 c0 	mov    -0x3fed39a0(,%eax,4),%eax$/;"	l
c010218d	obj/kernel.asm	/^c010218d:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0102190	obj/kernel.asm	/^c0102190:	89 c2                	mov    %eax,%edx$/;"	l
c0102192	obj/kernel.asm	/^c0102192:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102195	obj/kernel.asm	/^c0102195:	66 89 14 c5 46 e5 1a 	mov    %dx,-0x3fe51aba(,%eax,8)$/;"	l
c010219c	obj/kernel.asm	/^c010219c:	c0 $/;"	l
c010219d	obj/kernel.asm	/^c010219d:	e9 8a 01 00 00       	jmp    c010232c <idt_init+0x26a>$/;"	l
c01021a2	obj/kernel.asm	/^c01021a2:	83 7d fc 1f          	cmpl   $0x1f,-0x4(%ebp)$/;"	l
c01021a6	obj/kernel.asm	/^c01021a6:	0f 8f c1 00 00 00    	jg     c010226d <idt_init+0x1ab>$/;"	l
c01021ac	obj/kernel.asm	/^c01021ac:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021af	obj/kernel.asm	/^c01021af:	8b 04 85 60 c6 12 c0 	mov    -0x3fed39a0(,%eax,4),%eax$/;"	l
c01021b6	obj/kernel.asm	/^c01021b6:	89 c2                	mov    %eax,%edx$/;"	l
c01021b8	obj/kernel.asm	/^c01021b8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021bb	obj/kernel.asm	/^c01021bb:	66 89 14 c5 40 e5 1a 	mov    %dx,-0x3fe51ac0(,%eax,8)$/;"	l
c01021c2	obj/kernel.asm	/^c01021c2:	c0 $/;"	l
c01021c3	obj/kernel.asm	/^c01021c3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021c6	obj/kernel.asm	/^c01021c6:	66 c7 04 c5 42 e5 1a 	movw   $0x8,-0x3fe51abe(,%eax,8)$/;"	l
c01021cd	obj/kernel.asm	/^c01021cd:	c0 08 00 $/;"	l
c01021d0	obj/kernel.asm	/^c01021d0:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021d3	obj/kernel.asm	/^c01021d3:	0f b6 14 c5 44 e5 1a 	movzbl -0x3fe51abc(,%eax,8),%edx$/;"	l
c01021da	obj/kernel.asm	/^c01021da:	c0 $/;"	l
c01021db	obj/kernel.asm	/^c01021db:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c01021de	obj/kernel.asm	/^c01021de:	88 14 c5 44 e5 1a c0 	mov    %dl,-0x3fe51abc(,%eax,8)$/;"	l
c01021e5	obj/kernel.asm	/^c01021e5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021e8	obj/kernel.asm	/^c01021e8:	0f b6 14 c5 44 e5 1a 	movzbl -0x3fe51abc(,%eax,8),%edx$/;"	l
c01021ef	obj/kernel.asm	/^c01021ef:	c0 $/;"	l
c01021f0	obj/kernel.asm	/^c01021f0:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c01021f3	obj/kernel.asm	/^c01021f3:	88 14 c5 44 e5 1a c0 	mov    %dl,-0x3fe51abc(,%eax,8)$/;"	l
c01021fa	obj/kernel.asm	/^c01021fa:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01021fd	obj/kernel.asm	/^c01021fd:	0f b6 14 c5 45 e5 1a 	movzbl -0x3fe51abb(,%eax,8),%edx$/;"	l
c0102204	obj/kernel.asm	/^c0102204:	c0 $/;"	l
c0102205	obj/kernel.asm	/^c0102205:	83 ca 0f             	or     $0xf,%edx$/;"	l
c0102208	obj/kernel.asm	/^c0102208:	88 14 c5 45 e5 1a c0 	mov    %dl,-0x3fe51abb(,%eax,8)$/;"	l
c010220f	obj/kernel.asm	/^c010220f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102212	obj/kernel.asm	/^c0102212:	0f b6 14 c5 45 e5 1a 	movzbl -0x3fe51abb(,%eax,8),%edx$/;"	l
c0102219	obj/kernel.asm	/^c0102219:	c0 $/;"	l
c010221a	obj/kernel.asm	/^c010221a:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c010221d	obj/kernel.asm	/^c010221d:	88 14 c5 45 e5 1a c0 	mov    %dl,-0x3fe51abb(,%eax,8)$/;"	l
c0102224	obj/kernel.asm	/^c0102224:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102227	obj/kernel.asm	/^c0102227:	0f b6 14 c5 45 e5 1a 	movzbl -0x3fe51abb(,%eax,8),%edx$/;"	l
c010222e	obj/kernel.asm	/^c010222e:	c0 $/;"	l
c010222f	obj/kernel.asm	/^c010222f:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c0102232	obj/kernel.asm	/^c0102232:	88 14 c5 45 e5 1a c0 	mov    %dl,-0x3fe51abb(,%eax,8)$/;"	l
c0102239	obj/kernel.asm	/^c0102239:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010223c	obj/kernel.asm	/^c010223c:	0f b6 14 c5 45 e5 1a 	movzbl -0x3fe51abb(,%eax,8),%edx$/;"	l
c0102243	obj/kernel.asm	/^c0102243:	c0 $/;"	l
c0102244	obj/kernel.asm	/^c0102244:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c0102247	obj/kernel.asm	/^c0102247:	88 14 c5 45 e5 1a c0 	mov    %dl,-0x3fe51abb(,%eax,8)$/;"	l
c010224e	obj/kernel.asm	/^c010224e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102251	obj/kernel.asm	/^c0102251:	8b 04 85 60 c6 12 c0 	mov    -0x3fed39a0(,%eax,4),%eax$/;"	l
c0102258	obj/kernel.asm	/^c0102258:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010225b	obj/kernel.asm	/^c010225b:	89 c2                	mov    %eax,%edx$/;"	l
c010225d	obj/kernel.asm	/^c010225d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102260	obj/kernel.asm	/^c0102260:	66 89 14 c5 46 e5 1a 	mov    %dx,-0x3fe51aba(,%eax,8)$/;"	l
c0102267	obj/kernel.asm	/^c0102267:	c0 $/;"	l
c0102268	obj/kernel.asm	/^c0102268:	e9 bf 00 00 00       	jmp    c010232c <idt_init+0x26a>$/;"	l
c010226d	obj/kernel.asm	/^c010226d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102270	obj/kernel.asm	/^c0102270:	8b 04 85 60 c6 12 c0 	mov    -0x3fed39a0(,%eax,4),%eax$/;"	l
c0102277	obj/kernel.asm	/^c0102277:	89 c2                	mov    %eax,%edx$/;"	l
c0102279	obj/kernel.asm	/^c0102279:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010227c	obj/kernel.asm	/^c010227c:	66 89 14 c5 40 e5 1a 	mov    %dx,-0x3fe51ac0(,%eax,8)$/;"	l
c0102283	obj/kernel.asm	/^c0102283:	c0 $/;"	l
c0102284	obj/kernel.asm	/^c0102284:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102287	obj/kernel.asm	/^c0102287:	66 c7 04 c5 42 e5 1a 	movw   $0x8,-0x3fe51abe(,%eax,8)$/;"	l
c010228e	obj/kernel.asm	/^c010228e:	c0 08 00 $/;"	l
c0102291	obj/kernel.asm	/^c0102291:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102294	obj/kernel.asm	/^c0102294:	0f b6 14 c5 44 e5 1a 	movzbl -0x3fe51abc(,%eax,8),%edx$/;"	l
c010229b	obj/kernel.asm	/^c010229b:	c0 $/;"	l
c010229c	obj/kernel.asm	/^c010229c:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c010229f	obj/kernel.asm	/^c010229f:	88 14 c5 44 e5 1a c0 	mov    %dl,-0x3fe51abc(,%eax,8)$/;"	l
c01022a6	obj/kernel.asm	/^c01022a6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022a9	obj/kernel.asm	/^c01022a9:	0f b6 14 c5 44 e5 1a 	movzbl -0x3fe51abc(,%eax,8),%edx$/;"	l
c01022b0	obj/kernel.asm	/^c01022b0:	c0 $/;"	l
c01022b1	obj/kernel.asm	/^c01022b1:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c01022b4	obj/kernel.asm	/^c01022b4:	88 14 c5 44 e5 1a c0 	mov    %dl,-0x3fe51abc(,%eax,8)$/;"	l
c01022bb	obj/kernel.asm	/^c01022bb:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022be	obj/kernel.asm	/^c01022be:	0f b6 14 c5 45 e5 1a 	movzbl -0x3fe51abb(,%eax,8),%edx$/;"	l
c01022c5	obj/kernel.asm	/^c01022c5:	c0 $/;"	l
c01022c6	obj/kernel.asm	/^c01022c6:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c01022c9	obj/kernel.asm	/^c01022c9:	83 ca 0e             	or     $0xe,%edx$/;"	l
c01022cc	obj/kernel.asm	/^c01022cc:	88 14 c5 45 e5 1a c0 	mov    %dl,-0x3fe51abb(,%eax,8)$/;"	l
c01022d3	obj/kernel.asm	/^c01022d3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022d6	obj/kernel.asm	/^c01022d6:	0f b6 14 c5 45 e5 1a 	movzbl -0x3fe51abb(,%eax,8),%edx$/;"	l
c01022dd	obj/kernel.asm	/^c01022dd:	c0 $/;"	l
c01022de	obj/kernel.asm	/^c01022de:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c01022e1	obj/kernel.asm	/^c01022e1:	88 14 c5 45 e5 1a c0 	mov    %dl,-0x3fe51abb(,%eax,8)$/;"	l
c01022e8	obj/kernel.asm	/^c01022e8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022eb	obj/kernel.asm	/^c01022eb:	0f b6 14 c5 45 e5 1a 	movzbl -0x3fe51abb(,%eax,8),%edx$/;"	l
c01022f2	obj/kernel.asm	/^c01022f2:	c0 $/;"	l
c01022f3	obj/kernel.asm	/^c01022f3:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c01022f6	obj/kernel.asm	/^c01022f6:	88 14 c5 45 e5 1a c0 	mov    %dl,-0x3fe51abb(,%eax,8)$/;"	l
c01022fd	obj/kernel.asm	/^c01022fd:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102300	obj/kernel.asm	/^c0102300:	0f b6 14 c5 45 e5 1a 	movzbl -0x3fe51abb(,%eax,8),%edx$/;"	l
c0102307	obj/kernel.asm	/^c0102307:	c0 $/;"	l
c0102308	obj/kernel.asm	/^c0102308:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c010230b	obj/kernel.asm	/^c010230b:	88 14 c5 45 e5 1a c0 	mov    %dl,-0x3fe51abb(,%eax,8)$/;"	l
c0102312	obj/kernel.asm	/^c0102312:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102315	obj/kernel.asm	/^c0102315:	8b 04 85 60 c6 12 c0 	mov    -0x3fed39a0(,%eax,4),%eax$/;"	l
c010231c	obj/kernel.asm	/^c010231c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010231f	obj/kernel.asm	/^c010231f:	89 c2                	mov    %eax,%edx$/;"	l
c0102321	obj/kernel.asm	/^c0102321:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102324	obj/kernel.asm	/^c0102324:	66 89 14 c5 46 e5 1a 	mov    %dx,-0x3fe51aba(,%eax,8)$/;"	l
c010232b	obj/kernel.asm	/^c010232b:	c0 $/;"	l
c010232c	obj/kernel.asm	/^c010232c:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0102330	obj/kernel.asm	/^c0102330:	81 7d fc ff 00 00 00 	cmpl   $0xff,-0x4(%ebp)$/;"	l
c0102337	obj/kernel.asm	/^c0102337:	0f 8e 97 fd ff ff    	jle    c01020d4 <idt_init+0x12>$/;"	l
c010233d	obj/kernel.asm	/^c010233d:	a1 44 c8 12 c0       	mov    0xc012c844,%eax$/;"	l
c0102342	obj/kernel.asm	/^c0102342:	66 a3 08 e9 1a c0    	mov    %ax,0xc01ae908$/;"	l
c0102348	obj/kernel.asm	/^c0102348:	66 c7 05 0a e9 1a c0 	movw   $0x8,0xc01ae90a$/;"	l
c010234f	obj/kernel.asm	/^c010234f:	08 00 $/;"	l
c0102351	obj/kernel.asm	/^c0102351:	0f b6 05 0c e9 1a c0 	movzbl 0xc01ae90c,%eax$/;"	l
c0102358	obj/kernel.asm	/^c0102358:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
c010235b	obj/kernel.asm	/^c010235b:	a2 0c e9 1a c0       	mov    %al,0xc01ae90c$/;"	l
c0102360	obj/kernel.asm	/^c0102360:	0f b6 05 0c e9 1a c0 	movzbl 0xc01ae90c,%eax$/;"	l
c0102367	obj/kernel.asm	/^c0102367:	83 e0 1f             	and    $0x1f,%eax$/;"	l
c010236a	obj/kernel.asm	/^c010236a:	a2 0c e9 1a c0       	mov    %al,0xc01ae90c$/;"	l
c010236f	obj/kernel.asm	/^c010236f:	0f b6 05 0d e9 1a c0 	movzbl 0xc01ae90d,%eax$/;"	l
c0102376	obj/kernel.asm	/^c0102376:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c0102379	obj/kernel.asm	/^c0102379:	83 c8 0e             	or     $0xe,%eax$/;"	l
c010237c	obj/kernel.asm	/^c010237c:	a2 0d e9 1a c0       	mov    %al,0xc01ae90d$/;"	l
c0102381	obj/kernel.asm	/^c0102381:	0f b6 05 0d e9 1a c0 	movzbl 0xc01ae90d,%eax$/;"	l
c0102388	obj/kernel.asm	/^c0102388:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c010238b	obj/kernel.asm	/^c010238b:	a2 0d e9 1a c0       	mov    %al,0xc01ae90d$/;"	l
c0102390	obj/kernel.asm	/^c0102390:	0f b6 05 0d e9 1a c0 	movzbl 0xc01ae90d,%eax$/;"	l
c0102397	obj/kernel.asm	/^c0102397:	83 c8 60             	or     $0x60,%eax$/;"	l
c010239a	obj/kernel.asm	/^c010239a:	a2 0d e9 1a c0       	mov    %al,0xc01ae90d$/;"	l
c010239f	obj/kernel.asm	/^c010239f:	0f b6 05 0d e9 1a c0 	movzbl 0xc01ae90d,%eax$/;"	l
c01023a6	obj/kernel.asm	/^c01023a6:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c01023a9	obj/kernel.asm	/^c01023a9:	a2 0d e9 1a c0       	mov    %al,0xc01ae90d$/;"	l
c01023ae	obj/kernel.asm	/^c01023ae:	a1 44 c8 12 c0       	mov    0xc012c844,%eax$/;"	l
c01023b3	obj/kernel.asm	/^c01023b3:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01023b6	obj/kernel.asm	/^c01023b6:	66 a3 0e e9 1a c0    	mov    %ax,0xc01ae90e$/;"	l
c01023bc	obj/kernel.asm	/^c01023bc:	c7 45 f8 c0 c5 12 c0 	movl   $0xc012c5c0,-0x8(%ebp)$/;"	l
c01023c3	obj/kernel.asm	/^c01023c3:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01023c6	obj/kernel.asm	/^c01023c6:	0f 01 18             	lidtl  (%eax)$/;"	l
c01023c9	obj/kernel.asm	/^c01023c9:	c9                   	leave  $/;"	l
c01023ca	obj/kernel.asm	/^c01023ca:	c3                   	ret    $/;"	l
c01023cb	obj/kernel.asm	/^c01023cb <trapname>:$/;"	l
c01023cb	obj/kernel.asm	/^c01023cb:	55                   	push   %ebp$/;"	l
c01023cc	obj/kernel.asm	/^c01023cc:	89 e5                	mov    %esp,%ebp$/;"	l
c01023ce	obj/kernel.asm	/^c01023ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023d1	obj/kernel.asm	/^c01023d1:	83 f8 13             	cmp    $0x13,%eax$/;"	l
c01023d4	obj/kernel.asm	/^c01023d4:	77 0c                	ja     c01023e2 <trapname+0x17>$/;"	l
c01023d6	obj/kernel.asm	/^c01023d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023d9	obj/kernel.asm	/^c01023d9:	8b 04 85 00 c4 10 c0 	mov    -0x3fef3c00(,%eax,4),%eax$/;"	l
c01023e0	obj/kernel.asm	/^c01023e0:	eb 18                	jmp    c01023fa <trapname+0x2f>$/;"	l
c01023e2	obj/kernel.asm	/^c01023e2:	83 7d 08 1f          	cmpl   $0x1f,0x8(%ebp)$/;"	l
c01023e6	obj/kernel.asm	/^c01023e6:	7e 0d                	jle    c01023f5 <trapname+0x2a>$/;"	l
c01023e8	obj/kernel.asm	/^c01023e8:	83 7d 08 2f          	cmpl   $0x2f,0x8(%ebp)$/;"	l
c01023ec	obj/kernel.asm	/^c01023ec:	7f 07                	jg     c01023f5 <trapname+0x2a>$/;"	l
c01023ee	obj/kernel.asm	/^c01023ee:	b8 4a bf 10 c0       	mov    $0xc010bf4a,%eax$/;"	l
c01023f3	obj/kernel.asm	/^c01023f3:	eb 05                	jmp    c01023fa <trapname+0x2f>$/;"	l
c01023f5	obj/kernel.asm	/^c01023f5:	b8 5d bf 10 c0       	mov    $0xc010bf5d,%eax$/;"	l
c01023fa	obj/kernel.asm	/^c01023fa:	5d                   	pop    %ebp$/;"	l
c01023fb	obj/kernel.asm	/^c01023fb:	c3                   	ret    $/;"	l
c01023fc	obj/kernel.asm	/^c01023fc <trap_in_kernel>:$/;"	l
c01023fc	obj/kernel.asm	/^c01023fc:	55                   	push   %ebp$/;"	l
c01023fd	obj/kernel.asm	/^c01023fd:	89 e5                	mov    %esp,%ebp$/;"	l
c01023ff	obj/kernel.asm	/^c01023ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102402	obj/kernel.asm	/^c0102402:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c0102406	obj/kernel.asm	/^c0102406:	66 83 f8 08          	cmp    $0x8,%ax$/;"	l
c010240a	obj/kernel.asm	/^c010240a:	0f 94 c0             	sete   %al$/;"	l
c010240d	obj/kernel.asm	/^c010240d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102410	obj/kernel.asm	/^c0102410:	5d                   	pop    %ebp$/;"	l
c0102411	obj/kernel.asm	/^c0102411:	c3                   	ret    $/;"	l
c0102412	obj/kernel.asm	/^c0102412 <print_trapframe>:$/;"	l
c0102412	obj/kernel.asm	/^c0102412:	55                   	push   %ebp$/;"	l
c0102413	obj/kernel.asm	/^c0102413:	89 e5                	mov    %esp,%ebp$/;"	l
c0102415	obj/kernel.asm	/^c0102415:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102418	obj/kernel.asm	/^c0102418:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010241b	obj/kernel.asm	/^c010241b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010241e	obj/kernel.asm	/^c010241e:	68 9e bf 10 c0       	push   $0xc010bf9e$/;"	l
c0102423	obj/kernel.asm	/^c0102423:	e8 52 de ff ff       	call   c010027a <cprintf>$/;"	l
c0102428	obj/kernel.asm	/^c0102428:	83 c4 10             	add    $0x10,%esp$/;"	l
c010242b	obj/kernel.asm	/^c010242b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010242e	obj/kernel.asm	/^c010242e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102431	obj/kernel.asm	/^c0102431:	50                   	push   %eax$/;"	l
c0102432	obj/kernel.asm	/^c0102432:	e8 b7 01 00 00       	call   c01025ee <print_regs>$/;"	l
c0102437	obj/kernel.asm	/^c0102437:	83 c4 10             	add    $0x10,%esp$/;"	l
c010243a	obj/kernel.asm	/^c010243a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010243d	obj/kernel.asm	/^c010243d:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c0102441	obj/kernel.asm	/^c0102441:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102444	obj/kernel.asm	/^c0102444:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102447	obj/kernel.asm	/^c0102447:	50                   	push   %eax$/;"	l
c0102448	obj/kernel.asm	/^c0102448:	68 af bf 10 c0       	push   $0xc010bfaf$/;"	l
c010244d	obj/kernel.asm	/^c010244d:	e8 28 de ff ff       	call   c010027a <cprintf>$/;"	l
c0102452	obj/kernel.asm	/^c0102452:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102455	obj/kernel.asm	/^c0102455:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102458	obj/kernel.asm	/^c0102458:	0f b7 40 28          	movzwl 0x28(%eax),%eax$/;"	l
c010245c	obj/kernel.asm	/^c010245c:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010245f	obj/kernel.asm	/^c010245f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102462	obj/kernel.asm	/^c0102462:	50                   	push   %eax$/;"	l
c0102463	obj/kernel.asm	/^c0102463:	68 c2 bf 10 c0       	push   $0xc010bfc2$/;"	l
c0102468	obj/kernel.asm	/^c0102468:	e8 0d de ff ff       	call   c010027a <cprintf>$/;"	l
c010246d	obj/kernel.asm	/^c010246d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102470	obj/kernel.asm	/^c0102470:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102473	obj/kernel.asm	/^c0102473:	0f b7 40 24          	movzwl 0x24(%eax),%eax$/;"	l
c0102477	obj/kernel.asm	/^c0102477:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010247a	obj/kernel.asm	/^c010247a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010247d	obj/kernel.asm	/^c010247d:	50                   	push   %eax$/;"	l
c010247e	obj/kernel.asm	/^c010247e:	68 d5 bf 10 c0       	push   $0xc010bfd5$/;"	l
c0102483	obj/kernel.asm	/^c0102483:	e8 f2 dd ff ff       	call   c010027a <cprintf>$/;"	l
c0102488	obj/kernel.asm	/^c0102488:	83 c4 10             	add    $0x10,%esp$/;"	l
c010248b	obj/kernel.asm	/^c010248b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010248e	obj/kernel.asm	/^c010248e:	0f b7 40 20          	movzwl 0x20(%eax),%eax$/;"	l
c0102492	obj/kernel.asm	/^c0102492:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102495	obj/kernel.asm	/^c0102495:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102498	obj/kernel.asm	/^c0102498:	50                   	push   %eax$/;"	l
c0102499	obj/kernel.asm	/^c0102499:	68 e8 bf 10 c0       	push   $0xc010bfe8$/;"	l
c010249e	obj/kernel.asm	/^c010249e:	e8 d7 dd ff ff       	call   c010027a <cprintf>$/;"	l
c01024a3	obj/kernel.asm	/^c01024a3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01024a6	obj/kernel.asm	/^c01024a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024a9	obj/kernel.asm	/^c01024a9:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01024ac	obj/kernel.asm	/^c01024ac:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01024af	obj/kernel.asm	/^c01024af:	50                   	push   %eax$/;"	l
c01024b0	obj/kernel.asm	/^c01024b0:	e8 16 ff ff ff       	call   c01023cb <trapname>$/;"	l
c01024b5	obj/kernel.asm	/^c01024b5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01024b8	obj/kernel.asm	/^c01024b8:	89 c2                	mov    %eax,%edx$/;"	l
c01024ba	obj/kernel.asm	/^c01024ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024bd	obj/kernel.asm	/^c01024bd:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01024c0	obj/kernel.asm	/^c01024c0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01024c3	obj/kernel.asm	/^c01024c3:	52                   	push   %edx$/;"	l
c01024c4	obj/kernel.asm	/^c01024c4:	50                   	push   %eax$/;"	l
c01024c5	obj/kernel.asm	/^c01024c5:	68 fb bf 10 c0       	push   $0xc010bffb$/;"	l
c01024ca	obj/kernel.asm	/^c01024ca:	e8 ab dd ff ff       	call   c010027a <cprintf>$/;"	l
c01024cf	obj/kernel.asm	/^c01024cf:	83 c4 10             	add    $0x10,%esp$/;"	l
c01024d2	obj/kernel.asm	/^c01024d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024d5	obj/kernel.asm	/^c01024d5:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01024d8	obj/kernel.asm	/^c01024d8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01024db	obj/kernel.asm	/^c01024db:	50                   	push   %eax$/;"	l
c01024dc	obj/kernel.asm	/^c01024dc:	68 0d c0 10 c0       	push   $0xc010c00d$/;"	l
c01024e1	obj/kernel.asm	/^c01024e1:	e8 94 dd ff ff       	call   c010027a <cprintf>$/;"	l
c01024e6	obj/kernel.asm	/^c01024e6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01024e9	obj/kernel.asm	/^c01024e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024ec	obj/kernel.asm	/^c01024ec:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01024ef	obj/kernel.asm	/^c01024ef:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01024f2	obj/kernel.asm	/^c01024f2:	50                   	push   %eax$/;"	l
c01024f3	obj/kernel.asm	/^c01024f3:	68 1c c0 10 c0       	push   $0xc010c01c$/;"	l
c01024f8	obj/kernel.asm	/^c01024f8:	e8 7d dd ff ff       	call   c010027a <cprintf>$/;"	l
c01024fd	obj/kernel.asm	/^c01024fd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102500	obj/kernel.asm	/^c0102500:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102503	obj/kernel.asm	/^c0102503:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c0102507	obj/kernel.asm	/^c0102507:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010250a	obj/kernel.asm	/^c010250a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010250d	obj/kernel.asm	/^c010250d:	50                   	push   %eax$/;"	l
c010250e	obj/kernel.asm	/^c010250e:	68 2b c0 10 c0       	push   $0xc010c02b$/;"	l
c0102513	obj/kernel.asm	/^c0102513:	e8 62 dd ff ff       	call   c010027a <cprintf>$/;"	l
c0102518	obj/kernel.asm	/^c0102518:	83 c4 10             	add    $0x10,%esp$/;"	l
c010251b	obj/kernel.asm	/^c010251b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010251e	obj/kernel.asm	/^c010251e:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c0102521	obj/kernel.asm	/^c0102521:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102524	obj/kernel.asm	/^c0102524:	50                   	push   %eax$/;"	l
c0102525	obj/kernel.asm	/^c0102525:	68 3e c0 10 c0       	push   $0xc010c03e$/;"	l
c010252a	obj/kernel.asm	/^c010252a:	e8 4b dd ff ff       	call   c010027a <cprintf>$/;"	l
c010252f	obj/kernel.asm	/^c010252f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102532	obj/kernel.asm	/^c0102532:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0102539	obj/kernel.asm	/^c0102539:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c0102540	obj/kernel.asm	/^c0102540:	eb 3f                	jmp    c0102581 <print_trapframe+0x16f>$/;"	l
c0102542	obj/kernel.asm	/^c0102542:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102545	obj/kernel.asm	/^c0102545:	8b 50 40             	mov    0x40(%eax),%edx$/;"	l
c0102548	obj/kernel.asm	/^c0102548:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010254b	obj/kernel.asm	/^c010254b:	21 d0                	and    %edx,%eax$/;"	l
c010254d	obj/kernel.asm	/^c010254d:	85 c0                	test   %eax,%eax$/;"	l
c010254f	obj/kernel.asm	/^c010254f:	74 29                	je     c010257a <print_trapframe+0x168>$/;"	l
c0102551	obj/kernel.asm	/^c0102551:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102554	obj/kernel.asm	/^c0102554:	8b 04 85 00 c6 12 c0 	mov    -0x3fed3a00(,%eax,4),%eax$/;"	l
c010255b	obj/kernel.asm	/^c010255b:	85 c0                	test   %eax,%eax$/;"	l
c010255d	obj/kernel.asm	/^c010255d:	74 1b                	je     c010257a <print_trapframe+0x168>$/;"	l
c010255f	obj/kernel.asm	/^c010255f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102562	obj/kernel.asm	/^c0102562:	8b 04 85 00 c6 12 c0 	mov    -0x3fed3a00(,%eax,4),%eax$/;"	l
c0102569	obj/kernel.asm	/^c0102569:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010256c	obj/kernel.asm	/^c010256c:	50                   	push   %eax$/;"	l
c010256d	obj/kernel.asm	/^c010256d:	68 4d c0 10 c0       	push   $0xc010c04d$/;"	l
c0102572	obj/kernel.asm	/^c0102572:	e8 03 dd ff ff       	call   c010027a <cprintf>$/;"	l
c0102577	obj/kernel.asm	/^c0102577:	83 c4 10             	add    $0x10,%esp$/;"	l
c010257a	obj/kernel.asm	/^c010257a:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010257e	obj/kernel.asm	/^c010257e:	d1 65 f0             	shll   -0x10(%ebp)$/;"	d
c0102581	obj/kernel.asm	/^c0102581:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102584	obj/kernel.asm	/^c0102584:	83 f8 17             	cmp    $0x17,%eax$/;"	l
c0102587	obj/kernel.asm	/^c0102587:	76 b9                	jbe    c0102542 <print_trapframe+0x130>$/;"	l
c0102589	obj/kernel.asm	/^c0102589:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010258c	obj/kernel.asm	/^c010258c:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c010258f	obj/kernel.asm	/^c010258f:	25 00 30 00 00       	and    $0x3000,%eax$/;"	l
c0102594	obj/kernel.asm	/^c0102594:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0102597	obj/kernel.asm	/^c0102597:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010259a	obj/kernel.asm	/^c010259a:	50                   	push   %eax$/;"	l
c010259b	obj/kernel.asm	/^c010259b:	68 51 c0 10 c0       	push   $0xc010c051$/;"	l
c01025a0	obj/kernel.asm	/^c01025a0:	e8 d5 dc ff ff       	call   c010027a <cprintf>$/;"	l
c01025a5	obj/kernel.asm	/^c01025a5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025a8	obj/kernel.asm	/^c01025a8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01025ab	obj/kernel.asm	/^c01025ab:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01025ae	obj/kernel.asm	/^c01025ae:	e8 49 fe ff ff       	call   c01023fc <trap_in_kernel>$/;"	l
c01025b3	obj/kernel.asm	/^c01025b3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025b6	obj/kernel.asm	/^c01025b6:	85 c0                	test   %eax,%eax$/;"	l
c01025b8	obj/kernel.asm	/^c01025b8:	75 32                	jne    c01025ec <print_trapframe+0x1da>$/;"	l
c01025ba	obj/kernel.asm	/^c01025ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025bd	obj/kernel.asm	/^c01025bd:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c01025c0	obj/kernel.asm	/^c01025c0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01025c3	obj/kernel.asm	/^c01025c3:	50                   	push   %eax$/;"	l
c01025c4	obj/kernel.asm	/^c01025c4:	68 5a c0 10 c0       	push   $0xc010c05a$/;"	l
c01025c9	obj/kernel.asm	/^c01025c9:	e8 ac dc ff ff       	call   c010027a <cprintf>$/;"	l
c01025ce	obj/kernel.asm	/^c01025ce:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025d1	obj/kernel.asm	/^c01025d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025d4	obj/kernel.asm	/^c01025d4:	0f b7 40 48          	movzwl 0x48(%eax),%eax$/;"	l
c01025d8	obj/kernel.asm	/^c01025d8:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01025db	obj/kernel.asm	/^c01025db:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01025de	obj/kernel.asm	/^c01025de:	50                   	push   %eax$/;"	l
c01025df	obj/kernel.asm	/^c01025df:	68 69 c0 10 c0       	push   $0xc010c069$/;"	l
c01025e4	obj/kernel.asm	/^c01025e4:	e8 91 dc ff ff       	call   c010027a <cprintf>$/;"	l
c01025e9	obj/kernel.asm	/^c01025e9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025ec	obj/kernel.asm	/^c01025ec:	c9                   	leave  $/;"	l
c01025ed	obj/kernel.asm	/^c01025ed:	c3                   	ret    $/;"	l
c01025ee	obj/kernel.asm	/^c01025ee <print_regs>:$/;"	l
c01025ee	obj/kernel.asm	/^c01025ee:	55                   	push   %ebp$/;"	l
c01025ef	obj/kernel.asm	/^c01025ef:	89 e5                	mov    %esp,%ebp$/;"	l
c01025f1	obj/kernel.asm	/^c01025f1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01025f4	obj/kernel.asm	/^c01025f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025f7	obj/kernel.asm	/^c01025f7:	8b 00                	mov    (%eax),%eax$/;"	l
c01025f9	obj/kernel.asm	/^c01025f9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01025fc	obj/kernel.asm	/^c01025fc:	50                   	push   %eax$/;"	l
c01025fd	obj/kernel.asm	/^c01025fd:	68 7c c0 10 c0       	push   $0xc010c07c$/;"	l
c0102602	obj/kernel.asm	/^c0102602:	e8 73 dc ff ff       	call   c010027a <cprintf>$/;"	l
c0102607	obj/kernel.asm	/^c0102607:	83 c4 10             	add    $0x10,%esp$/;"	l
c010260a	obj/kernel.asm	/^c010260a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010260d	obj/kernel.asm	/^c010260d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0102610	obj/kernel.asm	/^c0102610:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102613	obj/kernel.asm	/^c0102613:	50                   	push   %eax$/;"	l
c0102614	obj/kernel.asm	/^c0102614:	68 8b c0 10 c0       	push   $0xc010c08b$/;"	l
c0102619	obj/kernel.asm	/^c0102619:	e8 5c dc ff ff       	call   c010027a <cprintf>$/;"	l
c010261e	obj/kernel.asm	/^c010261e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102621	obj/kernel.asm	/^c0102621:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102624	obj/kernel.asm	/^c0102624:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0102627	obj/kernel.asm	/^c0102627:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010262a	obj/kernel.asm	/^c010262a:	50                   	push   %eax$/;"	l
c010262b	obj/kernel.asm	/^c010262b:	68 9a c0 10 c0       	push   $0xc010c09a$/;"	l
c0102630	obj/kernel.asm	/^c0102630:	e8 45 dc ff ff       	call   c010027a <cprintf>$/;"	l
c0102635	obj/kernel.asm	/^c0102635:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102638	obj/kernel.asm	/^c0102638:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010263b	obj/kernel.asm	/^c010263b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010263e	obj/kernel.asm	/^c010263e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102641	obj/kernel.asm	/^c0102641:	50                   	push   %eax$/;"	l
c0102642	obj/kernel.asm	/^c0102642:	68 a9 c0 10 c0       	push   $0xc010c0a9$/;"	l
c0102647	obj/kernel.asm	/^c0102647:	e8 2e dc ff ff       	call   c010027a <cprintf>$/;"	l
c010264c	obj/kernel.asm	/^c010264c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010264f	obj/kernel.asm	/^c010264f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102652	obj/kernel.asm	/^c0102652:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0102655	obj/kernel.asm	/^c0102655:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102658	obj/kernel.asm	/^c0102658:	50                   	push   %eax$/;"	l
c0102659	obj/kernel.asm	/^c0102659:	68 b8 c0 10 c0       	push   $0xc010c0b8$/;"	l
c010265e	obj/kernel.asm	/^c010265e:	e8 17 dc ff ff       	call   c010027a <cprintf>$/;"	l
c0102663	obj/kernel.asm	/^c0102663:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102666	obj/kernel.asm	/^c0102666:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102669	obj/kernel.asm	/^c0102669:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010266c	obj/kernel.asm	/^c010266c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010266f	obj/kernel.asm	/^c010266f:	50                   	push   %eax$/;"	l
c0102670	obj/kernel.asm	/^c0102670:	68 c7 c0 10 c0       	push   $0xc010c0c7$/;"	l
c0102675	obj/kernel.asm	/^c0102675:	e8 00 dc ff ff       	call   c010027a <cprintf>$/;"	l
c010267a	obj/kernel.asm	/^c010267a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010267d	obj/kernel.asm	/^c010267d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102680	obj/kernel.asm	/^c0102680:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0102683	obj/kernel.asm	/^c0102683:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102686	obj/kernel.asm	/^c0102686:	50                   	push   %eax$/;"	l
c0102687	obj/kernel.asm	/^c0102687:	68 d6 c0 10 c0       	push   $0xc010c0d6$/;"	l
c010268c	obj/kernel.asm	/^c010268c:	e8 e9 db ff ff       	call   c010027a <cprintf>$/;"	l
c0102691	obj/kernel.asm	/^c0102691:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102694	obj/kernel.asm	/^c0102694:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102697	obj/kernel.asm	/^c0102697:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010269a	obj/kernel.asm	/^c010269a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010269d	obj/kernel.asm	/^c010269d:	50                   	push   %eax$/;"	l
c010269e	obj/kernel.asm	/^c010269e:	68 e5 c0 10 c0       	push   $0xc010c0e5$/;"	l
c01026a3	obj/kernel.asm	/^c01026a3:	e8 d2 db ff ff       	call   c010027a <cprintf>$/;"	l
c01026a8	obj/kernel.asm	/^c01026a8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01026ab	obj/kernel.asm	/^c01026ab:	c9                   	leave  $/;"	l
c01026ac	obj/kernel.asm	/^c01026ac:	c3                   	ret    $/;"	l
c01026ad	obj/kernel.asm	/^c01026ad <print_pgfault>:$/;"	l
c01026ad	obj/kernel.asm	/^c01026ad:	55                   	push   %ebp$/;"	l
c01026ae	obj/kernel.asm	/^c01026ae:	89 e5                	mov    %esp,%ebp$/;"	l
c01026b0	obj/kernel.asm	/^c01026b0:	53                   	push   %ebx$/;"	l
c01026b1	obj/kernel.asm	/^c01026b1:	83 ec 14             	sub    $0x14,%esp$/;"	l
c01026b4	obj/kernel.asm	/^c01026b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026b7	obj/kernel.asm	/^c01026b7:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01026ba	obj/kernel.asm	/^c01026ba:	83 e0 01             	and    $0x1,%eax$/;"	l
c01026bd	obj/kernel.asm	/^c01026bd:	85 c0                	test   %eax,%eax$/;"	l
c01026bf	obj/kernel.asm	/^c01026bf:	74 07                	je     c01026c8 <print_pgfault+0x1b>$/;"	l
c01026c1	obj/kernel.asm	/^c01026c1:	bb f4 c0 10 c0       	mov    $0xc010c0f4,%ebx$/;"	l
c01026c6	obj/kernel.asm	/^c01026c6:	eb 05                	jmp    c01026cd <print_pgfault+0x20>$/;"	l
c01026c8	obj/kernel.asm	/^c01026c8:	bb 05 c1 10 c0       	mov    $0xc010c105,%ebx$/;"	l
c01026cd	obj/kernel.asm	/^c01026cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026d0	obj/kernel.asm	/^c01026d0:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01026d3	obj/kernel.asm	/^c01026d3:	83 e0 02             	and    $0x2,%eax$/;"	l
c01026d6	obj/kernel.asm	/^c01026d6:	85 c0                	test   %eax,%eax$/;"	l
c01026d8	obj/kernel.asm	/^c01026d8:	74 07                	je     c01026e1 <print_pgfault+0x34>$/;"	l
c01026da	obj/kernel.asm	/^c01026da:	b9 57 00 00 00       	mov    $0x57,%ecx$/;"	l
c01026df	obj/kernel.asm	/^c01026df:	eb 05                	jmp    c01026e6 <print_pgfault+0x39>$/;"	l
c01026e1	obj/kernel.asm	/^c01026e1:	b9 52 00 00 00       	mov    $0x52,%ecx$/;"	l
c01026e6	obj/kernel.asm	/^c01026e6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026e9	obj/kernel.asm	/^c01026e9:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01026ec	obj/kernel.asm	/^c01026ec:	83 e0 04             	and    $0x4,%eax$/;"	l
c01026ef	obj/kernel.asm	/^c01026ef:	85 c0                	test   %eax,%eax$/;"	l
c01026f1	obj/kernel.asm	/^c01026f1:	74 07                	je     c01026fa <print_pgfault+0x4d>$/;"	l
c01026f3	obj/kernel.asm	/^c01026f3:	ba 55 00 00 00       	mov    $0x55,%edx$/;"	l
c01026f8	obj/kernel.asm	/^c01026f8:	eb 05                	jmp    c01026ff <print_pgfault+0x52>$/;"	l
c01026fa	obj/kernel.asm	/^c01026fa:	ba 4b 00 00 00       	mov    $0x4b,%edx$/;"	l
c01026ff	obj/kernel.asm	/^c01026ff:	0f 20 d0             	mov    %cr2,%eax$/;"	l
c0102702	obj/kernel.asm	/^c0102702:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102705	obj/kernel.asm	/^c0102705:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102708	obj/kernel.asm	/^c0102708:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010270b	obj/kernel.asm	/^c010270b:	53                   	push   %ebx$/;"	l
c010270c	obj/kernel.asm	/^c010270c:	51                   	push   %ecx$/;"	l
c010270d	obj/kernel.asm	/^c010270d:	52                   	push   %edx$/;"	l
c010270e	obj/kernel.asm	/^c010270e:	50                   	push   %eax$/;"	l
c010270f	obj/kernel.asm	/^c010270f:	68 14 c1 10 c0       	push   $0xc010c114$/;"	l
c0102714	obj/kernel.asm	/^c0102714:	e8 61 db ff ff       	call   c010027a <cprintf>$/;"	l
c0102719	obj/kernel.asm	/^c0102719:	83 c4 20             	add    $0x20,%esp$/;"	l
c010271c	obj/kernel.asm	/^c010271c:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c010271f	obj/kernel.asm	/^c010271f:	c9                   	leave  $/;"	l
c0102720	obj/kernel.asm	/^c0102720:	c3                   	ret    $/;"	l
c0102721	obj/kernel.asm	/^c0102721 <pgfault_handler>:$/;"	l
c0102721	obj/kernel.asm	/^c0102721:	55                   	push   %ebp$/;"	l
c0102722	obj/kernel.asm	/^c0102722:	89 e5                	mov    %esp,%ebp$/;"	l
c0102724	obj/kernel.asm	/^c0102724:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102727	obj/kernel.asm	/^c0102727:	a1 1c 0f 1b c0       	mov    0xc01b0f1c,%eax$/;"	l
c010272c	obj/kernel.asm	/^c010272c:	85 c0                	test   %eax,%eax$/;"	l
c010272e	obj/kernel.asm	/^c010272e:	74 0e                	je     c010273e <pgfault_handler+0x1d>$/;"	l
c0102730	obj/kernel.asm	/^c0102730:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102733	obj/kernel.asm	/^c0102733:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102736	obj/kernel.asm	/^c0102736:	e8 72 ff ff ff       	call   c01026ad <print_pgfault>$/;"	l
c010273b	obj/kernel.asm	/^c010273b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010273e	obj/kernel.asm	/^c010273e:	a1 1c 0f 1b c0       	mov    0xc01b0f1c,%eax$/;"	l
c0102743	obj/kernel.asm	/^c0102743:	85 c0                	test   %eax,%eax$/;"	l
c0102745	obj/kernel.asm	/^c0102745:	74 32                	je     c0102779 <pgfault_handler+0x58>$/;"	l
c0102747	obj/kernel.asm	/^c0102747:	8b 15 48 ee 1a c0    	mov    0xc01aee48,%edx$/;"	l
c010274d	obj/kernel.asm	/^c010274d:	a1 40 ee 1a c0       	mov    0xc01aee40,%eax$/;"	l
c0102752	obj/kernel.asm	/^c0102752:	39 c2                	cmp    %eax,%edx$/;"	l
c0102754	obj/kernel.asm	/^c0102754:	74 19                	je     c010276f <pgfault_handler+0x4e>$/;"	l
c0102756	obj/kernel.asm	/^c0102756:	68 37 c1 10 c0       	push   $0xc010c137$/;"	l
c010275b	obj/kernel.asm	/^c010275b:	68 4b c1 10 c0       	push   $0xc010c14b$/;"	l
c0102760	obj/kernel.asm	/^c0102760:	68 bc 00 00 00       	push   $0xbc$/;"	l
c0102765	obj/kernel.asm	/^c0102765:	68 60 c1 10 c0       	push   $0xc010c160$/;"	l
c010276a	obj/kernel.asm	/^c010276a:	e8 70 dc ff ff       	call   c01003df <__panic>$/;"	l
c010276f	obj/kernel.asm	/^c010276f:	a1 1c 0f 1b c0       	mov    0xc01b0f1c,%eax$/;"	l
c0102774	obj/kernel.asm	/^c0102774:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102777	obj/kernel.asm	/^c0102777:	eb 47                	jmp    c01027c0 <pgfault_handler+0x9f>$/;"	l
c0102779	obj/kernel.asm	/^c0102779:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010277e	obj/kernel.asm	/^c010277e:	85 c0                	test   %eax,%eax$/;"	l
c0102780	obj/kernel.asm	/^c0102780:	75 33                	jne    c01027b5 <pgfault_handler+0x94>$/;"	l
c0102782	obj/kernel.asm	/^c0102782:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102785	obj/kernel.asm	/^c0102785:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102788	obj/kernel.asm	/^c0102788:	e8 85 fc ff ff       	call   c0102412 <print_trapframe>$/;"	l
c010278d	obj/kernel.asm	/^c010278d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102790	obj/kernel.asm	/^c0102790:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102793	obj/kernel.asm	/^c0102793:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102796	obj/kernel.asm	/^c0102796:	e8 12 ff ff ff       	call   c01026ad <print_pgfault>$/;"	l
c010279b	obj/kernel.asm	/^c010279b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010279e	obj/kernel.asm	/^c010279e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01027a1	obj/kernel.asm	/^c01027a1:	68 71 c1 10 c0       	push   $0xc010c171$/;"	l
c01027a6	obj/kernel.asm	/^c01027a6:	68 c3 00 00 00       	push   $0xc3$/;"	l
c01027ab	obj/kernel.asm	/^c01027ab:	68 60 c1 10 c0       	push   $0xc010c160$/;"	l
c01027b0	obj/kernel.asm	/^c01027b0:	e8 2a dc ff ff       	call   c01003df <__panic>$/;"	l
c01027b5	obj/kernel.asm	/^c01027b5:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c01027ba	obj/kernel.asm	/^c01027ba:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01027bd	obj/kernel.asm	/^c01027bd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01027c0	obj/kernel.asm	/^c01027c0:	0f 20 d0             	mov    %cr2,%eax$/;"	l
c01027c3	obj/kernel.asm	/^c01027c3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01027c6	obj/kernel.asm	/^c01027c6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01027c9	obj/kernel.asm	/^c01027c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01027cc	obj/kernel.asm	/^c01027cc:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01027cf	obj/kernel.asm	/^c01027cf:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01027d2	obj/kernel.asm	/^c01027d2:	52                   	push   %edx$/;"	l
c01027d3	obj/kernel.asm	/^c01027d3:	50                   	push   %eax$/;"	l
c01027d4	obj/kernel.asm	/^c01027d4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01027d7	obj/kernel.asm	/^c01027d7:	e8 0e 38 00 00       	call   c0105fea <do_pgfault>$/;"	l
c01027dc	obj/kernel.asm	/^c01027dc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01027df	obj/kernel.asm	/^c01027df:	c9                   	leave  $/;"	l
c01027e0	obj/kernel.asm	/^c01027e0:	c3                   	ret    $/;"	l
c01027e1	obj/kernel.asm	/^c01027e1 <trap_dispatch>:$/;"	l
c01027e1	obj/kernel.asm	/^c01027e1:	55                   	push   %ebp$/;"	l
c01027e2	obj/kernel.asm	/^c01027e2:	89 e5                	mov    %esp,%ebp$/;"	l
c01027e4	obj/kernel.asm	/^c01027e4:	57                   	push   %edi$/;"	l
c01027e5	obj/kernel.asm	/^c01027e5:	56                   	push   %esi$/;"	l
c01027e6	obj/kernel.asm	/^c01027e6:	53                   	push   %ebx$/;"	l
c01027e7	obj/kernel.asm	/^c01027e7:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
c01027ea	obj/kernel.asm	/^c01027ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01027ed	obj/kernel.asm	/^c01027ed:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01027f0	obj/kernel.asm	/^c01027f0:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
c01027f3	obj/kernel.asm	/^c01027f3:	77 38                	ja     c010282d <trap_dispatch+0x4c>$/;"	l
c01027f5	obj/kernel.asm	/^c01027f5:	83 f8 2e             	cmp    $0x2e,%eax$/;"	l
c01027f8	obj/kernel.asm	/^c01027f8:	0f 83 1a 03 00 00    	jae    c0102b18 <trap_dispatch+0x337>$/;"	l
c01027fe	obj/kernel.asm	/^c01027fe:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c0102801	obj/kernel.asm	/^c0102801:	0f 84 ec 00 00 00    	je     c01028f3 <trap_dispatch+0x112>$/;"	l
c0102807	obj/kernel.asm	/^c0102807:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c010280a	obj/kernel.asm	/^c010280a:	77 0a                	ja     c0102816 <trap_dispatch+0x35>$/;"	l
c010280c	obj/kernel.asm	/^c010280c:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
c010280f	obj/kernel.asm	/^c010280f:	74 3e                	je     c010284f <trap_dispatch+0x6e>$/;"	l
c0102811	obj/kernel.asm	/^c0102811:	e9 b7 02 00 00       	jmp    c0102acd <trap_dispatch+0x2ec>$/;"	l
c0102816	obj/kernel.asm	/^c0102816:	83 f8 21             	cmp    $0x21,%eax$/;"	l
c0102819	obj/kernel.asm	/^c0102819:	0f 84 32 01 00 00    	je     c0102951 <trap_dispatch+0x170>$/;"	l
c010281f	obj/kernel.asm	/^c010281f:	83 f8 24             	cmp    $0x24,%eax$/;"	l
c0102822	obj/kernel.asm	/^c0102822:	0f 84 02 01 00 00    	je     c010292a <trap_dispatch+0x149>$/;"	l
c0102828	obj/kernel.asm	/^c0102828:	e9 a0 02 00 00       	jmp    c0102acd <trap_dispatch+0x2ec>$/;"	l
c010282d	obj/kernel.asm	/^c010282d:	83 f8 79             	cmp    $0x79,%eax$/;"	l
c0102830	obj/kernel.asm	/^c0102830:	0f 84 fd 01 00 00    	je     c0102a33 <trap_dispatch+0x252>$/;"	l
c0102836	obj/kernel.asm	/^c0102836:	3d 80 00 00 00       	cmp    $0x80,%eax$/;"	l
c010283b	obj/kernel.asm	/^c010283b:	0f 84 a8 00 00 00    	je     c01028e9 <trap_dispatch+0x108>$/;"	l
c0102841	obj/kernel.asm	/^c0102841:	83 f8 78             	cmp    $0x78,%eax$/;"	l
c0102844	obj/kernel.asm	/^c0102844:	0f 84 2e 01 00 00    	je     c0102978 <trap_dispatch+0x197>$/;"	l
c010284a	obj/kernel.asm	/^c010284a:	e9 7e 02 00 00       	jmp    c0102acd <trap_dispatch+0x2ec>$/;"	l
c010284f	obj/kernel.asm	/^c010284f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102852	obj/kernel.asm	/^c0102852:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102855	obj/kernel.asm	/^c0102855:	e8 c7 fe ff ff       	call   c0102721 <pgfault_handler>$/;"	l
c010285a	obj/kernel.asm	/^c010285a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010285d	obj/kernel.asm	/^c010285d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0102860	obj/kernel.asm	/^c0102860:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0102864	obj/kernel.asm	/^c0102864:	74 7e                	je     c01028e4 <trap_dispatch+0x103>$/;"	l
c0102866	obj/kernel.asm	/^c0102866:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102869	obj/kernel.asm	/^c0102869:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010286c	obj/kernel.asm	/^c010286c:	e8 a1 fb ff ff       	call   c0102412 <print_trapframe>$/;"	l
c0102871	obj/kernel.asm	/^c0102871:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102874	obj/kernel.asm	/^c0102874:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0102879	obj/kernel.asm	/^c0102879:	85 c0                	test   %eax,%eax$/;"	l
c010287b	obj/kernel.asm	/^c010287b:	75 17                	jne    c0102894 <trap_dispatch+0xb3>$/;"	l
c010287d	obj/kernel.asm	/^c010287d:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0102880	obj/kernel.asm	/^c0102880:	68 88 c1 10 c0       	push   $0xc010c188$/;"	l
c0102885	obj/kernel.asm	/^c0102885:	68 d8 00 00 00       	push   $0xd8$/;"	l
c010288a	obj/kernel.asm	/^c010288a:	68 60 c1 10 c0       	push   $0xc010c160$/;"	l
c010288f	obj/kernel.asm	/^c010288f:	e8 4b db ff ff       	call   c01003df <__panic>$/;"	l
c0102894	obj/kernel.asm	/^c0102894:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102897	obj/kernel.asm	/^c0102897:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010289a	obj/kernel.asm	/^c010289a:	e8 5d fb ff ff       	call   c01023fc <trap_in_kernel>$/;"	l
c010289f	obj/kernel.asm	/^c010289f:	83 c4 10             	add    $0x10,%esp$/;"	l
c01028a2	obj/kernel.asm	/^c01028a2:	85 c0                	test   %eax,%eax$/;"	l
c01028a4	obj/kernel.asm	/^c01028a4:	74 17                	je     c01028bd <trap_dispatch+0xdc>$/;"	l
c01028a6	obj/kernel.asm	/^c01028a6:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01028a9	obj/kernel.asm	/^c01028a9:	68 a8 c1 10 c0       	push   $0xc010c1a8$/;"	l
c01028ae	obj/kernel.asm	/^c01028ae:	68 dc 00 00 00       	push   $0xdc$/;"	l
c01028b3	obj/kernel.asm	/^c01028b3:	68 60 c1 10 c0       	push   $0xc010c160$/;"	l
c01028b8	obj/kernel.asm	/^c01028b8:	e8 22 db ff ff       	call   c01003df <__panic>$/;"	l
c01028bd	obj/kernel.asm	/^c01028bd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01028c0	obj/kernel.asm	/^c01028c0:	68 d6 c1 10 c0       	push   $0xc010c1d6$/;"	l
c01028c5	obj/kernel.asm	/^c01028c5:	e8 b0 d9 ff ff       	call   c010027a <cprintf>$/;"	l
c01028ca	obj/kernel.asm	/^c01028ca:	83 c4 10             	add    $0x10,%esp$/;"	l
c01028cd	obj/kernel.asm	/^c01028cd:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01028d0	obj/kernel.asm	/^c01028d0:	68 ec c1 10 c0       	push   $0xc010c1ec$/;"	l
c01028d5	obj/kernel.asm	/^c01028d5:	68 df 00 00 00       	push   $0xdf$/;"	l
c01028da	obj/kernel.asm	/^c01028da:	68 60 c1 10 c0       	push   $0xc010c160$/;"	l
c01028df	obj/kernel.asm	/^c01028df:	e8 fb da ff ff       	call   c01003df <__panic>$/;"	l
c01028e4	obj/kernel.asm	/^c01028e4:	e9 30 02 00 00       	jmp    c0102b19 <trap_dispatch+0x338>$/;"	l
c01028e9	obj/kernel.asm	/^c01028e9:	e8 67 85 00 00       	call   c010ae55 <syscall>$/;"	l
c01028ee	obj/kernel.asm	/^c01028ee:	e9 26 02 00 00       	jmp    c0102b19 <trap_dispatch+0x338>$/;"	l
c01028f3	obj/kernel.asm	/^c01028f3:	a1 44 ed 1a c0       	mov    0xc01aed44,%eax$/;"	l
c01028f8	obj/kernel.asm	/^c01028f8:	83 c0 01             	add    $0x1,%eax$/;"	l
c01028fb	obj/kernel.asm	/^c01028fb:	a3 44 ed 1a c0       	mov    %eax,0xc01aed44$/;"	l
c0102900	obj/kernel.asm	/^c0102900:	a1 44 ed 1a c0       	mov    0xc01aed44,%eax$/;"	l
c0102905	obj/kernel.asm	/^c0102905:	83 f8 64             	cmp    $0x64,%eax$/;"	l
c0102908	obj/kernel.asm	/^c0102908:	75 1b                	jne    c0102925 <trap_dispatch+0x144>$/;"	l
c010290a	obj/kernel.asm	/^c010290a:	c7 05 44 ed 1a c0 00 	movl   $0x0,0xc01aed44$/;"	l
c0102911	obj/kernel.asm	/^c0102911:	00 00 00 $/;"	l
c0102914	obj/kernel.asm	/^c0102914:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0102919	obj/kernel.asm	/^c0102919:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c0102920	obj/kernel.asm	/^c0102920:	e9 f4 01 00 00       	jmp    c0102b19 <trap_dispatch+0x338>$/;"	l
c0102925	obj/kernel.asm	/^c0102925:	e9 ef 01 00 00       	jmp    c0102b19 <trap_dispatch+0x338>$/;"	l
c010292a	obj/kernel.asm	/^c010292a:	e8 3b f5 ff ff       	call   c0101e6a <cons_getc>$/;"	l
c010292f	obj/kernel.asm	/^c010292f:	88 45 e3             	mov    %al,-0x1d(%ebp)$/;"	l
c0102932	obj/kernel.asm	/^c0102932:	0f be 55 e3          	movsbl -0x1d(%ebp),%edx$/;"	l
c0102936	obj/kernel.asm	/^c0102936:	0f be 45 e3          	movsbl -0x1d(%ebp),%eax$/;"	l
c010293a	obj/kernel.asm	/^c010293a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010293d	obj/kernel.asm	/^c010293d:	52                   	push   %edx$/;"	l
c010293e	obj/kernel.asm	/^c010293e:	50                   	push   %eax$/;"	l
c010293f	obj/kernel.asm	/^c010293f:	68 15 c2 10 c0       	push   $0xc010c215$/;"	l
c0102944	obj/kernel.asm	/^c0102944:	e8 31 d9 ff ff       	call   c010027a <cprintf>$/;"	l
c0102949	obj/kernel.asm	/^c0102949:	83 c4 10             	add    $0x10,%esp$/;"	l
c010294c	obj/kernel.asm	/^c010294c:	e9 c8 01 00 00       	jmp    c0102b19 <trap_dispatch+0x338>$/;"	l
c0102951	obj/kernel.asm	/^c0102951:	e8 14 f5 ff ff       	call   c0101e6a <cons_getc>$/;"	l
c0102956	obj/kernel.asm	/^c0102956:	88 45 e3             	mov    %al,-0x1d(%ebp)$/;"	l
c0102959	obj/kernel.asm	/^c0102959:	0f be 55 e3          	movsbl -0x1d(%ebp),%edx$/;"	l
c010295d	obj/kernel.asm	/^c010295d:	0f be 45 e3          	movsbl -0x1d(%ebp),%eax$/;"	l
c0102961	obj/kernel.asm	/^c0102961:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0102964	obj/kernel.asm	/^c0102964:	52                   	push   %edx$/;"	l
c0102965	obj/kernel.asm	/^c0102965:	50                   	push   %eax$/;"	l
c0102966	obj/kernel.asm	/^c0102966:	68 27 c2 10 c0       	push   $0xc010c227$/;"	l
c010296b	obj/kernel.asm	/^c010296b:	e8 0a d9 ff ff       	call   c010027a <cprintf>$/;"	l
c0102970	obj/kernel.asm	/^c0102970:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102973	obj/kernel.asm	/^c0102973:	e9 a1 01 00 00       	jmp    c0102b19 <trap_dispatch+0x338>$/;"	l
c0102978	obj/kernel.asm	/^c0102978:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010297b	obj/kernel.asm	/^c010297b:	68 36 c2 10 c0       	push   $0xc010c236$/;"	l
c0102980	obj/kernel.asm	/^c0102980:	e8 f5 d8 ff ff       	call   c010027a <cprintf>$/;"	l
c0102985	obj/kernel.asm	/^c0102985:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102988	obj/kernel.asm	/^c0102988:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010298b	obj/kernel.asm	/^c010298b:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c010298f	obj/kernel.asm	/^c010298f:	66 83 f8 1b          	cmp    $0x1b,%ax$/;"	l
c0102993	obj/kernel.asm	/^c0102993:	0f 84 95 00 00 00    	je     c0102a2e <trap_dispatch+0x24d>$/;"	l
c0102999	obj/kernel.asm	/^c0102999:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010299c	obj/kernel.asm	/^c010299c:	b8 c0 0e 1b c0       	mov    $0xc01b0ec0,%eax$/;"	l
c01029a1	obj/kernel.asm	/^c01029a1:	89 d3                	mov    %edx,%ebx$/;"	l
c01029a3	obj/kernel.asm	/^c01029a3:	ba 4c 00 00 00       	mov    $0x4c,%edx$/;"	l
c01029a8	obj/kernel.asm	/^c01029a8:	8b 0b                	mov    (%ebx),%ecx$/;"	l
c01029aa	obj/kernel.asm	/^c01029aa:	89 08                	mov    %ecx,(%eax)$/;"	l
c01029ac	obj/kernel.asm	/^c01029ac:	8b 4c 13 fc          	mov    -0x4(%ebx,%edx,1),%ecx$/;"	l
c01029b0	obj/kernel.asm	/^c01029b0:	89 4c 10 fc          	mov    %ecx,-0x4(%eax,%edx,1)$/;"	l
c01029b4	obj/kernel.asm	/^c01029b4:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
c01029b7	obj/kernel.asm	/^c01029b7:	83 e7 fc             	and    $0xfffffffc,%edi$/;"	l
c01029ba	obj/kernel.asm	/^c01029ba:	29 f8                	sub    %edi,%eax$/;"	l
c01029bc	obj/kernel.asm	/^c01029bc:	29 c3                	sub    %eax,%ebx$/;"	l
c01029be	obj/kernel.asm	/^c01029be:	01 c2                	add    %eax,%edx$/;"	l
c01029c0	obj/kernel.asm	/^c01029c0:	83 e2 fc             	and    $0xfffffffc,%edx$/;"	l
c01029c3	obj/kernel.asm	/^c01029c3:	89 d0                	mov    %edx,%eax$/;"	l
c01029c5	obj/kernel.asm	/^c01029c5:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c01029c8	obj/kernel.asm	/^c01029c8:	89 de                	mov    %ebx,%esi$/;"	l
c01029ca	obj/kernel.asm	/^c01029ca:	89 c1                	mov    %eax,%ecx$/;"	l
c01029cc	obj/kernel.asm	/^c01029cc:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c01029ce	obj/kernel.asm	/^c01029ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01029d1	obj/kernel.asm	/^c01029d1:	83 c0 44             	add    $0x44,%eax$/;"	l
c01029d4	obj/kernel.asm	/^c01029d4:	a3 04 0f 1b c0       	mov    %eax,0xc01b0f04$/;"	l
c01029d9	obj/kernel.asm	/^c01029d9:	66 c7 05 fc 0e 1b c0 	movw   $0x1b,0xc01b0efc$/;"	l
c01029e0	obj/kernel.asm	/^c01029e0:	1b 00 $/;"	l
c01029e2	obj/kernel.asm	/^c01029e2:	66 c7 05 ec 0e 1b c0 	movw   $0x23,0xc01b0eec$/;"	l
c01029e9	obj/kernel.asm	/^c01029e9:	23 00 $/;"	l
c01029eb	obj/kernel.asm	/^c01029eb:	66 c7 05 08 0f 1b c0 	movw   $0x23,0xc01b0f08$/;"	l
c01029f2	obj/kernel.asm	/^c01029f2:	23 00 $/;"	l
c01029f4	obj/kernel.asm	/^c01029f4:	66 c7 05 e8 0e 1b c0 	movw   $0x23,0xc01b0ee8$/;"	l
c01029fb	obj/kernel.asm	/^c01029fb:	23 00 $/;"	l
c01029fd	obj/kernel.asm	/^c01029fd:	66 c7 05 e4 0e 1b c0 	movw   $0x23,0xc01b0ee4$/;"	l
c0102a04	obj/kernel.asm	/^c0102a04:	23 00 $/;"	l
c0102a06	obj/kernel.asm	/^c0102a06:	66 c7 05 e0 0e 1b c0 	movw   $0x23,0xc01b0ee0$/;"	l
c0102a0d	obj/kernel.asm	/^c0102a0d:	23 00 $/;"	l
c0102a0f	obj/kernel.asm	/^c0102a0f:	a1 00 0f 1b c0       	mov    0xc01b0f00,%eax$/;"	l
c0102a14	obj/kernel.asm	/^c0102a14:	80 cc 30             	or     $0x30,%ah$/;"	l
c0102a17	obj/kernel.asm	/^c0102a17:	a3 00 0f 1b c0       	mov    %eax,0xc01b0f00$/;"	l
c0102a1c	obj/kernel.asm	/^c0102a1c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a1f	obj/kernel.asm	/^c0102a1f:	83 e8 04             	sub    $0x4,%eax$/;"	l
c0102a22	obj/kernel.asm	/^c0102a22:	ba c0 0e 1b c0       	mov    $0xc01b0ec0,%edx$/;"	l
c0102a27	obj/kernel.asm	/^c0102a27:	89 10                	mov    %edx,(%eax)$/;"	l
c0102a29	obj/kernel.asm	/^c0102a29:	e9 eb 00 00 00       	jmp    c0102b19 <trap_dispatch+0x338>$/;"	l
c0102a2e	obj/kernel.asm	/^c0102a2e:	e9 e6 00 00 00       	jmp    c0102b19 <trap_dispatch+0x338>$/;"	l
c0102a33	obj/kernel.asm	/^c0102a33:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102a36	obj/kernel.asm	/^c0102a36:	68 44 c2 10 c0       	push   $0xc010c244$/;"	l
c0102a3b	obj/kernel.asm	/^c0102a3b:	e8 3a d8 ff ff       	call   c010027a <cprintf>$/;"	l
c0102a40	obj/kernel.asm	/^c0102a40:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102a43	obj/kernel.asm	/^c0102a43:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a46	obj/kernel.asm	/^c0102a46:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c0102a4a	obj/kernel.asm	/^c0102a4a:	66 83 f8 08          	cmp    $0x8,%ax$/;"	l
c0102a4e	obj/kernel.asm	/^c0102a4e:	74 7b                	je     c0102acb <trap_dispatch+0x2ea>$/;"	l
c0102a50	obj/kernel.asm	/^c0102a50:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a53	obj/kernel.asm	/^c0102a53:	66 c7 40 3c 08 00    	movw   $0x8,0x3c(%eax)$/;"	l
c0102a59	obj/kernel.asm	/^c0102a59:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a5c	obj/kernel.asm	/^c0102a5c:	66 c7 40 2c 10 00    	movw   $0x10,0x2c(%eax)$/;"	l
c0102a62	obj/kernel.asm	/^c0102a62:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a65	obj/kernel.asm	/^c0102a65:	66 c7 40 48 10 00    	movw   $0x10,0x48(%eax)$/;"	l
c0102a6b	obj/kernel.asm	/^c0102a6b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a6e	obj/kernel.asm	/^c0102a6e:	66 c7 40 28 10 00    	movw   $0x10,0x28(%eax)$/;"	l
c0102a74	obj/kernel.asm	/^c0102a74:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a77	obj/kernel.asm	/^c0102a77:	66 c7 40 24 10 00    	movw   $0x10,0x24(%eax)$/;"	l
c0102a7d	obj/kernel.asm	/^c0102a7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a80	obj/kernel.asm	/^c0102a80:	66 c7 40 20 10 00    	movw   $0x10,0x20(%eax)$/;"	l
c0102a86	obj/kernel.asm	/^c0102a86:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a89	obj/kernel.asm	/^c0102a89:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c0102a8c	obj/kernel.asm	/^c0102a8c:	80 e4 cf             	and    $0xcf,%ah$/;"	l
c0102a8f	obj/kernel.asm	/^c0102a8f:	89 c2                	mov    %eax,%edx$/;"	l
c0102a91	obj/kernel.asm	/^c0102a91:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a94	obj/kernel.asm	/^c0102a94:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c0102a97	obj/kernel.asm	/^c0102a97:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102a9a	obj/kernel.asm	/^c0102a9a:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c0102a9d	obj/kernel.asm	/^c0102a9d:	83 e8 44             	sub    $0x44,%eax$/;"	l
c0102aa0	obj/kernel.asm	/^c0102aa0:	a3 0c 0f 1b c0       	mov    %eax,0xc01b0f0c$/;"	l
c0102aa5	obj/kernel.asm	/^c0102aa5:	a1 0c 0f 1b c0       	mov    0xc01b0f0c,%eax$/;"	l
c0102aaa	obj/kernel.asm	/^c0102aaa:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0102aad	obj/kernel.asm	/^c0102aad:	6a 44                	push   $0x44$/;"	l
c0102aaf	obj/kernel.asm	/^c0102aaf:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102ab2	obj/kernel.asm	/^c0102ab2:	50                   	push   %eax$/;"	l
c0102ab3	obj/kernel.asm	/^c0102ab3:	e8 cb 87 00 00       	call   c010b283 <memmove>$/;"	l
c0102ab8	obj/kernel.asm	/^c0102ab8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102abb	obj/kernel.asm	/^c0102abb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102abe	obj/kernel.asm	/^c0102abe:	83 e8 04             	sub    $0x4,%eax$/;"	l
c0102ac1	obj/kernel.asm	/^c0102ac1:	8b 15 0c 0f 1b c0    	mov    0xc01b0f0c,%edx$/;"	l
c0102ac7	obj/kernel.asm	/^c0102ac7:	89 10                	mov    %edx,(%eax)$/;"	l
c0102ac9	obj/kernel.asm	/^c0102ac9:	eb 4e                	jmp    c0102b19 <trap_dispatch+0x338>$/;"	l
c0102acb	obj/kernel.asm	/^c0102acb:	eb 4c                	jmp    c0102b19 <trap_dispatch+0x338>$/;"	l
c0102acd	obj/kernel.asm	/^c0102acd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102ad0	obj/kernel.asm	/^c0102ad0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102ad3	obj/kernel.asm	/^c0102ad3:	e8 3a f9 ff ff       	call   c0102412 <print_trapframe>$/;"	l
c0102ad8	obj/kernel.asm	/^c0102ad8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102adb	obj/kernel.asm	/^c0102adb:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0102ae0	obj/kernel.asm	/^c0102ae0:	85 c0                	test   %eax,%eax$/;"	l
c0102ae2	obj/kernel.asm	/^c0102ae2:	74 1d                	je     c0102b01 <trap_dispatch+0x320>$/;"	l
c0102ae4	obj/kernel.asm	/^c0102ae4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102ae7	obj/kernel.asm	/^c0102ae7:	68 52 c2 10 c0       	push   $0xc010c252$/;"	l
c0102aec	obj/kernel.asm	/^c0102aec:	e8 89 d7 ff ff       	call   c010027a <cprintf>$/;"	l
c0102af1	obj/kernel.asm	/^c0102af1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102af4	obj/kernel.asm	/^c0102af4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102af7	obj/kernel.asm	/^c0102af7:	6a f7                	push   $0xfffffff7$/;"	l
c0102af9	obj/kernel.asm	/^c0102af9:	e8 f6 6b 00 00       	call   c01096f4 <do_exit>$/;"	l
c0102afe	obj/kernel.asm	/^c0102afe:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102b01	obj/kernel.asm	/^c0102b01:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0102b04	obj/kernel.asm	/^c0102b04:	68 63 c2 10 c0       	push   $0xc010c263$/;"	l
c0102b09	obj/kernel.asm	/^c0102b09:	68 41 01 00 00       	push   $0x141$/;"	l
c0102b0e	obj/kernel.asm	/^c0102b0e:	68 60 c1 10 c0       	push   $0xc010c160$/;"	l
c0102b13	obj/kernel.asm	/^c0102b13:	e8 c7 d8 ff ff       	call   c01003df <__panic>$/;"	l
c0102b18	obj/kernel.asm	/^c0102b18:	90                   	nop$/;"	l
c0102b19	obj/kernel.asm	/^c0102b19:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
c0102b1c	obj/kernel.asm	/^c0102b1c:	5b                   	pop    %ebx$/;"	l
c0102b1d	obj/kernel.asm	/^c0102b1d:	5e                   	pop    %esi$/;"	l
c0102b1e	obj/kernel.asm	/^c0102b1e:	5f                   	pop    %edi$/;"	l
c0102b1f	obj/kernel.asm	/^c0102b1f:	5d                   	pop    %ebp$/;"	l
c0102b20	obj/kernel.asm	/^c0102b20:	c3                   	ret    $/;"	l
c0102b21	obj/kernel.asm	/^c0102b21 <trap>:$/;"	l
c0102b21	obj/kernel.asm	/^c0102b21:	55                   	push   %ebp$/;"	l
c0102b22	obj/kernel.asm	/^c0102b22:	89 e5                	mov    %esp,%ebp$/;"	l
c0102b24	obj/kernel.asm	/^c0102b24:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102b27	obj/kernel.asm	/^c0102b27:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0102b2c	obj/kernel.asm	/^c0102b2c:	85 c0                	test   %eax,%eax$/;"	l
c0102b2e	obj/kernel.asm	/^c0102b2e:	75 10                	jne    c0102b40 <trap+0x1f>$/;"	l
c0102b30	obj/kernel.asm	/^c0102b30:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102b33	obj/kernel.asm	/^c0102b33:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102b36	obj/kernel.asm	/^c0102b36:	e8 a6 fc ff ff       	call   c01027e1 <trap_dispatch>$/;"	l
c0102b3b	obj/kernel.asm	/^c0102b3b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102b3e	obj/kernel.asm	/^c0102b3e:	eb 73                	jmp    c0102bb3 <trap+0x92>$/;"	l
c0102b40	obj/kernel.asm	/^c0102b40:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0102b45	obj/kernel.asm	/^c0102b45:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0102b48	obj/kernel.asm	/^c0102b48:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102b4b	obj/kernel.asm	/^c0102b4b:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0102b50	obj/kernel.asm	/^c0102b50:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0102b53	obj/kernel.asm	/^c0102b53:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0102b56	obj/kernel.asm	/^c0102b56:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102b59	obj/kernel.asm	/^c0102b59:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102b5c	obj/kernel.asm	/^c0102b5c:	e8 9b f8 ff ff       	call   c01023fc <trap_in_kernel>$/;"	l
c0102b61	obj/kernel.asm	/^c0102b61:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102b64	obj/kernel.asm	/^c0102b64:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0102b67	obj/kernel.asm	/^c0102b67:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102b6a	obj/kernel.asm	/^c0102b6a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102b6d	obj/kernel.asm	/^c0102b6d:	e8 6f fc ff ff       	call   c01027e1 <trap_dispatch>$/;"	l
c0102b72	obj/kernel.asm	/^c0102b72:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102b75	obj/kernel.asm	/^c0102b75:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0102b7a	obj/kernel.asm	/^c0102b7a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0102b7d	obj/kernel.asm	/^c0102b7d:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0102b80	obj/kernel.asm	/^c0102b80:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0102b84	obj/kernel.asm	/^c0102b84:	75 2d                	jne    c0102bb3 <trap+0x92>$/;"	l
c0102b86	obj/kernel.asm	/^c0102b86:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0102b8b	obj/kernel.asm	/^c0102b8b:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c0102b8e	obj/kernel.asm	/^c0102b8e:	83 e0 01             	and    $0x1,%eax$/;"	l
c0102b91	obj/kernel.asm	/^c0102b91:	85 c0                	test   %eax,%eax$/;"	l
c0102b93	obj/kernel.asm	/^c0102b93:	74 0d                	je     c0102ba2 <trap+0x81>$/;"	l
c0102b95	obj/kernel.asm	/^c0102b95:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102b98	obj/kernel.asm	/^c0102b98:	6a f7                	push   $0xfffffff7$/;"	l
c0102b9a	obj/kernel.asm	/^c0102b9a:	e8 55 6b 00 00       	call   c01096f4 <do_exit>$/;"	l
c0102b9f	obj/kernel.asm	/^c0102b9f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102ba2	obj/kernel.asm	/^c0102ba2:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0102ba7	obj/kernel.asm	/^c0102ba7:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0102baa	obj/kernel.asm	/^c0102baa:	85 c0                	test   %eax,%eax$/;"	l
c0102bac	obj/kernel.asm	/^c0102bac:	74 05                	je     c0102bb3 <trap+0x92>$/;"	l
c0102bae	obj/kernel.asm	/^c0102bae:	e8 a1 7b 00 00       	call   c010a754 <schedule>$/;"	l
c0102bb3	obj/kernel.asm	/^c0102bb3:	c9                   	leave  $/;"	l
c0102bb4	obj/kernel.asm	/^c0102bb4:	c3                   	ret    $/;"	l
c0102bb5	obj/kernel.asm	/^c0102bb5 <vector0>:$/;"	l
c0102bb5	obj/kernel.asm	/^c0102bb5:	6a 00                	push   $0x0$/;"	l
c0102bb7	obj/kernel.asm	/^c0102bb7:	6a 00                	push   $0x0$/;"	l
c0102bb9	obj/kernel.asm	/^c0102bb9:	e9 67 0a 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102bbe	obj/kernel.asm	/^c0102bbe <vector1>:$/;"	l
c0102bbe	obj/kernel.asm	/^c0102bbe:	6a 00                	push   $0x0$/;"	l
c0102bc0	obj/kernel.asm	/^c0102bc0:	6a 01                	push   $0x1$/;"	l
c0102bc2	obj/kernel.asm	/^c0102bc2:	e9 5e 0a 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102bc7	obj/kernel.asm	/^c0102bc7 <vector2>:$/;"	l
c0102bc7	obj/kernel.asm	/^c0102bc7:	6a 00                	push   $0x0$/;"	l
c0102bc9	obj/kernel.asm	/^c0102bc9:	6a 02                	push   $0x2$/;"	l
c0102bcb	obj/kernel.asm	/^c0102bcb:	e9 55 0a 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102bd0	obj/kernel.asm	/^c0102bd0 <vector3>:$/;"	l
c0102bd0	obj/kernel.asm	/^c0102bd0:	6a 00                	push   $0x0$/;"	l
c0102bd2	obj/kernel.asm	/^c0102bd2:	6a 03                	push   $0x3$/;"	l
c0102bd4	obj/kernel.asm	/^c0102bd4:	e9 4c 0a 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102bd9	obj/kernel.asm	/^c0102bd9 <vector4>:$/;"	l
c0102bd9	obj/kernel.asm	/^c0102bd9:	6a 00                	push   $0x0$/;"	l
c0102bdb	obj/kernel.asm	/^c0102bdb:	6a 04                	push   $0x4$/;"	l
c0102bdd	obj/kernel.asm	/^c0102bdd:	e9 43 0a 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102be2	obj/kernel.asm	/^c0102be2 <vector5>:$/;"	l
c0102be2	obj/kernel.asm	/^c0102be2:	6a 00                	push   $0x0$/;"	l
c0102be4	obj/kernel.asm	/^c0102be4:	6a 05                	push   $0x5$/;"	l
c0102be6	obj/kernel.asm	/^c0102be6:	e9 3a 0a 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102beb	obj/kernel.asm	/^c0102beb <vector6>:$/;"	l
c0102beb	obj/kernel.asm	/^c0102beb:	6a 00                	push   $0x0$/;"	l
c0102bed	obj/kernel.asm	/^c0102bed:	6a 06                	push   $0x6$/;"	l
c0102bef	obj/kernel.asm	/^c0102bef:	e9 31 0a 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102bf4	obj/kernel.asm	/^c0102bf4 <vector7>:$/;"	l
c0102bf4	obj/kernel.asm	/^c0102bf4:	6a 00                	push   $0x0$/;"	l
c0102bf6	obj/kernel.asm	/^c0102bf6:	6a 07                	push   $0x7$/;"	l
c0102bf8	obj/kernel.asm	/^c0102bf8:	e9 28 0a 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102bfd	obj/kernel.asm	/^c0102bfd <vector8>:$/;"	l
c0102bfd	obj/kernel.asm	/^c0102bfd:	6a 08                	push   $0x8$/;"	l
c0102bff	obj/kernel.asm	/^c0102bff:	e9 21 0a 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c04	obj/kernel.asm	/^c0102c04 <vector9>:$/;"	l
c0102c04	obj/kernel.asm	/^c0102c04:	6a 09                	push   $0x9$/;"	l
c0102c06	obj/kernel.asm	/^c0102c06:	e9 1a 0a 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c0b	obj/kernel.asm	/^c0102c0b <vector10>:$/;"	l
c0102c0b	obj/kernel.asm	/^c0102c0b:	6a 0a                	push   $0xa$/;"	l
c0102c0d	obj/kernel.asm	/^c0102c0d:	e9 13 0a 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c12	obj/kernel.asm	/^c0102c12 <vector11>:$/;"	l
c0102c12	obj/kernel.asm	/^c0102c12:	6a 0b                	push   $0xb$/;"	l
c0102c14	obj/kernel.asm	/^c0102c14:	e9 0c 0a 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c19	obj/kernel.asm	/^c0102c19 <vector12>:$/;"	l
c0102c19	obj/kernel.asm	/^c0102c19:	6a 0c                	push   $0xc$/;"	l
c0102c1b	obj/kernel.asm	/^c0102c1b:	e9 05 0a 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c20	obj/kernel.asm	/^c0102c20 <vector13>:$/;"	l
c0102c20	obj/kernel.asm	/^c0102c20:	6a 0d                	push   $0xd$/;"	l
c0102c22	obj/kernel.asm	/^c0102c22:	e9 fe 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c27	obj/kernel.asm	/^c0102c27 <vector14>:$/;"	l
c0102c27	obj/kernel.asm	/^c0102c27:	6a 0e                	push   $0xe$/;"	l
c0102c29	obj/kernel.asm	/^c0102c29:	e9 f7 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c2e	obj/kernel.asm	/^c0102c2e <vector15>:$/;"	l
c0102c2e	obj/kernel.asm	/^c0102c2e:	6a 00                	push   $0x0$/;"	l
c0102c30	obj/kernel.asm	/^c0102c30:	6a 0f                	push   $0xf$/;"	l
c0102c32	obj/kernel.asm	/^c0102c32:	e9 ee 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c37	obj/kernel.asm	/^c0102c37 <vector16>:$/;"	l
c0102c37	obj/kernel.asm	/^c0102c37:	6a 00                	push   $0x0$/;"	l
c0102c39	obj/kernel.asm	/^c0102c39:	6a 10                	push   $0x10$/;"	l
c0102c3b	obj/kernel.asm	/^c0102c3b:	e9 e5 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c40	obj/kernel.asm	/^c0102c40 <vector17>:$/;"	l
c0102c40	obj/kernel.asm	/^c0102c40:	6a 11                	push   $0x11$/;"	l
c0102c42	obj/kernel.asm	/^c0102c42:	e9 de 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c47	obj/kernel.asm	/^c0102c47 <vector18>:$/;"	l
c0102c47	obj/kernel.asm	/^c0102c47:	6a 00                	push   $0x0$/;"	l
c0102c49	obj/kernel.asm	/^c0102c49:	6a 12                	push   $0x12$/;"	l
c0102c4b	obj/kernel.asm	/^c0102c4b:	e9 d5 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c50	obj/kernel.asm	/^c0102c50 <vector19>:$/;"	l
c0102c50	obj/kernel.asm	/^c0102c50:	6a 00                	push   $0x0$/;"	l
c0102c52	obj/kernel.asm	/^c0102c52:	6a 13                	push   $0x13$/;"	l
c0102c54	obj/kernel.asm	/^c0102c54:	e9 cc 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c59	obj/kernel.asm	/^c0102c59 <vector20>:$/;"	l
c0102c59	obj/kernel.asm	/^c0102c59:	6a 00                	push   $0x0$/;"	l
c0102c5b	obj/kernel.asm	/^c0102c5b:	6a 14                	push   $0x14$/;"	l
c0102c5d	obj/kernel.asm	/^c0102c5d:	e9 c3 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c62	obj/kernel.asm	/^c0102c62 <vector21>:$/;"	l
c0102c62	obj/kernel.asm	/^c0102c62:	6a 00                	push   $0x0$/;"	l
c0102c64	obj/kernel.asm	/^c0102c64:	6a 15                	push   $0x15$/;"	l
c0102c66	obj/kernel.asm	/^c0102c66:	e9 ba 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c6b	obj/kernel.asm	/^c0102c6b <vector22>:$/;"	l
c0102c6b	obj/kernel.asm	/^c0102c6b:	6a 00                	push   $0x0$/;"	l
c0102c6d	obj/kernel.asm	/^c0102c6d:	6a 16                	push   $0x16$/;"	l
c0102c6f	obj/kernel.asm	/^c0102c6f:	e9 b1 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c74	obj/kernel.asm	/^c0102c74 <vector23>:$/;"	l
c0102c74	obj/kernel.asm	/^c0102c74:	6a 00                	push   $0x0$/;"	l
c0102c76	obj/kernel.asm	/^c0102c76:	6a 17                	push   $0x17$/;"	l
c0102c78	obj/kernel.asm	/^c0102c78:	e9 a8 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c7d	obj/kernel.asm	/^c0102c7d <vector24>:$/;"	l
c0102c7d	obj/kernel.asm	/^c0102c7d:	6a 00                	push   $0x0$/;"	l
c0102c7f	obj/kernel.asm	/^c0102c7f:	6a 18                	push   $0x18$/;"	l
c0102c81	obj/kernel.asm	/^c0102c81:	e9 9f 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c86	obj/kernel.asm	/^c0102c86 <vector25>:$/;"	l
c0102c86	obj/kernel.asm	/^c0102c86:	6a 00                	push   $0x0$/;"	l
c0102c88	obj/kernel.asm	/^c0102c88:	6a 19                	push   $0x19$/;"	l
c0102c8a	obj/kernel.asm	/^c0102c8a:	e9 96 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c8f	obj/kernel.asm	/^c0102c8f <vector26>:$/;"	l
c0102c8f	obj/kernel.asm	/^c0102c8f:	6a 00                	push   $0x0$/;"	l
c0102c91	obj/kernel.asm	/^c0102c91:	6a 1a                	push   $0x1a$/;"	l
c0102c93	obj/kernel.asm	/^c0102c93:	e9 8d 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102c98	obj/kernel.asm	/^c0102c98 <vector27>:$/;"	l
c0102c98	obj/kernel.asm	/^c0102c98:	6a 00                	push   $0x0$/;"	l
c0102c9a	obj/kernel.asm	/^c0102c9a:	6a 1b                	push   $0x1b$/;"	l
c0102c9c	obj/kernel.asm	/^c0102c9c:	e9 84 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102ca1	obj/kernel.asm	/^c0102ca1 <vector28>:$/;"	l
c0102ca1	obj/kernel.asm	/^c0102ca1:	6a 00                	push   $0x0$/;"	l
c0102ca3	obj/kernel.asm	/^c0102ca3:	6a 1c                	push   $0x1c$/;"	l
c0102ca5	obj/kernel.asm	/^c0102ca5:	e9 7b 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102caa	obj/kernel.asm	/^c0102caa <vector29>:$/;"	l
c0102caa	obj/kernel.asm	/^c0102caa:	6a 00                	push   $0x0$/;"	l
c0102cac	obj/kernel.asm	/^c0102cac:	6a 1d                	push   $0x1d$/;"	l
c0102cae	obj/kernel.asm	/^c0102cae:	e9 72 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102cb3	obj/kernel.asm	/^c0102cb3 <vector30>:$/;"	l
c0102cb3	obj/kernel.asm	/^c0102cb3:	6a 00                	push   $0x0$/;"	l
c0102cb5	obj/kernel.asm	/^c0102cb5:	6a 1e                	push   $0x1e$/;"	l
c0102cb7	obj/kernel.asm	/^c0102cb7:	e9 69 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102cbc	obj/kernel.asm	/^c0102cbc <vector31>:$/;"	l
c0102cbc	obj/kernel.asm	/^c0102cbc:	6a 00                	push   $0x0$/;"	l
c0102cbe	obj/kernel.asm	/^c0102cbe:	6a 1f                	push   $0x1f$/;"	l
c0102cc0	obj/kernel.asm	/^c0102cc0:	e9 60 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102cc5	obj/kernel.asm	/^c0102cc5 <vector32>:$/;"	l
c0102cc5	obj/kernel.asm	/^c0102cc5:	6a 00                	push   $0x0$/;"	l
c0102cc7	obj/kernel.asm	/^c0102cc7:	6a 20                	push   $0x20$/;"	l
c0102cc9	obj/kernel.asm	/^c0102cc9:	e9 57 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102cce	obj/kernel.asm	/^c0102cce <vector33>:$/;"	l
c0102cce	obj/kernel.asm	/^c0102cce:	6a 00                	push   $0x0$/;"	l
c0102cd0	obj/kernel.asm	/^c0102cd0:	6a 21                	push   $0x21$/;"	l
c0102cd2	obj/kernel.asm	/^c0102cd2:	e9 4e 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102cd7	obj/kernel.asm	/^c0102cd7 <vector34>:$/;"	l
c0102cd7	obj/kernel.asm	/^c0102cd7:	6a 00                	push   $0x0$/;"	l
c0102cd9	obj/kernel.asm	/^c0102cd9:	6a 22                	push   $0x22$/;"	l
c0102cdb	obj/kernel.asm	/^c0102cdb:	e9 45 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102ce0	obj/kernel.asm	/^c0102ce0 <vector35>:$/;"	l
c0102ce0	obj/kernel.asm	/^c0102ce0:	6a 00                	push   $0x0$/;"	l
c0102ce2	obj/kernel.asm	/^c0102ce2:	6a 23                	push   $0x23$/;"	l
c0102ce4	obj/kernel.asm	/^c0102ce4:	e9 3c 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102ce9	obj/kernel.asm	/^c0102ce9 <vector36>:$/;"	l
c0102ce9	obj/kernel.asm	/^c0102ce9:	6a 00                	push   $0x0$/;"	l
c0102ceb	obj/kernel.asm	/^c0102ceb:	6a 24                	push   $0x24$/;"	l
c0102ced	obj/kernel.asm	/^c0102ced:	e9 33 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102cf2	obj/kernel.asm	/^c0102cf2 <vector37>:$/;"	l
c0102cf2	obj/kernel.asm	/^c0102cf2:	6a 00                	push   $0x0$/;"	l
c0102cf4	obj/kernel.asm	/^c0102cf4:	6a 25                	push   $0x25$/;"	l
c0102cf6	obj/kernel.asm	/^c0102cf6:	e9 2a 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102cfb	obj/kernel.asm	/^c0102cfb <vector38>:$/;"	l
c0102cfb	obj/kernel.asm	/^c0102cfb:	6a 00                	push   $0x0$/;"	l
c0102cfd	obj/kernel.asm	/^c0102cfd:	6a 26                	push   $0x26$/;"	l
c0102cff	obj/kernel.asm	/^c0102cff:	e9 21 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102d04	obj/kernel.asm	/^c0102d04 <vector39>:$/;"	l
c0102d04	obj/kernel.asm	/^c0102d04:	6a 00                	push   $0x0$/;"	l
c0102d06	obj/kernel.asm	/^c0102d06:	6a 27                	push   $0x27$/;"	l
c0102d08	obj/kernel.asm	/^c0102d08:	e9 18 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102d0d	obj/kernel.asm	/^c0102d0d <vector40>:$/;"	l
c0102d0d	obj/kernel.asm	/^c0102d0d:	6a 00                	push   $0x0$/;"	l
c0102d0f	obj/kernel.asm	/^c0102d0f:	6a 28                	push   $0x28$/;"	l
c0102d11	obj/kernel.asm	/^c0102d11:	e9 0f 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102d16	obj/kernel.asm	/^c0102d16 <vector41>:$/;"	l
c0102d16	obj/kernel.asm	/^c0102d16:	6a 00                	push   $0x0$/;"	l
c0102d18	obj/kernel.asm	/^c0102d18:	6a 29                	push   $0x29$/;"	l
c0102d1a	obj/kernel.asm	/^c0102d1a:	e9 06 09 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102d1f	obj/kernel.asm	/^c0102d1f <vector42>:$/;"	l
c0102d1f	obj/kernel.asm	/^c0102d1f:	6a 00                	push   $0x0$/;"	l
c0102d21	obj/kernel.asm	/^c0102d21:	6a 2a                	push   $0x2a$/;"	l
c0102d23	obj/kernel.asm	/^c0102d23:	e9 fd 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102d28	obj/kernel.asm	/^c0102d28 <vector43>:$/;"	l
c0102d28	obj/kernel.asm	/^c0102d28:	6a 00                	push   $0x0$/;"	l
c0102d2a	obj/kernel.asm	/^c0102d2a:	6a 2b                	push   $0x2b$/;"	l
c0102d2c	obj/kernel.asm	/^c0102d2c:	e9 f4 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102d31	obj/kernel.asm	/^c0102d31 <vector44>:$/;"	l
c0102d31	obj/kernel.asm	/^c0102d31:	6a 00                	push   $0x0$/;"	l
c0102d33	obj/kernel.asm	/^c0102d33:	6a 2c                	push   $0x2c$/;"	l
c0102d35	obj/kernel.asm	/^c0102d35:	e9 eb 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102d3a	obj/kernel.asm	/^c0102d3a <vector45>:$/;"	l
c0102d3a	obj/kernel.asm	/^c0102d3a:	6a 00                	push   $0x0$/;"	l
c0102d3c	obj/kernel.asm	/^c0102d3c:	6a 2d                	push   $0x2d$/;"	l
c0102d3e	obj/kernel.asm	/^c0102d3e:	e9 e2 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102d43	obj/kernel.asm	/^c0102d43 <vector46>:$/;"	l
c0102d43	obj/kernel.asm	/^c0102d43:	6a 00                	push   $0x0$/;"	l
c0102d45	obj/kernel.asm	/^c0102d45:	6a 2e                	push   $0x2e$/;"	l
c0102d47	obj/kernel.asm	/^c0102d47:	e9 d9 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102d4c	obj/kernel.asm	/^c0102d4c <vector47>:$/;"	l
c0102d4c	obj/kernel.asm	/^c0102d4c:	6a 00                	push   $0x0$/;"	l
c0102d4e	obj/kernel.asm	/^c0102d4e:	6a 2f                	push   $0x2f$/;"	l
c0102d50	obj/kernel.asm	/^c0102d50:	e9 d0 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102d55	obj/kernel.asm	/^c0102d55 <vector48>:$/;"	l
c0102d55	obj/kernel.asm	/^c0102d55:	6a 00                	push   $0x0$/;"	l
c0102d57	obj/kernel.asm	/^c0102d57:	6a 30                	push   $0x30$/;"	l
c0102d59	obj/kernel.asm	/^c0102d59:	e9 c7 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102d5e	obj/kernel.asm	/^c0102d5e <vector49>:$/;"	l
c0102d5e	obj/kernel.asm	/^c0102d5e:	6a 00                	push   $0x0$/;"	l
c0102d60	obj/kernel.asm	/^c0102d60:	6a 31                	push   $0x31$/;"	l
c0102d62	obj/kernel.asm	/^c0102d62:	e9 be 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102d67	obj/kernel.asm	/^c0102d67 <vector50>:$/;"	l
c0102d67	obj/kernel.asm	/^c0102d67:	6a 00                	push   $0x0$/;"	l
c0102d69	obj/kernel.asm	/^c0102d69:	6a 32                	push   $0x32$/;"	l
c0102d6b	obj/kernel.asm	/^c0102d6b:	e9 b5 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102d70	obj/kernel.asm	/^c0102d70 <vector51>:$/;"	l
c0102d70	obj/kernel.asm	/^c0102d70:	6a 00                	push   $0x0$/;"	l
c0102d72	obj/kernel.asm	/^c0102d72:	6a 33                	push   $0x33$/;"	l
c0102d74	obj/kernel.asm	/^c0102d74:	e9 ac 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102d79	obj/kernel.asm	/^c0102d79 <vector52>:$/;"	l
c0102d79	obj/kernel.asm	/^c0102d79:	6a 00                	push   $0x0$/;"	l
c0102d7b	obj/kernel.asm	/^c0102d7b:	6a 34                	push   $0x34$/;"	l
c0102d7d	obj/kernel.asm	/^c0102d7d:	e9 a3 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102d82	obj/kernel.asm	/^c0102d82 <vector53>:$/;"	l
c0102d82	obj/kernel.asm	/^c0102d82:	6a 00                	push   $0x0$/;"	l
c0102d84	obj/kernel.asm	/^c0102d84:	6a 35                	push   $0x35$/;"	l
c0102d86	obj/kernel.asm	/^c0102d86:	e9 9a 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102d8b	obj/kernel.asm	/^c0102d8b <vector54>:$/;"	l
c0102d8b	obj/kernel.asm	/^c0102d8b:	6a 00                	push   $0x0$/;"	l
c0102d8d	obj/kernel.asm	/^c0102d8d:	6a 36                	push   $0x36$/;"	l
c0102d8f	obj/kernel.asm	/^c0102d8f:	e9 91 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102d94	obj/kernel.asm	/^c0102d94 <vector55>:$/;"	l
c0102d94	obj/kernel.asm	/^c0102d94:	6a 00                	push   $0x0$/;"	l
c0102d96	obj/kernel.asm	/^c0102d96:	6a 37                	push   $0x37$/;"	l
c0102d98	obj/kernel.asm	/^c0102d98:	e9 88 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102d9d	obj/kernel.asm	/^c0102d9d <vector56>:$/;"	l
c0102d9d	obj/kernel.asm	/^c0102d9d:	6a 00                	push   $0x0$/;"	l
c0102d9f	obj/kernel.asm	/^c0102d9f:	6a 38                	push   $0x38$/;"	l
c0102da1	obj/kernel.asm	/^c0102da1:	e9 7f 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102da6	obj/kernel.asm	/^c0102da6 <vector57>:$/;"	l
c0102da6	obj/kernel.asm	/^c0102da6:	6a 00                	push   $0x0$/;"	l
c0102da8	obj/kernel.asm	/^c0102da8:	6a 39                	push   $0x39$/;"	l
c0102daa	obj/kernel.asm	/^c0102daa:	e9 76 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102daf	obj/kernel.asm	/^c0102daf <vector58>:$/;"	l
c0102daf	obj/kernel.asm	/^c0102daf:	6a 00                	push   $0x0$/;"	l
c0102db1	obj/kernel.asm	/^c0102db1:	6a 3a                	push   $0x3a$/;"	l
c0102db3	obj/kernel.asm	/^c0102db3:	e9 6d 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102db8	obj/kernel.asm	/^c0102db8 <vector59>:$/;"	l
c0102db8	obj/kernel.asm	/^c0102db8:	6a 00                	push   $0x0$/;"	l
c0102dba	obj/kernel.asm	/^c0102dba:	6a 3b                	push   $0x3b$/;"	l
c0102dbc	obj/kernel.asm	/^c0102dbc:	e9 64 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102dc1	obj/kernel.asm	/^c0102dc1 <vector60>:$/;"	l
c0102dc1	obj/kernel.asm	/^c0102dc1:	6a 00                	push   $0x0$/;"	l
c0102dc3	obj/kernel.asm	/^c0102dc3:	6a 3c                	push   $0x3c$/;"	l
c0102dc5	obj/kernel.asm	/^c0102dc5:	e9 5b 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102dca	obj/kernel.asm	/^c0102dca <vector61>:$/;"	l
c0102dca	obj/kernel.asm	/^c0102dca:	6a 00                	push   $0x0$/;"	l
c0102dcc	obj/kernel.asm	/^c0102dcc:	6a 3d                	push   $0x3d$/;"	l
c0102dce	obj/kernel.asm	/^c0102dce:	e9 52 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102dd3	obj/kernel.asm	/^c0102dd3 <vector62>:$/;"	l
c0102dd3	obj/kernel.asm	/^c0102dd3:	6a 00                	push   $0x0$/;"	l
c0102dd5	obj/kernel.asm	/^c0102dd5:	6a 3e                	push   $0x3e$/;"	l
c0102dd7	obj/kernel.asm	/^c0102dd7:	e9 49 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102ddc	obj/kernel.asm	/^c0102ddc <vector63>:$/;"	l
c0102ddc	obj/kernel.asm	/^c0102ddc:	6a 00                	push   $0x0$/;"	l
c0102dde	obj/kernel.asm	/^c0102dde:	6a 3f                	push   $0x3f$/;"	l
c0102de0	obj/kernel.asm	/^c0102de0:	e9 40 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102de5	obj/kernel.asm	/^c0102de5 <vector64>:$/;"	l
c0102de5	obj/kernel.asm	/^c0102de5:	6a 00                	push   $0x0$/;"	l
c0102de7	obj/kernel.asm	/^c0102de7:	6a 40                	push   $0x40$/;"	l
c0102de9	obj/kernel.asm	/^c0102de9:	e9 37 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102dee	obj/kernel.asm	/^c0102dee <vector65>:$/;"	l
c0102dee	obj/kernel.asm	/^c0102dee:	6a 00                	push   $0x0$/;"	l
c0102df0	obj/kernel.asm	/^c0102df0:	6a 41                	push   $0x41$/;"	l
c0102df2	obj/kernel.asm	/^c0102df2:	e9 2e 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102df7	obj/kernel.asm	/^c0102df7 <vector66>:$/;"	l
c0102df7	obj/kernel.asm	/^c0102df7:	6a 00                	push   $0x0$/;"	l
c0102df9	obj/kernel.asm	/^c0102df9:	6a 42                	push   $0x42$/;"	l
c0102dfb	obj/kernel.asm	/^c0102dfb:	e9 25 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102e00	obj/kernel.asm	/^c0102e00 <vector67>:$/;"	l
c0102e00	obj/kernel.asm	/^c0102e00:	6a 00                	push   $0x0$/;"	l
c0102e02	obj/kernel.asm	/^c0102e02:	6a 43                	push   $0x43$/;"	l
c0102e04	obj/kernel.asm	/^c0102e04:	e9 1c 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102e09	obj/kernel.asm	/^c0102e09 <vector68>:$/;"	l
c0102e09	obj/kernel.asm	/^c0102e09:	6a 00                	push   $0x0$/;"	l
c0102e0b	obj/kernel.asm	/^c0102e0b:	6a 44                	push   $0x44$/;"	l
c0102e0d	obj/kernel.asm	/^c0102e0d:	e9 13 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102e12	obj/kernel.asm	/^c0102e12 <vector69>:$/;"	l
c0102e12	obj/kernel.asm	/^c0102e12:	6a 00                	push   $0x0$/;"	l
c0102e14	obj/kernel.asm	/^c0102e14:	6a 45                	push   $0x45$/;"	l
c0102e16	obj/kernel.asm	/^c0102e16:	e9 0a 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102e1b	obj/kernel.asm	/^c0102e1b <vector70>:$/;"	l
c0102e1b	obj/kernel.asm	/^c0102e1b:	6a 00                	push   $0x0$/;"	l
c0102e1d	obj/kernel.asm	/^c0102e1d:	6a 46                	push   $0x46$/;"	l
c0102e1f	obj/kernel.asm	/^c0102e1f:	e9 01 08 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102e24	obj/kernel.asm	/^c0102e24 <vector71>:$/;"	l
c0102e24	obj/kernel.asm	/^c0102e24:	6a 00                	push   $0x0$/;"	l
c0102e26	obj/kernel.asm	/^c0102e26:	6a 47                	push   $0x47$/;"	l
c0102e28	obj/kernel.asm	/^c0102e28:	e9 f8 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102e2d	obj/kernel.asm	/^c0102e2d <vector72>:$/;"	l
c0102e2d	obj/kernel.asm	/^c0102e2d:	6a 00                	push   $0x0$/;"	l
c0102e2f	obj/kernel.asm	/^c0102e2f:	6a 48                	push   $0x48$/;"	l
c0102e31	obj/kernel.asm	/^c0102e31:	e9 ef 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102e36	obj/kernel.asm	/^c0102e36 <vector73>:$/;"	l
c0102e36	obj/kernel.asm	/^c0102e36:	6a 00                	push   $0x0$/;"	l
c0102e38	obj/kernel.asm	/^c0102e38:	6a 49                	push   $0x49$/;"	l
c0102e3a	obj/kernel.asm	/^c0102e3a:	e9 e6 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102e3f	obj/kernel.asm	/^c0102e3f <vector74>:$/;"	l
c0102e3f	obj/kernel.asm	/^c0102e3f:	6a 00                	push   $0x0$/;"	l
c0102e41	obj/kernel.asm	/^c0102e41:	6a 4a                	push   $0x4a$/;"	l
c0102e43	obj/kernel.asm	/^c0102e43:	e9 dd 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102e48	obj/kernel.asm	/^c0102e48 <vector75>:$/;"	l
c0102e48	obj/kernel.asm	/^c0102e48:	6a 00                	push   $0x0$/;"	l
c0102e4a	obj/kernel.asm	/^c0102e4a:	6a 4b                	push   $0x4b$/;"	l
c0102e4c	obj/kernel.asm	/^c0102e4c:	e9 d4 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102e51	obj/kernel.asm	/^c0102e51 <vector76>:$/;"	l
c0102e51	obj/kernel.asm	/^c0102e51:	6a 00                	push   $0x0$/;"	l
c0102e53	obj/kernel.asm	/^c0102e53:	6a 4c                	push   $0x4c$/;"	l
c0102e55	obj/kernel.asm	/^c0102e55:	e9 cb 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102e5a	obj/kernel.asm	/^c0102e5a <vector77>:$/;"	l
c0102e5a	obj/kernel.asm	/^c0102e5a:	6a 00                	push   $0x0$/;"	l
c0102e5c	obj/kernel.asm	/^c0102e5c:	6a 4d                	push   $0x4d$/;"	l
c0102e5e	obj/kernel.asm	/^c0102e5e:	e9 c2 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102e63	obj/kernel.asm	/^c0102e63 <vector78>:$/;"	l
c0102e63	obj/kernel.asm	/^c0102e63:	6a 00                	push   $0x0$/;"	l
c0102e65	obj/kernel.asm	/^c0102e65:	6a 4e                	push   $0x4e$/;"	l
c0102e67	obj/kernel.asm	/^c0102e67:	e9 b9 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102e6c	obj/kernel.asm	/^c0102e6c <vector79>:$/;"	l
c0102e6c	obj/kernel.asm	/^c0102e6c:	6a 00                	push   $0x0$/;"	l
c0102e6e	obj/kernel.asm	/^c0102e6e:	6a 4f                	push   $0x4f$/;"	l
c0102e70	obj/kernel.asm	/^c0102e70:	e9 b0 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102e75	obj/kernel.asm	/^c0102e75 <vector80>:$/;"	l
c0102e75	obj/kernel.asm	/^c0102e75:	6a 00                	push   $0x0$/;"	l
c0102e77	obj/kernel.asm	/^c0102e77:	6a 50                	push   $0x50$/;"	l
c0102e79	obj/kernel.asm	/^c0102e79:	e9 a7 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102e7e	obj/kernel.asm	/^c0102e7e <vector81>:$/;"	l
c0102e7e	obj/kernel.asm	/^c0102e7e:	6a 00                	push   $0x0$/;"	l
c0102e80	obj/kernel.asm	/^c0102e80:	6a 51                	push   $0x51$/;"	l
c0102e82	obj/kernel.asm	/^c0102e82:	e9 9e 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102e87	obj/kernel.asm	/^c0102e87 <vector82>:$/;"	l
c0102e87	obj/kernel.asm	/^c0102e87:	6a 00                	push   $0x0$/;"	l
c0102e89	obj/kernel.asm	/^c0102e89:	6a 52                	push   $0x52$/;"	l
c0102e8b	obj/kernel.asm	/^c0102e8b:	e9 95 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102e90	obj/kernel.asm	/^c0102e90 <vector83>:$/;"	l
c0102e90	obj/kernel.asm	/^c0102e90:	6a 00                	push   $0x0$/;"	l
c0102e92	obj/kernel.asm	/^c0102e92:	6a 53                	push   $0x53$/;"	l
c0102e94	obj/kernel.asm	/^c0102e94:	e9 8c 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102e99	obj/kernel.asm	/^c0102e99 <vector84>:$/;"	l
c0102e99	obj/kernel.asm	/^c0102e99:	6a 00                	push   $0x0$/;"	l
c0102e9b	obj/kernel.asm	/^c0102e9b:	6a 54                	push   $0x54$/;"	l
c0102e9d	obj/kernel.asm	/^c0102e9d:	e9 83 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102ea2	obj/kernel.asm	/^c0102ea2 <vector85>:$/;"	l
c0102ea2	obj/kernel.asm	/^c0102ea2:	6a 00                	push   $0x0$/;"	l
c0102ea4	obj/kernel.asm	/^c0102ea4:	6a 55                	push   $0x55$/;"	l
c0102ea6	obj/kernel.asm	/^c0102ea6:	e9 7a 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102eab	obj/kernel.asm	/^c0102eab <vector86>:$/;"	l
c0102eab	obj/kernel.asm	/^c0102eab:	6a 00                	push   $0x0$/;"	l
c0102ead	obj/kernel.asm	/^c0102ead:	6a 56                	push   $0x56$/;"	l
c0102eaf	obj/kernel.asm	/^c0102eaf:	e9 71 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102eb4	obj/kernel.asm	/^c0102eb4 <vector87>:$/;"	l
c0102eb4	obj/kernel.asm	/^c0102eb4:	6a 00                	push   $0x0$/;"	l
c0102eb6	obj/kernel.asm	/^c0102eb6:	6a 57                	push   $0x57$/;"	l
c0102eb8	obj/kernel.asm	/^c0102eb8:	e9 68 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102ebd	obj/kernel.asm	/^c0102ebd <vector88>:$/;"	l
c0102ebd	obj/kernel.asm	/^c0102ebd:	6a 00                	push   $0x0$/;"	l
c0102ebf	obj/kernel.asm	/^c0102ebf:	6a 58                	push   $0x58$/;"	l
c0102ec1	obj/kernel.asm	/^c0102ec1:	e9 5f 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102ec6	obj/kernel.asm	/^c0102ec6 <vector89>:$/;"	l
c0102ec6	obj/kernel.asm	/^c0102ec6:	6a 00                	push   $0x0$/;"	l
c0102ec8	obj/kernel.asm	/^c0102ec8:	6a 59                	push   $0x59$/;"	l
c0102eca	obj/kernel.asm	/^c0102eca:	e9 56 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102ecf	obj/kernel.asm	/^c0102ecf <vector90>:$/;"	l
c0102ecf	obj/kernel.asm	/^c0102ecf:	6a 00                	push   $0x0$/;"	l
c0102ed1	obj/kernel.asm	/^c0102ed1:	6a 5a                	push   $0x5a$/;"	l
c0102ed3	obj/kernel.asm	/^c0102ed3:	e9 4d 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102ed8	obj/kernel.asm	/^c0102ed8 <vector91>:$/;"	l
c0102ed8	obj/kernel.asm	/^c0102ed8:	6a 00                	push   $0x0$/;"	l
c0102eda	obj/kernel.asm	/^c0102eda:	6a 5b                	push   $0x5b$/;"	l
c0102edc	obj/kernel.asm	/^c0102edc:	e9 44 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102ee1	obj/kernel.asm	/^c0102ee1 <vector92>:$/;"	l
c0102ee1	obj/kernel.asm	/^c0102ee1:	6a 00                	push   $0x0$/;"	l
c0102ee3	obj/kernel.asm	/^c0102ee3:	6a 5c                	push   $0x5c$/;"	l
c0102ee5	obj/kernel.asm	/^c0102ee5:	e9 3b 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102eea	obj/kernel.asm	/^c0102eea <vector93>:$/;"	l
c0102eea	obj/kernel.asm	/^c0102eea:	6a 00                	push   $0x0$/;"	l
c0102eec	obj/kernel.asm	/^c0102eec:	6a 5d                	push   $0x5d$/;"	l
c0102eee	obj/kernel.asm	/^c0102eee:	e9 32 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102ef3	obj/kernel.asm	/^c0102ef3 <vector94>:$/;"	l
c0102ef3	obj/kernel.asm	/^c0102ef3:	6a 00                	push   $0x0$/;"	l
c0102ef5	obj/kernel.asm	/^c0102ef5:	6a 5e                	push   $0x5e$/;"	l
c0102ef7	obj/kernel.asm	/^c0102ef7:	e9 29 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102efc	obj/kernel.asm	/^c0102efc <vector95>:$/;"	l
c0102efc	obj/kernel.asm	/^c0102efc:	6a 00                	push   $0x0$/;"	l
c0102efe	obj/kernel.asm	/^c0102efe:	6a 5f                	push   $0x5f$/;"	l
c0102f00	obj/kernel.asm	/^c0102f00:	e9 20 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102f05	obj/kernel.asm	/^c0102f05 <vector96>:$/;"	l
c0102f05	obj/kernel.asm	/^c0102f05:	6a 00                	push   $0x0$/;"	l
c0102f07	obj/kernel.asm	/^c0102f07:	6a 60                	push   $0x60$/;"	l
c0102f09	obj/kernel.asm	/^c0102f09:	e9 17 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102f0e	obj/kernel.asm	/^c0102f0e <vector97>:$/;"	l
c0102f0e	obj/kernel.asm	/^c0102f0e:	6a 00                	push   $0x0$/;"	l
c0102f10	obj/kernel.asm	/^c0102f10:	6a 61                	push   $0x61$/;"	l
c0102f12	obj/kernel.asm	/^c0102f12:	e9 0e 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102f17	obj/kernel.asm	/^c0102f17 <vector98>:$/;"	l
c0102f17	obj/kernel.asm	/^c0102f17:	6a 00                	push   $0x0$/;"	l
c0102f19	obj/kernel.asm	/^c0102f19:	6a 62                	push   $0x62$/;"	l
c0102f1b	obj/kernel.asm	/^c0102f1b:	e9 05 07 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102f20	obj/kernel.asm	/^c0102f20 <vector99>:$/;"	l
c0102f20	obj/kernel.asm	/^c0102f20:	6a 00                	push   $0x0$/;"	l
c0102f22	obj/kernel.asm	/^c0102f22:	6a 63                	push   $0x63$/;"	l
c0102f24	obj/kernel.asm	/^c0102f24:	e9 fc 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102f29	obj/kernel.asm	/^c0102f29 <vector100>:$/;"	l
c0102f29	obj/kernel.asm	/^c0102f29:	6a 00                	push   $0x0$/;"	l
c0102f2b	obj/kernel.asm	/^c0102f2b:	6a 64                	push   $0x64$/;"	l
c0102f2d	obj/kernel.asm	/^c0102f2d:	e9 f3 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102f32	obj/kernel.asm	/^c0102f32 <vector101>:$/;"	l
c0102f32	obj/kernel.asm	/^c0102f32:	6a 00                	push   $0x0$/;"	l
c0102f34	obj/kernel.asm	/^c0102f34:	6a 65                	push   $0x65$/;"	l
c0102f36	obj/kernel.asm	/^c0102f36:	e9 ea 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102f3b	obj/kernel.asm	/^c0102f3b <vector102>:$/;"	l
c0102f3b	obj/kernel.asm	/^c0102f3b:	6a 00                	push   $0x0$/;"	l
c0102f3d	obj/kernel.asm	/^c0102f3d:	6a 66                	push   $0x66$/;"	l
c0102f3f	obj/kernel.asm	/^c0102f3f:	e9 e1 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102f44	obj/kernel.asm	/^c0102f44 <vector103>:$/;"	l
c0102f44	obj/kernel.asm	/^c0102f44:	6a 00                	push   $0x0$/;"	l
c0102f46	obj/kernel.asm	/^c0102f46:	6a 67                	push   $0x67$/;"	l
c0102f48	obj/kernel.asm	/^c0102f48:	e9 d8 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102f4d	obj/kernel.asm	/^c0102f4d <vector104>:$/;"	l
c0102f4d	obj/kernel.asm	/^c0102f4d:	6a 00                	push   $0x0$/;"	l
c0102f4f	obj/kernel.asm	/^c0102f4f:	6a 68                	push   $0x68$/;"	l
c0102f51	obj/kernel.asm	/^c0102f51:	e9 cf 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102f56	obj/kernel.asm	/^c0102f56 <vector105>:$/;"	l
c0102f56	obj/kernel.asm	/^c0102f56:	6a 00                	push   $0x0$/;"	l
c0102f58	obj/kernel.asm	/^c0102f58:	6a 69                	push   $0x69$/;"	l
c0102f5a	obj/kernel.asm	/^c0102f5a:	e9 c6 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102f5f	obj/kernel.asm	/^c0102f5f <vector106>:$/;"	l
c0102f5f	obj/kernel.asm	/^c0102f5f:	6a 00                	push   $0x0$/;"	l
c0102f61	obj/kernel.asm	/^c0102f61:	6a 6a                	push   $0x6a$/;"	l
c0102f63	obj/kernel.asm	/^c0102f63:	e9 bd 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102f68	obj/kernel.asm	/^c0102f68 <vector107>:$/;"	l
c0102f68	obj/kernel.asm	/^c0102f68:	6a 00                	push   $0x0$/;"	l
c0102f6a	obj/kernel.asm	/^c0102f6a:	6a 6b                	push   $0x6b$/;"	l
c0102f6c	obj/kernel.asm	/^c0102f6c:	e9 b4 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102f71	obj/kernel.asm	/^c0102f71 <vector108>:$/;"	l
c0102f71	obj/kernel.asm	/^c0102f71:	6a 00                	push   $0x0$/;"	l
c0102f73	obj/kernel.asm	/^c0102f73:	6a 6c                	push   $0x6c$/;"	l
c0102f75	obj/kernel.asm	/^c0102f75:	e9 ab 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102f7a	obj/kernel.asm	/^c0102f7a <vector109>:$/;"	l
c0102f7a	obj/kernel.asm	/^c0102f7a:	6a 00                	push   $0x0$/;"	l
c0102f7c	obj/kernel.asm	/^c0102f7c:	6a 6d                	push   $0x6d$/;"	l
c0102f7e	obj/kernel.asm	/^c0102f7e:	e9 a2 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102f83	obj/kernel.asm	/^c0102f83 <vector110>:$/;"	l
c0102f83	obj/kernel.asm	/^c0102f83:	6a 00                	push   $0x0$/;"	l
c0102f85	obj/kernel.asm	/^c0102f85:	6a 6e                	push   $0x6e$/;"	l
c0102f87	obj/kernel.asm	/^c0102f87:	e9 99 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102f8c	obj/kernel.asm	/^c0102f8c <vector111>:$/;"	l
c0102f8c	obj/kernel.asm	/^c0102f8c:	6a 00                	push   $0x0$/;"	l
c0102f8e	obj/kernel.asm	/^c0102f8e:	6a 6f                	push   $0x6f$/;"	l
c0102f90	obj/kernel.asm	/^c0102f90:	e9 90 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102f95	obj/kernel.asm	/^c0102f95 <vector112>:$/;"	l
c0102f95	obj/kernel.asm	/^c0102f95:	6a 00                	push   $0x0$/;"	l
c0102f97	obj/kernel.asm	/^c0102f97:	6a 70                	push   $0x70$/;"	l
c0102f99	obj/kernel.asm	/^c0102f99:	e9 87 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102f9e	obj/kernel.asm	/^c0102f9e <vector113>:$/;"	l
c0102f9e	obj/kernel.asm	/^c0102f9e:	6a 00                	push   $0x0$/;"	l
c0102fa0	obj/kernel.asm	/^c0102fa0:	6a 71                	push   $0x71$/;"	l
c0102fa2	obj/kernel.asm	/^c0102fa2:	e9 7e 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102fa7	obj/kernel.asm	/^c0102fa7 <vector114>:$/;"	l
c0102fa7	obj/kernel.asm	/^c0102fa7:	6a 00                	push   $0x0$/;"	l
c0102fa9	obj/kernel.asm	/^c0102fa9:	6a 72                	push   $0x72$/;"	l
c0102fab	obj/kernel.asm	/^c0102fab:	e9 75 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102fb0	obj/kernel.asm	/^c0102fb0 <vector115>:$/;"	l
c0102fb0	obj/kernel.asm	/^c0102fb0:	6a 00                	push   $0x0$/;"	l
c0102fb2	obj/kernel.asm	/^c0102fb2:	6a 73                	push   $0x73$/;"	l
c0102fb4	obj/kernel.asm	/^c0102fb4:	e9 6c 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102fb9	obj/kernel.asm	/^c0102fb9 <vector116>:$/;"	l
c0102fb9	obj/kernel.asm	/^c0102fb9:	6a 00                	push   $0x0$/;"	l
c0102fbb	obj/kernel.asm	/^c0102fbb:	6a 74                	push   $0x74$/;"	l
c0102fbd	obj/kernel.asm	/^c0102fbd:	e9 63 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102fc2	obj/kernel.asm	/^c0102fc2 <vector117>:$/;"	l
c0102fc2	obj/kernel.asm	/^c0102fc2:	6a 00                	push   $0x0$/;"	l
c0102fc4	obj/kernel.asm	/^c0102fc4:	6a 75                	push   $0x75$/;"	l
c0102fc6	obj/kernel.asm	/^c0102fc6:	e9 5a 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102fcb	obj/kernel.asm	/^c0102fcb <vector118>:$/;"	l
c0102fcb	obj/kernel.asm	/^c0102fcb:	6a 00                	push   $0x0$/;"	l
c0102fcd	obj/kernel.asm	/^c0102fcd:	6a 76                	push   $0x76$/;"	l
c0102fcf	obj/kernel.asm	/^c0102fcf:	e9 51 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102fd4	obj/kernel.asm	/^c0102fd4 <vector119>:$/;"	l
c0102fd4	obj/kernel.asm	/^c0102fd4:	6a 00                	push   $0x0$/;"	l
c0102fd6	obj/kernel.asm	/^c0102fd6:	6a 77                	push   $0x77$/;"	l
c0102fd8	obj/kernel.asm	/^c0102fd8:	e9 48 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102fdd	obj/kernel.asm	/^c0102fdd <vector120>:$/;"	l
c0102fdd	obj/kernel.asm	/^c0102fdd:	6a 00                	push   $0x0$/;"	l
c0102fdf	obj/kernel.asm	/^c0102fdf:	6a 78                	push   $0x78$/;"	l
c0102fe1	obj/kernel.asm	/^c0102fe1:	e9 3f 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102fe6	obj/kernel.asm	/^c0102fe6 <vector121>:$/;"	l
c0102fe6	obj/kernel.asm	/^c0102fe6:	6a 00                	push   $0x0$/;"	l
c0102fe8	obj/kernel.asm	/^c0102fe8:	6a 79                	push   $0x79$/;"	l
c0102fea	obj/kernel.asm	/^c0102fea:	e9 36 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102fef	obj/kernel.asm	/^c0102fef <vector122>:$/;"	l
c0102fef	obj/kernel.asm	/^c0102fef:	6a 00                	push   $0x0$/;"	l
c0102ff1	obj/kernel.asm	/^c0102ff1:	6a 7a                	push   $0x7a$/;"	l
c0102ff3	obj/kernel.asm	/^c0102ff3:	e9 2d 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0102ff8	obj/kernel.asm	/^c0102ff8 <vector123>:$/;"	l
c0102ff8	obj/kernel.asm	/^c0102ff8:	6a 00                	push   $0x0$/;"	l
c0102ffa	obj/kernel.asm	/^c0102ffa:	6a 7b                	push   $0x7b$/;"	l
c0102ffc	obj/kernel.asm	/^c0102ffc:	e9 24 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103001	obj/kernel.asm	/^c0103001 <vector124>:$/;"	l
c0103001	obj/kernel.asm	/^c0103001:	6a 00                	push   $0x0$/;"	l
c0103003	obj/kernel.asm	/^c0103003:	6a 7c                	push   $0x7c$/;"	l
c0103005	obj/kernel.asm	/^c0103005:	e9 1b 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010300a	obj/kernel.asm	/^c010300a <vector125>:$/;"	l
c010300a	obj/kernel.asm	/^c010300a:	6a 00                	push   $0x0$/;"	l
c010300c	obj/kernel.asm	/^c010300c:	6a 7d                	push   $0x7d$/;"	l
c010300e	obj/kernel.asm	/^c010300e:	e9 12 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103013	obj/kernel.asm	/^c0103013 <vector126>:$/;"	l
c0103013	obj/kernel.asm	/^c0103013:	6a 00                	push   $0x0$/;"	l
c0103015	obj/kernel.asm	/^c0103015:	6a 7e                	push   $0x7e$/;"	l
c0103017	obj/kernel.asm	/^c0103017:	e9 09 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010301c	obj/kernel.asm	/^c010301c <vector127>:$/;"	l
c010301c	obj/kernel.asm	/^c010301c:	6a 00                	push   $0x0$/;"	l
c010301e	obj/kernel.asm	/^c010301e:	6a 7f                	push   $0x7f$/;"	l
c0103020	obj/kernel.asm	/^c0103020:	e9 00 06 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103025	obj/kernel.asm	/^c0103025 <vector128>:$/;"	l
c0103025	obj/kernel.asm	/^c0103025:	6a 00                	push   $0x0$/;"	l
c0103027	obj/kernel.asm	/^c0103027:	68 80 00 00 00       	push   $0x80$/;"	l
c010302c	obj/kernel.asm	/^c010302c:	e9 f4 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103031	obj/kernel.asm	/^c0103031 <vector129>:$/;"	l
c0103031	obj/kernel.asm	/^c0103031:	6a 00                	push   $0x0$/;"	l
c0103033	obj/kernel.asm	/^c0103033:	68 81 00 00 00       	push   $0x81$/;"	l
c0103038	obj/kernel.asm	/^c0103038:	e9 e8 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010303d	obj/kernel.asm	/^c010303d <vector130>:$/;"	l
c010303d	obj/kernel.asm	/^c010303d:	6a 00                	push   $0x0$/;"	l
c010303f	obj/kernel.asm	/^c010303f:	68 82 00 00 00       	push   $0x82$/;"	l
c0103044	obj/kernel.asm	/^c0103044:	e9 dc 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103049	obj/kernel.asm	/^c0103049 <vector131>:$/;"	l
c0103049	obj/kernel.asm	/^c0103049:	6a 00                	push   $0x0$/;"	l
c010304b	obj/kernel.asm	/^c010304b:	68 83 00 00 00       	push   $0x83$/;"	l
c0103050	obj/kernel.asm	/^c0103050:	e9 d0 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103055	obj/kernel.asm	/^c0103055 <vector132>:$/;"	l
c0103055	obj/kernel.asm	/^c0103055:	6a 00                	push   $0x0$/;"	l
c0103057	obj/kernel.asm	/^c0103057:	68 84 00 00 00       	push   $0x84$/;"	l
c010305c	obj/kernel.asm	/^c010305c:	e9 c4 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103061	obj/kernel.asm	/^c0103061 <vector133>:$/;"	l
c0103061	obj/kernel.asm	/^c0103061:	6a 00                	push   $0x0$/;"	l
c0103063	obj/kernel.asm	/^c0103063:	68 85 00 00 00       	push   $0x85$/;"	l
c0103068	obj/kernel.asm	/^c0103068:	e9 b8 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010306d	obj/kernel.asm	/^c010306d <vector134>:$/;"	l
c010306d	obj/kernel.asm	/^c010306d:	6a 00                	push   $0x0$/;"	l
c010306f	obj/kernel.asm	/^c010306f:	68 86 00 00 00       	push   $0x86$/;"	l
c0103074	obj/kernel.asm	/^c0103074:	e9 ac 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103079	obj/kernel.asm	/^c0103079 <vector135>:$/;"	l
c0103079	obj/kernel.asm	/^c0103079:	6a 00                	push   $0x0$/;"	l
c010307b	obj/kernel.asm	/^c010307b:	68 87 00 00 00       	push   $0x87$/;"	l
c0103080	obj/kernel.asm	/^c0103080:	e9 a0 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103085	obj/kernel.asm	/^c0103085 <vector136>:$/;"	l
c0103085	obj/kernel.asm	/^c0103085:	6a 00                	push   $0x0$/;"	l
c0103087	obj/kernel.asm	/^c0103087:	68 88 00 00 00       	push   $0x88$/;"	l
c010308c	obj/kernel.asm	/^c010308c:	e9 94 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103091	obj/kernel.asm	/^c0103091 <vector137>:$/;"	l
c0103091	obj/kernel.asm	/^c0103091:	6a 00                	push   $0x0$/;"	l
c0103093	obj/kernel.asm	/^c0103093:	68 89 00 00 00       	push   $0x89$/;"	l
c0103098	obj/kernel.asm	/^c0103098:	e9 88 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010309d	obj/kernel.asm	/^c010309d <vector138>:$/;"	l
c010309d	obj/kernel.asm	/^c010309d:	6a 00                	push   $0x0$/;"	l
c010309f	obj/kernel.asm	/^c010309f:	68 8a 00 00 00       	push   $0x8a$/;"	l
c01030a4	obj/kernel.asm	/^c01030a4:	e9 7c 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01030a9	obj/kernel.asm	/^c01030a9 <vector139>:$/;"	l
c01030a9	obj/kernel.asm	/^c01030a9:	6a 00                	push   $0x0$/;"	l
c01030ab	obj/kernel.asm	/^c01030ab:	68 8b 00 00 00       	push   $0x8b$/;"	l
c01030b0	obj/kernel.asm	/^c01030b0:	e9 70 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01030b5	obj/kernel.asm	/^c01030b5 <vector140>:$/;"	l
c01030b5	obj/kernel.asm	/^c01030b5:	6a 00                	push   $0x0$/;"	l
c01030b7	obj/kernel.asm	/^c01030b7:	68 8c 00 00 00       	push   $0x8c$/;"	l
c01030bc	obj/kernel.asm	/^c01030bc:	e9 64 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01030c1	obj/kernel.asm	/^c01030c1 <vector141>:$/;"	l
c01030c1	obj/kernel.asm	/^c01030c1:	6a 00                	push   $0x0$/;"	l
c01030c3	obj/kernel.asm	/^c01030c3:	68 8d 00 00 00       	push   $0x8d$/;"	l
c01030c8	obj/kernel.asm	/^c01030c8:	e9 58 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01030cd	obj/kernel.asm	/^c01030cd <vector142>:$/;"	l
c01030cd	obj/kernel.asm	/^c01030cd:	6a 00                	push   $0x0$/;"	l
c01030cf	obj/kernel.asm	/^c01030cf:	68 8e 00 00 00       	push   $0x8e$/;"	l
c01030d4	obj/kernel.asm	/^c01030d4:	e9 4c 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01030d9	obj/kernel.asm	/^c01030d9 <vector143>:$/;"	l
c01030d9	obj/kernel.asm	/^c01030d9:	6a 00                	push   $0x0$/;"	l
c01030db	obj/kernel.asm	/^c01030db:	68 8f 00 00 00       	push   $0x8f$/;"	l
c01030e0	obj/kernel.asm	/^c01030e0:	e9 40 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01030e5	obj/kernel.asm	/^c01030e5 <vector144>:$/;"	l
c01030e5	obj/kernel.asm	/^c01030e5:	6a 00                	push   $0x0$/;"	l
c01030e7	obj/kernel.asm	/^c01030e7:	68 90 00 00 00       	push   $0x90$/;"	l
c01030ec	obj/kernel.asm	/^c01030ec:	e9 34 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01030f1	obj/kernel.asm	/^c01030f1 <vector145>:$/;"	l
c01030f1	obj/kernel.asm	/^c01030f1:	6a 00                	push   $0x0$/;"	l
c01030f3	obj/kernel.asm	/^c01030f3:	68 91 00 00 00       	push   $0x91$/;"	l
c01030f8	obj/kernel.asm	/^c01030f8:	e9 28 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01030fd	obj/kernel.asm	/^c01030fd <vector146>:$/;"	l
c01030fd	obj/kernel.asm	/^c01030fd:	6a 00                	push   $0x0$/;"	l
c01030ff	obj/kernel.asm	/^c01030ff:	68 92 00 00 00       	push   $0x92$/;"	l
c0103104	obj/kernel.asm	/^c0103104:	e9 1c 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103109	obj/kernel.asm	/^c0103109 <vector147>:$/;"	l
c0103109	obj/kernel.asm	/^c0103109:	6a 00                	push   $0x0$/;"	l
c010310b	obj/kernel.asm	/^c010310b:	68 93 00 00 00       	push   $0x93$/;"	l
c0103110	obj/kernel.asm	/^c0103110:	e9 10 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103115	obj/kernel.asm	/^c0103115 <vector148>:$/;"	l
c0103115	obj/kernel.asm	/^c0103115:	6a 00                	push   $0x0$/;"	l
c0103117	obj/kernel.asm	/^c0103117:	68 94 00 00 00       	push   $0x94$/;"	l
c010311c	obj/kernel.asm	/^c010311c:	e9 04 05 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103121	obj/kernel.asm	/^c0103121 <vector149>:$/;"	l
c0103121	obj/kernel.asm	/^c0103121:	6a 00                	push   $0x0$/;"	l
c0103123	obj/kernel.asm	/^c0103123:	68 95 00 00 00       	push   $0x95$/;"	l
c0103128	obj/kernel.asm	/^c0103128:	e9 f8 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010312d	obj/kernel.asm	/^c010312d <vector150>:$/;"	l
c010312d	obj/kernel.asm	/^c010312d:	6a 00                	push   $0x0$/;"	l
c010312f	obj/kernel.asm	/^c010312f:	68 96 00 00 00       	push   $0x96$/;"	l
c0103134	obj/kernel.asm	/^c0103134:	e9 ec 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103139	obj/kernel.asm	/^c0103139 <vector151>:$/;"	l
c0103139	obj/kernel.asm	/^c0103139:	6a 00                	push   $0x0$/;"	l
c010313b	obj/kernel.asm	/^c010313b:	68 97 00 00 00       	push   $0x97$/;"	l
c0103140	obj/kernel.asm	/^c0103140:	e9 e0 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103145	obj/kernel.asm	/^c0103145 <vector152>:$/;"	l
c0103145	obj/kernel.asm	/^c0103145:	6a 00                	push   $0x0$/;"	l
c0103147	obj/kernel.asm	/^c0103147:	68 98 00 00 00       	push   $0x98$/;"	l
c010314c	obj/kernel.asm	/^c010314c:	e9 d4 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103151	obj/kernel.asm	/^c0103151 <vector153>:$/;"	l
c0103151	obj/kernel.asm	/^c0103151:	6a 00                	push   $0x0$/;"	l
c0103153	obj/kernel.asm	/^c0103153:	68 99 00 00 00       	push   $0x99$/;"	l
c0103158	obj/kernel.asm	/^c0103158:	e9 c8 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010315d	obj/kernel.asm	/^c010315d <vector154>:$/;"	l
c010315d	obj/kernel.asm	/^c010315d:	6a 00                	push   $0x0$/;"	l
c010315f	obj/kernel.asm	/^c010315f:	68 9a 00 00 00       	push   $0x9a$/;"	l
c0103164	obj/kernel.asm	/^c0103164:	e9 bc 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103169	obj/kernel.asm	/^c0103169 <vector155>:$/;"	l
c0103169	obj/kernel.asm	/^c0103169:	6a 00                	push   $0x0$/;"	l
c010316b	obj/kernel.asm	/^c010316b:	68 9b 00 00 00       	push   $0x9b$/;"	l
c0103170	obj/kernel.asm	/^c0103170:	e9 b0 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103175	obj/kernel.asm	/^c0103175 <vector156>:$/;"	l
c0103175	obj/kernel.asm	/^c0103175:	6a 00                	push   $0x0$/;"	l
c0103177	obj/kernel.asm	/^c0103177:	68 9c 00 00 00       	push   $0x9c$/;"	l
c010317c	obj/kernel.asm	/^c010317c:	e9 a4 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103181	obj/kernel.asm	/^c0103181 <vector157>:$/;"	l
c0103181	obj/kernel.asm	/^c0103181:	6a 00                	push   $0x0$/;"	l
c0103183	obj/kernel.asm	/^c0103183:	68 9d 00 00 00       	push   $0x9d$/;"	l
c0103188	obj/kernel.asm	/^c0103188:	e9 98 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010318d	obj/kernel.asm	/^c010318d <vector158>:$/;"	l
c010318d	obj/kernel.asm	/^c010318d:	6a 00                	push   $0x0$/;"	l
c010318f	obj/kernel.asm	/^c010318f:	68 9e 00 00 00       	push   $0x9e$/;"	l
c0103194	obj/kernel.asm	/^c0103194:	e9 8c 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103199	obj/kernel.asm	/^c0103199 <vector159>:$/;"	l
c0103199	obj/kernel.asm	/^c0103199:	6a 00                	push   $0x0$/;"	l
c010319b	obj/kernel.asm	/^c010319b:	68 9f 00 00 00       	push   $0x9f$/;"	l
c01031a0	obj/kernel.asm	/^c01031a0:	e9 80 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01031a5	obj/kernel.asm	/^c01031a5 <vector160>:$/;"	l
c01031a5	obj/kernel.asm	/^c01031a5:	6a 00                	push   $0x0$/;"	l
c01031a7	obj/kernel.asm	/^c01031a7:	68 a0 00 00 00       	push   $0xa0$/;"	l
c01031ac	obj/kernel.asm	/^c01031ac:	e9 74 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01031b1	obj/kernel.asm	/^c01031b1 <vector161>:$/;"	l
c01031b1	obj/kernel.asm	/^c01031b1:	6a 00                	push   $0x0$/;"	l
c01031b3	obj/kernel.asm	/^c01031b3:	68 a1 00 00 00       	push   $0xa1$/;"	l
c01031b8	obj/kernel.asm	/^c01031b8:	e9 68 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01031bd	obj/kernel.asm	/^c01031bd <vector162>:$/;"	l
c01031bd	obj/kernel.asm	/^c01031bd:	6a 00                	push   $0x0$/;"	l
c01031bf	obj/kernel.asm	/^c01031bf:	68 a2 00 00 00       	push   $0xa2$/;"	l
c01031c4	obj/kernel.asm	/^c01031c4:	e9 5c 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01031c9	obj/kernel.asm	/^c01031c9 <vector163>:$/;"	l
c01031c9	obj/kernel.asm	/^c01031c9:	6a 00                	push   $0x0$/;"	l
c01031cb	obj/kernel.asm	/^c01031cb:	68 a3 00 00 00       	push   $0xa3$/;"	l
c01031d0	obj/kernel.asm	/^c01031d0:	e9 50 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01031d5	obj/kernel.asm	/^c01031d5 <vector164>:$/;"	l
c01031d5	obj/kernel.asm	/^c01031d5:	6a 00                	push   $0x0$/;"	l
c01031d7	obj/kernel.asm	/^c01031d7:	68 a4 00 00 00       	push   $0xa4$/;"	l
c01031dc	obj/kernel.asm	/^c01031dc:	e9 44 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01031e1	obj/kernel.asm	/^c01031e1 <vector165>:$/;"	l
c01031e1	obj/kernel.asm	/^c01031e1:	6a 00                	push   $0x0$/;"	l
c01031e3	obj/kernel.asm	/^c01031e3:	68 a5 00 00 00       	push   $0xa5$/;"	l
c01031e8	obj/kernel.asm	/^c01031e8:	e9 38 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01031ed	obj/kernel.asm	/^c01031ed <vector166>:$/;"	l
c01031ed	obj/kernel.asm	/^c01031ed:	6a 00                	push   $0x0$/;"	l
c01031ef	obj/kernel.asm	/^c01031ef:	68 a6 00 00 00       	push   $0xa6$/;"	l
c01031f4	obj/kernel.asm	/^c01031f4:	e9 2c 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01031f9	obj/kernel.asm	/^c01031f9 <vector167>:$/;"	l
c01031f9	obj/kernel.asm	/^c01031f9:	6a 00                	push   $0x0$/;"	l
c01031fb	obj/kernel.asm	/^c01031fb:	68 a7 00 00 00       	push   $0xa7$/;"	l
c0103200	obj/kernel.asm	/^c0103200:	e9 20 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103205	obj/kernel.asm	/^c0103205 <vector168>:$/;"	l
c0103205	obj/kernel.asm	/^c0103205:	6a 00                	push   $0x0$/;"	l
c0103207	obj/kernel.asm	/^c0103207:	68 a8 00 00 00       	push   $0xa8$/;"	l
c010320c	obj/kernel.asm	/^c010320c:	e9 14 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103211	obj/kernel.asm	/^c0103211 <vector169>:$/;"	l
c0103211	obj/kernel.asm	/^c0103211:	6a 00                	push   $0x0$/;"	l
c0103213	obj/kernel.asm	/^c0103213:	68 a9 00 00 00       	push   $0xa9$/;"	l
c0103218	obj/kernel.asm	/^c0103218:	e9 08 04 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010321d	obj/kernel.asm	/^c010321d <vector170>:$/;"	l
c010321d	obj/kernel.asm	/^c010321d:	6a 00                	push   $0x0$/;"	l
c010321f	obj/kernel.asm	/^c010321f:	68 aa 00 00 00       	push   $0xaa$/;"	l
c0103224	obj/kernel.asm	/^c0103224:	e9 fc 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103229	obj/kernel.asm	/^c0103229 <vector171>:$/;"	l
c0103229	obj/kernel.asm	/^c0103229:	6a 00                	push   $0x0$/;"	l
c010322b	obj/kernel.asm	/^c010322b:	68 ab 00 00 00       	push   $0xab$/;"	l
c0103230	obj/kernel.asm	/^c0103230:	e9 f0 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103235	obj/kernel.asm	/^c0103235 <vector172>:$/;"	l
c0103235	obj/kernel.asm	/^c0103235:	6a 00                	push   $0x0$/;"	l
c0103237	obj/kernel.asm	/^c0103237:	68 ac 00 00 00       	push   $0xac$/;"	l
c010323c	obj/kernel.asm	/^c010323c:	e9 e4 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103241	obj/kernel.asm	/^c0103241 <vector173>:$/;"	l
c0103241	obj/kernel.asm	/^c0103241:	6a 00                	push   $0x0$/;"	l
c0103243	obj/kernel.asm	/^c0103243:	68 ad 00 00 00       	push   $0xad$/;"	l
c0103248	obj/kernel.asm	/^c0103248:	e9 d8 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010324d	obj/kernel.asm	/^c010324d <vector174>:$/;"	l
c010324d	obj/kernel.asm	/^c010324d:	6a 00                	push   $0x0$/;"	l
c010324f	obj/kernel.asm	/^c010324f:	68 ae 00 00 00       	push   $0xae$/;"	l
c0103254	obj/kernel.asm	/^c0103254:	e9 cc 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103259	obj/kernel.asm	/^c0103259 <vector175>:$/;"	l
c0103259	obj/kernel.asm	/^c0103259:	6a 00                	push   $0x0$/;"	l
c010325b	obj/kernel.asm	/^c010325b:	68 af 00 00 00       	push   $0xaf$/;"	l
c0103260	obj/kernel.asm	/^c0103260:	e9 c0 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103265	obj/kernel.asm	/^c0103265 <vector176>:$/;"	l
c0103265	obj/kernel.asm	/^c0103265:	6a 00                	push   $0x0$/;"	l
c0103267	obj/kernel.asm	/^c0103267:	68 b0 00 00 00       	push   $0xb0$/;"	l
c010326c	obj/kernel.asm	/^c010326c:	e9 b4 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103271	obj/kernel.asm	/^c0103271 <vector177>:$/;"	l
c0103271	obj/kernel.asm	/^c0103271:	6a 00                	push   $0x0$/;"	l
c0103273	obj/kernel.asm	/^c0103273:	68 b1 00 00 00       	push   $0xb1$/;"	l
c0103278	obj/kernel.asm	/^c0103278:	e9 a8 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010327d	obj/kernel.asm	/^c010327d <vector178>:$/;"	l
c010327d	obj/kernel.asm	/^c010327d:	6a 00                	push   $0x0$/;"	l
c010327f	obj/kernel.asm	/^c010327f:	68 b2 00 00 00       	push   $0xb2$/;"	l
c0103284	obj/kernel.asm	/^c0103284:	e9 9c 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103289	obj/kernel.asm	/^c0103289 <vector179>:$/;"	l
c0103289	obj/kernel.asm	/^c0103289:	6a 00                	push   $0x0$/;"	l
c010328b	obj/kernel.asm	/^c010328b:	68 b3 00 00 00       	push   $0xb3$/;"	l
c0103290	obj/kernel.asm	/^c0103290:	e9 90 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103295	obj/kernel.asm	/^c0103295 <vector180>:$/;"	l
c0103295	obj/kernel.asm	/^c0103295:	6a 00                	push   $0x0$/;"	l
c0103297	obj/kernel.asm	/^c0103297:	68 b4 00 00 00       	push   $0xb4$/;"	l
c010329c	obj/kernel.asm	/^c010329c:	e9 84 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01032a1	obj/kernel.asm	/^c01032a1 <vector181>:$/;"	l
c01032a1	obj/kernel.asm	/^c01032a1:	6a 00                	push   $0x0$/;"	l
c01032a3	obj/kernel.asm	/^c01032a3:	68 b5 00 00 00       	push   $0xb5$/;"	l
c01032a8	obj/kernel.asm	/^c01032a8:	e9 78 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01032ad	obj/kernel.asm	/^c01032ad <vector182>:$/;"	l
c01032ad	obj/kernel.asm	/^c01032ad:	6a 00                	push   $0x0$/;"	l
c01032af	obj/kernel.asm	/^c01032af:	68 b6 00 00 00       	push   $0xb6$/;"	l
c01032b4	obj/kernel.asm	/^c01032b4:	e9 6c 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01032b9	obj/kernel.asm	/^c01032b9 <vector183>:$/;"	l
c01032b9	obj/kernel.asm	/^c01032b9:	6a 00                	push   $0x0$/;"	l
c01032bb	obj/kernel.asm	/^c01032bb:	68 b7 00 00 00       	push   $0xb7$/;"	l
c01032c0	obj/kernel.asm	/^c01032c0:	e9 60 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01032c5	obj/kernel.asm	/^c01032c5 <vector184>:$/;"	l
c01032c5	obj/kernel.asm	/^c01032c5:	6a 00                	push   $0x0$/;"	l
c01032c7	obj/kernel.asm	/^c01032c7:	68 b8 00 00 00       	push   $0xb8$/;"	l
c01032cc	obj/kernel.asm	/^c01032cc:	e9 54 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01032d1	obj/kernel.asm	/^c01032d1 <vector185>:$/;"	l
c01032d1	obj/kernel.asm	/^c01032d1:	6a 00                	push   $0x0$/;"	l
c01032d3	obj/kernel.asm	/^c01032d3:	68 b9 00 00 00       	push   $0xb9$/;"	l
c01032d8	obj/kernel.asm	/^c01032d8:	e9 48 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01032dd	obj/kernel.asm	/^c01032dd <vector186>:$/;"	l
c01032dd	obj/kernel.asm	/^c01032dd:	6a 00                	push   $0x0$/;"	l
c01032df	obj/kernel.asm	/^c01032df:	68 ba 00 00 00       	push   $0xba$/;"	l
c01032e4	obj/kernel.asm	/^c01032e4:	e9 3c 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01032e9	obj/kernel.asm	/^c01032e9 <vector187>:$/;"	l
c01032e9	obj/kernel.asm	/^c01032e9:	6a 00                	push   $0x0$/;"	l
c01032eb	obj/kernel.asm	/^c01032eb:	68 bb 00 00 00       	push   $0xbb$/;"	l
c01032f0	obj/kernel.asm	/^c01032f0:	e9 30 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01032f5	obj/kernel.asm	/^c01032f5 <vector188>:$/;"	l
c01032f5	obj/kernel.asm	/^c01032f5:	6a 00                	push   $0x0$/;"	l
c01032f7	obj/kernel.asm	/^c01032f7:	68 bc 00 00 00       	push   $0xbc$/;"	l
c01032fc	obj/kernel.asm	/^c01032fc:	e9 24 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103301	obj/kernel.asm	/^c0103301 <vector189>:$/;"	l
c0103301	obj/kernel.asm	/^c0103301:	6a 00                	push   $0x0$/;"	l
c0103303	obj/kernel.asm	/^c0103303:	68 bd 00 00 00       	push   $0xbd$/;"	l
c0103308	obj/kernel.asm	/^c0103308:	e9 18 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010330d	obj/kernel.asm	/^c010330d <vector190>:$/;"	l
c010330d	obj/kernel.asm	/^c010330d:	6a 00                	push   $0x0$/;"	l
c010330f	obj/kernel.asm	/^c010330f:	68 be 00 00 00       	push   $0xbe$/;"	l
c0103314	obj/kernel.asm	/^c0103314:	e9 0c 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103319	obj/kernel.asm	/^c0103319 <vector191>:$/;"	l
c0103319	obj/kernel.asm	/^c0103319:	6a 00                	push   $0x0$/;"	l
c010331b	obj/kernel.asm	/^c010331b:	68 bf 00 00 00       	push   $0xbf$/;"	l
c0103320	obj/kernel.asm	/^c0103320:	e9 00 03 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103325	obj/kernel.asm	/^c0103325 <vector192>:$/;"	l
c0103325	obj/kernel.asm	/^c0103325:	6a 00                	push   $0x0$/;"	l
c0103327	obj/kernel.asm	/^c0103327:	68 c0 00 00 00       	push   $0xc0$/;"	l
c010332c	obj/kernel.asm	/^c010332c:	e9 f4 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103331	obj/kernel.asm	/^c0103331 <vector193>:$/;"	l
c0103331	obj/kernel.asm	/^c0103331:	6a 00                	push   $0x0$/;"	l
c0103333	obj/kernel.asm	/^c0103333:	68 c1 00 00 00       	push   $0xc1$/;"	l
c0103338	obj/kernel.asm	/^c0103338:	e9 e8 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010333d	obj/kernel.asm	/^c010333d <vector194>:$/;"	l
c010333d	obj/kernel.asm	/^c010333d:	6a 00                	push   $0x0$/;"	l
c010333f	obj/kernel.asm	/^c010333f:	68 c2 00 00 00       	push   $0xc2$/;"	l
c0103344	obj/kernel.asm	/^c0103344:	e9 dc 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103349	obj/kernel.asm	/^c0103349 <vector195>:$/;"	l
c0103349	obj/kernel.asm	/^c0103349:	6a 00                	push   $0x0$/;"	l
c010334b	obj/kernel.asm	/^c010334b:	68 c3 00 00 00       	push   $0xc3$/;"	l
c0103350	obj/kernel.asm	/^c0103350:	e9 d0 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103355	obj/kernel.asm	/^c0103355 <vector196>:$/;"	l
c0103355	obj/kernel.asm	/^c0103355:	6a 00                	push   $0x0$/;"	l
c0103357	obj/kernel.asm	/^c0103357:	68 c4 00 00 00       	push   $0xc4$/;"	l
c010335c	obj/kernel.asm	/^c010335c:	e9 c4 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103361	obj/kernel.asm	/^c0103361 <vector197>:$/;"	l
c0103361	obj/kernel.asm	/^c0103361:	6a 00                	push   $0x0$/;"	l
c0103363	obj/kernel.asm	/^c0103363:	68 c5 00 00 00       	push   $0xc5$/;"	l
c0103368	obj/kernel.asm	/^c0103368:	e9 b8 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010336d	obj/kernel.asm	/^c010336d <vector198>:$/;"	l
c010336d	obj/kernel.asm	/^c010336d:	6a 00                	push   $0x0$/;"	l
c010336f	obj/kernel.asm	/^c010336f:	68 c6 00 00 00       	push   $0xc6$/;"	l
c0103374	obj/kernel.asm	/^c0103374:	e9 ac 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103379	obj/kernel.asm	/^c0103379 <vector199>:$/;"	l
c0103379	obj/kernel.asm	/^c0103379:	6a 00                	push   $0x0$/;"	l
c010337b	obj/kernel.asm	/^c010337b:	68 c7 00 00 00       	push   $0xc7$/;"	l
c0103380	obj/kernel.asm	/^c0103380:	e9 a0 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103385	obj/kernel.asm	/^c0103385 <vector200>:$/;"	l
c0103385	obj/kernel.asm	/^c0103385:	6a 00                	push   $0x0$/;"	l
c0103387	obj/kernel.asm	/^c0103387:	68 c8 00 00 00       	push   $0xc8$/;"	l
c010338c	obj/kernel.asm	/^c010338c:	e9 94 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103391	obj/kernel.asm	/^c0103391 <vector201>:$/;"	l
c0103391	obj/kernel.asm	/^c0103391:	6a 00                	push   $0x0$/;"	l
c0103393	obj/kernel.asm	/^c0103393:	68 c9 00 00 00       	push   $0xc9$/;"	l
c0103398	obj/kernel.asm	/^c0103398:	e9 88 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010339d	obj/kernel.asm	/^c010339d <vector202>:$/;"	l
c010339d	obj/kernel.asm	/^c010339d:	6a 00                	push   $0x0$/;"	l
c010339f	obj/kernel.asm	/^c010339f:	68 ca 00 00 00       	push   $0xca$/;"	l
c01033a4	obj/kernel.asm	/^c01033a4:	e9 7c 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01033a9	obj/kernel.asm	/^c01033a9 <vector203>:$/;"	l
c01033a9	obj/kernel.asm	/^c01033a9:	6a 00                	push   $0x0$/;"	l
c01033ab	obj/kernel.asm	/^c01033ab:	68 cb 00 00 00       	push   $0xcb$/;"	l
c01033b0	obj/kernel.asm	/^c01033b0:	e9 70 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01033b5	obj/kernel.asm	/^c01033b5 <vector204>:$/;"	l
c01033b5	obj/kernel.asm	/^c01033b5:	6a 00                	push   $0x0$/;"	l
c01033b7	obj/kernel.asm	/^c01033b7:	68 cc 00 00 00       	push   $0xcc$/;"	l
c01033bc	obj/kernel.asm	/^c01033bc:	e9 64 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01033c1	obj/kernel.asm	/^c01033c1 <vector205>:$/;"	l
c01033c1	obj/kernel.asm	/^c01033c1:	6a 00                	push   $0x0$/;"	l
c01033c3	obj/kernel.asm	/^c01033c3:	68 cd 00 00 00       	push   $0xcd$/;"	l
c01033c8	obj/kernel.asm	/^c01033c8:	e9 58 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01033cd	obj/kernel.asm	/^c01033cd <vector206>:$/;"	l
c01033cd	obj/kernel.asm	/^c01033cd:	6a 00                	push   $0x0$/;"	l
c01033cf	obj/kernel.asm	/^c01033cf:	68 ce 00 00 00       	push   $0xce$/;"	l
c01033d4	obj/kernel.asm	/^c01033d4:	e9 4c 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01033d9	obj/kernel.asm	/^c01033d9 <vector207>:$/;"	l
c01033d9	obj/kernel.asm	/^c01033d9:	6a 00                	push   $0x0$/;"	l
c01033db	obj/kernel.asm	/^c01033db:	68 cf 00 00 00       	push   $0xcf$/;"	l
c01033e0	obj/kernel.asm	/^c01033e0:	e9 40 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01033e5	obj/kernel.asm	/^c01033e5 <vector208>:$/;"	l
c01033e5	obj/kernel.asm	/^c01033e5:	6a 00                	push   $0x0$/;"	l
c01033e7	obj/kernel.asm	/^c01033e7:	68 d0 00 00 00       	push   $0xd0$/;"	l
c01033ec	obj/kernel.asm	/^c01033ec:	e9 34 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01033f1	obj/kernel.asm	/^c01033f1 <vector209>:$/;"	l
c01033f1	obj/kernel.asm	/^c01033f1:	6a 00                	push   $0x0$/;"	l
c01033f3	obj/kernel.asm	/^c01033f3:	68 d1 00 00 00       	push   $0xd1$/;"	l
c01033f8	obj/kernel.asm	/^c01033f8:	e9 28 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01033fd	obj/kernel.asm	/^c01033fd <vector210>:$/;"	l
c01033fd	obj/kernel.asm	/^c01033fd:	6a 00                	push   $0x0$/;"	l
c01033ff	obj/kernel.asm	/^c01033ff:	68 d2 00 00 00       	push   $0xd2$/;"	l
c0103404	obj/kernel.asm	/^c0103404:	e9 1c 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103409	obj/kernel.asm	/^c0103409 <vector211>:$/;"	l
c0103409	obj/kernel.asm	/^c0103409:	6a 00                	push   $0x0$/;"	l
c010340b	obj/kernel.asm	/^c010340b:	68 d3 00 00 00       	push   $0xd3$/;"	l
c0103410	obj/kernel.asm	/^c0103410:	e9 10 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103415	obj/kernel.asm	/^c0103415 <vector212>:$/;"	l
c0103415	obj/kernel.asm	/^c0103415:	6a 00                	push   $0x0$/;"	l
c0103417	obj/kernel.asm	/^c0103417:	68 d4 00 00 00       	push   $0xd4$/;"	l
c010341c	obj/kernel.asm	/^c010341c:	e9 04 02 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103421	obj/kernel.asm	/^c0103421 <vector213>:$/;"	l
c0103421	obj/kernel.asm	/^c0103421:	6a 00                	push   $0x0$/;"	l
c0103423	obj/kernel.asm	/^c0103423:	68 d5 00 00 00       	push   $0xd5$/;"	l
c0103428	obj/kernel.asm	/^c0103428:	e9 f8 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010342d	obj/kernel.asm	/^c010342d <vector214>:$/;"	l
c010342d	obj/kernel.asm	/^c010342d:	6a 00                	push   $0x0$/;"	l
c010342f	obj/kernel.asm	/^c010342f:	68 d6 00 00 00       	push   $0xd6$/;"	l
c0103434	obj/kernel.asm	/^c0103434:	e9 ec 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103439	obj/kernel.asm	/^c0103439 <vector215>:$/;"	l
c0103439	obj/kernel.asm	/^c0103439:	6a 00                	push   $0x0$/;"	l
c010343b	obj/kernel.asm	/^c010343b:	68 d7 00 00 00       	push   $0xd7$/;"	l
c0103440	obj/kernel.asm	/^c0103440:	e9 e0 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103445	obj/kernel.asm	/^c0103445 <vector216>:$/;"	l
c0103445	obj/kernel.asm	/^c0103445:	6a 00                	push   $0x0$/;"	l
c0103447	obj/kernel.asm	/^c0103447:	68 d8 00 00 00       	push   $0xd8$/;"	l
c010344c	obj/kernel.asm	/^c010344c:	e9 d4 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103451	obj/kernel.asm	/^c0103451 <vector217>:$/;"	l
c0103451	obj/kernel.asm	/^c0103451:	6a 00                	push   $0x0$/;"	l
c0103453	obj/kernel.asm	/^c0103453:	68 d9 00 00 00       	push   $0xd9$/;"	l
c0103458	obj/kernel.asm	/^c0103458:	e9 c8 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010345d	obj/kernel.asm	/^c010345d <vector218>:$/;"	l
c010345d	obj/kernel.asm	/^c010345d:	6a 00                	push   $0x0$/;"	l
c010345f	obj/kernel.asm	/^c010345f:	68 da 00 00 00       	push   $0xda$/;"	l
c0103464	obj/kernel.asm	/^c0103464:	e9 bc 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103469	obj/kernel.asm	/^c0103469 <vector219>:$/;"	l
c0103469	obj/kernel.asm	/^c0103469:	6a 00                	push   $0x0$/;"	l
c010346b	obj/kernel.asm	/^c010346b:	68 db 00 00 00       	push   $0xdb$/;"	l
c0103470	obj/kernel.asm	/^c0103470:	e9 b0 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103475	obj/kernel.asm	/^c0103475 <vector220>:$/;"	l
c0103475	obj/kernel.asm	/^c0103475:	6a 00                	push   $0x0$/;"	l
c0103477	obj/kernel.asm	/^c0103477:	68 dc 00 00 00       	push   $0xdc$/;"	l
c010347c	obj/kernel.asm	/^c010347c:	e9 a4 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103481	obj/kernel.asm	/^c0103481 <vector221>:$/;"	l
c0103481	obj/kernel.asm	/^c0103481:	6a 00                	push   $0x0$/;"	l
c0103483	obj/kernel.asm	/^c0103483:	68 dd 00 00 00       	push   $0xdd$/;"	l
c0103488	obj/kernel.asm	/^c0103488:	e9 98 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010348d	obj/kernel.asm	/^c010348d <vector222>:$/;"	l
c010348d	obj/kernel.asm	/^c010348d:	6a 00                	push   $0x0$/;"	l
c010348f	obj/kernel.asm	/^c010348f:	68 de 00 00 00       	push   $0xde$/;"	l
c0103494	obj/kernel.asm	/^c0103494:	e9 8c 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103499	obj/kernel.asm	/^c0103499 <vector223>:$/;"	l
c0103499	obj/kernel.asm	/^c0103499:	6a 00                	push   $0x0$/;"	l
c010349b	obj/kernel.asm	/^c010349b:	68 df 00 00 00       	push   $0xdf$/;"	l
c01034a0	obj/kernel.asm	/^c01034a0:	e9 80 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01034a5	obj/kernel.asm	/^c01034a5 <vector224>:$/;"	l
c01034a5	obj/kernel.asm	/^c01034a5:	6a 00                	push   $0x0$/;"	l
c01034a7	obj/kernel.asm	/^c01034a7:	68 e0 00 00 00       	push   $0xe0$/;"	l
c01034ac	obj/kernel.asm	/^c01034ac:	e9 74 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01034b1	obj/kernel.asm	/^c01034b1 <vector225>:$/;"	l
c01034b1	obj/kernel.asm	/^c01034b1:	6a 00                	push   $0x0$/;"	l
c01034b3	obj/kernel.asm	/^c01034b3:	68 e1 00 00 00       	push   $0xe1$/;"	l
c01034b8	obj/kernel.asm	/^c01034b8:	e9 68 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01034bd	obj/kernel.asm	/^c01034bd <vector226>:$/;"	l
c01034bd	obj/kernel.asm	/^c01034bd:	6a 00                	push   $0x0$/;"	l
c01034bf	obj/kernel.asm	/^c01034bf:	68 e2 00 00 00       	push   $0xe2$/;"	l
c01034c4	obj/kernel.asm	/^c01034c4:	e9 5c 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01034c9	obj/kernel.asm	/^c01034c9 <vector227>:$/;"	l
c01034c9	obj/kernel.asm	/^c01034c9:	6a 00                	push   $0x0$/;"	l
c01034cb	obj/kernel.asm	/^c01034cb:	68 e3 00 00 00       	push   $0xe3$/;"	l
c01034d0	obj/kernel.asm	/^c01034d0:	e9 50 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01034d5	obj/kernel.asm	/^c01034d5 <vector228>:$/;"	l
c01034d5	obj/kernel.asm	/^c01034d5:	6a 00                	push   $0x0$/;"	l
c01034d7	obj/kernel.asm	/^c01034d7:	68 e4 00 00 00       	push   $0xe4$/;"	l
c01034dc	obj/kernel.asm	/^c01034dc:	e9 44 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01034e1	obj/kernel.asm	/^c01034e1 <vector229>:$/;"	l
c01034e1	obj/kernel.asm	/^c01034e1:	6a 00                	push   $0x0$/;"	l
c01034e3	obj/kernel.asm	/^c01034e3:	68 e5 00 00 00       	push   $0xe5$/;"	l
c01034e8	obj/kernel.asm	/^c01034e8:	e9 38 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01034ed	obj/kernel.asm	/^c01034ed <vector230>:$/;"	l
c01034ed	obj/kernel.asm	/^c01034ed:	6a 00                	push   $0x0$/;"	l
c01034ef	obj/kernel.asm	/^c01034ef:	68 e6 00 00 00       	push   $0xe6$/;"	l
c01034f4	obj/kernel.asm	/^c01034f4:	e9 2c 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01034f9	obj/kernel.asm	/^c01034f9 <vector231>:$/;"	l
c01034f9	obj/kernel.asm	/^c01034f9:	6a 00                	push   $0x0$/;"	l
c01034fb	obj/kernel.asm	/^c01034fb:	68 e7 00 00 00       	push   $0xe7$/;"	l
c0103500	obj/kernel.asm	/^c0103500:	e9 20 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103505	obj/kernel.asm	/^c0103505 <vector232>:$/;"	l
c0103505	obj/kernel.asm	/^c0103505:	6a 00                	push   $0x0$/;"	l
c0103507	obj/kernel.asm	/^c0103507:	68 e8 00 00 00       	push   $0xe8$/;"	l
c010350c	obj/kernel.asm	/^c010350c:	e9 14 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103511	obj/kernel.asm	/^c0103511 <vector233>:$/;"	l
c0103511	obj/kernel.asm	/^c0103511:	6a 00                	push   $0x0$/;"	l
c0103513	obj/kernel.asm	/^c0103513:	68 e9 00 00 00       	push   $0xe9$/;"	l
c0103518	obj/kernel.asm	/^c0103518:	e9 08 01 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010351d	obj/kernel.asm	/^c010351d <vector234>:$/;"	l
c010351d	obj/kernel.asm	/^c010351d:	6a 00                	push   $0x0$/;"	l
c010351f	obj/kernel.asm	/^c010351f:	68 ea 00 00 00       	push   $0xea$/;"	l
c0103524	obj/kernel.asm	/^c0103524:	e9 fc 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103529	obj/kernel.asm	/^c0103529 <vector235>:$/;"	l
c0103529	obj/kernel.asm	/^c0103529:	6a 00                	push   $0x0$/;"	l
c010352b	obj/kernel.asm	/^c010352b:	68 eb 00 00 00       	push   $0xeb$/;"	l
c0103530	obj/kernel.asm	/^c0103530:	e9 f0 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103535	obj/kernel.asm	/^c0103535 <vector236>:$/;"	l
c0103535	obj/kernel.asm	/^c0103535:	6a 00                	push   $0x0$/;"	l
c0103537	obj/kernel.asm	/^c0103537:	68 ec 00 00 00       	push   $0xec$/;"	l
c010353c	obj/kernel.asm	/^c010353c:	e9 e4 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103541	obj/kernel.asm	/^c0103541 <vector237>:$/;"	l
c0103541	obj/kernel.asm	/^c0103541:	6a 00                	push   $0x0$/;"	l
c0103543	obj/kernel.asm	/^c0103543:	68 ed 00 00 00       	push   $0xed$/;"	l
c0103548	obj/kernel.asm	/^c0103548:	e9 d8 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010354d	obj/kernel.asm	/^c010354d <vector238>:$/;"	l
c010354d	obj/kernel.asm	/^c010354d:	6a 00                	push   $0x0$/;"	l
c010354f	obj/kernel.asm	/^c010354f:	68 ee 00 00 00       	push   $0xee$/;"	l
c0103554	obj/kernel.asm	/^c0103554:	e9 cc 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103559	obj/kernel.asm	/^c0103559 <vector239>:$/;"	l
c0103559	obj/kernel.asm	/^c0103559:	6a 00                	push   $0x0$/;"	l
c010355b	obj/kernel.asm	/^c010355b:	68 ef 00 00 00       	push   $0xef$/;"	l
c0103560	obj/kernel.asm	/^c0103560:	e9 c0 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103565	obj/kernel.asm	/^c0103565 <vector240>:$/;"	l
c0103565	obj/kernel.asm	/^c0103565:	6a 00                	push   $0x0$/;"	l
c0103567	obj/kernel.asm	/^c0103567:	68 f0 00 00 00       	push   $0xf0$/;"	l
c010356c	obj/kernel.asm	/^c010356c:	e9 b4 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103571	obj/kernel.asm	/^c0103571 <vector241>:$/;"	l
c0103571	obj/kernel.asm	/^c0103571:	6a 00                	push   $0x0$/;"	l
c0103573	obj/kernel.asm	/^c0103573:	68 f1 00 00 00       	push   $0xf1$/;"	l
c0103578	obj/kernel.asm	/^c0103578:	e9 a8 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010357d	obj/kernel.asm	/^c010357d <vector242>:$/;"	l
c010357d	obj/kernel.asm	/^c010357d:	6a 00                	push   $0x0$/;"	l
c010357f	obj/kernel.asm	/^c010357f:	68 f2 00 00 00       	push   $0xf2$/;"	l
c0103584	obj/kernel.asm	/^c0103584:	e9 9c 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103589	obj/kernel.asm	/^c0103589 <vector243>:$/;"	l
c0103589	obj/kernel.asm	/^c0103589:	6a 00                	push   $0x0$/;"	l
c010358b	obj/kernel.asm	/^c010358b:	68 f3 00 00 00       	push   $0xf3$/;"	l
c0103590	obj/kernel.asm	/^c0103590:	e9 90 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103595	obj/kernel.asm	/^c0103595 <vector244>:$/;"	l
c0103595	obj/kernel.asm	/^c0103595:	6a 00                	push   $0x0$/;"	l
c0103597	obj/kernel.asm	/^c0103597:	68 f4 00 00 00       	push   $0xf4$/;"	l
c010359c	obj/kernel.asm	/^c010359c:	e9 84 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01035a1	obj/kernel.asm	/^c01035a1 <vector245>:$/;"	l
c01035a1	obj/kernel.asm	/^c01035a1:	6a 00                	push   $0x0$/;"	l
c01035a3	obj/kernel.asm	/^c01035a3:	68 f5 00 00 00       	push   $0xf5$/;"	l
c01035a8	obj/kernel.asm	/^c01035a8:	e9 78 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01035ad	obj/kernel.asm	/^c01035ad <vector246>:$/;"	l
c01035ad	obj/kernel.asm	/^c01035ad:	6a 00                	push   $0x0$/;"	l
c01035af	obj/kernel.asm	/^c01035af:	68 f6 00 00 00       	push   $0xf6$/;"	l
c01035b4	obj/kernel.asm	/^c01035b4:	e9 6c 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01035b9	obj/kernel.asm	/^c01035b9 <vector247>:$/;"	l
c01035b9	obj/kernel.asm	/^c01035b9:	6a 00                	push   $0x0$/;"	l
c01035bb	obj/kernel.asm	/^c01035bb:	68 f7 00 00 00       	push   $0xf7$/;"	l
c01035c0	obj/kernel.asm	/^c01035c0:	e9 60 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01035c5	obj/kernel.asm	/^c01035c5 <vector248>:$/;"	l
c01035c5	obj/kernel.asm	/^c01035c5:	6a 00                	push   $0x0$/;"	l
c01035c7	obj/kernel.asm	/^c01035c7:	68 f8 00 00 00       	push   $0xf8$/;"	l
c01035cc	obj/kernel.asm	/^c01035cc:	e9 54 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01035d1	obj/kernel.asm	/^c01035d1 <vector249>:$/;"	l
c01035d1	obj/kernel.asm	/^c01035d1:	6a 00                	push   $0x0$/;"	l
c01035d3	obj/kernel.asm	/^c01035d3:	68 f9 00 00 00       	push   $0xf9$/;"	l
c01035d8	obj/kernel.asm	/^c01035d8:	e9 48 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01035dd	obj/kernel.asm	/^c01035dd <vector250>:$/;"	l
c01035dd	obj/kernel.asm	/^c01035dd:	6a 00                	push   $0x0$/;"	l
c01035df	obj/kernel.asm	/^c01035df:	68 fa 00 00 00       	push   $0xfa$/;"	l
c01035e4	obj/kernel.asm	/^c01035e4:	e9 3c 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01035e9	obj/kernel.asm	/^c01035e9 <vector251>:$/;"	l
c01035e9	obj/kernel.asm	/^c01035e9:	6a 00                	push   $0x0$/;"	l
c01035eb	obj/kernel.asm	/^c01035eb:	68 fb 00 00 00       	push   $0xfb$/;"	l
c01035f0	obj/kernel.asm	/^c01035f0:	e9 30 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c01035f5	obj/kernel.asm	/^c01035f5 <vector252>:$/;"	l
c01035f5	obj/kernel.asm	/^c01035f5:	6a 00                	push   $0x0$/;"	l
c01035f7	obj/kernel.asm	/^c01035f7:	68 fc 00 00 00       	push   $0xfc$/;"	l
c01035fc	obj/kernel.asm	/^c01035fc:	e9 24 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103601	obj/kernel.asm	/^c0103601 <vector253>:$/;"	l
c0103601	obj/kernel.asm	/^c0103601:	6a 00                	push   $0x0$/;"	l
c0103603	obj/kernel.asm	/^c0103603:	68 fd 00 00 00       	push   $0xfd$/;"	l
c0103608	obj/kernel.asm	/^c0103608:	e9 18 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c010360d	obj/kernel.asm	/^c010360d <vector254>:$/;"	l
c010360d	obj/kernel.asm	/^c010360d:	6a 00                	push   $0x0$/;"	l
c010360f	obj/kernel.asm	/^c010360f:	68 fe 00 00 00       	push   $0xfe$/;"	l
c0103614	obj/kernel.asm	/^c0103614:	e9 0c 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103619	obj/kernel.asm	/^c0103619 <vector255>:$/;"	l
c0103619	obj/kernel.asm	/^c0103619:	6a 00                	push   $0x0$/;"	l
c010361b	obj/kernel.asm	/^c010361b:	68 ff 00 00 00       	push   $0xff$/;"	l
c0103620	obj/kernel.asm	/^c0103620:	e9 00 00 00 00       	jmp    c0103625 <__alltraps>$/;"	l
c0103625	obj/kernel.asm	/^c0103625 <__alltraps>:$/;"	l
c0103625	obj/kernel.asm	/^c0103625:	1e                   	push   %ds$/;"	l
c0103626	obj/kernel.asm	/^c0103626:	06                   	push   %es$/;"	l
c0103627	obj/kernel.asm	/^c0103627:	0f a0                	push   %fs$/;"	l
c0103629	obj/kernel.asm	/^c0103629:	0f a8                	push   %gs$/;"	l
c010362b	obj/kernel.asm	/^c010362b:	60                   	pusha  $/;"	l
c010362c	obj/kernel.asm	/^c010362c:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c0103631	obj/kernel.asm	/^c0103631:	8e d8                	mov    %eax,%ds$/;"	l
c0103633	obj/kernel.asm	/^c0103633:	8e c0                	mov    %eax,%es$/;"	l
c0103635	obj/kernel.asm	/^c0103635:	54                   	push   %esp$/;"	l
c0103636	obj/kernel.asm	/^c0103636:	e8 e6 f4 ff ff       	call   c0102b21 <trap>$/;"	l
c010363b	obj/kernel.asm	/^c010363b:	5c                   	pop    %esp$/;"	l
c010363c	obj/kernel.asm	/^c010363c <__trapret>:$/;"	l
c010363c	obj/kernel.asm	/^c010363c:	61                   	popa   $/;"	l
c010363d	obj/kernel.asm	/^c010363d:	0f a9                	pop    %gs$/;"	l
c010363f	obj/kernel.asm	/^c010363f:	0f a1                	pop    %fs$/;"	l
c0103641	obj/kernel.asm	/^c0103641:	07                   	pop    %es$/;"	l
c0103642	obj/kernel.asm	/^c0103642:	1f                   	pop    %ds$/;"	l
c0103643	obj/kernel.asm	/^c0103643:	83 c4 08             	add    $0x8,%esp$/;"	l
c0103646	obj/kernel.asm	/^c0103646:	cf                   	iret   $/;"	l
c0103647	obj/kernel.asm	/^c0103647 <forkrets>:$/;"	l
c0103647	obj/kernel.asm	/^c0103647:	8b 64 24 04          	mov    0x4(%esp),%esp$/;"	l
c010364b	obj/kernel.asm	/^c010364b:	e9 ec ff ff ff       	jmp    c010363c <__trapret>$/;"	l
c0103650	obj/kernel.asm	/^c0103650 <page2ppn>:$/;"	l
c0103650	obj/kernel.asm	/^c0103650:	55                   	push   %ebp$/;"	l
c0103651	obj/kernel.asm	/^c0103651:	89 e5                	mov    %esp,%ebp$/;"	l
c0103653	obj/kernel.asm	/^c0103653:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103656	obj/kernel.asm	/^c0103656:	8b 15 18 0f 1b c0    	mov    0xc01b0f18,%edx$/;"	l
c010365c	obj/kernel.asm	/^c010365c:	29 d0                	sub    %edx,%eax$/;"	l
c010365e	obj/kernel.asm	/^c010365e:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0103661	obj/kernel.asm	/^c0103661:	5d                   	pop    %ebp$/;"	l
c0103662	obj/kernel.asm	/^c0103662:	c3                   	ret    $/;"	l
c0103663	obj/kernel.asm	/^c0103663 <page2pa>:$/;"	l
c0103663	obj/kernel.asm	/^c0103663:	55                   	push   %ebp$/;"	l
c0103664	obj/kernel.asm	/^c0103664:	89 e5                	mov    %esp,%ebp$/;"	l
c0103666	obj/kernel.asm	/^c0103666:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0103669	obj/kernel.asm	/^c0103669:	e8 e2 ff ff ff       	call   c0103650 <page2ppn>$/;"	l
c010366e	obj/kernel.asm	/^c010366e:	83 c4 04             	add    $0x4,%esp$/;"	l
c0103671	obj/kernel.asm	/^c0103671:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0103674	obj/kernel.asm	/^c0103674:	c9                   	leave  $/;"	l
c0103675	obj/kernel.asm	/^c0103675:	c3                   	ret    $/;"	l
c0103676	obj/kernel.asm	/^c0103676 <pa2page>:$/;"	l
c0103676	obj/kernel.asm	/^c0103676:	55                   	push   %ebp$/;"	l
c0103677	obj/kernel.asm	/^c0103677:	89 e5                	mov    %esp,%ebp$/;"	l
c0103679	obj/kernel.asm	/^c0103679:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010367c	obj/kernel.asm	/^c010367c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010367f	obj/kernel.asm	/^c010367f:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0103682	obj/kernel.asm	/^c0103682:	89 c2                	mov    %eax,%edx$/;"	l
c0103684	obj/kernel.asm	/^c0103684:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c0103689	obj/kernel.asm	/^c0103689:	39 c2                	cmp    %eax,%edx$/;"	l
c010368b	obj/kernel.asm	/^c010368b:	72 14                	jb     c01036a1 <pa2page+0x2b>$/;"	l
c010368d	obj/kernel.asm	/^c010368d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103690	obj/kernel.asm	/^c0103690:	68 50 c4 10 c0       	push   $0xc010c450$/;"	l
c0103695	obj/kernel.asm	/^c0103695:	6a 5e                	push   $0x5e$/;"	l
c0103697	obj/kernel.asm	/^c0103697:	68 6f c4 10 c0       	push   $0xc010c46f$/;"	l
c010369c	obj/kernel.asm	/^c010369c:	e8 3e cd ff ff       	call   c01003df <__panic>$/;"	l
c01036a1	obj/kernel.asm	/^c01036a1:	a1 18 0f 1b c0       	mov    0xc01b0f18,%eax$/;"	l
c01036a6	obj/kernel.asm	/^c01036a6:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01036a9	obj/kernel.asm	/^c01036a9:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c01036ac	obj/kernel.asm	/^c01036ac:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c01036af	obj/kernel.asm	/^c01036af:	01 d0                	add    %edx,%eax$/;"	l
c01036b1	obj/kernel.asm	/^c01036b1:	c9                   	leave  $/;"	l
c01036b2	obj/kernel.asm	/^c01036b2:	c3                   	ret    $/;"	l
c01036b3	obj/kernel.asm	/^c01036b3 <page2kva>:$/;"	l
c01036b3	obj/kernel.asm	/^c01036b3:	55                   	push   %ebp$/;"	l
c01036b4	obj/kernel.asm	/^c01036b4:	89 e5                	mov    %esp,%ebp$/;"	l
c01036b6	obj/kernel.asm	/^c01036b6:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01036b9	obj/kernel.asm	/^c01036b9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01036bc	obj/kernel.asm	/^c01036bc:	e8 a2 ff ff ff       	call   c0103663 <page2pa>$/;"	l
c01036c1	obj/kernel.asm	/^c01036c1:	83 c4 04             	add    $0x4,%esp$/;"	l
c01036c4	obj/kernel.asm	/^c01036c4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01036c7	obj/kernel.asm	/^c01036c7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01036ca	obj/kernel.asm	/^c01036ca:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01036cd	obj/kernel.asm	/^c01036cd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01036d0	obj/kernel.asm	/^c01036d0:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c01036d5	obj/kernel.asm	/^c01036d5:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c01036d8	obj/kernel.asm	/^c01036d8:	72 14                	jb     c01036ee <page2kva+0x3b>$/;"	l
c01036da	obj/kernel.asm	/^c01036da:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01036dd	obj/kernel.asm	/^c01036dd:	68 80 c4 10 c0       	push   $0xc010c480$/;"	l
c01036e2	obj/kernel.asm	/^c01036e2:	6a 65                	push   $0x65$/;"	l
c01036e4	obj/kernel.asm	/^c01036e4:	68 6f c4 10 c0       	push   $0xc010c46f$/;"	l
c01036e9	obj/kernel.asm	/^c01036e9:	e8 f1 cc ff ff       	call   c01003df <__panic>$/;"	l
c01036ee	obj/kernel.asm	/^c01036ee:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01036f1	obj/kernel.asm	/^c01036f1:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c01036f6	obj/kernel.asm	/^c01036f6:	c9                   	leave  $/;"	l
c01036f7	obj/kernel.asm	/^c01036f7:	c3                   	ret    $/;"	l
c01036f8	obj/kernel.asm	/^c01036f8 <pte2page>:$/;"	l
c01036f8	obj/kernel.asm	/^c01036f8:	55                   	push   %ebp$/;"	l
c01036f9	obj/kernel.asm	/^c01036f9:	89 e5                	mov    %esp,%ebp$/;"	l
c01036fb	obj/kernel.asm	/^c01036fb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01036fe	obj/kernel.asm	/^c01036fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103701	obj/kernel.asm	/^c0103701:	83 e0 01             	and    $0x1,%eax$/;"	l
c0103704	obj/kernel.asm	/^c0103704:	85 c0                	test   %eax,%eax$/;"	l
c0103706	obj/kernel.asm	/^c0103706:	75 14                	jne    c010371c <pte2page+0x24>$/;"	l
c0103708	obj/kernel.asm	/^c0103708:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010370b	obj/kernel.asm	/^c010370b:	68 a4 c4 10 c0       	push   $0xc010c4a4$/;"	l
c0103710	obj/kernel.asm	/^c0103710:	6a 70                	push   $0x70$/;"	l
c0103712	obj/kernel.asm	/^c0103712:	68 6f c4 10 c0       	push   $0xc010c46f$/;"	l
c0103717	obj/kernel.asm	/^c0103717:	e8 c3 cc ff ff       	call   c01003df <__panic>$/;"	l
c010371c	obj/kernel.asm	/^c010371c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010371f	obj/kernel.asm	/^c010371f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0103724	obj/kernel.asm	/^c0103724:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103727	obj/kernel.asm	/^c0103727:	50                   	push   %eax$/;"	l
c0103728	obj/kernel.asm	/^c0103728:	e8 49 ff ff ff       	call   c0103676 <pa2page>$/;"	l
c010372d	obj/kernel.asm	/^c010372d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103730	obj/kernel.asm	/^c0103730:	c9                   	leave  $/;"	l
c0103731	obj/kernel.asm	/^c0103731:	c3                   	ret    $/;"	l
c0103732	obj/kernel.asm	/^c0103732 <pde2page>:$/;"	l
c0103732	obj/kernel.asm	/^c0103732:	55                   	push   %ebp$/;"	l
c0103733	obj/kernel.asm	/^c0103733:	89 e5                	mov    %esp,%ebp$/;"	l
c0103735	obj/kernel.asm	/^c0103735:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103738	obj/kernel.asm	/^c0103738:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010373b	obj/kernel.asm	/^c010373b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0103740	obj/kernel.asm	/^c0103740:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103743	obj/kernel.asm	/^c0103743:	50                   	push   %eax$/;"	l
c0103744	obj/kernel.asm	/^c0103744:	e8 2d ff ff ff       	call   c0103676 <pa2page>$/;"	l
c0103749	obj/kernel.asm	/^c0103749:	83 c4 10             	add    $0x10,%esp$/;"	l
c010374c	obj/kernel.asm	/^c010374c:	c9                   	leave  $/;"	l
c010374d	obj/kernel.asm	/^c010374d:	c3                   	ret    $/;"	l
c010374e	obj/kernel.asm	/^c010374e <page_ref>:$/;"	l
c010374e	obj/kernel.asm	/^c010374e:	55                   	push   %ebp$/;"	l
c010374f	obj/kernel.asm	/^c010374f:	89 e5                	mov    %esp,%ebp$/;"	l
c0103751	obj/kernel.asm	/^c0103751:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103754	obj/kernel.asm	/^c0103754:	8b 00                	mov    (%eax),%eax$/;"	l
c0103756	obj/kernel.asm	/^c0103756:	5d                   	pop    %ebp$/;"	l
c0103757	obj/kernel.asm	/^c0103757:	c3                   	ret    $/;"	l
c0103758	obj/kernel.asm	/^c0103758 <set_page_ref>:$/;"	l
c0103758	obj/kernel.asm	/^c0103758:	55                   	push   %ebp$/;"	l
c0103759	obj/kernel.asm	/^c0103759:	89 e5                	mov    %esp,%ebp$/;"	l
c010375b	obj/kernel.asm	/^c010375b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010375e	obj/kernel.asm	/^c010375e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0103761	obj/kernel.asm	/^c0103761:	89 10                	mov    %edx,(%eax)$/;"	l
c0103763	obj/kernel.asm	/^c0103763:	5d                   	pop    %ebp$/;"	l
c0103764	obj/kernel.asm	/^c0103764:	c3                   	ret    $/;"	l
c0103765	obj/kernel.asm	/^c0103765 <page_ref_inc>:$/;"	l
c0103765	obj/kernel.asm	/^c0103765:	55                   	push   %ebp$/;"	l
c0103766	obj/kernel.asm	/^c0103766:	89 e5                	mov    %esp,%ebp$/;"	l
c0103768	obj/kernel.asm	/^c0103768:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010376b	obj/kernel.asm	/^c010376b:	8b 00                	mov    (%eax),%eax$/;"	l
c010376d	obj/kernel.asm	/^c010376d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0103770	obj/kernel.asm	/^c0103770:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103773	obj/kernel.asm	/^c0103773:	89 10                	mov    %edx,(%eax)$/;"	l
c0103775	obj/kernel.asm	/^c0103775:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103778	obj/kernel.asm	/^c0103778:	8b 00                	mov    (%eax),%eax$/;"	l
c010377a	obj/kernel.asm	/^c010377a:	5d                   	pop    %ebp$/;"	l
c010377b	obj/kernel.asm	/^c010377b:	c3                   	ret    $/;"	l
c010377c	obj/kernel.asm	/^c010377c <page_ref_dec>:$/;"	l
c010377c	obj/kernel.asm	/^c010377c:	55                   	push   %ebp$/;"	l
c010377d	obj/kernel.asm	/^c010377d:	89 e5                	mov    %esp,%ebp$/;"	l
c010377f	obj/kernel.asm	/^c010377f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103782	obj/kernel.asm	/^c0103782:	8b 00                	mov    (%eax),%eax$/;"	l
c0103784	obj/kernel.asm	/^c0103784:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0103787	obj/kernel.asm	/^c0103787:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010378a	obj/kernel.asm	/^c010378a:	89 10                	mov    %edx,(%eax)$/;"	l
c010378c	obj/kernel.asm	/^c010378c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010378f	obj/kernel.asm	/^c010378f:	8b 00                	mov    (%eax),%eax$/;"	l
c0103791	obj/kernel.asm	/^c0103791:	5d                   	pop    %ebp$/;"	l
c0103792	obj/kernel.asm	/^c0103792:	c3                   	ret    $/;"	l
c0103793	obj/kernel.asm	/^c0103793 <__intr_save>:$/;"	l
c0103793	obj/kernel.asm	/^c0103793:	55                   	push   %ebp$/;"	l
c0103794	obj/kernel.asm	/^c0103794:	89 e5                	mov    %esp,%ebp$/;"	l
c0103796	obj/kernel.asm	/^c0103796:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103799	obj/kernel.asm	/^c0103799:	9c                   	pushf  $/;"	l
c010379a	obj/kernel.asm	/^c010379a:	58                   	pop    %eax$/;"	l
c010379b	obj/kernel.asm	/^c010379b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010379e	obj/kernel.asm	/^c010379e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01037a1	obj/kernel.asm	/^c01037a1:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c01037a6	obj/kernel.asm	/^c01037a6:	85 c0                	test   %eax,%eax$/;"	l
c01037a8	obj/kernel.asm	/^c01037a8:	74 0c                	je     c01037b6 <__intr_save+0x23>$/;"	l
c01037aa	obj/kernel.asm	/^c01037aa:	e8 f3 e8 ff ff       	call   c01020a2 <intr_disable>$/;"	l
c01037af	obj/kernel.asm	/^c01037af:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01037b4	obj/kernel.asm	/^c01037b4:	eb 05                	jmp    c01037bb <__intr_save+0x28>$/;"	l
c01037b6	obj/kernel.asm	/^c01037b6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01037bb	obj/kernel.asm	/^c01037bb:	c9                   	leave  $/;"	l
c01037bc	obj/kernel.asm	/^c01037bc:	c3                   	ret    $/;"	l
c01037bd	obj/kernel.asm	/^c01037bd <__intr_restore>:$/;"	l
c01037bd	obj/kernel.asm	/^c01037bd:	55                   	push   %ebp$/;"	l
c01037be	obj/kernel.asm	/^c01037be:	89 e5                	mov    %esp,%ebp$/;"	l
c01037c0	obj/kernel.asm	/^c01037c0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01037c3	obj/kernel.asm	/^c01037c3:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01037c7	obj/kernel.asm	/^c01037c7:	74 05                	je     c01037ce <__intr_restore+0x11>$/;"	l
c01037c9	obj/kernel.asm	/^c01037c9:	e8 ce e8 ff ff       	call   c010209c <intr_enable>$/;"	l
c01037ce	obj/kernel.asm	/^c01037ce:	c9                   	leave  $/;"	l
c01037cf	obj/kernel.asm	/^c01037cf:	c3                   	ret    $/;"	l
c01037d0	obj/kernel.asm	/^c01037d0 <lgdt>:$/;"	l
c01037d0	obj/kernel.asm	/^c01037d0:	55                   	push   %ebp$/;"	l
c01037d1	obj/kernel.asm	/^c01037d1:	89 e5                	mov    %esp,%ebp$/;"	l
c01037d3	obj/kernel.asm	/^c01037d3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01037d6	obj/kernel.asm	/^c01037d6:	0f 01 10             	lgdtl  (%eax)$/;"	l
c01037d9	obj/kernel.asm	/^c01037d9:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c01037de	obj/kernel.asm	/^c01037de:	8e e8                	mov    %eax,%gs$/;"	l
c01037e0	obj/kernel.asm	/^c01037e0:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c01037e5	obj/kernel.asm	/^c01037e5:	8e e0                	mov    %eax,%fs$/;"	l
c01037e7	obj/kernel.asm	/^c01037e7:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c01037ec	obj/kernel.asm	/^c01037ec:	8e c0                	mov    %eax,%es$/;"	l
c01037ee	obj/kernel.asm	/^c01037ee:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c01037f3	obj/kernel.asm	/^c01037f3:	8e d8                	mov    %eax,%ds$/;"	l
c01037f5	obj/kernel.asm	/^c01037f5:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c01037fa	obj/kernel.asm	/^c01037fa:	8e d0                	mov    %eax,%ss$/;"	l
c01037fc	obj/kernel.asm	/^c01037fc:	ea 03 38 10 c0 08 00 	ljmp   $0x8,$0xc0103803$/;"	l
c0103803	obj/kernel.asm	/^c0103803:	5d                   	pop    %ebp$/;"	l
c0103804	obj/kernel.asm	/^c0103804:	c3                   	ret    $/;"	l
c0103805	obj/kernel.asm	/^c0103805 <load_esp0>:$/;"	l
c0103805	obj/kernel.asm	/^c0103805:	55                   	push   %ebp$/;"	l
c0103806	obj/kernel.asm	/^c0103806:	89 e5                	mov    %esp,%ebp$/;"	l
c0103808	obj/kernel.asm	/^c0103808:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010380b	obj/kernel.asm	/^c010380b:	a3 c4 ed 1a c0       	mov    %eax,0xc01aedc4$/;"	l
c0103810	obj/kernel.asm	/^c0103810:	5d                   	pop    %ebp$/;"	l
c0103811	obj/kernel.asm	/^c0103811:	c3                   	ret    $/;"	l
c0103812	obj/kernel.asm	/^c0103812 <gdt_init>:$/;"	l
c0103812	obj/kernel.asm	/^c0103812:	55                   	push   %ebp$/;"	l
c0103813	obj/kernel.asm	/^c0103813:	89 e5                	mov    %esp,%ebp$/;"	l
c0103815	obj/kernel.asm	/^c0103815:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0103818	obj/kernel.asm	/^c0103818:	b8 00 c0 12 c0       	mov    $0xc012c000,%eax$/;"	l
c010381d	obj/kernel.asm	/^c010381d:	50                   	push   %eax$/;"	l
c010381e	obj/kernel.asm	/^c010381e:	e8 e2 ff ff ff       	call   c0103805 <load_esp0>$/;"	l
c0103823	obj/kernel.asm	/^c0103823:	83 c4 04             	add    $0x4,%esp$/;"	l
c0103826	obj/kernel.asm	/^c0103826:	66 c7 05 c8 ed 1a c0 	movw   $0x10,0xc01aedc8$/;"	l
c010382d	obj/kernel.asm	/^c010382d:	10 00 $/;"	l
c010382f	obj/kernel.asm	/^c010382f:	66 c7 05 88 ca 12 c0 	movw   $0x68,0xc012ca88$/;"	l
c0103836	obj/kernel.asm	/^c0103836:	68 00 $/;"	l
c0103838	obj/kernel.asm	/^c0103838:	b8 c0 ed 1a c0       	mov    $0xc01aedc0,%eax$/;"	l
c010383d	obj/kernel.asm	/^c010383d:	66 a3 8a ca 12 c0    	mov    %ax,0xc012ca8a$/;"	l
c0103843	obj/kernel.asm	/^c0103843:	b8 c0 ed 1a c0       	mov    $0xc01aedc0,%eax$/;"	l
c0103848	obj/kernel.asm	/^c0103848:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010384b	obj/kernel.asm	/^c010384b:	a2 8c ca 12 c0       	mov    %al,0xc012ca8c$/;"	l
c0103850	obj/kernel.asm	/^c0103850:	0f b6 05 8d ca 12 c0 	movzbl 0xc012ca8d,%eax$/;"	l
c0103857	obj/kernel.asm	/^c0103857:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c010385a	obj/kernel.asm	/^c010385a:	83 c8 09             	or     $0x9,%eax$/;"	l
c010385d	obj/kernel.asm	/^c010385d:	a2 8d ca 12 c0       	mov    %al,0xc012ca8d$/;"	l
c0103862	obj/kernel.asm	/^c0103862:	0f b6 05 8d ca 12 c0 	movzbl 0xc012ca8d,%eax$/;"	l
c0103869	obj/kernel.asm	/^c0103869:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c010386c	obj/kernel.asm	/^c010386c:	a2 8d ca 12 c0       	mov    %al,0xc012ca8d$/;"	l
c0103871	obj/kernel.asm	/^c0103871:	0f b6 05 8d ca 12 c0 	movzbl 0xc012ca8d,%eax$/;"	l
c0103878	obj/kernel.asm	/^c0103878:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
c010387b	obj/kernel.asm	/^c010387b:	a2 8d ca 12 c0       	mov    %al,0xc012ca8d$/;"	l
c0103880	obj/kernel.asm	/^c0103880:	0f b6 05 8d ca 12 c0 	movzbl 0xc012ca8d,%eax$/;"	l
c0103887	obj/kernel.asm	/^c0103887:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c010388a	obj/kernel.asm	/^c010388a:	a2 8d ca 12 c0       	mov    %al,0xc012ca8d$/;"	l
c010388f	obj/kernel.asm	/^c010388f:	0f b6 05 8e ca 12 c0 	movzbl 0xc012ca8e,%eax$/;"	l
c0103896	obj/kernel.asm	/^c0103896:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c0103899	obj/kernel.asm	/^c0103899:	a2 8e ca 12 c0       	mov    %al,0xc012ca8e$/;"	l
c010389e	obj/kernel.asm	/^c010389e:	0f b6 05 8e ca 12 c0 	movzbl 0xc012ca8e,%eax$/;"	l
c01038a5	obj/kernel.asm	/^c01038a5:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c01038a8	obj/kernel.asm	/^c01038a8:	a2 8e ca 12 c0       	mov    %al,0xc012ca8e$/;"	l
c01038ad	obj/kernel.asm	/^c01038ad:	0f b6 05 8e ca 12 c0 	movzbl 0xc012ca8e,%eax$/;"	l
c01038b4	obj/kernel.asm	/^c01038b4:	83 e0 df             	and    $0xffffffdf,%eax$/;"	l
c01038b7	obj/kernel.asm	/^c01038b7:	a2 8e ca 12 c0       	mov    %al,0xc012ca8e$/;"	l
c01038bc	obj/kernel.asm	/^c01038bc:	0f b6 05 8e ca 12 c0 	movzbl 0xc012ca8e,%eax$/;"	l
c01038c3	obj/kernel.asm	/^c01038c3:	83 c8 40             	or     $0x40,%eax$/;"	l
c01038c6	obj/kernel.asm	/^c01038c6:	a2 8e ca 12 c0       	mov    %al,0xc012ca8e$/;"	l
c01038cb	obj/kernel.asm	/^c01038cb:	0f b6 05 8e ca 12 c0 	movzbl 0xc012ca8e,%eax$/;"	l
c01038d2	obj/kernel.asm	/^c01038d2:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c01038d5	obj/kernel.asm	/^c01038d5:	a2 8e ca 12 c0       	mov    %al,0xc012ca8e$/;"	l
c01038da	obj/kernel.asm	/^c01038da:	b8 c0 ed 1a c0       	mov    $0xc01aedc0,%eax$/;"	l
c01038df	obj/kernel.asm	/^c01038df:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c01038e2	obj/kernel.asm	/^c01038e2:	a2 8f ca 12 c0       	mov    %al,0xc012ca8f$/;"	l
c01038e7	obj/kernel.asm	/^c01038e7:	68 90 ca 12 c0       	push   $0xc012ca90$/;"	l
c01038ec	obj/kernel.asm	/^c01038ec:	e8 df fe ff ff       	call   c01037d0 <lgdt>$/;"	l
c01038f1	obj/kernel.asm	/^c01038f1:	83 c4 04             	add    $0x4,%esp$/;"	l
c01038f4	obj/kernel.asm	/^c01038f4:	66 c7 45 fe 28 00    	movw   $0x28,-0x2(%ebp)$/;"	l
c01038fa	obj/kernel.asm	/^c01038fa:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c01038fe	obj/kernel.asm	/^c01038fe:	0f 00 d8             	ltr    %ax$/;"	l
c0103901	obj/kernel.asm	/^c0103901:	c9                   	leave  $/;"	l
c0103902	obj/kernel.asm	/^c0103902:	c3                   	ret    $/;"	l
c0103903	obj/kernel.asm	/^c0103903 <init_pmm_manager>:$/;"	l
c0103903	obj/kernel.asm	/^c0103903:	55                   	push   %ebp$/;"	l
c0103904	obj/kernel.asm	/^c0103904:	89 e5                	mov    %esp,%ebp$/;"	l
c0103906	obj/kernel.asm	/^c0103906:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103909	obj/kernel.asm	/^c0103909:	c7 05 10 0f 1b c0 a4 	movl   $0xc010daa4,0xc01b0f10$/;"	l
c0103910	obj/kernel.asm	/^c0103910:	da 10 c0 $/;"	d
c0103913	obj/kernel.asm	/^c0103913:	a1 10 0f 1b c0       	mov    0xc01b0f10,%eax$/;"	l
c0103918	obj/kernel.asm	/^c0103918:	8b 00                	mov    (%eax),%eax$/;"	l
c010391a	obj/kernel.asm	/^c010391a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010391d	obj/kernel.asm	/^c010391d:	50                   	push   %eax$/;"	l
c010391e	obj/kernel.asm	/^c010391e:	68 d0 c4 10 c0       	push   $0xc010c4d0$/;"	l
c0103923	obj/kernel.asm	/^c0103923:	e8 52 c9 ff ff       	call   c010027a <cprintf>$/;"	l
c0103928	obj/kernel.asm	/^c0103928:	83 c4 10             	add    $0x10,%esp$/;"	l
c010392b	obj/kernel.asm	/^c010392b:	a1 10 0f 1b c0       	mov    0xc01b0f10,%eax$/;"	l
c0103930	obj/kernel.asm	/^c0103930:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103933	obj/kernel.asm	/^c0103933:	ff d0                	call   *%eax$/;"	l
c0103935	obj/kernel.asm	/^c0103935:	c9                   	leave  $/;"	l
c0103936	obj/kernel.asm	/^c0103936:	c3                   	ret    $/;"	l
c0103937	obj/kernel.asm	/^c0103937 <init_memmap>:$/;"	l
c0103937	obj/kernel.asm	/^c0103937:	55                   	push   %ebp$/;"	l
c0103938	obj/kernel.asm	/^c0103938:	89 e5                	mov    %esp,%ebp$/;"	l
c010393a	obj/kernel.asm	/^c010393a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010393d	obj/kernel.asm	/^c010393d:	a1 10 0f 1b c0       	mov    0xc01b0f10,%eax$/;"	l
c0103942	obj/kernel.asm	/^c0103942:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0103945	obj/kernel.asm	/^c0103945:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103948	obj/kernel.asm	/^c0103948:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010394b	obj/kernel.asm	/^c010394b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010394e	obj/kernel.asm	/^c010394e:	ff d0                	call   *%eax$/;"	l
c0103950	obj/kernel.asm	/^c0103950:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103953	obj/kernel.asm	/^c0103953:	c9                   	leave  $/;"	l
c0103954	obj/kernel.asm	/^c0103954:	c3                   	ret    $/;"	l
c0103955	obj/kernel.asm	/^c0103955 <alloc_pages>:$/;"	l
c0103955	obj/kernel.asm	/^c0103955:	55                   	push   %ebp$/;"	l
c0103956	obj/kernel.asm	/^c0103956:	89 e5                	mov    %esp,%ebp$/;"	l
c0103958	obj/kernel.asm	/^c0103958:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010395b	obj/kernel.asm	/^c010395b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0103962	obj/kernel.asm	/^c0103962:	e8 2c fe ff ff       	call   c0103793 <__intr_save>$/;"	l
c0103967	obj/kernel.asm	/^c0103967:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010396a	obj/kernel.asm	/^c010396a:	a1 10 0f 1b c0       	mov    0xc01b0f10,%eax$/;"	l
c010396f	obj/kernel.asm	/^c010396f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0103972	obj/kernel.asm	/^c0103972:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103975	obj/kernel.asm	/^c0103975:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0103978	obj/kernel.asm	/^c0103978:	ff d0                	call   *%eax$/;"	l
c010397a	obj/kernel.asm	/^c010397a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010397d	obj/kernel.asm	/^c010397d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103980	obj/kernel.asm	/^c0103980:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103983	obj/kernel.asm	/^c0103983:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0103986	obj/kernel.asm	/^c0103986:	e8 32 fe ff ff       	call   c01037bd <__intr_restore>$/;"	l
c010398b	obj/kernel.asm	/^c010398b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010398e	obj/kernel.asm	/^c010398e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103992	obj/kernel.asm	/^c0103992:	75 28                	jne    c01039bc <alloc_pages+0x67>$/;"	l
c0103994	obj/kernel.asm	/^c0103994:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
c0103998	obj/kernel.asm	/^c0103998:	77 22                	ja     c01039bc <alloc_pages+0x67>$/;"	l
c010399a	obj/kernel.asm	/^c010399a:	a1 30 ee 1a c0       	mov    0xc01aee30,%eax$/;"	l
c010399f	obj/kernel.asm	/^c010399f:	85 c0                	test   %eax,%eax$/;"	l
c01039a1	obj/kernel.asm	/^c01039a1:	74 19                	je     c01039bc <alloc_pages+0x67>$/;"	l
c01039a3	obj/kernel.asm	/^c01039a3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01039a6	obj/kernel.asm	/^c01039a6:	a1 1c 0f 1b c0       	mov    0xc01b0f1c,%eax$/;"	l
c01039ab	obj/kernel.asm	/^c01039ab:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01039ae	obj/kernel.asm	/^c01039ae:	6a 00                	push   $0x0$/;"	l
c01039b0	obj/kernel.asm	/^c01039b0:	52                   	push   %edx$/;"	l
c01039b1	obj/kernel.asm	/^c01039b1:	50                   	push   %eax$/;"	l
c01039b2	obj/kernel.asm	/^c01039b2:	e8 e9 2a 00 00       	call   c01064a0 <swap_out>$/;"	l
c01039b7	obj/kernel.asm	/^c01039b7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01039ba	obj/kernel.asm	/^c01039ba:	eb a6                	jmp    c0103962 <alloc_pages+0xd>$/;"	l
c01039bc	obj/kernel.asm	/^c01039bc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01039bf	obj/kernel.asm	/^c01039bf:	c9                   	leave  $/;"	l
c01039c0	obj/kernel.asm	/^c01039c0:	c3                   	ret    $/;"	l
c01039c1	obj/kernel.asm	/^c01039c1 <free_pages>:$/;"	l
c01039c1	obj/kernel.asm	/^c01039c1:	55                   	push   %ebp$/;"	l
c01039c2	obj/kernel.asm	/^c01039c2:	89 e5                	mov    %esp,%ebp$/;"	l
c01039c4	obj/kernel.asm	/^c01039c4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01039c7	obj/kernel.asm	/^c01039c7:	e8 c7 fd ff ff       	call   c0103793 <__intr_save>$/;"	l
c01039cc	obj/kernel.asm	/^c01039cc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01039cf	obj/kernel.asm	/^c01039cf:	a1 10 0f 1b c0       	mov    0xc01b0f10,%eax$/;"	l
c01039d4	obj/kernel.asm	/^c01039d4:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01039d7	obj/kernel.asm	/^c01039d7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01039da	obj/kernel.asm	/^c01039da:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01039dd	obj/kernel.asm	/^c01039dd:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01039e0	obj/kernel.asm	/^c01039e0:	ff d0                	call   *%eax$/;"	l
c01039e2	obj/kernel.asm	/^c01039e2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01039e5	obj/kernel.asm	/^c01039e5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01039e8	obj/kernel.asm	/^c01039e8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01039eb	obj/kernel.asm	/^c01039eb:	e8 cd fd ff ff       	call   c01037bd <__intr_restore>$/;"	l
c01039f0	obj/kernel.asm	/^c01039f0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01039f3	obj/kernel.asm	/^c01039f3:	c9                   	leave  $/;"	l
c01039f4	obj/kernel.asm	/^c01039f4:	c3                   	ret    $/;"	l
c01039f5	obj/kernel.asm	/^c01039f5 <nr_free_pages>:$/;"	l
c01039f5	obj/kernel.asm	/^c01039f5:	55                   	push   %ebp$/;"	l
c01039f6	obj/kernel.asm	/^c01039f6:	89 e5                	mov    %esp,%ebp$/;"	l
c01039f8	obj/kernel.asm	/^c01039f8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01039fb	obj/kernel.asm	/^c01039fb:	e8 93 fd ff ff       	call   c0103793 <__intr_save>$/;"	l
c0103a00	obj/kernel.asm	/^c0103a00:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103a03	obj/kernel.asm	/^c0103a03:	a1 10 0f 1b c0       	mov    0xc01b0f10,%eax$/;"	l
c0103a08	obj/kernel.asm	/^c0103a08:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0103a0b	obj/kernel.asm	/^c0103a0b:	ff d0                	call   *%eax$/;"	l
c0103a0d	obj/kernel.asm	/^c0103a0d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103a10	obj/kernel.asm	/^c0103a10:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103a13	obj/kernel.asm	/^c0103a13:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0103a16	obj/kernel.asm	/^c0103a16:	e8 a2 fd ff ff       	call   c01037bd <__intr_restore>$/;"	l
c0103a1b	obj/kernel.asm	/^c0103a1b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103a1e	obj/kernel.asm	/^c0103a1e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103a21	obj/kernel.asm	/^c0103a21:	c9                   	leave  $/;"	l
c0103a22	obj/kernel.asm	/^c0103a22:	c3                   	ret    $/;"	l
c0103a23	obj/kernel.asm	/^c0103a23 <page_init>:$/;"	l
c0103a23	obj/kernel.asm	/^c0103a23:	55                   	push   %ebp$/;"	l
c0103a24	obj/kernel.asm	/^c0103a24:	89 e5                	mov    %esp,%ebp$/;"	l
c0103a26	obj/kernel.asm	/^c0103a26:	57                   	push   %edi$/;"	l
c0103a27	obj/kernel.asm	/^c0103a27:	56                   	push   %esi$/;"	l
c0103a28	obj/kernel.asm	/^c0103a28:	53                   	push   %ebx$/;"	l
c0103a29	obj/kernel.asm	/^c0103a29:	83 ec 7c             	sub    $0x7c,%esp$/;"	l
c0103a2c	obj/kernel.asm	/^c0103a2c:	c7 45 c4 00 80 00 c0 	movl   $0xc0008000,-0x3c(%ebp)$/;"	l
c0103a33	obj/kernel.asm	/^c0103a33:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
c0103a3a	obj/kernel.asm	/^c0103a3a:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0103a41	obj/kernel.asm	/^c0103a41:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103a44	obj/kernel.asm	/^c0103a44:	68 e7 c4 10 c0       	push   $0xc010c4e7$/;"	l
c0103a49	obj/kernel.asm	/^c0103a49:	e8 2c c8 ff ff       	call   c010027a <cprintf>$/;"	l
c0103a4e	obj/kernel.asm	/^c0103a4e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103a51	obj/kernel.asm	/^c0103a51:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0103a58	obj/kernel.asm	/^c0103a58:	e9 fe 00 00 00       	jmp    c0103b5b <page_init+0x138>$/;"	l
c0103a5d	obj/kernel.asm	/^c0103a5d:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103a60	obj/kernel.asm	/^c0103a60:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103a63	obj/kernel.asm	/^c0103a63:	89 d0                	mov    %edx,%eax$/;"	l
c0103a65	obj/kernel.asm	/^c0103a65:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a68	obj/kernel.asm	/^c0103a68:	01 d0                	add    %edx,%eax$/;"	l
c0103a6a	obj/kernel.asm	/^c0103a6a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a6d	obj/kernel.asm	/^c0103a6d:	01 c8                	add    %ecx,%eax$/;"	l
c0103a6f	obj/kernel.asm	/^c0103a6f:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0103a72	obj/kernel.asm	/^c0103a72:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103a75	obj/kernel.asm	/^c0103a75:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0103a78	obj/kernel.asm	/^c0103a78:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
c0103a7b	obj/kernel.asm	/^c0103a7b:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103a7e	obj/kernel.asm	/^c0103a7e:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103a81	obj/kernel.asm	/^c0103a81:	89 d0                	mov    %edx,%eax$/;"	l
c0103a83	obj/kernel.asm	/^c0103a83:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a86	obj/kernel.asm	/^c0103a86:	01 d0                	add    %edx,%eax$/;"	l
c0103a88	obj/kernel.asm	/^c0103a88:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a8b	obj/kernel.asm	/^c0103a8b:	01 c8                	add    %ecx,%eax$/;"	l
c0103a8d	obj/kernel.asm	/^c0103a8d:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0103a90	obj/kernel.asm	/^c0103a90:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c0103a93	obj/kernel.asm	/^c0103a93:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0103a96	obj/kernel.asm	/^c0103a96:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c0103a99	obj/kernel.asm	/^c0103a99:	01 c8                	add    %ecx,%eax$/;"	l
c0103a9b	obj/kernel.asm	/^c0103a9b:	11 da                	adc    %ebx,%edx$/;"	l
c0103a9d	obj/kernel.asm	/^c0103a9d:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0103aa0	obj/kernel.asm	/^c0103aa0:	89 55 b4             	mov    %edx,-0x4c(%ebp)$/;"	l
c0103aa3	obj/kernel.asm	/^c0103aa3:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103aa6	obj/kernel.asm	/^c0103aa6:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103aa9	obj/kernel.asm	/^c0103aa9:	89 d0                	mov    %edx,%eax$/;"	l
c0103aab	obj/kernel.asm	/^c0103aab:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103aae	obj/kernel.asm	/^c0103aae:	01 d0                	add    %edx,%eax$/;"	l
c0103ab0	obj/kernel.asm	/^c0103ab0:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103ab3	obj/kernel.asm	/^c0103ab3:	01 c8                	add    %ecx,%eax$/;"	l
c0103ab5	obj/kernel.asm	/^c0103ab5:	83 c0 10             	add    $0x10,%eax$/;"	l
c0103ab8	obj/kernel.asm	/^c0103ab8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103abb	obj/kernel.asm	/^c0103abb:	89 45 84             	mov    %eax,-0x7c(%ebp)$/;"	l
c0103abe	obj/kernel.asm	/^c0103abe:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0103ac1	obj/kernel.asm	/^c0103ac1:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0103ac4	obj/kernel.asm	/^c0103ac4:	83 c0 ff             	add    $0xffffffff,%eax$/;"	l
c0103ac7	obj/kernel.asm	/^c0103ac7:	83 d2 ff             	adc    $0xffffffff,%edx$/;"	l
c0103aca	obj/kernel.asm	/^c0103aca:	89 c1                	mov    %eax,%ecx$/;"	l
c0103acc	obj/kernel.asm	/^c0103acc:	89 d3                	mov    %edx,%ebx$/;"	l
c0103ace	obj/kernel.asm	/^c0103ace:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0103ad1	obj/kernel.asm	/^c0103ad1:	89 55 80             	mov    %edx,-0x80(%ebp)$/;"	l
c0103ad4	obj/kernel.asm	/^c0103ad4:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103ad7	obj/kernel.asm	/^c0103ad7:	89 d0                	mov    %edx,%eax$/;"	l
c0103ad9	obj/kernel.asm	/^c0103ad9:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103adc	obj/kernel.asm	/^c0103adc:	01 d0                	add    %edx,%eax$/;"	l
c0103ade	obj/kernel.asm	/^c0103ade:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103ae1	obj/kernel.asm	/^c0103ae1:	03 45 80             	add    -0x80(%ebp),%eax$/;"	l
c0103ae4	obj/kernel.asm	/^c0103ae4:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c0103ae7	obj/kernel.asm	/^c0103ae7:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0103aea	obj/kernel.asm	/^c0103aea:	ff 75 84             	pushl  -0x7c(%ebp)$/;"	l
c0103aed	obj/kernel.asm	/^c0103aed:	53                   	push   %ebx$/;"	l
c0103aee	obj/kernel.asm	/^c0103aee:	51                   	push   %ecx$/;"	l
c0103aef	obj/kernel.asm	/^c0103aef:	ff 75 bc             	pushl  -0x44(%ebp)$/;"	l
c0103af2	obj/kernel.asm	/^c0103af2:	ff 75 b8             	pushl  -0x48(%ebp)$/;"	l
c0103af5	obj/kernel.asm	/^c0103af5:	52                   	push   %edx$/;"	l
c0103af6	obj/kernel.asm	/^c0103af6:	50                   	push   %eax$/;"	l
c0103af7	obj/kernel.asm	/^c0103af7:	68 f4 c4 10 c0       	push   $0xc010c4f4$/;"	l
c0103afc	obj/kernel.asm	/^c0103afc:	e8 79 c7 ff ff       	call   c010027a <cprintf>$/;"	l
c0103b01	obj/kernel.asm	/^c0103b01:	83 c4 20             	add    $0x20,%esp$/;"	l
c0103b04	obj/kernel.asm	/^c0103b04:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103b07	obj/kernel.asm	/^c0103b07:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103b0a	obj/kernel.asm	/^c0103b0a:	89 d0                	mov    %edx,%eax$/;"	l
c0103b0c	obj/kernel.asm	/^c0103b0c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103b0f	obj/kernel.asm	/^c0103b0f:	01 d0                	add    %edx,%eax$/;"	l
c0103b11	obj/kernel.asm	/^c0103b11:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103b14	obj/kernel.asm	/^c0103b14:	01 c8                	add    %ecx,%eax$/;"	l
c0103b16	obj/kernel.asm	/^c0103b16:	83 c0 10             	add    $0x10,%eax$/;"	l
c0103b19	obj/kernel.asm	/^c0103b19:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103b1c	obj/kernel.asm	/^c0103b1c:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0103b1f	obj/kernel.asm	/^c0103b1f:	75 36                	jne    c0103b57 <page_init+0x134>$/;"	l
c0103b21	obj/kernel.asm	/^c0103b21:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103b24	obj/kernel.asm	/^c0103b24:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0103b27	obj/kernel.asm	/^c0103b27:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c0103b2a	obj/kernel.asm	/^c0103b2a:	77 2b                	ja     c0103b57 <page_init+0x134>$/;"	l
c0103b2c	obj/kernel.asm	/^c0103b2c:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c0103b2f	obj/kernel.asm	/^c0103b2f:	72 05                	jb     c0103b36 <page_init+0x113>$/;"	l
c0103b31	obj/kernel.asm	/^c0103b31:	3b 45 b0             	cmp    -0x50(%ebp),%eax$/;"	l
c0103b34	obj/kernel.asm	/^c0103b34:	73 21                	jae    c0103b57 <page_init+0x134>$/;"	l
c0103b36	obj/kernel.asm	/^c0103b36:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0103b3a	obj/kernel.asm	/^c0103b3a:	77 1b                	ja     c0103b57 <page_init+0x134>$/;"	l
c0103b3c	obj/kernel.asm	/^c0103b3c:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0103b40	obj/kernel.asm	/^c0103b40:	72 09                	jb     c0103b4b <page_init+0x128>$/;"	l
c0103b42	obj/kernel.asm	/^c0103b42:	81 7d b8 ff ff ff 37 	cmpl   $0x37ffffff,-0x48(%ebp)$/;"	l
c0103b49	obj/kernel.asm	/^c0103b49:	77 0c                	ja     c0103b57 <page_init+0x134>$/;"	l
c0103b4b	obj/kernel.asm	/^c0103b4b:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0103b4e	obj/kernel.asm	/^c0103b4e:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0103b51	obj/kernel.asm	/^c0103b51:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0103b54	obj/kernel.asm	/^c0103b54:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0103b57	obj/kernel.asm	/^c0103b57:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0103b5b	obj/kernel.asm	/^c0103b5b:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0103b5e	obj/kernel.asm	/^c0103b5e:	8b 00                	mov    (%eax),%eax$/;"	l
c0103b60	obj/kernel.asm	/^c0103b60:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c0103b63	obj/kernel.asm	/^c0103b63:	0f 8f f4 fe ff ff    	jg     c0103a5d <page_init+0x3a>$/;"	l
c0103b69	obj/kernel.asm	/^c0103b69:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0103b6d	obj/kernel.asm	/^c0103b6d:	72 1d                	jb     c0103b8c <page_init+0x169>$/;"	l
c0103b6f	obj/kernel.asm	/^c0103b6f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0103b73	obj/kernel.asm	/^c0103b73:	77 09                	ja     c0103b7e <page_init+0x15b>$/;"	l
c0103b75	obj/kernel.asm	/^c0103b75:	81 7d e0 00 00 00 38 	cmpl   $0x38000000,-0x20(%ebp)$/;"	l
c0103b7c	obj/kernel.asm	/^c0103b7c:	76 0e                	jbe    c0103b8c <page_init+0x169>$/;"	l
c0103b7e	obj/kernel.asm	/^c0103b7e:	c7 45 e0 00 00 00 38 	movl   $0x38000000,-0x20(%ebp)$/;"	l
c0103b85	obj/kernel.asm	/^c0103b85:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0103b8c	obj/kernel.asm	/^c0103b8c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103b8f	obj/kernel.asm	/^c0103b8f:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0103b92	obj/kernel.asm	/^c0103b92:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c0103b96	obj/kernel.asm	/^c0103b96:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0103b99	obj/kernel.asm	/^c0103b99:	a3 80 ed 1a c0       	mov    %eax,0xc01aed80$/;"	l
c0103b9e	obj/kernel.asm	/^c0103b9e:	c7 45 ac 00 10 00 00 	movl   $0x1000,-0x54(%ebp)$/;"	l
c0103ba5	obj/kernel.asm	/^c0103ba5:	b8 00 10 1b c0       	mov    $0xc01b1000,%eax$/;"	l
c0103baa	obj/kernel.asm	/^c0103baa:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0103bad	obj/kernel.asm	/^c0103bad:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c0103bb0	obj/kernel.asm	/^c0103bb0:	01 d0                	add    %edx,%eax$/;"	l
c0103bb2	obj/kernel.asm	/^c0103bb2:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c0103bb5	obj/kernel.asm	/^c0103bb5:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0103bb8	obj/kernel.asm	/^c0103bb8:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103bbd	obj/kernel.asm	/^c0103bbd:	f7 75 ac             	divl   -0x54(%ebp)$/;"	l
c0103bc0	obj/kernel.asm	/^c0103bc0:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0103bc3	obj/kernel.asm	/^c0103bc3:	29 d0                	sub    %edx,%eax$/;"	l
c0103bc5	obj/kernel.asm	/^c0103bc5:	a3 18 0f 1b c0       	mov    %eax,0xc01b0f18$/;"	l
c0103bca	obj/kernel.asm	/^c0103bca:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0103bd1	obj/kernel.asm	/^c0103bd1:	eb 27                	jmp    c0103bfa <page_init+0x1d7>$/;"	l
c0103bd3	obj/kernel.asm	/^c0103bd3:	a1 18 0f 1b c0       	mov    0xc01b0f18,%eax$/;"	l
c0103bd8	obj/kernel.asm	/^c0103bd8:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103bdb	obj/kernel.asm	/^c0103bdb:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0103bde	obj/kernel.asm	/^c0103bde:	01 d0                	add    %edx,%eax$/;"	l
c0103be0	obj/kernel.asm	/^c0103be0:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103be3	obj/kernel.asm	/^c0103be3:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)$/;"	l
c0103bea	obj/kernel.asm	/^c0103bea:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c0103bed	obj/kernel.asm	/^c0103bed:	8b 45 8c             	mov    -0x74(%ebp),%eax$/;"	l
c0103bf0	obj/kernel.asm	/^c0103bf0:	8b 55 90             	mov    -0x70(%ebp),%edx$/;"	l
c0103bf3	obj/kernel.asm	/^c0103bf3:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0103bf6	obj/kernel.asm	/^c0103bf6:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0103bfa	obj/kernel.asm	/^c0103bfa:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103bfd	obj/kernel.asm	/^c0103bfd:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c0103c02	obj/kernel.asm	/^c0103c02:	39 c2                	cmp    %eax,%edx$/;"	l
c0103c04	obj/kernel.asm	/^c0103c04:	72 cd                	jb     c0103bd3 <page_init+0x1b0>$/;"	l
c0103c06	obj/kernel.asm	/^c0103c06:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c0103c0b	obj/kernel.asm	/^c0103c0b:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0103c0e	obj/kernel.asm	/^c0103c0e:	89 c2                	mov    %eax,%edx$/;"	l
c0103c10	obj/kernel.asm	/^c0103c10:	a1 18 0f 1b c0       	mov    0xc01b0f18,%eax$/;"	l
c0103c15	obj/kernel.asm	/^c0103c15:	01 d0                	add    %edx,%eax$/;"	l
c0103c17	obj/kernel.asm	/^c0103c17:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c0103c1a	obj/kernel.asm	/^c0103c1a:	81 7d a4 ff ff ff bf 	cmpl   $0xbfffffff,-0x5c(%ebp)$/;"	l
c0103c21	obj/kernel.asm	/^c0103c21:	77 17                	ja     c0103c3a <page_init+0x217>$/;"	l
c0103c23	obj/kernel.asm	/^c0103c23:	ff 75 a4             	pushl  -0x5c(%ebp)$/;"	l
c0103c26	obj/kernel.asm	/^c0103c26:	68 24 c5 10 c0       	push   $0xc010c524$/;"	l
c0103c2b	obj/kernel.asm	/^c0103c2b:	68 e9 00 00 00       	push   $0xe9$/;"	l
c0103c30	obj/kernel.asm	/^c0103c30:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0103c35	obj/kernel.asm	/^c0103c35:	e8 a5 c7 ff ff       	call   c01003df <__panic>$/;"	l
c0103c3a	obj/kernel.asm	/^c0103c3a:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0103c3d	obj/kernel.asm	/^c0103c3d:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0103c42	obj/kernel.asm	/^c0103c42:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c0103c45	obj/kernel.asm	/^c0103c45:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0103c4c	obj/kernel.asm	/^c0103c4c:	e9 6a 01 00 00       	jmp    c0103dbb <page_init+0x398>$/;"	l
c0103c51	obj/kernel.asm	/^c0103c51:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103c54	obj/kernel.asm	/^c0103c54:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103c57	obj/kernel.asm	/^c0103c57:	89 d0                	mov    %edx,%eax$/;"	l
c0103c59	obj/kernel.asm	/^c0103c59:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103c5c	obj/kernel.asm	/^c0103c5c:	01 d0                	add    %edx,%eax$/;"	l
c0103c5e	obj/kernel.asm	/^c0103c5e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103c61	obj/kernel.asm	/^c0103c61:	01 c8                	add    %ecx,%eax$/;"	l
c0103c63	obj/kernel.asm	/^c0103c63:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0103c66	obj/kernel.asm	/^c0103c66:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103c69	obj/kernel.asm	/^c0103c69:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103c6c	obj/kernel.asm	/^c0103c6c:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0103c6f	obj/kernel.asm	/^c0103c6f:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103c72	obj/kernel.asm	/^c0103c72:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103c75	obj/kernel.asm	/^c0103c75:	89 d0                	mov    %edx,%eax$/;"	l
c0103c77	obj/kernel.asm	/^c0103c77:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103c7a	obj/kernel.asm	/^c0103c7a:	01 d0                	add    %edx,%eax$/;"	l
c0103c7c	obj/kernel.asm	/^c0103c7c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103c7f	obj/kernel.asm	/^c0103c7f:	01 c8                	add    %ecx,%eax$/;"	l
c0103c81	obj/kernel.asm	/^c0103c81:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0103c84	obj/kernel.asm	/^c0103c84:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c0103c87	obj/kernel.asm	/^c0103c87:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103c8a	obj/kernel.asm	/^c0103c8a:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103c8d	obj/kernel.asm	/^c0103c8d:	01 c8                	add    %ecx,%eax$/;"	l
c0103c8f	obj/kernel.asm	/^c0103c8f:	11 da                	adc    %ebx,%edx$/;"	l
c0103c91	obj/kernel.asm	/^c0103c91:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0103c94	obj/kernel.asm	/^c0103c94:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c0103c97	obj/kernel.asm	/^c0103c97:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103c9a	obj/kernel.asm	/^c0103c9a:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103c9d	obj/kernel.asm	/^c0103c9d:	89 d0                	mov    %edx,%eax$/;"	l
c0103c9f	obj/kernel.asm	/^c0103c9f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103ca2	obj/kernel.asm	/^c0103ca2:	01 d0                	add    %edx,%eax$/;"	l
c0103ca4	obj/kernel.asm	/^c0103ca4:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103ca7	obj/kernel.asm	/^c0103ca7:	01 c8                	add    %ecx,%eax$/;"	l
c0103ca9	obj/kernel.asm	/^c0103ca9:	83 c0 10             	add    $0x10,%eax$/;"	l
c0103cac	obj/kernel.asm	/^c0103cac:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103caf	obj/kernel.asm	/^c0103caf:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0103cb2	obj/kernel.asm	/^c0103cb2:	0f 85 ff 00 00 00    	jne    c0103db7 <page_init+0x394>$/;"	l
c0103cb8	obj/kernel.asm	/^c0103cb8:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0103cbb	obj/kernel.asm	/^c0103cbb:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103cc0	obj/kernel.asm	/^c0103cc0:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0103cc3	obj/kernel.asm	/^c0103cc3:	72 17                	jb     c0103cdc <page_init+0x2b9>$/;"	l
c0103cc5	obj/kernel.asm	/^c0103cc5:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0103cc8	obj/kernel.asm	/^c0103cc8:	77 05                	ja     c0103ccf <page_init+0x2ac>$/;"	l
c0103cca	obj/kernel.asm	/^c0103cca:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c0103ccd	obj/kernel.asm	/^c0103ccd:	76 0d                	jbe    c0103cdc <page_init+0x2b9>$/;"	l
c0103ccf	obj/kernel.asm	/^c0103ccf:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0103cd2	obj/kernel.asm	/^c0103cd2:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103cd5	obj/kernel.asm	/^c0103cd5:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c0103cdc	obj/kernel.asm	/^c0103cdc:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0103ce0	obj/kernel.asm	/^c0103ce0:	72 1d                	jb     c0103cff <page_init+0x2dc>$/;"	l
c0103ce2	obj/kernel.asm	/^c0103ce2:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0103ce6	obj/kernel.asm	/^c0103ce6:	77 09                	ja     c0103cf1 <page_init+0x2ce>$/;"	l
c0103ce8	obj/kernel.asm	/^c0103ce8:	81 7d c8 00 00 00 38 	cmpl   $0x38000000,-0x38(%ebp)$/;"	l
c0103cef	obj/kernel.asm	/^c0103cef:	76 0e                	jbe    c0103cff <page_init+0x2dc>$/;"	l
c0103cf1	obj/kernel.asm	/^c0103cf1:	c7 45 c8 00 00 00 38 	movl   $0x38000000,-0x38(%ebp)$/;"	l
c0103cf8	obj/kernel.asm	/^c0103cf8:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
c0103cff	obj/kernel.asm	/^c0103cff:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103d02	obj/kernel.asm	/^c0103d02:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103d05	obj/kernel.asm	/^c0103d05:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103d08	obj/kernel.asm	/^c0103d08:	0f 87 a9 00 00 00    	ja     c0103db7 <page_init+0x394>$/;"	l
c0103d0e	obj/kernel.asm	/^c0103d0e:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103d11	obj/kernel.asm	/^c0103d11:	72 09                	jb     c0103d1c <page_init+0x2f9>$/;"	l
c0103d13	obj/kernel.asm	/^c0103d13:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0103d16	obj/kernel.asm	/^c0103d16:	0f 83 9b 00 00 00    	jae    c0103db7 <page_init+0x394>$/;"	l
c0103d1c	obj/kernel.asm	/^c0103d1c:	c7 45 9c 00 10 00 00 	movl   $0x1000,-0x64(%ebp)$/;"	l
c0103d23	obj/kernel.asm	/^c0103d23:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0103d26	obj/kernel.asm	/^c0103d26:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c0103d29	obj/kernel.asm	/^c0103d29:	01 d0                	add    %edx,%eax$/;"	l
c0103d2b	obj/kernel.asm	/^c0103d2b:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0103d2e	obj/kernel.asm	/^c0103d2e:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0103d31	obj/kernel.asm	/^c0103d31:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0103d34	obj/kernel.asm	/^c0103d34:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103d39	obj/kernel.asm	/^c0103d39:	f7 75 9c             	divl   -0x64(%ebp)$/;"	l
c0103d3c	obj/kernel.asm	/^c0103d3c:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0103d3f	obj/kernel.asm	/^c0103d3f:	29 d0                	sub    %edx,%eax$/;"	l
c0103d41	obj/kernel.asm	/^c0103d41:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103d46	obj/kernel.asm	/^c0103d46:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103d49	obj/kernel.asm	/^c0103d49:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0103d4c	obj/kernel.asm	/^c0103d4c:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0103d4f	obj/kernel.asm	/^c0103d4f:	89 45 94             	mov    %eax,-0x6c(%ebp)$/;"	l
c0103d52	obj/kernel.asm	/^c0103d52:	8b 45 94             	mov    -0x6c(%ebp),%eax$/;"	l
c0103d55	obj/kernel.asm	/^c0103d55:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103d5a	obj/kernel.asm	/^c0103d5a:	89 c3                	mov    %eax,%ebx$/;"	l
c0103d5c	obj/kernel.asm	/^c0103d5c:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
c0103d62	obj/kernel.asm	/^c0103d62:	89 de                	mov    %ebx,%esi$/;"	l
c0103d64	obj/kernel.asm	/^c0103d64:	89 d0                	mov    %edx,%eax$/;"	l
c0103d66	obj/kernel.asm	/^c0103d66:	83 e0 00             	and    $0x0,%eax$/;"	l
c0103d69	obj/kernel.asm	/^c0103d69:	89 c7                	mov    %eax,%edi$/;"	l
c0103d6b	obj/kernel.asm	/^c0103d6b:	89 75 c8             	mov    %esi,-0x38(%ebp)$/;"	l
c0103d6e	obj/kernel.asm	/^c0103d6e:	89 7d cc             	mov    %edi,-0x34(%ebp)$/;"	l
c0103d71	obj/kernel.asm	/^c0103d71:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103d74	obj/kernel.asm	/^c0103d74:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103d77	obj/kernel.asm	/^c0103d77:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103d7a	obj/kernel.asm	/^c0103d7a:	77 3b                	ja     c0103db7 <page_init+0x394>$/;"	l
c0103d7c	obj/kernel.asm	/^c0103d7c:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103d7f	obj/kernel.asm	/^c0103d7f:	72 05                	jb     c0103d86 <page_init+0x363>$/;"	l
c0103d81	obj/kernel.asm	/^c0103d81:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0103d84	obj/kernel.asm	/^c0103d84:	73 31                	jae    c0103db7 <page_init+0x394>$/;"	l
c0103d86	obj/kernel.asm	/^c0103d86:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0103d89	obj/kernel.asm	/^c0103d89:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0103d8c	obj/kernel.asm	/^c0103d8c:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
c0103d8f	obj/kernel.asm	/^c0103d8f:	1b 55 d4             	sbb    -0x2c(%ebp),%edx$/;"	l
c0103d92	obj/kernel.asm	/^c0103d92:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c0103d96	obj/kernel.asm	/^c0103d96:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0103d99	obj/kernel.asm	/^c0103d99:	89 c3                	mov    %eax,%ebx$/;"	l
c0103d9b	obj/kernel.asm	/^c0103d9b:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103d9e	obj/kernel.asm	/^c0103d9e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103da1	obj/kernel.asm	/^c0103da1:	50                   	push   %eax$/;"	l
c0103da2	obj/kernel.asm	/^c0103da2:	e8 cf f8 ff ff       	call   c0103676 <pa2page>$/;"	l
c0103da7	obj/kernel.asm	/^c0103da7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103daa	obj/kernel.asm	/^c0103daa:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103dad	obj/kernel.asm	/^c0103dad:	53                   	push   %ebx$/;"	l
c0103dae	obj/kernel.asm	/^c0103dae:	50                   	push   %eax$/;"	l
c0103daf	obj/kernel.asm	/^c0103daf:	e8 83 fb ff ff       	call   c0103937 <init_memmap>$/;"	l
c0103db4	obj/kernel.asm	/^c0103db4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103db7	obj/kernel.asm	/^c0103db7:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0103dbb	obj/kernel.asm	/^c0103dbb:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0103dbe	obj/kernel.asm	/^c0103dbe:	8b 00                	mov    (%eax),%eax$/;"	l
c0103dc0	obj/kernel.asm	/^c0103dc0:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c0103dc3	obj/kernel.asm	/^c0103dc3:	0f 8f 88 fe ff ff    	jg     c0103c51 <page_init+0x22e>$/;"	l
c0103dc9	obj/kernel.asm	/^c0103dc9:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
c0103dcc	obj/kernel.asm	/^c0103dcc:	5b                   	pop    %ebx$/;"	l
c0103dcd	obj/kernel.asm	/^c0103dcd:	5e                   	pop    %esi$/;"	l
c0103dce	obj/kernel.asm	/^c0103dce:	5f                   	pop    %edi$/;"	l
c0103dcf	obj/kernel.asm	/^c0103dcf:	5d                   	pop    %ebp$/;"	l
c0103dd0	obj/kernel.asm	/^c0103dd0:	c3                   	ret    $/;"	l
c0103dd1	obj/kernel.asm	/^c0103dd1 <enable_paging>:$/;"	l
c0103dd1	obj/kernel.asm	/^c0103dd1:	55                   	push   %ebp$/;"	l
c0103dd2	obj/kernel.asm	/^c0103dd2:	89 e5                	mov    %esp,%ebp$/;"	l
c0103dd4	obj/kernel.asm	/^c0103dd4:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0103dd7	obj/kernel.asm	/^c0103dd7:	a1 14 0f 1b c0       	mov    0xc01b0f14,%eax$/;"	l
c0103ddc	obj/kernel.asm	/^c0103ddc:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0103ddf	obj/kernel.asm	/^c0103ddf:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0103de2	obj/kernel.asm	/^c0103de2:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0103de5	obj/kernel.asm	/^c0103de5:	0f 20 c0             	mov    %cr0,%eax$/;"	l
c0103de8	obj/kernel.asm	/^c0103de8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103deb	obj/kernel.asm	/^c0103deb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103dee	obj/kernel.asm	/^c0103dee:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0103df1	obj/kernel.asm	/^c0103df1:	81 4d fc 2f 00 05 80 	orl    $0x8005002f,-0x4(%ebp)$/;"	l
c0103df8	obj/kernel.asm	/^c0103df8:	83 65 fc f3          	andl   $0xfffffff3,-0x4(%ebp)$/;"	l
c0103dfc	obj/kernel.asm	/^c0103dfc:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0103dff	obj/kernel.asm	/^c0103dff:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103e02	obj/kernel.asm	/^c0103e02:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103e05	obj/kernel.asm	/^c0103e05:	0f 22 c0             	mov    %eax,%cr0$/;"	l
c0103e08	obj/kernel.asm	/^c0103e08:	c9                   	leave  $/;"	l
c0103e09	obj/kernel.asm	/^c0103e09:	c3                   	ret    $/;"	l
c0103e0a	obj/kernel.asm	/^c0103e0a <boot_map_segment>:$/;"	l
c0103e0a	obj/kernel.asm	/^c0103e0a:	55                   	push   %ebp$/;"	l
c0103e0b	obj/kernel.asm	/^c0103e0b:	89 e5                	mov    %esp,%ebp$/;"	l
c0103e0d	obj/kernel.asm	/^c0103e0d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0103e10	obj/kernel.asm	/^c0103e10:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103e13	obj/kernel.asm	/^c0103e13:	33 45 14             	xor    0x14(%ebp),%eax$/;"	l
c0103e16	obj/kernel.asm	/^c0103e16:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0103e1b	obj/kernel.asm	/^c0103e1b:	85 c0                	test   %eax,%eax$/;"	l
c0103e1d	obj/kernel.asm	/^c0103e1d:	74 19                	je     c0103e38 <boot_map_segment+0x2e>$/;"	l
c0103e1f	obj/kernel.asm	/^c0103e1f:	68 56 c5 10 c0       	push   $0xc010c556$/;"	l
c0103e24	obj/kernel.asm	/^c0103e24:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0103e29	obj/kernel.asm	/^c0103e29:	68 12 01 00 00       	push   $0x112$/;"	l
c0103e2e	obj/kernel.asm	/^c0103e2e:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0103e33	obj/kernel.asm	/^c0103e33:	e8 a7 c5 ff ff       	call   c01003df <__panic>$/;"	l
c0103e38	obj/kernel.asm	/^c0103e38:	c7 45 f0 00 10 00 00 	movl   $0x1000,-0x10(%ebp)$/;"	l
c0103e3f	obj/kernel.asm	/^c0103e3f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103e42	obj/kernel.asm	/^c0103e42:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0103e47	obj/kernel.asm	/^c0103e47:	89 c2                	mov    %eax,%edx$/;"	l
c0103e49	obj/kernel.asm	/^c0103e49:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0103e4c	obj/kernel.asm	/^c0103e4c:	01 c2                	add    %eax,%edx$/;"	l
c0103e4e	obj/kernel.asm	/^c0103e4e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103e51	obj/kernel.asm	/^c0103e51:	01 d0                	add    %edx,%eax$/;"	l
c0103e53	obj/kernel.asm	/^c0103e53:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0103e56	obj/kernel.asm	/^c0103e56:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103e59	obj/kernel.asm	/^c0103e59:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103e5c	obj/kernel.asm	/^c0103e5c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103e61	obj/kernel.asm	/^c0103e61:	f7 75 f0             	divl   -0x10(%ebp)$/;"	l
c0103e64	obj/kernel.asm	/^c0103e64:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103e67	obj/kernel.asm	/^c0103e67:	29 d0                	sub    %edx,%eax$/;"	l
c0103e69	obj/kernel.asm	/^c0103e69:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0103e6c	obj/kernel.asm	/^c0103e6c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103e6f	obj/kernel.asm	/^c0103e6f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103e72	obj/kernel.asm	/^c0103e72:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0103e75	obj/kernel.asm	/^c0103e75:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0103e78	obj/kernel.asm	/^c0103e78:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0103e7d	obj/kernel.asm	/^c0103e7d:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0103e80	obj/kernel.asm	/^c0103e80:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0103e83	obj/kernel.asm	/^c0103e83:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0103e86	obj/kernel.asm	/^c0103e86:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0103e89	obj/kernel.asm	/^c0103e89:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0103e8e	obj/kernel.asm	/^c0103e8e:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
c0103e91	obj/kernel.asm	/^c0103e91:	eb 57                	jmp    c0103eea <boot_map_segment+0xe0>$/;"	l
c0103e93	obj/kernel.asm	/^c0103e93:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103e96	obj/kernel.asm	/^c0103e96:	6a 01                	push   $0x1$/;"	l
c0103e98	obj/kernel.asm	/^c0103e98:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0103e9b	obj/kernel.asm	/^c0103e9b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0103e9e	obj/kernel.asm	/^c0103e9e:	e8 9b 01 00 00       	call   c010403e <get_pte>$/;"	l
c0103ea3	obj/kernel.asm	/^c0103ea3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103ea6	obj/kernel.asm	/^c0103ea6:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0103ea9	obj/kernel.asm	/^c0103ea9:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0103ead	obj/kernel.asm	/^c0103ead:	75 19                	jne    c0103ec8 <boot_map_segment+0xbe>$/;"	l
c0103eaf	obj/kernel.asm	/^c0103eaf:	68 82 c5 10 c0       	push   $0xc010c582$/;"	l
c0103eb4	obj/kernel.asm	/^c0103eb4:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0103eb9	obj/kernel.asm	/^c0103eb9:	68 18 01 00 00       	push   $0x118$/;"	l
c0103ebe	obj/kernel.asm	/^c0103ebe:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0103ec3	obj/kernel.asm	/^c0103ec3:	e8 17 c5 ff ff       	call   c01003df <__panic>$/;"	l
c0103ec8	obj/kernel.asm	/^c0103ec8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0103ecb	obj/kernel.asm	/^c0103ecb:	0b 45 18             	or     0x18(%ebp),%eax$/;"	l
c0103ece	obj/kernel.asm	/^c0103ece:	83 c8 01             	or     $0x1,%eax$/;"	l
c0103ed1	obj/kernel.asm	/^c0103ed1:	89 c2                	mov    %eax,%edx$/;"	l
c0103ed3	obj/kernel.asm	/^c0103ed3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103ed6	obj/kernel.asm	/^c0103ed6:	89 10                	mov    %edx,(%eax)$/;"	l
c0103ed8	obj/kernel.asm	/^c0103ed8:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0103edc	obj/kernel.asm	/^c0103edc:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c0103ee3	obj/kernel.asm	/^c0103ee3:	81 45 14 00 10 00 00 	addl   $0x1000,0x14(%ebp)$/;"	l
c0103eea	obj/kernel.asm	/^c0103eea:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103eee	obj/kernel.asm	/^c0103eee:	75 a3                	jne    c0103e93 <boot_map_segment+0x89>$/;"	l
c0103ef0	obj/kernel.asm	/^c0103ef0:	c9                   	leave  $/;"	l
c0103ef1	obj/kernel.asm	/^c0103ef1:	c3                   	ret    $/;"	l
c0103ef2	obj/kernel.asm	/^c0103ef2 <boot_alloc_page>:$/;"	l
c0103ef2	obj/kernel.asm	/^c0103ef2:	55                   	push   %ebp$/;"	l
c0103ef3	obj/kernel.asm	/^c0103ef3:	89 e5                	mov    %esp,%ebp$/;"	l
c0103ef5	obj/kernel.asm	/^c0103ef5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103ef8	obj/kernel.asm	/^c0103ef8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103efb	obj/kernel.asm	/^c0103efb:	6a 01                	push   $0x1$/;"	l
c0103efd	obj/kernel.asm	/^c0103efd:	e8 53 fa ff ff       	call   c0103955 <alloc_pages>$/;"	l
c0103f02	obj/kernel.asm	/^c0103f02:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103f05	obj/kernel.asm	/^c0103f05:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103f08	obj/kernel.asm	/^c0103f08:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103f0c	obj/kernel.asm	/^c0103f0c:	75 17                	jne    c0103f25 <boot_alloc_page+0x33>$/;"	l
c0103f0e	obj/kernel.asm	/^c0103f0e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103f11	obj/kernel.asm	/^c0103f11:	68 8f c5 10 c0       	push   $0xc010c58f$/;"	l
c0103f16	obj/kernel.asm	/^c0103f16:	68 24 01 00 00       	push   $0x124$/;"	l
c0103f1b	obj/kernel.asm	/^c0103f1b:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0103f20	obj/kernel.asm	/^c0103f20:	e8 ba c4 ff ff       	call   c01003df <__panic>$/;"	l
c0103f25	obj/kernel.asm	/^c0103f25:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103f28	obj/kernel.asm	/^c0103f28:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0103f2b	obj/kernel.asm	/^c0103f2b:	e8 83 f7 ff ff       	call   c01036b3 <page2kva>$/;"	l
c0103f30	obj/kernel.asm	/^c0103f30:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103f33	obj/kernel.asm	/^c0103f33:	c9                   	leave  $/;"	l
c0103f34	obj/kernel.asm	/^c0103f34:	c3                   	ret    $/;"	l
c0103f35	obj/kernel.asm	/^c0103f35 <pmm_init>:$/;"	l
c0103f35	obj/kernel.asm	/^c0103f35:	55                   	push   %ebp$/;"	l
c0103f36	obj/kernel.asm	/^c0103f36:	89 e5                	mov    %esp,%ebp$/;"	l
c0103f38	obj/kernel.asm	/^c0103f38:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103f3b	obj/kernel.asm	/^c0103f3b:	e8 c3 f9 ff ff       	call   c0103903 <init_pmm_manager>$/;"	l
c0103f40	obj/kernel.asm	/^c0103f40:	e8 de fa ff ff       	call   c0103a23 <page_init>$/;"	l
c0103f45	obj/kernel.asm	/^c0103f45:	e8 30 08 00 00       	call   c010477a <check_alloc_page>$/;"	l
c0103f4a	obj/kernel.asm	/^c0103f4a:	e8 a3 ff ff ff       	call   c0103ef2 <boot_alloc_page>$/;"	l
c0103f4f	obj/kernel.asm	/^c0103f4f:	a3 84 ed 1a c0       	mov    %eax,0xc01aed84$/;"	l
c0103f54	obj/kernel.asm	/^c0103f54:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0103f59	obj/kernel.asm	/^c0103f59:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103f5c	obj/kernel.asm	/^c0103f5c:	68 00 10 00 00       	push   $0x1000$/;"	l
c0103f61	obj/kernel.asm	/^c0103f61:	6a 00                	push   $0x0$/;"	l
c0103f63	obj/kernel.asm	/^c0103f63:	50                   	push   %eax$/;"	l
c0103f64	obj/kernel.asm	/^c0103f64:	e8 da 72 00 00       	call   c010b243 <memset>$/;"	l
c0103f69	obj/kernel.asm	/^c0103f69:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103f6c	obj/kernel.asm	/^c0103f6c:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0103f71	obj/kernel.asm	/^c0103f71:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103f74	obj/kernel.asm	/^c0103f74:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0103f7b	obj/kernel.asm	/^c0103f7b:	77 17                	ja     c0103f94 <pmm_init+0x5f>$/;"	l
c0103f7d	obj/kernel.asm	/^c0103f7d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0103f80	obj/kernel.asm	/^c0103f80:	68 24 c5 10 c0       	push   $0xc010c524$/;"	l
c0103f85	obj/kernel.asm	/^c0103f85:	68 3e 01 00 00       	push   $0x13e$/;"	l
c0103f8a	obj/kernel.asm	/^c0103f8a:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0103f8f	obj/kernel.asm	/^c0103f8f:	e8 4b c4 ff ff       	call   c01003df <__panic>$/;"	l
c0103f94	obj/kernel.asm	/^c0103f94:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103f97	obj/kernel.asm	/^c0103f97:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0103f9c	obj/kernel.asm	/^c0103f9c:	a3 14 0f 1b c0       	mov    %eax,0xc01b0f14$/;"	l
c0103fa1	obj/kernel.asm	/^c0103fa1:	e8 f6 07 00 00       	call   c010479c <check_pgdir>$/;"	l
c0103fa6	obj/kernel.asm	/^c0103fa6:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0103fab	obj/kernel.asm	/^c0103fab:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c0103fb1	obj/kernel.asm	/^c0103fb1:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0103fb6	obj/kernel.asm	/^c0103fb6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103fb9	obj/kernel.asm	/^c0103fb9:	81 7d f0 ff ff ff bf 	cmpl   $0xbfffffff,-0x10(%ebp)$/;"	l
c0103fc0	obj/kernel.asm	/^c0103fc0:	77 17                	ja     c0103fd9 <pmm_init+0xa4>$/;"	l
c0103fc2	obj/kernel.asm	/^c0103fc2:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0103fc5	obj/kernel.asm	/^c0103fc5:	68 24 c5 10 c0       	push   $0xc010c524$/;"	l
c0103fca	obj/kernel.asm	/^c0103fca:	68 46 01 00 00       	push   $0x146$/;"	l
c0103fcf	obj/kernel.asm	/^c0103fcf:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0103fd4	obj/kernel.asm	/^c0103fd4:	e8 06 c4 ff ff       	call   c01003df <__panic>$/;"	l
c0103fd9	obj/kernel.asm	/^c0103fd9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103fdc	obj/kernel.asm	/^c0103fdc:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0103fe1	obj/kernel.asm	/^c0103fe1:	83 c8 03             	or     $0x3,%eax$/;"	l
c0103fe4	obj/kernel.asm	/^c0103fe4:	89 02                	mov    %eax,(%edx)$/;"	l
c0103fe6	obj/kernel.asm	/^c0103fe6:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0103feb	obj/kernel.asm	/^c0103feb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103fee	obj/kernel.asm	/^c0103fee:	6a 02                	push   $0x2$/;"	l
c0103ff0	obj/kernel.asm	/^c0103ff0:	6a 00                	push   $0x0$/;"	l
c0103ff2	obj/kernel.asm	/^c0103ff2:	68 00 00 00 38       	push   $0x38000000$/;"	l
c0103ff7	obj/kernel.asm	/^c0103ff7:	68 00 00 00 c0       	push   $0xc0000000$/;"	l
c0103ffc	obj/kernel.asm	/^c0103ffc:	50                   	push   %eax$/;"	l
c0103ffd	obj/kernel.asm	/^c0103ffd:	e8 08 fe ff ff       	call   c0103e0a <boot_map_segment>$/;"	l
c0104002	obj/kernel.asm	/^c0104002:	83 c4 20             	add    $0x20,%esp$/;"	l
c0104005	obj/kernel.asm	/^c0104005:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c010400a	obj/kernel.asm	/^c010400a:	8b 15 84 ed 1a c0    	mov    0xc01aed84,%edx$/;"	l
c0104010	obj/kernel.asm	/^c0104010:	8b 92 00 0c 00 00    	mov    0xc00(%edx),%edx$/;"	l
c0104016	obj/kernel.asm	/^c0104016:	89 10                	mov    %edx,(%eax)$/;"	l
c0104018	obj/kernel.asm	/^c0104018:	e8 b4 fd ff ff       	call   c0103dd1 <enable_paging>$/;"	l
c010401d	obj/kernel.asm	/^c010401d:	e8 f0 f7 ff ff       	call   c0103812 <gdt_init>$/;"	l
c0104022	obj/kernel.asm	/^c0104022:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104027	obj/kernel.asm	/^c0104027:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010402d	obj/kernel.asm	/^c010402d:	e8 cf 0c 00 00       	call   c0104d01 <check_boot_pgdir>$/;"	l
c0104032	obj/kernel.asm	/^c0104032:	e8 cb 10 00 00       	call   c0105102 <print_pgdir>$/;"	l
c0104037	obj/kernel.asm	/^c0104037:	e8 6f 32 00 00       	call   c01072ab <kmalloc_init>$/;"	l
c010403c	obj/kernel.asm	/^c010403c:	c9                   	leave  $/;"	l
c010403d	obj/kernel.asm	/^c010403d:	c3                   	ret    $/;"	l
c010403e	obj/kernel.asm	/^c010403e <get_pte>:$/;"	l
c010403e	obj/kernel.asm	/^c010403e:	55                   	push   %ebp$/;"	l
c010403f	obj/kernel.asm	/^c010403f:	89 e5                	mov    %esp,%ebp$/;"	l
c0104041	obj/kernel.asm	/^c0104041:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104044	obj/kernel.asm	/^c0104044:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104047	obj/kernel.asm	/^c0104047:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c010404a	obj/kernel.asm	/^c010404a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0104051	obj/kernel.asm	/^c0104051:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104054	obj/kernel.asm	/^c0104054:	01 d0                	add    %edx,%eax$/;"	l
c0104056	obj/kernel.asm	/^c0104056:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104059	obj/kernel.asm	/^c0104059:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010405c	obj/kernel.asm	/^c010405c:	8b 00                	mov    (%eax),%eax$/;"	l
c010405e	obj/kernel.asm	/^c010405e:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104061	obj/kernel.asm	/^c0104061:	85 c0                	test   %eax,%eax$/;"	l
c0104063	obj/kernel.asm	/^c0104063:	75 75                	jne    c01040da <get_pte+0x9c>$/;"	l
c0104065	obj/kernel.asm	/^c0104065:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010406c	obj/kernel.asm	/^c010406c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0104070	obj/kernel.asm	/^c0104070:	74 61                	je     c01040d3 <get_pte+0x95>$/;"	l
c0104072	obj/kernel.asm	/^c0104072:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104075	obj/kernel.asm	/^c0104075:	6a 01                	push   $0x1$/;"	l
c0104077	obj/kernel.asm	/^c0104077:	e8 d9 f8 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c010407c	obj/kernel.asm	/^c010407c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010407f	obj/kernel.asm	/^c010407f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104082	obj/kernel.asm	/^c0104082:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104086	obj/kernel.asm	/^c0104086:	74 4b                	je     c01040d3 <get_pte+0x95>$/;"	l
c0104088	obj/kernel.asm	/^c0104088:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010408b	obj/kernel.asm	/^c010408b:	6a 01                	push   $0x1$/;"	l
c010408d	obj/kernel.asm	/^c010408d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0104090	obj/kernel.asm	/^c0104090:	e8 c3 f6 ff ff       	call   c0103758 <set_page_ref>$/;"	l
c0104095	obj/kernel.asm	/^c0104095:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104098	obj/kernel.asm	/^c0104098:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010409b	obj/kernel.asm	/^c010409b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010409e	obj/kernel.asm	/^c010409e:	e8 10 f6 ff ff       	call   c01036b3 <page2kva>$/;"	l
c01040a3	obj/kernel.asm	/^c01040a3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01040a6	obj/kernel.asm	/^c01040a6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01040a9	obj/kernel.asm	/^c01040a9:	68 00 10 00 00       	push   $0x1000$/;"	l
c01040ae	obj/kernel.asm	/^c01040ae:	6a 00                	push   $0x0$/;"	l
c01040b0	obj/kernel.asm	/^c01040b0:	50                   	push   %eax$/;"	l
c01040b1	obj/kernel.asm	/^c01040b1:	e8 8d 71 00 00       	call   c010b243 <memset>$/;"	l
c01040b6	obj/kernel.asm	/^c01040b6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01040b9	obj/kernel.asm	/^c01040b9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01040bc	obj/kernel.asm	/^c01040bc:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01040bf	obj/kernel.asm	/^c01040bf:	e8 9f f5 ff ff       	call   c0103663 <page2pa>$/;"	l
c01040c4	obj/kernel.asm	/^c01040c4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01040c7	obj/kernel.asm	/^c01040c7:	83 c8 07             	or     $0x7,%eax$/;"	l
c01040ca	obj/kernel.asm	/^c01040ca:	89 c2                	mov    %eax,%edx$/;"	l
c01040cc	obj/kernel.asm	/^c01040cc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01040cf	obj/kernel.asm	/^c01040cf:	89 10                	mov    %edx,(%eax)$/;"	l
c01040d1	obj/kernel.asm	/^c01040d1:	eb 07                	jmp    c01040da <get_pte+0x9c>$/;"	l
c01040d3	obj/kernel.asm	/^c01040d3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01040d8	obj/kernel.asm	/^c01040d8:	eb 51                	jmp    c010412b <get_pte+0xed>$/;"	l
c01040da	obj/kernel.asm	/^c01040da:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01040dd	obj/kernel.asm	/^c01040dd:	8b 00                	mov    (%eax),%eax$/;"	l
c01040df	obj/kernel.asm	/^c01040df:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01040e4	obj/kernel.asm	/^c01040e4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01040e7	obj/kernel.asm	/^c01040e7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01040ea	obj/kernel.asm	/^c01040ea:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01040ed	obj/kernel.asm	/^c01040ed:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01040f0	obj/kernel.asm	/^c01040f0:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c01040f5	obj/kernel.asm	/^c01040f5:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c01040f8	obj/kernel.asm	/^c01040f8:	72 17                	jb     c0104111 <get_pte+0xd3>$/;"	l
c01040fa	obj/kernel.asm	/^c01040fa:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01040fd	obj/kernel.asm	/^c01040fd:	68 80 c4 10 c0       	push   $0xc010c480$/;"	l
c0104102	obj/kernel.asm	/^c0104102:	68 8f 01 00 00       	push   $0x18f$/;"	l
c0104107	obj/kernel.asm	/^c0104107:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c010410c	obj/kernel.asm	/^c010410c:	e8 ce c2 ff ff       	call   c01003df <__panic>$/;"	l
c0104111	obj/kernel.asm	/^c0104111:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104114	obj/kernel.asm	/^c0104114:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104119	obj/kernel.asm	/^c0104119:	89 c2                	mov    %eax,%edx$/;"	l
c010411b	obj/kernel.asm	/^c010411b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010411e	obj/kernel.asm	/^c010411e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104121	obj/kernel.asm	/^c0104121:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
c0104126	obj/kernel.asm	/^c0104126:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0104129	obj/kernel.asm	/^c0104129:	01 d0                	add    %edx,%eax$/;"	l
c010412b	obj/kernel.asm	/^c010412b:	c9                   	leave  $/;"	l
c010412c	obj/kernel.asm	/^c010412c:	c3                   	ret    $/;"	l
c010412d	obj/kernel.asm	/^c010412d <get_page>:$/;"	l
c010412d	obj/kernel.asm	/^c010412d:	55                   	push   %ebp$/;"	l
c010412e	obj/kernel.asm	/^c010412e:	89 e5                	mov    %esp,%ebp$/;"	l
c0104130	obj/kernel.asm	/^c0104130:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104133	obj/kernel.asm	/^c0104133:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104136	obj/kernel.asm	/^c0104136:	6a 00                	push   $0x0$/;"	l
c0104138	obj/kernel.asm	/^c0104138:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010413b	obj/kernel.asm	/^c010413b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010413e	obj/kernel.asm	/^c010413e:	e8 fb fe ff ff       	call   c010403e <get_pte>$/;"	l
c0104143	obj/kernel.asm	/^c0104143:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104146	obj/kernel.asm	/^c0104146:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104149	obj/kernel.asm	/^c0104149:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010414d	obj/kernel.asm	/^c010414d:	74 08                	je     c0104157 <get_page+0x2a>$/;"	l
c010414f	obj/kernel.asm	/^c010414f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104152	obj/kernel.asm	/^c0104152:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0104155	obj/kernel.asm	/^c0104155:	89 10                	mov    %edx,(%eax)$/;"	l
c0104157	obj/kernel.asm	/^c0104157:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010415b	obj/kernel.asm	/^c010415b:	74 1f                	je     c010417c <get_page+0x4f>$/;"	l
c010415d	obj/kernel.asm	/^c010415d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104160	obj/kernel.asm	/^c0104160:	8b 00                	mov    (%eax),%eax$/;"	l
c0104162	obj/kernel.asm	/^c0104162:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104165	obj/kernel.asm	/^c0104165:	85 c0                	test   %eax,%eax$/;"	l
c0104167	obj/kernel.asm	/^c0104167:	74 13                	je     c010417c <get_page+0x4f>$/;"	l
c0104169	obj/kernel.asm	/^c0104169:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010416c	obj/kernel.asm	/^c010416c:	8b 00                	mov    (%eax),%eax$/;"	l
c010416e	obj/kernel.asm	/^c010416e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104171	obj/kernel.asm	/^c0104171:	50                   	push   %eax$/;"	l
c0104172	obj/kernel.asm	/^c0104172:	e8 ff f4 ff ff       	call   c0103676 <pa2page>$/;"	l
c0104177	obj/kernel.asm	/^c0104177:	83 c4 10             	add    $0x10,%esp$/;"	l
c010417a	obj/kernel.asm	/^c010417a:	eb 05                	jmp    c0104181 <get_page+0x54>$/;"	l
c010417c	obj/kernel.asm	/^c010417c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104181	obj/kernel.asm	/^c0104181:	c9                   	leave  $/;"	l
c0104182	obj/kernel.asm	/^c0104182:	c3                   	ret    $/;"	l
c0104183	obj/kernel.asm	/^c0104183 <page_remove_pte>:$/;"	l
c0104183	obj/kernel.asm	/^c0104183:	55                   	push   %ebp$/;"	l
c0104184	obj/kernel.asm	/^c0104184:	89 e5                	mov    %esp,%ebp$/;"	l
c0104186	obj/kernel.asm	/^c0104186:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104189	obj/kernel.asm	/^c0104189:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010418c	obj/kernel.asm	/^c010418c:	8b 00                	mov    (%eax),%eax$/;"	l
c010418e	obj/kernel.asm	/^c010418e:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104191	obj/kernel.asm	/^c0104191:	85 c0                	test   %eax,%eax$/;"	l
c0104193	obj/kernel.asm	/^c0104193:	75 02                	jne    c0104197 <page_remove_pte+0x14>$/;"	l
c0104195	obj/kernel.asm	/^c0104195:	eb 50                	jmp    c01041e7 <page_remove_pte+0x64>$/;"	l
c0104197	obj/kernel.asm	/^c0104197:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010419a	obj/kernel.asm	/^c010419a:	8b 00                	mov    (%eax),%eax$/;"	l
c010419c	obj/kernel.asm	/^c010419c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010419f	obj/kernel.asm	/^c010419f:	50                   	push   %eax$/;"	l
c01041a0	obj/kernel.asm	/^c01041a0:	e8 53 f5 ff ff       	call   c01036f8 <pte2page>$/;"	l
c01041a5	obj/kernel.asm	/^c01041a5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01041a8	obj/kernel.asm	/^c01041a8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01041ab	obj/kernel.asm	/^c01041ab:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01041ae	obj/kernel.asm	/^c01041ae:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01041b1	obj/kernel.asm	/^c01041b1:	e8 c6 f5 ff ff       	call   c010377c <page_ref_dec>$/;"	l
c01041b6	obj/kernel.asm	/^c01041b6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01041b9	obj/kernel.asm	/^c01041b9:	85 c0                	test   %eax,%eax$/;"	l
c01041bb	obj/kernel.asm	/^c01041bb:	75 10                	jne    c01041cd <page_remove_pte+0x4a>$/;"	l
c01041bd	obj/kernel.asm	/^c01041bd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01041c0	obj/kernel.asm	/^c01041c0:	6a 01                	push   $0x1$/;"	l
c01041c2	obj/kernel.asm	/^c01041c2:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01041c5	obj/kernel.asm	/^c01041c5:	e8 f7 f7 ff ff       	call   c01039c1 <free_pages>$/;"	l
c01041ca	obj/kernel.asm	/^c01041ca:	83 c4 10             	add    $0x10,%esp$/;"	l
c01041cd	obj/kernel.asm	/^c01041cd:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01041d0	obj/kernel.asm	/^c01041d0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01041d6	obj/kernel.asm	/^c01041d6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01041d9	obj/kernel.asm	/^c01041d9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01041dc	obj/kernel.asm	/^c01041dc:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01041df	obj/kernel.asm	/^c01041df:	e8 96 04 00 00       	call   c010467a <tlb_invalidate>$/;"	l
c01041e4	obj/kernel.asm	/^c01041e4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01041e7	obj/kernel.asm	/^c01041e7:	c9                   	leave  $/;"	l
c01041e8	obj/kernel.asm	/^c01041e8:	c3                   	ret    $/;"	l
c01041e9	obj/kernel.asm	/^c01041e9 <unmap_range>:$/;"	l
c01041e9	obj/kernel.asm	/^c01041e9:	55                   	push   %ebp$/;"	l
c01041ea	obj/kernel.asm	/^c01041ea:	89 e5                	mov    %esp,%ebp$/;"	l
c01041ec	obj/kernel.asm	/^c01041ec:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01041ef	obj/kernel.asm	/^c01041ef:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01041f2	obj/kernel.asm	/^c01041f2:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01041f7	obj/kernel.asm	/^c01041f7:	85 c0                	test   %eax,%eax$/;"	l
c01041f9	obj/kernel.asm	/^c01041f9:	75 0c                	jne    c0104207 <unmap_range+0x1e>$/;"	l
c01041fb	obj/kernel.asm	/^c01041fb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01041fe	obj/kernel.asm	/^c01041fe:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0104203	obj/kernel.asm	/^c0104203:	85 c0                	test   %eax,%eax$/;"	l
c0104205	obj/kernel.asm	/^c0104205:	74 19                	je     c0104220 <unmap_range+0x37>$/;"	l
c0104207	obj/kernel.asm	/^c0104207:	68 a8 c5 10 c0       	push   $0xc010c5a8$/;"	l
c010420c	obj/kernel.asm	/^c010420c:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104211	obj/kernel.asm	/^c0104211:	68 d6 01 00 00       	push   $0x1d6$/;"	l
c0104216	obj/kernel.asm	/^c0104216:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c010421b	obj/kernel.asm	/^c010421b:	e8 bf c1 ff ff       	call   c01003df <__panic>$/;"	l
c0104220	obj/kernel.asm	/^c0104220:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0104227	obj/kernel.asm	/^c0104227:	76 11                	jbe    c010423a <unmap_range+0x51>$/;"	l
c0104229	obj/kernel.asm	/^c0104229:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010422c	obj/kernel.asm	/^c010422c:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010422f	obj/kernel.asm	/^c010422f:	73 09                	jae    c010423a <unmap_range+0x51>$/;"	l
c0104231	obj/kernel.asm	/^c0104231:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c0104238	obj/kernel.asm	/^c0104238:	76 19                	jbe    c0104253 <unmap_range+0x6a>$/;"	l
c010423a	obj/kernel.asm	/^c010423a:	68 d1 c5 10 c0       	push   $0xc010c5d1$/;"	l
c010423f	obj/kernel.asm	/^c010423f:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104244	obj/kernel.asm	/^c0104244:	68 d7 01 00 00       	push   $0x1d7$/;"	l
c0104249	obj/kernel.asm	/^c0104249:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c010424e	obj/kernel.asm	/^c010424e:	e8 8c c1 ff ff       	call   c01003df <__panic>$/;"	l
c0104253	obj/kernel.asm	/^c0104253:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104256	obj/kernel.asm	/^c0104256:	6a 00                	push   $0x0$/;"	l
c0104258	obj/kernel.asm	/^c0104258:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010425b	obj/kernel.asm	/^c010425b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010425e	obj/kernel.asm	/^c010425e:	e8 db fd ff ff       	call   c010403e <get_pte>$/;"	l
c0104263	obj/kernel.asm	/^c0104263:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104266	obj/kernel.asm	/^c0104266:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104269	obj/kernel.asm	/^c0104269:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010426d	obj/kernel.asm	/^c010426d:	75 18                	jne    c0104287 <unmap_range+0x9e>$/;"	l
c010426f	obj/kernel.asm	/^c010426f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104272	obj/kernel.asm	/^c0104272:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c0104277	obj/kernel.asm	/^c0104277:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010427a	obj/kernel.asm	/^c010427a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010427d	obj/kernel.asm	/^c010427d:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0104282	obj/kernel.asm	/^c0104282:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0104285	obj/kernel.asm	/^c0104285:	eb 24                	jmp    c01042ab <unmap_range+0xc2>$/;"	l
c0104287	obj/kernel.asm	/^c0104287:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010428a	obj/kernel.asm	/^c010428a:	8b 00                	mov    (%eax),%eax$/;"	l
c010428c	obj/kernel.asm	/^c010428c:	85 c0                	test   %eax,%eax$/;"	l
c010428e	obj/kernel.asm	/^c010428e:	74 14                	je     c01042a4 <unmap_range+0xbb>$/;"	l
c0104290	obj/kernel.asm	/^c0104290:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104293	obj/kernel.asm	/^c0104293:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104296	obj/kernel.asm	/^c0104296:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104299	obj/kernel.asm	/^c0104299:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010429c	obj/kernel.asm	/^c010429c:	e8 e2 fe ff ff       	call   c0104183 <page_remove_pte>$/;"	l
c01042a1	obj/kernel.asm	/^c01042a1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01042a4	obj/kernel.asm	/^c01042a4:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c01042ab	obj/kernel.asm	/^c01042ab:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01042af	obj/kernel.asm	/^c01042af:	74 08                	je     c01042b9 <unmap_range+0xd0>$/;"	l
c01042b1	obj/kernel.asm	/^c01042b1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01042b4	obj/kernel.asm	/^c01042b4:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c01042b7	obj/kernel.asm	/^c01042b7:	72 9a                	jb     c0104253 <unmap_range+0x6a>$/;"	l
c01042b9	obj/kernel.asm	/^c01042b9:	c9                   	leave  $/;"	l
c01042ba	obj/kernel.asm	/^c01042ba:	c3                   	ret    $/;"	l
c01042bb	obj/kernel.asm	/^c01042bb <exit_range>:$/;"	l
c01042bb	obj/kernel.asm	/^c01042bb:	55                   	push   %ebp$/;"	l
c01042bc	obj/kernel.asm	/^c01042bc:	89 e5                	mov    %esp,%ebp$/;"	l
c01042be	obj/kernel.asm	/^c01042be:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01042c1	obj/kernel.asm	/^c01042c1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01042c4	obj/kernel.asm	/^c01042c4:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01042c9	obj/kernel.asm	/^c01042c9:	85 c0                	test   %eax,%eax$/;"	l
c01042cb	obj/kernel.asm	/^c01042cb:	75 0c                	jne    c01042d9 <exit_range+0x1e>$/;"	l
c01042cd	obj/kernel.asm	/^c01042cd:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01042d0	obj/kernel.asm	/^c01042d0:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01042d5	obj/kernel.asm	/^c01042d5:	85 c0                	test   %eax,%eax$/;"	l
c01042d7	obj/kernel.asm	/^c01042d7:	74 19                	je     c01042f2 <exit_range+0x37>$/;"	l
c01042d9	obj/kernel.asm	/^c01042d9:	68 a8 c5 10 c0       	push   $0xc010c5a8$/;"	l
c01042de	obj/kernel.asm	/^c01042de:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c01042e3	obj/kernel.asm	/^c01042e3:	68 e8 01 00 00       	push   $0x1e8$/;"	l
c01042e8	obj/kernel.asm	/^c01042e8:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c01042ed	obj/kernel.asm	/^c01042ed:	e8 ed c0 ff ff       	call   c01003df <__panic>$/;"	l
c01042f2	obj/kernel.asm	/^c01042f2:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c01042f9	obj/kernel.asm	/^c01042f9:	76 11                	jbe    c010430c <exit_range+0x51>$/;"	l
c01042fb	obj/kernel.asm	/^c01042fb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01042fe	obj/kernel.asm	/^c01042fe:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0104301	obj/kernel.asm	/^c0104301:	73 09                	jae    c010430c <exit_range+0x51>$/;"	l
c0104303	obj/kernel.asm	/^c0104303:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c010430a	obj/kernel.asm	/^c010430a:	76 19                	jbe    c0104325 <exit_range+0x6a>$/;"	l
c010430c	obj/kernel.asm	/^c010430c:	68 d1 c5 10 c0       	push   $0xc010c5d1$/;"	l
c0104311	obj/kernel.asm	/^c0104311:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104316	obj/kernel.asm	/^c0104316:	68 e9 01 00 00       	push   $0x1e9$/;"	l
c010431b	obj/kernel.asm	/^c010431b:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104320	obj/kernel.asm	/^c0104320:	e8 ba c0 ff ff       	call   c01003df <__panic>$/;"	l
c0104325	obj/kernel.asm	/^c0104325:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104328	obj/kernel.asm	/^c0104328:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010432b	obj/kernel.asm	/^c010432b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010432e	obj/kernel.asm	/^c010432e:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0104333	obj/kernel.asm	/^c0104333:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0104336	obj/kernel.asm	/^c0104336:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104339	obj/kernel.asm	/^c0104339:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c010433c	obj/kernel.asm	/^c010433c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010433f	obj/kernel.asm	/^c010433f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104342	obj/kernel.asm	/^c0104342:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0104349	obj/kernel.asm	/^c0104349:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010434c	obj/kernel.asm	/^c010434c:	01 d0                	add    %edx,%eax$/;"	l
c010434e	obj/kernel.asm	/^c010434e:	8b 00                	mov    (%eax),%eax$/;"	l
c0104350	obj/kernel.asm	/^c0104350:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104353	obj/kernel.asm	/^c0104353:	85 c0                	test   %eax,%eax$/;"	l
c0104355	obj/kernel.asm	/^c0104355:	74 40                	je     c0104397 <exit_range+0xdc>$/;"	l
c0104357	obj/kernel.asm	/^c0104357:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010435a	obj/kernel.asm	/^c010435a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0104361	obj/kernel.asm	/^c0104361:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104364	obj/kernel.asm	/^c0104364:	01 d0                	add    %edx,%eax$/;"	l
c0104366	obj/kernel.asm	/^c0104366:	8b 00                	mov    (%eax),%eax$/;"	l
c0104368	obj/kernel.asm	/^c0104368:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010436b	obj/kernel.asm	/^c010436b:	50                   	push   %eax$/;"	l
c010436c	obj/kernel.asm	/^c010436c:	e8 c1 f3 ff ff       	call   c0103732 <pde2page>$/;"	l
c0104371	obj/kernel.asm	/^c0104371:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104374	obj/kernel.asm	/^c0104374:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104377	obj/kernel.asm	/^c0104377:	6a 01                	push   $0x1$/;"	l
c0104379	obj/kernel.asm	/^c0104379:	50                   	push   %eax$/;"	l
c010437a	obj/kernel.asm	/^c010437a:	e8 42 f6 ff ff       	call   c01039c1 <free_pages>$/;"	l
c010437f	obj/kernel.asm	/^c010437f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104382	obj/kernel.asm	/^c0104382:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104385	obj/kernel.asm	/^c0104385:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010438c	obj/kernel.asm	/^c010438c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010438f	obj/kernel.asm	/^c010438f:	01 d0                	add    %edx,%eax$/;"	l
c0104391	obj/kernel.asm	/^c0104391:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0104397	obj/kernel.asm	/^c0104397:	81 45 0c 00 00 40 00 	addl   $0x400000,0xc(%ebp)$/;"	l
c010439e	obj/kernel.asm	/^c010439e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01043a2	obj/kernel.asm	/^c01043a2:	74 08                	je     c01043ac <exit_range+0xf1>$/;"	l
c01043a4	obj/kernel.asm	/^c01043a4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01043a7	obj/kernel.asm	/^c01043a7:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c01043aa	obj/kernel.asm	/^c01043aa:	72 8a                	jb     c0104336 <exit_range+0x7b>$/;"	l
c01043ac	obj/kernel.asm	/^c01043ac:	c9                   	leave  $/;"	l
c01043ad	obj/kernel.asm	/^c01043ad:	c3                   	ret    $/;"	l
c01043ae	obj/kernel.asm	/^c01043ae <copy_range>:$/;"	l
c01043ae	obj/kernel.asm	/^c01043ae:	55                   	push   %ebp$/;"	l
c01043af	obj/kernel.asm	/^c01043af:	89 e5                	mov    %esp,%ebp$/;"	l
c01043b1	obj/kernel.asm	/^c01043b1:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01043b4	obj/kernel.asm	/^c01043b4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01043b7	obj/kernel.asm	/^c01043b7:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01043bc	obj/kernel.asm	/^c01043bc:	85 c0                	test   %eax,%eax$/;"	l
c01043be	obj/kernel.asm	/^c01043be:	75 0c                	jne    c01043cc <copy_range+0x1e>$/;"	l
c01043c0	obj/kernel.asm	/^c01043c0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01043c3	obj/kernel.asm	/^c01043c3:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01043c8	obj/kernel.asm	/^c01043c8:	85 c0                	test   %eax,%eax$/;"	l
c01043ca	obj/kernel.asm	/^c01043ca:	74 19                	je     c01043e5 <copy_range+0x37>$/;"	l
c01043cc	obj/kernel.asm	/^c01043cc:	68 a8 c5 10 c0       	push   $0xc010c5a8$/;"	l
c01043d1	obj/kernel.asm	/^c01043d1:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c01043d6	obj/kernel.asm	/^c01043d6:	68 fe 01 00 00       	push   $0x1fe$/;"	l
c01043db	obj/kernel.asm	/^c01043db:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c01043e0	obj/kernel.asm	/^c01043e0:	e8 fa bf ff ff       	call   c01003df <__panic>$/;"	l
c01043e5	obj/kernel.asm	/^c01043e5:	81 7d 10 ff ff 1f 00 	cmpl   $0x1fffff,0x10(%ebp)$/;"	l
c01043ec	obj/kernel.asm	/^c01043ec:	76 11                	jbe    c01043ff <copy_range+0x51>$/;"	l
c01043ee	obj/kernel.asm	/^c01043ee:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01043f1	obj/kernel.asm	/^c01043f1:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c01043f4	obj/kernel.asm	/^c01043f4:	73 09                	jae    c01043ff <copy_range+0x51>$/;"	l
c01043f6	obj/kernel.asm	/^c01043f6:	81 7d 14 00 00 00 b0 	cmpl   $0xb0000000,0x14(%ebp)$/;"	l
c01043fd	obj/kernel.asm	/^c01043fd:	76 19                	jbe    c0104418 <copy_range+0x6a>$/;"	l
c01043ff	obj/kernel.asm	/^c01043ff:	68 d1 c5 10 c0       	push   $0xc010c5d1$/;"	l
c0104404	obj/kernel.asm	/^c0104404:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104409	obj/kernel.asm	/^c0104409:	68 ff 01 00 00       	push   $0x1ff$/;"	l
c010440e	obj/kernel.asm	/^c010440e:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104413	obj/kernel.asm	/^c0104413:	e8 c7 bf ff ff       	call   c01003df <__panic>$/;"	l
c0104418	obj/kernel.asm	/^c0104418:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010441b	obj/kernel.asm	/^c010441b:	6a 00                	push   $0x0$/;"	l
c010441d	obj/kernel.asm	/^c010441d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0104420	obj/kernel.asm	/^c0104420:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104423	obj/kernel.asm	/^c0104423:	e8 16 fc ff ff       	call   c010403e <get_pte>$/;"	l
c0104428	obj/kernel.asm	/^c0104428:	83 c4 10             	add    $0x10,%esp$/;"	l
c010442b	obj/kernel.asm	/^c010442b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010442e	obj/kernel.asm	/^c010442e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104432	obj/kernel.asm	/^c0104432:	75 1b                	jne    c010444f <copy_range+0xa1>$/;"	l
c0104434	obj/kernel.asm	/^c0104434:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104437	obj/kernel.asm	/^c0104437:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c010443c	obj/kernel.asm	/^c010443c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010443f	obj/kernel.asm	/^c010443f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104442	obj/kernel.asm	/^c0104442:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0104447	obj/kernel.asm	/^c0104447:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c010444a	obj/kernel.asm	/^c010444a:	e9 21 01 00 00       	jmp    c0104570 <copy_range+0x1c2>$/;"	l
c010444f	obj/kernel.asm	/^c010444f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104452	obj/kernel.asm	/^c0104452:	8b 00                	mov    (%eax),%eax$/;"	l
c0104454	obj/kernel.asm	/^c0104454:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104457	obj/kernel.asm	/^c0104457:	85 c0                	test   %eax,%eax$/;"	l
c0104459	obj/kernel.asm	/^c0104459:	0f 84 0a 01 00 00    	je     c0104569 <copy_range+0x1bb>$/;"	l
c010445f	obj/kernel.asm	/^c010445f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104462	obj/kernel.asm	/^c0104462:	6a 01                	push   $0x1$/;"	l
c0104464	obj/kernel.asm	/^c0104464:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0104467	obj/kernel.asm	/^c0104467:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010446a	obj/kernel.asm	/^c010446a:	e8 cf fb ff ff       	call   c010403e <get_pte>$/;"	l
c010446f	obj/kernel.asm	/^c010446f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104472	obj/kernel.asm	/^c0104472:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104475	obj/kernel.asm	/^c0104475:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0104479	obj/kernel.asm	/^c0104479:	75 0a                	jne    c0104485 <copy_range+0xd7>$/;"	l
c010447b	obj/kernel.asm	/^c010447b:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0104480	obj/kernel.asm	/^c0104480:	e9 02 01 00 00       	jmp    c0104587 <copy_range+0x1d9>$/;"	l
c0104485	obj/kernel.asm	/^c0104485:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104488	obj/kernel.asm	/^c0104488:	8b 00                	mov    (%eax),%eax$/;"	l
c010448a	obj/kernel.asm	/^c010448a:	83 e0 07             	and    $0x7,%eax$/;"	l
c010448d	obj/kernel.asm	/^c010448d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104490	obj/kernel.asm	/^c0104490:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104493	obj/kernel.asm	/^c0104493:	8b 00                	mov    (%eax),%eax$/;"	l
c0104495	obj/kernel.asm	/^c0104495:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104498	obj/kernel.asm	/^c0104498:	50                   	push   %eax$/;"	l
c0104499	obj/kernel.asm	/^c0104499:	e8 5a f2 ff ff       	call   c01036f8 <pte2page>$/;"	l
c010449e	obj/kernel.asm	/^c010449e:	83 c4 10             	add    $0x10,%esp$/;"	l
c01044a1	obj/kernel.asm	/^c01044a1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01044a4	obj/kernel.asm	/^c01044a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01044a7	obj/kernel.asm	/^c01044a7:	6a 01                	push   $0x1$/;"	l
c01044a9	obj/kernel.asm	/^c01044a9:	e8 a7 f4 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c01044ae	obj/kernel.asm	/^c01044ae:	83 c4 10             	add    $0x10,%esp$/;"	l
c01044b1	obj/kernel.asm	/^c01044b1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01044b4	obj/kernel.asm	/^c01044b4:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01044b8	obj/kernel.asm	/^c01044b8:	75 19                	jne    c01044d3 <copy_range+0x125>$/;"	l
c01044ba	obj/kernel.asm	/^c01044ba:	68 e9 c5 10 c0       	push   $0xc010c5e9$/;"	l
c01044bf	obj/kernel.asm	/^c01044bf:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c01044c4	obj/kernel.asm	/^c01044c4:	68 12 02 00 00       	push   $0x212$/;"	l
c01044c9	obj/kernel.asm	/^c01044c9:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c01044ce	obj/kernel.asm	/^c01044ce:	e8 0c bf ff ff       	call   c01003df <__panic>$/;"	l
c01044d3	obj/kernel.asm	/^c01044d3:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01044d7	obj/kernel.asm	/^c01044d7:	75 19                	jne    c01044f2 <copy_range+0x144>$/;"	l
c01044d9	obj/kernel.asm	/^c01044d9:	68 f4 c5 10 c0       	push   $0xc010c5f4$/;"	l
c01044de	obj/kernel.asm	/^c01044de:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c01044e3	obj/kernel.asm	/^c01044e3:	68 13 02 00 00       	push   $0x213$/;"	l
c01044e8	obj/kernel.asm	/^c01044e8:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c01044ed	obj/kernel.asm	/^c01044ed:	e8 ed be ff ff       	call   c01003df <__panic>$/;"	l
c01044f2	obj/kernel.asm	/^c01044f2:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c01044f9	obj/kernel.asm	/^c01044f9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01044fc	obj/kernel.asm	/^c01044fc:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01044ff	obj/kernel.asm	/^c01044ff:	e8 af f1 ff ff       	call   c01036b3 <page2kva>$/;"	l
c0104504	obj/kernel.asm	/^c0104504:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104507	obj/kernel.asm	/^c0104507:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010450a	obj/kernel.asm	/^c010450a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010450d	obj/kernel.asm	/^c010450d:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104510	obj/kernel.asm	/^c0104510:	e8 9e f1 ff ff       	call   c01036b3 <page2kva>$/;"	l
c0104515	obj/kernel.asm	/^c0104515:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104518	obj/kernel.asm	/^c0104518:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010451b	obj/kernel.asm	/^c010451b:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010451e	obj/kernel.asm	/^c010451e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0104521	obj/kernel.asm	/^c0104521:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104524	obj/kernel.asm	/^c0104524:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104529	obj/kernel.asm	/^c0104529:	52                   	push   %edx$/;"	l
c010452a	obj/kernel.asm	/^c010452a:	50                   	push   %eax$/;"	l
c010452b	obj/kernel.asm	/^c010452b:	e8 f6 6d 00 00       	call   c010b326 <memcpy>$/;"	l
c0104530	obj/kernel.asm	/^c0104530:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104533	obj/kernel.asm	/^c0104533:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0104536	obj/kernel.asm	/^c0104536:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0104539	obj/kernel.asm	/^c0104539:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010453c	obj/kernel.asm	/^c010453c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010453f	obj/kernel.asm	/^c010453f:	e8 7d 00 00 00       	call   c01045c1 <page_insert>$/;"	l
c0104544	obj/kernel.asm	/^c0104544:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104547	obj/kernel.asm	/^c0104547:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010454a	obj/kernel.asm	/^c010454a:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010454e	obj/kernel.asm	/^c010454e:	74 19                	je     c0104569 <copy_range+0x1bb>$/;"	l
c0104550	obj/kernel.asm	/^c0104550:	68 00 c6 10 c0       	push   $0xc010c600$/;"	l
c0104555	obj/kernel.asm	/^c0104555:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c010455a	obj/kernel.asm	/^c010455a:	68 29 02 00 00       	push   $0x229$/;"	l
c010455f	obj/kernel.asm	/^c010455f:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104564	obj/kernel.asm	/^c0104564:	e8 76 be ff ff       	call   c01003df <__panic>$/;"	l
c0104569	obj/kernel.asm	/^c0104569:	81 45 10 00 10 00 00 	addl   $0x1000,0x10(%ebp)$/;"	l
c0104570	obj/kernel.asm	/^c0104570:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0104574	obj/kernel.asm	/^c0104574:	74 0c                	je     c0104582 <copy_range+0x1d4>$/;"	l
c0104576	obj/kernel.asm	/^c0104576:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104579	obj/kernel.asm	/^c0104579:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c010457c	obj/kernel.asm	/^c010457c:	0f 82 96 fe ff ff    	jb     c0104418 <copy_range+0x6a>$/;"	l
c0104582	obj/kernel.asm	/^c0104582:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104587	obj/kernel.asm	/^c0104587:	c9                   	leave  $/;"	l
c0104588	obj/kernel.asm	/^c0104588:	c3                   	ret    $/;"	l
c0104589	obj/kernel.asm	/^c0104589 <page_remove>:$/;"	l
c0104589	obj/kernel.asm	/^c0104589:	55                   	push   %ebp$/;"	l
c010458a	obj/kernel.asm	/^c010458a:	89 e5                	mov    %esp,%ebp$/;"	l
c010458c	obj/kernel.asm	/^c010458c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010458f	obj/kernel.asm	/^c010458f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104592	obj/kernel.asm	/^c0104592:	6a 00                	push   $0x0$/;"	l
c0104594	obj/kernel.asm	/^c0104594:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104597	obj/kernel.asm	/^c0104597:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010459a	obj/kernel.asm	/^c010459a:	e8 9f fa ff ff       	call   c010403e <get_pte>$/;"	l
c010459f	obj/kernel.asm	/^c010459f:	83 c4 10             	add    $0x10,%esp$/;"	l
c01045a2	obj/kernel.asm	/^c01045a2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01045a5	obj/kernel.asm	/^c01045a5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01045a9	obj/kernel.asm	/^c01045a9:	74 14                	je     c01045bf <page_remove+0x36>$/;"	l
c01045ab	obj/kernel.asm	/^c01045ab:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01045ae	obj/kernel.asm	/^c01045ae:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01045b1	obj/kernel.asm	/^c01045b1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01045b4	obj/kernel.asm	/^c01045b4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01045b7	obj/kernel.asm	/^c01045b7:	e8 c7 fb ff ff       	call   c0104183 <page_remove_pte>$/;"	l
c01045bc	obj/kernel.asm	/^c01045bc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01045bf	obj/kernel.asm	/^c01045bf:	c9                   	leave  $/;"	l
c01045c0	obj/kernel.asm	/^c01045c0:	c3                   	ret    $/;"	l
c01045c1	obj/kernel.asm	/^c01045c1 <page_insert>:$/;"	l
c01045c1	obj/kernel.asm	/^c01045c1:	55                   	push   %ebp$/;"	l
c01045c2	obj/kernel.asm	/^c01045c2:	89 e5                	mov    %esp,%ebp$/;"	l
c01045c4	obj/kernel.asm	/^c01045c4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01045c7	obj/kernel.asm	/^c01045c7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01045ca	obj/kernel.asm	/^c01045ca:	6a 01                	push   $0x1$/;"	l
c01045cc	obj/kernel.asm	/^c01045cc:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01045cf	obj/kernel.asm	/^c01045cf:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01045d2	obj/kernel.asm	/^c01045d2:	e8 67 fa ff ff       	call   c010403e <get_pte>$/;"	l
c01045d7	obj/kernel.asm	/^c01045d7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01045da	obj/kernel.asm	/^c01045da:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01045dd	obj/kernel.asm	/^c01045dd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01045e1	obj/kernel.asm	/^c01045e1:	75 0a                	jne    c01045ed <page_insert+0x2c>$/;"	l
c01045e3	obj/kernel.asm	/^c01045e3:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01045e8	obj/kernel.asm	/^c01045e8:	e9 8b 00 00 00       	jmp    c0104678 <page_insert+0xb7>$/;"	l
c01045ed	obj/kernel.asm	/^c01045ed:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01045f0	obj/kernel.asm	/^c01045f0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01045f3	obj/kernel.asm	/^c01045f3:	e8 6d f1 ff ff       	call   c0103765 <page_ref_inc>$/;"	l
c01045f8	obj/kernel.asm	/^c01045f8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01045fb	obj/kernel.asm	/^c01045fb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01045fe	obj/kernel.asm	/^c01045fe:	8b 00                	mov    (%eax),%eax$/;"	l
c0104600	obj/kernel.asm	/^c0104600:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104603	obj/kernel.asm	/^c0104603:	85 c0                	test   %eax,%eax$/;"	l
c0104605	obj/kernel.asm	/^c0104605:	74 40                	je     c0104647 <page_insert+0x86>$/;"	l
c0104607	obj/kernel.asm	/^c0104607:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010460a	obj/kernel.asm	/^c010460a:	8b 00                	mov    (%eax),%eax$/;"	l
c010460c	obj/kernel.asm	/^c010460c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010460f	obj/kernel.asm	/^c010460f:	50                   	push   %eax$/;"	l
c0104610	obj/kernel.asm	/^c0104610:	e8 e3 f0 ff ff       	call   c01036f8 <pte2page>$/;"	l
c0104615	obj/kernel.asm	/^c0104615:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104618	obj/kernel.asm	/^c0104618:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010461b	obj/kernel.asm	/^c010461b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010461e	obj/kernel.asm	/^c010461e:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0104621	obj/kernel.asm	/^c0104621:	75 10                	jne    c0104633 <page_insert+0x72>$/;"	l
c0104623	obj/kernel.asm	/^c0104623:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104626	obj/kernel.asm	/^c0104626:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104629	obj/kernel.asm	/^c0104629:	e8 4e f1 ff ff       	call   c010377c <page_ref_dec>$/;"	l
c010462e	obj/kernel.asm	/^c010462e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104631	obj/kernel.asm	/^c0104631:	eb 14                	jmp    c0104647 <page_insert+0x86>$/;"	l
c0104633	obj/kernel.asm	/^c0104633:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104636	obj/kernel.asm	/^c0104636:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104639	obj/kernel.asm	/^c0104639:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010463c	obj/kernel.asm	/^c010463c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010463f	obj/kernel.asm	/^c010463f:	e8 3f fb ff ff       	call   c0104183 <page_remove_pte>$/;"	l
c0104644	obj/kernel.asm	/^c0104644:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104647	obj/kernel.asm	/^c0104647:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010464a	obj/kernel.asm	/^c010464a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010464d	obj/kernel.asm	/^c010464d:	e8 11 f0 ff ff       	call   c0103663 <page2pa>$/;"	l
c0104652	obj/kernel.asm	/^c0104652:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104655	obj/kernel.asm	/^c0104655:	0b 45 14             	or     0x14(%ebp),%eax$/;"	l
c0104658	obj/kernel.asm	/^c0104658:	83 c8 01             	or     $0x1,%eax$/;"	l
c010465b	obj/kernel.asm	/^c010465b:	89 c2                	mov    %eax,%edx$/;"	l
c010465d	obj/kernel.asm	/^c010465d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104660	obj/kernel.asm	/^c0104660:	89 10                	mov    %edx,(%eax)$/;"	l
c0104662	obj/kernel.asm	/^c0104662:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104665	obj/kernel.asm	/^c0104665:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0104668	obj/kernel.asm	/^c0104668:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010466b	obj/kernel.asm	/^c010466b:	e8 0a 00 00 00       	call   c010467a <tlb_invalidate>$/;"	l
c0104670	obj/kernel.asm	/^c0104670:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104673	obj/kernel.asm	/^c0104673:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104678	obj/kernel.asm	/^c0104678:	c9                   	leave  $/;"	l
c0104679	obj/kernel.asm	/^c0104679:	c3                   	ret    $/;"	l
c010467a	obj/kernel.asm	/^c010467a <tlb_invalidate>:$/;"	l
c010467a	obj/kernel.asm	/^c010467a:	55                   	push   %ebp$/;"	l
c010467b	obj/kernel.asm	/^c010467b:	89 e5                	mov    %esp,%ebp$/;"	l
c010467d	obj/kernel.asm	/^c010467d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104680	obj/kernel.asm	/^c0104680:	0f 20 d8             	mov    %cr3,%eax$/;"	l
c0104683	obj/kernel.asm	/^c0104683:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104686	obj/kernel.asm	/^c0104686:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0104689	obj/kernel.asm	/^c0104689:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010468c	obj/kernel.asm	/^c010468c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010468f	obj/kernel.asm	/^c010468f:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0104696	obj/kernel.asm	/^c0104696:	77 17                	ja     c01046af <tlb_invalidate+0x35>$/;"	l
c0104698	obj/kernel.asm	/^c0104698:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010469b	obj/kernel.asm	/^c010469b:	68 24 c5 10 c0       	push   $0xc010c524$/;"	l
c01046a0	obj/kernel.asm	/^c01046a0:	68 5a 02 00 00       	push   $0x25a$/;"	l
c01046a5	obj/kernel.asm	/^c01046a5:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c01046aa	obj/kernel.asm	/^c01046aa:	e8 30 bd ff ff       	call   c01003df <__panic>$/;"	l
c01046af	obj/kernel.asm	/^c01046af:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01046b2	obj/kernel.asm	/^c01046b2:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c01046b7	obj/kernel.asm	/^c01046b7:	39 c2                	cmp    %eax,%edx$/;"	l
c01046b9	obj/kernel.asm	/^c01046b9:	75 0c                	jne    c01046c7 <tlb_invalidate+0x4d>$/;"	l
c01046bb	obj/kernel.asm	/^c01046bb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01046be	obj/kernel.asm	/^c01046be:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01046c1	obj/kernel.asm	/^c01046c1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01046c4	obj/kernel.asm	/^c01046c4:	0f 01 38             	invlpg (%eax)$/;"	l
c01046c7	obj/kernel.asm	/^c01046c7:	c9                   	leave  $/;"	l
c01046c8	obj/kernel.asm	/^c01046c8:	c3                   	ret    $/;"	l
c01046c9	obj/kernel.asm	/^c01046c9 <pgdir_alloc_page>:$/;"	l
c01046c9	obj/kernel.asm	/^c01046c9:	55                   	push   %ebp$/;"	l
c01046ca	obj/kernel.asm	/^c01046ca:	89 e5                	mov    %esp,%ebp$/;"	l
c01046cc	obj/kernel.asm	/^c01046cc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01046cf	obj/kernel.asm	/^c01046cf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01046d2	obj/kernel.asm	/^c01046d2:	6a 01                	push   $0x1$/;"	l
c01046d4	obj/kernel.asm	/^c01046d4:	e8 7c f2 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c01046d9	obj/kernel.asm	/^c01046d9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01046dc	obj/kernel.asm	/^c01046dc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01046df	obj/kernel.asm	/^c01046df:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01046e3	obj/kernel.asm	/^c01046e3:	0f 84 8c 00 00 00    	je     c0104775 <pgdir_alloc_page+0xac>$/;"	l
c01046e9	obj/kernel.asm	/^c01046e9:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01046ec	obj/kernel.asm	/^c01046ec:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01046ef	obj/kernel.asm	/^c01046ef:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01046f2	obj/kernel.asm	/^c01046f2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01046f5	obj/kernel.asm	/^c01046f5:	e8 c7 fe ff ff       	call   c01045c1 <page_insert>$/;"	l
c01046fa	obj/kernel.asm	/^c01046fa:	83 c4 10             	add    $0x10,%esp$/;"	l
c01046fd	obj/kernel.asm	/^c01046fd:	85 c0                	test   %eax,%eax$/;"	l
c01046ff	obj/kernel.asm	/^c01046ff:	74 17                	je     c0104718 <pgdir_alloc_page+0x4f>$/;"	l
c0104701	obj/kernel.asm	/^c0104701:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104704	obj/kernel.asm	/^c0104704:	6a 01                	push   $0x1$/;"	l
c0104706	obj/kernel.asm	/^c0104706:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104709	obj/kernel.asm	/^c0104709:	e8 b3 f2 ff ff       	call   c01039c1 <free_pages>$/;"	l
c010470e	obj/kernel.asm	/^c010470e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104711	obj/kernel.asm	/^c0104711:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104716	obj/kernel.asm	/^c0104716:	eb 60                	jmp    c0104778 <pgdir_alloc_page+0xaf>$/;"	l
c0104718	obj/kernel.asm	/^c0104718:	a1 30 ee 1a c0       	mov    0xc01aee30,%eax$/;"	l
c010471d	obj/kernel.asm	/^c010471d:	85 c0                	test   %eax,%eax$/;"	l
c010471f	obj/kernel.asm	/^c010471f:	74 54                	je     c0104775 <pgdir_alloc_page+0xac>$/;"	l
c0104721	obj/kernel.asm	/^c0104721:	a1 1c 0f 1b c0       	mov    0xc01b0f1c,%eax$/;"	l
c0104726	obj/kernel.asm	/^c0104726:	85 c0                	test   %eax,%eax$/;"	l
c0104728	obj/kernel.asm	/^c0104728:	74 4b                	je     c0104775 <pgdir_alloc_page+0xac>$/;"	l
c010472a	obj/kernel.asm	/^c010472a:	a1 1c 0f 1b c0       	mov    0xc01b0f1c,%eax$/;"	l
c010472f	obj/kernel.asm	/^c010472f:	6a 00                	push   $0x0$/;"	l
c0104731	obj/kernel.asm	/^c0104731:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104734	obj/kernel.asm	/^c0104734:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104737	obj/kernel.asm	/^c0104737:	50                   	push   %eax$/;"	l
c0104738	obj/kernel.asm	/^c0104738:	e8 24 1d 00 00       	call   c0106461 <swap_map_swappable>$/;"	l
c010473d	obj/kernel.asm	/^c010473d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104740	obj/kernel.asm	/^c0104740:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104743	obj/kernel.asm	/^c0104743:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0104746	obj/kernel.asm	/^c0104746:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c0104749	obj/kernel.asm	/^c0104749:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010474c	obj/kernel.asm	/^c010474c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010474f	obj/kernel.asm	/^c010474f:	e8 fa ef ff ff       	call   c010374e <page_ref>$/;"	l
c0104754	obj/kernel.asm	/^c0104754:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104757	obj/kernel.asm	/^c0104757:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010475a	obj/kernel.asm	/^c010475a:	74 19                	je     c0104775 <pgdir_alloc_page+0xac>$/;"	l
c010475c	obj/kernel.asm	/^c010475c:	68 09 c6 10 c0       	push   $0xc010c609$/;"	l
c0104761	obj/kernel.asm	/^c0104761:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104766	obj/kernel.asm	/^c0104766:	68 6e 02 00 00       	push   $0x26e$/;"	l
c010476b	obj/kernel.asm	/^c010476b:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104770	obj/kernel.asm	/^c0104770:	e8 6a bc ff ff       	call   c01003df <__panic>$/;"	l
c0104775	obj/kernel.asm	/^c0104775:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104778	obj/kernel.asm	/^c0104778:	c9                   	leave  $/;"	l
c0104779	obj/kernel.asm	/^c0104779:	c3                   	ret    $/;"	l
c010477a	obj/kernel.asm	/^c010477a <check_alloc_page>:$/;"	l
c010477a	obj/kernel.asm	/^c010477a:	55                   	push   %ebp$/;"	l
c010477b	obj/kernel.asm	/^c010477b:	89 e5                	mov    %esp,%ebp$/;"	l
c010477d	obj/kernel.asm	/^c010477d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104780	obj/kernel.asm	/^c0104780:	a1 10 0f 1b c0       	mov    0xc01b0f10,%eax$/;"	l
c0104785	obj/kernel.asm	/^c0104785:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0104788	obj/kernel.asm	/^c0104788:	ff d0                	call   *%eax$/;"	l
c010478a	obj/kernel.asm	/^c010478a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010478d	obj/kernel.asm	/^c010478d:	68 20 c6 10 c0       	push   $0xc010c620$/;"	l
c0104792	obj/kernel.asm	/^c0104792:	e8 e3 ba ff ff       	call   c010027a <cprintf>$/;"	l
c0104797	obj/kernel.asm	/^c0104797:	83 c4 10             	add    $0x10,%esp$/;"	l
c010479a	obj/kernel.asm	/^c010479a:	c9                   	leave  $/;"	l
c010479b	obj/kernel.asm	/^c010479b:	c3                   	ret    $/;"	l
c010479c	obj/kernel.asm	/^c010479c <check_pgdir>:$/;"	l
c010479c	obj/kernel.asm	/^c010479c:	55                   	push   %ebp$/;"	l
c010479d	obj/kernel.asm	/^c010479d:	89 e5                	mov    %esp,%ebp$/;"	l
c010479f	obj/kernel.asm	/^c010479f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01047a2	obj/kernel.asm	/^c01047a2:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c01047a7	obj/kernel.asm	/^c01047a7:	3d 00 80 03 00       	cmp    $0x38000,%eax$/;"	l
c01047ac	obj/kernel.asm	/^c01047ac:	76 19                	jbe    c01047c7 <check_pgdir+0x2b>$/;"	l
c01047ae	obj/kernel.asm	/^c01047ae:	68 3f c6 10 c0       	push   $0xc010c63f$/;"	l
c01047b3	obj/kernel.asm	/^c01047b3:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c01047b8	obj/kernel.asm	/^c01047b8:	68 86 02 00 00       	push   $0x286$/;"	l
c01047bd	obj/kernel.asm	/^c01047bd:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c01047c2	obj/kernel.asm	/^c01047c2:	e8 18 bc ff ff       	call   c01003df <__panic>$/;"	l
c01047c7	obj/kernel.asm	/^c01047c7:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c01047cc	obj/kernel.asm	/^c01047cc:	85 c0                	test   %eax,%eax$/;"	l
c01047ce	obj/kernel.asm	/^c01047ce:	74 0e                	je     c01047de <check_pgdir+0x42>$/;"	l
c01047d0	obj/kernel.asm	/^c01047d0:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c01047d5	obj/kernel.asm	/^c01047d5:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01047da	obj/kernel.asm	/^c01047da:	85 c0                	test   %eax,%eax$/;"	l
c01047dc	obj/kernel.asm	/^c01047dc:	74 19                	je     c01047f7 <check_pgdir+0x5b>$/;"	l
c01047de	obj/kernel.asm	/^c01047de:	68 5c c6 10 c0       	push   $0xc010c65c$/;"	l
c01047e3	obj/kernel.asm	/^c01047e3:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c01047e8	obj/kernel.asm	/^c01047e8:	68 87 02 00 00       	push   $0x287$/;"	l
c01047ed	obj/kernel.asm	/^c01047ed:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c01047f2	obj/kernel.asm	/^c01047f2:	e8 e8 bb ff ff       	call   c01003df <__panic>$/;"	l
c01047f7	obj/kernel.asm	/^c01047f7:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c01047fc	obj/kernel.asm	/^c01047fc:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01047ff	obj/kernel.asm	/^c01047ff:	6a 00                	push   $0x0$/;"	l
c0104801	obj/kernel.asm	/^c0104801:	6a 00                	push   $0x0$/;"	l
c0104803	obj/kernel.asm	/^c0104803:	50                   	push   %eax$/;"	l
c0104804	obj/kernel.asm	/^c0104804:	e8 24 f9 ff ff       	call   c010412d <get_page>$/;"	l
c0104809	obj/kernel.asm	/^c0104809:	83 c4 10             	add    $0x10,%esp$/;"	l
c010480c	obj/kernel.asm	/^c010480c:	85 c0                	test   %eax,%eax$/;"	l
c010480e	obj/kernel.asm	/^c010480e:	74 19                	je     c0104829 <check_pgdir+0x8d>$/;"	l
c0104810	obj/kernel.asm	/^c0104810:	68 94 c6 10 c0       	push   $0xc010c694$/;"	l
c0104815	obj/kernel.asm	/^c0104815:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c010481a	obj/kernel.asm	/^c010481a:	68 88 02 00 00       	push   $0x288$/;"	l
c010481f	obj/kernel.asm	/^c010481f:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104824	obj/kernel.asm	/^c0104824:	e8 b6 bb ff ff       	call   c01003df <__panic>$/;"	l
c0104829	obj/kernel.asm	/^c0104829:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010482c	obj/kernel.asm	/^c010482c:	6a 01                	push   $0x1$/;"	l
c010482e	obj/kernel.asm	/^c010482e:	e8 22 f1 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c0104833	obj/kernel.asm	/^c0104833:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104836	obj/kernel.asm	/^c0104836:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104839	obj/kernel.asm	/^c0104839:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c010483e	obj/kernel.asm	/^c010483e:	6a 00                	push   $0x0$/;"	l
c0104840	obj/kernel.asm	/^c0104840:	6a 00                	push   $0x0$/;"	l
c0104842	obj/kernel.asm	/^c0104842:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104845	obj/kernel.asm	/^c0104845:	50                   	push   %eax$/;"	l
c0104846	obj/kernel.asm	/^c0104846:	e8 76 fd ff ff       	call   c01045c1 <page_insert>$/;"	l
c010484b	obj/kernel.asm	/^c010484b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010484e	obj/kernel.asm	/^c010484e:	85 c0                	test   %eax,%eax$/;"	l
c0104850	obj/kernel.asm	/^c0104850:	74 19                	je     c010486b <check_pgdir+0xcf>$/;"	l
c0104852	obj/kernel.asm	/^c0104852:	68 bc c6 10 c0       	push   $0xc010c6bc$/;"	l
c0104857	obj/kernel.asm	/^c0104857:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c010485c	obj/kernel.asm	/^c010485c:	68 8c 02 00 00       	push   $0x28c$/;"	l
c0104861	obj/kernel.asm	/^c0104861:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104866	obj/kernel.asm	/^c0104866:	e8 74 bb ff ff       	call   c01003df <__panic>$/;"	l
c010486b	obj/kernel.asm	/^c010486b:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104870	obj/kernel.asm	/^c0104870:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104873	obj/kernel.asm	/^c0104873:	6a 00                	push   $0x0$/;"	l
c0104875	obj/kernel.asm	/^c0104875:	6a 00                	push   $0x0$/;"	l
c0104877	obj/kernel.asm	/^c0104877:	50                   	push   %eax$/;"	l
c0104878	obj/kernel.asm	/^c0104878:	e8 c1 f7 ff ff       	call   c010403e <get_pte>$/;"	l
c010487d	obj/kernel.asm	/^c010487d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104880	obj/kernel.asm	/^c0104880:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104883	obj/kernel.asm	/^c0104883:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104887	obj/kernel.asm	/^c0104887:	75 19                	jne    c01048a2 <check_pgdir+0x106>$/;"	l
c0104889	obj/kernel.asm	/^c0104889:	68 e8 c6 10 c0       	push   $0xc010c6e8$/;"	l
c010488e	obj/kernel.asm	/^c010488e:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104893	obj/kernel.asm	/^c0104893:	68 8f 02 00 00       	push   $0x28f$/;"	l
c0104898	obj/kernel.asm	/^c0104898:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c010489d	obj/kernel.asm	/^c010489d:	e8 3d bb ff ff       	call   c01003df <__panic>$/;"	l
c01048a2	obj/kernel.asm	/^c01048a2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01048a5	obj/kernel.asm	/^c01048a5:	8b 00                	mov    (%eax),%eax$/;"	l
c01048a7	obj/kernel.asm	/^c01048a7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01048aa	obj/kernel.asm	/^c01048aa:	50                   	push   %eax$/;"	l
c01048ab	obj/kernel.asm	/^c01048ab:	e8 c6 ed ff ff       	call   c0103676 <pa2page>$/;"	l
c01048b0	obj/kernel.asm	/^c01048b0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01048b3	obj/kernel.asm	/^c01048b3:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01048b6	obj/kernel.asm	/^c01048b6:	74 19                	je     c01048d1 <check_pgdir+0x135>$/;"	l
c01048b8	obj/kernel.asm	/^c01048b8:	68 15 c7 10 c0       	push   $0xc010c715$/;"	l
c01048bd	obj/kernel.asm	/^c01048bd:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c01048c2	obj/kernel.asm	/^c01048c2:	68 90 02 00 00       	push   $0x290$/;"	l
c01048c7	obj/kernel.asm	/^c01048c7:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c01048cc	obj/kernel.asm	/^c01048cc:	e8 0e bb ff ff       	call   c01003df <__panic>$/;"	l
c01048d1	obj/kernel.asm	/^c01048d1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01048d4	obj/kernel.asm	/^c01048d4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01048d7	obj/kernel.asm	/^c01048d7:	e8 72 ee ff ff       	call   c010374e <page_ref>$/;"	l
c01048dc	obj/kernel.asm	/^c01048dc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01048df	obj/kernel.asm	/^c01048df:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01048e2	obj/kernel.asm	/^c01048e2:	74 19                	je     c01048fd <check_pgdir+0x161>$/;"	l
c01048e4	obj/kernel.asm	/^c01048e4:	68 2a c7 10 c0       	push   $0xc010c72a$/;"	l
c01048e9	obj/kernel.asm	/^c01048e9:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c01048ee	obj/kernel.asm	/^c01048ee:	68 91 02 00 00       	push   $0x291$/;"	l
c01048f3	obj/kernel.asm	/^c01048f3:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c01048f8	obj/kernel.asm	/^c01048f8:	e8 e2 ba ff ff       	call   c01003df <__panic>$/;"	l
c01048fd	obj/kernel.asm	/^c01048fd:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104902	obj/kernel.asm	/^c0104902:	8b 00                	mov    (%eax),%eax$/;"	l
c0104904	obj/kernel.asm	/^c0104904:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104909	obj/kernel.asm	/^c0104909:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010490c	obj/kernel.asm	/^c010490c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010490f	obj/kernel.asm	/^c010490f:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104912	obj/kernel.asm	/^c0104912:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104915	obj/kernel.asm	/^c0104915:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c010491a	obj/kernel.asm	/^c010491a:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010491d	obj/kernel.asm	/^c010491d:	72 17                	jb     c0104936 <check_pgdir+0x19a>$/;"	l
c010491f	obj/kernel.asm	/^c010491f:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0104922	obj/kernel.asm	/^c0104922:	68 80 c4 10 c0       	push   $0xc010c480$/;"	l
c0104927	obj/kernel.asm	/^c0104927:	68 93 02 00 00       	push   $0x293$/;"	l
c010492c	obj/kernel.asm	/^c010492c:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104931	obj/kernel.asm	/^c0104931:	e8 a9 ba ff ff       	call   c01003df <__panic>$/;"	l
c0104936	obj/kernel.asm	/^c0104936:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104939	obj/kernel.asm	/^c0104939:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c010493e	obj/kernel.asm	/^c010493e:	83 c0 04             	add    $0x4,%eax$/;"	l
c0104941	obj/kernel.asm	/^c0104941:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104944	obj/kernel.asm	/^c0104944:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104949	obj/kernel.asm	/^c0104949:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010494c	obj/kernel.asm	/^c010494c:	6a 00                	push   $0x0$/;"	l
c010494e	obj/kernel.asm	/^c010494e:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104953	obj/kernel.asm	/^c0104953:	50                   	push   %eax$/;"	l
c0104954	obj/kernel.asm	/^c0104954:	e8 e5 f6 ff ff       	call   c010403e <get_pte>$/;"	l
c0104959	obj/kernel.asm	/^c0104959:	83 c4 10             	add    $0x10,%esp$/;"	l
c010495c	obj/kernel.asm	/^c010495c:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010495f	obj/kernel.asm	/^c010495f:	74 19                	je     c010497a <check_pgdir+0x1de>$/;"	l
c0104961	obj/kernel.asm	/^c0104961:	68 3c c7 10 c0       	push   $0xc010c73c$/;"	l
c0104966	obj/kernel.asm	/^c0104966:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c010496b	obj/kernel.asm	/^c010496b:	68 94 02 00 00       	push   $0x294$/;"	l
c0104970	obj/kernel.asm	/^c0104970:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104975	obj/kernel.asm	/^c0104975:	e8 65 ba ff ff       	call   c01003df <__panic>$/;"	l
c010497a	obj/kernel.asm	/^c010497a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010497d	obj/kernel.asm	/^c010497d:	6a 01                	push   $0x1$/;"	l
c010497f	obj/kernel.asm	/^c010497f:	e8 d1 ef ff ff       	call   c0103955 <alloc_pages>$/;"	l
c0104984	obj/kernel.asm	/^c0104984:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104987	obj/kernel.asm	/^c0104987:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010498a	obj/kernel.asm	/^c010498a:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c010498f	obj/kernel.asm	/^c010498f:	6a 06                	push   $0x6$/;"	l
c0104991	obj/kernel.asm	/^c0104991:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104996	obj/kernel.asm	/^c0104996:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104999	obj/kernel.asm	/^c0104999:	50                   	push   %eax$/;"	l
c010499a	obj/kernel.asm	/^c010499a:	e8 22 fc ff ff       	call   c01045c1 <page_insert>$/;"	l
c010499f	obj/kernel.asm	/^c010499f:	83 c4 10             	add    $0x10,%esp$/;"	l
c01049a2	obj/kernel.asm	/^c01049a2:	85 c0                	test   %eax,%eax$/;"	l
c01049a4	obj/kernel.asm	/^c01049a4:	74 19                	je     c01049bf <check_pgdir+0x223>$/;"	l
c01049a6	obj/kernel.asm	/^c01049a6:	68 64 c7 10 c0       	push   $0xc010c764$/;"	l
c01049ab	obj/kernel.asm	/^c01049ab:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c01049b0	obj/kernel.asm	/^c01049b0:	68 97 02 00 00       	push   $0x297$/;"	l
c01049b5	obj/kernel.asm	/^c01049b5:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c01049ba	obj/kernel.asm	/^c01049ba:	e8 20 ba ff ff       	call   c01003df <__panic>$/;"	l
c01049bf	obj/kernel.asm	/^c01049bf:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c01049c4	obj/kernel.asm	/^c01049c4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01049c7	obj/kernel.asm	/^c01049c7:	6a 00                	push   $0x0$/;"	l
c01049c9	obj/kernel.asm	/^c01049c9:	68 00 10 00 00       	push   $0x1000$/;"	l
c01049ce	obj/kernel.asm	/^c01049ce:	50                   	push   %eax$/;"	l
c01049cf	obj/kernel.asm	/^c01049cf:	e8 6a f6 ff ff       	call   c010403e <get_pte>$/;"	l
c01049d4	obj/kernel.asm	/^c01049d4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01049d7	obj/kernel.asm	/^c01049d7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01049da	obj/kernel.asm	/^c01049da:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01049de	obj/kernel.asm	/^c01049de:	75 19                	jne    c01049f9 <check_pgdir+0x25d>$/;"	l
c01049e0	obj/kernel.asm	/^c01049e0:	68 9c c7 10 c0       	push   $0xc010c79c$/;"	l
c01049e5	obj/kernel.asm	/^c01049e5:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c01049ea	obj/kernel.asm	/^c01049ea:	68 98 02 00 00       	push   $0x298$/;"	l
c01049ef	obj/kernel.asm	/^c01049ef:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c01049f4	obj/kernel.asm	/^c01049f4:	e8 e6 b9 ff ff       	call   c01003df <__panic>$/;"	l
c01049f9	obj/kernel.asm	/^c01049f9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01049fc	obj/kernel.asm	/^c01049fc:	8b 00                	mov    (%eax),%eax$/;"	l
c01049fe	obj/kernel.asm	/^c01049fe:	83 e0 04             	and    $0x4,%eax$/;"	l
c0104a01	obj/kernel.asm	/^c0104a01:	85 c0                	test   %eax,%eax$/;"	l
c0104a03	obj/kernel.asm	/^c0104a03:	75 19                	jne    c0104a1e <check_pgdir+0x282>$/;"	l
c0104a05	obj/kernel.asm	/^c0104a05:	68 cc c7 10 c0       	push   $0xc010c7cc$/;"	l
c0104a0a	obj/kernel.asm	/^c0104a0a:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104a0f	obj/kernel.asm	/^c0104a0f:	68 99 02 00 00       	push   $0x299$/;"	l
c0104a14	obj/kernel.asm	/^c0104a14:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104a19	obj/kernel.asm	/^c0104a19:	e8 c1 b9 ff ff       	call   c01003df <__panic>$/;"	l
c0104a1e	obj/kernel.asm	/^c0104a1e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a21	obj/kernel.asm	/^c0104a21:	8b 00                	mov    (%eax),%eax$/;"	l
c0104a23	obj/kernel.asm	/^c0104a23:	83 e0 02             	and    $0x2,%eax$/;"	l
c0104a26	obj/kernel.asm	/^c0104a26:	85 c0                	test   %eax,%eax$/;"	l
c0104a28	obj/kernel.asm	/^c0104a28:	75 19                	jne    c0104a43 <check_pgdir+0x2a7>$/;"	l
c0104a2a	obj/kernel.asm	/^c0104a2a:	68 da c7 10 c0       	push   $0xc010c7da$/;"	l
c0104a2f	obj/kernel.asm	/^c0104a2f:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104a34	obj/kernel.asm	/^c0104a34:	68 9a 02 00 00       	push   $0x29a$/;"	l
c0104a39	obj/kernel.asm	/^c0104a39:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104a3e	obj/kernel.asm	/^c0104a3e:	e8 9c b9 ff ff       	call   c01003df <__panic>$/;"	l
c0104a43	obj/kernel.asm	/^c0104a43:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104a48	obj/kernel.asm	/^c0104a48:	8b 00                	mov    (%eax),%eax$/;"	l
c0104a4a	obj/kernel.asm	/^c0104a4a:	83 e0 04             	and    $0x4,%eax$/;"	l
c0104a4d	obj/kernel.asm	/^c0104a4d:	85 c0                	test   %eax,%eax$/;"	l
c0104a4f	obj/kernel.asm	/^c0104a4f:	75 19                	jne    c0104a6a <check_pgdir+0x2ce>$/;"	l
c0104a51	obj/kernel.asm	/^c0104a51:	68 e8 c7 10 c0       	push   $0xc010c7e8$/;"	l
c0104a56	obj/kernel.asm	/^c0104a56:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104a5b	obj/kernel.asm	/^c0104a5b:	68 9b 02 00 00       	push   $0x29b$/;"	l
c0104a60	obj/kernel.asm	/^c0104a60:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104a65	obj/kernel.asm	/^c0104a65:	e8 75 b9 ff ff       	call   c01003df <__panic>$/;"	l
c0104a6a	obj/kernel.asm	/^c0104a6a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104a6d	obj/kernel.asm	/^c0104a6d:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104a70	obj/kernel.asm	/^c0104a70:	e8 d9 ec ff ff       	call   c010374e <page_ref>$/;"	l
c0104a75	obj/kernel.asm	/^c0104a75:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104a78	obj/kernel.asm	/^c0104a78:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104a7b	obj/kernel.asm	/^c0104a7b:	74 19                	je     c0104a96 <check_pgdir+0x2fa>$/;"	l
c0104a7d	obj/kernel.asm	/^c0104a7d:	68 fe c7 10 c0       	push   $0xc010c7fe$/;"	l
c0104a82	obj/kernel.asm	/^c0104a82:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104a87	obj/kernel.asm	/^c0104a87:	68 9c 02 00 00       	push   $0x29c$/;"	l
c0104a8c	obj/kernel.asm	/^c0104a8c:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104a91	obj/kernel.asm	/^c0104a91:	e8 49 b9 ff ff       	call   c01003df <__panic>$/;"	l
c0104a96	obj/kernel.asm	/^c0104a96:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104a9b	obj/kernel.asm	/^c0104a9b:	6a 00                	push   $0x0$/;"	l
c0104a9d	obj/kernel.asm	/^c0104a9d:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104aa2	obj/kernel.asm	/^c0104aa2:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104aa5	obj/kernel.asm	/^c0104aa5:	50                   	push   %eax$/;"	l
c0104aa6	obj/kernel.asm	/^c0104aa6:	e8 16 fb ff ff       	call   c01045c1 <page_insert>$/;"	l
c0104aab	obj/kernel.asm	/^c0104aab:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104aae	obj/kernel.asm	/^c0104aae:	85 c0                	test   %eax,%eax$/;"	l
c0104ab0	obj/kernel.asm	/^c0104ab0:	74 19                	je     c0104acb <check_pgdir+0x32f>$/;"	l
c0104ab2	obj/kernel.asm	/^c0104ab2:	68 10 c8 10 c0       	push   $0xc010c810$/;"	l
c0104ab7	obj/kernel.asm	/^c0104ab7:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104abc	obj/kernel.asm	/^c0104abc:	68 9e 02 00 00       	push   $0x29e$/;"	l
c0104ac1	obj/kernel.asm	/^c0104ac1:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104ac6	obj/kernel.asm	/^c0104ac6:	e8 14 b9 ff ff       	call   c01003df <__panic>$/;"	l
c0104acb	obj/kernel.asm	/^c0104acb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104ace	obj/kernel.asm	/^c0104ace:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104ad1	obj/kernel.asm	/^c0104ad1:	e8 78 ec ff ff       	call   c010374e <page_ref>$/;"	l
c0104ad6	obj/kernel.asm	/^c0104ad6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ad9	obj/kernel.asm	/^c0104ad9:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0104adc	obj/kernel.asm	/^c0104adc:	74 19                	je     c0104af7 <check_pgdir+0x35b>$/;"	l
c0104ade	obj/kernel.asm	/^c0104ade:	68 3c c8 10 c0       	push   $0xc010c83c$/;"	l
c0104ae3	obj/kernel.asm	/^c0104ae3:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104ae8	obj/kernel.asm	/^c0104ae8:	68 9f 02 00 00       	push   $0x29f$/;"	l
c0104aed	obj/kernel.asm	/^c0104aed:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104af2	obj/kernel.asm	/^c0104af2:	e8 e8 b8 ff ff       	call   c01003df <__panic>$/;"	l
c0104af7	obj/kernel.asm	/^c0104af7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104afa	obj/kernel.asm	/^c0104afa:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104afd	obj/kernel.asm	/^c0104afd:	e8 4c ec ff ff       	call   c010374e <page_ref>$/;"	l
c0104b02	obj/kernel.asm	/^c0104b02:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104b05	obj/kernel.asm	/^c0104b05:	85 c0                	test   %eax,%eax$/;"	l
c0104b07	obj/kernel.asm	/^c0104b07:	74 19                	je     c0104b22 <check_pgdir+0x386>$/;"	l
c0104b09	obj/kernel.asm	/^c0104b09:	68 4e c8 10 c0       	push   $0xc010c84e$/;"	l
c0104b0e	obj/kernel.asm	/^c0104b0e:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104b13	obj/kernel.asm	/^c0104b13:	68 a0 02 00 00       	push   $0x2a0$/;"	l
c0104b18	obj/kernel.asm	/^c0104b18:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104b1d	obj/kernel.asm	/^c0104b1d:	e8 bd b8 ff ff       	call   c01003df <__panic>$/;"	l
c0104b22	obj/kernel.asm	/^c0104b22:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104b27	obj/kernel.asm	/^c0104b27:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104b2a	obj/kernel.asm	/^c0104b2a:	6a 00                	push   $0x0$/;"	l
c0104b2c	obj/kernel.asm	/^c0104b2c:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104b31	obj/kernel.asm	/^c0104b31:	50                   	push   %eax$/;"	l
c0104b32	obj/kernel.asm	/^c0104b32:	e8 07 f5 ff ff       	call   c010403e <get_pte>$/;"	l
c0104b37	obj/kernel.asm	/^c0104b37:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104b3a	obj/kernel.asm	/^c0104b3a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104b3d	obj/kernel.asm	/^c0104b3d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104b41	obj/kernel.asm	/^c0104b41:	75 19                	jne    c0104b5c <check_pgdir+0x3c0>$/;"	l
c0104b43	obj/kernel.asm	/^c0104b43:	68 9c c7 10 c0       	push   $0xc010c79c$/;"	l
c0104b48	obj/kernel.asm	/^c0104b48:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104b4d	obj/kernel.asm	/^c0104b4d:	68 a1 02 00 00       	push   $0x2a1$/;"	l
c0104b52	obj/kernel.asm	/^c0104b52:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104b57	obj/kernel.asm	/^c0104b57:	e8 83 b8 ff ff       	call   c01003df <__panic>$/;"	l
c0104b5c	obj/kernel.asm	/^c0104b5c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b5f	obj/kernel.asm	/^c0104b5f:	8b 00                	mov    (%eax),%eax$/;"	l
c0104b61	obj/kernel.asm	/^c0104b61:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104b64	obj/kernel.asm	/^c0104b64:	50                   	push   %eax$/;"	l
c0104b65	obj/kernel.asm	/^c0104b65:	e8 0c eb ff ff       	call   c0103676 <pa2page>$/;"	l
c0104b6a	obj/kernel.asm	/^c0104b6a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104b6d	obj/kernel.asm	/^c0104b6d:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0104b70	obj/kernel.asm	/^c0104b70:	74 19                	je     c0104b8b <check_pgdir+0x3ef>$/;"	l
c0104b72	obj/kernel.asm	/^c0104b72:	68 15 c7 10 c0       	push   $0xc010c715$/;"	l
c0104b77	obj/kernel.asm	/^c0104b77:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104b7c	obj/kernel.asm	/^c0104b7c:	68 a2 02 00 00       	push   $0x2a2$/;"	l
c0104b81	obj/kernel.asm	/^c0104b81:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104b86	obj/kernel.asm	/^c0104b86:	e8 54 b8 ff ff       	call   c01003df <__panic>$/;"	l
c0104b8b	obj/kernel.asm	/^c0104b8b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104b8e	obj/kernel.asm	/^c0104b8e:	8b 00                	mov    (%eax),%eax$/;"	l
c0104b90	obj/kernel.asm	/^c0104b90:	83 e0 04             	and    $0x4,%eax$/;"	l
c0104b93	obj/kernel.asm	/^c0104b93:	85 c0                	test   %eax,%eax$/;"	l
c0104b95	obj/kernel.asm	/^c0104b95:	74 19                	je     c0104bb0 <check_pgdir+0x414>$/;"	l
c0104b97	obj/kernel.asm	/^c0104b97:	68 60 c8 10 c0       	push   $0xc010c860$/;"	l
c0104b9c	obj/kernel.asm	/^c0104b9c:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104ba1	obj/kernel.asm	/^c0104ba1:	68 a3 02 00 00       	push   $0x2a3$/;"	l
c0104ba6	obj/kernel.asm	/^c0104ba6:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104bab	obj/kernel.asm	/^c0104bab:	e8 2f b8 ff ff       	call   c01003df <__panic>$/;"	l
c0104bb0	obj/kernel.asm	/^c0104bb0:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104bb5	obj/kernel.asm	/^c0104bb5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104bb8	obj/kernel.asm	/^c0104bb8:	6a 00                	push   $0x0$/;"	l
c0104bba	obj/kernel.asm	/^c0104bba:	50                   	push   %eax$/;"	l
c0104bbb	obj/kernel.asm	/^c0104bbb:	e8 c9 f9 ff ff       	call   c0104589 <page_remove>$/;"	l
c0104bc0	obj/kernel.asm	/^c0104bc0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104bc3	obj/kernel.asm	/^c0104bc3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104bc6	obj/kernel.asm	/^c0104bc6:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104bc9	obj/kernel.asm	/^c0104bc9:	e8 80 eb ff ff       	call   c010374e <page_ref>$/;"	l
c0104bce	obj/kernel.asm	/^c0104bce:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104bd1	obj/kernel.asm	/^c0104bd1:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104bd4	obj/kernel.asm	/^c0104bd4:	74 19                	je     c0104bef <check_pgdir+0x453>$/;"	l
c0104bd6	obj/kernel.asm	/^c0104bd6:	68 2a c7 10 c0       	push   $0xc010c72a$/;"	l
c0104bdb	obj/kernel.asm	/^c0104bdb:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104be0	obj/kernel.asm	/^c0104be0:	68 a6 02 00 00       	push   $0x2a6$/;"	l
c0104be5	obj/kernel.asm	/^c0104be5:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104bea	obj/kernel.asm	/^c0104bea:	e8 f0 b7 ff ff       	call   c01003df <__panic>$/;"	l
c0104bef	obj/kernel.asm	/^c0104bef:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104bf2	obj/kernel.asm	/^c0104bf2:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104bf5	obj/kernel.asm	/^c0104bf5:	e8 54 eb ff ff       	call   c010374e <page_ref>$/;"	l
c0104bfa	obj/kernel.asm	/^c0104bfa:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104bfd	obj/kernel.asm	/^c0104bfd:	85 c0                	test   %eax,%eax$/;"	l
c0104bff	obj/kernel.asm	/^c0104bff:	74 19                	je     c0104c1a <check_pgdir+0x47e>$/;"	l
c0104c01	obj/kernel.asm	/^c0104c01:	68 4e c8 10 c0       	push   $0xc010c84e$/;"	l
c0104c06	obj/kernel.asm	/^c0104c06:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104c0b	obj/kernel.asm	/^c0104c0b:	68 a7 02 00 00       	push   $0x2a7$/;"	l
c0104c10	obj/kernel.asm	/^c0104c10:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104c15	obj/kernel.asm	/^c0104c15:	e8 c5 b7 ff ff       	call   c01003df <__panic>$/;"	l
c0104c1a	obj/kernel.asm	/^c0104c1a:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104c1f	obj/kernel.asm	/^c0104c1f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104c22	obj/kernel.asm	/^c0104c22:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104c27	obj/kernel.asm	/^c0104c27:	50                   	push   %eax$/;"	l
c0104c28	obj/kernel.asm	/^c0104c28:	e8 5c f9 ff ff       	call   c0104589 <page_remove>$/;"	l
c0104c2d	obj/kernel.asm	/^c0104c2d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c30	obj/kernel.asm	/^c0104c30:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104c33	obj/kernel.asm	/^c0104c33:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104c36	obj/kernel.asm	/^c0104c36:	e8 13 eb ff ff       	call   c010374e <page_ref>$/;"	l
c0104c3b	obj/kernel.asm	/^c0104c3b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c3e	obj/kernel.asm	/^c0104c3e:	85 c0                	test   %eax,%eax$/;"	l
c0104c40	obj/kernel.asm	/^c0104c40:	74 19                	je     c0104c5b <check_pgdir+0x4bf>$/;"	l
c0104c42	obj/kernel.asm	/^c0104c42:	68 75 c8 10 c0       	push   $0xc010c875$/;"	l
c0104c47	obj/kernel.asm	/^c0104c47:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104c4c	obj/kernel.asm	/^c0104c4c:	68 aa 02 00 00       	push   $0x2aa$/;"	l
c0104c51	obj/kernel.asm	/^c0104c51:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104c56	obj/kernel.asm	/^c0104c56:	e8 84 b7 ff ff       	call   c01003df <__panic>$/;"	l
c0104c5b	obj/kernel.asm	/^c0104c5b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104c5e	obj/kernel.asm	/^c0104c5e:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104c61	obj/kernel.asm	/^c0104c61:	e8 e8 ea ff ff       	call   c010374e <page_ref>$/;"	l
c0104c66	obj/kernel.asm	/^c0104c66:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c69	obj/kernel.asm	/^c0104c69:	85 c0                	test   %eax,%eax$/;"	l
c0104c6b	obj/kernel.asm	/^c0104c6b:	74 19                	je     c0104c86 <check_pgdir+0x4ea>$/;"	l
c0104c6d	obj/kernel.asm	/^c0104c6d:	68 4e c8 10 c0       	push   $0xc010c84e$/;"	l
c0104c72	obj/kernel.asm	/^c0104c72:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104c77	obj/kernel.asm	/^c0104c77:	68 ab 02 00 00       	push   $0x2ab$/;"	l
c0104c7c	obj/kernel.asm	/^c0104c7c:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104c81	obj/kernel.asm	/^c0104c81:	e8 59 b7 ff ff       	call   c01003df <__panic>$/;"	l
c0104c86	obj/kernel.asm	/^c0104c86:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104c8b	obj/kernel.asm	/^c0104c8b:	8b 00                	mov    (%eax),%eax$/;"	l
c0104c8d	obj/kernel.asm	/^c0104c8d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104c90	obj/kernel.asm	/^c0104c90:	50                   	push   %eax$/;"	l
c0104c91	obj/kernel.asm	/^c0104c91:	e8 e0 e9 ff ff       	call   c0103676 <pa2page>$/;"	l
c0104c96	obj/kernel.asm	/^c0104c96:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c99	obj/kernel.asm	/^c0104c99:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104c9c	obj/kernel.asm	/^c0104c9c:	50                   	push   %eax$/;"	l
c0104c9d	obj/kernel.asm	/^c0104c9d:	e8 ac ea ff ff       	call   c010374e <page_ref>$/;"	l
c0104ca2	obj/kernel.asm	/^c0104ca2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ca5	obj/kernel.asm	/^c0104ca5:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104ca8	obj/kernel.asm	/^c0104ca8:	74 19                	je     c0104cc3 <check_pgdir+0x527>$/;"	l
c0104caa	obj/kernel.asm	/^c0104caa:	68 88 c8 10 c0       	push   $0xc010c888$/;"	l
c0104caf	obj/kernel.asm	/^c0104caf:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104cb4	obj/kernel.asm	/^c0104cb4:	68 ad 02 00 00       	push   $0x2ad$/;"	l
c0104cb9	obj/kernel.asm	/^c0104cb9:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104cbe	obj/kernel.asm	/^c0104cbe:	e8 1c b7 ff ff       	call   c01003df <__panic>$/;"	l
c0104cc3	obj/kernel.asm	/^c0104cc3:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104cc8	obj/kernel.asm	/^c0104cc8:	8b 00                	mov    (%eax),%eax$/;"	l
c0104cca	obj/kernel.asm	/^c0104cca:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104ccd	obj/kernel.asm	/^c0104ccd:	50                   	push   %eax$/;"	l
c0104cce	obj/kernel.asm	/^c0104cce:	e8 a3 e9 ff ff       	call   c0103676 <pa2page>$/;"	l
c0104cd3	obj/kernel.asm	/^c0104cd3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104cd6	obj/kernel.asm	/^c0104cd6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104cd9	obj/kernel.asm	/^c0104cd9:	6a 01                	push   $0x1$/;"	l
c0104cdb	obj/kernel.asm	/^c0104cdb:	50                   	push   %eax$/;"	l
c0104cdc	obj/kernel.asm	/^c0104cdc:	e8 e0 ec ff ff       	call   c01039c1 <free_pages>$/;"	l
c0104ce1	obj/kernel.asm	/^c0104ce1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ce4	obj/kernel.asm	/^c0104ce4:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104ce9	obj/kernel.asm	/^c0104ce9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0104cef	obj/kernel.asm	/^c0104cef:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104cf2	obj/kernel.asm	/^c0104cf2:	68 ae c8 10 c0       	push   $0xc010c8ae$/;"	l
c0104cf7	obj/kernel.asm	/^c0104cf7:	e8 7e b5 ff ff       	call   c010027a <cprintf>$/;"	l
c0104cfc	obj/kernel.asm	/^c0104cfc:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104cff	obj/kernel.asm	/^c0104cff:	c9                   	leave  $/;"	l
c0104d00	obj/kernel.asm	/^c0104d00:	c3                   	ret    $/;"	l
c0104d01	obj/kernel.asm	/^c0104d01 <check_boot_pgdir>:$/;"	l
c0104d01	obj/kernel.asm	/^c0104d01:	55                   	push   %ebp$/;"	l
c0104d02	obj/kernel.asm	/^c0104d02:	89 e5                	mov    %esp,%ebp$/;"	l
c0104d04	obj/kernel.asm	/^c0104d04:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104d07	obj/kernel.asm	/^c0104d07:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0104d0e	obj/kernel.asm	/^c0104d0e:	e9 a3 00 00 00       	jmp    c0104db6 <check_boot_pgdir+0xb5>$/;"	l
c0104d13	obj/kernel.asm	/^c0104d13:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d16	obj/kernel.asm	/^c0104d16:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104d19	obj/kernel.asm	/^c0104d19:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104d1c	obj/kernel.asm	/^c0104d1c:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104d1f	obj/kernel.asm	/^c0104d1f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104d22	obj/kernel.asm	/^c0104d22:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c0104d27	obj/kernel.asm	/^c0104d27:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c0104d2a	obj/kernel.asm	/^c0104d2a:	72 17                	jb     c0104d43 <check_boot_pgdir+0x42>$/;"	l
c0104d2c	obj/kernel.asm	/^c0104d2c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0104d2f	obj/kernel.asm	/^c0104d2f:	68 80 c4 10 c0       	push   $0xc010c480$/;"	l
c0104d34	obj/kernel.asm	/^c0104d34:	68 b9 02 00 00       	push   $0x2b9$/;"	l
c0104d39	obj/kernel.asm	/^c0104d39:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104d3e	obj/kernel.asm	/^c0104d3e:	e8 9c b6 ff ff       	call   c01003df <__panic>$/;"	l
c0104d43	obj/kernel.asm	/^c0104d43:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104d46	obj/kernel.asm	/^c0104d46:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104d4b	obj/kernel.asm	/^c0104d4b:	89 c2                	mov    %eax,%edx$/;"	l
c0104d4d	obj/kernel.asm	/^c0104d4d:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104d52	obj/kernel.asm	/^c0104d52:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104d55	obj/kernel.asm	/^c0104d55:	6a 00                	push   $0x0$/;"	l
c0104d57	obj/kernel.asm	/^c0104d57:	52                   	push   %edx$/;"	l
c0104d58	obj/kernel.asm	/^c0104d58:	50                   	push   %eax$/;"	l
c0104d59	obj/kernel.asm	/^c0104d59:	e8 e0 f2 ff ff       	call   c010403e <get_pte>$/;"	l
c0104d5e	obj/kernel.asm	/^c0104d5e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104d61	obj/kernel.asm	/^c0104d61:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104d64	obj/kernel.asm	/^c0104d64:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0104d68	obj/kernel.asm	/^c0104d68:	75 19                	jne    c0104d83 <check_boot_pgdir+0x82>$/;"	l
c0104d6a	obj/kernel.asm	/^c0104d6a:	68 c8 c8 10 c0       	push   $0xc010c8c8$/;"	l
c0104d6f	obj/kernel.asm	/^c0104d6f:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104d74	obj/kernel.asm	/^c0104d74:	68 b9 02 00 00       	push   $0x2b9$/;"	l
c0104d79	obj/kernel.asm	/^c0104d79:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104d7e	obj/kernel.asm	/^c0104d7e:	e8 5c b6 ff ff       	call   c01003df <__panic>$/;"	l
c0104d83	obj/kernel.asm	/^c0104d83:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0104d86	obj/kernel.asm	/^c0104d86:	8b 00                	mov    (%eax),%eax$/;"	l
c0104d88	obj/kernel.asm	/^c0104d88:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104d8d	obj/kernel.asm	/^c0104d8d:	89 c2                	mov    %eax,%edx$/;"	l
c0104d8f	obj/kernel.asm	/^c0104d8f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104d92	obj/kernel.asm	/^c0104d92:	39 c2                	cmp    %eax,%edx$/;"	l
c0104d94	obj/kernel.asm	/^c0104d94:	74 19                	je     c0104daf <check_boot_pgdir+0xae>$/;"	l
c0104d96	obj/kernel.asm	/^c0104d96:	68 05 c9 10 c0       	push   $0xc010c905$/;"	l
c0104d9b	obj/kernel.asm	/^c0104d9b:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104da0	obj/kernel.asm	/^c0104da0:	68 ba 02 00 00       	push   $0x2ba$/;"	l
c0104da5	obj/kernel.asm	/^c0104da5:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104daa	obj/kernel.asm	/^c0104daa:	e8 30 b6 ff ff       	call   c01003df <__panic>$/;"	l
c0104daf	obj/kernel.asm	/^c0104daf:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
c0104db6	obj/kernel.asm	/^c0104db6:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0104db9	obj/kernel.asm	/^c0104db9:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c0104dbe	obj/kernel.asm	/^c0104dbe:	39 c2                	cmp    %eax,%edx$/;"	l
c0104dc0	obj/kernel.asm	/^c0104dc0:	0f 82 4d ff ff ff    	jb     c0104d13 <check_boot_pgdir+0x12>$/;"	l
c0104dc6	obj/kernel.asm	/^c0104dc6:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104dcb	obj/kernel.asm	/^c0104dcb:	05 ac 0f 00 00       	add    $0xfac,%eax$/;"	l
c0104dd0	obj/kernel.asm	/^c0104dd0:	8b 00                	mov    (%eax),%eax$/;"	l
c0104dd2	obj/kernel.asm	/^c0104dd2:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104dd7	obj/kernel.asm	/^c0104dd7:	89 c2                	mov    %eax,%edx$/;"	l
c0104dd9	obj/kernel.asm	/^c0104dd9:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104dde	obj/kernel.asm	/^c0104dde:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104de1	obj/kernel.asm	/^c0104de1:	81 7d e4 ff ff ff bf 	cmpl   $0xbfffffff,-0x1c(%ebp)$/;"	l
c0104de8	obj/kernel.asm	/^c0104de8:	77 17                	ja     c0104e01 <check_boot_pgdir+0x100>$/;"	l
c0104dea	obj/kernel.asm	/^c0104dea:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104ded	obj/kernel.asm	/^c0104ded:	68 24 c5 10 c0       	push   $0xc010c524$/;"	l
c0104df2	obj/kernel.asm	/^c0104df2:	68 bd 02 00 00       	push   $0x2bd$/;"	l
c0104df7	obj/kernel.asm	/^c0104df7:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104dfc	obj/kernel.asm	/^c0104dfc:	e8 de b5 ff ff       	call   c01003df <__panic>$/;"	l
c0104e01	obj/kernel.asm	/^c0104e01:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104e04	obj/kernel.asm	/^c0104e04:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0104e09	obj/kernel.asm	/^c0104e09:	39 c2                	cmp    %eax,%edx$/;"	l
c0104e0b	obj/kernel.asm	/^c0104e0b:	74 19                	je     c0104e26 <check_boot_pgdir+0x125>$/;"	l
c0104e0d	obj/kernel.asm	/^c0104e0d:	68 1c c9 10 c0       	push   $0xc010c91c$/;"	l
c0104e12	obj/kernel.asm	/^c0104e12:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104e17	obj/kernel.asm	/^c0104e17:	68 bd 02 00 00       	push   $0x2bd$/;"	l
c0104e1c	obj/kernel.asm	/^c0104e1c:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104e21	obj/kernel.asm	/^c0104e21:	e8 b9 b5 ff ff       	call   c01003df <__panic>$/;"	l
c0104e26	obj/kernel.asm	/^c0104e26:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104e2b	obj/kernel.asm	/^c0104e2b:	8b 00                	mov    (%eax),%eax$/;"	l
c0104e2d	obj/kernel.asm	/^c0104e2d:	85 c0                	test   %eax,%eax$/;"	l
c0104e2f	obj/kernel.asm	/^c0104e2f:	74 19                	je     c0104e4a <check_boot_pgdir+0x149>$/;"	l
c0104e31	obj/kernel.asm	/^c0104e31:	68 50 c9 10 c0       	push   $0xc010c950$/;"	l
c0104e36	obj/kernel.asm	/^c0104e36:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104e3b	obj/kernel.asm	/^c0104e3b:	68 bf 02 00 00       	push   $0x2bf$/;"	l
c0104e40	obj/kernel.asm	/^c0104e40:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104e45	obj/kernel.asm	/^c0104e45:	e8 95 b5 ff ff       	call   c01003df <__panic>$/;"	l
c0104e4a	obj/kernel.asm	/^c0104e4a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104e4d	obj/kernel.asm	/^c0104e4d:	6a 01                	push   $0x1$/;"	l
c0104e4f	obj/kernel.asm	/^c0104e4f:	e8 01 eb ff ff       	call   c0103955 <alloc_pages>$/;"	l
c0104e54	obj/kernel.asm	/^c0104e54:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104e57	obj/kernel.asm	/^c0104e57:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0104e5a	obj/kernel.asm	/^c0104e5a:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104e5f	obj/kernel.asm	/^c0104e5f:	6a 02                	push   $0x2$/;"	l
c0104e61	obj/kernel.asm	/^c0104e61:	68 00 01 00 00       	push   $0x100$/;"	l
c0104e66	obj/kernel.asm	/^c0104e66:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104e69	obj/kernel.asm	/^c0104e69:	50                   	push   %eax$/;"	l
c0104e6a	obj/kernel.asm	/^c0104e6a:	e8 52 f7 ff ff       	call   c01045c1 <page_insert>$/;"	l
c0104e6f	obj/kernel.asm	/^c0104e6f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104e72	obj/kernel.asm	/^c0104e72:	85 c0                	test   %eax,%eax$/;"	l
c0104e74	obj/kernel.asm	/^c0104e74:	74 19                	je     c0104e8f <check_boot_pgdir+0x18e>$/;"	l
c0104e76	obj/kernel.asm	/^c0104e76:	68 64 c9 10 c0       	push   $0xc010c964$/;"	l
c0104e7b	obj/kernel.asm	/^c0104e7b:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104e80	obj/kernel.asm	/^c0104e80:	68 c3 02 00 00       	push   $0x2c3$/;"	l
c0104e85	obj/kernel.asm	/^c0104e85:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104e8a	obj/kernel.asm	/^c0104e8a:	e8 50 b5 ff ff       	call   c01003df <__panic>$/;"	l
c0104e8f	obj/kernel.asm	/^c0104e8f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104e92	obj/kernel.asm	/^c0104e92:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104e95	obj/kernel.asm	/^c0104e95:	e8 b4 e8 ff ff       	call   c010374e <page_ref>$/;"	l
c0104e9a	obj/kernel.asm	/^c0104e9a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104e9d	obj/kernel.asm	/^c0104e9d:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104ea0	obj/kernel.asm	/^c0104ea0:	74 19                	je     c0104ebb <check_boot_pgdir+0x1ba>$/;"	l
c0104ea2	obj/kernel.asm	/^c0104ea2:	68 92 c9 10 c0       	push   $0xc010c992$/;"	l
c0104ea7	obj/kernel.asm	/^c0104ea7:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104eac	obj/kernel.asm	/^c0104eac:	68 c4 02 00 00       	push   $0x2c4$/;"	l
c0104eb1	obj/kernel.asm	/^c0104eb1:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104eb6	obj/kernel.asm	/^c0104eb6:	e8 24 b5 ff ff       	call   c01003df <__panic>$/;"	l
c0104ebb	obj/kernel.asm	/^c0104ebb:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104ec0	obj/kernel.asm	/^c0104ec0:	6a 02                	push   $0x2$/;"	l
c0104ec2	obj/kernel.asm	/^c0104ec2:	68 00 11 00 00       	push   $0x1100$/;"	l
c0104ec7	obj/kernel.asm	/^c0104ec7:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104eca	obj/kernel.asm	/^c0104eca:	50                   	push   %eax$/;"	l
c0104ecb	obj/kernel.asm	/^c0104ecb:	e8 f1 f6 ff ff       	call   c01045c1 <page_insert>$/;"	l
c0104ed0	obj/kernel.asm	/^c0104ed0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ed3	obj/kernel.asm	/^c0104ed3:	85 c0                	test   %eax,%eax$/;"	l
c0104ed5	obj/kernel.asm	/^c0104ed5:	74 19                	je     c0104ef0 <check_boot_pgdir+0x1ef>$/;"	l
c0104ed7	obj/kernel.asm	/^c0104ed7:	68 a4 c9 10 c0       	push   $0xc010c9a4$/;"	l
c0104edc	obj/kernel.asm	/^c0104edc:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104ee1	obj/kernel.asm	/^c0104ee1:	68 c5 02 00 00       	push   $0x2c5$/;"	l
c0104ee6	obj/kernel.asm	/^c0104ee6:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104eeb	obj/kernel.asm	/^c0104eeb:	e8 ef b4 ff ff       	call   c01003df <__panic>$/;"	l
c0104ef0	obj/kernel.asm	/^c0104ef0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104ef3	obj/kernel.asm	/^c0104ef3:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104ef6	obj/kernel.asm	/^c0104ef6:	e8 53 e8 ff ff       	call   c010374e <page_ref>$/;"	l
c0104efb	obj/kernel.asm	/^c0104efb:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104efe	obj/kernel.asm	/^c0104efe:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0104f01	obj/kernel.asm	/^c0104f01:	74 19                	je     c0104f1c <check_boot_pgdir+0x21b>$/;"	l
c0104f03	obj/kernel.asm	/^c0104f03:	68 db c9 10 c0       	push   $0xc010c9db$/;"	l
c0104f08	obj/kernel.asm	/^c0104f08:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104f0d	obj/kernel.asm	/^c0104f0d:	68 c6 02 00 00       	push   $0x2c6$/;"	l
c0104f12	obj/kernel.asm	/^c0104f12:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104f17	obj/kernel.asm	/^c0104f17:	e8 c3 b4 ff ff       	call   c01003df <__panic>$/;"	l
c0104f1c	obj/kernel.asm	/^c0104f1c:	c7 45 dc ec c9 10 c0 	movl   $0xc010c9ec,-0x24(%ebp)$/;"	l
c0104f23	obj/kernel.asm	/^c0104f23:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104f26	obj/kernel.asm	/^c0104f26:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0104f29	obj/kernel.asm	/^c0104f29:	68 00 01 00 00       	push   $0x100$/;"	l
c0104f2e	obj/kernel.asm	/^c0104f2e:	e8 37 60 00 00       	call   c010af6a <strcpy>$/;"	l
c0104f33	obj/kernel.asm	/^c0104f33:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104f36	obj/kernel.asm	/^c0104f36:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104f39	obj/kernel.asm	/^c0104f39:	68 00 11 00 00       	push   $0x1100$/;"	l
c0104f3e	obj/kernel.asm	/^c0104f3e:	68 00 01 00 00       	push   $0x100$/;"	l
c0104f43	obj/kernel.asm	/^c0104f43:	e8 9c 60 00 00       	call   c010afe4 <strcmp>$/;"	l
c0104f48	obj/kernel.asm	/^c0104f48:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104f4b	obj/kernel.asm	/^c0104f4b:	85 c0                	test   %eax,%eax$/;"	l
c0104f4d	obj/kernel.asm	/^c0104f4d:	74 19                	je     c0104f68 <check_boot_pgdir+0x267>$/;"	l
c0104f4f	obj/kernel.asm	/^c0104f4f:	68 04 ca 10 c0       	push   $0xc010ca04$/;"	l
c0104f54	obj/kernel.asm	/^c0104f54:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104f59	obj/kernel.asm	/^c0104f59:	68 ca 02 00 00       	push   $0x2ca$/;"	l
c0104f5e	obj/kernel.asm	/^c0104f5e:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104f63	obj/kernel.asm	/^c0104f63:	e8 77 b4 ff ff       	call   c01003df <__panic>$/;"	l
c0104f68	obj/kernel.asm	/^c0104f68:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104f6b	obj/kernel.asm	/^c0104f6b:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104f6e	obj/kernel.asm	/^c0104f6e:	e8 40 e7 ff ff       	call   c01036b3 <page2kva>$/;"	l
c0104f73	obj/kernel.asm	/^c0104f73:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104f76	obj/kernel.asm	/^c0104f76:	05 00 01 00 00       	add    $0x100,%eax$/;"	l
c0104f7b	obj/kernel.asm	/^c0104f7b:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0104f7e	obj/kernel.asm	/^c0104f7e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104f81	obj/kernel.asm	/^c0104f81:	68 00 01 00 00       	push   $0x100$/;"	l
c0104f86	obj/kernel.asm	/^c0104f86:	e8 87 5f 00 00       	call   c010af12 <strlen>$/;"	l
c0104f8b	obj/kernel.asm	/^c0104f8b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104f8e	obj/kernel.asm	/^c0104f8e:	85 c0                	test   %eax,%eax$/;"	l
c0104f90	obj/kernel.asm	/^c0104f90:	74 19                	je     c0104fab <check_boot_pgdir+0x2aa>$/;"	l
c0104f92	obj/kernel.asm	/^c0104f92:	68 3c ca 10 c0       	push   $0xc010ca3c$/;"	l
c0104f97	obj/kernel.asm	/^c0104f97:	68 6d c5 10 c0       	push   $0xc010c56d$/;"	l
c0104f9c	obj/kernel.asm	/^c0104f9c:	68 cd 02 00 00       	push   $0x2cd$/;"	l
c0104fa1	obj/kernel.asm	/^c0104fa1:	68 48 c5 10 c0       	push   $0xc010c548$/;"	l
c0104fa6	obj/kernel.asm	/^c0104fa6:	e8 34 b4 ff ff       	call   c01003df <__panic>$/;"	l
c0104fab	obj/kernel.asm	/^c0104fab:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104fae	obj/kernel.asm	/^c0104fae:	6a 01                	push   $0x1$/;"	l
c0104fb0	obj/kernel.asm	/^c0104fb0:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104fb3	obj/kernel.asm	/^c0104fb3:	e8 09 ea ff ff       	call   c01039c1 <free_pages>$/;"	l
c0104fb8	obj/kernel.asm	/^c0104fb8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104fbb	obj/kernel.asm	/^c0104fbb:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104fc0	obj/kernel.asm	/^c0104fc0:	8b 00                	mov    (%eax),%eax$/;"	l
c0104fc2	obj/kernel.asm	/^c0104fc2:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104fc7	obj/kernel.asm	/^c0104fc7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104fca	obj/kernel.asm	/^c0104fca:	50                   	push   %eax$/;"	l
c0104fcb	obj/kernel.asm	/^c0104fcb:	e8 a6 e6 ff ff       	call   c0103676 <pa2page>$/;"	l
c0104fd0	obj/kernel.asm	/^c0104fd0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104fd3	obj/kernel.asm	/^c0104fd3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104fd6	obj/kernel.asm	/^c0104fd6:	6a 01                	push   $0x1$/;"	l
c0104fd8	obj/kernel.asm	/^c0104fd8:	50                   	push   %eax$/;"	l
c0104fd9	obj/kernel.asm	/^c0104fd9:	e8 e3 e9 ff ff       	call   c01039c1 <free_pages>$/;"	l
c0104fde	obj/kernel.asm	/^c0104fde:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104fe1	obj/kernel.asm	/^c0104fe1:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0104fe6	obj/kernel.asm	/^c0104fe6:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0104fec	obj/kernel.asm	/^c0104fec:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104fef	obj/kernel.asm	/^c0104fef:	68 60 ca 10 c0       	push   $0xc010ca60$/;"	l
c0104ff4	obj/kernel.asm	/^c0104ff4:	e8 81 b2 ff ff       	call   c010027a <cprintf>$/;"	l
c0104ff9	obj/kernel.asm	/^c0104ff9:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ffc	obj/kernel.asm	/^c0104ffc:	c9                   	leave  $/;"	l
c0104ffd	obj/kernel.asm	/^c0104ffd:	c3                   	ret    $/;"	l
c0104ffe	obj/kernel.asm	/^c0104ffe <perm2str>:$/;"	l
c0104ffe	obj/kernel.asm	/^c0104ffe:	55                   	push   %ebp$/;"	l
c0104fff	obj/kernel.asm	/^c0104fff:	89 e5                	mov    %esp,%ebp$/;"	l
c0105001	obj/kernel.asm	/^c0105001:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105004	obj/kernel.asm	/^c0105004:	83 e0 04             	and    $0x4,%eax$/;"	l
c0105007	obj/kernel.asm	/^c0105007:	85 c0                	test   %eax,%eax$/;"	l
c0105009	obj/kernel.asm	/^c0105009:	74 07                	je     c0105012 <perm2str+0x14>$/;"	l
c010500b	obj/kernel.asm	/^c010500b:	b8 75 00 00 00       	mov    $0x75,%eax$/;"	l
c0105010	obj/kernel.asm	/^c0105010:	eb 05                	jmp    c0105017 <perm2str+0x19>$/;"	l
c0105012	obj/kernel.asm	/^c0105012:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c0105017	obj/kernel.asm	/^c0105017:	a2 28 ee 1a c0       	mov    %al,0xc01aee28$/;"	l
c010501c	obj/kernel.asm	/^c010501c:	c6 05 29 ee 1a c0 72 	movb   $0x72,0xc01aee29$/;"	l
c0105023	obj/kernel.asm	/^c0105023:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105026	obj/kernel.asm	/^c0105026:	83 e0 02             	and    $0x2,%eax$/;"	l
c0105029	obj/kernel.asm	/^c0105029:	85 c0                	test   %eax,%eax$/;"	l
c010502b	obj/kernel.asm	/^c010502b:	74 07                	je     c0105034 <perm2str+0x36>$/;"	l
c010502d	obj/kernel.asm	/^c010502d:	b8 77 00 00 00       	mov    $0x77,%eax$/;"	l
c0105032	obj/kernel.asm	/^c0105032:	eb 05                	jmp    c0105039 <perm2str+0x3b>$/;"	l
c0105034	obj/kernel.asm	/^c0105034:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c0105039	obj/kernel.asm	/^c0105039:	a2 2a ee 1a c0       	mov    %al,0xc01aee2a$/;"	l
c010503e	obj/kernel.asm	/^c010503e:	c6 05 2b ee 1a c0 00 	movb   $0x0,0xc01aee2b$/;"	l
c0105045	obj/kernel.asm	/^c0105045:	b8 28 ee 1a c0       	mov    $0xc01aee28,%eax$/;"	l
c010504a	obj/kernel.asm	/^c010504a:	5d                   	pop    %ebp$/;"	l
c010504b	obj/kernel.asm	/^c010504b:	c3                   	ret    $/;"	l
c010504c	obj/kernel.asm	/^c010504c <get_pgtable_items>:$/;"	l
c010504c	obj/kernel.asm	/^c010504c:	55                   	push   %ebp$/;"	l
c010504d	obj/kernel.asm	/^c010504d:	89 e5                	mov    %esp,%ebp$/;"	l
c010504f	obj/kernel.asm	/^c010504f:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0105052	obj/kernel.asm	/^c0105052:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105055	obj/kernel.asm	/^c0105055:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0105058	obj/kernel.asm	/^c0105058:	72 0a                	jb     c0105064 <get_pgtable_items+0x18>$/;"	l
c010505a	obj/kernel.asm	/^c010505a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010505f	obj/kernel.asm	/^c010505f:	e9 9c 00 00 00       	jmp    c0105100 <get_pgtable_items+0xb4>$/;"	l
c0105064	obj/kernel.asm	/^c0105064:	eb 04                	jmp    c010506a <get_pgtable_items+0x1e>$/;"	l
c0105066	obj/kernel.asm	/^c0105066:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c010506a	obj/kernel.asm	/^c010506a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010506d	obj/kernel.asm	/^c010506d:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0105070	obj/kernel.asm	/^c0105070:	73 18                	jae    c010508a <get_pgtable_items+0x3e>$/;"	l
c0105072	obj/kernel.asm	/^c0105072:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105075	obj/kernel.asm	/^c0105075:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010507c	obj/kernel.asm	/^c010507c:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010507f	obj/kernel.asm	/^c010507f:	01 d0                	add    %edx,%eax$/;"	l
c0105081	obj/kernel.asm	/^c0105081:	8b 00                	mov    (%eax),%eax$/;"	l
c0105083	obj/kernel.asm	/^c0105083:	83 e0 01             	and    $0x1,%eax$/;"	l
c0105086	obj/kernel.asm	/^c0105086:	85 c0                	test   %eax,%eax$/;"	l
c0105088	obj/kernel.asm	/^c0105088:	74 dc                	je     c0105066 <get_pgtable_items+0x1a>$/;"	l
c010508a	obj/kernel.asm	/^c010508a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010508d	obj/kernel.asm	/^c010508d:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0105090	obj/kernel.asm	/^c0105090:	73 69                	jae    c01050fb <get_pgtable_items+0xaf>$/;"	l
c0105092	obj/kernel.asm	/^c0105092:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0105096	obj/kernel.asm	/^c0105096:	74 08                	je     c01050a0 <get_pgtable_items+0x54>$/;"	l
c0105098	obj/kernel.asm	/^c0105098:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010509b	obj/kernel.asm	/^c010509b:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010509e	obj/kernel.asm	/^c010509e:	89 10                	mov    %edx,(%eax)$/;"	l
c01050a0	obj/kernel.asm	/^c01050a0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01050a3	obj/kernel.asm	/^c01050a3:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01050a6	obj/kernel.asm	/^c01050a6:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c01050a9	obj/kernel.asm	/^c01050a9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c01050b0	obj/kernel.asm	/^c01050b0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01050b3	obj/kernel.asm	/^c01050b3:	01 d0                	add    %edx,%eax$/;"	l
c01050b5	obj/kernel.asm	/^c01050b5:	8b 00                	mov    (%eax),%eax$/;"	l
c01050b7	obj/kernel.asm	/^c01050b7:	83 e0 07             	and    $0x7,%eax$/;"	l
c01050ba	obj/kernel.asm	/^c01050ba:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01050bd	obj/kernel.asm	/^c01050bd:	eb 04                	jmp    c01050c3 <get_pgtable_items+0x77>$/;"	l
c01050bf	obj/kernel.asm	/^c01050bf:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c01050c3	obj/kernel.asm	/^c01050c3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01050c6	obj/kernel.asm	/^c01050c6:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01050c9	obj/kernel.asm	/^c01050c9:	73 1d                	jae    c01050e8 <get_pgtable_items+0x9c>$/;"	l
c01050cb	obj/kernel.asm	/^c01050cb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01050ce	obj/kernel.asm	/^c01050ce:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c01050d5	obj/kernel.asm	/^c01050d5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01050d8	obj/kernel.asm	/^c01050d8:	01 d0                	add    %edx,%eax$/;"	l
c01050da	obj/kernel.asm	/^c01050da:	8b 00                	mov    (%eax),%eax$/;"	l
c01050dc	obj/kernel.asm	/^c01050dc:	83 e0 07             	and    $0x7,%eax$/;"	l
c01050df	obj/kernel.asm	/^c01050df:	89 c2                	mov    %eax,%edx$/;"	l
c01050e1	obj/kernel.asm	/^c01050e1:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01050e4	obj/kernel.asm	/^c01050e4:	39 c2                	cmp    %eax,%edx$/;"	l
c01050e6	obj/kernel.asm	/^c01050e6:	74 d7                	je     c01050bf <get_pgtable_items+0x73>$/;"	l
c01050e8	obj/kernel.asm	/^c01050e8:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c01050ec	obj/kernel.asm	/^c01050ec:	74 08                	je     c01050f6 <get_pgtable_items+0xaa>$/;"	l
c01050ee	obj/kernel.asm	/^c01050ee:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c01050f1	obj/kernel.asm	/^c01050f1:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01050f4	obj/kernel.asm	/^c01050f4:	89 10                	mov    %edx,(%eax)$/;"	l
c01050f6	obj/kernel.asm	/^c01050f6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01050f9	obj/kernel.asm	/^c01050f9:	eb 05                	jmp    c0105100 <get_pgtable_items+0xb4>$/;"	l
c01050fb	obj/kernel.asm	/^c01050fb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105100	obj/kernel.asm	/^c0105100:	c9                   	leave  $/;"	l
c0105101	obj/kernel.asm	/^c0105101:	c3                   	ret    $/;"	l
c0105102	obj/kernel.asm	/^c0105102 <print_pgdir>:$/;"	l
c0105102	obj/kernel.asm	/^c0105102:	55                   	push   %ebp$/;"	l
c0105103	obj/kernel.asm	/^c0105103:	89 e5                	mov    %esp,%ebp$/;"	l
c0105105	obj/kernel.asm	/^c0105105:	57                   	push   %edi$/;"	l
c0105106	obj/kernel.asm	/^c0105106:	56                   	push   %esi$/;"	l
c0105107	obj/kernel.asm	/^c0105107:	53                   	push   %ebx$/;"	l
c0105108	obj/kernel.asm	/^c0105108:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
c010510b	obj/kernel.asm	/^c010510b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010510e	obj/kernel.asm	/^c010510e:	68 80 ca 10 c0       	push   $0xc010ca80$/;"	l
c0105113	obj/kernel.asm	/^c0105113:	e8 62 b1 ff ff       	call   c010027a <cprintf>$/;"	l
c0105118	obj/kernel.asm	/^c0105118:	83 c4 10             	add    $0x10,%esp$/;"	l
c010511b	obj/kernel.asm	/^c010511b:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0105122	obj/kernel.asm	/^c0105122:	e9 e5 00 00 00       	jmp    c010520c <print_pgdir+0x10a>$/;"	l
c0105127	obj/kernel.asm	/^c0105127:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010512a	obj/kernel.asm	/^c010512a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010512d	obj/kernel.asm	/^c010512d:	50                   	push   %eax$/;"	l
c010512e	obj/kernel.asm	/^c010512e:	e8 cb fe ff ff       	call   c0104ffe <perm2str>$/;"	l
c0105133	obj/kernel.asm	/^c0105133:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105136	obj/kernel.asm	/^c0105136:	89 c7                	mov    %eax,%edi$/;"	l
c0105138	obj/kernel.asm	/^c0105138:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010513b	obj/kernel.asm	/^c010513b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010513e	obj/kernel.asm	/^c010513e:	29 c2                	sub    %eax,%edx$/;"	l
c0105140	obj/kernel.asm	/^c0105140:	89 d0                	mov    %edx,%eax$/;"	l
c0105142	obj/kernel.asm	/^c0105142:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c0105145	obj/kernel.asm	/^c0105145:	89 c3                	mov    %eax,%ebx$/;"	l
c0105147	obj/kernel.asm	/^c0105147:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010514a	obj/kernel.asm	/^c010514a:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c010514d	obj/kernel.asm	/^c010514d:	89 c1                	mov    %eax,%ecx$/;"	l
c010514f	obj/kernel.asm	/^c010514f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105152	obj/kernel.asm	/^c0105152:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c0105155	obj/kernel.asm	/^c0105155:	89 c2                	mov    %eax,%edx$/;"	l
c0105157	obj/kernel.asm	/^c0105157:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
c010515a	obj/kernel.asm	/^c010515a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010515d	obj/kernel.asm	/^c010515d:	29 c6                	sub    %eax,%esi$/;"	l
c010515f	obj/kernel.asm	/^c010515f:	89 f0                	mov    %esi,%eax$/;"	l
c0105161	obj/kernel.asm	/^c0105161:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105164	obj/kernel.asm	/^c0105164:	57                   	push   %edi$/;"	l
c0105165	obj/kernel.asm	/^c0105165:	53                   	push   %ebx$/;"	l
c0105166	obj/kernel.asm	/^c0105166:	51                   	push   %ecx$/;"	l
c0105167	obj/kernel.asm	/^c0105167:	52                   	push   %edx$/;"	l
c0105168	obj/kernel.asm	/^c0105168:	50                   	push   %eax$/;"	l
c0105169	obj/kernel.asm	/^c0105169:	68 b1 ca 10 c0       	push   $0xc010cab1$/;"	l
c010516e	obj/kernel.asm	/^c010516e:	e8 07 b1 ff ff       	call   c010027a <cprintf>$/;"	l
c0105173	obj/kernel.asm	/^c0105173:	83 c4 20             	add    $0x20,%esp$/;"	l
c0105176	obj/kernel.asm	/^c0105176:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105179	obj/kernel.asm	/^c0105179:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
c010517c	obj/kernel.asm	/^c010517c:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010517f	obj/kernel.asm	/^c010517f:	eb 4f                	jmp    c01051d0 <print_pgdir+0xce>$/;"	l
c0105181	obj/kernel.asm	/^c0105181:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105184	obj/kernel.asm	/^c0105184:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105187	obj/kernel.asm	/^c0105187:	50                   	push   %eax$/;"	l
c0105188	obj/kernel.asm	/^c0105188:	e8 71 fe ff ff       	call   c0104ffe <perm2str>$/;"	l
c010518d	obj/kernel.asm	/^c010518d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105190	obj/kernel.asm	/^c0105190:	89 c7                	mov    %eax,%edi$/;"	l
c0105192	obj/kernel.asm	/^c0105192:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0105195	obj/kernel.asm	/^c0105195:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0105198	obj/kernel.asm	/^c0105198:	29 c2                	sub    %eax,%edx$/;"	l
c010519a	obj/kernel.asm	/^c010519a:	89 d0                	mov    %edx,%eax$/;"	l
c010519c	obj/kernel.asm	/^c010519c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010519f	obj/kernel.asm	/^c010519f:	89 c3                	mov    %eax,%ebx$/;"	l
c01051a1	obj/kernel.asm	/^c01051a1:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01051a4	obj/kernel.asm	/^c01051a4:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01051a7	obj/kernel.asm	/^c01051a7:	89 c1                	mov    %eax,%ecx$/;"	l
c01051a9	obj/kernel.asm	/^c01051a9:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01051ac	obj/kernel.asm	/^c01051ac:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01051af	obj/kernel.asm	/^c01051af:	89 c2                	mov    %eax,%edx$/;"	l
c01051b1	obj/kernel.asm	/^c01051b1:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
c01051b4	obj/kernel.asm	/^c01051b4:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01051b7	obj/kernel.asm	/^c01051b7:	29 c6                	sub    %eax,%esi$/;"	l
c01051b9	obj/kernel.asm	/^c01051b9:	89 f0                	mov    %esi,%eax$/;"	l
c01051bb	obj/kernel.asm	/^c01051bb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01051be	obj/kernel.asm	/^c01051be:	57                   	push   %edi$/;"	l
c01051bf	obj/kernel.asm	/^c01051bf:	53                   	push   %ebx$/;"	l
c01051c0	obj/kernel.asm	/^c01051c0:	51                   	push   %ecx$/;"	l
c01051c1	obj/kernel.asm	/^c01051c1:	52                   	push   %edx$/;"	l
c01051c2	obj/kernel.asm	/^c01051c2:	50                   	push   %eax$/;"	l
c01051c3	obj/kernel.asm	/^c01051c3:	68 d0 ca 10 c0       	push   $0xc010cad0$/;"	l
c01051c8	obj/kernel.asm	/^c01051c8:	e8 ad b0 ff ff       	call   c010027a <cprintf>$/;"	l
c01051cd	obj/kernel.asm	/^c01051cd:	83 c4 20             	add    $0x20,%esp$/;"	l
c01051d0	obj/kernel.asm	/^c01051d0:	be 00 00 c0 fa       	mov    $0xfac00000,%esi$/;"	l
c01051d5	obj/kernel.asm	/^c01051d5:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01051d8	obj/kernel.asm	/^c01051d8:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01051db	obj/kernel.asm	/^c01051db:	89 d3                	mov    %edx,%ebx$/;"	l
c01051dd	obj/kernel.asm	/^c01051dd:	c1 e3 0a             	shl    $0xa,%ebx$/;"	l
c01051e0	obj/kernel.asm	/^c01051e0:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01051e3	obj/kernel.asm	/^c01051e3:	89 d1                	mov    %edx,%ecx$/;"	l
c01051e5	obj/kernel.asm	/^c01051e5:	c1 e1 0a             	shl    $0xa,%ecx$/;"	l
c01051e8	obj/kernel.asm	/^c01051e8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01051eb	obj/kernel.asm	/^c01051eb:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
c01051ee	obj/kernel.asm	/^c01051ee:	52                   	push   %edx$/;"	l
c01051ef	obj/kernel.asm	/^c01051ef:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
c01051f2	obj/kernel.asm	/^c01051f2:	52                   	push   %edx$/;"	l
c01051f3	obj/kernel.asm	/^c01051f3:	56                   	push   %esi$/;"	l
c01051f4	obj/kernel.asm	/^c01051f4:	50                   	push   %eax$/;"	l
c01051f5	obj/kernel.asm	/^c01051f5:	53                   	push   %ebx$/;"	l
c01051f6	obj/kernel.asm	/^c01051f6:	51                   	push   %ecx$/;"	l
c01051f7	obj/kernel.asm	/^c01051f7:	e8 50 fe ff ff       	call   c010504c <get_pgtable_items>$/;"	l
c01051fc	obj/kernel.asm	/^c01051fc:	83 c4 20             	add    $0x20,%esp$/;"	l
c01051ff	obj/kernel.asm	/^c01051ff:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105202	obj/kernel.asm	/^c0105202:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0105206	obj/kernel.asm	/^c0105206:	0f 85 75 ff ff ff    	jne    c0105181 <print_pgdir+0x7f>$/;"	l
c010520c	obj/kernel.asm	/^c010520c:	b9 00 b0 fe fa       	mov    $0xfafeb000,%ecx$/;"	l
c0105211	obj/kernel.asm	/^c0105211:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105214	obj/kernel.asm	/^c0105214:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105217	obj/kernel.asm	/^c0105217:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c010521a	obj/kernel.asm	/^c010521a:	52                   	push   %edx$/;"	l
c010521b	obj/kernel.asm	/^c010521b:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
c010521e	obj/kernel.asm	/^c010521e:	52                   	push   %edx$/;"	l
c010521f	obj/kernel.asm	/^c010521f:	51                   	push   %ecx$/;"	l
c0105220	obj/kernel.asm	/^c0105220:	50                   	push   %eax$/;"	l
c0105221	obj/kernel.asm	/^c0105221:	68 00 04 00 00       	push   $0x400$/;"	l
c0105226	obj/kernel.asm	/^c0105226:	6a 00                	push   $0x0$/;"	l
c0105228	obj/kernel.asm	/^c0105228:	e8 1f fe ff ff       	call   c010504c <get_pgtable_items>$/;"	l
c010522d	obj/kernel.asm	/^c010522d:	83 c4 20             	add    $0x20,%esp$/;"	l
c0105230	obj/kernel.asm	/^c0105230:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105233	obj/kernel.asm	/^c0105233:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0105237	obj/kernel.asm	/^c0105237:	0f 85 ea fe ff ff    	jne    c0105127 <print_pgdir+0x25>$/;"	l
c010523d	obj/kernel.asm	/^c010523d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105240	obj/kernel.asm	/^c0105240:	68 f4 ca 10 c0       	push   $0xc010caf4$/;"	l
c0105245	obj/kernel.asm	/^c0105245:	e8 30 b0 ff ff       	call   c010027a <cprintf>$/;"	l
c010524a	obj/kernel.asm	/^c010524a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010524d	obj/kernel.asm	/^c010524d:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
c0105250	obj/kernel.asm	/^c0105250:	5b                   	pop    %ebx$/;"	l
c0105251	obj/kernel.asm	/^c0105251:	5e                   	pop    %esi$/;"	l
c0105252	obj/kernel.asm	/^c0105252:	5f                   	pop    %edi$/;"	l
c0105253	obj/kernel.asm	/^c0105253:	5d                   	pop    %ebp$/;"	l
c0105254	obj/kernel.asm	/^c0105254:	c3                   	ret    $/;"	l
c0105255	obj/kernel.asm	/^c0105255 <lock_init>:$/;"	l
c0105255	obj/kernel.asm	/^c0105255:	55                   	push   %ebp$/;"	l
c0105256	obj/kernel.asm	/^c0105256:	89 e5                	mov    %esp,%ebp$/;"	l
c0105258	obj/kernel.asm	/^c0105258:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010525b	obj/kernel.asm	/^c010525b:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0105261	obj/kernel.asm	/^c0105261:	5d                   	pop    %ebp$/;"	l
c0105262	obj/kernel.asm	/^c0105262:	c3                   	ret    $/;"	l
c0105263	obj/kernel.asm	/^c0105263 <mm_count>:$/;"	l
c0105263	obj/kernel.asm	/^c0105263:	55                   	push   %ebp$/;"	l
c0105264	obj/kernel.asm	/^c0105264:	89 e5                	mov    %esp,%ebp$/;"	l
c0105266	obj/kernel.asm	/^c0105266:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105269	obj/kernel.asm	/^c0105269:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010526c	obj/kernel.asm	/^c010526c:	5d                   	pop    %ebp$/;"	l
c010526d	obj/kernel.asm	/^c010526d:	c3                   	ret    $/;"	l
c010526e	obj/kernel.asm	/^c010526e <set_mm_count>:$/;"	l
c010526e	obj/kernel.asm	/^c010526e:	55                   	push   %ebp$/;"	l
c010526f	obj/kernel.asm	/^c010526f:	89 e5                	mov    %esp,%ebp$/;"	l
c0105271	obj/kernel.asm	/^c0105271:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105274	obj/kernel.asm	/^c0105274:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105277	obj/kernel.asm	/^c0105277:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010527a	obj/kernel.asm	/^c010527a:	5d                   	pop    %ebp$/;"	l
c010527b	obj/kernel.asm	/^c010527b:	c3                   	ret    $/;"	l
c010527c	obj/kernel.asm	/^c010527c <pa2page>:$/;"	l
c010527c	obj/kernel.asm	/^c010527c:	55                   	push   %ebp$/;"	l
c010527d	obj/kernel.asm	/^c010527d:	89 e5                	mov    %esp,%ebp$/;"	l
c010527f	obj/kernel.asm	/^c010527f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105282	obj/kernel.asm	/^c0105282:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105285	obj/kernel.asm	/^c0105285:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0105288	obj/kernel.asm	/^c0105288:	89 c2                	mov    %eax,%edx$/;"	l
c010528a	obj/kernel.asm	/^c010528a:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c010528f	obj/kernel.asm	/^c010528f:	39 c2                	cmp    %eax,%edx$/;"	l
c0105291	obj/kernel.asm	/^c0105291:	72 14                	jb     c01052a7 <pa2page+0x2b>$/;"	l
c0105293	obj/kernel.asm	/^c0105293:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105296	obj/kernel.asm	/^c0105296:	68 28 cb 10 c0       	push   $0xc010cb28$/;"	l
c010529b	obj/kernel.asm	/^c010529b:	6a 5e                	push   $0x5e$/;"	l
c010529d	obj/kernel.asm	/^c010529d:	68 47 cb 10 c0       	push   $0xc010cb47$/;"	l
c01052a2	obj/kernel.asm	/^c01052a2:	e8 38 b1 ff ff       	call   c01003df <__panic>$/;"	l
c01052a7	obj/kernel.asm	/^c01052a7:	a1 18 0f 1b c0       	mov    0xc01b0f18,%eax$/;"	l
c01052ac	obj/kernel.asm	/^c01052ac:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01052af	obj/kernel.asm	/^c01052af:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c01052b2	obj/kernel.asm	/^c01052b2:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c01052b5	obj/kernel.asm	/^c01052b5:	01 d0                	add    %edx,%eax$/;"	l
c01052b7	obj/kernel.asm	/^c01052b7:	c9                   	leave  $/;"	l
c01052b8	obj/kernel.asm	/^c01052b8:	c3                   	ret    $/;"	l
c01052b9	obj/kernel.asm	/^c01052b9 <mm_create>:$/;"	l
c01052b9	obj/kernel.asm	/^c01052b9:	55                   	push   %ebp$/;"	l
c01052ba	obj/kernel.asm	/^c01052ba:	89 e5                	mov    %esp,%ebp$/;"	l
c01052bc	obj/kernel.asm	/^c01052bc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01052bf	obj/kernel.asm	/^c01052bf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01052c2	obj/kernel.asm	/^c01052c2:	6a 20                	push   $0x20$/;"	l
c01052c4	obj/kernel.asm	/^c01052c4:	e8 26 21 00 00       	call   c01073ef <kmalloc>$/;"	l
c01052c9	obj/kernel.asm	/^c01052c9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01052cc	obj/kernel.asm	/^c01052cc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01052cf	obj/kernel.asm	/^c01052cf:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01052d3	obj/kernel.asm	/^c01052d3:	74 7d                	je     c0105352 <mm_create+0x99>$/;"	l
c01052d5	obj/kernel.asm	/^c01052d5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01052d8	obj/kernel.asm	/^c01052d8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01052db	obj/kernel.asm	/^c01052db:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01052de	obj/kernel.asm	/^c01052de:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01052e1	obj/kernel.asm	/^c01052e1:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01052e4	obj/kernel.asm	/^c01052e4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01052e7	obj/kernel.asm	/^c01052e7:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01052ea	obj/kernel.asm	/^c01052ea:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01052ed	obj/kernel.asm	/^c01052ed:	89 10                	mov    %edx,(%eax)$/;"	l
c01052ef	obj/kernel.asm	/^c01052ef:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01052f2	obj/kernel.asm	/^c01052f2:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c01052f9	obj/kernel.asm	/^c01052f9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01052fc	obj/kernel.asm	/^c01052fc:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0105303	obj/kernel.asm	/^c0105303:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105306	obj/kernel.asm	/^c0105306:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010530d	obj/kernel.asm	/^c010530d:	a1 30 ee 1a c0       	mov    0xc01aee30,%eax$/;"	l
c0105312	obj/kernel.asm	/^c0105312:	85 c0                	test   %eax,%eax$/;"	l
c0105314	obj/kernel.asm	/^c0105314:	74 10                	je     c0105326 <mm_create+0x6d>$/;"	l
c0105316	obj/kernel.asm	/^c0105316:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105319	obj/kernel.asm	/^c0105319:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010531c	obj/kernel.asm	/^c010531c:	e8 0a 11 00 00       	call   c010642b <swap_init_mm>$/;"	l
c0105321	obj/kernel.asm	/^c0105321:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105324	obj/kernel.asm	/^c0105324:	eb 0a                	jmp    c0105330 <mm_create+0x77>$/;"	l
c0105326	obj/kernel.asm	/^c0105326:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105329	obj/kernel.asm	/^c0105329:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c0105330	obj/kernel.asm	/^c0105330:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105333	obj/kernel.asm	/^c0105333:	6a 00                	push   $0x0$/;"	l
c0105335	obj/kernel.asm	/^c0105335:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0105338	obj/kernel.asm	/^c0105338:	e8 31 ff ff ff       	call   c010526e <set_mm_count>$/;"	l
c010533d	obj/kernel.asm	/^c010533d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105340	obj/kernel.asm	/^c0105340:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105343	obj/kernel.asm	/^c0105343:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0105346	obj/kernel.asm	/^c0105346:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105349	obj/kernel.asm	/^c0105349:	50                   	push   %eax$/;"	l
c010534a	obj/kernel.asm	/^c010534a:	e8 06 ff ff ff       	call   c0105255 <lock_init>$/;"	l
c010534f	obj/kernel.asm	/^c010534f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105352	obj/kernel.asm	/^c0105352:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105355	obj/kernel.asm	/^c0105355:	c9                   	leave  $/;"	l
c0105356	obj/kernel.asm	/^c0105356:	c3                   	ret    $/;"	l
c0105357	obj/kernel.asm	/^c0105357 <vma_create>:$/;"	l
c0105357	obj/kernel.asm	/^c0105357:	55                   	push   %ebp$/;"	l
c0105358	obj/kernel.asm	/^c0105358:	89 e5                	mov    %esp,%ebp$/;"	l
c010535a	obj/kernel.asm	/^c010535a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010535d	obj/kernel.asm	/^c010535d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105360	obj/kernel.asm	/^c0105360:	6a 18                	push   $0x18$/;"	l
c0105362	obj/kernel.asm	/^c0105362:	e8 88 20 00 00       	call   c01073ef <kmalloc>$/;"	l
c0105367	obj/kernel.asm	/^c0105367:	83 c4 10             	add    $0x10,%esp$/;"	l
c010536a	obj/kernel.asm	/^c010536a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010536d	obj/kernel.asm	/^c010536d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105371	obj/kernel.asm	/^c0105371:	74 1b                	je     c010538e <vma_create+0x37>$/;"	l
c0105373	obj/kernel.asm	/^c0105373:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105376	obj/kernel.asm	/^c0105376:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0105379	obj/kernel.asm	/^c0105379:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010537c	obj/kernel.asm	/^c010537c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010537f	obj/kernel.asm	/^c010537f:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105382	obj/kernel.asm	/^c0105382:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0105385	obj/kernel.asm	/^c0105385:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105388	obj/kernel.asm	/^c0105388:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010538b	obj/kernel.asm	/^c010538b:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010538e	obj/kernel.asm	/^c010538e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105391	obj/kernel.asm	/^c0105391:	c9                   	leave  $/;"	l
c0105392	obj/kernel.asm	/^c0105392:	c3                   	ret    $/;"	l
c0105393	obj/kernel.asm	/^c0105393 <find_vma>:$/;"	l
c0105393	obj/kernel.asm	/^c0105393:	55                   	push   %ebp$/;"	l
c0105394	obj/kernel.asm	/^c0105394:	89 e5                	mov    %esp,%ebp$/;"	l
c0105396	obj/kernel.asm	/^c0105396:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0105399	obj/kernel.asm	/^c0105399:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01053a0	obj/kernel.asm	/^c01053a0:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01053a4	obj/kernel.asm	/^c01053a4:	0f 84 95 00 00 00    	je     c010543f <find_vma+0xac>$/;"	l
c01053aa	obj/kernel.asm	/^c01053aa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01053ad	obj/kernel.asm	/^c01053ad:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01053b0	obj/kernel.asm	/^c01053b0:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01053b3	obj/kernel.asm	/^c01053b3:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c01053b7	obj/kernel.asm	/^c01053b7:	74 16                	je     c01053cf <find_vma+0x3c>$/;"	l
c01053b9	obj/kernel.asm	/^c01053b9:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01053bc	obj/kernel.asm	/^c01053bc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01053bf	obj/kernel.asm	/^c01053bf:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01053c2	obj/kernel.asm	/^c01053c2:	77 0b                	ja     c01053cf <find_vma+0x3c>$/;"	l
c01053c4	obj/kernel.asm	/^c01053c4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01053c7	obj/kernel.asm	/^c01053c7:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01053ca	obj/kernel.asm	/^c01053ca:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01053cd	obj/kernel.asm	/^c01053cd:	77 61                	ja     c0105430 <find_vma+0x9d>$/;"	l
c01053cf	obj/kernel.asm	/^c01053cf:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c01053d6	obj/kernel.asm	/^c01053d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01053d9	obj/kernel.asm	/^c01053d9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01053dc	obj/kernel.asm	/^c01053dc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01053df	obj/kernel.asm	/^c01053df:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01053e2	obj/kernel.asm	/^c01053e2:	eb 28                	jmp    c010540c <find_vma+0x79>$/;"	l
c01053e4	obj/kernel.asm	/^c01053e4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01053e7	obj/kernel.asm	/^c01053e7:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01053ea	obj/kernel.asm	/^c01053ea:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01053ed	obj/kernel.asm	/^c01053ed:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01053f0	obj/kernel.asm	/^c01053f0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01053f3	obj/kernel.asm	/^c01053f3:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01053f6	obj/kernel.asm	/^c01053f6:	77 14                	ja     c010540c <find_vma+0x79>$/;"	l
c01053f8	obj/kernel.asm	/^c01053f8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01053fb	obj/kernel.asm	/^c01053fb:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01053fe	obj/kernel.asm	/^c01053fe:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0105401	obj/kernel.asm	/^c0105401:	76 09                	jbe    c010540c <find_vma+0x79>$/;"	l
c0105403	obj/kernel.asm	/^c0105403:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%ebp)$/;"	l
c010540a	obj/kernel.asm	/^c010540a:	eb 17                	jmp    c0105423 <find_vma+0x90>$/;"	l
c010540c	obj/kernel.asm	/^c010540c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010540f	obj/kernel.asm	/^c010540f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105412	obj/kernel.asm	/^c0105412:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105415	obj/kernel.asm	/^c0105415:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105418	obj/kernel.asm	/^c0105418:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010541b	obj/kernel.asm	/^c010541b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010541e	obj/kernel.asm	/^c010541e:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0105421	obj/kernel.asm	/^c0105421:	75 c1                	jne    c01053e4 <find_vma+0x51>$/;"	l
c0105423	obj/kernel.asm	/^c0105423:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)$/;"	l
c0105427	obj/kernel.asm	/^c0105427:	75 07                	jne    c0105430 <find_vma+0x9d>$/;"	l
c0105429	obj/kernel.asm	/^c0105429:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0105430	obj/kernel.asm	/^c0105430:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0105434	obj/kernel.asm	/^c0105434:	74 09                	je     c010543f <find_vma+0xac>$/;"	l
c0105436	obj/kernel.asm	/^c0105436:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105439	obj/kernel.asm	/^c0105439:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010543c	obj/kernel.asm	/^c010543c:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010543f	obj/kernel.asm	/^c010543f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0105442	obj/kernel.asm	/^c0105442:	c9                   	leave  $/;"	l
c0105443	obj/kernel.asm	/^c0105443:	c3                   	ret    $/;"	l
c0105444	obj/kernel.asm	/^c0105444 <check_vma_overlap>:$/;"	l
c0105444	obj/kernel.asm	/^c0105444:	55                   	push   %ebp$/;"	l
c0105445	obj/kernel.asm	/^c0105445:	89 e5                	mov    %esp,%ebp$/;"	l
c0105447	obj/kernel.asm	/^c0105447:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010544a	obj/kernel.asm	/^c010544a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010544d	obj/kernel.asm	/^c010544d:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0105450	obj/kernel.asm	/^c0105450:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105453	obj/kernel.asm	/^c0105453:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105456	obj/kernel.asm	/^c0105456:	39 c2                	cmp    %eax,%edx$/;"	l
c0105458	obj/kernel.asm	/^c0105458:	72 16                	jb     c0105470 <check_vma_overlap+0x2c>$/;"	l
c010545a	obj/kernel.asm	/^c010545a:	68 55 cb 10 c0       	push   $0xc010cb55$/;"	l
c010545f	obj/kernel.asm	/^c010545f:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105464	obj/kernel.asm	/^c0105464:	6a 6b                	push   $0x6b$/;"	l
c0105466	obj/kernel.asm	/^c0105466:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c010546b	obj/kernel.asm	/^c010546b:	e8 6f af ff ff       	call   c01003df <__panic>$/;"	l
c0105470	obj/kernel.asm	/^c0105470:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105473	obj/kernel.asm	/^c0105473:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0105476	obj/kernel.asm	/^c0105476:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105479	obj/kernel.asm	/^c0105479:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010547c	obj/kernel.asm	/^c010547c:	39 c2                	cmp    %eax,%edx$/;"	l
c010547e	obj/kernel.asm	/^c010547e:	76 16                	jbe    c0105496 <check_vma_overlap+0x52>$/;"	l
c0105480	obj/kernel.asm	/^c0105480:	68 98 cb 10 c0       	push   $0xc010cb98$/;"	l
c0105485	obj/kernel.asm	/^c0105485:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c010548a	obj/kernel.asm	/^c010548a:	6a 6c                	push   $0x6c$/;"	l
c010548c	obj/kernel.asm	/^c010548c:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105491	obj/kernel.asm	/^c0105491:	e8 49 af ff ff       	call   c01003df <__panic>$/;"	l
c0105496	obj/kernel.asm	/^c0105496:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105499	obj/kernel.asm	/^c0105499:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010549c	obj/kernel.asm	/^c010549c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010549f	obj/kernel.asm	/^c010549f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01054a2	obj/kernel.asm	/^c01054a2:	39 c2                	cmp    %eax,%edx$/;"	l
c01054a4	obj/kernel.asm	/^c01054a4:	72 16                	jb     c01054bc <check_vma_overlap+0x78>$/;"	l
c01054a6	obj/kernel.asm	/^c01054a6:	68 b7 cb 10 c0       	push   $0xc010cbb7$/;"	l
c01054ab	obj/kernel.asm	/^c01054ab:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c01054b0	obj/kernel.asm	/^c01054b0:	6a 6d                	push   $0x6d$/;"	l
c01054b2	obj/kernel.asm	/^c01054b2:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c01054b7	obj/kernel.asm	/^c01054b7:	e8 23 af ff ff       	call   c01003df <__panic>$/;"	l
c01054bc	obj/kernel.asm	/^c01054bc:	c9                   	leave  $/;"	l
c01054bd	obj/kernel.asm	/^c01054bd:	c3                   	ret    $/;"	l
c01054be	obj/kernel.asm	/^c01054be <insert_vma_struct>:$/;"	l
c01054be	obj/kernel.asm	/^c01054be:	55                   	push   %ebp$/;"	l
c01054bf	obj/kernel.asm	/^c01054bf:	89 e5                	mov    %esp,%ebp$/;"	l
c01054c1	obj/kernel.asm	/^c01054c1:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01054c4	obj/kernel.asm	/^c01054c4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01054c7	obj/kernel.asm	/^c01054c7:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01054ca	obj/kernel.asm	/^c01054ca:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01054cd	obj/kernel.asm	/^c01054cd:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01054d0	obj/kernel.asm	/^c01054d0:	39 c2                	cmp    %eax,%edx$/;"	l
c01054d2	obj/kernel.asm	/^c01054d2:	72 16                	jb     c01054ea <insert_vma_struct+0x2c>$/;"	l
c01054d4	obj/kernel.asm	/^c01054d4:	68 d5 cb 10 c0       	push   $0xc010cbd5$/;"	l
c01054d9	obj/kernel.asm	/^c01054d9:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c01054de	obj/kernel.asm	/^c01054de:	6a 74                	push   $0x74$/;"	l
c01054e0	obj/kernel.asm	/^c01054e0:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c01054e5	obj/kernel.asm	/^c01054e5:	e8 f5 ae ff ff       	call   c01003df <__panic>$/;"	l
c01054ea	obj/kernel.asm	/^c01054ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01054ed	obj/kernel.asm	/^c01054ed:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01054f0	obj/kernel.asm	/^c01054f0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01054f3	obj/kernel.asm	/^c01054f3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01054f6	obj/kernel.asm	/^c01054f6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01054f9	obj/kernel.asm	/^c01054f9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01054fc	obj/kernel.asm	/^c01054fc:	eb 21                	jmp    c010551f <insert_vma_struct+0x61>$/;"	l
c01054fe	obj/kernel.asm	/^c01054fe:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105501	obj/kernel.asm	/^c0105501:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105504	obj/kernel.asm	/^c0105504:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105507	obj/kernel.asm	/^c0105507:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010550a	obj/kernel.asm	/^c010550a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010550d	obj/kernel.asm	/^c010550d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105510	obj/kernel.asm	/^c0105510:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105513	obj/kernel.asm	/^c0105513:	39 c2                	cmp    %eax,%edx$/;"	l
c0105515	obj/kernel.asm	/^c0105515:	76 02                	jbe    c0105519 <insert_vma_struct+0x5b>$/;"	l
c0105517	obj/kernel.asm	/^c0105517:	eb 1d                	jmp    c0105536 <insert_vma_struct+0x78>$/;"	l
c0105519	obj/kernel.asm	/^c0105519:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010551c	obj/kernel.asm	/^c010551c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010551f	obj/kernel.asm	/^c010551f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105522	obj/kernel.asm	/^c0105522:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105525	obj/kernel.asm	/^c0105525:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105528	obj/kernel.asm	/^c0105528:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010552b	obj/kernel.asm	/^c010552b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010552e	obj/kernel.asm	/^c010552e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105531	obj/kernel.asm	/^c0105531:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0105534	obj/kernel.asm	/^c0105534:	75 c8                	jne    c01054fe <insert_vma_struct+0x40>$/;"	l
c0105536	obj/kernel.asm	/^c0105536:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105539	obj/kernel.asm	/^c0105539:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010553c	obj/kernel.asm	/^c010553c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010553f	obj/kernel.asm	/^c010553f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105542	obj/kernel.asm	/^c0105542:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105545	obj/kernel.asm	/^c0105545:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105548	obj/kernel.asm	/^c0105548:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010554b	obj/kernel.asm	/^c010554b:	74 15                	je     c0105562 <insert_vma_struct+0xa4>$/;"	l
c010554d	obj/kernel.asm	/^c010554d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105550	obj/kernel.asm	/^c0105550:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105553	obj/kernel.asm	/^c0105553:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105556	obj/kernel.asm	/^c0105556:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0105559	obj/kernel.asm	/^c0105559:	50                   	push   %eax$/;"	l
c010555a	obj/kernel.asm	/^c010555a:	e8 e5 fe ff ff       	call   c0105444 <check_vma_overlap>$/;"	l
c010555f	obj/kernel.asm	/^c010555f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105562	obj/kernel.asm	/^c0105562:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105565	obj/kernel.asm	/^c0105565:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0105568	obj/kernel.asm	/^c0105568:	74 15                	je     c010557f <insert_vma_struct+0xc1>$/;"	l
c010556a	obj/kernel.asm	/^c010556a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010556d	obj/kernel.asm	/^c010556d:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105570	obj/kernel.asm	/^c0105570:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105573	obj/kernel.asm	/^c0105573:	50                   	push   %eax$/;"	l
c0105574	obj/kernel.asm	/^c0105574:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0105577	obj/kernel.asm	/^c0105577:	e8 c8 fe ff ff       	call   c0105444 <check_vma_overlap>$/;"	l
c010557c	obj/kernel.asm	/^c010557c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010557f	obj/kernel.asm	/^c010557f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105582	obj/kernel.asm	/^c0105582:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0105585	obj/kernel.asm	/^c0105585:	89 10                	mov    %edx,(%eax)$/;"	l
c0105587	obj/kernel.asm	/^c0105587:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010558a	obj/kernel.asm	/^c010558a:	8d 50 10             	lea    0x10(%eax),%edx$/;"	l
c010558d	obj/kernel.asm	/^c010558d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105590	obj/kernel.asm	/^c0105590:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0105593	obj/kernel.asm	/^c0105593:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0105596	obj/kernel.asm	/^c0105596:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0105599	obj/kernel.asm	/^c0105599:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010559c	obj/kernel.asm	/^c010559c:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010559f	obj/kernel.asm	/^c010559f:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
c01055a2	obj/kernel.asm	/^c01055a2:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c01055a5	obj/kernel.asm	/^c01055a5:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c01055a8	obj/kernel.asm	/^c01055a8:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c01055ab	obj/kernel.asm	/^c01055ab:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01055ae	obj/kernel.asm	/^c01055ae:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c01055b1	obj/kernel.asm	/^c01055b1:	89 10                	mov    %edx,(%eax)$/;"	l
c01055b3	obj/kernel.asm	/^c01055b3:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01055b6	obj/kernel.asm	/^c01055b6:	8b 10                	mov    (%eax),%edx$/;"	l
c01055b8	obj/kernel.asm	/^c01055b8:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01055bb	obj/kernel.asm	/^c01055bb:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01055be	obj/kernel.asm	/^c01055be:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01055c1	obj/kernel.asm	/^c01055c1:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c01055c4	obj/kernel.asm	/^c01055c4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01055c7	obj/kernel.asm	/^c01055c7:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01055ca	obj/kernel.asm	/^c01055ca:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01055cd	obj/kernel.asm	/^c01055cd:	89 10                	mov    %edx,(%eax)$/;"	l
c01055cf	obj/kernel.asm	/^c01055cf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01055d2	obj/kernel.asm	/^c01055d2:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01055d5	obj/kernel.asm	/^c01055d5:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01055d8	obj/kernel.asm	/^c01055d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01055db	obj/kernel.asm	/^c01055db:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01055de	obj/kernel.asm	/^c01055de:	c9                   	leave  $/;"	l
c01055df	obj/kernel.asm	/^c01055df:	c3                   	ret    $/;"	l
c01055e0	obj/kernel.asm	/^c01055e0 <mm_destroy>:$/;"	l
c01055e0	obj/kernel.asm	/^c01055e0:	55                   	push   %ebp$/;"	l
c01055e1	obj/kernel.asm	/^c01055e1:	89 e5                	mov    %esp,%ebp$/;"	l
c01055e3	obj/kernel.asm	/^c01055e3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01055e6	obj/kernel.asm	/^c01055e6:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01055e9	obj/kernel.asm	/^c01055e9:	e8 75 fc ff ff       	call   c0105263 <mm_count>$/;"	l
c01055ee	obj/kernel.asm	/^c01055ee:	83 c4 04             	add    $0x4,%esp$/;"	l
c01055f1	obj/kernel.asm	/^c01055f1:	85 c0                	test   %eax,%eax$/;"	l
c01055f3	obj/kernel.asm	/^c01055f3:	74 19                	je     c010560e <mm_destroy+0x2e>$/;"	l
c01055f5	obj/kernel.asm	/^c01055f5:	68 f1 cb 10 c0       	push   $0xc010cbf1$/;"	l
c01055fa	obj/kernel.asm	/^c01055fa:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c01055ff	obj/kernel.asm	/^c01055ff:	68 94 00 00 00       	push   $0x94$/;"	l
c0105604	obj/kernel.asm	/^c0105604:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105609	obj/kernel.asm	/^c0105609:	e8 d1 ad ff ff       	call   c01003df <__panic>$/;"	l
c010560e	obj/kernel.asm	/^c010560e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105611	obj/kernel.asm	/^c0105611:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105614	obj/kernel.asm	/^c0105614:	eb 3a                	jmp    c0105650 <mm_destroy+0x70>$/;"	l
c0105616	obj/kernel.asm	/^c0105616:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105619	obj/kernel.asm	/^c0105619:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010561c	obj/kernel.asm	/^c010561c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010561f	obj/kernel.asm	/^c010561f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105622	obj/kernel.asm	/^c0105622:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0105625	obj/kernel.asm	/^c0105625:	8b 12                	mov    (%edx),%edx$/;"	l
c0105627	obj/kernel.asm	/^c0105627:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010562a	obj/kernel.asm	/^c010562a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010562d	obj/kernel.asm	/^c010562d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105630	obj/kernel.asm	/^c0105630:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0105633	obj/kernel.asm	/^c0105633:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0105636	obj/kernel.asm	/^c0105636:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105639	obj/kernel.asm	/^c0105639:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010563c	obj/kernel.asm	/^c010563c:	89 10                	mov    %edx,(%eax)$/;"	l
c010563e	obj/kernel.asm	/^c010563e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105641	obj/kernel.asm	/^c0105641:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105644	obj/kernel.asm	/^c0105644:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105647	obj/kernel.asm	/^c0105647:	50                   	push   %eax$/;"	l
c0105648	obj/kernel.asm	/^c0105648:	e8 ba 1d 00 00       	call   c0107407 <kfree>$/;"	l
c010564d	obj/kernel.asm	/^c010564d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105650	obj/kernel.asm	/^c0105650:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105653	obj/kernel.asm	/^c0105653:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105656	obj/kernel.asm	/^c0105656:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105659	obj/kernel.asm	/^c0105659:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010565c	obj/kernel.asm	/^c010565c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010565f	obj/kernel.asm	/^c010565f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105662	obj/kernel.asm	/^c0105662:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0105665	obj/kernel.asm	/^c0105665:	75 af                	jne    c0105616 <mm_destroy+0x36>$/;"	l
c0105667	obj/kernel.asm	/^c0105667:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010566a	obj/kernel.asm	/^c010566a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010566d	obj/kernel.asm	/^c010566d:	e8 95 1d 00 00       	call   c0107407 <kfree>$/;"	l
c0105672	obj/kernel.asm	/^c0105672:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105675	obj/kernel.asm	/^c0105675:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)$/;"	l
c010567c	obj/kernel.asm	/^c010567c:	c9                   	leave  $/;"	l
c010567d	obj/kernel.asm	/^c010567d:	c3                   	ret    $/;"	l
c010567e	obj/kernel.asm	/^c010567e <mm_map>:$/;"	l
c010567e	obj/kernel.asm	/^c010567e:	55                   	push   %ebp$/;"	l
c010567f	obj/kernel.asm	/^c010567f:	89 e5                	mov    %esp,%ebp$/;"	l
c0105681	obj/kernel.asm	/^c0105681:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105684	obj/kernel.asm	/^c0105684:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105687	obj/kernel.asm	/^c0105687:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010568a	obj/kernel.asm	/^c010568a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010568d	obj/kernel.asm	/^c010568d:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0105692	obj/kernel.asm	/^c0105692:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105695	obj/kernel.asm	/^c0105695:	c7 45 e8 00 10 00 00 	movl   $0x1000,-0x18(%ebp)$/;"	l
c010569c	obj/kernel.asm	/^c010569c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010569f	obj/kernel.asm	/^c010569f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01056a2	obj/kernel.asm	/^c01056a2:	01 c2                	add    %eax,%edx$/;"	l
c01056a4	obj/kernel.asm	/^c01056a4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01056a7	obj/kernel.asm	/^c01056a7:	01 d0                	add    %edx,%eax$/;"	l
c01056a9	obj/kernel.asm	/^c01056a9:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01056ac	obj/kernel.asm	/^c01056ac:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01056af	obj/kernel.asm	/^c01056af:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01056b2	obj/kernel.asm	/^c01056b2:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01056b7	obj/kernel.asm	/^c01056b7:	f7 75 e8             	divl   -0x18(%ebp)$/;"	l
c01056ba	obj/kernel.asm	/^c01056ba:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01056bd	obj/kernel.asm	/^c01056bd:	29 d0                	sub    %edx,%eax$/;"	l
c01056bf	obj/kernel.asm	/^c01056bf:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01056c2	obj/kernel.asm	/^c01056c2:	81 7d ec ff ff 1f 00 	cmpl   $0x1fffff,-0x14(%ebp)$/;"	l
c01056c9	obj/kernel.asm	/^c01056c9:	76 11                	jbe    c01056dc <mm_map+0x5e>$/;"	l
c01056cb	obj/kernel.asm	/^c01056cb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01056ce	obj/kernel.asm	/^c01056ce:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c01056d1	obj/kernel.asm	/^c01056d1:	73 09                	jae    c01056dc <mm_map+0x5e>$/;"	l
c01056d3	obj/kernel.asm	/^c01056d3:	81 7d e0 00 00 00 b0 	cmpl   $0xb0000000,-0x20(%ebp)$/;"	l
c01056da	obj/kernel.asm	/^c01056da:	76 0a                	jbe    c01056e6 <mm_map+0x68>$/;"	l
c01056dc	obj/kernel.asm	/^c01056dc:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01056e1	obj/kernel.asm	/^c01056e1:	e9 9c 00 00 00       	jmp    c0105782 <mm_map+0x104>$/;"	l
c01056e6	obj/kernel.asm	/^c01056e6:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01056ea	obj/kernel.asm	/^c01056ea:	75 19                	jne    c0105705 <mm_map+0x87>$/;"	l
c01056ec	obj/kernel.asm	/^c01056ec:	68 03 cc 10 c0       	push   $0xc010cc03$/;"	l
c01056f1	obj/kernel.asm	/^c01056f1:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c01056f6	obj/kernel.asm	/^c01056f6:	68 a7 00 00 00       	push   $0xa7$/;"	l
c01056fb	obj/kernel.asm	/^c01056fb:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105700	obj/kernel.asm	/^c0105700:	e8 da ac ff ff       	call   c01003df <__panic>$/;"	l
c0105705	obj/kernel.asm	/^c0105705:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010570c	obj/kernel.asm	/^c010570c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010570f	obj/kernel.asm	/^c010570f:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0105712	obj/kernel.asm	/^c0105712:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105715	obj/kernel.asm	/^c0105715:	e8 79 fc ff ff       	call   c0105393 <find_vma>$/;"	l
c010571a	obj/kernel.asm	/^c010571a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010571d	obj/kernel.asm	/^c010571d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105720	obj/kernel.asm	/^c0105720:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0105724	obj/kernel.asm	/^c0105724:	74 0d                	je     c0105733 <mm_map+0xb5>$/;"	l
c0105726	obj/kernel.asm	/^c0105726:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105729	obj/kernel.asm	/^c0105729:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010572c	obj/kernel.asm	/^c010572c:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c010572f	obj/kernel.asm	/^c010572f:	73 02                	jae    c0105733 <mm_map+0xb5>$/;"	l
c0105731	obj/kernel.asm	/^c0105731:	eb 4c                	jmp    c010577f <mm_map+0x101>$/;"	l
c0105733	obj/kernel.asm	/^c0105733:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010573a	obj/kernel.asm	/^c010573a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010573d	obj/kernel.asm	/^c010573d:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0105740	obj/kernel.asm	/^c0105740:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0105743	obj/kernel.asm	/^c0105743:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0105746	obj/kernel.asm	/^c0105746:	e8 0c fc ff ff       	call   c0105357 <vma_create>$/;"	l
c010574b	obj/kernel.asm	/^c010574b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010574e	obj/kernel.asm	/^c010574e:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105751	obj/kernel.asm	/^c0105751:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0105755	obj/kernel.asm	/^c0105755:	75 02                	jne    c0105759 <mm_map+0xdb>$/;"	l
c0105757	obj/kernel.asm	/^c0105757:	eb 26                	jmp    c010577f <mm_map+0x101>$/;"	l
c0105759	obj/kernel.asm	/^c0105759:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010575c	obj/kernel.asm	/^c010575c:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c010575f	obj/kernel.asm	/^c010575f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105762	obj/kernel.asm	/^c0105762:	e8 57 fd ff ff       	call   c01054be <insert_vma_struct>$/;"	l
c0105767	obj/kernel.asm	/^c0105767:	83 c4 10             	add    $0x10,%esp$/;"	l
c010576a	obj/kernel.asm	/^c010576a:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c010576e	obj/kernel.asm	/^c010576e:	74 08                	je     c0105778 <mm_map+0xfa>$/;"	l
c0105770	obj/kernel.asm	/^c0105770:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0105773	obj/kernel.asm	/^c0105773:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105776	obj/kernel.asm	/^c0105776:	89 10                	mov    %edx,(%eax)$/;"	l
c0105778	obj/kernel.asm	/^c0105778:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010577f	obj/kernel.asm	/^c010577f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105782	obj/kernel.asm	/^c0105782:	c9                   	leave  $/;"	l
c0105783	obj/kernel.asm	/^c0105783:	c3                   	ret    $/;"	l
c0105784	obj/kernel.asm	/^c0105784 <dup_mmap>:$/;"	l
c0105784	obj/kernel.asm	/^c0105784:	55                   	push   %ebp$/;"	l
c0105785	obj/kernel.asm	/^c0105785:	89 e5                	mov    %esp,%ebp$/;"	l
c0105787	obj/kernel.asm	/^c0105787:	53                   	push   %ebx$/;"	l
c0105788	obj/kernel.asm	/^c0105788:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010578b	obj/kernel.asm	/^c010578b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010578f	obj/kernel.asm	/^c010578f:	74 06                	je     c0105797 <dup_mmap+0x13>$/;"	l
c0105791	obj/kernel.asm	/^c0105791:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0105795	obj/kernel.asm	/^c0105795:	75 19                	jne    c01057b0 <dup_mmap+0x2c>$/;"	l
c0105797	obj/kernel.asm	/^c0105797:	68 0e cc 10 c0       	push   $0xc010cc0e$/;"	l
c010579c	obj/kernel.asm	/^c010579c:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c01057a1	obj/kernel.asm	/^c01057a1:	68 c0 00 00 00       	push   $0xc0$/;"	l
c01057a6	obj/kernel.asm	/^c01057a6:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c01057ab	obj/kernel.asm	/^c01057ab:	e8 2f ac ff ff       	call   c01003df <__panic>$/;"	l
c01057b0	obj/kernel.asm	/^c01057b0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01057b3	obj/kernel.asm	/^c01057b3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01057b6	obj/kernel.asm	/^c01057b6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01057b9	obj/kernel.asm	/^c01057b9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01057bc	obj/kernel.asm	/^c01057bc:	e9 86 00 00 00       	jmp    c0105847 <dup_mmap+0xc3>$/;"	l
c01057c1	obj/kernel.asm	/^c01057c1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01057c4	obj/kernel.asm	/^c01057c4:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01057c7	obj/kernel.asm	/^c01057c7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01057ca	obj/kernel.asm	/^c01057ca:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01057cd	obj/kernel.asm	/^c01057cd:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c01057d0	obj/kernel.asm	/^c01057d0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01057d3	obj/kernel.asm	/^c01057d3:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01057d6	obj/kernel.asm	/^c01057d6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01057d9	obj/kernel.asm	/^c01057d9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01057dc	obj/kernel.asm	/^c01057dc:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01057df	obj/kernel.asm	/^c01057df:	51                   	push   %ecx$/;"	l
c01057e0	obj/kernel.asm	/^c01057e0:	52                   	push   %edx$/;"	l
c01057e1	obj/kernel.asm	/^c01057e1:	50                   	push   %eax$/;"	l
c01057e2	obj/kernel.asm	/^c01057e2:	e8 70 fb ff ff       	call   c0105357 <vma_create>$/;"	l
c01057e7	obj/kernel.asm	/^c01057e7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01057ea	obj/kernel.asm	/^c01057ea:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01057ed	obj/kernel.asm	/^c01057ed:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01057f1	obj/kernel.asm	/^c01057f1:	75 07                	jne    c01057fa <dup_mmap+0x76>$/;"	l
c01057f3	obj/kernel.asm	/^c01057f3:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01057f8	obj/kernel.asm	/^c01057f8:	eb 6c                	jmp    c0105866 <dup_mmap+0xe2>$/;"	l
c01057fa	obj/kernel.asm	/^c01057fa:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01057fd	obj/kernel.asm	/^c01057fd:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105800	obj/kernel.asm	/^c0105800:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105803	obj/kernel.asm	/^c0105803:	e8 b6 fc ff ff       	call   c01054be <insert_vma_struct>$/;"	l
c0105808	obj/kernel.asm	/^c0105808:	83 c4 10             	add    $0x10,%esp$/;"	l
c010580b	obj/kernel.asm	/^c010580b:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0105812	obj/kernel.asm	/^c0105812:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105815	obj/kernel.asm	/^c0105815:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c0105818	obj/kernel.asm	/^c0105818:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010581b	obj/kernel.asm	/^c010581b:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c010581e	obj/kernel.asm	/^c010581e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105821	obj/kernel.asm	/^c0105821:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c0105824	obj/kernel.asm	/^c0105824:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105827	obj/kernel.asm	/^c0105827:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010582a	obj/kernel.asm	/^c010582a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010582d	obj/kernel.asm	/^c010582d:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0105830	obj/kernel.asm	/^c0105830:	53                   	push   %ebx$/;"	l
c0105831	obj/kernel.asm	/^c0105831:	51                   	push   %ecx$/;"	l
c0105832	obj/kernel.asm	/^c0105832:	52                   	push   %edx$/;"	l
c0105833	obj/kernel.asm	/^c0105833:	50                   	push   %eax$/;"	l
c0105834	obj/kernel.asm	/^c0105834:	e8 75 eb ff ff       	call   c01043ae <copy_range>$/;"	l
c0105839	obj/kernel.asm	/^c0105839:	83 c4 20             	add    $0x20,%esp$/;"	l
c010583c	obj/kernel.asm	/^c010583c:	85 c0                	test   %eax,%eax$/;"	l
c010583e	obj/kernel.asm	/^c010583e:	74 07                	je     c0105847 <dup_mmap+0xc3>$/;"	l
c0105840	obj/kernel.asm	/^c0105840:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0105845	obj/kernel.asm	/^c0105845:	eb 1f                	jmp    c0105866 <dup_mmap+0xe2>$/;"	l
c0105847	obj/kernel.asm	/^c0105847:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010584a	obj/kernel.asm	/^c010584a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010584d	obj/kernel.asm	/^c010584d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105850	obj/kernel.asm	/^c0105850:	8b 00                	mov    (%eax),%eax$/;"	l
c0105852	obj/kernel.asm	/^c0105852:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105855	obj/kernel.asm	/^c0105855:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105858	obj/kernel.asm	/^c0105858:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010585b	obj/kernel.asm	/^c010585b:	0f 85 60 ff ff ff    	jne    c01057c1 <dup_mmap+0x3d>$/;"	l
c0105861	obj/kernel.asm	/^c0105861:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105866	obj/kernel.asm	/^c0105866:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0105869	obj/kernel.asm	/^c0105869:	c9                   	leave  $/;"	l
c010586a	obj/kernel.asm	/^c010586a:	c3                   	ret    $/;"	l
c010586b	obj/kernel.asm	/^c010586b <exit_mmap>:$/;"	l
c010586b	obj/kernel.asm	/^c010586b:	55                   	push   %ebp$/;"	l
c010586c	obj/kernel.asm	/^c010586c:	89 e5                	mov    %esp,%ebp$/;"	l
c010586e	obj/kernel.asm	/^c010586e:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105871	obj/kernel.asm	/^c0105871:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0105875	obj/kernel.asm	/^c0105875:	74 0f                	je     c0105886 <exit_mmap+0x1b>$/;"	l
c0105877	obj/kernel.asm	/^c0105877:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010587a	obj/kernel.asm	/^c010587a:	e8 e4 f9 ff ff       	call   c0105263 <mm_count>$/;"	l
c010587f	obj/kernel.asm	/^c010587f:	83 c4 04             	add    $0x4,%esp$/;"	l
c0105882	obj/kernel.asm	/^c0105882:	85 c0                	test   %eax,%eax$/;"	l
c0105884	obj/kernel.asm	/^c0105884:	74 19                	je     c010589f <exit_mmap+0x34>$/;"	l
c0105886	obj/kernel.asm	/^c0105886:	68 2c cc 10 c0       	push   $0xc010cc2c$/;"	l
c010588b	obj/kernel.asm	/^c010588b:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105890	obj/kernel.asm	/^c0105890:	68 d6 00 00 00       	push   $0xd6$/;"	l
c0105895	obj/kernel.asm	/^c0105895:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c010589a	obj/kernel.asm	/^c010589a:	e8 40 ab ff ff       	call   c01003df <__panic>$/;"	l
c010589f	obj/kernel.asm	/^c010589f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01058a2	obj/kernel.asm	/^c01058a2:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01058a5	obj/kernel.asm	/^c01058a5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01058a8	obj/kernel.asm	/^c01058a8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01058ab	obj/kernel.asm	/^c01058ab:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01058ae	obj/kernel.asm	/^c01058ae:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01058b1	obj/kernel.asm	/^c01058b1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01058b4	obj/kernel.asm	/^c01058b4:	eb 25                	jmp    c01058db <exit_mmap+0x70>$/;"	l
c01058b6	obj/kernel.asm	/^c01058b6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058b9	obj/kernel.asm	/^c01058b9:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01058bc	obj/kernel.asm	/^c01058bc:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01058bf	obj/kernel.asm	/^c01058bf:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01058c2	obj/kernel.asm	/^c01058c2:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01058c5	obj/kernel.asm	/^c01058c5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01058c8	obj/kernel.asm	/^c01058c8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01058cb	obj/kernel.asm	/^c01058cb:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01058ce	obj/kernel.asm	/^c01058ce:	52                   	push   %edx$/;"	l
c01058cf	obj/kernel.asm	/^c01058cf:	50                   	push   %eax$/;"	l
c01058d0	obj/kernel.asm	/^c01058d0:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01058d3	obj/kernel.asm	/^c01058d3:	e8 11 e9 ff ff       	call   c01041e9 <unmap_range>$/;"	l
c01058d8	obj/kernel.asm	/^c01058d8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01058db	obj/kernel.asm	/^c01058db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058de	obj/kernel.asm	/^c01058de:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01058e1	obj/kernel.asm	/^c01058e1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01058e4	obj/kernel.asm	/^c01058e4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01058e7	obj/kernel.asm	/^c01058e7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01058ea	obj/kernel.asm	/^c01058ea:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058ed	obj/kernel.asm	/^c01058ed:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01058f0	obj/kernel.asm	/^c01058f0:	75 c4                	jne    c01058b6 <exit_mmap+0x4b>$/;"	l
c01058f2	obj/kernel.asm	/^c01058f2:	eb 25                	jmp    c0105919 <exit_mmap+0xae>$/;"	l
c01058f4	obj/kernel.asm	/^c01058f4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01058f7	obj/kernel.asm	/^c01058f7:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01058fa	obj/kernel.asm	/^c01058fa:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01058fd	obj/kernel.asm	/^c01058fd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105900	obj/kernel.asm	/^c0105900:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0105903	obj/kernel.asm	/^c0105903:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105906	obj/kernel.asm	/^c0105906:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105909	obj/kernel.asm	/^c0105909:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010590c	obj/kernel.asm	/^c010590c:	52                   	push   %edx$/;"	l
c010590d	obj/kernel.asm	/^c010590d:	50                   	push   %eax$/;"	l
c010590e	obj/kernel.asm	/^c010590e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0105911	obj/kernel.asm	/^c0105911:	e8 a5 e9 ff ff       	call   c01042bb <exit_range>$/;"	l
c0105916	obj/kernel.asm	/^c0105916:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105919	obj/kernel.asm	/^c0105919:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010591c	obj/kernel.asm	/^c010591c:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010591f	obj/kernel.asm	/^c010591f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105922	obj/kernel.asm	/^c0105922:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105925	obj/kernel.asm	/^c0105925:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105928	obj/kernel.asm	/^c0105928:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010592b	obj/kernel.asm	/^c010592b:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010592e	obj/kernel.asm	/^c010592e:	75 c4                	jne    c01058f4 <exit_mmap+0x89>$/;"	l
c0105930	obj/kernel.asm	/^c0105930:	c9                   	leave  $/;"	l
c0105931	obj/kernel.asm	/^c0105931:	c3                   	ret    $/;"	l
c0105932	obj/kernel.asm	/^c0105932 <copy_from_user>:$/;"	l
c0105932	obj/kernel.asm	/^c0105932:	55                   	push   %ebp$/;"	l
c0105933	obj/kernel.asm	/^c0105933:	89 e5                	mov    %esp,%ebp$/;"	l
c0105935	obj/kernel.asm	/^c0105935:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105938	obj/kernel.asm	/^c0105938:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010593b	obj/kernel.asm	/^c010593b:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
c010593e	obj/kernel.asm	/^c010593e:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0105941	obj/kernel.asm	/^c0105941:	50                   	push   %eax$/;"	l
c0105942	obj/kernel.asm	/^c0105942:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105945	obj/kernel.asm	/^c0105945:	e8 c7 08 00 00       	call   c0106211 <user_mem_check>$/;"	l
c010594a	obj/kernel.asm	/^c010594a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010594d	obj/kernel.asm	/^c010594d:	85 c0                	test   %eax,%eax$/;"	l
c010594f	obj/kernel.asm	/^c010594f:	75 07                	jne    c0105958 <copy_from_user+0x26>$/;"	l
c0105951	obj/kernel.asm	/^c0105951:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105956	obj/kernel.asm	/^c0105956:	eb 19                	jmp    c0105971 <copy_from_user+0x3f>$/;"	l
c0105958	obj/kernel.asm	/^c0105958:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010595b	obj/kernel.asm	/^c010595b:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010595e	obj/kernel.asm	/^c010595e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0105961	obj/kernel.asm	/^c0105961:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0105964	obj/kernel.asm	/^c0105964:	e8 bd 59 00 00       	call   c010b326 <memcpy>$/;"	l
c0105969	obj/kernel.asm	/^c0105969:	83 c4 10             	add    $0x10,%esp$/;"	l
c010596c	obj/kernel.asm	/^c010596c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0105971	obj/kernel.asm	/^c0105971:	c9                   	leave  $/;"	l
c0105972	obj/kernel.asm	/^c0105972:	c3                   	ret    $/;"	l
c0105973	obj/kernel.asm	/^c0105973 <copy_to_user>:$/;"	l
c0105973	obj/kernel.asm	/^c0105973:	55                   	push   %ebp$/;"	l
c0105974	obj/kernel.asm	/^c0105974:	89 e5                	mov    %esp,%ebp$/;"	l
c0105976	obj/kernel.asm	/^c0105976:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105979	obj/kernel.asm	/^c0105979:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010597c	obj/kernel.asm	/^c010597c:	6a 01                	push   $0x1$/;"	l
c010597e	obj/kernel.asm	/^c010597e:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0105981	obj/kernel.asm	/^c0105981:	50                   	push   %eax$/;"	l
c0105982	obj/kernel.asm	/^c0105982:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105985	obj/kernel.asm	/^c0105985:	e8 87 08 00 00       	call   c0106211 <user_mem_check>$/;"	l
c010598a	obj/kernel.asm	/^c010598a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010598d	obj/kernel.asm	/^c010598d:	85 c0                	test   %eax,%eax$/;"	l
c010598f	obj/kernel.asm	/^c010598f:	75 07                	jne    c0105998 <copy_to_user+0x25>$/;"	l
c0105991	obj/kernel.asm	/^c0105991:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105996	obj/kernel.asm	/^c0105996:	eb 19                	jmp    c01059b1 <copy_to_user+0x3e>$/;"	l
c0105998	obj/kernel.asm	/^c0105998:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010599b	obj/kernel.asm	/^c010599b:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010599e	obj/kernel.asm	/^c010599e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01059a1	obj/kernel.asm	/^c01059a1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01059a4	obj/kernel.asm	/^c01059a4:	e8 7d 59 00 00       	call   c010b326 <memcpy>$/;"	l
c01059a9	obj/kernel.asm	/^c01059a9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01059ac	obj/kernel.asm	/^c01059ac:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01059b1	obj/kernel.asm	/^c01059b1:	c9                   	leave  $/;"	l
c01059b2	obj/kernel.asm	/^c01059b2:	c3                   	ret    $/;"	l
c01059b3	obj/kernel.asm	/^c01059b3 <vmm_init>:$/;"	l
c01059b3	obj/kernel.asm	/^c01059b3:	55                   	push   %ebp$/;"	l
c01059b4	obj/kernel.asm	/^c01059b4:	89 e5                	mov    %esp,%ebp$/;"	l
c01059b6	obj/kernel.asm	/^c01059b6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01059b9	obj/kernel.asm	/^c01059b9:	e8 02 00 00 00       	call   c01059c0 <check_vmm>$/;"	l
c01059be	obj/kernel.asm	/^c01059be:	c9                   	leave  $/;"	l
c01059bf	obj/kernel.asm	/^c01059bf:	c3                   	ret    $/;"	l
c01059c0	obj/kernel.asm	/^c01059c0 <check_vmm>:$/;"	l
c01059c0	obj/kernel.asm	/^c01059c0:	55                   	push   %ebp$/;"	l
c01059c1	obj/kernel.asm	/^c01059c1:	89 e5                	mov    %esp,%ebp$/;"	l
c01059c3	obj/kernel.asm	/^c01059c3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01059c6	obj/kernel.asm	/^c01059c6:	e8 2a e0 ff ff       	call   c01039f5 <nr_free_pages>$/;"	l
c01059cb	obj/kernel.asm	/^c01059cb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01059ce	obj/kernel.asm	/^c01059ce:	e8 17 00 00 00       	call   c01059ea <check_vma_struct>$/;"	l
c01059d3	obj/kernel.asm	/^c01059d3:	e8 0e 04 00 00       	call   c0105de6 <check_pgfault>$/;"	l
c01059d8	obj/kernel.asm	/^c01059d8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01059db	obj/kernel.asm	/^c01059db:	68 4c cc 10 c0       	push   $0xc010cc4c$/;"	l
c01059e0	obj/kernel.asm	/^c01059e0:	e8 95 a8 ff ff       	call   c010027a <cprintf>$/;"	l
c01059e5	obj/kernel.asm	/^c01059e5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01059e8	obj/kernel.asm	/^c01059e8:	c9                   	leave  $/;"	l
c01059e9	obj/kernel.asm	/^c01059e9:	c3                   	ret    $/;"	l
c01059ea	obj/kernel.asm	/^c01059ea <check_vma_struct>:$/;"	l
c01059ea	obj/kernel.asm	/^c01059ea:	55                   	push   %ebp$/;"	l
c01059eb	obj/kernel.asm	/^c01059eb:	89 e5                	mov    %esp,%ebp$/;"	l
c01059ed	obj/kernel.asm	/^c01059ed:	83 ec 58             	sub    $0x58,%esp$/;"	l
c01059f0	obj/kernel.asm	/^c01059f0:	e8 00 e0 ff ff       	call   c01039f5 <nr_free_pages>$/;"	l
c01059f5	obj/kernel.asm	/^c01059f5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01059f8	obj/kernel.asm	/^c01059f8:	e8 bc f8 ff ff       	call   c01052b9 <mm_create>$/;"	l
c01059fd	obj/kernel.asm	/^c01059fd:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105a00	obj/kernel.asm	/^c0105a00:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0105a04	obj/kernel.asm	/^c0105a04:	75 19                	jne    c0105a1f <check_vma_struct+0x35>$/;"	l
c0105a06	obj/kernel.asm	/^c0105a06:	68 03 cc 10 c0       	push   $0xc010cc03$/;"	l
c0105a0b	obj/kernel.asm	/^c0105a0b:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105a10	obj/kernel.asm	/^c0105a10:	68 0c 01 00 00       	push   $0x10c$/;"	l
c0105a15	obj/kernel.asm	/^c0105a15:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105a1a	obj/kernel.asm	/^c0105a1a:	e8 c0 a9 ff ff       	call   c01003df <__panic>$/;"	l
c0105a1f	obj/kernel.asm	/^c0105a1f:	c7 45 e4 0a 00 00 00 	movl   $0xa,-0x1c(%ebp)$/;"	l
c0105a26	obj/kernel.asm	/^c0105a26:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0105a29	obj/kernel.asm	/^c0105a29:	89 d0                	mov    %edx,%eax$/;"	l
c0105a2b	obj/kernel.asm	/^c0105a2b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105a2e	obj/kernel.asm	/^c0105a2e:	01 d0                	add    %edx,%eax$/;"	l
c0105a30	obj/kernel.asm	/^c0105a30:	01 c0                	add    %eax,%eax$/;"	l
c0105a32	obj/kernel.asm	/^c0105a32:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105a35	obj/kernel.asm	/^c0105a35:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105a38	obj/kernel.asm	/^c0105a38:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105a3b	obj/kernel.asm	/^c0105a3b:	eb 5f                	jmp    c0105a9c <check_vma_struct+0xb2>$/;"	l
c0105a3d	obj/kernel.asm	/^c0105a3d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105a40	obj/kernel.asm	/^c0105a40:	89 d0                	mov    %edx,%eax$/;"	l
c0105a42	obj/kernel.asm	/^c0105a42:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105a45	obj/kernel.asm	/^c0105a45:	01 d0                	add    %edx,%eax$/;"	l
c0105a47	obj/kernel.asm	/^c0105a47:	83 c0 02             	add    $0x2,%eax$/;"	l
c0105a4a	obj/kernel.asm	/^c0105a4a:	89 c1                	mov    %eax,%ecx$/;"	l
c0105a4c	obj/kernel.asm	/^c0105a4c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105a4f	obj/kernel.asm	/^c0105a4f:	89 d0                	mov    %edx,%eax$/;"	l
c0105a51	obj/kernel.asm	/^c0105a51:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105a54	obj/kernel.asm	/^c0105a54:	01 d0                	add    %edx,%eax$/;"	l
c0105a56	obj/kernel.asm	/^c0105a56:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105a59	obj/kernel.asm	/^c0105a59:	6a 00                	push   $0x0$/;"	l
c0105a5b	obj/kernel.asm	/^c0105a5b:	51                   	push   %ecx$/;"	l
c0105a5c	obj/kernel.asm	/^c0105a5c:	50                   	push   %eax$/;"	l
c0105a5d	obj/kernel.asm	/^c0105a5d:	e8 f5 f8 ff ff       	call   c0105357 <vma_create>$/;"	l
c0105a62	obj/kernel.asm	/^c0105a62:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105a65	obj/kernel.asm	/^c0105a65:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105a68	obj/kernel.asm	/^c0105a68:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0105a6c	obj/kernel.asm	/^c0105a6c:	75 19                	jne    c0105a87 <check_vma_struct+0x9d>$/;"	l
c0105a6e	obj/kernel.asm	/^c0105a6e:	68 64 cc 10 c0       	push   $0xc010cc64$/;"	l
c0105a73	obj/kernel.asm	/^c0105a73:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105a78	obj/kernel.asm	/^c0105a78:	68 13 01 00 00       	push   $0x113$/;"	l
c0105a7d	obj/kernel.asm	/^c0105a7d:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105a82	obj/kernel.asm	/^c0105a82:	e8 58 a9 ff ff       	call   c01003df <__panic>$/;"	l
c0105a87	obj/kernel.asm	/^c0105a87:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105a8a	obj/kernel.asm	/^c0105a8a:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0105a8d	obj/kernel.asm	/^c0105a8d:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105a90	obj/kernel.asm	/^c0105a90:	e8 29 fa ff ff       	call   c01054be <insert_vma_struct>$/;"	l
c0105a95	obj/kernel.asm	/^c0105a95:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105a98	obj/kernel.asm	/^c0105a98:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0105a9c	obj/kernel.asm	/^c0105a9c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105aa0	obj/kernel.asm	/^c0105aa0:	7f 9b                	jg     c0105a3d <check_vma_struct+0x53>$/;"	l
c0105aa2	obj/kernel.asm	/^c0105aa2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105aa5	obj/kernel.asm	/^c0105aa5:	83 c0 01             	add    $0x1,%eax$/;"	l
c0105aa8	obj/kernel.asm	/^c0105aa8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105aab	obj/kernel.asm	/^c0105aab:	eb 5f                	jmp    c0105b0c <check_vma_struct+0x122>$/;"	l
c0105aad	obj/kernel.asm	/^c0105aad:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105ab0	obj/kernel.asm	/^c0105ab0:	89 d0                	mov    %edx,%eax$/;"	l
c0105ab2	obj/kernel.asm	/^c0105ab2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105ab5	obj/kernel.asm	/^c0105ab5:	01 d0                	add    %edx,%eax$/;"	l
c0105ab7	obj/kernel.asm	/^c0105ab7:	83 c0 02             	add    $0x2,%eax$/;"	l
c0105aba	obj/kernel.asm	/^c0105aba:	89 c1                	mov    %eax,%ecx$/;"	l
c0105abc	obj/kernel.asm	/^c0105abc:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105abf	obj/kernel.asm	/^c0105abf:	89 d0                	mov    %edx,%eax$/;"	l
c0105ac1	obj/kernel.asm	/^c0105ac1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105ac4	obj/kernel.asm	/^c0105ac4:	01 d0                	add    %edx,%eax$/;"	l
c0105ac6	obj/kernel.asm	/^c0105ac6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105ac9	obj/kernel.asm	/^c0105ac9:	6a 00                	push   $0x0$/;"	l
c0105acb	obj/kernel.asm	/^c0105acb:	51                   	push   %ecx$/;"	l
c0105acc	obj/kernel.asm	/^c0105acc:	50                   	push   %eax$/;"	l
c0105acd	obj/kernel.asm	/^c0105acd:	e8 85 f8 ff ff       	call   c0105357 <vma_create>$/;"	l
c0105ad2	obj/kernel.asm	/^c0105ad2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105ad5	obj/kernel.asm	/^c0105ad5:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0105ad8	obj/kernel.asm	/^c0105ad8:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0105adc	obj/kernel.asm	/^c0105adc:	75 19                	jne    c0105af7 <check_vma_struct+0x10d>$/;"	l
c0105ade	obj/kernel.asm	/^c0105ade:	68 64 cc 10 c0       	push   $0xc010cc64$/;"	l
c0105ae3	obj/kernel.asm	/^c0105ae3:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105ae8	obj/kernel.asm	/^c0105ae8:	68 19 01 00 00       	push   $0x119$/;"	l
c0105aed	obj/kernel.asm	/^c0105aed:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105af2	obj/kernel.asm	/^c0105af2:	e8 e8 a8 ff ff       	call   c01003df <__panic>$/;"	l
c0105af7	obj/kernel.asm	/^c0105af7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105afa	obj/kernel.asm	/^c0105afa:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c0105afd	obj/kernel.asm	/^c0105afd:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105b00	obj/kernel.asm	/^c0105b00:	e8 b9 f9 ff ff       	call   c01054be <insert_vma_struct>$/;"	l
c0105b05	obj/kernel.asm	/^c0105b05:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105b08	obj/kernel.asm	/^c0105b08:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105b0c	obj/kernel.asm	/^c0105b0c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105b0f	obj/kernel.asm	/^c0105b0f:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0105b12	obj/kernel.asm	/^c0105b12:	7e 99                	jle    c0105aad <check_vma_struct+0xc3>$/;"	l
c0105b14	obj/kernel.asm	/^c0105b14:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105b17	obj/kernel.asm	/^c0105b17:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0105b1a	obj/kernel.asm	/^c0105b1a:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0105b1d	obj/kernel.asm	/^c0105b1d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105b20	obj/kernel.asm	/^c0105b20:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105b23	obj/kernel.asm	/^c0105b23:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c0105b2a	obj/kernel.asm	/^c0105b2a:	e9 81 00 00 00       	jmp    c0105bb0 <check_vma_struct+0x1c6>$/;"	l
c0105b2f	obj/kernel.asm	/^c0105b2f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105b32	obj/kernel.asm	/^c0105b32:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0105b35	obj/kernel.asm	/^c0105b35:	75 19                	jne    c0105b50 <check_vma_struct+0x166>$/;"	l
c0105b37	obj/kernel.asm	/^c0105b37:	68 70 cc 10 c0       	push   $0xc010cc70$/;"	l
c0105b3c	obj/kernel.asm	/^c0105b3c:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105b41	obj/kernel.asm	/^c0105b41:	68 20 01 00 00       	push   $0x120$/;"	l
c0105b46	obj/kernel.asm	/^c0105b46:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105b4b	obj/kernel.asm	/^c0105b4b:	e8 8f a8 ff ff       	call   c01003df <__panic>$/;"	l
c0105b50	obj/kernel.asm	/^c0105b50:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105b53	obj/kernel.asm	/^c0105b53:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105b56	obj/kernel.asm	/^c0105b56:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0105b59	obj/kernel.asm	/^c0105b59:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0105b5c	obj/kernel.asm	/^c0105b5c:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c0105b5f	obj/kernel.asm	/^c0105b5f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105b62	obj/kernel.asm	/^c0105b62:	89 d0                	mov    %edx,%eax$/;"	l
c0105b64	obj/kernel.asm	/^c0105b64:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105b67	obj/kernel.asm	/^c0105b67:	01 d0                	add    %edx,%eax$/;"	l
c0105b69	obj/kernel.asm	/^c0105b69:	39 c1                	cmp    %eax,%ecx$/;"	l
c0105b6b	obj/kernel.asm	/^c0105b6b:	75 17                	jne    c0105b84 <check_vma_struct+0x19a>$/;"	l
c0105b6d	obj/kernel.asm	/^c0105b6d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0105b70	obj/kernel.asm	/^c0105b70:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
c0105b73	obj/kernel.asm	/^c0105b73:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105b76	obj/kernel.asm	/^c0105b76:	89 d0                	mov    %edx,%eax$/;"	l
c0105b78	obj/kernel.asm	/^c0105b78:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105b7b	obj/kernel.asm	/^c0105b7b:	01 d0                	add    %edx,%eax$/;"	l
c0105b7d	obj/kernel.asm	/^c0105b7d:	83 c0 02             	add    $0x2,%eax$/;"	l
c0105b80	obj/kernel.asm	/^c0105b80:	39 c1                	cmp    %eax,%ecx$/;"	l
c0105b82	obj/kernel.asm	/^c0105b82:	74 19                	je     c0105b9d <check_vma_struct+0x1b3>$/;"	l
c0105b84	obj/kernel.asm	/^c0105b84:	68 88 cc 10 c0       	push   $0xc010cc88$/;"	l
c0105b89	obj/kernel.asm	/^c0105b89:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105b8e	obj/kernel.asm	/^c0105b8e:	68 22 01 00 00       	push   $0x122$/;"	l
c0105b93	obj/kernel.asm	/^c0105b93:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105b98	obj/kernel.asm	/^c0105b98:	e8 42 a8 ff ff       	call   c01003df <__panic>$/;"	l
c0105b9d	obj/kernel.asm	/^c0105b9d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105ba0	obj/kernel.asm	/^c0105ba0:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0105ba3	obj/kernel.asm	/^c0105ba3:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0105ba6	obj/kernel.asm	/^c0105ba6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105ba9	obj/kernel.asm	/^c0105ba9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105bac	obj/kernel.asm	/^c0105bac:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105bb0	obj/kernel.asm	/^c0105bb0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105bb3	obj/kernel.asm	/^c0105bb3:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0105bb6	obj/kernel.asm	/^c0105bb6:	0f 8e 73 ff ff ff    	jle    c0105b2f <check_vma_struct+0x145>$/;"	l
c0105bbc	obj/kernel.asm	/^c0105bbc:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%ebp)$/;"	l
c0105bc3	obj/kernel.asm	/^c0105bc3:	e9 80 01 00 00       	jmp    c0105d48 <check_vma_struct+0x35e>$/;"	l
c0105bc8	obj/kernel.asm	/^c0105bc8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105bcb	obj/kernel.asm	/^c0105bcb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105bce	obj/kernel.asm	/^c0105bce:	50                   	push   %eax$/;"	l
c0105bcf	obj/kernel.asm	/^c0105bcf:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105bd2	obj/kernel.asm	/^c0105bd2:	e8 bc f7 ff ff       	call   c0105393 <find_vma>$/;"	l
c0105bd7	obj/kernel.asm	/^c0105bd7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105bda	obj/kernel.asm	/^c0105bda:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0105bdd	obj/kernel.asm	/^c0105bdd:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c0105be1	obj/kernel.asm	/^c0105be1:	75 19                	jne    c0105bfc <check_vma_struct+0x212>$/;"	l
c0105be3	obj/kernel.asm	/^c0105be3:	68 bd cc 10 c0       	push   $0xc010ccbd$/;"	l
c0105be8	obj/kernel.asm	/^c0105be8:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105bed	obj/kernel.asm	/^c0105bed:	68 28 01 00 00       	push   $0x128$/;"	l
c0105bf2	obj/kernel.asm	/^c0105bf2:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105bf7	obj/kernel.asm	/^c0105bf7:	e8 e3 a7 ff ff       	call   c01003df <__panic>$/;"	l
c0105bfc	obj/kernel.asm	/^c0105bfc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105bff	obj/kernel.asm	/^c0105bff:	83 c0 01             	add    $0x1,%eax$/;"	l
c0105c02	obj/kernel.asm	/^c0105c02:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105c05	obj/kernel.asm	/^c0105c05:	50                   	push   %eax$/;"	l
c0105c06	obj/kernel.asm	/^c0105c06:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105c09	obj/kernel.asm	/^c0105c09:	e8 85 f7 ff ff       	call   c0105393 <find_vma>$/;"	l
c0105c0e	obj/kernel.asm	/^c0105c0e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105c11	obj/kernel.asm	/^c0105c11:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0105c14	obj/kernel.asm	/^c0105c14:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0105c18	obj/kernel.asm	/^c0105c18:	75 19                	jne    c0105c33 <check_vma_struct+0x249>$/;"	l
c0105c1a	obj/kernel.asm	/^c0105c1a:	68 ca cc 10 c0       	push   $0xc010ccca$/;"	l
c0105c1f	obj/kernel.asm	/^c0105c1f:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105c24	obj/kernel.asm	/^c0105c24:	68 2a 01 00 00       	push   $0x12a$/;"	l
c0105c29	obj/kernel.asm	/^c0105c29:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105c2e	obj/kernel.asm	/^c0105c2e:	e8 ac a7 ff ff       	call   c01003df <__panic>$/;"	l
c0105c33	obj/kernel.asm	/^c0105c33:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105c36	obj/kernel.asm	/^c0105c36:	83 c0 02             	add    $0x2,%eax$/;"	l
c0105c39	obj/kernel.asm	/^c0105c39:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105c3c	obj/kernel.asm	/^c0105c3c:	50                   	push   %eax$/;"	l
c0105c3d	obj/kernel.asm	/^c0105c3d:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105c40	obj/kernel.asm	/^c0105c40:	e8 4e f7 ff ff       	call   c0105393 <find_vma>$/;"	l
c0105c45	obj/kernel.asm	/^c0105c45:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105c48	obj/kernel.asm	/^c0105c48:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0105c4b	obj/kernel.asm	/^c0105c4b:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c0105c4f	obj/kernel.asm	/^c0105c4f:	74 19                	je     c0105c6a <check_vma_struct+0x280>$/;"	l
c0105c51	obj/kernel.asm	/^c0105c51:	68 d7 cc 10 c0       	push   $0xc010ccd7$/;"	l
c0105c56	obj/kernel.asm	/^c0105c56:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105c5b	obj/kernel.asm	/^c0105c5b:	68 2c 01 00 00       	push   $0x12c$/;"	l
c0105c60	obj/kernel.asm	/^c0105c60:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105c65	obj/kernel.asm	/^c0105c65:	e8 75 a7 ff ff       	call   c01003df <__panic>$/;"	l
c0105c6a	obj/kernel.asm	/^c0105c6a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105c6d	obj/kernel.asm	/^c0105c6d:	83 c0 03             	add    $0x3,%eax$/;"	l
c0105c70	obj/kernel.asm	/^c0105c70:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105c73	obj/kernel.asm	/^c0105c73:	50                   	push   %eax$/;"	l
c0105c74	obj/kernel.asm	/^c0105c74:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105c77	obj/kernel.asm	/^c0105c77:	e8 17 f7 ff ff       	call   c0105393 <find_vma>$/;"	l
c0105c7c	obj/kernel.asm	/^c0105c7c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105c7f	obj/kernel.asm	/^c0105c7f:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0105c82	obj/kernel.asm	/^c0105c82:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)$/;"	l
c0105c86	obj/kernel.asm	/^c0105c86:	74 19                	je     c0105ca1 <check_vma_struct+0x2b7>$/;"	l
c0105c88	obj/kernel.asm	/^c0105c88:	68 e4 cc 10 c0       	push   $0xc010cce4$/;"	l
c0105c8d	obj/kernel.asm	/^c0105c8d:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105c92	obj/kernel.asm	/^c0105c92:	68 2e 01 00 00       	push   $0x12e$/;"	l
c0105c97	obj/kernel.asm	/^c0105c97:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105c9c	obj/kernel.asm	/^c0105c9c:	e8 3e a7 ff ff       	call   c01003df <__panic>$/;"	l
c0105ca1	obj/kernel.asm	/^c0105ca1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105ca4	obj/kernel.asm	/^c0105ca4:	83 c0 04             	add    $0x4,%eax$/;"	l
c0105ca7	obj/kernel.asm	/^c0105ca7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105caa	obj/kernel.asm	/^c0105caa:	50                   	push   %eax$/;"	l
c0105cab	obj/kernel.asm	/^c0105cab:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105cae	obj/kernel.asm	/^c0105cae:	e8 e0 f6 ff ff       	call   c0105393 <find_vma>$/;"	l
c0105cb3	obj/kernel.asm	/^c0105cb3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105cb6	obj/kernel.asm	/^c0105cb6:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0105cb9	obj/kernel.asm	/^c0105cb9:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)$/;"	l
c0105cbd	obj/kernel.asm	/^c0105cbd:	74 19                	je     c0105cd8 <check_vma_struct+0x2ee>$/;"	l
c0105cbf	obj/kernel.asm	/^c0105cbf:	68 f1 cc 10 c0       	push   $0xc010ccf1$/;"	l
c0105cc4	obj/kernel.asm	/^c0105cc4:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105cc9	obj/kernel.asm	/^c0105cc9:	68 30 01 00 00       	push   $0x130$/;"	l
c0105cce	obj/kernel.asm	/^c0105cce:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105cd3	obj/kernel.asm	/^c0105cd3:	e8 07 a7 ff ff       	call   c01003df <__panic>$/;"	l
c0105cd8	obj/kernel.asm	/^c0105cd8:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0105cdb	obj/kernel.asm	/^c0105cdb:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0105cde	obj/kernel.asm	/^c0105cde:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105ce1	obj/kernel.asm	/^c0105ce1:	39 c2                	cmp    %eax,%edx$/;"	l
c0105ce3	obj/kernel.asm	/^c0105ce3:	75 10                	jne    c0105cf5 <check_vma_struct+0x30b>$/;"	l
c0105ce5	obj/kernel.asm	/^c0105ce5:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0105ce8	obj/kernel.asm	/^c0105ce8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105ceb	obj/kernel.asm	/^c0105ceb:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105cee	obj/kernel.asm	/^c0105cee:	83 c2 02             	add    $0x2,%edx$/;"	l
c0105cf1	obj/kernel.asm	/^c0105cf1:	39 d0                	cmp    %edx,%eax$/;"	l
c0105cf3	obj/kernel.asm	/^c0105cf3:	74 19                	je     c0105d0e <check_vma_struct+0x324>$/;"	l
c0105cf5	obj/kernel.asm	/^c0105cf5:	68 00 cd 10 c0       	push   $0xc010cd00$/;"	l
c0105cfa	obj/kernel.asm	/^c0105cfa:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105cff	obj/kernel.asm	/^c0105cff:	68 32 01 00 00       	push   $0x132$/;"	l
c0105d04	obj/kernel.asm	/^c0105d04:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105d09	obj/kernel.asm	/^c0105d09:	e8 d1 a6 ff ff       	call   c01003df <__panic>$/;"	l
c0105d0e	obj/kernel.asm	/^c0105d0e:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0105d11	obj/kernel.asm	/^c0105d11:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0105d14	obj/kernel.asm	/^c0105d14:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105d17	obj/kernel.asm	/^c0105d17:	39 c2                	cmp    %eax,%edx$/;"	l
c0105d19	obj/kernel.asm	/^c0105d19:	75 10                	jne    c0105d2b <check_vma_struct+0x341>$/;"	l
c0105d1b	obj/kernel.asm	/^c0105d1b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0105d1e	obj/kernel.asm	/^c0105d1e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105d21	obj/kernel.asm	/^c0105d21:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105d24	obj/kernel.asm	/^c0105d24:	83 c2 02             	add    $0x2,%edx$/;"	l
c0105d27	obj/kernel.asm	/^c0105d27:	39 d0                	cmp    %edx,%eax$/;"	l
c0105d29	obj/kernel.asm	/^c0105d29:	74 19                	je     c0105d44 <check_vma_struct+0x35a>$/;"	l
c0105d2b	obj/kernel.asm	/^c0105d2b:	68 30 cd 10 c0       	push   $0xc010cd30$/;"	l
c0105d30	obj/kernel.asm	/^c0105d30:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105d35	obj/kernel.asm	/^c0105d35:	68 33 01 00 00       	push   $0x133$/;"	l
c0105d3a	obj/kernel.asm	/^c0105d3a:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105d3f	obj/kernel.asm	/^c0105d3f:	e8 9b a6 ff ff       	call   c01003df <__panic>$/;"	l
c0105d44	obj/kernel.asm	/^c0105d44:	83 45 f4 05          	addl   $0x5,-0xc(%ebp)$/;"	l
c0105d48	obj/kernel.asm	/^c0105d48:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0105d4b	obj/kernel.asm	/^c0105d4b:	89 d0                	mov    %edx,%eax$/;"	l
c0105d4d	obj/kernel.asm	/^c0105d4d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105d50	obj/kernel.asm	/^c0105d50:	01 d0                	add    %edx,%eax$/;"	l
c0105d52	obj/kernel.asm	/^c0105d52:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0105d55	obj/kernel.asm	/^c0105d55:	0f 8d 6d fe ff ff    	jge    c0105bc8 <check_vma_struct+0x1de>$/;"	l
c0105d5b	obj/kernel.asm	/^c0105d5b:	c7 45 f4 04 00 00 00 	movl   $0x4,-0xc(%ebp)$/;"	l
c0105d62	obj/kernel.asm	/^c0105d62:	eb 5c                	jmp    c0105dc0 <check_vma_struct+0x3d6>$/;"	l
c0105d64	obj/kernel.asm	/^c0105d64:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105d67	obj/kernel.asm	/^c0105d67:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105d6a	obj/kernel.asm	/^c0105d6a:	50                   	push   %eax$/;"	l
c0105d6b	obj/kernel.asm	/^c0105d6b:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105d6e	obj/kernel.asm	/^c0105d6e:	e8 20 f6 ff ff       	call   c0105393 <find_vma>$/;"	l
c0105d73	obj/kernel.asm	/^c0105d73:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105d76	obj/kernel.asm	/^c0105d76:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0105d79	obj/kernel.asm	/^c0105d79:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0105d7d	obj/kernel.asm	/^c0105d7d:	74 1e                	je     c0105d9d <check_vma_struct+0x3b3>$/;"	l
c0105d7f	obj/kernel.asm	/^c0105d7f:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0105d82	obj/kernel.asm	/^c0105d82:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0105d85	obj/kernel.asm	/^c0105d85:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0105d88	obj/kernel.asm	/^c0105d88:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105d8b	obj/kernel.asm	/^c0105d8b:	52                   	push   %edx$/;"	l
c0105d8c	obj/kernel.asm	/^c0105d8c:	50                   	push   %eax$/;"	l
c0105d8d	obj/kernel.asm	/^c0105d8d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0105d90	obj/kernel.asm	/^c0105d90:	68 60 cd 10 c0       	push   $0xc010cd60$/;"	l
c0105d95	obj/kernel.asm	/^c0105d95:	e8 e0 a4 ff ff       	call   c010027a <cprintf>$/;"	l
c0105d9a	obj/kernel.asm	/^c0105d9a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105d9d	obj/kernel.asm	/^c0105d9d:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0105da1	obj/kernel.asm	/^c0105da1:	74 19                	je     c0105dbc <check_vma_struct+0x3d2>$/;"	l
c0105da3	obj/kernel.asm	/^c0105da3:	68 85 cd 10 c0       	push   $0xc010cd85$/;"	l
c0105da8	obj/kernel.asm	/^c0105da8:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105dad	obj/kernel.asm	/^c0105dad:	68 3b 01 00 00       	push   $0x13b$/;"	l
c0105db2	obj/kernel.asm	/^c0105db2:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105db7	obj/kernel.asm	/^c0105db7:	e8 23 a6 ff ff       	call   c01003df <__panic>$/;"	l
c0105dbc	obj/kernel.asm	/^c0105dbc:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0105dc0	obj/kernel.asm	/^c0105dc0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105dc4	obj/kernel.asm	/^c0105dc4:	79 9e                	jns    c0105d64 <check_vma_struct+0x37a>$/;"	l
c0105dc6	obj/kernel.asm	/^c0105dc6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105dc9	obj/kernel.asm	/^c0105dc9:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105dcc	obj/kernel.asm	/^c0105dcc:	e8 0f f8 ff ff       	call   c01055e0 <mm_destroy>$/;"	l
c0105dd1	obj/kernel.asm	/^c0105dd1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105dd4	obj/kernel.asm	/^c0105dd4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105dd7	obj/kernel.asm	/^c0105dd7:	68 9c cd 10 c0       	push   $0xc010cd9c$/;"	l
c0105ddc	obj/kernel.asm	/^c0105ddc:	e8 99 a4 ff ff       	call   c010027a <cprintf>$/;"	l
c0105de1	obj/kernel.asm	/^c0105de1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105de4	obj/kernel.asm	/^c0105de4:	c9                   	leave  $/;"	l
c0105de5	obj/kernel.asm	/^c0105de5:	c3                   	ret    $/;"	l
c0105de6	obj/kernel.asm	/^c0105de6 <check_pgfault>:$/;"	l
c0105de6	obj/kernel.asm	/^c0105de6:	55                   	push   %ebp$/;"	l
c0105de7	obj/kernel.asm	/^c0105de7:	89 e5                	mov    %esp,%ebp$/;"	l
c0105de9	obj/kernel.asm	/^c0105de9:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105dec	obj/kernel.asm	/^c0105dec:	e8 04 dc ff ff       	call   c01039f5 <nr_free_pages>$/;"	l
c0105df1	obj/kernel.asm	/^c0105df1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105df4	obj/kernel.asm	/^c0105df4:	e8 c0 f4 ff ff       	call   c01052b9 <mm_create>$/;"	l
c0105df9	obj/kernel.asm	/^c0105df9:	a3 1c 0f 1b c0       	mov    %eax,0xc01b0f1c$/;"	l
c0105dfe	obj/kernel.asm	/^c0105dfe:	a1 1c 0f 1b c0       	mov    0xc01b0f1c,%eax$/;"	l
c0105e03	obj/kernel.asm	/^c0105e03:	85 c0                	test   %eax,%eax$/;"	l
c0105e05	obj/kernel.asm	/^c0105e05:	75 19                	jne    c0105e20 <check_pgfault+0x3a>$/;"	l
c0105e07	obj/kernel.asm	/^c0105e07:	68 bb cd 10 c0       	push   $0xc010cdbb$/;"	l
c0105e0c	obj/kernel.asm	/^c0105e0c:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105e11	obj/kernel.asm	/^c0105e11:	68 4b 01 00 00       	push   $0x14b$/;"	l
c0105e16	obj/kernel.asm	/^c0105e16:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105e1b	obj/kernel.asm	/^c0105e1b:	e8 bf a5 ff ff       	call   c01003df <__panic>$/;"	l
c0105e20	obj/kernel.asm	/^c0105e20:	a1 1c 0f 1b c0       	mov    0xc01b0f1c,%eax$/;"	l
c0105e25	obj/kernel.asm	/^c0105e25:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105e28	obj/kernel.asm	/^c0105e28:	8b 15 84 ed 1a c0    	mov    0xc01aed84,%edx$/;"	l
c0105e2e	obj/kernel.asm	/^c0105e2e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105e31	obj/kernel.asm	/^c0105e31:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0105e34	obj/kernel.asm	/^c0105e34:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105e37	obj/kernel.asm	/^c0105e37:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0105e3a	obj/kernel.asm	/^c0105e3a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105e3d	obj/kernel.asm	/^c0105e3d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105e40	obj/kernel.asm	/^c0105e40:	8b 00                	mov    (%eax),%eax$/;"	l
c0105e42	obj/kernel.asm	/^c0105e42:	85 c0                	test   %eax,%eax$/;"	l
c0105e44	obj/kernel.asm	/^c0105e44:	74 19                	je     c0105e5f <check_pgfault+0x79>$/;"	l
c0105e46	obj/kernel.asm	/^c0105e46:	68 d3 cd 10 c0       	push   $0xc010cdd3$/;"	l
c0105e4b	obj/kernel.asm	/^c0105e4b:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105e50	obj/kernel.asm	/^c0105e50:	68 4f 01 00 00       	push   $0x14f$/;"	l
c0105e55	obj/kernel.asm	/^c0105e55:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105e5a	obj/kernel.asm	/^c0105e5a:	e8 80 a5 ff ff       	call   c01003df <__panic>$/;"	l
c0105e5f	obj/kernel.asm	/^c0105e5f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105e62	obj/kernel.asm	/^c0105e62:	6a 02                	push   $0x2$/;"	l
c0105e64	obj/kernel.asm	/^c0105e64:	68 00 00 40 00       	push   $0x400000$/;"	l
c0105e69	obj/kernel.asm	/^c0105e69:	6a 00                	push   $0x0$/;"	l
c0105e6b	obj/kernel.asm	/^c0105e6b:	e8 e7 f4 ff ff       	call   c0105357 <vma_create>$/;"	l
c0105e70	obj/kernel.asm	/^c0105e70:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105e73	obj/kernel.asm	/^c0105e73:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105e76	obj/kernel.asm	/^c0105e76:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0105e7a	obj/kernel.asm	/^c0105e7a:	75 19                	jne    c0105e95 <check_pgfault+0xaf>$/;"	l
c0105e7c	obj/kernel.asm	/^c0105e7c:	68 64 cc 10 c0       	push   $0xc010cc64$/;"	l
c0105e81	obj/kernel.asm	/^c0105e81:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105e86	obj/kernel.asm	/^c0105e86:	68 52 01 00 00       	push   $0x152$/;"	l
c0105e8b	obj/kernel.asm	/^c0105e8b:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105e90	obj/kernel.asm	/^c0105e90:	e8 4a a5 ff ff       	call   c01003df <__panic>$/;"	l
c0105e95	obj/kernel.asm	/^c0105e95:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105e98	obj/kernel.asm	/^c0105e98:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0105e9b	obj/kernel.asm	/^c0105e9b:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105e9e	obj/kernel.asm	/^c0105e9e:	e8 1b f6 ff ff       	call   c01054be <insert_vma_struct>$/;"	l
c0105ea3	obj/kernel.asm	/^c0105ea3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105ea6	obj/kernel.asm	/^c0105ea6:	c7 45 dc 00 01 00 00 	movl   $0x100,-0x24(%ebp)$/;"	l
c0105ead	obj/kernel.asm	/^c0105ead:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105eb0	obj/kernel.asm	/^c0105eb0:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0105eb3	obj/kernel.asm	/^c0105eb3:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105eb6	obj/kernel.asm	/^c0105eb6:	e8 d8 f4 ff ff       	call   c0105393 <find_vma>$/;"	l
c0105ebb	obj/kernel.asm	/^c0105ebb:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105ebe	obj/kernel.asm	/^c0105ebe:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0105ec1	obj/kernel.asm	/^c0105ec1:	74 19                	je     c0105edc <check_pgfault+0xf6>$/;"	l
c0105ec3	obj/kernel.asm	/^c0105ec3:	68 e1 cd 10 c0       	push   $0xc010cde1$/;"	l
c0105ec8	obj/kernel.asm	/^c0105ec8:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105ecd	obj/kernel.asm	/^c0105ecd:	68 57 01 00 00       	push   $0x157$/;"	l
c0105ed2	obj/kernel.asm	/^c0105ed2:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105ed7	obj/kernel.asm	/^c0105ed7:	e8 03 a5 ff ff       	call   c01003df <__panic>$/;"	l
c0105edc	obj/kernel.asm	/^c0105edc:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0105ee3	obj/kernel.asm	/^c0105ee3:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0105eea	obj/kernel.asm	/^c0105eea:	eb 19                	jmp    c0105f05 <check_pgfault+0x11f>$/;"	l
c0105eec	obj/kernel.asm	/^c0105eec:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105eef	obj/kernel.asm	/^c0105eef:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105ef2	obj/kernel.asm	/^c0105ef2:	01 d0                	add    %edx,%eax$/;"	l
c0105ef4	obj/kernel.asm	/^c0105ef4:	89 c2                	mov    %eax,%edx$/;"	l
c0105ef6	obj/kernel.asm	/^c0105ef6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105ef9	obj/kernel.asm	/^c0105ef9:	88 02                	mov    %al,(%edx)$/;"	l
c0105efb	obj/kernel.asm	/^c0105efb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105efe	obj/kernel.asm	/^c0105efe:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c0105f01	obj/kernel.asm	/^c0105f01:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105f05	obj/kernel.asm	/^c0105f05:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c0105f09	obj/kernel.asm	/^c0105f09:	7e e1                	jle    c0105eec <check_pgfault+0x106>$/;"	l
c0105f0b	obj/kernel.asm	/^c0105f0b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0105f12	obj/kernel.asm	/^c0105f12:	eb 15                	jmp    c0105f29 <check_pgfault+0x143>$/;"	l
c0105f14	obj/kernel.asm	/^c0105f14:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105f17	obj/kernel.asm	/^c0105f17:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105f1a	obj/kernel.asm	/^c0105f1a:	01 d0                	add    %edx,%eax$/;"	l
c0105f1c	obj/kernel.asm	/^c0105f1c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0105f1f	obj/kernel.asm	/^c0105f1f:	0f be c0             	movsbl %al,%eax$/;"	l
c0105f22	obj/kernel.asm	/^c0105f22:	29 45 f0             	sub    %eax,-0x10(%ebp)$/;"	l
c0105f25	obj/kernel.asm	/^c0105f25:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105f29	obj/kernel.asm	/^c0105f29:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c0105f2d	obj/kernel.asm	/^c0105f2d:	7e e5                	jle    c0105f14 <check_pgfault+0x12e>$/;"	l
c0105f2f	obj/kernel.asm	/^c0105f2f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0105f33	obj/kernel.asm	/^c0105f33:	74 19                	je     c0105f4e <check_pgfault+0x168>$/;"	l
c0105f35	obj/kernel.asm	/^c0105f35:	68 fb cd 10 c0       	push   $0xc010cdfb$/;"	l
c0105f3a	obj/kernel.asm	/^c0105f3a:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105f3f	obj/kernel.asm	/^c0105f3f:	68 61 01 00 00       	push   $0x161$/;"	l
c0105f44	obj/kernel.asm	/^c0105f44:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105f49	obj/kernel.asm	/^c0105f49:	e8 91 a4 ff ff       	call   c01003df <__panic>$/;"	l
c0105f4e	obj/kernel.asm	/^c0105f4e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105f51	obj/kernel.asm	/^c0105f51:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0105f54	obj/kernel.asm	/^c0105f54:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0105f57	obj/kernel.asm	/^c0105f57:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0105f5c	obj/kernel.asm	/^c0105f5c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105f5f	obj/kernel.asm	/^c0105f5f:	50                   	push   %eax$/;"	l
c0105f60	obj/kernel.asm	/^c0105f60:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0105f63	obj/kernel.asm	/^c0105f63:	e8 21 e6 ff ff       	call   c0104589 <page_remove>$/;"	l
c0105f68	obj/kernel.asm	/^c0105f68:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105f6b	obj/kernel.asm	/^c0105f6b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105f6e	obj/kernel.asm	/^c0105f6e:	8b 00                	mov    (%eax),%eax$/;"	l
c0105f70	obj/kernel.asm	/^c0105f70:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105f73	obj/kernel.asm	/^c0105f73:	50                   	push   %eax$/;"	l
c0105f74	obj/kernel.asm	/^c0105f74:	e8 03 f3 ff ff       	call   c010527c <pa2page>$/;"	l
c0105f79	obj/kernel.asm	/^c0105f79:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105f7c	obj/kernel.asm	/^c0105f7c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105f7f	obj/kernel.asm	/^c0105f7f:	6a 01                	push   $0x1$/;"	l
c0105f81	obj/kernel.asm	/^c0105f81:	50                   	push   %eax$/;"	l
c0105f82	obj/kernel.asm	/^c0105f82:	e8 3a da ff ff       	call   c01039c1 <free_pages>$/;"	l
c0105f87	obj/kernel.asm	/^c0105f87:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105f8a	obj/kernel.asm	/^c0105f8a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105f8d	obj/kernel.asm	/^c0105f8d:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0105f93	obj/kernel.asm	/^c0105f93:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105f96	obj/kernel.asm	/^c0105f96:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0105f9d	obj/kernel.asm	/^c0105f9d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105fa0	obj/kernel.asm	/^c0105fa0:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105fa3	obj/kernel.asm	/^c0105fa3:	e8 38 f6 ff ff       	call   c01055e0 <mm_destroy>$/;"	l
c0105fa8	obj/kernel.asm	/^c0105fa8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105fab	obj/kernel.asm	/^c0105fab:	c7 05 1c 0f 1b c0 00 	movl   $0x0,0xc01b0f1c$/;"	l
c0105fb2	obj/kernel.asm	/^c0105fb2:	00 00 00 $/;"	l
c0105fb5	obj/kernel.asm	/^c0105fb5:	e8 3b da ff ff       	call   c01039f5 <nr_free_pages>$/;"	l
c0105fba	obj/kernel.asm	/^c0105fba:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0105fbd	obj/kernel.asm	/^c0105fbd:	74 19                	je     c0105fd8 <check_pgfault+0x1f2>$/;"	l
c0105fbf	obj/kernel.asm	/^c0105fbf:	68 04 ce 10 c0       	push   $0xc010ce04$/;"	l
c0105fc4	obj/kernel.asm	/^c0105fc4:	68 73 cb 10 c0       	push   $0xc010cb73$/;"	l
c0105fc9	obj/kernel.asm	/^c0105fc9:	68 6b 01 00 00       	push   $0x16b$/;"	l
c0105fce	obj/kernel.asm	/^c0105fce:	68 88 cb 10 c0       	push   $0xc010cb88$/;"	l
c0105fd3	obj/kernel.asm	/^c0105fd3:	e8 07 a4 ff ff       	call   c01003df <__panic>$/;"	l
c0105fd8	obj/kernel.asm	/^c0105fd8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105fdb	obj/kernel.asm	/^c0105fdb:	68 2b ce 10 c0       	push   $0xc010ce2b$/;"	l
c0105fe0	obj/kernel.asm	/^c0105fe0:	e8 95 a2 ff ff       	call   c010027a <cprintf>$/;"	l
c0105fe5	obj/kernel.asm	/^c0105fe5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105fe8	obj/kernel.asm	/^c0105fe8:	c9                   	leave  $/;"	l
c0105fe9	obj/kernel.asm	/^c0105fe9:	c3                   	ret    $/;"	l
c0105fea	obj/kernel.asm	/^c0105fea <do_pgfault>:$/;"	l
c0105fea	obj/kernel.asm	/^c0105fea:	55                   	push   %ebp$/;"	l
c0105feb	obj/kernel.asm	/^c0105feb:	89 e5                	mov    %esp,%ebp$/;"	l
c0105fed	obj/kernel.asm	/^c0105fed:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105ff0	obj/kernel.asm	/^c0105ff0:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0105ff7	obj/kernel.asm	/^c0105ff7:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0105ffa	obj/kernel.asm	/^c0105ffa:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105ffd	obj/kernel.asm	/^c0105ffd:	e8 91 f3 ff ff       	call   c0105393 <find_vma>$/;"	l
c0106002	obj/kernel.asm	/^c0106002:	83 c4 08             	add    $0x8,%esp$/;"	l
c0106005	obj/kernel.asm	/^c0106005:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106008	obj/kernel.asm	/^c0106008:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c010600d	obj/kernel.asm	/^c010600d:	83 c0 01             	add    $0x1,%eax$/;"	l
c0106010	obj/kernel.asm	/^c0106010:	a3 2c ee 1a c0       	mov    %eax,0xc01aee2c$/;"	l
c0106015	obj/kernel.asm	/^c0106015:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0106019	obj/kernel.asm	/^c0106019:	74 0b                	je     c0106026 <do_pgfault+0x3c>$/;"	l
c010601b	obj/kernel.asm	/^c010601b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010601e	obj/kernel.asm	/^c010601e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106021	obj/kernel.asm	/^c0106021:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0106024	obj/kernel.asm	/^c0106024:	76 18                	jbe    c010603e <do_pgfault+0x54>$/;"	l
c0106026	obj/kernel.asm	/^c0106026:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106029	obj/kernel.asm	/^c0106029:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010602c	obj/kernel.asm	/^c010602c:	68 48 ce 10 c0       	push   $0xc010ce48$/;"	l
c0106031	obj/kernel.asm	/^c0106031:	e8 44 a2 ff ff       	call   c010027a <cprintf>$/;"	l
c0106036	obj/kernel.asm	/^c0106036:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106039	obj/kernel.asm	/^c0106039:	e9 ce 01 00 00       	jmp    c010620c <do_pgfault+0x222>$/;"	l
c010603e	obj/kernel.asm	/^c010603e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106041	obj/kernel.asm	/^c0106041:	83 e0 03             	and    $0x3,%eax$/;"	l
c0106044	obj/kernel.asm	/^c0106044:	85 c0                	test   %eax,%eax$/;"	l
c0106046	obj/kernel.asm	/^c0106046:	74 3e                	je     c0106086 <do_pgfault+0x9c>$/;"	l
c0106048	obj/kernel.asm	/^c0106048:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010604b	obj/kernel.asm	/^c010604b:	74 24                	je     c0106071 <do_pgfault+0x87>$/;"	l
c010604d	obj/kernel.asm	/^c010604d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106050	obj/kernel.asm	/^c0106050:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106053	obj/kernel.asm	/^c0106053:	83 e0 02             	and    $0x2,%eax$/;"	l
c0106056	obj/kernel.asm	/^c0106056:	85 c0                	test   %eax,%eax$/;"	l
c0106058	obj/kernel.asm	/^c0106058:	75 15                	jne    c010606f <do_pgfault+0x85>$/;"	l
c010605a	obj/kernel.asm	/^c010605a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010605d	obj/kernel.asm	/^c010605d:	68 78 ce 10 c0       	push   $0xc010ce78$/;"	l
c0106062	obj/kernel.asm	/^c0106062:	e8 13 a2 ff ff       	call   c010027a <cprintf>$/;"	l
c0106067	obj/kernel.asm	/^c0106067:	83 c4 10             	add    $0x10,%esp$/;"	l
c010606a	obj/kernel.asm	/^c010606a:	e9 9d 01 00 00       	jmp    c010620c <do_pgfault+0x222>$/;"	l
c010606f	obj/kernel.asm	/^c010606f:	eb 37                	jmp    c01060a8 <do_pgfault+0xbe>$/;"	l
c0106071	obj/kernel.asm	/^c0106071:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106074	obj/kernel.asm	/^c0106074:	68 d8 ce 10 c0       	push   $0xc010ced8$/;"	l
c0106079	obj/kernel.asm	/^c0106079:	e8 fc a1 ff ff       	call   c010027a <cprintf>$/;"	l
c010607e	obj/kernel.asm	/^c010607e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106081	obj/kernel.asm	/^c0106081:	e9 86 01 00 00       	jmp    c010620c <do_pgfault+0x222>$/;"	l
c0106086	obj/kernel.asm	/^c0106086:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106089	obj/kernel.asm	/^c0106089:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010608c	obj/kernel.asm	/^c010608c:	83 e0 05             	and    $0x5,%eax$/;"	l
c010608f	obj/kernel.asm	/^c010608f:	85 c0                	test   %eax,%eax$/;"	l
c0106091	obj/kernel.asm	/^c0106091:	75 15                	jne    c01060a8 <do_pgfault+0xbe>$/;"	l
c0106093	obj/kernel.asm	/^c0106093:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106096	obj/kernel.asm	/^c0106096:	68 10 cf 10 c0       	push   $0xc010cf10$/;"	l
c010609b	obj/kernel.asm	/^c010609b:	e8 da a1 ff ff       	call   c010027a <cprintf>$/;"	l
c01060a0	obj/kernel.asm	/^c01060a0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01060a3	obj/kernel.asm	/^c01060a3:	e9 64 01 00 00       	jmp    c010620c <do_pgfault+0x222>$/;"	l
c01060a8	obj/kernel.asm	/^c01060a8:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%ebp)$/;"	l
c01060af	obj/kernel.asm	/^c01060af:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01060b2	obj/kernel.asm	/^c01060b2:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01060b5	obj/kernel.asm	/^c01060b5:	83 e0 02             	and    $0x2,%eax$/;"	l
c01060b8	obj/kernel.asm	/^c01060b8:	85 c0                	test   %eax,%eax$/;"	l
c01060ba	obj/kernel.asm	/^c01060ba:	74 04                	je     c01060c0 <do_pgfault+0xd6>$/;"	l
c01060bc	obj/kernel.asm	/^c01060bc:	83 4d f0 02          	orl    $0x2,-0x10(%ebp)$/;"	l
c01060c0	obj/kernel.asm	/^c01060c0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01060c3	obj/kernel.asm	/^c01060c3:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01060c6	obj/kernel.asm	/^c01060c6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01060c9	obj/kernel.asm	/^c01060c9:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01060ce	obj/kernel.asm	/^c01060ce:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c01060d1	obj/kernel.asm	/^c01060d1:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c01060d8	obj/kernel.asm	/^c01060d8:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c01060df	obj/kernel.asm	/^c01060df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01060e2	obj/kernel.asm	/^c01060e2:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01060e5	obj/kernel.asm	/^c01060e5:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01060e8	obj/kernel.asm	/^c01060e8:	6a 01                	push   $0x1$/;"	l
c01060ea	obj/kernel.asm	/^c01060ea:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01060ed	obj/kernel.asm	/^c01060ed:	50                   	push   %eax$/;"	l
c01060ee	obj/kernel.asm	/^c01060ee:	e8 4b df ff ff       	call   c010403e <get_pte>$/;"	l
c01060f3	obj/kernel.asm	/^c01060f3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01060f6	obj/kernel.asm	/^c01060f6:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01060f9	obj/kernel.asm	/^c01060f9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01060fd	obj/kernel.asm	/^c01060fd:	75 15                	jne    c0106114 <do_pgfault+0x12a>$/;"	l
c01060ff	obj/kernel.asm	/^c01060ff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106102	obj/kernel.asm	/^c0106102:	68 73 cf 10 c0       	push   $0xc010cf73$/;"	l
c0106107	obj/kernel.asm	/^c0106107:	e8 6e a1 ff ff       	call   c010027a <cprintf>$/;"	l
c010610c	obj/kernel.asm	/^c010610c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010610f	obj/kernel.asm	/^c010610f:	e9 f8 00 00 00       	jmp    c010620c <do_pgfault+0x222>$/;"	l
c0106114	obj/kernel.asm	/^c0106114:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106117	obj/kernel.asm	/^c0106117:	8b 00                	mov    (%eax),%eax$/;"	l
c0106119	obj/kernel.asm	/^c0106119:	85 c0                	test   %eax,%eax$/;"	l
c010611b	obj/kernel.asm	/^c010611b:	75 3b                	jne    c0106158 <do_pgfault+0x16e>$/;"	l
c010611d	obj/kernel.asm	/^c010611d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106120	obj/kernel.asm	/^c0106120:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106123	obj/kernel.asm	/^c0106123:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106126	obj/kernel.asm	/^c0106126:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0106129	obj/kernel.asm	/^c0106129:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010612c	obj/kernel.asm	/^c010612c:	50                   	push   %eax$/;"	l
c010612d	obj/kernel.asm	/^c010612d:	e8 97 e5 ff ff       	call   c01046c9 <pgdir_alloc_page>$/;"	l
c0106132	obj/kernel.asm	/^c0106132:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106135	obj/kernel.asm	/^c0106135:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0106138	obj/kernel.asm	/^c0106138:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c010613c	obj/kernel.asm	/^c010613c:	75 15                	jne    c0106153 <do_pgfault+0x169>$/;"	l
c010613e	obj/kernel.asm	/^c010613e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106141	obj/kernel.asm	/^c0106141:	68 82 cf 10 c0       	push   $0xc010cf82$/;"	l
c0106146	obj/kernel.asm	/^c0106146:	e8 2f a1 ff ff       	call   c010027a <cprintf>$/;"	l
c010614b	obj/kernel.asm	/^c010614b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010614e	obj/kernel.asm	/^c010614e:	e9 b9 00 00 00       	jmp    c010620c <do_pgfault+0x222>$/;"	l
c0106153	obj/kernel.asm	/^c0106153:	e9 ad 00 00 00       	jmp    c0106205 <do_pgfault+0x21b>$/;"	l
c0106158	obj/kernel.asm	/^c0106158:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010615b	obj/kernel.asm	/^c010615b:	8b 00                	mov    (%eax),%eax$/;"	l
c010615d	obj/kernel.asm	/^c010615d:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106160	obj/kernel.asm	/^c0106160:	85 c0                	test   %eax,%eax$/;"	l
c0106162	obj/kernel.asm	/^c0106162:	75 79                	jne    c01061dd <do_pgfault+0x1f3>$/;"	l
c0106164	obj/kernel.asm	/^c0106164:	a1 30 ee 1a c0       	mov    0xc01aee30,%eax$/;"	l
c0106169	obj/kernel.asm	/^c0106169:	85 c0                	test   %eax,%eax$/;"	l
c010616b	obj/kernel.asm	/^c010616b:	74 58                	je     c01061c5 <do_pgfault+0x1db>$/;"	l
c010616d	obj/kernel.asm	/^c010616d:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0106174	obj/kernel.asm	/^c0106174:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106177	obj/kernel.asm	/^c0106177:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010617a	obj/kernel.asm	/^c010617a:	50                   	push   %eax$/;"	l
c010617b	obj/kernel.asm	/^c010617b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010617e	obj/kernel.asm	/^c010617e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106181	obj/kernel.asm	/^c0106181:	e8 6b 04 00 00       	call   c01065f1 <swap_in>$/;"	l
c0106186	obj/kernel.asm	/^c0106186:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106189	obj/kernel.asm	/^c0106189:	83 4d f0 01          	orl    $0x1,-0x10(%ebp)$/;"	l
c010618d	obj/kernel.asm	/^c010618d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106190	obj/kernel.asm	/^c0106190:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0106193	obj/kernel.asm	/^c0106193:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c0106196	obj/kernel.asm	/^c0106196:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0106199	obj/kernel.asm	/^c0106199:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010619c	obj/kernel.asm	/^c010619c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010619f	obj/kernel.asm	/^c010619f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01061a2	obj/kernel.asm	/^c01061a2:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01061a5	obj/kernel.asm	/^c01061a5:	52                   	push   %edx$/;"	l
c01061a6	obj/kernel.asm	/^c01061a6:	50                   	push   %eax$/;"	l
c01061a7	obj/kernel.asm	/^c01061a7:	e8 15 e4 ff ff       	call   c01045c1 <page_insert>$/;"	l
c01061ac	obj/kernel.asm	/^c01061ac:	83 c4 10             	add    $0x10,%esp$/;"	l
c01061af	obj/kernel.asm	/^c01061af:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01061b2	obj/kernel.asm	/^c01061b2:	6a 01                	push   $0x1$/;"	l
c01061b4	obj/kernel.asm	/^c01061b4:	50                   	push   %eax$/;"	l
c01061b5	obj/kernel.asm	/^c01061b5:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01061b8	obj/kernel.asm	/^c01061b8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01061bb	obj/kernel.asm	/^c01061bb:	e8 a1 02 00 00       	call   c0106461 <swap_map_swappable>$/;"	l
c01061c0	obj/kernel.asm	/^c01061c0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01061c3	obj/kernel.asm	/^c01061c3:	eb 40                	jmp    c0106205 <do_pgfault+0x21b>$/;"	l
c01061c5	obj/kernel.asm	/^c01061c5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01061c8	obj/kernel.asm	/^c01061c8:	8b 00                	mov    (%eax),%eax$/;"	l
c01061ca	obj/kernel.asm	/^c01061ca:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01061cd	obj/kernel.asm	/^c01061cd:	50                   	push   %eax$/;"	l
c01061ce	obj/kernel.asm	/^c01061ce:	68 98 cf 10 c0       	push   $0xc010cf98$/;"	l
c01061d3	obj/kernel.asm	/^c01061d3:	e8 a2 a0 ff ff       	call   c010027a <cprintf>$/;"	l
c01061d8	obj/kernel.asm	/^c01061d8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01061db	obj/kernel.asm	/^c01061db:	eb 2f                	jmp    c010620c <do_pgfault+0x222>$/;"	l
c01061dd	obj/kernel.asm	/^c01061dd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01061e0	obj/kernel.asm	/^c01061e0:	8b 00                	mov    (%eax),%eax$/;"	l
c01061e2	obj/kernel.asm	/^c01061e2:	83 e0 04             	and    $0x4,%eax$/;"	l
c01061e5	obj/kernel.asm	/^c01061e5:	85 c0                	test   %eax,%eax$/;"	l
c01061e7	obj/kernel.asm	/^c01061e7:	75 1c                	jne    c0106205 <do_pgfault+0x21b>$/;"	l
c01061e9	obj/kernel.asm	/^c01061e9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01061ec	obj/kernel.asm	/^c01061ec:	83 e0 04             	and    $0x4,%eax$/;"	l
c01061ef	obj/kernel.asm	/^c01061ef:	85 c0                	test   %eax,%eax$/;"	l
c01061f1	obj/kernel.asm	/^c01061f1:	74 12                	je     c0106205 <do_pgfault+0x21b>$/;"	l
c01061f3	obj/kernel.asm	/^c01061f3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01061f6	obj/kernel.asm	/^c01061f6:	68 c0 cf 10 c0       	push   $0xc010cfc0$/;"	l
c01061fb	obj/kernel.asm	/^c01061fb:	e8 7a a0 ff ff       	call   c010027a <cprintf>$/;"	l
c0106200	obj/kernel.asm	/^c0106200:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106203	obj/kernel.asm	/^c0106203:	eb 07                	jmp    c010620c <do_pgfault+0x222>$/;"	l
c0106205	obj/kernel.asm	/^c0106205:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010620c	obj/kernel.asm	/^c010620c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010620f	obj/kernel.asm	/^c010620f:	c9                   	leave  $/;"	l
c0106210	obj/kernel.asm	/^c0106210:	c3                   	ret    $/;"	l
c0106211	obj/kernel.asm	/^c0106211 <user_mem_check>:$/;"	l
c0106211	obj/kernel.asm	/^c0106211:	55                   	push   %ebp$/;"	l
c0106212	obj/kernel.asm	/^c0106212:	89 e5                	mov    %esp,%ebp$/;"	l
c0106214	obj/kernel.asm	/^c0106214:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0106217	obj/kernel.asm	/^c0106217:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010621b	obj/kernel.asm	/^c010621b:	0f 84 dc 00 00 00    	je     c01062fd <user_mem_check+0xec>$/;"	l
c0106221	obj/kernel.asm	/^c0106221:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0106228	obj/kernel.asm	/^c0106228:	76 1c                	jbe    c0106246 <user_mem_check+0x35>$/;"	l
c010622a	obj/kernel.asm	/^c010622a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010622d	obj/kernel.asm	/^c010622d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106230	obj/kernel.asm	/^c0106230:	01 d0                	add    %edx,%eax$/;"	l
c0106232	obj/kernel.asm	/^c0106232:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106235	obj/kernel.asm	/^c0106235:	76 0f                	jbe    c0106246 <user_mem_check+0x35>$/;"	l
c0106237	obj/kernel.asm	/^c0106237:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010623a	obj/kernel.asm	/^c010623a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010623d	obj/kernel.asm	/^c010623d:	01 d0                	add    %edx,%eax$/;"	l
c010623f	obj/kernel.asm	/^c010623f:	3d 00 00 00 b0       	cmp    $0xb0000000,%eax$/;"	l
c0106244	obj/kernel.asm	/^c0106244:	76 0a                	jbe    c0106250 <user_mem_check+0x3f>$/;"	l
c0106246	obj/kernel.asm	/^c0106246:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010624b	obj/kernel.asm	/^c010624b:	e9 df 00 00 00       	jmp    c010632f <user_mem_check+0x11e>$/;"	l
c0106250	obj/kernel.asm	/^c0106250:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106253	obj/kernel.asm	/^c0106253:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0106256	obj/kernel.asm	/^c0106256:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106259	obj/kernel.asm	/^c0106259:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010625c	obj/kernel.asm	/^c010625c:	01 d0                	add    %edx,%eax$/;"	l
c010625e	obj/kernel.asm	/^c010625e:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0106261	obj/kernel.asm	/^c0106261:	e9 84 00 00 00       	jmp    c01062ea <user_mem_check+0xd9>$/;"	l
c0106266	obj/kernel.asm	/^c0106266:	ff 75 fc             	pushl  -0x4(%ebp)$/;"	l
c0106269	obj/kernel.asm	/^c0106269:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010626c	obj/kernel.asm	/^c010626c:	e8 22 f1 ff ff       	call   c0105393 <find_vma>$/;"	l
c0106271	obj/kernel.asm	/^c0106271:	83 c4 08             	add    $0x8,%esp$/;"	l
c0106274	obj/kernel.asm	/^c0106274:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106277	obj/kernel.asm	/^c0106277:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010627b	obj/kernel.asm	/^c010627b:	74 0b                	je     c0106288 <user_mem_check+0x77>$/;"	l
c010627d	obj/kernel.asm	/^c010627d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106280	obj/kernel.asm	/^c0106280:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106283	obj/kernel.asm	/^c0106283:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0106286	obj/kernel.asm	/^c0106286:	76 0a                	jbe    c0106292 <user_mem_check+0x81>$/;"	l
c0106288	obj/kernel.asm	/^c0106288:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010628d	obj/kernel.asm	/^c010628d:	e9 9d 00 00 00       	jmp    c010632f <user_mem_check+0x11e>$/;"	l
c0106292	obj/kernel.asm	/^c0106292:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106295	obj/kernel.asm	/^c0106295:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106298	obj/kernel.asm	/^c0106298:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010629c	obj/kernel.asm	/^c010629c:	74 07                	je     c01062a5 <user_mem_check+0x94>$/;"	l
c010629e	obj/kernel.asm	/^c010629e:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
c01062a3	obj/kernel.asm	/^c01062a3:	eb 05                	jmp    c01062aa <user_mem_check+0x99>$/;"	l
c01062a5	obj/kernel.asm	/^c01062a5:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c01062aa	obj/kernel.asm	/^c01062aa:	21 d0                	and    %edx,%eax$/;"	l
c01062ac	obj/kernel.asm	/^c01062ac:	85 c0                	test   %eax,%eax$/;"	l
c01062ae	obj/kernel.asm	/^c01062ae:	75 07                	jne    c01062b7 <user_mem_check+0xa6>$/;"	l
c01062b0	obj/kernel.asm	/^c01062b0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01062b5	obj/kernel.asm	/^c01062b5:	eb 78                	jmp    c010632f <user_mem_check+0x11e>$/;"	l
c01062b7	obj/kernel.asm	/^c01062b7:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01062bb	obj/kernel.asm	/^c01062bb:	74 24                	je     c01062e1 <user_mem_check+0xd0>$/;"	l
c01062bd	obj/kernel.asm	/^c01062bd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01062c0	obj/kernel.asm	/^c01062c0:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01062c3	obj/kernel.asm	/^c01062c3:	83 e0 08             	and    $0x8,%eax$/;"	l
c01062c6	obj/kernel.asm	/^c01062c6:	85 c0                	test   %eax,%eax$/;"	l
c01062c8	obj/kernel.asm	/^c01062c8:	74 17                	je     c01062e1 <user_mem_check+0xd0>$/;"	l
c01062ca	obj/kernel.asm	/^c01062ca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01062cd	obj/kernel.asm	/^c01062cd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01062d0	obj/kernel.asm	/^c01062d0:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c01062d5	obj/kernel.asm	/^c01062d5:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01062d8	obj/kernel.asm	/^c01062d8:	76 07                	jbe    c01062e1 <user_mem_check+0xd0>$/;"	l
c01062da	obj/kernel.asm	/^c01062da:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01062df	obj/kernel.asm	/^c01062df:	eb 4e                	jmp    c010632f <user_mem_check+0x11e>$/;"	l
c01062e1	obj/kernel.asm	/^c01062e1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01062e4	obj/kernel.asm	/^c01062e4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01062e7	obj/kernel.asm	/^c01062e7:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01062ea	obj/kernel.asm	/^c01062ea:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01062ed	obj/kernel.asm	/^c01062ed:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c01062f0	obj/kernel.asm	/^c01062f0:	0f 82 70 ff ff ff    	jb     c0106266 <user_mem_check+0x55>$/;"	l
c01062f6	obj/kernel.asm	/^c01062f6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01062fb	obj/kernel.asm	/^c01062fb:	eb 32                	jmp    c010632f <user_mem_check+0x11e>$/;"	l
c01062fd	obj/kernel.asm	/^c01062fd:	81 7d 0c ff ff ff bf 	cmpl   $0xbfffffff,0xc(%ebp)$/;"	l
c0106304	obj/kernel.asm	/^c0106304:	76 23                	jbe    c0106329 <user_mem_check+0x118>$/;"	l
c0106306	obj/kernel.asm	/^c0106306:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106309	obj/kernel.asm	/^c0106309:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010630c	obj/kernel.asm	/^c010630c:	01 d0                	add    %edx,%eax$/;"	l
c010630e	obj/kernel.asm	/^c010630e:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106311	obj/kernel.asm	/^c0106311:	76 16                	jbe    c0106329 <user_mem_check+0x118>$/;"	l
c0106313	obj/kernel.asm	/^c0106313:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106316	obj/kernel.asm	/^c0106316:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106319	obj/kernel.asm	/^c0106319:	01 d0                	add    %edx,%eax$/;"	l
c010631b	obj/kernel.asm	/^c010631b:	3d 00 00 00 f8       	cmp    $0xf8000000,%eax$/;"	l
c0106320	obj/kernel.asm	/^c0106320:	77 07                	ja     c0106329 <user_mem_check+0x118>$/;"	l
c0106322	obj/kernel.asm	/^c0106322:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0106327	obj/kernel.asm	/^c0106327:	eb 05                	jmp    c010632e <user_mem_check+0x11d>$/;"	l
c0106329	obj/kernel.asm	/^c0106329:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010632e	obj/kernel.asm	/^c010632e:	90                   	nop$/;"	l
c010632f	obj/kernel.asm	/^c010632f:	c9                   	leave  $/;"	l
c0106330	obj/kernel.asm	/^c0106330:	c3                   	ret    $/;"	l
c0106331	obj/kernel.asm	/^c0106331 <pa2page>:$/;"	l
c0106331	obj/kernel.asm	/^c0106331:	55                   	push   %ebp$/;"	l
c0106332	obj/kernel.asm	/^c0106332:	89 e5                	mov    %esp,%ebp$/;"	l
c0106334	obj/kernel.asm	/^c0106334:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106337	obj/kernel.asm	/^c0106337:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010633a	obj/kernel.asm	/^c010633a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010633d	obj/kernel.asm	/^c010633d:	89 c2                	mov    %eax,%edx$/;"	l
c010633f	obj/kernel.asm	/^c010633f:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c0106344	obj/kernel.asm	/^c0106344:	39 c2                	cmp    %eax,%edx$/;"	l
c0106346	obj/kernel.asm	/^c0106346:	72 14                	jb     c010635c <pa2page+0x2b>$/;"	l
c0106348	obj/kernel.asm	/^c0106348:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010634b	obj/kernel.asm	/^c010634b:	68 14 d0 10 c0       	push   $0xc010d014$/;"	l
c0106350	obj/kernel.asm	/^c0106350:	6a 5e                	push   $0x5e$/;"	l
c0106352	obj/kernel.asm	/^c0106352:	68 33 d0 10 c0       	push   $0xc010d033$/;"	l
c0106357	obj/kernel.asm	/^c0106357:	e8 83 a0 ff ff       	call   c01003df <__panic>$/;"	l
c010635c	obj/kernel.asm	/^c010635c:	a1 18 0f 1b c0       	mov    0xc01b0f18,%eax$/;"	l
c0106361	obj/kernel.asm	/^c0106361:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106364	obj/kernel.asm	/^c0106364:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0106367	obj/kernel.asm	/^c0106367:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c010636a	obj/kernel.asm	/^c010636a:	01 d0                	add    %edx,%eax$/;"	l
c010636c	obj/kernel.asm	/^c010636c:	c9                   	leave  $/;"	l
c010636d	obj/kernel.asm	/^c010636d:	c3                   	ret    $/;"	l
c010636e	obj/kernel.asm	/^c010636e <pte2page>:$/;"	l
c010636e	obj/kernel.asm	/^c010636e:	55                   	push   %ebp$/;"	l
c010636f	obj/kernel.asm	/^c010636f:	89 e5                	mov    %esp,%ebp$/;"	l
c0106371	obj/kernel.asm	/^c0106371:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106374	obj/kernel.asm	/^c0106374:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106377	obj/kernel.asm	/^c0106377:	83 e0 01             	and    $0x1,%eax$/;"	l
c010637a	obj/kernel.asm	/^c010637a:	85 c0                	test   %eax,%eax$/;"	l
c010637c	obj/kernel.asm	/^c010637c:	75 14                	jne    c0106392 <pte2page+0x24>$/;"	l
c010637e	obj/kernel.asm	/^c010637e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106381	obj/kernel.asm	/^c0106381:	68 44 d0 10 c0       	push   $0xc010d044$/;"	l
c0106386	obj/kernel.asm	/^c0106386:	6a 70                	push   $0x70$/;"	l
c0106388	obj/kernel.asm	/^c0106388:	68 33 d0 10 c0       	push   $0xc010d033$/;"	l
c010638d	obj/kernel.asm	/^c010638d:	e8 4d a0 ff ff       	call   c01003df <__panic>$/;"	l
c0106392	obj/kernel.asm	/^c0106392:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106395	obj/kernel.asm	/^c0106395:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010639a	obj/kernel.asm	/^c010639a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010639d	obj/kernel.asm	/^c010639d:	50                   	push   %eax$/;"	l
c010639e	obj/kernel.asm	/^c010639e:	e8 8e ff ff ff       	call   c0106331 <pa2page>$/;"	l
c01063a3	obj/kernel.asm	/^c01063a3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01063a6	obj/kernel.asm	/^c01063a6:	c9                   	leave  $/;"	l
c01063a7	obj/kernel.asm	/^c01063a7:	c3                   	ret    $/;"	l
c01063a8	obj/kernel.asm	/^c01063a8 <swap_init>:$/;"	l
c01063a8	obj/kernel.asm	/^c01063a8:	55                   	push   %ebp$/;"	l
c01063a9	obj/kernel.asm	/^c01063a9:	89 e5                	mov    %esp,%ebp$/;"	l
c01063ab	obj/kernel.asm	/^c01063ab:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01063ae	obj/kernel.asm	/^c01063ae:	e8 34 26 00 00       	call   c01089e7 <swapfs_init>$/;"	l
c01063b3	obj/kernel.asm	/^c01063b3:	a1 bc 0f 1b c0       	mov    0xc01b0fbc,%eax$/;"	l
c01063b8	obj/kernel.asm	/^c01063b8:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
c01063bd	obj/kernel.asm	/^c01063bd:	76 0c                	jbe    c01063cb <swap_init+0x23>$/;"	l
c01063bf	obj/kernel.asm	/^c01063bf:	a1 bc 0f 1b c0       	mov    0xc01b0fbc,%eax$/;"	l
c01063c4	obj/kernel.asm	/^c01063c4:	3d ff ff ff 00       	cmp    $0xffffff,%eax$/;"	l
c01063c9	obj/kernel.asm	/^c01063c9:	76 17                	jbe    c01063e2 <swap_init+0x3a>$/;"	l
c01063cb	obj/kernel.asm	/^c01063cb:	a1 bc 0f 1b c0       	mov    0xc01b0fbc,%eax$/;"	l
c01063d0	obj/kernel.asm	/^c01063d0:	50                   	push   %eax$/;"	l
c01063d1	obj/kernel.asm	/^c01063d1:	68 65 d0 10 c0       	push   $0xc010d065$/;"	l
c01063d6	obj/kernel.asm	/^c01063d6:	6a 27                	push   $0x27$/;"	l
c01063d8	obj/kernel.asm	/^c01063d8:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c01063dd	obj/kernel.asm	/^c01063dd:	e8 fd 9f ff ff       	call   c01003df <__panic>$/;"	l
c01063e2	obj/kernel.asm	/^c01063e2:	c7 05 38 ee 1a c0 c0 	movl   $0xc012cac0,0xc01aee38$/;"	l
c01063e9	obj/kernel.asm	/^c01063e9:	ca 12 c0 $/;"	l
c01063ec	obj/kernel.asm	/^c01063ec:	a1 38 ee 1a c0       	mov    0xc01aee38,%eax$/;"	l
c01063f1	obj/kernel.asm	/^c01063f1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01063f4	obj/kernel.asm	/^c01063f4:	ff d0                	call   *%eax$/;"	l
c01063f6	obj/kernel.asm	/^c01063f6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01063f9	obj/kernel.asm	/^c01063f9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01063fd	obj/kernel.asm	/^c01063fd:	75 27                	jne    c0106426 <swap_init+0x7e>$/;"	l
c01063ff	obj/kernel.asm	/^c01063ff:	c7 05 30 ee 1a c0 01 	movl   $0x1,0xc01aee30$/;"	l
c0106406	obj/kernel.asm	/^c0106406:	00 00 00 $/;"	l
c0106409	obj/kernel.asm	/^c0106409:	a1 38 ee 1a c0       	mov    0xc01aee38,%eax$/;"	l
c010640e	obj/kernel.asm	/^c010640e:	8b 00                	mov    (%eax),%eax$/;"	l
c0106410	obj/kernel.asm	/^c0106410:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106413	obj/kernel.asm	/^c0106413:	50                   	push   %eax$/;"	l
c0106414	obj/kernel.asm	/^c0106414:	68 8f d0 10 c0       	push   $0xc010d08f$/;"	l
c0106419	obj/kernel.asm	/^c0106419:	e8 5c 9e ff ff       	call   c010027a <cprintf>$/;"	l
c010641e	obj/kernel.asm	/^c010641e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106421	obj/kernel.asm	/^c0106421:	e8 f6 03 00 00       	call   c010681c <check_swap>$/;"	l
c0106426	obj/kernel.asm	/^c0106426:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106429	obj/kernel.asm	/^c0106429:	c9                   	leave  $/;"	l
c010642a	obj/kernel.asm	/^c010642a:	c3                   	ret    $/;"	l
c010642b	obj/kernel.asm	/^c010642b <swap_init_mm>:$/;"	l
c010642b	obj/kernel.asm	/^c010642b:	55                   	push   %ebp$/;"	l
c010642c	obj/kernel.asm	/^c010642c:	89 e5                	mov    %esp,%ebp$/;"	l
c010642e	obj/kernel.asm	/^c010642e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106431	obj/kernel.asm	/^c0106431:	a1 38 ee 1a c0       	mov    0xc01aee38,%eax$/;"	l
c0106436	obj/kernel.asm	/^c0106436:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0106439	obj/kernel.asm	/^c0106439:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010643c	obj/kernel.asm	/^c010643c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010643f	obj/kernel.asm	/^c010643f:	ff d0                	call   *%eax$/;"	l
c0106441	obj/kernel.asm	/^c0106441:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106444	obj/kernel.asm	/^c0106444:	c9                   	leave  $/;"	l
c0106445	obj/kernel.asm	/^c0106445:	c3                   	ret    $/;"	l
c0106446	obj/kernel.asm	/^c0106446 <swap_tick_event>:$/;"	l
c0106446	obj/kernel.asm	/^c0106446:	55                   	push   %ebp$/;"	l
c0106447	obj/kernel.asm	/^c0106447:	89 e5                	mov    %esp,%ebp$/;"	l
c0106449	obj/kernel.asm	/^c0106449:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010644c	obj/kernel.asm	/^c010644c:	a1 38 ee 1a c0       	mov    0xc01aee38,%eax$/;"	l
c0106451	obj/kernel.asm	/^c0106451:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106454	obj/kernel.asm	/^c0106454:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106457	obj/kernel.asm	/^c0106457:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010645a	obj/kernel.asm	/^c010645a:	ff d0                	call   *%eax$/;"	l
c010645c	obj/kernel.asm	/^c010645c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010645f	obj/kernel.asm	/^c010645f:	c9                   	leave  $/;"	l
c0106460	obj/kernel.asm	/^c0106460:	c3                   	ret    $/;"	l
c0106461	obj/kernel.asm	/^c0106461 <swap_map_swappable>:$/;"	l
c0106461	obj/kernel.asm	/^c0106461:	55                   	push   %ebp$/;"	l
c0106462	obj/kernel.asm	/^c0106462:	89 e5                	mov    %esp,%ebp$/;"	l
c0106464	obj/kernel.asm	/^c0106464:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106467	obj/kernel.asm	/^c0106467:	a1 38 ee 1a c0       	mov    0xc01aee38,%eax$/;"	l
c010646c	obj/kernel.asm	/^c010646c:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010646f	obj/kernel.asm	/^c010646f:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0106472	obj/kernel.asm	/^c0106472:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0106475	obj/kernel.asm	/^c0106475:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0106478	obj/kernel.asm	/^c0106478:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010647b	obj/kernel.asm	/^c010647b:	ff d0                	call   *%eax$/;"	l
c010647d	obj/kernel.asm	/^c010647d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106480	obj/kernel.asm	/^c0106480:	c9                   	leave  $/;"	l
c0106481	obj/kernel.asm	/^c0106481:	c3                   	ret    $/;"	l
c0106482	obj/kernel.asm	/^c0106482 <swap_set_unswappable>:$/;"	l
c0106482	obj/kernel.asm	/^c0106482:	55                   	push   %ebp$/;"	l
c0106483	obj/kernel.asm	/^c0106483:	89 e5                	mov    %esp,%ebp$/;"	l
c0106485	obj/kernel.asm	/^c0106485:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106488	obj/kernel.asm	/^c0106488:	a1 38 ee 1a c0       	mov    0xc01aee38,%eax$/;"	l
c010648d	obj/kernel.asm	/^c010648d:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0106490	obj/kernel.asm	/^c0106490:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106493	obj/kernel.asm	/^c0106493:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0106496	obj/kernel.asm	/^c0106496:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106499	obj/kernel.asm	/^c0106499:	ff d0                	call   *%eax$/;"	l
c010649b	obj/kernel.asm	/^c010649b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010649e	obj/kernel.asm	/^c010649e:	c9                   	leave  $/;"	l
c010649f	obj/kernel.asm	/^c010649f:	c3                   	ret    $/;"	l
c01064a0	obj/kernel.asm	/^c01064a0 <swap_out>:$/;"	l
c01064a0	obj/kernel.asm	/^c01064a0:	55                   	push   %ebp$/;"	l
c01064a1	obj/kernel.asm	/^c01064a1:	89 e5                	mov    %esp,%ebp$/;"	l
c01064a3	obj/kernel.asm	/^c01064a3:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01064a6	obj/kernel.asm	/^c01064a6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01064ad	obj/kernel.asm	/^c01064ad:	e9 2e 01 00 00       	jmp    c01065e0 <swap_out+0x140>$/;"	l
c01064b2	obj/kernel.asm	/^c01064b2:	a1 38 ee 1a c0       	mov    0xc01aee38,%eax$/;"	l
c01064b7	obj/kernel.asm	/^c01064b7:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01064ba	obj/kernel.asm	/^c01064ba:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01064bd	obj/kernel.asm	/^c01064bd:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01064c0	obj/kernel.asm	/^c01064c0:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c01064c3	obj/kernel.asm	/^c01064c3:	52                   	push   %edx$/;"	l
c01064c4	obj/kernel.asm	/^c01064c4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01064c7	obj/kernel.asm	/^c01064c7:	ff d0                	call   *%eax$/;"	l
c01064c9	obj/kernel.asm	/^c01064c9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01064cc	obj/kernel.asm	/^c01064cc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01064cf	obj/kernel.asm	/^c01064cf:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01064d3	obj/kernel.asm	/^c01064d3:	74 18                	je     c01064ed <swap_out+0x4d>$/;"	l
c01064d5	obj/kernel.asm	/^c01064d5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01064d8	obj/kernel.asm	/^c01064d8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01064db	obj/kernel.asm	/^c01064db:	68 a4 d0 10 c0       	push   $0xc010d0a4$/;"	l
c01064e0	obj/kernel.asm	/^c01064e0:	e8 95 9d ff ff       	call   c010027a <cprintf>$/;"	l
c01064e5	obj/kernel.asm	/^c01064e5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01064e8	obj/kernel.asm	/^c01064e8:	e9 ff 00 00 00       	jmp    c01065ec <swap_out+0x14c>$/;"	l
c01064ed	obj/kernel.asm	/^c01064ed:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01064f0	obj/kernel.asm	/^c01064f0:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01064f3	obj/kernel.asm	/^c01064f3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01064f6	obj/kernel.asm	/^c01064f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01064f9	obj/kernel.asm	/^c01064f9:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01064fc	obj/kernel.asm	/^c01064fc:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01064ff	obj/kernel.asm	/^c01064ff:	6a 00                	push   $0x0$/;"	l
c0106501	obj/kernel.asm	/^c0106501:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0106504	obj/kernel.asm	/^c0106504:	50                   	push   %eax$/;"	l
c0106505	obj/kernel.asm	/^c0106505:	e8 34 db ff ff       	call   c010403e <get_pte>$/;"	l
c010650a	obj/kernel.asm	/^c010650a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010650d	obj/kernel.asm	/^c010650d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106510	obj/kernel.asm	/^c0106510:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106513	obj/kernel.asm	/^c0106513:	8b 00                	mov    (%eax),%eax$/;"	l
c0106515	obj/kernel.asm	/^c0106515:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106518	obj/kernel.asm	/^c0106518:	85 c0                	test   %eax,%eax$/;"	l
c010651a	obj/kernel.asm	/^c010651a:	75 16                	jne    c0106532 <swap_out+0x92>$/;"	l
c010651c	obj/kernel.asm	/^c010651c:	68 d1 d0 10 c0       	push   $0xc010d0d1$/;"	l
c0106521	obj/kernel.asm	/^c0106521:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c0106526	obj/kernel.asm	/^c0106526:	6a 67                	push   $0x67$/;"	l
c0106528	obj/kernel.asm	/^c0106528:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c010652d	obj/kernel.asm	/^c010652d:	e8 ad 9e ff ff       	call   c01003df <__panic>$/;"	l
c0106532	obj/kernel.asm	/^c0106532:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106535	obj/kernel.asm	/^c0106535:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0106538	obj/kernel.asm	/^c0106538:	8b 52 1c             	mov    0x1c(%edx),%edx$/;"	l
c010653b	obj/kernel.asm	/^c010653b:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c010653e	obj/kernel.asm	/^c010653e:	83 c2 01             	add    $0x1,%edx$/;"	l
c0106541	obj/kernel.asm	/^c0106541:	c1 e2 08             	shl    $0x8,%edx$/;"	l
c0106544	obj/kernel.asm	/^c0106544:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106547	obj/kernel.asm	/^c0106547:	50                   	push   %eax$/;"	l
c0106548	obj/kernel.asm	/^c0106548:	52                   	push   %edx$/;"	l
c0106549	obj/kernel.asm	/^c0106549:	e8 34 25 00 00       	call   c0108a82 <swapfs_write>$/;"	l
c010654e	obj/kernel.asm	/^c010654e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106551	obj/kernel.asm	/^c0106551:	85 c0                	test   %eax,%eax$/;"	l
c0106553	obj/kernel.asm	/^c0106553:	74 2b                	je     c0106580 <swap_out+0xe0>$/;"	l
c0106555	obj/kernel.asm	/^c0106555:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106558	obj/kernel.asm	/^c0106558:	68 fb d0 10 c0       	push   $0xc010d0fb$/;"	l
c010655d	obj/kernel.asm	/^c010655d:	e8 18 9d ff ff       	call   c010027a <cprintf>$/;"	l
c0106562	obj/kernel.asm	/^c0106562:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106565	obj/kernel.asm	/^c0106565:	a1 38 ee 1a c0       	mov    0xc01aee38,%eax$/;"	l
c010656a	obj/kernel.asm	/^c010656a:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010656d	obj/kernel.asm	/^c010656d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0106570	obj/kernel.asm	/^c0106570:	6a 00                	push   $0x0$/;"	l
c0106572	obj/kernel.asm	/^c0106572:	52                   	push   %edx$/;"	l
c0106573	obj/kernel.asm	/^c0106573:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0106576	obj/kernel.asm	/^c0106576:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106579	obj/kernel.asm	/^c0106579:	ff d0                	call   *%eax$/;"	l
c010657b	obj/kernel.asm	/^c010657b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010657e	obj/kernel.asm	/^c010657e:	eb 5c                	jmp    c01065dc <swap_out+0x13c>$/;"	l
c0106580	obj/kernel.asm	/^c0106580:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106583	obj/kernel.asm	/^c0106583:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0106586	obj/kernel.asm	/^c0106586:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106589	obj/kernel.asm	/^c0106589:	83 c0 01             	add    $0x1,%eax$/;"	l
c010658c	obj/kernel.asm	/^c010658c:	50                   	push   %eax$/;"	l
c010658d	obj/kernel.asm	/^c010658d:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0106590	obj/kernel.asm	/^c0106590:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106593	obj/kernel.asm	/^c0106593:	68 14 d1 10 c0       	push   $0xc010d114$/;"	l
c0106598	obj/kernel.asm	/^c0106598:	e8 dd 9c ff ff       	call   c010027a <cprintf>$/;"	l
c010659d	obj/kernel.asm	/^c010659d:	83 c4 10             	add    $0x10,%esp$/;"	l
c01065a0	obj/kernel.asm	/^c01065a0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01065a3	obj/kernel.asm	/^c01065a3:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01065a6	obj/kernel.asm	/^c01065a6:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01065a9	obj/kernel.asm	/^c01065a9:	83 c0 01             	add    $0x1,%eax$/;"	l
c01065ac	obj/kernel.asm	/^c01065ac:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c01065af	obj/kernel.asm	/^c01065af:	89 c2                	mov    %eax,%edx$/;"	l
c01065b1	obj/kernel.asm	/^c01065b1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01065b4	obj/kernel.asm	/^c01065b4:	89 10                	mov    %edx,(%eax)$/;"	l
c01065b6	obj/kernel.asm	/^c01065b6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01065b9	obj/kernel.asm	/^c01065b9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01065bc	obj/kernel.asm	/^c01065bc:	6a 01                	push   $0x1$/;"	l
c01065be	obj/kernel.asm	/^c01065be:	50                   	push   %eax$/;"	l
c01065bf	obj/kernel.asm	/^c01065bf:	e8 fd d3 ff ff       	call   c01039c1 <free_pages>$/;"	l
c01065c4	obj/kernel.asm	/^c01065c4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01065c7	obj/kernel.asm	/^c01065c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01065ca	obj/kernel.asm	/^c01065ca:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01065cd	obj/kernel.asm	/^c01065cd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01065d0	obj/kernel.asm	/^c01065d0:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01065d3	obj/kernel.asm	/^c01065d3:	50                   	push   %eax$/;"	l
c01065d4	obj/kernel.asm	/^c01065d4:	e8 a1 e0 ff ff       	call   c010467a <tlb_invalidate>$/;"	l
c01065d9	obj/kernel.asm	/^c01065d9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01065dc	obj/kernel.asm	/^c01065dc:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01065e0	obj/kernel.asm	/^c01065e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01065e3	obj/kernel.asm	/^c01065e3:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01065e6	obj/kernel.asm	/^c01065e6:	0f 85 c6 fe ff ff    	jne    c01064b2 <swap_out+0x12>$/;"	l
c01065ec	obj/kernel.asm	/^c01065ec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01065ef	obj/kernel.asm	/^c01065ef:	c9                   	leave  $/;"	l
c01065f0	obj/kernel.asm	/^c01065f0:	c3                   	ret    $/;"	l
c01065f1	obj/kernel.asm	/^c01065f1 <swap_in>:$/;"	l
c01065f1	obj/kernel.asm	/^c01065f1:	55                   	push   %ebp$/;"	l
c01065f2	obj/kernel.asm	/^c01065f2:	89 e5                	mov    %esp,%ebp$/;"	l
c01065f4	obj/kernel.asm	/^c01065f4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01065f7	obj/kernel.asm	/^c01065f7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01065fa	obj/kernel.asm	/^c01065fa:	6a 01                	push   $0x1$/;"	l
c01065fc	obj/kernel.asm	/^c01065fc:	e8 54 d3 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c0106601	obj/kernel.asm	/^c0106601:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106604	obj/kernel.asm	/^c0106604:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106607	obj/kernel.asm	/^c0106607:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010660b	obj/kernel.asm	/^c010660b:	75 16                	jne    c0106623 <swap_in+0x32>$/;"	l
c010660d	obj/kernel.asm	/^c010660d:	68 54 d1 10 c0       	push   $0xc010d154$/;"	l
c0106612	obj/kernel.asm	/^c0106612:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c0106617	obj/kernel.asm	/^c0106617:	6a 7d                	push   $0x7d$/;"	l
c0106619	obj/kernel.asm	/^c0106619:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c010661e	obj/kernel.asm	/^c010661e:	e8 bc 9d ff ff       	call   c01003df <__panic>$/;"	l
c0106623	obj/kernel.asm	/^c0106623:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106626	obj/kernel.asm	/^c0106626:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106629	obj/kernel.asm	/^c0106629:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010662c	obj/kernel.asm	/^c010662c:	6a 00                	push   $0x0$/;"	l
c010662e	obj/kernel.asm	/^c010662e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0106631	obj/kernel.asm	/^c0106631:	50                   	push   %eax$/;"	l
c0106632	obj/kernel.asm	/^c0106632:	e8 07 da ff ff       	call   c010403e <get_pte>$/;"	l
c0106637	obj/kernel.asm	/^c0106637:	83 c4 10             	add    $0x10,%esp$/;"	l
c010663a	obj/kernel.asm	/^c010663a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010663d	obj/kernel.asm	/^c010663d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106640	obj/kernel.asm	/^c0106640:	8b 00                	mov    (%eax),%eax$/;"	l
c0106642	obj/kernel.asm	/^c0106642:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106645	obj/kernel.asm	/^c0106645:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106648	obj/kernel.asm	/^c0106648:	50                   	push   %eax$/;"	l
c0106649	obj/kernel.asm	/^c0106649:	e8 db 23 00 00       	call   c0108a29 <swapfs_read>$/;"	l
c010664e	obj/kernel.asm	/^c010664e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106651	obj/kernel.asm	/^c0106651:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106654	obj/kernel.asm	/^c0106654:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0106658	obj/kernel.asm	/^c0106658:	74 1f                	je     c0106679 <swap_in+0x88>$/;"	l
c010665a	obj/kernel.asm	/^c010665a:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010665e	obj/kernel.asm	/^c010665e:	75 19                	jne    c0106679 <swap_in+0x88>$/;"	l
c0106660	obj/kernel.asm	/^c0106660:	68 61 d1 10 c0       	push   $0xc010d161$/;"	l
c0106665	obj/kernel.asm	/^c0106665:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c010666a	obj/kernel.asm	/^c010666a:	68 85 00 00 00       	push   $0x85$/;"	l
c010666f	obj/kernel.asm	/^c010666f:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c0106674	obj/kernel.asm	/^c0106674:	e8 66 9d ff ff       	call   c01003df <__panic>$/;"	l
c0106679	obj/kernel.asm	/^c0106679:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010667c	obj/kernel.asm	/^c010667c:	8b 00                	mov    (%eax),%eax$/;"	l
c010667e	obj/kernel.asm	/^c010667e:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0106681	obj/kernel.asm	/^c0106681:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106684	obj/kernel.asm	/^c0106684:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0106687	obj/kernel.asm	/^c0106687:	50                   	push   %eax$/;"	l
c0106688	obj/kernel.asm	/^c0106688:	68 68 d1 10 c0       	push   $0xc010d168$/;"	l
c010668d	obj/kernel.asm	/^c010668d:	e8 e8 9b ff ff       	call   c010027a <cprintf>$/;"	l
c0106692	obj/kernel.asm	/^c0106692:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106695	obj/kernel.asm	/^c0106695:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106698	obj/kernel.asm	/^c0106698:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010669b	obj/kernel.asm	/^c010669b:	89 10                	mov    %edx,(%eax)$/;"	l
c010669d	obj/kernel.asm	/^c010669d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01066a2	obj/kernel.asm	/^c01066a2:	c9                   	leave  $/;"	l
c01066a3	obj/kernel.asm	/^c01066a3:	c3                   	ret    $/;"	l
c01066a4	obj/kernel.asm	/^c01066a4 <check_content_set>:$/;"	l
c01066a4	obj/kernel.asm	/^c01066a4:	55                   	push   %ebp$/;"	l
c01066a5	obj/kernel.asm	/^c01066a5:	89 e5                	mov    %esp,%ebp$/;"	l
c01066a7	obj/kernel.asm	/^c01066a7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01066aa	obj/kernel.asm	/^c01066aa:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c01066af	obj/kernel.asm	/^c01066af:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c01066b2	obj/kernel.asm	/^c01066b2:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c01066b7	obj/kernel.asm	/^c01066b7:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01066ba	obj/kernel.asm	/^c01066ba:	74 19                	je     c01066d5 <check_content_set+0x31>$/;"	l
c01066bc	obj/kernel.asm	/^c01066bc:	68 a6 d1 10 c0       	push   $0xc010d1a6$/;"	l
c01066c1	obj/kernel.asm	/^c01066c1:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c01066c6	obj/kernel.asm	/^c01066c6:	68 92 00 00 00       	push   $0x92$/;"	l
c01066cb	obj/kernel.asm	/^c01066cb:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c01066d0	obj/kernel.asm	/^c01066d0:	e8 0a 9d ff ff       	call   c01003df <__panic>$/;"	l
c01066d5	obj/kernel.asm	/^c01066d5:	b8 10 10 00 00       	mov    $0x1010,%eax$/;"	l
c01066da	obj/kernel.asm	/^c01066da:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c01066dd	obj/kernel.asm	/^c01066dd:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c01066e2	obj/kernel.asm	/^c01066e2:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01066e5	obj/kernel.asm	/^c01066e5:	74 19                	je     c0106700 <check_content_set+0x5c>$/;"	l
c01066e7	obj/kernel.asm	/^c01066e7:	68 a6 d1 10 c0       	push   $0xc010d1a6$/;"	l
c01066ec	obj/kernel.asm	/^c01066ec:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c01066f1	obj/kernel.asm	/^c01066f1:	68 94 00 00 00       	push   $0x94$/;"	l
c01066f6	obj/kernel.asm	/^c01066f6:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c01066fb	obj/kernel.asm	/^c01066fb:	e8 df 9c ff ff       	call   c01003df <__panic>$/;"	l
c0106700	obj/kernel.asm	/^c0106700:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c0106705	obj/kernel.asm	/^c0106705:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0106708	obj/kernel.asm	/^c0106708:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c010670d	obj/kernel.asm	/^c010670d:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0106710	obj/kernel.asm	/^c0106710:	74 19                	je     c010672b <check_content_set+0x87>$/;"	l
c0106712	obj/kernel.asm	/^c0106712:	68 b5 d1 10 c0       	push   $0xc010d1b5$/;"	l
c0106717	obj/kernel.asm	/^c0106717:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c010671c	obj/kernel.asm	/^c010671c:	68 96 00 00 00       	push   $0x96$/;"	l
c0106721	obj/kernel.asm	/^c0106721:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c0106726	obj/kernel.asm	/^c0106726:	e8 b4 9c ff ff       	call   c01003df <__panic>$/;"	l
c010672b	obj/kernel.asm	/^c010672b:	b8 10 20 00 00       	mov    $0x2010,%eax$/;"	l
c0106730	obj/kernel.asm	/^c0106730:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0106733	obj/kernel.asm	/^c0106733:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c0106738	obj/kernel.asm	/^c0106738:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010673b	obj/kernel.asm	/^c010673b:	74 19                	je     c0106756 <check_content_set+0xb2>$/;"	l
c010673d	obj/kernel.asm	/^c010673d:	68 b5 d1 10 c0       	push   $0xc010d1b5$/;"	l
c0106742	obj/kernel.asm	/^c0106742:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c0106747	obj/kernel.asm	/^c0106747:	68 98 00 00 00       	push   $0x98$/;"	l
c010674c	obj/kernel.asm	/^c010674c:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c0106751	obj/kernel.asm	/^c0106751:	e8 89 9c ff ff       	call   c01003df <__panic>$/;"	l
c0106756	obj/kernel.asm	/^c0106756:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c010675b	obj/kernel.asm	/^c010675b:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c010675e	obj/kernel.asm	/^c010675e:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c0106763	obj/kernel.asm	/^c0106763:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0106766	obj/kernel.asm	/^c0106766:	74 19                	je     c0106781 <check_content_set+0xdd>$/;"	l
c0106768	obj/kernel.asm	/^c0106768:	68 c4 d1 10 c0       	push   $0xc010d1c4$/;"	l
c010676d	obj/kernel.asm	/^c010676d:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c0106772	obj/kernel.asm	/^c0106772:	68 9a 00 00 00       	push   $0x9a$/;"	l
c0106777	obj/kernel.asm	/^c0106777:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c010677c	obj/kernel.asm	/^c010677c:	e8 5e 9c ff ff       	call   c01003df <__panic>$/;"	l
c0106781	obj/kernel.asm	/^c0106781:	b8 10 30 00 00       	mov    $0x3010,%eax$/;"	l
c0106786	obj/kernel.asm	/^c0106786:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0106789	obj/kernel.asm	/^c0106789:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c010678e	obj/kernel.asm	/^c010678e:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0106791	obj/kernel.asm	/^c0106791:	74 19                	je     c01067ac <check_content_set+0x108>$/;"	l
c0106793	obj/kernel.asm	/^c0106793:	68 c4 d1 10 c0       	push   $0xc010d1c4$/;"	l
c0106798	obj/kernel.asm	/^c0106798:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c010679d	obj/kernel.asm	/^c010679d:	68 9c 00 00 00       	push   $0x9c$/;"	l
c01067a2	obj/kernel.asm	/^c01067a2:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c01067a7	obj/kernel.asm	/^c01067a7:	e8 33 9c ff ff       	call   c01003df <__panic>$/;"	l
c01067ac	obj/kernel.asm	/^c01067ac:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c01067b1	obj/kernel.asm	/^c01067b1:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c01067b4	obj/kernel.asm	/^c01067b4:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c01067b9	obj/kernel.asm	/^c01067b9:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01067bc	obj/kernel.asm	/^c01067bc:	74 19                	je     c01067d7 <check_content_set+0x133>$/;"	l
c01067be	obj/kernel.asm	/^c01067be:	68 d3 d1 10 c0       	push   $0xc010d1d3$/;"	l
c01067c3	obj/kernel.asm	/^c01067c3:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c01067c8	obj/kernel.asm	/^c01067c8:	68 9e 00 00 00       	push   $0x9e$/;"	l
c01067cd	obj/kernel.asm	/^c01067cd:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c01067d2	obj/kernel.asm	/^c01067d2:	e8 08 9c ff ff       	call   c01003df <__panic>$/;"	l
c01067d7	obj/kernel.asm	/^c01067d7:	b8 10 40 00 00       	mov    $0x4010,%eax$/;"	l
c01067dc	obj/kernel.asm	/^c01067dc:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c01067df	obj/kernel.asm	/^c01067df:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c01067e4	obj/kernel.asm	/^c01067e4:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01067e7	obj/kernel.asm	/^c01067e7:	74 19                	je     c0106802 <check_content_set+0x15e>$/;"	l
c01067e9	obj/kernel.asm	/^c01067e9:	68 d3 d1 10 c0       	push   $0xc010d1d3$/;"	l
c01067ee	obj/kernel.asm	/^c01067ee:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c01067f3	obj/kernel.asm	/^c01067f3:	68 a0 00 00 00       	push   $0xa0$/;"	l
c01067f8	obj/kernel.asm	/^c01067f8:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c01067fd	obj/kernel.asm	/^c01067fd:	e8 dd 9b ff ff       	call   c01003df <__panic>$/;"	l
c0106802	obj/kernel.asm	/^c0106802:	c9                   	leave  $/;"	l
c0106803	obj/kernel.asm	/^c0106803:	c3                   	ret    $/;"	l
c0106804	obj/kernel.asm	/^c0106804 <check_content_access>:$/;"	l
c0106804	obj/kernel.asm	/^c0106804:	55                   	push   %ebp$/;"	l
c0106805	obj/kernel.asm	/^c0106805:	89 e5                	mov    %esp,%ebp$/;"	l
c0106807	obj/kernel.asm	/^c0106807:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010680a	obj/kernel.asm	/^c010680a:	a1 38 ee 1a c0       	mov    0xc01aee38,%eax$/;"	l
c010680f	obj/kernel.asm	/^c010680f:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0106812	obj/kernel.asm	/^c0106812:	ff d0                	call   *%eax$/;"	l
c0106814	obj/kernel.asm	/^c0106814:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106817	obj/kernel.asm	/^c0106817:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010681a	obj/kernel.asm	/^c010681a:	c9                   	leave  $/;"	l
c010681b	obj/kernel.asm	/^c010681b:	c3                   	ret    $/;"	l
c010681c	obj/kernel.asm	/^c010681c <check_swap>:$/;"	l
c010681c	obj/kernel.asm	/^c010681c:	55                   	push   %ebp$/;"	l
c010681d	obj/kernel.asm	/^c010681d:	89 e5                	mov    %esp,%ebp$/;"	l
c010681f	obj/kernel.asm	/^c010681f:	53                   	push   %ebx$/;"	l
c0106820	obj/kernel.asm	/^c0106820:	83 ec 64             	sub    $0x64,%esp$/;"	l
c0106823	obj/kernel.asm	/^c0106823:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010682a	obj/kernel.asm	/^c010682a:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0106831	obj/kernel.asm	/^c0106831:	c7 45 e8 ec 0f 1b c0 	movl   $0xc01b0fec,-0x18(%ebp)$/;"	l
c0106838	obj/kernel.asm	/^c0106838:	eb 60                	jmp    c010689a <check_swap+0x7e>$/;"	l
c010683a	obj/kernel.asm	/^c010683a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010683d	obj/kernel.asm	/^c010683d:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0106840	obj/kernel.asm	/^c0106840:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106843	obj/kernel.asm	/^c0106843:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106846	obj/kernel.asm	/^c0106846:	83 c0 04             	add    $0x4,%eax$/;"	l
c0106849	obj/kernel.asm	/^c0106849:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)$/;"	l
c0106850	obj/kernel.asm	/^c0106850:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0106853	obj/kernel.asm	/^c0106853:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0106856	obj/kernel.asm	/^c0106856:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0106859	obj/kernel.asm	/^c0106859:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010685c	obj/kernel.asm	/^c010685c:	19 c0                	sbb    %eax,%eax$/;"	l
c010685e	obj/kernel.asm	/^c010685e:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0106861	obj/kernel.asm	/^c0106861:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0106865	obj/kernel.asm	/^c0106865:	0f 95 c0             	setne  %al$/;"	l
c0106868	obj/kernel.asm	/^c0106868:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010686b	obj/kernel.asm	/^c010686b:	85 c0                	test   %eax,%eax$/;"	l
c010686d	obj/kernel.asm	/^c010686d:	75 19                	jne    c0106888 <check_swap+0x6c>$/;"	l
c010686f	obj/kernel.asm	/^c010686f:	68 e2 d1 10 c0       	push   $0xc010d1e2$/;"	l
c0106874	obj/kernel.asm	/^c0106874:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c0106879	obj/kernel.asm	/^c0106879:	68 bb 00 00 00       	push   $0xbb$/;"	l
c010687e	obj/kernel.asm	/^c010687e:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c0106883	obj/kernel.asm	/^c0106883:	e8 57 9b ff ff       	call   c01003df <__panic>$/;"	l
c0106888	obj/kernel.asm	/^c0106888:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010688c	obj/kernel.asm	/^c010688c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010688f	obj/kernel.asm	/^c010688f:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0106892	obj/kernel.asm	/^c0106892:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106895	obj/kernel.asm	/^c0106895:	01 d0                	add    %edx,%eax$/;"	l
c0106897	obj/kernel.asm	/^c0106897:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010689a	obj/kernel.asm	/^c010689a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010689d	obj/kernel.asm	/^c010689d:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c01068a0	obj/kernel.asm	/^c01068a0:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c01068a3	obj/kernel.asm	/^c01068a3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01068a6	obj/kernel.asm	/^c01068a6:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01068a9	obj/kernel.asm	/^c01068a9:	81 7d e8 ec 0f 1b c0 	cmpl   $0xc01b0fec,-0x18(%ebp)$/;"	l
c01068b0	obj/kernel.asm	/^c01068b0:	75 88                	jne    c010683a <check_swap+0x1e>$/;"	l
c01068b2	obj/kernel.asm	/^c01068b2:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c01068b5	obj/kernel.asm	/^c01068b5:	e8 3b d1 ff ff       	call   c01039f5 <nr_free_pages>$/;"	l
c01068ba	obj/kernel.asm	/^c01068ba:	39 c3                	cmp    %eax,%ebx$/;"	l
c01068bc	obj/kernel.asm	/^c01068bc:	74 19                	je     c01068d7 <check_swap+0xbb>$/;"	l
c01068be	obj/kernel.asm	/^c01068be:	68 f2 d1 10 c0       	push   $0xc010d1f2$/;"	l
c01068c3	obj/kernel.asm	/^c01068c3:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c01068c8	obj/kernel.asm	/^c01068c8:	68 be 00 00 00       	push   $0xbe$/;"	l
c01068cd	obj/kernel.asm	/^c01068cd:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c01068d2	obj/kernel.asm	/^c01068d2:	e8 08 9b ff ff       	call   c01003df <__panic>$/;"	l
c01068d7	obj/kernel.asm	/^c01068d7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01068da	obj/kernel.asm	/^c01068da:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01068dd	obj/kernel.asm	/^c01068dd:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01068e0	obj/kernel.asm	/^c01068e0:	68 0c d2 10 c0       	push   $0xc010d20c$/;"	l
c01068e5	obj/kernel.asm	/^c01068e5:	e8 90 99 ff ff       	call   c010027a <cprintf>$/;"	l
c01068ea	obj/kernel.asm	/^c01068ea:	83 c4 10             	add    $0x10,%esp$/;"	l
c01068ed	obj/kernel.asm	/^c01068ed:	e8 c7 e9 ff ff       	call   c01052b9 <mm_create>$/;"	l
c01068f2	obj/kernel.asm	/^c01068f2:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01068f5	obj/kernel.asm	/^c01068f5:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01068f9	obj/kernel.asm	/^c01068f9:	75 19                	jne    c0106914 <check_swap+0xf8>$/;"	l
c01068fb	obj/kernel.asm	/^c01068fb:	68 32 d2 10 c0       	push   $0xc010d232$/;"	l
c0106900	obj/kernel.asm	/^c0106900:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c0106905	obj/kernel.asm	/^c0106905:	68 c3 00 00 00       	push   $0xc3$/;"	l
c010690a	obj/kernel.asm	/^c010690a:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c010690f	obj/kernel.asm	/^c010690f:	e8 cb 9a ff ff       	call   c01003df <__panic>$/;"	l
c0106914	obj/kernel.asm	/^c0106914:	a1 1c 0f 1b c0       	mov    0xc01b0f1c,%eax$/;"	l
c0106919	obj/kernel.asm	/^c0106919:	85 c0                	test   %eax,%eax$/;"	l
c010691b	obj/kernel.asm	/^c010691b:	74 19                	je     c0106936 <check_swap+0x11a>$/;"	l
c010691d	obj/kernel.asm	/^c010691d:	68 3d d2 10 c0       	push   $0xc010d23d$/;"	l
c0106922	obj/kernel.asm	/^c0106922:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c0106927	obj/kernel.asm	/^c0106927:	68 c6 00 00 00       	push   $0xc6$/;"	l
c010692c	obj/kernel.asm	/^c010692c:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c0106931	obj/kernel.asm	/^c0106931:	e8 a9 9a ff ff       	call   c01003df <__panic>$/;"	l
c0106936	obj/kernel.asm	/^c0106936:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106939	obj/kernel.asm	/^c0106939:	a3 1c 0f 1b c0       	mov    %eax,0xc01b0f1c$/;"	l
c010693e	obj/kernel.asm	/^c010693e:	8b 15 84 ed 1a c0    	mov    0xc01aed84,%edx$/;"	l
c0106944	obj/kernel.asm	/^c0106944:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106947	obj/kernel.asm	/^c0106947:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010694a	obj/kernel.asm	/^c010694a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010694d	obj/kernel.asm	/^c010694d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106950	obj/kernel.asm	/^c0106950:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0106953	obj/kernel.asm	/^c0106953:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106956	obj/kernel.asm	/^c0106956:	8b 00                	mov    (%eax),%eax$/;"	l
c0106958	obj/kernel.asm	/^c0106958:	85 c0                	test   %eax,%eax$/;"	l
c010695a	obj/kernel.asm	/^c010695a:	74 19                	je     c0106975 <check_swap+0x159>$/;"	l
c010695c	obj/kernel.asm	/^c010695c:	68 55 d2 10 c0       	push   $0xc010d255$/;"	l
c0106961	obj/kernel.asm	/^c0106961:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c0106966	obj/kernel.asm	/^c0106966:	68 cb 00 00 00       	push   $0xcb$/;"	l
c010696b	obj/kernel.asm	/^c010696b:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c0106970	obj/kernel.asm	/^c0106970:	e8 6a 9a ff ff       	call   c01003df <__panic>$/;"	l
c0106975	obj/kernel.asm	/^c0106975:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106978	obj/kernel.asm	/^c0106978:	6a 03                	push   $0x3$/;"	l
c010697a	obj/kernel.asm	/^c010697a:	68 00 60 00 00       	push   $0x6000$/;"	l
c010697f	obj/kernel.asm	/^c010697f:	68 00 10 00 00       	push   $0x1000$/;"	l
c0106984	obj/kernel.asm	/^c0106984:	e8 ce e9 ff ff       	call   c0105357 <vma_create>$/;"	l
c0106989	obj/kernel.asm	/^c0106989:	83 c4 10             	add    $0x10,%esp$/;"	l
c010698c	obj/kernel.asm	/^c010698c:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010698f	obj/kernel.asm	/^c010698f:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0106993	obj/kernel.asm	/^c0106993:	75 19                	jne    c01069ae <check_swap+0x192>$/;"	l
c0106995	obj/kernel.asm	/^c0106995:	68 63 d2 10 c0       	push   $0xc010d263$/;"	l
c010699a	obj/kernel.asm	/^c010699a:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c010699f	obj/kernel.asm	/^c010699f:	68 ce 00 00 00       	push   $0xce$/;"	l
c01069a4	obj/kernel.asm	/^c01069a4:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c01069a9	obj/kernel.asm	/^c01069a9:	e8 31 9a ff ff       	call   c01003df <__panic>$/;"	l
c01069ae	obj/kernel.asm	/^c01069ae:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01069b1	obj/kernel.asm	/^c01069b1:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c01069b4	obj/kernel.asm	/^c01069b4:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01069b7	obj/kernel.asm	/^c01069b7:	e8 02 eb ff ff       	call   c01054be <insert_vma_struct>$/;"	l
c01069bc	obj/kernel.asm	/^c01069bc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01069bf	obj/kernel.asm	/^c01069bf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01069c2	obj/kernel.asm	/^c01069c2:	68 70 d2 10 c0       	push   $0xc010d270$/;"	l
c01069c7	obj/kernel.asm	/^c01069c7:	e8 ae 98 ff ff       	call   c010027a <cprintf>$/;"	l
c01069cc	obj/kernel.asm	/^c01069cc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01069cf	obj/kernel.asm	/^c01069cf:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c01069d6	obj/kernel.asm	/^c01069d6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01069d9	obj/kernel.asm	/^c01069d9:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01069dc	obj/kernel.asm	/^c01069dc:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01069df	obj/kernel.asm	/^c01069df:	6a 01                	push   $0x1$/;"	l
c01069e1	obj/kernel.asm	/^c01069e1:	68 00 10 00 00       	push   $0x1000$/;"	l
c01069e6	obj/kernel.asm	/^c01069e6:	50                   	push   %eax$/;"	l
c01069e7	obj/kernel.asm	/^c01069e7:	e8 52 d6 ff ff       	call   c010403e <get_pte>$/;"	l
c01069ec	obj/kernel.asm	/^c01069ec:	83 c4 10             	add    $0x10,%esp$/;"	l
c01069ef	obj/kernel.asm	/^c01069ef:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01069f2	obj/kernel.asm	/^c01069f2:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
c01069f6	obj/kernel.asm	/^c01069f6:	75 19                	jne    c0106a11 <check_swap+0x1f5>$/;"	l
c01069f8	obj/kernel.asm	/^c01069f8:	68 a4 d2 10 c0       	push   $0xc010d2a4$/;"	l
c01069fd	obj/kernel.asm	/^c01069fd:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c0106a02	obj/kernel.asm	/^c0106a02:	68 d6 00 00 00       	push   $0xd6$/;"	l
c0106a07	obj/kernel.asm	/^c0106a07:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c0106a0c	obj/kernel.asm	/^c0106a0c:	e8 ce 99 ff ff       	call   c01003df <__panic>$/;"	l
c0106a11	obj/kernel.asm	/^c0106a11:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106a14	obj/kernel.asm	/^c0106a14:	68 b8 d2 10 c0       	push   $0xc010d2b8$/;"	l
c0106a19	obj/kernel.asm	/^c0106a19:	e8 5c 98 ff ff       	call   c010027a <cprintf>$/;"	l
c0106a1e	obj/kernel.asm	/^c0106a1e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106a21	obj/kernel.asm	/^c0106a21:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106a28	obj/kernel.asm	/^c0106a28:	e9 90 00 00 00       	jmp    c0106abd <check_swap+0x2a1>$/;"	l
c0106a2d	obj/kernel.asm	/^c0106a2d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106a30	obj/kernel.asm	/^c0106a30:	6a 01                	push   $0x1$/;"	l
c0106a32	obj/kernel.asm	/^c0106a32:	e8 1e cf ff ff       	call   c0103955 <alloc_pages>$/;"	l
c0106a37	obj/kernel.asm	/^c0106a37:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106a3a	obj/kernel.asm	/^c0106a3a:	89 c2                	mov    %eax,%edx$/;"	l
c0106a3c	obj/kernel.asm	/^c0106a3c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106a3f	obj/kernel.asm	/^c0106a3f:	89 14 85 20 0f 1b c0 	mov    %edx,-0x3fe4f0e0(,%eax,4)$/;"	l
c0106a46	obj/kernel.asm	/^c0106a46:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106a49	obj/kernel.asm	/^c0106a49:	8b 04 85 20 0f 1b c0 	mov    -0x3fe4f0e0(,%eax,4),%eax$/;"	l
c0106a50	obj/kernel.asm	/^c0106a50:	85 c0                	test   %eax,%eax$/;"	l
c0106a52	obj/kernel.asm	/^c0106a52:	75 19                	jne    c0106a6d <check_swap+0x251>$/;"	l
c0106a54	obj/kernel.asm	/^c0106a54:	68 dc d2 10 c0       	push   $0xc010d2dc$/;"	l
c0106a59	obj/kernel.asm	/^c0106a59:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c0106a5e	obj/kernel.asm	/^c0106a5e:	68 db 00 00 00       	push   $0xdb$/;"	l
c0106a63	obj/kernel.asm	/^c0106a63:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c0106a68	obj/kernel.asm	/^c0106a68:	e8 72 99 ff ff       	call   c01003df <__panic>$/;"	l
c0106a6d	obj/kernel.asm	/^c0106a6d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106a70	obj/kernel.asm	/^c0106a70:	8b 04 85 20 0f 1b c0 	mov    -0x3fe4f0e0(,%eax,4),%eax$/;"	l
c0106a77	obj/kernel.asm	/^c0106a77:	83 c0 04             	add    $0x4,%eax$/;"	l
c0106a7a	obj/kernel.asm	/^c0106a7a:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%ebp)$/;"	l
c0106a81	obj/kernel.asm	/^c0106a81:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0106a84	obj/kernel.asm	/^c0106a84:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0106a87	obj/kernel.asm	/^c0106a87:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0106a8a	obj/kernel.asm	/^c0106a8a:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0106a8d	obj/kernel.asm	/^c0106a8d:	19 c0                	sbb    %eax,%eax$/;"	l
c0106a8f	obj/kernel.asm	/^c0106a8f:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0106a92	obj/kernel.asm	/^c0106a92:	83 7d ac 00          	cmpl   $0x0,-0x54(%ebp)$/;"	l
c0106a96	obj/kernel.asm	/^c0106a96:	0f 95 c0             	setne  %al$/;"	l
c0106a99	obj/kernel.asm	/^c0106a99:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0106a9c	obj/kernel.asm	/^c0106a9c:	85 c0                	test   %eax,%eax$/;"	l
c0106a9e	obj/kernel.asm	/^c0106a9e:	74 19                	je     c0106ab9 <check_swap+0x29d>$/;"	l
c0106aa0	obj/kernel.asm	/^c0106aa0:	68 f0 d2 10 c0       	push   $0xc010d2f0$/;"	l
c0106aa5	obj/kernel.asm	/^c0106aa5:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c0106aaa	obj/kernel.asm	/^c0106aaa:	68 dc 00 00 00       	push   $0xdc$/;"	l
c0106aaf	obj/kernel.asm	/^c0106aaf:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c0106ab4	obj/kernel.asm	/^c0106ab4:	e8 26 99 ff ff       	call   c01003df <__panic>$/;"	l
c0106ab9	obj/kernel.asm	/^c0106ab9:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106abd	obj/kernel.asm	/^c0106abd:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106ac1	obj/kernel.asm	/^c0106ac1:	0f 8e 66 ff ff ff    	jle    c0106a2d <check_swap+0x211>$/;"	l
c0106ac7	obj/kernel.asm	/^c0106ac7:	a1 ec 0f 1b c0       	mov    0xc01b0fec,%eax$/;"	l
c0106acc	obj/kernel.asm	/^c0106acc:	8b 15 f0 0f 1b c0    	mov    0xc01b0ff0,%edx$/;"	l
c0106ad2	obj/kernel.asm	/^c0106ad2:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0106ad5	obj/kernel.asm	/^c0106ad5:	89 55 9c             	mov    %edx,-0x64(%ebp)$/;"	l
c0106ad8	obj/kernel.asm	/^c0106ad8:	c7 45 a8 ec 0f 1b c0 	movl   $0xc01b0fec,-0x58(%ebp)$/;"	l
c0106adf	obj/kernel.asm	/^c0106adf:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0106ae2	obj/kernel.asm	/^c0106ae2:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c0106ae5	obj/kernel.asm	/^c0106ae5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0106ae8	obj/kernel.asm	/^c0106ae8:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0106aeb	obj/kernel.asm	/^c0106aeb:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0106aee	obj/kernel.asm	/^c0106aee:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0106af1	obj/kernel.asm	/^c0106af1:	89 10                	mov    %edx,(%eax)$/;"	l
c0106af3	obj/kernel.asm	/^c0106af3:	c7 45 a4 ec 0f 1b c0 	movl   $0xc01b0fec,-0x5c(%ebp)$/;"	l
c0106afa	obj/kernel.asm	/^c0106afa:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0106afd	obj/kernel.asm	/^c0106afd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106b00	obj/kernel.asm	/^c0106b00:	39 45 a4             	cmp    %eax,-0x5c(%ebp)$/;"	l
c0106b03	obj/kernel.asm	/^c0106b03:	0f 94 c0             	sete   %al$/;"	l
c0106b06	obj/kernel.asm	/^c0106b06:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0106b09	obj/kernel.asm	/^c0106b09:	85 c0                	test   %eax,%eax$/;"	l
c0106b0b	obj/kernel.asm	/^c0106b0b:	75 19                	jne    c0106b26 <check_swap+0x30a>$/;"	l
c0106b0d	obj/kernel.asm	/^c0106b0d:	68 0b d3 10 c0       	push   $0xc010d30b$/;"	l
c0106b12	obj/kernel.asm	/^c0106b12:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c0106b17	obj/kernel.asm	/^c0106b17:	68 e0 00 00 00       	push   $0xe0$/;"	l
c0106b1c	obj/kernel.asm	/^c0106b1c:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c0106b21	obj/kernel.asm	/^c0106b21:	e8 b9 98 ff ff       	call   c01003df <__panic>$/;"	l
c0106b26	obj/kernel.asm	/^c0106b26:	a1 f4 0f 1b c0       	mov    0xc01b0ff4,%eax$/;"	l
c0106b2b	obj/kernel.asm	/^c0106b2b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0106b2e	obj/kernel.asm	/^c0106b2e:	c7 05 f4 0f 1b c0 00 	movl   $0x0,0xc01b0ff4$/;"	l
c0106b35	obj/kernel.asm	/^c0106b35:	00 00 00 $/;"	l
c0106b38	obj/kernel.asm	/^c0106b38:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106b3f	obj/kernel.asm	/^c0106b3f:	eb 1c                	jmp    c0106b5d <check_swap+0x341>$/;"	l
c0106b41	obj/kernel.asm	/^c0106b41:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106b44	obj/kernel.asm	/^c0106b44:	8b 04 85 20 0f 1b c0 	mov    -0x3fe4f0e0(,%eax,4),%eax$/;"	l
c0106b4b	obj/kernel.asm	/^c0106b4b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106b4e	obj/kernel.asm	/^c0106b4e:	6a 01                	push   $0x1$/;"	l
c0106b50	obj/kernel.asm	/^c0106b50:	50                   	push   %eax$/;"	l
c0106b51	obj/kernel.asm	/^c0106b51:	e8 6b ce ff ff       	call   c01039c1 <free_pages>$/;"	l
c0106b56	obj/kernel.asm	/^c0106b56:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106b59	obj/kernel.asm	/^c0106b59:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106b5d	obj/kernel.asm	/^c0106b5d:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106b61	obj/kernel.asm	/^c0106b61:	7e de                	jle    c0106b41 <check_swap+0x325>$/;"	l
c0106b63	obj/kernel.asm	/^c0106b63:	a1 f4 0f 1b c0       	mov    0xc01b0ff4,%eax$/;"	l
c0106b68	obj/kernel.asm	/^c0106b68:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0106b6b	obj/kernel.asm	/^c0106b6b:	74 19                	je     c0106b86 <check_swap+0x36a>$/;"	l
c0106b6d	obj/kernel.asm	/^c0106b6d:	68 24 d3 10 c0       	push   $0xc010d324$/;"	l
c0106b72	obj/kernel.asm	/^c0106b72:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c0106b77	obj/kernel.asm	/^c0106b77:	68 e9 00 00 00       	push   $0xe9$/;"	l
c0106b7c	obj/kernel.asm	/^c0106b7c:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c0106b81	obj/kernel.asm	/^c0106b81:	e8 59 98 ff ff       	call   c01003df <__panic>$/;"	l
c0106b86	obj/kernel.asm	/^c0106b86:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106b89	obj/kernel.asm	/^c0106b89:	68 48 d3 10 c0       	push   $0xc010d348$/;"	l
c0106b8e	obj/kernel.asm	/^c0106b8e:	e8 e7 96 ff ff       	call   c010027a <cprintf>$/;"	l
c0106b93	obj/kernel.asm	/^c0106b93:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106b96	obj/kernel.asm	/^c0106b96:	c7 05 2c ee 1a c0 00 	movl   $0x0,0xc01aee2c$/;"	l
c0106b9d	obj/kernel.asm	/^c0106b9d:	00 00 00 $/;"	l
c0106ba0	obj/kernel.asm	/^c0106ba0:	e8 ff fa ff ff       	call   c01066a4 <check_content_set>$/;"	l
c0106ba5	obj/kernel.asm	/^c0106ba5:	a1 f4 0f 1b c0       	mov    0xc01b0ff4,%eax$/;"	l
c0106baa	obj/kernel.asm	/^c0106baa:	85 c0                	test   %eax,%eax$/;"	l
c0106bac	obj/kernel.asm	/^c0106bac:	74 19                	je     c0106bc7 <check_swap+0x3ab>$/;"	l
c0106bae	obj/kernel.asm	/^c0106bae:	68 6f d3 10 c0       	push   $0xc010d36f$/;"	l
c0106bb3	obj/kernel.asm	/^c0106bb3:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c0106bb8	obj/kernel.asm	/^c0106bb8:	68 f2 00 00 00       	push   $0xf2$/;"	l
c0106bbd	obj/kernel.asm	/^c0106bbd:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c0106bc2	obj/kernel.asm	/^c0106bc2:	e8 18 98 ff ff       	call   c01003df <__panic>$/;"	l
c0106bc7	obj/kernel.asm	/^c0106bc7:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106bce	obj/kernel.asm	/^c0106bce:	eb 26                	jmp    c0106bf6 <check_swap+0x3da>$/;"	l
c0106bd0	obj/kernel.asm	/^c0106bd0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106bd3	obj/kernel.asm	/^c0106bd3:	c7 04 85 40 0f 1b c0 	movl   $0xffffffff,-0x3fe4f0c0(,%eax,4)$/;"	l
c0106bda	obj/kernel.asm	/^c0106bda:	ff ff ff ff $/;"	l
c0106bde	obj/kernel.asm	/^c0106bde:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106be1	obj/kernel.asm	/^c0106be1:	8b 14 85 40 0f 1b c0 	mov    -0x3fe4f0c0(,%eax,4),%edx$/;"	l
c0106be8	obj/kernel.asm	/^c0106be8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106beb	obj/kernel.asm	/^c0106beb:	89 14 85 80 0f 1b c0 	mov    %edx,-0x3fe4f080(,%eax,4)$/;"	l
c0106bf2	obj/kernel.asm	/^c0106bf2:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106bf6	obj/kernel.asm	/^c0106bf6:	83 7d ec 09          	cmpl   $0x9,-0x14(%ebp)$/;"	l
c0106bfa	obj/kernel.asm	/^c0106bfa:	7e d4                	jle    c0106bd0 <check_swap+0x3b4>$/;"	l
c0106bfc	obj/kernel.asm	/^c0106bfc:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106c03	obj/kernel.asm	/^c0106c03:	e9 cc 00 00 00       	jmp    c0106cd4 <check_swap+0x4b8>$/;"	l
c0106c08	obj/kernel.asm	/^c0106c08:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c0b	obj/kernel.asm	/^c0106c0b:	c7 04 85 d4 0f 1b c0 	movl   $0x0,-0x3fe4f02c(,%eax,4)$/;"	l
c0106c12	obj/kernel.asm	/^c0106c12:	00 00 00 00 $/;"	l
c0106c16	obj/kernel.asm	/^c0106c16:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c19	obj/kernel.asm	/^c0106c19:	83 c0 01             	add    $0x1,%eax$/;"	l
c0106c1c	obj/kernel.asm	/^c0106c1c:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0106c1f	obj/kernel.asm	/^c0106c1f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106c22	obj/kernel.asm	/^c0106c22:	6a 00                	push   $0x0$/;"	l
c0106c24	obj/kernel.asm	/^c0106c24:	50                   	push   %eax$/;"	l
c0106c25	obj/kernel.asm	/^c0106c25:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0106c28	obj/kernel.asm	/^c0106c28:	e8 11 d4 ff ff       	call   c010403e <get_pte>$/;"	l
c0106c2d	obj/kernel.asm	/^c0106c2d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106c30	obj/kernel.asm	/^c0106c30:	89 c2                	mov    %eax,%edx$/;"	l
c0106c32	obj/kernel.asm	/^c0106c32:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c35	obj/kernel.asm	/^c0106c35:	89 14 85 d4 0f 1b c0 	mov    %edx,-0x3fe4f02c(,%eax,4)$/;"	l
c0106c3c	obj/kernel.asm	/^c0106c3c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c3f	obj/kernel.asm	/^c0106c3f:	8b 04 85 d4 0f 1b c0 	mov    -0x3fe4f02c(,%eax,4),%eax$/;"	l
c0106c46	obj/kernel.asm	/^c0106c46:	85 c0                	test   %eax,%eax$/;"	l
c0106c48	obj/kernel.asm	/^c0106c48:	75 19                	jne    c0106c63 <check_swap+0x447>$/;"	l
c0106c4a	obj/kernel.asm	/^c0106c4a:	68 7c d3 10 c0       	push   $0xc010d37c$/;"	l
c0106c4f	obj/kernel.asm	/^c0106c4f:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c0106c54	obj/kernel.asm	/^c0106c54:	68 fa 00 00 00       	push   $0xfa$/;"	l
c0106c59	obj/kernel.asm	/^c0106c59:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c0106c5e	obj/kernel.asm	/^c0106c5e:	e8 7c 97 ff ff       	call   c01003df <__panic>$/;"	l
c0106c63	obj/kernel.asm	/^c0106c63:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c66	obj/kernel.asm	/^c0106c66:	8b 04 85 d4 0f 1b c0 	mov    -0x3fe4f02c(,%eax,4),%eax$/;"	l
c0106c6d	obj/kernel.asm	/^c0106c6d:	8b 00                	mov    (%eax),%eax$/;"	l
c0106c6f	obj/kernel.asm	/^c0106c6f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106c72	obj/kernel.asm	/^c0106c72:	50                   	push   %eax$/;"	l
c0106c73	obj/kernel.asm	/^c0106c73:	e8 f6 f6 ff ff       	call   c010636e <pte2page>$/;"	l
c0106c78	obj/kernel.asm	/^c0106c78:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106c7b	obj/kernel.asm	/^c0106c7b:	89 c2                	mov    %eax,%edx$/;"	l
c0106c7d	obj/kernel.asm	/^c0106c7d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c80	obj/kernel.asm	/^c0106c80:	8b 04 85 20 0f 1b c0 	mov    -0x3fe4f0e0(,%eax,4),%eax$/;"	l
c0106c87	obj/kernel.asm	/^c0106c87:	39 c2                	cmp    %eax,%edx$/;"	l
c0106c89	obj/kernel.asm	/^c0106c89:	74 19                	je     c0106ca4 <check_swap+0x488>$/;"	l
c0106c8b	obj/kernel.asm	/^c0106c8b:	68 94 d3 10 c0       	push   $0xc010d394$/;"	l
c0106c90	obj/kernel.asm	/^c0106c90:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c0106c95	obj/kernel.asm	/^c0106c95:	68 fb 00 00 00       	push   $0xfb$/;"	l
c0106c9a	obj/kernel.asm	/^c0106c9a:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c0106c9f	obj/kernel.asm	/^c0106c9f:	e8 3b 97 ff ff       	call   c01003df <__panic>$/;"	l
c0106ca4	obj/kernel.asm	/^c0106ca4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106ca7	obj/kernel.asm	/^c0106ca7:	8b 04 85 d4 0f 1b c0 	mov    -0x3fe4f02c(,%eax,4),%eax$/;"	l
c0106cae	obj/kernel.asm	/^c0106cae:	8b 00                	mov    (%eax),%eax$/;"	l
c0106cb0	obj/kernel.asm	/^c0106cb0:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106cb3	obj/kernel.asm	/^c0106cb3:	85 c0                	test   %eax,%eax$/;"	l
c0106cb5	obj/kernel.asm	/^c0106cb5:	75 19                	jne    c0106cd0 <check_swap+0x4b4>$/;"	l
c0106cb7	obj/kernel.asm	/^c0106cb7:	68 bc d3 10 c0       	push   $0xc010d3bc$/;"	l
c0106cbc	obj/kernel.asm	/^c0106cbc:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c0106cc1	obj/kernel.asm	/^c0106cc1:	68 fc 00 00 00       	push   $0xfc$/;"	l
c0106cc6	obj/kernel.asm	/^c0106cc6:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c0106ccb	obj/kernel.asm	/^c0106ccb:	e8 0f 97 ff ff       	call   c01003df <__panic>$/;"	l
c0106cd0	obj/kernel.asm	/^c0106cd0:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106cd4	obj/kernel.asm	/^c0106cd4:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106cd8	obj/kernel.asm	/^c0106cd8:	0f 8e 2a ff ff ff    	jle    c0106c08 <check_swap+0x3ec>$/;"	l
c0106cde	obj/kernel.asm	/^c0106cde:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106ce1	obj/kernel.asm	/^c0106ce1:	68 d8 d3 10 c0       	push   $0xc010d3d8$/;"	l
c0106ce6	obj/kernel.asm	/^c0106ce6:	e8 8f 95 ff ff       	call   c010027a <cprintf>$/;"	l
c0106ceb	obj/kernel.asm	/^c0106ceb:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106cee	obj/kernel.asm	/^c0106cee:	e8 11 fb ff ff       	call   c0106804 <check_content_access>$/;"	l
c0106cf3	obj/kernel.asm	/^c0106cf3:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0106cf6	obj/kernel.asm	/^c0106cf6:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0106cfa	obj/kernel.asm	/^c0106cfa:	74 19                	je     c0106d15 <check_swap+0x4f9>$/;"	l
c0106cfc	obj/kernel.asm	/^c0106cfc:	68 fe d3 10 c0       	push   $0xc010d3fe$/;"	l
c0106d01	obj/kernel.asm	/^c0106d01:	68 e6 d0 10 c0       	push   $0xc010d0e6$/;"	l
c0106d06	obj/kernel.asm	/^c0106d06:	68 01 01 00 00       	push   $0x101$/;"	l
c0106d0b	obj/kernel.asm	/^c0106d0b:	68 80 d0 10 c0       	push   $0xc010d080$/;"	l
c0106d10	obj/kernel.asm	/^c0106d10:	e8 ca 96 ff ff       	call   c01003df <__panic>$/;"	l
c0106d15	obj/kernel.asm	/^c0106d15:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106d1c	obj/kernel.asm	/^c0106d1c:	eb 1c                	jmp    c0106d3a <check_swap+0x51e>$/;"	l
c0106d1e	obj/kernel.asm	/^c0106d1e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106d21	obj/kernel.asm	/^c0106d21:	8b 04 85 20 0f 1b c0 	mov    -0x3fe4f0e0(,%eax,4),%eax$/;"	l
c0106d28	obj/kernel.asm	/^c0106d28:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106d2b	obj/kernel.asm	/^c0106d2b:	6a 01                	push   $0x1$/;"	l
c0106d2d	obj/kernel.asm	/^c0106d2d:	50                   	push   %eax$/;"	l
c0106d2e	obj/kernel.asm	/^c0106d2e:	e8 8e cc ff ff       	call   c01039c1 <free_pages>$/;"	l
c0106d33	obj/kernel.asm	/^c0106d33:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106d36	obj/kernel.asm	/^c0106d36:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106d3a	obj/kernel.asm	/^c0106d3a:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106d3e	obj/kernel.asm	/^c0106d3e:	7e de                	jle    c0106d1e <check_swap+0x502>$/;"	l
c0106d40	obj/kernel.asm	/^c0106d40:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106d43	obj/kernel.asm	/^c0106d43:	8b 00                	mov    (%eax),%eax$/;"	l
c0106d45	obj/kernel.asm	/^c0106d45:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106d48	obj/kernel.asm	/^c0106d48:	50                   	push   %eax$/;"	l
c0106d49	obj/kernel.asm	/^c0106d49:	e8 e3 f5 ff ff       	call   c0106331 <pa2page>$/;"	l
c0106d4e	obj/kernel.asm	/^c0106d4e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106d51	obj/kernel.asm	/^c0106d51:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106d54	obj/kernel.asm	/^c0106d54:	6a 01                	push   $0x1$/;"	l
c0106d56	obj/kernel.asm	/^c0106d56:	50                   	push   %eax$/;"	l
c0106d57	obj/kernel.asm	/^c0106d57:	e8 65 cc ff ff       	call   c01039c1 <free_pages>$/;"	l
c0106d5c	obj/kernel.asm	/^c0106d5c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106d5f	obj/kernel.asm	/^c0106d5f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106d62	obj/kernel.asm	/^c0106d62:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0106d68	obj/kernel.asm	/^c0106d68:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106d6b	obj/kernel.asm	/^c0106d6b:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0106d72	obj/kernel.asm	/^c0106d72:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106d75	obj/kernel.asm	/^c0106d75:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0106d78	obj/kernel.asm	/^c0106d78:	e8 63 e8 ff ff       	call   c01055e0 <mm_destroy>$/;"	l
c0106d7d	obj/kernel.asm	/^c0106d7d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106d80	obj/kernel.asm	/^c0106d80:	c7 05 1c 0f 1b c0 00 	movl   $0x0,0xc01b0f1c$/;"	l
c0106d87	obj/kernel.asm	/^c0106d87:	00 00 00 $/;"	l
c0106d8a	obj/kernel.asm	/^c0106d8a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0106d8d	obj/kernel.asm	/^c0106d8d:	a3 f4 0f 1b c0       	mov    %eax,0xc01b0ff4$/;"	l
c0106d92	obj/kernel.asm	/^c0106d92:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0106d95	obj/kernel.asm	/^c0106d95:	8b 55 9c             	mov    -0x64(%ebp),%edx$/;"	l
c0106d98	obj/kernel.asm	/^c0106d98:	a3 ec 0f 1b c0       	mov    %eax,0xc01b0fec$/;"	l
c0106d9d	obj/kernel.asm	/^c0106d9d:	89 15 f0 0f 1b c0    	mov    %edx,0xc01b0ff0$/;"	l
c0106da3	obj/kernel.asm	/^c0106da3:	c7 45 e8 ec 0f 1b c0 	movl   $0xc01b0fec,-0x18(%ebp)$/;"	l
c0106daa	obj/kernel.asm	/^c0106daa:	eb 1d                	jmp    c0106dc9 <check_swap+0x5ad>$/;"	l
c0106dac	obj/kernel.asm	/^c0106dac:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106daf	obj/kernel.asm	/^c0106daf:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0106db2	obj/kernel.asm	/^c0106db2:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0106db5	obj/kernel.asm	/^c0106db5:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0106db9	obj/kernel.asm	/^c0106db9:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0106dbc	obj/kernel.asm	/^c0106dbc:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0106dbf	obj/kernel.asm	/^c0106dbf:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0106dc2	obj/kernel.asm	/^c0106dc2:	29 c2                	sub    %eax,%edx$/;"	l
c0106dc4	obj/kernel.asm	/^c0106dc4:	89 d0                	mov    %edx,%eax$/;"	l
c0106dc6	obj/kernel.asm	/^c0106dc6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106dc9	obj/kernel.asm	/^c0106dc9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106dcc	obj/kernel.asm	/^c0106dcc:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c0106dcf	obj/kernel.asm	/^c0106dcf:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0106dd2	obj/kernel.asm	/^c0106dd2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106dd5	obj/kernel.asm	/^c0106dd5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106dd8	obj/kernel.asm	/^c0106dd8:	81 7d e8 ec 0f 1b c0 	cmpl   $0xc01b0fec,-0x18(%ebp)$/;"	l
c0106ddf	obj/kernel.asm	/^c0106ddf:	75 cb                	jne    c0106dac <check_swap+0x590>$/;"	l
c0106de1	obj/kernel.asm	/^c0106de1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106de4	obj/kernel.asm	/^c0106de4:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0106de7	obj/kernel.asm	/^c0106de7:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106dea	obj/kernel.asm	/^c0106dea:	68 05 d4 10 c0       	push   $0xc010d405$/;"	l
c0106def	obj/kernel.asm	/^c0106def:	e8 86 94 ff ff       	call   c010027a <cprintf>$/;"	l
c0106df4	obj/kernel.asm	/^c0106df4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106df7	obj/kernel.asm	/^c0106df7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106dfa	obj/kernel.asm	/^c0106dfa:	68 1f d4 10 c0       	push   $0xc010d41f$/;"	l
c0106dff	obj/kernel.asm	/^c0106dff:	e8 76 94 ff ff       	call   c010027a <cprintf>$/;"	l
c0106e04	obj/kernel.asm	/^c0106e04:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106e07	obj/kernel.asm	/^c0106e07:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0106e0a	obj/kernel.asm	/^c0106e0a:	c9                   	leave  $/;"	l
c0106e0b	obj/kernel.asm	/^c0106e0b:	c3                   	ret    $/;"	l
c0106e0c	obj/kernel.asm	/^c0106e0c <__intr_save>:$/;"	l
c0106e0c	obj/kernel.asm	/^c0106e0c:	55                   	push   %ebp$/;"	l
c0106e0d	obj/kernel.asm	/^c0106e0d:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e0f	obj/kernel.asm	/^c0106e0f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106e12	obj/kernel.asm	/^c0106e12:	9c                   	pushf  $/;"	l
c0106e13	obj/kernel.asm	/^c0106e13:	58                   	pop    %eax$/;"	l
c0106e14	obj/kernel.asm	/^c0106e14:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106e17	obj/kernel.asm	/^c0106e17:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106e1a	obj/kernel.asm	/^c0106e1a:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0106e1f	obj/kernel.asm	/^c0106e1f:	85 c0                	test   %eax,%eax$/;"	l
c0106e21	obj/kernel.asm	/^c0106e21:	74 0c                	je     c0106e2f <__intr_save+0x23>$/;"	l
c0106e23	obj/kernel.asm	/^c0106e23:	e8 7a b2 ff ff       	call   c01020a2 <intr_disable>$/;"	l
c0106e28	obj/kernel.asm	/^c0106e28:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0106e2d	obj/kernel.asm	/^c0106e2d:	eb 05                	jmp    c0106e34 <__intr_save+0x28>$/;"	l
c0106e2f	obj/kernel.asm	/^c0106e2f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106e34	obj/kernel.asm	/^c0106e34:	c9                   	leave  $/;"	l
c0106e35	obj/kernel.asm	/^c0106e35:	c3                   	ret    $/;"	l
c0106e36	obj/kernel.asm	/^c0106e36 <__intr_restore>:$/;"	l
c0106e36	obj/kernel.asm	/^c0106e36:	55                   	push   %ebp$/;"	l
c0106e37	obj/kernel.asm	/^c0106e37:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e39	obj/kernel.asm	/^c0106e39:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106e3c	obj/kernel.asm	/^c0106e3c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0106e40	obj/kernel.asm	/^c0106e40:	74 05                	je     c0106e47 <__intr_restore+0x11>$/;"	l
c0106e42	obj/kernel.asm	/^c0106e42:	e8 55 b2 ff ff       	call   c010209c <intr_enable>$/;"	l
c0106e47	obj/kernel.asm	/^c0106e47:	c9                   	leave  $/;"	l
c0106e48	obj/kernel.asm	/^c0106e48:	c3                   	ret    $/;"	l
c0106e49	obj/kernel.asm	/^c0106e49 <page2ppn>:$/;"	l
c0106e49	obj/kernel.asm	/^c0106e49:	55                   	push   %ebp$/;"	l
c0106e4a	obj/kernel.asm	/^c0106e4a:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e4c	obj/kernel.asm	/^c0106e4c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106e4f	obj/kernel.asm	/^c0106e4f:	8b 15 18 0f 1b c0    	mov    0xc01b0f18,%edx$/;"	l
c0106e55	obj/kernel.asm	/^c0106e55:	29 d0                	sub    %edx,%eax$/;"	l
c0106e57	obj/kernel.asm	/^c0106e57:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0106e5a	obj/kernel.asm	/^c0106e5a:	5d                   	pop    %ebp$/;"	l
c0106e5b	obj/kernel.asm	/^c0106e5b:	c3                   	ret    $/;"	l
c0106e5c	obj/kernel.asm	/^c0106e5c <page2pa>:$/;"	l
c0106e5c	obj/kernel.asm	/^c0106e5c:	55                   	push   %ebp$/;"	l
c0106e5d	obj/kernel.asm	/^c0106e5d:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e5f	obj/kernel.asm	/^c0106e5f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106e62	obj/kernel.asm	/^c0106e62:	e8 e2 ff ff ff       	call   c0106e49 <page2ppn>$/;"	l
c0106e67	obj/kernel.asm	/^c0106e67:	83 c4 04             	add    $0x4,%esp$/;"	l
c0106e6a	obj/kernel.asm	/^c0106e6a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0106e6d	obj/kernel.asm	/^c0106e6d:	c9                   	leave  $/;"	l
c0106e6e	obj/kernel.asm	/^c0106e6e:	c3                   	ret    $/;"	l
c0106e6f	obj/kernel.asm	/^c0106e6f <pa2page>:$/;"	l
c0106e6f	obj/kernel.asm	/^c0106e6f:	55                   	push   %ebp$/;"	l
c0106e70	obj/kernel.asm	/^c0106e70:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e72	obj/kernel.asm	/^c0106e72:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106e75	obj/kernel.asm	/^c0106e75:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106e78	obj/kernel.asm	/^c0106e78:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106e7b	obj/kernel.asm	/^c0106e7b:	89 c2                	mov    %eax,%edx$/;"	l
c0106e7d	obj/kernel.asm	/^c0106e7d:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c0106e82	obj/kernel.asm	/^c0106e82:	39 c2                	cmp    %eax,%edx$/;"	l
c0106e84	obj/kernel.asm	/^c0106e84:	72 14                	jb     c0106e9a <pa2page+0x2b>$/;"	l
c0106e86	obj/kernel.asm	/^c0106e86:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106e89	obj/kernel.asm	/^c0106e89:	68 38 d4 10 c0       	push   $0xc010d438$/;"	l
c0106e8e	obj/kernel.asm	/^c0106e8e:	6a 5e                	push   $0x5e$/;"	l
c0106e90	obj/kernel.asm	/^c0106e90:	68 57 d4 10 c0       	push   $0xc010d457$/;"	l
c0106e95	obj/kernel.asm	/^c0106e95:	e8 45 95 ff ff       	call   c01003df <__panic>$/;"	l
c0106e9a	obj/kernel.asm	/^c0106e9a:	a1 18 0f 1b c0       	mov    0xc01b0f18,%eax$/;"	l
c0106e9f	obj/kernel.asm	/^c0106e9f:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0106ea2	obj/kernel.asm	/^c0106ea2:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0106ea5	obj/kernel.asm	/^c0106ea5:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0106ea8	obj/kernel.asm	/^c0106ea8:	01 d0                	add    %edx,%eax$/;"	l
c0106eaa	obj/kernel.asm	/^c0106eaa:	c9                   	leave  $/;"	l
c0106eab	obj/kernel.asm	/^c0106eab:	c3                   	ret    $/;"	l
c0106eac	obj/kernel.asm	/^c0106eac <page2kva>:$/;"	l
c0106eac	obj/kernel.asm	/^c0106eac:	55                   	push   %ebp$/;"	l
c0106ead	obj/kernel.asm	/^c0106ead:	89 e5                	mov    %esp,%ebp$/;"	l
c0106eaf	obj/kernel.asm	/^c0106eaf:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106eb2	obj/kernel.asm	/^c0106eb2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106eb5	obj/kernel.asm	/^c0106eb5:	e8 a2 ff ff ff       	call   c0106e5c <page2pa>$/;"	l
c0106eba	obj/kernel.asm	/^c0106eba:	83 c4 04             	add    $0x4,%esp$/;"	l
c0106ebd	obj/kernel.asm	/^c0106ebd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106ec0	obj/kernel.asm	/^c0106ec0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106ec3	obj/kernel.asm	/^c0106ec3:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106ec6	obj/kernel.asm	/^c0106ec6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106ec9	obj/kernel.asm	/^c0106ec9:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c0106ece	obj/kernel.asm	/^c0106ece:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0106ed1	obj/kernel.asm	/^c0106ed1:	72 14                	jb     c0106ee7 <page2kva+0x3b>$/;"	l
c0106ed3	obj/kernel.asm	/^c0106ed3:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106ed6	obj/kernel.asm	/^c0106ed6:	68 68 d4 10 c0       	push   $0xc010d468$/;"	l
c0106edb	obj/kernel.asm	/^c0106edb:	6a 65                	push   $0x65$/;"	l
c0106edd	obj/kernel.asm	/^c0106edd:	68 57 d4 10 c0       	push   $0xc010d457$/;"	l
c0106ee2	obj/kernel.asm	/^c0106ee2:	e8 f8 94 ff ff       	call   c01003df <__panic>$/;"	l
c0106ee7	obj/kernel.asm	/^c0106ee7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106eea	obj/kernel.asm	/^c0106eea:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0106eef	obj/kernel.asm	/^c0106eef:	c9                   	leave  $/;"	l
c0106ef0	obj/kernel.asm	/^c0106ef0:	c3                   	ret    $/;"	l
c0106ef1	obj/kernel.asm	/^c0106ef1 <kva2page>:$/;"	l
c0106ef1	obj/kernel.asm	/^c0106ef1:	55                   	push   %ebp$/;"	l
c0106ef2	obj/kernel.asm	/^c0106ef2:	89 e5                	mov    %esp,%ebp$/;"	l
c0106ef4	obj/kernel.asm	/^c0106ef4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106ef7	obj/kernel.asm	/^c0106ef7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106efa	obj/kernel.asm	/^c0106efa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106efd	obj/kernel.asm	/^c0106efd:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0106f04	obj/kernel.asm	/^c0106f04:	77 14                	ja     c0106f1a <kva2page+0x29>$/;"	l
c0106f06	obj/kernel.asm	/^c0106f06:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106f09	obj/kernel.asm	/^c0106f09:	68 8c d4 10 c0       	push   $0xc010d48c$/;"	l
c0106f0e	obj/kernel.asm	/^c0106f0e:	6a 6a                	push   $0x6a$/;"	l
c0106f10	obj/kernel.asm	/^c0106f10:	68 57 d4 10 c0       	push   $0xc010d457$/;"	l
c0106f15	obj/kernel.asm	/^c0106f15:	e8 c5 94 ff ff       	call   c01003df <__panic>$/;"	l
c0106f1a	obj/kernel.asm	/^c0106f1a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106f1d	obj/kernel.asm	/^c0106f1d:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0106f22	obj/kernel.asm	/^c0106f22:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106f25	obj/kernel.asm	/^c0106f25:	50                   	push   %eax$/;"	l
c0106f26	obj/kernel.asm	/^c0106f26:	e8 44 ff ff ff       	call   c0106e6f <pa2page>$/;"	l
c0106f2b	obj/kernel.asm	/^c0106f2b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106f2e	obj/kernel.asm	/^c0106f2e:	c9                   	leave  $/;"	l
c0106f2f	obj/kernel.asm	/^c0106f2f:	c3                   	ret    $/;"	l
c0106f30	obj/kernel.asm	/^c0106f30 <__slob_get_free_pages>:$/;"	l
c0106f30	obj/kernel.asm	/^c0106f30:	55                   	push   %ebp$/;"	l
c0106f31	obj/kernel.asm	/^c0106f31:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f33	obj/kernel.asm	/^c0106f33:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106f36	obj/kernel.asm	/^c0106f36:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106f39	obj/kernel.asm	/^c0106f39:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0106f3e	obj/kernel.asm	/^c0106f3e:	89 c1                	mov    %eax,%ecx$/;"	l
c0106f40	obj/kernel.asm	/^c0106f40:	d3 e2                	shl    %cl,%edx$/;"	d
c0106f42	obj/kernel.asm	/^c0106f42:	89 d0                	mov    %edx,%eax$/;"	l
c0106f44	obj/kernel.asm	/^c0106f44:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106f47	obj/kernel.asm	/^c0106f47:	50                   	push   %eax$/;"	l
c0106f48	obj/kernel.asm	/^c0106f48:	e8 08 ca ff ff       	call   c0103955 <alloc_pages>$/;"	l
c0106f4d	obj/kernel.asm	/^c0106f4d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106f50	obj/kernel.asm	/^c0106f50:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106f53	obj/kernel.asm	/^c0106f53:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0106f57	obj/kernel.asm	/^c0106f57:	75 07                	jne    c0106f60 <__slob_get_free_pages+0x30>$/;"	l
c0106f59	obj/kernel.asm	/^c0106f59:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106f5e	obj/kernel.asm	/^c0106f5e:	eb 0e                	jmp    c0106f6e <__slob_get_free_pages+0x3e>$/;"	l
c0106f60	obj/kernel.asm	/^c0106f60:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106f63	obj/kernel.asm	/^c0106f63:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106f66	obj/kernel.asm	/^c0106f66:	e8 41 ff ff ff       	call   c0106eac <page2kva>$/;"	l
c0106f6b	obj/kernel.asm	/^c0106f6b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106f6e	obj/kernel.asm	/^c0106f6e:	c9                   	leave  $/;"	l
c0106f6f	obj/kernel.asm	/^c0106f6f:	c3                   	ret    $/;"	l
c0106f70	obj/kernel.asm	/^c0106f70 <__slob_free_pages>:$/;"	l
c0106f70	obj/kernel.asm	/^c0106f70:	55                   	push   %ebp$/;"	l
c0106f71	obj/kernel.asm	/^c0106f71:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f73	obj/kernel.asm	/^c0106f73:	53                   	push   %ebx$/;"	l
c0106f74	obj/kernel.asm	/^c0106f74:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106f77	obj/kernel.asm	/^c0106f77:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106f7a	obj/kernel.asm	/^c0106f7a:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0106f7f	obj/kernel.asm	/^c0106f7f:	89 c1                	mov    %eax,%ecx$/;"	l
c0106f81	obj/kernel.asm	/^c0106f81:	d3 e2                	shl    %cl,%edx$/;"	d
c0106f83	obj/kernel.asm	/^c0106f83:	89 d0                	mov    %edx,%eax$/;"	l
c0106f85	obj/kernel.asm	/^c0106f85:	89 c3                	mov    %eax,%ebx$/;"	l
c0106f87	obj/kernel.asm	/^c0106f87:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106f8a	obj/kernel.asm	/^c0106f8a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106f8d	obj/kernel.asm	/^c0106f8d:	50                   	push   %eax$/;"	l
c0106f8e	obj/kernel.asm	/^c0106f8e:	e8 5e ff ff ff       	call   c0106ef1 <kva2page>$/;"	l
c0106f93	obj/kernel.asm	/^c0106f93:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106f96	obj/kernel.asm	/^c0106f96:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106f99	obj/kernel.asm	/^c0106f99:	53                   	push   %ebx$/;"	l
c0106f9a	obj/kernel.asm	/^c0106f9a:	50                   	push   %eax$/;"	l
c0106f9b	obj/kernel.asm	/^c0106f9b:	e8 21 ca ff ff       	call   c01039c1 <free_pages>$/;"	l
c0106fa0	obj/kernel.asm	/^c0106fa0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106fa3	obj/kernel.asm	/^c0106fa3:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0106fa6	obj/kernel.asm	/^c0106fa6:	c9                   	leave  $/;"	l
c0106fa7	obj/kernel.asm	/^c0106fa7:	c3                   	ret    $/;"	l
c0106fa8	obj/kernel.asm	/^c0106fa8 <slob_alloc>:$/;"	l
c0106fa8	obj/kernel.asm	/^c0106fa8:	55                   	push   %ebp$/;"	l
c0106fa9	obj/kernel.asm	/^c0106fa9:	89 e5                	mov    %esp,%ebp$/;"	l
c0106fab	obj/kernel.asm	/^c0106fab:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0106fae	obj/kernel.asm	/^c0106fae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106fb1	obj/kernel.asm	/^c0106fb1:	83 c0 08             	add    $0x8,%eax$/;"	l
c0106fb4	obj/kernel.asm	/^c0106fb4:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c0106fb9	obj/kernel.asm	/^c0106fb9:	76 16                	jbe    c0106fd1 <slob_alloc+0x29>$/;"	l
c0106fbb	obj/kernel.asm	/^c0106fbb:	68 b0 d4 10 c0       	push   $0xc010d4b0$/;"	l
c0106fc0	obj/kernel.asm	/^c0106fc0:	68 cf d4 10 c0       	push   $0xc010d4cf$/;"	l
c0106fc5	obj/kernel.asm	/^c0106fc5:	6a 64                	push   $0x64$/;"	l
c0106fc7	obj/kernel.asm	/^c0106fc7:	68 e4 d4 10 c0       	push   $0xc010d4e4$/;"	l
c0106fcc	obj/kernel.asm	/^c0106fcc:	e8 0e 94 ff ff       	call   c01003df <__panic>$/;"	l
c0106fd1	obj/kernel.asm	/^c0106fd1:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106fd8	obj/kernel.asm	/^c0106fd8:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0106fdf	obj/kernel.asm	/^c0106fdf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106fe2	obj/kernel.asm	/^c0106fe2:	83 c0 07             	add    $0x7,%eax$/;"	l
c0106fe5	obj/kernel.asm	/^c0106fe5:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c0106fe8	obj/kernel.asm	/^c0106fe8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0106feb	obj/kernel.asm	/^c0106feb:	e8 1c fe ff ff       	call   c0106e0c <__intr_save>$/;"	l
c0106ff0	obj/kernel.asm	/^c0106ff0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106ff3	obj/kernel.asm	/^c0106ff3:	a1 a0 ca 12 c0       	mov    0xc012caa0,%eax$/;"	l
c0106ff8	obj/kernel.asm	/^c0106ff8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106ffb	obj/kernel.asm	/^c0106ffb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106ffe	obj/kernel.asm	/^c0106ffe:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107001	obj/kernel.asm	/^c0107001:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107004	obj/kernel.asm	/^c0107004:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0107008	obj/kernel.asm	/^c0107008:	74 25                	je     c010702f <slob_alloc+0x87>$/;"	l
c010700a	obj/kernel.asm	/^c010700a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010700d	obj/kernel.asm	/^c010700d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107010	obj/kernel.asm	/^c0107010:	01 d0                	add    %edx,%eax$/;"	l
c0107012	obj/kernel.asm	/^c0107012:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0107015	obj/kernel.asm	/^c0107015:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107018	obj/kernel.asm	/^c0107018:	f7 d8                	neg    %eax$/;"	l
c010701a	obj/kernel.asm	/^c010701a:	21 d0                	and    %edx,%eax$/;"	l
c010701c	obj/kernel.asm	/^c010701c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010701f	obj/kernel.asm	/^c010701f:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107022	obj/kernel.asm	/^c0107022:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107025	obj/kernel.asm	/^c0107025:	29 c2                	sub    %eax,%edx$/;"	l
c0107027	obj/kernel.asm	/^c0107027:	89 d0                	mov    %edx,%eax$/;"	l
c0107029	obj/kernel.asm	/^c0107029:	c1 f8 03             	sar    $0x3,%eax$/;"	l
c010702c	obj/kernel.asm	/^c010702c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010702f	obj/kernel.asm	/^c010702f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107032	obj/kernel.asm	/^c0107032:	8b 00                	mov    (%eax),%eax$/;"	l
c0107034	obj/kernel.asm	/^c0107034:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c0107037	obj/kernel.asm	/^c0107037:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010703a	obj/kernel.asm	/^c010703a:	01 ca                	add    %ecx,%edx$/;"	l
c010703c	obj/kernel.asm	/^c010703c:	39 d0                	cmp    %edx,%eax$/;"	l
c010703e	obj/kernel.asm	/^c010703e:	0f 8c b1 00 00 00    	jl     c01070f5 <slob_alloc+0x14d>$/;"	l
c0107044	obj/kernel.asm	/^c0107044:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0107048	obj/kernel.asm	/^c0107048:	74 38                	je     c0107082 <slob_alloc+0xda>$/;"	l
c010704a	obj/kernel.asm	/^c010704a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010704d	obj/kernel.asm	/^c010704d:	8b 00                	mov    (%eax),%eax$/;"	l
c010704f	obj/kernel.asm	/^c010704f:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
c0107052	obj/kernel.asm	/^c0107052:	89 c2                	mov    %eax,%edx$/;"	l
c0107054	obj/kernel.asm	/^c0107054:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107057	obj/kernel.asm	/^c0107057:	89 10                	mov    %edx,(%eax)$/;"	l
c0107059	obj/kernel.asm	/^c0107059:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010705c	obj/kernel.asm	/^c010705c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010705f	obj/kernel.asm	/^c010705f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107062	obj/kernel.asm	/^c0107062:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107065	obj/kernel.asm	/^c0107065:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107068	obj/kernel.asm	/^c0107068:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010706b	obj/kernel.asm	/^c010706b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010706e	obj/kernel.asm	/^c010706e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107071	obj/kernel.asm	/^c0107071:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0107074	obj/kernel.asm	/^c0107074:	89 10                	mov    %edx,(%eax)$/;"	l
c0107076	obj/kernel.asm	/^c0107076:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107079	obj/kernel.asm	/^c0107079:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010707c	obj/kernel.asm	/^c010707c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010707f	obj/kernel.asm	/^c010707f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107082	obj/kernel.asm	/^c0107082:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107085	obj/kernel.asm	/^c0107085:	8b 00                	mov    (%eax),%eax$/;"	l
c0107087	obj/kernel.asm	/^c0107087:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c010708a	obj/kernel.asm	/^c010708a:	75 0e                	jne    c010709a <slob_alloc+0xf2>$/;"	l
c010708c	obj/kernel.asm	/^c010708c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010708f	obj/kernel.asm	/^c010708f:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107092	obj/kernel.asm	/^c0107092:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107095	obj/kernel.asm	/^c0107095:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107098	obj/kernel.asm	/^c0107098:	eb 3c                	jmp    c01070d6 <slob_alloc+0x12e>$/;"	l
c010709a	obj/kernel.asm	/^c010709a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010709d	obj/kernel.asm	/^c010709d:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01070a4	obj/kernel.asm	/^c01070a4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01070a7	obj/kernel.asm	/^c01070a7:	01 c2                	add    %eax,%edx$/;"	l
c01070a9	obj/kernel.asm	/^c01070a9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01070ac	obj/kernel.asm	/^c01070ac:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01070af	obj/kernel.asm	/^c01070af:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01070b2	obj/kernel.asm	/^c01070b2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01070b5	obj/kernel.asm	/^c01070b5:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01070b8	obj/kernel.asm	/^c01070b8:	8b 12                	mov    (%edx),%edx$/;"	l
c01070ba	obj/kernel.asm	/^c01070ba:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
c01070bd	obj/kernel.asm	/^c01070bd:	89 10                	mov    %edx,(%eax)$/;"	l
c01070bf	obj/kernel.asm	/^c01070bf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01070c2	obj/kernel.asm	/^c01070c2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01070c5	obj/kernel.asm	/^c01070c5:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01070c8	obj/kernel.asm	/^c01070c8:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
c01070cb	obj/kernel.asm	/^c01070cb:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01070ce	obj/kernel.asm	/^c01070ce:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01070d1	obj/kernel.asm	/^c01070d1:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01070d4	obj/kernel.asm	/^c01070d4:	89 10                	mov    %edx,(%eax)$/;"	l
c01070d6	obj/kernel.asm	/^c01070d6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01070d9	obj/kernel.asm	/^c01070d9:	a3 a0 ca 12 c0       	mov    %eax,0xc012caa0$/;"	l
c01070de	obj/kernel.asm	/^c01070de:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01070e1	obj/kernel.asm	/^c01070e1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01070e4	obj/kernel.asm	/^c01070e4:	50                   	push   %eax$/;"	l
c01070e5	obj/kernel.asm	/^c01070e5:	e8 4c fd ff ff       	call   c0106e36 <__intr_restore>$/;"	l
c01070ea	obj/kernel.asm	/^c01070ea:	83 c4 10             	add    $0x10,%esp$/;"	l
c01070ed	obj/kernel.asm	/^c01070ed:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01070f0	obj/kernel.asm	/^c01070f0:	e9 80 00 00 00       	jmp    c0107175 <slob_alloc+0x1cd>$/;"	l
c01070f5	obj/kernel.asm	/^c01070f5:	a1 a0 ca 12 c0       	mov    0xc012caa0,%eax$/;"	l
c01070fa	obj/kernel.asm	/^c01070fa:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c01070fd	obj/kernel.asm	/^c01070fd:	75 62                	jne    c0107161 <slob_alloc+0x1b9>$/;"	l
c01070ff	obj/kernel.asm	/^c01070ff:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107102	obj/kernel.asm	/^c0107102:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107105	obj/kernel.asm	/^c0107105:	50                   	push   %eax$/;"	l
c0107106	obj/kernel.asm	/^c0107106:	e8 2b fd ff ff       	call   c0106e36 <__intr_restore>$/;"	l
c010710b	obj/kernel.asm	/^c010710b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010710e	obj/kernel.asm	/^c010710e:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c0107115	obj/kernel.asm	/^c0107115:	75 07                	jne    c010711e <slob_alloc+0x176>$/;"	l
c0107117	obj/kernel.asm	/^c0107117:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010711c	obj/kernel.asm	/^c010711c:	eb 57                	jmp    c0107175 <slob_alloc+0x1cd>$/;"	l
c010711e	obj/kernel.asm	/^c010711e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107121	obj/kernel.asm	/^c0107121:	6a 00                	push   $0x0$/;"	l
c0107123	obj/kernel.asm	/^c0107123:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0107126	obj/kernel.asm	/^c0107126:	e8 05 fe ff ff       	call   c0106f30 <__slob_get_free_pages>$/;"	l
c010712b	obj/kernel.asm	/^c010712b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010712e	obj/kernel.asm	/^c010712e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107131	obj/kernel.asm	/^c0107131:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0107135	obj/kernel.asm	/^c0107135:	75 07                	jne    c010713e <slob_alloc+0x196>$/;"	l
c0107137	obj/kernel.asm	/^c0107137:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010713c	obj/kernel.asm	/^c010713c:	eb 37                	jmp    c0107175 <slob_alloc+0x1cd>$/;"	l
c010713e	obj/kernel.asm	/^c010713e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107141	obj/kernel.asm	/^c0107141:	68 00 10 00 00       	push   $0x1000$/;"	l
c0107146	obj/kernel.asm	/^c0107146:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0107149	obj/kernel.asm	/^c0107149:	e8 29 00 00 00       	call   c0107177 <slob_free>$/;"	l
c010714e	obj/kernel.asm	/^c010714e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107151	obj/kernel.asm	/^c0107151:	e8 b6 fc ff ff       	call   c0106e0c <__intr_save>$/;"	l
c0107156	obj/kernel.asm	/^c0107156:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107159	obj/kernel.asm	/^c0107159:	a1 a0 ca 12 c0       	mov    0xc012caa0,%eax$/;"	l
c010715e	obj/kernel.asm	/^c010715e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107161	obj/kernel.asm	/^c0107161:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107164	obj/kernel.asm	/^c0107164:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107167	obj/kernel.asm	/^c0107167:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010716a	obj/kernel.asm	/^c010716a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010716d	obj/kernel.asm	/^c010716d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107170	obj/kernel.asm	/^c0107170:	e9 8f fe ff ff       	jmp    c0107004 <slob_alloc+0x5c>$/;"	l
c0107175	obj/kernel.asm	/^c0107175:	c9                   	leave  $/;"	l
c0107176	obj/kernel.asm	/^c0107176:	c3                   	ret    $/;"	l
c0107177	obj/kernel.asm	/^c0107177 <slob_free>:$/;"	l
c0107177	obj/kernel.asm	/^c0107177:	55                   	push   %ebp$/;"	l
c0107178	obj/kernel.asm	/^c0107178:	89 e5                	mov    %esp,%ebp$/;"	l
c010717a	obj/kernel.asm	/^c010717a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010717d	obj/kernel.asm	/^c010717d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107180	obj/kernel.asm	/^c0107180:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107183	obj/kernel.asm	/^c0107183:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0107187	obj/kernel.asm	/^c0107187:	75 05                	jne    c010718e <slob_free+0x17>$/;"	l
c0107189	obj/kernel.asm	/^c0107189:	e9 03 01 00 00       	jmp    c0107291 <slob_free+0x11a>$/;"	l
c010718e	obj/kernel.asm	/^c010718e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0107192	obj/kernel.asm	/^c0107192:	74 10                	je     c01071a4 <slob_free+0x2d>$/;"	l
c0107194	obj/kernel.asm	/^c0107194:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107197	obj/kernel.asm	/^c0107197:	83 c0 07             	add    $0x7,%eax$/;"	l
c010719a	obj/kernel.asm	/^c010719a:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c010719d	obj/kernel.asm	/^c010719d:	89 c2                	mov    %eax,%edx$/;"	l
c010719f	obj/kernel.asm	/^c010719f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071a2	obj/kernel.asm	/^c01071a2:	89 10                	mov    %edx,(%eax)$/;"	l
c01071a4	obj/kernel.asm	/^c01071a4:	e8 63 fc ff ff       	call   c0106e0c <__intr_save>$/;"	l
c01071a9	obj/kernel.asm	/^c01071a9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01071ac	obj/kernel.asm	/^c01071ac:	a1 a0 ca 12 c0       	mov    0xc012caa0,%eax$/;"	l
c01071b1	obj/kernel.asm	/^c01071b1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01071b4	obj/kernel.asm	/^c01071b4:	eb 27                	jmp    c01071dd <slob_free+0x66>$/;"	l
c01071b6	obj/kernel.asm	/^c01071b6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071b9	obj/kernel.asm	/^c01071b9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01071bc	obj/kernel.asm	/^c01071bc:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01071bf	obj/kernel.asm	/^c01071bf:	77 13                	ja     c01071d4 <slob_free+0x5d>$/;"	l
c01071c1	obj/kernel.asm	/^c01071c1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071c4	obj/kernel.asm	/^c01071c4:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01071c7	obj/kernel.asm	/^c01071c7:	77 27                	ja     c01071f0 <slob_free+0x79>$/;"	l
c01071c9	obj/kernel.asm	/^c01071c9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071cc	obj/kernel.asm	/^c01071cc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01071cf	obj/kernel.asm	/^c01071cf:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01071d2	obj/kernel.asm	/^c01071d2:	77 1c                	ja     c01071f0 <slob_free+0x79>$/;"	l
c01071d4	obj/kernel.asm	/^c01071d4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071d7	obj/kernel.asm	/^c01071d7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01071da	obj/kernel.asm	/^c01071da:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01071dd	obj/kernel.asm	/^c01071dd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071e0	obj/kernel.asm	/^c01071e0:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01071e3	obj/kernel.asm	/^c01071e3:	76 d1                	jbe    c01071b6 <slob_free+0x3f>$/;"	l
c01071e5	obj/kernel.asm	/^c01071e5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071e8	obj/kernel.asm	/^c01071e8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01071eb	obj/kernel.asm	/^c01071eb:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01071ee	obj/kernel.asm	/^c01071ee:	76 c6                	jbe    c01071b6 <slob_free+0x3f>$/;"	l
c01071f0	obj/kernel.asm	/^c01071f0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071f3	obj/kernel.asm	/^c01071f3:	8b 00                	mov    (%eax),%eax$/;"	l
c01071f5	obj/kernel.asm	/^c01071f5:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01071fc	obj/kernel.asm	/^c01071fc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071ff	obj/kernel.asm	/^c01071ff:	01 c2                	add    %eax,%edx$/;"	l
c0107201	obj/kernel.asm	/^c0107201:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107204	obj/kernel.asm	/^c0107204:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107207	obj/kernel.asm	/^c0107207:	39 c2                	cmp    %eax,%edx$/;"	l
c0107209	obj/kernel.asm	/^c0107209:	75 25                	jne    c0107230 <slob_free+0xb9>$/;"	l
c010720b	obj/kernel.asm	/^c010720b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010720e	obj/kernel.asm	/^c010720e:	8b 10                	mov    (%eax),%edx$/;"	l
c0107210	obj/kernel.asm	/^c0107210:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107213	obj/kernel.asm	/^c0107213:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107216	obj/kernel.asm	/^c0107216:	8b 00                	mov    (%eax),%eax$/;"	l
c0107218	obj/kernel.asm	/^c0107218:	01 c2                	add    %eax,%edx$/;"	l
c010721a	obj/kernel.asm	/^c010721a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010721d	obj/kernel.asm	/^c010721d:	89 10                	mov    %edx,(%eax)$/;"	l
c010721f	obj/kernel.asm	/^c010721f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107222	obj/kernel.asm	/^c0107222:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107225	obj/kernel.asm	/^c0107225:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107228	obj/kernel.asm	/^c0107228:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010722b	obj/kernel.asm	/^c010722b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010722e	obj/kernel.asm	/^c010722e:	eb 0c                	jmp    c010723c <slob_free+0xc5>$/;"	l
c0107230	obj/kernel.asm	/^c0107230:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107233	obj/kernel.asm	/^c0107233:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107236	obj/kernel.asm	/^c0107236:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107239	obj/kernel.asm	/^c0107239:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010723c	obj/kernel.asm	/^c010723c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010723f	obj/kernel.asm	/^c010723f:	8b 00                	mov    (%eax),%eax$/;"	l
c0107241	obj/kernel.asm	/^c0107241:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0107248	obj/kernel.asm	/^c0107248:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010724b	obj/kernel.asm	/^c010724b:	01 d0                	add    %edx,%eax$/;"	l
c010724d	obj/kernel.asm	/^c010724d:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0107250	obj/kernel.asm	/^c0107250:	75 1f                	jne    c0107271 <slob_free+0xfa>$/;"	l
c0107252	obj/kernel.asm	/^c0107252:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107255	obj/kernel.asm	/^c0107255:	8b 10                	mov    (%eax),%edx$/;"	l
c0107257	obj/kernel.asm	/^c0107257:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010725a	obj/kernel.asm	/^c010725a:	8b 00                	mov    (%eax),%eax$/;"	l
c010725c	obj/kernel.asm	/^c010725c:	01 c2                	add    %eax,%edx$/;"	l
c010725e	obj/kernel.asm	/^c010725e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107261	obj/kernel.asm	/^c0107261:	89 10                	mov    %edx,(%eax)$/;"	l
c0107263	obj/kernel.asm	/^c0107263:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107266	obj/kernel.asm	/^c0107266:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107269	obj/kernel.asm	/^c0107269:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010726c	obj/kernel.asm	/^c010726c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010726f	obj/kernel.asm	/^c010726f:	eb 09                	jmp    c010727a <slob_free+0x103>$/;"	l
c0107271	obj/kernel.asm	/^c0107271:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107274	obj/kernel.asm	/^c0107274:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0107277	obj/kernel.asm	/^c0107277:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010727a	obj/kernel.asm	/^c010727a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010727d	obj/kernel.asm	/^c010727d:	a3 a0 ca 12 c0       	mov    %eax,0xc012caa0$/;"	l
c0107282	obj/kernel.asm	/^c0107282:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107285	obj/kernel.asm	/^c0107285:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107288	obj/kernel.asm	/^c0107288:	50                   	push   %eax$/;"	l
c0107289	obj/kernel.asm	/^c0107289:	e8 a8 fb ff ff       	call   c0106e36 <__intr_restore>$/;"	l
c010728e	obj/kernel.asm	/^c010728e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107291	obj/kernel.asm	/^c0107291:	c9                   	leave  $/;"	l
c0107292	obj/kernel.asm	/^c0107292:	c3                   	ret    $/;"	l
c0107293	obj/kernel.asm	/^c0107293 <slob_init>:$/;"	l
c0107293	obj/kernel.asm	/^c0107293:	55                   	push   %ebp$/;"	l
c0107294	obj/kernel.asm	/^c0107294:	89 e5                	mov    %esp,%ebp$/;"	l
c0107296	obj/kernel.asm	/^c0107296:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107299	obj/kernel.asm	/^c0107299:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010729c	obj/kernel.asm	/^c010729c:	68 f6 d4 10 c0       	push   $0xc010d4f6$/;"	l
c01072a1	obj/kernel.asm	/^c01072a1:	e8 d4 8f ff ff       	call   c010027a <cprintf>$/;"	l
c01072a6	obj/kernel.asm	/^c01072a6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01072a9	obj/kernel.asm	/^c01072a9:	c9                   	leave  $/;"	l
c01072aa	obj/kernel.asm	/^c01072aa:	c3                   	ret    $/;"	l
c01072ab	obj/kernel.asm	/^c01072ab <kmalloc_init>:$/;"	l
c01072ab	obj/kernel.asm	/^c01072ab:	55                   	push   %ebp$/;"	l
c01072ac	obj/kernel.asm	/^c01072ac:	89 e5                	mov    %esp,%ebp$/;"	l
c01072ae	obj/kernel.asm	/^c01072ae:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01072b1	obj/kernel.asm	/^c01072b1:	e8 dd ff ff ff       	call   c0107293 <slob_init>$/;"	l
c01072b6	obj/kernel.asm	/^c01072b6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01072b9	obj/kernel.asm	/^c01072b9:	68 0a d5 10 c0       	push   $0xc010d50a$/;"	l
c01072be	obj/kernel.asm	/^c01072be:	e8 b7 8f ff ff       	call   c010027a <cprintf>$/;"	l
c01072c3	obj/kernel.asm	/^c01072c3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01072c6	obj/kernel.asm	/^c01072c6:	c9                   	leave  $/;"	l
c01072c7	obj/kernel.asm	/^c01072c7:	c3                   	ret    $/;"	l
c01072c8	obj/kernel.asm	/^c01072c8 <slob_allocated>:$/;"	l
c01072c8	obj/kernel.asm	/^c01072c8:	55                   	push   %ebp$/;"	l
c01072c9	obj/kernel.asm	/^c01072c9:	89 e5                	mov    %esp,%ebp$/;"	l
c01072cb	obj/kernel.asm	/^c01072cb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01072d0	obj/kernel.asm	/^c01072d0:	5d                   	pop    %ebp$/;"	l
c01072d1	obj/kernel.asm	/^c01072d1:	c3                   	ret    $/;"	l
c01072d2	obj/kernel.asm	/^c01072d2 <kallocated>:$/;"	l
c01072d2	obj/kernel.asm	/^c01072d2:	55                   	push   %ebp$/;"	l
c01072d3	obj/kernel.asm	/^c01072d3:	89 e5                	mov    %esp,%ebp$/;"	l
c01072d5	obj/kernel.asm	/^c01072d5:	e8 ee ff ff ff       	call   c01072c8 <slob_allocated>$/;"	l
c01072da	obj/kernel.asm	/^c01072da:	5d                   	pop    %ebp$/;"	l
c01072db	obj/kernel.asm	/^c01072db:	c3                   	ret    $/;"	l
c01072dc	obj/kernel.asm	/^c01072dc <find_order>:$/;"	l
c01072dc	obj/kernel.asm	/^c01072dc:	55                   	push   %ebp$/;"	l
c01072dd	obj/kernel.asm	/^c01072dd:	89 e5                	mov    %esp,%ebp$/;"	l
c01072df	obj/kernel.asm	/^c01072df:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01072e2	obj/kernel.asm	/^c01072e2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01072e9	obj/kernel.asm	/^c01072e9:	eb 07                	jmp    c01072f2 <find_order+0x16>$/;"	l
c01072eb	obj/kernel.asm	/^c01072eb:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01072ef	obj/kernel.asm	/^c01072ef:	d1 7d 08             	sarl   0x8(%ebp)$/;"	d
c01072f2	obj/kernel.asm	/^c01072f2:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c01072f9	obj/kernel.asm	/^c01072f9:	7f f0                	jg     c01072eb <find_order+0xf>$/;"	l
c01072fb	obj/kernel.asm	/^c01072fb:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01072fe	obj/kernel.asm	/^c01072fe:	c9                   	leave  $/;"	l
c01072ff	obj/kernel.asm	/^c01072ff:	c3                   	ret    $/;"	l
c0107300	obj/kernel.asm	/^c0107300 <__kmalloc>:$/;"	l
c0107300	obj/kernel.asm	/^c0107300:	55                   	push   %ebp$/;"	l
c0107301	obj/kernel.asm	/^c0107301:	89 e5                	mov    %esp,%ebp$/;"	l
c0107303	obj/kernel.asm	/^c0107303:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107306	obj/kernel.asm	/^c0107306:	81 7d 08 f7 0f 00 00 	cmpl   $0xff7,0x8(%ebp)$/;"	l
c010730d	obj/kernel.asm	/^c010730d:	77 35                	ja     c0107344 <__kmalloc+0x44>$/;"	l
c010730f	obj/kernel.asm	/^c010730f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107312	obj/kernel.asm	/^c0107312:	83 c0 08             	add    $0x8,%eax$/;"	l
c0107315	obj/kernel.asm	/^c0107315:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0107318	obj/kernel.asm	/^c0107318:	6a 00                	push   $0x0$/;"	l
c010731a	obj/kernel.asm	/^c010731a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010731d	obj/kernel.asm	/^c010731d:	50                   	push   %eax$/;"	l
c010731e	obj/kernel.asm	/^c010731e:	e8 85 fc ff ff       	call   c0106fa8 <slob_alloc>$/;"	l
c0107323	obj/kernel.asm	/^c0107323:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107326	obj/kernel.asm	/^c0107326:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107329	obj/kernel.asm	/^c0107329:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010732d	obj/kernel.asm	/^c010732d:	74 0b                	je     c010733a <__kmalloc+0x3a>$/;"	l
c010732f	obj/kernel.asm	/^c010732f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107332	obj/kernel.asm	/^c0107332:	83 c0 08             	add    $0x8,%eax$/;"	l
c0107335	obj/kernel.asm	/^c0107335:	e9 b3 00 00 00       	jmp    c01073ed <__kmalloc+0xed>$/;"	l
c010733a	obj/kernel.asm	/^c010733a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010733f	obj/kernel.asm	/^c010733f:	e9 a9 00 00 00       	jmp    c01073ed <__kmalloc+0xed>$/;"	l
c0107344	obj/kernel.asm	/^c0107344:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0107347	obj/kernel.asm	/^c0107347:	6a 00                	push   $0x0$/;"	l
c0107349	obj/kernel.asm	/^c0107349:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010734c	obj/kernel.asm	/^c010734c:	6a 0c                	push   $0xc$/;"	l
c010734e	obj/kernel.asm	/^c010734e:	e8 55 fc ff ff       	call   c0106fa8 <slob_alloc>$/;"	l
c0107353	obj/kernel.asm	/^c0107353:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107356	obj/kernel.asm	/^c0107356:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107359	obj/kernel.asm	/^c0107359:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010735d	obj/kernel.asm	/^c010735d:	75 0a                	jne    c0107369 <__kmalloc+0x69>$/;"	l
c010735f	obj/kernel.asm	/^c010735f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107364	obj/kernel.asm	/^c0107364:	e9 84 00 00 00       	jmp    c01073ed <__kmalloc+0xed>$/;"	l
c0107369	obj/kernel.asm	/^c0107369:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010736c	obj/kernel.asm	/^c010736c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010736f	obj/kernel.asm	/^c010736f:	50                   	push   %eax$/;"	l
c0107370	obj/kernel.asm	/^c0107370:	e8 67 ff ff ff       	call   c01072dc <find_order>$/;"	l
c0107375	obj/kernel.asm	/^c0107375:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107378	obj/kernel.asm	/^c0107378:	89 c2                	mov    %eax,%edx$/;"	l
c010737a	obj/kernel.asm	/^c010737a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010737d	obj/kernel.asm	/^c010737d:	89 10                	mov    %edx,(%eax)$/;"	l
c010737f	obj/kernel.asm	/^c010737f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107382	obj/kernel.asm	/^c0107382:	8b 00                	mov    (%eax),%eax$/;"	l
c0107384	obj/kernel.asm	/^c0107384:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107387	obj/kernel.asm	/^c0107387:	50                   	push   %eax$/;"	l
c0107388	obj/kernel.asm	/^c0107388:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010738b	obj/kernel.asm	/^c010738b:	e8 a0 fb ff ff       	call   c0106f30 <__slob_get_free_pages>$/;"	l
c0107390	obj/kernel.asm	/^c0107390:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107393	obj/kernel.asm	/^c0107393:	89 c2                	mov    %eax,%edx$/;"	l
c0107395	obj/kernel.asm	/^c0107395:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107398	obj/kernel.asm	/^c0107398:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010739b	obj/kernel.asm	/^c010739b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010739e	obj/kernel.asm	/^c010739e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01073a1	obj/kernel.asm	/^c01073a1:	85 c0                	test   %eax,%eax$/;"	l
c01073a3	obj/kernel.asm	/^c01073a3:	74 33                	je     c01073d8 <__kmalloc+0xd8>$/;"	l
c01073a5	obj/kernel.asm	/^c01073a5:	e8 62 fa ff ff       	call   c0106e0c <__intr_save>$/;"	l
c01073aa	obj/kernel.asm	/^c01073aa:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01073ad	obj/kernel.asm	/^c01073ad:	8b 15 3c ee 1a c0    	mov    0xc01aee3c,%edx$/;"	l
c01073b3	obj/kernel.asm	/^c01073b3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01073b6	obj/kernel.asm	/^c01073b6:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01073b9	obj/kernel.asm	/^c01073b9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01073bc	obj/kernel.asm	/^c01073bc:	a3 3c ee 1a c0       	mov    %eax,0xc01aee3c$/;"	l
c01073c1	obj/kernel.asm	/^c01073c1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01073c4	obj/kernel.asm	/^c01073c4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01073c7	obj/kernel.asm	/^c01073c7:	50                   	push   %eax$/;"	l
c01073c8	obj/kernel.asm	/^c01073c8:	e8 69 fa ff ff       	call   c0106e36 <__intr_restore>$/;"	l
c01073cd	obj/kernel.asm	/^c01073cd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01073d0	obj/kernel.asm	/^c01073d0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01073d3	obj/kernel.asm	/^c01073d3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01073d6	obj/kernel.asm	/^c01073d6:	eb 15                	jmp    c01073ed <__kmalloc+0xed>$/;"	l
c01073d8	obj/kernel.asm	/^c01073d8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01073db	obj/kernel.asm	/^c01073db:	6a 0c                	push   $0xc$/;"	l
c01073dd	obj/kernel.asm	/^c01073dd:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01073e0	obj/kernel.asm	/^c01073e0:	e8 92 fd ff ff       	call   c0107177 <slob_free>$/;"	l
c01073e5	obj/kernel.asm	/^c01073e5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01073e8	obj/kernel.asm	/^c01073e8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01073ed	obj/kernel.asm	/^c01073ed:	c9                   	leave  $/;"	l
c01073ee	obj/kernel.asm	/^c01073ee:	c3                   	ret    $/;"	l
c01073ef	obj/kernel.asm	/^c01073ef <kmalloc>:$/;"	l
c01073ef	obj/kernel.asm	/^c01073ef:	55                   	push   %ebp$/;"	l
c01073f0	obj/kernel.asm	/^c01073f0:	89 e5                	mov    %esp,%ebp$/;"	l
c01073f2	obj/kernel.asm	/^c01073f2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01073f5	obj/kernel.asm	/^c01073f5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01073f8	obj/kernel.asm	/^c01073f8:	6a 00                	push   $0x0$/;"	l
c01073fa	obj/kernel.asm	/^c01073fa:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01073fd	obj/kernel.asm	/^c01073fd:	e8 fe fe ff ff       	call   c0107300 <__kmalloc>$/;"	l
c0107402	obj/kernel.asm	/^c0107402:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107405	obj/kernel.asm	/^c0107405:	c9                   	leave  $/;"	l
c0107406	obj/kernel.asm	/^c0107406:	c3                   	ret    $/;"	l
c0107407	obj/kernel.asm	/^c0107407 <kfree>:$/;"	l
c0107407	obj/kernel.asm	/^c0107407:	55                   	push   %ebp$/;"	l
c0107408	obj/kernel.asm	/^c0107408:	89 e5                	mov    %esp,%ebp$/;"	l
c010740a	obj/kernel.asm	/^c010740a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010740d	obj/kernel.asm	/^c010740d:	c7 45 f0 3c ee 1a c0 	movl   $0xc01aee3c,-0x10(%ebp)$/;"	l
c0107414	obj/kernel.asm	/^c0107414:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0107418	obj/kernel.asm	/^c0107418:	75 05                	jne    c010741f <kfree+0x18>$/;"	l
c010741a	obj/kernel.asm	/^c010741a:	e9 aa 00 00 00       	jmp    c01074c9 <kfree+0xc2>$/;"	l
c010741f	obj/kernel.asm	/^c010741f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107422	obj/kernel.asm	/^c0107422:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0107427	obj/kernel.asm	/^c0107427:	85 c0                	test   %eax,%eax$/;"	l
c0107429	obj/kernel.asm	/^c0107429:	0f 85 85 00 00 00    	jne    c01074b4 <kfree+0xad>$/;"	l
c010742f	obj/kernel.asm	/^c010742f:	e8 d8 f9 ff ff       	call   c0106e0c <__intr_save>$/;"	l
c0107434	obj/kernel.asm	/^c0107434:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107437	obj/kernel.asm	/^c0107437:	a1 3c ee 1a c0       	mov    0xc01aee3c,%eax$/;"	l
c010743c	obj/kernel.asm	/^c010743c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010743f	obj/kernel.asm	/^c010743f:	eb 5e                	jmp    c010749f <kfree+0x98>$/;"	l
c0107441	obj/kernel.asm	/^c0107441:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107444	obj/kernel.asm	/^c0107444:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107447	obj/kernel.asm	/^c0107447:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010744a	obj/kernel.asm	/^c010744a:	75 41                	jne    c010748d <kfree+0x86>$/;"	l
c010744c	obj/kernel.asm	/^c010744c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010744f	obj/kernel.asm	/^c010744f:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107452	obj/kernel.asm	/^c0107452:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107455	obj/kernel.asm	/^c0107455:	89 10                	mov    %edx,(%eax)$/;"	l
c0107457	obj/kernel.asm	/^c0107457:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010745a	obj/kernel.asm	/^c010745a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010745d	obj/kernel.asm	/^c010745d:	50                   	push   %eax$/;"	l
c010745e	obj/kernel.asm	/^c010745e:	e8 d3 f9 ff ff       	call   c0106e36 <__intr_restore>$/;"	l
c0107463	obj/kernel.asm	/^c0107463:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107466	obj/kernel.asm	/^c0107466:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107469	obj/kernel.asm	/^c0107469:	8b 10                	mov    (%eax),%edx$/;"	l
c010746b	obj/kernel.asm	/^c010746b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010746e	obj/kernel.asm	/^c010746e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107471	obj/kernel.asm	/^c0107471:	52                   	push   %edx$/;"	l
c0107472	obj/kernel.asm	/^c0107472:	50                   	push   %eax$/;"	l
c0107473	obj/kernel.asm	/^c0107473:	e8 f8 fa ff ff       	call   c0106f70 <__slob_free_pages>$/;"	l
c0107478	obj/kernel.asm	/^c0107478:	83 c4 10             	add    $0x10,%esp$/;"	l
c010747b	obj/kernel.asm	/^c010747b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010747e	obj/kernel.asm	/^c010747e:	6a 0c                	push   $0xc$/;"	l
c0107480	obj/kernel.asm	/^c0107480:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0107483	obj/kernel.asm	/^c0107483:	e8 ef fc ff ff       	call   c0107177 <slob_free>$/;"	l
c0107488	obj/kernel.asm	/^c0107488:	83 c4 10             	add    $0x10,%esp$/;"	l
c010748b	obj/kernel.asm	/^c010748b:	eb 3c                	jmp    c01074c9 <kfree+0xc2>$/;"	l
c010748d	obj/kernel.asm	/^c010748d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107490	obj/kernel.asm	/^c0107490:	83 c0 08             	add    $0x8,%eax$/;"	l
c0107493	obj/kernel.asm	/^c0107493:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107496	obj/kernel.asm	/^c0107496:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107499	obj/kernel.asm	/^c0107499:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010749c	obj/kernel.asm	/^c010749c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010749f	obj/kernel.asm	/^c010749f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01074a3	obj/kernel.asm	/^c01074a3:	75 9c                	jne    c0107441 <kfree+0x3a>$/;"	l
c01074a5	obj/kernel.asm	/^c01074a5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01074a8	obj/kernel.asm	/^c01074a8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01074ab	obj/kernel.asm	/^c01074ab:	50                   	push   %eax$/;"	l
c01074ac	obj/kernel.asm	/^c01074ac:	e8 85 f9 ff ff       	call   c0106e36 <__intr_restore>$/;"	l
c01074b1	obj/kernel.asm	/^c01074b1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01074b4	obj/kernel.asm	/^c01074b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01074b7	obj/kernel.asm	/^c01074b7:	83 e8 08             	sub    $0x8,%eax$/;"	l
c01074ba	obj/kernel.asm	/^c01074ba:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01074bd	obj/kernel.asm	/^c01074bd:	6a 00                	push   $0x0$/;"	l
c01074bf	obj/kernel.asm	/^c01074bf:	50                   	push   %eax$/;"	l
c01074c0	obj/kernel.asm	/^c01074c0:	e8 b2 fc ff ff       	call   c0107177 <slob_free>$/;"	l
c01074c5	obj/kernel.asm	/^c01074c5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01074c8	obj/kernel.asm	/^c01074c8:	90                   	nop$/;"	l
c01074c9	obj/kernel.asm	/^c01074c9:	c9                   	leave  $/;"	l
c01074ca	obj/kernel.asm	/^c01074ca:	c3                   	ret    $/;"	l
c01074cb	obj/kernel.asm	/^c01074cb <ksize>:$/;"	l
c01074cb	obj/kernel.asm	/^c01074cb:	55                   	push   %ebp$/;"	l
c01074cc	obj/kernel.asm	/^c01074cc:	89 e5                	mov    %esp,%ebp$/;"	l
c01074ce	obj/kernel.asm	/^c01074ce:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01074d1	obj/kernel.asm	/^c01074d1:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01074d5	obj/kernel.asm	/^c01074d5:	75 07                	jne    c01074de <ksize+0x13>$/;"	l
c01074d7	obj/kernel.asm	/^c01074d7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01074dc	obj/kernel.asm	/^c01074dc:	eb 73                	jmp    c0107551 <ksize+0x86>$/;"	l
c01074de	obj/kernel.asm	/^c01074de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01074e1	obj/kernel.asm	/^c01074e1:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01074e6	obj/kernel.asm	/^c01074e6:	85 c0                	test   %eax,%eax$/;"	l
c01074e8	obj/kernel.asm	/^c01074e8:	75 5c                	jne    c0107546 <ksize+0x7b>$/;"	l
c01074ea	obj/kernel.asm	/^c01074ea:	e8 1d f9 ff ff       	call   c0106e0c <__intr_save>$/;"	l
c01074ef	obj/kernel.asm	/^c01074ef:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01074f2	obj/kernel.asm	/^c01074f2:	a1 3c ee 1a c0       	mov    0xc01aee3c,%eax$/;"	l
c01074f7	obj/kernel.asm	/^c01074f7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01074fa	obj/kernel.asm	/^c01074fa:	eb 35                	jmp    c0107531 <ksize+0x66>$/;"	l
c01074fc	obj/kernel.asm	/^c01074fc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01074ff	obj/kernel.asm	/^c01074ff:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107502	obj/kernel.asm	/^c0107502:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107505	obj/kernel.asm	/^c0107505:	75 21                	jne    c0107528 <ksize+0x5d>$/;"	l
c0107507	obj/kernel.asm	/^c0107507:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010750a	obj/kernel.asm	/^c010750a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010750d	obj/kernel.asm	/^c010750d:	50                   	push   %eax$/;"	l
c010750e	obj/kernel.asm	/^c010750e:	e8 23 f9 ff ff       	call   c0106e36 <__intr_restore>$/;"	l
c0107513	obj/kernel.asm	/^c0107513:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107516	obj/kernel.asm	/^c0107516:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107519	obj/kernel.asm	/^c0107519:	8b 00                	mov    (%eax),%eax$/;"	l
c010751b	obj/kernel.asm	/^c010751b:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
c0107520	obj/kernel.asm	/^c0107520:	89 c1                	mov    %eax,%ecx$/;"	l
c0107522	obj/kernel.asm	/^c0107522:	d3 e2                	shl    %cl,%edx$/;"	d
c0107524	obj/kernel.asm	/^c0107524:	89 d0                	mov    %edx,%eax$/;"	l
c0107526	obj/kernel.asm	/^c0107526:	eb 29                	jmp    c0107551 <ksize+0x86>$/;"	l
c0107528	obj/kernel.asm	/^c0107528:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010752b	obj/kernel.asm	/^c010752b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010752e	obj/kernel.asm	/^c010752e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107531	obj/kernel.asm	/^c0107531:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107535	obj/kernel.asm	/^c0107535:	75 c5                	jne    c01074fc <ksize+0x31>$/;"	l
c0107537	obj/kernel.asm	/^c0107537:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010753a	obj/kernel.asm	/^c010753a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010753d	obj/kernel.asm	/^c010753d:	50                   	push   %eax$/;"	l
c010753e	obj/kernel.asm	/^c010753e:	e8 f3 f8 ff ff       	call   c0106e36 <__intr_restore>$/;"	l
c0107543	obj/kernel.asm	/^c0107543:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107546	obj/kernel.asm	/^c0107546:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107549	obj/kernel.asm	/^c0107549:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010754c	obj/kernel.asm	/^c010754c:	8b 00                	mov    (%eax),%eax$/;"	l
c010754e	obj/kernel.asm	/^c010754e:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0107551	obj/kernel.asm	/^c0107551:	c9                   	leave  $/;"	l
c0107552	obj/kernel.asm	/^c0107552:	c3                   	ret    $/;"	l
c0107553	obj/kernel.asm	/^c0107553 <_fifo_init_mm>:$/;"	l
c0107553	obj/kernel.asm	/^c0107553:	55                   	push   %ebp$/;"	l
c0107554	obj/kernel.asm	/^c0107554:	89 e5                	mov    %esp,%ebp$/;"	l
c0107556	obj/kernel.asm	/^c0107556:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0107559	obj/kernel.asm	/^c0107559:	c7 45 fc e4 0f 1b c0 	movl   $0xc01b0fe4,-0x4(%ebp)$/;"	l
c0107560	obj/kernel.asm	/^c0107560:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107563	obj/kernel.asm	/^c0107563:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0107566	obj/kernel.asm	/^c0107566:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107569	obj/kernel.asm	/^c0107569:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010756c	obj/kernel.asm	/^c010756c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010756f	obj/kernel.asm	/^c010756f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107572	obj/kernel.asm	/^c0107572:	89 10                	mov    %edx,(%eax)$/;"	l
c0107574	obj/kernel.asm	/^c0107574:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107577	obj/kernel.asm	/^c0107577:	c7 40 14 e4 0f 1b c0 	movl   $0xc01b0fe4,0x14(%eax)$/;"	l
c010757e	obj/kernel.asm	/^c010757e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107583	obj/kernel.asm	/^c0107583:	c9                   	leave  $/;"	l
c0107584	obj/kernel.asm	/^c0107584:	c3                   	ret    $/;"	l
c0107585	obj/kernel.asm	/^c0107585 <_fifo_map_swappable>:$/;"	l
c0107585	obj/kernel.asm	/^c0107585:	55                   	push   %ebp$/;"	l
c0107586	obj/kernel.asm	/^c0107586:	89 e5                	mov    %esp,%ebp$/;"	l
c0107588	obj/kernel.asm	/^c0107588:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010758b	obj/kernel.asm	/^c010758b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010758e	obj/kernel.asm	/^c010758e:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0107591	obj/kernel.asm	/^c0107591:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107594	obj/kernel.asm	/^c0107594:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107597	obj/kernel.asm	/^c0107597:	83 c0 14             	add    $0x14,%eax$/;"	l
c010759a	obj/kernel.asm	/^c010759a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010759d	obj/kernel.asm	/^c010759d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01075a1	obj/kernel.asm	/^c01075a1:	74 06                	je     c01075a9 <_fifo_map_swappable+0x24>$/;"	l
c01075a3	obj/kernel.asm	/^c01075a3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01075a7	obj/kernel.asm	/^c01075a7:	75 16                	jne    c01075bf <_fifo_map_swappable+0x3a>$/;"	l
c01075a9	obj/kernel.asm	/^c01075a9:	68 28 d5 10 c0       	push   $0xc010d528$/;"	l
c01075ae	obj/kernel.asm	/^c01075ae:	68 46 d5 10 c0       	push   $0xc010d546$/;"	l
c01075b3	obj/kernel.asm	/^c01075b3:	6a 32                	push   $0x32$/;"	l
c01075b5	obj/kernel.asm	/^c01075b5:	68 5b d5 10 c0       	push   $0xc010d55b$/;"	l
c01075ba	obj/kernel.asm	/^c01075ba:	e8 20 8e ff ff       	call   c01003df <__panic>$/;"	l
c01075bf	obj/kernel.asm	/^c01075bf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01075c2	obj/kernel.asm	/^c01075c2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01075c5	obj/kernel.asm	/^c01075c5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01075c8	obj/kernel.asm	/^c01075c8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01075cb	obj/kernel.asm	/^c01075cb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01075ce	obj/kernel.asm	/^c01075ce:	8b 00                	mov    (%eax),%eax$/;"	l
c01075d0	obj/kernel.asm	/^c01075d0:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01075d3	obj/kernel.asm	/^c01075d3:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c01075d6	obj/kernel.asm	/^c01075d6:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01075d9	obj/kernel.asm	/^c01075d9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01075dc	obj/kernel.asm	/^c01075dc:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01075df	obj/kernel.asm	/^c01075df:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01075e2	obj/kernel.asm	/^c01075e2:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01075e5	obj/kernel.asm	/^c01075e5:	89 10                	mov    %edx,(%eax)$/;"	l
c01075e7	obj/kernel.asm	/^c01075e7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01075ea	obj/kernel.asm	/^c01075ea:	8b 10                	mov    (%eax),%edx$/;"	l
c01075ec	obj/kernel.asm	/^c01075ec:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01075ef	obj/kernel.asm	/^c01075ef:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01075f2	obj/kernel.asm	/^c01075f2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01075f5	obj/kernel.asm	/^c01075f5:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01075f8	obj/kernel.asm	/^c01075f8:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01075fb	obj/kernel.asm	/^c01075fb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01075fe	obj/kernel.asm	/^c01075fe:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0107601	obj/kernel.asm	/^c0107601:	89 10                	mov    %edx,(%eax)$/;"	l
c0107603	obj/kernel.asm	/^c0107603:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107608	obj/kernel.asm	/^c0107608:	c9                   	leave  $/;"	l
c0107609	obj/kernel.asm	/^c0107609:	c3                   	ret    $/;"	l
c010760a	obj/kernel.asm	/^c010760a <_fifo_swap_out_victim>:$/;"	l
c010760a	obj/kernel.asm	/^c010760a:	55                   	push   %ebp$/;"	l
c010760b	obj/kernel.asm	/^c010760b:	89 e5                	mov    %esp,%ebp$/;"	l
c010760d	obj/kernel.asm	/^c010760d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107610	obj/kernel.asm	/^c0107610:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107613	obj/kernel.asm	/^c0107613:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0107616	obj/kernel.asm	/^c0107616:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107619	obj/kernel.asm	/^c0107619:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010761d	obj/kernel.asm	/^c010761d:	75 16                	jne    c0107635 <_fifo_swap_out_victim+0x2b>$/;"	l
c010761f	obj/kernel.asm	/^c010761f:	68 6f d5 10 c0       	push   $0xc010d56f$/;"	l
c0107624	obj/kernel.asm	/^c0107624:	68 46 d5 10 c0       	push   $0xc010d546$/;"	l
c0107629	obj/kernel.asm	/^c0107629:	6a 4a                	push   $0x4a$/;"	l
c010762b	obj/kernel.asm	/^c010762b:	68 5b d5 10 c0       	push   $0xc010d55b$/;"	l
c0107630	obj/kernel.asm	/^c0107630:	e8 aa 8d ff ff       	call   c01003df <__panic>$/;"	l
c0107635	obj/kernel.asm	/^c0107635:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0107639	obj/kernel.asm	/^c0107639:	74 16                	je     c0107651 <_fifo_swap_out_victim+0x47>$/;"	l
c010763b	obj/kernel.asm	/^c010763b:	68 7c d5 10 c0       	push   $0xc010d57c$/;"	l
c0107640	obj/kernel.asm	/^c0107640:	68 46 d5 10 c0       	push   $0xc010d546$/;"	l
c0107645	obj/kernel.asm	/^c0107645:	6a 4b                	push   $0x4b$/;"	l
c0107647	obj/kernel.asm	/^c0107647:	68 5b d5 10 c0       	push   $0xc010d55b$/;"	l
c010764c	obj/kernel.asm	/^c010764c:	e8 8e 8d ff ff       	call   c01003df <__panic>$/;"	l
c0107651	obj/kernel.asm	/^c0107651:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107654	obj/kernel.asm	/^c0107654:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107657	obj/kernel.asm	/^c0107657:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010765a	obj/kernel.asm	/^c010765a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010765d	obj/kernel.asm	/^c010765d:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c0107660	obj/kernel.asm	/^c0107660:	0f 94 c0             	sete   %al$/;"	l
c0107663	obj/kernel.asm	/^c0107663:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107666	obj/kernel.asm	/^c0107666:	85 c0                	test   %eax,%eax$/;"	l
c0107668	obj/kernel.asm	/^c0107668:	74 17                	je     c0107681 <_fifo_swap_out_victim+0x77>$/;"	l
c010766a	obj/kernel.asm	/^c010766a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010766d	obj/kernel.asm	/^c010766d:	68 87 d5 10 c0       	push   $0xc010d587$/;"	l
c0107672	obj/kernel.asm	/^c0107672:	e8 03 8c ff ff       	call   c010027a <cprintf>$/;"	l
c0107677	obj/kernel.asm	/^c0107677:	83 c4 10             	add    $0x10,%esp$/;"	l
c010767a	obj/kernel.asm	/^c010767a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010767f	obj/kernel.asm	/^c010767f:	eb 47                	jmp    c01076c8 <_fifo_swap_out_victim+0xbe>$/;"	l
c0107681	obj/kernel.asm	/^c0107681:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107684	obj/kernel.asm	/^c0107684:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107687	obj/kernel.asm	/^c0107687:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010768a	obj/kernel.asm	/^c010768a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010768d	obj/kernel.asm	/^c010768d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107690	obj/kernel.asm	/^c0107690:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107693	obj/kernel.asm	/^c0107693:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107696	obj/kernel.asm	/^c0107696:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107699	obj/kernel.asm	/^c0107699:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010769c	obj/kernel.asm	/^c010769c:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010769f	obj/kernel.asm	/^c010769f:	8b 12                	mov    (%edx),%edx$/;"	l
c01076a1	obj/kernel.asm	/^c01076a1:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c01076a4	obj/kernel.asm	/^c01076a4:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01076a7	obj/kernel.asm	/^c01076a7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01076aa	obj/kernel.asm	/^c01076aa:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01076ad	obj/kernel.asm	/^c01076ad:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01076b0	obj/kernel.asm	/^c01076b0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01076b3	obj/kernel.asm	/^c01076b3:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01076b6	obj/kernel.asm	/^c01076b6:	89 10                	mov    %edx,(%eax)$/;"	l
c01076b8	obj/kernel.asm	/^c01076b8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01076bb	obj/kernel.asm	/^c01076bb:	8d 50 ec             	lea    -0x14(%eax),%edx$/;"	l
c01076be	obj/kernel.asm	/^c01076be:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01076c1	obj/kernel.asm	/^c01076c1:	89 10                	mov    %edx,(%eax)$/;"	l
c01076c3	obj/kernel.asm	/^c01076c3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01076c8	obj/kernel.asm	/^c01076c8:	c9                   	leave  $/;"	l
c01076c9	obj/kernel.asm	/^c01076c9:	c3                   	ret    $/;"	l
c01076ca	obj/kernel.asm	/^c01076ca <_fifo_check_swap>:$/;"	l
c01076ca	obj/kernel.asm	/^c01076ca:	55                   	push   %ebp$/;"	l
c01076cb	obj/kernel.asm	/^c01076cb:	89 e5                	mov    %esp,%ebp$/;"	l
c01076cd	obj/kernel.asm	/^c01076cd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01076d0	obj/kernel.asm	/^c01076d0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01076d3	obj/kernel.asm	/^c01076d3:	68 98 d5 10 c0       	push   $0xc010d598$/;"	l
c01076d8	obj/kernel.asm	/^c01076d8:	e8 9d 8b ff ff       	call   c010027a <cprintf>$/;"	l
c01076dd	obj/kernel.asm	/^c01076dd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01076e0	obj/kernel.asm	/^c01076e0:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c01076e5	obj/kernel.asm	/^c01076e5:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c01076e8	obj/kernel.asm	/^c01076e8:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c01076ed	obj/kernel.asm	/^c01076ed:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01076f0	obj/kernel.asm	/^c01076f0:	74 16                	je     c0107708 <_fifo_check_swap+0x3e>$/;"	l
c01076f2	obj/kernel.asm	/^c01076f2:	68 be d5 10 c0       	push   $0xc010d5be$/;"	l
c01076f7	obj/kernel.asm	/^c01076f7:	68 46 d5 10 c0       	push   $0xc010d546$/;"	l
c01076fc	obj/kernel.asm	/^c01076fc:	6a 5f                	push   $0x5f$/;"	l
c01076fe	obj/kernel.asm	/^c01076fe:	68 5b d5 10 c0       	push   $0xc010d55b$/;"	l
c0107703	obj/kernel.asm	/^c0107703:	e8 d7 8c ff ff       	call   c01003df <__panic>$/;"	l
c0107708	obj/kernel.asm	/^c0107708:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010770b	obj/kernel.asm	/^c010770b:	68 d0 d5 10 c0       	push   $0xc010d5d0$/;"	l
c0107710	obj/kernel.asm	/^c0107710:	e8 65 8b ff ff       	call   c010027a <cprintf>$/;"	l
c0107715	obj/kernel.asm	/^c0107715:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107718	obj/kernel.asm	/^c0107718:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010771d	obj/kernel.asm	/^c010771d:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c0107720	obj/kernel.asm	/^c0107720:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c0107725	obj/kernel.asm	/^c0107725:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107728	obj/kernel.asm	/^c0107728:	74 16                	je     c0107740 <_fifo_check_swap+0x76>$/;"	l
c010772a	obj/kernel.asm	/^c010772a:	68 be d5 10 c0       	push   $0xc010d5be$/;"	l
c010772f	obj/kernel.asm	/^c010772f:	68 46 d5 10 c0       	push   $0xc010d546$/;"	l
c0107734	obj/kernel.asm	/^c0107734:	6a 62                	push   $0x62$/;"	l
c0107736	obj/kernel.asm	/^c0107736:	68 5b d5 10 c0       	push   $0xc010d55b$/;"	l
c010773b	obj/kernel.asm	/^c010773b:	e8 9f 8c ff ff       	call   c01003df <__panic>$/;"	l
c0107740	obj/kernel.asm	/^c0107740:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107743	obj/kernel.asm	/^c0107743:	68 f8 d5 10 c0       	push   $0xc010d5f8$/;"	l
c0107748	obj/kernel.asm	/^c0107748:	e8 2d 8b ff ff       	call   c010027a <cprintf>$/;"	l
c010774d	obj/kernel.asm	/^c010774d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107750	obj/kernel.asm	/^c0107750:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0107755	obj/kernel.asm	/^c0107755:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0107758	obj/kernel.asm	/^c0107758:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c010775d	obj/kernel.asm	/^c010775d:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107760	obj/kernel.asm	/^c0107760:	74 16                	je     c0107778 <_fifo_check_swap+0xae>$/;"	l
c0107762	obj/kernel.asm	/^c0107762:	68 be d5 10 c0       	push   $0xc010d5be$/;"	l
c0107767	obj/kernel.asm	/^c0107767:	68 46 d5 10 c0       	push   $0xc010d546$/;"	l
c010776c	obj/kernel.asm	/^c010776c:	6a 65                	push   $0x65$/;"	l
c010776e	obj/kernel.asm	/^c010776e:	68 5b d5 10 c0       	push   $0xc010d55b$/;"	l
c0107773	obj/kernel.asm	/^c0107773:	e8 67 8c ff ff       	call   c01003df <__panic>$/;"	l
c0107778	obj/kernel.asm	/^c0107778:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010777b	obj/kernel.asm	/^c010777b:	68 20 d6 10 c0       	push   $0xc010d620$/;"	l
c0107780	obj/kernel.asm	/^c0107780:	e8 f5 8a ff ff       	call   c010027a <cprintf>$/;"	l
c0107785	obj/kernel.asm	/^c0107785:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107788	obj/kernel.asm	/^c0107788:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c010778d	obj/kernel.asm	/^c010778d:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107790	obj/kernel.asm	/^c0107790:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c0107795	obj/kernel.asm	/^c0107795:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107798	obj/kernel.asm	/^c0107798:	74 16                	je     c01077b0 <_fifo_check_swap+0xe6>$/;"	l
c010779a	obj/kernel.asm	/^c010779a:	68 be d5 10 c0       	push   $0xc010d5be$/;"	l
c010779f	obj/kernel.asm	/^c010779f:	68 46 d5 10 c0       	push   $0xc010d546$/;"	l
c01077a4	obj/kernel.asm	/^c01077a4:	6a 68                	push   $0x68$/;"	l
c01077a6	obj/kernel.asm	/^c01077a6:	68 5b d5 10 c0       	push   $0xc010d55b$/;"	l
c01077ab	obj/kernel.asm	/^c01077ab:	e8 2f 8c ff ff       	call   c01003df <__panic>$/;"	l
c01077b0	obj/kernel.asm	/^c01077b0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01077b3	obj/kernel.asm	/^c01077b3:	68 48 d6 10 c0       	push   $0xc010d648$/;"	l
c01077b8	obj/kernel.asm	/^c01077b8:	e8 bd 8a ff ff       	call   c010027a <cprintf>$/;"	l
c01077bd	obj/kernel.asm	/^c01077bd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01077c0	obj/kernel.asm	/^c01077c0:	b8 00 50 00 00       	mov    $0x5000,%eax$/;"	l
c01077c5	obj/kernel.asm	/^c01077c5:	c6 00 0e             	movb   $0xe,(%eax)$/;"	l
c01077c8	obj/kernel.asm	/^c01077c8:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c01077cd	obj/kernel.asm	/^c01077cd:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c01077d0	obj/kernel.asm	/^c01077d0:	74 16                	je     c01077e8 <_fifo_check_swap+0x11e>$/;"	l
c01077d2	obj/kernel.asm	/^c01077d2:	68 6e d6 10 c0       	push   $0xc010d66e$/;"	l
c01077d7	obj/kernel.asm	/^c01077d7:	68 46 d5 10 c0       	push   $0xc010d546$/;"	l
c01077dc	obj/kernel.asm	/^c01077dc:	6a 6b                	push   $0x6b$/;"	l
c01077de	obj/kernel.asm	/^c01077de:	68 5b d5 10 c0       	push   $0xc010d55b$/;"	l
c01077e3	obj/kernel.asm	/^c01077e3:	e8 f7 8b ff ff       	call   c01003df <__panic>$/;"	l
c01077e8	obj/kernel.asm	/^c01077e8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01077eb	obj/kernel.asm	/^c01077eb:	68 20 d6 10 c0       	push   $0xc010d620$/;"	l
c01077f0	obj/kernel.asm	/^c01077f0:	e8 85 8a ff ff       	call   c010027a <cprintf>$/;"	l
c01077f5	obj/kernel.asm	/^c01077f5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01077f8	obj/kernel.asm	/^c01077f8:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c01077fd	obj/kernel.asm	/^c01077fd:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107800	obj/kernel.asm	/^c0107800:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c0107805	obj/kernel.asm	/^c0107805:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c0107808	obj/kernel.asm	/^c0107808:	74 16                	je     c0107820 <_fifo_check_swap+0x156>$/;"	l
c010780a	obj/kernel.asm	/^c010780a:	68 6e d6 10 c0       	push   $0xc010d66e$/;"	l
c010780f	obj/kernel.asm	/^c010780f:	68 46 d5 10 c0       	push   $0xc010d546$/;"	l
c0107814	obj/kernel.asm	/^c0107814:	6a 6e                	push   $0x6e$/;"	l
c0107816	obj/kernel.asm	/^c0107816:	68 5b d5 10 c0       	push   $0xc010d55b$/;"	l
c010781b	obj/kernel.asm	/^c010781b:	e8 bf 8b ff ff       	call   c01003df <__panic>$/;"	l
c0107820	obj/kernel.asm	/^c0107820:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107823	obj/kernel.asm	/^c0107823:	68 d0 d5 10 c0       	push   $0xc010d5d0$/;"	l
c0107828	obj/kernel.asm	/^c0107828:	e8 4d 8a ff ff       	call   c010027a <cprintf>$/;"	l
c010782d	obj/kernel.asm	/^c010782d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107830	obj/kernel.asm	/^c0107830:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0107835	obj/kernel.asm	/^c0107835:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c0107838	obj/kernel.asm	/^c0107838:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c010783d	obj/kernel.asm	/^c010783d:	83 f8 06             	cmp    $0x6,%eax$/;"	l
c0107840	obj/kernel.asm	/^c0107840:	74 16                	je     c0107858 <_fifo_check_swap+0x18e>$/;"	l
c0107842	obj/kernel.asm	/^c0107842:	68 7d d6 10 c0       	push   $0xc010d67d$/;"	l
c0107847	obj/kernel.asm	/^c0107847:	68 46 d5 10 c0       	push   $0xc010d546$/;"	l
c010784c	obj/kernel.asm	/^c010784c:	6a 71                	push   $0x71$/;"	l
c010784e	obj/kernel.asm	/^c010784e:	68 5b d5 10 c0       	push   $0xc010d55b$/;"	l
c0107853	obj/kernel.asm	/^c0107853:	e8 87 8b ff ff       	call   c01003df <__panic>$/;"	l
c0107858	obj/kernel.asm	/^c0107858:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010785b	obj/kernel.asm	/^c010785b:	68 20 d6 10 c0       	push   $0xc010d620$/;"	l
c0107860	obj/kernel.asm	/^c0107860:	e8 15 8a ff ff       	call   c010027a <cprintf>$/;"	l
c0107865	obj/kernel.asm	/^c0107865:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107868	obj/kernel.asm	/^c0107868:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c010786d	obj/kernel.asm	/^c010786d:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c0107870	obj/kernel.asm	/^c0107870:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c0107875	obj/kernel.asm	/^c0107875:	83 f8 07             	cmp    $0x7,%eax$/;"	l
c0107878	obj/kernel.asm	/^c0107878:	74 16                	je     c0107890 <_fifo_check_swap+0x1c6>$/;"	l
c010787a	obj/kernel.asm	/^c010787a:	68 8c d6 10 c0       	push   $0xc010d68c$/;"	l
c010787f	obj/kernel.asm	/^c010787f:	68 46 d5 10 c0       	push   $0xc010d546$/;"	l
c0107884	obj/kernel.asm	/^c0107884:	6a 74                	push   $0x74$/;"	l
c0107886	obj/kernel.asm	/^c0107886:	68 5b d5 10 c0       	push   $0xc010d55b$/;"	l
c010788b	obj/kernel.asm	/^c010788b:	e8 4f 8b ff ff       	call   c01003df <__panic>$/;"	l
c0107890	obj/kernel.asm	/^c0107890:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107893	obj/kernel.asm	/^c0107893:	68 98 d5 10 c0       	push   $0xc010d598$/;"	l
c0107898	obj/kernel.asm	/^c0107898:	e8 dd 89 ff ff       	call   c010027a <cprintf>$/;"	l
c010789d	obj/kernel.asm	/^c010789d:	83 c4 10             	add    $0x10,%esp$/;"	l
c01078a0	obj/kernel.asm	/^c01078a0:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c01078a5	obj/kernel.asm	/^c01078a5:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c01078a8	obj/kernel.asm	/^c01078a8:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c01078ad	obj/kernel.asm	/^c01078ad:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c01078b0	obj/kernel.asm	/^c01078b0:	74 16                	je     c01078c8 <_fifo_check_swap+0x1fe>$/;"	l
c01078b2	obj/kernel.asm	/^c01078b2:	68 9b d6 10 c0       	push   $0xc010d69b$/;"	l
c01078b7	obj/kernel.asm	/^c01078b7:	68 46 d5 10 c0       	push   $0xc010d546$/;"	l
c01078bc	obj/kernel.asm	/^c01078bc:	6a 77                	push   $0x77$/;"	l
c01078be	obj/kernel.asm	/^c01078be:	68 5b d5 10 c0       	push   $0xc010d55b$/;"	l
c01078c3	obj/kernel.asm	/^c01078c3:	e8 17 8b ff ff       	call   c01003df <__panic>$/;"	l
c01078c8	obj/kernel.asm	/^c01078c8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01078cb	obj/kernel.asm	/^c01078cb:	68 f8 d5 10 c0       	push   $0xc010d5f8$/;"	l
c01078d0	obj/kernel.asm	/^c01078d0:	e8 a5 89 ff ff       	call   c010027a <cprintf>$/;"	l
c01078d5	obj/kernel.asm	/^c01078d5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01078d8	obj/kernel.asm	/^c01078d8:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c01078dd	obj/kernel.asm	/^c01078dd:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c01078e0	obj/kernel.asm	/^c01078e0:	a1 2c ee 1a c0       	mov    0xc01aee2c,%eax$/;"	l
c01078e5	obj/kernel.asm	/^c01078e5:	83 f8 09             	cmp    $0x9,%eax$/;"	l
c01078e8	obj/kernel.asm	/^c01078e8:	74 16                	je     c0107900 <_fifo_check_swap+0x236>$/;"	l
c01078ea	obj/kernel.asm	/^c01078ea:	68 aa d6 10 c0       	push   $0xc010d6aa$/;"	l
c01078ef	obj/kernel.asm	/^c01078ef:	68 46 d5 10 c0       	push   $0xc010d546$/;"	l
c01078f4	obj/kernel.asm	/^c01078f4:	6a 7a                	push   $0x7a$/;"	l
c01078f6	obj/kernel.asm	/^c01078f6:	68 5b d5 10 c0       	push   $0xc010d55b$/;"	l
c01078fb	obj/kernel.asm	/^c01078fb:	e8 df 8a ff ff       	call   c01003df <__panic>$/;"	l
c0107900	obj/kernel.asm	/^c0107900:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107905	obj/kernel.asm	/^c0107905:	c9                   	leave  $/;"	l
c0107906	obj/kernel.asm	/^c0107906:	c3                   	ret    $/;"	l
c0107907	obj/kernel.asm	/^c0107907 <_fifo_init>:$/;"	l
c0107907	obj/kernel.asm	/^c0107907:	55                   	push   %ebp$/;"	l
c0107908	obj/kernel.asm	/^c0107908:	89 e5                	mov    %esp,%ebp$/;"	l
c010790a	obj/kernel.asm	/^c010790a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010790f	obj/kernel.asm	/^c010790f:	5d                   	pop    %ebp$/;"	l
c0107910	obj/kernel.asm	/^c0107910:	c3                   	ret    $/;"	l
c0107911	obj/kernel.asm	/^c0107911 <_fifo_set_unswappable>:$/;"	l
c0107911	obj/kernel.asm	/^c0107911:	55                   	push   %ebp$/;"	l
c0107912	obj/kernel.asm	/^c0107912:	89 e5                	mov    %esp,%ebp$/;"	l
c0107914	obj/kernel.asm	/^c0107914:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107919	obj/kernel.asm	/^c0107919:	5d                   	pop    %ebp$/;"	l
c010791a	obj/kernel.asm	/^c010791a:	c3                   	ret    $/;"	l
c010791b	obj/kernel.asm	/^c010791b <_fifo_tick_event>:$/;"	l
c010791b	obj/kernel.asm	/^c010791b:	55                   	push   %ebp$/;"	l
c010791c	obj/kernel.asm	/^c010791c:	89 e5                	mov    %esp,%ebp$/;"	l
c010791e	obj/kernel.asm	/^c010791e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107923	obj/kernel.asm	/^c0107923:	5d                   	pop    %ebp$/;"	l
c0107924	obj/kernel.asm	/^c0107924:	c3                   	ret    $/;"	l
c0107925	obj/kernel.asm	/^c0107925 <page2ppn>:$/;"	l
c0107925	obj/kernel.asm	/^c0107925:	55                   	push   %ebp$/;"	l
c0107926	obj/kernel.asm	/^c0107926:	89 e5                	mov    %esp,%ebp$/;"	l
c0107928	obj/kernel.asm	/^c0107928:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010792b	obj/kernel.asm	/^c010792b:	8b 15 18 0f 1b c0    	mov    0xc01b0f18,%edx$/;"	l
c0107931	obj/kernel.asm	/^c0107931:	29 d0                	sub    %edx,%eax$/;"	l
c0107933	obj/kernel.asm	/^c0107933:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0107936	obj/kernel.asm	/^c0107936:	5d                   	pop    %ebp$/;"	l
c0107937	obj/kernel.asm	/^c0107937:	c3                   	ret    $/;"	l
c0107938	obj/kernel.asm	/^c0107938 <page2pa>:$/;"	l
c0107938	obj/kernel.asm	/^c0107938:	55                   	push   %ebp$/;"	l
c0107939	obj/kernel.asm	/^c0107939:	89 e5                	mov    %esp,%ebp$/;"	l
c010793b	obj/kernel.asm	/^c010793b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010793e	obj/kernel.asm	/^c010793e:	e8 e2 ff ff ff       	call   c0107925 <page2ppn>$/;"	l
c0107943	obj/kernel.asm	/^c0107943:	83 c4 04             	add    $0x4,%esp$/;"	l
c0107946	obj/kernel.asm	/^c0107946:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0107949	obj/kernel.asm	/^c0107949:	c9                   	leave  $/;"	l
c010794a	obj/kernel.asm	/^c010794a:	c3                   	ret    $/;"	l
c010794b	obj/kernel.asm	/^c010794b <page_ref>:$/;"	l
c010794b	obj/kernel.asm	/^c010794b:	55                   	push   %ebp$/;"	l
c010794c	obj/kernel.asm	/^c010794c:	89 e5                	mov    %esp,%ebp$/;"	l
c010794e	obj/kernel.asm	/^c010794e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107951	obj/kernel.asm	/^c0107951:	8b 00                	mov    (%eax),%eax$/;"	l
c0107953	obj/kernel.asm	/^c0107953:	5d                   	pop    %ebp$/;"	l
c0107954	obj/kernel.asm	/^c0107954:	c3                   	ret    $/;"	l
c0107955	obj/kernel.asm	/^c0107955 <set_page_ref>:$/;"	l
c0107955	obj/kernel.asm	/^c0107955:	55                   	push   %ebp$/;"	l
c0107956	obj/kernel.asm	/^c0107956:	89 e5                	mov    %esp,%ebp$/;"	l
c0107958	obj/kernel.asm	/^c0107958:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010795b	obj/kernel.asm	/^c010795b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010795e	obj/kernel.asm	/^c010795e:	89 10                	mov    %edx,(%eax)$/;"	l
c0107960	obj/kernel.asm	/^c0107960:	5d                   	pop    %ebp$/;"	l
c0107961	obj/kernel.asm	/^c0107961:	c3                   	ret    $/;"	l
c0107962	obj/kernel.asm	/^c0107962 <default_init>:$/;"	l
c0107962	obj/kernel.asm	/^c0107962:	55                   	push   %ebp$/;"	l
c0107963	obj/kernel.asm	/^c0107963:	89 e5                	mov    %esp,%ebp$/;"	l
c0107965	obj/kernel.asm	/^c0107965:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0107968	obj/kernel.asm	/^c0107968:	c7 45 fc ec 0f 1b c0 	movl   $0xc01b0fec,-0x4(%ebp)$/;"	l
c010796f	obj/kernel.asm	/^c010796f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107972	obj/kernel.asm	/^c0107972:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0107975	obj/kernel.asm	/^c0107975:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107978	obj/kernel.asm	/^c0107978:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010797b	obj/kernel.asm	/^c010797b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010797e	obj/kernel.asm	/^c010797e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107981	obj/kernel.asm	/^c0107981:	89 10                	mov    %edx,(%eax)$/;"	l
c0107983	obj/kernel.asm	/^c0107983:	c7 05 f4 0f 1b c0 00 	movl   $0x0,0xc01b0ff4$/;"	l
c010798a	obj/kernel.asm	/^c010798a:	00 00 00 $/;"	l
c010798d	obj/kernel.asm	/^c010798d:	c9                   	leave  $/;"	l
c010798e	obj/kernel.asm	/^c010798e:	c3                   	ret    $/;"	l
c010798f	obj/kernel.asm	/^c010798f <default_init_memmap>:$/;"	l
c010798f	obj/kernel.asm	/^c010798f:	55                   	push   %ebp$/;"	l
c0107990	obj/kernel.asm	/^c0107990:	89 e5                	mov    %esp,%ebp$/;"	l
c0107992	obj/kernel.asm	/^c0107992:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0107995	obj/kernel.asm	/^c0107995:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0107999	obj/kernel.asm	/^c0107999:	75 16                	jne    c01079b1 <default_init_memmap+0x22>$/;"	l
c010799b	obj/kernel.asm	/^c010799b:	68 cc d6 10 c0       	push   $0xc010d6cc$/;"	l
c01079a0	obj/kernel.asm	/^c01079a0:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01079a5	obj/kernel.asm	/^c01079a5:	6a 46                	push   $0x46$/;"	l
c01079a7	obj/kernel.asm	/^c01079a7:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01079ac	obj/kernel.asm	/^c01079ac:	e8 2e 8a ff ff       	call   c01003df <__panic>$/;"	l
c01079b1	obj/kernel.asm	/^c01079b1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01079b4	obj/kernel.asm	/^c01079b4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01079b7	obj/kernel.asm	/^c01079b7:	eb 6c                	jmp    c0107a25 <default_init_memmap+0x96>$/;"	l
c01079b9	obj/kernel.asm	/^c01079b9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01079bc	obj/kernel.asm	/^c01079bc:	83 c0 04             	add    $0x4,%eax$/;"	l
c01079bf	obj/kernel.asm	/^c01079bf:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01079c6	obj/kernel.asm	/^c01079c6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01079c9	obj/kernel.asm	/^c01079c9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01079cc	obj/kernel.asm	/^c01079cc:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01079cf	obj/kernel.asm	/^c01079cf:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01079d2	obj/kernel.asm	/^c01079d2:	19 c0                	sbb    %eax,%eax$/;"	l
c01079d4	obj/kernel.asm	/^c01079d4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01079d7	obj/kernel.asm	/^c01079d7:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01079db	obj/kernel.asm	/^c01079db:	0f 95 c0             	setne  %al$/;"	l
c01079de	obj/kernel.asm	/^c01079de:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01079e1	obj/kernel.asm	/^c01079e1:	85 c0                	test   %eax,%eax$/;"	l
c01079e3	obj/kernel.asm	/^c01079e3:	75 16                	jne    c01079fb <default_init_memmap+0x6c>$/;"	l
c01079e5	obj/kernel.asm	/^c01079e5:	68 fd d6 10 c0       	push   $0xc010d6fd$/;"	l
c01079ea	obj/kernel.asm	/^c01079ea:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01079ef	obj/kernel.asm	/^c01079ef:	6a 49                	push   $0x49$/;"	l
c01079f1	obj/kernel.asm	/^c01079f1:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01079f6	obj/kernel.asm	/^c01079f6:	e8 e4 89 ff ff       	call   c01003df <__panic>$/;"	l
c01079fb	obj/kernel.asm	/^c01079fb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01079fe	obj/kernel.asm	/^c01079fe:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0107a05	obj/kernel.asm	/^c0107a05:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107a08	obj/kernel.asm	/^c0107a08:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107a0b	obj/kernel.asm	/^c0107a0b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107a0e	obj/kernel.asm	/^c0107a0e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107a11	obj/kernel.asm	/^c0107a11:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107a14	obj/kernel.asm	/^c0107a14:	6a 00                	push   $0x0$/;"	l
c0107a16	obj/kernel.asm	/^c0107a16:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0107a19	obj/kernel.asm	/^c0107a19:	e8 37 ff ff ff       	call   c0107955 <set_page_ref>$/;"	l
c0107a1e	obj/kernel.asm	/^c0107a1e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107a21	obj/kernel.asm	/^c0107a21:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0107a25	obj/kernel.asm	/^c0107a25:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107a28	obj/kernel.asm	/^c0107a28:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107a2b	obj/kernel.asm	/^c0107a2b:	89 c2                	mov    %eax,%edx$/;"	l
c0107a2d	obj/kernel.asm	/^c0107a2d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107a30	obj/kernel.asm	/^c0107a30:	01 d0                	add    %edx,%eax$/;"	l
c0107a32	obj/kernel.asm	/^c0107a32:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107a35	obj/kernel.asm	/^c0107a35:	75 82                	jne    c01079b9 <default_init_memmap+0x2a>$/;"	l
c0107a37	obj/kernel.asm	/^c0107a37:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107a3a	obj/kernel.asm	/^c0107a3a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107a3d	obj/kernel.asm	/^c0107a3d:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107a40	obj/kernel.asm	/^c0107a40:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107a43	obj/kernel.asm	/^c0107a43:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107a46	obj/kernel.asm	/^c0107a46:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
c0107a4d	obj/kernel.asm	/^c0107a4d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107a50	obj/kernel.asm	/^c0107a50:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107a53	obj/kernel.asm	/^c0107a53:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0107a56	obj/kernel.asm	/^c0107a56:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107a59	obj/kernel.asm	/^c0107a59:	8b 15 f4 0f 1b c0    	mov    0xc01b0ff4,%edx$/;"	l
c0107a5f	obj/kernel.asm	/^c0107a5f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107a62	obj/kernel.asm	/^c0107a62:	01 d0                	add    %edx,%eax$/;"	l
c0107a64	obj/kernel.asm	/^c0107a64:	a3 f4 0f 1b c0       	mov    %eax,0xc01b0ff4$/;"	l
c0107a69	obj/kernel.asm	/^c0107a69:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107a6c	obj/kernel.asm	/^c0107a6c:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0107a6f	obj/kernel.asm	/^c0107a6f:	c7 45 dc ec 0f 1b c0 	movl   $0xc01b0fec,-0x24(%ebp)$/;"	l
c0107a76	obj/kernel.asm	/^c0107a76:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0107a79	obj/kernel.asm	/^c0107a79:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107a7c	obj/kernel.asm	/^c0107a7c:	8b 00                	mov    (%eax),%eax$/;"	l
c0107a7e	obj/kernel.asm	/^c0107a7e:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107a81	obj/kernel.asm	/^c0107a81:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0107a84	obj/kernel.asm	/^c0107a84:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0107a87	obj/kernel.asm	/^c0107a87:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107a8a	obj/kernel.asm	/^c0107a8a:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0107a8d	obj/kernel.asm	/^c0107a8d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0107a90	obj/kernel.asm	/^c0107a90:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0107a93	obj/kernel.asm	/^c0107a93:	89 10                	mov    %edx,(%eax)$/;"	l
c0107a95	obj/kernel.asm	/^c0107a95:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0107a98	obj/kernel.asm	/^c0107a98:	8b 10                	mov    (%eax),%edx$/;"	l
c0107a9a	obj/kernel.asm	/^c0107a9a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0107a9d	obj/kernel.asm	/^c0107a9d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107aa0	obj/kernel.asm	/^c0107aa0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107aa3	obj/kernel.asm	/^c0107aa3:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0107aa6	obj/kernel.asm	/^c0107aa6:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107aa9	obj/kernel.asm	/^c0107aa9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107aac	obj/kernel.asm	/^c0107aac:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0107aaf	obj/kernel.asm	/^c0107aaf:	89 10                	mov    %edx,(%eax)$/;"	l
c0107ab1	obj/kernel.asm	/^c0107ab1:	c9                   	leave  $/;"	l
c0107ab2	obj/kernel.asm	/^c0107ab2:	c3                   	ret    $/;"	l
c0107ab3	obj/kernel.asm	/^c0107ab3 <default_alloc_pages>:$/;"	l
c0107ab3	obj/kernel.asm	/^c0107ab3:	55                   	push   %ebp$/;"	l
c0107ab4	obj/kernel.asm	/^c0107ab4:	89 e5                	mov    %esp,%ebp$/;"	l
c0107ab6	obj/kernel.asm	/^c0107ab6:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0107ab9	obj/kernel.asm	/^c0107ab9:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0107abd	obj/kernel.asm	/^c0107abd:	75 16                	jne    c0107ad5 <default_alloc_pages+0x22>$/;"	l
c0107abf	obj/kernel.asm	/^c0107abf:	68 cc d6 10 c0       	push   $0xc010d6cc$/;"	l
c0107ac4	obj/kernel.asm	/^c0107ac4:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0107ac9	obj/kernel.asm	/^c0107ac9:	6a 5a                	push   $0x5a$/;"	l
c0107acb	obj/kernel.asm	/^c0107acb:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c0107ad0	obj/kernel.asm	/^c0107ad0:	e8 0a 89 ff ff       	call   c01003df <__panic>$/;"	l
c0107ad5	obj/kernel.asm	/^c0107ad5:	a1 f4 0f 1b c0       	mov    0xc01b0ff4,%eax$/;"	l
c0107ada	obj/kernel.asm	/^c0107ada:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107add	obj/kernel.asm	/^c0107add:	73 0a                	jae    c0107ae9 <default_alloc_pages+0x36>$/;"	l
c0107adf	obj/kernel.asm	/^c0107adf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107ae4	obj/kernel.asm	/^c0107ae4:	e9 6a 01 00 00       	jmp    c0107c53 <default_alloc_pages+0x1a0>$/;"	l
c0107ae9	obj/kernel.asm	/^c0107ae9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0107af0	obj/kernel.asm	/^c0107af0:	c7 45 f0 ec 0f 1b c0 	movl   $0xc01b0fec,-0x10(%ebp)$/;"	l
c0107af7	obj/kernel.asm	/^c0107af7:	eb 1c                	jmp    c0107b15 <default_alloc_pages+0x62>$/;"	l
c0107af9	obj/kernel.asm	/^c0107af9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107afc	obj/kernel.asm	/^c0107afc:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0107aff	obj/kernel.asm	/^c0107aff:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107b02	obj/kernel.asm	/^c0107b02:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107b05	obj/kernel.asm	/^c0107b05:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107b08	obj/kernel.asm	/^c0107b08:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107b0b	obj/kernel.asm	/^c0107b0b:	72 08                	jb     c0107b15 <default_alloc_pages+0x62>$/;"	l
c0107b0d	obj/kernel.asm	/^c0107b0d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107b10	obj/kernel.asm	/^c0107b10:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107b13	obj/kernel.asm	/^c0107b13:	eb 18                	jmp    c0107b2d <default_alloc_pages+0x7a>$/;"	l
c0107b15	obj/kernel.asm	/^c0107b15:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107b18	obj/kernel.asm	/^c0107b18:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0107b1b	obj/kernel.asm	/^c0107b1b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107b1e	obj/kernel.asm	/^c0107b1e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107b21	obj/kernel.asm	/^c0107b21:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107b24	obj/kernel.asm	/^c0107b24:	81 7d f0 ec 0f 1b c0 	cmpl   $0xc01b0fec,-0x10(%ebp)$/;"	l
c0107b2b	obj/kernel.asm	/^c0107b2b:	75 cc                	jne    c0107af9 <default_alloc_pages+0x46>$/;"	l
c0107b2d	obj/kernel.asm	/^c0107b2d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107b31	obj/kernel.asm	/^c0107b31:	0f 84 19 01 00 00    	je     c0107c50 <default_alloc_pages+0x19d>$/;"	l
c0107b37	obj/kernel.asm	/^c0107b37:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b3a	obj/kernel.asm	/^c0107b3a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0107b3d	obj/kernel.asm	/^c0107b3d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107b40	obj/kernel.asm	/^c0107b40:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b43	obj/kernel.asm	/^c0107b43:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0107b46	obj/kernel.asm	/^c0107b46:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0107b49	obj/kernel.asm	/^c0107b49:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0107b4c	obj/kernel.asm	/^c0107b4c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107b4f	obj/kernel.asm	/^c0107b4f:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107b52	obj/kernel.asm	/^c0107b52:	8b 12                	mov    (%edx),%edx$/;"	l
c0107b54	obj/kernel.asm	/^c0107b54:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0107b57	obj/kernel.asm	/^c0107b57:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0107b5a	obj/kernel.asm	/^c0107b5a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107b5d	obj/kernel.asm	/^c0107b5d:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0107b60	obj/kernel.asm	/^c0107b60:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107b63	obj/kernel.asm	/^c0107b63:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0107b66	obj/kernel.asm	/^c0107b66:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0107b69	obj/kernel.asm	/^c0107b69:	89 10                	mov    %edx,(%eax)$/;"	l
c0107b6b	obj/kernel.asm	/^c0107b6b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b6e	obj/kernel.asm	/^c0107b6e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107b71	obj/kernel.asm	/^c0107b71:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107b74	obj/kernel.asm	/^c0107b74:	0f 86 82 00 00 00    	jbe    c0107bfc <default_alloc_pages+0x149>$/;"	l
c0107b7a	obj/kernel.asm	/^c0107b7a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107b7d	obj/kernel.asm	/^c0107b7d:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107b80	obj/kernel.asm	/^c0107b80:	89 c2                	mov    %eax,%edx$/;"	l
c0107b82	obj/kernel.asm	/^c0107b82:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b85	obj/kernel.asm	/^c0107b85:	01 d0                	add    %edx,%eax$/;"	l
c0107b87	obj/kernel.asm	/^c0107b87:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107b8a	obj/kernel.asm	/^c0107b8a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107b8d	obj/kernel.asm	/^c0107b8d:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107b90	obj/kernel.asm	/^c0107b90:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)$/;"	l
c0107b97	obj/kernel.asm	/^c0107b97:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0107b9a	obj/kernel.asm	/^c0107b9a:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0107b9d	obj/kernel.asm	/^c0107b9d:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0107ba0	obj/kernel.asm	/^c0107ba0:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107ba3	obj/kernel.asm	/^c0107ba3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107ba6	obj/kernel.asm	/^c0107ba6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107ba9	obj/kernel.asm	/^c0107ba9:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c0107bac	obj/kernel.asm	/^c0107bac:	89 c2                	mov    %eax,%edx$/;"	l
c0107bae	obj/kernel.asm	/^c0107bae:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107bb1	obj/kernel.asm	/^c0107bb1:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107bb4	obj/kernel.asm	/^c0107bb4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107bb7	obj/kernel.asm	/^c0107bb7:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0107bba	obj/kernel.asm	/^c0107bba:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107bbd	obj/kernel.asm	/^c0107bbd:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0107bc0	obj/kernel.asm	/^c0107bc0:	89 55 c0             	mov    %edx,-0x40(%ebp)$/;"	l
c0107bc3	obj/kernel.asm	/^c0107bc3:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0107bc6	obj/kernel.asm	/^c0107bc6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107bc9	obj/kernel.asm	/^c0107bc9:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c0107bcc	obj/kernel.asm	/^c0107bcc:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
c0107bcf	obj/kernel.asm	/^c0107bcf:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0107bd2	obj/kernel.asm	/^c0107bd2:	89 55 b8             	mov    %edx,-0x48(%ebp)$/;"	l
c0107bd5	obj/kernel.asm	/^c0107bd5:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0107bd8	obj/kernel.asm	/^c0107bd8:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0107bdb	obj/kernel.asm	/^c0107bdb:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c0107bde	obj/kernel.asm	/^c0107bde:	89 10                	mov    %edx,(%eax)$/;"	l
c0107be0	obj/kernel.asm	/^c0107be0:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0107be3	obj/kernel.asm	/^c0107be3:	8b 10                	mov    (%eax),%edx$/;"	l
c0107be5	obj/kernel.asm	/^c0107be5:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0107be8	obj/kernel.asm	/^c0107be8:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107beb	obj/kernel.asm	/^c0107beb:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0107bee	obj/kernel.asm	/^c0107bee:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0107bf1	obj/kernel.asm	/^c0107bf1:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107bf4	obj/kernel.asm	/^c0107bf4:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0107bf7	obj/kernel.asm	/^c0107bf7:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
c0107bfa	obj/kernel.asm	/^c0107bfa:	89 10                	mov    %edx,(%eax)$/;"	l
c0107bfc	obj/kernel.asm	/^c0107bfc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107bff	obj/kernel.asm	/^c0107bff:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107c02	obj/kernel.asm	/^c0107c02:	eb 14                	jmp    c0107c18 <default_alloc_pages+0x165>$/;"	l
c0107c04	obj/kernel.asm	/^c0107c04:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107c07	obj/kernel.asm	/^c0107c07:	6a 00                	push   $0x0$/;"	l
c0107c09	obj/kernel.asm	/^c0107c09:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0107c0c	obj/kernel.asm	/^c0107c0c:	e8 44 fd ff ff       	call   c0107955 <set_page_ref>$/;"	l
c0107c11	obj/kernel.asm	/^c0107c11:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107c14	obj/kernel.asm	/^c0107c14:	83 45 ec 20          	addl   $0x20,-0x14(%ebp)$/;"	l
c0107c18	obj/kernel.asm	/^c0107c18:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107c1b	obj/kernel.asm	/^c0107c1b:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107c1e	obj/kernel.asm	/^c0107c1e:	89 c2                	mov    %eax,%edx$/;"	l
c0107c20	obj/kernel.asm	/^c0107c20:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107c23	obj/kernel.asm	/^c0107c23:	01 d0                	add    %edx,%eax$/;"	l
c0107c25	obj/kernel.asm	/^c0107c25:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0107c28	obj/kernel.asm	/^c0107c28:	75 da                	jne    c0107c04 <default_alloc_pages+0x151>$/;"	l
c0107c2a	obj/kernel.asm	/^c0107c2a:	a1 f4 0f 1b c0       	mov    0xc01b0ff4,%eax$/;"	l
c0107c2f	obj/kernel.asm	/^c0107c2f:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c0107c32	obj/kernel.asm	/^c0107c32:	a3 f4 0f 1b c0       	mov    %eax,0xc01b0ff4$/;"	l
c0107c37	obj/kernel.asm	/^c0107c37:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107c3a	obj/kernel.asm	/^c0107c3a:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107c3d	obj/kernel.asm	/^c0107c3d:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%ebp)$/;"	l
c0107c44	obj/kernel.asm	/^c0107c44:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0107c47	obj/kernel.asm	/^c0107c47:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c0107c4a	obj/kernel.asm	/^c0107c4a:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c0107c4d	obj/kernel.asm	/^c0107c4d:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0107c50	obj/kernel.asm	/^c0107c50:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107c53	obj/kernel.asm	/^c0107c53:	c9                   	leave  $/;"	l
c0107c54	obj/kernel.asm	/^c0107c54:	c3                   	ret    $/;"	l
c0107c55	obj/kernel.asm	/^c0107c55 <default_free_pages>:$/;"	l
c0107c55	obj/kernel.asm	/^c0107c55:	55                   	push   %ebp$/;"	l
c0107c56	obj/kernel.asm	/^c0107c56:	89 e5                	mov    %esp,%ebp$/;"	l
c0107c58	obj/kernel.asm	/^c0107c58:	81 ec 88 00 00 00    	sub    $0x88,%esp$/;"	l
c0107c5e	obj/kernel.asm	/^c0107c5e:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0107c62	obj/kernel.asm	/^c0107c62:	75 19                	jne    c0107c7d <default_free_pages+0x28>$/;"	l
c0107c64	obj/kernel.asm	/^c0107c64:	68 cc d6 10 c0       	push   $0xc010d6cc$/;"	l
c0107c69	obj/kernel.asm	/^c0107c69:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0107c6e	obj/kernel.asm	/^c0107c6e:	68 8a 00 00 00       	push   $0x8a$/;"	l
c0107c73	obj/kernel.asm	/^c0107c73:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c0107c78	obj/kernel.asm	/^c0107c78:	e8 62 87 ff ff       	call   c01003df <__panic>$/;"	l
c0107c7d	obj/kernel.asm	/^c0107c7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107c80	obj/kernel.asm	/^c0107c80:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107c83	obj/kernel.asm	/^c0107c83:	e9 8f 00 00 00       	jmp    c0107d17 <default_free_pages+0xc2>$/;"	l
c0107c88	obj/kernel.asm	/^c0107c88:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107c8b	obj/kernel.asm	/^c0107c8b:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107c8e	obj/kernel.asm	/^c0107c8e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0107c95	obj/kernel.asm	/^c0107c95:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107c98	obj/kernel.asm	/^c0107c98:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107c9b	obj/kernel.asm	/^c0107c9b:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0107c9e	obj/kernel.asm	/^c0107c9e:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0107ca1	obj/kernel.asm	/^c0107ca1:	19 c0                	sbb    %eax,%eax$/;"	l
c0107ca3	obj/kernel.asm	/^c0107ca3:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0107ca6	obj/kernel.asm	/^c0107ca6:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0107caa	obj/kernel.asm	/^c0107caa:	0f 95 c0             	setne  %al$/;"	l
c0107cad	obj/kernel.asm	/^c0107cad:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107cb0	obj/kernel.asm	/^c0107cb0:	85 c0                	test   %eax,%eax$/;"	l
c0107cb2	obj/kernel.asm	/^c0107cb2:	75 2c                	jne    c0107ce0 <default_free_pages+0x8b>$/;"	l
c0107cb4	obj/kernel.asm	/^c0107cb4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107cb7	obj/kernel.asm	/^c0107cb7:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107cba	obj/kernel.asm	/^c0107cba:	c7 45 d8 01 00 00 00 	movl   $0x1,-0x28(%ebp)$/;"	l
c0107cc1	obj/kernel.asm	/^c0107cc1:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0107cc4	obj/kernel.asm	/^c0107cc4:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107cc7	obj/kernel.asm	/^c0107cc7:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107cca	obj/kernel.asm	/^c0107cca:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0107ccd	obj/kernel.asm	/^c0107ccd:	19 c0                	sbb    %eax,%eax$/;"	l
c0107ccf	obj/kernel.asm	/^c0107ccf:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0107cd2	obj/kernel.asm	/^c0107cd2:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c0107cd6	obj/kernel.asm	/^c0107cd6:	0f 95 c0             	setne  %al$/;"	l
c0107cd9	obj/kernel.asm	/^c0107cd9:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107cdc	obj/kernel.asm	/^c0107cdc:	85 c0                	test   %eax,%eax$/;"	l
c0107cde	obj/kernel.asm	/^c0107cde:	74 19                	je     c0107cf9 <default_free_pages+0xa4>$/;"	l
c0107ce0	obj/kernel.asm	/^c0107ce0:	68 10 d7 10 c0       	push   $0xc010d710$/;"	l
c0107ce5	obj/kernel.asm	/^c0107ce5:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0107cea	obj/kernel.asm	/^c0107cea:	68 8d 00 00 00       	push   $0x8d$/;"	l
c0107cef	obj/kernel.asm	/^c0107cef:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c0107cf4	obj/kernel.asm	/^c0107cf4:	e8 e6 86 ff ff       	call   c01003df <__panic>$/;"	l
c0107cf9	obj/kernel.asm	/^c0107cf9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107cfc	obj/kernel.asm	/^c0107cfc:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c0107d03	obj/kernel.asm	/^c0107d03:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107d06	obj/kernel.asm	/^c0107d06:	6a 00                	push   $0x0$/;"	l
c0107d08	obj/kernel.asm	/^c0107d08:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0107d0b	obj/kernel.asm	/^c0107d0b:	e8 45 fc ff ff       	call   c0107955 <set_page_ref>$/;"	l
c0107d10	obj/kernel.asm	/^c0107d10:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107d13	obj/kernel.asm	/^c0107d13:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0107d17	obj/kernel.asm	/^c0107d17:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107d1a	obj/kernel.asm	/^c0107d1a:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107d1d	obj/kernel.asm	/^c0107d1d:	89 c2                	mov    %eax,%edx$/;"	l
c0107d1f	obj/kernel.asm	/^c0107d1f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d22	obj/kernel.asm	/^c0107d22:	01 d0                	add    %edx,%eax$/;"	l
c0107d24	obj/kernel.asm	/^c0107d24:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107d27	obj/kernel.asm	/^c0107d27:	0f 85 5b ff ff ff    	jne    c0107c88 <default_free_pages+0x33>$/;"	l
c0107d2d	obj/kernel.asm	/^c0107d2d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d30	obj/kernel.asm	/^c0107d30:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107d33	obj/kernel.asm	/^c0107d33:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107d36	obj/kernel.asm	/^c0107d36:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d39	obj/kernel.asm	/^c0107d39:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107d3c	obj/kernel.asm	/^c0107d3c:	c7 45 cc 01 00 00 00 	movl   $0x1,-0x34(%ebp)$/;"	l
c0107d43	obj/kernel.asm	/^c0107d43:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0107d46	obj/kernel.asm	/^c0107d46:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0107d49	obj/kernel.asm	/^c0107d49:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0107d4c	obj/kernel.asm	/^c0107d4c:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107d4f	obj/kernel.asm	/^c0107d4f:	c7 45 c4 ec 0f 1b c0 	movl   $0xc01b0fec,-0x3c(%ebp)$/;"	l
c0107d56	obj/kernel.asm	/^c0107d56:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0107d59	obj/kernel.asm	/^c0107d59:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107d5c	obj/kernel.asm	/^c0107d5c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107d5f	obj/kernel.asm	/^c0107d5f:	c7 45 ec ec 0f 1b c0 	movl   $0xc01b0fec,-0x14(%ebp)$/;"	l
c0107d66	obj/kernel.asm	/^c0107d66:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0107d6d	obj/kernel.asm	/^c0107d6d:	e9 3d 01 00 00       	jmp    c0107eaf <default_free_pages+0x25a>$/;"	l
c0107d72	obj/kernel.asm	/^c0107d72:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107d75	obj/kernel.asm	/^c0107d75:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0107d78	obj/kernel.asm	/^c0107d78:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107d7b	obj/kernel.asm	/^c0107d7b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107d7e	obj/kernel.asm	/^c0107d7e:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0107d81	obj/kernel.asm	/^c0107d81:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0107d84	obj/kernel.asm	/^c0107d84:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107d87	obj/kernel.asm	/^c0107d87:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107d8a	obj/kernel.asm	/^c0107d8a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d8d	obj/kernel.asm	/^c0107d8d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107d90	obj/kernel.asm	/^c0107d90:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107d93	obj/kernel.asm	/^c0107d93:	89 c2                	mov    %eax,%edx$/;"	l
c0107d95	obj/kernel.asm	/^c0107d95:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d98	obj/kernel.asm	/^c0107d98:	01 d0                	add    %edx,%eax$/;"	l
c0107d9a	obj/kernel.asm	/^c0107d9a:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107d9d	obj/kernel.asm	/^c0107d9d:	75 5d                	jne    c0107dfc <default_free_pages+0x1a7>$/;"	l
c0107d9f	obj/kernel.asm	/^c0107d9f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107da2	obj/kernel.asm	/^c0107da2:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107da5	obj/kernel.asm	/^c0107da5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107da8	obj/kernel.asm	/^c0107da8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107dab	obj/kernel.asm	/^c0107dab:	01 c2                	add    %eax,%edx$/;"	l
c0107dad	obj/kernel.asm	/^c0107dad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107db0	obj/kernel.asm	/^c0107db0:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107db3	obj/kernel.asm	/^c0107db3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107db6	obj/kernel.asm	/^c0107db6:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107db9	obj/kernel.asm	/^c0107db9:	c7 45 bc 01 00 00 00 	movl   $0x1,-0x44(%ebp)$/;"	l
c0107dc0	obj/kernel.asm	/^c0107dc0:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0107dc3	obj/kernel.asm	/^c0107dc3:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0107dc6	obj/kernel.asm	/^c0107dc6:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c0107dc9	obj/kernel.asm	/^c0107dc9:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0107dcc	obj/kernel.asm	/^c0107dcc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107dcf	obj/kernel.asm	/^c0107dcf:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0107dd2	obj/kernel.asm	/^c0107dd2:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0107dd5	obj/kernel.asm	/^c0107dd5:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0107dd8	obj/kernel.asm	/^c0107dd8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107ddb	obj/kernel.asm	/^c0107ddb:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0107dde	obj/kernel.asm	/^c0107dde:	8b 12                	mov    (%edx),%edx$/;"	l
c0107de0	obj/kernel.asm	/^c0107de0:	89 55 b0             	mov    %edx,-0x50(%ebp)$/;"	l
c0107de3	obj/kernel.asm	/^c0107de3:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0107de6	obj/kernel.asm	/^c0107de6:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0107de9	obj/kernel.asm	/^c0107de9:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
c0107dec	obj/kernel.asm	/^c0107dec:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107def	obj/kernel.asm	/^c0107def:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c0107df2	obj/kernel.asm	/^c0107df2:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c0107df5	obj/kernel.asm	/^c0107df5:	89 10                	mov    %edx,(%eax)$/;"	l
c0107df7	obj/kernel.asm	/^c0107df7:	e9 b3 00 00 00       	jmp    c0107eaf <default_free_pages+0x25a>$/;"	l
c0107dfc	obj/kernel.asm	/^c0107dfc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107dff	obj/kernel.asm	/^c0107dff:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107e02	obj/kernel.asm	/^c0107e02:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107e05	obj/kernel.asm	/^c0107e05:	89 c2                	mov    %eax,%edx$/;"	l
c0107e07	obj/kernel.asm	/^c0107e07:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e0a	obj/kernel.asm	/^c0107e0a:	01 d0                	add    %edx,%eax$/;"	l
c0107e0c	obj/kernel.asm	/^c0107e0c:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107e0f	obj/kernel.asm	/^c0107e0f:	75 79                	jne    c0107e8a <default_free_pages+0x235>$/;"	l
c0107e11	obj/kernel.asm	/^c0107e11:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e14	obj/kernel.asm	/^c0107e14:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107e17	obj/kernel.asm	/^c0107e17:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e1a	obj/kernel.asm	/^c0107e1a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107e1d	obj/kernel.asm	/^c0107e1d:	01 c2                	add    %eax,%edx$/;"	l
c0107e1f	obj/kernel.asm	/^c0107e1f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e22	obj/kernel.asm	/^c0107e22:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107e25	obj/kernel.asm	/^c0107e25:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e28	obj/kernel.asm	/^c0107e28:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107e2b	obj/kernel.asm	/^c0107e2b:	c7 45 a8 01 00 00 00 	movl   $0x1,-0x58(%ebp)$/;"	l
c0107e32	obj/kernel.asm	/^c0107e32:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c0107e35	obj/kernel.asm	/^c0107e35:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0107e38	obj/kernel.asm	/^c0107e38:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c0107e3b	obj/kernel.asm	/^c0107e3b:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0107e3e	obj/kernel.asm	/^c0107e3e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e41	obj/kernel.asm	/^c0107e41:	89 45 08             	mov    %eax,0x8(%ebp)$/;"	l
c0107e44	obj/kernel.asm	/^c0107e44:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e47	obj/kernel.asm	/^c0107e47:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107e4a	obj/kernel.asm	/^c0107e4a:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%ebp)$/;"	l
c0107e51	obj/kernel.asm	/^c0107e51:	89 45 9c             	mov    %eax,-0x64(%ebp)$/;"	l
c0107e54	obj/kernel.asm	/^c0107e54:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c0107e57	obj/kernel.asm	/^c0107e57:	8b 55 a0             	mov    -0x60(%ebp),%edx$/;"	l
c0107e5a	obj/kernel.asm	/^c0107e5a:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107e5d	obj/kernel.asm	/^c0107e5d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e60	obj/kernel.asm	/^c0107e60:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0107e63	obj/kernel.asm	/^c0107e63:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0107e66	obj/kernel.asm	/^c0107e66:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0107e69	obj/kernel.asm	/^c0107e69:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107e6c	obj/kernel.asm	/^c0107e6c:	8b 55 98             	mov    -0x68(%ebp),%edx$/;"	l
c0107e6f	obj/kernel.asm	/^c0107e6f:	8b 12                	mov    (%edx),%edx$/;"	l
c0107e71	obj/kernel.asm	/^c0107e71:	89 55 94             	mov    %edx,-0x6c(%ebp)$/;"	l
c0107e74	obj/kernel.asm	/^c0107e74:	89 45 90             	mov    %eax,-0x70(%ebp)$/;"	l
c0107e77	obj/kernel.asm	/^c0107e77:	8b 45 94             	mov    -0x6c(%ebp),%eax$/;"	l
c0107e7a	obj/kernel.asm	/^c0107e7a:	8b 55 90             	mov    -0x70(%ebp),%edx$/;"	l
c0107e7d	obj/kernel.asm	/^c0107e7d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107e80	obj/kernel.asm	/^c0107e80:	8b 45 90             	mov    -0x70(%ebp),%eax$/;"	l
c0107e83	obj/kernel.asm	/^c0107e83:	8b 55 94             	mov    -0x6c(%ebp),%edx$/;"	l
c0107e86	obj/kernel.asm	/^c0107e86:	89 10                	mov    %edx,(%eax)$/;"	l
c0107e88	obj/kernel.asm	/^c0107e88:	eb 25                	jmp    c0107eaf <default_free_pages+0x25a>$/;"	l
c0107e8a	obj/kernel.asm	/^c0107e8a:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0107e8e	obj/kernel.asm	/^c0107e8e:	75 1f                	jne    c0107eaf <default_free_pages+0x25a>$/;"	l
c0107e90	obj/kernel.asm	/^c0107e90:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e93	obj/kernel.asm	/^c0107e93:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107e96	obj/kernel.asm	/^c0107e96:	76 17                	jbe    c0107eaf <default_free_pages+0x25a>$/;"	l
c0107e98	obj/kernel.asm	/^c0107e98:	c7 45 e8 01 00 00 00 	movl   $0x1,-0x18(%ebp)$/;"	l
c0107e9f	obj/kernel.asm	/^c0107e9f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107ea2	obj/kernel.asm	/^c0107ea2:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c0107ea5	obj/kernel.asm	/^c0107ea5:	8b 45 8c             	mov    -0x74(%ebp),%eax$/;"	l
c0107ea8	obj/kernel.asm	/^c0107ea8:	8b 00                	mov    (%eax),%eax$/;"	l
c0107eaa	obj/kernel.asm	/^c0107eaa:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107ead	obj/kernel.asm	/^c0107ead:	eb 0d                	jmp    c0107ebc <default_free_pages+0x267>$/;"	l
c0107eaf	obj/kernel.asm	/^c0107eaf:	81 7d f0 ec 0f 1b c0 	cmpl   $0xc01b0fec,-0x10(%ebp)$/;"	l
c0107eb6	obj/kernel.asm	/^c0107eb6:	0f 85 b6 fe ff ff    	jne    c0107d72 <default_free_pages+0x11d>$/;"	l
c0107ebc	obj/kernel.asm	/^c0107ebc:	8b 15 f4 0f 1b c0    	mov    0xc01b0ff4,%edx$/;"	l
c0107ec2	obj/kernel.asm	/^c0107ec2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107ec5	obj/kernel.asm	/^c0107ec5:	01 d0                	add    %edx,%eax$/;"	l
c0107ec7	obj/kernel.asm	/^c0107ec7:	a3 f4 0f 1b c0       	mov    %eax,0xc01b0ff4$/;"	l
c0107ecc	obj/kernel.asm	/^c0107ecc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107ecf	obj/kernel.asm	/^c0107ecf:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0107ed2	obj/kernel.asm	/^c0107ed2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107ed5	obj/kernel.asm	/^c0107ed5:	89 45 88             	mov    %eax,-0x78(%ebp)$/;"	l
c0107ed8	obj/kernel.asm	/^c0107ed8:	89 55 84             	mov    %edx,-0x7c(%ebp)$/;"	l
c0107edb	obj/kernel.asm	/^c0107edb:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
c0107ede	obj/kernel.asm	/^c0107ede:	8b 00                	mov    (%eax),%eax$/;"	l
c0107ee0	obj/kernel.asm	/^c0107ee0:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c0107ee3	obj/kernel.asm	/^c0107ee3:	89 55 80             	mov    %edx,-0x80(%ebp)$/;"	l
c0107ee6	obj/kernel.asm	/^c0107ee6:	89 85 7c ff ff ff    	mov    %eax,-0x84(%ebp)$/;"	l
c0107eec	obj/kernel.asm	/^c0107eec:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
c0107eef	obj/kernel.asm	/^c0107eef:	89 85 78 ff ff ff    	mov    %eax,-0x88(%ebp)$/;"	l
c0107ef5	obj/kernel.asm	/^c0107ef5:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax$/;"	l
c0107efb	obj/kernel.asm	/^c0107efb:	8b 55 80             	mov    -0x80(%ebp),%edx$/;"	l
c0107efe	obj/kernel.asm	/^c0107efe:	89 10                	mov    %edx,(%eax)$/;"	l
c0107f00	obj/kernel.asm	/^c0107f00:	8b 85 78 ff ff ff    	mov    -0x88(%ebp),%eax$/;"	l
c0107f06	obj/kernel.asm	/^c0107f06:	8b 10                	mov    (%eax),%edx$/;"	l
c0107f08	obj/kernel.asm	/^c0107f08:	8b 85 7c ff ff ff    	mov    -0x84(%ebp),%eax$/;"	l
c0107f0e	obj/kernel.asm	/^c0107f0e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107f11	obj/kernel.asm	/^c0107f11:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c0107f14	obj/kernel.asm	/^c0107f14:	8b 95 78 ff ff ff    	mov    -0x88(%ebp),%edx$/;"	l
c0107f1a	obj/kernel.asm	/^c0107f1a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107f1d	obj/kernel.asm	/^c0107f1d:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c0107f20	obj/kernel.asm	/^c0107f20:	8b 95 7c ff ff ff    	mov    -0x84(%ebp),%edx$/;"	l
c0107f26	obj/kernel.asm	/^c0107f26:	89 10                	mov    %edx,(%eax)$/;"	l
c0107f28	obj/kernel.asm	/^c0107f28:	c9                   	leave  $/;"	l
c0107f29	obj/kernel.asm	/^c0107f29:	c3                   	ret    $/;"	l
c0107f2a	obj/kernel.asm	/^c0107f2a <print_free_link>:$/;"	l
c0107f2a	obj/kernel.asm	/^c0107f2a:	55                   	push   %ebp$/;"	l
c0107f2b	obj/kernel.asm	/^c0107f2b:	89 e5                	mov    %esp,%ebp$/;"	l
c0107f2d	obj/kernel.asm	/^c0107f2d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107f30	obj/kernel.asm	/^c0107f30:	c7 45 f4 ec 0f 1b c0 	movl   $0xc01b0fec,-0xc(%ebp)$/;"	l
c0107f37	obj/kernel.asm	/^c0107f37:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107f3a	obj/kernel.asm	/^c0107f3a:	68 38 d7 10 c0       	push   $0xc010d738$/;"	l
c0107f3f	obj/kernel.asm	/^c0107f3f:	e8 36 83 ff ff       	call   c010027a <cprintf>$/;"	l
c0107f44	obj/kernel.asm	/^c0107f44:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107f47	obj/kernel.asm	/^c0107f47:	eb 31                	jmp    c0107f7a <print_free_link+0x50>$/;"	l
c0107f49	obj/kernel.asm	/^c0107f49:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f4c	obj/kernel.asm	/^c0107f4c:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0107f4f	obj/kernel.asm	/^c0107f4f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107f52	obj/kernel.asm	/^c0107f52:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f55	obj/kernel.asm	/^c0107f55:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107f58	obj/kernel.asm	/^c0107f58:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0107f5b	obj/kernel.asm	/^c0107f5b:	89 c2                	mov    %eax,%edx$/;"	l
c0107f5d	obj/kernel.asm	/^c0107f5d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f60	obj/kernel.asm	/^c0107f60:	01 c2                	add    %eax,%edx$/;"	l
c0107f62	obj/kernel.asm	/^c0107f62:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f65	obj/kernel.asm	/^c0107f65:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107f68	obj/kernel.asm	/^c0107f68:	52                   	push   %edx$/;"	l
c0107f69	obj/kernel.asm	/^c0107f69:	50                   	push   %eax$/;"	l
c0107f6a	obj/kernel.asm	/^c0107f6a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0107f6d	obj/kernel.asm	/^c0107f6d:	68 74 d7 10 c0       	push   $0xc010d774$/;"	l
c0107f72	obj/kernel.asm	/^c0107f72:	e8 03 83 ff ff       	call   c010027a <cprintf>$/;"	l
c0107f77	obj/kernel.asm	/^c0107f77:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107f7a	obj/kernel.asm	/^c0107f7a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107f7d	obj/kernel.asm	/^c0107f7d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107f80	obj/kernel.asm	/^c0107f80:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107f83	obj/kernel.asm	/^c0107f83:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107f86	obj/kernel.asm	/^c0107f86:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107f89	obj/kernel.asm	/^c0107f89:	81 7d f4 ec 0f 1b c0 	cmpl   $0xc01b0fec,-0xc(%ebp)$/;"	l
c0107f90	obj/kernel.asm	/^c0107f90:	75 b7                	jne    c0107f49 <print_free_link+0x1f>$/;"	l
c0107f92	obj/kernel.asm	/^c0107f92:	c9                   	leave  $/;"	l
c0107f93	obj/kernel.asm	/^c0107f93:	c3                   	ret    $/;"	l
c0107f94	obj/kernel.asm	/^c0107f94 <default_nr_free_pages>:$/;"	l
c0107f94	obj/kernel.asm	/^c0107f94:	55                   	push   %ebp$/;"	l
c0107f95	obj/kernel.asm	/^c0107f95:	89 e5                	mov    %esp,%ebp$/;"	l
c0107f97	obj/kernel.asm	/^c0107f97:	a1 f4 0f 1b c0       	mov    0xc01b0ff4,%eax$/;"	l
c0107f9c	obj/kernel.asm	/^c0107f9c:	5d                   	pop    %ebp$/;"	l
c0107f9d	obj/kernel.asm	/^c0107f9d:	c3                   	ret    $/;"	l
c0107f9e	obj/kernel.asm	/^c0107f9e <basic_check>:$/;"	l
c0107f9e	obj/kernel.asm	/^c0107f9e:	55                   	push   %ebp$/;"	l
c0107f9f	obj/kernel.asm	/^c0107f9f:	89 e5                	mov    %esp,%ebp$/;"	l
c0107fa1	obj/kernel.asm	/^c0107fa1:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0107fa4	obj/kernel.asm	/^c0107fa4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0107fab	obj/kernel.asm	/^c0107fab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107fae	obj/kernel.asm	/^c0107fae:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107fb1	obj/kernel.asm	/^c0107fb1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107fb4	obj/kernel.asm	/^c0107fb4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107fb7	obj/kernel.asm	/^c0107fb7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107fba	obj/kernel.asm	/^c0107fba:	6a 01                	push   $0x1$/;"	l
c0107fbc	obj/kernel.asm	/^c0107fbc:	e8 94 b9 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c0107fc1	obj/kernel.asm	/^c0107fc1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107fc4	obj/kernel.asm	/^c0107fc4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107fc7	obj/kernel.asm	/^c0107fc7:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0107fcb	obj/kernel.asm	/^c0107fcb:	75 19                	jne    c0107fe6 <basic_check+0x48>$/;"	l
c0107fcd	obj/kernel.asm	/^c0107fcd:	68 95 d7 10 c0       	push   $0xc010d795$/;"	l
c0107fd2	obj/kernel.asm	/^c0107fd2:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0107fd7	obj/kernel.asm	/^c0107fd7:	68 ce 00 00 00       	push   $0xce$/;"	l
c0107fdc	obj/kernel.asm	/^c0107fdc:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c0107fe1	obj/kernel.asm	/^c0107fe1:	e8 f9 83 ff ff       	call   c01003df <__panic>$/;"	l
c0107fe6	obj/kernel.asm	/^c0107fe6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107fe9	obj/kernel.asm	/^c0107fe9:	6a 01                	push   $0x1$/;"	l
c0107feb	obj/kernel.asm	/^c0107feb:	e8 65 b9 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c0107ff0	obj/kernel.asm	/^c0107ff0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107ff3	obj/kernel.asm	/^c0107ff3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107ff6	obj/kernel.asm	/^c0107ff6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0107ffa	obj/kernel.asm	/^c0107ffa:	75 19                	jne    c0108015 <basic_check+0x77>$/;"	l
c0107ffc	obj/kernel.asm	/^c0107ffc:	68 b1 d7 10 c0       	push   $0xc010d7b1$/;"	l
c0108001	obj/kernel.asm	/^c0108001:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0108006	obj/kernel.asm	/^c0108006:	68 cf 00 00 00       	push   $0xcf$/;"	l
c010800b	obj/kernel.asm	/^c010800b:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c0108010	obj/kernel.asm	/^c0108010:	e8 ca 83 ff ff       	call   c01003df <__panic>$/;"	l
c0108015	obj/kernel.asm	/^c0108015:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108018	obj/kernel.asm	/^c0108018:	6a 01                	push   $0x1$/;"	l
c010801a	obj/kernel.asm	/^c010801a:	e8 36 b9 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c010801f	obj/kernel.asm	/^c010801f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108022	obj/kernel.asm	/^c0108022:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108025	obj/kernel.asm	/^c0108025:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108029	obj/kernel.asm	/^c0108029:	75 19                	jne    c0108044 <basic_check+0xa6>$/;"	l
c010802b	obj/kernel.asm	/^c010802b:	68 cd d7 10 c0       	push   $0xc010d7cd$/;"	l
c0108030	obj/kernel.asm	/^c0108030:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0108035	obj/kernel.asm	/^c0108035:	68 d0 00 00 00       	push   $0xd0$/;"	l
c010803a	obj/kernel.asm	/^c010803a:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c010803f	obj/kernel.asm	/^c010803f:	e8 9b 83 ff ff       	call   c01003df <__panic>$/;"	l
c0108044	obj/kernel.asm	/^c0108044:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108047	obj/kernel.asm	/^c0108047:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010804a	obj/kernel.asm	/^c010804a:	74 10                	je     c010805c <basic_check+0xbe>$/;"	l
c010804c	obj/kernel.asm	/^c010804c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010804f	obj/kernel.asm	/^c010804f:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0108052	obj/kernel.asm	/^c0108052:	74 08                	je     c010805c <basic_check+0xbe>$/;"	l
c0108054	obj/kernel.asm	/^c0108054:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108057	obj/kernel.asm	/^c0108057:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010805a	obj/kernel.asm	/^c010805a:	75 19                	jne    c0108075 <basic_check+0xd7>$/;"	l
c010805c	obj/kernel.asm	/^c010805c:	68 ec d7 10 c0       	push   $0xc010d7ec$/;"	l
c0108061	obj/kernel.asm	/^c0108061:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0108066	obj/kernel.asm	/^c0108066:	68 d2 00 00 00       	push   $0xd2$/;"	l
c010806b	obj/kernel.asm	/^c010806b:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c0108070	obj/kernel.asm	/^c0108070:	e8 6a 83 ff ff       	call   c01003df <__panic>$/;"	l
c0108075	obj/kernel.asm	/^c0108075:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108078	obj/kernel.asm	/^c0108078:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010807b	obj/kernel.asm	/^c010807b:	e8 cb f8 ff ff       	call   c010794b <page_ref>$/;"	l
c0108080	obj/kernel.asm	/^c0108080:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108083	obj/kernel.asm	/^c0108083:	85 c0                	test   %eax,%eax$/;"	l
c0108085	obj/kernel.asm	/^c0108085:	75 24                	jne    c01080ab <basic_check+0x10d>$/;"	l
c0108087	obj/kernel.asm	/^c0108087:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010808a	obj/kernel.asm	/^c010808a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010808d	obj/kernel.asm	/^c010808d:	e8 b9 f8 ff ff       	call   c010794b <page_ref>$/;"	l
c0108092	obj/kernel.asm	/^c0108092:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108095	obj/kernel.asm	/^c0108095:	85 c0                	test   %eax,%eax$/;"	l
c0108097	obj/kernel.asm	/^c0108097:	75 12                	jne    c01080ab <basic_check+0x10d>$/;"	l
c0108099	obj/kernel.asm	/^c0108099:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010809c	obj/kernel.asm	/^c010809c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010809f	obj/kernel.asm	/^c010809f:	e8 a7 f8 ff ff       	call   c010794b <page_ref>$/;"	l
c01080a4	obj/kernel.asm	/^c01080a4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01080a7	obj/kernel.asm	/^c01080a7:	85 c0                	test   %eax,%eax$/;"	l
c01080a9	obj/kernel.asm	/^c01080a9:	74 19                	je     c01080c4 <basic_check+0x126>$/;"	l
c01080ab	obj/kernel.asm	/^c01080ab:	68 10 d8 10 c0       	push   $0xc010d810$/;"	l
c01080b0	obj/kernel.asm	/^c01080b0:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01080b5	obj/kernel.asm	/^c01080b5:	68 d3 00 00 00       	push   $0xd3$/;"	l
c01080ba	obj/kernel.asm	/^c01080ba:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01080bf	obj/kernel.asm	/^c01080bf:	e8 1b 83 ff ff       	call   c01003df <__panic>$/;"	l
c01080c4	obj/kernel.asm	/^c01080c4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01080c7	obj/kernel.asm	/^c01080c7:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01080ca	obj/kernel.asm	/^c01080ca:	e8 69 f8 ff ff       	call   c0107938 <page2pa>$/;"	l
c01080cf	obj/kernel.asm	/^c01080cf:	83 c4 10             	add    $0x10,%esp$/;"	l
c01080d2	obj/kernel.asm	/^c01080d2:	89 c2                	mov    %eax,%edx$/;"	l
c01080d4	obj/kernel.asm	/^c01080d4:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c01080d9	obj/kernel.asm	/^c01080d9:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01080dc	obj/kernel.asm	/^c01080dc:	39 c2                	cmp    %eax,%edx$/;"	l
c01080de	obj/kernel.asm	/^c01080de:	72 19                	jb     c01080f9 <basic_check+0x15b>$/;"	l
c01080e0	obj/kernel.asm	/^c01080e0:	68 4c d8 10 c0       	push   $0xc010d84c$/;"	l
c01080e5	obj/kernel.asm	/^c01080e5:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01080ea	obj/kernel.asm	/^c01080ea:	68 d5 00 00 00       	push   $0xd5$/;"	l
c01080ef	obj/kernel.asm	/^c01080ef:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01080f4	obj/kernel.asm	/^c01080f4:	e8 e6 82 ff ff       	call   c01003df <__panic>$/;"	l
c01080f9	obj/kernel.asm	/^c01080f9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01080fc	obj/kernel.asm	/^c01080fc:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01080ff	obj/kernel.asm	/^c01080ff:	e8 34 f8 ff ff       	call   c0107938 <page2pa>$/;"	l
c0108104	obj/kernel.asm	/^c0108104:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108107	obj/kernel.asm	/^c0108107:	89 c2                	mov    %eax,%edx$/;"	l
c0108109	obj/kernel.asm	/^c0108109:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c010810e	obj/kernel.asm	/^c010810e:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0108111	obj/kernel.asm	/^c0108111:	39 c2                	cmp    %eax,%edx$/;"	l
c0108113	obj/kernel.asm	/^c0108113:	72 19                	jb     c010812e <basic_check+0x190>$/;"	l
c0108115	obj/kernel.asm	/^c0108115:	68 69 d8 10 c0       	push   $0xc010d869$/;"	l
c010811a	obj/kernel.asm	/^c010811a:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c010811f	obj/kernel.asm	/^c010811f:	68 d6 00 00 00       	push   $0xd6$/;"	l
c0108124	obj/kernel.asm	/^c0108124:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c0108129	obj/kernel.asm	/^c0108129:	e8 b1 82 ff ff       	call   c01003df <__panic>$/;"	l
c010812e	obj/kernel.asm	/^c010812e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108131	obj/kernel.asm	/^c0108131:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108134	obj/kernel.asm	/^c0108134:	e8 ff f7 ff ff       	call   c0107938 <page2pa>$/;"	l
c0108139	obj/kernel.asm	/^c0108139:	83 c4 10             	add    $0x10,%esp$/;"	l
c010813c	obj/kernel.asm	/^c010813c:	89 c2                	mov    %eax,%edx$/;"	l
c010813e	obj/kernel.asm	/^c010813e:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c0108143	obj/kernel.asm	/^c0108143:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0108146	obj/kernel.asm	/^c0108146:	39 c2                	cmp    %eax,%edx$/;"	l
c0108148	obj/kernel.asm	/^c0108148:	72 19                	jb     c0108163 <basic_check+0x1c5>$/;"	l
c010814a	obj/kernel.asm	/^c010814a:	68 86 d8 10 c0       	push   $0xc010d886$/;"	l
c010814f	obj/kernel.asm	/^c010814f:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0108154	obj/kernel.asm	/^c0108154:	68 d7 00 00 00       	push   $0xd7$/;"	l
c0108159	obj/kernel.asm	/^c0108159:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c010815e	obj/kernel.asm	/^c010815e:	e8 7c 82 ff ff       	call   c01003df <__panic>$/;"	l
c0108163	obj/kernel.asm	/^c0108163:	a1 ec 0f 1b c0       	mov    0xc01b0fec,%eax$/;"	l
c0108168	obj/kernel.asm	/^c0108168:	8b 15 f0 0f 1b c0    	mov    0xc01b0ff0,%edx$/;"	l
c010816e	obj/kernel.asm	/^c010816e:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0108171	obj/kernel.asm	/^c0108171:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0108174	obj/kernel.asm	/^c0108174:	c7 45 e0 ec 0f 1b c0 	movl   $0xc01b0fec,-0x20(%ebp)$/;"	l
c010817b	obj/kernel.asm	/^c010817b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010817e	obj/kernel.asm	/^c010817e:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0108181	obj/kernel.asm	/^c0108181:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108184	obj/kernel.asm	/^c0108184:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108187	obj/kernel.asm	/^c0108187:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010818a	obj/kernel.asm	/^c010818a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010818d	obj/kernel.asm	/^c010818d:	89 10                	mov    %edx,(%eax)$/;"	l
c010818f	obj/kernel.asm	/^c010818f:	c7 45 dc ec 0f 1b c0 	movl   $0xc01b0fec,-0x24(%ebp)$/;"	l
c0108196	obj/kernel.asm	/^c0108196:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108199	obj/kernel.asm	/^c0108199:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010819c	obj/kernel.asm	/^c010819c:	39 45 dc             	cmp    %eax,-0x24(%ebp)$/;"	l
c010819f	obj/kernel.asm	/^c010819f:	0f 94 c0             	sete   %al$/;"	l
c01081a2	obj/kernel.asm	/^c01081a2:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01081a5	obj/kernel.asm	/^c01081a5:	85 c0                	test   %eax,%eax$/;"	l
c01081a7	obj/kernel.asm	/^c01081a7:	75 19                	jne    c01081c2 <basic_check+0x224>$/;"	l
c01081a9	obj/kernel.asm	/^c01081a9:	68 a3 d8 10 c0       	push   $0xc010d8a3$/;"	l
c01081ae	obj/kernel.asm	/^c01081ae:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01081b3	obj/kernel.asm	/^c01081b3:	68 db 00 00 00       	push   $0xdb$/;"	l
c01081b8	obj/kernel.asm	/^c01081b8:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01081bd	obj/kernel.asm	/^c01081bd:	e8 1d 82 ff ff       	call   c01003df <__panic>$/;"	l
c01081c2	obj/kernel.asm	/^c01081c2:	a1 f4 0f 1b c0       	mov    0xc01b0ff4,%eax$/;"	l
c01081c7	obj/kernel.asm	/^c01081c7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01081ca	obj/kernel.asm	/^c01081ca:	c7 05 f4 0f 1b c0 00 	movl   $0x0,0xc01b0ff4$/;"	l
c01081d1	obj/kernel.asm	/^c01081d1:	00 00 00 $/;"	l
c01081d4	obj/kernel.asm	/^c01081d4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01081d7	obj/kernel.asm	/^c01081d7:	6a 01                	push   $0x1$/;"	l
c01081d9	obj/kernel.asm	/^c01081d9:	e8 77 b7 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c01081de	obj/kernel.asm	/^c01081de:	83 c4 10             	add    $0x10,%esp$/;"	l
c01081e1	obj/kernel.asm	/^c01081e1:	85 c0                	test   %eax,%eax$/;"	l
c01081e3	obj/kernel.asm	/^c01081e3:	74 19                	je     c01081fe <basic_check+0x260>$/;"	l
c01081e5	obj/kernel.asm	/^c01081e5:	68 ba d8 10 c0       	push   $0xc010d8ba$/;"	l
c01081ea	obj/kernel.asm	/^c01081ea:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01081ef	obj/kernel.asm	/^c01081ef:	68 e0 00 00 00       	push   $0xe0$/;"	l
c01081f4	obj/kernel.asm	/^c01081f4:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01081f9	obj/kernel.asm	/^c01081f9:	e8 e1 81 ff ff       	call   c01003df <__panic>$/;"	l
c01081fe	obj/kernel.asm	/^c01081fe:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108201	obj/kernel.asm	/^c0108201:	6a 01                	push   $0x1$/;"	l
c0108203	obj/kernel.asm	/^c0108203:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0108206	obj/kernel.asm	/^c0108206:	e8 b6 b7 ff ff       	call   c01039c1 <free_pages>$/;"	l
c010820b	obj/kernel.asm	/^c010820b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010820e	obj/kernel.asm	/^c010820e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108211	obj/kernel.asm	/^c0108211:	6a 01                	push   $0x1$/;"	l
c0108213	obj/kernel.asm	/^c0108213:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108216	obj/kernel.asm	/^c0108216:	e8 a6 b7 ff ff       	call   c01039c1 <free_pages>$/;"	l
c010821b	obj/kernel.asm	/^c010821b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010821e	obj/kernel.asm	/^c010821e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108221	obj/kernel.asm	/^c0108221:	6a 01                	push   $0x1$/;"	l
c0108223	obj/kernel.asm	/^c0108223:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108226	obj/kernel.asm	/^c0108226:	e8 96 b7 ff ff       	call   c01039c1 <free_pages>$/;"	l
c010822b	obj/kernel.asm	/^c010822b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010822e	obj/kernel.asm	/^c010822e:	a1 f4 0f 1b c0       	mov    0xc01b0ff4,%eax$/;"	l
c0108233	obj/kernel.asm	/^c0108233:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0108236	obj/kernel.asm	/^c0108236:	74 19                	je     c0108251 <basic_check+0x2b3>$/;"	l
c0108238	obj/kernel.asm	/^c0108238:	68 cf d8 10 c0       	push   $0xc010d8cf$/;"	l
c010823d	obj/kernel.asm	/^c010823d:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0108242	obj/kernel.asm	/^c0108242:	68 e5 00 00 00       	push   $0xe5$/;"	l
c0108247	obj/kernel.asm	/^c0108247:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c010824c	obj/kernel.asm	/^c010824c:	e8 8e 81 ff ff       	call   c01003df <__panic>$/;"	l
c0108251	obj/kernel.asm	/^c0108251:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108254	obj/kernel.asm	/^c0108254:	6a 01                	push   $0x1$/;"	l
c0108256	obj/kernel.asm	/^c0108256:	e8 fa b6 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c010825b	obj/kernel.asm	/^c010825b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010825e	obj/kernel.asm	/^c010825e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108261	obj/kernel.asm	/^c0108261:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0108265	obj/kernel.asm	/^c0108265:	75 19                	jne    c0108280 <basic_check+0x2e2>$/;"	l
c0108267	obj/kernel.asm	/^c0108267:	68 95 d7 10 c0       	push   $0xc010d795$/;"	l
c010826c	obj/kernel.asm	/^c010826c:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0108271	obj/kernel.asm	/^c0108271:	68 e7 00 00 00       	push   $0xe7$/;"	l
c0108276	obj/kernel.asm	/^c0108276:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c010827b	obj/kernel.asm	/^c010827b:	e8 5f 81 ff ff       	call   c01003df <__panic>$/;"	l
c0108280	obj/kernel.asm	/^c0108280:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108283	obj/kernel.asm	/^c0108283:	6a 01                	push   $0x1$/;"	l
c0108285	obj/kernel.asm	/^c0108285:	e8 cb b6 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c010828a	obj/kernel.asm	/^c010828a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010828d	obj/kernel.asm	/^c010828d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108290	obj/kernel.asm	/^c0108290:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0108294	obj/kernel.asm	/^c0108294:	75 19                	jne    c01082af <basic_check+0x311>$/;"	l
c0108296	obj/kernel.asm	/^c0108296:	68 b1 d7 10 c0       	push   $0xc010d7b1$/;"	l
c010829b	obj/kernel.asm	/^c010829b:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01082a0	obj/kernel.asm	/^c01082a0:	68 e8 00 00 00       	push   $0xe8$/;"	l
c01082a5	obj/kernel.asm	/^c01082a5:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01082aa	obj/kernel.asm	/^c01082aa:	e8 30 81 ff ff       	call   c01003df <__panic>$/;"	l
c01082af	obj/kernel.asm	/^c01082af:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01082b2	obj/kernel.asm	/^c01082b2:	6a 01                	push   $0x1$/;"	l
c01082b4	obj/kernel.asm	/^c01082b4:	e8 9c b6 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c01082b9	obj/kernel.asm	/^c01082b9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01082bc	obj/kernel.asm	/^c01082bc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01082bf	obj/kernel.asm	/^c01082bf:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01082c3	obj/kernel.asm	/^c01082c3:	75 19                	jne    c01082de <basic_check+0x340>$/;"	l
c01082c5	obj/kernel.asm	/^c01082c5:	68 cd d7 10 c0       	push   $0xc010d7cd$/;"	l
c01082ca	obj/kernel.asm	/^c01082ca:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01082cf	obj/kernel.asm	/^c01082cf:	68 e9 00 00 00       	push   $0xe9$/;"	l
c01082d4	obj/kernel.asm	/^c01082d4:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01082d9	obj/kernel.asm	/^c01082d9:	e8 01 81 ff ff       	call   c01003df <__panic>$/;"	l
c01082de	obj/kernel.asm	/^c01082de:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01082e1	obj/kernel.asm	/^c01082e1:	6a 01                	push   $0x1$/;"	l
c01082e3	obj/kernel.asm	/^c01082e3:	e8 6d b6 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c01082e8	obj/kernel.asm	/^c01082e8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01082eb	obj/kernel.asm	/^c01082eb:	85 c0                	test   %eax,%eax$/;"	l
c01082ed	obj/kernel.asm	/^c01082ed:	74 19                	je     c0108308 <basic_check+0x36a>$/;"	l
c01082ef	obj/kernel.asm	/^c01082ef:	68 ba d8 10 c0       	push   $0xc010d8ba$/;"	l
c01082f4	obj/kernel.asm	/^c01082f4:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01082f9	obj/kernel.asm	/^c01082f9:	68 eb 00 00 00       	push   $0xeb$/;"	l
c01082fe	obj/kernel.asm	/^c01082fe:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c0108303	obj/kernel.asm	/^c0108303:	e8 d7 80 ff ff       	call   c01003df <__panic>$/;"	l
c0108308	obj/kernel.asm	/^c0108308:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010830b	obj/kernel.asm	/^c010830b:	6a 01                	push   $0x1$/;"	l
c010830d	obj/kernel.asm	/^c010830d:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0108310	obj/kernel.asm	/^c0108310:	e8 ac b6 ff ff       	call   c01039c1 <free_pages>$/;"	l
c0108315	obj/kernel.asm	/^c0108315:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108318	obj/kernel.asm	/^c0108318:	c7 45 d8 ec 0f 1b c0 	movl   $0xc01b0fec,-0x28(%ebp)$/;"	l
c010831f	obj/kernel.asm	/^c010831f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0108322	obj/kernel.asm	/^c0108322:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108325	obj/kernel.asm	/^c0108325:	39 45 d8             	cmp    %eax,-0x28(%ebp)$/;"	l
c0108328	obj/kernel.asm	/^c0108328:	0f 94 c0             	sete   %al$/;"	l
c010832b	obj/kernel.asm	/^c010832b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010832e	obj/kernel.asm	/^c010832e:	85 c0                	test   %eax,%eax$/;"	l
c0108330	obj/kernel.asm	/^c0108330:	74 19                	je     c010834b <basic_check+0x3ad>$/;"	l
c0108332	obj/kernel.asm	/^c0108332:	68 dc d8 10 c0       	push   $0xc010d8dc$/;"	l
c0108337	obj/kernel.asm	/^c0108337:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c010833c	obj/kernel.asm	/^c010833c:	68 ee 00 00 00       	push   $0xee$/;"	l
c0108341	obj/kernel.asm	/^c0108341:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c0108346	obj/kernel.asm	/^c0108346:	e8 94 80 ff ff       	call   c01003df <__panic>$/;"	l
c010834b	obj/kernel.asm	/^c010834b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010834e	obj/kernel.asm	/^c010834e:	6a 01                	push   $0x1$/;"	l
c0108350	obj/kernel.asm	/^c0108350:	e8 00 b6 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c0108355	obj/kernel.asm	/^c0108355:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108358	obj/kernel.asm	/^c0108358:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010835b	obj/kernel.asm	/^c010835b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010835e	obj/kernel.asm	/^c010835e:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0108361	obj/kernel.asm	/^c0108361:	74 19                	je     c010837c <basic_check+0x3de>$/;"	l
c0108363	obj/kernel.asm	/^c0108363:	68 f4 d8 10 c0       	push   $0xc010d8f4$/;"	l
c0108368	obj/kernel.asm	/^c0108368:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c010836d	obj/kernel.asm	/^c010836d:	68 f1 00 00 00       	push   $0xf1$/;"	l
c0108372	obj/kernel.asm	/^c0108372:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c0108377	obj/kernel.asm	/^c0108377:	e8 63 80 ff ff       	call   c01003df <__panic>$/;"	l
c010837c	obj/kernel.asm	/^c010837c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010837f	obj/kernel.asm	/^c010837f:	6a 01                	push   $0x1$/;"	l
c0108381	obj/kernel.asm	/^c0108381:	e8 cf b5 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c0108386	obj/kernel.asm	/^c0108386:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108389	obj/kernel.asm	/^c0108389:	85 c0                	test   %eax,%eax$/;"	l
c010838b	obj/kernel.asm	/^c010838b:	74 19                	je     c01083a6 <basic_check+0x408>$/;"	l
c010838d	obj/kernel.asm	/^c010838d:	68 ba d8 10 c0       	push   $0xc010d8ba$/;"	l
c0108392	obj/kernel.asm	/^c0108392:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0108397	obj/kernel.asm	/^c0108397:	68 f2 00 00 00       	push   $0xf2$/;"	l
c010839c	obj/kernel.asm	/^c010839c:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01083a1	obj/kernel.asm	/^c01083a1:	e8 39 80 ff ff       	call   c01003df <__panic>$/;"	l
c01083a6	obj/kernel.asm	/^c01083a6:	a1 f4 0f 1b c0       	mov    0xc01b0ff4,%eax$/;"	l
c01083ab	obj/kernel.asm	/^c01083ab:	85 c0                	test   %eax,%eax$/;"	l
c01083ad	obj/kernel.asm	/^c01083ad:	74 19                	je     c01083c8 <basic_check+0x42a>$/;"	l
c01083af	obj/kernel.asm	/^c01083af:	68 0d d9 10 c0       	push   $0xc010d90d$/;"	l
c01083b4	obj/kernel.asm	/^c01083b4:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01083b9	obj/kernel.asm	/^c01083b9:	68 f4 00 00 00       	push   $0xf4$/;"	l
c01083be	obj/kernel.asm	/^c01083be:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01083c3	obj/kernel.asm	/^c01083c3:	e8 17 80 ff ff       	call   c01003df <__panic>$/;"	l
c01083c8	obj/kernel.asm	/^c01083c8:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01083cb	obj/kernel.asm	/^c01083cb:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01083ce	obj/kernel.asm	/^c01083ce:	a3 ec 0f 1b c0       	mov    %eax,0xc01b0fec$/;"	l
c01083d3	obj/kernel.asm	/^c01083d3:	89 15 f0 0f 1b c0    	mov    %edx,0xc01b0ff0$/;"	l
c01083d9	obj/kernel.asm	/^c01083d9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01083dc	obj/kernel.asm	/^c01083dc:	a3 f4 0f 1b c0       	mov    %eax,0xc01b0ff4$/;"	l
c01083e1	obj/kernel.asm	/^c01083e1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01083e4	obj/kernel.asm	/^c01083e4:	6a 01                	push   $0x1$/;"	l
c01083e6	obj/kernel.asm	/^c01083e6:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01083e9	obj/kernel.asm	/^c01083e9:	e8 d3 b5 ff ff       	call   c01039c1 <free_pages>$/;"	l
c01083ee	obj/kernel.asm	/^c01083ee:	83 c4 10             	add    $0x10,%esp$/;"	l
c01083f1	obj/kernel.asm	/^c01083f1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01083f4	obj/kernel.asm	/^c01083f4:	6a 01                	push   $0x1$/;"	l
c01083f6	obj/kernel.asm	/^c01083f6:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01083f9	obj/kernel.asm	/^c01083f9:	e8 c3 b5 ff ff       	call   c01039c1 <free_pages>$/;"	l
c01083fe	obj/kernel.asm	/^c01083fe:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108401	obj/kernel.asm	/^c0108401:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108404	obj/kernel.asm	/^c0108404:	6a 01                	push   $0x1$/;"	l
c0108406	obj/kernel.asm	/^c0108406:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108409	obj/kernel.asm	/^c0108409:	e8 b3 b5 ff ff       	call   c01039c1 <free_pages>$/;"	l
c010840e	obj/kernel.asm	/^c010840e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108411	obj/kernel.asm	/^c0108411:	c9                   	leave  $/;"	l
c0108412	obj/kernel.asm	/^c0108412:	c3                   	ret    $/;"	l
c0108413	obj/kernel.asm	/^c0108413 <default_check>:$/;"	l
c0108413	obj/kernel.asm	/^c0108413:	55                   	push   %ebp$/;"	l
c0108414	obj/kernel.asm	/^c0108414:	89 e5                	mov    %esp,%ebp$/;"	l
c0108416	obj/kernel.asm	/^c0108416:	53                   	push   %ebx$/;"	l
c0108417	obj/kernel.asm	/^c0108417:	81 ec 84 00 00 00    	sub    $0x84,%esp$/;"	l
c010841d	obj/kernel.asm	/^c010841d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108424	obj/kernel.asm	/^c0108424:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010842b	obj/kernel.asm	/^c010842b:	c7 45 ec ec 0f 1b c0 	movl   $0xc01b0fec,-0x14(%ebp)$/;"	l
c0108432	obj/kernel.asm	/^c0108432:	eb 60                	jmp    c0108494 <default_check+0x81>$/;"	l
c0108434	obj/kernel.asm	/^c0108434:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108437	obj/kernel.asm	/^c0108437:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c010843a	obj/kernel.asm	/^c010843a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010843d	obj/kernel.asm	/^c010843d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108440	obj/kernel.asm	/^c0108440:	83 c0 04             	add    $0x4,%eax$/;"	l
c0108443	obj/kernel.asm	/^c0108443:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)$/;"	l
c010844a	obj/kernel.asm	/^c010844a:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010844d	obj/kernel.asm	/^c010844d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0108450	obj/kernel.asm	/^c0108450:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0108453	obj/kernel.asm	/^c0108453:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0108456	obj/kernel.asm	/^c0108456:	19 c0                	sbb    %eax,%eax$/;"	l
c0108458	obj/kernel.asm	/^c0108458:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010845b	obj/kernel.asm	/^c010845b:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c010845f	obj/kernel.asm	/^c010845f:	0f 95 c0             	setne  %al$/;"	l
c0108462	obj/kernel.asm	/^c0108462:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108465	obj/kernel.asm	/^c0108465:	85 c0                	test   %eax,%eax$/;"	l
c0108467	obj/kernel.asm	/^c0108467:	75 19                	jne    c0108482 <default_check+0x6f>$/;"	l
c0108469	obj/kernel.asm	/^c0108469:	68 1a d9 10 c0       	push   $0xc010d91a$/;"	l
c010846e	obj/kernel.asm	/^c010846e:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0108473	obj/kernel.asm	/^c0108473:	68 05 01 00 00       	push   $0x105$/;"	l
c0108478	obj/kernel.asm	/^c0108478:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c010847d	obj/kernel.asm	/^c010847d:	e8 5d 7f ff ff       	call   c01003df <__panic>$/;"	l
c0108482	obj/kernel.asm	/^c0108482:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108486	obj/kernel.asm	/^c0108486:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108489	obj/kernel.asm	/^c0108489:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010848c	obj/kernel.asm	/^c010848c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010848f	obj/kernel.asm	/^c010848f:	01 d0                	add    %edx,%eax$/;"	l
c0108491	obj/kernel.asm	/^c0108491:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108494	obj/kernel.asm	/^c0108494:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108497	obj/kernel.asm	/^c0108497:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010849a	obj/kernel.asm	/^c010849a:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010849d	obj/kernel.asm	/^c010849d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01084a0	obj/kernel.asm	/^c01084a0:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01084a3	obj/kernel.asm	/^c01084a3:	81 7d ec ec 0f 1b c0 	cmpl   $0xc01b0fec,-0x14(%ebp)$/;"	l
c01084aa	obj/kernel.asm	/^c01084aa:	75 88                	jne    c0108434 <default_check+0x21>$/;"	l
c01084ac	obj/kernel.asm	/^c01084ac:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c01084af	obj/kernel.asm	/^c01084af:	e8 41 b5 ff ff       	call   c01039f5 <nr_free_pages>$/;"	l
c01084b4	obj/kernel.asm	/^c01084b4:	39 c3                	cmp    %eax,%ebx$/;"	l
c01084b6	obj/kernel.asm	/^c01084b6:	74 19                	je     c01084d1 <default_check+0xbe>$/;"	l
c01084b8	obj/kernel.asm	/^c01084b8:	68 2a d9 10 c0       	push   $0xc010d92a$/;"	l
c01084bd	obj/kernel.asm	/^c01084bd:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01084c2	obj/kernel.asm	/^c01084c2:	68 08 01 00 00       	push   $0x108$/;"	l
c01084c7	obj/kernel.asm	/^c01084c7:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01084cc	obj/kernel.asm	/^c01084cc:	e8 0e 7f ff ff       	call   c01003df <__panic>$/;"	l
c01084d1	obj/kernel.asm	/^c01084d1:	e8 c8 fa ff ff       	call   c0107f9e <basic_check>$/;"	l
c01084d6	obj/kernel.asm	/^c01084d6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01084d9	obj/kernel.asm	/^c01084d9:	6a 05                	push   $0x5$/;"	l
c01084db	obj/kernel.asm	/^c01084db:	e8 75 b4 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c01084e0	obj/kernel.asm	/^c01084e0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01084e3	obj/kernel.asm	/^c01084e3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01084e6	obj/kernel.asm	/^c01084e6:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01084ea	obj/kernel.asm	/^c01084ea:	75 19                	jne    c0108505 <default_check+0xf2>$/;"	l
c01084ec	obj/kernel.asm	/^c01084ec:	68 43 d9 10 c0       	push   $0xc010d943$/;"	l
c01084f1	obj/kernel.asm	/^c01084f1:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01084f6	obj/kernel.asm	/^c01084f6:	68 0d 01 00 00       	push   $0x10d$/;"	l
c01084fb	obj/kernel.asm	/^c01084fb:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c0108500	obj/kernel.asm	/^c0108500:	e8 da 7e ff ff       	call   c01003df <__panic>$/;"	l
c0108505	obj/kernel.asm	/^c0108505:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108508	obj/kernel.asm	/^c0108508:	83 c0 04             	add    $0x4,%eax$/;"	l
c010850b	obj/kernel.asm	/^c010850b:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c0108512	obj/kernel.asm	/^c0108512:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0108515	obj/kernel.asm	/^c0108515:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0108518	obj/kernel.asm	/^c0108518:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c010851b	obj/kernel.asm	/^c010851b:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010851e	obj/kernel.asm	/^c010851e:	19 c0                	sbb    %eax,%eax$/;"	l
c0108520	obj/kernel.asm	/^c0108520:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0108523	obj/kernel.asm	/^c0108523:	83 7d b8 00          	cmpl   $0x0,-0x48(%ebp)$/;"	l
c0108527	obj/kernel.asm	/^c0108527:	0f 95 c0             	setne  %al$/;"	l
c010852a	obj/kernel.asm	/^c010852a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010852d	obj/kernel.asm	/^c010852d:	85 c0                	test   %eax,%eax$/;"	l
c010852f	obj/kernel.asm	/^c010852f:	74 19                	je     c010854a <default_check+0x137>$/;"	l
c0108531	obj/kernel.asm	/^c0108531:	68 4e d9 10 c0       	push   $0xc010d94e$/;"	l
c0108536	obj/kernel.asm	/^c0108536:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c010853b	obj/kernel.asm	/^c010853b:	68 0e 01 00 00       	push   $0x10e$/;"	l
c0108540	obj/kernel.asm	/^c0108540:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c0108545	obj/kernel.asm	/^c0108545:	e8 95 7e ff ff       	call   c01003df <__panic>$/;"	l
c010854a	obj/kernel.asm	/^c010854a:	a1 ec 0f 1b c0       	mov    0xc01b0fec,%eax$/;"	l
c010854f	obj/kernel.asm	/^c010854f:	8b 15 f0 0f 1b c0    	mov    0xc01b0ff0,%edx$/;"	l
c0108555	obj/kernel.asm	/^c0108555:	89 45 80             	mov    %eax,-0x80(%ebp)$/;"	l
c0108558	obj/kernel.asm	/^c0108558:	89 55 84             	mov    %edx,-0x7c(%ebp)$/;"	l
c010855b	obj/kernel.asm	/^c010855b:	c7 45 b4 ec 0f 1b c0 	movl   $0xc01b0fec,-0x4c(%ebp)$/;"	l
c0108562	obj/kernel.asm	/^c0108562:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0108565	obj/kernel.asm	/^c0108565:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0108568	obj/kernel.asm	/^c0108568:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010856b	obj/kernel.asm	/^c010856b:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010856e	obj/kernel.asm	/^c010856e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108571	obj/kernel.asm	/^c0108571:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0108574	obj/kernel.asm	/^c0108574:	89 10                	mov    %edx,(%eax)$/;"	l
c0108576	obj/kernel.asm	/^c0108576:	c7 45 b0 ec 0f 1b c0 	movl   $0xc01b0fec,-0x50(%ebp)$/;"	l
c010857d	obj/kernel.asm	/^c010857d:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0108580	obj/kernel.asm	/^c0108580:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108583	obj/kernel.asm	/^c0108583:	39 45 b0             	cmp    %eax,-0x50(%ebp)$/;"	l
c0108586	obj/kernel.asm	/^c0108586:	0f 94 c0             	sete   %al$/;"	l
c0108589	obj/kernel.asm	/^c0108589:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010858c	obj/kernel.asm	/^c010858c:	85 c0                	test   %eax,%eax$/;"	l
c010858e	obj/kernel.asm	/^c010858e:	75 19                	jne    c01085a9 <default_check+0x196>$/;"	l
c0108590	obj/kernel.asm	/^c0108590:	68 a3 d8 10 c0       	push   $0xc010d8a3$/;"	l
c0108595	obj/kernel.asm	/^c0108595:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c010859a	obj/kernel.asm	/^c010859a:	68 12 01 00 00       	push   $0x112$/;"	l
c010859f	obj/kernel.asm	/^c010859f:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01085a4	obj/kernel.asm	/^c01085a4:	e8 36 7e ff ff       	call   c01003df <__panic>$/;"	l
c01085a9	obj/kernel.asm	/^c01085a9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01085ac	obj/kernel.asm	/^c01085ac:	6a 01                	push   $0x1$/;"	l
c01085ae	obj/kernel.asm	/^c01085ae:	e8 a2 b3 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c01085b3	obj/kernel.asm	/^c01085b3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01085b6	obj/kernel.asm	/^c01085b6:	85 c0                	test   %eax,%eax$/;"	l
c01085b8	obj/kernel.asm	/^c01085b8:	74 19                	je     c01085d3 <default_check+0x1c0>$/;"	l
c01085ba	obj/kernel.asm	/^c01085ba:	68 ba d8 10 c0       	push   $0xc010d8ba$/;"	l
c01085bf	obj/kernel.asm	/^c01085bf:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01085c4	obj/kernel.asm	/^c01085c4:	68 13 01 00 00       	push   $0x113$/;"	l
c01085c9	obj/kernel.asm	/^c01085c9:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01085ce	obj/kernel.asm	/^c01085ce:	e8 0c 7e ff ff       	call   c01003df <__panic>$/;"	l
c01085d3	obj/kernel.asm	/^c01085d3:	a1 f4 0f 1b c0       	mov    0xc01b0ff4,%eax$/;"	l
c01085d8	obj/kernel.asm	/^c01085d8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01085db	obj/kernel.asm	/^c01085db:	c7 05 f4 0f 1b c0 00 	movl   $0x0,0xc01b0ff4$/;"	l
c01085e2	obj/kernel.asm	/^c01085e2:	00 00 00 $/;"	l
c01085e5	obj/kernel.asm	/^c01085e5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01085e8	obj/kernel.asm	/^c01085e8:	83 c0 40             	add    $0x40,%eax$/;"	l
c01085eb	obj/kernel.asm	/^c01085eb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01085ee	obj/kernel.asm	/^c01085ee:	6a 03                	push   $0x3$/;"	l
c01085f0	obj/kernel.asm	/^c01085f0:	50                   	push   %eax$/;"	l
c01085f1	obj/kernel.asm	/^c01085f1:	e8 cb b3 ff ff       	call   c01039c1 <free_pages>$/;"	l
c01085f6	obj/kernel.asm	/^c01085f6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01085f9	obj/kernel.asm	/^c01085f9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01085fc	obj/kernel.asm	/^c01085fc:	6a 04                	push   $0x4$/;"	l
c01085fe	obj/kernel.asm	/^c01085fe:	e8 52 b3 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c0108603	obj/kernel.asm	/^c0108603:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108606	obj/kernel.asm	/^c0108606:	85 c0                	test   %eax,%eax$/;"	l
c0108608	obj/kernel.asm	/^c0108608:	74 19                	je     c0108623 <default_check+0x210>$/;"	l
c010860a	obj/kernel.asm	/^c010860a:	68 60 d9 10 c0       	push   $0xc010d960$/;"	l
c010860f	obj/kernel.asm	/^c010860f:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0108614	obj/kernel.asm	/^c0108614:	68 19 01 00 00       	push   $0x119$/;"	l
c0108619	obj/kernel.asm	/^c0108619:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c010861e	obj/kernel.asm	/^c010861e:	e8 bc 7d ff ff       	call   c01003df <__panic>$/;"	l
c0108623	obj/kernel.asm	/^c0108623:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108626	obj/kernel.asm	/^c0108626:	83 c0 40             	add    $0x40,%eax$/;"	l
c0108629	obj/kernel.asm	/^c0108629:	83 c0 04             	add    $0x4,%eax$/;"	l
c010862c	obj/kernel.asm	/^c010862c:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%ebp)$/;"	l
c0108633	obj/kernel.asm	/^c0108633:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c0108636	obj/kernel.asm	/^c0108636:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0108639	obj/kernel.asm	/^c0108639:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
c010863c	obj/kernel.asm	/^c010863c:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010863f	obj/kernel.asm	/^c010863f:	19 c0                	sbb    %eax,%eax$/;"	l
c0108641	obj/kernel.asm	/^c0108641:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c0108644	obj/kernel.asm	/^c0108644:	83 7d a4 00          	cmpl   $0x0,-0x5c(%ebp)$/;"	l
c0108648	obj/kernel.asm	/^c0108648:	0f 95 c0             	setne  %al$/;"	l
c010864b	obj/kernel.asm	/^c010864b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010864e	obj/kernel.asm	/^c010864e:	85 c0                	test   %eax,%eax$/;"	l
c0108650	obj/kernel.asm	/^c0108650:	74 0e                	je     c0108660 <default_check+0x24d>$/;"	l
c0108652	obj/kernel.asm	/^c0108652:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108655	obj/kernel.asm	/^c0108655:	83 c0 40             	add    $0x40,%eax$/;"	l
c0108658	obj/kernel.asm	/^c0108658:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010865b	obj/kernel.asm	/^c010865b:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010865e	obj/kernel.asm	/^c010865e:	74 19                	je     c0108679 <default_check+0x266>$/;"	l
c0108660	obj/kernel.asm	/^c0108660:	68 78 d9 10 c0       	push   $0xc010d978$/;"	l
c0108665	obj/kernel.asm	/^c0108665:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c010866a	obj/kernel.asm	/^c010866a:	68 1a 01 00 00       	push   $0x11a$/;"	l
c010866f	obj/kernel.asm	/^c010866f:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c0108674	obj/kernel.asm	/^c0108674:	e8 66 7d ff ff       	call   c01003df <__panic>$/;"	l
c0108679	obj/kernel.asm	/^c0108679:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010867c	obj/kernel.asm	/^c010867c:	6a 03                	push   $0x3$/;"	l
c010867e	obj/kernel.asm	/^c010867e:	e8 d2 b2 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c0108683	obj/kernel.asm	/^c0108683:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108686	obj/kernel.asm	/^c0108686:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0108689	obj/kernel.asm	/^c0108689:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010868d	obj/kernel.asm	/^c010868d:	75 19                	jne    c01086a8 <default_check+0x295>$/;"	l
c010868f	obj/kernel.asm	/^c010868f:	68 a4 d9 10 c0       	push   $0xc010d9a4$/;"	l
c0108694	obj/kernel.asm	/^c0108694:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0108699	obj/kernel.asm	/^c0108699:	68 1b 01 00 00       	push   $0x11b$/;"	l
c010869e	obj/kernel.asm	/^c010869e:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01086a3	obj/kernel.asm	/^c01086a3:	e8 37 7d ff ff       	call   c01003df <__panic>$/;"	l
c01086a8	obj/kernel.asm	/^c01086a8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01086ab	obj/kernel.asm	/^c01086ab:	6a 01                	push   $0x1$/;"	l
c01086ad	obj/kernel.asm	/^c01086ad:	e8 a3 b2 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c01086b2	obj/kernel.asm	/^c01086b2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01086b5	obj/kernel.asm	/^c01086b5:	85 c0                	test   %eax,%eax$/;"	l
c01086b7	obj/kernel.asm	/^c01086b7:	74 19                	je     c01086d2 <default_check+0x2bf>$/;"	l
c01086b9	obj/kernel.asm	/^c01086b9:	68 ba d8 10 c0       	push   $0xc010d8ba$/;"	l
c01086be	obj/kernel.asm	/^c01086be:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01086c3	obj/kernel.asm	/^c01086c3:	68 1c 01 00 00       	push   $0x11c$/;"	l
c01086c8	obj/kernel.asm	/^c01086c8:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01086cd	obj/kernel.asm	/^c01086cd:	e8 0d 7d ff ff       	call   c01003df <__panic>$/;"	l
c01086d2	obj/kernel.asm	/^c01086d2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01086d5	obj/kernel.asm	/^c01086d5:	83 c0 40             	add    $0x40,%eax$/;"	l
c01086d8	obj/kernel.asm	/^c01086d8:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c01086db	obj/kernel.asm	/^c01086db:	74 19                	je     c01086f6 <default_check+0x2e3>$/;"	l
c01086dd	obj/kernel.asm	/^c01086dd:	68 c2 d9 10 c0       	push   $0xc010d9c2$/;"	l
c01086e2	obj/kernel.asm	/^c01086e2:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01086e7	obj/kernel.asm	/^c01086e7:	68 1d 01 00 00       	push   $0x11d$/;"	l
c01086ec	obj/kernel.asm	/^c01086ec:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01086f1	obj/kernel.asm	/^c01086f1:	e8 e9 7c ff ff       	call   c01003df <__panic>$/;"	l
c01086f6	obj/kernel.asm	/^c01086f6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01086f9	obj/kernel.asm	/^c01086f9:	83 c0 20             	add    $0x20,%eax$/;"	l
c01086fc	obj/kernel.asm	/^c01086fc:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01086ff	obj/kernel.asm	/^c01086ff:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108702	obj/kernel.asm	/^c0108702:	6a 01                	push   $0x1$/;"	l
c0108704	obj/kernel.asm	/^c0108704:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0108707	obj/kernel.asm	/^c0108707:	e8 b5 b2 ff ff       	call   c01039c1 <free_pages>$/;"	l
c010870c	obj/kernel.asm	/^c010870c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010870f	obj/kernel.asm	/^c010870f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108712	obj/kernel.asm	/^c0108712:	6a 03                	push   $0x3$/;"	l
c0108714	obj/kernel.asm	/^c0108714:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0108717	obj/kernel.asm	/^c0108717:	e8 a5 b2 ff ff       	call   c01039c1 <free_pages>$/;"	l
c010871c	obj/kernel.asm	/^c010871c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010871f	obj/kernel.asm	/^c010871f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108722	obj/kernel.asm	/^c0108722:	83 c0 04             	add    $0x4,%eax$/;"	l
c0108725	obj/kernel.asm	/^c0108725:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%ebp)$/;"	l
c010872c	obj/kernel.asm	/^c010872c:	89 45 9c             	mov    %eax,-0x64(%ebp)$/;"	l
c010872f	obj/kernel.asm	/^c010872f:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c0108732	obj/kernel.asm	/^c0108732:	8b 55 a0             	mov    -0x60(%ebp),%edx$/;"	l
c0108735	obj/kernel.asm	/^c0108735:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0108738	obj/kernel.asm	/^c0108738:	19 c0                	sbb    %eax,%eax$/;"	l
c010873a	obj/kernel.asm	/^c010873a:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c010873d	obj/kernel.asm	/^c010873d:	83 7d 98 00          	cmpl   $0x0,-0x68(%ebp)$/;"	l
c0108741	obj/kernel.asm	/^c0108741:	0f 95 c0             	setne  %al$/;"	l
c0108744	obj/kernel.asm	/^c0108744:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108747	obj/kernel.asm	/^c0108747:	85 c0                	test   %eax,%eax$/;"	l
c0108749	obj/kernel.asm	/^c0108749:	74 0b                	je     c0108756 <default_check+0x343>$/;"	l
c010874b	obj/kernel.asm	/^c010874b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010874e	obj/kernel.asm	/^c010874e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108751	obj/kernel.asm	/^c0108751:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0108754	obj/kernel.asm	/^c0108754:	74 19                	je     c010876f <default_check+0x35c>$/;"	l
c0108756	obj/kernel.asm	/^c0108756:	68 d0 d9 10 c0       	push   $0xc010d9d0$/;"	l
c010875b	obj/kernel.asm	/^c010875b:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0108760	obj/kernel.asm	/^c0108760:	68 22 01 00 00       	push   $0x122$/;"	l
c0108765	obj/kernel.asm	/^c0108765:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c010876a	obj/kernel.asm	/^c010876a:	e8 70 7c ff ff       	call   c01003df <__panic>$/;"	l
c010876f	obj/kernel.asm	/^c010876f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108772	obj/kernel.asm	/^c0108772:	83 c0 04             	add    $0x4,%eax$/;"	l
c0108775	obj/kernel.asm	/^c0108775:	c7 45 94 01 00 00 00 	movl   $0x1,-0x6c(%ebp)$/;"	l
c010877c	obj/kernel.asm	/^c010877c:	89 45 90             	mov    %eax,-0x70(%ebp)$/;"	l
c010877f	obj/kernel.asm	/^c010877f:	8b 45 90             	mov    -0x70(%ebp),%eax$/;"	l
c0108782	obj/kernel.asm	/^c0108782:	8b 55 94             	mov    -0x6c(%ebp),%edx$/;"	l
c0108785	obj/kernel.asm	/^c0108785:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0108788	obj/kernel.asm	/^c0108788:	19 c0                	sbb    %eax,%eax$/;"	l
c010878a	obj/kernel.asm	/^c010878a:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c010878d	obj/kernel.asm	/^c010878d:	83 7d 8c 00          	cmpl   $0x0,-0x74(%ebp)$/;"	l
c0108791	obj/kernel.asm	/^c0108791:	0f 95 c0             	setne  %al$/;"	l
c0108794	obj/kernel.asm	/^c0108794:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108797	obj/kernel.asm	/^c0108797:	85 c0                	test   %eax,%eax$/;"	l
c0108799	obj/kernel.asm	/^c0108799:	74 0b                	je     c01087a6 <default_check+0x393>$/;"	l
c010879b	obj/kernel.asm	/^c010879b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010879e	obj/kernel.asm	/^c010879e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01087a1	obj/kernel.asm	/^c01087a1:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c01087a4	obj/kernel.asm	/^c01087a4:	74 19                	je     c01087bf <default_check+0x3ac>$/;"	l
c01087a6	obj/kernel.asm	/^c01087a6:	68 f8 d9 10 c0       	push   $0xc010d9f8$/;"	l
c01087ab	obj/kernel.asm	/^c01087ab:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01087b0	obj/kernel.asm	/^c01087b0:	68 23 01 00 00       	push   $0x123$/;"	l
c01087b5	obj/kernel.asm	/^c01087b5:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01087ba	obj/kernel.asm	/^c01087ba:	e8 20 7c ff ff       	call   c01003df <__panic>$/;"	l
c01087bf	obj/kernel.asm	/^c01087bf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01087c2	obj/kernel.asm	/^c01087c2:	6a 01                	push   $0x1$/;"	l
c01087c4	obj/kernel.asm	/^c01087c4:	e8 8c b1 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c01087c9	obj/kernel.asm	/^c01087c9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01087cc	obj/kernel.asm	/^c01087cc:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01087cf	obj/kernel.asm	/^c01087cf:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01087d2	obj/kernel.asm	/^c01087d2:	83 e8 20             	sub    $0x20,%eax$/;"	l
c01087d5	obj/kernel.asm	/^c01087d5:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c01087d8	obj/kernel.asm	/^c01087d8:	74 19                	je     c01087f3 <default_check+0x3e0>$/;"	l
c01087da	obj/kernel.asm	/^c01087da:	68 1e da 10 c0       	push   $0xc010da1e$/;"	l
c01087df	obj/kernel.asm	/^c01087df:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01087e4	obj/kernel.asm	/^c01087e4:	68 25 01 00 00       	push   $0x125$/;"	l
c01087e9	obj/kernel.asm	/^c01087e9:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01087ee	obj/kernel.asm	/^c01087ee:	e8 ec 7b ff ff       	call   c01003df <__panic>$/;"	l
c01087f3	obj/kernel.asm	/^c01087f3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01087f6	obj/kernel.asm	/^c01087f6:	6a 01                	push   $0x1$/;"	l
c01087f8	obj/kernel.asm	/^c01087f8:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01087fb	obj/kernel.asm	/^c01087fb:	e8 c1 b1 ff ff       	call   c01039c1 <free_pages>$/;"	l
c0108800	obj/kernel.asm	/^c0108800:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108803	obj/kernel.asm	/^c0108803:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108806	obj/kernel.asm	/^c0108806:	6a 02                	push   $0x2$/;"	l
c0108808	obj/kernel.asm	/^c0108808:	e8 48 b1 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c010880d	obj/kernel.asm	/^c010880d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108810	obj/kernel.asm	/^c0108810:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108813	obj/kernel.asm	/^c0108813:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0108816	obj/kernel.asm	/^c0108816:	83 c0 20             	add    $0x20,%eax$/;"	l
c0108819	obj/kernel.asm	/^c0108819:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c010881c	obj/kernel.asm	/^c010881c:	74 19                	je     c0108837 <default_check+0x424>$/;"	l
c010881e	obj/kernel.asm	/^c010881e:	68 3c da 10 c0       	push   $0xc010da3c$/;"	l
c0108823	obj/kernel.asm	/^c0108823:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0108828	obj/kernel.asm	/^c0108828:	68 27 01 00 00       	push   $0x127$/;"	l
c010882d	obj/kernel.asm	/^c010882d:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c0108832	obj/kernel.asm	/^c0108832:	e8 a8 7b ff ff       	call   c01003df <__panic>$/;"	l
c0108837	obj/kernel.asm	/^c0108837:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010883a	obj/kernel.asm	/^c010883a:	6a 02                	push   $0x2$/;"	l
c010883c	obj/kernel.asm	/^c010883c:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c010883f	obj/kernel.asm	/^c010883f:	e8 7d b1 ff ff       	call   c01039c1 <free_pages>$/;"	l
c0108844	obj/kernel.asm	/^c0108844:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108847	obj/kernel.asm	/^c0108847:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010884a	obj/kernel.asm	/^c010884a:	6a 01                	push   $0x1$/;"	l
c010884c	obj/kernel.asm	/^c010884c:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c010884f	obj/kernel.asm	/^c010884f:	e8 6d b1 ff ff       	call   c01039c1 <free_pages>$/;"	l
c0108854	obj/kernel.asm	/^c0108854:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108857	obj/kernel.asm	/^c0108857:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010885a	obj/kernel.asm	/^c010885a:	6a 05                	push   $0x5$/;"	l
c010885c	obj/kernel.asm	/^c010885c:	e8 f4 b0 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c0108861	obj/kernel.asm	/^c0108861:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108864	obj/kernel.asm	/^c0108864:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108867	obj/kernel.asm	/^c0108867:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010886b	obj/kernel.asm	/^c010886b:	75 19                	jne    c0108886 <default_check+0x473>$/;"	l
c010886d	obj/kernel.asm	/^c010886d:	68 5c da 10 c0       	push   $0xc010da5c$/;"	l
c0108872	obj/kernel.asm	/^c0108872:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0108877	obj/kernel.asm	/^c0108877:	68 2c 01 00 00       	push   $0x12c$/;"	l
c010887c	obj/kernel.asm	/^c010887c:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c0108881	obj/kernel.asm	/^c0108881:	e8 59 7b ff ff       	call   c01003df <__panic>$/;"	l
c0108886	obj/kernel.asm	/^c0108886:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108889	obj/kernel.asm	/^c0108889:	6a 01                	push   $0x1$/;"	l
c010888b	obj/kernel.asm	/^c010888b:	e8 c5 b0 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c0108890	obj/kernel.asm	/^c0108890:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108893	obj/kernel.asm	/^c0108893:	85 c0                	test   %eax,%eax$/;"	l
c0108895	obj/kernel.asm	/^c0108895:	74 19                	je     c01088b0 <default_check+0x49d>$/;"	l
c0108897	obj/kernel.asm	/^c0108897:	68 ba d8 10 c0       	push   $0xc010d8ba$/;"	l
c010889c	obj/kernel.asm	/^c010889c:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01088a1	obj/kernel.asm	/^c01088a1:	68 2d 01 00 00       	push   $0x12d$/;"	l
c01088a6	obj/kernel.asm	/^c01088a6:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01088ab	obj/kernel.asm	/^c01088ab:	e8 2f 7b ff ff       	call   c01003df <__panic>$/;"	l
c01088b0	obj/kernel.asm	/^c01088b0:	a1 f4 0f 1b c0       	mov    0xc01b0ff4,%eax$/;"	l
c01088b5	obj/kernel.asm	/^c01088b5:	85 c0                	test   %eax,%eax$/;"	l
c01088b7	obj/kernel.asm	/^c01088b7:	74 19                	je     c01088d2 <default_check+0x4bf>$/;"	l
c01088b9	obj/kernel.asm	/^c01088b9:	68 0d d9 10 c0       	push   $0xc010d90d$/;"	l
c01088be	obj/kernel.asm	/^c01088be:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c01088c3	obj/kernel.asm	/^c01088c3:	68 2f 01 00 00       	push   $0x12f$/;"	l
c01088c8	obj/kernel.asm	/^c01088c8:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c01088cd	obj/kernel.asm	/^c01088cd:	e8 0d 7b ff ff       	call   c01003df <__panic>$/;"	l
c01088d2	obj/kernel.asm	/^c01088d2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01088d5	obj/kernel.asm	/^c01088d5:	a3 f4 0f 1b c0       	mov    %eax,0xc01b0ff4$/;"	l
c01088da	obj/kernel.asm	/^c01088da:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c01088dd	obj/kernel.asm	/^c01088dd:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c01088e0	obj/kernel.asm	/^c01088e0:	a3 ec 0f 1b c0       	mov    %eax,0xc01b0fec$/;"	l
c01088e5	obj/kernel.asm	/^c01088e5:	89 15 f0 0f 1b c0    	mov    %edx,0xc01b0ff0$/;"	l
c01088eb	obj/kernel.asm	/^c01088eb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01088ee	obj/kernel.asm	/^c01088ee:	6a 05                	push   $0x5$/;"	l
c01088f0	obj/kernel.asm	/^c01088f0:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01088f3	obj/kernel.asm	/^c01088f3:	e8 c9 b0 ff ff       	call   c01039c1 <free_pages>$/;"	l
c01088f8	obj/kernel.asm	/^c01088f8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01088fb	obj/kernel.asm	/^c01088fb:	c7 45 ec ec 0f 1b c0 	movl   $0xc01b0fec,-0x14(%ebp)$/;"	l
c0108902	obj/kernel.asm	/^c0108902:	eb 1d                	jmp    c0108921 <default_check+0x50e>$/;"	l
c0108904	obj/kernel.asm	/^c0108904:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108907	obj/kernel.asm	/^c0108907:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c010890a	obj/kernel.asm	/^c010890a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010890d	obj/kernel.asm	/^c010890d:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0108911	obj/kernel.asm	/^c0108911:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0108914	obj/kernel.asm	/^c0108914:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0108917	obj/kernel.asm	/^c0108917:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010891a	obj/kernel.asm	/^c010891a:	29 c2                	sub    %eax,%edx$/;"	l
c010891c	obj/kernel.asm	/^c010891c:	89 d0                	mov    %edx,%eax$/;"	l
c010891e	obj/kernel.asm	/^c010891e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108921	obj/kernel.asm	/^c0108921:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108924	obj/kernel.asm	/^c0108924:	89 45 88             	mov    %eax,-0x78(%ebp)$/;"	l
c0108927	obj/kernel.asm	/^c0108927:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
c010892a	obj/kernel.asm	/^c010892a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010892d	obj/kernel.asm	/^c010892d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108930	obj/kernel.asm	/^c0108930:	81 7d ec ec 0f 1b c0 	cmpl   $0xc01b0fec,-0x14(%ebp)$/;"	l
c0108937	obj/kernel.asm	/^c0108937:	75 cb                	jne    c0108904 <default_check+0x4f1>$/;"	l
c0108939	obj/kernel.asm	/^c0108939:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010893d	obj/kernel.asm	/^c010893d:	74 19                	je     c0108958 <default_check+0x545>$/;"	l
c010893f	obj/kernel.asm	/^c010893f:	68 7a da 10 c0       	push   $0xc010da7a$/;"	l
c0108944	obj/kernel.asm	/^c0108944:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0108949	obj/kernel.asm	/^c0108949:	68 3a 01 00 00       	push   $0x13a$/;"	l
c010894e	obj/kernel.asm	/^c010894e:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c0108953	obj/kernel.asm	/^c0108953:	e8 87 7a ff ff       	call   c01003df <__panic>$/;"	l
c0108958	obj/kernel.asm	/^c0108958:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010895c	obj/kernel.asm	/^c010895c:	74 19                	je     c0108977 <default_check+0x564>$/;"	l
c010895e	obj/kernel.asm	/^c010895e:	68 85 da 10 c0       	push   $0xc010da85$/;"	l
c0108963	obj/kernel.asm	/^c0108963:	68 d2 d6 10 c0       	push   $0xc010d6d2$/;"	l
c0108968	obj/kernel.asm	/^c0108968:	68 3b 01 00 00       	push   $0x13b$/;"	l
c010896d	obj/kernel.asm	/^c010896d:	68 e7 d6 10 c0       	push   $0xc010d6e7$/;"	l
c0108972	obj/kernel.asm	/^c0108972:	e8 68 7a ff ff       	call   c01003df <__panic>$/;"	l
c0108977	obj/kernel.asm	/^c0108977:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c010897a	obj/kernel.asm	/^c010897a:	c9                   	leave  $/;"	l
c010897b	obj/kernel.asm	/^c010897b:	c3                   	ret    $/;"	l
c010897c	obj/kernel.asm	/^c010897c <page2ppn>:$/;"	l
c010897c	obj/kernel.asm	/^c010897c:	55                   	push   %ebp$/;"	l
c010897d	obj/kernel.asm	/^c010897d:	89 e5                	mov    %esp,%ebp$/;"	l
c010897f	obj/kernel.asm	/^c010897f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108982	obj/kernel.asm	/^c0108982:	8b 15 18 0f 1b c0    	mov    0xc01b0f18,%edx$/;"	l
c0108988	obj/kernel.asm	/^c0108988:	29 d0                	sub    %edx,%eax$/;"	l
c010898a	obj/kernel.asm	/^c010898a:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c010898d	obj/kernel.asm	/^c010898d:	5d                   	pop    %ebp$/;"	l
c010898e	obj/kernel.asm	/^c010898e:	c3                   	ret    $/;"	l
c010898f	obj/kernel.asm	/^c010898f <page2pa>:$/;"	l
c010898f	obj/kernel.asm	/^c010898f:	55                   	push   %ebp$/;"	l
c0108990	obj/kernel.asm	/^c0108990:	89 e5                	mov    %esp,%ebp$/;"	l
c0108992	obj/kernel.asm	/^c0108992:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108995	obj/kernel.asm	/^c0108995:	e8 e2 ff ff ff       	call   c010897c <page2ppn>$/;"	l
c010899a	obj/kernel.asm	/^c010899a:	83 c4 04             	add    $0x4,%esp$/;"	l
c010899d	obj/kernel.asm	/^c010899d:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01089a0	obj/kernel.asm	/^c01089a0:	c9                   	leave  $/;"	l
c01089a1	obj/kernel.asm	/^c01089a1:	c3                   	ret    $/;"	l
c01089a2	obj/kernel.asm	/^c01089a2 <page2kva>:$/;"	l
c01089a2	obj/kernel.asm	/^c01089a2:	55                   	push   %ebp$/;"	l
c01089a3	obj/kernel.asm	/^c01089a3:	89 e5                	mov    %esp,%ebp$/;"	l
c01089a5	obj/kernel.asm	/^c01089a5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01089a8	obj/kernel.asm	/^c01089a8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01089ab	obj/kernel.asm	/^c01089ab:	e8 df ff ff ff       	call   c010898f <page2pa>$/;"	l
c01089b0	obj/kernel.asm	/^c01089b0:	83 c4 04             	add    $0x4,%esp$/;"	l
c01089b3	obj/kernel.asm	/^c01089b3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01089b6	obj/kernel.asm	/^c01089b6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01089b9	obj/kernel.asm	/^c01089b9:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01089bc	obj/kernel.asm	/^c01089bc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01089bf	obj/kernel.asm	/^c01089bf:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c01089c4	obj/kernel.asm	/^c01089c4:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c01089c7	obj/kernel.asm	/^c01089c7:	72 14                	jb     c01089dd <page2kva+0x3b>$/;"	l
c01089c9	obj/kernel.asm	/^c01089c9:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01089cc	obj/kernel.asm	/^c01089cc:	68 c0 da 10 c0       	push   $0xc010dac0$/;"	l
c01089d1	obj/kernel.asm	/^c01089d1:	6a 65                	push   $0x65$/;"	l
c01089d3	obj/kernel.asm	/^c01089d3:	68 e3 da 10 c0       	push   $0xc010dae3$/;"	l
c01089d8	obj/kernel.asm	/^c01089d8:	e8 02 7a ff ff       	call   c01003df <__panic>$/;"	l
c01089dd	obj/kernel.asm	/^c01089dd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01089e0	obj/kernel.asm	/^c01089e0:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c01089e5	obj/kernel.asm	/^c01089e5:	c9                   	leave  $/;"	l
c01089e6	obj/kernel.asm	/^c01089e6:	c3                   	ret    $/;"	l
c01089e7	obj/kernel.asm	/^c01089e7 <swapfs_init>:$/;"	l
c01089e7	obj/kernel.asm	/^c01089e7:	55                   	push   %ebp$/;"	l
c01089e8	obj/kernel.asm	/^c01089e8:	89 e5                	mov    %esp,%ebp$/;"	l
c01089ea	obj/kernel.asm	/^c01089ea:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01089ed	obj/kernel.asm	/^c01089ed:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01089f0	obj/kernel.asm	/^c01089f0:	6a 01                	push   $0x1$/;"	l
c01089f2	obj/kernel.asm	/^c01089f2:	e8 e1 86 ff ff       	call   c01010d8 <ide_device_valid>$/;"	l
c01089f7	obj/kernel.asm	/^c01089f7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01089fa	obj/kernel.asm	/^c01089fa:	85 c0                	test   %eax,%eax$/;"	l
c01089fc	obj/kernel.asm	/^c01089fc:	75 14                	jne    c0108a12 <swapfs_init+0x2b>$/;"	l
c01089fe	obj/kernel.asm	/^c01089fe:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108a01	obj/kernel.asm	/^c0108a01:	68 f1 da 10 c0       	push   $0xc010daf1$/;"	l
c0108a06	obj/kernel.asm	/^c0108a06:	6a 0d                	push   $0xd$/;"	l
c0108a08	obj/kernel.asm	/^c0108a08:	68 0b db 10 c0       	push   $0xc010db0b$/;"	l
c0108a0d	obj/kernel.asm	/^c0108a0d:	e8 cd 79 ff ff       	call   c01003df <__panic>$/;"	l
c0108a12	obj/kernel.asm	/^c0108a12:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108a15	obj/kernel.asm	/^c0108a15:	6a 01                	push   $0x1$/;"	l
c0108a17	obj/kernel.asm	/^c0108a17:	e8 fc 86 ff ff       	call   c0101118 <ide_device_size>$/;"	l
c0108a1c	obj/kernel.asm	/^c0108a1c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a1f	obj/kernel.asm	/^c0108a1f:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c0108a22	obj/kernel.asm	/^c0108a22:	a3 bc 0f 1b c0       	mov    %eax,0xc01b0fbc$/;"	l
c0108a27	obj/kernel.asm	/^c0108a27:	c9                   	leave  $/;"	l
c0108a28	obj/kernel.asm	/^c0108a28:	c3                   	ret    $/;"	l
c0108a29	obj/kernel.asm	/^c0108a29 <swapfs_read>:$/;"	l
c0108a29	obj/kernel.asm	/^c0108a29:	55                   	push   %ebp$/;"	l
c0108a2a	obj/kernel.asm	/^c0108a2a:	89 e5                	mov    %esp,%ebp$/;"	l
c0108a2c	obj/kernel.asm	/^c0108a2c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108a2f	obj/kernel.asm	/^c0108a2f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108a32	obj/kernel.asm	/^c0108a32:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0108a35	obj/kernel.asm	/^c0108a35:	e8 68 ff ff ff       	call   c01089a2 <page2kva>$/;"	l
c0108a3a	obj/kernel.asm	/^c0108a3a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a3d	obj/kernel.asm	/^c0108a3d:	89 c2                	mov    %eax,%edx$/;"	l
c0108a3f	obj/kernel.asm	/^c0108a3f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108a42	obj/kernel.asm	/^c0108a42:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0108a45	obj/kernel.asm	/^c0108a45:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108a48	obj/kernel.asm	/^c0108a48:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108a4c	obj/kernel.asm	/^c0108a4c:	74 0a                	je     c0108a58 <swapfs_read+0x2f>$/;"	l
c0108a4e	obj/kernel.asm	/^c0108a4e:	a1 bc 0f 1b c0       	mov    0xc01b0fbc,%eax$/;"	l
c0108a53	obj/kernel.asm	/^c0108a53:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c0108a56	obj/kernel.asm	/^c0108a56:	72 14                	jb     c0108a6c <swapfs_read+0x43>$/;"	l
c0108a58	obj/kernel.asm	/^c0108a58:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108a5b	obj/kernel.asm	/^c0108a5b:	68 1c db 10 c0       	push   $0xc010db1c$/;"	l
c0108a60	obj/kernel.asm	/^c0108a60:	6a 14                	push   $0x14$/;"	l
c0108a62	obj/kernel.asm	/^c0108a62:	68 0b db 10 c0       	push   $0xc010db0b$/;"	l
c0108a67	obj/kernel.asm	/^c0108a67:	e8 73 79 ff ff       	call   c01003df <__panic>$/;"	l
c0108a6c	obj/kernel.asm	/^c0108a6c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108a6f	obj/kernel.asm	/^c0108a6f:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0108a72	obj/kernel.asm	/^c0108a72:	6a 08                	push   $0x8$/;"	l
c0108a74	obj/kernel.asm	/^c0108a74:	52                   	push   %edx$/;"	l
c0108a75	obj/kernel.asm	/^c0108a75:	50                   	push   %eax$/;"	l
c0108a76	obj/kernel.asm	/^c0108a76:	6a 01                	push   $0x1$/;"	l
c0108a78	obj/kernel.asm	/^c0108a78:	e8 dc 86 ff ff       	call   c0101159 <ide_read_secs>$/;"	l
c0108a7d	obj/kernel.asm	/^c0108a7d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a80	obj/kernel.asm	/^c0108a80:	c9                   	leave  $/;"	l
c0108a81	obj/kernel.asm	/^c0108a81:	c3                   	ret    $/;"	l
c0108a82	obj/kernel.asm	/^c0108a82 <swapfs_write>:$/;"	l
c0108a82	obj/kernel.asm	/^c0108a82:	55                   	push   %ebp$/;"	l
c0108a83	obj/kernel.asm	/^c0108a83:	89 e5                	mov    %esp,%ebp$/;"	l
c0108a85	obj/kernel.asm	/^c0108a85:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108a88	obj/kernel.asm	/^c0108a88:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108a8b	obj/kernel.asm	/^c0108a8b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0108a8e	obj/kernel.asm	/^c0108a8e:	e8 0f ff ff ff       	call   c01089a2 <page2kva>$/;"	l
c0108a93	obj/kernel.asm	/^c0108a93:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a96	obj/kernel.asm	/^c0108a96:	89 c2                	mov    %eax,%edx$/;"	l
c0108a98	obj/kernel.asm	/^c0108a98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108a9b	obj/kernel.asm	/^c0108a9b:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0108a9e	obj/kernel.asm	/^c0108a9e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108aa1	obj/kernel.asm	/^c0108aa1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108aa5	obj/kernel.asm	/^c0108aa5:	74 0a                	je     c0108ab1 <swapfs_write+0x2f>$/;"	l
c0108aa7	obj/kernel.asm	/^c0108aa7:	a1 bc 0f 1b c0       	mov    0xc01b0fbc,%eax$/;"	l
c0108aac	obj/kernel.asm	/^c0108aac:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c0108aaf	obj/kernel.asm	/^c0108aaf:	72 14                	jb     c0108ac5 <swapfs_write+0x43>$/;"	l
c0108ab1	obj/kernel.asm	/^c0108ab1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108ab4	obj/kernel.asm	/^c0108ab4:	68 1c db 10 c0       	push   $0xc010db1c$/;"	l
c0108ab9	obj/kernel.asm	/^c0108ab9:	6a 19                	push   $0x19$/;"	l
c0108abb	obj/kernel.asm	/^c0108abb:	68 0b db 10 c0       	push   $0xc010db0b$/;"	l
c0108ac0	obj/kernel.asm	/^c0108ac0:	e8 1a 79 ff ff       	call   c01003df <__panic>$/;"	l
c0108ac5	obj/kernel.asm	/^c0108ac5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108ac8	obj/kernel.asm	/^c0108ac8:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0108acb	obj/kernel.asm	/^c0108acb:	6a 08                	push   $0x8$/;"	l
c0108acd	obj/kernel.asm	/^c0108acd:	52                   	push   %edx$/;"	l
c0108ace	obj/kernel.asm	/^c0108ace:	50                   	push   %eax$/;"	l
c0108acf	obj/kernel.asm	/^c0108acf:	6a 01                	push   $0x1$/;"	l
c0108ad1	obj/kernel.asm	/^c0108ad1:	e8 ac 88 ff ff       	call   c0101382 <ide_write_secs>$/;"	l
c0108ad6	obj/kernel.asm	/^c0108ad6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108ad9	obj/kernel.asm	/^c0108ad9:	c9                   	leave  $/;"	l
c0108ada	obj/kernel.asm	/^c0108ada:	c3                   	ret    $/;"	l
c0108adb	obj/kernel.asm	/^c0108adb <kernel_thread_entry>:$/;"	l
c0108adb	obj/kernel.asm	/^c0108adb:	52                   	push   %edx$/;"	l
c0108adc	obj/kernel.asm	/^c0108adc:	ff d3                	call   *%ebx$/;"	l
c0108ade	obj/kernel.asm	/^c0108ade:	50                   	push   %eax$/;"	l
c0108adf	obj/kernel.asm	/^c0108adf:	e8 10 0c 00 00       	call   c01096f4 <do_exit>$/;"	l
c0108ae4	obj/kernel.asm	/^c0108ae4 <switch_to>:$/;"	l
c0108ae4	obj/kernel.asm	/^c0108ae4:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c0108ae8	obj/kernel.asm	/^c0108ae8:	8f 00                	popl   (%eax)$/;"	l
c0108aea	obj/kernel.asm	/^c0108aea:	89 60 04             	mov    %esp,0x4(%eax)$/;"	l
c0108aed	obj/kernel.asm	/^c0108aed:	89 58 08             	mov    %ebx,0x8(%eax)$/;"	l
c0108af0	obj/kernel.asm	/^c0108af0:	89 48 0c             	mov    %ecx,0xc(%eax)$/;"	l
c0108af3	obj/kernel.asm	/^c0108af3:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0108af6	obj/kernel.asm	/^c0108af6:	89 70 14             	mov    %esi,0x14(%eax)$/;"	l
c0108af9	obj/kernel.asm	/^c0108af9:	89 78 18             	mov    %edi,0x18(%eax)$/;"	l
c0108afc	obj/kernel.asm	/^c0108afc:	89 68 1c             	mov    %ebp,0x1c(%eax)$/;"	l
c0108aff	obj/kernel.asm	/^c0108aff:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c0108b03	obj/kernel.asm	/^c0108b03:	8b 68 1c             	mov    0x1c(%eax),%ebp$/;"	l
c0108b06	obj/kernel.asm	/^c0108b06:	8b 78 18             	mov    0x18(%eax),%edi$/;"	l
c0108b09	obj/kernel.asm	/^c0108b09:	8b 70 14             	mov    0x14(%eax),%esi$/;"	l
c0108b0c	obj/kernel.asm	/^c0108b0c:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c0108b0f	obj/kernel.asm	/^c0108b0f:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0108b12	obj/kernel.asm	/^c0108b12:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c0108b15	obj/kernel.asm	/^c0108b15:	8b 60 04             	mov    0x4(%eax),%esp$/;"	l
c0108b18	obj/kernel.asm	/^c0108b18:	ff 30                	pushl  (%eax)$/;"	l
c0108b1a	obj/kernel.asm	/^c0108b1a:	c3                   	ret    $/;"	l
c0108b1b	obj/kernel.asm	/^c0108b1b <test_and_set_bit>:$/;"	l
c0108b1b	obj/kernel.asm	/^c0108b1b:	55                   	push   %ebp$/;"	l
c0108b1c	obj/kernel.asm	/^c0108b1c:	89 e5                	mov    %esp,%ebp$/;"	l
c0108b1e	obj/kernel.asm	/^c0108b1e:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0108b21	obj/kernel.asm	/^c0108b21:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108b24	obj/kernel.asm	/^c0108b24:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108b27	obj/kernel.asm	/^c0108b27:	0f ab 02             	bts    %eax,(%edx)$/;"	l
c0108b2a	obj/kernel.asm	/^c0108b2a:	19 c0                	sbb    %eax,%eax$/;"	l
c0108b2c	obj/kernel.asm	/^c0108b2c:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0108b2f	obj/kernel.asm	/^c0108b2f:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0108b33	obj/kernel.asm	/^c0108b33:	0f 95 c0             	setne  %al$/;"	l
c0108b36	obj/kernel.asm	/^c0108b36:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108b39	obj/kernel.asm	/^c0108b39:	c9                   	leave  $/;"	l
c0108b3a	obj/kernel.asm	/^c0108b3a:	c3                   	ret    $/;"	l
c0108b3b	obj/kernel.asm	/^c0108b3b <test_and_clear_bit>:$/;"	l
c0108b3b	obj/kernel.asm	/^c0108b3b:	55                   	push   %ebp$/;"	l
c0108b3c	obj/kernel.asm	/^c0108b3c:	89 e5                	mov    %esp,%ebp$/;"	l
c0108b3e	obj/kernel.asm	/^c0108b3e:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0108b41	obj/kernel.asm	/^c0108b41:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108b44	obj/kernel.asm	/^c0108b44:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108b47	obj/kernel.asm	/^c0108b47:	0f b3 02             	btr    %eax,(%edx)$/;"	l
c0108b4a	obj/kernel.asm	/^c0108b4a:	19 c0                	sbb    %eax,%eax$/;"	l
c0108b4c	obj/kernel.asm	/^c0108b4c:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0108b4f	obj/kernel.asm	/^c0108b4f:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0108b53	obj/kernel.asm	/^c0108b53:	0f 95 c0             	setne  %al$/;"	l
c0108b56	obj/kernel.asm	/^c0108b56:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108b59	obj/kernel.asm	/^c0108b59:	c9                   	leave  $/;"	l
c0108b5a	obj/kernel.asm	/^c0108b5a:	c3                   	ret    $/;"	l
c0108b5b	obj/kernel.asm	/^c0108b5b <__intr_save>:$/;"	l
c0108b5b	obj/kernel.asm	/^c0108b5b:	55                   	push   %ebp$/;"	l
c0108b5c	obj/kernel.asm	/^c0108b5c:	89 e5                	mov    %esp,%ebp$/;"	l
c0108b5e	obj/kernel.asm	/^c0108b5e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108b61	obj/kernel.asm	/^c0108b61:	9c                   	pushf  $/;"	l
c0108b62	obj/kernel.asm	/^c0108b62:	58                   	pop    %eax$/;"	l
c0108b63	obj/kernel.asm	/^c0108b63:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108b66	obj/kernel.asm	/^c0108b66:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108b69	obj/kernel.asm	/^c0108b69:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0108b6e	obj/kernel.asm	/^c0108b6e:	85 c0                	test   %eax,%eax$/;"	l
c0108b70	obj/kernel.asm	/^c0108b70:	74 0c                	je     c0108b7e <__intr_save+0x23>$/;"	l
c0108b72	obj/kernel.asm	/^c0108b72:	e8 2b 95 ff ff       	call   c01020a2 <intr_disable>$/;"	l
c0108b77	obj/kernel.asm	/^c0108b77:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0108b7c	obj/kernel.asm	/^c0108b7c:	eb 05                	jmp    c0108b83 <__intr_save+0x28>$/;"	l
c0108b7e	obj/kernel.asm	/^c0108b7e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108b83	obj/kernel.asm	/^c0108b83:	c9                   	leave  $/;"	l
c0108b84	obj/kernel.asm	/^c0108b84:	c3                   	ret    $/;"	l
c0108b85	obj/kernel.asm	/^c0108b85 <__intr_restore>:$/;"	l
c0108b85	obj/kernel.asm	/^c0108b85:	55                   	push   %ebp$/;"	l
c0108b86	obj/kernel.asm	/^c0108b86:	89 e5                	mov    %esp,%ebp$/;"	l
c0108b88	obj/kernel.asm	/^c0108b88:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108b8b	obj/kernel.asm	/^c0108b8b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0108b8f	obj/kernel.asm	/^c0108b8f:	74 05                	je     c0108b96 <__intr_restore+0x11>$/;"	l
c0108b91	obj/kernel.asm	/^c0108b91:	e8 06 95 ff ff       	call   c010209c <intr_enable>$/;"	l
c0108b96	obj/kernel.asm	/^c0108b96:	c9                   	leave  $/;"	l
c0108b97	obj/kernel.asm	/^c0108b97:	c3                   	ret    $/;"	l
c0108b98	obj/kernel.asm	/^c0108b98 <try_lock>:$/;"	l
c0108b98	obj/kernel.asm	/^c0108b98:	55                   	push   %ebp$/;"	l
c0108b99	obj/kernel.asm	/^c0108b99:	89 e5                	mov    %esp,%ebp$/;"	l
c0108b9b	obj/kernel.asm	/^c0108b9b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108b9e	obj/kernel.asm	/^c0108b9e:	6a 00                	push   $0x0$/;"	l
c0108ba0	obj/kernel.asm	/^c0108ba0:	e8 76 ff ff ff       	call   c0108b1b <test_and_set_bit>$/;"	l
c0108ba5	obj/kernel.asm	/^c0108ba5:	83 c4 08             	add    $0x8,%esp$/;"	l
c0108ba8	obj/kernel.asm	/^c0108ba8:	85 c0                	test   %eax,%eax$/;"	l
c0108baa	obj/kernel.asm	/^c0108baa:	0f 94 c0             	sete   %al$/;"	l
c0108bad	obj/kernel.asm	/^c0108bad:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108bb0	obj/kernel.asm	/^c0108bb0:	c9                   	leave  $/;"	l
c0108bb1	obj/kernel.asm	/^c0108bb1:	c3                   	ret    $/;"	l
c0108bb2	obj/kernel.asm	/^c0108bb2 <lock>:$/;"	l
c0108bb2	obj/kernel.asm	/^c0108bb2:	55                   	push   %ebp$/;"	l
c0108bb3	obj/kernel.asm	/^c0108bb3:	89 e5                	mov    %esp,%ebp$/;"	l
c0108bb5	obj/kernel.asm	/^c0108bb5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108bb8	obj/kernel.asm	/^c0108bb8:	eb 05                	jmp    c0108bbf <lock+0xd>$/;"	l
c0108bba	obj/kernel.asm	/^c0108bba:	e8 95 1b 00 00       	call   c010a754 <schedule>$/;"	l
c0108bbf	obj/kernel.asm	/^c0108bbf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108bc2	obj/kernel.asm	/^c0108bc2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108bc5	obj/kernel.asm	/^c0108bc5:	e8 ce ff ff ff       	call   c0108b98 <try_lock>$/;"	l
c0108bca	obj/kernel.asm	/^c0108bca:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108bcd	obj/kernel.asm	/^c0108bcd:	85 c0                	test   %eax,%eax$/;"	l
c0108bcf	obj/kernel.asm	/^c0108bcf:	74 e9                	je     c0108bba <lock+0x8>$/;"	l
c0108bd1	obj/kernel.asm	/^c0108bd1:	c9                   	leave  $/;"	l
c0108bd2	obj/kernel.asm	/^c0108bd2:	c3                   	ret    $/;"	l
c0108bd3	obj/kernel.asm	/^c0108bd3 <unlock>:$/;"	l
c0108bd3	obj/kernel.asm	/^c0108bd3:	55                   	push   %ebp$/;"	l
c0108bd4	obj/kernel.asm	/^c0108bd4:	89 e5                	mov    %esp,%ebp$/;"	l
c0108bd6	obj/kernel.asm	/^c0108bd6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108bd9	obj/kernel.asm	/^c0108bd9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108bdc	obj/kernel.asm	/^c0108bdc:	6a 00                	push   $0x0$/;"	l
c0108bde	obj/kernel.asm	/^c0108bde:	e8 58 ff ff ff       	call   c0108b3b <test_and_clear_bit>$/;"	l
c0108be3	obj/kernel.asm	/^c0108be3:	83 c4 08             	add    $0x8,%esp$/;"	l
c0108be6	obj/kernel.asm	/^c0108be6:	85 c0                	test   %eax,%eax$/;"	l
c0108be8	obj/kernel.asm	/^c0108be8:	75 14                	jne    c0108bfe <unlock+0x2b>$/;"	l
c0108bea	obj/kernel.asm	/^c0108bea:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108bed	obj/kernel.asm	/^c0108bed:	68 3c db 10 c0       	push   $0xc010db3c$/;"	l
c0108bf2	obj/kernel.asm	/^c0108bf2:	6a 34                	push   $0x34$/;"	l
c0108bf4	obj/kernel.asm	/^c0108bf4:	68 4c db 10 c0       	push   $0xc010db4c$/;"	l
c0108bf9	obj/kernel.asm	/^c0108bf9:	e8 e1 77 ff ff       	call   c01003df <__panic>$/;"	l
c0108bfe	obj/kernel.asm	/^c0108bfe:	c9                   	leave  $/;"	l
c0108bff	obj/kernel.asm	/^c0108bff:	c3                   	ret    $/;"	l
c0108c00	obj/kernel.asm	/^c0108c00 <page2ppn>:$/;"	l
c0108c00	obj/kernel.asm	/^c0108c00:	55                   	push   %ebp$/;"	l
c0108c01	obj/kernel.asm	/^c0108c01:	89 e5                	mov    %esp,%ebp$/;"	l
c0108c03	obj/kernel.asm	/^c0108c03:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108c06	obj/kernel.asm	/^c0108c06:	8b 15 18 0f 1b c0    	mov    0xc01b0f18,%edx$/;"	l
c0108c0c	obj/kernel.asm	/^c0108c0c:	29 d0                	sub    %edx,%eax$/;"	l
c0108c0e	obj/kernel.asm	/^c0108c0e:	c1 f8 05             	sar    $0x5,%eax$/;"	l
c0108c11	obj/kernel.asm	/^c0108c11:	5d                   	pop    %ebp$/;"	l
c0108c12	obj/kernel.asm	/^c0108c12:	c3                   	ret    $/;"	l
c0108c13	obj/kernel.asm	/^c0108c13 <page2pa>:$/;"	l
c0108c13	obj/kernel.asm	/^c0108c13:	55                   	push   %ebp$/;"	l
c0108c14	obj/kernel.asm	/^c0108c14:	89 e5                	mov    %esp,%ebp$/;"	l
c0108c16	obj/kernel.asm	/^c0108c16:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108c19	obj/kernel.asm	/^c0108c19:	e8 e2 ff ff ff       	call   c0108c00 <page2ppn>$/;"	l
c0108c1e	obj/kernel.asm	/^c0108c1e:	83 c4 04             	add    $0x4,%esp$/;"	l
c0108c21	obj/kernel.asm	/^c0108c21:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0108c24	obj/kernel.asm	/^c0108c24:	c9                   	leave  $/;"	l
c0108c25	obj/kernel.asm	/^c0108c25:	c3                   	ret    $/;"	l
c0108c26	obj/kernel.asm	/^c0108c26 <pa2page>:$/;"	l
c0108c26	obj/kernel.asm	/^c0108c26:	55                   	push   %ebp$/;"	l
c0108c27	obj/kernel.asm	/^c0108c27:	89 e5                	mov    %esp,%ebp$/;"	l
c0108c29	obj/kernel.asm	/^c0108c29:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108c2c	obj/kernel.asm	/^c0108c2c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108c2f	obj/kernel.asm	/^c0108c2f:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0108c32	obj/kernel.asm	/^c0108c32:	89 c2                	mov    %eax,%edx$/;"	l
c0108c34	obj/kernel.asm	/^c0108c34:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c0108c39	obj/kernel.asm	/^c0108c39:	39 c2                	cmp    %eax,%edx$/;"	l
c0108c3b	obj/kernel.asm	/^c0108c3b:	72 14                	jb     c0108c51 <pa2page+0x2b>$/;"	l
c0108c3d	obj/kernel.asm	/^c0108c3d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108c40	obj/kernel.asm	/^c0108c40:	68 60 db 10 c0       	push   $0xc010db60$/;"	l
c0108c45	obj/kernel.asm	/^c0108c45:	6a 5e                	push   $0x5e$/;"	l
c0108c47	obj/kernel.asm	/^c0108c47:	68 7f db 10 c0       	push   $0xc010db7f$/;"	l
c0108c4c	obj/kernel.asm	/^c0108c4c:	e8 8e 77 ff ff       	call   c01003df <__panic>$/;"	l
c0108c51	obj/kernel.asm	/^c0108c51:	a1 18 0f 1b c0       	mov    0xc01b0f18,%eax$/;"	l
c0108c56	obj/kernel.asm	/^c0108c56:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108c59	obj/kernel.asm	/^c0108c59:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0108c5c	obj/kernel.asm	/^c0108c5c:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c0108c5f	obj/kernel.asm	/^c0108c5f:	01 d0                	add    %edx,%eax$/;"	l
c0108c61	obj/kernel.asm	/^c0108c61:	c9                   	leave  $/;"	l
c0108c62	obj/kernel.asm	/^c0108c62:	c3                   	ret    $/;"	l
c0108c63	obj/kernel.asm	/^c0108c63 <page2kva>:$/;"	l
c0108c63	obj/kernel.asm	/^c0108c63:	55                   	push   %ebp$/;"	l
c0108c64	obj/kernel.asm	/^c0108c64:	89 e5                	mov    %esp,%ebp$/;"	l
c0108c66	obj/kernel.asm	/^c0108c66:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108c69	obj/kernel.asm	/^c0108c69:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108c6c	obj/kernel.asm	/^c0108c6c:	e8 a2 ff ff ff       	call   c0108c13 <page2pa>$/;"	l
c0108c71	obj/kernel.asm	/^c0108c71:	83 c4 04             	add    $0x4,%esp$/;"	l
c0108c74	obj/kernel.asm	/^c0108c74:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108c77	obj/kernel.asm	/^c0108c77:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108c7a	obj/kernel.asm	/^c0108c7a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0108c7d	obj/kernel.asm	/^c0108c7d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108c80	obj/kernel.asm	/^c0108c80:	a1 80 ed 1a c0       	mov    0xc01aed80,%eax$/;"	l
c0108c85	obj/kernel.asm	/^c0108c85:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0108c88	obj/kernel.asm	/^c0108c88:	72 14                	jb     c0108c9e <page2kva+0x3b>$/;"	l
c0108c8a	obj/kernel.asm	/^c0108c8a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108c8d	obj/kernel.asm	/^c0108c8d:	68 90 db 10 c0       	push   $0xc010db90$/;"	l
c0108c92	obj/kernel.asm	/^c0108c92:	6a 65                	push   $0x65$/;"	l
c0108c94	obj/kernel.asm	/^c0108c94:	68 7f db 10 c0       	push   $0xc010db7f$/;"	l
c0108c99	obj/kernel.asm	/^c0108c99:	e8 41 77 ff ff       	call   c01003df <__panic>$/;"	l
c0108c9e	obj/kernel.asm	/^c0108c9e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108ca1	obj/kernel.asm	/^c0108ca1:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0108ca6	obj/kernel.asm	/^c0108ca6:	c9                   	leave  $/;"	l
c0108ca7	obj/kernel.asm	/^c0108ca7:	c3                   	ret    $/;"	l
c0108ca8	obj/kernel.asm	/^c0108ca8 <kva2page>:$/;"	l
c0108ca8	obj/kernel.asm	/^c0108ca8:	55                   	push   %ebp$/;"	l
c0108ca9	obj/kernel.asm	/^c0108ca9:	89 e5                	mov    %esp,%ebp$/;"	l
c0108cab	obj/kernel.asm	/^c0108cab:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108cae	obj/kernel.asm	/^c0108cae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108cb1	obj/kernel.asm	/^c0108cb1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108cb4	obj/kernel.asm	/^c0108cb4:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0108cbb	obj/kernel.asm	/^c0108cbb:	77 14                	ja     c0108cd1 <kva2page+0x29>$/;"	l
c0108cbd	obj/kernel.asm	/^c0108cbd:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108cc0	obj/kernel.asm	/^c0108cc0:	68 b4 db 10 c0       	push   $0xc010dbb4$/;"	l
c0108cc5	obj/kernel.asm	/^c0108cc5:	6a 6a                	push   $0x6a$/;"	l
c0108cc7	obj/kernel.asm	/^c0108cc7:	68 7f db 10 c0       	push   $0xc010db7f$/;"	l
c0108ccc	obj/kernel.asm	/^c0108ccc:	e8 0e 77 ff ff       	call   c01003df <__panic>$/;"	l
c0108cd1	obj/kernel.asm	/^c0108cd1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108cd4	obj/kernel.asm	/^c0108cd4:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0108cd9	obj/kernel.asm	/^c0108cd9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108cdc	obj/kernel.asm	/^c0108cdc:	50                   	push   %eax$/;"	l
c0108cdd	obj/kernel.asm	/^c0108cdd:	e8 44 ff ff ff       	call   c0108c26 <pa2page>$/;"	l
c0108ce2	obj/kernel.asm	/^c0108ce2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108ce5	obj/kernel.asm	/^c0108ce5:	c9                   	leave  $/;"	l
c0108ce6	obj/kernel.asm	/^c0108ce6:	c3                   	ret    $/;"	l
c0108ce7	obj/kernel.asm	/^c0108ce7 <mm_count_inc>:$/;"	l
c0108ce7	obj/kernel.asm	/^c0108ce7:	55                   	push   %ebp$/;"	l
c0108ce8	obj/kernel.asm	/^c0108ce8:	89 e5                	mov    %esp,%ebp$/;"	l
c0108cea	obj/kernel.asm	/^c0108cea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108ced	obj/kernel.asm	/^c0108ced:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0108cf0	obj/kernel.asm	/^c0108cf0:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0108cf3	obj/kernel.asm	/^c0108cf3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108cf6	obj/kernel.asm	/^c0108cf6:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0108cf9	obj/kernel.asm	/^c0108cf9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108cfc	obj/kernel.asm	/^c0108cfc:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0108cff	obj/kernel.asm	/^c0108cff:	5d                   	pop    %ebp$/;"	l
c0108d00	obj/kernel.asm	/^c0108d00:	c3                   	ret    $/;"	l
c0108d01	obj/kernel.asm	/^c0108d01 <mm_count_dec>:$/;"	l
c0108d01	obj/kernel.asm	/^c0108d01:	55                   	push   %ebp$/;"	l
c0108d02	obj/kernel.asm	/^c0108d02:	89 e5                	mov    %esp,%ebp$/;"	l
c0108d04	obj/kernel.asm	/^c0108d04:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108d07	obj/kernel.asm	/^c0108d07:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0108d0a	obj/kernel.asm	/^c0108d0a:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0108d0d	obj/kernel.asm	/^c0108d0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108d10	obj/kernel.asm	/^c0108d10:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0108d13	obj/kernel.asm	/^c0108d13:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108d16	obj/kernel.asm	/^c0108d16:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0108d19	obj/kernel.asm	/^c0108d19:	5d                   	pop    %ebp$/;"	l
c0108d1a	obj/kernel.asm	/^c0108d1a:	c3                   	ret    $/;"	l
c0108d1b	obj/kernel.asm	/^c0108d1b <lock_mm>:$/;"	l
c0108d1b	obj/kernel.asm	/^c0108d1b:	55                   	push   %ebp$/;"	l
c0108d1c	obj/kernel.asm	/^c0108d1c:	89 e5                	mov    %esp,%ebp$/;"	l
c0108d1e	obj/kernel.asm	/^c0108d1e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108d21	obj/kernel.asm	/^c0108d21:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0108d25	obj/kernel.asm	/^c0108d25:	74 12                	je     c0108d39 <lock_mm+0x1e>$/;"	l
c0108d27	obj/kernel.asm	/^c0108d27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108d2a	obj/kernel.asm	/^c0108d2a:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0108d2d	obj/kernel.asm	/^c0108d2d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108d30	obj/kernel.asm	/^c0108d30:	50                   	push   %eax$/;"	l
c0108d31	obj/kernel.asm	/^c0108d31:	e8 7c fe ff ff       	call   c0108bb2 <lock>$/;"	l
c0108d36	obj/kernel.asm	/^c0108d36:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d39	obj/kernel.asm	/^c0108d39:	c9                   	leave  $/;"	l
c0108d3a	obj/kernel.asm	/^c0108d3a:	c3                   	ret    $/;"	l
c0108d3b	obj/kernel.asm	/^c0108d3b <unlock_mm>:$/;"	l
c0108d3b	obj/kernel.asm	/^c0108d3b:	55                   	push   %ebp$/;"	l
c0108d3c	obj/kernel.asm	/^c0108d3c:	89 e5                	mov    %esp,%ebp$/;"	l
c0108d3e	obj/kernel.asm	/^c0108d3e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108d41	obj/kernel.asm	/^c0108d41:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0108d45	obj/kernel.asm	/^c0108d45:	74 12                	je     c0108d59 <unlock_mm+0x1e>$/;"	l
c0108d47	obj/kernel.asm	/^c0108d47:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108d4a	obj/kernel.asm	/^c0108d4a:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0108d4d	obj/kernel.asm	/^c0108d4d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108d50	obj/kernel.asm	/^c0108d50:	50                   	push   %eax$/;"	l
c0108d51	obj/kernel.asm	/^c0108d51:	e8 7d fe ff ff       	call   c0108bd3 <unlock>$/;"	l
c0108d56	obj/kernel.asm	/^c0108d56:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d59	obj/kernel.asm	/^c0108d59:	c9                   	leave  $/;"	l
c0108d5a	obj/kernel.asm	/^c0108d5a:	c3                   	ret    $/;"	l
c0108d5b	obj/kernel.asm	/^c0108d5b <alloc_proc>:$/;"	l
c0108d5b	obj/kernel.asm	/^c0108d5b:	55                   	push   %ebp$/;"	l
c0108d5c	obj/kernel.asm	/^c0108d5c:	89 e5                	mov    %esp,%ebp$/;"	l
c0108d5e	obj/kernel.asm	/^c0108d5e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108d61	obj/kernel.asm	/^c0108d61:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108d64	obj/kernel.asm	/^c0108d64:	68 a0 00 00 00       	push   $0xa0$/;"	l
c0108d69	obj/kernel.asm	/^c0108d69:	e8 81 e6 ff ff       	call   c01073ef <kmalloc>$/;"	l
c0108d6e	obj/kernel.asm	/^c0108d6e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d71	obj/kernel.asm	/^c0108d71:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108d74	obj/kernel.asm	/^c0108d74:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108d78	obj/kernel.asm	/^c0108d78:	0f 84 bd 00 00 00    	je     c0108e3b <alloc_proc+0xe0>$/;"	l
c0108d7e	obj/kernel.asm	/^c0108d7e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108d81	obj/kernel.asm	/^c0108d81:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0108d87	obj/kernel.asm	/^c0108d87:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108d8a	obj/kernel.asm	/^c0108d8a:	c7 40 04 ff ff ff ff 	movl   $0xffffffff,0x4(%eax)$/;"	l
c0108d91	obj/kernel.asm	/^c0108d91:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108d94	obj/kernel.asm	/^c0108d94:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0108d9b	obj/kernel.asm	/^c0108d9b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108d9e	obj/kernel.asm	/^c0108d9e:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0108da5	obj/kernel.asm	/^c0108da5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108da8	obj/kernel.asm	/^c0108da8:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c0108daf	obj/kernel.asm	/^c0108daf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108db2	obj/kernel.asm	/^c0108db2:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c0108db9	obj/kernel.asm	/^c0108db9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108dbc	obj/kernel.asm	/^c0108dbc:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c0108dc3	obj/kernel.asm	/^c0108dc3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108dc6	obj/kernel.asm	/^c0108dc6:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0108dc9	obj/kernel.asm	/^c0108dc9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108dcc	obj/kernel.asm	/^c0108dcc:	6a 20                	push   $0x20$/;"	l
c0108dce	obj/kernel.asm	/^c0108dce:	6a 00                	push   $0x0$/;"	l
c0108dd0	obj/kernel.asm	/^c0108dd0:	50                   	push   %eax$/;"	l
c0108dd1	obj/kernel.asm	/^c0108dd1:	e8 6d 24 00 00       	call   c010b243 <memset>$/;"	l
c0108dd6	obj/kernel.asm	/^c0108dd6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108dd9	obj/kernel.asm	/^c0108dd9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108ddc	obj/kernel.asm	/^c0108ddc:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%eax)$/;"	l
c0108de3	obj/kernel.asm	/^c0108de3:	8b 15 14 0f 1b c0    	mov    0xc01b0f14,%edx$/;"	l
c0108de9	obj/kernel.asm	/^c0108de9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108dec	obj/kernel.asm	/^c0108dec:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c0108def	obj/kernel.asm	/^c0108def:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108df2	obj/kernel.asm	/^c0108df2:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)$/;"	l
c0108df9	obj/kernel.asm	/^c0108df9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108dfc	obj/kernel.asm	/^c0108dfc:	83 c0 48             	add    $0x48,%eax$/;"	l
c0108dff	obj/kernel.asm	/^c0108dff:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108e02	obj/kernel.asm	/^c0108e02:	6a 0f                	push   $0xf$/;"	l
c0108e04	obj/kernel.asm	/^c0108e04:	6a 00                	push   $0x0$/;"	l
c0108e06	obj/kernel.asm	/^c0108e06:	50                   	push   %eax$/;"	l
c0108e07	obj/kernel.asm	/^c0108e07:	e8 37 24 00 00       	call   c010b243 <memset>$/;"	l
c0108e0c	obj/kernel.asm	/^c0108e0c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e0f	obj/kernel.asm	/^c0108e0f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e12	obj/kernel.asm	/^c0108e12:	c7 40 6c 00 00 00 00 	movl   $0x0,0x6c(%eax)$/;"	l
c0108e19	obj/kernel.asm	/^c0108e19:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e1c	obj/kernel.asm	/^c0108e1c:	c7 40 78 00 00 00 00 	movl   $0x0,0x78(%eax)$/;"	l
c0108e23	obj/kernel.asm	/^c0108e23:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e26	obj/kernel.asm	/^c0108e26:	8b 50 78             	mov    0x78(%eax),%edx$/;"	l
c0108e29	obj/kernel.asm	/^c0108e29:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e2c	obj/kernel.asm	/^c0108e2c:	89 50 74             	mov    %edx,0x74(%eax)$/;"	l
c0108e2f	obj/kernel.asm	/^c0108e2f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e32	obj/kernel.asm	/^c0108e32:	8b 50 74             	mov    0x74(%eax),%edx$/;"	l
c0108e35	obj/kernel.asm	/^c0108e35:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e38	obj/kernel.asm	/^c0108e38:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c0108e3b	obj/kernel.asm	/^c0108e3b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e3e	obj/kernel.asm	/^c0108e3e:	c9                   	leave  $/;"	l
c0108e3f	obj/kernel.asm	/^c0108e3f:	c3                   	ret    $/;"	l
c0108e40	obj/kernel.asm	/^c0108e40 <set_proc_name>:$/;"	l
c0108e40	obj/kernel.asm	/^c0108e40:	55                   	push   %ebp$/;"	l
c0108e41	obj/kernel.asm	/^c0108e41:	89 e5                	mov    %esp,%ebp$/;"	l
c0108e43	obj/kernel.asm	/^c0108e43:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108e46	obj/kernel.asm	/^c0108e46:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108e49	obj/kernel.asm	/^c0108e49:	83 c0 48             	add    $0x48,%eax$/;"	l
c0108e4c	obj/kernel.asm	/^c0108e4c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108e4f	obj/kernel.asm	/^c0108e4f:	6a 10                	push   $0x10$/;"	l
c0108e51	obj/kernel.asm	/^c0108e51:	6a 00                	push   $0x0$/;"	l
c0108e53	obj/kernel.asm	/^c0108e53:	50                   	push   %eax$/;"	l
c0108e54	obj/kernel.asm	/^c0108e54:	e8 ea 23 00 00       	call   c010b243 <memset>$/;"	l
c0108e59	obj/kernel.asm	/^c0108e59:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e5c	obj/kernel.asm	/^c0108e5c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108e5f	obj/kernel.asm	/^c0108e5f:	83 c0 48             	add    $0x48,%eax$/;"	l
c0108e62	obj/kernel.asm	/^c0108e62:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108e65	obj/kernel.asm	/^c0108e65:	6a 0f                	push   $0xf$/;"	l
c0108e67	obj/kernel.asm	/^c0108e67:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0108e6a	obj/kernel.asm	/^c0108e6a:	50                   	push   %eax$/;"	l
c0108e6b	obj/kernel.asm	/^c0108e6b:	e8 b6 24 00 00       	call   c010b326 <memcpy>$/;"	l
c0108e70	obj/kernel.asm	/^c0108e70:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e73	obj/kernel.asm	/^c0108e73:	c9                   	leave  $/;"	l
c0108e74	obj/kernel.asm	/^c0108e74:	c3                   	ret    $/;"	l
c0108e75	obj/kernel.asm	/^c0108e75 <get_proc_name>:$/;"	l
c0108e75	obj/kernel.asm	/^c0108e75:	55                   	push   %ebp$/;"	l
c0108e76	obj/kernel.asm	/^c0108e76:	89 e5                	mov    %esp,%ebp$/;"	l
c0108e78	obj/kernel.asm	/^c0108e78:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108e7b	obj/kernel.asm	/^c0108e7b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108e7e	obj/kernel.asm	/^c0108e7e:	6a 10                	push   $0x10$/;"	l
c0108e80	obj/kernel.asm	/^c0108e80:	6a 00                	push   $0x0$/;"	l
c0108e82	obj/kernel.asm	/^c0108e82:	68 84 0e 1b c0       	push   $0xc01b0e84$/;"	l
c0108e87	obj/kernel.asm	/^c0108e87:	e8 b7 23 00 00       	call   c010b243 <memset>$/;"	l
c0108e8c	obj/kernel.asm	/^c0108e8c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e8f	obj/kernel.asm	/^c0108e8f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108e92	obj/kernel.asm	/^c0108e92:	83 c0 48             	add    $0x48,%eax$/;"	l
c0108e95	obj/kernel.asm	/^c0108e95:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108e98	obj/kernel.asm	/^c0108e98:	6a 0f                	push   $0xf$/;"	l
c0108e9a	obj/kernel.asm	/^c0108e9a:	50                   	push   %eax$/;"	l
c0108e9b	obj/kernel.asm	/^c0108e9b:	68 84 0e 1b c0       	push   $0xc01b0e84$/;"	l
c0108ea0	obj/kernel.asm	/^c0108ea0:	e8 81 24 00 00       	call   c010b326 <memcpy>$/;"	l
c0108ea5	obj/kernel.asm	/^c0108ea5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108ea8	obj/kernel.asm	/^c0108ea8:	c9                   	leave  $/;"	l
c0108ea9	obj/kernel.asm	/^c0108ea9:	c3                   	ret    $/;"	l
c0108eaa	obj/kernel.asm	/^c0108eaa <set_links>:$/;"	l
c0108eaa	obj/kernel.asm	/^c0108eaa:	55                   	push   %ebp$/;"	l
c0108eab	obj/kernel.asm	/^c0108eab:	89 e5                	mov    %esp,%ebp$/;"	l
c0108ead	obj/kernel.asm	/^c0108ead:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0108eb0	obj/kernel.asm	/^c0108eb0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108eb3	obj/kernel.asm	/^c0108eb3:	83 c0 58             	add    $0x58,%eax$/;"	l
c0108eb6	obj/kernel.asm	/^c0108eb6:	c7 45 fc f8 0f 1b c0 	movl   $0xc01b0ff8,-0x4(%ebp)$/;"	l
c0108ebd	obj/kernel.asm	/^c0108ebd:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0108ec0	obj/kernel.asm	/^c0108ec0:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108ec3	obj/kernel.asm	/^c0108ec3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108ec6	obj/kernel.asm	/^c0108ec6:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0108ec9	obj/kernel.asm	/^c0108ec9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108ecc	obj/kernel.asm	/^c0108ecc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108ecf	obj/kernel.asm	/^c0108ecf:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108ed2	obj/kernel.asm	/^c0108ed2:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0108ed5	obj/kernel.asm	/^c0108ed5:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0108ed8	obj/kernel.asm	/^c0108ed8:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108edb	obj/kernel.asm	/^c0108edb:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c0108ede	obj/kernel.asm	/^c0108ede:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108ee1	obj/kernel.asm	/^c0108ee1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108ee4	obj/kernel.asm	/^c0108ee4:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0108ee7	obj/kernel.asm	/^c0108ee7:	89 10                	mov    %edx,(%eax)$/;"	l
c0108ee9	obj/kernel.asm	/^c0108ee9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108eec	obj/kernel.asm	/^c0108eec:	8b 10                	mov    (%eax),%edx$/;"	l
c0108eee	obj/kernel.asm	/^c0108eee:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108ef1	obj/kernel.asm	/^c0108ef1:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108ef4	obj/kernel.asm	/^c0108ef4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108ef7	obj/kernel.asm	/^c0108ef7:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0108efa	obj/kernel.asm	/^c0108efa:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108efd	obj/kernel.asm	/^c0108efd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108f00	obj/kernel.asm	/^c0108f00:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0108f03	obj/kernel.asm	/^c0108f03:	89 10                	mov    %edx,(%eax)$/;"	l
c0108f05	obj/kernel.asm	/^c0108f05:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f08	obj/kernel.asm	/^c0108f08:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)$/;"	l
c0108f0f	obj/kernel.asm	/^c0108f0f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f12	obj/kernel.asm	/^c0108f12:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0108f15	obj/kernel.asm	/^c0108f15:	8b 50 70             	mov    0x70(%eax),%edx$/;"	l
c0108f18	obj/kernel.asm	/^c0108f18:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f1b	obj/kernel.asm	/^c0108f1b:	89 50 78             	mov    %edx,0x78(%eax)$/;"	l
c0108f1e	obj/kernel.asm	/^c0108f1e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f21	obj/kernel.asm	/^c0108f21:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0108f24	obj/kernel.asm	/^c0108f24:	85 c0                	test   %eax,%eax$/;"	l
c0108f26	obj/kernel.asm	/^c0108f26:	74 0c                	je     c0108f34 <set_links+0x8a>$/;"	l
c0108f28	obj/kernel.asm	/^c0108f28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f2b	obj/kernel.asm	/^c0108f2b:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0108f2e	obj/kernel.asm	/^c0108f2e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108f31	obj/kernel.asm	/^c0108f31:	89 50 74             	mov    %edx,0x74(%eax)$/;"	l
c0108f34	obj/kernel.asm	/^c0108f34:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f37	obj/kernel.asm	/^c0108f37:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0108f3a	obj/kernel.asm	/^c0108f3a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108f3d	obj/kernel.asm	/^c0108f3d:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c0108f40	obj/kernel.asm	/^c0108f40:	a1 80 0e 1b c0       	mov    0xc01b0e80,%eax$/;"	l
c0108f45	obj/kernel.asm	/^c0108f45:	83 c0 01             	add    $0x1,%eax$/;"	l
c0108f48	obj/kernel.asm	/^c0108f48:	a3 80 0e 1b c0       	mov    %eax,0xc01b0e80$/;"	l
c0108f4d	obj/kernel.asm	/^c0108f4d:	c9                   	leave  $/;"	l
c0108f4e	obj/kernel.asm	/^c0108f4e:	c3                   	ret    $/;"	l
c0108f4f	obj/kernel.asm	/^c0108f4f <remove_links>:$/;"	l
c0108f4f	obj/kernel.asm	/^c0108f4f:	55                   	push   %ebp$/;"	l
c0108f50	obj/kernel.asm	/^c0108f50:	89 e5                	mov    %esp,%ebp$/;"	l
c0108f52	obj/kernel.asm	/^c0108f52:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0108f55	obj/kernel.asm	/^c0108f55:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f58	obj/kernel.asm	/^c0108f58:	83 c0 58             	add    $0x58,%eax$/;"	l
c0108f5b	obj/kernel.asm	/^c0108f5b:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0108f5e	obj/kernel.asm	/^c0108f5e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108f61	obj/kernel.asm	/^c0108f61:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108f64	obj/kernel.asm	/^c0108f64:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0108f67	obj/kernel.asm	/^c0108f67:	8b 12                	mov    (%edx),%edx$/;"	l
c0108f69	obj/kernel.asm	/^c0108f69:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c0108f6c	obj/kernel.asm	/^c0108f6c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108f6f	obj/kernel.asm	/^c0108f6f:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0108f72	obj/kernel.asm	/^c0108f72:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108f75	obj/kernel.asm	/^c0108f75:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108f78	obj/kernel.asm	/^c0108f78:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108f7b	obj/kernel.asm	/^c0108f7b:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c0108f7e	obj/kernel.asm	/^c0108f7e:	89 10                	mov    %edx,(%eax)$/;"	l
c0108f80	obj/kernel.asm	/^c0108f80:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f83	obj/kernel.asm	/^c0108f83:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0108f86	obj/kernel.asm	/^c0108f86:	85 c0                	test   %eax,%eax$/;"	l
c0108f88	obj/kernel.asm	/^c0108f88:	74 0f                	je     c0108f99 <remove_links+0x4a>$/;"	l
c0108f8a	obj/kernel.asm	/^c0108f8a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f8d	obj/kernel.asm	/^c0108f8d:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c0108f90	obj/kernel.asm	/^c0108f90:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108f93	obj/kernel.asm	/^c0108f93:	8b 52 74             	mov    0x74(%edx),%edx$/;"	l
c0108f96	obj/kernel.asm	/^c0108f96:	89 50 74             	mov    %edx,0x74(%eax)$/;"	l
c0108f99	obj/kernel.asm	/^c0108f99:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f9c	obj/kernel.asm	/^c0108f9c:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c0108f9f	obj/kernel.asm	/^c0108f9f:	85 c0                	test   %eax,%eax$/;"	l
c0108fa1	obj/kernel.asm	/^c0108fa1:	74 11                	je     c0108fb4 <remove_links+0x65>$/;"	l
c0108fa3	obj/kernel.asm	/^c0108fa3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108fa6	obj/kernel.asm	/^c0108fa6:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c0108fa9	obj/kernel.asm	/^c0108fa9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108fac	obj/kernel.asm	/^c0108fac:	8b 52 78             	mov    0x78(%edx),%edx$/;"	l
c0108faf	obj/kernel.asm	/^c0108faf:	89 50 78             	mov    %edx,0x78(%eax)$/;"	l
c0108fb2	obj/kernel.asm	/^c0108fb2:	eb 0f                	jmp    c0108fc3 <remove_links+0x74>$/;"	l
c0108fb4	obj/kernel.asm	/^c0108fb4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108fb7	obj/kernel.asm	/^c0108fb7:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0108fba	obj/kernel.asm	/^c0108fba:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108fbd	obj/kernel.asm	/^c0108fbd:	8b 52 78             	mov    0x78(%edx),%edx$/;"	l
c0108fc0	obj/kernel.asm	/^c0108fc0:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c0108fc3	obj/kernel.asm	/^c0108fc3:	a1 80 0e 1b c0       	mov    0xc01b0e80,%eax$/;"	l
c0108fc8	obj/kernel.asm	/^c0108fc8:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0108fcb	obj/kernel.asm	/^c0108fcb:	a3 80 0e 1b c0       	mov    %eax,0xc01b0e80$/;"	l
c0108fd0	obj/kernel.asm	/^c0108fd0:	c9                   	leave  $/;"	l
c0108fd1	obj/kernel.asm	/^c0108fd1:	c3                   	ret    $/;"	l
c0108fd2	obj/kernel.asm	/^c0108fd2 <get_pid>:$/;"	l
c0108fd2	obj/kernel.asm	/^c0108fd2:	55                   	push   %ebp$/;"	l
c0108fd3	obj/kernel.asm	/^c0108fd3:	89 e5                	mov    %esp,%ebp$/;"	l
c0108fd5	obj/kernel.asm	/^c0108fd5:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0108fd8	obj/kernel.asm	/^c0108fd8:	c7 45 f8 f8 0f 1b c0 	movl   $0xc01b0ff8,-0x8(%ebp)$/;"	l
c0108fdf	obj/kernel.asm	/^c0108fdf:	a1 e0 ca 12 c0       	mov    0xc012cae0,%eax$/;"	l
c0108fe4	obj/kernel.asm	/^c0108fe4:	83 c0 01             	add    $0x1,%eax$/;"	l
c0108fe7	obj/kernel.asm	/^c0108fe7:	a3 e0 ca 12 c0       	mov    %eax,0xc012cae0$/;"	l
c0108fec	obj/kernel.asm	/^c0108fec:	a1 e0 ca 12 c0       	mov    0xc012cae0,%eax$/;"	l
c0108ff1	obj/kernel.asm	/^c0108ff1:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c0108ff6	obj/kernel.asm	/^c0108ff6:	7e 0c                	jle    c0109004 <get_pid+0x32>$/;"	l
c0108ff8	obj/kernel.asm	/^c0108ff8:	c7 05 e0 ca 12 c0 01 	movl   $0x1,0xc012cae0$/;"	l
c0108fff	obj/kernel.asm	/^c0108fff:	00 00 00 $/;"	l
c0109002	obj/kernel.asm	/^c0109002:	eb 13                	jmp    c0109017 <get_pid+0x45>$/;"	l
c0109004	obj/kernel.asm	/^c0109004:	8b 15 e0 ca 12 c0    	mov    0xc012cae0,%edx$/;"	l
c010900a	obj/kernel.asm	/^c010900a:	a1 e4 ca 12 c0       	mov    0xc012cae4,%eax$/;"	l
c010900f	obj/kernel.asm	/^c010900f:	39 c2                	cmp    %eax,%edx$/;"	l
c0109011	obj/kernel.asm	/^c0109011:	0f 8c ac 00 00 00    	jl     c01090c3 <get_pid+0xf1>$/;"	l
c0109017	obj/kernel.asm	/^c0109017:	c7 05 e4 ca 12 c0 00 	movl   $0x2000,0xc012cae4$/;"	l
c010901e	obj/kernel.asm	/^c010901e:	20 00 00 $/;"	l
c0109021	obj/kernel.asm	/^c0109021:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0109024	obj/kernel.asm	/^c0109024:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0109027	obj/kernel.asm	/^c0109027:	eb 7f                	jmp    c01090a8 <get_pid+0xd6>$/;"	l
c0109029	obj/kernel.asm	/^c0109029:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010902c	obj/kernel.asm	/^c010902c:	83 e8 58             	sub    $0x58,%eax$/;"	l
c010902f	obj/kernel.asm	/^c010902f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109032	obj/kernel.asm	/^c0109032:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109035	obj/kernel.asm	/^c0109035:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109038	obj/kernel.asm	/^c0109038:	a1 e0 ca 12 c0       	mov    0xc012cae0,%eax$/;"	l
c010903d	obj/kernel.asm	/^c010903d:	39 c2                	cmp    %eax,%edx$/;"	l
c010903f	obj/kernel.asm	/^c010903f:	75 3e                	jne    c010907f <get_pid+0xad>$/;"	l
c0109041	obj/kernel.asm	/^c0109041:	a1 e0 ca 12 c0       	mov    0xc012cae0,%eax$/;"	l
c0109046	obj/kernel.asm	/^c0109046:	83 c0 01             	add    $0x1,%eax$/;"	l
c0109049	obj/kernel.asm	/^c0109049:	a3 e0 ca 12 c0       	mov    %eax,0xc012cae0$/;"	l
c010904e	obj/kernel.asm	/^c010904e:	8b 15 e0 ca 12 c0    	mov    0xc012cae0,%edx$/;"	l
c0109054	obj/kernel.asm	/^c0109054:	a1 e4 ca 12 c0       	mov    0xc012cae4,%eax$/;"	l
c0109059	obj/kernel.asm	/^c0109059:	39 c2                	cmp    %eax,%edx$/;"	l
c010905b	obj/kernel.asm	/^c010905b:	7c 4b                	jl     c01090a8 <get_pid+0xd6>$/;"	l
c010905d	obj/kernel.asm	/^c010905d:	a1 e0 ca 12 c0       	mov    0xc012cae0,%eax$/;"	l
c0109062	obj/kernel.asm	/^c0109062:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c0109067	obj/kernel.asm	/^c0109067:	7e 0a                	jle    c0109073 <get_pid+0xa1>$/;"	l
c0109069	obj/kernel.asm	/^c0109069:	c7 05 e0 ca 12 c0 01 	movl   $0x1,0xc012cae0$/;"	l
c0109070	obj/kernel.asm	/^c0109070:	00 00 00 $/;"	l
c0109073	obj/kernel.asm	/^c0109073:	c7 05 e4 ca 12 c0 00 	movl   $0x2000,0xc012cae4$/;"	l
c010907a	obj/kernel.asm	/^c010907a:	20 00 00 $/;"	l
c010907d	obj/kernel.asm	/^c010907d:	eb a2                	jmp    c0109021 <get_pid+0x4f>$/;"	l
c010907f	obj/kernel.asm	/^c010907f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109082	obj/kernel.asm	/^c0109082:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109085	obj/kernel.asm	/^c0109085:	a1 e0 ca 12 c0       	mov    0xc012cae0,%eax$/;"	l
c010908a	obj/kernel.asm	/^c010908a:	39 c2                	cmp    %eax,%edx$/;"	l
c010908c	obj/kernel.asm	/^c010908c:	7e 1a                	jle    c01090a8 <get_pid+0xd6>$/;"	l
c010908e	obj/kernel.asm	/^c010908e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109091	obj/kernel.asm	/^c0109091:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109094	obj/kernel.asm	/^c0109094:	a1 e4 ca 12 c0       	mov    0xc012cae4,%eax$/;"	l
c0109099	obj/kernel.asm	/^c0109099:	39 c2                	cmp    %eax,%edx$/;"	l
c010909b	obj/kernel.asm	/^c010909b:	7d 0b                	jge    c01090a8 <get_pid+0xd6>$/;"	l
c010909d	obj/kernel.asm	/^c010909d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01090a0	obj/kernel.asm	/^c01090a0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01090a3	obj/kernel.asm	/^c01090a3:	a3 e4 ca 12 c0       	mov    %eax,0xc012cae4$/;"	l
c01090a8	obj/kernel.asm	/^c01090a8:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01090ab	obj/kernel.asm	/^c01090ab:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01090ae	obj/kernel.asm	/^c01090ae:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01090b1	obj/kernel.asm	/^c01090b1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01090b4	obj/kernel.asm	/^c01090b4:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01090b7	obj/kernel.asm	/^c01090b7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01090ba	obj/kernel.asm	/^c01090ba:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c01090bd	obj/kernel.asm	/^c01090bd:	0f 85 66 ff ff ff    	jne    c0109029 <get_pid+0x57>$/;"	l
c01090c3	obj/kernel.asm	/^c01090c3:	a1 e0 ca 12 c0       	mov    0xc012cae0,%eax$/;"	l
c01090c8	obj/kernel.asm	/^c01090c8:	c9                   	leave  $/;"	l
c01090c9	obj/kernel.asm	/^c01090c9:	c3                   	ret    $/;"	l
c01090ca	obj/kernel.asm	/^c01090ca <proc_run>:$/;"	l
c01090ca	obj/kernel.asm	/^c01090ca:	55                   	push   %ebp$/;"	l
c01090cb	obj/kernel.asm	/^c01090cb:	89 e5                	mov    %esp,%ebp$/;"	l
c01090cd	obj/kernel.asm	/^c01090cd:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01090d0	obj/kernel.asm	/^c01090d0:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c01090d5	obj/kernel.asm	/^c01090d5:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c01090d8	obj/kernel.asm	/^c01090d8:	74 6b                	je     c0109145 <proc_run+0x7b>$/;"	l
c01090da	obj/kernel.asm	/^c01090da:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c01090df	obj/kernel.asm	/^c01090df:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01090e2	obj/kernel.asm	/^c01090e2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01090e5	obj/kernel.asm	/^c01090e5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01090e8	obj/kernel.asm	/^c01090e8:	e8 6e fa ff ff       	call   c0108b5b <__intr_save>$/;"	l
c01090ed	obj/kernel.asm	/^c01090ed:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01090f0	obj/kernel.asm	/^c01090f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01090f3	obj/kernel.asm	/^c01090f3:	a3 48 ee 1a c0       	mov    %eax,0xc01aee48$/;"	l
c01090f8	obj/kernel.asm	/^c01090f8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01090fb	obj/kernel.asm	/^c01090fb:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01090fe	obj/kernel.asm	/^c01090fe:	05 00 20 00 00       	add    $0x2000,%eax$/;"	l
c0109103	obj/kernel.asm	/^c0109103:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109106	obj/kernel.asm	/^c0109106:	50                   	push   %eax$/;"	l
c0109107	obj/kernel.asm	/^c0109107:	e8 f9 a6 ff ff       	call   c0103805 <load_esp0>$/;"	l
c010910c	obj/kernel.asm	/^c010910c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010910f	obj/kernel.asm	/^c010910f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109112	obj/kernel.asm	/^c0109112:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c0109115	obj/kernel.asm	/^c0109115:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109118	obj/kernel.asm	/^c0109118:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010911b	obj/kernel.asm	/^c010911b:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010911e	obj/kernel.asm	/^c010911e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109121	obj/kernel.asm	/^c0109121:	8d 50 1c             	lea    0x1c(%eax),%edx$/;"	l
c0109124	obj/kernel.asm	/^c0109124:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109127	obj/kernel.asm	/^c0109127:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010912a	obj/kernel.asm	/^c010912a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010912d	obj/kernel.asm	/^c010912d:	52                   	push   %edx$/;"	l
c010912e	obj/kernel.asm	/^c010912e:	50                   	push   %eax$/;"	l
c010912f	obj/kernel.asm	/^c010912f:	e8 b0 f9 ff ff       	call   c0108ae4 <switch_to>$/;"	l
c0109134	obj/kernel.asm	/^c0109134:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109137	obj/kernel.asm	/^c0109137:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010913a	obj/kernel.asm	/^c010913a:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010913d	obj/kernel.asm	/^c010913d:	e8 43 fa ff ff       	call   c0108b85 <__intr_restore>$/;"	l
c0109142	obj/kernel.asm	/^c0109142:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109145	obj/kernel.asm	/^c0109145:	c9                   	leave  $/;"	l
c0109146	obj/kernel.asm	/^c0109146:	c3                   	ret    $/;"	l
c0109147	obj/kernel.asm	/^c0109147 <forkret>:$/;"	l
c0109147	obj/kernel.asm	/^c0109147:	55                   	push   %ebp$/;"	l
c0109148	obj/kernel.asm	/^c0109148:	89 e5                	mov    %esp,%ebp$/;"	l
c010914a	obj/kernel.asm	/^c010914a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010914d	obj/kernel.asm	/^c010914d:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0109152	obj/kernel.asm	/^c0109152:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109155	obj/kernel.asm	/^c0109155:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109158	obj/kernel.asm	/^c0109158:	50                   	push   %eax$/;"	l
c0109159	obj/kernel.asm	/^c0109159:	e8 e9 a4 ff ff       	call   c0103647 <forkrets>$/;"	l
c010915e	obj/kernel.asm	/^c010915e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109161	obj/kernel.asm	/^c0109161:	c9                   	leave  $/;"	l
c0109162	obj/kernel.asm	/^c0109162:	c3                   	ret    $/;"	l
c0109163	obj/kernel.asm	/^c0109163 <hash_proc>:$/;"	l
c0109163	obj/kernel.asm	/^c0109163:	55                   	push   %ebp$/;"	l
c0109164	obj/kernel.asm	/^c0109164:	89 e5                	mov    %esp,%ebp$/;"	l
c0109166	obj/kernel.asm	/^c0109166:	53                   	push   %ebx$/;"	l
c0109167	obj/kernel.asm	/^c0109167:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010916a	obj/kernel.asm	/^c010916a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010916d	obj/kernel.asm	/^c010916d:	8d 58 60             	lea    0x60(%eax),%ebx$/;"	l
c0109170	obj/kernel.asm	/^c0109170:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109173	obj/kernel.asm	/^c0109173:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109176	obj/kernel.asm	/^c0109176:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109179	obj/kernel.asm	/^c0109179:	6a 0a                	push   $0xa$/;"	l
c010917b	obj/kernel.asm	/^c010917b:	50                   	push   %eax$/;"	l
c010917c	obj/kernel.asm	/^c010917c:	e8 53 28 00 00       	call   c010b9d4 <hash32>$/;"	l
c0109181	obj/kernel.asm	/^c0109181:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109184	obj/kernel.asm	/^c0109184:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0109187	obj/kernel.asm	/^c0109187:	05 80 ee 1a c0       	add    $0xc01aee80,%eax$/;"	l
c010918c	obj/kernel.asm	/^c010918c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010918f	obj/kernel.asm	/^c010918f:	89 5d f0             	mov    %ebx,-0x10(%ebp)$/;"	l
c0109192	obj/kernel.asm	/^c0109192:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109195	obj/kernel.asm	/^c0109195:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109198	obj/kernel.asm	/^c0109198:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010919b	obj/kernel.asm	/^c010919b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010919e	obj/kernel.asm	/^c010919e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01091a1	obj/kernel.asm	/^c01091a1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01091a4	obj/kernel.asm	/^c01091a4:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01091a7	obj/kernel.asm	/^c01091a7:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c01091aa	obj/kernel.asm	/^c01091aa:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01091ad	obj/kernel.asm	/^c01091ad:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c01091b0	obj/kernel.asm	/^c01091b0:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01091b3	obj/kernel.asm	/^c01091b3:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01091b6	obj/kernel.asm	/^c01091b6:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01091b9	obj/kernel.asm	/^c01091b9:	89 10                	mov    %edx,(%eax)$/;"	l
c01091bb	obj/kernel.asm	/^c01091bb:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01091be	obj/kernel.asm	/^c01091be:	8b 10                	mov    (%eax),%edx$/;"	l
c01091c0	obj/kernel.asm	/^c01091c0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01091c3	obj/kernel.asm	/^c01091c3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01091c6	obj/kernel.asm	/^c01091c6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01091c9	obj/kernel.asm	/^c01091c9:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01091cc	obj/kernel.asm	/^c01091cc:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01091cf	obj/kernel.asm	/^c01091cf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01091d2	obj/kernel.asm	/^c01091d2:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01091d5	obj/kernel.asm	/^c01091d5:	89 10                	mov    %edx,(%eax)$/;"	l
c01091d7	obj/kernel.asm	/^c01091d7:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c01091da	obj/kernel.asm	/^c01091da:	c9                   	leave  $/;"	l
c01091db	obj/kernel.asm	/^c01091db:	c3                   	ret    $/;"	l
c01091dc	obj/kernel.asm	/^c01091dc <unhash_proc>:$/;"	l
c01091dc	obj/kernel.asm	/^c01091dc:	55                   	push   %ebp$/;"	l
c01091dd	obj/kernel.asm	/^c01091dd:	89 e5                	mov    %esp,%ebp$/;"	l
c01091df	obj/kernel.asm	/^c01091df:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01091e2	obj/kernel.asm	/^c01091e2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01091e5	obj/kernel.asm	/^c01091e5:	83 c0 60             	add    $0x60,%eax$/;"	l
c01091e8	obj/kernel.asm	/^c01091e8:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01091eb	obj/kernel.asm	/^c01091eb:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01091ee	obj/kernel.asm	/^c01091ee:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01091f1	obj/kernel.asm	/^c01091f1:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01091f4	obj/kernel.asm	/^c01091f4:	8b 12                	mov    (%edx),%edx$/;"	l
c01091f6	obj/kernel.asm	/^c01091f6:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c01091f9	obj/kernel.asm	/^c01091f9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01091fc	obj/kernel.asm	/^c01091fc:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01091ff	obj/kernel.asm	/^c01091ff:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0109202	obj/kernel.asm	/^c0109202:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109205	obj/kernel.asm	/^c0109205:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109208	obj/kernel.asm	/^c0109208:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010920b	obj/kernel.asm	/^c010920b:	89 10                	mov    %edx,(%eax)$/;"	l
c010920d	obj/kernel.asm	/^c010920d:	c9                   	leave  $/;"	l
c010920e	obj/kernel.asm	/^c010920e:	c3                   	ret    $/;"	l
c010920f	obj/kernel.asm	/^c010920f <find_proc>:$/;"	l
c010920f	obj/kernel.asm	/^c010920f:	55                   	push   %ebp$/;"	l
c0109210	obj/kernel.asm	/^c0109210:	89 e5                	mov    %esp,%ebp$/;"	l
c0109212	obj/kernel.asm	/^c0109212:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109215	obj/kernel.asm	/^c0109215:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0109219	obj/kernel.asm	/^c0109219:	7e 5d                	jle    c0109278 <find_proc+0x69>$/;"	l
c010921b	obj/kernel.asm	/^c010921b:	81 7d 08 ff 1f 00 00 	cmpl   $0x1fff,0x8(%ebp)$/;"	l
c0109222	obj/kernel.asm	/^c0109222:	7f 54                	jg     c0109278 <find_proc+0x69>$/;"	l
c0109224	obj/kernel.asm	/^c0109224:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109227	obj/kernel.asm	/^c0109227:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010922a	obj/kernel.asm	/^c010922a:	6a 0a                	push   $0xa$/;"	l
c010922c	obj/kernel.asm	/^c010922c:	50                   	push   %eax$/;"	l
c010922d	obj/kernel.asm	/^c010922d:	e8 a2 27 00 00       	call   c010b9d4 <hash32>$/;"	l
c0109232	obj/kernel.asm	/^c0109232:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109235	obj/kernel.asm	/^c0109235:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0109238	obj/kernel.asm	/^c0109238:	05 80 ee 1a c0       	add    $0xc01aee80,%eax$/;"	l
c010923d	obj/kernel.asm	/^c010923d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109240	obj/kernel.asm	/^c0109240:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109243	obj/kernel.asm	/^c0109243:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109246	obj/kernel.asm	/^c0109246:	eb 19                	jmp    c0109261 <find_proc+0x52>$/;"	l
c0109248	obj/kernel.asm	/^c0109248:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010924b	obj/kernel.asm	/^c010924b:	83 e8 60             	sub    $0x60,%eax$/;"	l
c010924e	obj/kernel.asm	/^c010924e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109251	obj/kernel.asm	/^c0109251:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109254	obj/kernel.asm	/^c0109254:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109257	obj/kernel.asm	/^c0109257:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010925a	obj/kernel.asm	/^c010925a:	75 05                	jne    c0109261 <find_proc+0x52>$/;"	l
c010925c	obj/kernel.asm	/^c010925c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010925f	obj/kernel.asm	/^c010925f:	eb 1c                	jmp    c010927d <find_proc+0x6e>$/;"	l
c0109261	obj/kernel.asm	/^c0109261:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109264	obj/kernel.asm	/^c0109264:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109267	obj/kernel.asm	/^c0109267:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010926a	obj/kernel.asm	/^c010926a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010926d	obj/kernel.asm	/^c010926d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109270	obj/kernel.asm	/^c0109270:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109273	obj/kernel.asm	/^c0109273:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0109276	obj/kernel.asm	/^c0109276:	75 d0                	jne    c0109248 <find_proc+0x39>$/;"	l
c0109278	obj/kernel.asm	/^c0109278:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010927d	obj/kernel.asm	/^c010927d:	c9                   	leave  $/;"	l
c010927e	obj/kernel.asm	/^c010927e:	c3                   	ret    $/;"	l
c010927f	obj/kernel.asm	/^c010927f <kernel_thread>:$/;"	l
c010927f	obj/kernel.asm	/^c010927f:	55                   	push   %ebp$/;"	l
c0109280	obj/kernel.asm	/^c0109280:	89 e5                	mov    %esp,%ebp$/;"	l
c0109282	obj/kernel.asm	/^c0109282:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0109285	obj/kernel.asm	/^c0109285:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109288	obj/kernel.asm	/^c0109288:	6a 4c                	push   $0x4c$/;"	l
c010928a	obj/kernel.asm	/^c010928a:	6a 00                	push   $0x0$/;"	l
c010928c	obj/kernel.asm	/^c010928c:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c010928f	obj/kernel.asm	/^c010928f:	50                   	push   %eax$/;"	l
c0109290	obj/kernel.asm	/^c0109290:	e8 ae 1f 00 00       	call   c010b243 <memset>$/;"	l
c0109295	obj/kernel.asm	/^c0109295:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109298	obj/kernel.asm	/^c0109298:	66 c7 45 e8 08 00    	movw   $0x8,-0x18(%ebp)$/;"	l
c010929e	obj/kernel.asm	/^c010929e:	66 c7 45 f4 10 00    	movw   $0x10,-0xc(%ebp)$/;"	l
c01092a4	obj/kernel.asm	/^c01092a4:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c01092a8	obj/kernel.asm	/^c01092a8:	66 89 45 d4          	mov    %ax,-0x2c(%ebp)$/;"	l
c01092ac	obj/kernel.asm	/^c01092ac:	0f b7 45 d4          	movzwl -0x2c(%ebp),%eax$/;"	l
c01092b0	obj/kernel.asm	/^c01092b0:	66 89 45 d8          	mov    %ax,-0x28(%ebp)$/;"	l
c01092b4	obj/kernel.asm	/^c01092b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01092b7	obj/kernel.asm	/^c01092b7:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c01092ba	obj/kernel.asm	/^c01092ba:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01092bd	obj/kernel.asm	/^c01092bd:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c01092c0	obj/kernel.asm	/^c01092c0:	b8 db 8a 10 c0       	mov    $0xc0108adb,%eax$/;"	l
c01092c5	obj/kernel.asm	/^c01092c5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01092c8	obj/kernel.asm	/^c01092c8:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01092cb	obj/kernel.asm	/^c01092cb:	80 cc 01             	or     $0x1,%ah$/;"	l
c01092ce	obj/kernel.asm	/^c01092ce:	89 c2                	mov    %eax,%edx$/;"	l
c01092d0	obj/kernel.asm	/^c01092d0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01092d3	obj/kernel.asm	/^c01092d3:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c01092d6	obj/kernel.asm	/^c01092d6:	50                   	push   %eax$/;"	l
c01092d7	obj/kernel.asm	/^c01092d7:	6a 00                	push   $0x0$/;"	l
c01092d9	obj/kernel.asm	/^c01092d9:	52                   	push   %edx$/;"	l
c01092da	obj/kernel.asm	/^c01092da:	e8 f0 02 00 00       	call   c01095cf <do_fork>$/;"	l
c01092df	obj/kernel.asm	/^c01092df:	83 c4 10             	add    $0x10,%esp$/;"	l
c01092e2	obj/kernel.asm	/^c01092e2:	c9                   	leave  $/;"	l
c01092e3	obj/kernel.asm	/^c01092e3:	c3                   	ret    $/;"	l
c01092e4	obj/kernel.asm	/^c01092e4 <setup_kstack>:$/;"	l
c01092e4	obj/kernel.asm	/^c01092e4:	55                   	push   %ebp$/;"	l
c01092e5	obj/kernel.asm	/^c01092e5:	89 e5                	mov    %esp,%ebp$/;"	l
c01092e7	obj/kernel.asm	/^c01092e7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01092ea	obj/kernel.asm	/^c01092ea:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01092ed	obj/kernel.asm	/^c01092ed:	6a 02                	push   $0x2$/;"	l
c01092ef	obj/kernel.asm	/^c01092ef:	e8 61 a6 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c01092f4	obj/kernel.asm	/^c01092f4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01092f7	obj/kernel.asm	/^c01092f7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01092fa	obj/kernel.asm	/^c01092fa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01092fe	obj/kernel.asm	/^c01092fe:	74 1d                	je     c010931d <setup_kstack+0x39>$/;"	l
c0109300	obj/kernel.asm	/^c0109300:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109303	obj/kernel.asm	/^c0109303:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109306	obj/kernel.asm	/^c0109306:	e8 58 f9 ff ff       	call   c0108c63 <page2kva>$/;"	l
c010930b	obj/kernel.asm	/^c010930b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010930e	obj/kernel.asm	/^c010930e:	89 c2                	mov    %eax,%edx$/;"	l
c0109310	obj/kernel.asm	/^c0109310:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109313	obj/kernel.asm	/^c0109313:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0109316	obj/kernel.asm	/^c0109316:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010931b	obj/kernel.asm	/^c010931b:	eb 05                	jmp    c0109322 <setup_kstack+0x3e>$/;"	l
c010931d	obj/kernel.asm	/^c010931d:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0109322	obj/kernel.asm	/^c0109322:	c9                   	leave  $/;"	l
c0109323	obj/kernel.asm	/^c0109323:	c3                   	ret    $/;"	l
c0109324	obj/kernel.asm	/^c0109324 <put_kstack>:$/;"	l
c0109324	obj/kernel.asm	/^c0109324:	55                   	push   %ebp$/;"	l
c0109325	obj/kernel.asm	/^c0109325:	89 e5                	mov    %esp,%ebp$/;"	l
c0109327	obj/kernel.asm	/^c0109327:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010932a	obj/kernel.asm	/^c010932a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010932d	obj/kernel.asm	/^c010932d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109330	obj/kernel.asm	/^c0109330:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109333	obj/kernel.asm	/^c0109333:	50                   	push   %eax$/;"	l
c0109334	obj/kernel.asm	/^c0109334:	e8 6f f9 ff ff       	call   c0108ca8 <kva2page>$/;"	l
c0109339	obj/kernel.asm	/^c0109339:	83 c4 10             	add    $0x10,%esp$/;"	l
c010933c	obj/kernel.asm	/^c010933c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010933f	obj/kernel.asm	/^c010933f:	6a 02                	push   $0x2$/;"	l
c0109341	obj/kernel.asm	/^c0109341:	50                   	push   %eax$/;"	l
c0109342	obj/kernel.asm	/^c0109342:	e8 7a a6 ff ff       	call   c01039c1 <free_pages>$/;"	l
c0109347	obj/kernel.asm	/^c0109347:	83 c4 10             	add    $0x10,%esp$/;"	l
c010934a	obj/kernel.asm	/^c010934a:	c9                   	leave  $/;"	l
c010934b	obj/kernel.asm	/^c010934b:	c3                   	ret    $/;"	l
c010934c	obj/kernel.asm	/^c010934c <setup_pgdir>:$/;"	l
c010934c	obj/kernel.asm	/^c010934c:	55                   	push   %ebp$/;"	l
c010934d	obj/kernel.asm	/^c010934d:	89 e5                	mov    %esp,%ebp$/;"	l
c010934f	obj/kernel.asm	/^c010934f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109352	obj/kernel.asm	/^c0109352:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109355	obj/kernel.asm	/^c0109355:	6a 01                	push   $0x1$/;"	l
c0109357	obj/kernel.asm	/^c0109357:	e8 f9 a5 ff ff       	call   c0103955 <alloc_pages>$/;"	l
c010935c	obj/kernel.asm	/^c010935c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010935f	obj/kernel.asm	/^c010935f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109362	obj/kernel.asm	/^c0109362:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109366	obj/kernel.asm	/^c0109366:	75 07                	jne    c010936f <setup_pgdir+0x23>$/;"	l
c0109368	obj/kernel.asm	/^c0109368:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010936d	obj/kernel.asm	/^c010936d:	eb 74                	jmp    c01093e3 <setup_pgdir+0x97>$/;"	l
c010936f	obj/kernel.asm	/^c010936f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109372	obj/kernel.asm	/^c0109372:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109375	obj/kernel.asm	/^c0109375:	e8 e9 f8 ff ff       	call   c0108c63 <page2kva>$/;"	l
c010937a	obj/kernel.asm	/^c010937a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010937d	obj/kernel.asm	/^c010937d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109380	obj/kernel.asm	/^c0109380:	a1 84 ed 1a c0       	mov    0xc01aed84,%eax$/;"	l
c0109385	obj/kernel.asm	/^c0109385:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109388	obj/kernel.asm	/^c0109388:	68 00 10 00 00       	push   $0x1000$/;"	l
c010938d	obj/kernel.asm	/^c010938d:	50                   	push   %eax$/;"	l
c010938e	obj/kernel.asm	/^c010938e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109391	obj/kernel.asm	/^c0109391:	e8 90 1f 00 00       	call   c010b326 <memcpy>$/;"	l
c0109396	obj/kernel.asm	/^c0109396:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109399	obj/kernel.asm	/^c0109399:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010939c	obj/kernel.asm	/^c010939c:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c01093a2	obj/kernel.asm	/^c01093a2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01093a5	obj/kernel.asm	/^c01093a5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01093a8	obj/kernel.asm	/^c01093a8:	81 7d ec ff ff ff bf 	cmpl   $0xbfffffff,-0x14(%ebp)$/;"	l
c01093af	obj/kernel.asm	/^c01093af:	77 17                	ja     c01093c8 <setup_pgdir+0x7c>$/;"	l
c01093b1	obj/kernel.asm	/^c01093b1:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01093b4	obj/kernel.asm	/^c01093b4:	68 b4 db 10 c0       	push   $0xc010dbb4$/;"	l
c01093b9	obj/kernel.asm	/^c01093b9:	68 2e 01 00 00       	push   $0x12e$/;"	l
c01093be	obj/kernel.asm	/^c01093be:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c01093c3	obj/kernel.asm	/^c01093c3:	e8 17 70 ff ff       	call   c01003df <__panic>$/;"	l
c01093c8	obj/kernel.asm	/^c01093c8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01093cb	obj/kernel.asm	/^c01093cb:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c01093d0	obj/kernel.asm	/^c01093d0:	83 c8 03             	or     $0x3,%eax$/;"	l
c01093d3	obj/kernel.asm	/^c01093d3:	89 02                	mov    %eax,(%edx)$/;"	l
c01093d5	obj/kernel.asm	/^c01093d5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093d8	obj/kernel.asm	/^c01093d8:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01093db	obj/kernel.asm	/^c01093db:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01093de	obj/kernel.asm	/^c01093de:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01093e3	obj/kernel.asm	/^c01093e3:	c9                   	leave  $/;"	l
c01093e4	obj/kernel.asm	/^c01093e4:	c3                   	ret    $/;"	l
c01093e5	obj/kernel.asm	/^c01093e5 <put_pgdir>:$/;"	l
c01093e5	obj/kernel.asm	/^c01093e5:	55                   	push   %ebp$/;"	l
c01093e6	obj/kernel.asm	/^c01093e6:	89 e5                	mov    %esp,%ebp$/;"	l
c01093e8	obj/kernel.asm	/^c01093e8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01093eb	obj/kernel.asm	/^c01093eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093ee	obj/kernel.asm	/^c01093ee:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01093f1	obj/kernel.asm	/^c01093f1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01093f4	obj/kernel.asm	/^c01093f4:	50                   	push   %eax$/;"	l
c01093f5	obj/kernel.asm	/^c01093f5:	e8 ae f8 ff ff       	call   c0108ca8 <kva2page>$/;"	l
c01093fa	obj/kernel.asm	/^c01093fa:	83 c4 10             	add    $0x10,%esp$/;"	l
c01093fd	obj/kernel.asm	/^c01093fd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109400	obj/kernel.asm	/^c0109400:	6a 01                	push   $0x1$/;"	l
c0109402	obj/kernel.asm	/^c0109402:	50                   	push   %eax$/;"	l
c0109403	obj/kernel.asm	/^c0109403:	e8 b9 a5 ff ff       	call   c01039c1 <free_pages>$/;"	l
c0109408	obj/kernel.asm	/^c0109408:	83 c4 10             	add    $0x10,%esp$/;"	l
c010940b	obj/kernel.asm	/^c010940b:	c9                   	leave  $/;"	l
c010940c	obj/kernel.asm	/^c010940c:	c3                   	ret    $/;"	l
c010940d	obj/kernel.asm	/^c010940d <copy_mm>:$/;"	l
c010940d	obj/kernel.asm	/^c010940d:	55                   	push   %ebp$/;"	l
c010940e	obj/kernel.asm	/^c010940e:	89 e5                	mov    %esp,%ebp$/;"	l
c0109410	obj/kernel.asm	/^c0109410:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109413	obj/kernel.asm	/^c0109413:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0109418	obj/kernel.asm	/^c0109418:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010941b	obj/kernel.asm	/^c010941b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010941e	obj/kernel.asm	/^c010941e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0109422	obj/kernel.asm	/^c0109422:	75 0a                	jne    c010942e <copy_mm+0x21>$/;"	l
c0109424	obj/kernel.asm	/^c0109424:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109429	obj/kernel.asm	/^c0109429:	e9 04 01 00 00       	jmp    c0109532 <copy_mm+0x125>$/;"	l
c010942e	obj/kernel.asm	/^c010942e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109431	obj/kernel.asm	/^c0109431:	25 00 01 00 00       	and    $0x100,%eax$/;"	l
c0109436	obj/kernel.asm	/^c0109436:	85 c0                	test   %eax,%eax$/;"	l
c0109438	obj/kernel.asm	/^c0109438:	74 0b                	je     c0109445 <copy_mm+0x38>$/;"	l
c010943a	obj/kernel.asm	/^c010943a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010943d	obj/kernel.asm	/^c010943d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109440	obj/kernel.asm	/^c0109440:	e9 86 00 00 00       	jmp    c01094cb <copy_mm+0xbe>$/;"	l
c0109445	obj/kernel.asm	/^c0109445:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c010944c	obj/kernel.asm	/^c010944c:	e8 68 be ff ff       	call   c01052b9 <mm_create>$/;"	l
c0109451	obj/kernel.asm	/^c0109451:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109454	obj/kernel.asm	/^c0109454:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109458	obj/kernel.asm	/^c0109458:	75 05                	jne    c010945f <copy_mm+0x52>$/;"	l
c010945a	obj/kernel.asm	/^c010945a:	e9 d0 00 00 00       	jmp    c010952f <copy_mm+0x122>$/;"	l
c010945f	obj/kernel.asm	/^c010945f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109462	obj/kernel.asm	/^c0109462:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109465	obj/kernel.asm	/^c0109465:	e8 e2 fe ff ff       	call   c010934c <setup_pgdir>$/;"	l
c010946a	obj/kernel.asm	/^c010946a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010946d	obj/kernel.asm	/^c010946d:	85 c0                	test   %eax,%eax$/;"	l
c010946f	obj/kernel.asm	/^c010946f:	74 05                	je     c0109476 <copy_mm+0x69>$/;"	l
c0109471	obj/kernel.asm	/^c0109471:	e9 ab 00 00 00       	jmp    c0109521 <copy_mm+0x114>$/;"	l
c0109476	obj/kernel.asm	/^c0109476:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109479	obj/kernel.asm	/^c0109479:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010947c	obj/kernel.asm	/^c010947c:	e8 9a f8 ff ff       	call   c0108d1b <lock_mm>$/;"	l
c0109481	obj/kernel.asm	/^c0109481:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109484	obj/kernel.asm	/^c0109484:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109487	obj/kernel.asm	/^c0109487:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010948a	obj/kernel.asm	/^c010948a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010948d	obj/kernel.asm	/^c010948d:	e8 f2 c2 ff ff       	call   c0105784 <dup_mmap>$/;"	l
c0109492	obj/kernel.asm	/^c0109492:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109495	obj/kernel.asm	/^c0109495:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109498	obj/kernel.asm	/^c0109498:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010949b	obj/kernel.asm	/^c010949b:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010949e	obj/kernel.asm	/^c010949e:	e8 98 f8 ff ff       	call   c0108d3b <unlock_mm>$/;"	l
c01094a3	obj/kernel.asm	/^c01094a3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01094a6	obj/kernel.asm	/^c01094a6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01094aa	obj/kernel.asm	/^c01094aa:	74 1f                	je     c01094cb <copy_mm+0xbe>$/;"	l
c01094ac	obj/kernel.asm	/^c01094ac:	90                   	nop$/;"	l
c01094ad	obj/kernel.asm	/^c01094ad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01094b0	obj/kernel.asm	/^c01094b0:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01094b3	obj/kernel.asm	/^c01094b3:	e8 b3 c3 ff ff       	call   c010586b <exit_mmap>$/;"	l
c01094b8	obj/kernel.asm	/^c01094b8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01094bb	obj/kernel.asm	/^c01094bb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01094be	obj/kernel.asm	/^c01094be:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01094c1	obj/kernel.asm	/^c01094c1:	e8 1f ff ff ff       	call   c01093e5 <put_pgdir>$/;"	l
c01094c6	obj/kernel.asm	/^c01094c6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01094c9	obj/kernel.asm	/^c01094c9:	eb 56                	jmp    c0109521 <copy_mm+0x114>$/;"	l
c01094cb	obj/kernel.asm	/^c01094cb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01094ce	obj/kernel.asm	/^c01094ce:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01094d1	obj/kernel.asm	/^c01094d1:	e8 11 f8 ff ff       	call   c0108ce7 <mm_count_inc>$/;"	l
c01094d6	obj/kernel.asm	/^c01094d6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01094d9	obj/kernel.asm	/^c01094d9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01094dc	obj/kernel.asm	/^c01094dc:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01094df	obj/kernel.asm	/^c01094df:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c01094e2	obj/kernel.asm	/^c01094e2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01094e5	obj/kernel.asm	/^c01094e5:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01094e8	obj/kernel.asm	/^c01094e8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01094eb	obj/kernel.asm	/^c01094eb:	81 7d e8 ff ff ff bf 	cmpl   $0xbfffffff,-0x18(%ebp)$/;"	l
c01094f2	obj/kernel.asm	/^c01094f2:	77 17                	ja     c010950b <copy_mm+0xfe>$/;"	l
c01094f4	obj/kernel.asm	/^c01094f4:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c01094f7	obj/kernel.asm	/^c01094f7:	68 b4 db 10 c0       	push   $0xc010dbb4$/;"	l
c01094fc	obj/kernel.asm	/^c01094fc:	68 5d 01 00 00       	push   $0x15d$/;"	l
c0109501	obj/kernel.asm	/^c0109501:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c0109506	obj/kernel.asm	/^c0109506:	e8 d4 6e ff ff       	call   c01003df <__panic>$/;"	l
c010950b	obj/kernel.asm	/^c010950b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010950e	obj/kernel.asm	/^c010950e:	8d 90 00 00 00 40    	lea    0x40000000(%eax),%edx$/;"	l
c0109514	obj/kernel.asm	/^c0109514:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109517	obj/kernel.asm	/^c0109517:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010951a	obj/kernel.asm	/^c010951a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010951f	obj/kernel.asm	/^c010951f:	eb 11                	jmp    c0109532 <copy_mm+0x125>$/;"	l
c0109521	obj/kernel.asm	/^c0109521:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109524	obj/kernel.asm	/^c0109524:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109527	obj/kernel.asm	/^c0109527:	e8 b4 c0 ff ff       	call   c01055e0 <mm_destroy>$/;"	l
c010952c	obj/kernel.asm	/^c010952c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010952f	obj/kernel.asm	/^c010952f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109532	obj/kernel.asm	/^c0109532:	c9                   	leave  $/;"	l
c0109533	obj/kernel.asm	/^c0109533:	c3                   	ret    $/;"	l
c0109534	obj/kernel.asm	/^c0109534 <copy_thread>:$/;"	l
c0109534	obj/kernel.asm	/^c0109534:	55                   	push   %ebp$/;"	l
c0109535	obj/kernel.asm	/^c0109535:	89 e5                	mov    %esp,%ebp$/;"	l
c0109537	obj/kernel.asm	/^c0109537:	57                   	push   %edi$/;"	l
c0109538	obj/kernel.asm	/^c0109538:	56                   	push   %esi$/;"	l
c0109539	obj/kernel.asm	/^c0109539:	53                   	push   %ebx$/;"	l
c010953a	obj/kernel.asm	/^c010953a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010953d	obj/kernel.asm	/^c010953d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109540	obj/kernel.asm	/^c0109540:	05 b4 1f 00 00       	add    $0x1fb4,%eax$/;"	l
c0109545	obj/kernel.asm	/^c0109545:	89 c2                	mov    %eax,%edx$/;"	l
c0109547	obj/kernel.asm	/^c0109547:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010954a	obj/kernel.asm	/^c010954a:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c010954d	obj/kernel.asm	/^c010954d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109550	obj/kernel.asm	/^c0109550:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109553	obj/kernel.asm	/^c0109553:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0109556	obj/kernel.asm	/^c0109556:	89 d3                	mov    %edx,%ebx$/;"	l
c0109558	obj/kernel.asm	/^c0109558:	ba 4c 00 00 00       	mov    $0x4c,%edx$/;"	l
c010955d	obj/kernel.asm	/^c010955d:	8b 0b                	mov    (%ebx),%ecx$/;"	l
c010955f	obj/kernel.asm	/^c010955f:	89 08                	mov    %ecx,(%eax)$/;"	l
c0109561	obj/kernel.asm	/^c0109561:	8b 4c 13 fc          	mov    -0x4(%ebx,%edx,1),%ecx$/;"	l
c0109565	obj/kernel.asm	/^c0109565:	89 4c 10 fc          	mov    %ecx,-0x4(%eax,%edx,1)$/;"	l
c0109569	obj/kernel.asm	/^c0109569:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
c010956c	obj/kernel.asm	/^c010956c:	83 e7 fc             	and    $0xfffffffc,%edi$/;"	l
c010956f	obj/kernel.asm	/^c010956f:	29 f8                	sub    %edi,%eax$/;"	l
c0109571	obj/kernel.asm	/^c0109571:	29 c3                	sub    %eax,%ebx$/;"	l
c0109573	obj/kernel.asm	/^c0109573:	01 c2                	add    %eax,%edx$/;"	l
c0109575	obj/kernel.asm	/^c0109575:	83 e2 fc             	and    $0xfffffffc,%edx$/;"	l
c0109578	obj/kernel.asm	/^c0109578:	89 d0                	mov    %edx,%eax$/;"	l
c010957a	obj/kernel.asm	/^c010957a:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010957d	obj/kernel.asm	/^c010957d:	89 de                	mov    %ebx,%esi$/;"	l
c010957f	obj/kernel.asm	/^c010957f:	89 c1                	mov    %eax,%ecx$/;"	l
c0109581	obj/kernel.asm	/^c0109581:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c0109583	obj/kernel.asm	/^c0109583:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109586	obj/kernel.asm	/^c0109586:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109589	obj/kernel.asm	/^c0109589:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
c0109590	obj/kernel.asm	/^c0109590:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109593	obj/kernel.asm	/^c0109593:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109596	obj/kernel.asm	/^c0109596:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0109599	obj/kernel.asm	/^c0109599:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010959c	obj/kernel.asm	/^c010959c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010959f	obj/kernel.asm	/^c010959f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01095a2	obj/kernel.asm	/^c01095a2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01095a5	obj/kernel.asm	/^c01095a5:	8b 52 3c             	mov    0x3c(%edx),%edx$/;"	l
c01095a8	obj/kernel.asm	/^c01095a8:	8b 52 40             	mov    0x40(%edx),%edx$/;"	l
c01095ab	obj/kernel.asm	/^c01095ab:	80 ce 02             	or     $0x2,%dh$/;"	l
c01095ae	obj/kernel.asm	/^c01095ae:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c01095b1	obj/kernel.asm	/^c01095b1:	ba 47 91 10 c0       	mov    $0xc0109147,%edx$/;"	l
c01095b6	obj/kernel.asm	/^c01095b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095b9	obj/kernel.asm	/^c01095b9:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c01095bc	obj/kernel.asm	/^c01095bc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095bf	obj/kernel.asm	/^c01095bf:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01095c2	obj/kernel.asm	/^c01095c2:	89 c2                	mov    %eax,%edx$/;"	l
c01095c4	obj/kernel.asm	/^c01095c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095c7	obj/kernel.asm	/^c01095c7:	89 50 20             	mov    %edx,0x20(%eax)$/;"	l
c01095ca	obj/kernel.asm	/^c01095ca:	5b                   	pop    %ebx$/;"	l
c01095cb	obj/kernel.asm	/^c01095cb:	5e                   	pop    %esi$/;"	l
c01095cc	obj/kernel.asm	/^c01095cc:	5f                   	pop    %edi$/;"	l
c01095cd	obj/kernel.asm	/^c01095cd:	5d                   	pop    %ebp$/;"	l
c01095ce	obj/kernel.asm	/^c01095ce:	c3                   	ret    $/;"	l
c01095cf	obj/kernel.asm	/^c01095cf <do_fork>:$/;"	l
c01095cf	obj/kernel.asm	/^c01095cf:	55                   	push   %ebp$/;"	l
c01095d0	obj/kernel.asm	/^c01095d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01095d2	obj/kernel.asm	/^c01095d2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01095d5	obj/kernel.asm	/^c01095d5:	c7 45 f4 fb ff ff ff 	movl   $0xfffffffb,-0xc(%ebp)$/;"	l
c01095dc	obj/kernel.asm	/^c01095dc:	a1 80 0e 1b c0       	mov    0xc01b0e80,%eax$/;"	l
c01095e1	obj/kernel.asm	/^c01095e1:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c01095e6	obj/kernel.asm	/^c01095e6:	7e 05                	jle    c01095ed <do_fork+0x1e>$/;"	l
c01095e8	obj/kernel.asm	/^c01095e8:	e9 f0 00 00 00       	jmp    c01096dd <do_fork+0x10e>$/;"	l
c01095ed	obj/kernel.asm	/^c01095ed:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c01095f4	obj/kernel.asm	/^c01095f4:	e8 62 f7 ff ff       	call   c0108d5b <alloc_proc>$/;"	l
c01095f9	obj/kernel.asm	/^c01095f9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01095fc	obj/kernel.asm	/^c01095fc:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109600	obj/kernel.asm	/^c0109600:	75 05                	jne    c0109607 <do_fork+0x38>$/;"	l
c0109602	obj/kernel.asm	/^c0109602:	e9 d6 00 00 00       	jmp    c01096dd <do_fork+0x10e>$/;"	l
c0109607	obj/kernel.asm	/^c0109607:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010960c	obj/kernel.asm	/^c010960c:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c010960f	obj/kernel.asm	/^c010960f:	85 c0                	test   %eax,%eax$/;"	l
c0109611	obj/kernel.asm	/^c0109611:	74 17                	je     c010962a <do_fork+0x5b>$/;"	l
c0109613	obj/kernel.asm	/^c0109613:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109616	obj/kernel.asm	/^c0109616:	68 ec db 10 c0       	push   $0xc010dbec$/;"	l
c010961b	obj/kernel.asm	/^c010961b:	68 a2 01 00 00       	push   $0x1a2$/;"	l
c0109620	obj/kernel.asm	/^c0109620:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c0109625	obj/kernel.asm	/^c0109625:	e8 b5 6d ff ff       	call   c01003df <__panic>$/;"	l
c010962a	obj/kernel.asm	/^c010962a:	8b 15 48 ee 1a c0    	mov    0xc01aee48,%edx$/;"	l
c0109630	obj/kernel.asm	/^c0109630:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109633	obj/kernel.asm	/^c0109633:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c0109636	obj/kernel.asm	/^c0109636:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109639	obj/kernel.asm	/^c0109639:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010963c	obj/kernel.asm	/^c010963c:	e8 a3 fc ff ff       	call   c01092e4 <setup_kstack>$/;"	l
c0109641	obj/kernel.asm	/^c0109641:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109644	obj/kernel.asm	/^c0109644:	85 c0                	test   %eax,%eax$/;"	l
c0109646	obj/kernel.asm	/^c0109646:	74 05                	je     c010964d <do_fork+0x7e>$/;"	l
c0109648	obj/kernel.asm	/^c0109648:	e9 95 00 00 00       	jmp    c01096e2 <do_fork+0x113>$/;"	l
c010964d	obj/kernel.asm	/^c010964d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109650	obj/kernel.asm	/^c0109650:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109653	obj/kernel.asm	/^c0109653:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109656	obj/kernel.asm	/^c0109656:	e8 b2 fd ff ff       	call   c010940d <copy_mm>$/;"	l
c010965b	obj/kernel.asm	/^c010965b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010965e	obj/kernel.asm	/^c010965e:	85 c0                	test   %eax,%eax$/;"	l
c0109660	obj/kernel.asm	/^c0109660:	74 11                	je     c0109673 <do_fork+0xa4>$/;"	l
c0109662	obj/kernel.asm	/^c0109662:	90                   	nop$/;"	l
c0109663	obj/kernel.asm	/^c0109663:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109666	obj/kernel.asm	/^c0109666:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109669	obj/kernel.asm	/^c0109669:	e8 b6 fc ff ff       	call   c0109324 <put_kstack>$/;"	l
c010966e	obj/kernel.asm	/^c010966e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109671	obj/kernel.asm	/^c0109671:	eb 6f                	jmp    c01096e2 <do_fork+0x113>$/;"	l
c0109673	obj/kernel.asm	/^c0109673:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109676	obj/kernel.asm	/^c0109676:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0109679	obj/kernel.asm	/^c0109679:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010967c	obj/kernel.asm	/^c010967c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010967f	obj/kernel.asm	/^c010967f:	e8 b0 fe ff ff       	call   c0109534 <copy_thread>$/;"	l
c0109684	obj/kernel.asm	/^c0109684:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109687	obj/kernel.asm	/^c0109687:	e8 cf f4 ff ff       	call   c0108b5b <__intr_save>$/;"	l
c010968c	obj/kernel.asm	/^c010968c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010968f	obj/kernel.asm	/^c010968f:	e8 3e f9 ff ff       	call   c0108fd2 <get_pid>$/;"	l
c0109694	obj/kernel.asm	/^c0109694:	89 c2                	mov    %eax,%edx$/;"	l
c0109696	obj/kernel.asm	/^c0109696:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109699	obj/kernel.asm	/^c0109699:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010969c	obj/kernel.asm	/^c010969c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010969f	obj/kernel.asm	/^c010969f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01096a2	obj/kernel.asm	/^c01096a2:	e8 bc fa ff ff       	call   c0109163 <hash_proc>$/;"	l
c01096a7	obj/kernel.asm	/^c01096a7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01096aa	obj/kernel.asm	/^c01096aa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01096ad	obj/kernel.asm	/^c01096ad:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01096b0	obj/kernel.asm	/^c01096b0:	e8 f5 f7 ff ff       	call   c0108eaa <set_links>$/;"	l
c01096b5	obj/kernel.asm	/^c01096b5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01096b8	obj/kernel.asm	/^c01096b8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01096bb	obj/kernel.asm	/^c01096bb:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01096be	obj/kernel.asm	/^c01096be:	e8 c2 f4 ff ff       	call   c0108b85 <__intr_restore>$/;"	l
c01096c3	obj/kernel.asm	/^c01096c3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01096c6	obj/kernel.asm	/^c01096c6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01096c9	obj/kernel.asm	/^c01096c9:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01096cc	obj/kernel.asm	/^c01096cc:	e8 f7 0f 00 00       	call   c010a6c8 <wakeup_proc>$/;"	l
c01096d1	obj/kernel.asm	/^c01096d1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01096d4	obj/kernel.asm	/^c01096d4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01096d7	obj/kernel.asm	/^c01096d7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01096da	obj/kernel.asm	/^c01096da:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01096dd	obj/kernel.asm	/^c01096dd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01096e0	obj/kernel.asm	/^c01096e0:	eb 10                	jmp    c01096f2 <do_fork+0x123>$/;"	l
c01096e2	obj/kernel.asm	/^c01096e2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01096e5	obj/kernel.asm	/^c01096e5:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01096e8	obj/kernel.asm	/^c01096e8:	e8 1a dd ff ff       	call   c0107407 <kfree>$/;"	l
c01096ed	obj/kernel.asm	/^c01096ed:	83 c4 10             	add    $0x10,%esp$/;"	l
c01096f0	obj/kernel.asm	/^c01096f0:	eb eb                	jmp    c01096dd <do_fork+0x10e>$/;"	l
c01096f2	obj/kernel.asm	/^c01096f2:	c9                   	leave  $/;"	l
c01096f3	obj/kernel.asm	/^c01096f3:	c3                   	ret    $/;"	l
c01096f4	obj/kernel.asm	/^c01096f4 <do_exit>:$/;"	l
c01096f4	obj/kernel.asm	/^c01096f4:	55                   	push   %ebp$/;"	l
c01096f5	obj/kernel.asm	/^c01096f5:	89 e5                	mov    %esp,%ebp$/;"	l
c01096f7	obj/kernel.asm	/^c01096f7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01096fa	obj/kernel.asm	/^c01096fa:	8b 15 48 ee 1a c0    	mov    0xc01aee48,%edx$/;"	l
c0109700	obj/kernel.asm	/^c0109700:	a1 40 ee 1a c0       	mov    0xc01aee40,%eax$/;"	l
c0109705	obj/kernel.asm	/^c0109705:	39 c2                	cmp    %eax,%edx$/;"	l
c0109707	obj/kernel.asm	/^c0109707:	75 17                	jne    c0109720 <do_exit+0x2c>$/;"	l
c0109709	obj/kernel.asm	/^c0109709:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010970c	obj/kernel.asm	/^c010970c:	68 01 dc 10 c0       	push   $0xc010dc01$/;"	l
c0109711	obj/kernel.asm	/^c0109711:	68 d4 01 00 00       	push   $0x1d4$/;"	l
c0109716	obj/kernel.asm	/^c0109716:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c010971b	obj/kernel.asm	/^c010971b:	e8 bf 6c ff ff       	call   c01003df <__panic>$/;"	l
c0109720	obj/kernel.asm	/^c0109720:	8b 15 48 ee 1a c0    	mov    0xc01aee48,%edx$/;"	l
c0109726	obj/kernel.asm	/^c0109726:	a1 44 ee 1a c0       	mov    0xc01aee44,%eax$/;"	l
c010972b	obj/kernel.asm	/^c010972b:	39 c2                	cmp    %eax,%edx$/;"	l
c010972d	obj/kernel.asm	/^c010972d:	75 17                	jne    c0109746 <do_exit+0x52>$/;"	l
c010972f	obj/kernel.asm	/^c010972f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109732	obj/kernel.asm	/^c0109732:	68 11 dc 10 c0       	push   $0xc010dc11$/;"	l
c0109737	obj/kernel.asm	/^c0109737:	68 d7 01 00 00       	push   $0x1d7$/;"	l
c010973c	obj/kernel.asm	/^c010973c:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c0109741	obj/kernel.asm	/^c0109741:	e8 99 6c ff ff       	call   c01003df <__panic>$/;"	l
c0109746	obj/kernel.asm	/^c0109746:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010974b	obj/kernel.asm	/^c010974b:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010974e	obj/kernel.asm	/^c010974e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109751	obj/kernel.asm	/^c0109751:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109755	obj/kernel.asm	/^c0109755:	74 56                	je     c01097ad <do_exit+0xb9>$/;"	l
c0109757	obj/kernel.asm	/^c0109757:	a1 14 0f 1b c0       	mov    0xc01b0f14,%eax$/;"	l
c010975c	obj/kernel.asm	/^c010975c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010975f	obj/kernel.asm	/^c010975f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109762	obj/kernel.asm	/^c0109762:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0109765	obj/kernel.asm	/^c0109765:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109768	obj/kernel.asm	/^c0109768:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010976b	obj/kernel.asm	/^c010976b:	e8 91 f5 ff ff       	call   c0108d01 <mm_count_dec>$/;"	l
c0109770	obj/kernel.asm	/^c0109770:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109773	obj/kernel.asm	/^c0109773:	85 c0                	test   %eax,%eax$/;"	l
c0109775	obj/kernel.asm	/^c0109775:	75 2a                	jne    c01097a1 <do_exit+0xad>$/;"	l
c0109777	obj/kernel.asm	/^c0109777:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010977a	obj/kernel.asm	/^c010977a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010977d	obj/kernel.asm	/^c010977d:	e8 e9 c0 ff ff       	call   c010586b <exit_mmap>$/;"	l
c0109782	obj/kernel.asm	/^c0109782:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109785	obj/kernel.asm	/^c0109785:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109788	obj/kernel.asm	/^c0109788:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010978b	obj/kernel.asm	/^c010978b:	e8 55 fc ff ff       	call   c01093e5 <put_pgdir>$/;"	l
c0109790	obj/kernel.asm	/^c0109790:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109793	obj/kernel.asm	/^c0109793:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109796	obj/kernel.asm	/^c0109796:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109799	obj/kernel.asm	/^c0109799:	e8 42 be ff ff       	call   c01055e0 <mm_destroy>$/;"	l
c010979e	obj/kernel.asm	/^c010979e:	83 c4 10             	add    $0x10,%esp$/;"	l
c01097a1	obj/kernel.asm	/^c01097a1:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c01097a6	obj/kernel.asm	/^c01097a6:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c01097ad	obj/kernel.asm	/^c01097ad:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c01097b2	obj/kernel.asm	/^c01097b2:	c7 00 03 00 00 00    	movl   $0x3,(%eax)$/;"	l
c01097b8	obj/kernel.asm	/^c01097b8:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c01097bd	obj/kernel.asm	/^c01097bd:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01097c0	obj/kernel.asm	/^c01097c0:	89 50 68             	mov    %edx,0x68(%eax)$/;"	l
c01097c3	obj/kernel.asm	/^c01097c3:	e8 93 f3 ff ff       	call   c0108b5b <__intr_save>$/;"	l
c01097c8	obj/kernel.asm	/^c01097c8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01097cb	obj/kernel.asm	/^c01097cb:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c01097d0	obj/kernel.asm	/^c01097d0:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c01097d3	obj/kernel.asm	/^c01097d3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01097d6	obj/kernel.asm	/^c01097d6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01097d9	obj/kernel.asm	/^c01097d9:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c01097dc	obj/kernel.asm	/^c01097dc:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c01097e1	obj/kernel.asm	/^c01097e1:	75 0e                	jne    c01097f1 <do_exit+0xfd>$/;"	l
c01097e3	obj/kernel.asm	/^c01097e3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01097e6	obj/kernel.asm	/^c01097e6:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01097e9	obj/kernel.asm	/^c01097e9:	e8 da 0e 00 00       	call   c010a6c8 <wakeup_proc>$/;"	l
c01097ee	obj/kernel.asm	/^c01097ee:	83 c4 10             	add    $0x10,%esp$/;"	l
c01097f1	obj/kernel.asm	/^c01097f1:	e9 8a 00 00 00       	jmp    c0109880 <do_exit+0x18c>$/;"	l
c01097f6	obj/kernel.asm	/^c01097f6:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c01097fb	obj/kernel.asm	/^c01097fb:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c01097fe	obj/kernel.asm	/^c01097fe:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109801	obj/kernel.asm	/^c0109801:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0109806	obj/kernel.asm	/^c0109806:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109809	obj/kernel.asm	/^c0109809:	8b 52 78             	mov    0x78(%edx),%edx$/;"	l
c010980c	obj/kernel.asm	/^c010980c:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c010980f	obj/kernel.asm	/^c010980f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109812	obj/kernel.asm	/^c0109812:	c7 40 74 00 00 00 00 	movl   $0x0,0x74(%eax)$/;"	l
c0109819	obj/kernel.asm	/^c0109819:	a1 44 ee 1a c0       	mov    0xc01aee44,%eax$/;"	l
c010981e	obj/kernel.asm	/^c010981e:	8b 50 70             	mov    0x70(%eax),%edx$/;"	l
c0109821	obj/kernel.asm	/^c0109821:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109824	obj/kernel.asm	/^c0109824:	89 50 78             	mov    %edx,0x78(%eax)$/;"	l
c0109827	obj/kernel.asm	/^c0109827:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010982a	obj/kernel.asm	/^c010982a:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010982d	obj/kernel.asm	/^c010982d:	85 c0                	test   %eax,%eax$/;"	l
c010982f	obj/kernel.asm	/^c010982f:	74 0e                	je     c010983f <do_exit+0x14b>$/;"	l
c0109831	obj/kernel.asm	/^c0109831:	a1 44 ee 1a c0       	mov    0xc01aee44,%eax$/;"	l
c0109836	obj/kernel.asm	/^c0109836:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c0109839	obj/kernel.asm	/^c0109839:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010983c	obj/kernel.asm	/^c010983c:	89 50 74             	mov    %edx,0x74(%eax)$/;"	l
c010983f	obj/kernel.asm	/^c010983f:	8b 15 44 ee 1a c0    	mov    0xc01aee44,%edx$/;"	l
c0109845	obj/kernel.asm	/^c0109845:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109848	obj/kernel.asm	/^c0109848:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010984b	obj/kernel.asm	/^c010984b:	a1 44 ee 1a c0       	mov    0xc01aee44,%eax$/;"	l
c0109850	obj/kernel.asm	/^c0109850:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109853	obj/kernel.asm	/^c0109853:	89 50 70             	mov    %edx,0x70(%eax)$/;"	l
c0109856	obj/kernel.asm	/^c0109856:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109859	obj/kernel.asm	/^c0109859:	8b 00                	mov    (%eax),%eax$/;"	l
c010985b	obj/kernel.asm	/^c010985b:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010985e	obj/kernel.asm	/^c010985e:	75 20                	jne    c0109880 <do_exit+0x18c>$/;"	l
c0109860	obj/kernel.asm	/^c0109860:	a1 44 ee 1a c0       	mov    0xc01aee44,%eax$/;"	l
c0109865	obj/kernel.asm	/^c0109865:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0109868	obj/kernel.asm	/^c0109868:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c010986d	obj/kernel.asm	/^c010986d:	75 11                	jne    c0109880 <do_exit+0x18c>$/;"	l
c010986f	obj/kernel.asm	/^c010986f:	a1 44 ee 1a c0       	mov    0xc01aee44,%eax$/;"	l
c0109874	obj/kernel.asm	/^c0109874:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109877	obj/kernel.asm	/^c0109877:	50                   	push   %eax$/;"	l
c0109878	obj/kernel.asm	/^c0109878:	e8 4b 0e 00 00       	call   c010a6c8 <wakeup_proc>$/;"	l
c010987d	obj/kernel.asm	/^c010987d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109880	obj/kernel.asm	/^c0109880:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0109885	obj/kernel.asm	/^c0109885:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c0109888	obj/kernel.asm	/^c0109888:	85 c0                	test   %eax,%eax$/;"	l
c010988a	obj/kernel.asm	/^c010988a:	0f 85 66 ff ff ff    	jne    c01097f6 <do_exit+0x102>$/;"	l
c0109890	obj/kernel.asm	/^c0109890:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109893	obj/kernel.asm	/^c0109893:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109896	obj/kernel.asm	/^c0109896:	e8 ea f2 ff ff       	call   c0108b85 <__intr_restore>$/;"	l
c010989b	obj/kernel.asm	/^c010989b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010989e	obj/kernel.asm	/^c010989e:	e8 b1 0e 00 00       	call   c010a754 <schedule>$/;"	l
c01098a3	obj/kernel.asm	/^c01098a3:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c01098a8	obj/kernel.asm	/^c01098a8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01098ab	obj/kernel.asm	/^c01098ab:	50                   	push   %eax$/;"	l
c01098ac	obj/kernel.asm	/^c01098ac:	68 24 dc 10 c0       	push   $0xc010dc24$/;"	l
c01098b1	obj/kernel.asm	/^c01098b1:	68 03 02 00 00       	push   $0x203$/;"	l
c01098b6	obj/kernel.asm	/^c01098b6:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c01098bb	obj/kernel.asm	/^c01098bb:	e8 1f 6b ff ff       	call   c01003df <__panic>$/;"	l
c01098c0	obj/kernel.asm	/^c01098c0 <load_icode>:$/;"	l
c01098c0	obj/kernel.asm	/^c01098c0:	55                   	push   %ebp$/;"	l
c01098c1	obj/kernel.asm	/^c01098c1:	89 e5                	mov    %esp,%ebp$/;"	l
c01098c3	obj/kernel.asm	/^c01098c3:	83 ec 58             	sub    $0x58,%esp$/;"	l
c01098c6	obj/kernel.asm	/^c01098c6:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c01098cb	obj/kernel.asm	/^c01098cb:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01098ce	obj/kernel.asm	/^c01098ce:	85 c0                	test   %eax,%eax$/;"	l
c01098d0	obj/kernel.asm	/^c01098d0:	74 17                	je     c01098e9 <load_icode+0x29>$/;"	l
c01098d2	obj/kernel.asm	/^c01098d2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01098d5	obj/kernel.asm	/^c01098d5:	68 44 dc 10 c0       	push   $0xc010dc44$/;"	l
c01098da	obj/kernel.asm	/^c01098da:	68 0d 02 00 00       	push   $0x20d$/;"	l
c01098df	obj/kernel.asm	/^c01098df:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c01098e4	obj/kernel.asm	/^c01098e4:	e8 f6 6a ff ff       	call   c01003df <__panic>$/;"	l
c01098e9	obj/kernel.asm	/^c01098e9:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c01098f0	obj/kernel.asm	/^c01098f0:	e8 c4 b9 ff ff       	call   c01052b9 <mm_create>$/;"	l
c01098f5	obj/kernel.asm	/^c01098f5:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01098f8	obj/kernel.asm	/^c01098f8:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c01098fc	obj/kernel.asm	/^c01098fc:	75 06                	jne    c0109904 <load_icode+0x44>$/;"	l
c01098fe	obj/kernel.asm	/^c01098fe:	90                   	nop$/;"	l
c01098ff	obj/kernel.asm	/^c01098ff:	e9 52 05 00 00       	jmp    c0109e56 <load_icode+0x596>$/;"	l
c0109904	obj/kernel.asm	/^c0109904:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109907	obj/kernel.asm	/^c0109907:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c010990a	obj/kernel.asm	/^c010990a:	e8 3d fa ff ff       	call   c010934c <setup_pgdir>$/;"	l
c010990f	obj/kernel.asm	/^c010990f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109912	obj/kernel.asm	/^c0109912:	85 c0                	test   %eax,%eax$/;"	l
c0109914	obj/kernel.asm	/^c0109914:	74 05                	je     c010991b <load_icode+0x5b>$/;"	l
c0109916	obj/kernel.asm	/^c0109916:	e9 5c 05 00 00       	jmp    c0109e77 <load_icode+0x5b7>$/;"	l
c010991b	obj/kernel.asm	/^c010991b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010991e	obj/kernel.asm	/^c010991e:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0109921	obj/kernel.asm	/^c0109921:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0109924	obj/kernel.asm	/^c0109924:	8b 50 1c             	mov    0x1c(%eax),%edx$/;"	l
c0109927	obj/kernel.asm	/^c0109927:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010992a	obj/kernel.asm	/^c010992a:	01 d0                	add    %edx,%eax$/;"	l
c010992c	obj/kernel.asm	/^c010992c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010992f	obj/kernel.asm	/^c010992f:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0109932	obj/kernel.asm	/^c0109932:	8b 00                	mov    (%eax),%eax$/;"	l
c0109934	obj/kernel.asm	/^c0109934:	3d 7f 45 4c 46       	cmp    $0x464c457f,%eax$/;"	l
c0109939	obj/kernel.asm	/^c0109939:	74 0c                	je     c0109947 <load_icode+0x87>$/;"	l
c010993b	obj/kernel.asm	/^c010993b:	c7 45 f4 f8 ff ff ff 	movl   $0xfffffff8,-0xc(%ebp)$/;"	l
c0109942	obj/kernel.asm	/^c0109942:	e9 22 05 00 00       	jmp    c0109e69 <load_icode+0x5a9>$/;"	l
c0109947	obj/kernel.asm	/^c0109947:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010994a	obj/kernel.asm	/^c010994a:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c010994e	obj/kernel.asm	/^c010994e:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0109951	obj/kernel.asm	/^c0109951:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0109954	obj/kernel.asm	/^c0109954:	89 c2                	mov    %eax,%edx$/;"	l
c0109956	obj/kernel.asm	/^c0109956:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109959	obj/kernel.asm	/^c0109959:	01 d0                	add    %edx,%eax$/;"	l
c010995b	obj/kernel.asm	/^c010995b:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010995e	obj/kernel.asm	/^c010995e:	e9 d7 02 00 00       	jmp    c0109c3a <load_icode+0x37a>$/;"	l
c0109963	obj/kernel.asm	/^c0109963:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109966	obj/kernel.asm	/^c0109966:	8b 00                	mov    (%eax),%eax$/;"	l
c0109968	obj/kernel.asm	/^c0109968:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010996b	obj/kernel.asm	/^c010996b:	74 05                	je     c0109972 <load_icode+0xb2>$/;"	l
c010996d	obj/kernel.asm	/^c010996d:	e9 c4 02 00 00       	jmp    c0109c36 <load_icode+0x376>$/;"	l
c0109972	obj/kernel.asm	/^c0109972:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109975	obj/kernel.asm	/^c0109975:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c0109978	obj/kernel.asm	/^c0109978:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010997b	obj/kernel.asm	/^c010997b:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010997e	obj/kernel.asm	/^c010997e:	39 c2                	cmp    %eax,%edx$/;"	l
c0109980	obj/kernel.asm	/^c0109980:	76 0c                	jbe    c010998e <load_icode+0xce>$/;"	l
c0109982	obj/kernel.asm	/^c0109982:	c7 45 f4 f8 ff ff ff 	movl   $0xfffffff8,-0xc(%ebp)$/;"	l
c0109989	obj/kernel.asm	/^c0109989:	e9 cd 04 00 00       	jmp    c0109e5b <load_icode+0x59b>$/;"	l
c010998e	obj/kernel.asm	/^c010998e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109991	obj/kernel.asm	/^c0109991:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109994	obj/kernel.asm	/^c0109994:	85 c0                	test   %eax,%eax$/;"	l
c0109996	obj/kernel.asm	/^c0109996:	75 05                	jne    c010999d <load_icode+0xdd>$/;"	l
c0109998	obj/kernel.asm	/^c0109998:	e9 99 02 00 00       	jmp    c0109c36 <load_icode+0x376>$/;"	l
c010999d	obj/kernel.asm	/^c010999d:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c01099a4	obj/kernel.asm	/^c01099a4:	c7 45 e4 04 00 00 00 	movl   $0x4,-0x1c(%ebp)$/;"	l
c01099ab	obj/kernel.asm	/^c01099ab:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01099ae	obj/kernel.asm	/^c01099ae:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01099b1	obj/kernel.asm	/^c01099b1:	83 e0 01             	and    $0x1,%eax$/;"	l
c01099b4	obj/kernel.asm	/^c01099b4:	85 c0                	test   %eax,%eax$/;"	l
c01099b6	obj/kernel.asm	/^c01099b6:	74 04                	je     c01099bc <load_icode+0xfc>$/;"	l
c01099b8	obj/kernel.asm	/^c01099b8:	83 4d e8 04          	orl    $0x4,-0x18(%ebp)$/;"	l
c01099bc	obj/kernel.asm	/^c01099bc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01099bf	obj/kernel.asm	/^c01099bf:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01099c2	obj/kernel.asm	/^c01099c2:	83 e0 02             	and    $0x2,%eax$/;"	l
c01099c5	obj/kernel.asm	/^c01099c5:	85 c0                	test   %eax,%eax$/;"	l
c01099c7	obj/kernel.asm	/^c01099c7:	74 04                	je     c01099cd <load_icode+0x10d>$/;"	l
c01099c9	obj/kernel.asm	/^c01099c9:	83 4d e8 02          	orl    $0x2,-0x18(%ebp)$/;"	l
c01099cd	obj/kernel.asm	/^c01099cd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01099d0	obj/kernel.asm	/^c01099d0:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01099d3	obj/kernel.asm	/^c01099d3:	83 e0 04             	and    $0x4,%eax$/;"	l
c01099d6	obj/kernel.asm	/^c01099d6:	85 c0                	test   %eax,%eax$/;"	l
c01099d8	obj/kernel.asm	/^c01099d8:	74 04                	je     c01099de <load_icode+0x11e>$/;"	l
c01099da	obj/kernel.asm	/^c01099da:	83 4d e8 01          	orl    $0x1,-0x18(%ebp)$/;"	l
c01099de	obj/kernel.asm	/^c01099de:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01099e1	obj/kernel.asm	/^c01099e1:	83 e0 02             	and    $0x2,%eax$/;"	l
c01099e4	obj/kernel.asm	/^c01099e4:	85 c0                	test   %eax,%eax$/;"	l
c01099e6	obj/kernel.asm	/^c01099e6:	74 04                	je     c01099ec <load_icode+0x12c>$/;"	l
c01099e8	obj/kernel.asm	/^c01099e8:	83 4d e4 02          	orl    $0x2,-0x1c(%ebp)$/;"	l
c01099ec	obj/kernel.asm	/^c01099ec:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01099ef	obj/kernel.asm	/^c01099ef:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c01099f2	obj/kernel.asm	/^c01099f2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01099f5	obj/kernel.asm	/^c01099f5:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01099f8	obj/kernel.asm	/^c01099f8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01099fb	obj/kernel.asm	/^c01099fb:	6a 00                	push   $0x0$/;"	l
c01099fd	obj/kernel.asm	/^c01099fd:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0109a00	obj/kernel.asm	/^c0109a00:	52                   	push   %edx$/;"	l
c0109a01	obj/kernel.asm	/^c0109a01:	50                   	push   %eax$/;"	l
c0109a02	obj/kernel.asm	/^c0109a02:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c0109a05	obj/kernel.asm	/^c0109a05:	e8 74 bc ff ff       	call   c010567e <mm_map>$/;"	l
c0109a0a	obj/kernel.asm	/^c0109a0a:	83 c4 20             	add    $0x20,%esp$/;"	l
c0109a0d	obj/kernel.asm	/^c0109a0d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109a10	obj/kernel.asm	/^c0109a10:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109a14	obj/kernel.asm	/^c0109a14:	74 05                	je     c0109a1b <load_icode+0x15b>$/;"	l
c0109a16	obj/kernel.asm	/^c0109a16:	e9 40 04 00 00       	jmp    c0109e5b <load_icode+0x59b>$/;"	l
c0109a1b	obj/kernel.asm	/^c0109a1b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109a1e	obj/kernel.asm	/^c0109a1e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109a21	obj/kernel.asm	/^c0109a21:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109a24	obj/kernel.asm	/^c0109a24:	01 d0                	add    %edx,%eax$/;"	l
c0109a26	obj/kernel.asm	/^c0109a26:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0109a29	obj/kernel.asm	/^c0109a29:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109a2c	obj/kernel.asm	/^c0109a2c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0109a2f	obj/kernel.asm	/^c0109a2f:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0109a32	obj/kernel.asm	/^c0109a32:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109a35	obj/kernel.asm	/^c0109a35:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0109a38	obj/kernel.asm	/^c0109a38:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0109a3b	obj/kernel.asm	/^c0109a3b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0109a40	obj/kernel.asm	/^c0109a40:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0109a43	obj/kernel.asm	/^c0109a43:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0109a4a	obj/kernel.asm	/^c0109a4a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109a4d	obj/kernel.asm	/^c0109a4d:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0109a50	obj/kernel.asm	/^c0109a50:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109a53	obj/kernel.asm	/^c0109a53:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109a56	obj/kernel.asm	/^c0109a56:	01 d0                	add    %edx,%eax$/;"	l
c0109a58	obj/kernel.asm	/^c0109a58:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0109a5b	obj/kernel.asm	/^c0109a5b:	e9 85 00 00 00       	jmp    c0109ae5 <load_icode+0x225>$/;"	l
c0109a60	obj/kernel.asm	/^c0109a60:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109a63	obj/kernel.asm	/^c0109a63:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109a66	obj/kernel.asm	/^c0109a66:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109a69	obj/kernel.asm	/^c0109a69:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0109a6c	obj/kernel.asm	/^c0109a6c:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
c0109a6f	obj/kernel.asm	/^c0109a6f:	50                   	push   %eax$/;"	l
c0109a70	obj/kernel.asm	/^c0109a70:	e8 54 ac ff ff       	call   c01046c9 <pgdir_alloc_page>$/;"	l
c0109a75	obj/kernel.asm	/^c0109a75:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109a78	obj/kernel.asm	/^c0109a78:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109a7b	obj/kernel.asm	/^c0109a7b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109a7f	obj/kernel.asm	/^c0109a7f:	75 05                	jne    c0109a86 <load_icode+0x1c6>$/;"	l
c0109a81	obj/kernel.asm	/^c0109a81:	e9 d5 03 00 00       	jmp    c0109e5b <load_icode+0x59b>$/;"	l
c0109a86	obj/kernel.asm	/^c0109a86:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109a89	obj/kernel.asm	/^c0109a89:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c0109a8c	obj/kernel.asm	/^c0109a8c:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0109a8f	obj/kernel.asm	/^c0109a8f:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0109a94	obj/kernel.asm	/^c0109a94:	2b 45 bc             	sub    -0x44(%ebp),%eax$/;"	l
c0109a97	obj/kernel.asm	/^c0109a97:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0109a9a	obj/kernel.asm	/^c0109a9a:	81 45 d4 00 10 00 00 	addl   $0x1000,-0x2c(%ebp)$/;"	l
c0109aa1	obj/kernel.asm	/^c0109aa1:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0109aa4	obj/kernel.asm	/^c0109aa4:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0109aa7	obj/kernel.asm	/^c0109aa7:	73 09                	jae    c0109ab2 <load_icode+0x1f2>$/;"	l
c0109aa9	obj/kernel.asm	/^c0109aa9:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0109aac	obj/kernel.asm	/^c0109aac:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c0109aaf	obj/kernel.asm	/^c0109aaf:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c0109ab2	obj/kernel.asm	/^c0109ab2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109ab5	obj/kernel.asm	/^c0109ab5:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109ab8	obj/kernel.asm	/^c0109ab8:	e8 a6 f1 ff ff       	call   c0108c63 <page2kva>$/;"	l
c0109abd	obj/kernel.asm	/^c0109abd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ac0	obj/kernel.asm	/^c0109ac0:	89 c2                	mov    %eax,%edx$/;"	l
c0109ac2	obj/kernel.asm	/^c0109ac2:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0109ac5	obj/kernel.asm	/^c0109ac5:	01 d0                	add    %edx,%eax$/;"	l
c0109ac7	obj/kernel.asm	/^c0109ac7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109aca	obj/kernel.asm	/^c0109aca:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0109acd	obj/kernel.asm	/^c0109acd:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0109ad0	obj/kernel.asm	/^c0109ad0:	50                   	push   %eax$/;"	l
c0109ad1	obj/kernel.asm	/^c0109ad1:	e8 50 18 00 00       	call   c010b326 <memcpy>$/;"	l
c0109ad6	obj/kernel.asm	/^c0109ad6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ad9	obj/kernel.asm	/^c0109ad9:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0109adc	obj/kernel.asm	/^c0109adc:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c0109adf	obj/kernel.asm	/^c0109adf:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0109ae2	obj/kernel.asm	/^c0109ae2:	01 45 e0             	add    %eax,-0x20(%ebp)$/;"	l
c0109ae5	obj/kernel.asm	/^c0109ae5:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109ae8	obj/kernel.asm	/^c0109ae8:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c0109aeb	obj/kernel.asm	/^c0109aeb:	0f 82 6f ff ff ff    	jb     c0109a60 <load_icode+0x1a0>$/;"	l
c0109af1	obj/kernel.asm	/^c0109af1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109af4	obj/kernel.asm	/^c0109af4:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0109af7	obj/kernel.asm	/^c0109af7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109afa	obj/kernel.asm	/^c0109afa:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0109afd	obj/kernel.asm	/^c0109afd:	01 d0                	add    %edx,%eax$/;"	l
c0109aff	obj/kernel.asm	/^c0109aff:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0109b02	obj/kernel.asm	/^c0109b02:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109b05	obj/kernel.asm	/^c0109b05:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0109b08	obj/kernel.asm	/^c0109b08:	0f 83 9c 00 00 00    	jae    c0109baa <load_icode+0x2ea>$/;"	l
c0109b0e	obj/kernel.asm	/^c0109b0e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109b11	obj/kernel.asm	/^c0109b11:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c0109b14	obj/kernel.asm	/^c0109b14:	75 05                	jne    c0109b1b <load_icode+0x25b>$/;"	l
c0109b16	obj/kernel.asm	/^c0109b16:	e9 1b 01 00 00       	jmp    c0109c36 <load_icode+0x376>$/;"	l
c0109b1b	obj/kernel.asm	/^c0109b1b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109b1e	obj/kernel.asm	/^c0109b1e:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c0109b21	obj/kernel.asm	/^c0109b21:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c0109b26	obj/kernel.asm	/^c0109b26:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0109b29	obj/kernel.asm	/^c0109b29:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0109b2e	obj/kernel.asm	/^c0109b2e:	2b 45 bc             	sub    -0x44(%ebp),%eax$/;"	l
c0109b31	obj/kernel.asm	/^c0109b31:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0109b34	obj/kernel.asm	/^c0109b34:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0109b37	obj/kernel.asm	/^c0109b37:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0109b3a	obj/kernel.asm	/^c0109b3a:	73 09                	jae    c0109b45 <load_icode+0x285>$/;"	l
c0109b3c	obj/kernel.asm	/^c0109b3c:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0109b3f	obj/kernel.asm	/^c0109b3f:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c0109b42	obj/kernel.asm	/^c0109b42:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c0109b45	obj/kernel.asm	/^c0109b45:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109b48	obj/kernel.asm	/^c0109b48:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109b4b	obj/kernel.asm	/^c0109b4b:	e8 13 f1 ff ff       	call   c0108c63 <page2kva>$/;"	l
c0109b50	obj/kernel.asm	/^c0109b50:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109b53	obj/kernel.asm	/^c0109b53:	89 c2                	mov    %eax,%edx$/;"	l
c0109b55	obj/kernel.asm	/^c0109b55:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0109b58	obj/kernel.asm	/^c0109b58:	01 d0                	add    %edx,%eax$/;"	l
c0109b5a	obj/kernel.asm	/^c0109b5a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109b5d	obj/kernel.asm	/^c0109b5d:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0109b60	obj/kernel.asm	/^c0109b60:	6a 00                	push   $0x0$/;"	l
c0109b62	obj/kernel.asm	/^c0109b62:	50                   	push   %eax$/;"	l
c0109b63	obj/kernel.asm	/^c0109b63:	e8 db 16 00 00       	call   c010b243 <memset>$/;"	l
c0109b68	obj/kernel.asm	/^c0109b68:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109b6b	obj/kernel.asm	/^c0109b6b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0109b6e	obj/kernel.asm	/^c0109b6e:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c0109b71	obj/kernel.asm	/^c0109b71:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0109b74	obj/kernel.asm	/^c0109b74:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0109b77	obj/kernel.asm	/^c0109b77:	73 08                	jae    c0109b81 <load_icode+0x2c1>$/;"	l
c0109b79	obj/kernel.asm	/^c0109b79:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109b7c	obj/kernel.asm	/^c0109b7c:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c0109b7f	obj/kernel.asm	/^c0109b7f:	74 29                	je     c0109baa <load_icode+0x2ea>$/;"	l
c0109b81	obj/kernel.asm	/^c0109b81:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0109b84	obj/kernel.asm	/^c0109b84:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0109b87	obj/kernel.asm	/^c0109b87:	72 08                	jb     c0109b91 <load_icode+0x2d1>$/;"	l
c0109b89	obj/kernel.asm	/^c0109b89:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109b8c	obj/kernel.asm	/^c0109b8c:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0109b8f	obj/kernel.asm	/^c0109b8f:	74 19                	je     c0109baa <load_icode+0x2ea>$/;"	l
c0109b91	obj/kernel.asm	/^c0109b91:	68 6c dc 10 c0       	push   $0xc010dc6c$/;"	l
c0109b96	obj/kernel.asm	/^c0109b96:	68 a5 dc 10 c0       	push   $0xc010dca5$/;"	l
c0109b9b	obj/kernel.asm	/^c0109b9b:	68 5f 02 00 00       	push   $0x25f$/;"	l
c0109ba0	obj/kernel.asm	/^c0109ba0:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c0109ba5	obj/kernel.asm	/^c0109ba5:	e8 35 68 ff ff       	call   c01003df <__panic>$/;"	l
c0109baa	obj/kernel.asm	/^c0109baa:	eb 7e                	jmp    c0109c2a <load_icode+0x36a>$/;"	l
c0109bac	obj/kernel.asm	/^c0109bac:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109baf	obj/kernel.asm	/^c0109baf:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109bb2	obj/kernel.asm	/^c0109bb2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109bb5	obj/kernel.asm	/^c0109bb5:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0109bb8	obj/kernel.asm	/^c0109bb8:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
c0109bbb	obj/kernel.asm	/^c0109bbb:	50                   	push   %eax$/;"	l
c0109bbc	obj/kernel.asm	/^c0109bbc:	e8 08 ab ff ff       	call   c01046c9 <pgdir_alloc_page>$/;"	l
c0109bc1	obj/kernel.asm	/^c0109bc1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109bc4	obj/kernel.asm	/^c0109bc4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109bc7	obj/kernel.asm	/^c0109bc7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109bcb	obj/kernel.asm	/^c0109bcb:	75 05                	jne    c0109bd2 <load_icode+0x312>$/;"	l
c0109bcd	obj/kernel.asm	/^c0109bcd:	e9 89 02 00 00       	jmp    c0109e5b <load_icode+0x59b>$/;"	l
c0109bd2	obj/kernel.asm	/^c0109bd2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109bd5	obj/kernel.asm	/^c0109bd5:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c0109bd8	obj/kernel.asm	/^c0109bd8:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0109bdb	obj/kernel.asm	/^c0109bdb:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0109be0	obj/kernel.asm	/^c0109be0:	2b 45 bc             	sub    -0x44(%ebp),%eax$/;"	l
c0109be3	obj/kernel.asm	/^c0109be3:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0109be6	obj/kernel.asm	/^c0109be6:	81 45 d4 00 10 00 00 	addl   $0x1000,-0x2c(%ebp)$/;"	l
c0109bed	obj/kernel.asm	/^c0109bed:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0109bf0	obj/kernel.asm	/^c0109bf0:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0109bf3	obj/kernel.asm	/^c0109bf3:	73 09                	jae    c0109bfe <load_icode+0x33e>$/;"	l
c0109bf5	obj/kernel.asm	/^c0109bf5:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0109bf8	obj/kernel.asm	/^c0109bf8:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c0109bfb	obj/kernel.asm	/^c0109bfb:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c0109bfe	obj/kernel.asm	/^c0109bfe:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109c01	obj/kernel.asm	/^c0109c01:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109c04	obj/kernel.asm	/^c0109c04:	e8 5a f0 ff ff       	call   c0108c63 <page2kva>$/;"	l
c0109c09	obj/kernel.asm	/^c0109c09:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109c0c	obj/kernel.asm	/^c0109c0c:	89 c2                	mov    %eax,%edx$/;"	l
c0109c0e	obj/kernel.asm	/^c0109c0e:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0109c11	obj/kernel.asm	/^c0109c11:	01 d0                	add    %edx,%eax$/;"	l
c0109c13	obj/kernel.asm	/^c0109c13:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109c16	obj/kernel.asm	/^c0109c16:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0109c19	obj/kernel.asm	/^c0109c19:	6a 00                	push   $0x0$/;"	l
c0109c1b	obj/kernel.asm	/^c0109c1b:	50                   	push   %eax$/;"	l
c0109c1c	obj/kernel.asm	/^c0109c1c:	e8 22 16 00 00       	call   c010b243 <memset>$/;"	l
c0109c21	obj/kernel.asm	/^c0109c21:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109c24	obj/kernel.asm	/^c0109c24:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0109c27	obj/kernel.asm	/^c0109c27:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c0109c2a	obj/kernel.asm	/^c0109c2a:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0109c2d	obj/kernel.asm	/^c0109c2d:	3b 45 c0             	cmp    -0x40(%ebp),%eax$/;"	l
c0109c30	obj/kernel.asm	/^c0109c30:	0f 82 76 ff ff ff    	jb     c0109bac <load_icode+0x2ec>$/;"	l
c0109c36	obj/kernel.asm	/^c0109c36:	83 45 ec 20          	addl   $0x20,-0x14(%ebp)$/;"	l
c0109c3a	obj/kernel.asm	/^c0109c3a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109c3d	obj/kernel.asm	/^c0109c3d:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0109c40	obj/kernel.asm	/^c0109c40:	0f 82 1d fd ff ff    	jb     c0109963 <load_icode+0xa3>$/;"	l
c0109c46	obj/kernel.asm	/^c0109c46:	c7 45 e8 0b 00 00 00 	movl   $0xb,-0x18(%ebp)$/;"	l
c0109c4d	obj/kernel.asm	/^c0109c4d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109c50	obj/kernel.asm	/^c0109c50:	6a 00                	push   $0x0$/;"	l
c0109c52	obj/kernel.asm	/^c0109c52:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0109c55	obj/kernel.asm	/^c0109c55:	68 00 00 10 00       	push   $0x100000$/;"	l
c0109c5a	obj/kernel.asm	/^c0109c5a:	68 00 00 f0 af       	push   $0xaff00000$/;"	l
c0109c5f	obj/kernel.asm	/^c0109c5f:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c0109c62	obj/kernel.asm	/^c0109c62:	e8 17 ba ff ff       	call   c010567e <mm_map>$/;"	l
c0109c67	obj/kernel.asm	/^c0109c67:	83 c4 20             	add    $0x20,%esp$/;"	l
c0109c6a	obj/kernel.asm	/^c0109c6a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109c6d	obj/kernel.asm	/^c0109c6d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109c71	obj/kernel.asm	/^c0109c71:	74 05                	je     c0109c78 <load_icode+0x3b8>$/;"	l
c0109c73	obj/kernel.asm	/^c0109c73:	e9 e3 01 00 00       	jmp    c0109e5b <load_icode+0x59b>$/;"	l
c0109c78	obj/kernel.asm	/^c0109c78:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109c7b	obj/kernel.asm	/^c0109c7b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109c7e	obj/kernel.asm	/^c0109c7e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109c81	obj/kernel.asm	/^c0109c81:	6a 07                	push   $0x7$/;"	l
c0109c83	obj/kernel.asm	/^c0109c83:	68 00 f0 ff af       	push   $0xaffff000$/;"	l
c0109c88	obj/kernel.asm	/^c0109c88:	50                   	push   %eax$/;"	l
c0109c89	obj/kernel.asm	/^c0109c89:	e8 3b aa ff ff       	call   c01046c9 <pgdir_alloc_page>$/;"	l
c0109c8e	obj/kernel.asm	/^c0109c8e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109c91	obj/kernel.asm	/^c0109c91:	85 c0                	test   %eax,%eax$/;"	l
c0109c93	obj/kernel.asm	/^c0109c93:	75 19                	jne    c0109cae <load_icode+0x3ee>$/;"	l
c0109c95	obj/kernel.asm	/^c0109c95:	68 bc dc 10 c0       	push   $0xc010dcbc$/;"	l
c0109c9a	obj/kernel.asm	/^c0109c9a:	68 a5 dc 10 c0       	push   $0xc010dca5$/;"	l
c0109c9f	obj/kernel.asm	/^c0109c9f:	68 72 02 00 00       	push   $0x272$/;"	l
c0109ca4	obj/kernel.asm	/^c0109ca4:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c0109ca9	obj/kernel.asm	/^c0109ca9:	e8 31 67 ff ff       	call   c01003df <__panic>$/;"	l
c0109cae	obj/kernel.asm	/^c0109cae:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109cb1	obj/kernel.asm	/^c0109cb1:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109cb4	obj/kernel.asm	/^c0109cb4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109cb7	obj/kernel.asm	/^c0109cb7:	6a 07                	push   $0x7$/;"	l
c0109cb9	obj/kernel.asm	/^c0109cb9:	68 00 e0 ff af       	push   $0xafffe000$/;"	l
c0109cbe	obj/kernel.asm	/^c0109cbe:	50                   	push   %eax$/;"	l
c0109cbf	obj/kernel.asm	/^c0109cbf:	e8 05 aa ff ff       	call   c01046c9 <pgdir_alloc_page>$/;"	l
c0109cc4	obj/kernel.asm	/^c0109cc4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109cc7	obj/kernel.asm	/^c0109cc7:	85 c0                	test   %eax,%eax$/;"	l
c0109cc9	obj/kernel.asm	/^c0109cc9:	75 19                	jne    c0109ce4 <load_icode+0x424>$/;"	l
c0109ccb	obj/kernel.asm	/^c0109ccb:	68 00 dd 10 c0       	push   $0xc010dd00$/;"	l
c0109cd0	obj/kernel.asm	/^c0109cd0:	68 a5 dc 10 c0       	push   $0xc010dca5$/;"	l
c0109cd5	obj/kernel.asm	/^c0109cd5:	68 73 02 00 00       	push   $0x273$/;"	l
c0109cda	obj/kernel.asm	/^c0109cda:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c0109cdf	obj/kernel.asm	/^c0109cdf:	e8 fb 66 ff ff       	call   c01003df <__panic>$/;"	l
c0109ce4	obj/kernel.asm	/^c0109ce4:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109ce7	obj/kernel.asm	/^c0109ce7:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109cea	obj/kernel.asm	/^c0109cea:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109ced	obj/kernel.asm	/^c0109ced:	6a 07                	push   $0x7$/;"	l
c0109cef	obj/kernel.asm	/^c0109cef:	68 00 d0 ff af       	push   $0xafffd000$/;"	l
c0109cf4	obj/kernel.asm	/^c0109cf4:	50                   	push   %eax$/;"	l
c0109cf5	obj/kernel.asm	/^c0109cf5:	e8 cf a9 ff ff       	call   c01046c9 <pgdir_alloc_page>$/;"	l
c0109cfa	obj/kernel.asm	/^c0109cfa:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109cfd	obj/kernel.asm	/^c0109cfd:	85 c0                	test   %eax,%eax$/;"	l
c0109cff	obj/kernel.asm	/^c0109cff:	75 19                	jne    c0109d1a <load_icode+0x45a>$/;"	l
c0109d01	obj/kernel.asm	/^c0109d01:	68 44 dd 10 c0       	push   $0xc010dd44$/;"	l
c0109d06	obj/kernel.asm	/^c0109d06:	68 a5 dc 10 c0       	push   $0xc010dca5$/;"	l
c0109d0b	obj/kernel.asm	/^c0109d0b:	68 74 02 00 00       	push   $0x274$/;"	l
c0109d10	obj/kernel.asm	/^c0109d10:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c0109d15	obj/kernel.asm	/^c0109d15:	e8 c5 66 ff ff       	call   c01003df <__panic>$/;"	l
c0109d1a	obj/kernel.asm	/^c0109d1a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109d1d	obj/kernel.asm	/^c0109d1d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109d20	obj/kernel.asm	/^c0109d20:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109d23	obj/kernel.asm	/^c0109d23:	6a 07                	push   $0x7$/;"	l
c0109d25	obj/kernel.asm	/^c0109d25:	68 00 c0 ff af       	push   $0xafffc000$/;"	l
c0109d2a	obj/kernel.asm	/^c0109d2a:	50                   	push   %eax$/;"	l
c0109d2b	obj/kernel.asm	/^c0109d2b:	e8 99 a9 ff ff       	call   c01046c9 <pgdir_alloc_page>$/;"	l
c0109d30	obj/kernel.asm	/^c0109d30:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109d33	obj/kernel.asm	/^c0109d33:	85 c0                	test   %eax,%eax$/;"	l
c0109d35	obj/kernel.asm	/^c0109d35:	75 19                	jne    c0109d50 <load_icode+0x490>$/;"	l
c0109d37	obj/kernel.asm	/^c0109d37:	68 88 dd 10 c0       	push   $0xc010dd88$/;"	l
c0109d3c	obj/kernel.asm	/^c0109d3c:	68 a5 dc 10 c0       	push   $0xc010dca5$/;"	l
c0109d41	obj/kernel.asm	/^c0109d41:	68 75 02 00 00       	push   $0x275$/;"	l
c0109d46	obj/kernel.asm	/^c0109d46:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c0109d4b	obj/kernel.asm	/^c0109d4b:	e8 8f 66 ff ff       	call   c01003df <__panic>$/;"	l
c0109d50	obj/kernel.asm	/^c0109d50:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109d53	obj/kernel.asm	/^c0109d53:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c0109d56	obj/kernel.asm	/^c0109d56:	e8 8c ef ff ff       	call   c0108ce7 <mm_count_inc>$/;"	l
c0109d5b	obj/kernel.asm	/^c0109d5b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109d5e	obj/kernel.asm	/^c0109d5e:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0109d63	obj/kernel.asm	/^c0109d63:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0109d66	obj/kernel.asm	/^c0109d66:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0109d69	obj/kernel.asm	/^c0109d69:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0109d6e	obj/kernel.asm	/^c0109d6e:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0109d71	obj/kernel.asm	/^c0109d71:	8b 52 0c             	mov    0xc(%edx),%edx$/;"	l
c0109d74	obj/kernel.asm	/^c0109d74:	89 55 b8             	mov    %edx,-0x48(%ebp)$/;"	l
c0109d77	obj/kernel.asm	/^c0109d77:	81 7d b8 ff ff ff bf 	cmpl   $0xbfffffff,-0x48(%ebp)$/;"	l
c0109d7e	obj/kernel.asm	/^c0109d7e:	77 17                	ja     c0109d97 <load_icode+0x4d7>$/;"	l
c0109d80	obj/kernel.asm	/^c0109d80:	ff 75 b8             	pushl  -0x48(%ebp)$/;"	l
c0109d83	obj/kernel.asm	/^c0109d83:	68 b4 db 10 c0       	push   $0xc010dbb4$/;"	l
c0109d88	obj/kernel.asm	/^c0109d88:	68 7a 02 00 00       	push   $0x27a$/;"	l
c0109d8d	obj/kernel.asm	/^c0109d8d:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c0109d92	obj/kernel.asm	/^c0109d92:	e8 48 66 ff ff       	call   c01003df <__panic>$/;"	l
c0109d97	obj/kernel.asm	/^c0109d97:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
c0109d9a	obj/kernel.asm	/^c0109d9a:	81 c2 00 00 00 40    	add    $0x40000000,%edx$/;"	l
c0109da0	obj/kernel.asm	/^c0109da0:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c0109da3	obj/kernel.asm	/^c0109da3:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0109da6	obj/kernel.asm	/^c0109da6:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109da9	obj/kernel.asm	/^c0109da9:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0109dac	obj/kernel.asm	/^c0109dac:	81 7d b4 ff ff ff bf 	cmpl   $0xbfffffff,-0x4c(%ebp)$/;"	l
c0109db3	obj/kernel.asm	/^c0109db3:	77 17                	ja     c0109dcc <load_icode+0x50c>$/;"	l
c0109db5	obj/kernel.asm	/^c0109db5:	ff 75 b4             	pushl  -0x4c(%ebp)$/;"	l
c0109db8	obj/kernel.asm	/^c0109db8:	68 b4 db 10 c0       	push   $0xc010dbb4$/;"	l
c0109dbd	obj/kernel.asm	/^c0109dbd:	68 7b 02 00 00       	push   $0x27b$/;"	l
c0109dc2	obj/kernel.asm	/^c0109dc2:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c0109dc7	obj/kernel.asm	/^c0109dc7:	e8 13 66 ff ff       	call   c01003df <__panic>$/;"	l
c0109dcc	obj/kernel.asm	/^c0109dcc:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0109dcf	obj/kernel.asm	/^c0109dcf:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0109dd4	obj/kernel.asm	/^c0109dd4:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0109dd7	obj/kernel.asm	/^c0109dd7:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c0109dda	obj/kernel.asm	/^c0109dda:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0109ddd	obj/kernel.asm	/^c0109ddd:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0109de2	obj/kernel.asm	/^c0109de2:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0109de5	obj/kernel.asm	/^c0109de5:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0109de8	obj/kernel.asm	/^c0109de8:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109deb	obj/kernel.asm	/^c0109deb:	6a 4c                	push   $0x4c$/;"	l
c0109ded	obj/kernel.asm	/^c0109ded:	6a 00                	push   $0x0$/;"	l
c0109def	obj/kernel.asm	/^c0109def:	ff 75 b0             	pushl  -0x50(%ebp)$/;"	l
c0109df2	obj/kernel.asm	/^c0109df2:	e8 4c 14 00 00       	call   c010b243 <memset>$/;"	l
c0109df7	obj/kernel.asm	/^c0109df7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109dfa	obj/kernel.asm	/^c0109dfa:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109dfd	obj/kernel.asm	/^c0109dfd:	66 c7 40 3c 1b 00    	movw   $0x1b,0x3c(%eax)$/;"	l
c0109e03	obj/kernel.asm	/^c0109e03:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109e06	obj/kernel.asm	/^c0109e06:	66 c7 40 48 23 00    	movw   $0x23,0x48(%eax)$/;"	l
c0109e0c	obj/kernel.asm	/^c0109e0c:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109e0f	obj/kernel.asm	/^c0109e0f:	0f b7 50 48          	movzwl 0x48(%eax),%edx$/;"	l
c0109e13	obj/kernel.asm	/^c0109e13:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109e16	obj/kernel.asm	/^c0109e16:	66 89 50 28          	mov    %dx,0x28(%eax)$/;"	l
c0109e1a	obj/kernel.asm	/^c0109e1a:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109e1d	obj/kernel.asm	/^c0109e1d:	0f b7 50 28          	movzwl 0x28(%eax),%edx$/;"	l
c0109e21	obj/kernel.asm	/^c0109e21:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109e24	obj/kernel.asm	/^c0109e24:	66 89 50 2c          	mov    %dx,0x2c(%eax)$/;"	l
c0109e28	obj/kernel.asm	/^c0109e28:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109e2b	obj/kernel.asm	/^c0109e2b:	c7 40 44 00 00 00 b0 	movl   $0xb0000000,0x44(%eax)$/;"	l
c0109e32	obj/kernel.asm	/^c0109e32:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0109e35	obj/kernel.asm	/^c0109e35:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c0109e38	obj/kernel.asm	/^c0109e38:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109e3b	obj/kernel.asm	/^c0109e3b:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
c0109e3e	obj/kernel.asm	/^c0109e3e:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109e41	obj/kernel.asm	/^c0109e41:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c0109e44	obj/kernel.asm	/^c0109e44:	80 cc 02             	or     $0x2,%ah$/;"	l
c0109e47	obj/kernel.asm	/^c0109e47:	89 c2                	mov    %eax,%edx$/;"	l
c0109e49	obj/kernel.asm	/^c0109e49:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0109e4c	obj/kernel.asm	/^c0109e4c:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c0109e4f	obj/kernel.asm	/^c0109e4f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109e56	obj/kernel.asm	/^c0109e56:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109e59	obj/kernel.asm	/^c0109e59:	eb 2c                	jmp    c0109e87 <load_icode+0x5c7>$/;"	l
c0109e5b	obj/kernel.asm	/^c0109e5b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109e5e	obj/kernel.asm	/^c0109e5e:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c0109e61	obj/kernel.asm	/^c0109e61:	e8 05 ba ff ff       	call   c010586b <exit_mmap>$/;"	l
c0109e66	obj/kernel.asm	/^c0109e66:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e69	obj/kernel.asm	/^c0109e69:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109e6c	obj/kernel.asm	/^c0109e6c:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c0109e6f	obj/kernel.asm	/^c0109e6f:	e8 71 f5 ff ff       	call   c01093e5 <put_pgdir>$/;"	l
c0109e74	obj/kernel.asm	/^c0109e74:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e77	obj/kernel.asm	/^c0109e77:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109e7a	obj/kernel.asm	/^c0109e7a:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c0109e7d	obj/kernel.asm	/^c0109e7d:	e8 5e b7 ff ff       	call   c01055e0 <mm_destroy>$/;"	l
c0109e82	obj/kernel.asm	/^c0109e82:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e85	obj/kernel.asm	/^c0109e85:	eb cf                	jmp    c0109e56 <load_icode+0x596>$/;"	l
c0109e87	obj/kernel.asm	/^c0109e87:	c9                   	leave  $/;"	l
c0109e88	obj/kernel.asm	/^c0109e88:	c3                   	ret    $/;"	l
c0109e89	obj/kernel.asm	/^c0109e89 <do_execve>:$/;"	l
c0109e89	obj/kernel.asm	/^c0109e89:	55                   	push   %ebp$/;"	l
c0109e8a	obj/kernel.asm	/^c0109e8a:	89 e5                	mov    %esp,%ebp$/;"	l
c0109e8c	obj/kernel.asm	/^c0109e8c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109e8f	obj/kernel.asm	/^c0109e8f:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0109e94	obj/kernel.asm	/^c0109e94:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109e97	obj/kernel.asm	/^c0109e97:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109e9a	obj/kernel.asm	/^c0109e9a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109e9d	obj/kernel.asm	/^c0109e9d:	6a 00                	push   $0x0$/;"	l
c0109e9f	obj/kernel.asm	/^c0109e9f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109ea2	obj/kernel.asm	/^c0109ea2:	50                   	push   %eax$/;"	l
c0109ea3	obj/kernel.asm	/^c0109ea3:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109ea6	obj/kernel.asm	/^c0109ea6:	e8 66 c3 ff ff       	call   c0106211 <user_mem_check>$/;"	l
c0109eab	obj/kernel.asm	/^c0109eab:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109eae	obj/kernel.asm	/^c0109eae:	85 c0                	test   %eax,%eax$/;"	l
c0109eb0	obj/kernel.asm	/^c0109eb0:	75 0a                	jne    c0109ebc <do_execve+0x33>$/;"	l
c0109eb2	obj/kernel.asm	/^c0109eb2:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0109eb7	obj/kernel.asm	/^c0109eb7:	e9 eb 00 00 00       	jmp    c0109fa7 <do_execve+0x11e>$/;"	l
c0109ebc	obj/kernel.asm	/^c0109ebc:	83 7d 0c 0f          	cmpl   $0xf,0xc(%ebp)$/;"	l
c0109ec0	obj/kernel.asm	/^c0109ec0:	76 07                	jbe    c0109ec9 <do_execve+0x40>$/;"	l
c0109ec2	obj/kernel.asm	/^c0109ec2:	c7 45 0c 0f 00 00 00 	movl   $0xf,0xc(%ebp)$/;"	l
c0109ec9	obj/kernel.asm	/^c0109ec9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109ecc	obj/kernel.asm	/^c0109ecc:	6a 10                	push   $0x10$/;"	l
c0109ece	obj/kernel.asm	/^c0109ece:	6a 00                	push   $0x0$/;"	l
c0109ed0	obj/kernel.asm	/^c0109ed0:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0109ed3	obj/kernel.asm	/^c0109ed3:	50                   	push   %eax$/;"	l
c0109ed4	obj/kernel.asm	/^c0109ed4:	e8 6a 13 00 00       	call   c010b243 <memset>$/;"	l
c0109ed9	obj/kernel.asm	/^c0109ed9:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109edc	obj/kernel.asm	/^c0109edc:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109edf	obj/kernel.asm	/^c0109edf:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109ee2	obj/kernel.asm	/^c0109ee2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109ee5	obj/kernel.asm	/^c0109ee5:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0109ee8	obj/kernel.asm	/^c0109ee8:	50                   	push   %eax$/;"	l
c0109ee9	obj/kernel.asm	/^c0109ee9:	e8 38 14 00 00       	call   c010b326 <memcpy>$/;"	l
c0109eee	obj/kernel.asm	/^c0109eee:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ef1	obj/kernel.asm	/^c0109ef1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109ef5	obj/kernel.asm	/^c0109ef5:	74 56                	je     c0109f4d <do_execve+0xc4>$/;"	l
c0109ef7	obj/kernel.asm	/^c0109ef7:	a1 14 0f 1b c0       	mov    0xc01b0f14,%eax$/;"	l
c0109efc	obj/kernel.asm	/^c0109efc:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109eff	obj/kernel.asm	/^c0109eff:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109f02	obj/kernel.asm	/^c0109f02:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0109f05	obj/kernel.asm	/^c0109f05:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109f08	obj/kernel.asm	/^c0109f08:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109f0b	obj/kernel.asm	/^c0109f0b:	e8 f1 ed ff ff       	call   c0108d01 <mm_count_dec>$/;"	l
c0109f10	obj/kernel.asm	/^c0109f10:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f13	obj/kernel.asm	/^c0109f13:	85 c0                	test   %eax,%eax$/;"	l
c0109f15	obj/kernel.asm	/^c0109f15:	75 2a                	jne    c0109f41 <do_execve+0xb8>$/;"	l
c0109f17	obj/kernel.asm	/^c0109f17:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109f1a	obj/kernel.asm	/^c0109f1a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109f1d	obj/kernel.asm	/^c0109f1d:	e8 49 b9 ff ff       	call   c010586b <exit_mmap>$/;"	l
c0109f22	obj/kernel.asm	/^c0109f22:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f25	obj/kernel.asm	/^c0109f25:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109f28	obj/kernel.asm	/^c0109f28:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109f2b	obj/kernel.asm	/^c0109f2b:	e8 b5 f4 ff ff       	call   c01093e5 <put_pgdir>$/;"	l
c0109f30	obj/kernel.asm	/^c0109f30:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f33	obj/kernel.asm	/^c0109f33:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109f36	obj/kernel.asm	/^c0109f36:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109f39	obj/kernel.asm	/^c0109f39:	e8 a2 b6 ff ff       	call   c01055e0 <mm_destroy>$/;"	l
c0109f3e	obj/kernel.asm	/^c0109f3e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f41	obj/kernel.asm	/^c0109f41:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0109f46	obj/kernel.asm	/^c0109f46:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c0109f4d	obj/kernel.asm	/^c0109f4d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109f50	obj/kernel.asm	/^c0109f50:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0109f53	obj/kernel.asm	/^c0109f53:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0109f56	obj/kernel.asm	/^c0109f56:	e8 65 f9 ff ff       	call   c01098c0 <load_icode>$/;"	l
c0109f5b	obj/kernel.asm	/^c0109f5b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f5e	obj/kernel.asm	/^c0109f5e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109f61	obj/kernel.asm	/^c0109f61:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109f65	obj/kernel.asm	/^c0109f65:	74 26                	je     c0109f8d <do_execve+0x104>$/;"	l
c0109f67	obj/kernel.asm	/^c0109f67:	90                   	nop$/;"	l
c0109f68	obj/kernel.asm	/^c0109f68:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109f6b	obj/kernel.asm	/^c0109f6b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109f6e	obj/kernel.asm	/^c0109f6e:	e8 81 f7 ff ff       	call   c01096f4 <do_exit>$/;"	l
c0109f73	obj/kernel.asm	/^c0109f73:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f76	obj/kernel.asm	/^c0109f76:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109f79	obj/kernel.asm	/^c0109f79:	68 cb dd 10 c0       	push   $0xc010ddcb$/;"	l
c0109f7e	obj/kernel.asm	/^c0109f7e:	68 bf 02 00 00       	push   $0x2bf$/;"	l
c0109f83	obj/kernel.asm	/^c0109f83:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c0109f88	obj/kernel.asm	/^c0109f88:	e8 52 64 ff ff       	call   c01003df <__panic>$/;"	l
c0109f8d	obj/kernel.asm	/^c0109f8d:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0109f92	obj/kernel.asm	/^c0109f92:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109f95	obj/kernel.asm	/^c0109f95:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c0109f98	obj/kernel.asm	/^c0109f98:	52                   	push   %edx$/;"	l
c0109f99	obj/kernel.asm	/^c0109f99:	50                   	push   %eax$/;"	l
c0109f9a	obj/kernel.asm	/^c0109f9a:	e8 a1 ee ff ff       	call   c0108e40 <set_proc_name>$/;"	l
c0109f9f	obj/kernel.asm	/^c0109f9f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109fa2	obj/kernel.asm	/^c0109fa2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109fa7	obj/kernel.asm	/^c0109fa7:	c9                   	leave  $/;"	l
c0109fa8	obj/kernel.asm	/^c0109fa8:	c3                   	ret    $/;"	l
c0109fa9	obj/kernel.asm	/^c0109fa9 <do_yield>:$/;"	l
c0109fa9	obj/kernel.asm	/^c0109fa9:	55                   	push   %ebp$/;"	l
c0109faa	obj/kernel.asm	/^c0109faa:	89 e5                	mov    %esp,%ebp$/;"	l
c0109fac	obj/kernel.asm	/^c0109fac:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0109fb1	obj/kernel.asm	/^c0109fb1:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c0109fb8	obj/kernel.asm	/^c0109fb8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109fbd	obj/kernel.asm	/^c0109fbd:	5d                   	pop    %ebp$/;"	l
c0109fbe	obj/kernel.asm	/^c0109fbe:	c3                   	ret    $/;"	l
c0109fbf	obj/kernel.asm	/^c0109fbf <do_wait>:$/;"	l
c0109fbf	obj/kernel.asm	/^c0109fbf:	55                   	push   %ebp$/;"	l
c0109fc0	obj/kernel.asm	/^c0109fc0:	89 e5                	mov    %esp,%ebp$/;"	l
c0109fc2	obj/kernel.asm	/^c0109fc2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109fc5	obj/kernel.asm	/^c0109fc5:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c0109fca	obj/kernel.asm	/^c0109fca:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109fcd	obj/kernel.asm	/^c0109fcd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109fd0	obj/kernel.asm	/^c0109fd0:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0109fd4	obj/kernel.asm	/^c0109fd4:	74 21                	je     c0109ff7 <do_wait+0x38>$/;"	l
c0109fd6	obj/kernel.asm	/^c0109fd6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109fd9	obj/kernel.asm	/^c0109fd9:	6a 01                	push   $0x1$/;"	l
c0109fdb	obj/kernel.asm	/^c0109fdb:	6a 04                	push   $0x4$/;"	l
c0109fdd	obj/kernel.asm	/^c0109fdd:	50                   	push   %eax$/;"	l
c0109fde	obj/kernel.asm	/^c0109fde:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109fe1	obj/kernel.asm	/^c0109fe1:	e8 2b c2 ff ff       	call   c0106211 <user_mem_check>$/;"	l
c0109fe6	obj/kernel.asm	/^c0109fe6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109fe9	obj/kernel.asm	/^c0109fe9:	85 c0                	test   %eax,%eax$/;"	l
c0109feb	obj/kernel.asm	/^c0109feb:	75 0a                	jne    c0109ff7 <do_wait+0x38>$/;"	l
c0109fed	obj/kernel.asm	/^c0109fed:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0109ff2	obj/kernel.asm	/^c0109ff2:	e9 51 01 00 00       	jmp    c010a148 <do_wait+0x189>$/;"	l
c0109ff7	obj/kernel.asm	/^c0109ff7:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0109ffe	obj/kernel.asm	/^c0109ffe:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010a002	obj/kernel.asm	/^c010a002:	74 39                	je     c010a03d <do_wait+0x7e>$/;"	l
c010a004	obj/kernel.asm	/^c010a004:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a007	obj/kernel.asm	/^c010a007:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a00a	obj/kernel.asm	/^c010a00a:	e8 00 f2 ff ff       	call   c010920f <find_proc>$/;"	l
c010a00f	obj/kernel.asm	/^c010a00f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a012	obj/kernel.asm	/^c010a012:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a015	obj/kernel.asm	/^c010a015:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a019	obj/kernel.asm	/^c010a019:	74 51                	je     c010a06c <do_wait+0xad>$/;"	l
c010a01b	obj/kernel.asm	/^c010a01b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a01e	obj/kernel.asm	/^c010a01e:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c010a021	obj/kernel.asm	/^c010a021:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010a026	obj/kernel.asm	/^c010a026:	39 c2                	cmp    %eax,%edx$/;"	l
c010a028	obj/kernel.asm	/^c010a028:	75 42                	jne    c010a06c <do_wait+0xad>$/;"	l
c010a02a	obj/kernel.asm	/^c010a02a:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010a031	obj/kernel.asm	/^c010a031:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a034	obj/kernel.asm	/^c010a034:	8b 00                	mov    (%eax),%eax$/;"	l
c010a036	obj/kernel.asm	/^c010a036:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a039	obj/kernel.asm	/^c010a039:	75 31                	jne    c010a06c <do_wait+0xad>$/;"	l
c010a03b	obj/kernel.asm	/^c010a03b:	eb 7c                	jmp    c010a0b9 <do_wait+0xfa>$/;"	l
c010a03d	obj/kernel.asm	/^c010a03d:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010a042	obj/kernel.asm	/^c010a042:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c010a045	obj/kernel.asm	/^c010a045:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a048	obj/kernel.asm	/^c010a048:	eb 1c                	jmp    c010a066 <do_wait+0xa7>$/;"	l
c010a04a	obj/kernel.asm	/^c010a04a:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010a051	obj/kernel.asm	/^c010a051:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a054	obj/kernel.asm	/^c010a054:	8b 00                	mov    (%eax),%eax$/;"	l
c010a056	obj/kernel.asm	/^c010a056:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a059	obj/kernel.asm	/^c010a059:	75 02                	jne    c010a05d <do_wait+0x9e>$/;"	l
c010a05b	obj/kernel.asm	/^c010a05b:	eb 5c                	jmp    c010a0b9 <do_wait+0xfa>$/;"	l
c010a05d	obj/kernel.asm	/^c010a05d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a060	obj/kernel.asm	/^c010a060:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010a063	obj/kernel.asm	/^c010a063:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a066	obj/kernel.asm	/^c010a066:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a06a	obj/kernel.asm	/^c010a06a:	75 de                	jne    c010a04a <do_wait+0x8b>$/;"	l
c010a06c	obj/kernel.asm	/^c010a06c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a070	obj/kernel.asm	/^c010a070:	74 3d                	je     c010a0af <do_wait+0xf0>$/;"	l
c010a072	obj/kernel.asm	/^c010a072:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010a077	obj/kernel.asm	/^c010a077:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010a07d	obj/kernel.asm	/^c010a07d:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010a082	obj/kernel.asm	/^c010a082:	c7 40 6c 01 00 00 80 	movl   $0x80000001,0x6c(%eax)$/;"	l
c010a089	obj/kernel.asm	/^c010a089:	e8 c6 06 00 00       	call   c010a754 <schedule>$/;"	l
c010a08e	obj/kernel.asm	/^c010a08e:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010a093	obj/kernel.asm	/^c010a093:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010a096	obj/kernel.asm	/^c010a096:	83 e0 01             	and    $0x1,%eax$/;"	l
c010a099	obj/kernel.asm	/^c010a099:	85 c0                	test   %eax,%eax$/;"	l
c010a09b	obj/kernel.asm	/^c010a09b:	74 0d                	je     c010a0aa <do_wait+0xeb>$/;"	l
c010a09d	obj/kernel.asm	/^c010a09d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a0a0	obj/kernel.asm	/^c010a0a0:	6a f7                	push   $0xfffffff7$/;"	l
c010a0a2	obj/kernel.asm	/^c010a0a2:	e8 4d f6 ff ff       	call   c01096f4 <do_exit>$/;"	l
c010a0a7	obj/kernel.asm	/^c010a0a7:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a0aa	obj/kernel.asm	/^c010a0aa:	e9 48 ff ff ff       	jmp    c0109ff7 <do_wait+0x38>$/;"	l
c010a0af	obj/kernel.asm	/^c010a0af:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
c010a0b4	obj/kernel.asm	/^c010a0b4:	e9 8f 00 00 00       	jmp    c010a148 <do_wait+0x189>$/;"	l
c010a0b9	obj/kernel.asm	/^c010a0b9:	a1 40 ee 1a c0       	mov    0xc01aee40,%eax$/;"	l
c010a0be	obj/kernel.asm	/^c010a0be:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010a0c1	obj/kernel.asm	/^c010a0c1:	74 0a                	je     c010a0cd <do_wait+0x10e>$/;"	l
c010a0c3	obj/kernel.asm	/^c010a0c3:	a1 44 ee 1a c0       	mov    0xc01aee44,%eax$/;"	l
c010a0c8	obj/kernel.asm	/^c010a0c8:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010a0cb	obj/kernel.asm	/^c010a0cb:	75 17                	jne    c010a0e4 <do_wait+0x125>$/;"	l
c010a0cd	obj/kernel.asm	/^c010a0cd:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a0d0	obj/kernel.asm	/^c010a0d0:	68 de dd 10 c0       	push   $0xc010ddde$/;"	l
c010a0d5	obj/kernel.asm	/^c010a0d5:	68 f8 02 00 00       	push   $0x2f8$/;"	l
c010a0da	obj/kernel.asm	/^c010a0da:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c010a0df	obj/kernel.asm	/^c010a0df:	e8 fb 62 ff ff       	call   c01003df <__panic>$/;"	l
c010a0e4	obj/kernel.asm	/^c010a0e4:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010a0e8	obj/kernel.asm	/^c010a0e8:	74 0b                	je     c010a0f5 <do_wait+0x136>$/;"	l
c010a0ea	obj/kernel.asm	/^c010a0ea:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a0ed	obj/kernel.asm	/^c010a0ed:	8b 50 68             	mov    0x68(%eax),%edx$/;"	l
c010a0f0	obj/kernel.asm	/^c010a0f0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a0f3	obj/kernel.asm	/^c010a0f3:	89 10                	mov    %edx,(%eax)$/;"	l
c010a0f5	obj/kernel.asm	/^c010a0f5:	e8 61 ea ff ff       	call   c0108b5b <__intr_save>$/;"	l
c010a0fa	obj/kernel.asm	/^c010a0fa:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a0fd	obj/kernel.asm	/^c010a0fd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a100	obj/kernel.asm	/^c010a100:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a103	obj/kernel.asm	/^c010a103:	e8 d4 f0 ff ff       	call   c01091dc <unhash_proc>$/;"	l
c010a108	obj/kernel.asm	/^c010a108:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a10b	obj/kernel.asm	/^c010a10b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a10e	obj/kernel.asm	/^c010a10e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a111	obj/kernel.asm	/^c010a111:	e8 39 ee ff ff       	call   c0108f4f <remove_links>$/;"	l
c010a116	obj/kernel.asm	/^c010a116:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a119	obj/kernel.asm	/^c010a119:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a11c	obj/kernel.asm	/^c010a11c:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010a11f	obj/kernel.asm	/^c010a11f:	e8 61 ea ff ff       	call   c0108b85 <__intr_restore>$/;"	l
c010a124	obj/kernel.asm	/^c010a124:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a127	obj/kernel.asm	/^c010a127:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a12a	obj/kernel.asm	/^c010a12a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a12d	obj/kernel.asm	/^c010a12d:	e8 f2 f1 ff ff       	call   c0109324 <put_kstack>$/;"	l
c010a132	obj/kernel.asm	/^c010a132:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a135	obj/kernel.asm	/^c010a135:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a138	obj/kernel.asm	/^c010a138:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a13b	obj/kernel.asm	/^c010a13b:	e8 c7 d2 ff ff       	call   c0107407 <kfree>$/;"	l
c010a140	obj/kernel.asm	/^c010a140:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a143	obj/kernel.asm	/^c010a143:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a148	obj/kernel.asm	/^c010a148:	c9                   	leave  $/;"	l
c010a149	obj/kernel.asm	/^c010a149:	c3                   	ret    $/;"	l
c010a14a	obj/kernel.asm	/^c010a14a <do_kill>:$/;"	l
c010a14a	obj/kernel.asm	/^c010a14a:	55                   	push   %ebp$/;"	l
c010a14b	obj/kernel.asm	/^c010a14b:	89 e5                	mov    %esp,%ebp$/;"	l
c010a14d	obj/kernel.asm	/^c010a14d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a150	obj/kernel.asm	/^c010a150:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a153	obj/kernel.asm	/^c010a153:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a156	obj/kernel.asm	/^c010a156:	e8 b4 f0 ff ff       	call   c010920f <find_proc>$/;"	l
c010a15b	obj/kernel.asm	/^c010a15b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a15e	obj/kernel.asm	/^c010a15e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a161	obj/kernel.asm	/^c010a161:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a165	obj/kernel.asm	/^c010a165:	74 44                	je     c010a1ab <do_kill+0x61>$/;"	l
c010a167	obj/kernel.asm	/^c010a167:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a16a	obj/kernel.asm	/^c010a16a:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010a16d	obj/kernel.asm	/^c010a16d:	83 e0 01             	and    $0x1,%eax$/;"	l
c010a170	obj/kernel.asm	/^c010a170:	85 c0                	test   %eax,%eax$/;"	l
c010a172	obj/kernel.asm	/^c010a172:	75 30                	jne    c010a1a4 <do_kill+0x5a>$/;"	l
c010a174	obj/kernel.asm	/^c010a174:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a177	obj/kernel.asm	/^c010a177:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010a17a	obj/kernel.asm	/^c010a17a:	83 c8 01             	or     $0x1,%eax$/;"	l
c010a17d	obj/kernel.asm	/^c010a17d:	89 c2                	mov    %eax,%edx$/;"	l
c010a17f	obj/kernel.asm	/^c010a17f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a182	obj/kernel.asm	/^c010a182:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010a185	obj/kernel.asm	/^c010a185:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a188	obj/kernel.asm	/^c010a188:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c010a18b	obj/kernel.asm	/^c010a18b:	85 c0                	test   %eax,%eax$/;"	l
c010a18d	obj/kernel.asm	/^c010a18d:	79 0e                	jns    c010a19d <do_kill+0x53>$/;"	l
c010a18f	obj/kernel.asm	/^c010a18f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a192	obj/kernel.asm	/^c010a192:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a195	obj/kernel.asm	/^c010a195:	e8 2e 05 00 00       	call   c010a6c8 <wakeup_proc>$/;"	l
c010a19a	obj/kernel.asm	/^c010a19a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a19d	obj/kernel.asm	/^c010a19d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a1a2	obj/kernel.asm	/^c010a1a2:	eb 0c                	jmp    c010a1b0 <do_kill+0x66>$/;"	l
c010a1a4	obj/kernel.asm	/^c010a1a4:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax$/;"	l
c010a1a9	obj/kernel.asm	/^c010a1a9:	eb 05                	jmp    c010a1b0 <do_kill+0x66>$/;"	l
c010a1ab	obj/kernel.asm	/^c010a1ab:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a1b0	obj/kernel.asm	/^c010a1b0:	c9                   	leave  $/;"	l
c010a1b1	obj/kernel.asm	/^c010a1b1:	c3                   	ret    $/;"	l
c010a1b2	obj/kernel.asm	/^c010a1b2 <kernel_execve>:$/;"	l
c010a1b2	obj/kernel.asm	/^c010a1b2:	55                   	push   %ebp$/;"	l
c010a1b3	obj/kernel.asm	/^c010a1b3:	89 e5                	mov    %esp,%ebp$/;"	l
c010a1b5	obj/kernel.asm	/^c010a1b5:	57                   	push   %edi$/;"	l
c010a1b6	obj/kernel.asm	/^c010a1b6:	56                   	push   %esi$/;"	l
c010a1b7	obj/kernel.asm	/^c010a1b7:	53                   	push   %ebx$/;"	l
c010a1b8	obj/kernel.asm	/^c010a1b8:	83 ec 1c             	sub    $0x1c,%esp$/;"	l
c010a1bb	obj/kernel.asm	/^c010a1bb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a1be	obj/kernel.asm	/^c010a1be:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a1c1	obj/kernel.asm	/^c010a1c1:	e8 4c 0d 00 00       	call   c010af12 <strlen>$/;"	l
c010a1c6	obj/kernel.asm	/^c010a1c6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a1c9	obj/kernel.asm	/^c010a1c9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010a1cc	obj/kernel.asm	/^c010a1cc:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
c010a1d1	obj/kernel.asm	/^c010a1d1:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010a1d4	obj/kernel.asm	/^c010a1d4:	8b 4d e4             	mov    -0x1c(%ebp),%ecx$/;"	l
c010a1d7	obj/kernel.asm	/^c010a1d7:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
c010a1da	obj/kernel.asm	/^c010a1da:	8b 75 10             	mov    0x10(%ebp),%esi$/;"	l
c010a1dd	obj/kernel.asm	/^c010a1dd:	89 f7                	mov    %esi,%edi$/;"	l
c010a1df	obj/kernel.asm	/^c010a1df:	cd 80                	int    $0x80$/;"	l
c010a1e1	obj/kernel.asm	/^c010a1e1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010a1e4	obj/kernel.asm	/^c010a1e4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a1e7	obj/kernel.asm	/^c010a1e7:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
c010a1ea	obj/kernel.asm	/^c010a1ea:	5b                   	pop    %ebx$/;"	l
c010a1eb	obj/kernel.asm	/^c010a1eb:	5e                   	pop    %esi$/;"	l
c010a1ec	obj/kernel.asm	/^c010a1ec:	5f                   	pop    %edi$/;"	l
c010a1ed	obj/kernel.asm	/^c010a1ed:	5d                   	pop    %ebp$/;"	l
c010a1ee	obj/kernel.asm	/^c010a1ee:	c3                   	ret    $/;"	l
c010a1ef	obj/kernel.asm	/^c010a1ef <user_main>:$/;"	l
c010a1ef	obj/kernel.asm	/^c010a1ef:	55                   	push   %ebp$/;"	l
c010a1f0	obj/kernel.asm	/^c010a1f0:	89 e5                	mov    %esp,%ebp$/;"	l
c010a1f2	obj/kernel.asm	/^c010a1f2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a1f5	obj/kernel.asm	/^c010a1f5:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010a1fa	obj/kernel.asm	/^c010a1fa:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a1fd	obj/kernel.asm	/^c010a1fd:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a200	obj/kernel.asm	/^c010a200:	68 fa dd 10 c0       	push   $0xc010ddfa$/;"	l
c010a205	obj/kernel.asm	/^c010a205:	50                   	push   %eax$/;"	l
c010a206	obj/kernel.asm	/^c010a206:	68 00 de 10 c0       	push   $0xc010de00$/;"	l
c010a20b	obj/kernel.asm	/^c010a20b:	e8 6a 60 ff ff       	call   c010027a <cprintf>$/;"	l
c010a210	obj/kernel.asm	/^c010a210:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a213	obj/kernel.asm	/^c010a213:	b8 38 79 00 00       	mov    $0x7938,%eax$/;"	l
c010a218	obj/kernel.asm	/^c010a218:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a21b	obj/kernel.asm	/^c010a21b:	50                   	push   %eax$/;"	l
c010a21c	obj/kernel.asm	/^c010a21c:	68 74 1f 16 c0       	push   $0xc0161f74$/;"	l
c010a221	obj/kernel.asm	/^c010a221:	68 fa dd 10 c0       	push   $0xc010ddfa$/;"	l
c010a226	obj/kernel.asm	/^c010a226:	e8 87 ff ff ff       	call   c010a1b2 <kernel_execve>$/;"	l
c010a22b	obj/kernel.asm	/^c010a22b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a22e	obj/kernel.asm	/^c010a22e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a231	obj/kernel.asm	/^c010a231:	68 27 de 10 c0       	push   $0xc010de27$/;"	l
c010a236	obj/kernel.asm	/^c010a236:	68 41 03 00 00       	push   $0x341$/;"	l
c010a23b	obj/kernel.asm	/^c010a23b:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c010a240	obj/kernel.asm	/^c010a240:	e8 9a 61 ff ff       	call   c01003df <__panic>$/;"	l
c010a245	obj/kernel.asm	/^c010a245 <init_main>:$/;"	l
c010a245	obj/kernel.asm	/^c010a245:	55                   	push   %ebp$/;"	l
c010a246	obj/kernel.asm	/^c010a246:	89 e5                	mov    %esp,%ebp$/;"	l
c010a248	obj/kernel.asm	/^c010a248:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a24b	obj/kernel.asm	/^c010a24b:	e8 a5 97 ff ff       	call   c01039f5 <nr_free_pages>$/;"	l
c010a250	obj/kernel.asm	/^c010a250:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a253	obj/kernel.asm	/^c010a253:	e8 7a d0 ff ff       	call   c01072d2 <kallocated>$/;"	l
c010a258	obj/kernel.asm	/^c010a258:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a25b	obj/kernel.asm	/^c010a25b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a25e	obj/kernel.asm	/^c010a25e:	6a 00                	push   $0x0$/;"	l
c010a260	obj/kernel.asm	/^c010a260:	6a 00                	push   $0x0$/;"	l
c010a262	obj/kernel.asm	/^c010a262:	68 ef a1 10 c0       	push   $0xc010a1ef$/;"	l
c010a267	obj/kernel.asm	/^c010a267:	e8 13 f0 ff ff       	call   c010927f <kernel_thread>$/;"	l
c010a26c	obj/kernel.asm	/^c010a26c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a26f	obj/kernel.asm	/^c010a26f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a272	obj/kernel.asm	/^c010a272:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a276	obj/kernel.asm	/^c010a276:	7f 17                	jg     c010a28f <init_main+0x4a>$/;"	l
c010a278	obj/kernel.asm	/^c010a278:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a27b	obj/kernel.asm	/^c010a27b:	68 41 de 10 c0       	push   $0xc010de41$/;"	l
c010a280	obj/kernel.asm	/^c010a280:	68 4c 03 00 00       	push   $0x34c$/;"	l
c010a285	obj/kernel.asm	/^c010a285:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c010a28a	obj/kernel.asm	/^c010a28a:	e8 50 61 ff ff       	call   c01003df <__panic>$/;"	l
c010a28f	obj/kernel.asm	/^c010a28f:	eb 05                	jmp    c010a296 <init_main+0x51>$/;"	l
c010a291	obj/kernel.asm	/^c010a291:	e8 be 04 00 00       	call   c010a754 <schedule>$/;"	l
c010a296	obj/kernel.asm	/^c010a296:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a299	obj/kernel.asm	/^c010a299:	6a 00                	push   $0x0$/;"	l
c010a29b	obj/kernel.asm	/^c010a29b:	6a 00                	push   $0x0$/;"	l
c010a29d	obj/kernel.asm	/^c010a29d:	e8 1d fd ff ff       	call   c0109fbf <do_wait>$/;"	l
c010a2a2	obj/kernel.asm	/^c010a2a2:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a2a5	obj/kernel.asm	/^c010a2a5:	85 c0                	test   %eax,%eax$/;"	l
c010a2a7	obj/kernel.asm	/^c010a2a7:	74 e8                	je     c010a291 <init_main+0x4c>$/;"	l
c010a2a9	obj/kernel.asm	/^c010a2a9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a2ac	obj/kernel.asm	/^c010a2ac:	68 5c de 10 c0       	push   $0xc010de5c$/;"	l
c010a2b1	obj/kernel.asm	/^c010a2b1:	e8 c4 5f ff ff       	call   c010027a <cprintf>$/;"	l
c010a2b6	obj/kernel.asm	/^c010a2b6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a2b9	obj/kernel.asm	/^c010a2b9:	a1 44 ee 1a c0       	mov    0xc01aee44,%eax$/;"	l
c010a2be	obj/kernel.asm	/^c010a2be:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c010a2c1	obj/kernel.asm	/^c010a2c1:	85 c0                	test   %eax,%eax$/;"	l
c010a2c3	obj/kernel.asm	/^c010a2c3:	75 18                	jne    c010a2dd <init_main+0x98>$/;"	l
c010a2c5	obj/kernel.asm	/^c010a2c5:	a1 44 ee 1a c0       	mov    0xc01aee44,%eax$/;"	l
c010a2ca	obj/kernel.asm	/^c010a2ca:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c010a2cd	obj/kernel.asm	/^c010a2cd:	85 c0                	test   %eax,%eax$/;"	l
c010a2cf	obj/kernel.asm	/^c010a2cf:	75 0c                	jne    c010a2dd <init_main+0x98>$/;"	l
c010a2d1	obj/kernel.asm	/^c010a2d1:	a1 44 ee 1a c0       	mov    0xc01aee44,%eax$/;"	l
c010a2d6	obj/kernel.asm	/^c010a2d6:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010a2d9	obj/kernel.asm	/^c010a2d9:	85 c0                	test   %eax,%eax$/;"	l
c010a2db	obj/kernel.asm	/^c010a2db:	74 19                	je     c010a2f6 <init_main+0xb1>$/;"	l
c010a2dd	obj/kernel.asm	/^c010a2dd:	68 80 de 10 c0       	push   $0xc010de80$/;"	l
c010a2e2	obj/kernel.asm	/^c010a2e2:	68 a5 dc 10 c0       	push   $0xc010dca5$/;"	l
c010a2e7	obj/kernel.asm	/^c010a2e7:	68 54 03 00 00       	push   $0x354$/;"	l
c010a2ec	obj/kernel.asm	/^c010a2ec:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c010a2f1	obj/kernel.asm	/^c010a2f1:	e8 e9 60 ff ff       	call   c01003df <__panic>$/;"	l
c010a2f6	obj/kernel.asm	/^c010a2f6:	a1 80 0e 1b c0       	mov    0xc01b0e80,%eax$/;"	l
c010a2fb	obj/kernel.asm	/^c010a2fb:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a2fe	obj/kernel.asm	/^c010a2fe:	74 19                	je     c010a319 <init_main+0xd4>$/;"	l
c010a300	obj/kernel.asm	/^c010a300:	68 cb de 10 c0       	push   $0xc010decb$/;"	l
c010a305	obj/kernel.asm	/^c010a305:	68 a5 dc 10 c0       	push   $0xc010dca5$/;"	l
c010a30a	obj/kernel.asm	/^c010a30a:	68 55 03 00 00       	push   $0x355$/;"	l
c010a30f	obj/kernel.asm	/^c010a30f:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c010a314	obj/kernel.asm	/^c010a314:	e8 c6 60 ff ff       	call   c01003df <__panic>$/;"	l
c010a319	obj/kernel.asm	/^c010a319:	c7 45 e8 f8 0f 1b c0 	movl   $0xc01b0ff8,-0x18(%ebp)$/;"	l
c010a320	obj/kernel.asm	/^c010a320:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a323	obj/kernel.asm	/^c010a323:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a326	obj/kernel.asm	/^c010a326:	8b 15 44 ee 1a c0    	mov    0xc01aee44,%edx$/;"	l
c010a32c	obj/kernel.asm	/^c010a32c:	83 c2 58             	add    $0x58,%edx$/;"	l
c010a32f	obj/kernel.asm	/^c010a32f:	39 d0                	cmp    %edx,%eax$/;"	l
c010a331	obj/kernel.asm	/^c010a331:	74 19                	je     c010a34c <init_main+0x107>$/;"	l
c010a333	obj/kernel.asm	/^c010a333:	68 dc de 10 c0       	push   $0xc010dedc$/;"	l
c010a338	obj/kernel.asm	/^c010a338:	68 a5 dc 10 c0       	push   $0xc010dca5$/;"	l
c010a33d	obj/kernel.asm	/^c010a33d:	68 56 03 00 00       	push   $0x356$/;"	l
c010a342	obj/kernel.asm	/^c010a342:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c010a347	obj/kernel.asm	/^c010a347:	e8 93 60 ff ff       	call   c01003df <__panic>$/;"	l
c010a34c	obj/kernel.asm	/^c010a34c:	c7 45 e4 f8 0f 1b c0 	movl   $0xc01b0ff8,-0x1c(%ebp)$/;"	l
c010a353	obj/kernel.asm	/^c010a353:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a356	obj/kernel.asm	/^c010a356:	8b 00                	mov    (%eax),%eax$/;"	l
c010a358	obj/kernel.asm	/^c010a358:	8b 15 44 ee 1a c0    	mov    0xc01aee44,%edx$/;"	l
c010a35e	obj/kernel.asm	/^c010a35e:	83 c2 58             	add    $0x58,%edx$/;"	l
c010a361	obj/kernel.asm	/^c010a361:	39 d0                	cmp    %edx,%eax$/;"	l
c010a363	obj/kernel.asm	/^c010a363:	74 19                	je     c010a37e <init_main+0x139>$/;"	l
c010a365	obj/kernel.asm	/^c010a365:	68 0c df 10 c0       	push   $0xc010df0c$/;"	l
c010a36a	obj/kernel.asm	/^c010a36a:	68 a5 dc 10 c0       	push   $0xc010dca5$/;"	l
c010a36f	obj/kernel.asm	/^c010a36f:	68 57 03 00 00       	push   $0x357$/;"	l
c010a374	obj/kernel.asm	/^c010a374:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c010a379	obj/kernel.asm	/^c010a379:	e8 61 60 ff ff       	call   c01003df <__panic>$/;"	l
c010a37e	obj/kernel.asm	/^c010a37e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a381	obj/kernel.asm	/^c010a381:	68 3c df 10 c0       	push   $0xc010df3c$/;"	l
c010a386	obj/kernel.asm	/^c010a386:	e8 ef 5e ff ff       	call   c010027a <cprintf>$/;"	l
c010a38b	obj/kernel.asm	/^c010a38b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a38e	obj/kernel.asm	/^c010a38e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a393	obj/kernel.asm	/^c010a393:	c9                   	leave  $/;"	l
c010a394	obj/kernel.asm	/^c010a394:	c3                   	ret    $/;"	l
c010a395	obj/kernel.asm	/^c010a395 <proc_init>:$/;"	l
c010a395	obj/kernel.asm	/^c010a395:	55                   	push   %ebp$/;"	l
c010a396	obj/kernel.asm	/^c010a396:	89 e5                	mov    %esp,%ebp$/;"	l
c010a398	obj/kernel.asm	/^c010a398:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a39b	obj/kernel.asm	/^c010a39b:	c7 45 ec f8 0f 1b c0 	movl   $0xc01b0ff8,-0x14(%ebp)$/;"	l
c010a3a2	obj/kernel.asm	/^c010a3a2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a3a5	obj/kernel.asm	/^c010a3a5:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010a3a8	obj/kernel.asm	/^c010a3a8:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a3ab	obj/kernel.asm	/^c010a3ab:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a3ae	obj/kernel.asm	/^c010a3ae:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010a3b1	obj/kernel.asm	/^c010a3b1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a3b4	obj/kernel.asm	/^c010a3b4:	89 10                	mov    %edx,(%eax)$/;"	l
c010a3b6	obj/kernel.asm	/^c010a3b6:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010a3bd	obj/kernel.asm	/^c010a3bd:	eb 26                	jmp    c010a3e5 <proc_init+0x50>$/;"	l
c010a3bf	obj/kernel.asm	/^c010a3bf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a3c2	obj/kernel.asm	/^c010a3c2:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010a3c5	obj/kernel.asm	/^c010a3c5:	05 80 ee 1a c0       	add    $0xc01aee80,%eax$/;"	l
c010a3ca	obj/kernel.asm	/^c010a3ca:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a3cd	obj/kernel.asm	/^c010a3cd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a3d0	obj/kernel.asm	/^c010a3d0:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010a3d3	obj/kernel.asm	/^c010a3d3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a3d6	obj/kernel.asm	/^c010a3d6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a3d9	obj/kernel.asm	/^c010a3d9:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010a3dc	obj/kernel.asm	/^c010a3dc:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a3df	obj/kernel.asm	/^c010a3df:	89 10                	mov    %edx,(%eax)$/;"	l
c010a3e1	obj/kernel.asm	/^c010a3e1:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010a3e5	obj/kernel.asm	/^c010a3e5:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
c010a3ec	obj/kernel.asm	/^c010a3ec:	7e d1                	jle    c010a3bf <proc_init+0x2a>$/;"	l
c010a3ee	obj/kernel.asm	/^c010a3ee:	e8 68 e9 ff ff       	call   c0108d5b <alloc_proc>$/;"	l
c010a3f3	obj/kernel.asm	/^c010a3f3:	a3 40 ee 1a c0       	mov    %eax,0xc01aee40$/;"	l
c010a3f8	obj/kernel.asm	/^c010a3f8:	a1 40 ee 1a c0       	mov    0xc01aee40,%eax$/;"	l
c010a3fd	obj/kernel.asm	/^c010a3fd:	85 c0                	test   %eax,%eax$/;"	l
c010a3ff	obj/kernel.asm	/^c010a3ff:	75 17                	jne    c010a418 <proc_init+0x83>$/;"	l
c010a401	obj/kernel.asm	/^c010a401:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a404	obj/kernel.asm	/^c010a404:	68 55 df 10 c0       	push   $0xc010df55$/;"	l
c010a409	obj/kernel.asm	/^c010a409:	68 69 03 00 00       	push   $0x369$/;"	l
c010a40e	obj/kernel.asm	/^c010a40e:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c010a413	obj/kernel.asm	/^c010a413:	e8 c7 5f ff ff       	call   c01003df <__panic>$/;"	l
c010a418	obj/kernel.asm	/^c010a418:	a1 40 ee 1a c0       	mov    0xc01aee40,%eax$/;"	l
c010a41d	obj/kernel.asm	/^c010a41d:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c010a424	obj/kernel.asm	/^c010a424:	a1 40 ee 1a c0       	mov    0xc01aee40,%eax$/;"	l
c010a429	obj/kernel.asm	/^c010a429:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010a42f	obj/kernel.asm	/^c010a42f:	a1 40 ee 1a c0       	mov    0xc01aee40,%eax$/;"	l
c010a434	obj/kernel.asm	/^c010a434:	ba 00 a0 12 c0       	mov    $0xc012a000,%edx$/;"	l
c010a439	obj/kernel.asm	/^c010a439:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010a43c	obj/kernel.asm	/^c010a43c:	a1 40 ee 1a c0       	mov    0xc01aee40,%eax$/;"	l
c010a441	obj/kernel.asm	/^c010a441:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010a448	obj/kernel.asm	/^c010a448:	a1 40 ee 1a c0       	mov    0xc01aee40,%eax$/;"	l
c010a44d	obj/kernel.asm	/^c010a44d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a450	obj/kernel.asm	/^c010a450:	68 6d df 10 c0       	push   $0xc010df6d$/;"	l
c010a455	obj/kernel.asm	/^c010a455:	50                   	push   %eax$/;"	l
c010a456	obj/kernel.asm	/^c010a456:	e8 e5 e9 ff ff       	call   c0108e40 <set_proc_name>$/;"	l
c010a45b	obj/kernel.asm	/^c010a45b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a45e	obj/kernel.asm	/^c010a45e:	a1 80 0e 1b c0       	mov    0xc01b0e80,%eax$/;"	l
c010a463	obj/kernel.asm	/^c010a463:	83 c0 01             	add    $0x1,%eax$/;"	l
c010a466	obj/kernel.asm	/^c010a466:	a3 80 0e 1b c0       	mov    %eax,0xc01b0e80$/;"	l
c010a46b	obj/kernel.asm	/^c010a46b:	a1 40 ee 1a c0       	mov    0xc01aee40,%eax$/;"	l
c010a470	obj/kernel.asm	/^c010a470:	a3 48 ee 1a c0       	mov    %eax,0xc01aee48$/;"	l
c010a475	obj/kernel.asm	/^c010a475:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a478	obj/kernel.asm	/^c010a478:	6a 00                	push   $0x0$/;"	l
c010a47a	obj/kernel.asm	/^c010a47a:	6a 00                	push   $0x0$/;"	l
c010a47c	obj/kernel.asm	/^c010a47c:	68 45 a2 10 c0       	push   $0xc010a245$/;"	l
c010a481	obj/kernel.asm	/^c010a481:	e8 f9 ed ff ff       	call   c010927f <kernel_thread>$/;"	l
c010a486	obj/kernel.asm	/^c010a486:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a489	obj/kernel.asm	/^c010a489:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a48c	obj/kernel.asm	/^c010a48c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010a490	obj/kernel.asm	/^c010a490:	7f 17                	jg     c010a4a9 <proc_init+0x114>$/;"	l
c010a492	obj/kernel.asm	/^c010a492:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a495	obj/kernel.asm	/^c010a495:	68 72 df 10 c0       	push   $0xc010df72$/;"	l
c010a49a	obj/kernel.asm	/^c010a49a:	68 77 03 00 00       	push   $0x377$/;"	l
c010a49f	obj/kernel.asm	/^c010a49f:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c010a4a4	obj/kernel.asm	/^c010a4a4:	e8 36 5f ff ff       	call   c01003df <__panic>$/;"	l
c010a4a9	obj/kernel.asm	/^c010a4a9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a4ac	obj/kernel.asm	/^c010a4ac:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a4af	obj/kernel.asm	/^c010a4af:	e8 5b ed ff ff       	call   c010920f <find_proc>$/;"	l
c010a4b4	obj/kernel.asm	/^c010a4b4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a4b7	obj/kernel.asm	/^c010a4b7:	a3 44 ee 1a c0       	mov    %eax,0xc01aee44$/;"	l
c010a4bc	obj/kernel.asm	/^c010a4bc:	a1 44 ee 1a c0       	mov    0xc01aee44,%eax$/;"	l
c010a4c1	obj/kernel.asm	/^c010a4c1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a4c4	obj/kernel.asm	/^c010a4c4:	68 8c df 10 c0       	push   $0xc010df8c$/;"	l
c010a4c9	obj/kernel.asm	/^c010a4c9:	50                   	push   %eax$/;"	l
c010a4ca	obj/kernel.asm	/^c010a4ca:	e8 71 e9 ff ff       	call   c0108e40 <set_proc_name>$/;"	l
c010a4cf	obj/kernel.asm	/^c010a4cf:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a4d2	obj/kernel.asm	/^c010a4d2:	a1 40 ee 1a c0       	mov    0xc01aee40,%eax$/;"	l
c010a4d7	obj/kernel.asm	/^c010a4d7:	85 c0                	test   %eax,%eax$/;"	l
c010a4d9	obj/kernel.asm	/^c010a4d9:	74 0c                	je     c010a4e7 <proc_init+0x152>$/;"	l
c010a4db	obj/kernel.asm	/^c010a4db:	a1 40 ee 1a c0       	mov    0xc01aee40,%eax$/;"	l
c010a4e0	obj/kernel.asm	/^c010a4e0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a4e3	obj/kernel.asm	/^c010a4e3:	85 c0                	test   %eax,%eax$/;"	l
c010a4e5	obj/kernel.asm	/^c010a4e5:	74 19                	je     c010a500 <proc_init+0x16b>$/;"	l
c010a4e7	obj/kernel.asm	/^c010a4e7:	68 94 df 10 c0       	push   $0xc010df94$/;"	l
c010a4ec	obj/kernel.asm	/^c010a4ec:	68 a5 dc 10 c0       	push   $0xc010dca5$/;"	l
c010a4f1	obj/kernel.asm	/^c010a4f1:	68 7d 03 00 00       	push   $0x37d$/;"	l
c010a4f6	obj/kernel.asm	/^c010a4f6:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c010a4fb	obj/kernel.asm	/^c010a4fb:	e8 df 5e ff ff       	call   c01003df <__panic>$/;"	l
c010a500	obj/kernel.asm	/^c010a500:	a1 44 ee 1a c0       	mov    0xc01aee44,%eax$/;"	l
c010a505	obj/kernel.asm	/^c010a505:	85 c0                	test   %eax,%eax$/;"	l
c010a507	obj/kernel.asm	/^c010a507:	74 0d                	je     c010a516 <proc_init+0x181>$/;"	l
c010a509	obj/kernel.asm	/^c010a509:	a1 44 ee 1a c0       	mov    0xc01aee44,%eax$/;"	l
c010a50e	obj/kernel.asm	/^c010a50e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a511	obj/kernel.asm	/^c010a511:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a514	obj/kernel.asm	/^c010a514:	74 19                	je     c010a52f <proc_init+0x19a>$/;"	l
c010a516	obj/kernel.asm	/^c010a516:	68 bc df 10 c0       	push   $0xc010dfbc$/;"	l
c010a51b	obj/kernel.asm	/^c010a51b:	68 a5 dc 10 c0       	push   $0xc010dca5$/;"	l
c010a520	obj/kernel.asm	/^c010a520:	68 7e 03 00 00       	push   $0x37e$/;"	l
c010a525	obj/kernel.asm	/^c010a525:	68 d8 db 10 c0       	push   $0xc010dbd8$/;"	l
c010a52a	obj/kernel.asm	/^c010a52a:	e8 b0 5e ff ff       	call   c01003df <__panic>$/;"	l
c010a52f	obj/kernel.asm	/^c010a52f:	c9                   	leave  $/;"	l
c010a530	obj/kernel.asm	/^c010a530:	c3                   	ret    $/;"	l
c010a531	obj/kernel.asm	/^c010a531 <cpu_idle>:$/;"	l
c010a531	obj/kernel.asm	/^c010a531:	55                   	push   %ebp$/;"	l
c010a532	obj/kernel.asm	/^c010a532:	89 e5                	mov    %esp,%ebp$/;"	l
c010a534	obj/kernel.asm	/^c010a534:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a537	obj/kernel.asm	/^c010a537:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010a53c	obj/kernel.asm	/^c010a53c:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a53f	obj/kernel.asm	/^c010a53f:	85 c0                	test   %eax,%eax$/;"	l
c010a541	obj/kernel.asm	/^c010a541:	74 05                	je     c010a548 <cpu_idle+0x17>$/;"	l
c010a543	obj/kernel.asm	/^c010a543:	e8 0c 02 00 00       	call   c010a754 <schedule>$/;"	l
c010a548	obj/kernel.asm	/^c010a548:	eb ed                	jmp    c010a537 <cpu_idle+0x6>$/;"	l
c010a54a	obj/kernel.asm	/^c010a54a <lab6_set_priority>:$/;"	l
c010a54a	obj/kernel.asm	/^c010a54a:	55                   	push   %ebp$/;"	l
c010a54b	obj/kernel.asm	/^c010a54b:	89 e5                	mov    %esp,%ebp$/;"	l
c010a54d	obj/kernel.asm	/^c010a54d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010a551	obj/kernel.asm	/^c010a551:	75 11                	jne    c010a564 <lab6_set_priority+0x1a>$/;"	l
c010a553	obj/kernel.asm	/^c010a553:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010a558	obj/kernel.asm	/^c010a558:	c7 80 9c 00 00 00 01 	movl   $0x1,0x9c(%eax)$/;"	l
c010a55f	obj/kernel.asm	/^c010a55f:	00 00 00 $/;"	l
c010a562	obj/kernel.asm	/^c010a562:	eb 0e                	jmp    c010a572 <lab6_set_priority+0x28>$/;"	l
c010a564	obj/kernel.asm	/^c010a564:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010a569	obj/kernel.asm	/^c010a569:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010a56c	obj/kernel.asm	/^c010a56c:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010a572	obj/kernel.asm	/^c010a572:	5d                   	pop    %ebp$/;"	l
c010a573	obj/kernel.asm	/^c010a573:	c3                   	ret    $/;"	l
c010a574	obj/kernel.asm	/^c010a574 <__intr_save>:$/;"	l
c010a574	obj/kernel.asm	/^c010a574:	55                   	push   %ebp$/;"	l
c010a575	obj/kernel.asm	/^c010a575:	89 e5                	mov    %esp,%ebp$/;"	l
c010a577	obj/kernel.asm	/^c010a577:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a57a	obj/kernel.asm	/^c010a57a:	9c                   	pushf  $/;"	l
c010a57b	obj/kernel.asm	/^c010a57b:	58                   	pop    %eax$/;"	l
c010a57c	obj/kernel.asm	/^c010a57c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a57f	obj/kernel.asm	/^c010a57f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a582	obj/kernel.asm	/^c010a582:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010a587	obj/kernel.asm	/^c010a587:	85 c0                	test   %eax,%eax$/;"	l
c010a589	obj/kernel.asm	/^c010a589:	74 0c                	je     c010a597 <__intr_save+0x23>$/;"	l
c010a58b	obj/kernel.asm	/^c010a58b:	e8 12 7b ff ff       	call   c01020a2 <intr_disable>$/;"	l
c010a590	obj/kernel.asm	/^c010a590:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010a595	obj/kernel.asm	/^c010a595:	eb 05                	jmp    c010a59c <__intr_save+0x28>$/;"	l
c010a597	obj/kernel.asm	/^c010a597:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a59c	obj/kernel.asm	/^c010a59c:	c9                   	leave  $/;"	l
c010a59d	obj/kernel.asm	/^c010a59d:	c3                   	ret    $/;"	l
c010a59e	obj/kernel.asm	/^c010a59e <__intr_restore>:$/;"	l
c010a59e	obj/kernel.asm	/^c010a59e:	55                   	push   %ebp$/;"	l
c010a59f	obj/kernel.asm	/^c010a59f:	89 e5                	mov    %esp,%ebp$/;"	l
c010a5a1	obj/kernel.asm	/^c010a5a1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a5a4	obj/kernel.asm	/^c010a5a4:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010a5a8	obj/kernel.asm	/^c010a5a8:	74 05                	je     c010a5af <__intr_restore+0x11>$/;"	l
c010a5aa	obj/kernel.asm	/^c010a5aa:	e8 ed 7a ff ff       	call   c010209c <intr_enable>$/;"	l
c010a5af	obj/kernel.asm	/^c010a5af:	c9                   	leave  $/;"	l
c010a5b0	obj/kernel.asm	/^c010a5b0:	c3                   	ret    $/;"	l
c010a5b1	obj/kernel.asm	/^c010a5b1 <sched_class_enqueue>:$/;"	l
c010a5b1	obj/kernel.asm	/^c010a5b1:	55                   	push   %ebp$/;"	l
c010a5b2	obj/kernel.asm	/^c010a5b2:	89 e5                	mov    %esp,%ebp$/;"	l
c010a5b4	obj/kernel.asm	/^c010a5b4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a5b7	obj/kernel.asm	/^c010a5b7:	a1 40 ee 1a c0       	mov    0xc01aee40,%eax$/;"	l
c010a5bc	obj/kernel.asm	/^c010a5bc:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010a5bf	obj/kernel.asm	/^c010a5bf:	74 1a                	je     c010a5db <sched_class_enqueue+0x2a>$/;"	l
c010a5c1	obj/kernel.asm	/^c010a5c1:	a1 9c 0e 1b c0       	mov    0xc01b0e9c,%eax$/;"	l
c010a5c6	obj/kernel.asm	/^c010a5c6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a5c9	obj/kernel.asm	/^c010a5c9:	8b 15 a0 0e 1b c0    	mov    0xc01b0ea0,%edx$/;"	l
c010a5cf	obj/kernel.asm	/^c010a5cf:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a5d2	obj/kernel.asm	/^c010a5d2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a5d5	obj/kernel.asm	/^c010a5d5:	52                   	push   %edx$/;"	l
c010a5d6	obj/kernel.asm	/^c010a5d6:	ff d0                	call   *%eax$/;"	l
c010a5d8	obj/kernel.asm	/^c010a5d8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a5db	obj/kernel.asm	/^c010a5db:	c9                   	leave  $/;"	l
c010a5dc	obj/kernel.asm	/^c010a5dc:	c3                   	ret    $/;"	l
c010a5dd	obj/kernel.asm	/^c010a5dd <sched_class_dequeue>:$/;"	l
c010a5dd	obj/kernel.asm	/^c010a5dd:	55                   	push   %ebp$/;"	l
c010a5de	obj/kernel.asm	/^c010a5de:	89 e5                	mov    %esp,%ebp$/;"	l
c010a5e0	obj/kernel.asm	/^c010a5e0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a5e3	obj/kernel.asm	/^c010a5e3:	a1 9c 0e 1b c0       	mov    0xc01b0e9c,%eax$/;"	l
c010a5e8	obj/kernel.asm	/^c010a5e8:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a5eb	obj/kernel.asm	/^c010a5eb:	8b 15 a0 0e 1b c0    	mov    0xc01b0ea0,%edx$/;"	l
c010a5f1	obj/kernel.asm	/^c010a5f1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a5f4	obj/kernel.asm	/^c010a5f4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a5f7	obj/kernel.asm	/^c010a5f7:	52                   	push   %edx$/;"	l
c010a5f8	obj/kernel.asm	/^c010a5f8:	ff d0                	call   *%eax$/;"	l
c010a5fa	obj/kernel.asm	/^c010a5fa:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a5fd	obj/kernel.asm	/^c010a5fd:	c9                   	leave  $/;"	l
c010a5fe	obj/kernel.asm	/^c010a5fe:	c3                   	ret    $/;"	l
c010a5ff	obj/kernel.asm	/^c010a5ff <sched_class_pick_next>:$/;"	l
c010a5ff	obj/kernel.asm	/^c010a5ff:	55                   	push   %ebp$/;"	l
c010a600	obj/kernel.asm	/^c010a600:	89 e5                	mov    %esp,%ebp$/;"	l
c010a602	obj/kernel.asm	/^c010a602:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a605	obj/kernel.asm	/^c010a605:	a1 9c 0e 1b c0       	mov    0xc01b0e9c,%eax$/;"	l
c010a60a	obj/kernel.asm	/^c010a60a:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a60d	obj/kernel.asm	/^c010a60d:	8b 15 a0 0e 1b c0    	mov    0xc01b0ea0,%edx$/;"	l
c010a613	obj/kernel.asm	/^c010a613:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a616	obj/kernel.asm	/^c010a616:	52                   	push   %edx$/;"	l
c010a617	obj/kernel.asm	/^c010a617:	ff d0                	call   *%eax$/;"	l
c010a619	obj/kernel.asm	/^c010a619:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a61c	obj/kernel.asm	/^c010a61c:	c9                   	leave  $/;"	l
c010a61d	obj/kernel.asm	/^c010a61d:	c3                   	ret    $/;"	l
c010a61e	obj/kernel.asm	/^c010a61e <sched_class_proc_tick>:$/;"	l
c010a61e	obj/kernel.asm	/^c010a61e:	55                   	push   %ebp$/;"	l
c010a61f	obj/kernel.asm	/^c010a61f:	89 e5                	mov    %esp,%ebp$/;"	l
c010a621	obj/kernel.asm	/^c010a621:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a624	obj/kernel.asm	/^c010a624:	a1 40 ee 1a c0       	mov    0xc01aee40,%eax$/;"	l
c010a629	obj/kernel.asm	/^c010a629:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010a62c	obj/kernel.asm	/^c010a62c:	74 1c                	je     c010a64a <sched_class_proc_tick+0x2c>$/;"	l
c010a62e	obj/kernel.asm	/^c010a62e:	a1 9c 0e 1b c0       	mov    0xc01b0e9c,%eax$/;"	l
c010a633	obj/kernel.asm	/^c010a633:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a636	obj/kernel.asm	/^c010a636:	8b 15 a0 0e 1b c0    	mov    0xc01b0ea0,%edx$/;"	l
c010a63c	obj/kernel.asm	/^c010a63c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a63f	obj/kernel.asm	/^c010a63f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a642	obj/kernel.asm	/^c010a642:	52                   	push   %edx$/;"	l
c010a643	obj/kernel.asm	/^c010a643:	ff d0                	call   *%eax$/;"	l
c010a645	obj/kernel.asm	/^c010a645:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a648	obj/kernel.asm	/^c010a648:	eb 0a                	jmp    c010a654 <sched_class_proc_tick+0x36>$/;"	l
c010a64a	obj/kernel.asm	/^c010a64a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a64d	obj/kernel.asm	/^c010a64d:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010a654	obj/kernel.asm	/^c010a654:	c9                   	leave  $/;"	l
c010a655	obj/kernel.asm	/^c010a655:	c3                   	ret    $/;"	l
c010a656	obj/kernel.asm	/^c010a656 <sched_init>:$/;"	l
c010a656	obj/kernel.asm	/^c010a656:	55                   	push   %ebp$/;"	l
c010a657	obj/kernel.asm	/^c010a657:	89 e5                	mov    %esp,%ebp$/;"	l
c010a659	obj/kernel.asm	/^c010a659:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a65c	obj/kernel.asm	/^c010a65c:	c7 45 f4 94 0e 1b c0 	movl   $0xc01b0e94,-0xc(%ebp)$/;"	l
c010a663	obj/kernel.asm	/^c010a663:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a666	obj/kernel.asm	/^c010a666:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a669	obj/kernel.asm	/^c010a669:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a66c	obj/kernel.asm	/^c010a66c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a66f	obj/kernel.asm	/^c010a66f:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010a672	obj/kernel.asm	/^c010a672:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a675	obj/kernel.asm	/^c010a675:	89 10                	mov    %edx,(%eax)$/;"	l
c010a677	obj/kernel.asm	/^c010a677:	c7 05 9c 0e 1b c0 e8 	movl   $0xc012cae8,0xc01b0e9c$/;"	l
c010a67e	obj/kernel.asm	/^c010a67e:	ca 12 c0 $/;"	l
c010a681	obj/kernel.asm	/^c010a681:	c7 05 a0 0e 1b c0 a4 	movl   $0xc01b0ea4,0xc01b0ea0$/;"	l
c010a688	obj/kernel.asm	/^c010a688:	0e 1b c0 $/;"	l
c010a68b	obj/kernel.asm	/^c010a68b:	a1 a0 0e 1b c0       	mov    0xc01b0ea0,%eax$/;"	l
c010a690	obj/kernel.asm	/^c010a690:	c7 40 0c 14 00 00 00 	movl   $0x14,0xc(%eax)$/;"	l
c010a697	obj/kernel.asm	/^c010a697:	a1 9c 0e 1b c0       	mov    0xc01b0e9c,%eax$/;"	l
c010a69c	obj/kernel.asm	/^c010a69c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a69f	obj/kernel.asm	/^c010a69f:	8b 15 a0 0e 1b c0    	mov    0xc01b0ea0,%edx$/;"	l
c010a6a5	obj/kernel.asm	/^c010a6a5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a6a8	obj/kernel.asm	/^c010a6a8:	52                   	push   %edx$/;"	l
c010a6a9	obj/kernel.asm	/^c010a6a9:	ff d0                	call   *%eax$/;"	l
c010a6ab	obj/kernel.asm	/^c010a6ab:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a6ae	obj/kernel.asm	/^c010a6ae:	a1 9c 0e 1b c0       	mov    0xc01b0e9c,%eax$/;"	l
c010a6b3	obj/kernel.asm	/^c010a6b3:	8b 00                	mov    (%eax),%eax$/;"	l
c010a6b5	obj/kernel.asm	/^c010a6b5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a6b8	obj/kernel.asm	/^c010a6b8:	50                   	push   %eax$/;"	l
c010a6b9	obj/kernel.asm	/^c010a6b9:	68 e4 df 10 c0       	push   $0xc010dfe4$/;"	l
c010a6be	obj/kernel.asm	/^c010a6be:	e8 b7 5b ff ff       	call   c010027a <cprintf>$/;"	l
c010a6c3	obj/kernel.asm	/^c010a6c3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a6c6	obj/kernel.asm	/^c010a6c6:	c9                   	leave  $/;"	l
c010a6c7	obj/kernel.asm	/^c010a6c7:	c3                   	ret    $/;"	l
c010a6c8	obj/kernel.asm	/^c010a6c8 <wakeup_proc>:$/;"	l
c010a6c8	obj/kernel.asm	/^c010a6c8:	55                   	push   %ebp$/;"	l
c010a6c9	obj/kernel.asm	/^c010a6c9:	89 e5                	mov    %esp,%ebp$/;"	l
c010a6cb	obj/kernel.asm	/^c010a6cb:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a6ce	obj/kernel.asm	/^c010a6ce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a6d1	obj/kernel.asm	/^c010a6d1:	8b 00                	mov    (%eax),%eax$/;"	l
c010a6d3	obj/kernel.asm	/^c010a6d3:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a6d6	obj/kernel.asm	/^c010a6d6:	75 16                	jne    c010a6ee <wakeup_proc+0x26>$/;"	l
c010a6d8	obj/kernel.asm	/^c010a6d8:	68 f5 df 10 c0       	push   $0xc010dff5$/;"	l
c010a6dd	obj/kernel.asm	/^c010a6dd:	68 10 e0 10 c0       	push   $0xc010e010$/;"	l
c010a6e2	obj/kernel.asm	/^c010a6e2:	6a 3c                	push   $0x3c$/;"	l
c010a6e4	obj/kernel.asm	/^c010a6e4:	68 25 e0 10 c0       	push   $0xc010e025$/;"	l
c010a6e9	obj/kernel.asm	/^c010a6e9:	e8 f1 5c ff ff       	call   c01003df <__panic>$/;"	l
c010a6ee	obj/kernel.asm	/^c010a6ee:	e8 81 fe ff ff       	call   c010a574 <__intr_save>$/;"	l
c010a6f3	obj/kernel.asm	/^c010a6f3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a6f6	obj/kernel.asm	/^c010a6f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a6f9	obj/kernel.asm	/^c010a6f9:	8b 00                	mov    (%eax),%eax$/;"	l
c010a6fb	obj/kernel.asm	/^c010a6fb:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a6fe	obj/kernel.asm	/^c010a6fe:	74 2d                	je     c010a72d <wakeup_proc+0x65>$/;"	l
c010a700	obj/kernel.asm	/^c010a700:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a703	obj/kernel.asm	/^c010a703:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010a709	obj/kernel.asm	/^c010a709:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a70c	obj/kernel.asm	/^c010a70c:	c7 40 6c 00 00 00 00 	movl   $0x0,0x6c(%eax)$/;"	l
c010a713	obj/kernel.asm	/^c010a713:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010a718	obj/kernel.asm	/^c010a718:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010a71b	obj/kernel.asm	/^c010a71b:	74 27                	je     c010a744 <wakeup_proc+0x7c>$/;"	l
c010a71d	obj/kernel.asm	/^c010a71d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a720	obj/kernel.asm	/^c010a720:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a723	obj/kernel.asm	/^c010a723:	e8 89 fe ff ff       	call   c010a5b1 <sched_class_enqueue>$/;"	l
c010a728	obj/kernel.asm	/^c010a728:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a72b	obj/kernel.asm	/^c010a72b:	eb 17                	jmp    c010a744 <wakeup_proc+0x7c>$/;"	l
c010a72d	obj/kernel.asm	/^c010a72d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a730	obj/kernel.asm	/^c010a730:	68 3b e0 10 c0       	push   $0xc010e03b$/;"	l
c010a735	obj/kernel.asm	/^c010a735:	6a 48                	push   $0x48$/;"	l
c010a737	obj/kernel.asm	/^c010a737:	68 25 e0 10 c0       	push   $0xc010e025$/;"	l
c010a73c	obj/kernel.asm	/^c010a73c:	e8 0b 5d ff ff       	call   c010044c <__warn>$/;"	l
c010a741	obj/kernel.asm	/^c010a741:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a744	obj/kernel.asm	/^c010a744:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a747	obj/kernel.asm	/^c010a747:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a74a	obj/kernel.asm	/^c010a74a:	e8 4f fe ff ff       	call   c010a59e <__intr_restore>$/;"	l
c010a74f	obj/kernel.asm	/^c010a74f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a752	obj/kernel.asm	/^c010a752:	c9                   	leave  $/;"	l
c010a753	obj/kernel.asm	/^c010a753:	c3                   	ret    $/;"	l
c010a754	obj/kernel.asm	/^c010a754 <schedule>:$/;"	l
c010a754	obj/kernel.asm	/^c010a754:	55                   	push   %ebp$/;"	l
c010a755	obj/kernel.asm	/^c010a755:	89 e5                	mov    %esp,%ebp$/;"	l
c010a757	obj/kernel.asm	/^c010a757:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a75a	obj/kernel.asm	/^c010a75a:	e8 15 fe ff ff       	call   c010a574 <__intr_save>$/;"	l
c010a75f	obj/kernel.asm	/^c010a75f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a762	obj/kernel.asm	/^c010a762:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010a767	obj/kernel.asm	/^c010a767:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010a76e	obj/kernel.asm	/^c010a76e:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010a773	obj/kernel.asm	/^c010a773:	8b 00                	mov    (%eax),%eax$/;"	l
c010a775	obj/kernel.asm	/^c010a775:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a778	obj/kernel.asm	/^c010a778:	75 11                	jne    c010a78b <schedule+0x37>$/;"	l
c010a77a	obj/kernel.asm	/^c010a77a:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010a77f	obj/kernel.asm	/^c010a77f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a782	obj/kernel.asm	/^c010a782:	50                   	push   %eax$/;"	l
c010a783	obj/kernel.asm	/^c010a783:	e8 29 fe ff ff       	call   c010a5b1 <sched_class_enqueue>$/;"	l
c010a788	obj/kernel.asm	/^c010a788:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a78b	obj/kernel.asm	/^c010a78b:	e8 6f fe ff ff       	call   c010a5ff <sched_class_pick_next>$/;"	l
c010a790	obj/kernel.asm	/^c010a790:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a793	obj/kernel.asm	/^c010a793:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a797	obj/kernel.asm	/^c010a797:	74 0e                	je     c010a7a7 <schedule+0x53>$/;"	l
c010a799	obj/kernel.asm	/^c010a799:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a79c	obj/kernel.asm	/^c010a79c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a79f	obj/kernel.asm	/^c010a79f:	e8 39 fe ff ff       	call   c010a5dd <sched_class_dequeue>$/;"	l
c010a7a4	obj/kernel.asm	/^c010a7a4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a7a7	obj/kernel.asm	/^c010a7a7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a7ab	obj/kernel.asm	/^c010a7ab:	75 08                	jne    c010a7b5 <schedule+0x61>$/;"	l
c010a7ad	obj/kernel.asm	/^c010a7ad:	a1 40 ee 1a c0       	mov    0xc01aee40,%eax$/;"	l
c010a7b2	obj/kernel.asm	/^c010a7b2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a7b5	obj/kernel.asm	/^c010a7b5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a7b8	obj/kernel.asm	/^c010a7b8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a7bb	obj/kernel.asm	/^c010a7bb:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010a7be	obj/kernel.asm	/^c010a7be:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a7c1	obj/kernel.asm	/^c010a7c1:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010a7c4	obj/kernel.asm	/^c010a7c4:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010a7c9	obj/kernel.asm	/^c010a7c9:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010a7cc	obj/kernel.asm	/^c010a7cc:	74 0e                	je     c010a7dc <schedule+0x88>$/;"	l
c010a7ce	obj/kernel.asm	/^c010a7ce:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a7d1	obj/kernel.asm	/^c010a7d1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a7d4	obj/kernel.asm	/^c010a7d4:	e8 f1 e8 ff ff       	call   c01090ca <proc_run>$/;"	l
c010a7d9	obj/kernel.asm	/^c010a7d9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a7dc	obj/kernel.asm	/^c010a7dc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a7df	obj/kernel.asm	/^c010a7df:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a7e2	obj/kernel.asm	/^c010a7e2:	e8 b7 fd ff ff       	call   c010a59e <__intr_restore>$/;"	l
c010a7e7	obj/kernel.asm	/^c010a7e7:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a7ea	obj/kernel.asm	/^c010a7ea:	c9                   	leave  $/;"	l
c010a7eb	obj/kernel.asm	/^c010a7eb:	c3                   	ret    $/;"	l
c010a7ec	obj/kernel.asm	/^c010a7ec <add_timer>:$/;"	l
c010a7ec	obj/kernel.asm	/^c010a7ec:	55                   	push   %ebp$/;"	l
c010a7ed	obj/kernel.asm	/^c010a7ed:	89 e5                	mov    %esp,%ebp$/;"	l
c010a7ef	obj/kernel.asm	/^c010a7ef:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010a7f2	obj/kernel.asm	/^c010a7f2:	e8 7d fd ff ff       	call   c010a574 <__intr_save>$/;"	l
c010a7f7	obj/kernel.asm	/^c010a7f7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a7fa	obj/kernel.asm	/^c010a7fa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a7fd	obj/kernel.asm	/^c010a7fd:	8b 00                	mov    (%eax),%eax$/;"	l
c010a7ff	obj/kernel.asm	/^c010a7ff:	85 c0                	test   %eax,%eax$/;"	l
c010a801	obj/kernel.asm	/^c010a801:	74 0a                	je     c010a80d <add_timer+0x21>$/;"	l
c010a803	obj/kernel.asm	/^c010a803:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a806	obj/kernel.asm	/^c010a806:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a809	obj/kernel.asm	/^c010a809:	85 c0                	test   %eax,%eax$/;"	l
c010a80b	obj/kernel.asm	/^c010a80b:	75 16                	jne    c010a823 <add_timer+0x37>$/;"	l
c010a80d	obj/kernel.asm	/^c010a80d:	68 58 e0 10 c0       	push   $0xc010e058$/;"	l
c010a812	obj/kernel.asm	/^c010a812:	68 10 e0 10 c0       	push   $0xc010e010$/;"	l
c010a817	obj/kernel.asm	/^c010a817:	6a 6c                	push   $0x6c$/;"	l
c010a819	obj/kernel.asm	/^c010a819:	68 25 e0 10 c0       	push   $0xc010e025$/;"	l
c010a81e	obj/kernel.asm	/^c010a81e:	e8 bc 5b ff ff       	call   c01003df <__panic>$/;"	l
c010a823	obj/kernel.asm	/^c010a823:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a826	obj/kernel.asm	/^c010a826:	83 c0 08             	add    $0x8,%eax$/;"	l
c010a829	obj/kernel.asm	/^c010a829:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a82c	obj/kernel.asm	/^c010a82c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a82f	obj/kernel.asm	/^c010a82f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a832	obj/kernel.asm	/^c010a832:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010a835	obj/kernel.asm	/^c010a835:	0f 94 c0             	sete   %al$/;"	l
c010a838	obj/kernel.asm	/^c010a838:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010a83b	obj/kernel.asm	/^c010a83b:	85 c0                	test   %eax,%eax$/;"	l
c010a83d	obj/kernel.asm	/^c010a83d:	75 16                	jne    c010a855 <add_timer+0x69>$/;"	l
c010a83f	obj/kernel.asm	/^c010a83f:	68 84 e0 10 c0       	push   $0xc010e084$/;"	l
c010a844	obj/kernel.asm	/^c010a844:	68 10 e0 10 c0       	push   $0xc010e010$/;"	l
c010a849	obj/kernel.asm	/^c010a849:	6a 6d                	push   $0x6d$/;"	l
c010a84b	obj/kernel.asm	/^c010a84b:	68 25 e0 10 c0       	push   $0xc010e025$/;"	l
c010a850	obj/kernel.asm	/^c010a850:	e8 8a 5b ff ff       	call   c01003df <__panic>$/;"	l
c010a855	obj/kernel.asm	/^c010a855:	c7 45 e4 94 0e 1b c0 	movl   $0xc01b0e94,-0x1c(%ebp)$/;"	l
c010a85c	obj/kernel.asm	/^c010a85c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a85f	obj/kernel.asm	/^c010a85f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a862	obj/kernel.asm	/^c010a862:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a865	obj/kernel.asm	/^c010a865:	eb 4a                	jmp    c010a8b1 <add_timer+0xc5>$/;"	l
c010a867	obj/kernel.asm	/^c010a867:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a86a	obj/kernel.asm	/^c010a86a:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010a86d	obj/kernel.asm	/^c010a86d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a870	obj/kernel.asm	/^c010a870:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a873	obj/kernel.asm	/^c010a873:	8b 10                	mov    (%eax),%edx$/;"	l
c010a875	obj/kernel.asm	/^c010a875:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a878	obj/kernel.asm	/^c010a878:	8b 00                	mov    (%eax),%eax$/;"	l
c010a87a	obj/kernel.asm	/^c010a87a:	39 c2                	cmp    %eax,%edx$/;"	l
c010a87c	obj/kernel.asm	/^c010a87c:	73 13                	jae    c010a891 <add_timer+0xa5>$/;"	l
c010a87e	obj/kernel.asm	/^c010a87e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a881	obj/kernel.asm	/^c010a881:	8b 10                	mov    (%eax),%edx$/;"	l
c010a883	obj/kernel.asm	/^c010a883:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a886	obj/kernel.asm	/^c010a886:	8b 00                	mov    (%eax),%eax$/;"	l
c010a888	obj/kernel.asm	/^c010a888:	29 c2                	sub    %eax,%edx$/;"	l
c010a88a	obj/kernel.asm	/^c010a88a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a88d	obj/kernel.asm	/^c010a88d:	89 10                	mov    %edx,(%eax)$/;"	l
c010a88f	obj/kernel.asm	/^c010a88f:	eb 29                	jmp    c010a8ba <add_timer+0xce>$/;"	l
c010a891	obj/kernel.asm	/^c010a891:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a894	obj/kernel.asm	/^c010a894:	8b 10                	mov    (%eax),%edx$/;"	l
c010a896	obj/kernel.asm	/^c010a896:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a899	obj/kernel.asm	/^c010a899:	8b 00                	mov    (%eax),%eax$/;"	l
c010a89b	obj/kernel.asm	/^c010a89b:	29 c2                	sub    %eax,%edx$/;"	l
c010a89d	obj/kernel.asm	/^c010a89d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a8a0	obj/kernel.asm	/^c010a8a0:	89 10                	mov    %edx,(%eax)$/;"	l
c010a8a2	obj/kernel.asm	/^c010a8a2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a8a5	obj/kernel.asm	/^c010a8a5:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010a8a8	obj/kernel.asm	/^c010a8a8:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a8ab	obj/kernel.asm	/^c010a8ab:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a8ae	obj/kernel.asm	/^c010a8ae:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a8b1	obj/kernel.asm	/^c010a8b1:	81 7d f4 94 0e 1b c0 	cmpl   $0xc01b0e94,-0xc(%ebp)$/;"	l
c010a8b8	obj/kernel.asm	/^c010a8b8:	75 ad                	jne    c010a867 <add_timer+0x7b>$/;"	l
c010a8ba	obj/kernel.asm	/^c010a8ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a8bd	obj/kernel.asm	/^c010a8bd:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
c010a8c0	obj/kernel.asm	/^c010a8c0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a8c3	obj/kernel.asm	/^c010a8c3:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010a8c6	obj/kernel.asm	/^c010a8c6:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010a8c9	obj/kernel.asm	/^c010a8c9:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a8cc	obj/kernel.asm	/^c010a8cc:	8b 00                	mov    (%eax),%eax$/;"	l
c010a8ce	obj/kernel.asm	/^c010a8ce:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010a8d1	obj/kernel.asm	/^c010a8d1:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010a8d4	obj/kernel.asm	/^c010a8d4:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010a8d7	obj/kernel.asm	/^c010a8d7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a8da	obj/kernel.asm	/^c010a8da:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010a8dd	obj/kernel.asm	/^c010a8dd:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010a8e0	obj/kernel.asm	/^c010a8e0:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010a8e3	obj/kernel.asm	/^c010a8e3:	89 10                	mov    %edx,(%eax)$/;"	l
c010a8e5	obj/kernel.asm	/^c010a8e5:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010a8e8	obj/kernel.asm	/^c010a8e8:	8b 10                	mov    (%eax),%edx$/;"	l
c010a8ea	obj/kernel.asm	/^c010a8ea:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a8ed	obj/kernel.asm	/^c010a8ed:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a8f0	obj/kernel.asm	/^c010a8f0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a8f3	obj/kernel.asm	/^c010a8f3:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010a8f6	obj/kernel.asm	/^c010a8f6:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a8f9	obj/kernel.asm	/^c010a8f9:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a8fc	obj/kernel.asm	/^c010a8fc:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010a8ff	obj/kernel.asm	/^c010a8ff:	89 10                	mov    %edx,(%eax)$/;"	l
c010a901	obj/kernel.asm	/^c010a901:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a904	obj/kernel.asm	/^c010a904:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a907	obj/kernel.asm	/^c010a907:	e8 92 fc ff ff       	call   c010a59e <__intr_restore>$/;"	l
c010a90c	obj/kernel.asm	/^c010a90c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a90f	obj/kernel.asm	/^c010a90f:	c9                   	leave  $/;"	l
c010a910	obj/kernel.asm	/^c010a910:	c3                   	ret    $/;"	l
c010a911	obj/kernel.asm	/^c010a911 <del_timer>:$/;"	l
c010a911	obj/kernel.asm	/^c010a911:	55                   	push   %ebp$/;"	l
c010a912	obj/kernel.asm	/^c010a912:	89 e5                	mov    %esp,%ebp$/;"	l
c010a914	obj/kernel.asm	/^c010a914:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010a917	obj/kernel.asm	/^c010a917:	e8 58 fc ff ff       	call   c010a574 <__intr_save>$/;"	l
c010a91c	obj/kernel.asm	/^c010a91c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a91f	obj/kernel.asm	/^c010a91f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a922	obj/kernel.asm	/^c010a922:	83 c0 08             	add    $0x8,%eax$/;"	l
c010a925	obj/kernel.asm	/^c010a925:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a928	obj/kernel.asm	/^c010a928:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010a92b	obj/kernel.asm	/^c010a92b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a92e	obj/kernel.asm	/^c010a92e:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010a931	obj/kernel.asm	/^c010a931:	0f 94 c0             	sete   %al$/;"	l
c010a934	obj/kernel.asm	/^c010a934:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010a937	obj/kernel.asm	/^c010a937:	85 c0                	test   %eax,%eax$/;"	l
c010a939	obj/kernel.asm	/^c010a939:	0f 85 89 00 00 00    	jne    c010a9c8 <del_timer+0xb7>$/;"	l
c010a93f	obj/kernel.asm	/^c010a93f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a942	obj/kernel.asm	/^c010a942:	8b 00                	mov    (%eax),%eax$/;"	l
c010a944	obj/kernel.asm	/^c010a944:	85 c0                	test   %eax,%eax$/;"	l
c010a946	obj/kernel.asm	/^c010a946:	74 35                	je     c010a97d <del_timer+0x6c>$/;"	l
c010a948	obj/kernel.asm	/^c010a948:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a94b	obj/kernel.asm	/^c010a94b:	83 c0 08             	add    $0x8,%eax$/;"	l
c010a94e	obj/kernel.asm	/^c010a94e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010a951	obj/kernel.asm	/^c010a951:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a954	obj/kernel.asm	/^c010a954:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a957	obj/kernel.asm	/^c010a957:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a95a	obj/kernel.asm	/^c010a95a:	81 7d f0 94 0e 1b c0 	cmpl   $0xc01b0e94,-0x10(%ebp)$/;"	l
c010a961	obj/kernel.asm	/^c010a961:	74 1a                	je     c010a97d <del_timer+0x6c>$/;"	l
c010a963	obj/kernel.asm	/^c010a963:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a966	obj/kernel.asm	/^c010a966:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010a969	obj/kernel.asm	/^c010a969:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a96c	obj/kernel.asm	/^c010a96c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a96f	obj/kernel.asm	/^c010a96f:	8b 10                	mov    (%eax),%edx$/;"	l
c010a971	obj/kernel.asm	/^c010a971:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a974	obj/kernel.asm	/^c010a974:	8b 00                	mov    (%eax),%eax$/;"	l
c010a976	obj/kernel.asm	/^c010a976:	01 c2                	add    %eax,%edx$/;"	l
c010a978	obj/kernel.asm	/^c010a978:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a97b	obj/kernel.asm	/^c010a97b:	89 10                	mov    %edx,(%eax)$/;"	l
c010a97d	obj/kernel.asm	/^c010a97d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a980	obj/kernel.asm	/^c010a980:	83 c0 08             	add    $0x8,%eax$/;"	l
c010a983	obj/kernel.asm	/^c010a983:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010a986	obj/kernel.asm	/^c010a986:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a989	obj/kernel.asm	/^c010a989:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010a98c	obj/kernel.asm	/^c010a98c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a98f	obj/kernel.asm	/^c010a98f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a992	obj/kernel.asm	/^c010a992:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010a995	obj/kernel.asm	/^c010a995:	8b 12                	mov    (%edx),%edx$/;"	l
c010a997	obj/kernel.asm	/^c010a997:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010a99a	obj/kernel.asm	/^c010a99a:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010a99d	obj/kernel.asm	/^c010a99d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010a9a0	obj/kernel.asm	/^c010a9a0:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010a9a3	obj/kernel.asm	/^c010a9a3:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a9a6	obj/kernel.asm	/^c010a9a6:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a9a9	obj/kernel.asm	/^c010a9a9:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010a9ac	obj/kernel.asm	/^c010a9ac:	89 10                	mov    %edx,(%eax)$/;"	l
c010a9ae	obj/kernel.asm	/^c010a9ae:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a9b1	obj/kernel.asm	/^c010a9b1:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010a9b4	obj/kernel.asm	/^c010a9b4:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a9b7	obj/kernel.asm	/^c010a9b7:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010a9ba	obj/kernel.asm	/^c010a9ba:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a9bd	obj/kernel.asm	/^c010a9bd:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a9c0	obj/kernel.asm	/^c010a9c0:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010a9c3	obj/kernel.asm	/^c010a9c3:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010a9c6	obj/kernel.asm	/^c010a9c6:	89 10                	mov    %edx,(%eax)$/;"	l
c010a9c8	obj/kernel.asm	/^c010a9c8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a9cb	obj/kernel.asm	/^c010a9cb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a9ce	obj/kernel.asm	/^c010a9ce:	e8 cb fb ff ff       	call   c010a59e <__intr_restore>$/;"	l
c010a9d3	obj/kernel.asm	/^c010a9d3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a9d6	obj/kernel.asm	/^c010a9d6:	c9                   	leave  $/;"	l
c010a9d7	obj/kernel.asm	/^c010a9d7:	c3                   	ret    $/;"	l
c010a9d8	obj/kernel.asm	/^c010a9d8 <run_timer_list>:$/;"	l
c010a9d8	obj/kernel.asm	/^c010a9d8:	55                   	push   %ebp$/;"	l
c010a9d9	obj/kernel.asm	/^c010a9d9:	89 e5                	mov    %esp,%ebp$/;"	l
c010a9db	obj/kernel.asm	/^c010a9db:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010a9de	obj/kernel.asm	/^c010a9de:	e8 91 fb ff ff       	call   c010a574 <__intr_save>$/;"	l
c010a9e3	obj/kernel.asm	/^c010a9e3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a9e6	obj/kernel.asm	/^c010a9e6:	c7 45 e4 94 0e 1b c0 	movl   $0xc01b0e94,-0x1c(%ebp)$/;"	l
c010a9ed	obj/kernel.asm	/^c010a9ed:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a9f0	obj/kernel.asm	/^c010a9f0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a9f3	obj/kernel.asm	/^c010a9f3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a9f6	obj/kernel.asm	/^c010a9f6:	81 7d f4 94 0e 1b c0 	cmpl   $0xc01b0e94,-0xc(%ebp)$/;"	l
c010a9fd	obj/kernel.asm	/^c010a9fd:	0f 84 dd 00 00 00    	je     c010aae0 <run_timer_list+0x108>$/;"	l
c010aa03	obj/kernel.asm	/^c010aa03:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aa06	obj/kernel.asm	/^c010aa06:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010aa09	obj/kernel.asm	/^c010aa09:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010aa0c	obj/kernel.asm	/^c010aa0c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aa0f	obj/kernel.asm	/^c010aa0f:	8b 00                	mov    (%eax),%eax$/;"	l
c010aa11	obj/kernel.asm	/^c010aa11:	85 c0                	test   %eax,%eax$/;"	l
c010aa13	obj/kernel.asm	/^c010aa13:	75 19                	jne    c010aa2e <run_timer_list+0x56>$/;"	l
c010aa15	obj/kernel.asm	/^c010aa15:	68 a5 e0 10 c0       	push   $0xc010e0a5$/;"	l
c010aa1a	obj/kernel.asm	/^c010aa1a:	68 10 e0 10 c0       	push   $0xc010e010$/;"	l
c010aa1f	obj/kernel.asm	/^c010aa1f:	68 9a 00 00 00       	push   $0x9a$/;"	l
c010aa24	obj/kernel.asm	/^c010aa24:	68 25 e0 10 c0       	push   $0xc010e025$/;"	l
c010aa29	obj/kernel.asm	/^c010aa29:	e8 b1 59 ff ff       	call   c01003df <__panic>$/;"	l
c010aa2e	obj/kernel.asm	/^c010aa2e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aa31	obj/kernel.asm	/^c010aa31:	8b 00                	mov    (%eax),%eax$/;"	l
c010aa33	obj/kernel.asm	/^c010aa33:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010aa36	obj/kernel.asm	/^c010aa36:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aa39	obj/kernel.asm	/^c010aa39:	89 10                	mov    %edx,(%eax)$/;"	l
c010aa3b	obj/kernel.asm	/^c010aa3b:	e9 93 00 00 00       	jmp    c010aad3 <run_timer_list+0xfb>$/;"	l
c010aa40	obj/kernel.asm	/^c010aa40:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aa43	obj/kernel.asm	/^c010aa43:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010aa46	obj/kernel.asm	/^c010aa46:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010aa49	obj/kernel.asm	/^c010aa49:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010aa4c	obj/kernel.asm	/^c010aa4c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aa4f	obj/kernel.asm	/^c010aa4f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aa52	obj/kernel.asm	/^c010aa52:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010aa55	obj/kernel.asm	/^c010aa55:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010aa58	obj/kernel.asm	/^c010aa58:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010aa5b	obj/kernel.asm	/^c010aa5b:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c010aa5e	obj/kernel.asm	/^c010aa5e:	85 c0                	test   %eax,%eax$/;"	l
c010aa60	obj/kernel.asm	/^c010aa60:	74 23                	je     c010aa85 <run_timer_list+0xad>$/;"	l
c010aa62	obj/kernel.asm	/^c010aa62:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010aa65	obj/kernel.asm	/^c010aa65:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c010aa68	obj/kernel.asm	/^c010aa68:	85 c0                	test   %eax,%eax$/;"	l
c010aa6a	obj/kernel.asm	/^c010aa6a:	78 37                	js     c010aaa3 <run_timer_list+0xcb>$/;"	l
c010aa6c	obj/kernel.asm	/^c010aa6c:	68 bc e0 10 c0       	push   $0xc010e0bc$/;"	l
c010aa71	obj/kernel.asm	/^c010aa71:	68 10 e0 10 c0       	push   $0xc010e010$/;"	l
c010aa76	obj/kernel.asm	/^c010aa76:	68 a0 00 00 00       	push   $0xa0$/;"	l
c010aa7b	obj/kernel.asm	/^c010aa7b:	68 25 e0 10 c0       	push   $0xc010e025$/;"	l
c010aa80	obj/kernel.asm	/^c010aa80:	e8 5a 59 ff ff       	call   c01003df <__panic>$/;"	l
c010aa85	obj/kernel.asm	/^c010aa85:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010aa88	obj/kernel.asm	/^c010aa88:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010aa8b	obj/kernel.asm	/^c010aa8b:	50                   	push   %eax$/;"	l
c010aa8c	obj/kernel.asm	/^c010aa8c:	68 e0 e0 10 c0       	push   $0xc010e0e0$/;"	l
c010aa91	obj/kernel.asm	/^c010aa91:	68 a3 00 00 00       	push   $0xa3$/;"	l
c010aa96	obj/kernel.asm	/^c010aa96:	68 25 e0 10 c0       	push   $0xc010e025$/;"	l
c010aa9b	obj/kernel.asm	/^c010aa9b:	e8 ac 59 ff ff       	call   c010044c <__warn>$/;"	l
c010aaa0	obj/kernel.asm	/^c010aaa0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aaa3	obj/kernel.asm	/^c010aaa3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010aaa6	obj/kernel.asm	/^c010aaa6:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010aaa9	obj/kernel.asm	/^c010aaa9:	e8 1a fc ff ff       	call   c010a6c8 <wakeup_proc>$/;"	l
c010aaae	obj/kernel.asm	/^c010aaae:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aab1	obj/kernel.asm	/^c010aab1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010aab4	obj/kernel.asm	/^c010aab4:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010aab7	obj/kernel.asm	/^c010aab7:	e8 55 fe ff ff       	call   c010a911 <del_timer>$/;"	l
c010aabc	obj/kernel.asm	/^c010aabc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aabf	obj/kernel.asm	/^c010aabf:	81 7d f4 94 0e 1b c0 	cmpl   $0xc01b0e94,-0xc(%ebp)$/;"	l
c010aac6	obj/kernel.asm	/^c010aac6:	75 02                	jne    c010aaca <run_timer_list+0xf2>$/;"	l
c010aac8	obj/kernel.asm	/^c010aac8:	eb 16                	jmp    c010aae0 <run_timer_list+0x108>$/;"	l
c010aaca	obj/kernel.asm	/^c010aaca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aacd	obj/kernel.asm	/^c010aacd:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010aad0	obj/kernel.asm	/^c010aad0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010aad3	obj/kernel.asm	/^c010aad3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aad6	obj/kernel.asm	/^c010aad6:	8b 00                	mov    (%eax),%eax$/;"	l
c010aad8	obj/kernel.asm	/^c010aad8:	85 c0                	test   %eax,%eax$/;"	l
c010aada	obj/kernel.asm	/^c010aada:	0f 84 60 ff ff ff    	je     c010aa40 <run_timer_list+0x68>$/;"	l
c010aae0	obj/kernel.asm	/^c010aae0:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010aae5	obj/kernel.asm	/^c010aae5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010aae8	obj/kernel.asm	/^c010aae8:	50                   	push   %eax$/;"	l
c010aae9	obj/kernel.asm	/^c010aae9:	e8 30 fb ff ff       	call   c010a61e <sched_class_proc_tick>$/;"	l
c010aaee	obj/kernel.asm	/^c010aaee:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aaf1	obj/kernel.asm	/^c010aaf1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010aaf4	obj/kernel.asm	/^c010aaf4:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010aaf7	obj/kernel.asm	/^c010aaf7:	e8 a2 fa ff ff       	call   c010a59e <__intr_restore>$/;"	l
c010aafc	obj/kernel.asm	/^c010aafc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aaff	obj/kernel.asm	/^c010aaff:	c9                   	leave  $/;"	l
c010ab00	obj/kernel.asm	/^c010ab00:	c3                   	ret    $/;"	l
c010ab01	obj/kernel.asm	/^c010ab01 <RR_init>:$/;"	l
c010ab01	obj/kernel.asm	/^c010ab01:	55                   	push   %ebp$/;"	l
c010ab02	obj/kernel.asm	/^c010ab02:	89 e5                	mov    %esp,%ebp$/;"	l
c010ab04	obj/kernel.asm	/^c010ab04:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010ab07	obj/kernel.asm	/^c010ab07:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ab0a	obj/kernel.asm	/^c010ab0a:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010ab0d	obj/kernel.asm	/^c010ab0d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010ab10	obj/kernel.asm	/^c010ab10:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010ab13	obj/kernel.asm	/^c010ab13:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010ab16	obj/kernel.asm	/^c010ab16:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010ab19	obj/kernel.asm	/^c010ab19:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010ab1c	obj/kernel.asm	/^c010ab1c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010ab1f	obj/kernel.asm	/^c010ab1f:	89 10                	mov    %edx,(%eax)$/;"	l
c010ab21	obj/kernel.asm	/^c010ab21:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ab24	obj/kernel.asm	/^c010ab24:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010ab2b	obj/kernel.asm	/^c010ab2b:	c9                   	leave  $/;"	l
c010ab2c	obj/kernel.asm	/^c010ab2c:	c3                   	ret    $/;"	l
c010ab2d	obj/kernel.asm	/^c010ab2d <RR_enqueue>:$/;"	l
c010ab2d	obj/kernel.asm	/^c010ab2d:	55                   	push   %ebp$/;"	l
c010ab2e	obj/kernel.asm	/^c010ab2e:	89 e5                	mov    %esp,%ebp$/;"	l
c010ab30	obj/kernel.asm	/^c010ab30:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ab33	obj/kernel.asm	/^c010ab33:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ab36	obj/kernel.asm	/^c010ab36:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
c010ab39	obj/kernel.asm	/^c010ab39:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ab3c	obj/kernel.asm	/^c010ab3c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ab3f	obj/kernel.asm	/^c010ab3f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ab42	obj/kernel.asm	/^c010ab42:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010ab45	obj/kernel.asm	/^c010ab45:	0f 94 c0             	sete   %al$/;"	l
c010ab48	obj/kernel.asm	/^c010ab48:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010ab4b	obj/kernel.asm	/^c010ab4b:	85 c0                	test   %eax,%eax$/;"	l
c010ab4d	obj/kernel.asm	/^c010ab4d:	75 16                	jne    c010ab65 <RR_enqueue+0x38>$/;"	l
c010ab4f	obj/kernel.asm	/^c010ab4f:	68 00 e1 10 c0       	push   $0xc010e100$/;"	l
c010ab54	obj/kernel.asm	/^c010ab54:	68 1e e1 10 c0       	push   $0xc010e11e$/;"	l
c010ab59	obj/kernel.asm	/^c010ab59:	6a 0f                	push   $0xf$/;"	l
c010ab5b	obj/kernel.asm	/^c010ab5b:	68 33 e1 10 c0       	push   $0xc010e133$/;"	l
c010ab60	obj/kernel.asm	/^c010ab60:	e8 7a 58 ff ff       	call   c01003df <__panic>$/;"	l
c010ab65	obj/kernel.asm	/^c010ab65:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ab68	obj/kernel.asm	/^c010ab68:	8d 90 80 00 00 00    	lea    0x80(%eax),%edx$/;"	l
c010ab6e	obj/kernel.asm	/^c010ab6e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ab71	obj/kernel.asm	/^c010ab71:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ab74	obj/kernel.asm	/^c010ab74:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010ab77	obj/kernel.asm	/^c010ab77:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ab7a	obj/kernel.asm	/^c010ab7a:	8b 00                	mov    (%eax),%eax$/;"	l
c010ab7c	obj/kernel.asm	/^c010ab7c:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010ab7f	obj/kernel.asm	/^c010ab7f:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010ab82	obj/kernel.asm	/^c010ab82:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010ab85	obj/kernel.asm	/^c010ab85:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ab88	obj/kernel.asm	/^c010ab88:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010ab8b	obj/kernel.asm	/^c010ab8b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ab8e	obj/kernel.asm	/^c010ab8e:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010ab91	obj/kernel.asm	/^c010ab91:	89 10                	mov    %edx,(%eax)$/;"	l
c010ab93	obj/kernel.asm	/^c010ab93:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ab96	obj/kernel.asm	/^c010ab96:	8b 10                	mov    (%eax),%edx$/;"	l
c010ab98	obj/kernel.asm	/^c010ab98:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010ab9b	obj/kernel.asm	/^c010ab9b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010ab9e	obj/kernel.asm	/^c010ab9e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010aba1	obj/kernel.asm	/^c010aba1:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010aba4	obj/kernel.asm	/^c010aba4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010aba7	obj/kernel.asm	/^c010aba7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010abaa	obj/kernel.asm	/^c010abaa:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010abad	obj/kernel.asm	/^c010abad:	89 10                	mov    %edx,(%eax)$/;"	l
c010abaf	obj/kernel.asm	/^c010abaf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010abb2	obj/kernel.asm	/^c010abb2:	8b 80 88 00 00 00    	mov    0x88(%eax),%eax$/;"	l
c010abb8	obj/kernel.asm	/^c010abb8:	85 c0                	test   %eax,%eax$/;"	l
c010abba	obj/kernel.asm	/^c010abba:	74 13                	je     c010abcf <RR_enqueue+0xa2>$/;"	l
c010abbc	obj/kernel.asm	/^c010abbc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010abbf	obj/kernel.asm	/^c010abbf:	8b 90 88 00 00 00    	mov    0x88(%eax),%edx$/;"	l
c010abc5	obj/kernel.asm	/^c010abc5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010abc8	obj/kernel.asm	/^c010abc8:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010abcb	obj/kernel.asm	/^c010abcb:	39 c2                	cmp    %eax,%edx$/;"	l
c010abcd	obj/kernel.asm	/^c010abcd:	7e 0f                	jle    c010abde <RR_enqueue+0xb1>$/;"	l
c010abcf	obj/kernel.asm	/^c010abcf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010abd2	obj/kernel.asm	/^c010abd2:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010abd5	obj/kernel.asm	/^c010abd5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010abd8	obj/kernel.asm	/^c010abd8:	89 90 88 00 00 00    	mov    %edx,0x88(%eax)$/;"	l
c010abde	obj/kernel.asm	/^c010abde:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010abe1	obj/kernel.asm	/^c010abe1:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010abe4	obj/kernel.asm	/^c010abe4:	89 50 7c             	mov    %edx,0x7c(%eax)$/;"	l
c010abe7	obj/kernel.asm	/^c010abe7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010abea	obj/kernel.asm	/^c010abea:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010abed	obj/kernel.asm	/^c010abed:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010abf0	obj/kernel.asm	/^c010abf0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010abf3	obj/kernel.asm	/^c010abf3:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010abf6	obj/kernel.asm	/^c010abf6:	c9                   	leave  $/;"	l
c010abf7	obj/kernel.asm	/^c010abf7:	c3                   	ret    $/;"	l
c010abf8	obj/kernel.asm	/^c010abf8 <RR_dequeue>:$/;"	l
c010abf8	obj/kernel.asm	/^c010abf8:	55                   	push   %ebp$/;"	l
c010abf9	obj/kernel.asm	/^c010abf9:	89 e5                	mov    %esp,%ebp$/;"	l
c010abfb	obj/kernel.asm	/^c010abfb:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010abfe	obj/kernel.asm	/^c010abfe:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ac01	obj/kernel.asm	/^c010ac01:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
c010ac04	obj/kernel.asm	/^c010ac04:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ac07	obj/kernel.asm	/^c010ac07:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ac0a	obj/kernel.asm	/^c010ac0a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ac0d	obj/kernel.asm	/^c010ac0d:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010ac10	obj/kernel.asm	/^c010ac10:	0f 94 c0             	sete   %al$/;"	l
c010ac13	obj/kernel.asm	/^c010ac13:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010ac16	obj/kernel.asm	/^c010ac16:	85 c0                	test   %eax,%eax$/;"	l
c010ac18	obj/kernel.asm	/^c010ac18:	75 0b                	jne    c010ac25 <RR_dequeue+0x2d>$/;"	l
c010ac1a	obj/kernel.asm	/^c010ac1a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ac1d	obj/kernel.asm	/^c010ac1d:	8b 40 7c             	mov    0x7c(%eax),%eax$/;"	l
c010ac20	obj/kernel.asm	/^c010ac20:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010ac23	obj/kernel.asm	/^c010ac23:	74 16                	je     c010ac3b <RR_dequeue+0x43>$/;"	l
c010ac25	obj/kernel.asm	/^c010ac25:	68 54 e1 10 c0       	push   $0xc010e154$/;"	l
c010ac2a	obj/kernel.asm	/^c010ac2a:	68 1e e1 10 c0       	push   $0xc010e11e$/;"	l
c010ac2f	obj/kernel.asm	/^c010ac2f:	6a 1a                	push   $0x1a$/;"	l
c010ac31	obj/kernel.asm	/^c010ac31:	68 33 e1 10 c0       	push   $0xc010e133$/;"	l
c010ac36	obj/kernel.asm	/^c010ac36:	e8 a4 57 ff ff       	call   c01003df <__panic>$/;"	l
c010ac3b	obj/kernel.asm	/^c010ac3b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ac3e	obj/kernel.asm	/^c010ac3e:	83 e8 80             	sub    $0xffffff80,%eax$/;"	l
c010ac41	obj/kernel.asm	/^c010ac41:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ac44	obj/kernel.asm	/^c010ac44:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ac47	obj/kernel.asm	/^c010ac47:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ac4a	obj/kernel.asm	/^c010ac4a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ac4d	obj/kernel.asm	/^c010ac4d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ac50	obj/kernel.asm	/^c010ac50:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010ac53	obj/kernel.asm	/^c010ac53:	8b 12                	mov    (%edx),%edx$/;"	l
c010ac55	obj/kernel.asm	/^c010ac55:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010ac58	obj/kernel.asm	/^c010ac58:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010ac5b	obj/kernel.asm	/^c010ac5b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ac5e	obj/kernel.asm	/^c010ac5e:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010ac61	obj/kernel.asm	/^c010ac61:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010ac64	obj/kernel.asm	/^c010ac64:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010ac67	obj/kernel.asm	/^c010ac67:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010ac6a	obj/kernel.asm	/^c010ac6a:	89 10                	mov    %edx,(%eax)$/;"	l
c010ac6c	obj/kernel.asm	/^c010ac6c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ac6f	obj/kernel.asm	/^c010ac6f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010ac72	obj/kernel.asm	/^c010ac72:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ac75	obj/kernel.asm	/^c010ac75:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010ac78	obj/kernel.asm	/^c010ac78:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010ac7b	obj/kernel.asm	/^c010ac7b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ac7e	obj/kernel.asm	/^c010ac7e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010ac81	obj/kernel.asm	/^c010ac81:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ac84	obj/kernel.asm	/^c010ac84:	89 10                	mov    %edx,(%eax)$/;"	l
c010ac86	obj/kernel.asm	/^c010ac86:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ac89	obj/kernel.asm	/^c010ac89:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010ac8c	obj/kernel.asm	/^c010ac8c:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010ac8f	obj/kernel.asm	/^c010ac8f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ac92	obj/kernel.asm	/^c010ac92:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010ac95	obj/kernel.asm	/^c010ac95:	c9                   	leave  $/;"	l
c010ac96	obj/kernel.asm	/^c010ac96:	c3                   	ret    $/;"	l
c010ac97	obj/kernel.asm	/^c010ac97 <RR_pick_next>:$/;"	l
c010ac97	obj/kernel.asm	/^c010ac97:	55                   	push   %ebp$/;"	l
c010ac98	obj/kernel.asm	/^c010ac98:	89 e5                	mov    %esp,%ebp$/;"	l
c010ac9a	obj/kernel.asm	/^c010ac9a:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010ac9d	obj/kernel.asm	/^c010ac9d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aca0	obj/kernel.asm	/^c010aca0:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010aca3	obj/kernel.asm	/^c010aca3:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010aca6	obj/kernel.asm	/^c010aca6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010aca9	obj/kernel.asm	/^c010aca9:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010acac	obj/kernel.asm	/^c010acac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010acaf	obj/kernel.asm	/^c010acaf:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c010acb2	obj/kernel.asm	/^c010acb2:	74 08                	je     c010acbc <RR_pick_next+0x25>$/;"	l
c010acb4	obj/kernel.asm	/^c010acb4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010acb7	obj/kernel.asm	/^c010acb7:	83 c0 80             	add    $0xffffff80,%eax$/;"	l
c010acba	obj/kernel.asm	/^c010acba:	eb 05                	jmp    c010acc1 <RR_pick_next+0x2a>$/;"	l
c010acbc	obj/kernel.asm	/^c010acbc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010acc1	obj/kernel.asm	/^c010acc1:	c9                   	leave  $/;"	l
c010acc2	obj/kernel.asm	/^c010acc2:	c3                   	ret    $/;"	l
c010acc3	obj/kernel.asm	/^c010acc3 <RR_proc_tick>:$/;"	l
c010acc3	obj/kernel.asm	/^c010acc3:	55                   	push   %ebp$/;"	l
c010acc4	obj/kernel.asm	/^c010acc4:	89 e5                	mov    %esp,%ebp$/;"	l
c010acc6	obj/kernel.asm	/^c010acc6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010acc9	obj/kernel.asm	/^c010acc9:	8b 80 88 00 00 00    	mov    0x88(%eax),%eax$/;"	l
c010accf	obj/kernel.asm	/^c010accf:	85 c0                	test   %eax,%eax$/;"	l
c010acd1	obj/kernel.asm	/^c010acd1:	7e 15                	jle    c010ace8 <RR_proc_tick+0x25>$/;"	l
c010acd3	obj/kernel.asm	/^c010acd3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010acd6	obj/kernel.asm	/^c010acd6:	8b 80 88 00 00 00    	mov    0x88(%eax),%eax$/;"	l
c010acdc	obj/kernel.asm	/^c010acdc:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010acdf	obj/kernel.asm	/^c010acdf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ace2	obj/kernel.asm	/^c010ace2:	89 90 88 00 00 00    	mov    %edx,0x88(%eax)$/;"	l
c010ace8	obj/kernel.asm	/^c010ace8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aceb	obj/kernel.asm	/^c010aceb:	8b 80 88 00 00 00    	mov    0x88(%eax),%eax$/;"	l
c010acf1	obj/kernel.asm	/^c010acf1:	85 c0                	test   %eax,%eax$/;"	l
c010acf3	obj/kernel.asm	/^c010acf3:	75 0a                	jne    c010acff <RR_proc_tick+0x3c>$/;"	l
c010acf5	obj/kernel.asm	/^c010acf5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010acf8	obj/kernel.asm	/^c010acf8:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010acff	obj/kernel.asm	/^c010acff:	5d                   	pop    %ebp$/;"	l
c010ad00	obj/kernel.asm	/^c010ad00:	c3                   	ret    $/;"	l
c010ad01	obj/kernel.asm	/^c010ad01 <sys_exit>:$/;"	l
c010ad01	obj/kernel.asm	/^c010ad01:	55                   	push   %ebp$/;"	l
c010ad02	obj/kernel.asm	/^c010ad02:	89 e5                	mov    %esp,%ebp$/;"	l
c010ad04	obj/kernel.asm	/^c010ad04:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ad07	obj/kernel.asm	/^c010ad07:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad0a	obj/kernel.asm	/^c010ad0a:	8b 00                	mov    (%eax),%eax$/;"	l
c010ad0c	obj/kernel.asm	/^c010ad0c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ad0f	obj/kernel.asm	/^c010ad0f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ad12	obj/kernel.asm	/^c010ad12:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010ad15	obj/kernel.asm	/^c010ad15:	e8 da e9 ff ff       	call   c01096f4 <do_exit>$/;"	l
c010ad1a	obj/kernel.asm	/^c010ad1a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ad1d	obj/kernel.asm	/^c010ad1d:	c9                   	leave  $/;"	l
c010ad1e	obj/kernel.asm	/^c010ad1e:	c3                   	ret    $/;"	l
c010ad1f	obj/kernel.asm	/^c010ad1f <sys_fork>:$/;"	l
c010ad1f	obj/kernel.asm	/^c010ad1f:	55                   	push   %ebp$/;"	l
c010ad20	obj/kernel.asm	/^c010ad20:	89 e5                	mov    %esp,%ebp$/;"	l
c010ad22	obj/kernel.asm	/^c010ad22:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ad25	obj/kernel.asm	/^c010ad25:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010ad2a	obj/kernel.asm	/^c010ad2a:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ad2d	obj/kernel.asm	/^c010ad2d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ad30	obj/kernel.asm	/^c010ad30:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ad33	obj/kernel.asm	/^c010ad33:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010ad36	obj/kernel.asm	/^c010ad36:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ad39	obj/kernel.asm	/^c010ad39:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010ad3c	obj/kernel.asm	/^c010ad3c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010ad3f	obj/kernel.asm	/^c010ad3f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010ad42	obj/kernel.asm	/^c010ad42:	6a 00                	push   $0x0$/;"	l
c010ad44	obj/kernel.asm	/^c010ad44:	e8 86 e8 ff ff       	call   c01095cf <do_fork>$/;"	l
c010ad49	obj/kernel.asm	/^c010ad49:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ad4c	obj/kernel.asm	/^c010ad4c:	c9                   	leave  $/;"	l
c010ad4d	obj/kernel.asm	/^c010ad4d:	c3                   	ret    $/;"	l
c010ad4e	obj/kernel.asm	/^c010ad4e <sys_wait>:$/;"	l
c010ad4e	obj/kernel.asm	/^c010ad4e:	55                   	push   %ebp$/;"	l
c010ad4f	obj/kernel.asm	/^c010ad4f:	89 e5                	mov    %esp,%ebp$/;"	l
c010ad51	obj/kernel.asm	/^c010ad51:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ad54	obj/kernel.asm	/^c010ad54:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad57	obj/kernel.asm	/^c010ad57:	8b 00                	mov    (%eax),%eax$/;"	l
c010ad59	obj/kernel.asm	/^c010ad59:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ad5c	obj/kernel.asm	/^c010ad5c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad5f	obj/kernel.asm	/^c010ad5f:	83 c0 04             	add    $0x4,%eax$/;"	l
c010ad62	obj/kernel.asm	/^c010ad62:	8b 00                	mov    (%eax),%eax$/;"	l
c010ad64	obj/kernel.asm	/^c010ad64:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ad67	obj/kernel.asm	/^c010ad67:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ad6a	obj/kernel.asm	/^c010ad6a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010ad6d	obj/kernel.asm	/^c010ad6d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010ad70	obj/kernel.asm	/^c010ad70:	e8 4a f2 ff ff       	call   c0109fbf <do_wait>$/;"	l
c010ad75	obj/kernel.asm	/^c010ad75:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ad78	obj/kernel.asm	/^c010ad78:	c9                   	leave  $/;"	l
c010ad79	obj/kernel.asm	/^c010ad79:	c3                   	ret    $/;"	l
c010ad7a	obj/kernel.asm	/^c010ad7a <sys_exec>:$/;"	l
c010ad7a	obj/kernel.asm	/^c010ad7a:	55                   	push   %ebp$/;"	l
c010ad7b	obj/kernel.asm	/^c010ad7b:	89 e5                	mov    %esp,%ebp$/;"	l
c010ad7d	obj/kernel.asm	/^c010ad7d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ad80	obj/kernel.asm	/^c010ad80:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad83	obj/kernel.asm	/^c010ad83:	8b 00                	mov    (%eax),%eax$/;"	l
c010ad85	obj/kernel.asm	/^c010ad85:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ad88	obj/kernel.asm	/^c010ad88:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad8b	obj/kernel.asm	/^c010ad8b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ad8e	obj/kernel.asm	/^c010ad8e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ad91	obj/kernel.asm	/^c010ad91:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad94	obj/kernel.asm	/^c010ad94:	83 c0 08             	add    $0x8,%eax$/;"	l
c010ad97	obj/kernel.asm	/^c010ad97:	8b 00                	mov    (%eax),%eax$/;"	l
c010ad99	obj/kernel.asm	/^c010ad99:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ad9c	obj/kernel.asm	/^c010ad9c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad9f	obj/kernel.asm	/^c010ad9f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010ada2	obj/kernel.asm	/^c010ada2:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ada5	obj/kernel.asm	/^c010ada5:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010ada8	obj/kernel.asm	/^c010ada8:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010adab	obj/kernel.asm	/^c010adab:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010adae	obj/kernel.asm	/^c010adae:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010adb1	obj/kernel.asm	/^c010adb1:	e8 d3 f0 ff ff       	call   c0109e89 <do_execve>$/;"	l
c010adb6	obj/kernel.asm	/^c010adb6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010adb9	obj/kernel.asm	/^c010adb9:	c9                   	leave  $/;"	l
c010adba	obj/kernel.asm	/^c010adba:	c3                   	ret    $/;"	l
c010adbb	obj/kernel.asm	/^c010adbb <sys_yield>:$/;"	l
c010adbb	obj/kernel.asm	/^c010adbb:	55                   	push   %ebp$/;"	l
c010adbc	obj/kernel.asm	/^c010adbc:	89 e5                	mov    %esp,%ebp$/;"	l
c010adbe	obj/kernel.asm	/^c010adbe:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010adc1	obj/kernel.asm	/^c010adc1:	e8 e3 f1 ff ff       	call   c0109fa9 <do_yield>$/;"	l
c010adc6	obj/kernel.asm	/^c010adc6:	c9                   	leave  $/;"	l
c010adc7	obj/kernel.asm	/^c010adc7:	c3                   	ret    $/;"	l
c010adc8	obj/kernel.asm	/^c010adc8 <sys_kill>:$/;"	l
c010adc8	obj/kernel.asm	/^c010adc8:	55                   	push   %ebp$/;"	l
c010adc9	obj/kernel.asm	/^c010adc9:	89 e5                	mov    %esp,%ebp$/;"	l
c010adcb	obj/kernel.asm	/^c010adcb:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010adce	obj/kernel.asm	/^c010adce:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010add1	obj/kernel.asm	/^c010add1:	8b 00                	mov    (%eax),%eax$/;"	l
c010add3	obj/kernel.asm	/^c010add3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010add6	obj/kernel.asm	/^c010add6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010add9	obj/kernel.asm	/^c010add9:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010addc	obj/kernel.asm	/^c010addc:	e8 69 f3 ff ff       	call   c010a14a <do_kill>$/;"	l
c010ade1	obj/kernel.asm	/^c010ade1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ade4	obj/kernel.asm	/^c010ade4:	c9                   	leave  $/;"	l
c010ade5	obj/kernel.asm	/^c010ade5:	c3                   	ret    $/;"	l
c010ade6	obj/kernel.asm	/^c010ade6 <sys_getpid>:$/;"	l
c010ade6	obj/kernel.asm	/^c010ade6:	55                   	push   %ebp$/;"	l
c010ade7	obj/kernel.asm	/^c010ade7:	89 e5                	mov    %esp,%ebp$/;"	l
c010ade9	obj/kernel.asm	/^c010ade9:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010adee	obj/kernel.asm	/^c010adee:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010adf1	obj/kernel.asm	/^c010adf1:	5d                   	pop    %ebp$/;"	l
c010adf2	obj/kernel.asm	/^c010adf2:	c3                   	ret    $/;"	l
c010adf3	obj/kernel.asm	/^c010adf3 <sys_putc>:$/;"	l
c010adf3	obj/kernel.asm	/^c010adf3:	55                   	push   %ebp$/;"	l
c010adf4	obj/kernel.asm	/^c010adf4:	89 e5                	mov    %esp,%ebp$/;"	l
c010adf6	obj/kernel.asm	/^c010adf6:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010adf9	obj/kernel.asm	/^c010adf9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010adfc	obj/kernel.asm	/^c010adfc:	8b 00                	mov    (%eax),%eax$/;"	l
c010adfe	obj/kernel.asm	/^c010adfe:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ae01	obj/kernel.asm	/^c010ae01:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ae04	obj/kernel.asm	/^c010ae04:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010ae07	obj/kernel.asm	/^c010ae07:	e8 94 54 ff ff       	call   c01002a0 <cputchar>$/;"	l
c010ae0c	obj/kernel.asm	/^c010ae0c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ae0f	obj/kernel.asm	/^c010ae0f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ae14	obj/kernel.asm	/^c010ae14:	c9                   	leave  $/;"	l
c010ae15	obj/kernel.asm	/^c010ae15:	c3                   	ret    $/;"	l
c010ae16	obj/kernel.asm	/^c010ae16 <sys_pgdir>:$/;"	l
c010ae16	obj/kernel.asm	/^c010ae16:	55                   	push   %ebp$/;"	l
c010ae17	obj/kernel.asm	/^c010ae17:	89 e5                	mov    %esp,%ebp$/;"	l
c010ae19	obj/kernel.asm	/^c010ae19:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ae1c	obj/kernel.asm	/^c010ae1c:	e8 e1 a2 ff ff       	call   c0105102 <print_pgdir>$/;"	l
c010ae21	obj/kernel.asm	/^c010ae21:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ae26	obj/kernel.asm	/^c010ae26:	c9                   	leave  $/;"	l
c010ae27	obj/kernel.asm	/^c010ae27:	c3                   	ret    $/;"	l
c010ae28	obj/kernel.asm	/^c010ae28 <sys_gettime>:$/;"	l
c010ae28	obj/kernel.asm	/^c010ae28:	55                   	push   %ebp$/;"	l
c010ae29	obj/kernel.asm	/^c010ae29:	89 e5                	mov    %esp,%ebp$/;"	l
c010ae2b	obj/kernel.asm	/^c010ae2b:	a1 b8 0e 1b c0       	mov    0xc01b0eb8,%eax$/;"	l
c010ae30	obj/kernel.asm	/^c010ae30:	5d                   	pop    %ebp$/;"	l
c010ae31	obj/kernel.asm	/^c010ae31:	c3                   	ret    $/;"	l
c010ae32	obj/kernel.asm	/^c010ae32 <sys_lab6_set_priority>:$/;"	l
c010ae32	obj/kernel.asm	/^c010ae32:	55                   	push   %ebp$/;"	l
c010ae33	obj/kernel.asm	/^c010ae33:	89 e5                	mov    %esp,%ebp$/;"	l
c010ae35	obj/kernel.asm	/^c010ae35:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ae38	obj/kernel.asm	/^c010ae38:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae3b	obj/kernel.asm	/^c010ae3b:	8b 00                	mov    (%eax),%eax$/;"	l
c010ae3d	obj/kernel.asm	/^c010ae3d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ae40	obj/kernel.asm	/^c010ae40:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ae43	obj/kernel.asm	/^c010ae43:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010ae46	obj/kernel.asm	/^c010ae46:	e8 ff f6 ff ff       	call   c010a54a <lab6_set_priority>$/;"	l
c010ae4b	obj/kernel.asm	/^c010ae4b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ae4e	obj/kernel.asm	/^c010ae4e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ae53	obj/kernel.asm	/^c010ae53:	c9                   	leave  $/;"	l
c010ae54	obj/kernel.asm	/^c010ae54:	c3                   	ret    $/;"	l
c010ae55	obj/kernel.asm	/^c010ae55 <syscall>:$/;"	l
c010ae55	obj/kernel.asm	/^c010ae55:	55                   	push   %ebp$/;"	l
c010ae56	obj/kernel.asm	/^c010ae56:	89 e5                	mov    %esp,%ebp$/;"	l
c010ae58	obj/kernel.asm	/^c010ae58:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ae5b	obj/kernel.asm	/^c010ae5b:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010ae60	obj/kernel.asm	/^c010ae60:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ae63	obj/kernel.asm	/^c010ae63:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ae66	obj/kernel.asm	/^c010ae66:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ae69	obj/kernel.asm	/^c010ae69:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010ae6c	obj/kernel.asm	/^c010ae6c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ae6f	obj/kernel.asm	/^c010ae6f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ae73	obj/kernel.asm	/^c010ae73:	78 64                	js     c010aed9 <syscall+0x84>$/;"	l
c010ae75	obj/kernel.asm	/^c010ae75:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ae78	obj/kernel.asm	/^c010ae78:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c010ae7d	obj/kernel.asm	/^c010ae7d:	77 5a                	ja     c010aed9 <syscall+0x84>$/;"	l
c010ae7f	obj/kernel.asm	/^c010ae7f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ae82	obj/kernel.asm	/^c010ae82:	8b 04 85 00 cb 12 c0 	mov    -0x3fed3500(,%eax,4),%eax$/;"	l
c010ae89	obj/kernel.asm	/^c010ae89:	85 c0                	test   %eax,%eax$/;"	l
c010ae8b	obj/kernel.asm	/^c010ae8b:	74 4c                	je     c010aed9 <syscall+0x84>$/;"	l
c010ae8d	obj/kernel.asm	/^c010ae8d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ae90	obj/kernel.asm	/^c010ae90:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ae93	obj/kernel.asm	/^c010ae93:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010ae96	obj/kernel.asm	/^c010ae96:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ae99	obj/kernel.asm	/^c010ae99:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ae9c	obj/kernel.asm	/^c010ae9c:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010ae9f	obj/kernel.asm	/^c010ae9f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aea2	obj/kernel.asm	/^c010aea2:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010aea5	obj/kernel.asm	/^c010aea5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010aea8	obj/kernel.asm	/^c010aea8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aeab	obj/kernel.asm	/^c010aeab:	8b 00                	mov    (%eax),%eax$/;"	l
c010aead	obj/kernel.asm	/^c010aead:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010aeb0	obj/kernel.asm	/^c010aeb0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aeb3	obj/kernel.asm	/^c010aeb3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010aeb6	obj/kernel.asm	/^c010aeb6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010aeb9	obj/kernel.asm	/^c010aeb9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aebc	obj/kernel.asm	/^c010aebc:	8b 04 85 00 cb 12 c0 	mov    -0x3fed3500(,%eax,4),%eax$/;"	l
c010aec3	obj/kernel.asm	/^c010aec3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010aec6	obj/kernel.asm	/^c010aec6:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c010aec9	obj/kernel.asm	/^c010aec9:	52                   	push   %edx$/;"	l
c010aeca	obj/kernel.asm	/^c010aeca:	ff d0                	call   *%eax$/;"	l
c010aecc	obj/kernel.asm	/^c010aecc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aecf	obj/kernel.asm	/^c010aecf:	89 c2                	mov    %eax,%edx$/;"	l
c010aed1	obj/kernel.asm	/^c010aed1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aed4	obj/kernel.asm	/^c010aed4:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010aed7	obj/kernel.asm	/^c010aed7:	eb 37                	jmp    c010af10 <syscall+0xbb>$/;"	l
c010aed9	obj/kernel.asm	/^c010aed9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010aedc	obj/kernel.asm	/^c010aedc:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010aedf	obj/kernel.asm	/^c010aedf:	e8 2e 75 ff ff       	call   c0102412 <print_trapframe>$/;"	l
c010aee4	obj/kernel.asm	/^c010aee4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aee7	obj/kernel.asm	/^c010aee7:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010aeec	obj/kernel.asm	/^c010aeec:	8d 50 48             	lea    0x48(%eax),%edx$/;"	l
c010aeef	obj/kernel.asm	/^c010aeef:	a1 48 ee 1a c0       	mov    0xc01aee48,%eax$/;"	l
c010aef4	obj/kernel.asm	/^c010aef4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010aef7	obj/kernel.asm	/^c010aef7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010aefa	obj/kernel.asm	/^c010aefa:	52                   	push   %edx$/;"	l
c010aefb	obj/kernel.asm	/^c010aefb:	50                   	push   %eax$/;"	l
c010aefc	obj/kernel.asm	/^c010aefc:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010aeff	obj/kernel.asm	/^c010aeff:	68 94 e1 10 c0       	push   $0xc010e194$/;"	l
c010af04	obj/kernel.asm	/^c010af04:	6a 72                	push   $0x72$/;"	l
c010af06	obj/kernel.asm	/^c010af06:	68 c0 e1 10 c0       	push   $0xc010e1c0$/;"	l
c010af0b	obj/kernel.asm	/^c010af0b:	e8 cf 54 ff ff       	call   c01003df <__panic>$/;"	l
c010af10	obj/kernel.asm	/^c010af10:	c9                   	leave  $/;"	l
c010af11	obj/kernel.asm	/^c010af11:	c3                   	ret    $/;"	l
c010af12	obj/kernel.asm	/^c010af12 <strlen>:$/;"	l
c010af12	obj/kernel.asm	/^c010af12:	55                   	push   %ebp$/;"	l
c010af13	obj/kernel.asm	/^c010af13:	89 e5                	mov    %esp,%ebp$/;"	l
c010af15	obj/kernel.asm	/^c010af15:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010af18	obj/kernel.asm	/^c010af18:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010af1f	obj/kernel.asm	/^c010af1f:	eb 04                	jmp    c010af25 <strlen+0x13>$/;"	l
c010af21	obj/kernel.asm	/^c010af21:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010af25	obj/kernel.asm	/^c010af25:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af28	obj/kernel.asm	/^c010af28:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010af2b	obj/kernel.asm	/^c010af2b:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c010af2e	obj/kernel.asm	/^c010af2e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010af31	obj/kernel.asm	/^c010af31:	84 c0                	test   %al,%al$/;"	l
c010af33	obj/kernel.asm	/^c010af33:	75 ec                	jne    c010af21 <strlen+0xf>$/;"	l
c010af35	obj/kernel.asm	/^c010af35:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010af38	obj/kernel.asm	/^c010af38:	c9                   	leave  $/;"	l
c010af39	obj/kernel.asm	/^c010af39:	c3                   	ret    $/;"	l
c010af3a	obj/kernel.asm	/^c010af3a <strnlen>:$/;"	l
c010af3a	obj/kernel.asm	/^c010af3a:	55                   	push   %ebp$/;"	l
c010af3b	obj/kernel.asm	/^c010af3b:	89 e5                	mov    %esp,%ebp$/;"	l
c010af3d	obj/kernel.asm	/^c010af3d:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010af40	obj/kernel.asm	/^c010af40:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010af47	obj/kernel.asm	/^c010af47:	eb 04                	jmp    c010af4d <strnlen+0x13>$/;"	l
c010af49	obj/kernel.asm	/^c010af49:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010af4d	obj/kernel.asm	/^c010af4d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010af50	obj/kernel.asm	/^c010af50:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010af53	obj/kernel.asm	/^c010af53:	73 10                	jae    c010af65 <strnlen+0x2b>$/;"	l
c010af55	obj/kernel.asm	/^c010af55:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af58	obj/kernel.asm	/^c010af58:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010af5b	obj/kernel.asm	/^c010af5b:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c010af5e	obj/kernel.asm	/^c010af5e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010af61	obj/kernel.asm	/^c010af61:	84 c0                	test   %al,%al$/;"	l
c010af63	obj/kernel.asm	/^c010af63:	75 e4                	jne    c010af49 <strnlen+0xf>$/;"	l
c010af65	obj/kernel.asm	/^c010af65:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010af68	obj/kernel.asm	/^c010af68:	c9                   	leave  $/;"	l
c010af69	obj/kernel.asm	/^c010af69:	c3                   	ret    $/;"	l
c010af6a	obj/kernel.asm	/^c010af6a <strcpy>:$/;"	l
c010af6a	obj/kernel.asm	/^c010af6a:	55                   	push   %ebp$/;"	l
c010af6b	obj/kernel.asm	/^c010af6b:	89 e5                	mov    %esp,%ebp$/;"	l
c010af6d	obj/kernel.asm	/^c010af6d:	57                   	push   %edi$/;"	l
c010af6e	obj/kernel.asm	/^c010af6e:	56                   	push   %esi$/;"	l
c010af6f	obj/kernel.asm	/^c010af6f:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010af72	obj/kernel.asm	/^c010af72:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af75	obj/kernel.asm	/^c010af75:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010af78	obj/kernel.asm	/^c010af78:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010af7b	obj/kernel.asm	/^c010af7b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010af7e	obj/kernel.asm	/^c010af7e:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010af81	obj/kernel.asm	/^c010af81:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af84	obj/kernel.asm	/^c010af84:	89 d1                	mov    %edx,%ecx$/;"	l
c010af86	obj/kernel.asm	/^c010af86:	89 c2                	mov    %eax,%edx$/;"	l
c010af88	obj/kernel.asm	/^c010af88:	89 ce                	mov    %ecx,%esi$/;"	l
c010af8a	obj/kernel.asm	/^c010af8a:	89 d7                	mov    %edx,%edi$/;"	l
c010af8c	obj/kernel.asm	/^c010af8c:	ac                   	lods   %ds:(%esi),%al$/;"	l
c010af8d	obj/kernel.asm	/^c010af8d:	aa                   	stos   %al,%es:(%edi)$/;"	l
c010af8e	obj/kernel.asm	/^c010af8e:	84 c0                	test   %al,%al$/;"	l
c010af90	obj/kernel.asm	/^c010af90:	75 fa                	jne    c010af8c <strcpy+0x22>$/;"	l
c010af92	obj/kernel.asm	/^c010af92:	89 fa                	mov    %edi,%edx$/;"	l
c010af94	obj/kernel.asm	/^c010af94:	89 f1                	mov    %esi,%ecx$/;"	l
c010af96	obj/kernel.asm	/^c010af96:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c010af99	obj/kernel.asm	/^c010af99:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010af9c	obj/kernel.asm	/^c010af9c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010af9f	obj/kernel.asm	/^c010af9f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010afa2	obj/kernel.asm	/^c010afa2:	90                   	nop$/;"	l
c010afa3	obj/kernel.asm	/^c010afa3:	83 c4 20             	add    $0x20,%esp$/;"	l
c010afa6	obj/kernel.asm	/^c010afa6:	5e                   	pop    %esi$/;"	l
c010afa7	obj/kernel.asm	/^c010afa7:	5f                   	pop    %edi$/;"	l
c010afa8	obj/kernel.asm	/^c010afa8:	5d                   	pop    %ebp$/;"	l
c010afa9	obj/kernel.asm	/^c010afa9:	c3                   	ret    $/;"	l
c010afaa	obj/kernel.asm	/^c010afaa <strncpy>:$/;"	l
c010afaa	obj/kernel.asm	/^c010afaa:	55                   	push   %ebp$/;"	l
c010afab	obj/kernel.asm	/^c010afab:	89 e5                	mov    %esp,%ebp$/;"	l
c010afad	obj/kernel.asm	/^c010afad:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010afb0	obj/kernel.asm	/^c010afb0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010afb3	obj/kernel.asm	/^c010afb3:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010afb6	obj/kernel.asm	/^c010afb6:	eb 21                	jmp    c010afd9 <strncpy+0x2f>$/;"	l
c010afb8	obj/kernel.asm	/^c010afb8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010afbb	obj/kernel.asm	/^c010afbb:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c010afbe	obj/kernel.asm	/^c010afbe:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010afc1	obj/kernel.asm	/^c010afc1:	88 10                	mov    %dl,(%eax)$/;"	l
c010afc3	obj/kernel.asm	/^c010afc3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010afc6	obj/kernel.asm	/^c010afc6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010afc9	obj/kernel.asm	/^c010afc9:	84 c0                	test   %al,%al$/;"	l
c010afcb	obj/kernel.asm	/^c010afcb:	74 04                	je     c010afd1 <strncpy+0x27>$/;"	l
c010afcd	obj/kernel.asm	/^c010afcd:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c010afd1	obj/kernel.asm	/^c010afd1:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010afd5	obj/kernel.asm	/^c010afd5:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010afd9	obj/kernel.asm	/^c010afd9:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010afdd	obj/kernel.asm	/^c010afdd:	75 d9                	jne    c010afb8 <strncpy+0xe>$/;"	l
c010afdf	obj/kernel.asm	/^c010afdf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010afe2	obj/kernel.asm	/^c010afe2:	c9                   	leave  $/;"	l
c010afe3	obj/kernel.asm	/^c010afe3:	c3                   	ret    $/;"	l
c010afe4	obj/kernel.asm	/^c010afe4 <strcmp>:$/;"	l
c010afe4	obj/kernel.asm	/^c010afe4:	55                   	push   %ebp$/;"	l
c010afe5	obj/kernel.asm	/^c010afe5:	89 e5                	mov    %esp,%ebp$/;"	l
c010afe7	obj/kernel.asm	/^c010afe7:	57                   	push   %edi$/;"	l
c010afe8	obj/kernel.asm	/^c010afe8:	56                   	push   %esi$/;"	l
c010afe9	obj/kernel.asm	/^c010afe9:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010afec	obj/kernel.asm	/^c010afec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010afef	obj/kernel.asm	/^c010afef:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aff2	obj/kernel.asm	/^c010aff2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aff5	obj/kernel.asm	/^c010aff5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010aff8	obj/kernel.asm	/^c010aff8:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010affb	obj/kernel.asm	/^c010affb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010affe	obj/kernel.asm	/^c010affe:	89 d1                	mov    %edx,%ecx$/;"	l
c010b000	obj/kernel.asm	/^c010b000:	89 c2                	mov    %eax,%edx$/;"	l
c010b002	obj/kernel.asm	/^c010b002:	89 ce                	mov    %ecx,%esi$/;"	l
c010b004	obj/kernel.asm	/^c010b004:	89 d7                	mov    %edx,%edi$/;"	l
c010b006	obj/kernel.asm	/^c010b006:	ac                   	lods   %ds:(%esi),%al$/;"	l
c010b007	obj/kernel.asm	/^c010b007:	ae                   	scas   %es:(%edi),%al$/;"	l
c010b008	obj/kernel.asm	/^c010b008:	75 08                	jne    c010b012 <strcmp+0x2e>$/;"	l
c010b00a	obj/kernel.asm	/^c010b00a:	84 c0                	test   %al,%al$/;"	l
c010b00c	obj/kernel.asm	/^c010b00c:	75 f8                	jne    c010b006 <strcmp+0x22>$/;"	l
c010b00e	obj/kernel.asm	/^c010b00e:	31 c0                	xor    %eax,%eax$/;"	l
c010b010	obj/kernel.asm	/^c010b010:	eb 04                	jmp    c010b016 <strcmp+0x32>$/;"	l
c010b012	obj/kernel.asm	/^c010b012:	19 c0                	sbb    %eax,%eax$/;"	l
c010b014	obj/kernel.asm	/^c010b014:	0c 01                	or     $0x1,%al$/;"	l
c010b016	obj/kernel.asm	/^c010b016:	89 fa                	mov    %edi,%edx$/;"	l
c010b018	obj/kernel.asm	/^c010b018:	89 f1                	mov    %esi,%ecx$/;"	l
c010b01a	obj/kernel.asm	/^c010b01a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b01d	obj/kernel.asm	/^c010b01d:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c010b020	obj/kernel.asm	/^c010b020:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010b023	obj/kernel.asm	/^c010b023:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b026	obj/kernel.asm	/^c010b026:	90                   	nop$/;"	l
c010b027	obj/kernel.asm	/^c010b027:	83 c4 20             	add    $0x20,%esp$/;"	l
c010b02a	obj/kernel.asm	/^c010b02a:	5e                   	pop    %esi$/;"	l
c010b02b	obj/kernel.asm	/^c010b02b:	5f                   	pop    %edi$/;"	l
c010b02c	obj/kernel.asm	/^c010b02c:	5d                   	pop    %ebp$/;"	l
c010b02d	obj/kernel.asm	/^c010b02d:	c3                   	ret    $/;"	l
c010b02e	obj/kernel.asm	/^c010b02e <strncmp>:$/;"	l
c010b02e	obj/kernel.asm	/^c010b02e:	55                   	push   %ebp$/;"	l
c010b02f	obj/kernel.asm	/^c010b02f:	89 e5                	mov    %esp,%ebp$/;"	l
c010b031	obj/kernel.asm	/^c010b031:	eb 0c                	jmp    c010b03f <strncmp+0x11>$/;"	l
c010b033	obj/kernel.asm	/^c010b033:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010b037	obj/kernel.asm	/^c010b037:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010b03b	obj/kernel.asm	/^c010b03b:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c010b03f	obj/kernel.asm	/^c010b03f:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b043	obj/kernel.asm	/^c010b043:	74 1a                	je     c010b05f <strncmp+0x31>$/;"	l
c010b045	obj/kernel.asm	/^c010b045:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b048	obj/kernel.asm	/^c010b048:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b04b	obj/kernel.asm	/^c010b04b:	84 c0                	test   %al,%al$/;"	l
c010b04d	obj/kernel.asm	/^c010b04d:	74 10                	je     c010b05f <strncmp+0x31>$/;"	l
c010b04f	obj/kernel.asm	/^c010b04f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b052	obj/kernel.asm	/^c010b052:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c010b055	obj/kernel.asm	/^c010b055:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b058	obj/kernel.asm	/^c010b058:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b05b	obj/kernel.asm	/^c010b05b:	38 c2                	cmp    %al,%dl$/;"	l
c010b05d	obj/kernel.asm	/^c010b05d:	74 d4                	je     c010b033 <strncmp+0x5>$/;"	l
c010b05f	obj/kernel.asm	/^c010b05f:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b063	obj/kernel.asm	/^c010b063:	74 18                	je     c010b07d <strncmp+0x4f>$/;"	l
c010b065	obj/kernel.asm	/^c010b065:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b068	obj/kernel.asm	/^c010b068:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b06b	obj/kernel.asm	/^c010b06b:	0f b6 d0             	movzbl %al,%edx$/;"	l
c010b06e	obj/kernel.asm	/^c010b06e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b071	obj/kernel.asm	/^c010b071:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b074	obj/kernel.asm	/^c010b074:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010b077	obj/kernel.asm	/^c010b077:	29 c2                	sub    %eax,%edx$/;"	l
c010b079	obj/kernel.asm	/^c010b079:	89 d0                	mov    %edx,%eax$/;"	l
c010b07b	obj/kernel.asm	/^c010b07b:	eb 05                	jmp    c010b082 <strncmp+0x54>$/;"	l
c010b07d	obj/kernel.asm	/^c010b07d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b082	obj/kernel.asm	/^c010b082:	5d                   	pop    %ebp$/;"	l
c010b083	obj/kernel.asm	/^c010b083:	c3                   	ret    $/;"	l
c010b084	obj/kernel.asm	/^c010b084 <strchr>:$/;"	l
c010b084	obj/kernel.asm	/^c010b084:	55                   	push   %ebp$/;"	l
c010b085	obj/kernel.asm	/^c010b085:	89 e5                	mov    %esp,%ebp$/;"	l
c010b087	obj/kernel.asm	/^c010b087:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b08a	obj/kernel.asm	/^c010b08a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b08d	obj/kernel.asm	/^c010b08d:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c010b090	obj/kernel.asm	/^c010b090:	eb 14                	jmp    c010b0a6 <strchr+0x22>$/;"	l
c010b092	obj/kernel.asm	/^c010b092:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b095	obj/kernel.asm	/^c010b095:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b098	obj/kernel.asm	/^c010b098:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c010b09b	obj/kernel.asm	/^c010b09b:	75 05                	jne    c010b0a2 <strchr+0x1e>$/;"	l
c010b09d	obj/kernel.asm	/^c010b09d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b0a0	obj/kernel.asm	/^c010b0a0:	eb 13                	jmp    c010b0b5 <strchr+0x31>$/;"	l
c010b0a2	obj/kernel.asm	/^c010b0a2:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010b0a6	obj/kernel.asm	/^c010b0a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b0a9	obj/kernel.asm	/^c010b0a9:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b0ac	obj/kernel.asm	/^c010b0ac:	84 c0                	test   %al,%al$/;"	l
c010b0ae	obj/kernel.asm	/^c010b0ae:	75 e2                	jne    c010b092 <strchr+0xe>$/;"	l
c010b0b0	obj/kernel.asm	/^c010b0b0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b0b5	obj/kernel.asm	/^c010b0b5:	c9                   	leave  $/;"	l
c010b0b6	obj/kernel.asm	/^c010b0b6:	c3                   	ret    $/;"	l
c010b0b7	obj/kernel.asm	/^c010b0b7 <strfind>:$/;"	l
c010b0b7	obj/kernel.asm	/^c010b0b7:	55                   	push   %ebp$/;"	l
c010b0b8	obj/kernel.asm	/^c010b0b8:	89 e5                	mov    %esp,%ebp$/;"	l
c010b0ba	obj/kernel.asm	/^c010b0ba:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b0bd	obj/kernel.asm	/^c010b0bd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b0c0	obj/kernel.asm	/^c010b0c0:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c010b0c3	obj/kernel.asm	/^c010b0c3:	eb 11                	jmp    c010b0d6 <strfind+0x1f>$/;"	l
c010b0c5	obj/kernel.asm	/^c010b0c5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b0c8	obj/kernel.asm	/^c010b0c8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b0cb	obj/kernel.asm	/^c010b0cb:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c010b0ce	obj/kernel.asm	/^c010b0ce:	75 02                	jne    c010b0d2 <strfind+0x1b>$/;"	l
c010b0d0	obj/kernel.asm	/^c010b0d0:	eb 0e                	jmp    c010b0e0 <strfind+0x29>$/;"	l
c010b0d2	obj/kernel.asm	/^c010b0d2:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010b0d6	obj/kernel.asm	/^c010b0d6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b0d9	obj/kernel.asm	/^c010b0d9:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b0dc	obj/kernel.asm	/^c010b0dc:	84 c0                	test   %al,%al$/;"	l
c010b0de	obj/kernel.asm	/^c010b0de:	75 e5                	jne    c010b0c5 <strfind+0xe>$/;"	l
c010b0e0	obj/kernel.asm	/^c010b0e0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b0e3	obj/kernel.asm	/^c010b0e3:	c9                   	leave  $/;"	l
c010b0e4	obj/kernel.asm	/^c010b0e4:	c3                   	ret    $/;"	l
c010b0e5	obj/kernel.asm	/^c010b0e5 <strtol>:$/;"	l
c010b0e5	obj/kernel.asm	/^c010b0e5:	55                   	push   %ebp$/;"	l
c010b0e6	obj/kernel.asm	/^c010b0e6:	89 e5                	mov    %esp,%ebp$/;"	l
c010b0e8	obj/kernel.asm	/^c010b0e8:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010b0eb	obj/kernel.asm	/^c010b0eb:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010b0f2	obj/kernel.asm	/^c010b0f2:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c010b0f9	obj/kernel.asm	/^c010b0f9:	eb 04                	jmp    c010b0ff <strtol+0x1a>$/;"	l
c010b0fb	obj/kernel.asm	/^c010b0fb:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010b0ff	obj/kernel.asm	/^c010b0ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b102	obj/kernel.asm	/^c010b102:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b105	obj/kernel.asm	/^c010b105:	3c 20                	cmp    $0x20,%al$/;"	l
c010b107	obj/kernel.asm	/^c010b107:	74 f2                	je     c010b0fb <strtol+0x16>$/;"	l
c010b109	obj/kernel.asm	/^c010b109:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b10c	obj/kernel.asm	/^c010b10c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b10f	obj/kernel.asm	/^c010b10f:	3c 09                	cmp    $0x9,%al$/;"	l
c010b111	obj/kernel.asm	/^c010b111:	74 e8                	je     c010b0fb <strtol+0x16>$/;"	l
c010b113	obj/kernel.asm	/^c010b113:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b116	obj/kernel.asm	/^c010b116:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b119	obj/kernel.asm	/^c010b119:	3c 2b                	cmp    $0x2b,%al$/;"	l
c010b11b	obj/kernel.asm	/^c010b11b:	75 06                	jne    c010b123 <strtol+0x3e>$/;"	l
c010b11d	obj/kernel.asm	/^c010b11d:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010b121	obj/kernel.asm	/^c010b121:	eb 15                	jmp    c010b138 <strtol+0x53>$/;"	l
c010b123	obj/kernel.asm	/^c010b123:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b126	obj/kernel.asm	/^c010b126:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b129	obj/kernel.asm	/^c010b129:	3c 2d                	cmp    $0x2d,%al$/;"	l
c010b12b	obj/kernel.asm	/^c010b12b:	75 0b                	jne    c010b138 <strtol+0x53>$/;"	l
c010b12d	obj/kernel.asm	/^c010b12d:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010b131	obj/kernel.asm	/^c010b131:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)$/;"	l
c010b138	obj/kernel.asm	/^c010b138:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b13c	obj/kernel.asm	/^c010b13c:	74 06                	je     c010b144 <strtol+0x5f>$/;"	l
c010b13e	obj/kernel.asm	/^c010b13e:	83 7d 10 10          	cmpl   $0x10,0x10(%ebp)$/;"	l
c010b142	obj/kernel.asm	/^c010b142:	75 24                	jne    c010b168 <strtol+0x83>$/;"	l
c010b144	obj/kernel.asm	/^c010b144:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b147	obj/kernel.asm	/^c010b147:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b14a	obj/kernel.asm	/^c010b14a:	3c 30                	cmp    $0x30,%al$/;"	l
c010b14c	obj/kernel.asm	/^c010b14c:	75 1a                	jne    c010b168 <strtol+0x83>$/;"	l
c010b14e	obj/kernel.asm	/^c010b14e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b151	obj/kernel.asm	/^c010b151:	83 c0 01             	add    $0x1,%eax$/;"	l
c010b154	obj/kernel.asm	/^c010b154:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b157	obj/kernel.asm	/^c010b157:	3c 78                	cmp    $0x78,%al$/;"	l
c010b159	obj/kernel.asm	/^c010b159:	75 0d                	jne    c010b168 <strtol+0x83>$/;"	l
c010b15b	obj/kernel.asm	/^c010b15b:	83 45 08 02          	addl   $0x2,0x8(%ebp)$/;"	l
c010b15f	obj/kernel.asm	/^c010b15f:	c7 45 10 10 00 00 00 	movl   $0x10,0x10(%ebp)$/;"	l
c010b166	obj/kernel.asm	/^c010b166:	eb 2a                	jmp    c010b192 <strtol+0xad>$/;"	l
c010b168	obj/kernel.asm	/^c010b168:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b16c	obj/kernel.asm	/^c010b16c:	75 17                	jne    c010b185 <strtol+0xa0>$/;"	l
c010b16e	obj/kernel.asm	/^c010b16e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b171	obj/kernel.asm	/^c010b171:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b174	obj/kernel.asm	/^c010b174:	3c 30                	cmp    $0x30,%al$/;"	l
c010b176	obj/kernel.asm	/^c010b176:	75 0d                	jne    c010b185 <strtol+0xa0>$/;"	l
c010b178	obj/kernel.asm	/^c010b178:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010b17c	obj/kernel.asm	/^c010b17c:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)$/;"	l
c010b183	obj/kernel.asm	/^c010b183:	eb 0d                	jmp    c010b192 <strtol+0xad>$/;"	l
c010b185	obj/kernel.asm	/^c010b185:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010b189	obj/kernel.asm	/^c010b189:	75 07                	jne    c010b192 <strtol+0xad>$/;"	l
c010b18b	obj/kernel.asm	/^c010b18b:	c7 45 10 0a 00 00 00 	movl   $0xa,0x10(%ebp)$/;"	l
c010b192	obj/kernel.asm	/^c010b192:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b195	obj/kernel.asm	/^c010b195:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b198	obj/kernel.asm	/^c010b198:	3c 2f                	cmp    $0x2f,%al$/;"	l
c010b19a	obj/kernel.asm	/^c010b19a:	7e 1b                	jle    c010b1b7 <strtol+0xd2>$/;"	l
c010b19c	obj/kernel.asm	/^c010b19c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b19f	obj/kernel.asm	/^c010b19f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b1a2	obj/kernel.asm	/^c010b1a2:	3c 39                	cmp    $0x39,%al$/;"	l
c010b1a4	obj/kernel.asm	/^c010b1a4:	7f 11                	jg     c010b1b7 <strtol+0xd2>$/;"	l
c010b1a6	obj/kernel.asm	/^c010b1a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1a9	obj/kernel.asm	/^c010b1a9:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b1ac	obj/kernel.asm	/^c010b1ac:	0f be c0             	movsbl %al,%eax$/;"	l
c010b1af	obj/kernel.asm	/^c010b1af:	83 e8 30             	sub    $0x30,%eax$/;"	l
c010b1b2	obj/kernel.asm	/^c010b1b2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b1b5	obj/kernel.asm	/^c010b1b5:	eb 48                	jmp    c010b1ff <strtol+0x11a>$/;"	l
c010b1b7	obj/kernel.asm	/^c010b1b7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1ba	obj/kernel.asm	/^c010b1ba:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b1bd	obj/kernel.asm	/^c010b1bd:	3c 60                	cmp    $0x60,%al$/;"	l
c010b1bf	obj/kernel.asm	/^c010b1bf:	7e 1b                	jle    c010b1dc <strtol+0xf7>$/;"	l
c010b1c1	obj/kernel.asm	/^c010b1c1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1c4	obj/kernel.asm	/^c010b1c4:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b1c7	obj/kernel.asm	/^c010b1c7:	3c 7a                	cmp    $0x7a,%al$/;"	l
c010b1c9	obj/kernel.asm	/^c010b1c9:	7f 11                	jg     c010b1dc <strtol+0xf7>$/;"	l
c010b1cb	obj/kernel.asm	/^c010b1cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1ce	obj/kernel.asm	/^c010b1ce:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b1d1	obj/kernel.asm	/^c010b1d1:	0f be c0             	movsbl %al,%eax$/;"	l
c010b1d4	obj/kernel.asm	/^c010b1d4:	83 e8 57             	sub    $0x57,%eax$/;"	l
c010b1d7	obj/kernel.asm	/^c010b1d7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b1da	obj/kernel.asm	/^c010b1da:	eb 23                	jmp    c010b1ff <strtol+0x11a>$/;"	l
c010b1dc	obj/kernel.asm	/^c010b1dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1df	obj/kernel.asm	/^c010b1df:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b1e2	obj/kernel.asm	/^c010b1e2:	3c 40                	cmp    $0x40,%al$/;"	l
c010b1e4	obj/kernel.asm	/^c010b1e4:	7e 3d                	jle    c010b223 <strtol+0x13e>$/;"	l
c010b1e6	obj/kernel.asm	/^c010b1e6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1e9	obj/kernel.asm	/^c010b1e9:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b1ec	obj/kernel.asm	/^c010b1ec:	3c 5a                	cmp    $0x5a,%al$/;"	l
c010b1ee	obj/kernel.asm	/^c010b1ee:	7f 33                	jg     c010b223 <strtol+0x13e>$/;"	l
c010b1f0	obj/kernel.asm	/^c010b1f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b1f3	obj/kernel.asm	/^c010b1f3:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b1f6	obj/kernel.asm	/^c010b1f6:	0f be c0             	movsbl %al,%eax$/;"	l
c010b1f9	obj/kernel.asm	/^c010b1f9:	83 e8 37             	sub    $0x37,%eax$/;"	l
c010b1fc	obj/kernel.asm	/^c010b1fc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b1ff	obj/kernel.asm	/^c010b1ff:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b202	obj/kernel.asm	/^c010b202:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010b205	obj/kernel.asm	/^c010b205:	7c 02                	jl     c010b209 <strtol+0x124>$/;"	l
c010b207	obj/kernel.asm	/^c010b207:	eb 1a                	jmp    c010b223 <strtol+0x13e>$/;"	l
c010b209	obj/kernel.asm	/^c010b209:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010b20d	obj/kernel.asm	/^c010b20d:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010b210	obj/kernel.asm	/^c010b210:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
c010b214	obj/kernel.asm	/^c010b214:	89 c2                	mov    %eax,%edx$/;"	l
c010b216	obj/kernel.asm	/^c010b216:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b219	obj/kernel.asm	/^c010b219:	01 d0                	add    %edx,%eax$/;"	l
c010b21b	obj/kernel.asm	/^c010b21b:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010b21e	obj/kernel.asm	/^c010b21e:	e9 6f ff ff ff       	jmp    c010b192 <strtol+0xad>$/;"	l
c010b223	obj/kernel.asm	/^c010b223:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010b227	obj/kernel.asm	/^c010b227:	74 08                	je     c010b231 <strtol+0x14c>$/;"	l
c010b229	obj/kernel.asm	/^c010b229:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b22c	obj/kernel.asm	/^c010b22c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b22f	obj/kernel.asm	/^c010b22f:	89 10                	mov    %edx,(%eax)$/;"	l
c010b231	obj/kernel.asm	/^c010b231:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c010b235	obj/kernel.asm	/^c010b235:	74 07                	je     c010b23e <strtol+0x159>$/;"	l
c010b237	obj/kernel.asm	/^c010b237:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010b23a	obj/kernel.asm	/^c010b23a:	f7 d8                	neg    %eax$/;"	l
c010b23c	obj/kernel.asm	/^c010b23c:	eb 03                	jmp    c010b241 <strtol+0x15c>$/;"	l
c010b23e	obj/kernel.asm	/^c010b23e:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010b241	obj/kernel.asm	/^c010b241:	c9                   	leave  $/;"	l
c010b242	obj/kernel.asm	/^c010b242:	c3                   	ret    $/;"	l
c010b243	obj/kernel.asm	/^c010b243 <memset>:$/;"	l
c010b243	obj/kernel.asm	/^c010b243:	55                   	push   %ebp$/;"	l
c010b244	obj/kernel.asm	/^c010b244:	89 e5                	mov    %esp,%ebp$/;"	l
c010b246	obj/kernel.asm	/^c010b246:	57                   	push   %edi$/;"	l
c010b247	obj/kernel.asm	/^c010b247:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010b24a	obj/kernel.asm	/^c010b24a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b24d	obj/kernel.asm	/^c010b24d:	88 45 d8             	mov    %al,-0x28(%ebp)$/;"	l
c010b250	obj/kernel.asm	/^c010b250:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
c010b254	obj/kernel.asm	/^c010b254:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b257	obj/kernel.asm	/^c010b257:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c010b25a	obj/kernel.asm	/^c010b25a:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c010b25d	obj/kernel.asm	/^c010b25d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b260	obj/kernel.asm	/^c010b260:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b263	obj/kernel.asm	/^c010b263:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c010b266	obj/kernel.asm	/^c010b266:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax$/;"	l
c010b26a	obj/kernel.asm	/^c010b26a:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010b26d	obj/kernel.asm	/^c010b26d:	89 d7                	mov    %edx,%edi$/;"	l
c010b26f	obj/kernel.asm	/^c010b26f:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
c010b271	obj/kernel.asm	/^c010b271:	89 fa                	mov    %edi,%edx$/;"	l
c010b273	obj/kernel.asm	/^c010b273:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c010b276	obj/kernel.asm	/^c010b276:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010b279	obj/kernel.asm	/^c010b279:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010b27c	obj/kernel.asm	/^c010b27c:	90                   	nop$/;"	l
c010b27d	obj/kernel.asm	/^c010b27d:	83 c4 24             	add    $0x24,%esp$/;"	l
c010b280	obj/kernel.asm	/^c010b280:	5f                   	pop    %edi$/;"	l
c010b281	obj/kernel.asm	/^c010b281:	5d                   	pop    %ebp$/;"	l
c010b282	obj/kernel.asm	/^c010b282:	c3                   	ret    $/;"	l
c010b283	obj/kernel.asm	/^c010b283 <memmove>:$/;"	l
c010b283	obj/kernel.asm	/^c010b283:	55                   	push   %ebp$/;"	l
c010b284	obj/kernel.asm	/^c010b284:	89 e5                	mov    %esp,%ebp$/;"	l
c010b286	obj/kernel.asm	/^c010b286:	57                   	push   %edi$/;"	l
c010b287	obj/kernel.asm	/^c010b287:	56                   	push   %esi$/;"	l
c010b288	obj/kernel.asm	/^c010b288:	53                   	push   %ebx$/;"	l
c010b289	obj/kernel.asm	/^c010b289:	83 ec 30             	sub    $0x30,%esp$/;"	l
c010b28c	obj/kernel.asm	/^c010b28c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b28f	obj/kernel.asm	/^c010b28f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b292	obj/kernel.asm	/^c010b292:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b295	obj/kernel.asm	/^c010b295:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b298	obj/kernel.asm	/^c010b298:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b29b	obj/kernel.asm	/^c010b29b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b29e	obj/kernel.asm	/^c010b29e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b2a1	obj/kernel.asm	/^c010b2a1:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010b2a4	obj/kernel.asm	/^c010b2a4:	73 42                	jae    c010b2e8 <memmove+0x65>$/;"	l
c010b2a6	obj/kernel.asm	/^c010b2a6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b2a9	obj/kernel.asm	/^c010b2a9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b2ac	obj/kernel.asm	/^c010b2ac:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b2af	obj/kernel.asm	/^c010b2af:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b2b2	obj/kernel.asm	/^c010b2b2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b2b5	obj/kernel.asm	/^c010b2b5:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010b2b8	obj/kernel.asm	/^c010b2b8:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010b2bb	obj/kernel.asm	/^c010b2bb:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010b2be	obj/kernel.asm	/^c010b2be:	89 c1                	mov    %eax,%ecx$/;"	l
c010b2c0	obj/kernel.asm	/^c010b2c0:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010b2c3	obj/kernel.asm	/^c010b2c3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b2c6	obj/kernel.asm	/^c010b2c6:	89 d7                	mov    %edx,%edi$/;"	l
c010b2c8	obj/kernel.asm	/^c010b2c8:	89 c6                	mov    %eax,%esi$/;"	l
c010b2ca	obj/kernel.asm	/^c010b2ca:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c010b2cc	obj/kernel.asm	/^c010b2cc:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c010b2cf	obj/kernel.asm	/^c010b2cf:	83 e1 03             	and    $0x3,%ecx$/;"	l
c010b2d2	obj/kernel.asm	/^c010b2d2:	74 02                	je     c010b2d6 <memmove+0x53>$/;"	l
c010b2d4	obj/kernel.asm	/^c010b2d4:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c010b2d6	obj/kernel.asm	/^c010b2d6:	89 f0                	mov    %esi,%eax$/;"	l
c010b2d8	obj/kernel.asm	/^c010b2d8:	89 fa                	mov    %edi,%edx$/;"	l
c010b2da	obj/kernel.asm	/^c010b2da:	89 4d d8             	mov    %ecx,-0x28(%ebp)$/;"	l
c010b2dd	obj/kernel.asm	/^c010b2dd:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010b2e0	obj/kernel.asm	/^c010b2e0:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010b2e3	obj/kernel.asm	/^c010b2e3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b2e6	obj/kernel.asm	/^c010b2e6:	eb 36                	jmp    c010b31e <memmove+0x9b>$/;"	l
c010b2e8	obj/kernel.asm	/^c010b2e8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b2eb	obj/kernel.asm	/^c010b2eb:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010b2ee	obj/kernel.asm	/^c010b2ee:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b2f1	obj/kernel.asm	/^c010b2f1:	01 c2                	add    %eax,%edx$/;"	l
c010b2f3	obj/kernel.asm	/^c010b2f3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b2f6	obj/kernel.asm	/^c010b2f6:	8d 48 ff             	lea    -0x1(%eax),%ecx$/;"	l
c010b2f9	obj/kernel.asm	/^c010b2f9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b2fc	obj/kernel.asm	/^c010b2fc:	8d 1c 01             	lea    (%ecx,%eax,1),%ebx$/;"	l
c010b2ff	obj/kernel.asm	/^c010b2ff:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b302	obj/kernel.asm	/^c010b302:	89 c1                	mov    %eax,%ecx$/;"	l
c010b304	obj/kernel.asm	/^c010b304:	89 d8                	mov    %ebx,%eax$/;"	l
c010b306	obj/kernel.asm	/^c010b306:	89 d6                	mov    %edx,%esi$/;"	l
c010b308	obj/kernel.asm	/^c010b308:	89 c7                	mov    %eax,%edi$/;"	l
c010b30a	obj/kernel.asm	/^c010b30a:	fd                   	std    $/;"	l
c010b30b	obj/kernel.asm	/^c010b30b:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c010b30d	obj/kernel.asm	/^c010b30d:	fc                   	cld    $/;"	l
c010b30e	obj/kernel.asm	/^c010b30e:	89 f8                	mov    %edi,%eax$/;"	l
c010b310	obj/kernel.asm	/^c010b310:	89 f2                	mov    %esi,%edx$/;"	l
c010b312	obj/kernel.asm	/^c010b312:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
c010b315	obj/kernel.asm	/^c010b315:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c010b318	obj/kernel.asm	/^c010b318:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010b31b	obj/kernel.asm	/^c010b31b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b31e	obj/kernel.asm	/^c010b31e:	83 c4 30             	add    $0x30,%esp$/;"	l
c010b321	obj/kernel.asm	/^c010b321:	5b                   	pop    %ebx$/;"	l
c010b322	obj/kernel.asm	/^c010b322:	5e                   	pop    %esi$/;"	l
c010b323	obj/kernel.asm	/^c010b323:	5f                   	pop    %edi$/;"	l
c010b324	obj/kernel.asm	/^c010b324:	5d                   	pop    %ebp$/;"	l
c010b325	obj/kernel.asm	/^c010b325:	c3                   	ret    $/;"	l
c010b326	obj/kernel.asm	/^c010b326 <memcpy>:$/;"	l
c010b326	obj/kernel.asm	/^c010b326:	55                   	push   %ebp$/;"	l
c010b327	obj/kernel.asm	/^c010b327:	89 e5                	mov    %esp,%ebp$/;"	l
c010b329	obj/kernel.asm	/^c010b329:	57                   	push   %edi$/;"	l
c010b32a	obj/kernel.asm	/^c010b32a:	56                   	push   %esi$/;"	l
c010b32b	obj/kernel.asm	/^c010b32b:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010b32e	obj/kernel.asm	/^c010b32e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b331	obj/kernel.asm	/^c010b331:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b334	obj/kernel.asm	/^c010b334:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b337	obj/kernel.asm	/^c010b337:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b33a	obj/kernel.asm	/^c010b33a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b33d	obj/kernel.asm	/^c010b33d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b340	obj/kernel.asm	/^c010b340:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b343	obj/kernel.asm	/^c010b343:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010b346	obj/kernel.asm	/^c010b346:	89 c1                	mov    %eax,%ecx$/;"	l
c010b348	obj/kernel.asm	/^c010b348:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b34b	obj/kernel.asm	/^c010b34b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b34e	obj/kernel.asm	/^c010b34e:	89 d7                	mov    %edx,%edi$/;"	l
c010b350	obj/kernel.asm	/^c010b350:	89 c6                	mov    %eax,%esi$/;"	l
c010b352	obj/kernel.asm	/^c010b352:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c010b354	obj/kernel.asm	/^c010b354:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
c010b357	obj/kernel.asm	/^c010b357:	83 e1 03             	and    $0x3,%ecx$/;"	l
c010b35a	obj/kernel.asm	/^c010b35a:	74 02                	je     c010b35e <memcpy+0x38>$/;"	l
c010b35c	obj/kernel.asm	/^c010b35c:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c010b35e	obj/kernel.asm	/^c010b35e:	89 f0                	mov    %esi,%eax$/;"	l
c010b360	obj/kernel.asm	/^c010b360:	89 fa                	mov    %edi,%edx$/;"	l
c010b362	obj/kernel.asm	/^c010b362:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c010b365	obj/kernel.asm	/^c010b365:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010b368	obj/kernel.asm	/^c010b368:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b36b	obj/kernel.asm	/^c010b36b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b36e	obj/kernel.asm	/^c010b36e:	90                   	nop$/;"	l
c010b36f	obj/kernel.asm	/^c010b36f:	83 c4 20             	add    $0x20,%esp$/;"	l
c010b372	obj/kernel.asm	/^c010b372:	5e                   	pop    %esi$/;"	l
c010b373	obj/kernel.asm	/^c010b373:	5f                   	pop    %edi$/;"	l
c010b374	obj/kernel.asm	/^c010b374:	5d                   	pop    %ebp$/;"	l
c010b375	obj/kernel.asm	/^c010b375:	c3                   	ret    $/;"	l
c010b376	obj/kernel.asm	/^c010b376 <memcmp>:$/;"	l
c010b376	obj/kernel.asm	/^c010b376:	55                   	push   %ebp$/;"	l
c010b377	obj/kernel.asm	/^c010b377:	89 e5                	mov    %esp,%ebp$/;"	l
c010b379	obj/kernel.asm	/^c010b379:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010b37c	obj/kernel.asm	/^c010b37c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b37f	obj/kernel.asm	/^c010b37f:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010b382	obj/kernel.asm	/^c010b382:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b385	obj/kernel.asm	/^c010b385:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010b388	obj/kernel.asm	/^c010b388:	eb 30                	jmp    c010b3ba <memcmp+0x44>$/;"	l
c010b38a	obj/kernel.asm	/^c010b38a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b38d	obj/kernel.asm	/^c010b38d:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c010b390	obj/kernel.asm	/^c010b390:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010b393	obj/kernel.asm	/^c010b393:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b396	obj/kernel.asm	/^c010b396:	38 c2                	cmp    %al,%dl$/;"	l
c010b398	obj/kernel.asm	/^c010b398:	74 18                	je     c010b3b2 <memcmp+0x3c>$/;"	l
c010b39a	obj/kernel.asm	/^c010b39a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b39d	obj/kernel.asm	/^c010b39d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b3a0	obj/kernel.asm	/^c010b3a0:	0f b6 d0             	movzbl %al,%edx$/;"	l
c010b3a3	obj/kernel.asm	/^c010b3a3:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010b3a6	obj/kernel.asm	/^c010b3a6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b3a9	obj/kernel.asm	/^c010b3a9:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010b3ac	obj/kernel.asm	/^c010b3ac:	29 c2                	sub    %eax,%edx$/;"	l
c010b3ae	obj/kernel.asm	/^c010b3ae:	89 d0                	mov    %edx,%eax$/;"	l
c010b3b0	obj/kernel.asm	/^c010b3b0:	eb 1a                	jmp    c010b3cc <memcmp+0x56>$/;"	l
c010b3b2	obj/kernel.asm	/^c010b3b2:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010b3b6	obj/kernel.asm	/^c010b3b6:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
c010b3ba	obj/kernel.asm	/^c010b3ba:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b3bd	obj/kernel.asm	/^c010b3bd:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010b3c0	obj/kernel.asm	/^c010b3c0:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c010b3c3	obj/kernel.asm	/^c010b3c3:	85 c0                	test   %eax,%eax$/;"	l
c010b3c5	obj/kernel.asm	/^c010b3c5:	75 c3                	jne    c010b38a <memcmp+0x14>$/;"	l
c010b3c7	obj/kernel.asm	/^c010b3c7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b3cc	obj/kernel.asm	/^c010b3cc:	c9                   	leave  $/;"	l
c010b3cd	obj/kernel.asm	/^c010b3cd:	c3                   	ret    $/;"	l
c010b3ce	obj/kernel.asm	/^c010b3ce <printnum>:$/;"	l
c010b3ce	obj/kernel.asm	/^c010b3ce:	55                   	push   %ebp$/;"	l
c010b3cf	obj/kernel.asm	/^c010b3cf:	89 e5                	mov    %esp,%ebp$/;"	l
c010b3d1	obj/kernel.asm	/^c010b3d1:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010b3d4	obj/kernel.asm	/^c010b3d4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b3d7	obj/kernel.asm	/^c010b3d7:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010b3da	obj/kernel.asm	/^c010b3da:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010b3dd	obj/kernel.asm	/^c010b3dd:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010b3e0	obj/kernel.asm	/^c010b3e0:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010b3e3	obj/kernel.asm	/^c010b3e3:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010b3e6	obj/kernel.asm	/^c010b3e6:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b3e9	obj/kernel.asm	/^c010b3e9:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010b3ec	obj/kernel.asm	/^c010b3ec:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010b3ef	obj/kernel.asm	/^c010b3ef:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b3f2	obj/kernel.asm	/^c010b3f2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b3f5	obj/kernel.asm	/^c010b3f5:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010b3f8	obj/kernel.asm	/^c010b3f8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b3fb	obj/kernel.asm	/^c010b3fb:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c010b3fe	obj/kernel.asm	/^c010b3fe:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b401	obj/kernel.asm	/^c010b401:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b404	obj/kernel.asm	/^c010b404:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010b408	obj/kernel.asm	/^c010b408:	74 1c                	je     c010b426 <printnum+0x58>$/;"	l
c010b40a	obj/kernel.asm	/^c010b40a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b40d	obj/kernel.asm	/^c010b40d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b412	obj/kernel.asm	/^c010b412:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c010b415	obj/kernel.asm	/^c010b415:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010b418	obj/kernel.asm	/^c010b418:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b41b	obj/kernel.asm	/^c010b41b:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b420	obj/kernel.asm	/^c010b420:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c010b423	obj/kernel.asm	/^c010b423:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b426	obj/kernel.asm	/^c010b426:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b429	obj/kernel.asm	/^c010b429:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b42c	obj/kernel.asm	/^c010b42c:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c010b42f	obj/kernel.asm	/^c010b42f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b432	obj/kernel.asm	/^c010b432:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
c010b435	obj/kernel.asm	/^c010b435:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b438	obj/kernel.asm	/^c010b438:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010b43b	obj/kernel.asm	/^c010b43b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b43e	obj/kernel.asm	/^c010b43e:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010b441	obj/kernel.asm	/^c010b441:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010b444	obj/kernel.asm	/^c010b444:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010b447	obj/kernel.asm	/^c010b447:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010b44a	obj/kernel.asm	/^c010b44a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b44f	obj/kernel.asm	/^c010b44f:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c010b452	obj/kernel.asm	/^c010b452:	77 41                	ja     c010b495 <printnum+0xc7>$/;"	l
c010b454	obj/kernel.asm	/^c010b454:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c010b457	obj/kernel.asm	/^c010b457:	72 05                	jb     c010b45e <printnum+0x90>$/;"	l
c010b459	obj/kernel.asm	/^c010b459:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c010b45c	obj/kernel.asm	/^c010b45c:	77 37                	ja     c010b495 <printnum+0xc7>$/;"	l
c010b45e	obj/kernel.asm	/^c010b45e:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c010b461	obj/kernel.asm	/^c010b461:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010b464	obj/kernel.asm	/^c010b464:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b467	obj/kernel.asm	/^c010b467:	ff 75 20             	pushl  0x20(%ebp)$/;"	l
c010b46a	obj/kernel.asm	/^c010b46a:	50                   	push   %eax$/;"	l
c010b46b	obj/kernel.asm	/^c010b46b:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
c010b46e	obj/kernel.asm	/^c010b46e:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010b471	obj/kernel.asm	/^c010b471:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010b474	obj/kernel.asm	/^c010b474:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b477	obj/kernel.asm	/^c010b477:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b47a	obj/kernel.asm	/^c010b47a:	e8 4f ff ff ff       	call   c010b3ce <printnum>$/;"	l
c010b47f	obj/kernel.asm	/^c010b47f:	83 c4 20             	add    $0x20,%esp$/;"	l
c010b482	obj/kernel.asm	/^c010b482:	eb 1b                	jmp    c010b49f <printnum+0xd1>$/;"	l
c010b484	obj/kernel.asm	/^c010b484:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b487	obj/kernel.asm	/^c010b487:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b48a	obj/kernel.asm	/^c010b48a:	ff 75 20             	pushl  0x20(%ebp)$/;"	l
c010b48d	obj/kernel.asm	/^c010b48d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b490	obj/kernel.asm	/^c010b490:	ff d0                	call   *%eax$/;"	l
c010b492	obj/kernel.asm	/^c010b492:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b495	obj/kernel.asm	/^c010b495:	83 6d 1c 01          	subl   $0x1,0x1c(%ebp)$/;"	l
c010b499	obj/kernel.asm	/^c010b499:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c010b49d	obj/kernel.asm	/^c010b49d:	7f e5                	jg     c010b484 <printnum+0xb6>$/;"	l
c010b49f	obj/kernel.asm	/^c010b49f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010b4a2	obj/kernel.asm	/^c010b4a2:	05 24 e3 10 c0       	add    $0xc010e324,%eax$/;"	l
c010b4a7	obj/kernel.asm	/^c010b4a7:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b4aa	obj/kernel.asm	/^c010b4aa:	0f be c0             	movsbl %al,%eax$/;"	l
c010b4ad	obj/kernel.asm	/^c010b4ad:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b4b0	obj/kernel.asm	/^c010b4b0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b4b3	obj/kernel.asm	/^c010b4b3:	50                   	push   %eax$/;"	l
c010b4b4	obj/kernel.asm	/^c010b4b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b4b7	obj/kernel.asm	/^c010b4b7:	ff d0                	call   *%eax$/;"	l
c010b4b9	obj/kernel.asm	/^c010b4b9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b4bc	obj/kernel.asm	/^c010b4bc:	c9                   	leave  $/;"	l
c010b4bd	obj/kernel.asm	/^c010b4bd:	c3                   	ret    $/;"	l
c010b4be	obj/kernel.asm	/^c010b4be <getuint>:$/;"	l
c010b4be	obj/kernel.asm	/^c010b4be:	55                   	push   %ebp$/;"	l
c010b4bf	obj/kernel.asm	/^c010b4bf:	89 e5                	mov    %esp,%ebp$/;"	l
c010b4c1	obj/kernel.asm	/^c010b4c1:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c010b4c5	obj/kernel.asm	/^c010b4c5:	7e 14                	jle    c010b4db <getuint+0x1d>$/;"	l
c010b4c7	obj/kernel.asm	/^c010b4c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b4ca	obj/kernel.asm	/^c010b4ca:	8b 00                	mov    (%eax),%eax$/;"	l
c010b4cc	obj/kernel.asm	/^c010b4cc:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c010b4cf	obj/kernel.asm	/^c010b4cf:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b4d2	obj/kernel.asm	/^c010b4d2:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b4d4	obj/kernel.asm	/^c010b4d4:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b4d7	obj/kernel.asm	/^c010b4d7:	8b 00                	mov    (%eax),%eax$/;"	l
c010b4d9	obj/kernel.asm	/^c010b4d9:	eb 30                	jmp    c010b50b <getuint+0x4d>$/;"	l
c010b4db	obj/kernel.asm	/^c010b4db:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010b4df	obj/kernel.asm	/^c010b4df:	74 16                	je     c010b4f7 <getuint+0x39>$/;"	l
c010b4e1	obj/kernel.asm	/^c010b4e1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b4e4	obj/kernel.asm	/^c010b4e4:	8b 00                	mov    (%eax),%eax$/;"	l
c010b4e6	obj/kernel.asm	/^c010b4e6:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010b4e9	obj/kernel.asm	/^c010b4e9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b4ec	obj/kernel.asm	/^c010b4ec:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b4ee	obj/kernel.asm	/^c010b4ee:	8b 00                	mov    (%eax),%eax$/;"	l
c010b4f0	obj/kernel.asm	/^c010b4f0:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b4f5	obj/kernel.asm	/^c010b4f5:	eb 14                	jmp    c010b50b <getuint+0x4d>$/;"	l
c010b4f7	obj/kernel.asm	/^c010b4f7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b4fa	obj/kernel.asm	/^c010b4fa:	8b 00                	mov    (%eax),%eax$/;"	l
c010b4fc	obj/kernel.asm	/^c010b4fc:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010b4ff	obj/kernel.asm	/^c010b4ff:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b502	obj/kernel.asm	/^c010b502:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b504	obj/kernel.asm	/^c010b504:	8b 00                	mov    (%eax),%eax$/;"	l
c010b506	obj/kernel.asm	/^c010b506:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010b50b	obj/kernel.asm	/^c010b50b:	5d                   	pop    %ebp$/;"	l
c010b50c	obj/kernel.asm	/^c010b50c:	c3                   	ret    $/;"	l
c010b50d	obj/kernel.asm	/^c010b50d <getint>:$/;"	l
c010b50d	obj/kernel.asm	/^c010b50d:	55                   	push   %ebp$/;"	l
c010b50e	obj/kernel.asm	/^c010b50e:	89 e5                	mov    %esp,%ebp$/;"	l
c010b510	obj/kernel.asm	/^c010b510:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c010b514	obj/kernel.asm	/^c010b514:	7e 14                	jle    c010b52a <getint+0x1d>$/;"	l
c010b516	obj/kernel.asm	/^c010b516:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b519	obj/kernel.asm	/^c010b519:	8b 00                	mov    (%eax),%eax$/;"	l
c010b51b	obj/kernel.asm	/^c010b51b:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c010b51e	obj/kernel.asm	/^c010b51e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b521	obj/kernel.asm	/^c010b521:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b523	obj/kernel.asm	/^c010b523:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b526	obj/kernel.asm	/^c010b526:	8b 00                	mov    (%eax),%eax$/;"	l
c010b528	obj/kernel.asm	/^c010b528:	eb 28                	jmp    c010b552 <getint+0x45>$/;"	l
c010b52a	obj/kernel.asm	/^c010b52a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010b52e	obj/kernel.asm	/^c010b52e:	74 12                	je     c010b542 <getint+0x35>$/;"	l
c010b530	obj/kernel.asm	/^c010b530:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b533	obj/kernel.asm	/^c010b533:	8b 00                	mov    (%eax),%eax$/;"	l
c010b535	obj/kernel.asm	/^c010b535:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010b538	obj/kernel.asm	/^c010b538:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b53b	obj/kernel.asm	/^c010b53b:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b53d	obj/kernel.asm	/^c010b53d:	8b 00                	mov    (%eax),%eax$/;"	l
c010b53f	obj/kernel.asm	/^c010b53f:	99                   	cltd   $/;"	l
c010b540	obj/kernel.asm	/^c010b540:	eb 10                	jmp    c010b552 <getint+0x45>$/;"	l
c010b542	obj/kernel.asm	/^c010b542:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b545	obj/kernel.asm	/^c010b545:	8b 00                	mov    (%eax),%eax$/;"	l
c010b547	obj/kernel.asm	/^c010b547:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010b54a	obj/kernel.asm	/^c010b54a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b54d	obj/kernel.asm	/^c010b54d:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b54f	obj/kernel.asm	/^c010b54f:	8b 00                	mov    (%eax),%eax$/;"	l
c010b551	obj/kernel.asm	/^c010b551:	99                   	cltd   $/;"	l
c010b552	obj/kernel.asm	/^c010b552:	5d                   	pop    %ebp$/;"	l
c010b553	obj/kernel.asm	/^c010b553:	c3                   	ret    $/;"	l
c010b554	obj/kernel.asm	/^c010b554 <printfmt>:$/;"	l
c010b554	obj/kernel.asm	/^c010b554:	55                   	push   %ebp$/;"	l
c010b555	obj/kernel.asm	/^c010b555:	89 e5                	mov    %esp,%ebp$/;"	l
c010b557	obj/kernel.asm	/^c010b557:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b55a	obj/kernel.asm	/^c010b55a:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010b55d	obj/kernel.asm	/^c010b55d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b560	obj/kernel.asm	/^c010b560:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b563	obj/kernel.asm	/^c010b563:	50                   	push   %eax$/;"	l
c010b564	obj/kernel.asm	/^c010b564:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010b567	obj/kernel.asm	/^c010b567:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b56a	obj/kernel.asm	/^c010b56a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b56d	obj/kernel.asm	/^c010b56d:	e8 05 00 00 00       	call   c010b577 <vprintfmt>$/;"	l
c010b572	obj/kernel.asm	/^c010b572:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b575	obj/kernel.asm	/^c010b575:	c9                   	leave  $/;"	l
c010b576	obj/kernel.asm	/^c010b576:	c3                   	ret    $/;"	l
c010b577	obj/kernel.asm	/^c010b577 <vprintfmt>:$/;"	l
c010b577	obj/kernel.asm	/^c010b577:	55                   	push   %ebp$/;"	l
c010b578	obj/kernel.asm	/^c010b578:	89 e5                	mov    %esp,%ebp$/;"	l
c010b57a	obj/kernel.asm	/^c010b57a:	56                   	push   %esi$/;"	l
c010b57b	obj/kernel.asm	/^c010b57b:	53                   	push   %ebx$/;"	l
c010b57c	obj/kernel.asm	/^c010b57c:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010b57f	obj/kernel.asm	/^c010b57f:	eb 18                	jmp    c010b599 <vprintfmt+0x22>$/;"	l
c010b581	obj/kernel.asm	/^c010b581:	85 db                	test   %ebx,%ebx$/;"	l
c010b583	obj/kernel.asm	/^c010b583:	75 05                	jne    c010b58a <vprintfmt+0x13>$/;"	l
c010b585	obj/kernel.asm	/^c010b585:	e9 8b 03 00 00       	jmp    c010b915 <vprintfmt+0x39e>$/;"	l
c010b58a	obj/kernel.asm	/^c010b58a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b58d	obj/kernel.asm	/^c010b58d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b590	obj/kernel.asm	/^c010b590:	53                   	push   %ebx$/;"	l
c010b591	obj/kernel.asm	/^c010b591:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b594	obj/kernel.asm	/^c010b594:	ff d0                	call   *%eax$/;"	l
c010b596	obj/kernel.asm	/^c010b596:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b599	obj/kernel.asm	/^c010b599:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b59c	obj/kernel.asm	/^c010b59c:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010b59f	obj/kernel.asm	/^c010b59f:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c010b5a2	obj/kernel.asm	/^c010b5a2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b5a5	obj/kernel.asm	/^c010b5a5:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c010b5a8	obj/kernel.asm	/^c010b5a8:	83 fb 25             	cmp    $0x25,%ebx$/;"	l
c010b5ab	obj/kernel.asm	/^c010b5ab:	75 d4                	jne    c010b581 <vprintfmt+0xa>$/;"	l
c010b5ad	obj/kernel.asm	/^c010b5ad:	c6 45 db 20          	movb   $0x20,-0x25(%ebp)$/;"	l
c010b5b1	obj/kernel.asm	/^c010b5b1:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c010b5b8	obj/kernel.asm	/^c010b5b8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b5bb	obj/kernel.asm	/^c010b5bb:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b5be	obj/kernel.asm	/^c010b5be:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c010b5c5	obj/kernel.asm	/^c010b5c5:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010b5c8	obj/kernel.asm	/^c010b5c8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010b5cb	obj/kernel.asm	/^c010b5cb:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b5ce	obj/kernel.asm	/^c010b5ce:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010b5d1	obj/kernel.asm	/^c010b5d1:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c010b5d4	obj/kernel.asm	/^c010b5d4:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b5d7	obj/kernel.asm	/^c010b5d7:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c010b5da	obj/kernel.asm	/^c010b5da:	8d 43 dd             	lea    -0x23(%ebx),%eax$/;"	l
c010b5dd	obj/kernel.asm	/^c010b5dd:	83 f8 55             	cmp    $0x55,%eax$/;"	l
c010b5e0	obj/kernel.asm	/^c010b5e0:	0f 87 02 03 00 00    	ja     c010b8e8 <vprintfmt+0x371>$/;"	l
c010b5e6	obj/kernel.asm	/^c010b5e6:	8b 04 85 48 e3 10 c0 	mov    -0x3fef1cb8(,%eax,4),%eax$/;"	l
c010b5ed	obj/kernel.asm	/^c010b5ed:	ff e0                	jmp    *%eax$/;"	l
c010b5ef	obj/kernel.asm	/^c010b5ef:	c6 45 db 2d          	movb   $0x2d,-0x25(%ebp)$/;"	l
c010b5f3	obj/kernel.asm	/^c010b5f3:	eb d6                	jmp    c010b5cb <vprintfmt+0x54>$/;"	l
c010b5f5	obj/kernel.asm	/^c010b5f5:	c6 45 db 30          	movb   $0x30,-0x25(%ebp)$/;"	l
c010b5f9	obj/kernel.asm	/^c010b5f9:	eb d0                	jmp    c010b5cb <vprintfmt+0x54>$/;"	l
c010b5fb	obj/kernel.asm	/^c010b5fb:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c010b602	obj/kernel.asm	/^c010b602:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010b605	obj/kernel.asm	/^c010b605:	89 d0                	mov    %edx,%eax$/;"	l
c010b607	obj/kernel.asm	/^c010b607:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010b60a	obj/kernel.asm	/^c010b60a:	01 d0                	add    %edx,%eax$/;"	l
c010b60c	obj/kernel.asm	/^c010b60c:	01 c0                	add    %eax,%eax$/;"	l
c010b60e	obj/kernel.asm	/^c010b60e:	01 d8                	add    %ebx,%eax$/;"	l
c010b610	obj/kernel.asm	/^c010b610:	83 e8 30             	sub    $0x30,%eax$/;"	l
c010b613	obj/kernel.asm	/^c010b613:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b616	obj/kernel.asm	/^c010b616:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b619	obj/kernel.asm	/^c010b619:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b61c	obj/kernel.asm	/^c010b61c:	0f be d8             	movsbl %al,%ebx$/;"	l
c010b61f	obj/kernel.asm	/^c010b61f:	83 fb 2f             	cmp    $0x2f,%ebx$/;"	l
c010b622	obj/kernel.asm	/^c010b622:	7e 0b                	jle    c010b62f <vprintfmt+0xb8>$/;"	l
c010b624	obj/kernel.asm	/^c010b624:	83 fb 39             	cmp    $0x39,%ebx$/;"	l
c010b627	obj/kernel.asm	/^c010b627:	7f 06                	jg     c010b62f <vprintfmt+0xb8>$/;"	l
c010b629	obj/kernel.asm	/^c010b629:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c010b62d	obj/kernel.asm	/^c010b62d:	eb d3                	jmp    c010b602 <vprintfmt+0x8b>$/;"	l
c010b62f	obj/kernel.asm	/^c010b62f:	eb 2e                	jmp    c010b65f <vprintfmt+0xe8>$/;"	l
c010b631	obj/kernel.asm	/^c010b631:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010b634	obj/kernel.asm	/^c010b634:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010b637	obj/kernel.asm	/^c010b637:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010b63a	obj/kernel.asm	/^c010b63a:	8b 00                	mov    (%eax),%eax$/;"	l
c010b63c	obj/kernel.asm	/^c010b63c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b63f	obj/kernel.asm	/^c010b63f:	eb 1e                	jmp    c010b65f <vprintfmt+0xe8>$/;"	l
c010b641	obj/kernel.asm	/^c010b641:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b645	obj/kernel.asm	/^c010b645:	79 07                	jns    c010b64e <vprintfmt+0xd7>$/;"	l
c010b647	obj/kernel.asm	/^c010b647:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c010b64e	obj/kernel.asm	/^c010b64e:	e9 78 ff ff ff       	jmp    c010b5cb <vprintfmt+0x54>$/;"	l
c010b653	obj/kernel.asm	/^c010b653:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
c010b65a	obj/kernel.asm	/^c010b65a:	e9 6c ff ff ff       	jmp    c010b5cb <vprintfmt+0x54>$/;"	l
c010b65f	obj/kernel.asm	/^c010b65f:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b663	obj/kernel.asm	/^c010b663:	79 0d                	jns    c010b672 <vprintfmt+0xfb>$/;"	l
c010b665	obj/kernel.asm	/^c010b665:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b668	obj/kernel.asm	/^c010b668:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b66b	obj/kernel.asm	/^c010b66b:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c010b672	obj/kernel.asm	/^c010b672:	e9 54 ff ff ff       	jmp    c010b5cb <vprintfmt+0x54>$/;"	l
c010b677	obj/kernel.asm	/^c010b677:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
c010b67b	obj/kernel.asm	/^c010b67b:	e9 4b ff ff ff       	jmp    c010b5cb <vprintfmt+0x54>$/;"	l
c010b680	obj/kernel.asm	/^c010b680:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010b683	obj/kernel.asm	/^c010b683:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010b686	obj/kernel.asm	/^c010b686:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010b689	obj/kernel.asm	/^c010b689:	8b 00                	mov    (%eax),%eax$/;"	l
c010b68b	obj/kernel.asm	/^c010b68b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b68e	obj/kernel.asm	/^c010b68e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b691	obj/kernel.asm	/^c010b691:	50                   	push   %eax$/;"	l
c010b692	obj/kernel.asm	/^c010b692:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b695	obj/kernel.asm	/^c010b695:	ff d0                	call   *%eax$/;"	l
c010b697	obj/kernel.asm	/^c010b697:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b69a	obj/kernel.asm	/^c010b69a:	e9 71 02 00 00       	jmp    c010b910 <vprintfmt+0x399>$/;"	l
c010b69f	obj/kernel.asm	/^c010b69f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010b6a2	obj/kernel.asm	/^c010b6a2:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010b6a5	obj/kernel.asm	/^c010b6a5:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010b6a8	obj/kernel.asm	/^c010b6a8:	8b 18                	mov    (%eax),%ebx$/;"	l
c010b6aa	obj/kernel.asm	/^c010b6aa:	85 db                	test   %ebx,%ebx$/;"	l
c010b6ac	obj/kernel.asm	/^c010b6ac:	79 02                	jns    c010b6b0 <vprintfmt+0x139>$/;"	l
c010b6ae	obj/kernel.asm	/^c010b6ae:	f7 db                	neg    %ebx$/;"	l
c010b6b0	obj/kernel.asm	/^c010b6b0:	83 fb 18             	cmp    $0x18,%ebx$/;"	l
c010b6b3	obj/kernel.asm	/^c010b6b3:	7f 0b                	jg     c010b6c0 <vprintfmt+0x149>$/;"	l
c010b6b5	obj/kernel.asm	/^c010b6b5:	8b 34 9d c0 e2 10 c0 	mov    -0x3fef1d40(,%ebx,4),%esi$/;"	l
c010b6bc	obj/kernel.asm	/^c010b6bc:	85 f6                	test   %esi,%esi$/;"	l
c010b6be	obj/kernel.asm	/^c010b6be:	75 19                	jne    c010b6d9 <vprintfmt+0x162>$/;"	l
c010b6c0	obj/kernel.asm	/^c010b6c0:	53                   	push   %ebx$/;"	l
c010b6c1	obj/kernel.asm	/^c010b6c1:	68 35 e3 10 c0       	push   $0xc010e335$/;"	l
c010b6c6	obj/kernel.asm	/^c010b6c6:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b6c9	obj/kernel.asm	/^c010b6c9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b6cc	obj/kernel.asm	/^c010b6cc:	e8 83 fe ff ff       	call   c010b554 <printfmt>$/;"	l
c010b6d1	obj/kernel.asm	/^c010b6d1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b6d4	obj/kernel.asm	/^c010b6d4:	e9 37 02 00 00       	jmp    c010b910 <vprintfmt+0x399>$/;"	l
c010b6d9	obj/kernel.asm	/^c010b6d9:	56                   	push   %esi$/;"	l
c010b6da	obj/kernel.asm	/^c010b6da:	68 3e e3 10 c0       	push   $0xc010e33e$/;"	l
c010b6df	obj/kernel.asm	/^c010b6df:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b6e2	obj/kernel.asm	/^c010b6e2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b6e5	obj/kernel.asm	/^c010b6e5:	e8 6a fe ff ff       	call   c010b554 <printfmt>$/;"	l
c010b6ea	obj/kernel.asm	/^c010b6ea:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b6ed	obj/kernel.asm	/^c010b6ed:	e9 1e 02 00 00       	jmp    c010b910 <vprintfmt+0x399>$/;"	l
c010b6f2	obj/kernel.asm	/^c010b6f2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010b6f5	obj/kernel.asm	/^c010b6f5:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010b6f8	obj/kernel.asm	/^c010b6f8:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010b6fb	obj/kernel.asm	/^c010b6fb:	8b 30                	mov    (%eax),%esi$/;"	l
c010b6fd	obj/kernel.asm	/^c010b6fd:	85 f6                	test   %esi,%esi$/;"	l
c010b6ff	obj/kernel.asm	/^c010b6ff:	75 05                	jne    c010b706 <vprintfmt+0x18f>$/;"	l
c010b701	obj/kernel.asm	/^c010b701:	be 41 e3 10 c0       	mov    $0xc010e341,%esi$/;"	l
c010b706	obj/kernel.asm	/^c010b706:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b70a	obj/kernel.asm	/^c010b70a:	7e 3f                	jle    c010b74b <vprintfmt+0x1d4>$/;"	l
c010b70c	obj/kernel.asm	/^c010b70c:	80 7d db 2d          	cmpb   $0x2d,-0x25(%ebp)$/;"	l
c010b710	obj/kernel.asm	/^c010b710:	74 39                	je     c010b74b <vprintfmt+0x1d4>$/;"	l
c010b712	obj/kernel.asm	/^c010b712:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b715	obj/kernel.asm	/^c010b715:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b718	obj/kernel.asm	/^c010b718:	50                   	push   %eax$/;"	l
c010b719	obj/kernel.asm	/^c010b719:	56                   	push   %esi$/;"	l
c010b71a	obj/kernel.asm	/^c010b71a:	e8 1b f8 ff ff       	call   c010af3a <strnlen>$/;"	l
c010b71f	obj/kernel.asm	/^c010b71f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b722	obj/kernel.asm	/^c010b722:	89 c2                	mov    %eax,%edx$/;"	l
c010b724	obj/kernel.asm	/^c010b724:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b727	obj/kernel.asm	/^c010b727:	29 d0                	sub    %edx,%eax$/;"	l
c010b729	obj/kernel.asm	/^c010b729:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b72c	obj/kernel.asm	/^c010b72c:	eb 17                	jmp    c010b745 <vprintfmt+0x1ce>$/;"	l
c010b72e	obj/kernel.asm	/^c010b72e:	0f be 45 db          	movsbl -0x25(%ebp),%eax$/;"	l
c010b732	obj/kernel.asm	/^c010b732:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b735	obj/kernel.asm	/^c010b735:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b738	obj/kernel.asm	/^c010b738:	50                   	push   %eax$/;"	l
c010b739	obj/kernel.asm	/^c010b739:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b73c	obj/kernel.asm	/^c010b73c:	ff d0                	call   *%eax$/;"	l
c010b73e	obj/kernel.asm	/^c010b73e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b741	obj/kernel.asm	/^c010b741:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c010b745	obj/kernel.asm	/^c010b745:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b749	obj/kernel.asm	/^c010b749:	7f e3                	jg     c010b72e <vprintfmt+0x1b7>$/;"	l
c010b74b	obj/kernel.asm	/^c010b74b:	eb 35                	jmp    c010b782 <vprintfmt+0x20b>$/;"	l
c010b74d	obj/kernel.asm	/^c010b74d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010b751	obj/kernel.asm	/^c010b751:	74 1c                	je     c010b76f <vprintfmt+0x1f8>$/;"	l
c010b753	obj/kernel.asm	/^c010b753:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
c010b756	obj/kernel.asm	/^c010b756:	7e 05                	jle    c010b75d <vprintfmt+0x1e6>$/;"	l
c010b758	obj/kernel.asm	/^c010b758:	83 fb 7e             	cmp    $0x7e,%ebx$/;"	l
c010b75b	obj/kernel.asm	/^c010b75b:	7e 12                	jle    c010b76f <vprintfmt+0x1f8>$/;"	l
c010b75d	obj/kernel.asm	/^c010b75d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b760	obj/kernel.asm	/^c010b760:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b763	obj/kernel.asm	/^c010b763:	6a 3f                	push   $0x3f$/;"	l
c010b765	obj/kernel.asm	/^c010b765:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b768	obj/kernel.asm	/^c010b768:	ff d0                	call   *%eax$/;"	l
c010b76a	obj/kernel.asm	/^c010b76a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b76d	obj/kernel.asm	/^c010b76d:	eb 0f                	jmp    c010b77e <vprintfmt+0x207>$/;"	l
c010b76f	obj/kernel.asm	/^c010b76f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b772	obj/kernel.asm	/^c010b772:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b775	obj/kernel.asm	/^c010b775:	53                   	push   %ebx$/;"	l
c010b776	obj/kernel.asm	/^c010b776:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b779	obj/kernel.asm	/^c010b779:	ff d0                	call   *%eax$/;"	l
c010b77b	obj/kernel.asm	/^c010b77b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b77e	obj/kernel.asm	/^c010b77e:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c010b782	obj/kernel.asm	/^c010b782:	89 f0                	mov    %esi,%eax$/;"	l
c010b784	obj/kernel.asm	/^c010b784:	8d 70 01             	lea    0x1(%eax),%esi$/;"	l
c010b787	obj/kernel.asm	/^c010b787:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b78a	obj/kernel.asm	/^c010b78a:	0f be d8             	movsbl %al,%ebx$/;"	l
c010b78d	obj/kernel.asm	/^c010b78d:	85 db                	test   %ebx,%ebx$/;"	l
c010b78f	obj/kernel.asm	/^c010b78f:	74 10                	je     c010b7a1 <vprintfmt+0x22a>$/;"	l
c010b791	obj/kernel.asm	/^c010b791:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010b795	obj/kernel.asm	/^c010b795:	78 b6                	js     c010b74d <vprintfmt+0x1d6>$/;"	l
c010b797	obj/kernel.asm	/^c010b797:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
c010b79b	obj/kernel.asm	/^c010b79b:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010b79f	obj/kernel.asm	/^c010b79f:	79 ac                	jns    c010b74d <vprintfmt+0x1d6>$/;"	l
c010b7a1	obj/kernel.asm	/^c010b7a1:	eb 14                	jmp    c010b7b7 <vprintfmt+0x240>$/;"	l
c010b7a3	obj/kernel.asm	/^c010b7a3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b7a6	obj/kernel.asm	/^c010b7a6:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b7a9	obj/kernel.asm	/^c010b7a9:	6a 20                	push   $0x20$/;"	l
c010b7ab	obj/kernel.asm	/^c010b7ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b7ae	obj/kernel.asm	/^c010b7ae:	ff d0                	call   *%eax$/;"	l
c010b7b0	obj/kernel.asm	/^c010b7b0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b7b3	obj/kernel.asm	/^c010b7b3:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c010b7b7	obj/kernel.asm	/^c010b7b7:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010b7bb	obj/kernel.asm	/^c010b7bb:	7f e6                	jg     c010b7a3 <vprintfmt+0x22c>$/;"	l
c010b7bd	obj/kernel.asm	/^c010b7bd:	e9 4e 01 00 00       	jmp    c010b910 <vprintfmt+0x399>$/;"	l
c010b7c2	obj/kernel.asm	/^c010b7c2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b7c5	obj/kernel.asm	/^c010b7c5:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010b7c8	obj/kernel.asm	/^c010b7c8:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010b7cb	obj/kernel.asm	/^c010b7cb:	50                   	push   %eax$/;"	l
c010b7cc	obj/kernel.asm	/^c010b7cc:	e8 3c fd ff ff       	call   c010b50d <getint>$/;"	l
c010b7d1	obj/kernel.asm	/^c010b7d1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b7d4	obj/kernel.asm	/^c010b7d4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b7d7	obj/kernel.asm	/^c010b7d7:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010b7da	obj/kernel.asm	/^c010b7da:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b7dd	obj/kernel.asm	/^c010b7dd:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b7e0	obj/kernel.asm	/^c010b7e0:	85 d2                	test   %edx,%edx$/;"	l
c010b7e2	obj/kernel.asm	/^c010b7e2:	79 23                	jns    c010b807 <vprintfmt+0x290>$/;"	l
c010b7e4	obj/kernel.asm	/^c010b7e4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b7e7	obj/kernel.asm	/^c010b7e7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b7ea	obj/kernel.asm	/^c010b7ea:	6a 2d                	push   $0x2d$/;"	l
c010b7ec	obj/kernel.asm	/^c010b7ec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b7ef	obj/kernel.asm	/^c010b7ef:	ff d0                	call   *%eax$/;"	l
c010b7f1	obj/kernel.asm	/^c010b7f1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b7f4	obj/kernel.asm	/^c010b7f4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b7f7	obj/kernel.asm	/^c010b7f7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b7fa	obj/kernel.asm	/^c010b7fa:	f7 d8                	neg    %eax$/;"	l
c010b7fc	obj/kernel.asm	/^c010b7fc:	83 d2 00             	adc    $0x0,%edx$/;"	l
c010b7ff	obj/kernel.asm	/^c010b7ff:	f7 da                	neg    %edx$/;"	l
c010b801	obj/kernel.asm	/^c010b801:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b804	obj/kernel.asm	/^c010b804:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010b807	obj/kernel.asm	/^c010b807:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c010b80e	obj/kernel.asm	/^c010b80e:	e9 9f 00 00 00       	jmp    c010b8b2 <vprintfmt+0x33b>$/;"	l
c010b813	obj/kernel.asm	/^c010b813:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b816	obj/kernel.asm	/^c010b816:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010b819	obj/kernel.asm	/^c010b819:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010b81c	obj/kernel.asm	/^c010b81c:	50                   	push   %eax$/;"	l
c010b81d	obj/kernel.asm	/^c010b81d:	e8 9c fc ff ff       	call   c010b4be <getuint>$/;"	l
c010b822	obj/kernel.asm	/^c010b822:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b825	obj/kernel.asm	/^c010b825:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b828	obj/kernel.asm	/^c010b828:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010b82b	obj/kernel.asm	/^c010b82b:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c010b832	obj/kernel.asm	/^c010b832:	eb 7e                	jmp    c010b8b2 <vprintfmt+0x33b>$/;"	l
c010b834	obj/kernel.asm	/^c010b834:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b837	obj/kernel.asm	/^c010b837:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010b83a	obj/kernel.asm	/^c010b83a:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010b83d	obj/kernel.asm	/^c010b83d:	50                   	push   %eax$/;"	l
c010b83e	obj/kernel.asm	/^c010b83e:	e8 7b fc ff ff       	call   c010b4be <getuint>$/;"	l
c010b843	obj/kernel.asm	/^c010b843:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b846	obj/kernel.asm	/^c010b846:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b849	obj/kernel.asm	/^c010b849:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010b84c	obj/kernel.asm	/^c010b84c:	c7 45 ec 08 00 00 00 	movl   $0x8,-0x14(%ebp)$/;"	l
c010b853	obj/kernel.asm	/^c010b853:	eb 5d                	jmp    c010b8b2 <vprintfmt+0x33b>$/;"	l
c010b855	obj/kernel.asm	/^c010b855:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b858	obj/kernel.asm	/^c010b858:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b85b	obj/kernel.asm	/^c010b85b:	6a 30                	push   $0x30$/;"	l
c010b85d	obj/kernel.asm	/^c010b85d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b860	obj/kernel.asm	/^c010b860:	ff d0                	call   *%eax$/;"	l
c010b862	obj/kernel.asm	/^c010b862:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b865	obj/kernel.asm	/^c010b865:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b868	obj/kernel.asm	/^c010b868:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b86b	obj/kernel.asm	/^c010b86b:	6a 78                	push   $0x78$/;"	l
c010b86d	obj/kernel.asm	/^c010b86d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b870	obj/kernel.asm	/^c010b870:	ff d0                	call   *%eax$/;"	l
c010b872	obj/kernel.asm	/^c010b872:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b875	obj/kernel.asm	/^c010b875:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010b878	obj/kernel.asm	/^c010b878:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c010b87b	obj/kernel.asm	/^c010b87b:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c010b87e	obj/kernel.asm	/^c010b87e:	8b 00                	mov    (%eax),%eax$/;"	l
c010b880	obj/kernel.asm	/^c010b880:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b883	obj/kernel.asm	/^c010b883:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b88a	obj/kernel.asm	/^c010b88a:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c010b891	obj/kernel.asm	/^c010b891:	eb 1f                	jmp    c010b8b2 <vprintfmt+0x33b>$/;"	l
c010b893	obj/kernel.asm	/^c010b893:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b896	obj/kernel.asm	/^c010b896:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010b899	obj/kernel.asm	/^c010b899:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010b89c	obj/kernel.asm	/^c010b89c:	50                   	push   %eax$/;"	l
c010b89d	obj/kernel.asm	/^c010b89d:	e8 1c fc ff ff       	call   c010b4be <getuint>$/;"	l
c010b8a2	obj/kernel.asm	/^c010b8a2:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b8a5	obj/kernel.asm	/^c010b8a5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b8a8	obj/kernel.asm	/^c010b8a8:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010b8ab	obj/kernel.asm	/^c010b8ab:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c010b8b2	obj/kernel.asm	/^c010b8b2:	0f be 55 db          	movsbl -0x25(%ebp),%edx$/;"	l
c010b8b6	obj/kernel.asm	/^c010b8b6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b8b9	obj/kernel.asm	/^c010b8b9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b8bc	obj/kernel.asm	/^c010b8bc:	52                   	push   %edx$/;"	l
c010b8bd	obj/kernel.asm	/^c010b8bd:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010b8c0	obj/kernel.asm	/^c010b8c0:	50                   	push   %eax$/;"	l
c010b8c1	obj/kernel.asm	/^c010b8c1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010b8c4	obj/kernel.asm	/^c010b8c4:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010b8c7	obj/kernel.asm	/^c010b8c7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b8ca	obj/kernel.asm	/^c010b8ca:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b8cd	obj/kernel.asm	/^c010b8cd:	e8 fc fa ff ff       	call   c010b3ce <printnum>$/;"	l
c010b8d2	obj/kernel.asm	/^c010b8d2:	83 c4 20             	add    $0x20,%esp$/;"	l
c010b8d5	obj/kernel.asm	/^c010b8d5:	eb 39                	jmp    c010b910 <vprintfmt+0x399>$/;"	l
c010b8d7	obj/kernel.asm	/^c010b8d7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b8da	obj/kernel.asm	/^c010b8da:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b8dd	obj/kernel.asm	/^c010b8dd:	53                   	push   %ebx$/;"	l
c010b8de	obj/kernel.asm	/^c010b8de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8e1	obj/kernel.asm	/^c010b8e1:	ff d0                	call   *%eax$/;"	l
c010b8e3	obj/kernel.asm	/^c010b8e3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b8e6	obj/kernel.asm	/^c010b8e6:	eb 28                	jmp    c010b910 <vprintfmt+0x399>$/;"	l
c010b8e8	obj/kernel.asm	/^c010b8e8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b8eb	obj/kernel.asm	/^c010b8eb:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b8ee	obj/kernel.asm	/^c010b8ee:	6a 25                	push   $0x25$/;"	l
c010b8f0	obj/kernel.asm	/^c010b8f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8f3	obj/kernel.asm	/^c010b8f3:	ff d0                	call   *%eax$/;"	l
c010b8f5	obj/kernel.asm	/^c010b8f5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b8f8	obj/kernel.asm	/^c010b8f8:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010b8fc	obj/kernel.asm	/^c010b8fc:	eb 04                	jmp    c010b902 <vprintfmt+0x38b>$/;"	l
c010b8fe	obj/kernel.asm	/^c010b8fe:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c010b902	obj/kernel.asm	/^c010b902:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010b905	obj/kernel.asm	/^c010b905:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010b908	obj/kernel.asm	/^c010b908:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010b90b	obj/kernel.asm	/^c010b90b:	3c 25                	cmp    $0x25,%al$/;"	l
c010b90d	obj/kernel.asm	/^c010b90d:	75 ef                	jne    c010b8fe <vprintfmt+0x387>$/;"	l
c010b90f	obj/kernel.asm	/^c010b90f:	90                   	nop$/;"	l
c010b910	obj/kernel.asm	/^c010b910:	e9 6a fc ff ff       	jmp    c010b57f <vprintfmt+0x8>$/;"	l
c010b915	obj/kernel.asm	/^c010b915:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c010b918	obj/kernel.asm	/^c010b918:	5b                   	pop    %ebx$/;"	l
c010b919	obj/kernel.asm	/^c010b919:	5e                   	pop    %esi$/;"	l
c010b91a	obj/kernel.asm	/^c010b91a:	5d                   	pop    %ebp$/;"	l
c010b91b	obj/kernel.asm	/^c010b91b:	c3                   	ret    $/;"	l
c010b91c	obj/kernel.asm	/^c010b91c <sprintputch>:$/;"	l
c010b91c	obj/kernel.asm	/^c010b91c:	55                   	push   %ebp$/;"	l
c010b91d	obj/kernel.asm	/^c010b91d:	89 e5                	mov    %esp,%ebp$/;"	l
c010b91f	obj/kernel.asm	/^c010b91f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b922	obj/kernel.asm	/^c010b922:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010b925	obj/kernel.asm	/^c010b925:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010b928	obj/kernel.asm	/^c010b928:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b92b	obj/kernel.asm	/^c010b92b:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010b92e	obj/kernel.asm	/^c010b92e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b931	obj/kernel.asm	/^c010b931:	8b 10                	mov    (%eax),%edx$/;"	l
c010b933	obj/kernel.asm	/^c010b933:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b936	obj/kernel.asm	/^c010b936:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b939	obj/kernel.asm	/^c010b939:	39 c2                	cmp    %eax,%edx$/;"	l
c010b93b	obj/kernel.asm	/^c010b93b:	73 12                	jae    c010b94f <sprintputch+0x33>$/;"	l
c010b93d	obj/kernel.asm	/^c010b93d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b940	obj/kernel.asm	/^c010b940:	8b 00                	mov    (%eax),%eax$/;"	l
c010b942	obj/kernel.asm	/^c010b942:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c010b945	obj/kernel.asm	/^c010b945:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010b948	obj/kernel.asm	/^c010b948:	89 0a                	mov    %ecx,(%edx)$/;"	l
c010b94a	obj/kernel.asm	/^c010b94a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b94d	obj/kernel.asm	/^c010b94d:	88 10                	mov    %dl,(%eax)$/;"	l
c010b94f	obj/kernel.asm	/^c010b94f:	5d                   	pop    %ebp$/;"	l
c010b950	obj/kernel.asm	/^c010b950:	c3                   	ret    $/;"	l
c010b951	obj/kernel.asm	/^c010b951 <snprintf>:$/;"	l
c010b951	obj/kernel.asm	/^c010b951:	55                   	push   %ebp$/;"	l
c010b952	obj/kernel.asm	/^c010b952:	89 e5                	mov    %esp,%ebp$/;"	l
c010b954	obj/kernel.asm	/^c010b954:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b957	obj/kernel.asm	/^c010b957:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c010b95a	obj/kernel.asm	/^c010b95a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b95d	obj/kernel.asm	/^c010b95d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b960	obj/kernel.asm	/^c010b960:	50                   	push   %eax$/;"	l
c010b961	obj/kernel.asm	/^c010b961:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010b964	obj/kernel.asm	/^c010b964:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b967	obj/kernel.asm	/^c010b967:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b96a	obj/kernel.asm	/^c010b96a:	e8 0b 00 00 00       	call   c010b97a <vsnprintf>$/;"	l
c010b96f	obj/kernel.asm	/^c010b96f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b972	obj/kernel.asm	/^c010b972:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b975	obj/kernel.asm	/^c010b975:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b978	obj/kernel.asm	/^c010b978:	c9                   	leave  $/;"	l
c010b979	obj/kernel.asm	/^c010b979:	c3                   	ret    $/;"	l
c010b97a	obj/kernel.asm	/^c010b97a <vsnprintf>:$/;"	l
c010b97a	obj/kernel.asm	/^c010b97a:	55                   	push   %ebp$/;"	l
c010b97b	obj/kernel.asm	/^c010b97b:	89 e5                	mov    %esp,%ebp$/;"	l
c010b97d	obj/kernel.asm	/^c010b97d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b980	obj/kernel.asm	/^c010b980:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b983	obj/kernel.asm	/^c010b983:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b986	obj/kernel.asm	/^c010b986:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b989	obj/kernel.asm	/^c010b989:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010b98c	obj/kernel.asm	/^c010b98c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b98f	obj/kernel.asm	/^c010b98f:	01 d0                	add    %edx,%eax$/;"	l
c010b991	obj/kernel.asm	/^c010b991:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b994	obj/kernel.asm	/^c010b994:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b99b	obj/kernel.asm	/^c010b99b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b99f	obj/kernel.asm	/^c010b99f:	74 0a                	je     c010b9ab <vsnprintf+0x31>$/;"	l
c010b9a1	obj/kernel.asm	/^c010b9a1:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010b9a4	obj/kernel.asm	/^c010b9a4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b9a7	obj/kernel.asm	/^c010b9a7:	39 c2                	cmp    %eax,%edx$/;"	l
c010b9a9	obj/kernel.asm	/^c010b9a9:	76 07                	jbe    c010b9b2 <vsnprintf+0x38>$/;"	l
c010b9ab	obj/kernel.asm	/^c010b9ab:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010b9b0	obj/kernel.asm	/^c010b9b0:	eb 20                	jmp    c010b9d2 <vsnprintf+0x58>$/;"	l
c010b9b2	obj/kernel.asm	/^c010b9b2:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010b9b5	obj/kernel.asm	/^c010b9b5:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010b9b8	obj/kernel.asm	/^c010b9b8:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010b9bb	obj/kernel.asm	/^c010b9bb:	50                   	push   %eax$/;"	l
c010b9bc	obj/kernel.asm	/^c010b9bc:	68 1c b9 10 c0       	push   $0xc010b91c$/;"	l
c010b9c1	obj/kernel.asm	/^c010b9c1:	e8 b1 fb ff ff       	call   c010b577 <vprintfmt>$/;"	l
c010b9c6	obj/kernel.asm	/^c010b9c6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b9c9	obj/kernel.asm	/^c010b9c9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b9cc	obj/kernel.asm	/^c010b9cc:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c010b9cf	obj/kernel.asm	/^c010b9cf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b9d2	obj/kernel.asm	/^c010b9d2:	c9                   	leave  $/;"	l
c010b9d3	obj/kernel.asm	/^c010b9d3:	c3                   	ret    $/;"	l
c010b9d4	obj/kernel.asm	/^c010b9d4 <hash32>:$/;"	l
c010b9d4	obj/kernel.asm	/^c010b9d4:	55                   	push   %ebp$/;"	l
c010b9d5	obj/kernel.asm	/^c010b9d5:	89 e5                	mov    %esp,%ebp$/;"	l
c010b9d7	obj/kernel.asm	/^c010b9d7:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010b9da	obj/kernel.asm	/^c010b9da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b9dd	obj/kernel.asm	/^c010b9dd:	69 c0 01 00 37 9e    	imul   $0x9e370001,%eax,%eax$/;"	l
c010b9e3	obj/kernel.asm	/^c010b9e3:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010b9e6	obj/kernel.asm	/^c010b9e6:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
c010b9eb	obj/kernel.asm	/^c010b9eb:	2b 45 0c             	sub    0xc(%ebp),%eax$/;"	l
c010b9ee	obj/kernel.asm	/^c010b9ee:	89 c2                	mov    %eax,%edx$/;"	l
c010b9f0	obj/kernel.asm	/^c010b9f0:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b9f3	obj/kernel.asm	/^c010b9f3:	89 d1                	mov    %edx,%ecx$/;"	l
c010b9f5	obj/kernel.asm	/^c010b9f5:	d3 e8                	shr    %cl,%eax$/;"	d
c010b9f7	obj/kernel.asm	/^c010b9f7:	c9                   	leave  $/;"	l
c010b9f8	obj/kernel.asm	/^c010b9f8:	c3                   	ret    $/;"	l
c010b9f9	obj/kernel.asm	/^c010b9f9 <rand>:$/;"	l
c010b9f9	obj/kernel.asm	/^c010b9f9:	55                   	push   %ebp$/;"	l
c010b9fa	obj/kernel.asm	/^c010b9fa:	89 e5                	mov    %esp,%ebp$/;"	l
c010b9fc	obj/kernel.asm	/^c010b9fc:	57                   	push   %edi$/;"	l
c010b9fd	obj/kernel.asm	/^c010b9fd:	56                   	push   %esi$/;"	l
c010b9fe	obj/kernel.asm	/^c010b9fe:	53                   	push   %ebx$/;"	l
c010b9ff	obj/kernel.asm	/^c010b9ff:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010ba02	obj/kernel.asm	/^c010ba02:	a1 00 cf 12 c0       	mov    0xc012cf00,%eax$/;"	l
c010ba07	obj/kernel.asm	/^c010ba07:	8b 15 04 cf 12 c0    	mov    0xc012cf04,%edx$/;"	l
c010ba0d	obj/kernel.asm	/^c010ba0d:	69 fa 6d e6 ec de    	imul   $0xdeece66d,%edx,%edi$/;"	l
c010ba13	obj/kernel.asm	/^c010ba13:	6b f0 05             	imul   $0x5,%eax,%esi$/;"	l
c010ba16	obj/kernel.asm	/^c010ba16:	01 fe                	add    %edi,%esi$/;"	l
c010ba18	obj/kernel.asm	/^c010ba18:	bf 6d e6 ec de       	mov    $0xdeece66d,%edi$/;"	l
c010ba1d	obj/kernel.asm	/^c010ba1d:	f7 e7                	mul    %edi$/;"	l
c010ba1f	obj/kernel.asm	/^c010ba1f:	01 d6                	add    %edx,%esi$/;"	l
c010ba21	obj/kernel.asm	/^c010ba21:	89 f2                	mov    %esi,%edx$/;"	l
c010ba23	obj/kernel.asm	/^c010ba23:	83 c0 0b             	add    $0xb,%eax$/;"	l
c010ba26	obj/kernel.asm	/^c010ba26:	83 d2 00             	adc    $0x0,%edx$/;"	l
c010ba29	obj/kernel.asm	/^c010ba29:	89 c7                	mov    %eax,%edi$/;"	l
c010ba2b	obj/kernel.asm	/^c010ba2b:	83 e7 ff             	and    $0xffffffff,%edi$/;"	l
c010ba2e	obj/kernel.asm	/^c010ba2e:	89 f9                	mov    %edi,%ecx$/;"	l
c010ba30	obj/kernel.asm	/^c010ba30:	0f b7 da             	movzwl %dx,%ebx$/;"	l
c010ba33	obj/kernel.asm	/^c010ba33:	89 0d 00 cf 12 c0    	mov    %ecx,0xc012cf00$/;"	l
c010ba39	obj/kernel.asm	/^c010ba39:	89 1d 04 cf 12 c0    	mov    %ebx,0xc012cf04$/;"	l
c010ba3f	obj/kernel.asm	/^c010ba3f:	a1 00 cf 12 c0       	mov    0xc012cf00,%eax$/;"	l
c010ba44	obj/kernel.asm	/^c010ba44:	8b 15 04 cf 12 c0    	mov    0xc012cf04,%edx$/;"	l
c010ba4a	obj/kernel.asm	/^c010ba4a:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c010ba4e	obj/kernel.asm	/^c010ba4e:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c010ba51	obj/kernel.asm	/^c010ba51:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010ba54	obj/kernel.asm	/^c010ba54:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010ba57	obj/kernel.asm	/^c010ba57:	c7 45 dc 00 00 00 80 	movl   $0x80000000,-0x24(%ebp)$/;"	l
c010ba5e	obj/kernel.asm	/^c010ba5e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ba61	obj/kernel.asm	/^c010ba61:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010ba64	obj/kernel.asm	/^c010ba64:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010ba67	obj/kernel.asm	/^c010ba67:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010ba6a	obj/kernel.asm	/^c010ba6a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ba6d	obj/kernel.asm	/^c010ba6d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ba70	obj/kernel.asm	/^c010ba70:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010ba74	obj/kernel.asm	/^c010ba74:	74 1c                	je     c010ba92 <rand+0x99>$/;"	l
c010ba76	obj/kernel.asm	/^c010ba76:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ba79	obj/kernel.asm	/^c010ba79:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010ba7e	obj/kernel.asm	/^c010ba7e:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c010ba81	obj/kernel.asm	/^c010ba81:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010ba84	obj/kernel.asm	/^c010ba84:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ba87	obj/kernel.asm	/^c010ba87:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010ba8c	obj/kernel.asm	/^c010ba8c:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c010ba8f	obj/kernel.asm	/^c010ba8f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ba92	obj/kernel.asm	/^c010ba92:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010ba95	obj/kernel.asm	/^c010ba95:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010ba98	obj/kernel.asm	/^c010ba98:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c010ba9b	obj/kernel.asm	/^c010ba9b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010ba9e	obj/kernel.asm	/^c010ba9e:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010baa1	obj/kernel.asm	/^c010baa1:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010baa4	obj/kernel.asm	/^c010baa4:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010baa7	obj/kernel.asm	/^c010baa7:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010baaa	obj/kernel.asm	/^c010baaa:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010baad	obj/kernel.asm	/^c010baad:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010bab0	obj/kernel.asm	/^c010bab0:	83 c4 24             	add    $0x24,%esp$/;"	l
c010bab3	obj/kernel.asm	/^c010bab3:	5b                   	pop    %ebx$/;"	l
c010bab4	obj/kernel.asm	/^c010bab4:	5e                   	pop    %esi$/;"	l
c010bab5	obj/kernel.asm	/^c010bab5:	5f                   	pop    %edi$/;"	l
c010bab6	obj/kernel.asm	/^c010bab6:	5d                   	pop    %ebp$/;"	l
c010bab7	obj/kernel.asm	/^c010bab7:	c3                   	ret    $/;"	l
c010bab8	obj/kernel.asm	/^c010bab8 <srand>:$/;"	l
c010bab8	obj/kernel.asm	/^c010bab8:	55                   	push   %ebp$/;"	l
c010bab9	obj/kernel.asm	/^c010bab9:	89 e5                	mov    %esp,%ebp$/;"	l
c010babb	obj/kernel.asm	/^c010babb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010babe	obj/kernel.asm	/^c010babe:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010bac3	obj/kernel.asm	/^c010bac3:	a3 00 cf 12 c0       	mov    %eax,0xc012cf00$/;"	l
c010bac8	obj/kernel.asm	/^c010bac8:	89 15 04 cf 12 c0    	mov    %edx,0xc012cf04$/;"	l
c010bace	obj/kernel.asm	/^c010bace:	5d                   	pop    %ebp$/;"	l
c010bacf	obj/kernel.asm	/^c010bacf:	c3                   	ret    $/;"	l
cc_compile	tools/function.mk	/^cc_compile = $(eval $(call do_cc_compile,$(1),$(2),$(3),$(4)))$/;"	m
cc_template	tools/function.mk	/^define cc_template$/;"	m
cga_init	kern/driver/console.c	/^cga_init(void) {$/;"	f	file:
cga_putc	kern/driver/console.c	/^cga_putc(int c) {$/;"	f	file:
cgtype	Makefile	/^cgtype = $(patsubst %.$(2),%.$(3),$(1))$/;"	m
ch	obj/kernel.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/badarg.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/badsegment.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/divzero.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/exit.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/faultread.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/faultreadkernel.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/forktest.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/forktree.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/hello.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/matrix.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/pgdir.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/priority.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/softint.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/spin.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/testbss.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/waitkill.asm	/^                ch = *fmt;$/;"	d
ch	obj/user/yield.asm	/^                ch = *fmt;$/;"	d
change_bit	libs/atomic.h	/^change_bit(int nr, volatile void *addr) {$/;"	f
channels	kern/driver/ide.c	/^} channels[2] = {$/;"	v	typeref:struct:__anon4	file:
char	obj/kernel.asm	/^char *$/;"	l
char	obj/user/badarg.asm	/^char *$/;"	l
char	obj/user/badsegment.asm	/^char *$/;"	l
char	obj/user/divzero.asm	/^char *$/;"	l
char	obj/user/exit.asm	/^char *$/;"	l
char	obj/user/faultread.asm	/^char *$/;"	l
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
char	obj/user/forktest.asm	/^char *$/;"	l
char	obj/user/forktree.asm	/^char *$/;"	l
char	obj/user/hello.asm	/^char *$/;"	l
char	obj/user/matrix.asm	/^char *$/;"	l
char	obj/user/pgdir.asm	/^char *$/;"	l
char	obj/user/priority.asm	/^char *$/;"	l
char	obj/user/softint.asm	/^char *$/;"	l
char	obj/user/spin.asm	/^char *$/;"	l
char	obj/user/testbss.asm	/^char *$/;"	l
char	obj/user/waitkill.asm	/^char *$/;"	l
char	obj/user/yield.asm	/^char *$/;"	l
charcode	kern/driver/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
check	kern/mm/pmm.h	/^    void (*check)(void);                              \/\/ check the correctness of XXX_pmm_manager $/;"	m	struct:pmm_manager
check_alloc_page	kern/mm/pmm.c	/^check_alloc_page(void) {$/;"	f	file:
check_boot_pgdir	kern/mm/pmm.c	/^check_boot_pgdir(void) {$/;"	f	file:
check_content_access	kern/mm/swap.c	/^check_content_access(void)$/;"	f	file:
check_content_set	kern/mm/swap.c	/^check_content_set(void)$/;"	f	file:
check_mm_struct	kern/mm/vmm.c	/^struct mm_struct *check_mm_struct;$/;"	v	typeref:struct:mm_struct
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = mm;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = mm_create();$/;"	d
check_pgdir	kern/mm/pmm.c	/^check_pgdir(void) {$/;"	f	file:
check_pgfault	kern/mm/vmm.c	/^check_pgfault(void) {$/;"	f	file:
check_ptep	kern/mm/swap.c	/^pte_t * check_ptep[CHECK_VALID_PHY_PAGE_NUM];$/;"	v
check_regexps	tools/grade.sh	/^check_regexps() {$/;"	f
check_result	tools/grade.sh	/^check_result() {$/;"	f
check_rp	kern/mm/swap.c	/^struct Page * check_rp[CHECK_VALID_PHY_PAGE_NUM];$/;"	v	typeref:struct:Page
check_swap	kern/mm/swap.c	/^check_swap(void)$/;"	f	file:
check_swap	kern/mm/swap.h	/^     int (*check_swap)(void);     $/;"	m	struct:swap_manager
check_swap_addr	kern/mm/swap.c	/^unsigned int check_swap_addr[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
check_vma_overlap	kern/mm/vmm.c	/^check_vma_overlap(struct vma_struct *prev, struct vma_struct *next) {$/;"	f	file:
check_vma_struct	kern/mm/vmm.c	/^check_vma_struct(void) {$/;"	f	file:
check_vmm	kern/mm/vmm.c	/^check_vmm(void) {$/;"	f	file:
clear_bit	libs/atomic.h	/^clear_bit(int nr, volatile void *addr) {$/;"	f
cli	libs/x86.h	/^cli(void) {$/;"	f
clock_init	kern/driver/clock.c	/^clock_init(void) {$/;"	f
cnt	libs/printfmt.c	/^    int cnt;            \/\/ the number of characters that have been placed in this buffer$/;"	m	struct:sprintbuf	file:
cnt	obj/kernel.asm	/^    cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/badarg.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/badsegment.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/divzero.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/exit.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/faultread.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/faultreadkernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/forktest.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/forktree.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/hello.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/matrix.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/pgdir.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/priority.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/softint.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/spin.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/testbss.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/waitkill.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cnt	obj/user/yield.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
command	kern/debug/kmonitor.c	/^struct command {$/;"	s	file:
commands	kern/debug/kmonitor.c	/^static struct command commands[] = {$/;"	v	typeref:struct:command	file:
compare_f	libs/skew_heap.h	/^typedef int(*compare_f)(void *a, void *b);$/;"	t
cons	kern/driver/console.c	/^} cons;$/;"	v	typeref:struct:__anon5	file:
cons_getc	kern/driver/console.c	/^cons_getc(void) {$/;"	f
cons_init	kern/driver/console.c	/^cons_init(void) {$/;"	f
cons_intr	kern/driver/console.c	/^cons_intr(int (*proc)(void)) {$/;"	f	file:
cons_putc	kern/driver/console.c	/^cons_putc(int c) {$/;"	f
const	obj/kernel.asm	/^        const struct userstabdata *usd = (struct userstabdata *)USTAB;$/;"	t
const	obj/kernel.asm	/^    const struct stab *stabs, *stab_end;$/;"	t
const	obj/user/forktest.asm	/^const int max_child = 32;$/;"	l
const	obj/user/matrix.asm	/^const int total = 21;$/;"	l
cont	boot/bootasm.S	/^cont:$/;"	l
cont	obj/bootblock.asm	/^cont:$/;"	l
context	kern/process/proc.h	/^    struct context context;                     \/\/ Switch here to run process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::context
context	kern/process/proc.h	/^struct context {$/;"	s
copy_from_user	kern/mm/vmm.c	/^copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable) {$/;"	f
copy_mm	kern/process/proc.c	/^copy_mm(uint32_t clone_flags, struct proc_struct *proc) {$/;"	f	file:
copy_range	kern/mm/pmm.c	/^copy_range(pde_t *to, pde_t *from, uintptr_t start, uintptr_t end, bool share) {$/;"	f
copy_thread	kern/process/proc.c	/^copy_thread(struct proc_struct *proc, uintptr_t esp, struct trapframe *tf) {$/;"	f	file:
copy_to_user	kern/mm/vmm.c	/^copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len) {$/;"	f
cp	obj/kernel.asm	/^        cp = (uint16_t*)(MONO_BUF + KERNBASE);$/;"	d
cprintf	kern/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cprintf	user/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
cpu_idle	kern/process/proc.c	/^cpu_idle(void) {$/;"	f
cputch	kern/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputch	user/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputchar	kern/libs/stdio.c	/^cputchar(int c) {$/;"	f
cputs	kern/libs/stdio.c	/^cputs(const char *str) {$/;"	f
cputs	user/libs/stdio.c	/^cputs(const char *str) {$/;"	f
cr3	kern/process/proc.h	/^    uintptr_t cr3;                              \/\/ CR3 register: the base addr of Page Directroy Table(PDT)$/;"	m	struct:proc_struct
create_target	tools/function.mk	/^create_target = $(eval $(call do_create_target,$(1),$(2),$(3),$(4),$(5)))$/;"	m
create_target_cc	Makefile	/^create_target_cc = $(call create_target,$(1),$(2),$(3),$(CC),$(CFLAGS))$/;"	m
create_target_host	Makefile	/^create_target_host = $(call create_target,$(1),$(2),$(3),$(HOSTCC),$(HOSTCFLAGS))$/;"	m
crt_buf	kern/driver/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_buf	obj/kernel.asm	/^    crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	kern/driver/console.c	/^static uint16_t crt_pos;$/;"	v	file:
crt_pos	obj/kernel.asm	/^    crt_pos = pos;$/;"	d
ctlmap	kern/driver/console.c	/^static uint8_t ctlmap[256] = {$/;"	v	file:
ctrl	kern/driver/ide.c	/^    unsigned short ctrl;        \/\/ Control Base$/;"	m	struct:__anon4	file:
cur	obj/kernel.asm	/^				cur = aligned;$/;"	d
cur	obj/kernel.asm	/^			cur = (slob_t *)__slob_get_free_page(gfp);$/;"	d
cur	obj/kernel.asm	/^			cur = slobfree;$/;"	d
current	kern/process/proc.c	/^struct proc_struct *current = NULL;$/;"	v	typeref:struct:proc_struct
current	obj/kernel.asm	/^            current = proc;$/;"	d
current	obj/kernel.asm	/^    current = idleproc;$/;"	d
data	obj/kernel.asm	/^        data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kernel.asm	/^    data = inb(KBDATAP);$/;"	d
debuginfo_eip	kern/debug/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct eipdebuginfo *info) {$/;"	f
default	obj/kernel.asm	/^        default:$/;"	l
default	obj/kernel.asm	/^    default:$/;"	l
default	obj/user/badarg.asm	/^        default:$/;"	l
default	obj/user/badsegment.asm	/^        default:$/;"	l
default	obj/user/divzero.asm	/^        default:$/;"	l
default	obj/user/exit.asm	/^        default:$/;"	l
default	obj/user/faultread.asm	/^        default:$/;"	l
default	obj/user/faultreadkernel.asm	/^        default:$/;"	l
default	obj/user/forktest.asm	/^        default:$/;"	l
default	obj/user/forktree.asm	/^        default:$/;"	l
default	obj/user/hello.asm	/^        default:$/;"	l
default	obj/user/matrix.asm	/^        default:$/;"	l
default	obj/user/pgdir.asm	/^        default:$/;"	l
default	obj/user/priority.asm	/^        default:$/;"	l
default	obj/user/softint.asm	/^        default:$/;"	l
default	obj/user/spin.asm	/^        default:$/;"	l
default	obj/user/testbss.asm	/^        default:$/;"	l
default	obj/user/waitkill.asm	/^        default:$/;"	l
default	obj/user/yield.asm	/^        default:$/;"	l
default_alloc_pages	kern/mm/default_pmm.c	/^default_alloc_pages(size_t n) {$/;"	f	file:
default_check	kern/mm/default_pmm.c	/^default_check(void) {$/;"	f	file:
default_check	tools/grade.sh	/^default_check() {$/;"	f
default_free_pages	kern/mm/default_pmm.c	/^default_free_pages(struct Page *base, size_t n) {$/;"	f	file:
default_init	kern/mm/default_pmm.c	/^default_init(void) {$/;"	f	file:
default_init_memmap	kern/mm/default_pmm.c	/^default_init_memmap(struct Page *base, size_t n) {$/;"	f	file:
default_nr_free_pages	kern/mm/default_pmm.c	/^default_nr_free_pages(void) {$/;"	f	file:
default_pmm_manager	kern/mm/default_pmm.c	/^const struct pmm_manager default_pmm_manager = {$/;"	v	typeref:struct:pmm_manager
default_sched_class	kern/schedule/default_sched.c	/^struct sched_class default_sched_class = {$/;"	v	typeref:struct:sched_class
del_timer	kern/schedule/sched.c	/^del_timer(timer_t *timer) {$/;"	f
delay	kern/driver/console.c	/^delay(void) {$/;"	f	file:
delta	obj/kernel.asm	/^			delta = aligned - cur;$/;"	d
dequeue	kern/schedule/sched.h	/^    void (*dequeue)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
desc	kern/debug/kmonitor.c	/^    const char *desc;$/;"	m	struct:command	file:
did_init	kern/driver/picirq.c	/^static bool did_init = 0;$/;"	v	file:
did_init	obj/kernel.asm	/^    did_init = 1;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'a' + 10;$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'a' + 10;$/;"	d
do_add_files_to_packet	tools/function.mk	/^define do_add_files_to_packet$/;"	m
do_add_objs_to_packet	tools/function.mk	/^define do_add_objs_to_packet$/;"	m
do_cc_compile	tools/function.mk	/^define do_cc_compile$/;"	m
do_create_target	tools/function.mk	/^define do_create_target$/;"	m
do_div	libs/x86.h	6;"	d
do_execve	kern/process/proc.c	/^do_execve(const char *name, size_t len, unsigned char *binary, size_t size) {$/;"	f
do_exit	kern/process/proc.c	/^do_exit(int error_code) {$/;"	f
do_finish_all	tools/function.mk	/^define do_finish_all$/;"	m
do_fork	kern/process/proc.c	/^do_fork(uint32_t clone_flags, uintptr_t stack, struct trapframe *tf) {$/;"	f
do_kill	kern/process/proc.c	/^do_kill(int pid) {$/;"	f
do_pgfault	kern/mm/vmm.c	/^do_pgfault(struct mm_struct *mm, uint32_t error_code, uintptr_t addr) {$/;"	f
do_wait	kern/process/proc.c	/^do_wait(int pid, int *code_store) {$/;"	f
do_yield	kern/process/proc.c	/^do_yield(void) {$/;"	f
do_yield	user/waitkill.c	/^do_yield(void) {$/;"	f
dup_mmap	kern/mm/vmm.c	/^dup_mmap(struct mm_struct *to, struct mm_struct *from) {$/;"	f
e820map	kern/mm/memlayout.h	/^struct e820map {$/;"	s
e_ehsize	libs/elf.h	/^    uint16_t e_ehsize;    \/\/ size of this elf header$/;"	m	struct:elfhdr
e_elf	libs/elf.h	/^    uint8_t e_elf[12];$/;"	m	struct:elfhdr
e_entry	libs/elf.h	/^    uint32_t e_entry;     \/\/ entry point if executable$/;"	m	struct:elfhdr
e_flags	libs/elf.h	/^    uint32_t e_flags;     \/\/ architecture-specific flags, usually 0$/;"	m	struct:elfhdr
e_machine	libs/elf.h	/^    uint16_t e_machine;   \/\/ 3=x86, 4=68K, etc.$/;"	m	struct:elfhdr
e_magic	libs/elf.h	/^    uint32_t e_magic;     \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
e_phentsize	libs/elf.h	/^    uint16_t e_phentsize; \/\/ size of an entry in program header$/;"	m	struct:elfhdr
e_phnum	libs/elf.h	/^    uint16_t e_phnum;     \/\/ number of entries in program header or 0$/;"	m	struct:elfhdr
e_phoff	libs/elf.h	/^    uint32_t e_phoff;     \/\/ file position of program header or 0$/;"	m	struct:elfhdr
e_shentsize	libs/elf.h	/^    uint16_t e_shentsize; \/\/ size of an entry in section header$/;"	m	struct:elfhdr
e_shnum	libs/elf.h	/^    uint16_t e_shnum;     \/\/ number of entries in section header or 0$/;"	m	struct:elfhdr
e_shoff	libs/elf.h	/^    uint32_t e_shoff;     \/\/ file position of section header or 0$/;"	m	struct:elfhdr
e_shstrndx	libs/elf.h	/^    uint16_t e_shstrndx;  \/\/ section number that contains section name strings$/;"	m	struct:elfhdr
e_type	libs/elf.h	/^    uint16_t e_type;      \/\/ 1=relocatable, 2=executable, 3=shared object, 4=core image$/;"	m	struct:elfhdr
e_version	libs/elf.h	/^    uint32_t e_version;   \/\/ file version, always 1$/;"	m	struct:elfhdr
ebp	kern/process/proc.h	/^    uint32_t ebp;$/;"	m	struct:context
ebuf	libs/printfmt.c	/^    char *ebuf;         \/\/ points the end of the buffer$/;"	m	struct:sprintbuf	file:
ebx	kern/process/proc.h	/^    uint32_t ebx;$/;"	m	struct:context
ecx	kern/process/proc.h	/^    uint32_t ecx;$/;"	m	struct:context
edi	kern/process/proc.h	/^    uint32_t edi;$/;"	m	struct:context
edx	kern/process/proc.h	/^    uint32_t edx;$/;"	m	struct:context
eip	kern/process/proc.h	/^    uint32_t eip;$/;"	m	struct:context
eip_file	kern/debug/kdebug.c	/^    const char *eip_file;                   \/\/ source code filename for eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_addr	kern/debug/kdebug.c	/^    uintptr_t eip_fn_addr;                  \/\/ start address of function$/;"	m	struct:eipdebuginfo	file:
eip_fn_name	kern/debug/kdebug.c	/^    const char *eip_fn_name;                \/\/ name of function containing eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_namelen	kern/debug/kdebug.c	/^    int eip_fn_namelen;                     \/\/ length of function's name$/;"	m	struct:eipdebuginfo	file:
eip_fn_narg	kern/debug/kdebug.c	/^    int eip_fn_narg;                        \/\/ number of function arguments$/;"	m	struct:eipdebuginfo	file:
eip_line	kern/debug/kdebug.c	/^    int eip_line;                           \/\/ source code line number for eip$/;"	m	struct:eipdebuginfo	file:
eipdebuginfo	kern/debug/kdebug.c	/^struct eipdebuginfo {$/;"	s	file:
elfhdr	libs/elf.h	/^struct elfhdr {$/;"	s
enable_paging	kern/mm/pmm.c	/^enable_paging(void) {$/;"	f	file:
end	obj/kernel.asm	/^                end = KMEMSIZE;$/;"	d
end	obj/kernel.asm	/^                end = ROUNDDOWN(end, PGSIZE);$/;"	d
end	obj/kernel.asm	/^        end = ph->p_va + ph->p_filesz;$/;"	d
end	obj/kernel.asm	/^        end = ph->p_va + ph->p_memsz;$/;"	d
enqueue	kern/schedule/sched.h	/^    void (*enqueue)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
eph	obj/bootblock.asm	/^    eph = ph + ELFHDR->e_phnum;$/;"	d
err	obj/kernel.asm	/^                err = -err;$/;"	d
err	obj/kernel.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/badarg.asm	/^                err = -err;$/;"	d
err	obj/user/badarg.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/badsegment.asm	/^                err = -err;$/;"	d
err	obj/user/badsegment.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/divzero.asm	/^                err = -err;$/;"	d
err	obj/user/divzero.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/exit.asm	/^                err = -err;$/;"	d
err	obj/user/exit.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/faultread.asm	/^                err = -err;$/;"	d
err	obj/user/faultread.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/faultreadkernel.asm	/^                err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/forktest.asm	/^                err = -err;$/;"	d
err	obj/user/forktest.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/forktree.asm	/^                err = -err;$/;"	d
err	obj/user/forktree.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/hello.asm	/^                err = -err;$/;"	d
err	obj/user/hello.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/matrix.asm	/^                err = -err;$/;"	d
err	obj/user/matrix.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/pgdir.asm	/^                err = -err;$/;"	d
err	obj/user/pgdir.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/priority.asm	/^                err = -err;$/;"	d
err	obj/user/priority.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/softint.asm	/^                err = -err;$/;"	d
err	obj/user/softint.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/spin.asm	/^                err = -err;$/;"	d
err	obj/user/spin.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/testbss.asm	/^                err = -err;$/;"	d
err	obj/user/testbss.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/waitkill.asm	/^                err = -err;$/;"	d
err	obj/user/waitkill.asm	/^            err = va_arg(ap, int);$/;"	d
err	obj/user/yield.asm	/^                err = -err;$/;"	d
err	obj/user/yield.asm	/^            err = va_arg(ap, int);$/;"	d
error_string	libs/printfmt.c	/^static const char * const error_string[MAXERROR + 1] = {$/;"	v	file:
esi	kern/process/proc.h	/^    uint32_t esi;$/;"	m	struct:context
esp	kern/process/proc.h	/^    uint32_t esp;$/;"	m	struct:context
execve_exit	obj/kernel.asm	/^execve_exit:$/;"	l
exit	user/libs/ulib.c	/^exit(int error_code) {$/;"	f
exit_code	kern/process/proc.h	/^    int exit_code;                              \/\/ exit code (be sent to parent proc)$/;"	m	struct:proc_struct
exit_mmap	kern/mm/vmm.c	/^exit_mmap(struct mm_struct *mm) {$/;"	f
exit_range	kern/mm/pmm.c	/^exit_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
expires	kern/schedule/sched.h	/^    unsigned int expires;       \/\/the expire time$/;"	m	struct:__anon1
extern	obj/kernel.asm	/^         extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^     extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^    extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^extern size_t npage;$/;"	l
extern	obj/kernel.asm	/^extern struct Page *pages;$/;"	t
extern	obj/kernel.asm	/^extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^extern uintptr_t __vectors[];$/;"	l
fail	tools/grade.sh	/^fail() {$/;"	f
failed	obj/kernel.asm	/^failed:$/;"	l
failed	obj/user/matrix.asm	/^failed:$/;"	l
failed	obj/user/priority.asm	/^failed:$/;"	l
filename	Makefile	/^filename = $(basename $(notdir $(1)))$/;"	m
find_order	kern/mm/kmalloc.c	/^static int find_order(int size)$/;"	f	file:
find_proc	kern/process/proc.c	/^find_proc(int pid) {$/;"	f
find_vma	kern/mm/vmm.c	/^find_vma(struct mm_struct *mm, uintptr_t addr) {$/;"	f
finish_all	tools/function.mk	/^finish_all = $(eval $(call do_finish_all))$/;"	m
finish_probe	boot/bootasm.S	/^finish_probe:$/;"	l
flags	kern/mm/memlayout.h	/^    uint32_t flags;                 \/\/ array of flags that describe the status of the page frame$/;"	m	struct:Page
flags	kern/process/proc.h	/^    uint32_t flags;                             \/\/ Process flag$/;"	m	struct:proc_struct
fork	user/libs/ulib.c	/^fork(void) {$/;"	f
fork_out	obj/kernel.asm	/^fork_out:$/;"	l
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch) {$/;"	f
forkret	kern/process/proc.c	/^forkret(void) {$/;"	f	file:
forkrets	kern/trap/trapentry.S	/^forkrets:$/;"	l
forkrets	obj/kernel.asm	/^forkrets:$/;"	l
forktree	user/forktree.c	/^forktree(const char *cur) {$/;"	f
found	obj/kernel.asm	/^                        found = 1;$/;"	d
found	obj/kernel.asm	/^found:$/;"	l
free_area	kern/mm/default_pmm.c	/^free_area_t free_area;$/;"	v
free_area_t	kern/mm/memlayout.h	/^} free_area_t;$/;"	t	typeref:struct:__anon3
free_list	kern/mm/default_pmm.c	59;"	d	file:
free_list	kern/mm/memlayout.h	/^    list_entry_t free_list;         \/\/ the list header$/;"	m	struct:__anon3
free_list	kern/mm/swap.c	176;"	d	file:
free_list	obj/kernel.asm	/^     free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^    free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^#define free_list (free_area.free_list)$/;"	d
free_page	kern/mm/pmm.h	36;"	d
free_pages	kern/mm/pmm.c	/^free_pages(struct Page *base, size_t n) {$/;"	f
free_pages	kern/mm/pmm.h	/^    void (*free_pages)(struct Page *base, size_t n);  \/\/ free >=n pages with "base" addr of Page descriptor structures(memlayout.h)$/;"	m	struct:pmm_manager
func	kern/debug/kmonitor.c	/^    int(*func)(int argc, char **argv, struct trapframe *tf);$/;"	m	struct:command	file:
gatedesc	kern/mm/mmu.h	/^struct gatedesc {$/;"	s
gd_args	kern/mm/mmu.h	/^    unsigned gd_args : 5;           \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:gatedesc
gd_dpl	kern/mm/mmu.h	/^    unsigned gd_dpl : 2;            \/\/ descriptor(meaning new) privilege level$/;"	m	struct:gatedesc
gd_off_15_0	kern/mm/mmu.h	/^    unsigned gd_off_15_0 : 16;      \/\/ low 16 bits of offset in segment$/;"	m	struct:gatedesc
gd_off_31_16	kern/mm/mmu.h	/^    unsigned gd_off_31_16 : 16;     \/\/ high bits of offset in segment$/;"	m	struct:gatedesc
gd_p	kern/mm/mmu.h	/^    unsigned gd_p : 1;              \/\/ Present$/;"	m	struct:gatedesc
gd_rsv1	kern/mm/mmu.h	/^    unsigned gd_rsv1 : 3;           \/\/ reserved(should be zero I guess)$/;"	m	struct:gatedesc
gd_s	kern/mm/mmu.h	/^    unsigned gd_s : 1;              \/\/ must be 0 (system)$/;"	m	struct:gatedesc
gd_ss	kern/mm/mmu.h	/^    unsigned gd_ss : 16;            \/\/ segment selector$/;"	m	struct:gatedesc
gd_type	kern/mm/mmu.h	/^    unsigned gd_type : 4;           \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:gatedesc
gdt	boot/bootasm.S	/^gdt:$/;"	l
gdt	kern/mm/pmm.c	/^static struct segdesc gdt[] = {$/;"	v	typeref:struct:segdesc	file:
gdt_init	kern/mm/pmm.c	/^gdt_init(void) {$/;"	f	file:
gdt_pd	kern/mm/pmm.c	/^static struct pseudodesc gdt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
gdtdesc	boot/bootasm.S	/^gdtdesc:$/;"	l
get_page	kern/mm/pmm.c	/^get_page(pde_t *pgdir, uintptr_t la, pte_t **ptep_store) {$/;"	f
get_pgtable_items	kern/mm/pmm.c	/^get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t *table, size_t *left_store, size_t *right_store) {$/;"	f	file:
get_pid	kern/process/proc.c	/^get_pid(void) {$/;"	f	file:
get_proc_name	kern/process/proc.c	/^get_proc_name(struct proc_struct *proc) {$/;"	f
get_pte	kern/mm/pmm.c	/^get_pte(pde_t *pgdir, uintptr_t la, bool create) {$/;"	f
get_time	tools/grade.sh	/^get_time() {$/;"	f
getchar	kern/libs/stdio.c	/^getchar(void) {$/;"	f
getint	libs/printfmt.c	/^getint(va_list *ap, int lflag) {$/;"	f	file:
getpid	user/libs/ulib.c	/^getpid(void) {$/;"	f
gettime_msec	user/libs/ulib.c	/^gettime_msec(void) {$/;"	f
getuint	libs/printfmt.c	/^getuint(va_list *ap, int lflag) {$/;"	f	file:
gfp_t	kern/mm/kmalloc.c	/^typedef unsigned int gfp_t;$/;"	t	file:
good_mm	obj/kernel.asm	/^good_mm:$/;"	l
grade_backtrace	kern/init/init.c	/^grade_backtrace(void) {$/;"	f
grade_backtrace0	kern/init/init.c	/^grade_backtrace0(int arg0, int arg1, int arg2) {$/;"	f
grade_backtrace1	kern/init/init.c	/^grade_backtrace1(int arg0, int arg1) {$/;"	f
grade_backtrace2	kern/init/init.c	/^grade_backtrace2(int arg0, int arg1, int arg2, int arg3) {$/;"	f
hash32	libs/hash.c	/^hash32(uint32_t val, unsigned int bits) {$/;"	f
hash_link	kern/process/proc.h	/^    list_entry_t hash_link;                     \/\/ Process hash list$/;"	m	struct:proc_struct
hash_list	kern/process/proc.c	/^static list_entry_t hash_list[HASH_LIST_SIZE];$/;"	v	file:
hash_proc	kern/process/proc.c	/^hash_proc(struct proc_struct *proc) {$/;"	f	file:
haskid	obj/kernel.asm	/^            haskid = 1;$/;"	d
haskid	obj/kernel.asm	/^    haskid = 0;$/;"	d
ide_device	kern/driver/ide.c	/^static struct ide_device {$/;"	s	file:
ide_device_size	kern/driver/ide.c	/^ide_device_size(unsigned short ideno) {$/;"	f
ide_device_valid	kern/driver/ide.c	/^ide_device_valid(unsigned short ideno) {$/;"	f
ide_devices	kern/driver/ide.c	/^} ide_devices[MAX_IDE];$/;"	v	typeref:struct:ide_device	file:
ide_init	kern/driver/ide.c	/^ide_init(void) {$/;"	f
ide_read_secs	kern/driver/ide.c	/^ide_read_secs(unsigned short ideno, uint32_t secno, void *dst, size_t nsecs) {$/;"	f
ide_wait_ready	kern/driver/ide.c	/^ide_wait_ready(unsigned short iobase, bool check_error) {$/;"	f	file:
ide_write_secs	kern/driver/ide.c	/^ide_write_secs(unsigned short ideno, uint32_t secno, const void *src, size_t nsecs) {$/;"	f
idleproc	kern/process/proc.c	/^struct proc_struct *idleproc = NULL;$/;"	v	typeref:struct:proc_struct
idt	kern/trap/trap.c	/^static struct gatedesc idt[256] = {{0}};$/;"	v	typeref:struct:gatedesc	file:
idt_init	kern/trap/trap.c	/^idt_init(void) {$/;"	f
idt_pd	kern/trap/trap.c	/^static struct pseudodesc idt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
in_swap_tick_event	kern/trap/trap.c	/^static volatile int in_swap_tick_event = 0;$/;"	v	file:
inb	libs/x86.h	/^inb(uint16_t port) {$/;"	f
init	kern/mm/pmm.h	/^    void (*init)(void);                               \/\/ initialize internal description&management data structure$/;"	m	struct:pmm_manager
init	kern/mm/swap.h	/^     int (*init)            (void);$/;"	m	struct:swap_manager
init	kern/schedule/sched.h	/^    void (*init)(struct run_queue *rq);$/;"	m	struct:sched_class
init_main	kern/process/proc.c	/^init_main(void *arg) {$/;"	f	file:
init_memmap	kern/mm/pmm.c	/^init_memmap(struct Page *base, size_t n) {$/;"	f	file:
init_memmap	kern/mm/pmm.h	/^    void (*init_memmap)(struct Page *base, size_t n); \/\/ setup description&management data structcure according to$/;"	m	struct:pmm_manager
init_mm	kern/mm/swap.h	/^     int (*init_mm)         (struct mm_struct *mm);$/;"	m	struct:swap_manager
init_pmm_manager	kern/mm/pmm.c	/^init_pmm_manager(void) {$/;"	f	file:
initproc	kern/process/proc.c	/^struct proc_struct *initproc = NULL;$/;"	v	typeref:struct:proc_struct
initproc	obj/kernel.asm	/^    initproc = find_proc(pid);$/;"	d
inline	obj/kernel.asm	/^inline void $/;"	l
insert_vma_struct	kern/mm/vmm.c	/^insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma) {$/;"	f
inside	obj/kernel.asm	/^    inside:$/;"	l
insl	libs/x86.h	/^insl(uint32_t port, void *addr, int cnt) {$/;"	f
int	obj/kernel.asm	/^int kern_init(void) __attribute__((noreturn));$/;"	l
int	obj/kernel.asm	/^int$/;"	l
int	obj/user/badarg.asm	/^int main(void);$/;"	l
int	obj/user/badarg.asm	/^int$/;"	l
int	obj/user/badsegment.asm	/^int main(void);$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
int	obj/user/divzero.asm	/^int main(void);$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
int	obj/user/exit.asm	/^int magic = -0x10384;$/;"	l
int	obj/user/exit.asm	/^int main(void);$/;"	l
int	obj/user/exit.asm	/^int$/;"	l
int	obj/user/faultread.asm	/^int main(void);$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
int	obj/user/faultreadkernel.asm	/^int main(void);$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
int	obj/user/forktest.asm	/^int main(void);$/;"	l
int	obj/user/forktest.asm	/^int$/;"	l
int	obj/user/forktree.asm	/^int main(void);$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
int	obj/user/hello.asm	/^int main(void);$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
int	obj/user/matrix.asm	/^int main(void);$/;"	l
int	obj/user/matrix.asm	/^int$/;"	l
int	obj/user/pgdir.asm	/^int main(void);$/;"	l
int	obj/user/pgdir.asm	/^int$/;"	l
int	obj/user/priority.asm	/^int main(void);$/;"	l
int	obj/user/priority.asm	/^int pids[TOTAL];$/;"	l
int	obj/user/priority.asm	/^int status[TOTAL];$/;"	l
int	obj/user/priority.asm	/^int$/;"	l
int	obj/user/softint.asm	/^int main(void);$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
int	obj/user/spin.asm	/^int main(void);$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
int	obj/user/testbss.asm	/^int main(void);$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
int	obj/user/waitkill.asm	/^int main(void);$/;"	l
int	obj/user/waitkill.asm	/^int parent, pid1, pid2;$/;"	l
int	obj/user/waitkill.asm	/^int$/;"	l
int	obj/user/yield.asm	/^int main(void);$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
int16_t	libs/defs.h	/^typedef short int16_t;$/;"	t
int32_t	libs/defs.h	/^typedef int int32_t;$/;"	t
int64_t	libs/defs.h	/^typedef long long int64_t;$/;"	t
int8_t	libs/defs.h	/^typedef char int8_t;$/;"	t
int_gate	kern/trap/trap.c	165;"	d	file:
int_gate	obj/kernel.asm	/^#define int_gate(gate) {asm volatile ("int %0" :: "i" (gate));}$/;"	d
intptr_t	libs/defs.h	/^typedef int32_t intptr_t;$/;"	t
intr_disable	kern/driver/intr.c	/^intr_disable(void) {$/;"	f
intr_enable	kern/driver/intr.c	/^intr_enable(void) {$/;"	f
invlpg	libs/x86.h	/^invlpg(void *addr) {$/;"	f
iobase	obj/kernel.asm	/^        iobase = IO_BASE(ideno);$/;"	d
irq_mask	kern/driver/picirq.c	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	v	file:
irq_mask	obj/kernel.asm	/^    irq_mask = mask;$/;"	d
is_find_big_one	obj/kernel.asm	/^            is_find_big_one = 1;$/;"	d
is_kernel_panic	kern/debug/panic.c	/^is_kernel_panic(void) {$/;"	f
is_panic	kern/debug/panic.c	/^static bool is_panic = 0;$/;"	v	file:
is_panic	obj/kernel.asm	/^    is_panic = 1;$/;"	d
j	obj/user/priority.asm	/^          j = !j;$/;"	d
kallocated	kern/mm/kmalloc.c	/^kallocated(void) {$/;"	f
kbd_init	kern/driver/console.c	/^kbd_init(void) {$/;"	f	file:
kbd_intr	kern/driver/console.c	/^kbd_intr(void) {$/;"	f	file:
kbd_proc_data	kern/driver/console.c	/^kbd_proc_data(void) {$/;"	f	file:
kern_entry	kern/init/entry.S	/^kern_entry:$/;"	l
kern_entry	obj/kernel.asm	/^kern_entry:$/;"	l
kern_init	kern/init/init.c	/^kern_init(void) {$/;"	f
kernel	Makefile	/^kernel = $(call totarget,kernel)$/;"	m
kernel_execve	kern/process/proc.c	/^kernel_execve(const char *name, unsigned char *binary, size_t size) {$/;"	f	file:
kernel_thread	kern/process/proc.c	/^kernel_thread(int (*fn)(void *), void *arg, uint32_t clone_flags) {$/;"	f
kernel_thread_entry	kern/process/entry.S	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
kernel_thread_entry	obj/kernel.asm	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
kfree	kern/mm/kmalloc.c	/^void kfree(void *block)$/;"	f
kill	user/libs/ulib.c	/^kill(int pid) {$/;"	f
kmalloc	kern/mm/kmalloc.c	/^kmalloc(size_t size)$/;"	f
kmalloc_init	kern/mm/kmalloc.c	/^kmalloc_init(void) {$/;"	f
kmonitor	kern/debug/kmonitor.c	/^kmonitor(struct trapframe *tf) {$/;"	f
ksize	kern/mm/kmalloc.c	/^unsigned int ksize(const void *block)$/;"	f
kstack	kern/process/proc.h	/^    uintptr_t kstack;                           \/\/ Process kernel stack$/;"	m	struct:proc_struct
kva2page	kern/mm/pmm.h	/^kva2page(void *kva) {$/;"	f
l	obj/kernel.asm	/^            l = m;$/;"	d
l	obj/kernel.asm	/^            l = true_m + 1;$/;"	d
l	obj/kernel.asm	/^        l = *region_right;$/;"	d
la	obj/kernel.asm	/^    la = ROUNDDOWN(la, PGSIZE);$/;"	d
lab1_print_cur_status	kern/init/init.c	/^lab1_print_cur_status(void) {$/;"	f	file:
lab1_switch_test	kern/init/init.c	/^lab1_switch_test(void) {$/;"	f	file:
lab1_switch_to_kernel	kern/init/init.c	/^lab1_switch_to_kernel(void) {$/;"	f	file:
lab1_switch_to_user	kern/init/init.c	/^lab1_switch_to_user(void) {$/;"	f	file:
lab6_priority	kern/process/proc.h	/^    uint32_t lab6_priority;                     \/\/ FOR LAB6 ONLY: the priority of process, set by lab6_set_priority(uint32_t)$/;"	m	struct:proc_struct
lab6_run_pool	kern/process/proc.h	/^    skew_heap_entry_t lab6_run_pool;            \/\/ FOR LAB6 ONLY: the entry in the run pool$/;"	m	struct:proc_struct
lab6_run_pool	kern/schedule/sched.h	/^    skew_heap_entry_t *lab6_run_pool;$/;"	m	struct:run_queue
lab6_set_priority	kern/process/proc.c	/^lab6_set_priority(uint32_t priority)$/;"	f
lab6_set_priority	user/libs/ulib.c	/^lab6_set_priority(uint32_t priority)$/;"	f
lab6_stride	kern/process/proc.h	/^    uint32_t lab6_stride;                       \/\/ FOR LAB6 ONLY: the current stride of the process $/;"	m	struct:proc_struct
last_pid	obj/kernel.asm	/^                        last_pid = 1;$/;"	d
last_pid	obj/kernel.asm	/^        last_pid = 1;$/;"	d
lcr0	libs/x86.h	/^lcr0(uintptr_t cr0) {$/;"	f
lcr3	libs/x86.h	/^lcr3(uintptr_t cr3) {$/;"	f
le	obj/kernel.asm	/^                le = list_next(le);$/;"	d
le	obj/kernel.asm	/^            le = list_next(le);$/;"	d
le	obj/kernel.asm	/^        le = list;$/;"	d
le	obj/kernel.asm	/^        le = list_next(le);$/;"	d
le	obj/kernel.asm	/^     le = &free_list;$/;"	d
le	obj/kernel.asm	/^    le = &free_list;$/;"	d
le2page	kern/mm/memlayout.h	150;"	d
le2proc	kern/process/proc.h	75;"	d
le2timer	kern/schedule/sched.h	18;"	d
le2vma	kern/mm/vmm.h	22;"	d
le_next	obj/kernel.asm	/^    le_next = list_next(le_prev);$/;"	d
le_pos	obj/kernel.asm	/^            le_pos = list_prev(le);$/;"	d
le_prev	obj/kernel.asm	/^            le_prev = le;$/;"	d
left	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::
len	obj/kernel.asm	/^        len = PROC_NAME_LEN;$/;"	d
lflag	obj/kernel.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/badarg.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/badsegment.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/divzero.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/exit.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/faultread.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/faultreadkernel.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/forktest.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/forktree.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/hello.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/matrix.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/pgdir.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/priority.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/softint.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/spin.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/testbss.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/waitkill.asm	/^        lflag = altflag = 0;$/;"	d
lflag	obj/user/yield.asm	/^        lflag = altflag = 0;$/;"	d
lgdt	kern/mm/pmm.c	/^lgdt(struct pseudodesc *pd) {$/;"	f	file:
lidt	libs/x86.h	/^lidt(struct pseudodesc *pd) {$/;"	f
list_add	libs/list.h	/^list_add(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_after	libs/list.h	/^list_add_after(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_before	libs/list.h	/^list_add_before(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_del	libs/list.h	/^list_del(list_entry_t *listelm) {$/;"	f
list_del_init	libs/list.h	/^list_del_init(list_entry_t *listelm) {$/;"	f
list_empty	libs/list.h	/^list_empty(list_entry_t *list) {$/;"	f
list_entry	libs/list.h	/^struct list_entry {$/;"	s
list_entry_t	libs/list.h	/^typedef struct list_entry list_entry_t;$/;"	t	typeref:struct:list_entry
list_init	libs/list.h	/^list_init(list_entry_t *elm) {$/;"	f
list_link	kern/mm/vmm.h	/^    list_entry_t list_link;  \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:vma_struct
list_link	kern/process/proc.h	/^    list_entry_t list_link;                     \/\/ Process link list $/;"	m	struct:proc_struct
list_next	libs/list.h	/^list_next(list_entry_t *listelm) {$/;"	f
list_prev	libs/list.h	/^list_prev(list_entry_t *listelm) {$/;"	f
listf	tools/function.mk	/^listf = $(filter $(if $(2),$(addprefix %.,$(2)),%),\\$/;"	m
listf_cc	Makefile	/^listf_cc = $(call listf,$(1),$(CTYPE))$/;"	m
lline	obj/kernel.asm	/^        lline = lfile;$/;"	d
lline	obj/kernel.asm	/^        lline = lfun;$/;"	d
load_esp0	kern/mm/pmm.c	/^load_esp0(uintptr_t esp0) {$/;"	f
load_icode	kern/process/proc.c	/^load_icode(unsigned char *binary, size_t size) {$/;"	f	file:
local_intr_restore	kern/sync/sync.h	28;"	d
local_intr_restore	obj/kernel.asm	/^#define local_intr_restore(x)   __intr_restore(x);$/;"	d
local_intr_save	kern/sync/sync.h	27;"	d
lock	kern/sync/sync.h	/^lock(lock_t *lock) {$/;"	f
lock_init	kern/sync/sync.h	/^lock_init(lock_t *lock) {$/;"	f
lock_mm	kern/mm/vmm.h	/^lock_mm(struct mm_struct *mm) {$/;"	f
lock_t	kern/sync/sync.h	/^typedef volatile bool lock_t;$/;"	t
long	obj/kernel.asm	/^long$/;"	l
long	obj/user/badarg.asm	/^long$/;"	l
long	obj/user/badsegment.asm	/^long$/;"	l
long	obj/user/divzero.asm	/^long$/;"	l
long	obj/user/exit.asm	/^long$/;"	l
long	obj/user/faultread.asm	/^long$/;"	l
long	obj/user/faultreadkernel.asm	/^long$/;"	l
long	obj/user/forktest.asm	/^long$/;"	l
long	obj/user/forktree.asm	/^long$/;"	l
long	obj/user/hello.asm	/^long$/;"	l
long	obj/user/matrix.asm	/^long$/;"	l
long	obj/user/pgdir.asm	/^long$/;"	l
long	obj/user/priority.asm	/^long$/;"	l
long	obj/user/softint.asm	/^long$/;"	l
long	obj/user/spin.asm	/^long$/;"	l
long	obj/user/testbss.asm	/^long$/;"	l
long	obj/user/waitkill.asm	/^long$/;"	l
long	obj/user/yield.asm	/^long$/;"	l
loop	user/waitkill.c	/^loop(void) {$/;"	f
lpt_putc	kern/driver/console.c	/^lpt_putc(int c) {$/;"	f	file:
lpt_putc_sub	kern/driver/console.c	/^lpt_putc_sub(int c) {$/;"	f	file:
ltr	libs/x86.h	/^ltr(uint16_t sel) {$/;"	f
m	obj/kernel.asm	/^		m = slob_alloc(size + SLOB_UNIT, gfp, 0);$/;"	d
magic	user/exit.c	/^int magic = -0x10384;$/;"	v
main	tools/sign.c	/^main(int argc, char *argv[]) {$/;"	f
main	tools/vector.c	/^main(void) {$/;"	f
main	user/badarg.c	/^main(void) {$/;"	f
main	user/badsegment.c	/^main(void) {$/;"	f
main	user/divzero.c	/^main(void) {$/;"	f
main	user/exit.c	/^main(void) {$/;"	f
main	user/faultread.c	/^main(void) {$/;"	f
main	user/faultreadkernel.c	/^main(void) {$/;"	f
main	user/forktest.c	/^main(void) {$/;"	f
main	user/forktree.c	/^main(void) {$/;"	f
main	user/hello.c	/^main(void) {$/;"	f
main	user/matrix.c	/^main(void) {$/;"	f
main	user/pgdir.c	/^main(void) {$/;"	f
main	user/priority.c	/^main(void) {$/;"	f
main	user/softint.c	/^main(void) {$/;"	f
main	user/spin.c	/^main(void) {$/;"	f
main	user/testbss.c	/^main(void) {$/;"	f
main	user/waitkill.c	/^main(void) {$/;"	f
main	user/yield.c	/^main(void) {$/;"	f
make_print	tools/grade.sh	/^make_print() {$/;"	f
map	kern/mm/memlayout.h	/^    } __attribute__((packed)) map[E820MAX];$/;"	m	struct:e820map	typeref:struct:e820map::__anon2
map_count	kern/mm/vmm.h	/^    int map_count;                 \/\/ the count of these vma$/;"	m	struct:mm_struct
map_swappable	kern/mm/swap.h	/^     int (*map_swappable)   (struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in);$/;"	m	struct:swap_manager
mata	user/matrix.c	/^static int mata[MATSIZE][MATSIZE];$/;"	v	file:
matb	user/matrix.c	/^static int matb[MATSIZE][MATSIZE];$/;"	v	file:
matc	user/matrix.c	/^static int matc[MATSIZE][MATSIZE];$/;"	v	file:
match	Makefile	/^match = $(shell echo $(2) | $(AWK) '{for(i=1;i<=NF;i++){if(match("$(1)","^"$$(i)"$$")){exit 1;}}}'; echo $$?)$/;"	m
max_child	user/forktest.c	/^const int max_child = 32;$/;"	v
max_swap_offset	kern/mm/swap.c	/^size_t max_swap_offset;$/;"	v
max_swap_offset	obj/kernel.asm	/^    max_swap_offset = ide_device_size(SWAP_DEV_NO) \/ (PGSIZE \/ SECTSIZE);$/;"	d
max_time_slice	kern/schedule/sched.h	/^    int max_time_slice;$/;"	m	struct:run_queue
maxpa	obj/kernel.asm	/^                maxpa = end;$/;"	d
maxpa	obj/kernel.asm	/^        maxpa = KMEMSIZE;$/;"	d
memcmp	libs/string.c	/^memcmp(const void *v1, const void *v2, size_t n) {$/;"	f
memcpy	libs/string.c	/^memcpy(void *dst, const void *src, size_t n) {$/;"	f
memmove	libs/string.c	/^memmove(void *dst, const void *src, size_t n) {$/;"	f
memset	libs/string.c	/^memset(void *s, char c, size_t n) {$/;"	f
mm	kern/process/proc.h	/^    struct mm_struct *mm;                       \/\/ Process's memory management field$/;"	m	struct:proc_struct	typeref:struct:proc_struct::mm_struct
mm	obj/kernel.asm	/^        mm = check_mm_struct;$/;"	d
mm	obj/kernel.asm	/^        mm = current->mm;$/;"	d
mm	obj/kernel.asm	/^        mm = oldmm;$/;"	d
mm_count	kern/mm/vmm.h	/^    int mm_count;                  \/\/ the number ofprocess which shared the mm$/;"	m	struct:mm_struct
mm_count	kern/mm/vmm.h	/^mm_count(struct mm_struct *mm) {$/;"	f
mm_count_dec	kern/mm/vmm.h	/^mm_count_dec(struct mm_struct *mm) {$/;"	f
mm_count_inc	kern/mm/vmm.h	/^mm_count_inc(struct mm_struct *mm) {$/;"	f
mm_create	kern/mm/vmm.c	/^mm_create(void) {$/;"	f
mm_destroy	kern/mm/vmm.c	/^mm_destroy(struct mm_struct *mm) {$/;"	f
mm_lock	kern/mm/vmm.h	/^    lock_t mm_lock;                \/\/ mutex for using dup_mmap fun to duplicat the mm$/;"	m	struct:mm_struct
mm_map	kern/mm/vmm.c	/^mm_map(struct mm_struct *mm, uintptr_t addr, size_t len, uint32_t vm_flags,$/;"	f
mm_struct	kern/mm/vmm.h	/^struct mm_struct {$/;"	s
mmap_cache	kern/mm/vmm.h	/^    struct vma_struct *mmap_cache; \/\/ current accessed vma, used for speed purpose$/;"	m	struct:mm_struct	typeref:struct:mm_struct::vma_struct
mmap_list	kern/mm/vmm.h	/^    list_entry_t mmap_list;        \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:mm_struct
model	kern/driver/ide.c	/^    unsigned char model[41];    \/\/ Model in String$/;"	m	struct:ide_device	file:
mon_backtrace	kern/debug/kmonitor.c	/^mon_backtrace(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_help	kern/debug/kmonitor.c	/^mon_help(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_kerninfo	kern/debug/kmonitor.c	/^mon_kerninfo(int argc, char **argv, struct trapframe *tf) {$/;"	f
n_desc	kern/debug/stab.h	/^    uint16_t n_desc;        \/\/ description field$/;"	m	struct:stab
n_other	kern/debug/stab.h	/^    uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:stab
n_strx	kern/debug/stab.h	/^    uint32_t n_strx;        \/\/ index into string table of name$/;"	m	struct:stab
n_type	kern/debug/stab.h	/^    uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:stab
n_value	kern/debug/stab.h	/^    uintptr_t n_value;      \/\/ value of symbol$/;"	m	struct:stab
name	kern/debug/kmonitor.c	/^    const char *name;$/;"	m	struct:command	file:
name	kern/mm/pmm.h	/^    const char *name;                                 \/\/ XXX_pmm_manager's name$/;"	m	struct:pmm_manager
name	kern/mm/swap.h	/^     const char *name;$/;"	m	struct:swap_manager
name	kern/process/proc.h	/^    char name[PROC_NAME_LEN + 1];               \/\/ Process name$/;"	m	struct:proc_struct
name	kern/schedule/sched.h	/^    const char *name;$/;"	m	struct:sched_class
need_resched	kern/process/proc.h	/^    volatile bool need_resched;                 \/\/ bool value: need to be rescheduled to release CPU?$/;"	m	struct:proc_struct
next	kern/mm/kmalloc.c	/^	struct bigblock *next;$/;"	m	struct:bigblock	typeref:struct:bigblock::bigblock	file:
next	kern/mm/kmalloc.c	/^	struct slob_block *next;$/;"	m	struct:slob_block	typeref:struct:slob_block::slob_block	file:
next	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::
next	libs/rand.c	/^static unsigned long long next = 1;$/;"	v	file:
next	obj/kernel.asm	/^            next = idleproc;$/;"	d
next	obj/kernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/kernel.asm	/^    next = seed;$/;"	d
next	obj/user/badarg.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badarg.asm	/^    next = seed;$/;"	d
next	obj/user/badsegment.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badsegment.asm	/^    next = seed;$/;"	d
next	obj/user/divzero.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/divzero.asm	/^    next = seed;$/;"	d
next	obj/user/exit.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/exit.asm	/^    next = seed;$/;"	d
next	obj/user/faultread.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultread.asm	/^    next = seed;$/;"	d
next	obj/user/faultreadkernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultreadkernel.asm	/^    next = seed;$/;"	d
next	obj/user/forktest.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktest.asm	/^    next = seed;$/;"	d
next	obj/user/forktree.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktree.asm	/^    next = seed;$/;"	d
next	obj/user/hello.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/hello.asm	/^    next = seed;$/;"	d
next	obj/user/matrix.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/matrix.asm	/^    next = seed;$/;"	d
next	obj/user/pgdir.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/pgdir.asm	/^    next = seed;$/;"	d
next	obj/user/priority.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/priority.asm	/^    next = seed;$/;"	d
next	obj/user/softint.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/softint.asm	/^    next = seed;$/;"	d
next	obj/user/spin.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/spin.asm	/^    next = seed;$/;"	d
next	obj/user/testbss.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/testbss.asm	/^    next = seed;$/;"	d
next	obj/user/waitkill.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/waitkill.asm	/^    next = seed;$/;"	d
next	obj/user/yield.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/yield.asm	/^    next = seed;$/;"	d
next_safe	obj/kernel.asm	/^                    next_safe = MAX_PID;$/;"	d
next_safe	obj/kernel.asm	/^                next_safe = proc->pid;$/;"	d
next_safe	obj/kernel.asm	/^        next_safe = MAX_PID;$/;"	d
normalmap	kern/driver/console.c	/^static uint8_t normalmap[256] = {$/;"	v	file:
npage	kern/mm/pmm.c	/^size_t npage = 0;$/;"	v
npage	obj/kernel.asm	/^    npage = maxpa \/ PGSIZE;$/;"	d
nr_free	kern/mm/default_pmm.c	60;"	d	file:
nr_free	kern/mm/memlayout.h	/^    unsigned int nr_free;           \/\/ # of free pages in this free list$/;"	m	struct:__anon3
nr_free	kern/mm/swap.c	177;"	d	file:
nr_free	obj/kernel.asm	/^     nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^     nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^#define nr_free (free_area.nr_free)$/;"	d
nr_free_pages	kern/mm/pmm.c	/^nr_free_pages(void) {$/;"	f
nr_free_pages	kern/mm/pmm.h	/^    size_t (*nr_free_pages)(void);                    \/\/ return the number of free pages $/;"	m	struct:pmm_manager
nr_map	kern/mm/memlayout.h	/^    int nr_map;$/;"	m	struct:e820map
nr_process	kern/process/proc.c	/^static int nr_process = 0;$/;"	v	file:
num	obj/kernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/kernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/kernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/kernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/badarg.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badarg.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badarg.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badarg.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badsegment.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badsegment.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/divzero.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/divzero.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/exit.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/exit.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/exit.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/exit.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultread.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultread.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktest.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktest.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktest.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktest.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktree.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktree.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/hello.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/hello.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/matrix.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/matrix.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/matrix.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/matrix.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/pgdir.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/pgdir.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/pgdir.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/pgdir.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/priority.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/priority.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/priority.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/priority.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/softint.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/softint.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/spin.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/spin.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/testbss.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/testbss.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/waitkill.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/waitkill.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/waitkill.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/waitkill.asm	/^            num = getuint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/yield.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/yield.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/kernel.asm	/^        number:$/;"	l
number	obj/user/badarg.asm	/^        number:$/;"	l
number	obj/user/badsegment.asm	/^        number:$/;"	l
number	obj/user/divzero.asm	/^        number:$/;"	l
number	obj/user/exit.asm	/^        number:$/;"	l
number	obj/user/faultread.asm	/^        number:$/;"	l
number	obj/user/faultreadkernel.asm	/^        number:$/;"	l
number	obj/user/forktest.asm	/^        number:$/;"	l
number	obj/user/forktree.asm	/^        number:$/;"	l
number	obj/user/hello.asm	/^        number:$/;"	l
number	obj/user/matrix.asm	/^        number:$/;"	l
number	obj/user/pgdir.asm	/^        number:$/;"	l
number	obj/user/priority.asm	/^        number:$/;"	l
number	obj/user/softint.asm	/^        number:$/;"	l
number	obj/user/spin.asm	/^        number:$/;"	l
number	obj/user/testbss.asm	/^        number:$/;"	l
number	obj/user/waitkill.asm	/^        number:$/;"	l
number	obj/user/yield.asm	/^        number:$/;"	l
nvma	obj/kernel.asm	/^        nvma = vma_create(vma->vm_start, vma->vm_end, vma->vm_flags);$/;"	d
objfile	Makefile	/^objfile = $(call toobj,$(1))$/;"	m
off	obj/kernel.asm	/^            off = start + PGSIZE - la, size = PGSIZE - off;$/;"	d
off	obj/kernel.asm	/^            off = start - la, size = PGSIZE - off, la += PGSIZE;$/;"	d
offsetof	libs/defs.h	55;"	d
optr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
order	kern/mm/kmalloc.c	/^	int order;$/;"	m	struct:bigblock	file:
out	obj/kernel.asm	/^out:$/;"	l
outb	libs/x86.h	/^outb(uint16_t port, uint8_t data) {$/;"	f
outfile	Makefile	/^outfile = $(call cgtype,$(call toobj,$(1)),o,out)$/;"	m
outsl	libs/x86.h	/^outsl(uint32_t port, const void *addr, int cnt) {$/;"	f
outw	libs/x86.h	/^outw(uint16_t port, uint16_t data) {$/;"	f
p	obj/kernel.asm	/^                p = "(null)";$/;"	d
p	obj/kernel.asm	/^        p = le2page(le, page_link);$/;"	d
p	obj/kernel.asm	/^    p = alloc_page();$/;"	d
p	obj/user/badarg.asm	/^                p = "(null)";$/;"	d
p	obj/user/badsegment.asm	/^                p = "(null)";$/;"	d
p	obj/user/divzero.asm	/^                p = "(null)";$/;"	d
p	obj/user/exit.asm	/^                p = "(null)";$/;"	d
p	obj/user/faultread.asm	/^                p = "(null)";$/;"	d
p	obj/user/faultreadkernel.asm	/^                p = "(null)";$/;"	d
p	obj/user/forktest.asm	/^                p = "(null)";$/;"	d
p	obj/user/forktree.asm	/^                p = "(null)";$/;"	d
p	obj/user/hello.asm	/^                p = "(null)";$/;"	d
p	obj/user/matrix.asm	/^                p = "(null)";$/;"	d
p	obj/user/pgdir.asm	/^                p = "(null)";$/;"	d
p	obj/user/priority.asm	/^                p = "(null)";$/;"	d
p	obj/user/softint.asm	/^                p = "(null)";$/;"	d
p	obj/user/spin.asm	/^                p = "(null)";$/;"	d
p	obj/user/testbss.asm	/^                p = "(null)";$/;"	d
p	obj/user/waitkill.asm	/^                p = "(null)";$/;"	d
p	obj/user/yield.asm	/^                p = "(null)";$/;"	d
p0	obj/kernel.asm	/^    p0 = p1 = p2 = NULL;$/;"	d
p1	obj/kernel.asm	/^    p1 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = p0 + 1;$/;"	d
p_align	libs/elf.h	/^    uint32_t p_align;  \/\/ required alignment, invariably hardware page size$/;"	m	struct:proghdr
p_filesz	libs/elf.h	/^    uint32_t p_filesz; \/\/ size of segment in file$/;"	m	struct:proghdr
p_flags	libs/elf.h	/^    uint32_t p_flags;  \/\/ read\/write\/execute bits$/;"	m	struct:proghdr
p_memsz	libs/elf.h	/^    uint32_t p_memsz;  \/\/ size of segment in memory (bigger if contains bss）$/;"	m	struct:proghdr
p_offset	libs/elf.h	/^    uint32_t p_offset; \/\/ file offset of segment$/;"	m	struct:proghdr
p_pa	libs/elf.h	/^    uint32_t p_pa;     \/\/ physical address, not used$/;"	m	struct:proghdr
p_type	libs/elf.h	/^    uint32_t p_type;   \/\/ loadable code or data, dynamic linking info,etc.$/;"	m	struct:proghdr
p_va	libs/elf.h	/^    uint32_t p_va;     \/\/ virtual address to map segment$/;"	m	struct:proghdr
pa	obj/kernel.asm	/^    pa = ROUNDDOWN(pa, PGSIZE);$/;"	d
pa2page	kern/mm/pmm.h	/^pa2page(uintptr_t pa) {$/;"	f
packetname	tools/function.mk	/^packetname = $(if $(1),$(addprefix $(OBJPREFIX),$(1)),$(OBJPREFIX))$/;"	m
padc	obj/kernel.asm	/^            padc = '-';$/;"	d
padc	obj/kernel.asm	/^            padc = '0';$/;"	d
padc	obj/user/badarg.asm	/^            padc = '-';$/;"	d
padc	obj/user/badarg.asm	/^            padc = '0';$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '0';$/;"	d
padc	obj/user/divzero.asm	/^            padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^            padc = '0';$/;"	d
padc	obj/user/exit.asm	/^            padc = '-';$/;"	d
padc	obj/user/exit.asm	/^            padc = '0';$/;"	d
padc	obj/user/faultread.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^            padc = '0';$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '0';$/;"	d
padc	obj/user/forktest.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktest.asm	/^            padc = '0';$/;"	d
padc	obj/user/forktree.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^            padc = '0';$/;"	d
padc	obj/user/hello.asm	/^            padc = '-';$/;"	d
padc	obj/user/hello.asm	/^            padc = '0';$/;"	d
padc	obj/user/matrix.asm	/^            padc = '-';$/;"	d
padc	obj/user/matrix.asm	/^            padc = '0';$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '-';$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '0';$/;"	d
padc	obj/user/priority.asm	/^            padc = '-';$/;"	d
padc	obj/user/priority.asm	/^            padc = '0';$/;"	d
padc	obj/user/softint.asm	/^            padc = '-';$/;"	d
padc	obj/user/softint.asm	/^            padc = '0';$/;"	d
padc	obj/user/spin.asm	/^            padc = '-';$/;"	d
padc	obj/user/spin.asm	/^            padc = '0';$/;"	d
padc	obj/user/testbss.asm	/^            padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^            padc = '0';$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '-';$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '0';$/;"	d
padc	obj/user/yield.asm	/^            padc = '-';$/;"	d
padc	obj/user/yield.asm	/^            padc = '0';$/;"	d
page	obj/kernel.asm	/^              page = pmm_manager->alloc_pages(n);$/;"	d
page	obj/kernel.asm	/^            page = p;$/;"	d
page2kva	kern/mm/pmm.h	/^page2kva(struct Page *page) {$/;"	f
page2pa	kern/mm/pmm.h	/^page2pa(struct Page *page) {$/;"	f
page2ppn	kern/mm/pmm.h	/^page2ppn(struct Page *page) {$/;"	f
page_init	kern/mm/pmm.c	/^page_init(void) {$/;"	f	file:
page_insert	kern/mm/pmm.c	/^page_insert(pde_t *pgdir, struct Page *page, uintptr_t la, uint32_t perm) {$/;"	f
page_link	kern/mm/memlayout.h	/^    list_entry_t page_link;         \/\/ free list link$/;"	m	struct:Page
page_ref	kern/mm/pmm.h	/^page_ref(struct Page *page) {$/;"	f
page_ref_dec	kern/mm/pmm.h	/^page_ref_dec(struct Page *page) {$/;"	f
page_ref_inc	kern/mm/pmm.h	/^page_ref_inc(struct Page *page) {$/;"	f
page_remove	kern/mm/pmm.c	/^page_remove(pde_t *pgdir, uintptr_t la) {$/;"	f
page_remove_pte	kern/mm/pmm.c	/^page_remove_pte(pde_t *pgdir, uintptr_t la, pte_t *ptep) {$/;"	f	file:
pages	kern/mm/kmalloc.c	/^	void *pages;$/;"	m	struct:bigblock	file:
pages	kern/mm/pmm.c	/^struct Page *pages;$/;"	v	typeref:struct:Page
pages	obj/kernel.asm	/^    pages = (struct Page *)ROUNDUP((void *)end, PGSIZE);$/;"	d
panic	kern/debug/assert.h	12;"	d
panic	user/libs/ulib.h	12;"	d
panic_dead	obj/kernel.asm	/^panic_dead:$/;"	l
parent	kern/process/proc.h	/^    struct proc_struct *parent;                 \/\/ the parent process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
parent	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::skew_heap_entry
parent	obj/user/waitkill.asm	/^    parent = getpid();$/;"	d
parent	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
parse	kern/debug/kmonitor.c	/^parse(char *buf, char **argv) {$/;"	f	file:
pass	tools/grade.sh	/^pass() {$/;"	f
pd_base	libs/x86.h	/^    uintptr_t pd_base;      \/\/ Base address$/;"	m	struct:pseudodesc
pd_lim	libs/x86.h	/^    uint16_t pd_lim;        \/\/ Limit$/;"	m	struct:pseudodesc
pde2page	kern/mm/pmm.h	/^pde2page(pde_t pde) {$/;"	f
pde_t	kern/mm/memlayout.h	/^typedef uintptr_t pde_t;$/;"	t
perm2str	kern/mm/pmm.c	/^perm2str(int perm) {$/;"	f	file:
pgdir	kern/mm/vmm.h	/^    pde_t *pgdir;                  \/\/ the PDT of these vma$/;"	m	struct:mm_struct
pgdir_alloc_page	kern/mm/pmm.c	/^pgdir_alloc_page(pde_t *pgdir, uintptr_t la, uint32_t perm) {$/;"	f
pgfault_handler	kern/trap/trap.c	/^pgfault_handler(struct trapframe *tf) {$/;"	f	file:
pgfault_num	kern/mm/vmm.c	/^volatile unsigned int pgfault_num=0;$/;"	v
ph	obj/bootblock.asm	/^    ph = (struct proghdr *)((uintptr_t)ELFHDR + ELFHDR->e_phoff);$/;"	d
pic_enable	kern/driver/picirq.c	/^pic_enable(unsigned int irq) {$/;"	f
pic_init	kern/driver/picirq.c	/^pic_init(void) {$/;"	f
pic_setmask	kern/driver/picirq.c	/^pic_setmask(uint16_t mask) {$/;"	f	file:
pick_next	kern/schedule/sched.h	/^    struct proc_struct *(*pick_next)(struct run_queue *rq);$/;"	m	struct:sched_class	typeref:struct:sched_class::pick_next
pid	kern/process/proc.h	/^    int pid;                                    \/\/ Process ID$/;"	m	struct:proc_struct
pid1	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid2	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid_hashfn	kern/process/proc.c	67;"	d	file:
pids	user/priority.c	/^int pids[TOTAL];$/;"	v
pmm_init	kern/mm/pmm.c	/^pmm_init(void) {$/;"	f
pmm_manager	kern/mm/pmm.c	/^const struct pmm_manager *pmm_manager;$/;"	v	typeref:struct:pmm_manager
pmm_manager	kern/mm/pmm.h	/^struct pmm_manager {$/;"	s
pmm_manager	obj/kernel.asm	/^    pmm_manager = &default_pmm_manager;$/;"	d
pos	obj/kernel.asm	/^    pos = inb(addr_6845 + 1) << 8;$/;"	d
ppn_t	libs/defs.h	/^typedef size_t ppn_t;$/;"	t
pra_list_head	kern/mm/swap_fifo.c	/^list_entry_t pra_list_head;$/;"	v
pra_page_link	kern/mm/memlayout.h	/^    list_entry_t pra_page_link;     \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
pra_vaddr	kern/mm/memlayout.h	/^    uintptr_t pra_vaddr;            \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
precision	obj/kernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kernel.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/badarg.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badarg.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/badsegment.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/divzero.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/exit.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/exit.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultread.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/faultreadkernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktest.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktest.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/forktree.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/hello.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/matrix.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/matrix.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/pgdir.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pgdir.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/priority.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/priority.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/softint.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/spin.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/testbss.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/waitkill.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/waitkill.asm	/^            precision = va_arg(ap, int);$/;"	d
precision	obj/user/yield.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^            precision = va_arg(ap, int);$/;"	d
prev	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::list_entry
prev	obj/kernel.asm	/^				prev = cur;$/;"	d
prev	obj/kernel.asm	/^	prev = slobfree;$/;"	d
print_debuginfo	kern/debug/kdebug.c	/^print_debuginfo(uintptr_t eip) {$/;"	f
print_free_link	kern/mm/default_pmm.c	/^void print_free_link(){$/;"	f
print_kerninfo	kern/debug/kdebug.c	/^print_kerninfo(void) {$/;"	f
print_pgdir	kern/mm/pmm.c	/^print_pgdir(void) {$/;"	f
print_pgdir	user/libs/ulib.c	/^print_pgdir(void) {$/;"	f
print_pgfault	kern/trap/trap.c	/^print_pgfault(struct trapframe *tf) {$/;"	f	file:
print_regs	kern/trap/trap.c	/^print_regs(struct pushregs *regs) {$/;"	f
print_stackframe	kern/debug/kdebug.c	/^print_stackframe(void) {$/;"	f
print_ticks	kern/trap/trap.c	/^static void print_ticks() {$/;"	f	file:
print_trapframe	kern/trap/trap.c	/^print_trapframe(struct trapframe *tf) {$/;"	f
printfmt	libs/printfmt.c	/^printfmt(void (*putch)(int, void*), void *putdat, const char *fmt, ...) {$/;"	f
printnum	libs/printfmt.c	/^printnum(void (*putch)(int, void*), void *putdat,$/;"	f	file:
probe_memory	boot/bootasm.S	/^probe_memory:$/;"	l
probe_memory	obj/bootblock.asm	/^probe_memory:$/;"	l
proc	kern/schedule/sched.h	/^    struct proc_struct *proc;   \/\/the proc wait in this timer. If the expire time is end, then this proc will be scheduled$/;"	m	struct:__anon1	typeref:struct:__anon1::proc_struct
proc	obj/kernel.asm	/^            proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^            proc = le2proc(le, list_link);$/;"	d
proc	obj/kernel.asm	/^        proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^        proc = current->parent;$/;"	d
proc	obj/kernel.asm	/^        proc = find_proc(pid);$/;"	d
proc	obj/kernel.asm	/^    proc = alloc_proc();$/;"	d
proc_init	kern/process/proc.c	/^proc_init(void) {$/;"	f
proc_list	kern/process/proc.c	/^list_entry_t proc_list;$/;"	v
proc_num	kern/schedule/sched.h	/^    unsigned int proc_num;$/;"	m	struct:run_queue
proc_run	kern/process/proc.c	/^proc_run(struct proc_struct *proc) {$/;"	f
proc_state	kern/process/proc.h	/^enum proc_state {$/;"	g
proc_struct	kern/process/proc.h	/^struct proc_struct {$/;"	s
proc_tick	kern/schedule/sched.h	/^    void (*proc_tick)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
process_precision	obj/kernel.asm	/^        process_precision:$/;"	l
process_precision	obj/user/badarg.asm	/^        process_precision:$/;"	l
process_precision	obj/user/badsegment.asm	/^        process_precision:$/;"	l
process_precision	obj/user/divzero.asm	/^        process_precision:$/;"	l
process_precision	obj/user/exit.asm	/^        process_precision:$/;"	l
process_precision	obj/user/faultread.asm	/^        process_precision:$/;"	l
process_precision	obj/user/faultreadkernel.asm	/^        process_precision:$/;"	l
process_precision	obj/user/forktest.asm	/^        process_precision:$/;"	l
process_precision	obj/user/forktree.asm	/^        process_precision:$/;"	l
process_precision	obj/user/hello.asm	/^        process_precision:$/;"	l
process_precision	obj/user/matrix.asm	/^        process_precision:$/;"	l
process_precision	obj/user/pgdir.asm	/^        process_precision:$/;"	l
process_precision	obj/user/priority.asm	/^        process_precision:$/;"	l
process_precision	obj/user/softint.asm	/^        process_precision:$/;"	l
process_precision	obj/user/spin.asm	/^        process_precision:$/;"	l
process_precision	obj/user/testbss.asm	/^        process_precision:$/;"	l
process_precision	obj/user/waitkill.asm	/^        process_precision:$/;"	l
process_precision	obj/user/yield.asm	/^        process_precision:$/;"	l
proghdr	libs/elf.h	/^struct proghdr {$/;"	s
property	kern/mm/memlayout.h	/^    unsigned int property;          \/\/ the num of free block, used in first fit pm manager$/;"	m	struct:Page
protcseg	boot/bootasm.S	/^protcseg:$/;"	l
protcseg	obj/bootblock.asm	/^protcseg:$/;"	l
pseudodesc	libs/x86.h	/^struct pseudodesc {$/;"	s
pte2page	kern/mm/pmm.h	/^pte2page(pte_t pte) {$/;"	f
pte_t	kern/mm/memlayout.h	/^typedef uintptr_t pte_t;$/;"	t
pte_t	obj/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kernel.asm	/^    ptep = &((pte_t *)KADDR(PDE_ADDR(boot_pgdir[0])))[1];$/;"	d
ptep	obj/kernel.asm	/^   ptep = get_pte(mm->pgdir, addr, 1);$/;"	d
pushregs	kern/trap/trap.h	/^struct pushregs {$/;"	s
put_kstack	kern/process/proc.c	/^put_kstack(struct proc_struct *proc) {$/;"	f	file:
put_pgdir	kern/process/proc.c	/^put_pgdir(struct mm_struct *mm) {$/;"	f	file:
quick_check	tools/grade.sh	/^quick_check() {$/;"	f
quick_run	tools/grade.sh	/^quick_run() {$/;"	f
r	obj/kernel.asm	/^            r = m - 1;$/;"	d
rand	libs/rand.c	/^rand(void) {$/;"	f
rcr0	libs/x86.h	/^rcr0(void) {$/;"	f
rcr1	libs/x86.h	/^rcr1(void) {$/;"	f
rcr2	libs/x86.h	/^rcr2(void) {$/;"	f
rcr3	libs/x86.h	/^rcr3(void) {$/;"	f
read_dr	libs/x86.h	/^read_dr(unsigned regnum) {$/;"	f
read_ebp	libs/x86.h	/^read_ebp(void) {$/;"	f
read_eflags	libs/x86.h	/^read_eflags(void) {$/;"	f
read_eip	kern/debug/kdebug.c	/^read_eip(void) {$/;"	f	file:
read_packet	tools/function.mk	/^read_packet = $(foreach p,$(call packetname,$(1)),$($(p)))$/;"	m
readline	kern/libs/readline.c	/^readline(const char *prompt) {$/;"	f
readsect	boot/bootmain.c	/^readsect(void *dst, uint32_t secno) {$/;"	f	file:
readseg	boot/bootmain.c	/^readseg(uintptr_t va, uint32_t count, uint32_t offset) {$/;"	f	file:
ref	kern/mm/memlayout.h	/^    int ref;                        \/\/ page frame's reference counter$/;"	m	struct:Page
reg_eax	kern/trap/trap.h	/^    uint32_t reg_eax;$/;"	m	struct:pushregs
reg_ebp	kern/trap/trap.h	/^    uint32_t reg_ebp;$/;"	m	struct:pushregs
reg_ebx	kern/trap/trap.h	/^    uint32_t reg_ebx;$/;"	m	struct:pushregs
reg_ecx	kern/trap/trap.h	/^    uint32_t reg_ecx;$/;"	m	struct:pushregs
reg_edi	kern/trap/trap.h	/^    uint32_t reg_edi;$/;"	m	struct:pushregs
reg_edx	kern/trap/trap.h	/^    uint32_t reg_edx;$/;"	m	struct:pushregs
reg_esi	kern/trap/trap.h	/^    uint32_t reg_esi;$/;"	m	struct:pushregs
reg_oesp	kern/trap/trap.h	/^    uint32_t reg_oesp;          \/* Useless *\/$/;"	m	struct:pushregs
relocated	kern/init/entry.S	/^relocated:$/;"	l
relocated	obj/kernel.asm	/^relocated:$/;"	l
remove_links	kern/process/proc.c	/^remove_links(struct proc_struct *proc) {$/;"	f	file:
repeat	obj/kernel.asm	/^    repeat:$/;"	l
repeat	obj/kernel.asm	/^repeat:$/;"	l
reswitch	obj/kernel.asm	/^    reswitch:$/;"	l
reswitch	obj/user/badarg.asm	/^    reswitch:$/;"	l
reswitch	obj/user/badsegment.asm	/^    reswitch:$/;"	l
reswitch	obj/user/divzero.asm	/^    reswitch:$/;"	l
reswitch	obj/user/exit.asm	/^    reswitch:$/;"	l
reswitch	obj/user/faultread.asm	/^    reswitch:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^    reswitch:$/;"	l
reswitch	obj/user/forktest.asm	/^    reswitch:$/;"	l
reswitch	obj/user/forktree.asm	/^    reswitch:$/;"	l
reswitch	obj/user/hello.asm	/^    reswitch:$/;"	l
reswitch	obj/user/matrix.asm	/^    reswitch:$/;"	l
reswitch	obj/user/pgdir.asm	/^    reswitch:$/;"	l
reswitch	obj/user/priority.asm	/^    reswitch:$/;"	l
reswitch	obj/user/softint.asm	/^    reswitch:$/;"	l
reswitch	obj/user/spin.asm	/^    reswitch:$/;"	l
reswitch	obj/user/testbss.asm	/^    reswitch:$/;"	l
reswitch	obj/user/waitkill.asm	/^    reswitch:$/;"	l
reswitch	obj/user/yield.asm	/^    reswitch:$/;"	l
ret	obj/kernel.asm	/^            ret = -E_INVAL_ELF;$/;"	d
ret	obj/kernel.asm	/^         ret = page_insert(to, npage, start, perm);$/;"	d
ret	obj/kernel.asm	/^        ret = -E_INVAL_ELF;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^        ret = dup_mmap(mm, oldmm);$/;"	d
ret	obj/kernel.asm	/^        ret = pmm_manager->nr_free_pages();$/;"	d
ret	obj/kernel.asm	/^    ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^    ret = 0;$/;"	d
ret	obj/kernel.asm	/^    ret = proc->pid;$/;"	d
ret	obj/kernel.asm	/^   ret = 0;$/;"	d
right	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::
rline	obj/kernel.asm	/^        rline = rfile;$/;"	d
rline	obj/kernel.asm	/^        rline = rfun;$/;"	d
rpos	kern/driver/console.c	/^    uint32_t rpos;$/;"	m	struct:__anon5	file:
rq	kern/process/proc.h	/^    struct run_queue *rq;                       \/\/ running queue contains Process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::run_queue
rq	kern/schedule/sched.c	/^static struct run_queue *rq;$/;"	v	typeref:struct:run_queue	file:
rq	obj/kernel.asm	/^    rq = &__rq;$/;"	d
run_link	kern/process/proc.h	/^    list_entry_t run_link;                      \/\/ the entry linked in run queue$/;"	m	struct:proc_struct
run_list	kern/schedule/sched.h	/^    list_entry_t run_list;$/;"	m	struct:run_queue
run_qemu	tools/grade.sh	/^run_qemu() {$/;"	f
run_queue	kern/schedule/sched.h	/^struct run_queue {$/;"	s
run_test	tools/grade.sh	/^run_test() {$/;"	f
run_timer_list	kern/schedule/sched.c	/^run_timer_list(void) {$/;"	f
runcmd	kern/debug/kmonitor.c	/^runcmd(char *buf, struct trapframe *tf) {$/;"	f	file:
runs	kern/process/proc.h	/^    int runs;                                   \/\/ the running times of Proces$/;"	m	struct:proc_struct
sched_class	kern/schedule/sched.c	/^static struct sched_class *sched_class;$/;"	v	typeref:struct:sched_class	file:
sched_class	kern/schedule/sched.h	/^struct sched_class {$/;"	s
sched_class	obj/kernel.asm	/^    sched_class = &default_sched_class;$/;"	d
sched_class_dequeue	kern/schedule/sched.c	/^sched_class_dequeue(struct proc_struct *proc) {$/;"	f	file:
sched_class_enqueue	kern/schedule/sched.c	/^sched_class_enqueue(struct proc_struct *proc) {$/;"	f	file:
sched_class_pick_next	kern/schedule/sched.c	/^sched_class_pick_next(void) {$/;"	f	file:
sched_class_proc_tick	kern/schedule/sched.c	/^sched_class_proc_tick(struct proc_struct *proc) {$/;"	f	file:
sched_init	kern/schedule/sched.c	/^sched_init(void) {$/;"	f
schedule	kern/schedule/sched.c	/^schedule(void) {$/;"	f
sd_avl	kern/mm/mmu.h	/^    unsigned sd_avl : 1;            \/\/ unused (available for software use)$/;"	m	struct:segdesc
sd_base_15_0	kern/mm/mmu.h	/^    unsigned sd_base_15_0 : 16;     \/\/ low bits of segment base address$/;"	m	struct:segdesc
sd_base_23_16	kern/mm/mmu.h	/^    unsigned sd_base_23_16 : 8;     \/\/ middle bits of segment base address$/;"	m	struct:segdesc
sd_base_31_24	kern/mm/mmu.h	/^    unsigned sd_base_31_24 : 8;     \/\/ high bits of segment base address$/;"	m	struct:segdesc
sd_db	kern/mm/mmu.h	/^    unsigned sd_db : 1;             \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:segdesc
sd_dpl	kern/mm/mmu.h	/^    unsigned sd_dpl : 2;            \/\/ descriptor Privilege Level$/;"	m	struct:segdesc
sd_g	kern/mm/mmu.h	/^    unsigned sd_g : 1;              \/\/ granularity: limit scaled by 4K when set$/;"	m	struct:segdesc
sd_lim_15_0	kern/mm/mmu.h	/^    unsigned sd_lim_15_0 : 16;      \/\/ low bits of segment limit$/;"	m	struct:segdesc
sd_lim_19_16	kern/mm/mmu.h	/^    unsigned sd_lim_19_16 : 4;      \/\/ high bits of segment limit$/;"	m	struct:segdesc
sd_p	kern/mm/mmu.h	/^    unsigned sd_p : 1;              \/\/ present$/;"	m	struct:segdesc
sd_rsv1	kern/mm/mmu.h	/^    unsigned sd_rsv1 : 1;           \/\/ reserved$/;"	m	struct:segdesc
sd_s	kern/mm/mmu.h	/^    unsigned sd_s : 1;              \/\/ 0 = system, 1 = application$/;"	m	struct:segdesc
sd_type	kern/mm/mmu.h	/^    unsigned sd_type : 4;           \/\/ segment type (see STS_ constants)$/;"	m	struct:segdesc
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA);$/;"	d
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA_EXT);$/;"	d
segdesc	kern/mm/mmu.h	/^struct segdesc {$/;"	s
serial_exists	kern/driver/console.c	/^static bool serial_exists = 0;$/;"	v	file:
serial_exists	obj/kernel.asm	/^    serial_exists = (inb(COM1 + COM_LSR) != 0xFF);$/;"	d
serial_init	kern/driver/console.c	/^serial_init(void) {$/;"	f	file:
serial_intr	kern/driver/console.c	/^serial_intr(void) {$/;"	f
serial_proc_data	kern/driver/console.c	/^serial_proc_data(void) {$/;"	f	file:
serial_putc	kern/driver/console.c	/^serial_putc(int c) {$/;"	f	file:
serial_putc_sub	kern/driver/console.c	/^serial_putc_sub(int c) {$/;"	f	file:
set_bit	libs/atomic.h	/^set_bit(int nr, volatile void *addr) {$/;"	f
set_links	kern/process/proc.c	/^set_links(struct proc_struct *proc) {$/;"	f	file:
set_mm_count	kern/mm/vmm.h	/^set_mm_count(struct mm_struct *mm, int val) {$/;"	f
set_page_ref	kern/mm/pmm.h	/^set_page_ref(struct Page *page, int val) {$/;"	f
set_proc_name	kern/process/proc.c	/^set_proc_name(struct proc_struct *proc, const char *name) {$/;"	f
set_unswappable	kern/mm/swap.h	/^     int (*set_unswappable) (struct mm_struct *mm, uintptr_t addr);$/;"	m	struct:swap_manager
sets	kern/driver/ide.c	/^    unsigned int sets;          \/\/ Commend Sets Supported$/;"	m	struct:ide_device	file:
setup_kstack	kern/process/proc.c	/^setup_kstack(struct proc_struct *proc) {$/;"	f	file:
setup_pgdir	kern/process/proc.c	/^setup_pgdir(struct mm_struct *mm) {$/;"	f	file:
shiftcode	kern/driver/console.c	/^static uint8_t shiftcode[256] = {$/;"	v	file:
shiftmap	kern/driver/console.c	/^static uint8_t shiftmap[256] = {$/;"	v	file:
show_build_tag	tools/grade.sh	/^show_build_tag() {$/;"	f
show_check_tag	tools/grade.sh	/^show_check_tag() {$/;"	f
show_final	tools/grade.sh	/^show_final() {$/;"	f
show_msg	tools/grade.sh	/^show_msg() {$/;"	f
show_part	tools/grade.sh	/^show_part() {$/;"	f
show_time	tools/grade.sh	/^show_time() {$/;"	f
size	kern/driver/ide.c	/^    unsigned int size;          \/\/ Size in Sectors$/;"	m	struct:ide_device	file:
size	kern/mm/memlayout.h	/^        uint64_t size;$/;"	m	struct:e820map::__anon2
size_t	libs/defs.h	/^typedef uintptr_t size_t;$/;"	t
size_t	obj/kernel.asm	/^size_t$/;"	l
size_t	obj/user/badarg.asm	/^size_t$/;"	l
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
size_t	obj/user/divzero.asm	/^size_t$/;"	l
size_t	obj/user/exit.asm	/^size_t$/;"	l
size_t	obj/user/faultread.asm	/^size_t$/;"	l
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
size_t	obj/user/forktest.asm	/^size_t$/;"	l
size_t	obj/user/forktree.asm	/^size_t$/;"	l
size_t	obj/user/hello.asm	/^size_t$/;"	l
size_t	obj/user/matrix.asm	/^size_t$/;"	l
size_t	obj/user/pgdir.asm	/^size_t$/;"	l
size_t	obj/user/priority.asm	/^size_t$/;"	l
size_t	obj/user/softint.asm	/^size_t$/;"	l
size_t	obj/user/spin.asm	/^size_t$/;"	l
size_t	obj/user/testbss.asm	/^size_t$/;"	l
size_t	obj/user/waitkill.asm	/^size_t$/;"	l
size_t	obj/user/yield.asm	/^size_t$/;"	l
skew_heap_entry	libs/skew_heap.h	/^struct skew_heap_entry {$/;"	s
skew_heap_entry_t	libs/skew_heap.h	/^typedef struct skew_heap_entry skew_heap_entry_t;$/;"	t	typeref:struct:skew_heap_entry
skew_heap_init	libs/skew_heap.h	/^skew_heap_init(skew_heap_entry_t *a)$/;"	f
skew_heap_insert	libs/skew_heap.h	/^skew_heap_insert(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
skew_heap_merge	libs/skew_heap.h	/^skew_heap_merge(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
skew_heap_remove	libs/skew_heap.h	/^skew_heap_remove(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
slob_alloc	kern/mm/kmalloc.c	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	f	file:
slob_allocated	kern/mm/kmalloc.c	/^slob_allocated(void) {$/;"	f
slob_block	kern/mm/kmalloc.c	/^struct slob_block {$/;"	s	file:
slob_free	kern/mm/kmalloc.c	/^static void slob_free(void *block, int size)$/;"	f	file:
slob_init	kern/mm/kmalloc.c	/^slob_init(void) {$/;"	f
slob_t	kern/mm/kmalloc.c	/^typedef struct slob_block slob_t;$/;"	t	typeref:struct:slob_block	file:
slobfree	kern/mm/kmalloc.c	/^static slob_t *slobfree = &arena;$/;"	v	file:
slobfree	obj/kernel.asm	/^			slobfree = prev;$/;"	d
slobfree	obj/kernel.asm	/^	slobfree = cur;$/;"	d
sm	kern/mm/swap.c	/^static struct swap_manager *sm;$/;"	v	typeref:struct:swap_manager	file:
sm	obj/kernel.asm	/^     sm = &swap_manager_fifo;$/;"	d
sm_priv	kern/mm/vmm.h	/^    void *sm_priv;                 \/\/ the private data for swap manager$/;"	m	struct:mm_struct
snprintf	libs/printfmt.c	/^snprintf(char *str, size_t size, const char *fmt, ...) {$/;"	f
spin	boot/bootasm.S	/^spin:$/;"	l
spin	kern/init/entry.S	/^spin:$/;"	l
spin	obj/bootblock.asm	/^spin:$/;"	l
spin	obj/kernel.asm	/^spin:$/;"	l
spin_delay	user/priority.c	/^spin_delay(void)$/;"	f	file:
spin_lock_irqsave	kern/mm/kmalloc.c	43;"	d	file:
spin_unlock_irqrestore	kern/mm/kmalloc.c	44;"	d	file:
sprintbuf	libs/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	libs/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b) {$/;"	f	file:
srand	libs/rand.c	/^srand(unsigned int seed) {$/;"	f
stab	kern/debug/stab.h	/^struct stab {$/;"	s
stab_binsearch	kern/debug/kdebug.c	/^stab_binsearch(const struct stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/debug/kdebug.c	/^    const struct stab *stab_end;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stab_end	obj/kernel.asm	/^        stab_end = __STAB_END__;$/;"	d
stab_end	obj/kernel.asm	/^        stab_end = usd->stab_end;$/;"	d
stabs	kern/debug/kdebug.c	/^    const struct stab *stabs;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stabs	obj/kernel.asm	/^        stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kernel.asm	/^        stabs = usd->stabs;$/;"	d
stabstr	kern/debug/kdebug.c	/^    const char *stabstr;$/;"	m	struct:userstabdata	file:
stabstr	obj/kernel.asm	/^        stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kernel.asm	/^        stabstr = usd->stabstr;$/;"	d
stabstr_end	kern/debug/kdebug.c	/^    const char *stabstr_end;$/;"	m	struct:userstabdata	file:
stabstr_end	obj/kernel.asm	/^        stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kernel.asm	/^        stabstr_end = usd->stabstr_end;$/;"	d
start	boot/bootasm.S	/^start:$/;"	l
start	obj/bootblock.asm	/^start:$/;"	l
start	obj/kernel.asm	/^            start = ROUNDDOWN(start + PTSIZE, PTSIZE);$/;"	d
start	obj/kernel.asm	/^            start = vma->vm_end;$/;"	d
start	obj/kernel.asm	/^    start = ROUNDDOWN(start, PTSIZE);$/;"	d
start_probe	boot/bootasm.S	/^start_probe:$/;"	l
start_probe	obj/bootblock.asm	/^start_probe:$/;"	l
state	kern/process/proc.h	/^    enum proc_state state;                      \/\/ Process state$/;"	m	struct:proc_struct	typeref:enum:proc_struct::proc_state
static	obj/bootblock.asm	/^static inline uint8_t$/;"	l
static	obj/bootblock.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/bootblock.asm	/^static inline void$/;"	l
static	obj/bootblock.asm	/^static void$/;"	l
static	obj/kernel.asm	/^static __noinline uint32_t$/;"	l
static	obj/kernel.asm	/^static bigblock_t *bigblocks;$/;"	l
static	obj/kernel.asm	/^static bool did_init = 0;$/;"	l
static	obj/kernel.asm	/^static bool serial_exists = 0;$/;"	l
static	obj/kernel.asm	/^static const char *$/;"	l
static	obj/kernel.asm	/^static inline bool$/;"	l
static	obj/kernel.asm	/^static inline char *$/;"	l
static	obj/kernel.asm	/^static inline int$/;"	l
static	obj/kernel.asm	/^static inline list_entry_t *$/;"	l
static	obj/kernel.asm	/^static inline ppn_t$/;"	l
static	obj/kernel.asm	/^static inline struct Page *$/;"	l
static	obj/kernel.asm	/^static inline struct proc_struct *$/;"	l
static	obj/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kernel.asm	/^static inline uintptr_t$/;"	l
static	obj/kernel.asm	/^static inline void *$/;"	l
static	obj/kernel.asm	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	l
static	obj/kernel.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/kernel.asm	/^static inline void$/;"	l
static	obj/kernel.asm	/^static int find_order(int size)$/;"	l
static	obj/kernel.asm	/^static int$/;"	l
static	obj/kernel.asm	/^static long long$/;"	l
static	obj/kernel.asm	/^static size_t$/;"	l
static	obj/kernel.asm	/^static slob_t *slobfree = &arena;$/;"	l
static	obj/kernel.asm	/^static struct Page *$/;"	t
static	obj/kernel.asm	/^static struct proc_struct *$/;"	t
static	obj/kernel.asm	/^static struct run_queue *rq;$/;"	t
static	obj/kernel.asm	/^static struct run_queue __rq;$/;"	t
static	obj/kernel.asm	/^static struct sched_class *sched_class;$/;"	t
static	obj/kernel.asm	/^static uint16_t addr_6845;$/;"	l
static	obj/kernel.asm	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	l
static	obj/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kernel.asm	/^static void *$/;"	l
static	obj/kernel.asm	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	l
static	obj/kernel.asm	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	l
static	obj/kernel.asm	/^static void check_pgfault(void);$/;"	l
static	obj/kernel.asm	/^static void check_swap(void);$/;"	l
static	obj/kernel.asm	/^static void check_vma_struct(void);$/;"	l
static	obj/kernel.asm	/^static void lab1_switch_test(void);$/;"	l
static	obj/kernel.asm	/^static void print_ticks() {$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *b, int size);$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *block, int size)$/;"	l
static	obj/kernel.asm	/^static void$/;"	l
static	obj/kernel.asm	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	l
static	obj/kernel.asm	/^static volatile int in_swap_tick_event = 0;$/;"	l
static	obj/user/badarg.asm	/^static inline char *$/;"	l
static	obj/user/badarg.asm	/^static inline int$/;"	l
static	obj/user/badarg.asm	/^static inline void *$/;"	l
static	obj/user/badarg.asm	/^static long long$/;"	l
static	obj/user/badarg.asm	/^static unsigned long long$/;"	l
static	obj/user/badarg.asm	/^static void$/;"	l
static	obj/user/badsegment.asm	/^static inline char *$/;"	l
static	obj/user/badsegment.asm	/^static inline int$/;"	l
static	obj/user/badsegment.asm	/^static inline void *$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
static	obj/user/divzero.asm	/^static inline char *$/;"	l
static	obj/user/divzero.asm	/^static inline int$/;"	l
static	obj/user/divzero.asm	/^static inline void *$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
static	obj/user/exit.asm	/^static inline char *$/;"	l
static	obj/user/exit.asm	/^static inline int$/;"	l
static	obj/user/exit.asm	/^static inline void *$/;"	l
static	obj/user/exit.asm	/^static long long$/;"	l
static	obj/user/exit.asm	/^static unsigned long long$/;"	l
static	obj/user/exit.asm	/^static void$/;"	l
static	obj/user/faultread.asm	/^static inline char *$/;"	l
static	obj/user/faultread.asm	/^static inline int$/;"	l
static	obj/user/faultread.asm	/^static inline void *$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline char *$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline int$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline void *$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
static	obj/user/forktest.asm	/^static inline char *$/;"	l
static	obj/user/forktest.asm	/^static inline int$/;"	l
static	obj/user/forktest.asm	/^static inline void *$/;"	l
static	obj/user/forktest.asm	/^static long long$/;"	l
static	obj/user/forktest.asm	/^static unsigned long long$/;"	l
static	obj/user/forktest.asm	/^static void$/;"	l
static	obj/user/forktree.asm	/^static inline char *$/;"	l
static	obj/user/forktree.asm	/^static inline int$/;"	l
static	obj/user/forktree.asm	/^static inline void *$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
static	obj/user/hello.asm	/^static inline char *$/;"	l
static	obj/user/hello.asm	/^static inline int$/;"	l
static	obj/user/hello.asm	/^static inline void *$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
static	obj/user/matrix.asm	/^static inline char *$/;"	l
static	obj/user/matrix.asm	/^static inline int$/;"	l
static	obj/user/matrix.asm	/^static inline void *$/;"	l
static	obj/user/matrix.asm	/^static int mata[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int matb[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int matc[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static long long$/;"	l
static	obj/user/matrix.asm	/^static unsigned long long$/;"	l
static	obj/user/matrix.asm	/^static void$/;"	l
static	obj/user/pgdir.asm	/^static inline char *$/;"	l
static	obj/user/pgdir.asm	/^static inline int$/;"	l
static	obj/user/pgdir.asm	/^static inline void *$/;"	l
static	obj/user/pgdir.asm	/^static long long$/;"	l
static	obj/user/pgdir.asm	/^static unsigned long long$/;"	l
static	obj/user/pgdir.asm	/^static void$/;"	l
static	obj/user/priority.asm	/^static inline char *$/;"	l
static	obj/user/priority.asm	/^static inline int$/;"	l
static	obj/user/priority.asm	/^static inline void *$/;"	l
static	obj/user/priority.asm	/^static long long$/;"	l
static	obj/user/priority.asm	/^static unsigned long long$/;"	l
static	obj/user/priority.asm	/^static void$/;"	l
static	obj/user/softint.asm	/^static inline char *$/;"	l
static	obj/user/softint.asm	/^static inline int$/;"	l
static	obj/user/softint.asm	/^static inline void *$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
static	obj/user/spin.asm	/^static inline char *$/;"	l
static	obj/user/spin.asm	/^static inline int$/;"	l
static	obj/user/spin.asm	/^static inline void *$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
static	obj/user/testbss.asm	/^static inline char *$/;"	l
static	obj/user/testbss.asm	/^static inline int$/;"	l
static	obj/user/testbss.asm	/^static inline void *$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
static	obj/user/waitkill.asm	/^static inline char *$/;"	l
static	obj/user/waitkill.asm	/^static inline int$/;"	l
static	obj/user/waitkill.asm	/^static inline void *$/;"	l
static	obj/user/waitkill.asm	/^static long long$/;"	l
static	obj/user/waitkill.asm	/^static unsigned long long$/;"	l
static	obj/user/waitkill.asm	/^static void$/;"	l
static	obj/user/yield.asm	/^static inline char *$/;"	l
static	obj/user/yield.asm	/^static inline int$/;"	l
static	obj/user/yield.asm	/^static inline void *$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
static_assert	kern/debug/assert.h	23;"	d
static_assert	user/libs/ulib.h	23;"	d
status	user/priority.c	/^int status[TOTAL];$/;"	v
sti	libs/x86.h	/^sti(void) {$/;"	f
strchr	libs/string.c	/^strchr(const char *s, char c) {$/;"	f
strcmp	libs/string.c	/^strcmp(const char *s1, const char *s2) {$/;"	f
strcpy	libs/string.c	/^strcpy(char *dst, const char *src) {$/;"	f
strfind	libs/string.c	/^strfind(const char *s, char c) {$/;"	f
strlen	libs/string.c	/^strlen(const char *s) {$/;"	f
strncmp	libs/string.c	/^strncmp(const char *s1, const char *s2, size_t n) {$/;"	f
strncpy	libs/string.c	/^strncpy(char *dst, const char *src, size_t len) {$/;"	f
strnlen	libs/string.c	/^strnlen(const char *s, size_t len) {$/;"	f
strtol	libs/string.c	/^strtol(const char *s, char **endptr, int base) {$/;"	f
swap_entry_t	kern/mm/memlayout.h	/^typedef pte_t swap_entry_t; \/\/the pte can also be a swap entry$/;"	t
swap_in	kern/mm/swap.c	/^swap_in(struct mm_struct *mm, uintptr_t addr, struct Page **ptr_result)$/;"	f
swap_in_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_init	kern/mm/swap.c	/^swap_init(void)$/;"	f
swap_init_mm	kern/mm/swap.c	/^swap_init_mm(struct mm_struct *mm)$/;"	f
swap_init_ok	kern/mm/swap.c	/^volatile int swap_init_ok = 0;$/;"	v
swap_init_ok	obj/kernel.asm	/^          swap_init_ok = 1;$/;"	d
swap_manager	kern/mm/swap.h	/^struct swap_manager$/;"	s
swap_manager_fifo	kern/mm/swap_fifo.c	/^struct swap_manager swap_manager_fifo =$/;"	v	typeref:struct:swap_manager
swap_map_swappable	kern/mm/swap.c	/^swap_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f
swap_offset	kern/mm/swap.h	25;"	d
swap_out	kern/mm/swap.c	/^swap_out(struct mm_struct *mm, int n, int in_tick)$/;"	f
swap_out_num	kern/mm/swap.c	/^volatile unsigned int swap_out_num=0;$/;"	v
swap_out_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_out_victim	kern/mm/swap.h	/^     int (*swap_out_victim) (struct mm_struct *mm, struct Page **ptr_page, int in_tick);$/;"	m	struct:swap_manager
swap_page	kern/mm/swap.c	/^unsigned int swap_page[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
swap_set_unswappable	kern/mm/swap.c	/^swap_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f
swap_tick_event	kern/mm/swap.c	/^swap_tick_event(struct mm_struct *mm)$/;"	f
swapfs_init	kern/fs/swapfs.c	/^swapfs_init(void) {$/;"	f
swapfs_read	kern/fs/swapfs.c	/^swapfs_read(swap_entry_t entry, struct Page *page) {$/;"	f
swapfs_write	kern/fs/swapfs.c	/^swapfs_write(swap_entry_t entry, struct Page *page) {$/;"	f
switch_to	kern/process/switch.S	/^switch_to:                      # switch_to(from, to)$/;"	l
switch_to	obj/kernel.asm	/^switch_to:                      # switch_to(from, to)$/;"	l
symfile	Makefile	/^symfile = $(call cgtype,$(call toobj,$(1)),o,sym)$/;"	m
sys_exec	kern/syscall/syscall.c	/^sys_exec(uint32_t arg[]) {$/;"	f	file:
sys_exit	kern/syscall/syscall.c	/^sys_exit(uint32_t arg[]) {$/;"	f	file:
sys_exit	user/libs/syscall.c	/^sys_exit(int error_code) {$/;"	f
sys_fork	kern/syscall/syscall.c	/^sys_fork(uint32_t arg[]) {$/;"	f	file:
sys_fork	user/libs/syscall.c	/^sys_fork(void) {$/;"	f
sys_getpid	kern/syscall/syscall.c	/^sys_getpid(uint32_t arg[]) {$/;"	f	file:
sys_getpid	user/libs/syscall.c	/^sys_getpid(void) {$/;"	f
sys_gettime	kern/syscall/syscall.c	/^sys_gettime(uint32_t arg[]) {$/;"	f	file:
sys_gettime	user/libs/syscall.c	/^sys_gettime(void) {$/;"	f
sys_kill	kern/syscall/syscall.c	/^sys_kill(uint32_t arg[]) {$/;"	f	file:
sys_kill	user/libs/syscall.c	/^sys_kill(int pid) {$/;"	f
sys_lab6_set_priority	kern/syscall/syscall.c	/^sys_lab6_set_priority(uint32_t arg[])$/;"	f	file:
sys_lab6_set_priority	user/libs/syscall.c	/^sys_lab6_set_priority(uint32_t priority)$/;"	f
sys_pgdir	kern/syscall/syscall.c	/^sys_pgdir(uint32_t arg[]) {$/;"	f	file:
sys_pgdir	user/libs/syscall.c	/^sys_pgdir(void) {$/;"	f
sys_putc	kern/syscall/syscall.c	/^sys_putc(uint32_t arg[]) {$/;"	f	file:
sys_putc	user/libs/syscall.c	/^sys_putc(int c) {$/;"	f
sys_wait	kern/syscall/syscall.c	/^sys_wait(uint32_t arg[]) {$/;"	f	file:
sys_wait	user/libs/syscall.c	/^sys_wait(int pid, int *store) {$/;"	f
sys_yield	kern/syscall/syscall.c	/^sys_yield(uint32_t arg[]) {$/;"	f	file:
sys_yield	user/libs/syscall.c	/^sys_yield(void) {$/;"	f
syscall	kern/syscall/syscall.c	/^syscall(void) {$/;"	f
syscall	user/libs/syscall.c	/^syscall(int num, ...) {$/;"	f	file:
syscalls	kern/syscall/syscall.c	/^static int (*syscalls[])(uint32_t arg[]) = {$/;"	v	file:
taskstate	kern/mm/mmu.h	/^struct taskstate {$/;"	s
temp_ptep	obj/kernel.asm	/^     temp_ptep = get_pte(mm->pgdir, BEING_CHECK_VALID_VADDR, 1);$/;"	d
test_and_clear_bit	libs/atomic.h	/^test_and_clear_bit(int nr, volatile void *addr) {$/;"	f
test_and_set_bit	libs/atomic.h	/^test_and_set_bit(int nr, volatile void *addr) {$/;"	f
test_bit	libs/atomic.h	/^test_bit(int nr, volatile void *addr) {$/;"	f
tf	kern/process/proc.h	/^    struct trapframe *tf;                       \/\/ Trap frame for current interrupt$/;"	m	struct:proc_struct	typeref:struct:proc_struct::trapframe
tf_cs	kern/trap/trap.h	/^    uint16_t tf_cs;$/;"	m	struct:trapframe
tf_ds	kern/trap/trap.h	/^    uint16_t tf_ds;$/;"	m	struct:trapframe
tf_eflags	kern/trap/trap.h	/^    uint32_t tf_eflags;$/;"	m	struct:trapframe
tf_eip	kern/trap/trap.h	/^    uintptr_t tf_eip;$/;"	m	struct:trapframe
tf_err	kern/trap/trap.h	/^    uint32_t tf_err;$/;"	m	struct:trapframe
tf_es	kern/trap/trap.h	/^    uint16_t tf_es;$/;"	m	struct:trapframe
tf_esp	kern/trap/trap.h	/^    uintptr_t tf_esp;$/;"	m	struct:trapframe
tf_fs	kern/trap/trap.h	/^    uint16_t tf_fs;$/;"	m	struct:trapframe
tf_gs	kern/trap/trap.h	/^    uint16_t tf_gs;$/;"	m	struct:trapframe
tf_padding0	kern/trap/trap.h	/^    uint16_t tf_padding0;$/;"	m	struct:trapframe
tf_padding1	kern/trap/trap.h	/^    uint16_t tf_padding1;$/;"	m	struct:trapframe
tf_padding2	kern/trap/trap.h	/^    uint16_t tf_padding2;$/;"	m	struct:trapframe
tf_padding3	kern/trap/trap.h	/^    uint16_t tf_padding3;$/;"	m	struct:trapframe
tf_padding4	kern/trap/trap.h	/^    uint16_t tf_padding4;$/;"	m	struct:trapframe
tf_padding5	kern/trap/trap.h	/^    uint16_t tf_padding5;$/;"	m	struct:trapframe
tf_regs	kern/trap/trap.h	/^    struct pushregs tf_regs;$/;"	m	struct:trapframe	typeref:struct:trapframe::pushregs
tf_ss	kern/trap/trap.h	/^    uint16_t tf_ss;$/;"	m	struct:trapframe
tf_trapno	kern/trap/trap.h	/^    uint32_t tf_trapno;$/;"	m	struct:trapframe
tick_event	kern/mm/swap.h	/^     int (*tick_event)      (struct mm_struct *mm);$/;"	m	struct:swap_manager
ticks	kern/driver/clock.c	/^volatile size_t ticks;$/;"	v
ticks	obj/kernel.asm	/^    ticks = 0;$/;"	d
ticks_record	obj/kernel.asm	/^            ticks_record = 0;$/;"	d
time_slice	kern/process/proc.h	/^    int time_slice;                             \/\/ time slice for occupying the CPU$/;"	m	struct:proc_struct
timer	obj/kernel.asm	/^                timer = le2timer(le, timer_link);$/;"	d
timer_init	kern/schedule/sched.h	/^timer_init(timer_t *timer, struct proc_struct *proc, int expires) {$/;"	f
timer_link	kern/schedule/sched.h	/^    list_entry_t timer_link;    \/\/the timer list$/;"	m	struct:__anon1
timer_list	kern/schedule/sched.c	/^static list_entry_t timer_list;$/;"	v	file:
timer_t	kern/schedule/sched.h	/^} timer_t;$/;"	t	typeref:struct:__anon1
times	obj/user/matrix.asm	/^            times = (times * times + 10) * 100;$/;"	d
tlb_invalidate	kern/mm/pmm.c	/^tlb_invalidate(pde_t *pgdir, uintptr_t la) {$/;"	f
tmp_kernel_frame	kern/trap/trap.c	/^struct trapframe *tmp_kernel_frame, tmp_user_frame;$/;"	v	typeref:struct:trapframe
tmp_kernel_frame	obj/kernel.asm	/^            tmp_kernel_frame = (struct trapframe *)(tf->tf_esp - (sizeof(struct trapframe) - 8));$/;"	d
tmp_user_frame	kern/trap/trap.c	/^struct trapframe *tmp_kernel_frame, tmp_user_frame;$/;"	v	typeref:struct:
tmp_user_frame	obj/kernel.asm	/^            tmp_user_frame = *tf;$/;"	d
to_struct	libs/defs.h	64;"	d
todep	tools/function.mk	/^todep = $(patsubst %.o,%.d,$(call toobj,$(1),$(2)))$/;"	m
togglecode	kern/driver/console.c	/^static uint8_t togglecode[256] = {$/;"	v	file:
toobj	tools/function.mk	/^toobj = $(addprefix $(OBJDIR)$(SLASH)$(if $(2),$(2)$(SLASH)),\\$/;"	m
total	user/matrix.c	/^const int total = 21;$/;"	v
totarget	tools/function.mk	/^totarget = $(addprefix $(BINDIR)$(SLASH),$(1))$/;"	m
trap	kern/trap/trap.c	/^trap(struct trapframe *tf) {$/;"	f
trap_dispatch	kern/trap/trap.c	/^trap_dispatch(struct trapframe *tf) {$/;"	f	file:
trap_in_kernel	kern/trap/trap.c	/^trap_in_kernel(struct trapframe *tf) {$/;"	f
trapframe	kern/trap/trap.h	/^struct trapframe {$/;"	s
trapname	kern/trap/trap.c	/^trapname(int trapno) {$/;"	f	file:
try_lock	kern/sync/sync.h	/^try_lock(lock_t *lock) {$/;"	f
ts	kern/mm/pmm.c	/^static struct taskstate ts = {0};$/;"	v	typeref:struct:taskstate	file:
ts_cr3	kern/mm/mmu.h	/^    uintptr_t ts_cr3;       \/\/ page directory base$/;"	m	struct:taskstate
ts_cs	kern/mm/mmu.h	/^    uint16_t ts_cs;$/;"	m	struct:taskstate
ts_ds	kern/mm/mmu.h	/^    uint16_t ts_ds;$/;"	m	struct:taskstate
ts_eax	kern/mm/mmu.h	/^    uint32_t ts_eax;        \/\/ more saved state (registers)$/;"	m	struct:taskstate
ts_ebp	kern/mm/mmu.h	/^    uintptr_t ts_ebp;$/;"	m	struct:taskstate
ts_ebx	kern/mm/mmu.h	/^    uint32_t ts_ebx;$/;"	m	struct:taskstate
ts_ecx	kern/mm/mmu.h	/^    uint32_t ts_ecx;$/;"	m	struct:taskstate
ts_edi	kern/mm/mmu.h	/^    uint32_t ts_edi;$/;"	m	struct:taskstate
ts_edx	kern/mm/mmu.h	/^    uint32_t ts_edx;$/;"	m	struct:taskstate
ts_eflags	kern/mm/mmu.h	/^    uint32_t ts_eflags;$/;"	m	struct:taskstate
ts_eip	kern/mm/mmu.h	/^    uintptr_t ts_eip;       \/\/ saved state from last task switch$/;"	m	struct:taskstate
ts_es	kern/mm/mmu.h	/^    uint16_t ts_es;         \/\/ even more saved state (segment selectors)$/;"	m	struct:taskstate
ts_esi	kern/mm/mmu.h	/^    uint32_t ts_esi;$/;"	m	struct:taskstate
ts_esp	kern/mm/mmu.h	/^    uintptr_t ts_esp;$/;"	m	struct:taskstate
ts_esp0	kern/mm/mmu.h	/^    uintptr_t ts_esp0;      \/\/ stack pointers and segment selectors$/;"	m	struct:taskstate
ts_esp1	kern/mm/mmu.h	/^    uintptr_t ts_esp1;$/;"	m	struct:taskstate
ts_esp2	kern/mm/mmu.h	/^    uintptr_t ts_esp2;$/;"	m	struct:taskstate
ts_fs	kern/mm/mmu.h	/^    uint16_t ts_fs;$/;"	m	struct:taskstate
ts_gs	kern/mm/mmu.h	/^    uint16_t ts_gs;$/;"	m	struct:taskstate
ts_iomb	kern/mm/mmu.h	/^    uint16_t ts_iomb;       \/\/ i\/o map base address$/;"	m	struct:taskstate
ts_ldt	kern/mm/mmu.h	/^    uint16_t ts_ldt;$/;"	m	struct:taskstate
ts_link	kern/mm/mmu.h	/^    uint32_t ts_link;       \/\/ old ts selector$/;"	m	struct:taskstate
ts_padding1	kern/mm/mmu.h	/^    uint16_t ts_padding1;$/;"	m	struct:taskstate
ts_padding10	kern/mm/mmu.h	/^    uint16_t ts_padding10;$/;"	m	struct:taskstate
ts_padding2	kern/mm/mmu.h	/^    uint16_t ts_padding2;$/;"	m	struct:taskstate
ts_padding3	kern/mm/mmu.h	/^    uint16_t ts_padding3;$/;"	m	struct:taskstate
ts_padding4	kern/mm/mmu.h	/^    uint16_t ts_padding4;$/;"	m	struct:taskstate
ts_padding5	kern/mm/mmu.h	/^    uint16_t ts_padding5;$/;"	m	struct:taskstate
ts_padding6	kern/mm/mmu.h	/^    uint16_t ts_padding6;$/;"	m	struct:taskstate
ts_padding7	kern/mm/mmu.h	/^    uint16_t ts_padding7;$/;"	m	struct:taskstate
ts_padding8	kern/mm/mmu.h	/^    uint16_t ts_padding8;$/;"	m	struct:taskstate
ts_padding9	kern/mm/mmu.h	/^    uint16_t ts_padding9;$/;"	m	struct:taskstate
ts_ss	kern/mm/mmu.h	/^    uint16_t ts_ss;$/;"	m	struct:taskstate
ts_ss0	kern/mm/mmu.h	/^    uint16_t ts_ss0;        \/\/ after an increase in privilege level$/;"	m	struct:taskstate
ts_ss1	kern/mm/mmu.h	/^    uint16_t ts_ss1;$/;"	m	struct:taskstate
ts_ss2	kern/mm/mmu.h	/^    uint16_t ts_ss2;$/;"	m	struct:taskstate
ts_t	kern/mm/mmu.h	/^    uint16_t ts_t;          \/\/ trap on task switch$/;"	m	struct:taskstate
type	kern/mm/memlayout.h	/^        uint32_t type;$/;"	m	struct:e820map::__anon2
typedef	obj/kernel.asm	/^typedef volatile bool lock_t;$/;"	l
ubinfile	Makefile	/^ubinfile = $(call outfile,$(addprefix $(USER_PREFIX),$(call filename,$(1))))$/;"	m
uint16_t	libs/defs.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	libs/defs.h	/^typedef unsigned int uint32_t;$/;"	t
uint32_t	obj/kernel.asm	/^uint32_t$/;"	l
uint32_t	obj/user/badarg.asm	/^uint32_t$/;"	l
uint32_t	obj/user/badsegment.asm	/^uint32_t$/;"	l
uint32_t	obj/user/divzero.asm	/^uint32_t$/;"	l
uint32_t	obj/user/exit.asm	/^uint32_t$/;"	l
uint32_t	obj/user/faultread.asm	/^uint32_t$/;"	l
uint32_t	obj/user/faultreadkernel.asm	/^uint32_t$/;"	l
uint32_t	obj/user/forktest.asm	/^uint32_t$/;"	l
uint32_t	obj/user/forktree.asm	/^uint32_t$/;"	l
uint32_t	obj/user/hello.asm	/^uint32_t$/;"	l
uint32_t	obj/user/matrix.asm	/^uint32_t$/;"	l
uint32_t	obj/user/pgdir.asm	/^uint32_t$/;"	l
uint32_t	obj/user/priority.asm	/^uint32_t$/;"	l
uint32_t	obj/user/softint.asm	/^uint32_t$/;"	l
uint32_t	obj/user/spin.asm	/^uint32_t$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t$/;"	l
uint32_t	obj/user/waitkill.asm	/^uint32_t$/;"	l
uint32_t	obj/user/yield.asm	/^uint32_t$/;"	l
uint64_t	libs/defs.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	libs/defs.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	libs/defs.h	/^typedef uint32_t uintptr_t;$/;"	t
umain	user/libs/umain.c	/^umain(void) {$/;"	f
unhash_proc	kern/process/proc.c	/^unhash_proc(struct proc_struct *proc) {$/;"	f	file:
units	kern/mm/kmalloc.c	/^	int units;$/;"	m	struct:slob_block	file:
unlock	kern/sync/sync.h	/^unlock(lock_t *lock) {$/;"	f
unlock_mm	kern/mm/vmm.h	/^unlock_mm(struct mm_struct *mm) {$/;"	f
unmap_range	kern/mm/pmm.c	/^unmap_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
unsigned	obj/kernel.asm	/^unsigned int ksize(const void *block)$/;"	l
unsigned	obj/user/badarg.asm	/^unsigned int$/;"	l
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
unsigned	obj/user/exit.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktest.asm	/^unsigned int$/;"	l
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
unsigned	obj/user/matrix.asm	/^unsigned int$/;"	l
unsigned	obj/user/pgdir.asm	/^unsigned int$/;"	l
unsigned	obj/user/priority.asm	/^unsigned int$/;"	l
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
unsigned	obj/user/waitkill.asm	/^unsigned int$/;"	l
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
update_score	tools/grade.sh	/^update_score() {$/;"	f
uprog_ld	Makefile	/^define uprog_ld$/;"	m
user_main	kern/process/proc.c	/^user_main(void *arg) {$/;"	f	file:
user_mem_check	kern/mm/vmm.c	/^user_mem_check(struct mm_struct *mm, uintptr_t addr, size_t len, bool write) {$/;"	f
userstabdata	kern/debug/kdebug.c	/^struct userstabdata {$/;"	s	file:
va_arg	libs/stdarg.h	8;"	d
va_end	libs/stdarg.h	9;"	d
va_list	libs/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	libs/stdarg.h	7;"	d
valid	kern/driver/ide.c	/^    unsigned char valid;        \/\/ 0 or 1 (If Device Really Exists)$/;"	m	struct:ide_device	file:
vcprintf	kern/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
vcprintf	user/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
vector0	kern/trap/vectors.S	/^vector0:$/;"	l
vector0	obj/kernel.asm	/^vector0:$/;"	l
vector1	kern/trap/vectors.S	/^vector1:$/;"	l
vector1	obj/kernel.asm	/^vector1:$/;"	l
vector10	kern/trap/vectors.S	/^vector10:$/;"	l
vector10	obj/kernel.asm	/^vector10:$/;"	l
vector100	kern/trap/vectors.S	/^vector100:$/;"	l
vector100	obj/kernel.asm	/^vector100:$/;"	l
vector101	kern/trap/vectors.S	/^vector101:$/;"	l
vector101	obj/kernel.asm	/^vector101:$/;"	l
vector102	kern/trap/vectors.S	/^vector102:$/;"	l
vector102	obj/kernel.asm	/^vector102:$/;"	l
vector103	kern/trap/vectors.S	/^vector103:$/;"	l
vector103	obj/kernel.asm	/^vector103:$/;"	l
vector104	kern/trap/vectors.S	/^vector104:$/;"	l
vector104	obj/kernel.asm	/^vector104:$/;"	l
vector105	kern/trap/vectors.S	/^vector105:$/;"	l
vector105	obj/kernel.asm	/^vector105:$/;"	l
vector106	kern/trap/vectors.S	/^vector106:$/;"	l
vector106	obj/kernel.asm	/^vector106:$/;"	l
vector107	kern/trap/vectors.S	/^vector107:$/;"	l
vector107	obj/kernel.asm	/^vector107:$/;"	l
vector108	kern/trap/vectors.S	/^vector108:$/;"	l
vector108	obj/kernel.asm	/^vector108:$/;"	l
vector109	kern/trap/vectors.S	/^vector109:$/;"	l
vector109	obj/kernel.asm	/^vector109:$/;"	l
vector11	kern/trap/vectors.S	/^vector11:$/;"	l
vector11	obj/kernel.asm	/^vector11:$/;"	l
vector110	kern/trap/vectors.S	/^vector110:$/;"	l
vector110	obj/kernel.asm	/^vector110:$/;"	l
vector111	kern/trap/vectors.S	/^vector111:$/;"	l
vector111	obj/kernel.asm	/^vector111:$/;"	l
vector112	kern/trap/vectors.S	/^vector112:$/;"	l
vector112	obj/kernel.asm	/^vector112:$/;"	l
vector113	kern/trap/vectors.S	/^vector113:$/;"	l
vector113	obj/kernel.asm	/^vector113:$/;"	l
vector114	kern/trap/vectors.S	/^vector114:$/;"	l
vector114	obj/kernel.asm	/^vector114:$/;"	l
vector115	kern/trap/vectors.S	/^vector115:$/;"	l
vector115	obj/kernel.asm	/^vector115:$/;"	l
vector116	kern/trap/vectors.S	/^vector116:$/;"	l
vector116	obj/kernel.asm	/^vector116:$/;"	l
vector117	kern/trap/vectors.S	/^vector117:$/;"	l
vector117	obj/kernel.asm	/^vector117:$/;"	l
vector118	kern/trap/vectors.S	/^vector118:$/;"	l
vector118	obj/kernel.asm	/^vector118:$/;"	l
vector119	kern/trap/vectors.S	/^vector119:$/;"	l
vector119	obj/kernel.asm	/^vector119:$/;"	l
vector12	kern/trap/vectors.S	/^vector12:$/;"	l
vector12	obj/kernel.asm	/^vector12:$/;"	l
vector120	kern/trap/vectors.S	/^vector120:$/;"	l
vector120	obj/kernel.asm	/^vector120:$/;"	l
vector121	kern/trap/vectors.S	/^vector121:$/;"	l
vector121	obj/kernel.asm	/^vector121:$/;"	l
vector122	kern/trap/vectors.S	/^vector122:$/;"	l
vector122	obj/kernel.asm	/^vector122:$/;"	l
vector123	kern/trap/vectors.S	/^vector123:$/;"	l
vector123	obj/kernel.asm	/^vector123:$/;"	l
vector124	kern/trap/vectors.S	/^vector124:$/;"	l
vector124	obj/kernel.asm	/^vector124:$/;"	l
vector125	kern/trap/vectors.S	/^vector125:$/;"	l
vector125	obj/kernel.asm	/^vector125:$/;"	l
vector126	kern/trap/vectors.S	/^vector126:$/;"	l
vector126	obj/kernel.asm	/^vector126:$/;"	l
vector127	kern/trap/vectors.S	/^vector127:$/;"	l
vector127	obj/kernel.asm	/^vector127:$/;"	l
vector128	kern/trap/vectors.S	/^vector128:$/;"	l
vector128	obj/kernel.asm	/^vector128:$/;"	l
vector129	kern/trap/vectors.S	/^vector129:$/;"	l
vector129	obj/kernel.asm	/^vector129:$/;"	l
vector13	kern/trap/vectors.S	/^vector13:$/;"	l
vector13	obj/kernel.asm	/^vector13:$/;"	l
vector130	kern/trap/vectors.S	/^vector130:$/;"	l
vector130	obj/kernel.asm	/^vector130:$/;"	l
vector131	kern/trap/vectors.S	/^vector131:$/;"	l
vector131	obj/kernel.asm	/^vector131:$/;"	l
vector132	kern/trap/vectors.S	/^vector132:$/;"	l
vector132	obj/kernel.asm	/^vector132:$/;"	l
vector133	kern/trap/vectors.S	/^vector133:$/;"	l
vector133	obj/kernel.asm	/^vector133:$/;"	l
vector134	kern/trap/vectors.S	/^vector134:$/;"	l
vector134	obj/kernel.asm	/^vector134:$/;"	l
vector135	kern/trap/vectors.S	/^vector135:$/;"	l
vector135	obj/kernel.asm	/^vector135:$/;"	l
vector136	kern/trap/vectors.S	/^vector136:$/;"	l
vector136	obj/kernel.asm	/^vector136:$/;"	l
vector137	kern/trap/vectors.S	/^vector137:$/;"	l
vector137	obj/kernel.asm	/^vector137:$/;"	l
vector138	kern/trap/vectors.S	/^vector138:$/;"	l
vector138	obj/kernel.asm	/^vector138:$/;"	l
vector139	kern/trap/vectors.S	/^vector139:$/;"	l
vector139	obj/kernel.asm	/^vector139:$/;"	l
vector14	kern/trap/vectors.S	/^vector14:$/;"	l
vector14	obj/kernel.asm	/^vector14:$/;"	l
vector140	kern/trap/vectors.S	/^vector140:$/;"	l
vector140	obj/kernel.asm	/^vector140:$/;"	l
vector141	kern/trap/vectors.S	/^vector141:$/;"	l
vector141	obj/kernel.asm	/^vector141:$/;"	l
vector142	kern/trap/vectors.S	/^vector142:$/;"	l
vector142	obj/kernel.asm	/^vector142:$/;"	l
vector143	kern/trap/vectors.S	/^vector143:$/;"	l
vector143	obj/kernel.asm	/^vector143:$/;"	l
vector144	kern/trap/vectors.S	/^vector144:$/;"	l
vector144	obj/kernel.asm	/^vector144:$/;"	l
vector145	kern/trap/vectors.S	/^vector145:$/;"	l
vector145	obj/kernel.asm	/^vector145:$/;"	l
vector146	kern/trap/vectors.S	/^vector146:$/;"	l
vector146	obj/kernel.asm	/^vector146:$/;"	l
vector147	kern/trap/vectors.S	/^vector147:$/;"	l
vector147	obj/kernel.asm	/^vector147:$/;"	l
vector148	kern/trap/vectors.S	/^vector148:$/;"	l
vector148	obj/kernel.asm	/^vector148:$/;"	l
vector149	kern/trap/vectors.S	/^vector149:$/;"	l
vector149	obj/kernel.asm	/^vector149:$/;"	l
vector15	kern/trap/vectors.S	/^vector15:$/;"	l
vector15	obj/kernel.asm	/^vector15:$/;"	l
vector150	kern/trap/vectors.S	/^vector150:$/;"	l
vector150	obj/kernel.asm	/^vector150:$/;"	l
vector151	kern/trap/vectors.S	/^vector151:$/;"	l
vector151	obj/kernel.asm	/^vector151:$/;"	l
vector152	kern/trap/vectors.S	/^vector152:$/;"	l
vector152	obj/kernel.asm	/^vector152:$/;"	l
vector153	kern/trap/vectors.S	/^vector153:$/;"	l
vector153	obj/kernel.asm	/^vector153:$/;"	l
vector154	kern/trap/vectors.S	/^vector154:$/;"	l
vector154	obj/kernel.asm	/^vector154:$/;"	l
vector155	kern/trap/vectors.S	/^vector155:$/;"	l
vector155	obj/kernel.asm	/^vector155:$/;"	l
vector156	kern/trap/vectors.S	/^vector156:$/;"	l
vector156	obj/kernel.asm	/^vector156:$/;"	l
vector157	kern/trap/vectors.S	/^vector157:$/;"	l
vector157	obj/kernel.asm	/^vector157:$/;"	l
vector158	kern/trap/vectors.S	/^vector158:$/;"	l
vector158	obj/kernel.asm	/^vector158:$/;"	l
vector159	kern/trap/vectors.S	/^vector159:$/;"	l
vector159	obj/kernel.asm	/^vector159:$/;"	l
vector16	kern/trap/vectors.S	/^vector16:$/;"	l
vector16	obj/kernel.asm	/^vector16:$/;"	l
vector160	kern/trap/vectors.S	/^vector160:$/;"	l
vector160	obj/kernel.asm	/^vector160:$/;"	l
vector161	kern/trap/vectors.S	/^vector161:$/;"	l
vector161	obj/kernel.asm	/^vector161:$/;"	l
vector162	kern/trap/vectors.S	/^vector162:$/;"	l
vector162	obj/kernel.asm	/^vector162:$/;"	l
vector163	kern/trap/vectors.S	/^vector163:$/;"	l
vector163	obj/kernel.asm	/^vector163:$/;"	l
vector164	kern/trap/vectors.S	/^vector164:$/;"	l
vector164	obj/kernel.asm	/^vector164:$/;"	l
vector165	kern/trap/vectors.S	/^vector165:$/;"	l
vector165	obj/kernel.asm	/^vector165:$/;"	l
vector166	kern/trap/vectors.S	/^vector166:$/;"	l
vector166	obj/kernel.asm	/^vector166:$/;"	l
vector167	kern/trap/vectors.S	/^vector167:$/;"	l
vector167	obj/kernel.asm	/^vector167:$/;"	l
vector168	kern/trap/vectors.S	/^vector168:$/;"	l
vector168	obj/kernel.asm	/^vector168:$/;"	l
vector169	kern/trap/vectors.S	/^vector169:$/;"	l
vector169	obj/kernel.asm	/^vector169:$/;"	l
vector17	kern/trap/vectors.S	/^vector17:$/;"	l
vector17	obj/kernel.asm	/^vector17:$/;"	l
vector170	kern/trap/vectors.S	/^vector170:$/;"	l
vector170	obj/kernel.asm	/^vector170:$/;"	l
vector171	kern/trap/vectors.S	/^vector171:$/;"	l
vector171	obj/kernel.asm	/^vector171:$/;"	l
vector172	kern/trap/vectors.S	/^vector172:$/;"	l
vector172	obj/kernel.asm	/^vector172:$/;"	l
vector173	kern/trap/vectors.S	/^vector173:$/;"	l
vector173	obj/kernel.asm	/^vector173:$/;"	l
vector174	kern/trap/vectors.S	/^vector174:$/;"	l
vector174	obj/kernel.asm	/^vector174:$/;"	l
vector175	kern/trap/vectors.S	/^vector175:$/;"	l
vector175	obj/kernel.asm	/^vector175:$/;"	l
vector176	kern/trap/vectors.S	/^vector176:$/;"	l
vector176	obj/kernel.asm	/^vector176:$/;"	l
vector177	kern/trap/vectors.S	/^vector177:$/;"	l
vector177	obj/kernel.asm	/^vector177:$/;"	l
vector178	kern/trap/vectors.S	/^vector178:$/;"	l
vector178	obj/kernel.asm	/^vector178:$/;"	l
vector179	kern/trap/vectors.S	/^vector179:$/;"	l
vector179	obj/kernel.asm	/^vector179:$/;"	l
vector18	kern/trap/vectors.S	/^vector18:$/;"	l
vector18	obj/kernel.asm	/^vector18:$/;"	l
vector180	kern/trap/vectors.S	/^vector180:$/;"	l
vector180	obj/kernel.asm	/^vector180:$/;"	l
vector181	kern/trap/vectors.S	/^vector181:$/;"	l
vector181	obj/kernel.asm	/^vector181:$/;"	l
vector182	kern/trap/vectors.S	/^vector182:$/;"	l
vector182	obj/kernel.asm	/^vector182:$/;"	l
vector183	kern/trap/vectors.S	/^vector183:$/;"	l
vector183	obj/kernel.asm	/^vector183:$/;"	l
vector184	kern/trap/vectors.S	/^vector184:$/;"	l
vector184	obj/kernel.asm	/^vector184:$/;"	l
vector185	kern/trap/vectors.S	/^vector185:$/;"	l
vector185	obj/kernel.asm	/^vector185:$/;"	l
vector186	kern/trap/vectors.S	/^vector186:$/;"	l
vector186	obj/kernel.asm	/^vector186:$/;"	l
vector187	kern/trap/vectors.S	/^vector187:$/;"	l
vector187	obj/kernel.asm	/^vector187:$/;"	l
vector188	kern/trap/vectors.S	/^vector188:$/;"	l
vector188	obj/kernel.asm	/^vector188:$/;"	l
vector189	kern/trap/vectors.S	/^vector189:$/;"	l
vector189	obj/kernel.asm	/^vector189:$/;"	l
vector19	kern/trap/vectors.S	/^vector19:$/;"	l
vector19	obj/kernel.asm	/^vector19:$/;"	l
vector190	kern/trap/vectors.S	/^vector190:$/;"	l
vector190	obj/kernel.asm	/^vector190:$/;"	l
vector191	kern/trap/vectors.S	/^vector191:$/;"	l
vector191	obj/kernel.asm	/^vector191:$/;"	l
vector192	kern/trap/vectors.S	/^vector192:$/;"	l
vector192	obj/kernel.asm	/^vector192:$/;"	l
vector193	kern/trap/vectors.S	/^vector193:$/;"	l
vector193	obj/kernel.asm	/^vector193:$/;"	l
vector194	kern/trap/vectors.S	/^vector194:$/;"	l
vector194	obj/kernel.asm	/^vector194:$/;"	l
vector195	kern/trap/vectors.S	/^vector195:$/;"	l
vector195	obj/kernel.asm	/^vector195:$/;"	l
vector196	kern/trap/vectors.S	/^vector196:$/;"	l
vector196	obj/kernel.asm	/^vector196:$/;"	l
vector197	kern/trap/vectors.S	/^vector197:$/;"	l
vector197	obj/kernel.asm	/^vector197:$/;"	l
vector198	kern/trap/vectors.S	/^vector198:$/;"	l
vector198	obj/kernel.asm	/^vector198:$/;"	l
vector199	kern/trap/vectors.S	/^vector199:$/;"	l
vector199	obj/kernel.asm	/^vector199:$/;"	l
vector2	kern/trap/vectors.S	/^vector2:$/;"	l
vector2	obj/kernel.asm	/^vector2:$/;"	l
vector20	kern/trap/vectors.S	/^vector20:$/;"	l
vector20	obj/kernel.asm	/^vector20:$/;"	l
vector200	kern/trap/vectors.S	/^vector200:$/;"	l
vector200	obj/kernel.asm	/^vector200:$/;"	l
vector201	kern/trap/vectors.S	/^vector201:$/;"	l
vector201	obj/kernel.asm	/^vector201:$/;"	l
vector202	kern/trap/vectors.S	/^vector202:$/;"	l
vector202	obj/kernel.asm	/^vector202:$/;"	l
vector203	kern/trap/vectors.S	/^vector203:$/;"	l
vector203	obj/kernel.asm	/^vector203:$/;"	l
vector204	kern/trap/vectors.S	/^vector204:$/;"	l
vector204	obj/kernel.asm	/^vector204:$/;"	l
vector205	kern/trap/vectors.S	/^vector205:$/;"	l
vector205	obj/kernel.asm	/^vector205:$/;"	l
vector206	kern/trap/vectors.S	/^vector206:$/;"	l
vector206	obj/kernel.asm	/^vector206:$/;"	l
vector207	kern/trap/vectors.S	/^vector207:$/;"	l
vector207	obj/kernel.asm	/^vector207:$/;"	l
vector208	kern/trap/vectors.S	/^vector208:$/;"	l
vector208	obj/kernel.asm	/^vector208:$/;"	l
vector209	kern/trap/vectors.S	/^vector209:$/;"	l
vector209	obj/kernel.asm	/^vector209:$/;"	l
vector21	kern/trap/vectors.S	/^vector21:$/;"	l
vector21	obj/kernel.asm	/^vector21:$/;"	l
vector210	kern/trap/vectors.S	/^vector210:$/;"	l
vector210	obj/kernel.asm	/^vector210:$/;"	l
vector211	kern/trap/vectors.S	/^vector211:$/;"	l
vector211	obj/kernel.asm	/^vector211:$/;"	l
vector212	kern/trap/vectors.S	/^vector212:$/;"	l
vector212	obj/kernel.asm	/^vector212:$/;"	l
vector213	kern/trap/vectors.S	/^vector213:$/;"	l
vector213	obj/kernel.asm	/^vector213:$/;"	l
vector214	kern/trap/vectors.S	/^vector214:$/;"	l
vector214	obj/kernel.asm	/^vector214:$/;"	l
vector215	kern/trap/vectors.S	/^vector215:$/;"	l
vector215	obj/kernel.asm	/^vector215:$/;"	l
vector216	kern/trap/vectors.S	/^vector216:$/;"	l
vector216	obj/kernel.asm	/^vector216:$/;"	l
vector217	kern/trap/vectors.S	/^vector217:$/;"	l
vector217	obj/kernel.asm	/^vector217:$/;"	l
vector218	kern/trap/vectors.S	/^vector218:$/;"	l
vector218	obj/kernel.asm	/^vector218:$/;"	l
vector219	kern/trap/vectors.S	/^vector219:$/;"	l
vector219	obj/kernel.asm	/^vector219:$/;"	l
vector22	kern/trap/vectors.S	/^vector22:$/;"	l
vector22	obj/kernel.asm	/^vector22:$/;"	l
vector220	kern/trap/vectors.S	/^vector220:$/;"	l
vector220	obj/kernel.asm	/^vector220:$/;"	l
vector221	kern/trap/vectors.S	/^vector221:$/;"	l
vector221	obj/kernel.asm	/^vector221:$/;"	l
vector222	kern/trap/vectors.S	/^vector222:$/;"	l
vector222	obj/kernel.asm	/^vector222:$/;"	l
vector223	kern/trap/vectors.S	/^vector223:$/;"	l
vector223	obj/kernel.asm	/^vector223:$/;"	l
vector224	kern/trap/vectors.S	/^vector224:$/;"	l
vector224	obj/kernel.asm	/^vector224:$/;"	l
vector225	kern/trap/vectors.S	/^vector225:$/;"	l
vector225	obj/kernel.asm	/^vector225:$/;"	l
vector226	kern/trap/vectors.S	/^vector226:$/;"	l
vector226	obj/kernel.asm	/^vector226:$/;"	l
vector227	kern/trap/vectors.S	/^vector227:$/;"	l
vector227	obj/kernel.asm	/^vector227:$/;"	l
vector228	kern/trap/vectors.S	/^vector228:$/;"	l
vector228	obj/kernel.asm	/^vector228:$/;"	l
vector229	kern/trap/vectors.S	/^vector229:$/;"	l
vector229	obj/kernel.asm	/^vector229:$/;"	l
vector23	kern/trap/vectors.S	/^vector23:$/;"	l
vector23	obj/kernel.asm	/^vector23:$/;"	l
vector230	kern/trap/vectors.S	/^vector230:$/;"	l
vector230	obj/kernel.asm	/^vector230:$/;"	l
vector231	kern/trap/vectors.S	/^vector231:$/;"	l
vector231	obj/kernel.asm	/^vector231:$/;"	l
vector232	kern/trap/vectors.S	/^vector232:$/;"	l
vector232	obj/kernel.asm	/^vector232:$/;"	l
vector233	kern/trap/vectors.S	/^vector233:$/;"	l
vector233	obj/kernel.asm	/^vector233:$/;"	l
vector234	kern/trap/vectors.S	/^vector234:$/;"	l
vector234	obj/kernel.asm	/^vector234:$/;"	l
vector235	kern/trap/vectors.S	/^vector235:$/;"	l
vector235	obj/kernel.asm	/^vector235:$/;"	l
vector236	kern/trap/vectors.S	/^vector236:$/;"	l
vector236	obj/kernel.asm	/^vector236:$/;"	l
vector237	kern/trap/vectors.S	/^vector237:$/;"	l
vector237	obj/kernel.asm	/^vector237:$/;"	l
vector238	kern/trap/vectors.S	/^vector238:$/;"	l
vector238	obj/kernel.asm	/^vector238:$/;"	l
vector239	kern/trap/vectors.S	/^vector239:$/;"	l
vector239	obj/kernel.asm	/^vector239:$/;"	l
vector24	kern/trap/vectors.S	/^vector24:$/;"	l
vector24	obj/kernel.asm	/^vector24:$/;"	l
vector240	kern/trap/vectors.S	/^vector240:$/;"	l
vector240	obj/kernel.asm	/^vector240:$/;"	l
vector241	kern/trap/vectors.S	/^vector241:$/;"	l
vector241	obj/kernel.asm	/^vector241:$/;"	l
vector242	kern/trap/vectors.S	/^vector242:$/;"	l
vector242	obj/kernel.asm	/^vector242:$/;"	l
vector243	kern/trap/vectors.S	/^vector243:$/;"	l
vector243	obj/kernel.asm	/^vector243:$/;"	l
vector244	kern/trap/vectors.S	/^vector244:$/;"	l
vector244	obj/kernel.asm	/^vector244:$/;"	l
vector245	kern/trap/vectors.S	/^vector245:$/;"	l
vector245	obj/kernel.asm	/^vector245:$/;"	l
vector246	kern/trap/vectors.S	/^vector246:$/;"	l
vector246	obj/kernel.asm	/^vector246:$/;"	l
vector247	kern/trap/vectors.S	/^vector247:$/;"	l
vector247	obj/kernel.asm	/^vector247:$/;"	l
vector248	kern/trap/vectors.S	/^vector248:$/;"	l
vector248	obj/kernel.asm	/^vector248:$/;"	l
vector249	kern/trap/vectors.S	/^vector249:$/;"	l
vector249	obj/kernel.asm	/^vector249:$/;"	l
vector25	kern/trap/vectors.S	/^vector25:$/;"	l
vector25	obj/kernel.asm	/^vector25:$/;"	l
vector250	kern/trap/vectors.S	/^vector250:$/;"	l
vector250	obj/kernel.asm	/^vector250:$/;"	l
vector251	kern/trap/vectors.S	/^vector251:$/;"	l
vector251	obj/kernel.asm	/^vector251:$/;"	l
vector252	kern/trap/vectors.S	/^vector252:$/;"	l
vector252	obj/kernel.asm	/^vector252:$/;"	l
vector253	kern/trap/vectors.S	/^vector253:$/;"	l
vector253	obj/kernel.asm	/^vector253:$/;"	l
vector254	kern/trap/vectors.S	/^vector254:$/;"	l
vector254	obj/kernel.asm	/^vector254:$/;"	l
vector255	kern/trap/vectors.S	/^vector255:$/;"	l
vector255	obj/kernel.asm	/^vector255:$/;"	l
vector26	kern/trap/vectors.S	/^vector26:$/;"	l
vector26	obj/kernel.asm	/^vector26:$/;"	l
vector27	kern/trap/vectors.S	/^vector27:$/;"	l
vector27	obj/kernel.asm	/^vector27:$/;"	l
vector28	kern/trap/vectors.S	/^vector28:$/;"	l
vector28	obj/kernel.asm	/^vector28:$/;"	l
vector29	kern/trap/vectors.S	/^vector29:$/;"	l
vector29	obj/kernel.asm	/^vector29:$/;"	l
vector3	kern/trap/vectors.S	/^vector3:$/;"	l
vector3	obj/kernel.asm	/^vector3:$/;"	l
vector30	kern/trap/vectors.S	/^vector30:$/;"	l
vector30	obj/kernel.asm	/^vector30:$/;"	l
vector31	kern/trap/vectors.S	/^vector31:$/;"	l
vector31	obj/kernel.asm	/^vector31:$/;"	l
vector32	kern/trap/vectors.S	/^vector32:$/;"	l
vector32	obj/kernel.asm	/^vector32:$/;"	l
vector33	kern/trap/vectors.S	/^vector33:$/;"	l
vector33	obj/kernel.asm	/^vector33:$/;"	l
vector34	kern/trap/vectors.S	/^vector34:$/;"	l
vector34	obj/kernel.asm	/^vector34:$/;"	l
vector35	kern/trap/vectors.S	/^vector35:$/;"	l
vector35	obj/kernel.asm	/^vector35:$/;"	l
vector36	kern/trap/vectors.S	/^vector36:$/;"	l
vector36	obj/kernel.asm	/^vector36:$/;"	l
vector37	kern/trap/vectors.S	/^vector37:$/;"	l
vector37	obj/kernel.asm	/^vector37:$/;"	l
vector38	kern/trap/vectors.S	/^vector38:$/;"	l
vector38	obj/kernel.asm	/^vector38:$/;"	l
vector39	kern/trap/vectors.S	/^vector39:$/;"	l
vector39	obj/kernel.asm	/^vector39:$/;"	l
vector4	kern/trap/vectors.S	/^vector4:$/;"	l
vector4	obj/kernel.asm	/^vector4:$/;"	l
vector40	kern/trap/vectors.S	/^vector40:$/;"	l
vector40	obj/kernel.asm	/^vector40:$/;"	l
vector41	kern/trap/vectors.S	/^vector41:$/;"	l
vector41	obj/kernel.asm	/^vector41:$/;"	l
vector42	kern/trap/vectors.S	/^vector42:$/;"	l
vector42	obj/kernel.asm	/^vector42:$/;"	l
vector43	kern/trap/vectors.S	/^vector43:$/;"	l
vector43	obj/kernel.asm	/^vector43:$/;"	l
vector44	kern/trap/vectors.S	/^vector44:$/;"	l
vector44	obj/kernel.asm	/^vector44:$/;"	l
vector45	kern/trap/vectors.S	/^vector45:$/;"	l
vector45	obj/kernel.asm	/^vector45:$/;"	l
vector46	kern/trap/vectors.S	/^vector46:$/;"	l
vector46	obj/kernel.asm	/^vector46:$/;"	l
vector47	kern/trap/vectors.S	/^vector47:$/;"	l
vector47	obj/kernel.asm	/^vector47:$/;"	l
vector48	kern/trap/vectors.S	/^vector48:$/;"	l
vector48	obj/kernel.asm	/^vector48:$/;"	l
vector49	kern/trap/vectors.S	/^vector49:$/;"	l
vector49	obj/kernel.asm	/^vector49:$/;"	l
vector5	kern/trap/vectors.S	/^vector5:$/;"	l
vector5	obj/kernel.asm	/^vector5:$/;"	l
vector50	kern/trap/vectors.S	/^vector50:$/;"	l
vector50	obj/kernel.asm	/^vector50:$/;"	l
vector51	kern/trap/vectors.S	/^vector51:$/;"	l
vector51	obj/kernel.asm	/^vector51:$/;"	l
vector52	kern/trap/vectors.S	/^vector52:$/;"	l
vector52	obj/kernel.asm	/^vector52:$/;"	l
vector53	kern/trap/vectors.S	/^vector53:$/;"	l
vector53	obj/kernel.asm	/^vector53:$/;"	l
vector54	kern/trap/vectors.S	/^vector54:$/;"	l
vector54	obj/kernel.asm	/^vector54:$/;"	l
vector55	kern/trap/vectors.S	/^vector55:$/;"	l
vector55	obj/kernel.asm	/^vector55:$/;"	l
vector56	kern/trap/vectors.S	/^vector56:$/;"	l
vector56	obj/kernel.asm	/^vector56:$/;"	l
vector57	kern/trap/vectors.S	/^vector57:$/;"	l
vector57	obj/kernel.asm	/^vector57:$/;"	l
vector58	kern/trap/vectors.S	/^vector58:$/;"	l
vector58	obj/kernel.asm	/^vector58:$/;"	l
vector59	kern/trap/vectors.S	/^vector59:$/;"	l
vector59	obj/kernel.asm	/^vector59:$/;"	l
vector6	kern/trap/vectors.S	/^vector6:$/;"	l
vector6	obj/kernel.asm	/^vector6:$/;"	l
vector60	kern/trap/vectors.S	/^vector60:$/;"	l
vector60	obj/kernel.asm	/^vector60:$/;"	l
vector61	kern/trap/vectors.S	/^vector61:$/;"	l
vector61	obj/kernel.asm	/^vector61:$/;"	l
vector62	kern/trap/vectors.S	/^vector62:$/;"	l
vector62	obj/kernel.asm	/^vector62:$/;"	l
vector63	kern/trap/vectors.S	/^vector63:$/;"	l
vector63	obj/kernel.asm	/^vector63:$/;"	l
vector64	kern/trap/vectors.S	/^vector64:$/;"	l
vector64	obj/kernel.asm	/^vector64:$/;"	l
vector65	kern/trap/vectors.S	/^vector65:$/;"	l
vector65	obj/kernel.asm	/^vector65:$/;"	l
vector66	kern/trap/vectors.S	/^vector66:$/;"	l
vector66	obj/kernel.asm	/^vector66:$/;"	l
vector67	kern/trap/vectors.S	/^vector67:$/;"	l
vector67	obj/kernel.asm	/^vector67:$/;"	l
vector68	kern/trap/vectors.S	/^vector68:$/;"	l
vector68	obj/kernel.asm	/^vector68:$/;"	l
vector69	kern/trap/vectors.S	/^vector69:$/;"	l
vector69	obj/kernel.asm	/^vector69:$/;"	l
vector7	kern/trap/vectors.S	/^vector7:$/;"	l
vector7	obj/kernel.asm	/^vector7:$/;"	l
vector70	kern/trap/vectors.S	/^vector70:$/;"	l
vector70	obj/kernel.asm	/^vector70:$/;"	l
vector71	kern/trap/vectors.S	/^vector71:$/;"	l
vector71	obj/kernel.asm	/^vector71:$/;"	l
vector72	kern/trap/vectors.S	/^vector72:$/;"	l
vector72	obj/kernel.asm	/^vector72:$/;"	l
vector73	kern/trap/vectors.S	/^vector73:$/;"	l
vector73	obj/kernel.asm	/^vector73:$/;"	l
vector74	kern/trap/vectors.S	/^vector74:$/;"	l
vector74	obj/kernel.asm	/^vector74:$/;"	l
vector75	kern/trap/vectors.S	/^vector75:$/;"	l
vector75	obj/kernel.asm	/^vector75:$/;"	l
vector76	kern/trap/vectors.S	/^vector76:$/;"	l
vector76	obj/kernel.asm	/^vector76:$/;"	l
vector77	kern/trap/vectors.S	/^vector77:$/;"	l
vector77	obj/kernel.asm	/^vector77:$/;"	l
vector78	kern/trap/vectors.S	/^vector78:$/;"	l
vector78	obj/kernel.asm	/^vector78:$/;"	l
vector79	kern/trap/vectors.S	/^vector79:$/;"	l
vector79	obj/kernel.asm	/^vector79:$/;"	l
vector8	kern/trap/vectors.S	/^vector8:$/;"	l
vector8	obj/kernel.asm	/^vector8:$/;"	l
vector80	kern/trap/vectors.S	/^vector80:$/;"	l
vector80	obj/kernel.asm	/^vector80:$/;"	l
vector81	kern/trap/vectors.S	/^vector81:$/;"	l
vector81	obj/kernel.asm	/^vector81:$/;"	l
vector82	kern/trap/vectors.S	/^vector82:$/;"	l
vector82	obj/kernel.asm	/^vector82:$/;"	l
vector83	kern/trap/vectors.S	/^vector83:$/;"	l
vector83	obj/kernel.asm	/^vector83:$/;"	l
vector84	kern/trap/vectors.S	/^vector84:$/;"	l
vector84	obj/kernel.asm	/^vector84:$/;"	l
vector85	kern/trap/vectors.S	/^vector85:$/;"	l
vector85	obj/kernel.asm	/^vector85:$/;"	l
vector86	kern/trap/vectors.S	/^vector86:$/;"	l
vector86	obj/kernel.asm	/^vector86:$/;"	l
vector87	kern/trap/vectors.S	/^vector87:$/;"	l
vector87	obj/kernel.asm	/^vector87:$/;"	l
vector88	kern/trap/vectors.S	/^vector88:$/;"	l
vector88	obj/kernel.asm	/^vector88:$/;"	l
vector89	kern/trap/vectors.S	/^vector89:$/;"	l
vector89	obj/kernel.asm	/^vector89:$/;"	l
vector9	kern/trap/vectors.S	/^vector9:$/;"	l
vector9	obj/kernel.asm	/^vector9:$/;"	l
vector90	kern/trap/vectors.S	/^vector90:$/;"	l
vector90	obj/kernel.asm	/^vector90:$/;"	l
vector91	kern/trap/vectors.S	/^vector91:$/;"	l
vector91	obj/kernel.asm	/^vector91:$/;"	l
vector92	kern/trap/vectors.S	/^vector92:$/;"	l
vector92	obj/kernel.asm	/^vector92:$/;"	l
vector93	kern/trap/vectors.S	/^vector93:$/;"	l
vector93	obj/kernel.asm	/^vector93:$/;"	l
vector94	kern/trap/vectors.S	/^vector94:$/;"	l
vector94	obj/kernel.asm	/^vector94:$/;"	l
vector95	kern/trap/vectors.S	/^vector95:$/;"	l
vector95	obj/kernel.asm	/^vector95:$/;"	l
vector96	kern/trap/vectors.S	/^vector96:$/;"	l
vector96	obj/kernel.asm	/^vector96:$/;"	l
vector97	kern/trap/vectors.S	/^vector97:$/;"	l
vector97	obj/kernel.asm	/^vector97:$/;"	l
vector98	kern/trap/vectors.S	/^vector98:$/;"	l
vector98	obj/kernel.asm	/^vector98:$/;"	l
vector99	kern/trap/vectors.S	/^vector99:$/;"	l
vector99	obj/kernel.asm	/^vector99:$/;"	l
vm_end	kern/mm/vmm.h	/^    uintptr_t vm_end;        \/\/ end addr of vma, not include the vm_end itself$/;"	m	struct:vma_struct
vm_flags	kern/mm/vmm.h	/^    uint32_t vm_flags;       \/\/ flags of vma$/;"	m	struct:vma_struct
vm_flags	obj/kernel.asm	/^        vm_flags = 0, perm = PTE_U;$/;"	d
vm_flags	obj/kernel.asm	/^    vm_flags = VM_READ | VM_WRITE | VM_STACK;$/;"	d
vm_mm	kern/mm/vmm.h	/^    struct mm_struct *vm_mm; \/\/ the set of vma using the same PDT $/;"	m	struct:vma_struct	typeref:struct:vma_struct::mm_struct
vm_start	kern/mm/vmm.h	/^    uintptr_t vm_start;      \/\/ start addr of vma      $/;"	m	struct:vma_struct
vma	obj/kernel.asm	/^                    vma = NULL;$/;"	d
vma	obj/kernel.asm	/^                    vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = mm->mmap_cache;$/;"	d
vma_create	kern/mm/vmm.c	/^vma_create(uintptr_t vm_start, uintptr_t vm_end, uint32_t vm_flags) {$/;"	f
vma_struct	kern/mm/vmm.h	/^struct vma_struct {$/;"	s
vmm_init	kern/mm/vmm.c	/^vmm_init(void) {$/;"	f
void	obj/bootblock.asm	/^void$/;"	l
void	obj/kernel.asm	/^void *$/;"	l
void	obj/kernel.asm	/^void __attribute__((noinline))$/;"	l
void	obj/kernel.asm	/^void forkrets(struct trapframe *tf);$/;"	l
void	obj/kernel.asm	/^void grade_backtrace(void);$/;"	l
void	obj/kernel.asm	/^void kfree(void *block)$/;"	l
void	obj/kernel.asm	/^void print_free_link(){$/;"	l
void	obj/kernel.asm	/^void switch_to(struct context *from, struct context *to);$/;"	l
void	obj/kernel.asm	/^void$/;"	l
void	obj/user/badarg.asm	/^void *$/;"	l
void	obj/user/badarg.asm	/^void$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
void	obj/user/exit.asm	/^void *$/;"	l
void	obj/user/exit.asm	/^void$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
void	obj/user/forktest.asm	/^void *$/;"	l
void	obj/user/forktest.asm	/^void$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
void	obj/user/matrix.asm	/^void *$/;"	l
void	obj/user/matrix.asm	/^void$/;"	l
void	obj/user/pgdir.asm	/^void *$/;"	l
void	obj/user/pgdir.asm	/^void$/;"	l
void	obj/user/priority.asm	/^void *$/;"	l
void	obj/user/priority.asm	/^void$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
void	obj/user/waitkill.asm	/^void *$/;"	l
void	obj/user/waitkill.asm	/^void$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
volatile	obj/kernel.asm	/^volatile unsigned int swap_out_num=0;$/;"	l
vpd	kern/mm/pmm.c	/^pde_t * const vpd = (pde_t *)PGADDR(PDX(VPT), PDX(VPT), 0);$/;"	v
vprintfmt	libs/printfmt.c	/^vprintfmt(void (*putch)(int, void*), void *putdat, const char *fmt, va_list ap) {$/;"	f
vpt	kern/mm/pmm.c	/^pte_t * const vpt = (pte_t *)VPT;$/;"	v
vsnprintf	libs/printfmt.c	/^vsnprintf(char *str, size_t size, const char *fmt, va_list ap) {$/;"	f
wait	user/libs/ulib.c	/^wait(void) {$/;"	f
wait_state	kern/process/proc.h	/^    uint32_t wait_state;                        \/\/ waiting state$/;"	m	struct:proc_struct
waitdisk	boot/bootmain.c	/^waitdisk(void) {$/;"	f	file:
waitpid	user/libs/ulib.c	/^waitpid(int pid, int *store) {$/;"	f
wakeup_proc	kern/schedule/sched.c	/^wakeup_proc(struct proc_struct *proc) {$/;"	f
warn	kern/debug/assert.h	9;"	d
warn	user/libs/ulib.h	9;"	d
width	obj/kernel.asm	/^                width = 0;$/;"	d
width	obj/kernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/kernel.asm	/^        width = precision = -1;$/;"	d
width	obj/user/badarg.asm	/^                width = 0;$/;"	d
width	obj/user/badarg.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badarg.asm	/^        width = precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^                width = 0;$/;"	d
width	obj/user/badsegment.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^        width = precision = -1;$/;"	d
width	obj/user/divzero.asm	/^                width = 0;$/;"	d
width	obj/user/divzero.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^        width = precision = -1;$/;"	d
width	obj/user/exit.asm	/^                width = 0;$/;"	d
width	obj/user/exit.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/exit.asm	/^        width = precision = -1;$/;"	d
width	obj/user/faultread.asm	/^                width = 0;$/;"	d
width	obj/user/faultread.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^        width = precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^                width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^        width = precision = -1;$/;"	d
width	obj/user/forktest.asm	/^                width = 0;$/;"	d
width	obj/user/forktest.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktest.asm	/^        width = precision = -1;$/;"	d
width	obj/user/forktree.asm	/^                width = 0;$/;"	d
width	obj/user/forktree.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^        width = precision = -1;$/;"	d
width	obj/user/hello.asm	/^                width = 0;$/;"	d
width	obj/user/hello.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^        width = precision = -1;$/;"	d
width	obj/user/matrix.asm	/^                width = 0;$/;"	d
width	obj/user/matrix.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/matrix.asm	/^        width = precision = -1;$/;"	d
width	obj/user/pgdir.asm	/^                width = 0;$/;"	d
width	obj/user/pgdir.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/pgdir.asm	/^        width = precision = -1;$/;"	d
width	obj/user/priority.asm	/^                width = 0;$/;"	d
width	obj/user/priority.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/priority.asm	/^        width = precision = -1;$/;"	d
width	obj/user/softint.asm	/^                width = 0;$/;"	d
width	obj/user/softint.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^        width = precision = -1;$/;"	d
width	obj/user/spin.asm	/^                width = 0;$/;"	d
width	obj/user/spin.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^        width = precision = -1;$/;"	d
width	obj/user/testbss.asm	/^                width = 0;$/;"	d
width	obj/user/testbss.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^        width = precision = -1;$/;"	d
width	obj/user/waitkill.asm	/^                width = 0;$/;"	d
width	obj/user/waitkill.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/waitkill.asm	/^        width = precision = -1;$/;"	d
width	obj/user/yield.asm	/^                width = 0;$/;"	d
width	obj/user/yield.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^        width = precision = -1;$/;"	d
work	user/matrix.c	/^work(unsigned int times) {$/;"	f
work	user/waitkill.c	/^work(void) {$/;"	f
wpos	kern/driver/console.c	/^    uint32_t wpos;$/;"	m	struct:__anon5	file:
write_dr	libs/x86.h	/^write_dr(unsigned regnum, uint32_t value) {$/;"	f
write_eflags	libs/x86.h	/^write_eflags(uint32_t eflags) {$/;"	f
yield	user/libs/ulib.c	/^yield(void) {$/;"	f
yptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
zero	user/divzero.c	/^int zero;$/;"	v
