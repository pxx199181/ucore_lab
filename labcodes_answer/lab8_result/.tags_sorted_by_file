!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
.DEFAULT_GOAL	Makefile	/^.DEFAULT_GOAL := TARGETS$/;"	m
ALLDEPS	Makefile	/^ALLDEPS	:=$/;"	m
ALLOBJS	Makefile	/^ALLOBJS	:=$/;"	m
AWK	Makefile	/^AWK		:= awk$/;"	m
BINDIR	Makefile	/^BINDIR	:= bin$/;"	m
CC	Makefile	/^CC		?= $(GCCPREFIX)gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS	:= -fno-builtin -Wall -ggdb -m32 -gstabs -nostdinc $(DEFS)$/;"	m
COPY	Makefile	/^COPY	:= cp$/;"	m
CTYPE	Makefile	/^CTYPE	:= c S$/;"	m
EMPTY	Makefile	/^EMPTY	:=$/;"	m
GCCPREFIX	Makefile	/^GCCPREFIX := $(shell if i386-ucore-elf-objdump -i 2>&1 | grep '^elf32-i386$$' >\/dev\/null 2>&1; \\$/;"	m
GDB	Makefile	/^GDB		:= $(GCCPREFIX)gdb$/;"	m
GRADE_GDB_IN	Makefile	/^GRADE_GDB_IN	:= .gdb.in$/;"	m
GRADE_QEMU_OUT	Makefile	/^GRADE_QEMU_OUT	:= .qemu.out$/;"	m
HANDIN	Makefile	/^HANDIN			:= proj$(PROJ)-handin.tar.gz$/;"	m
HOSTCC	Makefile	/^HOSTCC		:= gcc$/;"	m
HOSTCFLAGS	Makefile	/^HOSTCFLAGS	:= -g -Wall -O2 -D_FILE_OFFSET_BITS=64$/;"	m
IGNORE_ALLDEPS	Makefile	/^IGNORE_ALLDEPS	= clean \\$/;"	m
KOBJS	Makefile	/^KOBJS	= $(call read_packet,kernel libs)$/;"	m
LD	Makefile	/^LD      := $(GCCPREFIX)ld$/;"	m
LDFLAGS	Makefile	/^LDFLAGS	:= -m $(shell $(LD) -V | grep elf_i386 2>\/dev\/null)$/;"	m
MAKEOPTS	Makefile	/^MAKEOPTS		:= --quiet --no-print-directory$/;"	m
MAKEOPTS	Makefile	/^MAKEOPTS	:= --quiet --no-print-directory$/;"	m
MKDIR	Makefile	/^MKDIR   := mkdir -p$/;"	m
MV	Makefile	/^MV		:= mv$/;"	m
OBJCOPY	Makefile	/^OBJCOPY := $(GCCPREFIX)objcopy$/;"	m
OBJDIR	Makefile	/^OBJDIR	:= obj$/;"	m
OBJDUMP	Makefile	/^OBJDUMP := $(GCCPREFIX)objdump$/;"	m
PROJ	Makefile	/^PROJ	:= 5$/;"	m
QEMU	Makefile	/^QEMU := $(shell if which qemu-system-i386 > \/dev\/null; \\$/;"	m
QEMUOPTS	Makefile	/^QEMUOPTS = -hda $(UCOREIMG) -drive file=$(SWAPIMG),media=disk,cache=writeback -drive file=$(SFSIMG),media=disk,cache=writeback $/;"	m
RM	Makefile	/^RM		:= rm -f$/;"	m
RUN_PREFIX	Makefile	/^RUN_PREFIX	:= _binary_$(OBJDIR)_$(USER_PREFIX)$/;"	m
SED	Makefile	/^SED		:= sed$/;"	m
SFSBINS	Makefile	/^SFSBINS		:=$/;"	m
SFSIMG	Makefile	/^SFSIMG		:= $(call totarget,sfs.img)$/;"	m
SFSROOT	Makefile	/^SFSROOT		:= disk0$/;"	m
SH	Makefile	/^SH		:= sh$/;"	m
SLASH	Makefile	/^SLASH	:= \/$/;"	m
SPACE	Makefile	/^SPACE	:= $(EMPTY) $(EMPTY)$/;"	m
SWAPIMG	Makefile	/^SWAPIMG		:= $(call totarget,swap.img)$/;"	m
TARGETS	Makefile	/^TARGETS	:=$/;"	m
TERMINAL	Makefile	/^TERMINAL := gnome-terminal$/;"	m
TOUCH	Makefile	/^TOUCH	:= touch -c$/;"	m
TOUCH_FILES	Makefile	/^TOUCH_FILES		:= kern\/process\/proc.c$/;"	m
TR	Makefile	/^TR		:= tr$/;"	m
UCOREIMG	Makefile	/^UCOREIMG	:= $(call totarget,ucore.img)$/;"	m
UOBJS	Makefile	/^UOBJS	:= $(call read_packet,ulibs libs)$/;"	m
USER_BINS	Makefile	/^USER_BINS	:=$/;"	m
USER_PREFIX	Makefile	/^USER_PREFIX	:= __user_$/;"	m
V	Makefile	/^V       := @$/;"	m
add_files_cc	Makefile	/^add_files_cc = $(call add_files,$(1),$(CC),$(CFLAGS) $(3),$(2),$(4))$/;"	m
add_files_host	Makefile	/^add_files_host = $(call add_files,$(1),$(HOSTCC),$(HOSTCFLAGS),$(2),$(3))$/;"	m
asmfile	Makefile	/^asmfile = $(call cgtype,$(call toobj,$(1)),o,asm)$/;"	m
bootblock	Makefile	/^bootblock = $(call totarget,bootblock)$/;"	m
bootfiles	Makefile	/^bootfiles = $(call listf_cc,boot)$/;"	m
cgtype	Makefile	/^cgtype = $(patsubst %.$(2),%.$(3),$(1))$/;"	m
create_target_cc	Makefile	/^create_target_cc = $(call create_target,$(1),$(2),$(3),$(CC),$(CFLAGS))$/;"	m
create_target_host	Makefile	/^create_target_host = $(call create_target,$(1),$(2),$(3),$(HOSTCC),$(HOSTCFLAGS))$/;"	m
filename	Makefile	/^filename = $(basename $(notdir $(1)))$/;"	m
fscopy	Makefile	/^define fscopy$/;"	m
kernel	Makefile	/^kernel = $(call totarget,kernel)$/;"	m
listf_cc	Makefile	/^listf_cc = $(call listf,$(1),$(CTYPE))$/;"	m
match	Makefile	/^match = $(shell echo $(2) | $(AWK) '{for(i=1;i<=NF;i++){if(match("$(1)","^"$$(i)"$$")){exit 1;}}}'; echo $$?)$/;"	m
objfile	Makefile	/^objfile = $(call toobj,$(1))$/;"	m
outfile	Makefile	/^outfile = $(call cgtype,$(call toobj,$(1)),o,out)$/;"	m
symfile	Makefile	/^symfile = $(call cgtype,$(call toobj,$(1)),o,sym)$/;"	m
ubinfile	Makefile	/^ubinfile = $(call outfile,$(addprefix $(USER_PREFIX),$(call filename,$(1))))$/;"	m
uprog_ld	Makefile	/^define uprog_ld$/;"	m
SEG_ASM	boot/asm.h	11;"	d
SEG_NULLASM	boot/asm.h	7;"	d
STA_A	boot/asm.h	23;"	d
STA_C	boot/asm.h	20;"	d
STA_E	boot/asm.h	19;"	d
STA_R	boot/asm.h	22;"	d
STA_W	boot/asm.h	21;"	d
STA_X	boot/asm.h	18;"	d
__BOOT_ASM_H__	boot/asm.h	2;"	d
cont	boot/bootasm.S	/^cont:$/;"	l
finish_probe	boot/bootasm.S	/^finish_probe:$/;"	l
gdt	boot/bootasm.S	/^gdt:$/;"	l
gdtdesc	boot/bootasm.S	/^gdtdesc:$/;"	l
probe_memory	boot/bootasm.S	/^probe_memory:$/;"	l
protcseg	boot/bootasm.S	/^protcseg:$/;"	l
spin	boot/bootasm.S	/^spin:$/;"	l
start	boot/bootasm.S	/^start:$/;"	l
start_probe	boot/bootasm.S	/^start_probe:$/;"	l
ELFHDR	boot/bootmain.c	34;"	d	file:
SECTSIZE	boot/bootmain.c	33;"	d	file:
bootmain	boot/bootmain.c	/^bootmain(void) {$/;"	f
readsect	boot/bootmain.c	/^readsect(void *dst, uint32_t secno) {$/;"	f	file:
readseg	boot/bootmain.c	/^readseg(uintptr_t va, uint32_t count, uint32_t offset) {$/;"	f	file:
waitdisk	boot/bootmain.c	/^waitdisk(void) {$/;"	f	file:
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
__KERN_DEBUG_ASSERT_H__	kern/debug/assert.h	2;"	d
assert	kern/debug/assert.h	15;"	d
panic	kern/debug/assert.h	12;"	d
static_assert	kern/debug/assert.h	23;"	d
warn	kern/debug/assert.h	9;"	d
STACKFRAME_DEPTH	kern/debug/kdebug.c	14;"	d	file:
debuginfo_eip	kern/debug/kdebug.c	/^debuginfo_eip(uintptr_t addr, struct eipdebuginfo *info) {$/;"	f
eip_file	kern/debug/kdebug.c	/^    const char *eip_file;                   \/\/ source code filename for eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_addr	kern/debug/kdebug.c	/^    uintptr_t eip_fn_addr;                  \/\/ start address of function$/;"	m	struct:eipdebuginfo	file:
eip_fn_name	kern/debug/kdebug.c	/^    const char *eip_fn_name;                \/\/ name of function containing eip$/;"	m	struct:eipdebuginfo	file:
eip_fn_namelen	kern/debug/kdebug.c	/^    int eip_fn_namelen;                     \/\/ length of function's name$/;"	m	struct:eipdebuginfo	file:
eip_fn_narg	kern/debug/kdebug.c	/^    int eip_fn_narg;                        \/\/ number of function arguments$/;"	m	struct:eipdebuginfo	file:
eip_line	kern/debug/kdebug.c	/^    int eip_line;                           \/\/ source code line number for eip$/;"	m	struct:eipdebuginfo	file:
eipdebuginfo	kern/debug/kdebug.c	/^struct eipdebuginfo {$/;"	s	file:
print_debuginfo	kern/debug/kdebug.c	/^print_debuginfo(uintptr_t eip) {$/;"	f
print_kerninfo	kern/debug/kdebug.c	/^print_kerninfo(void) {$/;"	f
print_stackframe	kern/debug/kdebug.c	/^print_stackframe(void) {$/;"	f
read_eip	kern/debug/kdebug.c	/^read_eip(void) {$/;"	f	file:
stab_binsearch	kern/debug/kdebug.c	/^stab_binsearch(const struct stab *stabs, int *region_left, int *region_right,$/;"	f	file:
stab_end	kern/debug/kdebug.c	/^    const struct stab *stab_end;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stabs	kern/debug/kdebug.c	/^    const struct stab *stabs;$/;"	m	struct:userstabdata	typeref:struct:userstabdata::stab	file:
stabstr	kern/debug/kdebug.c	/^    const char *stabstr;$/;"	m	struct:userstabdata	file:
stabstr_end	kern/debug/kdebug.c	/^    const char *stabstr_end;$/;"	m	struct:userstabdata	file:
userstabdata	kern/debug/kdebug.c	/^struct userstabdata {$/;"	s	file:
__KERN_DEBUG_KDEBUG_H__	kern/debug/kdebug.h	2;"	d
MAXARGS	kern/debug/kmonitor.c	33;"	d	file:
NCOMMANDS	kern/debug/kmonitor.c	29;"	d	file:
WHITESPACE	kern/debug/kmonitor.c	34;"	d	file:
command	kern/debug/kmonitor.c	/^struct command {$/;"	s	file:
commands	kern/debug/kmonitor.c	/^static struct command commands[] = {$/;"	v	typeref:struct:command	file:
desc	kern/debug/kmonitor.c	/^    const char *desc;$/;"	m	struct:command	file:
func	kern/debug/kmonitor.c	/^    int(*func)(int argc, char **argv, struct trapframe *tf);$/;"	m	struct:command	file:
kmonitor	kern/debug/kmonitor.c	/^kmonitor(struct trapframe *tf) {$/;"	f
mon_backtrace	kern/debug/kmonitor.c	/^mon_backtrace(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_help	kern/debug/kmonitor.c	/^mon_help(int argc, char **argv, struct trapframe *tf) {$/;"	f
mon_kerninfo	kern/debug/kmonitor.c	/^mon_kerninfo(int argc, char **argv, struct trapframe *tf) {$/;"	f
name	kern/debug/kmonitor.c	/^    const char *name;$/;"	m	struct:command	file:
parse	kern/debug/kmonitor.c	/^parse(char *buf, char **argv) {$/;"	f	file:
runcmd	kern/debug/kmonitor.c	/^runcmd(char *buf, struct trapframe *tf) {$/;"	f	file:
__KERN_DEBUG_MONITOR_H__	kern/debug/kmonitor.h	2;"	d
__panic	kern/debug/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__warn	kern/debug/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
is_kernel_panic	kern/debug/panic.c	/^is_kernel_panic(void) {$/;"	f
is_panic	kern/debug/panic.c	/^static bool is_panic = 0;$/;"	v	file:
N_BCOMM	kern/debug/stab.h	39;"	d
N_BINCL	kern/debug/stab.h	31;"	d
N_BSLINE	kern/debug/stab.h	27;"	d
N_DSLINE	kern/debug/stab.h	26;"	d
N_ECOML	kern/debug/stab.h	41;"	d
N_ECOMM	kern/debug/stab.h	40;"	d
N_EINCL	kern/debug/stab.h	34;"	d
N_ENTRY	kern/debug/stab.h	35;"	d
N_EXCL	kern/debug/stab.h	37;"	d
N_FNAME	kern/debug/stab.h	18;"	d
N_FUN	kern/debug/stab.h	19;"	d
N_GSYM	kern/debug/stab.h	17;"	d
N_LBRAC	kern/debug/stab.h	36;"	d
N_LCSYM	kern/debug/stab.h	21;"	d
N_LENG	kern/debug/stab.h	42;"	d
N_LSYM	kern/debug/stab.h	30;"	d
N_MAIN	kern/debug/stab.h	22;"	d
N_PC	kern/debug/stab.h	23;"	d
N_PSYM	kern/debug/stab.h	33;"	d
N_RBRAC	kern/debug/stab.h	38;"	d
N_RSYM	kern/debug/stab.h	24;"	d
N_SLINE	kern/debug/stab.h	25;"	d
N_SO	kern/debug/stab.h	29;"	d
N_SOL	kern/debug/stab.h	32;"	d
N_SSYM	kern/debug/stab.h	28;"	d
N_STSYM	kern/debug/stab.h	20;"	d
__KERN_DEBUG_STAB_H__	kern/debug/stab.h	2;"	d
n_desc	kern/debug/stab.h	/^    uint16_t n_desc;        \/\/ description field$/;"	m	struct:stab
n_other	kern/debug/stab.h	/^    uint8_t n_other;        \/\/ misc info (usually empty)$/;"	m	struct:stab
n_strx	kern/debug/stab.h	/^    uint32_t n_strx;        \/\/ index into string table of name$/;"	m	struct:stab
n_type	kern/debug/stab.h	/^    uint8_t n_type;         \/\/ type of symbol$/;"	m	struct:stab
n_value	kern/debug/stab.h	/^    uintptr_t n_value;      \/\/ value of symbol$/;"	m	struct:stab
stab	kern/debug/stab.h	/^struct stab {$/;"	s
IO_TIMER1	kern/driver/clock.c	11;"	d	file:
SYSTEM_READ_TIMER	kern/driver/clock.c	/^long SYSTEM_READ_TIMER( void ){$/;"	f
TIMER_16BIT	kern/driver/clock.c	24;"	d	file:
TIMER_DIV	kern/driver/clock.c	19;"	d	file:
TIMER_FREQ	kern/driver/clock.c	18;"	d	file:
TIMER_MODE	kern/driver/clock.c	21;"	d	file:
TIMER_RATEGEN	kern/driver/clock.c	23;"	d	file:
TIMER_SEL0	kern/driver/clock.c	22;"	d	file:
clock_init	kern/driver/clock.c	/^clock_init(void) {$/;"	f
ticks	kern/driver/clock.c	/^volatile size_t ticks;$/;"	v
__KERN_DRIVER_CLOCK_H__	kern/driver/clock.h	2;"	d
ALT	kern/driver/console.c	260;"	d	file:
C	kern/driver/console.c	323;"	d	file:
CAPSLOCK	kern/driver/console.c	262;"	d	file:
CGA_BASE	kern/driver/console.c	45;"	d	file:
CGA_BUF	kern/driver/console.c	46;"	d	file:
COM1	kern/driver/console.c	21;"	d	file:
COM_DLL	kern/driver/console.c	25;"	d	file:
COM_DLM	kern/driver/console.c	26;"	d	file:
COM_FCR	kern/driver/console.c	30;"	d	file:
COM_IER	kern/driver/console.c	27;"	d	file:
COM_IER_RDI	kern/driver/console.c	28;"	d	file:
COM_IIR	kern/driver/console.c	29;"	d	file:
COM_LCR	kern/driver/console.c	31;"	d	file:
COM_LCR_DLAB	kern/driver/console.c	32;"	d	file:
COM_LCR_WLEN8	kern/driver/console.c	33;"	d	file:
COM_LSR	kern/driver/console.c	38;"	d	file:
COM_LSR_DATA	kern/driver/console.c	39;"	d	file:
COM_LSR_TSRE	kern/driver/console.c	41;"	d	file:
COM_LSR_TXRDY	kern/driver/console.c	40;"	d	file:
COM_MCR	kern/driver/console.c	34;"	d	file:
COM_MCR_DTR	kern/driver/console.c	36;"	d	file:
COM_MCR_OUT2	kern/driver/console.c	37;"	d	file:
COM_MCR_RTS	kern/driver/console.c	35;"	d	file:
COM_RX	kern/driver/console.c	23;"	d	file:
COM_TX	kern/driver/console.c	24;"	d	file:
CONSBUFSIZE	kern/driver/console.c	208;"	d	file:
CRT_COLS	kern/driver/console.c	48;"	d	file:
CRT_ROWS	kern/driver/console.c	47;"	d	file:
CRT_SIZE	kern/driver/console.c	49;"	d	file:
CTL	kern/driver/console.c	259;"	d	file:
E0ESC	kern/driver/console.c	266;"	d	file:
LPTPORT	kern/driver/console.c	51;"	d	file:
MONO_BASE	kern/driver/console.c	43;"	d	file:
MONO_BUF	kern/driver/console.c	44;"	d	file:
NO	kern/driver/console.c	256;"	d	file:
NUMLOCK	kern/driver/console.c	263;"	d	file:
SCROLLLOCK	kern/driver/console.c	264;"	d	file:
SHIFT	kern/driver/console.c	258;"	d	file:
addr_6845	kern/driver/console.c	/^static uint16_t addr_6845;$/;"	v	file:
buf	kern/driver/console.c	/^    uint8_t buf[CONSBUFSIZE];$/;"	m	struct:__anon14	file:
cga_init	kern/driver/console.c	/^cga_init(void) {$/;"	f	file:
cga_putc	kern/driver/console.c	/^cga_putc(int c) {$/;"	f	file:
charcode	kern/driver/console.c	/^static uint8_t *charcode[4] = {$/;"	v	file:
cons	kern/driver/console.c	/^} cons;$/;"	v	typeref:struct:__anon14	file:
cons_getc	kern/driver/console.c	/^cons_getc(void) {$/;"	f
cons_init	kern/driver/console.c	/^cons_init(void) {$/;"	f
cons_intr	kern/driver/console.c	/^cons_intr(int (*proc)(void)) {$/;"	f	file:
cons_putc	kern/driver/console.c	/^cons_putc(int c) {$/;"	f
crt_buf	kern/driver/console.c	/^static uint16_t *crt_buf;$/;"	v	file:
crt_pos	kern/driver/console.c	/^static uint16_t crt_pos;$/;"	v	file:
ctlmap	kern/driver/console.c	/^static uint8_t ctlmap[256] = {$/;"	v	file:
delay	kern/driver/console.c	/^delay(void) {$/;"	f	file:
kbd_init	kern/driver/console.c	/^kbd_init(void) {$/;"	f	file:
kbd_intr	kern/driver/console.c	/^kbd_intr(void) {$/;"	f	file:
kbd_proc_data	kern/driver/console.c	/^kbd_proc_data(void) {$/;"	f	file:
lpt_putc	kern/driver/console.c	/^lpt_putc(int c) {$/;"	f	file:
lpt_putc_sub	kern/driver/console.c	/^lpt_putc_sub(int c) {$/;"	f	file:
normalmap	kern/driver/console.c	/^static uint8_t normalmap[256] = {$/;"	v	file:
rpos	kern/driver/console.c	/^    uint32_t rpos;$/;"	m	struct:__anon14	file:
serial_exists	kern/driver/console.c	/^static bool serial_exists = 0;$/;"	v	file:
serial_init	kern/driver/console.c	/^serial_init(void) {$/;"	f	file:
serial_intr	kern/driver/console.c	/^serial_intr(void) {$/;"	f
serial_proc_data	kern/driver/console.c	/^serial_proc_data(void) {$/;"	f	file:
serial_putc	kern/driver/console.c	/^serial_putc(int c) {$/;"	f	file:
serial_putc_sub	kern/driver/console.c	/^serial_putc_sub(int c) {$/;"	f	file:
shiftcode	kern/driver/console.c	/^static uint8_t shiftcode[256] = {$/;"	v	file:
shiftmap	kern/driver/console.c	/^static uint8_t shiftmap[256] = {$/;"	v	file:
togglecode	kern/driver/console.c	/^static uint8_t togglecode[256] = {$/;"	v	file:
wpos	kern/driver/console.c	/^    uint32_t wpos;$/;"	m	struct:__anon14	file:
__KERN_DRIVER_CONSOLE_H__	kern/driver/console.h	2;"	d
IDE_BSY	kern/driver/ide.c	22;"	d	file:
IDE_CMD_IDENTIFY	kern/driver/ide.c	30;"	d	file:
IDE_CMD_READ	kern/driver/ide.c	28;"	d	file:
IDE_CMD_WRITE	kern/driver/ide.c	29;"	d	file:
IDE_DF	kern/driver/ide.c	24;"	d	file:
IDE_DRDY	kern/driver/ide.c	23;"	d	file:
IDE_DRQ	kern/driver/ide.c	25;"	d	file:
IDE_ERR	kern/driver/ide.c	26;"	d	file:
IDE_IDENT_CAPABILITIES	kern/driver/ide.c	34;"	d	file:
IDE_IDENT_CMDSETS	kern/driver/ide.c	35;"	d	file:
IDE_IDENT_MAX_LBA	kern/driver/ide.c	36;"	d	file:
IDE_IDENT_MAX_LBA_EXT	kern/driver/ide.c	37;"	d	file:
IDE_IDENT_MODEL	kern/driver/ide.c	33;"	d	file:
IDE_IDENT_SECTORS	kern/driver/ide.c	32;"	d	file:
IO_BASE	kern/driver/ide.c	57;"	d	file:
IO_BASE0	kern/driver/ide.c	39;"	d	file:
IO_BASE1	kern/driver/ide.c	40;"	d	file:
IO_CTRL	kern/driver/ide.c	58;"	d	file:
IO_CTRL0	kern/driver/ide.c	41;"	d	file:
IO_CTRL1	kern/driver/ide.c	42;"	d	file:
ISA_COMMAND	kern/driver/ide.c	19;"	d	file:
ISA_CTRL	kern/driver/ide.c	13;"	d	file:
ISA_CYL_HI	kern/driver/ide.c	17;"	d	file:
ISA_CYL_LO	kern/driver/ide.c	16;"	d	file:
ISA_DATA	kern/driver/ide.c	10;"	d	file:
ISA_ERROR	kern/driver/ide.c	11;"	d	file:
ISA_PRECOMP	kern/driver/ide.c	12;"	d	file:
ISA_SDH	kern/driver/ide.c	18;"	d	file:
ISA_SECCNT	kern/driver/ide.c	14;"	d	file:
ISA_SECTOR	kern/driver/ide.c	15;"	d	file:
ISA_STATUS	kern/driver/ide.c	20;"	d	file:
MAX_DISK_NSECS	kern/driver/ide.c	46;"	d	file:
MAX_IDE	kern/driver/ide.c	44;"	d	file:
MAX_NSECS	kern/driver/ide.c	45;"	d	file:
VALID_IDE	kern/driver/ide.c	47;"	d	file:
base	kern/driver/ide.c	/^    unsigned short base;        \/\/ I\/O Base$/;"	m	struct:__anon13	file:
channels	kern/driver/ide.c	/^} channels[2] = {$/;"	v	typeref:struct:__anon13	file:
ctrl	kern/driver/ide.c	/^    unsigned short ctrl;        \/\/ Control Base$/;"	m	struct:__anon13	file:
ide_device	kern/driver/ide.c	/^static struct ide_device {$/;"	s	file:
ide_device_size	kern/driver/ide.c	/^ide_device_size(unsigned short ideno) {$/;"	f
ide_device_valid	kern/driver/ide.c	/^ide_device_valid(unsigned short ideno) {$/;"	f
ide_devices	kern/driver/ide.c	/^} ide_devices[MAX_IDE];$/;"	v	typeref:struct:ide_device	file:
ide_init	kern/driver/ide.c	/^ide_init(void) {$/;"	f
ide_read_secs	kern/driver/ide.c	/^ide_read_secs(unsigned short ideno, uint32_t secno, void *dst, size_t nsecs) {$/;"	f
ide_wait_ready	kern/driver/ide.c	/^ide_wait_ready(unsigned short iobase, bool check_error) {$/;"	f	file:
ide_write_secs	kern/driver/ide.c	/^ide_write_secs(unsigned short ideno, uint32_t secno, const void *src, size_t nsecs) {$/;"	f
model	kern/driver/ide.c	/^    unsigned char model[41];    \/\/ Model in String$/;"	m	struct:ide_device	file:
sets	kern/driver/ide.c	/^    unsigned int sets;          \/\/ Commend Sets Supported$/;"	m	struct:ide_device	file:
size	kern/driver/ide.c	/^    unsigned int size;          \/\/ Size in Sectors$/;"	m	struct:ide_device	file:
valid	kern/driver/ide.c	/^    unsigned char valid;        \/\/ 0 or 1 (If Device Really Exists)$/;"	m	struct:ide_device	file:
__KERN_DRIVER_IDE_H__	kern/driver/ide.h	2;"	d
intr_disable	kern/driver/intr.c	/^intr_disable(void) {$/;"	f
intr_enable	kern/driver/intr.c	/^intr_enable(void) {$/;"	f
__KERN_DRIVER_INTR_H__	kern/driver/intr.h	2;"	d
BS_OCMD	kern/driver/kbdreg.h	23;"	d
CMDBYTE	kern/driver/kbdreg.h	60;"	d
KBCMDP	kern/driver/kbdreg.h	29;"	d
KBC_AUXDISABLE	kern/driver/kbdreg.h	32;"	d
KBC_AUXECHO	kern/driver/kbdreg.h	36;"	d
KBC_AUXENABLE	kern/driver/kbdreg.h	33;"	d
KBC_AUXTEST	kern/driver/kbdreg.h	34;"	d
KBC_AUXWRITE	kern/driver/kbdreg.h	37;"	d
KBC_DISABLE	kern/driver/kbdreg.h	66;"	d
KBC_ECHO	kern/driver/kbdreg.h	71;"	d
KBC_ENABLE	kern/driver/kbdreg.h	67;"	d
KBC_KBDDISABLE	kern/driver/kbdreg.h	40;"	d
KBC_KBDECHO	kern/driver/kbdreg.h	35;"	d
KBC_KBDENABLE	kern/driver/kbdreg.h	41;"	d
KBC_KBDTEST	kern/driver/kbdreg.h	39;"	d
KBC_MODEIND	kern/driver/kbdreg.h	70;"	d
KBC_PULSE0	kern/driver/kbdreg.h	42;"	d
KBC_PULSE1	kern/driver/kbdreg.h	43;"	d
KBC_PULSE2	kern/driver/kbdreg.h	44;"	d
KBC_PULSE3	kern/driver/kbdreg.h	45;"	d
KBC_RAMREAD	kern/driver/kbdreg.h	30;"	d
KBC_RAMWRITE	kern/driver/kbdreg.h	31;"	d
KBC_RESEND	kern/driver/kbdreg.h	64;"	d
KBC_RESET	kern/driver/kbdreg.h	63;"	d
KBC_SELFTEST	kern/driver/kbdreg.h	38;"	d
KBC_SETDEFAULT	kern/driver/kbdreg.h	65;"	d
KBC_SETTABLE	kern/driver/kbdreg.h	69;"	d
KBC_TYPEMATIC	kern/driver/kbdreg.h	68;"	d
KBDATAP	kern/driver/kbdreg.h	47;"	d
KBOUTP	kern/driver/kbdreg.h	48;"	d
KBR_ACK	kern/driver/kbdreg.h	76;"	d
KBR_BREAK	kern/driver/kbdreg.h	79;"	d
KBR_ECHO	kern/driver/kbdreg.h	81;"	d
KBR_EXTENDED	kern/driver/kbdreg.h	74;"	d
KBR_FAILURE	kern/driver/kbdreg.h	78;"	d
KBR_OVERRUN	kern/driver/kbdreg.h	77;"	d
KBR_RESEND	kern/driver/kbdreg.h	75;"	d
KBR_RSTDONE	kern/driver/kbdreg.h	80;"	d
KBSTATP	kern/driver/kbdreg.h	19;"	d
KBS_DIB	kern/driver/kbdreg.h	20;"	d
KBS_IBF	kern/driver/kbdreg.h	21;"	d
KBS_NOSEC	kern/driver/kbdreg.h	24;"	d
KBS_PERR	kern/driver/kbdreg.h	27;"	d
KBS_RERR	kern/driver/kbdreg.h	26;"	d
KBS_TERR	kern/driver/kbdreg.h	25;"	d
KBS_WARM	kern/driver/kbdreg.h	22;"	d
KC8_CPU	kern/driver/kbdreg.h	57;"	d
KC8_IGNSEC	kern/driver/kbdreg.h	56;"	d
KC8_KDISABLE	kern/driver/kbdreg.h	55;"	d
KC8_KENABLE	kern/driver/kbdreg.h	59;"	d
KC8_MDISABLE	kern/driver/kbdreg.h	54;"	d
KC8_MENABLE	kern/driver/kbdreg.h	58;"	d
KC8_TRANS	kern/driver/kbdreg.h	53;"	d
KEY_DEL	kern/driver/kbdreg.h	14;"	d
KEY_DN	kern/driver/kbdreg.h	8;"	d
KEY_END	kern/driver/kbdreg.h	6;"	d
KEY_HOME	kern/driver/kbdreg.h	5;"	d
KEY_INS	kern/driver/kbdreg.h	13;"	d
KEY_LF	kern/driver/kbdreg.h	9;"	d
KEY_PGDN	kern/driver/kbdreg.h	12;"	d
KEY_PGUP	kern/driver/kbdreg.h	11;"	d
KEY_RT	kern/driver/kbdreg.h	10;"	d
KEY_UP	kern/driver/kbdreg.h	7;"	d
K_LDCMDBYTE	kern/driver/kbdreg.h	51;"	d
K_RDCMDBYTE	kern/driver/kbdreg.h	50;"	d
__KERN_DRIVER_KBDREG_H__	kern/driver/kbdreg.h	2;"	d
IO_PIC1	kern/driver/picirq.c	6;"	d	file:
IO_PIC2	kern/driver/picirq.c	7;"	d	file:
IRQ_SLAVE	kern/driver/picirq.c	9;"	d	file:
did_init	kern/driver/picirq.c	/^static bool did_init = 0;$/;"	v	file:
irq_mask	kern/driver/picirq.c	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	v	file:
pic_enable	kern/driver/picirq.c	/^pic_enable(unsigned int irq) {$/;"	f
pic_init	kern/driver/picirq.c	/^pic_init(void) {$/;"	f
pic_setmask	kern/driver/picirq.c	/^pic_setmask(uint16_t mask) {$/;"	f	file:
IRQ_OFFSET	kern/driver/picirq.h	7;"	d
__KERN_DRIVER_PICIRQ_H__	kern/driver/picirq.h	2;"	d
dev_close	kern/fs/devs/dev.c	/^dev_close(struct inode *node) {$/;"	f	file:
dev_create_inode	kern/fs/devs/dev.c	/^dev_create_inode(void) {$/;"	f
dev_fstat	kern/fs/devs/dev.c	/^dev_fstat(struct inode *node, struct stat *stat) {$/;"	f	file:
dev_gettype	kern/fs/devs/dev.c	/^dev_gettype(struct inode *node, uint32_t *type_store) {$/;"	f	file:
dev_init	kern/fs/devs/dev.c	/^dev_init(void) {$/;"	f
dev_ioctl	kern/fs/devs/dev.c	/^dev_ioctl(struct inode *node, int op, void *data) {$/;"	f	file:
dev_lookup	kern/fs/devs/dev.c	/^dev_lookup(struct inode *node, char *path, struct inode **node_store) {$/;"	f	file:
dev_node_ops	kern/fs/devs/dev.c	/^static const struct inode_ops dev_node_ops = {$/;"	v	typeref:struct:inode_ops	file:
dev_open	kern/fs/devs/dev.c	/^dev_open(struct inode *node, uint32_t open_flags) {$/;"	f	file:
dev_read	kern/fs/devs/dev.c	/^dev_read(struct inode *node, struct iobuf *iob) {$/;"	f	file:
dev_tryseek	kern/fs/devs/dev.c	/^dev_tryseek(struct inode *node, off_t pos) {$/;"	f	file:
dev_write	kern/fs/devs/dev.c	/^dev_write(struct inode *node, struct iobuf *iob) {$/;"	f	file:
init_device	kern/fs/devs/dev.c	144;"	d	file:
__KERN_FS_DEVS_DEV_H__	kern/fs/devs/dev.h	2;"	d
d_blocks	kern/fs/devs/dev.h	/^    size_t d_blocks;$/;"	m	struct:device
d_blocksize	kern/fs/devs/dev.h	/^    size_t d_blocksize;$/;"	m	struct:device
d_close	kern/fs/devs/dev.h	/^    int (*d_close)(struct device *dev);$/;"	m	struct:device
d_io	kern/fs/devs/dev.h	/^    int (*d_io)(struct device *dev, struct iobuf *iob, bool write);$/;"	m	struct:device
d_ioctl	kern/fs/devs/dev.h	/^    int (*d_ioctl)(struct device *dev, int op, void *data);$/;"	m	struct:device
d_open	kern/fs/devs/dev.h	/^    int (*d_open)(struct device *dev, uint32_t open_flags);$/;"	m	struct:device
device	kern/fs/devs/dev.h	/^struct device {$/;"	s
dop_close	kern/fs/devs/dev.h	23;"	d
dop_io	kern/fs/devs/dev.h	24;"	d
dop_ioctl	kern/fs/devs/dev.h	25;"	d
dop_open	kern/fs/devs/dev.h	22;"	d
DISK0_BLKSIZE	kern/fs/devs/dev_disk0.c	13;"	d	file:
DISK0_BLK_NSECT	kern/fs/devs/dev_disk0.c	15;"	d	file:
DISK0_BUFSIZE	kern/fs/devs/dev_disk0.c	14;"	d	file:
dev_init_disk0	kern/fs/devs/dev_disk0.c	/^dev_init_disk0(void) {$/;"	f
disk0_buffer	kern/fs/devs/dev_disk0.c	/^static char *disk0_buffer;$/;"	v	file:
disk0_close	kern/fs/devs/dev_disk0.c	/^disk0_close(struct device *dev) {$/;"	f	file:
disk0_device_init	kern/fs/devs/dev_disk0.c	/^disk0_device_init(struct device *dev) {$/;"	f	file:
disk0_io	kern/fs/devs/dev_disk0.c	/^disk0_io(struct device *dev, struct iobuf *iob, bool write) {$/;"	f	file:
disk0_ioctl	kern/fs/devs/dev_disk0.c	/^disk0_ioctl(struct device *dev, int op, void *data) {$/;"	f	file:
disk0_open	kern/fs/devs/dev_disk0.c	/^disk0_open(struct device *dev, uint32_t open_flags) {$/;"	f	file:
disk0_read_blks_nolock	kern/fs/devs/dev_disk0.c	/^disk0_read_blks_nolock(uint32_t blkno, uint32_t nblks) {$/;"	f	file:
disk0_sem	kern/fs/devs/dev_disk0.c	/^static semaphore_t disk0_sem;$/;"	v	file:
disk0_write_blks_nolock	kern/fs/devs/dev_disk0.c	/^disk0_write_blks_nolock(uint32_t blkno, uint32_t nblks) {$/;"	f	file:
lock_disk0	kern/fs/devs/dev_disk0.c	/^lock_disk0(void) {$/;"	f	file:
unlock_disk0	kern/fs/devs/dev_disk0.c	/^unlock_disk0(void) {$/;"	f	file:
STDIN_BUFSIZE	kern/fs/devs/dev_stdin.c	15;"	d	file:
__wait_queue	kern/fs/devs/dev_stdin.c	/^static wait_queue_t __wait_queue, *wait_queue = &__wait_queue;$/;"	v	file:
dev_init_stdin	kern/fs/devs/dev_stdin.c	/^dev_init_stdin(void) {$/;"	f
dev_stdin_read	kern/fs/devs/dev_stdin.c	/^dev_stdin_read(char *buf, size_t len) {$/;"	f	file:
dev_stdin_write	kern/fs/devs/dev_stdin.c	/^dev_stdin_write(char c) {$/;"	f
p_rpos	kern/fs/devs/dev_stdin.c	/^static off_t p_rpos, p_wpos;$/;"	v	file:
p_wpos	kern/fs/devs/dev_stdin.c	/^static off_t p_rpos, p_wpos;$/;"	v	file:
stdin_buffer	kern/fs/devs/dev_stdin.c	/^static char stdin_buffer[STDIN_BUFSIZE];$/;"	v	file:
stdin_close	kern/fs/devs/dev_stdin.c	/^stdin_close(struct device *dev) {$/;"	f	file:
stdin_device_init	kern/fs/devs/dev_stdin.c	/^stdin_device_init(struct device *dev) {$/;"	f	file:
stdin_io	kern/fs/devs/dev_stdin.c	/^stdin_io(struct device *dev, struct iobuf *iob, bool write) {$/;"	f	file:
stdin_ioctl	kern/fs/devs/dev_stdin.c	/^stdin_ioctl(struct device *dev, int op, void *data) {$/;"	f	file:
stdin_open	kern/fs/devs/dev_stdin.c	/^stdin_open(struct device *dev, uint32_t open_flags) {$/;"	f	file:
wait_queue	kern/fs/devs/dev_stdin.c	/^static wait_queue_t __wait_queue, *wait_queue = &__wait_queue;$/;"	v	file:
dev_init_stdout	kern/fs/devs/dev_stdout.c	/^dev_init_stdout(void) {$/;"	f
stdout_close	kern/fs/devs/dev_stdout.c	/^stdout_close(struct device *dev) {$/;"	f	file:
stdout_device_init	kern/fs/devs/dev_stdout.c	/^stdout_device_init(struct device *dev) {$/;"	f	file:
stdout_io	kern/fs/devs/dev_stdout.c	/^stdout_io(struct device *dev, struct iobuf *iob, bool write) {$/;"	f	file:
stdout_ioctl	kern/fs/devs/dev_stdout.c	/^stdout_ioctl(struct device *dev, int op, void *data) {$/;"	f	file:
stdout_open	kern/fs/devs/dev_stdout.c	/^stdout_open(struct device *dev, uint32_t open_flags) {$/;"	f	file:
fd2file	kern/fs/file.c	/^fd2file(int fd, struct file **file_store) {$/;"	f	file:
fd_array_acquire	kern/fs/file.c	/^fd_array_acquire(struct file *file) {$/;"	f	file:
fd_array_alloc	kern/fs/file.c	/^fd_array_alloc(int fd, struct file **file_store) {$/;"	f	file:
fd_array_close	kern/fs/file.c	/^fd_array_close(struct file *file) {$/;"	f
fd_array_dup	kern/fs/file.c	/^fd_array_dup(struct file *to, struct file *from) {$/;"	f
fd_array_free	kern/fs/file.c	/^fd_array_free(struct file *file) {$/;"	f	file:
fd_array_init	kern/fs/file.c	/^fd_array_init(struct file *fd_array) {$/;"	f
fd_array_open	kern/fs/file.c	/^fd_array_open(struct file *file) {$/;"	f
fd_array_release	kern/fs/file.c	/^fd_array_release(struct file *file) {$/;"	f	file:
file_close	kern/fs/file.c	/^file_close(int fd) {$/;"	f
file_dup	kern/fs/file.c	/^file_dup(int fd1, int fd2) {$/;"	f
file_fstat	kern/fs/file.c	/^file_fstat(int fd, struct stat *stat) {$/;"	f
file_fsync	kern/fs/file.c	/^file_fsync(int fd) {$/;"	f
file_getdirentry	kern/fs/file.c	/^file_getdirentry(int fd, struct dirent *direntp) {$/;"	f
file_open	kern/fs/file.c	/^file_open(char *path, uint32_t open_flags) {$/;"	f
file_read	kern/fs/file.c	/^file_read(int fd, void *base, size_t len, size_t *copied_store) {$/;"	f
file_seek	kern/fs/file.c	/^file_seek(int fd, off_t pos, int whence) {$/;"	f
file_testfd	kern/fs/file.c	/^file_testfd(int fd, bool readable, bool writable) {$/;"	f
file_write	kern/fs/file.c	/^file_write(int fd, void *base, size_t len, size_t *copied_store) {$/;"	f
get_fd_array	kern/fs/file.c	/^get_fd_array(void) {$/;"	f	file:
testfd	kern/fs/file.c	14;"	d	file:
FD_CLOSED	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon9
FD_INIT	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon9
FD_NONE	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon9
FD_OPENED	kern/fs/file.h	/^        FD_NONE, FD_INIT, FD_OPENED, FD_CLOSED,$/;"	e	enum:file::__anon9
__KERN_FS_FILE_H__	kern/fs/file.h	2;"	d
fd	kern/fs/file.h	/^    int fd;$/;"	m	struct:file
file	kern/fs/file.h	/^struct file {$/;"	s
fopen_count	kern/fs/file.h	/^fopen_count(struct file *file) {$/;"	f
fopen_count_dec	kern/fs/file.h	/^fopen_count_dec(struct file *file) {$/;"	f
fopen_count_inc	kern/fs/file.h	/^fopen_count_inc(struct file *file) {$/;"	f
node	kern/fs/file.h	/^    struct inode *node;$/;"	m	struct:file	typeref:struct:file::inode
open_count	kern/fs/file.h	/^    int open_count;$/;"	m	struct:file
pos	kern/fs/file.h	/^    off_t pos;$/;"	m	struct:file
readable	kern/fs/file.h	/^    bool readable;$/;"	m	struct:file
status	kern/fs/file.h	/^    } status;$/;"	m	struct:file	typeref:enum:file::__anon9
writable	kern/fs/file.h	/^    bool writable;$/;"	m	struct:file
dup_fs	kern/fs/fs.c	/^dup_fs(struct files_struct *to, struct files_struct *from) {$/;"	f
files_closeall	kern/fs/fs.c	/^files_closeall(struct files_struct *filesp) {$/;"	f
files_create	kern/fs/fs.c	/^files_create(void) {$/;"	f
files_destroy	kern/fs/fs.c	/^files_destroy(struct files_struct *filesp) {$/;"	f
fs_cleanup	kern/fs/fs.c	/^fs_cleanup(void) {$/;"	f
fs_init	kern/fs/fs.c	/^fs_init(void) {$/;"	f
lock_files	kern/fs/fs.c	/^lock_files(struct files_struct *filesp) {$/;"	f
unlock_files	kern/fs/fs.c	/^unlock_files(struct files_struct *filesp) {$/;"	f
DISK0_DEV_NO	kern/fs/fs.h	13;"	d
DISK1_DEV_NO	kern/fs/fs.h	14;"	d
FILES_STRUCT_BUFSIZE	kern/fs/fs.h	32;"	d
FILES_STRUCT_NENTRY	kern/fs/fs.h	33;"	d
PAGE_NSECT	kern/fs/fs.h	10;"	d
SECTSIZE	kern/fs/fs.h	9;"	d
SWAP_DEV_NO	kern/fs/fs.h	12;"	d
__KERN_FS_FS_H__	kern/fs/fs.h	2;"	d
fd_array	kern/fs/fs.h	/^    struct file *fd_array;  \/\/ opened files array$/;"	m	struct:files_struct	typeref:struct:files_struct::file
files_count	kern/fs/fs.h	/^    int files_count;        \/\/ the number of opened files$/;"	m	struct:files_struct
files_count	kern/fs/fs.h	/^files_count(struct files_struct *filesp) {$/;"	f
files_count_dec	kern/fs/fs.h	/^files_count_dec(struct files_struct *filesp) {$/;"	f
files_count_inc	kern/fs/fs.h	/^files_count_inc(struct files_struct *filesp) {$/;"	f
files_sem	kern/fs/fs.h	/^    semaphore_t files_sem;  \/\/ lock protect sem$/;"	m	struct:files_struct
files_struct	kern/fs/fs.h	/^struct files_struct {$/;"	s
pwd	kern/fs/fs.h	/^    struct inode *pwd;      \/\/ inode of present working directory$/;"	m	struct:files_struct	typeref:struct:files_struct::inode
iobuf_init	kern/fs/iobuf.c	/^iobuf_init(struct iobuf *iob, void *base, size_t len, off_t offset) {$/;"	f
iobuf_move	kern/fs/iobuf.c	/^iobuf_move(struct iobuf *iob, void *data, size_t len, bool m2b, size_t *copiedp) {$/;"	f
iobuf_move_zeros	kern/fs/iobuf.c	/^iobuf_move_zeros(struct iobuf *iob, size_t len, size_t *copiedp) {$/;"	f
iobuf_skip	kern/fs/iobuf.c	/^iobuf_skip(struct iobuf *iob, size_t n) {$/;"	f
__KERN_FS_IOBUF_H__	kern/fs/iobuf.h	2;"	d
io_base	kern/fs/iobuf.h	/^    void *io_base;     \/\/ the base addr of buffer (used for Rd\/Wr)$/;"	m	struct:iobuf
io_len	kern/fs/iobuf.h	/^    size_t io_len;     \/\/ the length of buffer  (used for Rd\/Wr)$/;"	m	struct:iobuf
io_offset	kern/fs/iobuf.h	/^    off_t io_offset;   \/\/ current Rd\/Wr position in buffer, will have been incremented by the amount transferred$/;"	m	struct:iobuf
io_resid	kern/fs/iobuf.h	/^    size_t io_resid;   \/\/ current resident length need to Rd\/Wr, will have been decremented by the amount transferred.$/;"	m	struct:iobuf
iobuf	kern/fs/iobuf.h	/^struct iobuf {$/;"	s
iobuf_used	kern/fs/iobuf.h	16;"	d
WORD_BITS	kern/fs/sfs/bitmap.c	9;"	d	file:
WORD_TYPE	kern/fs/sfs/bitmap.c	8;"	d	file:
bitmap	kern/fs/sfs/bitmap.c	/^struct bitmap {$/;"	s	file:
bitmap_alloc	kern/fs/sfs/bitmap.c	/^bitmap_alloc(struct bitmap *bitmap, uint32_t *index_store) {$/;"	f
bitmap_create	kern/fs/sfs/bitmap.c	/^bitmap_create(uint32_t nbits) {$/;"	f
bitmap_destroy	kern/fs/sfs/bitmap.c	/^bitmap_destroy(struct bitmap *bitmap) {$/;"	f
bitmap_free	kern/fs/sfs/bitmap.c	/^bitmap_free(struct bitmap *bitmap, uint32_t index) {$/;"	f
bitmap_getdata	kern/fs/sfs/bitmap.c	/^bitmap_getdata(struct bitmap *bitmap, size_t *len_store) {$/;"	f
bitmap_test	kern/fs/sfs/bitmap.c	/^bitmap_test(struct bitmap *bitmap, uint32_t index) {$/;"	f
bitmap_translate	kern/fs/sfs/bitmap.c	/^bitmap_translate(struct bitmap *bitmap, uint32_t index, WORD_TYPE **word, WORD_TYPE *mask) {$/;"	f	file:
map	kern/fs/sfs/bitmap.c	/^    WORD_TYPE *map;$/;"	m	struct:bitmap	file:
nbits	kern/fs/sfs/bitmap.c	/^    uint32_t nbits;$/;"	m	struct:bitmap	file:
nwords	kern/fs/sfs/bitmap.c	/^    uint32_t nwords;$/;"	m	struct:bitmap	file:
__KERN_FS_SFS_BITMAP_H__	kern/fs/sfs/bitmap.h	2;"	d
sfs_init	kern/fs/sfs/sfs.c	/^sfs_init(void) {$/;"	f
SFS_BLKBITS	kern/fs/sfs/sfs.h	26;"	d
SFS_BLKN_FREEMAP	kern/fs/sfs/sfs.h	23;"	d
SFS_BLKN_ROOT	kern/fs/sfs/sfs.h	22;"	d
SFS_BLKN_SUPER	kern/fs/sfs/sfs.h	21;"	d
SFS_BLKSIZE	kern/fs/sfs/sfs.h	16;"	d
SFS_BLK_NENTRY	kern/fs/sfs/sfs.h	29;"	d
SFS_HLIST_SHIFT	kern/fs/sfs/sfs.h	97;"	d
SFS_HLIST_SIZE	kern/fs/sfs/sfs.h	98;"	d
SFS_MAGIC	kern/fs/sfs/sfs.h	15;"	d
SFS_MAX_FILE_SIZE	kern/fs/sfs/sfs.h	20;"	d
SFS_MAX_FNAME_LEN	kern/fs/sfs/sfs.h	19;"	d
SFS_MAX_INFO_LEN	kern/fs/sfs/sfs.h	18;"	d
SFS_NDIRECT	kern/fs/sfs/sfs.h	17;"	d
SFS_TYPE_DIR	kern/fs/sfs/sfs.h	34;"	d
SFS_TYPE_FILE	kern/fs/sfs/sfs.h	33;"	d
SFS_TYPE_INVAL	kern/fs/sfs/sfs.h	32;"	d
SFS_TYPE_LINK	kern/fs/sfs/sfs.h	35;"	d
__KERN_FS_SFS_SFS_H__	kern/fs/sfs/sfs.h	2;"	d
blocks	kern/fs/sfs/sfs.h	/^    uint32_t blocks;                                \/* # of blocks *\/$/;"	m	struct:sfs_disk_inode
blocks	kern/fs/sfs/sfs.h	/^    uint32_t blocks;                                \/* # of blocks in fs *\/$/;"	m	struct:sfs_super
dev	kern/fs/sfs/sfs.h	/^    struct device *dev;                             \/* device mounted on *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::device
din	kern/fs/sfs/sfs.h	/^    struct sfs_disk_inode *din;                     \/* on-disk inode *\/$/;"	m	struct:sfs_inode	typeref:struct:sfs_inode::sfs_disk_inode
direct	kern/fs/sfs/sfs.h	/^    uint32_t direct[SFS_NDIRECT];                   \/* direct blocks *\/$/;"	m	struct:sfs_disk_inode
dirty	kern/fs/sfs/sfs.h	/^    bool dirty;                                     \/* true if inode modified *\/$/;"	m	struct:sfs_inode
freemap	kern/fs/sfs/sfs.h	/^    struct bitmap *freemap;                         \/* blocks in use are mared 0 *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::bitmap
fs_sem	kern/fs/sfs/sfs.h	/^    semaphore_t fs_sem;                             \/* semaphore for fs *\/$/;"	m	struct:sfs_fs
hash_link	kern/fs/sfs/sfs.h	/^    list_entry_t hash_link;                         \/* entry for hash linked-list in sfs_fs *\/$/;"	m	struct:sfs_inode
hash_list	kern/fs/sfs/sfs.h	/^    list_entry_t *hash_list;                        \/* inode hash linked-list *\/$/;"	m	struct:sfs_fs
indirect	kern/fs/sfs/sfs.h	/^    uint32_t indirect;                              \/* indirect blocks *\/$/;"	m	struct:sfs_disk_inode
info	kern/fs/sfs/sfs.h	/^    char info[SFS_MAX_INFO_LEN + 1];                \/* infomation for sfs  *\/$/;"	m	struct:sfs_super
ino	kern/fs/sfs/sfs.h	/^    uint32_t ino;                                   \/* inode number *\/$/;"	m	struct:sfs_disk_entry
ino	kern/fs/sfs/sfs.h	/^    uint32_t ino;                                   \/* inode number *\/$/;"	m	struct:sfs_inode
inode_link	kern/fs/sfs/sfs.h	/^    list_entry_t inode_link;                        \/* entry for linked-list in sfs_fs *\/$/;"	m	struct:sfs_inode
inode_list	kern/fs/sfs/sfs.h	/^    list_entry_t inode_list;                        \/* inode linked-list *\/$/;"	m	struct:sfs_fs
io_sem	kern/fs/sfs/sfs.h	/^    semaphore_t io_sem;                             \/* semaphore for io *\/$/;"	m	struct:sfs_fs
le2sin	kern/fs/sfs/sfs.h	79;"	d
magic	kern/fs/sfs/sfs.h	/^    uint32_t magic;                                 \/* magic number, should be SFS_MAGIC *\/$/;"	m	struct:sfs_super
mutex_sem	kern/fs/sfs/sfs.h	/^    semaphore_t mutex_sem;                          \/* semaphore for link\/unlink and rename *\/$/;"	m	struct:sfs_fs
name	kern/fs/sfs/sfs.h	/^    char name[SFS_MAX_FNAME_LEN + 1];               \/* file name *\/$/;"	m	struct:sfs_disk_entry
nlinks	kern/fs/sfs/sfs.h	/^    uint16_t nlinks;                                \/* # of hard links to this file *\/$/;"	m	struct:sfs_disk_inode
reclaim_count	kern/fs/sfs/sfs.h	/^    int reclaim_count;                              \/* kill inode if it hits zero *\/$/;"	m	struct:sfs_inode
sem	kern/fs/sfs/sfs.h	/^    semaphore_t sem;                                \/* semaphore for din *\/$/;"	m	struct:sfs_inode
sfs_buffer	kern/fs/sfs/sfs.h	/^    void *sfs_buffer;                               \/* buffer for non-block aligned io *\/$/;"	m	struct:sfs_fs
sfs_dentry_size	kern/fs/sfs/sfs.h	65;"	d
sfs_disk_entry	kern/fs/sfs/sfs.h	/^struct sfs_disk_entry {$/;"	s
sfs_disk_inode	kern/fs/sfs/sfs.h	/^struct sfs_disk_inode {$/;"	s
sfs_freemap_bits	kern/fs/sfs/sfs.h	102;"	d
sfs_freemap_blocks	kern/fs/sfs/sfs.h	105;"	d
sfs_fs	kern/fs/sfs/sfs.h	/^struct sfs_fs {$/;"	s
sfs_inode	kern/fs/sfs/sfs.h	/^struct sfs_inode {$/;"	s
sfs_super	kern/fs/sfs/sfs.h	/^struct sfs_super {$/;"	s
sin_hashfn	kern/fs/sfs/sfs.h	99;"	d
size	kern/fs/sfs/sfs.h	/^    uint32_t size;                                  \/* size of the file (in bytes) *\/$/;"	m	struct:sfs_disk_inode
super	kern/fs/sfs/sfs.h	/^    struct sfs_super super;                         \/* on-disk superblock *\/$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::sfs_super
super_dirty	kern/fs/sfs/sfs.h	/^    bool super_dirty;                               \/* true if super\/freemap modified *\/$/;"	m	struct:sfs_fs
type	kern/fs/sfs/sfs.h	/^    uint16_t type;                                  \/* one of SYS_TYPE_* above *\/$/;"	m	struct:sfs_disk_inode
unused_blocks	kern/fs/sfs/sfs.h	/^    uint32_t unused_blocks;                         \/* # of unused blocks in fs *\/$/;"	m	struct:sfs_super
sfs_cleanup	kern/fs/sfs/sfs_fs.c	/^sfs_cleanup(struct fs *fs) {$/;"	f	file:
sfs_do_mount	kern/fs/sfs/sfs_fs.c	/^sfs_do_mount(struct device *dev, struct fs **fs_store) {$/;"	f	file:
sfs_get_root	kern/fs/sfs/sfs_fs.c	/^sfs_get_root(struct fs *fs) {$/;"	f	file:
sfs_init_freemap	kern/fs/sfs/sfs_fs.c	/^sfs_init_freemap(struct device *dev, struct bitmap *freemap, uint32_t blkno, uint32_t nblks, void *blk_buffer) {$/;"	f	file:
sfs_init_read	kern/fs/sfs/sfs_fs.c	/^sfs_init_read(struct device *dev, uint32_t blkno, void *blk_buffer) {$/;"	f	file:
sfs_mount	kern/fs/sfs/sfs_fs.c	/^sfs_mount(const char *devname) {$/;"	f
sfs_sync	kern/fs/sfs/sfs_fs.c	/^sfs_sync(struct fs *fs) {$/;"	f	file:
sfs_unmount	kern/fs/sfs/sfs_fs.c	/^sfs_unmount(struct fs *fs) {$/;"	f	file:
lock_sin	kern/fs/sfs/sfs_inode.c	/^lock_sin(struct sfs_inode *sin) {$/;"	f	file:
lookup_sfs_nolock	kern/fs/sfs/sfs_inode.c	/^lookup_sfs_nolock(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
set_pvalue	kern/fs/sfs/sfs_inode.c	448;"	d	file:
set_pvalue	kern/fs/sfs/sfs_inode.c	465;"	d	file:
sfs_block_alloc	kern/fs/sfs/sfs_inode.c	/^sfs_block_alloc(struct sfs_fs *sfs, uint32_t *ino_store) {$/;"	f	file:
sfs_block_free	kern/fs/sfs/sfs_inode.c	/^sfs_block_free(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
sfs_block_inuse	kern/fs/sfs/sfs_inode.c	/^sfs_block_inuse(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
sfs_bmap_free_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_free_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index) {$/;"	f	file:
sfs_bmap_free_sub_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_free_sub_nolock(struct sfs_fs *sfs, uint32_t ent, uint32_t index) {$/;"	f	file:
sfs_bmap_get_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_get_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index, bool create, uint32_t *ino_store) {$/;"	f	file:
sfs_bmap_get_sub_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_get_sub_nolock(struct sfs_fs *sfs, uint32_t *entp, uint32_t index, bool create, uint32_t *ino_store) {$/;"	f	file:
sfs_bmap_load_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_load_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t index, uint32_t *ino_store) {$/;"	f	file:
sfs_bmap_truncate_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_bmap_truncate_nolock(struct sfs_fs *sfs, struct sfs_inode *sin) {$/;"	f	file:
sfs_close	kern/fs/sfs/sfs_inode.c	/^sfs_close(struct inode *node) {$/;"	f	file:
sfs_create_inode	kern/fs/sfs/sfs_inode.c	/^sfs_create_inode(struct sfs_fs *sfs, struct sfs_disk_inode *din, uint32_t ino, struct inode **node_store) {$/;"	f	file:
sfs_dirent_findino_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_dirent_findino_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, uint32_t ino, struct sfs_disk_entry *entry) {$/;"	f	file:
sfs_dirent_link_nolock_check	kern/fs/sfs/sfs_inode.c	414;"	d	file:
sfs_dirent_read_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_dirent_read_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot, struct sfs_disk_entry *entry) {$/;"	f	file:
sfs_dirent_search_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_dirent_search_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, const char *name, uint32_t *ino_store, int *slot, int *empty_slot) {$/;"	f	file:
sfs_dirent_unlink_nolock_check	kern/fs/sfs/sfs_inode.c	422;"	d	file:
sfs_fstat	kern/fs/sfs/sfs_inode.c	/^sfs_fstat(struct inode *node, struct stat *stat) {$/;"	f	file:
sfs_fsync	kern/fs/sfs/sfs_inode.c	/^sfs_fsync(struct inode *node) {$/;"	f	file:
sfs_get_ops	kern/fs/sfs/sfs_inode.c	/^sfs_get_ops(uint16_t type) {$/;"	f	file:
sfs_getdirentry	kern/fs/sfs/sfs_inode.c	/^sfs_getdirentry(struct inode *node, struct iobuf *iob) {$/;"	f	file:
sfs_getdirentry_sub_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_getdirentry_sub_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, int slot, struct sfs_disk_entry *entry) {$/;"	f	file:
sfs_gettype	kern/fs/sfs/sfs_inode.c	/^sfs_gettype(struct inode *node, uint32_t *type_store) {$/;"	f	file:
sfs_hash_list	kern/fs/sfs/sfs_inode.c	/^sfs_hash_list(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
sfs_io	kern/fs/sfs/sfs_inode.c	/^sfs_io(struct inode *node, struct iobuf *iob, bool write) {$/;"	f	file:
sfs_io_nolock	kern/fs/sfs/sfs_inode.c	/^sfs_io_nolock(struct sfs_fs *sfs, struct sfs_inode *sin, void *buf, off_t offset, size_t *alenp, bool write) {$/;"	f	file:
sfs_load_inode	kern/fs/sfs/sfs_inode.c	/^sfs_load_inode(struct sfs_fs *sfs, struct inode **node_store, uint32_t ino) {$/;"	f
sfs_lookup	kern/fs/sfs/sfs_inode.c	/^sfs_lookup(struct inode *node, char *path, struct inode **node_store) {$/;"	f	file:
sfs_lookup_once	kern/fs/sfs/sfs_inode.c	/^sfs_lookup_once(struct sfs_fs *sfs, struct sfs_inode *sin, const char *name, struct inode **node_store, int *slot) {$/;"	f	file:
sfs_namefile	kern/fs/sfs/sfs_inode.c	/^sfs_namefile(struct inode *node, struct iobuf *iob) {$/;"	f	file:
sfs_node_dirops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_dirops = {$/;"	v	typeref:struct:inode_ops	file:
sfs_node_dirops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_dirops;  \/\/ dir operations$/;"	v	typeref:struct:inode_ops	file:
sfs_node_fileops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_fileops = {$/;"	v	typeref:struct:inode_ops	file:
sfs_node_fileops	kern/fs/sfs/sfs_inode.c	/^static const struct inode_ops sfs_node_fileops; \/\/ file operations$/;"	v	typeref:struct:inode_ops	file:
sfs_opendir	kern/fs/sfs/sfs_inode.c	/^sfs_opendir(struct inode *node, uint32_t open_flags) {$/;"	f	file:
sfs_openfile	kern/fs/sfs/sfs_inode.c	/^sfs_openfile(struct inode *node, uint32_t open_flags) {$/;"	f	file:
sfs_read	kern/fs/sfs/sfs_inode.c	/^sfs_read(struct inode *node, struct iobuf *iob) {$/;"	f	file:
sfs_reclaim	kern/fs/sfs/sfs_inode.c	/^sfs_reclaim(struct inode *node) {$/;"	f	file:
sfs_remove_links	kern/fs/sfs/sfs_inode.c	/^sfs_remove_links(struct sfs_inode *sin) {$/;"	f	file:
sfs_set_links	kern/fs/sfs/sfs_inode.c	/^sfs_set_links(struct sfs_fs *sfs, struct sfs_inode *sin) {$/;"	f	file:
sfs_truncfile	kern/fs/sfs/sfs_inode.c	/^sfs_truncfile(struct inode *node, off_t len) {$/;"	f	file:
sfs_tryseek	kern/fs/sfs/sfs_inode.c	/^sfs_tryseek(struct inode *node, off_t pos) {$/;"	f	file:
sfs_write	kern/fs/sfs/sfs_inode.c	/^sfs_write(struct inode *node, struct iobuf *iob) {$/;"	f	file:
unlock_sin	kern/fs/sfs/sfs_inode.c	/^unlock_sin(struct sfs_inode *sin) {$/;"	f	file:
sfs_clear_block	kern/fs/sfs/sfs_io.c	/^sfs_clear_block(struct sfs_fs *sfs, uint32_t blkno, uint32_t nblks) {$/;"	f
sfs_rblock	kern/fs/sfs/sfs_io.c	/^sfs_rblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks) {$/;"	f
sfs_rbuf	kern/fs/sfs/sfs_io.c	/^sfs_rbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno, off_t offset) {$/;"	f
sfs_rwblock	kern/fs/sfs/sfs_io.c	/^sfs_rwblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks, bool write) {$/;"	f	file:
sfs_rwblock_nolock	kern/fs/sfs/sfs_io.c	/^sfs_rwblock_nolock(struct sfs_fs *sfs, void *buf, uint32_t blkno, bool write, bool check) {$/;"	f	file:
sfs_sync_freemap	kern/fs/sfs/sfs_io.c	/^sfs_sync_freemap(struct sfs_fs *sfs) {$/;"	f
sfs_sync_super	kern/fs/sfs/sfs_io.c	/^sfs_sync_super(struct sfs_fs *sfs) {$/;"	f
sfs_wblock	kern/fs/sfs/sfs_io.c	/^sfs_wblock(struct sfs_fs *sfs, void *buf, uint32_t blkno, uint32_t nblks) {$/;"	f
sfs_wbuf	kern/fs/sfs/sfs_io.c	/^sfs_wbuf(struct sfs_fs *sfs, void *buf, size_t len, uint32_t blkno, off_t offset) {$/;"	f
lock_sfs_fs	kern/fs/sfs/sfs_lock.c	/^lock_sfs_fs(struct sfs_fs *sfs) {$/;"	f
lock_sfs_io	kern/fs/sfs/sfs_lock.c	/^lock_sfs_io(struct sfs_fs *sfs) {$/;"	f
unlock_sfs_fs	kern/fs/sfs/sfs_lock.c	/^unlock_sfs_fs(struct sfs_fs *sfs) {$/;"	f
unlock_sfs_io	kern/fs/sfs/sfs_lock.c	/^unlock_sfs_io(struct sfs_fs *sfs) {$/;"	f
swapfs_init	kern/fs/swap/swapfs.c	/^swapfs_init(void) {$/;"	f
swapfs_read	kern/fs/swap/swapfs.c	/^swapfs_read(swap_entry_t entry, struct Page *page) {$/;"	f
swapfs_write	kern/fs/swap/swapfs.c	/^swapfs_write(swap_entry_t entry, struct Page *page) {$/;"	f
__KERN_FS_SWAP_SWAPFS_H__	kern/fs/swap/swapfs.h	2;"	d
IOBUF_SIZE	kern/fs/sysfile.c	16;"	d	file:
copy_path	kern/fs/sysfile.c	/^copy_path(char **to, const char *from) {$/;"	f	file:
sysfile_chdir	kern/fs/sysfile.c	/^sysfile_chdir(const char *__path) {$/;"	f
sysfile_close	kern/fs/sysfile.c	/^sysfile_close(int fd) {$/;"	f
sysfile_dup	kern/fs/sysfile.c	/^sysfile_dup(int fd1, int fd2) {$/;"	f
sysfile_fstat	kern/fs/sysfile.c	/^sysfile_fstat(int fd, struct stat *__stat) {$/;"	f
sysfile_fsync	kern/fs/sysfile.c	/^sysfile_fsync(int fd) {$/;"	f
sysfile_getcwd	kern/fs/sysfile.c	/^sysfile_getcwd(char *buf, size_t len) {$/;"	f
sysfile_getdirentry	kern/fs/sysfile.c	/^sysfile_getdirentry(int fd, struct dirent *__direntp) {$/;"	f
sysfile_link	kern/fs/sysfile.c	/^sysfile_link(const char *__path1, const char *__path2) {$/;"	f
sysfile_mkfifo	kern/fs/sysfile.c	/^sysfile_mkfifo(const char *__name, uint32_t open_flags) {$/;"	f
sysfile_open	kern/fs/sysfile.c	/^sysfile_open(const char *__path, uint32_t open_flags) {$/;"	f
sysfile_pipe	kern/fs/sysfile.c	/^sysfile_pipe(int *fd_store) {$/;"	f
sysfile_read	kern/fs/sysfile.c	/^sysfile_read(int fd, void *base, size_t len) {$/;"	f
sysfile_rename	kern/fs/sysfile.c	/^sysfile_rename(const char *__path1, const char *__path2) {$/;"	f
sysfile_seek	kern/fs/sysfile.c	/^sysfile_seek(int fd, off_t pos, int whence) {$/;"	f
sysfile_unlink	kern/fs/sysfile.c	/^sysfile_unlink(const char *__path) {$/;"	f
sysfile_write	kern/fs/sysfile.c	/^sysfile_write(int fd, void *base, size_t len) {$/;"	f
__KERN_FS_SYSFILE_H__	kern/fs/sysfile.h	2;"	d
__alloc_inode	kern/fs/vfs/inode.c	/^__alloc_inode(int type) {$/;"	f
inode_check	kern/fs/vfs/inode.c	/^inode_check(struct inode *node, const char *opstr) {$/;"	f
inode_init	kern/fs/vfs/inode.c	/^inode_init(struct inode *node, const struct inode_ops *ops, struct fs *fs) {$/;"	f
inode_kill	kern/fs/vfs/inode.c	/^inode_kill(struct inode *node) {$/;"	f
inode_open_dec	kern/fs/vfs/inode.c	/^inode_open_dec(struct inode *node) {$/;"	f
inode_open_inc	kern/fs/vfs/inode.c	/^inode_open_inc(struct inode *node) {$/;"	f
inode_ref_dec	kern/fs/vfs/inode.c	/^inode_ref_dec(struct inode *node) {$/;"	f
inode_ref_inc	kern/fs/vfs/inode.c	/^inode_ref_inc(struct inode *node) {$/;"	f
MAX_INODE_COUNT	kern/fs/vfs/inode.h	64;"	d
VOP_MAGIC	kern/fs/vfs/inode.h	74;"	d
__KERN_FS_VFS_INODE_H__	kern/fs/vfs/inode.h	2;"	d
__device_info	kern/fs/vfs/inode.h	/^        struct device __device_info;$/;"	m	union:inode::__anon7	typeref:struct:inode::__anon7::device
__in_type	kern/fs/vfs/inode.h	44;"	d
__sfs_inode_info	kern/fs/vfs/inode.h	/^        struct sfs_inode __sfs_inode_info;$/;"	m	union:inode::__anon7	typeref:struct:inode::__anon7::sfs_inode
__vop_info	kern/fs/vfs/inode.h	48;"	d
__vop_op	kern/fs/vfs/inode.h	193;"	d
alloc_inode	kern/fs/vfs/inode.h	62;"	d
check_inode_type	kern/fs/vfs/inode.h	46;"	d
in_fs	kern/fs/vfs/inode.h	/^    struct fs *in_fs;$/;"	m	struct:inode	typeref:struct:inode::fs
in_info	kern/fs/vfs/inode.h	/^    } in_info;$/;"	m	struct:inode	typeref:union:inode::__anon7
in_ops	kern/fs/vfs/inode.h	/^    const struct inode_ops *in_ops;$/;"	m	struct:inode	typeref:struct:inode::inode_ops
in_type	kern/fs/vfs/inode.h	/^    } in_type;$/;"	m	struct:inode	typeref:enum:inode::__anon8
info2node	kern/fs/vfs/inode.h	57;"	d
inode	kern/fs/vfs/inode.h	/^struct inode {$/;"	s
inode_open_count	kern/fs/vfs/inode.h	/^inode_open_count(struct inode *node) {$/;"	f
inode_ops	kern/fs/vfs/inode.h	/^struct inode_ops {$/;"	s
inode_ref_count	kern/fs/vfs/inode.h	/^inode_ref_count(struct inode *node) {$/;"	f
inode_type_device_info	kern/fs/vfs/inode.h	/^        inode_type_device_info = 0x1234,$/;"	e	enum:inode::__anon8
inode_type_sfs_inode_info	kern/fs/vfs/inode.h	/^        inode_type_sfs_inode_info,$/;"	e	enum:inode::__anon8
open_count	kern/fs/vfs/inode.h	/^    int open_count;$/;"	m	struct:inode
ref_count	kern/fs/vfs/inode.h	/^    int ref_count;$/;"	m	struct:inode
vop_close	kern/fs/vfs/inode.h	/^    int (*vop_close)(struct inode *node);$/;"	m	struct:inode_ops
vop_close	kern/fs/vfs/inode.h	202;"	d
vop_create	kern/fs/vfs/inode.h	/^    int (*vop_create)(struct inode *node, const char *name, bool excl, struct inode **node_store);$/;"	m	struct:inode_ops
vop_create	kern/fs/vfs/inode.h	214;"	d
vop_fs	kern/fs/vfs/inode.h	218;"	d
vop_fstat	kern/fs/vfs/inode.h	/^    int (*vop_fstat)(struct inode *node, struct stat *stat);$/;"	m	struct:inode_ops
vop_fstat	kern/fs/vfs/inode.h	205;"	d
vop_fsync	kern/fs/vfs/inode.h	/^    int (*vop_fsync)(struct inode *node);$/;"	m	struct:inode_ops
vop_fsync	kern/fs/vfs/inode.h	206;"	d
vop_getdirentry	kern/fs/vfs/inode.h	/^    int (*vop_getdirentry)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_getdirentry	kern/fs/vfs/inode.h	208;"	d
vop_gettype	kern/fs/vfs/inode.h	/^    int (*vop_gettype)(struct inode *node, uint32_t *type_store);$/;"	m	struct:inode_ops
vop_gettype	kern/fs/vfs/inode.h	211;"	d
vop_info	kern/fs/vfs/inode.h	55;"	d
vop_init	kern/fs/vfs/inode.h	219;"	d
vop_ioctl	kern/fs/vfs/inode.h	/^    int (*vop_ioctl)(struct inode *node, int op, void *data);$/;"	m	struct:inode_ops
vop_ioctl	kern/fs/vfs/inode.h	210;"	d
vop_kill	kern/fs/vfs/inode.h	220;"	d
vop_lookup	kern/fs/vfs/inode.h	/^    int (*vop_lookup)(struct inode *node, char *path, struct inode **node_store);$/;"	m	struct:inode_ops
vop_lookup	kern/fs/vfs/inode.h	215;"	d
vop_magic	kern/fs/vfs/inode.h	/^    unsigned long vop_magic;$/;"	m	struct:inode_ops
vop_namefile	kern/fs/vfs/inode.h	/^    int (*vop_namefile)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_namefile	kern/fs/vfs/inode.h	207;"	d
vop_open	kern/fs/vfs/inode.h	/^    int (*vop_open)(struct inode *node, uint32_t open_flags);$/;"	m	struct:inode_ops
vop_open	kern/fs/vfs/inode.h	201;"	d
vop_open_dec	kern/fs/vfs/inode.h	234;"	d
vop_open_inc	kern/fs/vfs/inode.h	233;"	d
vop_read	kern/fs/vfs/inode.h	/^    int (*vop_read)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_read	kern/fs/vfs/inode.h	203;"	d
vop_reclaim	kern/fs/vfs/inode.h	/^    int (*vop_reclaim)(struct inode *node);$/;"	m	struct:inode_ops
vop_reclaim	kern/fs/vfs/inode.h	209;"	d
vop_ref_dec	kern/fs/vfs/inode.h	226;"	d
vop_ref_inc	kern/fs/vfs/inode.h	225;"	d
vop_truncate	kern/fs/vfs/inode.h	/^    int (*vop_truncate)(struct inode *node, off_t len);$/;"	m	struct:inode_ops
vop_truncate	kern/fs/vfs/inode.h	213;"	d
vop_tryseek	kern/fs/vfs/inode.h	/^    int (*vop_tryseek)(struct inode *node, off_t pos);$/;"	m	struct:inode_ops
vop_tryseek	kern/fs/vfs/inode.h	212;"	d
vop_write	kern/fs/vfs/inode.h	/^    int (*vop_write)(struct inode *node, struct iobuf *iob);$/;"	m	struct:inode_ops
vop_write	kern/fs/vfs/inode.h	204;"	d
__alloc_fs	kern/fs/vfs/vfs.c	/^__alloc_fs(int type) {$/;"	f
bootfs_node	kern/fs/vfs/vfs.c	/^static struct inode *bootfs_node = NULL;$/;"	v	typeref:struct:inode	file:
bootfs_sem	kern/fs/vfs/vfs.c	/^static semaphore_t bootfs_sem;$/;"	v	file:
change_bootfs	kern/fs/vfs/vfs.c	/^change_bootfs(struct inode *node) {$/;"	f	file:
lock_bootfs	kern/fs/vfs/vfs.c	/^lock_bootfs(void) {$/;"	f	file:
unlock_bootfs	kern/fs/vfs/vfs.c	/^unlock_bootfs(void) {$/;"	f	file:
vfs_get_bootfs	kern/fs/vfs/vfs.c	/^vfs_get_bootfs(struct inode **node_store) {$/;"	f
vfs_init	kern/fs/vfs/vfs.c	/^vfs_init(void) {$/;"	f
vfs_set_bootfs	kern/fs/vfs/vfs.c	/^vfs_set_bootfs(char *fsname) {$/;"	f
__KERN_FS_VFS_VFS_H__	kern/fs/vfs/vfs.h	2;"	d
__fs_type	kern/fs/vfs/vfs.h	48;"	d
__fsop_info	kern/fs/vfs/vfs.h	52;"	d
__sfs_info	kern/fs/vfs/vfs.h	/^        struct sfs_fs __sfs_info;                   $/;"	m	union:fs::__anon5	typeref:struct:fs::__anon5::sfs_fs
alloc_fs	kern/fs/vfs/vfs.h	65;"	d
check_fs_type	kern/fs/vfs/vfs.h	50;"	d
fs	kern/fs/vfs/vfs.h	/^struct fs {$/;"	s
fs_cleanup	kern/fs/vfs/vfs.h	/^    void (*fs_cleanup)(struct fs *fs);             \/\/ Cleanup of filesystem.???$/;"	m	struct:fs
fs_get_root	kern/fs/vfs/vfs.h	/^    struct inode *(*fs_get_root)(struct fs *fs);   \/\/ Return root inode of filesystem.$/;"	m	struct:fs	typeref:struct:fs::fs_get_root
fs_info	kern/fs/vfs/vfs.h	/^    } fs_info;                                     \/\/ filesystem-specific data $/;"	m	struct:fs	typeref:union:fs::__anon5
fs_sync	kern/fs/vfs/vfs.h	/^    int (*fs_sync)(struct fs *fs);                 \/\/ Flush all dirty buffers to disk $/;"	m	struct:fs
fs_type	kern/fs/vfs/vfs.h	/^    } fs_type;                                     \/\/ filesystem type $/;"	m	struct:fs	typeref:enum:fs::__anon6
fs_type_sfs_info	kern/fs/vfs/vfs.h	/^        fs_type_sfs_info,$/;"	e	enum:fs::__anon6
fs_unmount	kern/fs/vfs/vfs.h	/^    int (*fs_unmount)(struct fs *fs);              \/\/ Attempt unmount of filesystem.$/;"	m	struct:fs
fsop_cleanup	kern/fs/vfs/vfs.h	71;"	d
fsop_get_root	kern/fs/vfs/vfs.h	69;"	d
fsop_info	kern/fs/vfs/vfs.h	58;"	d
fsop_sync	kern/fs/vfs/vfs.h	68;"	d
fsop_unmount	kern/fs/vfs/vfs.h	70;"	d
info2fs	kern/fs/vfs/vfs.h	60;"	d
check_devname_conflict	kern/fs/vfs/vfsdev.c	/^check_devname_conflict(const char *devname) {$/;"	f	file:
devname	kern/fs/vfs/vfsdev.c	/^    const char *devname;$/;"	m	struct:__anon4	file:
devnode	kern/fs/vfs/vfsdev.c	/^    struct inode *devnode;$/;"	m	struct:__anon4	typeref:struct:__anon4::inode	file:
find_mount	kern/fs/vfs/vfsdev.c	/^find_mount(const char *devname, vfs_dev_t **vdev_store) {$/;"	f	file:
fs	kern/fs/vfs/vfsdev.c	/^    struct fs *fs;$/;"	m	struct:__anon4	typeref:struct:__anon4::fs	file:
le2vdev	kern/fs/vfs/vfsdev.c	23;"	d	file:
lock_vdev_list	kern/fs/vfs/vfsdev.c	/^lock_vdev_list(void) {$/;"	f	file:
mountable	kern/fs/vfs/vfsdev.c	/^    bool mountable;$/;"	m	struct:__anon4	file:
unlock_vdev_list	kern/fs/vfs/vfsdev.c	/^unlock_vdev_list(void) {$/;"	f	file:
vdev_link	kern/fs/vfs/vfsdev.c	/^    list_entry_t vdev_link;$/;"	m	struct:__anon4	file:
vdev_list	kern/fs/vfs/vfsdev.c	/^static list_entry_t vdev_list;     \/\/ device info list in vfs layer$/;"	v	file:
vdev_list_sem	kern/fs/vfs/vfsdev.c	/^static semaphore_t vdev_list_sem;$/;"	v	file:
vfs_add_dev	kern/fs/vfs/vfsdev.c	/^vfs_add_dev(const char *devname, struct inode *devnode, bool mountable) {$/;"	f
vfs_add_fs	kern/fs/vfs/vfsdev.c	/^vfs_add_fs(const char *devname, struct fs *fs) {$/;"	f
vfs_cleanup	kern/fs/vfs/vfsdev.c	/^vfs_cleanup(void) {$/;"	f
vfs_dev_t	kern/fs/vfs/vfsdev.c	/^} vfs_dev_t;$/;"	t	typeref:struct:__anon4	file:
vfs_devlist_init	kern/fs/vfs/vfsdev.c	/^vfs_devlist_init(void) {$/;"	f
vfs_do_add	kern/fs/vfs/vfsdev.c	/^vfs_do_add(const char *devname, struct inode *devnode, struct fs *fs, bool mountable) {$/;"	f	file:
vfs_get_devname	kern/fs/vfs/vfsdev.c	/^vfs_get_devname(struct fs *fs) {$/;"	f
vfs_get_root	kern/fs/vfs/vfsdev.c	/^vfs_get_root(const char *devname, struct inode **node_store) {$/;"	f
vfs_mount	kern/fs/vfs/vfsdev.c	/^vfs_mount(const char *devname, int (*mountfunc)(struct device *dev, struct fs **fs_store)) {$/;"	f
vfs_unmount	kern/fs/vfs/vfsdev.c	/^vfs_unmount(const char *devname) {$/;"	f
vfs_unmount_all	kern/fs/vfs/vfsdev.c	/^vfs_unmount_all(void) {$/;"	f
vfs_close	kern/fs/vfs/vfsfile.c	/^vfs_close(struct inode *node) {$/;"	f
vfs_link	kern/fs/vfs/vfsfile.c	/^vfs_link(char *old_path, char *new_path) {$/;"	f
vfs_mkdir	kern/fs/vfs/vfsfile.c	/^vfs_mkdir(char *path){$/;"	f
vfs_open	kern/fs/vfs/vfsfile.c	/^vfs_open(char *path, uint32_t open_flags, struct inode **node_store) {$/;"	f
vfs_readlink	kern/fs/vfs/vfsfile.c	/^vfs_readlink(char *path, struct iobuf *iob) {$/;"	f
vfs_rename	kern/fs/vfs/vfsfile.c	/^vfs_rename(char *old_path, char *new_path) {$/;"	f
vfs_symlink	kern/fs/vfs/vfsfile.c	/^vfs_symlink(char *old_path, char *new_path) {$/;"	f
vfs_unlink	kern/fs/vfs/vfsfile.c	/^vfs_unlink(char *path) {$/;"	f
get_device	kern/fs/vfs/vfslookup.c	/^get_device(char *path, char **subpath, struct inode **node_store) {$/;"	f	file:
vfs_lookup	kern/fs/vfs/vfslookup.c	/^vfs_lookup(char *path, struct inode **node_store) {$/;"	f
vfs_lookup_parent	kern/fs/vfs/vfslookup.c	/^vfs_lookup_parent(char *path, struct inode **node_store, char **endp){$/;"	f
get_cwd_nolock	kern/fs/vfs/vfspath.c	/^get_cwd_nolock(void) {$/;"	f	file:
lock_cfs	kern/fs/vfs/vfspath.c	/^lock_cfs(void) {$/;"	f	file:
set_cwd_nolock	kern/fs/vfs/vfspath.c	/^set_cwd_nolock(struct inode *pwd) {$/;"	f	file:
unlock_cfs	kern/fs/vfs/vfspath.c	/^unlock_cfs(void) {$/;"	f	file:
vfs_chdir	kern/fs/vfs/vfspath.c	/^vfs_chdir(char *path) {$/;"	f
vfs_get_curdir	kern/fs/vfs/vfspath.c	/^vfs_get_curdir(struct inode **dir_store) {$/;"	f
vfs_getcwd	kern/fs/vfs/vfspath.c	/^vfs_getcwd(struct iobuf *iob) {$/;"	f
vfs_set_curdir	kern/fs/vfs/vfspath.c	/^vfs_set_curdir(struct inode *dir) {$/;"	f
REALLOC	kern/init/entry.S	/^#define REALLOC(x) (x - KERNBASE)$/;"	d
__gdt	kern/init/entry.S	/^__gdt:$/;"	l
__gdtdesc	kern/init/entry.S	/^__gdtdesc:$/;"	l
bootstack	kern/init/entry.S	/^bootstack:$/;"	l
bootstacktop	kern/init/entry.S	/^bootstacktop:$/;"	l
kern_entry	kern/init/entry.S	/^kern_entry:$/;"	l
relocated	kern/init/entry.S	/^relocated:$/;"	l
spin	kern/init/entry.S	/^spin:$/;"	l
grade_backtrace	kern/init/init.c	/^grade_backtrace(void) {$/;"	f
grade_backtrace0	kern/init/init.c	/^grade_backtrace0(int arg0, int arg1, int arg2) {$/;"	f
grade_backtrace1	kern/init/init.c	/^grade_backtrace1(int arg0, int arg1) {$/;"	f
grade_backtrace2	kern/init/init.c	/^grade_backtrace2(int arg0, int arg1, int arg2, int arg3) {$/;"	f
kern_init	kern/init/init.c	/^kern_init(void) {$/;"	f
lab1_print_cur_status	kern/init/init.c	/^lab1_print_cur_status(void) {$/;"	f	file:
lab1_switch_test	kern/init/init.c	/^lab1_switch_test(void) {$/;"	f	file:
lab1_switch_to_kernel	kern/init/init.c	/^lab1_switch_to_kernel(void) {$/;"	f	file:
lab1_switch_to_user	kern/init/init.c	/^lab1_switch_to_user(void) {$/;"	f	file:
BUFSIZE	kern/libs/readline.c	3;"	d	file:
buf	kern/libs/readline.c	/^static char buf[BUFSIZE];$/;"	v	file:
readline	kern/libs/readline.c	/^readline(const char *prompt) {$/;"	f
cprintf	kern/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cputch	kern/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputchar	kern/libs/stdio.c	/^cputchar(int c) {$/;"	f
cputs	kern/libs/stdio.c	/^cputs(const char *str) {$/;"	f
getchar	kern/libs/stdio.c	/^getchar(void) {$/;"	f
vcprintf	kern/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
stradd	kern/libs/string.c	/^stradd(const char *src1, const char *src2) {$/;"	f
strdup	kern/libs/string.c	/^strdup(const char *src) {$/;"	f
basic_check	kern/mm/default_pmm.c	/^basic_check(void) {$/;"	f	file:
default_alloc_pages	kern/mm/default_pmm.c	/^default_alloc_pages(size_t n) {$/;"	f	file:
default_check	kern/mm/default_pmm.c	/^default_check(void) {$/;"	f	file:
default_free_pages	kern/mm/default_pmm.c	/^default_free_pages(struct Page *base, size_t n) {$/;"	f	file:
default_init	kern/mm/default_pmm.c	/^default_init(void) {$/;"	f	file:
default_init_memmap	kern/mm/default_pmm.c	/^default_init_memmap(struct Page *base, size_t n) {$/;"	f	file:
default_nr_free_pages	kern/mm/default_pmm.c	/^default_nr_free_pages(void) {$/;"	f	file:
default_pmm_manager	kern/mm/default_pmm.c	/^const struct pmm_manager default_pmm_manager = {$/;"	v	typeref:struct:pmm_manager
free_area	kern/mm/default_pmm.c	/^free_area_t free_area;$/;"	v
free_list	kern/mm/default_pmm.c	59;"	d	file:
nr_free	kern/mm/default_pmm.c	60;"	d	file:
__KERN_MM_DEFAULT_PMM_H__	kern/mm/default_pmm.h	2;"	d
ALIGN	kern/mm/kmalloc.c	55;"	d	file:
L1_CACHE_BYTES	kern/mm/kmalloc.c	51;"	d	file:
PAGE_SIZE	kern/mm/kmalloc.c	47;"	d	file:
SLOB_ALIGN	kern/mm/kmalloc.c	67;"	d	file:
SLOB_UNIT	kern/mm/kmalloc.c	65;"	d	file:
SLOB_UNITS	kern/mm/kmalloc.c	66;"	d	file:
__kmalloc	kern/mm/kmalloc.c	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	f	file:
__slob_free_pages	kern/mm/kmalloc.c	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	f	file:
__slob_get_free_page	kern/mm/kmalloc.c	89;"	d	file:
__slob_get_free_pages	kern/mm/kmalloc.c	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	f	file:
arena	kern/mm/kmalloc.c	/^static slob_t arena = { .next = &arena, .units = 1 };$/;"	v	file:
bigblock	kern/mm/kmalloc.c	/^struct bigblock {$/;"	s	file:
bigblock_t	kern/mm/kmalloc.c	/^typedef struct bigblock bigblock_t;$/;"	t	typeref:struct:bigblock	file:
bigblocks	kern/mm/kmalloc.c	/^static bigblock_t *bigblocks;$/;"	v	file:
check_slab	kern/mm/kmalloc.c	/^void check_slab(void) {$/;"	f
find_order	kern/mm/kmalloc.c	/^static int find_order(int size)$/;"	f	file:
gfp_t	kern/mm/kmalloc.c	/^typedef unsigned int gfp_t;$/;"	t	file:
kallocated	kern/mm/kmalloc.c	/^kallocated(void) {$/;"	f
kfree	kern/mm/kmalloc.c	/^void kfree(void *block)$/;"	f
kmalloc	kern/mm/kmalloc.c	/^kmalloc(size_t size)$/;"	f
kmalloc_init	kern/mm/kmalloc.c	/^kmalloc_init(void) {$/;"	f
ksize	kern/mm/kmalloc.c	/^unsigned int ksize(const void *block)$/;"	f
next	kern/mm/kmalloc.c	/^	struct bigblock *next;$/;"	m	struct:bigblock	typeref:struct:bigblock::bigblock	file:
next	kern/mm/kmalloc.c	/^	struct slob_block *next;$/;"	m	struct:slob_block	typeref:struct:slob_block::slob_block	file:
order	kern/mm/kmalloc.c	/^	int order;$/;"	m	struct:bigblock	file:
pages	kern/mm/kmalloc.c	/^	void *pages;$/;"	m	struct:bigblock	file:
slab_allocated	kern/mm/kmalloc.c	/^slab_allocated(void) {$/;"	f
slab_init	kern/mm/kmalloc.c	/^slab_init(void) {$/;"	f
slob_alloc	kern/mm/kmalloc.c	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	f	file:
slob_block	kern/mm/kmalloc.c	/^struct slob_block {$/;"	s	file:
slob_free	kern/mm/kmalloc.c	/^static void slob_free(void *block, int size)$/;"	f	file:
slob_t	kern/mm/kmalloc.c	/^typedef struct slob_block slob_t;$/;"	t	typeref:struct:slob_block	file:
slobfree	kern/mm/kmalloc.c	/^static slob_t *slobfree = &arena;$/;"	v	file:
spin_lock_irqsave	kern/mm/kmalloc.c	43;"	d	file:
spin_unlock_irqrestore	kern/mm/kmalloc.c	44;"	d	file:
units	kern/mm/kmalloc.c	/^	int units;$/;"	m	struct:slob_block	file:
KMALLOC_MAX_ORDER	kern/mm/kmalloc.h	6;"	d
__KERN_MM_SLAB_H__	kern/mm/kmalloc.h	2;"	d
ClearPageProperty	kern/mm/memlayout.h	147;"	d
ClearPageReserved	kern/mm/memlayout.h	144;"	d
DPL_KERNEL	kern/mm/memlayout.h	20;"	d
DPL_USER	kern/mm/memlayout.h	21;"	d
E820MAX	kern/mm/memlayout.h	111;"	d
E820_ARM	kern/mm/memlayout.h	112;"	d
E820_ARR	kern/mm/memlayout.h	113;"	d
GD_KDATA	kern/mm/memlayout.h	15;"	d
GD_KTEXT	kern/mm/memlayout.h	14;"	d
GD_TSS	kern/mm/memlayout.h	18;"	d
GD_UDATA	kern/mm/memlayout.h	17;"	d
GD_UTEXT	kern/mm/memlayout.h	16;"	d
KERNBASE	kern/mm/memlayout.h	70;"	d
KERNEL_CS	kern/mm/memlayout.h	23;"	d
KERNEL_DS	kern/mm/memlayout.h	24;"	d
KERNTOP	kern/mm/memlayout.h	72;"	d
KERN_ACCESS	kern/mm/memlayout.h	97;"	d
KMEMSIZE	kern/mm/memlayout.h	71;"	d
KSTACKPAGE	kern/mm/memlayout.h	82;"	d
KSTACKSIZE	kern/mm/memlayout.h	83;"	d
PG_property	kern/mm/memlayout.h	141;"	d
PG_reserved	kern/mm/memlayout.h	140;"	d
Page	kern/mm/memlayout.h	/^struct Page {$/;"	s
PageProperty	kern/mm/memlayout.h	148;"	d
PageReserved	kern/mm/memlayout.h	145;"	d
SEG_KDATA	kern/mm/memlayout.h	8;"	d
SEG_KTEXT	kern/mm/memlayout.h	7;"	d
SEG_TSS	kern/mm/memlayout.h	11;"	d
SEG_UDATA	kern/mm/memlayout.h	10;"	d
SEG_UTEXT	kern/mm/memlayout.h	9;"	d
SetPageProperty	kern/mm/memlayout.h	146;"	d
SetPageReserved	kern/mm/memlayout.h	143;"	d
USERBASE	kern/mm/memlayout.h	90;"	d
USERTOP	kern/mm/memlayout.h	85;"	d
USER_ACCESS	kern/mm/memlayout.h	94;"	d
USER_CS	kern/mm/memlayout.h	25;"	d
USER_DS	kern/mm/memlayout.h	26;"	d
USTAB	kern/mm/memlayout.h	92;"	d
USTACKPAGE	kern/mm/memlayout.h	87;"	d
USTACKSIZE	kern/mm/memlayout.h	88;"	d
USTACKTOP	kern/mm/memlayout.h	86;"	d
UTEXT	kern/mm/memlayout.h	91;"	d
VPT	kern/mm/memlayout.h	80;"	d
__KERN_MM_MEMLAYOUT_H__	kern/mm/memlayout.h	2;"	d
addr	kern/mm/memlayout.h	/^        uint64_t addr;$/;"	m	struct:e820map::__anon11
e820map	kern/mm/memlayout.h	/^struct e820map {$/;"	s
flags	kern/mm/memlayout.h	/^    uint32_t flags;                 \/\/ array of flags that describe the status of the page frame$/;"	m	struct:Page
free_area_t	kern/mm/memlayout.h	/^} free_area_t;$/;"	t	typeref:struct:__anon12
free_list	kern/mm/memlayout.h	/^    list_entry_t free_list;         \/\/ the list header$/;"	m	struct:__anon12
le2page	kern/mm/memlayout.h	151;"	d
map	kern/mm/memlayout.h	/^    } __attribute__((packed)) map[E820MAX];$/;"	m	struct:e820map	typeref:struct:e820map::__anon11
nr_free	kern/mm/memlayout.h	/^    unsigned int nr_free;           \/\/ # of free pages in this free list$/;"	m	struct:__anon12
nr_map	kern/mm/memlayout.h	/^    int nr_map;$/;"	m	struct:e820map
page_link	kern/mm/memlayout.h	/^    list_entry_t page_link;         \/\/ free list link$/;"	m	struct:Page
pde_t	kern/mm/memlayout.h	/^typedef uintptr_t pde_t;$/;"	t
pra_page_link	kern/mm/memlayout.h	/^    list_entry_t pra_page_link;     \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
pra_vaddr	kern/mm/memlayout.h	/^    uintptr_t pra_vaddr;            \/\/ used for pra (page replace algorithm)$/;"	m	struct:Page
property	kern/mm/memlayout.h	/^    unsigned int property;          \/\/ used in buddy system, stores the order (the X in 2^X) of the continuous memory block$/;"	m	struct:Page
pte_t	kern/mm/memlayout.h	/^typedef uintptr_t pte_t;$/;"	t
ref	kern/mm/memlayout.h	/^    int ref;                        \/\/ page frame's reference counter$/;"	m	struct:Page
size	kern/mm/memlayout.h	/^        uint64_t size;$/;"	m	struct:e820map::__anon11
swap_entry_t	kern/mm/memlayout.h	/^typedef pte_t swap_entry_t; \/\/the pte can also be a swap entry$/;"	t
type	kern/mm/memlayout.h	/^        uint32_t type;$/;"	m	struct:e820map::__anon11
zone_num	kern/mm/memlayout.h	/^    int zone_num;                   \/\/ used in buddy system, the No. of zone which the page belongs to$/;"	m	struct:Page
CR0_AM	kern/mm/mmu.h	258;"	d
CR0_CD	kern/mm/mmu.h	260;"	d
CR0_EM	kern/mm/mmu.h	253;"	d
CR0_ET	kern/mm/mmu.h	255;"	d
CR0_MP	kern/mm/mmu.h	252;"	d
CR0_NE	kern/mm/mmu.h	256;"	d
CR0_NW	kern/mm/mmu.h	259;"	d
CR0_PE	kern/mm/mmu.h	251;"	d
CR0_PG	kern/mm/mmu.h	261;"	d
CR0_TS	kern/mm/mmu.h	254;"	d
CR0_WP	kern/mm/mmu.h	257;"	d
CR4_DE	kern/mm/mmu.h	266;"	d
CR4_MCE	kern/mm/mmu.h	264;"	d
CR4_PCE	kern/mm/mmu.h	263;"	d
CR4_PSE	kern/mm/mmu.h	265;"	d
CR4_PVI	kern/mm/mmu.h	268;"	d
CR4_TSD	kern/mm/mmu.h	267;"	d
CR4_VME	kern/mm/mmu.h	269;"	d
FL_AC	kern/mm/mmu.h	22;"	d
FL_AF	kern/mm/mmu.h	7;"	d
FL_CF	kern/mm/mmu.h	5;"	d
FL_DF	kern/mm/mmu.h	12;"	d
FL_ID	kern/mm/mmu.h	25;"	d
FL_IF	kern/mm/mmu.h	11;"	d
FL_IOPL_0	kern/mm/mmu.h	15;"	d
FL_IOPL_1	kern/mm/mmu.h	16;"	d
FL_IOPL_2	kern/mm/mmu.h	17;"	d
FL_IOPL_3	kern/mm/mmu.h	18;"	d
FL_IOPL_MASK	kern/mm/mmu.h	14;"	d
FL_NT	kern/mm/mmu.h	19;"	d
FL_OF	kern/mm/mmu.h	13;"	d
FL_PF	kern/mm/mmu.h	6;"	d
FL_RF	kern/mm/mmu.h	20;"	d
FL_SF	kern/mm/mmu.h	9;"	d
FL_TF	kern/mm/mmu.h	10;"	d
FL_VIF	kern/mm/mmu.h	23;"	d
FL_VIP	kern/mm/mmu.h	24;"	d
FL_VM	kern/mm/mmu.h	21;"	d
FL_ZF	kern/mm/mmu.h	8;"	d
NPDEENTRY	kern/mm/mmu.h	223;"	d
NPTEENTRY	kern/mm/mmu.h	224;"	d
PDE_ADDR	kern/mm/mmu.h	220;"	d
PDX	kern/mm/mmu.h	204;"	d
PDXSHIFT	kern/mm/mmu.h	232;"	d
PGADDR	kern/mm/mmu.h	216;"	d
PGOFF	kern/mm/mmu.h	213;"	d
PGSHIFT	kern/mm/mmu.h	227;"	d
PGSIZE	kern/mm/mmu.h	226;"	d
PPN	kern/mm/mmu.h	210;"	d
PTE_A	kern/mm/mmu.h	240;"	d
PTE_ADDR	kern/mm/mmu.h	219;"	d
PTE_AVAIL	kern/mm/mmu.h	244;"	d
PTE_D	kern/mm/mmu.h	241;"	d
PTE_MBZ	kern/mm/mmu.h	243;"	d
PTE_P	kern/mm/mmu.h	235;"	d
PTE_PCD	kern/mm/mmu.h	239;"	d
PTE_PS	kern/mm/mmu.h	242;"	d
PTE_PWT	kern/mm/mmu.h	238;"	d
PTE_U	kern/mm/mmu.h	237;"	d
PTE_USER	kern/mm/mmu.h	248;"	d
PTE_W	kern/mm/mmu.h	236;"	d
PTSHIFT	kern/mm/mmu.h	229;"	d
PTSIZE	kern/mm/mmu.h	228;"	d
PTX	kern/mm/mmu.h	207;"	d
PTXSHIFT	kern/mm/mmu.h	231;"	d
SEG	kern/mm/mmu.h	131;"	d
SEGTSS	kern/mm/mmu.h	139;"	d
SEG_ASM	kern/mm/mmu.h	55;"	d
SEG_NULL	kern/mm/mmu.h	128;"	d
SEG_NULL	kern/mm/mmu.h	51;"	d
SETCALLGATE	kern/mm/mmu.h	99;"	d
SETGATE	kern/mm/mmu.h	86;"	d
STA_A	kern/mm/mmu.h	33;"	d
STA_C	kern/mm/mmu.h	30;"	d
STA_E	kern/mm/mmu.h	29;"	d
STA_R	kern/mm/mmu.h	32;"	d
STA_W	kern/mm/mmu.h	31;"	d
STA_X	kern/mm/mmu.h	28;"	d
STS_CG16	kern/mm/mmu.h	39;"	d
STS_CG32	kern/mm/mmu.h	45;"	d
STS_IG16	kern/mm/mmu.h	41;"	d
STS_IG32	kern/mm/mmu.h	46;"	d
STS_LDT	kern/mm/mmu.h	37;"	d
STS_T16A	kern/mm/mmu.h	36;"	d
STS_T16B	kern/mm/mmu.h	38;"	d
STS_T32A	kern/mm/mmu.h	43;"	d
STS_T32B	kern/mm/mmu.h	44;"	d
STS_TG	kern/mm/mmu.h	40;"	d
STS_TG16	kern/mm/mmu.h	42;"	d
STS_TG32	kern/mm/mmu.h	47;"	d
__KERN_MM_MMU_H__	kern/mm/mmu.h	2;"	d
gatedesc	kern/mm/mmu.h	/^struct gatedesc {$/;"	s
gd_args	kern/mm/mmu.h	/^    unsigned gd_args : 5;           \/\/ # args, 0 for interrupt\/trap gates$/;"	m	struct:gatedesc
gd_dpl	kern/mm/mmu.h	/^    unsigned gd_dpl : 2;            \/\/ descriptor(meaning new) privilege level$/;"	m	struct:gatedesc
gd_off_15_0	kern/mm/mmu.h	/^    unsigned gd_off_15_0 : 16;      \/\/ low 16 bits of offset in segment$/;"	m	struct:gatedesc
gd_off_31_16	kern/mm/mmu.h	/^    unsigned gd_off_31_16 : 16;     \/\/ high bits of offset in segment$/;"	m	struct:gatedesc
gd_p	kern/mm/mmu.h	/^    unsigned gd_p : 1;              \/\/ Present$/;"	m	struct:gatedesc
gd_rsv1	kern/mm/mmu.h	/^    unsigned gd_rsv1 : 3;           \/\/ reserved(should be zero I guess)$/;"	m	struct:gatedesc
gd_s	kern/mm/mmu.h	/^    unsigned gd_s : 1;              \/\/ must be 0 (system)$/;"	m	struct:gatedesc
gd_ss	kern/mm/mmu.h	/^    unsigned gd_ss : 16;            \/\/ segment selector$/;"	m	struct:gatedesc
gd_type	kern/mm/mmu.h	/^    unsigned gd_type : 4;           \/\/ type(STS_{TG,IG32,TG32})$/;"	m	struct:gatedesc
sd_avl	kern/mm/mmu.h	/^    unsigned sd_avl : 1;            \/\/ unused (available for software use)$/;"	m	struct:segdesc
sd_base_15_0	kern/mm/mmu.h	/^    unsigned sd_base_15_0 : 16;     \/\/ low bits of segment base address$/;"	m	struct:segdesc
sd_base_23_16	kern/mm/mmu.h	/^    unsigned sd_base_23_16 : 8;     \/\/ middle bits of segment base address$/;"	m	struct:segdesc
sd_base_31_24	kern/mm/mmu.h	/^    unsigned sd_base_31_24 : 8;     \/\/ high bits of segment base address$/;"	m	struct:segdesc
sd_db	kern/mm/mmu.h	/^    unsigned sd_db : 1;             \/\/ 0 = 16-bit segment, 1 = 32-bit segment$/;"	m	struct:segdesc
sd_dpl	kern/mm/mmu.h	/^    unsigned sd_dpl : 2;            \/\/ descriptor Privilege Level$/;"	m	struct:segdesc
sd_g	kern/mm/mmu.h	/^    unsigned sd_g : 1;              \/\/ granularity: limit scaled by 4K when set$/;"	m	struct:segdesc
sd_lim_15_0	kern/mm/mmu.h	/^    unsigned sd_lim_15_0 : 16;      \/\/ low bits of segment limit$/;"	m	struct:segdesc
sd_lim_19_16	kern/mm/mmu.h	/^    unsigned sd_lim_19_16 : 4;      \/\/ high bits of segment limit$/;"	m	struct:segdesc
sd_p	kern/mm/mmu.h	/^    unsigned sd_p : 1;              \/\/ present$/;"	m	struct:segdesc
sd_rsv1	kern/mm/mmu.h	/^    unsigned sd_rsv1 : 1;           \/\/ reserved$/;"	m	struct:segdesc
sd_s	kern/mm/mmu.h	/^    unsigned sd_s : 1;              \/\/ 0 = system, 1 = application$/;"	m	struct:segdesc
sd_type	kern/mm/mmu.h	/^    unsigned sd_type : 4;           \/\/ segment type (see STS_ constants)$/;"	m	struct:segdesc
segdesc	kern/mm/mmu.h	/^struct segdesc {$/;"	s
taskstate	kern/mm/mmu.h	/^struct taskstate {$/;"	s
ts_cr3	kern/mm/mmu.h	/^    uintptr_t ts_cr3;       \/\/ page directory base$/;"	m	struct:taskstate
ts_cs	kern/mm/mmu.h	/^    uint16_t ts_cs;$/;"	m	struct:taskstate
ts_ds	kern/mm/mmu.h	/^    uint16_t ts_ds;$/;"	m	struct:taskstate
ts_eax	kern/mm/mmu.h	/^    uint32_t ts_eax;        \/\/ more saved state (registers)$/;"	m	struct:taskstate
ts_ebp	kern/mm/mmu.h	/^    uintptr_t ts_ebp;$/;"	m	struct:taskstate
ts_ebx	kern/mm/mmu.h	/^    uint32_t ts_ebx;$/;"	m	struct:taskstate
ts_ecx	kern/mm/mmu.h	/^    uint32_t ts_ecx;$/;"	m	struct:taskstate
ts_edi	kern/mm/mmu.h	/^    uint32_t ts_edi;$/;"	m	struct:taskstate
ts_edx	kern/mm/mmu.h	/^    uint32_t ts_edx;$/;"	m	struct:taskstate
ts_eflags	kern/mm/mmu.h	/^    uint32_t ts_eflags;$/;"	m	struct:taskstate
ts_eip	kern/mm/mmu.h	/^    uintptr_t ts_eip;       \/\/ saved state from last task switch$/;"	m	struct:taskstate
ts_es	kern/mm/mmu.h	/^    uint16_t ts_es;         \/\/ even more saved state (segment selectors)$/;"	m	struct:taskstate
ts_esi	kern/mm/mmu.h	/^    uint32_t ts_esi;$/;"	m	struct:taskstate
ts_esp	kern/mm/mmu.h	/^    uintptr_t ts_esp;$/;"	m	struct:taskstate
ts_esp0	kern/mm/mmu.h	/^    uintptr_t ts_esp0;      \/\/ stack pointers and segment selectors$/;"	m	struct:taskstate
ts_esp1	kern/mm/mmu.h	/^    uintptr_t ts_esp1;$/;"	m	struct:taskstate
ts_esp2	kern/mm/mmu.h	/^    uintptr_t ts_esp2;$/;"	m	struct:taskstate
ts_fs	kern/mm/mmu.h	/^    uint16_t ts_fs;$/;"	m	struct:taskstate
ts_gs	kern/mm/mmu.h	/^    uint16_t ts_gs;$/;"	m	struct:taskstate
ts_iomb	kern/mm/mmu.h	/^    uint16_t ts_iomb;       \/\/ i\/o map base address$/;"	m	struct:taskstate
ts_ldt	kern/mm/mmu.h	/^    uint16_t ts_ldt;$/;"	m	struct:taskstate
ts_link	kern/mm/mmu.h	/^    uint32_t ts_link;       \/\/ old ts selector$/;"	m	struct:taskstate
ts_padding1	kern/mm/mmu.h	/^    uint16_t ts_padding1;$/;"	m	struct:taskstate
ts_padding10	kern/mm/mmu.h	/^    uint16_t ts_padding10;$/;"	m	struct:taskstate
ts_padding2	kern/mm/mmu.h	/^    uint16_t ts_padding2;$/;"	m	struct:taskstate
ts_padding3	kern/mm/mmu.h	/^    uint16_t ts_padding3;$/;"	m	struct:taskstate
ts_padding4	kern/mm/mmu.h	/^    uint16_t ts_padding4;$/;"	m	struct:taskstate
ts_padding5	kern/mm/mmu.h	/^    uint16_t ts_padding5;$/;"	m	struct:taskstate
ts_padding6	kern/mm/mmu.h	/^    uint16_t ts_padding6;$/;"	m	struct:taskstate
ts_padding7	kern/mm/mmu.h	/^    uint16_t ts_padding7;$/;"	m	struct:taskstate
ts_padding8	kern/mm/mmu.h	/^    uint16_t ts_padding8;$/;"	m	struct:taskstate
ts_padding9	kern/mm/mmu.h	/^    uint16_t ts_padding9;$/;"	m	struct:taskstate
ts_ss	kern/mm/mmu.h	/^    uint16_t ts_ss;$/;"	m	struct:taskstate
ts_ss0	kern/mm/mmu.h	/^    uint16_t ts_ss0;        \/\/ after an increase in privilege level$/;"	m	struct:taskstate
ts_ss1	kern/mm/mmu.h	/^    uint16_t ts_ss1;$/;"	m	struct:taskstate
ts_ss2	kern/mm/mmu.h	/^    uint16_t ts_ss2;$/;"	m	struct:taskstate
ts_t	kern/mm/mmu.h	/^    uint16_t ts_t;          \/\/ trap on task switch$/;"	m	struct:taskstate
alloc_pages	kern/mm/pmm.c	/^alloc_pages(size_t n) {$/;"	f
boot_alloc_page	kern/mm/pmm.c	/^boot_alloc_page(void) {$/;"	f	file:
boot_cr3	kern/mm/pmm.c	/^uintptr_t boot_cr3;$/;"	v
boot_map_segment	kern/mm/pmm.c	/^boot_map_segment(pde_t *pgdir, uintptr_t la, size_t size, uintptr_t pa, uint32_t perm) {$/;"	f	file:
boot_pgdir	kern/mm/pmm.c	/^pde_t *boot_pgdir = NULL;$/;"	v
check_alloc_page	kern/mm/pmm.c	/^check_alloc_page(void) {$/;"	f	file:
check_boot_pgdir	kern/mm/pmm.c	/^check_boot_pgdir(void) {$/;"	f	file:
check_pgdir	kern/mm/pmm.c	/^check_pgdir(void) {$/;"	f	file:
copy_range	kern/mm/pmm.c	/^copy_range(pde_t *to, pde_t *from, uintptr_t start, uintptr_t end, bool share) {$/;"	f
enable_paging	kern/mm/pmm.c	/^enable_paging(void) {$/;"	f	file:
exit_range	kern/mm/pmm.c	/^exit_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
free_pages	kern/mm/pmm.c	/^free_pages(struct Page *base, size_t n) {$/;"	f
gdt	kern/mm/pmm.c	/^static struct segdesc gdt[] = {$/;"	v	typeref:struct:segdesc	file:
gdt_init	kern/mm/pmm.c	/^gdt_init(void) {$/;"	f	file:
gdt_pd	kern/mm/pmm.c	/^static struct pseudodesc gdt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
get_page	kern/mm/pmm.c	/^get_page(pde_t *pgdir, uintptr_t la, pte_t **ptep_store) {$/;"	f
get_pgtable_items	kern/mm/pmm.c	/^get_pgtable_items(size_t left, size_t right, size_t start, uintptr_t *table, size_t *left_store, size_t *right_store) {$/;"	f	file:
get_pte	kern/mm/pmm.c	/^get_pte(pde_t *pgdir, uintptr_t la, bool create) {$/;"	f
init_memmap	kern/mm/pmm.c	/^init_memmap(struct Page *base, size_t n) {$/;"	f	file:
init_pmm_manager	kern/mm/pmm.c	/^init_pmm_manager(void) {$/;"	f	file:
lgdt	kern/mm/pmm.c	/^lgdt(struct pseudodesc *pd) {$/;"	f	file:
load_esp0	kern/mm/pmm.c	/^load_esp0(uintptr_t esp0) {$/;"	f
npage	kern/mm/pmm.c	/^size_t npage = 0;$/;"	v
nr_free_pages	kern/mm/pmm.c	/^nr_free_pages(void) {$/;"	f
page_init	kern/mm/pmm.c	/^page_init(void) {$/;"	f	file:
page_insert	kern/mm/pmm.c	/^page_insert(pde_t *pgdir, struct Page *page, uintptr_t la, uint32_t perm) {$/;"	f
page_remove	kern/mm/pmm.c	/^page_remove(pde_t *pgdir, uintptr_t la) {$/;"	f
page_remove_pte	kern/mm/pmm.c	/^page_remove_pte(pde_t *pgdir, uintptr_t la, pte_t *ptep) {$/;"	f	file:
pages	kern/mm/pmm.c	/^struct Page *pages;$/;"	v	typeref:struct:Page
perm2str	kern/mm/pmm.c	/^perm2str(int perm) {$/;"	f	file:
pgdir_alloc_page	kern/mm/pmm.c	/^pgdir_alloc_page(pde_t *pgdir, uintptr_t la, uint32_t perm) {$/;"	f
pmm_init	kern/mm/pmm.c	/^pmm_init(void) {$/;"	f
pmm_manager	kern/mm/pmm.c	/^const struct pmm_manager *pmm_manager;$/;"	v	typeref:struct:pmm_manager
print_pgdir	kern/mm/pmm.c	/^print_pgdir(void) {$/;"	f
tlb_invalidate	kern/mm/pmm.c	/^tlb_invalidate(pde_t *pgdir, uintptr_t la) {$/;"	f
ts	kern/mm/pmm.c	/^static struct taskstate ts = {0};$/;"	v	typeref:struct:taskstate	file:
unmap_range	kern/mm/pmm.c	/^unmap_range(pde_t *pgdir, uintptr_t start, uintptr_t end) {$/;"	f
vpd	kern/mm/pmm.c	/^pde_t * const vpd = (pde_t *)PGADDR(PDX(VPT), PDX(VPT), 0);$/;"	v
vpt	kern/mm/pmm.c	/^pte_t * const vpt = (pte_t *)VPT;$/;"	v
KADDR	kern/mm/pmm.h	69;"	d
PADDR	kern/mm/pmm.h	57;"	d
__KERN_MM_PMM_H__	kern/mm/pmm.h	2;"	d
alloc_page	kern/mm/pmm.h	35;"	d
alloc_pages	kern/mm/pmm.h	/^    struct Page *(*alloc_pages)(size_t n);            \/\/ allocate >=n pages, depend on the allocation algorithm $/;"	m	struct:pmm_manager	typeref:struct:pmm_manager::alloc_pages
check	kern/mm/pmm.h	/^    void (*check)(void);                              \/\/ check the correctness of XXX_pmm_manager $/;"	m	struct:pmm_manager
free_page	kern/mm/pmm.h	36;"	d
free_pages	kern/mm/pmm.h	/^    void (*free_pages)(struct Page *base, size_t n);  \/\/ free >=n pages with "base" addr of Page descriptor structures(memlayout.h)$/;"	m	struct:pmm_manager
init	kern/mm/pmm.h	/^    void (*init)(void);                               \/\/ initialize internal description&management data structure$/;"	m	struct:pmm_manager
init_memmap	kern/mm/pmm.h	/^    void (*init_memmap)(struct Page *base, size_t n); \/\/ setup description&management data structcure according to$/;"	m	struct:pmm_manager
kva2page	kern/mm/pmm.h	/^kva2page(void *kva) {$/;"	f
name	kern/mm/pmm.h	/^    const char *name;                                 \/\/ XXX_pmm_manager's name$/;"	m	struct:pmm_manager
nr_free_pages	kern/mm/pmm.h	/^    size_t (*nr_free_pages)(void);                    \/\/ return the number of free pages $/;"	m	struct:pmm_manager
pa2page	kern/mm/pmm.h	/^pa2page(uintptr_t pa) {$/;"	f
page2kva	kern/mm/pmm.h	/^page2kva(struct Page *page) {$/;"	f
page2pa	kern/mm/pmm.h	/^page2pa(struct Page *page) {$/;"	f
page2ppn	kern/mm/pmm.h	/^page2ppn(struct Page *page) {$/;"	f
page_ref	kern/mm/pmm.h	/^page_ref(struct Page *page) {$/;"	f
page_ref_dec	kern/mm/pmm.h	/^page_ref_dec(struct Page *page) {$/;"	f
page_ref_inc	kern/mm/pmm.h	/^page_ref_inc(struct Page *page) {$/;"	f
pde2page	kern/mm/pmm.h	/^pde2page(pde_t pde) {$/;"	f
pmm_manager	kern/mm/pmm.h	/^struct pmm_manager {$/;"	s
pte2page	kern/mm/pmm.h	/^pte2page(pte_t pte) {$/;"	f
set_page_ref	kern/mm/pmm.h	/^set_page_ref(struct Page *page, int val) {$/;"	f
BEING_CHECK_VALID_VADDR	kern/mm/swap.c	14;"	d	file:
CHECK_VALID_PHY_PAGE_NUM	kern/mm/swap.c	17;"	d	file:
CHECK_VALID_VADDR	kern/mm/swap.c	15;"	d	file:
CHECK_VALID_VIR_PAGE_NUM	kern/mm/swap.c	13;"	d	file:
MAX_SEQ_NO	kern/mm/swap.c	19;"	d	file:
check_content_access	kern/mm/swap.c	/^check_content_access(void)$/;"	f	file:
check_content_set	kern/mm/swap.c	/^check_content_set(void)$/;"	f	file:
check_ptep	kern/mm/swap.c	/^pte_t * check_ptep[CHECK_VALID_PHY_PAGE_NUM];$/;"	v
check_rp	kern/mm/swap.c	/^struct Page * check_rp[CHECK_VALID_PHY_PAGE_NUM];$/;"	v	typeref:struct:Page
check_swap	kern/mm/swap.c	/^check_swap(void)$/;"	f	file:
check_swap_addr	kern/mm/swap.c	/^unsigned int check_swap_addr[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
free_list	kern/mm/swap.c	176;"	d	file:
max_swap_offset	kern/mm/swap.c	/^size_t max_swap_offset;$/;"	v
nr_free	kern/mm/swap.c	177;"	d	file:
sm	kern/mm/swap.c	/^static struct swap_manager *sm;$/;"	v	typeref:struct:swap_manager	file:
swap_in	kern/mm/swap.c	/^swap_in(struct mm_struct *mm, uintptr_t addr, struct Page **ptr_result)$/;"	f
swap_in_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_init	kern/mm/swap.c	/^swap_init(void)$/;"	f
swap_init_mm	kern/mm/swap.c	/^swap_init_mm(struct mm_struct *mm)$/;"	f
swap_init_ok	kern/mm/swap.c	/^volatile int swap_init_ok = 0;$/;"	v
swap_map_swappable	kern/mm/swap.c	/^swap_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f
swap_out	kern/mm/swap.c	/^swap_out(struct mm_struct *mm, int n, int in_tick)$/;"	f
swap_out_num	kern/mm/swap.c	/^volatile unsigned int swap_out_num=0;$/;"	v
swap_out_seq_no	kern/mm/swap.c	/^unsigned int swap_in_seq_no[MAX_SEQ_NO],swap_out_seq_no[MAX_SEQ_NO];$/;"	v
swap_page	kern/mm/swap.c	/^unsigned int swap_page[CHECK_VALID_VIR_PAGE_NUM];$/;"	v
swap_set_unswappable	kern/mm/swap.c	/^swap_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f
swap_tick_event	kern/mm/swap.c	/^swap_tick_event(struct mm_struct *mm)$/;"	f
MAX_SWAP_OFFSET_LIMIT	kern/mm/swap.h	17;"	d
__KERN_MM_SWAP_H__	kern/mm/swap.h	2;"	d
check_swap	kern/mm/swap.h	/^     int (*check_swap)(void);     $/;"	m	struct:swap_manager
init	kern/mm/swap.h	/^     int (*init)            (void);$/;"	m	struct:swap_manager
init_mm	kern/mm/swap.h	/^     int (*init_mm)         (struct mm_struct *mm);$/;"	m	struct:swap_manager
map_swappable	kern/mm/swap.h	/^     int (*map_swappable)   (struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in);$/;"	m	struct:swap_manager
name	kern/mm/swap.h	/^     const char *name;$/;"	m	struct:swap_manager
set_unswappable	kern/mm/swap.h	/^     int (*set_unswappable) (struct mm_struct *mm, uintptr_t addr);$/;"	m	struct:swap_manager
swap_manager	kern/mm/swap.h	/^struct swap_manager$/;"	s
swap_offset	kern/mm/swap.h	25;"	d
swap_out_victim	kern/mm/swap.h	/^     int (*swap_out_victim) (struct mm_struct *mm, struct Page **ptr_page, int in_tick);$/;"	m	struct:swap_manager
tick_event	kern/mm/swap.h	/^     int (*tick_event)      (struct mm_struct *mm);$/;"	m	struct:swap_manager
_fifo_check_swap	kern/mm/swap_fifo.c	/^_fifo_check_swap(void) {$/;"	f	file:
_fifo_init	kern/mm/swap_fifo.c	/^_fifo_init(void)$/;"	f	file:
_fifo_init_mm	kern/mm/swap_fifo.c	/^_fifo_init_mm(struct mm_struct *mm)$/;"	f	file:
_fifo_map_swappable	kern/mm/swap_fifo.c	/^_fifo_map_swappable(struct mm_struct *mm, uintptr_t addr, struct Page *page, int swap_in)$/;"	f	file:
_fifo_set_unswappable	kern/mm/swap_fifo.c	/^_fifo_set_unswappable(struct mm_struct *mm, uintptr_t addr)$/;"	f	file:
_fifo_swap_out_victim	kern/mm/swap_fifo.c	/^_fifo_swap_out_victim(struct mm_struct *mm, struct Page ** ptr_page, int in_tick)$/;"	f	file:
_fifo_tick_event	kern/mm/swap_fifo.c	/^_fifo_tick_event(struct mm_struct *mm)$/;"	f	file:
pra_list_head	kern/mm/swap_fifo.c	/^list_entry_t pra_list_head;$/;"	v
swap_manager_fifo	kern/mm/swap_fifo.c	/^struct swap_manager swap_manager_fifo =$/;"	v	typeref:struct:swap_manager
__KERN_MM_SWAP_FIFO_H__	kern/mm/swap_fifo.h	2;"	d
check_mm_struct	kern/mm/vmm.c	/^struct mm_struct *check_mm_struct;$/;"	v	typeref:struct:mm_struct
check_pgfault	kern/mm/vmm.c	/^check_pgfault(void) {$/;"	f	file:
check_vma_overlap	kern/mm/vmm.c	/^check_vma_overlap(struct vma_struct *prev, struct vma_struct *next) {$/;"	f	file:
check_vma_struct	kern/mm/vmm.c	/^check_vma_struct(void) {$/;"	f	file:
check_vmm	kern/mm/vmm.c	/^check_vmm(void) {$/;"	f	file:
copy_from_user	kern/mm/vmm.c	/^copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable) {$/;"	f
copy_string	kern/mm/vmm.c	/^copy_string(struct mm_struct *mm, char *dst, const char *src, size_t maxn) {$/;"	f
copy_to_user	kern/mm/vmm.c	/^copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len) {$/;"	f
do_pgfault	kern/mm/vmm.c	/^do_pgfault(struct mm_struct *mm, uint32_t error_code, uintptr_t addr) {$/;"	f
dup_mmap	kern/mm/vmm.c	/^dup_mmap(struct mm_struct *to, struct mm_struct *from) {$/;"	f
exit_mmap	kern/mm/vmm.c	/^exit_mmap(struct mm_struct *mm) {$/;"	f
find_vma	kern/mm/vmm.c	/^find_vma(struct mm_struct *mm, uintptr_t addr) {$/;"	f
insert_vma_struct	kern/mm/vmm.c	/^insert_vma_struct(struct mm_struct *mm, struct vma_struct *vma) {$/;"	f
mm_create	kern/mm/vmm.c	/^mm_create(void) {$/;"	f
mm_destroy	kern/mm/vmm.c	/^mm_destroy(struct mm_struct *mm) {$/;"	f
mm_map	kern/mm/vmm.c	/^mm_map(struct mm_struct *mm, uintptr_t addr, size_t len, uint32_t vm_flags,$/;"	f
pgfault_num	kern/mm/vmm.c	/^volatile unsigned int pgfault_num=0;$/;"	v
user_mem_check	kern/mm/vmm.c	/^user_mem_check(struct mm_struct *mm, uintptr_t addr, size_t len, bool write) {$/;"	f
vma_create	kern/mm/vmm.c	/^vma_create(uintptr_t vm_start, uintptr_t vm_end, uint32_t vm_flags) {$/;"	f
vmm_init	kern/mm/vmm.c	/^vmm_init(void) {$/;"	f
VM_EXEC	kern/mm/vmm.h	28;"	d
VM_READ	kern/mm/vmm.h	26;"	d
VM_STACK	kern/mm/vmm.h	29;"	d
VM_WRITE	kern/mm/vmm.h	27;"	d
__KERN_MM_VMM_H__	kern/mm/vmm.h	2;"	d
le2vma	kern/mm/vmm.h	23;"	d
list_link	kern/mm/vmm.h	/^    list_entry_t list_link;  \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:vma_struct
lock_mm	kern/mm/vmm.h	/^lock_mm(struct mm_struct *mm) {$/;"	f
locked_by	kern/mm/vmm.h	/^    int locked_by;                 \/\/ the lock owner process's pid$/;"	m	struct:mm_struct
map_count	kern/mm/vmm.h	/^    int map_count;                 \/\/ the count of these vma$/;"	m	struct:mm_struct
mm_count	kern/mm/vmm.h	/^    int mm_count;                  \/\/ the number ofprocess which shared the mm$/;"	m	struct:mm_struct
mm_count	kern/mm/vmm.h	/^mm_count(struct mm_struct *mm) {$/;"	f
mm_count_dec	kern/mm/vmm.h	/^mm_count_dec(struct mm_struct *mm) {$/;"	f
mm_count_inc	kern/mm/vmm.h	/^mm_count_inc(struct mm_struct *mm) {$/;"	f
mm_sem	kern/mm/vmm.h	/^    semaphore_t mm_sem;            \/\/ mutex for using dup_mmap fun to duplicat the mm $/;"	m	struct:mm_struct
mm_struct	kern/mm/vmm.h	/^struct mm_struct {$/;"	s
mmap_cache	kern/mm/vmm.h	/^    struct vma_struct *mmap_cache; \/\/ current accessed vma, used for speed purpose$/;"	m	struct:mm_struct	typeref:struct:mm_struct::vma_struct
mmap_list	kern/mm/vmm.h	/^    list_entry_t mmap_list;        \/\/ linear list link which sorted by start addr of vma$/;"	m	struct:mm_struct
pgdir	kern/mm/vmm.h	/^    pde_t *pgdir;                  \/\/ the PDT of these vma$/;"	m	struct:mm_struct
set_mm_count	kern/mm/vmm.h	/^set_mm_count(struct mm_struct *mm, int val) {$/;"	f
sm_priv	kern/mm/vmm.h	/^    void *sm_priv;                 \/\/ the private data for swap manager$/;"	m	struct:mm_struct
unlock_mm	kern/mm/vmm.h	/^unlock_mm(struct mm_struct *mm) {$/;"	f
vm_end	kern/mm/vmm.h	/^    uintptr_t vm_end;        \/\/ end addr of vma$/;"	m	struct:vma_struct
vm_flags	kern/mm/vmm.h	/^    uint32_t vm_flags;       \/\/ flags of vma$/;"	m	struct:vma_struct
vm_mm	kern/mm/vmm.h	/^    struct mm_struct *vm_mm; \/\/ the set of vma using the same PDT $/;"	m	struct:vma_struct	typeref:struct:vma_struct::mm_struct
vm_start	kern/mm/vmm.h	/^    uintptr_t vm_start;      \/\/    start addr of vma    $/;"	m	struct:vma_struct
vma_struct	kern/mm/vmm.h	/^struct vma_struct {$/;"	s
kernel_thread_entry	kern/process/entry.S	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
HASH_LIST_SIZE	kern/process/proc.c	69;"	d	file:
HASH_SHIFT	kern/process/proc.c	68;"	d	file:
KERNEL_EXECVE	kern/process/proc.c	977;"	d	file:
KERNEL_EXECVE2	kern/process/proc.c	979;"	d	file:
KERNEL_EXECVE3	kern/process/proc.c	983;"	d	file:
__KERNEL_EXECVE	kern/process/proc.c	970;"	d	file:
__KERNEL_EXECVE3	kern/process/proc.c	981;"	d	file:
alloc_proc	kern/process/proc.c	/^alloc_proc(void) {$/;"	f	file:
copy_fs	kern/process/proc.c	/^copy_fs(uint32_t clone_flags, struct proc_struct *proc) {$/;"	f	file:
copy_kargv	kern/process/proc.c	/^copy_kargv(struct mm_struct *mm, int argc, char **kargv, const char **argv) {$/;"	f	file:
copy_mm	kern/process/proc.c	/^copy_mm(uint32_t clone_flags, struct proc_struct *proc) {$/;"	f	file:
copy_thread	kern/process/proc.c	/^copy_thread(struct proc_struct *proc, uintptr_t esp, struct trapframe *tf) {$/;"	f	file:
cpu_idle	kern/process/proc.c	/^cpu_idle(void) {$/;"	f
current	kern/process/proc.c	/^struct proc_struct *current = NULL;$/;"	v	typeref:struct:proc_struct
do_execve	kern/process/proc.c	/^do_execve(const char *name, int argc, const char **argv) {$/;"	f
do_exit	kern/process/proc.c	/^do_exit(int error_code) {$/;"	f
do_fork	kern/process/proc.c	/^do_fork(uint32_t clone_flags, uintptr_t stack, struct trapframe *tf) {$/;"	f
do_kill	kern/process/proc.c	/^do_kill(int pid) {$/;"	f
do_sleep	kern/process/proc.c	/^do_sleep(unsigned int time) {$/;"	f
do_wait	kern/process/proc.c	/^do_wait(int pid, int *code_store) {$/;"	f
do_yield	kern/process/proc.c	/^do_yield(void) {$/;"	f
find_proc	kern/process/proc.c	/^find_proc(int pid) {$/;"	f
forkret	kern/process/proc.c	/^forkret(void) {$/;"	f	file:
get_pid	kern/process/proc.c	/^get_pid(void) {$/;"	f	file:
get_proc_name	kern/process/proc.c	/^get_proc_name(struct proc_struct *proc) {$/;"	f
hash_list	kern/process/proc.c	/^static list_entry_t hash_list[HASH_LIST_SIZE];$/;"	v	file:
hash_proc	kern/process/proc.c	/^hash_proc(struct proc_struct *proc) {$/;"	f	file:
idleproc	kern/process/proc.c	/^struct proc_struct *idleproc = NULL;$/;"	v	typeref:struct:proc_struct
init_main	kern/process/proc.c	/^init_main(void *arg) {$/;"	f	file:
initproc	kern/process/proc.c	/^struct proc_struct *initproc = NULL;$/;"	v	typeref:struct:proc_struct
kernel_execve	kern/process/proc.c	/^kernel_execve(const char *name, const char **argv) {$/;"	f	file:
kernel_thread	kern/process/proc.c	/^kernel_thread(int (*fn)(void *), void *arg, uint32_t clone_flags) {$/;"	f
lab6_set_priority	kern/process/proc.c	/^lab6_set_priority(uint32_t priority)$/;"	f
load_icode	kern/process/proc.c	/^load_icode(int fd, int argc, char **kargv) {$/;"	f	file:
load_icode_read	kern/process/proc.c	/^load_icode_read(int fd, void *buf, size_t len, off_t offset) {$/;"	f	file:
nr_process	kern/process/proc.c	/^static int nr_process = 0;$/;"	v	file:
pid_hashfn	kern/process/proc.c	70;"	d	file:
proc_init	kern/process/proc.c	/^proc_init(void) {$/;"	f
proc_list	kern/process/proc.c	/^list_entry_t proc_list;$/;"	v
proc_run	kern/process/proc.c	/^proc_run(struct proc_struct *proc) {$/;"	f
put_fs	kern/process/proc.c	/^put_fs(struct proc_struct *proc) {$/;"	f	file:
put_kargv	kern/process/proc.c	/^put_kargv(int argc, char **kargv) {$/;"	f	file:
put_kstack	kern/process/proc.c	/^put_kstack(struct proc_struct *proc) {$/;"	f	file:
put_pgdir	kern/process/proc.c	/^put_pgdir(struct mm_struct *mm) {$/;"	f	file:
remove_links	kern/process/proc.c	/^remove_links(struct proc_struct *proc) {$/;"	f	file:
set_links	kern/process/proc.c	/^set_links(struct proc_struct *proc) {$/;"	f	file:
set_proc_name	kern/process/proc.c	/^set_proc_name(struct proc_struct *proc, const char *name) {$/;"	f
setup_kstack	kern/process/proc.c	/^setup_kstack(struct proc_struct *proc) {$/;"	f	file:
setup_pgdir	kern/process/proc.c	/^setup_pgdir(struct mm_struct *mm) {$/;"	f	file:
unhash_proc	kern/process/proc.c	/^unhash_proc(struct proc_struct *proc) {$/;"	f	file:
user_main	kern/process/proc.c	/^user_main(void *arg) {$/;"	f	file:
MAX_PID	kern/process/proc.h	39;"	d
MAX_PROCESS	kern/process/proc.h	38;"	d
PF_EXITING	kern/process/proc.h	73;"	d
PROC_NAME_LEN	kern/process/proc.h	37;"	d
PROC_RUNNABLE	kern/process/proc.h	/^    PROC_RUNNABLE,    \/\/ runnable(maybe running)$/;"	e	enum:proc_state
PROC_SLEEPING	kern/process/proc.h	/^    PROC_SLEEPING,    \/\/ sleeping$/;"	e	enum:proc_state
PROC_UNINIT	kern/process/proc.h	/^    PROC_UNINIT = 0,  \/\/ uninitialized$/;"	e	enum:proc_state
PROC_ZOMBIE	kern/process/proc.h	/^    PROC_ZOMBIE,      \/\/ almost dead, and wait parent proc to reclaim his resource$/;"	e	enum:proc_state
WT_CHILD	kern/process/proc.h	76;"	d
WT_INTERRUPTED	kern/process/proc.h	75;"	d
WT_KBD	kern/process/proc.h	79;"	d
WT_KSEM	kern/process/proc.h	77;"	d
WT_TIMER	kern/process/proc.h	78;"	d
__KERN_PROCESS_PROC_H__	kern/process/proc.h	2;"	d
context	kern/process/proc.h	/^    struct context context;                     \/\/ Switch here to run process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::context
context	kern/process/proc.h	/^struct context {$/;"	s
cptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
cr3	kern/process/proc.h	/^    uintptr_t cr3;                              \/\/ CR3 register: the base addr of Page Directroy Table(PDT)$/;"	m	struct:proc_struct
ebp	kern/process/proc.h	/^    uint32_t ebp;$/;"	m	struct:context
ebx	kern/process/proc.h	/^    uint32_t ebx;$/;"	m	struct:context
ecx	kern/process/proc.h	/^    uint32_t ecx;$/;"	m	struct:context
edi	kern/process/proc.h	/^    uint32_t edi;$/;"	m	struct:context
edx	kern/process/proc.h	/^    uint32_t edx;$/;"	m	struct:context
eip	kern/process/proc.h	/^    uint32_t eip;$/;"	m	struct:context
esi	kern/process/proc.h	/^    uint32_t esi;$/;"	m	struct:context
esp	kern/process/proc.h	/^    uint32_t esp;$/;"	m	struct:context
exit_code	kern/process/proc.h	/^    int exit_code;                              \/\/ exit code (be sent to parent proc)$/;"	m	struct:proc_struct
filesp	kern/process/proc.h	/^    struct files_struct *filesp;                \/\/ the file related info(pwd, files_count, files_array, fs_semaphore) of process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::files_struct
flags	kern/process/proc.h	/^    uint32_t flags;                             \/\/ Process flag$/;"	m	struct:proc_struct
hash_link	kern/process/proc.h	/^    list_entry_t hash_link;                     \/\/ Process hash list$/;"	m	struct:proc_struct
kstack	kern/process/proc.h	/^    uintptr_t kstack;                           \/\/ Process kernel stack$/;"	m	struct:proc_struct
lab6_priority	kern/process/proc.h	/^    uint32_t lab6_priority;                     \/\/ FOR LAB6 ONLY: the priority of process, set by lab6_set_priority(uint32_t)$/;"	m	struct:proc_struct
lab6_run_pool	kern/process/proc.h	/^    skew_heap_entry_t lab6_run_pool;            \/\/ FOR LAB6 ONLY: the entry in the run pool$/;"	m	struct:proc_struct
lab6_stride	kern/process/proc.h	/^    uint32_t lab6_stride;                       \/\/ FOR LAB6 ONLY: the current stride of the process $/;"	m	struct:proc_struct
le2proc	kern/process/proc.h	81;"	d
list_link	kern/process/proc.h	/^    list_entry_t list_link;                     \/\/ Process link list $/;"	m	struct:proc_struct
mm	kern/process/proc.h	/^    struct mm_struct *mm;                       \/\/ Process's memory management field$/;"	m	struct:proc_struct	typeref:struct:proc_struct::mm_struct
name	kern/process/proc.h	/^    char name[PROC_NAME_LEN + 1];               \/\/ Process name$/;"	m	struct:proc_struct
need_resched	kern/process/proc.h	/^    volatile bool need_resched;                 \/\/ bool value: need to be rescheduled to release CPU?$/;"	m	struct:proc_struct
optr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
parent	kern/process/proc.h	/^    struct proc_struct *parent;                 \/\/ the parent process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::proc_struct
pid	kern/process/proc.h	/^    int pid;                                    \/\/ Process ID$/;"	m	struct:proc_struct
proc_state	kern/process/proc.h	/^enum proc_state {$/;"	g
proc_struct	kern/process/proc.h	/^struct proc_struct {$/;"	s
rq	kern/process/proc.h	/^    struct run_queue *rq;                       \/\/ running queue contains Process$/;"	m	struct:proc_struct	typeref:struct:proc_struct::run_queue
run_link	kern/process/proc.h	/^    list_entry_t run_link;                      \/\/ the entry linked in run queue$/;"	m	struct:proc_struct
runs	kern/process/proc.h	/^    int runs;                                   \/\/ the running times of Proces$/;"	m	struct:proc_struct
state	kern/process/proc.h	/^    enum proc_state state;                      \/\/ Process state$/;"	m	struct:proc_struct	typeref:enum:proc_struct::proc_state
tf	kern/process/proc.h	/^    struct trapframe *tf;                       \/\/ Trap frame for current interrupt$/;"	m	struct:proc_struct	typeref:struct:proc_struct::trapframe
time_slice	kern/process/proc.h	/^    int time_slice;                             \/\/ time slice for occupying the CPU$/;"	m	struct:proc_struct
wait_state	kern/process/proc.h	/^    uint32_t wait_state;                        \/\/ waiting state$/;"	m	struct:proc_struct
yptr	kern/process/proc.h	/^    struct proc_struct *cptr, *yptr, *optr;     \/\/ relations between processes$/;"	m	struct:proc_struct	typeref:struct:proc_struct::
switch_to	kern/process/switch.S	/^switch_to:                      # switch_to(from, to)$/;"	l
BIG_STRIDE	kern/schedule/default_sched.c	11;"	d	file:
USE_SKEW_HEAP	kern/schedule/default_sched.c	7;"	d	file:
default_sched_class	kern/schedule/default_sched.c	/^struct sched_class default_sched_class = {$/;"	v	typeref:struct:sched_class
proc_stride_comp_f	kern/schedule/default_sched.c	/^proc_stride_comp_f(void *a, void *b)$/;"	f	file:
stride_dequeue	kern/schedule/default_sched.c	/^stride_dequeue(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
stride_enqueue	kern/schedule/default_sched.c	/^stride_enqueue(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
stride_init	kern/schedule/default_sched.c	/^stride_init(struct run_queue *rq) {$/;"	f	file:
stride_pick_next	kern/schedule/default_sched.c	/^stride_pick_next(struct run_queue *rq) {$/;"	f	file:
stride_proc_tick	kern/schedule/default_sched.c	/^stride_proc_tick(struct run_queue *rq, struct proc_struct *proc) {$/;"	f	file:
__KERN_SCHEDULE_SCHED_RR_H__	kern/schedule/default_sched.h	2;"	d
__rq	kern/schedule/sched.c	/^static struct run_queue __rq;$/;"	v	typeref:struct:run_queue	file:
add_timer	kern/schedule/sched.c	/^add_timer(timer_t *timer) {$/;"	f
del_timer	kern/schedule/sched.c	/^del_timer(timer_t *timer) {$/;"	f
rq	kern/schedule/sched.c	/^static struct run_queue *rq;$/;"	v	typeref:struct:run_queue	file:
run_timer_list	kern/schedule/sched.c	/^run_timer_list(void) {$/;"	f
sched_class	kern/schedule/sched.c	/^static struct sched_class *sched_class;$/;"	v	typeref:struct:sched_class	file:
sched_class_dequeue	kern/schedule/sched.c	/^sched_class_dequeue(struct proc_struct *proc) {$/;"	f	file:
sched_class_enqueue	kern/schedule/sched.c	/^sched_class_enqueue(struct proc_struct *proc) {$/;"	f	file:
sched_class_pick_next	kern/schedule/sched.c	/^sched_class_pick_next(void) {$/;"	f	file:
sched_class_proc_tick	kern/schedule/sched.c	/^sched_class_proc_tick(struct proc_struct *proc) {$/;"	f	file:
sched_init	kern/schedule/sched.c	/^sched_init(void) {$/;"	f
schedule	kern/schedule/sched.c	/^schedule(void) {$/;"	f
timer_list	kern/schedule/sched.c	/^static list_entry_t timer_list;$/;"	v	file:
wakeup_proc	kern/schedule/sched.c	/^wakeup_proc(struct proc_struct *proc) {$/;"	f
__KERN_SCHEDULE_SCHED_H__	kern/schedule/sched.h	2;"	d
dequeue	kern/schedule/sched.h	/^    void (*dequeue)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
enqueue	kern/schedule/sched.h	/^    void (*enqueue)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
expires	kern/schedule/sched.h	/^    unsigned int expires;$/;"	m	struct:__anon10
init	kern/schedule/sched.h	/^    void (*init)(struct run_queue *rq);$/;"	m	struct:sched_class
lab6_run_pool	kern/schedule/sched.h	/^    skew_heap_entry_t *lab6_run_pool;$/;"	m	struct:run_queue
le2timer	kern/schedule/sched.h	16;"	d
max_time_slice	kern/schedule/sched.h	/^    int max_time_slice;$/;"	m	struct:run_queue
name	kern/schedule/sched.h	/^    const char *name;$/;"	m	struct:sched_class
pick_next	kern/schedule/sched.h	/^    struct proc_struct *(*pick_next)(struct run_queue *rq);$/;"	m	struct:sched_class	typeref:struct:sched_class::pick_next
proc	kern/schedule/sched.h	/^    struct proc_struct *proc;$/;"	m	struct:__anon10	typeref:struct:__anon10::proc_struct
proc_num	kern/schedule/sched.h	/^    unsigned int proc_num;$/;"	m	struct:run_queue
proc_tick	kern/schedule/sched.h	/^    void (*proc_tick)(struct run_queue *rq, struct proc_struct *proc);$/;"	m	struct:sched_class
run_list	kern/schedule/sched.h	/^    list_entry_t run_list;$/;"	m	struct:run_queue
run_queue	kern/schedule/sched.h	/^struct run_queue {$/;"	s
sched_class	kern/schedule/sched.h	/^struct sched_class {$/;"	s
timer_init	kern/schedule/sched.h	/^timer_init(timer_t *timer, struct proc_struct *proc, int expires) {$/;"	f
timer_link	kern/schedule/sched.h	/^    list_entry_t timer_link;$/;"	m	struct:__anon10
timer_t	kern/schedule/sched.h	/^} timer_t;$/;"	t	typeref:struct:__anon10
EATING	kern/sync/check_sync.c	12;"	d	file:
HUNGRY	kern/sync/check_sync.c	11;"	d	file:
LEFT	kern/sync/check_sync.c	8;"	d	file:
N	kern/sync/check_sync.c	7;"	d	file:
RIGHT	kern/sync/check_sync.c	9;"	d	file:
SLEEP_TIME	kern/sync/check_sync.c	14;"	d	file:
THINKING	kern/sync/check_sync.c	10;"	d	file:
TIMES	kern/sync/check_sync.c	13;"	d	file:
check_sync	kern/sync/check_sync.c	/^void check_sync(void){$/;"	f
mt	kern/sync/check_sync.c	/^monitor_t mt, *mtp=&mt;                                    \/\/ mp is mutex semaphore for monitor's procedures$/;"	v
mtp	kern/sync/check_sync.c	/^monitor_t mt, *mtp=&mt;                                    \/\/ mp is mutex semaphore for monitor's procedures$/;"	v
mutex	kern/sync/check_sync.c	/^semaphore_t mutex; \/* 临界区互斥 *\/$/;"	v
phi_put_forks_condvar	kern/sync/check_sync.c	/^void phi_put_forks_condvar(int i) {$/;"	f
phi_put_forks_sema	kern/sync/check_sync.c	/^void phi_put_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	f
phi_take_forks_condvar	kern/sync/check_sync.c	/^void phi_take_forks_condvar(int i) {$/;"	f
phi_take_forks_sema	kern/sync/check_sync.c	/^void phi_take_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	f
phi_test_condvar	kern/sync/check_sync.c	/^void phi_test_condvar (i) { $/;"	f
phi_test_sema	kern/sync/check_sync.c	/^void phi_test_sema(i) \/* i：哲学家号码从0到N-1 *\/$/;"	f
philosopher_proc_condvar	kern/sync/check_sync.c	/^struct proc_struct *philosopher_proc_condvar[N]; \/\/ N philosopher$/;"	v	typeref:struct:proc_struct
philosopher_proc_sema	kern/sync/check_sync.c	/^struct proc_struct *philosopher_proc_sema[N];$/;"	v	typeref:struct:proc_struct
philosopher_using_condvar	kern/sync/check_sync.c	/^int philosopher_using_condvar(void * arg) { \/* arg is the No. of philosopher 0~N-1*\/$/;"	f
philosopher_using_semaphore	kern/sync/check_sync.c	/^int philosopher_using_semaphore(void * arg) \/* i：哲学家号码，从0到N-1 *\/$/;"	f
s	kern/sync/check_sync.c	/^semaphore_t s[N]; \/* 每个哲学家一个信号量 *\/$/;"	v
state_condvar	kern/sync/check_sync.c	/^int state_condvar[N];                            \/\/ the philosopher's state: EATING, HUNGARY, THINKING  $/;"	v
state_sema	kern/sync/check_sync.c	/^int state_sema[N]; \/* 记录每个人状态的数组 *\/$/;"	v
cond_signal	kern/sync/monitor.c	/^cond_signal (condvar_t *cvp) {$/;"	f
cond_wait	kern/sync/monitor.c	/^cond_wait (condvar_t *cvp) {$/;"	f
monitor_init	kern/sync/monitor.c	/^monitor_init (monitor_t * mtp, size_t num_cv) {$/;"	f
__KERN_SYNC_MOINTOR_CONDVAR_H__	kern/sync/monitor.h	2;"	d
condvar	kern/sync/monitor.h	/^typedef struct condvar{$/;"	s
condvar_t	kern/sync/monitor.h	/^} condvar_t;$/;"	t	typeref:struct:condvar
count	kern/sync/monitor.h	/^    int count;              \/\/ the number of waiters on condvar$/;"	m	struct:condvar
cv	kern/sync/monitor.h	/^    condvar_t *cv;          \/\/ the condvars in monitor$/;"	m	struct:monitor
monitor	kern/sync/monitor.h	/^typedef struct monitor{$/;"	s
monitor_t	kern/sync/monitor.h	/^typedef struct monitor monitor_t;$/;"	t	typeref:struct:monitor
monitor_t	kern/sync/monitor.h	/^} monitor_t;$/;"	t	typeref:struct:monitor
mutex	kern/sync/monitor.h	/^    semaphore_t mutex;      \/\/ the mutex lock for going into the routines in monitor, should be initialized to 1$/;"	m	struct:monitor
next	kern/sync/monitor.h	/^    semaphore_t next;       \/\/ the next semaphore is used to down the signaling proc itself, and the other OR wakeuped waiting proc should wake up the sleeped signaling proc.$/;"	m	struct:monitor
next_count	kern/sync/monitor.h	/^    int next_count;         \/\/ the number of of sleeped signaling proc$/;"	m	struct:monitor
owner	kern/sync/monitor.h	/^    monitor_t * owner;      \/\/ the owner(monitor) of this condvar$/;"	m	struct:condvar
sem	kern/sync/monitor.h	/^    semaphore_t sem;        \/\/ the sem semaphore  is used to down the waiting proc, and the signaling proc should up the waiting proc$/;"	m	struct:condvar
__down	kern/sync/sem.c	/^static __noinline uint32_t __down(semaphore_t *sem, uint32_t wait_state) {$/;"	f	file:
__up	kern/sync/sem.c	/^static __noinline void __up(semaphore_t *sem, uint32_t wait_state) {$/;"	f	file:
down	kern/sync/sem.c	/^down(semaphore_t *sem) {$/;"	f
sem_init	kern/sync/sem.c	/^sem_init(semaphore_t *sem, int value) {$/;"	f
try_down	kern/sync/sem.c	/^try_down(semaphore_t *sem) {$/;"	f
up	kern/sync/sem.c	/^up(semaphore_t *sem) {$/;"	f
__KERN_SYNC_SEM_H__	kern/sync/sem.h	2;"	d
semaphore_t	kern/sync/sem.h	/^} semaphore_t;$/;"	t	typeref:struct:__anon3
value	kern/sync/sem.h	/^    int value;$/;"	m	struct:__anon3
wait_queue	kern/sync/sem.h	/^    wait_queue_t wait_queue;$/;"	m	struct:__anon3
__KERN_SYNC_SYNC_H__	kern/sync/sync.h	2;"	d
__intr_restore	kern/sync/sync.h	/^__intr_restore(bool flag) {$/;"	f
__intr_save	kern/sync/sync.h	/^__intr_save(void) {$/;"	f
local_intr_restore	kern/sync/sync.h	28;"	d
local_intr_save	kern/sync/sync.h	27;"	d
wait_current_set	kern/sync/wait.c	/^wait_current_set(wait_queue_t *queue, wait_t *wait, uint32_t wait_state) {$/;"	f
wait_in_queue	kern/sync/wait.c	/^wait_in_queue(wait_t *wait) {$/;"	f
wait_init	kern/sync/wait.c	/^wait_init(wait_t *wait, struct proc_struct *proc) {$/;"	f
wait_queue_add	kern/sync/wait.c	/^wait_queue_add(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_del	kern/sync/wait.c	/^wait_queue_del(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_empty	kern/sync/wait.c	/^wait_queue_empty(wait_queue_t *queue) {$/;"	f
wait_queue_first	kern/sync/wait.c	/^wait_queue_first(wait_queue_t *queue) {$/;"	f
wait_queue_init	kern/sync/wait.c	/^wait_queue_init(wait_queue_t *queue) {$/;"	f
wait_queue_last	kern/sync/wait.c	/^wait_queue_last(wait_queue_t *queue) {$/;"	f
wait_queue_next	kern/sync/wait.c	/^wait_queue_next(wait_queue_t *queue, wait_t *wait) {$/;"	f
wait_queue_prev	kern/sync/wait.c	/^wait_queue_prev(wait_queue_t *queue, wait_t *wait) {$/;"	f
wakeup_first	kern/sync/wait.c	/^wakeup_first(wait_queue_t *queue, uint32_t wakeup_flags, bool del) {$/;"	f
wakeup_queue	kern/sync/wait.c	/^wakeup_queue(wait_queue_t *queue, uint32_t wakeup_flags, bool del) {$/;"	f
wakeup_wait	kern/sync/wait.c	/^wakeup_wait(wait_queue_t *queue, wait_t *wait, uint32_t wakeup_flags, bool del) {$/;"	f
__KERN_SYNC_WAIT_H__	kern/sync/wait.h	2;"	d
le2wait	kern/sync/wait.h	19;"	d
proc	kern/sync/wait.h	/^    struct proc_struct *proc;$/;"	m	struct:__anon2	typeref:struct:__anon2::proc_struct
wait_current_del	kern/sync/wait.h	40;"	d
wait_head	kern/sync/wait.h	/^    list_entry_t wait_head;$/;"	m	struct:__anon1
wait_link	kern/sync/wait.h	/^    list_entry_t wait_link;$/;"	m	struct:__anon2
wait_queue	kern/sync/wait.h	/^    wait_queue_t *wait_queue;$/;"	m	struct:__anon2
wait_queue_t	kern/sync/wait.h	/^} wait_queue_t;$/;"	t	typeref:struct:__anon1
wait_t	kern/sync/wait.h	/^} wait_t;$/;"	t	typeref:struct:__anon2
wakeup_flags	kern/sync/wait.h	/^    uint32_t wakeup_flags;$/;"	m	struct:__anon2
NUM_SYSCALLS	kern/syscall/syscall.c	185;"	d	file:
sys_close	kern/syscall/syscall.c	/^sys_close(uint32_t arg[]) {$/;"	f	file:
sys_dup	kern/syscall/syscall.c	/^sys_dup(uint32_t arg[]) {$/;"	f	file:
sys_exec	kern/syscall/syscall.c	/^sys_exec(uint32_t arg[]) {$/;"	f	file:
sys_exit	kern/syscall/syscall.c	/^sys_exit(uint32_t arg[]) {$/;"	f	file:
sys_fork	kern/syscall/syscall.c	/^sys_fork(uint32_t arg[]) {$/;"	f	file:
sys_fstat	kern/syscall/syscall.c	/^sys_fstat(uint32_t arg[]) {$/;"	f	file:
sys_fsync	kern/syscall/syscall.c	/^sys_fsync(uint32_t arg[]) {$/;"	f	file:
sys_getcwd	kern/syscall/syscall.c	/^sys_getcwd(uint32_t arg[]) {$/;"	f	file:
sys_getdirentry	kern/syscall/syscall.c	/^sys_getdirentry(uint32_t arg[]) {$/;"	f	file:
sys_getpid	kern/syscall/syscall.c	/^sys_getpid(uint32_t arg[]) {$/;"	f	file:
sys_gettime	kern/syscall/syscall.c	/^sys_gettime(uint32_t arg[]) {$/;"	f	file:
sys_kill	kern/syscall/syscall.c	/^sys_kill(uint32_t arg[]) {$/;"	f	file:
sys_lab6_set_priority	kern/syscall/syscall.c	/^sys_lab6_set_priority(uint32_t arg[])$/;"	f	file:
sys_open	kern/syscall/syscall.c	/^sys_open(uint32_t arg[]) {$/;"	f	file:
sys_pgdir	kern/syscall/syscall.c	/^sys_pgdir(uint32_t arg[]) {$/;"	f	file:
sys_putc	kern/syscall/syscall.c	/^sys_putc(uint32_t arg[]) {$/;"	f	file:
sys_read	kern/syscall/syscall.c	/^sys_read(uint32_t arg[]) {$/;"	f	file:
sys_seek	kern/syscall/syscall.c	/^sys_seek(uint32_t arg[]) {$/;"	f	file:
sys_sleep	kern/syscall/syscall.c	/^sys_sleep(uint32_t arg[]) {$/;"	f	file:
sys_wait	kern/syscall/syscall.c	/^sys_wait(uint32_t arg[]) {$/;"	f	file:
sys_write	kern/syscall/syscall.c	/^sys_write(uint32_t arg[]) {$/;"	f	file:
sys_yield	kern/syscall/syscall.c	/^sys_yield(uint32_t arg[]) {$/;"	f	file:
syscall	kern/syscall/syscall.c	/^syscall(void) {$/;"	f
syscalls	kern/syscall/syscall.c	/^static int (*syscalls[])(uint32_t arg[]) = {$/;"	v	file:
__KERN_SYSCALL_SYSCALL_H__	kern/syscall/syscall.h	2;"	d
IA32flags	kern/trap/trap.c	/^static const char *IA32flags[] = {$/;"	v	file:
TICK_NUM	kern/trap/trap.c	20;"	d	file:
idt	kern/trap/trap.c	/^static struct gatedesc idt[256] = {{0}};$/;"	v	typeref:struct:gatedesc	file:
idt_init	kern/trap/trap.c	/^idt_init(void) {$/;"	f
idt_pd	kern/trap/trap.c	/^static struct pseudodesc idt_pd = {$/;"	v	typeref:struct:pseudodesc	file:
in_swap_tick_event	kern/trap/trap.c	/^static volatile int in_swap_tick_event = 0;$/;"	v	file:
pgfault_handler	kern/trap/trap.c	/^pgfault_handler(struct trapframe *tf) {$/;"	f	file:
print_pgfault	kern/trap/trap.c	/^print_pgfault(struct trapframe *tf) {$/;"	f	file:
print_regs	kern/trap/trap.c	/^print_regs(struct pushregs *regs) {$/;"	f
print_ticks	kern/trap/trap.c	/^static void print_ticks() {$/;"	f	file:
print_trapframe	kern/trap/trap.c	/^print_trapframe(struct trapframe *tf) {$/;"	f
trap	kern/trap/trap.c	/^trap(struct trapframe *tf) {$/;"	f
trap_dispatch	kern/trap/trap.c	/^trap_dispatch(struct trapframe *tf) {$/;"	f	file:
trap_in_kernel	kern/trap/trap.c	/^trap_in_kernel(struct trapframe *tf) {$/;"	f
trapname	kern/trap/trap.c	/^trapname(int trapno) {$/;"	f	file:
IRQ_COM1	kern/trap/trap.h	35;"	d
IRQ_ERROR	kern/trap/trap.h	38;"	d
IRQ_IDE1	kern/trap/trap.h	36;"	d
IRQ_IDE2	kern/trap/trap.h	37;"	d
IRQ_KBD	kern/trap/trap.h	34;"	d
IRQ_OFFSET	kern/trap/trap.h	31;"	d
IRQ_SPURIOUS	kern/trap/trap.h	39;"	d
IRQ_TIMER	kern/trap/trap.h	33;"	d
T_ALIGN	kern/trap/trap.h	26;"	d
T_BOUND	kern/trap/trap.h	14;"	d
T_BRKPT	kern/trap/trap.h	12;"	d
T_DBLFLT	kern/trap/trap.h	17;"	d
T_DEBUG	kern/trap/trap.h	10;"	d
T_DEVICE	kern/trap/trap.h	16;"	d
T_DIVIDE	kern/trap/trap.h	9;"	d
T_FPERR	kern/trap/trap.h	25;"	d
T_GPFLT	kern/trap/trap.h	22;"	d
T_ILLOP	kern/trap/trap.h	15;"	d
T_MCHK	kern/trap/trap.h	27;"	d
T_NMI	kern/trap/trap.h	11;"	d
T_OFLOW	kern/trap/trap.h	13;"	d
T_PGFLT	kern/trap/trap.h	23;"	d
T_SEGNP	kern/trap/trap.h	20;"	d
T_SIMDERR	kern/trap/trap.h	28;"	d
T_STACK	kern/trap/trap.h	21;"	d
T_SWITCH_TOK	kern/trap/trap.h	46;"	d
T_SWITCH_TOU	kern/trap/trap.h	45;"	d
T_TSS	kern/trap/trap.h	19;"	d
__KERN_TRAP_TRAP_H__	kern/trap/trap.h	2;"	d
pushregs	kern/trap/trap.h	/^struct pushregs {$/;"	s
reg_eax	kern/trap/trap.h	/^    uint32_t reg_eax;$/;"	m	struct:pushregs
reg_ebp	kern/trap/trap.h	/^    uint32_t reg_ebp;$/;"	m	struct:pushregs
reg_ebx	kern/trap/trap.h	/^    uint32_t reg_ebx;$/;"	m	struct:pushregs
reg_ecx	kern/trap/trap.h	/^    uint32_t reg_ecx;$/;"	m	struct:pushregs
reg_edi	kern/trap/trap.h	/^    uint32_t reg_edi;$/;"	m	struct:pushregs
reg_edx	kern/trap/trap.h	/^    uint32_t reg_edx;$/;"	m	struct:pushregs
reg_esi	kern/trap/trap.h	/^    uint32_t reg_esi;$/;"	m	struct:pushregs
reg_oesp	kern/trap/trap.h	/^    uint32_t reg_oesp;          \/* Useless *\/$/;"	m	struct:pushregs
tf_cs	kern/trap/trap.h	/^    uint16_t tf_cs;$/;"	m	struct:trapframe
tf_ds	kern/trap/trap.h	/^    uint16_t tf_ds;$/;"	m	struct:trapframe
tf_eflags	kern/trap/trap.h	/^    uint32_t tf_eflags;$/;"	m	struct:trapframe
tf_eip	kern/trap/trap.h	/^    uintptr_t tf_eip;$/;"	m	struct:trapframe
tf_err	kern/trap/trap.h	/^    uint32_t tf_err;$/;"	m	struct:trapframe
tf_es	kern/trap/trap.h	/^    uint16_t tf_es;$/;"	m	struct:trapframe
tf_esp	kern/trap/trap.h	/^    uintptr_t tf_esp;$/;"	m	struct:trapframe
tf_fs	kern/trap/trap.h	/^    uint16_t tf_fs;$/;"	m	struct:trapframe
tf_gs	kern/trap/trap.h	/^    uint16_t tf_gs;$/;"	m	struct:trapframe
tf_padding0	kern/trap/trap.h	/^    uint16_t tf_padding0;$/;"	m	struct:trapframe
tf_padding1	kern/trap/trap.h	/^    uint16_t tf_padding1;$/;"	m	struct:trapframe
tf_padding2	kern/trap/trap.h	/^    uint16_t tf_padding2;$/;"	m	struct:trapframe
tf_padding3	kern/trap/trap.h	/^    uint16_t tf_padding3;$/;"	m	struct:trapframe
tf_padding4	kern/trap/trap.h	/^    uint16_t tf_padding4;$/;"	m	struct:trapframe
tf_padding5	kern/trap/trap.h	/^    uint16_t tf_padding5;$/;"	m	struct:trapframe
tf_regs	kern/trap/trap.h	/^    struct pushregs tf_regs;$/;"	m	struct:trapframe	typeref:struct:trapframe::pushregs
tf_ss	kern/trap/trap.h	/^    uint16_t tf_ss;$/;"	m	struct:trapframe
tf_trapno	kern/trap/trap.h	/^    uint32_t tf_trapno;$/;"	m	struct:trapframe
trapframe	kern/trap/trap.h	/^struct trapframe {$/;"	s
__alltraps	kern/trap/trapentry.S	/^__alltraps:$/;"	l
__trapret	kern/trap/trapentry.S	/^__trapret:$/;"	l
forkrets	kern/trap/trapentry.S	/^forkrets:$/;"	l
__vectors	kern/trap/vectors.S	/^__vectors:$/;"	l
vector0	kern/trap/vectors.S	/^vector0:$/;"	l
vector1	kern/trap/vectors.S	/^vector1:$/;"	l
vector10	kern/trap/vectors.S	/^vector10:$/;"	l
vector100	kern/trap/vectors.S	/^vector100:$/;"	l
vector101	kern/trap/vectors.S	/^vector101:$/;"	l
vector102	kern/trap/vectors.S	/^vector102:$/;"	l
vector103	kern/trap/vectors.S	/^vector103:$/;"	l
vector104	kern/trap/vectors.S	/^vector104:$/;"	l
vector105	kern/trap/vectors.S	/^vector105:$/;"	l
vector106	kern/trap/vectors.S	/^vector106:$/;"	l
vector107	kern/trap/vectors.S	/^vector107:$/;"	l
vector108	kern/trap/vectors.S	/^vector108:$/;"	l
vector109	kern/trap/vectors.S	/^vector109:$/;"	l
vector11	kern/trap/vectors.S	/^vector11:$/;"	l
vector110	kern/trap/vectors.S	/^vector110:$/;"	l
vector111	kern/trap/vectors.S	/^vector111:$/;"	l
vector112	kern/trap/vectors.S	/^vector112:$/;"	l
vector113	kern/trap/vectors.S	/^vector113:$/;"	l
vector114	kern/trap/vectors.S	/^vector114:$/;"	l
vector115	kern/trap/vectors.S	/^vector115:$/;"	l
vector116	kern/trap/vectors.S	/^vector116:$/;"	l
vector117	kern/trap/vectors.S	/^vector117:$/;"	l
vector118	kern/trap/vectors.S	/^vector118:$/;"	l
vector119	kern/trap/vectors.S	/^vector119:$/;"	l
vector12	kern/trap/vectors.S	/^vector12:$/;"	l
vector120	kern/trap/vectors.S	/^vector120:$/;"	l
vector121	kern/trap/vectors.S	/^vector121:$/;"	l
vector122	kern/trap/vectors.S	/^vector122:$/;"	l
vector123	kern/trap/vectors.S	/^vector123:$/;"	l
vector124	kern/trap/vectors.S	/^vector124:$/;"	l
vector125	kern/trap/vectors.S	/^vector125:$/;"	l
vector126	kern/trap/vectors.S	/^vector126:$/;"	l
vector127	kern/trap/vectors.S	/^vector127:$/;"	l
vector128	kern/trap/vectors.S	/^vector128:$/;"	l
vector129	kern/trap/vectors.S	/^vector129:$/;"	l
vector13	kern/trap/vectors.S	/^vector13:$/;"	l
vector130	kern/trap/vectors.S	/^vector130:$/;"	l
vector131	kern/trap/vectors.S	/^vector131:$/;"	l
vector132	kern/trap/vectors.S	/^vector132:$/;"	l
vector133	kern/trap/vectors.S	/^vector133:$/;"	l
vector134	kern/trap/vectors.S	/^vector134:$/;"	l
vector135	kern/trap/vectors.S	/^vector135:$/;"	l
vector136	kern/trap/vectors.S	/^vector136:$/;"	l
vector137	kern/trap/vectors.S	/^vector137:$/;"	l
vector138	kern/trap/vectors.S	/^vector138:$/;"	l
vector139	kern/trap/vectors.S	/^vector139:$/;"	l
vector14	kern/trap/vectors.S	/^vector14:$/;"	l
vector140	kern/trap/vectors.S	/^vector140:$/;"	l
vector141	kern/trap/vectors.S	/^vector141:$/;"	l
vector142	kern/trap/vectors.S	/^vector142:$/;"	l
vector143	kern/trap/vectors.S	/^vector143:$/;"	l
vector144	kern/trap/vectors.S	/^vector144:$/;"	l
vector145	kern/trap/vectors.S	/^vector145:$/;"	l
vector146	kern/trap/vectors.S	/^vector146:$/;"	l
vector147	kern/trap/vectors.S	/^vector147:$/;"	l
vector148	kern/trap/vectors.S	/^vector148:$/;"	l
vector149	kern/trap/vectors.S	/^vector149:$/;"	l
vector15	kern/trap/vectors.S	/^vector15:$/;"	l
vector150	kern/trap/vectors.S	/^vector150:$/;"	l
vector151	kern/trap/vectors.S	/^vector151:$/;"	l
vector152	kern/trap/vectors.S	/^vector152:$/;"	l
vector153	kern/trap/vectors.S	/^vector153:$/;"	l
vector154	kern/trap/vectors.S	/^vector154:$/;"	l
vector155	kern/trap/vectors.S	/^vector155:$/;"	l
vector156	kern/trap/vectors.S	/^vector156:$/;"	l
vector157	kern/trap/vectors.S	/^vector157:$/;"	l
vector158	kern/trap/vectors.S	/^vector158:$/;"	l
vector159	kern/trap/vectors.S	/^vector159:$/;"	l
vector16	kern/trap/vectors.S	/^vector16:$/;"	l
vector160	kern/trap/vectors.S	/^vector160:$/;"	l
vector161	kern/trap/vectors.S	/^vector161:$/;"	l
vector162	kern/trap/vectors.S	/^vector162:$/;"	l
vector163	kern/trap/vectors.S	/^vector163:$/;"	l
vector164	kern/trap/vectors.S	/^vector164:$/;"	l
vector165	kern/trap/vectors.S	/^vector165:$/;"	l
vector166	kern/trap/vectors.S	/^vector166:$/;"	l
vector167	kern/trap/vectors.S	/^vector167:$/;"	l
vector168	kern/trap/vectors.S	/^vector168:$/;"	l
vector169	kern/trap/vectors.S	/^vector169:$/;"	l
vector17	kern/trap/vectors.S	/^vector17:$/;"	l
vector170	kern/trap/vectors.S	/^vector170:$/;"	l
vector171	kern/trap/vectors.S	/^vector171:$/;"	l
vector172	kern/trap/vectors.S	/^vector172:$/;"	l
vector173	kern/trap/vectors.S	/^vector173:$/;"	l
vector174	kern/trap/vectors.S	/^vector174:$/;"	l
vector175	kern/trap/vectors.S	/^vector175:$/;"	l
vector176	kern/trap/vectors.S	/^vector176:$/;"	l
vector177	kern/trap/vectors.S	/^vector177:$/;"	l
vector178	kern/trap/vectors.S	/^vector178:$/;"	l
vector179	kern/trap/vectors.S	/^vector179:$/;"	l
vector18	kern/trap/vectors.S	/^vector18:$/;"	l
vector180	kern/trap/vectors.S	/^vector180:$/;"	l
vector181	kern/trap/vectors.S	/^vector181:$/;"	l
vector182	kern/trap/vectors.S	/^vector182:$/;"	l
vector183	kern/trap/vectors.S	/^vector183:$/;"	l
vector184	kern/trap/vectors.S	/^vector184:$/;"	l
vector185	kern/trap/vectors.S	/^vector185:$/;"	l
vector186	kern/trap/vectors.S	/^vector186:$/;"	l
vector187	kern/trap/vectors.S	/^vector187:$/;"	l
vector188	kern/trap/vectors.S	/^vector188:$/;"	l
vector189	kern/trap/vectors.S	/^vector189:$/;"	l
vector19	kern/trap/vectors.S	/^vector19:$/;"	l
vector190	kern/trap/vectors.S	/^vector190:$/;"	l
vector191	kern/trap/vectors.S	/^vector191:$/;"	l
vector192	kern/trap/vectors.S	/^vector192:$/;"	l
vector193	kern/trap/vectors.S	/^vector193:$/;"	l
vector194	kern/trap/vectors.S	/^vector194:$/;"	l
vector195	kern/trap/vectors.S	/^vector195:$/;"	l
vector196	kern/trap/vectors.S	/^vector196:$/;"	l
vector197	kern/trap/vectors.S	/^vector197:$/;"	l
vector198	kern/trap/vectors.S	/^vector198:$/;"	l
vector199	kern/trap/vectors.S	/^vector199:$/;"	l
vector2	kern/trap/vectors.S	/^vector2:$/;"	l
vector20	kern/trap/vectors.S	/^vector20:$/;"	l
vector200	kern/trap/vectors.S	/^vector200:$/;"	l
vector201	kern/trap/vectors.S	/^vector201:$/;"	l
vector202	kern/trap/vectors.S	/^vector202:$/;"	l
vector203	kern/trap/vectors.S	/^vector203:$/;"	l
vector204	kern/trap/vectors.S	/^vector204:$/;"	l
vector205	kern/trap/vectors.S	/^vector205:$/;"	l
vector206	kern/trap/vectors.S	/^vector206:$/;"	l
vector207	kern/trap/vectors.S	/^vector207:$/;"	l
vector208	kern/trap/vectors.S	/^vector208:$/;"	l
vector209	kern/trap/vectors.S	/^vector209:$/;"	l
vector21	kern/trap/vectors.S	/^vector21:$/;"	l
vector210	kern/trap/vectors.S	/^vector210:$/;"	l
vector211	kern/trap/vectors.S	/^vector211:$/;"	l
vector212	kern/trap/vectors.S	/^vector212:$/;"	l
vector213	kern/trap/vectors.S	/^vector213:$/;"	l
vector214	kern/trap/vectors.S	/^vector214:$/;"	l
vector215	kern/trap/vectors.S	/^vector215:$/;"	l
vector216	kern/trap/vectors.S	/^vector216:$/;"	l
vector217	kern/trap/vectors.S	/^vector217:$/;"	l
vector218	kern/trap/vectors.S	/^vector218:$/;"	l
vector219	kern/trap/vectors.S	/^vector219:$/;"	l
vector22	kern/trap/vectors.S	/^vector22:$/;"	l
vector220	kern/trap/vectors.S	/^vector220:$/;"	l
vector221	kern/trap/vectors.S	/^vector221:$/;"	l
vector222	kern/trap/vectors.S	/^vector222:$/;"	l
vector223	kern/trap/vectors.S	/^vector223:$/;"	l
vector224	kern/trap/vectors.S	/^vector224:$/;"	l
vector225	kern/trap/vectors.S	/^vector225:$/;"	l
vector226	kern/trap/vectors.S	/^vector226:$/;"	l
vector227	kern/trap/vectors.S	/^vector227:$/;"	l
vector228	kern/trap/vectors.S	/^vector228:$/;"	l
vector229	kern/trap/vectors.S	/^vector229:$/;"	l
vector23	kern/trap/vectors.S	/^vector23:$/;"	l
vector230	kern/trap/vectors.S	/^vector230:$/;"	l
vector231	kern/trap/vectors.S	/^vector231:$/;"	l
vector232	kern/trap/vectors.S	/^vector232:$/;"	l
vector233	kern/trap/vectors.S	/^vector233:$/;"	l
vector234	kern/trap/vectors.S	/^vector234:$/;"	l
vector235	kern/trap/vectors.S	/^vector235:$/;"	l
vector236	kern/trap/vectors.S	/^vector236:$/;"	l
vector237	kern/trap/vectors.S	/^vector237:$/;"	l
vector238	kern/trap/vectors.S	/^vector238:$/;"	l
vector239	kern/trap/vectors.S	/^vector239:$/;"	l
vector24	kern/trap/vectors.S	/^vector24:$/;"	l
vector240	kern/trap/vectors.S	/^vector240:$/;"	l
vector241	kern/trap/vectors.S	/^vector241:$/;"	l
vector242	kern/trap/vectors.S	/^vector242:$/;"	l
vector243	kern/trap/vectors.S	/^vector243:$/;"	l
vector244	kern/trap/vectors.S	/^vector244:$/;"	l
vector245	kern/trap/vectors.S	/^vector245:$/;"	l
vector246	kern/trap/vectors.S	/^vector246:$/;"	l
vector247	kern/trap/vectors.S	/^vector247:$/;"	l
vector248	kern/trap/vectors.S	/^vector248:$/;"	l
vector249	kern/trap/vectors.S	/^vector249:$/;"	l
vector25	kern/trap/vectors.S	/^vector25:$/;"	l
vector250	kern/trap/vectors.S	/^vector250:$/;"	l
vector251	kern/trap/vectors.S	/^vector251:$/;"	l
vector252	kern/trap/vectors.S	/^vector252:$/;"	l
vector253	kern/trap/vectors.S	/^vector253:$/;"	l
vector254	kern/trap/vectors.S	/^vector254:$/;"	l
vector255	kern/trap/vectors.S	/^vector255:$/;"	l
vector26	kern/trap/vectors.S	/^vector26:$/;"	l
vector27	kern/trap/vectors.S	/^vector27:$/;"	l
vector28	kern/trap/vectors.S	/^vector28:$/;"	l
vector29	kern/trap/vectors.S	/^vector29:$/;"	l
vector3	kern/trap/vectors.S	/^vector3:$/;"	l
vector30	kern/trap/vectors.S	/^vector30:$/;"	l
vector31	kern/trap/vectors.S	/^vector31:$/;"	l
vector32	kern/trap/vectors.S	/^vector32:$/;"	l
vector33	kern/trap/vectors.S	/^vector33:$/;"	l
vector34	kern/trap/vectors.S	/^vector34:$/;"	l
vector35	kern/trap/vectors.S	/^vector35:$/;"	l
vector36	kern/trap/vectors.S	/^vector36:$/;"	l
vector37	kern/trap/vectors.S	/^vector37:$/;"	l
vector38	kern/trap/vectors.S	/^vector38:$/;"	l
vector39	kern/trap/vectors.S	/^vector39:$/;"	l
vector4	kern/trap/vectors.S	/^vector4:$/;"	l
vector40	kern/trap/vectors.S	/^vector40:$/;"	l
vector41	kern/trap/vectors.S	/^vector41:$/;"	l
vector42	kern/trap/vectors.S	/^vector42:$/;"	l
vector43	kern/trap/vectors.S	/^vector43:$/;"	l
vector44	kern/trap/vectors.S	/^vector44:$/;"	l
vector45	kern/trap/vectors.S	/^vector45:$/;"	l
vector46	kern/trap/vectors.S	/^vector46:$/;"	l
vector47	kern/trap/vectors.S	/^vector47:$/;"	l
vector48	kern/trap/vectors.S	/^vector48:$/;"	l
vector49	kern/trap/vectors.S	/^vector49:$/;"	l
vector5	kern/trap/vectors.S	/^vector5:$/;"	l
vector50	kern/trap/vectors.S	/^vector50:$/;"	l
vector51	kern/trap/vectors.S	/^vector51:$/;"	l
vector52	kern/trap/vectors.S	/^vector52:$/;"	l
vector53	kern/trap/vectors.S	/^vector53:$/;"	l
vector54	kern/trap/vectors.S	/^vector54:$/;"	l
vector55	kern/trap/vectors.S	/^vector55:$/;"	l
vector56	kern/trap/vectors.S	/^vector56:$/;"	l
vector57	kern/trap/vectors.S	/^vector57:$/;"	l
vector58	kern/trap/vectors.S	/^vector58:$/;"	l
vector59	kern/trap/vectors.S	/^vector59:$/;"	l
vector6	kern/trap/vectors.S	/^vector6:$/;"	l
vector60	kern/trap/vectors.S	/^vector60:$/;"	l
vector61	kern/trap/vectors.S	/^vector61:$/;"	l
vector62	kern/trap/vectors.S	/^vector62:$/;"	l
vector63	kern/trap/vectors.S	/^vector63:$/;"	l
vector64	kern/trap/vectors.S	/^vector64:$/;"	l
vector65	kern/trap/vectors.S	/^vector65:$/;"	l
vector66	kern/trap/vectors.S	/^vector66:$/;"	l
vector67	kern/trap/vectors.S	/^vector67:$/;"	l
vector68	kern/trap/vectors.S	/^vector68:$/;"	l
vector69	kern/trap/vectors.S	/^vector69:$/;"	l
vector7	kern/trap/vectors.S	/^vector7:$/;"	l
vector70	kern/trap/vectors.S	/^vector70:$/;"	l
vector71	kern/trap/vectors.S	/^vector71:$/;"	l
vector72	kern/trap/vectors.S	/^vector72:$/;"	l
vector73	kern/trap/vectors.S	/^vector73:$/;"	l
vector74	kern/trap/vectors.S	/^vector74:$/;"	l
vector75	kern/trap/vectors.S	/^vector75:$/;"	l
vector76	kern/trap/vectors.S	/^vector76:$/;"	l
vector77	kern/trap/vectors.S	/^vector77:$/;"	l
vector78	kern/trap/vectors.S	/^vector78:$/;"	l
vector79	kern/trap/vectors.S	/^vector79:$/;"	l
vector8	kern/trap/vectors.S	/^vector8:$/;"	l
vector80	kern/trap/vectors.S	/^vector80:$/;"	l
vector81	kern/trap/vectors.S	/^vector81:$/;"	l
vector82	kern/trap/vectors.S	/^vector82:$/;"	l
vector83	kern/trap/vectors.S	/^vector83:$/;"	l
vector84	kern/trap/vectors.S	/^vector84:$/;"	l
vector85	kern/trap/vectors.S	/^vector85:$/;"	l
vector86	kern/trap/vectors.S	/^vector86:$/;"	l
vector87	kern/trap/vectors.S	/^vector87:$/;"	l
vector88	kern/trap/vectors.S	/^vector88:$/;"	l
vector89	kern/trap/vectors.S	/^vector89:$/;"	l
vector9	kern/trap/vectors.S	/^vector9:$/;"	l
vector90	kern/trap/vectors.S	/^vector90:$/;"	l
vector91	kern/trap/vectors.S	/^vector91:$/;"	l
vector92	kern/trap/vectors.S	/^vector92:$/;"	l
vector93	kern/trap/vectors.S	/^vector93:$/;"	l
vector94	kern/trap/vectors.S	/^vector94:$/;"	l
vector95	kern/trap/vectors.S	/^vector95:$/;"	l
vector96	kern/trap/vectors.S	/^vector96:$/;"	l
vector97	kern/trap/vectors.S	/^vector97:$/;"	l
vector98	kern/trap/vectors.S	/^vector98:$/;"	l
vector99	kern/trap/vectors.S	/^vector99:$/;"	l
__LIBS_ATOMIC_H__	libs/atomic.h	2;"	d
change_bit	libs/atomic.h	/^change_bit(int nr, volatile void *addr) {$/;"	f
clear_bit	libs/atomic.h	/^clear_bit(int nr, volatile void *addr) {$/;"	f
set_bit	libs/atomic.h	/^set_bit(int nr, volatile void *addr) {$/;"	f
test_and_clear_bit	libs/atomic.h	/^test_and_clear_bit(int nr, volatile void *addr) {$/;"	f
test_and_set_bit	libs/atomic.h	/^test_and_set_bit(int nr, volatile void *addr) {$/;"	f
test_bit	libs/atomic.h	/^test_bit(int nr, volatile void *addr) {$/;"	f
CHAR_BIT	libs/defs.h	12;"	d
NULL	libs/defs.h	5;"	d
ROUNDDOWN	libs/defs.h	48;"	d
ROUNDUP	libs/defs.h	54;"	d
ROUNDUP_DIV	libs/defs.h	60;"	d
__LIBS_DEFS_H__	libs/defs.h	2;"	d
__always_inline	libs/defs.h	8;"	d
__noinline	libs/defs.h	9;"	d
__noreturn	libs/defs.h	10;"	d
bool	libs/defs.h	/^typedef int bool;$/;"	t
int16_t	libs/defs.h	/^typedef short int16_t;$/;"	t
int32_t	libs/defs.h	/^typedef int int32_t;$/;"	t
int64_t	libs/defs.h	/^typedef long long int64_t;$/;"	t
int8_t	libs/defs.h	/^typedef char int8_t;$/;"	t
intptr_t	libs/defs.h	/^typedef int32_t intptr_t;$/;"	t
off_t	libs/defs.h	/^typedef intptr_t off_t;$/;"	t
offsetof	libs/defs.h	66;"	d
ppn_t	libs/defs.h	/^typedef size_t ppn_t;$/;"	t
size_t	libs/defs.h	/^typedef uintptr_t size_t;$/;"	t
to_struct	libs/defs.h	75;"	d
uint16_t	libs/defs.h	/^typedef unsigned short uint16_t;$/;"	t
uint32_t	libs/defs.h	/^typedef unsigned int uint32_t;$/;"	t
uint64_t	libs/defs.h	/^typedef unsigned long long uint64_t;$/;"	t
uint8_t	libs/defs.h	/^typedef unsigned char uint8_t;$/;"	t
uintptr_t	libs/defs.h	/^typedef uint32_t uintptr_t;$/;"	t
__LIBS_DIRENT_H__	libs/dirent.h	2;"	d
dirent	libs/dirent.h	/^struct dirent {$/;"	s
name	libs/dirent.h	/^    char name[FS_MAX_FNAME_LEN + 1];$/;"	m	struct:dirent
offset	libs/dirent.h	/^    off_t offset;$/;"	m	struct:dirent
ELF_MAGIC	libs/elf.h	6;"	d
ELF_PF_R	libs/elf.h	45;"	d
ELF_PF_W	libs/elf.h	44;"	d
ELF_PF_X	libs/elf.h	43;"	d
ELF_PT_LOAD	libs/elf.h	40;"	d
__LIBS_ELF_H__	libs/elf.h	2;"	d
e_ehsize	libs/elf.h	/^    uint16_t e_ehsize;    \/\/ size of this elf header$/;"	m	struct:elfhdr
e_elf	libs/elf.h	/^    uint8_t e_elf[12];$/;"	m	struct:elfhdr
e_entry	libs/elf.h	/^    uint32_t e_entry;     \/\/ entry point if executable$/;"	m	struct:elfhdr
e_flags	libs/elf.h	/^    uint32_t e_flags;     \/\/ architecture-specific flags, usually 0$/;"	m	struct:elfhdr
e_machine	libs/elf.h	/^    uint16_t e_machine;   \/\/ 3=x86, 4=68K, etc.$/;"	m	struct:elfhdr
e_magic	libs/elf.h	/^    uint32_t e_magic;     \/\/ must equal ELF_MAGIC$/;"	m	struct:elfhdr
e_phentsize	libs/elf.h	/^    uint16_t e_phentsize; \/\/ size of an entry in program header$/;"	m	struct:elfhdr
e_phnum	libs/elf.h	/^    uint16_t e_phnum;     \/\/ number of entries in program header or 0$/;"	m	struct:elfhdr
e_phoff	libs/elf.h	/^    uint32_t e_phoff;     \/\/ file position of program header or 0$/;"	m	struct:elfhdr
e_shentsize	libs/elf.h	/^    uint16_t e_shentsize; \/\/ size of an entry in section header$/;"	m	struct:elfhdr
e_shnum	libs/elf.h	/^    uint16_t e_shnum;     \/\/ number of entries in section header or 0$/;"	m	struct:elfhdr
e_shoff	libs/elf.h	/^    uint32_t e_shoff;     \/\/ file position of section header or 0$/;"	m	struct:elfhdr
e_shstrndx	libs/elf.h	/^    uint16_t e_shstrndx;  \/\/ section number that contains section name strings$/;"	m	struct:elfhdr
e_type	libs/elf.h	/^    uint16_t e_type;      \/\/ 1=relocatable, 2=executable, 3=shared object, 4=core image$/;"	m	struct:elfhdr
e_version	libs/elf.h	/^    uint32_t e_version;   \/\/ file version, always 1$/;"	m	struct:elfhdr
elfhdr	libs/elf.h	/^struct elfhdr {$/;"	s
p_align	libs/elf.h	/^    uint32_t p_align;  \/\/ required alignment, invariably hardware page size$/;"	m	struct:proghdr
p_filesz	libs/elf.h	/^    uint32_t p_filesz; \/\/ size of segment in file$/;"	m	struct:proghdr
p_flags	libs/elf.h	/^    uint32_t p_flags;  \/\/ read\/write\/execute bits$/;"	m	struct:proghdr
p_memsz	libs/elf.h	/^    uint32_t p_memsz;  \/\/ size of segment in memory (bigger if contains bss）$/;"	m	struct:proghdr
p_offset	libs/elf.h	/^    uint32_t p_offset; \/\/ file offset of segment$/;"	m	struct:proghdr
p_pa	libs/elf.h	/^    uint32_t p_pa;     \/\/ physical address, not used$/;"	m	struct:proghdr
p_type	libs/elf.h	/^    uint32_t p_type;   \/\/ loadable code or data, dynamic linking info,etc.$/;"	m	struct:proghdr
p_va	libs/elf.h	/^    uint32_t p_va;     \/\/ virtual address to map segment$/;"	m	struct:proghdr
proghdr	libs/elf.h	/^struct proghdr {$/;"	s
E_BAD_PROC	libs/error.h	6;"	d
E_BUSY	libs/error.h	19;"	d
E_EXISTS	libs/error.h	27;"	d
E_FAULT	libs/error.h	10;"	d
E_INVAL	libs/error.h	7;"	d
E_INVAL_ELF	libs/error.h	12;"	d
E_ISDIR	libs/error.h	21;"	d
E_KILLED	libs/error.h	13;"	d
E_MAX_OPEN	libs/error.h	26;"	d
E_NA_DEV	libs/error.h	18;"	d
E_NOENT	libs/error.h	20;"	d
E_NOTDIR	libs/error.h	22;"	d
E_NOTEMPTY	libs/error.h	28;"	d
E_NO_DEV	libs/error.h	17;"	d
E_NO_FREE_PROC	libs/error.h	9;"	d
E_NO_MEM	libs/error.h	8;"	d
E_PANIC	libs/error.h	14;"	d
E_SEEK	libs/error.h	25;"	d
E_SWAP_FAULT	libs/error.h	11;"	d
E_TIMEOUT	libs/error.h	15;"	d
E_TOO_BIG	libs/error.h	16;"	d
E_UNIMP	libs/error.h	24;"	d
E_UNSPECIFIED	libs/error.h	5;"	d
E_XDEV	libs/error.h	23;"	d
MAXERROR	libs/error.h	30;"	d
__LIBS_ERROR_H__	libs/error.h	2;"	d
GOLDEN_RATIO_PRIME_32	libs/hash.c	4;"	d	file:
hash32	libs/hash.c	/^hash32(uint32_t val, unsigned int bits) {$/;"	f
__LIBS_LIST_H__	libs/list.h	2;"	d
__list_add	libs/list.h	/^__list_add(list_entry_t *elm, list_entry_t *prev, list_entry_t *next) {$/;"	f
__list_del	libs/list.h	/^__list_del(list_entry_t *prev, list_entry_t *next) {$/;"	f
list_add	libs/list.h	/^list_add(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_after	libs/list.h	/^list_add_after(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_add_before	libs/list.h	/^list_add_before(list_entry_t *listelm, list_entry_t *elm) {$/;"	f
list_del	libs/list.h	/^list_del(list_entry_t *listelm) {$/;"	f
list_del_init	libs/list.h	/^list_del_init(list_entry_t *listelm) {$/;"	f
list_empty	libs/list.h	/^list_empty(list_entry_t *list) {$/;"	f
list_entry	libs/list.h	/^struct list_entry {$/;"	s
list_entry_t	libs/list.h	/^typedef struct list_entry list_entry_t;$/;"	t	typeref:struct:list_entry
list_init	libs/list.h	/^list_init(list_entry_t *elm) {$/;"	f
list_next	libs/list.h	/^list_next(list_entry_t *listelm) {$/;"	f
list_prev	libs/list.h	/^list_prev(list_entry_t *listelm) {$/;"	f
next	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::
prev	libs/list.h	/^    struct list_entry *prev, *next;$/;"	m	struct:list_entry	typeref:struct:list_entry::list_entry
buf	libs/printfmt.c	/^    char *buf;          \/\/ address pointer points to the first unused memory$/;"	m	struct:sprintbuf	file:
cnt	libs/printfmt.c	/^    int cnt;            \/\/ the number of characters that have been placed in this buffer$/;"	m	struct:sprintbuf	file:
ebuf	libs/printfmt.c	/^    char *ebuf;         \/\/ points the end of the buffer$/;"	m	struct:sprintbuf	file:
error_string	libs/printfmt.c	/^static const char * const error_string[MAXERROR + 1] = {$/;"	v	file:
getint	libs/printfmt.c	/^getint(va_list *ap, int lflag) {$/;"	f	file:
getuint	libs/printfmt.c	/^getuint(va_list *ap, int lflag) {$/;"	f	file:
printfmt	libs/printfmt.c	/^printfmt(void (*putch)(int, void*, int), int fd, void *putdat, const char *fmt, ...) {$/;"	f
printnum	libs/printfmt.c	/^printnum(void (*putch)(int, void*, int), int fd, void *putdat,$/;"	f	file:
snprintf	libs/printfmt.c	/^snprintf(char *str, size_t size, const char *fmt, ...) {$/;"	f
sprintbuf	libs/printfmt.c	/^struct sprintbuf {$/;"	s	file:
sprintputch	libs/printfmt.c	/^sprintputch(int ch, struct sprintbuf *b) {$/;"	f	file:
vprintfmt	libs/printfmt.c	/^vprintfmt(void (*putch)(int, void*, int), int fd, void *putdat, const char *fmt, va_list ap) {$/;"	f
vsnprintf	libs/printfmt.c	/^vsnprintf(char *str, size_t size, const char *fmt, va_list ap) {$/;"	f
next	libs/rand.c	/^static unsigned long long next = 1;$/;"	v	file:
rand	libs/rand.c	/^rand(void) {$/;"	f
srand	libs/rand.c	/^srand(unsigned int seed) {$/;"	f
__LIBS_SKEW_HEAP_H__	libs/skew_heap.h	2;"	d
compare_f	libs/skew_heap.h	/^typedef int(*compare_f)(void *a, void *b);$/;"	t
left	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::
parent	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::skew_heap_entry
right	libs/skew_heap.h	/^     struct skew_heap_entry *parent, *left, *right;$/;"	m	struct:skew_heap_entry	typeref:struct:skew_heap_entry::
skew_heap_entry	libs/skew_heap.h	/^struct skew_heap_entry {$/;"	s
skew_heap_entry_t	libs/skew_heap.h	/^typedef struct skew_heap_entry skew_heap_entry_t;$/;"	t	typeref:struct:skew_heap_entry
skew_heap_init	libs/skew_heap.h	/^skew_heap_init(skew_heap_entry_t *a)$/;"	f
skew_heap_insert	libs/skew_heap.h	/^skew_heap_insert(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
skew_heap_merge	libs/skew_heap.h	/^skew_heap_merge(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
skew_heap_remove	libs/skew_heap.h	/^skew_heap_remove(skew_heap_entry_t *a, skew_heap_entry_t *b,$/;"	f
S_IFBLK	libs/stat.h	18;"	d
S_IFCHR	libs/stat.h	17;"	d
S_IFDIR	libs/stat.h	15;"	d
S_IFLNK	libs/stat.h	16;"	d
S_IFMT	libs/stat.h	13;"	d
S_IFREG	libs/stat.h	14;"	d
S_ISBLK	libs/stat.h	24;"	d
S_ISCHR	libs/stat.h	23;"	d
S_ISDIR	libs/stat.h	21;"	d
S_ISLNK	libs/stat.h	22;"	d
S_ISREG	libs/stat.h	20;"	d
__LIBS_STAT_H__	libs/stat.h	2;"	d
st_blocks	libs/stat.h	/^    size_t st_blocks;                   \/\/ number of blocks file is using$/;"	m	struct:stat
st_mode	libs/stat.h	/^    uint32_t st_mode;                   \/\/ protection mode and file type$/;"	m	struct:stat
st_nlinks	libs/stat.h	/^    size_t st_nlinks;                   \/\/ number of hard links$/;"	m	struct:stat
st_size	libs/stat.h	/^    size_t st_size;                     \/\/ file size (bytes)$/;"	m	struct:stat
stat	libs/stat.h	/^struct stat {$/;"	s
__LIBS_STDARG_H__	libs/stdarg.h	2;"	d
va_arg	libs/stdarg.h	8;"	d
va_end	libs/stdarg.h	9;"	d
va_list	libs/stdarg.h	/^typedef __builtin_va_list va_list;$/;"	t
va_start	libs/stdarg.h	7;"	d
__LIBS_STDIO_H__	libs/stdio.h	2;"	d
RAND_MAX	libs/stdlib.h	7;"	d
__LIBS_STDLIB_H__	libs/stdlib.h	2;"	d
memcmp	libs/string.c	/^memcmp(const void *v1, const void *v2, size_t n) {$/;"	f
memcpy	libs/string.c	/^memcpy(void *dst, const void *src, size_t n) {$/;"	f
memmove	libs/string.c	/^memmove(void *dst, const void *src, size_t n) {$/;"	f
memset	libs/string.c	/^memset(void *s, char c, size_t n) {$/;"	f
strcat	libs/string.c	/^strcat(char *dst, const char *src) {$/;"	f
strchr	libs/string.c	/^strchr(const char *s, char c) {$/;"	f
strcmp	libs/string.c	/^strcmp(const char *s1, const char *s2) {$/;"	f
strcpy	libs/string.c	/^strcpy(char *dst, const char *src) {$/;"	f
strfind	libs/string.c	/^strfind(const char *s, char c) {$/;"	f
strlen	libs/string.c	/^strlen(const char *s) {$/;"	f
strncmp	libs/string.c	/^strncmp(const char *s1, const char *s2, size_t n) {$/;"	f
strncpy	libs/string.c	/^strncpy(char *dst, const char *src, size_t len) {$/;"	f
strnlen	libs/string.c	/^strnlen(const char *s, size_t len) {$/;"	f
strtol	libs/string.c	/^strtol(const char *s, char **endptr, int base) {$/;"	f
__LIBS_STRING_H__	libs/string.h	2;"	d
CLONE_FS	libs/unistd.h	38;"	d
CLONE_THREAD	libs/unistd.h	37;"	d
CLONE_VM	libs/unistd.h	36;"	d
EXEC_MAX_ARG_LEN	libs/unistd.h	65;"	d
EXEC_MAX_ARG_NUM	libs/unistd.h	64;"	d
FS_MAX_DNAME_LEN	libs/unistd.h	60;"	d
FS_MAX_FNAME_LEN	libs/unistd.h	61;"	d
FS_MAX_FPATH_LEN	libs/unistd.h	62;"	d
LSEEK_CUR	libs/unistd.h	57;"	d
LSEEK_END	libs/unistd.h	58;"	d
LSEEK_SET	libs/unistd.h	56;"	d
NO_FD	libs/unistd.h	53;"	d
O_ACCMODE	libs/unistd.h	51;"	d
O_APPEND	libs/unistd.h	49;"	d
O_CREAT	libs/unistd.h	46;"	d
O_EXCL	libs/unistd.h	47;"	d
O_RDONLY	libs/unistd.h	42;"	d
O_RDWR	libs/unistd.h	44;"	d
O_TRUNC	libs/unistd.h	48;"	d
O_WRONLY	libs/unistd.h	43;"	d
SYS_clone	libs/unistd.h	11;"	d
SYS_close	libs/unistd.h	23;"	d
SYS_dup	libs/unistd.h	31;"	d
SYS_exec	libs/unistd.h	10;"	d
SYS_exit	libs/unistd.h	7;"	d
SYS_fork	libs/unistd.h	8;"	d
SYS_fstat	libs/unistd.h	27;"	d
SYS_fsync	libs/unistd.h	28;"	d
SYS_getcwd	libs/unistd.h	29;"	d
SYS_getdirentry	libs/unistd.h	30;"	d
SYS_getpid	libs/unistd.h	16;"	d
SYS_gettime	libs/unistd.h	15;"	d
SYS_kill	libs/unistd.h	14;"	d
SYS_lab6_set_priority	libs/unistd.h	33;"	d
SYS_mmap	libs/unistd.h	17;"	d
SYS_munmap	libs/unistd.h	18;"	d
SYS_open	libs/unistd.h	22;"	d
SYS_pgdir	libs/unistd.h	21;"	d
SYS_putc	libs/unistd.h	20;"	d
SYS_read	libs/unistd.h	24;"	d
SYS_seek	libs/unistd.h	26;"	d
SYS_shmem	libs/unistd.h	19;"	d
SYS_sleep	libs/unistd.h	13;"	d
SYS_wait	libs/unistd.h	9;"	d
SYS_write	libs/unistd.h	25;"	d
SYS_yield	libs/unistd.h	12;"	d
T_SYSCALL	libs/unistd.h	4;"	d
__LIBS_UNISTD_H__	libs/unistd.h	2;"	d
__HAVE_ARCH_MEMCPY	libs/x86.h	291;"	d
__HAVE_ARCH_MEMMOVE	libs/x86.h	272;"	d
__HAVE_ARCH_MEMSET	libs/x86.h	258;"	d
__HAVE_ARCH_STRCMP	libs/x86.h	218;"	d
__HAVE_ARCH_STRCPY	libs/x86.h	242;"	d
__LIBS_X86_H__	libs/x86.h	2;"	d
__memcpy	libs/x86.h	/^__memcpy(void *dst, const void *src, size_t n) {$/;"	f
__memmove	libs/x86.h	/^__memmove(void *dst, const void *src, size_t n) {$/;"	f
__memset	libs/x86.h	/^__memset(void *s, char c, size_t n) {$/;"	f
__strcmp	libs/x86.h	/^__strcmp(const char *s1, const char *s2) {$/;"	f
__strcpy	libs/x86.h	/^__strcpy(char *dst, const char *src) {$/;"	f
barrier	libs/x86.h	21;"	d
breakpoint	libs/x86.h	/^breakpoint(void) {$/;"	f
cli	libs/x86.h	/^cli(void) {$/;"	f
do_div	libs/x86.h	6;"	d
inb	libs/x86.h	/^inb(uint16_t port) {$/;"	f
insl	libs/x86.h	/^insl(uint32_t port, void *addr, int cnt) {$/;"	f
invlpg	libs/x86.h	/^invlpg(void *addr) {$/;"	f
inw	libs/x86.h	/^inw(uint16_t port) {$/;"	f
lcr0	libs/x86.h	/^lcr0(uintptr_t cr0) {$/;"	f
lcr3	libs/x86.h	/^lcr3(uintptr_t cr3) {$/;"	f
lidt	libs/x86.h	/^lidt(struct pseudodesc *pd) {$/;"	f
ltr	libs/x86.h	/^ltr(uint16_t sel) {$/;"	f
outb	libs/x86.h	/^outb(uint16_t port, uint8_t data) {$/;"	f
outsl	libs/x86.h	/^outsl(uint32_t port, const void *addr, int cnt) {$/;"	f
outw	libs/x86.h	/^outw(uint16_t port, uint16_t data) {$/;"	f
pd_base	libs/x86.h	/^    uintptr_t pd_base;      \/\/ Base address$/;"	m	struct:pseudodesc
pd_lim	libs/x86.h	/^    uint16_t pd_lim;        \/\/ Limit$/;"	m	struct:pseudodesc
pseudodesc	libs/x86.h	/^struct pseudodesc {$/;"	s
rcr0	libs/x86.h	/^rcr0(void) {$/;"	f
rcr1	libs/x86.h	/^rcr1(void) {$/;"	f
rcr2	libs/x86.h	/^rcr2(void) {$/;"	f
rcr3	libs/x86.h	/^rcr3(void) {$/;"	f
read_dr	libs/x86.h	/^read_dr(unsigned regnum) {$/;"	f
read_ebp	libs/x86.h	/^read_ebp(void) {$/;"	f
read_eflags	libs/x86.h	/^read_eflags(void) {$/;"	f
sti	libs/x86.h	/^sti(void) {$/;"	f
write_dr	libs/x86.h	/^write_dr(unsigned regnum, uint32_t value) {$/;"	f
write_eflags	libs/x86.h	/^write_eflags(uint32_t eflags) {$/;"	f
Disassembly	obj/bootblock.asm	/^Disassembly of section .startup:$/;"	l
Disassembly	obj/bootblock.asm	/^Disassembly of section .text:$/;"	l
ELFHDR	obj/bootblock.asm	/^#define ELFHDR          ((struct elfhdr *)0x10000)      \/\/ scratch space$/;"	d
bad	obj/bootblock.asm	/^bad:$/;"	l
cont	obj/bootblock.asm	/^cont:$/;"	l
eph	obj/bootblock.asm	/^    eph = ph + ELFHDR->e_phnum;$/;"	d
ph	obj/bootblock.asm	/^    ph = (struct proghdr *)((uintptr_t)ELFHDR + ELFHDR->e_phoff);$/;"	d
probe_memory	obj/bootblock.asm	/^probe_memory:$/;"	l
protcseg	obj/bootblock.asm	/^protcseg:$/;"	l
spin	obj/bootblock.asm	/^spin:$/;"	l
start	obj/bootblock.asm	/^start:$/;"	l
start_probe	obj/bootblock.asm	/^start_probe:$/;"	l
static	obj/bootblock.asm	/^static inline uint8_t$/;"	l
static	obj/bootblock.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/bootblock.asm	/^static inline void$/;"	l
static	obj/bootblock.asm	/^static void$/;"	l
void	obj/bootblock.asm	/^void$/;"	l
Disassembly	obj/kernel.asm	/^Disassembly of section .text:$/;"	l
IOBUF_SIZE	obj/kernel.asm	/^#define IOBUF_SIZE                          4096$/;"	d
KERNEL_EXECVE3	obj/kernel.asm	/^#define KERNEL_EXECVE3(x, s, ...)               __KERNEL_EXECVE3(x, s, ##__VA_ARGS__)$/;"	d
MAXARGS	obj/kernel.asm	/^#define MAXARGS         16$/;"	d
NUM_SYSCALLS	obj/kernel.asm	/^#define NUM_SYSCALLS        ((sizeof(syscalls)) \/ (sizeof(syscalls[0])))$/;"	d
TICK_NUM	obj/kernel.asm	/^#define TICK_NUM 100$/;"	d
TIMER_16BIT	obj/kernel.asm	/^#define TIMER_16BIT     0x30                    \/\/ r\/w counter 16 bits, LSB first$/;"	d
TIMER_RATEGEN	obj/kernel.asm	/^#define TIMER_RATEGEN   0x04                    \/\/ mode 2, rate generator$/;"	d
WHITESPACE	obj/kernel.asm	/^#define WHITESPACE      " \\t\\n\\r"$/;"	d
__HAVE_ARCH_MEMCPY	obj/kernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/kernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/kernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/kernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/kernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
__alltraps	obj/kernel.asm	/^__alltraps:$/;"	l
__slob_get_free_page	obj/kernel.asm	/^#define __slob_get_free_page(gfp) __slob_get_free_pages(gfp, 0)$/;"	d
__trapret	obj/kernel.asm	/^__trapret:$/;"	l
addr	obj/kernel.asm	/^    addr = ROUNDDOWN(addr, PGSIZE);$/;"	d
addr_6845	obj/kernel.asm	/^        addr_6845 = CGA_BASE;$/;"	d
addr_6845	obj/kernel.asm	/^        addr_6845 = MONO_BASE;$/;"	d
alen	obj/kernel.asm	/^                alen = resid;$/;"	d
alen	obj/kernel.asm	/^            alen = len;$/;"	d
alen	obj/kernel.asm	/^        alen = len;$/;"	d
alen	obj/kernel.asm	/^    alen = iob->io_resid - resid - 2;$/;"	d
aligned	obj/kernel.asm	/^			aligned = (slob_t *)ALIGN((unsigned long)cur, align);$/;"	d
altflag	obj/kernel.asm	/^            altflag = 1;$/;"	d
any_matches	obj/kernel.asm	/^        any_matches = 1;$/;"	d
argv_size	obj/kernel.asm	/^    argv_size = 0;$/;"	d
bad_cleanup_mmap	obj/kernel.asm	/^bad_cleanup_mmap:$/;"	l
bad_dup_cleanup_fs	obj/kernel.asm	/^bad_dup_cleanup_fs:$/;"	l
bad_dup_cleanup_mmap	obj/kernel.asm	/^bad_dup_cleanup_mmap:$/;"	l
bad_elf_cleanup_pgdir	obj/kernel.asm	/^bad_elf_cleanup_pgdir:$/;"	l
bad_files_struct	obj/kernel.asm	/^bad_files_struct:$/;"	l
bad_fork_cleanup_fs	obj/kernel.asm	/^bad_fork_cleanup_fs:  \/\/for LAB8$/;"	l
bad_fork_cleanup_kstack	obj/kernel.asm	/^bad_fork_cleanup_kstack:$/;"	l
bad_fork_cleanup_proc	obj/kernel.asm	/^bad_fork_cleanup_proc:$/;"	l
bad_mm	obj/kernel.asm	/^bad_mm:$/;"	l
bad_pgdir_cleanup_mm	obj/kernel.asm	/^bad_pgdir_cleanup_mm:$/;"	l
base	obj/kernel.asm	/^            base = 10;$/;"	d
base	obj/kernel.asm	/^            base = 16;$/;"	d
base	obj/kernel.asm	/^            base = 8;$/;"	d
base	obj/kernel.asm	/^        base = 10;$/;"	d
bb	obj/kernel.asm	/^	bb = slob_alloc(sizeof(bigblock_t), gfp, 0);$/;"	d
begin	obj/kernel.asm	/^                begin = ROUNDUP(begin, PGSIZE);$/;"	d
begin	obj/kernel.asm	/^                begin = freemem;$/;"	d
bigblocks	obj/kernel.asm	/^		bigblocks = bb;$/;"	d
bool	obj/kernel.asm	/^bool copy_from_user(struct mm_struct *mm, void *dst, const void *src, size_t len, bool writable);$/;"	l
bool	obj/kernel.asm	/^bool copy_string(struct mm_struct *mm, char *dst, const char *src, size_t maxn);$/;"	l
bool	obj/kernel.asm	/^bool copy_to_user(struct mm_struct *mm, void *dst, const void *src, size_t len);$/;"	l
bool	obj/kernel.asm	/^bool$/;"	l
boot_cr3	obj/kernel.asm	/^    boot_cr3 = PADDR(boot_pgdir);$/;"	d
boot_pgdir	obj/kernel.asm	/^    boot_pgdir = boot_alloc_page();$/;"	d
c	obj/kernel.asm	/^            c = cons.buf[cons.rpos ++];$/;"	d
c	obj/kernel.asm	/^        c = '\\b';$/;"	d
c	obj/kernel.asm	/^        c = cons_getc();$/;"	d
c	obj/kernel.asm	/^        c = getchar();$/;"	d
c	obj/kernel.asm	/^    c = charcode[shift & (CTL | SHIFT)][data];$/;"	d
c0100000	obj/kernel.asm	/^c0100000 <kern_entry>:$/;"	l
c0100000	obj/kernel.asm	/^c0100000:	0f 01 15 18 d0 14 00 	lgdtl  0x14d018$/;"	l
c0100007	obj/kernel.asm	/^c0100007:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c010000c	obj/kernel.asm	/^c010000c:	8e d8                	mov    %eax,%ds$/;"	l
c010000e	obj/kernel.asm	/^c010000e:	8e c0                	mov    %eax,%es$/;"	l
c0100010	obj/kernel.asm	/^c0100010:	8e d0                	mov    %eax,%ss$/;"	l
c0100012	obj/kernel.asm	/^c0100012:	ea 19 00 10 c0 08 00 	ljmp   $0x8,$0xc0100019$/;"	l
c0100019	obj/kernel.asm	/^c0100019 <relocated>:$/;"	l
c0100019	obj/kernel.asm	/^c0100019:	bd 00 00 00 00       	mov    $0x0,%ebp$/;"	l
c010001e	obj/kernel.asm	/^c010001e:	bc 00 d0 14 c0       	mov    $0xc014d000,%esp$/;"	l
c0100023	obj/kernel.asm	/^c0100023:	e8 02 00 00 00       	call   c010002a <kern_init>$/;"	l
c0100028	obj/kernel.asm	/^c0100028 <spin>:$/;"	l
c0100028	obj/kernel.asm	/^c0100028:	eb fe                	jmp    c0100028 <spin>$/;"	l
c010002a	obj/kernel.asm	/^c010002a <kern_init>:$/;"	l
c010002a	obj/kernel.asm	/^c010002a:	55                   	push   %ebp$/;"	l
c010002b	obj/kernel.asm	/^c010002b:	89 e5                	mov    %esp,%ebp$/;"	l
c010002d	obj/kernel.asm	/^c010002d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100030	obj/kernel.asm	/^c0100030:	ba 84 23 15 c0       	mov    $0xc0152384,%edx$/;"	l
c0100035	obj/kernel.asm	/^c0100035:	b8 50 df 14 c0       	mov    $0xc014df50,%eax$/;"	l
c010003a	obj/kernel.asm	/^c010003a:	29 c2                	sub    %eax,%edx$/;"	l
c010003c	obj/kernel.asm	/^c010003c:	89 d0                	mov    %edx,%eax$/;"	l
c010003e	obj/kernel.asm	/^c010003e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100041	obj/kernel.asm	/^c0100041:	50                   	push   %eax$/;"	l
c0100042	obj/kernel.asm	/^c0100042:	6a 00                	push   $0x0$/;"	l
c0100044	obj/kernel.asm	/^c0100044:	68 50 df 14 c0       	push   $0xc014df50$/;"	l
c0100049	obj/kernel.asm	/^c0100049:	e8 41 37 01 00       	call   c011378f <memset>$/;"	l
c010004e	obj/kernel.asm	/^c010004e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100051	obj/kernel.asm	/^c0100051:	e8 55 1f 00 00       	call   c0101fab <cons_init>$/;"	l
c0100056	obj/kernel.asm	/^c0100056:	c7 45 f4 80 40 11 c0 	movl   $0xc0114080,-0xc(%ebp)$/;"	l
c010005d	obj/kernel.asm	/^c010005d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100060	obj/kernel.asm	/^c0100060:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100063	obj/kernel.asm	/^c0100063:	68 9c 40 11 c0       	push   $0xc011409c$/;"	l
c0100068	obj/kernel.asm	/^c0100068:	e8 fd 02 00 00       	call   c010036a <cprintf>$/;"	l
c010006d	obj/kernel.asm	/^c010006d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100070	obj/kernel.asm	/^c0100070:	e8 52 0a 00 00       	call   c0100ac7 <print_kerninfo>$/;"	l
c0100075	obj/kernel.asm	/^c0100075:	e8 92 00 00 00       	call   c010010c <grade_backtrace>$/;"	l
c010007a	obj/kernel.asm	/^c010007a:	e8 7f 3d 00 00       	call   c0103dfe <pmm_init>$/;"	l
c010007f	obj/kernel.asm	/^c010007f:	e8 95 20 00 00       	call   c0102119 <pic_init>$/;"	l
c0100084	obj/kernel.asm	/^c0100084:	e8 f2 21 00 00       	call   c010227b <idt_init>$/;"	l
c0100089	obj/kernel.asm	/^c0100089:	e8 16 58 00 00       	call   c01058a4 <vmm_init>$/;"	l
c010008e	obj/kernel.asm	/^c010008e:	e8 39 d4 00 00       	call   c010d4cc <sched_init>$/;"	l
c0100093	obj/kernel.asm	/^c0100093:	e8 9f d0 00 00       	call   c010d137 <proc_init>$/;"	l
c0100098	obj/kernel.asm	/^c0100098:	e8 e7 0e 00 00       	call   c0100f84 <ide_init>$/;"	l
c010009d	obj/kernel.asm	/^c010009d:	e8 e0 62 00 00       	call   c0106382 <swap_init>$/;"	l
c01000a2	obj/kernel.asm	/^c01000a2:	e8 56 ae 00 00       	call   c010aefd <fs_init>$/;"	l
c01000a7	obj/kernel.asm	/^c01000a7:	e8 b8 16 00 00       	call   c0101764 <clock_init>$/;"	l
c01000ac	obj/kernel.asm	/^c01000ac:	e8 a4 21 00 00       	call   c0102255 <intr_enable>$/;"	l
c01000b1	obj/kernel.asm	/^c01000b1:	e8 6a d2 00 00       	call   c010d320 <cpu_idle>$/;"	l
c01000b6	obj/kernel.asm	/^c01000b6 <grade_backtrace2>:$/;"	l
c01000b6	obj/kernel.asm	/^c01000b6:	55                   	push   %ebp$/;"	l
c01000b7	obj/kernel.asm	/^c01000b7:	89 e5                	mov    %esp,%ebp$/;"	l
c01000b9	obj/kernel.asm	/^c01000b9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01000bc	obj/kernel.asm	/^c01000bc:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01000bf	obj/kernel.asm	/^c01000bf:	6a 00                	push   $0x0$/;"	l
c01000c1	obj/kernel.asm	/^c01000c1:	6a 00                	push   $0x0$/;"	l
c01000c3	obj/kernel.asm	/^c01000c3:	6a 00                	push   $0x0$/;"	l
c01000c5	obj/kernel.asm	/^c01000c5:	e8 4e 0e 00 00       	call   c0100f18 <mon_backtrace>$/;"	l
c01000ca	obj/kernel.asm	/^c01000ca:	83 c4 10             	add    $0x10,%esp$/;"	l
c01000cd	obj/kernel.asm	/^c01000cd:	c9                   	leave  $/;"	l
c01000ce	obj/kernel.asm	/^c01000ce:	c3                   	ret    $/;"	l
c01000cf	obj/kernel.asm	/^c01000cf <grade_backtrace1>:$/;"	l
c01000cf	obj/kernel.asm	/^c01000cf:	55                   	push   %ebp$/;"	l
c01000d0	obj/kernel.asm	/^c01000d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01000d2	obj/kernel.asm	/^c01000d2:	53                   	push   %ebx$/;"	l
c01000d3	obj/kernel.asm	/^c01000d3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01000d6	obj/kernel.asm	/^c01000d6:	8d 4d 0c             	lea    0xc(%ebp),%ecx$/;"	l
c01000d9	obj/kernel.asm	/^c01000d9:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01000dc	obj/kernel.asm	/^c01000dc:	8d 5d 08             	lea    0x8(%ebp),%ebx$/;"	l
c01000df	obj/kernel.asm	/^c01000df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01000e2	obj/kernel.asm	/^c01000e2:	51                   	push   %ecx$/;"	l
c01000e3	obj/kernel.asm	/^c01000e3:	52                   	push   %edx$/;"	l
c01000e4	obj/kernel.asm	/^c01000e4:	53                   	push   %ebx$/;"	l
c01000e5	obj/kernel.asm	/^c01000e5:	50                   	push   %eax$/;"	l
c01000e6	obj/kernel.asm	/^c01000e6:	e8 cb ff ff ff       	call   c01000b6 <grade_backtrace2>$/;"	l
c01000eb	obj/kernel.asm	/^c01000eb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01000ee	obj/kernel.asm	/^c01000ee:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c01000f1	obj/kernel.asm	/^c01000f1:	c9                   	leave  $/;"	l
c01000f2	obj/kernel.asm	/^c01000f2:	c3                   	ret    $/;"	l
c01000f3	obj/kernel.asm	/^c01000f3 <grade_backtrace0>:$/;"	l
c01000f3	obj/kernel.asm	/^c01000f3:	55                   	push   %ebp$/;"	l
c01000f4	obj/kernel.asm	/^c01000f4:	89 e5                	mov    %esp,%ebp$/;"	l
c01000f6	obj/kernel.asm	/^c01000f6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01000f9	obj/kernel.asm	/^c01000f9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01000fc	obj/kernel.asm	/^c01000fc:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01000ff	obj/kernel.asm	/^c01000ff:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100102	obj/kernel.asm	/^c0100102:	e8 c8 ff ff ff       	call   c01000cf <grade_backtrace1>$/;"	l
c0100107	obj/kernel.asm	/^c0100107:	83 c4 10             	add    $0x10,%esp$/;"	l
c010010a	obj/kernel.asm	/^c010010a:	c9                   	leave  $/;"	l
c010010b	obj/kernel.asm	/^c010010b:	c3                   	ret    $/;"	l
c010010c	obj/kernel.asm	/^c010010c <grade_backtrace>:$/;"	l
c010010c	obj/kernel.asm	/^c010010c:	55                   	push   %ebp$/;"	l
c010010d	obj/kernel.asm	/^c010010d:	89 e5                	mov    %esp,%ebp$/;"	l
c010010f	obj/kernel.asm	/^c010010f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100112	obj/kernel.asm	/^c0100112:	b8 2a 00 10 c0       	mov    $0xc010002a,%eax$/;"	l
c0100117	obj/kernel.asm	/^c0100117:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010011a	obj/kernel.asm	/^c010011a:	68 00 00 ff ff       	push   $0xffff0000$/;"	l
c010011f	obj/kernel.asm	/^c010011f:	50                   	push   %eax$/;"	l
c0100120	obj/kernel.asm	/^c0100120:	6a 00                	push   $0x0$/;"	l
c0100122	obj/kernel.asm	/^c0100122:	e8 cc ff ff ff       	call   c01000f3 <grade_backtrace0>$/;"	l
c0100127	obj/kernel.asm	/^c0100127:	83 c4 10             	add    $0x10,%esp$/;"	l
c010012a	obj/kernel.asm	/^c010012a:	c9                   	leave  $/;"	l
c010012b	obj/kernel.asm	/^c010012b:	c3                   	ret    $/;"	l
c010012c	obj/kernel.asm	/^c010012c <lab1_print_cur_status>:$/;"	l
c010012c	obj/kernel.asm	/^c010012c:	55                   	push   %ebp$/;"	l
c010012d	obj/kernel.asm	/^c010012d:	89 e5                	mov    %esp,%ebp$/;"	l
c010012f	obj/kernel.asm	/^c010012f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100132	obj/kernel.asm	/^c0100132:	8c 4d f6             	mov    %cs,-0xa(%ebp)$/;"	l
c0100135	obj/kernel.asm	/^c0100135:	8c 5d f4             	mov    %ds,-0xc(%ebp)$/;"	l
c0100138	obj/kernel.asm	/^c0100138:	8c 45 f2             	mov    %es,-0xe(%ebp)$/;"	l
c010013b	obj/kernel.asm	/^c010013b:	8c 55 f0             	mov    %ss,-0x10(%ebp)$/;"	l
c010013e	obj/kernel.asm	/^c010013e:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100142	obj/kernel.asm	/^c0100142:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100145	obj/kernel.asm	/^c0100145:	83 e0 03             	and    $0x3,%eax$/;"	l
c0100148	obj/kernel.asm	/^c0100148:	89 c2                	mov    %eax,%edx$/;"	l
c010014a	obj/kernel.asm	/^c010014a:	a1 80 df 14 c0       	mov    0xc014df80,%eax$/;"	l
c010014f	obj/kernel.asm	/^c010014f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100152	obj/kernel.asm	/^c0100152:	52                   	push   %edx$/;"	l
c0100153	obj/kernel.asm	/^c0100153:	50                   	push   %eax$/;"	l
c0100154	obj/kernel.asm	/^c0100154:	68 a1 40 11 c0       	push   $0xc01140a1$/;"	l
c0100159	obj/kernel.asm	/^c0100159:	e8 0c 02 00 00       	call   c010036a <cprintf>$/;"	l
c010015e	obj/kernel.asm	/^c010015e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100161	obj/kernel.asm	/^c0100161:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100165	obj/kernel.asm	/^c0100165:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c0100168	obj/kernel.asm	/^c0100168:	a1 80 df 14 c0       	mov    0xc014df80,%eax$/;"	l
c010016d	obj/kernel.asm	/^c010016d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100170	obj/kernel.asm	/^c0100170:	52                   	push   %edx$/;"	l
c0100171	obj/kernel.asm	/^c0100171:	50                   	push   %eax$/;"	l
c0100172	obj/kernel.asm	/^c0100172:	68 af 40 11 c0       	push   $0xc01140af$/;"	l
c0100177	obj/kernel.asm	/^c0100177:	e8 ee 01 00 00       	call   c010036a <cprintf>$/;"	l
c010017c	obj/kernel.asm	/^c010017c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010017f	obj/kernel.asm	/^c010017f:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c0100183	obj/kernel.asm	/^c0100183:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c0100186	obj/kernel.asm	/^c0100186:	a1 80 df 14 c0       	mov    0xc014df80,%eax$/;"	l
c010018b	obj/kernel.asm	/^c010018b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010018e	obj/kernel.asm	/^c010018e:	52                   	push   %edx$/;"	l
c010018f	obj/kernel.asm	/^c010018f:	50                   	push   %eax$/;"	l
c0100190	obj/kernel.asm	/^c0100190:	68 bd 40 11 c0       	push   $0xc01140bd$/;"	l
c0100195	obj/kernel.asm	/^c0100195:	e8 d0 01 00 00       	call   c010036a <cprintf>$/;"	l
c010019a	obj/kernel.asm	/^c010019a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010019d	obj/kernel.asm	/^c010019d:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01001a1	obj/kernel.asm	/^c01001a1:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01001a4	obj/kernel.asm	/^c01001a4:	a1 80 df 14 c0       	mov    0xc014df80,%eax$/;"	l
c01001a9	obj/kernel.asm	/^c01001a9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01001ac	obj/kernel.asm	/^c01001ac:	52                   	push   %edx$/;"	l
c01001ad	obj/kernel.asm	/^c01001ad:	50                   	push   %eax$/;"	l
c01001ae	obj/kernel.asm	/^c01001ae:	68 cb 40 11 c0       	push   $0xc01140cb$/;"	l
c01001b3	obj/kernel.asm	/^c01001b3:	e8 b2 01 00 00       	call   c010036a <cprintf>$/;"	l
c01001b8	obj/kernel.asm	/^c01001b8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01001bb	obj/kernel.asm	/^c01001bb:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c01001bf	obj/kernel.asm	/^c01001bf:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01001c2	obj/kernel.asm	/^c01001c2:	a1 80 df 14 c0       	mov    0xc014df80,%eax$/;"	l
c01001c7	obj/kernel.asm	/^c01001c7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01001ca	obj/kernel.asm	/^c01001ca:	52                   	push   %edx$/;"	l
c01001cb	obj/kernel.asm	/^c01001cb:	50                   	push   %eax$/;"	l
c01001cc	obj/kernel.asm	/^c01001cc:	68 d9 40 11 c0       	push   $0xc01140d9$/;"	l
c01001d1	obj/kernel.asm	/^c01001d1:	e8 94 01 00 00       	call   c010036a <cprintf>$/;"	l
c01001d6	obj/kernel.asm	/^c01001d6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01001d9	obj/kernel.asm	/^c01001d9:	a1 80 df 14 c0       	mov    0xc014df80,%eax$/;"	l
c01001de	obj/kernel.asm	/^c01001de:	83 c0 01             	add    $0x1,%eax$/;"	l
c01001e1	obj/kernel.asm	/^c01001e1:	a3 80 df 14 c0       	mov    %eax,0xc014df80$/;"	l
c01001e6	obj/kernel.asm	/^c01001e6:	c9                   	leave  $/;"	l
c01001e7	obj/kernel.asm	/^c01001e7:	c3                   	ret    $/;"	l
c01001e8	obj/kernel.asm	/^c01001e8 <lab1_switch_to_user>:$/;"	l
c01001e8	obj/kernel.asm	/^c01001e8:	55                   	push   %ebp$/;"	l
c01001e9	obj/kernel.asm	/^c01001e9:	89 e5                	mov    %esp,%ebp$/;"	l
c01001eb	obj/kernel.asm	/^c01001eb:	5d                   	pop    %ebp$/;"	l
c01001ec	obj/kernel.asm	/^c01001ec:	c3                   	ret    $/;"	l
c01001ed	obj/kernel.asm	/^c01001ed <lab1_switch_to_kernel>:$/;"	l
c01001ed	obj/kernel.asm	/^c01001ed:	55                   	push   %ebp$/;"	l
c01001ee	obj/kernel.asm	/^c01001ee:	89 e5                	mov    %esp,%ebp$/;"	l
c01001f0	obj/kernel.asm	/^c01001f0:	5d                   	pop    %ebp$/;"	l
c01001f1	obj/kernel.asm	/^c01001f1:	c3                   	ret    $/;"	l
c01001f2	obj/kernel.asm	/^c01001f2 <lab1_switch_test>:$/;"	l
c01001f2	obj/kernel.asm	/^c01001f2:	55                   	push   %ebp$/;"	l
c01001f3	obj/kernel.asm	/^c01001f3:	89 e5                	mov    %esp,%ebp$/;"	l
c01001f5	obj/kernel.asm	/^c01001f5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01001f8	obj/kernel.asm	/^c01001f8:	e8 2f ff ff ff       	call   c010012c <lab1_print_cur_status>$/;"	l
c01001fd	obj/kernel.asm	/^c01001fd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100200	obj/kernel.asm	/^c0100200:	68 e8 40 11 c0       	push   $0xc01140e8$/;"	l
c0100205	obj/kernel.asm	/^c0100205:	e8 60 01 00 00       	call   c010036a <cprintf>$/;"	l
c010020a	obj/kernel.asm	/^c010020a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010020d	obj/kernel.asm	/^c010020d:	e8 d6 ff ff ff       	call   c01001e8 <lab1_switch_to_user>$/;"	l
c0100212	obj/kernel.asm	/^c0100212:	e8 15 ff ff ff       	call   c010012c <lab1_print_cur_status>$/;"	l
c0100217	obj/kernel.asm	/^c0100217:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010021a	obj/kernel.asm	/^c010021a:	68 08 41 11 c0       	push   $0xc0114108$/;"	l
c010021f	obj/kernel.asm	/^c010021f:	e8 46 01 00 00       	call   c010036a <cprintf>$/;"	l
c0100224	obj/kernel.asm	/^c0100224:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100227	obj/kernel.asm	/^c0100227:	e8 c1 ff ff ff       	call   c01001ed <lab1_switch_to_kernel>$/;"	l
c010022c	obj/kernel.asm	/^c010022c:	e8 fb fe ff ff       	call   c010012c <lab1_print_cur_status>$/;"	l
c0100231	obj/kernel.asm	/^c0100231:	c9                   	leave  $/;"	l
c0100232	obj/kernel.asm	/^c0100232:	c3                   	ret    $/;"	l
c0100233	obj/kernel.asm	/^c0100233 <strdup>:$/;"	l
c0100233	obj/kernel.asm	/^c0100233:	55                   	push   %ebp$/;"	l
c0100234	obj/kernel.asm	/^c0100234:	89 e5                	mov    %esp,%ebp$/;"	l
c0100236	obj/kernel.asm	/^c0100236:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100239	obj/kernel.asm	/^c0100239:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010023c	obj/kernel.asm	/^c010023c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010023f	obj/kernel.asm	/^c010023f:	e8 f1 31 01 00       	call   c0113435 <strlen>$/;"	l
c0100244	obj/kernel.asm	/^c0100244:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100247	obj/kernel.asm	/^c0100247:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010024a	obj/kernel.asm	/^c010024a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010024d	obj/kernel.asm	/^c010024d:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100250	obj/kernel.asm	/^c0100250:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100253	obj/kernel.asm	/^c0100253:	50                   	push   %eax$/;"	l
c0100254	obj/kernel.asm	/^c0100254:	e8 9d 71 00 00       	call   c01073f6 <kmalloc>$/;"	l
c0100259	obj/kernel.asm	/^c0100259:	83 c4 10             	add    $0x10,%esp$/;"	l
c010025c	obj/kernel.asm	/^c010025c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010025f	obj/kernel.asm	/^c010025f:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0100263	obj/kernel.asm	/^c0100263:	74 1f                	je     c0100284 <strdup+0x51>$/;"	l
c0100265	obj/kernel.asm	/^c0100265:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100268	obj/kernel.asm	/^c0100268:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010026b	obj/kernel.asm	/^c010026b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010026e	obj/kernel.asm	/^c010026e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0100271	obj/kernel.asm	/^c0100271:	e8 fc 35 01 00       	call   c0113872 <memcpy>$/;"	l
c0100276	obj/kernel.asm	/^c0100276:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100279	obj/kernel.asm	/^c0100279:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010027c	obj/kernel.asm	/^c010027c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010027f	obj/kernel.asm	/^c010027f:	01 d0                	add    %edx,%eax$/;"	l
c0100281	obj/kernel.asm	/^c0100281:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100284	obj/kernel.asm	/^c0100284:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100287	obj/kernel.asm	/^c0100287:	c9                   	leave  $/;"	l
c0100288	obj/kernel.asm	/^c0100288:	c3                   	ret    $/;"	l
c0100289	obj/kernel.asm	/^c0100289 <stradd>:$/;"	l
c0100289	obj/kernel.asm	/^c0100289:	55                   	push   %ebp$/;"	l
c010028a	obj/kernel.asm	/^c010028a:	89 e5                	mov    %esp,%ebp$/;"	l
c010028c	obj/kernel.asm	/^c010028c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010028f	obj/kernel.asm	/^c010028f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100292	obj/kernel.asm	/^c0100292:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100295	obj/kernel.asm	/^c0100295:	e8 9b 31 01 00       	call   c0113435 <strlen>$/;"	l
c010029a	obj/kernel.asm	/^c010029a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010029d	obj/kernel.asm	/^c010029d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01002a0	obj/kernel.asm	/^c01002a0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01002a3	obj/kernel.asm	/^c01002a3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01002a6	obj/kernel.asm	/^c01002a6:	e8 8a 31 01 00       	call   c0113435 <strlen>$/;"	l
c01002ab	obj/kernel.asm	/^c01002ab:	83 c4 10             	add    $0x10,%esp$/;"	l
c01002ae	obj/kernel.asm	/^c01002ae:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01002b1	obj/kernel.asm	/^c01002b1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01002b4	obj/kernel.asm	/^c01002b4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01002b7	obj/kernel.asm	/^c01002b7:	01 d0                	add    %edx,%eax$/;"	l
c01002b9	obj/kernel.asm	/^c01002b9:	83 c0 01             	add    $0x1,%eax$/;"	l
c01002bc	obj/kernel.asm	/^c01002bc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01002bf	obj/kernel.asm	/^c01002bf:	50                   	push   %eax$/;"	l
c01002c0	obj/kernel.asm	/^c01002c0:	e8 31 71 00 00       	call   c01073f6 <kmalloc>$/;"	l
c01002c5	obj/kernel.asm	/^c01002c5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01002c8	obj/kernel.asm	/^c01002c8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01002cb	obj/kernel.asm	/^c01002cb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01002ce	obj/kernel.asm	/^c01002ce:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01002d1	obj/kernel.asm	/^c01002d1:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01002d5	obj/kernel.asm	/^c01002d5:	74 3a                	je     c0100311 <stradd+0x88>$/;"	l
c01002d7	obj/kernel.asm	/^c01002d7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01002da	obj/kernel.asm	/^c01002da:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01002dd	obj/kernel.asm	/^c01002dd:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01002e0	obj/kernel.asm	/^c01002e0:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01002e3	obj/kernel.asm	/^c01002e3:	e8 8a 35 01 00       	call   c0113872 <memcpy>$/;"	l
c01002e8	obj/kernel.asm	/^c01002e8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01002eb	obj/kernel.asm	/^c01002eb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01002ee	obj/kernel.asm	/^c01002ee:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
c01002f1	obj/kernel.asm	/^c01002f1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01002f4	obj/kernel.asm	/^c01002f4:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01002f7	obj/kernel.asm	/^c01002f7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01002fa	obj/kernel.asm	/^c01002fa:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01002fd	obj/kernel.asm	/^c01002fd:	e8 70 35 01 00       	call   c0113872 <memcpy>$/;"	l
c0100302	obj/kernel.asm	/^c0100302:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100305	obj/kernel.asm	/^c0100305:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100308	obj/kernel.asm	/^c0100308:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
c010030b	obj/kernel.asm	/^c010030b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010030e	obj/kernel.asm	/^c010030e:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100311	obj/kernel.asm	/^c0100311:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100314	obj/kernel.asm	/^c0100314:	c9                   	leave  $/;"	l
c0100315	obj/kernel.asm	/^c0100315:	c3                   	ret    $/;"	l
c0100316	obj/kernel.asm	/^c0100316 <cputch>:$/;"	l
c0100316	obj/kernel.asm	/^c0100316:	55                   	push   %ebp$/;"	l
c0100317	obj/kernel.asm	/^c0100317:	89 e5                	mov    %esp,%ebp$/;"	l
c0100319	obj/kernel.asm	/^c0100319:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010031c	obj/kernel.asm	/^c010031c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010031f	obj/kernel.asm	/^c010031f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100322	obj/kernel.asm	/^c0100322:	e8 b4 1c 00 00       	call   c0101fdb <cons_putc>$/;"	l
c0100327	obj/kernel.asm	/^c0100327:	83 c4 10             	add    $0x10,%esp$/;"	l
c010032a	obj/kernel.asm	/^c010032a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010032d	obj/kernel.asm	/^c010032d:	8b 00                	mov    (%eax),%eax$/;"	l
c010032f	obj/kernel.asm	/^c010032f:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100332	obj/kernel.asm	/^c0100332:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100335	obj/kernel.asm	/^c0100335:	89 10                	mov    %edx,(%eax)$/;"	l
c0100337	obj/kernel.asm	/^c0100337:	c9                   	leave  $/;"	l
c0100338	obj/kernel.asm	/^c0100338:	c3                   	ret    $/;"	l
c0100339	obj/kernel.asm	/^c0100339 <vcprintf>:$/;"	l
c0100339	obj/kernel.asm	/^c0100339:	55                   	push   %ebp$/;"	l
c010033a	obj/kernel.asm	/^c010033a:	89 e5                	mov    %esp,%ebp$/;"	l
c010033c	obj/kernel.asm	/^c010033c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010033f	obj/kernel.asm	/^c010033f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100346	obj/kernel.asm	/^c0100346:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100349	obj/kernel.asm	/^c0100349:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010034c	obj/kernel.asm	/^c010034c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010034f	obj/kernel.asm	/^c010034f:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c0100352	obj/kernel.asm	/^c0100352:	50                   	push   %eax$/;"	l
c0100353	obj/kernel.asm	/^c0100353:	68 d9 6a ff ff       	push   $0xffff6ad9$/;"	l
c0100358	obj/kernel.asm	/^c0100358:	68 16 03 10 c0       	push   $0xc0100316$/;"	l
c010035d	obj/kernel.asm	/^c010035d:	e8 6d 37 01 00       	call   c0113acf <vprintfmt>$/;"	l
c0100362	obj/kernel.asm	/^c0100362:	83 c4 20             	add    $0x20,%esp$/;"	l
c0100365	obj/kernel.asm	/^c0100365:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100368	obj/kernel.asm	/^c0100368:	c9                   	leave  $/;"	l
c0100369	obj/kernel.asm	/^c0100369:	c3                   	ret    $/;"	l
c010036a	obj/kernel.asm	/^c010036a <cprintf>:$/;"	l
c010036a	obj/kernel.asm	/^c010036a:	55                   	push   %ebp$/;"	l
c010036b	obj/kernel.asm	/^c010036b:	89 e5                	mov    %esp,%ebp$/;"	l
c010036d	obj/kernel.asm	/^c010036d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100370	obj/kernel.asm	/^c0100370:	8d 45 0c             	lea    0xc(%ebp),%eax$/;"	l
c0100373	obj/kernel.asm	/^c0100373:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100376	obj/kernel.asm	/^c0100376:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100379	obj/kernel.asm	/^c0100379:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010037c	obj/kernel.asm	/^c010037c:	50                   	push   %eax$/;"	l
c010037d	obj/kernel.asm	/^c010037d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100380	obj/kernel.asm	/^c0100380:	e8 b4 ff ff ff       	call   c0100339 <vcprintf>$/;"	l
c0100385	obj/kernel.asm	/^c0100385:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100388	obj/kernel.asm	/^c0100388:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010038b	obj/kernel.asm	/^c010038b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010038e	obj/kernel.asm	/^c010038e:	c9                   	leave  $/;"	l
c010038f	obj/kernel.asm	/^c010038f:	c3                   	ret    $/;"	l
c0100390	obj/kernel.asm	/^c0100390 <cputchar>:$/;"	l
c0100390	obj/kernel.asm	/^c0100390:	55                   	push   %ebp$/;"	l
c0100391	obj/kernel.asm	/^c0100391:	89 e5                	mov    %esp,%ebp$/;"	l
c0100393	obj/kernel.asm	/^c0100393:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100396	obj/kernel.asm	/^c0100396:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100399	obj/kernel.asm	/^c0100399:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010039c	obj/kernel.asm	/^c010039c:	e8 3a 1c 00 00       	call   c0101fdb <cons_putc>$/;"	l
c01003a1	obj/kernel.asm	/^c01003a1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01003a4	obj/kernel.asm	/^c01003a4:	c9                   	leave  $/;"	l
c01003a5	obj/kernel.asm	/^c01003a5:	c3                   	ret    $/;"	l
c01003a6	obj/kernel.asm	/^c01003a6 <cputs>:$/;"	l
c01003a6	obj/kernel.asm	/^c01003a6:	55                   	push   %ebp$/;"	l
c01003a7	obj/kernel.asm	/^c01003a7:	89 e5                	mov    %esp,%ebp$/;"	l
c01003a9	obj/kernel.asm	/^c01003a9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01003ac	obj/kernel.asm	/^c01003ac:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01003b3	obj/kernel.asm	/^c01003b3:	eb 14                	jmp    c01003c9 <cputs+0x23>$/;"	l
c01003b5	obj/kernel.asm	/^c01003b5:	0f be 45 f7          	movsbl -0x9(%ebp),%eax$/;"	l
c01003b9	obj/kernel.asm	/^c01003b9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01003bc	obj/kernel.asm	/^c01003bc:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c01003bf	obj/kernel.asm	/^c01003bf:	52                   	push   %edx$/;"	l
c01003c0	obj/kernel.asm	/^c01003c0:	50                   	push   %eax$/;"	l
c01003c1	obj/kernel.asm	/^c01003c1:	e8 50 ff ff ff       	call   c0100316 <cputch>$/;"	l
c01003c6	obj/kernel.asm	/^c01003c6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01003c9	obj/kernel.asm	/^c01003c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01003cc	obj/kernel.asm	/^c01003cc:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01003cf	obj/kernel.asm	/^c01003cf:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c01003d2	obj/kernel.asm	/^c01003d2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01003d5	obj/kernel.asm	/^c01003d5:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c01003d8	obj/kernel.asm	/^c01003d8:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)$/;"	l
c01003dc	obj/kernel.asm	/^c01003dc:	75 d7                	jne    c01003b5 <cputs+0xf>$/;"	l
c01003de	obj/kernel.asm	/^c01003de:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01003e1	obj/kernel.asm	/^c01003e1:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c01003e4	obj/kernel.asm	/^c01003e4:	50                   	push   %eax$/;"	l
c01003e5	obj/kernel.asm	/^c01003e5:	6a 0a                	push   $0xa$/;"	l
c01003e7	obj/kernel.asm	/^c01003e7:	e8 2a ff ff ff       	call   c0100316 <cputch>$/;"	l
c01003ec	obj/kernel.asm	/^c01003ec:	83 c4 10             	add    $0x10,%esp$/;"	l
c01003ef	obj/kernel.asm	/^c01003ef:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01003f2	obj/kernel.asm	/^c01003f2:	c9                   	leave  $/;"	l
c01003f3	obj/kernel.asm	/^c01003f3:	c3                   	ret    $/;"	l
c01003f4	obj/kernel.asm	/^c01003f4 <getchar>:$/;"	l
c01003f4	obj/kernel.asm	/^c01003f4:	55                   	push   %ebp$/;"	l
c01003f5	obj/kernel.asm	/^c01003f5:	89 e5                	mov    %esp,%ebp$/;"	l
c01003f7	obj/kernel.asm	/^c01003f7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01003fa	obj/kernel.asm	/^c01003fa:	e8 24 1c 00 00       	call   c0102023 <cons_getc>$/;"	l
c01003ff	obj/kernel.asm	/^c01003ff:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100402	obj/kernel.asm	/^c0100402:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100406	obj/kernel.asm	/^c0100406:	74 f2                	je     c01003fa <getchar+0x6>$/;"	l
c0100408	obj/kernel.asm	/^c0100408:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010040b	obj/kernel.asm	/^c010040b:	c9                   	leave  $/;"	l
c010040c	obj/kernel.asm	/^c010040c:	c3                   	ret    $/;"	l
c010040d	obj/kernel.asm	/^c010040d <readline>:$/;"	l
c010040d	obj/kernel.asm	/^c010040d:	55                   	push   %ebp$/;"	l
c010040e	obj/kernel.asm	/^c010040e:	89 e5                	mov    %esp,%ebp$/;"	l
c0100410	obj/kernel.asm	/^c0100410:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100413	obj/kernel.asm	/^c0100413:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100417	obj/kernel.asm	/^c0100417:	74 13                	je     c010042c <readline+0x1f>$/;"	l
c0100419	obj/kernel.asm	/^c0100419:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010041c	obj/kernel.asm	/^c010041c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010041f	obj/kernel.asm	/^c010041f:	68 27 41 11 c0       	push   $0xc0114127$/;"	l
c0100424	obj/kernel.asm	/^c0100424:	e8 41 ff ff ff       	call   c010036a <cprintf>$/;"	l
c0100429	obj/kernel.asm	/^c0100429:	83 c4 10             	add    $0x10,%esp$/;"	l
c010042c	obj/kernel.asm	/^c010042c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100433	obj/kernel.asm	/^c0100433:	e8 bc ff ff ff       	call   c01003f4 <getchar>$/;"	l
c0100438	obj/kernel.asm	/^c0100438:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010043b	obj/kernel.asm	/^c010043b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010043f	obj/kernel.asm	/^c010043f:	79 0a                	jns    c010044b <readline+0x3e>$/;"	l
c0100441	obj/kernel.asm	/^c0100441:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100446	obj/kernel.asm	/^c0100446:	e9 82 00 00 00       	jmp    c01004cd <readline+0xc0>$/;"	l
c010044b	obj/kernel.asm	/^c010044b:	83 7d f0 1f          	cmpl   $0x1f,-0x10(%ebp)$/;"	l
c010044f	obj/kernel.asm	/^c010044f:	7e 2b                	jle    c010047c <readline+0x6f>$/;"	l
c0100451	obj/kernel.asm	/^c0100451:	81 7d f4 fe 03 00 00 	cmpl   $0x3fe,-0xc(%ebp)$/;"	l
c0100458	obj/kernel.asm	/^c0100458:	7f 22                	jg     c010047c <readline+0x6f>$/;"	l
c010045a	obj/kernel.asm	/^c010045a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010045d	obj/kernel.asm	/^c010045d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0100460	obj/kernel.asm	/^c0100460:	e8 2b ff ff ff       	call   c0100390 <cputchar>$/;"	l
c0100465	obj/kernel.asm	/^c0100465:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100468	obj/kernel.asm	/^c0100468:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010046b	obj/kernel.asm	/^c010046b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010046e	obj/kernel.asm	/^c010046e:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0100471	obj/kernel.asm	/^c0100471:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100474	obj/kernel.asm	/^c0100474:	88 90 c0 df 14 c0    	mov    %dl,-0x3feb2040(%eax)$/;"	l
c010047a	obj/kernel.asm	/^c010047a:	eb 4c                	jmp    c01004c8 <readline+0xbb>$/;"	l
c010047c	obj/kernel.asm	/^c010047c:	83 7d f0 08          	cmpl   $0x8,-0x10(%ebp)$/;"	l
c0100480	obj/kernel.asm	/^c0100480:	75 1a                	jne    c010049c <readline+0x8f>$/;"	l
c0100482	obj/kernel.asm	/^c0100482:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100486	obj/kernel.asm	/^c0100486:	7e 14                	jle    c010049c <readline+0x8f>$/;"	l
c0100488	obj/kernel.asm	/^c0100488:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010048b	obj/kernel.asm	/^c010048b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010048e	obj/kernel.asm	/^c010048e:	e8 fd fe ff ff       	call   c0100390 <cputchar>$/;"	l
c0100493	obj/kernel.asm	/^c0100493:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100496	obj/kernel.asm	/^c0100496:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c010049a	obj/kernel.asm	/^c010049a:	eb 2c                	jmp    c01004c8 <readline+0xbb>$/;"	l
c010049c	obj/kernel.asm	/^c010049c:	83 7d f0 0a          	cmpl   $0xa,-0x10(%ebp)$/;"	l
c01004a0	obj/kernel.asm	/^c01004a0:	74 06                	je     c01004a8 <readline+0x9b>$/;"	l
c01004a2	obj/kernel.asm	/^c01004a2:	83 7d f0 0d          	cmpl   $0xd,-0x10(%ebp)$/;"	l
c01004a6	obj/kernel.asm	/^c01004a6:	75 20                	jne    c01004c8 <readline+0xbb>$/;"	l
c01004a8	obj/kernel.asm	/^c01004a8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01004ab	obj/kernel.asm	/^c01004ab:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01004ae	obj/kernel.asm	/^c01004ae:	e8 dd fe ff ff       	call   c0100390 <cputchar>$/;"	l
c01004b3	obj/kernel.asm	/^c01004b3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01004b6	obj/kernel.asm	/^c01004b6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01004b9	obj/kernel.asm	/^c01004b9:	05 c0 df 14 c0       	add    $0xc014dfc0,%eax$/;"	l
c01004be	obj/kernel.asm	/^c01004be:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01004c1	obj/kernel.asm	/^c01004c1:	b8 c0 df 14 c0       	mov    $0xc014dfc0,%eax$/;"	l
c01004c6	obj/kernel.asm	/^c01004c6:	eb 05                	jmp    c01004cd <readline+0xc0>$/;"	l
c01004c8	obj/kernel.asm	/^c01004c8:	e9 66 ff ff ff       	jmp    c0100433 <readline+0x26>$/;"	l
c01004cd	obj/kernel.asm	/^c01004cd:	c9                   	leave  $/;"	l
c01004ce	obj/kernel.asm	/^c01004ce:	c3                   	ret    $/;"	l
c01004cf	obj/kernel.asm	/^c01004cf <__panic>:$/;"	l
c01004cf	obj/kernel.asm	/^c01004cf:	55                   	push   %ebp$/;"	l
c01004d0	obj/kernel.asm	/^c01004d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01004d2	obj/kernel.asm	/^c01004d2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01004d5	obj/kernel.asm	/^c01004d5:	a1 c0 e3 14 c0       	mov    0xc014e3c0,%eax$/;"	l
c01004da	obj/kernel.asm	/^c01004da:	85 c0                	test   %eax,%eax$/;"	l
c01004dc	obj/kernel.asm	/^c01004dc:	74 02                	je     c01004e0 <__panic+0x11>$/;"	l
c01004de	obj/kernel.asm	/^c01004de:	eb 48                	jmp    c0100528 <__panic+0x59>$/;"	l
c01004e0	obj/kernel.asm	/^c01004e0:	c7 05 c0 e3 14 c0 01 	movl   $0x1,0xc014e3c0$/;"	l
c01004e7	obj/kernel.asm	/^c01004e7:	00 00 00 $/;"	l
c01004ea	obj/kernel.asm	/^c01004ea:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c01004ed	obj/kernel.asm	/^c01004ed:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01004f0	obj/kernel.asm	/^c01004f0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01004f3	obj/kernel.asm	/^c01004f3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01004f6	obj/kernel.asm	/^c01004f6:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01004f9	obj/kernel.asm	/^c01004f9:	68 2a 41 11 c0       	push   $0xc011412a$/;"	l
c01004fe	obj/kernel.asm	/^c01004fe:	e8 67 fe ff ff       	call   c010036a <cprintf>$/;"	l
c0100503	obj/kernel.asm	/^c0100503:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100506	obj/kernel.asm	/^c0100506:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100509	obj/kernel.asm	/^c0100509:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010050c	obj/kernel.asm	/^c010050c:	50                   	push   %eax$/;"	l
c010050d	obj/kernel.asm	/^c010050d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0100510	obj/kernel.asm	/^c0100510:	e8 24 fe ff ff       	call   c0100339 <vcprintf>$/;"	l
c0100515	obj/kernel.asm	/^c0100515:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100518	obj/kernel.asm	/^c0100518:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010051b	obj/kernel.asm	/^c010051b:	68 46 41 11 c0       	push   $0xc0114146$/;"	l
c0100520	obj/kernel.asm	/^c0100520:	e8 45 fe ff ff       	call   c010036a <cprintf>$/;"	l
c0100525	obj/kernel.asm	/^c0100525:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100528	obj/kernel.asm	/^c0100528:	e8 2e 1d 00 00       	call   c010225b <intr_disable>$/;"	l
c010052d	obj/kernel.asm	/^c010052d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100530	obj/kernel.asm	/^c0100530:	6a 00                	push   $0x0$/;"	l
c0100532	obj/kernel.asm	/^c0100532:	e8 06 09 00 00       	call   c0100e3d <kmonitor>$/;"	l
c0100537	obj/kernel.asm	/^c0100537:	83 c4 10             	add    $0x10,%esp$/;"	l
c010053a	obj/kernel.asm	/^c010053a:	eb f1                	jmp    c010052d <__panic+0x5e>$/;"	l
c010053c	obj/kernel.asm	/^c010053c <__warn>:$/;"	l
c010053c	obj/kernel.asm	/^c010053c:	55                   	push   %ebp$/;"	l
c010053d	obj/kernel.asm	/^c010053d:	89 e5                	mov    %esp,%ebp$/;"	l
c010053f	obj/kernel.asm	/^c010053f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100542	obj/kernel.asm	/^c0100542:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0100545	obj/kernel.asm	/^c0100545:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100548	obj/kernel.asm	/^c0100548:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010054b	obj/kernel.asm	/^c010054b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010054e	obj/kernel.asm	/^c010054e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100551	obj/kernel.asm	/^c0100551:	68 48 41 11 c0       	push   $0xc0114148$/;"	l
c0100556	obj/kernel.asm	/^c0100556:	e8 0f fe ff ff       	call   c010036a <cprintf>$/;"	l
c010055b	obj/kernel.asm	/^c010055b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010055e	obj/kernel.asm	/^c010055e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100561	obj/kernel.asm	/^c0100561:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100564	obj/kernel.asm	/^c0100564:	50                   	push   %eax$/;"	l
c0100565	obj/kernel.asm	/^c0100565:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0100568	obj/kernel.asm	/^c0100568:	e8 cc fd ff ff       	call   c0100339 <vcprintf>$/;"	l
c010056d	obj/kernel.asm	/^c010056d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100570	obj/kernel.asm	/^c0100570:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100573	obj/kernel.asm	/^c0100573:	68 46 41 11 c0       	push   $0xc0114146$/;"	l
c0100578	obj/kernel.asm	/^c0100578:	e8 ed fd ff ff       	call   c010036a <cprintf>$/;"	l
c010057d	obj/kernel.asm	/^c010057d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100580	obj/kernel.asm	/^c0100580:	c9                   	leave  $/;"	l
c0100581	obj/kernel.asm	/^c0100581:	c3                   	ret    $/;"	l
c0100582	obj/kernel.asm	/^c0100582 <is_kernel_panic>:$/;"	l
c0100582	obj/kernel.asm	/^c0100582:	55                   	push   %ebp$/;"	l
c0100583	obj/kernel.asm	/^c0100583:	89 e5                	mov    %esp,%ebp$/;"	l
c0100585	obj/kernel.asm	/^c0100585:	a1 c0 e3 14 c0       	mov    0xc014e3c0,%eax$/;"	l
c010058a	obj/kernel.asm	/^c010058a:	5d                   	pop    %ebp$/;"	l
c010058b	obj/kernel.asm	/^c010058b:	c3                   	ret    $/;"	l
c010058c	obj/kernel.asm	/^c010058c <stab_binsearch>:$/;"	l
c010058c	obj/kernel.asm	/^c010058c:	55                   	push   %ebp$/;"	l
c010058d	obj/kernel.asm	/^c010058d:	89 e5                	mov    %esp,%ebp$/;"	l
c010058f	obj/kernel.asm	/^c010058f:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0100592	obj/kernel.asm	/^c0100592:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100595	obj/kernel.asm	/^c0100595:	8b 00                	mov    (%eax),%eax$/;"	l
c0100597	obj/kernel.asm	/^c0100597:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010059a	obj/kernel.asm	/^c010059a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010059d	obj/kernel.asm	/^c010059d:	8b 00                	mov    (%eax),%eax$/;"	l
c010059f	obj/kernel.asm	/^c010059f:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01005a2	obj/kernel.asm	/^c01005a2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01005a9	obj/kernel.asm	/^c01005a9:	e9 d2 00 00 00       	jmp    c0100680 <stab_binsearch+0xf4>$/;"	l
c01005ae	obj/kernel.asm	/^c01005ae:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01005b1	obj/kernel.asm	/^c01005b1:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01005b4	obj/kernel.asm	/^c01005b4:	01 d0                	add    %edx,%eax$/;"	l
c01005b6	obj/kernel.asm	/^c01005b6:	89 c2                	mov    %eax,%edx$/;"	l
c01005b8	obj/kernel.asm	/^c01005b8:	c1 ea 1f             	shr    $0x1f,%edx$/;"	l
c01005bb	obj/kernel.asm	/^c01005bb:	01 d0                	add    %edx,%eax$/;"	l
c01005bd	obj/kernel.asm	/^c01005bd:	d1 f8                	sar    %eax$/;"	d
c01005bf	obj/kernel.asm	/^c01005bf:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01005c2	obj/kernel.asm	/^c01005c2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01005c5	obj/kernel.asm	/^c01005c5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01005c8	obj/kernel.asm	/^c01005c8:	eb 04                	jmp    c01005ce <stab_binsearch+0x42>$/;"	l
c01005ca	obj/kernel.asm	/^c01005ca:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
c01005ce	obj/kernel.asm	/^c01005ce:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01005d1	obj/kernel.asm	/^c01005d1:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01005d4	obj/kernel.asm	/^c01005d4:	7c 1f                	jl     c01005f5 <stab_binsearch+0x69>$/;"	l
c01005d6	obj/kernel.asm	/^c01005d6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01005d9	obj/kernel.asm	/^c01005d9:	89 d0                	mov    %edx,%eax$/;"	l
c01005db	obj/kernel.asm	/^c01005db:	01 c0                	add    %eax,%eax$/;"	l
c01005dd	obj/kernel.asm	/^c01005dd:	01 d0                	add    %edx,%eax$/;"	l
c01005df	obj/kernel.asm	/^c01005df:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01005e2	obj/kernel.asm	/^c01005e2:	89 c2                	mov    %eax,%edx$/;"	l
c01005e4	obj/kernel.asm	/^c01005e4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01005e7	obj/kernel.asm	/^c01005e7:	01 d0                	add    %edx,%eax$/;"	l
c01005e9	obj/kernel.asm	/^c01005e9:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01005ed	obj/kernel.asm	/^c01005ed:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01005f0	obj/kernel.asm	/^c01005f0:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c01005f3	obj/kernel.asm	/^c01005f3:	75 d5                	jne    c01005ca <stab_binsearch+0x3e>$/;"	l
c01005f5	obj/kernel.asm	/^c01005f5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01005f8	obj/kernel.asm	/^c01005f8:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01005fb	obj/kernel.asm	/^c01005fb:	7d 0b                	jge    c0100608 <stab_binsearch+0x7c>$/;"	l
c01005fd	obj/kernel.asm	/^c01005fd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100600	obj/kernel.asm	/^c0100600:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100603	obj/kernel.asm	/^c0100603:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100606	obj/kernel.asm	/^c0100606:	eb 78                	jmp    c0100680 <stab_binsearch+0xf4>$/;"	l
c0100608	obj/kernel.asm	/^c0100608:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010060f	obj/kernel.asm	/^c010060f:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100612	obj/kernel.asm	/^c0100612:	89 d0                	mov    %edx,%eax$/;"	l
c0100614	obj/kernel.asm	/^c0100614:	01 c0                	add    %eax,%eax$/;"	l
c0100616	obj/kernel.asm	/^c0100616:	01 d0                	add    %edx,%eax$/;"	l
c0100618	obj/kernel.asm	/^c0100618:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010061b	obj/kernel.asm	/^c010061b:	89 c2                	mov    %eax,%edx$/;"	l
c010061d	obj/kernel.asm	/^c010061d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100620	obj/kernel.asm	/^c0100620:	01 d0                	add    %edx,%eax$/;"	l
c0100622	obj/kernel.asm	/^c0100622:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100625	obj/kernel.asm	/^c0100625:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c0100628	obj/kernel.asm	/^c0100628:	73 13                	jae    c010063d <stab_binsearch+0xb1>$/;"	l
c010062a	obj/kernel.asm	/^c010062a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010062d	obj/kernel.asm	/^c010062d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100630	obj/kernel.asm	/^c0100630:	89 10                	mov    %edx,(%eax)$/;"	l
c0100632	obj/kernel.asm	/^c0100632:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100635	obj/kernel.asm	/^c0100635:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100638	obj/kernel.asm	/^c0100638:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010063b	obj/kernel.asm	/^c010063b:	eb 43                	jmp    c0100680 <stab_binsearch+0xf4>$/;"	l
c010063d	obj/kernel.asm	/^c010063d:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100640	obj/kernel.asm	/^c0100640:	89 d0                	mov    %edx,%eax$/;"	l
c0100642	obj/kernel.asm	/^c0100642:	01 c0                	add    %eax,%eax$/;"	l
c0100644	obj/kernel.asm	/^c0100644:	01 d0                	add    %edx,%eax$/;"	l
c0100646	obj/kernel.asm	/^c0100646:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100649	obj/kernel.asm	/^c0100649:	89 c2                	mov    %eax,%edx$/;"	l
c010064b	obj/kernel.asm	/^c010064b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010064e	obj/kernel.asm	/^c010064e:	01 d0                	add    %edx,%eax$/;"	l
c0100650	obj/kernel.asm	/^c0100650:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100653	obj/kernel.asm	/^c0100653:	3b 45 18             	cmp    0x18(%ebp),%eax$/;"	l
c0100656	obj/kernel.asm	/^c0100656:	76 16                	jbe    c010066e <stab_binsearch+0xe2>$/;"	l
c0100658	obj/kernel.asm	/^c0100658:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010065b	obj/kernel.asm	/^c010065b:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010065e	obj/kernel.asm	/^c010065e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0100661	obj/kernel.asm	/^c0100661:	89 10                	mov    %edx,(%eax)$/;"	l
c0100663	obj/kernel.asm	/^c0100663:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100666	obj/kernel.asm	/^c0100666:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100669	obj/kernel.asm	/^c0100669:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010066c	obj/kernel.asm	/^c010066c:	eb 12                	jmp    c0100680 <stab_binsearch+0xf4>$/;"	l
c010066e	obj/kernel.asm	/^c010066e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100671	obj/kernel.asm	/^c0100671:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100674	obj/kernel.asm	/^c0100674:	89 10                	mov    %edx,(%eax)$/;"	l
c0100676	obj/kernel.asm	/^c0100676:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100679	obj/kernel.asm	/^c0100679:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010067c	obj/kernel.asm	/^c010067c:	83 45 18 01          	addl   $0x1,0x18(%ebp)$/;"	l
c0100680	obj/kernel.asm	/^c0100680:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100683	obj/kernel.asm	/^c0100683:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c0100686	obj/kernel.asm	/^c0100686:	0f 8e 22 ff ff ff    	jle    c01005ae <stab_binsearch+0x22>$/;"	l
c010068c	obj/kernel.asm	/^c010068c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100690	obj/kernel.asm	/^c0100690:	75 0f                	jne    c01006a1 <stab_binsearch+0x115>$/;"	l
c0100692	obj/kernel.asm	/^c0100692:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100695	obj/kernel.asm	/^c0100695:	8b 00                	mov    (%eax),%eax$/;"	l
c0100697	obj/kernel.asm	/^c0100697:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010069a	obj/kernel.asm	/^c010069a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010069d	obj/kernel.asm	/^c010069d:	89 10                	mov    %edx,(%eax)$/;"	l
c010069f	obj/kernel.asm	/^c010069f:	eb 3f                	jmp    c01006e0 <stab_binsearch+0x154>$/;"	l
c01006a1	obj/kernel.asm	/^c01006a1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01006a4	obj/kernel.asm	/^c01006a4:	8b 00                	mov    (%eax),%eax$/;"	l
c01006a6	obj/kernel.asm	/^c01006a6:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01006a9	obj/kernel.asm	/^c01006a9:	eb 04                	jmp    c01006af <stab_binsearch+0x123>$/;"	l
c01006ab	obj/kernel.asm	/^c01006ab:	83 6d fc 01          	subl   $0x1,-0x4(%ebp)$/;"	l
c01006af	obj/kernel.asm	/^c01006af:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01006b2	obj/kernel.asm	/^c01006b2:	8b 00                	mov    (%eax),%eax$/;"	l
c01006b4	obj/kernel.asm	/^c01006b4:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01006b7	obj/kernel.asm	/^c01006b7:	7d 1f                	jge    c01006d8 <stab_binsearch+0x14c>$/;"	l
c01006b9	obj/kernel.asm	/^c01006b9:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01006bc	obj/kernel.asm	/^c01006bc:	89 d0                	mov    %edx,%eax$/;"	l
c01006be	obj/kernel.asm	/^c01006be:	01 c0                	add    %eax,%eax$/;"	l
c01006c0	obj/kernel.asm	/^c01006c0:	01 d0                	add    %edx,%eax$/;"	l
c01006c2	obj/kernel.asm	/^c01006c2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01006c5	obj/kernel.asm	/^c01006c5:	89 c2                	mov    %eax,%edx$/;"	l
c01006c7	obj/kernel.asm	/^c01006c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01006ca	obj/kernel.asm	/^c01006ca:	01 d0                	add    %edx,%eax$/;"	l
c01006cc	obj/kernel.asm	/^c01006cc:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01006d0	obj/kernel.asm	/^c01006d0:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01006d3	obj/kernel.asm	/^c01006d3:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c01006d6	obj/kernel.asm	/^c01006d6:	75 d3                	jne    c01006ab <stab_binsearch+0x11f>$/;"	l
c01006d8	obj/kernel.asm	/^c01006d8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01006db	obj/kernel.asm	/^c01006db:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c01006de	obj/kernel.asm	/^c01006de:	89 10                	mov    %edx,(%eax)$/;"	l
c01006e0	obj/kernel.asm	/^c01006e0:	c9                   	leave  $/;"	l
c01006e1	obj/kernel.asm	/^c01006e1:	c3                   	ret    $/;"	l
c01006e2	obj/kernel.asm	/^c01006e2 <debuginfo_eip>:$/;"	l
c01006e2	obj/kernel.asm	/^c01006e2:	55                   	push   %ebp$/;"	l
c01006e3	obj/kernel.asm	/^c01006e3:	89 e5                	mov    %esp,%ebp$/;"	l
c01006e5	obj/kernel.asm	/^c01006e5:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01006e8	obj/kernel.asm	/^c01006e8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01006eb	obj/kernel.asm	/^c01006eb:	c7 00 68 41 11 c0    	movl   $0xc0114168,(%eax)$/;"	l
c01006f1	obj/kernel.asm	/^c01006f1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01006f4	obj/kernel.asm	/^c01006f4:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c01006fb	obj/kernel.asm	/^c01006fb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01006fe	obj/kernel.asm	/^c01006fe:	c7 40 08 68 41 11 c0 	movl   $0xc0114168,0x8(%eax)$/;"	l
c0100705	obj/kernel.asm	/^c0100705:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100708	obj/kernel.asm	/^c0100708:	c7 40 0c 09 00 00 00 	movl   $0x9,0xc(%eax)$/;"	l
c010070f	obj/kernel.asm	/^c010070f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100712	obj/kernel.asm	/^c0100712:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100715	obj/kernel.asm	/^c0100715:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0100718	obj/kernel.asm	/^c0100718:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010071b	obj/kernel.asm	/^c010071b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c0100722	obj/kernel.asm	/^c0100722:	81 7d 08 ff ff ff bf 	cmpl   $0xbfffffff,0x8(%ebp)$/;"	l
c0100729	obj/kernel.asm	/^c0100729:	76 21                	jbe    c010074c <debuginfo_eip+0x6a>$/;"	l
c010072b	obj/kernel.asm	/^c010072b:	c7 45 f4 a0 87 11 c0 	movl   $0xc01187a0,-0xc(%ebp)$/;"	l
c0100732	obj/kernel.asm	/^c0100732:	c7 45 f0 c4 e5 13 c0 	movl   $0xc013e5c4,-0x10(%ebp)$/;"	l
c0100739	obj/kernel.asm	/^c0100739:	c7 45 ec c5 e5 13 c0 	movl   $0xc013e5c5,-0x14(%ebp)$/;"	l
c0100740	obj/kernel.asm	/^c0100740:	c7 45 e8 7d ad 14 c0 	movl   $0xc014ad7d,-0x18(%ebp)$/;"	l
c0100747	obj/kernel.asm	/^c0100747:	e9 c3 00 00 00       	jmp    c010080f <debuginfo_eip+0x12d>$/;"	l
c010074c	obj/kernel.asm	/^c010074c:	c7 45 e4 00 00 20 00 	movl   $0x200000,-0x1c(%ebp)$/;"	l
c0100753	obj/kernel.asm	/^c0100753:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c0100758	obj/kernel.asm	/^c0100758:	85 c0                	test   %eax,%eax$/;"	l
c010075a	obj/kernel.asm	/^c010075a:	74 11                	je     c010076d <debuginfo_eip+0x8b>$/;"	l
c010075c	obj/kernel.asm	/^c010075c:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c0100761	obj/kernel.asm	/^c0100761:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0100764	obj/kernel.asm	/^c0100764:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100767	obj/kernel.asm	/^c0100767:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c010076b	obj/kernel.asm	/^c010076b:	75 0a                	jne    c0100777 <debuginfo_eip+0x95>$/;"	l
c010076d	obj/kernel.asm	/^c010076d:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100772	obj/kernel.asm	/^c0100772:	e9 4e 03 00 00       	jmp    c0100ac5 <debuginfo_eip+0x3e3>$/;"	l
c0100777	obj/kernel.asm	/^c0100777:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010077a	obj/kernel.asm	/^c010077a:	6a 00                	push   $0x0$/;"	l
c010077c	obj/kernel.asm	/^c010077c:	6a 10                	push   $0x10$/;"	l
c010077e	obj/kernel.asm	/^c010077e:	50                   	push   %eax$/;"	l
c010077f	obj/kernel.asm	/^c010077f:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0100782	obj/kernel.asm	/^c0100782:	e8 8a 59 00 00       	call   c0106111 <user_mem_check>$/;"	l
c0100787	obj/kernel.asm	/^c0100787:	83 c4 10             	add    $0x10,%esp$/;"	l
c010078a	obj/kernel.asm	/^c010078a:	85 c0                	test   %eax,%eax$/;"	l
c010078c	obj/kernel.asm	/^c010078c:	75 0a                	jne    c0100798 <debuginfo_eip+0xb6>$/;"	l
c010078e	obj/kernel.asm	/^c010078e:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100793	obj/kernel.asm	/^c0100793:	e9 2d 03 00 00       	jmp    c0100ac5 <debuginfo_eip+0x3e3>$/;"	l
c0100798	obj/kernel.asm	/^c0100798:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010079b	obj/kernel.asm	/^c010079b:	8b 00                	mov    (%eax),%eax$/;"	l
c010079d	obj/kernel.asm	/^c010079d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01007a0	obj/kernel.asm	/^c01007a0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01007a3	obj/kernel.asm	/^c01007a3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01007a6	obj/kernel.asm	/^c01007a6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01007a9	obj/kernel.asm	/^c01007a9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01007ac	obj/kernel.asm	/^c01007ac:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01007af	obj/kernel.asm	/^c01007af:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01007b2	obj/kernel.asm	/^c01007b2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01007b5	obj/kernel.asm	/^c01007b5:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01007b8	obj/kernel.asm	/^c01007b8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01007bb	obj/kernel.asm	/^c01007bb:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01007be	obj/kernel.asm	/^c01007be:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007c1	obj/kernel.asm	/^c01007c1:	29 c2                	sub    %eax,%edx$/;"	l
c01007c3	obj/kernel.asm	/^c01007c3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01007c6	obj/kernel.asm	/^c01007c6:	6a 00                	push   $0x0$/;"	l
c01007c8	obj/kernel.asm	/^c01007c8:	52                   	push   %edx$/;"	l
c01007c9	obj/kernel.asm	/^c01007c9:	50                   	push   %eax$/;"	l
c01007ca	obj/kernel.asm	/^c01007ca:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01007cd	obj/kernel.asm	/^c01007cd:	e8 3f 59 00 00       	call   c0106111 <user_mem_check>$/;"	l
c01007d2	obj/kernel.asm	/^c01007d2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01007d5	obj/kernel.asm	/^c01007d5:	85 c0                	test   %eax,%eax$/;"	l
c01007d7	obj/kernel.asm	/^c01007d7:	75 0a                	jne    c01007e3 <debuginfo_eip+0x101>$/;"	l
c01007d9	obj/kernel.asm	/^c01007d9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01007de	obj/kernel.asm	/^c01007de:	e9 e2 02 00 00       	jmp    c0100ac5 <debuginfo_eip+0x3e3>$/;"	l
c01007e3	obj/kernel.asm	/^c01007e3:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01007e6	obj/kernel.asm	/^c01007e6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01007e9	obj/kernel.asm	/^c01007e9:	29 c2                	sub    %eax,%edx$/;"	l
c01007eb	obj/kernel.asm	/^c01007eb:	89 d0                	mov    %edx,%eax$/;"	l
c01007ed	obj/kernel.asm	/^c01007ed:	89 c2                	mov    %eax,%edx$/;"	l
c01007ef	obj/kernel.asm	/^c01007ef:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01007f2	obj/kernel.asm	/^c01007f2:	6a 00                	push   $0x0$/;"	l
c01007f4	obj/kernel.asm	/^c01007f4:	52                   	push   %edx$/;"	l
c01007f5	obj/kernel.asm	/^c01007f5:	50                   	push   %eax$/;"	l
c01007f6	obj/kernel.asm	/^c01007f6:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01007f9	obj/kernel.asm	/^c01007f9:	e8 13 59 00 00       	call   c0106111 <user_mem_check>$/;"	l
c01007fe	obj/kernel.asm	/^c01007fe:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100801	obj/kernel.asm	/^c0100801:	85 c0                	test   %eax,%eax$/;"	l
c0100803	obj/kernel.asm	/^c0100803:	75 0a                	jne    c010080f <debuginfo_eip+0x12d>$/;"	l
c0100805	obj/kernel.asm	/^c0100805:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010080a	obj/kernel.asm	/^c010080a:	e9 b6 02 00 00       	jmp    c0100ac5 <debuginfo_eip+0x3e3>$/;"	l
c010080f	obj/kernel.asm	/^c010080f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100812	obj/kernel.asm	/^c0100812:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0100815	obj/kernel.asm	/^c0100815:	76 0d                	jbe    c0100824 <debuginfo_eip+0x142>$/;"	l
c0100817	obj/kernel.asm	/^c0100817:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010081a	obj/kernel.asm	/^c010081a:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010081d	obj/kernel.asm	/^c010081d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100820	obj/kernel.asm	/^c0100820:	84 c0                	test   %al,%al$/;"	l
c0100822	obj/kernel.asm	/^c0100822:	74 0a                	je     c010082e <debuginfo_eip+0x14c>$/;"	l
c0100824	obj/kernel.asm	/^c0100824:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100829	obj/kernel.asm	/^c0100829:	e9 97 02 00 00       	jmp    c0100ac5 <debuginfo_eip+0x3e3>$/;"	l
c010082e	obj/kernel.asm	/^c010082e:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0100835	obj/kernel.asm	/^c0100835:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100838	obj/kernel.asm	/^c0100838:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010083b	obj/kernel.asm	/^c010083b:	29 c2                	sub    %eax,%edx$/;"	l
c010083d	obj/kernel.asm	/^c010083d:	89 d0                	mov    %edx,%eax$/;"	l
c010083f	obj/kernel.asm	/^c010083f:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c0100842	obj/kernel.asm	/^c0100842:	69 c0 ab aa aa aa    	imul   $0xaaaaaaab,%eax,%eax$/;"	l
c0100848	obj/kernel.asm	/^c0100848:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010084b	obj/kernel.asm	/^c010084b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010084e	obj/kernel.asm	/^c010084e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100851	obj/kernel.asm	/^c0100851:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100854	obj/kernel.asm	/^c0100854:	6a 64                	push   $0x64$/;"	l
c0100856	obj/kernel.asm	/^c0100856:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c0100859	obj/kernel.asm	/^c0100859:	50                   	push   %eax$/;"	l
c010085a	obj/kernel.asm	/^c010085a:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010085d	obj/kernel.asm	/^c010085d:	50                   	push   %eax$/;"	l
c010085e	obj/kernel.asm	/^c010085e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100861	obj/kernel.asm	/^c0100861:	e8 26 fd ff ff       	call   c010058c <stab_binsearch>$/;"	l
c0100866	obj/kernel.asm	/^c0100866:	83 c4 20             	add    $0x20,%esp$/;"	l
c0100869	obj/kernel.asm	/^c0100869:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010086c	obj/kernel.asm	/^c010086c:	85 c0                	test   %eax,%eax$/;"	l
c010086e	obj/kernel.asm	/^c010086e:	75 0a                	jne    c010087a <debuginfo_eip+0x198>$/;"	l
c0100870	obj/kernel.asm	/^c0100870:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100875	obj/kernel.asm	/^c0100875:	e9 4b 02 00 00       	jmp    c0100ac5 <debuginfo_eip+0x3e3>$/;"	l
c010087a	obj/kernel.asm	/^c010087a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010087d	obj/kernel.asm	/^c010087d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0100880	obj/kernel.asm	/^c0100880:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0100883	obj/kernel.asm	/^c0100883:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0100886	obj/kernel.asm	/^c0100886:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100889	obj/kernel.asm	/^c0100889:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010088c	obj/kernel.asm	/^c010088c:	6a 24                	push   $0x24$/;"	l
c010088e	obj/kernel.asm	/^c010088e:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
c0100891	obj/kernel.asm	/^c0100891:	50                   	push   %eax$/;"	l
c0100892	obj/kernel.asm	/^c0100892:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c0100895	obj/kernel.asm	/^c0100895:	50                   	push   %eax$/;"	l
c0100896	obj/kernel.asm	/^c0100896:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100899	obj/kernel.asm	/^c0100899:	e8 ee fc ff ff       	call   c010058c <stab_binsearch>$/;"	l
c010089e	obj/kernel.asm	/^c010089e:	83 c4 20             	add    $0x20,%esp$/;"	l
c01008a1	obj/kernel.asm	/^c01008a1:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01008a4	obj/kernel.asm	/^c01008a4:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01008a7	obj/kernel.asm	/^c01008a7:	39 c2                	cmp    %eax,%edx$/;"	l
c01008a9	obj/kernel.asm	/^c01008a9:	7f 7c                	jg     c0100927 <debuginfo_eip+0x245>$/;"	l
c01008ab	obj/kernel.asm	/^c01008ab:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01008ae	obj/kernel.asm	/^c01008ae:	89 c2                	mov    %eax,%edx$/;"	l
c01008b0	obj/kernel.asm	/^c01008b0:	89 d0                	mov    %edx,%eax$/;"	l
c01008b2	obj/kernel.asm	/^c01008b2:	01 c0                	add    %eax,%eax$/;"	l
c01008b4	obj/kernel.asm	/^c01008b4:	01 d0                	add    %edx,%eax$/;"	l
c01008b6	obj/kernel.asm	/^c01008b6:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01008b9	obj/kernel.asm	/^c01008b9:	89 c2                	mov    %eax,%edx$/;"	l
c01008bb	obj/kernel.asm	/^c01008bb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01008be	obj/kernel.asm	/^c01008be:	01 d0                	add    %edx,%eax$/;"	l
c01008c0	obj/kernel.asm	/^c01008c0:	8b 00                	mov    (%eax),%eax$/;"	l
c01008c2	obj/kernel.asm	/^c01008c2:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c01008c5	obj/kernel.asm	/^c01008c5:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01008c8	obj/kernel.asm	/^c01008c8:	29 d1                	sub    %edx,%ecx$/;"	l
c01008ca	obj/kernel.asm	/^c01008ca:	89 ca                	mov    %ecx,%edx$/;"	l
c01008cc	obj/kernel.asm	/^c01008cc:	39 d0                	cmp    %edx,%eax$/;"	l
c01008ce	obj/kernel.asm	/^c01008ce:	73 22                	jae    c01008f2 <debuginfo_eip+0x210>$/;"	l
c01008d0	obj/kernel.asm	/^c01008d0:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01008d3	obj/kernel.asm	/^c01008d3:	89 c2                	mov    %eax,%edx$/;"	l
c01008d5	obj/kernel.asm	/^c01008d5:	89 d0                	mov    %edx,%eax$/;"	l
c01008d7	obj/kernel.asm	/^c01008d7:	01 c0                	add    %eax,%eax$/;"	l
c01008d9	obj/kernel.asm	/^c01008d9:	01 d0                	add    %edx,%eax$/;"	l
c01008db	obj/kernel.asm	/^c01008db:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01008de	obj/kernel.asm	/^c01008de:	89 c2                	mov    %eax,%edx$/;"	l
c01008e0	obj/kernel.asm	/^c01008e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01008e3	obj/kernel.asm	/^c01008e3:	01 d0                	add    %edx,%eax$/;"	l
c01008e5	obj/kernel.asm	/^c01008e5:	8b 10                	mov    (%eax),%edx$/;"	l
c01008e7	obj/kernel.asm	/^c01008e7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01008ea	obj/kernel.asm	/^c01008ea:	01 c2                	add    %eax,%edx$/;"	l
c01008ec	obj/kernel.asm	/^c01008ec:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01008ef	obj/kernel.asm	/^c01008ef:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01008f2	obj/kernel.asm	/^c01008f2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01008f5	obj/kernel.asm	/^c01008f5:	89 c2                	mov    %eax,%edx$/;"	l
c01008f7	obj/kernel.asm	/^c01008f7:	89 d0                	mov    %edx,%eax$/;"	l
c01008f9	obj/kernel.asm	/^c01008f9:	01 c0                	add    %eax,%eax$/;"	l
c01008fb	obj/kernel.asm	/^c01008fb:	01 d0                	add    %edx,%eax$/;"	l
c01008fd	obj/kernel.asm	/^c01008fd:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100900	obj/kernel.asm	/^c0100900:	89 c2                	mov    %eax,%edx$/;"	l
c0100902	obj/kernel.asm	/^c0100902:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100905	obj/kernel.asm	/^c0100905:	01 d0                	add    %edx,%eax$/;"	l
c0100907	obj/kernel.asm	/^c0100907:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010090a	obj/kernel.asm	/^c010090a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010090d	obj/kernel.asm	/^c010090d:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0100910	obj/kernel.asm	/^c0100910:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100913	obj/kernel.asm	/^c0100913:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0100916	obj/kernel.asm	/^c0100916:	29 45 08             	sub    %eax,0x8(%ebp)$/;"	l
c0100919	obj/kernel.asm	/^c0100919:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010091c	obj/kernel.asm	/^c010091c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010091f	obj/kernel.asm	/^c010091f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100922	obj/kernel.asm	/^c0100922:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0100925	obj/kernel.asm	/^c0100925:	eb 15                	jmp    c010093c <debuginfo_eip+0x25a>$/;"	l
c0100927	obj/kernel.asm	/^c0100927:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010092a	obj/kernel.asm	/^c010092a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010092d	obj/kernel.asm	/^c010092d:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c0100930	obj/kernel.asm	/^c0100930:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100933	obj/kernel.asm	/^c0100933:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100936	obj/kernel.asm	/^c0100936:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0100939	obj/kernel.asm	/^c0100939:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010093c	obj/kernel.asm	/^c010093c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010093f	obj/kernel.asm	/^c010093f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100942	obj/kernel.asm	/^c0100942:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100945	obj/kernel.asm	/^c0100945:	6a 3a                	push   $0x3a$/;"	l
c0100947	obj/kernel.asm	/^c0100947:	50                   	push   %eax$/;"	l
c0100948	obj/kernel.asm	/^c0100948:	e8 b6 2c 01 00       	call   c0113603 <strfind>$/;"	l
c010094d	obj/kernel.asm	/^c010094d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100950	obj/kernel.asm	/^c0100950:	89 c2                	mov    %eax,%edx$/;"	l
c0100952	obj/kernel.asm	/^c0100952:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100955	obj/kernel.asm	/^c0100955:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100958	obj/kernel.asm	/^c0100958:	29 c2                	sub    %eax,%edx$/;"	l
c010095a	obj/kernel.asm	/^c010095a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010095d	obj/kernel.asm	/^c010095d:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0100960	obj/kernel.asm	/^c0100960:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100963	obj/kernel.asm	/^c0100963:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100966	obj/kernel.asm	/^c0100966:	6a 44                	push   $0x44$/;"	l
c0100968	obj/kernel.asm	/^c0100968:	8d 45 c8             	lea    -0x38(%ebp),%eax$/;"	l
c010096b	obj/kernel.asm	/^c010096b:	50                   	push   %eax$/;"	l
c010096c	obj/kernel.asm	/^c010096c:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c010096f	obj/kernel.asm	/^c010096f:	50                   	push   %eax$/;"	l
c0100970	obj/kernel.asm	/^c0100970:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100973	obj/kernel.asm	/^c0100973:	e8 14 fc ff ff       	call   c010058c <stab_binsearch>$/;"	l
c0100978	obj/kernel.asm	/^c0100978:	83 c4 20             	add    $0x20,%esp$/;"	l
c010097b	obj/kernel.asm	/^c010097b:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010097e	obj/kernel.asm	/^c010097e:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0100981	obj/kernel.asm	/^c0100981:	39 c2                	cmp    %eax,%edx$/;"	l
c0100983	obj/kernel.asm	/^c0100983:	7f 24                	jg     c01009a9 <debuginfo_eip+0x2c7>$/;"	l
c0100985	obj/kernel.asm	/^c0100985:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0100988	obj/kernel.asm	/^c0100988:	89 c2                	mov    %eax,%edx$/;"	l
c010098a	obj/kernel.asm	/^c010098a:	89 d0                	mov    %edx,%eax$/;"	l
c010098c	obj/kernel.asm	/^c010098c:	01 c0                	add    %eax,%eax$/;"	l
c010098e	obj/kernel.asm	/^c010098e:	01 d0                	add    %edx,%eax$/;"	l
c0100990	obj/kernel.asm	/^c0100990:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100993	obj/kernel.asm	/^c0100993:	89 c2                	mov    %eax,%edx$/;"	l
c0100995	obj/kernel.asm	/^c0100995:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100998	obj/kernel.asm	/^c0100998:	01 d0                	add    %edx,%eax$/;"	l
c010099a	obj/kernel.asm	/^c010099a:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c010099e	obj/kernel.asm	/^c010099e:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c01009a1	obj/kernel.asm	/^c01009a1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01009a4	obj/kernel.asm	/^c01009a4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01009a7	obj/kernel.asm	/^c01009a7:	eb 13                	jmp    c01009bc <debuginfo_eip+0x2da>$/;"	l
c01009a9	obj/kernel.asm	/^c01009a9:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c01009ae	obj/kernel.asm	/^c01009ae:	e9 12 01 00 00       	jmp    c0100ac5 <debuginfo_eip+0x3e3>$/;"	l
c01009b3	obj/kernel.asm	/^c01009b3:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01009b6	obj/kernel.asm	/^c01009b6:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01009b9	obj/kernel.asm	/^c01009b9:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01009bc	obj/kernel.asm	/^c01009bc:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01009bf	obj/kernel.asm	/^c01009bf:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01009c2	obj/kernel.asm	/^c01009c2:	39 c2                	cmp    %eax,%edx$/;"	l
c01009c4	obj/kernel.asm	/^c01009c4:	7c 56                	jl     c0100a1c <debuginfo_eip+0x33a>$/;"	l
c01009c6	obj/kernel.asm	/^c01009c6:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01009c9	obj/kernel.asm	/^c01009c9:	89 c2                	mov    %eax,%edx$/;"	l
c01009cb	obj/kernel.asm	/^c01009cb:	89 d0                	mov    %edx,%eax$/;"	l
c01009cd	obj/kernel.asm	/^c01009cd:	01 c0                	add    %eax,%eax$/;"	l
c01009cf	obj/kernel.asm	/^c01009cf:	01 d0                	add    %edx,%eax$/;"	l
c01009d1	obj/kernel.asm	/^c01009d1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01009d4	obj/kernel.asm	/^c01009d4:	89 c2                	mov    %eax,%edx$/;"	l
c01009d6	obj/kernel.asm	/^c01009d6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01009d9	obj/kernel.asm	/^c01009d9:	01 d0                	add    %edx,%eax$/;"	l
c01009db	obj/kernel.asm	/^c01009db:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01009df	obj/kernel.asm	/^c01009df:	3c 84                	cmp    $0x84,%al$/;"	l
c01009e1	obj/kernel.asm	/^c01009e1:	74 39                	je     c0100a1c <debuginfo_eip+0x33a>$/;"	l
c01009e3	obj/kernel.asm	/^c01009e3:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01009e6	obj/kernel.asm	/^c01009e6:	89 c2                	mov    %eax,%edx$/;"	l
c01009e8	obj/kernel.asm	/^c01009e8:	89 d0                	mov    %edx,%eax$/;"	l
c01009ea	obj/kernel.asm	/^c01009ea:	01 c0                	add    %eax,%eax$/;"	l
c01009ec	obj/kernel.asm	/^c01009ec:	01 d0                	add    %edx,%eax$/;"	l
c01009ee	obj/kernel.asm	/^c01009ee:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01009f1	obj/kernel.asm	/^c01009f1:	89 c2                	mov    %eax,%edx$/;"	l
c01009f3	obj/kernel.asm	/^c01009f3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01009f6	obj/kernel.asm	/^c01009f6:	01 d0                	add    %edx,%eax$/;"	l
c01009f8	obj/kernel.asm	/^c01009f8:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c01009fc	obj/kernel.asm	/^c01009fc:	3c 64                	cmp    $0x64,%al$/;"	l
c01009fe	obj/kernel.asm	/^c01009fe:	75 b3                	jne    c01009b3 <debuginfo_eip+0x2d1>$/;"	l
c0100a00	obj/kernel.asm	/^c0100a00:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100a03	obj/kernel.asm	/^c0100a03:	89 c2                	mov    %eax,%edx$/;"	l
c0100a05	obj/kernel.asm	/^c0100a05:	89 d0                	mov    %edx,%eax$/;"	l
c0100a07	obj/kernel.asm	/^c0100a07:	01 c0                	add    %eax,%eax$/;"	l
c0100a09	obj/kernel.asm	/^c0100a09:	01 d0                	add    %edx,%eax$/;"	l
c0100a0b	obj/kernel.asm	/^c0100a0b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100a0e	obj/kernel.asm	/^c0100a0e:	89 c2                	mov    %eax,%edx$/;"	l
c0100a10	obj/kernel.asm	/^c0100a10:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a13	obj/kernel.asm	/^c0100a13:	01 d0                	add    %edx,%eax$/;"	l
c0100a15	obj/kernel.asm	/^c0100a15:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100a18	obj/kernel.asm	/^c0100a18:	85 c0                	test   %eax,%eax$/;"	l
c0100a1a	obj/kernel.asm	/^c0100a1a:	74 97                	je     c01009b3 <debuginfo_eip+0x2d1>$/;"	l
c0100a1c	obj/kernel.asm	/^c0100a1c:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0100a1f	obj/kernel.asm	/^c0100a1f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100a22	obj/kernel.asm	/^c0100a22:	39 c2                	cmp    %eax,%edx$/;"	l
c0100a24	obj/kernel.asm	/^c0100a24:	7c 46                	jl     c0100a6c <debuginfo_eip+0x38a>$/;"	l
c0100a26	obj/kernel.asm	/^c0100a26:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100a29	obj/kernel.asm	/^c0100a29:	89 c2                	mov    %eax,%edx$/;"	l
c0100a2b	obj/kernel.asm	/^c0100a2b:	89 d0                	mov    %edx,%eax$/;"	l
c0100a2d	obj/kernel.asm	/^c0100a2d:	01 c0                	add    %eax,%eax$/;"	l
c0100a2f	obj/kernel.asm	/^c0100a2f:	01 d0                	add    %edx,%eax$/;"	l
c0100a31	obj/kernel.asm	/^c0100a31:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100a34	obj/kernel.asm	/^c0100a34:	89 c2                	mov    %eax,%edx$/;"	l
c0100a36	obj/kernel.asm	/^c0100a36:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a39	obj/kernel.asm	/^c0100a39:	01 d0                	add    %edx,%eax$/;"	l
c0100a3b	obj/kernel.asm	/^c0100a3b:	8b 00                	mov    (%eax),%eax$/;"	l
c0100a3d	obj/kernel.asm	/^c0100a3d:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c0100a40	obj/kernel.asm	/^c0100a40:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0100a43	obj/kernel.asm	/^c0100a43:	29 d1                	sub    %edx,%ecx$/;"	l
c0100a45	obj/kernel.asm	/^c0100a45:	89 ca                	mov    %ecx,%edx$/;"	l
c0100a47	obj/kernel.asm	/^c0100a47:	39 d0                	cmp    %edx,%eax$/;"	l
c0100a49	obj/kernel.asm	/^c0100a49:	73 21                	jae    c0100a6c <debuginfo_eip+0x38a>$/;"	l
c0100a4b	obj/kernel.asm	/^c0100a4b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100a4e	obj/kernel.asm	/^c0100a4e:	89 c2                	mov    %eax,%edx$/;"	l
c0100a50	obj/kernel.asm	/^c0100a50:	89 d0                	mov    %edx,%eax$/;"	l
c0100a52	obj/kernel.asm	/^c0100a52:	01 c0                	add    %eax,%eax$/;"	l
c0100a54	obj/kernel.asm	/^c0100a54:	01 d0                	add    %edx,%eax$/;"	l
c0100a56	obj/kernel.asm	/^c0100a56:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100a59	obj/kernel.asm	/^c0100a59:	89 c2                	mov    %eax,%edx$/;"	l
c0100a5b	obj/kernel.asm	/^c0100a5b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100a5e	obj/kernel.asm	/^c0100a5e:	01 d0                	add    %edx,%eax$/;"	l
c0100a60	obj/kernel.asm	/^c0100a60:	8b 10                	mov    (%eax),%edx$/;"	l
c0100a62	obj/kernel.asm	/^c0100a62:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100a65	obj/kernel.asm	/^c0100a65:	01 c2                	add    %eax,%edx$/;"	l
c0100a67	obj/kernel.asm	/^c0100a67:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100a6a	obj/kernel.asm	/^c0100a6a:	89 10                	mov    %edx,(%eax)$/;"	l
c0100a6c	obj/kernel.asm	/^c0100a6c:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0100a6f	obj/kernel.asm	/^c0100a6f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100a72	obj/kernel.asm	/^c0100a72:	39 c2                	cmp    %eax,%edx$/;"	l
c0100a74	obj/kernel.asm	/^c0100a74:	7d 4a                	jge    c0100ac0 <debuginfo_eip+0x3de>$/;"	l
c0100a76	obj/kernel.asm	/^c0100a76:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0100a79	obj/kernel.asm	/^c0100a79:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100a7c	obj/kernel.asm	/^c0100a7c:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100a7f	obj/kernel.asm	/^c0100a7f:	eb 18                	jmp    c0100a99 <debuginfo_eip+0x3b7>$/;"	l
c0100a81	obj/kernel.asm	/^c0100a81:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100a84	obj/kernel.asm	/^c0100a84:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0100a87	obj/kernel.asm	/^c0100a87:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100a8a	obj/kernel.asm	/^c0100a8a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100a8d	obj/kernel.asm	/^c0100a8d:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c0100a90	obj/kernel.asm	/^c0100a90:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100a93	obj/kernel.asm	/^c0100a93:	83 c0 01             	add    $0x1,%eax$/;"	l
c0100a96	obj/kernel.asm	/^c0100a96:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0100a99	obj/kernel.asm	/^c0100a99:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0100a9c	obj/kernel.asm	/^c0100a9c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0100a9f	obj/kernel.asm	/^c0100a9f:	39 c2                	cmp    %eax,%edx$/;"	l
c0100aa1	obj/kernel.asm	/^c0100aa1:	7d 1d                	jge    c0100ac0 <debuginfo_eip+0x3de>$/;"	l
c0100aa3	obj/kernel.asm	/^c0100aa3:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0100aa6	obj/kernel.asm	/^c0100aa6:	89 c2                	mov    %eax,%edx$/;"	l
c0100aa8	obj/kernel.asm	/^c0100aa8:	89 d0                	mov    %edx,%eax$/;"	l
c0100aaa	obj/kernel.asm	/^c0100aaa:	01 c0                	add    %eax,%eax$/;"	l
c0100aac	obj/kernel.asm	/^c0100aac:	01 d0                	add    %edx,%eax$/;"	l
c0100aae	obj/kernel.asm	/^c0100aae:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100ab1	obj/kernel.asm	/^c0100ab1:	89 c2                	mov    %eax,%edx$/;"	l
c0100ab3	obj/kernel.asm	/^c0100ab3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100ab6	obj/kernel.asm	/^c0100ab6:	01 d0                	add    %edx,%eax$/;"	l
c0100ab8	obj/kernel.asm	/^c0100ab8:	0f b6 40 04          	movzbl 0x4(%eax),%eax$/;"	l
c0100abc	obj/kernel.asm	/^c0100abc:	3c a0                	cmp    $0xa0,%al$/;"	l
c0100abe	obj/kernel.asm	/^c0100abe:	74 c1                	je     c0100a81 <debuginfo_eip+0x39f>$/;"	l
c0100ac0	obj/kernel.asm	/^c0100ac0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100ac5	obj/kernel.asm	/^c0100ac5:	c9                   	leave  $/;"	l
c0100ac6	obj/kernel.asm	/^c0100ac6:	c3                   	ret    $/;"	l
c0100ac7	obj/kernel.asm	/^c0100ac7 <print_kerninfo>:$/;"	l
c0100ac7	obj/kernel.asm	/^c0100ac7:	55                   	push   %ebp$/;"	l
c0100ac8	obj/kernel.asm	/^c0100ac8:	89 e5                	mov    %esp,%ebp$/;"	l
c0100aca	obj/kernel.asm	/^c0100aca:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100acd	obj/kernel.asm	/^c0100acd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100ad0	obj/kernel.asm	/^c0100ad0:	68 72 41 11 c0       	push   $0xc0114172$/;"	l
c0100ad5	obj/kernel.asm	/^c0100ad5:	e8 90 f8 ff ff       	call   c010036a <cprintf>$/;"	l
c0100ada	obj/kernel.asm	/^c0100ada:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100add	obj/kernel.asm	/^c0100add:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100ae0	obj/kernel.asm	/^c0100ae0:	68 2a 00 10 c0       	push   $0xc010002a$/;"	l
c0100ae5	obj/kernel.asm	/^c0100ae5:	68 8b 41 11 c0       	push   $0xc011418b$/;"	l
c0100aea	obj/kernel.asm	/^c0100aea:	e8 7b f8 ff ff       	call   c010036a <cprintf>$/;"	l
c0100aef	obj/kernel.asm	/^c0100aef:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100af2	obj/kernel.asm	/^c0100af2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100af5	obj/kernel.asm	/^c0100af5:	68 60 40 11 c0       	push   $0xc0114060$/;"	l
c0100afa	obj/kernel.asm	/^c0100afa:	68 a3 41 11 c0       	push   $0xc01141a3$/;"	l
c0100aff	obj/kernel.asm	/^c0100aff:	e8 66 f8 ff ff       	call   c010036a <cprintf>$/;"	l
c0100b04	obj/kernel.asm	/^c0100b04:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b07	obj/kernel.asm	/^c0100b07:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100b0a	obj/kernel.asm	/^c0100b0a:	68 50 df 14 c0       	push   $0xc014df50$/;"	l
c0100b0f	obj/kernel.asm	/^c0100b0f:	68 bb 41 11 c0       	push   $0xc01141bb$/;"	l
c0100b14	obj/kernel.asm	/^c0100b14:	e8 51 f8 ff ff       	call   c010036a <cprintf>$/;"	l
c0100b19	obj/kernel.asm	/^c0100b19:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b1c	obj/kernel.asm	/^c0100b1c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100b1f	obj/kernel.asm	/^c0100b1f:	68 84 23 15 c0       	push   $0xc0152384$/;"	l
c0100b24	obj/kernel.asm	/^c0100b24:	68 d3 41 11 c0       	push   $0xc01141d3$/;"	l
c0100b29	obj/kernel.asm	/^c0100b29:	e8 3c f8 ff ff       	call   c010036a <cprintf>$/;"	l
c0100b2e	obj/kernel.asm	/^c0100b2e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b31	obj/kernel.asm	/^c0100b31:	b8 84 23 15 c0       	mov    $0xc0152384,%eax$/;"	l
c0100b36	obj/kernel.asm	/^c0100b36:	05 ff 03 00 00       	add    $0x3ff,%eax$/;"	l
c0100b3b	obj/kernel.asm	/^c0100b3b:	ba 2a 00 10 c0       	mov    $0xc010002a,%edx$/;"	l
c0100b40	obj/kernel.asm	/^c0100b40:	29 d0                	sub    %edx,%eax$/;"	l
c0100b42	obj/kernel.asm	/^c0100b42:	8d 90 ff 03 00 00    	lea    0x3ff(%eax),%edx$/;"	l
c0100b48	obj/kernel.asm	/^c0100b48:	85 c0                	test   %eax,%eax$/;"	l
c0100b4a	obj/kernel.asm	/^c0100b4a:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c0100b4d	obj/kernel.asm	/^c0100b4d:	c1 f8 0a             	sar    $0xa,%eax$/;"	l
c0100b50	obj/kernel.asm	/^c0100b50:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100b53	obj/kernel.asm	/^c0100b53:	50                   	push   %eax$/;"	l
c0100b54	obj/kernel.asm	/^c0100b54:	68 ec 41 11 c0       	push   $0xc01141ec$/;"	l
c0100b59	obj/kernel.asm	/^c0100b59:	e8 0c f8 ff ff       	call   c010036a <cprintf>$/;"	l
c0100b5e	obj/kernel.asm	/^c0100b5e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b61	obj/kernel.asm	/^c0100b61:	c9                   	leave  $/;"	l
c0100b62	obj/kernel.asm	/^c0100b62:	c3                   	ret    $/;"	l
c0100b63	obj/kernel.asm	/^c0100b63 <print_debuginfo>:$/;"	l
c0100b63	obj/kernel.asm	/^c0100b63:	55                   	push   %ebp$/;"	l
c0100b64	obj/kernel.asm	/^c0100b64:	89 e5                	mov    %esp,%ebp$/;"	l
c0100b66	obj/kernel.asm	/^c0100b66:	81 ec 28 01 00 00    	sub    $0x128,%esp$/;"	l
c0100b6c	obj/kernel.asm	/^c0100b6c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100b6f	obj/kernel.asm	/^c0100b6f:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0100b72	obj/kernel.asm	/^c0100b72:	50                   	push   %eax$/;"	l
c0100b73	obj/kernel.asm	/^c0100b73:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100b76	obj/kernel.asm	/^c0100b76:	e8 67 fb ff ff       	call   c01006e2 <debuginfo_eip>$/;"	l
c0100b7b	obj/kernel.asm	/^c0100b7b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b7e	obj/kernel.asm	/^c0100b7e:	85 c0                	test   %eax,%eax$/;"	l
c0100b80	obj/kernel.asm	/^c0100b80:	74 15                	je     c0100b97 <print_debuginfo+0x34>$/;"	l
c0100b82	obj/kernel.asm	/^c0100b82:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100b85	obj/kernel.asm	/^c0100b85:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100b88	obj/kernel.asm	/^c0100b88:	68 16 42 11 c0       	push   $0xc0114216$/;"	l
c0100b8d	obj/kernel.asm	/^c0100b8d:	e8 d8 f7 ff ff       	call   c010036a <cprintf>$/;"	l
c0100b92	obj/kernel.asm	/^c0100b92:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100b95	obj/kernel.asm	/^c0100b95:	eb 65                	jmp    c0100bfc <print_debuginfo+0x99>$/;"	l
c0100b97	obj/kernel.asm	/^c0100b97:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100b9e	obj/kernel.asm	/^c0100b9e:	eb 1c                	jmp    c0100bbc <print_debuginfo+0x59>$/;"	l
c0100ba0	obj/kernel.asm	/^c0100ba0:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0100ba3	obj/kernel.asm	/^c0100ba3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100ba6	obj/kernel.asm	/^c0100ba6:	01 d0                	add    %edx,%eax$/;"	l
c0100ba8	obj/kernel.asm	/^c0100ba8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100bab	obj/kernel.asm	/^c0100bab:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0100bb1	obj/kernel.asm	/^c0100bb1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100bb4	obj/kernel.asm	/^c0100bb4:	01 ca                	add    %ecx,%edx$/;"	l
c0100bb6	obj/kernel.asm	/^c0100bb6:	88 02                	mov    %al,(%edx)$/;"	l
c0100bb8	obj/kernel.asm	/^c0100bb8:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100bbc	obj/kernel.asm	/^c0100bbc:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100bbf	obj/kernel.asm	/^c0100bbf:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0100bc2	obj/kernel.asm	/^c0100bc2:	7f dc                	jg     c0100ba0 <print_debuginfo+0x3d>$/;"	l
c0100bc4	obj/kernel.asm	/^c0100bc4:	8d 95 dc fe ff ff    	lea    -0x124(%ebp),%edx$/;"	l
c0100bca	obj/kernel.asm	/^c0100bca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100bcd	obj/kernel.asm	/^c0100bcd:	01 d0                	add    %edx,%eax$/;"	l
c0100bcf	obj/kernel.asm	/^c0100bcf:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100bd2	obj/kernel.asm	/^c0100bd2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0100bd5	obj/kernel.asm	/^c0100bd5:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0100bd8	obj/kernel.asm	/^c0100bd8:	89 d1                	mov    %edx,%ecx$/;"	l
c0100bda	obj/kernel.asm	/^c0100bda:	29 c1                	sub    %eax,%ecx$/;"	l
c0100bdc	obj/kernel.asm	/^c0100bdc:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0100bdf	obj/kernel.asm	/^c0100bdf:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0100be2	obj/kernel.asm	/^c0100be2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100be5	obj/kernel.asm	/^c0100be5:	51                   	push   %ecx$/;"	l
c0100be6	obj/kernel.asm	/^c0100be6:	8d 8d dc fe ff ff    	lea    -0x124(%ebp),%ecx$/;"	l
c0100bec	obj/kernel.asm	/^c0100bec:	51                   	push   %ecx$/;"	l
c0100bed	obj/kernel.asm	/^c0100bed:	52                   	push   %edx$/;"	l
c0100bee	obj/kernel.asm	/^c0100bee:	50                   	push   %eax$/;"	l
c0100bef	obj/kernel.asm	/^c0100bef:	68 32 42 11 c0       	push   $0xc0114232$/;"	l
c0100bf4	obj/kernel.asm	/^c0100bf4:	e8 71 f7 ff ff       	call   c010036a <cprintf>$/;"	l
c0100bf9	obj/kernel.asm	/^c0100bf9:	83 c4 20             	add    $0x20,%esp$/;"	l
c0100bfc	obj/kernel.asm	/^c0100bfc:	c9                   	leave  $/;"	l
c0100bfd	obj/kernel.asm	/^c0100bfd:	c3                   	ret    $/;"	l
c0100bfe	obj/kernel.asm	/^c0100bfe <read_eip>:$/;"	l
c0100bfe	obj/kernel.asm	/^c0100bfe:	55                   	push   %ebp$/;"	l
c0100bff	obj/kernel.asm	/^c0100bff:	89 e5                	mov    %esp,%ebp$/;"	l
c0100c01	obj/kernel.asm	/^c0100c01:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0100c04	obj/kernel.asm	/^c0100c04:	8b 45 04             	mov    0x4(%ebp),%eax$/;"	l
c0100c07	obj/kernel.asm	/^c0100c07:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100c0a	obj/kernel.asm	/^c0100c0a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100c0d	obj/kernel.asm	/^c0100c0d:	c9                   	leave  $/;"	l
c0100c0e	obj/kernel.asm	/^c0100c0e:	c3                   	ret    $/;"	l
c0100c0f	obj/kernel.asm	/^c0100c0f <print_stackframe>:$/;"	l
c0100c0f	obj/kernel.asm	/^c0100c0f:	55                   	push   %ebp$/;"	l
c0100c10	obj/kernel.asm	/^c0100c10:	89 e5                	mov    %esp,%ebp$/;"	l
c0100c12	obj/kernel.asm	/^c0100c12:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0100c15	obj/kernel.asm	/^c0100c15:	89 e8                	mov    %ebp,%eax$/;"	l
c0100c17	obj/kernel.asm	/^c0100c17:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0100c1a	obj/kernel.asm	/^c0100c1a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0100c1d	obj/kernel.asm	/^c0100c1d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100c20	obj/kernel.asm	/^c0100c20:	e8 d9 ff ff ff       	call   c0100bfe <read_eip>$/;"	l
c0100c25	obj/kernel.asm	/^c0100c25:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100c28	obj/kernel.asm	/^c0100c28:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0100c2f	obj/kernel.asm	/^c0100c2f:	e9 8d 00 00 00       	jmp    c0100cc1 <print_stackframe+0xb2>$/;"	l
c0100c34	obj/kernel.asm	/^c0100c34:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100c37	obj/kernel.asm	/^c0100c37:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0100c3a	obj/kernel.asm	/^c0100c3a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100c3d	obj/kernel.asm	/^c0100c3d:	68 44 42 11 c0       	push   $0xc0114244$/;"	l
c0100c42	obj/kernel.asm	/^c0100c42:	e8 23 f7 ff ff       	call   c010036a <cprintf>$/;"	l
c0100c47	obj/kernel.asm	/^c0100c47:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100c4a	obj/kernel.asm	/^c0100c4a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100c4d	obj/kernel.asm	/^c0100c4d:	83 c0 08             	add    $0x8,%eax$/;"	l
c0100c50	obj/kernel.asm	/^c0100c50:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0100c53	obj/kernel.asm	/^c0100c53:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0100c5a	obj/kernel.asm	/^c0100c5a:	eb 26                	jmp    c0100c82 <print_stackframe+0x73>$/;"	l
c0100c5c	obj/kernel.asm	/^c0100c5c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0100c5f	obj/kernel.asm	/^c0100c5f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0100c66	obj/kernel.asm	/^c0100c66:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0100c69	obj/kernel.asm	/^c0100c69:	01 d0                	add    %edx,%eax$/;"	l
c0100c6b	obj/kernel.asm	/^c0100c6b:	8b 00                	mov    (%eax),%eax$/;"	l
c0100c6d	obj/kernel.asm	/^c0100c6d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100c70	obj/kernel.asm	/^c0100c70:	50                   	push   %eax$/;"	l
c0100c71	obj/kernel.asm	/^c0100c71:	68 60 42 11 c0       	push   $0xc0114260$/;"	l
c0100c76	obj/kernel.asm	/^c0100c76:	e8 ef f6 ff ff       	call   c010036a <cprintf>$/;"	l
c0100c7b	obj/kernel.asm	/^c0100c7b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100c7e	obj/kernel.asm	/^c0100c7e:	83 45 e8 01          	addl   $0x1,-0x18(%ebp)$/;"	l
c0100c82	obj/kernel.asm	/^c0100c82:	83 7d e8 03          	cmpl   $0x3,-0x18(%ebp)$/;"	l
c0100c86	obj/kernel.asm	/^c0100c86:	7e d4                	jle    c0100c5c <print_stackframe+0x4d>$/;"	l
c0100c88	obj/kernel.asm	/^c0100c88:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100c8b	obj/kernel.asm	/^c0100c8b:	68 68 42 11 c0       	push   $0xc0114268$/;"	l
c0100c90	obj/kernel.asm	/^c0100c90:	e8 d5 f6 ff ff       	call   c010036a <cprintf>$/;"	l
c0100c95	obj/kernel.asm	/^c0100c95:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100c98	obj/kernel.asm	/^c0100c98:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0100c9b	obj/kernel.asm	/^c0100c9b:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0100c9e	obj/kernel.asm	/^c0100c9e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100ca1	obj/kernel.asm	/^c0100ca1:	50                   	push   %eax$/;"	l
c0100ca2	obj/kernel.asm	/^c0100ca2:	e8 bc fe ff ff       	call   c0100b63 <print_debuginfo>$/;"	l
c0100ca7	obj/kernel.asm	/^c0100ca7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100caa	obj/kernel.asm	/^c0100caa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100cad	obj/kernel.asm	/^c0100cad:	83 c0 04             	add    $0x4,%eax$/;"	l
c0100cb0	obj/kernel.asm	/^c0100cb0:	8b 00                	mov    (%eax),%eax$/;"	l
c0100cb2	obj/kernel.asm	/^c0100cb2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100cb5	obj/kernel.asm	/^c0100cb5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100cb8	obj/kernel.asm	/^c0100cb8:	8b 00                	mov    (%eax),%eax$/;"	l
c0100cba	obj/kernel.asm	/^c0100cba:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100cbd	obj/kernel.asm	/^c0100cbd:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0100cc1	obj/kernel.asm	/^c0100cc1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100cc5	obj/kernel.asm	/^c0100cc5:	74 0a                	je     c0100cd1 <print_stackframe+0xc2>$/;"	l
c0100cc7	obj/kernel.asm	/^c0100cc7:	83 7d ec 13          	cmpl   $0x13,-0x14(%ebp)$/;"	l
c0100ccb	obj/kernel.asm	/^c0100ccb:	0f 8e 63 ff ff ff    	jle    c0100c34 <print_stackframe+0x25>$/;"	l
c0100cd1	obj/kernel.asm	/^c0100cd1:	c9                   	leave  $/;"	l
c0100cd2	obj/kernel.asm	/^c0100cd2:	c3                   	ret    $/;"	l
c0100cd3	obj/kernel.asm	/^c0100cd3 <parse>:$/;"	l
c0100cd3	obj/kernel.asm	/^c0100cd3:	55                   	push   %ebp$/;"	l
c0100cd4	obj/kernel.asm	/^c0100cd4:	89 e5                	mov    %esp,%ebp$/;"	l
c0100cd6	obj/kernel.asm	/^c0100cd6:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100cd9	obj/kernel.asm	/^c0100cd9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100ce0	obj/kernel.asm	/^c0100ce0:	eb 0c                	jmp    c0100cee <parse+0x1b>$/;"	l
c0100ce2	obj/kernel.asm	/^c0100ce2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100ce5	obj/kernel.asm	/^c0100ce5:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100ce8	obj/kernel.asm	/^c0100ce8:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0100ceb	obj/kernel.asm	/^c0100ceb:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100cee	obj/kernel.asm	/^c0100cee:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100cf1	obj/kernel.asm	/^c0100cf1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100cf4	obj/kernel.asm	/^c0100cf4:	84 c0                	test   %al,%al$/;"	l
c0100cf6	obj/kernel.asm	/^c0100cf6:	74 1e                	je     c0100d16 <parse+0x43>$/;"	l
c0100cf8	obj/kernel.asm	/^c0100cf8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100cfb	obj/kernel.asm	/^c0100cfb:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100cfe	obj/kernel.asm	/^c0100cfe:	0f be c0             	movsbl %al,%eax$/;"	l
c0100d01	obj/kernel.asm	/^c0100d01:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100d04	obj/kernel.asm	/^c0100d04:	50                   	push   %eax$/;"	l
c0100d05	obj/kernel.asm	/^c0100d05:	68 ec 42 11 c0       	push   $0xc01142ec$/;"	l
c0100d0a	obj/kernel.asm	/^c0100d0a:	e8 c1 28 01 00       	call   c01135d0 <strchr>$/;"	l
c0100d0f	obj/kernel.asm	/^c0100d0f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100d12	obj/kernel.asm	/^c0100d12:	85 c0                	test   %eax,%eax$/;"	l
c0100d14	obj/kernel.asm	/^c0100d14:	75 cc                	jne    c0100ce2 <parse+0xf>$/;"	l
c0100d16	obj/kernel.asm	/^c0100d16:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d19	obj/kernel.asm	/^c0100d19:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100d1c	obj/kernel.asm	/^c0100d1c:	84 c0                	test   %al,%al$/;"	l
c0100d1e	obj/kernel.asm	/^c0100d1e:	75 02                	jne    c0100d22 <parse+0x4f>$/;"	l
c0100d20	obj/kernel.asm	/^c0100d20:	eb 65                	jmp    c0100d87 <parse+0xb4>$/;"	l
c0100d22	obj/kernel.asm	/^c0100d22:	83 7d f4 0f          	cmpl   $0xf,-0xc(%ebp)$/;"	l
c0100d26	obj/kernel.asm	/^c0100d26:	75 12                	jne    c0100d3a <parse+0x67>$/;"	l
c0100d28	obj/kernel.asm	/^c0100d28:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100d2b	obj/kernel.asm	/^c0100d2b:	6a 10                	push   $0x10$/;"	l
c0100d2d	obj/kernel.asm	/^c0100d2d:	68 f1 42 11 c0       	push   $0xc01142f1$/;"	l
c0100d32	obj/kernel.asm	/^c0100d32:	e8 33 f6 ff ff       	call   c010036a <cprintf>$/;"	l
c0100d37	obj/kernel.asm	/^c0100d37:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100d3a	obj/kernel.asm	/^c0100d3a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100d3d	obj/kernel.asm	/^c0100d3d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0100d40	obj/kernel.asm	/^c0100d40:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0100d43	obj/kernel.asm	/^c0100d43:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0100d4a	obj/kernel.asm	/^c0100d4a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0100d4d	obj/kernel.asm	/^c0100d4d:	01 c2                	add    %eax,%edx$/;"	l
c0100d4f	obj/kernel.asm	/^c0100d4f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d52	obj/kernel.asm	/^c0100d52:	89 02                	mov    %eax,(%edx)$/;"	l
c0100d54	obj/kernel.asm	/^c0100d54:	eb 04                	jmp    c0100d5a <parse+0x87>$/;"	l
c0100d56	obj/kernel.asm	/^c0100d56:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0100d5a	obj/kernel.asm	/^c0100d5a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d5d	obj/kernel.asm	/^c0100d5d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100d60	obj/kernel.asm	/^c0100d60:	84 c0                	test   %al,%al$/;"	l
c0100d62	obj/kernel.asm	/^c0100d62:	74 1e                	je     c0100d82 <parse+0xaf>$/;"	l
c0100d64	obj/kernel.asm	/^c0100d64:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100d67	obj/kernel.asm	/^c0100d67:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0100d6a	obj/kernel.asm	/^c0100d6a:	0f be c0             	movsbl %al,%eax$/;"	l
c0100d6d	obj/kernel.asm	/^c0100d6d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100d70	obj/kernel.asm	/^c0100d70:	50                   	push   %eax$/;"	l
c0100d71	obj/kernel.asm	/^c0100d71:	68 ec 42 11 c0       	push   $0xc01142ec$/;"	l
c0100d76	obj/kernel.asm	/^c0100d76:	e8 55 28 01 00       	call   c01135d0 <strchr>$/;"	l
c0100d7b	obj/kernel.asm	/^c0100d7b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100d7e	obj/kernel.asm	/^c0100d7e:	85 c0                	test   %eax,%eax$/;"	l
c0100d80	obj/kernel.asm	/^c0100d80:	74 d4                	je     c0100d56 <parse+0x83>$/;"	l
c0100d82	obj/kernel.asm	/^c0100d82:	e9 59 ff ff ff       	jmp    c0100ce0 <parse+0xd>$/;"	l
c0100d87	obj/kernel.asm	/^c0100d87:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100d8a	obj/kernel.asm	/^c0100d8a:	c9                   	leave  $/;"	l
c0100d8b	obj/kernel.asm	/^c0100d8b:	c3                   	ret    $/;"	l
c0100d8c	obj/kernel.asm	/^c0100d8c <runcmd>:$/;"	l
c0100d8c	obj/kernel.asm	/^c0100d8c:	55                   	push   %ebp$/;"	l
c0100d8d	obj/kernel.asm	/^c0100d8d:	89 e5                	mov    %esp,%ebp$/;"	l
c0100d8f	obj/kernel.asm	/^c0100d8f:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0100d92	obj/kernel.asm	/^c0100d92:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100d95	obj/kernel.asm	/^c0100d95:	8d 45 b0             	lea    -0x50(%ebp),%eax$/;"	l
c0100d98	obj/kernel.asm	/^c0100d98:	50                   	push   %eax$/;"	l
c0100d99	obj/kernel.asm	/^c0100d99:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100d9c	obj/kernel.asm	/^c0100d9c:	e8 32 ff ff ff       	call   c0100cd3 <parse>$/;"	l
c0100da1	obj/kernel.asm	/^c0100da1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100da4	obj/kernel.asm	/^c0100da4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0100da7	obj/kernel.asm	/^c0100da7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0100dab	obj/kernel.asm	/^c0100dab:	75 0a                	jne    c0100db7 <runcmd+0x2b>$/;"	l
c0100dad	obj/kernel.asm	/^c0100dad:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100db2	obj/kernel.asm	/^c0100db2:	e9 84 00 00 00       	jmp    c0100e3b <runcmd+0xaf>$/;"	l
c0100db7	obj/kernel.asm	/^c0100db7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100dbe	obj/kernel.asm	/^c0100dbe:	eb 5a                	jmp    c0100e1a <runcmd+0x8e>$/;"	l
c0100dc0	obj/kernel.asm	/^c0100dc0:	8b 4d b0             	mov    -0x50(%ebp),%ecx$/;"	l
c0100dc3	obj/kernel.asm	/^c0100dc3:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100dc6	obj/kernel.asm	/^c0100dc6:	89 d0                	mov    %edx,%eax$/;"	l
c0100dc8	obj/kernel.asm	/^c0100dc8:	01 c0                	add    %eax,%eax$/;"	l
c0100dca	obj/kernel.asm	/^c0100dca:	01 d0                	add    %edx,%eax$/;"	l
c0100dcc	obj/kernel.asm	/^c0100dcc:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100dcf	obj/kernel.asm	/^c0100dcf:	05 20 d0 14 c0       	add    $0xc014d020,%eax$/;"	l
c0100dd4	obj/kernel.asm	/^c0100dd4:	8b 00                	mov    (%eax),%eax$/;"	l
c0100dd6	obj/kernel.asm	/^c0100dd6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100dd9	obj/kernel.asm	/^c0100dd9:	51                   	push   %ecx$/;"	l
c0100dda	obj/kernel.asm	/^c0100dda:	50                   	push   %eax$/;"	l
c0100ddb	obj/kernel.asm	/^c0100ddb:	e8 50 27 01 00       	call   c0113530 <strcmp>$/;"	l
c0100de0	obj/kernel.asm	/^c0100de0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100de3	obj/kernel.asm	/^c0100de3:	85 c0                	test   %eax,%eax$/;"	l
c0100de5	obj/kernel.asm	/^c0100de5:	75 2f                	jne    c0100e16 <runcmd+0x8a>$/;"	l
c0100de7	obj/kernel.asm	/^c0100de7:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100dea	obj/kernel.asm	/^c0100dea:	89 d0                	mov    %edx,%eax$/;"	l
c0100dec	obj/kernel.asm	/^c0100dec:	01 c0                	add    %eax,%eax$/;"	l
c0100dee	obj/kernel.asm	/^c0100dee:	01 d0                	add    %edx,%eax$/;"	l
c0100df0	obj/kernel.asm	/^c0100df0:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100df3	obj/kernel.asm	/^c0100df3:	05 20 d0 14 c0       	add    $0xc014d020,%eax$/;"	l
c0100df8	obj/kernel.asm	/^c0100df8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0100dfb	obj/kernel.asm	/^c0100dfb:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0100dfe	obj/kernel.asm	/^c0100dfe:	83 ea 01             	sub    $0x1,%edx$/;"	l
c0100e01	obj/kernel.asm	/^c0100e01:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100e04	obj/kernel.asm	/^c0100e04:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0100e07	obj/kernel.asm	/^c0100e07:	8d 4d b0             	lea    -0x50(%ebp),%ecx$/;"	l
c0100e0a	obj/kernel.asm	/^c0100e0a:	83 c1 04             	add    $0x4,%ecx$/;"	l
c0100e0d	obj/kernel.asm	/^c0100e0d:	51                   	push   %ecx$/;"	l
c0100e0e	obj/kernel.asm	/^c0100e0e:	52                   	push   %edx$/;"	l
c0100e0f	obj/kernel.asm	/^c0100e0f:	ff d0                	call   *%eax$/;"	l
c0100e11	obj/kernel.asm	/^c0100e11:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100e14	obj/kernel.asm	/^c0100e14:	eb 25                	jmp    c0100e3b <runcmd+0xaf>$/;"	l
c0100e16	obj/kernel.asm	/^c0100e16:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100e1a	obj/kernel.asm	/^c0100e1a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100e1d	obj/kernel.asm	/^c0100e1d:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100e20	obj/kernel.asm	/^c0100e20:	76 9e                	jbe    c0100dc0 <runcmd+0x34>$/;"	l
c0100e22	obj/kernel.asm	/^c0100e22:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0100e25	obj/kernel.asm	/^c0100e25:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100e28	obj/kernel.asm	/^c0100e28:	50                   	push   %eax$/;"	l
c0100e29	obj/kernel.asm	/^c0100e29:	68 0f 43 11 c0       	push   $0xc011430f$/;"	l
c0100e2e	obj/kernel.asm	/^c0100e2e:	e8 37 f5 ff ff       	call   c010036a <cprintf>$/;"	l
c0100e33	obj/kernel.asm	/^c0100e33:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100e36	obj/kernel.asm	/^c0100e36:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100e3b	obj/kernel.asm	/^c0100e3b:	c9                   	leave  $/;"	l
c0100e3c	obj/kernel.asm	/^c0100e3c:	c3                   	ret    $/;"	l
c0100e3d	obj/kernel.asm	/^c0100e3d <kmonitor>:$/;"	l
c0100e3d	obj/kernel.asm	/^c0100e3d:	55                   	push   %ebp$/;"	l
c0100e3e	obj/kernel.asm	/^c0100e3e:	89 e5                	mov    %esp,%ebp$/;"	l
c0100e40	obj/kernel.asm	/^c0100e40:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100e43	obj/kernel.asm	/^c0100e43:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100e46	obj/kernel.asm	/^c0100e46:	68 28 43 11 c0       	push   $0xc0114328$/;"	l
c0100e4b	obj/kernel.asm	/^c0100e4b:	e8 1a f5 ff ff       	call   c010036a <cprintf>$/;"	l
c0100e50	obj/kernel.asm	/^c0100e50:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100e53	obj/kernel.asm	/^c0100e53:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100e56	obj/kernel.asm	/^c0100e56:	68 50 43 11 c0       	push   $0xc0114350$/;"	l
c0100e5b	obj/kernel.asm	/^c0100e5b:	e8 0a f5 ff ff       	call   c010036a <cprintf>$/;"	l
c0100e60	obj/kernel.asm	/^c0100e60:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100e63	obj/kernel.asm	/^c0100e63:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0100e67	obj/kernel.asm	/^c0100e67:	74 0e                	je     c0100e77 <kmonitor+0x3a>$/;"	l
c0100e69	obj/kernel.asm	/^c0100e69:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100e6c	obj/kernel.asm	/^c0100e6c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100e6f	obj/kernel.asm	/^c0100e6f:	e8 bc 15 00 00       	call   c0102430 <print_trapframe>$/;"	l
c0100e74	obj/kernel.asm	/^c0100e74:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100e77	obj/kernel.asm	/^c0100e77:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0100e7a	obj/kernel.asm	/^c0100e7a:	68 75 43 11 c0       	push   $0xc0114375$/;"	l
c0100e7f	obj/kernel.asm	/^c0100e7f:	e8 89 f5 ff ff       	call   c010040d <readline>$/;"	l
c0100e84	obj/kernel.asm	/^c0100e84:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100e87	obj/kernel.asm	/^c0100e87:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0100e8a	obj/kernel.asm	/^c0100e8a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0100e8e	obj/kernel.asm	/^c0100e8e:	74 17                	je     c0100ea7 <kmonitor+0x6a>$/;"	l
c0100e90	obj/kernel.asm	/^c0100e90:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100e93	obj/kernel.asm	/^c0100e93:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0100e96	obj/kernel.asm	/^c0100e96:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0100e99	obj/kernel.asm	/^c0100e99:	e8 ee fe ff ff       	call   c0100d8c <runcmd>$/;"	l
c0100e9e	obj/kernel.asm	/^c0100e9e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100ea1	obj/kernel.asm	/^c0100ea1:	85 c0                	test   %eax,%eax$/;"	l
c0100ea3	obj/kernel.asm	/^c0100ea3:	79 02                	jns    c0100ea7 <kmonitor+0x6a>$/;"	l
c0100ea5	obj/kernel.asm	/^c0100ea5:	eb 02                	jmp    c0100ea9 <kmonitor+0x6c>$/;"	l
c0100ea7	obj/kernel.asm	/^c0100ea7:	eb ce                	jmp    c0100e77 <kmonitor+0x3a>$/;"	l
c0100ea9	obj/kernel.asm	/^c0100ea9:	c9                   	leave  $/;"	l
c0100eaa	obj/kernel.asm	/^c0100eaa:	c3                   	ret    $/;"	l
c0100eab	obj/kernel.asm	/^c0100eab <mon_help>:$/;"	l
c0100eab	obj/kernel.asm	/^c0100eab:	55                   	push   %ebp$/;"	l
c0100eac	obj/kernel.asm	/^c0100eac:	89 e5                	mov    %esp,%ebp$/;"	l
c0100eae	obj/kernel.asm	/^c0100eae:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0100eb1	obj/kernel.asm	/^c0100eb1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0100eb8	obj/kernel.asm	/^c0100eb8:	eb 3d                	jmp    c0100ef7 <mon_help+0x4c>$/;"	l
c0100eba	obj/kernel.asm	/^c0100eba:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100ebd	obj/kernel.asm	/^c0100ebd:	89 d0                	mov    %edx,%eax$/;"	l
c0100ebf	obj/kernel.asm	/^c0100ebf:	01 c0                	add    %eax,%eax$/;"	l
c0100ec1	obj/kernel.asm	/^c0100ec1:	01 d0                	add    %edx,%eax$/;"	l
c0100ec3	obj/kernel.asm	/^c0100ec3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100ec6	obj/kernel.asm	/^c0100ec6:	05 20 d0 14 c0       	add    $0xc014d020,%eax$/;"	l
c0100ecb	obj/kernel.asm	/^c0100ecb:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c0100ece	obj/kernel.asm	/^c0100ece:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0100ed1	obj/kernel.asm	/^c0100ed1:	89 d0                	mov    %edx,%eax$/;"	l
c0100ed3	obj/kernel.asm	/^c0100ed3:	01 c0                	add    %eax,%eax$/;"	l
c0100ed5	obj/kernel.asm	/^c0100ed5:	01 d0                	add    %edx,%eax$/;"	l
c0100ed7	obj/kernel.asm	/^c0100ed7:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0100eda	obj/kernel.asm	/^c0100eda:	05 20 d0 14 c0       	add    $0xc014d020,%eax$/;"	l
c0100edf	obj/kernel.asm	/^c0100edf:	8b 00                	mov    (%eax),%eax$/;"	l
c0100ee1	obj/kernel.asm	/^c0100ee1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0100ee4	obj/kernel.asm	/^c0100ee4:	51                   	push   %ecx$/;"	l
c0100ee5	obj/kernel.asm	/^c0100ee5:	50                   	push   %eax$/;"	l
c0100ee6	obj/kernel.asm	/^c0100ee6:	68 79 43 11 c0       	push   $0xc0114379$/;"	l
c0100eeb	obj/kernel.asm	/^c0100eeb:	e8 7a f4 ff ff       	call   c010036a <cprintf>$/;"	l
c0100ef0	obj/kernel.asm	/^c0100ef0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0100ef3	obj/kernel.asm	/^c0100ef3:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0100ef7	obj/kernel.asm	/^c0100ef7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0100efa	obj/kernel.asm	/^c0100efa:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0100efd	obj/kernel.asm	/^c0100efd:	76 bb                	jbe    c0100eba <mon_help+0xf>$/;"	l
c0100eff	obj/kernel.asm	/^c0100eff:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100f04	obj/kernel.asm	/^c0100f04:	c9                   	leave  $/;"	l
c0100f05	obj/kernel.asm	/^c0100f05:	c3                   	ret    $/;"	l
c0100f06	obj/kernel.asm	/^c0100f06 <mon_kerninfo>:$/;"	l
c0100f06	obj/kernel.asm	/^c0100f06:	55                   	push   %ebp$/;"	l
c0100f07	obj/kernel.asm	/^c0100f07:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f09	obj/kernel.asm	/^c0100f09:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100f0c	obj/kernel.asm	/^c0100f0c:	e8 b6 fb ff ff       	call   c0100ac7 <print_kerninfo>$/;"	l
c0100f11	obj/kernel.asm	/^c0100f11:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100f16	obj/kernel.asm	/^c0100f16:	c9                   	leave  $/;"	l
c0100f17	obj/kernel.asm	/^c0100f17:	c3                   	ret    $/;"	l
c0100f18	obj/kernel.asm	/^c0100f18 <mon_backtrace>:$/;"	l
c0100f18	obj/kernel.asm	/^c0100f18:	55                   	push   %ebp$/;"	l
c0100f19	obj/kernel.asm	/^c0100f19:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f1b	obj/kernel.asm	/^c0100f1b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0100f1e	obj/kernel.asm	/^c0100f1e:	e8 ec fc ff ff       	call   c0100c0f <print_stackframe>$/;"	l
c0100f23	obj/kernel.asm	/^c0100f23:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100f28	obj/kernel.asm	/^c0100f28:	c9                   	leave  $/;"	l
c0100f29	obj/kernel.asm	/^c0100f29:	c3                   	ret    $/;"	l
c0100f2a	obj/kernel.asm	/^c0100f2a <ide_wait_ready>:$/;"	l
c0100f2a	obj/kernel.asm	/^c0100f2a:	55                   	push   %ebp$/;"	l
c0100f2b	obj/kernel.asm	/^c0100f2b:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f2d	obj/kernel.asm	/^c0100f2d:	83 ec 14             	sub    $0x14,%esp$/;"	l
c0100f30	obj/kernel.asm	/^c0100f30:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0100f33	obj/kernel.asm	/^c0100f33:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c0100f37	obj/kernel.asm	/^c0100f37:	90                   	nop$/;"	l
c0100f38	obj/kernel.asm	/^c0100f38:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0100f3c	obj/kernel.asm	/^c0100f3c:	83 c0 07             	add    $0x7,%eax$/;"	l
c0100f3f	obj/kernel.asm	/^c0100f3f:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100f42	obj/kernel.asm	/^c0100f42:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c0100f46	obj/kernel.asm	/^c0100f46:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0100f4a	obj/kernel.asm	/^c0100f4a:	89 c2                	mov    %eax,%edx$/;"	l
c0100f4c	obj/kernel.asm	/^c0100f4c:	ec                   	in     (%dx),%al$/;"	l
c0100f4d	obj/kernel.asm	/^c0100f4d:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0100f50	obj/kernel.asm	/^c0100f50:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0100f54	obj/kernel.asm	/^c0100f54:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100f57	obj/kernel.asm	/^c0100f57:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0100f5a	obj/kernel.asm	/^c0100f5a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100f5d	obj/kernel.asm	/^c0100f5d:	25 80 00 00 00       	and    $0x80,%eax$/;"	l
c0100f62	obj/kernel.asm	/^c0100f62:	85 c0                	test   %eax,%eax$/;"	l
c0100f64	obj/kernel.asm	/^c0100f64:	75 d2                	jne    c0100f38 <ide_wait_ready+0xe>$/;"	l
c0100f66	obj/kernel.asm	/^c0100f66:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0100f6a	obj/kernel.asm	/^c0100f6a:	74 11                	je     c0100f7d <ide_wait_ready+0x53>$/;"	l
c0100f6c	obj/kernel.asm	/^c0100f6c:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0100f6f	obj/kernel.asm	/^c0100f6f:	83 e0 21             	and    $0x21,%eax$/;"	l
c0100f72	obj/kernel.asm	/^c0100f72:	85 c0                	test   %eax,%eax$/;"	l
c0100f74	obj/kernel.asm	/^c0100f74:	74 07                	je     c0100f7d <ide_wait_ready+0x53>$/;"	l
c0100f76	obj/kernel.asm	/^c0100f76:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0100f7b	obj/kernel.asm	/^c0100f7b:	eb 05                	jmp    c0100f82 <ide_wait_ready+0x58>$/;"	l
c0100f7d	obj/kernel.asm	/^c0100f7d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0100f82	obj/kernel.asm	/^c0100f82:	c9                   	leave  $/;"	l
c0100f83	obj/kernel.asm	/^c0100f83:	c3                   	ret    $/;"	l
c0100f84	obj/kernel.asm	/^c0100f84 <ide_init>:$/;"	l
c0100f84	obj/kernel.asm	/^c0100f84:	55                   	push   %ebp$/;"	l
c0100f85	obj/kernel.asm	/^c0100f85:	89 e5                	mov    %esp,%ebp$/;"	l
c0100f87	obj/kernel.asm	/^c0100f87:	57                   	push   %edi$/;"	l
c0100f88	obj/kernel.asm	/^c0100f88:	53                   	push   %ebx$/;"	l
c0100f89	obj/kernel.asm	/^c0100f89:	81 ec 40 02 00 00    	sub    $0x240,%esp$/;"	l
c0100f8f	obj/kernel.asm	/^c0100f8f:	66 c7 45 f6 00 00    	movw   $0x0,-0xa(%ebp)$/;"	l
c0100f95	obj/kernel.asm	/^c0100f95:	e9 c1 02 00 00       	jmp    c010125b <ide_init+0x2d7>$/;"	l
c0100f9a	obj/kernel.asm	/^c0100f9a:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100f9e	obj/kernel.asm	/^c0100f9e:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0100fa1	obj/kernel.asm	/^c0100fa1:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0100fa8	obj/kernel.asm	/^c0100fa8:	29 c2                	sub    %eax,%edx$/;"	l
c0100faa	obj/kernel.asm	/^c0100faa:	89 d0                	mov    %edx,%eax$/;"	l
c0100fac	obj/kernel.asm	/^c0100fac:	05 00 e4 14 c0       	add    $0xc014e400,%eax$/;"	l
c0100fb1	obj/kernel.asm	/^c0100fb1:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0100fb4	obj/kernel.asm	/^c0100fb4:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100fb8	obj/kernel.asm	/^c0100fb8:	66 d1 e8             	shr    %ax$/;"	l
c0100fbb	obj/kernel.asm	/^c0100fbb:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0100fbe	obj/kernel.asm	/^c0100fbe:	0f b7 04 85 84 43 11 	movzwl -0x3feebc7c(,%eax,4),%eax$/;"	l
c0100fc5	obj/kernel.asm	/^c0100fc5:	c0 $/;"	l
c0100fc6	obj/kernel.asm	/^c0100fc6:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0100fca	obj/kernel.asm	/^c0100fca:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0100fce	obj/kernel.asm	/^c0100fce:	6a 00                	push   $0x0$/;"	l
c0100fd0	obj/kernel.asm	/^c0100fd0:	50                   	push   %eax$/;"	l
c0100fd1	obj/kernel.asm	/^c0100fd1:	e8 54 ff ff ff       	call   c0100f2a <ide_wait_ready>$/;"	l
c0100fd6	obj/kernel.asm	/^c0100fd6:	83 c4 08             	add    $0x8,%esp$/;"	l
c0100fd9	obj/kernel.asm	/^c0100fd9:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0100fdd	obj/kernel.asm	/^c0100fdd:	83 e0 01             	and    $0x1,%eax$/;"	l
c0100fe0	obj/kernel.asm	/^c0100fe0:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0100fe3	obj/kernel.asm	/^c0100fe3:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0100fe6	obj/kernel.asm	/^c0100fe6:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0100fe9	obj/kernel.asm	/^c0100fe9:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0100fed	obj/kernel.asm	/^c0100fed:	83 c2 06             	add    $0x6,%edx$/;"	l
c0100ff0	obj/kernel.asm	/^c0100ff0:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0100ff3	obj/kernel.asm	/^c0100ff3:	66 89 55 d2          	mov    %dx,-0x2e(%ebp)$/;"	l
c0100ff7	obj/kernel.asm	/^c0100ff7:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c0100ffa	obj/kernel.asm	/^c0100ffa:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c0100ffe	obj/kernel.asm	/^c0100ffe:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c0101002	obj/kernel.asm	/^c0101002:	ee                   	out    %al,(%dx)$/;"	l
c0101003	obj/kernel.asm	/^c0101003:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0101007	obj/kernel.asm	/^c0101007:	6a 00                	push   $0x0$/;"	l
c0101009	obj/kernel.asm	/^c0101009:	50                   	push   %eax$/;"	l
c010100a	obj/kernel.asm	/^c010100a:	e8 1b ff ff ff       	call   c0100f2a <ide_wait_ready>$/;"	l
c010100f	obj/kernel.asm	/^c010100f:	83 c4 08             	add    $0x8,%esp$/;"	l
c0101012	obj/kernel.asm	/^c0101012:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0101016	obj/kernel.asm	/^c0101016:	83 c0 07             	add    $0x7,%eax$/;"	l
c0101019	obj/kernel.asm	/^c0101019:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010101c	obj/kernel.asm	/^c010101c:	66 89 45 ce          	mov    %ax,-0x32(%ebp)$/;"	l
c0101020	obj/kernel.asm	/^c0101020:	c6 45 cd ec          	movb   $0xec,-0x33(%ebp)$/;"	l
c0101024	obj/kernel.asm	/^c0101024:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c0101028	obj/kernel.asm	/^c0101028:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c010102c	obj/kernel.asm	/^c010102c:	ee                   	out    %al,(%dx)$/;"	l
c010102d	obj/kernel.asm	/^c010102d:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0101031	obj/kernel.asm	/^c0101031:	6a 00                	push   $0x0$/;"	l
c0101033	obj/kernel.asm	/^c0101033:	50                   	push   %eax$/;"	l
c0101034	obj/kernel.asm	/^c0101034:	e8 f1 fe ff ff       	call   c0100f2a <ide_wait_ready>$/;"	l
c0101039	obj/kernel.asm	/^c0101039:	83 c4 08             	add    $0x8,%esp$/;"	l
c010103c	obj/kernel.asm	/^c010103c:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0101040	obj/kernel.asm	/^c0101040:	83 c0 07             	add    $0x7,%eax$/;"	l
c0101043	obj/kernel.asm	/^c0101043:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101046	obj/kernel.asm	/^c0101046:	66 89 45 ca          	mov    %ax,-0x36(%ebp)$/;"	l
c010104a	obj/kernel.asm	/^c010104a:	0f b7 45 ca          	movzwl -0x36(%ebp),%eax$/;"	l
c010104e	obj/kernel.asm	/^c010104e:	89 c2                	mov    %eax,%edx$/;"	l
c0101050	obj/kernel.asm	/^c0101050:	ec                   	in     (%dx),%al$/;"	l
c0101051	obj/kernel.asm	/^c0101051:	88 45 c9             	mov    %al,-0x37(%ebp)$/;"	l
c0101054	obj/kernel.asm	/^c0101054:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c0101058	obj/kernel.asm	/^c0101058:	84 c0                	test   %al,%al$/;"	l
c010105a	obj/kernel.asm	/^c010105a:	0f 84 f0 01 00 00    	je     c0101250 <ide_init+0x2cc>$/;"	l
c0101060	obj/kernel.asm	/^c0101060:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0101064	obj/kernel.asm	/^c0101064:	6a 01                	push   $0x1$/;"	l
c0101066	obj/kernel.asm	/^c0101066:	50                   	push   %eax$/;"	l
c0101067	obj/kernel.asm	/^c0101067:	e8 be fe ff ff       	call   c0100f2a <ide_wait_ready>$/;"	l
c010106c	obj/kernel.asm	/^c010106c:	83 c4 08             	add    $0x8,%esp$/;"	l
c010106f	obj/kernel.asm	/^c010106f:	85 c0                	test   %eax,%eax$/;"	l
c0101071	obj/kernel.asm	/^c0101071:	0f 85 d9 01 00 00    	jne    c0101250 <ide_init+0x2cc>$/;"	l
c0101077	obj/kernel.asm	/^c0101077:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010107b	obj/kernel.asm	/^c010107b:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010107e	obj/kernel.asm	/^c010107e:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101085	obj/kernel.asm	/^c0101085:	29 c2                	sub    %eax,%edx$/;"	l
c0101087	obj/kernel.asm	/^c0101087:	89 d0                	mov    %edx,%eax$/;"	l
c0101089	obj/kernel.asm	/^c0101089:	05 00 e4 14 c0       	add    $0xc014e400,%eax$/;"	l
c010108e	obj/kernel.asm	/^c010108e:	c6 00 01             	movb   $0x1,(%eax)$/;"	l
c0101091	obj/kernel.asm	/^c0101091:	0f b7 45 ea          	movzwl -0x16(%ebp),%eax$/;"	l
c0101095	obj/kernel.asm	/^c0101095:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0101098	obj/kernel.asm	/^c0101098:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c010109e	obj/kernel.asm	/^c010109e:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c01010a1	obj/kernel.asm	/^c01010a1:	c7 45 bc 80 00 00 00 	movl   $0x80,-0x44(%ebp)$/;"	l
c01010a8	obj/kernel.asm	/^c01010a8:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c01010ab	obj/kernel.asm	/^c01010ab:	8b 4d c0             	mov    -0x40(%ebp),%ecx$/;"	l
c01010ae	obj/kernel.asm	/^c01010ae:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c01010b1	obj/kernel.asm	/^c01010b1:	89 cb                	mov    %ecx,%ebx$/;"	l
c01010b3	obj/kernel.asm	/^c01010b3:	89 df                	mov    %ebx,%edi$/;"	l
c01010b5	obj/kernel.asm	/^c01010b5:	89 c1                	mov    %eax,%ecx$/;"	l
c01010b7	obj/kernel.asm	/^c01010b7:	fc                   	cld    $/;"	l
c01010b8	obj/kernel.asm	/^c01010b8:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c01010ba	obj/kernel.asm	/^c01010ba:	89 c8                	mov    %ecx,%eax$/;"	l
c01010bc	obj/kernel.asm	/^c01010bc:	89 fb                	mov    %edi,%ebx$/;"	l
c01010be	obj/kernel.asm	/^c01010be:	89 5d c0             	mov    %ebx,-0x40(%ebp)$/;"	l
c01010c1	obj/kernel.asm	/^c01010c1:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c01010c4	obj/kernel.asm	/^c01010c4:	8d 85 bc fd ff ff    	lea    -0x244(%ebp),%eax$/;"	l
c01010ca	obj/kernel.asm	/^c01010ca:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01010cd	obj/kernel.asm	/^c01010cd:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01010d0	obj/kernel.asm	/^c01010d0:	8b 80 a4 00 00 00    	mov    0xa4(%eax),%eax$/;"	l
c01010d6	obj/kernel.asm	/^c01010d6:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01010d9	obj/kernel.asm	/^c01010d9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01010dc	obj/kernel.asm	/^c01010dc:	25 00 00 00 04       	and    $0x4000000,%eax$/;"	l
c01010e1	obj/kernel.asm	/^c01010e1:	85 c0                	test   %eax,%eax$/;"	l
c01010e3	obj/kernel.asm	/^c01010e3:	74 0e                	je     c01010f3 <ide_init+0x16f>$/;"	l
c01010e5	obj/kernel.asm	/^c01010e5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01010e8	obj/kernel.asm	/^c01010e8:	8b 80 c8 00 00 00    	mov    0xc8(%eax),%eax$/;"	l
c01010ee	obj/kernel.asm	/^c01010ee:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01010f1	obj/kernel.asm	/^c01010f1:	eb 09                	jmp    c01010fc <ide_init+0x178>$/;"	l
c01010f3	obj/kernel.asm	/^c01010f3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01010f6	obj/kernel.asm	/^c01010f6:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c01010f9	obj/kernel.asm	/^c01010f9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01010fc	obj/kernel.asm	/^c01010fc:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101100	obj/kernel.asm	/^c0101100:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101103	obj/kernel.asm	/^c0101103:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010110a	obj/kernel.asm	/^c010110a:	29 c2                	sub    %eax,%edx$/;"	l
c010110c	obj/kernel.asm	/^c010110c:	89 d0                	mov    %edx,%eax$/;"	l
c010110e	obj/kernel.asm	/^c010110e:	8d 90 00 e4 14 c0    	lea    -0x3feb1c00(%eax),%edx$/;"	l
c0101114	obj/kernel.asm	/^c0101114:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0101117	obj/kernel.asm	/^c0101117:	89 42 04             	mov    %eax,0x4(%edx)$/;"	l
c010111a	obj/kernel.asm	/^c010111a:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c010111e	obj/kernel.asm	/^c010111e:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101121	obj/kernel.asm	/^c0101121:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101128	obj/kernel.asm	/^c0101128:	29 c2                	sub    %eax,%edx$/;"	l
c010112a	obj/kernel.asm	/^c010112a:	89 d0                	mov    %edx,%eax$/;"	l
c010112c	obj/kernel.asm	/^c010112c:	8d 90 00 e4 14 c0    	lea    -0x3feb1c00(%eax),%edx$/;"	l
c0101132	obj/kernel.asm	/^c0101132:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0101135	obj/kernel.asm	/^c0101135:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c0101138	obj/kernel.asm	/^c0101138:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010113b	obj/kernel.asm	/^c010113b:	83 c0 62             	add    $0x62,%eax$/;"	l
c010113e	obj/kernel.asm	/^c010113e:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c0101141	obj/kernel.asm	/^c0101141:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101144	obj/kernel.asm	/^c0101144:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0101149	obj/kernel.asm	/^c0101149:	85 c0                	test   %eax,%eax$/;"	l
c010114b	obj/kernel.asm	/^c010114b:	75 16                	jne    c0101163 <ide_init+0x1df>$/;"	l
c010114d	obj/kernel.asm	/^c010114d:	68 8c 43 11 c0       	push   $0xc011438c$/;"	l
c0101152	obj/kernel.asm	/^c0101152:	68 cf 43 11 c0       	push   $0xc01143cf$/;"	l
c0101157	obj/kernel.asm	/^c0101157:	6a 7d                	push   $0x7d$/;"	l
c0101159	obj/kernel.asm	/^c0101159:	68 e4 43 11 c0       	push   $0xc01143e4$/;"	l
c010115e	obj/kernel.asm	/^c010115e:	e8 6c f3 ff ff       	call   c01004cf <__panic>$/;"	l
c0101163	obj/kernel.asm	/^c0101163:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101167	obj/kernel.asm	/^c0101167:	89 c2                	mov    %eax,%edx$/;"	l
c0101169	obj/kernel.asm	/^c0101169:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c0101170	obj/kernel.asm	/^c0101170:	89 c2                	mov    %eax,%edx$/;"	l
c0101172	obj/kernel.asm	/^c0101172:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c0101179	obj/kernel.asm	/^c0101179:	29 d0                	sub    %edx,%eax$/;"	l
c010117b	obj/kernel.asm	/^c010117b:	05 00 e4 14 c0       	add    $0xc014e400,%eax$/;"	l
c0101180	obj/kernel.asm	/^c0101180:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0101183	obj/kernel.asm	/^c0101183:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0101186	obj/kernel.asm	/^c0101186:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0101189	obj/kernel.asm	/^c0101189:	83 c0 36             	add    $0x36,%eax$/;"	l
c010118c	obj/kernel.asm	/^c010118c:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010118f	obj/kernel.asm	/^c010118f:	c7 45 d4 28 00 00 00 	movl   $0x28,-0x2c(%ebp)$/;"	l
c0101196	obj/kernel.asm	/^c0101196:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010119d	obj/kernel.asm	/^c010119d:	eb 34                	jmp    c01011d3 <ide_init+0x24f>$/;"	l
c010119f	obj/kernel.asm	/^c010119f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01011a2	obj/kernel.asm	/^c01011a2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01011a5	obj/kernel.asm	/^c01011a5:	01 c2                	add    %eax,%edx$/;"	l
c01011a7	obj/kernel.asm	/^c01011a7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01011aa	obj/kernel.asm	/^c01011aa:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c01011ad	obj/kernel.asm	/^c01011ad:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01011b0	obj/kernel.asm	/^c01011b0:	01 c8                	add    %ecx,%eax$/;"	l
c01011b2	obj/kernel.asm	/^c01011b2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01011b5	obj/kernel.asm	/^c01011b5:	88 02                	mov    %al,(%edx)$/;"	l
c01011b7	obj/kernel.asm	/^c01011b7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01011ba	obj/kernel.asm	/^c01011ba:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01011bd	obj/kernel.asm	/^c01011bd:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01011c0	obj/kernel.asm	/^c01011c0:	01 c2                	add    %eax,%edx$/;"	l
c01011c2	obj/kernel.asm	/^c01011c2:	8b 4d d8             	mov    -0x28(%ebp),%ecx$/;"	l
c01011c5	obj/kernel.asm	/^c01011c5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01011c8	obj/kernel.asm	/^c01011c8:	01 c8                	add    %ecx,%eax$/;"	l
c01011ca	obj/kernel.asm	/^c01011ca:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01011cd	obj/kernel.asm	/^c01011cd:	88 02                	mov    %al,(%edx)$/;"	l
c01011cf	obj/kernel.asm	/^c01011cf:	83 45 ec 02          	addl   $0x2,-0x14(%ebp)$/;"	l
c01011d3	obj/kernel.asm	/^c01011d3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01011d6	obj/kernel.asm	/^c01011d6:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c01011d9	obj/kernel.asm	/^c01011d9:	72 c4                	jb     c010119f <ide_init+0x21b>$/;"	l
c01011db	obj/kernel.asm	/^c01011db:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01011de	obj/kernel.asm	/^c01011de:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01011e1	obj/kernel.asm	/^c01011e1:	01 d0                	add    %edx,%eax$/;"	l
c01011e3	obj/kernel.asm	/^c01011e3:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01011e6	obj/kernel.asm	/^c01011e6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01011e9	obj/kernel.asm	/^c01011e9:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01011ec	obj/kernel.asm	/^c01011ec:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c01011ef	obj/kernel.asm	/^c01011ef:	85 c0                	test   %eax,%eax$/;"	l
c01011f1	obj/kernel.asm	/^c01011f1:	74 0f                	je     c0101202 <ide_init+0x27e>$/;"	l
c01011f3	obj/kernel.asm	/^c01011f3:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01011f6	obj/kernel.asm	/^c01011f6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01011f9	obj/kernel.asm	/^c01011f9:	01 d0                	add    %edx,%eax$/;"	l
c01011fb	obj/kernel.asm	/^c01011fb:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01011fe	obj/kernel.asm	/^c01011fe:	3c 20                	cmp    $0x20,%al$/;"	l
c0101200	obj/kernel.asm	/^c0101200:	74 d9                	je     c01011db <ide_init+0x257>$/;"	l
c0101202	obj/kernel.asm	/^c0101202:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101206	obj/kernel.asm	/^c0101206:	89 c2                	mov    %eax,%edx$/;"	l
c0101208	obj/kernel.asm	/^c0101208:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c010120f	obj/kernel.asm	/^c010120f:	89 c2                	mov    %eax,%edx$/;"	l
c0101211	obj/kernel.asm	/^c0101211:	8d 04 d5 00 00 00 00 	lea    0x0(,%edx,8),%eax$/;"	l
c0101218	obj/kernel.asm	/^c0101218:	29 d0                	sub    %edx,%eax$/;"	l
c010121a	obj/kernel.asm	/^c010121a:	05 00 e4 14 c0       	add    $0xc014e400,%eax$/;"	l
c010121f	obj/kernel.asm	/^c010121f:	8d 48 0c             	lea    0xc(%eax),%ecx$/;"	l
c0101222	obj/kernel.asm	/^c0101222:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101226	obj/kernel.asm	/^c0101226:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101229	obj/kernel.asm	/^c0101229:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101230	obj/kernel.asm	/^c0101230:	29 c2                	sub    %eax,%edx$/;"	l
c0101232	obj/kernel.asm	/^c0101232:	89 d0                	mov    %edx,%eax$/;"	l
c0101234	obj/kernel.asm	/^c0101234:	05 00 e4 14 c0       	add    $0xc014e400,%eax$/;"	l
c0101239	obj/kernel.asm	/^c0101239:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010123c	obj/kernel.asm	/^c010123c:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101240	obj/kernel.asm	/^c0101240:	51                   	push   %ecx$/;"	l
c0101241	obj/kernel.asm	/^c0101241:	52                   	push   %edx$/;"	l
c0101242	obj/kernel.asm	/^c0101242:	50                   	push   %eax$/;"	l
c0101243	obj/kernel.asm	/^c0101243:	68 f6 43 11 c0       	push   $0xc01143f6$/;"	l
c0101248	obj/kernel.asm	/^c0101248:	e8 1d f1 ff ff       	call   c010036a <cprintf>$/;"	l
c010124d	obj/kernel.asm	/^c010124d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101250	obj/kernel.asm	/^c0101250:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101254	obj/kernel.asm	/^c0101254:	83 c0 01             	add    $0x1,%eax$/;"	l
c0101257	obj/kernel.asm	/^c0101257:	66 89 45 f6          	mov    %ax,-0xa(%ebp)$/;"	l
c010125b	obj/kernel.asm	/^c010125b:	66 83 7d f6 03       	cmpw   $0x3,-0xa(%ebp)$/;"	l
c0101260	obj/kernel.asm	/^c0101260:	0f 86 34 fd ff ff    	jbe    c0100f9a <ide_init+0x16>$/;"	l
c0101266	obj/kernel.asm	/^c0101266:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101269	obj/kernel.asm	/^c0101269:	6a 0e                	push   $0xe$/;"	l
c010126b	obj/kernel.asm	/^c010126b:	e8 7d 0e 00 00       	call   c01020ed <pic_enable>$/;"	l
c0101270	obj/kernel.asm	/^c0101270:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101273	obj/kernel.asm	/^c0101273:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101276	obj/kernel.asm	/^c0101276:	6a 0f                	push   $0xf$/;"	l
c0101278	obj/kernel.asm	/^c0101278:	e8 70 0e 00 00       	call   c01020ed <pic_enable>$/;"	l
c010127d	obj/kernel.asm	/^c010127d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101280	obj/kernel.asm	/^c0101280:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c0101283	obj/kernel.asm	/^c0101283:	5b                   	pop    %ebx$/;"	l
c0101284	obj/kernel.asm	/^c0101284:	5f                   	pop    %edi$/;"	l
c0101285	obj/kernel.asm	/^c0101285:	5d                   	pop    %ebp$/;"	l
c0101286	obj/kernel.asm	/^c0101286:	c3                   	ret    $/;"	l
c0101287	obj/kernel.asm	/^c0101287 <ide_device_valid>:$/;"	l
c0101287	obj/kernel.asm	/^c0101287:	55                   	push   %ebp$/;"	l
c0101288	obj/kernel.asm	/^c0101288:	89 e5                	mov    %esp,%ebp$/;"	l
c010128a	obj/kernel.asm	/^c010128a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010128d	obj/kernel.asm	/^c010128d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101290	obj/kernel.asm	/^c0101290:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c0101294	obj/kernel.asm	/^c0101294:	66 83 7d fc 03       	cmpw   $0x3,-0x4(%ebp)$/;"	l
c0101299	obj/kernel.asm	/^c0101299:	77 25                	ja     c01012c0 <ide_device_valid+0x39>$/;"	l
c010129b	obj/kernel.asm	/^c010129b:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c010129f	obj/kernel.asm	/^c010129f:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01012a2	obj/kernel.asm	/^c01012a2:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01012a9	obj/kernel.asm	/^c01012a9:	29 c2                	sub    %eax,%edx$/;"	l
c01012ab	obj/kernel.asm	/^c01012ab:	89 d0                	mov    %edx,%eax$/;"	l
c01012ad	obj/kernel.asm	/^c01012ad:	05 00 e4 14 c0       	add    $0xc014e400,%eax$/;"	l
c01012b2	obj/kernel.asm	/^c01012b2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01012b5	obj/kernel.asm	/^c01012b5:	84 c0                	test   %al,%al$/;"	l
c01012b7	obj/kernel.asm	/^c01012b7:	74 07                	je     c01012c0 <ide_device_valid+0x39>$/;"	l
c01012b9	obj/kernel.asm	/^c01012b9:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01012be	obj/kernel.asm	/^c01012be:	eb 05                	jmp    c01012c5 <ide_device_valid+0x3e>$/;"	l
c01012c0	obj/kernel.asm	/^c01012c0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01012c5	obj/kernel.asm	/^c01012c5:	c9                   	leave  $/;"	l
c01012c6	obj/kernel.asm	/^c01012c6:	c3                   	ret    $/;"	l
c01012c7	obj/kernel.asm	/^c01012c7 <ide_device_size>:$/;"	l
c01012c7	obj/kernel.asm	/^c01012c7:	55                   	push   %ebp$/;"	l
c01012c8	obj/kernel.asm	/^c01012c8:	89 e5                	mov    %esp,%ebp$/;"	l
c01012ca	obj/kernel.asm	/^c01012ca:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01012cd	obj/kernel.asm	/^c01012cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01012d0	obj/kernel.asm	/^c01012d0:	66 89 45 fc          	mov    %ax,-0x4(%ebp)$/;"	l
c01012d4	obj/kernel.asm	/^c01012d4:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c01012d8	obj/kernel.asm	/^c01012d8:	50                   	push   %eax$/;"	l
c01012d9	obj/kernel.asm	/^c01012d9:	e8 a9 ff ff ff       	call   c0101287 <ide_device_valid>$/;"	l
c01012de	obj/kernel.asm	/^c01012de:	83 c4 04             	add    $0x4,%esp$/;"	l
c01012e1	obj/kernel.asm	/^c01012e1:	85 c0                	test   %eax,%eax$/;"	l
c01012e3	obj/kernel.asm	/^c01012e3:	74 1c                	je     c0101301 <ide_device_size+0x3a>$/;"	l
c01012e5	obj/kernel.asm	/^c01012e5:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax$/;"	l
c01012e9	obj/kernel.asm	/^c01012e9:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c01012ec	obj/kernel.asm	/^c01012ec:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01012f3	obj/kernel.asm	/^c01012f3:	29 c2                	sub    %eax,%edx$/;"	l
c01012f5	obj/kernel.asm	/^c01012f5:	89 d0                	mov    %edx,%eax$/;"	l
c01012f7	obj/kernel.asm	/^c01012f7:	05 00 e4 14 c0       	add    $0xc014e400,%eax$/;"	l
c01012fc	obj/kernel.asm	/^c01012fc:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01012ff	obj/kernel.asm	/^c01012ff:	eb 05                	jmp    c0101306 <ide_device_size+0x3f>$/;"	l
c0101301	obj/kernel.asm	/^c0101301:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101306	obj/kernel.asm	/^c0101306:	c9                   	leave  $/;"	l
c0101307	obj/kernel.asm	/^c0101307:	c3                   	ret    $/;"	l
c0101308	obj/kernel.asm	/^c0101308 <ide_read_secs>:$/;"	l
c0101308	obj/kernel.asm	/^c0101308:	55                   	push   %ebp$/;"	l
c0101309	obj/kernel.asm	/^c0101309:	89 e5                	mov    %esp,%ebp$/;"	l
c010130b	obj/kernel.asm	/^c010130b:	57                   	push   %edi$/;"	l
c010130c	obj/kernel.asm	/^c010130c:	53                   	push   %ebx$/;"	l
c010130d	obj/kernel.asm	/^c010130d:	83 ec 40             	sub    $0x40,%esp$/;"	l
c0101310	obj/kernel.asm	/^c0101310:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101313	obj/kernel.asm	/^c0101313:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101317	obj/kernel.asm	/^c0101317:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c010131e	obj/kernel.asm	/^c010131e:	77 25                	ja     c0101345 <ide_read_secs+0x3d>$/;"	l
c0101320	obj/kernel.asm	/^c0101320:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c0101325	obj/kernel.asm	/^c0101325:	77 1e                	ja     c0101345 <ide_read_secs+0x3d>$/;"	l
c0101327	obj/kernel.asm	/^c0101327:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c010132b	obj/kernel.asm	/^c010132b:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010132e	obj/kernel.asm	/^c010132e:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0101335	obj/kernel.asm	/^c0101335:	29 c2                	sub    %eax,%edx$/;"	l
c0101337	obj/kernel.asm	/^c0101337:	89 d0                	mov    %edx,%eax$/;"	l
c0101339	obj/kernel.asm	/^c0101339:	05 00 e4 14 c0       	add    $0xc014e400,%eax$/;"	l
c010133e	obj/kernel.asm	/^c010133e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101341	obj/kernel.asm	/^c0101341:	84 c0                	test   %al,%al$/;"	l
c0101343	obj/kernel.asm	/^c0101343:	75 19                	jne    c010135e <ide_read_secs+0x56>$/;"	l
c0101345	obj/kernel.asm	/^c0101345:	68 14 44 11 c0       	push   $0xc0114414$/;"	l
c010134a	obj/kernel.asm	/^c010134a:	68 cf 43 11 c0       	push   $0xc01143cf$/;"	l
c010134f	obj/kernel.asm	/^c010134f:	68 9f 00 00 00       	push   $0x9f$/;"	l
c0101354	obj/kernel.asm	/^c0101354:	68 e4 43 11 c0       	push   $0xc01143e4$/;"	l
c0101359	obj/kernel.asm	/^c0101359:	e8 71 f1 ff ff       	call   c01004cf <__panic>$/;"	l
c010135e	obj/kernel.asm	/^c010135e:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c0101365	obj/kernel.asm	/^c0101365:	77 0f                	ja     c0101376 <ide_read_secs+0x6e>$/;"	l
c0101367	obj/kernel.asm	/^c0101367:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010136a	obj/kernel.asm	/^c010136a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010136d	obj/kernel.asm	/^c010136d:	01 d0                	add    %edx,%eax$/;"	l
c010136f	obj/kernel.asm	/^c010136f:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c0101374	obj/kernel.asm	/^c0101374:	76 19                	jbe    c010138f <ide_read_secs+0x87>$/;"	l
c0101376	obj/kernel.asm	/^c0101376:	68 3c 44 11 c0       	push   $0xc011443c$/;"	l
c010137b	obj/kernel.asm	/^c010137b:	68 cf 43 11 c0       	push   $0xc01143cf$/;"	l
c0101380	obj/kernel.asm	/^c0101380:	68 a0 00 00 00       	push   $0xa0$/;"	l
c0101385	obj/kernel.asm	/^c0101385:	68 e4 43 11 c0       	push   $0xc01143e4$/;"	l
c010138a	obj/kernel.asm	/^c010138a:	e8 40 f1 ff ff       	call   c01004cf <__panic>$/;"	l
c010138f	obj/kernel.asm	/^c010138f:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101393	obj/kernel.asm	/^c0101393:	66 d1 e8             	shr    %ax$/;"	l
c0101396	obj/kernel.asm	/^c0101396:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101399	obj/kernel.asm	/^c0101399:	0f b7 04 85 84 43 11 	movzwl -0x3feebc7c(,%eax,4),%eax$/;"	l
c01013a0	obj/kernel.asm	/^c01013a0:	c0 $/;"	l
c01013a1	obj/kernel.asm	/^c01013a1:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c01013a5	obj/kernel.asm	/^c01013a5:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01013a9	obj/kernel.asm	/^c01013a9:	66 d1 e8             	shr    %ax$/;"	l
c01013ac	obj/kernel.asm	/^c01013ac:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01013af	obj/kernel.asm	/^c01013af:	0f b7 04 85 86 43 11 	movzwl -0x3feebc7a(,%eax,4),%eax$/;"	l
c01013b6	obj/kernel.asm	/^c01013b6:	c0 $/;"	l
c01013b7	obj/kernel.asm	/^c01013b7:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c01013bb	obj/kernel.asm	/^c01013bb:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01013bf	obj/kernel.asm	/^c01013bf:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01013c2	obj/kernel.asm	/^c01013c2:	6a 00                	push   $0x0$/;"	l
c01013c4	obj/kernel.asm	/^c01013c4:	50                   	push   %eax$/;"	l
c01013c5	obj/kernel.asm	/^c01013c5:	e8 60 fb ff ff       	call   c0100f2a <ide_wait_ready>$/;"	l
c01013ca	obj/kernel.asm	/^c01013ca:	83 c4 10             	add    $0x10,%esp$/;"	l
c01013cd	obj/kernel.asm	/^c01013cd:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c01013d1	obj/kernel.asm	/^c01013d1:	83 c0 02             	add    $0x2,%eax$/;"	l
c01013d4	obj/kernel.asm	/^c01013d4:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01013d7	obj/kernel.asm	/^c01013d7:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c01013db	obj/kernel.asm	/^c01013db:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c01013df	obj/kernel.asm	/^c01013df:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01013e3	obj/kernel.asm	/^c01013e3:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01013e7	obj/kernel.asm	/^c01013e7:	ee                   	out    %al,(%dx)$/;"	l
c01013e8	obj/kernel.asm	/^c01013e8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01013eb	obj/kernel.asm	/^c01013eb:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01013ee	obj/kernel.asm	/^c01013ee:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01013f2	obj/kernel.asm	/^c01013f2:	83 c2 02             	add    $0x2,%edx$/;"	l
c01013f5	obj/kernel.asm	/^c01013f5:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01013f8	obj/kernel.asm	/^c01013f8:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c01013fc	obj/kernel.asm	/^c01013fc:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c01013ff	obj/kernel.asm	/^c01013ff:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101403	obj/kernel.asm	/^c0101403:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101407	obj/kernel.asm	/^c0101407:	ee                   	out    %al,(%dx)$/;"	l
c0101408	obj/kernel.asm	/^c0101408:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010140b	obj/kernel.asm	/^c010140b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010140e	obj/kernel.asm	/^c010140e:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101412	obj/kernel.asm	/^c0101412:	83 c2 03             	add    $0x3,%edx$/;"	l
c0101415	obj/kernel.asm	/^c0101415:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101418	obj/kernel.asm	/^c0101418:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c010141c	obj/kernel.asm	/^c010141c:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c010141f	obj/kernel.asm	/^c010141f:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101423	obj/kernel.asm	/^c0101423:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101427	obj/kernel.asm	/^c0101427:	ee                   	out    %al,(%dx)$/;"	l
c0101428	obj/kernel.asm	/^c0101428:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010142b	obj/kernel.asm	/^c010142b:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c010142e	obj/kernel.asm	/^c010142e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101431	obj/kernel.asm	/^c0101431:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101435	obj/kernel.asm	/^c0101435:	83 c2 04             	add    $0x4,%edx$/;"	l
c0101438	obj/kernel.asm	/^c0101438:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010143b	obj/kernel.asm	/^c010143b:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c010143f	obj/kernel.asm	/^c010143f:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c0101442	obj/kernel.asm	/^c0101442:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c0101446	obj/kernel.asm	/^c0101446:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c010144a	obj/kernel.asm	/^c010144a:	ee                   	out    %al,(%dx)$/;"	l
c010144b	obj/kernel.asm	/^c010144b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010144e	obj/kernel.asm	/^c010144e:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101451	obj/kernel.asm	/^c0101451:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101454	obj/kernel.asm	/^c0101454:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101458	obj/kernel.asm	/^c0101458:	83 c2 05             	add    $0x5,%edx$/;"	l
c010145b	obj/kernel.asm	/^c010145b:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c010145e	obj/kernel.asm	/^c010145e:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c0101462	obj/kernel.asm	/^c0101462:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c0101465	obj/kernel.asm	/^c0101465:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0101469	obj/kernel.asm	/^c0101469:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c010146d	obj/kernel.asm	/^c010146d:	ee                   	out    %al,(%dx)$/;"	l
c010146e	obj/kernel.asm	/^c010146e:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101472	obj/kernel.asm	/^c0101472:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101475	obj/kernel.asm	/^c0101475:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0101478	obj/kernel.asm	/^c0101478:	89 c2                	mov    %eax,%edx$/;"	l
c010147a	obj/kernel.asm	/^c010147a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010147d	obj/kernel.asm	/^c010147d:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c0101480	obj/kernel.asm	/^c0101480:	83 e0 0f             	and    $0xf,%eax$/;"	l
c0101483	obj/kernel.asm	/^c0101483:	09 d0                	or     %edx,%eax$/;"	l
c0101485	obj/kernel.asm	/^c0101485:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c0101488	obj/kernel.asm	/^c0101488:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010148b	obj/kernel.asm	/^c010148b:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010148f	obj/kernel.asm	/^c010148f:	83 c2 06             	add    $0x6,%edx$/;"	l
c0101492	obj/kernel.asm	/^c0101492:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101495	obj/kernel.asm	/^c0101495:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c0101499	obj/kernel.asm	/^c0101499:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c010149c	obj/kernel.asm	/^c010149c:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c01014a0	obj/kernel.asm	/^c01014a0:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c01014a4	obj/kernel.asm	/^c01014a4:	ee                   	out    %al,(%dx)$/;"	l
c01014a5	obj/kernel.asm	/^c01014a5:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01014a9	obj/kernel.asm	/^c01014a9:	83 c0 07             	add    $0x7,%eax$/;"	l
c01014ac	obj/kernel.asm	/^c01014ac:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01014af	obj/kernel.asm	/^c01014af:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c01014b3	obj/kernel.asm	/^c01014b3:	c6 45 d5 20          	movb   $0x20,-0x2b(%ebp)$/;"	l
c01014b7	obj/kernel.asm	/^c01014b7:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c01014bb	obj/kernel.asm	/^c01014bb:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c01014bf	obj/kernel.asm	/^c01014bf:	ee                   	out    %al,(%dx)$/;"	l
c01014c0	obj/kernel.asm	/^c01014c0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01014c7	obj/kernel.asm	/^c01014c7:	eb 58                	jmp    c0101521 <ide_read_secs+0x219>$/;"	l
c01014c9	obj/kernel.asm	/^c01014c9:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01014cd	obj/kernel.asm	/^c01014cd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01014d0	obj/kernel.asm	/^c01014d0:	6a 01                	push   $0x1$/;"	l
c01014d2	obj/kernel.asm	/^c01014d2:	50                   	push   %eax$/;"	l
c01014d3	obj/kernel.asm	/^c01014d3:	e8 52 fa ff ff       	call   c0100f2a <ide_wait_ready>$/;"	l
c01014d8	obj/kernel.asm	/^c01014d8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01014db	obj/kernel.asm	/^c01014db:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01014de	obj/kernel.asm	/^c01014de:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01014e2	obj/kernel.asm	/^c01014e2:	74 02                	je     c01014e6 <ide_read_secs+0x1de>$/;"	l
c01014e4	obj/kernel.asm	/^c01014e4:	eb 41                	jmp    c0101527 <ide_read_secs+0x21f>$/;"	l
c01014e6	obj/kernel.asm	/^c01014e6:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01014ea	obj/kernel.asm	/^c01014ea:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c01014ed	obj/kernel.asm	/^c01014ed:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01014f0	obj/kernel.asm	/^c01014f0:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01014f3	obj/kernel.asm	/^c01014f3:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c01014fa	obj/kernel.asm	/^c01014fa:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c01014fd	obj/kernel.asm	/^c01014fd:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c0101500	obj/kernel.asm	/^c0101500:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0101503	obj/kernel.asm	/^c0101503:	89 cb                	mov    %ecx,%ebx$/;"	l
c0101505	obj/kernel.asm	/^c0101505:	89 df                	mov    %ebx,%edi$/;"	l
c0101507	obj/kernel.asm	/^c0101507:	89 c1                	mov    %eax,%ecx$/;"	l
c0101509	obj/kernel.asm	/^c0101509:	fc                   	cld    $/;"	l
c010150a	obj/kernel.asm	/^c010150a:	f2 6d                	repnz insl (%dx),%es:(%edi)$/;"	l
c010150c	obj/kernel.asm	/^c010150c:	89 c8                	mov    %ecx,%eax$/;"	l
c010150e	obj/kernel.asm	/^c010150e:	89 fb                	mov    %edi,%ebx$/;"	l
c0101510	obj/kernel.asm	/^c0101510:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c0101513	obj/kernel.asm	/^c0101513:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0101516	obj/kernel.asm	/^c0101516:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c010151a	obj/kernel.asm	/^c010151a:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c0101521	obj/kernel.asm	/^c0101521:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0101525	obj/kernel.asm	/^c0101525:	75 a2                	jne    c01014c9 <ide_read_secs+0x1c1>$/;"	l
c0101527	obj/kernel.asm	/^c0101527:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010152a	obj/kernel.asm	/^c010152a:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c010152d	obj/kernel.asm	/^c010152d:	5b                   	pop    %ebx$/;"	l
c010152e	obj/kernel.asm	/^c010152e:	5f                   	pop    %edi$/;"	l
c010152f	obj/kernel.asm	/^c010152f:	5d                   	pop    %ebp$/;"	l
c0101530	obj/kernel.asm	/^c0101530:	c3                   	ret    $/;"	l
c0101531	obj/kernel.asm	/^c0101531 <ide_write_secs>:$/;"	l
c0101531	obj/kernel.asm	/^c0101531:	55                   	push   %ebp$/;"	l
c0101532	obj/kernel.asm	/^c0101532:	89 e5                	mov    %esp,%ebp$/;"	l
c0101534	obj/kernel.asm	/^c0101534:	56                   	push   %esi$/;"	l
c0101535	obj/kernel.asm	/^c0101535:	53                   	push   %ebx$/;"	l
c0101536	obj/kernel.asm	/^c0101536:	83 ec 40             	sub    $0x40,%esp$/;"	l
c0101539	obj/kernel.asm	/^c0101539:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010153c	obj/kernel.asm	/^c010153c:	66 89 45 c4          	mov    %ax,-0x3c(%ebp)$/;"	l
c0101540	obj/kernel.asm	/^c0101540:	81 7d 14 80 00 00 00 	cmpl   $0x80,0x14(%ebp)$/;"	l
c0101547	obj/kernel.asm	/^c0101547:	77 25                	ja     c010156e <ide_write_secs+0x3d>$/;"	l
c0101549	obj/kernel.asm	/^c0101549:	66 83 7d c4 03       	cmpw   $0x3,-0x3c(%ebp)$/;"	l
c010154e	obj/kernel.asm	/^c010154e:	77 1e                	ja     c010156e <ide_write_secs+0x3d>$/;"	l
c0101550	obj/kernel.asm	/^c0101550:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c0101554	obj/kernel.asm	/^c0101554:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0101557	obj/kernel.asm	/^c0101557:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010155e	obj/kernel.asm	/^c010155e:	29 c2                	sub    %eax,%edx$/;"	l
c0101560	obj/kernel.asm	/^c0101560:	89 d0                	mov    %edx,%eax$/;"	l
c0101562	obj/kernel.asm	/^c0101562:	05 00 e4 14 c0       	add    $0xc014e400,%eax$/;"	l
c0101567	obj/kernel.asm	/^c0101567:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010156a	obj/kernel.asm	/^c010156a:	84 c0                	test   %al,%al$/;"	l
c010156c	obj/kernel.asm	/^c010156c:	75 19                	jne    c0101587 <ide_write_secs+0x56>$/;"	l
c010156e	obj/kernel.asm	/^c010156e:	68 14 44 11 c0       	push   $0xc0114414$/;"	l
c0101573	obj/kernel.asm	/^c0101573:	68 cf 43 11 c0       	push   $0xc01143cf$/;"	l
c0101578	obj/kernel.asm	/^c0101578:	68 bc 00 00 00       	push   $0xbc$/;"	l
c010157d	obj/kernel.asm	/^c010157d:	68 e4 43 11 c0       	push   $0xc01143e4$/;"	l
c0101582	obj/kernel.asm	/^c0101582:	e8 48 ef ff ff       	call   c01004cf <__panic>$/;"	l
c0101587	obj/kernel.asm	/^c0101587:	81 7d 0c ff ff ff 0f 	cmpl   $0xfffffff,0xc(%ebp)$/;"	l
c010158e	obj/kernel.asm	/^c010158e:	77 0f                	ja     c010159f <ide_write_secs+0x6e>$/;"	l
c0101590	obj/kernel.asm	/^c0101590:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0101593	obj/kernel.asm	/^c0101593:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101596	obj/kernel.asm	/^c0101596:	01 d0                	add    %edx,%eax$/;"	l
c0101598	obj/kernel.asm	/^c0101598:	3d 00 00 00 10       	cmp    $0x10000000,%eax$/;"	l
c010159d	obj/kernel.asm	/^c010159d:	76 19                	jbe    c01015b8 <ide_write_secs+0x87>$/;"	l
c010159f	obj/kernel.asm	/^c010159f:	68 3c 44 11 c0       	push   $0xc011443c$/;"	l
c01015a4	obj/kernel.asm	/^c01015a4:	68 cf 43 11 c0       	push   $0xc01143cf$/;"	l
c01015a9	obj/kernel.asm	/^c01015a9:	68 bd 00 00 00       	push   $0xbd$/;"	l
c01015ae	obj/kernel.asm	/^c01015ae:	68 e4 43 11 c0       	push   $0xc01143e4$/;"	l
c01015b3	obj/kernel.asm	/^c01015b3:	e8 17 ef ff ff       	call   c01004cf <__panic>$/;"	l
c01015b8	obj/kernel.asm	/^c01015b8:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01015bc	obj/kernel.asm	/^c01015bc:	66 d1 e8             	shr    %ax$/;"	l
c01015bf	obj/kernel.asm	/^c01015bf:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01015c2	obj/kernel.asm	/^c01015c2:	0f b7 04 85 84 43 11 	movzwl -0x3feebc7c(,%eax,4),%eax$/;"	l
c01015c9	obj/kernel.asm	/^c01015c9:	c0 $/;"	l
c01015ca	obj/kernel.asm	/^c01015ca:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c01015ce	obj/kernel.asm	/^c01015ce:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c01015d2	obj/kernel.asm	/^c01015d2:	66 d1 e8             	shr    %ax$/;"	l
c01015d5	obj/kernel.asm	/^c01015d5:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01015d8	obj/kernel.asm	/^c01015d8:	0f b7 04 85 86 43 11 	movzwl -0x3feebc7a(,%eax,4),%eax$/;"	l
c01015df	obj/kernel.asm	/^c01015df:	c0 $/;"	l
c01015e0	obj/kernel.asm	/^c01015e0:	66 89 45 f0          	mov    %ax,-0x10(%ebp)$/;"	l
c01015e4	obj/kernel.asm	/^c01015e4:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01015e8	obj/kernel.asm	/^c01015e8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01015eb	obj/kernel.asm	/^c01015eb:	6a 00                	push   $0x0$/;"	l
c01015ed	obj/kernel.asm	/^c01015ed:	50                   	push   %eax$/;"	l
c01015ee	obj/kernel.asm	/^c01015ee:	e8 37 f9 ff ff       	call   c0100f2a <ide_wait_ready>$/;"	l
c01015f3	obj/kernel.asm	/^c01015f3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01015f6	obj/kernel.asm	/^c01015f6:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c01015fa	obj/kernel.asm	/^c01015fa:	83 c0 02             	add    $0x2,%eax$/;"	l
c01015fd	obj/kernel.asm	/^c01015fd:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101600	obj/kernel.asm	/^c0101600:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c0101604	obj/kernel.asm	/^c0101604:	c6 45 ed 00          	movb   $0x0,-0x13(%ebp)$/;"	l
c0101608	obj/kernel.asm	/^c0101608:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c010160c	obj/kernel.asm	/^c010160c:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101610	obj/kernel.asm	/^c0101610:	ee                   	out    %al,(%dx)$/;"	l
c0101611	obj/kernel.asm	/^c0101611:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0101614	obj/kernel.asm	/^c0101614:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101617	obj/kernel.asm	/^c0101617:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010161b	obj/kernel.asm	/^c010161b:	83 c2 02             	add    $0x2,%edx$/;"	l
c010161e	obj/kernel.asm	/^c010161e:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101621	obj/kernel.asm	/^c0101621:	66 89 55 ea          	mov    %dx,-0x16(%ebp)$/;"	l
c0101625	obj/kernel.asm	/^c0101625:	88 45 e9             	mov    %al,-0x17(%ebp)$/;"	l
c0101628	obj/kernel.asm	/^c0101628:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c010162c	obj/kernel.asm	/^c010162c:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101630	obj/kernel.asm	/^c0101630:	ee                   	out    %al,(%dx)$/;"	l
c0101631	obj/kernel.asm	/^c0101631:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101634	obj/kernel.asm	/^c0101634:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101637	obj/kernel.asm	/^c0101637:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010163b	obj/kernel.asm	/^c010163b:	83 c2 03             	add    $0x3,%edx$/;"	l
c010163e	obj/kernel.asm	/^c010163e:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101641	obj/kernel.asm	/^c0101641:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101645	obj/kernel.asm	/^c0101645:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101648	obj/kernel.asm	/^c0101648:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c010164c	obj/kernel.asm	/^c010164c:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101650	obj/kernel.asm	/^c0101650:	ee                   	out    %al,(%dx)$/;"	l
c0101651	obj/kernel.asm	/^c0101651:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101654	obj/kernel.asm	/^c0101654:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0101657	obj/kernel.asm	/^c0101657:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010165a	obj/kernel.asm	/^c010165a:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010165e	obj/kernel.asm	/^c010165e:	83 c2 04             	add    $0x4,%edx$/;"	l
c0101661	obj/kernel.asm	/^c0101661:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101664	obj/kernel.asm	/^c0101664:	66 89 55 e2          	mov    %dx,-0x1e(%ebp)$/;"	l
c0101668	obj/kernel.asm	/^c0101668:	88 45 e1             	mov    %al,-0x1f(%ebp)$/;"	l
c010166b	obj/kernel.asm	/^c010166b:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c010166f	obj/kernel.asm	/^c010166f:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c0101673	obj/kernel.asm	/^c0101673:	ee                   	out    %al,(%dx)$/;"	l
c0101674	obj/kernel.asm	/^c0101674:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0101677	obj/kernel.asm	/^c0101677:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010167a	obj/kernel.asm	/^c010167a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010167d	obj/kernel.asm	/^c010167d:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101681	obj/kernel.asm	/^c0101681:	83 c2 05             	add    $0x5,%edx$/;"	l
c0101684	obj/kernel.asm	/^c0101684:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101687	obj/kernel.asm	/^c0101687:	66 89 55 de          	mov    %dx,-0x22(%ebp)$/;"	l
c010168b	obj/kernel.asm	/^c010168b:	88 45 dd             	mov    %al,-0x23(%ebp)$/;"	l
c010168e	obj/kernel.asm	/^c010168e:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c0101692	obj/kernel.asm	/^c0101692:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c0101696	obj/kernel.asm	/^c0101696:	ee                   	out    %al,(%dx)$/;"	l
c0101697	obj/kernel.asm	/^c0101697:	0f b7 45 c4          	movzwl -0x3c(%ebp),%eax$/;"	l
c010169b	obj/kernel.asm	/^c010169b:	83 e0 01             	and    $0x1,%eax$/;"	l
c010169e	obj/kernel.asm	/^c010169e:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c01016a1	obj/kernel.asm	/^c01016a1:	89 c2                	mov    %eax,%edx$/;"	l
c01016a3	obj/kernel.asm	/^c01016a3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01016a6	obj/kernel.asm	/^c01016a6:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c01016a9	obj/kernel.asm	/^c01016a9:	83 e0 0f             	and    $0xf,%eax$/;"	l
c01016ac	obj/kernel.asm	/^c01016ac:	09 d0                	or     %edx,%eax$/;"	l
c01016ae	obj/kernel.asm	/^c01016ae:	83 c8 e0             	or     $0xffffffe0,%eax$/;"	l
c01016b1	obj/kernel.asm	/^c01016b1:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01016b4	obj/kernel.asm	/^c01016b4:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01016b8	obj/kernel.asm	/^c01016b8:	83 c2 06             	add    $0x6,%edx$/;"	l
c01016bb	obj/kernel.asm	/^c01016bb:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c01016be	obj/kernel.asm	/^c01016be:	66 89 55 da          	mov    %dx,-0x26(%ebp)$/;"	l
c01016c2	obj/kernel.asm	/^c01016c2:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c01016c5	obj/kernel.asm	/^c01016c5:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c01016c9	obj/kernel.asm	/^c01016c9:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c01016cd	obj/kernel.asm	/^c01016cd:	ee                   	out    %al,(%dx)$/;"	l
c01016ce	obj/kernel.asm	/^c01016ce:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01016d2	obj/kernel.asm	/^c01016d2:	83 c0 07             	add    $0x7,%eax$/;"	l
c01016d5	obj/kernel.asm	/^c01016d5:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01016d8	obj/kernel.asm	/^c01016d8:	66 89 45 d6          	mov    %ax,-0x2a(%ebp)$/;"	l
c01016dc	obj/kernel.asm	/^c01016dc:	c6 45 d5 30          	movb   $0x30,-0x2b(%ebp)$/;"	l
c01016e0	obj/kernel.asm	/^c01016e0:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c01016e4	obj/kernel.asm	/^c01016e4:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c01016e8	obj/kernel.asm	/^c01016e8:	ee                   	out    %al,(%dx)$/;"	l
c01016e9	obj/kernel.asm	/^c01016e9:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c01016f0	obj/kernel.asm	/^c01016f0:	eb 58                	jmp    c010174a <ide_write_secs+0x219>$/;"	l
c01016f2	obj/kernel.asm	/^c01016f2:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c01016f6	obj/kernel.asm	/^c01016f6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01016f9	obj/kernel.asm	/^c01016f9:	6a 01                	push   $0x1$/;"	l
c01016fb	obj/kernel.asm	/^c01016fb:	50                   	push   %eax$/;"	l
c01016fc	obj/kernel.asm	/^c01016fc:	e8 29 f8 ff ff       	call   c0100f2a <ide_wait_ready>$/;"	l
c0101701	obj/kernel.asm	/^c0101701:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101704	obj/kernel.asm	/^c0101704:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101707	obj/kernel.asm	/^c0101707:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010170b	obj/kernel.asm	/^c010170b:	74 02                	je     c010170f <ide_write_secs+0x1de>$/;"	l
c010170d	obj/kernel.asm	/^c010170d:	eb 41                	jmp    c0101750 <ide_write_secs+0x21f>$/;"	l
c010170f	obj/kernel.asm	/^c010170f:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101713	obj/kernel.asm	/^c0101713:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0101716	obj/kernel.asm	/^c0101716:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0101719	obj/kernel.asm	/^c0101719:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010171c	obj/kernel.asm	/^c010171c:	c7 45 c8 80 00 00 00 	movl   $0x80,-0x38(%ebp)$/;"	l
c0101723	obj/kernel.asm	/^c0101723:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0101726	obj/kernel.asm	/^c0101726:	8b 4d cc             	mov    -0x34(%ebp),%ecx$/;"	l
c0101729	obj/kernel.asm	/^c0101729:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010172c	obj/kernel.asm	/^c010172c:	89 cb                	mov    %ecx,%ebx$/;"	l
c010172e	obj/kernel.asm	/^c010172e:	89 de                	mov    %ebx,%esi$/;"	l
c0101730	obj/kernel.asm	/^c0101730:	89 c1                	mov    %eax,%ecx$/;"	l
c0101732	obj/kernel.asm	/^c0101732:	fc                   	cld    $/;"	l
c0101733	obj/kernel.asm	/^c0101733:	f2 6f                	repnz outsl %ds:(%esi),(%dx)$/;"	l
c0101735	obj/kernel.asm	/^c0101735:	89 c8                	mov    %ecx,%eax$/;"	l
c0101737	obj/kernel.asm	/^c0101737:	89 f3                	mov    %esi,%ebx$/;"	l
c0101739	obj/kernel.asm	/^c0101739:	89 5d cc             	mov    %ebx,-0x34(%ebp)$/;"	l
c010173c	obj/kernel.asm	/^c010173c:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010173f	obj/kernel.asm	/^c010173f:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0101743	obj/kernel.asm	/^c0101743:	81 45 10 00 02 00 00 	addl   $0x200,0x10(%ebp)$/;"	l
c010174a	obj/kernel.asm	/^c010174a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010174e	obj/kernel.asm	/^c010174e:	75 a2                	jne    c01016f2 <ide_write_secs+0x1c1>$/;"	l
c0101750	obj/kernel.asm	/^c0101750:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101753	obj/kernel.asm	/^c0101753:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c0101756	obj/kernel.asm	/^c0101756:	5b                   	pop    %ebx$/;"	l
c0101757	obj/kernel.asm	/^c0101757:	5e                   	pop    %esi$/;"	l
c0101758	obj/kernel.asm	/^c0101758:	5d                   	pop    %ebp$/;"	l
c0101759	obj/kernel.asm	/^c0101759:	c3                   	ret    $/;"	l
c010175a	obj/kernel.asm	/^c010175a <SYSTEM_READ_TIMER>:$/;"	l
c010175a	obj/kernel.asm	/^c010175a:	55                   	push   %ebp$/;"	l
c010175b	obj/kernel.asm	/^c010175b:	89 e5                	mov    %esp,%ebp$/;"	l
c010175d	obj/kernel.asm	/^c010175d:	a1 a0 21 15 c0       	mov    0xc01521a0,%eax$/;"	l
c0101762	obj/kernel.asm	/^c0101762:	5d                   	pop    %ebp$/;"	l
c0101763	obj/kernel.asm	/^c0101763:	c3                   	ret    $/;"	l
c0101764	obj/kernel.asm	/^c0101764 <clock_init>:$/;"	l
c0101764	obj/kernel.asm	/^c0101764:	55                   	push   %ebp$/;"	l
c0101765	obj/kernel.asm	/^c0101765:	89 e5                	mov    %esp,%ebp$/;"	l
c0101767	obj/kernel.asm	/^c0101767:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010176a	obj/kernel.asm	/^c010176a:	66 c7 45 f6 43 00    	movw   $0x43,-0xa(%ebp)$/;"	l
c0101770	obj/kernel.asm	/^c0101770:	c6 45 f5 34          	movb   $0x34,-0xb(%ebp)$/;"	l
c0101774	obj/kernel.asm	/^c0101774:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101778	obj/kernel.asm	/^c0101778:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c010177c	obj/kernel.asm	/^c010177c:	ee                   	out    %al,(%dx)$/;"	l
c010177d	obj/kernel.asm	/^c010177d:	66 c7 45 f2 40 00    	movw   $0x40,-0xe(%ebp)$/;"	l
c0101783	obj/kernel.asm	/^c0101783:	c6 45 f1 9c          	movb   $0x9c,-0xf(%ebp)$/;"	l
c0101787	obj/kernel.asm	/^c0101787:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c010178b	obj/kernel.asm	/^c010178b:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c010178f	obj/kernel.asm	/^c010178f:	ee                   	out    %al,(%dx)$/;"	l
c0101790	obj/kernel.asm	/^c0101790:	66 c7 45 ee 40 00    	movw   $0x40,-0x12(%ebp)$/;"	l
c0101796	obj/kernel.asm	/^c0101796:	c6 45 ed 2e          	movb   $0x2e,-0x13(%ebp)$/;"	l
c010179a	obj/kernel.asm	/^c010179a:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c010179e	obj/kernel.asm	/^c010179e:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c01017a2	obj/kernel.asm	/^c01017a2:	ee                   	out    %al,(%dx)$/;"	l
c01017a3	obj/kernel.asm	/^c01017a3:	c7 05 a0 21 15 c0 00 	movl   $0x0,0xc01521a0$/;"	l
c01017aa	obj/kernel.asm	/^c01017aa:	00 00 00 $/;"	l
c01017ad	obj/kernel.asm	/^c01017ad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01017b0	obj/kernel.asm	/^c01017b0:	68 76 44 11 c0       	push   $0xc0114476$/;"	l
c01017b5	obj/kernel.asm	/^c01017b5:	e8 b0 eb ff ff       	call   c010036a <cprintf>$/;"	l
c01017ba	obj/kernel.asm	/^c01017ba:	83 c4 10             	add    $0x10,%esp$/;"	l
c01017bd	obj/kernel.asm	/^c01017bd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01017c0	obj/kernel.asm	/^c01017c0:	6a 00                	push   $0x0$/;"	l
c01017c2	obj/kernel.asm	/^c01017c2:	e8 26 09 00 00       	call   c01020ed <pic_enable>$/;"	l
c01017c7	obj/kernel.asm	/^c01017c7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01017ca	obj/kernel.asm	/^c01017ca:	c9                   	leave  $/;"	l
c01017cb	obj/kernel.asm	/^c01017cb:	c3                   	ret    $/;"	l
c01017cc	obj/kernel.asm	/^c01017cc <__intr_save>:$/;"	l
c01017cc	obj/kernel.asm	/^c01017cc:	55                   	push   %ebp$/;"	l
c01017cd	obj/kernel.asm	/^c01017cd:	89 e5                	mov    %esp,%ebp$/;"	l
c01017cf	obj/kernel.asm	/^c01017cf:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01017d2	obj/kernel.asm	/^c01017d2:	9c                   	pushf  $/;"	l
c01017d3	obj/kernel.asm	/^c01017d3:	58                   	pop    %eax$/;"	l
c01017d4	obj/kernel.asm	/^c01017d4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01017d7	obj/kernel.asm	/^c01017d7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01017da	obj/kernel.asm	/^c01017da:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c01017df	obj/kernel.asm	/^c01017df:	85 c0                	test   %eax,%eax$/;"	l
c01017e1	obj/kernel.asm	/^c01017e1:	74 0c                	je     c01017ef <__intr_save+0x23>$/;"	l
c01017e3	obj/kernel.asm	/^c01017e3:	e8 73 0a 00 00       	call   c010225b <intr_disable>$/;"	l
c01017e8	obj/kernel.asm	/^c01017e8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01017ed	obj/kernel.asm	/^c01017ed:	eb 05                	jmp    c01017f4 <__intr_save+0x28>$/;"	l
c01017ef	obj/kernel.asm	/^c01017ef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01017f4	obj/kernel.asm	/^c01017f4:	c9                   	leave  $/;"	l
c01017f5	obj/kernel.asm	/^c01017f5:	c3                   	ret    $/;"	l
c01017f6	obj/kernel.asm	/^c01017f6 <__intr_restore>:$/;"	l
c01017f6	obj/kernel.asm	/^c01017f6:	55                   	push   %ebp$/;"	l
c01017f7	obj/kernel.asm	/^c01017f7:	89 e5                	mov    %esp,%ebp$/;"	l
c01017f9	obj/kernel.asm	/^c01017f9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01017fc	obj/kernel.asm	/^c01017fc:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0101800	obj/kernel.asm	/^c0101800:	74 05                	je     c0101807 <__intr_restore+0x11>$/;"	l
c0101802	obj/kernel.asm	/^c0101802:	e8 4e 0a 00 00       	call   c0102255 <intr_enable>$/;"	l
c0101807	obj/kernel.asm	/^c0101807:	c9                   	leave  $/;"	l
c0101808	obj/kernel.asm	/^c0101808:	c3                   	ret    $/;"	l
c0101809	obj/kernel.asm	/^c0101809 <delay>:$/;"	l
c0101809	obj/kernel.asm	/^c0101809:	55                   	push   %ebp$/;"	l
c010180a	obj/kernel.asm	/^c010180a:	89 e5                	mov    %esp,%ebp$/;"	l
c010180c	obj/kernel.asm	/^c010180c:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010180f	obj/kernel.asm	/^c010180f:	66 c7 45 fe 84 00    	movw   $0x84,-0x2(%ebp)$/;"	l
c0101815	obj/kernel.asm	/^c0101815:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c0101819	obj/kernel.asm	/^c0101819:	89 c2                	mov    %eax,%edx$/;"	l
c010181b	obj/kernel.asm	/^c010181b:	ec                   	in     (%dx),%al$/;"	l
c010181c	obj/kernel.asm	/^c010181c:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c010181f	obj/kernel.asm	/^c010181f:	66 c7 45 fa 84 00    	movw   $0x84,-0x6(%ebp)$/;"	l
c0101825	obj/kernel.asm	/^c0101825:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101829	obj/kernel.asm	/^c0101829:	89 c2                	mov    %eax,%edx$/;"	l
c010182b	obj/kernel.asm	/^c010182b:	ec                   	in     (%dx),%al$/;"	l
c010182c	obj/kernel.asm	/^c010182c:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c010182f	obj/kernel.asm	/^c010182f:	66 c7 45 f6 84 00    	movw   $0x84,-0xa(%ebp)$/;"	l
c0101835	obj/kernel.asm	/^c0101835:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101839	obj/kernel.asm	/^c0101839:	89 c2                	mov    %eax,%edx$/;"	l
c010183b	obj/kernel.asm	/^c010183b:	ec                   	in     (%dx),%al$/;"	l
c010183c	obj/kernel.asm	/^c010183c:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c010183f	obj/kernel.asm	/^c010183f:	66 c7 45 f2 84 00    	movw   $0x84,-0xe(%ebp)$/;"	l
c0101845	obj/kernel.asm	/^c0101845:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax$/;"	l
c0101849	obj/kernel.asm	/^c0101849:	89 c2                	mov    %eax,%edx$/;"	l
c010184b	obj/kernel.asm	/^c010184b:	ec                   	in     (%dx),%al$/;"	l
c010184c	obj/kernel.asm	/^c010184c:	88 45 f1             	mov    %al,-0xf(%ebp)$/;"	l
c010184f	obj/kernel.asm	/^c010184f:	c9                   	leave  $/;"	l
c0101850	obj/kernel.asm	/^c0101850:	c3                   	ret    $/;"	l
c0101851	obj/kernel.asm	/^c0101851 <cga_init>:$/;"	l
c0101851	obj/kernel.asm	/^c0101851:	55                   	push   %ebp$/;"	l
c0101852	obj/kernel.asm	/^c0101852:	89 e5                	mov    %esp,%ebp$/;"	l
c0101854	obj/kernel.asm	/^c0101854:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0101857	obj/kernel.asm	/^c0101857:	c7 45 fc 00 80 0b c0 	movl   $0xc00b8000,-0x4(%ebp)$/;"	l
c010185e	obj/kernel.asm	/^c010185e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101861	obj/kernel.asm	/^c0101861:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c0101864	obj/kernel.asm	/^c0101864:	66 89 45 fa          	mov    %ax,-0x6(%ebp)$/;"	l
c0101868	obj/kernel.asm	/^c0101868:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010186b	obj/kernel.asm	/^c010186b:	66 c7 00 5a a5       	movw   $0xa55a,(%eax)$/;"	l
c0101870	obj/kernel.asm	/^c0101870:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101873	obj/kernel.asm	/^c0101873:	0f b7 00             	movzwl (%eax),%eax$/;"	l
c0101876	obj/kernel.asm	/^c0101876:	66 3d 5a a5          	cmp    $0xa55a,%ax$/;"	l
c010187a	obj/kernel.asm	/^c010187a:	74 12                	je     c010188e <cga_init+0x3d>$/;"	l
c010187c	obj/kernel.asm	/^c010187c:	c7 45 fc 00 00 0b c0 	movl   $0xc00b0000,-0x4(%ebp)$/;"	l
c0101883	obj/kernel.asm	/^c0101883:	66 c7 05 06 e5 14 c0 	movw   $0x3b4,0xc014e506$/;"	l
c010188a	obj/kernel.asm	/^c010188a:	b4 03 $/;"	l
c010188c	obj/kernel.asm	/^c010188c:	eb 13                	jmp    c01018a1 <cga_init+0x50>$/;"	l
c010188e	obj/kernel.asm	/^c010188e:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101891	obj/kernel.asm	/^c0101891:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c0101895	obj/kernel.asm	/^c0101895:	66 89 10             	mov    %dx,(%eax)$/;"	l
c0101898	obj/kernel.asm	/^c0101898:	66 c7 05 06 e5 14 c0 	movw   $0x3d4,0xc014e506$/;"	l
c010189f	obj/kernel.asm	/^c010189f:	d4 03 $/;"	d
c01018a1	obj/kernel.asm	/^c01018a1:	0f b7 05 06 e5 14 c0 	movzwl 0xc014e506,%eax$/;"	l
c01018a8	obj/kernel.asm	/^c01018a8:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01018ab	obj/kernel.asm	/^c01018ab:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c01018af	obj/kernel.asm	/^c01018af:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c01018b3	obj/kernel.asm	/^c01018b3:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c01018b7	obj/kernel.asm	/^c01018b7:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c01018bb	obj/kernel.asm	/^c01018bb:	ee                   	out    %al,(%dx)$/;"	l
c01018bc	obj/kernel.asm	/^c01018bc:	0f b7 05 06 e5 14 c0 	movzwl 0xc014e506,%eax$/;"	l
c01018c3	obj/kernel.asm	/^c01018c3:	83 c0 01             	add    $0x1,%eax$/;"	l
c01018c6	obj/kernel.asm	/^c01018c6:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01018c9	obj/kernel.asm	/^c01018c9:	66 89 45 ee          	mov    %ax,-0x12(%ebp)$/;"	l
c01018cd	obj/kernel.asm	/^c01018cd:	0f b7 45 ee          	movzwl -0x12(%ebp),%eax$/;"	l
c01018d1	obj/kernel.asm	/^c01018d1:	89 c2                	mov    %eax,%edx$/;"	l
c01018d3	obj/kernel.asm	/^c01018d3:	ec                   	in     (%dx),%al$/;"	l
c01018d4	obj/kernel.asm	/^c01018d4:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c01018d7	obj/kernel.asm	/^c01018d7:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c01018db	obj/kernel.asm	/^c01018db:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01018de	obj/kernel.asm	/^c01018de:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c01018e1	obj/kernel.asm	/^c01018e1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01018e4	obj/kernel.asm	/^c01018e4:	0f b7 05 06 e5 14 c0 	movzwl 0xc014e506,%eax$/;"	l
c01018eb	obj/kernel.asm	/^c01018eb:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01018ee	obj/kernel.asm	/^c01018ee:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c01018f2	obj/kernel.asm	/^c01018f2:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c01018f6	obj/kernel.asm	/^c01018f6:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c01018fa	obj/kernel.asm	/^c01018fa:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c01018fe	obj/kernel.asm	/^c01018fe:	ee                   	out    %al,(%dx)$/;"	l
c01018ff	obj/kernel.asm	/^c01018ff:	0f b7 05 06 e5 14 c0 	movzwl 0xc014e506,%eax$/;"	l
c0101906	obj/kernel.asm	/^c0101906:	83 c0 01             	add    $0x1,%eax$/;"	l
c0101909	obj/kernel.asm	/^c0101909:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010190c	obj/kernel.asm	/^c010190c:	66 89 45 e6          	mov    %ax,-0x1a(%ebp)$/;"	l
c0101910	obj/kernel.asm	/^c0101910:	0f b7 45 e6          	movzwl -0x1a(%ebp),%eax$/;"	l
c0101914	obj/kernel.asm	/^c0101914:	89 c2                	mov    %eax,%edx$/;"	l
c0101916	obj/kernel.asm	/^c0101916:	ec                   	in     (%dx),%al$/;"	l
c0101917	obj/kernel.asm	/^c0101917:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c010191a	obj/kernel.asm	/^c010191a:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c010191e	obj/kernel.asm	/^c010191e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101921	obj/kernel.asm	/^c0101921:	09 45 f4             	or     %eax,-0xc(%ebp)$/;"	l
c0101924	obj/kernel.asm	/^c0101924:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101927	obj/kernel.asm	/^c0101927:	a3 00 e5 14 c0       	mov    %eax,0xc014e500$/;"	l
c010192c	obj/kernel.asm	/^c010192c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010192f	obj/kernel.asm	/^c010192f:	66 a3 04 e5 14 c0    	mov    %ax,0xc014e504$/;"	l
c0101935	obj/kernel.asm	/^c0101935:	c9                   	leave  $/;"	l
c0101936	obj/kernel.asm	/^c0101936:	c3                   	ret    $/;"	l
c0101937	obj/kernel.asm	/^c0101937 <serial_init>:$/;"	l
c0101937	obj/kernel.asm	/^c0101937:	55                   	push   %ebp$/;"	l
c0101938	obj/kernel.asm	/^c0101938:	89 e5                	mov    %esp,%ebp$/;"	l
c010193a	obj/kernel.asm	/^c010193a:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010193d	obj/kernel.asm	/^c010193d:	66 c7 45 f6 fa 03    	movw   $0x3fa,-0xa(%ebp)$/;"	l
c0101943	obj/kernel.asm	/^c0101943:	c6 45 f5 00          	movb   $0x0,-0xb(%ebp)$/;"	l
c0101947	obj/kernel.asm	/^c0101947:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c010194b	obj/kernel.asm	/^c010194b:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c010194f	obj/kernel.asm	/^c010194f:	ee                   	out    %al,(%dx)$/;"	l
c0101950	obj/kernel.asm	/^c0101950:	66 c7 45 f2 fb 03    	movw   $0x3fb,-0xe(%ebp)$/;"	l
c0101956	obj/kernel.asm	/^c0101956:	c6 45 f1 80          	movb   $0x80,-0xf(%ebp)$/;"	l
c010195a	obj/kernel.asm	/^c010195a:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c010195e	obj/kernel.asm	/^c010195e:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101962	obj/kernel.asm	/^c0101962:	ee                   	out    %al,(%dx)$/;"	l
c0101963	obj/kernel.asm	/^c0101963:	66 c7 45 ee f8 03    	movw   $0x3f8,-0x12(%ebp)$/;"	l
c0101969	obj/kernel.asm	/^c0101969:	c6 45 ed 0c          	movb   $0xc,-0x13(%ebp)$/;"	l
c010196d	obj/kernel.asm	/^c010196d:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101971	obj/kernel.asm	/^c0101971:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101975	obj/kernel.asm	/^c0101975:	ee                   	out    %al,(%dx)$/;"	l
c0101976	obj/kernel.asm	/^c0101976:	66 c7 45 ea f9 03    	movw   $0x3f9,-0x16(%ebp)$/;"	l
c010197c	obj/kernel.asm	/^c010197c:	c6 45 e9 00          	movb   $0x0,-0x17(%ebp)$/;"	l
c0101980	obj/kernel.asm	/^c0101980:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101984	obj/kernel.asm	/^c0101984:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101988	obj/kernel.asm	/^c0101988:	ee                   	out    %al,(%dx)$/;"	l
c0101989	obj/kernel.asm	/^c0101989:	66 c7 45 e6 fb 03    	movw   $0x3fb,-0x1a(%ebp)$/;"	l
c010198f	obj/kernel.asm	/^c010198f:	c6 45 e5 03          	movb   $0x3,-0x1b(%ebp)$/;"	l
c0101993	obj/kernel.asm	/^c0101993:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101997	obj/kernel.asm	/^c0101997:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c010199b	obj/kernel.asm	/^c010199b:	ee                   	out    %al,(%dx)$/;"	l
c010199c	obj/kernel.asm	/^c010199c:	66 c7 45 e2 fc 03    	movw   $0x3fc,-0x1e(%ebp)$/;"	l
c01019a2	obj/kernel.asm	/^c01019a2:	c6 45 e1 00          	movb   $0x0,-0x1f(%ebp)$/;"	l
c01019a6	obj/kernel.asm	/^c01019a6:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01019aa	obj/kernel.asm	/^c01019aa:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c01019ae	obj/kernel.asm	/^c01019ae:	ee                   	out    %al,(%dx)$/;"	l
c01019af	obj/kernel.asm	/^c01019af:	66 c7 45 de f9 03    	movw   $0x3f9,-0x22(%ebp)$/;"	l
c01019b5	obj/kernel.asm	/^c01019b5:	c6 45 dd 01          	movb   $0x1,-0x23(%ebp)$/;"	l
c01019b9	obj/kernel.asm	/^c01019b9:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c01019bd	obj/kernel.asm	/^c01019bd:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c01019c1	obj/kernel.asm	/^c01019c1:	ee                   	out    %al,(%dx)$/;"	l
c01019c2	obj/kernel.asm	/^c01019c2:	66 c7 45 da fd 03    	movw   $0x3fd,-0x26(%ebp)$/;"	l
c01019c8	obj/kernel.asm	/^c01019c8:	0f b7 45 da          	movzwl -0x26(%ebp),%eax$/;"	l
c01019cc	obj/kernel.asm	/^c01019cc:	89 c2                	mov    %eax,%edx$/;"	l
c01019ce	obj/kernel.asm	/^c01019ce:	ec                   	in     (%dx),%al$/;"	l
c01019cf	obj/kernel.asm	/^c01019cf:	88 45 d9             	mov    %al,-0x27(%ebp)$/;"	l
c01019d2	obj/kernel.asm	/^c01019d2:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c01019d6	obj/kernel.asm	/^c01019d6:	3c ff                	cmp    $0xff,%al$/;"	l
c01019d8	obj/kernel.asm	/^c01019d8:	0f 95 c0             	setne  %al$/;"	l
c01019db	obj/kernel.asm	/^c01019db:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01019de	obj/kernel.asm	/^c01019de:	a3 08 e5 14 c0       	mov    %eax,0xc014e508$/;"	l
c01019e3	obj/kernel.asm	/^c01019e3:	66 c7 45 d6 fa 03    	movw   $0x3fa,-0x2a(%ebp)$/;"	l
c01019e9	obj/kernel.asm	/^c01019e9:	0f b7 45 d6          	movzwl -0x2a(%ebp),%eax$/;"	l
c01019ed	obj/kernel.asm	/^c01019ed:	89 c2                	mov    %eax,%edx$/;"	l
c01019ef	obj/kernel.asm	/^c01019ef:	ec                   	in     (%dx),%al$/;"	l
c01019f0	obj/kernel.asm	/^c01019f0:	88 45 d5             	mov    %al,-0x2b(%ebp)$/;"	l
c01019f3	obj/kernel.asm	/^c01019f3:	66 c7 45 d2 f8 03    	movw   $0x3f8,-0x2e(%ebp)$/;"	l
c01019f9	obj/kernel.asm	/^c01019f9:	0f b7 45 d2          	movzwl -0x2e(%ebp),%eax$/;"	l
c01019fd	obj/kernel.asm	/^c01019fd:	89 c2                	mov    %eax,%edx$/;"	l
c01019ff	obj/kernel.asm	/^c01019ff:	ec                   	in     (%dx),%al$/;"	l
c0101a00	obj/kernel.asm	/^c0101a00:	88 45 d1             	mov    %al,-0x2f(%ebp)$/;"	l
c0101a03	obj/kernel.asm	/^c0101a03:	a1 08 e5 14 c0       	mov    0xc014e508,%eax$/;"	l
c0101a08	obj/kernel.asm	/^c0101a08:	85 c0                	test   %eax,%eax$/;"	l
c0101a0a	obj/kernel.asm	/^c0101a0a:	74 0d                	je     c0101a19 <serial_init+0xe2>$/;"	l
c0101a0c	obj/kernel.asm	/^c0101a0c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101a0f	obj/kernel.asm	/^c0101a0f:	6a 04                	push   $0x4$/;"	l
c0101a11	obj/kernel.asm	/^c0101a11:	e8 d7 06 00 00       	call   c01020ed <pic_enable>$/;"	l
c0101a16	obj/kernel.asm	/^c0101a16:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101a19	obj/kernel.asm	/^c0101a19:	c9                   	leave  $/;"	l
c0101a1a	obj/kernel.asm	/^c0101a1a:	c3                   	ret    $/;"	l
c0101a1b	obj/kernel.asm	/^c0101a1b <lpt_putc_sub>:$/;"	l
c0101a1b	obj/kernel.asm	/^c0101a1b:	55                   	push   %ebp$/;"	l
c0101a1c	obj/kernel.asm	/^c0101a1c:	89 e5                	mov    %esp,%ebp$/;"	l
c0101a1e	obj/kernel.asm	/^c0101a1e:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0101a21	obj/kernel.asm	/^c0101a21:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0101a28	obj/kernel.asm	/^c0101a28:	eb 09                	jmp    c0101a33 <lpt_putc_sub+0x18>$/;"	l
c0101a2a	obj/kernel.asm	/^c0101a2a:	e8 da fd ff ff       	call   c0101809 <delay>$/;"	l
c0101a2f	obj/kernel.asm	/^c0101a2f:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0101a33	obj/kernel.asm	/^c0101a33:	66 c7 45 fa 79 03    	movw   $0x379,-0x6(%ebp)$/;"	l
c0101a39	obj/kernel.asm	/^c0101a39:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101a3d	obj/kernel.asm	/^c0101a3d:	89 c2                	mov    %eax,%edx$/;"	l
c0101a3f	obj/kernel.asm	/^c0101a3f:	ec                   	in     (%dx),%al$/;"	l
c0101a40	obj/kernel.asm	/^c0101a40:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101a43	obj/kernel.asm	/^c0101a43:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101a47	obj/kernel.asm	/^c0101a47:	84 c0                	test   %al,%al$/;"	l
c0101a49	obj/kernel.asm	/^c0101a49:	78 09                	js     c0101a54 <lpt_putc_sub+0x39>$/;"	l
c0101a4b	obj/kernel.asm	/^c0101a4b:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c0101a52	obj/kernel.asm	/^c0101a52:	7e d6                	jle    c0101a2a <lpt_putc_sub+0xf>$/;"	l
c0101a54	obj/kernel.asm	/^c0101a54:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101a57	obj/kernel.asm	/^c0101a57:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101a5a	obj/kernel.asm	/^c0101a5a:	66 c7 45 f6 78 03    	movw   $0x378,-0xa(%ebp)$/;"	l
c0101a60	obj/kernel.asm	/^c0101a60:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101a63	obj/kernel.asm	/^c0101a63:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101a67	obj/kernel.asm	/^c0101a67:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101a6b	obj/kernel.asm	/^c0101a6b:	ee                   	out    %al,(%dx)$/;"	l
c0101a6c	obj/kernel.asm	/^c0101a6c:	66 c7 45 f2 7a 03    	movw   $0x37a,-0xe(%ebp)$/;"	l
c0101a72	obj/kernel.asm	/^c0101a72:	c6 45 f1 0d          	movb   $0xd,-0xf(%ebp)$/;"	l
c0101a76	obj/kernel.asm	/^c0101a76:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0101a7a	obj/kernel.asm	/^c0101a7a:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101a7e	obj/kernel.asm	/^c0101a7e:	ee                   	out    %al,(%dx)$/;"	l
c0101a7f	obj/kernel.asm	/^c0101a7f:	66 c7 45 ee 7a 03    	movw   $0x37a,-0x12(%ebp)$/;"	l
c0101a85	obj/kernel.asm	/^c0101a85:	c6 45 ed 08          	movb   $0x8,-0x13(%ebp)$/;"	l
c0101a89	obj/kernel.asm	/^c0101a89:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101a8d	obj/kernel.asm	/^c0101a8d:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101a91	obj/kernel.asm	/^c0101a91:	ee                   	out    %al,(%dx)$/;"	l
c0101a92	obj/kernel.asm	/^c0101a92:	c9                   	leave  $/;"	l
c0101a93	obj/kernel.asm	/^c0101a93:	c3                   	ret    $/;"	l
c0101a94	obj/kernel.asm	/^c0101a94 <lpt_putc>:$/;"	l
c0101a94	obj/kernel.asm	/^c0101a94:	55                   	push   %ebp$/;"	l
c0101a95	obj/kernel.asm	/^c0101a95:	89 e5                	mov    %esp,%ebp$/;"	l
c0101a97	obj/kernel.asm	/^c0101a97:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c0101a9b	obj/kernel.asm	/^c0101a9b:	74 0d                	je     c0101aaa <lpt_putc+0x16>$/;"	l
c0101a9d	obj/kernel.asm	/^c0101a9d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101aa0	obj/kernel.asm	/^c0101aa0:	e8 76 ff ff ff       	call   c0101a1b <lpt_putc_sub>$/;"	l
c0101aa5	obj/kernel.asm	/^c0101aa5:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101aa8	obj/kernel.asm	/^c0101aa8:	eb 1e                	jmp    c0101ac8 <lpt_putc+0x34>$/;"	l
c0101aaa	obj/kernel.asm	/^c0101aaa:	6a 08                	push   $0x8$/;"	l
c0101aac	obj/kernel.asm	/^c0101aac:	e8 6a ff ff ff       	call   c0101a1b <lpt_putc_sub>$/;"	l
c0101ab1	obj/kernel.asm	/^c0101ab1:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101ab4	obj/kernel.asm	/^c0101ab4:	6a 20                	push   $0x20$/;"	l
c0101ab6	obj/kernel.asm	/^c0101ab6:	e8 60 ff ff ff       	call   c0101a1b <lpt_putc_sub>$/;"	l
c0101abb	obj/kernel.asm	/^c0101abb:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101abe	obj/kernel.asm	/^c0101abe:	6a 08                	push   $0x8$/;"	l
c0101ac0	obj/kernel.asm	/^c0101ac0:	e8 56 ff ff ff       	call   c0101a1b <lpt_putc_sub>$/;"	l
c0101ac5	obj/kernel.asm	/^c0101ac5:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101ac8	obj/kernel.asm	/^c0101ac8:	c9                   	leave  $/;"	l
c0101ac9	obj/kernel.asm	/^c0101ac9:	c3                   	ret    $/;"	l
c0101aca	obj/kernel.asm	/^c0101aca <cga_putc>:$/;"	l
c0101aca	obj/kernel.asm	/^c0101aca:	55                   	push   %ebp$/;"	l
c0101acb	obj/kernel.asm	/^c0101acb:	89 e5                	mov    %esp,%ebp$/;"	l
c0101acd	obj/kernel.asm	/^c0101acd:	53                   	push   %ebx$/;"	l
c0101ace	obj/kernel.asm	/^c0101ace:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0101ad1	obj/kernel.asm	/^c0101ad1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101ad4	obj/kernel.asm	/^c0101ad4:	b0 00                	mov    $0x0,%al$/;"	l
c0101ad6	obj/kernel.asm	/^c0101ad6:	85 c0                	test   %eax,%eax$/;"	l
c0101ad8	obj/kernel.asm	/^c0101ad8:	75 07                	jne    c0101ae1 <cga_putc+0x17>$/;"	l
c0101ada	obj/kernel.asm	/^c0101ada:	81 4d 08 00 07 00 00 	orl    $0x700,0x8(%ebp)$/;"	l
c0101ae1	obj/kernel.asm	/^c0101ae1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101ae4	obj/kernel.asm	/^c0101ae4:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101ae7	obj/kernel.asm	/^c0101ae7:	83 f8 0a             	cmp    $0xa,%eax$/;"	l
c0101aea	obj/kernel.asm	/^c0101aea:	74 4c                	je     c0101b38 <cga_putc+0x6e>$/;"	l
c0101aec	obj/kernel.asm	/^c0101aec:	83 f8 0d             	cmp    $0xd,%eax$/;"	l
c0101aef	obj/kernel.asm	/^c0101aef:	74 57                	je     c0101b48 <cga_putc+0x7e>$/;"	l
c0101af1	obj/kernel.asm	/^c0101af1:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c0101af4	obj/kernel.asm	/^c0101af4:	0f 85 88 00 00 00    	jne    c0101b82 <cga_putc+0xb8>$/;"	l
c0101afa	obj/kernel.asm	/^c0101afa:	0f b7 05 04 e5 14 c0 	movzwl 0xc014e504,%eax$/;"	l
c0101b01	obj/kernel.asm	/^c0101b01:	66 85 c0             	test   %ax,%ax$/;"	l
c0101b04	obj/kernel.asm	/^c0101b04:	74 30                	je     c0101b36 <cga_putc+0x6c>$/;"	l
c0101b06	obj/kernel.asm	/^c0101b06:	0f b7 05 04 e5 14 c0 	movzwl 0xc014e504,%eax$/;"	l
c0101b0d	obj/kernel.asm	/^c0101b0d:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0101b10	obj/kernel.asm	/^c0101b10:	66 a3 04 e5 14 c0    	mov    %ax,0xc014e504$/;"	l
c0101b16	obj/kernel.asm	/^c0101b16:	a1 00 e5 14 c0       	mov    0xc014e500,%eax$/;"	l
c0101b1b	obj/kernel.asm	/^c0101b1b:	0f b7 15 04 e5 14 c0 	movzwl 0xc014e504,%edx$/;"	l
c0101b22	obj/kernel.asm	/^c0101b22:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101b25	obj/kernel.asm	/^c0101b25:	01 d2                	add    %edx,%edx$/;"	l
c0101b27	obj/kernel.asm	/^c0101b27:	01 d0                	add    %edx,%eax$/;"	l
c0101b29	obj/kernel.asm	/^c0101b29:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0101b2c	obj/kernel.asm	/^c0101b2c:	b2 00                	mov    $0x0,%dl$/;"	l
c0101b2e	obj/kernel.asm	/^c0101b2e:	83 ca 20             	or     $0x20,%edx$/;"	l
c0101b31	obj/kernel.asm	/^c0101b31:	66 89 10             	mov    %dx,(%eax)$/;"	l
c0101b34	obj/kernel.asm	/^c0101b34:	eb 71                	jmp    c0101ba7 <cga_putc+0xdd>$/;"	l
c0101b36	obj/kernel.asm	/^c0101b36:	eb 6f                	jmp    c0101ba7 <cga_putc+0xdd>$/;"	l
c0101b38	obj/kernel.asm	/^c0101b38:	0f b7 05 04 e5 14 c0 	movzwl 0xc014e504,%eax$/;"	l
c0101b3f	obj/kernel.asm	/^c0101b3f:	83 c0 50             	add    $0x50,%eax$/;"	l
c0101b42	obj/kernel.asm	/^c0101b42:	66 a3 04 e5 14 c0    	mov    %ax,0xc014e504$/;"	l
c0101b48	obj/kernel.asm	/^c0101b48:	0f b7 1d 04 e5 14 c0 	movzwl 0xc014e504,%ebx$/;"	l
c0101b4f	obj/kernel.asm	/^c0101b4f:	0f b7 0d 04 e5 14 c0 	movzwl 0xc014e504,%ecx$/;"	l
c0101b56	obj/kernel.asm	/^c0101b56:	0f b7 c1             	movzwl %cx,%eax$/;"	l
c0101b59	obj/kernel.asm	/^c0101b59:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax$/;"	l
c0101b5f	obj/kernel.asm	/^c0101b5f:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0101b62	obj/kernel.asm	/^c0101b62:	89 c2                	mov    %eax,%edx$/;"	l
c0101b64	obj/kernel.asm	/^c0101b64:	66 c1 ea 06          	shr    $0x6,%dx$/;"	l
c0101b68	obj/kernel.asm	/^c0101b68:	89 d0                	mov    %edx,%eax$/;"	l
c0101b6a	obj/kernel.asm	/^c0101b6a:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0101b6d	obj/kernel.asm	/^c0101b6d:	01 d0                	add    %edx,%eax$/;"	l
c0101b6f	obj/kernel.asm	/^c0101b6f:	c1 e0 04             	shl    $0x4,%eax$/;"	l
c0101b72	obj/kernel.asm	/^c0101b72:	29 c1                	sub    %eax,%ecx$/;"	l
c0101b74	obj/kernel.asm	/^c0101b74:	89 ca                	mov    %ecx,%edx$/;"	l
c0101b76	obj/kernel.asm	/^c0101b76:	89 d8                	mov    %ebx,%eax$/;"	l
c0101b78	obj/kernel.asm	/^c0101b78:	29 d0                	sub    %edx,%eax$/;"	l
c0101b7a	obj/kernel.asm	/^c0101b7a:	66 a3 04 e5 14 c0    	mov    %ax,0xc014e504$/;"	l
c0101b80	obj/kernel.asm	/^c0101b80:	eb 25                	jmp    c0101ba7 <cga_putc+0xdd>$/;"	l
c0101b82	obj/kernel.asm	/^c0101b82:	8b 0d 00 e5 14 c0    	mov    0xc014e500,%ecx$/;"	l
c0101b88	obj/kernel.asm	/^c0101b88:	0f b7 05 04 e5 14 c0 	movzwl 0xc014e504,%eax$/;"	l
c0101b8f	obj/kernel.asm	/^c0101b8f:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101b92	obj/kernel.asm	/^c0101b92:	66 89 15 04 e5 14 c0 	mov    %dx,0xc014e504$/;"	l
c0101b99	obj/kernel.asm	/^c0101b99:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101b9c	obj/kernel.asm	/^c0101b9c:	01 c0                	add    %eax,%eax$/;"	l
c0101b9e	obj/kernel.asm	/^c0101b9e:	01 c8                	add    %ecx,%eax$/;"	l
c0101ba0	obj/kernel.asm	/^c0101ba0:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0101ba3	obj/kernel.asm	/^c0101ba3:	66 89 10             	mov    %dx,(%eax)$/;"	l
c0101ba6	obj/kernel.asm	/^c0101ba6:	90                   	nop$/;"	l
c0101ba7	obj/kernel.asm	/^c0101ba7:	0f b7 05 04 e5 14 c0 	movzwl 0xc014e504,%eax$/;"	l
c0101bae	obj/kernel.asm	/^c0101bae:	66 3d cf 07          	cmp    $0x7cf,%ax$/;"	l
c0101bb2	obj/kernel.asm	/^c0101bb2:	76 59                	jbe    c0101c0d <cga_putc+0x143>$/;"	l
c0101bb4	obj/kernel.asm	/^c0101bb4:	a1 00 e5 14 c0       	mov    0xc014e500,%eax$/;"	l
c0101bb9	obj/kernel.asm	/^c0101bb9:	8d 90 a0 00 00 00    	lea    0xa0(%eax),%edx$/;"	l
c0101bbf	obj/kernel.asm	/^c0101bbf:	a1 00 e5 14 c0       	mov    0xc014e500,%eax$/;"	l
c0101bc4	obj/kernel.asm	/^c0101bc4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0101bc7	obj/kernel.asm	/^c0101bc7:	68 00 0f 00 00       	push   $0xf00$/;"	l
c0101bcc	obj/kernel.asm	/^c0101bcc:	52                   	push   %edx$/;"	l
c0101bcd	obj/kernel.asm	/^c0101bcd:	50                   	push   %eax$/;"	l
c0101bce	obj/kernel.asm	/^c0101bce:	e8 fc 1b 01 00       	call   c01137cf <memmove>$/;"	l
c0101bd3	obj/kernel.asm	/^c0101bd3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101bd6	obj/kernel.asm	/^c0101bd6:	c7 45 f4 80 07 00 00 	movl   $0x780,-0xc(%ebp)$/;"	l
c0101bdd	obj/kernel.asm	/^c0101bdd:	eb 15                	jmp    c0101bf4 <cga_putc+0x12a>$/;"	l
c0101bdf	obj/kernel.asm	/^c0101bdf:	a1 00 e5 14 c0       	mov    0xc014e500,%eax$/;"	l
c0101be4	obj/kernel.asm	/^c0101be4:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0101be7	obj/kernel.asm	/^c0101be7:	01 d2                	add    %edx,%edx$/;"	l
c0101be9	obj/kernel.asm	/^c0101be9:	01 d0                	add    %edx,%eax$/;"	l
c0101beb	obj/kernel.asm	/^c0101beb:	66 c7 00 20 07       	movw   $0x720,(%eax)$/;"	l
c0101bf0	obj/kernel.asm	/^c0101bf0:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0101bf4	obj/kernel.asm	/^c0101bf4:	81 7d f4 cf 07 00 00 	cmpl   $0x7cf,-0xc(%ebp)$/;"	l
c0101bfb	obj/kernel.asm	/^c0101bfb:	7e e2                	jle    c0101bdf <cga_putc+0x115>$/;"	l
c0101bfd	obj/kernel.asm	/^c0101bfd:	0f b7 05 04 e5 14 c0 	movzwl 0xc014e504,%eax$/;"	l
c0101c04	obj/kernel.asm	/^c0101c04:	83 e8 50             	sub    $0x50,%eax$/;"	l
c0101c07	obj/kernel.asm	/^c0101c07:	66 a3 04 e5 14 c0    	mov    %ax,0xc014e504$/;"	l
c0101c0d	obj/kernel.asm	/^c0101c0d:	0f b7 05 06 e5 14 c0 	movzwl 0xc014e506,%eax$/;"	l
c0101c14	obj/kernel.asm	/^c0101c14:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101c17	obj/kernel.asm	/^c0101c17:	66 89 45 f2          	mov    %ax,-0xe(%ebp)$/;"	l
c0101c1b	obj/kernel.asm	/^c0101c1b:	c6 45 f1 0e          	movb   $0xe,-0xf(%ebp)$/;"	l
c0101c1f	obj/kernel.asm	/^c0101c1f:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0101c23	obj/kernel.asm	/^c0101c23:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0101c27	obj/kernel.asm	/^c0101c27:	ee                   	out    %al,(%dx)$/;"	l
c0101c28	obj/kernel.asm	/^c0101c28:	0f b7 05 04 e5 14 c0 	movzwl 0xc014e504,%eax$/;"	l
c0101c2f	obj/kernel.asm	/^c0101c2f:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c0101c33	obj/kernel.asm	/^c0101c33:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101c36	obj/kernel.asm	/^c0101c36:	0f b7 15 06 e5 14 c0 	movzwl 0xc014e506,%edx$/;"	l
c0101c3d	obj/kernel.asm	/^c0101c3d:	83 c2 01             	add    $0x1,%edx$/;"	l
c0101c40	obj/kernel.asm	/^c0101c40:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101c43	obj/kernel.asm	/^c0101c43:	66 89 55 ee          	mov    %dx,-0x12(%ebp)$/;"	l
c0101c47	obj/kernel.asm	/^c0101c47:	88 45 ed             	mov    %al,-0x13(%ebp)$/;"	l
c0101c4a	obj/kernel.asm	/^c0101c4a:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0101c4e	obj/kernel.asm	/^c0101c4e:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0101c52	obj/kernel.asm	/^c0101c52:	ee                   	out    %al,(%dx)$/;"	l
c0101c53	obj/kernel.asm	/^c0101c53:	0f b7 05 06 e5 14 c0 	movzwl 0xc014e506,%eax$/;"	l
c0101c5a	obj/kernel.asm	/^c0101c5a:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0101c5d	obj/kernel.asm	/^c0101c5d:	66 89 45 ea          	mov    %ax,-0x16(%ebp)$/;"	l
c0101c61	obj/kernel.asm	/^c0101c61:	c6 45 e9 0f          	movb   $0xf,-0x17(%ebp)$/;"	l
c0101c65	obj/kernel.asm	/^c0101c65:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0101c69	obj/kernel.asm	/^c0101c69:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c0101c6d	obj/kernel.asm	/^c0101c6d:	ee                   	out    %al,(%dx)$/;"	l
c0101c6e	obj/kernel.asm	/^c0101c6e:	0f b7 05 04 e5 14 c0 	movzwl 0xc014e504,%eax$/;"	l
c0101c75	obj/kernel.asm	/^c0101c75:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101c78	obj/kernel.asm	/^c0101c78:	0f b7 15 06 e5 14 c0 	movzwl 0xc014e506,%edx$/;"	l
c0101c7f	obj/kernel.asm	/^c0101c7f:	83 c2 01             	add    $0x1,%edx$/;"	l
c0101c82	obj/kernel.asm	/^c0101c82:	0f b7 d2             	movzwl %dx,%edx$/;"	l
c0101c85	obj/kernel.asm	/^c0101c85:	66 89 55 e6          	mov    %dx,-0x1a(%ebp)$/;"	l
c0101c89	obj/kernel.asm	/^c0101c89:	88 45 e5             	mov    %al,-0x1b(%ebp)$/;"	l
c0101c8c	obj/kernel.asm	/^c0101c8c:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c0101c90	obj/kernel.asm	/^c0101c90:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c0101c94	obj/kernel.asm	/^c0101c94:	ee                   	out    %al,(%dx)$/;"	l
c0101c95	obj/kernel.asm	/^c0101c95:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0101c98	obj/kernel.asm	/^c0101c98:	c9                   	leave  $/;"	l
c0101c99	obj/kernel.asm	/^c0101c99:	c3                   	ret    $/;"	l
c0101c9a	obj/kernel.asm	/^c0101c9a <serial_putc_sub>:$/;"	l
c0101c9a	obj/kernel.asm	/^c0101c9a:	55                   	push   %ebp$/;"	l
c0101c9b	obj/kernel.asm	/^c0101c9b:	89 e5                	mov    %esp,%ebp$/;"	l
c0101c9d	obj/kernel.asm	/^c0101c9d:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101ca0	obj/kernel.asm	/^c0101ca0:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0101ca7	obj/kernel.asm	/^c0101ca7:	eb 09                	jmp    c0101cb2 <serial_putc_sub+0x18>$/;"	l
c0101ca9	obj/kernel.asm	/^c0101ca9:	e8 5b fb ff ff       	call   c0101809 <delay>$/;"	l
c0101cae	obj/kernel.asm	/^c0101cae:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0101cb2	obj/kernel.asm	/^c0101cb2:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c0101cb8	obj/kernel.asm	/^c0101cb8:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101cbc	obj/kernel.asm	/^c0101cbc:	89 c2                	mov    %eax,%edx$/;"	l
c0101cbe	obj/kernel.asm	/^c0101cbe:	ec                   	in     (%dx),%al$/;"	l
c0101cbf	obj/kernel.asm	/^c0101cbf:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101cc2	obj/kernel.asm	/^c0101cc2:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101cc6	obj/kernel.asm	/^c0101cc6:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101cc9	obj/kernel.asm	/^c0101cc9:	83 e0 20             	and    $0x20,%eax$/;"	l
c0101ccc	obj/kernel.asm	/^c0101ccc:	85 c0                	test   %eax,%eax$/;"	l
c0101cce	obj/kernel.asm	/^c0101cce:	75 09                	jne    c0101cd9 <serial_putc_sub+0x3f>$/;"	l
c0101cd0	obj/kernel.asm	/^c0101cd0:	81 7d fc ff 31 00 00 	cmpl   $0x31ff,-0x4(%ebp)$/;"	l
c0101cd7	obj/kernel.asm	/^c0101cd7:	7e d0                	jle    c0101ca9 <serial_putc_sub+0xf>$/;"	l
c0101cd9	obj/kernel.asm	/^c0101cd9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101cdc	obj/kernel.asm	/^c0101cdc:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101cdf	obj/kernel.asm	/^c0101cdf:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c0101ce5	obj/kernel.asm	/^c0101ce5:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101ce8	obj/kernel.asm	/^c0101ce8:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101cec	obj/kernel.asm	/^c0101cec:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0101cf0	obj/kernel.asm	/^c0101cf0:	ee                   	out    %al,(%dx)$/;"	l
c0101cf1	obj/kernel.asm	/^c0101cf1:	c9                   	leave  $/;"	l
c0101cf2	obj/kernel.asm	/^c0101cf2:	c3                   	ret    $/;"	l
c0101cf3	obj/kernel.asm	/^c0101cf3 <serial_putc>:$/;"	l
c0101cf3	obj/kernel.asm	/^c0101cf3:	55                   	push   %ebp$/;"	l
c0101cf4	obj/kernel.asm	/^c0101cf4:	89 e5                	mov    %esp,%ebp$/;"	l
c0101cf6	obj/kernel.asm	/^c0101cf6:	83 7d 08 08          	cmpl   $0x8,0x8(%ebp)$/;"	l
c0101cfa	obj/kernel.asm	/^c0101cfa:	74 0d                	je     c0101d09 <serial_putc+0x16>$/;"	l
c0101cfc	obj/kernel.asm	/^c0101cfc:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101cff	obj/kernel.asm	/^c0101cff:	e8 96 ff ff ff       	call   c0101c9a <serial_putc_sub>$/;"	l
c0101d04	obj/kernel.asm	/^c0101d04:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101d07	obj/kernel.asm	/^c0101d07:	eb 1e                	jmp    c0101d27 <serial_putc+0x34>$/;"	l
c0101d09	obj/kernel.asm	/^c0101d09:	6a 08                	push   $0x8$/;"	l
c0101d0b	obj/kernel.asm	/^c0101d0b:	e8 8a ff ff ff       	call   c0101c9a <serial_putc_sub>$/;"	l
c0101d10	obj/kernel.asm	/^c0101d10:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101d13	obj/kernel.asm	/^c0101d13:	6a 20                	push   $0x20$/;"	l
c0101d15	obj/kernel.asm	/^c0101d15:	e8 80 ff ff ff       	call   c0101c9a <serial_putc_sub>$/;"	l
c0101d1a	obj/kernel.asm	/^c0101d1a:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101d1d	obj/kernel.asm	/^c0101d1d:	6a 08                	push   $0x8$/;"	l
c0101d1f	obj/kernel.asm	/^c0101d1f:	e8 76 ff ff ff       	call   c0101c9a <serial_putc_sub>$/;"	l
c0101d24	obj/kernel.asm	/^c0101d24:	83 c4 04             	add    $0x4,%esp$/;"	l
c0101d27	obj/kernel.asm	/^c0101d27:	c9                   	leave  $/;"	l
c0101d28	obj/kernel.asm	/^c0101d28:	c3                   	ret    $/;"	l
c0101d29	obj/kernel.asm	/^c0101d29 <cons_intr>:$/;"	l
c0101d29	obj/kernel.asm	/^c0101d29:	55                   	push   %ebp$/;"	l
c0101d2a	obj/kernel.asm	/^c0101d2a:	89 e5                	mov    %esp,%ebp$/;"	l
c0101d2c	obj/kernel.asm	/^c0101d2c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101d2f	obj/kernel.asm	/^c0101d2f:	eb 33                	jmp    c0101d64 <cons_intr+0x3b>$/;"	l
c0101d31	obj/kernel.asm	/^c0101d31:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0101d35	obj/kernel.asm	/^c0101d35:	74 2d                	je     c0101d64 <cons_intr+0x3b>$/;"	l
c0101d37	obj/kernel.asm	/^c0101d37:	a1 44 e7 14 c0       	mov    0xc014e744,%eax$/;"	l
c0101d3c	obj/kernel.asm	/^c0101d3c:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0101d3f	obj/kernel.asm	/^c0101d3f:	89 15 44 e7 14 c0    	mov    %edx,0xc014e744$/;"	l
c0101d45	obj/kernel.asm	/^c0101d45:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0101d48	obj/kernel.asm	/^c0101d48:	88 90 40 e5 14 c0    	mov    %dl,-0x3feb1ac0(%eax)$/;"	l
c0101d4e	obj/kernel.asm	/^c0101d4e:	a1 44 e7 14 c0       	mov    0xc014e744,%eax$/;"	l
c0101d53	obj/kernel.asm	/^c0101d53:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c0101d58	obj/kernel.asm	/^c0101d58:	75 0a                	jne    c0101d64 <cons_intr+0x3b>$/;"	l
c0101d5a	obj/kernel.asm	/^c0101d5a:	c7 05 44 e7 14 c0 00 	movl   $0x0,0xc014e744$/;"	l
c0101d61	obj/kernel.asm	/^c0101d61:	00 00 00 $/;"	l
c0101d64	obj/kernel.asm	/^c0101d64:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0101d67	obj/kernel.asm	/^c0101d67:	ff d0                	call   *%eax$/;"	l
c0101d69	obj/kernel.asm	/^c0101d69:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101d6c	obj/kernel.asm	/^c0101d6c:	83 7d f4 ff          	cmpl   $0xffffffff,-0xc(%ebp)$/;"	l
c0101d70	obj/kernel.asm	/^c0101d70:	75 bf                	jne    c0101d31 <cons_intr+0x8>$/;"	l
c0101d72	obj/kernel.asm	/^c0101d72:	c9                   	leave  $/;"	l
c0101d73	obj/kernel.asm	/^c0101d73:	c3                   	ret    $/;"	l
c0101d74	obj/kernel.asm	/^c0101d74 <serial_proc_data>:$/;"	l
c0101d74	obj/kernel.asm	/^c0101d74:	55                   	push   %ebp$/;"	l
c0101d75	obj/kernel.asm	/^c0101d75:	89 e5                	mov    %esp,%ebp$/;"	l
c0101d77	obj/kernel.asm	/^c0101d77:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0101d7a	obj/kernel.asm	/^c0101d7a:	66 c7 45 fa fd 03    	movw   $0x3fd,-0x6(%ebp)$/;"	l
c0101d80	obj/kernel.asm	/^c0101d80:	0f b7 45 fa          	movzwl -0x6(%ebp),%eax$/;"	l
c0101d84	obj/kernel.asm	/^c0101d84:	89 c2                	mov    %eax,%edx$/;"	l
c0101d86	obj/kernel.asm	/^c0101d86:	ec                   	in     (%dx),%al$/;"	l
c0101d87	obj/kernel.asm	/^c0101d87:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c0101d8a	obj/kernel.asm	/^c0101d8a:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c0101d8e	obj/kernel.asm	/^c0101d8e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101d91	obj/kernel.asm	/^c0101d91:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101d94	obj/kernel.asm	/^c0101d94:	85 c0                	test   %eax,%eax$/;"	l
c0101d96	obj/kernel.asm	/^c0101d96:	75 07                	jne    c0101d9f <serial_proc_data+0x2b>$/;"	l
c0101d98	obj/kernel.asm	/^c0101d98:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0101d9d	obj/kernel.asm	/^c0101d9d:	eb 2a                	jmp    c0101dc9 <serial_proc_data+0x55>$/;"	l
c0101d9f	obj/kernel.asm	/^c0101d9f:	66 c7 45 f6 f8 03    	movw   $0x3f8,-0xa(%ebp)$/;"	l
c0101da5	obj/kernel.asm	/^c0101da5:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax$/;"	l
c0101da9	obj/kernel.asm	/^c0101da9:	89 c2                	mov    %eax,%edx$/;"	l
c0101dab	obj/kernel.asm	/^c0101dab:	ec                   	in     (%dx),%al$/;"	l
c0101dac	obj/kernel.asm	/^c0101dac:	88 45 f5             	mov    %al,-0xb(%ebp)$/;"	l
c0101daf	obj/kernel.asm	/^c0101daf:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c0101db3	obj/kernel.asm	/^c0101db3:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101db6	obj/kernel.asm	/^c0101db6:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0101db9	obj/kernel.asm	/^c0101db9:	83 7d fc 7f          	cmpl   $0x7f,-0x4(%ebp)$/;"	l
c0101dbd	obj/kernel.asm	/^c0101dbd:	75 07                	jne    c0101dc6 <serial_proc_data+0x52>$/;"	l
c0101dbf	obj/kernel.asm	/^c0101dbf:	c7 45 fc 08 00 00 00 	movl   $0x8,-0x4(%ebp)$/;"	l
c0101dc6	obj/kernel.asm	/^c0101dc6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0101dc9	obj/kernel.asm	/^c0101dc9:	c9                   	leave  $/;"	l
c0101dca	obj/kernel.asm	/^c0101dca:	c3                   	ret    $/;"	l
c0101dcb	obj/kernel.asm	/^c0101dcb <serial_intr>:$/;"	l
c0101dcb	obj/kernel.asm	/^c0101dcb:	55                   	push   %ebp$/;"	l
c0101dcc	obj/kernel.asm	/^c0101dcc:	89 e5                	mov    %esp,%ebp$/;"	l
c0101dce	obj/kernel.asm	/^c0101dce:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101dd1	obj/kernel.asm	/^c0101dd1:	a1 08 e5 14 c0       	mov    0xc014e508,%eax$/;"	l
c0101dd6	obj/kernel.asm	/^c0101dd6:	85 c0                	test   %eax,%eax$/;"	l
c0101dd8	obj/kernel.asm	/^c0101dd8:	74 10                	je     c0101dea <serial_intr+0x1f>$/;"	l
c0101dda	obj/kernel.asm	/^c0101dda:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101ddd	obj/kernel.asm	/^c0101ddd:	68 74 1d 10 c0       	push   $0xc0101d74$/;"	l
c0101de2	obj/kernel.asm	/^c0101de2:	e8 42 ff ff ff       	call   c0101d29 <cons_intr>$/;"	l
c0101de7	obj/kernel.asm	/^c0101de7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101dea	obj/kernel.asm	/^c0101dea:	c9                   	leave  $/;"	l
c0101deb	obj/kernel.asm	/^c0101deb:	c3                   	ret    $/;"	l
c0101dec	obj/kernel.asm	/^c0101dec <kbd_proc_data>:$/;"	l
c0101dec	obj/kernel.asm	/^c0101dec:	55                   	push   %ebp$/;"	l
c0101ded	obj/kernel.asm	/^c0101ded:	89 e5                	mov    %esp,%ebp$/;"	l
c0101def	obj/kernel.asm	/^c0101def:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0101df2	obj/kernel.asm	/^c0101df2:	66 c7 45 f0 64 00    	movw   $0x64,-0x10(%ebp)$/;"	l
c0101df8	obj/kernel.asm	/^c0101df8:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax$/;"	l
c0101dfc	obj/kernel.asm	/^c0101dfc:	89 c2                	mov    %eax,%edx$/;"	l
c0101dfe	obj/kernel.asm	/^c0101dfe:	ec                   	in     (%dx),%al$/;"	l
c0101dff	obj/kernel.asm	/^c0101dff:	88 45 ef             	mov    %al,-0x11(%ebp)$/;"	l
c0101e02	obj/kernel.asm	/^c0101e02:	0f b6 45 ef          	movzbl -0x11(%ebp),%eax$/;"	l
c0101e06	obj/kernel.asm	/^c0101e06:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101e09	obj/kernel.asm	/^c0101e09:	83 e0 01             	and    $0x1,%eax$/;"	l
c0101e0c	obj/kernel.asm	/^c0101e0c:	85 c0                	test   %eax,%eax$/;"	l
c0101e0e	obj/kernel.asm	/^c0101e0e:	75 0a                	jne    c0101e1a <kbd_proc_data+0x2e>$/;"	l
c0101e10	obj/kernel.asm	/^c0101e10:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c0101e15	obj/kernel.asm	/^c0101e15:	e9 5d 01 00 00       	jmp    c0101f77 <kbd_proc_data+0x18b>$/;"	l
c0101e1a	obj/kernel.asm	/^c0101e1a:	66 c7 45 ec 60 00    	movw   $0x60,-0x14(%ebp)$/;"	l
c0101e20	obj/kernel.asm	/^c0101e20:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c0101e24	obj/kernel.asm	/^c0101e24:	89 c2                	mov    %eax,%edx$/;"	l
c0101e26	obj/kernel.asm	/^c0101e26:	ec                   	in     (%dx),%al$/;"	l
c0101e27	obj/kernel.asm	/^c0101e27:	88 45 eb             	mov    %al,-0x15(%ebp)$/;"	l
c0101e2a	obj/kernel.asm	/^c0101e2a:	0f b6 45 eb          	movzbl -0x15(%ebp),%eax$/;"	l
c0101e2e	obj/kernel.asm	/^c0101e2e:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0101e31	obj/kernel.asm	/^c0101e31:	80 7d f3 e0          	cmpb   $0xe0,-0xd(%ebp)$/;"	l
c0101e35	obj/kernel.asm	/^c0101e35:	75 17                	jne    c0101e4e <kbd_proc_data+0x62>$/;"	l
c0101e37	obj/kernel.asm	/^c0101e37:	a1 48 e7 14 c0       	mov    0xc014e748,%eax$/;"	l
c0101e3c	obj/kernel.asm	/^c0101e3c:	83 c8 40             	or     $0x40,%eax$/;"	l
c0101e3f	obj/kernel.asm	/^c0101e3f:	a3 48 e7 14 c0       	mov    %eax,0xc014e748$/;"	l
c0101e44	obj/kernel.asm	/^c0101e44:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101e49	obj/kernel.asm	/^c0101e49:	e9 29 01 00 00       	jmp    c0101f77 <kbd_proc_data+0x18b>$/;"	l
c0101e4e	obj/kernel.asm	/^c0101e4e:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101e52	obj/kernel.asm	/^c0101e52:	84 c0                	test   %al,%al$/;"	l
c0101e54	obj/kernel.asm	/^c0101e54:	79 47                	jns    c0101e9d <kbd_proc_data+0xb1>$/;"	l
c0101e56	obj/kernel.asm	/^c0101e56:	a1 48 e7 14 c0       	mov    0xc014e748,%eax$/;"	l
c0101e5b	obj/kernel.asm	/^c0101e5b:	83 e0 40             	and    $0x40,%eax$/;"	l
c0101e5e	obj/kernel.asm	/^c0101e5e:	85 c0                	test   %eax,%eax$/;"	l
c0101e60	obj/kernel.asm	/^c0101e60:	75 09                	jne    c0101e6b <kbd_proc_data+0x7f>$/;"	l
c0101e62	obj/kernel.asm	/^c0101e62:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101e66	obj/kernel.asm	/^c0101e66:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c0101e69	obj/kernel.asm	/^c0101e69:	eb 04                	jmp    c0101e6f <kbd_proc_data+0x83>$/;"	l
c0101e6b	obj/kernel.asm	/^c0101e6b:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101e6f	obj/kernel.asm	/^c0101e6f:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0101e72	obj/kernel.asm	/^c0101e72:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101e76	obj/kernel.asm	/^c0101e76:	0f b6 80 80 d0 14 c0 	movzbl -0x3feb2f80(%eax),%eax$/;"	l
c0101e7d	obj/kernel.asm	/^c0101e7d:	83 c8 40             	or     $0x40,%eax$/;"	l
c0101e80	obj/kernel.asm	/^c0101e80:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101e83	obj/kernel.asm	/^c0101e83:	f7 d0                	not    %eax$/;"	l
c0101e85	obj/kernel.asm	/^c0101e85:	89 c2                	mov    %eax,%edx$/;"	l
c0101e87	obj/kernel.asm	/^c0101e87:	a1 48 e7 14 c0       	mov    0xc014e748,%eax$/;"	l
c0101e8c	obj/kernel.asm	/^c0101e8c:	21 d0                	and    %edx,%eax$/;"	l
c0101e8e	obj/kernel.asm	/^c0101e8e:	a3 48 e7 14 c0       	mov    %eax,0xc014e748$/;"	l
c0101e93	obj/kernel.asm	/^c0101e93:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0101e98	obj/kernel.asm	/^c0101e98:	e9 da 00 00 00       	jmp    c0101f77 <kbd_proc_data+0x18b>$/;"	l
c0101e9d	obj/kernel.asm	/^c0101e9d:	a1 48 e7 14 c0       	mov    0xc014e748,%eax$/;"	l
c0101ea2	obj/kernel.asm	/^c0101ea2:	83 e0 40             	and    $0x40,%eax$/;"	l
c0101ea5	obj/kernel.asm	/^c0101ea5:	85 c0                	test   %eax,%eax$/;"	l
c0101ea7	obj/kernel.asm	/^c0101ea7:	74 11                	je     c0101eba <kbd_proc_data+0xce>$/;"	l
c0101ea9	obj/kernel.asm	/^c0101ea9:	80 4d f3 80          	orb    $0x80,-0xd(%ebp)$/;"	l
c0101ead	obj/kernel.asm	/^c0101ead:	a1 48 e7 14 c0       	mov    0xc014e748,%eax$/;"	l
c0101eb2	obj/kernel.asm	/^c0101eb2:	83 e0 bf             	and    $0xffffffbf,%eax$/;"	l
c0101eb5	obj/kernel.asm	/^c0101eb5:	a3 48 e7 14 c0       	mov    %eax,0xc014e748$/;"	l
c0101eba	obj/kernel.asm	/^c0101eba:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101ebe	obj/kernel.asm	/^c0101ebe:	0f b6 80 80 d0 14 c0 	movzbl -0x3feb2f80(%eax),%eax$/;"	l
c0101ec5	obj/kernel.asm	/^c0101ec5:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0101ec8	obj/kernel.asm	/^c0101ec8:	a1 48 e7 14 c0       	mov    0xc014e748,%eax$/;"	l
c0101ecd	obj/kernel.asm	/^c0101ecd:	09 d0                	or     %edx,%eax$/;"	l
c0101ecf	obj/kernel.asm	/^c0101ecf:	a3 48 e7 14 c0       	mov    %eax,0xc014e748$/;"	l
c0101ed4	obj/kernel.asm	/^c0101ed4:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101ed8	obj/kernel.asm	/^c0101ed8:	0f b6 80 80 d1 14 c0 	movzbl -0x3feb2e80(%eax),%eax$/;"	l
c0101edf	obj/kernel.asm	/^c0101edf:	0f b6 d0             	movzbl %al,%edx$/;"	l
c0101ee2	obj/kernel.asm	/^c0101ee2:	a1 48 e7 14 c0       	mov    0xc014e748,%eax$/;"	l
c0101ee7	obj/kernel.asm	/^c0101ee7:	31 d0                	xor    %edx,%eax$/;"	l
c0101ee9	obj/kernel.asm	/^c0101ee9:	a3 48 e7 14 c0       	mov    %eax,0xc014e748$/;"	l
c0101eee	obj/kernel.asm	/^c0101eee:	a1 48 e7 14 c0       	mov    0xc014e748,%eax$/;"	l
c0101ef3	obj/kernel.asm	/^c0101ef3:	83 e0 03             	and    $0x3,%eax$/;"	l
c0101ef6	obj/kernel.asm	/^c0101ef6:	8b 14 85 80 d5 14 c0 	mov    -0x3feb2a80(,%eax,4),%edx$/;"	l
c0101efd	obj/kernel.asm	/^c0101efd:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax$/;"	l
c0101f01	obj/kernel.asm	/^c0101f01:	01 d0                	add    %edx,%eax$/;"	l
c0101f03	obj/kernel.asm	/^c0101f03:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0101f06	obj/kernel.asm	/^c0101f06:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0101f09	obj/kernel.asm	/^c0101f09:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101f0c	obj/kernel.asm	/^c0101f0c:	a1 48 e7 14 c0       	mov    0xc014e748,%eax$/;"	l
c0101f11	obj/kernel.asm	/^c0101f11:	83 e0 08             	and    $0x8,%eax$/;"	l
c0101f14	obj/kernel.asm	/^c0101f14:	85 c0                	test   %eax,%eax$/;"	l
c0101f16	obj/kernel.asm	/^c0101f16:	74 22                	je     c0101f3a <kbd_proc_data+0x14e>$/;"	l
c0101f18	obj/kernel.asm	/^c0101f18:	83 7d f4 60          	cmpl   $0x60,-0xc(%ebp)$/;"	l
c0101f1c	obj/kernel.asm	/^c0101f1c:	7e 0c                	jle    c0101f2a <kbd_proc_data+0x13e>$/;"	l
c0101f1e	obj/kernel.asm	/^c0101f1e:	83 7d f4 7a          	cmpl   $0x7a,-0xc(%ebp)$/;"	l
c0101f22	obj/kernel.asm	/^c0101f22:	7f 06                	jg     c0101f2a <kbd_proc_data+0x13e>$/;"	l
c0101f24	obj/kernel.asm	/^c0101f24:	83 6d f4 20          	subl   $0x20,-0xc(%ebp)$/;"	l
c0101f28	obj/kernel.asm	/^c0101f28:	eb 10                	jmp    c0101f3a <kbd_proc_data+0x14e>$/;"	l
c0101f2a	obj/kernel.asm	/^c0101f2a:	83 7d f4 40          	cmpl   $0x40,-0xc(%ebp)$/;"	l
c0101f2e	obj/kernel.asm	/^c0101f2e:	7e 0a                	jle    c0101f3a <kbd_proc_data+0x14e>$/;"	l
c0101f30	obj/kernel.asm	/^c0101f30:	83 7d f4 5a          	cmpl   $0x5a,-0xc(%ebp)$/;"	l
c0101f34	obj/kernel.asm	/^c0101f34:	7f 04                	jg     c0101f3a <kbd_proc_data+0x14e>$/;"	l
c0101f36	obj/kernel.asm	/^c0101f36:	83 45 f4 20          	addl   $0x20,-0xc(%ebp)$/;"	l
c0101f3a	obj/kernel.asm	/^c0101f3a:	a1 48 e7 14 c0       	mov    0xc014e748,%eax$/;"	l
c0101f3f	obj/kernel.asm	/^c0101f3f:	f7 d0                	not    %eax$/;"	l
c0101f41	obj/kernel.asm	/^c0101f41:	83 e0 06             	and    $0x6,%eax$/;"	l
c0101f44	obj/kernel.asm	/^c0101f44:	85 c0                	test   %eax,%eax$/;"	l
c0101f46	obj/kernel.asm	/^c0101f46:	75 2c                	jne    c0101f74 <kbd_proc_data+0x188>$/;"	l
c0101f48	obj/kernel.asm	/^c0101f48:	81 7d f4 e9 00 00 00 	cmpl   $0xe9,-0xc(%ebp)$/;"	l
c0101f4f	obj/kernel.asm	/^c0101f4f:	75 23                	jne    c0101f74 <kbd_proc_data+0x188>$/;"	l
c0101f51	obj/kernel.asm	/^c0101f51:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101f54	obj/kernel.asm	/^c0101f54:	68 91 44 11 c0       	push   $0xc0114491$/;"	l
c0101f59	obj/kernel.asm	/^c0101f59:	e8 0c e4 ff ff       	call   c010036a <cprintf>$/;"	l
c0101f5e	obj/kernel.asm	/^c0101f5e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101f61	obj/kernel.asm	/^c0101f61:	66 c7 45 e8 92 00    	movw   $0x92,-0x18(%ebp)$/;"	l
c0101f67	obj/kernel.asm	/^c0101f67:	c6 45 e7 03          	movb   $0x3,-0x19(%ebp)$/;"	l
c0101f6b	obj/kernel.asm	/^c0101f6b:	0f b6 45 e7          	movzbl -0x19(%ebp),%eax$/;"	l
c0101f6f	obj/kernel.asm	/^c0101f6f:	0f b7 55 e8          	movzwl -0x18(%ebp),%edx$/;"	l
c0101f73	obj/kernel.asm	/^c0101f73:	ee                   	out    %al,(%dx)$/;"	l
c0101f74	obj/kernel.asm	/^c0101f74:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0101f77	obj/kernel.asm	/^c0101f77:	c9                   	leave  $/;"	l
c0101f78	obj/kernel.asm	/^c0101f78:	c3                   	ret    $/;"	l
c0101f79	obj/kernel.asm	/^c0101f79 <kbd_intr>:$/;"	l
c0101f79	obj/kernel.asm	/^c0101f79:	55                   	push   %ebp$/;"	l
c0101f7a	obj/kernel.asm	/^c0101f7a:	89 e5                	mov    %esp,%ebp$/;"	l
c0101f7c	obj/kernel.asm	/^c0101f7c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101f7f	obj/kernel.asm	/^c0101f7f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101f82	obj/kernel.asm	/^c0101f82:	68 ec 1d 10 c0       	push   $0xc0101dec$/;"	l
c0101f87	obj/kernel.asm	/^c0101f87:	e8 9d fd ff ff       	call   c0101d29 <cons_intr>$/;"	l
c0101f8c	obj/kernel.asm	/^c0101f8c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101f8f	obj/kernel.asm	/^c0101f8f:	c9                   	leave  $/;"	l
c0101f90	obj/kernel.asm	/^c0101f90:	c3                   	ret    $/;"	l
c0101f91	obj/kernel.asm	/^c0101f91 <kbd_init>:$/;"	l
c0101f91	obj/kernel.asm	/^c0101f91:	55                   	push   %ebp$/;"	l
c0101f92	obj/kernel.asm	/^c0101f92:	89 e5                	mov    %esp,%ebp$/;"	l
c0101f94	obj/kernel.asm	/^c0101f94:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101f97	obj/kernel.asm	/^c0101f97:	e8 dd ff ff ff       	call   c0101f79 <kbd_intr>$/;"	l
c0101f9c	obj/kernel.asm	/^c0101f9c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101f9f	obj/kernel.asm	/^c0101f9f:	6a 01                	push   $0x1$/;"	l
c0101fa1	obj/kernel.asm	/^c0101fa1:	e8 47 01 00 00       	call   c01020ed <pic_enable>$/;"	l
c0101fa6	obj/kernel.asm	/^c0101fa6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101fa9	obj/kernel.asm	/^c0101fa9:	c9                   	leave  $/;"	l
c0101faa	obj/kernel.asm	/^c0101faa:	c3                   	ret    $/;"	l
c0101fab	obj/kernel.asm	/^c0101fab <cons_init>:$/;"	l
c0101fab	obj/kernel.asm	/^c0101fab:	55                   	push   %ebp$/;"	l
c0101fac	obj/kernel.asm	/^c0101fac:	89 e5                	mov    %esp,%ebp$/;"	l
c0101fae	obj/kernel.asm	/^c0101fae:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0101fb1	obj/kernel.asm	/^c0101fb1:	e8 9b f8 ff ff       	call   c0101851 <cga_init>$/;"	l
c0101fb6	obj/kernel.asm	/^c0101fb6:	e8 7c f9 ff ff       	call   c0101937 <serial_init>$/;"	l
c0101fbb	obj/kernel.asm	/^c0101fbb:	e8 d1 ff ff ff       	call   c0101f91 <kbd_init>$/;"	l
c0101fc0	obj/kernel.asm	/^c0101fc0:	a1 08 e5 14 c0       	mov    0xc014e508,%eax$/;"	l
c0101fc5	obj/kernel.asm	/^c0101fc5:	85 c0                	test   %eax,%eax$/;"	l
c0101fc7	obj/kernel.asm	/^c0101fc7:	75 10                	jne    c0101fd9 <cons_init+0x2e>$/;"	l
c0101fc9	obj/kernel.asm	/^c0101fc9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101fcc	obj/kernel.asm	/^c0101fcc:	68 9d 44 11 c0       	push   $0xc011449d$/;"	l
c0101fd1	obj/kernel.asm	/^c0101fd1:	e8 94 e3 ff ff       	call   c010036a <cprintf>$/;"	l
c0101fd6	obj/kernel.asm	/^c0101fd6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101fd9	obj/kernel.asm	/^c0101fd9:	c9                   	leave  $/;"	l
c0101fda	obj/kernel.asm	/^c0101fda:	c3                   	ret    $/;"	l
c0101fdb	obj/kernel.asm	/^c0101fdb <cons_putc>:$/;"	l
c0101fdb	obj/kernel.asm	/^c0101fdb:	55                   	push   %ebp$/;"	l
c0101fdc	obj/kernel.asm	/^c0101fdc:	89 e5                	mov    %esp,%ebp$/;"	l
c0101fde	obj/kernel.asm	/^c0101fde:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0101fe1	obj/kernel.asm	/^c0101fe1:	e8 e6 f7 ff ff       	call   c01017cc <__intr_save>$/;"	l
c0101fe6	obj/kernel.asm	/^c0101fe6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0101fe9	obj/kernel.asm	/^c0101fe9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101fec	obj/kernel.asm	/^c0101fec:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101fef	obj/kernel.asm	/^c0101fef:	e8 a0 fa ff ff       	call   c0101a94 <lpt_putc>$/;"	l
c0101ff4	obj/kernel.asm	/^c0101ff4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0101ff7	obj/kernel.asm	/^c0101ff7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0101ffa	obj/kernel.asm	/^c0101ffa:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0101ffd	obj/kernel.asm	/^c0101ffd:	e8 c8 fa ff ff       	call   c0101aca <cga_putc>$/;"	l
c0102002	obj/kernel.asm	/^c0102002:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102005	obj/kernel.asm	/^c0102005:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102008	obj/kernel.asm	/^c0102008:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010200b	obj/kernel.asm	/^c010200b:	e8 e3 fc ff ff       	call   c0101cf3 <serial_putc>$/;"	l
c0102010	obj/kernel.asm	/^c0102010:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102013	obj/kernel.asm	/^c0102013:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102016	obj/kernel.asm	/^c0102016:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0102019	obj/kernel.asm	/^c0102019:	e8 d8 f7 ff ff       	call   c01017f6 <__intr_restore>$/;"	l
c010201e	obj/kernel.asm	/^c010201e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102021	obj/kernel.asm	/^c0102021:	c9                   	leave  $/;"	l
c0102022	obj/kernel.asm	/^c0102022:	c3                   	ret    $/;"	l
c0102023	obj/kernel.asm	/^c0102023 <cons_getc>:$/;"	l
c0102023	obj/kernel.asm	/^c0102023:	55                   	push   %ebp$/;"	l
c0102024	obj/kernel.asm	/^c0102024:	89 e5                	mov    %esp,%ebp$/;"	l
c0102026	obj/kernel.asm	/^c0102026:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102029	obj/kernel.asm	/^c0102029:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0102030	obj/kernel.asm	/^c0102030:	e8 97 f7 ff ff       	call   c01017cc <__intr_save>$/;"	l
c0102035	obj/kernel.asm	/^c0102035:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0102038	obj/kernel.asm	/^c0102038:	e8 8e fd ff ff       	call   c0101dcb <serial_intr>$/;"	l
c010203d	obj/kernel.asm	/^c010203d:	e8 37 ff ff ff       	call   c0101f79 <kbd_intr>$/;"	l
c0102042	obj/kernel.asm	/^c0102042:	8b 15 40 e7 14 c0    	mov    0xc014e740,%edx$/;"	l
c0102048	obj/kernel.asm	/^c0102048:	a1 44 e7 14 c0       	mov    0xc014e744,%eax$/;"	l
c010204d	obj/kernel.asm	/^c010204d:	39 c2                	cmp    %eax,%edx$/;"	l
c010204f	obj/kernel.asm	/^c010204f:	74 31                	je     c0102082 <cons_getc+0x5f>$/;"	l
c0102051	obj/kernel.asm	/^c0102051:	a1 40 e7 14 c0       	mov    0xc014e740,%eax$/;"	l
c0102056	obj/kernel.asm	/^c0102056:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0102059	obj/kernel.asm	/^c0102059:	89 15 40 e7 14 c0    	mov    %edx,0xc014e740$/;"	l
c010205f	obj/kernel.asm	/^c010205f:	0f b6 80 40 e5 14 c0 	movzbl -0x3feb1ac0(%eax),%eax$/;"	l
c0102066	obj/kernel.asm	/^c0102066:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0102069	obj/kernel.asm	/^c0102069:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010206c	obj/kernel.asm	/^c010206c:	a1 40 e7 14 c0       	mov    0xc014e740,%eax$/;"	l
c0102071	obj/kernel.asm	/^c0102071:	3d 00 02 00 00       	cmp    $0x200,%eax$/;"	l
c0102076	obj/kernel.asm	/^c0102076:	75 0a                	jne    c0102082 <cons_getc+0x5f>$/;"	l
c0102078	obj/kernel.asm	/^c0102078:	c7 05 40 e7 14 c0 00 	movl   $0x0,0xc014e740$/;"	l
c010207f	obj/kernel.asm	/^c010207f:	00 00 00 $/;"	l
c0102082	obj/kernel.asm	/^c0102082:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102085	obj/kernel.asm	/^c0102085:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0102088	obj/kernel.asm	/^c0102088:	e8 69 f7 ff ff       	call   c01017f6 <__intr_restore>$/;"	l
c010208d	obj/kernel.asm	/^c010208d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102090	obj/kernel.asm	/^c0102090:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102093	obj/kernel.asm	/^c0102093:	c9                   	leave  $/;"	l
c0102094	obj/kernel.asm	/^c0102094:	c3                   	ret    $/;"	l
c0102095	obj/kernel.asm	/^c0102095 <pic_setmask>:$/;"	l
c0102095	obj/kernel.asm	/^c0102095:	55                   	push   %ebp$/;"	l
c0102096	obj/kernel.asm	/^c0102096:	89 e5                	mov    %esp,%ebp$/;"	l
c0102098	obj/kernel.asm	/^c0102098:	83 ec 14             	sub    $0x14,%esp$/;"	l
c010209b	obj/kernel.asm	/^c010209b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010209e	obj/kernel.asm	/^c010209e:	66 89 45 ec          	mov    %ax,-0x14(%ebp)$/;"	l
c01020a2	obj/kernel.asm	/^c01020a2:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c01020a6	obj/kernel.asm	/^c01020a6:	66 a3 90 d5 14 c0    	mov    %ax,0xc014d590$/;"	l
c01020ac	obj/kernel.asm	/^c01020ac:	a1 4c e7 14 c0       	mov    0xc014e74c,%eax$/;"	l
c01020b1	obj/kernel.asm	/^c01020b1:	85 c0                	test   %eax,%eax$/;"	l
c01020b3	obj/kernel.asm	/^c01020b3:	74 36                	je     c01020eb <pic_setmask+0x56>$/;"	l
c01020b5	obj/kernel.asm	/^c01020b5:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c01020b9	obj/kernel.asm	/^c01020b9:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01020bc	obj/kernel.asm	/^c01020bc:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c01020c2	obj/kernel.asm	/^c01020c2:	88 45 fd             	mov    %al,-0x3(%ebp)$/;"	l
c01020c5	obj/kernel.asm	/^c01020c5:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c01020c9	obj/kernel.asm	/^c01020c9:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c01020cd	obj/kernel.asm	/^c01020cd:	ee                   	out    %al,(%dx)$/;"	l
c01020ce	obj/kernel.asm	/^c01020ce:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax$/;"	l
c01020d2	obj/kernel.asm	/^c01020d2:	66 c1 e8 08          	shr    $0x8,%ax$/;"	l
c01020d6	obj/kernel.asm	/^c01020d6:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01020d9	obj/kernel.asm	/^c01020d9:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c01020df	obj/kernel.asm	/^c01020df:	88 45 f9             	mov    %al,-0x7(%ebp)$/;"	l
c01020e2	obj/kernel.asm	/^c01020e2:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c01020e6	obj/kernel.asm	/^c01020e6:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c01020ea	obj/kernel.asm	/^c01020ea:	ee                   	out    %al,(%dx)$/;"	l
c01020eb	obj/kernel.asm	/^c01020eb:	c9                   	leave  $/;"	l
c01020ec	obj/kernel.asm	/^c01020ec:	c3                   	ret    $/;"	l
c01020ed	obj/kernel.asm	/^c01020ed <pic_enable>:$/;"	l
c01020ed	obj/kernel.asm	/^c01020ed:	55                   	push   %ebp$/;"	l
c01020ee	obj/kernel.asm	/^c01020ee:	89 e5                	mov    %esp,%ebp$/;"	l
c01020f0	obj/kernel.asm	/^c01020f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01020f3	obj/kernel.asm	/^c01020f3:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c01020f8	obj/kernel.asm	/^c01020f8:	89 c1                	mov    %eax,%ecx$/;"	l
c01020fa	obj/kernel.asm	/^c01020fa:	d3 e2                	shl    %cl,%edx$/;"	d
c01020fc	obj/kernel.asm	/^c01020fc:	89 d0                	mov    %edx,%eax$/;"	l
c01020fe	obj/kernel.asm	/^c01020fe:	f7 d0                	not    %eax$/;"	l
c0102100	obj/kernel.asm	/^c0102100:	89 c2                	mov    %eax,%edx$/;"	l
c0102102	obj/kernel.asm	/^c0102102:	0f b7 05 90 d5 14 c0 	movzwl 0xc014d590,%eax$/;"	l
c0102109	obj/kernel.asm	/^c0102109:	21 d0                	and    %edx,%eax$/;"	l
c010210b	obj/kernel.asm	/^c010210b:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010210e	obj/kernel.asm	/^c010210e:	50                   	push   %eax$/;"	l
c010210f	obj/kernel.asm	/^c010210f:	e8 81 ff ff ff       	call   c0102095 <pic_setmask>$/;"	l
c0102114	obj/kernel.asm	/^c0102114:	83 c4 04             	add    $0x4,%esp$/;"	l
c0102117	obj/kernel.asm	/^c0102117:	c9                   	leave  $/;"	l
c0102118	obj/kernel.asm	/^c0102118:	c3                   	ret    $/;"	l
c0102119	obj/kernel.asm	/^c0102119 <pic_init>:$/;"	l
c0102119	obj/kernel.asm	/^c0102119:	55                   	push   %ebp$/;"	l
c010211a	obj/kernel.asm	/^c010211a:	89 e5                	mov    %esp,%ebp$/;"	l
c010211c	obj/kernel.asm	/^c010211c:	83 ec 40             	sub    $0x40,%esp$/;"	l
c010211f	obj/kernel.asm	/^c010211f:	c7 05 4c e7 14 c0 01 	movl   $0x1,0xc014e74c$/;"	l
c0102126	obj/kernel.asm	/^c0102126:	00 00 00 $/;"	l
c0102129	obj/kernel.asm	/^c0102129:	66 c7 45 fe 21 00    	movw   $0x21,-0x2(%ebp)$/;"	l
c010212f	obj/kernel.asm	/^c010212f:	c6 45 fd ff          	movb   $0xff,-0x3(%ebp)$/;"	l
c0102133	obj/kernel.asm	/^c0102133:	0f b6 45 fd          	movzbl -0x3(%ebp),%eax$/;"	l
c0102137	obj/kernel.asm	/^c0102137:	0f b7 55 fe          	movzwl -0x2(%ebp),%edx$/;"	l
c010213b	obj/kernel.asm	/^c010213b:	ee                   	out    %al,(%dx)$/;"	l
c010213c	obj/kernel.asm	/^c010213c:	66 c7 45 fa a1 00    	movw   $0xa1,-0x6(%ebp)$/;"	l
c0102142	obj/kernel.asm	/^c0102142:	c6 45 f9 ff          	movb   $0xff,-0x7(%ebp)$/;"	l
c0102146	obj/kernel.asm	/^c0102146:	0f b6 45 f9          	movzbl -0x7(%ebp),%eax$/;"	l
c010214a	obj/kernel.asm	/^c010214a:	0f b7 55 fa          	movzwl -0x6(%ebp),%edx$/;"	l
c010214e	obj/kernel.asm	/^c010214e:	ee                   	out    %al,(%dx)$/;"	l
c010214f	obj/kernel.asm	/^c010214f:	66 c7 45 f6 20 00    	movw   $0x20,-0xa(%ebp)$/;"	l
c0102155	obj/kernel.asm	/^c0102155:	c6 45 f5 11          	movb   $0x11,-0xb(%ebp)$/;"	l
c0102159	obj/kernel.asm	/^c0102159:	0f b6 45 f5          	movzbl -0xb(%ebp),%eax$/;"	l
c010215d	obj/kernel.asm	/^c010215d:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx$/;"	l
c0102161	obj/kernel.asm	/^c0102161:	ee                   	out    %al,(%dx)$/;"	l
c0102162	obj/kernel.asm	/^c0102162:	66 c7 45 f2 21 00    	movw   $0x21,-0xe(%ebp)$/;"	l
c0102168	obj/kernel.asm	/^c0102168:	c6 45 f1 20          	movb   $0x20,-0xf(%ebp)$/;"	l
c010216c	obj/kernel.asm	/^c010216c:	0f b6 45 f1          	movzbl -0xf(%ebp),%eax$/;"	l
c0102170	obj/kernel.asm	/^c0102170:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx$/;"	l
c0102174	obj/kernel.asm	/^c0102174:	ee                   	out    %al,(%dx)$/;"	l
c0102175	obj/kernel.asm	/^c0102175:	66 c7 45 ee 21 00    	movw   $0x21,-0x12(%ebp)$/;"	l
c010217b	obj/kernel.asm	/^c010217b:	c6 45 ed 04          	movb   $0x4,-0x13(%ebp)$/;"	l
c010217f	obj/kernel.asm	/^c010217f:	0f b6 45 ed          	movzbl -0x13(%ebp),%eax$/;"	l
c0102183	obj/kernel.asm	/^c0102183:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx$/;"	l
c0102187	obj/kernel.asm	/^c0102187:	ee                   	out    %al,(%dx)$/;"	l
c0102188	obj/kernel.asm	/^c0102188:	66 c7 45 ea 21 00    	movw   $0x21,-0x16(%ebp)$/;"	l
c010218e	obj/kernel.asm	/^c010218e:	c6 45 e9 03          	movb   $0x3,-0x17(%ebp)$/;"	l
c0102192	obj/kernel.asm	/^c0102192:	0f b6 45 e9          	movzbl -0x17(%ebp),%eax$/;"	l
c0102196	obj/kernel.asm	/^c0102196:	0f b7 55 ea          	movzwl -0x16(%ebp),%edx$/;"	l
c010219a	obj/kernel.asm	/^c010219a:	ee                   	out    %al,(%dx)$/;"	l
c010219b	obj/kernel.asm	/^c010219b:	66 c7 45 e6 a0 00    	movw   $0xa0,-0x1a(%ebp)$/;"	l
c01021a1	obj/kernel.asm	/^c01021a1:	c6 45 e5 11          	movb   $0x11,-0x1b(%ebp)$/;"	l
c01021a5	obj/kernel.asm	/^c01021a5:	0f b6 45 e5          	movzbl -0x1b(%ebp),%eax$/;"	l
c01021a9	obj/kernel.asm	/^c01021a9:	0f b7 55 e6          	movzwl -0x1a(%ebp),%edx$/;"	l
c01021ad	obj/kernel.asm	/^c01021ad:	ee                   	out    %al,(%dx)$/;"	l
c01021ae	obj/kernel.asm	/^c01021ae:	66 c7 45 e2 a1 00    	movw   $0xa1,-0x1e(%ebp)$/;"	l
c01021b4	obj/kernel.asm	/^c01021b4:	c6 45 e1 28          	movb   $0x28,-0x1f(%ebp)$/;"	l
c01021b8	obj/kernel.asm	/^c01021b8:	0f b6 45 e1          	movzbl -0x1f(%ebp),%eax$/;"	l
c01021bc	obj/kernel.asm	/^c01021bc:	0f b7 55 e2          	movzwl -0x1e(%ebp),%edx$/;"	l
c01021c0	obj/kernel.asm	/^c01021c0:	ee                   	out    %al,(%dx)$/;"	l
c01021c1	obj/kernel.asm	/^c01021c1:	66 c7 45 de a1 00    	movw   $0xa1,-0x22(%ebp)$/;"	l
c01021c7	obj/kernel.asm	/^c01021c7:	c6 45 dd 02          	movb   $0x2,-0x23(%ebp)$/;"	l
c01021cb	obj/kernel.asm	/^c01021cb:	0f b6 45 dd          	movzbl -0x23(%ebp),%eax$/;"	l
c01021cf	obj/kernel.asm	/^c01021cf:	0f b7 55 de          	movzwl -0x22(%ebp),%edx$/;"	l
c01021d3	obj/kernel.asm	/^c01021d3:	ee                   	out    %al,(%dx)$/;"	l
c01021d4	obj/kernel.asm	/^c01021d4:	66 c7 45 da a1 00    	movw   $0xa1,-0x26(%ebp)$/;"	l
c01021da	obj/kernel.asm	/^c01021da:	c6 45 d9 03          	movb   $0x3,-0x27(%ebp)$/;"	l
c01021de	obj/kernel.asm	/^c01021de:	0f b6 45 d9          	movzbl -0x27(%ebp),%eax$/;"	l
c01021e2	obj/kernel.asm	/^c01021e2:	0f b7 55 da          	movzwl -0x26(%ebp),%edx$/;"	l
c01021e6	obj/kernel.asm	/^c01021e6:	ee                   	out    %al,(%dx)$/;"	l
c01021e7	obj/kernel.asm	/^c01021e7:	66 c7 45 d6 20 00    	movw   $0x20,-0x2a(%ebp)$/;"	l
c01021ed	obj/kernel.asm	/^c01021ed:	c6 45 d5 68          	movb   $0x68,-0x2b(%ebp)$/;"	l
c01021f1	obj/kernel.asm	/^c01021f1:	0f b6 45 d5          	movzbl -0x2b(%ebp),%eax$/;"	l
c01021f5	obj/kernel.asm	/^c01021f5:	0f b7 55 d6          	movzwl -0x2a(%ebp),%edx$/;"	l
c01021f9	obj/kernel.asm	/^c01021f9:	ee                   	out    %al,(%dx)$/;"	l
c01021fa	obj/kernel.asm	/^c01021fa:	66 c7 45 d2 20 00    	movw   $0x20,-0x2e(%ebp)$/;"	l
c0102200	obj/kernel.asm	/^c0102200:	c6 45 d1 0a          	movb   $0xa,-0x2f(%ebp)$/;"	l
c0102204	obj/kernel.asm	/^c0102204:	0f b6 45 d1          	movzbl -0x2f(%ebp),%eax$/;"	l
c0102208	obj/kernel.asm	/^c0102208:	0f b7 55 d2          	movzwl -0x2e(%ebp),%edx$/;"	l
c010220c	obj/kernel.asm	/^c010220c:	ee                   	out    %al,(%dx)$/;"	l
c010220d	obj/kernel.asm	/^c010220d:	66 c7 45 ce a0 00    	movw   $0xa0,-0x32(%ebp)$/;"	l
c0102213	obj/kernel.asm	/^c0102213:	c6 45 cd 68          	movb   $0x68,-0x33(%ebp)$/;"	l
c0102217	obj/kernel.asm	/^c0102217:	0f b6 45 cd          	movzbl -0x33(%ebp),%eax$/;"	l
c010221b	obj/kernel.asm	/^c010221b:	0f b7 55 ce          	movzwl -0x32(%ebp),%edx$/;"	l
c010221f	obj/kernel.asm	/^c010221f:	ee                   	out    %al,(%dx)$/;"	l
c0102220	obj/kernel.asm	/^c0102220:	66 c7 45 ca a0 00    	movw   $0xa0,-0x36(%ebp)$/;"	l
c0102226	obj/kernel.asm	/^c0102226:	c6 45 c9 0a          	movb   $0xa,-0x37(%ebp)$/;"	l
c010222a	obj/kernel.asm	/^c010222a:	0f b6 45 c9          	movzbl -0x37(%ebp),%eax$/;"	l
c010222e	obj/kernel.asm	/^c010222e:	0f b7 55 ca          	movzwl -0x36(%ebp),%edx$/;"	l
c0102232	obj/kernel.asm	/^c0102232:	ee                   	out    %al,(%dx)$/;"	l
c0102233	obj/kernel.asm	/^c0102233:	0f b7 05 90 d5 14 c0 	movzwl 0xc014d590,%eax$/;"	l
c010223a	obj/kernel.asm	/^c010223a:	66 83 f8 ff          	cmp    $0xffff,%ax$/;"	l
c010223e	obj/kernel.asm	/^c010223e:	74 13                	je     c0102253 <pic_init+0x13a>$/;"	l
c0102240	obj/kernel.asm	/^c0102240:	0f b7 05 90 d5 14 c0 	movzwl 0xc014d590,%eax$/;"	l
c0102247	obj/kernel.asm	/^c0102247:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010224a	obj/kernel.asm	/^c010224a:	50                   	push   %eax$/;"	l
c010224b	obj/kernel.asm	/^c010224b:	e8 45 fe ff ff       	call   c0102095 <pic_setmask>$/;"	l
c0102250	obj/kernel.asm	/^c0102250:	83 c4 04             	add    $0x4,%esp$/;"	l
c0102253	obj/kernel.asm	/^c0102253:	c9                   	leave  $/;"	l
c0102254	obj/kernel.asm	/^c0102254:	c3                   	ret    $/;"	l
c0102255	obj/kernel.asm	/^c0102255 <intr_enable>:$/;"	l
c0102255	obj/kernel.asm	/^c0102255:	55                   	push   %ebp$/;"	l
c0102256	obj/kernel.asm	/^c0102256:	89 e5                	mov    %esp,%ebp$/;"	l
c0102258	obj/kernel.asm	/^c0102258:	fb                   	sti    $/;"	l
c0102259	obj/kernel.asm	/^c0102259:	5d                   	pop    %ebp$/;"	l
c010225a	obj/kernel.asm	/^c010225a:	c3                   	ret    $/;"	l
c010225b	obj/kernel.asm	/^c010225b <intr_disable>:$/;"	l
c010225b	obj/kernel.asm	/^c010225b:	55                   	push   %ebp$/;"	l
c010225c	obj/kernel.asm	/^c010225c:	89 e5                	mov    %esp,%ebp$/;"	l
c010225e	obj/kernel.asm	/^c010225e:	fa                   	cli    $/;"	l
c010225f	obj/kernel.asm	/^c010225f:	5d                   	pop    %ebp$/;"	l
c0102260	obj/kernel.asm	/^c0102260:	c3                   	ret    $/;"	l
c0102261	obj/kernel.asm	/^c0102261 <print_ticks>:$/;"	l
c0102261	obj/kernel.asm	/^c0102261:	55                   	push   %ebp$/;"	l
c0102262	obj/kernel.asm	/^c0102262:	89 e5                	mov    %esp,%ebp$/;"	l
c0102264	obj/kernel.asm	/^c0102264:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102267	obj/kernel.asm	/^c0102267:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010226a	obj/kernel.asm	/^c010226a:	6a 64                	push   $0x64$/;"	l
c010226c	obj/kernel.asm	/^c010226c:	68 c0 44 11 c0       	push   $0xc01144c0$/;"	l
c0102271	obj/kernel.asm	/^c0102271:	e8 f4 e0 ff ff       	call   c010036a <cprintf>$/;"	l
c0102276	obj/kernel.asm	/^c0102276:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102279	obj/kernel.asm	/^c0102279:	c9                   	leave  $/;"	l
c010227a	obj/kernel.asm	/^c010227a:	c3                   	ret    $/;"	l
c010227b	obj/kernel.asm	/^c010227b <idt_init>:$/;"	l
c010227b	obj/kernel.asm	/^c010227b:	55                   	push   %ebp$/;"	l
c010227c	obj/kernel.asm	/^c010227c:	89 e5                	mov    %esp,%ebp$/;"	l
c010227e	obj/kernel.asm	/^c010227e:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0102281	obj/kernel.asm	/^c0102281:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0102288	obj/kernel.asm	/^c0102288:	e9 c3 00 00 00       	jmp    c0102350 <idt_init+0xd5>$/;"	l
c010228d	obj/kernel.asm	/^c010228d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102290	obj/kernel.asm	/^c0102290:	8b 04 85 60 d6 14 c0 	mov    -0x3feb29a0(,%eax,4),%eax$/;"	l
c0102297	obj/kernel.asm	/^c0102297:	89 c2                	mov    %eax,%edx$/;"	l
c0102299	obj/kernel.asm	/^c0102299:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010229c	obj/kernel.asm	/^c010229c:	66 89 14 c5 80 e7 14 	mov    %dx,-0x3feb1880(,%eax,8)$/;"	l
c01022a3	obj/kernel.asm	/^c01022a3:	c0 $/;"	l
c01022a4	obj/kernel.asm	/^c01022a4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022a7	obj/kernel.asm	/^c01022a7:	66 c7 04 c5 82 e7 14 	movw   $0x8,-0x3feb187e(,%eax,8)$/;"	l
c01022ae	obj/kernel.asm	/^c01022ae:	c0 08 00 $/;"	l
c01022b1	obj/kernel.asm	/^c01022b1:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022b4	obj/kernel.asm	/^c01022b4:	0f b6 14 c5 84 e7 14 	movzbl -0x3feb187c(,%eax,8),%edx$/;"	l
c01022bb	obj/kernel.asm	/^c01022bb:	c0 $/;"	l
c01022bc	obj/kernel.asm	/^c01022bc:	83 e2 e0             	and    $0xffffffe0,%edx$/;"	l
c01022bf	obj/kernel.asm	/^c01022bf:	88 14 c5 84 e7 14 c0 	mov    %dl,-0x3feb187c(,%eax,8)$/;"	l
c01022c6	obj/kernel.asm	/^c01022c6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022c9	obj/kernel.asm	/^c01022c9:	0f b6 14 c5 84 e7 14 	movzbl -0x3feb187c(,%eax,8),%edx$/;"	l
c01022d0	obj/kernel.asm	/^c01022d0:	c0 $/;"	l
c01022d1	obj/kernel.asm	/^c01022d1:	83 e2 1f             	and    $0x1f,%edx$/;"	l
c01022d4	obj/kernel.asm	/^c01022d4:	88 14 c5 84 e7 14 c0 	mov    %dl,-0x3feb187c(,%eax,8)$/;"	l
c01022db	obj/kernel.asm	/^c01022db:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022de	obj/kernel.asm	/^c01022de:	0f b6 14 c5 85 e7 14 	movzbl -0x3feb187b(,%eax,8),%edx$/;"	l
c01022e5	obj/kernel.asm	/^c01022e5:	c0 $/;"	l
c01022e6	obj/kernel.asm	/^c01022e6:	83 e2 f0             	and    $0xfffffff0,%edx$/;"	l
c01022e9	obj/kernel.asm	/^c01022e9:	83 ca 0e             	or     $0xe,%edx$/;"	l
c01022ec	obj/kernel.asm	/^c01022ec:	88 14 c5 85 e7 14 c0 	mov    %dl,-0x3feb187b(,%eax,8)$/;"	l
c01022f3	obj/kernel.asm	/^c01022f3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01022f6	obj/kernel.asm	/^c01022f6:	0f b6 14 c5 85 e7 14 	movzbl -0x3feb187b(,%eax,8),%edx$/;"	l
c01022fd	obj/kernel.asm	/^c01022fd:	c0 $/;"	l
c01022fe	obj/kernel.asm	/^c01022fe:	83 e2 ef             	and    $0xffffffef,%edx$/;"	l
c0102301	obj/kernel.asm	/^c0102301:	88 14 c5 85 e7 14 c0 	mov    %dl,-0x3feb187b(,%eax,8)$/;"	l
c0102308	obj/kernel.asm	/^c0102308:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010230b	obj/kernel.asm	/^c010230b:	0f b6 14 c5 85 e7 14 	movzbl -0x3feb187b(,%eax,8),%edx$/;"	l
c0102312	obj/kernel.asm	/^c0102312:	c0 $/;"	l
c0102313	obj/kernel.asm	/^c0102313:	83 e2 9f             	and    $0xffffff9f,%edx$/;"	l
c0102316	obj/kernel.asm	/^c0102316:	88 14 c5 85 e7 14 c0 	mov    %dl,-0x3feb187b(,%eax,8)$/;"	l
c010231d	obj/kernel.asm	/^c010231d:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102320	obj/kernel.asm	/^c0102320:	0f b6 14 c5 85 e7 14 	movzbl -0x3feb187b(,%eax,8),%edx$/;"	l
c0102327	obj/kernel.asm	/^c0102327:	c0 $/;"	l
c0102328	obj/kernel.asm	/^c0102328:	83 ca 80             	or     $0xffffff80,%edx$/;"	l
c010232b	obj/kernel.asm	/^c010232b:	88 14 c5 85 e7 14 c0 	mov    %dl,-0x3feb187b(,%eax,8)$/;"	l
c0102332	obj/kernel.asm	/^c0102332:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102335	obj/kernel.asm	/^c0102335:	8b 04 85 60 d6 14 c0 	mov    -0x3feb29a0(,%eax,4),%eax$/;"	l
c010233c	obj/kernel.asm	/^c010233c:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c010233f	obj/kernel.asm	/^c010233f:	89 c2                	mov    %eax,%edx$/;"	l
c0102341	obj/kernel.asm	/^c0102341:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102344	obj/kernel.asm	/^c0102344:	66 89 14 c5 86 e7 14 	mov    %dx,-0x3feb187a(,%eax,8)$/;"	l
c010234b	obj/kernel.asm	/^c010234b:	c0 $/;"	l
c010234c	obj/kernel.asm	/^c010234c:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0102350	obj/kernel.asm	/^c0102350:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0102353	obj/kernel.asm	/^c0102353:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c0102358	obj/kernel.asm	/^c0102358:	0f 86 2f ff ff ff    	jbe    c010228d <idt_init+0x12>$/;"	l
c010235e	obj/kernel.asm	/^c010235e:	a1 60 d8 14 c0       	mov    0xc014d860,%eax$/;"	l
c0102363	obj/kernel.asm	/^c0102363:	66 a3 80 eb 14 c0    	mov    %ax,0xc014eb80$/;"	l
c0102369	obj/kernel.asm	/^c0102369:	66 c7 05 82 eb 14 c0 	movw   $0x8,0xc014eb82$/;"	l
c0102370	obj/kernel.asm	/^c0102370:	08 00 $/;"	l
c0102372	obj/kernel.asm	/^c0102372:	0f b6 05 84 eb 14 c0 	movzbl 0xc014eb84,%eax$/;"	l
c0102379	obj/kernel.asm	/^c0102379:	83 e0 e0             	and    $0xffffffe0,%eax$/;"	l
c010237c	obj/kernel.asm	/^c010237c:	a2 84 eb 14 c0       	mov    %al,0xc014eb84$/;"	l
c0102381	obj/kernel.asm	/^c0102381:	0f b6 05 84 eb 14 c0 	movzbl 0xc014eb84,%eax$/;"	l
c0102388	obj/kernel.asm	/^c0102388:	83 e0 1f             	and    $0x1f,%eax$/;"	l
c010238b	obj/kernel.asm	/^c010238b:	a2 84 eb 14 c0       	mov    %al,0xc014eb84$/;"	l
c0102390	obj/kernel.asm	/^c0102390:	0f b6 05 85 eb 14 c0 	movzbl 0xc014eb85,%eax$/;"	l
c0102397	obj/kernel.asm	/^c0102397:	83 c8 0f             	or     $0xf,%eax$/;"	l
c010239a	obj/kernel.asm	/^c010239a:	a2 85 eb 14 c0       	mov    %al,0xc014eb85$/;"	l
c010239f	obj/kernel.asm	/^c010239f:	0f b6 05 85 eb 14 c0 	movzbl 0xc014eb85,%eax$/;"	l
c01023a6	obj/kernel.asm	/^c01023a6:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c01023a9	obj/kernel.asm	/^c01023a9:	a2 85 eb 14 c0       	mov    %al,0xc014eb85$/;"	l
c01023ae	obj/kernel.asm	/^c01023ae:	0f b6 05 85 eb 14 c0 	movzbl 0xc014eb85,%eax$/;"	l
c01023b5	obj/kernel.asm	/^c01023b5:	83 c8 60             	or     $0x60,%eax$/;"	l
c01023b8	obj/kernel.asm	/^c01023b8:	a2 85 eb 14 c0       	mov    %al,0xc014eb85$/;"	l
c01023bd	obj/kernel.asm	/^c01023bd:	0f b6 05 85 eb 14 c0 	movzbl 0xc014eb85,%eax$/;"	l
c01023c4	obj/kernel.asm	/^c01023c4:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c01023c7	obj/kernel.asm	/^c01023c7:	a2 85 eb 14 c0       	mov    %al,0xc014eb85$/;"	l
c01023cc	obj/kernel.asm	/^c01023cc:	a1 60 d8 14 c0       	mov    0xc014d860,%eax$/;"	l
c01023d1	obj/kernel.asm	/^c01023d1:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c01023d4	obj/kernel.asm	/^c01023d4:	66 a3 86 eb 14 c0    	mov    %ax,0xc014eb86$/;"	l
c01023da	obj/kernel.asm	/^c01023da:	c7 45 f8 c0 d5 14 c0 	movl   $0xc014d5c0,-0x8(%ebp)$/;"	l
c01023e1	obj/kernel.asm	/^c01023e1:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01023e4	obj/kernel.asm	/^c01023e4:	0f 01 18             	lidtl  (%eax)$/;"	l
c01023e7	obj/kernel.asm	/^c01023e7:	c9                   	leave  $/;"	l
c01023e8	obj/kernel.asm	/^c01023e8:	c3                   	ret    $/;"	l
c01023e9	obj/kernel.asm	/^c01023e9 <trapname>:$/;"	l
c01023e9	obj/kernel.asm	/^c01023e9:	55                   	push   %ebp$/;"	l
c01023ea	obj/kernel.asm	/^c01023ea:	89 e5                	mov    %esp,%ebp$/;"	l
c01023ec	obj/kernel.asm	/^c01023ec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023ef	obj/kernel.asm	/^c01023ef:	83 f8 13             	cmp    $0x13,%eax$/;"	l
c01023f2	obj/kernel.asm	/^c01023f2:	77 0c                	ja     c0102400 <trapname+0x17>$/;"	l
c01023f4	obj/kernel.asm	/^c01023f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01023f7	obj/kernel.asm	/^c01023f7:	8b 04 85 40 49 11 c0 	mov    -0x3feeb6c0(,%eax,4),%eax$/;"	l
c01023fe	obj/kernel.asm	/^c01023fe:	eb 18                	jmp    c0102418 <trapname+0x2f>$/;"	l
c0102400	obj/kernel.asm	/^c0102400:	83 7d 08 1f          	cmpl   $0x1f,0x8(%ebp)$/;"	l
c0102404	obj/kernel.asm	/^c0102404:	7e 0d                	jle    c0102413 <trapname+0x2a>$/;"	l
c0102406	obj/kernel.asm	/^c0102406:	83 7d 08 2f          	cmpl   $0x2f,0x8(%ebp)$/;"	l
c010240a	obj/kernel.asm	/^c010240a:	7f 07                	jg     c0102413 <trapname+0x2a>$/;"	l
c010240c	obj/kernel.asm	/^c010240c:	b8 ca 44 11 c0       	mov    $0xc01144ca,%eax$/;"	l
c0102411	obj/kernel.asm	/^c0102411:	eb 05                	jmp    c0102418 <trapname+0x2f>$/;"	l
c0102413	obj/kernel.asm	/^c0102413:	b8 dd 44 11 c0       	mov    $0xc01144dd,%eax$/;"	l
c0102418	obj/kernel.asm	/^c0102418:	5d                   	pop    %ebp$/;"	l
c0102419	obj/kernel.asm	/^c0102419:	c3                   	ret    $/;"	l
c010241a	obj/kernel.asm	/^c010241a <trap_in_kernel>:$/;"	l
c010241a	obj/kernel.asm	/^c010241a:	55                   	push   %ebp$/;"	l
c010241b	obj/kernel.asm	/^c010241b:	89 e5                	mov    %esp,%ebp$/;"	l
c010241d	obj/kernel.asm	/^c010241d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102420	obj/kernel.asm	/^c0102420:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c0102424	obj/kernel.asm	/^c0102424:	66 83 f8 08          	cmp    $0x8,%ax$/;"	l
c0102428	obj/kernel.asm	/^c0102428:	0f 94 c0             	sete   %al$/;"	l
c010242b	obj/kernel.asm	/^c010242b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010242e	obj/kernel.asm	/^c010242e:	5d                   	pop    %ebp$/;"	l
c010242f	obj/kernel.asm	/^c010242f:	c3                   	ret    $/;"	l
c0102430	obj/kernel.asm	/^c0102430 <print_trapframe>:$/;"	l
c0102430	obj/kernel.asm	/^c0102430:	55                   	push   %ebp$/;"	l
c0102431	obj/kernel.asm	/^c0102431:	89 e5                	mov    %esp,%ebp$/;"	l
c0102433	obj/kernel.asm	/^c0102433:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102436	obj/kernel.asm	/^c0102436:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102439	obj/kernel.asm	/^c0102439:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010243c	obj/kernel.asm	/^c010243c:	68 1e 45 11 c0       	push   $0xc011451e$/;"	l
c0102441	obj/kernel.asm	/^c0102441:	e8 24 df ff ff       	call   c010036a <cprintf>$/;"	l
c0102446	obj/kernel.asm	/^c0102446:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102449	obj/kernel.asm	/^c0102449:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010244c	obj/kernel.asm	/^c010244c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010244f	obj/kernel.asm	/^c010244f:	50                   	push   %eax$/;"	l
c0102450	obj/kernel.asm	/^c0102450:	e8 b7 01 00 00       	call   c010260c <print_regs>$/;"	l
c0102455	obj/kernel.asm	/^c0102455:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102458	obj/kernel.asm	/^c0102458:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010245b	obj/kernel.asm	/^c010245b:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c010245f	obj/kernel.asm	/^c010245f:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102462	obj/kernel.asm	/^c0102462:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102465	obj/kernel.asm	/^c0102465:	50                   	push   %eax$/;"	l
c0102466	obj/kernel.asm	/^c0102466:	68 2f 45 11 c0       	push   $0xc011452f$/;"	l
c010246b	obj/kernel.asm	/^c010246b:	e8 fa de ff ff       	call   c010036a <cprintf>$/;"	l
c0102470	obj/kernel.asm	/^c0102470:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102473	obj/kernel.asm	/^c0102473:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102476	obj/kernel.asm	/^c0102476:	0f b7 40 28          	movzwl 0x28(%eax),%eax$/;"	l
c010247a	obj/kernel.asm	/^c010247a:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010247d	obj/kernel.asm	/^c010247d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102480	obj/kernel.asm	/^c0102480:	50                   	push   %eax$/;"	l
c0102481	obj/kernel.asm	/^c0102481:	68 42 45 11 c0       	push   $0xc0114542$/;"	l
c0102486	obj/kernel.asm	/^c0102486:	e8 df de ff ff       	call   c010036a <cprintf>$/;"	l
c010248b	obj/kernel.asm	/^c010248b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010248e	obj/kernel.asm	/^c010248e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102491	obj/kernel.asm	/^c0102491:	0f b7 40 24          	movzwl 0x24(%eax),%eax$/;"	l
c0102495	obj/kernel.asm	/^c0102495:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102498	obj/kernel.asm	/^c0102498:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010249b	obj/kernel.asm	/^c010249b:	50                   	push   %eax$/;"	l
c010249c	obj/kernel.asm	/^c010249c:	68 55 45 11 c0       	push   $0xc0114555$/;"	l
c01024a1	obj/kernel.asm	/^c01024a1:	e8 c4 de ff ff       	call   c010036a <cprintf>$/;"	l
c01024a6	obj/kernel.asm	/^c01024a6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01024a9	obj/kernel.asm	/^c01024a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024ac	obj/kernel.asm	/^c01024ac:	0f b7 40 20          	movzwl 0x20(%eax),%eax$/;"	l
c01024b0	obj/kernel.asm	/^c01024b0:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01024b3	obj/kernel.asm	/^c01024b3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01024b6	obj/kernel.asm	/^c01024b6:	50                   	push   %eax$/;"	l
c01024b7	obj/kernel.asm	/^c01024b7:	68 68 45 11 c0       	push   $0xc0114568$/;"	l
c01024bc	obj/kernel.asm	/^c01024bc:	e8 a9 de ff ff       	call   c010036a <cprintf>$/;"	l
c01024c1	obj/kernel.asm	/^c01024c1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01024c4	obj/kernel.asm	/^c01024c4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024c7	obj/kernel.asm	/^c01024c7:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01024ca	obj/kernel.asm	/^c01024ca:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01024cd	obj/kernel.asm	/^c01024cd:	50                   	push   %eax$/;"	l
c01024ce	obj/kernel.asm	/^c01024ce:	e8 16 ff ff ff       	call   c01023e9 <trapname>$/;"	l
c01024d3	obj/kernel.asm	/^c01024d3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01024d6	obj/kernel.asm	/^c01024d6:	89 c2                	mov    %eax,%edx$/;"	l
c01024d8	obj/kernel.asm	/^c01024d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024db	obj/kernel.asm	/^c01024db:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01024de	obj/kernel.asm	/^c01024de:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01024e1	obj/kernel.asm	/^c01024e1:	52                   	push   %edx$/;"	l
c01024e2	obj/kernel.asm	/^c01024e2:	50                   	push   %eax$/;"	l
c01024e3	obj/kernel.asm	/^c01024e3:	68 7b 45 11 c0       	push   $0xc011457b$/;"	l
c01024e8	obj/kernel.asm	/^c01024e8:	e8 7d de ff ff       	call   c010036a <cprintf>$/;"	l
c01024ed	obj/kernel.asm	/^c01024ed:	83 c4 10             	add    $0x10,%esp$/;"	l
c01024f0	obj/kernel.asm	/^c01024f0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01024f3	obj/kernel.asm	/^c01024f3:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01024f6	obj/kernel.asm	/^c01024f6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01024f9	obj/kernel.asm	/^c01024f9:	50                   	push   %eax$/;"	l
c01024fa	obj/kernel.asm	/^c01024fa:	68 8d 45 11 c0       	push   $0xc011458d$/;"	l
c01024ff	obj/kernel.asm	/^c01024ff:	e8 66 de ff ff       	call   c010036a <cprintf>$/;"	l
c0102504	obj/kernel.asm	/^c0102504:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102507	obj/kernel.asm	/^c0102507:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010250a	obj/kernel.asm	/^c010250a:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c010250d	obj/kernel.asm	/^c010250d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102510	obj/kernel.asm	/^c0102510:	50                   	push   %eax$/;"	l
c0102511	obj/kernel.asm	/^c0102511:	68 9c 45 11 c0       	push   $0xc011459c$/;"	l
c0102516	obj/kernel.asm	/^c0102516:	e8 4f de ff ff       	call   c010036a <cprintf>$/;"	l
c010251b	obj/kernel.asm	/^c010251b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010251e	obj/kernel.asm	/^c010251e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102521	obj/kernel.asm	/^c0102521:	0f b7 40 3c          	movzwl 0x3c(%eax),%eax$/;"	l
c0102525	obj/kernel.asm	/^c0102525:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0102528	obj/kernel.asm	/^c0102528:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010252b	obj/kernel.asm	/^c010252b:	50                   	push   %eax$/;"	l
c010252c	obj/kernel.asm	/^c010252c:	68 ab 45 11 c0       	push   $0xc01145ab$/;"	l
c0102531	obj/kernel.asm	/^c0102531:	e8 34 de ff ff       	call   c010036a <cprintf>$/;"	l
c0102536	obj/kernel.asm	/^c0102536:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102539	obj/kernel.asm	/^c0102539:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010253c	obj/kernel.asm	/^c010253c:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c010253f	obj/kernel.asm	/^c010253f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102542	obj/kernel.asm	/^c0102542:	50                   	push   %eax$/;"	l
c0102543	obj/kernel.asm	/^c0102543:	68 be 45 11 c0       	push   $0xc01145be$/;"	l
c0102548	obj/kernel.asm	/^c0102548:	e8 1d de ff ff       	call   c010036a <cprintf>$/;"	l
c010254d	obj/kernel.asm	/^c010254d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102550	obj/kernel.asm	/^c0102550:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0102557	obj/kernel.asm	/^c0102557:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010255e	obj/kernel.asm	/^c010255e:	eb 3f                	jmp    c010259f <print_trapframe+0x16f>$/;"	l
c0102560	obj/kernel.asm	/^c0102560:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102563	obj/kernel.asm	/^c0102563:	8b 50 40             	mov    0x40(%eax),%edx$/;"	l
c0102566	obj/kernel.asm	/^c0102566:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0102569	obj/kernel.asm	/^c0102569:	21 d0                	and    %edx,%eax$/;"	l
c010256b	obj/kernel.asm	/^c010256b:	85 c0                	test   %eax,%eax$/;"	l
c010256d	obj/kernel.asm	/^c010256d:	74 29                	je     c0102598 <print_trapframe+0x168>$/;"	l
c010256f	obj/kernel.asm	/^c010256f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102572	obj/kernel.asm	/^c0102572:	8b 04 85 00 d6 14 c0 	mov    -0x3feb2a00(,%eax,4),%eax$/;"	l
c0102579	obj/kernel.asm	/^c0102579:	85 c0                	test   %eax,%eax$/;"	l
c010257b	obj/kernel.asm	/^c010257b:	74 1b                	je     c0102598 <print_trapframe+0x168>$/;"	l
c010257d	obj/kernel.asm	/^c010257d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102580	obj/kernel.asm	/^c0102580:	8b 04 85 00 d6 14 c0 	mov    -0x3feb2a00(,%eax,4),%eax$/;"	l
c0102587	obj/kernel.asm	/^c0102587:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010258a	obj/kernel.asm	/^c010258a:	50                   	push   %eax$/;"	l
c010258b	obj/kernel.asm	/^c010258b:	68 cd 45 11 c0       	push   $0xc01145cd$/;"	l
c0102590	obj/kernel.asm	/^c0102590:	e8 d5 dd ff ff       	call   c010036a <cprintf>$/;"	l
c0102595	obj/kernel.asm	/^c0102595:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102598	obj/kernel.asm	/^c0102598:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010259c	obj/kernel.asm	/^c010259c:	d1 65 f0             	shll   -0x10(%ebp)$/;"	d
c010259f	obj/kernel.asm	/^c010259f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01025a2	obj/kernel.asm	/^c01025a2:	83 f8 17             	cmp    $0x17,%eax$/;"	l
c01025a5	obj/kernel.asm	/^c01025a5:	76 b9                	jbe    c0102560 <print_trapframe+0x130>$/;"	l
c01025a7	obj/kernel.asm	/^c01025a7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025aa	obj/kernel.asm	/^c01025aa:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c01025ad	obj/kernel.asm	/^c01025ad:	25 00 30 00 00       	and    $0x3000,%eax$/;"	l
c01025b2	obj/kernel.asm	/^c01025b2:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c01025b5	obj/kernel.asm	/^c01025b5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01025b8	obj/kernel.asm	/^c01025b8:	50                   	push   %eax$/;"	l
c01025b9	obj/kernel.asm	/^c01025b9:	68 d1 45 11 c0       	push   $0xc01145d1$/;"	l
c01025be	obj/kernel.asm	/^c01025be:	e8 a7 dd ff ff       	call   c010036a <cprintf>$/;"	l
c01025c3	obj/kernel.asm	/^c01025c3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025c6	obj/kernel.asm	/^c01025c6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01025c9	obj/kernel.asm	/^c01025c9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01025cc	obj/kernel.asm	/^c01025cc:	e8 49 fe ff ff       	call   c010241a <trap_in_kernel>$/;"	l
c01025d1	obj/kernel.asm	/^c01025d1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025d4	obj/kernel.asm	/^c01025d4:	85 c0                	test   %eax,%eax$/;"	l
c01025d6	obj/kernel.asm	/^c01025d6:	75 32                	jne    c010260a <print_trapframe+0x1da>$/;"	l
c01025d8	obj/kernel.asm	/^c01025d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025db	obj/kernel.asm	/^c01025db:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c01025de	obj/kernel.asm	/^c01025de:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01025e1	obj/kernel.asm	/^c01025e1:	50                   	push   %eax$/;"	l
c01025e2	obj/kernel.asm	/^c01025e2:	68 da 45 11 c0       	push   $0xc01145da$/;"	l
c01025e7	obj/kernel.asm	/^c01025e7:	e8 7e dd ff ff       	call   c010036a <cprintf>$/;"	l
c01025ec	obj/kernel.asm	/^c01025ec:	83 c4 10             	add    $0x10,%esp$/;"	l
c01025ef	obj/kernel.asm	/^c01025ef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01025f2	obj/kernel.asm	/^c01025f2:	0f b7 40 48          	movzwl 0x48(%eax),%eax$/;"	l
c01025f6	obj/kernel.asm	/^c01025f6:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01025f9	obj/kernel.asm	/^c01025f9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01025fc	obj/kernel.asm	/^c01025fc:	50                   	push   %eax$/;"	l
c01025fd	obj/kernel.asm	/^c01025fd:	68 e9 45 11 c0       	push   $0xc01145e9$/;"	l
c0102602	obj/kernel.asm	/^c0102602:	e8 63 dd ff ff       	call   c010036a <cprintf>$/;"	l
c0102607	obj/kernel.asm	/^c0102607:	83 c4 10             	add    $0x10,%esp$/;"	l
c010260a	obj/kernel.asm	/^c010260a:	c9                   	leave  $/;"	l
c010260b	obj/kernel.asm	/^c010260b:	c3                   	ret    $/;"	l
c010260c	obj/kernel.asm	/^c010260c <print_regs>:$/;"	l
c010260c	obj/kernel.asm	/^c010260c:	55                   	push   %ebp$/;"	l
c010260d	obj/kernel.asm	/^c010260d:	89 e5                	mov    %esp,%ebp$/;"	l
c010260f	obj/kernel.asm	/^c010260f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102612	obj/kernel.asm	/^c0102612:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102615	obj/kernel.asm	/^c0102615:	8b 00                	mov    (%eax),%eax$/;"	l
c0102617	obj/kernel.asm	/^c0102617:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010261a	obj/kernel.asm	/^c010261a:	50                   	push   %eax$/;"	l
c010261b	obj/kernel.asm	/^c010261b:	68 fc 45 11 c0       	push   $0xc01145fc$/;"	l
c0102620	obj/kernel.asm	/^c0102620:	e8 45 dd ff ff       	call   c010036a <cprintf>$/;"	l
c0102625	obj/kernel.asm	/^c0102625:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102628	obj/kernel.asm	/^c0102628:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010262b	obj/kernel.asm	/^c010262b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010262e	obj/kernel.asm	/^c010262e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102631	obj/kernel.asm	/^c0102631:	50                   	push   %eax$/;"	l
c0102632	obj/kernel.asm	/^c0102632:	68 0b 46 11 c0       	push   $0xc011460b$/;"	l
c0102637	obj/kernel.asm	/^c0102637:	e8 2e dd ff ff       	call   c010036a <cprintf>$/;"	l
c010263c	obj/kernel.asm	/^c010263c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010263f	obj/kernel.asm	/^c010263f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102642	obj/kernel.asm	/^c0102642:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0102645	obj/kernel.asm	/^c0102645:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102648	obj/kernel.asm	/^c0102648:	50                   	push   %eax$/;"	l
c0102649	obj/kernel.asm	/^c0102649:	68 1a 46 11 c0       	push   $0xc011461a$/;"	l
c010264e	obj/kernel.asm	/^c010264e:	e8 17 dd ff ff       	call   c010036a <cprintf>$/;"	l
c0102653	obj/kernel.asm	/^c0102653:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102656	obj/kernel.asm	/^c0102656:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102659	obj/kernel.asm	/^c0102659:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010265c	obj/kernel.asm	/^c010265c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010265f	obj/kernel.asm	/^c010265f:	50                   	push   %eax$/;"	l
c0102660	obj/kernel.asm	/^c0102660:	68 29 46 11 c0       	push   $0xc0114629$/;"	l
c0102665	obj/kernel.asm	/^c0102665:	e8 00 dd ff ff       	call   c010036a <cprintf>$/;"	l
c010266a	obj/kernel.asm	/^c010266a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010266d	obj/kernel.asm	/^c010266d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102670	obj/kernel.asm	/^c0102670:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0102673	obj/kernel.asm	/^c0102673:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0102676	obj/kernel.asm	/^c0102676:	50                   	push   %eax$/;"	l
c0102677	obj/kernel.asm	/^c0102677:	68 38 46 11 c0       	push   $0xc0114638$/;"	l
c010267c	obj/kernel.asm	/^c010267c:	e8 e9 dc ff ff       	call   c010036a <cprintf>$/;"	l
c0102681	obj/kernel.asm	/^c0102681:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102684	obj/kernel.asm	/^c0102684:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102687	obj/kernel.asm	/^c0102687:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010268a	obj/kernel.asm	/^c010268a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010268d	obj/kernel.asm	/^c010268d:	50                   	push   %eax$/;"	l
c010268e	obj/kernel.asm	/^c010268e:	68 47 46 11 c0       	push   $0xc0114647$/;"	l
c0102693	obj/kernel.asm	/^c0102693:	e8 d2 dc ff ff       	call   c010036a <cprintf>$/;"	l
c0102698	obj/kernel.asm	/^c0102698:	83 c4 10             	add    $0x10,%esp$/;"	l
c010269b	obj/kernel.asm	/^c010269b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010269e	obj/kernel.asm	/^c010269e:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01026a1	obj/kernel.asm	/^c01026a1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01026a4	obj/kernel.asm	/^c01026a4:	50                   	push   %eax$/;"	l
c01026a5	obj/kernel.asm	/^c01026a5:	68 56 46 11 c0       	push   $0xc0114656$/;"	l
c01026aa	obj/kernel.asm	/^c01026aa:	e8 bb dc ff ff       	call   c010036a <cprintf>$/;"	l
c01026af	obj/kernel.asm	/^c01026af:	83 c4 10             	add    $0x10,%esp$/;"	l
c01026b2	obj/kernel.asm	/^c01026b2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026b5	obj/kernel.asm	/^c01026b5:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01026b8	obj/kernel.asm	/^c01026b8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01026bb	obj/kernel.asm	/^c01026bb:	50                   	push   %eax$/;"	l
c01026bc	obj/kernel.asm	/^c01026bc:	68 65 46 11 c0       	push   $0xc0114665$/;"	l
c01026c1	obj/kernel.asm	/^c01026c1:	e8 a4 dc ff ff       	call   c010036a <cprintf>$/;"	l
c01026c6	obj/kernel.asm	/^c01026c6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01026c9	obj/kernel.asm	/^c01026c9:	c9                   	leave  $/;"	l
c01026ca	obj/kernel.asm	/^c01026ca:	c3                   	ret    $/;"	l
c01026cb	obj/kernel.asm	/^c01026cb <print_pgfault>:$/;"	l
c01026cb	obj/kernel.asm	/^c01026cb:	55                   	push   %ebp$/;"	l
c01026cc	obj/kernel.asm	/^c01026cc:	89 e5                	mov    %esp,%ebp$/;"	l
c01026ce	obj/kernel.asm	/^c01026ce:	53                   	push   %ebx$/;"	l
c01026cf	obj/kernel.asm	/^c01026cf:	83 ec 14             	sub    $0x14,%esp$/;"	l
c01026d2	obj/kernel.asm	/^c01026d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026d5	obj/kernel.asm	/^c01026d5:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01026d8	obj/kernel.asm	/^c01026d8:	83 e0 01             	and    $0x1,%eax$/;"	l
c01026db	obj/kernel.asm	/^c01026db:	85 c0                	test   %eax,%eax$/;"	l
c01026dd	obj/kernel.asm	/^c01026dd:	74 07                	je     c01026e6 <print_pgfault+0x1b>$/;"	l
c01026df	obj/kernel.asm	/^c01026df:	bb 74 46 11 c0       	mov    $0xc0114674,%ebx$/;"	l
c01026e4	obj/kernel.asm	/^c01026e4:	eb 05                	jmp    c01026eb <print_pgfault+0x20>$/;"	l
c01026e6	obj/kernel.asm	/^c01026e6:	bb 85 46 11 c0       	mov    $0xc0114685,%ebx$/;"	l
c01026eb	obj/kernel.asm	/^c01026eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01026ee	obj/kernel.asm	/^c01026ee:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01026f1	obj/kernel.asm	/^c01026f1:	83 e0 02             	and    $0x2,%eax$/;"	l
c01026f4	obj/kernel.asm	/^c01026f4:	85 c0                	test   %eax,%eax$/;"	l
c01026f6	obj/kernel.asm	/^c01026f6:	74 07                	je     c01026ff <print_pgfault+0x34>$/;"	l
c01026f8	obj/kernel.asm	/^c01026f8:	b9 57 00 00 00       	mov    $0x57,%ecx$/;"	l
c01026fd	obj/kernel.asm	/^c01026fd:	eb 05                	jmp    c0102704 <print_pgfault+0x39>$/;"	l
c01026ff	obj/kernel.asm	/^c01026ff:	b9 52 00 00 00       	mov    $0x52,%ecx$/;"	l
c0102704	obj/kernel.asm	/^c0102704:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0102707	obj/kernel.asm	/^c0102707:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010270a	obj/kernel.asm	/^c010270a:	83 e0 04             	and    $0x4,%eax$/;"	l
c010270d	obj/kernel.asm	/^c010270d:	85 c0                	test   %eax,%eax$/;"	l
c010270f	obj/kernel.asm	/^c010270f:	74 07                	je     c0102718 <print_pgfault+0x4d>$/;"	l
c0102711	obj/kernel.asm	/^c0102711:	ba 55 00 00 00       	mov    $0x55,%edx$/;"	l
c0102716	obj/kernel.asm	/^c0102716:	eb 05                	jmp    c010271d <print_pgfault+0x52>$/;"	l
c0102718	obj/kernel.asm	/^c0102718:	ba 4b 00 00 00       	mov    $0x4b,%edx$/;"	l
c010271d	obj/kernel.asm	/^c010271d:	0f 20 d0             	mov    %cr2,%eax$/;"	l
c0102720	obj/kernel.asm	/^c0102720:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102723	obj/kernel.asm	/^c0102723:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0102726	obj/kernel.asm	/^c0102726:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102729	obj/kernel.asm	/^c0102729:	53                   	push   %ebx$/;"	l
c010272a	obj/kernel.asm	/^c010272a:	51                   	push   %ecx$/;"	l
c010272b	obj/kernel.asm	/^c010272b:	52                   	push   %edx$/;"	l
c010272c	obj/kernel.asm	/^c010272c:	50                   	push   %eax$/;"	l
c010272d	obj/kernel.asm	/^c010272d:	68 94 46 11 c0       	push   $0xc0114694$/;"	l
c0102732	obj/kernel.asm	/^c0102732:	e8 33 dc ff ff       	call   c010036a <cprintf>$/;"	l
c0102737	obj/kernel.asm	/^c0102737:	83 c4 20             	add    $0x20,%esp$/;"	l
c010273a	obj/kernel.asm	/^c010273a:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c010273d	obj/kernel.asm	/^c010273d:	c9                   	leave  $/;"	l
c010273e	obj/kernel.asm	/^c010273e:	c3                   	ret    $/;"	l
c010273f	obj/kernel.asm	/^c010273f <pgfault_handler>:$/;"	l
c010273f	obj/kernel.asm	/^c010273f:	55                   	push   %ebp$/;"	l
c0102740	obj/kernel.asm	/^c0102740:	89 e5                	mov    %esp,%ebp$/;"	l
c0102742	obj/kernel.asm	/^c0102742:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102745	obj/kernel.asm	/^c0102745:	a1 b0 21 15 c0       	mov    0xc01521b0,%eax$/;"	l
c010274a	obj/kernel.asm	/^c010274a:	85 c0                	test   %eax,%eax$/;"	l
c010274c	obj/kernel.asm	/^c010274c:	74 0e                	je     c010275c <pgfault_handler+0x1d>$/;"	l
c010274e	obj/kernel.asm	/^c010274e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102751	obj/kernel.asm	/^c0102751:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102754	obj/kernel.asm	/^c0102754:	e8 72 ff ff ff       	call   c01026cb <print_pgfault>$/;"	l
c0102759	obj/kernel.asm	/^c0102759:	83 c4 10             	add    $0x10,%esp$/;"	l
c010275c	obj/kernel.asm	/^c010275c:	a1 b0 21 15 c0       	mov    0xc01521b0,%eax$/;"	l
c0102761	obj/kernel.asm	/^c0102761:	85 c0                	test   %eax,%eax$/;"	l
c0102763	obj/kernel.asm	/^c0102763:	74 32                	je     c0102797 <pgfault_handler+0x58>$/;"	l
c0102765	obj/kernel.asm	/^c0102765:	8b 15 88 f0 14 c0    	mov    0xc014f088,%edx$/;"	l
c010276b	obj/kernel.asm	/^c010276b:	a1 80 f0 14 c0       	mov    0xc014f080,%eax$/;"	l
c0102770	obj/kernel.asm	/^c0102770:	39 c2                	cmp    %eax,%edx$/;"	l
c0102772	obj/kernel.asm	/^c0102772:	74 19                	je     c010278d <pgfault_handler+0x4e>$/;"	l
c0102774	obj/kernel.asm	/^c0102774:	68 b7 46 11 c0       	push   $0xc01146b7$/;"	l
c0102779	obj/kernel.asm	/^c0102779:	68 cb 46 11 c0       	push   $0xc01146cb$/;"	l
c010277e	obj/kernel.asm	/^c010277e:	68 b0 00 00 00       	push   $0xb0$/;"	l
c0102783	obj/kernel.asm	/^c0102783:	68 e0 46 11 c0       	push   $0xc01146e0$/;"	l
c0102788	obj/kernel.asm	/^c0102788:	e8 42 dd ff ff       	call   c01004cf <__panic>$/;"	l
c010278d	obj/kernel.asm	/^c010278d:	a1 b0 21 15 c0       	mov    0xc01521b0,%eax$/;"	l
c0102792	obj/kernel.asm	/^c0102792:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102795	obj/kernel.asm	/^c0102795:	eb 47                	jmp    c01027de <pgfault_handler+0x9f>$/;"	l
c0102797	obj/kernel.asm	/^c0102797:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010279c	obj/kernel.asm	/^c010279c:	85 c0                	test   %eax,%eax$/;"	l
c010279e	obj/kernel.asm	/^c010279e:	75 33                	jne    c01027d3 <pgfault_handler+0x94>$/;"	l
c01027a0	obj/kernel.asm	/^c01027a0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01027a3	obj/kernel.asm	/^c01027a3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01027a6	obj/kernel.asm	/^c01027a6:	e8 85 fc ff ff       	call   c0102430 <print_trapframe>$/;"	l
c01027ab	obj/kernel.asm	/^c01027ab:	83 c4 10             	add    $0x10,%esp$/;"	l
c01027ae	obj/kernel.asm	/^c01027ae:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01027b1	obj/kernel.asm	/^c01027b1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01027b4	obj/kernel.asm	/^c01027b4:	e8 12 ff ff ff       	call   c01026cb <print_pgfault>$/;"	l
c01027b9	obj/kernel.asm	/^c01027b9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01027bc	obj/kernel.asm	/^c01027bc:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01027bf	obj/kernel.asm	/^c01027bf:	68 f1 46 11 c0       	push   $0xc01146f1$/;"	l
c01027c4	obj/kernel.asm	/^c01027c4:	68 b7 00 00 00       	push   $0xb7$/;"	l
c01027c9	obj/kernel.asm	/^c01027c9:	68 e0 46 11 c0       	push   $0xc01146e0$/;"	l
c01027ce	obj/kernel.asm	/^c01027ce:	e8 fc dc ff ff       	call   c01004cf <__panic>$/;"	l
c01027d3	obj/kernel.asm	/^c01027d3:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c01027d8	obj/kernel.asm	/^c01027d8:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01027db	obj/kernel.asm	/^c01027db:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01027de	obj/kernel.asm	/^c01027de:	0f 20 d0             	mov    %cr2,%eax$/;"	l
c01027e1	obj/kernel.asm	/^c01027e1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01027e4	obj/kernel.asm	/^c01027e4:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01027e7	obj/kernel.asm	/^c01027e7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01027ea	obj/kernel.asm	/^c01027ea:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c01027ed	obj/kernel.asm	/^c01027ed:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01027f0	obj/kernel.asm	/^c01027f0:	52                   	push   %edx$/;"	l
c01027f1	obj/kernel.asm	/^c01027f1:	50                   	push   %eax$/;"	l
c01027f2	obj/kernel.asm	/^c01027f2:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01027f5	obj/kernel.asm	/^c01027f5:	e8 e1 36 00 00       	call   c0105edb <do_pgfault>$/;"	l
c01027fa	obj/kernel.asm	/^c01027fa:	83 c4 10             	add    $0x10,%esp$/;"	l
c01027fd	obj/kernel.asm	/^c01027fd:	c9                   	leave  $/;"	l
c01027fe	obj/kernel.asm	/^c01027fe:	c3                   	ret    $/;"	l
c01027ff	obj/kernel.asm	/^c01027ff <trap_dispatch>:$/;"	l
c01027ff	obj/kernel.asm	/^c01027ff:	55                   	push   %ebp$/;"	l
c0102800	obj/kernel.asm	/^c0102800:	89 e5                	mov    %esp,%ebp$/;"	l
c0102802	obj/kernel.asm	/^c0102802:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0102805	obj/kernel.asm	/^c0102805:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010280c	obj/kernel.asm	/^c010280c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010280f	obj/kernel.asm	/^c010280f:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0102812	obj/kernel.asm	/^c0102812:	83 f8 2f             	cmp    $0x2f,%eax$/;"	l
c0102815	obj/kernel.asm	/^c0102815:	77 38                	ja     c010284f <trap_dispatch+0x50>$/;"	l
c0102817	obj/kernel.asm	/^c0102817:	83 f8 2e             	cmp    $0x2e,%eax$/;"	l
c010281a	obj/kernel.asm	/^c010281a:	0f 83 a7 01 00 00    	jae    c01029c7 <trap_dispatch+0x1c8>$/;"	l
c0102820	obj/kernel.asm	/^c0102820:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c0102823	obj/kernel.asm	/^c0102823:	0f 84 ec 00 00 00    	je     c0102915 <trap_dispatch+0x116>$/;"	l
c0102829	obj/kernel.asm	/^c0102829:	83 f8 20             	cmp    $0x20,%eax$/;"	l
c010282c	obj/kernel.asm	/^c010282c:	77 0a                	ja     c0102838 <trap_dispatch+0x39>$/;"	l
c010282e	obj/kernel.asm	/^c010282e:	83 f8 0e             	cmp    $0xe,%eax$/;"	l
c0102831	obj/kernel.asm	/^c0102831:	74 3e                	je     c0102871 <trap_dispatch+0x72>$/;"	l
c0102833	obj/kernel.asm	/^c0102833:	e9 44 01 00 00       	jmp    c010297c <trap_dispatch+0x17d>$/;"	l
c0102838	obj/kernel.asm	/^c0102838:	83 f8 21             	cmp    $0x21,%eax$/;"	l
c010283b	obj/kernel.asm	/^c010283b:	0f 84 0a 01 00 00    	je     c010294b <trap_dispatch+0x14c>$/;"	l
c0102841	obj/kernel.asm	/^c0102841:	83 f8 24             	cmp    $0x24,%eax$/;"	l
c0102844	obj/kernel.asm	/^c0102844:	0f 84 01 01 00 00    	je     c010294b <trap_dispatch+0x14c>$/;"	l
c010284a	obj/kernel.asm	/^c010284a:	e9 2d 01 00 00       	jmp    c010297c <trap_dispatch+0x17d>$/;"	l
c010284f	obj/kernel.asm	/^c010284f:	83 f8 78             	cmp    $0x78,%eax$/;"	l
c0102852	obj/kernel.asm	/^c0102852:	0f 82 24 01 00 00    	jb     c010297c <trap_dispatch+0x17d>$/;"	l
c0102858	obj/kernel.asm	/^c0102858:	83 f8 79             	cmp    $0x79,%eax$/;"	l
c010285b	obj/kernel.asm	/^c010285b:	0f 86 04 01 00 00    	jbe    c0102965 <trap_dispatch+0x166>$/;"	l
c0102861	obj/kernel.asm	/^c0102861:	3d 80 00 00 00       	cmp    $0x80,%eax$/;"	l
c0102866	obj/kernel.asm	/^c0102866:	0f 84 9f 00 00 00    	je     c010290b <trap_dispatch+0x10c>$/;"	l
c010286c	obj/kernel.asm	/^c010286c:	e9 0b 01 00 00       	jmp    c010297c <trap_dispatch+0x17d>$/;"	l
c0102871	obj/kernel.asm	/^c0102871:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102874	obj/kernel.asm	/^c0102874:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102877	obj/kernel.asm	/^c0102877:	e8 c3 fe ff ff       	call   c010273f <pgfault_handler>$/;"	l
c010287c	obj/kernel.asm	/^c010287c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010287f	obj/kernel.asm	/^c010287f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0102882	obj/kernel.asm	/^c0102882:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0102886	obj/kernel.asm	/^c0102886:	74 7e                	je     c0102906 <trap_dispatch+0x107>$/;"	l
c0102888	obj/kernel.asm	/^c0102888:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010288b	obj/kernel.asm	/^c010288b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010288e	obj/kernel.asm	/^c010288e:	e8 9d fb ff ff       	call   c0102430 <print_trapframe>$/;"	l
c0102893	obj/kernel.asm	/^c0102893:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102896	obj/kernel.asm	/^c0102896:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010289b	obj/kernel.asm	/^c010289b:	85 c0                	test   %eax,%eax$/;"	l
c010289d	obj/kernel.asm	/^c010289d:	75 17                	jne    c01028b6 <trap_dispatch+0xb7>$/;"	l
c010289f	obj/kernel.asm	/^c010289f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01028a2	obj/kernel.asm	/^c01028a2:	68 08 47 11 c0       	push   $0xc0114708$/;"	l
c01028a7	obj/kernel.asm	/^c01028a7:	68 cc 00 00 00       	push   $0xcc$/;"	l
c01028ac	obj/kernel.asm	/^c01028ac:	68 e0 46 11 c0       	push   $0xc01146e0$/;"	l
c01028b1	obj/kernel.asm	/^c01028b1:	e8 19 dc ff ff       	call   c01004cf <__panic>$/;"	l
c01028b6	obj/kernel.asm	/^c01028b6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01028b9	obj/kernel.asm	/^c01028b9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01028bc	obj/kernel.asm	/^c01028bc:	e8 59 fb ff ff       	call   c010241a <trap_in_kernel>$/;"	l
c01028c1	obj/kernel.asm	/^c01028c1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01028c4	obj/kernel.asm	/^c01028c4:	85 c0                	test   %eax,%eax$/;"	l
c01028c6	obj/kernel.asm	/^c01028c6:	74 17                	je     c01028df <trap_dispatch+0xe0>$/;"	l
c01028c8	obj/kernel.asm	/^c01028c8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01028cb	obj/kernel.asm	/^c01028cb:	68 28 47 11 c0       	push   $0xc0114728$/;"	l
c01028d0	obj/kernel.asm	/^c01028d0:	68 d0 00 00 00       	push   $0xd0$/;"	l
c01028d5	obj/kernel.asm	/^c01028d5:	68 e0 46 11 c0       	push   $0xc01146e0$/;"	l
c01028da	obj/kernel.asm	/^c01028da:	e8 f0 db ff ff       	call   c01004cf <__panic>$/;"	l
c01028df	obj/kernel.asm	/^c01028df:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01028e2	obj/kernel.asm	/^c01028e2:	68 56 47 11 c0       	push   $0xc0114756$/;"	l
c01028e7	obj/kernel.asm	/^c01028e7:	e8 7e da ff ff       	call   c010036a <cprintf>$/;"	l
c01028ec	obj/kernel.asm	/^c01028ec:	83 c4 10             	add    $0x10,%esp$/;"	l
c01028ef	obj/kernel.asm	/^c01028ef:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01028f2	obj/kernel.asm	/^c01028f2:	68 6c 47 11 c0       	push   $0xc011476c$/;"	l
c01028f7	obj/kernel.asm	/^c01028f7:	68 d3 00 00 00       	push   $0xd3$/;"	l
c01028fc	obj/kernel.asm	/^c01028fc:	68 e0 46 11 c0       	push   $0xc01146e0$/;"	l
c0102901	obj/kernel.asm	/^c0102901:	e8 c9 db ff ff       	call   c01004cf <__panic>$/;"	l
c0102906	obj/kernel.asm	/^c0102906:	e9 bd 00 00 00       	jmp    c01029c8 <trap_dispatch+0x1c9>$/;"	l
c010290b	obj/kernel.asm	/^c010290b:	e8 f8 b6 00 00       	call   c010e008 <syscall>$/;"	l
c0102910	obj/kernel.asm	/^c0102910:	e9 b3 00 00 00       	jmp    c01029c8 <trap_dispatch+0x1c9>$/;"	l
c0102915	obj/kernel.asm	/^c0102915:	a1 a0 21 15 c0       	mov    0xc01521a0,%eax$/;"	l
c010291a	obj/kernel.asm	/^c010291a:	83 c0 01             	add    $0x1,%eax$/;"	l
c010291d	obj/kernel.asm	/^c010291d:	a3 a0 21 15 c0       	mov    %eax,0xc01521a0$/;"	l
c0102922	obj/kernel.asm	/^c0102922:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c0102927	obj/kernel.asm	/^c0102927:	85 c0                	test   %eax,%eax$/;"	l
c0102929	obj/kernel.asm	/^c0102929:	75 19                	jne    c0102944 <trap_dispatch+0x145>$/;"	l
c010292b	obj/kernel.asm	/^c010292b:	68 95 47 11 c0       	push   $0xc0114795$/;"	l
c0102930	obj/kernel.asm	/^c0102930:	68 cb 46 11 c0       	push   $0xc01146cb$/;"	l
c0102935	obj/kernel.asm	/^c0102935:	68 f3 00 00 00       	push   $0xf3$/;"	l
c010293a	obj/kernel.asm	/^c010293a:	68 e0 46 11 c0       	push   $0xc01146e0$/;"	l
c010293f	obj/kernel.asm	/^c010293f:	e8 8b db ff ff       	call   c01004cf <__panic>$/;"	l
c0102944	obj/kernel.asm	/^c0102944:	e8 08 af 00 00       	call   c010d851 <run_timer_list>$/;"	l
c0102949	obj/kernel.asm	/^c0102949:	eb 7d                	jmp    c01029c8 <trap_dispatch+0x1c9>$/;"	l
c010294b	obj/kernel.asm	/^c010294b:	e8 d3 f6 ff ff       	call   c0102023 <cons_getc>$/;"	l
c0102950	obj/kernel.asm	/^c0102950:	88 45 f3             	mov    %al,-0xd(%ebp)$/;"	l
c0102953	obj/kernel.asm	/^c0102953:	0f be 45 f3          	movsbl -0xd(%ebp),%eax$/;"	l
c0102957	obj/kernel.asm	/^c0102957:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010295a	obj/kernel.asm	/^c010295a:	50                   	push   %eax$/;"	l
c010295b	obj/kernel.asm	/^c010295b:	e8 ef ce 00 00       	call   c010f84f <dev_stdin_write>$/;"	l
c0102960	obj/kernel.asm	/^c0102960:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102963	obj/kernel.asm	/^c0102963:	eb 63                	jmp    c01029c8 <trap_dispatch+0x1c9>$/;"	l
c0102965	obj/kernel.asm	/^c0102965:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0102968	obj/kernel.asm	/^c0102968:	68 a5 47 11 c0       	push   $0xc01147a5$/;"	l
c010296d	obj/kernel.asm	/^c010296d:	68 05 01 00 00       	push   $0x105$/;"	l
c0102972	obj/kernel.asm	/^c0102972:	68 e0 46 11 c0       	push   $0xc01146e0$/;"	l
c0102977	obj/kernel.asm	/^c0102977:	e8 53 db ff ff       	call   c01004cf <__panic>$/;"	l
c010297c	obj/kernel.asm	/^c010297c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010297f	obj/kernel.asm	/^c010297f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102982	obj/kernel.asm	/^c0102982:	e8 a9 fa ff ff       	call   c0102430 <print_trapframe>$/;"	l
c0102987	obj/kernel.asm	/^c0102987:	83 c4 10             	add    $0x10,%esp$/;"	l
c010298a	obj/kernel.asm	/^c010298a:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010298f	obj/kernel.asm	/^c010298f:	85 c0                	test   %eax,%eax$/;"	l
c0102991	obj/kernel.asm	/^c0102991:	74 1d                	je     c01029b0 <trap_dispatch+0x1b1>$/;"	l
c0102993	obj/kernel.asm	/^c0102993:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102996	obj/kernel.asm	/^c0102996:	68 b5 47 11 c0       	push   $0xc01147b5$/;"	l
c010299b	obj/kernel.asm	/^c010299b:	e8 ca d9 ff ff       	call   c010036a <cprintf>$/;"	l
c01029a0	obj/kernel.asm	/^c01029a0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01029a3	obj/kernel.asm	/^c01029a3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01029a6	obj/kernel.asm	/^c01029a6:	6a f7                	push   $0xfffffff7$/;"	l
c01029a8	obj/kernel.asm	/^c01029a8:	e8 0c 96 00 00       	call   c010bfb9 <do_exit>$/;"	l
c01029ad	obj/kernel.asm	/^c01029ad:	83 c4 10             	add    $0x10,%esp$/;"	l
c01029b0	obj/kernel.asm	/^c01029b0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01029b3	obj/kernel.asm	/^c01029b3:	68 c6 47 11 c0       	push   $0xc01147c6$/;"	l
c01029b8	obj/kernel.asm	/^c01029b8:	68 12 01 00 00       	push   $0x112$/;"	l
c01029bd	obj/kernel.asm	/^c01029bd:	68 e0 46 11 c0       	push   $0xc01146e0$/;"	l
c01029c2	obj/kernel.asm	/^c01029c2:	e8 08 db ff ff       	call   c01004cf <__panic>$/;"	l
c01029c7	obj/kernel.asm	/^c01029c7:	90                   	nop$/;"	l
c01029c8	obj/kernel.asm	/^c01029c8:	c9                   	leave  $/;"	l
c01029c9	obj/kernel.asm	/^c01029c9:	c3                   	ret    $/;"	l
c01029ca	obj/kernel.asm	/^c01029ca <trap>:$/;"	l
c01029ca	obj/kernel.asm	/^c01029ca:	55                   	push   %ebp$/;"	l
c01029cb	obj/kernel.asm	/^c01029cb:	89 e5                	mov    %esp,%ebp$/;"	l
c01029cd	obj/kernel.asm	/^c01029cd:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01029d0	obj/kernel.asm	/^c01029d0:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c01029d5	obj/kernel.asm	/^c01029d5:	85 c0                	test   %eax,%eax$/;"	l
c01029d7	obj/kernel.asm	/^c01029d7:	75 10                	jne    c01029e9 <trap+0x1f>$/;"	l
c01029d9	obj/kernel.asm	/^c01029d9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01029dc	obj/kernel.asm	/^c01029dc:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01029df	obj/kernel.asm	/^c01029df:	e8 1b fe ff ff       	call   c01027ff <trap_dispatch>$/;"	l
c01029e4	obj/kernel.asm	/^c01029e4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01029e7	obj/kernel.asm	/^c01029e7:	eb 73                	jmp    c0102a5c <trap+0x92>$/;"	l
c01029e9	obj/kernel.asm	/^c01029e9:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c01029ee	obj/kernel.asm	/^c01029ee:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01029f1	obj/kernel.asm	/^c01029f1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01029f4	obj/kernel.asm	/^c01029f4:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c01029f9	obj/kernel.asm	/^c01029f9:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01029fc	obj/kernel.asm	/^c01029fc:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c01029ff	obj/kernel.asm	/^c01029ff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102a02	obj/kernel.asm	/^c0102a02:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102a05	obj/kernel.asm	/^c0102a05:	e8 10 fa ff ff       	call   c010241a <trap_in_kernel>$/;"	l
c0102a0a	obj/kernel.asm	/^c0102a0a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102a0d	obj/kernel.asm	/^c0102a0d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0102a10	obj/kernel.asm	/^c0102a10:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102a13	obj/kernel.asm	/^c0102a13:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0102a16	obj/kernel.asm	/^c0102a16:	e8 e4 fd ff ff       	call   c01027ff <trap_dispatch>$/;"	l
c0102a1b	obj/kernel.asm	/^c0102a1b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102a1e	obj/kernel.asm	/^c0102a1e:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c0102a23	obj/kernel.asm	/^c0102a23:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0102a26	obj/kernel.asm	/^c0102a26:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c0102a29	obj/kernel.asm	/^c0102a29:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0102a2d	obj/kernel.asm	/^c0102a2d:	75 2d                	jne    c0102a5c <trap+0x92>$/;"	l
c0102a2f	obj/kernel.asm	/^c0102a2f:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c0102a34	obj/kernel.asm	/^c0102a34:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c0102a37	obj/kernel.asm	/^c0102a37:	83 e0 01             	and    $0x1,%eax$/;"	l
c0102a3a	obj/kernel.asm	/^c0102a3a:	85 c0                	test   %eax,%eax$/;"	l
c0102a3c	obj/kernel.asm	/^c0102a3c:	74 0d                	je     c0102a4b <trap+0x81>$/;"	l
c0102a3e	obj/kernel.asm	/^c0102a3e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0102a41	obj/kernel.asm	/^c0102a41:	6a f7                	push   $0xfffffff7$/;"	l
c0102a43	obj/kernel.asm	/^c0102a43:	e8 71 95 00 00       	call   c010bfb9 <do_exit>$/;"	l
c0102a48	obj/kernel.asm	/^c0102a48:	83 c4 10             	add    $0x10,%esp$/;"	l
c0102a4b	obj/kernel.asm	/^c0102a4b:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c0102a50	obj/kernel.asm	/^c0102a50:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0102a53	obj/kernel.asm	/^c0102a53:	85 c0                	test   %eax,%eax$/;"	l
c0102a55	obj/kernel.asm	/^c0102a55:	74 05                	je     c0102a5c <trap+0x92>$/;"	l
c0102a57	obj/kernel.asm	/^c0102a57:	e8 71 ab 00 00       	call   c010d5cd <schedule>$/;"	l
c0102a5c	obj/kernel.asm	/^c0102a5c:	c9                   	leave  $/;"	l
c0102a5d	obj/kernel.asm	/^c0102a5d:	c3                   	ret    $/;"	l
c0102a5e	obj/kernel.asm	/^c0102a5e <vector0>:$/;"	l
c0102a5e	obj/kernel.asm	/^c0102a5e:	6a 00                	push   $0x0$/;"	l
c0102a60	obj/kernel.asm	/^c0102a60:	6a 00                	push   $0x0$/;"	l
c0102a62	obj/kernel.asm	/^c0102a62:	e9 67 0a 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102a67	obj/kernel.asm	/^c0102a67 <vector1>:$/;"	l
c0102a67	obj/kernel.asm	/^c0102a67:	6a 00                	push   $0x0$/;"	l
c0102a69	obj/kernel.asm	/^c0102a69:	6a 01                	push   $0x1$/;"	l
c0102a6b	obj/kernel.asm	/^c0102a6b:	e9 5e 0a 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102a70	obj/kernel.asm	/^c0102a70 <vector2>:$/;"	l
c0102a70	obj/kernel.asm	/^c0102a70:	6a 00                	push   $0x0$/;"	l
c0102a72	obj/kernel.asm	/^c0102a72:	6a 02                	push   $0x2$/;"	l
c0102a74	obj/kernel.asm	/^c0102a74:	e9 55 0a 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102a79	obj/kernel.asm	/^c0102a79 <vector3>:$/;"	l
c0102a79	obj/kernel.asm	/^c0102a79:	6a 00                	push   $0x0$/;"	l
c0102a7b	obj/kernel.asm	/^c0102a7b:	6a 03                	push   $0x3$/;"	l
c0102a7d	obj/kernel.asm	/^c0102a7d:	e9 4c 0a 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102a82	obj/kernel.asm	/^c0102a82 <vector4>:$/;"	l
c0102a82	obj/kernel.asm	/^c0102a82:	6a 00                	push   $0x0$/;"	l
c0102a84	obj/kernel.asm	/^c0102a84:	6a 04                	push   $0x4$/;"	l
c0102a86	obj/kernel.asm	/^c0102a86:	e9 43 0a 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102a8b	obj/kernel.asm	/^c0102a8b <vector5>:$/;"	l
c0102a8b	obj/kernel.asm	/^c0102a8b:	6a 00                	push   $0x0$/;"	l
c0102a8d	obj/kernel.asm	/^c0102a8d:	6a 05                	push   $0x5$/;"	l
c0102a8f	obj/kernel.asm	/^c0102a8f:	e9 3a 0a 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102a94	obj/kernel.asm	/^c0102a94 <vector6>:$/;"	l
c0102a94	obj/kernel.asm	/^c0102a94:	6a 00                	push   $0x0$/;"	l
c0102a96	obj/kernel.asm	/^c0102a96:	6a 06                	push   $0x6$/;"	l
c0102a98	obj/kernel.asm	/^c0102a98:	e9 31 0a 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102a9d	obj/kernel.asm	/^c0102a9d <vector7>:$/;"	l
c0102a9d	obj/kernel.asm	/^c0102a9d:	6a 00                	push   $0x0$/;"	l
c0102a9f	obj/kernel.asm	/^c0102a9f:	6a 07                	push   $0x7$/;"	l
c0102aa1	obj/kernel.asm	/^c0102aa1:	e9 28 0a 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102aa6	obj/kernel.asm	/^c0102aa6 <vector8>:$/;"	l
c0102aa6	obj/kernel.asm	/^c0102aa6:	6a 08                	push   $0x8$/;"	l
c0102aa8	obj/kernel.asm	/^c0102aa8:	e9 21 0a 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102aad	obj/kernel.asm	/^c0102aad <vector9>:$/;"	l
c0102aad	obj/kernel.asm	/^c0102aad:	6a 09                	push   $0x9$/;"	l
c0102aaf	obj/kernel.asm	/^c0102aaf:	e9 1a 0a 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ab4	obj/kernel.asm	/^c0102ab4 <vector10>:$/;"	l
c0102ab4	obj/kernel.asm	/^c0102ab4:	6a 0a                	push   $0xa$/;"	l
c0102ab6	obj/kernel.asm	/^c0102ab6:	e9 13 0a 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102abb	obj/kernel.asm	/^c0102abb <vector11>:$/;"	l
c0102abb	obj/kernel.asm	/^c0102abb:	6a 0b                	push   $0xb$/;"	l
c0102abd	obj/kernel.asm	/^c0102abd:	e9 0c 0a 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ac2	obj/kernel.asm	/^c0102ac2 <vector12>:$/;"	l
c0102ac2	obj/kernel.asm	/^c0102ac2:	6a 0c                	push   $0xc$/;"	l
c0102ac4	obj/kernel.asm	/^c0102ac4:	e9 05 0a 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ac9	obj/kernel.asm	/^c0102ac9 <vector13>:$/;"	l
c0102ac9	obj/kernel.asm	/^c0102ac9:	6a 0d                	push   $0xd$/;"	l
c0102acb	obj/kernel.asm	/^c0102acb:	e9 fe 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ad0	obj/kernel.asm	/^c0102ad0 <vector14>:$/;"	l
c0102ad0	obj/kernel.asm	/^c0102ad0:	6a 0e                	push   $0xe$/;"	l
c0102ad2	obj/kernel.asm	/^c0102ad2:	e9 f7 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ad7	obj/kernel.asm	/^c0102ad7 <vector15>:$/;"	l
c0102ad7	obj/kernel.asm	/^c0102ad7:	6a 00                	push   $0x0$/;"	l
c0102ad9	obj/kernel.asm	/^c0102ad9:	6a 0f                	push   $0xf$/;"	l
c0102adb	obj/kernel.asm	/^c0102adb:	e9 ee 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ae0	obj/kernel.asm	/^c0102ae0 <vector16>:$/;"	l
c0102ae0	obj/kernel.asm	/^c0102ae0:	6a 00                	push   $0x0$/;"	l
c0102ae2	obj/kernel.asm	/^c0102ae2:	6a 10                	push   $0x10$/;"	l
c0102ae4	obj/kernel.asm	/^c0102ae4:	e9 e5 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ae9	obj/kernel.asm	/^c0102ae9 <vector17>:$/;"	l
c0102ae9	obj/kernel.asm	/^c0102ae9:	6a 11                	push   $0x11$/;"	l
c0102aeb	obj/kernel.asm	/^c0102aeb:	e9 de 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102af0	obj/kernel.asm	/^c0102af0 <vector18>:$/;"	l
c0102af0	obj/kernel.asm	/^c0102af0:	6a 00                	push   $0x0$/;"	l
c0102af2	obj/kernel.asm	/^c0102af2:	6a 12                	push   $0x12$/;"	l
c0102af4	obj/kernel.asm	/^c0102af4:	e9 d5 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102af9	obj/kernel.asm	/^c0102af9 <vector19>:$/;"	l
c0102af9	obj/kernel.asm	/^c0102af9:	6a 00                	push   $0x0$/;"	l
c0102afb	obj/kernel.asm	/^c0102afb:	6a 13                	push   $0x13$/;"	l
c0102afd	obj/kernel.asm	/^c0102afd:	e9 cc 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102b02	obj/kernel.asm	/^c0102b02 <vector20>:$/;"	l
c0102b02	obj/kernel.asm	/^c0102b02:	6a 00                	push   $0x0$/;"	l
c0102b04	obj/kernel.asm	/^c0102b04:	6a 14                	push   $0x14$/;"	l
c0102b06	obj/kernel.asm	/^c0102b06:	e9 c3 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102b0b	obj/kernel.asm	/^c0102b0b <vector21>:$/;"	l
c0102b0b	obj/kernel.asm	/^c0102b0b:	6a 00                	push   $0x0$/;"	l
c0102b0d	obj/kernel.asm	/^c0102b0d:	6a 15                	push   $0x15$/;"	l
c0102b0f	obj/kernel.asm	/^c0102b0f:	e9 ba 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102b14	obj/kernel.asm	/^c0102b14 <vector22>:$/;"	l
c0102b14	obj/kernel.asm	/^c0102b14:	6a 00                	push   $0x0$/;"	l
c0102b16	obj/kernel.asm	/^c0102b16:	6a 16                	push   $0x16$/;"	l
c0102b18	obj/kernel.asm	/^c0102b18:	e9 b1 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102b1d	obj/kernel.asm	/^c0102b1d <vector23>:$/;"	l
c0102b1d	obj/kernel.asm	/^c0102b1d:	6a 00                	push   $0x0$/;"	l
c0102b1f	obj/kernel.asm	/^c0102b1f:	6a 17                	push   $0x17$/;"	l
c0102b21	obj/kernel.asm	/^c0102b21:	e9 a8 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102b26	obj/kernel.asm	/^c0102b26 <vector24>:$/;"	l
c0102b26	obj/kernel.asm	/^c0102b26:	6a 00                	push   $0x0$/;"	l
c0102b28	obj/kernel.asm	/^c0102b28:	6a 18                	push   $0x18$/;"	l
c0102b2a	obj/kernel.asm	/^c0102b2a:	e9 9f 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102b2f	obj/kernel.asm	/^c0102b2f <vector25>:$/;"	l
c0102b2f	obj/kernel.asm	/^c0102b2f:	6a 00                	push   $0x0$/;"	l
c0102b31	obj/kernel.asm	/^c0102b31:	6a 19                	push   $0x19$/;"	l
c0102b33	obj/kernel.asm	/^c0102b33:	e9 96 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102b38	obj/kernel.asm	/^c0102b38 <vector26>:$/;"	l
c0102b38	obj/kernel.asm	/^c0102b38:	6a 00                	push   $0x0$/;"	l
c0102b3a	obj/kernel.asm	/^c0102b3a:	6a 1a                	push   $0x1a$/;"	l
c0102b3c	obj/kernel.asm	/^c0102b3c:	e9 8d 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102b41	obj/kernel.asm	/^c0102b41 <vector27>:$/;"	l
c0102b41	obj/kernel.asm	/^c0102b41:	6a 00                	push   $0x0$/;"	l
c0102b43	obj/kernel.asm	/^c0102b43:	6a 1b                	push   $0x1b$/;"	l
c0102b45	obj/kernel.asm	/^c0102b45:	e9 84 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102b4a	obj/kernel.asm	/^c0102b4a <vector28>:$/;"	l
c0102b4a	obj/kernel.asm	/^c0102b4a:	6a 00                	push   $0x0$/;"	l
c0102b4c	obj/kernel.asm	/^c0102b4c:	6a 1c                	push   $0x1c$/;"	l
c0102b4e	obj/kernel.asm	/^c0102b4e:	e9 7b 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102b53	obj/kernel.asm	/^c0102b53 <vector29>:$/;"	l
c0102b53	obj/kernel.asm	/^c0102b53:	6a 00                	push   $0x0$/;"	l
c0102b55	obj/kernel.asm	/^c0102b55:	6a 1d                	push   $0x1d$/;"	l
c0102b57	obj/kernel.asm	/^c0102b57:	e9 72 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102b5c	obj/kernel.asm	/^c0102b5c <vector30>:$/;"	l
c0102b5c	obj/kernel.asm	/^c0102b5c:	6a 00                	push   $0x0$/;"	l
c0102b5e	obj/kernel.asm	/^c0102b5e:	6a 1e                	push   $0x1e$/;"	l
c0102b60	obj/kernel.asm	/^c0102b60:	e9 69 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102b65	obj/kernel.asm	/^c0102b65 <vector31>:$/;"	l
c0102b65	obj/kernel.asm	/^c0102b65:	6a 00                	push   $0x0$/;"	l
c0102b67	obj/kernel.asm	/^c0102b67:	6a 1f                	push   $0x1f$/;"	l
c0102b69	obj/kernel.asm	/^c0102b69:	e9 60 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102b6e	obj/kernel.asm	/^c0102b6e <vector32>:$/;"	l
c0102b6e	obj/kernel.asm	/^c0102b6e:	6a 00                	push   $0x0$/;"	l
c0102b70	obj/kernel.asm	/^c0102b70:	6a 20                	push   $0x20$/;"	l
c0102b72	obj/kernel.asm	/^c0102b72:	e9 57 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102b77	obj/kernel.asm	/^c0102b77 <vector33>:$/;"	l
c0102b77	obj/kernel.asm	/^c0102b77:	6a 00                	push   $0x0$/;"	l
c0102b79	obj/kernel.asm	/^c0102b79:	6a 21                	push   $0x21$/;"	l
c0102b7b	obj/kernel.asm	/^c0102b7b:	e9 4e 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102b80	obj/kernel.asm	/^c0102b80 <vector34>:$/;"	l
c0102b80	obj/kernel.asm	/^c0102b80:	6a 00                	push   $0x0$/;"	l
c0102b82	obj/kernel.asm	/^c0102b82:	6a 22                	push   $0x22$/;"	l
c0102b84	obj/kernel.asm	/^c0102b84:	e9 45 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102b89	obj/kernel.asm	/^c0102b89 <vector35>:$/;"	l
c0102b89	obj/kernel.asm	/^c0102b89:	6a 00                	push   $0x0$/;"	l
c0102b8b	obj/kernel.asm	/^c0102b8b:	6a 23                	push   $0x23$/;"	l
c0102b8d	obj/kernel.asm	/^c0102b8d:	e9 3c 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102b92	obj/kernel.asm	/^c0102b92 <vector36>:$/;"	l
c0102b92	obj/kernel.asm	/^c0102b92:	6a 00                	push   $0x0$/;"	l
c0102b94	obj/kernel.asm	/^c0102b94:	6a 24                	push   $0x24$/;"	l
c0102b96	obj/kernel.asm	/^c0102b96:	e9 33 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102b9b	obj/kernel.asm	/^c0102b9b <vector37>:$/;"	l
c0102b9b	obj/kernel.asm	/^c0102b9b:	6a 00                	push   $0x0$/;"	l
c0102b9d	obj/kernel.asm	/^c0102b9d:	6a 25                	push   $0x25$/;"	l
c0102b9f	obj/kernel.asm	/^c0102b9f:	e9 2a 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ba4	obj/kernel.asm	/^c0102ba4 <vector38>:$/;"	l
c0102ba4	obj/kernel.asm	/^c0102ba4:	6a 00                	push   $0x0$/;"	l
c0102ba6	obj/kernel.asm	/^c0102ba6:	6a 26                	push   $0x26$/;"	l
c0102ba8	obj/kernel.asm	/^c0102ba8:	e9 21 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102bad	obj/kernel.asm	/^c0102bad <vector39>:$/;"	l
c0102bad	obj/kernel.asm	/^c0102bad:	6a 00                	push   $0x0$/;"	l
c0102baf	obj/kernel.asm	/^c0102baf:	6a 27                	push   $0x27$/;"	l
c0102bb1	obj/kernel.asm	/^c0102bb1:	e9 18 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102bb6	obj/kernel.asm	/^c0102bb6 <vector40>:$/;"	l
c0102bb6	obj/kernel.asm	/^c0102bb6:	6a 00                	push   $0x0$/;"	l
c0102bb8	obj/kernel.asm	/^c0102bb8:	6a 28                	push   $0x28$/;"	l
c0102bba	obj/kernel.asm	/^c0102bba:	e9 0f 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102bbf	obj/kernel.asm	/^c0102bbf <vector41>:$/;"	l
c0102bbf	obj/kernel.asm	/^c0102bbf:	6a 00                	push   $0x0$/;"	l
c0102bc1	obj/kernel.asm	/^c0102bc1:	6a 29                	push   $0x29$/;"	l
c0102bc3	obj/kernel.asm	/^c0102bc3:	e9 06 09 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102bc8	obj/kernel.asm	/^c0102bc8 <vector42>:$/;"	l
c0102bc8	obj/kernel.asm	/^c0102bc8:	6a 00                	push   $0x0$/;"	l
c0102bca	obj/kernel.asm	/^c0102bca:	6a 2a                	push   $0x2a$/;"	l
c0102bcc	obj/kernel.asm	/^c0102bcc:	e9 fd 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102bd1	obj/kernel.asm	/^c0102bd1 <vector43>:$/;"	l
c0102bd1	obj/kernel.asm	/^c0102bd1:	6a 00                	push   $0x0$/;"	l
c0102bd3	obj/kernel.asm	/^c0102bd3:	6a 2b                	push   $0x2b$/;"	l
c0102bd5	obj/kernel.asm	/^c0102bd5:	e9 f4 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102bda	obj/kernel.asm	/^c0102bda <vector44>:$/;"	l
c0102bda	obj/kernel.asm	/^c0102bda:	6a 00                	push   $0x0$/;"	l
c0102bdc	obj/kernel.asm	/^c0102bdc:	6a 2c                	push   $0x2c$/;"	l
c0102bde	obj/kernel.asm	/^c0102bde:	e9 eb 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102be3	obj/kernel.asm	/^c0102be3 <vector45>:$/;"	l
c0102be3	obj/kernel.asm	/^c0102be3:	6a 00                	push   $0x0$/;"	l
c0102be5	obj/kernel.asm	/^c0102be5:	6a 2d                	push   $0x2d$/;"	l
c0102be7	obj/kernel.asm	/^c0102be7:	e9 e2 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102bec	obj/kernel.asm	/^c0102bec <vector46>:$/;"	l
c0102bec	obj/kernel.asm	/^c0102bec:	6a 00                	push   $0x0$/;"	l
c0102bee	obj/kernel.asm	/^c0102bee:	6a 2e                	push   $0x2e$/;"	l
c0102bf0	obj/kernel.asm	/^c0102bf0:	e9 d9 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102bf5	obj/kernel.asm	/^c0102bf5 <vector47>:$/;"	l
c0102bf5	obj/kernel.asm	/^c0102bf5:	6a 00                	push   $0x0$/;"	l
c0102bf7	obj/kernel.asm	/^c0102bf7:	6a 2f                	push   $0x2f$/;"	l
c0102bf9	obj/kernel.asm	/^c0102bf9:	e9 d0 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102bfe	obj/kernel.asm	/^c0102bfe <vector48>:$/;"	l
c0102bfe	obj/kernel.asm	/^c0102bfe:	6a 00                	push   $0x0$/;"	l
c0102c00	obj/kernel.asm	/^c0102c00:	6a 30                	push   $0x30$/;"	l
c0102c02	obj/kernel.asm	/^c0102c02:	e9 c7 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102c07	obj/kernel.asm	/^c0102c07 <vector49>:$/;"	l
c0102c07	obj/kernel.asm	/^c0102c07:	6a 00                	push   $0x0$/;"	l
c0102c09	obj/kernel.asm	/^c0102c09:	6a 31                	push   $0x31$/;"	l
c0102c0b	obj/kernel.asm	/^c0102c0b:	e9 be 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102c10	obj/kernel.asm	/^c0102c10 <vector50>:$/;"	l
c0102c10	obj/kernel.asm	/^c0102c10:	6a 00                	push   $0x0$/;"	l
c0102c12	obj/kernel.asm	/^c0102c12:	6a 32                	push   $0x32$/;"	l
c0102c14	obj/kernel.asm	/^c0102c14:	e9 b5 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102c19	obj/kernel.asm	/^c0102c19 <vector51>:$/;"	l
c0102c19	obj/kernel.asm	/^c0102c19:	6a 00                	push   $0x0$/;"	l
c0102c1b	obj/kernel.asm	/^c0102c1b:	6a 33                	push   $0x33$/;"	l
c0102c1d	obj/kernel.asm	/^c0102c1d:	e9 ac 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102c22	obj/kernel.asm	/^c0102c22 <vector52>:$/;"	l
c0102c22	obj/kernel.asm	/^c0102c22:	6a 00                	push   $0x0$/;"	l
c0102c24	obj/kernel.asm	/^c0102c24:	6a 34                	push   $0x34$/;"	l
c0102c26	obj/kernel.asm	/^c0102c26:	e9 a3 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102c2b	obj/kernel.asm	/^c0102c2b <vector53>:$/;"	l
c0102c2b	obj/kernel.asm	/^c0102c2b:	6a 00                	push   $0x0$/;"	l
c0102c2d	obj/kernel.asm	/^c0102c2d:	6a 35                	push   $0x35$/;"	l
c0102c2f	obj/kernel.asm	/^c0102c2f:	e9 9a 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102c34	obj/kernel.asm	/^c0102c34 <vector54>:$/;"	l
c0102c34	obj/kernel.asm	/^c0102c34:	6a 00                	push   $0x0$/;"	l
c0102c36	obj/kernel.asm	/^c0102c36:	6a 36                	push   $0x36$/;"	l
c0102c38	obj/kernel.asm	/^c0102c38:	e9 91 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102c3d	obj/kernel.asm	/^c0102c3d <vector55>:$/;"	l
c0102c3d	obj/kernel.asm	/^c0102c3d:	6a 00                	push   $0x0$/;"	l
c0102c3f	obj/kernel.asm	/^c0102c3f:	6a 37                	push   $0x37$/;"	l
c0102c41	obj/kernel.asm	/^c0102c41:	e9 88 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102c46	obj/kernel.asm	/^c0102c46 <vector56>:$/;"	l
c0102c46	obj/kernel.asm	/^c0102c46:	6a 00                	push   $0x0$/;"	l
c0102c48	obj/kernel.asm	/^c0102c48:	6a 38                	push   $0x38$/;"	l
c0102c4a	obj/kernel.asm	/^c0102c4a:	e9 7f 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102c4f	obj/kernel.asm	/^c0102c4f <vector57>:$/;"	l
c0102c4f	obj/kernel.asm	/^c0102c4f:	6a 00                	push   $0x0$/;"	l
c0102c51	obj/kernel.asm	/^c0102c51:	6a 39                	push   $0x39$/;"	l
c0102c53	obj/kernel.asm	/^c0102c53:	e9 76 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102c58	obj/kernel.asm	/^c0102c58 <vector58>:$/;"	l
c0102c58	obj/kernel.asm	/^c0102c58:	6a 00                	push   $0x0$/;"	l
c0102c5a	obj/kernel.asm	/^c0102c5a:	6a 3a                	push   $0x3a$/;"	l
c0102c5c	obj/kernel.asm	/^c0102c5c:	e9 6d 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102c61	obj/kernel.asm	/^c0102c61 <vector59>:$/;"	l
c0102c61	obj/kernel.asm	/^c0102c61:	6a 00                	push   $0x0$/;"	l
c0102c63	obj/kernel.asm	/^c0102c63:	6a 3b                	push   $0x3b$/;"	l
c0102c65	obj/kernel.asm	/^c0102c65:	e9 64 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102c6a	obj/kernel.asm	/^c0102c6a <vector60>:$/;"	l
c0102c6a	obj/kernel.asm	/^c0102c6a:	6a 00                	push   $0x0$/;"	l
c0102c6c	obj/kernel.asm	/^c0102c6c:	6a 3c                	push   $0x3c$/;"	l
c0102c6e	obj/kernel.asm	/^c0102c6e:	e9 5b 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102c73	obj/kernel.asm	/^c0102c73 <vector61>:$/;"	l
c0102c73	obj/kernel.asm	/^c0102c73:	6a 00                	push   $0x0$/;"	l
c0102c75	obj/kernel.asm	/^c0102c75:	6a 3d                	push   $0x3d$/;"	l
c0102c77	obj/kernel.asm	/^c0102c77:	e9 52 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102c7c	obj/kernel.asm	/^c0102c7c <vector62>:$/;"	l
c0102c7c	obj/kernel.asm	/^c0102c7c:	6a 00                	push   $0x0$/;"	l
c0102c7e	obj/kernel.asm	/^c0102c7e:	6a 3e                	push   $0x3e$/;"	l
c0102c80	obj/kernel.asm	/^c0102c80:	e9 49 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102c85	obj/kernel.asm	/^c0102c85 <vector63>:$/;"	l
c0102c85	obj/kernel.asm	/^c0102c85:	6a 00                	push   $0x0$/;"	l
c0102c87	obj/kernel.asm	/^c0102c87:	6a 3f                	push   $0x3f$/;"	l
c0102c89	obj/kernel.asm	/^c0102c89:	e9 40 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102c8e	obj/kernel.asm	/^c0102c8e <vector64>:$/;"	l
c0102c8e	obj/kernel.asm	/^c0102c8e:	6a 00                	push   $0x0$/;"	l
c0102c90	obj/kernel.asm	/^c0102c90:	6a 40                	push   $0x40$/;"	l
c0102c92	obj/kernel.asm	/^c0102c92:	e9 37 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102c97	obj/kernel.asm	/^c0102c97 <vector65>:$/;"	l
c0102c97	obj/kernel.asm	/^c0102c97:	6a 00                	push   $0x0$/;"	l
c0102c99	obj/kernel.asm	/^c0102c99:	6a 41                	push   $0x41$/;"	l
c0102c9b	obj/kernel.asm	/^c0102c9b:	e9 2e 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ca0	obj/kernel.asm	/^c0102ca0 <vector66>:$/;"	l
c0102ca0	obj/kernel.asm	/^c0102ca0:	6a 00                	push   $0x0$/;"	l
c0102ca2	obj/kernel.asm	/^c0102ca2:	6a 42                	push   $0x42$/;"	l
c0102ca4	obj/kernel.asm	/^c0102ca4:	e9 25 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ca9	obj/kernel.asm	/^c0102ca9 <vector67>:$/;"	l
c0102ca9	obj/kernel.asm	/^c0102ca9:	6a 00                	push   $0x0$/;"	l
c0102cab	obj/kernel.asm	/^c0102cab:	6a 43                	push   $0x43$/;"	l
c0102cad	obj/kernel.asm	/^c0102cad:	e9 1c 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102cb2	obj/kernel.asm	/^c0102cb2 <vector68>:$/;"	l
c0102cb2	obj/kernel.asm	/^c0102cb2:	6a 00                	push   $0x0$/;"	l
c0102cb4	obj/kernel.asm	/^c0102cb4:	6a 44                	push   $0x44$/;"	l
c0102cb6	obj/kernel.asm	/^c0102cb6:	e9 13 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102cbb	obj/kernel.asm	/^c0102cbb <vector69>:$/;"	l
c0102cbb	obj/kernel.asm	/^c0102cbb:	6a 00                	push   $0x0$/;"	l
c0102cbd	obj/kernel.asm	/^c0102cbd:	6a 45                	push   $0x45$/;"	l
c0102cbf	obj/kernel.asm	/^c0102cbf:	e9 0a 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102cc4	obj/kernel.asm	/^c0102cc4 <vector70>:$/;"	l
c0102cc4	obj/kernel.asm	/^c0102cc4:	6a 00                	push   $0x0$/;"	l
c0102cc6	obj/kernel.asm	/^c0102cc6:	6a 46                	push   $0x46$/;"	l
c0102cc8	obj/kernel.asm	/^c0102cc8:	e9 01 08 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ccd	obj/kernel.asm	/^c0102ccd <vector71>:$/;"	l
c0102ccd	obj/kernel.asm	/^c0102ccd:	6a 00                	push   $0x0$/;"	l
c0102ccf	obj/kernel.asm	/^c0102ccf:	6a 47                	push   $0x47$/;"	l
c0102cd1	obj/kernel.asm	/^c0102cd1:	e9 f8 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102cd6	obj/kernel.asm	/^c0102cd6 <vector72>:$/;"	l
c0102cd6	obj/kernel.asm	/^c0102cd6:	6a 00                	push   $0x0$/;"	l
c0102cd8	obj/kernel.asm	/^c0102cd8:	6a 48                	push   $0x48$/;"	l
c0102cda	obj/kernel.asm	/^c0102cda:	e9 ef 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102cdf	obj/kernel.asm	/^c0102cdf <vector73>:$/;"	l
c0102cdf	obj/kernel.asm	/^c0102cdf:	6a 00                	push   $0x0$/;"	l
c0102ce1	obj/kernel.asm	/^c0102ce1:	6a 49                	push   $0x49$/;"	l
c0102ce3	obj/kernel.asm	/^c0102ce3:	e9 e6 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ce8	obj/kernel.asm	/^c0102ce8 <vector74>:$/;"	l
c0102ce8	obj/kernel.asm	/^c0102ce8:	6a 00                	push   $0x0$/;"	l
c0102cea	obj/kernel.asm	/^c0102cea:	6a 4a                	push   $0x4a$/;"	l
c0102cec	obj/kernel.asm	/^c0102cec:	e9 dd 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102cf1	obj/kernel.asm	/^c0102cf1 <vector75>:$/;"	l
c0102cf1	obj/kernel.asm	/^c0102cf1:	6a 00                	push   $0x0$/;"	l
c0102cf3	obj/kernel.asm	/^c0102cf3:	6a 4b                	push   $0x4b$/;"	l
c0102cf5	obj/kernel.asm	/^c0102cf5:	e9 d4 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102cfa	obj/kernel.asm	/^c0102cfa <vector76>:$/;"	l
c0102cfa	obj/kernel.asm	/^c0102cfa:	6a 00                	push   $0x0$/;"	l
c0102cfc	obj/kernel.asm	/^c0102cfc:	6a 4c                	push   $0x4c$/;"	l
c0102cfe	obj/kernel.asm	/^c0102cfe:	e9 cb 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102d03	obj/kernel.asm	/^c0102d03 <vector77>:$/;"	l
c0102d03	obj/kernel.asm	/^c0102d03:	6a 00                	push   $0x0$/;"	l
c0102d05	obj/kernel.asm	/^c0102d05:	6a 4d                	push   $0x4d$/;"	l
c0102d07	obj/kernel.asm	/^c0102d07:	e9 c2 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102d0c	obj/kernel.asm	/^c0102d0c <vector78>:$/;"	l
c0102d0c	obj/kernel.asm	/^c0102d0c:	6a 00                	push   $0x0$/;"	l
c0102d0e	obj/kernel.asm	/^c0102d0e:	6a 4e                	push   $0x4e$/;"	l
c0102d10	obj/kernel.asm	/^c0102d10:	e9 b9 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102d15	obj/kernel.asm	/^c0102d15 <vector79>:$/;"	l
c0102d15	obj/kernel.asm	/^c0102d15:	6a 00                	push   $0x0$/;"	l
c0102d17	obj/kernel.asm	/^c0102d17:	6a 4f                	push   $0x4f$/;"	l
c0102d19	obj/kernel.asm	/^c0102d19:	e9 b0 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102d1e	obj/kernel.asm	/^c0102d1e <vector80>:$/;"	l
c0102d1e	obj/kernel.asm	/^c0102d1e:	6a 00                	push   $0x0$/;"	l
c0102d20	obj/kernel.asm	/^c0102d20:	6a 50                	push   $0x50$/;"	l
c0102d22	obj/kernel.asm	/^c0102d22:	e9 a7 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102d27	obj/kernel.asm	/^c0102d27 <vector81>:$/;"	l
c0102d27	obj/kernel.asm	/^c0102d27:	6a 00                	push   $0x0$/;"	l
c0102d29	obj/kernel.asm	/^c0102d29:	6a 51                	push   $0x51$/;"	l
c0102d2b	obj/kernel.asm	/^c0102d2b:	e9 9e 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102d30	obj/kernel.asm	/^c0102d30 <vector82>:$/;"	l
c0102d30	obj/kernel.asm	/^c0102d30:	6a 00                	push   $0x0$/;"	l
c0102d32	obj/kernel.asm	/^c0102d32:	6a 52                	push   $0x52$/;"	l
c0102d34	obj/kernel.asm	/^c0102d34:	e9 95 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102d39	obj/kernel.asm	/^c0102d39 <vector83>:$/;"	l
c0102d39	obj/kernel.asm	/^c0102d39:	6a 00                	push   $0x0$/;"	l
c0102d3b	obj/kernel.asm	/^c0102d3b:	6a 53                	push   $0x53$/;"	l
c0102d3d	obj/kernel.asm	/^c0102d3d:	e9 8c 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102d42	obj/kernel.asm	/^c0102d42 <vector84>:$/;"	l
c0102d42	obj/kernel.asm	/^c0102d42:	6a 00                	push   $0x0$/;"	l
c0102d44	obj/kernel.asm	/^c0102d44:	6a 54                	push   $0x54$/;"	l
c0102d46	obj/kernel.asm	/^c0102d46:	e9 83 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102d4b	obj/kernel.asm	/^c0102d4b <vector85>:$/;"	l
c0102d4b	obj/kernel.asm	/^c0102d4b:	6a 00                	push   $0x0$/;"	l
c0102d4d	obj/kernel.asm	/^c0102d4d:	6a 55                	push   $0x55$/;"	l
c0102d4f	obj/kernel.asm	/^c0102d4f:	e9 7a 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102d54	obj/kernel.asm	/^c0102d54 <vector86>:$/;"	l
c0102d54	obj/kernel.asm	/^c0102d54:	6a 00                	push   $0x0$/;"	l
c0102d56	obj/kernel.asm	/^c0102d56:	6a 56                	push   $0x56$/;"	l
c0102d58	obj/kernel.asm	/^c0102d58:	e9 71 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102d5d	obj/kernel.asm	/^c0102d5d <vector87>:$/;"	l
c0102d5d	obj/kernel.asm	/^c0102d5d:	6a 00                	push   $0x0$/;"	l
c0102d5f	obj/kernel.asm	/^c0102d5f:	6a 57                	push   $0x57$/;"	l
c0102d61	obj/kernel.asm	/^c0102d61:	e9 68 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102d66	obj/kernel.asm	/^c0102d66 <vector88>:$/;"	l
c0102d66	obj/kernel.asm	/^c0102d66:	6a 00                	push   $0x0$/;"	l
c0102d68	obj/kernel.asm	/^c0102d68:	6a 58                	push   $0x58$/;"	l
c0102d6a	obj/kernel.asm	/^c0102d6a:	e9 5f 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102d6f	obj/kernel.asm	/^c0102d6f <vector89>:$/;"	l
c0102d6f	obj/kernel.asm	/^c0102d6f:	6a 00                	push   $0x0$/;"	l
c0102d71	obj/kernel.asm	/^c0102d71:	6a 59                	push   $0x59$/;"	l
c0102d73	obj/kernel.asm	/^c0102d73:	e9 56 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102d78	obj/kernel.asm	/^c0102d78 <vector90>:$/;"	l
c0102d78	obj/kernel.asm	/^c0102d78:	6a 00                	push   $0x0$/;"	l
c0102d7a	obj/kernel.asm	/^c0102d7a:	6a 5a                	push   $0x5a$/;"	l
c0102d7c	obj/kernel.asm	/^c0102d7c:	e9 4d 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102d81	obj/kernel.asm	/^c0102d81 <vector91>:$/;"	l
c0102d81	obj/kernel.asm	/^c0102d81:	6a 00                	push   $0x0$/;"	l
c0102d83	obj/kernel.asm	/^c0102d83:	6a 5b                	push   $0x5b$/;"	l
c0102d85	obj/kernel.asm	/^c0102d85:	e9 44 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102d8a	obj/kernel.asm	/^c0102d8a <vector92>:$/;"	l
c0102d8a	obj/kernel.asm	/^c0102d8a:	6a 00                	push   $0x0$/;"	l
c0102d8c	obj/kernel.asm	/^c0102d8c:	6a 5c                	push   $0x5c$/;"	l
c0102d8e	obj/kernel.asm	/^c0102d8e:	e9 3b 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102d93	obj/kernel.asm	/^c0102d93 <vector93>:$/;"	l
c0102d93	obj/kernel.asm	/^c0102d93:	6a 00                	push   $0x0$/;"	l
c0102d95	obj/kernel.asm	/^c0102d95:	6a 5d                	push   $0x5d$/;"	l
c0102d97	obj/kernel.asm	/^c0102d97:	e9 32 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102d9c	obj/kernel.asm	/^c0102d9c <vector94>:$/;"	l
c0102d9c	obj/kernel.asm	/^c0102d9c:	6a 00                	push   $0x0$/;"	l
c0102d9e	obj/kernel.asm	/^c0102d9e:	6a 5e                	push   $0x5e$/;"	l
c0102da0	obj/kernel.asm	/^c0102da0:	e9 29 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102da5	obj/kernel.asm	/^c0102da5 <vector95>:$/;"	l
c0102da5	obj/kernel.asm	/^c0102da5:	6a 00                	push   $0x0$/;"	l
c0102da7	obj/kernel.asm	/^c0102da7:	6a 5f                	push   $0x5f$/;"	l
c0102da9	obj/kernel.asm	/^c0102da9:	e9 20 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102dae	obj/kernel.asm	/^c0102dae <vector96>:$/;"	l
c0102dae	obj/kernel.asm	/^c0102dae:	6a 00                	push   $0x0$/;"	l
c0102db0	obj/kernel.asm	/^c0102db0:	6a 60                	push   $0x60$/;"	l
c0102db2	obj/kernel.asm	/^c0102db2:	e9 17 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102db7	obj/kernel.asm	/^c0102db7 <vector97>:$/;"	l
c0102db7	obj/kernel.asm	/^c0102db7:	6a 00                	push   $0x0$/;"	l
c0102db9	obj/kernel.asm	/^c0102db9:	6a 61                	push   $0x61$/;"	l
c0102dbb	obj/kernel.asm	/^c0102dbb:	e9 0e 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102dc0	obj/kernel.asm	/^c0102dc0 <vector98>:$/;"	l
c0102dc0	obj/kernel.asm	/^c0102dc0:	6a 00                	push   $0x0$/;"	l
c0102dc2	obj/kernel.asm	/^c0102dc2:	6a 62                	push   $0x62$/;"	l
c0102dc4	obj/kernel.asm	/^c0102dc4:	e9 05 07 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102dc9	obj/kernel.asm	/^c0102dc9 <vector99>:$/;"	l
c0102dc9	obj/kernel.asm	/^c0102dc9:	6a 00                	push   $0x0$/;"	l
c0102dcb	obj/kernel.asm	/^c0102dcb:	6a 63                	push   $0x63$/;"	l
c0102dcd	obj/kernel.asm	/^c0102dcd:	e9 fc 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102dd2	obj/kernel.asm	/^c0102dd2 <vector100>:$/;"	l
c0102dd2	obj/kernel.asm	/^c0102dd2:	6a 00                	push   $0x0$/;"	l
c0102dd4	obj/kernel.asm	/^c0102dd4:	6a 64                	push   $0x64$/;"	l
c0102dd6	obj/kernel.asm	/^c0102dd6:	e9 f3 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ddb	obj/kernel.asm	/^c0102ddb <vector101>:$/;"	l
c0102ddb	obj/kernel.asm	/^c0102ddb:	6a 00                	push   $0x0$/;"	l
c0102ddd	obj/kernel.asm	/^c0102ddd:	6a 65                	push   $0x65$/;"	l
c0102ddf	obj/kernel.asm	/^c0102ddf:	e9 ea 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102de4	obj/kernel.asm	/^c0102de4 <vector102>:$/;"	l
c0102de4	obj/kernel.asm	/^c0102de4:	6a 00                	push   $0x0$/;"	l
c0102de6	obj/kernel.asm	/^c0102de6:	6a 66                	push   $0x66$/;"	l
c0102de8	obj/kernel.asm	/^c0102de8:	e9 e1 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ded	obj/kernel.asm	/^c0102ded <vector103>:$/;"	l
c0102ded	obj/kernel.asm	/^c0102ded:	6a 00                	push   $0x0$/;"	l
c0102def	obj/kernel.asm	/^c0102def:	6a 67                	push   $0x67$/;"	l
c0102df1	obj/kernel.asm	/^c0102df1:	e9 d8 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102df6	obj/kernel.asm	/^c0102df6 <vector104>:$/;"	l
c0102df6	obj/kernel.asm	/^c0102df6:	6a 00                	push   $0x0$/;"	l
c0102df8	obj/kernel.asm	/^c0102df8:	6a 68                	push   $0x68$/;"	l
c0102dfa	obj/kernel.asm	/^c0102dfa:	e9 cf 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102dff	obj/kernel.asm	/^c0102dff <vector105>:$/;"	l
c0102dff	obj/kernel.asm	/^c0102dff:	6a 00                	push   $0x0$/;"	l
c0102e01	obj/kernel.asm	/^c0102e01:	6a 69                	push   $0x69$/;"	l
c0102e03	obj/kernel.asm	/^c0102e03:	e9 c6 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102e08	obj/kernel.asm	/^c0102e08 <vector106>:$/;"	l
c0102e08	obj/kernel.asm	/^c0102e08:	6a 00                	push   $0x0$/;"	l
c0102e0a	obj/kernel.asm	/^c0102e0a:	6a 6a                	push   $0x6a$/;"	l
c0102e0c	obj/kernel.asm	/^c0102e0c:	e9 bd 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102e11	obj/kernel.asm	/^c0102e11 <vector107>:$/;"	l
c0102e11	obj/kernel.asm	/^c0102e11:	6a 00                	push   $0x0$/;"	l
c0102e13	obj/kernel.asm	/^c0102e13:	6a 6b                	push   $0x6b$/;"	l
c0102e15	obj/kernel.asm	/^c0102e15:	e9 b4 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102e1a	obj/kernel.asm	/^c0102e1a <vector108>:$/;"	l
c0102e1a	obj/kernel.asm	/^c0102e1a:	6a 00                	push   $0x0$/;"	l
c0102e1c	obj/kernel.asm	/^c0102e1c:	6a 6c                	push   $0x6c$/;"	l
c0102e1e	obj/kernel.asm	/^c0102e1e:	e9 ab 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102e23	obj/kernel.asm	/^c0102e23 <vector109>:$/;"	l
c0102e23	obj/kernel.asm	/^c0102e23:	6a 00                	push   $0x0$/;"	l
c0102e25	obj/kernel.asm	/^c0102e25:	6a 6d                	push   $0x6d$/;"	l
c0102e27	obj/kernel.asm	/^c0102e27:	e9 a2 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102e2c	obj/kernel.asm	/^c0102e2c <vector110>:$/;"	l
c0102e2c	obj/kernel.asm	/^c0102e2c:	6a 00                	push   $0x0$/;"	l
c0102e2e	obj/kernel.asm	/^c0102e2e:	6a 6e                	push   $0x6e$/;"	l
c0102e30	obj/kernel.asm	/^c0102e30:	e9 99 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102e35	obj/kernel.asm	/^c0102e35 <vector111>:$/;"	l
c0102e35	obj/kernel.asm	/^c0102e35:	6a 00                	push   $0x0$/;"	l
c0102e37	obj/kernel.asm	/^c0102e37:	6a 6f                	push   $0x6f$/;"	l
c0102e39	obj/kernel.asm	/^c0102e39:	e9 90 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102e3e	obj/kernel.asm	/^c0102e3e <vector112>:$/;"	l
c0102e3e	obj/kernel.asm	/^c0102e3e:	6a 00                	push   $0x0$/;"	l
c0102e40	obj/kernel.asm	/^c0102e40:	6a 70                	push   $0x70$/;"	l
c0102e42	obj/kernel.asm	/^c0102e42:	e9 87 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102e47	obj/kernel.asm	/^c0102e47 <vector113>:$/;"	l
c0102e47	obj/kernel.asm	/^c0102e47:	6a 00                	push   $0x0$/;"	l
c0102e49	obj/kernel.asm	/^c0102e49:	6a 71                	push   $0x71$/;"	l
c0102e4b	obj/kernel.asm	/^c0102e4b:	e9 7e 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102e50	obj/kernel.asm	/^c0102e50 <vector114>:$/;"	l
c0102e50	obj/kernel.asm	/^c0102e50:	6a 00                	push   $0x0$/;"	l
c0102e52	obj/kernel.asm	/^c0102e52:	6a 72                	push   $0x72$/;"	l
c0102e54	obj/kernel.asm	/^c0102e54:	e9 75 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102e59	obj/kernel.asm	/^c0102e59 <vector115>:$/;"	l
c0102e59	obj/kernel.asm	/^c0102e59:	6a 00                	push   $0x0$/;"	l
c0102e5b	obj/kernel.asm	/^c0102e5b:	6a 73                	push   $0x73$/;"	l
c0102e5d	obj/kernel.asm	/^c0102e5d:	e9 6c 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102e62	obj/kernel.asm	/^c0102e62 <vector116>:$/;"	l
c0102e62	obj/kernel.asm	/^c0102e62:	6a 00                	push   $0x0$/;"	l
c0102e64	obj/kernel.asm	/^c0102e64:	6a 74                	push   $0x74$/;"	l
c0102e66	obj/kernel.asm	/^c0102e66:	e9 63 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102e6b	obj/kernel.asm	/^c0102e6b <vector117>:$/;"	l
c0102e6b	obj/kernel.asm	/^c0102e6b:	6a 00                	push   $0x0$/;"	l
c0102e6d	obj/kernel.asm	/^c0102e6d:	6a 75                	push   $0x75$/;"	l
c0102e6f	obj/kernel.asm	/^c0102e6f:	e9 5a 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102e74	obj/kernel.asm	/^c0102e74 <vector118>:$/;"	l
c0102e74	obj/kernel.asm	/^c0102e74:	6a 00                	push   $0x0$/;"	l
c0102e76	obj/kernel.asm	/^c0102e76:	6a 76                	push   $0x76$/;"	l
c0102e78	obj/kernel.asm	/^c0102e78:	e9 51 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102e7d	obj/kernel.asm	/^c0102e7d <vector119>:$/;"	l
c0102e7d	obj/kernel.asm	/^c0102e7d:	6a 00                	push   $0x0$/;"	l
c0102e7f	obj/kernel.asm	/^c0102e7f:	6a 77                	push   $0x77$/;"	l
c0102e81	obj/kernel.asm	/^c0102e81:	e9 48 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102e86	obj/kernel.asm	/^c0102e86 <vector120>:$/;"	l
c0102e86	obj/kernel.asm	/^c0102e86:	6a 00                	push   $0x0$/;"	l
c0102e88	obj/kernel.asm	/^c0102e88:	6a 78                	push   $0x78$/;"	l
c0102e8a	obj/kernel.asm	/^c0102e8a:	e9 3f 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102e8f	obj/kernel.asm	/^c0102e8f <vector121>:$/;"	l
c0102e8f	obj/kernel.asm	/^c0102e8f:	6a 00                	push   $0x0$/;"	l
c0102e91	obj/kernel.asm	/^c0102e91:	6a 79                	push   $0x79$/;"	l
c0102e93	obj/kernel.asm	/^c0102e93:	e9 36 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102e98	obj/kernel.asm	/^c0102e98 <vector122>:$/;"	l
c0102e98	obj/kernel.asm	/^c0102e98:	6a 00                	push   $0x0$/;"	l
c0102e9a	obj/kernel.asm	/^c0102e9a:	6a 7a                	push   $0x7a$/;"	l
c0102e9c	obj/kernel.asm	/^c0102e9c:	e9 2d 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ea1	obj/kernel.asm	/^c0102ea1 <vector123>:$/;"	l
c0102ea1	obj/kernel.asm	/^c0102ea1:	6a 00                	push   $0x0$/;"	l
c0102ea3	obj/kernel.asm	/^c0102ea3:	6a 7b                	push   $0x7b$/;"	l
c0102ea5	obj/kernel.asm	/^c0102ea5:	e9 24 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102eaa	obj/kernel.asm	/^c0102eaa <vector124>:$/;"	l
c0102eaa	obj/kernel.asm	/^c0102eaa:	6a 00                	push   $0x0$/;"	l
c0102eac	obj/kernel.asm	/^c0102eac:	6a 7c                	push   $0x7c$/;"	l
c0102eae	obj/kernel.asm	/^c0102eae:	e9 1b 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102eb3	obj/kernel.asm	/^c0102eb3 <vector125>:$/;"	l
c0102eb3	obj/kernel.asm	/^c0102eb3:	6a 00                	push   $0x0$/;"	l
c0102eb5	obj/kernel.asm	/^c0102eb5:	6a 7d                	push   $0x7d$/;"	l
c0102eb7	obj/kernel.asm	/^c0102eb7:	e9 12 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ebc	obj/kernel.asm	/^c0102ebc <vector126>:$/;"	l
c0102ebc	obj/kernel.asm	/^c0102ebc:	6a 00                	push   $0x0$/;"	l
c0102ebe	obj/kernel.asm	/^c0102ebe:	6a 7e                	push   $0x7e$/;"	l
c0102ec0	obj/kernel.asm	/^c0102ec0:	e9 09 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ec5	obj/kernel.asm	/^c0102ec5 <vector127>:$/;"	l
c0102ec5	obj/kernel.asm	/^c0102ec5:	6a 00                	push   $0x0$/;"	l
c0102ec7	obj/kernel.asm	/^c0102ec7:	6a 7f                	push   $0x7f$/;"	l
c0102ec9	obj/kernel.asm	/^c0102ec9:	e9 00 06 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ece	obj/kernel.asm	/^c0102ece <vector128>:$/;"	l
c0102ece	obj/kernel.asm	/^c0102ece:	6a 00                	push   $0x0$/;"	l
c0102ed0	obj/kernel.asm	/^c0102ed0:	68 80 00 00 00       	push   $0x80$/;"	l
c0102ed5	obj/kernel.asm	/^c0102ed5:	e9 f4 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102eda	obj/kernel.asm	/^c0102eda <vector129>:$/;"	l
c0102eda	obj/kernel.asm	/^c0102eda:	6a 00                	push   $0x0$/;"	l
c0102edc	obj/kernel.asm	/^c0102edc:	68 81 00 00 00       	push   $0x81$/;"	l
c0102ee1	obj/kernel.asm	/^c0102ee1:	e9 e8 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ee6	obj/kernel.asm	/^c0102ee6 <vector130>:$/;"	l
c0102ee6	obj/kernel.asm	/^c0102ee6:	6a 00                	push   $0x0$/;"	l
c0102ee8	obj/kernel.asm	/^c0102ee8:	68 82 00 00 00       	push   $0x82$/;"	l
c0102eed	obj/kernel.asm	/^c0102eed:	e9 dc 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ef2	obj/kernel.asm	/^c0102ef2 <vector131>:$/;"	l
c0102ef2	obj/kernel.asm	/^c0102ef2:	6a 00                	push   $0x0$/;"	l
c0102ef4	obj/kernel.asm	/^c0102ef4:	68 83 00 00 00       	push   $0x83$/;"	l
c0102ef9	obj/kernel.asm	/^c0102ef9:	e9 d0 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102efe	obj/kernel.asm	/^c0102efe <vector132>:$/;"	l
c0102efe	obj/kernel.asm	/^c0102efe:	6a 00                	push   $0x0$/;"	l
c0102f00	obj/kernel.asm	/^c0102f00:	68 84 00 00 00       	push   $0x84$/;"	l
c0102f05	obj/kernel.asm	/^c0102f05:	e9 c4 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102f0a	obj/kernel.asm	/^c0102f0a <vector133>:$/;"	l
c0102f0a	obj/kernel.asm	/^c0102f0a:	6a 00                	push   $0x0$/;"	l
c0102f0c	obj/kernel.asm	/^c0102f0c:	68 85 00 00 00       	push   $0x85$/;"	l
c0102f11	obj/kernel.asm	/^c0102f11:	e9 b8 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102f16	obj/kernel.asm	/^c0102f16 <vector134>:$/;"	l
c0102f16	obj/kernel.asm	/^c0102f16:	6a 00                	push   $0x0$/;"	l
c0102f18	obj/kernel.asm	/^c0102f18:	68 86 00 00 00       	push   $0x86$/;"	l
c0102f1d	obj/kernel.asm	/^c0102f1d:	e9 ac 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102f22	obj/kernel.asm	/^c0102f22 <vector135>:$/;"	l
c0102f22	obj/kernel.asm	/^c0102f22:	6a 00                	push   $0x0$/;"	l
c0102f24	obj/kernel.asm	/^c0102f24:	68 87 00 00 00       	push   $0x87$/;"	l
c0102f29	obj/kernel.asm	/^c0102f29:	e9 a0 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102f2e	obj/kernel.asm	/^c0102f2e <vector136>:$/;"	l
c0102f2e	obj/kernel.asm	/^c0102f2e:	6a 00                	push   $0x0$/;"	l
c0102f30	obj/kernel.asm	/^c0102f30:	68 88 00 00 00       	push   $0x88$/;"	l
c0102f35	obj/kernel.asm	/^c0102f35:	e9 94 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102f3a	obj/kernel.asm	/^c0102f3a <vector137>:$/;"	l
c0102f3a	obj/kernel.asm	/^c0102f3a:	6a 00                	push   $0x0$/;"	l
c0102f3c	obj/kernel.asm	/^c0102f3c:	68 89 00 00 00       	push   $0x89$/;"	l
c0102f41	obj/kernel.asm	/^c0102f41:	e9 88 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102f46	obj/kernel.asm	/^c0102f46 <vector138>:$/;"	l
c0102f46	obj/kernel.asm	/^c0102f46:	6a 00                	push   $0x0$/;"	l
c0102f48	obj/kernel.asm	/^c0102f48:	68 8a 00 00 00       	push   $0x8a$/;"	l
c0102f4d	obj/kernel.asm	/^c0102f4d:	e9 7c 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102f52	obj/kernel.asm	/^c0102f52 <vector139>:$/;"	l
c0102f52	obj/kernel.asm	/^c0102f52:	6a 00                	push   $0x0$/;"	l
c0102f54	obj/kernel.asm	/^c0102f54:	68 8b 00 00 00       	push   $0x8b$/;"	l
c0102f59	obj/kernel.asm	/^c0102f59:	e9 70 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102f5e	obj/kernel.asm	/^c0102f5e <vector140>:$/;"	l
c0102f5e	obj/kernel.asm	/^c0102f5e:	6a 00                	push   $0x0$/;"	l
c0102f60	obj/kernel.asm	/^c0102f60:	68 8c 00 00 00       	push   $0x8c$/;"	l
c0102f65	obj/kernel.asm	/^c0102f65:	e9 64 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102f6a	obj/kernel.asm	/^c0102f6a <vector141>:$/;"	l
c0102f6a	obj/kernel.asm	/^c0102f6a:	6a 00                	push   $0x0$/;"	l
c0102f6c	obj/kernel.asm	/^c0102f6c:	68 8d 00 00 00       	push   $0x8d$/;"	l
c0102f71	obj/kernel.asm	/^c0102f71:	e9 58 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102f76	obj/kernel.asm	/^c0102f76 <vector142>:$/;"	l
c0102f76	obj/kernel.asm	/^c0102f76:	6a 00                	push   $0x0$/;"	l
c0102f78	obj/kernel.asm	/^c0102f78:	68 8e 00 00 00       	push   $0x8e$/;"	l
c0102f7d	obj/kernel.asm	/^c0102f7d:	e9 4c 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102f82	obj/kernel.asm	/^c0102f82 <vector143>:$/;"	l
c0102f82	obj/kernel.asm	/^c0102f82:	6a 00                	push   $0x0$/;"	l
c0102f84	obj/kernel.asm	/^c0102f84:	68 8f 00 00 00       	push   $0x8f$/;"	l
c0102f89	obj/kernel.asm	/^c0102f89:	e9 40 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102f8e	obj/kernel.asm	/^c0102f8e <vector144>:$/;"	l
c0102f8e	obj/kernel.asm	/^c0102f8e:	6a 00                	push   $0x0$/;"	l
c0102f90	obj/kernel.asm	/^c0102f90:	68 90 00 00 00       	push   $0x90$/;"	l
c0102f95	obj/kernel.asm	/^c0102f95:	e9 34 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102f9a	obj/kernel.asm	/^c0102f9a <vector145>:$/;"	l
c0102f9a	obj/kernel.asm	/^c0102f9a:	6a 00                	push   $0x0$/;"	l
c0102f9c	obj/kernel.asm	/^c0102f9c:	68 91 00 00 00       	push   $0x91$/;"	l
c0102fa1	obj/kernel.asm	/^c0102fa1:	e9 28 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102fa6	obj/kernel.asm	/^c0102fa6 <vector146>:$/;"	l
c0102fa6	obj/kernel.asm	/^c0102fa6:	6a 00                	push   $0x0$/;"	l
c0102fa8	obj/kernel.asm	/^c0102fa8:	68 92 00 00 00       	push   $0x92$/;"	l
c0102fad	obj/kernel.asm	/^c0102fad:	e9 1c 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102fb2	obj/kernel.asm	/^c0102fb2 <vector147>:$/;"	l
c0102fb2	obj/kernel.asm	/^c0102fb2:	6a 00                	push   $0x0$/;"	l
c0102fb4	obj/kernel.asm	/^c0102fb4:	68 93 00 00 00       	push   $0x93$/;"	l
c0102fb9	obj/kernel.asm	/^c0102fb9:	e9 10 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102fbe	obj/kernel.asm	/^c0102fbe <vector148>:$/;"	l
c0102fbe	obj/kernel.asm	/^c0102fbe:	6a 00                	push   $0x0$/;"	l
c0102fc0	obj/kernel.asm	/^c0102fc0:	68 94 00 00 00       	push   $0x94$/;"	l
c0102fc5	obj/kernel.asm	/^c0102fc5:	e9 04 05 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102fca	obj/kernel.asm	/^c0102fca <vector149>:$/;"	l
c0102fca	obj/kernel.asm	/^c0102fca:	6a 00                	push   $0x0$/;"	l
c0102fcc	obj/kernel.asm	/^c0102fcc:	68 95 00 00 00       	push   $0x95$/;"	l
c0102fd1	obj/kernel.asm	/^c0102fd1:	e9 f8 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102fd6	obj/kernel.asm	/^c0102fd6 <vector150>:$/;"	l
c0102fd6	obj/kernel.asm	/^c0102fd6:	6a 00                	push   $0x0$/;"	l
c0102fd8	obj/kernel.asm	/^c0102fd8:	68 96 00 00 00       	push   $0x96$/;"	l
c0102fdd	obj/kernel.asm	/^c0102fdd:	e9 ec 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102fe2	obj/kernel.asm	/^c0102fe2 <vector151>:$/;"	l
c0102fe2	obj/kernel.asm	/^c0102fe2:	6a 00                	push   $0x0$/;"	l
c0102fe4	obj/kernel.asm	/^c0102fe4:	68 97 00 00 00       	push   $0x97$/;"	l
c0102fe9	obj/kernel.asm	/^c0102fe9:	e9 e0 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102fee	obj/kernel.asm	/^c0102fee <vector152>:$/;"	l
c0102fee	obj/kernel.asm	/^c0102fee:	6a 00                	push   $0x0$/;"	l
c0102ff0	obj/kernel.asm	/^c0102ff0:	68 98 00 00 00       	push   $0x98$/;"	l
c0102ff5	obj/kernel.asm	/^c0102ff5:	e9 d4 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0102ffa	obj/kernel.asm	/^c0102ffa <vector153>:$/;"	l
c0102ffa	obj/kernel.asm	/^c0102ffa:	6a 00                	push   $0x0$/;"	l
c0102ffc	obj/kernel.asm	/^c0102ffc:	68 99 00 00 00       	push   $0x99$/;"	l
c0103001	obj/kernel.asm	/^c0103001:	e9 c8 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103006	obj/kernel.asm	/^c0103006 <vector154>:$/;"	l
c0103006	obj/kernel.asm	/^c0103006:	6a 00                	push   $0x0$/;"	l
c0103008	obj/kernel.asm	/^c0103008:	68 9a 00 00 00       	push   $0x9a$/;"	l
c010300d	obj/kernel.asm	/^c010300d:	e9 bc 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103012	obj/kernel.asm	/^c0103012 <vector155>:$/;"	l
c0103012	obj/kernel.asm	/^c0103012:	6a 00                	push   $0x0$/;"	l
c0103014	obj/kernel.asm	/^c0103014:	68 9b 00 00 00       	push   $0x9b$/;"	l
c0103019	obj/kernel.asm	/^c0103019:	e9 b0 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010301e	obj/kernel.asm	/^c010301e <vector156>:$/;"	l
c010301e	obj/kernel.asm	/^c010301e:	6a 00                	push   $0x0$/;"	l
c0103020	obj/kernel.asm	/^c0103020:	68 9c 00 00 00       	push   $0x9c$/;"	l
c0103025	obj/kernel.asm	/^c0103025:	e9 a4 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010302a	obj/kernel.asm	/^c010302a <vector157>:$/;"	l
c010302a	obj/kernel.asm	/^c010302a:	6a 00                	push   $0x0$/;"	l
c010302c	obj/kernel.asm	/^c010302c:	68 9d 00 00 00       	push   $0x9d$/;"	l
c0103031	obj/kernel.asm	/^c0103031:	e9 98 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103036	obj/kernel.asm	/^c0103036 <vector158>:$/;"	l
c0103036	obj/kernel.asm	/^c0103036:	6a 00                	push   $0x0$/;"	l
c0103038	obj/kernel.asm	/^c0103038:	68 9e 00 00 00       	push   $0x9e$/;"	l
c010303d	obj/kernel.asm	/^c010303d:	e9 8c 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103042	obj/kernel.asm	/^c0103042 <vector159>:$/;"	l
c0103042	obj/kernel.asm	/^c0103042:	6a 00                	push   $0x0$/;"	l
c0103044	obj/kernel.asm	/^c0103044:	68 9f 00 00 00       	push   $0x9f$/;"	l
c0103049	obj/kernel.asm	/^c0103049:	e9 80 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010304e	obj/kernel.asm	/^c010304e <vector160>:$/;"	l
c010304e	obj/kernel.asm	/^c010304e:	6a 00                	push   $0x0$/;"	l
c0103050	obj/kernel.asm	/^c0103050:	68 a0 00 00 00       	push   $0xa0$/;"	l
c0103055	obj/kernel.asm	/^c0103055:	e9 74 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010305a	obj/kernel.asm	/^c010305a <vector161>:$/;"	l
c010305a	obj/kernel.asm	/^c010305a:	6a 00                	push   $0x0$/;"	l
c010305c	obj/kernel.asm	/^c010305c:	68 a1 00 00 00       	push   $0xa1$/;"	l
c0103061	obj/kernel.asm	/^c0103061:	e9 68 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103066	obj/kernel.asm	/^c0103066 <vector162>:$/;"	l
c0103066	obj/kernel.asm	/^c0103066:	6a 00                	push   $0x0$/;"	l
c0103068	obj/kernel.asm	/^c0103068:	68 a2 00 00 00       	push   $0xa2$/;"	l
c010306d	obj/kernel.asm	/^c010306d:	e9 5c 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103072	obj/kernel.asm	/^c0103072 <vector163>:$/;"	l
c0103072	obj/kernel.asm	/^c0103072:	6a 00                	push   $0x0$/;"	l
c0103074	obj/kernel.asm	/^c0103074:	68 a3 00 00 00       	push   $0xa3$/;"	l
c0103079	obj/kernel.asm	/^c0103079:	e9 50 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010307e	obj/kernel.asm	/^c010307e <vector164>:$/;"	l
c010307e	obj/kernel.asm	/^c010307e:	6a 00                	push   $0x0$/;"	l
c0103080	obj/kernel.asm	/^c0103080:	68 a4 00 00 00       	push   $0xa4$/;"	l
c0103085	obj/kernel.asm	/^c0103085:	e9 44 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010308a	obj/kernel.asm	/^c010308a <vector165>:$/;"	l
c010308a	obj/kernel.asm	/^c010308a:	6a 00                	push   $0x0$/;"	l
c010308c	obj/kernel.asm	/^c010308c:	68 a5 00 00 00       	push   $0xa5$/;"	l
c0103091	obj/kernel.asm	/^c0103091:	e9 38 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103096	obj/kernel.asm	/^c0103096 <vector166>:$/;"	l
c0103096	obj/kernel.asm	/^c0103096:	6a 00                	push   $0x0$/;"	l
c0103098	obj/kernel.asm	/^c0103098:	68 a6 00 00 00       	push   $0xa6$/;"	l
c010309d	obj/kernel.asm	/^c010309d:	e9 2c 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01030a2	obj/kernel.asm	/^c01030a2 <vector167>:$/;"	l
c01030a2	obj/kernel.asm	/^c01030a2:	6a 00                	push   $0x0$/;"	l
c01030a4	obj/kernel.asm	/^c01030a4:	68 a7 00 00 00       	push   $0xa7$/;"	l
c01030a9	obj/kernel.asm	/^c01030a9:	e9 20 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01030ae	obj/kernel.asm	/^c01030ae <vector168>:$/;"	l
c01030ae	obj/kernel.asm	/^c01030ae:	6a 00                	push   $0x0$/;"	l
c01030b0	obj/kernel.asm	/^c01030b0:	68 a8 00 00 00       	push   $0xa8$/;"	l
c01030b5	obj/kernel.asm	/^c01030b5:	e9 14 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01030ba	obj/kernel.asm	/^c01030ba <vector169>:$/;"	l
c01030ba	obj/kernel.asm	/^c01030ba:	6a 00                	push   $0x0$/;"	l
c01030bc	obj/kernel.asm	/^c01030bc:	68 a9 00 00 00       	push   $0xa9$/;"	l
c01030c1	obj/kernel.asm	/^c01030c1:	e9 08 04 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01030c6	obj/kernel.asm	/^c01030c6 <vector170>:$/;"	l
c01030c6	obj/kernel.asm	/^c01030c6:	6a 00                	push   $0x0$/;"	l
c01030c8	obj/kernel.asm	/^c01030c8:	68 aa 00 00 00       	push   $0xaa$/;"	l
c01030cd	obj/kernel.asm	/^c01030cd:	e9 fc 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01030d2	obj/kernel.asm	/^c01030d2 <vector171>:$/;"	l
c01030d2	obj/kernel.asm	/^c01030d2:	6a 00                	push   $0x0$/;"	l
c01030d4	obj/kernel.asm	/^c01030d4:	68 ab 00 00 00       	push   $0xab$/;"	l
c01030d9	obj/kernel.asm	/^c01030d9:	e9 f0 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01030de	obj/kernel.asm	/^c01030de <vector172>:$/;"	l
c01030de	obj/kernel.asm	/^c01030de:	6a 00                	push   $0x0$/;"	l
c01030e0	obj/kernel.asm	/^c01030e0:	68 ac 00 00 00       	push   $0xac$/;"	l
c01030e5	obj/kernel.asm	/^c01030e5:	e9 e4 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01030ea	obj/kernel.asm	/^c01030ea <vector173>:$/;"	l
c01030ea	obj/kernel.asm	/^c01030ea:	6a 00                	push   $0x0$/;"	l
c01030ec	obj/kernel.asm	/^c01030ec:	68 ad 00 00 00       	push   $0xad$/;"	l
c01030f1	obj/kernel.asm	/^c01030f1:	e9 d8 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01030f6	obj/kernel.asm	/^c01030f6 <vector174>:$/;"	l
c01030f6	obj/kernel.asm	/^c01030f6:	6a 00                	push   $0x0$/;"	l
c01030f8	obj/kernel.asm	/^c01030f8:	68 ae 00 00 00       	push   $0xae$/;"	l
c01030fd	obj/kernel.asm	/^c01030fd:	e9 cc 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103102	obj/kernel.asm	/^c0103102 <vector175>:$/;"	l
c0103102	obj/kernel.asm	/^c0103102:	6a 00                	push   $0x0$/;"	l
c0103104	obj/kernel.asm	/^c0103104:	68 af 00 00 00       	push   $0xaf$/;"	l
c0103109	obj/kernel.asm	/^c0103109:	e9 c0 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010310e	obj/kernel.asm	/^c010310e <vector176>:$/;"	l
c010310e	obj/kernel.asm	/^c010310e:	6a 00                	push   $0x0$/;"	l
c0103110	obj/kernel.asm	/^c0103110:	68 b0 00 00 00       	push   $0xb0$/;"	l
c0103115	obj/kernel.asm	/^c0103115:	e9 b4 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010311a	obj/kernel.asm	/^c010311a <vector177>:$/;"	l
c010311a	obj/kernel.asm	/^c010311a:	6a 00                	push   $0x0$/;"	l
c010311c	obj/kernel.asm	/^c010311c:	68 b1 00 00 00       	push   $0xb1$/;"	l
c0103121	obj/kernel.asm	/^c0103121:	e9 a8 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103126	obj/kernel.asm	/^c0103126 <vector178>:$/;"	l
c0103126	obj/kernel.asm	/^c0103126:	6a 00                	push   $0x0$/;"	l
c0103128	obj/kernel.asm	/^c0103128:	68 b2 00 00 00       	push   $0xb2$/;"	l
c010312d	obj/kernel.asm	/^c010312d:	e9 9c 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103132	obj/kernel.asm	/^c0103132 <vector179>:$/;"	l
c0103132	obj/kernel.asm	/^c0103132:	6a 00                	push   $0x0$/;"	l
c0103134	obj/kernel.asm	/^c0103134:	68 b3 00 00 00       	push   $0xb3$/;"	l
c0103139	obj/kernel.asm	/^c0103139:	e9 90 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010313e	obj/kernel.asm	/^c010313e <vector180>:$/;"	l
c010313e	obj/kernel.asm	/^c010313e:	6a 00                	push   $0x0$/;"	l
c0103140	obj/kernel.asm	/^c0103140:	68 b4 00 00 00       	push   $0xb4$/;"	l
c0103145	obj/kernel.asm	/^c0103145:	e9 84 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010314a	obj/kernel.asm	/^c010314a <vector181>:$/;"	l
c010314a	obj/kernel.asm	/^c010314a:	6a 00                	push   $0x0$/;"	l
c010314c	obj/kernel.asm	/^c010314c:	68 b5 00 00 00       	push   $0xb5$/;"	l
c0103151	obj/kernel.asm	/^c0103151:	e9 78 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103156	obj/kernel.asm	/^c0103156 <vector182>:$/;"	l
c0103156	obj/kernel.asm	/^c0103156:	6a 00                	push   $0x0$/;"	l
c0103158	obj/kernel.asm	/^c0103158:	68 b6 00 00 00       	push   $0xb6$/;"	l
c010315d	obj/kernel.asm	/^c010315d:	e9 6c 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103162	obj/kernel.asm	/^c0103162 <vector183>:$/;"	l
c0103162	obj/kernel.asm	/^c0103162:	6a 00                	push   $0x0$/;"	l
c0103164	obj/kernel.asm	/^c0103164:	68 b7 00 00 00       	push   $0xb7$/;"	l
c0103169	obj/kernel.asm	/^c0103169:	e9 60 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010316e	obj/kernel.asm	/^c010316e <vector184>:$/;"	l
c010316e	obj/kernel.asm	/^c010316e:	6a 00                	push   $0x0$/;"	l
c0103170	obj/kernel.asm	/^c0103170:	68 b8 00 00 00       	push   $0xb8$/;"	l
c0103175	obj/kernel.asm	/^c0103175:	e9 54 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010317a	obj/kernel.asm	/^c010317a <vector185>:$/;"	l
c010317a	obj/kernel.asm	/^c010317a:	6a 00                	push   $0x0$/;"	l
c010317c	obj/kernel.asm	/^c010317c:	68 b9 00 00 00       	push   $0xb9$/;"	l
c0103181	obj/kernel.asm	/^c0103181:	e9 48 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103186	obj/kernel.asm	/^c0103186 <vector186>:$/;"	l
c0103186	obj/kernel.asm	/^c0103186:	6a 00                	push   $0x0$/;"	l
c0103188	obj/kernel.asm	/^c0103188:	68 ba 00 00 00       	push   $0xba$/;"	l
c010318d	obj/kernel.asm	/^c010318d:	e9 3c 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103192	obj/kernel.asm	/^c0103192 <vector187>:$/;"	l
c0103192	obj/kernel.asm	/^c0103192:	6a 00                	push   $0x0$/;"	l
c0103194	obj/kernel.asm	/^c0103194:	68 bb 00 00 00       	push   $0xbb$/;"	l
c0103199	obj/kernel.asm	/^c0103199:	e9 30 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010319e	obj/kernel.asm	/^c010319e <vector188>:$/;"	l
c010319e	obj/kernel.asm	/^c010319e:	6a 00                	push   $0x0$/;"	l
c01031a0	obj/kernel.asm	/^c01031a0:	68 bc 00 00 00       	push   $0xbc$/;"	l
c01031a5	obj/kernel.asm	/^c01031a5:	e9 24 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01031aa	obj/kernel.asm	/^c01031aa <vector189>:$/;"	l
c01031aa	obj/kernel.asm	/^c01031aa:	6a 00                	push   $0x0$/;"	l
c01031ac	obj/kernel.asm	/^c01031ac:	68 bd 00 00 00       	push   $0xbd$/;"	l
c01031b1	obj/kernel.asm	/^c01031b1:	e9 18 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01031b6	obj/kernel.asm	/^c01031b6 <vector190>:$/;"	l
c01031b6	obj/kernel.asm	/^c01031b6:	6a 00                	push   $0x0$/;"	l
c01031b8	obj/kernel.asm	/^c01031b8:	68 be 00 00 00       	push   $0xbe$/;"	l
c01031bd	obj/kernel.asm	/^c01031bd:	e9 0c 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01031c2	obj/kernel.asm	/^c01031c2 <vector191>:$/;"	l
c01031c2	obj/kernel.asm	/^c01031c2:	6a 00                	push   $0x0$/;"	l
c01031c4	obj/kernel.asm	/^c01031c4:	68 bf 00 00 00       	push   $0xbf$/;"	l
c01031c9	obj/kernel.asm	/^c01031c9:	e9 00 03 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01031ce	obj/kernel.asm	/^c01031ce <vector192>:$/;"	l
c01031ce	obj/kernel.asm	/^c01031ce:	6a 00                	push   $0x0$/;"	l
c01031d0	obj/kernel.asm	/^c01031d0:	68 c0 00 00 00       	push   $0xc0$/;"	l
c01031d5	obj/kernel.asm	/^c01031d5:	e9 f4 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01031da	obj/kernel.asm	/^c01031da <vector193>:$/;"	l
c01031da	obj/kernel.asm	/^c01031da:	6a 00                	push   $0x0$/;"	l
c01031dc	obj/kernel.asm	/^c01031dc:	68 c1 00 00 00       	push   $0xc1$/;"	l
c01031e1	obj/kernel.asm	/^c01031e1:	e9 e8 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01031e6	obj/kernel.asm	/^c01031e6 <vector194>:$/;"	l
c01031e6	obj/kernel.asm	/^c01031e6:	6a 00                	push   $0x0$/;"	l
c01031e8	obj/kernel.asm	/^c01031e8:	68 c2 00 00 00       	push   $0xc2$/;"	l
c01031ed	obj/kernel.asm	/^c01031ed:	e9 dc 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01031f2	obj/kernel.asm	/^c01031f2 <vector195>:$/;"	l
c01031f2	obj/kernel.asm	/^c01031f2:	6a 00                	push   $0x0$/;"	l
c01031f4	obj/kernel.asm	/^c01031f4:	68 c3 00 00 00       	push   $0xc3$/;"	l
c01031f9	obj/kernel.asm	/^c01031f9:	e9 d0 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01031fe	obj/kernel.asm	/^c01031fe <vector196>:$/;"	l
c01031fe	obj/kernel.asm	/^c01031fe:	6a 00                	push   $0x0$/;"	l
c0103200	obj/kernel.asm	/^c0103200:	68 c4 00 00 00       	push   $0xc4$/;"	l
c0103205	obj/kernel.asm	/^c0103205:	e9 c4 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010320a	obj/kernel.asm	/^c010320a <vector197>:$/;"	l
c010320a	obj/kernel.asm	/^c010320a:	6a 00                	push   $0x0$/;"	l
c010320c	obj/kernel.asm	/^c010320c:	68 c5 00 00 00       	push   $0xc5$/;"	l
c0103211	obj/kernel.asm	/^c0103211:	e9 b8 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103216	obj/kernel.asm	/^c0103216 <vector198>:$/;"	l
c0103216	obj/kernel.asm	/^c0103216:	6a 00                	push   $0x0$/;"	l
c0103218	obj/kernel.asm	/^c0103218:	68 c6 00 00 00       	push   $0xc6$/;"	l
c010321d	obj/kernel.asm	/^c010321d:	e9 ac 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103222	obj/kernel.asm	/^c0103222 <vector199>:$/;"	l
c0103222	obj/kernel.asm	/^c0103222:	6a 00                	push   $0x0$/;"	l
c0103224	obj/kernel.asm	/^c0103224:	68 c7 00 00 00       	push   $0xc7$/;"	l
c0103229	obj/kernel.asm	/^c0103229:	e9 a0 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010322e	obj/kernel.asm	/^c010322e <vector200>:$/;"	l
c010322e	obj/kernel.asm	/^c010322e:	6a 00                	push   $0x0$/;"	l
c0103230	obj/kernel.asm	/^c0103230:	68 c8 00 00 00       	push   $0xc8$/;"	l
c0103235	obj/kernel.asm	/^c0103235:	e9 94 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010323a	obj/kernel.asm	/^c010323a <vector201>:$/;"	l
c010323a	obj/kernel.asm	/^c010323a:	6a 00                	push   $0x0$/;"	l
c010323c	obj/kernel.asm	/^c010323c:	68 c9 00 00 00       	push   $0xc9$/;"	l
c0103241	obj/kernel.asm	/^c0103241:	e9 88 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103246	obj/kernel.asm	/^c0103246 <vector202>:$/;"	l
c0103246	obj/kernel.asm	/^c0103246:	6a 00                	push   $0x0$/;"	l
c0103248	obj/kernel.asm	/^c0103248:	68 ca 00 00 00       	push   $0xca$/;"	l
c010324d	obj/kernel.asm	/^c010324d:	e9 7c 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103252	obj/kernel.asm	/^c0103252 <vector203>:$/;"	l
c0103252	obj/kernel.asm	/^c0103252:	6a 00                	push   $0x0$/;"	l
c0103254	obj/kernel.asm	/^c0103254:	68 cb 00 00 00       	push   $0xcb$/;"	l
c0103259	obj/kernel.asm	/^c0103259:	e9 70 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010325e	obj/kernel.asm	/^c010325e <vector204>:$/;"	l
c010325e	obj/kernel.asm	/^c010325e:	6a 00                	push   $0x0$/;"	l
c0103260	obj/kernel.asm	/^c0103260:	68 cc 00 00 00       	push   $0xcc$/;"	l
c0103265	obj/kernel.asm	/^c0103265:	e9 64 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010326a	obj/kernel.asm	/^c010326a <vector205>:$/;"	l
c010326a	obj/kernel.asm	/^c010326a:	6a 00                	push   $0x0$/;"	l
c010326c	obj/kernel.asm	/^c010326c:	68 cd 00 00 00       	push   $0xcd$/;"	l
c0103271	obj/kernel.asm	/^c0103271:	e9 58 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103276	obj/kernel.asm	/^c0103276 <vector206>:$/;"	l
c0103276	obj/kernel.asm	/^c0103276:	6a 00                	push   $0x0$/;"	l
c0103278	obj/kernel.asm	/^c0103278:	68 ce 00 00 00       	push   $0xce$/;"	l
c010327d	obj/kernel.asm	/^c010327d:	e9 4c 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103282	obj/kernel.asm	/^c0103282 <vector207>:$/;"	l
c0103282	obj/kernel.asm	/^c0103282:	6a 00                	push   $0x0$/;"	l
c0103284	obj/kernel.asm	/^c0103284:	68 cf 00 00 00       	push   $0xcf$/;"	l
c0103289	obj/kernel.asm	/^c0103289:	e9 40 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010328e	obj/kernel.asm	/^c010328e <vector208>:$/;"	l
c010328e	obj/kernel.asm	/^c010328e:	6a 00                	push   $0x0$/;"	l
c0103290	obj/kernel.asm	/^c0103290:	68 d0 00 00 00       	push   $0xd0$/;"	l
c0103295	obj/kernel.asm	/^c0103295:	e9 34 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010329a	obj/kernel.asm	/^c010329a <vector209>:$/;"	l
c010329a	obj/kernel.asm	/^c010329a:	6a 00                	push   $0x0$/;"	l
c010329c	obj/kernel.asm	/^c010329c:	68 d1 00 00 00       	push   $0xd1$/;"	l
c01032a1	obj/kernel.asm	/^c01032a1:	e9 28 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01032a6	obj/kernel.asm	/^c01032a6 <vector210>:$/;"	l
c01032a6	obj/kernel.asm	/^c01032a6:	6a 00                	push   $0x0$/;"	l
c01032a8	obj/kernel.asm	/^c01032a8:	68 d2 00 00 00       	push   $0xd2$/;"	l
c01032ad	obj/kernel.asm	/^c01032ad:	e9 1c 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01032b2	obj/kernel.asm	/^c01032b2 <vector211>:$/;"	l
c01032b2	obj/kernel.asm	/^c01032b2:	6a 00                	push   $0x0$/;"	l
c01032b4	obj/kernel.asm	/^c01032b4:	68 d3 00 00 00       	push   $0xd3$/;"	l
c01032b9	obj/kernel.asm	/^c01032b9:	e9 10 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01032be	obj/kernel.asm	/^c01032be <vector212>:$/;"	l
c01032be	obj/kernel.asm	/^c01032be:	6a 00                	push   $0x0$/;"	l
c01032c0	obj/kernel.asm	/^c01032c0:	68 d4 00 00 00       	push   $0xd4$/;"	l
c01032c5	obj/kernel.asm	/^c01032c5:	e9 04 02 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01032ca	obj/kernel.asm	/^c01032ca <vector213>:$/;"	l
c01032ca	obj/kernel.asm	/^c01032ca:	6a 00                	push   $0x0$/;"	l
c01032cc	obj/kernel.asm	/^c01032cc:	68 d5 00 00 00       	push   $0xd5$/;"	l
c01032d1	obj/kernel.asm	/^c01032d1:	e9 f8 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01032d6	obj/kernel.asm	/^c01032d6 <vector214>:$/;"	l
c01032d6	obj/kernel.asm	/^c01032d6:	6a 00                	push   $0x0$/;"	l
c01032d8	obj/kernel.asm	/^c01032d8:	68 d6 00 00 00       	push   $0xd6$/;"	l
c01032dd	obj/kernel.asm	/^c01032dd:	e9 ec 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01032e2	obj/kernel.asm	/^c01032e2 <vector215>:$/;"	l
c01032e2	obj/kernel.asm	/^c01032e2:	6a 00                	push   $0x0$/;"	l
c01032e4	obj/kernel.asm	/^c01032e4:	68 d7 00 00 00       	push   $0xd7$/;"	l
c01032e9	obj/kernel.asm	/^c01032e9:	e9 e0 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01032ee	obj/kernel.asm	/^c01032ee <vector216>:$/;"	l
c01032ee	obj/kernel.asm	/^c01032ee:	6a 00                	push   $0x0$/;"	l
c01032f0	obj/kernel.asm	/^c01032f0:	68 d8 00 00 00       	push   $0xd8$/;"	l
c01032f5	obj/kernel.asm	/^c01032f5:	e9 d4 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01032fa	obj/kernel.asm	/^c01032fa <vector217>:$/;"	l
c01032fa	obj/kernel.asm	/^c01032fa:	6a 00                	push   $0x0$/;"	l
c01032fc	obj/kernel.asm	/^c01032fc:	68 d9 00 00 00       	push   $0xd9$/;"	l
c0103301	obj/kernel.asm	/^c0103301:	e9 c8 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103306	obj/kernel.asm	/^c0103306 <vector218>:$/;"	l
c0103306	obj/kernel.asm	/^c0103306:	6a 00                	push   $0x0$/;"	l
c0103308	obj/kernel.asm	/^c0103308:	68 da 00 00 00       	push   $0xda$/;"	l
c010330d	obj/kernel.asm	/^c010330d:	e9 bc 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103312	obj/kernel.asm	/^c0103312 <vector219>:$/;"	l
c0103312	obj/kernel.asm	/^c0103312:	6a 00                	push   $0x0$/;"	l
c0103314	obj/kernel.asm	/^c0103314:	68 db 00 00 00       	push   $0xdb$/;"	l
c0103319	obj/kernel.asm	/^c0103319:	e9 b0 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010331e	obj/kernel.asm	/^c010331e <vector220>:$/;"	l
c010331e	obj/kernel.asm	/^c010331e:	6a 00                	push   $0x0$/;"	l
c0103320	obj/kernel.asm	/^c0103320:	68 dc 00 00 00       	push   $0xdc$/;"	l
c0103325	obj/kernel.asm	/^c0103325:	e9 a4 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010332a	obj/kernel.asm	/^c010332a <vector221>:$/;"	l
c010332a	obj/kernel.asm	/^c010332a:	6a 00                	push   $0x0$/;"	l
c010332c	obj/kernel.asm	/^c010332c:	68 dd 00 00 00       	push   $0xdd$/;"	l
c0103331	obj/kernel.asm	/^c0103331:	e9 98 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103336	obj/kernel.asm	/^c0103336 <vector222>:$/;"	l
c0103336	obj/kernel.asm	/^c0103336:	6a 00                	push   $0x0$/;"	l
c0103338	obj/kernel.asm	/^c0103338:	68 de 00 00 00       	push   $0xde$/;"	l
c010333d	obj/kernel.asm	/^c010333d:	e9 8c 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103342	obj/kernel.asm	/^c0103342 <vector223>:$/;"	l
c0103342	obj/kernel.asm	/^c0103342:	6a 00                	push   $0x0$/;"	l
c0103344	obj/kernel.asm	/^c0103344:	68 df 00 00 00       	push   $0xdf$/;"	l
c0103349	obj/kernel.asm	/^c0103349:	e9 80 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010334e	obj/kernel.asm	/^c010334e <vector224>:$/;"	l
c010334e	obj/kernel.asm	/^c010334e:	6a 00                	push   $0x0$/;"	l
c0103350	obj/kernel.asm	/^c0103350:	68 e0 00 00 00       	push   $0xe0$/;"	l
c0103355	obj/kernel.asm	/^c0103355:	e9 74 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010335a	obj/kernel.asm	/^c010335a <vector225>:$/;"	l
c010335a	obj/kernel.asm	/^c010335a:	6a 00                	push   $0x0$/;"	l
c010335c	obj/kernel.asm	/^c010335c:	68 e1 00 00 00       	push   $0xe1$/;"	l
c0103361	obj/kernel.asm	/^c0103361:	e9 68 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103366	obj/kernel.asm	/^c0103366 <vector226>:$/;"	l
c0103366	obj/kernel.asm	/^c0103366:	6a 00                	push   $0x0$/;"	l
c0103368	obj/kernel.asm	/^c0103368:	68 e2 00 00 00       	push   $0xe2$/;"	l
c010336d	obj/kernel.asm	/^c010336d:	e9 5c 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103372	obj/kernel.asm	/^c0103372 <vector227>:$/;"	l
c0103372	obj/kernel.asm	/^c0103372:	6a 00                	push   $0x0$/;"	l
c0103374	obj/kernel.asm	/^c0103374:	68 e3 00 00 00       	push   $0xe3$/;"	l
c0103379	obj/kernel.asm	/^c0103379:	e9 50 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010337e	obj/kernel.asm	/^c010337e <vector228>:$/;"	l
c010337e	obj/kernel.asm	/^c010337e:	6a 00                	push   $0x0$/;"	l
c0103380	obj/kernel.asm	/^c0103380:	68 e4 00 00 00       	push   $0xe4$/;"	l
c0103385	obj/kernel.asm	/^c0103385:	e9 44 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010338a	obj/kernel.asm	/^c010338a <vector229>:$/;"	l
c010338a	obj/kernel.asm	/^c010338a:	6a 00                	push   $0x0$/;"	l
c010338c	obj/kernel.asm	/^c010338c:	68 e5 00 00 00       	push   $0xe5$/;"	l
c0103391	obj/kernel.asm	/^c0103391:	e9 38 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103396	obj/kernel.asm	/^c0103396 <vector230>:$/;"	l
c0103396	obj/kernel.asm	/^c0103396:	6a 00                	push   $0x0$/;"	l
c0103398	obj/kernel.asm	/^c0103398:	68 e6 00 00 00       	push   $0xe6$/;"	l
c010339d	obj/kernel.asm	/^c010339d:	e9 2c 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01033a2	obj/kernel.asm	/^c01033a2 <vector231>:$/;"	l
c01033a2	obj/kernel.asm	/^c01033a2:	6a 00                	push   $0x0$/;"	l
c01033a4	obj/kernel.asm	/^c01033a4:	68 e7 00 00 00       	push   $0xe7$/;"	l
c01033a9	obj/kernel.asm	/^c01033a9:	e9 20 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01033ae	obj/kernel.asm	/^c01033ae <vector232>:$/;"	l
c01033ae	obj/kernel.asm	/^c01033ae:	6a 00                	push   $0x0$/;"	l
c01033b0	obj/kernel.asm	/^c01033b0:	68 e8 00 00 00       	push   $0xe8$/;"	l
c01033b5	obj/kernel.asm	/^c01033b5:	e9 14 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01033ba	obj/kernel.asm	/^c01033ba <vector233>:$/;"	l
c01033ba	obj/kernel.asm	/^c01033ba:	6a 00                	push   $0x0$/;"	l
c01033bc	obj/kernel.asm	/^c01033bc:	68 e9 00 00 00       	push   $0xe9$/;"	l
c01033c1	obj/kernel.asm	/^c01033c1:	e9 08 01 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01033c6	obj/kernel.asm	/^c01033c6 <vector234>:$/;"	l
c01033c6	obj/kernel.asm	/^c01033c6:	6a 00                	push   $0x0$/;"	l
c01033c8	obj/kernel.asm	/^c01033c8:	68 ea 00 00 00       	push   $0xea$/;"	l
c01033cd	obj/kernel.asm	/^c01033cd:	e9 fc 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01033d2	obj/kernel.asm	/^c01033d2 <vector235>:$/;"	l
c01033d2	obj/kernel.asm	/^c01033d2:	6a 00                	push   $0x0$/;"	l
c01033d4	obj/kernel.asm	/^c01033d4:	68 eb 00 00 00       	push   $0xeb$/;"	l
c01033d9	obj/kernel.asm	/^c01033d9:	e9 f0 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01033de	obj/kernel.asm	/^c01033de <vector236>:$/;"	l
c01033de	obj/kernel.asm	/^c01033de:	6a 00                	push   $0x0$/;"	l
c01033e0	obj/kernel.asm	/^c01033e0:	68 ec 00 00 00       	push   $0xec$/;"	l
c01033e5	obj/kernel.asm	/^c01033e5:	e9 e4 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01033ea	obj/kernel.asm	/^c01033ea <vector237>:$/;"	l
c01033ea	obj/kernel.asm	/^c01033ea:	6a 00                	push   $0x0$/;"	l
c01033ec	obj/kernel.asm	/^c01033ec:	68 ed 00 00 00       	push   $0xed$/;"	l
c01033f1	obj/kernel.asm	/^c01033f1:	e9 d8 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01033f6	obj/kernel.asm	/^c01033f6 <vector238>:$/;"	l
c01033f6	obj/kernel.asm	/^c01033f6:	6a 00                	push   $0x0$/;"	l
c01033f8	obj/kernel.asm	/^c01033f8:	68 ee 00 00 00       	push   $0xee$/;"	l
c01033fd	obj/kernel.asm	/^c01033fd:	e9 cc 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103402	obj/kernel.asm	/^c0103402 <vector239>:$/;"	l
c0103402	obj/kernel.asm	/^c0103402:	6a 00                	push   $0x0$/;"	l
c0103404	obj/kernel.asm	/^c0103404:	68 ef 00 00 00       	push   $0xef$/;"	l
c0103409	obj/kernel.asm	/^c0103409:	e9 c0 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010340e	obj/kernel.asm	/^c010340e <vector240>:$/;"	l
c010340e	obj/kernel.asm	/^c010340e:	6a 00                	push   $0x0$/;"	l
c0103410	obj/kernel.asm	/^c0103410:	68 f0 00 00 00       	push   $0xf0$/;"	l
c0103415	obj/kernel.asm	/^c0103415:	e9 b4 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010341a	obj/kernel.asm	/^c010341a <vector241>:$/;"	l
c010341a	obj/kernel.asm	/^c010341a:	6a 00                	push   $0x0$/;"	l
c010341c	obj/kernel.asm	/^c010341c:	68 f1 00 00 00       	push   $0xf1$/;"	l
c0103421	obj/kernel.asm	/^c0103421:	e9 a8 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103426	obj/kernel.asm	/^c0103426 <vector242>:$/;"	l
c0103426	obj/kernel.asm	/^c0103426:	6a 00                	push   $0x0$/;"	l
c0103428	obj/kernel.asm	/^c0103428:	68 f2 00 00 00       	push   $0xf2$/;"	l
c010342d	obj/kernel.asm	/^c010342d:	e9 9c 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103432	obj/kernel.asm	/^c0103432 <vector243>:$/;"	l
c0103432	obj/kernel.asm	/^c0103432:	6a 00                	push   $0x0$/;"	l
c0103434	obj/kernel.asm	/^c0103434:	68 f3 00 00 00       	push   $0xf3$/;"	l
c0103439	obj/kernel.asm	/^c0103439:	e9 90 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010343e	obj/kernel.asm	/^c010343e <vector244>:$/;"	l
c010343e	obj/kernel.asm	/^c010343e:	6a 00                	push   $0x0$/;"	l
c0103440	obj/kernel.asm	/^c0103440:	68 f4 00 00 00       	push   $0xf4$/;"	l
c0103445	obj/kernel.asm	/^c0103445:	e9 84 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010344a	obj/kernel.asm	/^c010344a <vector245>:$/;"	l
c010344a	obj/kernel.asm	/^c010344a:	6a 00                	push   $0x0$/;"	l
c010344c	obj/kernel.asm	/^c010344c:	68 f5 00 00 00       	push   $0xf5$/;"	l
c0103451	obj/kernel.asm	/^c0103451:	e9 78 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103456	obj/kernel.asm	/^c0103456 <vector246>:$/;"	l
c0103456	obj/kernel.asm	/^c0103456:	6a 00                	push   $0x0$/;"	l
c0103458	obj/kernel.asm	/^c0103458:	68 f6 00 00 00       	push   $0xf6$/;"	l
c010345d	obj/kernel.asm	/^c010345d:	e9 6c 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103462	obj/kernel.asm	/^c0103462 <vector247>:$/;"	l
c0103462	obj/kernel.asm	/^c0103462:	6a 00                	push   $0x0$/;"	l
c0103464	obj/kernel.asm	/^c0103464:	68 f7 00 00 00       	push   $0xf7$/;"	l
c0103469	obj/kernel.asm	/^c0103469:	e9 60 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010346e	obj/kernel.asm	/^c010346e <vector248>:$/;"	l
c010346e	obj/kernel.asm	/^c010346e:	6a 00                	push   $0x0$/;"	l
c0103470	obj/kernel.asm	/^c0103470:	68 f8 00 00 00       	push   $0xf8$/;"	l
c0103475	obj/kernel.asm	/^c0103475:	e9 54 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010347a	obj/kernel.asm	/^c010347a <vector249>:$/;"	l
c010347a	obj/kernel.asm	/^c010347a:	6a 00                	push   $0x0$/;"	l
c010347c	obj/kernel.asm	/^c010347c:	68 f9 00 00 00       	push   $0xf9$/;"	l
c0103481	obj/kernel.asm	/^c0103481:	e9 48 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103486	obj/kernel.asm	/^c0103486 <vector250>:$/;"	l
c0103486	obj/kernel.asm	/^c0103486:	6a 00                	push   $0x0$/;"	l
c0103488	obj/kernel.asm	/^c0103488:	68 fa 00 00 00       	push   $0xfa$/;"	l
c010348d	obj/kernel.asm	/^c010348d:	e9 3c 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c0103492	obj/kernel.asm	/^c0103492 <vector251>:$/;"	l
c0103492	obj/kernel.asm	/^c0103492:	6a 00                	push   $0x0$/;"	l
c0103494	obj/kernel.asm	/^c0103494:	68 fb 00 00 00       	push   $0xfb$/;"	l
c0103499	obj/kernel.asm	/^c0103499:	e9 30 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c010349e	obj/kernel.asm	/^c010349e <vector252>:$/;"	l
c010349e	obj/kernel.asm	/^c010349e:	6a 00                	push   $0x0$/;"	l
c01034a0	obj/kernel.asm	/^c01034a0:	68 fc 00 00 00       	push   $0xfc$/;"	l
c01034a5	obj/kernel.asm	/^c01034a5:	e9 24 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01034aa	obj/kernel.asm	/^c01034aa <vector253>:$/;"	l
c01034aa	obj/kernel.asm	/^c01034aa:	6a 00                	push   $0x0$/;"	l
c01034ac	obj/kernel.asm	/^c01034ac:	68 fd 00 00 00       	push   $0xfd$/;"	l
c01034b1	obj/kernel.asm	/^c01034b1:	e9 18 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01034b6	obj/kernel.asm	/^c01034b6 <vector254>:$/;"	l
c01034b6	obj/kernel.asm	/^c01034b6:	6a 00                	push   $0x0$/;"	l
c01034b8	obj/kernel.asm	/^c01034b8:	68 fe 00 00 00       	push   $0xfe$/;"	l
c01034bd	obj/kernel.asm	/^c01034bd:	e9 0c 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01034c2	obj/kernel.asm	/^c01034c2 <vector255>:$/;"	l
c01034c2	obj/kernel.asm	/^c01034c2:	6a 00                	push   $0x0$/;"	l
c01034c4	obj/kernel.asm	/^c01034c4:	68 ff 00 00 00       	push   $0xff$/;"	l
c01034c9	obj/kernel.asm	/^c01034c9:	e9 00 00 00 00       	jmp    c01034ce <__alltraps>$/;"	l
c01034ce	obj/kernel.asm	/^c01034ce <__alltraps>:$/;"	l
c01034ce	obj/kernel.asm	/^c01034ce:	1e                   	push   %ds$/;"	l
c01034cf	obj/kernel.asm	/^c01034cf:	06                   	push   %es$/;"	l
c01034d0	obj/kernel.asm	/^c01034d0:	0f a0                	push   %fs$/;"	l
c01034d2	obj/kernel.asm	/^c01034d2:	0f a8                	push   %gs$/;"	l
c01034d4	obj/kernel.asm	/^c01034d4:	60                   	pusha  $/;"	l
c01034d5	obj/kernel.asm	/^c01034d5:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c01034da	obj/kernel.asm	/^c01034da:	8e d8                	mov    %eax,%ds$/;"	l
c01034dc	obj/kernel.asm	/^c01034dc:	8e c0                	mov    %eax,%es$/;"	l
c01034de	obj/kernel.asm	/^c01034de:	54                   	push   %esp$/;"	l
c01034df	obj/kernel.asm	/^c01034df:	e8 e6 f4 ff ff       	call   c01029ca <trap>$/;"	l
c01034e4	obj/kernel.asm	/^c01034e4:	5c                   	pop    %esp$/;"	l
c01034e5	obj/kernel.asm	/^c01034e5 <__trapret>:$/;"	l
c01034e5	obj/kernel.asm	/^c01034e5:	61                   	popa   $/;"	l
c01034e6	obj/kernel.asm	/^c01034e6:	0f a9                	pop    %gs$/;"	l
c01034e8	obj/kernel.asm	/^c01034e8:	0f a1                	pop    %fs$/;"	l
c01034ea	obj/kernel.asm	/^c01034ea:	07                   	pop    %es$/;"	l
c01034eb	obj/kernel.asm	/^c01034eb:	1f                   	pop    %ds$/;"	l
c01034ec	obj/kernel.asm	/^c01034ec:	83 c4 08             	add    $0x8,%esp$/;"	l
c01034ef	obj/kernel.asm	/^c01034ef:	cf                   	iret   $/;"	l
c01034f0	obj/kernel.asm	/^c01034f0 <forkrets>:$/;"	l
c01034f0	obj/kernel.asm	/^c01034f0:	8b 64 24 04          	mov    0x4(%esp),%esp$/;"	l
c01034f4	obj/kernel.asm	/^c01034f4:	e9 ec ff ff ff       	jmp    c01034e5 <__trapret>$/;"	l
c01034f9	obj/kernel.asm	/^c01034f9 <page2ppn>:$/;"	l
c01034f9	obj/kernel.asm	/^c01034f9:	55                   	push   %ebp$/;"	l
c01034fa	obj/kernel.asm	/^c01034fa:	89 e5                	mov    %esp,%ebp$/;"	l
c01034fc	obj/kernel.asm	/^c01034fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01034ff	obj/kernel.asm	/^c01034ff:	8b 15 ac 21 15 c0    	mov    0xc01521ac,%edx$/;"	l
c0103505	obj/kernel.asm	/^c0103505:	29 d0                	sub    %edx,%eax$/;"	l
c0103507	obj/kernel.asm	/^c0103507:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c010350a	obj/kernel.asm	/^c010350a:	69 c0 39 8e e3 38    	imul   $0x38e38e39,%eax,%eax$/;"	l
c0103510	obj/kernel.asm	/^c0103510:	5d                   	pop    %ebp$/;"	l
c0103511	obj/kernel.asm	/^c0103511:	c3                   	ret    $/;"	l
c0103512	obj/kernel.asm	/^c0103512 <page2pa>:$/;"	l
c0103512	obj/kernel.asm	/^c0103512:	55                   	push   %ebp$/;"	l
c0103513	obj/kernel.asm	/^c0103513:	89 e5                	mov    %esp,%ebp$/;"	l
c0103515	obj/kernel.asm	/^c0103515:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0103518	obj/kernel.asm	/^c0103518:	e8 dc ff ff ff       	call   c01034f9 <page2ppn>$/;"	l
c010351d	obj/kernel.asm	/^c010351d:	83 c4 04             	add    $0x4,%esp$/;"	l
c0103520	obj/kernel.asm	/^c0103520:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0103523	obj/kernel.asm	/^c0103523:	c9                   	leave  $/;"	l
c0103524	obj/kernel.asm	/^c0103524:	c3                   	ret    $/;"	l
c0103525	obj/kernel.asm	/^c0103525 <pa2page>:$/;"	l
c0103525	obj/kernel.asm	/^c0103525:	55                   	push   %ebp$/;"	l
c0103526	obj/kernel.asm	/^c0103526:	89 e5                	mov    %esp,%ebp$/;"	l
c0103528	obj/kernel.asm	/^c0103528:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010352b	obj/kernel.asm	/^c010352b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010352e	obj/kernel.asm	/^c010352e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0103531	obj/kernel.asm	/^c0103531:	89 c2                	mov    %eax,%edx$/;"	l
c0103533	obj/kernel.asm	/^c0103533:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c0103538	obj/kernel.asm	/^c0103538:	39 c2                	cmp    %eax,%edx$/;"	l
c010353a	obj/kernel.asm	/^c010353a:	72 14                	jb     c0103550 <pa2page+0x2b>$/;"	l
c010353c	obj/kernel.asm	/^c010353c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010353f	obj/kernel.asm	/^c010353f:	68 90 49 11 c0       	push   $0xc0114990$/;"	l
c0103544	obj/kernel.asm	/^c0103544:	6a 5e                	push   $0x5e$/;"	l
c0103546	obj/kernel.asm	/^c0103546:	68 af 49 11 c0       	push   $0xc01149af$/;"	l
c010354b	obj/kernel.asm	/^c010354b:	e8 7f cf ff ff       	call   c01004cf <__panic>$/;"	l
c0103550	obj/kernel.asm	/^c0103550:	8b 0d ac 21 15 c0    	mov    0xc01521ac,%ecx$/;"	l
c0103556	obj/kernel.asm	/^c0103556:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103559	obj/kernel.asm	/^c0103559:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010355c	obj/kernel.asm	/^c010355c:	89 c2                	mov    %eax,%edx$/;"	l
c010355e	obj/kernel.asm	/^c010355e:	89 d0                	mov    %edx,%eax$/;"	l
c0103560	obj/kernel.asm	/^c0103560:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0103563	obj/kernel.asm	/^c0103563:	01 d0                	add    %edx,%eax$/;"	l
c0103565	obj/kernel.asm	/^c0103565:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103568	obj/kernel.asm	/^c0103568:	01 c8                	add    %ecx,%eax$/;"	l
c010356a	obj/kernel.asm	/^c010356a:	c9                   	leave  $/;"	l
c010356b	obj/kernel.asm	/^c010356b:	c3                   	ret    $/;"	l
c010356c	obj/kernel.asm	/^c010356c <page2kva>:$/;"	l
c010356c	obj/kernel.asm	/^c010356c:	55                   	push   %ebp$/;"	l
c010356d	obj/kernel.asm	/^c010356d:	89 e5                	mov    %esp,%ebp$/;"	l
c010356f	obj/kernel.asm	/^c010356f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103572	obj/kernel.asm	/^c0103572:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0103575	obj/kernel.asm	/^c0103575:	e8 98 ff ff ff       	call   c0103512 <page2pa>$/;"	l
c010357a	obj/kernel.asm	/^c010357a:	83 c4 04             	add    $0x4,%esp$/;"	l
c010357d	obj/kernel.asm	/^c010357d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103580	obj/kernel.asm	/^c0103580:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103583	obj/kernel.asm	/^c0103583:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0103586	obj/kernel.asm	/^c0103586:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103589	obj/kernel.asm	/^c0103589:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c010358e	obj/kernel.asm	/^c010358e:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0103591	obj/kernel.asm	/^c0103591:	72 14                	jb     c01035a7 <page2kva+0x3b>$/;"	l
c0103593	obj/kernel.asm	/^c0103593:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0103596	obj/kernel.asm	/^c0103596:	68 c0 49 11 c0       	push   $0xc01149c0$/;"	l
c010359b	obj/kernel.asm	/^c010359b:	6a 65                	push   $0x65$/;"	l
c010359d	obj/kernel.asm	/^c010359d:	68 af 49 11 c0       	push   $0xc01149af$/;"	l
c01035a2	obj/kernel.asm	/^c01035a2:	e8 28 cf ff ff       	call   c01004cf <__panic>$/;"	l
c01035a7	obj/kernel.asm	/^c01035a7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01035aa	obj/kernel.asm	/^c01035aa:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c01035af	obj/kernel.asm	/^c01035af:	c9                   	leave  $/;"	l
c01035b0	obj/kernel.asm	/^c01035b0:	c3                   	ret    $/;"	l
c01035b1	obj/kernel.asm	/^c01035b1 <pte2page>:$/;"	l
c01035b1	obj/kernel.asm	/^c01035b1:	55                   	push   %ebp$/;"	l
c01035b2	obj/kernel.asm	/^c01035b2:	89 e5                	mov    %esp,%ebp$/;"	l
c01035b4	obj/kernel.asm	/^c01035b4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01035b7	obj/kernel.asm	/^c01035b7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01035ba	obj/kernel.asm	/^c01035ba:	83 e0 01             	and    $0x1,%eax$/;"	l
c01035bd	obj/kernel.asm	/^c01035bd:	85 c0                	test   %eax,%eax$/;"	l
c01035bf	obj/kernel.asm	/^c01035bf:	75 14                	jne    c01035d5 <pte2page+0x24>$/;"	l
c01035c1	obj/kernel.asm	/^c01035c1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01035c4	obj/kernel.asm	/^c01035c4:	68 e4 49 11 c0       	push   $0xc01149e4$/;"	l
c01035c9	obj/kernel.asm	/^c01035c9:	6a 70                	push   $0x70$/;"	l
c01035cb	obj/kernel.asm	/^c01035cb:	68 af 49 11 c0       	push   $0xc01149af$/;"	l
c01035d0	obj/kernel.asm	/^c01035d0:	e8 fa ce ff ff       	call   c01004cf <__panic>$/;"	l
c01035d5	obj/kernel.asm	/^c01035d5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01035d8	obj/kernel.asm	/^c01035d8:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01035dd	obj/kernel.asm	/^c01035dd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01035e0	obj/kernel.asm	/^c01035e0:	50                   	push   %eax$/;"	l
c01035e1	obj/kernel.asm	/^c01035e1:	e8 3f ff ff ff       	call   c0103525 <pa2page>$/;"	l
c01035e6	obj/kernel.asm	/^c01035e6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01035e9	obj/kernel.asm	/^c01035e9:	c9                   	leave  $/;"	l
c01035ea	obj/kernel.asm	/^c01035ea:	c3                   	ret    $/;"	l
c01035eb	obj/kernel.asm	/^c01035eb <pde2page>:$/;"	l
c01035eb	obj/kernel.asm	/^c01035eb:	55                   	push   %ebp$/;"	l
c01035ec	obj/kernel.asm	/^c01035ec:	89 e5                	mov    %esp,%ebp$/;"	l
c01035ee	obj/kernel.asm	/^c01035ee:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01035f1	obj/kernel.asm	/^c01035f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01035f4	obj/kernel.asm	/^c01035f4:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01035f9	obj/kernel.asm	/^c01035f9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01035fc	obj/kernel.asm	/^c01035fc:	50                   	push   %eax$/;"	l
c01035fd	obj/kernel.asm	/^c01035fd:	e8 23 ff ff ff       	call   c0103525 <pa2page>$/;"	l
c0103602	obj/kernel.asm	/^c0103602:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103605	obj/kernel.asm	/^c0103605:	c9                   	leave  $/;"	l
c0103606	obj/kernel.asm	/^c0103606:	c3                   	ret    $/;"	l
c0103607	obj/kernel.asm	/^c0103607 <page_ref>:$/;"	l
c0103607	obj/kernel.asm	/^c0103607:	55                   	push   %ebp$/;"	l
c0103608	obj/kernel.asm	/^c0103608:	89 e5                	mov    %esp,%ebp$/;"	l
c010360a	obj/kernel.asm	/^c010360a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010360d	obj/kernel.asm	/^c010360d:	8b 00                	mov    (%eax),%eax$/;"	l
c010360f	obj/kernel.asm	/^c010360f:	5d                   	pop    %ebp$/;"	l
c0103610	obj/kernel.asm	/^c0103610:	c3                   	ret    $/;"	l
c0103611	obj/kernel.asm	/^c0103611 <set_page_ref>:$/;"	l
c0103611	obj/kernel.asm	/^c0103611:	55                   	push   %ebp$/;"	l
c0103612	obj/kernel.asm	/^c0103612:	89 e5                	mov    %esp,%ebp$/;"	l
c0103614	obj/kernel.asm	/^c0103614:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103617	obj/kernel.asm	/^c0103617:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010361a	obj/kernel.asm	/^c010361a:	89 10                	mov    %edx,(%eax)$/;"	l
c010361c	obj/kernel.asm	/^c010361c:	5d                   	pop    %ebp$/;"	l
c010361d	obj/kernel.asm	/^c010361d:	c3                   	ret    $/;"	l
c010361e	obj/kernel.asm	/^c010361e <page_ref_inc>:$/;"	l
c010361e	obj/kernel.asm	/^c010361e:	55                   	push   %ebp$/;"	l
c010361f	obj/kernel.asm	/^c010361f:	89 e5                	mov    %esp,%ebp$/;"	l
c0103621	obj/kernel.asm	/^c0103621:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103624	obj/kernel.asm	/^c0103624:	8b 00                	mov    (%eax),%eax$/;"	l
c0103626	obj/kernel.asm	/^c0103626:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0103629	obj/kernel.asm	/^c0103629:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010362c	obj/kernel.asm	/^c010362c:	89 10                	mov    %edx,(%eax)$/;"	l
c010362e	obj/kernel.asm	/^c010362e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103631	obj/kernel.asm	/^c0103631:	8b 00                	mov    (%eax),%eax$/;"	l
c0103633	obj/kernel.asm	/^c0103633:	5d                   	pop    %ebp$/;"	l
c0103634	obj/kernel.asm	/^c0103634:	c3                   	ret    $/;"	l
c0103635	obj/kernel.asm	/^c0103635 <page_ref_dec>:$/;"	l
c0103635	obj/kernel.asm	/^c0103635:	55                   	push   %ebp$/;"	l
c0103636	obj/kernel.asm	/^c0103636:	89 e5                	mov    %esp,%ebp$/;"	l
c0103638	obj/kernel.asm	/^c0103638:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010363b	obj/kernel.asm	/^c010363b:	8b 00                	mov    (%eax),%eax$/;"	l
c010363d	obj/kernel.asm	/^c010363d:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0103640	obj/kernel.asm	/^c0103640:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103643	obj/kernel.asm	/^c0103643:	89 10                	mov    %edx,(%eax)$/;"	l
c0103645	obj/kernel.asm	/^c0103645:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103648	obj/kernel.asm	/^c0103648:	8b 00                	mov    (%eax),%eax$/;"	l
c010364a	obj/kernel.asm	/^c010364a:	5d                   	pop    %ebp$/;"	l
c010364b	obj/kernel.asm	/^c010364b:	c3                   	ret    $/;"	l
c010364c	obj/kernel.asm	/^c010364c <__intr_save>:$/;"	l
c010364c	obj/kernel.asm	/^c010364c:	55                   	push   %ebp$/;"	l
c010364d	obj/kernel.asm	/^c010364d:	89 e5                	mov    %esp,%ebp$/;"	l
c010364f	obj/kernel.asm	/^c010364f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103652	obj/kernel.asm	/^c0103652:	9c                   	pushf  $/;"	l
c0103653	obj/kernel.asm	/^c0103653:	58                   	pop    %eax$/;"	l
c0103654	obj/kernel.asm	/^c0103654:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103657	obj/kernel.asm	/^c0103657:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010365a	obj/kernel.asm	/^c010365a:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010365f	obj/kernel.asm	/^c010365f:	85 c0                	test   %eax,%eax$/;"	l
c0103661	obj/kernel.asm	/^c0103661:	74 0c                	je     c010366f <__intr_save+0x23>$/;"	l
c0103663	obj/kernel.asm	/^c0103663:	e8 f3 eb ff ff       	call   c010225b <intr_disable>$/;"	l
c0103668	obj/kernel.asm	/^c0103668:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010366d	obj/kernel.asm	/^c010366d:	eb 05                	jmp    c0103674 <__intr_save+0x28>$/;"	l
c010366f	obj/kernel.asm	/^c010366f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0103674	obj/kernel.asm	/^c0103674:	c9                   	leave  $/;"	l
c0103675	obj/kernel.asm	/^c0103675:	c3                   	ret    $/;"	l
c0103676	obj/kernel.asm	/^c0103676 <__intr_restore>:$/;"	l
c0103676	obj/kernel.asm	/^c0103676:	55                   	push   %ebp$/;"	l
c0103677	obj/kernel.asm	/^c0103677:	89 e5                	mov    %esp,%ebp$/;"	l
c0103679	obj/kernel.asm	/^c0103679:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010367c	obj/kernel.asm	/^c010367c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0103680	obj/kernel.asm	/^c0103680:	74 05                	je     c0103687 <__intr_restore+0x11>$/;"	l
c0103682	obj/kernel.asm	/^c0103682:	e8 ce eb ff ff       	call   c0102255 <intr_enable>$/;"	l
c0103687	obj/kernel.asm	/^c0103687:	c9                   	leave  $/;"	l
c0103688	obj/kernel.asm	/^c0103688:	c3                   	ret    $/;"	l
c0103689	obj/kernel.asm	/^c0103689 <lgdt>:$/;"	l
c0103689	obj/kernel.asm	/^c0103689:	55                   	push   %ebp$/;"	l
c010368a	obj/kernel.asm	/^c010368a:	89 e5                	mov    %esp,%ebp$/;"	l
c010368c	obj/kernel.asm	/^c010368c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010368f	obj/kernel.asm	/^c010368f:	0f 01 10             	lgdtl  (%eax)$/;"	l
c0103692	obj/kernel.asm	/^c0103692:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c0103697	obj/kernel.asm	/^c0103697:	8e e8                	mov    %eax,%gs$/;"	l
c0103699	obj/kernel.asm	/^c0103699:	b8 23 00 00 00       	mov    $0x23,%eax$/;"	l
c010369e	obj/kernel.asm	/^c010369e:	8e e0                	mov    %eax,%fs$/;"	l
c01036a0	obj/kernel.asm	/^c01036a0:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c01036a5	obj/kernel.asm	/^c01036a5:	8e c0                	mov    %eax,%es$/;"	l
c01036a7	obj/kernel.asm	/^c01036a7:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c01036ac	obj/kernel.asm	/^c01036ac:	8e d8                	mov    %eax,%ds$/;"	l
c01036ae	obj/kernel.asm	/^c01036ae:	b8 10 00 00 00       	mov    $0x10,%eax$/;"	l
c01036b3	obj/kernel.asm	/^c01036b3:	8e d0                	mov    %eax,%ss$/;"	l
c01036b5	obj/kernel.asm	/^c01036b5:	ea bc 36 10 c0 08 00 	ljmp   $0x8,$0xc01036bc$/;"	l
c01036bc	obj/kernel.asm	/^c01036bc:	5d                   	pop    %ebp$/;"	l
c01036bd	obj/kernel.asm	/^c01036bd:	c3                   	ret    $/;"	l
c01036be	obj/kernel.asm	/^c01036be <load_esp0>:$/;"	l
c01036be	obj/kernel.asm	/^c01036be:	55                   	push   %ebp$/;"	l
c01036bf	obj/kernel.asm	/^c01036bf:	89 e5                	mov    %esp,%ebp$/;"	l
c01036c1	obj/kernel.asm	/^c01036c1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01036c4	obj/kernel.asm	/^c01036c4:	a3 04 f0 14 c0       	mov    %eax,0xc014f004$/;"	l
c01036c9	obj/kernel.asm	/^c01036c9:	5d                   	pop    %ebp$/;"	l
c01036ca	obj/kernel.asm	/^c01036ca:	c3                   	ret    $/;"	l
c01036cb	obj/kernel.asm	/^c01036cb <gdt_init>:$/;"	l
c01036cb	obj/kernel.asm	/^c01036cb:	55                   	push   %ebp$/;"	l
c01036cc	obj/kernel.asm	/^c01036cc:	89 e5                	mov    %esp,%ebp$/;"	l
c01036ce	obj/kernel.asm	/^c01036ce:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01036d1	obj/kernel.asm	/^c01036d1:	b8 00 d0 14 c0       	mov    $0xc014d000,%eax$/;"	l
c01036d6	obj/kernel.asm	/^c01036d6:	50                   	push   %eax$/;"	l
c01036d7	obj/kernel.asm	/^c01036d7:	e8 e2 ff ff ff       	call   c01036be <load_esp0>$/;"	l
c01036dc	obj/kernel.asm	/^c01036dc:	83 c4 04             	add    $0x4,%esp$/;"	l
c01036df	obj/kernel.asm	/^c01036df:	66 c7 05 08 f0 14 c0 	movw   $0x10,0xc014f008$/;"	l
c01036e6	obj/kernel.asm	/^c01036e6:	10 00 $/;"	l
c01036e8	obj/kernel.asm	/^c01036e8:	66 c7 05 88 da 14 c0 	movw   $0x68,0xc014da88$/;"	l
c01036ef	obj/kernel.asm	/^c01036ef:	68 00 $/;"	l
c01036f1	obj/kernel.asm	/^c01036f1:	b8 00 f0 14 c0       	mov    $0xc014f000,%eax$/;"	l
c01036f6	obj/kernel.asm	/^c01036f6:	66 a3 8a da 14 c0    	mov    %ax,0xc014da8a$/;"	l
c01036fc	obj/kernel.asm	/^c01036fc:	b8 00 f0 14 c0       	mov    $0xc014f000,%eax$/;"	l
c0103701	obj/kernel.asm	/^c0103701:	c1 e8 10             	shr    $0x10,%eax$/;"	l
c0103704	obj/kernel.asm	/^c0103704:	a2 8c da 14 c0       	mov    %al,0xc014da8c$/;"	l
c0103709	obj/kernel.asm	/^c0103709:	0f b6 05 8d da 14 c0 	movzbl 0xc014da8d,%eax$/;"	l
c0103710	obj/kernel.asm	/^c0103710:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c0103713	obj/kernel.asm	/^c0103713:	83 c8 09             	or     $0x9,%eax$/;"	l
c0103716	obj/kernel.asm	/^c0103716:	a2 8d da 14 c0       	mov    %al,0xc014da8d$/;"	l
c010371b	obj/kernel.asm	/^c010371b:	0f b6 05 8d da 14 c0 	movzbl 0xc014da8d,%eax$/;"	l
c0103722	obj/kernel.asm	/^c0103722:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c0103725	obj/kernel.asm	/^c0103725:	a2 8d da 14 c0       	mov    %al,0xc014da8d$/;"	l
c010372a	obj/kernel.asm	/^c010372a:	0f b6 05 8d da 14 c0 	movzbl 0xc014da8d,%eax$/;"	l
c0103731	obj/kernel.asm	/^c0103731:	83 e0 9f             	and    $0xffffff9f,%eax$/;"	l
c0103734	obj/kernel.asm	/^c0103734:	a2 8d da 14 c0       	mov    %al,0xc014da8d$/;"	l
c0103739	obj/kernel.asm	/^c0103739:	0f b6 05 8d da 14 c0 	movzbl 0xc014da8d,%eax$/;"	l
c0103740	obj/kernel.asm	/^c0103740:	83 c8 80             	or     $0xffffff80,%eax$/;"	l
c0103743	obj/kernel.asm	/^c0103743:	a2 8d da 14 c0       	mov    %al,0xc014da8d$/;"	l
c0103748	obj/kernel.asm	/^c0103748:	0f b6 05 8e da 14 c0 	movzbl 0xc014da8e,%eax$/;"	l
c010374f	obj/kernel.asm	/^c010374f:	83 e0 f0             	and    $0xfffffff0,%eax$/;"	l
c0103752	obj/kernel.asm	/^c0103752:	a2 8e da 14 c0       	mov    %al,0xc014da8e$/;"	l
c0103757	obj/kernel.asm	/^c0103757:	0f b6 05 8e da 14 c0 	movzbl 0xc014da8e,%eax$/;"	l
c010375e	obj/kernel.asm	/^c010375e:	83 e0 ef             	and    $0xffffffef,%eax$/;"	l
c0103761	obj/kernel.asm	/^c0103761:	a2 8e da 14 c0       	mov    %al,0xc014da8e$/;"	l
c0103766	obj/kernel.asm	/^c0103766:	0f b6 05 8e da 14 c0 	movzbl 0xc014da8e,%eax$/;"	l
c010376d	obj/kernel.asm	/^c010376d:	83 e0 df             	and    $0xffffffdf,%eax$/;"	l
c0103770	obj/kernel.asm	/^c0103770:	a2 8e da 14 c0       	mov    %al,0xc014da8e$/;"	l
c0103775	obj/kernel.asm	/^c0103775:	0f b6 05 8e da 14 c0 	movzbl 0xc014da8e,%eax$/;"	l
c010377c	obj/kernel.asm	/^c010377c:	83 c8 40             	or     $0x40,%eax$/;"	l
c010377f	obj/kernel.asm	/^c010377f:	a2 8e da 14 c0       	mov    %al,0xc014da8e$/;"	l
c0103784	obj/kernel.asm	/^c0103784:	0f b6 05 8e da 14 c0 	movzbl 0xc014da8e,%eax$/;"	l
c010378b	obj/kernel.asm	/^c010378b:	83 e0 7f             	and    $0x7f,%eax$/;"	l
c010378e	obj/kernel.asm	/^c010378e:	a2 8e da 14 c0       	mov    %al,0xc014da8e$/;"	l
c0103793	obj/kernel.asm	/^c0103793:	b8 00 f0 14 c0       	mov    $0xc014f000,%eax$/;"	l
c0103798	obj/kernel.asm	/^c0103798:	c1 e8 18             	shr    $0x18,%eax$/;"	l
c010379b	obj/kernel.asm	/^c010379b:	a2 8f da 14 c0       	mov    %al,0xc014da8f$/;"	l
c01037a0	obj/kernel.asm	/^c01037a0:	68 90 da 14 c0       	push   $0xc014da90$/;"	l
c01037a5	obj/kernel.asm	/^c01037a5:	e8 df fe ff ff       	call   c0103689 <lgdt>$/;"	l
c01037aa	obj/kernel.asm	/^c01037aa:	83 c4 04             	add    $0x4,%esp$/;"	l
c01037ad	obj/kernel.asm	/^c01037ad:	66 c7 45 fe 28 00    	movw   $0x28,-0x2(%ebp)$/;"	l
c01037b3	obj/kernel.asm	/^c01037b3:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax$/;"	l
c01037b7	obj/kernel.asm	/^c01037b7:	0f 00 d8             	ltr    %ax$/;"	l
c01037ba	obj/kernel.asm	/^c01037ba:	c9                   	leave  $/;"	l
c01037bb	obj/kernel.asm	/^c01037bb:	c3                   	ret    $/;"	l
c01037bc	obj/kernel.asm	/^c01037bc <init_pmm_manager>:$/;"	l
c01037bc	obj/kernel.asm	/^c01037bc:	55                   	push   %ebp$/;"	l
c01037bd	obj/kernel.asm	/^c01037bd:	89 e5                	mov    %esp,%ebp$/;"	l
c01037bf	obj/kernel.asm	/^c01037bf:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01037c2	obj/kernel.asm	/^c01037c2:	c7 05 a4 21 15 c0 b0 	movl   $0xc0115fb0,0xc01521a4$/;"	l
c01037c9	obj/kernel.asm	/^c01037c9:	5f 11 c0 $/;"	l
c01037cc	obj/kernel.asm	/^c01037cc:	a1 a4 21 15 c0       	mov    0xc01521a4,%eax$/;"	l
c01037d1	obj/kernel.asm	/^c01037d1:	8b 00                	mov    (%eax),%eax$/;"	l
c01037d3	obj/kernel.asm	/^c01037d3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01037d6	obj/kernel.asm	/^c01037d6:	50                   	push   %eax$/;"	l
c01037d7	obj/kernel.asm	/^c01037d7:	68 10 4a 11 c0       	push   $0xc0114a10$/;"	l
c01037dc	obj/kernel.asm	/^c01037dc:	e8 89 cb ff ff       	call   c010036a <cprintf>$/;"	l
c01037e1	obj/kernel.asm	/^c01037e1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01037e4	obj/kernel.asm	/^c01037e4:	a1 a4 21 15 c0       	mov    0xc01521a4,%eax$/;"	l
c01037e9	obj/kernel.asm	/^c01037e9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01037ec	obj/kernel.asm	/^c01037ec:	ff d0                	call   *%eax$/;"	l
c01037ee	obj/kernel.asm	/^c01037ee:	c9                   	leave  $/;"	l
c01037ef	obj/kernel.asm	/^c01037ef:	c3                   	ret    $/;"	l
c01037f0	obj/kernel.asm	/^c01037f0 <init_memmap>:$/;"	l
c01037f0	obj/kernel.asm	/^c01037f0:	55                   	push   %ebp$/;"	l
c01037f1	obj/kernel.asm	/^c01037f1:	89 e5                	mov    %esp,%ebp$/;"	l
c01037f3	obj/kernel.asm	/^c01037f3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01037f6	obj/kernel.asm	/^c01037f6:	a1 a4 21 15 c0       	mov    0xc01521a4,%eax$/;"	l
c01037fb	obj/kernel.asm	/^c01037fb:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01037fe	obj/kernel.asm	/^c01037fe:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103801	obj/kernel.asm	/^c0103801:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0103804	obj/kernel.asm	/^c0103804:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0103807	obj/kernel.asm	/^c0103807:	ff d0                	call   *%eax$/;"	l
c0103809	obj/kernel.asm	/^c0103809:	83 c4 10             	add    $0x10,%esp$/;"	l
c010380c	obj/kernel.asm	/^c010380c:	c9                   	leave  $/;"	l
c010380d	obj/kernel.asm	/^c010380d:	c3                   	ret    $/;"	l
c010380e	obj/kernel.asm	/^c010380e <alloc_pages>:$/;"	l
c010380e	obj/kernel.asm	/^c010380e:	55                   	push   %ebp$/;"	l
c010380f	obj/kernel.asm	/^c010380f:	89 e5                	mov    %esp,%ebp$/;"	l
c0103811	obj/kernel.asm	/^c0103811:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103814	obj/kernel.asm	/^c0103814:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010381b	obj/kernel.asm	/^c010381b:	e8 2c fe ff ff       	call   c010364c <__intr_save>$/;"	l
c0103820	obj/kernel.asm	/^c0103820:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103823	obj/kernel.asm	/^c0103823:	a1 a4 21 15 c0       	mov    0xc01521a4,%eax$/;"	l
c0103828	obj/kernel.asm	/^c0103828:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010382b	obj/kernel.asm	/^c010382b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010382e	obj/kernel.asm	/^c010382e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0103831	obj/kernel.asm	/^c0103831:	ff d0                	call   *%eax$/;"	l
c0103833	obj/kernel.asm	/^c0103833:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103836	obj/kernel.asm	/^c0103836:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103839	obj/kernel.asm	/^c0103839:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010383c	obj/kernel.asm	/^c010383c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010383f	obj/kernel.asm	/^c010383f:	e8 32 fe ff ff       	call   c0103676 <__intr_restore>$/;"	l
c0103844	obj/kernel.asm	/^c0103844:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103847	obj/kernel.asm	/^c0103847:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010384b	obj/kernel.asm	/^c010384b:	75 28                	jne    c0103875 <alloc_pages+0x67>$/;"	l
c010384d	obj/kernel.asm	/^c010384d:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)$/;"	l
c0103851	obj/kernel.asm	/^c0103851:	77 22                	ja     c0103875 <alloc_pages+0x67>$/;"	l
c0103853	obj/kernel.asm	/^c0103853:	a1 70 f0 14 c0       	mov    0xc014f070,%eax$/;"	l
c0103858	obj/kernel.asm	/^c0103858:	85 c0                	test   %eax,%eax$/;"	l
c010385a	obj/kernel.asm	/^c010385a:	74 19                	je     c0103875 <alloc_pages+0x67>$/;"	l
c010385c	obj/kernel.asm	/^c010385c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010385f	obj/kernel.asm	/^c010385f:	a1 b0 21 15 c0       	mov    0xc01521b0,%eax$/;"	l
c0103864	obj/kernel.asm	/^c0103864:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103867	obj/kernel.asm	/^c0103867:	6a 00                	push   $0x0$/;"	l
c0103869	obj/kernel.asm	/^c0103869:	52                   	push   %edx$/;"	l
c010386a	obj/kernel.asm	/^c010386a:	50                   	push   %eax$/;"	l
c010386b	obj/kernel.asm	/^c010386b:	e8 0a 2c 00 00       	call   c010647a <swap_out>$/;"	l
c0103870	obj/kernel.asm	/^c0103870:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103873	obj/kernel.asm	/^c0103873:	eb a6                	jmp    c010381b <alloc_pages+0xd>$/;"	l
c0103875	obj/kernel.asm	/^c0103875:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103878	obj/kernel.asm	/^c0103878:	c9                   	leave  $/;"	l
c0103879	obj/kernel.asm	/^c0103879:	c3                   	ret    $/;"	l
c010387a	obj/kernel.asm	/^c010387a <free_pages>:$/;"	l
c010387a	obj/kernel.asm	/^c010387a:	55                   	push   %ebp$/;"	l
c010387b	obj/kernel.asm	/^c010387b:	89 e5                	mov    %esp,%ebp$/;"	l
c010387d	obj/kernel.asm	/^c010387d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103880	obj/kernel.asm	/^c0103880:	e8 c7 fd ff ff       	call   c010364c <__intr_save>$/;"	l
c0103885	obj/kernel.asm	/^c0103885:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103888	obj/kernel.asm	/^c0103888:	a1 a4 21 15 c0       	mov    0xc01521a4,%eax$/;"	l
c010388d	obj/kernel.asm	/^c010388d:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0103890	obj/kernel.asm	/^c0103890:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103893	obj/kernel.asm	/^c0103893:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0103896	obj/kernel.asm	/^c0103896:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0103899	obj/kernel.asm	/^c0103899:	ff d0                	call   *%eax$/;"	l
c010389b	obj/kernel.asm	/^c010389b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010389e	obj/kernel.asm	/^c010389e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01038a1	obj/kernel.asm	/^c01038a1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01038a4	obj/kernel.asm	/^c01038a4:	e8 cd fd ff ff       	call   c0103676 <__intr_restore>$/;"	l
c01038a9	obj/kernel.asm	/^c01038a9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01038ac	obj/kernel.asm	/^c01038ac:	c9                   	leave  $/;"	l
c01038ad	obj/kernel.asm	/^c01038ad:	c3                   	ret    $/;"	l
c01038ae	obj/kernel.asm	/^c01038ae <nr_free_pages>:$/;"	l
c01038ae	obj/kernel.asm	/^c01038ae:	55                   	push   %ebp$/;"	l
c01038af	obj/kernel.asm	/^c01038af:	89 e5                	mov    %esp,%ebp$/;"	l
c01038b1	obj/kernel.asm	/^c01038b1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01038b4	obj/kernel.asm	/^c01038b4:	e8 93 fd ff ff       	call   c010364c <__intr_save>$/;"	l
c01038b9	obj/kernel.asm	/^c01038b9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01038bc	obj/kernel.asm	/^c01038bc:	a1 a4 21 15 c0       	mov    0xc01521a4,%eax$/;"	l
c01038c1	obj/kernel.asm	/^c01038c1:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c01038c4	obj/kernel.asm	/^c01038c4:	ff d0                	call   *%eax$/;"	l
c01038c6	obj/kernel.asm	/^c01038c6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01038c9	obj/kernel.asm	/^c01038c9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01038cc	obj/kernel.asm	/^c01038cc:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01038cf	obj/kernel.asm	/^c01038cf:	e8 a2 fd ff ff       	call   c0103676 <__intr_restore>$/;"	l
c01038d4	obj/kernel.asm	/^c01038d4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01038d7	obj/kernel.asm	/^c01038d7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01038da	obj/kernel.asm	/^c01038da:	c9                   	leave  $/;"	l
c01038db	obj/kernel.asm	/^c01038db:	c3                   	ret    $/;"	l
c01038dc	obj/kernel.asm	/^c01038dc <page_init>:$/;"	l
c01038dc	obj/kernel.asm	/^c01038dc:	55                   	push   %ebp$/;"	l
c01038dd	obj/kernel.asm	/^c01038dd:	89 e5                	mov    %esp,%ebp$/;"	l
c01038df	obj/kernel.asm	/^c01038df:	57                   	push   %edi$/;"	l
c01038e0	obj/kernel.asm	/^c01038e0:	56                   	push   %esi$/;"	l
c01038e1	obj/kernel.asm	/^c01038e1:	53                   	push   %ebx$/;"	l
c01038e2	obj/kernel.asm	/^c01038e2:	83 ec 7c             	sub    $0x7c,%esp$/;"	l
c01038e5	obj/kernel.asm	/^c01038e5:	c7 45 c4 00 80 00 c0 	movl   $0xc0008000,-0x3c(%ebp)$/;"	l
c01038ec	obj/kernel.asm	/^c01038ec:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
c01038f3	obj/kernel.asm	/^c01038f3:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c01038fa	obj/kernel.asm	/^c01038fa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01038fd	obj/kernel.asm	/^c01038fd:	68 27 4a 11 c0       	push   $0xc0114a27$/;"	l
c0103902	obj/kernel.asm	/^c0103902:	e8 63 ca ff ff       	call   c010036a <cprintf>$/;"	l
c0103907	obj/kernel.asm	/^c0103907:	83 c4 10             	add    $0x10,%esp$/;"	l
c010390a	obj/kernel.asm	/^c010390a:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0103911	obj/kernel.asm	/^c0103911:	e9 fe 00 00 00       	jmp    c0103a14 <page_init+0x138>$/;"	l
c0103916	obj/kernel.asm	/^c0103916:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103919	obj/kernel.asm	/^c0103919:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010391c	obj/kernel.asm	/^c010391c:	89 d0                	mov    %edx,%eax$/;"	l
c010391e	obj/kernel.asm	/^c010391e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103921	obj/kernel.asm	/^c0103921:	01 d0                	add    %edx,%eax$/;"	l
c0103923	obj/kernel.asm	/^c0103923:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103926	obj/kernel.asm	/^c0103926:	01 c8                	add    %ecx,%eax$/;"	l
c0103928	obj/kernel.asm	/^c0103928:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010392b	obj/kernel.asm	/^c010392b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010392e	obj/kernel.asm	/^c010392e:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0103931	obj/kernel.asm	/^c0103931:	89 55 bc             	mov    %edx,-0x44(%ebp)$/;"	l
c0103934	obj/kernel.asm	/^c0103934:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103937	obj/kernel.asm	/^c0103937:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010393a	obj/kernel.asm	/^c010393a:	89 d0                	mov    %edx,%eax$/;"	l
c010393c	obj/kernel.asm	/^c010393c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010393f	obj/kernel.asm	/^c010393f:	01 d0                	add    %edx,%eax$/;"	l
c0103941	obj/kernel.asm	/^c0103941:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103944	obj/kernel.asm	/^c0103944:	01 c8                	add    %ecx,%eax$/;"	l
c0103946	obj/kernel.asm	/^c0103946:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0103949	obj/kernel.asm	/^c0103949:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c010394c	obj/kernel.asm	/^c010394c:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c010394f	obj/kernel.asm	/^c010394f:	8b 55 bc             	mov    -0x44(%ebp),%edx$/;"	l
c0103952	obj/kernel.asm	/^c0103952:	01 c8                	add    %ecx,%eax$/;"	l
c0103954	obj/kernel.asm	/^c0103954:	11 da                	adc    %ebx,%edx$/;"	l
c0103956	obj/kernel.asm	/^c0103956:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0103959	obj/kernel.asm	/^c0103959:	89 55 b4             	mov    %edx,-0x4c(%ebp)$/;"	l
c010395c	obj/kernel.asm	/^c010395c:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c010395f	obj/kernel.asm	/^c010395f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103962	obj/kernel.asm	/^c0103962:	89 d0                	mov    %edx,%eax$/;"	l
c0103964	obj/kernel.asm	/^c0103964:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103967	obj/kernel.asm	/^c0103967:	01 d0                	add    %edx,%eax$/;"	l
c0103969	obj/kernel.asm	/^c0103969:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010396c	obj/kernel.asm	/^c010396c:	01 c8                	add    %ecx,%eax$/;"	l
c010396e	obj/kernel.asm	/^c010396e:	83 c0 10             	add    $0x10,%eax$/;"	l
c0103971	obj/kernel.asm	/^c0103971:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103974	obj/kernel.asm	/^c0103974:	89 45 84             	mov    %eax,-0x7c(%ebp)$/;"	l
c0103977	obj/kernel.asm	/^c0103977:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010397a	obj/kernel.asm	/^c010397a:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c010397d	obj/kernel.asm	/^c010397d:	83 c0 ff             	add    $0xffffffff,%eax$/;"	l
c0103980	obj/kernel.asm	/^c0103980:	83 d2 ff             	adc    $0xffffffff,%edx$/;"	l
c0103983	obj/kernel.asm	/^c0103983:	89 c1                	mov    %eax,%ecx$/;"	l
c0103985	obj/kernel.asm	/^c0103985:	89 d3                	mov    %edx,%ebx$/;"	l
c0103987	obj/kernel.asm	/^c0103987:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c010398a	obj/kernel.asm	/^c010398a:	89 55 80             	mov    %edx,-0x80(%ebp)$/;"	l
c010398d	obj/kernel.asm	/^c010398d:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103990	obj/kernel.asm	/^c0103990:	89 d0                	mov    %edx,%eax$/;"	l
c0103992	obj/kernel.asm	/^c0103992:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103995	obj/kernel.asm	/^c0103995:	01 d0                	add    %edx,%eax$/;"	l
c0103997	obj/kernel.asm	/^c0103997:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010399a	obj/kernel.asm	/^c010399a:	03 45 80             	add    -0x80(%ebp),%eax$/;"	l
c010399d	obj/kernel.asm	/^c010399d:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c01039a0	obj/kernel.asm	/^c01039a0:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01039a3	obj/kernel.asm	/^c01039a3:	ff 75 84             	pushl  -0x7c(%ebp)$/;"	l
c01039a6	obj/kernel.asm	/^c01039a6:	53                   	push   %ebx$/;"	l
c01039a7	obj/kernel.asm	/^c01039a7:	51                   	push   %ecx$/;"	l
c01039a8	obj/kernel.asm	/^c01039a8:	ff 75 bc             	pushl  -0x44(%ebp)$/;"	l
c01039ab	obj/kernel.asm	/^c01039ab:	ff 75 b8             	pushl  -0x48(%ebp)$/;"	l
c01039ae	obj/kernel.asm	/^c01039ae:	52                   	push   %edx$/;"	l
c01039af	obj/kernel.asm	/^c01039af:	50                   	push   %eax$/;"	l
c01039b0	obj/kernel.asm	/^c01039b0:	68 34 4a 11 c0       	push   $0xc0114a34$/;"	l
c01039b5	obj/kernel.asm	/^c01039b5:	e8 b0 c9 ff ff       	call   c010036a <cprintf>$/;"	l
c01039ba	obj/kernel.asm	/^c01039ba:	83 c4 20             	add    $0x20,%esp$/;"	l
c01039bd	obj/kernel.asm	/^c01039bd:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c01039c0	obj/kernel.asm	/^c01039c0:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01039c3	obj/kernel.asm	/^c01039c3:	89 d0                	mov    %edx,%eax$/;"	l
c01039c5	obj/kernel.asm	/^c01039c5:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01039c8	obj/kernel.asm	/^c01039c8:	01 d0                	add    %edx,%eax$/;"	l
c01039ca	obj/kernel.asm	/^c01039ca:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01039cd	obj/kernel.asm	/^c01039cd:	01 c8                	add    %ecx,%eax$/;"	l
c01039cf	obj/kernel.asm	/^c01039cf:	83 c0 10             	add    $0x10,%eax$/;"	l
c01039d2	obj/kernel.asm	/^c01039d2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01039d5	obj/kernel.asm	/^c01039d5:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01039d8	obj/kernel.asm	/^c01039d8:	75 36                	jne    c0103a10 <page_init+0x134>$/;"	l
c01039da	obj/kernel.asm	/^c01039da:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01039dd	obj/kernel.asm	/^c01039dd:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01039e0	obj/kernel.asm	/^c01039e0:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c01039e3	obj/kernel.asm	/^c01039e3:	77 2b                	ja     c0103a10 <page_init+0x134>$/;"	l
c01039e5	obj/kernel.asm	/^c01039e5:	3b 55 b4             	cmp    -0x4c(%ebp),%edx$/;"	l
c01039e8	obj/kernel.asm	/^c01039e8:	72 05                	jb     c01039ef <page_init+0x113>$/;"	l
c01039ea	obj/kernel.asm	/^c01039ea:	3b 45 b0             	cmp    -0x50(%ebp),%eax$/;"	l
c01039ed	obj/kernel.asm	/^c01039ed:	73 21                	jae    c0103a10 <page_init+0x134>$/;"	l
c01039ef	obj/kernel.asm	/^c01039ef:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c01039f3	obj/kernel.asm	/^c01039f3:	77 1b                	ja     c0103a10 <page_init+0x134>$/;"	l
c01039f5	obj/kernel.asm	/^c01039f5:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c01039f9	obj/kernel.asm	/^c01039f9:	72 09                	jb     c0103a04 <page_init+0x128>$/;"	l
c01039fb	obj/kernel.asm	/^c01039fb:	81 7d b8 ff ff ff 37 	cmpl   $0x37ffffff,-0x48(%ebp)$/;"	l
c0103a02	obj/kernel.asm	/^c0103a02:	77 0c                	ja     c0103a10 <page_init+0x134>$/;"	l
c0103a04	obj/kernel.asm	/^c0103a04:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0103a07	obj/kernel.asm	/^c0103a07:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0103a0a	obj/kernel.asm	/^c0103a0a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0103a0d	obj/kernel.asm	/^c0103a0d:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0103a10	obj/kernel.asm	/^c0103a10:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0103a14	obj/kernel.asm	/^c0103a14:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0103a17	obj/kernel.asm	/^c0103a17:	8b 00                	mov    (%eax),%eax$/;"	l
c0103a19	obj/kernel.asm	/^c0103a19:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c0103a1c	obj/kernel.asm	/^c0103a1c:	0f 8f f4 fe ff ff    	jg     c0103916 <page_init+0x3a>$/;"	l
c0103a22	obj/kernel.asm	/^c0103a22:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0103a26	obj/kernel.asm	/^c0103a26:	72 1d                	jb     c0103a45 <page_init+0x169>$/;"	l
c0103a28	obj/kernel.asm	/^c0103a28:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0103a2c	obj/kernel.asm	/^c0103a2c:	77 09                	ja     c0103a37 <page_init+0x15b>$/;"	l
c0103a2e	obj/kernel.asm	/^c0103a2e:	81 7d e0 00 00 00 38 	cmpl   $0x38000000,-0x20(%ebp)$/;"	l
c0103a35	obj/kernel.asm	/^c0103a35:	76 0e                	jbe    c0103a45 <page_init+0x169>$/;"	l
c0103a37	obj/kernel.asm	/^c0103a37:	c7 45 e0 00 00 00 38 	movl   $0x38000000,-0x20(%ebp)$/;"	l
c0103a3e	obj/kernel.asm	/^c0103a3e:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0103a45	obj/kernel.asm	/^c0103a45:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103a48	obj/kernel.asm	/^c0103a48:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0103a4b	obj/kernel.asm	/^c0103a4b:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c0103a4f	obj/kernel.asm	/^c0103a4f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0103a52	obj/kernel.asm	/^c0103a52:	a3 c0 ef 14 c0       	mov    %eax,0xc014efc0$/;"	l
c0103a57	obj/kernel.asm	/^c0103a57:	c7 45 ac 00 10 00 00 	movl   $0x1000,-0x54(%ebp)$/;"	l
c0103a5e	obj/kernel.asm	/^c0103a5e:	b8 84 23 15 c0       	mov    $0xc0152384,%eax$/;"	l
c0103a63	obj/kernel.asm	/^c0103a63:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0103a66	obj/kernel.asm	/^c0103a66:	8b 45 ac             	mov    -0x54(%ebp),%eax$/;"	l
c0103a69	obj/kernel.asm	/^c0103a69:	01 d0                	add    %edx,%eax$/;"	l
c0103a6b	obj/kernel.asm	/^c0103a6b:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c0103a6e	obj/kernel.asm	/^c0103a6e:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0103a71	obj/kernel.asm	/^c0103a71:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103a76	obj/kernel.asm	/^c0103a76:	f7 75 ac             	divl   -0x54(%ebp)$/;"	l
c0103a79	obj/kernel.asm	/^c0103a79:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0103a7c	obj/kernel.asm	/^c0103a7c:	29 d0                	sub    %edx,%eax$/;"	l
c0103a7e	obj/kernel.asm	/^c0103a7e:	a3 ac 21 15 c0       	mov    %eax,0xc01521ac$/;"	l
c0103a83	obj/kernel.asm	/^c0103a83:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0103a8a	obj/kernel.asm	/^c0103a8a:	eb 2f                	jmp    c0103abb <page_init+0x1df>$/;"	l
c0103a8c	obj/kernel.asm	/^c0103a8c:	8b 0d ac 21 15 c0    	mov    0xc01521ac,%ecx$/;"	l
c0103a92	obj/kernel.asm	/^c0103a92:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103a95	obj/kernel.asm	/^c0103a95:	89 d0                	mov    %edx,%eax$/;"	l
c0103a97	obj/kernel.asm	/^c0103a97:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0103a9a	obj/kernel.asm	/^c0103a9a:	01 d0                	add    %edx,%eax$/;"	l
c0103a9c	obj/kernel.asm	/^c0103a9c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103a9f	obj/kernel.asm	/^c0103a9f:	01 c8                	add    %ecx,%eax$/;"	l
c0103aa1	obj/kernel.asm	/^c0103aa1:	83 c0 04             	add    $0x4,%eax$/;"	l
c0103aa4	obj/kernel.asm	/^c0103aa4:	c7 45 90 00 00 00 00 	movl   $0x0,-0x70(%ebp)$/;"	l
c0103aab	obj/kernel.asm	/^c0103aab:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c0103aae	obj/kernel.asm	/^c0103aae:	8b 45 8c             	mov    -0x74(%ebp),%eax$/;"	l
c0103ab1	obj/kernel.asm	/^c0103ab1:	8b 55 90             	mov    -0x70(%ebp),%edx$/;"	l
c0103ab4	obj/kernel.asm	/^c0103ab4:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0103ab7	obj/kernel.asm	/^c0103ab7:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0103abb	obj/kernel.asm	/^c0103abb:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103abe	obj/kernel.asm	/^c0103abe:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c0103ac3	obj/kernel.asm	/^c0103ac3:	39 c2                	cmp    %eax,%edx$/;"	l
c0103ac5	obj/kernel.asm	/^c0103ac5:	72 c5                	jb     c0103a8c <page_init+0x1b0>$/;"	l
c0103ac7	obj/kernel.asm	/^c0103ac7:	8b 15 c0 ef 14 c0    	mov    0xc014efc0,%edx$/;"	l
c0103acd	obj/kernel.asm	/^c0103acd:	89 d0                	mov    %edx,%eax$/;"	l
c0103acf	obj/kernel.asm	/^c0103acf:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0103ad2	obj/kernel.asm	/^c0103ad2:	01 d0                	add    %edx,%eax$/;"	l
c0103ad4	obj/kernel.asm	/^c0103ad4:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103ad7	obj/kernel.asm	/^c0103ad7:	89 c2                	mov    %eax,%edx$/;"	l
c0103ad9	obj/kernel.asm	/^c0103ad9:	a1 ac 21 15 c0       	mov    0xc01521ac,%eax$/;"	l
c0103ade	obj/kernel.asm	/^c0103ade:	01 d0                	add    %edx,%eax$/;"	l
c0103ae0	obj/kernel.asm	/^c0103ae0:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c0103ae3	obj/kernel.asm	/^c0103ae3:	81 7d a4 ff ff ff bf 	cmpl   $0xbfffffff,-0x5c(%ebp)$/;"	l
c0103aea	obj/kernel.asm	/^c0103aea:	77 17                	ja     c0103b03 <page_init+0x227>$/;"	l
c0103aec	obj/kernel.asm	/^c0103aec:	ff 75 a4             	pushl  -0x5c(%ebp)$/;"	l
c0103aef	obj/kernel.asm	/^c0103aef:	68 64 4a 11 c0       	push   $0xc0114a64$/;"	l
c0103af4	obj/kernel.asm	/^c0103af4:	68 e9 00 00 00       	push   $0xe9$/;"	l
c0103af9	obj/kernel.asm	/^c0103af9:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0103afe	obj/kernel.asm	/^c0103afe:	e8 cc c9 ff ff       	call   c01004cf <__panic>$/;"	l
c0103b03	obj/kernel.asm	/^c0103b03:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0103b06	obj/kernel.asm	/^c0103b06:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0103b0b	obj/kernel.asm	/^c0103b0b:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c0103b0e	obj/kernel.asm	/^c0103b0e:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0103b15	obj/kernel.asm	/^c0103b15:	e9 6a 01 00 00       	jmp    c0103c84 <page_init+0x3a8>$/;"	l
c0103b1a	obj/kernel.asm	/^c0103b1a:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103b1d	obj/kernel.asm	/^c0103b1d:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103b20	obj/kernel.asm	/^c0103b20:	89 d0                	mov    %edx,%eax$/;"	l
c0103b22	obj/kernel.asm	/^c0103b22:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103b25	obj/kernel.asm	/^c0103b25:	01 d0                	add    %edx,%eax$/;"	l
c0103b27	obj/kernel.asm	/^c0103b27:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103b2a	obj/kernel.asm	/^c0103b2a:	01 c8                	add    %ecx,%eax$/;"	l
c0103b2c	obj/kernel.asm	/^c0103b2c:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0103b2f	obj/kernel.asm	/^c0103b2f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103b32	obj/kernel.asm	/^c0103b32:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103b35	obj/kernel.asm	/^c0103b35:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0103b38	obj/kernel.asm	/^c0103b38:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103b3b	obj/kernel.asm	/^c0103b3b:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103b3e	obj/kernel.asm	/^c0103b3e:	89 d0                	mov    %edx,%eax$/;"	l
c0103b40	obj/kernel.asm	/^c0103b40:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103b43	obj/kernel.asm	/^c0103b43:	01 d0                	add    %edx,%eax$/;"	l
c0103b45	obj/kernel.asm	/^c0103b45:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103b48	obj/kernel.asm	/^c0103b48:	01 c8                	add    %ecx,%eax$/;"	l
c0103b4a	obj/kernel.asm	/^c0103b4a:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c0103b4d	obj/kernel.asm	/^c0103b4d:	8b 58 10             	mov    0x10(%eax),%ebx$/;"	l
c0103b50	obj/kernel.asm	/^c0103b50:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103b53	obj/kernel.asm	/^c0103b53:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103b56	obj/kernel.asm	/^c0103b56:	01 c8                	add    %ecx,%eax$/;"	l
c0103b58	obj/kernel.asm	/^c0103b58:	11 da                	adc    %ebx,%edx$/;"	l
c0103b5a	obj/kernel.asm	/^c0103b5a:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0103b5d	obj/kernel.asm	/^c0103b5d:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c0103b60	obj/kernel.asm	/^c0103b60:	8b 4d c4             	mov    -0x3c(%ebp),%ecx$/;"	l
c0103b63	obj/kernel.asm	/^c0103b63:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0103b66	obj/kernel.asm	/^c0103b66:	89 d0                	mov    %edx,%eax$/;"	l
c0103b68	obj/kernel.asm	/^c0103b68:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103b6b	obj/kernel.asm	/^c0103b6b:	01 d0                	add    %edx,%eax$/;"	l
c0103b6d	obj/kernel.asm	/^c0103b6d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0103b70	obj/kernel.asm	/^c0103b70:	01 c8                	add    %ecx,%eax$/;"	l
c0103b72	obj/kernel.asm	/^c0103b72:	83 c0 10             	add    $0x10,%eax$/;"	l
c0103b75	obj/kernel.asm	/^c0103b75:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0103b78	obj/kernel.asm	/^c0103b78:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0103b7b	obj/kernel.asm	/^c0103b7b:	0f 85 ff 00 00 00    	jne    c0103c80 <page_init+0x3a4>$/;"	l
c0103b81	obj/kernel.asm	/^c0103b81:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0103b84	obj/kernel.asm	/^c0103b84:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103b89	obj/kernel.asm	/^c0103b89:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0103b8c	obj/kernel.asm	/^c0103b8c:	72 17                	jb     c0103ba5 <page_init+0x2c9>$/;"	l
c0103b8e	obj/kernel.asm	/^c0103b8e:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c0103b91	obj/kernel.asm	/^c0103b91:	77 05                	ja     c0103b98 <page_init+0x2bc>$/;"	l
c0103b93	obj/kernel.asm	/^c0103b93:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c0103b96	obj/kernel.asm	/^c0103b96:	76 0d                	jbe    c0103ba5 <page_init+0x2c9>$/;"	l
c0103b98	obj/kernel.asm	/^c0103b98:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0103b9b	obj/kernel.asm	/^c0103b9b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103b9e	obj/kernel.asm	/^c0103b9e:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c0103ba5	obj/kernel.asm	/^c0103ba5:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0103ba9	obj/kernel.asm	/^c0103ba9:	72 1d                	jb     c0103bc8 <page_init+0x2ec>$/;"	l
c0103bab	obj/kernel.asm	/^c0103bab:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0103baf	obj/kernel.asm	/^c0103baf:	77 09                	ja     c0103bba <page_init+0x2de>$/;"	l
c0103bb1	obj/kernel.asm	/^c0103bb1:	81 7d c8 00 00 00 38 	cmpl   $0x38000000,-0x38(%ebp)$/;"	l
c0103bb8	obj/kernel.asm	/^c0103bb8:	76 0e                	jbe    c0103bc8 <page_init+0x2ec>$/;"	l
c0103bba	obj/kernel.asm	/^c0103bba:	c7 45 c8 00 00 00 38 	movl   $0x38000000,-0x38(%ebp)$/;"	l
c0103bc1	obj/kernel.asm	/^c0103bc1:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
c0103bc8	obj/kernel.asm	/^c0103bc8:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103bcb	obj/kernel.asm	/^c0103bcb:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103bce	obj/kernel.asm	/^c0103bce:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103bd1	obj/kernel.asm	/^c0103bd1:	0f 87 a9 00 00 00    	ja     c0103c80 <page_init+0x3a4>$/;"	l
c0103bd7	obj/kernel.asm	/^c0103bd7:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103bda	obj/kernel.asm	/^c0103bda:	72 09                	jb     c0103be5 <page_init+0x309>$/;"	l
c0103bdc	obj/kernel.asm	/^c0103bdc:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0103bdf	obj/kernel.asm	/^c0103bdf:	0f 83 9b 00 00 00    	jae    c0103c80 <page_init+0x3a4>$/;"	l
c0103be5	obj/kernel.asm	/^c0103be5:	c7 45 9c 00 10 00 00 	movl   $0x1000,-0x64(%ebp)$/;"	l
c0103bec	obj/kernel.asm	/^c0103bec:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0103bef	obj/kernel.asm	/^c0103bef:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c0103bf2	obj/kernel.asm	/^c0103bf2:	01 d0                	add    %edx,%eax$/;"	l
c0103bf4	obj/kernel.asm	/^c0103bf4:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0103bf7	obj/kernel.asm	/^c0103bf7:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0103bfa	obj/kernel.asm	/^c0103bfa:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0103bfd	obj/kernel.asm	/^c0103bfd:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103c02	obj/kernel.asm	/^c0103c02:	f7 75 9c             	divl   -0x64(%ebp)$/;"	l
c0103c05	obj/kernel.asm	/^c0103c05:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0103c08	obj/kernel.asm	/^c0103c08:	29 d0                	sub    %edx,%eax$/;"	l
c0103c0a	obj/kernel.asm	/^c0103c0a:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103c0f	obj/kernel.asm	/^c0103c0f:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0103c12	obj/kernel.asm	/^c0103c12:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0103c15	obj/kernel.asm	/^c0103c15:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0103c18	obj/kernel.asm	/^c0103c18:	89 45 94             	mov    %eax,-0x6c(%ebp)$/;"	l
c0103c1b	obj/kernel.asm	/^c0103c1b:	8b 45 94             	mov    -0x6c(%ebp),%eax$/;"	l
c0103c1e	obj/kernel.asm	/^c0103c1e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103c23	obj/kernel.asm	/^c0103c23:	89 c3                	mov    %eax,%ebx$/;"	l
c0103c25	obj/kernel.asm	/^c0103c25:	81 e3 00 f0 ff ff    	and    $0xfffff000,%ebx$/;"	l
c0103c2b	obj/kernel.asm	/^c0103c2b:	89 de                	mov    %ebx,%esi$/;"	l
c0103c2d	obj/kernel.asm	/^c0103c2d:	89 d0                	mov    %edx,%eax$/;"	l
c0103c2f	obj/kernel.asm	/^c0103c2f:	83 e0 00             	and    $0x0,%eax$/;"	l
c0103c32	obj/kernel.asm	/^c0103c32:	89 c7                	mov    %eax,%edi$/;"	l
c0103c34	obj/kernel.asm	/^c0103c34:	89 75 c8             	mov    %esi,-0x38(%ebp)$/;"	l
c0103c37	obj/kernel.asm	/^c0103c37:	89 7d cc             	mov    %edi,-0x34(%ebp)$/;"	l
c0103c3a	obj/kernel.asm	/^c0103c3a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103c3d	obj/kernel.asm	/^c0103c3d:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0103c40	obj/kernel.asm	/^c0103c40:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103c43	obj/kernel.asm	/^c0103c43:	77 3b                	ja     c0103c80 <page_init+0x3a4>$/;"	l
c0103c45	obj/kernel.asm	/^c0103c45:	3b 55 cc             	cmp    -0x34(%ebp),%edx$/;"	l
c0103c48	obj/kernel.asm	/^c0103c48:	72 05                	jb     c0103c4f <page_init+0x373>$/;"	l
c0103c4a	obj/kernel.asm	/^c0103c4a:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0103c4d	obj/kernel.asm	/^c0103c4d:	73 31                	jae    c0103c80 <page_init+0x3a4>$/;"	l
c0103c4f	obj/kernel.asm	/^c0103c4f:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0103c52	obj/kernel.asm	/^c0103c52:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0103c55	obj/kernel.asm	/^c0103c55:	2b 45 d0             	sub    -0x30(%ebp),%eax$/;"	l
c0103c58	obj/kernel.asm	/^c0103c58:	1b 55 d4             	sbb    -0x2c(%ebp),%edx$/;"	l
c0103c5b	obj/kernel.asm	/^c0103c5b:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c0103c5f	obj/kernel.asm	/^c0103c5f:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0103c62	obj/kernel.asm	/^c0103c62:	89 c3                	mov    %eax,%ebx$/;"	l
c0103c64	obj/kernel.asm	/^c0103c64:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0103c67	obj/kernel.asm	/^c0103c67:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103c6a	obj/kernel.asm	/^c0103c6a:	50                   	push   %eax$/;"	l
c0103c6b	obj/kernel.asm	/^c0103c6b:	e8 b5 f8 ff ff       	call   c0103525 <pa2page>$/;"	l
c0103c70	obj/kernel.asm	/^c0103c70:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103c73	obj/kernel.asm	/^c0103c73:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103c76	obj/kernel.asm	/^c0103c76:	53                   	push   %ebx$/;"	l
c0103c77	obj/kernel.asm	/^c0103c77:	50                   	push   %eax$/;"	l
c0103c78	obj/kernel.asm	/^c0103c78:	e8 73 fb ff ff       	call   c01037f0 <init_memmap>$/;"	l
c0103c7d	obj/kernel.asm	/^c0103c7d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103c80	obj/kernel.asm	/^c0103c80:	83 45 dc 01          	addl   $0x1,-0x24(%ebp)$/;"	l
c0103c84	obj/kernel.asm	/^c0103c84:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0103c87	obj/kernel.asm	/^c0103c87:	8b 00                	mov    (%eax),%eax$/;"	l
c0103c89	obj/kernel.asm	/^c0103c89:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c0103c8c	obj/kernel.asm	/^c0103c8c:	0f 8f 88 fe ff ff    	jg     c0103b1a <page_init+0x23e>$/;"	l
c0103c92	obj/kernel.asm	/^c0103c92:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
c0103c95	obj/kernel.asm	/^c0103c95:	5b                   	pop    %ebx$/;"	l
c0103c96	obj/kernel.asm	/^c0103c96:	5e                   	pop    %esi$/;"	l
c0103c97	obj/kernel.asm	/^c0103c97:	5f                   	pop    %edi$/;"	l
c0103c98	obj/kernel.asm	/^c0103c98:	5d                   	pop    %ebp$/;"	l
c0103c99	obj/kernel.asm	/^c0103c99:	c3                   	ret    $/;"	l
c0103c9a	obj/kernel.asm	/^c0103c9a <enable_paging>:$/;"	l
c0103c9a	obj/kernel.asm	/^c0103c9a:	55                   	push   %ebp$/;"	l
c0103c9b	obj/kernel.asm	/^c0103c9b:	89 e5                	mov    %esp,%ebp$/;"	l
c0103c9d	obj/kernel.asm	/^c0103c9d:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0103ca0	obj/kernel.asm	/^c0103ca0:	a1 a8 21 15 c0       	mov    0xc01521a8,%eax$/;"	l
c0103ca5	obj/kernel.asm	/^c0103ca5:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0103ca8	obj/kernel.asm	/^c0103ca8:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0103cab	obj/kernel.asm	/^c0103cab:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c0103cae	obj/kernel.asm	/^c0103cae:	0f 20 c0             	mov    %cr0,%eax$/;"	l
c0103cb1	obj/kernel.asm	/^c0103cb1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103cb4	obj/kernel.asm	/^c0103cb4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103cb7	obj/kernel.asm	/^c0103cb7:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0103cba	obj/kernel.asm	/^c0103cba:	81 4d fc 2f 00 05 80 	orl    $0x8005002f,-0x4(%ebp)$/;"	l
c0103cc1	obj/kernel.asm	/^c0103cc1:	83 65 fc f3          	andl   $0xfffffff3,-0x4(%ebp)$/;"	l
c0103cc5	obj/kernel.asm	/^c0103cc5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0103cc8	obj/kernel.asm	/^c0103cc8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103ccb	obj/kernel.asm	/^c0103ccb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103cce	obj/kernel.asm	/^c0103cce:	0f 22 c0             	mov    %eax,%cr0$/;"	l
c0103cd1	obj/kernel.asm	/^c0103cd1:	c9                   	leave  $/;"	l
c0103cd2	obj/kernel.asm	/^c0103cd2:	c3                   	ret    $/;"	l
c0103cd3	obj/kernel.asm	/^c0103cd3 <boot_map_segment>:$/;"	l
c0103cd3	obj/kernel.asm	/^c0103cd3:	55                   	push   %ebp$/;"	l
c0103cd4	obj/kernel.asm	/^c0103cd4:	89 e5                	mov    %esp,%ebp$/;"	l
c0103cd6	obj/kernel.asm	/^c0103cd6:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0103cd9	obj/kernel.asm	/^c0103cd9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103cdc	obj/kernel.asm	/^c0103cdc:	33 45 14             	xor    0x14(%ebp),%eax$/;"	l
c0103cdf	obj/kernel.asm	/^c0103cdf:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0103ce4	obj/kernel.asm	/^c0103ce4:	85 c0                	test   %eax,%eax$/;"	l
c0103ce6	obj/kernel.asm	/^c0103ce6:	74 19                	je     c0103d01 <boot_map_segment+0x2e>$/;"	l
c0103ce8	obj/kernel.asm	/^c0103ce8:	68 96 4a 11 c0       	push   $0xc0114a96$/;"	l
c0103ced	obj/kernel.asm	/^c0103ced:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0103cf2	obj/kernel.asm	/^c0103cf2:	68 12 01 00 00       	push   $0x112$/;"	l
c0103cf7	obj/kernel.asm	/^c0103cf7:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0103cfc	obj/kernel.asm	/^c0103cfc:	e8 ce c7 ff ff       	call   c01004cf <__panic>$/;"	l
c0103d01	obj/kernel.asm	/^c0103d01:	c7 45 f0 00 10 00 00 	movl   $0x1000,-0x10(%ebp)$/;"	l
c0103d08	obj/kernel.asm	/^c0103d08:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103d0b	obj/kernel.asm	/^c0103d0b:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0103d10	obj/kernel.asm	/^c0103d10:	89 c2                	mov    %eax,%edx$/;"	l
c0103d12	obj/kernel.asm	/^c0103d12:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0103d15	obj/kernel.asm	/^c0103d15:	01 c2                	add    %eax,%edx$/;"	l
c0103d17	obj/kernel.asm	/^c0103d17:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103d1a	obj/kernel.asm	/^c0103d1a:	01 d0                	add    %edx,%eax$/;"	l
c0103d1c	obj/kernel.asm	/^c0103d1c:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0103d1f	obj/kernel.asm	/^c0103d1f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103d22	obj/kernel.asm	/^c0103d22:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103d25	obj/kernel.asm	/^c0103d25:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0103d2a	obj/kernel.asm	/^c0103d2a:	f7 75 f0             	divl   -0x10(%ebp)$/;"	l
c0103d2d	obj/kernel.asm	/^c0103d2d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103d30	obj/kernel.asm	/^c0103d30:	29 d0                	sub    %edx,%eax$/;"	l
c0103d32	obj/kernel.asm	/^c0103d32:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0103d35	obj/kernel.asm	/^c0103d35:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103d38	obj/kernel.asm	/^c0103d38:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103d3b	obj/kernel.asm	/^c0103d3b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0103d3e	obj/kernel.asm	/^c0103d3e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0103d41	obj/kernel.asm	/^c0103d41:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0103d46	obj/kernel.asm	/^c0103d46:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c0103d49	obj/kernel.asm	/^c0103d49:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0103d4c	obj/kernel.asm	/^c0103d4c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0103d4f	obj/kernel.asm	/^c0103d4f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0103d52	obj/kernel.asm	/^c0103d52:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0103d57	obj/kernel.asm	/^c0103d57:	89 45 14             	mov    %eax,0x14(%ebp)$/;"	l
c0103d5a	obj/kernel.asm	/^c0103d5a:	eb 57                	jmp    c0103db3 <boot_map_segment+0xe0>$/;"	l
c0103d5c	obj/kernel.asm	/^c0103d5c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103d5f	obj/kernel.asm	/^c0103d5f:	6a 01                	push   $0x1$/;"	l
c0103d61	obj/kernel.asm	/^c0103d61:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0103d64	obj/kernel.asm	/^c0103d64:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0103d67	obj/kernel.asm	/^c0103d67:	e8 9b 01 00 00       	call   c0103f07 <get_pte>$/;"	l
c0103d6c	obj/kernel.asm	/^c0103d6c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103d6f	obj/kernel.asm	/^c0103d6f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0103d72	obj/kernel.asm	/^c0103d72:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0103d76	obj/kernel.asm	/^c0103d76:	75 19                	jne    c0103d91 <boot_map_segment+0xbe>$/;"	l
c0103d78	obj/kernel.asm	/^c0103d78:	68 c2 4a 11 c0       	push   $0xc0114ac2$/;"	l
c0103d7d	obj/kernel.asm	/^c0103d7d:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0103d82	obj/kernel.asm	/^c0103d82:	68 18 01 00 00       	push   $0x118$/;"	l
c0103d87	obj/kernel.asm	/^c0103d87:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0103d8c	obj/kernel.asm	/^c0103d8c:	e8 3e c7 ff ff       	call   c01004cf <__panic>$/;"	l
c0103d91	obj/kernel.asm	/^c0103d91:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0103d94	obj/kernel.asm	/^c0103d94:	0b 45 18             	or     0x18(%ebp),%eax$/;"	l
c0103d97	obj/kernel.asm	/^c0103d97:	83 c8 01             	or     $0x1,%eax$/;"	l
c0103d9a	obj/kernel.asm	/^c0103d9a:	89 c2                	mov    %eax,%edx$/;"	l
c0103d9c	obj/kernel.asm	/^c0103d9c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103d9f	obj/kernel.asm	/^c0103d9f:	89 10                	mov    %edx,(%eax)$/;"	l
c0103da1	obj/kernel.asm	/^c0103da1:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0103da5	obj/kernel.asm	/^c0103da5:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c0103dac	obj/kernel.asm	/^c0103dac:	81 45 14 00 10 00 00 	addl   $0x1000,0x14(%ebp)$/;"	l
c0103db3	obj/kernel.asm	/^c0103db3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103db7	obj/kernel.asm	/^c0103db7:	75 a3                	jne    c0103d5c <boot_map_segment+0x89>$/;"	l
c0103db9	obj/kernel.asm	/^c0103db9:	c9                   	leave  $/;"	l
c0103dba	obj/kernel.asm	/^c0103dba:	c3                   	ret    $/;"	l
c0103dbb	obj/kernel.asm	/^c0103dbb <boot_alloc_page>:$/;"	l
c0103dbb	obj/kernel.asm	/^c0103dbb:	55                   	push   %ebp$/;"	l
c0103dbc	obj/kernel.asm	/^c0103dbc:	89 e5                	mov    %esp,%ebp$/;"	l
c0103dbe	obj/kernel.asm	/^c0103dbe:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103dc1	obj/kernel.asm	/^c0103dc1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103dc4	obj/kernel.asm	/^c0103dc4:	6a 01                	push   $0x1$/;"	l
c0103dc6	obj/kernel.asm	/^c0103dc6:	e8 43 fa ff ff       	call   c010380e <alloc_pages>$/;"	l
c0103dcb	obj/kernel.asm	/^c0103dcb:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103dce	obj/kernel.asm	/^c0103dce:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103dd1	obj/kernel.asm	/^c0103dd1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0103dd5	obj/kernel.asm	/^c0103dd5:	75 17                	jne    c0103dee <boot_alloc_page+0x33>$/;"	l
c0103dd7	obj/kernel.asm	/^c0103dd7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103dda	obj/kernel.asm	/^c0103dda:	68 cf 4a 11 c0       	push   $0xc0114acf$/;"	l
c0103ddf	obj/kernel.asm	/^c0103ddf:	68 24 01 00 00       	push   $0x124$/;"	l
c0103de4	obj/kernel.asm	/^c0103de4:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0103de9	obj/kernel.asm	/^c0103de9:	e8 e1 c6 ff ff       	call   c01004cf <__panic>$/;"	l
c0103dee	obj/kernel.asm	/^c0103dee:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103df1	obj/kernel.asm	/^c0103df1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0103df4	obj/kernel.asm	/^c0103df4:	e8 73 f7 ff ff       	call   c010356c <page2kva>$/;"	l
c0103df9	obj/kernel.asm	/^c0103df9:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103dfc	obj/kernel.asm	/^c0103dfc:	c9                   	leave  $/;"	l
c0103dfd	obj/kernel.asm	/^c0103dfd:	c3                   	ret    $/;"	l
c0103dfe	obj/kernel.asm	/^c0103dfe <pmm_init>:$/;"	l
c0103dfe	obj/kernel.asm	/^c0103dfe:	55                   	push   %ebp$/;"	l
c0103dff	obj/kernel.asm	/^c0103dff:	89 e5                	mov    %esp,%ebp$/;"	l
c0103e01	obj/kernel.asm	/^c0103e01:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0103e04	obj/kernel.asm	/^c0103e04:	e8 b3 f9 ff ff       	call   c01037bc <init_pmm_manager>$/;"	l
c0103e09	obj/kernel.asm	/^c0103e09:	e8 ce fa ff ff       	call   c01038dc <page_init>$/;"	l
c0103e0e	obj/kernel.asm	/^c0103e0e:	e8 5a 08 00 00       	call   c010466d <check_alloc_page>$/;"	l
c0103e13	obj/kernel.asm	/^c0103e13:	e8 a3 ff ff ff       	call   c0103dbb <boot_alloc_page>$/;"	l
c0103e18	obj/kernel.asm	/^c0103e18:	a3 c4 ef 14 c0       	mov    %eax,0xc014efc4$/;"	l
c0103e1d	obj/kernel.asm	/^c0103e1d:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0103e22	obj/kernel.asm	/^c0103e22:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103e25	obj/kernel.asm	/^c0103e25:	68 00 10 00 00       	push   $0x1000$/;"	l
c0103e2a	obj/kernel.asm	/^c0103e2a:	6a 00                	push   $0x0$/;"	l
c0103e2c	obj/kernel.asm	/^c0103e2c:	50                   	push   %eax$/;"	l
c0103e2d	obj/kernel.asm	/^c0103e2d:	e8 5d f9 00 00       	call   c011378f <memset>$/;"	l
c0103e32	obj/kernel.asm	/^c0103e32:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103e35	obj/kernel.asm	/^c0103e35:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0103e3a	obj/kernel.asm	/^c0103e3a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103e3d	obj/kernel.asm	/^c0103e3d:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0103e44	obj/kernel.asm	/^c0103e44:	77 17                	ja     c0103e5d <pmm_init+0x5f>$/;"	l
c0103e46	obj/kernel.asm	/^c0103e46:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0103e49	obj/kernel.asm	/^c0103e49:	68 64 4a 11 c0       	push   $0xc0114a64$/;"	l
c0103e4e	obj/kernel.asm	/^c0103e4e:	68 3e 01 00 00       	push   $0x13e$/;"	l
c0103e53	obj/kernel.asm	/^c0103e53:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0103e58	obj/kernel.asm	/^c0103e58:	e8 72 c6 ff ff       	call   c01004cf <__panic>$/;"	l
c0103e5d	obj/kernel.asm	/^c0103e5d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103e60	obj/kernel.asm	/^c0103e60:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0103e65	obj/kernel.asm	/^c0103e65:	a3 a8 21 15 c0       	mov    %eax,0xc01521a8$/;"	l
c0103e6a	obj/kernel.asm	/^c0103e6a:	e8 20 08 00 00       	call   c010468f <check_pgdir>$/;"	l
c0103e6f	obj/kernel.asm	/^c0103e6f:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0103e74	obj/kernel.asm	/^c0103e74:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c0103e7a	obj/kernel.asm	/^c0103e7a:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0103e7f	obj/kernel.asm	/^c0103e7f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103e82	obj/kernel.asm	/^c0103e82:	81 7d f0 ff ff ff bf 	cmpl   $0xbfffffff,-0x10(%ebp)$/;"	l
c0103e89	obj/kernel.asm	/^c0103e89:	77 17                	ja     c0103ea2 <pmm_init+0xa4>$/;"	l
c0103e8b	obj/kernel.asm	/^c0103e8b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0103e8e	obj/kernel.asm	/^c0103e8e:	68 64 4a 11 c0       	push   $0xc0114a64$/;"	l
c0103e93	obj/kernel.asm	/^c0103e93:	68 46 01 00 00       	push   $0x146$/;"	l
c0103e98	obj/kernel.asm	/^c0103e98:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0103e9d	obj/kernel.asm	/^c0103e9d:	e8 2d c6 ff ff       	call   c01004cf <__panic>$/;"	l
c0103ea2	obj/kernel.asm	/^c0103ea2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0103ea5	obj/kernel.asm	/^c0103ea5:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0103eaa	obj/kernel.asm	/^c0103eaa:	83 c8 03             	or     $0x3,%eax$/;"	l
c0103ead	obj/kernel.asm	/^c0103ead:	89 02                	mov    %eax,(%edx)$/;"	l
c0103eaf	obj/kernel.asm	/^c0103eaf:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0103eb4	obj/kernel.asm	/^c0103eb4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103eb7	obj/kernel.asm	/^c0103eb7:	6a 02                	push   $0x2$/;"	l
c0103eb9	obj/kernel.asm	/^c0103eb9:	6a 00                	push   $0x0$/;"	l
c0103ebb	obj/kernel.asm	/^c0103ebb:	68 00 00 00 38       	push   $0x38000000$/;"	l
c0103ec0	obj/kernel.asm	/^c0103ec0:	68 00 00 00 c0       	push   $0xc0000000$/;"	l
c0103ec5	obj/kernel.asm	/^c0103ec5:	50                   	push   %eax$/;"	l
c0103ec6	obj/kernel.asm	/^c0103ec6:	e8 08 fe ff ff       	call   c0103cd3 <boot_map_segment>$/;"	l
c0103ecb	obj/kernel.asm	/^c0103ecb:	83 c4 20             	add    $0x20,%esp$/;"	l
c0103ece	obj/kernel.asm	/^c0103ece:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0103ed3	obj/kernel.asm	/^c0103ed3:	8b 15 c4 ef 14 c0    	mov    0xc014efc4,%edx$/;"	l
c0103ed9	obj/kernel.asm	/^c0103ed9:	8b 92 00 0c 00 00    	mov    0xc00(%edx),%edx$/;"	l
c0103edf	obj/kernel.asm	/^c0103edf:	89 10                	mov    %edx,(%eax)$/;"	l
c0103ee1	obj/kernel.asm	/^c0103ee1:	e8 b4 fd ff ff       	call   c0103c9a <enable_paging>$/;"	l
c0103ee6	obj/kernel.asm	/^c0103ee6:	e8 e0 f7 ff ff       	call   c01036cb <gdt_init>$/;"	l
c0103eeb	obj/kernel.asm	/^c0103eeb:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0103ef0	obj/kernel.asm	/^c0103ef0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0103ef6	obj/kernel.asm	/^c0103ef6:	e8 f9 0c 00 00       	call   c0104bf4 <check_boot_pgdir>$/;"	l
c0103efb	obj/kernel.asm	/^c0103efb:	e8 f5 10 00 00       	call   c0104ff5 <print_pgdir>$/;"	l
c0103f00	obj/kernel.asm	/^c0103f00:	e8 ad 33 00 00       	call   c01072b2 <kmalloc_init>$/;"	l
c0103f05	obj/kernel.asm	/^c0103f05:	c9                   	leave  $/;"	l
c0103f06	obj/kernel.asm	/^c0103f06:	c3                   	ret    $/;"	l
c0103f07	obj/kernel.asm	/^c0103f07 <get_pte>:$/;"	l
c0103f07	obj/kernel.asm	/^c0103f07:	55                   	push   %ebp$/;"	l
c0103f08	obj/kernel.asm	/^c0103f08:	89 e5                	mov    %esp,%ebp$/;"	l
c0103f0a	obj/kernel.asm	/^c0103f0a:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0103f0d	obj/kernel.asm	/^c0103f0d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0103f10	obj/kernel.asm	/^c0103f10:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0103f13	obj/kernel.asm	/^c0103f13:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0103f1a	obj/kernel.asm	/^c0103f1a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0103f1d	obj/kernel.asm	/^c0103f1d:	01 d0                	add    %edx,%eax$/;"	l
c0103f1f	obj/kernel.asm	/^c0103f1f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0103f22	obj/kernel.asm	/^c0103f22:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103f25	obj/kernel.asm	/^c0103f25:	8b 00                	mov    (%eax),%eax$/;"	l
c0103f27	obj/kernel.asm	/^c0103f27:	83 e0 01             	and    $0x1,%eax$/;"	l
c0103f2a	obj/kernel.asm	/^c0103f2a:	85 c0                	test   %eax,%eax$/;"	l
c0103f2c	obj/kernel.asm	/^c0103f2c:	0f 85 9f 00 00 00    	jne    c0103fd1 <get_pte+0xca>$/;"	l
c0103f32	obj/kernel.asm	/^c0103f32:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0103f36	obj/kernel.asm	/^c0103f36:	74 16                	je     c0103f4e <get_pte+0x47>$/;"	l
c0103f38	obj/kernel.asm	/^c0103f38:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103f3b	obj/kernel.asm	/^c0103f3b:	6a 01                	push   $0x1$/;"	l
c0103f3d	obj/kernel.asm	/^c0103f3d:	e8 cc f8 ff ff       	call   c010380e <alloc_pages>$/;"	l
c0103f42	obj/kernel.asm	/^c0103f42:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103f45	obj/kernel.asm	/^c0103f45:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0103f48	obj/kernel.asm	/^c0103f48:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0103f4c	obj/kernel.asm	/^c0103f4c:	75 0a                	jne    c0103f58 <get_pte+0x51>$/;"	l
c0103f4e	obj/kernel.asm	/^c0103f4e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0103f53	obj/kernel.asm	/^c0103f53:	e9 ca 00 00 00       	jmp    c0104022 <get_pte+0x11b>$/;"	l
c0103f58	obj/kernel.asm	/^c0103f58:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0103f5b	obj/kernel.asm	/^c0103f5b:	6a 01                	push   $0x1$/;"	l
c0103f5d	obj/kernel.asm	/^c0103f5d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0103f60	obj/kernel.asm	/^c0103f60:	e8 ac f6 ff ff       	call   c0103611 <set_page_ref>$/;"	l
c0103f65	obj/kernel.asm	/^c0103f65:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103f68	obj/kernel.asm	/^c0103f68:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0103f6b	obj/kernel.asm	/^c0103f6b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0103f6e	obj/kernel.asm	/^c0103f6e:	e8 9f f5 ff ff       	call   c0103512 <page2pa>$/;"	l
c0103f73	obj/kernel.asm	/^c0103f73:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103f76	obj/kernel.asm	/^c0103f76:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0103f79	obj/kernel.asm	/^c0103f79:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103f7c	obj/kernel.asm	/^c0103f7c:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0103f7f	obj/kernel.asm	/^c0103f7f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0103f82	obj/kernel.asm	/^c0103f82:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0103f85	obj/kernel.asm	/^c0103f85:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0103f88	obj/kernel.asm	/^c0103f88:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c0103f8d	obj/kernel.asm	/^c0103f8d:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c0103f90	obj/kernel.asm	/^c0103f90:	72 17                	jb     c0103fa9 <get_pte+0xa2>$/;"	l
c0103f92	obj/kernel.asm	/^c0103f92:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0103f95	obj/kernel.asm	/^c0103f95:	68 c0 49 11 c0       	push   $0xc01149c0$/;"	l
c0103f9a	obj/kernel.asm	/^c0103f9a:	68 97 01 00 00       	push   $0x197$/;"	l
c0103f9f	obj/kernel.asm	/^c0103f9f:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0103fa4	obj/kernel.asm	/^c0103fa4:	e8 26 c5 ff ff       	call   c01004cf <__panic>$/;"	l
c0103fa9	obj/kernel.asm	/^c0103fa9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0103fac	obj/kernel.asm	/^c0103fac:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0103fb1	obj/kernel.asm	/^c0103fb1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0103fb4	obj/kernel.asm	/^c0103fb4:	68 00 10 00 00       	push   $0x1000$/;"	l
c0103fb9	obj/kernel.asm	/^c0103fb9:	6a 00                	push   $0x0$/;"	l
c0103fbb	obj/kernel.asm	/^c0103fbb:	50                   	push   %eax$/;"	l
c0103fbc	obj/kernel.asm	/^c0103fbc:	e8 ce f7 00 00       	call   c011378f <memset>$/;"	l
c0103fc1	obj/kernel.asm	/^c0103fc1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0103fc4	obj/kernel.asm	/^c0103fc4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0103fc7	obj/kernel.asm	/^c0103fc7:	83 c8 07             	or     $0x7,%eax$/;"	l
c0103fca	obj/kernel.asm	/^c0103fca:	89 c2                	mov    %eax,%edx$/;"	l
c0103fcc	obj/kernel.asm	/^c0103fcc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103fcf	obj/kernel.asm	/^c0103fcf:	89 10                	mov    %edx,(%eax)$/;"	l
c0103fd1	obj/kernel.asm	/^c0103fd1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0103fd4	obj/kernel.asm	/^c0103fd4:	8b 00                	mov    (%eax),%eax$/;"	l
c0103fd6	obj/kernel.asm	/^c0103fd6:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0103fdb	obj/kernel.asm	/^c0103fdb:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0103fde	obj/kernel.asm	/^c0103fde:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0103fe1	obj/kernel.asm	/^c0103fe1:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0103fe4	obj/kernel.asm	/^c0103fe4:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0103fe7	obj/kernel.asm	/^c0103fe7:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c0103fec	obj/kernel.asm	/^c0103fec:	39 45 dc             	cmp    %eax,-0x24(%ebp)$/;"	l
c0103fef	obj/kernel.asm	/^c0103fef:	72 17                	jb     c0104008 <get_pte+0x101>$/;"	l
c0103ff1	obj/kernel.asm	/^c0103ff1:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0103ff4	obj/kernel.asm	/^c0103ff4:	68 c0 49 11 c0       	push   $0xc01149c0$/;"	l
c0103ff9	obj/kernel.asm	/^c0103ff9:	68 9a 01 00 00       	push   $0x19a$/;"	l
c0103ffe	obj/kernel.asm	/^c0103ffe:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104003	obj/kernel.asm	/^c0104003:	e8 c7 c4 ff ff       	call   c01004cf <__panic>$/;"	l
c0104008	obj/kernel.asm	/^c0104008:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010400b	obj/kernel.asm	/^c010400b:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104010	obj/kernel.asm	/^c0104010:	89 c2                	mov    %eax,%edx$/;"	l
c0104012	obj/kernel.asm	/^c0104012:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104015	obj/kernel.asm	/^c0104015:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104018	obj/kernel.asm	/^c0104018:	25 ff 03 00 00       	and    $0x3ff,%eax$/;"	l
c010401d	obj/kernel.asm	/^c010401d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0104020	obj/kernel.asm	/^c0104020:	01 d0                	add    %edx,%eax$/;"	l
c0104022	obj/kernel.asm	/^c0104022:	c9                   	leave  $/;"	l
c0104023	obj/kernel.asm	/^c0104023:	c3                   	ret    $/;"	l
c0104024	obj/kernel.asm	/^c0104024 <get_page>:$/;"	l
c0104024	obj/kernel.asm	/^c0104024:	55                   	push   %ebp$/;"	l
c0104025	obj/kernel.asm	/^c0104025:	89 e5                	mov    %esp,%ebp$/;"	l
c0104027	obj/kernel.asm	/^c0104027:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010402a	obj/kernel.asm	/^c010402a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010402d	obj/kernel.asm	/^c010402d:	6a 00                	push   $0x0$/;"	l
c010402f	obj/kernel.asm	/^c010402f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104032	obj/kernel.asm	/^c0104032:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104035	obj/kernel.asm	/^c0104035:	e8 cd fe ff ff       	call   c0103f07 <get_pte>$/;"	l
c010403a	obj/kernel.asm	/^c010403a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010403d	obj/kernel.asm	/^c010403d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104040	obj/kernel.asm	/^c0104040:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0104044	obj/kernel.asm	/^c0104044:	74 08                	je     c010404e <get_page+0x2a>$/;"	l
c0104046	obj/kernel.asm	/^c0104046:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104049	obj/kernel.asm	/^c0104049:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010404c	obj/kernel.asm	/^c010404c:	89 10                	mov    %edx,(%eax)$/;"	l
c010404e	obj/kernel.asm	/^c010404e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104052	obj/kernel.asm	/^c0104052:	74 1f                	je     c0104073 <get_page+0x4f>$/;"	l
c0104054	obj/kernel.asm	/^c0104054:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104057	obj/kernel.asm	/^c0104057:	8b 00                	mov    (%eax),%eax$/;"	l
c0104059	obj/kernel.asm	/^c0104059:	83 e0 01             	and    $0x1,%eax$/;"	l
c010405c	obj/kernel.asm	/^c010405c:	85 c0                	test   %eax,%eax$/;"	l
c010405e	obj/kernel.asm	/^c010405e:	74 13                	je     c0104073 <get_page+0x4f>$/;"	l
c0104060	obj/kernel.asm	/^c0104060:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104063	obj/kernel.asm	/^c0104063:	8b 00                	mov    (%eax),%eax$/;"	l
c0104065	obj/kernel.asm	/^c0104065:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104068	obj/kernel.asm	/^c0104068:	50                   	push   %eax$/;"	l
c0104069	obj/kernel.asm	/^c0104069:	e8 b7 f4 ff ff       	call   c0103525 <pa2page>$/;"	l
c010406e	obj/kernel.asm	/^c010406e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104071	obj/kernel.asm	/^c0104071:	eb 05                	jmp    c0104078 <get_page+0x54>$/;"	l
c0104073	obj/kernel.asm	/^c0104073:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104078	obj/kernel.asm	/^c0104078:	c9                   	leave  $/;"	l
c0104079	obj/kernel.asm	/^c0104079:	c3                   	ret    $/;"	l
c010407a	obj/kernel.asm	/^c010407a <page_remove_pte>:$/;"	l
c010407a	obj/kernel.asm	/^c010407a:	55                   	push   %ebp$/;"	l
c010407b	obj/kernel.asm	/^c010407b:	89 e5                	mov    %esp,%ebp$/;"	l
c010407d	obj/kernel.asm	/^c010407d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104080	obj/kernel.asm	/^c0104080:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104083	obj/kernel.asm	/^c0104083:	8b 00                	mov    (%eax),%eax$/;"	l
c0104085	obj/kernel.asm	/^c0104085:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104088	obj/kernel.asm	/^c0104088:	85 c0                	test   %eax,%eax$/;"	l
c010408a	obj/kernel.asm	/^c010408a:	74 50                	je     c01040dc <page_remove_pte+0x62>$/;"	l
c010408c	obj/kernel.asm	/^c010408c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010408f	obj/kernel.asm	/^c010408f:	8b 00                	mov    (%eax),%eax$/;"	l
c0104091	obj/kernel.asm	/^c0104091:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104094	obj/kernel.asm	/^c0104094:	50                   	push   %eax$/;"	l
c0104095	obj/kernel.asm	/^c0104095:	e8 17 f5 ff ff       	call   c01035b1 <pte2page>$/;"	l
c010409a	obj/kernel.asm	/^c010409a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010409d	obj/kernel.asm	/^c010409d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01040a0	obj/kernel.asm	/^c01040a0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01040a3	obj/kernel.asm	/^c01040a3:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01040a6	obj/kernel.asm	/^c01040a6:	e8 8a f5 ff ff       	call   c0103635 <page_ref_dec>$/;"	l
c01040ab	obj/kernel.asm	/^c01040ab:	83 c4 10             	add    $0x10,%esp$/;"	l
c01040ae	obj/kernel.asm	/^c01040ae:	85 c0                	test   %eax,%eax$/;"	l
c01040b0	obj/kernel.asm	/^c01040b0:	75 10                	jne    c01040c2 <page_remove_pte+0x48>$/;"	l
c01040b2	obj/kernel.asm	/^c01040b2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01040b5	obj/kernel.asm	/^c01040b5:	6a 01                	push   $0x1$/;"	l
c01040b7	obj/kernel.asm	/^c01040b7:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01040ba	obj/kernel.asm	/^c01040ba:	e8 bb f7 ff ff       	call   c010387a <free_pages>$/;"	l
c01040bf	obj/kernel.asm	/^c01040bf:	83 c4 10             	add    $0x10,%esp$/;"	l
c01040c2	obj/kernel.asm	/^c01040c2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01040c5	obj/kernel.asm	/^c01040c5:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c01040cb	obj/kernel.asm	/^c01040cb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01040ce	obj/kernel.asm	/^c01040ce:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01040d1	obj/kernel.asm	/^c01040d1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01040d4	obj/kernel.asm	/^c01040d4:	e8 94 04 00 00       	call   c010456d <tlb_invalidate>$/;"	l
c01040d9	obj/kernel.asm	/^c01040d9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01040dc	obj/kernel.asm	/^c01040dc:	c9                   	leave  $/;"	l
c01040dd	obj/kernel.asm	/^c01040dd:	c3                   	ret    $/;"	l
c01040de	obj/kernel.asm	/^c01040de <unmap_range>:$/;"	l
c01040de	obj/kernel.asm	/^c01040de:	55                   	push   %ebp$/;"	l
c01040df	obj/kernel.asm	/^c01040df:	89 e5                	mov    %esp,%ebp$/;"	l
c01040e1	obj/kernel.asm	/^c01040e1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01040e4	obj/kernel.asm	/^c01040e4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01040e7	obj/kernel.asm	/^c01040e7:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01040ec	obj/kernel.asm	/^c01040ec:	85 c0                	test   %eax,%eax$/;"	l
c01040ee	obj/kernel.asm	/^c01040ee:	75 0c                	jne    c01040fc <unmap_range+0x1e>$/;"	l
c01040f0	obj/kernel.asm	/^c01040f0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01040f3	obj/kernel.asm	/^c01040f3:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01040f8	obj/kernel.asm	/^c01040f8:	85 c0                	test   %eax,%eax$/;"	l
c01040fa	obj/kernel.asm	/^c01040fa:	74 19                	je     c0104115 <unmap_range+0x37>$/;"	l
c01040fc	obj/kernel.asm	/^c01040fc:	68 e8 4a 11 c0       	push   $0xc0114ae8$/;"	l
c0104101	obj/kernel.asm	/^c0104101:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104106	obj/kernel.asm	/^c0104106:	68 d4 01 00 00       	push   $0x1d4$/;"	l
c010410b	obj/kernel.asm	/^c010410b:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104110	obj/kernel.asm	/^c0104110:	e8 ba c3 ff ff       	call   c01004cf <__panic>$/;"	l
c0104115	obj/kernel.asm	/^c0104115:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c010411c	obj/kernel.asm	/^c010411c:	76 11                	jbe    c010412f <unmap_range+0x51>$/;"	l
c010411e	obj/kernel.asm	/^c010411e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104121	obj/kernel.asm	/^c0104121:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0104124	obj/kernel.asm	/^c0104124:	73 09                	jae    c010412f <unmap_range+0x51>$/;"	l
c0104126	obj/kernel.asm	/^c0104126:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c010412d	obj/kernel.asm	/^c010412d:	76 19                	jbe    c0104148 <unmap_range+0x6a>$/;"	l
c010412f	obj/kernel.asm	/^c010412f:	68 11 4b 11 c0       	push   $0xc0114b11$/;"	l
c0104134	obj/kernel.asm	/^c0104134:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104139	obj/kernel.asm	/^c0104139:	68 d5 01 00 00       	push   $0x1d5$/;"	l
c010413e	obj/kernel.asm	/^c010413e:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104143	obj/kernel.asm	/^c0104143:	e8 87 c3 ff ff       	call   c01004cf <__panic>$/;"	l
c0104148	obj/kernel.asm	/^c0104148:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010414b	obj/kernel.asm	/^c010414b:	6a 00                	push   $0x0$/;"	l
c010414d	obj/kernel.asm	/^c010414d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104150	obj/kernel.asm	/^c0104150:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104153	obj/kernel.asm	/^c0104153:	e8 af fd ff ff       	call   c0103f07 <get_pte>$/;"	l
c0104158	obj/kernel.asm	/^c0104158:	83 c4 10             	add    $0x10,%esp$/;"	l
c010415b	obj/kernel.asm	/^c010415b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010415e	obj/kernel.asm	/^c010415e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104162	obj/kernel.asm	/^c0104162:	75 18                	jne    c010417c <unmap_range+0x9e>$/;"	l
c0104164	obj/kernel.asm	/^c0104164:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0104167	obj/kernel.asm	/^c0104167:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c010416c	obj/kernel.asm	/^c010416c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010416f	obj/kernel.asm	/^c010416f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104172	obj/kernel.asm	/^c0104172:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0104177	obj/kernel.asm	/^c0104177:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c010417a	obj/kernel.asm	/^c010417a:	eb 24                	jmp    c01041a0 <unmap_range+0xc2>$/;"	l
c010417c	obj/kernel.asm	/^c010417c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010417f	obj/kernel.asm	/^c010417f:	8b 00                	mov    (%eax),%eax$/;"	l
c0104181	obj/kernel.asm	/^c0104181:	85 c0                	test   %eax,%eax$/;"	l
c0104183	obj/kernel.asm	/^c0104183:	74 14                	je     c0104199 <unmap_range+0xbb>$/;"	l
c0104185	obj/kernel.asm	/^c0104185:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104188	obj/kernel.asm	/^c0104188:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010418b	obj/kernel.asm	/^c010418b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010418e	obj/kernel.asm	/^c010418e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104191	obj/kernel.asm	/^c0104191:	e8 e4 fe ff ff       	call   c010407a <page_remove_pte>$/;"	l
c0104196	obj/kernel.asm	/^c0104196:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104199	obj/kernel.asm	/^c0104199:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c01041a0	obj/kernel.asm	/^c01041a0:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01041a4	obj/kernel.asm	/^c01041a4:	74 08                	je     c01041ae <unmap_range+0xd0>$/;"	l
c01041a6	obj/kernel.asm	/^c01041a6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01041a9	obj/kernel.asm	/^c01041a9:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c01041ac	obj/kernel.asm	/^c01041ac:	72 9a                	jb     c0104148 <unmap_range+0x6a>$/;"	l
c01041ae	obj/kernel.asm	/^c01041ae:	c9                   	leave  $/;"	l
c01041af	obj/kernel.asm	/^c01041af:	c3                   	ret    $/;"	l
c01041b0	obj/kernel.asm	/^c01041b0 <exit_range>:$/;"	l
c01041b0	obj/kernel.asm	/^c01041b0:	55                   	push   %ebp$/;"	l
c01041b1	obj/kernel.asm	/^c01041b1:	89 e5                	mov    %esp,%ebp$/;"	l
c01041b3	obj/kernel.asm	/^c01041b3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01041b6	obj/kernel.asm	/^c01041b6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01041b9	obj/kernel.asm	/^c01041b9:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01041be	obj/kernel.asm	/^c01041be:	85 c0                	test   %eax,%eax$/;"	l
c01041c0	obj/kernel.asm	/^c01041c0:	75 0c                	jne    c01041ce <exit_range+0x1e>$/;"	l
c01041c2	obj/kernel.asm	/^c01041c2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01041c5	obj/kernel.asm	/^c01041c5:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01041ca	obj/kernel.asm	/^c01041ca:	85 c0                	test   %eax,%eax$/;"	l
c01041cc	obj/kernel.asm	/^c01041cc:	74 19                	je     c01041e7 <exit_range+0x37>$/;"	l
c01041ce	obj/kernel.asm	/^c01041ce:	68 e8 4a 11 c0       	push   $0xc0114ae8$/;"	l
c01041d3	obj/kernel.asm	/^c01041d3:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c01041d8	obj/kernel.asm	/^c01041d8:	68 e6 01 00 00       	push   $0x1e6$/;"	l
c01041dd	obj/kernel.asm	/^c01041dd:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c01041e2	obj/kernel.asm	/^c01041e2:	e8 e8 c2 ff ff       	call   c01004cf <__panic>$/;"	l
c01041e7	obj/kernel.asm	/^c01041e7:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c01041ee	obj/kernel.asm	/^c01041ee:	76 11                	jbe    c0104201 <exit_range+0x51>$/;"	l
c01041f0	obj/kernel.asm	/^c01041f0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01041f3	obj/kernel.asm	/^c01041f3:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c01041f6	obj/kernel.asm	/^c01041f6:	73 09                	jae    c0104201 <exit_range+0x51>$/;"	l
c01041f8	obj/kernel.asm	/^c01041f8:	81 7d 10 00 00 00 b0 	cmpl   $0xb0000000,0x10(%ebp)$/;"	l
c01041ff	obj/kernel.asm	/^c01041ff:	76 19                	jbe    c010421a <exit_range+0x6a>$/;"	l
c0104201	obj/kernel.asm	/^c0104201:	68 11 4b 11 c0       	push   $0xc0114b11$/;"	l
c0104206	obj/kernel.asm	/^c0104206:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c010420b	obj/kernel.asm	/^c010420b:	68 e7 01 00 00       	push   $0x1e7$/;"	l
c0104210	obj/kernel.asm	/^c0104210:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104215	obj/kernel.asm	/^c0104215:	e8 b5 c2 ff ff       	call   c01004cf <__panic>$/;"	l
c010421a	obj/kernel.asm	/^c010421a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010421d	obj/kernel.asm	/^c010421d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104220	obj/kernel.asm	/^c0104220:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104223	obj/kernel.asm	/^c0104223:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c0104228	obj/kernel.asm	/^c0104228:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c010422b	obj/kernel.asm	/^c010422b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010422e	obj/kernel.asm	/^c010422e:	c1 e8 16             	shr    $0x16,%eax$/;"	l
c0104231	obj/kernel.asm	/^c0104231:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104234	obj/kernel.asm	/^c0104234:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104237	obj/kernel.asm	/^c0104237:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010423e	obj/kernel.asm	/^c010423e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104241	obj/kernel.asm	/^c0104241:	01 d0                	add    %edx,%eax$/;"	l
c0104243	obj/kernel.asm	/^c0104243:	8b 00                	mov    (%eax),%eax$/;"	l
c0104245	obj/kernel.asm	/^c0104245:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104248	obj/kernel.asm	/^c0104248:	85 c0                	test   %eax,%eax$/;"	l
c010424a	obj/kernel.asm	/^c010424a:	74 40                	je     c010428c <exit_range+0xdc>$/;"	l
c010424c	obj/kernel.asm	/^c010424c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010424f	obj/kernel.asm	/^c010424f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0104256	obj/kernel.asm	/^c0104256:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104259	obj/kernel.asm	/^c0104259:	01 d0                	add    %edx,%eax$/;"	l
c010425b	obj/kernel.asm	/^c010425b:	8b 00                	mov    (%eax),%eax$/;"	l
c010425d	obj/kernel.asm	/^c010425d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104260	obj/kernel.asm	/^c0104260:	50                   	push   %eax$/;"	l
c0104261	obj/kernel.asm	/^c0104261:	e8 85 f3 ff ff       	call   c01035eb <pde2page>$/;"	l
c0104266	obj/kernel.asm	/^c0104266:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104269	obj/kernel.asm	/^c0104269:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010426c	obj/kernel.asm	/^c010426c:	6a 01                	push   $0x1$/;"	l
c010426e	obj/kernel.asm	/^c010426e:	50                   	push   %eax$/;"	l
c010426f	obj/kernel.asm	/^c010426f:	e8 06 f6 ff ff       	call   c010387a <free_pages>$/;"	l
c0104274	obj/kernel.asm	/^c0104274:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104277	obj/kernel.asm	/^c0104277:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010427a	obj/kernel.asm	/^c010427a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0104281	obj/kernel.asm	/^c0104281:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104284	obj/kernel.asm	/^c0104284:	01 d0                	add    %edx,%eax$/;"	l
c0104286	obj/kernel.asm	/^c0104286:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010428c	obj/kernel.asm	/^c010428c:	81 45 0c 00 00 40 00 	addl   $0x400000,0xc(%ebp)$/;"	l
c0104293	obj/kernel.asm	/^c0104293:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0104297	obj/kernel.asm	/^c0104297:	74 08                	je     c01042a1 <exit_range+0xf1>$/;"	l
c0104299	obj/kernel.asm	/^c0104299:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010429c	obj/kernel.asm	/^c010429c:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010429f	obj/kernel.asm	/^c010429f:	72 8a                	jb     c010422b <exit_range+0x7b>$/;"	l
c01042a1	obj/kernel.asm	/^c01042a1:	c9                   	leave  $/;"	l
c01042a2	obj/kernel.asm	/^c01042a2:	c3                   	ret    $/;"	l
c01042a3	obj/kernel.asm	/^c01042a3 <copy_range>:$/;"	l
c01042a3	obj/kernel.asm	/^c01042a3:	55                   	push   %ebp$/;"	l
c01042a4	obj/kernel.asm	/^c01042a4:	89 e5                	mov    %esp,%ebp$/;"	l
c01042a6	obj/kernel.asm	/^c01042a6:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01042a9	obj/kernel.asm	/^c01042a9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01042ac	obj/kernel.asm	/^c01042ac:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01042b1	obj/kernel.asm	/^c01042b1:	85 c0                	test   %eax,%eax$/;"	l
c01042b3	obj/kernel.asm	/^c01042b3:	75 0c                	jne    c01042c1 <copy_range+0x1e>$/;"	l
c01042b5	obj/kernel.asm	/^c01042b5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01042b8	obj/kernel.asm	/^c01042b8:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01042bd	obj/kernel.asm	/^c01042bd:	85 c0                	test   %eax,%eax$/;"	l
c01042bf	obj/kernel.asm	/^c01042bf:	74 19                	je     c01042da <copy_range+0x37>$/;"	l
c01042c1	obj/kernel.asm	/^c01042c1:	68 e8 4a 11 c0       	push   $0xc0114ae8$/;"	l
c01042c6	obj/kernel.asm	/^c01042c6:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c01042cb	obj/kernel.asm	/^c01042cb:	68 fc 01 00 00       	push   $0x1fc$/;"	l
c01042d0	obj/kernel.asm	/^c01042d0:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c01042d5	obj/kernel.asm	/^c01042d5:	e8 f5 c1 ff ff       	call   c01004cf <__panic>$/;"	l
c01042da	obj/kernel.asm	/^c01042da:	81 7d 10 ff ff 1f 00 	cmpl   $0x1fffff,0x10(%ebp)$/;"	l
c01042e1	obj/kernel.asm	/^c01042e1:	76 11                	jbe    c01042f4 <copy_range+0x51>$/;"	l
c01042e3	obj/kernel.asm	/^c01042e3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01042e6	obj/kernel.asm	/^c01042e6:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c01042e9	obj/kernel.asm	/^c01042e9:	73 09                	jae    c01042f4 <copy_range+0x51>$/;"	l
c01042eb	obj/kernel.asm	/^c01042eb:	81 7d 14 00 00 00 b0 	cmpl   $0xb0000000,0x14(%ebp)$/;"	l
c01042f2	obj/kernel.asm	/^c01042f2:	76 19                	jbe    c010430d <copy_range+0x6a>$/;"	l
c01042f4	obj/kernel.asm	/^c01042f4:	68 11 4b 11 c0       	push   $0xc0114b11$/;"	l
c01042f9	obj/kernel.asm	/^c01042f9:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c01042fe	obj/kernel.asm	/^c01042fe:	68 fd 01 00 00       	push   $0x1fd$/;"	l
c0104303	obj/kernel.asm	/^c0104303:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104308	obj/kernel.asm	/^c0104308:	e8 c2 c1 ff ff       	call   c01004cf <__panic>$/;"	l
c010430d	obj/kernel.asm	/^c010430d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104310	obj/kernel.asm	/^c0104310:	6a 00                	push   $0x0$/;"	l
c0104312	obj/kernel.asm	/^c0104312:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0104315	obj/kernel.asm	/^c0104315:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104318	obj/kernel.asm	/^c0104318:	e8 ea fb ff ff       	call   c0103f07 <get_pte>$/;"	l
c010431d	obj/kernel.asm	/^c010431d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104320	obj/kernel.asm	/^c0104320:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104323	obj/kernel.asm	/^c0104323:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0104327	obj/kernel.asm	/^c0104327:	75 1b                	jne    c0104344 <copy_range+0xa1>$/;"	l
c0104329	obj/kernel.asm	/^c0104329:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010432c	obj/kernel.asm	/^c010432c:	05 00 00 40 00       	add    $0x400000,%eax$/;"	l
c0104331	obj/kernel.asm	/^c0104331:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104334	obj/kernel.asm	/^c0104334:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104337	obj/kernel.asm	/^c0104337:	25 00 00 c0 ff       	and    $0xffc00000,%eax$/;"	l
c010433c	obj/kernel.asm	/^c010433c:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c010433f	obj/kernel.asm	/^c010433f:	e9 1f 01 00 00       	jmp    c0104463 <copy_range+0x1c0>$/;"	l
c0104344	obj/kernel.asm	/^c0104344:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104347	obj/kernel.asm	/^c0104347:	8b 00                	mov    (%eax),%eax$/;"	l
c0104349	obj/kernel.asm	/^c0104349:	83 e0 01             	and    $0x1,%eax$/;"	l
c010434c	obj/kernel.asm	/^c010434c:	85 c0                	test   %eax,%eax$/;"	l
c010434e	obj/kernel.asm	/^c010434e:	0f 84 08 01 00 00    	je     c010445c <copy_range+0x1b9>$/;"	l
c0104354	obj/kernel.asm	/^c0104354:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104357	obj/kernel.asm	/^c0104357:	6a 01                	push   $0x1$/;"	l
c0104359	obj/kernel.asm	/^c0104359:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010435c	obj/kernel.asm	/^c010435c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010435f	obj/kernel.asm	/^c010435f:	e8 a3 fb ff ff       	call   c0103f07 <get_pte>$/;"	l
c0104364	obj/kernel.asm	/^c0104364:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104367	obj/kernel.asm	/^c0104367:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010436a	obj/kernel.asm	/^c010436a:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010436e	obj/kernel.asm	/^c010436e:	75 0a                	jne    c010437a <copy_range+0xd7>$/;"	l
c0104370	obj/kernel.asm	/^c0104370:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0104375	obj/kernel.asm	/^c0104375:	e9 00 01 00 00       	jmp    c010447a <copy_range+0x1d7>$/;"	l
c010437a	obj/kernel.asm	/^c010437a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010437d	obj/kernel.asm	/^c010437d:	8b 00                	mov    (%eax),%eax$/;"	l
c010437f	obj/kernel.asm	/^c010437f:	83 e0 07             	and    $0x7,%eax$/;"	l
c0104382	obj/kernel.asm	/^c0104382:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104385	obj/kernel.asm	/^c0104385:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104388	obj/kernel.asm	/^c0104388:	8b 00                	mov    (%eax),%eax$/;"	l
c010438a	obj/kernel.asm	/^c010438a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010438d	obj/kernel.asm	/^c010438d:	50                   	push   %eax$/;"	l
c010438e	obj/kernel.asm	/^c010438e:	e8 1e f2 ff ff       	call   c01035b1 <pte2page>$/;"	l
c0104393	obj/kernel.asm	/^c0104393:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104396	obj/kernel.asm	/^c0104396:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104399	obj/kernel.asm	/^c0104399:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010439c	obj/kernel.asm	/^c010439c:	6a 01                	push   $0x1$/;"	l
c010439e	obj/kernel.asm	/^c010439e:	e8 6b f4 ff ff       	call   c010380e <alloc_pages>$/;"	l
c01043a3	obj/kernel.asm	/^c01043a3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01043a6	obj/kernel.asm	/^c01043a6:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01043a9	obj/kernel.asm	/^c01043a9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01043ad	obj/kernel.asm	/^c01043ad:	75 19                	jne    c01043c8 <copy_range+0x125>$/;"	l
c01043af	obj/kernel.asm	/^c01043af:	68 29 4b 11 c0       	push   $0xc0114b29$/;"	l
c01043b4	obj/kernel.asm	/^c01043b4:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c01043b9	obj/kernel.asm	/^c01043b9:	68 10 02 00 00       	push   $0x210$/;"	l
c01043be	obj/kernel.asm	/^c01043be:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c01043c3	obj/kernel.asm	/^c01043c3:	e8 07 c1 ff ff       	call   c01004cf <__panic>$/;"	l
c01043c8	obj/kernel.asm	/^c01043c8:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01043cc	obj/kernel.asm	/^c01043cc:	75 19                	jne    c01043e7 <copy_range+0x144>$/;"	l
c01043ce	obj/kernel.asm	/^c01043ce:	68 34 4b 11 c0       	push   $0xc0114b34$/;"	l
c01043d3	obj/kernel.asm	/^c01043d3:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c01043d8	obj/kernel.asm	/^c01043d8:	68 11 02 00 00       	push   $0x211$/;"	l
c01043dd	obj/kernel.asm	/^c01043dd:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c01043e2	obj/kernel.asm	/^c01043e2:	e8 e8 c0 ff ff       	call   c01004cf <__panic>$/;"	l
c01043e7	obj/kernel.asm	/^c01043e7:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c01043ee	obj/kernel.asm	/^c01043ee:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01043f1	obj/kernel.asm	/^c01043f1:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01043f4	obj/kernel.asm	/^c01043f4:	e8 73 f1 ff ff       	call   c010356c <page2kva>$/;"	l
c01043f9	obj/kernel.asm	/^c01043f9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01043fc	obj/kernel.asm	/^c01043fc:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01043ff	obj/kernel.asm	/^c01043ff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104402	obj/kernel.asm	/^c0104402:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104405	obj/kernel.asm	/^c0104405:	e8 62 f1 ff ff       	call   c010356c <page2kva>$/;"	l
c010440a	obj/kernel.asm	/^c010440a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010440d	obj/kernel.asm	/^c010440d:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0104410	obj/kernel.asm	/^c0104410:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104413	obj/kernel.asm	/^c0104413:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104418	obj/kernel.asm	/^c0104418:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c010441b	obj/kernel.asm	/^c010441b:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
c010441e	obj/kernel.asm	/^c010441e:	e8 4f f4 00 00       	call   c0113872 <memcpy>$/;"	l
c0104423	obj/kernel.asm	/^c0104423:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104426	obj/kernel.asm	/^c0104426:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0104429	obj/kernel.asm	/^c0104429:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010442c	obj/kernel.asm	/^c010442c:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010442f	obj/kernel.asm	/^c010442f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104432	obj/kernel.asm	/^c0104432:	e8 7d 00 00 00       	call   c01044b4 <page_insert>$/;"	l
c0104437	obj/kernel.asm	/^c0104437:	83 c4 10             	add    $0x10,%esp$/;"	l
c010443a	obj/kernel.asm	/^c010443a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010443d	obj/kernel.asm	/^c010443d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0104441	obj/kernel.asm	/^c0104441:	74 19                	je     c010445c <copy_range+0x1b9>$/;"	l
c0104443	obj/kernel.asm	/^c0104443:	68 40 4b 11 c0       	push   $0xc0114b40$/;"	l
c0104448	obj/kernel.asm	/^c0104448:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c010444d	obj/kernel.asm	/^c010444d:	68 27 02 00 00       	push   $0x227$/;"	l
c0104452	obj/kernel.asm	/^c0104452:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104457	obj/kernel.asm	/^c0104457:	e8 73 c0 ff ff       	call   c01004cf <__panic>$/;"	l
c010445c	obj/kernel.asm	/^c010445c:	81 45 10 00 10 00 00 	addl   $0x1000,0x10(%ebp)$/;"	l
c0104463	obj/kernel.asm	/^c0104463:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0104467	obj/kernel.asm	/^c0104467:	74 0c                	je     c0104475 <copy_range+0x1d2>$/;"	l
c0104469	obj/kernel.asm	/^c0104469:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010446c	obj/kernel.asm	/^c010446c:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c010446f	obj/kernel.asm	/^c010446f:	0f 82 98 fe ff ff    	jb     c010430d <copy_range+0x6a>$/;"	l
c0104475	obj/kernel.asm	/^c0104475:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010447a	obj/kernel.asm	/^c010447a:	c9                   	leave  $/;"	l
c010447b	obj/kernel.asm	/^c010447b:	c3                   	ret    $/;"	l
c010447c	obj/kernel.asm	/^c010447c <page_remove>:$/;"	l
c010447c	obj/kernel.asm	/^c010447c:	55                   	push   %ebp$/;"	l
c010447d	obj/kernel.asm	/^c010447d:	89 e5                	mov    %esp,%ebp$/;"	l
c010447f	obj/kernel.asm	/^c010447f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104482	obj/kernel.asm	/^c0104482:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104485	obj/kernel.asm	/^c0104485:	6a 00                	push   $0x0$/;"	l
c0104487	obj/kernel.asm	/^c0104487:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010448a	obj/kernel.asm	/^c010448a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010448d	obj/kernel.asm	/^c010448d:	e8 75 fa ff ff       	call   c0103f07 <get_pte>$/;"	l
c0104492	obj/kernel.asm	/^c0104492:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104495	obj/kernel.asm	/^c0104495:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104498	obj/kernel.asm	/^c0104498:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010449c	obj/kernel.asm	/^c010449c:	74 14                	je     c01044b2 <page_remove+0x36>$/;"	l
c010449e	obj/kernel.asm	/^c010449e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01044a1	obj/kernel.asm	/^c01044a1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01044a4	obj/kernel.asm	/^c01044a4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01044a7	obj/kernel.asm	/^c01044a7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01044aa	obj/kernel.asm	/^c01044aa:	e8 cb fb ff ff       	call   c010407a <page_remove_pte>$/;"	l
c01044af	obj/kernel.asm	/^c01044af:	83 c4 10             	add    $0x10,%esp$/;"	l
c01044b2	obj/kernel.asm	/^c01044b2:	c9                   	leave  $/;"	l
c01044b3	obj/kernel.asm	/^c01044b3:	c3                   	ret    $/;"	l
c01044b4	obj/kernel.asm	/^c01044b4 <page_insert>:$/;"	l
c01044b4	obj/kernel.asm	/^c01044b4:	55                   	push   %ebp$/;"	l
c01044b5	obj/kernel.asm	/^c01044b5:	89 e5                	mov    %esp,%ebp$/;"	l
c01044b7	obj/kernel.asm	/^c01044b7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01044ba	obj/kernel.asm	/^c01044ba:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01044bd	obj/kernel.asm	/^c01044bd:	6a 01                	push   $0x1$/;"	l
c01044bf	obj/kernel.asm	/^c01044bf:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01044c2	obj/kernel.asm	/^c01044c2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01044c5	obj/kernel.asm	/^c01044c5:	e8 3d fa ff ff       	call   c0103f07 <get_pte>$/;"	l
c01044ca	obj/kernel.asm	/^c01044ca:	83 c4 10             	add    $0x10,%esp$/;"	l
c01044cd	obj/kernel.asm	/^c01044cd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01044d0	obj/kernel.asm	/^c01044d0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01044d4	obj/kernel.asm	/^c01044d4:	75 0a                	jne    c01044e0 <page_insert+0x2c>$/;"	l
c01044d6	obj/kernel.asm	/^c01044d6:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01044db	obj/kernel.asm	/^c01044db:	e9 8b 00 00 00       	jmp    c010456b <page_insert+0xb7>$/;"	l
c01044e0	obj/kernel.asm	/^c01044e0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01044e3	obj/kernel.asm	/^c01044e3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01044e6	obj/kernel.asm	/^c01044e6:	e8 33 f1 ff ff       	call   c010361e <page_ref_inc>$/;"	l
c01044eb	obj/kernel.asm	/^c01044eb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01044ee	obj/kernel.asm	/^c01044ee:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01044f1	obj/kernel.asm	/^c01044f1:	8b 00                	mov    (%eax),%eax$/;"	l
c01044f3	obj/kernel.asm	/^c01044f3:	83 e0 01             	and    $0x1,%eax$/;"	l
c01044f6	obj/kernel.asm	/^c01044f6:	85 c0                	test   %eax,%eax$/;"	l
c01044f8	obj/kernel.asm	/^c01044f8:	74 40                	je     c010453a <page_insert+0x86>$/;"	l
c01044fa	obj/kernel.asm	/^c01044fa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01044fd	obj/kernel.asm	/^c01044fd:	8b 00                	mov    (%eax),%eax$/;"	l
c01044ff	obj/kernel.asm	/^c01044ff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104502	obj/kernel.asm	/^c0104502:	50                   	push   %eax$/;"	l
c0104503	obj/kernel.asm	/^c0104503:	e8 a9 f0 ff ff       	call   c01035b1 <pte2page>$/;"	l
c0104508	obj/kernel.asm	/^c0104508:	83 c4 10             	add    $0x10,%esp$/;"	l
c010450b	obj/kernel.asm	/^c010450b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010450e	obj/kernel.asm	/^c010450e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104511	obj/kernel.asm	/^c0104511:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0104514	obj/kernel.asm	/^c0104514:	75 10                	jne    c0104526 <page_insert+0x72>$/;"	l
c0104516	obj/kernel.asm	/^c0104516:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104519	obj/kernel.asm	/^c0104519:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010451c	obj/kernel.asm	/^c010451c:	e8 14 f1 ff ff       	call   c0103635 <page_ref_dec>$/;"	l
c0104521	obj/kernel.asm	/^c0104521:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104524	obj/kernel.asm	/^c0104524:	eb 14                	jmp    c010453a <page_insert+0x86>$/;"	l
c0104526	obj/kernel.asm	/^c0104526:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104529	obj/kernel.asm	/^c0104529:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010452c	obj/kernel.asm	/^c010452c:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010452f	obj/kernel.asm	/^c010452f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0104532	obj/kernel.asm	/^c0104532:	e8 43 fb ff ff       	call   c010407a <page_remove_pte>$/;"	l
c0104537	obj/kernel.asm	/^c0104537:	83 c4 10             	add    $0x10,%esp$/;"	l
c010453a	obj/kernel.asm	/^c010453a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010453d	obj/kernel.asm	/^c010453d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0104540	obj/kernel.asm	/^c0104540:	e8 cd ef ff ff       	call   c0103512 <page2pa>$/;"	l
c0104545	obj/kernel.asm	/^c0104545:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104548	obj/kernel.asm	/^c0104548:	0b 45 14             	or     0x14(%ebp),%eax$/;"	l
c010454b	obj/kernel.asm	/^c010454b:	83 c8 01             	or     $0x1,%eax$/;"	l
c010454e	obj/kernel.asm	/^c010454e:	89 c2                	mov    %eax,%edx$/;"	l
c0104550	obj/kernel.asm	/^c0104550:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104553	obj/kernel.asm	/^c0104553:	89 10                	mov    %edx,(%eax)$/;"	l
c0104555	obj/kernel.asm	/^c0104555:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104558	obj/kernel.asm	/^c0104558:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010455b	obj/kernel.asm	/^c010455b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010455e	obj/kernel.asm	/^c010455e:	e8 0a 00 00 00       	call   c010456d <tlb_invalidate>$/;"	l
c0104563	obj/kernel.asm	/^c0104563:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104566	obj/kernel.asm	/^c0104566:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010456b	obj/kernel.asm	/^c010456b:	c9                   	leave  $/;"	l
c010456c	obj/kernel.asm	/^c010456c:	c3                   	ret    $/;"	l
c010456d	obj/kernel.asm	/^c010456d <tlb_invalidate>:$/;"	l
c010456d	obj/kernel.asm	/^c010456d:	55                   	push   %ebp$/;"	l
c010456e	obj/kernel.asm	/^c010456e:	89 e5                	mov    %esp,%ebp$/;"	l
c0104570	obj/kernel.asm	/^c0104570:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0104573	obj/kernel.asm	/^c0104573:	0f 20 d8             	mov    %cr3,%eax$/;"	l
c0104576	obj/kernel.asm	/^c0104576:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104579	obj/kernel.asm	/^c0104579:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010457c	obj/kernel.asm	/^c010457c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010457f	obj/kernel.asm	/^c010457f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0104582	obj/kernel.asm	/^c0104582:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0104589	obj/kernel.asm	/^c0104589:	77 17                	ja     c01045a2 <tlb_invalidate+0x35>$/;"	l
c010458b	obj/kernel.asm	/^c010458b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010458e	obj/kernel.asm	/^c010458e:	68 64 4a 11 c0       	push   $0xc0114a64$/;"	l
c0104593	obj/kernel.asm	/^c0104593:	68 58 02 00 00       	push   $0x258$/;"	l
c0104598	obj/kernel.asm	/^c0104598:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c010459d	obj/kernel.asm	/^c010459d:	e8 2d bf ff ff       	call   c01004cf <__panic>$/;"	l
c01045a2	obj/kernel.asm	/^c01045a2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01045a5	obj/kernel.asm	/^c01045a5:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c01045aa	obj/kernel.asm	/^c01045aa:	39 c2                	cmp    %eax,%edx$/;"	l
c01045ac	obj/kernel.asm	/^c01045ac:	75 0c                	jne    c01045ba <tlb_invalidate+0x4d>$/;"	l
c01045ae	obj/kernel.asm	/^c01045ae:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01045b1	obj/kernel.asm	/^c01045b1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01045b4	obj/kernel.asm	/^c01045b4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01045b7	obj/kernel.asm	/^c01045b7:	0f 01 38             	invlpg (%eax)$/;"	l
c01045ba	obj/kernel.asm	/^c01045ba:	c9                   	leave  $/;"	l
c01045bb	obj/kernel.asm	/^c01045bb:	c3                   	ret    $/;"	l
c01045bc	obj/kernel.asm	/^c01045bc <pgdir_alloc_page>:$/;"	l
c01045bc	obj/kernel.asm	/^c01045bc:	55                   	push   %ebp$/;"	l
c01045bd	obj/kernel.asm	/^c01045bd:	89 e5                	mov    %esp,%ebp$/;"	l
c01045bf	obj/kernel.asm	/^c01045bf:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01045c2	obj/kernel.asm	/^c01045c2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01045c5	obj/kernel.asm	/^c01045c5:	6a 01                	push   $0x1$/;"	l
c01045c7	obj/kernel.asm	/^c01045c7:	e8 42 f2 ff ff       	call   c010380e <alloc_pages>$/;"	l
c01045cc	obj/kernel.asm	/^c01045cc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01045cf	obj/kernel.asm	/^c01045cf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01045d2	obj/kernel.asm	/^c01045d2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01045d6	obj/kernel.asm	/^c01045d6:	0f 84 8c 00 00 00    	je     c0104668 <pgdir_alloc_page+0xac>$/;"	l
c01045dc	obj/kernel.asm	/^c01045dc:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01045df	obj/kernel.asm	/^c01045df:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01045e2	obj/kernel.asm	/^c01045e2:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01045e5	obj/kernel.asm	/^c01045e5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01045e8	obj/kernel.asm	/^c01045e8:	e8 c7 fe ff ff       	call   c01044b4 <page_insert>$/;"	l
c01045ed	obj/kernel.asm	/^c01045ed:	83 c4 10             	add    $0x10,%esp$/;"	l
c01045f0	obj/kernel.asm	/^c01045f0:	85 c0                	test   %eax,%eax$/;"	l
c01045f2	obj/kernel.asm	/^c01045f2:	74 17                	je     c010460b <pgdir_alloc_page+0x4f>$/;"	l
c01045f4	obj/kernel.asm	/^c01045f4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01045f7	obj/kernel.asm	/^c01045f7:	6a 01                	push   $0x1$/;"	l
c01045f9	obj/kernel.asm	/^c01045f9:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01045fc	obj/kernel.asm	/^c01045fc:	e8 79 f2 ff ff       	call   c010387a <free_pages>$/;"	l
c0104601	obj/kernel.asm	/^c0104601:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104604	obj/kernel.asm	/^c0104604:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104609	obj/kernel.asm	/^c0104609:	eb 60                	jmp    c010466b <pgdir_alloc_page+0xaf>$/;"	l
c010460b	obj/kernel.asm	/^c010460b:	a1 70 f0 14 c0       	mov    0xc014f070,%eax$/;"	l
c0104610	obj/kernel.asm	/^c0104610:	85 c0                	test   %eax,%eax$/;"	l
c0104612	obj/kernel.asm	/^c0104612:	74 54                	je     c0104668 <pgdir_alloc_page+0xac>$/;"	l
c0104614	obj/kernel.asm	/^c0104614:	a1 b0 21 15 c0       	mov    0xc01521b0,%eax$/;"	l
c0104619	obj/kernel.asm	/^c0104619:	85 c0                	test   %eax,%eax$/;"	l
c010461b	obj/kernel.asm	/^c010461b:	74 4b                	je     c0104668 <pgdir_alloc_page+0xac>$/;"	l
c010461d	obj/kernel.asm	/^c010461d:	a1 b0 21 15 c0       	mov    0xc01521b0,%eax$/;"	l
c0104622	obj/kernel.asm	/^c0104622:	6a 00                	push   $0x0$/;"	l
c0104624	obj/kernel.asm	/^c0104624:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104627	obj/kernel.asm	/^c0104627:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010462a	obj/kernel.asm	/^c010462a:	50                   	push   %eax$/;"	l
c010462b	obj/kernel.asm	/^c010462b:	e8 0b 1e 00 00       	call   c010643b <swap_map_swappable>$/;"	l
c0104630	obj/kernel.asm	/^c0104630:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104633	obj/kernel.asm	/^c0104633:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104636	obj/kernel.asm	/^c0104636:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0104639	obj/kernel.asm	/^c0104639:	89 50 20             	mov    %edx,0x20(%eax)$/;"	l
c010463c	obj/kernel.asm	/^c010463c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010463f	obj/kernel.asm	/^c010463f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104642	obj/kernel.asm	/^c0104642:	e8 c0 ef ff ff       	call   c0103607 <page_ref>$/;"	l
c0104647	obj/kernel.asm	/^c0104647:	83 c4 10             	add    $0x10,%esp$/;"	l
c010464a	obj/kernel.asm	/^c010464a:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010464d	obj/kernel.asm	/^c010464d:	74 19                	je     c0104668 <pgdir_alloc_page+0xac>$/;"	l
c010464f	obj/kernel.asm	/^c010464f:	68 49 4b 11 c0       	push   $0xc0114b49$/;"	l
c0104654	obj/kernel.asm	/^c0104654:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104659	obj/kernel.asm	/^c0104659:	68 6c 02 00 00       	push   $0x26c$/;"	l
c010465e	obj/kernel.asm	/^c010465e:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104663	obj/kernel.asm	/^c0104663:	e8 67 be ff ff       	call   c01004cf <__panic>$/;"	l
c0104668	obj/kernel.asm	/^c0104668:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010466b	obj/kernel.asm	/^c010466b:	c9                   	leave  $/;"	l
c010466c	obj/kernel.asm	/^c010466c:	c3                   	ret    $/;"	l
c010466d	obj/kernel.asm	/^c010466d <check_alloc_page>:$/;"	l
c010466d	obj/kernel.asm	/^c010466d:	55                   	push   %ebp$/;"	l
c010466e	obj/kernel.asm	/^c010466e:	89 e5                	mov    %esp,%ebp$/;"	l
c0104670	obj/kernel.asm	/^c0104670:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104673	obj/kernel.asm	/^c0104673:	a1 a4 21 15 c0       	mov    0xc01521a4,%eax$/;"	l
c0104678	obj/kernel.asm	/^c0104678:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010467b	obj/kernel.asm	/^c010467b:	ff d0                	call   *%eax$/;"	l
c010467d	obj/kernel.asm	/^c010467d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104680	obj/kernel.asm	/^c0104680:	68 60 4b 11 c0       	push   $0xc0114b60$/;"	l
c0104685	obj/kernel.asm	/^c0104685:	e8 e0 bc ff ff       	call   c010036a <cprintf>$/;"	l
c010468a	obj/kernel.asm	/^c010468a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010468d	obj/kernel.asm	/^c010468d:	c9                   	leave  $/;"	l
c010468e	obj/kernel.asm	/^c010468e:	c3                   	ret    $/;"	l
c010468f	obj/kernel.asm	/^c010468f <check_pgdir>:$/;"	l
c010468f	obj/kernel.asm	/^c010468f:	55                   	push   %ebp$/;"	l
c0104690	obj/kernel.asm	/^c0104690:	89 e5                	mov    %esp,%ebp$/;"	l
c0104692	obj/kernel.asm	/^c0104692:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104695	obj/kernel.asm	/^c0104695:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c010469a	obj/kernel.asm	/^c010469a:	3d 00 80 03 00       	cmp    $0x38000,%eax$/;"	l
c010469f	obj/kernel.asm	/^c010469f:	76 19                	jbe    c01046ba <check_pgdir+0x2b>$/;"	l
c01046a1	obj/kernel.asm	/^c01046a1:	68 7f 4b 11 c0       	push   $0xc0114b7f$/;"	l
c01046a6	obj/kernel.asm	/^c01046a6:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c01046ab	obj/kernel.asm	/^c01046ab:	68 84 02 00 00       	push   $0x284$/;"	l
c01046b0	obj/kernel.asm	/^c01046b0:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c01046b5	obj/kernel.asm	/^c01046b5:	e8 15 be ff ff       	call   c01004cf <__panic>$/;"	l
c01046ba	obj/kernel.asm	/^c01046ba:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c01046bf	obj/kernel.asm	/^c01046bf:	85 c0                	test   %eax,%eax$/;"	l
c01046c1	obj/kernel.asm	/^c01046c1:	74 0e                	je     c01046d1 <check_pgdir+0x42>$/;"	l
c01046c3	obj/kernel.asm	/^c01046c3:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c01046c8	obj/kernel.asm	/^c01046c8:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01046cd	obj/kernel.asm	/^c01046cd:	85 c0                	test   %eax,%eax$/;"	l
c01046cf	obj/kernel.asm	/^c01046cf:	74 19                	je     c01046ea <check_pgdir+0x5b>$/;"	l
c01046d1	obj/kernel.asm	/^c01046d1:	68 9c 4b 11 c0       	push   $0xc0114b9c$/;"	l
c01046d6	obj/kernel.asm	/^c01046d6:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c01046db	obj/kernel.asm	/^c01046db:	68 85 02 00 00       	push   $0x285$/;"	l
c01046e0	obj/kernel.asm	/^c01046e0:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c01046e5	obj/kernel.asm	/^c01046e5:	e8 e5 bd ff ff       	call   c01004cf <__panic>$/;"	l
c01046ea	obj/kernel.asm	/^c01046ea:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c01046ef	obj/kernel.asm	/^c01046ef:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01046f2	obj/kernel.asm	/^c01046f2:	6a 00                	push   $0x0$/;"	l
c01046f4	obj/kernel.asm	/^c01046f4:	6a 00                	push   $0x0$/;"	l
c01046f6	obj/kernel.asm	/^c01046f6:	50                   	push   %eax$/;"	l
c01046f7	obj/kernel.asm	/^c01046f7:	e8 28 f9 ff ff       	call   c0104024 <get_page>$/;"	l
c01046fc	obj/kernel.asm	/^c01046fc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01046ff	obj/kernel.asm	/^c01046ff:	85 c0                	test   %eax,%eax$/;"	l
c0104701	obj/kernel.asm	/^c0104701:	74 19                	je     c010471c <check_pgdir+0x8d>$/;"	l
c0104703	obj/kernel.asm	/^c0104703:	68 d4 4b 11 c0       	push   $0xc0114bd4$/;"	l
c0104708	obj/kernel.asm	/^c0104708:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c010470d	obj/kernel.asm	/^c010470d:	68 86 02 00 00       	push   $0x286$/;"	l
c0104712	obj/kernel.asm	/^c0104712:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104717	obj/kernel.asm	/^c0104717:	e8 b3 bd ff ff       	call   c01004cf <__panic>$/;"	l
c010471c	obj/kernel.asm	/^c010471c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010471f	obj/kernel.asm	/^c010471f:	6a 01                	push   $0x1$/;"	l
c0104721	obj/kernel.asm	/^c0104721:	e8 e8 f0 ff ff       	call   c010380e <alloc_pages>$/;"	l
c0104726	obj/kernel.asm	/^c0104726:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104729	obj/kernel.asm	/^c0104729:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010472c	obj/kernel.asm	/^c010472c:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0104731	obj/kernel.asm	/^c0104731:	6a 00                	push   $0x0$/;"	l
c0104733	obj/kernel.asm	/^c0104733:	6a 00                	push   $0x0$/;"	l
c0104735	obj/kernel.asm	/^c0104735:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104738	obj/kernel.asm	/^c0104738:	50                   	push   %eax$/;"	l
c0104739	obj/kernel.asm	/^c0104739:	e8 76 fd ff ff       	call   c01044b4 <page_insert>$/;"	l
c010473e	obj/kernel.asm	/^c010473e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104741	obj/kernel.asm	/^c0104741:	85 c0                	test   %eax,%eax$/;"	l
c0104743	obj/kernel.asm	/^c0104743:	74 19                	je     c010475e <check_pgdir+0xcf>$/;"	l
c0104745	obj/kernel.asm	/^c0104745:	68 fc 4b 11 c0       	push   $0xc0114bfc$/;"	l
c010474a	obj/kernel.asm	/^c010474a:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c010474f	obj/kernel.asm	/^c010474f:	68 8a 02 00 00       	push   $0x28a$/;"	l
c0104754	obj/kernel.asm	/^c0104754:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104759	obj/kernel.asm	/^c0104759:	e8 71 bd ff ff       	call   c01004cf <__panic>$/;"	l
c010475e	obj/kernel.asm	/^c010475e:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0104763	obj/kernel.asm	/^c0104763:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104766	obj/kernel.asm	/^c0104766:	6a 00                	push   $0x0$/;"	l
c0104768	obj/kernel.asm	/^c0104768:	6a 00                	push   $0x0$/;"	l
c010476a	obj/kernel.asm	/^c010476a:	50                   	push   %eax$/;"	l
c010476b	obj/kernel.asm	/^c010476b:	e8 97 f7 ff ff       	call   c0103f07 <get_pte>$/;"	l
c0104770	obj/kernel.asm	/^c0104770:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104773	obj/kernel.asm	/^c0104773:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104776	obj/kernel.asm	/^c0104776:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010477a	obj/kernel.asm	/^c010477a:	75 19                	jne    c0104795 <check_pgdir+0x106>$/;"	l
c010477c	obj/kernel.asm	/^c010477c:	68 28 4c 11 c0       	push   $0xc0114c28$/;"	l
c0104781	obj/kernel.asm	/^c0104781:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104786	obj/kernel.asm	/^c0104786:	68 8d 02 00 00       	push   $0x28d$/;"	l
c010478b	obj/kernel.asm	/^c010478b:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104790	obj/kernel.asm	/^c0104790:	e8 3a bd ff ff       	call   c01004cf <__panic>$/;"	l
c0104795	obj/kernel.asm	/^c0104795:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104798	obj/kernel.asm	/^c0104798:	8b 00                	mov    (%eax),%eax$/;"	l
c010479a	obj/kernel.asm	/^c010479a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010479d	obj/kernel.asm	/^c010479d:	50                   	push   %eax$/;"	l
c010479e	obj/kernel.asm	/^c010479e:	e8 82 ed ff ff       	call   c0103525 <pa2page>$/;"	l
c01047a3	obj/kernel.asm	/^c01047a3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01047a6	obj/kernel.asm	/^c01047a6:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01047a9	obj/kernel.asm	/^c01047a9:	74 19                	je     c01047c4 <check_pgdir+0x135>$/;"	l
c01047ab	obj/kernel.asm	/^c01047ab:	68 55 4c 11 c0       	push   $0xc0114c55$/;"	l
c01047b0	obj/kernel.asm	/^c01047b0:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c01047b5	obj/kernel.asm	/^c01047b5:	68 8e 02 00 00       	push   $0x28e$/;"	l
c01047ba	obj/kernel.asm	/^c01047ba:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c01047bf	obj/kernel.asm	/^c01047bf:	e8 0b bd ff ff       	call   c01004cf <__panic>$/;"	l
c01047c4	obj/kernel.asm	/^c01047c4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01047c7	obj/kernel.asm	/^c01047c7:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01047ca	obj/kernel.asm	/^c01047ca:	e8 38 ee ff ff       	call   c0103607 <page_ref>$/;"	l
c01047cf	obj/kernel.asm	/^c01047cf:	83 c4 10             	add    $0x10,%esp$/;"	l
c01047d2	obj/kernel.asm	/^c01047d2:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01047d5	obj/kernel.asm	/^c01047d5:	74 19                	je     c01047f0 <check_pgdir+0x161>$/;"	l
c01047d7	obj/kernel.asm	/^c01047d7:	68 6a 4c 11 c0       	push   $0xc0114c6a$/;"	l
c01047dc	obj/kernel.asm	/^c01047dc:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c01047e1	obj/kernel.asm	/^c01047e1:	68 8f 02 00 00       	push   $0x28f$/;"	l
c01047e6	obj/kernel.asm	/^c01047e6:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c01047eb	obj/kernel.asm	/^c01047eb:	e8 df bc ff ff       	call   c01004cf <__panic>$/;"	l
c01047f0	obj/kernel.asm	/^c01047f0:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c01047f5	obj/kernel.asm	/^c01047f5:	8b 00                	mov    (%eax),%eax$/;"	l
c01047f7	obj/kernel.asm	/^c01047f7:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c01047fc	obj/kernel.asm	/^c01047fc:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01047ff	obj/kernel.asm	/^c01047ff:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0104802	obj/kernel.asm	/^c0104802:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104805	obj/kernel.asm	/^c0104805:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104808	obj/kernel.asm	/^c0104808:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c010480d	obj/kernel.asm	/^c010480d:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c0104810	obj/kernel.asm	/^c0104810:	72 17                	jb     c0104829 <check_pgdir+0x19a>$/;"	l
c0104812	obj/kernel.asm	/^c0104812:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0104815	obj/kernel.asm	/^c0104815:	68 c0 49 11 c0       	push   $0xc01149c0$/;"	l
c010481a	obj/kernel.asm	/^c010481a:	68 91 02 00 00       	push   $0x291$/;"	l
c010481f	obj/kernel.asm	/^c010481f:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104824	obj/kernel.asm	/^c0104824:	e8 a6 bc ff ff       	call   c01004cf <__panic>$/;"	l
c0104829	obj/kernel.asm	/^c0104829:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010482c	obj/kernel.asm	/^c010482c:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104831	obj/kernel.asm	/^c0104831:	83 c0 04             	add    $0x4,%eax$/;"	l
c0104834	obj/kernel.asm	/^c0104834:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104837	obj/kernel.asm	/^c0104837:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c010483c	obj/kernel.asm	/^c010483c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010483f	obj/kernel.asm	/^c010483f:	6a 00                	push   $0x0$/;"	l
c0104841	obj/kernel.asm	/^c0104841:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104846	obj/kernel.asm	/^c0104846:	50                   	push   %eax$/;"	l
c0104847	obj/kernel.asm	/^c0104847:	e8 bb f6 ff ff       	call   c0103f07 <get_pte>$/;"	l
c010484c	obj/kernel.asm	/^c010484c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010484f	obj/kernel.asm	/^c010484f:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0104852	obj/kernel.asm	/^c0104852:	74 19                	je     c010486d <check_pgdir+0x1de>$/;"	l
c0104854	obj/kernel.asm	/^c0104854:	68 7c 4c 11 c0       	push   $0xc0114c7c$/;"	l
c0104859	obj/kernel.asm	/^c0104859:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c010485e	obj/kernel.asm	/^c010485e:	68 92 02 00 00       	push   $0x292$/;"	l
c0104863	obj/kernel.asm	/^c0104863:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104868	obj/kernel.asm	/^c0104868:	e8 62 bc ff ff       	call   c01004cf <__panic>$/;"	l
c010486d	obj/kernel.asm	/^c010486d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104870	obj/kernel.asm	/^c0104870:	6a 01                	push   $0x1$/;"	l
c0104872	obj/kernel.asm	/^c0104872:	e8 97 ef ff ff       	call   c010380e <alloc_pages>$/;"	l
c0104877	obj/kernel.asm	/^c0104877:	83 c4 10             	add    $0x10,%esp$/;"	l
c010487a	obj/kernel.asm	/^c010487a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010487d	obj/kernel.asm	/^c010487d:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0104882	obj/kernel.asm	/^c0104882:	6a 06                	push   $0x6$/;"	l
c0104884	obj/kernel.asm	/^c0104884:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104889	obj/kernel.asm	/^c0104889:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c010488c	obj/kernel.asm	/^c010488c:	50                   	push   %eax$/;"	l
c010488d	obj/kernel.asm	/^c010488d:	e8 22 fc ff ff       	call   c01044b4 <page_insert>$/;"	l
c0104892	obj/kernel.asm	/^c0104892:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104895	obj/kernel.asm	/^c0104895:	85 c0                	test   %eax,%eax$/;"	l
c0104897	obj/kernel.asm	/^c0104897:	74 19                	je     c01048b2 <check_pgdir+0x223>$/;"	l
c0104899	obj/kernel.asm	/^c0104899:	68 a4 4c 11 c0       	push   $0xc0114ca4$/;"	l
c010489e	obj/kernel.asm	/^c010489e:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c01048a3	obj/kernel.asm	/^c01048a3:	68 95 02 00 00       	push   $0x295$/;"	l
c01048a8	obj/kernel.asm	/^c01048a8:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c01048ad	obj/kernel.asm	/^c01048ad:	e8 1d bc ff ff       	call   c01004cf <__panic>$/;"	l
c01048b2	obj/kernel.asm	/^c01048b2:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c01048b7	obj/kernel.asm	/^c01048b7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01048ba	obj/kernel.asm	/^c01048ba:	6a 00                	push   $0x0$/;"	l
c01048bc	obj/kernel.asm	/^c01048bc:	68 00 10 00 00       	push   $0x1000$/;"	l
c01048c1	obj/kernel.asm	/^c01048c1:	50                   	push   %eax$/;"	l
c01048c2	obj/kernel.asm	/^c01048c2:	e8 40 f6 ff ff       	call   c0103f07 <get_pte>$/;"	l
c01048c7	obj/kernel.asm	/^c01048c7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01048ca	obj/kernel.asm	/^c01048ca:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01048cd	obj/kernel.asm	/^c01048cd:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01048d1	obj/kernel.asm	/^c01048d1:	75 19                	jne    c01048ec <check_pgdir+0x25d>$/;"	l
c01048d3	obj/kernel.asm	/^c01048d3:	68 dc 4c 11 c0       	push   $0xc0114cdc$/;"	l
c01048d8	obj/kernel.asm	/^c01048d8:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c01048dd	obj/kernel.asm	/^c01048dd:	68 96 02 00 00       	push   $0x296$/;"	l
c01048e2	obj/kernel.asm	/^c01048e2:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c01048e7	obj/kernel.asm	/^c01048e7:	e8 e3 bb ff ff       	call   c01004cf <__panic>$/;"	l
c01048ec	obj/kernel.asm	/^c01048ec:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01048ef	obj/kernel.asm	/^c01048ef:	8b 00                	mov    (%eax),%eax$/;"	l
c01048f1	obj/kernel.asm	/^c01048f1:	83 e0 04             	and    $0x4,%eax$/;"	l
c01048f4	obj/kernel.asm	/^c01048f4:	85 c0                	test   %eax,%eax$/;"	l
c01048f6	obj/kernel.asm	/^c01048f6:	75 19                	jne    c0104911 <check_pgdir+0x282>$/;"	l
c01048f8	obj/kernel.asm	/^c01048f8:	68 0c 4d 11 c0       	push   $0xc0114d0c$/;"	l
c01048fd	obj/kernel.asm	/^c01048fd:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104902	obj/kernel.asm	/^c0104902:	68 97 02 00 00       	push   $0x297$/;"	l
c0104907	obj/kernel.asm	/^c0104907:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c010490c	obj/kernel.asm	/^c010490c:	e8 be bb ff ff       	call   c01004cf <__panic>$/;"	l
c0104911	obj/kernel.asm	/^c0104911:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104914	obj/kernel.asm	/^c0104914:	8b 00                	mov    (%eax),%eax$/;"	l
c0104916	obj/kernel.asm	/^c0104916:	83 e0 02             	and    $0x2,%eax$/;"	l
c0104919	obj/kernel.asm	/^c0104919:	85 c0                	test   %eax,%eax$/;"	l
c010491b	obj/kernel.asm	/^c010491b:	75 19                	jne    c0104936 <check_pgdir+0x2a7>$/;"	l
c010491d	obj/kernel.asm	/^c010491d:	68 1a 4d 11 c0       	push   $0xc0114d1a$/;"	l
c0104922	obj/kernel.asm	/^c0104922:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104927	obj/kernel.asm	/^c0104927:	68 98 02 00 00       	push   $0x298$/;"	l
c010492c	obj/kernel.asm	/^c010492c:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104931	obj/kernel.asm	/^c0104931:	e8 99 bb ff ff       	call   c01004cf <__panic>$/;"	l
c0104936	obj/kernel.asm	/^c0104936:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c010493b	obj/kernel.asm	/^c010493b:	8b 00                	mov    (%eax),%eax$/;"	l
c010493d	obj/kernel.asm	/^c010493d:	83 e0 04             	and    $0x4,%eax$/;"	l
c0104940	obj/kernel.asm	/^c0104940:	85 c0                	test   %eax,%eax$/;"	l
c0104942	obj/kernel.asm	/^c0104942:	75 19                	jne    c010495d <check_pgdir+0x2ce>$/;"	l
c0104944	obj/kernel.asm	/^c0104944:	68 28 4d 11 c0       	push   $0xc0114d28$/;"	l
c0104949	obj/kernel.asm	/^c0104949:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c010494e	obj/kernel.asm	/^c010494e:	68 99 02 00 00       	push   $0x299$/;"	l
c0104953	obj/kernel.asm	/^c0104953:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104958	obj/kernel.asm	/^c0104958:	e8 72 bb ff ff       	call   c01004cf <__panic>$/;"	l
c010495d	obj/kernel.asm	/^c010495d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104960	obj/kernel.asm	/^c0104960:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104963	obj/kernel.asm	/^c0104963:	e8 9f ec ff ff       	call   c0103607 <page_ref>$/;"	l
c0104968	obj/kernel.asm	/^c0104968:	83 c4 10             	add    $0x10,%esp$/;"	l
c010496b	obj/kernel.asm	/^c010496b:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010496e	obj/kernel.asm	/^c010496e:	74 19                	je     c0104989 <check_pgdir+0x2fa>$/;"	l
c0104970	obj/kernel.asm	/^c0104970:	68 3e 4d 11 c0       	push   $0xc0114d3e$/;"	l
c0104975	obj/kernel.asm	/^c0104975:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c010497a	obj/kernel.asm	/^c010497a:	68 9a 02 00 00       	push   $0x29a$/;"	l
c010497f	obj/kernel.asm	/^c010497f:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104984	obj/kernel.asm	/^c0104984:	e8 46 bb ff ff       	call   c01004cf <__panic>$/;"	l
c0104989	obj/kernel.asm	/^c0104989:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c010498e	obj/kernel.asm	/^c010498e:	6a 00                	push   $0x0$/;"	l
c0104990	obj/kernel.asm	/^c0104990:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104995	obj/kernel.asm	/^c0104995:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104998	obj/kernel.asm	/^c0104998:	50                   	push   %eax$/;"	l
c0104999	obj/kernel.asm	/^c0104999:	e8 16 fb ff ff       	call   c01044b4 <page_insert>$/;"	l
c010499e	obj/kernel.asm	/^c010499e:	83 c4 10             	add    $0x10,%esp$/;"	l
c01049a1	obj/kernel.asm	/^c01049a1:	85 c0                	test   %eax,%eax$/;"	l
c01049a3	obj/kernel.asm	/^c01049a3:	74 19                	je     c01049be <check_pgdir+0x32f>$/;"	l
c01049a5	obj/kernel.asm	/^c01049a5:	68 50 4d 11 c0       	push   $0xc0114d50$/;"	l
c01049aa	obj/kernel.asm	/^c01049aa:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c01049af	obj/kernel.asm	/^c01049af:	68 9c 02 00 00       	push   $0x29c$/;"	l
c01049b4	obj/kernel.asm	/^c01049b4:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c01049b9	obj/kernel.asm	/^c01049b9:	e8 11 bb ff ff       	call   c01004cf <__panic>$/;"	l
c01049be	obj/kernel.asm	/^c01049be:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01049c1	obj/kernel.asm	/^c01049c1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01049c4	obj/kernel.asm	/^c01049c4:	e8 3e ec ff ff       	call   c0103607 <page_ref>$/;"	l
c01049c9	obj/kernel.asm	/^c01049c9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01049cc	obj/kernel.asm	/^c01049cc:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01049cf	obj/kernel.asm	/^c01049cf:	74 19                	je     c01049ea <check_pgdir+0x35b>$/;"	l
c01049d1	obj/kernel.asm	/^c01049d1:	68 7c 4d 11 c0       	push   $0xc0114d7c$/;"	l
c01049d6	obj/kernel.asm	/^c01049d6:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c01049db	obj/kernel.asm	/^c01049db:	68 9d 02 00 00       	push   $0x29d$/;"	l
c01049e0	obj/kernel.asm	/^c01049e0:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c01049e5	obj/kernel.asm	/^c01049e5:	e8 e5 ba ff ff       	call   c01004cf <__panic>$/;"	l
c01049ea	obj/kernel.asm	/^c01049ea:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01049ed	obj/kernel.asm	/^c01049ed:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01049f0	obj/kernel.asm	/^c01049f0:	e8 12 ec ff ff       	call   c0103607 <page_ref>$/;"	l
c01049f5	obj/kernel.asm	/^c01049f5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01049f8	obj/kernel.asm	/^c01049f8:	85 c0                	test   %eax,%eax$/;"	l
c01049fa	obj/kernel.asm	/^c01049fa:	74 19                	je     c0104a15 <check_pgdir+0x386>$/;"	l
c01049fc	obj/kernel.asm	/^c01049fc:	68 8e 4d 11 c0       	push   $0xc0114d8e$/;"	l
c0104a01	obj/kernel.asm	/^c0104a01:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104a06	obj/kernel.asm	/^c0104a06:	68 9e 02 00 00       	push   $0x29e$/;"	l
c0104a0b	obj/kernel.asm	/^c0104a0b:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104a10	obj/kernel.asm	/^c0104a10:	e8 ba ba ff ff       	call   c01004cf <__panic>$/;"	l
c0104a15	obj/kernel.asm	/^c0104a15:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0104a1a	obj/kernel.asm	/^c0104a1a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104a1d	obj/kernel.asm	/^c0104a1d:	6a 00                	push   $0x0$/;"	l
c0104a1f	obj/kernel.asm	/^c0104a1f:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104a24	obj/kernel.asm	/^c0104a24:	50                   	push   %eax$/;"	l
c0104a25	obj/kernel.asm	/^c0104a25:	e8 dd f4 ff ff       	call   c0103f07 <get_pte>$/;"	l
c0104a2a	obj/kernel.asm	/^c0104a2a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104a2d	obj/kernel.asm	/^c0104a2d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104a30	obj/kernel.asm	/^c0104a30:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0104a34	obj/kernel.asm	/^c0104a34:	75 19                	jne    c0104a4f <check_pgdir+0x3c0>$/;"	l
c0104a36	obj/kernel.asm	/^c0104a36:	68 dc 4c 11 c0       	push   $0xc0114cdc$/;"	l
c0104a3b	obj/kernel.asm	/^c0104a3b:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104a40	obj/kernel.asm	/^c0104a40:	68 9f 02 00 00       	push   $0x29f$/;"	l
c0104a45	obj/kernel.asm	/^c0104a45:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104a4a	obj/kernel.asm	/^c0104a4a:	e8 80 ba ff ff       	call   c01004cf <__panic>$/;"	l
c0104a4f	obj/kernel.asm	/^c0104a4f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a52	obj/kernel.asm	/^c0104a52:	8b 00                	mov    (%eax),%eax$/;"	l
c0104a54	obj/kernel.asm	/^c0104a54:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104a57	obj/kernel.asm	/^c0104a57:	50                   	push   %eax$/;"	l
c0104a58	obj/kernel.asm	/^c0104a58:	e8 c8 ea ff ff       	call   c0103525 <pa2page>$/;"	l
c0104a5d	obj/kernel.asm	/^c0104a5d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104a60	obj/kernel.asm	/^c0104a60:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0104a63	obj/kernel.asm	/^c0104a63:	74 19                	je     c0104a7e <check_pgdir+0x3ef>$/;"	l
c0104a65	obj/kernel.asm	/^c0104a65:	68 55 4c 11 c0       	push   $0xc0114c55$/;"	l
c0104a6a	obj/kernel.asm	/^c0104a6a:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104a6f	obj/kernel.asm	/^c0104a6f:	68 a0 02 00 00       	push   $0x2a0$/;"	l
c0104a74	obj/kernel.asm	/^c0104a74:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104a79	obj/kernel.asm	/^c0104a79:	e8 51 ba ff ff       	call   c01004cf <__panic>$/;"	l
c0104a7e	obj/kernel.asm	/^c0104a7e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104a81	obj/kernel.asm	/^c0104a81:	8b 00                	mov    (%eax),%eax$/;"	l
c0104a83	obj/kernel.asm	/^c0104a83:	83 e0 04             	and    $0x4,%eax$/;"	l
c0104a86	obj/kernel.asm	/^c0104a86:	85 c0                	test   %eax,%eax$/;"	l
c0104a88	obj/kernel.asm	/^c0104a88:	74 19                	je     c0104aa3 <check_pgdir+0x414>$/;"	l
c0104a8a	obj/kernel.asm	/^c0104a8a:	68 a0 4d 11 c0       	push   $0xc0114da0$/;"	l
c0104a8f	obj/kernel.asm	/^c0104a8f:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104a94	obj/kernel.asm	/^c0104a94:	68 a1 02 00 00       	push   $0x2a1$/;"	l
c0104a99	obj/kernel.asm	/^c0104a99:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104a9e	obj/kernel.asm	/^c0104a9e:	e8 2c ba ff ff       	call   c01004cf <__panic>$/;"	l
c0104aa3	obj/kernel.asm	/^c0104aa3:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0104aa8	obj/kernel.asm	/^c0104aa8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104aab	obj/kernel.asm	/^c0104aab:	6a 00                	push   $0x0$/;"	l
c0104aad	obj/kernel.asm	/^c0104aad:	50                   	push   %eax$/;"	l
c0104aae	obj/kernel.asm	/^c0104aae:	e8 c9 f9 ff ff       	call   c010447c <page_remove>$/;"	l
c0104ab3	obj/kernel.asm	/^c0104ab3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ab6	obj/kernel.asm	/^c0104ab6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104ab9	obj/kernel.asm	/^c0104ab9:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104abc	obj/kernel.asm	/^c0104abc:	e8 46 eb ff ff       	call   c0103607 <page_ref>$/;"	l
c0104ac1	obj/kernel.asm	/^c0104ac1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ac4	obj/kernel.asm	/^c0104ac4:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104ac7	obj/kernel.asm	/^c0104ac7:	74 19                	je     c0104ae2 <check_pgdir+0x453>$/;"	l
c0104ac9	obj/kernel.asm	/^c0104ac9:	68 6a 4c 11 c0       	push   $0xc0114c6a$/;"	l
c0104ace	obj/kernel.asm	/^c0104ace:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104ad3	obj/kernel.asm	/^c0104ad3:	68 a4 02 00 00       	push   $0x2a4$/;"	l
c0104ad8	obj/kernel.asm	/^c0104ad8:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104add	obj/kernel.asm	/^c0104add:	e8 ed b9 ff ff       	call   c01004cf <__panic>$/;"	l
c0104ae2	obj/kernel.asm	/^c0104ae2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104ae5	obj/kernel.asm	/^c0104ae5:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104ae8	obj/kernel.asm	/^c0104ae8:	e8 1a eb ff ff       	call   c0103607 <page_ref>$/;"	l
c0104aed	obj/kernel.asm	/^c0104aed:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104af0	obj/kernel.asm	/^c0104af0:	85 c0                	test   %eax,%eax$/;"	l
c0104af2	obj/kernel.asm	/^c0104af2:	74 19                	je     c0104b0d <check_pgdir+0x47e>$/;"	l
c0104af4	obj/kernel.asm	/^c0104af4:	68 8e 4d 11 c0       	push   $0xc0114d8e$/;"	l
c0104af9	obj/kernel.asm	/^c0104af9:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104afe	obj/kernel.asm	/^c0104afe:	68 a5 02 00 00       	push   $0x2a5$/;"	l
c0104b03	obj/kernel.asm	/^c0104b03:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104b08	obj/kernel.asm	/^c0104b08:	e8 c2 b9 ff ff       	call   c01004cf <__panic>$/;"	l
c0104b0d	obj/kernel.asm	/^c0104b0d:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0104b12	obj/kernel.asm	/^c0104b12:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104b15	obj/kernel.asm	/^c0104b15:	68 00 10 00 00       	push   $0x1000$/;"	l
c0104b1a	obj/kernel.asm	/^c0104b1a:	50                   	push   %eax$/;"	l
c0104b1b	obj/kernel.asm	/^c0104b1b:	e8 5c f9 ff ff       	call   c010447c <page_remove>$/;"	l
c0104b20	obj/kernel.asm	/^c0104b20:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104b23	obj/kernel.asm	/^c0104b23:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104b26	obj/kernel.asm	/^c0104b26:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0104b29	obj/kernel.asm	/^c0104b29:	e8 d9 ea ff ff       	call   c0103607 <page_ref>$/;"	l
c0104b2e	obj/kernel.asm	/^c0104b2e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104b31	obj/kernel.asm	/^c0104b31:	85 c0                	test   %eax,%eax$/;"	l
c0104b33	obj/kernel.asm	/^c0104b33:	74 19                	je     c0104b4e <check_pgdir+0x4bf>$/;"	l
c0104b35	obj/kernel.asm	/^c0104b35:	68 b5 4d 11 c0       	push   $0xc0114db5$/;"	l
c0104b3a	obj/kernel.asm	/^c0104b3a:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104b3f	obj/kernel.asm	/^c0104b3f:	68 a8 02 00 00       	push   $0x2a8$/;"	l
c0104b44	obj/kernel.asm	/^c0104b44:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104b49	obj/kernel.asm	/^c0104b49:	e8 81 b9 ff ff       	call   c01004cf <__panic>$/;"	l
c0104b4e	obj/kernel.asm	/^c0104b4e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104b51	obj/kernel.asm	/^c0104b51:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104b54	obj/kernel.asm	/^c0104b54:	e8 ae ea ff ff       	call   c0103607 <page_ref>$/;"	l
c0104b59	obj/kernel.asm	/^c0104b59:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104b5c	obj/kernel.asm	/^c0104b5c:	85 c0                	test   %eax,%eax$/;"	l
c0104b5e	obj/kernel.asm	/^c0104b5e:	74 19                	je     c0104b79 <check_pgdir+0x4ea>$/;"	l
c0104b60	obj/kernel.asm	/^c0104b60:	68 8e 4d 11 c0       	push   $0xc0114d8e$/;"	l
c0104b65	obj/kernel.asm	/^c0104b65:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104b6a	obj/kernel.asm	/^c0104b6a:	68 a9 02 00 00       	push   $0x2a9$/;"	l
c0104b6f	obj/kernel.asm	/^c0104b6f:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104b74	obj/kernel.asm	/^c0104b74:	e8 56 b9 ff ff       	call   c01004cf <__panic>$/;"	l
c0104b79	obj/kernel.asm	/^c0104b79:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0104b7e	obj/kernel.asm	/^c0104b7e:	8b 00                	mov    (%eax),%eax$/;"	l
c0104b80	obj/kernel.asm	/^c0104b80:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104b83	obj/kernel.asm	/^c0104b83:	50                   	push   %eax$/;"	l
c0104b84	obj/kernel.asm	/^c0104b84:	e8 9c e9 ff ff       	call   c0103525 <pa2page>$/;"	l
c0104b89	obj/kernel.asm	/^c0104b89:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104b8c	obj/kernel.asm	/^c0104b8c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104b8f	obj/kernel.asm	/^c0104b8f:	50                   	push   %eax$/;"	l
c0104b90	obj/kernel.asm	/^c0104b90:	e8 72 ea ff ff       	call   c0103607 <page_ref>$/;"	l
c0104b95	obj/kernel.asm	/^c0104b95:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104b98	obj/kernel.asm	/^c0104b98:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104b9b	obj/kernel.asm	/^c0104b9b:	74 19                	je     c0104bb6 <check_pgdir+0x527>$/;"	l
c0104b9d	obj/kernel.asm	/^c0104b9d:	68 c8 4d 11 c0       	push   $0xc0114dc8$/;"	l
c0104ba2	obj/kernel.asm	/^c0104ba2:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104ba7	obj/kernel.asm	/^c0104ba7:	68 ab 02 00 00       	push   $0x2ab$/;"	l
c0104bac	obj/kernel.asm	/^c0104bac:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104bb1	obj/kernel.asm	/^c0104bb1:	e8 19 b9 ff ff       	call   c01004cf <__panic>$/;"	l
c0104bb6	obj/kernel.asm	/^c0104bb6:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0104bbb	obj/kernel.asm	/^c0104bbb:	8b 00                	mov    (%eax),%eax$/;"	l
c0104bbd	obj/kernel.asm	/^c0104bbd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104bc0	obj/kernel.asm	/^c0104bc0:	50                   	push   %eax$/;"	l
c0104bc1	obj/kernel.asm	/^c0104bc1:	e8 5f e9 ff ff       	call   c0103525 <pa2page>$/;"	l
c0104bc6	obj/kernel.asm	/^c0104bc6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104bc9	obj/kernel.asm	/^c0104bc9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104bcc	obj/kernel.asm	/^c0104bcc:	6a 01                	push   $0x1$/;"	l
c0104bce	obj/kernel.asm	/^c0104bce:	50                   	push   %eax$/;"	l
c0104bcf	obj/kernel.asm	/^c0104bcf:	e8 a6 ec ff ff       	call   c010387a <free_pages>$/;"	l
c0104bd4	obj/kernel.asm	/^c0104bd4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104bd7	obj/kernel.asm	/^c0104bd7:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0104bdc	obj/kernel.asm	/^c0104bdc:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0104be2	obj/kernel.asm	/^c0104be2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104be5	obj/kernel.asm	/^c0104be5:	68 ee 4d 11 c0       	push   $0xc0114dee$/;"	l
c0104bea	obj/kernel.asm	/^c0104bea:	e8 7b b7 ff ff       	call   c010036a <cprintf>$/;"	l
c0104bef	obj/kernel.asm	/^c0104bef:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104bf2	obj/kernel.asm	/^c0104bf2:	c9                   	leave  $/;"	l
c0104bf3	obj/kernel.asm	/^c0104bf3:	c3                   	ret    $/;"	l
c0104bf4	obj/kernel.asm	/^c0104bf4 <check_boot_pgdir>:$/;"	l
c0104bf4	obj/kernel.asm	/^c0104bf4:	55                   	push   %ebp$/;"	l
c0104bf5	obj/kernel.asm	/^c0104bf5:	89 e5                	mov    %esp,%ebp$/;"	l
c0104bf7	obj/kernel.asm	/^c0104bf7:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0104bfa	obj/kernel.asm	/^c0104bfa:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0104c01	obj/kernel.asm	/^c0104c01:	e9 a3 00 00 00       	jmp    c0104ca9 <check_boot_pgdir+0xb5>$/;"	l
c0104c06	obj/kernel.asm	/^c0104c06:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104c09	obj/kernel.asm	/^c0104c09:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0104c0c	obj/kernel.asm	/^c0104c0c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104c0f	obj/kernel.asm	/^c0104c0f:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0104c12	obj/kernel.asm	/^c0104c12:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0104c15	obj/kernel.asm	/^c0104c15:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c0104c1a	obj/kernel.asm	/^c0104c1a:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c0104c1d	obj/kernel.asm	/^c0104c1d:	72 17                	jb     c0104c36 <check_boot_pgdir+0x42>$/;"	l
c0104c1f	obj/kernel.asm	/^c0104c1f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0104c22	obj/kernel.asm	/^c0104c22:	68 c0 49 11 c0       	push   $0xc01149c0$/;"	l
c0104c27	obj/kernel.asm	/^c0104c27:	68 b7 02 00 00       	push   $0x2b7$/;"	l
c0104c2c	obj/kernel.asm	/^c0104c2c:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104c31	obj/kernel.asm	/^c0104c31:	e8 99 b8 ff ff       	call   c01004cf <__panic>$/;"	l
c0104c36	obj/kernel.asm	/^c0104c36:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0104c39	obj/kernel.asm	/^c0104c39:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0104c3e	obj/kernel.asm	/^c0104c3e:	89 c2                	mov    %eax,%edx$/;"	l
c0104c40	obj/kernel.asm	/^c0104c40:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0104c45	obj/kernel.asm	/^c0104c45:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0104c48	obj/kernel.asm	/^c0104c48:	6a 00                	push   $0x0$/;"	l
c0104c4a	obj/kernel.asm	/^c0104c4a:	52                   	push   %edx$/;"	l
c0104c4b	obj/kernel.asm	/^c0104c4b:	50                   	push   %eax$/;"	l
c0104c4c	obj/kernel.asm	/^c0104c4c:	e8 b6 f2 ff ff       	call   c0103f07 <get_pte>$/;"	l
c0104c51	obj/kernel.asm	/^c0104c51:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104c54	obj/kernel.asm	/^c0104c54:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0104c57	obj/kernel.asm	/^c0104c57:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0104c5b	obj/kernel.asm	/^c0104c5b:	75 19                	jne    c0104c76 <check_boot_pgdir+0x82>$/;"	l
c0104c5d	obj/kernel.asm	/^c0104c5d:	68 08 4e 11 c0       	push   $0xc0114e08$/;"	l
c0104c62	obj/kernel.asm	/^c0104c62:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104c67	obj/kernel.asm	/^c0104c67:	68 b7 02 00 00       	push   $0x2b7$/;"	l
c0104c6c	obj/kernel.asm	/^c0104c6c:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104c71	obj/kernel.asm	/^c0104c71:	e8 59 b8 ff ff       	call   c01004cf <__panic>$/;"	l
c0104c76	obj/kernel.asm	/^c0104c76:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0104c79	obj/kernel.asm	/^c0104c79:	8b 00                	mov    (%eax),%eax$/;"	l
c0104c7b	obj/kernel.asm	/^c0104c7b:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104c80	obj/kernel.asm	/^c0104c80:	89 c2                	mov    %eax,%edx$/;"	l
c0104c82	obj/kernel.asm	/^c0104c82:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0104c85	obj/kernel.asm	/^c0104c85:	39 c2                	cmp    %eax,%edx$/;"	l
c0104c87	obj/kernel.asm	/^c0104c87:	74 19                	je     c0104ca2 <check_boot_pgdir+0xae>$/;"	l
c0104c89	obj/kernel.asm	/^c0104c89:	68 45 4e 11 c0       	push   $0xc0114e45$/;"	l
c0104c8e	obj/kernel.asm	/^c0104c8e:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104c93	obj/kernel.asm	/^c0104c93:	68 b8 02 00 00       	push   $0x2b8$/;"	l
c0104c98	obj/kernel.asm	/^c0104c98:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104c9d	obj/kernel.asm	/^c0104c9d:	e8 2d b8 ff ff       	call   c01004cf <__panic>$/;"	l
c0104ca2	obj/kernel.asm	/^c0104ca2:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
c0104ca9	obj/kernel.asm	/^c0104ca9:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0104cac	obj/kernel.asm	/^c0104cac:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c0104cb1	obj/kernel.asm	/^c0104cb1:	39 c2                	cmp    %eax,%edx$/;"	l
c0104cb3	obj/kernel.asm	/^c0104cb3:	0f 82 4d ff ff ff    	jb     c0104c06 <check_boot_pgdir+0x12>$/;"	l
c0104cb9	obj/kernel.asm	/^c0104cb9:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0104cbe	obj/kernel.asm	/^c0104cbe:	05 ac 0f 00 00       	add    $0xfac,%eax$/;"	l
c0104cc3	obj/kernel.asm	/^c0104cc3:	8b 00                	mov    (%eax),%eax$/;"	l
c0104cc5	obj/kernel.asm	/^c0104cc5:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104cca	obj/kernel.asm	/^c0104cca:	89 c2                	mov    %eax,%edx$/;"	l
c0104ccc	obj/kernel.asm	/^c0104ccc:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0104cd1	obj/kernel.asm	/^c0104cd1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0104cd4	obj/kernel.asm	/^c0104cd4:	81 7d e4 ff ff ff bf 	cmpl   $0xbfffffff,-0x1c(%ebp)$/;"	l
c0104cdb	obj/kernel.asm	/^c0104cdb:	77 17                	ja     c0104cf4 <check_boot_pgdir+0x100>$/;"	l
c0104cdd	obj/kernel.asm	/^c0104cdd:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0104ce0	obj/kernel.asm	/^c0104ce0:	68 64 4a 11 c0       	push   $0xc0114a64$/;"	l
c0104ce5	obj/kernel.asm	/^c0104ce5:	68 bb 02 00 00       	push   $0x2bb$/;"	l
c0104cea	obj/kernel.asm	/^c0104cea:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104cef	obj/kernel.asm	/^c0104cef:	e8 db b7 ff ff       	call   c01004cf <__panic>$/;"	l
c0104cf4	obj/kernel.asm	/^c0104cf4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0104cf7	obj/kernel.asm	/^c0104cf7:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0104cfc	obj/kernel.asm	/^c0104cfc:	39 c2                	cmp    %eax,%edx$/;"	l
c0104cfe	obj/kernel.asm	/^c0104cfe:	74 19                	je     c0104d19 <check_boot_pgdir+0x125>$/;"	l
c0104d00	obj/kernel.asm	/^c0104d00:	68 5c 4e 11 c0       	push   $0xc0114e5c$/;"	l
c0104d05	obj/kernel.asm	/^c0104d05:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104d0a	obj/kernel.asm	/^c0104d0a:	68 bb 02 00 00       	push   $0x2bb$/;"	l
c0104d0f	obj/kernel.asm	/^c0104d0f:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104d14	obj/kernel.asm	/^c0104d14:	e8 b6 b7 ff ff       	call   c01004cf <__panic>$/;"	l
c0104d19	obj/kernel.asm	/^c0104d19:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0104d1e	obj/kernel.asm	/^c0104d1e:	8b 00                	mov    (%eax),%eax$/;"	l
c0104d20	obj/kernel.asm	/^c0104d20:	85 c0                	test   %eax,%eax$/;"	l
c0104d22	obj/kernel.asm	/^c0104d22:	74 19                	je     c0104d3d <check_boot_pgdir+0x149>$/;"	l
c0104d24	obj/kernel.asm	/^c0104d24:	68 90 4e 11 c0       	push   $0xc0114e90$/;"	l
c0104d29	obj/kernel.asm	/^c0104d29:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104d2e	obj/kernel.asm	/^c0104d2e:	68 bd 02 00 00       	push   $0x2bd$/;"	l
c0104d33	obj/kernel.asm	/^c0104d33:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104d38	obj/kernel.asm	/^c0104d38:	e8 92 b7 ff ff       	call   c01004cf <__panic>$/;"	l
c0104d3d	obj/kernel.asm	/^c0104d3d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104d40	obj/kernel.asm	/^c0104d40:	6a 01                	push   $0x1$/;"	l
c0104d42	obj/kernel.asm	/^c0104d42:	e8 c7 ea ff ff       	call   c010380e <alloc_pages>$/;"	l
c0104d47	obj/kernel.asm	/^c0104d47:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104d4a	obj/kernel.asm	/^c0104d4a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0104d4d	obj/kernel.asm	/^c0104d4d:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0104d52	obj/kernel.asm	/^c0104d52:	6a 02                	push   $0x2$/;"	l
c0104d54	obj/kernel.asm	/^c0104d54:	68 00 01 00 00       	push   $0x100$/;"	l
c0104d59	obj/kernel.asm	/^c0104d59:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104d5c	obj/kernel.asm	/^c0104d5c:	50                   	push   %eax$/;"	l
c0104d5d	obj/kernel.asm	/^c0104d5d:	e8 52 f7 ff ff       	call   c01044b4 <page_insert>$/;"	l
c0104d62	obj/kernel.asm	/^c0104d62:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104d65	obj/kernel.asm	/^c0104d65:	85 c0                	test   %eax,%eax$/;"	l
c0104d67	obj/kernel.asm	/^c0104d67:	74 19                	je     c0104d82 <check_boot_pgdir+0x18e>$/;"	l
c0104d69	obj/kernel.asm	/^c0104d69:	68 a4 4e 11 c0       	push   $0xc0114ea4$/;"	l
c0104d6e	obj/kernel.asm	/^c0104d6e:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104d73	obj/kernel.asm	/^c0104d73:	68 c1 02 00 00       	push   $0x2c1$/;"	l
c0104d78	obj/kernel.asm	/^c0104d78:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104d7d	obj/kernel.asm	/^c0104d7d:	e8 4d b7 ff ff       	call   c01004cf <__panic>$/;"	l
c0104d82	obj/kernel.asm	/^c0104d82:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104d85	obj/kernel.asm	/^c0104d85:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104d88	obj/kernel.asm	/^c0104d88:	e8 7a e8 ff ff       	call   c0103607 <page_ref>$/;"	l
c0104d8d	obj/kernel.asm	/^c0104d8d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104d90	obj/kernel.asm	/^c0104d90:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0104d93	obj/kernel.asm	/^c0104d93:	74 19                	je     c0104dae <check_boot_pgdir+0x1ba>$/;"	l
c0104d95	obj/kernel.asm	/^c0104d95:	68 d2 4e 11 c0       	push   $0xc0114ed2$/;"	l
c0104d9a	obj/kernel.asm	/^c0104d9a:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104d9f	obj/kernel.asm	/^c0104d9f:	68 c2 02 00 00       	push   $0x2c2$/;"	l
c0104da4	obj/kernel.asm	/^c0104da4:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104da9	obj/kernel.asm	/^c0104da9:	e8 21 b7 ff ff       	call   c01004cf <__panic>$/;"	l
c0104dae	obj/kernel.asm	/^c0104dae:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0104db3	obj/kernel.asm	/^c0104db3:	6a 02                	push   $0x2$/;"	l
c0104db5	obj/kernel.asm	/^c0104db5:	68 00 11 00 00       	push   $0x1100$/;"	l
c0104dba	obj/kernel.asm	/^c0104dba:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104dbd	obj/kernel.asm	/^c0104dbd:	50                   	push   %eax$/;"	l
c0104dbe	obj/kernel.asm	/^c0104dbe:	e8 f1 f6 ff ff       	call   c01044b4 <page_insert>$/;"	l
c0104dc3	obj/kernel.asm	/^c0104dc3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104dc6	obj/kernel.asm	/^c0104dc6:	85 c0                	test   %eax,%eax$/;"	l
c0104dc8	obj/kernel.asm	/^c0104dc8:	74 19                	je     c0104de3 <check_boot_pgdir+0x1ef>$/;"	l
c0104dca	obj/kernel.asm	/^c0104dca:	68 e4 4e 11 c0       	push   $0xc0114ee4$/;"	l
c0104dcf	obj/kernel.asm	/^c0104dcf:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104dd4	obj/kernel.asm	/^c0104dd4:	68 c3 02 00 00       	push   $0x2c3$/;"	l
c0104dd9	obj/kernel.asm	/^c0104dd9:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104dde	obj/kernel.asm	/^c0104dde:	e8 ec b6 ff ff       	call   c01004cf <__panic>$/;"	l
c0104de3	obj/kernel.asm	/^c0104de3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104de6	obj/kernel.asm	/^c0104de6:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104de9	obj/kernel.asm	/^c0104de9:	e8 19 e8 ff ff       	call   c0103607 <page_ref>$/;"	l
c0104dee	obj/kernel.asm	/^c0104dee:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104df1	obj/kernel.asm	/^c0104df1:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0104df4	obj/kernel.asm	/^c0104df4:	74 19                	je     c0104e0f <check_boot_pgdir+0x21b>$/;"	l
c0104df6	obj/kernel.asm	/^c0104df6:	68 1b 4f 11 c0       	push   $0xc0114f1b$/;"	l
c0104dfb	obj/kernel.asm	/^c0104dfb:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104e00	obj/kernel.asm	/^c0104e00:	68 c4 02 00 00       	push   $0x2c4$/;"	l
c0104e05	obj/kernel.asm	/^c0104e05:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104e0a	obj/kernel.asm	/^c0104e0a:	e8 c0 b6 ff ff       	call   c01004cf <__panic>$/;"	l
c0104e0f	obj/kernel.asm	/^c0104e0f:	c7 45 dc 2c 4f 11 c0 	movl   $0xc0114f2c,-0x24(%ebp)$/;"	l
c0104e16	obj/kernel.asm	/^c0104e16:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104e19	obj/kernel.asm	/^c0104e19:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0104e1c	obj/kernel.asm	/^c0104e1c:	68 00 01 00 00       	push   $0x100$/;"	l
c0104e21	obj/kernel.asm	/^c0104e21:	e8 90 e6 00 00       	call   c01134b6 <strcpy>$/;"	l
c0104e26	obj/kernel.asm	/^c0104e26:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104e29	obj/kernel.asm	/^c0104e29:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104e2c	obj/kernel.asm	/^c0104e2c:	68 00 11 00 00       	push   $0x1100$/;"	l
c0104e31	obj/kernel.asm	/^c0104e31:	68 00 01 00 00       	push   $0x100$/;"	l
c0104e36	obj/kernel.asm	/^c0104e36:	e8 f5 e6 00 00       	call   c0113530 <strcmp>$/;"	l
c0104e3b	obj/kernel.asm	/^c0104e3b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104e3e	obj/kernel.asm	/^c0104e3e:	85 c0                	test   %eax,%eax$/;"	l
c0104e40	obj/kernel.asm	/^c0104e40:	74 19                	je     c0104e5b <check_boot_pgdir+0x267>$/;"	l
c0104e42	obj/kernel.asm	/^c0104e42:	68 44 4f 11 c0       	push   $0xc0114f44$/;"	l
c0104e47	obj/kernel.asm	/^c0104e47:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104e4c	obj/kernel.asm	/^c0104e4c:	68 c8 02 00 00       	push   $0x2c8$/;"	l
c0104e51	obj/kernel.asm	/^c0104e51:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104e56	obj/kernel.asm	/^c0104e56:	e8 74 b6 ff ff       	call   c01004cf <__panic>$/;"	l
c0104e5b	obj/kernel.asm	/^c0104e5b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104e5e	obj/kernel.asm	/^c0104e5e:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104e61	obj/kernel.asm	/^c0104e61:	e8 06 e7 ff ff       	call   c010356c <page2kva>$/;"	l
c0104e66	obj/kernel.asm	/^c0104e66:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104e69	obj/kernel.asm	/^c0104e69:	05 00 01 00 00       	add    $0x100,%eax$/;"	l
c0104e6e	obj/kernel.asm	/^c0104e6e:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0104e71	obj/kernel.asm	/^c0104e71:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104e74	obj/kernel.asm	/^c0104e74:	68 00 01 00 00       	push   $0x100$/;"	l
c0104e79	obj/kernel.asm	/^c0104e79:	e8 b7 e5 00 00       	call   c0113435 <strlen>$/;"	l
c0104e7e	obj/kernel.asm	/^c0104e7e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104e81	obj/kernel.asm	/^c0104e81:	85 c0                	test   %eax,%eax$/;"	l
c0104e83	obj/kernel.asm	/^c0104e83:	74 19                	je     c0104e9e <check_boot_pgdir+0x2aa>$/;"	l
c0104e85	obj/kernel.asm	/^c0104e85:	68 7c 4f 11 c0       	push   $0xc0114f7c$/;"	l
c0104e8a	obj/kernel.asm	/^c0104e8a:	68 ad 4a 11 c0       	push   $0xc0114aad$/;"	l
c0104e8f	obj/kernel.asm	/^c0104e8f:	68 cb 02 00 00       	push   $0x2cb$/;"	l
c0104e94	obj/kernel.asm	/^c0104e94:	68 88 4a 11 c0       	push   $0xc0114a88$/;"	l
c0104e99	obj/kernel.asm	/^c0104e99:	e8 31 b6 ff ff       	call   c01004cf <__panic>$/;"	l
c0104e9e	obj/kernel.asm	/^c0104e9e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104ea1	obj/kernel.asm	/^c0104ea1:	6a 01                	push   $0x1$/;"	l
c0104ea3	obj/kernel.asm	/^c0104ea3:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0104ea6	obj/kernel.asm	/^c0104ea6:	e8 cf e9 ff ff       	call   c010387a <free_pages>$/;"	l
c0104eab	obj/kernel.asm	/^c0104eab:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104eae	obj/kernel.asm	/^c0104eae:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0104eb3	obj/kernel.asm	/^c0104eb3:	8b 00                	mov    (%eax),%eax$/;"	l
c0104eb5	obj/kernel.asm	/^c0104eb5:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0104eba	obj/kernel.asm	/^c0104eba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104ebd	obj/kernel.asm	/^c0104ebd:	50                   	push   %eax$/;"	l
c0104ebe	obj/kernel.asm	/^c0104ebe:	e8 62 e6 ff ff       	call   c0103525 <pa2page>$/;"	l
c0104ec3	obj/kernel.asm	/^c0104ec3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ec6	obj/kernel.asm	/^c0104ec6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0104ec9	obj/kernel.asm	/^c0104ec9:	6a 01                	push   $0x1$/;"	l
c0104ecb	obj/kernel.asm	/^c0104ecb:	50                   	push   %eax$/;"	l
c0104ecc	obj/kernel.asm	/^c0104ecc:	e8 a9 e9 ff ff       	call   c010387a <free_pages>$/;"	l
c0104ed1	obj/kernel.asm	/^c0104ed1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104ed4	obj/kernel.asm	/^c0104ed4:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c0104ed9	obj/kernel.asm	/^c0104ed9:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0104edf	obj/kernel.asm	/^c0104edf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0104ee2	obj/kernel.asm	/^c0104ee2:	68 a0 4f 11 c0       	push   $0xc0114fa0$/;"	l
c0104ee7	obj/kernel.asm	/^c0104ee7:	e8 7e b4 ff ff       	call   c010036a <cprintf>$/;"	l
c0104eec	obj/kernel.asm	/^c0104eec:	83 c4 10             	add    $0x10,%esp$/;"	l
c0104eef	obj/kernel.asm	/^c0104eef:	c9                   	leave  $/;"	l
c0104ef0	obj/kernel.asm	/^c0104ef0:	c3                   	ret    $/;"	l
c0104ef1	obj/kernel.asm	/^c0104ef1 <perm2str>:$/;"	l
c0104ef1	obj/kernel.asm	/^c0104ef1:	55                   	push   %ebp$/;"	l
c0104ef2	obj/kernel.asm	/^c0104ef2:	89 e5                	mov    %esp,%ebp$/;"	l
c0104ef4	obj/kernel.asm	/^c0104ef4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104ef7	obj/kernel.asm	/^c0104ef7:	83 e0 04             	and    $0x4,%eax$/;"	l
c0104efa	obj/kernel.asm	/^c0104efa:	85 c0                	test   %eax,%eax$/;"	l
c0104efc	obj/kernel.asm	/^c0104efc:	74 07                	je     c0104f05 <perm2str+0x14>$/;"	l
c0104efe	obj/kernel.asm	/^c0104efe:	b8 75 00 00 00       	mov    $0x75,%eax$/;"	l
c0104f03	obj/kernel.asm	/^c0104f03:	eb 05                	jmp    c0104f0a <perm2str+0x19>$/;"	l
c0104f05	obj/kernel.asm	/^c0104f05:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c0104f0a	obj/kernel.asm	/^c0104f0a:	a2 68 f0 14 c0       	mov    %al,0xc014f068$/;"	l
c0104f0f	obj/kernel.asm	/^c0104f0f:	c6 05 69 f0 14 c0 72 	movb   $0x72,0xc014f069$/;"	l
c0104f16	obj/kernel.asm	/^c0104f16:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0104f19	obj/kernel.asm	/^c0104f19:	83 e0 02             	and    $0x2,%eax$/;"	l
c0104f1c	obj/kernel.asm	/^c0104f1c:	85 c0                	test   %eax,%eax$/;"	l
c0104f1e	obj/kernel.asm	/^c0104f1e:	74 07                	je     c0104f27 <perm2str+0x36>$/;"	l
c0104f20	obj/kernel.asm	/^c0104f20:	b8 77 00 00 00       	mov    $0x77,%eax$/;"	l
c0104f25	obj/kernel.asm	/^c0104f25:	eb 05                	jmp    c0104f2c <perm2str+0x3b>$/;"	l
c0104f27	obj/kernel.asm	/^c0104f27:	b8 2d 00 00 00       	mov    $0x2d,%eax$/;"	l
c0104f2c	obj/kernel.asm	/^c0104f2c:	a2 6a f0 14 c0       	mov    %al,0xc014f06a$/;"	l
c0104f31	obj/kernel.asm	/^c0104f31:	c6 05 6b f0 14 c0 00 	movb   $0x0,0xc014f06b$/;"	l
c0104f38	obj/kernel.asm	/^c0104f38:	b8 68 f0 14 c0       	mov    $0xc014f068,%eax$/;"	l
c0104f3d	obj/kernel.asm	/^c0104f3d:	5d                   	pop    %ebp$/;"	l
c0104f3e	obj/kernel.asm	/^c0104f3e:	c3                   	ret    $/;"	l
c0104f3f	obj/kernel.asm	/^c0104f3f <get_pgtable_items>:$/;"	l
c0104f3f	obj/kernel.asm	/^c0104f3f:	55                   	push   %ebp$/;"	l
c0104f40	obj/kernel.asm	/^c0104f40:	89 e5                	mov    %esp,%ebp$/;"	l
c0104f42	obj/kernel.asm	/^c0104f42:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0104f45	obj/kernel.asm	/^c0104f45:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104f48	obj/kernel.asm	/^c0104f48:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0104f4b	obj/kernel.asm	/^c0104f4b:	72 0a                	jb     c0104f57 <get_pgtable_items+0x18>$/;"	l
c0104f4d	obj/kernel.asm	/^c0104f4d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104f52	obj/kernel.asm	/^c0104f52:	e9 9c 00 00 00       	jmp    c0104ff3 <get_pgtable_items+0xb4>$/;"	l
c0104f57	obj/kernel.asm	/^c0104f57:	eb 04                	jmp    c0104f5d <get_pgtable_items+0x1e>$/;"	l
c0104f59	obj/kernel.asm	/^c0104f59:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0104f5d	obj/kernel.asm	/^c0104f5d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104f60	obj/kernel.asm	/^c0104f60:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0104f63	obj/kernel.asm	/^c0104f63:	73 18                	jae    c0104f7d <get_pgtable_items+0x3e>$/;"	l
c0104f65	obj/kernel.asm	/^c0104f65:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104f68	obj/kernel.asm	/^c0104f68:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0104f6f	obj/kernel.asm	/^c0104f6f:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0104f72	obj/kernel.asm	/^c0104f72:	01 d0                	add    %edx,%eax$/;"	l
c0104f74	obj/kernel.asm	/^c0104f74:	8b 00                	mov    (%eax),%eax$/;"	l
c0104f76	obj/kernel.asm	/^c0104f76:	83 e0 01             	and    $0x1,%eax$/;"	l
c0104f79	obj/kernel.asm	/^c0104f79:	85 c0                	test   %eax,%eax$/;"	l
c0104f7b	obj/kernel.asm	/^c0104f7b:	74 dc                	je     c0104f59 <get_pgtable_items+0x1a>$/;"	l
c0104f7d	obj/kernel.asm	/^c0104f7d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104f80	obj/kernel.asm	/^c0104f80:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0104f83	obj/kernel.asm	/^c0104f83:	73 69                	jae    c0104fee <get_pgtable_items+0xaf>$/;"	l
c0104f85	obj/kernel.asm	/^c0104f85:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0104f89	obj/kernel.asm	/^c0104f89:	74 08                	je     c0104f93 <get_pgtable_items+0x54>$/;"	l
c0104f8b	obj/kernel.asm	/^c0104f8b:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0104f8e	obj/kernel.asm	/^c0104f8e:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0104f91	obj/kernel.asm	/^c0104f91:	89 10                	mov    %edx,(%eax)$/;"	l
c0104f93	obj/kernel.asm	/^c0104f93:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104f96	obj/kernel.asm	/^c0104f96:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0104f99	obj/kernel.asm	/^c0104f99:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c0104f9c	obj/kernel.asm	/^c0104f9c:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0104fa3	obj/kernel.asm	/^c0104fa3:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0104fa6	obj/kernel.asm	/^c0104fa6:	01 d0                	add    %edx,%eax$/;"	l
c0104fa8	obj/kernel.asm	/^c0104fa8:	8b 00                	mov    (%eax),%eax$/;"	l
c0104faa	obj/kernel.asm	/^c0104faa:	83 e0 07             	and    $0x7,%eax$/;"	l
c0104fad	obj/kernel.asm	/^c0104fad:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0104fb0	obj/kernel.asm	/^c0104fb0:	eb 04                	jmp    c0104fb6 <get_pgtable_items+0x77>$/;"	l
c0104fb2	obj/kernel.asm	/^c0104fb2:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c0104fb6	obj/kernel.asm	/^c0104fb6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104fb9	obj/kernel.asm	/^c0104fb9:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0104fbc	obj/kernel.asm	/^c0104fbc:	73 1d                	jae    c0104fdb <get_pgtable_items+0x9c>$/;"	l
c0104fbe	obj/kernel.asm	/^c0104fbe:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0104fc1	obj/kernel.asm	/^c0104fc1:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0104fc8	obj/kernel.asm	/^c0104fc8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0104fcb	obj/kernel.asm	/^c0104fcb:	01 d0                	add    %edx,%eax$/;"	l
c0104fcd	obj/kernel.asm	/^c0104fcd:	8b 00                	mov    (%eax),%eax$/;"	l
c0104fcf	obj/kernel.asm	/^c0104fcf:	83 e0 07             	and    $0x7,%eax$/;"	l
c0104fd2	obj/kernel.asm	/^c0104fd2:	89 c2                	mov    %eax,%edx$/;"	l
c0104fd4	obj/kernel.asm	/^c0104fd4:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0104fd7	obj/kernel.asm	/^c0104fd7:	39 c2                	cmp    %eax,%edx$/;"	l
c0104fd9	obj/kernel.asm	/^c0104fd9:	74 d7                	je     c0104fb2 <get_pgtable_items+0x73>$/;"	l
c0104fdb	obj/kernel.asm	/^c0104fdb:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c0104fdf	obj/kernel.asm	/^c0104fdf:	74 08                	je     c0104fe9 <get_pgtable_items+0xaa>$/;"	l
c0104fe1	obj/kernel.asm	/^c0104fe1:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0104fe4	obj/kernel.asm	/^c0104fe4:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0104fe7	obj/kernel.asm	/^c0104fe7:	89 10                	mov    %edx,(%eax)$/;"	l
c0104fe9	obj/kernel.asm	/^c0104fe9:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0104fec	obj/kernel.asm	/^c0104fec:	eb 05                	jmp    c0104ff3 <get_pgtable_items+0xb4>$/;"	l
c0104fee	obj/kernel.asm	/^c0104fee:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0104ff3	obj/kernel.asm	/^c0104ff3:	c9                   	leave  $/;"	l
c0104ff4	obj/kernel.asm	/^c0104ff4:	c3                   	ret    $/;"	l
c0104ff5	obj/kernel.asm	/^c0104ff5 <print_pgdir>:$/;"	l
c0104ff5	obj/kernel.asm	/^c0104ff5:	55                   	push   %ebp$/;"	l
c0104ff6	obj/kernel.asm	/^c0104ff6:	89 e5                	mov    %esp,%ebp$/;"	l
c0104ff8	obj/kernel.asm	/^c0104ff8:	57                   	push   %edi$/;"	l
c0104ff9	obj/kernel.asm	/^c0104ff9:	56                   	push   %esi$/;"	l
c0104ffa	obj/kernel.asm	/^c0104ffa:	53                   	push   %ebx$/;"	l
c0104ffb	obj/kernel.asm	/^c0104ffb:	83 ec 2c             	sub    $0x2c,%esp$/;"	l
c0104ffe	obj/kernel.asm	/^c0104ffe:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105001	obj/kernel.asm	/^c0105001:	68 c0 4f 11 c0       	push   $0xc0114fc0$/;"	l
c0105006	obj/kernel.asm	/^c0105006:	e8 5f b3 ff ff       	call   c010036a <cprintf>$/;"	l
c010500b	obj/kernel.asm	/^c010500b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010500e	obj/kernel.asm	/^c010500e:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0105015	obj/kernel.asm	/^c0105015:	e9 e5 00 00 00       	jmp    c01050ff <print_pgdir+0x10a>$/;"	l
c010501a	obj/kernel.asm	/^c010501a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010501d	obj/kernel.asm	/^c010501d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105020	obj/kernel.asm	/^c0105020:	50                   	push   %eax$/;"	l
c0105021	obj/kernel.asm	/^c0105021:	e8 cb fe ff ff       	call   c0104ef1 <perm2str>$/;"	l
c0105026	obj/kernel.asm	/^c0105026:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105029	obj/kernel.asm	/^c0105029:	89 c7                	mov    %eax,%edi$/;"	l
c010502b	obj/kernel.asm	/^c010502b:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010502e	obj/kernel.asm	/^c010502e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105031	obj/kernel.asm	/^c0105031:	29 c2                	sub    %eax,%edx$/;"	l
c0105033	obj/kernel.asm	/^c0105033:	89 d0                	mov    %edx,%eax$/;"	l
c0105035	obj/kernel.asm	/^c0105035:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c0105038	obj/kernel.asm	/^c0105038:	89 c3                	mov    %eax,%ebx$/;"	l
c010503a	obj/kernel.asm	/^c010503a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010503d	obj/kernel.asm	/^c010503d:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c0105040	obj/kernel.asm	/^c0105040:	89 c1                	mov    %eax,%ecx$/;"	l
c0105042	obj/kernel.asm	/^c0105042:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105045	obj/kernel.asm	/^c0105045:	c1 e0 16             	shl    $0x16,%eax$/;"	l
c0105048	obj/kernel.asm	/^c0105048:	89 c2                	mov    %eax,%edx$/;"	l
c010504a	obj/kernel.asm	/^c010504a:	8b 75 dc             	mov    -0x24(%ebp),%esi$/;"	l
c010504d	obj/kernel.asm	/^c010504d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105050	obj/kernel.asm	/^c0105050:	29 c6                	sub    %eax,%esi$/;"	l
c0105052	obj/kernel.asm	/^c0105052:	89 f0                	mov    %esi,%eax$/;"	l
c0105054	obj/kernel.asm	/^c0105054:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105057	obj/kernel.asm	/^c0105057:	57                   	push   %edi$/;"	l
c0105058	obj/kernel.asm	/^c0105058:	53                   	push   %ebx$/;"	l
c0105059	obj/kernel.asm	/^c0105059:	51                   	push   %ecx$/;"	l
c010505a	obj/kernel.asm	/^c010505a:	52                   	push   %edx$/;"	l
c010505b	obj/kernel.asm	/^c010505b:	50                   	push   %eax$/;"	l
c010505c	obj/kernel.asm	/^c010505c:	68 f1 4f 11 c0       	push   $0xc0114ff1$/;"	l
c0105061	obj/kernel.asm	/^c0105061:	e8 04 b3 ff ff       	call   c010036a <cprintf>$/;"	l
c0105066	obj/kernel.asm	/^c0105066:	83 c4 20             	add    $0x20,%esp$/;"	l
c0105069	obj/kernel.asm	/^c0105069:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010506c	obj/kernel.asm	/^c010506c:	c1 e0 0a             	shl    $0xa,%eax$/;"	l
c010506f	obj/kernel.asm	/^c010506f:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0105072	obj/kernel.asm	/^c0105072:	eb 4f                	jmp    c01050c3 <print_pgdir+0xce>$/;"	l
c0105074	obj/kernel.asm	/^c0105074:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105077	obj/kernel.asm	/^c0105077:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010507a	obj/kernel.asm	/^c010507a:	50                   	push   %eax$/;"	l
c010507b	obj/kernel.asm	/^c010507b:	e8 71 fe ff ff       	call   c0104ef1 <perm2str>$/;"	l
c0105080	obj/kernel.asm	/^c0105080:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105083	obj/kernel.asm	/^c0105083:	89 c7                	mov    %eax,%edi$/;"	l
c0105085	obj/kernel.asm	/^c0105085:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0105088	obj/kernel.asm	/^c0105088:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010508b	obj/kernel.asm	/^c010508b:	29 c2                	sub    %eax,%edx$/;"	l
c010508d	obj/kernel.asm	/^c010508d:	89 d0                	mov    %edx,%eax$/;"	l
c010508f	obj/kernel.asm	/^c010508f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0105092	obj/kernel.asm	/^c0105092:	89 c3                	mov    %eax,%ebx$/;"	l
c0105094	obj/kernel.asm	/^c0105094:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0105097	obj/kernel.asm	/^c0105097:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010509a	obj/kernel.asm	/^c010509a:	89 c1                	mov    %eax,%ecx$/;"	l
c010509c	obj/kernel.asm	/^c010509c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010509f	obj/kernel.asm	/^c010509f:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01050a2	obj/kernel.asm	/^c01050a2:	89 c2                	mov    %eax,%edx$/;"	l
c01050a4	obj/kernel.asm	/^c01050a4:	8b 75 d4             	mov    -0x2c(%ebp),%esi$/;"	l
c01050a7	obj/kernel.asm	/^c01050a7:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01050aa	obj/kernel.asm	/^c01050aa:	29 c6                	sub    %eax,%esi$/;"	l
c01050ac	obj/kernel.asm	/^c01050ac:	89 f0                	mov    %esi,%eax$/;"	l
c01050ae	obj/kernel.asm	/^c01050ae:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01050b1	obj/kernel.asm	/^c01050b1:	57                   	push   %edi$/;"	l
c01050b2	obj/kernel.asm	/^c01050b2:	53                   	push   %ebx$/;"	l
c01050b3	obj/kernel.asm	/^c01050b3:	51                   	push   %ecx$/;"	l
c01050b4	obj/kernel.asm	/^c01050b4:	52                   	push   %edx$/;"	l
c01050b5	obj/kernel.asm	/^c01050b5:	50                   	push   %eax$/;"	l
c01050b6	obj/kernel.asm	/^c01050b6:	68 10 50 11 c0       	push   $0xc0115010$/;"	l
c01050bb	obj/kernel.asm	/^c01050bb:	e8 aa b2 ff ff       	call   c010036a <cprintf>$/;"	l
c01050c0	obj/kernel.asm	/^c01050c0:	83 c4 20             	add    $0x20,%esp$/;"	l
c01050c3	obj/kernel.asm	/^c01050c3:	be 00 00 c0 fa       	mov    $0xfac00000,%esi$/;"	l
c01050c8	obj/kernel.asm	/^c01050c8:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01050cb	obj/kernel.asm	/^c01050cb:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01050ce	obj/kernel.asm	/^c01050ce:	89 d3                	mov    %edx,%ebx$/;"	l
c01050d0	obj/kernel.asm	/^c01050d0:	c1 e3 0a             	shl    $0xa,%ebx$/;"	l
c01050d3	obj/kernel.asm	/^c01050d3:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01050d6	obj/kernel.asm	/^c01050d6:	89 d1                	mov    %edx,%ecx$/;"	l
c01050d8	obj/kernel.asm	/^c01050d8:	c1 e1 0a             	shl    $0xa,%ecx$/;"	l
c01050db	obj/kernel.asm	/^c01050db:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01050de	obj/kernel.asm	/^c01050de:	8d 55 d4             	lea    -0x2c(%ebp),%edx$/;"	l
c01050e1	obj/kernel.asm	/^c01050e1:	52                   	push   %edx$/;"	l
c01050e2	obj/kernel.asm	/^c01050e2:	8d 55 d8             	lea    -0x28(%ebp),%edx$/;"	l
c01050e5	obj/kernel.asm	/^c01050e5:	52                   	push   %edx$/;"	l
c01050e6	obj/kernel.asm	/^c01050e6:	56                   	push   %esi$/;"	l
c01050e7	obj/kernel.asm	/^c01050e7:	50                   	push   %eax$/;"	l
c01050e8	obj/kernel.asm	/^c01050e8:	53                   	push   %ebx$/;"	l
c01050e9	obj/kernel.asm	/^c01050e9:	51                   	push   %ecx$/;"	l
c01050ea	obj/kernel.asm	/^c01050ea:	e8 50 fe ff ff       	call   c0104f3f <get_pgtable_items>$/;"	l
c01050ef	obj/kernel.asm	/^c01050ef:	83 c4 20             	add    $0x20,%esp$/;"	l
c01050f2	obj/kernel.asm	/^c01050f2:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01050f5	obj/kernel.asm	/^c01050f5:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01050f9	obj/kernel.asm	/^c01050f9:	0f 85 75 ff ff ff    	jne    c0105074 <print_pgdir+0x7f>$/;"	l
c01050ff	obj/kernel.asm	/^c01050ff:	b9 00 b0 fe fa       	mov    $0xfafeb000,%ecx$/;"	l
c0105104	obj/kernel.asm	/^c0105104:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105107	obj/kernel.asm	/^c0105107:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010510a	obj/kernel.asm	/^c010510a:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c010510d	obj/kernel.asm	/^c010510d:	52                   	push   %edx$/;"	l
c010510e	obj/kernel.asm	/^c010510e:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
c0105111	obj/kernel.asm	/^c0105111:	52                   	push   %edx$/;"	l
c0105112	obj/kernel.asm	/^c0105112:	51                   	push   %ecx$/;"	l
c0105113	obj/kernel.asm	/^c0105113:	50                   	push   %eax$/;"	l
c0105114	obj/kernel.asm	/^c0105114:	68 00 04 00 00       	push   $0x400$/;"	l
c0105119	obj/kernel.asm	/^c0105119:	6a 00                	push   $0x0$/;"	l
c010511b	obj/kernel.asm	/^c010511b:	e8 1f fe ff ff       	call   c0104f3f <get_pgtable_items>$/;"	l
c0105120	obj/kernel.asm	/^c0105120:	83 c4 20             	add    $0x20,%esp$/;"	l
c0105123	obj/kernel.asm	/^c0105123:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105126	obj/kernel.asm	/^c0105126:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010512a	obj/kernel.asm	/^c010512a:	0f 85 ea fe ff ff    	jne    c010501a <print_pgdir+0x25>$/;"	l
c0105130	obj/kernel.asm	/^c0105130:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105133	obj/kernel.asm	/^c0105133:	68 34 50 11 c0       	push   $0xc0115034$/;"	l
c0105138	obj/kernel.asm	/^c0105138:	e8 2d b2 ff ff       	call   c010036a <cprintf>$/;"	l
c010513d	obj/kernel.asm	/^c010513d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105140	obj/kernel.asm	/^c0105140:	8d 65 f4             	lea    -0xc(%ebp),%esp$/;"	l
c0105143	obj/kernel.asm	/^c0105143:	5b                   	pop    %ebx$/;"	l
c0105144	obj/kernel.asm	/^c0105144:	5e                   	pop    %esi$/;"	l
c0105145	obj/kernel.asm	/^c0105145:	5f                   	pop    %edi$/;"	l
c0105146	obj/kernel.asm	/^c0105146:	5d                   	pop    %ebp$/;"	l
c0105147	obj/kernel.asm	/^c0105147:	c3                   	ret    $/;"	l
c0105148	obj/kernel.asm	/^c0105148 <mm_count>:$/;"	l
c0105148	obj/kernel.asm	/^c0105148:	55                   	push   %ebp$/;"	l
c0105149	obj/kernel.asm	/^c0105149:	89 e5                	mov    %esp,%ebp$/;"	l
c010514b	obj/kernel.asm	/^c010514b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010514e	obj/kernel.asm	/^c010514e:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0105151	obj/kernel.asm	/^c0105151:	5d                   	pop    %ebp$/;"	l
c0105152	obj/kernel.asm	/^c0105152:	c3                   	ret    $/;"	l
c0105153	obj/kernel.asm	/^c0105153 <set_mm_count>:$/;"	l
c0105153	obj/kernel.asm	/^c0105153:	55                   	push   %ebp$/;"	l
c0105154	obj/kernel.asm	/^c0105154:	89 e5                	mov    %esp,%ebp$/;"	l
c0105156	obj/kernel.asm	/^c0105156:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105159	obj/kernel.asm	/^c0105159:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010515c	obj/kernel.asm	/^c010515c:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010515f	obj/kernel.asm	/^c010515f:	5d                   	pop    %ebp$/;"	l
c0105160	obj/kernel.asm	/^c0105160:	c3                   	ret    $/;"	l
c0105161	obj/kernel.asm	/^c0105161 <pa2page>:$/;"	l
c0105161	obj/kernel.asm	/^c0105161:	55                   	push   %ebp$/;"	l
c0105162	obj/kernel.asm	/^c0105162:	89 e5                	mov    %esp,%ebp$/;"	l
c0105164	obj/kernel.asm	/^c0105164:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105167	obj/kernel.asm	/^c0105167:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010516a	obj/kernel.asm	/^c010516a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010516d	obj/kernel.asm	/^c010516d:	89 c2                	mov    %eax,%edx$/;"	l
c010516f	obj/kernel.asm	/^c010516f:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c0105174	obj/kernel.asm	/^c0105174:	39 c2                	cmp    %eax,%edx$/;"	l
c0105176	obj/kernel.asm	/^c0105176:	72 14                	jb     c010518c <pa2page+0x2b>$/;"	l
c0105178	obj/kernel.asm	/^c0105178:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010517b	obj/kernel.asm	/^c010517b:	68 68 50 11 c0       	push   $0xc0115068$/;"	l
c0105180	obj/kernel.asm	/^c0105180:	6a 5e                	push   $0x5e$/;"	l
c0105182	obj/kernel.asm	/^c0105182:	68 87 50 11 c0       	push   $0xc0115087$/;"	l
c0105187	obj/kernel.asm	/^c0105187:	e8 43 b3 ff ff       	call   c01004cf <__panic>$/;"	l
c010518c	obj/kernel.asm	/^c010518c:	8b 0d ac 21 15 c0    	mov    0xc01521ac,%ecx$/;"	l
c0105192	obj/kernel.asm	/^c0105192:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105195	obj/kernel.asm	/^c0105195:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0105198	obj/kernel.asm	/^c0105198:	89 c2                	mov    %eax,%edx$/;"	l
c010519a	obj/kernel.asm	/^c010519a:	89 d0                	mov    %edx,%eax$/;"	l
c010519c	obj/kernel.asm	/^c010519c:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010519f	obj/kernel.asm	/^c010519f:	01 d0                	add    %edx,%eax$/;"	l
c01051a1	obj/kernel.asm	/^c01051a1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01051a4	obj/kernel.asm	/^c01051a4:	01 c8                	add    %ecx,%eax$/;"	l
c01051a6	obj/kernel.asm	/^c01051a6:	c9                   	leave  $/;"	l
c01051a7	obj/kernel.asm	/^c01051a7:	c3                   	ret    $/;"	l
c01051a8	obj/kernel.asm	/^c01051a8 <mm_create>:$/;"	l
c01051a8	obj/kernel.asm	/^c01051a8:	55                   	push   %ebp$/;"	l
c01051a9	obj/kernel.asm	/^c01051a9:	89 e5                	mov    %esp,%ebp$/;"	l
c01051ab	obj/kernel.asm	/^c01051ab:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01051ae	obj/kernel.asm	/^c01051ae:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01051b1	obj/kernel.asm	/^c01051b1:	6a 2c                	push   $0x2c$/;"	l
c01051b3	obj/kernel.asm	/^c01051b3:	e8 3e 22 00 00       	call   c01073f6 <kmalloc>$/;"	l
c01051b8	obj/kernel.asm	/^c01051b8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01051bb	obj/kernel.asm	/^c01051bb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01051be	obj/kernel.asm	/^c01051be:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01051c2	obj/kernel.asm	/^c01051c2:	74 7f                	je     c0105243 <mm_create+0x9b>$/;"	l
c01051c4	obj/kernel.asm	/^c01051c4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01051c7	obj/kernel.asm	/^c01051c7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01051ca	obj/kernel.asm	/^c01051ca:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01051cd	obj/kernel.asm	/^c01051cd:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01051d0	obj/kernel.asm	/^c01051d0:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01051d3	obj/kernel.asm	/^c01051d3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01051d6	obj/kernel.asm	/^c01051d6:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01051d9	obj/kernel.asm	/^c01051d9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01051dc	obj/kernel.asm	/^c01051dc:	89 10                	mov    %edx,(%eax)$/;"	l
c01051de	obj/kernel.asm	/^c01051de:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01051e1	obj/kernel.asm	/^c01051e1:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c01051e8	obj/kernel.asm	/^c01051e8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01051eb	obj/kernel.asm	/^c01051eb:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c01051f2	obj/kernel.asm	/^c01051f2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01051f5	obj/kernel.asm	/^c01051f5:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c01051fc	obj/kernel.asm	/^c01051fc:	a1 70 f0 14 c0       	mov    0xc014f070,%eax$/;"	l
c0105201	obj/kernel.asm	/^c0105201:	85 c0                	test   %eax,%eax$/;"	l
c0105203	obj/kernel.asm	/^c0105203:	74 10                	je     c0105215 <mm_create+0x6d>$/;"	l
c0105205	obj/kernel.asm	/^c0105205:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105208	obj/kernel.asm	/^c0105208:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010520b	obj/kernel.asm	/^c010520b:	e8 f5 11 00 00       	call   c0106405 <swap_init_mm>$/;"	l
c0105210	obj/kernel.asm	/^c0105210:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105213	obj/kernel.asm	/^c0105213:	eb 0a                	jmp    c010521f <mm_create+0x77>$/;"	l
c0105215	obj/kernel.asm	/^c0105215:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105218	obj/kernel.asm	/^c0105218:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c010521f	obj/kernel.asm	/^c010521f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105222	obj/kernel.asm	/^c0105222:	6a 00                	push   $0x0$/;"	l
c0105224	obj/kernel.asm	/^c0105224:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0105227	obj/kernel.asm	/^c0105227:	e8 27 ff ff ff       	call   c0105153 <set_mm_count>$/;"	l
c010522c	obj/kernel.asm	/^c010522c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010522f	obj/kernel.asm	/^c010522f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105232	obj/kernel.asm	/^c0105232:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0105235	obj/kernel.asm	/^c0105235:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105238	obj/kernel.asm	/^c0105238:	6a 01                	push   $0x1$/;"	l
c010523a	obj/kernel.asm	/^c010523a:	50                   	push   %eax$/;"	l
c010523b	obj/kernel.asm	/^c010523b:	e8 3d 41 00 00       	call   c010937d <sem_init>$/;"	l
c0105240	obj/kernel.asm	/^c0105240:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105243	obj/kernel.asm	/^c0105243:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105246	obj/kernel.asm	/^c0105246:	c9                   	leave  $/;"	l
c0105247	obj/kernel.asm	/^c0105247:	c3                   	ret    $/;"	l
c0105248	obj/kernel.asm	/^c0105248 <vma_create>:$/;"	l
c0105248	obj/kernel.asm	/^c0105248:	55                   	push   %ebp$/;"	l
c0105249	obj/kernel.asm	/^c0105249:	89 e5                	mov    %esp,%ebp$/;"	l
c010524b	obj/kernel.asm	/^c010524b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010524e	obj/kernel.asm	/^c010524e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105251	obj/kernel.asm	/^c0105251:	6a 18                	push   $0x18$/;"	l
c0105253	obj/kernel.asm	/^c0105253:	e8 9e 21 00 00       	call   c01073f6 <kmalloc>$/;"	l
c0105258	obj/kernel.asm	/^c0105258:	83 c4 10             	add    $0x10,%esp$/;"	l
c010525b	obj/kernel.asm	/^c010525b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010525e	obj/kernel.asm	/^c010525e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105262	obj/kernel.asm	/^c0105262:	74 1b                	je     c010527f <vma_create+0x37>$/;"	l
c0105264	obj/kernel.asm	/^c0105264:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105267	obj/kernel.asm	/^c0105267:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010526a	obj/kernel.asm	/^c010526a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010526d	obj/kernel.asm	/^c010526d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105270	obj/kernel.asm	/^c0105270:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105273	obj/kernel.asm	/^c0105273:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0105276	obj/kernel.asm	/^c0105276:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105279	obj/kernel.asm	/^c0105279:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010527c	obj/kernel.asm	/^c010527c:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010527f	obj/kernel.asm	/^c010527f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105282	obj/kernel.asm	/^c0105282:	c9                   	leave  $/;"	l
c0105283	obj/kernel.asm	/^c0105283:	c3                   	ret    $/;"	l
c0105284	obj/kernel.asm	/^c0105284 <find_vma>:$/;"	l
c0105284	obj/kernel.asm	/^c0105284:	55                   	push   %ebp$/;"	l
c0105285	obj/kernel.asm	/^c0105285:	89 e5                	mov    %esp,%ebp$/;"	l
c0105287	obj/kernel.asm	/^c0105287:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010528a	obj/kernel.asm	/^c010528a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0105291	obj/kernel.asm	/^c0105291:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0105295	obj/kernel.asm	/^c0105295:	0f 84 95 00 00 00    	je     c0105330 <find_vma+0xac>$/;"	l
c010529b	obj/kernel.asm	/^c010529b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010529e	obj/kernel.asm	/^c010529e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01052a1	obj/kernel.asm	/^c01052a1:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01052a4	obj/kernel.asm	/^c01052a4:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c01052a8	obj/kernel.asm	/^c01052a8:	74 16                	je     c01052c0 <find_vma+0x3c>$/;"	l
c01052aa	obj/kernel.asm	/^c01052aa:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01052ad	obj/kernel.asm	/^c01052ad:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01052b0	obj/kernel.asm	/^c01052b0:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01052b3	obj/kernel.asm	/^c01052b3:	77 0b                	ja     c01052c0 <find_vma+0x3c>$/;"	l
c01052b5	obj/kernel.asm	/^c01052b5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01052b8	obj/kernel.asm	/^c01052b8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01052bb	obj/kernel.asm	/^c01052bb:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01052be	obj/kernel.asm	/^c01052be:	77 61                	ja     c0105321 <find_vma+0x9d>$/;"	l
c01052c0	obj/kernel.asm	/^c01052c0:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c01052c7	obj/kernel.asm	/^c01052c7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01052ca	obj/kernel.asm	/^c01052ca:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01052cd	obj/kernel.asm	/^c01052cd:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01052d0	obj/kernel.asm	/^c01052d0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01052d3	obj/kernel.asm	/^c01052d3:	eb 28                	jmp    c01052fd <find_vma+0x79>$/;"	l
c01052d5	obj/kernel.asm	/^c01052d5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01052d8	obj/kernel.asm	/^c01052d8:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01052db	obj/kernel.asm	/^c01052db:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01052de	obj/kernel.asm	/^c01052de:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01052e1	obj/kernel.asm	/^c01052e1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01052e4	obj/kernel.asm	/^c01052e4:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01052e7	obj/kernel.asm	/^c01052e7:	77 14                	ja     c01052fd <find_vma+0x79>$/;"	l
c01052e9	obj/kernel.asm	/^c01052e9:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01052ec	obj/kernel.asm	/^c01052ec:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01052ef	obj/kernel.asm	/^c01052ef:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01052f2	obj/kernel.asm	/^c01052f2:	76 09                	jbe    c01052fd <find_vma+0x79>$/;"	l
c01052f4	obj/kernel.asm	/^c01052f4:	c7 45 f8 01 00 00 00 	movl   $0x1,-0x8(%ebp)$/;"	l
c01052fb	obj/kernel.asm	/^c01052fb:	eb 17                	jmp    c0105314 <find_vma+0x90>$/;"	l
c01052fd	obj/kernel.asm	/^c01052fd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105300	obj/kernel.asm	/^c0105300:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105303	obj/kernel.asm	/^c0105303:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105306	obj/kernel.asm	/^c0105306:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105309	obj/kernel.asm	/^c0105309:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010530c	obj/kernel.asm	/^c010530c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010530f	obj/kernel.asm	/^c010530f:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0105312	obj/kernel.asm	/^c0105312:	75 c1                	jne    c01052d5 <find_vma+0x51>$/;"	l
c0105314	obj/kernel.asm	/^c0105314:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)$/;"	l
c0105318	obj/kernel.asm	/^c0105318:	75 07                	jne    c0105321 <find_vma+0x9d>$/;"	l
c010531a	obj/kernel.asm	/^c010531a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0105321	obj/kernel.asm	/^c0105321:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0105325	obj/kernel.asm	/^c0105325:	74 09                	je     c0105330 <find_vma+0xac>$/;"	l
c0105327	obj/kernel.asm	/^c0105327:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010532a	obj/kernel.asm	/^c010532a:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010532d	obj/kernel.asm	/^c010532d:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0105330	obj/kernel.asm	/^c0105330:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0105333	obj/kernel.asm	/^c0105333:	c9                   	leave  $/;"	l
c0105334	obj/kernel.asm	/^c0105334:	c3                   	ret    $/;"	l
c0105335	obj/kernel.asm	/^c0105335 <check_vma_overlap>:$/;"	l
c0105335	obj/kernel.asm	/^c0105335:	55                   	push   %ebp$/;"	l
c0105336	obj/kernel.asm	/^c0105336:	89 e5                	mov    %esp,%ebp$/;"	l
c0105338	obj/kernel.asm	/^c0105338:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010533b	obj/kernel.asm	/^c010533b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010533e	obj/kernel.asm	/^c010533e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0105341	obj/kernel.asm	/^c0105341:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105344	obj/kernel.asm	/^c0105344:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105347	obj/kernel.asm	/^c0105347:	39 c2                	cmp    %eax,%edx$/;"	l
c0105349	obj/kernel.asm	/^c0105349:	72 16                	jb     c0105361 <check_vma_overlap+0x2c>$/;"	l
c010534b	obj/kernel.asm	/^c010534b:	68 95 50 11 c0       	push   $0xc0115095$/;"	l
c0105350	obj/kernel.asm	/^c0105350:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105355	obj/kernel.asm	/^c0105355:	6a 6b                	push   $0x6b$/;"	l
c0105357	obj/kernel.asm	/^c0105357:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c010535c	obj/kernel.asm	/^c010535c:	e8 6e b1 ff ff       	call   c01004cf <__panic>$/;"	l
c0105361	obj/kernel.asm	/^c0105361:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105364	obj/kernel.asm	/^c0105364:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0105367	obj/kernel.asm	/^c0105367:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010536a	obj/kernel.asm	/^c010536a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010536d	obj/kernel.asm	/^c010536d:	39 c2                	cmp    %eax,%edx$/;"	l
c010536f	obj/kernel.asm	/^c010536f:	76 16                	jbe    c0105387 <check_vma_overlap+0x52>$/;"	l
c0105371	obj/kernel.asm	/^c0105371:	68 d8 50 11 c0       	push   $0xc01150d8$/;"	l
c0105376	obj/kernel.asm	/^c0105376:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c010537b	obj/kernel.asm	/^c010537b:	6a 6c                	push   $0x6c$/;"	l
c010537d	obj/kernel.asm	/^c010537d:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0105382	obj/kernel.asm	/^c0105382:	e8 48 b1 ff ff       	call   c01004cf <__panic>$/;"	l
c0105387	obj/kernel.asm	/^c0105387:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010538a	obj/kernel.asm	/^c010538a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010538d	obj/kernel.asm	/^c010538d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105390	obj/kernel.asm	/^c0105390:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105393	obj/kernel.asm	/^c0105393:	39 c2                	cmp    %eax,%edx$/;"	l
c0105395	obj/kernel.asm	/^c0105395:	72 16                	jb     c01053ad <check_vma_overlap+0x78>$/;"	l
c0105397	obj/kernel.asm	/^c0105397:	68 f7 50 11 c0       	push   $0xc01150f7$/;"	l
c010539c	obj/kernel.asm	/^c010539c:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c01053a1	obj/kernel.asm	/^c01053a1:	6a 6d                	push   $0x6d$/;"	l
c01053a3	obj/kernel.asm	/^c01053a3:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c01053a8	obj/kernel.asm	/^c01053a8:	e8 22 b1 ff ff       	call   c01004cf <__panic>$/;"	l
c01053ad	obj/kernel.asm	/^c01053ad:	c9                   	leave  $/;"	l
c01053ae	obj/kernel.asm	/^c01053ae:	c3                   	ret    $/;"	l
c01053af	obj/kernel.asm	/^c01053af <insert_vma_struct>:$/;"	l
c01053af	obj/kernel.asm	/^c01053af:	55                   	push   %ebp$/;"	l
c01053b0	obj/kernel.asm	/^c01053b0:	89 e5                	mov    %esp,%ebp$/;"	l
c01053b2	obj/kernel.asm	/^c01053b2:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01053b5	obj/kernel.asm	/^c01053b5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01053b8	obj/kernel.asm	/^c01053b8:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01053bb	obj/kernel.asm	/^c01053bb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01053be	obj/kernel.asm	/^c01053be:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01053c1	obj/kernel.asm	/^c01053c1:	39 c2                	cmp    %eax,%edx$/;"	l
c01053c3	obj/kernel.asm	/^c01053c3:	72 16                	jb     c01053db <insert_vma_struct+0x2c>$/;"	l
c01053c5	obj/kernel.asm	/^c01053c5:	68 15 51 11 c0       	push   $0xc0115115$/;"	l
c01053ca	obj/kernel.asm	/^c01053ca:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c01053cf	obj/kernel.asm	/^c01053cf:	6a 74                	push   $0x74$/;"	l
c01053d1	obj/kernel.asm	/^c01053d1:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c01053d6	obj/kernel.asm	/^c01053d6:	e8 f4 b0 ff ff       	call   c01004cf <__panic>$/;"	l
c01053db	obj/kernel.asm	/^c01053db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01053de	obj/kernel.asm	/^c01053de:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01053e1	obj/kernel.asm	/^c01053e1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01053e4	obj/kernel.asm	/^c01053e4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01053e7	obj/kernel.asm	/^c01053e7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01053ea	obj/kernel.asm	/^c01053ea:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01053ed	obj/kernel.asm	/^c01053ed:	eb 21                	jmp    c0105410 <insert_vma_struct+0x61>$/;"	l
c01053ef	obj/kernel.asm	/^c01053ef:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01053f2	obj/kernel.asm	/^c01053f2:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01053f5	obj/kernel.asm	/^c01053f5:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01053f8	obj/kernel.asm	/^c01053f8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01053fb	obj/kernel.asm	/^c01053fb:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01053fe	obj/kernel.asm	/^c01053fe:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105401	obj/kernel.asm	/^c0105401:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105404	obj/kernel.asm	/^c0105404:	39 c2                	cmp    %eax,%edx$/;"	l
c0105406	obj/kernel.asm	/^c0105406:	76 02                	jbe    c010540a <insert_vma_struct+0x5b>$/;"	l
c0105408	obj/kernel.asm	/^c0105408:	eb 1d                	jmp    c0105427 <insert_vma_struct+0x78>$/;"	l
c010540a	obj/kernel.asm	/^c010540a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010540d	obj/kernel.asm	/^c010540d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105410	obj/kernel.asm	/^c0105410:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105413	obj/kernel.asm	/^c0105413:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105416	obj/kernel.asm	/^c0105416:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105419	obj/kernel.asm	/^c0105419:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010541c	obj/kernel.asm	/^c010541c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010541f	obj/kernel.asm	/^c010541f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105422	obj/kernel.asm	/^c0105422:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0105425	obj/kernel.asm	/^c0105425:	75 c8                	jne    c01053ef <insert_vma_struct+0x40>$/;"	l
c0105427	obj/kernel.asm	/^c0105427:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010542a	obj/kernel.asm	/^c010542a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010542d	obj/kernel.asm	/^c010542d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105430	obj/kernel.asm	/^c0105430:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105433	obj/kernel.asm	/^c0105433:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105436	obj/kernel.asm	/^c0105436:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105439	obj/kernel.asm	/^c0105439:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010543c	obj/kernel.asm	/^c010543c:	74 15                	je     c0105453 <insert_vma_struct+0xa4>$/;"	l
c010543e	obj/kernel.asm	/^c010543e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105441	obj/kernel.asm	/^c0105441:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105444	obj/kernel.asm	/^c0105444:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105447	obj/kernel.asm	/^c0105447:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010544a	obj/kernel.asm	/^c010544a:	50                   	push   %eax$/;"	l
c010544b	obj/kernel.asm	/^c010544b:	e8 e5 fe ff ff       	call   c0105335 <check_vma_overlap>$/;"	l
c0105450	obj/kernel.asm	/^c0105450:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105453	obj/kernel.asm	/^c0105453:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105456	obj/kernel.asm	/^c0105456:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0105459	obj/kernel.asm	/^c0105459:	74 15                	je     c0105470 <insert_vma_struct+0xc1>$/;"	l
c010545b	obj/kernel.asm	/^c010545b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010545e	obj/kernel.asm	/^c010545e:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105461	obj/kernel.asm	/^c0105461:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105464	obj/kernel.asm	/^c0105464:	50                   	push   %eax$/;"	l
c0105465	obj/kernel.asm	/^c0105465:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0105468	obj/kernel.asm	/^c0105468:	e8 c8 fe ff ff       	call   c0105335 <check_vma_overlap>$/;"	l
c010546d	obj/kernel.asm	/^c010546d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105470	obj/kernel.asm	/^c0105470:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105473	obj/kernel.asm	/^c0105473:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0105476	obj/kernel.asm	/^c0105476:	89 10                	mov    %edx,(%eax)$/;"	l
c0105478	obj/kernel.asm	/^c0105478:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010547b	obj/kernel.asm	/^c010547b:	8d 50 10             	lea    0x10(%eax),%edx$/;"	l
c010547e	obj/kernel.asm	/^c010547e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105481	obj/kernel.asm	/^c0105481:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0105484	obj/kernel.asm	/^c0105484:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0105487	obj/kernel.asm	/^c0105487:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010548a	obj/kernel.asm	/^c010548a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010548d	obj/kernel.asm	/^c010548d:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0105490	obj/kernel.asm	/^c0105490:	89 55 d0             	mov    %edx,-0x30(%ebp)$/;"	l
c0105493	obj/kernel.asm	/^c0105493:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0105496	obj/kernel.asm	/^c0105496:	89 55 cc             	mov    %edx,-0x34(%ebp)$/;"	l
c0105499	obj/kernel.asm	/^c0105499:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010549c	obj/kernel.asm	/^c010549c:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010549f	obj/kernel.asm	/^c010549f:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c01054a2	obj/kernel.asm	/^c01054a2:	89 10                	mov    %edx,(%eax)$/;"	l
c01054a4	obj/kernel.asm	/^c01054a4:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c01054a7	obj/kernel.asm	/^c01054a7:	8b 10                	mov    (%eax),%edx$/;"	l
c01054a9	obj/kernel.asm	/^c01054a9:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01054ac	obj/kernel.asm	/^c01054ac:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01054af	obj/kernel.asm	/^c01054af:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01054b2	obj/kernel.asm	/^c01054b2:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c01054b5	obj/kernel.asm	/^c01054b5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01054b8	obj/kernel.asm	/^c01054b8:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01054bb	obj/kernel.asm	/^c01054bb:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c01054be	obj/kernel.asm	/^c01054be:	89 10                	mov    %edx,(%eax)$/;"	l
c01054c0	obj/kernel.asm	/^c01054c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01054c3	obj/kernel.asm	/^c01054c3:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01054c6	obj/kernel.asm	/^c01054c6:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01054c9	obj/kernel.asm	/^c01054c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01054cc	obj/kernel.asm	/^c01054cc:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c01054cf	obj/kernel.asm	/^c01054cf:	c9                   	leave  $/;"	l
c01054d0	obj/kernel.asm	/^c01054d0:	c3                   	ret    $/;"	l
c01054d1	obj/kernel.asm	/^c01054d1 <mm_destroy>:$/;"	l
c01054d1	obj/kernel.asm	/^c01054d1:	55                   	push   %ebp$/;"	l
c01054d2	obj/kernel.asm	/^c01054d2:	89 e5                	mov    %esp,%ebp$/;"	l
c01054d4	obj/kernel.asm	/^c01054d4:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01054d7	obj/kernel.asm	/^c01054d7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01054da	obj/kernel.asm	/^c01054da:	e8 69 fc ff ff       	call   c0105148 <mm_count>$/;"	l
c01054df	obj/kernel.asm	/^c01054df:	83 c4 04             	add    $0x4,%esp$/;"	l
c01054e2	obj/kernel.asm	/^c01054e2:	85 c0                	test   %eax,%eax$/;"	l
c01054e4	obj/kernel.asm	/^c01054e4:	74 19                	je     c01054ff <mm_destroy+0x2e>$/;"	l
c01054e6	obj/kernel.asm	/^c01054e6:	68 31 51 11 c0       	push   $0xc0115131$/;"	l
c01054eb	obj/kernel.asm	/^c01054eb:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c01054f0	obj/kernel.asm	/^c01054f0:	68 94 00 00 00       	push   $0x94$/;"	l
c01054f5	obj/kernel.asm	/^c01054f5:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c01054fa	obj/kernel.asm	/^c01054fa:	e8 d0 af ff ff       	call   c01004cf <__panic>$/;"	l
c01054ff	obj/kernel.asm	/^c01054ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105502	obj/kernel.asm	/^c0105502:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105505	obj/kernel.asm	/^c0105505:	eb 3a                	jmp    c0105541 <mm_destroy+0x70>$/;"	l
c0105507	obj/kernel.asm	/^c0105507:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010550a	obj/kernel.asm	/^c010550a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010550d	obj/kernel.asm	/^c010550d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105510	obj/kernel.asm	/^c0105510:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105513	obj/kernel.asm	/^c0105513:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0105516	obj/kernel.asm	/^c0105516:	8b 12                	mov    (%edx),%edx$/;"	l
c0105518	obj/kernel.asm	/^c0105518:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010551b	obj/kernel.asm	/^c010551b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010551e	obj/kernel.asm	/^c010551e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105521	obj/kernel.asm	/^c0105521:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0105524	obj/kernel.asm	/^c0105524:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0105527	obj/kernel.asm	/^c0105527:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010552a	obj/kernel.asm	/^c010552a:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010552d	obj/kernel.asm	/^c010552d:	89 10                	mov    %edx,(%eax)$/;"	l
c010552f	obj/kernel.asm	/^c010552f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105532	obj/kernel.asm	/^c0105532:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105535	obj/kernel.asm	/^c0105535:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105538	obj/kernel.asm	/^c0105538:	50                   	push   %eax$/;"	l
c0105539	obj/kernel.asm	/^c0105539:	e8 d0 1e 00 00       	call   c010740e <kfree>$/;"	l
c010553e	obj/kernel.asm	/^c010553e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105541	obj/kernel.asm	/^c0105541:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105544	obj/kernel.asm	/^c0105544:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105547	obj/kernel.asm	/^c0105547:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010554a	obj/kernel.asm	/^c010554a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010554d	obj/kernel.asm	/^c010554d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105550	obj/kernel.asm	/^c0105550:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105553	obj/kernel.asm	/^c0105553:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0105556	obj/kernel.asm	/^c0105556:	75 af                	jne    c0105507 <mm_destroy+0x36>$/;"	l
c0105558	obj/kernel.asm	/^c0105558:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010555b	obj/kernel.asm	/^c010555b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010555e	obj/kernel.asm	/^c010555e:	e8 ab 1e 00 00       	call   c010740e <kfree>$/;"	l
c0105563	obj/kernel.asm	/^c0105563:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105566	obj/kernel.asm	/^c0105566:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)$/;"	l
c010556d	obj/kernel.asm	/^c010556d:	c9                   	leave  $/;"	l
c010556e	obj/kernel.asm	/^c010556e:	c3                   	ret    $/;"	l
c010556f	obj/kernel.asm	/^c010556f <mm_map>:$/;"	l
c010556f	obj/kernel.asm	/^c010556f:	55                   	push   %ebp$/;"	l
c0105570	obj/kernel.asm	/^c0105570:	89 e5                	mov    %esp,%ebp$/;"	l
c0105572	obj/kernel.asm	/^c0105572:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105575	obj/kernel.asm	/^c0105575:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105578	obj/kernel.asm	/^c0105578:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010557b	obj/kernel.asm	/^c010557b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010557e	obj/kernel.asm	/^c010557e:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0105583	obj/kernel.asm	/^c0105583:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105586	obj/kernel.asm	/^c0105586:	c7 45 e8 00 10 00 00 	movl   $0x1000,-0x18(%ebp)$/;"	l
c010558d	obj/kernel.asm	/^c010558d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0105590	obj/kernel.asm	/^c0105590:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105593	obj/kernel.asm	/^c0105593:	01 c2                	add    %eax,%edx$/;"	l
c0105595	obj/kernel.asm	/^c0105595:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105598	obj/kernel.asm	/^c0105598:	01 d0                	add    %edx,%eax$/;"	l
c010559a	obj/kernel.asm	/^c010559a:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010559d	obj/kernel.asm	/^c010559d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01055a0	obj/kernel.asm	/^c01055a0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01055a3	obj/kernel.asm	/^c01055a3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01055a8	obj/kernel.asm	/^c01055a8:	f7 75 e8             	divl   -0x18(%ebp)$/;"	l
c01055ab	obj/kernel.asm	/^c01055ab:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01055ae	obj/kernel.asm	/^c01055ae:	29 d0                	sub    %edx,%eax$/;"	l
c01055b0	obj/kernel.asm	/^c01055b0:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01055b3	obj/kernel.asm	/^c01055b3:	81 7d ec ff ff 1f 00 	cmpl   $0x1fffff,-0x14(%ebp)$/;"	l
c01055ba	obj/kernel.asm	/^c01055ba:	76 11                	jbe    c01055cd <mm_map+0x5e>$/;"	l
c01055bc	obj/kernel.asm	/^c01055bc:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01055bf	obj/kernel.asm	/^c01055bf:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c01055c2	obj/kernel.asm	/^c01055c2:	73 09                	jae    c01055cd <mm_map+0x5e>$/;"	l
c01055c4	obj/kernel.asm	/^c01055c4:	81 7d e0 00 00 00 b0 	cmpl   $0xb0000000,-0x20(%ebp)$/;"	l
c01055cb	obj/kernel.asm	/^c01055cb:	76 0a                	jbe    c01055d7 <mm_map+0x68>$/;"	l
c01055cd	obj/kernel.asm	/^c01055cd:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01055d2	obj/kernel.asm	/^c01055d2:	e9 9c 00 00 00       	jmp    c0105673 <mm_map+0x104>$/;"	l
c01055d7	obj/kernel.asm	/^c01055d7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01055db	obj/kernel.asm	/^c01055db:	75 19                	jne    c01055f6 <mm_map+0x87>$/;"	l
c01055dd	obj/kernel.asm	/^c01055dd:	68 43 51 11 c0       	push   $0xc0115143$/;"	l
c01055e2	obj/kernel.asm	/^c01055e2:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c01055e7	obj/kernel.asm	/^c01055e7:	68 a7 00 00 00       	push   $0xa7$/;"	l
c01055ec	obj/kernel.asm	/^c01055ec:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c01055f1	obj/kernel.asm	/^c01055f1:	e8 d9 ae ff ff       	call   c01004cf <__panic>$/;"	l
c01055f6	obj/kernel.asm	/^c01055f6:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c01055fd	obj/kernel.asm	/^c01055fd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105600	obj/kernel.asm	/^c0105600:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0105603	obj/kernel.asm	/^c0105603:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105606	obj/kernel.asm	/^c0105606:	e8 79 fc ff ff       	call   c0105284 <find_vma>$/;"	l
c010560b	obj/kernel.asm	/^c010560b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010560e	obj/kernel.asm	/^c010560e:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105611	obj/kernel.asm	/^c0105611:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0105615	obj/kernel.asm	/^c0105615:	74 0d                	je     c0105624 <mm_map+0xb5>$/;"	l
c0105617	obj/kernel.asm	/^c0105617:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010561a	obj/kernel.asm	/^c010561a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010561d	obj/kernel.asm	/^c010561d:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0105620	obj/kernel.asm	/^c0105620:	73 02                	jae    c0105624 <mm_map+0xb5>$/;"	l
c0105622	obj/kernel.asm	/^c0105622:	eb 4c                	jmp    c0105670 <mm_map+0x101>$/;"	l
c0105624	obj/kernel.asm	/^c0105624:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010562b	obj/kernel.asm	/^c010562b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010562e	obj/kernel.asm	/^c010562e:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0105631	obj/kernel.asm	/^c0105631:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0105634	obj/kernel.asm	/^c0105634:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0105637	obj/kernel.asm	/^c0105637:	e8 0c fc ff ff       	call   c0105248 <vma_create>$/;"	l
c010563c	obj/kernel.asm	/^c010563c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010563f	obj/kernel.asm	/^c010563f:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105642	obj/kernel.asm	/^c0105642:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0105646	obj/kernel.asm	/^c0105646:	75 02                	jne    c010564a <mm_map+0xdb>$/;"	l
c0105648	obj/kernel.asm	/^c0105648:	eb 26                	jmp    c0105670 <mm_map+0x101>$/;"	l
c010564a	obj/kernel.asm	/^c010564a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010564d	obj/kernel.asm	/^c010564d:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0105650	obj/kernel.asm	/^c0105650:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105653	obj/kernel.asm	/^c0105653:	e8 57 fd ff ff       	call   c01053af <insert_vma_struct>$/;"	l
c0105658	obj/kernel.asm	/^c0105658:	83 c4 10             	add    $0x10,%esp$/;"	l
c010565b	obj/kernel.asm	/^c010565b:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c010565f	obj/kernel.asm	/^c010565f:	74 08                	je     c0105669 <mm_map+0xfa>$/;"	l
c0105661	obj/kernel.asm	/^c0105661:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0105664	obj/kernel.asm	/^c0105664:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0105667	obj/kernel.asm	/^c0105667:	89 10                	mov    %edx,(%eax)$/;"	l
c0105669	obj/kernel.asm	/^c0105669:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0105670	obj/kernel.asm	/^c0105670:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105673	obj/kernel.asm	/^c0105673:	c9                   	leave  $/;"	l
c0105674	obj/kernel.asm	/^c0105674:	c3                   	ret    $/;"	l
c0105675	obj/kernel.asm	/^c0105675 <dup_mmap>:$/;"	l
c0105675	obj/kernel.asm	/^c0105675:	55                   	push   %ebp$/;"	l
c0105676	obj/kernel.asm	/^c0105676:	89 e5                	mov    %esp,%ebp$/;"	l
c0105678	obj/kernel.asm	/^c0105678:	53                   	push   %ebx$/;"	l
c0105679	obj/kernel.asm	/^c0105679:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010567c	obj/kernel.asm	/^c010567c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0105680	obj/kernel.asm	/^c0105680:	74 06                	je     c0105688 <dup_mmap+0x13>$/;"	l
c0105682	obj/kernel.asm	/^c0105682:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0105686	obj/kernel.asm	/^c0105686:	75 19                	jne    c01056a1 <dup_mmap+0x2c>$/;"	l
c0105688	obj/kernel.asm	/^c0105688:	68 4e 51 11 c0       	push   $0xc011514e$/;"	l
c010568d	obj/kernel.asm	/^c010568d:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105692	obj/kernel.asm	/^c0105692:	68 c0 00 00 00       	push   $0xc0$/;"	l
c0105697	obj/kernel.asm	/^c0105697:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c010569c	obj/kernel.asm	/^c010569c:	e8 2e ae ff ff       	call   c01004cf <__panic>$/;"	l
c01056a1	obj/kernel.asm	/^c01056a1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01056a4	obj/kernel.asm	/^c01056a4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01056a7	obj/kernel.asm	/^c01056a7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01056aa	obj/kernel.asm	/^c01056aa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01056ad	obj/kernel.asm	/^c01056ad:	e9 86 00 00 00       	jmp    c0105738 <dup_mmap+0xc3>$/;"	l
c01056b2	obj/kernel.asm	/^c01056b2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01056b5	obj/kernel.asm	/^c01056b5:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01056b8	obj/kernel.asm	/^c01056b8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01056bb	obj/kernel.asm	/^c01056bb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01056be	obj/kernel.asm	/^c01056be:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c01056c1	obj/kernel.asm	/^c01056c1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01056c4	obj/kernel.asm	/^c01056c4:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01056c7	obj/kernel.asm	/^c01056c7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01056ca	obj/kernel.asm	/^c01056ca:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01056cd	obj/kernel.asm	/^c01056cd:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01056d0	obj/kernel.asm	/^c01056d0:	51                   	push   %ecx$/;"	l
c01056d1	obj/kernel.asm	/^c01056d1:	52                   	push   %edx$/;"	l
c01056d2	obj/kernel.asm	/^c01056d2:	50                   	push   %eax$/;"	l
c01056d3	obj/kernel.asm	/^c01056d3:	e8 70 fb ff ff       	call   c0105248 <vma_create>$/;"	l
c01056d8	obj/kernel.asm	/^c01056d8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01056db	obj/kernel.asm	/^c01056db:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01056de	obj/kernel.asm	/^c01056de:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01056e2	obj/kernel.asm	/^c01056e2:	75 07                	jne    c01056eb <dup_mmap+0x76>$/;"	l
c01056e4	obj/kernel.asm	/^c01056e4:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01056e9	obj/kernel.asm	/^c01056e9:	eb 6c                	jmp    c0105757 <dup_mmap+0xe2>$/;"	l
c01056eb	obj/kernel.asm	/^c01056eb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01056ee	obj/kernel.asm	/^c01056ee:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c01056f1	obj/kernel.asm	/^c01056f1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01056f4	obj/kernel.asm	/^c01056f4:	e8 b6 fc ff ff       	call   c01053af <insert_vma_struct>$/;"	l
c01056f9	obj/kernel.asm	/^c01056f9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01056fc	obj/kernel.asm	/^c01056fc:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0105703	obj/kernel.asm	/^c0105703:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105706	obj/kernel.asm	/^c0105706:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c0105709	obj/kernel.asm	/^c0105709:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010570c	obj/kernel.asm	/^c010570c:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c010570f	obj/kernel.asm	/^c010570f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105712	obj/kernel.asm	/^c0105712:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c0105715	obj/kernel.asm	/^c0105715:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105718	obj/kernel.asm	/^c0105718:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010571b	obj/kernel.asm	/^c010571b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010571e	obj/kernel.asm	/^c010571e:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0105721	obj/kernel.asm	/^c0105721:	53                   	push   %ebx$/;"	l
c0105722	obj/kernel.asm	/^c0105722:	51                   	push   %ecx$/;"	l
c0105723	obj/kernel.asm	/^c0105723:	52                   	push   %edx$/;"	l
c0105724	obj/kernel.asm	/^c0105724:	50                   	push   %eax$/;"	l
c0105725	obj/kernel.asm	/^c0105725:	e8 79 eb ff ff       	call   c01042a3 <copy_range>$/;"	l
c010572a	obj/kernel.asm	/^c010572a:	83 c4 20             	add    $0x20,%esp$/;"	l
c010572d	obj/kernel.asm	/^c010572d:	85 c0                	test   %eax,%eax$/;"	l
c010572f	obj/kernel.asm	/^c010572f:	74 07                	je     c0105738 <dup_mmap+0xc3>$/;"	l
c0105731	obj/kernel.asm	/^c0105731:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0105736	obj/kernel.asm	/^c0105736:	eb 1f                	jmp    c0105757 <dup_mmap+0xe2>$/;"	l
c0105738	obj/kernel.asm	/^c0105738:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010573b	obj/kernel.asm	/^c010573b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010573e	obj/kernel.asm	/^c010573e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0105741	obj/kernel.asm	/^c0105741:	8b 00                	mov    (%eax),%eax$/;"	l
c0105743	obj/kernel.asm	/^c0105743:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105746	obj/kernel.asm	/^c0105746:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105749	obj/kernel.asm	/^c0105749:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010574c	obj/kernel.asm	/^c010574c:	0f 85 60 ff ff ff    	jne    c01056b2 <dup_mmap+0x3d>$/;"	l
c0105752	obj/kernel.asm	/^c0105752:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105757	obj/kernel.asm	/^c0105757:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c010575a	obj/kernel.asm	/^c010575a:	c9                   	leave  $/;"	l
c010575b	obj/kernel.asm	/^c010575b:	c3                   	ret    $/;"	l
c010575c	obj/kernel.asm	/^c010575c <exit_mmap>:$/;"	l
c010575c	obj/kernel.asm	/^c010575c:	55                   	push   %ebp$/;"	l
c010575d	obj/kernel.asm	/^c010575d:	89 e5                	mov    %esp,%ebp$/;"	l
c010575f	obj/kernel.asm	/^c010575f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105762	obj/kernel.asm	/^c0105762:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0105766	obj/kernel.asm	/^c0105766:	74 0f                	je     c0105777 <exit_mmap+0x1b>$/;"	l
c0105768	obj/kernel.asm	/^c0105768:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010576b	obj/kernel.asm	/^c010576b:	e8 d8 f9 ff ff       	call   c0105148 <mm_count>$/;"	l
c0105770	obj/kernel.asm	/^c0105770:	83 c4 04             	add    $0x4,%esp$/;"	l
c0105773	obj/kernel.asm	/^c0105773:	85 c0                	test   %eax,%eax$/;"	l
c0105775	obj/kernel.asm	/^c0105775:	74 19                	je     c0105790 <exit_mmap+0x34>$/;"	l
c0105777	obj/kernel.asm	/^c0105777:	68 6c 51 11 c0       	push   $0xc011516c$/;"	l
c010577c	obj/kernel.asm	/^c010577c:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105781	obj/kernel.asm	/^c0105781:	68 d6 00 00 00       	push   $0xd6$/;"	l
c0105786	obj/kernel.asm	/^c0105786:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c010578b	obj/kernel.asm	/^c010578b:	e8 3f ad ff ff       	call   c01004cf <__panic>$/;"	l
c0105790	obj/kernel.asm	/^c0105790:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105793	obj/kernel.asm	/^c0105793:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0105796	obj/kernel.asm	/^c0105796:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105799	obj/kernel.asm	/^c0105799:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010579c	obj/kernel.asm	/^c010579c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010579f	obj/kernel.asm	/^c010579f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01057a2	obj/kernel.asm	/^c01057a2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01057a5	obj/kernel.asm	/^c01057a5:	eb 25                	jmp    c01057cc <exit_mmap+0x70>$/;"	l
c01057a7	obj/kernel.asm	/^c01057a7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01057aa	obj/kernel.asm	/^c01057aa:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01057ad	obj/kernel.asm	/^c01057ad:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01057b0	obj/kernel.asm	/^c01057b0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01057b3	obj/kernel.asm	/^c01057b3:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01057b6	obj/kernel.asm	/^c01057b6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01057b9	obj/kernel.asm	/^c01057b9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01057bc	obj/kernel.asm	/^c01057bc:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01057bf	obj/kernel.asm	/^c01057bf:	52                   	push   %edx$/;"	l
c01057c0	obj/kernel.asm	/^c01057c0:	50                   	push   %eax$/;"	l
c01057c1	obj/kernel.asm	/^c01057c1:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01057c4	obj/kernel.asm	/^c01057c4:	e8 15 e9 ff ff       	call   c01040de <unmap_range>$/;"	l
c01057c9	obj/kernel.asm	/^c01057c9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01057cc	obj/kernel.asm	/^c01057cc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01057cf	obj/kernel.asm	/^c01057cf:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01057d2	obj/kernel.asm	/^c01057d2:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01057d5	obj/kernel.asm	/^c01057d5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01057d8	obj/kernel.asm	/^c01057d8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01057db	obj/kernel.asm	/^c01057db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01057de	obj/kernel.asm	/^c01057de:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01057e1	obj/kernel.asm	/^c01057e1:	75 c4                	jne    c01057a7 <exit_mmap+0x4b>$/;"	l
c01057e3	obj/kernel.asm	/^c01057e3:	eb 25                	jmp    c010580a <exit_mmap+0xae>$/;"	l
c01057e5	obj/kernel.asm	/^c01057e5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01057e8	obj/kernel.asm	/^c01057e8:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01057eb	obj/kernel.asm	/^c01057eb:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01057ee	obj/kernel.asm	/^c01057ee:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01057f1	obj/kernel.asm	/^c01057f1:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c01057f4	obj/kernel.asm	/^c01057f4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01057f7	obj/kernel.asm	/^c01057f7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01057fa	obj/kernel.asm	/^c01057fa:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01057fd	obj/kernel.asm	/^c01057fd:	52                   	push   %edx$/;"	l
c01057fe	obj/kernel.asm	/^c01057fe:	50                   	push   %eax$/;"	l
c01057ff	obj/kernel.asm	/^c01057ff:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0105802	obj/kernel.asm	/^c0105802:	e8 a9 e9 ff ff       	call   c01041b0 <exit_range>$/;"	l
c0105807	obj/kernel.asm	/^c0105807:	83 c4 10             	add    $0x10,%esp$/;"	l
c010580a	obj/kernel.asm	/^c010580a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010580d	obj/kernel.asm	/^c010580d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105810	obj/kernel.asm	/^c0105810:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105813	obj/kernel.asm	/^c0105813:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105816	obj/kernel.asm	/^c0105816:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0105819	obj/kernel.asm	/^c0105819:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010581c	obj/kernel.asm	/^c010581c:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010581f	obj/kernel.asm	/^c010581f:	75 c4                	jne    c01057e5 <exit_mmap+0x89>$/;"	l
c0105821	obj/kernel.asm	/^c0105821:	c9                   	leave  $/;"	l
c0105822	obj/kernel.asm	/^c0105822:	c3                   	ret    $/;"	l
c0105823	obj/kernel.asm	/^c0105823 <copy_from_user>:$/;"	l
c0105823	obj/kernel.asm	/^c0105823:	55                   	push   %ebp$/;"	l
c0105824	obj/kernel.asm	/^c0105824:	89 e5                	mov    %esp,%ebp$/;"	l
c0105826	obj/kernel.asm	/^c0105826:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105829	obj/kernel.asm	/^c0105829:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010582c	obj/kernel.asm	/^c010582c:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
c010582f	obj/kernel.asm	/^c010582f:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0105832	obj/kernel.asm	/^c0105832:	50                   	push   %eax$/;"	l
c0105833	obj/kernel.asm	/^c0105833:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105836	obj/kernel.asm	/^c0105836:	e8 d6 08 00 00       	call   c0106111 <user_mem_check>$/;"	l
c010583b	obj/kernel.asm	/^c010583b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010583e	obj/kernel.asm	/^c010583e:	85 c0                	test   %eax,%eax$/;"	l
c0105840	obj/kernel.asm	/^c0105840:	75 07                	jne    c0105849 <copy_from_user+0x26>$/;"	l
c0105842	obj/kernel.asm	/^c0105842:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105847	obj/kernel.asm	/^c0105847:	eb 19                	jmp    c0105862 <copy_from_user+0x3f>$/;"	l
c0105849	obj/kernel.asm	/^c0105849:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010584c	obj/kernel.asm	/^c010584c:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010584f	obj/kernel.asm	/^c010584f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0105852	obj/kernel.asm	/^c0105852:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0105855	obj/kernel.asm	/^c0105855:	e8 18 e0 00 00       	call   c0113872 <memcpy>$/;"	l
c010585a	obj/kernel.asm	/^c010585a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010585d	obj/kernel.asm	/^c010585d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0105862	obj/kernel.asm	/^c0105862:	c9                   	leave  $/;"	l
c0105863	obj/kernel.asm	/^c0105863:	c3                   	ret    $/;"	l
c0105864	obj/kernel.asm	/^c0105864 <copy_to_user>:$/;"	l
c0105864	obj/kernel.asm	/^c0105864:	55                   	push   %ebp$/;"	l
c0105865	obj/kernel.asm	/^c0105865:	89 e5                	mov    %esp,%ebp$/;"	l
c0105867	obj/kernel.asm	/^c0105867:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010586a	obj/kernel.asm	/^c010586a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010586d	obj/kernel.asm	/^c010586d:	6a 01                	push   $0x1$/;"	l
c010586f	obj/kernel.asm	/^c010586f:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0105872	obj/kernel.asm	/^c0105872:	50                   	push   %eax$/;"	l
c0105873	obj/kernel.asm	/^c0105873:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105876	obj/kernel.asm	/^c0105876:	e8 96 08 00 00       	call   c0106111 <user_mem_check>$/;"	l
c010587b	obj/kernel.asm	/^c010587b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010587e	obj/kernel.asm	/^c010587e:	85 c0                	test   %eax,%eax$/;"	l
c0105880	obj/kernel.asm	/^c0105880:	75 07                	jne    c0105889 <copy_to_user+0x25>$/;"	l
c0105882	obj/kernel.asm	/^c0105882:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0105887	obj/kernel.asm	/^c0105887:	eb 19                	jmp    c01058a2 <copy_to_user+0x3e>$/;"	l
c0105889	obj/kernel.asm	/^c0105889:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010588c	obj/kernel.asm	/^c010588c:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010588f	obj/kernel.asm	/^c010588f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0105892	obj/kernel.asm	/^c0105892:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0105895	obj/kernel.asm	/^c0105895:	e8 d8 df 00 00       	call   c0113872 <memcpy>$/;"	l
c010589a	obj/kernel.asm	/^c010589a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010589d	obj/kernel.asm	/^c010589d:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01058a2	obj/kernel.asm	/^c01058a2:	c9                   	leave  $/;"	l
c01058a3	obj/kernel.asm	/^c01058a3:	c3                   	ret    $/;"	l
c01058a4	obj/kernel.asm	/^c01058a4 <vmm_init>:$/;"	l
c01058a4	obj/kernel.asm	/^c01058a4:	55                   	push   %ebp$/;"	l
c01058a5	obj/kernel.asm	/^c01058a5:	89 e5                	mov    %esp,%ebp$/;"	l
c01058a7	obj/kernel.asm	/^c01058a7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01058aa	obj/kernel.asm	/^c01058aa:	e8 02 00 00 00       	call   c01058b1 <check_vmm>$/;"	l
c01058af	obj/kernel.asm	/^c01058af:	c9                   	leave  $/;"	l
c01058b0	obj/kernel.asm	/^c01058b0:	c3                   	ret    $/;"	l
c01058b1	obj/kernel.asm	/^c01058b1 <check_vmm>:$/;"	l
c01058b1	obj/kernel.asm	/^c01058b1:	55                   	push   %ebp$/;"	l
c01058b2	obj/kernel.asm	/^c01058b2:	89 e5                	mov    %esp,%ebp$/;"	l
c01058b4	obj/kernel.asm	/^c01058b4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01058b7	obj/kernel.asm	/^c01058b7:	e8 f2 df ff ff       	call   c01038ae <nr_free_pages>$/;"	l
c01058bc	obj/kernel.asm	/^c01058bc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01058bf	obj/kernel.asm	/^c01058bf:	e8 17 00 00 00       	call   c01058db <check_vma_struct>$/;"	l
c01058c4	obj/kernel.asm	/^c01058c4:	e8 0e 04 00 00       	call   c0105cd7 <check_pgfault>$/;"	l
c01058c9	obj/kernel.asm	/^c01058c9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01058cc	obj/kernel.asm	/^c01058cc:	68 8c 51 11 c0       	push   $0xc011518c$/;"	l
c01058d1	obj/kernel.asm	/^c01058d1:	e8 94 aa ff ff       	call   c010036a <cprintf>$/;"	l
c01058d6	obj/kernel.asm	/^c01058d6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01058d9	obj/kernel.asm	/^c01058d9:	c9                   	leave  $/;"	l
c01058da	obj/kernel.asm	/^c01058da:	c3                   	ret    $/;"	l
c01058db	obj/kernel.asm	/^c01058db <check_vma_struct>:$/;"	l
c01058db	obj/kernel.asm	/^c01058db:	55                   	push   %ebp$/;"	l
c01058dc	obj/kernel.asm	/^c01058dc:	89 e5                	mov    %esp,%ebp$/;"	l
c01058de	obj/kernel.asm	/^c01058de:	83 ec 58             	sub    $0x58,%esp$/;"	l
c01058e1	obj/kernel.asm	/^c01058e1:	e8 c8 df ff ff       	call   c01038ae <nr_free_pages>$/;"	l
c01058e6	obj/kernel.asm	/^c01058e6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01058e9	obj/kernel.asm	/^c01058e9:	e8 ba f8 ff ff       	call   c01051a8 <mm_create>$/;"	l
c01058ee	obj/kernel.asm	/^c01058ee:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01058f1	obj/kernel.asm	/^c01058f1:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01058f5	obj/kernel.asm	/^c01058f5:	75 19                	jne    c0105910 <check_vma_struct+0x35>$/;"	l
c01058f7	obj/kernel.asm	/^c01058f7:	68 43 51 11 c0       	push   $0xc0115143$/;"	l
c01058fc	obj/kernel.asm	/^c01058fc:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105901	obj/kernel.asm	/^c0105901:	68 0e 01 00 00       	push   $0x10e$/;"	l
c0105906	obj/kernel.asm	/^c0105906:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c010590b	obj/kernel.asm	/^c010590b:	e8 bf ab ff ff       	call   c01004cf <__panic>$/;"	l
c0105910	obj/kernel.asm	/^c0105910:	c7 45 e4 0a 00 00 00 	movl   $0xa,-0x1c(%ebp)$/;"	l
c0105917	obj/kernel.asm	/^c0105917:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010591a	obj/kernel.asm	/^c010591a:	89 d0                	mov    %edx,%eax$/;"	l
c010591c	obj/kernel.asm	/^c010591c:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010591f	obj/kernel.asm	/^c010591f:	01 d0                	add    %edx,%eax$/;"	l
c0105921	obj/kernel.asm	/^c0105921:	01 c0                	add    %eax,%eax$/;"	l
c0105923	obj/kernel.asm	/^c0105923:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105926	obj/kernel.asm	/^c0105926:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105929	obj/kernel.asm	/^c0105929:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010592c	obj/kernel.asm	/^c010592c:	eb 5f                	jmp    c010598d <check_vma_struct+0xb2>$/;"	l
c010592e	obj/kernel.asm	/^c010592e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105931	obj/kernel.asm	/^c0105931:	89 d0                	mov    %edx,%eax$/;"	l
c0105933	obj/kernel.asm	/^c0105933:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105936	obj/kernel.asm	/^c0105936:	01 d0                	add    %edx,%eax$/;"	l
c0105938	obj/kernel.asm	/^c0105938:	83 c0 02             	add    $0x2,%eax$/;"	l
c010593b	obj/kernel.asm	/^c010593b:	89 c1                	mov    %eax,%ecx$/;"	l
c010593d	obj/kernel.asm	/^c010593d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105940	obj/kernel.asm	/^c0105940:	89 d0                	mov    %edx,%eax$/;"	l
c0105942	obj/kernel.asm	/^c0105942:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105945	obj/kernel.asm	/^c0105945:	01 d0                	add    %edx,%eax$/;"	l
c0105947	obj/kernel.asm	/^c0105947:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010594a	obj/kernel.asm	/^c010594a:	6a 00                	push   $0x0$/;"	l
c010594c	obj/kernel.asm	/^c010594c:	51                   	push   %ecx$/;"	l
c010594d	obj/kernel.asm	/^c010594d:	50                   	push   %eax$/;"	l
c010594e	obj/kernel.asm	/^c010594e:	e8 f5 f8 ff ff       	call   c0105248 <vma_create>$/;"	l
c0105953	obj/kernel.asm	/^c0105953:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105956	obj/kernel.asm	/^c0105956:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0105959	obj/kernel.asm	/^c0105959:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010595d	obj/kernel.asm	/^c010595d:	75 19                	jne    c0105978 <check_vma_struct+0x9d>$/;"	l
c010595f	obj/kernel.asm	/^c010595f:	68 a4 51 11 c0       	push   $0xc01151a4$/;"	l
c0105964	obj/kernel.asm	/^c0105964:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105969	obj/kernel.asm	/^c0105969:	68 15 01 00 00       	push   $0x115$/;"	l
c010596e	obj/kernel.asm	/^c010596e:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0105973	obj/kernel.asm	/^c0105973:	e8 57 ab ff ff       	call   c01004cf <__panic>$/;"	l
c0105978	obj/kernel.asm	/^c0105978:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010597b	obj/kernel.asm	/^c010597b:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c010597e	obj/kernel.asm	/^c010597e:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105981	obj/kernel.asm	/^c0105981:	e8 29 fa ff ff       	call   c01053af <insert_vma_struct>$/;"	l
c0105986	obj/kernel.asm	/^c0105986:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105989	obj/kernel.asm	/^c0105989:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c010598d	obj/kernel.asm	/^c010598d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105991	obj/kernel.asm	/^c0105991:	7f 9b                	jg     c010592e <check_vma_struct+0x53>$/;"	l
c0105993	obj/kernel.asm	/^c0105993:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105996	obj/kernel.asm	/^c0105996:	83 c0 01             	add    $0x1,%eax$/;"	l
c0105999	obj/kernel.asm	/^c0105999:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010599c	obj/kernel.asm	/^c010599c:	eb 5f                	jmp    c01059fd <check_vma_struct+0x122>$/;"	l
c010599e	obj/kernel.asm	/^c010599e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01059a1	obj/kernel.asm	/^c01059a1:	89 d0                	mov    %edx,%eax$/;"	l
c01059a3	obj/kernel.asm	/^c01059a3:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01059a6	obj/kernel.asm	/^c01059a6:	01 d0                	add    %edx,%eax$/;"	l
c01059a8	obj/kernel.asm	/^c01059a8:	83 c0 02             	add    $0x2,%eax$/;"	l
c01059ab	obj/kernel.asm	/^c01059ab:	89 c1                	mov    %eax,%ecx$/;"	l
c01059ad	obj/kernel.asm	/^c01059ad:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c01059b0	obj/kernel.asm	/^c01059b0:	89 d0                	mov    %edx,%eax$/;"	l
c01059b2	obj/kernel.asm	/^c01059b2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01059b5	obj/kernel.asm	/^c01059b5:	01 d0                	add    %edx,%eax$/;"	l
c01059b7	obj/kernel.asm	/^c01059b7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01059ba	obj/kernel.asm	/^c01059ba:	6a 00                	push   $0x0$/;"	l
c01059bc	obj/kernel.asm	/^c01059bc:	51                   	push   %ecx$/;"	l
c01059bd	obj/kernel.asm	/^c01059bd:	50                   	push   %eax$/;"	l
c01059be	obj/kernel.asm	/^c01059be:	e8 85 f8 ff ff       	call   c0105248 <vma_create>$/;"	l
c01059c3	obj/kernel.asm	/^c01059c3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01059c6	obj/kernel.asm	/^c01059c6:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01059c9	obj/kernel.asm	/^c01059c9:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c01059cd	obj/kernel.asm	/^c01059cd:	75 19                	jne    c01059e8 <check_vma_struct+0x10d>$/;"	l
c01059cf	obj/kernel.asm	/^c01059cf:	68 a4 51 11 c0       	push   $0xc01151a4$/;"	l
c01059d4	obj/kernel.asm	/^c01059d4:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c01059d9	obj/kernel.asm	/^c01059d9:	68 1b 01 00 00       	push   $0x11b$/;"	l
c01059de	obj/kernel.asm	/^c01059de:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c01059e3	obj/kernel.asm	/^c01059e3:	e8 e7 aa ff ff       	call   c01004cf <__panic>$/;"	l
c01059e8	obj/kernel.asm	/^c01059e8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01059eb	obj/kernel.asm	/^c01059eb:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c01059ee	obj/kernel.asm	/^c01059ee:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c01059f1	obj/kernel.asm	/^c01059f1:	e8 b9 f9 ff ff       	call   c01053af <insert_vma_struct>$/;"	l
c01059f6	obj/kernel.asm	/^c01059f6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01059f9	obj/kernel.asm	/^c01059f9:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01059fd	obj/kernel.asm	/^c01059fd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105a00	obj/kernel.asm	/^c0105a00:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0105a03	obj/kernel.asm	/^c0105a03:	7e 99                	jle    c010599e <check_vma_struct+0xc3>$/;"	l
c0105a05	obj/kernel.asm	/^c0105a05:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105a08	obj/kernel.asm	/^c0105a08:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0105a0b	obj/kernel.asm	/^c0105a0b:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0105a0e	obj/kernel.asm	/^c0105a0e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105a11	obj/kernel.asm	/^c0105a11:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105a14	obj/kernel.asm	/^c0105a14:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c0105a1b	obj/kernel.asm	/^c0105a1b:	e9 81 00 00 00       	jmp    c0105aa1 <check_vma_struct+0x1c6>$/;"	l
c0105a20	obj/kernel.asm	/^c0105a20:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105a23	obj/kernel.asm	/^c0105a23:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0105a26	obj/kernel.asm	/^c0105a26:	75 19                	jne    c0105a41 <check_vma_struct+0x166>$/;"	l
c0105a28	obj/kernel.asm	/^c0105a28:	68 b0 51 11 c0       	push   $0xc01151b0$/;"	l
c0105a2d	obj/kernel.asm	/^c0105a2d:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105a32	obj/kernel.asm	/^c0105a32:	68 22 01 00 00       	push   $0x122$/;"	l
c0105a37	obj/kernel.asm	/^c0105a37:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0105a3c	obj/kernel.asm	/^c0105a3c:	e8 8e aa ff ff       	call   c01004cf <__panic>$/;"	l
c0105a41	obj/kernel.asm	/^c0105a41:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105a44	obj/kernel.asm	/^c0105a44:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0105a47	obj/kernel.asm	/^c0105a47:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0105a4a	obj/kernel.asm	/^c0105a4a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0105a4d	obj/kernel.asm	/^c0105a4d:	8b 48 04             	mov    0x4(%eax),%ecx$/;"	l
c0105a50	obj/kernel.asm	/^c0105a50:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105a53	obj/kernel.asm	/^c0105a53:	89 d0                	mov    %edx,%eax$/;"	l
c0105a55	obj/kernel.asm	/^c0105a55:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105a58	obj/kernel.asm	/^c0105a58:	01 d0                	add    %edx,%eax$/;"	l
c0105a5a	obj/kernel.asm	/^c0105a5a:	39 c1                	cmp    %eax,%ecx$/;"	l
c0105a5c	obj/kernel.asm	/^c0105a5c:	75 17                	jne    c0105a75 <check_vma_struct+0x19a>$/;"	l
c0105a5e	obj/kernel.asm	/^c0105a5e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0105a61	obj/kernel.asm	/^c0105a61:	8b 48 08             	mov    0x8(%eax),%ecx$/;"	l
c0105a64	obj/kernel.asm	/^c0105a64:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105a67	obj/kernel.asm	/^c0105a67:	89 d0                	mov    %edx,%eax$/;"	l
c0105a69	obj/kernel.asm	/^c0105a69:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105a6c	obj/kernel.asm	/^c0105a6c:	01 d0                	add    %edx,%eax$/;"	l
c0105a6e	obj/kernel.asm	/^c0105a6e:	83 c0 02             	add    $0x2,%eax$/;"	l
c0105a71	obj/kernel.asm	/^c0105a71:	39 c1                	cmp    %eax,%ecx$/;"	l
c0105a73	obj/kernel.asm	/^c0105a73:	74 19                	je     c0105a8e <check_vma_struct+0x1b3>$/;"	l
c0105a75	obj/kernel.asm	/^c0105a75:	68 c8 51 11 c0       	push   $0xc01151c8$/;"	l
c0105a7a	obj/kernel.asm	/^c0105a7a:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105a7f	obj/kernel.asm	/^c0105a7f:	68 24 01 00 00       	push   $0x124$/;"	l
c0105a84	obj/kernel.asm	/^c0105a84:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0105a89	obj/kernel.asm	/^c0105a89:	e8 41 aa ff ff       	call   c01004cf <__panic>$/;"	l
c0105a8e	obj/kernel.asm	/^c0105a8e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0105a91	obj/kernel.asm	/^c0105a91:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0105a94	obj/kernel.asm	/^c0105a94:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0105a97	obj/kernel.asm	/^c0105a97:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105a9a	obj/kernel.asm	/^c0105a9a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0105a9d	obj/kernel.asm	/^c0105a9d:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105aa1	obj/kernel.asm	/^c0105aa1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105aa4	obj/kernel.asm	/^c0105aa4:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0105aa7	obj/kernel.asm	/^c0105aa7:	0f 8e 73 ff ff ff    	jle    c0105a20 <check_vma_struct+0x145>$/;"	l
c0105aad	obj/kernel.asm	/^c0105aad:	c7 45 f4 05 00 00 00 	movl   $0x5,-0xc(%ebp)$/;"	l
c0105ab4	obj/kernel.asm	/^c0105ab4:	e9 80 01 00 00       	jmp    c0105c39 <check_vma_struct+0x35e>$/;"	l
c0105ab9	obj/kernel.asm	/^c0105ab9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105abc	obj/kernel.asm	/^c0105abc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105abf	obj/kernel.asm	/^c0105abf:	50                   	push   %eax$/;"	l
c0105ac0	obj/kernel.asm	/^c0105ac0:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105ac3	obj/kernel.asm	/^c0105ac3:	e8 bc f7 ff ff       	call   c0105284 <find_vma>$/;"	l
c0105ac8	obj/kernel.asm	/^c0105ac8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105acb	obj/kernel.asm	/^c0105acb:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0105ace	obj/kernel.asm	/^c0105ace:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c0105ad2	obj/kernel.asm	/^c0105ad2:	75 19                	jne    c0105aed <check_vma_struct+0x212>$/;"	l
c0105ad4	obj/kernel.asm	/^c0105ad4:	68 fd 51 11 c0       	push   $0xc01151fd$/;"	l
c0105ad9	obj/kernel.asm	/^c0105ad9:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105ade	obj/kernel.asm	/^c0105ade:	68 2a 01 00 00       	push   $0x12a$/;"	l
c0105ae3	obj/kernel.asm	/^c0105ae3:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0105ae8	obj/kernel.asm	/^c0105ae8:	e8 e2 a9 ff ff       	call   c01004cf <__panic>$/;"	l
c0105aed	obj/kernel.asm	/^c0105aed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105af0	obj/kernel.asm	/^c0105af0:	83 c0 01             	add    $0x1,%eax$/;"	l
c0105af3	obj/kernel.asm	/^c0105af3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105af6	obj/kernel.asm	/^c0105af6:	50                   	push   %eax$/;"	l
c0105af7	obj/kernel.asm	/^c0105af7:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105afa	obj/kernel.asm	/^c0105afa:	e8 85 f7 ff ff       	call   c0105284 <find_vma>$/;"	l
c0105aff	obj/kernel.asm	/^c0105aff:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105b02	obj/kernel.asm	/^c0105b02:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0105b05	obj/kernel.asm	/^c0105b05:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0105b09	obj/kernel.asm	/^c0105b09:	75 19                	jne    c0105b24 <check_vma_struct+0x249>$/;"	l
c0105b0b	obj/kernel.asm	/^c0105b0b:	68 0a 52 11 c0       	push   $0xc011520a$/;"	l
c0105b10	obj/kernel.asm	/^c0105b10:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105b15	obj/kernel.asm	/^c0105b15:	68 2c 01 00 00       	push   $0x12c$/;"	l
c0105b1a	obj/kernel.asm	/^c0105b1a:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0105b1f	obj/kernel.asm	/^c0105b1f:	e8 ab a9 ff ff       	call   c01004cf <__panic>$/;"	l
c0105b24	obj/kernel.asm	/^c0105b24:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105b27	obj/kernel.asm	/^c0105b27:	83 c0 02             	add    $0x2,%eax$/;"	l
c0105b2a	obj/kernel.asm	/^c0105b2a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105b2d	obj/kernel.asm	/^c0105b2d:	50                   	push   %eax$/;"	l
c0105b2e	obj/kernel.asm	/^c0105b2e:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105b31	obj/kernel.asm	/^c0105b31:	e8 4e f7 ff ff       	call   c0105284 <find_vma>$/;"	l
c0105b36	obj/kernel.asm	/^c0105b36:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105b39	obj/kernel.asm	/^c0105b39:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0105b3c	obj/kernel.asm	/^c0105b3c:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c0105b40	obj/kernel.asm	/^c0105b40:	74 19                	je     c0105b5b <check_vma_struct+0x280>$/;"	l
c0105b42	obj/kernel.asm	/^c0105b42:	68 17 52 11 c0       	push   $0xc0115217$/;"	l
c0105b47	obj/kernel.asm	/^c0105b47:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105b4c	obj/kernel.asm	/^c0105b4c:	68 2e 01 00 00       	push   $0x12e$/;"	l
c0105b51	obj/kernel.asm	/^c0105b51:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0105b56	obj/kernel.asm	/^c0105b56:	e8 74 a9 ff ff       	call   c01004cf <__panic>$/;"	l
c0105b5b	obj/kernel.asm	/^c0105b5b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105b5e	obj/kernel.asm	/^c0105b5e:	83 c0 03             	add    $0x3,%eax$/;"	l
c0105b61	obj/kernel.asm	/^c0105b61:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105b64	obj/kernel.asm	/^c0105b64:	50                   	push   %eax$/;"	l
c0105b65	obj/kernel.asm	/^c0105b65:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105b68	obj/kernel.asm	/^c0105b68:	e8 17 f7 ff ff       	call   c0105284 <find_vma>$/;"	l
c0105b6d	obj/kernel.asm	/^c0105b6d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105b70	obj/kernel.asm	/^c0105b70:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0105b73	obj/kernel.asm	/^c0105b73:	83 7d c4 00          	cmpl   $0x0,-0x3c(%ebp)$/;"	l
c0105b77	obj/kernel.asm	/^c0105b77:	74 19                	je     c0105b92 <check_vma_struct+0x2b7>$/;"	l
c0105b79	obj/kernel.asm	/^c0105b79:	68 24 52 11 c0       	push   $0xc0115224$/;"	l
c0105b7e	obj/kernel.asm	/^c0105b7e:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105b83	obj/kernel.asm	/^c0105b83:	68 30 01 00 00       	push   $0x130$/;"	l
c0105b88	obj/kernel.asm	/^c0105b88:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0105b8d	obj/kernel.asm	/^c0105b8d:	e8 3d a9 ff ff       	call   c01004cf <__panic>$/;"	l
c0105b92	obj/kernel.asm	/^c0105b92:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105b95	obj/kernel.asm	/^c0105b95:	83 c0 04             	add    $0x4,%eax$/;"	l
c0105b98	obj/kernel.asm	/^c0105b98:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105b9b	obj/kernel.asm	/^c0105b9b:	50                   	push   %eax$/;"	l
c0105b9c	obj/kernel.asm	/^c0105b9c:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105b9f	obj/kernel.asm	/^c0105b9f:	e8 e0 f6 ff ff       	call   c0105284 <find_vma>$/;"	l
c0105ba4	obj/kernel.asm	/^c0105ba4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105ba7	obj/kernel.asm	/^c0105ba7:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0105baa	obj/kernel.asm	/^c0105baa:	83 7d c0 00          	cmpl   $0x0,-0x40(%ebp)$/;"	l
c0105bae	obj/kernel.asm	/^c0105bae:	74 19                	je     c0105bc9 <check_vma_struct+0x2ee>$/;"	l
c0105bb0	obj/kernel.asm	/^c0105bb0:	68 31 52 11 c0       	push   $0xc0115231$/;"	l
c0105bb5	obj/kernel.asm	/^c0105bb5:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105bba	obj/kernel.asm	/^c0105bba:	68 32 01 00 00       	push   $0x132$/;"	l
c0105bbf	obj/kernel.asm	/^c0105bbf:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0105bc4	obj/kernel.asm	/^c0105bc4:	e8 06 a9 ff ff       	call   c01004cf <__panic>$/;"	l
c0105bc9	obj/kernel.asm	/^c0105bc9:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0105bcc	obj/kernel.asm	/^c0105bcc:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0105bcf	obj/kernel.asm	/^c0105bcf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105bd2	obj/kernel.asm	/^c0105bd2:	39 c2                	cmp    %eax,%edx$/;"	l
c0105bd4	obj/kernel.asm	/^c0105bd4:	75 10                	jne    c0105be6 <check_vma_struct+0x30b>$/;"	l
c0105bd6	obj/kernel.asm	/^c0105bd6:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0105bd9	obj/kernel.asm	/^c0105bd9:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105bdc	obj/kernel.asm	/^c0105bdc:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105bdf	obj/kernel.asm	/^c0105bdf:	83 c2 02             	add    $0x2,%edx$/;"	l
c0105be2	obj/kernel.asm	/^c0105be2:	39 d0                	cmp    %edx,%eax$/;"	l
c0105be4	obj/kernel.asm	/^c0105be4:	74 19                	je     c0105bff <check_vma_struct+0x324>$/;"	l
c0105be6	obj/kernel.asm	/^c0105be6:	68 40 52 11 c0       	push   $0xc0115240$/;"	l
c0105beb	obj/kernel.asm	/^c0105beb:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105bf0	obj/kernel.asm	/^c0105bf0:	68 34 01 00 00       	push   $0x134$/;"	l
c0105bf5	obj/kernel.asm	/^c0105bf5:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0105bfa	obj/kernel.asm	/^c0105bfa:	e8 d0 a8 ff ff       	call   c01004cf <__panic>$/;"	l
c0105bff	obj/kernel.asm	/^c0105bff:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0105c02	obj/kernel.asm	/^c0105c02:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0105c05	obj/kernel.asm	/^c0105c05:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105c08	obj/kernel.asm	/^c0105c08:	39 c2                	cmp    %eax,%edx$/;"	l
c0105c0a	obj/kernel.asm	/^c0105c0a:	75 10                	jne    c0105c1c <check_vma_struct+0x341>$/;"	l
c0105c0c	obj/kernel.asm	/^c0105c0c:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0105c0f	obj/kernel.asm	/^c0105c0f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0105c12	obj/kernel.asm	/^c0105c12:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105c15	obj/kernel.asm	/^c0105c15:	83 c2 02             	add    $0x2,%edx$/;"	l
c0105c18	obj/kernel.asm	/^c0105c18:	39 d0                	cmp    %edx,%eax$/;"	l
c0105c1a	obj/kernel.asm	/^c0105c1a:	74 19                	je     c0105c35 <check_vma_struct+0x35a>$/;"	l
c0105c1c	obj/kernel.asm	/^c0105c1c:	68 70 52 11 c0       	push   $0xc0115270$/;"	l
c0105c21	obj/kernel.asm	/^c0105c21:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105c26	obj/kernel.asm	/^c0105c26:	68 35 01 00 00       	push   $0x135$/;"	l
c0105c2b	obj/kernel.asm	/^c0105c2b:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0105c30	obj/kernel.asm	/^c0105c30:	e8 9a a8 ff ff       	call   c01004cf <__panic>$/;"	l
c0105c35	obj/kernel.asm	/^c0105c35:	83 45 f4 05          	addl   $0x5,-0xc(%ebp)$/;"	l
c0105c39	obj/kernel.asm	/^c0105c39:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0105c3c	obj/kernel.asm	/^c0105c3c:	89 d0                	mov    %edx,%eax$/;"	l
c0105c3e	obj/kernel.asm	/^c0105c3e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0105c41	obj/kernel.asm	/^c0105c41:	01 d0                	add    %edx,%eax$/;"	l
c0105c43	obj/kernel.asm	/^c0105c43:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0105c46	obj/kernel.asm	/^c0105c46:	0f 8d 6d fe ff ff    	jge    c0105ab9 <check_vma_struct+0x1de>$/;"	l
c0105c4c	obj/kernel.asm	/^c0105c4c:	c7 45 f4 04 00 00 00 	movl   $0x4,-0xc(%ebp)$/;"	l
c0105c53	obj/kernel.asm	/^c0105c53:	eb 5c                	jmp    c0105cb1 <check_vma_struct+0x3d6>$/;"	l
c0105c55	obj/kernel.asm	/^c0105c55:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105c58	obj/kernel.asm	/^c0105c58:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105c5b	obj/kernel.asm	/^c0105c5b:	50                   	push   %eax$/;"	l
c0105c5c	obj/kernel.asm	/^c0105c5c:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105c5f	obj/kernel.asm	/^c0105c5f:	e8 20 f6 ff ff       	call   c0105284 <find_vma>$/;"	l
c0105c64	obj/kernel.asm	/^c0105c64:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105c67	obj/kernel.asm	/^c0105c67:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0105c6a	obj/kernel.asm	/^c0105c6a:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0105c6e	obj/kernel.asm	/^c0105c6e:	74 1e                	je     c0105c8e <check_vma_struct+0x3b3>$/;"	l
c0105c70	obj/kernel.asm	/^c0105c70:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0105c73	obj/kernel.asm	/^c0105c73:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0105c76	obj/kernel.asm	/^c0105c76:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0105c79	obj/kernel.asm	/^c0105c79:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105c7c	obj/kernel.asm	/^c0105c7c:	52                   	push   %edx$/;"	l
c0105c7d	obj/kernel.asm	/^c0105c7d:	50                   	push   %eax$/;"	l
c0105c7e	obj/kernel.asm	/^c0105c7e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0105c81	obj/kernel.asm	/^c0105c81:	68 a0 52 11 c0       	push   $0xc01152a0$/;"	l
c0105c86	obj/kernel.asm	/^c0105c86:	e8 df a6 ff ff       	call   c010036a <cprintf>$/;"	l
c0105c8b	obj/kernel.asm	/^c0105c8b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105c8e	obj/kernel.asm	/^c0105c8e:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c0105c92	obj/kernel.asm	/^c0105c92:	74 19                	je     c0105cad <check_vma_struct+0x3d2>$/;"	l
c0105c94	obj/kernel.asm	/^c0105c94:	68 c5 52 11 c0       	push   $0xc01152c5$/;"	l
c0105c99	obj/kernel.asm	/^c0105c99:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105c9e	obj/kernel.asm	/^c0105c9e:	68 3d 01 00 00       	push   $0x13d$/;"	l
c0105ca3	obj/kernel.asm	/^c0105ca3:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0105ca8	obj/kernel.asm	/^c0105ca8:	e8 22 a8 ff ff       	call   c01004cf <__panic>$/;"	l
c0105cad	obj/kernel.asm	/^c0105cad:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0105cb1	obj/kernel.asm	/^c0105cb1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0105cb5	obj/kernel.asm	/^c0105cb5:	79 9e                	jns    c0105c55 <check_vma_struct+0x37a>$/;"	l
c0105cb7	obj/kernel.asm	/^c0105cb7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105cba	obj/kernel.asm	/^c0105cba:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105cbd	obj/kernel.asm	/^c0105cbd:	e8 0f f8 ff ff       	call   c01054d1 <mm_destroy>$/;"	l
c0105cc2	obj/kernel.asm	/^c0105cc2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105cc5	obj/kernel.asm	/^c0105cc5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105cc8	obj/kernel.asm	/^c0105cc8:	68 dc 52 11 c0       	push   $0xc01152dc$/;"	l
c0105ccd	obj/kernel.asm	/^c0105ccd:	e8 98 a6 ff ff       	call   c010036a <cprintf>$/;"	l
c0105cd2	obj/kernel.asm	/^c0105cd2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105cd5	obj/kernel.asm	/^c0105cd5:	c9                   	leave  $/;"	l
c0105cd6	obj/kernel.asm	/^c0105cd6:	c3                   	ret    $/;"	l
c0105cd7	obj/kernel.asm	/^c0105cd7 <check_pgfault>:$/;"	l
c0105cd7	obj/kernel.asm	/^c0105cd7:	55                   	push   %ebp$/;"	l
c0105cd8	obj/kernel.asm	/^c0105cd8:	89 e5                	mov    %esp,%ebp$/;"	l
c0105cda	obj/kernel.asm	/^c0105cda:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105cdd	obj/kernel.asm	/^c0105cdd:	e8 cc db ff ff       	call   c01038ae <nr_free_pages>$/;"	l
c0105ce2	obj/kernel.asm	/^c0105ce2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105ce5	obj/kernel.asm	/^c0105ce5:	e8 be f4 ff ff       	call   c01051a8 <mm_create>$/;"	l
c0105cea	obj/kernel.asm	/^c0105cea:	a3 b0 21 15 c0       	mov    %eax,0xc01521b0$/;"	l
c0105cef	obj/kernel.asm	/^c0105cef:	a1 b0 21 15 c0       	mov    0xc01521b0,%eax$/;"	l
c0105cf4	obj/kernel.asm	/^c0105cf4:	85 c0                	test   %eax,%eax$/;"	l
c0105cf6	obj/kernel.asm	/^c0105cf6:	75 19                	jne    c0105d11 <check_pgfault+0x3a>$/;"	l
c0105cf8	obj/kernel.asm	/^c0105cf8:	68 fb 52 11 c0       	push   $0xc01152fb$/;"	l
c0105cfd	obj/kernel.asm	/^c0105cfd:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105d02	obj/kernel.asm	/^c0105d02:	68 4f 01 00 00       	push   $0x14f$/;"	l
c0105d07	obj/kernel.asm	/^c0105d07:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0105d0c	obj/kernel.asm	/^c0105d0c:	e8 be a7 ff ff       	call   c01004cf <__panic>$/;"	l
c0105d11	obj/kernel.asm	/^c0105d11:	a1 b0 21 15 c0       	mov    0xc01521b0,%eax$/;"	l
c0105d16	obj/kernel.asm	/^c0105d16:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105d19	obj/kernel.asm	/^c0105d19:	8b 15 c4 ef 14 c0    	mov    0xc014efc4,%edx$/;"	l
c0105d1f	obj/kernel.asm	/^c0105d1f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105d22	obj/kernel.asm	/^c0105d22:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0105d25	obj/kernel.asm	/^c0105d25:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105d28	obj/kernel.asm	/^c0105d28:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0105d2b	obj/kernel.asm	/^c0105d2b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105d2e	obj/kernel.asm	/^c0105d2e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105d31	obj/kernel.asm	/^c0105d31:	8b 00                	mov    (%eax),%eax$/;"	l
c0105d33	obj/kernel.asm	/^c0105d33:	85 c0                	test   %eax,%eax$/;"	l
c0105d35	obj/kernel.asm	/^c0105d35:	74 19                	je     c0105d50 <check_pgfault+0x79>$/;"	l
c0105d37	obj/kernel.asm	/^c0105d37:	68 13 53 11 c0       	push   $0xc0115313$/;"	l
c0105d3c	obj/kernel.asm	/^c0105d3c:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105d41	obj/kernel.asm	/^c0105d41:	68 53 01 00 00       	push   $0x153$/;"	l
c0105d46	obj/kernel.asm	/^c0105d46:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0105d4b	obj/kernel.asm	/^c0105d4b:	e8 7f a7 ff ff       	call   c01004cf <__panic>$/;"	l
c0105d50	obj/kernel.asm	/^c0105d50:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105d53	obj/kernel.asm	/^c0105d53:	6a 02                	push   $0x2$/;"	l
c0105d55	obj/kernel.asm	/^c0105d55:	68 00 00 40 00       	push   $0x400000$/;"	l
c0105d5a	obj/kernel.asm	/^c0105d5a:	6a 00                	push   $0x0$/;"	l
c0105d5c	obj/kernel.asm	/^c0105d5c:	e8 e7 f4 ff ff       	call   c0105248 <vma_create>$/;"	l
c0105d61	obj/kernel.asm	/^c0105d61:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105d64	obj/kernel.asm	/^c0105d64:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0105d67	obj/kernel.asm	/^c0105d67:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0105d6b	obj/kernel.asm	/^c0105d6b:	75 19                	jne    c0105d86 <check_pgfault+0xaf>$/;"	l
c0105d6d	obj/kernel.asm	/^c0105d6d:	68 a4 51 11 c0       	push   $0xc01151a4$/;"	l
c0105d72	obj/kernel.asm	/^c0105d72:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105d77	obj/kernel.asm	/^c0105d77:	68 56 01 00 00       	push   $0x156$/;"	l
c0105d7c	obj/kernel.asm	/^c0105d7c:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0105d81	obj/kernel.asm	/^c0105d81:	e8 49 a7 ff ff       	call   c01004cf <__panic>$/;"	l
c0105d86	obj/kernel.asm	/^c0105d86:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105d89	obj/kernel.asm	/^c0105d89:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0105d8c	obj/kernel.asm	/^c0105d8c:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105d8f	obj/kernel.asm	/^c0105d8f:	e8 1b f6 ff ff       	call   c01053af <insert_vma_struct>$/;"	l
c0105d94	obj/kernel.asm	/^c0105d94:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105d97	obj/kernel.asm	/^c0105d97:	c7 45 dc 00 01 00 00 	movl   $0x100,-0x24(%ebp)$/;"	l
c0105d9e	obj/kernel.asm	/^c0105d9e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105da1	obj/kernel.asm	/^c0105da1:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0105da4	obj/kernel.asm	/^c0105da4:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105da7	obj/kernel.asm	/^c0105da7:	e8 d8 f4 ff ff       	call   c0105284 <find_vma>$/;"	l
c0105dac	obj/kernel.asm	/^c0105dac:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105daf	obj/kernel.asm	/^c0105daf:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0105db2	obj/kernel.asm	/^c0105db2:	74 19                	je     c0105dcd <check_pgfault+0xf6>$/;"	l
c0105db4	obj/kernel.asm	/^c0105db4:	68 21 53 11 c0       	push   $0xc0115321$/;"	l
c0105db9	obj/kernel.asm	/^c0105db9:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105dbe	obj/kernel.asm	/^c0105dbe:	68 5b 01 00 00       	push   $0x15b$/;"	l
c0105dc3	obj/kernel.asm	/^c0105dc3:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0105dc8	obj/kernel.asm	/^c0105dc8:	e8 02 a7 ff ff       	call   c01004cf <__panic>$/;"	l
c0105dcd	obj/kernel.asm	/^c0105dcd:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0105dd4	obj/kernel.asm	/^c0105dd4:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0105ddb	obj/kernel.asm	/^c0105ddb:	eb 19                	jmp    c0105df6 <check_pgfault+0x11f>$/;"	l
c0105ddd	obj/kernel.asm	/^c0105ddd:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105de0	obj/kernel.asm	/^c0105de0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105de3	obj/kernel.asm	/^c0105de3:	01 d0                	add    %edx,%eax$/;"	l
c0105de5	obj/kernel.asm	/^c0105de5:	89 c2                	mov    %eax,%edx$/;"	l
c0105de7	obj/kernel.asm	/^c0105de7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105dea	obj/kernel.asm	/^c0105dea:	88 02                	mov    %al,(%edx)$/;"	l
c0105dec	obj/kernel.asm	/^c0105dec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0105def	obj/kernel.asm	/^c0105def:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c0105df2	obj/kernel.asm	/^c0105df2:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105df6	obj/kernel.asm	/^c0105df6:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c0105dfa	obj/kernel.asm	/^c0105dfa:	7e e1                	jle    c0105ddd <check_pgfault+0x106>$/;"	l
c0105dfc	obj/kernel.asm	/^c0105dfc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0105e03	obj/kernel.asm	/^c0105e03:	eb 15                	jmp    c0105e1a <check_pgfault+0x143>$/;"	l
c0105e05	obj/kernel.asm	/^c0105e05:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0105e08	obj/kernel.asm	/^c0105e08:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105e0b	obj/kernel.asm	/^c0105e0b:	01 d0                	add    %edx,%eax$/;"	l
c0105e0d	obj/kernel.asm	/^c0105e0d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0105e10	obj/kernel.asm	/^c0105e10:	0f be c0             	movsbl %al,%eax$/;"	l
c0105e13	obj/kernel.asm	/^c0105e13:	29 45 f0             	sub    %eax,-0x10(%ebp)$/;"	l
c0105e16	obj/kernel.asm	/^c0105e16:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0105e1a	obj/kernel.asm	/^c0105e1a:	83 7d f4 63          	cmpl   $0x63,-0xc(%ebp)$/;"	l
c0105e1e	obj/kernel.asm	/^c0105e1e:	7e e5                	jle    c0105e05 <check_pgfault+0x12e>$/;"	l
c0105e20	obj/kernel.asm	/^c0105e20:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0105e24	obj/kernel.asm	/^c0105e24:	74 19                	je     c0105e3f <check_pgfault+0x168>$/;"	l
c0105e26	obj/kernel.asm	/^c0105e26:	68 3b 53 11 c0       	push   $0xc011533b$/;"	l
c0105e2b	obj/kernel.asm	/^c0105e2b:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105e30	obj/kernel.asm	/^c0105e30:	68 65 01 00 00       	push   $0x165$/;"	l
c0105e35	obj/kernel.asm	/^c0105e35:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0105e3a	obj/kernel.asm	/^c0105e3a:	e8 90 a6 ff ff       	call   c01004cf <__panic>$/;"	l
c0105e3f	obj/kernel.asm	/^c0105e3f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0105e42	obj/kernel.asm	/^c0105e42:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0105e45	obj/kernel.asm	/^c0105e45:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0105e48	obj/kernel.asm	/^c0105e48:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0105e4d	obj/kernel.asm	/^c0105e4d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105e50	obj/kernel.asm	/^c0105e50:	50                   	push   %eax$/;"	l
c0105e51	obj/kernel.asm	/^c0105e51:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0105e54	obj/kernel.asm	/^c0105e54:	e8 23 e6 ff ff       	call   c010447c <page_remove>$/;"	l
c0105e59	obj/kernel.asm	/^c0105e59:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105e5c	obj/kernel.asm	/^c0105e5c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105e5f	obj/kernel.asm	/^c0105e5f:	8b 00                	mov    (%eax),%eax$/;"	l
c0105e61	obj/kernel.asm	/^c0105e61:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105e64	obj/kernel.asm	/^c0105e64:	50                   	push   %eax$/;"	l
c0105e65	obj/kernel.asm	/^c0105e65:	e8 f7 f2 ff ff       	call   c0105161 <pa2page>$/;"	l
c0105e6a	obj/kernel.asm	/^c0105e6a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105e6d	obj/kernel.asm	/^c0105e6d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105e70	obj/kernel.asm	/^c0105e70:	6a 01                	push   $0x1$/;"	l
c0105e72	obj/kernel.asm	/^c0105e72:	50                   	push   %eax$/;"	l
c0105e73	obj/kernel.asm	/^c0105e73:	e8 02 da ff ff       	call   c010387a <free_pages>$/;"	l
c0105e78	obj/kernel.asm	/^c0105e78:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105e7b	obj/kernel.asm	/^c0105e7b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0105e7e	obj/kernel.asm	/^c0105e7e:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0105e84	obj/kernel.asm	/^c0105e84:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105e87	obj/kernel.asm	/^c0105e87:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0105e8e	obj/kernel.asm	/^c0105e8e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105e91	obj/kernel.asm	/^c0105e91:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0105e94	obj/kernel.asm	/^c0105e94:	e8 38 f6 ff ff       	call   c01054d1 <mm_destroy>$/;"	l
c0105e99	obj/kernel.asm	/^c0105e99:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105e9c	obj/kernel.asm	/^c0105e9c:	c7 05 b0 21 15 c0 00 	movl   $0x0,0xc01521b0$/;"	l
c0105ea3	obj/kernel.asm	/^c0105ea3:	00 00 00 $/;"	l
c0105ea6	obj/kernel.asm	/^c0105ea6:	e8 03 da ff ff       	call   c01038ae <nr_free_pages>$/;"	l
c0105eab	obj/kernel.asm	/^c0105eab:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0105eae	obj/kernel.asm	/^c0105eae:	74 19                	je     c0105ec9 <check_pgfault+0x1f2>$/;"	l
c0105eb0	obj/kernel.asm	/^c0105eb0:	68 44 53 11 c0       	push   $0xc0115344$/;"	l
c0105eb5	obj/kernel.asm	/^c0105eb5:	68 b3 50 11 c0       	push   $0xc01150b3$/;"	l
c0105eba	obj/kernel.asm	/^c0105eba:	68 6f 01 00 00       	push   $0x16f$/;"	l
c0105ebf	obj/kernel.asm	/^c0105ebf:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0105ec4	obj/kernel.asm	/^c0105ec4:	e8 06 a6 ff ff       	call   c01004cf <__panic>$/;"	l
c0105ec9	obj/kernel.asm	/^c0105ec9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105ecc	obj/kernel.asm	/^c0105ecc:	68 6b 53 11 c0       	push   $0xc011536b$/;"	l
c0105ed1	obj/kernel.asm	/^c0105ed1:	e8 94 a4 ff ff       	call   c010036a <cprintf>$/;"	l
c0105ed6	obj/kernel.asm	/^c0105ed6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105ed9	obj/kernel.asm	/^c0105ed9:	c9                   	leave  $/;"	l
c0105eda	obj/kernel.asm	/^c0105eda:	c3                   	ret    $/;"	l
c0105edb	obj/kernel.asm	/^c0105edb <do_pgfault>:$/;"	l
c0105edb	obj/kernel.asm	/^c0105edb:	55                   	push   %ebp$/;"	l
c0105edc	obj/kernel.asm	/^c0105edc:	89 e5                	mov    %esp,%ebp$/;"	l
c0105ede	obj/kernel.asm	/^c0105ede:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0105ee1	obj/kernel.asm	/^c0105ee1:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0105ee8	obj/kernel.asm	/^c0105ee8:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0105eeb	obj/kernel.asm	/^c0105eeb:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0105eee	obj/kernel.asm	/^c0105eee:	e8 91 f3 ff ff       	call   c0105284 <find_vma>$/;"	l
c0105ef3	obj/kernel.asm	/^c0105ef3:	83 c4 08             	add    $0x8,%esp$/;"	l
c0105ef6	obj/kernel.asm	/^c0105ef6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0105ef9	obj/kernel.asm	/^c0105ef9:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c0105efe	obj/kernel.asm	/^c0105efe:	83 c0 01             	add    $0x1,%eax$/;"	l
c0105f01	obj/kernel.asm	/^c0105f01:	a3 6c f0 14 c0       	mov    %eax,0xc014f06c$/;"	l
c0105f06	obj/kernel.asm	/^c0105f06:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0105f0a	obj/kernel.asm	/^c0105f0a:	74 0b                	je     c0105f17 <do_pgfault+0x3c>$/;"	l
c0105f0c	obj/kernel.asm	/^c0105f0c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105f0f	obj/kernel.asm	/^c0105f0f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0105f12	obj/kernel.asm	/^c0105f12:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0105f15	obj/kernel.asm	/^c0105f15:	76 18                	jbe    c0105f2f <do_pgfault+0x54>$/;"	l
c0105f17	obj/kernel.asm	/^c0105f17:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0105f1a	obj/kernel.asm	/^c0105f1a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0105f1d	obj/kernel.asm	/^c0105f1d:	68 88 53 11 c0       	push   $0xc0115388$/;"	l
c0105f22	obj/kernel.asm	/^c0105f22:	e8 43 a4 ff ff       	call   c010036a <cprintf>$/;"	l
c0105f27	obj/kernel.asm	/^c0105f27:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105f2a	obj/kernel.asm	/^c0105f2a:	e9 dd 01 00 00       	jmp    c010610c <do_pgfault+0x231>$/;"	l
c0105f2f	obj/kernel.asm	/^c0105f2f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0105f32	obj/kernel.asm	/^c0105f32:	83 e0 03             	and    $0x3,%eax$/;"	l
c0105f35	obj/kernel.asm	/^c0105f35:	85 c0                	test   %eax,%eax$/;"	l
c0105f37	obj/kernel.asm	/^c0105f37:	74 3e                	je     c0105f77 <do_pgfault+0x9c>$/;"	l
c0105f39	obj/kernel.asm	/^c0105f39:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0105f3c	obj/kernel.asm	/^c0105f3c:	74 24                	je     c0105f62 <do_pgfault+0x87>$/;"	l
c0105f3e	obj/kernel.asm	/^c0105f3e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105f41	obj/kernel.asm	/^c0105f41:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0105f44	obj/kernel.asm	/^c0105f44:	83 e0 02             	and    $0x2,%eax$/;"	l
c0105f47	obj/kernel.asm	/^c0105f47:	85 c0                	test   %eax,%eax$/;"	l
c0105f49	obj/kernel.asm	/^c0105f49:	75 15                	jne    c0105f60 <do_pgfault+0x85>$/;"	l
c0105f4b	obj/kernel.asm	/^c0105f4b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105f4e	obj/kernel.asm	/^c0105f4e:	68 b8 53 11 c0       	push   $0xc01153b8$/;"	l
c0105f53	obj/kernel.asm	/^c0105f53:	e8 12 a4 ff ff       	call   c010036a <cprintf>$/;"	l
c0105f58	obj/kernel.asm	/^c0105f58:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105f5b	obj/kernel.asm	/^c0105f5b:	e9 ac 01 00 00       	jmp    c010610c <do_pgfault+0x231>$/;"	l
c0105f60	obj/kernel.asm	/^c0105f60:	eb 37                	jmp    c0105f99 <do_pgfault+0xbe>$/;"	l
c0105f62	obj/kernel.asm	/^c0105f62:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105f65	obj/kernel.asm	/^c0105f65:	68 18 54 11 c0       	push   $0xc0115418$/;"	l
c0105f6a	obj/kernel.asm	/^c0105f6a:	e8 fb a3 ff ff       	call   c010036a <cprintf>$/;"	l
c0105f6f	obj/kernel.asm	/^c0105f6f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105f72	obj/kernel.asm	/^c0105f72:	e9 95 01 00 00       	jmp    c010610c <do_pgfault+0x231>$/;"	l
c0105f77	obj/kernel.asm	/^c0105f77:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105f7a	obj/kernel.asm	/^c0105f7a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0105f7d	obj/kernel.asm	/^c0105f7d:	83 e0 05             	and    $0x5,%eax$/;"	l
c0105f80	obj/kernel.asm	/^c0105f80:	85 c0                	test   %eax,%eax$/;"	l
c0105f82	obj/kernel.asm	/^c0105f82:	75 15                	jne    c0105f99 <do_pgfault+0xbe>$/;"	l
c0105f84	obj/kernel.asm	/^c0105f84:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105f87	obj/kernel.asm	/^c0105f87:	68 50 54 11 c0       	push   $0xc0115450$/;"	l
c0105f8c	obj/kernel.asm	/^c0105f8c:	e8 d9 a3 ff ff       	call   c010036a <cprintf>$/;"	l
c0105f91	obj/kernel.asm	/^c0105f91:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105f94	obj/kernel.asm	/^c0105f94:	e9 73 01 00 00       	jmp    c010610c <do_pgfault+0x231>$/;"	l
c0105f99	obj/kernel.asm	/^c0105f99:	c7 45 f0 04 00 00 00 	movl   $0x4,-0x10(%ebp)$/;"	l
c0105fa0	obj/kernel.asm	/^c0105fa0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0105fa3	obj/kernel.asm	/^c0105fa3:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0105fa6	obj/kernel.asm	/^c0105fa6:	83 e0 02             	and    $0x2,%eax$/;"	l
c0105fa9	obj/kernel.asm	/^c0105fa9:	85 c0                	test   %eax,%eax$/;"	l
c0105fab	obj/kernel.asm	/^c0105fab:	74 04                	je     c0105fb1 <do_pgfault+0xd6>$/;"	l
c0105fad	obj/kernel.asm	/^c0105fad:	83 4d f0 02          	orl    $0x2,-0x10(%ebp)$/;"	l
c0105fb1	obj/kernel.asm	/^c0105fb1:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0105fb4	obj/kernel.asm	/^c0105fb4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0105fb7	obj/kernel.asm	/^c0105fb7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0105fba	obj/kernel.asm	/^c0105fba:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0105fbf	obj/kernel.asm	/^c0105fbf:	89 45 10             	mov    %eax,0x10(%ebp)$/;"	l
c0105fc2	obj/kernel.asm	/^c0105fc2:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0105fc9	obj/kernel.asm	/^c0105fc9:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0105fd0	obj/kernel.asm	/^c0105fd0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0105fd3	obj/kernel.asm	/^c0105fd3:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0105fd6	obj/kernel.asm	/^c0105fd6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0105fd9	obj/kernel.asm	/^c0105fd9:	6a 01                	push   $0x1$/;"	l
c0105fdb	obj/kernel.asm	/^c0105fdb:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0105fde	obj/kernel.asm	/^c0105fde:	50                   	push   %eax$/;"	l
c0105fdf	obj/kernel.asm	/^c0105fdf:	e8 23 df ff ff       	call   c0103f07 <get_pte>$/;"	l
c0105fe4	obj/kernel.asm	/^c0105fe4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0105fe7	obj/kernel.asm	/^c0105fe7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0105fea	obj/kernel.asm	/^c0105fea:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0105fee	obj/kernel.asm	/^c0105fee:	75 15                	jne    c0106005 <do_pgfault+0x12a>$/;"	l
c0105ff0	obj/kernel.asm	/^c0105ff0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0105ff3	obj/kernel.asm	/^c0105ff3:	68 b3 54 11 c0       	push   $0xc01154b3$/;"	l
c0105ff8	obj/kernel.asm	/^c0105ff8:	e8 6d a3 ff ff       	call   c010036a <cprintf>$/;"	l
c0105ffd	obj/kernel.asm	/^c0105ffd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106000	obj/kernel.asm	/^c0106000:	e9 07 01 00 00       	jmp    c010610c <do_pgfault+0x231>$/;"	l
c0106005	obj/kernel.asm	/^c0106005:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106008	obj/kernel.asm	/^c0106008:	8b 00                	mov    (%eax),%eax$/;"	l
c010600a	obj/kernel.asm	/^c010600a:	85 c0                	test   %eax,%eax$/;"	l
c010600c	obj/kernel.asm	/^c010600c:	75 35                	jne    c0106043 <do_pgfault+0x168>$/;"	l
c010600e	obj/kernel.asm	/^c010600e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106011	obj/kernel.asm	/^c0106011:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106014	obj/kernel.asm	/^c0106014:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106017	obj/kernel.asm	/^c0106017:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010601a	obj/kernel.asm	/^c010601a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010601d	obj/kernel.asm	/^c010601d:	50                   	push   %eax$/;"	l
c010601e	obj/kernel.asm	/^c010601e:	e8 99 e5 ff ff       	call   c01045bc <pgdir_alloc_page>$/;"	l
c0106023	obj/kernel.asm	/^c0106023:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106026	obj/kernel.asm	/^c0106026:	85 c0                	test   %eax,%eax$/;"	l
c0106028	obj/kernel.asm	/^c0106028:	0f 85 d7 00 00 00    	jne    c0106105 <do_pgfault+0x22a>$/;"	l
c010602e	obj/kernel.asm	/^c010602e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106031	obj/kernel.asm	/^c0106031:	68 d4 54 11 c0       	push   $0xc01154d4$/;"	l
c0106036	obj/kernel.asm	/^c0106036:	e8 2f a3 ff ff       	call   c010036a <cprintf>$/;"	l
c010603b	obj/kernel.asm	/^c010603b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010603e	obj/kernel.asm	/^c010603e:	e9 c9 00 00 00       	jmp    c010610c <do_pgfault+0x231>$/;"	l
c0106043	obj/kernel.asm	/^c0106043:	c7 45 e0 00 00 00 00 	movl   $0x0,-0x20(%ebp)$/;"	l
c010604a	obj/kernel.asm	/^c010604a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010604d	obj/kernel.asm	/^c010604d:	8b 00                	mov    (%eax),%eax$/;"	l
c010604f	obj/kernel.asm	/^c010604f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106052	obj/kernel.asm	/^c0106052:	50                   	push   %eax$/;"	l
c0106053	obj/kernel.asm	/^c0106053:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0106056	obj/kernel.asm	/^c0106056:	68 fb 54 11 c0       	push   $0xc01154fb$/;"	l
c010605b	obj/kernel.asm	/^c010605b:	e8 0a a3 ff ff       	call   c010036a <cprintf>$/;"	l
c0106060	obj/kernel.asm	/^c0106060:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106063	obj/kernel.asm	/^c0106063:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106066	obj/kernel.asm	/^c0106066:	8b 00                	mov    (%eax),%eax$/;"	l
c0106068	obj/kernel.asm	/^c0106068:	83 e0 01             	and    $0x1,%eax$/;"	l
c010606b	obj/kernel.asm	/^c010606b:	85 c0                	test   %eax,%eax$/;"	l
c010606d	obj/kernel.asm	/^c010606d:	74 17                	je     c0106086 <do_pgfault+0x1ab>$/;"	l
c010606f	obj/kernel.asm	/^c010606f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106072	obj/kernel.asm	/^c0106072:	68 18 55 11 c0       	push   $0xc0115518$/;"	l
c0106077	obj/kernel.asm	/^c0106077:	68 08 02 00 00       	push   $0x208$/;"	l
c010607c	obj/kernel.asm	/^c010607c:	68 c8 50 11 c0       	push   $0xc01150c8$/;"	l
c0106081	obj/kernel.asm	/^c0106081:	e8 49 a4 ff ff       	call   c01004cf <__panic>$/;"	l
c0106086	obj/kernel.asm	/^c0106086:	a1 70 f0 14 c0       	mov    0xc014f070,%eax$/;"	l
c010608b	obj/kernel.asm	/^c010608b:	85 c0                	test   %eax,%eax$/;"	l
c010608d	obj/kernel.asm	/^c010608d:	74 30                	je     c01060bf <do_pgfault+0x1e4>$/;"	l
c010608f	obj/kernel.asm	/^c010608f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106092	obj/kernel.asm	/^c0106092:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c0106095	obj/kernel.asm	/^c0106095:	50                   	push   %eax$/;"	l
c0106096	obj/kernel.asm	/^c0106096:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0106099	obj/kernel.asm	/^c0106099:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010609c	obj/kernel.asm	/^c010609c:	e8 2a 05 00 00       	call   c01065cb <swap_in>$/;"	l
c01060a1	obj/kernel.asm	/^c01060a1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01060a4	obj/kernel.asm	/^c01060a4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01060a7	obj/kernel.asm	/^c01060a7:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01060ab	obj/kernel.asm	/^c01060ab:	74 2b                	je     c01060d8 <do_pgfault+0x1fd>$/;"	l
c01060ad	obj/kernel.asm	/^c01060ad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01060b0	obj/kernel.asm	/^c01060b0:	68 37 55 11 c0       	push   $0xc0115537$/;"	l
c01060b5	obj/kernel.asm	/^c01060b5:	e8 b0 a2 ff ff       	call   c010036a <cprintf>$/;"	l
c01060ba	obj/kernel.asm	/^c01060ba:	83 c4 10             	add    $0x10,%esp$/;"	l
c01060bd	obj/kernel.asm	/^c01060bd:	eb 4d                	jmp    c010610c <do_pgfault+0x231>$/;"	l
c01060bf	obj/kernel.asm	/^c01060bf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01060c2	obj/kernel.asm	/^c01060c2:	8b 00                	mov    (%eax),%eax$/;"	l
c01060c4	obj/kernel.asm	/^c01060c4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01060c7	obj/kernel.asm	/^c01060c7:	50                   	push   %eax$/;"	l
c01060c8	obj/kernel.asm	/^c01060c8:	68 58 55 11 c0       	push   $0xc0115558$/;"	l
c01060cd	obj/kernel.asm	/^c01060cd:	e8 98 a2 ff ff       	call   c010036a <cprintf>$/;"	l
c01060d2	obj/kernel.asm	/^c01060d2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01060d5	obj/kernel.asm	/^c01060d5:	90                   	nop$/;"	l
c01060d6	obj/kernel.asm	/^c01060d6:	eb 34                	jmp    c010610c <do_pgfault+0x231>$/;"	l
c01060d8	obj/kernel.asm	/^c01060d8:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01060db	obj/kernel.asm	/^c01060db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01060de	obj/kernel.asm	/^c01060de:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01060e1	obj/kernel.asm	/^c01060e1:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01060e4	obj/kernel.asm	/^c01060e4:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01060e7	obj/kernel.asm	/^c01060e7:	52                   	push   %edx$/;"	l
c01060e8	obj/kernel.asm	/^c01060e8:	50                   	push   %eax$/;"	l
c01060e9	obj/kernel.asm	/^c01060e9:	e8 c6 e3 ff ff       	call   c01044b4 <page_insert>$/;"	l
c01060ee	obj/kernel.asm	/^c01060ee:	83 c4 10             	add    $0x10,%esp$/;"	l
c01060f1	obj/kernel.asm	/^c01060f1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01060f4	obj/kernel.asm	/^c01060f4:	6a 01                	push   $0x1$/;"	l
c01060f6	obj/kernel.asm	/^c01060f6:	50                   	push   %eax$/;"	l
c01060f7	obj/kernel.asm	/^c01060f7:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01060fa	obj/kernel.asm	/^c01060fa:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01060fd	obj/kernel.asm	/^c01060fd:	e8 39 03 00 00       	call   c010643b <swap_map_swappable>$/;"	l
c0106102	obj/kernel.asm	/^c0106102:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106105	obj/kernel.asm	/^c0106105:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010610c	obj/kernel.asm	/^c010610c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010610f	obj/kernel.asm	/^c010610f:	c9                   	leave  $/;"	l
c0106110	obj/kernel.asm	/^c0106110:	c3                   	ret    $/;"	l
c0106111	obj/kernel.asm	/^c0106111 <user_mem_check>:$/;"	l
c0106111	obj/kernel.asm	/^c0106111:	55                   	push   %ebp$/;"	l
c0106112	obj/kernel.asm	/^c0106112:	89 e5                	mov    %esp,%ebp$/;"	l
c0106114	obj/kernel.asm	/^c0106114:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0106117	obj/kernel.asm	/^c0106117:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010611b	obj/kernel.asm	/^c010611b:	0f 84 dc 00 00 00    	je     c01061fd <user_mem_check+0xec>$/;"	l
c0106121	obj/kernel.asm	/^c0106121:	81 7d 0c ff ff 1f 00 	cmpl   $0x1fffff,0xc(%ebp)$/;"	l
c0106128	obj/kernel.asm	/^c0106128:	76 1c                	jbe    c0106146 <user_mem_check+0x35>$/;"	l
c010612a	obj/kernel.asm	/^c010612a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010612d	obj/kernel.asm	/^c010612d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106130	obj/kernel.asm	/^c0106130:	01 d0                	add    %edx,%eax$/;"	l
c0106132	obj/kernel.asm	/^c0106132:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106135	obj/kernel.asm	/^c0106135:	76 0f                	jbe    c0106146 <user_mem_check+0x35>$/;"	l
c0106137	obj/kernel.asm	/^c0106137:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010613a	obj/kernel.asm	/^c010613a:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010613d	obj/kernel.asm	/^c010613d:	01 d0                	add    %edx,%eax$/;"	l
c010613f	obj/kernel.asm	/^c010613f:	3d 00 00 00 b0       	cmp    $0xb0000000,%eax$/;"	l
c0106144	obj/kernel.asm	/^c0106144:	76 0a                	jbe    c0106150 <user_mem_check+0x3f>$/;"	l
c0106146	obj/kernel.asm	/^c0106146:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010614b	obj/kernel.asm	/^c010614b:	e9 df 00 00 00       	jmp    c010622f <user_mem_check+0x11e>$/;"	l
c0106150	obj/kernel.asm	/^c0106150:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106153	obj/kernel.asm	/^c0106153:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0106156	obj/kernel.asm	/^c0106156:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106159	obj/kernel.asm	/^c0106159:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010615c	obj/kernel.asm	/^c010615c:	01 d0                	add    %edx,%eax$/;"	l
c010615e	obj/kernel.asm	/^c010615e:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0106161	obj/kernel.asm	/^c0106161:	e9 84 00 00 00       	jmp    c01061ea <user_mem_check+0xd9>$/;"	l
c0106166	obj/kernel.asm	/^c0106166:	ff 75 fc             	pushl  -0x4(%ebp)$/;"	l
c0106169	obj/kernel.asm	/^c0106169:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010616c	obj/kernel.asm	/^c010616c:	e8 13 f1 ff ff       	call   c0105284 <find_vma>$/;"	l
c0106171	obj/kernel.asm	/^c0106171:	83 c4 08             	add    $0x8,%esp$/;"	l
c0106174	obj/kernel.asm	/^c0106174:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106177	obj/kernel.asm	/^c0106177:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010617b	obj/kernel.asm	/^c010617b:	74 0b                	je     c0106188 <user_mem_check+0x77>$/;"	l
c010617d	obj/kernel.asm	/^c010617d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106180	obj/kernel.asm	/^c0106180:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106183	obj/kernel.asm	/^c0106183:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0106186	obj/kernel.asm	/^c0106186:	76 0a                	jbe    c0106192 <user_mem_check+0x81>$/;"	l
c0106188	obj/kernel.asm	/^c0106188:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010618d	obj/kernel.asm	/^c010618d:	e9 9d 00 00 00       	jmp    c010622f <user_mem_check+0x11e>$/;"	l
c0106192	obj/kernel.asm	/^c0106192:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106195	obj/kernel.asm	/^c0106195:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106198	obj/kernel.asm	/^c0106198:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010619c	obj/kernel.asm	/^c010619c:	74 07                	je     c01061a5 <user_mem_check+0x94>$/;"	l
c010619e	obj/kernel.asm	/^c010619e:	ba 02 00 00 00       	mov    $0x2,%edx$/;"	l
c01061a3	obj/kernel.asm	/^c01061a3:	eb 05                	jmp    c01061aa <user_mem_check+0x99>$/;"	l
c01061a5	obj/kernel.asm	/^c01061a5:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c01061aa	obj/kernel.asm	/^c01061aa:	21 d0                	and    %edx,%eax$/;"	l
c01061ac	obj/kernel.asm	/^c01061ac:	85 c0                	test   %eax,%eax$/;"	l
c01061ae	obj/kernel.asm	/^c01061ae:	75 07                	jne    c01061b7 <user_mem_check+0xa6>$/;"	l
c01061b0	obj/kernel.asm	/^c01061b0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01061b5	obj/kernel.asm	/^c01061b5:	eb 78                	jmp    c010622f <user_mem_check+0x11e>$/;"	l
c01061b7	obj/kernel.asm	/^c01061b7:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01061bb	obj/kernel.asm	/^c01061bb:	74 24                	je     c01061e1 <user_mem_check+0xd0>$/;"	l
c01061bd	obj/kernel.asm	/^c01061bd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01061c0	obj/kernel.asm	/^c01061c0:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01061c3	obj/kernel.asm	/^c01061c3:	83 e0 08             	and    $0x8,%eax$/;"	l
c01061c6	obj/kernel.asm	/^c01061c6:	85 c0                	test   %eax,%eax$/;"	l
c01061c8	obj/kernel.asm	/^c01061c8:	74 17                	je     c01061e1 <user_mem_check+0xd0>$/;"	l
c01061ca	obj/kernel.asm	/^c01061ca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01061cd	obj/kernel.asm	/^c01061cd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01061d0	obj/kernel.asm	/^c01061d0:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c01061d5	obj/kernel.asm	/^c01061d5:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01061d8	obj/kernel.asm	/^c01061d8:	76 07                	jbe    c01061e1 <user_mem_check+0xd0>$/;"	l
c01061da	obj/kernel.asm	/^c01061da:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01061df	obj/kernel.asm	/^c01061df:	eb 4e                	jmp    c010622f <user_mem_check+0x11e>$/;"	l
c01061e1	obj/kernel.asm	/^c01061e1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01061e4	obj/kernel.asm	/^c01061e4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01061e7	obj/kernel.asm	/^c01061e7:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01061ea	obj/kernel.asm	/^c01061ea:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01061ed	obj/kernel.asm	/^c01061ed:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c01061f0	obj/kernel.asm	/^c01061f0:	0f 82 70 ff ff ff    	jb     c0106166 <user_mem_check+0x55>$/;"	l
c01061f6	obj/kernel.asm	/^c01061f6:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01061fb	obj/kernel.asm	/^c01061fb:	eb 32                	jmp    c010622f <user_mem_check+0x11e>$/;"	l
c01061fd	obj/kernel.asm	/^c01061fd:	81 7d 0c ff ff ff bf 	cmpl   $0xbfffffff,0xc(%ebp)$/;"	l
c0106204	obj/kernel.asm	/^c0106204:	76 23                	jbe    c0106229 <user_mem_check+0x118>$/;"	l
c0106206	obj/kernel.asm	/^c0106206:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106209	obj/kernel.asm	/^c0106209:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010620c	obj/kernel.asm	/^c010620c:	01 d0                	add    %edx,%eax$/;"	l
c010620e	obj/kernel.asm	/^c010620e:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0106211	obj/kernel.asm	/^c0106211:	76 16                	jbe    c0106229 <user_mem_check+0x118>$/;"	l
c0106213	obj/kernel.asm	/^c0106213:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0106216	obj/kernel.asm	/^c0106216:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106219	obj/kernel.asm	/^c0106219:	01 d0                	add    %edx,%eax$/;"	l
c010621b	obj/kernel.asm	/^c010621b:	3d 00 00 00 f8       	cmp    $0xf8000000,%eax$/;"	l
c0106220	obj/kernel.asm	/^c0106220:	77 07                	ja     c0106229 <user_mem_check+0x118>$/;"	l
c0106222	obj/kernel.asm	/^c0106222:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0106227	obj/kernel.asm	/^c0106227:	eb 05                	jmp    c010622e <user_mem_check+0x11d>$/;"	l
c0106229	obj/kernel.asm	/^c0106229:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010622e	obj/kernel.asm	/^c010622e:	90                   	nop$/;"	l
c010622f	obj/kernel.asm	/^c010622f:	c9                   	leave  $/;"	l
c0106230	obj/kernel.asm	/^c0106230:	c3                   	ret    $/;"	l
c0106231	obj/kernel.asm	/^c0106231 <copy_string>:$/;"	l
c0106231	obj/kernel.asm	/^c0106231:	55                   	push   %ebp$/;"	l
c0106232	obj/kernel.asm	/^c0106232:	89 e5                	mov    %esp,%ebp$/;"	l
c0106234	obj/kernel.asm	/^c0106234:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106237	obj/kernel.asm	/^c0106237:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010623a	obj/kernel.asm	/^c010623a:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c010623f	obj/kernel.asm	/^c010623f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106242	obj/kernel.asm	/^c0106242:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106245	obj/kernel.asm	/^c0106245:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010624a	obj/kernel.asm	/^c010624a:	89 c2                	mov    %eax,%edx$/;"	l
c010624c	obj/kernel.asm	/^c010624c:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010624f	obj/kernel.asm	/^c010624f:	29 c2                	sub    %eax,%edx$/;"	l
c0106251	obj/kernel.asm	/^c0106251:	89 d0                	mov    %edx,%eax$/;"	l
c0106253	obj/kernel.asm	/^c0106253:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106256	obj/kernel.asm	/^c0106256:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106259	obj/kernel.asm	/^c0106259:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c010625c	obj/kernel.asm	/^c010625c:	76 06                	jbe    c0106264 <copy_string+0x33>$/;"	l
c010625e	obj/kernel.asm	/^c010625e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0106261	obj/kernel.asm	/^c0106261:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106264	obj/kernel.asm	/^c0106264:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106267	obj/kernel.asm	/^c0106267:	6a 00                	push   $0x0$/;"	l
c0106269	obj/kernel.asm	/^c0106269:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010626c	obj/kernel.asm	/^c010626c:	50                   	push   %eax$/;"	l
c010626d	obj/kernel.asm	/^c010626d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106270	obj/kernel.asm	/^c0106270:	e8 9c fe ff ff       	call   c0106111 <user_mem_check>$/;"	l
c0106275	obj/kernel.asm	/^c0106275:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106278	obj/kernel.asm	/^c0106278:	85 c0                	test   %eax,%eax$/;"	l
c010627a	obj/kernel.asm	/^c010627a:	75 07                	jne    c0106283 <copy_string+0x52>$/;"	l
c010627c	obj/kernel.asm	/^c010627c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106281	obj/kernel.asm	/^c0106281:	eb 7c                	jmp    c01062ff <copy_string+0xce>$/;"	l
c0106283	obj/kernel.asm	/^c0106283:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106286	obj/kernel.asm	/^c0106286:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106289	obj/kernel.asm	/^c0106289:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010628c	obj/kernel.asm	/^c010628c:	e8 cc d1 00 00       	call   c011345d <strnlen>$/;"	l
c0106291	obj/kernel.asm	/^c0106291:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106294	obj/kernel.asm	/^c0106294:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0106297	obj/kernel.asm	/^c0106297:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010629a	obj/kernel.asm	/^c010629a:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010629d	obj/kernel.asm	/^c010629d:	73 1f                	jae    c01062be <copy_string+0x8d>$/;"	l
c010629f	obj/kernel.asm	/^c010629f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01062a2	obj/kernel.asm	/^c01062a2:	83 c0 01             	add    $0x1,%eax$/;"	l
c01062a5	obj/kernel.asm	/^c01062a5:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01062a8	obj/kernel.asm	/^c01062a8:	50                   	push   %eax$/;"	l
c01062a9	obj/kernel.asm	/^c01062a9:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01062ac	obj/kernel.asm	/^c01062ac:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01062af	obj/kernel.asm	/^c01062af:	e8 be d5 00 00       	call   c0113872 <memcpy>$/;"	l
c01062b4	obj/kernel.asm	/^c01062b4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01062b7	obj/kernel.asm	/^c01062b7:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c01062bc	obj/kernel.asm	/^c01062bc:	eb 41                	jmp    c01062ff <copy_string+0xce>$/;"	l
c01062be	obj/kernel.asm	/^c01062be:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01062c1	obj/kernel.asm	/^c01062c1:	3b 45 14             	cmp    0x14(%ebp),%eax$/;"	l
c01062c4	obj/kernel.asm	/^c01062c4:	75 07                	jne    c01062cd <copy_string+0x9c>$/;"	l
c01062c6	obj/kernel.asm	/^c01062c6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01062cb	obj/kernel.asm	/^c01062cb:	eb 32                	jmp    c01062ff <copy_string+0xce>$/;"	l
c01062cd	obj/kernel.asm	/^c01062cd:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01062d0	obj/kernel.asm	/^c01062d0:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01062d3	obj/kernel.asm	/^c01062d3:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01062d6	obj/kernel.asm	/^c01062d6:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01062d9	obj/kernel.asm	/^c01062d9:	e8 94 d5 00 00       	call   c0113872 <memcpy>$/;"	l
c01062de	obj/kernel.asm	/^c01062de:	83 c4 10             	add    $0x10,%esp$/;"	l
c01062e1	obj/kernel.asm	/^c01062e1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01062e4	obj/kernel.asm	/^c01062e4:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c01062e7	obj/kernel.asm	/^c01062e7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01062ea	obj/kernel.asm	/^c01062ea:	01 45 10             	add    %eax,0x10(%ebp)$/;"	l
c01062ed	obj/kernel.asm	/^c01062ed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01062f0	obj/kernel.asm	/^c01062f0:	29 45 14             	sub    %eax,0x14(%ebp)$/;"	l
c01062f3	obj/kernel.asm	/^c01062f3:	c7 45 f4 00 10 00 00 	movl   $0x1000,-0xc(%ebp)$/;"	l
c01062fa	obj/kernel.asm	/^c01062fa:	e9 57 ff ff ff       	jmp    c0106256 <copy_string+0x25>$/;"	l
c01062ff	obj/kernel.asm	/^c01062ff:	c9                   	leave  $/;"	l
c0106300	obj/kernel.asm	/^c0106300:	c3                   	ret    $/;"	l
c0106301	obj/kernel.asm	/^c0106301 <pa2page>:$/;"	l
c0106301	obj/kernel.asm	/^c0106301:	55                   	push   %ebp$/;"	l
c0106302	obj/kernel.asm	/^c0106302:	89 e5                	mov    %esp,%ebp$/;"	l
c0106304	obj/kernel.asm	/^c0106304:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106307	obj/kernel.asm	/^c0106307:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010630a	obj/kernel.asm	/^c010630a:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010630d	obj/kernel.asm	/^c010630d:	89 c2                	mov    %eax,%edx$/;"	l
c010630f	obj/kernel.asm	/^c010630f:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c0106314	obj/kernel.asm	/^c0106314:	39 c2                	cmp    %eax,%edx$/;"	l
c0106316	obj/kernel.asm	/^c0106316:	72 14                	jb     c010632c <pa2page+0x2b>$/;"	l
c0106318	obj/kernel.asm	/^c0106318:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010631b	obj/kernel.asm	/^c010631b:	68 80 55 11 c0       	push   $0xc0115580$/;"	l
c0106320	obj/kernel.asm	/^c0106320:	6a 5e                	push   $0x5e$/;"	l
c0106322	obj/kernel.asm	/^c0106322:	68 9f 55 11 c0       	push   $0xc011559f$/;"	l
c0106327	obj/kernel.asm	/^c0106327:	e8 a3 a1 ff ff       	call   c01004cf <__panic>$/;"	l
c010632c	obj/kernel.asm	/^c010632c:	8b 0d ac 21 15 c0    	mov    0xc01521ac,%ecx$/;"	l
c0106332	obj/kernel.asm	/^c0106332:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106335	obj/kernel.asm	/^c0106335:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106338	obj/kernel.asm	/^c0106338:	89 c2                	mov    %eax,%edx$/;"	l
c010633a	obj/kernel.asm	/^c010633a:	89 d0                	mov    %edx,%eax$/;"	l
c010633c	obj/kernel.asm	/^c010633c:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010633f	obj/kernel.asm	/^c010633f:	01 d0                	add    %edx,%eax$/;"	l
c0106341	obj/kernel.asm	/^c0106341:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0106344	obj/kernel.asm	/^c0106344:	01 c8                	add    %ecx,%eax$/;"	l
c0106346	obj/kernel.asm	/^c0106346:	c9                   	leave  $/;"	l
c0106347	obj/kernel.asm	/^c0106347:	c3                   	ret    $/;"	l
c0106348	obj/kernel.asm	/^c0106348 <pte2page>:$/;"	l
c0106348	obj/kernel.asm	/^c0106348:	55                   	push   %ebp$/;"	l
c0106349	obj/kernel.asm	/^c0106349:	89 e5                	mov    %esp,%ebp$/;"	l
c010634b	obj/kernel.asm	/^c010634b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010634e	obj/kernel.asm	/^c010634e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106351	obj/kernel.asm	/^c0106351:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106354	obj/kernel.asm	/^c0106354:	85 c0                	test   %eax,%eax$/;"	l
c0106356	obj/kernel.asm	/^c0106356:	75 14                	jne    c010636c <pte2page+0x24>$/;"	l
c0106358	obj/kernel.asm	/^c0106358:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010635b	obj/kernel.asm	/^c010635b:	68 b0 55 11 c0       	push   $0xc01155b0$/;"	l
c0106360	obj/kernel.asm	/^c0106360:	6a 70                	push   $0x70$/;"	l
c0106362	obj/kernel.asm	/^c0106362:	68 9f 55 11 c0       	push   $0xc011559f$/;"	l
c0106367	obj/kernel.asm	/^c0106367:	e8 63 a1 ff ff       	call   c01004cf <__panic>$/;"	l
c010636c	obj/kernel.asm	/^c010636c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010636f	obj/kernel.asm	/^c010636f:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c0106374	obj/kernel.asm	/^c0106374:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106377	obj/kernel.asm	/^c0106377:	50                   	push   %eax$/;"	l
c0106378	obj/kernel.asm	/^c0106378:	e8 84 ff ff ff       	call   c0106301 <pa2page>$/;"	l
c010637d	obj/kernel.asm	/^c010637d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106380	obj/kernel.asm	/^c0106380:	c9                   	leave  $/;"	l
c0106381	obj/kernel.asm	/^c0106381:	c3                   	ret    $/;"	l
c0106382	obj/kernel.asm	/^c0106382 <swap_init>:$/;"	l
c0106382	obj/kernel.asm	/^c0106382:	55                   	push   %ebp$/;"	l
c0106383	obj/kernel.asm	/^c0106383:	89 e5                	mov    %esp,%ebp$/;"	l
c0106385	obj/kernel.asm	/^c0106385:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106388	obj/kernel.asm	/^c0106388:	e8 ac 7d 00 00       	call   c010e139 <swapfs_init>$/;"	l
c010638d	obj/kernel.asm	/^c010638d:	a1 5c 22 15 c0       	mov    0xc015225c,%eax$/;"	l
c0106392	obj/kernel.asm	/^c0106392:	3d ff 03 00 00       	cmp    $0x3ff,%eax$/;"	l
c0106397	obj/kernel.asm	/^c0106397:	76 0c                	jbe    c01063a5 <swap_init+0x23>$/;"	l
c0106399	obj/kernel.asm	/^c0106399:	a1 5c 22 15 c0       	mov    0xc015225c,%eax$/;"	l
c010639e	obj/kernel.asm	/^c010639e:	3d ff ff ff 00       	cmp    $0xffffff,%eax$/;"	l
c01063a3	obj/kernel.asm	/^c01063a3:	76 17                	jbe    c01063bc <swap_init+0x3a>$/;"	l
c01063a5	obj/kernel.asm	/^c01063a5:	a1 5c 22 15 c0       	mov    0xc015225c,%eax$/;"	l
c01063aa	obj/kernel.asm	/^c01063aa:	50                   	push   %eax$/;"	l
c01063ab	obj/kernel.asm	/^c01063ab:	68 d1 55 11 c0       	push   $0xc01155d1$/;"	l
c01063b0	obj/kernel.asm	/^c01063b0:	6a 27                	push   $0x27$/;"	l
c01063b2	obj/kernel.asm	/^c01063b2:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c01063b7	obj/kernel.asm	/^c01063b7:	e8 13 a1 ff ff       	call   c01004cf <__panic>$/;"	l
c01063bc	obj/kernel.asm	/^c01063bc:	c7 05 78 f0 14 c0 c0 	movl   $0xc014dac0,0xc014f078$/;"	l
c01063c3	obj/kernel.asm	/^c01063c3:	da 14 c0 $/;"	d
c01063c6	obj/kernel.asm	/^c01063c6:	a1 78 f0 14 c0       	mov    0xc014f078,%eax$/;"	l
c01063cb	obj/kernel.asm	/^c01063cb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01063ce	obj/kernel.asm	/^c01063ce:	ff d0                	call   *%eax$/;"	l
c01063d0	obj/kernel.asm	/^c01063d0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01063d3	obj/kernel.asm	/^c01063d3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01063d7	obj/kernel.asm	/^c01063d7:	75 27                	jne    c0106400 <swap_init+0x7e>$/;"	l
c01063d9	obj/kernel.asm	/^c01063d9:	c7 05 70 f0 14 c0 01 	movl   $0x1,0xc014f070$/;"	l
c01063e0	obj/kernel.asm	/^c01063e0:	00 00 00 $/;"	l
c01063e3	obj/kernel.asm	/^c01063e3:	a1 78 f0 14 c0       	mov    0xc014f078,%eax$/;"	l
c01063e8	obj/kernel.asm	/^c01063e8:	8b 00                	mov    (%eax),%eax$/;"	l
c01063ea	obj/kernel.asm	/^c01063ea:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01063ed	obj/kernel.asm	/^c01063ed:	50                   	push   %eax$/;"	l
c01063ee	obj/kernel.asm	/^c01063ee:	68 fb 55 11 c0       	push   $0xc01155fb$/;"	l
c01063f3	obj/kernel.asm	/^c01063f3:	e8 72 9f ff ff       	call   c010036a <cprintf>$/;"	l
c01063f8	obj/kernel.asm	/^c01063f8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01063fb	obj/kernel.asm	/^c01063fb:	e8 f6 03 00 00       	call   c01067f6 <check_swap>$/;"	l
c0106400	obj/kernel.asm	/^c0106400:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106403	obj/kernel.asm	/^c0106403:	c9                   	leave  $/;"	l
c0106404	obj/kernel.asm	/^c0106404:	c3                   	ret    $/;"	l
c0106405	obj/kernel.asm	/^c0106405 <swap_init_mm>:$/;"	l
c0106405	obj/kernel.asm	/^c0106405:	55                   	push   %ebp$/;"	l
c0106406	obj/kernel.asm	/^c0106406:	89 e5                	mov    %esp,%ebp$/;"	l
c0106408	obj/kernel.asm	/^c0106408:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010640b	obj/kernel.asm	/^c010640b:	a1 78 f0 14 c0       	mov    0xc014f078,%eax$/;"	l
c0106410	obj/kernel.asm	/^c0106410:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0106413	obj/kernel.asm	/^c0106413:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106416	obj/kernel.asm	/^c0106416:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106419	obj/kernel.asm	/^c0106419:	ff d0                	call   *%eax$/;"	l
c010641b	obj/kernel.asm	/^c010641b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010641e	obj/kernel.asm	/^c010641e:	c9                   	leave  $/;"	l
c010641f	obj/kernel.asm	/^c010641f:	c3                   	ret    $/;"	l
c0106420	obj/kernel.asm	/^c0106420 <swap_tick_event>:$/;"	l
c0106420	obj/kernel.asm	/^c0106420:	55                   	push   %ebp$/;"	l
c0106421	obj/kernel.asm	/^c0106421:	89 e5                	mov    %esp,%ebp$/;"	l
c0106423	obj/kernel.asm	/^c0106423:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106426	obj/kernel.asm	/^c0106426:	a1 78 f0 14 c0       	mov    0xc014f078,%eax$/;"	l
c010642b	obj/kernel.asm	/^c010642b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010642e	obj/kernel.asm	/^c010642e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106431	obj/kernel.asm	/^c0106431:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106434	obj/kernel.asm	/^c0106434:	ff d0                	call   *%eax$/;"	l
c0106436	obj/kernel.asm	/^c0106436:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106439	obj/kernel.asm	/^c0106439:	c9                   	leave  $/;"	l
c010643a	obj/kernel.asm	/^c010643a:	c3                   	ret    $/;"	l
c010643b	obj/kernel.asm	/^c010643b <swap_map_swappable>:$/;"	l
c010643b	obj/kernel.asm	/^c010643b:	55                   	push   %ebp$/;"	l
c010643c	obj/kernel.asm	/^c010643c:	89 e5                	mov    %esp,%ebp$/;"	l
c010643e	obj/kernel.asm	/^c010643e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106441	obj/kernel.asm	/^c0106441:	a1 78 f0 14 c0       	mov    0xc014f078,%eax$/;"	l
c0106446	obj/kernel.asm	/^c0106446:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0106449	obj/kernel.asm	/^c0106449:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010644c	obj/kernel.asm	/^c010644c:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010644f	obj/kernel.asm	/^c010644f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0106452	obj/kernel.asm	/^c0106452:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106455	obj/kernel.asm	/^c0106455:	ff d0                	call   *%eax$/;"	l
c0106457	obj/kernel.asm	/^c0106457:	83 c4 10             	add    $0x10,%esp$/;"	l
c010645a	obj/kernel.asm	/^c010645a:	c9                   	leave  $/;"	l
c010645b	obj/kernel.asm	/^c010645b:	c3                   	ret    $/;"	l
c010645c	obj/kernel.asm	/^c010645c <swap_set_unswappable>:$/;"	l
c010645c	obj/kernel.asm	/^c010645c:	55                   	push   %ebp$/;"	l
c010645d	obj/kernel.asm	/^c010645d:	89 e5                	mov    %esp,%ebp$/;"	l
c010645f	obj/kernel.asm	/^c010645f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106462	obj/kernel.asm	/^c0106462:	a1 78 f0 14 c0       	mov    0xc014f078,%eax$/;"	l
c0106467	obj/kernel.asm	/^c0106467:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010646a	obj/kernel.asm	/^c010646a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010646d	obj/kernel.asm	/^c010646d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0106470	obj/kernel.asm	/^c0106470:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106473	obj/kernel.asm	/^c0106473:	ff d0                	call   *%eax$/;"	l
c0106475	obj/kernel.asm	/^c0106475:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106478	obj/kernel.asm	/^c0106478:	c9                   	leave  $/;"	l
c0106479	obj/kernel.asm	/^c0106479:	c3                   	ret    $/;"	l
c010647a	obj/kernel.asm	/^c010647a <swap_out>:$/;"	l
c010647a	obj/kernel.asm	/^c010647a:	55                   	push   %ebp$/;"	l
c010647b	obj/kernel.asm	/^c010647b:	89 e5                	mov    %esp,%ebp$/;"	l
c010647d	obj/kernel.asm	/^c010647d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0106480	obj/kernel.asm	/^c0106480:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0106487	obj/kernel.asm	/^c0106487:	e9 2e 01 00 00       	jmp    c01065ba <swap_out+0x140>$/;"	l
c010648c	obj/kernel.asm	/^c010648c:	a1 78 f0 14 c0       	mov    0xc014f078,%eax$/;"	l
c0106491	obj/kernel.asm	/^c0106491:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0106494	obj/kernel.asm	/^c0106494:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106497	obj/kernel.asm	/^c0106497:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010649a	obj/kernel.asm	/^c010649a:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c010649d	obj/kernel.asm	/^c010649d:	52                   	push   %edx$/;"	l
c010649e	obj/kernel.asm	/^c010649e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01064a1	obj/kernel.asm	/^c01064a1:	ff d0                	call   *%eax$/;"	l
c01064a3	obj/kernel.asm	/^c01064a3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01064a6	obj/kernel.asm	/^c01064a6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01064a9	obj/kernel.asm	/^c01064a9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01064ad	obj/kernel.asm	/^c01064ad:	74 18                	je     c01064c7 <swap_out+0x4d>$/;"	l
c01064af	obj/kernel.asm	/^c01064af:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01064b2	obj/kernel.asm	/^c01064b2:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01064b5	obj/kernel.asm	/^c01064b5:	68 10 56 11 c0       	push   $0xc0115610$/;"	l
c01064ba	obj/kernel.asm	/^c01064ba:	e8 ab 9e ff ff       	call   c010036a <cprintf>$/;"	l
c01064bf	obj/kernel.asm	/^c01064bf:	83 c4 10             	add    $0x10,%esp$/;"	l
c01064c2	obj/kernel.asm	/^c01064c2:	e9 ff 00 00 00       	jmp    c01065c6 <swap_out+0x14c>$/;"	l
c01064c7	obj/kernel.asm	/^c01064c7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01064ca	obj/kernel.asm	/^c01064ca:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c01064cd	obj/kernel.asm	/^c01064cd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01064d0	obj/kernel.asm	/^c01064d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01064d3	obj/kernel.asm	/^c01064d3:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01064d6	obj/kernel.asm	/^c01064d6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01064d9	obj/kernel.asm	/^c01064d9:	6a 00                	push   $0x0$/;"	l
c01064db	obj/kernel.asm	/^c01064db:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01064de	obj/kernel.asm	/^c01064de:	50                   	push   %eax$/;"	l
c01064df	obj/kernel.asm	/^c01064df:	e8 23 da ff ff       	call   c0103f07 <get_pte>$/;"	l
c01064e4	obj/kernel.asm	/^c01064e4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01064e7	obj/kernel.asm	/^c01064e7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01064ea	obj/kernel.asm	/^c01064ea:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01064ed	obj/kernel.asm	/^c01064ed:	8b 00                	mov    (%eax),%eax$/;"	l
c01064ef	obj/kernel.asm	/^c01064ef:	83 e0 01             	and    $0x1,%eax$/;"	l
c01064f2	obj/kernel.asm	/^c01064f2:	85 c0                	test   %eax,%eax$/;"	l
c01064f4	obj/kernel.asm	/^c01064f4:	75 16                	jne    c010650c <swap_out+0x92>$/;"	l
c01064f6	obj/kernel.asm	/^c01064f6:	68 3d 56 11 c0       	push   $0xc011563d$/;"	l
c01064fb	obj/kernel.asm	/^c01064fb:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c0106500	obj/kernel.asm	/^c0106500:	6a 67                	push   $0x67$/;"	l
c0106502	obj/kernel.asm	/^c0106502:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c0106507	obj/kernel.asm	/^c0106507:	e8 c3 9f ff ff       	call   c01004cf <__panic>$/;"	l
c010650c	obj/kernel.asm	/^c010650c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010650f	obj/kernel.asm	/^c010650f:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0106512	obj/kernel.asm	/^c0106512:	8b 52 20             	mov    0x20(%edx),%edx$/;"	l
c0106515	obj/kernel.asm	/^c0106515:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0106518	obj/kernel.asm	/^c0106518:	83 c2 01             	add    $0x1,%edx$/;"	l
c010651b	obj/kernel.asm	/^c010651b:	c1 e2 08             	shl    $0x8,%edx$/;"	l
c010651e	obj/kernel.asm	/^c010651e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106521	obj/kernel.asm	/^c0106521:	50                   	push   %eax$/;"	l
c0106522	obj/kernel.asm	/^c0106522:	52                   	push   %edx$/;"	l
c0106523	obj/kernel.asm	/^c0106523:	e8 ac 7c 00 00       	call   c010e1d4 <swapfs_write>$/;"	l
c0106528	obj/kernel.asm	/^c0106528:	83 c4 10             	add    $0x10,%esp$/;"	l
c010652b	obj/kernel.asm	/^c010652b:	85 c0                	test   %eax,%eax$/;"	l
c010652d	obj/kernel.asm	/^c010652d:	74 2b                	je     c010655a <swap_out+0xe0>$/;"	l
c010652f	obj/kernel.asm	/^c010652f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106532	obj/kernel.asm	/^c0106532:	68 67 56 11 c0       	push   $0xc0115667$/;"	l
c0106537	obj/kernel.asm	/^c0106537:	e8 2e 9e ff ff       	call   c010036a <cprintf>$/;"	l
c010653c	obj/kernel.asm	/^c010653c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010653f	obj/kernel.asm	/^c010653f:	a1 78 f0 14 c0       	mov    0xc014f078,%eax$/;"	l
c0106544	obj/kernel.asm	/^c0106544:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0106547	obj/kernel.asm	/^c0106547:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010654a	obj/kernel.asm	/^c010654a:	6a 00                	push   $0x0$/;"	l
c010654c	obj/kernel.asm	/^c010654c:	52                   	push   %edx$/;"	l
c010654d	obj/kernel.asm	/^c010654d:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0106550	obj/kernel.asm	/^c0106550:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106553	obj/kernel.asm	/^c0106553:	ff d0                	call   *%eax$/;"	l
c0106555	obj/kernel.asm	/^c0106555:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106558	obj/kernel.asm	/^c0106558:	eb 5c                	jmp    c01065b6 <swap_out+0x13c>$/;"	l
c010655a	obj/kernel.asm	/^c010655a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010655d	obj/kernel.asm	/^c010655d:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c0106560	obj/kernel.asm	/^c0106560:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106563	obj/kernel.asm	/^c0106563:	83 c0 01             	add    $0x1,%eax$/;"	l
c0106566	obj/kernel.asm	/^c0106566:	50                   	push   %eax$/;"	l
c0106567	obj/kernel.asm	/^c0106567:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010656a	obj/kernel.asm	/^c010656a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010656d	obj/kernel.asm	/^c010656d:	68 80 56 11 c0       	push   $0xc0115680$/;"	l
c0106572	obj/kernel.asm	/^c0106572:	e8 f3 9d ff ff       	call   c010036a <cprintf>$/;"	l
c0106577	obj/kernel.asm	/^c0106577:	83 c4 10             	add    $0x10,%esp$/;"	l
c010657a	obj/kernel.asm	/^c010657a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010657d	obj/kernel.asm	/^c010657d:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c0106580	obj/kernel.asm	/^c0106580:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106583	obj/kernel.asm	/^c0106583:	83 c0 01             	add    $0x1,%eax$/;"	l
c0106586	obj/kernel.asm	/^c0106586:	c1 e0 08             	shl    $0x8,%eax$/;"	l
c0106589	obj/kernel.asm	/^c0106589:	89 c2                	mov    %eax,%edx$/;"	l
c010658b	obj/kernel.asm	/^c010658b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010658e	obj/kernel.asm	/^c010658e:	89 10                	mov    %edx,(%eax)$/;"	l
c0106590	obj/kernel.asm	/^c0106590:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106593	obj/kernel.asm	/^c0106593:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106596	obj/kernel.asm	/^c0106596:	6a 01                	push   $0x1$/;"	l
c0106598	obj/kernel.asm	/^c0106598:	50                   	push   %eax$/;"	l
c0106599	obj/kernel.asm	/^c0106599:	e8 dc d2 ff ff       	call   c010387a <free_pages>$/;"	l
c010659e	obj/kernel.asm	/^c010659e:	83 c4 10             	add    $0x10,%esp$/;"	l
c01065a1	obj/kernel.asm	/^c01065a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01065a4	obj/kernel.asm	/^c01065a4:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01065a7	obj/kernel.asm	/^c01065a7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01065aa	obj/kernel.asm	/^c01065aa:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01065ad	obj/kernel.asm	/^c01065ad:	50                   	push   %eax$/;"	l
c01065ae	obj/kernel.asm	/^c01065ae:	e8 ba df ff ff       	call   c010456d <tlb_invalidate>$/;"	l
c01065b3	obj/kernel.asm	/^c01065b3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01065b6	obj/kernel.asm	/^c01065b6:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01065ba	obj/kernel.asm	/^c01065ba:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01065bd	obj/kernel.asm	/^c01065bd:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01065c0	obj/kernel.asm	/^c01065c0:	0f 85 c6 fe ff ff    	jne    c010648c <swap_out+0x12>$/;"	l
c01065c6	obj/kernel.asm	/^c01065c6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01065c9	obj/kernel.asm	/^c01065c9:	c9                   	leave  $/;"	l
c01065ca	obj/kernel.asm	/^c01065ca:	c3                   	ret    $/;"	l
c01065cb	obj/kernel.asm	/^c01065cb <swap_in>:$/;"	l
c01065cb	obj/kernel.asm	/^c01065cb:	55                   	push   %ebp$/;"	l
c01065cc	obj/kernel.asm	/^c01065cc:	89 e5                	mov    %esp,%ebp$/;"	l
c01065ce	obj/kernel.asm	/^c01065ce:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01065d1	obj/kernel.asm	/^c01065d1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01065d4	obj/kernel.asm	/^c01065d4:	6a 01                	push   $0x1$/;"	l
c01065d6	obj/kernel.asm	/^c01065d6:	e8 33 d2 ff ff       	call   c010380e <alloc_pages>$/;"	l
c01065db	obj/kernel.asm	/^c01065db:	83 c4 10             	add    $0x10,%esp$/;"	l
c01065de	obj/kernel.asm	/^c01065de:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01065e1	obj/kernel.asm	/^c01065e1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01065e5	obj/kernel.asm	/^c01065e5:	75 16                	jne    c01065fd <swap_in+0x32>$/;"	l
c01065e7	obj/kernel.asm	/^c01065e7:	68 c0 56 11 c0       	push   $0xc01156c0$/;"	l
c01065ec	obj/kernel.asm	/^c01065ec:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c01065f1	obj/kernel.asm	/^c01065f1:	6a 7d                	push   $0x7d$/;"	l
c01065f3	obj/kernel.asm	/^c01065f3:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c01065f8	obj/kernel.asm	/^c01065f8:	e8 d2 9e ff ff       	call   c01004cf <__panic>$/;"	l
c01065fd	obj/kernel.asm	/^c01065fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106600	obj/kernel.asm	/^c0106600:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0106603	obj/kernel.asm	/^c0106603:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106606	obj/kernel.asm	/^c0106606:	6a 00                	push   $0x0$/;"	l
c0106608	obj/kernel.asm	/^c0106608:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010660b	obj/kernel.asm	/^c010660b:	50                   	push   %eax$/;"	l
c010660c	obj/kernel.asm	/^c010660c:	e8 f6 d8 ff ff       	call   c0103f07 <get_pte>$/;"	l
c0106611	obj/kernel.asm	/^c0106611:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106614	obj/kernel.asm	/^c0106614:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106617	obj/kernel.asm	/^c0106617:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010661a	obj/kernel.asm	/^c010661a:	8b 00                	mov    (%eax),%eax$/;"	l
c010661c	obj/kernel.asm	/^c010661c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010661f	obj/kernel.asm	/^c010661f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106622	obj/kernel.asm	/^c0106622:	50                   	push   %eax$/;"	l
c0106623	obj/kernel.asm	/^c0106623:	e8 53 7b 00 00       	call   c010e17b <swapfs_read>$/;"	l
c0106628	obj/kernel.asm	/^c0106628:	83 c4 10             	add    $0x10,%esp$/;"	l
c010662b	obj/kernel.asm	/^c010662b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010662e	obj/kernel.asm	/^c010662e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0106632	obj/kernel.asm	/^c0106632:	74 1f                	je     c0106653 <swap_in+0x88>$/;"	l
c0106634	obj/kernel.asm	/^c0106634:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0106638	obj/kernel.asm	/^c0106638:	75 19                	jne    c0106653 <swap_in+0x88>$/;"	l
c010663a	obj/kernel.asm	/^c010663a:	68 cd 56 11 c0       	push   $0xc01156cd$/;"	l
c010663f	obj/kernel.asm	/^c010663f:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c0106644	obj/kernel.asm	/^c0106644:	68 85 00 00 00       	push   $0x85$/;"	l
c0106649	obj/kernel.asm	/^c0106649:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c010664e	obj/kernel.asm	/^c010664e:	e8 7c 9e ff ff       	call   c01004cf <__panic>$/;"	l
c0106653	obj/kernel.asm	/^c0106653:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0106656	obj/kernel.asm	/^c0106656:	8b 00                	mov    (%eax),%eax$/;"	l
c0106658	obj/kernel.asm	/^c0106658:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c010665b	obj/kernel.asm	/^c010665b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010665e	obj/kernel.asm	/^c010665e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0106661	obj/kernel.asm	/^c0106661:	50                   	push   %eax$/;"	l
c0106662	obj/kernel.asm	/^c0106662:	68 d4 56 11 c0       	push   $0xc01156d4$/;"	l
c0106667	obj/kernel.asm	/^c0106667:	e8 fe 9c ff ff       	call   c010036a <cprintf>$/;"	l
c010666c	obj/kernel.asm	/^c010666c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010666f	obj/kernel.asm	/^c010666f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106672	obj/kernel.asm	/^c0106672:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0106675	obj/kernel.asm	/^c0106675:	89 10                	mov    %edx,(%eax)$/;"	l
c0106677	obj/kernel.asm	/^c0106677:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010667c	obj/kernel.asm	/^c010667c:	c9                   	leave  $/;"	l
c010667d	obj/kernel.asm	/^c010667d:	c3                   	ret    $/;"	l
c010667e	obj/kernel.asm	/^c010667e <check_content_set>:$/;"	l
c010667e	obj/kernel.asm	/^c010667e:	55                   	push   %ebp$/;"	l
c010667f	obj/kernel.asm	/^c010667f:	89 e5                	mov    %esp,%ebp$/;"	l
c0106681	obj/kernel.asm	/^c0106681:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106684	obj/kernel.asm	/^c0106684:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0106689	obj/kernel.asm	/^c0106689:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c010668c	obj/kernel.asm	/^c010668c:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c0106691	obj/kernel.asm	/^c0106691:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0106694	obj/kernel.asm	/^c0106694:	74 19                	je     c01066af <check_content_set+0x31>$/;"	l
c0106696	obj/kernel.asm	/^c0106696:	68 12 57 11 c0       	push   $0xc0115712$/;"	l
c010669b	obj/kernel.asm	/^c010669b:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c01066a0	obj/kernel.asm	/^c01066a0:	68 92 00 00 00       	push   $0x92$/;"	l
c01066a5	obj/kernel.asm	/^c01066a5:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c01066aa	obj/kernel.asm	/^c01066aa:	e8 20 9e ff ff       	call   c01004cf <__panic>$/;"	l
c01066af	obj/kernel.asm	/^c01066af:	b8 10 10 00 00       	mov    $0x1010,%eax$/;"	l
c01066b4	obj/kernel.asm	/^c01066b4:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c01066b7	obj/kernel.asm	/^c01066b7:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c01066bc	obj/kernel.asm	/^c01066bc:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01066bf	obj/kernel.asm	/^c01066bf:	74 19                	je     c01066da <check_content_set+0x5c>$/;"	l
c01066c1	obj/kernel.asm	/^c01066c1:	68 12 57 11 c0       	push   $0xc0115712$/;"	l
c01066c6	obj/kernel.asm	/^c01066c6:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c01066cb	obj/kernel.asm	/^c01066cb:	68 94 00 00 00       	push   $0x94$/;"	l
c01066d0	obj/kernel.asm	/^c01066d0:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c01066d5	obj/kernel.asm	/^c01066d5:	e8 f5 9d ff ff       	call   c01004cf <__panic>$/;"	l
c01066da	obj/kernel.asm	/^c01066da:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c01066df	obj/kernel.asm	/^c01066df:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c01066e2	obj/kernel.asm	/^c01066e2:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c01066e7	obj/kernel.asm	/^c01066e7:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01066ea	obj/kernel.asm	/^c01066ea:	74 19                	je     c0106705 <check_content_set+0x87>$/;"	l
c01066ec	obj/kernel.asm	/^c01066ec:	68 21 57 11 c0       	push   $0xc0115721$/;"	l
c01066f1	obj/kernel.asm	/^c01066f1:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c01066f6	obj/kernel.asm	/^c01066f6:	68 96 00 00 00       	push   $0x96$/;"	l
c01066fb	obj/kernel.asm	/^c01066fb:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c0106700	obj/kernel.asm	/^c0106700:	e8 ca 9d ff ff       	call   c01004cf <__panic>$/;"	l
c0106705	obj/kernel.asm	/^c0106705:	b8 10 20 00 00       	mov    $0x2010,%eax$/;"	l
c010670a	obj/kernel.asm	/^c010670a:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c010670d	obj/kernel.asm	/^c010670d:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c0106712	obj/kernel.asm	/^c0106712:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0106715	obj/kernel.asm	/^c0106715:	74 19                	je     c0106730 <check_content_set+0xb2>$/;"	l
c0106717	obj/kernel.asm	/^c0106717:	68 21 57 11 c0       	push   $0xc0115721$/;"	l
c010671c	obj/kernel.asm	/^c010671c:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c0106721	obj/kernel.asm	/^c0106721:	68 98 00 00 00       	push   $0x98$/;"	l
c0106726	obj/kernel.asm	/^c0106726:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c010672b	obj/kernel.asm	/^c010672b:	e8 9f 9d ff ff       	call   c01004cf <__panic>$/;"	l
c0106730	obj/kernel.asm	/^c0106730:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c0106735	obj/kernel.asm	/^c0106735:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0106738	obj/kernel.asm	/^c0106738:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c010673d	obj/kernel.asm	/^c010673d:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0106740	obj/kernel.asm	/^c0106740:	74 19                	je     c010675b <check_content_set+0xdd>$/;"	l
c0106742	obj/kernel.asm	/^c0106742:	68 30 57 11 c0       	push   $0xc0115730$/;"	l
c0106747	obj/kernel.asm	/^c0106747:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c010674c	obj/kernel.asm	/^c010674c:	68 9a 00 00 00       	push   $0x9a$/;"	l
c0106751	obj/kernel.asm	/^c0106751:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c0106756	obj/kernel.asm	/^c0106756:	e8 74 9d ff ff       	call   c01004cf <__panic>$/;"	l
c010675b	obj/kernel.asm	/^c010675b:	b8 10 30 00 00       	mov    $0x3010,%eax$/;"	l
c0106760	obj/kernel.asm	/^c0106760:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0106763	obj/kernel.asm	/^c0106763:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c0106768	obj/kernel.asm	/^c0106768:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010676b	obj/kernel.asm	/^c010676b:	74 19                	je     c0106786 <check_content_set+0x108>$/;"	l
c010676d	obj/kernel.asm	/^c010676d:	68 30 57 11 c0       	push   $0xc0115730$/;"	l
c0106772	obj/kernel.asm	/^c0106772:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c0106777	obj/kernel.asm	/^c0106777:	68 9c 00 00 00       	push   $0x9c$/;"	l
c010677c	obj/kernel.asm	/^c010677c:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c0106781	obj/kernel.asm	/^c0106781:	e8 49 9d ff ff       	call   c01004cf <__panic>$/;"	l
c0106786	obj/kernel.asm	/^c0106786:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c010678b	obj/kernel.asm	/^c010678b:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c010678e	obj/kernel.asm	/^c010678e:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c0106793	obj/kernel.asm	/^c0106793:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0106796	obj/kernel.asm	/^c0106796:	74 19                	je     c01067b1 <check_content_set+0x133>$/;"	l
c0106798	obj/kernel.asm	/^c0106798:	68 3f 57 11 c0       	push   $0xc011573f$/;"	l
c010679d	obj/kernel.asm	/^c010679d:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c01067a2	obj/kernel.asm	/^c01067a2:	68 9e 00 00 00       	push   $0x9e$/;"	l
c01067a7	obj/kernel.asm	/^c01067a7:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c01067ac	obj/kernel.asm	/^c01067ac:	e8 1e 9d ff ff       	call   c01004cf <__panic>$/;"	l
c01067b1	obj/kernel.asm	/^c01067b1:	b8 10 40 00 00       	mov    $0x4010,%eax$/;"	l
c01067b6	obj/kernel.asm	/^c01067b6:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c01067b9	obj/kernel.asm	/^c01067b9:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c01067be	obj/kernel.asm	/^c01067be:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01067c1	obj/kernel.asm	/^c01067c1:	74 19                	je     c01067dc <check_content_set+0x15e>$/;"	l
c01067c3	obj/kernel.asm	/^c01067c3:	68 3f 57 11 c0       	push   $0xc011573f$/;"	l
c01067c8	obj/kernel.asm	/^c01067c8:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c01067cd	obj/kernel.asm	/^c01067cd:	68 a0 00 00 00       	push   $0xa0$/;"	l
c01067d2	obj/kernel.asm	/^c01067d2:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c01067d7	obj/kernel.asm	/^c01067d7:	e8 f3 9c ff ff       	call   c01004cf <__panic>$/;"	l
c01067dc	obj/kernel.asm	/^c01067dc:	c9                   	leave  $/;"	l
c01067dd	obj/kernel.asm	/^c01067dd:	c3                   	ret    $/;"	l
c01067de	obj/kernel.asm	/^c01067de <check_content_access>:$/;"	l
c01067de	obj/kernel.asm	/^c01067de:	55                   	push   %ebp$/;"	l
c01067df	obj/kernel.asm	/^c01067df:	89 e5                	mov    %esp,%ebp$/;"	l
c01067e1	obj/kernel.asm	/^c01067e1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01067e4	obj/kernel.asm	/^c01067e4:	a1 78 f0 14 c0       	mov    0xc014f078,%eax$/;"	l
c01067e9	obj/kernel.asm	/^c01067e9:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c01067ec	obj/kernel.asm	/^c01067ec:	ff d0                	call   *%eax$/;"	l
c01067ee	obj/kernel.asm	/^c01067ee:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01067f1	obj/kernel.asm	/^c01067f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01067f4	obj/kernel.asm	/^c01067f4:	c9                   	leave  $/;"	l
c01067f5	obj/kernel.asm	/^c01067f5:	c3                   	ret    $/;"	l
c01067f6	obj/kernel.asm	/^c01067f6 <check_swap>:$/;"	l
c01067f6	obj/kernel.asm	/^c01067f6:	55                   	push   %ebp$/;"	l
c01067f7	obj/kernel.asm	/^c01067f7:	89 e5                	mov    %esp,%ebp$/;"	l
c01067f9	obj/kernel.asm	/^c01067f9:	53                   	push   %ebx$/;"	l
c01067fa	obj/kernel.asm	/^c01067fa:	83 ec 64             	sub    $0x64,%esp$/;"	l
c01067fd	obj/kernel.asm	/^c01067fd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0106804	obj/kernel.asm	/^c0106804:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010680b	obj/kernel.asm	/^c010680b:	c7 45 e8 8c 22 15 c0 	movl   $0xc015228c,-0x18(%ebp)$/;"	l
c0106812	obj/kernel.asm	/^c0106812:	eb 60                	jmp    c0106874 <check_swap+0x7e>$/;"	l
c0106814	obj/kernel.asm	/^c0106814:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106817	obj/kernel.asm	/^c0106817:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010681a	obj/kernel.asm	/^c010681a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010681d	obj/kernel.asm	/^c010681d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106820	obj/kernel.asm	/^c0106820:	83 c0 04             	add    $0x4,%eax$/;"	l
c0106823	obj/kernel.asm	/^c0106823:	c7 45 c4 01 00 00 00 	movl   $0x1,-0x3c(%ebp)$/;"	l
c010682a	obj/kernel.asm	/^c010682a:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010682d	obj/kernel.asm	/^c010682d:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0106830	obj/kernel.asm	/^c0106830:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0106833	obj/kernel.asm	/^c0106833:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0106836	obj/kernel.asm	/^c0106836:	19 c0                	sbb    %eax,%eax$/;"	l
c0106838	obj/kernel.asm	/^c0106838:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010683b	obj/kernel.asm	/^c010683b:	83 7d bc 00          	cmpl   $0x0,-0x44(%ebp)$/;"	l
c010683f	obj/kernel.asm	/^c010683f:	0f 95 c0             	setne  %al$/;"	l
c0106842	obj/kernel.asm	/^c0106842:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0106845	obj/kernel.asm	/^c0106845:	85 c0                	test   %eax,%eax$/;"	l
c0106847	obj/kernel.asm	/^c0106847:	75 19                	jne    c0106862 <check_swap+0x6c>$/;"	l
c0106849	obj/kernel.asm	/^c0106849:	68 4e 57 11 c0       	push   $0xc011574e$/;"	l
c010684e	obj/kernel.asm	/^c010684e:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c0106853	obj/kernel.asm	/^c0106853:	68 bb 00 00 00       	push   $0xbb$/;"	l
c0106858	obj/kernel.asm	/^c0106858:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c010685d	obj/kernel.asm	/^c010685d:	e8 6d 9c ff ff       	call   c01004cf <__panic>$/;"	l
c0106862	obj/kernel.asm	/^c0106862:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0106866	obj/kernel.asm	/^c0106866:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0106869	obj/kernel.asm	/^c0106869:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010686c	obj/kernel.asm	/^c010686c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010686f	obj/kernel.asm	/^c010686f:	01 d0                	add    %edx,%eax$/;"	l
c0106871	obj/kernel.asm	/^c0106871:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106874	obj/kernel.asm	/^c0106874:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106877	obj/kernel.asm	/^c0106877:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c010687a	obj/kernel.asm	/^c010687a:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c010687d	obj/kernel.asm	/^c010687d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106880	obj/kernel.asm	/^c0106880:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106883	obj/kernel.asm	/^c0106883:	81 7d e8 8c 22 15 c0 	cmpl   $0xc015228c,-0x18(%ebp)$/;"	l
c010688a	obj/kernel.asm	/^c010688a:	75 88                	jne    c0106814 <check_swap+0x1e>$/;"	l
c010688c	obj/kernel.asm	/^c010688c:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c010688f	obj/kernel.asm	/^c010688f:	e8 1a d0 ff ff       	call   c01038ae <nr_free_pages>$/;"	l
c0106894	obj/kernel.asm	/^c0106894:	39 c3                	cmp    %eax,%ebx$/;"	l
c0106896	obj/kernel.asm	/^c0106896:	74 19                	je     c01068b1 <check_swap+0xbb>$/;"	l
c0106898	obj/kernel.asm	/^c0106898:	68 5e 57 11 c0       	push   $0xc011575e$/;"	l
c010689d	obj/kernel.asm	/^c010689d:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c01068a2	obj/kernel.asm	/^c01068a2:	68 be 00 00 00       	push   $0xbe$/;"	l
c01068a7	obj/kernel.asm	/^c01068a7:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c01068ac	obj/kernel.asm	/^c01068ac:	e8 1e 9c ff ff       	call   c01004cf <__panic>$/;"	l
c01068b1	obj/kernel.asm	/^c01068b1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01068b4	obj/kernel.asm	/^c01068b4:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01068b7	obj/kernel.asm	/^c01068b7:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01068ba	obj/kernel.asm	/^c01068ba:	68 78 57 11 c0       	push   $0xc0115778$/;"	l
c01068bf	obj/kernel.asm	/^c01068bf:	e8 a6 9a ff ff       	call   c010036a <cprintf>$/;"	l
c01068c4	obj/kernel.asm	/^c01068c4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01068c7	obj/kernel.asm	/^c01068c7:	e8 dc e8 ff ff       	call   c01051a8 <mm_create>$/;"	l
c01068cc	obj/kernel.asm	/^c01068cc:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01068cf	obj/kernel.asm	/^c01068cf:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01068d3	obj/kernel.asm	/^c01068d3:	75 19                	jne    c01068ee <check_swap+0xf8>$/;"	l
c01068d5	obj/kernel.asm	/^c01068d5:	68 9e 57 11 c0       	push   $0xc011579e$/;"	l
c01068da	obj/kernel.asm	/^c01068da:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c01068df	obj/kernel.asm	/^c01068df:	68 c3 00 00 00       	push   $0xc3$/;"	l
c01068e4	obj/kernel.asm	/^c01068e4:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c01068e9	obj/kernel.asm	/^c01068e9:	e8 e1 9b ff ff       	call   c01004cf <__panic>$/;"	l
c01068ee	obj/kernel.asm	/^c01068ee:	a1 b0 21 15 c0       	mov    0xc01521b0,%eax$/;"	l
c01068f3	obj/kernel.asm	/^c01068f3:	85 c0                	test   %eax,%eax$/;"	l
c01068f5	obj/kernel.asm	/^c01068f5:	74 19                	je     c0106910 <check_swap+0x11a>$/;"	l
c01068f7	obj/kernel.asm	/^c01068f7:	68 a9 57 11 c0       	push   $0xc01157a9$/;"	l
c01068fc	obj/kernel.asm	/^c01068fc:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c0106901	obj/kernel.asm	/^c0106901:	68 c6 00 00 00       	push   $0xc6$/;"	l
c0106906	obj/kernel.asm	/^c0106906:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c010690b	obj/kernel.asm	/^c010690b:	e8 bf 9b ff ff       	call   c01004cf <__panic>$/;"	l
c0106910	obj/kernel.asm	/^c0106910:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106913	obj/kernel.asm	/^c0106913:	a3 b0 21 15 c0       	mov    %eax,0xc01521b0$/;"	l
c0106918	obj/kernel.asm	/^c0106918:	8b 15 c4 ef 14 c0    	mov    0xc014efc4,%edx$/;"	l
c010691e	obj/kernel.asm	/^c010691e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106921	obj/kernel.asm	/^c0106921:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0106924	obj/kernel.asm	/^c0106924:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106927	obj/kernel.asm	/^c0106927:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010692a	obj/kernel.asm	/^c010692a:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010692d	obj/kernel.asm	/^c010692d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106930	obj/kernel.asm	/^c0106930:	8b 00                	mov    (%eax),%eax$/;"	l
c0106932	obj/kernel.asm	/^c0106932:	85 c0                	test   %eax,%eax$/;"	l
c0106934	obj/kernel.asm	/^c0106934:	74 19                	je     c010694f <check_swap+0x159>$/;"	l
c0106936	obj/kernel.asm	/^c0106936:	68 c1 57 11 c0       	push   $0xc01157c1$/;"	l
c010693b	obj/kernel.asm	/^c010693b:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c0106940	obj/kernel.asm	/^c0106940:	68 cb 00 00 00       	push   $0xcb$/;"	l
c0106945	obj/kernel.asm	/^c0106945:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c010694a	obj/kernel.asm	/^c010694a:	e8 80 9b ff ff       	call   c01004cf <__panic>$/;"	l
c010694f	obj/kernel.asm	/^c010694f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106952	obj/kernel.asm	/^c0106952:	6a 03                	push   $0x3$/;"	l
c0106954	obj/kernel.asm	/^c0106954:	68 00 60 00 00       	push   $0x6000$/;"	l
c0106959	obj/kernel.asm	/^c0106959:	68 00 10 00 00       	push   $0x1000$/;"	l
c010695e	obj/kernel.asm	/^c010695e:	e8 e5 e8 ff ff       	call   c0105248 <vma_create>$/;"	l
c0106963	obj/kernel.asm	/^c0106963:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106966	obj/kernel.asm	/^c0106966:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0106969	obj/kernel.asm	/^c0106969:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c010696d	obj/kernel.asm	/^c010696d:	75 19                	jne    c0106988 <check_swap+0x192>$/;"	l
c010696f	obj/kernel.asm	/^c010696f:	68 cf 57 11 c0       	push   $0xc01157cf$/;"	l
c0106974	obj/kernel.asm	/^c0106974:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c0106979	obj/kernel.asm	/^c0106979:	68 ce 00 00 00       	push   $0xce$/;"	l
c010697e	obj/kernel.asm	/^c010697e:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c0106983	obj/kernel.asm	/^c0106983:	e8 47 9b ff ff       	call   c01004cf <__panic>$/;"	l
c0106988	obj/kernel.asm	/^c0106988:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010698b	obj/kernel.asm	/^c010698b:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c010698e	obj/kernel.asm	/^c010698e:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0106991	obj/kernel.asm	/^c0106991:	e8 19 ea ff ff       	call   c01053af <insert_vma_struct>$/;"	l
c0106996	obj/kernel.asm	/^c0106996:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106999	obj/kernel.asm	/^c0106999:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010699c	obj/kernel.asm	/^c010699c:	68 dc 57 11 c0       	push   $0xc01157dc$/;"	l
c01069a1	obj/kernel.asm	/^c01069a1:	e8 c4 99 ff ff       	call   c010036a <cprintf>$/;"	l
c01069a6	obj/kernel.asm	/^c01069a6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01069a9	obj/kernel.asm	/^c01069a9:	c7 45 d4 00 00 00 00 	movl   $0x0,-0x2c(%ebp)$/;"	l
c01069b0	obj/kernel.asm	/^c01069b0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01069b3	obj/kernel.asm	/^c01069b3:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01069b6	obj/kernel.asm	/^c01069b6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01069b9	obj/kernel.asm	/^c01069b9:	6a 01                	push   $0x1$/;"	l
c01069bb	obj/kernel.asm	/^c01069bb:	68 00 10 00 00       	push   $0x1000$/;"	l
c01069c0	obj/kernel.asm	/^c01069c0:	50                   	push   %eax$/;"	l
c01069c1	obj/kernel.asm	/^c01069c1:	e8 41 d5 ff ff       	call   c0103f07 <get_pte>$/;"	l
c01069c6	obj/kernel.asm	/^c01069c6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01069c9	obj/kernel.asm	/^c01069c9:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01069cc	obj/kernel.asm	/^c01069cc:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
c01069d0	obj/kernel.asm	/^c01069d0:	75 19                	jne    c01069eb <check_swap+0x1f5>$/;"	l
c01069d2	obj/kernel.asm	/^c01069d2:	68 10 58 11 c0       	push   $0xc0115810$/;"	l
c01069d7	obj/kernel.asm	/^c01069d7:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c01069dc	obj/kernel.asm	/^c01069dc:	68 d6 00 00 00       	push   $0xd6$/;"	l
c01069e1	obj/kernel.asm	/^c01069e1:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c01069e6	obj/kernel.asm	/^c01069e6:	e8 e4 9a ff ff       	call   c01004cf <__panic>$/;"	l
c01069eb	obj/kernel.asm	/^c01069eb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01069ee	obj/kernel.asm	/^c01069ee:	68 24 58 11 c0       	push   $0xc0115824$/;"	l
c01069f3	obj/kernel.asm	/^c01069f3:	e8 72 99 ff ff       	call   c010036a <cprintf>$/;"	l
c01069f8	obj/kernel.asm	/^c01069f8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01069fb	obj/kernel.asm	/^c01069fb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106a02	obj/kernel.asm	/^c0106a02:	e9 90 00 00 00       	jmp    c0106a97 <check_swap+0x2a1>$/;"	l
c0106a07	obj/kernel.asm	/^c0106a07:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106a0a	obj/kernel.asm	/^c0106a0a:	6a 01                	push   $0x1$/;"	l
c0106a0c	obj/kernel.asm	/^c0106a0c:	e8 fd cd ff ff       	call   c010380e <alloc_pages>$/;"	l
c0106a11	obj/kernel.asm	/^c0106a11:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106a14	obj/kernel.asm	/^c0106a14:	89 c2                	mov    %eax,%edx$/;"	l
c0106a16	obj/kernel.asm	/^c0106a16:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106a19	obj/kernel.asm	/^c0106a19:	89 14 85 c0 21 15 c0 	mov    %edx,-0x3feade40(,%eax,4)$/;"	l
c0106a20	obj/kernel.asm	/^c0106a20:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106a23	obj/kernel.asm	/^c0106a23:	8b 04 85 c0 21 15 c0 	mov    -0x3feade40(,%eax,4),%eax$/;"	l
c0106a2a	obj/kernel.asm	/^c0106a2a:	85 c0                	test   %eax,%eax$/;"	l
c0106a2c	obj/kernel.asm	/^c0106a2c:	75 19                	jne    c0106a47 <check_swap+0x251>$/;"	l
c0106a2e	obj/kernel.asm	/^c0106a2e:	68 48 58 11 c0       	push   $0xc0115848$/;"	l
c0106a33	obj/kernel.asm	/^c0106a33:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c0106a38	obj/kernel.asm	/^c0106a38:	68 db 00 00 00       	push   $0xdb$/;"	l
c0106a3d	obj/kernel.asm	/^c0106a3d:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c0106a42	obj/kernel.asm	/^c0106a42:	e8 88 9a ff ff       	call   c01004cf <__panic>$/;"	l
c0106a47	obj/kernel.asm	/^c0106a47:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106a4a	obj/kernel.asm	/^c0106a4a:	8b 04 85 c0 21 15 c0 	mov    -0x3feade40(,%eax,4),%eax$/;"	l
c0106a51	obj/kernel.asm	/^c0106a51:	83 c0 04             	add    $0x4,%eax$/;"	l
c0106a54	obj/kernel.asm	/^c0106a54:	c7 45 b4 01 00 00 00 	movl   $0x1,-0x4c(%ebp)$/;"	l
c0106a5b	obj/kernel.asm	/^c0106a5b:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0106a5e	obj/kernel.asm	/^c0106a5e:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0106a61	obj/kernel.asm	/^c0106a61:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0106a64	obj/kernel.asm	/^c0106a64:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0106a67	obj/kernel.asm	/^c0106a67:	19 c0                	sbb    %eax,%eax$/;"	l
c0106a69	obj/kernel.asm	/^c0106a69:	89 45 ac             	mov    %eax,-0x54(%ebp)$/;"	l
c0106a6c	obj/kernel.asm	/^c0106a6c:	83 7d ac 00          	cmpl   $0x0,-0x54(%ebp)$/;"	l
c0106a70	obj/kernel.asm	/^c0106a70:	0f 95 c0             	setne  %al$/;"	l
c0106a73	obj/kernel.asm	/^c0106a73:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0106a76	obj/kernel.asm	/^c0106a76:	85 c0                	test   %eax,%eax$/;"	l
c0106a78	obj/kernel.asm	/^c0106a78:	74 19                	je     c0106a93 <check_swap+0x29d>$/;"	l
c0106a7a	obj/kernel.asm	/^c0106a7a:	68 5c 58 11 c0       	push   $0xc011585c$/;"	l
c0106a7f	obj/kernel.asm	/^c0106a7f:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c0106a84	obj/kernel.asm	/^c0106a84:	68 dc 00 00 00       	push   $0xdc$/;"	l
c0106a89	obj/kernel.asm	/^c0106a89:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c0106a8e	obj/kernel.asm	/^c0106a8e:	e8 3c 9a ff ff       	call   c01004cf <__panic>$/;"	l
c0106a93	obj/kernel.asm	/^c0106a93:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106a97	obj/kernel.asm	/^c0106a97:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106a9b	obj/kernel.asm	/^c0106a9b:	0f 8e 66 ff ff ff    	jle    c0106a07 <check_swap+0x211>$/;"	l
c0106aa1	obj/kernel.asm	/^c0106aa1:	a1 8c 22 15 c0       	mov    0xc015228c,%eax$/;"	l
c0106aa6	obj/kernel.asm	/^c0106aa6:	8b 15 90 22 15 c0    	mov    0xc0152290,%edx$/;"	l
c0106aac	obj/kernel.asm	/^c0106aac:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0106aaf	obj/kernel.asm	/^c0106aaf:	89 55 9c             	mov    %edx,-0x64(%ebp)$/;"	l
c0106ab2	obj/kernel.asm	/^c0106ab2:	c7 45 a8 8c 22 15 c0 	movl   $0xc015228c,-0x58(%ebp)$/;"	l
c0106ab9	obj/kernel.asm	/^c0106ab9:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0106abc	obj/kernel.asm	/^c0106abc:	8b 55 a8             	mov    -0x58(%ebp),%edx$/;"	l
c0106abf	obj/kernel.asm	/^c0106abf:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0106ac2	obj/kernel.asm	/^c0106ac2:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0106ac5	obj/kernel.asm	/^c0106ac5:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0106ac8	obj/kernel.asm	/^c0106ac8:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c0106acb	obj/kernel.asm	/^c0106acb:	89 10                	mov    %edx,(%eax)$/;"	l
c0106acd	obj/kernel.asm	/^c0106acd:	c7 45 a4 8c 22 15 c0 	movl   $0xc015228c,-0x5c(%ebp)$/;"	l
c0106ad4	obj/kernel.asm	/^c0106ad4:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c0106ad7	obj/kernel.asm	/^c0106ad7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106ada	obj/kernel.asm	/^c0106ada:	39 45 a4             	cmp    %eax,-0x5c(%ebp)$/;"	l
c0106add	obj/kernel.asm	/^c0106add:	0f 94 c0             	sete   %al$/;"	l
c0106ae0	obj/kernel.asm	/^c0106ae0:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0106ae3	obj/kernel.asm	/^c0106ae3:	85 c0                	test   %eax,%eax$/;"	l
c0106ae5	obj/kernel.asm	/^c0106ae5:	75 19                	jne    c0106b00 <check_swap+0x30a>$/;"	l
c0106ae7	obj/kernel.asm	/^c0106ae7:	68 77 58 11 c0       	push   $0xc0115877$/;"	l
c0106aec	obj/kernel.asm	/^c0106aec:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c0106af1	obj/kernel.asm	/^c0106af1:	68 e0 00 00 00       	push   $0xe0$/;"	l
c0106af6	obj/kernel.asm	/^c0106af6:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c0106afb	obj/kernel.asm	/^c0106afb:	e8 cf 99 ff ff       	call   c01004cf <__panic>$/;"	l
c0106b00	obj/kernel.asm	/^c0106b00:	a1 94 22 15 c0       	mov    0xc0152294,%eax$/;"	l
c0106b05	obj/kernel.asm	/^c0106b05:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0106b08	obj/kernel.asm	/^c0106b08:	c7 05 94 22 15 c0 00 	movl   $0x0,0xc0152294$/;"	l
c0106b0f	obj/kernel.asm	/^c0106b0f:	00 00 00 $/;"	l
c0106b12	obj/kernel.asm	/^c0106b12:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106b19	obj/kernel.asm	/^c0106b19:	eb 1c                	jmp    c0106b37 <check_swap+0x341>$/;"	l
c0106b1b	obj/kernel.asm	/^c0106b1b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106b1e	obj/kernel.asm	/^c0106b1e:	8b 04 85 c0 21 15 c0 	mov    -0x3feade40(,%eax,4),%eax$/;"	l
c0106b25	obj/kernel.asm	/^c0106b25:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106b28	obj/kernel.asm	/^c0106b28:	6a 01                	push   $0x1$/;"	l
c0106b2a	obj/kernel.asm	/^c0106b2a:	50                   	push   %eax$/;"	l
c0106b2b	obj/kernel.asm	/^c0106b2b:	e8 4a cd ff ff       	call   c010387a <free_pages>$/;"	l
c0106b30	obj/kernel.asm	/^c0106b30:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106b33	obj/kernel.asm	/^c0106b33:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106b37	obj/kernel.asm	/^c0106b37:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106b3b	obj/kernel.asm	/^c0106b3b:	7e de                	jle    c0106b1b <check_swap+0x325>$/;"	l
c0106b3d	obj/kernel.asm	/^c0106b3d:	a1 94 22 15 c0       	mov    0xc0152294,%eax$/;"	l
c0106b42	obj/kernel.asm	/^c0106b42:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0106b45	obj/kernel.asm	/^c0106b45:	74 19                	je     c0106b60 <check_swap+0x36a>$/;"	l
c0106b47	obj/kernel.asm	/^c0106b47:	68 90 58 11 c0       	push   $0xc0115890$/;"	l
c0106b4c	obj/kernel.asm	/^c0106b4c:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c0106b51	obj/kernel.asm	/^c0106b51:	68 e9 00 00 00       	push   $0xe9$/;"	l
c0106b56	obj/kernel.asm	/^c0106b56:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c0106b5b	obj/kernel.asm	/^c0106b5b:	e8 6f 99 ff ff       	call   c01004cf <__panic>$/;"	l
c0106b60	obj/kernel.asm	/^c0106b60:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106b63	obj/kernel.asm	/^c0106b63:	68 b4 58 11 c0       	push   $0xc01158b4$/;"	l
c0106b68	obj/kernel.asm	/^c0106b68:	e8 fd 97 ff ff       	call   c010036a <cprintf>$/;"	l
c0106b6d	obj/kernel.asm	/^c0106b6d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106b70	obj/kernel.asm	/^c0106b70:	c7 05 6c f0 14 c0 00 	movl   $0x0,0xc014f06c$/;"	l
c0106b77	obj/kernel.asm	/^c0106b77:	00 00 00 $/;"	l
c0106b7a	obj/kernel.asm	/^c0106b7a:	e8 ff fa ff ff       	call   c010667e <check_content_set>$/;"	l
c0106b7f	obj/kernel.asm	/^c0106b7f:	a1 94 22 15 c0       	mov    0xc0152294,%eax$/;"	l
c0106b84	obj/kernel.asm	/^c0106b84:	85 c0                	test   %eax,%eax$/;"	l
c0106b86	obj/kernel.asm	/^c0106b86:	74 19                	je     c0106ba1 <check_swap+0x3ab>$/;"	l
c0106b88	obj/kernel.asm	/^c0106b88:	68 db 58 11 c0       	push   $0xc01158db$/;"	l
c0106b8d	obj/kernel.asm	/^c0106b8d:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c0106b92	obj/kernel.asm	/^c0106b92:	68 f2 00 00 00       	push   $0xf2$/;"	l
c0106b97	obj/kernel.asm	/^c0106b97:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c0106b9c	obj/kernel.asm	/^c0106b9c:	e8 2e 99 ff ff       	call   c01004cf <__panic>$/;"	l
c0106ba1	obj/kernel.asm	/^c0106ba1:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106ba8	obj/kernel.asm	/^c0106ba8:	eb 26                	jmp    c0106bd0 <check_swap+0x3da>$/;"	l
c0106baa	obj/kernel.asm	/^c0106baa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106bad	obj/kernel.asm	/^c0106bad:	c7 04 85 e0 21 15 c0 	movl   $0xffffffff,-0x3feade20(,%eax,4)$/;"	l
c0106bb4	obj/kernel.asm	/^c0106bb4:	ff ff ff ff $/;"	l
c0106bb8	obj/kernel.asm	/^c0106bb8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106bbb	obj/kernel.asm	/^c0106bbb:	8b 14 85 e0 21 15 c0 	mov    -0x3feade20(,%eax,4),%edx$/;"	l
c0106bc2	obj/kernel.asm	/^c0106bc2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106bc5	obj/kernel.asm	/^c0106bc5:	89 14 85 20 22 15 c0 	mov    %edx,-0x3feadde0(,%eax,4)$/;"	l
c0106bcc	obj/kernel.asm	/^c0106bcc:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106bd0	obj/kernel.asm	/^c0106bd0:	83 7d ec 09          	cmpl   $0x9,-0x14(%ebp)$/;"	l
c0106bd4	obj/kernel.asm	/^c0106bd4:	7e d4                	jle    c0106baa <check_swap+0x3b4>$/;"	l
c0106bd6	obj/kernel.asm	/^c0106bd6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106bdd	obj/kernel.asm	/^c0106bdd:	e9 cc 00 00 00       	jmp    c0106cae <check_swap+0x4b8>$/;"	l
c0106be2	obj/kernel.asm	/^c0106be2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106be5	obj/kernel.asm	/^c0106be5:	c7 04 85 74 22 15 c0 	movl   $0x0,-0x3feadd8c(,%eax,4)$/;"	l
c0106bec	obj/kernel.asm	/^c0106bec:	00 00 00 00 $/;"	l
c0106bf0	obj/kernel.asm	/^c0106bf0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106bf3	obj/kernel.asm	/^c0106bf3:	83 c0 01             	add    $0x1,%eax$/;"	l
c0106bf6	obj/kernel.asm	/^c0106bf6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0106bf9	obj/kernel.asm	/^c0106bf9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106bfc	obj/kernel.asm	/^c0106bfc:	6a 00                	push   $0x0$/;"	l
c0106bfe	obj/kernel.asm	/^c0106bfe:	50                   	push   %eax$/;"	l
c0106bff	obj/kernel.asm	/^c0106bff:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0106c02	obj/kernel.asm	/^c0106c02:	e8 00 d3 ff ff       	call   c0103f07 <get_pte>$/;"	l
c0106c07	obj/kernel.asm	/^c0106c07:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106c0a	obj/kernel.asm	/^c0106c0a:	89 c2                	mov    %eax,%edx$/;"	l
c0106c0c	obj/kernel.asm	/^c0106c0c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c0f	obj/kernel.asm	/^c0106c0f:	89 14 85 74 22 15 c0 	mov    %edx,-0x3feadd8c(,%eax,4)$/;"	l
c0106c16	obj/kernel.asm	/^c0106c16:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c19	obj/kernel.asm	/^c0106c19:	8b 04 85 74 22 15 c0 	mov    -0x3feadd8c(,%eax,4),%eax$/;"	l
c0106c20	obj/kernel.asm	/^c0106c20:	85 c0                	test   %eax,%eax$/;"	l
c0106c22	obj/kernel.asm	/^c0106c22:	75 19                	jne    c0106c3d <check_swap+0x447>$/;"	l
c0106c24	obj/kernel.asm	/^c0106c24:	68 e8 58 11 c0       	push   $0xc01158e8$/;"	l
c0106c29	obj/kernel.asm	/^c0106c29:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c0106c2e	obj/kernel.asm	/^c0106c2e:	68 fa 00 00 00       	push   $0xfa$/;"	l
c0106c33	obj/kernel.asm	/^c0106c33:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c0106c38	obj/kernel.asm	/^c0106c38:	e8 92 98 ff ff       	call   c01004cf <__panic>$/;"	l
c0106c3d	obj/kernel.asm	/^c0106c3d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c40	obj/kernel.asm	/^c0106c40:	8b 04 85 74 22 15 c0 	mov    -0x3feadd8c(,%eax,4),%eax$/;"	l
c0106c47	obj/kernel.asm	/^c0106c47:	8b 00                	mov    (%eax),%eax$/;"	l
c0106c49	obj/kernel.asm	/^c0106c49:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106c4c	obj/kernel.asm	/^c0106c4c:	50                   	push   %eax$/;"	l
c0106c4d	obj/kernel.asm	/^c0106c4d:	e8 f6 f6 ff ff       	call   c0106348 <pte2page>$/;"	l
c0106c52	obj/kernel.asm	/^c0106c52:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106c55	obj/kernel.asm	/^c0106c55:	89 c2                	mov    %eax,%edx$/;"	l
c0106c57	obj/kernel.asm	/^c0106c57:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c5a	obj/kernel.asm	/^c0106c5a:	8b 04 85 c0 21 15 c0 	mov    -0x3feade40(,%eax,4),%eax$/;"	l
c0106c61	obj/kernel.asm	/^c0106c61:	39 c2                	cmp    %eax,%edx$/;"	l
c0106c63	obj/kernel.asm	/^c0106c63:	74 19                	je     c0106c7e <check_swap+0x488>$/;"	l
c0106c65	obj/kernel.asm	/^c0106c65:	68 00 59 11 c0       	push   $0xc0115900$/;"	l
c0106c6a	obj/kernel.asm	/^c0106c6a:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c0106c6f	obj/kernel.asm	/^c0106c6f:	68 fb 00 00 00       	push   $0xfb$/;"	l
c0106c74	obj/kernel.asm	/^c0106c74:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c0106c79	obj/kernel.asm	/^c0106c79:	e8 51 98 ff ff       	call   c01004cf <__panic>$/;"	l
c0106c7e	obj/kernel.asm	/^c0106c7e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106c81	obj/kernel.asm	/^c0106c81:	8b 04 85 74 22 15 c0 	mov    -0x3feadd8c(,%eax,4),%eax$/;"	l
c0106c88	obj/kernel.asm	/^c0106c88:	8b 00                	mov    (%eax),%eax$/;"	l
c0106c8a	obj/kernel.asm	/^c0106c8a:	83 e0 01             	and    $0x1,%eax$/;"	l
c0106c8d	obj/kernel.asm	/^c0106c8d:	85 c0                	test   %eax,%eax$/;"	l
c0106c8f	obj/kernel.asm	/^c0106c8f:	75 19                	jne    c0106caa <check_swap+0x4b4>$/;"	l
c0106c91	obj/kernel.asm	/^c0106c91:	68 28 59 11 c0       	push   $0xc0115928$/;"	l
c0106c96	obj/kernel.asm	/^c0106c96:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c0106c9b	obj/kernel.asm	/^c0106c9b:	68 fc 00 00 00       	push   $0xfc$/;"	l
c0106ca0	obj/kernel.asm	/^c0106ca0:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c0106ca5	obj/kernel.asm	/^c0106ca5:	e8 25 98 ff ff       	call   c01004cf <__panic>$/;"	l
c0106caa	obj/kernel.asm	/^c0106caa:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106cae	obj/kernel.asm	/^c0106cae:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106cb2	obj/kernel.asm	/^c0106cb2:	0f 8e 2a ff ff ff    	jle    c0106be2 <check_swap+0x3ec>$/;"	l
c0106cb8	obj/kernel.asm	/^c0106cb8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106cbb	obj/kernel.asm	/^c0106cbb:	68 44 59 11 c0       	push   $0xc0115944$/;"	l
c0106cc0	obj/kernel.asm	/^c0106cc0:	e8 a5 96 ff ff       	call   c010036a <cprintf>$/;"	l
c0106cc5	obj/kernel.asm	/^c0106cc5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106cc8	obj/kernel.asm	/^c0106cc8:	e8 11 fb ff ff       	call   c01067de <check_content_access>$/;"	l
c0106ccd	obj/kernel.asm	/^c0106ccd:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0106cd0	obj/kernel.asm	/^c0106cd0:	83 7d cc 00          	cmpl   $0x0,-0x34(%ebp)$/;"	l
c0106cd4	obj/kernel.asm	/^c0106cd4:	74 19                	je     c0106cef <check_swap+0x4f9>$/;"	l
c0106cd6	obj/kernel.asm	/^c0106cd6:	68 6a 59 11 c0       	push   $0xc011596a$/;"	l
c0106cdb	obj/kernel.asm	/^c0106cdb:	68 52 56 11 c0       	push   $0xc0115652$/;"	l
c0106ce0	obj/kernel.asm	/^c0106ce0:	68 01 01 00 00       	push   $0x101$/;"	l
c0106ce5	obj/kernel.asm	/^c0106ce5:	68 ec 55 11 c0       	push   $0xc01155ec$/;"	l
c0106cea	obj/kernel.asm	/^c0106cea:	e8 e0 97 ff ff       	call   c01004cf <__panic>$/;"	l
c0106cef	obj/kernel.asm	/^c0106cef:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106cf6	obj/kernel.asm	/^c0106cf6:	eb 1c                	jmp    c0106d14 <check_swap+0x51e>$/;"	l
c0106cf8	obj/kernel.asm	/^c0106cf8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0106cfb	obj/kernel.asm	/^c0106cfb:	8b 04 85 c0 21 15 c0 	mov    -0x3feade40(,%eax,4),%eax$/;"	l
c0106d02	obj/kernel.asm	/^c0106d02:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106d05	obj/kernel.asm	/^c0106d05:	6a 01                	push   $0x1$/;"	l
c0106d07	obj/kernel.asm	/^c0106d07:	50                   	push   %eax$/;"	l
c0106d08	obj/kernel.asm	/^c0106d08:	e8 6d cb ff ff       	call   c010387a <free_pages>$/;"	l
c0106d0d	obj/kernel.asm	/^c0106d0d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106d10	obj/kernel.asm	/^c0106d10:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0106d14	obj/kernel.asm	/^c0106d14:	83 7d ec 03          	cmpl   $0x3,-0x14(%ebp)$/;"	l
c0106d18	obj/kernel.asm	/^c0106d18:	7e de                	jle    c0106cf8 <check_swap+0x502>$/;"	l
c0106d1a	obj/kernel.asm	/^c0106d1a:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106d1d	obj/kernel.asm	/^c0106d1d:	8b 00                	mov    (%eax),%eax$/;"	l
c0106d1f	obj/kernel.asm	/^c0106d1f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106d22	obj/kernel.asm	/^c0106d22:	50                   	push   %eax$/;"	l
c0106d23	obj/kernel.asm	/^c0106d23:	e8 d9 f5 ff ff       	call   c0106301 <pa2page>$/;"	l
c0106d28	obj/kernel.asm	/^c0106d28:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106d2b	obj/kernel.asm	/^c0106d2b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106d2e	obj/kernel.asm	/^c0106d2e:	6a 01                	push   $0x1$/;"	l
c0106d30	obj/kernel.asm	/^c0106d30:	50                   	push   %eax$/;"	l
c0106d31	obj/kernel.asm	/^c0106d31:	e8 44 cb ff ff       	call   c010387a <free_pages>$/;"	l
c0106d36	obj/kernel.asm	/^c0106d36:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106d39	obj/kernel.asm	/^c0106d39:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0106d3c	obj/kernel.asm	/^c0106d3c:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0106d42	obj/kernel.asm	/^c0106d42:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0106d45	obj/kernel.asm	/^c0106d45:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0106d4c	obj/kernel.asm	/^c0106d4c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106d4f	obj/kernel.asm	/^c0106d4f:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0106d52	obj/kernel.asm	/^c0106d52:	e8 7a e7 ff ff       	call   c01054d1 <mm_destroy>$/;"	l
c0106d57	obj/kernel.asm	/^c0106d57:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106d5a	obj/kernel.asm	/^c0106d5a:	c7 05 b0 21 15 c0 00 	movl   $0x0,0xc01521b0$/;"	l
c0106d61	obj/kernel.asm	/^c0106d61:	00 00 00 $/;"	l
c0106d64	obj/kernel.asm	/^c0106d64:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0106d67	obj/kernel.asm	/^c0106d67:	a3 94 22 15 c0       	mov    %eax,0xc0152294$/;"	l
c0106d6c	obj/kernel.asm	/^c0106d6c:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c0106d6f	obj/kernel.asm	/^c0106d6f:	8b 55 9c             	mov    -0x64(%ebp),%edx$/;"	l
c0106d72	obj/kernel.asm	/^c0106d72:	a3 8c 22 15 c0       	mov    %eax,0xc015228c$/;"	l
c0106d77	obj/kernel.asm	/^c0106d77:	89 15 90 22 15 c0    	mov    %edx,0xc0152290$/;"	l
c0106d7d	obj/kernel.asm	/^c0106d7d:	c7 45 e8 8c 22 15 c0 	movl   $0xc015228c,-0x18(%ebp)$/;"	l
c0106d84	obj/kernel.asm	/^c0106d84:	eb 1d                	jmp    c0106da3 <check_swap+0x5ad>$/;"	l
c0106d86	obj/kernel.asm	/^c0106d86:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106d89	obj/kernel.asm	/^c0106d89:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0106d8c	obj/kernel.asm	/^c0106d8c:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0106d8f	obj/kernel.asm	/^c0106d8f:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c0106d93	obj/kernel.asm	/^c0106d93:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0106d96	obj/kernel.asm	/^c0106d96:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0106d99	obj/kernel.asm	/^c0106d99:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0106d9c	obj/kernel.asm	/^c0106d9c:	29 c2                	sub    %eax,%edx$/;"	l
c0106d9e	obj/kernel.asm	/^c0106d9e:	89 d0                	mov    %edx,%eax$/;"	l
c0106da0	obj/kernel.asm	/^c0106da0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106da3	obj/kernel.asm	/^c0106da3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0106da6	obj/kernel.asm	/^c0106da6:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c0106da9	obj/kernel.asm	/^c0106da9:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c0106dac	obj/kernel.asm	/^c0106dac:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106daf	obj/kernel.asm	/^c0106daf:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0106db2	obj/kernel.asm	/^c0106db2:	81 7d e8 8c 22 15 c0 	cmpl   $0xc015228c,-0x18(%ebp)$/;"	l
c0106db9	obj/kernel.asm	/^c0106db9:	75 cb                	jne    c0106d86 <check_swap+0x590>$/;"	l
c0106dbb	obj/kernel.asm	/^c0106dbb:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106dbe	obj/kernel.asm	/^c0106dbe:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0106dc1	obj/kernel.asm	/^c0106dc1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106dc4	obj/kernel.asm	/^c0106dc4:	68 71 59 11 c0       	push   $0xc0115971$/;"	l
c0106dc9	obj/kernel.asm	/^c0106dc9:	e8 9c 95 ff ff       	call   c010036a <cprintf>$/;"	l
c0106dce	obj/kernel.asm	/^c0106dce:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106dd1	obj/kernel.asm	/^c0106dd1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106dd4	obj/kernel.asm	/^c0106dd4:	68 8b 59 11 c0       	push   $0xc011598b$/;"	l
c0106dd9	obj/kernel.asm	/^c0106dd9:	e8 8c 95 ff ff       	call   c010036a <cprintf>$/;"	l
c0106dde	obj/kernel.asm	/^c0106dde:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106de1	obj/kernel.asm	/^c0106de1:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0106de4	obj/kernel.asm	/^c0106de4:	c9                   	leave  $/;"	l
c0106de5	obj/kernel.asm	/^c0106de5:	c3                   	ret    $/;"	l
c0106de6	obj/kernel.asm	/^c0106de6 <__intr_save>:$/;"	l
c0106de6	obj/kernel.asm	/^c0106de6:	55                   	push   %ebp$/;"	l
c0106de7	obj/kernel.asm	/^c0106de7:	89 e5                	mov    %esp,%ebp$/;"	l
c0106de9	obj/kernel.asm	/^c0106de9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106dec	obj/kernel.asm	/^c0106dec:	9c                   	pushf  $/;"	l
c0106ded	obj/kernel.asm	/^c0106ded:	58                   	pop    %eax$/;"	l
c0106dee	obj/kernel.asm	/^c0106dee:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106df1	obj/kernel.asm	/^c0106df1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106df4	obj/kernel.asm	/^c0106df4:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0106df9	obj/kernel.asm	/^c0106df9:	85 c0                	test   %eax,%eax$/;"	l
c0106dfb	obj/kernel.asm	/^c0106dfb:	74 0c                	je     c0106e09 <__intr_save+0x23>$/;"	l
c0106dfd	obj/kernel.asm	/^c0106dfd:	e8 59 b4 ff ff       	call   c010225b <intr_disable>$/;"	l
c0106e02	obj/kernel.asm	/^c0106e02:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0106e07	obj/kernel.asm	/^c0106e07:	eb 05                	jmp    c0106e0e <__intr_save+0x28>$/;"	l
c0106e09	obj/kernel.asm	/^c0106e09:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106e0e	obj/kernel.asm	/^c0106e0e:	c9                   	leave  $/;"	l
c0106e0f	obj/kernel.asm	/^c0106e0f:	c3                   	ret    $/;"	l
c0106e10	obj/kernel.asm	/^c0106e10 <__intr_restore>:$/;"	l
c0106e10	obj/kernel.asm	/^c0106e10:	55                   	push   %ebp$/;"	l
c0106e11	obj/kernel.asm	/^c0106e11:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e13	obj/kernel.asm	/^c0106e13:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106e16	obj/kernel.asm	/^c0106e16:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0106e1a	obj/kernel.asm	/^c0106e1a:	74 05                	je     c0106e21 <__intr_restore+0x11>$/;"	l
c0106e1c	obj/kernel.asm	/^c0106e1c:	e8 34 b4 ff ff       	call   c0102255 <intr_enable>$/;"	l
c0106e21	obj/kernel.asm	/^c0106e21:	c9                   	leave  $/;"	l
c0106e22	obj/kernel.asm	/^c0106e22:	c3                   	ret    $/;"	l
c0106e23	obj/kernel.asm	/^c0106e23 <page2ppn>:$/;"	l
c0106e23	obj/kernel.asm	/^c0106e23:	55                   	push   %ebp$/;"	l
c0106e24	obj/kernel.asm	/^c0106e24:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e26	obj/kernel.asm	/^c0106e26:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106e29	obj/kernel.asm	/^c0106e29:	8b 15 ac 21 15 c0    	mov    0xc01521ac,%edx$/;"	l
c0106e2f	obj/kernel.asm	/^c0106e2f:	29 d0                	sub    %edx,%eax$/;"	l
c0106e31	obj/kernel.asm	/^c0106e31:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c0106e34	obj/kernel.asm	/^c0106e34:	69 c0 39 8e e3 38    	imul   $0x38e38e39,%eax,%eax$/;"	l
c0106e3a	obj/kernel.asm	/^c0106e3a:	5d                   	pop    %ebp$/;"	l
c0106e3b	obj/kernel.asm	/^c0106e3b:	c3                   	ret    $/;"	l
c0106e3c	obj/kernel.asm	/^c0106e3c <page2pa>:$/;"	l
c0106e3c	obj/kernel.asm	/^c0106e3c:	55                   	push   %ebp$/;"	l
c0106e3d	obj/kernel.asm	/^c0106e3d:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e3f	obj/kernel.asm	/^c0106e3f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106e42	obj/kernel.asm	/^c0106e42:	e8 dc ff ff ff       	call   c0106e23 <page2ppn>$/;"	l
c0106e47	obj/kernel.asm	/^c0106e47:	83 c4 04             	add    $0x4,%esp$/;"	l
c0106e4a	obj/kernel.asm	/^c0106e4a:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0106e4d	obj/kernel.asm	/^c0106e4d:	c9                   	leave  $/;"	l
c0106e4e	obj/kernel.asm	/^c0106e4e:	c3                   	ret    $/;"	l
c0106e4f	obj/kernel.asm	/^c0106e4f <pa2page>:$/;"	l
c0106e4f	obj/kernel.asm	/^c0106e4f:	55                   	push   %ebp$/;"	l
c0106e50	obj/kernel.asm	/^c0106e50:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e52	obj/kernel.asm	/^c0106e52:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106e55	obj/kernel.asm	/^c0106e55:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106e58	obj/kernel.asm	/^c0106e58:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106e5b	obj/kernel.asm	/^c0106e5b:	89 c2                	mov    %eax,%edx$/;"	l
c0106e5d	obj/kernel.asm	/^c0106e5d:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c0106e62	obj/kernel.asm	/^c0106e62:	39 c2                	cmp    %eax,%edx$/;"	l
c0106e64	obj/kernel.asm	/^c0106e64:	72 14                	jb     c0106e7a <pa2page+0x2b>$/;"	l
c0106e66	obj/kernel.asm	/^c0106e66:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106e69	obj/kernel.asm	/^c0106e69:	68 a4 59 11 c0       	push   $0xc01159a4$/;"	l
c0106e6e	obj/kernel.asm	/^c0106e6e:	6a 5e                	push   $0x5e$/;"	l
c0106e70	obj/kernel.asm	/^c0106e70:	68 c3 59 11 c0       	push   $0xc01159c3$/;"	l
c0106e75	obj/kernel.asm	/^c0106e75:	e8 55 96 ff ff       	call   c01004cf <__panic>$/;"	l
c0106e7a	obj/kernel.asm	/^c0106e7a:	8b 0d ac 21 15 c0    	mov    0xc01521ac,%ecx$/;"	l
c0106e80	obj/kernel.asm	/^c0106e80:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106e83	obj/kernel.asm	/^c0106e83:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106e86	obj/kernel.asm	/^c0106e86:	89 c2                	mov    %eax,%edx$/;"	l
c0106e88	obj/kernel.asm	/^c0106e88:	89 d0                	mov    %edx,%eax$/;"	l
c0106e8a	obj/kernel.asm	/^c0106e8a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0106e8d	obj/kernel.asm	/^c0106e8d:	01 d0                	add    %edx,%eax$/;"	l
c0106e8f	obj/kernel.asm	/^c0106e8f:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0106e92	obj/kernel.asm	/^c0106e92:	01 c8                	add    %ecx,%eax$/;"	l
c0106e94	obj/kernel.asm	/^c0106e94:	c9                   	leave  $/;"	l
c0106e95	obj/kernel.asm	/^c0106e95:	c3                   	ret    $/;"	l
c0106e96	obj/kernel.asm	/^c0106e96 <page2kva>:$/;"	l
c0106e96	obj/kernel.asm	/^c0106e96:	55                   	push   %ebp$/;"	l
c0106e97	obj/kernel.asm	/^c0106e97:	89 e5                	mov    %esp,%ebp$/;"	l
c0106e99	obj/kernel.asm	/^c0106e99:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106e9c	obj/kernel.asm	/^c0106e9c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0106e9f	obj/kernel.asm	/^c0106e9f:	e8 98 ff ff ff       	call   c0106e3c <page2pa>$/;"	l
c0106ea4	obj/kernel.asm	/^c0106ea4:	83 c4 04             	add    $0x4,%esp$/;"	l
c0106ea7	obj/kernel.asm	/^c0106ea7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106eaa	obj/kernel.asm	/^c0106eaa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106ead	obj/kernel.asm	/^c0106ead:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c0106eb0	obj/kernel.asm	/^c0106eb0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106eb3	obj/kernel.asm	/^c0106eb3:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c0106eb8	obj/kernel.asm	/^c0106eb8:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0106ebb	obj/kernel.asm	/^c0106ebb:	72 14                	jb     c0106ed1 <page2kva+0x3b>$/;"	l
c0106ebd	obj/kernel.asm	/^c0106ebd:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106ec0	obj/kernel.asm	/^c0106ec0:	68 d4 59 11 c0       	push   $0xc01159d4$/;"	l
c0106ec5	obj/kernel.asm	/^c0106ec5:	6a 65                	push   $0x65$/;"	l
c0106ec7	obj/kernel.asm	/^c0106ec7:	68 c3 59 11 c0       	push   $0xc01159c3$/;"	l
c0106ecc	obj/kernel.asm	/^c0106ecc:	e8 fe 95 ff ff       	call   c01004cf <__panic>$/;"	l
c0106ed1	obj/kernel.asm	/^c0106ed1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106ed4	obj/kernel.asm	/^c0106ed4:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c0106ed9	obj/kernel.asm	/^c0106ed9:	c9                   	leave  $/;"	l
c0106eda	obj/kernel.asm	/^c0106eda:	c3                   	ret    $/;"	l
c0106edb	obj/kernel.asm	/^c0106edb <kva2page>:$/;"	l
c0106edb	obj/kernel.asm	/^c0106edb:	55                   	push   %ebp$/;"	l
c0106edc	obj/kernel.asm	/^c0106edc:	89 e5                	mov    %esp,%ebp$/;"	l
c0106ede	obj/kernel.asm	/^c0106ede:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106ee1	obj/kernel.asm	/^c0106ee1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106ee4	obj/kernel.asm	/^c0106ee4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106ee7	obj/kernel.asm	/^c0106ee7:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c0106eee	obj/kernel.asm	/^c0106eee:	77 14                	ja     c0106f04 <kva2page+0x29>$/;"	l
c0106ef0	obj/kernel.asm	/^c0106ef0:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106ef3	obj/kernel.asm	/^c0106ef3:	68 f8 59 11 c0       	push   $0xc01159f8$/;"	l
c0106ef8	obj/kernel.asm	/^c0106ef8:	6a 6a                	push   $0x6a$/;"	l
c0106efa	obj/kernel.asm	/^c0106efa:	68 c3 59 11 c0       	push   $0xc01159c3$/;"	l
c0106eff	obj/kernel.asm	/^c0106eff:	e8 cb 95 ff ff       	call   c01004cf <__panic>$/;"	l
c0106f04	obj/kernel.asm	/^c0106f04:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106f07	obj/kernel.asm	/^c0106f07:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c0106f0c	obj/kernel.asm	/^c0106f0c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106f0f	obj/kernel.asm	/^c0106f0f:	50                   	push   %eax$/;"	l
c0106f10	obj/kernel.asm	/^c0106f10:	e8 3a ff ff ff       	call   c0106e4f <pa2page>$/;"	l
c0106f15	obj/kernel.asm	/^c0106f15:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106f18	obj/kernel.asm	/^c0106f18:	c9                   	leave  $/;"	l
c0106f19	obj/kernel.asm	/^c0106f19:	c3                   	ret    $/;"	l
c0106f1a	obj/kernel.asm	/^c0106f1a <__slob_get_free_pages>:$/;"	l
c0106f1a	obj/kernel.asm	/^c0106f1a:	55                   	push   %ebp$/;"	l
c0106f1b	obj/kernel.asm	/^c0106f1b:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f1d	obj/kernel.asm	/^c0106f1d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0106f20	obj/kernel.asm	/^c0106f20:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106f23	obj/kernel.asm	/^c0106f23:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0106f28	obj/kernel.asm	/^c0106f28:	89 c1                	mov    %eax,%ecx$/;"	l
c0106f2a	obj/kernel.asm	/^c0106f2a:	d3 e2                	shl    %cl,%edx$/;"	d
c0106f2c	obj/kernel.asm	/^c0106f2c:	89 d0                	mov    %edx,%eax$/;"	l
c0106f2e	obj/kernel.asm	/^c0106f2e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106f31	obj/kernel.asm	/^c0106f31:	50                   	push   %eax$/;"	l
c0106f32	obj/kernel.asm	/^c0106f32:	e8 d7 c8 ff ff       	call   c010380e <alloc_pages>$/;"	l
c0106f37	obj/kernel.asm	/^c0106f37:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106f3a	obj/kernel.asm	/^c0106f3a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106f3d	obj/kernel.asm	/^c0106f3d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0106f41	obj/kernel.asm	/^c0106f41:	75 07                	jne    c0106f4a <__slob_get_free_pages+0x30>$/;"	l
c0106f43	obj/kernel.asm	/^c0106f43:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0106f48	obj/kernel.asm	/^c0106f48:	eb 0e                	jmp    c0106f58 <__slob_get_free_pages+0x3e>$/;"	l
c0106f4a	obj/kernel.asm	/^c0106f4a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106f4d	obj/kernel.asm	/^c0106f4d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0106f50	obj/kernel.asm	/^c0106f50:	e8 41 ff ff ff       	call   c0106e96 <page2kva>$/;"	l
c0106f55	obj/kernel.asm	/^c0106f55:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106f58	obj/kernel.asm	/^c0106f58:	c9                   	leave  $/;"	l
c0106f59	obj/kernel.asm	/^c0106f59:	c3                   	ret    $/;"	l
c0106f5a	obj/kernel.asm	/^c0106f5a <__slob_free_pages>:$/;"	l
c0106f5a	obj/kernel.asm	/^c0106f5a:	55                   	push   %ebp$/;"	l
c0106f5b	obj/kernel.asm	/^c0106f5b:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f5d	obj/kernel.asm	/^c0106f5d:	53                   	push   %ebx$/;"	l
c0106f5e	obj/kernel.asm	/^c0106f5e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0106f61	obj/kernel.asm	/^c0106f61:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0106f64	obj/kernel.asm	/^c0106f64:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0106f69	obj/kernel.asm	/^c0106f69:	89 c1                	mov    %eax,%ecx$/;"	l
c0106f6b	obj/kernel.asm	/^c0106f6b:	d3 e2                	shl    %cl,%edx$/;"	d
c0106f6d	obj/kernel.asm	/^c0106f6d:	89 d0                	mov    %edx,%eax$/;"	l
c0106f6f	obj/kernel.asm	/^c0106f6f:	89 c3                	mov    %eax,%ebx$/;"	l
c0106f71	obj/kernel.asm	/^c0106f71:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106f74	obj/kernel.asm	/^c0106f74:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0106f77	obj/kernel.asm	/^c0106f77:	50                   	push   %eax$/;"	l
c0106f78	obj/kernel.asm	/^c0106f78:	e8 5e ff ff ff       	call   c0106edb <kva2page>$/;"	l
c0106f7d	obj/kernel.asm	/^c0106f7d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106f80	obj/kernel.asm	/^c0106f80:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0106f83	obj/kernel.asm	/^c0106f83:	53                   	push   %ebx$/;"	l
c0106f84	obj/kernel.asm	/^c0106f84:	50                   	push   %eax$/;"	l
c0106f85	obj/kernel.asm	/^c0106f85:	e8 f0 c8 ff ff       	call   c010387a <free_pages>$/;"	l
c0106f8a	obj/kernel.asm	/^c0106f8a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0106f8d	obj/kernel.asm	/^c0106f8d:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0106f90	obj/kernel.asm	/^c0106f90:	c9                   	leave  $/;"	l
c0106f91	obj/kernel.asm	/^c0106f91:	c3                   	ret    $/;"	l
c0106f92	obj/kernel.asm	/^c0106f92 <slob_alloc>:$/;"	l
c0106f92	obj/kernel.asm	/^c0106f92:	55                   	push   %ebp$/;"	l
c0106f93	obj/kernel.asm	/^c0106f93:	89 e5                	mov    %esp,%ebp$/;"	l
c0106f95	obj/kernel.asm	/^c0106f95:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0106f98	obj/kernel.asm	/^c0106f98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106f9b	obj/kernel.asm	/^c0106f9b:	83 c0 08             	add    $0x8,%eax$/;"	l
c0106f9e	obj/kernel.asm	/^c0106f9e:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c0106fa3	obj/kernel.asm	/^c0106fa3:	76 16                	jbe    c0106fbb <slob_alloc+0x29>$/;"	l
c0106fa5	obj/kernel.asm	/^c0106fa5:	68 1c 5a 11 c0       	push   $0xc0115a1c$/;"	l
c0106faa	obj/kernel.asm	/^c0106faa:	68 3b 5a 11 c0       	push   $0xc0115a3b$/;"	l
c0106faf	obj/kernel.asm	/^c0106faf:	6a 64                	push   $0x64$/;"	l
c0106fb1	obj/kernel.asm	/^c0106fb1:	68 50 5a 11 c0       	push   $0xc0115a50$/;"	l
c0106fb6	obj/kernel.asm	/^c0106fb6:	e8 14 95 ff ff       	call   c01004cf <__panic>$/;"	l
c0106fbb	obj/kernel.asm	/^c0106fbb:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0106fc2	obj/kernel.asm	/^c0106fc2:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0106fc9	obj/kernel.asm	/^c0106fc9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0106fcc	obj/kernel.asm	/^c0106fcc:	83 c0 07             	add    $0x7,%eax$/;"	l
c0106fcf	obj/kernel.asm	/^c0106fcf:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c0106fd2	obj/kernel.asm	/^c0106fd2:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0106fd5	obj/kernel.asm	/^c0106fd5:	e8 0c fe ff ff       	call   c0106de6 <__intr_save>$/;"	l
c0106fda	obj/kernel.asm	/^c0106fda:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0106fdd	obj/kernel.asm	/^c0106fdd:	a1 a0 da 14 c0       	mov    0xc014daa0,%eax$/;"	l
c0106fe2	obj/kernel.asm	/^c0106fe2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0106fe5	obj/kernel.asm	/^c0106fe5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0106fe8	obj/kernel.asm	/^c0106fe8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0106feb	obj/kernel.asm	/^c0106feb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0106fee	obj/kernel.asm	/^c0106fee:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0106ff2	obj/kernel.asm	/^c0106ff2:	74 25                	je     c0107019 <slob_alloc+0x87>$/;"	l
c0106ff4	obj/kernel.asm	/^c0106ff4:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0106ff7	obj/kernel.asm	/^c0106ff7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0106ffa	obj/kernel.asm	/^c0106ffa:	01 d0                	add    %edx,%eax$/;"	l
c0106ffc	obj/kernel.asm	/^c0106ffc:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0106fff	obj/kernel.asm	/^c0106fff:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0107002	obj/kernel.asm	/^c0107002:	f7 d8                	neg    %eax$/;"	l
c0107004	obj/kernel.asm	/^c0107004:	21 d0                	and    %edx,%eax$/;"	l
c0107006	obj/kernel.asm	/^c0107006:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107009	obj/kernel.asm	/^c0107009:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010700c	obj/kernel.asm	/^c010700c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010700f	obj/kernel.asm	/^c010700f:	29 c2                	sub    %eax,%edx$/;"	l
c0107011	obj/kernel.asm	/^c0107011:	89 d0                	mov    %edx,%eax$/;"	l
c0107013	obj/kernel.asm	/^c0107013:	c1 f8 03             	sar    $0x3,%eax$/;"	l
c0107016	obj/kernel.asm	/^c0107016:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107019	obj/kernel.asm	/^c0107019:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010701c	obj/kernel.asm	/^c010701c:	8b 00                	mov    (%eax),%eax$/;"	l
c010701e	obj/kernel.asm	/^c010701e:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c0107021	obj/kernel.asm	/^c0107021:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0107024	obj/kernel.asm	/^c0107024:	01 ca                	add    %ecx,%edx$/;"	l
c0107026	obj/kernel.asm	/^c0107026:	39 d0                	cmp    %edx,%eax$/;"	l
c0107028	obj/kernel.asm	/^c0107028:	0f 8c b1 00 00 00    	jl     c01070df <slob_alloc+0x14d>$/;"	l
c010702e	obj/kernel.asm	/^c010702e:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0107032	obj/kernel.asm	/^c0107032:	74 38                	je     c010706c <slob_alloc+0xda>$/;"	l
c0107034	obj/kernel.asm	/^c0107034:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107037	obj/kernel.asm	/^c0107037:	8b 00                	mov    (%eax),%eax$/;"	l
c0107039	obj/kernel.asm	/^c0107039:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
c010703c	obj/kernel.asm	/^c010703c:	89 c2                	mov    %eax,%edx$/;"	l
c010703e	obj/kernel.asm	/^c010703e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107041	obj/kernel.asm	/^c0107041:	89 10                	mov    %edx,(%eax)$/;"	l
c0107043	obj/kernel.asm	/^c0107043:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107046	obj/kernel.asm	/^c0107046:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107049	obj/kernel.asm	/^c0107049:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010704c	obj/kernel.asm	/^c010704c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010704f	obj/kernel.asm	/^c010704f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107052	obj/kernel.asm	/^c0107052:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107055	obj/kernel.asm	/^c0107055:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107058	obj/kernel.asm	/^c0107058:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010705b	obj/kernel.asm	/^c010705b:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010705e	obj/kernel.asm	/^c010705e:	89 10                	mov    %edx,(%eax)$/;"	l
c0107060	obj/kernel.asm	/^c0107060:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107063	obj/kernel.asm	/^c0107063:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107066	obj/kernel.asm	/^c0107066:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107069	obj/kernel.asm	/^c0107069:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010706c	obj/kernel.asm	/^c010706c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010706f	obj/kernel.asm	/^c010706f:	8b 00                	mov    (%eax),%eax$/;"	l
c0107071	obj/kernel.asm	/^c0107071:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0107074	obj/kernel.asm	/^c0107074:	75 0e                	jne    c0107084 <slob_alloc+0xf2>$/;"	l
c0107076	obj/kernel.asm	/^c0107076:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107079	obj/kernel.asm	/^c0107079:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010707c	obj/kernel.asm	/^c010707c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010707f	obj/kernel.asm	/^c010707f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107082	obj/kernel.asm	/^c0107082:	eb 3c                	jmp    c01070c0 <slob_alloc+0x12e>$/;"	l
c0107084	obj/kernel.asm	/^c0107084:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107087	obj/kernel.asm	/^c0107087:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010708e	obj/kernel.asm	/^c010708e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107091	obj/kernel.asm	/^c0107091:	01 c2                	add    %eax,%edx$/;"	l
c0107093	obj/kernel.asm	/^c0107093:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107096	obj/kernel.asm	/^c0107096:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107099	obj/kernel.asm	/^c0107099:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010709c	obj/kernel.asm	/^c010709c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010709f	obj/kernel.asm	/^c010709f:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01070a2	obj/kernel.asm	/^c01070a2:	8b 12                	mov    (%edx),%edx$/;"	l
c01070a4	obj/kernel.asm	/^c01070a4:	2b 55 e0             	sub    -0x20(%ebp),%edx$/;"	l
c01070a7	obj/kernel.asm	/^c01070a7:	89 10                	mov    %edx,(%eax)$/;"	l
c01070a9	obj/kernel.asm	/^c01070a9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01070ac	obj/kernel.asm	/^c01070ac:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01070af	obj/kernel.asm	/^c01070af:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01070b2	obj/kernel.asm	/^c01070b2:	8b 52 04             	mov    0x4(%edx),%edx$/;"	l
c01070b5	obj/kernel.asm	/^c01070b5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01070b8	obj/kernel.asm	/^c01070b8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01070bb	obj/kernel.asm	/^c01070bb:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01070be	obj/kernel.asm	/^c01070be:	89 10                	mov    %edx,(%eax)$/;"	l
c01070c0	obj/kernel.asm	/^c01070c0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01070c3	obj/kernel.asm	/^c01070c3:	a3 a0 da 14 c0       	mov    %eax,0xc014daa0$/;"	l
c01070c8	obj/kernel.asm	/^c01070c8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01070cb	obj/kernel.asm	/^c01070cb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01070ce	obj/kernel.asm	/^c01070ce:	50                   	push   %eax$/;"	l
c01070cf	obj/kernel.asm	/^c01070cf:	e8 3c fd ff ff       	call   c0106e10 <__intr_restore>$/;"	l
c01070d4	obj/kernel.asm	/^c01070d4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01070d7	obj/kernel.asm	/^c01070d7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01070da	obj/kernel.asm	/^c01070da:	e9 80 00 00 00       	jmp    c010715f <slob_alloc+0x1cd>$/;"	l
c01070df	obj/kernel.asm	/^c01070df:	a1 a0 da 14 c0       	mov    0xc014daa0,%eax$/;"	l
c01070e4	obj/kernel.asm	/^c01070e4:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c01070e7	obj/kernel.asm	/^c01070e7:	75 62                	jne    c010714b <slob_alloc+0x1b9>$/;"	l
c01070e9	obj/kernel.asm	/^c01070e9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01070ec	obj/kernel.asm	/^c01070ec:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01070ef	obj/kernel.asm	/^c01070ef:	50                   	push   %eax$/;"	l
c01070f0	obj/kernel.asm	/^c01070f0:	e8 1b fd ff ff       	call   c0106e10 <__intr_restore>$/;"	l
c01070f5	obj/kernel.asm	/^c01070f5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01070f8	obj/kernel.asm	/^c01070f8:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c01070ff	obj/kernel.asm	/^c01070ff:	75 07                	jne    c0107108 <slob_alloc+0x176>$/;"	l
c0107101	obj/kernel.asm	/^c0107101:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107106	obj/kernel.asm	/^c0107106:	eb 57                	jmp    c010715f <slob_alloc+0x1cd>$/;"	l
c0107108	obj/kernel.asm	/^c0107108:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010710b	obj/kernel.asm	/^c010710b:	6a 00                	push   $0x0$/;"	l
c010710d	obj/kernel.asm	/^c010710d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0107110	obj/kernel.asm	/^c0107110:	e8 05 fe ff ff       	call   c0106f1a <__slob_get_free_pages>$/;"	l
c0107115	obj/kernel.asm	/^c0107115:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107118	obj/kernel.asm	/^c0107118:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010711b	obj/kernel.asm	/^c010711b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010711f	obj/kernel.asm	/^c010711f:	75 07                	jne    c0107128 <slob_alloc+0x196>$/;"	l
c0107121	obj/kernel.asm	/^c0107121:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107126	obj/kernel.asm	/^c0107126:	eb 37                	jmp    c010715f <slob_alloc+0x1cd>$/;"	l
c0107128	obj/kernel.asm	/^c0107128:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010712b	obj/kernel.asm	/^c010712b:	68 00 10 00 00       	push   $0x1000$/;"	l
c0107130	obj/kernel.asm	/^c0107130:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0107133	obj/kernel.asm	/^c0107133:	e8 29 00 00 00       	call   c0107161 <slob_free>$/;"	l
c0107138	obj/kernel.asm	/^c0107138:	83 c4 10             	add    $0x10,%esp$/;"	l
c010713b	obj/kernel.asm	/^c010713b:	e8 a6 fc ff ff       	call   c0106de6 <__intr_save>$/;"	l
c0107140	obj/kernel.asm	/^c0107140:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107143	obj/kernel.asm	/^c0107143:	a1 a0 da 14 c0       	mov    0xc014daa0,%eax$/;"	l
c0107148	obj/kernel.asm	/^c0107148:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010714b	obj/kernel.asm	/^c010714b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010714e	obj/kernel.asm	/^c010714e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107151	obj/kernel.asm	/^c0107151:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107154	obj/kernel.asm	/^c0107154:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107157	obj/kernel.asm	/^c0107157:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010715a	obj/kernel.asm	/^c010715a:	e9 8f fe ff ff       	jmp    c0106fee <slob_alloc+0x5c>$/;"	l
c010715f	obj/kernel.asm	/^c010715f:	c9                   	leave  $/;"	l
c0107160	obj/kernel.asm	/^c0107160:	c3                   	ret    $/;"	l
c0107161	obj/kernel.asm	/^c0107161 <slob_free>:$/;"	l
c0107161	obj/kernel.asm	/^c0107161:	55                   	push   %ebp$/;"	l
c0107162	obj/kernel.asm	/^c0107162:	89 e5                	mov    %esp,%ebp$/;"	l
c0107164	obj/kernel.asm	/^c0107164:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107167	obj/kernel.asm	/^c0107167:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010716a	obj/kernel.asm	/^c010716a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010716d	obj/kernel.asm	/^c010716d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0107171	obj/kernel.asm	/^c0107171:	75 05                	jne    c0107178 <slob_free+0x17>$/;"	l
c0107173	obj/kernel.asm	/^c0107173:	e9 03 01 00 00       	jmp    c010727b <slob_free+0x11a>$/;"	l
c0107178	obj/kernel.asm	/^c0107178:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010717c	obj/kernel.asm	/^c010717c:	74 10                	je     c010718e <slob_free+0x2d>$/;"	l
c010717e	obj/kernel.asm	/^c010717e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107181	obj/kernel.asm	/^c0107181:	83 c0 07             	add    $0x7,%eax$/;"	l
c0107184	obj/kernel.asm	/^c0107184:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c0107187	obj/kernel.asm	/^c0107187:	89 c2                	mov    %eax,%edx$/;"	l
c0107189	obj/kernel.asm	/^c0107189:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010718c	obj/kernel.asm	/^c010718c:	89 10                	mov    %edx,(%eax)$/;"	l
c010718e	obj/kernel.asm	/^c010718e:	e8 53 fc ff ff       	call   c0106de6 <__intr_save>$/;"	l
c0107193	obj/kernel.asm	/^c0107193:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107196	obj/kernel.asm	/^c0107196:	a1 a0 da 14 c0       	mov    0xc014daa0,%eax$/;"	l
c010719b	obj/kernel.asm	/^c010719b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010719e	obj/kernel.asm	/^c010719e:	eb 27                	jmp    c01071c7 <slob_free+0x66>$/;"	l
c01071a0	obj/kernel.asm	/^c01071a0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071a3	obj/kernel.asm	/^c01071a3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01071a6	obj/kernel.asm	/^c01071a6:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01071a9	obj/kernel.asm	/^c01071a9:	77 13                	ja     c01071be <slob_free+0x5d>$/;"	l
c01071ab	obj/kernel.asm	/^c01071ab:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071ae	obj/kernel.asm	/^c01071ae:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01071b1	obj/kernel.asm	/^c01071b1:	77 27                	ja     c01071da <slob_free+0x79>$/;"	l
c01071b3	obj/kernel.asm	/^c01071b3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071b6	obj/kernel.asm	/^c01071b6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01071b9	obj/kernel.asm	/^c01071b9:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01071bc	obj/kernel.asm	/^c01071bc:	77 1c                	ja     c01071da <slob_free+0x79>$/;"	l
c01071be	obj/kernel.asm	/^c01071be:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071c1	obj/kernel.asm	/^c01071c1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01071c4	obj/kernel.asm	/^c01071c4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01071c7	obj/kernel.asm	/^c01071c7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071ca	obj/kernel.asm	/^c01071ca:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01071cd	obj/kernel.asm	/^c01071cd:	76 d1                	jbe    c01071a0 <slob_free+0x3f>$/;"	l
c01071cf	obj/kernel.asm	/^c01071cf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071d2	obj/kernel.asm	/^c01071d2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01071d5	obj/kernel.asm	/^c01071d5:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01071d8	obj/kernel.asm	/^c01071d8:	76 c6                	jbe    c01071a0 <slob_free+0x3f>$/;"	l
c01071da	obj/kernel.asm	/^c01071da:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071dd	obj/kernel.asm	/^c01071dd:	8b 00                	mov    (%eax),%eax$/;"	l
c01071df	obj/kernel.asm	/^c01071df:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c01071e6	obj/kernel.asm	/^c01071e6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071e9	obj/kernel.asm	/^c01071e9:	01 c2                	add    %eax,%edx$/;"	l
c01071eb	obj/kernel.asm	/^c01071eb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071ee	obj/kernel.asm	/^c01071ee:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01071f1	obj/kernel.asm	/^c01071f1:	39 c2                	cmp    %eax,%edx$/;"	l
c01071f3	obj/kernel.asm	/^c01071f3:	75 25                	jne    c010721a <slob_free+0xb9>$/;"	l
c01071f5	obj/kernel.asm	/^c01071f5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01071f8	obj/kernel.asm	/^c01071f8:	8b 10                	mov    (%eax),%edx$/;"	l
c01071fa	obj/kernel.asm	/^c01071fa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01071fd	obj/kernel.asm	/^c01071fd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107200	obj/kernel.asm	/^c0107200:	8b 00                	mov    (%eax),%eax$/;"	l
c0107202	obj/kernel.asm	/^c0107202:	01 c2                	add    %eax,%edx$/;"	l
c0107204	obj/kernel.asm	/^c0107204:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107207	obj/kernel.asm	/^c0107207:	89 10                	mov    %edx,(%eax)$/;"	l
c0107209	obj/kernel.asm	/^c0107209:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010720c	obj/kernel.asm	/^c010720c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010720f	obj/kernel.asm	/^c010720f:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107212	obj/kernel.asm	/^c0107212:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107215	obj/kernel.asm	/^c0107215:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107218	obj/kernel.asm	/^c0107218:	eb 0c                	jmp    c0107226 <slob_free+0xc5>$/;"	l
c010721a	obj/kernel.asm	/^c010721a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010721d	obj/kernel.asm	/^c010721d:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107220	obj/kernel.asm	/^c0107220:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107223	obj/kernel.asm	/^c0107223:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107226	obj/kernel.asm	/^c0107226:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107229	obj/kernel.asm	/^c0107229:	8b 00                	mov    (%eax),%eax$/;"	l
c010722b	obj/kernel.asm	/^c010722b:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0107232	obj/kernel.asm	/^c0107232:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107235	obj/kernel.asm	/^c0107235:	01 d0                	add    %edx,%eax$/;"	l
c0107237	obj/kernel.asm	/^c0107237:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010723a	obj/kernel.asm	/^c010723a:	75 1f                	jne    c010725b <slob_free+0xfa>$/;"	l
c010723c	obj/kernel.asm	/^c010723c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010723f	obj/kernel.asm	/^c010723f:	8b 10                	mov    (%eax),%edx$/;"	l
c0107241	obj/kernel.asm	/^c0107241:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107244	obj/kernel.asm	/^c0107244:	8b 00                	mov    (%eax),%eax$/;"	l
c0107246	obj/kernel.asm	/^c0107246:	01 c2                	add    %eax,%edx$/;"	l
c0107248	obj/kernel.asm	/^c0107248:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010724b	obj/kernel.asm	/^c010724b:	89 10                	mov    %edx,(%eax)$/;"	l
c010724d	obj/kernel.asm	/^c010724d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107250	obj/kernel.asm	/^c0107250:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107253	obj/kernel.asm	/^c0107253:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107256	obj/kernel.asm	/^c0107256:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107259	obj/kernel.asm	/^c0107259:	eb 09                	jmp    c0107264 <slob_free+0x103>$/;"	l
c010725b	obj/kernel.asm	/^c010725b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010725e	obj/kernel.asm	/^c010725e:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0107261	obj/kernel.asm	/^c0107261:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107264	obj/kernel.asm	/^c0107264:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107267	obj/kernel.asm	/^c0107267:	a3 a0 da 14 c0       	mov    %eax,0xc014daa0$/;"	l
c010726c	obj/kernel.asm	/^c010726c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010726f	obj/kernel.asm	/^c010726f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107272	obj/kernel.asm	/^c0107272:	50                   	push   %eax$/;"	l
c0107273	obj/kernel.asm	/^c0107273:	e8 98 fb ff ff       	call   c0106e10 <__intr_restore>$/;"	l
c0107278	obj/kernel.asm	/^c0107278:	83 c4 10             	add    $0x10,%esp$/;"	l
c010727b	obj/kernel.asm	/^c010727b:	c9                   	leave  $/;"	l
c010727c	obj/kernel.asm	/^c010727c:	c3                   	ret    $/;"	l
c010727d	obj/kernel.asm	/^c010727d <check_slab>:$/;"	l
c010727d	obj/kernel.asm	/^c010727d:	55                   	push   %ebp$/;"	l
c010727e	obj/kernel.asm	/^c010727e:	89 e5                	mov    %esp,%ebp$/;"	l
c0107280	obj/kernel.asm	/^c0107280:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107283	obj/kernel.asm	/^c0107283:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107286	obj/kernel.asm	/^c0107286:	68 62 5a 11 c0       	push   $0xc0115a62$/;"	l
c010728b	obj/kernel.asm	/^c010728b:	e8 da 90 ff ff       	call   c010036a <cprintf>$/;"	l
c0107290	obj/kernel.asm	/^c0107290:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107293	obj/kernel.asm	/^c0107293:	c9                   	leave  $/;"	l
c0107294	obj/kernel.asm	/^c0107294:	c3                   	ret    $/;"	l
c0107295	obj/kernel.asm	/^c0107295 <slab_init>:$/;"	l
c0107295	obj/kernel.asm	/^c0107295:	55                   	push   %ebp$/;"	l
c0107296	obj/kernel.asm	/^c0107296:	89 e5                	mov    %esp,%ebp$/;"	l
c0107298	obj/kernel.asm	/^c0107298:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010729b	obj/kernel.asm	/^c010729b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010729e	obj/kernel.asm	/^c010729e:	68 78 5a 11 c0       	push   $0xc0115a78$/;"	l
c01072a3	obj/kernel.asm	/^c01072a3:	e8 c2 90 ff ff       	call   c010036a <cprintf>$/;"	l
c01072a8	obj/kernel.asm	/^c01072a8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01072ab	obj/kernel.asm	/^c01072ab:	e8 cd ff ff ff       	call   c010727d <check_slab>$/;"	l
c01072b0	obj/kernel.asm	/^c01072b0:	c9                   	leave  $/;"	l
c01072b1	obj/kernel.asm	/^c01072b1:	c3                   	ret    $/;"	l
c01072b2	obj/kernel.asm	/^c01072b2 <kmalloc_init>:$/;"	l
c01072b2	obj/kernel.asm	/^c01072b2:	55                   	push   %ebp$/;"	l
c01072b3	obj/kernel.asm	/^c01072b3:	89 e5                	mov    %esp,%ebp$/;"	l
c01072b5	obj/kernel.asm	/^c01072b5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01072b8	obj/kernel.asm	/^c01072b8:	e8 d8 ff ff ff       	call   c0107295 <slab_init>$/;"	l
c01072bd	obj/kernel.asm	/^c01072bd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01072c0	obj/kernel.asm	/^c01072c0:	68 8c 5a 11 c0       	push   $0xc0115a8c$/;"	l
c01072c5	obj/kernel.asm	/^c01072c5:	e8 a0 90 ff ff       	call   c010036a <cprintf>$/;"	l
c01072ca	obj/kernel.asm	/^c01072ca:	83 c4 10             	add    $0x10,%esp$/;"	l
c01072cd	obj/kernel.asm	/^c01072cd:	c9                   	leave  $/;"	l
c01072ce	obj/kernel.asm	/^c01072ce:	c3                   	ret    $/;"	l
c01072cf	obj/kernel.asm	/^c01072cf <slab_allocated>:$/;"	l
c01072cf	obj/kernel.asm	/^c01072cf:	55                   	push   %ebp$/;"	l
c01072d0	obj/kernel.asm	/^c01072d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01072d2	obj/kernel.asm	/^c01072d2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01072d7	obj/kernel.asm	/^c01072d7:	5d                   	pop    %ebp$/;"	l
c01072d8	obj/kernel.asm	/^c01072d8:	c3                   	ret    $/;"	l
c01072d9	obj/kernel.asm	/^c01072d9 <kallocated>:$/;"	l
c01072d9	obj/kernel.asm	/^c01072d9:	55                   	push   %ebp$/;"	l
c01072da	obj/kernel.asm	/^c01072da:	89 e5                	mov    %esp,%ebp$/;"	l
c01072dc	obj/kernel.asm	/^c01072dc:	e8 ee ff ff ff       	call   c01072cf <slab_allocated>$/;"	l
c01072e1	obj/kernel.asm	/^c01072e1:	5d                   	pop    %ebp$/;"	l
c01072e2	obj/kernel.asm	/^c01072e2:	c3                   	ret    $/;"	l
c01072e3	obj/kernel.asm	/^c01072e3 <find_order>:$/;"	l
c01072e3	obj/kernel.asm	/^c01072e3:	55                   	push   %ebp$/;"	l
c01072e4	obj/kernel.asm	/^c01072e4:	89 e5                	mov    %esp,%ebp$/;"	l
c01072e6	obj/kernel.asm	/^c01072e6:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01072e9	obj/kernel.asm	/^c01072e9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c01072f0	obj/kernel.asm	/^c01072f0:	eb 07                	jmp    c01072f9 <find_order+0x16>$/;"	l
c01072f2	obj/kernel.asm	/^c01072f2:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c01072f6	obj/kernel.asm	/^c01072f6:	d1 7d 08             	sarl   0x8(%ebp)$/;"	d
c01072f9	obj/kernel.asm	/^c01072f9:	81 7d 08 00 10 00 00 	cmpl   $0x1000,0x8(%ebp)$/;"	l
c0107300	obj/kernel.asm	/^c0107300:	7f f0                	jg     c01072f2 <find_order+0xf>$/;"	l
c0107302	obj/kernel.asm	/^c0107302:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107305	obj/kernel.asm	/^c0107305:	c9                   	leave  $/;"	l
c0107306	obj/kernel.asm	/^c0107306:	c3                   	ret    $/;"	l
c0107307	obj/kernel.asm	/^c0107307 <__kmalloc>:$/;"	l
c0107307	obj/kernel.asm	/^c0107307:	55                   	push   %ebp$/;"	l
c0107308	obj/kernel.asm	/^c0107308:	89 e5                	mov    %esp,%ebp$/;"	l
c010730a	obj/kernel.asm	/^c010730a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010730d	obj/kernel.asm	/^c010730d:	81 7d 08 f7 0f 00 00 	cmpl   $0xff7,0x8(%ebp)$/;"	l
c0107314	obj/kernel.asm	/^c0107314:	77 35                	ja     c010734b <__kmalloc+0x44>$/;"	l
c0107316	obj/kernel.asm	/^c0107316:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107319	obj/kernel.asm	/^c0107319:	83 c0 08             	add    $0x8,%eax$/;"	l
c010731c	obj/kernel.asm	/^c010731c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010731f	obj/kernel.asm	/^c010731f:	6a 00                	push   $0x0$/;"	l
c0107321	obj/kernel.asm	/^c0107321:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0107324	obj/kernel.asm	/^c0107324:	50                   	push   %eax$/;"	l
c0107325	obj/kernel.asm	/^c0107325:	e8 68 fc ff ff       	call   c0106f92 <slob_alloc>$/;"	l
c010732a	obj/kernel.asm	/^c010732a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010732d	obj/kernel.asm	/^c010732d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107330	obj/kernel.asm	/^c0107330:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107334	obj/kernel.asm	/^c0107334:	74 0b                	je     c0107341 <__kmalloc+0x3a>$/;"	l
c0107336	obj/kernel.asm	/^c0107336:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107339	obj/kernel.asm	/^c0107339:	83 c0 08             	add    $0x8,%eax$/;"	l
c010733c	obj/kernel.asm	/^c010733c:	e9 b3 00 00 00       	jmp    c01073f4 <__kmalloc+0xed>$/;"	l
c0107341	obj/kernel.asm	/^c0107341:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107346	obj/kernel.asm	/^c0107346:	e9 a9 00 00 00       	jmp    c01073f4 <__kmalloc+0xed>$/;"	l
c010734b	obj/kernel.asm	/^c010734b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010734e	obj/kernel.asm	/^c010734e:	6a 00                	push   $0x0$/;"	l
c0107350	obj/kernel.asm	/^c0107350:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0107353	obj/kernel.asm	/^c0107353:	6a 0c                	push   $0xc$/;"	l
c0107355	obj/kernel.asm	/^c0107355:	e8 38 fc ff ff       	call   c0106f92 <slob_alloc>$/;"	l
c010735a	obj/kernel.asm	/^c010735a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010735d	obj/kernel.asm	/^c010735d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107360	obj/kernel.asm	/^c0107360:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0107364	obj/kernel.asm	/^c0107364:	75 0a                	jne    c0107370 <__kmalloc+0x69>$/;"	l
c0107366	obj/kernel.asm	/^c0107366:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010736b	obj/kernel.asm	/^c010736b:	e9 84 00 00 00       	jmp    c01073f4 <__kmalloc+0xed>$/;"	l
c0107370	obj/kernel.asm	/^c0107370:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107373	obj/kernel.asm	/^c0107373:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107376	obj/kernel.asm	/^c0107376:	50                   	push   %eax$/;"	l
c0107377	obj/kernel.asm	/^c0107377:	e8 67 ff ff ff       	call   c01072e3 <find_order>$/;"	l
c010737c	obj/kernel.asm	/^c010737c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010737f	obj/kernel.asm	/^c010737f:	89 c2                	mov    %eax,%edx$/;"	l
c0107381	obj/kernel.asm	/^c0107381:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107384	obj/kernel.asm	/^c0107384:	89 10                	mov    %edx,(%eax)$/;"	l
c0107386	obj/kernel.asm	/^c0107386:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107389	obj/kernel.asm	/^c0107389:	8b 00                	mov    (%eax),%eax$/;"	l
c010738b	obj/kernel.asm	/^c010738b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010738e	obj/kernel.asm	/^c010738e:	50                   	push   %eax$/;"	l
c010738f	obj/kernel.asm	/^c010738f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0107392	obj/kernel.asm	/^c0107392:	e8 83 fb ff ff       	call   c0106f1a <__slob_get_free_pages>$/;"	l
c0107397	obj/kernel.asm	/^c0107397:	83 c4 10             	add    $0x10,%esp$/;"	l
c010739a	obj/kernel.asm	/^c010739a:	89 c2                	mov    %eax,%edx$/;"	l
c010739c	obj/kernel.asm	/^c010739c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010739f	obj/kernel.asm	/^c010739f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01073a2	obj/kernel.asm	/^c01073a2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01073a5	obj/kernel.asm	/^c01073a5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01073a8	obj/kernel.asm	/^c01073a8:	85 c0                	test   %eax,%eax$/;"	l
c01073aa	obj/kernel.asm	/^c01073aa:	74 33                	je     c01073df <__kmalloc+0xd8>$/;"	l
c01073ac	obj/kernel.asm	/^c01073ac:	e8 35 fa ff ff       	call   c0106de6 <__intr_save>$/;"	l
c01073b1	obj/kernel.asm	/^c01073b1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01073b4	obj/kernel.asm	/^c01073b4:	8b 15 7c f0 14 c0    	mov    0xc014f07c,%edx$/;"	l
c01073ba	obj/kernel.asm	/^c01073ba:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01073bd	obj/kernel.asm	/^c01073bd:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01073c0	obj/kernel.asm	/^c01073c0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01073c3	obj/kernel.asm	/^c01073c3:	a3 7c f0 14 c0       	mov    %eax,0xc014f07c$/;"	l
c01073c8	obj/kernel.asm	/^c01073c8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01073cb	obj/kernel.asm	/^c01073cb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01073ce	obj/kernel.asm	/^c01073ce:	50                   	push   %eax$/;"	l
c01073cf	obj/kernel.asm	/^c01073cf:	e8 3c fa ff ff       	call   c0106e10 <__intr_restore>$/;"	l
c01073d4	obj/kernel.asm	/^c01073d4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01073d7	obj/kernel.asm	/^c01073d7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01073da	obj/kernel.asm	/^c01073da:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01073dd	obj/kernel.asm	/^c01073dd:	eb 15                	jmp    c01073f4 <__kmalloc+0xed>$/;"	l
c01073df	obj/kernel.asm	/^c01073df:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01073e2	obj/kernel.asm	/^c01073e2:	6a 0c                	push   $0xc$/;"	l
c01073e4	obj/kernel.asm	/^c01073e4:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01073e7	obj/kernel.asm	/^c01073e7:	e8 75 fd ff ff       	call   c0107161 <slob_free>$/;"	l
c01073ec	obj/kernel.asm	/^c01073ec:	83 c4 10             	add    $0x10,%esp$/;"	l
c01073ef	obj/kernel.asm	/^c01073ef:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01073f4	obj/kernel.asm	/^c01073f4:	c9                   	leave  $/;"	l
c01073f5	obj/kernel.asm	/^c01073f5:	c3                   	ret    $/;"	l
c01073f6	obj/kernel.asm	/^c01073f6 <kmalloc>:$/;"	l
c01073f6	obj/kernel.asm	/^c01073f6:	55                   	push   %ebp$/;"	l
c01073f7	obj/kernel.asm	/^c01073f7:	89 e5                	mov    %esp,%ebp$/;"	l
c01073f9	obj/kernel.asm	/^c01073f9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01073fc	obj/kernel.asm	/^c01073fc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01073ff	obj/kernel.asm	/^c01073ff:	6a 00                	push   $0x0$/;"	l
c0107401	obj/kernel.asm	/^c0107401:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0107404	obj/kernel.asm	/^c0107404:	e8 fe fe ff ff       	call   c0107307 <__kmalloc>$/;"	l
c0107409	obj/kernel.asm	/^c0107409:	83 c4 10             	add    $0x10,%esp$/;"	l
c010740c	obj/kernel.asm	/^c010740c:	c9                   	leave  $/;"	l
c010740d	obj/kernel.asm	/^c010740d:	c3                   	ret    $/;"	l
c010740e	obj/kernel.asm	/^c010740e <kfree>:$/;"	l
c010740e	obj/kernel.asm	/^c010740e:	55                   	push   %ebp$/;"	l
c010740f	obj/kernel.asm	/^c010740f:	89 e5                	mov    %esp,%ebp$/;"	l
c0107411	obj/kernel.asm	/^c0107411:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0107414	obj/kernel.asm	/^c0107414:	c7 45 f0 7c f0 14 c0 	movl   $0xc014f07c,-0x10(%ebp)$/;"	l
c010741b	obj/kernel.asm	/^c010741b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010741f	obj/kernel.asm	/^c010741f:	75 05                	jne    c0107426 <kfree+0x18>$/;"	l
c0107421	obj/kernel.asm	/^c0107421:	e9 aa 00 00 00       	jmp    c01074d0 <kfree+0xc2>$/;"	l
c0107426	obj/kernel.asm	/^c0107426:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107429	obj/kernel.asm	/^c0107429:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c010742e	obj/kernel.asm	/^c010742e:	85 c0                	test   %eax,%eax$/;"	l
c0107430	obj/kernel.asm	/^c0107430:	0f 85 85 00 00 00    	jne    c01074bb <kfree+0xad>$/;"	l
c0107436	obj/kernel.asm	/^c0107436:	e8 ab f9 ff ff       	call   c0106de6 <__intr_save>$/;"	l
c010743b	obj/kernel.asm	/^c010743b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010743e	obj/kernel.asm	/^c010743e:	a1 7c f0 14 c0       	mov    0xc014f07c,%eax$/;"	l
c0107443	obj/kernel.asm	/^c0107443:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107446	obj/kernel.asm	/^c0107446:	eb 5e                	jmp    c01074a6 <kfree+0x98>$/;"	l
c0107448	obj/kernel.asm	/^c0107448:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010744b	obj/kernel.asm	/^c010744b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010744e	obj/kernel.asm	/^c010744e:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107451	obj/kernel.asm	/^c0107451:	75 41                	jne    c0107494 <kfree+0x86>$/;"	l
c0107453	obj/kernel.asm	/^c0107453:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107456	obj/kernel.asm	/^c0107456:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107459	obj/kernel.asm	/^c0107459:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010745c	obj/kernel.asm	/^c010745c:	89 10                	mov    %edx,(%eax)$/;"	l
c010745e	obj/kernel.asm	/^c010745e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107461	obj/kernel.asm	/^c0107461:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107464	obj/kernel.asm	/^c0107464:	50                   	push   %eax$/;"	l
c0107465	obj/kernel.asm	/^c0107465:	e8 a6 f9 ff ff       	call   c0106e10 <__intr_restore>$/;"	l
c010746a	obj/kernel.asm	/^c010746a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010746d	obj/kernel.asm	/^c010746d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107470	obj/kernel.asm	/^c0107470:	8b 10                	mov    (%eax),%edx$/;"	l
c0107472	obj/kernel.asm	/^c0107472:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107475	obj/kernel.asm	/^c0107475:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107478	obj/kernel.asm	/^c0107478:	52                   	push   %edx$/;"	l
c0107479	obj/kernel.asm	/^c0107479:	50                   	push   %eax$/;"	l
c010747a	obj/kernel.asm	/^c010747a:	e8 db fa ff ff       	call   c0106f5a <__slob_free_pages>$/;"	l
c010747f	obj/kernel.asm	/^c010747f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107482	obj/kernel.asm	/^c0107482:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107485	obj/kernel.asm	/^c0107485:	6a 0c                	push   $0xc$/;"	l
c0107487	obj/kernel.asm	/^c0107487:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010748a	obj/kernel.asm	/^c010748a:	e8 d2 fc ff ff       	call   c0107161 <slob_free>$/;"	l
c010748f	obj/kernel.asm	/^c010748f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107492	obj/kernel.asm	/^c0107492:	eb 3c                	jmp    c01074d0 <kfree+0xc2>$/;"	l
c0107494	obj/kernel.asm	/^c0107494:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107497	obj/kernel.asm	/^c0107497:	83 c0 08             	add    $0x8,%eax$/;"	l
c010749a	obj/kernel.asm	/^c010749a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010749d	obj/kernel.asm	/^c010749d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01074a0	obj/kernel.asm	/^c01074a0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01074a3	obj/kernel.asm	/^c01074a3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01074a6	obj/kernel.asm	/^c01074a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01074aa	obj/kernel.asm	/^c01074aa:	75 9c                	jne    c0107448 <kfree+0x3a>$/;"	l
c01074ac	obj/kernel.asm	/^c01074ac:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01074af	obj/kernel.asm	/^c01074af:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01074b2	obj/kernel.asm	/^c01074b2:	50                   	push   %eax$/;"	l
c01074b3	obj/kernel.asm	/^c01074b3:	e8 58 f9 ff ff       	call   c0106e10 <__intr_restore>$/;"	l
c01074b8	obj/kernel.asm	/^c01074b8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01074bb	obj/kernel.asm	/^c01074bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01074be	obj/kernel.asm	/^c01074be:	83 e8 08             	sub    $0x8,%eax$/;"	l
c01074c1	obj/kernel.asm	/^c01074c1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01074c4	obj/kernel.asm	/^c01074c4:	6a 00                	push   $0x0$/;"	l
c01074c6	obj/kernel.asm	/^c01074c6:	50                   	push   %eax$/;"	l
c01074c7	obj/kernel.asm	/^c01074c7:	e8 95 fc ff ff       	call   c0107161 <slob_free>$/;"	l
c01074cc	obj/kernel.asm	/^c01074cc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01074cf	obj/kernel.asm	/^c01074cf:	90                   	nop$/;"	l
c01074d0	obj/kernel.asm	/^c01074d0:	c9                   	leave  $/;"	l
c01074d1	obj/kernel.asm	/^c01074d1:	c3                   	ret    $/;"	l
c01074d2	obj/kernel.asm	/^c01074d2 <ksize>:$/;"	l
c01074d2	obj/kernel.asm	/^c01074d2:	55                   	push   %ebp$/;"	l
c01074d3	obj/kernel.asm	/^c01074d3:	89 e5                	mov    %esp,%ebp$/;"	l
c01074d5	obj/kernel.asm	/^c01074d5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01074d8	obj/kernel.asm	/^c01074d8:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01074dc	obj/kernel.asm	/^c01074dc:	75 07                	jne    c01074e5 <ksize+0x13>$/;"	l
c01074de	obj/kernel.asm	/^c01074de:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01074e3	obj/kernel.asm	/^c01074e3:	eb 73                	jmp    c0107558 <ksize+0x86>$/;"	l
c01074e5	obj/kernel.asm	/^c01074e5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01074e8	obj/kernel.asm	/^c01074e8:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c01074ed	obj/kernel.asm	/^c01074ed:	85 c0                	test   %eax,%eax$/;"	l
c01074ef	obj/kernel.asm	/^c01074ef:	75 5c                	jne    c010754d <ksize+0x7b>$/;"	l
c01074f1	obj/kernel.asm	/^c01074f1:	e8 f0 f8 ff ff       	call   c0106de6 <__intr_save>$/;"	l
c01074f6	obj/kernel.asm	/^c01074f6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01074f9	obj/kernel.asm	/^c01074f9:	a1 7c f0 14 c0       	mov    0xc014f07c,%eax$/;"	l
c01074fe	obj/kernel.asm	/^c01074fe:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107501	obj/kernel.asm	/^c0107501:	eb 35                	jmp    c0107538 <ksize+0x66>$/;"	l
c0107503	obj/kernel.asm	/^c0107503:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107506	obj/kernel.asm	/^c0107506:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107509	obj/kernel.asm	/^c0107509:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010750c	obj/kernel.asm	/^c010750c:	75 21                	jne    c010752f <ksize+0x5d>$/;"	l
c010750e	obj/kernel.asm	/^c010750e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107511	obj/kernel.asm	/^c0107511:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107514	obj/kernel.asm	/^c0107514:	50                   	push   %eax$/;"	l
c0107515	obj/kernel.asm	/^c0107515:	e8 f6 f8 ff ff       	call   c0106e10 <__intr_restore>$/;"	l
c010751a	obj/kernel.asm	/^c010751a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010751d	obj/kernel.asm	/^c010751d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107520	obj/kernel.asm	/^c0107520:	8b 00                	mov    (%eax),%eax$/;"	l
c0107522	obj/kernel.asm	/^c0107522:	ba 00 10 00 00       	mov    $0x1000,%edx$/;"	l
c0107527	obj/kernel.asm	/^c0107527:	89 c1                	mov    %eax,%ecx$/;"	l
c0107529	obj/kernel.asm	/^c0107529:	d3 e2                	shl    %cl,%edx$/;"	d
c010752b	obj/kernel.asm	/^c010752b:	89 d0                	mov    %edx,%eax$/;"	l
c010752d	obj/kernel.asm	/^c010752d:	eb 29                	jmp    c0107558 <ksize+0x86>$/;"	l
c010752f	obj/kernel.asm	/^c010752f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107532	obj/kernel.asm	/^c0107532:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107535	obj/kernel.asm	/^c0107535:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107538	obj/kernel.asm	/^c0107538:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010753c	obj/kernel.asm	/^c010753c:	75 c5                	jne    c0107503 <ksize+0x31>$/;"	l
c010753e	obj/kernel.asm	/^c010753e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107541	obj/kernel.asm	/^c0107541:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107544	obj/kernel.asm	/^c0107544:	50                   	push   %eax$/;"	l
c0107545	obj/kernel.asm	/^c0107545:	e8 c6 f8 ff ff       	call   c0106e10 <__intr_restore>$/;"	l
c010754a	obj/kernel.asm	/^c010754a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010754d	obj/kernel.asm	/^c010754d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107550	obj/kernel.asm	/^c0107550:	83 e8 08             	sub    $0x8,%eax$/;"	l
c0107553	obj/kernel.asm	/^c0107553:	8b 00                	mov    (%eax),%eax$/;"	l
c0107555	obj/kernel.asm	/^c0107555:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0107558	obj/kernel.asm	/^c0107558:	c9                   	leave  $/;"	l
c0107559	obj/kernel.asm	/^c0107559:	c3                   	ret    $/;"	l
c010755a	obj/kernel.asm	/^c010755a <_fifo_init_mm>:$/;"	l
c010755a	obj/kernel.asm	/^c010755a:	55                   	push   %ebp$/;"	l
c010755b	obj/kernel.asm	/^c010755b:	89 e5                	mov    %esp,%ebp$/;"	l
c010755d	obj/kernel.asm	/^c010755d:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0107560	obj/kernel.asm	/^c0107560:	c7 45 fc 84 22 15 c0 	movl   $0xc0152284,-0x4(%ebp)$/;"	l
c0107567	obj/kernel.asm	/^c0107567:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010756a	obj/kernel.asm	/^c010756a:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010756d	obj/kernel.asm	/^c010756d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107570	obj/kernel.asm	/^c0107570:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107573	obj/kernel.asm	/^c0107573:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0107576	obj/kernel.asm	/^c0107576:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107579	obj/kernel.asm	/^c0107579:	89 10                	mov    %edx,(%eax)$/;"	l
c010757b	obj/kernel.asm	/^c010757b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010757e	obj/kernel.asm	/^c010757e:	c7 40 14 84 22 15 c0 	movl   $0xc0152284,0x14(%eax)$/;"	l
c0107585	obj/kernel.asm	/^c0107585:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010758a	obj/kernel.asm	/^c010758a:	c9                   	leave  $/;"	l
c010758b	obj/kernel.asm	/^c010758b:	c3                   	ret    $/;"	l
c010758c	obj/kernel.asm	/^c010758c <_fifo_map_swappable>:$/;"	l
c010758c	obj/kernel.asm	/^c010758c:	55                   	push   %ebp$/;"	l
c010758d	obj/kernel.asm	/^c010758d:	89 e5                	mov    %esp,%ebp$/;"	l
c010758f	obj/kernel.asm	/^c010758f:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0107592	obj/kernel.asm	/^c0107592:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107595	obj/kernel.asm	/^c0107595:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c0107598	obj/kernel.asm	/^c0107598:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010759b	obj/kernel.asm	/^c010759b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010759e	obj/kernel.asm	/^c010759e:	83 c0 18             	add    $0x18,%eax$/;"	l
c01075a1	obj/kernel.asm	/^c01075a1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01075a4	obj/kernel.asm	/^c01075a4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01075a8	obj/kernel.asm	/^c01075a8:	74 06                	je     c01075b0 <_fifo_map_swappable+0x24>$/;"	l
c01075aa	obj/kernel.asm	/^c01075aa:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01075ae	obj/kernel.asm	/^c01075ae:	75 16                	jne    c01075c6 <_fifo_map_swappable+0x3a>$/;"	l
c01075b0	obj/kernel.asm	/^c01075b0:	68 a8 5a 11 c0       	push   $0xc0115aa8$/;"	l
c01075b5	obj/kernel.asm	/^c01075b5:	68 c6 5a 11 c0       	push   $0xc0115ac6$/;"	l
c01075ba	obj/kernel.asm	/^c01075ba:	6a 32                	push   $0x32$/;"	l
c01075bc	obj/kernel.asm	/^c01075bc:	68 db 5a 11 c0       	push   $0xc0115adb$/;"	l
c01075c1	obj/kernel.asm	/^c01075c1:	e8 09 8f ff ff       	call   c01004cf <__panic>$/;"	l
c01075c6	obj/kernel.asm	/^c01075c6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01075c9	obj/kernel.asm	/^c01075c9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01075cc	obj/kernel.asm	/^c01075cc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01075cf	obj/kernel.asm	/^c01075cf:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01075d2	obj/kernel.asm	/^c01075d2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01075d5	obj/kernel.asm	/^c01075d5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01075d8	obj/kernel.asm	/^c01075d8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01075db	obj/kernel.asm	/^c01075db:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01075de	obj/kernel.asm	/^c01075de:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01075e1	obj/kernel.asm	/^c01075e1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01075e4	obj/kernel.asm	/^c01075e4:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01075e7	obj/kernel.asm	/^c01075e7:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
c01075ea	obj/kernel.asm	/^c01075ea:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01075ed	obj/kernel.asm	/^c01075ed:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c01075f0	obj/kernel.asm	/^c01075f0:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01075f3	obj/kernel.asm	/^c01075f3:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01075f6	obj/kernel.asm	/^c01075f6:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01075f9	obj/kernel.asm	/^c01075f9:	89 10                	mov    %edx,(%eax)$/;"	l
c01075fb	obj/kernel.asm	/^c01075fb:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01075fe	obj/kernel.asm	/^c01075fe:	8b 10                	mov    (%eax),%edx$/;"	l
c0107600	obj/kernel.asm	/^c0107600:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0107603	obj/kernel.asm	/^c0107603:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107606	obj/kernel.asm	/^c0107606:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107609	obj/kernel.asm	/^c0107609:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010760c	obj/kernel.asm	/^c010760c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010760f	obj/kernel.asm	/^c010760f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107612	obj/kernel.asm	/^c0107612:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107615	obj/kernel.asm	/^c0107615:	89 10                	mov    %edx,(%eax)$/;"	l
c0107617	obj/kernel.asm	/^c0107617:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010761c	obj/kernel.asm	/^c010761c:	c9                   	leave  $/;"	l
c010761d	obj/kernel.asm	/^c010761d:	c3                   	ret    $/;"	l
c010761e	obj/kernel.asm	/^c010761e <_fifo_swap_out_victim>:$/;"	l
c010761e	obj/kernel.asm	/^c010761e:	55                   	push   %ebp$/;"	l
c010761f	obj/kernel.asm	/^c010761f:	89 e5                	mov    %esp,%ebp$/;"	l
c0107621	obj/kernel.asm	/^c0107621:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0107624	obj/kernel.asm	/^c0107624:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107627	obj/kernel.asm	/^c0107627:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010762a	obj/kernel.asm	/^c010762a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010762d	obj/kernel.asm	/^c010762d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107631	obj/kernel.asm	/^c0107631:	75 16                	jne    c0107649 <_fifo_swap_out_victim+0x2b>$/;"	l
c0107633	obj/kernel.asm	/^c0107633:	68 ef 5a 11 c0       	push   $0xc0115aef$/;"	l
c0107638	obj/kernel.asm	/^c0107638:	68 c6 5a 11 c0       	push   $0xc0115ac6$/;"	l
c010763d	obj/kernel.asm	/^c010763d:	6a 41                	push   $0x41$/;"	l
c010763f	obj/kernel.asm	/^c010763f:	68 db 5a 11 c0       	push   $0xc0115adb$/;"	l
c0107644	obj/kernel.asm	/^c0107644:	e8 86 8e ff ff       	call   c01004cf <__panic>$/;"	l
c0107649	obj/kernel.asm	/^c0107649:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010764d	obj/kernel.asm	/^c010764d:	74 16                	je     c0107665 <_fifo_swap_out_victim+0x47>$/;"	l
c010764f	obj/kernel.asm	/^c010764f:	68 fc 5a 11 c0       	push   $0xc0115afc$/;"	l
c0107654	obj/kernel.asm	/^c0107654:	68 c6 5a 11 c0       	push   $0xc0115ac6$/;"	l
c0107659	obj/kernel.asm	/^c0107659:	6a 42                	push   $0x42$/;"	l
c010765b	obj/kernel.asm	/^c010765b:	68 db 5a 11 c0       	push   $0xc0115adb$/;"	l
c0107660	obj/kernel.asm	/^c0107660:	e8 6a 8e ff ff       	call   c01004cf <__panic>$/;"	l
c0107665	obj/kernel.asm	/^c0107665:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107668	obj/kernel.asm	/^c0107668:	8b 00                	mov    (%eax),%eax$/;"	l
c010766a	obj/kernel.asm	/^c010766a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010766d	obj/kernel.asm	/^c010766d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107670	obj/kernel.asm	/^c0107670:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0107673	obj/kernel.asm	/^c0107673:	75 16                	jne    c010768b <_fifo_swap_out_victim+0x6d>$/;"	l
c0107675	obj/kernel.asm	/^c0107675:	68 07 5b 11 c0       	push   $0xc0115b07$/;"	l
c010767a	obj/kernel.asm	/^c010767a:	68 c6 5a 11 c0       	push   $0xc0115ac6$/;"	l
c010767f	obj/kernel.asm	/^c010767f:	6a 49                	push   $0x49$/;"	l
c0107681	obj/kernel.asm	/^c0107681:	68 db 5a 11 c0       	push   $0xc0115adb$/;"	l
c0107686	obj/kernel.asm	/^c0107686:	e8 44 8e ff ff       	call   c01004cf <__panic>$/;"	l
c010768b	obj/kernel.asm	/^c010768b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010768e	obj/kernel.asm	/^c010768e:	83 e8 18             	sub    $0x18,%eax$/;"	l
c0107691	obj/kernel.asm	/^c0107691:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107694	obj/kernel.asm	/^c0107694:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107697	obj/kernel.asm	/^c0107697:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010769a	obj/kernel.asm	/^c010769a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010769d	obj/kernel.asm	/^c010769d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01076a0	obj/kernel.asm	/^c01076a0:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01076a3	obj/kernel.asm	/^c01076a3:	8b 12                	mov    (%edx),%edx$/;"	l
c01076a5	obj/kernel.asm	/^c01076a5:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c01076a8	obj/kernel.asm	/^c01076a8:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01076ab	obj/kernel.asm	/^c01076ab:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01076ae	obj/kernel.asm	/^c01076ae:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c01076b1	obj/kernel.asm	/^c01076b1:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c01076b4	obj/kernel.asm	/^c01076b4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01076b7	obj/kernel.asm	/^c01076b7:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c01076ba	obj/kernel.asm	/^c01076ba:	89 10                	mov    %edx,(%eax)$/;"	l
c01076bc	obj/kernel.asm	/^c01076bc:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01076c0	obj/kernel.asm	/^c01076c0:	75 16                	jne    c01076d8 <_fifo_swap_out_victim+0xba>$/;"	l
c01076c2	obj/kernel.asm	/^c01076c2:	68 10 5b 11 c0       	push   $0xc0115b10$/;"	l
c01076c7	obj/kernel.asm	/^c01076c7:	68 c6 5a 11 c0       	push   $0xc0115ac6$/;"	l
c01076cc	obj/kernel.asm	/^c01076cc:	6a 4c                	push   $0x4c$/;"	l
c01076ce	obj/kernel.asm	/^c01076ce:	68 db 5a 11 c0       	push   $0xc0115adb$/;"	l
c01076d3	obj/kernel.asm	/^c01076d3:	e8 f7 8d ff ff       	call   c01004cf <__panic>$/;"	l
c01076d8	obj/kernel.asm	/^c01076d8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01076db	obj/kernel.asm	/^c01076db:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01076de	obj/kernel.asm	/^c01076de:	89 10                	mov    %edx,(%eax)$/;"	l
c01076e0	obj/kernel.asm	/^c01076e0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01076e5	obj/kernel.asm	/^c01076e5:	c9                   	leave  $/;"	l
c01076e6	obj/kernel.asm	/^c01076e6:	c3                   	ret    $/;"	l
c01076e7	obj/kernel.asm	/^c01076e7 <_fifo_check_swap>:$/;"	l
c01076e7	obj/kernel.asm	/^c01076e7:	55                   	push   %ebp$/;"	l
c01076e8	obj/kernel.asm	/^c01076e8:	89 e5                	mov    %esp,%ebp$/;"	l
c01076ea	obj/kernel.asm	/^c01076ea:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01076ed	obj/kernel.asm	/^c01076ed:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01076f0	obj/kernel.asm	/^c01076f0:	68 1c 5b 11 c0       	push   $0xc0115b1c$/;"	l
c01076f5	obj/kernel.asm	/^c01076f5:	e8 70 8c ff ff       	call   c010036a <cprintf>$/;"	l
c01076fa	obj/kernel.asm	/^c01076fa:	83 c4 10             	add    $0x10,%esp$/;"	l
c01076fd	obj/kernel.asm	/^c01076fd:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c0107702	obj/kernel.asm	/^c0107702:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c0107705	obj/kernel.asm	/^c0107705:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c010770a	obj/kernel.asm	/^c010770a:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c010770d	obj/kernel.asm	/^c010770d:	74 16                	je     c0107725 <_fifo_check_swap+0x3e>$/;"	l
c010770f	obj/kernel.asm	/^c010770f:	68 42 5b 11 c0       	push   $0xc0115b42$/;"	l
c0107714	obj/kernel.asm	/^c0107714:	68 c6 5a 11 c0       	push   $0xc0115ac6$/;"	l
c0107719	obj/kernel.asm	/^c0107719:	6a 55                	push   $0x55$/;"	l
c010771b	obj/kernel.asm	/^c010771b:	68 db 5a 11 c0       	push   $0xc0115adb$/;"	l
c0107720	obj/kernel.asm	/^c0107720:	e8 aa 8d ff ff       	call   c01004cf <__panic>$/;"	l
c0107725	obj/kernel.asm	/^c0107725:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107728	obj/kernel.asm	/^c0107728:	68 54 5b 11 c0       	push   $0xc0115b54$/;"	l
c010772d	obj/kernel.asm	/^c010772d:	e8 38 8c ff ff       	call   c010036a <cprintf>$/;"	l
c0107732	obj/kernel.asm	/^c0107732:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107735	obj/kernel.asm	/^c0107735:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010773a	obj/kernel.asm	/^c010773a:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c010773d	obj/kernel.asm	/^c010773d:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c0107742	obj/kernel.asm	/^c0107742:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c0107745	obj/kernel.asm	/^c0107745:	74 16                	je     c010775d <_fifo_check_swap+0x76>$/;"	l
c0107747	obj/kernel.asm	/^c0107747:	68 42 5b 11 c0       	push   $0xc0115b42$/;"	l
c010774c	obj/kernel.asm	/^c010774c:	68 c6 5a 11 c0       	push   $0xc0115ac6$/;"	l
c0107751	obj/kernel.asm	/^c0107751:	6a 58                	push   $0x58$/;"	l
c0107753	obj/kernel.asm	/^c0107753:	68 db 5a 11 c0       	push   $0xc0115adb$/;"	l
c0107758	obj/kernel.asm	/^c0107758:	e8 72 8d ff ff       	call   c01004cf <__panic>$/;"	l
c010775d	obj/kernel.asm	/^c010775d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107760	obj/kernel.asm	/^c0107760:	68 7c 5b 11 c0       	push   $0xc0115b7c$/;"	l
c0107765	obj/kernel.asm	/^c0107765:	e8 00 8c ff ff       	call   c010036a <cprintf>$/;"	l
c010776a	obj/kernel.asm	/^c010776a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010776d	obj/kernel.asm	/^c010776d:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c0107772	obj/kernel.asm	/^c0107772:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c0107775	obj/kernel.asm	/^c0107775:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c010777a	obj/kernel.asm	/^c010777a:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c010777d	obj/kernel.asm	/^c010777d:	74 16                	je     c0107795 <_fifo_check_swap+0xae>$/;"	l
c010777f	obj/kernel.asm	/^c010777f:	68 42 5b 11 c0       	push   $0xc0115b42$/;"	l
c0107784	obj/kernel.asm	/^c0107784:	68 c6 5a 11 c0       	push   $0xc0115ac6$/;"	l
c0107789	obj/kernel.asm	/^c0107789:	6a 5b                	push   $0x5b$/;"	l
c010778b	obj/kernel.asm	/^c010778b:	68 db 5a 11 c0       	push   $0xc0115adb$/;"	l
c0107790	obj/kernel.asm	/^c0107790:	e8 3a 8d ff ff       	call   c01004cf <__panic>$/;"	l
c0107795	obj/kernel.asm	/^c0107795:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107798	obj/kernel.asm	/^c0107798:	68 a4 5b 11 c0       	push   $0xc0115ba4$/;"	l
c010779d	obj/kernel.asm	/^c010779d:	e8 c8 8b ff ff       	call   c010036a <cprintf>$/;"	l
c01077a2	obj/kernel.asm	/^c01077a2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01077a5	obj/kernel.asm	/^c01077a5:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c01077aa	obj/kernel.asm	/^c01077aa:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c01077ad	obj/kernel.asm	/^c01077ad:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c01077b2	obj/kernel.asm	/^c01077b2:	83 f8 04             	cmp    $0x4,%eax$/;"	l
c01077b5	obj/kernel.asm	/^c01077b5:	74 16                	je     c01077cd <_fifo_check_swap+0xe6>$/;"	l
c01077b7	obj/kernel.asm	/^c01077b7:	68 42 5b 11 c0       	push   $0xc0115b42$/;"	l
c01077bc	obj/kernel.asm	/^c01077bc:	68 c6 5a 11 c0       	push   $0xc0115ac6$/;"	l
c01077c1	obj/kernel.asm	/^c01077c1:	6a 5e                	push   $0x5e$/;"	l
c01077c3	obj/kernel.asm	/^c01077c3:	68 db 5a 11 c0       	push   $0xc0115adb$/;"	l
c01077c8	obj/kernel.asm	/^c01077c8:	e8 02 8d ff ff       	call   c01004cf <__panic>$/;"	l
c01077cd	obj/kernel.asm	/^c01077cd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01077d0	obj/kernel.asm	/^c01077d0:	68 cc 5b 11 c0       	push   $0xc0115bcc$/;"	l
c01077d5	obj/kernel.asm	/^c01077d5:	e8 90 8b ff ff       	call   c010036a <cprintf>$/;"	l
c01077da	obj/kernel.asm	/^c01077da:	83 c4 10             	add    $0x10,%esp$/;"	l
c01077dd	obj/kernel.asm	/^c01077dd:	b8 00 50 00 00       	mov    $0x5000,%eax$/;"	l
c01077e2	obj/kernel.asm	/^c01077e2:	c6 00 0e             	movb   $0xe,(%eax)$/;"	l
c01077e5	obj/kernel.asm	/^c01077e5:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c01077ea	obj/kernel.asm	/^c01077ea:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c01077ed	obj/kernel.asm	/^c01077ed:	74 16                	je     c0107805 <_fifo_check_swap+0x11e>$/;"	l
c01077ef	obj/kernel.asm	/^c01077ef:	68 f2 5b 11 c0       	push   $0xc0115bf2$/;"	l
c01077f4	obj/kernel.asm	/^c01077f4:	68 c6 5a 11 c0       	push   $0xc0115ac6$/;"	l
c01077f9	obj/kernel.asm	/^c01077f9:	6a 61                	push   $0x61$/;"	l
c01077fb	obj/kernel.asm	/^c01077fb:	68 db 5a 11 c0       	push   $0xc0115adb$/;"	l
c0107800	obj/kernel.asm	/^c0107800:	e8 ca 8c ff ff       	call   c01004cf <__panic>$/;"	l
c0107805	obj/kernel.asm	/^c0107805:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107808	obj/kernel.asm	/^c0107808:	68 a4 5b 11 c0       	push   $0xc0115ba4$/;"	l
c010780d	obj/kernel.asm	/^c010780d:	e8 58 8b ff ff       	call   c010036a <cprintf>$/;"	l
c0107812	obj/kernel.asm	/^c0107812:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107815	obj/kernel.asm	/^c0107815:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c010781a	obj/kernel.asm	/^c010781a:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c010781d	obj/kernel.asm	/^c010781d:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c0107822	obj/kernel.asm	/^c0107822:	83 f8 05             	cmp    $0x5,%eax$/;"	l
c0107825	obj/kernel.asm	/^c0107825:	74 16                	je     c010783d <_fifo_check_swap+0x156>$/;"	l
c0107827	obj/kernel.asm	/^c0107827:	68 f2 5b 11 c0       	push   $0xc0115bf2$/;"	l
c010782c	obj/kernel.asm	/^c010782c:	68 c6 5a 11 c0       	push   $0xc0115ac6$/;"	l
c0107831	obj/kernel.asm	/^c0107831:	6a 64                	push   $0x64$/;"	l
c0107833	obj/kernel.asm	/^c0107833:	68 db 5a 11 c0       	push   $0xc0115adb$/;"	l
c0107838	obj/kernel.asm	/^c0107838:	e8 92 8c ff ff       	call   c01004cf <__panic>$/;"	l
c010783d	obj/kernel.asm	/^c010783d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107840	obj/kernel.asm	/^c0107840:	68 54 5b 11 c0       	push   $0xc0115b54$/;"	l
c0107845	obj/kernel.asm	/^c0107845:	e8 20 8b ff ff       	call   c010036a <cprintf>$/;"	l
c010784a	obj/kernel.asm	/^c010784a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010784d	obj/kernel.asm	/^c010784d:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0107852	obj/kernel.asm	/^c0107852:	c6 00 0a             	movb   $0xa,(%eax)$/;"	l
c0107855	obj/kernel.asm	/^c0107855:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c010785a	obj/kernel.asm	/^c010785a:	83 f8 06             	cmp    $0x6,%eax$/;"	l
c010785d	obj/kernel.asm	/^c010785d:	74 16                	je     c0107875 <_fifo_check_swap+0x18e>$/;"	l
c010785f	obj/kernel.asm	/^c010785f:	68 01 5c 11 c0       	push   $0xc0115c01$/;"	l
c0107864	obj/kernel.asm	/^c0107864:	68 c6 5a 11 c0       	push   $0xc0115ac6$/;"	l
c0107869	obj/kernel.asm	/^c0107869:	6a 67                	push   $0x67$/;"	l
c010786b	obj/kernel.asm	/^c010786b:	68 db 5a 11 c0       	push   $0xc0115adb$/;"	l
c0107870	obj/kernel.asm	/^c0107870:	e8 5a 8c ff ff       	call   c01004cf <__panic>$/;"	l
c0107875	obj/kernel.asm	/^c0107875:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107878	obj/kernel.asm	/^c0107878:	68 a4 5b 11 c0       	push   $0xc0115ba4$/;"	l
c010787d	obj/kernel.asm	/^c010787d:	e8 e8 8a ff ff       	call   c010036a <cprintf>$/;"	l
c0107882	obj/kernel.asm	/^c0107882:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107885	obj/kernel.asm	/^c0107885:	b8 00 20 00 00       	mov    $0x2000,%eax$/;"	l
c010788a	obj/kernel.asm	/^c010788a:	c6 00 0b             	movb   $0xb,(%eax)$/;"	l
c010788d	obj/kernel.asm	/^c010788d:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c0107892	obj/kernel.asm	/^c0107892:	83 f8 07             	cmp    $0x7,%eax$/;"	l
c0107895	obj/kernel.asm	/^c0107895:	74 16                	je     c01078ad <_fifo_check_swap+0x1c6>$/;"	l
c0107897	obj/kernel.asm	/^c0107897:	68 10 5c 11 c0       	push   $0xc0115c10$/;"	l
c010789c	obj/kernel.asm	/^c010789c:	68 c6 5a 11 c0       	push   $0xc0115ac6$/;"	l
c01078a1	obj/kernel.asm	/^c01078a1:	6a 6a                	push   $0x6a$/;"	l
c01078a3	obj/kernel.asm	/^c01078a3:	68 db 5a 11 c0       	push   $0xc0115adb$/;"	l
c01078a8	obj/kernel.asm	/^c01078a8:	e8 22 8c ff ff       	call   c01004cf <__panic>$/;"	l
c01078ad	obj/kernel.asm	/^c01078ad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01078b0	obj/kernel.asm	/^c01078b0:	68 1c 5b 11 c0       	push   $0xc0115b1c$/;"	l
c01078b5	obj/kernel.asm	/^c01078b5:	e8 b0 8a ff ff       	call   c010036a <cprintf>$/;"	l
c01078ba	obj/kernel.asm	/^c01078ba:	83 c4 10             	add    $0x10,%esp$/;"	l
c01078bd	obj/kernel.asm	/^c01078bd:	b8 00 30 00 00       	mov    $0x3000,%eax$/;"	l
c01078c2	obj/kernel.asm	/^c01078c2:	c6 00 0c             	movb   $0xc,(%eax)$/;"	l
c01078c5	obj/kernel.asm	/^c01078c5:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c01078ca	obj/kernel.asm	/^c01078ca:	83 f8 08             	cmp    $0x8,%eax$/;"	l
c01078cd	obj/kernel.asm	/^c01078cd:	74 16                	je     c01078e5 <_fifo_check_swap+0x1fe>$/;"	l
c01078cf	obj/kernel.asm	/^c01078cf:	68 1f 5c 11 c0       	push   $0xc0115c1f$/;"	l
c01078d4	obj/kernel.asm	/^c01078d4:	68 c6 5a 11 c0       	push   $0xc0115ac6$/;"	l
c01078d9	obj/kernel.asm	/^c01078d9:	6a 6d                	push   $0x6d$/;"	l
c01078db	obj/kernel.asm	/^c01078db:	68 db 5a 11 c0       	push   $0xc0115adb$/;"	l
c01078e0	obj/kernel.asm	/^c01078e0:	e8 ea 8b ff ff       	call   c01004cf <__panic>$/;"	l
c01078e5	obj/kernel.asm	/^c01078e5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01078e8	obj/kernel.asm	/^c01078e8:	68 7c 5b 11 c0       	push   $0xc0115b7c$/;"	l
c01078ed	obj/kernel.asm	/^c01078ed:	e8 78 8a ff ff       	call   c010036a <cprintf>$/;"	l
c01078f2	obj/kernel.asm	/^c01078f2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01078f5	obj/kernel.asm	/^c01078f5:	b8 00 40 00 00       	mov    $0x4000,%eax$/;"	l
c01078fa	obj/kernel.asm	/^c01078fa:	c6 00 0d             	movb   $0xd,(%eax)$/;"	l
c01078fd	obj/kernel.asm	/^c01078fd:	a1 6c f0 14 c0       	mov    0xc014f06c,%eax$/;"	l
c0107902	obj/kernel.asm	/^c0107902:	83 f8 09             	cmp    $0x9,%eax$/;"	l
c0107905	obj/kernel.asm	/^c0107905:	74 16                	je     c010791d <_fifo_check_swap+0x236>$/;"	l
c0107907	obj/kernel.asm	/^c0107907:	68 2e 5c 11 c0       	push   $0xc0115c2e$/;"	l
c010790c	obj/kernel.asm	/^c010790c:	68 c6 5a 11 c0       	push   $0xc0115ac6$/;"	l
c0107911	obj/kernel.asm	/^c0107911:	6a 70                	push   $0x70$/;"	l
c0107913	obj/kernel.asm	/^c0107913:	68 db 5a 11 c0       	push   $0xc0115adb$/;"	l
c0107918	obj/kernel.asm	/^c0107918:	e8 b2 8b ff ff       	call   c01004cf <__panic>$/;"	l
c010791d	obj/kernel.asm	/^c010791d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107922	obj/kernel.asm	/^c0107922:	c9                   	leave  $/;"	l
c0107923	obj/kernel.asm	/^c0107923:	c3                   	ret    $/;"	l
c0107924	obj/kernel.asm	/^c0107924 <_fifo_init>:$/;"	l
c0107924	obj/kernel.asm	/^c0107924:	55                   	push   %ebp$/;"	l
c0107925	obj/kernel.asm	/^c0107925:	89 e5                	mov    %esp,%ebp$/;"	l
c0107927	obj/kernel.asm	/^c0107927:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010792c	obj/kernel.asm	/^c010792c:	5d                   	pop    %ebp$/;"	l
c010792d	obj/kernel.asm	/^c010792d:	c3                   	ret    $/;"	l
c010792e	obj/kernel.asm	/^c010792e <_fifo_set_unswappable>:$/;"	l
c010792e	obj/kernel.asm	/^c010792e:	55                   	push   %ebp$/;"	l
c010792f	obj/kernel.asm	/^c010792f:	89 e5                	mov    %esp,%ebp$/;"	l
c0107931	obj/kernel.asm	/^c0107931:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107936	obj/kernel.asm	/^c0107936:	5d                   	pop    %ebp$/;"	l
c0107937	obj/kernel.asm	/^c0107937:	c3                   	ret    $/;"	l
c0107938	obj/kernel.asm	/^c0107938 <_fifo_tick_event>:$/;"	l
c0107938	obj/kernel.asm	/^c0107938:	55                   	push   %ebp$/;"	l
c0107939	obj/kernel.asm	/^c0107939:	89 e5                	mov    %esp,%ebp$/;"	l
c010793b	obj/kernel.asm	/^c010793b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107940	obj/kernel.asm	/^c0107940:	5d                   	pop    %ebp$/;"	l
c0107941	obj/kernel.asm	/^c0107941:	c3                   	ret    $/;"	l
c0107942	obj/kernel.asm	/^c0107942 <page2ppn>:$/;"	l
c0107942	obj/kernel.asm	/^c0107942:	55                   	push   %ebp$/;"	l
c0107943	obj/kernel.asm	/^c0107943:	89 e5                	mov    %esp,%ebp$/;"	l
c0107945	obj/kernel.asm	/^c0107945:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107948	obj/kernel.asm	/^c0107948:	8b 15 ac 21 15 c0    	mov    0xc01521ac,%edx$/;"	l
c010794e	obj/kernel.asm	/^c010794e:	29 d0                	sub    %edx,%eax$/;"	l
c0107950	obj/kernel.asm	/^c0107950:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c0107953	obj/kernel.asm	/^c0107953:	69 c0 39 8e e3 38    	imul   $0x38e38e39,%eax,%eax$/;"	l
c0107959	obj/kernel.asm	/^c0107959:	5d                   	pop    %ebp$/;"	l
c010795a	obj/kernel.asm	/^c010795a:	c3                   	ret    $/;"	l
c010795b	obj/kernel.asm	/^c010795b <page2pa>:$/;"	l
c010795b	obj/kernel.asm	/^c010795b:	55                   	push   %ebp$/;"	l
c010795c	obj/kernel.asm	/^c010795c:	89 e5                	mov    %esp,%ebp$/;"	l
c010795e	obj/kernel.asm	/^c010795e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0107961	obj/kernel.asm	/^c0107961:	e8 dc ff ff ff       	call   c0107942 <page2ppn>$/;"	l
c0107966	obj/kernel.asm	/^c0107966:	83 c4 04             	add    $0x4,%esp$/;"	l
c0107969	obj/kernel.asm	/^c0107969:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010796c	obj/kernel.asm	/^c010796c:	c9                   	leave  $/;"	l
c010796d	obj/kernel.asm	/^c010796d:	c3                   	ret    $/;"	l
c010796e	obj/kernel.asm	/^c010796e <page_ref>:$/;"	l
c010796e	obj/kernel.asm	/^c010796e:	55                   	push   %ebp$/;"	l
c010796f	obj/kernel.asm	/^c010796f:	89 e5                	mov    %esp,%ebp$/;"	l
c0107971	obj/kernel.asm	/^c0107971:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107974	obj/kernel.asm	/^c0107974:	8b 00                	mov    (%eax),%eax$/;"	l
c0107976	obj/kernel.asm	/^c0107976:	5d                   	pop    %ebp$/;"	l
c0107977	obj/kernel.asm	/^c0107977:	c3                   	ret    $/;"	l
c0107978	obj/kernel.asm	/^c0107978 <set_page_ref>:$/;"	l
c0107978	obj/kernel.asm	/^c0107978:	55                   	push   %ebp$/;"	l
c0107979	obj/kernel.asm	/^c0107979:	89 e5                	mov    %esp,%ebp$/;"	l
c010797b	obj/kernel.asm	/^c010797b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010797e	obj/kernel.asm	/^c010797e:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107981	obj/kernel.asm	/^c0107981:	89 10                	mov    %edx,(%eax)$/;"	l
c0107983	obj/kernel.asm	/^c0107983:	5d                   	pop    %ebp$/;"	l
c0107984	obj/kernel.asm	/^c0107984:	c3                   	ret    $/;"	l
c0107985	obj/kernel.asm	/^c0107985 <default_init>:$/;"	l
c0107985	obj/kernel.asm	/^c0107985:	55                   	push   %ebp$/;"	l
c0107986	obj/kernel.asm	/^c0107986:	89 e5                	mov    %esp,%ebp$/;"	l
c0107988	obj/kernel.asm	/^c0107988:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010798b	obj/kernel.asm	/^c010798b:	c7 45 fc 8c 22 15 c0 	movl   $0xc015228c,-0x4(%ebp)$/;"	l
c0107992	obj/kernel.asm	/^c0107992:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0107995	obj/kernel.asm	/^c0107995:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0107998	obj/kernel.asm	/^c0107998:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010799b	obj/kernel.asm	/^c010799b:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010799e	obj/kernel.asm	/^c010799e:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c01079a1	obj/kernel.asm	/^c01079a1:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01079a4	obj/kernel.asm	/^c01079a4:	89 10                	mov    %edx,(%eax)$/;"	l
c01079a6	obj/kernel.asm	/^c01079a6:	c7 05 94 22 15 c0 00 	movl   $0x0,0xc0152294$/;"	l
c01079ad	obj/kernel.asm	/^c01079ad:	00 00 00 $/;"	l
c01079b0	obj/kernel.asm	/^c01079b0:	c9                   	leave  $/;"	l
c01079b1	obj/kernel.asm	/^c01079b1:	c3                   	ret    $/;"	l
c01079b2	obj/kernel.asm	/^c01079b2 <default_init_memmap>:$/;"	l
c01079b2	obj/kernel.asm	/^c01079b2:	55                   	push   %ebp$/;"	l
c01079b3	obj/kernel.asm	/^c01079b3:	89 e5                	mov    %esp,%ebp$/;"	l
c01079b5	obj/kernel.asm	/^c01079b5:	83 ec 38             	sub    $0x38,%esp$/;"	l
c01079b8	obj/kernel.asm	/^c01079b8:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01079bc	obj/kernel.asm	/^c01079bc:	75 16                	jne    c01079d4 <default_init_memmap+0x22>$/;"	l
c01079be	obj/kernel.asm	/^c01079be:	68 50 5c 11 c0       	push   $0xc0115c50$/;"	l
c01079c3	obj/kernel.asm	/^c01079c3:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c01079c8	obj/kernel.asm	/^c01079c8:	6a 46                	push   $0x46$/;"	l
c01079ca	obj/kernel.asm	/^c01079ca:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c01079cf	obj/kernel.asm	/^c01079cf:	e8 fb 8a ff ff       	call   c01004cf <__panic>$/;"	l
c01079d4	obj/kernel.asm	/^c01079d4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01079d7	obj/kernel.asm	/^c01079d7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01079da	obj/kernel.asm	/^c01079da:	e9 cb 00 00 00       	jmp    c0107aaa <default_init_memmap+0xf8>$/;"	l
c01079df	obj/kernel.asm	/^c01079df:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01079e2	obj/kernel.asm	/^c01079e2:	83 c0 04             	add    $0x4,%eax$/;"	l
c01079e5	obj/kernel.asm	/^c01079e5:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01079ec	obj/kernel.asm	/^c01079ec:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01079ef	obj/kernel.asm	/^c01079ef:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01079f2	obj/kernel.asm	/^c01079f2:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01079f5	obj/kernel.asm	/^c01079f5:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c01079f8	obj/kernel.asm	/^c01079f8:	19 c0                	sbb    %eax,%eax$/;"	l
c01079fa	obj/kernel.asm	/^c01079fa:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01079fd	obj/kernel.asm	/^c01079fd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0107a01	obj/kernel.asm	/^c0107a01:	0f 95 c0             	setne  %al$/;"	l
c0107a04	obj/kernel.asm	/^c0107a04:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107a07	obj/kernel.asm	/^c0107a07:	85 c0                	test   %eax,%eax$/;"	l
c0107a09	obj/kernel.asm	/^c0107a09:	75 16                	jne    c0107a21 <default_init_memmap+0x6f>$/;"	l
c0107a0b	obj/kernel.asm	/^c0107a0b:	68 81 5c 11 c0       	push   $0xc0115c81$/;"	l
c0107a10	obj/kernel.asm	/^c0107a10:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0107a15	obj/kernel.asm	/^c0107a15:	6a 49                	push   $0x49$/;"	l
c0107a17	obj/kernel.asm	/^c0107a17:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0107a1c	obj/kernel.asm	/^c0107a1c:	e8 ae 8a ff ff       	call   c01004cf <__panic>$/;"	l
c0107a21	obj/kernel.asm	/^c0107a21:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107a24	obj/kernel.asm	/^c0107a24:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c0107a2b	obj/kernel.asm	/^c0107a2b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107a2e	obj/kernel.asm	/^c0107a2e:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107a31	obj/kernel.asm	/^c0107a31:	c7 45 e4 01 00 00 00 	movl   $0x1,-0x1c(%ebp)$/;"	l
c0107a38	obj/kernel.asm	/^c0107a38:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107a3b	obj/kernel.asm	/^c0107a3b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107a3e	obj/kernel.asm	/^c0107a3e:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0107a41	obj/kernel.asm	/^c0107a41:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107a44	obj/kernel.asm	/^c0107a44:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107a47	obj/kernel.asm	/^c0107a47:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0107a4e	obj/kernel.asm	/^c0107a4e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107a51	obj/kernel.asm	/^c0107a51:	6a 00                	push   $0x0$/;"	l
c0107a53	obj/kernel.asm	/^c0107a53:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0107a56	obj/kernel.asm	/^c0107a56:	e8 1d ff ff ff       	call   c0107978 <set_page_ref>$/;"	l
c0107a5b	obj/kernel.asm	/^c0107a5b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107a5e	obj/kernel.asm	/^c0107a5e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107a61	obj/kernel.asm	/^c0107a61:	83 c0 10             	add    $0x10,%eax$/;"	l
c0107a64	obj/kernel.asm	/^c0107a64:	c7 45 dc 8c 22 15 c0 	movl   $0xc015228c,-0x24(%ebp)$/;"	l
c0107a6b	obj/kernel.asm	/^c0107a6b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0107a6e	obj/kernel.asm	/^c0107a6e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107a71	obj/kernel.asm	/^c0107a71:	8b 00                	mov    (%eax),%eax$/;"	l
c0107a73	obj/kernel.asm	/^c0107a73:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107a76	obj/kernel.asm	/^c0107a76:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0107a79	obj/kernel.asm	/^c0107a79:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0107a7c	obj/kernel.asm	/^c0107a7c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107a7f	obj/kernel.asm	/^c0107a7f:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0107a82	obj/kernel.asm	/^c0107a82:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0107a85	obj/kernel.asm	/^c0107a85:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0107a88	obj/kernel.asm	/^c0107a88:	89 10                	mov    %edx,(%eax)$/;"	l
c0107a8a	obj/kernel.asm	/^c0107a8a:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0107a8d	obj/kernel.asm	/^c0107a8d:	8b 10                	mov    (%eax),%edx$/;"	l
c0107a8f	obj/kernel.asm	/^c0107a8f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0107a92	obj/kernel.asm	/^c0107a92:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107a95	obj/kernel.asm	/^c0107a95:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107a98	obj/kernel.asm	/^c0107a98:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0107a9b	obj/kernel.asm	/^c0107a9b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107a9e	obj/kernel.asm	/^c0107a9e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107aa1	obj/kernel.asm	/^c0107aa1:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0107aa4	obj/kernel.asm	/^c0107aa4:	89 10                	mov    %edx,(%eax)$/;"	l
c0107aa6	obj/kernel.asm	/^c0107aa6:	83 45 f4 24          	addl   $0x24,-0xc(%ebp)$/;"	l
c0107aaa	obj/kernel.asm	/^c0107aaa:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107aad	obj/kernel.asm	/^c0107aad:	89 d0                	mov    %edx,%eax$/;"	l
c0107aaf	obj/kernel.asm	/^c0107aaf:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0107ab2	obj/kernel.asm	/^c0107ab2:	01 d0                	add    %edx,%eax$/;"	l
c0107ab4	obj/kernel.asm	/^c0107ab4:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0107ab7	obj/kernel.asm	/^c0107ab7:	89 c2                	mov    %eax,%edx$/;"	l
c0107ab9	obj/kernel.asm	/^c0107ab9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107abc	obj/kernel.asm	/^c0107abc:	01 d0                	add    %edx,%eax$/;"	l
c0107abe	obj/kernel.asm	/^c0107abe:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107ac1	obj/kernel.asm	/^c0107ac1:	0f 85 18 ff ff ff    	jne    c01079df <default_init_memmap+0x2d>$/;"	l
c0107ac7	obj/kernel.asm	/^c0107ac7:	8b 15 94 22 15 c0    	mov    0xc0152294,%edx$/;"	l
c0107acd	obj/kernel.asm	/^c0107acd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107ad0	obj/kernel.asm	/^c0107ad0:	01 d0                	add    %edx,%eax$/;"	l
c0107ad2	obj/kernel.asm	/^c0107ad2:	a3 94 22 15 c0       	mov    %eax,0xc0152294$/;"	l
c0107ad7	obj/kernel.asm	/^c0107ad7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107ada	obj/kernel.asm	/^c0107ada:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107add	obj/kernel.asm	/^c0107add:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107ae0	obj/kernel.asm	/^c0107ae0:	c9                   	leave  $/;"	l
c0107ae1	obj/kernel.asm	/^c0107ae1:	c3                   	ret    $/;"	l
c0107ae2	obj/kernel.asm	/^c0107ae2 <default_alloc_pages>:$/;"	l
c0107ae2	obj/kernel.asm	/^c0107ae2:	55                   	push   %ebp$/;"	l
c0107ae3	obj/kernel.asm	/^c0107ae3:	89 e5                	mov    %esp,%ebp$/;"	l
c0107ae5	obj/kernel.asm	/^c0107ae5:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0107ae8	obj/kernel.asm	/^c0107ae8:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0107aec	obj/kernel.asm	/^c0107aec:	75 16                	jne    c0107b04 <default_alloc_pages+0x22>$/;"	l
c0107aee	obj/kernel.asm	/^c0107aee:	68 50 5c 11 c0       	push   $0xc0115c50$/;"	l
c0107af3	obj/kernel.asm	/^c0107af3:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0107af8	obj/kernel.asm	/^c0107af8:	6a 57                	push   $0x57$/;"	l
c0107afa	obj/kernel.asm	/^c0107afa:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0107aff	obj/kernel.asm	/^c0107aff:	e8 cb 89 ff ff       	call   c01004cf <__panic>$/;"	l
c0107b04	obj/kernel.asm	/^c0107b04:	a1 94 22 15 c0       	mov    0xc0152294,%eax$/;"	l
c0107b09	obj/kernel.asm	/^c0107b09:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107b0c	obj/kernel.asm	/^c0107b0c:	73 0a                	jae    c0107b18 <default_alloc_pages+0x36>$/;"	l
c0107b0e	obj/kernel.asm	/^c0107b0e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107b13	obj/kernel.asm	/^c0107b13:	e9 37 01 00 00       	jmp    c0107c4f <default_alloc_pages+0x16d>$/;"	l
c0107b18	obj/kernel.asm	/^c0107b18:	c7 45 f4 8c 22 15 c0 	movl   $0xc015228c,-0xc(%ebp)$/;"	l
c0107b1f	obj/kernel.asm	/^c0107b1f:	e9 0a 01 00 00       	jmp    c0107c2e <default_alloc_pages+0x14c>$/;"	l
c0107b24	obj/kernel.asm	/^c0107b24:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b27	obj/kernel.asm	/^c0107b27:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0107b2a	obj/kernel.asm	/^c0107b2a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107b2d	obj/kernel.asm	/^c0107b2d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107b30	obj/kernel.asm	/^c0107b30:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107b33	obj/kernel.asm	/^c0107b33:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107b36	obj/kernel.asm	/^c0107b36:	0f 82 f2 00 00 00    	jb     c0107c2e <default_alloc_pages+0x14c>$/;"	l
c0107b3c	obj/kernel.asm	/^c0107b3c:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0107b43	obj/kernel.asm	/^c0107b43:	eb 7c                	jmp    c0107bc1 <default_alloc_pages+0xdf>$/;"	l
c0107b45	obj/kernel.asm	/^c0107b45:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b48	obj/kernel.asm	/^c0107b48:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107b4b	obj/kernel.asm	/^c0107b4b:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107b4e	obj/kernel.asm	/^c0107b4e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107b51	obj/kernel.asm	/^c0107b51:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107b54	obj/kernel.asm	/^c0107b54:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b57	obj/kernel.asm	/^c0107b57:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0107b5a	obj/kernel.asm	/^c0107b5a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107b5d	obj/kernel.asm	/^c0107b5d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107b60	obj/kernel.asm	/^c0107b60:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107b63	obj/kernel.asm	/^c0107b63:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0107b6a	obj/kernel.asm	/^c0107b6a:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0107b6d	obj/kernel.asm	/^c0107b6d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0107b70	obj/kernel.asm	/^c0107b70:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0107b73	obj/kernel.asm	/^c0107b73:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107b76	obj/kernel.asm	/^c0107b76:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0107b79	obj/kernel.asm	/^c0107b79:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107b7c	obj/kernel.asm	/^c0107b7c:	c7 45 d4 01 00 00 00 	movl   $0x1,-0x2c(%ebp)$/;"	l
c0107b83	obj/kernel.asm	/^c0107b83:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0107b86	obj/kernel.asm	/^c0107b86:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0107b89	obj/kernel.asm	/^c0107b89:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0107b8c	obj/kernel.asm	/^c0107b8c:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0107b8f	obj/kernel.asm	/^c0107b8f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107b92	obj/kernel.asm	/^c0107b92:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0107b95	obj/kernel.asm	/^c0107b95:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0107b98	obj/kernel.asm	/^c0107b98:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107b9b	obj/kernel.asm	/^c0107b9b:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0107b9e	obj/kernel.asm	/^c0107b9e:	8b 12                	mov    (%edx),%edx$/;"	l
c0107ba0	obj/kernel.asm	/^c0107ba0:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c0107ba3	obj/kernel.asm	/^c0107ba3:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0107ba6	obj/kernel.asm	/^c0107ba6:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0107ba9	obj/kernel.asm	/^c0107ba9:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0107bac	obj/kernel.asm	/^c0107bac:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107baf	obj/kernel.asm	/^c0107baf:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0107bb2	obj/kernel.asm	/^c0107bb2:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c0107bb5	obj/kernel.asm	/^c0107bb5:	89 10                	mov    %edx,(%eax)$/;"	l
c0107bb7	obj/kernel.asm	/^c0107bb7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107bba	obj/kernel.asm	/^c0107bba:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107bbd	obj/kernel.asm	/^c0107bbd:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0107bc1	obj/kernel.asm	/^c0107bc1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107bc4	obj/kernel.asm	/^c0107bc4:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107bc7	obj/kernel.asm	/^c0107bc7:	0f 82 78 ff ff ff    	jb     c0107b45 <default_alloc_pages+0x63>$/;"	l
c0107bcd	obj/kernel.asm	/^c0107bcd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107bd0	obj/kernel.asm	/^c0107bd0:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107bd3	obj/kernel.asm	/^c0107bd3:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107bd6	obj/kernel.asm	/^c0107bd6:	76 12                	jbe    c0107bea <default_alloc_pages+0x108>$/;"	l
c0107bd8	obj/kernel.asm	/^c0107bd8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107bdb	obj/kernel.asm	/^c0107bdb:	8d 50 f0             	lea    -0x10(%eax),%edx$/;"	l
c0107bde	obj/kernel.asm	/^c0107bde:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107be1	obj/kernel.asm	/^c0107be1:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107be4	obj/kernel.asm	/^c0107be4:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c0107be7	obj/kernel.asm	/^c0107be7:	89 42 08             	mov    %eax,0x8(%edx)$/;"	l
c0107bea	obj/kernel.asm	/^c0107bea:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107bed	obj/kernel.asm	/^c0107bed:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107bf0	obj/kernel.asm	/^c0107bf0:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c0107bf7	obj/kernel.asm	/^c0107bf7:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0107bfa	obj/kernel.asm	/^c0107bfa:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0107bfd	obj/kernel.asm	/^c0107bfd:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c0107c00	obj/kernel.asm	/^c0107c00:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0107c03	obj/kernel.asm	/^c0107c03:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107c06	obj/kernel.asm	/^c0107c06:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107c09	obj/kernel.asm	/^c0107c09:	c7 45 b8 00 00 00 00 	movl   $0x0,-0x48(%ebp)$/;"	l
c0107c10	obj/kernel.asm	/^c0107c10:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0107c13	obj/kernel.asm	/^c0107c13:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0107c16	obj/kernel.asm	/^c0107c16:	8b 55 b8             	mov    -0x48(%ebp),%edx$/;"	l
c0107c19	obj/kernel.asm	/^c0107c19:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107c1c	obj/kernel.asm	/^c0107c1c:	a1 94 22 15 c0       	mov    0xc0152294,%eax$/;"	l
c0107c21	obj/kernel.asm	/^c0107c21:	2b 45 08             	sub    0x8(%ebp),%eax$/;"	l
c0107c24	obj/kernel.asm	/^c0107c24:	a3 94 22 15 c0       	mov    %eax,0xc0152294$/;"	l
c0107c29	obj/kernel.asm	/^c0107c29:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107c2c	obj/kernel.asm	/^c0107c2c:	eb 21                	jmp    c0107c4f <default_alloc_pages+0x16d>$/;"	l
c0107c2e	obj/kernel.asm	/^c0107c2e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107c31	obj/kernel.asm	/^c0107c31:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0107c34	obj/kernel.asm	/^c0107c34:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0107c37	obj/kernel.asm	/^c0107c37:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107c3a	obj/kernel.asm	/^c0107c3a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107c3d	obj/kernel.asm	/^c0107c3d:	81 7d f4 8c 22 15 c0 	cmpl   $0xc015228c,-0xc(%ebp)$/;"	l
c0107c44	obj/kernel.asm	/^c0107c44:	0f 85 da fe ff ff    	jne    c0107b24 <default_alloc_pages+0x42>$/;"	l
c0107c4a	obj/kernel.asm	/^c0107c4a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0107c4f	obj/kernel.asm	/^c0107c4f:	c9                   	leave  $/;"	l
c0107c50	obj/kernel.asm	/^c0107c50:	c3                   	ret    $/;"	l
c0107c51	obj/kernel.asm	/^c0107c51 <default_free_pages>:$/;"	l
c0107c51	obj/kernel.asm	/^c0107c51:	55                   	push   %ebp$/;"	l
c0107c52	obj/kernel.asm	/^c0107c52:	89 e5                	mov    %esp,%ebp$/;"	l
c0107c54	obj/kernel.asm	/^c0107c54:	83 ec 58             	sub    $0x58,%esp$/;"	l
c0107c57	obj/kernel.asm	/^c0107c57:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0107c5b	obj/kernel.asm	/^c0107c5b:	75 16                	jne    c0107c73 <default_free_pages+0x22>$/;"	l
c0107c5d	obj/kernel.asm	/^c0107c5d:	68 50 5c 11 c0       	push   $0xc0115c50$/;"	l
c0107c62	obj/kernel.asm	/^c0107c62:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0107c67	obj/kernel.asm	/^c0107c67:	6a 78                	push   $0x78$/;"	l
c0107c69	obj/kernel.asm	/^c0107c69:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0107c6e	obj/kernel.asm	/^c0107c6e:	e8 5c 88 ff ff       	call   c01004cf <__panic>$/;"	l
c0107c73	obj/kernel.asm	/^c0107c73:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107c76	obj/kernel.asm	/^c0107c76:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107c79	obj/kernel.asm	/^c0107c79:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0107c80	obj/kernel.asm	/^c0107c80:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0107c83	obj/kernel.asm	/^c0107c83:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0107c86	obj/kernel.asm	/^c0107c86:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0107c89	obj/kernel.asm	/^c0107c89:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0107c8c	obj/kernel.asm	/^c0107c8c:	19 c0                	sbb    %eax,%eax$/;"	l
c0107c8e	obj/kernel.asm	/^c0107c8e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0107c91	obj/kernel.asm	/^c0107c91:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0107c95	obj/kernel.asm	/^c0107c95:	0f 95 c0             	setne  %al$/;"	l
c0107c98	obj/kernel.asm	/^c0107c98:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0107c9b	obj/kernel.asm	/^c0107c9b:	85 c0                	test   %eax,%eax$/;"	l
c0107c9d	obj/kernel.asm	/^c0107c9d:	75 16                	jne    c0107cb5 <default_free_pages+0x64>$/;"	l
c0107c9f	obj/kernel.asm	/^c0107c9f:	68 91 5c 11 c0       	push   $0xc0115c91$/;"	l
c0107ca4	obj/kernel.asm	/^c0107ca4:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0107ca9	obj/kernel.asm	/^c0107ca9:	6a 79                	push   $0x79$/;"	l
c0107cab	obj/kernel.asm	/^c0107cab:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0107cb0	obj/kernel.asm	/^c0107cb0:	e8 1a 88 ff ff       	call   c01004cf <__panic>$/;"	l
c0107cb5	obj/kernel.asm	/^c0107cb5:	c7 45 f4 8c 22 15 c0 	movl   $0xc015228c,-0xc(%ebp)$/;"	l
c0107cbc	obj/kernel.asm	/^c0107cbc:	eb 13                	jmp    c0107cd1 <default_free_pages+0x80>$/;"	l
c0107cbe	obj/kernel.asm	/^c0107cbe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107cc1	obj/kernel.asm	/^c0107cc1:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0107cc4	obj/kernel.asm	/^c0107cc4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107cc7	obj/kernel.asm	/^c0107cc7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107cca	obj/kernel.asm	/^c0107cca:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0107ccd	obj/kernel.asm	/^c0107ccd:	76 02                	jbe    c0107cd1 <default_free_pages+0x80>$/;"	l
c0107ccf	obj/kernel.asm	/^c0107ccf:	eb 18                	jmp    c0107ce9 <default_free_pages+0x98>$/;"	l
c0107cd1	obj/kernel.asm	/^c0107cd1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107cd4	obj/kernel.asm	/^c0107cd4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0107cd7	obj/kernel.asm	/^c0107cd7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0107cda	obj/kernel.asm	/^c0107cda:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0107cdd	obj/kernel.asm	/^c0107cdd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107ce0	obj/kernel.asm	/^c0107ce0:	81 7d f4 8c 22 15 c0 	cmpl   $0xc015228c,-0xc(%ebp)$/;"	l
c0107ce7	obj/kernel.asm	/^c0107ce7:	75 d5                	jne    c0107cbe <default_free_pages+0x6d>$/;"	l
c0107ce9	obj/kernel.asm	/^c0107ce9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107cec	obj/kernel.asm	/^c0107cec:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107cef	obj/kernel.asm	/^c0107cef:	eb 4b                	jmp    c0107d3c <default_free_pages+0xeb>$/;"	l
c0107cf1	obj/kernel.asm	/^c0107cf1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107cf4	obj/kernel.asm	/^c0107cf4:	8d 50 10             	lea    0x10(%eax),%edx$/;"	l
c0107cf7	obj/kernel.asm	/^c0107cf7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107cfa	obj/kernel.asm	/^c0107cfa:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0107cfd	obj/kernel.asm	/^c0107cfd:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c0107d00	obj/kernel.asm	/^c0107d00:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107d03	obj/kernel.asm	/^c0107d03:	8b 00                	mov    (%eax),%eax$/;"	l
c0107d05	obj/kernel.asm	/^c0107d05:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0107d08	obj/kernel.asm	/^c0107d08:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0107d0b	obj/kernel.asm	/^c0107d0b:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0107d0e	obj/kernel.asm	/^c0107d0e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0107d11	obj/kernel.asm	/^c0107d11:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0107d14	obj/kernel.asm	/^c0107d14:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0107d17	obj/kernel.asm	/^c0107d17:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0107d1a	obj/kernel.asm	/^c0107d1a:	89 10                	mov    %edx,(%eax)$/;"	l
c0107d1c	obj/kernel.asm	/^c0107d1c:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0107d1f	obj/kernel.asm	/^c0107d1f:	8b 10                	mov    (%eax),%edx$/;"	l
c0107d21	obj/kernel.asm	/^c0107d21:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0107d24	obj/kernel.asm	/^c0107d24:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107d27	obj/kernel.asm	/^c0107d27:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107d2a	obj/kernel.asm	/^c0107d2a:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0107d2d	obj/kernel.asm	/^c0107d2d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0107d30	obj/kernel.asm	/^c0107d30:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0107d33	obj/kernel.asm	/^c0107d33:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0107d36	obj/kernel.asm	/^c0107d36:	89 10                	mov    %edx,(%eax)$/;"	l
c0107d38	obj/kernel.asm	/^c0107d38:	83 45 f0 24          	addl   $0x24,-0x10(%ebp)$/;"	l
c0107d3c	obj/kernel.asm	/^c0107d3c:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107d3f	obj/kernel.asm	/^c0107d3f:	89 d0                	mov    %edx,%eax$/;"	l
c0107d41	obj/kernel.asm	/^c0107d41:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0107d44	obj/kernel.asm	/^c0107d44:	01 d0                	add    %edx,%eax$/;"	l
c0107d46	obj/kernel.asm	/^c0107d46:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0107d49	obj/kernel.asm	/^c0107d49:	89 c2                	mov    %eax,%edx$/;"	l
c0107d4b	obj/kernel.asm	/^c0107d4b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d4e	obj/kernel.asm	/^c0107d4e:	01 d0                	add    %edx,%eax$/;"	l
c0107d50	obj/kernel.asm	/^c0107d50:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0107d53	obj/kernel.asm	/^c0107d53:	77 9c                	ja     c0107cf1 <default_free_pages+0xa0>$/;"	l
c0107d55	obj/kernel.asm	/^c0107d55:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d58	obj/kernel.asm	/^c0107d58:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c0107d5f	obj/kernel.asm	/^c0107d5f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0107d62	obj/kernel.asm	/^c0107d62:	6a 00                	push   $0x0$/;"	l
c0107d64	obj/kernel.asm	/^c0107d64:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0107d67	obj/kernel.asm	/^c0107d67:	e8 0c fc ff ff       	call   c0107978 <set_page_ref>$/;"	l
c0107d6c	obj/kernel.asm	/^c0107d6c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107d6f	obj/kernel.asm	/^c0107d6f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d72	obj/kernel.asm	/^c0107d72:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107d75	obj/kernel.asm	/^c0107d75:	c7 45 c8 01 00 00 00 	movl   $0x1,-0x38(%ebp)$/;"	l
c0107d7c	obj/kernel.asm	/^c0107d7c:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0107d7f	obj/kernel.asm	/^c0107d7f:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0107d82	obj/kernel.asm	/^c0107d82:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c0107d85	obj/kernel.asm	/^c0107d85:	0f b3 10             	btr    %edx,(%eax)$/;"	l
c0107d88	obj/kernel.asm	/^c0107d88:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107d8b	obj/kernel.asm	/^c0107d8b:	83 c0 04             	add    $0x4,%eax$/;"	l
c0107d8e	obj/kernel.asm	/^c0107d8e:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c0107d95	obj/kernel.asm	/^c0107d95:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0107d98	obj/kernel.asm	/^c0107d98:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c0107d9b	obj/kernel.asm	/^c0107d9b:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c0107d9e	obj/kernel.asm	/^c0107d9e:	0f ab 10             	bts    %edx,(%eax)$/;"	l
c0107da1	obj/kernel.asm	/^c0107da1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107da4	obj/kernel.asm	/^c0107da4:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107da7	obj/kernel.asm	/^c0107da7:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107daa	obj/kernel.asm	/^c0107daa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107dad	obj/kernel.asm	/^c0107dad:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0107db0	obj/kernel.asm	/^c0107db0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107db3	obj/kernel.asm	/^c0107db3:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0107db6	obj/kernel.asm	/^c0107db6:	89 d0                	mov    %edx,%eax$/;"	l
c0107db8	obj/kernel.asm	/^c0107db8:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0107dbb	obj/kernel.asm	/^c0107dbb:	01 d0                	add    %edx,%eax$/;"	l
c0107dbd	obj/kernel.asm	/^c0107dbd:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0107dc0	obj/kernel.asm	/^c0107dc0:	89 c2                	mov    %eax,%edx$/;"	l
c0107dc2	obj/kernel.asm	/^c0107dc2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107dc5	obj/kernel.asm	/^c0107dc5:	01 d0                	add    %edx,%eax$/;"	l
c0107dc7	obj/kernel.asm	/^c0107dc7:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0107dca	obj/kernel.asm	/^c0107dca:	75 1e                	jne    c0107dea <default_free_pages+0x199>$/;"	l
c0107dcc	obj/kernel.asm	/^c0107dcc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107dcf	obj/kernel.asm	/^c0107dcf:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107dd2	obj/kernel.asm	/^c0107dd2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107dd5	obj/kernel.asm	/^c0107dd5:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107dd8	obj/kernel.asm	/^c0107dd8:	01 c2                	add    %eax,%edx$/;"	l
c0107dda	obj/kernel.asm	/^c0107dda:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107ddd	obj/kernel.asm	/^c0107ddd:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107de0	obj/kernel.asm	/^c0107de0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107de3	obj/kernel.asm	/^c0107de3:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0107dea	obj/kernel.asm	/^c0107dea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107ded	obj/kernel.asm	/^c0107ded:	83 c0 10             	add    $0x10,%eax$/;"	l
c0107df0	obj/kernel.asm	/^c0107df0:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0107df3	obj/kernel.asm	/^c0107df3:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0107df6	obj/kernel.asm	/^c0107df6:	8b 00                	mov    (%eax),%eax$/;"	l
c0107df8	obj/kernel.asm	/^c0107df8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107dfb	obj/kernel.asm	/^c0107dfb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107dfe	obj/kernel.asm	/^c0107dfe:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0107e01	obj/kernel.asm	/^c0107e01:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107e04	obj/kernel.asm	/^c0107e04:	81 7d f4 8c 22 15 c0 	cmpl   $0xc015228c,-0xc(%ebp)$/;"	l
c0107e0b	obj/kernel.asm	/^c0107e0b:	74 57                	je     c0107e64 <default_free_pages+0x213>$/;"	l
c0107e0d	obj/kernel.asm	/^c0107e0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e10	obj/kernel.asm	/^c0107e10:	83 e8 24             	sub    $0x24,%eax$/;"	l
c0107e13	obj/kernel.asm	/^c0107e13:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0107e16	obj/kernel.asm	/^c0107e16:	75 4c                	jne    c0107e64 <default_free_pages+0x213>$/;"	l
c0107e18	obj/kernel.asm	/^c0107e18:	eb 41                	jmp    c0107e5b <default_free_pages+0x20a>$/;"	l
c0107e1a	obj/kernel.asm	/^c0107e1a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e1d	obj/kernel.asm	/^c0107e1d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107e20	obj/kernel.asm	/^c0107e20:	85 c0                	test   %eax,%eax$/;"	l
c0107e22	obj/kernel.asm	/^c0107e22:	74 20                	je     c0107e44 <default_free_pages+0x1f3>$/;"	l
c0107e24	obj/kernel.asm	/^c0107e24:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e27	obj/kernel.asm	/^c0107e27:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0107e2a	obj/kernel.asm	/^c0107e2a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e2d	obj/kernel.asm	/^c0107e2d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0107e30	obj/kernel.asm	/^c0107e30:	01 c2                	add    %eax,%edx$/;"	l
c0107e32	obj/kernel.asm	/^c0107e32:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e35	obj/kernel.asm	/^c0107e35:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0107e38	obj/kernel.asm	/^c0107e38:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0107e3b	obj/kernel.asm	/^c0107e3b:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0107e42	obj/kernel.asm	/^c0107e42:	eb 20                	jmp    c0107e64 <default_free_pages+0x213>$/;"	l
c0107e44	obj/kernel.asm	/^c0107e44:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e47	obj/kernel.asm	/^c0107e47:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0107e4a	obj/kernel.asm	/^c0107e4a:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0107e4d	obj/kernel.asm	/^c0107e4d:	8b 00                	mov    (%eax),%eax$/;"	l
c0107e4f	obj/kernel.asm	/^c0107e4f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107e52	obj/kernel.asm	/^c0107e52:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e55	obj/kernel.asm	/^c0107e55:	83 e8 10             	sub    $0x10,%eax$/;"	l
c0107e58	obj/kernel.asm	/^c0107e58:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107e5b	obj/kernel.asm	/^c0107e5b:	81 7d f4 8c 22 15 c0 	cmpl   $0xc015228c,-0xc(%ebp)$/;"	l
c0107e62	obj/kernel.asm	/^c0107e62:	75 b6                	jne    c0107e1a <default_free_pages+0x1c9>$/;"	l
c0107e64	obj/kernel.asm	/^c0107e64:	8b 15 94 22 15 c0    	mov    0xc0152294,%edx$/;"	l
c0107e6a	obj/kernel.asm	/^c0107e6a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0107e6d	obj/kernel.asm	/^c0107e6d:	01 d0                	add    %edx,%eax$/;"	l
c0107e6f	obj/kernel.asm	/^c0107e6f:	a3 94 22 15 c0       	mov    %eax,0xc0152294$/;"	l
c0107e74	obj/kernel.asm	/^c0107e74:	90                   	nop$/;"	l
c0107e75	obj/kernel.asm	/^c0107e75:	c9                   	leave  $/;"	l
c0107e76	obj/kernel.asm	/^c0107e76:	c3                   	ret    $/;"	l
c0107e77	obj/kernel.asm	/^c0107e77 <default_nr_free_pages>:$/;"	l
c0107e77	obj/kernel.asm	/^c0107e77:	55                   	push   %ebp$/;"	l
c0107e78	obj/kernel.asm	/^c0107e78:	89 e5                	mov    %esp,%ebp$/;"	l
c0107e7a	obj/kernel.asm	/^c0107e7a:	a1 94 22 15 c0       	mov    0xc0152294,%eax$/;"	l
c0107e7f	obj/kernel.asm	/^c0107e7f:	5d                   	pop    %ebp$/;"	l
c0107e80	obj/kernel.asm	/^c0107e80:	c3                   	ret    $/;"	l
c0107e81	obj/kernel.asm	/^c0107e81 <basic_check>:$/;"	l
c0107e81	obj/kernel.asm	/^c0107e81:	55                   	push   %ebp$/;"	l
c0107e82	obj/kernel.asm	/^c0107e82:	89 e5                	mov    %esp,%ebp$/;"	l
c0107e84	obj/kernel.asm	/^c0107e84:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0107e87	obj/kernel.asm	/^c0107e87:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0107e8e	obj/kernel.asm	/^c0107e8e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0107e91	obj/kernel.asm	/^c0107e91:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107e94	obj/kernel.asm	/^c0107e94:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107e97	obj/kernel.asm	/^c0107e97:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107e9a	obj/kernel.asm	/^c0107e9a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107e9d	obj/kernel.asm	/^c0107e9d:	6a 01                	push   $0x1$/;"	l
c0107e9f	obj/kernel.asm	/^c0107e9f:	e8 6a b9 ff ff       	call   c010380e <alloc_pages>$/;"	l
c0107ea4	obj/kernel.asm	/^c0107ea4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107ea7	obj/kernel.asm	/^c0107ea7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0107eaa	obj/kernel.asm	/^c0107eaa:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0107eae	obj/kernel.asm	/^c0107eae:	75 19                	jne    c0107ec9 <basic_check+0x48>$/;"	l
c0107eb0	obj/kernel.asm	/^c0107eb0:	68 a4 5c 11 c0       	push   $0xc0115ca4$/;"	l
c0107eb5	obj/kernel.asm	/^c0107eb5:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0107eba	obj/kernel.asm	/^c0107eba:	68 ad 00 00 00       	push   $0xad$/;"	l
c0107ebf	obj/kernel.asm	/^c0107ebf:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0107ec4	obj/kernel.asm	/^c0107ec4:	e8 06 86 ff ff       	call   c01004cf <__panic>$/;"	l
c0107ec9	obj/kernel.asm	/^c0107ec9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107ecc	obj/kernel.asm	/^c0107ecc:	6a 01                	push   $0x1$/;"	l
c0107ece	obj/kernel.asm	/^c0107ece:	e8 3b b9 ff ff       	call   c010380e <alloc_pages>$/;"	l
c0107ed3	obj/kernel.asm	/^c0107ed3:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107ed6	obj/kernel.asm	/^c0107ed6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0107ed9	obj/kernel.asm	/^c0107ed9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0107edd	obj/kernel.asm	/^c0107edd:	75 19                	jne    c0107ef8 <basic_check+0x77>$/;"	l
c0107edf	obj/kernel.asm	/^c0107edf:	68 c0 5c 11 c0       	push   $0xc0115cc0$/;"	l
c0107ee4	obj/kernel.asm	/^c0107ee4:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0107ee9	obj/kernel.asm	/^c0107ee9:	68 ae 00 00 00       	push   $0xae$/;"	l
c0107eee	obj/kernel.asm	/^c0107eee:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0107ef3	obj/kernel.asm	/^c0107ef3:	e8 d7 85 ff ff       	call   c01004cf <__panic>$/;"	l
c0107ef8	obj/kernel.asm	/^c0107ef8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107efb	obj/kernel.asm	/^c0107efb:	6a 01                	push   $0x1$/;"	l
c0107efd	obj/kernel.asm	/^c0107efd:	e8 0c b9 ff ff       	call   c010380e <alloc_pages>$/;"	l
c0107f02	obj/kernel.asm	/^c0107f02:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107f05	obj/kernel.asm	/^c0107f05:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0107f08	obj/kernel.asm	/^c0107f08:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0107f0c	obj/kernel.asm	/^c0107f0c:	75 19                	jne    c0107f27 <basic_check+0xa6>$/;"	l
c0107f0e	obj/kernel.asm	/^c0107f0e:	68 dc 5c 11 c0       	push   $0xc0115cdc$/;"	l
c0107f13	obj/kernel.asm	/^c0107f13:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0107f18	obj/kernel.asm	/^c0107f18:	68 af 00 00 00       	push   $0xaf$/;"	l
c0107f1d	obj/kernel.asm	/^c0107f1d:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0107f22	obj/kernel.asm	/^c0107f22:	e8 a8 85 ff ff       	call   c01004cf <__panic>$/;"	l
c0107f27	obj/kernel.asm	/^c0107f27:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107f2a	obj/kernel.asm	/^c0107f2a:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0107f2d	obj/kernel.asm	/^c0107f2d:	74 10                	je     c0107f3f <basic_check+0xbe>$/;"	l
c0107f2f	obj/kernel.asm	/^c0107f2f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0107f32	obj/kernel.asm	/^c0107f32:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107f35	obj/kernel.asm	/^c0107f35:	74 08                	je     c0107f3f <basic_check+0xbe>$/;"	l
c0107f37	obj/kernel.asm	/^c0107f37:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0107f3a	obj/kernel.asm	/^c0107f3a:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0107f3d	obj/kernel.asm	/^c0107f3d:	75 19                	jne    c0107f58 <basic_check+0xd7>$/;"	l
c0107f3f	obj/kernel.asm	/^c0107f3f:	68 f8 5c 11 c0       	push   $0xc0115cf8$/;"	l
c0107f44	obj/kernel.asm	/^c0107f44:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0107f49	obj/kernel.asm	/^c0107f49:	68 b1 00 00 00       	push   $0xb1$/;"	l
c0107f4e	obj/kernel.asm	/^c0107f4e:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0107f53	obj/kernel.asm	/^c0107f53:	e8 77 85 ff ff       	call   c01004cf <__panic>$/;"	l
c0107f58	obj/kernel.asm	/^c0107f58:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107f5b	obj/kernel.asm	/^c0107f5b:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0107f5e	obj/kernel.asm	/^c0107f5e:	e8 0b fa ff ff       	call   c010796e <page_ref>$/;"	l
c0107f63	obj/kernel.asm	/^c0107f63:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107f66	obj/kernel.asm	/^c0107f66:	85 c0                	test   %eax,%eax$/;"	l
c0107f68	obj/kernel.asm	/^c0107f68:	75 24                	jne    c0107f8e <basic_check+0x10d>$/;"	l
c0107f6a	obj/kernel.asm	/^c0107f6a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107f6d	obj/kernel.asm	/^c0107f6d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0107f70	obj/kernel.asm	/^c0107f70:	e8 f9 f9 ff ff       	call   c010796e <page_ref>$/;"	l
c0107f75	obj/kernel.asm	/^c0107f75:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107f78	obj/kernel.asm	/^c0107f78:	85 c0                	test   %eax,%eax$/;"	l
c0107f7a	obj/kernel.asm	/^c0107f7a:	75 12                	jne    c0107f8e <basic_check+0x10d>$/;"	l
c0107f7c	obj/kernel.asm	/^c0107f7c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107f7f	obj/kernel.asm	/^c0107f7f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0107f82	obj/kernel.asm	/^c0107f82:	e8 e7 f9 ff ff       	call   c010796e <page_ref>$/;"	l
c0107f87	obj/kernel.asm	/^c0107f87:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107f8a	obj/kernel.asm	/^c0107f8a:	85 c0                	test   %eax,%eax$/;"	l
c0107f8c	obj/kernel.asm	/^c0107f8c:	74 19                	je     c0107fa7 <basic_check+0x126>$/;"	l
c0107f8e	obj/kernel.asm	/^c0107f8e:	68 1c 5d 11 c0       	push   $0xc0115d1c$/;"	l
c0107f93	obj/kernel.asm	/^c0107f93:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0107f98	obj/kernel.asm	/^c0107f98:	68 b2 00 00 00       	push   $0xb2$/;"	l
c0107f9d	obj/kernel.asm	/^c0107f9d:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0107fa2	obj/kernel.asm	/^c0107fa2:	e8 28 85 ff ff       	call   c01004cf <__panic>$/;"	l
c0107fa7	obj/kernel.asm	/^c0107fa7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107faa	obj/kernel.asm	/^c0107faa:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0107fad	obj/kernel.asm	/^c0107fad:	e8 a9 f9 ff ff       	call   c010795b <page2pa>$/;"	l
c0107fb2	obj/kernel.asm	/^c0107fb2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107fb5	obj/kernel.asm	/^c0107fb5:	89 c2                	mov    %eax,%edx$/;"	l
c0107fb7	obj/kernel.asm	/^c0107fb7:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c0107fbc	obj/kernel.asm	/^c0107fbc:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0107fbf	obj/kernel.asm	/^c0107fbf:	39 c2                	cmp    %eax,%edx$/;"	l
c0107fc1	obj/kernel.asm	/^c0107fc1:	72 19                	jb     c0107fdc <basic_check+0x15b>$/;"	l
c0107fc3	obj/kernel.asm	/^c0107fc3:	68 58 5d 11 c0       	push   $0xc0115d58$/;"	l
c0107fc8	obj/kernel.asm	/^c0107fc8:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0107fcd	obj/kernel.asm	/^c0107fcd:	68 b4 00 00 00       	push   $0xb4$/;"	l
c0107fd2	obj/kernel.asm	/^c0107fd2:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0107fd7	obj/kernel.asm	/^c0107fd7:	e8 f3 84 ff ff       	call   c01004cf <__panic>$/;"	l
c0107fdc	obj/kernel.asm	/^c0107fdc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0107fdf	obj/kernel.asm	/^c0107fdf:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0107fe2	obj/kernel.asm	/^c0107fe2:	e8 74 f9 ff ff       	call   c010795b <page2pa>$/;"	l
c0107fe7	obj/kernel.asm	/^c0107fe7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0107fea	obj/kernel.asm	/^c0107fea:	89 c2                	mov    %eax,%edx$/;"	l
c0107fec	obj/kernel.asm	/^c0107fec:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c0107ff1	obj/kernel.asm	/^c0107ff1:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0107ff4	obj/kernel.asm	/^c0107ff4:	39 c2                	cmp    %eax,%edx$/;"	l
c0107ff6	obj/kernel.asm	/^c0107ff6:	72 19                	jb     c0108011 <basic_check+0x190>$/;"	l
c0107ff8	obj/kernel.asm	/^c0107ff8:	68 75 5d 11 c0       	push   $0xc0115d75$/;"	l
c0107ffd	obj/kernel.asm	/^c0107ffd:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0108002	obj/kernel.asm	/^c0108002:	68 b5 00 00 00       	push   $0xb5$/;"	l
c0108007	obj/kernel.asm	/^c0108007:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c010800c	obj/kernel.asm	/^c010800c:	e8 be 84 ff ff       	call   c01004cf <__panic>$/;"	l
c0108011	obj/kernel.asm	/^c0108011:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108014	obj/kernel.asm	/^c0108014:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108017	obj/kernel.asm	/^c0108017:	e8 3f f9 ff ff       	call   c010795b <page2pa>$/;"	l
c010801c	obj/kernel.asm	/^c010801c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010801f	obj/kernel.asm	/^c010801f:	89 c2                	mov    %eax,%edx$/;"	l
c0108021	obj/kernel.asm	/^c0108021:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c0108026	obj/kernel.asm	/^c0108026:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c0108029	obj/kernel.asm	/^c0108029:	39 c2                	cmp    %eax,%edx$/;"	l
c010802b	obj/kernel.asm	/^c010802b:	72 19                	jb     c0108046 <basic_check+0x1c5>$/;"	l
c010802d	obj/kernel.asm	/^c010802d:	68 92 5d 11 c0       	push   $0xc0115d92$/;"	l
c0108032	obj/kernel.asm	/^c0108032:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0108037	obj/kernel.asm	/^c0108037:	68 b6 00 00 00       	push   $0xb6$/;"	l
c010803c	obj/kernel.asm	/^c010803c:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0108041	obj/kernel.asm	/^c0108041:	e8 89 84 ff ff       	call   c01004cf <__panic>$/;"	l
c0108046	obj/kernel.asm	/^c0108046:	a1 8c 22 15 c0       	mov    0xc015228c,%eax$/;"	l
c010804b	obj/kernel.asm	/^c010804b:	8b 15 90 22 15 c0    	mov    0xc0152290,%edx$/;"	l
c0108051	obj/kernel.asm	/^c0108051:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0108054	obj/kernel.asm	/^c0108054:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0108057	obj/kernel.asm	/^c0108057:	c7 45 e0 8c 22 15 c0 	movl   $0xc015228c,-0x20(%ebp)$/;"	l
c010805e	obj/kernel.asm	/^c010805e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108061	obj/kernel.asm	/^c0108061:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0108064	obj/kernel.asm	/^c0108064:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108067	obj/kernel.asm	/^c0108067:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010806a	obj/kernel.asm	/^c010806a:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010806d	obj/kernel.asm	/^c010806d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108070	obj/kernel.asm	/^c0108070:	89 10                	mov    %edx,(%eax)$/;"	l
c0108072	obj/kernel.asm	/^c0108072:	c7 45 dc 8c 22 15 c0 	movl   $0xc015228c,-0x24(%ebp)$/;"	l
c0108079	obj/kernel.asm	/^c0108079:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010807c	obj/kernel.asm	/^c010807c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010807f	obj/kernel.asm	/^c010807f:	39 45 dc             	cmp    %eax,-0x24(%ebp)$/;"	l
c0108082	obj/kernel.asm	/^c0108082:	0f 94 c0             	sete   %al$/;"	l
c0108085	obj/kernel.asm	/^c0108085:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108088	obj/kernel.asm	/^c0108088:	85 c0                	test   %eax,%eax$/;"	l
c010808a	obj/kernel.asm	/^c010808a:	75 19                	jne    c01080a5 <basic_check+0x224>$/;"	l
c010808c	obj/kernel.asm	/^c010808c:	68 af 5d 11 c0       	push   $0xc0115daf$/;"	l
c0108091	obj/kernel.asm	/^c0108091:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0108096	obj/kernel.asm	/^c0108096:	68 ba 00 00 00       	push   $0xba$/;"	l
c010809b	obj/kernel.asm	/^c010809b:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c01080a0	obj/kernel.asm	/^c01080a0:	e8 2a 84 ff ff       	call   c01004cf <__panic>$/;"	l
c01080a5	obj/kernel.asm	/^c01080a5:	a1 94 22 15 c0       	mov    0xc0152294,%eax$/;"	l
c01080aa	obj/kernel.asm	/^c01080aa:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01080ad	obj/kernel.asm	/^c01080ad:	c7 05 94 22 15 c0 00 	movl   $0x0,0xc0152294$/;"	l
c01080b4	obj/kernel.asm	/^c01080b4:	00 00 00 $/;"	l
c01080b7	obj/kernel.asm	/^c01080b7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01080ba	obj/kernel.asm	/^c01080ba:	6a 01                	push   $0x1$/;"	l
c01080bc	obj/kernel.asm	/^c01080bc:	e8 4d b7 ff ff       	call   c010380e <alloc_pages>$/;"	l
c01080c1	obj/kernel.asm	/^c01080c1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01080c4	obj/kernel.asm	/^c01080c4:	85 c0                	test   %eax,%eax$/;"	l
c01080c6	obj/kernel.asm	/^c01080c6:	74 19                	je     c01080e1 <basic_check+0x260>$/;"	l
c01080c8	obj/kernel.asm	/^c01080c8:	68 c6 5d 11 c0       	push   $0xc0115dc6$/;"	l
c01080cd	obj/kernel.asm	/^c01080cd:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c01080d2	obj/kernel.asm	/^c01080d2:	68 bf 00 00 00       	push   $0xbf$/;"	l
c01080d7	obj/kernel.asm	/^c01080d7:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c01080dc	obj/kernel.asm	/^c01080dc:	e8 ee 83 ff ff       	call   c01004cf <__panic>$/;"	l
c01080e1	obj/kernel.asm	/^c01080e1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01080e4	obj/kernel.asm	/^c01080e4:	6a 01                	push   $0x1$/;"	l
c01080e6	obj/kernel.asm	/^c01080e6:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01080e9	obj/kernel.asm	/^c01080e9:	e8 8c b7 ff ff       	call   c010387a <free_pages>$/;"	l
c01080ee	obj/kernel.asm	/^c01080ee:	83 c4 10             	add    $0x10,%esp$/;"	l
c01080f1	obj/kernel.asm	/^c01080f1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01080f4	obj/kernel.asm	/^c01080f4:	6a 01                	push   $0x1$/;"	l
c01080f6	obj/kernel.asm	/^c01080f6:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01080f9	obj/kernel.asm	/^c01080f9:	e8 7c b7 ff ff       	call   c010387a <free_pages>$/;"	l
c01080fe	obj/kernel.asm	/^c01080fe:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108101	obj/kernel.asm	/^c0108101:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108104	obj/kernel.asm	/^c0108104:	6a 01                	push   $0x1$/;"	l
c0108106	obj/kernel.asm	/^c0108106:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108109	obj/kernel.asm	/^c0108109:	e8 6c b7 ff ff       	call   c010387a <free_pages>$/;"	l
c010810e	obj/kernel.asm	/^c010810e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108111	obj/kernel.asm	/^c0108111:	a1 94 22 15 c0       	mov    0xc0152294,%eax$/;"	l
c0108116	obj/kernel.asm	/^c0108116:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0108119	obj/kernel.asm	/^c0108119:	74 19                	je     c0108134 <basic_check+0x2b3>$/;"	l
c010811b	obj/kernel.asm	/^c010811b:	68 db 5d 11 c0       	push   $0xc0115ddb$/;"	l
c0108120	obj/kernel.asm	/^c0108120:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0108125	obj/kernel.asm	/^c0108125:	68 c4 00 00 00       	push   $0xc4$/;"	l
c010812a	obj/kernel.asm	/^c010812a:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c010812f	obj/kernel.asm	/^c010812f:	e8 9b 83 ff ff       	call   c01004cf <__panic>$/;"	l
c0108134	obj/kernel.asm	/^c0108134:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108137	obj/kernel.asm	/^c0108137:	6a 01                	push   $0x1$/;"	l
c0108139	obj/kernel.asm	/^c0108139:	e8 d0 b6 ff ff       	call   c010380e <alloc_pages>$/;"	l
c010813e	obj/kernel.asm	/^c010813e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108141	obj/kernel.asm	/^c0108141:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108144	obj/kernel.asm	/^c0108144:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0108148	obj/kernel.asm	/^c0108148:	75 19                	jne    c0108163 <basic_check+0x2e2>$/;"	l
c010814a	obj/kernel.asm	/^c010814a:	68 a4 5c 11 c0       	push   $0xc0115ca4$/;"	l
c010814f	obj/kernel.asm	/^c010814f:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0108154	obj/kernel.asm	/^c0108154:	68 c6 00 00 00       	push   $0xc6$/;"	l
c0108159	obj/kernel.asm	/^c0108159:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c010815e	obj/kernel.asm	/^c010815e:	e8 6c 83 ff ff       	call   c01004cf <__panic>$/;"	l
c0108163	obj/kernel.asm	/^c0108163:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108166	obj/kernel.asm	/^c0108166:	6a 01                	push   $0x1$/;"	l
c0108168	obj/kernel.asm	/^c0108168:	e8 a1 b6 ff ff       	call   c010380e <alloc_pages>$/;"	l
c010816d	obj/kernel.asm	/^c010816d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108170	obj/kernel.asm	/^c0108170:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108173	obj/kernel.asm	/^c0108173:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0108177	obj/kernel.asm	/^c0108177:	75 19                	jne    c0108192 <basic_check+0x311>$/;"	l
c0108179	obj/kernel.asm	/^c0108179:	68 c0 5c 11 c0       	push   $0xc0115cc0$/;"	l
c010817e	obj/kernel.asm	/^c010817e:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0108183	obj/kernel.asm	/^c0108183:	68 c7 00 00 00       	push   $0xc7$/;"	l
c0108188	obj/kernel.asm	/^c0108188:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c010818d	obj/kernel.asm	/^c010818d:	e8 3d 83 ff ff       	call   c01004cf <__panic>$/;"	l
c0108192	obj/kernel.asm	/^c0108192:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108195	obj/kernel.asm	/^c0108195:	6a 01                	push   $0x1$/;"	l
c0108197	obj/kernel.asm	/^c0108197:	e8 72 b6 ff ff       	call   c010380e <alloc_pages>$/;"	l
c010819c	obj/kernel.asm	/^c010819c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010819f	obj/kernel.asm	/^c010819f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01081a2	obj/kernel.asm	/^c01081a2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01081a6	obj/kernel.asm	/^c01081a6:	75 19                	jne    c01081c1 <basic_check+0x340>$/;"	l
c01081a8	obj/kernel.asm	/^c01081a8:	68 dc 5c 11 c0       	push   $0xc0115cdc$/;"	l
c01081ad	obj/kernel.asm	/^c01081ad:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c01081b2	obj/kernel.asm	/^c01081b2:	68 c8 00 00 00       	push   $0xc8$/;"	l
c01081b7	obj/kernel.asm	/^c01081b7:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c01081bc	obj/kernel.asm	/^c01081bc:	e8 0e 83 ff ff       	call   c01004cf <__panic>$/;"	l
c01081c1	obj/kernel.asm	/^c01081c1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01081c4	obj/kernel.asm	/^c01081c4:	6a 01                	push   $0x1$/;"	l
c01081c6	obj/kernel.asm	/^c01081c6:	e8 43 b6 ff ff       	call   c010380e <alloc_pages>$/;"	l
c01081cb	obj/kernel.asm	/^c01081cb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01081ce	obj/kernel.asm	/^c01081ce:	85 c0                	test   %eax,%eax$/;"	l
c01081d0	obj/kernel.asm	/^c01081d0:	74 19                	je     c01081eb <basic_check+0x36a>$/;"	l
c01081d2	obj/kernel.asm	/^c01081d2:	68 c6 5d 11 c0       	push   $0xc0115dc6$/;"	l
c01081d7	obj/kernel.asm	/^c01081d7:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c01081dc	obj/kernel.asm	/^c01081dc:	68 ca 00 00 00       	push   $0xca$/;"	l
c01081e1	obj/kernel.asm	/^c01081e1:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c01081e6	obj/kernel.asm	/^c01081e6:	e8 e4 82 ff ff       	call   c01004cf <__panic>$/;"	l
c01081eb	obj/kernel.asm	/^c01081eb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01081ee	obj/kernel.asm	/^c01081ee:	6a 01                	push   $0x1$/;"	l
c01081f0	obj/kernel.asm	/^c01081f0:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01081f3	obj/kernel.asm	/^c01081f3:	e8 82 b6 ff ff       	call   c010387a <free_pages>$/;"	l
c01081f8	obj/kernel.asm	/^c01081f8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01081fb	obj/kernel.asm	/^c01081fb:	c7 45 d8 8c 22 15 c0 	movl   $0xc015228c,-0x28(%ebp)$/;"	l
c0108202	obj/kernel.asm	/^c0108202:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0108205	obj/kernel.asm	/^c0108205:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108208	obj/kernel.asm	/^c0108208:	39 45 d8             	cmp    %eax,-0x28(%ebp)$/;"	l
c010820b	obj/kernel.asm	/^c010820b:	0f 94 c0             	sete   %al$/;"	l
c010820e	obj/kernel.asm	/^c010820e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108211	obj/kernel.asm	/^c0108211:	85 c0                	test   %eax,%eax$/;"	l
c0108213	obj/kernel.asm	/^c0108213:	74 19                	je     c010822e <basic_check+0x3ad>$/;"	l
c0108215	obj/kernel.asm	/^c0108215:	68 e8 5d 11 c0       	push   $0xc0115de8$/;"	l
c010821a	obj/kernel.asm	/^c010821a:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c010821f	obj/kernel.asm	/^c010821f:	68 cd 00 00 00       	push   $0xcd$/;"	l
c0108224	obj/kernel.asm	/^c0108224:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0108229	obj/kernel.asm	/^c0108229:	e8 a1 82 ff ff       	call   c01004cf <__panic>$/;"	l
c010822e	obj/kernel.asm	/^c010822e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108231	obj/kernel.asm	/^c0108231:	6a 01                	push   $0x1$/;"	l
c0108233	obj/kernel.asm	/^c0108233:	e8 d6 b5 ff ff       	call   c010380e <alloc_pages>$/;"	l
c0108238	obj/kernel.asm	/^c0108238:	83 c4 10             	add    $0x10,%esp$/;"	l
c010823b	obj/kernel.asm	/^c010823b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010823e	obj/kernel.asm	/^c010823e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108241	obj/kernel.asm	/^c0108241:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0108244	obj/kernel.asm	/^c0108244:	74 19                	je     c010825f <basic_check+0x3de>$/;"	l
c0108246	obj/kernel.asm	/^c0108246:	68 00 5e 11 c0       	push   $0xc0115e00$/;"	l
c010824b	obj/kernel.asm	/^c010824b:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0108250	obj/kernel.asm	/^c0108250:	68 d0 00 00 00       	push   $0xd0$/;"	l
c0108255	obj/kernel.asm	/^c0108255:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c010825a	obj/kernel.asm	/^c010825a:	e8 70 82 ff ff       	call   c01004cf <__panic>$/;"	l
c010825f	obj/kernel.asm	/^c010825f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108262	obj/kernel.asm	/^c0108262:	6a 01                	push   $0x1$/;"	l
c0108264	obj/kernel.asm	/^c0108264:	e8 a5 b5 ff ff       	call   c010380e <alloc_pages>$/;"	l
c0108269	obj/kernel.asm	/^c0108269:	83 c4 10             	add    $0x10,%esp$/;"	l
c010826c	obj/kernel.asm	/^c010826c:	85 c0                	test   %eax,%eax$/;"	l
c010826e	obj/kernel.asm	/^c010826e:	74 19                	je     c0108289 <basic_check+0x408>$/;"	l
c0108270	obj/kernel.asm	/^c0108270:	68 c6 5d 11 c0       	push   $0xc0115dc6$/;"	l
c0108275	obj/kernel.asm	/^c0108275:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c010827a	obj/kernel.asm	/^c010827a:	68 d1 00 00 00       	push   $0xd1$/;"	l
c010827f	obj/kernel.asm	/^c010827f:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0108284	obj/kernel.asm	/^c0108284:	e8 46 82 ff ff       	call   c01004cf <__panic>$/;"	l
c0108289	obj/kernel.asm	/^c0108289:	a1 94 22 15 c0       	mov    0xc0152294,%eax$/;"	l
c010828e	obj/kernel.asm	/^c010828e:	85 c0                	test   %eax,%eax$/;"	l
c0108290	obj/kernel.asm	/^c0108290:	74 19                	je     c01082ab <basic_check+0x42a>$/;"	l
c0108292	obj/kernel.asm	/^c0108292:	68 19 5e 11 c0       	push   $0xc0115e19$/;"	l
c0108297	obj/kernel.asm	/^c0108297:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c010829c	obj/kernel.asm	/^c010829c:	68 d3 00 00 00       	push   $0xd3$/;"	l
c01082a1	obj/kernel.asm	/^c01082a1:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c01082a6	obj/kernel.asm	/^c01082a6:	e8 24 82 ff ff       	call   c01004cf <__panic>$/;"	l
c01082ab	obj/kernel.asm	/^c01082ab:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c01082ae	obj/kernel.asm	/^c01082ae:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c01082b1	obj/kernel.asm	/^c01082b1:	a3 8c 22 15 c0       	mov    %eax,0xc015228c$/;"	l
c01082b6	obj/kernel.asm	/^c01082b6:	89 15 90 22 15 c0    	mov    %edx,0xc0152290$/;"	l
c01082bc	obj/kernel.asm	/^c01082bc:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01082bf	obj/kernel.asm	/^c01082bf:	a3 94 22 15 c0       	mov    %eax,0xc0152294$/;"	l
c01082c4	obj/kernel.asm	/^c01082c4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01082c7	obj/kernel.asm	/^c01082c7:	6a 01                	push   $0x1$/;"	l
c01082c9	obj/kernel.asm	/^c01082c9:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01082cc	obj/kernel.asm	/^c01082cc:	e8 a9 b5 ff ff       	call   c010387a <free_pages>$/;"	l
c01082d1	obj/kernel.asm	/^c01082d1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01082d4	obj/kernel.asm	/^c01082d4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01082d7	obj/kernel.asm	/^c01082d7:	6a 01                	push   $0x1$/;"	l
c01082d9	obj/kernel.asm	/^c01082d9:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01082dc	obj/kernel.asm	/^c01082dc:	e8 99 b5 ff ff       	call   c010387a <free_pages>$/;"	l
c01082e1	obj/kernel.asm	/^c01082e1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01082e4	obj/kernel.asm	/^c01082e4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01082e7	obj/kernel.asm	/^c01082e7:	6a 01                	push   $0x1$/;"	l
c01082e9	obj/kernel.asm	/^c01082e9:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01082ec	obj/kernel.asm	/^c01082ec:	e8 89 b5 ff ff       	call   c010387a <free_pages>$/;"	l
c01082f1	obj/kernel.asm	/^c01082f1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01082f4	obj/kernel.asm	/^c01082f4:	c9                   	leave  $/;"	l
c01082f5	obj/kernel.asm	/^c01082f5:	c3                   	ret    $/;"	l
c01082f6	obj/kernel.asm	/^c01082f6 <default_check>:$/;"	l
c01082f6	obj/kernel.asm	/^c01082f6:	55                   	push   %ebp$/;"	l
c01082f7	obj/kernel.asm	/^c01082f7:	89 e5                	mov    %esp,%ebp$/;"	l
c01082f9	obj/kernel.asm	/^c01082f9:	53                   	push   %ebx$/;"	l
c01082fa	obj/kernel.asm	/^c01082fa:	81 ec 84 00 00 00    	sub    $0x84,%esp$/;"	l
c0108300	obj/kernel.asm	/^c0108300:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108307	obj/kernel.asm	/^c0108307:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010830e	obj/kernel.asm	/^c010830e:	c7 45 ec 8c 22 15 c0 	movl   $0xc015228c,-0x14(%ebp)$/;"	l
c0108315	obj/kernel.asm	/^c0108315:	eb 60                	jmp    c0108377 <default_check+0x81>$/;"	l
c0108317	obj/kernel.asm	/^c0108317:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010831a	obj/kernel.asm	/^c010831a:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010831d	obj/kernel.asm	/^c010831d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0108320	obj/kernel.asm	/^c0108320:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108323	obj/kernel.asm	/^c0108323:	83 c0 04             	add    $0x4,%eax$/;"	l
c0108326	obj/kernel.asm	/^c0108326:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%ebp)$/;"	l
c010832d	obj/kernel.asm	/^c010832d:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0108330	obj/kernel.asm	/^c0108330:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0108333	obj/kernel.asm	/^c0108333:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0108336	obj/kernel.asm	/^c0108336:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0108339	obj/kernel.asm	/^c0108339:	19 c0                	sbb    %eax,%eax$/;"	l
c010833b	obj/kernel.asm	/^c010833b:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010833e	obj/kernel.asm	/^c010833e:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c0108342	obj/kernel.asm	/^c0108342:	0f 95 c0             	setne  %al$/;"	l
c0108345	obj/kernel.asm	/^c0108345:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108348	obj/kernel.asm	/^c0108348:	85 c0                	test   %eax,%eax$/;"	l
c010834a	obj/kernel.asm	/^c010834a:	75 19                	jne    c0108365 <default_check+0x6f>$/;"	l
c010834c	obj/kernel.asm	/^c010834c:	68 26 5e 11 c0       	push   $0xc0115e26$/;"	l
c0108351	obj/kernel.asm	/^c0108351:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0108356	obj/kernel.asm	/^c0108356:	68 e4 00 00 00       	push   $0xe4$/;"	l
c010835b	obj/kernel.asm	/^c010835b:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0108360	obj/kernel.asm	/^c0108360:	e8 6a 81 ff ff       	call   c01004cf <__panic>$/;"	l
c0108365	obj/kernel.asm	/^c0108365:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108369	obj/kernel.asm	/^c0108369:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010836c	obj/kernel.asm	/^c010836c:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010836f	obj/kernel.asm	/^c010836f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108372	obj/kernel.asm	/^c0108372:	01 d0                	add    %edx,%eax$/;"	l
c0108374	obj/kernel.asm	/^c0108374:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108377	obj/kernel.asm	/^c0108377:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010837a	obj/kernel.asm	/^c010837a:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010837d	obj/kernel.asm	/^c010837d:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0108380	obj/kernel.asm	/^c0108380:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108383	obj/kernel.asm	/^c0108383:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108386	obj/kernel.asm	/^c0108386:	81 7d ec 8c 22 15 c0 	cmpl   $0xc015228c,-0x14(%ebp)$/;"	l
c010838d	obj/kernel.asm	/^c010838d:	75 88                	jne    c0108317 <default_check+0x21>$/;"	l
c010838f	obj/kernel.asm	/^c010838f:	8b 5d f0             	mov    -0x10(%ebp),%ebx$/;"	l
c0108392	obj/kernel.asm	/^c0108392:	e8 17 b5 ff ff       	call   c01038ae <nr_free_pages>$/;"	l
c0108397	obj/kernel.asm	/^c0108397:	39 c3                	cmp    %eax,%ebx$/;"	l
c0108399	obj/kernel.asm	/^c0108399:	74 19                	je     c01083b4 <default_check+0xbe>$/;"	l
c010839b	obj/kernel.asm	/^c010839b:	68 36 5e 11 c0       	push   $0xc0115e36$/;"	l
c01083a0	obj/kernel.asm	/^c01083a0:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c01083a5	obj/kernel.asm	/^c01083a5:	68 e7 00 00 00       	push   $0xe7$/;"	l
c01083aa	obj/kernel.asm	/^c01083aa:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c01083af	obj/kernel.asm	/^c01083af:	e8 1b 81 ff ff       	call   c01004cf <__panic>$/;"	l
c01083b4	obj/kernel.asm	/^c01083b4:	e8 c8 fa ff ff       	call   c0107e81 <basic_check>$/;"	l
c01083b9	obj/kernel.asm	/^c01083b9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01083bc	obj/kernel.asm	/^c01083bc:	6a 05                	push   $0x5$/;"	l
c01083be	obj/kernel.asm	/^c01083be:	e8 4b b4 ff ff       	call   c010380e <alloc_pages>$/;"	l
c01083c3	obj/kernel.asm	/^c01083c3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01083c6	obj/kernel.asm	/^c01083c6:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01083c9	obj/kernel.asm	/^c01083c9:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01083cd	obj/kernel.asm	/^c01083cd:	75 19                	jne    c01083e8 <default_check+0xf2>$/;"	l
c01083cf	obj/kernel.asm	/^c01083cf:	68 4f 5e 11 c0       	push   $0xc0115e4f$/;"	l
c01083d4	obj/kernel.asm	/^c01083d4:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c01083d9	obj/kernel.asm	/^c01083d9:	68 ec 00 00 00       	push   $0xec$/;"	l
c01083de	obj/kernel.asm	/^c01083de:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c01083e3	obj/kernel.asm	/^c01083e3:	e8 e7 80 ff ff       	call   c01004cf <__panic>$/;"	l
c01083e8	obj/kernel.asm	/^c01083e8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01083eb	obj/kernel.asm	/^c01083eb:	83 c0 04             	add    $0x4,%eax$/;"	l
c01083ee	obj/kernel.asm	/^c01083ee:	c7 45 c0 01 00 00 00 	movl   $0x1,-0x40(%ebp)$/;"	l
c01083f5	obj/kernel.asm	/^c01083f5:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c01083f8	obj/kernel.asm	/^c01083f8:	8b 45 bc             	mov    -0x44(%ebp),%eax$/;"	l
c01083fb	obj/kernel.asm	/^c01083fb:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c01083fe	obj/kernel.asm	/^c01083fe:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0108401	obj/kernel.asm	/^c0108401:	19 c0                	sbb    %eax,%eax$/;"	l
c0108403	obj/kernel.asm	/^c0108403:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0108406	obj/kernel.asm	/^c0108406:	83 7d b8 00          	cmpl   $0x0,-0x48(%ebp)$/;"	l
c010840a	obj/kernel.asm	/^c010840a:	0f 95 c0             	setne  %al$/;"	l
c010840d	obj/kernel.asm	/^c010840d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108410	obj/kernel.asm	/^c0108410:	85 c0                	test   %eax,%eax$/;"	l
c0108412	obj/kernel.asm	/^c0108412:	74 19                	je     c010842d <default_check+0x137>$/;"	l
c0108414	obj/kernel.asm	/^c0108414:	68 5a 5e 11 c0       	push   $0xc0115e5a$/;"	l
c0108419	obj/kernel.asm	/^c0108419:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c010841e	obj/kernel.asm	/^c010841e:	68 ed 00 00 00       	push   $0xed$/;"	l
c0108423	obj/kernel.asm	/^c0108423:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0108428	obj/kernel.asm	/^c0108428:	e8 a2 80 ff ff       	call   c01004cf <__panic>$/;"	l
c010842d	obj/kernel.asm	/^c010842d:	a1 8c 22 15 c0       	mov    0xc015228c,%eax$/;"	l
c0108432	obj/kernel.asm	/^c0108432:	8b 15 90 22 15 c0    	mov    0xc0152290,%edx$/;"	l
c0108438	obj/kernel.asm	/^c0108438:	89 45 80             	mov    %eax,-0x80(%ebp)$/;"	l
c010843b	obj/kernel.asm	/^c010843b:	89 55 84             	mov    %edx,-0x7c(%ebp)$/;"	l
c010843e	obj/kernel.asm	/^c010843e:	c7 45 b4 8c 22 15 c0 	movl   $0xc015228c,-0x4c(%ebp)$/;"	l
c0108445	obj/kernel.asm	/^c0108445:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0108448	obj/kernel.asm	/^c0108448:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c010844b	obj/kernel.asm	/^c010844b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010844e	obj/kernel.asm	/^c010844e:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0108451	obj/kernel.asm	/^c0108451:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108454	obj/kernel.asm	/^c0108454:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0108457	obj/kernel.asm	/^c0108457:	89 10                	mov    %edx,(%eax)$/;"	l
c0108459	obj/kernel.asm	/^c0108459:	c7 45 b0 8c 22 15 c0 	movl   $0xc015228c,-0x50(%ebp)$/;"	l
c0108460	obj/kernel.asm	/^c0108460:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0108463	obj/kernel.asm	/^c0108463:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108466	obj/kernel.asm	/^c0108466:	39 45 b0             	cmp    %eax,-0x50(%ebp)$/;"	l
c0108469	obj/kernel.asm	/^c0108469:	0f 94 c0             	sete   %al$/;"	l
c010846c	obj/kernel.asm	/^c010846c:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010846f	obj/kernel.asm	/^c010846f:	85 c0                	test   %eax,%eax$/;"	l
c0108471	obj/kernel.asm	/^c0108471:	75 19                	jne    c010848c <default_check+0x196>$/;"	l
c0108473	obj/kernel.asm	/^c0108473:	68 af 5d 11 c0       	push   $0xc0115daf$/;"	l
c0108478	obj/kernel.asm	/^c0108478:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c010847d	obj/kernel.asm	/^c010847d:	68 f1 00 00 00       	push   $0xf1$/;"	l
c0108482	obj/kernel.asm	/^c0108482:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0108487	obj/kernel.asm	/^c0108487:	e8 43 80 ff ff       	call   c01004cf <__panic>$/;"	l
c010848c	obj/kernel.asm	/^c010848c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010848f	obj/kernel.asm	/^c010848f:	6a 01                	push   $0x1$/;"	l
c0108491	obj/kernel.asm	/^c0108491:	e8 78 b3 ff ff       	call   c010380e <alloc_pages>$/;"	l
c0108496	obj/kernel.asm	/^c0108496:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108499	obj/kernel.asm	/^c0108499:	85 c0                	test   %eax,%eax$/;"	l
c010849b	obj/kernel.asm	/^c010849b:	74 19                	je     c01084b6 <default_check+0x1c0>$/;"	l
c010849d	obj/kernel.asm	/^c010849d:	68 c6 5d 11 c0       	push   $0xc0115dc6$/;"	l
c01084a2	obj/kernel.asm	/^c01084a2:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c01084a7	obj/kernel.asm	/^c01084a7:	68 f2 00 00 00       	push   $0xf2$/;"	l
c01084ac	obj/kernel.asm	/^c01084ac:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c01084b1	obj/kernel.asm	/^c01084b1:	e8 19 80 ff ff       	call   c01004cf <__panic>$/;"	l
c01084b6	obj/kernel.asm	/^c01084b6:	a1 94 22 15 c0       	mov    0xc0152294,%eax$/;"	l
c01084bb	obj/kernel.asm	/^c01084bb:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01084be	obj/kernel.asm	/^c01084be:	c7 05 94 22 15 c0 00 	movl   $0x0,0xc0152294$/;"	l
c01084c5	obj/kernel.asm	/^c01084c5:	00 00 00 $/;"	l
c01084c8	obj/kernel.asm	/^c01084c8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01084cb	obj/kernel.asm	/^c01084cb:	83 c0 48             	add    $0x48,%eax$/;"	l
c01084ce	obj/kernel.asm	/^c01084ce:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01084d1	obj/kernel.asm	/^c01084d1:	6a 03                	push   $0x3$/;"	l
c01084d3	obj/kernel.asm	/^c01084d3:	50                   	push   %eax$/;"	l
c01084d4	obj/kernel.asm	/^c01084d4:	e8 a1 b3 ff ff       	call   c010387a <free_pages>$/;"	l
c01084d9	obj/kernel.asm	/^c01084d9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01084dc	obj/kernel.asm	/^c01084dc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01084df	obj/kernel.asm	/^c01084df:	6a 04                	push   $0x4$/;"	l
c01084e1	obj/kernel.asm	/^c01084e1:	e8 28 b3 ff ff       	call   c010380e <alloc_pages>$/;"	l
c01084e6	obj/kernel.asm	/^c01084e6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01084e9	obj/kernel.asm	/^c01084e9:	85 c0                	test   %eax,%eax$/;"	l
c01084eb	obj/kernel.asm	/^c01084eb:	74 19                	je     c0108506 <default_check+0x210>$/;"	l
c01084ed	obj/kernel.asm	/^c01084ed:	68 6c 5e 11 c0       	push   $0xc0115e6c$/;"	l
c01084f2	obj/kernel.asm	/^c01084f2:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c01084f7	obj/kernel.asm	/^c01084f7:	68 f8 00 00 00       	push   $0xf8$/;"	l
c01084fc	obj/kernel.asm	/^c01084fc:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0108501	obj/kernel.asm	/^c0108501:	e8 c9 7f ff ff       	call   c01004cf <__panic>$/;"	l
c0108506	obj/kernel.asm	/^c0108506:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108509	obj/kernel.asm	/^c0108509:	83 c0 48             	add    $0x48,%eax$/;"	l
c010850c	obj/kernel.asm	/^c010850c:	83 c0 04             	add    $0x4,%eax$/;"	l
c010850f	obj/kernel.asm	/^c010850f:	c7 45 ac 01 00 00 00 	movl   $0x1,-0x54(%ebp)$/;"	l
c0108516	obj/kernel.asm	/^c0108516:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c0108519	obj/kernel.asm	/^c0108519:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c010851c	obj/kernel.asm	/^c010851c:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
c010851f	obj/kernel.asm	/^c010851f:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c0108522	obj/kernel.asm	/^c0108522:	19 c0                	sbb    %eax,%eax$/;"	l
c0108524	obj/kernel.asm	/^c0108524:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c0108527	obj/kernel.asm	/^c0108527:	83 7d a4 00          	cmpl   $0x0,-0x5c(%ebp)$/;"	l
c010852b	obj/kernel.asm	/^c010852b:	0f 95 c0             	setne  %al$/;"	l
c010852e	obj/kernel.asm	/^c010852e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108531	obj/kernel.asm	/^c0108531:	85 c0                	test   %eax,%eax$/;"	l
c0108533	obj/kernel.asm	/^c0108533:	74 0e                	je     c0108543 <default_check+0x24d>$/;"	l
c0108535	obj/kernel.asm	/^c0108535:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108538	obj/kernel.asm	/^c0108538:	83 c0 48             	add    $0x48,%eax$/;"	l
c010853b	obj/kernel.asm	/^c010853b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010853e	obj/kernel.asm	/^c010853e:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0108541	obj/kernel.asm	/^c0108541:	74 19                	je     c010855c <default_check+0x266>$/;"	l
c0108543	obj/kernel.asm	/^c0108543:	68 84 5e 11 c0       	push   $0xc0115e84$/;"	l
c0108548	obj/kernel.asm	/^c0108548:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c010854d	obj/kernel.asm	/^c010854d:	68 f9 00 00 00       	push   $0xf9$/;"	l
c0108552	obj/kernel.asm	/^c0108552:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0108557	obj/kernel.asm	/^c0108557:	e8 73 7f ff ff       	call   c01004cf <__panic>$/;"	l
c010855c	obj/kernel.asm	/^c010855c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010855f	obj/kernel.asm	/^c010855f:	6a 03                	push   $0x3$/;"	l
c0108561	obj/kernel.asm	/^c0108561:	e8 a8 b2 ff ff       	call   c010380e <alloc_pages>$/;"	l
c0108566	obj/kernel.asm	/^c0108566:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108569	obj/kernel.asm	/^c0108569:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010856c	obj/kernel.asm	/^c010856c:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0108570	obj/kernel.asm	/^c0108570:	75 19                	jne    c010858b <default_check+0x295>$/;"	l
c0108572	obj/kernel.asm	/^c0108572:	68 b0 5e 11 c0       	push   $0xc0115eb0$/;"	l
c0108577	obj/kernel.asm	/^c0108577:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c010857c	obj/kernel.asm	/^c010857c:	68 fa 00 00 00       	push   $0xfa$/;"	l
c0108581	obj/kernel.asm	/^c0108581:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0108586	obj/kernel.asm	/^c0108586:	e8 44 7f ff ff       	call   c01004cf <__panic>$/;"	l
c010858b	obj/kernel.asm	/^c010858b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010858e	obj/kernel.asm	/^c010858e:	6a 01                	push   $0x1$/;"	l
c0108590	obj/kernel.asm	/^c0108590:	e8 79 b2 ff ff       	call   c010380e <alloc_pages>$/;"	l
c0108595	obj/kernel.asm	/^c0108595:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108598	obj/kernel.asm	/^c0108598:	85 c0                	test   %eax,%eax$/;"	l
c010859a	obj/kernel.asm	/^c010859a:	74 19                	je     c01085b5 <default_check+0x2bf>$/;"	l
c010859c	obj/kernel.asm	/^c010859c:	68 c6 5d 11 c0       	push   $0xc0115dc6$/;"	l
c01085a1	obj/kernel.asm	/^c01085a1:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c01085a6	obj/kernel.asm	/^c01085a6:	68 fb 00 00 00       	push   $0xfb$/;"	l
c01085ab	obj/kernel.asm	/^c01085ab:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c01085b0	obj/kernel.asm	/^c01085b0:	e8 1a 7f ff ff       	call   c01004cf <__panic>$/;"	l
c01085b5	obj/kernel.asm	/^c01085b5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01085b8	obj/kernel.asm	/^c01085b8:	83 c0 48             	add    $0x48,%eax$/;"	l
c01085bb	obj/kernel.asm	/^c01085bb:	3b 45 dc             	cmp    -0x24(%ebp),%eax$/;"	l
c01085be	obj/kernel.asm	/^c01085be:	74 19                	je     c01085d9 <default_check+0x2e3>$/;"	l
c01085c0	obj/kernel.asm	/^c01085c0:	68 ce 5e 11 c0       	push   $0xc0115ece$/;"	l
c01085c5	obj/kernel.asm	/^c01085c5:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c01085ca	obj/kernel.asm	/^c01085ca:	68 fc 00 00 00       	push   $0xfc$/;"	l
c01085cf	obj/kernel.asm	/^c01085cf:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c01085d4	obj/kernel.asm	/^c01085d4:	e8 f6 7e ff ff       	call   c01004cf <__panic>$/;"	l
c01085d9	obj/kernel.asm	/^c01085d9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01085dc	obj/kernel.asm	/^c01085dc:	83 c0 24             	add    $0x24,%eax$/;"	l
c01085df	obj/kernel.asm	/^c01085df:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01085e2	obj/kernel.asm	/^c01085e2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01085e5	obj/kernel.asm	/^c01085e5:	6a 01                	push   $0x1$/;"	l
c01085e7	obj/kernel.asm	/^c01085e7:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01085ea	obj/kernel.asm	/^c01085ea:	e8 8b b2 ff ff       	call   c010387a <free_pages>$/;"	l
c01085ef	obj/kernel.asm	/^c01085ef:	83 c4 10             	add    $0x10,%esp$/;"	l
c01085f2	obj/kernel.asm	/^c01085f2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01085f5	obj/kernel.asm	/^c01085f5:	6a 03                	push   $0x3$/;"	l
c01085f7	obj/kernel.asm	/^c01085f7:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c01085fa	obj/kernel.asm	/^c01085fa:	e8 7b b2 ff ff       	call   c010387a <free_pages>$/;"	l
c01085ff	obj/kernel.asm	/^c01085ff:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108602	obj/kernel.asm	/^c0108602:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108605	obj/kernel.asm	/^c0108605:	83 c0 04             	add    $0x4,%eax$/;"	l
c0108608	obj/kernel.asm	/^c0108608:	c7 45 a0 01 00 00 00 	movl   $0x1,-0x60(%ebp)$/;"	l
c010860f	obj/kernel.asm	/^c010860f:	89 45 9c             	mov    %eax,-0x64(%ebp)$/;"	l
c0108612	obj/kernel.asm	/^c0108612:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c0108615	obj/kernel.asm	/^c0108615:	8b 55 a0             	mov    -0x60(%ebp),%edx$/;"	l
c0108618	obj/kernel.asm	/^c0108618:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010861b	obj/kernel.asm	/^c010861b:	19 c0                	sbb    %eax,%eax$/;"	l
c010861d	obj/kernel.asm	/^c010861d:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c0108620	obj/kernel.asm	/^c0108620:	83 7d 98 00          	cmpl   $0x0,-0x68(%ebp)$/;"	l
c0108624	obj/kernel.asm	/^c0108624:	0f 95 c0             	setne  %al$/;"	l
c0108627	obj/kernel.asm	/^c0108627:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010862a	obj/kernel.asm	/^c010862a:	85 c0                	test   %eax,%eax$/;"	l
c010862c	obj/kernel.asm	/^c010862c:	74 0b                	je     c0108639 <default_check+0x343>$/;"	l
c010862e	obj/kernel.asm	/^c010862e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108631	obj/kernel.asm	/^c0108631:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108634	obj/kernel.asm	/^c0108634:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0108637	obj/kernel.asm	/^c0108637:	74 19                	je     c0108652 <default_check+0x35c>$/;"	l
c0108639	obj/kernel.asm	/^c0108639:	68 dc 5e 11 c0       	push   $0xc0115edc$/;"	l
c010863e	obj/kernel.asm	/^c010863e:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0108643	obj/kernel.asm	/^c0108643:	68 01 01 00 00       	push   $0x101$/;"	l
c0108648	obj/kernel.asm	/^c0108648:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c010864d	obj/kernel.asm	/^c010864d:	e8 7d 7e ff ff       	call   c01004cf <__panic>$/;"	l
c0108652	obj/kernel.asm	/^c0108652:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108655	obj/kernel.asm	/^c0108655:	83 c0 04             	add    $0x4,%eax$/;"	l
c0108658	obj/kernel.asm	/^c0108658:	c7 45 94 01 00 00 00 	movl   $0x1,-0x6c(%ebp)$/;"	l
c010865f	obj/kernel.asm	/^c010865f:	89 45 90             	mov    %eax,-0x70(%ebp)$/;"	l
c0108662	obj/kernel.asm	/^c0108662:	8b 45 90             	mov    -0x70(%ebp),%eax$/;"	l
c0108665	obj/kernel.asm	/^c0108665:	8b 55 94             	mov    -0x6c(%ebp),%edx$/;"	l
c0108668	obj/kernel.asm	/^c0108668:	0f a3 10             	bt     %edx,(%eax)$/;"	l
c010866b	obj/kernel.asm	/^c010866b:	19 c0                	sbb    %eax,%eax$/;"	l
c010866d	obj/kernel.asm	/^c010866d:	89 45 8c             	mov    %eax,-0x74(%ebp)$/;"	l
c0108670	obj/kernel.asm	/^c0108670:	83 7d 8c 00          	cmpl   $0x0,-0x74(%ebp)$/;"	l
c0108674	obj/kernel.asm	/^c0108674:	0f 95 c0             	setne  %al$/;"	l
c0108677	obj/kernel.asm	/^c0108677:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010867a	obj/kernel.asm	/^c010867a:	85 c0                	test   %eax,%eax$/;"	l
c010867c	obj/kernel.asm	/^c010867c:	74 0b                	je     c0108689 <default_check+0x393>$/;"	l
c010867e	obj/kernel.asm	/^c010867e:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0108681	obj/kernel.asm	/^c0108681:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0108684	obj/kernel.asm	/^c0108684:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0108687	obj/kernel.asm	/^c0108687:	74 19                	je     c01086a2 <default_check+0x3ac>$/;"	l
c0108689	obj/kernel.asm	/^c0108689:	68 04 5f 11 c0       	push   $0xc0115f04$/;"	l
c010868e	obj/kernel.asm	/^c010868e:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0108693	obj/kernel.asm	/^c0108693:	68 02 01 00 00       	push   $0x102$/;"	l
c0108698	obj/kernel.asm	/^c0108698:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c010869d	obj/kernel.asm	/^c010869d:	e8 2d 7e ff ff       	call   c01004cf <__panic>$/;"	l
c01086a2	obj/kernel.asm	/^c01086a2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01086a5	obj/kernel.asm	/^c01086a5:	6a 01                	push   $0x1$/;"	l
c01086a7	obj/kernel.asm	/^c01086a7:	e8 62 b1 ff ff       	call   c010380e <alloc_pages>$/;"	l
c01086ac	obj/kernel.asm	/^c01086ac:	83 c4 10             	add    $0x10,%esp$/;"	l
c01086af	obj/kernel.asm	/^c01086af:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01086b2	obj/kernel.asm	/^c01086b2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01086b5	obj/kernel.asm	/^c01086b5:	83 e8 24             	sub    $0x24,%eax$/;"	l
c01086b8	obj/kernel.asm	/^c01086b8:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c01086bb	obj/kernel.asm	/^c01086bb:	74 19                	je     c01086d6 <default_check+0x3e0>$/;"	l
c01086bd	obj/kernel.asm	/^c01086bd:	68 2a 5f 11 c0       	push   $0xc0115f2a$/;"	l
c01086c2	obj/kernel.asm	/^c01086c2:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c01086c7	obj/kernel.asm	/^c01086c7:	68 04 01 00 00       	push   $0x104$/;"	l
c01086cc	obj/kernel.asm	/^c01086cc:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c01086d1	obj/kernel.asm	/^c01086d1:	e8 f9 7d ff ff       	call   c01004cf <__panic>$/;"	l
c01086d6	obj/kernel.asm	/^c01086d6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01086d9	obj/kernel.asm	/^c01086d9:	6a 01                	push   $0x1$/;"	l
c01086db	obj/kernel.asm	/^c01086db:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01086de	obj/kernel.asm	/^c01086de:	e8 97 b1 ff ff       	call   c010387a <free_pages>$/;"	l
c01086e3	obj/kernel.asm	/^c01086e3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01086e6	obj/kernel.asm	/^c01086e6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01086e9	obj/kernel.asm	/^c01086e9:	6a 02                	push   $0x2$/;"	l
c01086eb	obj/kernel.asm	/^c01086eb:	e8 1e b1 ff ff       	call   c010380e <alloc_pages>$/;"	l
c01086f0	obj/kernel.asm	/^c01086f0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01086f3	obj/kernel.asm	/^c01086f3:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01086f6	obj/kernel.asm	/^c01086f6:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01086f9	obj/kernel.asm	/^c01086f9:	83 c0 24             	add    $0x24,%eax$/;"	l
c01086fc	obj/kernel.asm	/^c01086fc:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c01086ff	obj/kernel.asm	/^c01086ff:	74 19                	je     c010871a <default_check+0x424>$/;"	l
c0108701	obj/kernel.asm	/^c0108701:	68 48 5f 11 c0       	push   $0xc0115f48$/;"	l
c0108706	obj/kernel.asm	/^c0108706:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c010870b	obj/kernel.asm	/^c010870b:	68 06 01 00 00       	push   $0x106$/;"	l
c0108710	obj/kernel.asm	/^c0108710:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0108715	obj/kernel.asm	/^c0108715:	e8 b5 7d ff ff       	call   c01004cf <__panic>$/;"	l
c010871a	obj/kernel.asm	/^c010871a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010871d	obj/kernel.asm	/^c010871d:	6a 02                	push   $0x2$/;"	l
c010871f	obj/kernel.asm	/^c010871f:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0108722	obj/kernel.asm	/^c0108722:	e8 53 b1 ff ff       	call   c010387a <free_pages>$/;"	l
c0108727	obj/kernel.asm	/^c0108727:	83 c4 10             	add    $0x10,%esp$/;"	l
c010872a	obj/kernel.asm	/^c010872a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010872d	obj/kernel.asm	/^c010872d:	6a 01                	push   $0x1$/;"	l
c010872f	obj/kernel.asm	/^c010872f:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c0108732	obj/kernel.asm	/^c0108732:	e8 43 b1 ff ff       	call   c010387a <free_pages>$/;"	l
c0108737	obj/kernel.asm	/^c0108737:	83 c4 10             	add    $0x10,%esp$/;"	l
c010873a	obj/kernel.asm	/^c010873a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010873d	obj/kernel.asm	/^c010873d:	6a 05                	push   $0x5$/;"	l
c010873f	obj/kernel.asm	/^c010873f:	e8 ca b0 ff ff       	call   c010380e <alloc_pages>$/;"	l
c0108744	obj/kernel.asm	/^c0108744:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108747	obj/kernel.asm	/^c0108747:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010874a	obj/kernel.asm	/^c010874a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010874e	obj/kernel.asm	/^c010874e:	75 19                	jne    c0108769 <default_check+0x473>$/;"	l
c0108750	obj/kernel.asm	/^c0108750:	68 68 5f 11 c0       	push   $0xc0115f68$/;"	l
c0108755	obj/kernel.asm	/^c0108755:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c010875a	obj/kernel.asm	/^c010875a:	68 0b 01 00 00       	push   $0x10b$/;"	l
c010875f	obj/kernel.asm	/^c010875f:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0108764	obj/kernel.asm	/^c0108764:	e8 66 7d ff ff       	call   c01004cf <__panic>$/;"	l
c0108769	obj/kernel.asm	/^c0108769:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010876c	obj/kernel.asm	/^c010876c:	6a 01                	push   $0x1$/;"	l
c010876e	obj/kernel.asm	/^c010876e:	e8 9b b0 ff ff       	call   c010380e <alloc_pages>$/;"	l
c0108773	obj/kernel.asm	/^c0108773:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108776	obj/kernel.asm	/^c0108776:	85 c0                	test   %eax,%eax$/;"	l
c0108778	obj/kernel.asm	/^c0108778:	74 19                	je     c0108793 <default_check+0x49d>$/;"	l
c010877a	obj/kernel.asm	/^c010877a:	68 c6 5d 11 c0       	push   $0xc0115dc6$/;"	l
c010877f	obj/kernel.asm	/^c010877f:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c0108784	obj/kernel.asm	/^c0108784:	68 0c 01 00 00       	push   $0x10c$/;"	l
c0108789	obj/kernel.asm	/^c0108789:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c010878e	obj/kernel.asm	/^c010878e:	e8 3c 7d ff ff       	call   c01004cf <__panic>$/;"	l
c0108793	obj/kernel.asm	/^c0108793:	a1 94 22 15 c0       	mov    0xc0152294,%eax$/;"	l
c0108798	obj/kernel.asm	/^c0108798:	85 c0                	test   %eax,%eax$/;"	l
c010879a	obj/kernel.asm	/^c010879a:	74 19                	je     c01087b5 <default_check+0x4bf>$/;"	l
c010879c	obj/kernel.asm	/^c010879c:	68 19 5e 11 c0       	push   $0xc0115e19$/;"	l
c01087a1	obj/kernel.asm	/^c01087a1:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c01087a6	obj/kernel.asm	/^c01087a6:	68 0e 01 00 00       	push   $0x10e$/;"	l
c01087ab	obj/kernel.asm	/^c01087ab:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c01087b0	obj/kernel.asm	/^c01087b0:	e8 1a 7d ff ff       	call   c01004cf <__panic>$/;"	l
c01087b5	obj/kernel.asm	/^c01087b5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01087b8	obj/kernel.asm	/^c01087b8:	a3 94 22 15 c0       	mov    %eax,0xc0152294$/;"	l
c01087bd	obj/kernel.asm	/^c01087bd:	8b 45 80             	mov    -0x80(%ebp),%eax$/;"	l
c01087c0	obj/kernel.asm	/^c01087c0:	8b 55 84             	mov    -0x7c(%ebp),%edx$/;"	l
c01087c3	obj/kernel.asm	/^c01087c3:	a3 8c 22 15 c0       	mov    %eax,0xc015228c$/;"	l
c01087c8	obj/kernel.asm	/^c01087c8:	89 15 90 22 15 c0    	mov    %edx,0xc0152290$/;"	l
c01087ce	obj/kernel.asm	/^c01087ce:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01087d1	obj/kernel.asm	/^c01087d1:	6a 05                	push   $0x5$/;"	l
c01087d3	obj/kernel.asm	/^c01087d3:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01087d6	obj/kernel.asm	/^c01087d6:	e8 9f b0 ff ff       	call   c010387a <free_pages>$/;"	l
c01087db	obj/kernel.asm	/^c01087db:	83 c4 10             	add    $0x10,%esp$/;"	l
c01087de	obj/kernel.asm	/^c01087de:	c7 45 ec 8c 22 15 c0 	movl   $0xc015228c,-0x14(%ebp)$/;"	l
c01087e5	obj/kernel.asm	/^c01087e5:	eb 1d                	jmp    c0108804 <default_check+0x50e>$/;"	l
c01087e7	obj/kernel.asm	/^c01087e7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01087ea	obj/kernel.asm	/^c01087ea:	83 e8 10             	sub    $0x10,%eax$/;"	l
c01087ed	obj/kernel.asm	/^c01087ed:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c01087f0	obj/kernel.asm	/^c01087f0:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)$/;"	l
c01087f4	obj/kernel.asm	/^c01087f4:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01087f7	obj/kernel.asm	/^c01087f7:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c01087fa	obj/kernel.asm	/^c01087fa:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01087fd	obj/kernel.asm	/^c01087fd:	29 c2                	sub    %eax,%edx$/;"	l
c01087ff	obj/kernel.asm	/^c01087ff:	89 d0                	mov    %edx,%eax$/;"	l
c0108801	obj/kernel.asm	/^c0108801:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108804	obj/kernel.asm	/^c0108804:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0108807	obj/kernel.asm	/^c0108807:	89 45 88             	mov    %eax,-0x78(%ebp)$/;"	l
c010880a	obj/kernel.asm	/^c010880a:	8b 45 88             	mov    -0x78(%ebp),%eax$/;"	l
c010880d	obj/kernel.asm	/^c010880d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108810	obj/kernel.asm	/^c0108810:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108813	obj/kernel.asm	/^c0108813:	81 7d ec 8c 22 15 c0 	cmpl   $0xc015228c,-0x14(%ebp)$/;"	l
c010881a	obj/kernel.asm	/^c010881a:	75 cb                	jne    c01087e7 <default_check+0x4f1>$/;"	l
c010881c	obj/kernel.asm	/^c010881c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0108820	obj/kernel.asm	/^c0108820:	74 19                	je     c010883b <default_check+0x545>$/;"	l
c0108822	obj/kernel.asm	/^c0108822:	68 86 5f 11 c0       	push   $0xc0115f86$/;"	l
c0108827	obj/kernel.asm	/^c0108827:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c010882c	obj/kernel.asm	/^c010882c:	68 19 01 00 00       	push   $0x119$/;"	l
c0108831	obj/kernel.asm	/^c0108831:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0108836	obj/kernel.asm	/^c0108836:	e8 94 7c ff ff       	call   c01004cf <__panic>$/;"	l
c010883b	obj/kernel.asm	/^c010883b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010883f	obj/kernel.asm	/^c010883f:	74 19                	je     c010885a <default_check+0x564>$/;"	l
c0108841	obj/kernel.asm	/^c0108841:	68 91 5f 11 c0       	push   $0xc0115f91$/;"	l
c0108846	obj/kernel.asm	/^c0108846:	68 56 5c 11 c0       	push   $0xc0115c56$/;"	l
c010884b	obj/kernel.asm	/^c010884b:	68 1a 01 00 00       	push   $0x11a$/;"	l
c0108850	obj/kernel.asm	/^c0108850:	68 6b 5c 11 c0       	push   $0xc0115c6b$/;"	l
c0108855	obj/kernel.asm	/^c0108855:	e8 75 7c ff ff       	call   c01004cf <__panic>$/;"	l
c010885a	obj/kernel.asm	/^c010885a:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c010885d	obj/kernel.asm	/^c010885d:	c9                   	leave  $/;"	l
c010885e	obj/kernel.asm	/^c010885e:	c3                   	ret    $/;"	l
c010885f	obj/kernel.asm	/^c010885f <phi_test_sema>:$/;"	l
c010885f	obj/kernel.asm	/^c010885f:	55                   	push   %ebp$/;"	l
c0108860	obj/kernel.asm	/^c0108860:	89 e5                	mov    %esp,%ebp$/;"	l
c0108862	obj/kernel.asm	/^c0108862:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108865	obj/kernel.asm	/^c0108865:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108868	obj/kernel.asm	/^c0108868:	8b 04 85 a0 22 15 c0 	mov    -0x3feadd60(,%eax,4),%eax$/;"	l
c010886f	obj/kernel.asm	/^c010886f:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0108872	obj/kernel.asm	/^c0108872:	0f 85 8d 00 00 00    	jne    c0108905 <phi_test_sema+0xa6>$/;"	l
c0108878	obj/kernel.asm	/^c0108878:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010887b	obj/kernel.asm	/^c010887b:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c010887e	obj/kernel.asm	/^c010887e:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0108883	obj/kernel.asm	/^c0108883:	89 c8                	mov    %ecx,%eax$/;"	l
c0108885	obj/kernel.asm	/^c0108885:	f7 ea                	imul   %edx$/;"	l
c0108887	obj/kernel.asm	/^c0108887:	d1 fa                	sar    %edx$/;"	d
c0108889	obj/kernel.asm	/^c0108889:	89 c8                	mov    %ecx,%eax$/;"	l
c010888b	obj/kernel.asm	/^c010888b:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c010888e	obj/kernel.asm	/^c010888e:	29 c2                	sub    %eax,%edx$/;"	l
c0108890	obj/kernel.asm	/^c0108890:	89 d0                	mov    %edx,%eax$/;"	l
c0108892	obj/kernel.asm	/^c0108892:	89 c2                	mov    %eax,%edx$/;"	l
c0108894	obj/kernel.asm	/^c0108894:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0108897	obj/kernel.asm	/^c0108897:	01 c2                	add    %eax,%edx$/;"	l
c0108899	obj/kernel.asm	/^c0108899:	89 c8                	mov    %ecx,%eax$/;"	l
c010889b	obj/kernel.asm	/^c010889b:	29 d0                	sub    %edx,%eax$/;"	l
c010889d	obj/kernel.asm	/^c010889d:	8b 04 85 a0 22 15 c0 	mov    -0x3feadd60(,%eax,4),%eax$/;"	l
c01088a4	obj/kernel.asm	/^c01088a4:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01088a7	obj/kernel.asm	/^c01088a7:	74 5c                	je     c0108905 <phi_test_sema+0xa6>$/;"	l
c01088a9	obj/kernel.asm	/^c01088a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01088ac	obj/kernel.asm	/^c01088ac:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c01088af	obj/kernel.asm	/^c01088af:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c01088b4	obj/kernel.asm	/^c01088b4:	89 c8                	mov    %ecx,%eax$/;"	l
c01088b6	obj/kernel.asm	/^c01088b6:	f7 ea                	imul   %edx$/;"	l
c01088b8	obj/kernel.asm	/^c01088b8:	d1 fa                	sar    %edx$/;"	d
c01088ba	obj/kernel.asm	/^c01088ba:	89 c8                	mov    %ecx,%eax$/;"	l
c01088bc	obj/kernel.asm	/^c01088bc:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c01088bf	obj/kernel.asm	/^c01088bf:	29 c2                	sub    %eax,%edx$/;"	l
c01088c1	obj/kernel.asm	/^c01088c1:	89 d0                	mov    %edx,%eax$/;"	l
c01088c3	obj/kernel.asm	/^c01088c3:	89 c2                	mov    %eax,%edx$/;"	l
c01088c5	obj/kernel.asm	/^c01088c5:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c01088c8	obj/kernel.asm	/^c01088c8:	01 c2                	add    %eax,%edx$/;"	l
c01088ca	obj/kernel.asm	/^c01088ca:	89 c8                	mov    %ecx,%eax$/;"	l
c01088cc	obj/kernel.asm	/^c01088cc:	29 d0                	sub    %edx,%eax$/;"	l
c01088ce	obj/kernel.asm	/^c01088ce:	8b 04 85 a0 22 15 c0 	mov    -0x3feadd60(,%eax,4),%eax$/;"	l
c01088d5	obj/kernel.asm	/^c01088d5:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01088d8	obj/kernel.asm	/^c01088d8:	74 2b                	je     c0108905 <phi_test_sema+0xa6>$/;"	l
c01088da	obj/kernel.asm	/^c01088da:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01088dd	obj/kernel.asm	/^c01088dd:	c7 04 85 a0 22 15 c0 	movl   $0x2,-0x3feadd60(,%eax,4)$/;"	l
c01088e4	obj/kernel.asm	/^c01088e4:	02 00 00 00 $/;"	l
c01088e8	obj/kernel.asm	/^c01088e8:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01088eb	obj/kernel.asm	/^c01088eb:	89 d0                	mov    %edx,%eax$/;"	l
c01088ed	obj/kernel.asm	/^c01088ed:	01 c0                	add    %eax,%eax$/;"	l
c01088ef	obj/kernel.asm	/^c01088ef:	01 d0                	add    %edx,%eax$/;"	l
c01088f1	obj/kernel.asm	/^c01088f1:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01088f4	obj/kernel.asm	/^c01088f4:	05 40 23 15 c0       	add    $0xc0152340,%eax$/;"	l
c01088f9	obj/kernel.asm	/^c01088f9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01088fc	obj/kernel.asm	/^c01088fc:	50                   	push   %eax$/;"	l
c01088fd	obj/kernel.asm	/^c01088fd:	e8 e6 0b 00 00       	call   c01094e8 <up>$/;"	l
c0108902	obj/kernel.asm	/^c0108902:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108905	obj/kernel.asm	/^c0108905:	c9                   	leave  $/;"	l
c0108906	obj/kernel.asm	/^c0108906:	c3                   	ret    $/;"	l
c0108907	obj/kernel.asm	/^c0108907 <phi_take_forks_sema>:$/;"	l
c0108907	obj/kernel.asm	/^c0108907:	55                   	push   %ebp$/;"	l
c0108908	obj/kernel.asm	/^c0108908:	89 e5                	mov    %esp,%ebp$/;"	l
c010890a	obj/kernel.asm	/^c010890a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010890d	obj/kernel.asm	/^c010890d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108910	obj/kernel.asm	/^c0108910:	68 c8 22 15 c0       	push   $0xc01522c8$/;"	l
c0108915	obj/kernel.asm	/^c0108915:	e8 e9 0b 00 00       	call   c0109503 <down>$/;"	l
c010891a	obj/kernel.asm	/^c010891a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010891d	obj/kernel.asm	/^c010891d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108920	obj/kernel.asm	/^c0108920:	c7 04 85 a0 22 15 c0 	movl   $0x1,-0x3feadd60(,%eax,4)$/;"	l
c0108927	obj/kernel.asm	/^c0108927:	01 00 00 00 $/;"	l
c010892b	obj/kernel.asm	/^c010892b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010892e	obj/kernel.asm	/^c010892e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108931	obj/kernel.asm	/^c0108931:	e8 29 ff ff ff       	call   c010885f <phi_test_sema>$/;"	l
c0108936	obj/kernel.asm	/^c0108936:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108939	obj/kernel.asm	/^c0108939:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010893c	obj/kernel.asm	/^c010893c:	68 c8 22 15 c0       	push   $0xc01522c8$/;"	l
c0108941	obj/kernel.asm	/^c0108941:	e8 a2 0b 00 00       	call   c01094e8 <up>$/;"	l
c0108946	obj/kernel.asm	/^c0108946:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108949	obj/kernel.asm	/^c0108949:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010894c	obj/kernel.asm	/^c010894c:	89 d0                	mov    %edx,%eax$/;"	l
c010894e	obj/kernel.asm	/^c010894e:	01 c0                	add    %eax,%eax$/;"	l
c0108950	obj/kernel.asm	/^c0108950:	01 d0                	add    %edx,%eax$/;"	l
c0108952	obj/kernel.asm	/^c0108952:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108955	obj/kernel.asm	/^c0108955:	05 40 23 15 c0       	add    $0xc0152340,%eax$/;"	l
c010895a	obj/kernel.asm	/^c010895a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010895d	obj/kernel.asm	/^c010895d:	50                   	push   %eax$/;"	l
c010895e	obj/kernel.asm	/^c010895e:	e8 a0 0b 00 00       	call   c0109503 <down>$/;"	l
c0108963	obj/kernel.asm	/^c0108963:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108966	obj/kernel.asm	/^c0108966:	c9                   	leave  $/;"	l
c0108967	obj/kernel.asm	/^c0108967:	c3                   	ret    $/;"	l
c0108968	obj/kernel.asm	/^c0108968 <phi_put_forks_sema>:$/;"	l
c0108968	obj/kernel.asm	/^c0108968:	55                   	push   %ebp$/;"	l
c0108969	obj/kernel.asm	/^c0108969:	89 e5                	mov    %esp,%ebp$/;"	l
c010896b	obj/kernel.asm	/^c010896b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010896e	obj/kernel.asm	/^c010896e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108971	obj/kernel.asm	/^c0108971:	68 c8 22 15 c0       	push   $0xc01522c8$/;"	l
c0108976	obj/kernel.asm	/^c0108976:	e8 88 0b 00 00       	call   c0109503 <down>$/;"	l
c010897b	obj/kernel.asm	/^c010897b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010897e	obj/kernel.asm	/^c010897e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108981	obj/kernel.asm	/^c0108981:	c7 04 85 a0 22 15 c0 	movl   $0x0,-0x3feadd60(,%eax,4)$/;"	l
c0108988	obj/kernel.asm	/^c0108988:	00 00 00 00 $/;"	l
c010898c	obj/kernel.asm	/^c010898c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010898f	obj/kernel.asm	/^c010898f:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0108992	obj/kernel.asm	/^c0108992:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0108997	obj/kernel.asm	/^c0108997:	89 c8                	mov    %ecx,%eax$/;"	l
c0108999	obj/kernel.asm	/^c0108999:	f7 ea                	imul   %edx$/;"	l
c010899b	obj/kernel.asm	/^c010899b:	d1 fa                	sar    %edx$/;"	d
c010899d	obj/kernel.asm	/^c010899d:	89 c8                	mov    %ecx,%eax$/;"	l
c010899f	obj/kernel.asm	/^c010899f:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c01089a2	obj/kernel.asm	/^c01089a2:	29 c2                	sub    %eax,%edx$/;"	l
c01089a4	obj/kernel.asm	/^c01089a4:	89 d0                	mov    %edx,%eax$/;"	l
c01089a6	obj/kernel.asm	/^c01089a6:	89 c2                	mov    %eax,%edx$/;"	l
c01089a8	obj/kernel.asm	/^c01089a8:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c01089ab	obj/kernel.asm	/^c01089ab:	01 c2                	add    %eax,%edx$/;"	l
c01089ad	obj/kernel.asm	/^c01089ad:	89 c8                	mov    %ecx,%eax$/;"	l
c01089af	obj/kernel.asm	/^c01089af:	29 d0                	sub    %edx,%eax$/;"	l
c01089b1	obj/kernel.asm	/^c01089b1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01089b4	obj/kernel.asm	/^c01089b4:	50                   	push   %eax$/;"	l
c01089b5	obj/kernel.asm	/^c01089b5:	e8 a5 fe ff ff       	call   c010885f <phi_test_sema>$/;"	l
c01089ba	obj/kernel.asm	/^c01089ba:	83 c4 10             	add    $0x10,%esp$/;"	l
c01089bd	obj/kernel.asm	/^c01089bd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01089c0	obj/kernel.asm	/^c01089c0:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c01089c3	obj/kernel.asm	/^c01089c3:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c01089c8	obj/kernel.asm	/^c01089c8:	89 c8                	mov    %ecx,%eax$/;"	l
c01089ca	obj/kernel.asm	/^c01089ca:	f7 ea                	imul   %edx$/;"	l
c01089cc	obj/kernel.asm	/^c01089cc:	d1 fa                	sar    %edx$/;"	d
c01089ce	obj/kernel.asm	/^c01089ce:	89 c8                	mov    %ecx,%eax$/;"	l
c01089d0	obj/kernel.asm	/^c01089d0:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c01089d3	obj/kernel.asm	/^c01089d3:	29 c2                	sub    %eax,%edx$/;"	l
c01089d5	obj/kernel.asm	/^c01089d5:	89 d0                	mov    %edx,%eax$/;"	l
c01089d7	obj/kernel.asm	/^c01089d7:	89 c2                	mov    %eax,%edx$/;"	l
c01089d9	obj/kernel.asm	/^c01089d9:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c01089dc	obj/kernel.asm	/^c01089dc:	01 c2                	add    %eax,%edx$/;"	l
c01089de	obj/kernel.asm	/^c01089de:	89 c8                	mov    %ecx,%eax$/;"	l
c01089e0	obj/kernel.asm	/^c01089e0:	29 d0                	sub    %edx,%eax$/;"	l
c01089e2	obj/kernel.asm	/^c01089e2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01089e5	obj/kernel.asm	/^c01089e5:	50                   	push   %eax$/;"	l
c01089e6	obj/kernel.asm	/^c01089e6:	e8 74 fe ff ff       	call   c010885f <phi_test_sema>$/;"	l
c01089eb	obj/kernel.asm	/^c01089eb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01089ee	obj/kernel.asm	/^c01089ee:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01089f1	obj/kernel.asm	/^c01089f1:	68 c8 22 15 c0       	push   $0xc01522c8$/;"	l
c01089f6	obj/kernel.asm	/^c01089f6:	e8 ed 0a 00 00       	call   c01094e8 <up>$/;"	l
c01089fb	obj/kernel.asm	/^c01089fb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01089fe	obj/kernel.asm	/^c01089fe:	c9                   	leave  $/;"	l
c01089ff	obj/kernel.asm	/^c01089ff:	c3                   	ret    $/;"	l
c0108a00	obj/kernel.asm	/^c0108a00 <philosopher_using_semaphore>:$/;"	l
c0108a00	obj/kernel.asm	/^c0108a00:	55                   	push   %ebp$/;"	l
c0108a01	obj/kernel.asm	/^c0108a01:	89 e5                	mov    %esp,%ebp$/;"	l
c0108a03	obj/kernel.asm	/^c0108a03:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108a06	obj/kernel.asm	/^c0108a06:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108a0d	obj/kernel.asm	/^c0108a0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108a10	obj/kernel.asm	/^c0108a10:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108a13	obj/kernel.asm	/^c0108a13:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108a16	obj/kernel.asm	/^c0108a16:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108a19	obj/kernel.asm	/^c0108a19:	68 cc 5f 11 c0       	push   $0xc0115fcc$/;"	l
c0108a1e	obj/kernel.asm	/^c0108a1e:	e8 47 79 ff ff       	call   c010036a <cprintf>$/;"	l
c0108a23	obj/kernel.asm	/^c0108a23:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a26	obj/kernel.asm	/^c0108a26:	eb 62                	jmp    c0108a8a <philosopher_using_semaphore+0x8a>$/;"	l
c0108a28	obj/kernel.asm	/^c0108a28:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108a2b	obj/kernel.asm	/^c0108a2b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108a2e	obj/kernel.asm	/^c0108a2e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108a31	obj/kernel.asm	/^c0108a31:	68 ec 5f 11 c0       	push   $0xc0115fec$/;"	l
c0108a36	obj/kernel.asm	/^c0108a36:	e8 2f 79 ff ff       	call   c010036a <cprintf>$/;"	l
c0108a3b	obj/kernel.asm	/^c0108a3b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a3e	obj/kernel.asm	/^c0108a3e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108a41	obj/kernel.asm	/^c0108a41:	6a 0a                	push   $0xa$/;"	l
c0108a43	obj/kernel.asm	/^c0108a43:	e8 1b 49 00 00       	call   c010d363 <do_sleep>$/;"	l
c0108a48	obj/kernel.asm	/^c0108a48:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a4b	obj/kernel.asm	/^c0108a4b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108a4e	obj/kernel.asm	/^c0108a4e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108a51	obj/kernel.asm	/^c0108a51:	e8 b1 fe ff ff       	call   c0108907 <phi_take_forks_sema>$/;"	l
c0108a56	obj/kernel.asm	/^c0108a56:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a59	obj/kernel.asm	/^c0108a59:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108a5c	obj/kernel.asm	/^c0108a5c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108a5f	obj/kernel.asm	/^c0108a5f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108a62	obj/kernel.asm	/^c0108a62:	68 1c 60 11 c0       	push   $0xc011601c$/;"	l
c0108a67	obj/kernel.asm	/^c0108a67:	e8 fe 78 ff ff       	call   c010036a <cprintf>$/;"	l
c0108a6c	obj/kernel.asm	/^c0108a6c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a6f	obj/kernel.asm	/^c0108a6f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108a72	obj/kernel.asm	/^c0108a72:	6a 0a                	push   $0xa$/;"	l
c0108a74	obj/kernel.asm	/^c0108a74:	e8 ea 48 00 00       	call   c010d363 <do_sleep>$/;"	l
c0108a79	obj/kernel.asm	/^c0108a79:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a7c	obj/kernel.asm	/^c0108a7c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108a7f	obj/kernel.asm	/^c0108a7f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108a82	obj/kernel.asm	/^c0108a82:	e8 e1 fe ff ff       	call   c0108968 <phi_put_forks_sema>$/;"	l
c0108a87	obj/kernel.asm	/^c0108a87:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108a8a	obj/kernel.asm	/^c0108a8a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108a8d	obj/kernel.asm	/^c0108a8d:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0108a90	obj/kernel.asm	/^c0108a90:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0108a93	obj/kernel.asm	/^c0108a93:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0108a96	obj/kernel.asm	/^c0108a96:	7e 90                	jle    c0108a28 <philosopher_using_semaphore+0x28>$/;"	l
c0108a98	obj/kernel.asm	/^c0108a98:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108a9b	obj/kernel.asm	/^c0108a9b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108a9e	obj/kernel.asm	/^c0108a9e:	68 47 60 11 c0       	push   $0xc0116047$/;"	l
c0108aa3	obj/kernel.asm	/^c0108aa3:	e8 c2 78 ff ff       	call   c010036a <cprintf>$/;"	l
c0108aa8	obj/kernel.asm	/^c0108aa8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108aab	obj/kernel.asm	/^c0108aab:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108ab0	obj/kernel.asm	/^c0108ab0:	c9                   	leave  $/;"	l
c0108ab1	obj/kernel.asm	/^c0108ab1:	c3                   	ret    $/;"	l
c0108ab2	obj/kernel.asm	/^c0108ab2 <phi_test_condvar>:$/;"	l
c0108ab2	obj/kernel.asm	/^c0108ab2:	55                   	push   %ebp$/;"	l
c0108ab3	obj/kernel.asm	/^c0108ab3:	89 e5                	mov    %esp,%ebp$/;"	l
c0108ab5	obj/kernel.asm	/^c0108ab5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108ab8	obj/kernel.asm	/^c0108ab8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108abb	obj/kernel.asm	/^c0108abb:	8b 04 85 00 23 15 c0 	mov    -0x3feadd00(,%eax,4),%eax$/;"	l
c0108ac2	obj/kernel.asm	/^c0108ac2:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0108ac5	obj/kernel.asm	/^c0108ac5:	0f 85 bd 00 00 00    	jne    c0108b88 <phi_test_condvar+0xd6>$/;"	l
c0108acb	obj/kernel.asm	/^c0108acb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108ace	obj/kernel.asm	/^c0108ace:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0108ad1	obj/kernel.asm	/^c0108ad1:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0108ad6	obj/kernel.asm	/^c0108ad6:	89 c8                	mov    %ecx,%eax$/;"	l
c0108ad8	obj/kernel.asm	/^c0108ad8:	f7 ea                	imul   %edx$/;"	l
c0108ada	obj/kernel.asm	/^c0108ada:	d1 fa                	sar    %edx$/;"	d
c0108adc	obj/kernel.asm	/^c0108adc:	89 c8                	mov    %ecx,%eax$/;"	l
c0108ade	obj/kernel.asm	/^c0108ade:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0108ae1	obj/kernel.asm	/^c0108ae1:	29 c2                	sub    %eax,%edx$/;"	l
c0108ae3	obj/kernel.asm	/^c0108ae3:	89 d0                	mov    %edx,%eax$/;"	l
c0108ae5	obj/kernel.asm	/^c0108ae5:	89 c2                	mov    %eax,%edx$/;"	l
c0108ae7	obj/kernel.asm	/^c0108ae7:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0108aea	obj/kernel.asm	/^c0108aea:	01 c2                	add    %eax,%edx$/;"	l
c0108aec	obj/kernel.asm	/^c0108aec:	89 c8                	mov    %ecx,%eax$/;"	l
c0108aee	obj/kernel.asm	/^c0108aee:	29 d0                	sub    %edx,%eax$/;"	l
c0108af0	obj/kernel.asm	/^c0108af0:	8b 04 85 00 23 15 c0 	mov    -0x3feadd00(,%eax,4),%eax$/;"	l
c0108af7	obj/kernel.asm	/^c0108af7:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0108afa	obj/kernel.asm	/^c0108afa:	0f 84 88 00 00 00    	je     c0108b88 <phi_test_condvar+0xd6>$/;"	l
c0108b00	obj/kernel.asm	/^c0108b00:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108b03	obj/kernel.asm	/^c0108b03:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0108b06	obj/kernel.asm	/^c0108b06:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0108b0b	obj/kernel.asm	/^c0108b0b:	89 c8                	mov    %ecx,%eax$/;"	l
c0108b0d	obj/kernel.asm	/^c0108b0d:	f7 ea                	imul   %edx$/;"	l
c0108b0f	obj/kernel.asm	/^c0108b0f:	d1 fa                	sar    %edx$/;"	d
c0108b11	obj/kernel.asm	/^c0108b11:	89 c8                	mov    %ecx,%eax$/;"	l
c0108b13	obj/kernel.asm	/^c0108b13:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0108b16	obj/kernel.asm	/^c0108b16:	29 c2                	sub    %eax,%edx$/;"	l
c0108b18	obj/kernel.asm	/^c0108b18:	89 d0                	mov    %edx,%eax$/;"	l
c0108b1a	obj/kernel.asm	/^c0108b1a:	89 c2                	mov    %eax,%edx$/;"	l
c0108b1c	obj/kernel.asm	/^c0108b1c:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0108b1f	obj/kernel.asm	/^c0108b1f:	01 c2                	add    %eax,%edx$/;"	l
c0108b21	obj/kernel.asm	/^c0108b21:	89 c8                	mov    %ecx,%eax$/;"	l
c0108b23	obj/kernel.asm	/^c0108b23:	29 d0                	sub    %edx,%eax$/;"	l
c0108b25	obj/kernel.asm	/^c0108b25:	8b 04 85 00 23 15 c0 	mov    -0x3feadd00(,%eax,4),%eax$/;"	l
c0108b2c	obj/kernel.asm	/^c0108b2c:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0108b2f	obj/kernel.asm	/^c0108b2f:	74 57                	je     c0108b88 <phi_test_condvar+0xd6>$/;"	l
c0108b31	obj/kernel.asm	/^c0108b31:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108b34	obj/kernel.asm	/^c0108b34:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108b37	obj/kernel.asm	/^c0108b37:	68 64 60 11 c0       	push   $0xc0116064$/;"	l
c0108b3c	obj/kernel.asm	/^c0108b3c:	e8 29 78 ff ff       	call   c010036a <cprintf>$/;"	l
c0108b41	obj/kernel.asm	/^c0108b41:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108b44	obj/kernel.asm	/^c0108b44:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108b47	obj/kernel.asm	/^c0108b47:	c7 04 85 00 23 15 c0 	movl   $0x2,-0x3feadd00(,%eax,4)$/;"	l
c0108b4e	obj/kernel.asm	/^c0108b4e:	02 00 00 00 $/;"	l
c0108b52	obj/kernel.asm	/^c0108b52:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108b55	obj/kernel.asm	/^c0108b55:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108b58	obj/kernel.asm	/^c0108b58:	68 98 60 11 c0       	push   $0xc0116098$/;"	l
c0108b5d	obj/kernel.asm	/^c0108b5d:	e8 08 78 ff ff       	call   c010036a <cprintf>$/;"	l
c0108b62	obj/kernel.asm	/^c0108b62:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108b65	obj/kernel.asm	/^c0108b65:	a1 e0 da 14 c0       	mov    0xc014dae0,%eax$/;"	l
c0108b6a	obj/kernel.asm	/^c0108b6a:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c0108b6d	obj/kernel.asm	/^c0108b6d:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108b70	obj/kernel.asm	/^c0108b70:	89 d0                	mov    %edx,%eax$/;"	l
c0108b72	obj/kernel.asm	/^c0108b72:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108b75	obj/kernel.asm	/^c0108b75:	01 d0                	add    %edx,%eax$/;"	l
c0108b77	obj/kernel.asm	/^c0108b77:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108b7a	obj/kernel.asm	/^c0108b7a:	01 c8                	add    %ecx,%eax$/;"	l
c0108b7c	obj/kernel.asm	/^c0108b7c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108b7f	obj/kernel.asm	/^c0108b7f:	50                   	push   %eax$/;"	l
c0108b80	obj/kernel.asm	/^c0108b80:	e8 0b 0b 00 00       	call   c0109690 <cond_signal>$/;"	l
c0108b85	obj/kernel.asm	/^c0108b85:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108b88	obj/kernel.asm	/^c0108b88:	c9                   	leave  $/;"	l
c0108b89	obj/kernel.asm	/^c0108b89:	c3                   	ret    $/;"	l
c0108b8a	obj/kernel.asm	/^c0108b8a <phi_take_forks_condvar>:$/;"	l
c0108b8a	obj/kernel.asm	/^c0108b8a:	55                   	push   %ebp$/;"	l
c0108b8b	obj/kernel.asm	/^c0108b8b:	89 e5                	mov    %esp,%ebp$/;"	l
c0108b8d	obj/kernel.asm	/^c0108b8d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108b90	obj/kernel.asm	/^c0108b90:	a1 e0 da 14 c0       	mov    0xc014dae0,%eax$/;"	l
c0108b95	obj/kernel.asm	/^c0108b95:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108b98	obj/kernel.asm	/^c0108b98:	50                   	push   %eax$/;"	l
c0108b99	obj/kernel.asm	/^c0108b99:	e8 65 09 00 00       	call   c0109503 <down>$/;"	l
c0108b9e	obj/kernel.asm	/^c0108b9e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108ba1	obj/kernel.asm	/^c0108ba1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108ba4	obj/kernel.asm	/^c0108ba4:	c7 04 85 00 23 15 c0 	movl   $0x1,-0x3feadd00(,%eax,4)$/;"	l
c0108bab	obj/kernel.asm	/^c0108bab:	01 00 00 00 $/;"	l
c0108baf	obj/kernel.asm	/^c0108baf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108bb2	obj/kernel.asm	/^c0108bb2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108bb5	obj/kernel.asm	/^c0108bb5:	e8 f8 fe ff ff       	call   c0108ab2 <phi_test_condvar>$/;"	l
c0108bba	obj/kernel.asm	/^c0108bba:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108bbd	obj/kernel.asm	/^c0108bbd:	eb 36                	jmp    c0108bf5 <phi_take_forks_condvar+0x6b>$/;"	l
c0108bbf	obj/kernel.asm	/^c0108bbf:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108bc2	obj/kernel.asm	/^c0108bc2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0108bc5	obj/kernel.asm	/^c0108bc5:	68 c0 60 11 c0       	push   $0xc01160c0$/;"	l
c0108bca	obj/kernel.asm	/^c0108bca:	e8 9b 77 ff ff       	call   c010036a <cprintf>$/;"	l
c0108bcf	obj/kernel.asm	/^c0108bcf:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108bd2	obj/kernel.asm	/^c0108bd2:	a1 e0 da 14 c0       	mov    0xc014dae0,%eax$/;"	l
c0108bd7	obj/kernel.asm	/^c0108bd7:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c0108bda	obj/kernel.asm	/^c0108bda:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108bdd	obj/kernel.asm	/^c0108bdd:	89 d0                	mov    %edx,%eax$/;"	l
c0108bdf	obj/kernel.asm	/^c0108bdf:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108be2	obj/kernel.asm	/^c0108be2:	01 d0                	add    %edx,%eax$/;"	l
c0108be4	obj/kernel.asm	/^c0108be4:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108be7	obj/kernel.asm	/^c0108be7:	01 c8                	add    %ecx,%eax$/;"	l
c0108be9	obj/kernel.asm	/^c0108be9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108bec	obj/kernel.asm	/^c0108bec:	50                   	push   %eax$/;"	l
c0108bed	obj/kernel.asm	/^c0108bed:	e8 34 0b 00 00       	call   c0109726 <cond_wait>$/;"	l
c0108bf2	obj/kernel.asm	/^c0108bf2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108bf5	obj/kernel.asm	/^c0108bf5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108bf8	obj/kernel.asm	/^c0108bf8:	8b 04 85 00 23 15 c0 	mov    -0x3feadd00(,%eax,4),%eax$/;"	l
c0108bff	obj/kernel.asm	/^c0108bff:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0108c02	obj/kernel.asm	/^c0108c02:	75 bb                	jne    c0108bbf <phi_take_forks_condvar+0x35>$/;"	l
c0108c04	obj/kernel.asm	/^c0108c04:	a1 e0 da 14 c0       	mov    0xc014dae0,%eax$/;"	l
c0108c09	obj/kernel.asm	/^c0108c09:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0108c0c	obj/kernel.asm	/^c0108c0c:	85 c0                	test   %eax,%eax$/;"	l
c0108c0e	obj/kernel.asm	/^c0108c0e:	7e 16                	jle    c0108c26 <phi_take_forks_condvar+0x9c>$/;"	l
c0108c10	obj/kernel.asm	/^c0108c10:	a1 e0 da 14 c0       	mov    0xc014dae0,%eax$/;"	l
c0108c15	obj/kernel.asm	/^c0108c15:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0108c18	obj/kernel.asm	/^c0108c18:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108c1b	obj/kernel.asm	/^c0108c1b:	50                   	push   %eax$/;"	l
c0108c1c	obj/kernel.asm	/^c0108c1c:	e8 c7 08 00 00       	call   c01094e8 <up>$/;"	l
c0108c21	obj/kernel.asm	/^c0108c21:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108c24	obj/kernel.asm	/^c0108c24:	eb 11                	jmp    c0108c37 <phi_take_forks_condvar+0xad>$/;"	l
c0108c26	obj/kernel.asm	/^c0108c26:	a1 e0 da 14 c0       	mov    0xc014dae0,%eax$/;"	l
c0108c2b	obj/kernel.asm	/^c0108c2b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108c2e	obj/kernel.asm	/^c0108c2e:	50                   	push   %eax$/;"	l
c0108c2f	obj/kernel.asm	/^c0108c2f:	e8 b4 08 00 00       	call   c01094e8 <up>$/;"	l
c0108c34	obj/kernel.asm	/^c0108c34:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108c37	obj/kernel.asm	/^c0108c37:	c9                   	leave  $/;"	l
c0108c38	obj/kernel.asm	/^c0108c38:	c3                   	ret    $/;"	l
c0108c39	obj/kernel.asm	/^c0108c39 <phi_put_forks_condvar>:$/;"	l
c0108c39	obj/kernel.asm	/^c0108c39:	55                   	push   %ebp$/;"	l
c0108c3a	obj/kernel.asm	/^c0108c3a:	89 e5                	mov    %esp,%ebp$/;"	l
c0108c3c	obj/kernel.asm	/^c0108c3c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108c3f	obj/kernel.asm	/^c0108c3f:	a1 e0 da 14 c0       	mov    0xc014dae0,%eax$/;"	l
c0108c44	obj/kernel.asm	/^c0108c44:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108c47	obj/kernel.asm	/^c0108c47:	50                   	push   %eax$/;"	l
c0108c48	obj/kernel.asm	/^c0108c48:	e8 b6 08 00 00       	call   c0109503 <down>$/;"	l
c0108c4d	obj/kernel.asm	/^c0108c4d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108c50	obj/kernel.asm	/^c0108c50:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108c53	obj/kernel.asm	/^c0108c53:	c7 04 85 00 23 15 c0 	movl   $0x0,-0x3feadd00(,%eax,4)$/;"	l
c0108c5a	obj/kernel.asm	/^c0108c5a:	00 00 00 00 $/;"	l
c0108c5e	obj/kernel.asm	/^c0108c5e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108c61	obj/kernel.asm	/^c0108c61:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0108c64	obj/kernel.asm	/^c0108c64:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0108c69	obj/kernel.asm	/^c0108c69:	89 c8                	mov    %ecx,%eax$/;"	l
c0108c6b	obj/kernel.asm	/^c0108c6b:	f7 ea                	imul   %edx$/;"	l
c0108c6d	obj/kernel.asm	/^c0108c6d:	d1 fa                	sar    %edx$/;"	d
c0108c6f	obj/kernel.asm	/^c0108c6f:	89 c8                	mov    %ecx,%eax$/;"	l
c0108c71	obj/kernel.asm	/^c0108c71:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0108c74	obj/kernel.asm	/^c0108c74:	29 c2                	sub    %eax,%edx$/;"	l
c0108c76	obj/kernel.asm	/^c0108c76:	89 d0                	mov    %edx,%eax$/;"	l
c0108c78	obj/kernel.asm	/^c0108c78:	89 c2                	mov    %eax,%edx$/;"	l
c0108c7a	obj/kernel.asm	/^c0108c7a:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0108c7d	obj/kernel.asm	/^c0108c7d:	01 c2                	add    %eax,%edx$/;"	l
c0108c7f	obj/kernel.asm	/^c0108c7f:	89 c8                	mov    %ecx,%eax$/;"	l
c0108c81	obj/kernel.asm	/^c0108c81:	29 d0                	sub    %edx,%eax$/;"	l
c0108c83	obj/kernel.asm	/^c0108c83:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108c86	obj/kernel.asm	/^c0108c86:	50                   	push   %eax$/;"	l
c0108c87	obj/kernel.asm	/^c0108c87:	e8 26 fe ff ff       	call   c0108ab2 <phi_test_condvar>$/;"	l
c0108c8c	obj/kernel.asm	/^c0108c8c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108c8f	obj/kernel.asm	/^c0108c8f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108c92	obj/kernel.asm	/^c0108c92:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0108c95	obj/kernel.asm	/^c0108c95:	ba 67 66 66 66       	mov    $0x66666667,%edx$/;"	l
c0108c9a	obj/kernel.asm	/^c0108c9a:	89 c8                	mov    %ecx,%eax$/;"	l
c0108c9c	obj/kernel.asm	/^c0108c9c:	f7 ea                	imul   %edx$/;"	l
c0108c9e	obj/kernel.asm	/^c0108c9e:	d1 fa                	sar    %edx$/;"	d
c0108ca0	obj/kernel.asm	/^c0108ca0:	89 c8                	mov    %ecx,%eax$/;"	l
c0108ca2	obj/kernel.asm	/^c0108ca2:	c1 f8 1f             	sar    $0x1f,%eax$/;"	l
c0108ca5	obj/kernel.asm	/^c0108ca5:	29 c2                	sub    %eax,%edx$/;"	l
c0108ca7	obj/kernel.asm	/^c0108ca7:	89 d0                	mov    %edx,%eax$/;"	l
c0108ca9	obj/kernel.asm	/^c0108ca9:	89 c2                	mov    %eax,%edx$/;"	l
c0108cab	obj/kernel.asm	/^c0108cab:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0108cae	obj/kernel.asm	/^c0108cae:	01 c2                	add    %eax,%edx$/;"	l
c0108cb0	obj/kernel.asm	/^c0108cb0:	89 c8                	mov    %ecx,%eax$/;"	l
c0108cb2	obj/kernel.asm	/^c0108cb2:	29 d0                	sub    %edx,%eax$/;"	l
c0108cb4	obj/kernel.asm	/^c0108cb4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108cb7	obj/kernel.asm	/^c0108cb7:	50                   	push   %eax$/;"	l
c0108cb8	obj/kernel.asm	/^c0108cb8:	e8 f5 fd ff ff       	call   c0108ab2 <phi_test_condvar>$/;"	l
c0108cbd	obj/kernel.asm	/^c0108cbd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108cc0	obj/kernel.asm	/^c0108cc0:	a1 e0 da 14 c0       	mov    0xc014dae0,%eax$/;"	l
c0108cc5	obj/kernel.asm	/^c0108cc5:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0108cc8	obj/kernel.asm	/^c0108cc8:	85 c0                	test   %eax,%eax$/;"	l
c0108cca	obj/kernel.asm	/^c0108cca:	7e 16                	jle    c0108ce2 <phi_put_forks_condvar+0xa9>$/;"	l
c0108ccc	obj/kernel.asm	/^c0108ccc:	a1 e0 da 14 c0       	mov    0xc014dae0,%eax$/;"	l
c0108cd1	obj/kernel.asm	/^c0108cd1:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0108cd4	obj/kernel.asm	/^c0108cd4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108cd7	obj/kernel.asm	/^c0108cd7:	50                   	push   %eax$/;"	l
c0108cd8	obj/kernel.asm	/^c0108cd8:	e8 0b 08 00 00       	call   c01094e8 <up>$/;"	l
c0108cdd	obj/kernel.asm	/^c0108cdd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108ce0	obj/kernel.asm	/^c0108ce0:	eb 11                	jmp    c0108cf3 <phi_put_forks_condvar+0xba>$/;"	l
c0108ce2	obj/kernel.asm	/^c0108ce2:	a1 e0 da 14 c0       	mov    0xc014dae0,%eax$/;"	l
c0108ce7	obj/kernel.asm	/^c0108ce7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108cea	obj/kernel.asm	/^c0108cea:	50                   	push   %eax$/;"	l
c0108ceb	obj/kernel.asm	/^c0108ceb:	e8 f8 07 00 00       	call   c01094e8 <up>$/;"	l
c0108cf0	obj/kernel.asm	/^c0108cf0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108cf3	obj/kernel.asm	/^c0108cf3:	c9                   	leave  $/;"	l
c0108cf4	obj/kernel.asm	/^c0108cf4:	c3                   	ret    $/;"	l
c0108cf5	obj/kernel.asm	/^c0108cf5 <philosopher_using_condvar>:$/;"	l
c0108cf5	obj/kernel.asm	/^c0108cf5:	55                   	push   %ebp$/;"	l
c0108cf6	obj/kernel.asm	/^c0108cf6:	89 e5                	mov    %esp,%ebp$/;"	l
c0108cf8	obj/kernel.asm	/^c0108cf8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108cfb	obj/kernel.asm	/^c0108cfb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108d02	obj/kernel.asm	/^c0108d02:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108d05	obj/kernel.asm	/^c0108d05:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108d08	obj/kernel.asm	/^c0108d08:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108d0b	obj/kernel.asm	/^c0108d0b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108d0e	obj/kernel.asm	/^c0108d0e:	68 fc 60 11 c0       	push   $0xc01160fc$/;"	l
c0108d13	obj/kernel.asm	/^c0108d13:	e8 52 76 ff ff       	call   c010036a <cprintf>$/;"	l
c0108d18	obj/kernel.asm	/^c0108d18:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d1b	obj/kernel.asm	/^c0108d1b:	eb 62                	jmp    c0108d7f <philosopher_using_condvar+0x8a>$/;"	l
c0108d1d	obj/kernel.asm	/^c0108d1d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108d20	obj/kernel.asm	/^c0108d20:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108d23	obj/kernel.asm	/^c0108d23:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108d26	obj/kernel.asm	/^c0108d26:	68 1c 61 11 c0       	push   $0xc011611c$/;"	l
c0108d2b	obj/kernel.asm	/^c0108d2b:	e8 3a 76 ff ff       	call   c010036a <cprintf>$/;"	l
c0108d30	obj/kernel.asm	/^c0108d30:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d33	obj/kernel.asm	/^c0108d33:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108d36	obj/kernel.asm	/^c0108d36:	6a 0a                	push   $0xa$/;"	l
c0108d38	obj/kernel.asm	/^c0108d38:	e8 26 46 00 00       	call   c010d363 <do_sleep>$/;"	l
c0108d3d	obj/kernel.asm	/^c0108d3d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d40	obj/kernel.asm	/^c0108d40:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108d43	obj/kernel.asm	/^c0108d43:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108d46	obj/kernel.asm	/^c0108d46:	e8 3f fe ff ff       	call   c0108b8a <phi_take_forks_condvar>$/;"	l
c0108d4b	obj/kernel.asm	/^c0108d4b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d4e	obj/kernel.asm	/^c0108d4e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108d51	obj/kernel.asm	/^c0108d51:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108d54	obj/kernel.asm	/^c0108d54:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0108d57	obj/kernel.asm	/^c0108d57:	68 4c 61 11 c0       	push   $0xc011614c$/;"	l
c0108d5c	obj/kernel.asm	/^c0108d5c:	e8 09 76 ff ff       	call   c010036a <cprintf>$/;"	l
c0108d61	obj/kernel.asm	/^c0108d61:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d64	obj/kernel.asm	/^c0108d64:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108d67	obj/kernel.asm	/^c0108d67:	6a 0a                	push   $0xa$/;"	l
c0108d69	obj/kernel.asm	/^c0108d69:	e8 f5 45 00 00       	call   c010d363 <do_sleep>$/;"	l
c0108d6e	obj/kernel.asm	/^c0108d6e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d71	obj/kernel.asm	/^c0108d71:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108d74	obj/kernel.asm	/^c0108d74:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108d77	obj/kernel.asm	/^c0108d77:	e8 bd fe ff ff       	call   c0108c39 <phi_put_forks_condvar>$/;"	l
c0108d7c	obj/kernel.asm	/^c0108d7c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108d7f	obj/kernel.asm	/^c0108d7f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108d82	obj/kernel.asm	/^c0108d82:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0108d85	obj/kernel.asm	/^c0108d85:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0108d88	obj/kernel.asm	/^c0108d88:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c0108d8b	obj/kernel.asm	/^c0108d8b:	7e 90                	jle    c0108d1d <philosopher_using_condvar+0x28>$/;"	l
c0108d8d	obj/kernel.asm	/^c0108d8d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108d90	obj/kernel.asm	/^c0108d90:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108d93	obj/kernel.asm	/^c0108d93:	68 7c 61 11 c0       	push   $0xc011617c$/;"	l
c0108d98	obj/kernel.asm	/^c0108d98:	e8 cd 75 ff ff       	call   c010036a <cprintf>$/;"	l
c0108d9d	obj/kernel.asm	/^c0108d9d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108da0	obj/kernel.asm	/^c0108da0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0108da5	obj/kernel.asm	/^c0108da5:	c9                   	leave  $/;"	l
c0108da6	obj/kernel.asm	/^c0108da6:	c3                   	ret    $/;"	l
c0108da7	obj/kernel.asm	/^c0108da7 <check_sync>:$/;"	l
c0108da7	obj/kernel.asm	/^c0108da7:	55                   	push   %ebp$/;"	l
c0108da8	obj/kernel.asm	/^c0108da8:	89 e5                	mov    %esp,%ebp$/;"	l
c0108daa	obj/kernel.asm	/^c0108daa:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0108dad	obj/kernel.asm	/^c0108dad:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108db0	obj/kernel.asm	/^c0108db0:	6a 01                	push   $0x1$/;"	l
c0108db2	obj/kernel.asm	/^c0108db2:	68 c8 22 15 c0       	push   $0xc01522c8$/;"	l
c0108db7	obj/kernel.asm	/^c0108db7:	e8 c1 05 00 00       	call   c010937d <sem_init>$/;"	l
c0108dbc	obj/kernel.asm	/^c0108dbc:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108dbf	obj/kernel.asm	/^c0108dbf:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108dc6	obj/kernel.asm	/^c0108dc6:	e9 8e 00 00 00       	jmp    c0108e59 <check_sync+0xb2>$/;"	l
c0108dcb	obj/kernel.asm	/^c0108dcb:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0108dce	obj/kernel.asm	/^c0108dce:	89 d0                	mov    %edx,%eax$/;"	l
c0108dd0	obj/kernel.asm	/^c0108dd0:	01 c0                	add    %eax,%eax$/;"	l
c0108dd2	obj/kernel.asm	/^c0108dd2:	01 d0                	add    %edx,%eax$/;"	l
c0108dd4	obj/kernel.asm	/^c0108dd4:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0108dd7	obj/kernel.asm	/^c0108dd7:	05 40 23 15 c0       	add    $0xc0152340,%eax$/;"	l
c0108ddc	obj/kernel.asm	/^c0108ddc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108ddf	obj/kernel.asm	/^c0108ddf:	6a 00                	push   $0x0$/;"	l
c0108de1	obj/kernel.asm	/^c0108de1:	50                   	push   %eax$/;"	l
c0108de2	obj/kernel.asm	/^c0108de2:	e8 96 05 00 00       	call   c010937d <sem_init>$/;"	l
c0108de7	obj/kernel.asm	/^c0108de7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108dea	obj/kernel.asm	/^c0108dea:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108ded	obj/kernel.asm	/^c0108ded:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108df0	obj/kernel.asm	/^c0108df0:	6a 00                	push   $0x0$/;"	l
c0108df2	obj/kernel.asm	/^c0108df2:	50                   	push   %eax$/;"	l
c0108df3	obj/kernel.asm	/^c0108df3:	68 00 8a 10 c0       	push   $0xc0108a00$/;"	l
c0108df8	obj/kernel.asm	/^c0108df8:	e8 43 2c 00 00       	call   c010ba40 <kernel_thread>$/;"	l
c0108dfd	obj/kernel.asm	/^c0108dfd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e00	obj/kernel.asm	/^c0108e00:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108e03	obj/kernel.asm	/^c0108e03:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0108e07	obj/kernel.asm	/^c0108e07:	7f 17                	jg     c0108e20 <check_sync+0x79>$/;"	l
c0108e09	obj/kernel.asm	/^c0108e09:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108e0c	obj/kernel.asm	/^c0108e0c:	68 9c 61 11 c0       	push   $0xc011619c$/;"	l
c0108e11	obj/kernel.asm	/^c0108e11:	68 c0 00 00 00       	push   $0xc0$/;"	l
c0108e16	obj/kernel.asm	/^c0108e16:	68 ce 61 11 c0       	push   $0xc01161ce$/;"	l
c0108e1b	obj/kernel.asm	/^c0108e1b:	e8 af 76 ff ff       	call   c01004cf <__panic>$/;"	l
c0108e20	obj/kernel.asm	/^c0108e20:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108e23	obj/kernel.asm	/^c0108e23:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0108e26	obj/kernel.asm	/^c0108e26:	e8 a3 2b 00 00       	call   c010b9ce <find_proc>$/;"	l
c0108e2b	obj/kernel.asm	/^c0108e2b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e2e	obj/kernel.asm	/^c0108e2e:	89 c2                	mov    %eax,%edx$/;"	l
c0108e30	obj/kernel.asm	/^c0108e30:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e33	obj/kernel.asm	/^c0108e33:	89 14 85 14 23 15 c0 	mov    %edx,-0x3feadcec(,%eax,4)$/;"	l
c0108e3a	obj/kernel.asm	/^c0108e3a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e3d	obj/kernel.asm	/^c0108e3d:	8b 04 85 14 23 15 c0 	mov    -0x3feadcec(,%eax,4),%eax$/;"	l
c0108e44	obj/kernel.asm	/^c0108e44:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108e47	obj/kernel.asm	/^c0108e47:	68 e5 61 11 c0       	push   $0xc01161e5$/;"	l
c0108e4c	obj/kernel.asm	/^c0108e4c:	50                   	push   %eax$/;"	l
c0108e4d	obj/kernel.asm	/^c0108e4d:	e8 75 27 00 00       	call   c010b5c7 <set_proc_name>$/;"	l
c0108e52	obj/kernel.asm	/^c0108e52:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e55	obj/kernel.asm	/^c0108e55:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108e59	obj/kernel.asm	/^c0108e59:	83 7d f4 04          	cmpl   $0x4,-0xc(%ebp)$/;"	l
c0108e5d	obj/kernel.asm	/^c0108e5d:	0f 8e 68 ff ff ff    	jle    c0108dcb <check_sync+0x24>$/;"	l
c0108e63	obj/kernel.asm	/^c0108e63:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108e66	obj/kernel.asm	/^c0108e66:	6a 05                	push   $0x5$/;"	l
c0108e68	obj/kernel.asm	/^c0108e68:	68 e0 22 15 c0       	push   $0xc01522e0$/;"	l
c0108e6d	obj/kernel.asm	/^c0108e6d:	e8 10 07 00 00       	call   c0109582 <monitor_init>$/;"	l
c0108e72	obj/kernel.asm	/^c0108e72:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108e75	obj/kernel.asm	/^c0108e75:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0108e7c	obj/kernel.asm	/^c0108e7c:	eb 7d                	jmp    c0108efb <check_sync+0x154>$/;"	l
c0108e7e	obj/kernel.asm	/^c0108e7e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e81	obj/kernel.asm	/^c0108e81:	c7 04 85 00 23 15 c0 	movl   $0x0,-0x3feadd00(,%eax,4)$/;"	l
c0108e88	obj/kernel.asm	/^c0108e88:	00 00 00 00 $/;"	l
c0108e8c	obj/kernel.asm	/^c0108e8c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108e8f	obj/kernel.asm	/^c0108e8f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108e92	obj/kernel.asm	/^c0108e92:	6a 00                	push   $0x0$/;"	l
c0108e94	obj/kernel.asm	/^c0108e94:	50                   	push   %eax$/;"	l
c0108e95	obj/kernel.asm	/^c0108e95:	68 f5 8c 10 c0       	push   $0xc0108cf5$/;"	l
c0108e9a	obj/kernel.asm	/^c0108e9a:	e8 a1 2b 00 00       	call   c010ba40 <kernel_thread>$/;"	l
c0108e9f	obj/kernel.asm	/^c0108e9f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108ea2	obj/kernel.asm	/^c0108ea2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0108ea5	obj/kernel.asm	/^c0108ea5:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0108ea9	obj/kernel.asm	/^c0108ea9:	7f 17                	jg     c0108ec2 <check_sync+0x11b>$/;"	l
c0108eab	obj/kernel.asm	/^c0108eab:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0108eae	obj/kernel.asm	/^c0108eae:	68 fc 61 11 c0       	push   $0xc01161fc$/;"	l
c0108eb3	obj/kernel.asm	/^c0108eb3:	68 cc 00 00 00       	push   $0xcc$/;"	l
c0108eb8	obj/kernel.asm	/^c0108eb8:	68 ce 61 11 c0       	push   $0xc01161ce$/;"	l
c0108ebd	obj/kernel.asm	/^c0108ebd:	e8 0d 76 ff ff       	call   c01004cf <__panic>$/;"	l
c0108ec2	obj/kernel.asm	/^c0108ec2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0108ec5	obj/kernel.asm	/^c0108ec5:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0108ec8	obj/kernel.asm	/^c0108ec8:	e8 01 2b 00 00       	call   c010b9ce <find_proc>$/;"	l
c0108ecd	obj/kernel.asm	/^c0108ecd:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108ed0	obj/kernel.asm	/^c0108ed0:	89 c2                	mov    %eax,%edx$/;"	l
c0108ed2	obj/kernel.asm	/^c0108ed2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108ed5	obj/kernel.asm	/^c0108ed5:	89 14 85 b4 22 15 c0 	mov    %edx,-0x3feadd4c(,%eax,4)$/;"	l
c0108edc	obj/kernel.asm	/^c0108edc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108edf	obj/kernel.asm	/^c0108edf:	8b 04 85 b4 22 15 c0 	mov    -0x3feadd4c(,%eax,4),%eax$/;"	l
c0108ee6	obj/kernel.asm	/^c0108ee6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0108ee9	obj/kernel.asm	/^c0108ee9:	68 2c 62 11 c0       	push   $0xc011622c$/;"	l
c0108eee	obj/kernel.asm	/^c0108eee:	50                   	push   %eax$/;"	l
c0108eef	obj/kernel.asm	/^c0108eef:	e8 d3 26 00 00       	call   c010b5c7 <set_proc_name>$/;"	l
c0108ef4	obj/kernel.asm	/^c0108ef4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0108ef7	obj/kernel.asm	/^c0108ef7:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0108efb	obj/kernel.asm	/^c0108efb:	83 7d f4 04          	cmpl   $0x4,-0xc(%ebp)$/;"	l
c0108eff	obj/kernel.asm	/^c0108eff:	0f 8e 79 ff ff ff    	jle    c0108e7e <check_sync+0xd7>$/;"	l
c0108f05	obj/kernel.asm	/^c0108f05:	c9                   	leave  $/;"	l
c0108f06	obj/kernel.asm	/^c0108f06:	c3                   	ret    $/;"	l
c0108f07	obj/kernel.asm	/^c0108f07 <wait_init>:$/;"	l
c0108f07	obj/kernel.asm	/^c0108f07:	55                   	push   %ebp$/;"	l
c0108f08	obj/kernel.asm	/^c0108f08:	89 e5                	mov    %esp,%ebp$/;"	l
c0108f0a	obj/kernel.asm	/^c0108f0a:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0108f0d	obj/kernel.asm	/^c0108f0d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f10	obj/kernel.asm	/^c0108f10:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0108f13	obj/kernel.asm	/^c0108f13:	89 10                	mov    %edx,(%eax)$/;"	l
c0108f15	obj/kernel.asm	/^c0108f15:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f18	obj/kernel.asm	/^c0108f18:	c7 40 04 00 00 00 80 	movl   $0x80000000,0x4(%eax)$/;"	l
c0108f1f	obj/kernel.asm	/^c0108f1f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f22	obj/kernel.asm	/^c0108f22:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0108f25	obj/kernel.asm	/^c0108f25:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0108f28	obj/kernel.asm	/^c0108f28:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108f2b	obj/kernel.asm	/^c0108f2b:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0108f2e	obj/kernel.asm	/^c0108f2e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108f31	obj/kernel.asm	/^c0108f31:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108f34	obj/kernel.asm	/^c0108f34:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108f37	obj/kernel.asm	/^c0108f37:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108f3a	obj/kernel.asm	/^c0108f3a:	89 10                	mov    %edx,(%eax)$/;"	l
c0108f3c	obj/kernel.asm	/^c0108f3c:	c9                   	leave  $/;"	l
c0108f3d	obj/kernel.asm	/^c0108f3d:	c3                   	ret    $/;"	l
c0108f3e	obj/kernel.asm	/^c0108f3e <wait_queue_init>:$/;"	l
c0108f3e	obj/kernel.asm	/^c0108f3e:	55                   	push   %ebp$/;"	l
c0108f3f	obj/kernel.asm	/^c0108f3f:	89 e5                	mov    %esp,%ebp$/;"	l
c0108f41	obj/kernel.asm	/^c0108f41:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0108f44	obj/kernel.asm	/^c0108f44:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108f47	obj/kernel.asm	/^c0108f47:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0108f4a	obj/kernel.asm	/^c0108f4a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108f4d	obj/kernel.asm	/^c0108f4d:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0108f50	obj/kernel.asm	/^c0108f50:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108f53	obj/kernel.asm	/^c0108f53:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108f56	obj/kernel.asm	/^c0108f56:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0108f59	obj/kernel.asm	/^c0108f59:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0108f5c	obj/kernel.asm	/^c0108f5c:	89 10                	mov    %edx,(%eax)$/;"	l
c0108f5e	obj/kernel.asm	/^c0108f5e:	c9                   	leave  $/;"	l
c0108f5f	obj/kernel.asm	/^c0108f5f:	c3                   	ret    $/;"	l
c0108f60	obj/kernel.asm	/^c0108f60 <wait_queue_add>:$/;"	l
c0108f60	obj/kernel.asm	/^c0108f60:	55                   	push   %ebp$/;"	l
c0108f61	obj/kernel.asm	/^c0108f61:	89 e5                	mov    %esp,%ebp$/;"	l
c0108f63	obj/kernel.asm	/^c0108f63:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0108f66	obj/kernel.asm	/^c0108f66:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108f69	obj/kernel.asm	/^c0108f69:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0108f6c	obj/kernel.asm	/^c0108f6c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0108f6f	obj/kernel.asm	/^c0108f6f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0108f72	obj/kernel.asm	/^c0108f72:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0108f75	obj/kernel.asm	/^c0108f75:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c0108f78	obj/kernel.asm	/^c0108f78:	0f 94 c0             	sete   %al$/;"	l
c0108f7b	obj/kernel.asm	/^c0108f7b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0108f7e	obj/kernel.asm	/^c0108f7e:	85 c0                	test   %eax,%eax$/;"	l
c0108f80	obj/kernel.asm	/^c0108f80:	74 09                	je     c0108f8b <wait_queue_add+0x2b>$/;"	l
c0108f82	obj/kernel.asm	/^c0108f82:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108f85	obj/kernel.asm	/^c0108f85:	8b 00                	mov    (%eax),%eax$/;"	l
c0108f87	obj/kernel.asm	/^c0108f87:	85 c0                	test   %eax,%eax$/;"	l
c0108f89	obj/kernel.asm	/^c0108f89:	75 16                	jne    c0108fa1 <wait_queue_add+0x41>$/;"	l
c0108f8b	obj/kernel.asm	/^c0108f8b:	68 48 62 11 c0       	push   $0xc0116248$/;"	l
c0108f90	obj/kernel.asm	/^c0108f90:	68 7d 62 11 c0       	push   $0xc011627d$/;"	l
c0108f95	obj/kernel.asm	/^c0108f95:	6a 15                	push   $0x15$/;"	l
c0108f97	obj/kernel.asm	/^c0108f97:	68 92 62 11 c0       	push   $0xc0116292$/;"	l
c0108f9c	obj/kernel.asm	/^c0108f9c:	e8 2e 75 ff ff       	call   c01004cf <__panic>$/;"	l
c0108fa1	obj/kernel.asm	/^c0108fa1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108fa4	obj/kernel.asm	/^c0108fa4:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0108fa7	obj/kernel.asm	/^c0108fa7:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0108faa	obj/kernel.asm	/^c0108faa:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108fad	obj/kernel.asm	/^c0108fad:	8d 50 0c             	lea    0xc(%eax),%edx$/;"	l
c0108fb0	obj/kernel.asm	/^c0108fb0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0108fb3	obj/kernel.asm	/^c0108fb3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0108fb6	obj/kernel.asm	/^c0108fb6:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0108fb9	obj/kernel.asm	/^c0108fb9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108fbc	obj/kernel.asm	/^c0108fbc:	8b 00                	mov    (%eax),%eax$/;"	l
c0108fbe	obj/kernel.asm	/^c0108fbe:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0108fc1	obj/kernel.asm	/^c0108fc1:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c0108fc4	obj/kernel.asm	/^c0108fc4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0108fc7	obj/kernel.asm	/^c0108fc7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0108fca	obj/kernel.asm	/^c0108fca:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0108fcd	obj/kernel.asm	/^c0108fcd:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108fd0	obj/kernel.asm	/^c0108fd0:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0108fd3	obj/kernel.asm	/^c0108fd3:	89 10                	mov    %edx,(%eax)$/;"	l
c0108fd5	obj/kernel.asm	/^c0108fd5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0108fd8	obj/kernel.asm	/^c0108fd8:	8b 10                	mov    (%eax),%edx$/;"	l
c0108fda	obj/kernel.asm	/^c0108fda:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0108fdd	obj/kernel.asm	/^c0108fdd:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108fe0	obj/kernel.asm	/^c0108fe0:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108fe3	obj/kernel.asm	/^c0108fe3:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0108fe6	obj/kernel.asm	/^c0108fe6:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0108fe9	obj/kernel.asm	/^c0108fe9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0108fec	obj/kernel.asm	/^c0108fec:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0108fef	obj/kernel.asm	/^c0108fef:	89 10                	mov    %edx,(%eax)$/;"	l
c0108ff1	obj/kernel.asm	/^c0108ff1:	c9                   	leave  $/;"	l
c0108ff2	obj/kernel.asm	/^c0108ff2:	c3                   	ret    $/;"	l
c0108ff3	obj/kernel.asm	/^c0108ff3 <wait_queue_del>:$/;"	l
c0108ff3	obj/kernel.asm	/^c0108ff3:	55                   	push   %ebp$/;"	l
c0108ff4	obj/kernel.asm	/^c0108ff4:	89 e5                	mov    %esp,%ebp$/;"	l
c0108ff6	obj/kernel.asm	/^c0108ff6:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0108ff9	obj/kernel.asm	/^c0108ff9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0108ffc	obj/kernel.asm	/^c0108ffc:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0108fff	obj/kernel.asm	/^c0108fff:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109002	obj/kernel.asm	/^c0109002:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109005	obj/kernel.asm	/^c0109005:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109008	obj/kernel.asm	/^c0109008:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010900b	obj/kernel.asm	/^c010900b:	0f 94 c0             	sete   %al$/;"	l
c010900e	obj/kernel.asm	/^c010900e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0109011	obj/kernel.asm	/^c0109011:	85 c0                	test   %eax,%eax$/;"	l
c0109013	obj/kernel.asm	/^c0109013:	75 0b                	jne    c0109020 <wait_queue_del+0x2d>$/;"	l
c0109015	obj/kernel.asm	/^c0109015:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109018	obj/kernel.asm	/^c0109018:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010901b	obj/kernel.asm	/^c010901b:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010901e	obj/kernel.asm	/^c010901e:	74 16                	je     c0109036 <wait_queue_del+0x43>$/;"	l
c0109020	obj/kernel.asm	/^c0109020:	68 a4 62 11 c0       	push   $0xc01162a4$/;"	l
c0109025	obj/kernel.asm	/^c0109025:	68 7d 62 11 c0       	push   $0xc011627d$/;"	l
c010902a	obj/kernel.asm	/^c010902a:	6a 1c                	push   $0x1c$/;"	l
c010902c	obj/kernel.asm	/^c010902c:	68 92 62 11 c0       	push   $0xc0116292$/;"	l
c0109031	obj/kernel.asm	/^c0109031:	e8 99 74 ff ff       	call   c01004cf <__panic>$/;"	l
c0109036	obj/kernel.asm	/^c0109036:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109039	obj/kernel.asm	/^c0109039:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010903c	obj/kernel.asm	/^c010903c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010903f	obj/kernel.asm	/^c010903f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109042	obj/kernel.asm	/^c0109042:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109045	obj/kernel.asm	/^c0109045:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109048	obj/kernel.asm	/^c0109048:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010904b	obj/kernel.asm	/^c010904b:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010904e	obj/kernel.asm	/^c010904e:	8b 12                	mov    (%edx),%edx$/;"	l
c0109050	obj/kernel.asm	/^c0109050:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c0109053	obj/kernel.asm	/^c0109053:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0109056	obj/kernel.asm	/^c0109056:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0109059	obj/kernel.asm	/^c0109059:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010905c	obj/kernel.asm	/^c010905c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010905f	obj/kernel.asm	/^c010905f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109062	obj/kernel.asm	/^c0109062:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0109065	obj/kernel.asm	/^c0109065:	89 10                	mov    %edx,(%eax)$/;"	l
c0109067	obj/kernel.asm	/^c0109067:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010906a	obj/kernel.asm	/^c010906a:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010906d	obj/kernel.asm	/^c010906d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109070	obj/kernel.asm	/^c0109070:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0109073	obj/kernel.asm	/^c0109073:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0109076	obj/kernel.asm	/^c0109076:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0109079	obj/kernel.asm	/^c0109079:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010907c	obj/kernel.asm	/^c010907c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010907f	obj/kernel.asm	/^c010907f:	89 10                	mov    %edx,(%eax)$/;"	l
c0109081	obj/kernel.asm	/^c0109081:	c9                   	leave  $/;"	l
c0109082	obj/kernel.asm	/^c0109082:	c3                   	ret    $/;"	l
c0109083	obj/kernel.asm	/^c0109083 <wait_queue_next>:$/;"	l
c0109083	obj/kernel.asm	/^c0109083:	55                   	push   %ebp$/;"	l
c0109084	obj/kernel.asm	/^c0109084:	89 e5                	mov    %esp,%ebp$/;"	l
c0109086	obj/kernel.asm	/^c0109086:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109089	obj/kernel.asm	/^c0109089:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010908c	obj/kernel.asm	/^c010908c:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010908f	obj/kernel.asm	/^c010908f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109092	obj/kernel.asm	/^c0109092:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109095	obj/kernel.asm	/^c0109095:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109098	obj/kernel.asm	/^c0109098:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010909b	obj/kernel.asm	/^c010909b:	0f 94 c0             	sete   %al$/;"	l
c010909e	obj/kernel.asm	/^c010909e:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01090a1	obj/kernel.asm	/^c01090a1:	85 c0                	test   %eax,%eax$/;"	l
c01090a3	obj/kernel.asm	/^c01090a3:	75 0b                	jne    c01090b0 <wait_queue_next+0x2d>$/;"	l
c01090a5	obj/kernel.asm	/^c01090a5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01090a8	obj/kernel.asm	/^c01090a8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01090ab	obj/kernel.asm	/^c01090ab:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c01090ae	obj/kernel.asm	/^c01090ae:	74 16                	je     c01090c6 <wait_queue_next+0x43>$/;"	l
c01090b0	obj/kernel.asm	/^c01090b0:	68 a4 62 11 c0       	push   $0xc01162a4$/;"	l
c01090b5	obj/kernel.asm	/^c01090b5:	68 7d 62 11 c0       	push   $0xc011627d$/;"	l
c01090ba	obj/kernel.asm	/^c01090ba:	6a 22                	push   $0x22$/;"	l
c01090bc	obj/kernel.asm	/^c01090bc:	68 92 62 11 c0       	push   $0xc0116292$/;"	l
c01090c1	obj/kernel.asm	/^c01090c1:	e8 09 74 ff ff       	call   c01004cf <__panic>$/;"	l
c01090c6	obj/kernel.asm	/^c01090c6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01090c9	obj/kernel.asm	/^c01090c9:	83 c0 0c             	add    $0xc,%eax$/;"	l
c01090cc	obj/kernel.asm	/^c01090cc:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01090cf	obj/kernel.asm	/^c01090cf:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01090d2	obj/kernel.asm	/^c01090d2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01090d5	obj/kernel.asm	/^c01090d5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01090d8	obj/kernel.asm	/^c01090d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01090db	obj/kernel.asm	/^c01090db:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c01090de	obj/kernel.asm	/^c01090de:	74 08                	je     c01090e8 <wait_queue_next+0x65>$/;"	l
c01090e0	obj/kernel.asm	/^c01090e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01090e3	obj/kernel.asm	/^c01090e3:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01090e6	obj/kernel.asm	/^c01090e6:	eb 05                	jmp    c01090ed <wait_queue_next+0x6a>$/;"	l
c01090e8	obj/kernel.asm	/^c01090e8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01090ed	obj/kernel.asm	/^c01090ed:	c9                   	leave  $/;"	l
c01090ee	obj/kernel.asm	/^c01090ee:	c3                   	ret    $/;"	l
c01090ef	obj/kernel.asm	/^c01090ef <wait_queue_prev>:$/;"	l
c01090ef	obj/kernel.asm	/^c01090ef:	55                   	push   %ebp$/;"	l
c01090f0	obj/kernel.asm	/^c01090f0:	89 e5                	mov    %esp,%ebp$/;"	l
c01090f2	obj/kernel.asm	/^c01090f2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01090f5	obj/kernel.asm	/^c01090f5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01090f8	obj/kernel.asm	/^c01090f8:	83 c0 0c             	add    $0xc,%eax$/;"	l
c01090fb	obj/kernel.asm	/^c01090fb:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01090fe	obj/kernel.asm	/^c01090fe:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109101	obj/kernel.asm	/^c0109101:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0109104	obj/kernel.asm	/^c0109104:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c0109107	obj/kernel.asm	/^c0109107:	0f 94 c0             	sete   %al$/;"	l
c010910a	obj/kernel.asm	/^c010910a:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010910d	obj/kernel.asm	/^c010910d:	85 c0                	test   %eax,%eax$/;"	l
c010910f	obj/kernel.asm	/^c010910f:	75 0b                	jne    c010911c <wait_queue_prev+0x2d>$/;"	l
c0109111	obj/kernel.asm	/^c0109111:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109114	obj/kernel.asm	/^c0109114:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0109117	obj/kernel.asm	/^c0109117:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010911a	obj/kernel.asm	/^c010911a:	74 16                	je     c0109132 <wait_queue_prev+0x43>$/;"	l
c010911c	obj/kernel.asm	/^c010911c:	68 a4 62 11 c0       	push   $0xc01162a4$/;"	l
c0109121	obj/kernel.asm	/^c0109121:	68 7d 62 11 c0       	push   $0xc011627d$/;"	l
c0109126	obj/kernel.asm	/^c0109126:	6a 2c                	push   $0x2c$/;"	l
c0109128	obj/kernel.asm	/^c0109128:	68 92 62 11 c0       	push   $0xc0116292$/;"	l
c010912d	obj/kernel.asm	/^c010912d:	e8 9d 73 ff ff       	call   c01004cf <__panic>$/;"	l
c0109132	obj/kernel.asm	/^c0109132:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109135	obj/kernel.asm	/^c0109135:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109138	obj/kernel.asm	/^c0109138:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010913b	obj/kernel.asm	/^c010913b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010913e	obj/kernel.asm	/^c010913e:	8b 00                	mov    (%eax),%eax$/;"	l
c0109140	obj/kernel.asm	/^c0109140:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109143	obj/kernel.asm	/^c0109143:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109146	obj/kernel.asm	/^c0109146:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0109149	obj/kernel.asm	/^c0109149:	74 08                	je     c0109153 <wait_queue_prev+0x64>$/;"	l
c010914b	obj/kernel.asm	/^c010914b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010914e	obj/kernel.asm	/^c010914e:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c0109151	obj/kernel.asm	/^c0109151:	eb 05                	jmp    c0109158 <wait_queue_prev+0x69>$/;"	l
c0109153	obj/kernel.asm	/^c0109153:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109158	obj/kernel.asm	/^c0109158:	c9                   	leave  $/;"	l
c0109159	obj/kernel.asm	/^c0109159:	c3                   	ret    $/;"	l
c010915a	obj/kernel.asm	/^c010915a <wait_queue_first>:$/;"	l
c010915a	obj/kernel.asm	/^c010915a:	55                   	push   %ebp$/;"	l
c010915b	obj/kernel.asm	/^c010915b:	89 e5                	mov    %esp,%ebp$/;"	l
c010915d	obj/kernel.asm	/^c010915d:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0109160	obj/kernel.asm	/^c0109160:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109163	obj/kernel.asm	/^c0109163:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0109166	obj/kernel.asm	/^c0109166:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0109169	obj/kernel.asm	/^c0109169:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010916c	obj/kernel.asm	/^c010916c:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010916f	obj/kernel.asm	/^c010916f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109172	obj/kernel.asm	/^c0109172:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c0109175	obj/kernel.asm	/^c0109175:	74 08                	je     c010917f <wait_queue_first+0x25>$/;"	l
c0109177	obj/kernel.asm	/^c0109177:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010917a	obj/kernel.asm	/^c010917a:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c010917d	obj/kernel.asm	/^c010917d:	eb 05                	jmp    c0109184 <wait_queue_first+0x2a>$/;"	l
c010917f	obj/kernel.asm	/^c010917f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109184	obj/kernel.asm	/^c0109184:	c9                   	leave  $/;"	l
c0109185	obj/kernel.asm	/^c0109185:	c3                   	ret    $/;"	l
c0109186	obj/kernel.asm	/^c0109186 <wait_queue_last>:$/;"	l
c0109186	obj/kernel.asm	/^c0109186:	55                   	push   %ebp$/;"	l
c0109187	obj/kernel.asm	/^c0109187:	89 e5                	mov    %esp,%ebp$/;"	l
c0109189	obj/kernel.asm	/^c0109189:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010918c	obj/kernel.asm	/^c010918c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010918f	obj/kernel.asm	/^c010918f:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c0109192	obj/kernel.asm	/^c0109192:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0109195	obj/kernel.asm	/^c0109195:	8b 00                	mov    (%eax),%eax$/;"	l
c0109197	obj/kernel.asm	/^c0109197:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010919a	obj/kernel.asm	/^c010919a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010919d	obj/kernel.asm	/^c010919d:	3b 45 fc             	cmp    -0x4(%ebp),%eax$/;"	l
c01091a0	obj/kernel.asm	/^c01091a0:	74 08                	je     c01091aa <wait_queue_last+0x24>$/;"	l
c01091a2	obj/kernel.asm	/^c01091a2:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01091a5	obj/kernel.asm	/^c01091a5:	83 e8 0c             	sub    $0xc,%eax$/;"	l
c01091a8	obj/kernel.asm	/^c01091a8:	eb 05                	jmp    c01091af <wait_queue_last+0x29>$/;"	l
c01091aa	obj/kernel.asm	/^c01091aa:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01091af	obj/kernel.asm	/^c01091af:	c9                   	leave  $/;"	l
c01091b0	obj/kernel.asm	/^c01091b0:	c3                   	ret    $/;"	l
c01091b1	obj/kernel.asm	/^c01091b1 <wait_queue_empty>:$/;"	l
c01091b1	obj/kernel.asm	/^c01091b1:	55                   	push   %ebp$/;"	l
c01091b2	obj/kernel.asm	/^c01091b2:	89 e5                	mov    %esp,%ebp$/;"	l
c01091b4	obj/kernel.asm	/^c01091b4:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01091b7	obj/kernel.asm	/^c01091b7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01091ba	obj/kernel.asm	/^c01091ba:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01091bd	obj/kernel.asm	/^c01091bd:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01091c0	obj/kernel.asm	/^c01091c0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01091c3	obj/kernel.asm	/^c01091c3:	39 45 fc             	cmp    %eax,-0x4(%ebp)$/;"	l
c01091c6	obj/kernel.asm	/^c01091c6:	0f 94 c0             	sete   %al$/;"	l
c01091c9	obj/kernel.asm	/^c01091c9:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01091cc	obj/kernel.asm	/^c01091cc:	90                   	nop$/;"	l
c01091cd	obj/kernel.asm	/^c01091cd:	c9                   	leave  $/;"	l
c01091ce	obj/kernel.asm	/^c01091ce:	c3                   	ret    $/;"	l
c01091cf	obj/kernel.asm	/^c01091cf <wait_in_queue>:$/;"	l
c01091cf	obj/kernel.asm	/^c01091cf:	55                   	push   %ebp$/;"	l
c01091d0	obj/kernel.asm	/^c01091d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01091d2	obj/kernel.asm	/^c01091d2:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01091d5	obj/kernel.asm	/^c01091d5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01091d8	obj/kernel.asm	/^c01091d8:	83 c0 0c             	add    $0xc,%eax$/;"	l
c01091db	obj/kernel.asm	/^c01091db:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01091de	obj/kernel.asm	/^c01091de:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01091e1	obj/kernel.asm	/^c01091e1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01091e4	obj/kernel.asm	/^c01091e4:	39 45 fc             	cmp    %eax,-0x4(%ebp)$/;"	l
c01091e7	obj/kernel.asm	/^c01091e7:	0f 94 c0             	sete   %al$/;"	l
c01091ea	obj/kernel.asm	/^c01091ea:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01091ed	obj/kernel.asm	/^c01091ed:	85 c0                	test   %eax,%eax$/;"	l
c01091ef	obj/kernel.asm	/^c01091ef:	0f 94 c0             	sete   %al$/;"	l
c01091f2	obj/kernel.asm	/^c01091f2:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01091f5	obj/kernel.asm	/^c01091f5:	c9                   	leave  $/;"	l
c01091f6	obj/kernel.asm	/^c01091f6:	c3                   	ret    $/;"	l
c01091f7	obj/kernel.asm	/^c01091f7 <wakeup_wait>:$/;"	l
c01091f7	obj/kernel.asm	/^c01091f7:	55                   	push   %ebp$/;"	l
c01091f8	obj/kernel.asm	/^c01091f8:	89 e5                	mov    %esp,%ebp$/;"	l
c01091fa	obj/kernel.asm	/^c01091fa:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01091fd	obj/kernel.asm	/^c01091fd:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0109201	obj/kernel.asm	/^c0109201:	74 11                	je     c0109214 <wakeup_wait+0x1d>$/;"	l
c0109203	obj/kernel.asm	/^c0109203:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109206	obj/kernel.asm	/^c0109206:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109209	obj/kernel.asm	/^c0109209:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010920c	obj/kernel.asm	/^c010920c:	e8 e2 fd ff ff       	call   c0108ff3 <wait_queue_del>$/;"	l
c0109211	obj/kernel.asm	/^c0109211:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109214	obj/kernel.asm	/^c0109214:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109217	obj/kernel.asm	/^c0109217:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010921a	obj/kernel.asm	/^c010921a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010921d	obj/kernel.asm	/^c010921d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0109220	obj/kernel.asm	/^c0109220:	8b 00                	mov    (%eax),%eax$/;"	l
c0109222	obj/kernel.asm	/^c0109222:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109225	obj/kernel.asm	/^c0109225:	50                   	push   %eax$/;"	l
c0109226	obj/kernel.asm	/^c0109226:	e8 13 43 00 00       	call   c010d53e <wakeup_proc>$/;"	l
c010922b	obj/kernel.asm	/^c010922b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010922e	obj/kernel.asm	/^c010922e:	c9                   	leave  $/;"	l
c010922f	obj/kernel.asm	/^c010922f:	c3                   	ret    $/;"	l
c0109230	obj/kernel.asm	/^c0109230 <wakeup_first>:$/;"	l
c0109230	obj/kernel.asm	/^c0109230:	55                   	push   %ebp$/;"	l
c0109231	obj/kernel.asm	/^c0109231:	89 e5                	mov    %esp,%ebp$/;"	l
c0109233	obj/kernel.asm	/^c0109233:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109236	obj/kernel.asm	/^c0109236:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109239	obj/kernel.asm	/^c0109239:	e8 1c ff ff ff       	call   c010915a <wait_queue_first>$/;"	l
c010923e	obj/kernel.asm	/^c010923e:	83 c4 04             	add    $0x4,%esp$/;"	l
c0109241	obj/kernel.asm	/^c0109241:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109244	obj/kernel.asm	/^c0109244:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109248	obj/kernel.asm	/^c0109248:	74 14                	je     c010925e <wakeup_first+0x2e>$/;"	l
c010924a	obj/kernel.asm	/^c010924a:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010924d	obj/kernel.asm	/^c010924d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109250	obj/kernel.asm	/^c0109250:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109253	obj/kernel.asm	/^c0109253:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109256	obj/kernel.asm	/^c0109256:	e8 9c ff ff ff       	call   c01091f7 <wakeup_wait>$/;"	l
c010925b	obj/kernel.asm	/^c010925b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010925e	obj/kernel.asm	/^c010925e:	c9                   	leave  $/;"	l
c010925f	obj/kernel.asm	/^c010925f:	c3                   	ret    $/;"	l
c0109260	obj/kernel.asm	/^c0109260 <wakeup_queue>:$/;"	l
c0109260	obj/kernel.asm	/^c0109260:	55                   	push   %ebp$/;"	l
c0109261	obj/kernel.asm	/^c0109261:	89 e5                	mov    %esp,%ebp$/;"	l
c0109263	obj/kernel.asm	/^c0109263:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109266	obj/kernel.asm	/^c0109266:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109269	obj/kernel.asm	/^c0109269:	e8 ec fe ff ff       	call   c010915a <wait_queue_first>$/;"	l
c010926e	obj/kernel.asm	/^c010926e:	83 c4 04             	add    $0x4,%esp$/;"	l
c0109271	obj/kernel.asm	/^c0109271:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109274	obj/kernel.asm	/^c0109274:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109278	obj/kernel.asm	/^c0109278:	74 5f                	je     c01092d9 <wakeup_queue+0x79>$/;"	l
c010927a	obj/kernel.asm	/^c010927a:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010927e	obj/kernel.asm	/^c010927e:	74 2c                	je     c01092ac <wakeup_queue+0x4c>$/;"	l
c0109280	obj/kernel.asm	/^c0109280:	6a 01                	push   $0x1$/;"	l
c0109282	obj/kernel.asm	/^c0109282:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109285	obj/kernel.asm	/^c0109285:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109288	obj/kernel.asm	/^c0109288:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010928b	obj/kernel.asm	/^c010928b:	e8 67 ff ff ff       	call   c01091f7 <wakeup_wait>$/;"	l
c0109290	obj/kernel.asm	/^c0109290:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109293	obj/kernel.asm	/^c0109293:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109296	obj/kernel.asm	/^c0109296:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109299	obj/kernel.asm	/^c0109299:	e8 bc fe ff ff       	call   c010915a <wait_queue_first>$/;"	l
c010929e	obj/kernel.asm	/^c010929e:	83 c4 10             	add    $0x10,%esp$/;"	l
c01092a1	obj/kernel.asm	/^c01092a1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01092a4	obj/kernel.asm	/^c01092a4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01092a8	obj/kernel.asm	/^c01092a8:	75 d6                	jne    c0109280 <wakeup_queue+0x20>$/;"	l
c01092aa	obj/kernel.asm	/^c01092aa:	eb 2d                	jmp    c01092d9 <wakeup_queue+0x79>$/;"	l
c01092ac	obj/kernel.asm	/^c01092ac:	6a 00                	push   $0x0$/;"	l
c01092ae	obj/kernel.asm	/^c01092ae:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01092b1	obj/kernel.asm	/^c01092b1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01092b4	obj/kernel.asm	/^c01092b4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01092b7	obj/kernel.asm	/^c01092b7:	e8 3b ff ff ff       	call   c01091f7 <wakeup_wait>$/;"	l
c01092bc	obj/kernel.asm	/^c01092bc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01092bf	obj/kernel.asm	/^c01092bf:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01092c2	obj/kernel.asm	/^c01092c2:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01092c5	obj/kernel.asm	/^c01092c5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01092c8	obj/kernel.asm	/^c01092c8:	e8 b6 fd ff ff       	call   c0109083 <wait_queue_next>$/;"	l
c01092cd	obj/kernel.asm	/^c01092cd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01092d0	obj/kernel.asm	/^c01092d0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01092d3	obj/kernel.asm	/^c01092d3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01092d7	obj/kernel.asm	/^c01092d7:	75 d3                	jne    c01092ac <wakeup_queue+0x4c>$/;"	l
c01092d9	obj/kernel.asm	/^c01092d9:	c9                   	leave  $/;"	l
c01092da	obj/kernel.asm	/^c01092da:	c3                   	ret    $/;"	l
c01092db	obj/kernel.asm	/^c01092db <wait_current_set>:$/;"	l
c01092db	obj/kernel.asm	/^c01092db:	55                   	push   %ebp$/;"	l
c01092dc	obj/kernel.asm	/^c01092dc:	89 e5                	mov    %esp,%ebp$/;"	l
c01092de	obj/kernel.asm	/^c01092de:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01092e1	obj/kernel.asm	/^c01092e1:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c01092e6	obj/kernel.asm	/^c01092e6:	85 c0                	test   %eax,%eax$/;"	l
c01092e8	obj/kernel.asm	/^c01092e8:	75 16                	jne    c0109300 <wait_current_set+0x25>$/;"	l
c01092ea	obj/kernel.asm	/^c01092ea:	68 e1 62 11 c0       	push   $0xc01162e1$/;"	l
c01092ef	obj/kernel.asm	/^c01092ef:	68 7d 62 11 c0       	push   $0xc011627d$/;"	l
c01092f4	obj/kernel.asm	/^c01092f4:	6a 74                	push   $0x74$/;"	l
c01092f6	obj/kernel.asm	/^c01092f6:	68 92 62 11 c0       	push   $0xc0116292$/;"	l
c01092fb	obj/kernel.asm	/^c01092fb:	e8 cf 71 ff ff       	call   c01004cf <__panic>$/;"	l
c0109300	obj/kernel.asm	/^c0109300:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c0109305	obj/kernel.asm	/^c0109305:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109308	obj/kernel.asm	/^c0109308:	50                   	push   %eax$/;"	l
c0109309	obj/kernel.asm	/^c0109309:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010930c	obj/kernel.asm	/^c010930c:	e8 f6 fb ff ff       	call   c0108f07 <wait_init>$/;"	l
c0109311	obj/kernel.asm	/^c0109311:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109314	obj/kernel.asm	/^c0109314:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c0109319	obj/kernel.asm	/^c0109319:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010931f	obj/kernel.asm	/^c010931f:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c0109324	obj/kernel.asm	/^c0109324:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0109327	obj/kernel.asm	/^c0109327:	89 90 90 00 00 00    	mov    %edx,0x90(%eax)$/;"	l
c010932d	obj/kernel.asm	/^c010932d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109330	obj/kernel.asm	/^c0109330:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109333	obj/kernel.asm	/^c0109333:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109336	obj/kernel.asm	/^c0109336:	e8 25 fc ff ff       	call   c0108f60 <wait_queue_add>$/;"	l
c010933b	obj/kernel.asm	/^c010933b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010933e	obj/kernel.asm	/^c010933e:	c9                   	leave  $/;"	l
c010933f	obj/kernel.asm	/^c010933f:	c3                   	ret    $/;"	l
c0109340	obj/kernel.asm	/^c0109340 <__intr_save>:$/;"	l
c0109340	obj/kernel.asm	/^c0109340:	55                   	push   %ebp$/;"	l
c0109341	obj/kernel.asm	/^c0109341:	89 e5                	mov    %esp,%ebp$/;"	l
c0109343	obj/kernel.asm	/^c0109343:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109346	obj/kernel.asm	/^c0109346:	9c                   	pushf  $/;"	l
c0109347	obj/kernel.asm	/^c0109347:	58                   	pop    %eax$/;"	l
c0109348	obj/kernel.asm	/^c0109348:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010934b	obj/kernel.asm	/^c010934b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010934e	obj/kernel.asm	/^c010934e:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c0109353	obj/kernel.asm	/^c0109353:	85 c0                	test   %eax,%eax$/;"	l
c0109355	obj/kernel.asm	/^c0109355:	74 0c                	je     c0109363 <__intr_save+0x23>$/;"	l
c0109357	obj/kernel.asm	/^c0109357:	e8 ff 8e ff ff       	call   c010225b <intr_disable>$/;"	l
c010935c	obj/kernel.asm	/^c010935c:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c0109361	obj/kernel.asm	/^c0109361:	eb 05                	jmp    c0109368 <__intr_save+0x28>$/;"	l
c0109363	obj/kernel.asm	/^c0109363:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109368	obj/kernel.asm	/^c0109368:	c9                   	leave  $/;"	l
c0109369	obj/kernel.asm	/^c0109369:	c3                   	ret    $/;"	l
c010936a	obj/kernel.asm	/^c010936a <__intr_restore>:$/;"	l
c010936a	obj/kernel.asm	/^c010936a:	55                   	push   %ebp$/;"	l
c010936b	obj/kernel.asm	/^c010936b:	89 e5                	mov    %esp,%ebp$/;"	l
c010936d	obj/kernel.asm	/^c010936d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109370	obj/kernel.asm	/^c0109370:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0109374	obj/kernel.asm	/^c0109374:	74 05                	je     c010937b <__intr_restore+0x11>$/;"	l
c0109376	obj/kernel.asm	/^c0109376:	e8 da 8e ff ff       	call   c0102255 <intr_enable>$/;"	l
c010937b	obj/kernel.asm	/^c010937b:	c9                   	leave  $/;"	l
c010937c	obj/kernel.asm	/^c010937c:	c3                   	ret    $/;"	l
c010937d	obj/kernel.asm	/^c010937d <sem_init>:$/;"	l
c010937d	obj/kernel.asm	/^c010937d:	55                   	push   %ebp$/;"	l
c010937e	obj/kernel.asm	/^c010937e:	89 e5                	mov    %esp,%ebp$/;"	l
c0109380	obj/kernel.asm	/^c0109380:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109383	obj/kernel.asm	/^c0109383:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109386	obj/kernel.asm	/^c0109386:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0109389	obj/kernel.asm	/^c0109389:	89 10                	mov    %edx,(%eax)$/;"	l
c010938b	obj/kernel.asm	/^c010938b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010938e	obj/kernel.asm	/^c010938e:	83 c0 04             	add    $0x4,%eax$/;"	l
c0109391	obj/kernel.asm	/^c0109391:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109394	obj/kernel.asm	/^c0109394:	50                   	push   %eax$/;"	l
c0109395	obj/kernel.asm	/^c0109395:	e8 a4 fb ff ff       	call   c0108f3e <wait_queue_init>$/;"	l
c010939a	obj/kernel.asm	/^c010939a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010939d	obj/kernel.asm	/^c010939d:	c9                   	leave  $/;"	l
c010939e	obj/kernel.asm	/^c010939e:	c3                   	ret    $/;"	l
c010939f	obj/kernel.asm	/^c010939f <__up>:$/;"	l
c010939f	obj/kernel.asm	/^c010939f:	55                   	push   %ebp$/;"	l
c01093a0	obj/kernel.asm	/^c01093a0:	89 e5                	mov    %esp,%ebp$/;"	l
c01093a2	obj/kernel.asm	/^c01093a2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01093a5	obj/kernel.asm	/^c01093a5:	e8 96 ff ff ff       	call   c0109340 <__intr_save>$/;"	l
c01093aa	obj/kernel.asm	/^c01093aa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01093ad	obj/kernel.asm	/^c01093ad:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093b0	obj/kernel.asm	/^c01093b0:	83 c0 04             	add    $0x4,%eax$/;"	l
c01093b3	obj/kernel.asm	/^c01093b3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01093b6	obj/kernel.asm	/^c01093b6:	50                   	push   %eax$/;"	l
c01093b7	obj/kernel.asm	/^c01093b7:	e8 9e fd ff ff       	call   c010915a <wait_queue_first>$/;"	l
c01093bc	obj/kernel.asm	/^c01093bc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01093bf	obj/kernel.asm	/^c01093bf:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01093c2	obj/kernel.asm	/^c01093c2:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01093c6	obj/kernel.asm	/^c01093c6:	75 0f                	jne    c01093d7 <__up+0x38>$/;"	l
c01093c8	obj/kernel.asm	/^c01093c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093cb	obj/kernel.asm	/^c01093cb:	8b 00                	mov    (%eax),%eax$/;"	l
c01093cd	obj/kernel.asm	/^c01093cd:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01093d0	obj/kernel.asm	/^c01093d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01093d3	obj/kernel.asm	/^c01093d3:	89 10                	mov    %edx,(%eax)$/;"	l
c01093d5	obj/kernel.asm	/^c01093d5:	eb 3d                	jmp    c0109414 <__up+0x75>$/;"	l
c01093d7	obj/kernel.asm	/^c01093d7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01093da	obj/kernel.asm	/^c01093da:	8b 00                	mov    (%eax),%eax$/;"	l
c01093dc	obj/kernel.asm	/^c01093dc:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c01093e2	obj/kernel.asm	/^c01093e2:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01093e5	obj/kernel.asm	/^c01093e5:	74 16                	je     c01093fd <__up+0x5e>$/;"	l
c01093e7	obj/kernel.asm	/^c01093e7:	68 f4 62 11 c0       	push   $0xc01162f4$/;"	l
c01093ec	obj/kernel.asm	/^c01093ec:	68 19 63 11 c0       	push   $0xc0116319$/;"	l
c01093f1	obj/kernel.asm	/^c01093f1:	6a 19                	push   $0x19$/;"	l
c01093f3	obj/kernel.asm	/^c01093f3:	68 2e 63 11 c0       	push   $0xc011632e$/;"	l
c01093f8	obj/kernel.asm	/^c01093f8:	e8 d2 70 ff ff       	call   c01004cf <__panic>$/;"	l
c01093fd	obj/kernel.asm	/^c01093fd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109400	obj/kernel.asm	/^c0109400:	83 c0 04             	add    $0x4,%eax$/;"	l
c0109403	obj/kernel.asm	/^c0109403:	6a 01                	push   $0x1$/;"	l
c0109405	obj/kernel.asm	/^c0109405:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109408	obj/kernel.asm	/^c0109408:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010940b	obj/kernel.asm	/^c010940b:	50                   	push   %eax$/;"	l
c010940c	obj/kernel.asm	/^c010940c:	e8 e6 fd ff ff       	call   c01091f7 <wakeup_wait>$/;"	l
c0109411	obj/kernel.asm	/^c0109411:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109414	obj/kernel.asm	/^c0109414:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109417	obj/kernel.asm	/^c0109417:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010941a	obj/kernel.asm	/^c010941a:	e8 4b ff ff ff       	call   c010936a <__intr_restore>$/;"	l
c010941f	obj/kernel.asm	/^c010941f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109422	obj/kernel.asm	/^c0109422:	c9                   	leave  $/;"	l
c0109423	obj/kernel.asm	/^c0109423:	c3                   	ret    $/;"	l
c0109424	obj/kernel.asm	/^c0109424 <__down>:$/;"	l
c0109424	obj/kernel.asm	/^c0109424:	55                   	push   %ebp$/;"	l
c0109425	obj/kernel.asm	/^c0109425:	89 e5                	mov    %esp,%ebp$/;"	l
c0109427	obj/kernel.asm	/^c0109427:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010942a	obj/kernel.asm	/^c010942a:	e8 11 ff ff ff       	call   c0109340 <__intr_save>$/;"	l
c010942f	obj/kernel.asm	/^c010942f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109432	obj/kernel.asm	/^c0109432:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109435	obj/kernel.asm	/^c0109435:	8b 00                	mov    (%eax),%eax$/;"	l
c0109437	obj/kernel.asm	/^c0109437:	85 c0                	test   %eax,%eax$/;"	l
c0109439	obj/kernel.asm	/^c0109439:	7e 25                	jle    c0109460 <__down+0x3c>$/;"	l
c010943b	obj/kernel.asm	/^c010943b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010943e	obj/kernel.asm	/^c010943e:	8b 00                	mov    (%eax),%eax$/;"	l
c0109440	obj/kernel.asm	/^c0109440:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0109443	obj/kernel.asm	/^c0109443:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109446	obj/kernel.asm	/^c0109446:	89 10                	mov    %edx,(%eax)$/;"	l
c0109448	obj/kernel.asm	/^c0109448:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010944b	obj/kernel.asm	/^c010944b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010944e	obj/kernel.asm	/^c010944e:	e8 17 ff ff ff       	call   c010936a <__intr_restore>$/;"	l
c0109453	obj/kernel.asm	/^c0109453:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109456	obj/kernel.asm	/^c0109456:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010945b	obj/kernel.asm	/^c010945b:	e9 86 00 00 00       	jmp    c01094e6 <__down+0xc2>$/;"	l
c0109460	obj/kernel.asm	/^c0109460:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0109463	obj/kernel.asm	/^c0109463:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109466	obj/kernel.asm	/^c0109466:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109469	obj/kernel.asm	/^c0109469:	83 c0 04             	add    $0x4,%eax$/;"	l
c010946c	obj/kernel.asm	/^c010946c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010946f	obj/kernel.asm	/^c010946f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109472	obj/kernel.asm	/^c0109472:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109475	obj/kernel.asm	/^c0109475:	50                   	push   %eax$/;"	l
c0109476	obj/kernel.asm	/^c0109476:	e8 60 fe ff ff       	call   c01092db <wait_current_set>$/;"	l
c010947b	obj/kernel.asm	/^c010947b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010947e	obj/kernel.asm	/^c010947e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109481	obj/kernel.asm	/^c0109481:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109484	obj/kernel.asm	/^c0109484:	e8 e1 fe ff ff       	call   c010936a <__intr_restore>$/;"	l
c0109489	obj/kernel.asm	/^c0109489:	83 c4 10             	add    $0x10,%esp$/;"	l
c010948c	obj/kernel.asm	/^c010948c:	e8 3c 41 00 00       	call   c010d5cd <schedule>$/;"	l
c0109491	obj/kernel.asm	/^c0109491:	e8 aa fe ff ff       	call   c0109340 <__intr_save>$/;"	l
c0109496	obj/kernel.asm	/^c0109496:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109499	obj/kernel.asm	/^c0109499:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010949c	obj/kernel.asm	/^c010949c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010949f	obj/kernel.asm	/^c010949f:	e8 2b fd ff ff       	call   c01091cf <wait_in_queue>$/;"	l
c01094a4	obj/kernel.asm	/^c01094a4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01094a7	obj/kernel.asm	/^c01094a7:	85 c0                	test   %eax,%eax$/;"	l
c01094a9	obj/kernel.asm	/^c01094a9:	74 15                	je     c01094c0 <__down+0x9c>$/;"	l
c01094ab	obj/kernel.asm	/^c01094ab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01094ae	obj/kernel.asm	/^c01094ae:	83 c0 04             	add    $0x4,%eax$/;"	l
c01094b1	obj/kernel.asm	/^c01094b1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01094b4	obj/kernel.asm	/^c01094b4:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01094b7	obj/kernel.asm	/^c01094b7:	50                   	push   %eax$/;"	l
c01094b8	obj/kernel.asm	/^c01094b8:	e8 36 fb ff ff       	call   c0108ff3 <wait_queue_del>$/;"	l
c01094bd	obj/kernel.asm	/^c01094bd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01094c0	obj/kernel.asm	/^c01094c0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01094c3	obj/kernel.asm	/^c01094c3:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01094c6	obj/kernel.asm	/^c01094c6:	e8 9f fe ff ff       	call   c010936a <__intr_restore>$/;"	l
c01094cb	obj/kernel.asm	/^c01094cb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01094ce	obj/kernel.asm	/^c01094ce:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01094d1	obj/kernel.asm	/^c01094d1:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01094d4	obj/kernel.asm	/^c01094d4:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c01094d7	obj/kernel.asm	/^c01094d7:	74 08                	je     c01094e1 <__down+0xbd>$/;"	l
c01094d9	obj/kernel.asm	/^c01094d9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01094dc	obj/kernel.asm	/^c01094dc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01094df	obj/kernel.asm	/^c01094df:	eb 05                	jmp    c01094e6 <__down+0xc2>$/;"	l
c01094e1	obj/kernel.asm	/^c01094e1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01094e6	obj/kernel.asm	/^c01094e6:	c9                   	leave  $/;"	l
c01094e7	obj/kernel.asm	/^c01094e7:	c3                   	ret    $/;"	l
c01094e8	obj/kernel.asm	/^c01094e8 <up>:$/;"	l
c01094e8	obj/kernel.asm	/^c01094e8:	55                   	push   %ebp$/;"	l
c01094e9	obj/kernel.asm	/^c01094e9:	89 e5                	mov    %esp,%ebp$/;"	l
c01094eb	obj/kernel.asm	/^c01094eb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01094ee	obj/kernel.asm	/^c01094ee:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01094f1	obj/kernel.asm	/^c01094f1:	68 00 01 00 00       	push   $0x100$/;"	l
c01094f6	obj/kernel.asm	/^c01094f6:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01094f9	obj/kernel.asm	/^c01094f9:	e8 a1 fe ff ff       	call   c010939f <__up>$/;"	l
c01094fe	obj/kernel.asm	/^c01094fe:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109501	obj/kernel.asm	/^c0109501:	c9                   	leave  $/;"	l
c0109502	obj/kernel.asm	/^c0109502:	c3                   	ret    $/;"	l
c0109503	obj/kernel.asm	/^c0109503 <down>:$/;"	l
c0109503	obj/kernel.asm	/^c0109503:	55                   	push   %ebp$/;"	l
c0109504	obj/kernel.asm	/^c0109504:	89 e5                	mov    %esp,%ebp$/;"	l
c0109506	obj/kernel.asm	/^c0109506:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109509	obj/kernel.asm	/^c0109509:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010950c	obj/kernel.asm	/^c010950c:	68 00 01 00 00       	push   $0x100$/;"	l
c0109511	obj/kernel.asm	/^c0109511:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109514	obj/kernel.asm	/^c0109514:	e8 0b ff ff ff       	call   c0109424 <__down>$/;"	l
c0109519	obj/kernel.asm	/^c0109519:	83 c4 10             	add    $0x10,%esp$/;"	l
c010951c	obj/kernel.asm	/^c010951c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010951f	obj/kernel.asm	/^c010951f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109523	obj/kernel.asm	/^c0109523:	74 16                	je     c010953b <down+0x38>$/;"	l
c0109525	obj/kernel.asm	/^c0109525:	68 3e 63 11 c0       	push   $0xc011633e$/;"	l
c010952a	obj/kernel.asm	/^c010952a:	68 19 63 11 c0       	push   $0xc0116319$/;"	l
c010952f	obj/kernel.asm	/^c010952f:	6a 40                	push   $0x40$/;"	l
c0109531	obj/kernel.asm	/^c0109531:	68 2e 63 11 c0       	push   $0xc011632e$/;"	l
c0109536	obj/kernel.asm	/^c0109536:	e8 94 6f ff ff       	call   c01004cf <__panic>$/;"	l
c010953b	obj/kernel.asm	/^c010953b:	c9                   	leave  $/;"	l
c010953c	obj/kernel.asm	/^c010953c:	c3                   	ret    $/;"	l
c010953d	obj/kernel.asm	/^c010953d <try_down>:$/;"	l
c010953d	obj/kernel.asm	/^c010953d:	55                   	push   %ebp$/;"	l
c010953e	obj/kernel.asm	/^c010953e:	89 e5                	mov    %esp,%ebp$/;"	l
c0109540	obj/kernel.asm	/^c0109540:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109543	obj/kernel.asm	/^c0109543:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010954a	obj/kernel.asm	/^c010954a:	e8 f1 fd ff ff       	call   c0109340 <__intr_save>$/;"	l
c010954f	obj/kernel.asm	/^c010954f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109552	obj/kernel.asm	/^c0109552:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109555	obj/kernel.asm	/^c0109555:	8b 00                	mov    (%eax),%eax$/;"	l
c0109557	obj/kernel.asm	/^c0109557:	85 c0                	test   %eax,%eax$/;"	l
c0109559	obj/kernel.asm	/^c0109559:	7e 14                	jle    c010956f <try_down+0x32>$/;"	l
c010955b	obj/kernel.asm	/^c010955b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010955e	obj/kernel.asm	/^c010955e:	8b 00                	mov    (%eax),%eax$/;"	l
c0109560	obj/kernel.asm	/^c0109560:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0109563	obj/kernel.asm	/^c0109563:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109566	obj/kernel.asm	/^c0109566:	89 10                	mov    %edx,(%eax)$/;"	l
c0109568	obj/kernel.asm	/^c0109568:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010956f	obj/kernel.asm	/^c010956f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109572	obj/kernel.asm	/^c0109572:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109575	obj/kernel.asm	/^c0109575:	e8 f0 fd ff ff       	call   c010936a <__intr_restore>$/;"	l
c010957a	obj/kernel.asm	/^c010957a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010957d	obj/kernel.asm	/^c010957d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109580	obj/kernel.asm	/^c0109580:	c9                   	leave  $/;"	l
c0109581	obj/kernel.asm	/^c0109581:	c3                   	ret    $/;"	l
c0109582	obj/kernel.asm	/^c0109582 <monitor_init>:$/;"	l
c0109582	obj/kernel.asm	/^c0109582:	55                   	push   %ebp$/;"	l
c0109583	obj/kernel.asm	/^c0109583:	89 e5                	mov    %esp,%ebp$/;"	l
c0109585	obj/kernel.asm	/^c0109585:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109588	obj/kernel.asm	/^c0109588:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010958c	obj/kernel.asm	/^c010958c:	75 16                	jne    c01095a4 <monitor_init+0x22>$/;"	l
c010958e	obj/kernel.asm	/^c010958e:	68 4c 63 11 c0       	push   $0xc011634c$/;"	l
c0109593	obj/kernel.asm	/^c0109593:	68 55 63 11 c0       	push   $0xc0116355$/;"	l
c0109598	obj/kernel.asm	/^c0109598:	6a 0b                	push   $0xb$/;"	l
c010959a	obj/kernel.asm	/^c010959a:	68 6a 63 11 c0       	push   $0xc011636a$/;"	l
c010959f	obj/kernel.asm	/^c010959f:	e8 2b 6f ff ff       	call   c01004cf <__panic>$/;"	l
c01095a4	obj/kernel.asm	/^c01095a4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095a7	obj/kernel.asm	/^c01095a7:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c01095ae	obj/kernel.asm	/^c01095ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095b1	obj/kernel.asm	/^c01095b1:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
c01095b8	obj/kernel.asm	/^c01095b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095bb	obj/kernel.asm	/^c01095bb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01095be	obj/kernel.asm	/^c01095be:	6a 01                	push   $0x1$/;"	l
c01095c0	obj/kernel.asm	/^c01095c0:	50                   	push   %eax$/;"	l
c01095c1	obj/kernel.asm	/^c01095c1:	e8 b7 fd ff ff       	call   c010937d <sem_init>$/;"	l
c01095c6	obj/kernel.asm	/^c01095c6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01095c9	obj/kernel.asm	/^c01095c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095cc	obj/kernel.asm	/^c01095cc:	83 c0 0c             	add    $0xc,%eax$/;"	l
c01095cf	obj/kernel.asm	/^c01095cf:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01095d2	obj/kernel.asm	/^c01095d2:	6a 00                	push   $0x0$/;"	l
c01095d4	obj/kernel.asm	/^c01095d4:	50                   	push   %eax$/;"	l
c01095d5	obj/kernel.asm	/^c01095d5:	e8 a3 fd ff ff       	call   c010937d <sem_init>$/;"	l
c01095da	obj/kernel.asm	/^c01095da:	83 c4 10             	add    $0x10,%esp$/;"	l
c01095dd	obj/kernel.asm	/^c01095dd:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01095e0	obj/kernel.asm	/^c01095e0:	89 d0                	mov    %edx,%eax$/;"	l
c01095e2	obj/kernel.asm	/^c01095e2:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01095e5	obj/kernel.asm	/^c01095e5:	01 d0                	add    %edx,%eax$/;"	l
c01095e7	obj/kernel.asm	/^c01095e7:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c01095ea	obj/kernel.asm	/^c01095ea:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01095ed	obj/kernel.asm	/^c01095ed:	50                   	push   %eax$/;"	l
c01095ee	obj/kernel.asm	/^c01095ee:	e8 03 de ff ff       	call   c01073f6 <kmalloc>$/;"	l
c01095f3	obj/kernel.asm	/^c01095f3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01095f6	obj/kernel.asm	/^c01095f6:	89 c2                	mov    %eax,%edx$/;"	l
c01095f8	obj/kernel.asm	/^c01095f8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01095fb	obj/kernel.asm	/^c01095fb:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c01095fe	obj/kernel.asm	/^c01095fe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109601	obj/kernel.asm	/^c0109601:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c0109604	obj/kernel.asm	/^c0109604:	85 c0                	test   %eax,%eax$/;"	l
c0109606	obj/kernel.asm	/^c0109606:	75 16                	jne    c010961e <monitor_init+0x9c>$/;"	l
c0109608	obj/kernel.asm	/^c0109608:	68 7e 63 11 c0       	push   $0xc011637e$/;"	l
c010960d	obj/kernel.asm	/^c010960d:	68 55 63 11 c0       	push   $0xc0116355$/;"	l
c0109612	obj/kernel.asm	/^c0109612:	6a 11                	push   $0x11$/;"	l
c0109614	obj/kernel.asm	/^c0109614:	68 6a 63 11 c0       	push   $0xc011636a$/;"	l
c0109619	obj/kernel.asm	/^c0109619:	e8 b1 6e ff ff       	call   c01004cf <__panic>$/;"	l
c010961e	obj/kernel.asm	/^c010961e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109625	obj/kernel.asm	/^c0109625:	eb 5f                	jmp    c0109686 <monitor_init+0x104>$/;"	l
c0109627	obj/kernel.asm	/^c0109627:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010962a	obj/kernel.asm	/^c010962a:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c010962d	obj/kernel.asm	/^c010962d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0109630	obj/kernel.asm	/^c0109630:	89 d0                	mov    %edx,%eax$/;"	l
c0109632	obj/kernel.asm	/^c0109632:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109635	obj/kernel.asm	/^c0109635:	01 d0                	add    %edx,%eax$/;"	l
c0109637	obj/kernel.asm	/^c0109637:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010963a	obj/kernel.asm	/^c010963a:	01 c8                	add    %ecx,%eax$/;"	l
c010963c	obj/kernel.asm	/^c010963c:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c0109643	obj/kernel.asm	/^c0109643:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109646	obj/kernel.asm	/^c0109646:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c0109649	obj/kernel.asm	/^c0109649:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010964c	obj/kernel.asm	/^c010964c:	89 d0                	mov    %edx,%eax$/;"	l
c010964e	obj/kernel.asm	/^c010964e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109651	obj/kernel.asm	/^c0109651:	01 d0                	add    %edx,%eax$/;"	l
c0109653	obj/kernel.asm	/^c0109653:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109656	obj/kernel.asm	/^c0109656:	01 c8                	add    %ecx,%eax$/;"	l
c0109658	obj/kernel.asm	/^c0109658:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010965b	obj/kernel.asm	/^c010965b:	6a 00                	push   $0x0$/;"	l
c010965d	obj/kernel.asm	/^c010965d:	50                   	push   %eax$/;"	l
c010965e	obj/kernel.asm	/^c010965e:	e8 1a fd ff ff       	call   c010937d <sem_init>$/;"	l
c0109663	obj/kernel.asm	/^c0109663:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109666	obj/kernel.asm	/^c0109666:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109669	obj/kernel.asm	/^c0109669:	8b 48 1c             	mov    0x1c(%eax),%ecx$/;"	l
c010966c	obj/kernel.asm	/^c010966c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010966f	obj/kernel.asm	/^c010966f:	89 d0                	mov    %edx,%eax$/;"	l
c0109671	obj/kernel.asm	/^c0109671:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109674	obj/kernel.asm	/^c0109674:	01 d0                	add    %edx,%eax$/;"	l
c0109676	obj/kernel.asm	/^c0109676:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0109679	obj/kernel.asm	/^c0109679:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
c010967c	obj/kernel.asm	/^c010967c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010967f	obj/kernel.asm	/^c010967f:	89 42 10             	mov    %eax,0x10(%edx)$/;"	l
c0109682	obj/kernel.asm	/^c0109682:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0109686	obj/kernel.asm	/^c0109686:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109689	obj/kernel.asm	/^c0109689:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010968c	obj/kernel.asm	/^c010968c:	72 99                	jb     c0109627 <monitor_init+0xa5>$/;"	l
c010968e	obj/kernel.asm	/^c010968e:	c9                   	leave  $/;"	l
c010968f	obj/kernel.asm	/^c010968f:	c3                   	ret    $/;"	l
c0109690	obj/kernel.asm	/^c0109690 <cond_signal>:$/;"	l
c0109690	obj/kernel.asm	/^c0109690:	55                   	push   %ebp$/;"	l
c0109691	obj/kernel.asm	/^c0109691:	89 e5                	mov    %esp,%ebp$/;"	l
c0109693	obj/kernel.asm	/^c0109693:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109696	obj/kernel.asm	/^c0109696:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109699	obj/kernel.asm	/^c0109699:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010969c	obj/kernel.asm	/^c010969c:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c010969f	obj/kernel.asm	/^c010969f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01096a2	obj/kernel.asm	/^c01096a2:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01096a5	obj/kernel.asm	/^c01096a5:	52                   	push   %edx$/;"	l
c01096a6	obj/kernel.asm	/^c01096a6:	50                   	push   %eax$/;"	l
c01096a7	obj/kernel.asm	/^c01096a7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01096aa	obj/kernel.asm	/^c01096aa:	68 8c 63 11 c0       	push   $0xc011638c$/;"	l
c01096af	obj/kernel.asm	/^c01096af:	e8 b6 6c ff ff       	call   c010036a <cprintf>$/;"	l
c01096b4	obj/kernel.asm	/^c01096b4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01096b7	obj/kernel.asm	/^c01096b7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01096ba	obj/kernel.asm	/^c01096ba:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01096bd	obj/kernel.asm	/^c01096bd:	85 c0                	test   %eax,%eax$/;"	l
c01096bf	obj/kernel.asm	/^c01096bf:	7e 42                	jle    c0109703 <cond_signal+0x73>$/;"	l
c01096c1	obj/kernel.asm	/^c01096c1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01096c4	obj/kernel.asm	/^c01096c4:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01096c7	obj/kernel.asm	/^c01096c7:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c01096ca	obj/kernel.asm	/^c01096ca:	83 c2 01             	add    $0x1,%edx$/;"	l
c01096cd	obj/kernel.asm	/^c01096cd:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c01096d0	obj/kernel.asm	/^c01096d0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01096d3	obj/kernel.asm	/^c01096d3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01096d6	obj/kernel.asm	/^c01096d6:	50                   	push   %eax$/;"	l
c01096d7	obj/kernel.asm	/^c01096d7:	e8 0c fe ff ff       	call   c01094e8 <up>$/;"	l
c01096dc	obj/kernel.asm	/^c01096dc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01096df	obj/kernel.asm	/^c01096df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01096e2	obj/kernel.asm	/^c01096e2:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01096e5	obj/kernel.asm	/^c01096e5:	83 c0 0c             	add    $0xc,%eax$/;"	l
c01096e8	obj/kernel.asm	/^c01096e8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01096eb	obj/kernel.asm	/^c01096eb:	50                   	push   %eax$/;"	l
c01096ec	obj/kernel.asm	/^c01096ec:	e8 12 fe ff ff       	call   c0109503 <down>$/;"	l
c01096f1	obj/kernel.asm	/^c01096f1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01096f4	obj/kernel.asm	/^c01096f4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01096f7	obj/kernel.asm	/^c01096f7:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01096fa	obj/kernel.asm	/^c01096fa:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c01096fd	obj/kernel.asm	/^c01096fd:	83 ea 01             	sub    $0x1,%edx$/;"	l
c0109700	obj/kernel.asm	/^c0109700:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c0109703	obj/kernel.asm	/^c0109703:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109706	obj/kernel.asm	/^c0109706:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109709	obj/kernel.asm	/^c0109709:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c010970c	obj/kernel.asm	/^c010970c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010970f	obj/kernel.asm	/^c010970f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109712	obj/kernel.asm	/^c0109712:	52                   	push   %edx$/;"	l
c0109713	obj/kernel.asm	/^c0109713:	50                   	push   %eax$/;"	l
c0109714	obj/kernel.asm	/^c0109714:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109717	obj/kernel.asm	/^c0109717:	68 d4 63 11 c0       	push   $0xc01163d4$/;"	l
c010971c	obj/kernel.asm	/^c010971c:	e8 49 6c ff ff       	call   c010036a <cprintf>$/;"	l
c0109721	obj/kernel.asm	/^c0109721:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109724	obj/kernel.asm	/^c0109724:	c9                   	leave  $/;"	l
c0109725	obj/kernel.asm	/^c0109725:	c3                   	ret    $/;"	l
c0109726	obj/kernel.asm	/^c0109726 <cond_wait>:$/;"	l
c0109726	obj/kernel.asm	/^c0109726:	55                   	push   %ebp$/;"	l
c0109727	obj/kernel.asm	/^c0109727:	89 e5                	mov    %esp,%ebp$/;"	l
c0109729	obj/kernel.asm	/^c0109729:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010972c	obj/kernel.asm	/^c010972c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010972f	obj/kernel.asm	/^c010972f:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109732	obj/kernel.asm	/^c0109732:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c0109735	obj/kernel.asm	/^c0109735:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109738	obj/kernel.asm	/^c0109738:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010973b	obj/kernel.asm	/^c010973b:	52                   	push   %edx$/;"	l
c010973c	obj/kernel.asm	/^c010973c:	50                   	push   %eax$/;"	l
c010973d	obj/kernel.asm	/^c010973d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109740	obj/kernel.asm	/^c0109740:	68 18 64 11 c0       	push   $0xc0116418$/;"	l
c0109745	obj/kernel.asm	/^c0109745:	e8 20 6c ff ff       	call   c010036a <cprintf>$/;"	l
c010974a	obj/kernel.asm	/^c010974a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010974d	obj/kernel.asm	/^c010974d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109750	obj/kernel.asm	/^c0109750:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0109753	obj/kernel.asm	/^c0109753:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0109756	obj/kernel.asm	/^c0109756:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109759	obj/kernel.asm	/^c0109759:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010975c	obj/kernel.asm	/^c010975c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010975f	obj/kernel.asm	/^c010975f:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109762	obj/kernel.asm	/^c0109762:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109765	obj/kernel.asm	/^c0109765:	85 c0                	test   %eax,%eax$/;"	l
c0109767	obj/kernel.asm	/^c0109767:	7e 17                	jle    c0109780 <cond_wait+0x5a>$/;"	l
c0109769	obj/kernel.asm	/^c0109769:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010976c	obj/kernel.asm	/^c010976c:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010976f	obj/kernel.asm	/^c010976f:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0109772	obj/kernel.asm	/^c0109772:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109775	obj/kernel.asm	/^c0109775:	50                   	push   %eax$/;"	l
c0109776	obj/kernel.asm	/^c0109776:	e8 6d fd ff ff       	call   c01094e8 <up>$/;"	l
c010977b	obj/kernel.asm	/^c010977b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010977e	obj/kernel.asm	/^c010977e:	eb 12                	jmp    c0109792 <cond_wait+0x6c>$/;"	l
c0109780	obj/kernel.asm	/^c0109780:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109783	obj/kernel.asm	/^c0109783:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0109786	obj/kernel.asm	/^c0109786:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109789	obj/kernel.asm	/^c0109789:	50                   	push   %eax$/;"	l
c010978a	obj/kernel.asm	/^c010978a:	e8 59 fd ff ff       	call   c01094e8 <up>$/;"	l
c010978f	obj/kernel.asm	/^c010978f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109792	obj/kernel.asm	/^c0109792:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109795	obj/kernel.asm	/^c0109795:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109798	obj/kernel.asm	/^c0109798:	50                   	push   %eax$/;"	l
c0109799	obj/kernel.asm	/^c0109799:	e8 65 fd ff ff       	call   c0109503 <down>$/;"	l
c010979e	obj/kernel.asm	/^c010979e:	83 c4 10             	add    $0x10,%esp$/;"	l
c01097a1	obj/kernel.asm	/^c01097a1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01097a4	obj/kernel.asm	/^c01097a4:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01097a7	obj/kernel.asm	/^c01097a7:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01097aa	obj/kernel.asm	/^c01097aa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01097ad	obj/kernel.asm	/^c01097ad:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01097b0	obj/kernel.asm	/^c01097b0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01097b3	obj/kernel.asm	/^c01097b3:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01097b6	obj/kernel.asm	/^c01097b6:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c01097b9	obj/kernel.asm	/^c01097b9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01097bc	obj/kernel.asm	/^c01097bc:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01097bf	obj/kernel.asm	/^c01097bf:	52                   	push   %edx$/;"	l
c01097c0	obj/kernel.asm	/^c01097c0:	50                   	push   %eax$/;"	l
c01097c1	obj/kernel.asm	/^c01097c1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01097c4	obj/kernel.asm	/^c01097c4:	68 5c 64 11 c0       	push   $0xc011645c$/;"	l
c01097c9	obj/kernel.asm	/^c01097c9:	e8 9c 6b ff ff       	call   c010036a <cprintf>$/;"	l
c01097ce	obj/kernel.asm	/^c01097ce:	83 c4 10             	add    $0x10,%esp$/;"	l
c01097d1	obj/kernel.asm	/^c01097d1:	c9                   	leave  $/;"	l
c01097d2	obj/kernel.asm	/^c01097d2:	c3                   	ret    $/;"	l
c01097d3	obj/kernel.asm	/^c01097d3 <lock_mm>:$/;"	l
c01097d3	obj/kernel.asm	/^c01097d3:	55                   	push   %ebp$/;"	l
c01097d4	obj/kernel.asm	/^c01097d4:	89 e5                	mov    %esp,%ebp$/;"	l
c01097d6	obj/kernel.asm	/^c01097d6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01097d9	obj/kernel.asm	/^c01097d9:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c01097dd	obj/kernel.asm	/^c01097dd:	74 29                	je     c0109808 <lock_mm+0x35>$/;"	l
c01097df	obj/kernel.asm	/^c01097df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01097e2	obj/kernel.asm	/^c01097e2:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c01097e5	obj/kernel.asm	/^c01097e5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01097e8	obj/kernel.asm	/^c01097e8:	50                   	push   %eax$/;"	l
c01097e9	obj/kernel.asm	/^c01097e9:	e8 15 fd ff ff       	call   c0109503 <down>$/;"	l
c01097ee	obj/kernel.asm	/^c01097ee:	83 c4 10             	add    $0x10,%esp$/;"	l
c01097f1	obj/kernel.asm	/^c01097f1:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c01097f6	obj/kernel.asm	/^c01097f6:	85 c0                	test   %eax,%eax$/;"	l
c01097f8	obj/kernel.asm	/^c01097f8:	74 0e                	je     c0109808 <lock_mm+0x35>$/;"	l
c01097fa	obj/kernel.asm	/^c01097fa:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c01097ff	obj/kernel.asm	/^c01097ff:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0109802	obj/kernel.asm	/^c0109802:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109805	obj/kernel.asm	/^c0109805:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
c0109808	obj/kernel.asm	/^c0109808:	c9                   	leave  $/;"	l
c0109809	obj/kernel.asm	/^c0109809:	c3                   	ret    $/;"	l
c010980a	obj/kernel.asm	/^c010980a <unlock_mm>:$/;"	l
c010980a	obj/kernel.asm	/^c010980a:	55                   	push   %ebp$/;"	l
c010980b	obj/kernel.asm	/^c010980b:	89 e5                	mov    %esp,%ebp$/;"	l
c010980d	obj/kernel.asm	/^c010980d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109810	obj/kernel.asm	/^c0109810:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0109814	obj/kernel.asm	/^c0109814:	74 1c                	je     c0109832 <unlock_mm+0x28>$/;"	l
c0109816	obj/kernel.asm	/^c0109816:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109819	obj/kernel.asm	/^c0109819:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010981c	obj/kernel.asm	/^c010981c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010981f	obj/kernel.asm	/^c010981f:	50                   	push   %eax$/;"	l
c0109820	obj/kernel.asm	/^c0109820:	e8 c3 fc ff ff       	call   c01094e8 <up>$/;"	l
c0109825	obj/kernel.asm	/^c0109825:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109828	obj/kernel.asm	/^c0109828:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010982b	obj/kernel.asm	/^c010982b:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)$/;"	l
c0109832	obj/kernel.asm	/^c0109832:	c9                   	leave  $/;"	l
c0109833	obj/kernel.asm	/^c0109833:	c3                   	ret    $/;"	l
c0109834	obj/kernel.asm	/^c0109834 <copy_path>:$/;"	l
c0109834	obj/kernel.asm	/^c0109834:	55                   	push   %ebp$/;"	l
c0109835	obj/kernel.asm	/^c0109835:	89 e5                	mov    %esp,%ebp$/;"	l
c0109837	obj/kernel.asm	/^c0109837:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010983a	obj/kernel.asm	/^c010983a:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010983f	obj/kernel.asm	/^c010983f:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109842	obj/kernel.asm	/^c0109842:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109845	obj/kernel.asm	/^c0109845:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109848	obj/kernel.asm	/^c0109848:	68 00 10 00 00       	push   $0x1000$/;"	l
c010984d	obj/kernel.asm	/^c010984d:	e8 a4 db ff ff       	call   c01073f6 <kmalloc>$/;"	l
c0109852	obj/kernel.asm	/^c0109852:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109855	obj/kernel.asm	/^c0109855:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109858	obj/kernel.asm	/^c0109858:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010985c	obj/kernel.asm	/^c010985c:	75 07                	jne    c0109865 <copy_path+0x31>$/;"	l
c010985e	obj/kernel.asm	/^c010985e:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0109863	obj/kernel.asm	/^c0109863:	eb 67                	jmp    c01098cc <copy_path+0x98>$/;"	l
c0109865	obj/kernel.asm	/^c0109865:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109868	obj/kernel.asm	/^c0109868:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010986b	obj/kernel.asm	/^c010986b:	e8 63 ff ff ff       	call   c01097d3 <lock_mm>$/;"	l
c0109870	obj/kernel.asm	/^c0109870:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109873	obj/kernel.asm	/^c0109873:	68 00 10 00 00       	push   $0x1000$/;"	l
c0109878	obj/kernel.asm	/^c0109878:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010987b	obj/kernel.asm	/^c010987b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010987e	obj/kernel.asm	/^c010987e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109881	obj/kernel.asm	/^c0109881:	e8 ab c9 ff ff       	call   c0106231 <copy_string>$/;"	l
c0109886	obj/kernel.asm	/^c0109886:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109889	obj/kernel.asm	/^c0109889:	85 c0                	test   %eax,%eax$/;"	l
c010988b	obj/kernel.asm	/^c010988b:	75 24                	jne    c01098b1 <copy_path+0x7d>$/;"	l
c010988d	obj/kernel.asm	/^c010988d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109890	obj/kernel.asm	/^c0109890:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0109893	obj/kernel.asm	/^c0109893:	e8 72 ff ff ff       	call   c010980a <unlock_mm>$/;"	l
c0109898	obj/kernel.asm	/^c0109898:	83 c4 10             	add    $0x10,%esp$/;"	l
c010989b	obj/kernel.asm	/^c010989b:	90                   	nop$/;"	l
c010989c	obj/kernel.asm	/^c010989c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010989f	obj/kernel.asm	/^c010989f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01098a2	obj/kernel.asm	/^c01098a2:	e8 67 db ff ff       	call   c010740e <kfree>$/;"	l
c01098a7	obj/kernel.asm	/^c01098a7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01098aa	obj/kernel.asm	/^c01098aa:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01098af	obj/kernel.asm	/^c01098af:	eb 1b                	jmp    c01098cc <copy_path+0x98>$/;"	l
c01098b1	obj/kernel.asm	/^c01098b1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01098b4	obj/kernel.asm	/^c01098b4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01098b7	obj/kernel.asm	/^c01098b7:	e8 4e ff ff ff       	call   c010980a <unlock_mm>$/;"	l
c01098bc	obj/kernel.asm	/^c01098bc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01098bf	obj/kernel.asm	/^c01098bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01098c2	obj/kernel.asm	/^c01098c2:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01098c5	obj/kernel.asm	/^c01098c5:	89 10                	mov    %edx,(%eax)$/;"	l
c01098c7	obj/kernel.asm	/^c01098c7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01098cc	obj/kernel.asm	/^c01098cc:	c9                   	leave  $/;"	l
c01098cd	obj/kernel.asm	/^c01098cd:	c3                   	ret    $/;"	l
c01098ce	obj/kernel.asm	/^c01098ce <sysfile_open>:$/;"	l
c01098ce	obj/kernel.asm	/^c01098ce:	55                   	push   %ebp$/;"	l
c01098cf	obj/kernel.asm	/^c01098cf:	89 e5                	mov    %esp,%ebp$/;"	l
c01098d1	obj/kernel.asm	/^c01098d1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01098d4	obj/kernel.asm	/^c01098d4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01098d7	obj/kernel.asm	/^c01098d7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01098da	obj/kernel.asm	/^c01098da:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c01098dd	obj/kernel.asm	/^c01098dd:	50                   	push   %eax$/;"	l
c01098de	obj/kernel.asm	/^c01098de:	e8 51 ff ff ff       	call   c0109834 <copy_path>$/;"	l
c01098e3	obj/kernel.asm	/^c01098e3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01098e6	obj/kernel.asm	/^c01098e6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01098e9	obj/kernel.asm	/^c01098e9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01098ed	obj/kernel.asm	/^c01098ed:	74 05                	je     c01098f4 <sysfile_open+0x26>$/;"	l
c01098ef	obj/kernel.asm	/^c01098ef:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01098f2	obj/kernel.asm	/^c01098f2:	eb 27                	jmp    c010991b <sysfile_open+0x4d>$/;"	l
c01098f4	obj/kernel.asm	/^c01098f4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01098f7	obj/kernel.asm	/^c01098f7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01098fa	obj/kernel.asm	/^c01098fa:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01098fd	obj/kernel.asm	/^c01098fd:	50                   	push   %eax$/;"	l
c01098fe	obj/kernel.asm	/^c01098fe:	e8 bc 0b 00 00       	call   c010a4bf <file_open>$/;"	l
c0109903	obj/kernel.asm	/^c0109903:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109906	obj/kernel.asm	/^c0109906:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109909	obj/kernel.asm	/^c0109909:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010990c	obj/kernel.asm	/^c010990c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010990f	obj/kernel.asm	/^c010990f:	50                   	push   %eax$/;"	l
c0109910	obj/kernel.asm	/^c0109910:	e8 f9 da ff ff       	call   c010740e <kfree>$/;"	l
c0109915	obj/kernel.asm	/^c0109915:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109918	obj/kernel.asm	/^c0109918:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010991b	obj/kernel.asm	/^c010991b:	c9                   	leave  $/;"	l
c010991c	obj/kernel.asm	/^c010991c:	c3                   	ret    $/;"	l
c010991d	obj/kernel.asm	/^c010991d <sysfile_close>:$/;"	l
c010991d	obj/kernel.asm	/^c010991d:	55                   	push   %ebp$/;"	l
c010991e	obj/kernel.asm	/^c010991e:	89 e5                	mov    %esp,%ebp$/;"	l
c0109920	obj/kernel.asm	/^c0109920:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109923	obj/kernel.asm	/^c0109923:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109926	obj/kernel.asm	/^c0109926:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109929	obj/kernel.asm	/^c0109929:	e8 30 0d 00 00       	call   c010a65e <file_close>$/;"	l
c010992e	obj/kernel.asm	/^c010992e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109931	obj/kernel.asm	/^c0109931:	c9                   	leave  $/;"	l
c0109932	obj/kernel.asm	/^c0109932:	c3                   	ret    $/;"	l
c0109933	obj/kernel.asm	/^c0109933 <sysfile_read>:$/;"	l
c0109933	obj/kernel.asm	/^c0109933:	55                   	push   %ebp$/;"	l
c0109934	obj/kernel.asm	/^c0109934:	89 e5                	mov    %esp,%ebp$/;"	l
c0109936	obj/kernel.asm	/^c0109936:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109939	obj/kernel.asm	/^c0109939:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010993e	obj/kernel.asm	/^c010993e:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109941	obj/kernel.asm	/^c0109941:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109944	obj/kernel.asm	/^c0109944:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0109948	obj/kernel.asm	/^c0109948:	75 0a                	jne    c0109954 <sysfile_read+0x21>$/;"	l
c010994a	obj/kernel.asm	/^c010994a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010994f	obj/kernel.asm	/^c010994f:	e9 32 01 00 00       	jmp    c0109a86 <sysfile_read+0x153>$/;"	l
c0109954	obj/kernel.asm	/^c0109954:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109957	obj/kernel.asm	/^c0109957:	6a 00                	push   $0x0$/;"	l
c0109959	obj/kernel.asm	/^c0109959:	6a 01                	push   $0x1$/;"	l
c010995b	obj/kernel.asm	/^c010995b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010995e	obj/kernel.asm	/^c010995e:	e8 ff 0a 00 00       	call   c010a462 <file_testfd>$/;"	l
c0109963	obj/kernel.asm	/^c0109963:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109966	obj/kernel.asm	/^c0109966:	85 c0                	test   %eax,%eax$/;"	l
c0109968	obj/kernel.asm	/^c0109968:	75 0a                	jne    c0109974 <sysfile_read+0x41>$/;"	l
c010996a	obj/kernel.asm	/^c010996a:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010996f	obj/kernel.asm	/^c010996f:	e9 12 01 00 00       	jmp    c0109a86 <sysfile_read+0x153>$/;"	l
c0109974	obj/kernel.asm	/^c0109974:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109977	obj/kernel.asm	/^c0109977:	68 00 10 00 00       	push   $0x1000$/;"	l
c010997c	obj/kernel.asm	/^c010997c:	e8 75 da ff ff       	call   c01073f6 <kmalloc>$/;"	l
c0109981	obj/kernel.asm	/^c0109981:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109984	obj/kernel.asm	/^c0109984:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109987	obj/kernel.asm	/^c0109987:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010998b	obj/kernel.asm	/^c010998b:	75 0a                	jne    c0109997 <sysfile_read+0x64>$/;"	l
c010998d	obj/kernel.asm	/^c010998d:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0109992	obj/kernel.asm	/^c0109992:	e9 ef 00 00 00       	jmp    c0109a86 <sysfile_read+0x153>$/;"	l
c0109997	obj/kernel.asm	/^c0109997:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010999e	obj/kernel.asm	/^c010999e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01099a5	obj/kernel.asm	/^c01099a5:	e9 b6 00 00 00       	jmp    c0109a60 <sysfile_read+0x12d>$/;"	l
c01099aa	obj/kernel.asm	/^c01099aa:	c7 45 e4 00 10 00 00 	movl   $0x1000,-0x1c(%ebp)$/;"	l
c01099b1	obj/kernel.asm	/^c01099b1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01099b4	obj/kernel.asm	/^c01099b4:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c01099b7	obj/kernel.asm	/^c01099b7:	76 06                	jbe    c01099bf <sysfile_read+0x8c>$/;"	l
c01099b9	obj/kernel.asm	/^c01099b9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01099bc	obj/kernel.asm	/^c01099bc:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01099bf	obj/kernel.asm	/^c01099bf:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01099c2	obj/kernel.asm	/^c01099c2:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c01099c5	obj/kernel.asm	/^c01099c5:	52                   	push   %edx$/;"	l
c01099c6	obj/kernel.asm	/^c01099c6:	50                   	push   %eax$/;"	l
c01099c7	obj/kernel.asm	/^c01099c7:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c01099ca	obj/kernel.asm	/^c01099ca:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01099cd	obj/kernel.asm	/^c01099cd:	e8 c8 0c 00 00       	call   c010a69a <file_read>$/;"	l
c01099d2	obj/kernel.asm	/^c01099d2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01099d5	obj/kernel.asm	/^c01099d5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01099d8	obj/kernel.asm	/^c01099d8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01099db	obj/kernel.asm	/^c01099db:	85 c0                	test   %eax,%eax$/;"	l
c01099dd	obj/kernel.asm	/^c01099dd:	74 74                	je     c0109a53 <sysfile_read+0x120>$/;"	l
c01099df	obj/kernel.asm	/^c01099df:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01099e2	obj/kernel.asm	/^c01099e2:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01099e5	obj/kernel.asm	/^c01099e5:	e8 e9 fd ff ff       	call   c01097d3 <lock_mm>$/;"	l
c01099ea	obj/kernel.asm	/^c01099ea:	83 c4 10             	add    $0x10,%esp$/;"	l
c01099ed	obj/kernel.asm	/^c01099ed:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01099f0	obj/kernel.asm	/^c01099f0:	50                   	push   %eax$/;"	l
c01099f1	obj/kernel.asm	/^c01099f1:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c01099f4	obj/kernel.asm	/^c01099f4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01099f7	obj/kernel.asm	/^c01099f7:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01099fa	obj/kernel.asm	/^c01099fa:	e8 65 be ff ff       	call   c0105864 <copy_to_user>$/;"	l
c01099ff	obj/kernel.asm	/^c01099ff:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109a02	obj/kernel.asm	/^c0109a02:	85 c0                	test   %eax,%eax$/;"	l
c0109a04	obj/kernel.asm	/^c0109a04:	74 32                	je     c0109a38 <sysfile_read+0x105>$/;"	l
c0109a06	obj/kernel.asm	/^c0109a06:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109a09	obj/kernel.asm	/^c0109a09:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
c0109a0c	obj/kernel.asm	/^c0109a0c:	73 16                	jae    c0109a24 <sysfile_read+0xf1>$/;"	l
c0109a0e	obj/kernel.asm	/^c0109a0e:	68 9e 64 11 c0       	push   $0xc011649e$/;"	l
c0109a13	obj/kernel.asm	/^c0109a13:	68 aa 64 11 c0       	push   $0xc01164aa$/;"	l
c0109a18	obj/kernel.asm	/^c0109a18:	6a 55                	push   $0x55$/;"	l
c0109a1a	obj/kernel.asm	/^c0109a1a:	68 bf 64 11 c0       	push   $0xc01164bf$/;"	l
c0109a1f	obj/kernel.asm	/^c0109a1f:	e8 ab 6a ff ff       	call   c01004cf <__panic>$/;"	l
c0109a24	obj/kernel.asm	/^c0109a24:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109a27	obj/kernel.asm	/^c0109a27:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c0109a2a	obj/kernel.asm	/^c0109a2a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109a2d	obj/kernel.asm	/^c0109a2d:	29 45 10             	sub    %eax,0x10(%ebp)$/;"	l
c0109a30	obj/kernel.asm	/^c0109a30:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109a33	obj/kernel.asm	/^c0109a33:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c0109a36	obj/kernel.asm	/^c0109a36:	eb 0d                	jmp    c0109a45 <sysfile_read+0x112>$/;"	l
c0109a38	obj/kernel.asm	/^c0109a38:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109a3c	obj/kernel.asm	/^c0109a3c:	75 07                	jne    c0109a45 <sysfile_read+0x112>$/;"	l
c0109a3e	obj/kernel.asm	/^c0109a3e:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0109a45	obj/kernel.asm	/^c0109a45:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109a48	obj/kernel.asm	/^c0109a48:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109a4b	obj/kernel.asm	/^c0109a4b:	e8 ba fd ff ff       	call   c010980a <unlock_mm>$/;"	l
c0109a50	obj/kernel.asm	/^c0109a50:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109a53	obj/kernel.asm	/^c0109a53:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109a57	obj/kernel.asm	/^c0109a57:	75 11                	jne    c0109a6a <sysfile_read+0x137>$/;"	l
c0109a59	obj/kernel.asm	/^c0109a59:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109a5c	obj/kernel.asm	/^c0109a5c:	85 c0                	test   %eax,%eax$/;"	l
c0109a5e	obj/kernel.asm	/^c0109a5e:	74 0a                	je     c0109a6a <sysfile_read+0x137>$/;"	l
c0109a60	obj/kernel.asm	/^c0109a60:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0109a64	obj/kernel.asm	/^c0109a64:	0f 85 40 ff ff ff    	jne    c01099aa <sysfile_read+0x77>$/;"	l
c0109a6a	obj/kernel.asm	/^c0109a6a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109a6d	obj/kernel.asm	/^c0109a6d:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0109a70	obj/kernel.asm	/^c0109a70:	e8 99 d9 ff ff       	call   c010740e <kfree>$/;"	l
c0109a75	obj/kernel.asm	/^c0109a75:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109a78	obj/kernel.asm	/^c0109a78:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109a7c	obj/kernel.asm	/^c0109a7c:	74 05                	je     c0109a83 <sysfile_read+0x150>$/;"	l
c0109a7e	obj/kernel.asm	/^c0109a7e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109a81	obj/kernel.asm	/^c0109a81:	eb 03                	jmp    c0109a86 <sysfile_read+0x153>$/;"	l
c0109a83	obj/kernel.asm	/^c0109a83:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109a86	obj/kernel.asm	/^c0109a86:	c9                   	leave  $/;"	l
c0109a87	obj/kernel.asm	/^c0109a87:	c3                   	ret    $/;"	l
c0109a88	obj/kernel.asm	/^c0109a88 <sysfile_write>:$/;"	l
c0109a88	obj/kernel.asm	/^c0109a88:	55                   	push   %ebp$/;"	l
c0109a89	obj/kernel.asm	/^c0109a89:	89 e5                	mov    %esp,%ebp$/;"	l
c0109a8b	obj/kernel.asm	/^c0109a8b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109a8e	obj/kernel.asm	/^c0109a8e:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c0109a93	obj/kernel.asm	/^c0109a93:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109a96	obj/kernel.asm	/^c0109a96:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109a99	obj/kernel.asm	/^c0109a99:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0109a9d	obj/kernel.asm	/^c0109a9d:	75 0a                	jne    c0109aa9 <sysfile_write+0x21>$/;"	l
c0109a9f	obj/kernel.asm	/^c0109a9f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0109aa4	obj/kernel.asm	/^c0109aa4:	e9 38 01 00 00       	jmp    c0109be1 <sysfile_write+0x159>$/;"	l
c0109aa9	obj/kernel.asm	/^c0109aa9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109aac	obj/kernel.asm	/^c0109aac:	6a 01                	push   $0x1$/;"	l
c0109aae	obj/kernel.asm	/^c0109aae:	6a 00                	push   $0x0$/;"	l
c0109ab0	obj/kernel.asm	/^c0109ab0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109ab3	obj/kernel.asm	/^c0109ab3:	e8 aa 09 00 00       	call   c010a462 <file_testfd>$/;"	l
c0109ab8	obj/kernel.asm	/^c0109ab8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109abb	obj/kernel.asm	/^c0109abb:	85 c0                	test   %eax,%eax$/;"	l
c0109abd	obj/kernel.asm	/^c0109abd:	75 0a                	jne    c0109ac9 <sysfile_write+0x41>$/;"	l
c0109abf	obj/kernel.asm	/^c0109abf:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0109ac4	obj/kernel.asm	/^c0109ac4:	e9 18 01 00 00       	jmp    c0109be1 <sysfile_write+0x159>$/;"	l
c0109ac9	obj/kernel.asm	/^c0109ac9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109acc	obj/kernel.asm	/^c0109acc:	68 00 10 00 00       	push   $0x1000$/;"	l
c0109ad1	obj/kernel.asm	/^c0109ad1:	e8 20 d9 ff ff       	call   c01073f6 <kmalloc>$/;"	l
c0109ad6	obj/kernel.asm	/^c0109ad6:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ad9	obj/kernel.asm	/^c0109ad9:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0109adc	obj/kernel.asm	/^c0109adc:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0109ae0	obj/kernel.asm	/^c0109ae0:	75 0a                	jne    c0109aec <sysfile_write+0x64>$/;"	l
c0109ae2	obj/kernel.asm	/^c0109ae2:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0109ae7	obj/kernel.asm	/^c0109ae7:	e9 f5 00 00 00       	jmp    c0109be1 <sysfile_write+0x159>$/;"	l
c0109aec	obj/kernel.asm	/^c0109aec:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109af3	obj/kernel.asm	/^c0109af3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0109afa	obj/kernel.asm	/^c0109afa:	e9 bc 00 00 00       	jmp    c0109bbb <sysfile_write+0x133>$/;"	l
c0109aff	obj/kernel.asm	/^c0109aff:	c7 45 e4 00 10 00 00 	movl   $0x1000,-0x1c(%ebp)$/;"	l
c0109b06	obj/kernel.asm	/^c0109b06:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109b09	obj/kernel.asm	/^c0109b09:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0109b0c	obj/kernel.asm	/^c0109b0c:	76 06                	jbe    c0109b14 <sysfile_write+0x8c>$/;"	l
c0109b0e	obj/kernel.asm	/^c0109b0e:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0109b11	obj/kernel.asm	/^c0109b11:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0109b14	obj/kernel.asm	/^c0109b14:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109b17	obj/kernel.asm	/^c0109b17:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109b1a	obj/kernel.asm	/^c0109b1a:	e8 b4 fc ff ff       	call   c01097d3 <lock_mm>$/;"	l
c0109b1f	obj/kernel.asm	/^c0109b1f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109b22	obj/kernel.asm	/^c0109b22:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109b25	obj/kernel.asm	/^c0109b25:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109b28	obj/kernel.asm	/^c0109b28:	6a 00                	push   $0x0$/;"	l
c0109b2a	obj/kernel.asm	/^c0109b2a:	50                   	push   %eax$/;"	l
c0109b2b	obj/kernel.asm	/^c0109b2b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109b2e	obj/kernel.asm	/^c0109b2e:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0109b31	obj/kernel.asm	/^c0109b31:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109b34	obj/kernel.asm	/^c0109b34:	e8 ea bc ff ff       	call   c0105823 <copy_from_user>$/;"	l
c0109b39	obj/kernel.asm	/^c0109b39:	83 c4 20             	add    $0x20,%esp$/;"	l
c0109b3c	obj/kernel.asm	/^c0109b3c:	85 c0                	test   %eax,%eax$/;"	l
c0109b3e	obj/kernel.asm	/^c0109b3e:	75 07                	jne    c0109b47 <sysfile_write+0xbf>$/;"	l
c0109b40	obj/kernel.asm	/^c0109b40:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0109b47	obj/kernel.asm	/^c0109b47:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109b4a	obj/kernel.asm	/^c0109b4a:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109b4d	obj/kernel.asm	/^c0109b4d:	e8 b8 fc ff ff       	call   c010980a <unlock_mm>$/;"	l
c0109b52	obj/kernel.asm	/^c0109b52:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109b55	obj/kernel.asm	/^c0109b55:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109b59	obj/kernel.asm	/^c0109b59:	75 53                	jne    c0109bae <sysfile_write+0x126>$/;"	l
c0109b5b	obj/kernel.asm	/^c0109b5b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109b5e	obj/kernel.asm	/^c0109b5e:	8d 55 e4             	lea    -0x1c(%ebp),%edx$/;"	l
c0109b61	obj/kernel.asm	/^c0109b61:	52                   	push   %edx$/;"	l
c0109b62	obj/kernel.asm	/^c0109b62:	50                   	push   %eax$/;"	l
c0109b63	obj/kernel.asm	/^c0109b63:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0109b66	obj/kernel.asm	/^c0109b66:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109b69	obj/kernel.asm	/^c0109b69:	e8 59 0c 00 00       	call   c010a7c7 <file_write>$/;"	l
c0109b6e	obj/kernel.asm	/^c0109b6e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109b71	obj/kernel.asm	/^c0109b71:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109b74	obj/kernel.asm	/^c0109b74:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109b77	obj/kernel.asm	/^c0109b77:	85 c0                	test   %eax,%eax$/;"	l
c0109b79	obj/kernel.asm	/^c0109b79:	74 33                	je     c0109bae <sysfile_write+0x126>$/;"	l
c0109b7b	obj/kernel.asm	/^c0109b7b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109b7e	obj/kernel.asm	/^c0109b7e:	39 45 10             	cmp    %eax,0x10(%ebp)$/;"	l
c0109b81	obj/kernel.asm	/^c0109b81:	73 19                	jae    c0109b9c <sysfile_write+0x114>$/;"	l
c0109b83	obj/kernel.asm	/^c0109b83:	68 9e 64 11 c0       	push   $0xc011649e$/;"	l
c0109b88	obj/kernel.asm	/^c0109b88:	68 aa 64 11 c0       	push   $0xc01164aa$/;"	l
c0109b8d	obj/kernel.asm	/^c0109b8d:	68 8a 00 00 00       	push   $0x8a$/;"	l
c0109b92	obj/kernel.asm	/^c0109b92:	68 bf 64 11 c0       	push   $0xc01164bf$/;"	l
c0109b97	obj/kernel.asm	/^c0109b97:	e8 33 69 ff ff       	call   c01004cf <__panic>$/;"	l
c0109b9c	obj/kernel.asm	/^c0109b9c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109b9f	obj/kernel.asm	/^c0109b9f:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c0109ba2	obj/kernel.asm	/^c0109ba2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109ba5	obj/kernel.asm	/^c0109ba5:	29 45 10             	sub    %eax,0x10(%ebp)$/;"	l
c0109ba8	obj/kernel.asm	/^c0109ba8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109bab	obj/kernel.asm	/^c0109bab:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c0109bae	obj/kernel.asm	/^c0109bae:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109bb2	obj/kernel.asm	/^c0109bb2:	75 11                	jne    c0109bc5 <sysfile_write+0x13d>$/;"	l
c0109bb4	obj/kernel.asm	/^c0109bb4:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0109bb7	obj/kernel.asm	/^c0109bb7:	85 c0                	test   %eax,%eax$/;"	l
c0109bb9	obj/kernel.asm	/^c0109bb9:	74 0a                	je     c0109bc5 <sysfile_write+0x13d>$/;"	l
c0109bbb	obj/kernel.asm	/^c0109bbb:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0109bbf	obj/kernel.asm	/^c0109bbf:	0f 85 3a ff ff ff    	jne    c0109aff <sysfile_write+0x77>$/;"	l
c0109bc5	obj/kernel.asm	/^c0109bc5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109bc8	obj/kernel.asm	/^c0109bc8:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0109bcb	obj/kernel.asm	/^c0109bcb:	e8 3e d8 ff ff       	call   c010740e <kfree>$/;"	l
c0109bd0	obj/kernel.asm	/^c0109bd0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109bd3	obj/kernel.asm	/^c0109bd3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0109bd7	obj/kernel.asm	/^c0109bd7:	74 05                	je     c0109bde <sysfile_write+0x156>$/;"	l
c0109bd9	obj/kernel.asm	/^c0109bd9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109bdc	obj/kernel.asm	/^c0109bdc:	eb 03                	jmp    c0109be1 <sysfile_write+0x159>$/;"	l
c0109bde	obj/kernel.asm	/^c0109bde:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109be1	obj/kernel.asm	/^c0109be1:	c9                   	leave  $/;"	l
c0109be2	obj/kernel.asm	/^c0109be2:	c3                   	ret    $/;"	l
c0109be3	obj/kernel.asm	/^c0109be3 <sysfile_seek>:$/;"	l
c0109be3	obj/kernel.asm	/^c0109be3:	55                   	push   %ebp$/;"	l
c0109be4	obj/kernel.asm	/^c0109be4:	89 e5                	mov    %esp,%ebp$/;"	l
c0109be6	obj/kernel.asm	/^c0109be6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109be9	obj/kernel.asm	/^c0109be9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0109bec	obj/kernel.asm	/^c0109bec:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0109bef	obj/kernel.asm	/^c0109bef:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109bf2	obj/kernel.asm	/^c0109bf2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109bf5	obj/kernel.asm	/^c0109bf5:	e8 fa 0c 00 00       	call   c010a8f4 <file_seek>$/;"	l
c0109bfa	obj/kernel.asm	/^c0109bfa:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109bfd	obj/kernel.asm	/^c0109bfd:	c9                   	leave  $/;"	l
c0109bfe	obj/kernel.asm	/^c0109bfe:	c3                   	ret    $/;"	l
c0109bff	obj/kernel.asm	/^c0109bff <sysfile_fstat>:$/;"	l
c0109bff	obj/kernel.asm	/^c0109bff:	55                   	push   %ebp$/;"	l
c0109c00	obj/kernel.asm	/^c0109c00:	89 e5                	mov    %esp,%ebp$/;"	l
c0109c02	obj/kernel.asm	/^c0109c02:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109c05	obj/kernel.asm	/^c0109c05:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c0109c0a	obj/kernel.asm	/^c0109c0a:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109c0d	obj/kernel.asm	/^c0109c0d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109c10	obj/kernel.asm	/^c0109c10:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0109c13	obj/kernel.asm	/^c0109c13:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109c16	obj/kernel.asm	/^c0109c16:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109c19	obj/kernel.asm	/^c0109c19:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109c1c	obj/kernel.asm	/^c0109c1c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109c1f	obj/kernel.asm	/^c0109c1f:	e8 61 0e 00 00       	call   c010aa85 <file_fstat>$/;"	l
c0109c24	obj/kernel.asm	/^c0109c24:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109c27	obj/kernel.asm	/^c0109c27:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109c2a	obj/kernel.asm	/^c0109c2a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109c2e	obj/kernel.asm	/^c0109c2e:	74 05                	je     c0109c35 <sysfile_fstat+0x36>$/;"	l
c0109c30	obj/kernel.asm	/^c0109c30:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c33	obj/kernel.asm	/^c0109c33:	eb 3d                	jmp    c0109c72 <sysfile_fstat+0x73>$/;"	l
c0109c35	obj/kernel.asm	/^c0109c35:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109c38	obj/kernel.asm	/^c0109c38:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109c3b	obj/kernel.asm	/^c0109c3b:	e8 93 fb ff ff       	call   c01097d3 <lock_mm>$/;"	l
c0109c40	obj/kernel.asm	/^c0109c40:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109c43	obj/kernel.asm	/^c0109c43:	6a 10                	push   $0x10$/;"	l
c0109c45	obj/kernel.asm	/^c0109c45:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109c48	obj/kernel.asm	/^c0109c48:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109c4b	obj/kernel.asm	/^c0109c4b:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109c4e	obj/kernel.asm	/^c0109c4e:	e8 11 bc ff ff       	call   c0105864 <copy_to_user>$/;"	l
c0109c53	obj/kernel.asm	/^c0109c53:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109c56	obj/kernel.asm	/^c0109c56:	85 c0                	test   %eax,%eax$/;"	l
c0109c58	obj/kernel.asm	/^c0109c58:	75 07                	jne    c0109c61 <sysfile_fstat+0x62>$/;"	l
c0109c5a	obj/kernel.asm	/^c0109c5a:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0109c61	obj/kernel.asm	/^c0109c61:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109c64	obj/kernel.asm	/^c0109c64:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109c67	obj/kernel.asm	/^c0109c67:	e8 9e fb ff ff       	call   c010980a <unlock_mm>$/;"	l
c0109c6c	obj/kernel.asm	/^c0109c6c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109c6f	obj/kernel.asm	/^c0109c6f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109c72	obj/kernel.asm	/^c0109c72:	c9                   	leave  $/;"	l
c0109c73	obj/kernel.asm	/^c0109c73:	c3                   	ret    $/;"	l
c0109c74	obj/kernel.asm	/^c0109c74 <sysfile_fsync>:$/;"	l
c0109c74	obj/kernel.asm	/^c0109c74:	55                   	push   %ebp$/;"	l
c0109c75	obj/kernel.asm	/^c0109c75:	89 e5                	mov    %esp,%ebp$/;"	l
c0109c77	obj/kernel.asm	/^c0109c77:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109c7a	obj/kernel.asm	/^c0109c7a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109c7d	obj/kernel.asm	/^c0109c7d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109c80	obj/kernel.asm	/^c0109c80:	e8 bc 0e 00 00       	call   c010ab41 <file_fsync>$/;"	l
c0109c85	obj/kernel.asm	/^c0109c85:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109c88	obj/kernel.asm	/^c0109c88:	c9                   	leave  $/;"	l
c0109c89	obj/kernel.asm	/^c0109c89:	c3                   	ret    $/;"	l
c0109c8a	obj/kernel.asm	/^c0109c8a <sysfile_chdir>:$/;"	l
c0109c8a	obj/kernel.asm	/^c0109c8a:	55                   	push   %ebp$/;"	l
c0109c8b	obj/kernel.asm	/^c0109c8b:	89 e5                	mov    %esp,%ebp$/;"	l
c0109c8d	obj/kernel.asm	/^c0109c8d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109c90	obj/kernel.asm	/^c0109c90:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109c93	obj/kernel.asm	/^c0109c93:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109c96	obj/kernel.asm	/^c0109c96:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0109c99	obj/kernel.asm	/^c0109c99:	50                   	push   %eax$/;"	l
c0109c9a	obj/kernel.asm	/^c0109c9a:	e8 95 fb ff ff       	call   c0109834 <copy_path>$/;"	l
c0109c9f	obj/kernel.asm	/^c0109c9f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ca2	obj/kernel.asm	/^c0109ca2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109ca5	obj/kernel.asm	/^c0109ca5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109ca9	obj/kernel.asm	/^c0109ca9:	74 05                	je     c0109cb0 <sysfile_chdir+0x26>$/;"	l
c0109cab	obj/kernel.asm	/^c0109cab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109cae	obj/kernel.asm	/^c0109cae:	eb 24                	jmp    c0109cd4 <sysfile_chdir+0x4a>$/;"	l
c0109cb0	obj/kernel.asm	/^c0109cb0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109cb3	obj/kernel.asm	/^c0109cb3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109cb6	obj/kernel.asm	/^c0109cb6:	50                   	push   %eax$/;"	l
c0109cb7	obj/kernel.asm	/^c0109cb7:	e8 0b 4f 00 00       	call   c010ebc7 <vfs_chdir>$/;"	l
c0109cbc	obj/kernel.asm	/^c0109cbc:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109cbf	obj/kernel.asm	/^c0109cbf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109cc2	obj/kernel.asm	/^c0109cc2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109cc5	obj/kernel.asm	/^c0109cc5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109cc8	obj/kernel.asm	/^c0109cc8:	50                   	push   %eax$/;"	l
c0109cc9	obj/kernel.asm	/^c0109cc9:	e8 40 d7 ff ff       	call   c010740e <kfree>$/;"	l
c0109cce	obj/kernel.asm	/^c0109cce:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109cd1	obj/kernel.asm	/^c0109cd1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109cd4	obj/kernel.asm	/^c0109cd4:	c9                   	leave  $/;"	l
c0109cd5	obj/kernel.asm	/^c0109cd5:	c3                   	ret    $/;"	l
c0109cd6	obj/kernel.asm	/^c0109cd6 <sysfile_link>:$/;"	l
c0109cd6	obj/kernel.asm	/^c0109cd6:	55                   	push   %ebp$/;"	l
c0109cd7	obj/kernel.asm	/^c0109cd7:	89 e5                	mov    %esp,%ebp$/;"	l
c0109cd9	obj/kernel.asm	/^c0109cd9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109cdc	obj/kernel.asm	/^c0109cdc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109cdf	obj/kernel.asm	/^c0109cdf:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109ce2	obj/kernel.asm	/^c0109ce2:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0109ce5	obj/kernel.asm	/^c0109ce5:	50                   	push   %eax$/;"	l
c0109ce6	obj/kernel.asm	/^c0109ce6:	e8 49 fb ff ff       	call   c0109834 <copy_path>$/;"	l
c0109ceb	obj/kernel.asm	/^c0109ceb:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109cee	obj/kernel.asm	/^c0109cee:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109cf1	obj/kernel.asm	/^c0109cf1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109cf5	obj/kernel.asm	/^c0109cf5:	74 05                	je     c0109cfc <sysfile_link+0x26>$/;"	l
c0109cf7	obj/kernel.asm	/^c0109cf7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109cfa	obj/kernel.asm	/^c0109cfa:	eb 66                	jmp    c0109d62 <sysfile_link+0x8c>$/;"	l
c0109cfc	obj/kernel.asm	/^c0109cfc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109cff	obj/kernel.asm	/^c0109cff:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109d02	obj/kernel.asm	/^c0109d02:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0109d05	obj/kernel.asm	/^c0109d05:	50                   	push   %eax$/;"	l
c0109d06	obj/kernel.asm	/^c0109d06:	e8 29 fb ff ff       	call   c0109834 <copy_path>$/;"	l
c0109d0b	obj/kernel.asm	/^c0109d0b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109d0e	obj/kernel.asm	/^c0109d0e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109d11	obj/kernel.asm	/^c0109d11:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109d15	obj/kernel.asm	/^c0109d15:	74 14                	je     c0109d2b <sysfile_link+0x55>$/;"	l
c0109d17	obj/kernel.asm	/^c0109d17:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109d1a	obj/kernel.asm	/^c0109d1a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109d1d	obj/kernel.asm	/^c0109d1d:	50                   	push   %eax$/;"	l
c0109d1e	obj/kernel.asm	/^c0109d1e:	e8 eb d6 ff ff       	call   c010740e <kfree>$/;"	l
c0109d23	obj/kernel.asm	/^c0109d23:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109d26	obj/kernel.asm	/^c0109d26:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109d29	obj/kernel.asm	/^c0109d29:	eb 37                	jmp    c0109d62 <sysfile_link+0x8c>$/;"	l
c0109d2b	obj/kernel.asm	/^c0109d2b:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109d2e	obj/kernel.asm	/^c0109d2e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109d31	obj/kernel.asm	/^c0109d31:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109d34	obj/kernel.asm	/^c0109d34:	52                   	push   %edx$/;"	l
c0109d35	obj/kernel.asm	/^c0109d35:	50                   	push   %eax$/;"	l
c0109d36	obj/kernel.asm	/^c0109d36:	e8 13 59 00 00       	call   c010f64e <vfs_link>$/;"	l
c0109d3b	obj/kernel.asm	/^c0109d3b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109d3e	obj/kernel.asm	/^c0109d3e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109d41	obj/kernel.asm	/^c0109d41:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109d44	obj/kernel.asm	/^c0109d44:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109d47	obj/kernel.asm	/^c0109d47:	50                   	push   %eax$/;"	l
c0109d48	obj/kernel.asm	/^c0109d48:	e8 c1 d6 ff ff       	call   c010740e <kfree>$/;"	l
c0109d4d	obj/kernel.asm	/^c0109d4d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109d50	obj/kernel.asm	/^c0109d50:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109d53	obj/kernel.asm	/^c0109d53:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109d56	obj/kernel.asm	/^c0109d56:	50                   	push   %eax$/;"	l
c0109d57	obj/kernel.asm	/^c0109d57:	e8 b2 d6 ff ff       	call   c010740e <kfree>$/;"	l
c0109d5c	obj/kernel.asm	/^c0109d5c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109d5f	obj/kernel.asm	/^c0109d5f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109d62	obj/kernel.asm	/^c0109d62:	c9                   	leave  $/;"	l
c0109d63	obj/kernel.asm	/^c0109d63:	c3                   	ret    $/;"	l
c0109d64	obj/kernel.asm	/^c0109d64 <sysfile_rename>:$/;"	l
c0109d64	obj/kernel.asm	/^c0109d64:	55                   	push   %ebp$/;"	l
c0109d65	obj/kernel.asm	/^c0109d65:	89 e5                	mov    %esp,%ebp$/;"	l
c0109d67	obj/kernel.asm	/^c0109d67:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109d6a	obj/kernel.asm	/^c0109d6a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109d6d	obj/kernel.asm	/^c0109d6d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109d70	obj/kernel.asm	/^c0109d70:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0109d73	obj/kernel.asm	/^c0109d73:	50                   	push   %eax$/;"	l
c0109d74	obj/kernel.asm	/^c0109d74:	e8 bb fa ff ff       	call   c0109834 <copy_path>$/;"	l
c0109d79	obj/kernel.asm	/^c0109d79:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109d7c	obj/kernel.asm	/^c0109d7c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109d7f	obj/kernel.asm	/^c0109d7f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109d83	obj/kernel.asm	/^c0109d83:	74 05                	je     c0109d8a <sysfile_rename+0x26>$/;"	l
c0109d85	obj/kernel.asm	/^c0109d85:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109d88	obj/kernel.asm	/^c0109d88:	eb 66                	jmp    c0109df0 <sysfile_rename+0x8c>$/;"	l
c0109d8a	obj/kernel.asm	/^c0109d8a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109d8d	obj/kernel.asm	/^c0109d8d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109d90	obj/kernel.asm	/^c0109d90:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0109d93	obj/kernel.asm	/^c0109d93:	50                   	push   %eax$/;"	l
c0109d94	obj/kernel.asm	/^c0109d94:	e8 9b fa ff ff       	call   c0109834 <copy_path>$/;"	l
c0109d99	obj/kernel.asm	/^c0109d99:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109d9c	obj/kernel.asm	/^c0109d9c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109d9f	obj/kernel.asm	/^c0109d9f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109da3	obj/kernel.asm	/^c0109da3:	74 14                	je     c0109db9 <sysfile_rename+0x55>$/;"	l
c0109da5	obj/kernel.asm	/^c0109da5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109da8	obj/kernel.asm	/^c0109da8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109dab	obj/kernel.asm	/^c0109dab:	50                   	push   %eax$/;"	l
c0109dac	obj/kernel.asm	/^c0109dac:	e8 5d d6 ff ff       	call   c010740e <kfree>$/;"	l
c0109db1	obj/kernel.asm	/^c0109db1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109db4	obj/kernel.asm	/^c0109db4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109db7	obj/kernel.asm	/^c0109db7:	eb 37                	jmp    c0109df0 <sysfile_rename+0x8c>$/;"	l
c0109db9	obj/kernel.asm	/^c0109db9:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0109dbc	obj/kernel.asm	/^c0109dbc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109dbf	obj/kernel.asm	/^c0109dbf:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109dc2	obj/kernel.asm	/^c0109dc2:	52                   	push   %edx$/;"	l
c0109dc3	obj/kernel.asm	/^c0109dc3:	50                   	push   %eax$/;"	l
c0109dc4	obj/kernel.asm	/^c0109dc4:	e8 7b 58 00 00       	call   c010f644 <vfs_rename>$/;"	l
c0109dc9	obj/kernel.asm	/^c0109dc9:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109dcc	obj/kernel.asm	/^c0109dcc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109dcf	obj/kernel.asm	/^c0109dcf:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109dd2	obj/kernel.asm	/^c0109dd2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109dd5	obj/kernel.asm	/^c0109dd5:	50                   	push   %eax$/;"	l
c0109dd6	obj/kernel.asm	/^c0109dd6:	e8 33 d6 ff ff       	call   c010740e <kfree>$/;"	l
c0109ddb	obj/kernel.asm	/^c0109ddb:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109dde	obj/kernel.asm	/^c0109dde:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109de1	obj/kernel.asm	/^c0109de1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109de4	obj/kernel.asm	/^c0109de4:	50                   	push   %eax$/;"	l
c0109de5	obj/kernel.asm	/^c0109de5:	e8 24 d6 ff ff       	call   c010740e <kfree>$/;"	l
c0109dea	obj/kernel.asm	/^c0109dea:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ded	obj/kernel.asm	/^c0109ded:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109df0	obj/kernel.asm	/^c0109df0:	c9                   	leave  $/;"	l
c0109df1	obj/kernel.asm	/^c0109df1:	c3                   	ret    $/;"	l
c0109df2	obj/kernel.asm	/^c0109df2 <sysfile_unlink>:$/;"	l
c0109df2	obj/kernel.asm	/^c0109df2:	55                   	push   %ebp$/;"	l
c0109df3	obj/kernel.asm	/^c0109df3:	89 e5                	mov    %esp,%ebp$/;"	l
c0109df5	obj/kernel.asm	/^c0109df5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109df8	obj/kernel.asm	/^c0109df8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109dfb	obj/kernel.asm	/^c0109dfb:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109dfe	obj/kernel.asm	/^c0109dfe:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0109e01	obj/kernel.asm	/^c0109e01:	50                   	push   %eax$/;"	l
c0109e02	obj/kernel.asm	/^c0109e02:	e8 2d fa ff ff       	call   c0109834 <copy_path>$/;"	l
c0109e07	obj/kernel.asm	/^c0109e07:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e0a	obj/kernel.asm	/^c0109e0a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109e0d	obj/kernel.asm	/^c0109e0d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109e11	obj/kernel.asm	/^c0109e11:	74 05                	je     c0109e18 <sysfile_unlink+0x26>$/;"	l
c0109e13	obj/kernel.asm	/^c0109e13:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109e16	obj/kernel.asm	/^c0109e16:	eb 24                	jmp    c0109e3c <sysfile_unlink+0x4a>$/;"	l
c0109e18	obj/kernel.asm	/^c0109e18:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109e1b	obj/kernel.asm	/^c0109e1b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109e1e	obj/kernel.asm	/^c0109e1e:	50                   	push   %eax$/;"	l
c0109e1f	obj/kernel.asm	/^c0109e1f:	e8 16 58 00 00       	call   c010f63a <vfs_unlink>$/;"	l
c0109e24	obj/kernel.asm	/^c0109e24:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e27	obj/kernel.asm	/^c0109e27:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109e2a	obj/kernel.asm	/^c0109e2a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0109e2d	obj/kernel.asm	/^c0109e2d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109e30	obj/kernel.asm	/^c0109e30:	50                   	push   %eax$/;"	l
c0109e31	obj/kernel.asm	/^c0109e31:	e8 d8 d5 ff ff       	call   c010740e <kfree>$/;"	l
c0109e36	obj/kernel.asm	/^c0109e36:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e39	obj/kernel.asm	/^c0109e39:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109e3c	obj/kernel.asm	/^c0109e3c:	c9                   	leave  $/;"	l
c0109e3d	obj/kernel.asm	/^c0109e3d:	c3                   	ret    $/;"	l
c0109e3e	obj/kernel.asm	/^c0109e3e <sysfile_getcwd>:$/;"	l
c0109e3e	obj/kernel.asm	/^c0109e3e:	55                   	push   %ebp$/;"	l
c0109e3f	obj/kernel.asm	/^c0109e3f:	89 e5                	mov    %esp,%ebp$/;"	l
c0109e41	obj/kernel.asm	/^c0109e41:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0109e44	obj/kernel.asm	/^c0109e44:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c0109e49	obj/kernel.asm	/^c0109e49:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109e4c	obj/kernel.asm	/^c0109e4c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109e4f	obj/kernel.asm	/^c0109e4f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0109e53	obj/kernel.asm	/^c0109e53:	75 07                	jne    c0109e5c <sysfile_getcwd+0x1e>$/;"	l
c0109e55	obj/kernel.asm	/^c0109e55:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0109e5a	obj/kernel.asm	/^c0109e5a:	eb 66                	jmp    c0109ec2 <sysfile_getcwd+0x84>$/;"	l
c0109e5c	obj/kernel.asm	/^c0109e5c:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0109e63	obj/kernel.asm	/^c0109e63:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109e66	obj/kernel.asm	/^c0109e66:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109e69	obj/kernel.asm	/^c0109e69:	e8 65 f9 ff ff       	call   c01097d3 <lock_mm>$/;"	l
c0109e6e	obj/kernel.asm	/^c0109e6e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e71	obj/kernel.asm	/^c0109e71:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109e74	obj/kernel.asm	/^c0109e74:	6a 01                	push   $0x1$/;"	l
c0109e76	obj/kernel.asm	/^c0109e76:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109e79	obj/kernel.asm	/^c0109e79:	50                   	push   %eax$/;"	l
c0109e7a	obj/kernel.asm	/^c0109e7a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109e7d	obj/kernel.asm	/^c0109e7d:	e8 8f c2 ff ff       	call   c0106111 <user_mem_check>$/;"	l
c0109e82	obj/kernel.asm	/^c0109e82:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e85	obj/kernel.asm	/^c0109e85:	85 c0                	test   %eax,%eax$/;"	l
c0109e87	obj/kernel.asm	/^c0109e87:	74 28                	je     c0109eb1 <sysfile_getcwd+0x73>$/;"	l
c0109e89	obj/kernel.asm	/^c0109e89:	6a 00                	push   $0x0$/;"	l
c0109e8b	obj/kernel.asm	/^c0109e8b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109e8e	obj/kernel.asm	/^c0109e8e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109e91	obj/kernel.asm	/^c0109e91:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c0109e94	obj/kernel.asm	/^c0109e94:	50                   	push   %eax$/;"	l
c0109e95	obj/kernel.asm	/^c0109e95:	e8 c4 0e 00 00       	call   c010ad5e <iobuf_init>$/;"	l
c0109e9a	obj/kernel.asm	/^c0109e9a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109e9d	obj/kernel.asm	/^c0109e9d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109ea0	obj/kernel.asm	/^c0109ea0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109ea3	obj/kernel.asm	/^c0109ea3:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109ea6	obj/kernel.asm	/^c0109ea6:	e8 63 4d 00 00       	call   c010ec0e <vfs_getcwd>$/;"	l
c0109eab	obj/kernel.asm	/^c0109eab:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109eae	obj/kernel.asm	/^c0109eae:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109eb1	obj/kernel.asm	/^c0109eb1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109eb4	obj/kernel.asm	/^c0109eb4:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109eb7	obj/kernel.asm	/^c0109eb7:	e8 4e f9 ff ff       	call   c010980a <unlock_mm>$/;"	l
c0109ebc	obj/kernel.asm	/^c0109ebc:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ebf	obj/kernel.asm	/^c0109ebf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109ec2	obj/kernel.asm	/^c0109ec2:	c9                   	leave  $/;"	l
c0109ec3	obj/kernel.asm	/^c0109ec3:	c3                   	ret    $/;"	l
c0109ec4	obj/kernel.asm	/^c0109ec4 <sysfile_getdirentry>:$/;"	l
c0109ec4	obj/kernel.asm	/^c0109ec4:	55                   	push   %ebp$/;"	l
c0109ec5	obj/kernel.asm	/^c0109ec5:	89 e5                	mov    %esp,%ebp$/;"	l
c0109ec7	obj/kernel.asm	/^c0109ec7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0109eca	obj/kernel.asm	/^c0109eca:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c0109ecf	obj/kernel.asm	/^c0109ecf:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109ed2	obj/kernel.asm	/^c0109ed2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0109ed5	obj/kernel.asm	/^c0109ed5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109ed8	obj/kernel.asm	/^c0109ed8:	68 04 01 00 00       	push   $0x104$/;"	l
c0109edd	obj/kernel.asm	/^c0109edd:	e8 14 d5 ff ff       	call   c01073f6 <kmalloc>$/;"	l
c0109ee2	obj/kernel.asm	/^c0109ee2:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109ee5	obj/kernel.asm	/^c0109ee5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0109ee8	obj/kernel.asm	/^c0109ee8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0109eec	obj/kernel.asm	/^c0109eec:	75 0a                	jne    c0109ef8 <sysfile_getdirentry+0x34>$/;"	l
c0109eee	obj/kernel.asm	/^c0109eee:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0109ef3	obj/kernel.asm	/^c0109ef3:	e9 b6 00 00 00       	jmp    c0109fae <sysfile_getdirentry+0xea>$/;"	l
c0109ef8	obj/kernel.asm	/^c0109ef8:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0109eff	obj/kernel.asm	/^c0109eff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109f02	obj/kernel.asm	/^c0109f02:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109f05	obj/kernel.asm	/^c0109f05:	e8 c9 f8 ff ff       	call   c01097d3 <lock_mm>$/;"	l
c0109f0a	obj/kernel.asm	/^c0109f0a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f0d	obj/kernel.asm	/^c0109f0d:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0109f10	obj/kernel.asm	/^c0109f10:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0109f13	obj/kernel.asm	/^c0109f13:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109f16	obj/kernel.asm	/^c0109f16:	6a 01                	push   $0x1$/;"	l
c0109f18	obj/kernel.asm	/^c0109f18:	6a 04                	push   $0x4$/;"	l
c0109f1a	obj/kernel.asm	/^c0109f1a:	52                   	push   %edx$/;"	l
c0109f1b	obj/kernel.asm	/^c0109f1b:	50                   	push   %eax$/;"	l
c0109f1c	obj/kernel.asm	/^c0109f1c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109f1f	obj/kernel.asm	/^c0109f1f:	e8 ff b8 ff ff       	call   c0105823 <copy_from_user>$/;"	l
c0109f24	obj/kernel.asm	/^c0109f24:	83 c4 20             	add    $0x20,%esp$/;"	l
c0109f27	obj/kernel.asm	/^c0109f27:	85 c0                	test   %eax,%eax$/;"	l
c0109f29	obj/kernel.asm	/^c0109f29:	75 07                	jne    c0109f32 <sysfile_getdirentry+0x6e>$/;"	l
c0109f2b	obj/kernel.asm	/^c0109f2b:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0109f32	obj/kernel.asm	/^c0109f32:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109f35	obj/kernel.asm	/^c0109f35:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109f38	obj/kernel.asm	/^c0109f38:	e8 cd f8 ff ff       	call   c010980a <unlock_mm>$/;"	l
c0109f3d	obj/kernel.asm	/^c0109f3d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f40	obj/kernel.asm	/^c0109f40:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109f44	obj/kernel.asm	/^c0109f44:	75 57                	jne    c0109f9d <sysfile_getdirentry+0xd9>$/;"	l
c0109f46	obj/kernel.asm	/^c0109f46:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109f49	obj/kernel.asm	/^c0109f49:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109f4c	obj/kernel.asm	/^c0109f4c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109f4f	obj/kernel.asm	/^c0109f4f:	e8 a6 0c 00 00       	call   c010abfa <file_getdirentry>$/;"	l
c0109f54	obj/kernel.asm	/^c0109f54:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f57	obj/kernel.asm	/^c0109f57:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0109f5a	obj/kernel.asm	/^c0109f5a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0109f5e	obj/kernel.asm	/^c0109f5e:	75 3d                	jne    c0109f9d <sysfile_getdirentry+0xd9>$/;"	l
c0109f60	obj/kernel.asm	/^c0109f60:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109f63	obj/kernel.asm	/^c0109f63:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109f66	obj/kernel.asm	/^c0109f66:	e8 68 f8 ff ff       	call   c01097d3 <lock_mm>$/;"	l
c0109f6b	obj/kernel.asm	/^c0109f6b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f6e	obj/kernel.asm	/^c0109f6e:	68 04 01 00 00       	push   $0x104$/;"	l
c0109f73	obj/kernel.asm	/^c0109f73:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109f76	obj/kernel.asm	/^c0109f76:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109f79	obj/kernel.asm	/^c0109f79:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109f7c	obj/kernel.asm	/^c0109f7c:	e8 e3 b8 ff ff       	call   c0105864 <copy_to_user>$/;"	l
c0109f81	obj/kernel.asm	/^c0109f81:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f84	obj/kernel.asm	/^c0109f84:	85 c0                	test   %eax,%eax$/;"	l
c0109f86	obj/kernel.asm	/^c0109f86:	75 07                	jne    c0109f8f <sysfile_getdirentry+0xcb>$/;"	l
c0109f88	obj/kernel.asm	/^c0109f88:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0109f8f	obj/kernel.asm	/^c0109f8f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109f92	obj/kernel.asm	/^c0109f92:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0109f95	obj/kernel.asm	/^c0109f95:	e8 70 f8 ff ff       	call   c010980a <unlock_mm>$/;"	l
c0109f9a	obj/kernel.asm	/^c0109f9a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109f9d	obj/kernel.asm	/^c0109f9d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0109fa0	obj/kernel.asm	/^c0109fa0:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0109fa3	obj/kernel.asm	/^c0109fa3:	e8 66 d4 ff ff       	call   c010740e <kfree>$/;"	l
c0109fa8	obj/kernel.asm	/^c0109fa8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109fab	obj/kernel.asm	/^c0109fab:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0109fae	obj/kernel.asm	/^c0109fae:	c9                   	leave  $/;"	l
c0109faf	obj/kernel.asm	/^c0109faf:	c3                   	ret    $/;"	l
c0109fb0	obj/kernel.asm	/^c0109fb0 <sysfile_dup>:$/;"	l
c0109fb0	obj/kernel.asm	/^c0109fb0:	55                   	push   %ebp$/;"	l
c0109fb1	obj/kernel.asm	/^c0109fb1:	89 e5                	mov    %esp,%ebp$/;"	l
c0109fb3	obj/kernel.asm	/^c0109fb3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109fb6	obj/kernel.asm	/^c0109fb6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0109fb9	obj/kernel.asm	/^c0109fb9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0109fbc	obj/kernel.asm	/^c0109fbc:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0109fbf	obj/kernel.asm	/^c0109fbf:	e8 39 0d 00 00       	call   c010acfd <file_dup>$/;"	l
c0109fc4	obj/kernel.asm	/^c0109fc4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0109fc7	obj/kernel.asm	/^c0109fc7:	c9                   	leave  $/;"	l
c0109fc8	obj/kernel.asm	/^c0109fc8:	c3                   	ret    $/;"	l
c0109fc9	obj/kernel.asm	/^c0109fc9 <sysfile_pipe>:$/;"	l
c0109fc9	obj/kernel.asm	/^c0109fc9:	55                   	push   %ebp$/;"	l
c0109fca	obj/kernel.asm	/^c0109fca:	89 e5                	mov    %esp,%ebp$/;"	l
c0109fcc	obj/kernel.asm	/^c0109fcc:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c0109fd1	obj/kernel.asm	/^c0109fd1:	5d                   	pop    %ebp$/;"	l
c0109fd2	obj/kernel.asm	/^c0109fd2:	c3                   	ret    $/;"	l
c0109fd3	obj/kernel.asm	/^c0109fd3 <sysfile_mkfifo>:$/;"	l
c0109fd3	obj/kernel.asm	/^c0109fd3:	55                   	push   %ebp$/;"	l
c0109fd4	obj/kernel.asm	/^c0109fd4:	89 e5                	mov    %esp,%ebp$/;"	l
c0109fd6	obj/kernel.asm	/^c0109fd6:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c0109fdb	obj/kernel.asm	/^c0109fdb:	5d                   	pop    %ebp$/;"	l
c0109fdc	obj/kernel.asm	/^c0109fdc:	c3                   	ret    $/;"	l
c0109fdd	obj/kernel.asm	/^c0109fdd <files_count>:$/;"	l
c0109fdd	obj/kernel.asm	/^c0109fdd:	55                   	push   %ebp$/;"	l
c0109fde	obj/kernel.asm	/^c0109fde:	89 e5                	mov    %esp,%ebp$/;"	l
c0109fe0	obj/kernel.asm	/^c0109fe0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109fe3	obj/kernel.asm	/^c0109fe3:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0109fe6	obj/kernel.asm	/^c0109fe6:	5d                   	pop    %ebp$/;"	l
c0109fe7	obj/kernel.asm	/^c0109fe7:	c3                   	ret    $/;"	l
c0109fe8	obj/kernel.asm	/^c0109fe8 <fopen_count>:$/;"	l
c0109fe8	obj/kernel.asm	/^c0109fe8:	55                   	push   %ebp$/;"	l
c0109fe9	obj/kernel.asm	/^c0109fe9:	89 e5                	mov    %esp,%ebp$/;"	l
c0109feb	obj/kernel.asm	/^c0109feb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109fee	obj/kernel.asm	/^c0109fee:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109ff1	obj/kernel.asm	/^c0109ff1:	5d                   	pop    %ebp$/;"	l
c0109ff2	obj/kernel.asm	/^c0109ff2:	c3                   	ret    $/;"	l
c0109ff3	obj/kernel.asm	/^c0109ff3 <fopen_count_inc>:$/;"	l
c0109ff3	obj/kernel.asm	/^c0109ff3:	55                   	push   %ebp$/;"	l
c0109ff4	obj/kernel.asm	/^c0109ff4:	89 e5                	mov    %esp,%ebp$/;"	l
c0109ff6	obj/kernel.asm	/^c0109ff6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0109ff9	obj/kernel.asm	/^c0109ff9:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0109ffc	obj/kernel.asm	/^c0109ffc:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0109fff	obj/kernel.asm	/^c0109fff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a002	obj/kernel.asm	/^c010a002:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010a005	obj/kernel.asm	/^c010a005:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a008	obj/kernel.asm	/^c010a008:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a00b	obj/kernel.asm	/^c010a00b:	5d                   	pop    %ebp$/;"	l
c010a00c	obj/kernel.asm	/^c010a00c:	c3                   	ret    $/;"	l
c010a00d	obj/kernel.asm	/^c010a00d <fopen_count_dec>:$/;"	l
c010a00d	obj/kernel.asm	/^c010a00d:	55                   	push   %ebp$/;"	l
c010a00e	obj/kernel.asm	/^c010a00e:	89 e5                	mov    %esp,%ebp$/;"	l
c010a010	obj/kernel.asm	/^c010a010:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a013	obj/kernel.asm	/^c010a013:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a016	obj/kernel.asm	/^c010a016:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010a019	obj/kernel.asm	/^c010a019:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a01c	obj/kernel.asm	/^c010a01c:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010a01f	obj/kernel.asm	/^c010a01f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a022	obj/kernel.asm	/^c010a022:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010a025	obj/kernel.asm	/^c010a025:	5d                   	pop    %ebp$/;"	l
c010a026	obj/kernel.asm	/^c010a026:	c3                   	ret    $/;"	l
c010a027	obj/kernel.asm	/^c010a027 <get_fd_array>:$/;"	l
c010a027	obj/kernel.asm	/^c010a027:	55                   	push   %ebp$/;"	l
c010a028	obj/kernel.asm	/^c010a028:	89 e5                	mov    %esp,%ebp$/;"	l
c010a02a	obj/kernel.asm	/^c010a02a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a02d	obj/kernel.asm	/^c010a02d:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010a032	obj/kernel.asm	/^c010a032:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010a038	obj/kernel.asm	/^c010a038:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a03b	obj/kernel.asm	/^c010a03b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a03f	obj/kernel.asm	/^c010a03f:	74 0f                	je     c010a050 <get_fd_array+0x29>$/;"	l
c010a041	obj/kernel.asm	/^c010a041:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a044	obj/kernel.asm	/^c010a044:	e8 94 ff ff ff       	call   c0109fdd <files_count>$/;"	l
c010a049	obj/kernel.asm	/^c010a049:	83 c4 04             	add    $0x4,%esp$/;"	l
c010a04c	obj/kernel.asm	/^c010a04c:	85 c0                	test   %eax,%eax$/;"	l
c010a04e	obj/kernel.asm	/^c010a04e:	7f 16                	jg     c010a066 <get_fd_array+0x3f>$/;"	l
c010a050	obj/kernel.asm	/^c010a050:	68 d4 64 11 c0       	push   $0xc01164d4$/;"	l
c010a055	obj/kernel.asm	/^c010a055:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010a05a	obj/kernel.asm	/^c010a05a:	6a 14                	push   $0x14$/;"	l
c010a05c	obj/kernel.asm	/^c010a05c:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010a061	obj/kernel.asm	/^c010a061:	e8 69 64 ff ff       	call   c01004cf <__panic>$/;"	l
c010a066	obj/kernel.asm	/^c010a066:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a069	obj/kernel.asm	/^c010a069:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a06c	obj/kernel.asm	/^c010a06c:	c9                   	leave  $/;"	l
c010a06d	obj/kernel.asm	/^c010a06d:	c3                   	ret    $/;"	l
c010a06e	obj/kernel.asm	/^c010a06e <fd_array_init>:$/;"	l
c010a06e	obj/kernel.asm	/^c010a06e:	55                   	push   %ebp$/;"	l
c010a06f	obj/kernel.asm	/^c010a06f:	89 e5                	mov    %esp,%ebp$/;"	l
c010a071	obj/kernel.asm	/^c010a071:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010a074	obj/kernel.asm	/^c010a074:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a077	obj/kernel.asm	/^c010a077:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010a07a	obj/kernel.asm	/^c010a07a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c010a081	obj/kernel.asm	/^c010a081:	eb 24                	jmp    c010a0a7 <fd_array_init+0x39>$/;"	l
c010a083	obj/kernel.asm	/^c010a083:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010a086	obj/kernel.asm	/^c010a086:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010a08d	obj/kernel.asm	/^c010a08d:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010a090	obj/kernel.asm	/^c010a090:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010a096	obj/kernel.asm	/^c010a096:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010a099	obj/kernel.asm	/^c010a099:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010a09c	obj/kernel.asm	/^c010a09c:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010a09f	obj/kernel.asm	/^c010a09f:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c010a0a3	obj/kernel.asm	/^c010a0a3:	83 45 f8 1c          	addl   $0x1c,-0x8(%ebp)$/;"	l
c010a0a7	obj/kernel.asm	/^c010a0a7:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010a0aa	obj/kernel.asm	/^c010a0aa:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010a0af	obj/kernel.asm	/^c010a0af:	76 d2                	jbe    c010a083 <fd_array_init+0x15>$/;"	l
c010a0b1	obj/kernel.asm	/^c010a0b1:	c9                   	leave  $/;"	l
c010a0b2	obj/kernel.asm	/^c010a0b2:	c3                   	ret    $/;"	l
c010a0b3	obj/kernel.asm	/^c010a0b3 <fd_array_alloc>:$/;"	l
c010a0b3	obj/kernel.asm	/^c010a0b3:	55                   	push   %ebp$/;"	l
c010a0b4	obj/kernel.asm	/^c010a0b4:	89 e5                	mov    %esp,%ebp$/;"	l
c010a0b6	obj/kernel.asm	/^c010a0b6:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a0b9	obj/kernel.asm	/^c010a0b9:	e8 69 ff ff ff       	call   c010a027 <get_fd_array>$/;"	l
c010a0be	obj/kernel.asm	/^c010a0be:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a0c1	obj/kernel.asm	/^c010a0c1:	81 7d 08 d9 6a ff ff 	cmpl   $0xffff6ad9,0x8(%ebp)$/;"	l
c010a0c8	obj/kernel.asm	/^c010a0c8:	75 30                	jne    c010a0fa <fd_array_alloc+0x47>$/;"	l
c010a0ca	obj/kernel.asm	/^c010a0ca:	c7 45 08 00 00 00 00 	movl   $0x0,0x8(%ebp)$/;"	l
c010a0d1	obj/kernel.asm	/^c010a0d1:	eb 13                	jmp    c010a0e6 <fd_array_alloc+0x33>$/;"	l
c010a0d3	obj/kernel.asm	/^c010a0d3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a0d6	obj/kernel.asm	/^c010a0d6:	8b 00                	mov    (%eax),%eax$/;"	l
c010a0d8	obj/kernel.asm	/^c010a0d8:	85 c0                	test   %eax,%eax$/;"	l
c010a0da	obj/kernel.asm	/^c010a0da:	75 02                	jne    c010a0de <fd_array_alloc+0x2b>$/;"	l
c010a0dc	obj/kernel.asm	/^c010a0dc:	eb 59                	jmp    c010a137 <fd_array_alloc+0x84>$/;"	l
c010a0de	obj/kernel.asm	/^c010a0de:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010a0e2	obj/kernel.asm	/^c010a0e2:	83 45 f4 1c          	addl   $0x1c,-0xc(%ebp)$/;"	l
c010a0e6	obj/kernel.asm	/^c010a0e6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a0e9	obj/kernel.asm	/^c010a0e9:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010a0ee	obj/kernel.asm	/^c010a0ee:	76 e3                	jbe    c010a0d3 <fd_array_alloc+0x20>$/;"	l
c010a0f0	obj/kernel.asm	/^c010a0f0:	b8 ea ff ff ff       	mov    $0xffffffea,%eax$/;"	l
c010a0f5	obj/kernel.asm	/^c010a0f5:	e9 85 00 00 00       	jmp    c010a17f <fd_array_alloc+0xcc>$/;"	l
c010a0fa	obj/kernel.asm	/^c010a0fa:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010a0fe	obj/kernel.asm	/^c010a0fe:	78 30                	js     c010a130 <fd_array_alloc+0x7d>$/;"	l
c010a100	obj/kernel.asm	/^c010a100:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a103	obj/kernel.asm	/^c010a103:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010a108	obj/kernel.asm	/^c010a108:	77 26                	ja     c010a130 <fd_array_alloc+0x7d>$/;"	l
c010a10a	obj/kernel.asm	/^c010a10a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a10d	obj/kernel.asm	/^c010a10d:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a110	obj/kernel.asm	/^c010a110:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010a117	obj/kernel.asm	/^c010a117:	29 c2                	sub    %eax,%edx$/;"	l
c010a119	obj/kernel.asm	/^c010a119:	89 d0                	mov    %edx,%eax$/;"	l
c010a11b	obj/kernel.asm	/^c010a11b:	01 45 f4             	add    %eax,-0xc(%ebp)$/;"	l
c010a11e	obj/kernel.asm	/^c010a11e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a121	obj/kernel.asm	/^c010a121:	8b 00                	mov    (%eax),%eax$/;"	l
c010a123	obj/kernel.asm	/^c010a123:	85 c0                	test   %eax,%eax$/;"	l
c010a125	obj/kernel.asm	/^c010a125:	75 02                	jne    c010a129 <fd_array_alloc+0x76>$/;"	l
c010a127	obj/kernel.asm	/^c010a127:	eb 0e                	jmp    c010a137 <fd_array_alloc+0x84>$/;"	l
c010a129	obj/kernel.asm	/^c010a129:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax$/;"	l
c010a12e	obj/kernel.asm	/^c010a12e:	eb 4f                	jmp    c010a17f <fd_array_alloc+0xcc>$/;"	l
c010a130	obj/kernel.asm	/^c010a130:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a135	obj/kernel.asm	/^c010a135:	eb 48                	jmp    c010a17f <fd_array_alloc+0xcc>$/;"	l
c010a137	obj/kernel.asm	/^c010a137:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a13a	obj/kernel.asm	/^c010a13a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a13d	obj/kernel.asm	/^c010a13d:	e8 a6 fe ff ff       	call   c0109fe8 <fopen_count>$/;"	l
c010a142	obj/kernel.asm	/^c010a142:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a145	obj/kernel.asm	/^c010a145:	85 c0                	test   %eax,%eax$/;"	l
c010a147	obj/kernel.asm	/^c010a147:	74 16                	je     c010a15f <fd_array_alloc+0xac>$/;"	l
c010a149	obj/kernel.asm	/^c010a149:	68 22 65 11 c0       	push   $0xc0116522$/;"	l
c010a14e	obj/kernel.asm	/^c010a14e:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010a153	obj/kernel.asm	/^c010a153:	6a 3b                	push   $0x3b$/;"	l
c010a155	obj/kernel.asm	/^c010a155:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010a15a	obj/kernel.asm	/^c010a15a:	e8 70 63 ff ff       	call   c01004cf <__panic>$/;"	l
c010a15f	obj/kernel.asm	/^c010a15f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a162	obj/kernel.asm	/^c010a162:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010a168	obj/kernel.asm	/^c010a168:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a16b	obj/kernel.asm	/^c010a16b:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c010a172	obj/kernel.asm	/^c010a172:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a175	obj/kernel.asm	/^c010a175:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a178	obj/kernel.asm	/^c010a178:	89 10                	mov    %edx,(%eax)$/;"	l
c010a17a	obj/kernel.asm	/^c010a17a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a17f	obj/kernel.asm	/^c010a17f:	c9                   	leave  $/;"	l
c010a180	obj/kernel.asm	/^c010a180:	c3                   	ret    $/;"	l
c010a181	obj/kernel.asm	/^c010a181 <fd_array_free>:$/;"	l
c010a181	obj/kernel.asm	/^c010a181:	55                   	push   %ebp$/;"	l
c010a182	obj/kernel.asm	/^c010a182:	89 e5                	mov    %esp,%ebp$/;"	l
c010a184	obj/kernel.asm	/^c010a184:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a187	obj/kernel.asm	/^c010a187:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a18a	obj/kernel.asm	/^c010a18a:	8b 00                	mov    (%eax),%eax$/;"	l
c010a18c	obj/kernel.asm	/^c010a18c:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a18f	obj/kernel.asm	/^c010a18f:	74 20                	je     c010a1b1 <fd_array_free+0x30>$/;"	l
c010a191	obj/kernel.asm	/^c010a191:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a194	obj/kernel.asm	/^c010a194:	8b 00                	mov    (%eax),%eax$/;"	l
c010a196	obj/kernel.asm	/^c010a196:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a199	obj/kernel.asm	/^c010a199:	74 16                	je     c010a1b1 <fd_array_free+0x30>$/;"	l
c010a19b	obj/kernel.asm	/^c010a19b:	68 3c 65 11 c0       	push   $0xc011653c$/;"	l
c010a1a0	obj/kernel.asm	/^c010a1a0:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010a1a5	obj/kernel.asm	/^c010a1a5:	6a 44                	push   $0x44$/;"	l
c010a1a7	obj/kernel.asm	/^c010a1a7:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010a1ac	obj/kernel.asm	/^c010a1ac:	e8 1e 63 ff ff       	call   c01004cf <__panic>$/;"	l
c010a1b1	obj/kernel.asm	/^c010a1b1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a1b4	obj/kernel.asm	/^c010a1b4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a1b7	obj/kernel.asm	/^c010a1b7:	e8 2c fe ff ff       	call   c0109fe8 <fopen_count>$/;"	l
c010a1bc	obj/kernel.asm	/^c010a1bc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a1bf	obj/kernel.asm	/^c010a1bf:	85 c0                	test   %eax,%eax$/;"	l
c010a1c1	obj/kernel.asm	/^c010a1c1:	74 16                	je     c010a1d9 <fd_array_free+0x58>$/;"	l
c010a1c3	obj/kernel.asm	/^c010a1c3:	68 22 65 11 c0       	push   $0xc0116522$/;"	l
c010a1c8	obj/kernel.asm	/^c010a1c8:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010a1cd	obj/kernel.asm	/^c010a1cd:	6a 45                	push   $0x45$/;"	l
c010a1cf	obj/kernel.asm	/^c010a1cf:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010a1d4	obj/kernel.asm	/^c010a1d4:	e8 f6 62 ff ff       	call   c01004cf <__panic>$/;"	l
c010a1d9	obj/kernel.asm	/^c010a1d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a1dc	obj/kernel.asm	/^c010a1dc:	8b 00                	mov    (%eax),%eax$/;"	l
c010a1de	obj/kernel.asm	/^c010a1de:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a1e1	obj/kernel.asm	/^c010a1e1:	75 12                	jne    c010a1f5 <fd_array_free+0x74>$/;"	l
c010a1e3	obj/kernel.asm	/^c010a1e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a1e6	obj/kernel.asm	/^c010a1e6:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a1e9	obj/kernel.asm	/^c010a1e9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a1ec	obj/kernel.asm	/^c010a1ec:	50                   	push   %eax$/;"	l
c010a1ed	obj/kernel.asm	/^c010a1ed:	e8 1f 54 00 00       	call   c010f611 <vfs_close>$/;"	l
c010a1f2	obj/kernel.asm	/^c010a1f2:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a1f5	obj/kernel.asm	/^c010a1f5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a1f8	obj/kernel.asm	/^c010a1f8:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010a1fe	obj/kernel.asm	/^c010a1fe:	c9                   	leave  $/;"	l
c010a1ff	obj/kernel.asm	/^c010a1ff:	c3                   	ret    $/;"	l
c010a200	obj/kernel.asm	/^c010a200 <fd_array_acquire>:$/;"	l
c010a200	obj/kernel.asm	/^c010a200:	55                   	push   %ebp$/;"	l
c010a201	obj/kernel.asm	/^c010a201:	89 e5                	mov    %esp,%ebp$/;"	l
c010a203	obj/kernel.asm	/^c010a203:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a206	obj/kernel.asm	/^c010a206:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a209	obj/kernel.asm	/^c010a209:	8b 00                	mov    (%eax),%eax$/;"	l
c010a20b	obj/kernel.asm	/^c010a20b:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a20e	obj/kernel.asm	/^c010a20e:	74 16                	je     c010a226 <fd_array_acquire+0x26>$/;"	l
c010a210	obj/kernel.asm	/^c010a210:	68 71 65 11 c0       	push   $0xc0116571$/;"	l
c010a215	obj/kernel.asm	/^c010a215:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010a21a	obj/kernel.asm	/^c010a21a:	6a 4e                	push   $0x4e$/;"	l
c010a21c	obj/kernel.asm	/^c010a21c:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010a221	obj/kernel.asm	/^c010a221:	e8 a9 62 ff ff       	call   c01004cf <__panic>$/;"	l
c010a226	obj/kernel.asm	/^c010a226:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a229	obj/kernel.asm	/^c010a229:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a22c	obj/kernel.asm	/^c010a22c:	e8 c2 fd ff ff       	call   c0109ff3 <fopen_count_inc>$/;"	l
c010a231	obj/kernel.asm	/^c010a231:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a234	obj/kernel.asm	/^c010a234:	c9                   	leave  $/;"	l
c010a235	obj/kernel.asm	/^c010a235:	c3                   	ret    $/;"	l
c010a236	obj/kernel.asm	/^c010a236 <fd_array_release>:$/;"	l
c010a236	obj/kernel.asm	/^c010a236:	55                   	push   %ebp$/;"	l
c010a237	obj/kernel.asm	/^c010a237:	89 e5                	mov    %esp,%ebp$/;"	l
c010a239	obj/kernel.asm	/^c010a239:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a23c	obj/kernel.asm	/^c010a23c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a23f	obj/kernel.asm	/^c010a23f:	8b 00                	mov    (%eax),%eax$/;"	l
c010a241	obj/kernel.asm	/^c010a241:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a244	obj/kernel.asm	/^c010a244:	74 20                	je     c010a266 <fd_array_release+0x30>$/;"	l
c010a246	obj/kernel.asm	/^c010a246:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a249	obj/kernel.asm	/^c010a249:	8b 00                	mov    (%eax),%eax$/;"	l
c010a24b	obj/kernel.asm	/^c010a24b:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010a24e	obj/kernel.asm	/^c010a24e:	74 16                	je     c010a266 <fd_array_release+0x30>$/;"	l
c010a250	obj/kernel.asm	/^c010a250:	68 8c 65 11 c0       	push   $0xc011658c$/;"	l
c010a255	obj/kernel.asm	/^c010a255:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010a25a	obj/kernel.asm	/^c010a25a:	6a 55                	push   $0x55$/;"	l
c010a25c	obj/kernel.asm	/^c010a25c:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010a261	obj/kernel.asm	/^c010a261:	e8 69 62 ff ff       	call   c01004cf <__panic>$/;"	l
c010a266	obj/kernel.asm	/^c010a266:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a269	obj/kernel.asm	/^c010a269:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a26c	obj/kernel.asm	/^c010a26c:	e8 77 fd ff ff       	call   c0109fe8 <fopen_count>$/;"	l
c010a271	obj/kernel.asm	/^c010a271:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a274	obj/kernel.asm	/^c010a274:	85 c0                	test   %eax,%eax$/;"	l
c010a276	obj/kernel.asm	/^c010a276:	7f 16                	jg     c010a28e <fd_array_release+0x58>$/;"	l
c010a278	obj/kernel.asm	/^c010a278:	68 c3 65 11 c0       	push   $0xc01165c3$/;"	l
c010a27d	obj/kernel.asm	/^c010a27d:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010a282	obj/kernel.asm	/^c010a282:	6a 56                	push   $0x56$/;"	l
c010a284	obj/kernel.asm	/^c010a284:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010a289	obj/kernel.asm	/^c010a289:	e8 41 62 ff ff       	call   c01004cf <__panic>$/;"	l
c010a28e	obj/kernel.asm	/^c010a28e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a291	obj/kernel.asm	/^c010a291:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a294	obj/kernel.asm	/^c010a294:	e8 74 fd ff ff       	call   c010a00d <fopen_count_dec>$/;"	l
c010a299	obj/kernel.asm	/^c010a299:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a29c	obj/kernel.asm	/^c010a29c:	85 c0                	test   %eax,%eax$/;"	l
c010a29e	obj/kernel.asm	/^c010a29e:	75 0e                	jne    c010a2ae <fd_array_release+0x78>$/;"	l
c010a2a0	obj/kernel.asm	/^c010a2a0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a2a3	obj/kernel.asm	/^c010a2a3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a2a6	obj/kernel.asm	/^c010a2a6:	e8 d6 fe ff ff       	call   c010a181 <fd_array_free>$/;"	l
c010a2ab	obj/kernel.asm	/^c010a2ab:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a2ae	obj/kernel.asm	/^c010a2ae:	c9                   	leave  $/;"	l
c010a2af	obj/kernel.asm	/^c010a2af:	c3                   	ret    $/;"	l
c010a2b0	obj/kernel.asm	/^c010a2b0 <fd_array_open>:$/;"	l
c010a2b0	obj/kernel.asm	/^c010a2b0:	55                   	push   %ebp$/;"	l
c010a2b1	obj/kernel.asm	/^c010a2b1:	89 e5                	mov    %esp,%ebp$/;"	l
c010a2b3	obj/kernel.asm	/^c010a2b3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a2b6	obj/kernel.asm	/^c010a2b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a2b9	obj/kernel.asm	/^c010a2b9:	8b 00                	mov    (%eax),%eax$/;"	l
c010a2bb	obj/kernel.asm	/^c010a2bb:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a2be	obj/kernel.asm	/^c010a2be:	75 0a                	jne    c010a2ca <fd_array_open+0x1a>$/;"	l
c010a2c0	obj/kernel.asm	/^c010a2c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a2c3	obj/kernel.asm	/^c010a2c3:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a2c6	obj/kernel.asm	/^c010a2c6:	85 c0                	test   %eax,%eax$/;"	l
c010a2c8	obj/kernel.asm	/^c010a2c8:	75 16                	jne    c010a2e0 <fd_array_open+0x30>$/;"	l
c010a2ca	obj/kernel.asm	/^c010a2ca:	68 dc 65 11 c0       	push   $0xc01165dc$/;"	l
c010a2cf	obj/kernel.asm	/^c010a2cf:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010a2d4	obj/kernel.asm	/^c010a2d4:	6a 5f                	push   $0x5f$/;"	l
c010a2d6	obj/kernel.asm	/^c010a2d6:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010a2db	obj/kernel.asm	/^c010a2db:	e8 ef 61 ff ff       	call   c01004cf <__panic>$/;"	l
c010a2e0	obj/kernel.asm	/^c010a2e0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a2e3	obj/kernel.asm	/^c010a2e3:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010a2e9	obj/kernel.asm	/^c010a2e9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a2ec	obj/kernel.asm	/^c010a2ec:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a2ef	obj/kernel.asm	/^c010a2ef:	e8 ff fc ff ff       	call   c0109ff3 <fopen_count_inc>$/;"	l
c010a2f4	obj/kernel.asm	/^c010a2f4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a2f7	obj/kernel.asm	/^c010a2f7:	c9                   	leave  $/;"	l
c010a2f8	obj/kernel.asm	/^c010a2f8:	c3                   	ret    $/;"	l
c010a2f9	obj/kernel.asm	/^c010a2f9 <fd_array_close>:$/;"	l
c010a2f9	obj/kernel.asm	/^c010a2f9:	55                   	push   %ebp$/;"	l
c010a2fa	obj/kernel.asm	/^c010a2fa:	89 e5                	mov    %esp,%ebp$/;"	l
c010a2fc	obj/kernel.asm	/^c010a2fc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a2ff	obj/kernel.asm	/^c010a2ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a302	obj/kernel.asm	/^c010a302:	8b 00                	mov    (%eax),%eax$/;"	l
c010a304	obj/kernel.asm	/^c010a304:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a307	obj/kernel.asm	/^c010a307:	74 16                	je     c010a31f <fd_array_close+0x26>$/;"	l
c010a309	obj/kernel.asm	/^c010a309:	68 71 65 11 c0       	push   $0xc0116571$/;"	l
c010a30e	obj/kernel.asm	/^c010a30e:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010a313	obj/kernel.asm	/^c010a313:	6a 67                	push   $0x67$/;"	l
c010a315	obj/kernel.asm	/^c010a315:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010a31a	obj/kernel.asm	/^c010a31a:	e8 b0 61 ff ff       	call   c01004cf <__panic>$/;"	l
c010a31f	obj/kernel.asm	/^c010a31f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a322	obj/kernel.asm	/^c010a322:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a325	obj/kernel.asm	/^c010a325:	e8 be fc ff ff       	call   c0109fe8 <fopen_count>$/;"	l
c010a32a	obj/kernel.asm	/^c010a32a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a32d	obj/kernel.asm	/^c010a32d:	85 c0                	test   %eax,%eax$/;"	l
c010a32f	obj/kernel.asm	/^c010a32f:	7f 16                	jg     c010a347 <fd_array_close+0x4e>$/;"	l
c010a331	obj/kernel.asm	/^c010a331:	68 c3 65 11 c0       	push   $0xc01165c3$/;"	l
c010a336	obj/kernel.asm	/^c010a336:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010a33b	obj/kernel.asm	/^c010a33b:	6a 68                	push   $0x68$/;"	l
c010a33d	obj/kernel.asm	/^c010a33d:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010a342	obj/kernel.asm	/^c010a342:	e8 88 61 ff ff       	call   c01004cf <__panic>$/;"	l
c010a347	obj/kernel.asm	/^c010a347:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a34a	obj/kernel.asm	/^c010a34a:	c7 00 03 00 00 00    	movl   $0x3,(%eax)$/;"	l
c010a350	obj/kernel.asm	/^c010a350:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a353	obj/kernel.asm	/^c010a353:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a356	obj/kernel.asm	/^c010a356:	e8 b2 fc ff ff       	call   c010a00d <fopen_count_dec>$/;"	l
c010a35b	obj/kernel.asm	/^c010a35b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a35e	obj/kernel.asm	/^c010a35e:	85 c0                	test   %eax,%eax$/;"	l
c010a360	obj/kernel.asm	/^c010a360:	75 0e                	jne    c010a370 <fd_array_close+0x77>$/;"	l
c010a362	obj/kernel.asm	/^c010a362:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a365	obj/kernel.asm	/^c010a365:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a368	obj/kernel.asm	/^c010a368:	e8 14 fe ff ff       	call   c010a181 <fd_array_free>$/;"	l
c010a36d	obj/kernel.asm	/^c010a36d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a370	obj/kernel.asm	/^c010a370:	c9                   	leave  $/;"	l
c010a371	obj/kernel.asm	/^c010a371:	c3                   	ret    $/;"	l
c010a372	obj/kernel.asm	/^c010a372 <fd_array_dup>:$/;"	l
c010a372	obj/kernel.asm	/^c010a372:	55                   	push   %ebp$/;"	l
c010a373	obj/kernel.asm	/^c010a373:	89 e5                	mov    %esp,%ebp$/;"	l
c010a375	obj/kernel.asm	/^c010a375:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a378	obj/kernel.asm	/^c010a378:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a37b	obj/kernel.asm	/^c010a37b:	8b 00                	mov    (%eax),%eax$/;"	l
c010a37d	obj/kernel.asm	/^c010a37d:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a380	obj/kernel.asm	/^c010a380:	75 0a                	jne    c010a38c <fd_array_dup+0x1a>$/;"	l
c010a382	obj/kernel.asm	/^c010a382:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a385	obj/kernel.asm	/^c010a385:	8b 00                	mov    (%eax),%eax$/;"	l
c010a387	obj/kernel.asm	/^c010a387:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a38a	obj/kernel.asm	/^c010a38a:	74 16                	je     c010a3a2 <fd_array_dup+0x30>$/;"	l
c010a38c	obj/kernel.asm	/^c010a38c:	68 0c 66 11 c0       	push   $0xc011660c$/;"	l
c010a391	obj/kernel.asm	/^c010a391:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010a396	obj/kernel.asm	/^c010a396:	6a 73                	push   $0x73$/;"	l
c010a398	obj/kernel.asm	/^c010a398:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010a39d	obj/kernel.asm	/^c010a39d:	e8 2d 61 ff ff       	call   c01004cf <__panic>$/;"	l
c010a3a2	obj/kernel.asm	/^c010a3a2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a3a5	obj/kernel.asm	/^c010a3a5:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010a3a8	obj/kernel.asm	/^c010a3a8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3ab	obj/kernel.asm	/^c010a3ab:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010a3ae	obj/kernel.asm	/^c010a3ae:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a3b1	obj/kernel.asm	/^c010a3b1:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010a3b4	obj/kernel.asm	/^c010a3b4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3b7	obj/kernel.asm	/^c010a3b7:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a3ba	obj/kernel.asm	/^c010a3ba:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a3bd	obj/kernel.asm	/^c010a3bd:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010a3c0	obj/kernel.asm	/^c010a3c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3c3	obj/kernel.asm	/^c010a3c3:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010a3c6	obj/kernel.asm	/^c010a3c6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a3c9	obj/kernel.asm	/^c010a3c9:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a3cc	obj/kernel.asm	/^c010a3cc:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a3cf	obj/kernel.asm	/^c010a3cf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a3d2	obj/kernel.asm	/^c010a3d2:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a3d5	obj/kernel.asm	/^c010a3d5:	e8 eb 4c 00 00       	call   c010f0c5 <inode_ref_inc>$/;"	l
c010a3da	obj/kernel.asm	/^c010a3da:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a3dd	obj/kernel.asm	/^c010a3dd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a3e0	obj/kernel.asm	/^c010a3e0:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010a3e3	obj/kernel.asm	/^c010a3e3:	e8 cb 4d 00 00       	call   c010f1b3 <inode_open_inc>$/;"	l
c010a3e8	obj/kernel.asm	/^c010a3e8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a3eb	obj/kernel.asm	/^c010a3eb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a3ee	obj/kernel.asm	/^c010a3ee:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a3f1	obj/kernel.asm	/^c010a3f1:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010a3f4	obj/kernel.asm	/^c010a3f4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a3f7	obj/kernel.asm	/^c010a3f7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a3fa	obj/kernel.asm	/^c010a3fa:	e8 b1 fe ff ff       	call   c010a2b0 <fd_array_open>$/;"	l
c010a3ff	obj/kernel.asm	/^c010a3ff:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a402	obj/kernel.asm	/^c010a402:	c9                   	leave  $/;"	l
c010a403	obj/kernel.asm	/^c010a403:	c3                   	ret    $/;"	l
c010a404	obj/kernel.asm	/^c010a404 <fd2file>:$/;"	l
c010a404	obj/kernel.asm	/^c010a404:	55                   	push   %ebp$/;"	l
c010a405	obj/kernel.asm	/^c010a405:	89 e5                	mov    %esp,%ebp$/;"	l
c010a407	obj/kernel.asm	/^c010a407:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a40a	obj/kernel.asm	/^c010a40a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010a40e	obj/kernel.asm	/^c010a40e:	78 4b                	js     c010a45b <fd2file+0x57>$/;"	l
c010a410	obj/kernel.asm	/^c010a410:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a413	obj/kernel.asm	/^c010a413:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010a418	obj/kernel.asm	/^c010a418:	77 41                	ja     c010a45b <fd2file+0x57>$/;"	l
c010a41a	obj/kernel.asm	/^c010a41a:	e8 08 fc ff ff       	call   c010a027 <get_fd_array>$/;"	l
c010a41f	obj/kernel.asm	/^c010a41f:	89 c1                	mov    %eax,%ecx$/;"	l
c010a421	obj/kernel.asm	/^c010a421:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010a424	obj/kernel.asm	/^c010a424:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010a427	obj/kernel.asm	/^c010a427:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c010a42e	obj/kernel.asm	/^c010a42e:	29 c2                	sub    %eax,%edx$/;"	l
c010a430	obj/kernel.asm	/^c010a430:	89 d0                	mov    %edx,%eax$/;"	l
c010a432	obj/kernel.asm	/^c010a432:	01 c8                	add    %ecx,%eax$/;"	l
c010a434	obj/kernel.asm	/^c010a434:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a437	obj/kernel.asm	/^c010a437:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a43a	obj/kernel.asm	/^c010a43a:	8b 00                	mov    (%eax),%eax$/;"	l
c010a43c	obj/kernel.asm	/^c010a43c:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a43f	obj/kernel.asm	/^c010a43f:	75 1a                	jne    c010a45b <fd2file+0x57>$/;"	l
c010a441	obj/kernel.asm	/^c010a441:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a444	obj/kernel.asm	/^c010a444:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a447	obj/kernel.asm	/^c010a447:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010a44a	obj/kernel.asm	/^c010a44a:	75 0f                	jne    c010a45b <fd2file+0x57>$/;"	l
c010a44c	obj/kernel.asm	/^c010a44c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a44f	obj/kernel.asm	/^c010a44f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a452	obj/kernel.asm	/^c010a452:	89 10                	mov    %edx,(%eax)$/;"	l
c010a454	obj/kernel.asm	/^c010a454:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a459	obj/kernel.asm	/^c010a459:	eb 05                	jmp    c010a460 <fd2file+0x5c>$/;"	l
c010a45b	obj/kernel.asm	/^c010a45b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a460	obj/kernel.asm	/^c010a460:	c9                   	leave  $/;"	l
c010a461	obj/kernel.asm	/^c010a461:	c3                   	ret    $/;"	l
c010a462	obj/kernel.asm	/^c010a462 <file_testfd>:$/;"	l
c010a462	obj/kernel.asm	/^c010a462:	55                   	push   %ebp$/;"	l
c010a463	obj/kernel.asm	/^c010a463:	89 e5                	mov    %esp,%ebp$/;"	l
c010a465	obj/kernel.asm	/^c010a465:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a468	obj/kernel.asm	/^c010a468:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a46b	obj/kernel.asm	/^c010a46b:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010a46e	obj/kernel.asm	/^c010a46e:	50                   	push   %eax$/;"	l
c010a46f	obj/kernel.asm	/^c010a46f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a472	obj/kernel.asm	/^c010a472:	e8 8d ff ff ff       	call   c010a404 <fd2file>$/;"	l
c010a477	obj/kernel.asm	/^c010a477:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a47a	obj/kernel.asm	/^c010a47a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a47d	obj/kernel.asm	/^c010a47d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a481	obj/kernel.asm	/^c010a481:	74 07                	je     c010a48a <file_testfd+0x28>$/;"	l
c010a483	obj/kernel.asm	/^c010a483:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a488	obj/kernel.asm	/^c010a488:	eb 33                	jmp    c010a4bd <file_testfd+0x5b>$/;"	l
c010a48a	obj/kernel.asm	/^c010a48a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010a48e	obj/kernel.asm	/^c010a48e:	74 11                	je     c010a4a1 <file_testfd+0x3f>$/;"	l
c010a490	obj/kernel.asm	/^c010a490:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a493	obj/kernel.asm	/^c010a493:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a496	obj/kernel.asm	/^c010a496:	85 c0                	test   %eax,%eax$/;"	l
c010a498	obj/kernel.asm	/^c010a498:	75 07                	jne    c010a4a1 <file_testfd+0x3f>$/;"	l
c010a49a	obj/kernel.asm	/^c010a49a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a49f	obj/kernel.asm	/^c010a49f:	eb 1c                	jmp    c010a4bd <file_testfd+0x5b>$/;"	l
c010a4a1	obj/kernel.asm	/^c010a4a1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010a4a5	obj/kernel.asm	/^c010a4a5:	74 11                	je     c010a4b8 <file_testfd+0x56>$/;"	l
c010a4a7	obj/kernel.asm	/^c010a4a7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a4aa	obj/kernel.asm	/^c010a4aa:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a4ad	obj/kernel.asm	/^c010a4ad:	85 c0                	test   %eax,%eax$/;"	l
c010a4af	obj/kernel.asm	/^c010a4af:	75 07                	jne    c010a4b8 <file_testfd+0x56>$/;"	l
c010a4b1	obj/kernel.asm	/^c010a4b1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a4b6	obj/kernel.asm	/^c010a4b6:	eb 05                	jmp    c010a4bd <file_testfd+0x5b>$/;"	l
c010a4b8	obj/kernel.asm	/^c010a4b8:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010a4bd	obj/kernel.asm	/^c010a4bd:	c9                   	leave  $/;"	l
c010a4be	obj/kernel.asm	/^c010a4be:	c3                   	ret    $/;"	l
c010a4bf	obj/kernel.asm	/^c010a4bf <file_open>:$/;"	l
c010a4bf	obj/kernel.asm	/^c010a4bf:	55                   	push   %ebp$/;"	l
c010a4c0	obj/kernel.asm	/^c010a4c0:	89 e5                	mov    %esp,%ebp$/;"	l
c010a4c2	obj/kernel.asm	/^c010a4c2:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010a4c5	obj/kernel.asm	/^c010a4c5:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010a4cc	obj/kernel.asm	/^c010a4cc:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010a4d3	obj/kernel.asm	/^c010a4d3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a4d6	obj/kernel.asm	/^c010a4d6:	83 e0 03             	and    $0x3,%eax$/;"	l
c010a4d9	obj/kernel.asm	/^c010a4d9:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a4dc	obj/kernel.asm	/^c010a4dc:	74 15                	je     c010a4f3 <file_open+0x34>$/;"	l
c010a4de	obj/kernel.asm	/^c010a4de:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a4e1	obj/kernel.asm	/^c010a4e1:	72 07                	jb     c010a4ea <file_open+0x2b>$/;"	l
c010a4e3	obj/kernel.asm	/^c010a4e3:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a4e6	obj/kernel.asm	/^c010a4e6:	74 14                	je     c010a4fc <file_open+0x3d>$/;"	l
c010a4e8	obj/kernel.asm	/^c010a4e8:	eb 21                	jmp    c010a50b <file_open+0x4c>$/;"	l
c010a4ea	obj/kernel.asm	/^c010a4ea:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010a4f1	obj/kernel.asm	/^c010a4f1:	eb 22                	jmp    c010a515 <file_open+0x56>$/;"	l
c010a4f3	obj/kernel.asm	/^c010a4f3:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010a4fa	obj/kernel.asm	/^c010a4fa:	eb 19                	jmp    c010a515 <file_open+0x56>$/;"	l
c010a4fc	obj/kernel.asm	/^c010a4fc:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010a503	obj/kernel.asm	/^c010a503:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a506	obj/kernel.asm	/^c010a506:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a509	obj/kernel.asm	/^c010a509:	eb 0a                	jmp    c010a515 <file_open+0x56>$/;"	l
c010a50b	obj/kernel.asm	/^c010a50b:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a510	obj/kernel.asm	/^c010a510:	e9 47 01 00 00       	jmp    c010a65c <file_open+0x19d>$/;"	l
c010a515	obj/kernel.asm	/^c010a515:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a518	obj/kernel.asm	/^c010a518:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c010a51b	obj/kernel.asm	/^c010a51b:	50                   	push   %eax$/;"	l
c010a51c	obj/kernel.asm	/^c010a51c:	68 d9 6a ff ff       	push   $0xffff6ad9$/;"	l
c010a521	obj/kernel.asm	/^c010a521:	e8 8d fb ff ff       	call   c010a0b3 <fd_array_alloc>$/;"	l
c010a526	obj/kernel.asm	/^c010a526:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a529	obj/kernel.asm	/^c010a529:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a52c	obj/kernel.asm	/^c010a52c:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a530	obj/kernel.asm	/^c010a530:	74 08                	je     c010a53a <file_open+0x7b>$/;"	l
c010a532	obj/kernel.asm	/^c010a532:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a535	obj/kernel.asm	/^c010a535:	e9 22 01 00 00       	jmp    c010a65c <file_open+0x19d>$/;"	l
c010a53a	obj/kernel.asm	/^c010a53a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010a53d	obj/kernel.asm	/^c010a53d:	8d 45 dc             	lea    -0x24(%ebp),%eax$/;"	l
c010a540	obj/kernel.asm	/^c010a540:	50                   	push   %eax$/;"	l
c010a541	obj/kernel.asm	/^c010a541:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010a544	obj/kernel.asm	/^c010a544:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a547	obj/kernel.asm	/^c010a547:	e8 0c 4e 00 00       	call   c010f358 <vfs_open>$/;"	l
c010a54c	obj/kernel.asm	/^c010a54c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a54f	obj/kernel.asm	/^c010a54f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a552	obj/kernel.asm	/^c010a552:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a556	obj/kernel.asm	/^c010a556:	74 17                	je     c010a56f <file_open+0xb0>$/;"	l
c010a558	obj/kernel.asm	/^c010a558:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a55b	obj/kernel.asm	/^c010a55b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a55e	obj/kernel.asm	/^c010a55e:	50                   	push   %eax$/;"	l
c010a55f	obj/kernel.asm	/^c010a55f:	e8 1d fc ff ff       	call   c010a181 <fd_array_free>$/;"	l
c010a564	obj/kernel.asm	/^c010a564:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a567	obj/kernel.asm	/^c010a567:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a56a	obj/kernel.asm	/^c010a56a:	e9 ed 00 00 00       	jmp    c010a65c <file_open+0x19d>$/;"	l
c010a56f	obj/kernel.asm	/^c010a56f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a572	obj/kernel.asm	/^c010a572:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010a579	obj/kernel.asm	/^c010a579:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a57c	obj/kernel.asm	/^c010a57c:	83 e0 20             	and    $0x20,%eax$/;"	l
c010a57f	obj/kernel.asm	/^c010a57f:	85 c0                	test   %eax,%eax$/;"	l
c010a581	obj/kernel.asm	/^c010a581:	0f 84 a5 00 00 00    	je     c010a62c <file_open+0x16d>$/;"	l
c010a587	obj/kernel.asm	/^c010a587:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c010a58a	obj/kernel.asm	/^c010a58a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a58d	obj/kernel.asm	/^c010a58d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a590	obj/kernel.asm	/^c010a590:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010a593	obj/kernel.asm	/^c010a593:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010a597	obj/kernel.asm	/^c010a597:	74 17                	je     c010a5b0 <file_open+0xf1>$/;"	l
c010a599	obj/kernel.asm	/^c010a599:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a59c	obj/kernel.asm	/^c010a59c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a59f	obj/kernel.asm	/^c010a59f:	85 c0                	test   %eax,%eax$/;"	l
c010a5a1	obj/kernel.asm	/^c010a5a1:	74 0d                	je     c010a5b0 <file_open+0xf1>$/;"	l
c010a5a3	obj/kernel.asm	/^c010a5a3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a5a6	obj/kernel.asm	/^c010a5a6:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a5a9	obj/kernel.asm	/^c010a5a9:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a5ac	obj/kernel.asm	/^c010a5ac:	85 c0                	test   %eax,%eax$/;"	l
c010a5ae	obj/kernel.asm	/^c010a5ae:	75 19                	jne    c010a5c9 <file_open+0x10a>$/;"	l
c010a5b0	obj/kernel.asm	/^c010a5b0:	68 40 66 11 c0       	push   $0xc0116640$/;"	l
c010a5b5	obj/kernel.asm	/^c010a5b5:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010a5ba	obj/kernel.asm	/^c010a5ba:	68 b8 00 00 00       	push   $0xb8$/;"	l
c010a5bf	obj/kernel.asm	/^c010a5bf:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010a5c4	obj/kernel.asm	/^c010a5c4:	e8 06 5f ff ff       	call   c01004cf <__panic>$/;"	l
c010a5c9	obj/kernel.asm	/^c010a5c9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a5cc	obj/kernel.asm	/^c010a5cc:	68 8e 66 11 c0       	push   $0xc011668e$/;"	l
c010a5d1	obj/kernel.asm	/^c010a5d1:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c010a5d4	obj/kernel.asm	/^c010a5d4:	e8 be 4c 00 00       	call   c010f297 <inode_check>$/;"	l
c010a5d9	obj/kernel.asm	/^c010a5d9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a5dc	obj/kernel.asm	/^c010a5dc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a5df	obj/kernel.asm	/^c010a5df:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a5e2	obj/kernel.asm	/^c010a5e2:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a5e5	obj/kernel.asm	/^c010a5e5:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010a5e8	obj/kernel.asm	/^c010a5e8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a5eb	obj/kernel.asm	/^c010a5eb:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010a5ee	obj/kernel.asm	/^c010a5ee:	52                   	push   %edx$/;"	l
c010a5ef	obj/kernel.asm	/^c010a5ef:	ff d0                	call   *%eax$/;"	l
c010a5f1	obj/kernel.asm	/^c010a5f1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a5f4	obj/kernel.asm	/^c010a5f4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a5f7	obj/kernel.asm	/^c010a5f7:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a5fb	obj/kernel.asm	/^c010a5fb:	74 23                	je     c010a620 <file_open+0x161>$/;"	l
c010a5fd	obj/kernel.asm	/^c010a5fd:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010a600	obj/kernel.asm	/^c010a600:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a603	obj/kernel.asm	/^c010a603:	50                   	push   %eax$/;"	l
c010a604	obj/kernel.asm	/^c010a604:	e8 08 50 00 00       	call   c010f611 <vfs_close>$/;"	l
c010a609	obj/kernel.asm	/^c010a609:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a60c	obj/kernel.asm	/^c010a60c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a60f	obj/kernel.asm	/^c010a60f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a612	obj/kernel.asm	/^c010a612:	50                   	push   %eax$/;"	l
c010a613	obj/kernel.asm	/^c010a613:	e8 69 fb ff ff       	call   c010a181 <fd_array_free>$/;"	l
c010a618	obj/kernel.asm	/^c010a618:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a61b	obj/kernel.asm	/^c010a61b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a61e	obj/kernel.asm	/^c010a61e:	eb 3c                	jmp    c010a65c <file_open+0x19d>$/;"	l
c010a620	obj/kernel.asm	/^c010a620:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a623	obj/kernel.asm	/^c010a623:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010a626	obj/kernel.asm	/^c010a626:	8b 52 0c             	mov    0xc(%edx),%edx$/;"	l
c010a629	obj/kernel.asm	/^c010a629:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010a62c	obj/kernel.asm	/^c010a62c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a62f	obj/kernel.asm	/^c010a62f:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010a632	obj/kernel.asm	/^c010a632:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010a635	obj/kernel.asm	/^c010a635:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a638	obj/kernel.asm	/^c010a638:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010a63b	obj/kernel.asm	/^c010a63b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010a63e	obj/kernel.asm	/^c010a63e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a641	obj/kernel.asm	/^c010a641:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010a644	obj/kernel.asm	/^c010a644:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010a647	obj/kernel.asm	/^c010a647:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a64a	obj/kernel.asm	/^c010a64a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a64d	obj/kernel.asm	/^c010a64d:	50                   	push   %eax$/;"	l
c010a64e	obj/kernel.asm	/^c010a64e:	e8 5d fc ff ff       	call   c010a2b0 <fd_array_open>$/;"	l
c010a653	obj/kernel.asm	/^c010a653:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a656	obj/kernel.asm	/^c010a656:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010a659	obj/kernel.asm	/^c010a659:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a65c	obj/kernel.asm	/^c010a65c:	c9                   	leave  $/;"	l
c010a65d	obj/kernel.asm	/^c010a65d:	c3                   	ret    $/;"	l
c010a65e	obj/kernel.asm	/^c010a65e <file_close>:$/;"	l
c010a65e	obj/kernel.asm	/^c010a65e:	55                   	push   %ebp$/;"	l
c010a65f	obj/kernel.asm	/^c010a65f:	89 e5                	mov    %esp,%ebp$/;"	l
c010a661	obj/kernel.asm	/^c010a661:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010a664	obj/kernel.asm	/^c010a664:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a667	obj/kernel.asm	/^c010a667:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010a66a	obj/kernel.asm	/^c010a66a:	50                   	push   %eax$/;"	l
c010a66b	obj/kernel.asm	/^c010a66b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a66e	obj/kernel.asm	/^c010a66e:	e8 91 fd ff ff       	call   c010a404 <fd2file>$/;"	l
c010a673	obj/kernel.asm	/^c010a673:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a676	obj/kernel.asm	/^c010a676:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a679	obj/kernel.asm	/^c010a679:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a67d	obj/kernel.asm	/^c010a67d:	74 05                	je     c010a684 <file_close+0x26>$/;"	l
c010a67f	obj/kernel.asm	/^c010a67f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a682	obj/kernel.asm	/^c010a682:	eb 14                	jmp    c010a698 <file_close+0x3a>$/;"	l
c010a684	obj/kernel.asm	/^c010a684:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a687	obj/kernel.asm	/^c010a687:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a68a	obj/kernel.asm	/^c010a68a:	50                   	push   %eax$/;"	l
c010a68b	obj/kernel.asm	/^c010a68b:	e8 69 fc ff ff       	call   c010a2f9 <fd_array_close>$/;"	l
c010a690	obj/kernel.asm	/^c010a690:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a693	obj/kernel.asm	/^c010a693:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010a698	obj/kernel.asm	/^c010a698:	c9                   	leave  $/;"	l
c010a699	obj/kernel.asm	/^c010a699:	c3                   	ret    $/;"	l
c010a69a	obj/kernel.asm	/^c010a69a <file_read>:$/;"	l
c010a69a	obj/kernel.asm	/^c010a69a:	55                   	push   %ebp$/;"	l
c010a69b	obj/kernel.asm	/^c010a69b:	89 e5                	mov    %esp,%ebp$/;"	l
c010a69d	obj/kernel.asm	/^c010a69d:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010a6a0	obj/kernel.asm	/^c010a6a0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010a6a3	obj/kernel.asm	/^c010a6a3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010a6a9	obj/kernel.asm	/^c010a6a9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a6ac	obj/kernel.asm	/^c010a6ac:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c010a6af	obj/kernel.asm	/^c010a6af:	50                   	push   %eax$/;"	l
c010a6b0	obj/kernel.asm	/^c010a6b0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a6b3	obj/kernel.asm	/^c010a6b3:	e8 4c fd ff ff       	call   c010a404 <fd2file>$/;"	l
c010a6b8	obj/kernel.asm	/^c010a6b8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a6bb	obj/kernel.asm	/^c010a6bb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a6be	obj/kernel.asm	/^c010a6be:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a6c2	obj/kernel.asm	/^c010a6c2:	74 08                	je     c010a6cc <file_read+0x32>$/;"	l
c010a6c4	obj/kernel.asm	/^c010a6c4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a6c7	obj/kernel.asm	/^c010a6c7:	e9 f9 00 00 00       	jmp    c010a7c5 <file_read+0x12b>$/;"	l
c010a6cc	obj/kernel.asm	/^c010a6cc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a6cf	obj/kernel.asm	/^c010a6cf:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010a6d2	obj/kernel.asm	/^c010a6d2:	85 c0                	test   %eax,%eax$/;"	l
c010a6d4	obj/kernel.asm	/^c010a6d4:	75 0a                	jne    c010a6e0 <file_read+0x46>$/;"	l
c010a6d6	obj/kernel.asm	/^c010a6d6:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a6db	obj/kernel.asm	/^c010a6db:	e9 e5 00 00 00       	jmp    c010a7c5 <file_read+0x12b>$/;"	l
c010a6e0	obj/kernel.asm	/^c010a6e0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a6e3	obj/kernel.asm	/^c010a6e3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a6e6	obj/kernel.asm	/^c010a6e6:	50                   	push   %eax$/;"	l
c010a6e7	obj/kernel.asm	/^c010a6e7:	e8 14 fb ff ff       	call   c010a200 <fd_array_acquire>$/;"	l
c010a6ec	obj/kernel.asm	/^c010a6ec:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a6ef	obj/kernel.asm	/^c010a6ef:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a6f2	obj/kernel.asm	/^c010a6f2:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a6f5	obj/kernel.asm	/^c010a6f5:	50                   	push   %eax$/;"	l
c010a6f6	obj/kernel.asm	/^c010a6f6:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010a6f9	obj/kernel.asm	/^c010a6f9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010a6fc	obj/kernel.asm	/^c010a6fc:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010a6ff	obj/kernel.asm	/^c010a6ff:	50                   	push   %eax$/;"	l
c010a700	obj/kernel.asm	/^c010a700:	e8 59 06 00 00       	call   c010ad5e <iobuf_init>$/;"	l
c010a705	obj/kernel.asm	/^c010a705:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a708	obj/kernel.asm	/^c010a708:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a70b	obj/kernel.asm	/^c010a70b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a70e	obj/kernel.asm	/^c010a70e:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a711	obj/kernel.asm	/^c010a711:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a714	obj/kernel.asm	/^c010a714:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a718	obj/kernel.asm	/^c010a718:	74 17                	je     c010a731 <file_read+0x97>$/;"	l
c010a71a	obj/kernel.asm	/^c010a71a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a71d	obj/kernel.asm	/^c010a71d:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a720	obj/kernel.asm	/^c010a720:	85 c0                	test   %eax,%eax$/;"	l
c010a722	obj/kernel.asm	/^c010a722:	74 0d                	je     c010a731 <file_read+0x97>$/;"	l
c010a724	obj/kernel.asm	/^c010a724:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a727	obj/kernel.asm	/^c010a727:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a72a	obj/kernel.asm	/^c010a72a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a72d	obj/kernel.asm	/^c010a72d:	85 c0                	test   %eax,%eax$/;"	l
c010a72f	obj/kernel.asm	/^c010a72f:	75 19                	jne    c010a74a <file_read+0xb0>$/;"	l
c010a731	obj/kernel.asm	/^c010a731:	68 94 66 11 c0       	push   $0xc0116694$/;"	l
c010a736	obj/kernel.asm	/^c010a736:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010a73b	obj/kernel.asm	/^c010a73b:	68 e2 00 00 00       	push   $0xe2$/;"	l
c010a740	obj/kernel.asm	/^c010a740:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010a745	obj/kernel.asm	/^c010a745:	e8 85 5d ff ff       	call   c01004cf <__panic>$/;"	l
c010a74a	obj/kernel.asm	/^c010a74a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a74d	obj/kernel.asm	/^c010a74d:	68 e1 66 11 c0       	push   $0xc01166e1$/;"	l
c010a752	obj/kernel.asm	/^c010a752:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010a755	obj/kernel.asm	/^c010a755:	e8 3d 4b 00 00       	call   c010f297 <inode_check>$/;"	l
c010a75a	obj/kernel.asm	/^c010a75a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a75d	obj/kernel.asm	/^c010a75d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a760	obj/kernel.asm	/^c010a760:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a763	obj/kernel.asm	/^c010a763:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a766	obj/kernel.asm	/^c010a766:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010a769	obj/kernel.asm	/^c010a769:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010a76c	obj/kernel.asm	/^c010a76c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a76f	obj/kernel.asm	/^c010a76f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a772	obj/kernel.asm	/^c010a772:	52                   	push   %edx$/;"	l
c010a773	obj/kernel.asm	/^c010a773:	ff d0                	call   *%eax$/;"	l
c010a775	obj/kernel.asm	/^c010a775:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a778	obj/kernel.asm	/^c010a778:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a77b	obj/kernel.asm	/^c010a77b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a77e	obj/kernel.asm	/^c010a77e:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010a781	obj/kernel.asm	/^c010a781:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a784	obj/kernel.asm	/^c010a784:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a787	obj/kernel.asm	/^c010a787:	29 c2                	sub    %eax,%edx$/;"	l
c010a789	obj/kernel.asm	/^c010a789:	89 d0                	mov    %edx,%eax$/;"	l
c010a78b	obj/kernel.asm	/^c010a78b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a78e	obj/kernel.asm	/^c010a78e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a791	obj/kernel.asm	/^c010a791:	8b 00                	mov    (%eax),%eax$/;"	l
c010a793	obj/kernel.asm	/^c010a793:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a796	obj/kernel.asm	/^c010a796:	75 13                	jne    c010a7ab <file_read+0x111>$/;"	l
c010a798	obj/kernel.asm	/^c010a798:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a79b	obj/kernel.asm	/^c010a79b:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010a79e	obj/kernel.asm	/^c010a79e:	8b 52 10             	mov    0x10(%edx),%edx$/;"	l
c010a7a1	obj/kernel.asm	/^c010a7a1:	89 d1                	mov    %edx,%ecx$/;"	l
c010a7a3	obj/kernel.asm	/^c010a7a3:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010a7a6	obj/kernel.asm	/^c010a7a6:	01 ca                	add    %ecx,%edx$/;"	l
c010a7a8	obj/kernel.asm	/^c010a7a8:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010a7ab	obj/kernel.asm	/^c010a7ab:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010a7ae	obj/kernel.asm	/^c010a7ae:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010a7b1	obj/kernel.asm	/^c010a7b1:	89 10                	mov    %edx,(%eax)$/;"	l
c010a7b3	obj/kernel.asm	/^c010a7b3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a7b6	obj/kernel.asm	/^c010a7b6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a7b9	obj/kernel.asm	/^c010a7b9:	50                   	push   %eax$/;"	l
c010a7ba	obj/kernel.asm	/^c010a7ba:	e8 77 fa ff ff       	call   c010a236 <fd_array_release>$/;"	l
c010a7bf	obj/kernel.asm	/^c010a7bf:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a7c2	obj/kernel.asm	/^c010a7c2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a7c5	obj/kernel.asm	/^c010a7c5:	c9                   	leave  $/;"	l
c010a7c6	obj/kernel.asm	/^c010a7c6:	c3                   	ret    $/;"	l
c010a7c7	obj/kernel.asm	/^c010a7c7 <file_write>:$/;"	l
c010a7c7	obj/kernel.asm	/^c010a7c7:	55                   	push   %ebp$/;"	l
c010a7c8	obj/kernel.asm	/^c010a7c8:	89 e5                	mov    %esp,%ebp$/;"	l
c010a7ca	obj/kernel.asm	/^c010a7ca:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010a7cd	obj/kernel.asm	/^c010a7cd:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010a7d0	obj/kernel.asm	/^c010a7d0:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010a7d6	obj/kernel.asm	/^c010a7d6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a7d9	obj/kernel.asm	/^c010a7d9:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c010a7dc	obj/kernel.asm	/^c010a7dc:	50                   	push   %eax$/;"	l
c010a7dd	obj/kernel.asm	/^c010a7dd:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a7e0	obj/kernel.asm	/^c010a7e0:	e8 1f fc ff ff       	call   c010a404 <fd2file>$/;"	l
c010a7e5	obj/kernel.asm	/^c010a7e5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a7e8	obj/kernel.asm	/^c010a7e8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a7eb	obj/kernel.asm	/^c010a7eb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a7ef	obj/kernel.asm	/^c010a7ef:	74 08                	je     c010a7f9 <file_write+0x32>$/;"	l
c010a7f1	obj/kernel.asm	/^c010a7f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a7f4	obj/kernel.asm	/^c010a7f4:	e9 f9 00 00 00       	jmp    c010a8f2 <file_write+0x12b>$/;"	l
c010a7f9	obj/kernel.asm	/^c010a7f9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a7fc	obj/kernel.asm	/^c010a7fc:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010a7ff	obj/kernel.asm	/^c010a7ff:	85 c0                	test   %eax,%eax$/;"	l
c010a801	obj/kernel.asm	/^c010a801:	75 0a                	jne    c010a80d <file_write+0x46>$/;"	l
c010a803	obj/kernel.asm	/^c010a803:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010a808	obj/kernel.asm	/^c010a808:	e9 e5 00 00 00       	jmp    c010a8f2 <file_write+0x12b>$/;"	l
c010a80d	obj/kernel.asm	/^c010a80d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a810	obj/kernel.asm	/^c010a810:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a813	obj/kernel.asm	/^c010a813:	50                   	push   %eax$/;"	l
c010a814	obj/kernel.asm	/^c010a814:	e8 e7 f9 ff ff       	call   c010a200 <fd_array_acquire>$/;"	l
c010a819	obj/kernel.asm	/^c010a819:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a81c	obj/kernel.asm	/^c010a81c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a81f	obj/kernel.asm	/^c010a81f:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a822	obj/kernel.asm	/^c010a822:	50                   	push   %eax$/;"	l
c010a823	obj/kernel.asm	/^c010a823:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010a826	obj/kernel.asm	/^c010a826:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010a829	obj/kernel.asm	/^c010a829:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010a82c	obj/kernel.asm	/^c010a82c:	50                   	push   %eax$/;"	l
c010a82d	obj/kernel.asm	/^c010a82d:	e8 2c 05 00 00       	call   c010ad5e <iobuf_init>$/;"	l
c010a832	obj/kernel.asm	/^c010a832:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a835	obj/kernel.asm	/^c010a835:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a838	obj/kernel.asm	/^c010a838:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a83b	obj/kernel.asm	/^c010a83b:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a83e	obj/kernel.asm	/^c010a83e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a841	obj/kernel.asm	/^c010a841:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a845	obj/kernel.asm	/^c010a845:	74 17                	je     c010a85e <file_write+0x97>$/;"	l
c010a847	obj/kernel.asm	/^c010a847:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a84a	obj/kernel.asm	/^c010a84a:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a84d	obj/kernel.asm	/^c010a84d:	85 c0                	test   %eax,%eax$/;"	l
c010a84f	obj/kernel.asm	/^c010a84f:	74 0d                	je     c010a85e <file_write+0x97>$/;"	l
c010a851	obj/kernel.asm	/^c010a851:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a854	obj/kernel.asm	/^c010a854:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a857	obj/kernel.asm	/^c010a857:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a85a	obj/kernel.asm	/^c010a85a:	85 c0                	test   %eax,%eax$/;"	l
c010a85c	obj/kernel.asm	/^c010a85c:	75 19                	jne    c010a877 <file_write+0xb0>$/;"	l
c010a85e	obj/kernel.asm	/^c010a85e:	68 e8 66 11 c0       	push   $0xc01166e8$/;"	l
c010a863	obj/kernel.asm	/^c010a863:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010a868	obj/kernel.asm	/^c010a868:	68 fc 00 00 00       	push   $0xfc$/;"	l
c010a86d	obj/kernel.asm	/^c010a86d:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010a872	obj/kernel.asm	/^c010a872:	e8 58 5c ff ff       	call   c01004cf <__panic>$/;"	l
c010a877	obj/kernel.asm	/^c010a877:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a87a	obj/kernel.asm	/^c010a87a:	68 36 67 11 c0       	push   $0xc0116736$/;"	l
c010a87f	obj/kernel.asm	/^c010a87f:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010a882	obj/kernel.asm	/^c010a882:	e8 10 4a 00 00       	call   c010f297 <inode_check>$/;"	l
c010a887	obj/kernel.asm	/^c010a887:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a88a	obj/kernel.asm	/^c010a88a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a88d	obj/kernel.asm	/^c010a88d:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a890	obj/kernel.asm	/^c010a890:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a893	obj/kernel.asm	/^c010a893:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010a896	obj/kernel.asm	/^c010a896:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010a899	obj/kernel.asm	/^c010a899:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a89c	obj/kernel.asm	/^c010a89c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a89f	obj/kernel.asm	/^c010a89f:	52                   	push   %edx$/;"	l
c010a8a0	obj/kernel.asm	/^c010a8a0:	ff d0                	call   *%eax$/;"	l
c010a8a2	obj/kernel.asm	/^c010a8a2:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a8a5	obj/kernel.asm	/^c010a8a5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a8a8	obj/kernel.asm	/^c010a8a8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a8ab	obj/kernel.asm	/^c010a8ab:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010a8ae	obj/kernel.asm	/^c010a8ae:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a8b1	obj/kernel.asm	/^c010a8b1:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010a8b4	obj/kernel.asm	/^c010a8b4:	29 c2                	sub    %eax,%edx$/;"	l
c010a8b6	obj/kernel.asm	/^c010a8b6:	89 d0                	mov    %edx,%eax$/;"	l
c010a8b8	obj/kernel.asm	/^c010a8b8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a8bb	obj/kernel.asm	/^c010a8bb:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a8be	obj/kernel.asm	/^c010a8be:	8b 00                	mov    (%eax),%eax$/;"	l
c010a8c0	obj/kernel.asm	/^c010a8c0:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a8c3	obj/kernel.asm	/^c010a8c3:	75 13                	jne    c010a8d8 <file_write+0x111>$/;"	l
c010a8c5	obj/kernel.asm	/^c010a8c5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a8c8	obj/kernel.asm	/^c010a8c8:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010a8cb	obj/kernel.asm	/^c010a8cb:	8b 52 10             	mov    0x10(%edx),%edx$/;"	l
c010a8ce	obj/kernel.asm	/^c010a8ce:	89 d1                	mov    %edx,%ecx$/;"	l
c010a8d0	obj/kernel.asm	/^c010a8d0:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010a8d3	obj/kernel.asm	/^c010a8d3:	01 ca                	add    %ecx,%edx$/;"	l
c010a8d5	obj/kernel.asm	/^c010a8d5:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010a8d8	obj/kernel.asm	/^c010a8d8:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010a8db	obj/kernel.asm	/^c010a8db:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010a8de	obj/kernel.asm	/^c010a8de:	89 10                	mov    %edx,(%eax)$/;"	l
c010a8e0	obj/kernel.asm	/^c010a8e0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010a8e3	obj/kernel.asm	/^c010a8e3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a8e6	obj/kernel.asm	/^c010a8e6:	50                   	push   %eax$/;"	l
c010a8e7	obj/kernel.asm	/^c010a8e7:	e8 4a f9 ff ff       	call   c010a236 <fd_array_release>$/;"	l
c010a8ec	obj/kernel.asm	/^c010a8ec:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a8ef	obj/kernel.asm	/^c010a8ef:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a8f2	obj/kernel.asm	/^c010a8f2:	c9                   	leave  $/;"	l
c010a8f3	obj/kernel.asm	/^c010a8f3:	c3                   	ret    $/;"	l
c010a8f4	obj/kernel.asm	/^c010a8f4 <file_seek>:$/;"	l
c010a8f4	obj/kernel.asm	/^c010a8f4:	55                   	push   %ebp$/;"	l
c010a8f5	obj/kernel.asm	/^c010a8f5:	89 e5                	mov    %esp,%ebp$/;"	l
c010a8f7	obj/kernel.asm	/^c010a8f7:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010a8fa	obj/kernel.asm	/^c010a8fa:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c010a8fd	obj/kernel.asm	/^c010a8fd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010a900	obj/kernel.asm	/^c010a900:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a903	obj/kernel.asm	/^c010a903:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010a906	obj/kernel.asm	/^c010a906:	50                   	push   %eax$/;"	l
c010a907	obj/kernel.asm	/^c010a907:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010a90a	obj/kernel.asm	/^c010a90a:	e8 f5 fa ff ff       	call   c010a404 <fd2file>$/;"	l
c010a90f	obj/kernel.asm	/^c010a90f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a912	obj/kernel.asm	/^c010a912:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a915	obj/kernel.asm	/^c010a915:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a919	obj/kernel.asm	/^c010a919:	74 08                	je     c010a923 <file_seek+0x2f>$/;"	l
c010a91b	obj/kernel.asm	/^c010a91b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010a91e	obj/kernel.asm	/^c010a91e:	e9 60 01 00 00       	jmp    c010aa83 <file_seek+0x18f>$/;"	l
c010a923	obj/kernel.asm	/^c010a923:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a926	obj/kernel.asm	/^c010a926:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010a929	obj/kernel.asm	/^c010a929:	50                   	push   %eax$/;"	l
c010a92a	obj/kernel.asm	/^c010a92a:	e8 d1 f8 ff ff       	call   c010a200 <fd_array_acquire>$/;"	l
c010a92f	obj/kernel.asm	/^c010a92f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a932	obj/kernel.asm	/^c010a932:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010a935	obj/kernel.asm	/^c010a935:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010a938	obj/kernel.asm	/^c010a938:	74 12                	je     c010a94c <file_seek+0x58>$/;"	l
c010a93a	obj/kernel.asm	/^c010a93a:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010a93d	obj/kernel.asm	/^c010a93d:	74 1b                	je     c010a95a <file_seek+0x66>$/;"	l
c010a93f	obj/kernel.asm	/^c010a93f:	85 c0                	test   %eax,%eax$/;"	l
c010a941	obj/kernel.asm	/^c010a941:	0f 84 a4 00 00 00    	je     c010a9eb <file_seek+0xf7>$/;"	l
c010a947	obj/kernel.asm	/^c010a947:	e9 96 00 00 00       	jmp    c010a9e2 <file_seek+0xee>$/;"	l
c010a94c	obj/kernel.asm	/^c010a94c:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a94f	obj/kernel.asm	/^c010a94f:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010a952	obj/kernel.asm	/^c010a952:	01 45 0c             	add    %eax,0xc(%ebp)$/;"	l
c010a955	obj/kernel.asm	/^c010a955:	e9 92 00 00 00       	jmp    c010a9ec <file_seek+0xf8>$/;"	l
c010a95a	obj/kernel.asm	/^c010a95a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a95d	obj/kernel.asm	/^c010a95d:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a960	obj/kernel.asm	/^c010a960:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010a963	obj/kernel.asm	/^c010a963:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010a967	obj/kernel.asm	/^c010a967:	74 17                	je     c010a980 <file_seek+0x8c>$/;"	l
c010a969	obj/kernel.asm	/^c010a969:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a96c	obj/kernel.asm	/^c010a96c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a96f	obj/kernel.asm	/^c010a96f:	85 c0                	test   %eax,%eax$/;"	l
c010a971	obj/kernel.asm	/^c010a971:	74 0d                	je     c010a980 <file_seek+0x8c>$/;"	l
c010a973	obj/kernel.asm	/^c010a973:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a976	obj/kernel.asm	/^c010a976:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a979	obj/kernel.asm	/^c010a979:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a97c	obj/kernel.asm	/^c010a97c:	85 c0                	test   %eax,%eax$/;"	l
c010a97e	obj/kernel.asm	/^c010a97e:	75 19                	jne    c010a999 <file_seek+0xa5>$/;"	l
c010a980	obj/kernel.asm	/^c010a980:	68 40 66 11 c0       	push   $0xc0116640$/;"	l
c010a985	obj/kernel.asm	/^c010a985:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010a98a	obj/kernel.asm	/^c010a98a:	68 16 01 00 00       	push   $0x116$/;"	l
c010a98f	obj/kernel.asm	/^c010a98f:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010a994	obj/kernel.asm	/^c010a994:	e8 36 5b ff ff       	call   c01004cf <__panic>$/;"	l
c010a999	obj/kernel.asm	/^c010a999:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a99c	obj/kernel.asm	/^c010a99c:	68 8e 66 11 c0       	push   $0xc011668e$/;"	l
c010a9a1	obj/kernel.asm	/^c010a9a1:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010a9a4	obj/kernel.asm	/^c010a9a4:	e8 ee 48 00 00       	call   c010f297 <inode_check>$/;"	l
c010a9a9	obj/kernel.asm	/^c010a9a9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a9ac	obj/kernel.asm	/^c010a9ac:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010a9af	obj/kernel.asm	/^c010a9af:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010a9b2	obj/kernel.asm	/^c010a9b2:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a9b5	obj/kernel.asm	/^c010a9b5:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010a9b8	obj/kernel.asm	/^c010a9b8:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010a9bb	obj/kernel.asm	/^c010a9bb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010a9be	obj/kernel.asm	/^c010a9be:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010a9c1	obj/kernel.asm	/^c010a9c1:	52                   	push   %edx$/;"	l
c010a9c2	obj/kernel.asm	/^c010a9c2:	ff d0                	call   *%eax$/;"	l
c010a9c4	obj/kernel.asm	/^c010a9c4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010a9c7	obj/kernel.asm	/^c010a9c7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010a9ca	obj/kernel.asm	/^c010a9ca:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a9ce	obj/kernel.asm	/^c010a9ce:	75 10                	jne    c010a9e0 <file_seek+0xec>$/;"	l
c010a9d0	obj/kernel.asm	/^c010a9d0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010a9d3	obj/kernel.asm	/^c010a9d3:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010a9d6	obj/kernel.asm	/^c010a9d6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010a9d9	obj/kernel.asm	/^c010a9d9:	01 d0                	add    %edx,%eax$/;"	l
c010a9db	obj/kernel.asm	/^c010a9db:	89 45 0c             	mov    %eax,0xc(%ebp)$/;"	l
c010a9de	obj/kernel.asm	/^c010a9de:	eb 0c                	jmp    c010a9ec <file_seek+0xf8>$/;"	l
c010a9e0	obj/kernel.asm	/^c010a9e0:	eb 0a                	jmp    c010a9ec <file_seek+0xf8>$/;"	l
c010a9e2	obj/kernel.asm	/^c010a9e2:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010a9e9	obj/kernel.asm	/^c010a9e9:	eb 01                	jmp    c010a9ec <file_seek+0xf8>$/;"	l
c010a9eb	obj/kernel.asm	/^c010a9eb:	90                   	nop$/;"	l
c010a9ec	obj/kernel.asm	/^c010a9ec:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010a9f0	obj/kernel.asm	/^c010a9f0:	75 7f                	jne    c010aa71 <file_seek+0x17d>$/;"	l
c010a9f2	obj/kernel.asm	/^c010a9f2:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010a9f5	obj/kernel.asm	/^c010a9f5:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010a9f8	obj/kernel.asm	/^c010a9f8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010a9fb	obj/kernel.asm	/^c010a9fb:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010a9ff	obj/kernel.asm	/^c010a9ff:	74 17                	je     c010aa18 <file_seek+0x124>$/;"	l
c010aa01	obj/kernel.asm	/^c010aa01:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010aa04	obj/kernel.asm	/^c010aa04:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010aa07	obj/kernel.asm	/^c010aa07:	85 c0                	test   %eax,%eax$/;"	l
c010aa09	obj/kernel.asm	/^c010aa09:	74 0d                	je     c010aa18 <file_seek+0x124>$/;"	l
c010aa0b	obj/kernel.asm	/^c010aa0b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010aa0e	obj/kernel.asm	/^c010aa0e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010aa11	obj/kernel.asm	/^c010aa11:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010aa14	obj/kernel.asm	/^c010aa14:	85 c0                	test   %eax,%eax$/;"	l
c010aa16	obj/kernel.asm	/^c010aa16:	75 19                	jne    c010aa31 <file_seek+0x13d>$/;"	l
c010aa18	obj/kernel.asm	/^c010aa18:	68 3c 67 11 c0       	push   $0xc011673c$/;"	l
c010aa1d	obj/kernel.asm	/^c010aa1d:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010aa22	obj/kernel.asm	/^c010aa22:	68 1e 01 00 00       	push   $0x11e$/;"	l
c010aa27	obj/kernel.asm	/^c010aa27:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010aa2c	obj/kernel.asm	/^c010aa2c:	e8 9e 5a ff ff       	call   c01004cf <__panic>$/;"	l
c010aa31	obj/kernel.asm	/^c010aa31:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010aa34	obj/kernel.asm	/^c010aa34:	68 8c 67 11 c0       	push   $0xc011678c$/;"	l
c010aa39	obj/kernel.asm	/^c010aa39:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010aa3c	obj/kernel.asm	/^c010aa3c:	e8 56 48 00 00       	call   c010f297 <inode_check>$/;"	l
c010aa41	obj/kernel.asm	/^c010aa41:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aa44	obj/kernel.asm	/^c010aa44:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010aa47	obj/kernel.asm	/^c010aa47:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010aa4a	obj/kernel.asm	/^c010aa4a:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010aa4d	obj/kernel.asm	/^c010aa4d:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010aa50	obj/kernel.asm	/^c010aa50:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010aa53	obj/kernel.asm	/^c010aa53:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010aa56	obj/kernel.asm	/^c010aa56:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010aa59	obj/kernel.asm	/^c010aa59:	52                   	push   %edx$/;"	l
c010aa5a	obj/kernel.asm	/^c010aa5a:	ff d0                	call   *%eax$/;"	l
c010aa5c	obj/kernel.asm	/^c010aa5c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aa5f	obj/kernel.asm	/^c010aa5f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aa62	obj/kernel.asm	/^c010aa62:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010aa66	obj/kernel.asm	/^c010aa66:	75 09                	jne    c010aa71 <file_seek+0x17d>$/;"	l
c010aa68	obj/kernel.asm	/^c010aa68:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010aa6b	obj/kernel.asm	/^c010aa6b:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010aa6e	obj/kernel.asm	/^c010aa6e:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010aa71	obj/kernel.asm	/^c010aa71:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010aa74	obj/kernel.asm	/^c010aa74:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010aa77	obj/kernel.asm	/^c010aa77:	50                   	push   %eax$/;"	l
c010aa78	obj/kernel.asm	/^c010aa78:	e8 b9 f7 ff ff       	call   c010a236 <fd_array_release>$/;"	l
c010aa7d	obj/kernel.asm	/^c010aa7d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aa80	obj/kernel.asm	/^c010aa80:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aa83	obj/kernel.asm	/^c010aa83:	c9                   	leave  $/;"	l
c010aa84	obj/kernel.asm	/^c010aa84:	c3                   	ret    $/;"	l
c010aa85	obj/kernel.asm	/^c010aa85 <file_fstat>:$/;"	l
c010aa85	obj/kernel.asm	/^c010aa85:	55                   	push   %ebp$/;"	l
c010aa86	obj/kernel.asm	/^c010aa86:	89 e5                	mov    %esp,%ebp$/;"	l
c010aa88	obj/kernel.asm	/^c010aa88:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010aa8b	obj/kernel.asm	/^c010aa8b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010aa8e	obj/kernel.asm	/^c010aa8e:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010aa91	obj/kernel.asm	/^c010aa91:	50                   	push   %eax$/;"	l
c010aa92	obj/kernel.asm	/^c010aa92:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010aa95	obj/kernel.asm	/^c010aa95:	e8 6a f9 ff ff       	call   c010a404 <fd2file>$/;"	l
c010aa9a	obj/kernel.asm	/^c010aa9a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aa9d	obj/kernel.asm	/^c010aa9d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010aaa0	obj/kernel.asm	/^c010aaa0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010aaa4	obj/kernel.asm	/^c010aaa4:	74 08                	je     c010aaae <file_fstat+0x29>$/;"	l
c010aaa6	obj/kernel.asm	/^c010aaa6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010aaa9	obj/kernel.asm	/^c010aaa9:	e9 91 00 00 00       	jmp    c010ab3f <file_fstat+0xba>$/;"	l
c010aaae	obj/kernel.asm	/^c010aaae:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010aab1	obj/kernel.asm	/^c010aab1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010aab4	obj/kernel.asm	/^c010aab4:	50                   	push   %eax$/;"	l
c010aab5	obj/kernel.asm	/^c010aab5:	e8 46 f7 ff ff       	call   c010a200 <fd_array_acquire>$/;"	l
c010aaba	obj/kernel.asm	/^c010aaba:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aabd	obj/kernel.asm	/^c010aabd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010aac0	obj/kernel.asm	/^c010aac0:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010aac3	obj/kernel.asm	/^c010aac3:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010aac6	obj/kernel.asm	/^c010aac6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010aaca	obj/kernel.asm	/^c010aaca:	74 17                	je     c010aae3 <file_fstat+0x5e>$/;"	l
c010aacc	obj/kernel.asm	/^c010aacc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aacf	obj/kernel.asm	/^c010aacf:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010aad2	obj/kernel.asm	/^c010aad2:	85 c0                	test   %eax,%eax$/;"	l
c010aad4	obj/kernel.asm	/^c010aad4:	74 0d                	je     c010aae3 <file_fstat+0x5e>$/;"	l
c010aad6	obj/kernel.asm	/^c010aad6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010aad9	obj/kernel.asm	/^c010aad9:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010aadc	obj/kernel.asm	/^c010aadc:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010aadf	obj/kernel.asm	/^c010aadf:	85 c0                	test   %eax,%eax$/;"	l
c010aae1	obj/kernel.asm	/^c010aae1:	75 19                	jne    c010aafc <file_fstat+0x77>$/;"	l
c010aae3	obj/kernel.asm	/^c010aae3:	68 40 66 11 c0       	push   $0xc0116640$/;"	l
c010aae8	obj/kernel.asm	/^c010aae8:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010aaed	obj/kernel.asm	/^c010aaed:	68 30 01 00 00       	push   $0x130$/;"	l
c010aaf2	obj/kernel.asm	/^c010aaf2:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010aaf7	obj/kernel.asm	/^c010aaf7:	e8 d3 59 ff ff       	call   c01004cf <__panic>$/;"	l
c010aafc	obj/kernel.asm	/^c010aafc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010aaff	obj/kernel.asm	/^c010aaff:	68 8e 66 11 c0       	push   $0xc011668e$/;"	l
c010ab04	obj/kernel.asm	/^c010ab04:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010ab07	obj/kernel.asm	/^c010ab07:	e8 8b 47 00 00       	call   c010f297 <inode_check>$/;"	l
c010ab0c	obj/kernel.asm	/^c010ab0c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ab0f	obj/kernel.asm	/^c010ab0f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ab12	obj/kernel.asm	/^c010ab12:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ab15	obj/kernel.asm	/^c010ab15:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ab18	obj/kernel.asm	/^c010ab18:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010ab1b	obj/kernel.asm	/^c010ab1b:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010ab1e	obj/kernel.asm	/^c010ab1e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ab21	obj/kernel.asm	/^c010ab21:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010ab24	obj/kernel.asm	/^c010ab24:	52                   	push   %edx$/;"	l
c010ab25	obj/kernel.asm	/^c010ab25:	ff d0                	call   *%eax$/;"	l
c010ab27	obj/kernel.asm	/^c010ab27:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ab2a	obj/kernel.asm	/^c010ab2a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ab2d	obj/kernel.asm	/^c010ab2d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ab30	obj/kernel.asm	/^c010ab30:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ab33	obj/kernel.asm	/^c010ab33:	50                   	push   %eax$/;"	l
c010ab34	obj/kernel.asm	/^c010ab34:	e8 fd f6 ff ff       	call   c010a236 <fd_array_release>$/;"	l
c010ab39	obj/kernel.asm	/^c010ab39:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ab3c	obj/kernel.asm	/^c010ab3c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ab3f	obj/kernel.asm	/^c010ab3f:	c9                   	leave  $/;"	l
c010ab40	obj/kernel.asm	/^c010ab40:	c3                   	ret    $/;"	l
c010ab41	obj/kernel.asm	/^c010ab41 <file_fsync>:$/;"	l
c010ab41	obj/kernel.asm	/^c010ab41:	55                   	push   %ebp$/;"	l
c010ab42	obj/kernel.asm	/^c010ab42:	89 e5                	mov    %esp,%ebp$/;"	l
c010ab44	obj/kernel.asm	/^c010ab44:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ab47	obj/kernel.asm	/^c010ab47:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ab4a	obj/kernel.asm	/^c010ab4a:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010ab4d	obj/kernel.asm	/^c010ab4d:	50                   	push   %eax$/;"	l
c010ab4e	obj/kernel.asm	/^c010ab4e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ab51	obj/kernel.asm	/^c010ab51:	e8 ae f8 ff ff       	call   c010a404 <fd2file>$/;"	l
c010ab56	obj/kernel.asm	/^c010ab56:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ab59	obj/kernel.asm	/^c010ab59:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ab5c	obj/kernel.asm	/^c010ab5c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ab60	obj/kernel.asm	/^c010ab60:	74 08                	je     c010ab6a <file_fsync+0x29>$/;"	l
c010ab62	obj/kernel.asm	/^c010ab62:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ab65	obj/kernel.asm	/^c010ab65:	e9 8e 00 00 00       	jmp    c010abf8 <file_fsync+0xb7>$/;"	l
c010ab6a	obj/kernel.asm	/^c010ab6a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ab6d	obj/kernel.asm	/^c010ab6d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ab70	obj/kernel.asm	/^c010ab70:	50                   	push   %eax$/;"	l
c010ab71	obj/kernel.asm	/^c010ab71:	e8 8a f6 ff ff       	call   c010a200 <fd_array_acquire>$/;"	l
c010ab76	obj/kernel.asm	/^c010ab76:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ab79	obj/kernel.asm	/^c010ab79:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ab7c	obj/kernel.asm	/^c010ab7c:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ab7f	obj/kernel.asm	/^c010ab7f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ab82	obj/kernel.asm	/^c010ab82:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ab86	obj/kernel.asm	/^c010ab86:	74 17                	je     c010ab9f <file_fsync+0x5e>$/;"	l
c010ab88	obj/kernel.asm	/^c010ab88:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ab8b	obj/kernel.asm	/^c010ab8b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ab8e	obj/kernel.asm	/^c010ab8e:	85 c0                	test   %eax,%eax$/;"	l
c010ab90	obj/kernel.asm	/^c010ab90:	74 0d                	je     c010ab9f <file_fsync+0x5e>$/;"	l
c010ab92	obj/kernel.asm	/^c010ab92:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ab95	obj/kernel.asm	/^c010ab95:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ab98	obj/kernel.asm	/^c010ab98:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ab9b	obj/kernel.asm	/^c010ab9b:	85 c0                	test   %eax,%eax$/;"	l
c010ab9d	obj/kernel.asm	/^c010ab9d:	75 19                	jne    c010abb8 <file_fsync+0x77>$/;"	l
c010ab9f	obj/kernel.asm	/^c010ab9f:	68 94 67 11 c0       	push   $0xc0116794$/;"	l
c010aba4	obj/kernel.asm	/^c010aba4:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010aba9	obj/kernel.asm	/^c010aba9:	68 3e 01 00 00       	push   $0x13e$/;"	l
c010abae	obj/kernel.asm	/^c010abae:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010abb3	obj/kernel.asm	/^c010abb3:	e8 17 59 ff ff       	call   c01004cf <__panic>$/;"	l
c010abb8	obj/kernel.asm	/^c010abb8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010abbb	obj/kernel.asm	/^c010abbb:	68 e2 67 11 c0       	push   $0xc01167e2$/;"	l
c010abc0	obj/kernel.asm	/^c010abc0:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010abc3	obj/kernel.asm	/^c010abc3:	e8 cf 46 00 00       	call   c010f297 <inode_check>$/;"	l
c010abc8	obj/kernel.asm	/^c010abc8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010abcb	obj/kernel.asm	/^c010abcb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010abce	obj/kernel.asm	/^c010abce:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010abd1	obj/kernel.asm	/^c010abd1:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010abd4	obj/kernel.asm	/^c010abd4:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010abd7	obj/kernel.asm	/^c010abd7:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010abda	obj/kernel.asm	/^c010abda:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010abdd	obj/kernel.asm	/^c010abdd:	52                   	push   %edx$/;"	l
c010abde	obj/kernel.asm	/^c010abde:	ff d0                	call   *%eax$/;"	l
c010abe0	obj/kernel.asm	/^c010abe0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010abe3	obj/kernel.asm	/^c010abe3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010abe6	obj/kernel.asm	/^c010abe6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010abe9	obj/kernel.asm	/^c010abe9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010abec	obj/kernel.asm	/^c010abec:	50                   	push   %eax$/;"	l
c010abed	obj/kernel.asm	/^c010abed:	e8 44 f6 ff ff       	call   c010a236 <fd_array_release>$/;"	l
c010abf2	obj/kernel.asm	/^c010abf2:	83 c4 10             	add    $0x10,%esp$/;"	l
c010abf5	obj/kernel.asm	/^c010abf5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010abf8	obj/kernel.asm	/^c010abf8:	c9                   	leave  $/;"	l
c010abf9	obj/kernel.asm	/^c010abf9:	c3                   	ret    $/;"	l
c010abfa	obj/kernel.asm	/^c010abfa <file_getdirentry>:$/;"	l
c010abfa	obj/kernel.asm	/^c010abfa:	55                   	push   %ebp$/;"	l
c010abfb	obj/kernel.asm	/^c010abfb:	89 e5                	mov    %esp,%ebp$/;"	l
c010abfd	obj/kernel.asm	/^c010abfd:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ac00	obj/kernel.asm	/^c010ac00:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ac03	obj/kernel.asm	/^c010ac03:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c010ac06	obj/kernel.asm	/^c010ac06:	50                   	push   %eax$/;"	l
c010ac07	obj/kernel.asm	/^c010ac07:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ac0a	obj/kernel.asm	/^c010ac0a:	e8 f5 f7 ff ff       	call   c010a404 <fd2file>$/;"	l
c010ac0f	obj/kernel.asm	/^c010ac0f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ac12	obj/kernel.asm	/^c010ac12:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ac15	obj/kernel.asm	/^c010ac15:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ac19	obj/kernel.asm	/^c010ac19:	74 08                	je     c010ac23 <file_getdirentry+0x29>$/;"	l
c010ac1b	obj/kernel.asm	/^c010ac1b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ac1e	obj/kernel.asm	/^c010ac1e:	e9 d8 00 00 00       	jmp    c010acfb <file_getdirentry+0x101>$/;"	l
c010ac23	obj/kernel.asm	/^c010ac23:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ac26	obj/kernel.asm	/^c010ac26:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ac29	obj/kernel.asm	/^c010ac29:	50                   	push   %eax$/;"	l
c010ac2a	obj/kernel.asm	/^c010ac2a:	e8 d1 f5 ff ff       	call   c010a200 <fd_array_acquire>$/;"	l
c010ac2f	obj/kernel.asm	/^c010ac2f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ac32	obj/kernel.asm	/^c010ac32:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ac35	obj/kernel.asm	/^c010ac35:	8b 00                	mov    (%eax),%eax$/;"	l
c010ac37	obj/kernel.asm	/^c010ac37:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010ac3a	obj/kernel.asm	/^c010ac3a:	83 c2 04             	add    $0x4,%edx$/;"	l
c010ac3d	obj/kernel.asm	/^c010ac3d:	50                   	push   %eax$/;"	l
c010ac3e	obj/kernel.asm	/^c010ac3e:	68 00 01 00 00       	push   $0x100$/;"	l
c010ac43	obj/kernel.asm	/^c010ac43:	52                   	push   %edx$/;"	l
c010ac44	obj/kernel.asm	/^c010ac44:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c010ac47	obj/kernel.asm	/^c010ac47:	50                   	push   %eax$/;"	l
c010ac48	obj/kernel.asm	/^c010ac48:	e8 11 01 00 00       	call   c010ad5e <iobuf_init>$/;"	l
c010ac4d	obj/kernel.asm	/^c010ac4d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ac50	obj/kernel.asm	/^c010ac50:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ac53	obj/kernel.asm	/^c010ac53:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ac56	obj/kernel.asm	/^c010ac56:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010ac59	obj/kernel.asm	/^c010ac59:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ac5c	obj/kernel.asm	/^c010ac5c:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010ac60	obj/kernel.asm	/^c010ac60:	74 17                	je     c010ac79 <file_getdirentry+0x7f>$/;"	l
c010ac62	obj/kernel.asm	/^c010ac62:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ac65	obj/kernel.asm	/^c010ac65:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ac68	obj/kernel.asm	/^c010ac68:	85 c0                	test   %eax,%eax$/;"	l
c010ac6a	obj/kernel.asm	/^c010ac6a:	74 0d                	je     c010ac79 <file_getdirentry+0x7f>$/;"	l
c010ac6c	obj/kernel.asm	/^c010ac6c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ac6f	obj/kernel.asm	/^c010ac6f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ac72	obj/kernel.asm	/^c010ac72:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c010ac75	obj/kernel.asm	/^c010ac75:	85 c0                	test   %eax,%eax$/;"	l
c010ac77	obj/kernel.asm	/^c010ac77:	75 19                	jne    c010ac92 <file_getdirentry+0x98>$/;"	l
c010ac79	obj/kernel.asm	/^c010ac79:	68 e8 67 11 c0       	push   $0xc01167e8$/;"	l
c010ac7e	obj/kernel.asm	/^c010ac7e:	68 fe 64 11 c0       	push   $0xc01164fe$/;"	l
c010ac83	obj/kernel.asm	/^c010ac83:	68 4e 01 00 00       	push   $0x14e$/;"	l
c010ac88	obj/kernel.asm	/^c010ac88:	68 13 65 11 c0       	push   $0xc0116513$/;"	l
c010ac8d	obj/kernel.asm	/^c010ac8d:	e8 3d 58 ff ff       	call   c01004cf <__panic>$/;"	l
c010ac92	obj/kernel.asm	/^c010ac92:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ac95	obj/kernel.asm	/^c010ac95:	68 3c 68 11 c0       	push   $0xc011683c$/;"	l
c010ac9a	obj/kernel.asm	/^c010ac9a:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010ac9d	obj/kernel.asm	/^c010ac9d:	e8 f5 45 00 00       	call   c010f297 <inode_check>$/;"	l
c010aca2	obj/kernel.asm	/^c010aca2:	83 c4 10             	add    $0x10,%esp$/;"	l
c010aca5	obj/kernel.asm	/^c010aca5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010aca8	obj/kernel.asm	/^c010aca8:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010acab	obj/kernel.asm	/^c010acab:	8b 40 20             	mov    0x20(%eax),%eax$/;"	l
c010acae	obj/kernel.asm	/^c010acae:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010acb1	obj/kernel.asm	/^c010acb1:	8b 52 14             	mov    0x14(%edx),%edx$/;"	l
c010acb4	obj/kernel.asm	/^c010acb4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010acb7	obj/kernel.asm	/^c010acb7:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010acba	obj/kernel.asm	/^c010acba:	52                   	push   %edx$/;"	l
c010acbb	obj/kernel.asm	/^c010acbb:	ff d0                	call   *%eax$/;"	l
c010acbd	obj/kernel.asm	/^c010acbd:	83 c4 10             	add    $0x10,%esp$/;"	l
c010acc0	obj/kernel.asm	/^c010acc0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010acc3	obj/kernel.asm	/^c010acc3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010acc7	obj/kernel.asm	/^c010acc7:	75 20                	jne    c010ace9 <file_getdirentry+0xef>$/;"	l
c010acc9	obj/kernel.asm	/^c010acc9:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010accc	obj/kernel.asm	/^c010accc:	8b 00                	mov    (%eax),%eax$/;"	l
c010acce	obj/kernel.asm	/^c010acce:	89 c1                	mov    %eax,%ecx$/;"	l
c010acd0	obj/kernel.asm	/^c010acd0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010acd3	obj/kernel.asm	/^c010acd3:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010acd6	obj/kernel.asm	/^c010acd6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010acd9	obj/kernel.asm	/^c010acd9:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010acdc	obj/kernel.asm	/^c010acdc:	29 c2                	sub    %eax,%edx$/;"	l
c010acde	obj/kernel.asm	/^c010acde:	89 d0                	mov    %edx,%eax$/;"	l
c010ace0	obj/kernel.asm	/^c010ace0:	01 c8                	add    %ecx,%eax$/;"	l
c010ace2	obj/kernel.asm	/^c010ace2:	89 c2                	mov    %eax,%edx$/;"	l
c010ace4	obj/kernel.asm	/^c010ace4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ace7	obj/kernel.asm	/^c010ace7:	89 10                	mov    %edx,(%eax)$/;"	l
c010ace9	obj/kernel.asm	/^c010ace9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010acec	obj/kernel.asm	/^c010acec:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010acef	obj/kernel.asm	/^c010acef:	50                   	push   %eax$/;"	l
c010acf0	obj/kernel.asm	/^c010acf0:	e8 41 f5 ff ff       	call   c010a236 <fd_array_release>$/;"	l
c010acf5	obj/kernel.asm	/^c010acf5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010acf8	obj/kernel.asm	/^c010acf8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010acfb	obj/kernel.asm	/^c010acfb:	c9                   	leave  $/;"	l
c010acfc	obj/kernel.asm	/^c010acfc:	c3                   	ret    $/;"	l
c010acfd	obj/kernel.asm	/^c010acfd <file_dup>:$/;"	l
c010acfd	obj/kernel.asm	/^c010acfd:	55                   	push   %ebp$/;"	l
c010acfe	obj/kernel.asm	/^c010acfe:	89 e5                	mov    %esp,%ebp$/;"	l
c010ad00	obj/kernel.asm	/^c010ad00:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ad03	obj/kernel.asm	/^c010ad03:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ad06	obj/kernel.asm	/^c010ad06:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010ad09	obj/kernel.asm	/^c010ad09:	50                   	push   %eax$/;"	l
c010ad0a	obj/kernel.asm	/^c010ad0a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ad0d	obj/kernel.asm	/^c010ad0d:	e8 f2 f6 ff ff       	call   c010a404 <fd2file>$/;"	l
c010ad12	obj/kernel.asm	/^c010ad12:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ad15	obj/kernel.asm	/^c010ad15:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ad18	obj/kernel.asm	/^c010ad18:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ad1c	obj/kernel.asm	/^c010ad1c:	74 05                	je     c010ad23 <file_dup+0x26>$/;"	l
c010ad1e	obj/kernel.asm	/^c010ad1e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ad21	obj/kernel.asm	/^c010ad21:	eb 39                	jmp    c010ad5c <file_dup+0x5f>$/;"	l
c010ad23	obj/kernel.asm	/^c010ad23:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ad26	obj/kernel.asm	/^c010ad26:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010ad29	obj/kernel.asm	/^c010ad29:	50                   	push   %eax$/;"	l
c010ad2a	obj/kernel.asm	/^c010ad2a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010ad2d	obj/kernel.asm	/^c010ad2d:	e8 81 f3 ff ff       	call   c010a0b3 <fd_array_alloc>$/;"	l
c010ad32	obj/kernel.asm	/^c010ad32:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ad35	obj/kernel.asm	/^c010ad35:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ad38	obj/kernel.asm	/^c010ad38:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ad3c	obj/kernel.asm	/^c010ad3c:	74 05                	je     c010ad43 <file_dup+0x46>$/;"	l
c010ad3e	obj/kernel.asm	/^c010ad3e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ad41	obj/kernel.asm	/^c010ad41:	eb 19                	jmp    c010ad5c <file_dup+0x5f>$/;"	l
c010ad43	obj/kernel.asm	/^c010ad43:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010ad46	obj/kernel.asm	/^c010ad46:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ad49	obj/kernel.asm	/^c010ad49:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ad4c	obj/kernel.asm	/^c010ad4c:	52                   	push   %edx$/;"	l
c010ad4d	obj/kernel.asm	/^c010ad4d:	50                   	push   %eax$/;"	l
c010ad4e	obj/kernel.asm	/^c010ad4e:	e8 1f f6 ff ff       	call   c010a372 <fd_array_dup>$/;"	l
c010ad53	obj/kernel.asm	/^c010ad53:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ad56	obj/kernel.asm	/^c010ad56:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ad59	obj/kernel.asm	/^c010ad59:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010ad5c	obj/kernel.asm	/^c010ad5c:	c9                   	leave  $/;"	l
c010ad5d	obj/kernel.asm	/^c010ad5d:	c3                   	ret    $/;"	l
c010ad5e	obj/kernel.asm	/^c010ad5e <iobuf_init>:$/;"	l
c010ad5e	obj/kernel.asm	/^c010ad5e:	55                   	push   %ebp$/;"	l
c010ad5f	obj/kernel.asm	/^c010ad5f:	89 e5                	mov    %esp,%ebp$/;"	l
c010ad61	obj/kernel.asm	/^c010ad61:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad64	obj/kernel.asm	/^c010ad64:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010ad67	obj/kernel.asm	/^c010ad67:	89 10                	mov    %edx,(%eax)$/;"	l
c010ad69	obj/kernel.asm	/^c010ad69:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad6c	obj/kernel.asm	/^c010ad6c:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c010ad6f	obj/kernel.asm	/^c010ad6f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010ad72	obj/kernel.asm	/^c010ad72:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad75	obj/kernel.asm	/^c010ad75:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010ad78	obj/kernel.asm	/^c010ad78:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010ad7b	obj/kernel.asm	/^c010ad7b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad7e	obj/kernel.asm	/^c010ad7e:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010ad81	obj/kernel.asm	/^c010ad81:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad84	obj/kernel.asm	/^c010ad84:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010ad87	obj/kernel.asm	/^c010ad87:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad8a	obj/kernel.asm	/^c010ad8a:	5d                   	pop    %ebp$/;"	l
c010ad8b	obj/kernel.asm	/^c010ad8b:	c3                   	ret    $/;"	l
c010ad8c	obj/kernel.asm	/^c010ad8c <iobuf_move>:$/;"	l
c010ad8c	obj/kernel.asm	/^c010ad8c:	55                   	push   %ebp$/;"	l
c010ad8d	obj/kernel.asm	/^c010ad8d:	89 e5                	mov    %esp,%ebp$/;"	l
c010ad8f	obj/kernel.asm	/^c010ad8f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ad92	obj/kernel.asm	/^c010ad92:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ad95	obj/kernel.asm	/^c010ad95:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010ad98	obj/kernel.asm	/^c010ad98:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ad9b	obj/kernel.asm	/^c010ad9b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ad9e	obj/kernel.asm	/^c010ad9e:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010ada1	obj/kernel.asm	/^c010ada1:	76 06                	jbe    c010ada9 <iobuf_move+0x1d>$/;"	l
c010ada3	obj/kernel.asm	/^c010ada3:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010ada6	obj/kernel.asm	/^c010ada6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ada9	obj/kernel.asm	/^c010ada9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010adad	obj/kernel.asm	/^c010adad:	74 51                	je     c010ae00 <iobuf_move+0x74>$/;"	l
c010adaf	obj/kernel.asm	/^c010adaf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010adb2	obj/kernel.asm	/^c010adb2:	8b 00                	mov    (%eax),%eax$/;"	l
c010adb4	obj/kernel.asm	/^c010adb4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010adb7	obj/kernel.asm	/^c010adb7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010adba	obj/kernel.asm	/^c010adba:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010adbd	obj/kernel.asm	/^c010adbd:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010adc1	obj/kernel.asm	/^c010adc1:	74 12                	je     c010add5 <iobuf_move+0x49>$/;"	l
c010adc3	obj/kernel.asm	/^c010adc3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010adc6	obj/kernel.asm	/^c010adc6:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010adc9	obj/kernel.asm	/^c010adc9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010adcc	obj/kernel.asm	/^c010adcc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010adcf	obj/kernel.asm	/^c010adcf:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010add2	obj/kernel.asm	/^c010add2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010add5	obj/kernel.asm	/^c010add5:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010add8	obj/kernel.asm	/^c010add8:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010addb	obj/kernel.asm	/^c010addb:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010adde	obj/kernel.asm	/^c010adde:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010ade1	obj/kernel.asm	/^c010ade1:	e8 e9 89 00 00       	call   c01137cf <memmove>$/;"	l
c010ade6	obj/kernel.asm	/^c010ade6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ade9	obj/kernel.asm	/^c010ade9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010adec	obj/kernel.asm	/^c010adec:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010adef	obj/kernel.asm	/^c010adef:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010adf2	obj/kernel.asm	/^c010adf2:	e8 9d 00 00 00       	call   c010ae94 <iobuf_skip>$/;"	l
c010adf7	obj/kernel.asm	/^c010adf7:	83 c4 10             	add    $0x10,%esp$/;"	l
c010adfa	obj/kernel.asm	/^c010adfa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010adfd	obj/kernel.asm	/^c010adfd:	29 45 10             	sub    %eax,0x10(%ebp)$/;"	l
c010ae00	obj/kernel.asm	/^c010ae00:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c010ae04	obj/kernel.asm	/^c010ae04:	74 08                	je     c010ae0e <iobuf_move+0x82>$/;"	l
c010ae06	obj/kernel.asm	/^c010ae06:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c010ae09	obj/kernel.asm	/^c010ae09:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010ae0c	obj/kernel.asm	/^c010ae0c:	89 10                	mov    %edx,(%eax)$/;"	l
c010ae0e	obj/kernel.asm	/^c010ae0e:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010ae12	obj/kernel.asm	/^c010ae12:	75 07                	jne    c010ae1b <iobuf_move+0x8f>$/;"	l
c010ae14	obj/kernel.asm	/^c010ae14:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ae19	obj/kernel.asm	/^c010ae19:	eb 05                	jmp    c010ae20 <iobuf_move+0x94>$/;"	l
c010ae1b	obj/kernel.asm	/^c010ae1b:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010ae20	obj/kernel.asm	/^c010ae20:	c9                   	leave  $/;"	l
c010ae21	obj/kernel.asm	/^c010ae21:	c3                   	ret    $/;"	l
c010ae22	obj/kernel.asm	/^c010ae22 <iobuf_move_zeros>:$/;"	l
c010ae22	obj/kernel.asm	/^c010ae22:	55                   	push   %ebp$/;"	l
c010ae23	obj/kernel.asm	/^c010ae23:	89 e5                	mov    %esp,%ebp$/;"	l
c010ae25	obj/kernel.asm	/^c010ae25:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ae28	obj/kernel.asm	/^c010ae28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae2b	obj/kernel.asm	/^c010ae2b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010ae2e	obj/kernel.asm	/^c010ae2e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ae31	obj/kernel.asm	/^c010ae31:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ae34	obj/kernel.asm	/^c010ae34:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010ae37	obj/kernel.asm	/^c010ae37:	76 06                	jbe    c010ae3f <iobuf_move_zeros+0x1d>$/;"	l
c010ae39	obj/kernel.asm	/^c010ae39:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ae3c	obj/kernel.asm	/^c010ae3c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ae3f	obj/kernel.asm	/^c010ae3f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ae43	obj/kernel.asm	/^c010ae43:	74 2d                	je     c010ae72 <iobuf_move_zeros+0x50>$/;"	l
c010ae45	obj/kernel.asm	/^c010ae45:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae48	obj/kernel.asm	/^c010ae48:	8b 00                	mov    (%eax),%eax$/;"	l
c010ae4a	obj/kernel.asm	/^c010ae4a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010ae4d	obj/kernel.asm	/^c010ae4d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010ae50	obj/kernel.asm	/^c010ae50:	6a 00                	push   $0x0$/;"	l
c010ae52	obj/kernel.asm	/^c010ae52:	50                   	push   %eax$/;"	l
c010ae53	obj/kernel.asm	/^c010ae53:	e8 37 89 00 00       	call   c011378f <memset>$/;"	l
c010ae58	obj/kernel.asm	/^c010ae58:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ae5b	obj/kernel.asm	/^c010ae5b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ae5e	obj/kernel.asm	/^c010ae5e:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010ae61	obj/kernel.asm	/^c010ae61:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ae64	obj/kernel.asm	/^c010ae64:	e8 2b 00 00 00       	call   c010ae94 <iobuf_skip>$/;"	l
c010ae69	obj/kernel.asm	/^c010ae69:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ae6c	obj/kernel.asm	/^c010ae6c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ae6f	obj/kernel.asm	/^c010ae6f:	29 45 0c             	sub    %eax,0xc(%ebp)$/;"	l
c010ae72	obj/kernel.asm	/^c010ae72:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010ae76	obj/kernel.asm	/^c010ae76:	74 08                	je     c010ae80 <iobuf_move_zeros+0x5e>$/;"	l
c010ae78	obj/kernel.asm	/^c010ae78:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010ae7b	obj/kernel.asm	/^c010ae7b:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010ae7e	obj/kernel.asm	/^c010ae7e:	89 10                	mov    %edx,(%eax)$/;"	l
c010ae80	obj/kernel.asm	/^c010ae80:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010ae84	obj/kernel.asm	/^c010ae84:	75 07                	jne    c010ae8d <iobuf_move_zeros+0x6b>$/;"	l
c010ae86	obj/kernel.asm	/^c010ae86:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ae8b	obj/kernel.asm	/^c010ae8b:	eb 05                	jmp    c010ae92 <iobuf_move_zeros+0x70>$/;"	l
c010ae8d	obj/kernel.asm	/^c010ae8d:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010ae92	obj/kernel.asm	/^c010ae92:	c9                   	leave  $/;"	l
c010ae93	obj/kernel.asm	/^c010ae93:	c3                   	ret    $/;"	l
c010ae94	obj/kernel.asm	/^c010ae94 <iobuf_skip>:$/;"	l
c010ae94	obj/kernel.asm	/^c010ae94:	55                   	push   %ebp$/;"	l
c010ae95	obj/kernel.asm	/^c010ae95:	89 e5                	mov    %esp,%ebp$/;"	l
c010ae97	obj/kernel.asm	/^c010ae97:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ae9a	obj/kernel.asm	/^c010ae9a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ae9d	obj/kernel.asm	/^c010ae9d:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010aea0	obj/kernel.asm	/^c010aea0:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010aea3	obj/kernel.asm	/^c010aea3:	73 16                	jae    c010aebb <iobuf_skip+0x27>$/;"	l
c010aea5	obj/kernel.asm	/^c010aea5:	68 48 68 11 c0       	push   $0xc0116848$/;"	l
c010aeaa	obj/kernel.asm	/^c010aeaa:	68 5b 68 11 c0       	push   $0xc011685b$/;"	l
c010aeaf	obj/kernel.asm	/^c010aeaf:	6a 4a                	push   $0x4a$/;"	l
c010aeb1	obj/kernel.asm	/^c010aeb1:	68 70 68 11 c0       	push   $0xc0116870$/;"	l
c010aeb6	obj/kernel.asm	/^c010aeb6:	e8 14 56 ff ff       	call   c01004cf <__panic>$/;"	l
c010aebb	obj/kernel.asm	/^c010aebb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aebe	obj/kernel.asm	/^c010aebe:	8b 10                	mov    (%eax),%edx$/;"	l
c010aec0	obj/kernel.asm	/^c010aec0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aec3	obj/kernel.asm	/^c010aec3:	01 c2                	add    %eax,%edx$/;"	l
c010aec5	obj/kernel.asm	/^c010aec5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aec8	obj/kernel.asm	/^c010aec8:	89 10                	mov    %edx,(%eax)$/;"	l
c010aeca	obj/kernel.asm	/^c010aeca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aecd	obj/kernel.asm	/^c010aecd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010aed0	obj/kernel.asm	/^c010aed0:	89 c2                	mov    %eax,%edx$/;"	l
c010aed2	obj/kernel.asm	/^c010aed2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010aed5	obj/kernel.asm	/^c010aed5:	01 d0                	add    %edx,%eax$/;"	l
c010aed7	obj/kernel.asm	/^c010aed7:	89 c2                	mov    %eax,%edx$/;"	l
c010aed9	obj/kernel.asm	/^c010aed9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aedc	obj/kernel.asm	/^c010aedc:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010aedf	obj/kernel.asm	/^c010aedf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aee2	obj/kernel.asm	/^c010aee2:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010aee5	obj/kernel.asm	/^c010aee5:	2b 45 0c             	sub    0xc(%ebp),%eax$/;"	l
c010aee8	obj/kernel.asm	/^c010aee8:	89 c2                	mov    %eax,%edx$/;"	l
c010aeea	obj/kernel.asm	/^c010aeea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aeed	obj/kernel.asm	/^c010aeed:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010aef0	obj/kernel.asm	/^c010aef0:	c9                   	leave  $/;"	l
c010aef1	obj/kernel.asm	/^c010aef1:	c3                   	ret    $/;"	l
c010aef2	obj/kernel.asm	/^c010aef2 <files_count>:$/;"	l
c010aef2	obj/kernel.asm	/^c010aef2:	55                   	push   %ebp$/;"	l
c010aef3	obj/kernel.asm	/^c010aef3:	89 e5                	mov    %esp,%ebp$/;"	l
c010aef5	obj/kernel.asm	/^c010aef5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aef8	obj/kernel.asm	/^c010aef8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010aefb	obj/kernel.asm	/^c010aefb:	5d                   	pop    %ebp$/;"	l
c010aefc	obj/kernel.asm	/^c010aefc:	c3                   	ret    $/;"	l
c010aefd	obj/kernel.asm	/^c010aefd <fs_init>:$/;"	l
c010aefd	obj/kernel.asm	/^c010aefd:	55                   	push   %ebp$/;"	l
c010aefe	obj/kernel.asm	/^c010aefe:	89 e5                	mov    %esp,%ebp$/;"	l
c010af00	obj/kernel.asm	/^c010af00:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010af03	obj/kernel.asm	/^c010af03:	e8 9b 47 00 00       	call   c010f6a3 <vfs_init>$/;"	l
c010af08	obj/kernel.asm	/^c010af08:	e8 47 55 00 00       	call   c0110454 <dev_init>$/;"	l
c010af0d	obj/kernel.asm	/^c010af0d:	e8 92 55 00 00       	call   c01104a4 <sfs_init>$/;"	l
c010af12	obj/kernel.asm	/^c010af12:	c9                   	leave  $/;"	l
c010af13	obj/kernel.asm	/^c010af13:	c3                   	ret    $/;"	l
c010af14	obj/kernel.asm	/^c010af14 <fs_cleanup>:$/;"	l
c010af14	obj/kernel.asm	/^c010af14:	55                   	push   %ebp$/;"	l
c010af15	obj/kernel.asm	/^c010af15:	89 e5                	mov    %esp,%ebp$/;"	l
c010af17	obj/kernel.asm	/^c010af17:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010af1a	obj/kernel.asm	/^c010af1a:	e8 73 33 00 00       	call   c010e292 <vfs_cleanup>$/;"	l
c010af1f	obj/kernel.asm	/^c010af1f:	c9                   	leave  $/;"	l
c010af20	obj/kernel.asm	/^c010af20:	c3                   	ret    $/;"	l
c010af21	obj/kernel.asm	/^c010af21 <lock_files>:$/;"	l
c010af21	obj/kernel.asm	/^c010af21:	55                   	push   %ebp$/;"	l
c010af22	obj/kernel.asm	/^c010af22:	89 e5                	mov    %esp,%ebp$/;"	l
c010af24	obj/kernel.asm	/^c010af24:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010af27	obj/kernel.asm	/^c010af27:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af2a	obj/kernel.asm	/^c010af2a:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010af2d	obj/kernel.asm	/^c010af2d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010af30	obj/kernel.asm	/^c010af30:	50                   	push   %eax$/;"	l
c010af31	obj/kernel.asm	/^c010af31:	e8 cd e5 ff ff       	call   c0109503 <down>$/;"	l
c010af36	obj/kernel.asm	/^c010af36:	83 c4 10             	add    $0x10,%esp$/;"	l
c010af39	obj/kernel.asm	/^c010af39:	c9                   	leave  $/;"	l
c010af3a	obj/kernel.asm	/^c010af3a:	c3                   	ret    $/;"	l
c010af3b	obj/kernel.asm	/^c010af3b <unlock_files>:$/;"	l
c010af3b	obj/kernel.asm	/^c010af3b:	55                   	push   %ebp$/;"	l
c010af3c	obj/kernel.asm	/^c010af3c:	89 e5                	mov    %esp,%ebp$/;"	l
c010af3e	obj/kernel.asm	/^c010af3e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010af41	obj/kernel.asm	/^c010af41:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010af44	obj/kernel.asm	/^c010af44:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010af47	obj/kernel.asm	/^c010af47:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010af4a	obj/kernel.asm	/^c010af4a:	50                   	push   %eax$/;"	l
c010af4b	obj/kernel.asm	/^c010af4b:	e8 98 e5 ff ff       	call   c01094e8 <up>$/;"	l
c010af50	obj/kernel.asm	/^c010af50:	83 c4 10             	add    $0x10,%esp$/;"	l
c010af53	obj/kernel.asm	/^c010af53:	c9                   	leave  $/;"	l
c010af54	obj/kernel.asm	/^c010af54:	c3                   	ret    $/;"	l
c010af55	obj/kernel.asm	/^c010af55 <files_create>:$/;"	l
c010af55	obj/kernel.asm	/^c010af55:	55                   	push   %ebp$/;"	l
c010af56	obj/kernel.asm	/^c010af56:	89 e5                	mov    %esp,%ebp$/;"	l
c010af58	obj/kernel.asm	/^c010af58:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010af5b	obj/kernel.asm	/^c010af5b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010af5e	obj/kernel.asm	/^c010af5e:	68 00 10 00 00       	push   $0x1000$/;"	l
c010af63	obj/kernel.asm	/^c010af63:	e8 8e c4 ff ff       	call   c01073f6 <kmalloc>$/;"	l
c010af68	obj/kernel.asm	/^c010af68:	83 c4 10             	add    $0x10,%esp$/;"	l
c010af6b	obj/kernel.asm	/^c010af6b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010af6e	obj/kernel.asm	/^c010af6e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010af72	obj/kernel.asm	/^c010af72:	74 45                	je     c010afb9 <files_create+0x64>$/;"	l
c010af74	obj/kernel.asm	/^c010af74:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af77	obj/kernel.asm	/^c010af77:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010af7d	obj/kernel.asm	/^c010af7d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af80	obj/kernel.asm	/^c010af80:	8d 50 18             	lea    0x18(%eax),%edx$/;"	l
c010af83	obj/kernel.asm	/^c010af83:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af86	obj/kernel.asm	/^c010af86:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010af89	obj/kernel.asm	/^c010af89:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af8c	obj/kernel.asm	/^c010af8c:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010af93	obj/kernel.asm	/^c010af93:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010af96	obj/kernel.asm	/^c010af96:	83 c0 0c             	add    $0xc,%eax$/;"	l
c010af99	obj/kernel.asm	/^c010af99:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010af9c	obj/kernel.asm	/^c010af9c:	6a 01                	push   $0x1$/;"	l
c010af9e	obj/kernel.asm	/^c010af9e:	50                   	push   %eax$/;"	l
c010af9f	obj/kernel.asm	/^c010af9f:	e8 d9 e3 ff ff       	call   c010937d <sem_init>$/;"	l
c010afa4	obj/kernel.asm	/^c010afa4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010afa7	obj/kernel.asm	/^c010afa7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010afaa	obj/kernel.asm	/^c010afaa:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010afad	obj/kernel.asm	/^c010afad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010afb0	obj/kernel.asm	/^c010afb0:	50                   	push   %eax$/;"	l
c010afb1	obj/kernel.asm	/^c010afb1:	e8 b8 f0 ff ff       	call   c010a06e <fd_array_init>$/;"	l
c010afb6	obj/kernel.asm	/^c010afb6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010afb9	obj/kernel.asm	/^c010afb9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010afbc	obj/kernel.asm	/^c010afbc:	c9                   	leave  $/;"	l
c010afbd	obj/kernel.asm	/^c010afbd:	c3                   	ret    $/;"	l
c010afbe	obj/kernel.asm	/^c010afbe <files_destroy>:$/;"	l
c010afbe	obj/kernel.asm	/^c010afbe:	55                   	push   %ebp$/;"	l
c010afbf	obj/kernel.asm	/^c010afbf:	89 e5                	mov    %esp,%ebp$/;"	l
c010afc1	obj/kernel.asm	/^c010afc1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010afc4	obj/kernel.asm	/^c010afc4:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010afc8	obj/kernel.asm	/^c010afc8:	74 0f                	je     c010afd9 <files_destroy+0x1b>$/;"	l
c010afca	obj/kernel.asm	/^c010afca:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010afcd	obj/kernel.asm	/^c010afcd:	e8 20 ff ff ff       	call   c010aef2 <files_count>$/;"	l
c010afd2	obj/kernel.asm	/^c010afd2:	83 c4 04             	add    $0x4,%esp$/;"	l
c010afd5	obj/kernel.asm	/^c010afd5:	85 c0                	test   %eax,%eax$/;"	l
c010afd7	obj/kernel.asm	/^c010afd7:	74 16                	je     c010afef <files_destroy+0x31>$/;"	l
c010afd9	obj/kernel.asm	/^c010afd9:	68 80 68 11 c0       	push   $0xc0116880$/;"	l
c010afde	obj/kernel.asm	/^c010afde:	68 ab 68 11 c0       	push   $0xc01168ab$/;"	l
c010afe3	obj/kernel.asm	/^c010afe3:	6a 33                	push   $0x33$/;"	l
c010afe5	obj/kernel.asm	/^c010afe5:	68 c0 68 11 c0       	push   $0xc01168c0$/;"	l
c010afea	obj/kernel.asm	/^c010afea:	e8 e0 54 ff ff       	call   c01004cf <__panic>$/;"	l
c010afef	obj/kernel.asm	/^c010afef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010aff2	obj/kernel.asm	/^c010aff2:	8b 00                	mov    (%eax),%eax$/;"	l
c010aff4	obj/kernel.asm	/^c010aff4:	85 c0                	test   %eax,%eax$/;"	l
c010aff6	obj/kernel.asm	/^c010aff6:	74 11                	je     c010b009 <files_destroy+0x4b>$/;"	l
c010aff8	obj/kernel.asm	/^c010aff8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010affb	obj/kernel.asm	/^c010affb:	8b 00                	mov    (%eax),%eax$/;"	l
c010affd	obj/kernel.asm	/^c010affd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b000	obj/kernel.asm	/^c010b000:	50                   	push   %eax$/;"	l
c010b001	obj/kernel.asm	/^c010b001:	e8 d9 40 00 00       	call   c010f0df <inode_ref_dec>$/;"	l
c010b006	obj/kernel.asm	/^c010b006:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b009	obj/kernel.asm	/^c010b009:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b00c	obj/kernel.asm	/^c010b00c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b00f	obj/kernel.asm	/^c010b00f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b012	obj/kernel.asm	/^c010b012:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b019	obj/kernel.asm	/^c010b019:	eb 3f                	jmp    c010b05a <files_destroy+0x9c>$/;"	l
c010b01b	obj/kernel.asm	/^c010b01b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b01e	obj/kernel.asm	/^c010b01e:	8b 00                	mov    (%eax),%eax$/;"	l
c010b020	obj/kernel.asm	/^c010b020:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010b023	obj/kernel.asm	/^c010b023:	75 0e                	jne    c010b033 <files_destroy+0x75>$/;"	l
c010b025	obj/kernel.asm	/^c010b025:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b028	obj/kernel.asm	/^c010b028:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010b02b	obj/kernel.asm	/^c010b02b:	e8 c9 f2 ff ff       	call   c010a2f9 <fd_array_close>$/;"	l
c010b030	obj/kernel.asm	/^c010b030:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b033	obj/kernel.asm	/^c010b033:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b036	obj/kernel.asm	/^c010b036:	8b 00                	mov    (%eax),%eax$/;"	l
c010b038	obj/kernel.asm	/^c010b038:	85 c0                	test   %eax,%eax$/;"	l
c010b03a	obj/kernel.asm	/^c010b03a:	74 16                	je     c010b052 <files_destroy+0x94>$/;"	l
c010b03c	obj/kernel.asm	/^c010b03c:	68 cd 68 11 c0       	push   $0xc01168cd$/;"	l
c010b041	obj/kernel.asm	/^c010b041:	68 ab 68 11 c0       	push   $0xc01168ab$/;"	l
c010b046	obj/kernel.asm	/^c010b046:	6a 3d                	push   $0x3d$/;"	l
c010b048	obj/kernel.asm	/^c010b048:	68 c0 68 11 c0       	push   $0xc01168c0$/;"	l
c010b04d	obj/kernel.asm	/^c010b04d:	e8 7d 54 ff ff       	call   c01004cf <__panic>$/;"	l
c010b052	obj/kernel.asm	/^c010b052:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010b056	obj/kernel.asm	/^c010b056:	83 45 f0 1c          	addl   $0x1c,-0x10(%ebp)$/;"	l
c010b05a	obj/kernel.asm	/^c010b05a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b05d	obj/kernel.asm	/^c010b05d:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010b062	obj/kernel.asm	/^c010b062:	76 b7                	jbe    c010b01b <files_destroy+0x5d>$/;"	l
c010b064	obj/kernel.asm	/^c010b064:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b067	obj/kernel.asm	/^c010b067:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b06a	obj/kernel.asm	/^c010b06a:	e8 9f c3 ff ff       	call   c010740e <kfree>$/;"	l
c010b06f	obj/kernel.asm	/^c010b06f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b072	obj/kernel.asm	/^c010b072:	c9                   	leave  $/;"	l
c010b073	obj/kernel.asm	/^c010b073:	c3                   	ret    $/;"	l
c010b074	obj/kernel.asm	/^c010b074 <files_closeall>:$/;"	l
c010b074	obj/kernel.asm	/^c010b074:	55                   	push   %ebp$/;"	l
c010b075	obj/kernel.asm	/^c010b075:	89 e5                	mov    %esp,%ebp$/;"	l
c010b077	obj/kernel.asm	/^c010b077:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b07a	obj/kernel.asm	/^c010b07a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b07e	obj/kernel.asm	/^c010b07e:	74 0f                	je     c010b08f <files_closeall+0x1b>$/;"	l
c010b080	obj/kernel.asm	/^c010b080:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b083	obj/kernel.asm	/^c010b083:	e8 6a fe ff ff       	call   c010aef2 <files_count>$/;"	l
c010b088	obj/kernel.asm	/^c010b088:	83 c4 04             	add    $0x4,%esp$/;"	l
c010b08b	obj/kernel.asm	/^c010b08b:	85 c0                	test   %eax,%eax$/;"	l
c010b08d	obj/kernel.asm	/^c010b08d:	7f 16                	jg     c010b0a5 <files_closeall+0x31>$/;"	l
c010b08f	obj/kernel.asm	/^c010b08f:	68 e8 68 11 c0       	push   $0xc01168e8$/;"	l
c010b094	obj/kernel.asm	/^c010b094:	68 ab 68 11 c0       	push   $0xc01168ab$/;"	l
c010b099	obj/kernel.asm	/^c010b099:	6a 45                	push   $0x45$/;"	l
c010b09b	obj/kernel.asm	/^c010b09b:	68 c0 68 11 c0       	push   $0xc01168c0$/;"	l
c010b0a0	obj/kernel.asm	/^c010b0a0:	e8 2a 54 ff ff       	call   c01004cf <__panic>$/;"	l
c010b0a5	obj/kernel.asm	/^c010b0a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b0a8	obj/kernel.asm	/^c010b0a8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b0ab	obj/kernel.asm	/^c010b0ab:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b0ae	obj/kernel.asm	/^c010b0ae:	c7 45 f4 02 00 00 00 	movl   $0x2,-0xc(%ebp)$/;"	l
c010b0b5	obj/kernel.asm	/^c010b0b5:	83 45 f0 38          	addl   $0x38,-0x10(%ebp)$/;"	l
c010b0b9	obj/kernel.asm	/^c010b0b9:	eb 20                	jmp    c010b0db <files_closeall+0x67>$/;"	l
c010b0bb	obj/kernel.asm	/^c010b0bb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b0be	obj/kernel.asm	/^c010b0be:	8b 00                	mov    (%eax),%eax$/;"	l
c010b0c0	obj/kernel.asm	/^c010b0c0:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010b0c3	obj/kernel.asm	/^c010b0c3:	75 0e                	jne    c010b0d3 <files_closeall+0x5f>$/;"	l
c010b0c5	obj/kernel.asm	/^c010b0c5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b0c8	obj/kernel.asm	/^c010b0c8:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010b0cb	obj/kernel.asm	/^c010b0cb:	e8 29 f2 ff ff       	call   c010a2f9 <fd_array_close>$/;"	l
c010b0d0	obj/kernel.asm	/^c010b0d0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b0d3	obj/kernel.asm	/^c010b0d3:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010b0d7	obj/kernel.asm	/^c010b0d7:	83 45 f0 1c          	addl   $0x1c,-0x10(%ebp)$/;"	l
c010b0db	obj/kernel.asm	/^c010b0db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b0de	obj/kernel.asm	/^c010b0de:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010b0e3	obj/kernel.asm	/^c010b0e3:	76 d6                	jbe    c010b0bb <files_closeall+0x47>$/;"	l
c010b0e5	obj/kernel.asm	/^c010b0e5:	c9                   	leave  $/;"	l
c010b0e6	obj/kernel.asm	/^c010b0e6:	c3                   	ret    $/;"	l
c010b0e7	obj/kernel.asm	/^c010b0e7 <dup_fs>:$/;"	l
c010b0e7	obj/kernel.asm	/^c010b0e7:	55                   	push   %ebp$/;"	l
c010b0e8	obj/kernel.asm	/^c010b0e8:	89 e5                	mov    %esp,%ebp$/;"	l
c010b0ea	obj/kernel.asm	/^c010b0ea:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b0ed	obj/kernel.asm	/^c010b0ed:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b0f1	obj/kernel.asm	/^c010b0f1:	74 06                	je     c010b0f9 <dup_fs+0x12>$/;"	l
c010b0f3	obj/kernel.asm	/^c010b0f3:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010b0f7	obj/kernel.asm	/^c010b0f7:	75 16                	jne    c010b10f <dup_fs+0x28>$/;"	l
c010b0f9	obj/kernel.asm	/^c010b0f9:	68 12 69 11 c0       	push   $0xc0116912$/;"	l
c010b0fe	obj/kernel.asm	/^c010b0fe:	68 ab 68 11 c0       	push   $0xc01168ab$/;"	l
c010b103	obj/kernel.asm	/^c010b103:	6a 53                	push   $0x53$/;"	l
c010b105	obj/kernel.asm	/^c010b105:	68 c0 68 11 c0       	push   $0xc01168c0$/;"	l
c010b10a	obj/kernel.asm	/^c010b10a:	e8 c0 53 ff ff       	call   c01004cf <__panic>$/;"	l
c010b10f	obj/kernel.asm	/^c010b10f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b112	obj/kernel.asm	/^c010b112:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b115	obj/kernel.asm	/^c010b115:	e8 d8 fd ff ff       	call   c010aef2 <files_count>$/;"	l
c010b11a	obj/kernel.asm	/^c010b11a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b11d	obj/kernel.asm	/^c010b11d:	85 c0                	test   %eax,%eax$/;"	l
c010b11f	obj/kernel.asm	/^c010b11f:	75 12                	jne    c010b133 <dup_fs+0x4c>$/;"	l
c010b121	obj/kernel.asm	/^c010b121:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b124	obj/kernel.asm	/^c010b124:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b127	obj/kernel.asm	/^c010b127:	e8 c6 fd ff ff       	call   c010aef2 <files_count>$/;"	l
c010b12c	obj/kernel.asm	/^c010b12c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b12f	obj/kernel.asm	/^c010b12f:	85 c0                	test   %eax,%eax$/;"	l
c010b131	obj/kernel.asm	/^c010b131:	7f 16                	jg     c010b149 <dup_fs+0x62>$/;"	l
c010b133	obj/kernel.asm	/^c010b133:	68 30 69 11 c0       	push   $0xc0116930$/;"	l
c010b138	obj/kernel.asm	/^c010b138:	68 ab 68 11 c0       	push   $0xc01168ab$/;"	l
c010b13d	obj/kernel.asm	/^c010b13d:	6a 54                	push   $0x54$/;"	l
c010b13f	obj/kernel.asm	/^c010b13f:	68 c0 68 11 c0       	push   $0xc01168c0$/;"	l
c010b144	obj/kernel.asm	/^c010b144:	e8 86 53 ff ff       	call   c01004cf <__panic>$/;"	l
c010b149	obj/kernel.asm	/^c010b149:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b14c	obj/kernel.asm	/^c010b14c:	8b 10                	mov    (%eax),%edx$/;"	l
c010b14e	obj/kernel.asm	/^c010b14e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b151	obj/kernel.asm	/^c010b151:	89 10                	mov    %edx,(%eax)$/;"	l
c010b153	obj/kernel.asm	/^c010b153:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b156	obj/kernel.asm	/^c010b156:	8b 00                	mov    (%eax),%eax$/;"	l
c010b158	obj/kernel.asm	/^c010b158:	85 c0                	test   %eax,%eax$/;"	l
c010b15a	obj/kernel.asm	/^c010b15a:	74 11                	je     c010b16d <dup_fs+0x86>$/;"	l
c010b15c	obj/kernel.asm	/^c010b15c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b15f	obj/kernel.asm	/^c010b15f:	8b 00                	mov    (%eax),%eax$/;"	l
c010b161	obj/kernel.asm	/^c010b161:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b164	obj/kernel.asm	/^c010b164:	50                   	push   %eax$/;"	l
c010b165	obj/kernel.asm	/^c010b165:	e8 5b 3f 00 00       	call   c010f0c5 <inode_ref_inc>$/;"	l
c010b16a	obj/kernel.asm	/^c010b16a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b16d	obj/kernel.asm	/^c010b16d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b170	obj/kernel.asm	/^c010b170:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b173	obj/kernel.asm	/^c010b173:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b176	obj/kernel.asm	/^c010b176:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010b179	obj/kernel.asm	/^c010b179:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b17c	obj/kernel.asm	/^c010b17c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b17f	obj/kernel.asm	/^c010b17f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010b186	obj/kernel.asm	/^c010b186:	eb 30                	jmp    c010b1b8 <dup_fs+0xd1>$/;"	l
c010b188	obj/kernel.asm	/^c010b188:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b18b	obj/kernel.asm	/^c010b18b:	8b 00                	mov    (%eax),%eax$/;"	l
c010b18d	obj/kernel.asm	/^c010b18d:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010b190	obj/kernel.asm	/^c010b190:	75 1a                	jne    c010b1ac <dup_fs+0xc5>$/;"	l
c010b192	obj/kernel.asm	/^c010b192:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b195	obj/kernel.asm	/^c010b195:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010b19b	obj/kernel.asm	/^c010b19b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b19e	obj/kernel.asm	/^c010b19e:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010b1a1	obj/kernel.asm	/^c010b1a1:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010b1a4	obj/kernel.asm	/^c010b1a4:	e8 c9 f1 ff ff       	call   c010a372 <fd_array_dup>$/;"	l
c010b1a9	obj/kernel.asm	/^c010b1a9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b1ac	obj/kernel.asm	/^c010b1ac:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010b1b0	obj/kernel.asm	/^c010b1b0:	83 45 f0 1c          	addl   $0x1c,-0x10(%ebp)$/;"	l
c010b1b4	obj/kernel.asm	/^c010b1b4:	83 45 ec 1c          	addl   $0x1c,-0x14(%ebp)$/;"	l
c010b1b8	obj/kernel.asm	/^c010b1b8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b1bb	obj/kernel.asm	/^c010b1bb:	3d 90 00 00 00       	cmp    $0x90,%eax$/;"	l
c010b1c0	obj/kernel.asm	/^c010b1c0:	76 c6                	jbe    c010b188 <dup_fs+0xa1>$/;"	l
c010b1c2	obj/kernel.asm	/^c010b1c2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b1c7	obj/kernel.asm	/^c010b1c7:	c9                   	leave  $/;"	l
c010b1c8	obj/kernel.asm	/^c010b1c8:	c3                   	ret    $/;"	l
c010b1c9	obj/kernel.asm	/^c010b1c9 <kernel_thread_entry>:$/;"	l
c010b1c9	obj/kernel.asm	/^c010b1c9:	52                   	push   %edx$/;"	l
c010b1ca	obj/kernel.asm	/^c010b1ca:	ff d3                	call   *%ebx$/;"	l
c010b1cc	obj/kernel.asm	/^c010b1cc:	50                   	push   %eax$/;"	l
c010b1cd	obj/kernel.asm	/^c010b1cd:	e8 e7 0d 00 00       	call   c010bfb9 <do_exit>$/;"	l
c010b1d2	obj/kernel.asm	/^c010b1d2 <switch_to>:$/;"	l
c010b1d2	obj/kernel.asm	/^c010b1d2:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c010b1d6	obj/kernel.asm	/^c010b1d6:	8f 00                	popl   (%eax)$/;"	l
c010b1d8	obj/kernel.asm	/^c010b1d8:	89 60 04             	mov    %esp,0x4(%eax)$/;"	l
c010b1db	obj/kernel.asm	/^c010b1db:	89 58 08             	mov    %ebx,0x8(%eax)$/;"	l
c010b1de	obj/kernel.asm	/^c010b1de:	89 48 0c             	mov    %ecx,0xc(%eax)$/;"	l
c010b1e1	obj/kernel.asm	/^c010b1e1:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010b1e4	obj/kernel.asm	/^c010b1e4:	89 70 14             	mov    %esi,0x14(%eax)$/;"	l
c010b1e7	obj/kernel.asm	/^c010b1e7:	89 78 18             	mov    %edi,0x18(%eax)$/;"	l
c010b1ea	obj/kernel.asm	/^c010b1ea:	89 68 1c             	mov    %ebp,0x1c(%eax)$/;"	l
c010b1ed	obj/kernel.asm	/^c010b1ed:	8b 44 24 04          	mov    0x4(%esp),%eax$/;"	l
c010b1f1	obj/kernel.asm	/^c010b1f1:	8b 68 1c             	mov    0x1c(%eax),%ebp$/;"	l
c010b1f4	obj/kernel.asm	/^c010b1f4:	8b 78 18             	mov    0x18(%eax),%edi$/;"	l
c010b1f7	obj/kernel.asm	/^c010b1f7:	8b 70 14             	mov    0x14(%eax),%esi$/;"	l
c010b1fa	obj/kernel.asm	/^c010b1fa:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010b1fd	obj/kernel.asm	/^c010b1fd:	8b 48 0c             	mov    0xc(%eax),%ecx$/;"	l
c010b200	obj/kernel.asm	/^c010b200:	8b 58 08             	mov    0x8(%eax),%ebx$/;"	l
c010b203	obj/kernel.asm	/^c010b203:	8b 60 04             	mov    0x4(%eax),%esp$/;"	l
c010b206	obj/kernel.asm	/^c010b206:	ff 30                	pushl  (%eax)$/;"	l
c010b208	obj/kernel.asm	/^c010b208:	c3                   	ret    $/;"	l
c010b209	obj/kernel.asm	/^c010b209 <timer_init>:$/;"	l
c010b209	obj/kernel.asm	/^c010b209:	55                   	push   %ebp$/;"	l
c010b20a	obj/kernel.asm	/^c010b20a:	89 e5                	mov    %esp,%ebp$/;"	l
c010b20c	obj/kernel.asm	/^c010b20c:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010b20f	obj/kernel.asm	/^c010b20f:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010b212	obj/kernel.asm	/^c010b212:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b215	obj/kernel.asm	/^c010b215:	89 10                	mov    %edx,(%eax)$/;"	l
c010b217	obj/kernel.asm	/^c010b217:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b21a	obj/kernel.asm	/^c010b21a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010b21d	obj/kernel.asm	/^c010b21d:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b220	obj/kernel.asm	/^c010b220:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b223	obj/kernel.asm	/^c010b223:	83 c0 08             	add    $0x8,%eax$/;"	l
c010b226	obj/kernel.asm	/^c010b226:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010b229	obj/kernel.asm	/^c010b229:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b22c	obj/kernel.asm	/^c010b22c:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010b22f	obj/kernel.asm	/^c010b22f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b232	obj/kernel.asm	/^c010b232:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b235	obj/kernel.asm	/^c010b235:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b238	obj/kernel.asm	/^c010b238:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b23b	obj/kernel.asm	/^c010b23b:	89 10                	mov    %edx,(%eax)$/;"	l
c010b23d	obj/kernel.asm	/^c010b23d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b240	obj/kernel.asm	/^c010b240:	c9                   	leave  $/;"	l
c010b241	obj/kernel.asm	/^c010b241:	c3                   	ret    $/;"	l
c010b242	obj/kernel.asm	/^c010b242 <__intr_save>:$/;"	l
c010b242	obj/kernel.asm	/^c010b242:	55                   	push   %ebp$/;"	l
c010b243	obj/kernel.asm	/^c010b243:	89 e5                	mov    %esp,%ebp$/;"	l
c010b245	obj/kernel.asm	/^c010b245:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b248	obj/kernel.asm	/^c010b248:	9c                   	pushf  $/;"	l
c010b249	obj/kernel.asm	/^c010b249:	58                   	pop    %eax$/;"	l
c010b24a	obj/kernel.asm	/^c010b24a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b24d	obj/kernel.asm	/^c010b24d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b250	obj/kernel.asm	/^c010b250:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010b255	obj/kernel.asm	/^c010b255:	85 c0                	test   %eax,%eax$/;"	l
c010b257	obj/kernel.asm	/^c010b257:	74 0c                	je     c010b265 <__intr_save+0x23>$/;"	l
c010b259	obj/kernel.asm	/^c010b259:	e8 fd 6f ff ff       	call   c010225b <intr_disable>$/;"	l
c010b25e	obj/kernel.asm	/^c010b25e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010b263	obj/kernel.asm	/^c010b263:	eb 05                	jmp    c010b26a <__intr_save+0x28>$/;"	l
c010b265	obj/kernel.asm	/^c010b265:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010b26a	obj/kernel.asm	/^c010b26a:	c9                   	leave  $/;"	l
c010b26b	obj/kernel.asm	/^c010b26b:	c3                   	ret    $/;"	l
c010b26c	obj/kernel.asm	/^c010b26c <__intr_restore>:$/;"	l
c010b26c	obj/kernel.asm	/^c010b26c:	55                   	push   %ebp$/;"	l
c010b26d	obj/kernel.asm	/^c010b26d:	89 e5                	mov    %esp,%ebp$/;"	l
c010b26f	obj/kernel.asm	/^c010b26f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b272	obj/kernel.asm	/^c010b272:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b276	obj/kernel.asm	/^c010b276:	74 05                	je     c010b27d <__intr_restore+0x11>$/;"	l
c010b278	obj/kernel.asm	/^c010b278:	e8 d8 6f ff ff       	call   c0102255 <intr_enable>$/;"	l
c010b27d	obj/kernel.asm	/^c010b27d:	c9                   	leave  $/;"	l
c010b27e	obj/kernel.asm	/^c010b27e:	c3                   	ret    $/;"	l
c010b27f	obj/kernel.asm	/^c010b27f <page2ppn>:$/;"	l
c010b27f	obj/kernel.asm	/^c010b27f:	55                   	push   %ebp$/;"	l
c010b280	obj/kernel.asm	/^c010b280:	89 e5                	mov    %esp,%ebp$/;"	l
c010b282	obj/kernel.asm	/^c010b282:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b285	obj/kernel.asm	/^c010b285:	8b 15 ac 21 15 c0    	mov    0xc01521ac,%edx$/;"	l
c010b28b	obj/kernel.asm	/^c010b28b:	29 d0                	sub    %edx,%eax$/;"	l
c010b28d	obj/kernel.asm	/^c010b28d:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c010b290	obj/kernel.asm	/^c010b290:	69 c0 39 8e e3 38    	imul   $0x38e38e39,%eax,%eax$/;"	l
c010b296	obj/kernel.asm	/^c010b296:	5d                   	pop    %ebp$/;"	l
c010b297	obj/kernel.asm	/^c010b297:	c3                   	ret    $/;"	l
c010b298	obj/kernel.asm	/^c010b298 <page2pa>:$/;"	l
c010b298	obj/kernel.asm	/^c010b298:	55                   	push   %ebp$/;"	l
c010b299	obj/kernel.asm	/^c010b299:	89 e5                	mov    %esp,%ebp$/;"	l
c010b29b	obj/kernel.asm	/^c010b29b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b29e	obj/kernel.asm	/^c010b29e:	e8 dc ff ff ff       	call   c010b27f <page2ppn>$/;"	l
c010b2a3	obj/kernel.asm	/^c010b2a3:	83 c4 04             	add    $0x4,%esp$/;"	l
c010b2a6	obj/kernel.asm	/^c010b2a6:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010b2a9	obj/kernel.asm	/^c010b2a9:	c9                   	leave  $/;"	l
c010b2aa	obj/kernel.asm	/^c010b2aa:	c3                   	ret    $/;"	l
c010b2ab	obj/kernel.asm	/^c010b2ab <pa2page>:$/;"	l
c010b2ab	obj/kernel.asm	/^c010b2ab:	55                   	push   %ebp$/;"	l
c010b2ac	obj/kernel.asm	/^c010b2ac:	89 e5                	mov    %esp,%ebp$/;"	l
c010b2ae	obj/kernel.asm	/^c010b2ae:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b2b1	obj/kernel.asm	/^c010b2b1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b2b4	obj/kernel.asm	/^c010b2b4:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010b2b7	obj/kernel.asm	/^c010b2b7:	89 c2                	mov    %eax,%edx$/;"	l
c010b2b9	obj/kernel.asm	/^c010b2b9:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c010b2be	obj/kernel.asm	/^c010b2be:	39 c2                	cmp    %eax,%edx$/;"	l
c010b2c0	obj/kernel.asm	/^c010b2c0:	72 14                	jb     c010b2d6 <pa2page+0x2b>$/;"	l
c010b2c2	obj/kernel.asm	/^c010b2c2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b2c5	obj/kernel.asm	/^c010b2c5:	68 60 69 11 c0       	push   $0xc0116960$/;"	l
c010b2ca	obj/kernel.asm	/^c010b2ca:	6a 5e                	push   $0x5e$/;"	l
c010b2cc	obj/kernel.asm	/^c010b2cc:	68 7f 69 11 c0       	push   $0xc011697f$/;"	l
c010b2d1	obj/kernel.asm	/^c010b2d1:	e8 f9 51 ff ff       	call   c01004cf <__panic>$/;"	l
c010b2d6	obj/kernel.asm	/^c010b2d6:	8b 0d ac 21 15 c0    	mov    0xc01521ac,%ecx$/;"	l
c010b2dc	obj/kernel.asm	/^c010b2dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b2df	obj/kernel.asm	/^c010b2df:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010b2e2	obj/kernel.asm	/^c010b2e2:	89 c2                	mov    %eax,%edx$/;"	l
c010b2e4	obj/kernel.asm	/^c010b2e4:	89 d0                	mov    %edx,%eax$/;"	l
c010b2e6	obj/kernel.asm	/^c010b2e6:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010b2e9	obj/kernel.asm	/^c010b2e9:	01 d0                	add    %edx,%eax$/;"	l
c010b2eb	obj/kernel.asm	/^c010b2eb:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010b2ee	obj/kernel.asm	/^c010b2ee:	01 c8                	add    %ecx,%eax$/;"	l
c010b2f0	obj/kernel.asm	/^c010b2f0:	c9                   	leave  $/;"	l
c010b2f1	obj/kernel.asm	/^c010b2f1:	c3                   	ret    $/;"	l
c010b2f2	obj/kernel.asm	/^c010b2f2 <page2kva>:$/;"	l
c010b2f2	obj/kernel.asm	/^c010b2f2:	55                   	push   %ebp$/;"	l
c010b2f3	obj/kernel.asm	/^c010b2f3:	89 e5                	mov    %esp,%ebp$/;"	l
c010b2f5	obj/kernel.asm	/^c010b2f5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b2f8	obj/kernel.asm	/^c010b2f8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010b2fb	obj/kernel.asm	/^c010b2fb:	e8 98 ff ff ff       	call   c010b298 <page2pa>$/;"	l
c010b300	obj/kernel.asm	/^c010b300:	83 c4 04             	add    $0x4,%esp$/;"	l
c010b303	obj/kernel.asm	/^c010b303:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b306	obj/kernel.asm	/^c010b306:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b309	obj/kernel.asm	/^c010b309:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010b30c	obj/kernel.asm	/^c010b30c:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b30f	obj/kernel.asm	/^c010b30f:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c010b314	obj/kernel.asm	/^c010b314:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010b317	obj/kernel.asm	/^c010b317:	72 14                	jb     c010b32d <page2kva+0x3b>$/;"	l
c010b319	obj/kernel.asm	/^c010b319:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010b31c	obj/kernel.asm	/^c010b31c:	68 90 69 11 c0       	push   $0xc0116990$/;"	l
c010b321	obj/kernel.asm	/^c010b321:	6a 65                	push   $0x65$/;"	l
c010b323	obj/kernel.asm	/^c010b323:	68 7f 69 11 c0       	push   $0xc011697f$/;"	l
c010b328	obj/kernel.asm	/^c010b328:	e8 a2 51 ff ff       	call   c01004cf <__panic>$/;"	l
c010b32d	obj/kernel.asm	/^c010b32d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b330	obj/kernel.asm	/^c010b330:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c010b335	obj/kernel.asm	/^c010b335:	c9                   	leave  $/;"	l
c010b336	obj/kernel.asm	/^c010b336:	c3                   	ret    $/;"	l
c010b337	obj/kernel.asm	/^c010b337 <kva2page>:$/;"	l
c010b337	obj/kernel.asm	/^c010b337:	55                   	push   %ebp$/;"	l
c010b338	obj/kernel.asm	/^c010b338:	89 e5                	mov    %esp,%ebp$/;"	l
c010b33a	obj/kernel.asm	/^c010b33a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b33d	obj/kernel.asm	/^c010b33d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b340	obj/kernel.asm	/^c010b340:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b343	obj/kernel.asm	/^c010b343:	81 7d f4 ff ff ff bf 	cmpl   $0xbfffffff,-0xc(%ebp)$/;"	l
c010b34a	obj/kernel.asm	/^c010b34a:	77 14                	ja     c010b360 <kva2page+0x29>$/;"	l
c010b34c	obj/kernel.asm	/^c010b34c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010b34f	obj/kernel.asm	/^c010b34f:	68 b4 69 11 c0       	push   $0xc01169b4$/;"	l
c010b354	obj/kernel.asm	/^c010b354:	6a 6a                	push   $0x6a$/;"	l
c010b356	obj/kernel.asm	/^c010b356:	68 7f 69 11 c0       	push   $0xc011697f$/;"	l
c010b35b	obj/kernel.asm	/^c010b35b:	e8 6f 51 ff ff       	call   c01004cf <__panic>$/;"	l
c010b360	obj/kernel.asm	/^c010b360:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b363	obj/kernel.asm	/^c010b363:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010b368	obj/kernel.asm	/^c010b368:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b36b	obj/kernel.asm	/^c010b36b:	50                   	push   %eax$/;"	l
c010b36c	obj/kernel.asm	/^c010b36c:	e8 3a ff ff ff       	call   c010b2ab <pa2page>$/;"	l
c010b371	obj/kernel.asm	/^c010b371:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b374	obj/kernel.asm	/^c010b374:	c9                   	leave  $/;"	l
c010b375	obj/kernel.asm	/^c010b375:	c3                   	ret    $/;"	l
c010b376	obj/kernel.asm	/^c010b376 <mm_count_inc>:$/;"	l
c010b376	obj/kernel.asm	/^c010b376:	55                   	push   %ebp$/;"	l
c010b377	obj/kernel.asm	/^c010b377:	89 e5                	mov    %esp,%ebp$/;"	l
c010b379	obj/kernel.asm	/^c010b379:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b37c	obj/kernel.asm	/^c010b37c:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b37f	obj/kernel.asm	/^c010b37f:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010b382	obj/kernel.asm	/^c010b382:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b385	obj/kernel.asm	/^c010b385:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010b388	obj/kernel.asm	/^c010b388:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b38b	obj/kernel.asm	/^c010b38b:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b38e	obj/kernel.asm	/^c010b38e:	5d                   	pop    %ebp$/;"	l
c010b38f	obj/kernel.asm	/^c010b38f:	c3                   	ret    $/;"	l
c010b390	obj/kernel.asm	/^c010b390 <mm_count_dec>:$/;"	l
c010b390	obj/kernel.asm	/^c010b390:	55                   	push   %ebp$/;"	l
c010b391	obj/kernel.asm	/^c010b391:	89 e5                	mov    %esp,%ebp$/;"	l
c010b393	obj/kernel.asm	/^c010b393:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b396	obj/kernel.asm	/^c010b396:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b399	obj/kernel.asm	/^c010b399:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010b39c	obj/kernel.asm	/^c010b39c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b39f	obj/kernel.asm	/^c010b39f:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010b3a2	obj/kernel.asm	/^c010b3a2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b3a5	obj/kernel.asm	/^c010b3a5:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010b3a8	obj/kernel.asm	/^c010b3a8:	5d                   	pop    %ebp$/;"	l
c010b3a9	obj/kernel.asm	/^c010b3a9:	c3                   	ret    $/;"	l
c010b3aa	obj/kernel.asm	/^c010b3aa <lock_mm>:$/;"	l
c010b3aa	obj/kernel.asm	/^c010b3aa:	55                   	push   %ebp$/;"	l
c010b3ab	obj/kernel.asm	/^c010b3ab:	89 e5                	mov    %esp,%ebp$/;"	l
c010b3ad	obj/kernel.asm	/^c010b3ad:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b3b0	obj/kernel.asm	/^c010b3b0:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b3b4	obj/kernel.asm	/^c010b3b4:	74 29                	je     c010b3df <lock_mm+0x35>$/;"	l
c010b3b6	obj/kernel.asm	/^c010b3b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b3b9	obj/kernel.asm	/^c010b3b9:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010b3bc	obj/kernel.asm	/^c010b3bc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b3bf	obj/kernel.asm	/^c010b3bf:	50                   	push   %eax$/;"	l
c010b3c0	obj/kernel.asm	/^c010b3c0:	e8 3e e1 ff ff       	call   c0109503 <down>$/;"	l
c010b3c5	obj/kernel.asm	/^c010b3c5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b3c8	obj/kernel.asm	/^c010b3c8:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010b3cd	obj/kernel.asm	/^c010b3cd:	85 c0                	test   %eax,%eax$/;"	l
c010b3cf	obj/kernel.asm	/^c010b3cf:	74 0e                	je     c010b3df <lock_mm+0x35>$/;"	l
c010b3d1	obj/kernel.asm	/^c010b3d1:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010b3d6	obj/kernel.asm	/^c010b3d6:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b3d9	obj/kernel.asm	/^c010b3d9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b3dc	obj/kernel.asm	/^c010b3dc:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
c010b3df	obj/kernel.asm	/^c010b3df:	c9                   	leave  $/;"	l
c010b3e0	obj/kernel.asm	/^c010b3e0:	c3                   	ret    $/;"	l
c010b3e1	obj/kernel.asm	/^c010b3e1 <unlock_mm>:$/;"	l
c010b3e1	obj/kernel.asm	/^c010b3e1:	55                   	push   %ebp$/;"	l
c010b3e2	obj/kernel.asm	/^c010b3e2:	89 e5                	mov    %esp,%ebp$/;"	l
c010b3e4	obj/kernel.asm	/^c010b3e4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b3e7	obj/kernel.asm	/^c010b3e7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b3eb	obj/kernel.asm	/^c010b3eb:	74 1c                	je     c010b409 <unlock_mm+0x28>$/;"	l
c010b3ed	obj/kernel.asm	/^c010b3ed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b3f0	obj/kernel.asm	/^c010b3f0:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010b3f3	obj/kernel.asm	/^c010b3f3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b3f6	obj/kernel.asm	/^c010b3f6:	50                   	push   %eax$/;"	l
c010b3f7	obj/kernel.asm	/^c010b3f7:	e8 ec e0 ff ff       	call   c01094e8 <up>$/;"	l
c010b3fc	obj/kernel.asm	/^c010b3fc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b3ff	obj/kernel.asm	/^c010b3ff:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b402	obj/kernel.asm	/^c010b402:	c7 40 28 00 00 00 00 	movl   $0x0,0x28(%eax)$/;"	l
c010b409	obj/kernel.asm	/^c010b409:	c9                   	leave  $/;"	l
c010b40a	obj/kernel.asm	/^c010b40a:	c3                   	ret    $/;"	l
c010b40b	obj/kernel.asm	/^c010b40b <files_count_inc>:$/;"	l
c010b40b	obj/kernel.asm	/^c010b40b:	55                   	push   %ebp$/;"	l
c010b40c	obj/kernel.asm	/^c010b40c:	89 e5                	mov    %esp,%ebp$/;"	l
c010b40e	obj/kernel.asm	/^c010b40e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b411	obj/kernel.asm	/^c010b411:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010b414	obj/kernel.asm	/^c010b414:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010b417	obj/kernel.asm	/^c010b417:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b41a	obj/kernel.asm	/^c010b41a:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010b41d	obj/kernel.asm	/^c010b41d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b420	obj/kernel.asm	/^c010b420:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010b423	obj/kernel.asm	/^c010b423:	5d                   	pop    %ebp$/;"	l
c010b424	obj/kernel.asm	/^c010b424:	c3                   	ret    $/;"	l
c010b425	obj/kernel.asm	/^c010b425 <files_count_dec>:$/;"	l
c010b425	obj/kernel.asm	/^c010b425:	55                   	push   %ebp$/;"	l
c010b426	obj/kernel.asm	/^c010b426:	89 e5                	mov    %esp,%ebp$/;"	l
c010b428	obj/kernel.asm	/^c010b428:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b42b	obj/kernel.asm	/^c010b42b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010b42e	obj/kernel.asm	/^c010b42e:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010b431	obj/kernel.asm	/^c010b431:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b434	obj/kernel.asm	/^c010b434:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010b437	obj/kernel.asm	/^c010b437:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b43a	obj/kernel.asm	/^c010b43a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010b43d	obj/kernel.asm	/^c010b43d:	5d                   	pop    %ebp$/;"	l
c010b43e	obj/kernel.asm	/^c010b43e:	c3                   	ret    $/;"	l
c010b43f	obj/kernel.asm	/^c010b43f <alloc_proc>:$/;"	l
c010b43f	obj/kernel.asm	/^c010b43f:	55                   	push   %ebp$/;"	l
c010b440	obj/kernel.asm	/^c010b440:	89 e5                	mov    %esp,%ebp$/;"	l
c010b442	obj/kernel.asm	/^c010b442:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b445	obj/kernel.asm	/^c010b445:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b448	obj/kernel.asm	/^c010b448:	68 c8 00 00 00       	push   $0xc8$/;"	l
c010b44d	obj/kernel.asm	/^c010b44d:	e8 a4 bf ff ff       	call   c01073f6 <kmalloc>$/;"	l
c010b452	obj/kernel.asm	/^c010b452:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b455	obj/kernel.asm	/^c010b455:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b458	obj/kernel.asm	/^c010b458:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010b45c	obj/kernel.asm	/^c010b45c:	0f 84 60 01 00 00    	je     c010b5c2 <alloc_proc+0x183>$/;"	l
c010b462	obj/kernel.asm	/^c010b462:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b465	obj/kernel.asm	/^c010b465:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010b46b	obj/kernel.asm	/^c010b46b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b46e	obj/kernel.asm	/^c010b46e:	c7 40 04 ff ff ff ff 	movl   $0xffffffff,0x4(%eax)$/;"	l
c010b475	obj/kernel.asm	/^c010b475:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b478	obj/kernel.asm	/^c010b478:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010b47f	obj/kernel.asm	/^c010b47f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b482	obj/kernel.asm	/^c010b482:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%eax)$/;"	l
c010b489	obj/kernel.asm	/^c010b489:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b48c	obj/kernel.asm	/^c010b48c:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010b493	obj/kernel.asm	/^c010b493:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b496	obj/kernel.asm	/^c010b496:	c7 40 14 00 00 00 00 	movl   $0x0,0x14(%eax)$/;"	l
c010b49d	obj/kernel.asm	/^c010b49d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b4a0	obj/kernel.asm	/^c010b4a0:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010b4a7	obj/kernel.asm	/^c010b4a7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b4aa	obj/kernel.asm	/^c010b4aa:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010b4ad	obj/kernel.asm	/^c010b4ad:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b4b0	obj/kernel.asm	/^c010b4b0:	6a 20                	push   $0x20$/;"	l
c010b4b2	obj/kernel.asm	/^c010b4b2:	6a 00                	push   $0x0$/;"	l
c010b4b4	obj/kernel.asm	/^c010b4b4:	50                   	push   %eax$/;"	l
c010b4b5	obj/kernel.asm	/^c010b4b5:	e8 d5 82 00 00       	call   c011378f <memset>$/;"	l
c010b4ba	obj/kernel.asm	/^c010b4ba:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b4bd	obj/kernel.asm	/^c010b4bd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b4c0	obj/kernel.asm	/^c010b4c0:	c7 40 3c 00 00 00 00 	movl   $0x0,0x3c(%eax)$/;"	l
c010b4c7	obj/kernel.asm	/^c010b4c7:	8b 15 a8 21 15 c0    	mov    0xc01521a8,%edx$/;"	l
c010b4cd	obj/kernel.asm	/^c010b4cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b4d0	obj/kernel.asm	/^c010b4d0:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010b4d3	obj/kernel.asm	/^c010b4d3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b4d6	obj/kernel.asm	/^c010b4d6:	c7 40 44 00 00 00 00 	movl   $0x0,0x44(%eax)$/;"	l
c010b4dd	obj/kernel.asm	/^c010b4dd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b4e0	obj/kernel.asm	/^c010b4e0:	83 c0 48             	add    $0x48,%eax$/;"	l
c010b4e3	obj/kernel.asm	/^c010b4e3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b4e6	obj/kernel.asm	/^c010b4e6:	6a 32                	push   $0x32$/;"	l
c010b4e8	obj/kernel.asm	/^c010b4e8:	6a 00                	push   $0x0$/;"	l
c010b4ea	obj/kernel.asm	/^c010b4ea:	50                   	push   %eax$/;"	l
c010b4eb	obj/kernel.asm	/^c010b4eb:	e8 9f 82 00 00       	call   c011378f <memset>$/;"	l
c010b4f0	obj/kernel.asm	/^c010b4f0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b4f3	obj/kernel.asm	/^c010b4f3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b4f6	obj/kernel.asm	/^c010b4f6:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%eax)$/;"	l
c010b4fd	obj/kernel.asm	/^c010b4fd:	00 00 00 $/;"	l
c010b500	obj/kernel.asm	/^c010b500:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b503	obj/kernel.asm	/^c010b503:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%eax)$/;"	l
c010b50a	obj/kernel.asm	/^c010b50a:	00 00 00 $/;"	l
c010b50d	obj/kernel.asm	/^c010b50d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b510	obj/kernel.asm	/^c010b510:	8b 90 98 00 00 00    	mov    0x98(%eax),%edx$/;"	l
c010b516	obj/kernel.asm	/^c010b516:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b519	obj/kernel.asm	/^c010b519:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010b51f	obj/kernel.asm	/^c010b51f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b522	obj/kernel.asm	/^c010b522:	8b 90 9c 00 00 00    	mov    0x9c(%eax),%edx$/;"	l
c010b528	obj/kernel.asm	/^c010b528:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b52b	obj/kernel.asm	/^c010b52b:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010b531	obj/kernel.asm	/^c010b531:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b534	obj/kernel.asm	/^c010b534:	c7 80 a0 00 00 00 00 	movl   $0x0,0xa0(%eax)$/;"	l
c010b53b	obj/kernel.asm	/^c010b53b:	00 00 00 $/;"	l
c010b53e	obj/kernel.asm	/^c010b53e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b541	obj/kernel.asm	/^c010b541:	c7 80 a8 00 00 00 00 	movl   $0x0,0xa8(%eax)$/;"	l
c010b548	obj/kernel.asm	/^c010b548:	00 00 00 $/;"	l
c010b54b	obj/kernel.asm	/^c010b54b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b54e	obj/kernel.asm	/^c010b54e:	8b 90 a8 00 00 00    	mov    0xa8(%eax),%edx$/;"	l
c010b554	obj/kernel.asm	/^c010b554:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b557	obj/kernel.asm	/^c010b557:	89 90 a4 00 00 00    	mov    %edx,0xa4(%eax)$/;"	l
c010b55d	obj/kernel.asm	/^c010b55d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b560	obj/kernel.asm	/^c010b560:	c7 80 ac 00 00 00 00 	movl   $0x0,0xac(%eax)$/;"	l
c010b567	obj/kernel.asm	/^c010b567:	00 00 00 $/;"	l
c010b56a	obj/kernel.asm	/^c010b56a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b56d	obj/kernel.asm	/^c010b56d:	c7 80 b0 00 00 00 00 	movl   $0x0,0xb0(%eax)$/;"	l
c010b574	obj/kernel.asm	/^c010b574:	00 00 00 $/;"	l
c010b577	obj/kernel.asm	/^c010b577:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b57a	obj/kernel.asm	/^c010b57a:	8b 90 b0 00 00 00    	mov    0xb0(%eax),%edx$/;"	l
c010b580	obj/kernel.asm	/^c010b580:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b583	obj/kernel.asm	/^c010b583:	89 90 b8 00 00 00    	mov    %edx,0xb8(%eax)$/;"	l
c010b589	obj/kernel.asm	/^c010b589:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b58c	obj/kernel.asm	/^c010b58c:	8b 90 b8 00 00 00    	mov    0xb8(%eax),%edx$/;"	l
c010b592	obj/kernel.asm	/^c010b592:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b595	obj/kernel.asm	/^c010b595:	89 90 b4 00 00 00    	mov    %edx,0xb4(%eax)$/;"	l
c010b59b	obj/kernel.asm	/^c010b59b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b59e	obj/kernel.asm	/^c010b59e:	c7 80 bc 00 00 00 00 	movl   $0x0,0xbc(%eax)$/;"	l
c010b5a5	obj/kernel.asm	/^c010b5a5:	00 00 00 $/;"	l
c010b5a8	obj/kernel.asm	/^c010b5a8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b5ab	obj/kernel.asm	/^c010b5ab:	c7 80 c0 00 00 00 00 	movl   $0x0,0xc0(%eax)$/;"	l
c010b5b2	obj/kernel.asm	/^c010b5b2:	00 00 00 $/;"	l
c010b5b5	obj/kernel.asm	/^c010b5b5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b5b8	obj/kernel.asm	/^c010b5b8:	c7 80 c4 00 00 00 00 	movl   $0x0,0xc4(%eax)$/;"	l
c010b5bf	obj/kernel.asm	/^c010b5bf:	00 00 00 $/;"	l
c010b5c2	obj/kernel.asm	/^c010b5c2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b5c5	obj/kernel.asm	/^c010b5c5:	c9                   	leave  $/;"	l
c010b5c6	obj/kernel.asm	/^c010b5c6:	c3                   	ret    $/;"	l
c010b5c7	obj/kernel.asm	/^c010b5c7 <set_proc_name>:$/;"	l
c010b5c7	obj/kernel.asm	/^c010b5c7:	55                   	push   %ebp$/;"	l
c010b5c8	obj/kernel.asm	/^c010b5c8:	89 e5                	mov    %esp,%ebp$/;"	l
c010b5ca	obj/kernel.asm	/^c010b5ca:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b5cd	obj/kernel.asm	/^c010b5cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b5d0	obj/kernel.asm	/^c010b5d0:	83 c0 48             	add    $0x48,%eax$/;"	l
c010b5d3	obj/kernel.asm	/^c010b5d3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b5d6	obj/kernel.asm	/^c010b5d6:	6a 33                	push   $0x33$/;"	l
c010b5d8	obj/kernel.asm	/^c010b5d8:	6a 00                	push   $0x0$/;"	l
c010b5da	obj/kernel.asm	/^c010b5da:	50                   	push   %eax$/;"	l
c010b5db	obj/kernel.asm	/^c010b5db:	e8 af 81 00 00       	call   c011378f <memset>$/;"	l
c010b5e0	obj/kernel.asm	/^c010b5e0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b5e3	obj/kernel.asm	/^c010b5e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b5e6	obj/kernel.asm	/^c010b5e6:	83 c0 48             	add    $0x48,%eax$/;"	l
c010b5e9	obj/kernel.asm	/^c010b5e9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b5ec	obj/kernel.asm	/^c010b5ec:	6a 32                	push   $0x32$/;"	l
c010b5ee	obj/kernel.asm	/^c010b5ee:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010b5f1	obj/kernel.asm	/^c010b5f1:	50                   	push   %eax$/;"	l
c010b5f2	obj/kernel.asm	/^c010b5f2:	e8 7b 82 00 00       	call   c0113872 <memcpy>$/;"	l
c010b5f7	obj/kernel.asm	/^c010b5f7:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b5fa	obj/kernel.asm	/^c010b5fa:	c9                   	leave  $/;"	l
c010b5fb	obj/kernel.asm	/^c010b5fb:	c3                   	ret    $/;"	l
c010b5fc	obj/kernel.asm	/^c010b5fc <get_proc_name>:$/;"	l
c010b5fc	obj/kernel.asm	/^c010b5fc:	55                   	push   %ebp$/;"	l
c010b5fd	obj/kernel.asm	/^c010b5fd:	89 e5                	mov    %esp,%ebp$/;"	l
c010b5ff	obj/kernel.asm	/^c010b5ff:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b602	obj/kernel.asm	/^c010b602:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b605	obj/kernel.asm	/^c010b605:	6a 33                	push   $0x33$/;"	l
c010b607	obj/kernel.asm	/^c010b607:	6a 00                	push   $0x0$/;"	l
c010b609	obj/kernel.asm	/^c010b609:	68 e0 10 15 c0       	push   $0xc01510e0$/;"	l
c010b60e	obj/kernel.asm	/^c010b60e:	e8 7c 81 00 00       	call   c011378f <memset>$/;"	l
c010b613	obj/kernel.asm	/^c010b613:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b616	obj/kernel.asm	/^c010b616:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b619	obj/kernel.asm	/^c010b619:	83 c0 48             	add    $0x48,%eax$/;"	l
c010b61c	obj/kernel.asm	/^c010b61c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010b61f	obj/kernel.asm	/^c010b61f:	6a 32                	push   $0x32$/;"	l
c010b621	obj/kernel.asm	/^c010b621:	50                   	push   %eax$/;"	l
c010b622	obj/kernel.asm	/^c010b622:	68 e0 10 15 c0       	push   $0xc01510e0$/;"	l
c010b627	obj/kernel.asm	/^c010b627:	e8 46 82 00 00       	call   c0113872 <memcpy>$/;"	l
c010b62c	obj/kernel.asm	/^c010b62c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b62f	obj/kernel.asm	/^c010b62f:	c9                   	leave  $/;"	l
c010b630	obj/kernel.asm	/^c010b630:	c3                   	ret    $/;"	l
c010b631	obj/kernel.asm	/^c010b631 <set_links>:$/;"	l
c010b631	obj/kernel.asm	/^c010b631:	55                   	push   %ebp$/;"	l
c010b632	obj/kernel.asm	/^c010b632:	89 e5                	mov    %esp,%ebp$/;"	l
c010b634	obj/kernel.asm	/^c010b634:	83 ec 20             	sub    $0x20,%esp$/;"	l
c010b637	obj/kernel.asm	/^c010b637:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b63a	obj/kernel.asm	/^c010b63a:	83 c0 7c             	add    $0x7c,%eax$/;"	l
c010b63d	obj/kernel.asm	/^c010b63d:	c7 45 fc 7c 23 15 c0 	movl   $0xc015237c,-0x4(%ebp)$/;"	l
c010b644	obj/kernel.asm	/^c010b644:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010b647	obj/kernel.asm	/^c010b647:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b64a	obj/kernel.asm	/^c010b64a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b64d	obj/kernel.asm	/^c010b64d:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010b650	obj/kernel.asm	/^c010b650:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b653	obj/kernel.asm	/^c010b653:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b656	obj/kernel.asm	/^c010b656:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b659	obj/kernel.asm	/^c010b659:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010b65c	obj/kernel.asm	/^c010b65c:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c010b65f	obj/kernel.asm	/^c010b65f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b662	obj/kernel.asm	/^c010b662:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c010b665	obj/kernel.asm	/^c010b665:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010b668	obj/kernel.asm	/^c010b668:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b66b	obj/kernel.asm	/^c010b66b:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010b66e	obj/kernel.asm	/^c010b66e:	89 10                	mov    %edx,(%eax)$/;"	l
c010b670	obj/kernel.asm	/^c010b670:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b673	obj/kernel.asm	/^c010b673:	8b 10                	mov    (%eax),%edx$/;"	l
c010b675	obj/kernel.asm	/^c010b675:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b678	obj/kernel.asm	/^c010b678:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b67b	obj/kernel.asm	/^c010b67b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b67e	obj/kernel.asm	/^c010b67e:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010b681	obj/kernel.asm	/^c010b681:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b684	obj/kernel.asm	/^c010b684:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b687	obj/kernel.asm	/^c010b687:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010b68a	obj/kernel.asm	/^c010b68a:	89 10                	mov    %edx,(%eax)$/;"	l
c010b68c	obj/kernel.asm	/^c010b68c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b68f	obj/kernel.asm	/^c010b68f:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%eax)$/;"	l
c010b696	obj/kernel.asm	/^c010b696:	00 00 00 $/;"	l
c010b699	obj/kernel.asm	/^c010b699:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b69c	obj/kernel.asm	/^c010b69c:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010b69f	obj/kernel.asm	/^c010b69f:	8b 90 94 00 00 00    	mov    0x94(%eax),%edx$/;"	l
c010b6a5	obj/kernel.asm	/^c010b6a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b6a8	obj/kernel.asm	/^c010b6a8:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010b6ae	obj/kernel.asm	/^c010b6ae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b6b1	obj/kernel.asm	/^c010b6b1:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010b6b7	obj/kernel.asm	/^c010b6b7:	85 c0                	test   %eax,%eax$/;"	l
c010b6b9	obj/kernel.asm	/^c010b6b9:	74 12                	je     c010b6cd <set_links+0x9c>$/;"	l
c010b6bb	obj/kernel.asm	/^c010b6bb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b6be	obj/kernel.asm	/^c010b6be:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010b6c4	obj/kernel.asm	/^c010b6c4:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b6c7	obj/kernel.asm	/^c010b6c7:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c010b6cd	obj/kernel.asm	/^c010b6cd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b6d0	obj/kernel.asm	/^c010b6d0:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010b6d3	obj/kernel.asm	/^c010b6d3:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b6d6	obj/kernel.asm	/^c010b6d6:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010b6dc	obj/kernel.asm	/^c010b6dc:	a1 c0 10 15 c0       	mov    0xc01510c0,%eax$/;"	l
c010b6e1	obj/kernel.asm	/^c010b6e1:	83 c0 01             	add    $0x1,%eax$/;"	l
c010b6e4	obj/kernel.asm	/^c010b6e4:	a3 c0 10 15 c0       	mov    %eax,0xc01510c0$/;"	l
c010b6e9	obj/kernel.asm	/^c010b6e9:	c9                   	leave  $/;"	l
c010b6ea	obj/kernel.asm	/^c010b6ea:	c3                   	ret    $/;"	l
c010b6eb	obj/kernel.asm	/^c010b6eb <remove_links>:$/;"	l
c010b6eb	obj/kernel.asm	/^c010b6eb:	55                   	push   %ebp$/;"	l
c010b6ec	obj/kernel.asm	/^c010b6ec:	89 e5                	mov    %esp,%ebp$/;"	l
c010b6ee	obj/kernel.asm	/^c010b6ee:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010b6f1	obj/kernel.asm	/^c010b6f1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b6f4	obj/kernel.asm	/^c010b6f4:	83 c0 7c             	add    $0x7c,%eax$/;"	l
c010b6f7	obj/kernel.asm	/^c010b6f7:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010b6fa	obj/kernel.asm	/^c010b6fa:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b6fd	obj/kernel.asm	/^c010b6fd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b700	obj/kernel.asm	/^c010b700:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010b703	obj/kernel.asm	/^c010b703:	8b 12                	mov    (%edx),%edx$/;"	l
c010b705	obj/kernel.asm	/^c010b705:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c010b708	obj/kernel.asm	/^c010b708:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b70b	obj/kernel.asm	/^c010b70b:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010b70e	obj/kernel.asm	/^c010b70e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b711	obj/kernel.asm	/^c010b711:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b714	obj/kernel.asm	/^c010b714:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b717	obj/kernel.asm	/^c010b717:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010b71a	obj/kernel.asm	/^c010b71a:	89 10                	mov    %edx,(%eax)$/;"	l
c010b71c	obj/kernel.asm	/^c010b71c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b71f	obj/kernel.asm	/^c010b71f:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010b725	obj/kernel.asm	/^c010b725:	85 c0                	test   %eax,%eax$/;"	l
c010b727	obj/kernel.asm	/^c010b727:	74 18                	je     c010b741 <remove_links+0x56>$/;"	l
c010b729	obj/kernel.asm	/^c010b729:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b72c	obj/kernel.asm	/^c010b72c:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010b732	obj/kernel.asm	/^c010b732:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b735	obj/kernel.asm	/^c010b735:	8b 92 98 00 00 00    	mov    0x98(%edx),%edx$/;"	l
c010b73b	obj/kernel.asm	/^c010b73b:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c010b741	obj/kernel.asm	/^c010b741:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b744	obj/kernel.asm	/^c010b744:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax$/;"	l
c010b74a	obj/kernel.asm	/^c010b74a:	85 c0                	test   %eax,%eax$/;"	l
c010b74c	obj/kernel.asm	/^c010b74c:	74 1a                	je     c010b768 <remove_links+0x7d>$/;"	l
c010b74e	obj/kernel.asm	/^c010b74e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b751	obj/kernel.asm	/^c010b751:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax$/;"	l
c010b757	obj/kernel.asm	/^c010b757:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b75a	obj/kernel.asm	/^c010b75a:	8b 92 9c 00 00 00    	mov    0x9c(%edx),%edx$/;"	l
c010b760	obj/kernel.asm	/^c010b760:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010b766	obj/kernel.asm	/^c010b766:	eb 15                	jmp    c010b77d <remove_links+0x92>$/;"	l
c010b768	obj/kernel.asm	/^c010b768:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b76b	obj/kernel.asm	/^c010b76b:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010b76e	obj/kernel.asm	/^c010b76e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010b771	obj/kernel.asm	/^c010b771:	8b 92 9c 00 00 00    	mov    0x9c(%edx),%edx$/;"	l
c010b777	obj/kernel.asm	/^c010b777:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010b77d	obj/kernel.asm	/^c010b77d:	a1 c0 10 15 c0       	mov    0xc01510c0,%eax$/;"	l
c010b782	obj/kernel.asm	/^c010b782:	83 e8 01             	sub    $0x1,%eax$/;"	l
c010b785	obj/kernel.asm	/^c010b785:	a3 c0 10 15 c0       	mov    %eax,0xc01510c0$/;"	l
c010b78a	obj/kernel.asm	/^c010b78a:	c9                   	leave  $/;"	l
c010b78b	obj/kernel.asm	/^c010b78b:	c3                   	ret    $/;"	l
c010b78c	obj/kernel.asm	/^c010b78c <get_pid>:$/;"	l
c010b78c	obj/kernel.asm	/^c010b78c:	55                   	push   %ebp$/;"	l
c010b78d	obj/kernel.asm	/^c010b78d:	89 e5                	mov    %esp,%ebp$/;"	l
c010b78f	obj/kernel.asm	/^c010b78f:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010b792	obj/kernel.asm	/^c010b792:	c7 45 f8 7c 23 15 c0 	movl   $0xc015237c,-0x8(%ebp)$/;"	l
c010b799	obj/kernel.asm	/^c010b799:	a1 e4 da 14 c0       	mov    0xc014dae4,%eax$/;"	l
c010b79e	obj/kernel.asm	/^c010b79e:	83 c0 01             	add    $0x1,%eax$/;"	l
c010b7a1	obj/kernel.asm	/^c010b7a1:	a3 e4 da 14 c0       	mov    %eax,0xc014dae4$/;"	l
c010b7a6	obj/kernel.asm	/^c010b7a6:	a1 e4 da 14 c0       	mov    0xc014dae4,%eax$/;"	l
c010b7ab	obj/kernel.asm	/^c010b7ab:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c010b7b0	obj/kernel.asm	/^c010b7b0:	7e 0c                	jle    c010b7be <get_pid+0x32>$/;"	l
c010b7b2	obj/kernel.asm	/^c010b7b2:	c7 05 e4 da 14 c0 01 	movl   $0x1,0xc014dae4$/;"	l
c010b7b9	obj/kernel.asm	/^c010b7b9:	00 00 00 $/;"	l
c010b7bc	obj/kernel.asm	/^c010b7bc:	eb 13                	jmp    c010b7d1 <get_pid+0x45>$/;"	l
c010b7be	obj/kernel.asm	/^c010b7be:	8b 15 e4 da 14 c0    	mov    0xc014dae4,%edx$/;"	l
c010b7c4	obj/kernel.asm	/^c010b7c4:	a1 e8 da 14 c0       	mov    0xc014dae8,%eax$/;"	l
c010b7c9	obj/kernel.asm	/^c010b7c9:	39 c2                	cmp    %eax,%edx$/;"	l
c010b7cb	obj/kernel.asm	/^c010b7cb:	0f 8c ac 00 00 00    	jl     c010b87d <get_pid+0xf1>$/;"	l
c010b7d1	obj/kernel.asm	/^c010b7d1:	c7 05 e8 da 14 c0 00 	movl   $0x2000,0xc014dae8$/;"	l
c010b7d8	obj/kernel.asm	/^c010b7d8:	20 00 00 $/;"	l
c010b7db	obj/kernel.asm	/^c010b7db:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010b7de	obj/kernel.asm	/^c010b7de:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010b7e1	obj/kernel.asm	/^c010b7e1:	eb 7f                	jmp    c010b862 <get_pid+0xd6>$/;"	l
c010b7e3	obj/kernel.asm	/^c010b7e3:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b7e6	obj/kernel.asm	/^c010b7e6:	83 e8 7c             	sub    $0x7c,%eax$/;"	l
c010b7e9	obj/kernel.asm	/^c010b7e9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b7ec	obj/kernel.asm	/^c010b7ec:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b7ef	obj/kernel.asm	/^c010b7ef:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b7f2	obj/kernel.asm	/^c010b7f2:	a1 e4 da 14 c0       	mov    0xc014dae4,%eax$/;"	l
c010b7f7	obj/kernel.asm	/^c010b7f7:	39 c2                	cmp    %eax,%edx$/;"	l
c010b7f9	obj/kernel.asm	/^c010b7f9:	75 3e                	jne    c010b839 <get_pid+0xad>$/;"	l
c010b7fb	obj/kernel.asm	/^c010b7fb:	a1 e4 da 14 c0       	mov    0xc014dae4,%eax$/;"	l
c010b800	obj/kernel.asm	/^c010b800:	83 c0 01             	add    $0x1,%eax$/;"	l
c010b803	obj/kernel.asm	/^c010b803:	a3 e4 da 14 c0       	mov    %eax,0xc014dae4$/;"	l
c010b808	obj/kernel.asm	/^c010b808:	8b 15 e4 da 14 c0    	mov    0xc014dae4,%edx$/;"	l
c010b80e	obj/kernel.asm	/^c010b80e:	a1 e8 da 14 c0       	mov    0xc014dae8,%eax$/;"	l
c010b813	obj/kernel.asm	/^c010b813:	39 c2                	cmp    %eax,%edx$/;"	l
c010b815	obj/kernel.asm	/^c010b815:	7c 4b                	jl     c010b862 <get_pid+0xd6>$/;"	l
c010b817	obj/kernel.asm	/^c010b817:	a1 e4 da 14 c0       	mov    0xc014dae4,%eax$/;"	l
c010b81c	obj/kernel.asm	/^c010b81c:	3d ff 1f 00 00       	cmp    $0x1fff,%eax$/;"	l
c010b821	obj/kernel.asm	/^c010b821:	7e 0a                	jle    c010b82d <get_pid+0xa1>$/;"	l
c010b823	obj/kernel.asm	/^c010b823:	c7 05 e4 da 14 c0 01 	movl   $0x1,0xc014dae4$/;"	l
c010b82a	obj/kernel.asm	/^c010b82a:	00 00 00 $/;"	l
c010b82d	obj/kernel.asm	/^c010b82d:	c7 05 e8 da 14 c0 00 	movl   $0x2000,0xc014dae8$/;"	l
c010b834	obj/kernel.asm	/^c010b834:	20 00 00 $/;"	l
c010b837	obj/kernel.asm	/^c010b837:	eb a2                	jmp    c010b7db <get_pid+0x4f>$/;"	l
c010b839	obj/kernel.asm	/^c010b839:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b83c	obj/kernel.asm	/^c010b83c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b83f	obj/kernel.asm	/^c010b83f:	a1 e4 da 14 c0       	mov    0xc014dae4,%eax$/;"	l
c010b844	obj/kernel.asm	/^c010b844:	39 c2                	cmp    %eax,%edx$/;"	l
c010b846	obj/kernel.asm	/^c010b846:	7e 1a                	jle    c010b862 <get_pid+0xd6>$/;"	l
c010b848	obj/kernel.asm	/^c010b848:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b84b	obj/kernel.asm	/^c010b84b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010b84e	obj/kernel.asm	/^c010b84e:	a1 e8 da 14 c0       	mov    0xc014dae8,%eax$/;"	l
c010b853	obj/kernel.asm	/^c010b853:	39 c2                	cmp    %eax,%edx$/;"	l
c010b855	obj/kernel.asm	/^c010b855:	7d 0b                	jge    c010b862 <get_pid+0xd6>$/;"	l
c010b857	obj/kernel.asm	/^c010b857:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b85a	obj/kernel.asm	/^c010b85a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b85d	obj/kernel.asm	/^c010b85d:	a3 e8 da 14 c0       	mov    %eax,0xc014dae8$/;"	l
c010b862	obj/kernel.asm	/^c010b862:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b865	obj/kernel.asm	/^c010b865:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b868	obj/kernel.asm	/^c010b868:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b86b	obj/kernel.asm	/^c010b86b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b86e	obj/kernel.asm	/^c010b86e:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010b871	obj/kernel.asm	/^c010b871:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b874	obj/kernel.asm	/^c010b874:	3b 45 f8             	cmp    -0x8(%ebp),%eax$/;"	l
c010b877	obj/kernel.asm	/^c010b877:	0f 85 66 ff ff ff    	jne    c010b7e3 <get_pid+0x57>$/;"	l
c010b87d	obj/kernel.asm	/^c010b87d:	a1 e4 da 14 c0       	mov    0xc014dae4,%eax$/;"	l
c010b882	obj/kernel.asm	/^c010b882:	c9                   	leave  $/;"	l
c010b883	obj/kernel.asm	/^c010b883:	c3                   	ret    $/;"	l
c010b884	obj/kernel.asm	/^c010b884 <proc_run>:$/;"	l
c010b884	obj/kernel.asm	/^c010b884:	55                   	push   %ebp$/;"	l
c010b885	obj/kernel.asm	/^c010b885:	89 e5                	mov    %esp,%ebp$/;"	l
c010b887	obj/kernel.asm	/^c010b887:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b88a	obj/kernel.asm	/^c010b88a:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010b88f	obj/kernel.asm	/^c010b88f:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010b892	obj/kernel.asm	/^c010b892:	74 6b                	je     c010b8ff <proc_run+0x7b>$/;"	l
c010b894	obj/kernel.asm	/^c010b894:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010b899	obj/kernel.asm	/^c010b899:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b89c	obj/kernel.asm	/^c010b89c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b89f	obj/kernel.asm	/^c010b89f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b8a2	obj/kernel.asm	/^c010b8a2:	e8 9b f9 ff ff       	call   c010b242 <__intr_save>$/;"	l
c010b8a7	obj/kernel.asm	/^c010b8a7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b8aa	obj/kernel.asm	/^c010b8aa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b8ad	obj/kernel.asm	/^c010b8ad:	a3 88 f0 14 c0       	mov    %eax,0xc014f088$/;"	l
c010b8b2	obj/kernel.asm	/^c010b8b2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b8b5	obj/kernel.asm	/^c010b8b5:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010b8b8	obj/kernel.asm	/^c010b8b8:	05 00 20 00 00       	add    $0x2000,%eax$/;"	l
c010b8bd	obj/kernel.asm	/^c010b8bd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b8c0	obj/kernel.asm	/^c010b8c0:	50                   	push   %eax$/;"	l
c010b8c1	obj/kernel.asm	/^c010b8c1:	e8 f8 7d ff ff       	call   c01036be <load_esp0>$/;"	l
c010b8c6	obj/kernel.asm	/^c010b8c6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b8c9	obj/kernel.asm	/^c010b8c9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b8cc	obj/kernel.asm	/^c010b8cc:	8b 40 40             	mov    0x40(%eax),%eax$/;"	l
c010b8cf	obj/kernel.asm	/^c010b8cf:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b8d2	obj/kernel.asm	/^c010b8d2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010b8d5	obj/kernel.asm	/^c010b8d5:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010b8d8	obj/kernel.asm	/^c010b8d8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b8db	obj/kernel.asm	/^c010b8db:	8d 50 1c             	lea    0x1c(%eax),%edx$/;"	l
c010b8de	obj/kernel.asm	/^c010b8de:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b8e1	obj/kernel.asm	/^c010b8e1:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c010b8e4	obj/kernel.asm	/^c010b8e4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b8e7	obj/kernel.asm	/^c010b8e7:	52                   	push   %edx$/;"	l
c010b8e8	obj/kernel.asm	/^c010b8e8:	50                   	push   %eax$/;"	l
c010b8e9	obj/kernel.asm	/^c010b8e9:	e8 e4 f8 ff ff       	call   c010b1d2 <switch_to>$/;"	l
c010b8ee	obj/kernel.asm	/^c010b8ee:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b8f1	obj/kernel.asm	/^c010b8f1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b8f4	obj/kernel.asm	/^c010b8f4:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010b8f7	obj/kernel.asm	/^c010b8f7:	e8 70 f9 ff ff       	call   c010b26c <__intr_restore>$/;"	l
c010b8fc	obj/kernel.asm	/^c010b8fc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b8ff	obj/kernel.asm	/^c010b8ff:	c9                   	leave  $/;"	l
c010b900	obj/kernel.asm	/^c010b900:	c3                   	ret    $/;"	l
c010b901	obj/kernel.asm	/^c010b901 <forkret>:$/;"	l
c010b901	obj/kernel.asm	/^c010b901:	55                   	push   %ebp$/;"	l
c010b902	obj/kernel.asm	/^c010b902:	89 e5                	mov    %esp,%ebp$/;"	l
c010b904	obj/kernel.asm	/^c010b904:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b907	obj/kernel.asm	/^c010b907:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010b90c	obj/kernel.asm	/^c010b90c:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010b90f	obj/kernel.asm	/^c010b90f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010b912	obj/kernel.asm	/^c010b912:	50                   	push   %eax$/;"	l
c010b913	obj/kernel.asm	/^c010b913:	e8 d8 7b ff ff       	call   c01034f0 <forkrets>$/;"	l
c010b918	obj/kernel.asm	/^c010b918:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b91b	obj/kernel.asm	/^c010b91b:	c9                   	leave  $/;"	l
c010b91c	obj/kernel.asm	/^c010b91c:	c3                   	ret    $/;"	l
c010b91d	obj/kernel.asm	/^c010b91d <hash_proc>:$/;"	l
c010b91d	obj/kernel.asm	/^c010b91d:	55                   	push   %ebp$/;"	l
c010b91e	obj/kernel.asm	/^c010b91e:	89 e5                	mov    %esp,%ebp$/;"	l
c010b920	obj/kernel.asm	/^c010b920:	53                   	push   %ebx$/;"	l
c010b921	obj/kernel.asm	/^c010b921:	83 ec 24             	sub    $0x24,%esp$/;"	l
c010b924	obj/kernel.asm	/^c010b924:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b927	obj/kernel.asm	/^c010b927:	8d 98 84 00 00 00    	lea    0x84(%eax),%ebx$/;"	l
c010b92d	obj/kernel.asm	/^c010b92d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b930	obj/kernel.asm	/^c010b930:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b933	obj/kernel.asm	/^c010b933:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b936	obj/kernel.asm	/^c010b936:	6a 0a                	push   $0xa$/;"	l
c010b938	obj/kernel.asm	/^c010b938:	50                   	push   %eax$/;"	l
c010b939	obj/kernel.asm	/^c010b939:	e8 26 86 00 00       	call   c0113f64 <hash32>$/;"	l
c010b93e	obj/kernel.asm	/^c010b93e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b941	obj/kernel.asm	/^c010b941:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010b944	obj/kernel.asm	/^c010b944:	05 c0 f0 14 c0       	add    $0xc014f0c0,%eax$/;"	l
c010b949	obj/kernel.asm	/^c010b949:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b94c	obj/kernel.asm	/^c010b94c:	89 5d f0             	mov    %ebx,-0x10(%ebp)$/;"	l
c010b94f	obj/kernel.asm	/^c010b94f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b952	obj/kernel.asm	/^c010b952:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010b955	obj/kernel.asm	/^c010b955:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010b958	obj/kernel.asm	/^c010b958:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010b95b	obj/kernel.asm	/^c010b95b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010b95e	obj/kernel.asm	/^c010b95e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b961	obj/kernel.asm	/^c010b961:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010b964	obj/kernel.asm	/^c010b964:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c010b967	obj/kernel.asm	/^c010b967:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010b96a	obj/kernel.asm	/^c010b96a:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c010b96d	obj/kernel.asm	/^c010b96d:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010b970	obj/kernel.asm	/^c010b970:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010b973	obj/kernel.asm	/^c010b973:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010b976	obj/kernel.asm	/^c010b976:	89 10                	mov    %edx,(%eax)$/;"	l
c010b978	obj/kernel.asm	/^c010b978:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010b97b	obj/kernel.asm	/^c010b97b:	8b 10                	mov    (%eax),%edx$/;"	l
c010b97d	obj/kernel.asm	/^c010b97d:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010b980	obj/kernel.asm	/^c010b980:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b983	obj/kernel.asm	/^c010b983:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b986	obj/kernel.asm	/^c010b986:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010b989	obj/kernel.asm	/^c010b989:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b98c	obj/kernel.asm	/^c010b98c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010b98f	obj/kernel.asm	/^c010b98f:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010b992	obj/kernel.asm	/^c010b992:	89 10                	mov    %edx,(%eax)$/;"	l
c010b994	obj/kernel.asm	/^c010b994:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c010b997	obj/kernel.asm	/^c010b997:	c9                   	leave  $/;"	l
c010b998	obj/kernel.asm	/^c010b998:	c3                   	ret    $/;"	l
c010b999	obj/kernel.asm	/^c010b999 <unhash_proc>:$/;"	l
c010b999	obj/kernel.asm	/^c010b999:	55                   	push   %ebp$/;"	l
c010b99a	obj/kernel.asm	/^c010b99a:	89 e5                	mov    %esp,%ebp$/;"	l
c010b99c	obj/kernel.asm	/^c010b99c:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010b99f	obj/kernel.asm	/^c010b99f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b9a2	obj/kernel.asm	/^c010b9a2:	05 84 00 00 00       	add    $0x84,%eax$/;"	l
c010b9a7	obj/kernel.asm	/^c010b9a7:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010b9aa	obj/kernel.asm	/^c010b9aa:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010b9ad	obj/kernel.asm	/^c010b9ad:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010b9b0	obj/kernel.asm	/^c010b9b0:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010b9b3	obj/kernel.asm	/^c010b9b3:	8b 12                	mov    (%edx),%edx$/;"	l
c010b9b5	obj/kernel.asm	/^c010b9b5:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c010b9b8	obj/kernel.asm	/^c010b9b8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010b9bb	obj/kernel.asm	/^c010b9bb:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010b9be	obj/kernel.asm	/^c010b9be:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010b9c1	obj/kernel.asm	/^c010b9c1:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010b9c4	obj/kernel.asm	/^c010b9c4:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010b9c7	obj/kernel.asm	/^c010b9c7:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c010b9ca	obj/kernel.asm	/^c010b9ca:	89 10                	mov    %edx,(%eax)$/;"	l
c010b9cc	obj/kernel.asm	/^c010b9cc:	c9                   	leave  $/;"	l
c010b9cd	obj/kernel.asm	/^c010b9cd:	c3                   	ret    $/;"	l
c010b9ce	obj/kernel.asm	/^c010b9ce <find_proc>:$/;"	l
c010b9ce	obj/kernel.asm	/^c010b9ce:	55                   	push   %ebp$/;"	l
c010b9cf	obj/kernel.asm	/^c010b9cf:	89 e5                	mov    %esp,%ebp$/;"	l
c010b9d1	obj/kernel.asm	/^c010b9d1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010b9d4	obj/kernel.asm	/^c010b9d4:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010b9d8	obj/kernel.asm	/^c010b9d8:	7e 5f                	jle    c010ba39 <find_proc+0x6b>$/;"	l
c010b9da	obj/kernel.asm	/^c010b9da:	81 7d 08 ff 1f 00 00 	cmpl   $0x1fff,0x8(%ebp)$/;"	l
c010b9e1	obj/kernel.asm	/^c010b9e1:	7f 56                	jg     c010ba39 <find_proc+0x6b>$/;"	l
c010b9e3	obj/kernel.asm	/^c010b9e3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010b9e6	obj/kernel.asm	/^c010b9e6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010b9e9	obj/kernel.asm	/^c010b9e9:	6a 0a                	push   $0xa$/;"	l
c010b9eb	obj/kernel.asm	/^c010b9eb:	50                   	push   %eax$/;"	l
c010b9ec	obj/kernel.asm	/^c010b9ec:	e8 73 85 00 00       	call   c0113f64 <hash32>$/;"	l
c010b9f1	obj/kernel.asm	/^c010b9f1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010b9f4	obj/kernel.asm	/^c010b9f4:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010b9f7	obj/kernel.asm	/^c010b9f7:	05 c0 f0 14 c0       	add    $0xc014f0c0,%eax$/;"	l
c010b9fc	obj/kernel.asm	/^c010b9fc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010b9ff	obj/kernel.asm	/^c010b9ff:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ba02	obj/kernel.asm	/^c010ba02:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ba05	obj/kernel.asm	/^c010ba05:	eb 1b                	jmp    c010ba22 <find_proc+0x54>$/;"	l
c010ba07	obj/kernel.asm	/^c010ba07:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ba0a	obj/kernel.asm	/^c010ba0a:	2d 84 00 00 00       	sub    $0x84,%eax$/;"	l
c010ba0f	obj/kernel.asm	/^c010ba0f:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ba12	obj/kernel.asm	/^c010ba12:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ba15	obj/kernel.asm	/^c010ba15:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ba18	obj/kernel.asm	/^c010ba18:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010ba1b	obj/kernel.asm	/^c010ba1b:	75 05                	jne    c010ba22 <find_proc+0x54>$/;"	l
c010ba1d	obj/kernel.asm	/^c010ba1d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ba20	obj/kernel.asm	/^c010ba20:	eb 1c                	jmp    c010ba3e <find_proc+0x70>$/;"	l
c010ba22	obj/kernel.asm	/^c010ba22:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ba25	obj/kernel.asm	/^c010ba25:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ba28	obj/kernel.asm	/^c010ba28:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ba2b	obj/kernel.asm	/^c010ba2b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ba2e	obj/kernel.asm	/^c010ba2e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ba31	obj/kernel.asm	/^c010ba31:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ba34	obj/kernel.asm	/^c010ba34:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010ba37	obj/kernel.asm	/^c010ba37:	75 ce                	jne    c010ba07 <find_proc+0x39>$/;"	l
c010ba39	obj/kernel.asm	/^c010ba39:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ba3e	obj/kernel.asm	/^c010ba3e:	c9                   	leave  $/;"	l
c010ba3f	obj/kernel.asm	/^c010ba3f:	c3                   	ret    $/;"	l
c010ba40	obj/kernel.asm	/^c010ba40 <kernel_thread>:$/;"	l
c010ba40	obj/kernel.asm	/^c010ba40:	55                   	push   %ebp$/;"	l
c010ba41	obj/kernel.asm	/^c010ba41:	89 e5                	mov    %esp,%ebp$/;"	l
c010ba43	obj/kernel.asm	/^c010ba43:	83 ec 58             	sub    $0x58,%esp$/;"	l
c010ba46	obj/kernel.asm	/^c010ba46:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010ba49	obj/kernel.asm	/^c010ba49:	6a 4c                	push   $0x4c$/;"	l
c010ba4b	obj/kernel.asm	/^c010ba4b:	6a 00                	push   $0x0$/;"	l
c010ba4d	obj/kernel.asm	/^c010ba4d:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c010ba50	obj/kernel.asm	/^c010ba50:	50                   	push   %eax$/;"	l
c010ba51	obj/kernel.asm	/^c010ba51:	e8 39 7d 00 00       	call   c011378f <memset>$/;"	l
c010ba56	obj/kernel.asm	/^c010ba56:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ba59	obj/kernel.asm	/^c010ba59:	66 c7 45 e8 08 00    	movw   $0x8,-0x18(%ebp)$/;"	l
c010ba5f	obj/kernel.asm	/^c010ba5f:	66 c7 45 f4 10 00    	movw   $0x10,-0xc(%ebp)$/;"	l
c010ba65	obj/kernel.asm	/^c010ba65:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c010ba69	obj/kernel.asm	/^c010ba69:	66 89 45 d4          	mov    %ax,-0x2c(%ebp)$/;"	l
c010ba6d	obj/kernel.asm	/^c010ba6d:	0f b7 45 d4          	movzwl -0x2c(%ebp),%eax$/;"	l
c010ba71	obj/kernel.asm	/^c010ba71:	66 89 45 d8          	mov    %ax,-0x28(%ebp)$/;"	l
c010ba75	obj/kernel.asm	/^c010ba75:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ba78	obj/kernel.asm	/^c010ba78:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010ba7b	obj/kernel.asm	/^c010ba7b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ba7e	obj/kernel.asm	/^c010ba7e:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010ba81	obj/kernel.asm	/^c010ba81:	b8 c9 b1 10 c0       	mov    $0xc010b1c9,%eax$/;"	l
c010ba86	obj/kernel.asm	/^c010ba86:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010ba89	obj/kernel.asm	/^c010ba89:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010ba8c	obj/kernel.asm	/^c010ba8c:	80 cc 01             	or     $0x1,%ah$/;"	l
c010ba8f	obj/kernel.asm	/^c010ba8f:	89 c2                	mov    %eax,%edx$/;"	l
c010ba91	obj/kernel.asm	/^c010ba91:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010ba94	obj/kernel.asm	/^c010ba94:	8d 45 ac             	lea    -0x54(%ebp),%eax$/;"	l
c010ba97	obj/kernel.asm	/^c010ba97:	50                   	push   %eax$/;"	l
c010ba98	obj/kernel.asm	/^c010ba98:	6a 00                	push   $0x0$/;"	l
c010ba9a	obj/kernel.asm	/^c010ba9a:	52                   	push   %edx$/;"	l
c010ba9b	obj/kernel.asm	/^c010ba9b:	e8 d6 03 00 00       	call   c010be76 <do_fork>$/;"	l
c010baa0	obj/kernel.asm	/^c010baa0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010baa3	obj/kernel.asm	/^c010baa3:	c9                   	leave  $/;"	l
c010baa4	obj/kernel.asm	/^c010baa4:	c3                   	ret    $/;"	l
c010baa5	obj/kernel.asm	/^c010baa5 <setup_kstack>:$/;"	l
c010baa5	obj/kernel.asm	/^c010baa5:	55                   	push   %ebp$/;"	l
c010baa6	obj/kernel.asm	/^c010baa6:	89 e5                	mov    %esp,%ebp$/;"	l
c010baa8	obj/kernel.asm	/^c010baa8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010baab	obj/kernel.asm	/^c010baab:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010baae	obj/kernel.asm	/^c010baae:	6a 02                	push   $0x2$/;"	l
c010bab0	obj/kernel.asm	/^c010bab0:	e8 59 7d ff ff       	call   c010380e <alloc_pages>$/;"	l
c010bab5	obj/kernel.asm	/^c010bab5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bab8	obj/kernel.asm	/^c010bab8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010babb	obj/kernel.asm	/^c010babb:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010babf	obj/kernel.asm	/^c010babf:	74 1d                	je     c010bade <setup_kstack+0x39>$/;"	l
c010bac1	obj/kernel.asm	/^c010bac1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bac4	obj/kernel.asm	/^c010bac4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bac7	obj/kernel.asm	/^c010bac7:	e8 26 f8 ff ff       	call   c010b2f2 <page2kva>$/;"	l
c010bacc	obj/kernel.asm	/^c010bacc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bacf	obj/kernel.asm	/^c010bacf:	89 c2                	mov    %eax,%edx$/;"	l
c010bad1	obj/kernel.asm	/^c010bad1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bad4	obj/kernel.asm	/^c010bad4:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010bad7	obj/kernel.asm	/^c010bad7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010badc	obj/kernel.asm	/^c010badc:	eb 05                	jmp    c010bae3 <setup_kstack+0x3e>$/;"	l
c010bade	obj/kernel.asm	/^c010bade:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010bae3	obj/kernel.asm	/^c010bae3:	c9                   	leave  $/;"	l
c010bae4	obj/kernel.asm	/^c010bae4:	c3                   	ret    $/;"	l
c010bae5	obj/kernel.asm	/^c010bae5 <put_kstack>:$/;"	l
c010bae5	obj/kernel.asm	/^c010bae5:	55                   	push   %ebp$/;"	l
c010bae6	obj/kernel.asm	/^c010bae6:	89 e5                	mov    %esp,%ebp$/;"	l
c010bae8	obj/kernel.asm	/^c010bae8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010baeb	obj/kernel.asm	/^c010baeb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010baee	obj/kernel.asm	/^c010baee:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010baf1	obj/kernel.asm	/^c010baf1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010baf4	obj/kernel.asm	/^c010baf4:	50                   	push   %eax$/;"	l
c010baf5	obj/kernel.asm	/^c010baf5:	e8 3d f8 ff ff       	call   c010b337 <kva2page>$/;"	l
c010bafa	obj/kernel.asm	/^c010bafa:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bafd	obj/kernel.asm	/^c010bafd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010bb00	obj/kernel.asm	/^c010bb00:	6a 02                	push   $0x2$/;"	l
c010bb02	obj/kernel.asm	/^c010bb02:	50                   	push   %eax$/;"	l
c010bb03	obj/kernel.asm	/^c010bb03:	e8 72 7d ff ff       	call   c010387a <free_pages>$/;"	l
c010bb08	obj/kernel.asm	/^c010bb08:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bb0b	obj/kernel.asm	/^c010bb0b:	c9                   	leave  $/;"	l
c010bb0c	obj/kernel.asm	/^c010bb0c:	c3                   	ret    $/;"	l
c010bb0d	obj/kernel.asm	/^c010bb0d <setup_pgdir>:$/;"	l
c010bb0d	obj/kernel.asm	/^c010bb0d:	55                   	push   %ebp$/;"	l
c010bb0e	obj/kernel.asm	/^c010bb0e:	89 e5                	mov    %esp,%ebp$/;"	l
c010bb10	obj/kernel.asm	/^c010bb10:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bb13	obj/kernel.asm	/^c010bb13:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bb16	obj/kernel.asm	/^c010bb16:	6a 01                	push   $0x1$/;"	l
c010bb18	obj/kernel.asm	/^c010bb18:	e8 f1 7c ff ff       	call   c010380e <alloc_pages>$/;"	l
c010bb1d	obj/kernel.asm	/^c010bb1d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bb20	obj/kernel.asm	/^c010bb20:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bb23	obj/kernel.asm	/^c010bb23:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bb27	obj/kernel.asm	/^c010bb27:	75 07                	jne    c010bb30 <setup_pgdir+0x23>$/;"	l
c010bb29	obj/kernel.asm	/^c010bb29:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c010bb2e	obj/kernel.asm	/^c010bb2e:	eb 74                	jmp    c010bba4 <setup_pgdir+0x97>$/;"	l
c010bb30	obj/kernel.asm	/^c010bb30:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bb33	obj/kernel.asm	/^c010bb33:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bb36	obj/kernel.asm	/^c010bb36:	e8 b7 f7 ff ff       	call   c010b2f2 <page2kva>$/;"	l
c010bb3b	obj/kernel.asm	/^c010bb3b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bb3e	obj/kernel.asm	/^c010bb3e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bb41	obj/kernel.asm	/^c010bb41:	a1 c4 ef 14 c0       	mov    0xc014efc4,%eax$/;"	l
c010bb46	obj/kernel.asm	/^c010bb46:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010bb49	obj/kernel.asm	/^c010bb49:	68 00 10 00 00       	push   $0x1000$/;"	l
c010bb4e	obj/kernel.asm	/^c010bb4e:	50                   	push   %eax$/;"	l
c010bb4f	obj/kernel.asm	/^c010bb4f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010bb52	obj/kernel.asm	/^c010bb52:	e8 1b 7d 00 00       	call   c0113872 <memcpy>$/;"	l
c010bb57	obj/kernel.asm	/^c010bb57:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bb5a	obj/kernel.asm	/^c010bb5a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bb5d	obj/kernel.asm	/^c010bb5d:	8d 90 ac 0f 00 00    	lea    0xfac(%eax),%edx$/;"	l
c010bb63	obj/kernel.asm	/^c010bb63:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bb66	obj/kernel.asm	/^c010bb66:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010bb69	obj/kernel.asm	/^c010bb69:	81 7d ec ff ff ff bf 	cmpl   $0xbfffffff,-0x14(%ebp)$/;"	l
c010bb70	obj/kernel.asm	/^c010bb70:	77 17                	ja     c010bb89 <setup_pgdir+0x7c>$/;"	l
c010bb72	obj/kernel.asm	/^c010bb72:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010bb75	obj/kernel.asm	/^c010bb75:	68 b4 69 11 c0       	push   $0xc01169b4$/;"	l
c010bb7a	obj/kernel.asm	/^c010bb7a:	68 39 01 00 00       	push   $0x139$/;"	l
c010bb7f	obj/kernel.asm	/^c010bb7f:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010bb84	obj/kernel.asm	/^c010bb84:	e8 46 49 ff ff       	call   c01004cf <__panic>$/;"	l
c010bb89	obj/kernel.asm	/^c010bb89:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bb8c	obj/kernel.asm	/^c010bb8c:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010bb91	obj/kernel.asm	/^c010bb91:	83 c8 03             	or     $0x3,%eax$/;"	l
c010bb94	obj/kernel.asm	/^c010bb94:	89 02                	mov    %eax,(%edx)$/;"	l
c010bb96	obj/kernel.asm	/^c010bb96:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bb99	obj/kernel.asm	/^c010bb99:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010bb9c	obj/kernel.asm	/^c010bb9c:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010bb9f	obj/kernel.asm	/^c010bb9f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010bba4	obj/kernel.asm	/^c010bba4:	c9                   	leave  $/;"	l
c010bba5	obj/kernel.asm	/^c010bba5:	c3                   	ret    $/;"	l
c010bba6	obj/kernel.asm	/^c010bba6 <put_pgdir>:$/;"	l
c010bba6	obj/kernel.asm	/^c010bba6:	55                   	push   %ebp$/;"	l
c010bba7	obj/kernel.asm	/^c010bba7:	89 e5                	mov    %esp,%ebp$/;"	l
c010bba9	obj/kernel.asm	/^c010bba9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010bbac	obj/kernel.asm	/^c010bbac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bbaf	obj/kernel.asm	/^c010bbaf:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010bbb2	obj/kernel.asm	/^c010bbb2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bbb5	obj/kernel.asm	/^c010bbb5:	50                   	push   %eax$/;"	l
c010bbb6	obj/kernel.asm	/^c010bbb6:	e8 7c f7 ff ff       	call   c010b337 <kva2page>$/;"	l
c010bbbb	obj/kernel.asm	/^c010bbbb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bbbe	obj/kernel.asm	/^c010bbbe:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010bbc1	obj/kernel.asm	/^c010bbc1:	6a 01                	push   $0x1$/;"	l
c010bbc3	obj/kernel.asm	/^c010bbc3:	50                   	push   %eax$/;"	l
c010bbc4	obj/kernel.asm	/^c010bbc4:	e8 b1 7c ff ff       	call   c010387a <free_pages>$/;"	l
c010bbc9	obj/kernel.asm	/^c010bbc9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bbcc	obj/kernel.asm	/^c010bbcc:	c9                   	leave  $/;"	l
c010bbcd	obj/kernel.asm	/^c010bbcd:	c3                   	ret    $/;"	l
c010bbce	obj/kernel.asm	/^c010bbce <copy_mm>:$/;"	l
c010bbce	obj/kernel.asm	/^c010bbce:	55                   	push   %ebp$/;"	l
c010bbcf	obj/kernel.asm	/^c010bbcf:	89 e5                	mov    %esp,%ebp$/;"	l
c010bbd1	obj/kernel.asm	/^c010bbd1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bbd4	obj/kernel.asm	/^c010bbd4:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010bbd9	obj/kernel.asm	/^c010bbd9:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010bbdc	obj/kernel.asm	/^c010bbdc:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010bbdf	obj/kernel.asm	/^c010bbdf:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010bbe3	obj/kernel.asm	/^c010bbe3:	75 0a                	jne    c010bbef <copy_mm+0x21>$/;"	l
c010bbe5	obj/kernel.asm	/^c010bbe5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010bbea	obj/kernel.asm	/^c010bbea:	e9 04 01 00 00       	jmp    c010bcf3 <copy_mm+0x125>$/;"	l
c010bbef	obj/kernel.asm	/^c010bbef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bbf2	obj/kernel.asm	/^c010bbf2:	25 00 01 00 00       	and    $0x100,%eax$/;"	l
c010bbf7	obj/kernel.asm	/^c010bbf7:	85 c0                	test   %eax,%eax$/;"	l
c010bbf9	obj/kernel.asm	/^c010bbf9:	74 0b                	je     c010bc06 <copy_mm+0x38>$/;"	l
c010bbfb	obj/kernel.asm	/^c010bbfb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bbfe	obj/kernel.asm	/^c010bbfe:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bc01	obj/kernel.asm	/^c010bc01:	e9 86 00 00 00       	jmp    c010bc8c <copy_mm+0xbe>$/;"	l
c010bc06	obj/kernel.asm	/^c010bc06:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c010bc0d	obj/kernel.asm	/^c010bc0d:	e8 96 95 ff ff       	call   c01051a8 <mm_create>$/;"	l
c010bc12	obj/kernel.asm	/^c010bc12:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bc15	obj/kernel.asm	/^c010bc15:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bc19	obj/kernel.asm	/^c010bc19:	75 05                	jne    c010bc20 <copy_mm+0x52>$/;"	l
c010bc1b	obj/kernel.asm	/^c010bc1b:	e9 d0 00 00 00       	jmp    c010bcf0 <copy_mm+0x122>$/;"	l
c010bc20	obj/kernel.asm	/^c010bc20:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bc23	obj/kernel.asm	/^c010bc23:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bc26	obj/kernel.asm	/^c010bc26:	e8 e2 fe ff ff       	call   c010bb0d <setup_pgdir>$/;"	l
c010bc2b	obj/kernel.asm	/^c010bc2b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bc2e	obj/kernel.asm	/^c010bc2e:	85 c0                	test   %eax,%eax$/;"	l
c010bc30	obj/kernel.asm	/^c010bc30:	74 05                	je     c010bc37 <copy_mm+0x69>$/;"	l
c010bc32	obj/kernel.asm	/^c010bc32:	e9 ab 00 00 00       	jmp    c010bce2 <copy_mm+0x114>$/;"	l
c010bc37	obj/kernel.asm	/^c010bc37:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bc3a	obj/kernel.asm	/^c010bc3a:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010bc3d	obj/kernel.asm	/^c010bc3d:	e8 68 f7 ff ff       	call   c010b3aa <lock_mm>$/;"	l
c010bc42	obj/kernel.asm	/^c010bc42:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bc45	obj/kernel.asm	/^c010bc45:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010bc48	obj/kernel.asm	/^c010bc48:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010bc4b	obj/kernel.asm	/^c010bc4b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bc4e	obj/kernel.asm	/^c010bc4e:	e8 22 9a ff ff       	call   c0105675 <dup_mmap>$/;"	l
c010bc53	obj/kernel.asm	/^c010bc53:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bc56	obj/kernel.asm	/^c010bc56:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bc59	obj/kernel.asm	/^c010bc59:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bc5c	obj/kernel.asm	/^c010bc5c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010bc5f	obj/kernel.asm	/^c010bc5f:	e8 7d f7 ff ff       	call   c010b3e1 <unlock_mm>$/;"	l
c010bc64	obj/kernel.asm	/^c010bc64:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bc67	obj/kernel.asm	/^c010bc67:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010bc6b	obj/kernel.asm	/^c010bc6b:	74 1f                	je     c010bc8c <copy_mm+0xbe>$/;"	l
c010bc6d	obj/kernel.asm	/^c010bc6d:	90                   	nop$/;"	l
c010bc6e	obj/kernel.asm	/^c010bc6e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bc71	obj/kernel.asm	/^c010bc71:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bc74	obj/kernel.asm	/^c010bc74:	e8 e3 9a ff ff       	call   c010575c <exit_mmap>$/;"	l
c010bc79	obj/kernel.asm	/^c010bc79:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bc7c	obj/kernel.asm	/^c010bc7c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bc7f	obj/kernel.asm	/^c010bc7f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bc82	obj/kernel.asm	/^c010bc82:	e8 1f ff ff ff       	call   c010bba6 <put_pgdir>$/;"	l
c010bc87	obj/kernel.asm	/^c010bc87:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bc8a	obj/kernel.asm	/^c010bc8a:	eb 56                	jmp    c010bce2 <copy_mm+0x114>$/;"	l
c010bc8c	obj/kernel.asm	/^c010bc8c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bc8f	obj/kernel.asm	/^c010bc8f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bc92	obj/kernel.asm	/^c010bc92:	e8 df f6 ff ff       	call   c010b376 <mm_count_inc>$/;"	l
c010bc97	obj/kernel.asm	/^c010bc97:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bc9a	obj/kernel.asm	/^c010bc9a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bc9d	obj/kernel.asm	/^c010bc9d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010bca0	obj/kernel.asm	/^c010bca0:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010bca3	obj/kernel.asm	/^c010bca3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bca6	obj/kernel.asm	/^c010bca6:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010bca9	obj/kernel.asm	/^c010bca9:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010bcac	obj/kernel.asm	/^c010bcac:	81 7d e8 ff ff ff bf 	cmpl   $0xbfffffff,-0x18(%ebp)$/;"	l
c010bcb3	obj/kernel.asm	/^c010bcb3:	77 17                	ja     c010bccc <copy_mm+0xfe>$/;"	l
c010bcb5	obj/kernel.asm	/^c010bcb5:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010bcb8	obj/kernel.asm	/^c010bcb8:	68 b4 69 11 c0       	push   $0xc01169b4$/;"	l
c010bcbd	obj/kernel.asm	/^c010bcbd:	68 68 01 00 00       	push   $0x168$/;"	l
c010bcc2	obj/kernel.asm	/^c010bcc2:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010bcc7	obj/kernel.asm	/^c010bcc7:	e8 03 48 ff ff       	call   c01004cf <__panic>$/;"	l
c010bccc	obj/kernel.asm	/^c010bccc:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010bccf	obj/kernel.asm	/^c010bccf:	8d 90 00 00 00 40    	lea    0x40000000(%eax),%edx$/;"	l
c010bcd5	obj/kernel.asm	/^c010bcd5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010bcd8	obj/kernel.asm	/^c010bcd8:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010bcdb	obj/kernel.asm	/^c010bcdb:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010bce0	obj/kernel.asm	/^c010bce0:	eb 11                	jmp    c010bcf3 <copy_mm+0x125>$/;"	l
c010bce2	obj/kernel.asm	/^c010bce2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bce5	obj/kernel.asm	/^c010bce5:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bce8	obj/kernel.asm	/^c010bce8:	e8 e4 97 ff ff       	call   c01054d1 <mm_destroy>$/;"	l
c010bced	obj/kernel.asm	/^c010bced:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bcf0	obj/kernel.asm	/^c010bcf0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bcf3	obj/kernel.asm	/^c010bcf3:	c9                   	leave  $/;"	l
c010bcf4	obj/kernel.asm	/^c010bcf4:	c3                   	ret    $/;"	l
c010bcf5	obj/kernel.asm	/^c010bcf5 <copy_thread>:$/;"	l
c010bcf5	obj/kernel.asm	/^c010bcf5:	55                   	push   %ebp$/;"	l
c010bcf6	obj/kernel.asm	/^c010bcf6:	89 e5                	mov    %esp,%ebp$/;"	l
c010bcf8	obj/kernel.asm	/^c010bcf8:	57                   	push   %edi$/;"	l
c010bcf9	obj/kernel.asm	/^c010bcf9:	56                   	push   %esi$/;"	l
c010bcfa	obj/kernel.asm	/^c010bcfa:	53                   	push   %ebx$/;"	l
c010bcfb	obj/kernel.asm	/^c010bcfb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bcfe	obj/kernel.asm	/^c010bcfe:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010bd01	obj/kernel.asm	/^c010bd01:	05 b4 1f 00 00       	add    $0x1fb4,%eax$/;"	l
c010bd06	obj/kernel.asm	/^c010bd06:	89 c2                	mov    %eax,%edx$/;"	l
c010bd08	obj/kernel.asm	/^c010bd08:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd0b	obj/kernel.asm	/^c010bd0b:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c010bd0e	obj/kernel.asm	/^c010bd0e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd11	obj/kernel.asm	/^c010bd11:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010bd14	obj/kernel.asm	/^c010bd14:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010bd17	obj/kernel.asm	/^c010bd17:	89 d3                	mov    %edx,%ebx$/;"	l
c010bd19	obj/kernel.asm	/^c010bd19:	ba 4c 00 00 00       	mov    $0x4c,%edx$/;"	l
c010bd1e	obj/kernel.asm	/^c010bd1e:	8b 0b                	mov    (%ebx),%ecx$/;"	l
c010bd20	obj/kernel.asm	/^c010bd20:	89 08                	mov    %ecx,(%eax)$/;"	l
c010bd22	obj/kernel.asm	/^c010bd22:	8b 4c 13 fc          	mov    -0x4(%ebx,%edx,1),%ecx$/;"	l
c010bd26	obj/kernel.asm	/^c010bd26:	89 4c 10 fc          	mov    %ecx,-0x4(%eax,%edx,1)$/;"	l
c010bd2a	obj/kernel.asm	/^c010bd2a:	8d 78 04             	lea    0x4(%eax),%edi$/;"	l
c010bd2d	obj/kernel.asm	/^c010bd2d:	83 e7 fc             	and    $0xfffffffc,%edi$/;"	l
c010bd30	obj/kernel.asm	/^c010bd30:	29 f8                	sub    %edi,%eax$/;"	l
c010bd32	obj/kernel.asm	/^c010bd32:	29 c3                	sub    %eax,%ebx$/;"	l
c010bd34	obj/kernel.asm	/^c010bd34:	01 c2                	add    %eax,%edx$/;"	l
c010bd36	obj/kernel.asm	/^c010bd36:	83 e2 fc             	and    $0xfffffffc,%edx$/;"	l
c010bd39	obj/kernel.asm	/^c010bd39:	89 d0                	mov    %edx,%eax$/;"	l
c010bd3b	obj/kernel.asm	/^c010bd3b:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010bd3e	obj/kernel.asm	/^c010bd3e:	89 de                	mov    %ebx,%esi$/;"	l
c010bd40	obj/kernel.asm	/^c010bd40:	89 c1                	mov    %eax,%ecx$/;"	l
c010bd42	obj/kernel.asm	/^c010bd42:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c010bd44	obj/kernel.asm	/^c010bd44:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd47	obj/kernel.asm	/^c010bd47:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010bd4a	obj/kernel.asm	/^c010bd4a:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)$/;"	l
c010bd51	obj/kernel.asm	/^c010bd51:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd54	obj/kernel.asm	/^c010bd54:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010bd57	obj/kernel.asm	/^c010bd57:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010bd5a	obj/kernel.asm	/^c010bd5a:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010bd5d	obj/kernel.asm	/^c010bd5d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd60	obj/kernel.asm	/^c010bd60:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010bd63	obj/kernel.asm	/^c010bd63:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010bd66	obj/kernel.asm	/^c010bd66:	8b 52 3c             	mov    0x3c(%edx),%edx$/;"	l
c010bd69	obj/kernel.asm	/^c010bd69:	8b 52 40             	mov    0x40(%edx),%edx$/;"	l
c010bd6c	obj/kernel.asm	/^c010bd6c:	80 ce 02             	or     $0x2,%dh$/;"	l
c010bd6f	obj/kernel.asm	/^c010bd6f:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010bd72	obj/kernel.asm	/^c010bd72:	ba 01 b9 10 c0       	mov    $0xc010b901,%edx$/;"	l
c010bd77	obj/kernel.asm	/^c010bd77:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd7a	obj/kernel.asm	/^c010bd7a:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010bd7d	obj/kernel.asm	/^c010bd7d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd80	obj/kernel.asm	/^c010bd80:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010bd83	obj/kernel.asm	/^c010bd83:	89 c2                	mov    %eax,%edx$/;"	l
c010bd85	obj/kernel.asm	/^c010bd85:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bd88	obj/kernel.asm	/^c010bd88:	89 50 20             	mov    %edx,0x20(%eax)$/;"	l
c010bd8b	obj/kernel.asm	/^c010bd8b:	5b                   	pop    %ebx$/;"	l
c010bd8c	obj/kernel.asm	/^c010bd8c:	5e                   	pop    %esi$/;"	l
c010bd8d	obj/kernel.asm	/^c010bd8d:	5f                   	pop    %edi$/;"	l
c010bd8e	obj/kernel.asm	/^c010bd8e:	5d                   	pop    %ebp$/;"	l
c010bd8f	obj/kernel.asm	/^c010bd8f:	c3                   	ret    $/;"	l
c010bd90	obj/kernel.asm	/^c010bd90 <copy_fs>:$/;"	l
c010bd90	obj/kernel.asm	/^c010bd90:	55                   	push   %ebp$/;"	l
c010bd91	obj/kernel.asm	/^c010bd91:	89 e5                	mov    %esp,%ebp$/;"	l
c010bd93	obj/kernel.asm	/^c010bd93:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bd96	obj/kernel.asm	/^c010bd96:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010bd9b	obj/kernel.asm	/^c010bd9b:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010bda1	obj/kernel.asm	/^c010bda1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010bda4	obj/kernel.asm	/^c010bda4:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010bda8	obj/kernel.asm	/^c010bda8:	75 19                	jne    c010bdc3 <copy_fs+0x33>$/;"	l
c010bdaa	obj/kernel.asm	/^c010bdaa:	68 ec 69 11 c0       	push   $0xc01169ec$/;"	l
c010bdaf	obj/kernel.asm	/^c010bdaf:	68 ff 69 11 c0       	push   $0xc01169ff$/;"	l
c010bdb4	obj/kernel.asm	/^c010bdb4:	68 85 01 00 00       	push   $0x185$/;"	l
c010bdb9	obj/kernel.asm	/^c010bdb9:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010bdbe	obj/kernel.asm	/^c010bdbe:	e8 0c 47 ff ff       	call   c01004cf <__panic>$/;"	l
c010bdc3	obj/kernel.asm	/^c010bdc3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010bdc6	obj/kernel.asm	/^c010bdc6:	25 00 08 00 00       	and    $0x800,%eax$/;"	l
c010bdcb	obj/kernel.asm	/^c010bdcb:	85 c0                	test   %eax,%eax$/;"	l
c010bdcd	obj/kernel.asm	/^c010bdcd:	74 08                	je     c010bdd7 <copy_fs+0x47>$/;"	l
c010bdcf	obj/kernel.asm	/^c010bdcf:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010bdd2	obj/kernel.asm	/^c010bdd2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bdd5	obj/kernel.asm	/^c010bdd5:	eb 42                	jmp    c010be19 <copy_fs+0x89>$/;"	l
c010bdd7	obj/kernel.asm	/^c010bdd7:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c010bdde	obj/kernel.asm	/^c010bdde:	e8 72 f1 ff ff       	call   c010af55 <files_create>$/;"	l
c010bde3	obj/kernel.asm	/^c010bde3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bde6	obj/kernel.asm	/^c010bde6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010bdea	obj/kernel.asm	/^c010bdea:	75 02                	jne    c010bdee <copy_fs+0x5e>$/;"	l
c010bdec	obj/kernel.asm	/^c010bdec:	eb 4c                	jmp    c010be3a <copy_fs+0xaa>$/;"	l
c010bdee	obj/kernel.asm	/^c010bdee:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010bdf1	obj/kernel.asm	/^c010bdf1:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010bdf4	obj/kernel.asm	/^c010bdf4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010bdf7	obj/kernel.asm	/^c010bdf7:	e8 eb f2 ff ff       	call   c010b0e7 <dup_fs>$/;"	l
c010bdfc	obj/kernel.asm	/^c010bdfc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bdff	obj/kernel.asm	/^c010bdff:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010be02	obj/kernel.asm	/^c010be02:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010be06	obj/kernel.asm	/^c010be06:	74 11                	je     c010be19 <copy_fs+0x89>$/;"	l
c010be08	obj/kernel.asm	/^c010be08:	90                   	nop$/;"	l
c010be09	obj/kernel.asm	/^c010be09:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010be0c	obj/kernel.asm	/^c010be0c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010be0f	obj/kernel.asm	/^c010be0f:	e8 aa f1 ff ff       	call   c010afbe <files_destroy>$/;"	l
c010be14	obj/kernel.asm	/^c010be14:	83 c4 10             	add    $0x10,%esp$/;"	l
c010be17	obj/kernel.asm	/^c010be17:	eb 21                	jmp    c010be3a <copy_fs+0xaa>$/;"	l
c010be19	obj/kernel.asm	/^c010be19:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010be1c	obj/kernel.asm	/^c010be1c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010be1f	obj/kernel.asm	/^c010be1f:	e8 e7 f5 ff ff       	call   c010b40b <files_count_inc>$/;"	l
c010be24	obj/kernel.asm	/^c010be24:	83 c4 10             	add    $0x10,%esp$/;"	l
c010be27	obj/kernel.asm	/^c010be27:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010be2a	obj/kernel.asm	/^c010be2a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010be2d	obj/kernel.asm	/^c010be2d:	89 90 c4 00 00 00    	mov    %edx,0xc4(%eax)$/;"	l
c010be33	obj/kernel.asm	/^c010be33:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010be38	obj/kernel.asm	/^c010be38:	eb 03                	jmp    c010be3d <copy_fs+0xad>$/;"	l
c010be3a	obj/kernel.asm	/^c010be3a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010be3d	obj/kernel.asm	/^c010be3d:	c9                   	leave  $/;"	l
c010be3e	obj/kernel.asm	/^c010be3e:	c3                   	ret    $/;"	l
c010be3f	obj/kernel.asm	/^c010be3f <put_fs>:$/;"	l
c010be3f	obj/kernel.asm	/^c010be3f:	55                   	push   %ebp$/;"	l
c010be40	obj/kernel.asm	/^c010be40:	89 e5                	mov    %esp,%ebp$/;"	l
c010be42	obj/kernel.asm	/^c010be42:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010be45	obj/kernel.asm	/^c010be45:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010be48	obj/kernel.asm	/^c010be48:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010be4e	obj/kernel.asm	/^c010be4e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010be51	obj/kernel.asm	/^c010be51:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010be55	obj/kernel.asm	/^c010be55:	74 1d                	je     c010be74 <put_fs+0x35>$/;"	l
c010be57	obj/kernel.asm	/^c010be57:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010be5a	obj/kernel.asm	/^c010be5a:	e8 c6 f5 ff ff       	call   c010b425 <files_count_dec>$/;"	l
c010be5f	obj/kernel.asm	/^c010be5f:	83 c4 04             	add    $0x4,%esp$/;"	l
c010be62	obj/kernel.asm	/^c010be62:	85 c0                	test   %eax,%eax$/;"	l
c010be64	obj/kernel.asm	/^c010be64:	75 0e                	jne    c010be74 <put_fs+0x35>$/;"	l
c010be66	obj/kernel.asm	/^c010be66:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010be69	obj/kernel.asm	/^c010be69:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010be6c	obj/kernel.asm	/^c010be6c:	e8 4d f1 ff ff       	call   c010afbe <files_destroy>$/;"	l
c010be71	obj/kernel.asm	/^c010be71:	83 c4 10             	add    $0x10,%esp$/;"	l
c010be74	obj/kernel.asm	/^c010be74:	c9                   	leave  $/;"	l
c010be75	obj/kernel.asm	/^c010be75:	c3                   	ret    $/;"	l
c010be76	obj/kernel.asm	/^c010be76 <do_fork>:$/;"	l
c010be76	obj/kernel.asm	/^c010be76:	55                   	push   %ebp$/;"	l
c010be77	obj/kernel.asm	/^c010be77:	89 e5                	mov    %esp,%ebp$/;"	l
c010be79	obj/kernel.asm	/^c010be79:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010be7c	obj/kernel.asm	/^c010be7c:	c7 45 f4 fb ff ff ff 	movl   $0xfffffffb,-0xc(%ebp)$/;"	l
c010be83	obj/kernel.asm	/^c010be83:	a1 c0 10 15 c0       	mov    0xc01510c0,%eax$/;"	l
c010be88	obj/kernel.asm	/^c010be88:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c010be8d	obj/kernel.asm	/^c010be8d:	7e 05                	jle    c010be94 <do_fork+0x1e>$/;"	l
c010be8f	obj/kernel.asm	/^c010be8f:	e9 00 01 00 00       	jmp    c010bf94 <do_fork+0x11e>$/;"	l
c010be94	obj/kernel.asm	/^c010be94:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010be9b	obj/kernel.asm	/^c010be9b:	e8 9f f5 ff ff       	call   c010b43f <alloc_proc>$/;"	l
c010bea0	obj/kernel.asm	/^c010bea0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010bea3	obj/kernel.asm	/^c010bea3:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010bea7	obj/kernel.asm	/^c010bea7:	75 05                	jne    c010beae <do_fork+0x38>$/;"	l
c010bea9	obj/kernel.asm	/^c010bea9:	e9 e6 00 00 00       	jmp    c010bf94 <do_fork+0x11e>$/;"	l
c010beae	obj/kernel.asm	/^c010beae:	8b 15 88 f0 14 c0    	mov    0xc014f088,%edx$/;"	l
c010beb4	obj/kernel.asm	/^c010beb4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010beb7	obj/kernel.asm	/^c010beb7:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010beba	obj/kernel.asm	/^c010beba:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010bebf	obj/kernel.asm	/^c010bebf:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010bec5	obj/kernel.asm	/^c010bec5:	85 c0                	test   %eax,%eax$/;"	l
c010bec7	obj/kernel.asm	/^c010bec7:	74 19                	je     c010bee2 <do_fork+0x6c>$/;"	l
c010bec9	obj/kernel.asm	/^c010bec9:	68 14 6a 11 c0       	push   $0xc0116a14$/;"	l
c010bece	obj/kernel.asm	/^c010bece:	68 ff 69 11 c0       	push   $0xc01169ff$/;"	l
c010bed3	obj/kernel.asm	/^c010bed3:	68 de 01 00 00       	push   $0x1de$/;"	l
c010bed8	obj/kernel.asm	/^c010bed8:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010bedd	obj/kernel.asm	/^c010bedd:	e8 ed 45 ff ff       	call   c01004cf <__panic>$/;"	l
c010bee2	obj/kernel.asm	/^c010bee2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bee5	obj/kernel.asm	/^c010bee5:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010bee8	obj/kernel.asm	/^c010bee8:	e8 b8 fb ff ff       	call   c010baa5 <setup_kstack>$/;"	l
c010beed	obj/kernel.asm	/^c010beed:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bef0	obj/kernel.asm	/^c010bef0:	85 c0                	test   %eax,%eax$/;"	l
c010bef2	obj/kernel.asm	/^c010bef2:	74 05                	je     c010bef9 <do_fork+0x83>$/;"	l
c010bef4	obj/kernel.asm	/^c010bef4:	e9 ae 00 00 00       	jmp    c010bfa7 <do_fork+0x131>$/;"	l
c010bef9	obj/kernel.asm	/^c010bef9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010befc	obj/kernel.asm	/^c010befc:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010beff	obj/kernel.asm	/^c010beff:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010bf02	obj/kernel.asm	/^c010bf02:	e8 89 fe ff ff       	call   c010bd90 <copy_fs>$/;"	l
c010bf07	obj/kernel.asm	/^c010bf07:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bf0a	obj/kernel.asm	/^c010bf0a:	85 c0                	test   %eax,%eax$/;"	l
c010bf0c	obj/kernel.asm	/^c010bf0c:	74 05                	je     c010bf13 <do_fork+0x9d>$/;"	l
c010bf0e	obj/kernel.asm	/^c010bf0e:	e9 86 00 00 00       	jmp    c010bf99 <do_fork+0x123>$/;"	l
c010bf13	obj/kernel.asm	/^c010bf13:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010bf16	obj/kernel.asm	/^c010bf16:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010bf19	obj/kernel.asm	/^c010bf19:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010bf1c	obj/kernel.asm	/^c010bf1c:	e8 ad fc ff ff       	call   c010bbce <copy_mm>$/;"	l
c010bf21	obj/kernel.asm	/^c010bf21:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bf24	obj/kernel.asm	/^c010bf24:	85 c0                	test   %eax,%eax$/;"	l
c010bf26	obj/kernel.asm	/^c010bf26:	74 02                	je     c010bf2a <do_fork+0xb4>$/;"	l
c010bf28	obj/kernel.asm	/^c010bf28:	eb 6f                	jmp    c010bf99 <do_fork+0x123>$/;"	l
c010bf2a	obj/kernel.asm	/^c010bf2a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010bf2d	obj/kernel.asm	/^c010bf2d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010bf30	obj/kernel.asm	/^c010bf30:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010bf33	obj/kernel.asm	/^c010bf33:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010bf36	obj/kernel.asm	/^c010bf36:	e8 ba fd ff ff       	call   c010bcf5 <copy_thread>$/;"	l
c010bf3b	obj/kernel.asm	/^c010bf3b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bf3e	obj/kernel.asm	/^c010bf3e:	e8 ff f2 ff ff       	call   c010b242 <__intr_save>$/;"	l
c010bf43	obj/kernel.asm	/^c010bf43:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010bf46	obj/kernel.asm	/^c010bf46:	e8 41 f8 ff ff       	call   c010b78c <get_pid>$/;"	l
c010bf4b	obj/kernel.asm	/^c010bf4b:	89 c2                	mov    %eax,%edx$/;"	l
c010bf4d	obj/kernel.asm	/^c010bf4d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bf50	obj/kernel.asm	/^c010bf50:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010bf53	obj/kernel.asm	/^c010bf53:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bf56	obj/kernel.asm	/^c010bf56:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010bf59	obj/kernel.asm	/^c010bf59:	e8 bf f9 ff ff       	call   c010b91d <hash_proc>$/;"	l
c010bf5e	obj/kernel.asm	/^c010bf5e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bf61	obj/kernel.asm	/^c010bf61:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bf64	obj/kernel.asm	/^c010bf64:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010bf67	obj/kernel.asm	/^c010bf67:	e8 c5 f6 ff ff       	call   c010b631 <set_links>$/;"	l
c010bf6c	obj/kernel.asm	/^c010bf6c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bf6f	obj/kernel.asm	/^c010bf6f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bf72	obj/kernel.asm	/^c010bf72:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010bf75	obj/kernel.asm	/^c010bf75:	e8 f2 f2 ff ff       	call   c010b26c <__intr_restore>$/;"	l
c010bf7a	obj/kernel.asm	/^c010bf7a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bf7d	obj/kernel.asm	/^c010bf7d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bf80	obj/kernel.asm	/^c010bf80:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010bf83	obj/kernel.asm	/^c010bf83:	e8 b6 15 00 00       	call   c010d53e <wakeup_proc>$/;"	l
c010bf88	obj/kernel.asm	/^c010bf88:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bf8b	obj/kernel.asm	/^c010bf8b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010bf8e	obj/kernel.asm	/^c010bf8e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010bf91	obj/kernel.asm	/^c010bf91:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010bf94	obj/kernel.asm	/^c010bf94:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010bf97	obj/kernel.asm	/^c010bf97:	eb 1e                	jmp    c010bfb7 <do_fork+0x141>$/;"	l
c010bf99	obj/kernel.asm	/^c010bf99:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bf9c	obj/kernel.asm	/^c010bf9c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010bf9f	obj/kernel.asm	/^c010bf9f:	e8 41 fb ff ff       	call   c010bae5 <put_kstack>$/;"	l
c010bfa4	obj/kernel.asm	/^c010bfa4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bfa7	obj/kernel.asm	/^c010bfa7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010bfaa	obj/kernel.asm	/^c010bfaa:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010bfad	obj/kernel.asm	/^c010bfad:	e8 5c b4 ff ff       	call   c010740e <kfree>$/;"	l
c010bfb2	obj/kernel.asm	/^c010bfb2:	83 c4 10             	add    $0x10,%esp$/;"	l
c010bfb5	obj/kernel.asm	/^c010bfb5:	eb dd                	jmp    c010bf94 <do_fork+0x11e>$/;"	l
c010bfb7	obj/kernel.asm	/^c010bfb7:	c9                   	leave  $/;"	l
c010bfb8	obj/kernel.asm	/^c010bfb8:	c3                   	ret    $/;"	l
c010bfb9	obj/kernel.asm	/^c010bfb9 <do_exit>:$/;"	l
c010bfb9	obj/kernel.asm	/^c010bfb9:	55                   	push   %ebp$/;"	l
c010bfba	obj/kernel.asm	/^c010bfba:	89 e5                	mov    %esp,%ebp$/;"	l
c010bfbc	obj/kernel.asm	/^c010bfbc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010bfbf	obj/kernel.asm	/^c010bfbf:	8b 15 88 f0 14 c0    	mov    0xc014f088,%edx$/;"	l
c010bfc5	obj/kernel.asm	/^c010bfc5:	a1 80 f0 14 c0       	mov    0xc014f080,%eax$/;"	l
c010bfca	obj/kernel.asm	/^c010bfca:	39 c2                	cmp    %eax,%edx$/;"	l
c010bfcc	obj/kernel.asm	/^c010bfcc:	75 17                	jne    c010bfe5 <do_exit+0x2c>$/;"	l
c010bfce	obj/kernel.asm	/^c010bfce:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010bfd1	obj/kernel.asm	/^c010bfd1:	68 2d 6a 11 c0       	push   $0xc0116a2d$/;"	l
c010bfd6	obj/kernel.asm	/^c010bfd6:	68 0b 02 00 00       	push   $0x20b$/;"	l
c010bfdb	obj/kernel.asm	/^c010bfdb:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010bfe0	obj/kernel.asm	/^c010bfe0:	e8 ea 44 ff ff       	call   c01004cf <__panic>$/;"	l
c010bfe5	obj/kernel.asm	/^c010bfe5:	8b 15 88 f0 14 c0    	mov    0xc014f088,%edx$/;"	l
c010bfeb	obj/kernel.asm	/^c010bfeb:	a1 84 f0 14 c0       	mov    0xc014f084,%eax$/;"	l
c010bff0	obj/kernel.asm	/^c010bff0:	39 c2                	cmp    %eax,%edx$/;"	l
c010bff2	obj/kernel.asm	/^c010bff2:	75 17                	jne    c010c00b <do_exit+0x52>$/;"	l
c010bff4	obj/kernel.asm	/^c010bff4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010bff7	obj/kernel.asm	/^c010bff7:	68 3d 6a 11 c0       	push   $0xc0116a3d$/;"	l
c010bffc	obj/kernel.asm	/^c010bffc:	68 0e 02 00 00       	push   $0x20e$/;"	l
c010c001	obj/kernel.asm	/^c010c001:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010c006	obj/kernel.asm	/^c010c006:	e8 c4 44 ff ff       	call   c01004cf <__panic>$/;"	l
c010c00b	obj/kernel.asm	/^c010c00b:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010c010	obj/kernel.asm	/^c010c010:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010c013	obj/kernel.asm	/^c010c013:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c016	obj/kernel.asm	/^c010c016:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c01a	obj/kernel.asm	/^c010c01a:	74 56                	je     c010c072 <do_exit+0xb9>$/;"	l
c010c01c	obj/kernel.asm	/^c010c01c:	a1 a8 21 15 c0       	mov    0xc01521a8,%eax$/;"	l
c010c021	obj/kernel.asm	/^c010c021:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010c024	obj/kernel.asm	/^c010c024:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010c027	obj/kernel.asm	/^c010c027:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010c02a	obj/kernel.asm	/^c010c02a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c02d	obj/kernel.asm	/^c010c02d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c030	obj/kernel.asm	/^c010c030:	e8 5b f3 ff ff       	call   c010b390 <mm_count_dec>$/;"	l
c010c035	obj/kernel.asm	/^c010c035:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c038	obj/kernel.asm	/^c010c038:	85 c0                	test   %eax,%eax$/;"	l
c010c03a	obj/kernel.asm	/^c010c03a:	75 2a                	jne    c010c066 <do_exit+0xad>$/;"	l
c010c03c	obj/kernel.asm	/^c010c03c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c03f	obj/kernel.asm	/^c010c03f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c042	obj/kernel.asm	/^c010c042:	e8 15 97 ff ff       	call   c010575c <exit_mmap>$/;"	l
c010c047	obj/kernel.asm	/^c010c047:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c04a	obj/kernel.asm	/^c010c04a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c04d	obj/kernel.asm	/^c010c04d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c050	obj/kernel.asm	/^c010c050:	e8 51 fb ff ff       	call   c010bba6 <put_pgdir>$/;"	l
c010c055	obj/kernel.asm	/^c010c055:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c058	obj/kernel.asm	/^c010c058:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c05b	obj/kernel.asm	/^c010c05b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010c05e	obj/kernel.asm	/^c010c05e:	e8 6e 94 ff ff       	call   c01054d1 <mm_destroy>$/;"	l
c010c063	obj/kernel.asm	/^c010c063:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c066	obj/kernel.asm	/^c010c066:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010c06b	obj/kernel.asm	/^c010c06b:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010c072	obj/kernel.asm	/^c010c072:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010c077	obj/kernel.asm	/^c010c077:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c07a	obj/kernel.asm	/^c010c07a:	50                   	push   %eax$/;"	l
c010c07b	obj/kernel.asm	/^c010c07b:	e8 bf fd ff ff       	call   c010be3f <put_fs>$/;"	l
c010c080	obj/kernel.asm	/^c010c080:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c083	obj/kernel.asm	/^c010c083:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010c088	obj/kernel.asm	/^c010c088:	c7 00 03 00 00 00    	movl   $0x3,(%eax)$/;"	l
c010c08e	obj/kernel.asm	/^c010c08e:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010c093	obj/kernel.asm	/^c010c093:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010c096	obj/kernel.asm	/^c010c096:	89 90 8c 00 00 00    	mov    %edx,0x8c(%eax)$/;"	l
c010c09c	obj/kernel.asm	/^c010c09c:	e8 a1 f1 ff ff       	call   c010b242 <__intr_save>$/;"	l
c010c0a1	obj/kernel.asm	/^c010c0a1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c0a4	obj/kernel.asm	/^c010c0a4:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010c0a9	obj/kernel.asm	/^c010c0a9:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c0ac	obj/kernel.asm	/^c010c0ac:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c0af	obj/kernel.asm	/^c010c0af:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c0b2	obj/kernel.asm	/^c010c0b2:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010c0b8	obj/kernel.asm	/^c010c0b8:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c010c0bd	obj/kernel.asm	/^c010c0bd:	75 0e                	jne    c010c0cd <do_exit+0x114>$/;"	l
c010c0bf	obj/kernel.asm	/^c010c0bf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c0c2	obj/kernel.asm	/^c010c0c2:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010c0c5	obj/kernel.asm	/^c010c0c5:	e8 74 14 00 00       	call   c010d53e <wakeup_proc>$/;"	l
c010c0ca	obj/kernel.asm	/^c010c0ca:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c0cd	obj/kernel.asm	/^c010c0cd:	e9 ab 00 00 00       	jmp    c010c17d <do_exit+0x1c4>$/;"	l
c010c0d2	obj/kernel.asm	/^c010c0d2:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010c0d7	obj/kernel.asm	/^c010c0d7:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010c0dd	obj/kernel.asm	/^c010c0dd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c0e0	obj/kernel.asm	/^c010c0e0:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010c0e5	obj/kernel.asm	/^c010c0e5:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010c0e8	obj/kernel.asm	/^c010c0e8:	8b 92 9c 00 00 00    	mov    0x9c(%edx),%edx$/;"	l
c010c0ee	obj/kernel.asm	/^c010c0ee:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010c0f4	obj/kernel.asm	/^c010c0f4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c0f7	obj/kernel.asm	/^c010c0f7:	c7 80 98 00 00 00 00 	movl   $0x0,0x98(%eax)$/;"	l
c010c0fe	obj/kernel.asm	/^c010c0fe:	00 00 00 $/;"	l
c010c101	obj/kernel.asm	/^c010c101:	a1 84 f0 14 c0       	mov    0xc014f084,%eax$/;"	l
c010c106	obj/kernel.asm	/^c010c106:	8b 90 94 00 00 00    	mov    0x94(%eax),%edx$/;"	l
c010c10c	obj/kernel.asm	/^c010c10c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c10f	obj/kernel.asm	/^c010c10f:	89 90 9c 00 00 00    	mov    %edx,0x9c(%eax)$/;"	l
c010c115	obj/kernel.asm	/^c010c115:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c118	obj/kernel.asm	/^c010c118:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010c11e	obj/kernel.asm	/^c010c11e:	85 c0                	test   %eax,%eax$/;"	l
c010c120	obj/kernel.asm	/^c010c120:	74 14                	je     c010c136 <do_exit+0x17d>$/;"	l
c010c122	obj/kernel.asm	/^c010c122:	a1 84 f0 14 c0       	mov    0xc014f084,%eax$/;"	l
c010c127	obj/kernel.asm	/^c010c127:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010c12d	obj/kernel.asm	/^c010c12d:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010c130	obj/kernel.asm	/^c010c130:	89 90 98 00 00 00    	mov    %edx,0x98(%eax)$/;"	l
c010c136	obj/kernel.asm	/^c010c136:	8b 15 84 f0 14 c0    	mov    0xc014f084,%edx$/;"	l
c010c13c	obj/kernel.asm	/^c010c13c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c13f	obj/kernel.asm	/^c010c13f:	89 50 14             	mov    %edx,0x14(%eax)$/;"	l
c010c142	obj/kernel.asm	/^c010c142:	a1 84 f0 14 c0       	mov    0xc014f084,%eax$/;"	l
c010c147	obj/kernel.asm	/^c010c147:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010c14a	obj/kernel.asm	/^c010c14a:	89 90 94 00 00 00    	mov    %edx,0x94(%eax)$/;"	l
c010c150	obj/kernel.asm	/^c010c150:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c153	obj/kernel.asm	/^c010c153:	8b 00                	mov    (%eax),%eax$/;"	l
c010c155	obj/kernel.asm	/^c010c155:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010c158	obj/kernel.asm	/^c010c158:	75 23                	jne    c010c17d <do_exit+0x1c4>$/;"	l
c010c15a	obj/kernel.asm	/^c010c15a:	a1 84 f0 14 c0       	mov    0xc014f084,%eax$/;"	l
c010c15f	obj/kernel.asm	/^c010c15f:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010c165	obj/kernel.asm	/^c010c165:	3d 01 00 00 80       	cmp    $0x80000001,%eax$/;"	l
c010c16a	obj/kernel.asm	/^c010c16a:	75 11                	jne    c010c17d <do_exit+0x1c4>$/;"	l
c010c16c	obj/kernel.asm	/^c010c16c:	a1 84 f0 14 c0       	mov    0xc014f084,%eax$/;"	l
c010c171	obj/kernel.asm	/^c010c171:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c174	obj/kernel.asm	/^c010c174:	50                   	push   %eax$/;"	l
c010c175	obj/kernel.asm	/^c010c175:	e8 c4 13 00 00       	call   c010d53e <wakeup_proc>$/;"	l
c010c17a	obj/kernel.asm	/^c010c17a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c17d	obj/kernel.asm	/^c010c17d:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010c182	obj/kernel.asm	/^c010c182:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010c188	obj/kernel.asm	/^c010c188:	85 c0                	test   %eax,%eax$/;"	l
c010c18a	obj/kernel.asm	/^c010c18a:	0f 85 42 ff ff ff    	jne    c010c0d2 <do_exit+0x119>$/;"	l
c010c190	obj/kernel.asm	/^c010c190:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c193	obj/kernel.asm	/^c010c193:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c196	obj/kernel.asm	/^c010c196:	e8 d1 f0 ff ff       	call   c010b26c <__intr_restore>$/;"	l
c010c19b	obj/kernel.asm	/^c010c19b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c19e	obj/kernel.asm	/^c010c19e:	e8 2a 14 00 00       	call   c010d5cd <schedule>$/;"	l
c010c1a3	obj/kernel.asm	/^c010c1a3:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010c1a8	obj/kernel.asm	/^c010c1a8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c1ab	obj/kernel.asm	/^c010c1ab:	50                   	push   %eax$/;"	l
c010c1ac	obj/kernel.asm	/^c010c1ac:	68 50 6a 11 c0       	push   $0xc0116a50$/;"	l
c010c1b1	obj/kernel.asm	/^c010c1b1:	68 3b 02 00 00       	push   $0x23b$/;"	l
c010c1b6	obj/kernel.asm	/^c010c1b6:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010c1bb	obj/kernel.asm	/^c010c1bb:	e8 0f 43 ff ff       	call   c01004cf <__panic>$/;"	l
c010c1c0	obj/kernel.asm	/^c010c1c0 <load_icode_read>:$/;"	l
c010c1c0	obj/kernel.asm	/^c010c1c0:	55                   	push   %ebp$/;"	l
c010c1c1	obj/kernel.asm	/^c010c1c1:	89 e5                	mov    %esp,%ebp$/;"	l
c010c1c3	obj/kernel.asm	/^c010c1c3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c1c6	obj/kernel.asm	/^c010c1c6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c1c9	obj/kernel.asm	/^c010c1c9:	6a 00                	push   $0x0$/;"	l
c010c1cb	obj/kernel.asm	/^c010c1cb:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c010c1ce	obj/kernel.asm	/^c010c1ce:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c1d1	obj/kernel.asm	/^c010c1d1:	e8 0d da ff ff       	call   c0109be3 <sysfile_seek>$/;"	l
c010c1d6	obj/kernel.asm	/^c010c1d6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c1d9	obj/kernel.asm	/^c010c1d9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c1dc	obj/kernel.asm	/^c010c1dc:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c1e0	obj/kernel.asm	/^c010c1e0:	74 05                	je     c010c1e7 <load_icode_read+0x27>$/;"	l
c010c1e2	obj/kernel.asm	/^c010c1e2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c1e5	obj/kernel.asm	/^c010c1e5:	eb 33                	jmp    c010c21a <load_icode_read+0x5a>$/;"	l
c010c1e7	obj/kernel.asm	/^c010c1e7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c1ea	obj/kernel.asm	/^c010c1ea:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010c1ed	obj/kernel.asm	/^c010c1ed:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010c1f0	obj/kernel.asm	/^c010c1f0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c1f3	obj/kernel.asm	/^c010c1f3:	e8 3b d7 ff ff       	call   c0109933 <sysfile_read>$/;"	l
c010c1f8	obj/kernel.asm	/^c010c1f8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c1fb	obj/kernel.asm	/^c010c1fb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c1fe	obj/kernel.asm	/^c010c1fe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c201	obj/kernel.asm	/^c010c201:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c010c204	obj/kernel.asm	/^c010c204:	74 0f                	je     c010c215 <load_icode_read+0x55>$/;"	l
c010c206	obj/kernel.asm	/^c010c206:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010c20b	obj/kernel.asm	/^c010c20b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c20f	obj/kernel.asm	/^c010c20f:	0f 48 45 f4          	cmovs  -0xc(%ebp),%eax$/;"	l
c010c213	obj/kernel.asm	/^c010c213:	eb 05                	jmp    c010c21a <load_icode_read+0x5a>$/;"	l
c010c215	obj/kernel.asm	/^c010c215:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c21a	obj/kernel.asm	/^c010c21a:	c9                   	leave  $/;"	l
c010c21b	obj/kernel.asm	/^c010c21b:	c3                   	ret    $/;"	l
c010c21c	obj/kernel.asm	/^c010c21c <load_icode>:$/;"	l
c010c21c	obj/kernel.asm	/^c010c21c:	55                   	push   %ebp$/;"	l
c010c21d	obj/kernel.asm	/^c010c21d:	89 e5                	mov    %esp,%ebp$/;"	l
c010c21f	obj/kernel.asm	/^c010c21f:	53                   	push   %ebx$/;"	l
c010c220	obj/kernel.asm	/^c010c220:	81 ec c4 00 00 00    	sub    $0xc4,%esp$/;"	l
c010c226	obj/kernel.asm	/^c010c226:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010c22a	obj/kernel.asm	/^c010c22a:	78 06                	js     c010c232 <load_icode+0x16>$/;"	l
c010c22c	obj/kernel.asm	/^c010c22c:	83 7d 0c 20          	cmpl   $0x20,0xc(%ebp)$/;"	l
c010c230	obj/kernel.asm	/^c010c230:	7e 19                	jle    c010c24b <load_icode+0x2f>$/;"	l
c010c232	obj/kernel.asm	/^c010c232:	68 70 6a 11 c0       	push   $0xc0116a70$/;"	l
c010c237	obj/kernel.asm	/^c010c237:	68 ff 69 11 c0       	push   $0xc01169ff$/;"	l
c010c23c	obj/kernel.asm	/^c010c23c:	68 67 02 00 00       	push   $0x267$/;"	l
c010c241	obj/kernel.asm	/^c010c241:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010c246	obj/kernel.asm	/^c010c246:	e8 84 42 ff ff       	call   c01004cf <__panic>$/;"	l
c010c24b	obj/kernel.asm	/^c010c24b:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010c250	obj/kernel.asm	/^c010c250:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010c253	obj/kernel.asm	/^c010c253:	85 c0                	test   %eax,%eax$/;"	l
c010c255	obj/kernel.asm	/^c010c255:	74 17                	je     c010c26e <load_icode+0x52>$/;"	l
c010c257	obj/kernel.asm	/^c010c257:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c25a	obj/kernel.asm	/^c010c25a:	68 98 6a 11 c0       	push   $0xc0116a98$/;"	l
c010c25f	obj/kernel.asm	/^c010c25f:	68 6a 02 00 00       	push   $0x26a$/;"	l
c010c264	obj/kernel.asm	/^c010c264:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010c269	obj/kernel.asm	/^c010c269:	e8 61 42 ff ff       	call   c01004cf <__panic>$/;"	l
c010c26e	obj/kernel.asm	/^c010c26e:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010c275	obj/kernel.asm	/^c010c275:	e8 2e 8f ff ff       	call   c01051a8 <mm_create>$/;"	l
c010c27a	obj/kernel.asm	/^c010c27a:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c010c27d	obj/kernel.asm	/^c010c27d:	83 7d c8 00          	cmpl   $0x0,-0x38(%ebp)$/;"	l
c010c281	obj/kernel.asm	/^c010c281:	75 06                	jne    c010c289 <load_icode+0x6d>$/;"	l
c010c283	obj/kernel.asm	/^c010c283:	90                   	nop$/;"	l
c010c284	obj/kernel.asm	/^c010c284:	e9 bb 06 00 00       	jmp    c010c944 <load_icode+0x728>$/;"	l
c010c289	obj/kernel.asm	/^c010c289:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c28c	obj/kernel.asm	/^c010c28c:	ff 75 c8             	pushl  -0x38(%ebp)$/;"	l
c010c28f	obj/kernel.asm	/^c010c28f:	e8 79 f8 ff ff       	call   c010bb0d <setup_pgdir>$/;"	l
c010c294	obj/kernel.asm	/^c010c294:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c297	obj/kernel.asm	/^c010c297:	85 c0                	test   %eax,%eax$/;"	l
c010c299	obj/kernel.asm	/^c010c299:	74 05                	je     c010c2a0 <load_icode+0x84>$/;"	l
c010c29b	obj/kernel.asm	/^c010c29b:	e9 c5 06 00 00       	jmp    c010c965 <load_icode+0x749>$/;"	l
c010c2a0	obj/kernel.asm	/^c010c2a0:	8d 85 64 ff ff ff    	lea    -0x9c(%ebp),%eax$/;"	l
c010c2a6	obj/kernel.asm	/^c010c2a6:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c010c2a9	obj/kernel.asm	/^c010c2a9:	6a 00                	push   $0x0$/;"	l
c010c2ab	obj/kernel.asm	/^c010c2ab:	6a 34                	push   $0x34$/;"	l
c010c2ad	obj/kernel.asm	/^c010c2ad:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
c010c2b0	obj/kernel.asm	/^c010c2b0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c2b3	obj/kernel.asm	/^c010c2b3:	e8 08 ff ff ff       	call   c010c1c0 <load_icode_read>$/;"	l
c010c2b8	obj/kernel.asm	/^c010c2b8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c2bb	obj/kernel.asm	/^c010c2bb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c2be	obj/kernel.asm	/^c010c2be:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c2c2	obj/kernel.asm	/^c010c2c2:	74 05                	je     c010c2c9 <load_icode+0xad>$/;"	l
c010c2c4	obj/kernel.asm	/^c010c2c4:	e9 8e 06 00 00       	jmp    c010c957 <load_icode+0x73b>$/;"	l
c010c2c9	obj/kernel.asm	/^c010c2c9:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010c2cc	obj/kernel.asm	/^c010c2cc:	8b 00                	mov    (%eax),%eax$/;"	l
c010c2ce	obj/kernel.asm	/^c010c2ce:	3d 7f 45 4c 46       	cmp    $0x464c457f,%eax$/;"	l
c010c2d3	obj/kernel.asm	/^c010c2d3:	74 0c                	je     c010c2e1 <load_icode+0xc5>$/;"	l
c010c2d5	obj/kernel.asm	/^c010c2d5:	c7 45 f4 f8 ff ff ff 	movl   $0xfffffff8,-0xc(%ebp)$/;"	l
c010c2dc	obj/kernel.asm	/^c010c2dc:	e9 76 06 00 00       	jmp    c010c957 <load_icode+0x73b>$/;"	l
c010c2e1	obj/kernel.asm	/^c010c2e1:	8d 85 44 ff ff ff    	lea    -0xbc(%ebp),%eax$/;"	l
c010c2e7	obj/kernel.asm	/^c010c2e7:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c010c2ea	obj/kernel.asm	/^c010c2ea:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c010c2f1	obj/kernel.asm	/^c010c2f1:	e9 28 03 00 00       	jmp    c010c61e <load_icode+0x402>$/;"	l
c010c2f6	obj/kernel.asm	/^c010c2f6:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010c2f9	obj/kernel.asm	/^c010c2f9:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010c2fc	obj/kernel.asm	/^c010c2fc:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010c2ff	obj/kernel.asm	/^c010c2ff:	c1 e2 05             	shl    $0x5,%edx$/;"	l
c010c302	obj/kernel.asm	/^c010c302:	01 d0                	add    %edx,%eax$/;"	l
c010c304	obj/kernel.asm	/^c010c304:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c010c307	obj/kernel.asm	/^c010c307:	ff 75 bc             	pushl  -0x44(%ebp)$/;"	l
c010c30a	obj/kernel.asm	/^c010c30a:	6a 20                	push   $0x20$/;"	l
c010c30c	obj/kernel.asm	/^c010c30c:	ff 75 c0             	pushl  -0x40(%ebp)$/;"	l
c010c30f	obj/kernel.asm	/^c010c30f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c312	obj/kernel.asm	/^c010c312:	e8 a9 fe ff ff       	call   c010c1c0 <load_icode_read>$/;"	l
c010c317	obj/kernel.asm	/^c010c317:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c31a	obj/kernel.asm	/^c010c31a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c31d	obj/kernel.asm	/^c010c31d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c321	obj/kernel.asm	/^c010c321:	74 05                	je     c010c328 <load_icode+0x10c>$/;"	l
c010c323	obj/kernel.asm	/^c010c323:	e9 21 06 00 00       	jmp    c010c949 <load_icode+0x72d>$/;"	l
c010c328	obj/kernel.asm	/^c010c328:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010c32b	obj/kernel.asm	/^c010c32b:	8b 00                	mov    (%eax),%eax$/;"	l
c010c32d	obj/kernel.asm	/^c010c32d:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010c330	obj/kernel.asm	/^c010c330:	74 05                	je     c010c337 <load_icode+0x11b>$/;"	l
c010c332	obj/kernel.asm	/^c010c332:	e9 e3 02 00 00       	jmp    c010c61a <load_icode+0x3fe>$/;"	l
c010c337	obj/kernel.asm	/^c010c337:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010c33a	obj/kernel.asm	/^c010c33a:	8b 50 10             	mov    0x10(%eax),%edx$/;"	l
c010c33d	obj/kernel.asm	/^c010c33d:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010c340	obj/kernel.asm	/^c010c340:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c343	obj/kernel.asm	/^c010c343:	39 c2                	cmp    %eax,%edx$/;"	l
c010c345	obj/kernel.asm	/^c010c345:	76 0c                	jbe    c010c353 <load_icode+0x137>$/;"	l
c010c347	obj/kernel.asm	/^c010c347:	c7 45 f4 f8 ff ff ff 	movl   $0xfffffff8,-0xc(%ebp)$/;"	l
c010c34e	obj/kernel.asm	/^c010c34e:	e9 f6 05 00 00       	jmp    c010c949 <load_icode+0x72d>$/;"	l
c010c353	obj/kernel.asm	/^c010c353:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010c356	obj/kernel.asm	/^c010c356:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010c359	obj/kernel.asm	/^c010c359:	85 c0                	test   %eax,%eax$/;"	l
c010c35b	obj/kernel.asm	/^c010c35b:	75 05                	jne    c010c362 <load_icode+0x146>$/;"	l
c010c35d	obj/kernel.asm	/^c010c35d:	e9 b8 02 00 00       	jmp    c010c61a <load_icode+0x3fe>$/;"	l
c010c362	obj/kernel.asm	/^c010c362:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010c369	obj/kernel.asm	/^c010c369:	c7 45 e8 04 00 00 00 	movl   $0x4,-0x18(%ebp)$/;"	l
c010c370	obj/kernel.asm	/^c010c370:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010c373	obj/kernel.asm	/^c010c373:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010c376	obj/kernel.asm	/^c010c376:	83 e0 01             	and    $0x1,%eax$/;"	l
c010c379	obj/kernel.asm	/^c010c379:	85 c0                	test   %eax,%eax$/;"	l
c010c37b	obj/kernel.asm	/^c010c37b:	74 04                	je     c010c381 <load_icode+0x165>$/;"	l
c010c37d	obj/kernel.asm	/^c010c37d:	83 4d ec 04          	orl    $0x4,-0x14(%ebp)$/;"	l
c010c381	obj/kernel.asm	/^c010c381:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010c384	obj/kernel.asm	/^c010c384:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010c387	obj/kernel.asm	/^c010c387:	83 e0 02             	and    $0x2,%eax$/;"	l
c010c38a	obj/kernel.asm	/^c010c38a:	85 c0                	test   %eax,%eax$/;"	l
c010c38c	obj/kernel.asm	/^c010c38c:	74 04                	je     c010c392 <load_icode+0x176>$/;"	l
c010c38e	obj/kernel.asm	/^c010c38e:	83 4d ec 02          	orl    $0x2,-0x14(%ebp)$/;"	l
c010c392	obj/kernel.asm	/^c010c392:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010c395	obj/kernel.asm	/^c010c395:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010c398	obj/kernel.asm	/^c010c398:	83 e0 04             	and    $0x4,%eax$/;"	l
c010c39b	obj/kernel.asm	/^c010c39b:	85 c0                	test   %eax,%eax$/;"	l
c010c39d	obj/kernel.asm	/^c010c39d:	74 04                	je     c010c3a3 <load_icode+0x187>$/;"	l
c010c39f	obj/kernel.asm	/^c010c39f:	83 4d ec 01          	orl    $0x1,-0x14(%ebp)$/;"	l
c010c3a3	obj/kernel.asm	/^c010c3a3:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010c3a6	obj/kernel.asm	/^c010c3a6:	83 e0 02             	and    $0x2,%eax$/;"	l
c010c3a9	obj/kernel.asm	/^c010c3a9:	85 c0                	test   %eax,%eax$/;"	l
c010c3ab	obj/kernel.asm	/^c010c3ab:	74 04                	je     c010c3b1 <load_icode+0x195>$/;"	l
c010c3ad	obj/kernel.asm	/^c010c3ad:	83 4d e8 02          	orl    $0x2,-0x18(%ebp)$/;"	l
c010c3b1	obj/kernel.asm	/^c010c3b1:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010c3b4	obj/kernel.asm	/^c010c3b4:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c010c3b7	obj/kernel.asm	/^c010c3b7:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010c3ba	obj/kernel.asm	/^c010c3ba:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010c3bd	obj/kernel.asm	/^c010c3bd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c3c0	obj/kernel.asm	/^c010c3c0:	6a 00                	push   $0x0$/;"	l
c010c3c2	obj/kernel.asm	/^c010c3c2:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010c3c5	obj/kernel.asm	/^c010c3c5:	52                   	push   %edx$/;"	l
c010c3c6	obj/kernel.asm	/^c010c3c6:	50                   	push   %eax$/;"	l
c010c3c7	obj/kernel.asm	/^c010c3c7:	ff 75 c8             	pushl  -0x38(%ebp)$/;"	l
c010c3ca	obj/kernel.asm	/^c010c3ca:	e8 a0 91 ff ff       	call   c010556f <mm_map>$/;"	l
c010c3cf	obj/kernel.asm	/^c010c3cf:	83 c4 20             	add    $0x20,%esp$/;"	l
c010c3d2	obj/kernel.asm	/^c010c3d2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c3d5	obj/kernel.asm	/^c010c3d5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c3d9	obj/kernel.asm	/^c010c3d9:	74 05                	je     c010c3e0 <load_icode+0x1c4>$/;"	l
c010c3db	obj/kernel.asm	/^c010c3db:	e9 69 05 00 00       	jmp    c010c949 <load_icode+0x72d>$/;"	l
c010c3e0	obj/kernel.asm	/^c010c3e0:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010c3e3	obj/kernel.asm	/^c010c3e3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010c3e6	obj/kernel.asm	/^c010c3e6:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010c3e9	obj/kernel.asm	/^c010c3e9:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010c3ec	obj/kernel.asm	/^c010c3ec:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010c3ef	obj/kernel.asm	/^c010c3ef:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c010c3f2	obj/kernel.asm	/^c010c3f2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010c3f5	obj/kernel.asm	/^c010c3f5:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c010c3f8	obj/kernel.asm	/^c010c3f8:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c010c3fb	obj/kernel.asm	/^c010c3fb:	25 00 f0 ff ff       	and    $0xfffff000,%eax$/;"	l
c010c400	obj/kernel.asm	/^c010c400:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010c403	obj/kernel.asm	/^c010c403:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010c40a	obj/kernel.asm	/^c010c40a:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010c40d	obj/kernel.asm	/^c010c40d:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010c410	obj/kernel.asm	/^c010c410:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010c413	obj/kernel.asm	/^c010c413:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010c416	obj/kernel.asm	/^c010c416:	01 d0                	add    %edx,%eax$/;"	l
c010c418	obj/kernel.asm	/^c010c418:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c010c41b	obj/kernel.asm	/^c010c41b:	e9 9f 00 00 00       	jmp    c010c4bf <load_icode+0x2a3>$/;"	l
c010c420	obj/kernel.asm	/^c010c420:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010c423	obj/kernel.asm	/^c010c423:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c426	obj/kernel.asm	/^c010c426:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c429	obj/kernel.asm	/^c010c429:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010c42c	obj/kernel.asm	/^c010c42c:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
c010c42f	obj/kernel.asm	/^c010c42f:	50                   	push   %eax$/;"	l
c010c430	obj/kernel.asm	/^c010c430:	e8 87 81 ff ff       	call   c01045bc <pgdir_alloc_page>$/;"	l
c010c435	obj/kernel.asm	/^c010c435:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c438	obj/kernel.asm	/^c010c438:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c43b	obj/kernel.asm	/^c010c43b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010c43f	obj/kernel.asm	/^c010c43f:	75 0c                	jne    c010c44d <load_icode+0x231>$/;"	l
c010c441	obj/kernel.asm	/^c010c441:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010c448	obj/kernel.asm	/^c010c448:	e9 fc 04 00 00       	jmp    c010c949 <load_icode+0x72d>$/;"	l
c010c44d	obj/kernel.asm	/^c010c44d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010c450	obj/kernel.asm	/^c010c450:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c010c453	obj/kernel.asm	/^c010c453:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c010c456	obj/kernel.asm	/^c010c456:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010c45b	obj/kernel.asm	/^c010c45b:	2b 45 b0             	sub    -0x50(%ebp),%eax$/;"	l
c010c45e	obj/kernel.asm	/^c010c45e:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010c461	obj/kernel.asm	/^c010c461:	81 45 d4 00 10 00 00 	addl   $0x1000,-0x2c(%ebp)$/;"	l
c010c468	obj/kernel.asm	/^c010c468:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010c46b	obj/kernel.asm	/^c010c46b:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010c46e	obj/kernel.asm	/^c010c46e:	73 09                	jae    c010c479 <load_icode+0x25d>$/;"	l
c010c470	obj/kernel.asm	/^c010c470:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010c473	obj/kernel.asm	/^c010c473:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c010c476	obj/kernel.asm	/^c010c476:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010c479	obj/kernel.asm	/^c010c479:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c47c	obj/kernel.asm	/^c010c47c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c47f	obj/kernel.asm	/^c010c47f:	e8 6e ee ff ff       	call   c010b2f2 <page2kva>$/;"	l
c010c484	obj/kernel.asm	/^c010c484:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c487	obj/kernel.asm	/^c010c487:	89 c2                	mov    %eax,%edx$/;"	l
c010c489	obj/kernel.asm	/^c010c489:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010c48c	obj/kernel.asm	/^c010c48c:	01 d0                	add    %edx,%eax$/;"	l
c010c48e	obj/kernel.asm	/^c010c48e:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010c491	obj/kernel.asm	/^c010c491:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c010c494	obj/kernel.asm	/^c010c494:	50                   	push   %eax$/;"	l
c010c495	obj/kernel.asm	/^c010c495:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c498	obj/kernel.asm	/^c010c498:	e8 23 fd ff ff       	call   c010c1c0 <load_icode_read>$/;"	l
c010c49d	obj/kernel.asm	/^c010c49d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c4a0	obj/kernel.asm	/^c010c4a0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c4a3	obj/kernel.asm	/^c010c4a3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c4a7	obj/kernel.asm	/^c010c4a7:	74 05                	je     c010c4ae <load_icode+0x292>$/;"	l
c010c4a9	obj/kernel.asm	/^c010c4a9:	e9 9b 04 00 00       	jmp    c010c949 <load_icode+0x72d>$/;"	l
c010c4ae	obj/kernel.asm	/^c010c4ae:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010c4b1	obj/kernel.asm	/^c010c4b1:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010c4b4	obj/kernel.asm	/^c010c4b4:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010c4b7	obj/kernel.asm	/^c010c4b7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010c4ba	obj/kernel.asm	/^c010c4ba:	01 d0                	add    %edx,%eax$/;"	l
c010c4bc	obj/kernel.asm	/^c010c4bc:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010c4bf	obj/kernel.asm	/^c010c4bf:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010c4c2	obj/kernel.asm	/^c010c4c2:	3b 45 b4             	cmp    -0x4c(%ebp),%eax$/;"	l
c010c4c5	obj/kernel.asm	/^c010c4c5:	0f 82 55 ff ff ff    	jb     c010c420 <load_icode+0x204>$/;"	l
c010c4cb	obj/kernel.asm	/^c010c4cb:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010c4ce	obj/kernel.asm	/^c010c4ce:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010c4d1	obj/kernel.asm	/^c010c4d1:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c010c4d4	obj/kernel.asm	/^c010c4d4:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010c4d7	obj/kernel.asm	/^c010c4d7:	01 d0                	add    %edx,%eax$/;"	l
c010c4d9	obj/kernel.asm	/^c010c4d9:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c010c4dc	obj/kernel.asm	/^c010c4dc:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010c4df	obj/kernel.asm	/^c010c4df:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010c4e2	obj/kernel.asm	/^c010c4e2:	0f 83 9c 00 00 00    	jae    c010c584 <load_icode+0x368>$/;"	l
c010c4e8	obj/kernel.asm	/^c010c4e8:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010c4eb	obj/kernel.asm	/^c010c4eb:	3b 45 b4             	cmp    -0x4c(%ebp),%eax$/;"	l
c010c4ee	obj/kernel.asm	/^c010c4ee:	75 05                	jne    c010c4f5 <load_icode+0x2d9>$/;"	l
c010c4f0	obj/kernel.asm	/^c010c4f0:	e9 25 01 00 00       	jmp    c010c61a <load_icode+0x3fe>$/;"	l
c010c4f5	obj/kernel.asm	/^c010c4f5:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010c4f8	obj/kernel.asm	/^c010c4f8:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c010c4fb	obj/kernel.asm	/^c010c4fb:	05 00 10 00 00       	add    $0x1000,%eax$/;"	l
c010c500	obj/kernel.asm	/^c010c500:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c010c503	obj/kernel.asm	/^c010c503:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010c508	obj/kernel.asm	/^c010c508:	2b 45 b0             	sub    -0x50(%ebp),%eax$/;"	l
c010c50b	obj/kernel.asm	/^c010c50b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010c50e	obj/kernel.asm	/^c010c50e:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010c511	obj/kernel.asm	/^c010c511:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010c514	obj/kernel.asm	/^c010c514:	73 09                	jae    c010c51f <load_icode+0x303>$/;"	l
c010c516	obj/kernel.asm	/^c010c516:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010c519	obj/kernel.asm	/^c010c519:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c010c51c	obj/kernel.asm	/^c010c51c:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010c51f	obj/kernel.asm	/^c010c51f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c522	obj/kernel.asm	/^c010c522:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c525	obj/kernel.asm	/^c010c525:	e8 c8 ed ff ff       	call   c010b2f2 <page2kva>$/;"	l
c010c52a	obj/kernel.asm	/^c010c52a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c52d	obj/kernel.asm	/^c010c52d:	89 c2                	mov    %eax,%edx$/;"	l
c010c52f	obj/kernel.asm	/^c010c52f:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010c532	obj/kernel.asm	/^c010c532:	01 d0                	add    %edx,%eax$/;"	l
c010c534	obj/kernel.asm	/^c010c534:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c537	obj/kernel.asm	/^c010c537:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c010c53a	obj/kernel.asm	/^c010c53a:	6a 00                	push   $0x0$/;"	l
c010c53c	obj/kernel.asm	/^c010c53c:	50                   	push   %eax$/;"	l
c010c53d	obj/kernel.asm	/^c010c53d:	e8 4d 72 00 00       	call   c011378f <memset>$/;"	l
c010c542	obj/kernel.asm	/^c010c542:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c545	obj/kernel.asm	/^c010c545:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010c548	obj/kernel.asm	/^c010c548:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010c54b	obj/kernel.asm	/^c010c54b:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010c54e	obj/kernel.asm	/^c010c54e:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010c551	obj/kernel.asm	/^c010c551:	73 08                	jae    c010c55b <load_icode+0x33f>$/;"	l
c010c553	obj/kernel.asm	/^c010c553:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010c556	obj/kernel.asm	/^c010c556:	3b 45 b4             	cmp    -0x4c(%ebp),%eax$/;"	l
c010c559	obj/kernel.asm	/^c010c559:	74 29                	je     c010c584 <load_icode+0x368>$/;"	l
c010c55b	obj/kernel.asm	/^c010c55b:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010c55e	obj/kernel.asm	/^c010c55e:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010c561	obj/kernel.asm	/^c010c561:	72 08                	jb     c010c56b <load_icode+0x34f>$/;"	l
c010c563	obj/kernel.asm	/^c010c563:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010c566	obj/kernel.asm	/^c010c566:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010c569	obj/kernel.asm	/^c010c569:	74 19                	je     c010c584 <load_icode+0x368>$/;"	l
c010c56b	obj/kernel.asm	/^c010c56b:	68 c0 6a 11 c0       	push   $0xc0116ac0$/;"	l
c010c570	obj/kernel.asm	/^c010c570:	68 ff 69 11 c0       	push   $0xc01169ff$/;"	l
c010c575	obj/kernel.asm	/^c010c575:	68 bd 02 00 00       	push   $0x2bd$/;"	l
c010c57a	obj/kernel.asm	/^c010c57a:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010c57f	obj/kernel.asm	/^c010c57f:	e8 4b 3f ff ff       	call   c01004cf <__panic>$/;"	l
c010c584	obj/kernel.asm	/^c010c584:	e9 85 00 00 00       	jmp    c010c60e <load_icode+0x3f2>$/;"	l
c010c589	obj/kernel.asm	/^c010c589:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010c58c	obj/kernel.asm	/^c010c58c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c58f	obj/kernel.asm	/^c010c58f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c592	obj/kernel.asm	/^c010c592:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010c595	obj/kernel.asm	/^c010c595:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
c010c598	obj/kernel.asm	/^c010c598:	50                   	push   %eax$/;"	l
c010c599	obj/kernel.asm	/^c010c599:	e8 1e 80 ff ff       	call   c01045bc <pgdir_alloc_page>$/;"	l
c010c59e	obj/kernel.asm	/^c010c59e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c5a1	obj/kernel.asm	/^c010c5a1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010c5a4	obj/kernel.asm	/^c010c5a4:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010c5a8	obj/kernel.asm	/^c010c5a8:	75 0c                	jne    c010c5b6 <load_icode+0x39a>$/;"	l
c010c5aa	obj/kernel.asm	/^c010c5aa:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010c5b1	obj/kernel.asm	/^c010c5b1:	e9 93 03 00 00       	jmp    c010c949 <load_icode+0x72d>$/;"	l
c010c5b6	obj/kernel.asm	/^c010c5b6:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010c5b9	obj/kernel.asm	/^c010c5b9:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c010c5bc	obj/kernel.asm	/^c010c5bc:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c010c5bf	obj/kernel.asm	/^c010c5bf:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c010c5c4	obj/kernel.asm	/^c010c5c4:	2b 45 b0             	sub    -0x50(%ebp),%eax$/;"	l
c010c5c7	obj/kernel.asm	/^c010c5c7:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010c5ca	obj/kernel.asm	/^c010c5ca:	81 45 d4 00 10 00 00 	addl   $0x1000,-0x2c(%ebp)$/;"	l
c010c5d1	obj/kernel.asm	/^c010c5d1:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010c5d4	obj/kernel.asm	/^c010c5d4:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c010c5d7	obj/kernel.asm	/^c010c5d7:	73 09                	jae    c010c5e2 <load_icode+0x3c6>$/;"	l
c010c5d9	obj/kernel.asm	/^c010c5d9:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c010c5dc	obj/kernel.asm	/^c010c5dc:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c010c5df	obj/kernel.asm	/^c010c5df:	01 45 dc             	add    %eax,-0x24(%ebp)$/;"	l
c010c5e2	obj/kernel.asm	/^c010c5e2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c5e5	obj/kernel.asm	/^c010c5e5:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010c5e8	obj/kernel.asm	/^c010c5e8:	e8 05 ed ff ff       	call   c010b2f2 <page2kva>$/;"	l
c010c5ed	obj/kernel.asm	/^c010c5ed:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c5f0	obj/kernel.asm	/^c010c5f0:	89 c2                	mov    %eax,%edx$/;"	l
c010c5f2	obj/kernel.asm	/^c010c5f2:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c010c5f5	obj/kernel.asm	/^c010c5f5:	01 d0                	add    %edx,%eax$/;"	l
c010c5f7	obj/kernel.asm	/^c010c5f7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c5fa	obj/kernel.asm	/^c010c5fa:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c010c5fd	obj/kernel.asm	/^c010c5fd:	6a 00                	push   $0x0$/;"	l
c010c5ff	obj/kernel.asm	/^c010c5ff:	50                   	push   %eax$/;"	l
c010c600	obj/kernel.asm	/^c010c600:	e8 8a 71 00 00       	call   c011378f <memset>$/;"	l
c010c605	obj/kernel.asm	/^c010c605:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c608	obj/kernel.asm	/^c010c608:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010c60b	obj/kernel.asm	/^c010c60b:	01 45 d8             	add    %eax,-0x28(%ebp)$/;"	l
c010c60e	obj/kernel.asm	/^c010c60e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010c611	obj/kernel.asm	/^c010c611:	3b 45 b4             	cmp    -0x4c(%ebp),%eax$/;"	l
c010c614	obj/kernel.asm	/^c010c614:	0f 82 6f ff ff ff    	jb     c010c589 <load_icode+0x36d>$/;"	l
c010c61a	obj/kernel.asm	/^c010c61a:	83 45 e4 01          	addl   $0x1,-0x1c(%ebp)$/;"	l
c010c61e	obj/kernel.asm	/^c010c61e:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010c621	obj/kernel.asm	/^c010c621:	0f b7 40 2c          	movzwl 0x2c(%eax),%eax$/;"	l
c010c625	obj/kernel.asm	/^c010c625:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c010c628	obj/kernel.asm	/^c010c628:	3b 45 e4             	cmp    -0x1c(%ebp),%eax$/;"	l
c010c62b	obj/kernel.asm	/^c010c62b:	0f 87 c5 fc ff ff    	ja     c010c2f6 <load_icode+0xda>$/;"	l
c010c631	obj/kernel.asm	/^c010c631:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c634	obj/kernel.asm	/^c010c634:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c637	obj/kernel.asm	/^c010c637:	e8 e1 d2 ff ff       	call   c010991d <sysfile_close>$/;"	l
c010c63c	obj/kernel.asm	/^c010c63c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c63f	obj/kernel.asm	/^c010c63f:	c7 45 ec 0b 00 00 00 	movl   $0xb,-0x14(%ebp)$/;"	l
c010c646	obj/kernel.asm	/^c010c646:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c649	obj/kernel.asm	/^c010c649:	6a 00                	push   $0x0$/;"	l
c010c64b	obj/kernel.asm	/^c010c64b:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010c64e	obj/kernel.asm	/^c010c64e:	68 00 00 10 00       	push   $0x100000$/;"	l
c010c653	obj/kernel.asm	/^c010c653:	68 00 00 f0 af       	push   $0xaff00000$/;"	l
c010c658	obj/kernel.asm	/^c010c658:	ff 75 c8             	pushl  -0x38(%ebp)$/;"	l
c010c65b	obj/kernel.asm	/^c010c65b:	e8 0f 8f ff ff       	call   c010556f <mm_map>$/;"	l
c010c660	obj/kernel.asm	/^c010c660:	83 c4 20             	add    $0x20,%esp$/;"	l
c010c663	obj/kernel.asm	/^c010c663:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010c666	obj/kernel.asm	/^c010c666:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010c66a	obj/kernel.asm	/^c010c66a:	74 05                	je     c010c671 <load_icode+0x455>$/;"	l
c010c66c	obj/kernel.asm	/^c010c66c:	e9 d8 02 00 00       	jmp    c010c949 <load_icode+0x72d>$/;"	l
c010c671	obj/kernel.asm	/^c010c671:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010c674	obj/kernel.asm	/^c010c674:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c677	obj/kernel.asm	/^c010c677:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c67a	obj/kernel.asm	/^c010c67a:	6a 07                	push   $0x7$/;"	l
c010c67c	obj/kernel.asm	/^c010c67c:	68 00 f0 ff af       	push   $0xaffff000$/;"	l
c010c681	obj/kernel.asm	/^c010c681:	50                   	push   %eax$/;"	l
c010c682	obj/kernel.asm	/^c010c682:	e8 35 7f ff ff       	call   c01045bc <pgdir_alloc_page>$/;"	l
c010c687	obj/kernel.asm	/^c010c687:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c68a	obj/kernel.asm	/^c010c68a:	85 c0                	test   %eax,%eax$/;"	l
c010c68c	obj/kernel.asm	/^c010c68c:	75 19                	jne    c010c6a7 <load_icode+0x48b>$/;"	l
c010c68e	obj/kernel.asm	/^c010c68e:	68 fc 6a 11 c0       	push   $0xc0116afc$/;"	l
c010c693	obj/kernel.asm	/^c010c693:	68 ff 69 11 c0       	push   $0xc01169ff$/;"	l
c010c698	obj/kernel.asm	/^c010c698:	68 d2 02 00 00       	push   $0x2d2$/;"	l
c010c69d	obj/kernel.asm	/^c010c69d:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010c6a2	obj/kernel.asm	/^c010c6a2:	e8 28 3e ff ff       	call   c01004cf <__panic>$/;"	l
c010c6a7	obj/kernel.asm	/^c010c6a7:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010c6aa	obj/kernel.asm	/^c010c6aa:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c6ad	obj/kernel.asm	/^c010c6ad:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c6b0	obj/kernel.asm	/^c010c6b0:	6a 07                	push   $0x7$/;"	l
c010c6b2	obj/kernel.asm	/^c010c6b2:	68 00 e0 ff af       	push   $0xafffe000$/;"	l
c010c6b7	obj/kernel.asm	/^c010c6b7:	50                   	push   %eax$/;"	l
c010c6b8	obj/kernel.asm	/^c010c6b8:	e8 ff 7e ff ff       	call   c01045bc <pgdir_alloc_page>$/;"	l
c010c6bd	obj/kernel.asm	/^c010c6bd:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c6c0	obj/kernel.asm	/^c010c6c0:	85 c0                	test   %eax,%eax$/;"	l
c010c6c2	obj/kernel.asm	/^c010c6c2:	75 19                	jne    c010c6dd <load_icode+0x4c1>$/;"	l
c010c6c4	obj/kernel.asm	/^c010c6c4:	68 40 6b 11 c0       	push   $0xc0116b40$/;"	l
c010c6c9	obj/kernel.asm	/^c010c6c9:	68 ff 69 11 c0       	push   $0xc01169ff$/;"	l
c010c6ce	obj/kernel.asm	/^c010c6ce:	68 d3 02 00 00       	push   $0x2d3$/;"	l
c010c6d3	obj/kernel.asm	/^c010c6d3:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010c6d8	obj/kernel.asm	/^c010c6d8:	e8 f2 3d ff ff       	call   c01004cf <__panic>$/;"	l
c010c6dd	obj/kernel.asm	/^c010c6dd:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010c6e0	obj/kernel.asm	/^c010c6e0:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c6e3	obj/kernel.asm	/^c010c6e3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c6e6	obj/kernel.asm	/^c010c6e6:	6a 07                	push   $0x7$/;"	l
c010c6e8	obj/kernel.asm	/^c010c6e8:	68 00 d0 ff af       	push   $0xafffd000$/;"	l
c010c6ed	obj/kernel.asm	/^c010c6ed:	50                   	push   %eax$/;"	l
c010c6ee	obj/kernel.asm	/^c010c6ee:	e8 c9 7e ff ff       	call   c01045bc <pgdir_alloc_page>$/;"	l
c010c6f3	obj/kernel.asm	/^c010c6f3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c6f6	obj/kernel.asm	/^c010c6f6:	85 c0                	test   %eax,%eax$/;"	l
c010c6f8	obj/kernel.asm	/^c010c6f8:	75 19                	jne    c010c713 <load_icode+0x4f7>$/;"	l
c010c6fa	obj/kernel.asm	/^c010c6fa:	68 84 6b 11 c0       	push   $0xc0116b84$/;"	l
c010c6ff	obj/kernel.asm	/^c010c6ff:	68 ff 69 11 c0       	push   $0xc01169ff$/;"	l
c010c704	obj/kernel.asm	/^c010c704:	68 d4 02 00 00       	push   $0x2d4$/;"	l
c010c709	obj/kernel.asm	/^c010c709:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010c70e	obj/kernel.asm	/^c010c70e:	e8 bc 3d ff ff       	call   c01004cf <__panic>$/;"	l
c010c713	obj/kernel.asm	/^c010c713:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010c716	obj/kernel.asm	/^c010c716:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c719	obj/kernel.asm	/^c010c719:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c71c	obj/kernel.asm	/^c010c71c:	6a 07                	push   $0x7$/;"	l
c010c71e	obj/kernel.asm	/^c010c71e:	68 00 c0 ff af       	push   $0xafffc000$/;"	l
c010c723	obj/kernel.asm	/^c010c723:	50                   	push   %eax$/;"	l
c010c724	obj/kernel.asm	/^c010c724:	e8 93 7e ff ff       	call   c01045bc <pgdir_alloc_page>$/;"	l
c010c729	obj/kernel.asm	/^c010c729:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c72c	obj/kernel.asm	/^c010c72c:	85 c0                	test   %eax,%eax$/;"	l
c010c72e	obj/kernel.asm	/^c010c72e:	75 19                	jne    c010c749 <load_icode+0x52d>$/;"	l
c010c730	obj/kernel.asm	/^c010c730:	68 c8 6b 11 c0       	push   $0xc0116bc8$/;"	l
c010c735	obj/kernel.asm	/^c010c735:	68 ff 69 11 c0       	push   $0xc01169ff$/;"	l
c010c73a	obj/kernel.asm	/^c010c73a:	68 d5 02 00 00       	push   $0x2d5$/;"	l
c010c73f	obj/kernel.asm	/^c010c73f:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010c744	obj/kernel.asm	/^c010c744:	e8 86 3d ff ff       	call   c01004cf <__panic>$/;"	l
c010c749	obj/kernel.asm	/^c010c749:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c74c	obj/kernel.asm	/^c010c74c:	ff 75 c8             	pushl  -0x38(%ebp)$/;"	l
c010c74f	obj/kernel.asm	/^c010c74f:	e8 22 ec ff ff       	call   c010b376 <mm_count_inc>$/;"	l
c010c754	obj/kernel.asm	/^c010c754:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c757	obj/kernel.asm	/^c010c757:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010c75c	obj/kernel.asm	/^c010c75c:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c010c75f	obj/kernel.asm	/^c010c75f:	89 50 18             	mov    %edx,0x18(%eax)$/;"	l
c010c762	obj/kernel.asm	/^c010c762:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010c767	obj/kernel.asm	/^c010c767:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c010c76a	obj/kernel.asm	/^c010c76a:	8b 52 0c             	mov    0xc(%edx),%edx$/;"	l
c010c76d	obj/kernel.asm	/^c010c76d:	89 55 ac             	mov    %edx,-0x54(%ebp)$/;"	l
c010c770	obj/kernel.asm	/^c010c770:	81 7d ac ff ff ff bf 	cmpl   $0xbfffffff,-0x54(%ebp)$/;"	l
c010c777	obj/kernel.asm	/^c010c777:	77 17                	ja     c010c790 <load_icode+0x574>$/;"	l
c010c779	obj/kernel.asm	/^c010c779:	ff 75 ac             	pushl  -0x54(%ebp)$/;"	l
c010c77c	obj/kernel.asm	/^c010c77c:	68 b4 69 11 c0       	push   $0xc01169b4$/;"	l
c010c781	obj/kernel.asm	/^c010c781:	68 d9 02 00 00       	push   $0x2d9$/;"	l
c010c786	obj/kernel.asm	/^c010c786:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010c78b	obj/kernel.asm	/^c010c78b:	e8 3f 3d ff ff       	call   c01004cf <__panic>$/;"	l
c010c790	obj/kernel.asm	/^c010c790:	8b 55 ac             	mov    -0x54(%ebp),%edx$/;"	l
c010c793	obj/kernel.asm	/^c010c793:	81 c2 00 00 00 40    	add    $0x40000000,%edx$/;"	l
c010c799	obj/kernel.asm	/^c010c799:	89 50 40             	mov    %edx,0x40(%eax)$/;"	l
c010c79c	obj/kernel.asm	/^c010c79c:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c010c79f	obj/kernel.asm	/^c010c79f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010c7a2	obj/kernel.asm	/^c010c7a2:	89 45 a8             	mov    %eax,-0x58(%ebp)$/;"	l
c010c7a5	obj/kernel.asm	/^c010c7a5:	81 7d a8 ff ff ff bf 	cmpl   $0xbfffffff,-0x58(%ebp)$/;"	l
c010c7ac	obj/kernel.asm	/^c010c7ac:	77 17                	ja     c010c7c5 <load_icode+0x5a9>$/;"	l
c010c7ae	obj/kernel.asm	/^c010c7ae:	ff 75 a8             	pushl  -0x58(%ebp)$/;"	l
c010c7b1	obj/kernel.asm	/^c010c7b1:	68 b4 69 11 c0       	push   $0xc01169b4$/;"	l
c010c7b6	obj/kernel.asm	/^c010c7b6:	68 da 02 00 00       	push   $0x2da$/;"	l
c010c7bb	obj/kernel.asm	/^c010c7bb:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010c7c0	obj/kernel.asm	/^c010c7c0:	e8 0a 3d ff ff       	call   c01004cf <__panic>$/;"	l
c010c7c5	obj/kernel.asm	/^c010c7c5:	8b 45 a8             	mov    -0x58(%ebp),%eax$/;"	l
c010c7c8	obj/kernel.asm	/^c010c7c8:	05 00 00 00 40       	add    $0x40000000,%eax$/;"	l
c010c7cd	obj/kernel.asm	/^c010c7cd:	89 45 98             	mov    %eax,-0x68(%ebp)$/;"	l
c010c7d0	obj/kernel.asm	/^c010c7d0:	8b 45 98             	mov    -0x68(%ebp),%eax$/;"	l
c010c7d3	obj/kernel.asm	/^c010c7d3:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010c7d6	obj/kernel.asm	/^c010c7d6:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
c010c7dd	obj/kernel.asm	/^c010c7dd:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
c010c7e4	obj/kernel.asm	/^c010c7e4:	eb 2c                	jmp    c010c812 <load_icode+0x5f6>$/;"	l
c010c7e6	obj/kernel.asm	/^c010c7e6:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010c7e9	obj/kernel.asm	/^c010c7e9:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010c7f0	obj/kernel.asm	/^c010c7f0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c7f3	obj/kernel.asm	/^c010c7f3:	01 d0                	add    %edx,%eax$/;"	l
c010c7f5	obj/kernel.asm	/^c010c7f5:	8b 00                	mov    (%eax),%eax$/;"	l
c010c7f7	obj/kernel.asm	/^c010c7f7:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c7fa	obj/kernel.asm	/^c010c7fa:	68 00 10 00 00       	push   $0x1000$/;"	l
c010c7ff	obj/kernel.asm	/^c010c7ff:	50                   	push   %eax$/;"	l
c010c800	obj/kernel.asm	/^c010c800:	e8 58 6c 00 00       	call   c011345d <strnlen>$/;"	l
c010c805	obj/kernel.asm	/^c010c805:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c808	obj/kernel.asm	/^c010c808:	83 c0 01             	add    $0x1,%eax$/;"	l
c010c80b	obj/kernel.asm	/^c010c80b:	01 45 d0             	add    %eax,-0x30(%ebp)$/;"	l
c010c80e	obj/kernel.asm	/^c010c80e:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)$/;"	l
c010c812	obj/kernel.asm	/^c010c812:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c815	obj/kernel.asm	/^c010c815:	3b 45 cc             	cmp    -0x34(%ebp),%eax$/;"	l
c010c818	obj/kernel.asm	/^c010c818:	77 cc                	ja     c010c7e6 <load_icode+0x5ca>$/;"	l
c010c81a	obj/kernel.asm	/^c010c81a:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010c81d	obj/kernel.asm	/^c010c81d:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c010c820	obj/kernel.asm	/^c010c820:	89 c2                	mov    %eax,%edx$/;"	l
c010c822	obj/kernel.asm	/^c010c822:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010c827	obj/kernel.asm	/^c010c827:	29 d0                	sub    %edx,%eax$/;"	l
c010c829	obj/kernel.asm	/^c010c829:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c010c82c	obj/kernel.asm	/^c010c82c:	2d 04 00 00 50       	sub    $0x50000004,%eax$/;"	l
c010c831	obj/kernel.asm	/^c010c831:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c010c834	obj/kernel.asm	/^c010c834:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c837	obj/kernel.asm	/^c010c837:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010c83e	obj/kernel.asm	/^c010c83e:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c010c841	obj/kernel.asm	/^c010c841:	29 d0                	sub    %edx,%eax$/;"	l
c010c843	obj/kernel.asm	/^c010c843:	89 45 a0             	mov    %eax,-0x60(%ebp)$/;"	l
c010c846	obj/kernel.asm	/^c010c846:	c7 45 d0 00 00 00 00 	movl   $0x0,-0x30(%ebp)$/;"	l
c010c84d	obj/kernel.asm	/^c010c84d:	c7 45 cc 00 00 00 00 	movl   $0x0,-0x34(%ebp)$/;"	l
c010c854	obj/kernel.asm	/^c010c854:	eb 64                	jmp    c010c8ba <load_icode+0x69e>$/;"	l
c010c856	obj/kernel.asm	/^c010c856:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010c859	obj/kernel.asm	/^c010c859:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010c860	obj/kernel.asm	/^c010c860:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c010c863	obj/kernel.asm	/^c010c863:	8d 1c 02             	lea    (%edx,%eax,1),%ebx$/;"	l
c010c866	obj/kernel.asm	/^c010c866:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010c869	obj/kernel.asm	/^c010c869:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010c870	obj/kernel.asm	/^c010c870:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c873	obj/kernel.asm	/^c010c873:	01 d0                	add    %edx,%eax$/;"	l
c010c875	obj/kernel.asm	/^c010c875:	8b 00                	mov    (%eax),%eax$/;"	l
c010c877	obj/kernel.asm	/^c010c877:	8b 4d a4             	mov    -0x5c(%ebp),%ecx$/;"	l
c010c87a	obj/kernel.asm	/^c010c87a:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010c87d	obj/kernel.asm	/^c010c87d:	01 ca                	add    %ecx,%edx$/;"	l
c010c87f	obj/kernel.asm	/^c010c87f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c882	obj/kernel.asm	/^c010c882:	50                   	push   %eax$/;"	l
c010c883	obj/kernel.asm	/^c010c883:	52                   	push   %edx$/;"	l
c010c884	obj/kernel.asm	/^c010c884:	e8 2d 6c 00 00       	call   c01134b6 <strcpy>$/;"	l
c010c889	obj/kernel.asm	/^c010c889:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c88c	obj/kernel.asm	/^c010c88c:	89 03                	mov    %eax,(%ebx)$/;"	l
c010c88e	obj/kernel.asm	/^c010c88e:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010c891	obj/kernel.asm	/^c010c891:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010c898	obj/kernel.asm	/^c010c898:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010c89b	obj/kernel.asm	/^c010c89b:	01 d0                	add    %edx,%eax$/;"	l
c010c89d	obj/kernel.asm	/^c010c89d:	8b 00                	mov    (%eax),%eax$/;"	l
c010c89f	obj/kernel.asm	/^c010c89f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c8a2	obj/kernel.asm	/^c010c8a2:	68 00 10 00 00       	push   $0x1000$/;"	l
c010c8a7	obj/kernel.asm	/^c010c8a7:	50                   	push   %eax$/;"	l
c010c8a8	obj/kernel.asm	/^c010c8a8:	e8 b0 6b 00 00       	call   c011345d <strnlen>$/;"	l
c010c8ad	obj/kernel.asm	/^c010c8ad:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c8b0	obj/kernel.asm	/^c010c8b0:	83 c0 01             	add    $0x1,%eax$/;"	l
c010c8b3	obj/kernel.asm	/^c010c8b3:	01 45 d0             	add    %eax,-0x30(%ebp)$/;"	l
c010c8b6	obj/kernel.asm	/^c010c8b6:	83 45 cc 01          	addl   $0x1,-0x34(%ebp)$/;"	l
c010c8ba	obj/kernel.asm	/^c010c8ba:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c8bd	obj/kernel.asm	/^c010c8bd:	3b 45 cc             	cmp    -0x34(%ebp),%eax$/;"	l
c010c8c0	obj/kernel.asm	/^c010c8c0:	77 94                	ja     c010c856 <load_icode+0x63a>$/;"	l
c010c8c2	obj/kernel.asm	/^c010c8c2:	8b 45 a0             	mov    -0x60(%ebp),%eax$/;"	l
c010c8c5	obj/kernel.asm	/^c010c8c5:	83 e8 04             	sub    $0x4,%eax$/;"	l
c010c8c8	obj/kernel.asm	/^c010c8c8:	89 45 a4             	mov    %eax,-0x5c(%ebp)$/;"	l
c010c8cb	obj/kernel.asm	/^c010c8cb:	8b 45 a4             	mov    -0x5c(%ebp),%eax$/;"	l
c010c8ce	obj/kernel.asm	/^c010c8ce:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010c8d1	obj/kernel.asm	/^c010c8d1:	89 10                	mov    %edx,(%eax)$/;"	l
c010c8d3	obj/kernel.asm	/^c010c8d3:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010c8d8	obj/kernel.asm	/^c010c8d8:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010c8db	obj/kernel.asm	/^c010c8db:	89 45 9c             	mov    %eax,-0x64(%ebp)$/;"	l
c010c8de	obj/kernel.asm	/^c010c8de:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010c8e1	obj/kernel.asm	/^c010c8e1:	6a 4c                	push   $0x4c$/;"	l
c010c8e3	obj/kernel.asm	/^c010c8e3:	6a 00                	push   $0x0$/;"	l
c010c8e5	obj/kernel.asm	/^c010c8e5:	ff 75 9c             	pushl  -0x64(%ebp)$/;"	l
c010c8e8	obj/kernel.asm	/^c010c8e8:	e8 a2 6e 00 00       	call   c011378f <memset>$/;"	l
c010c8ed	obj/kernel.asm	/^c010c8ed:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c8f0	obj/kernel.asm	/^c010c8f0:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010c8f3	obj/kernel.asm	/^c010c8f3:	66 c7 40 3c 1b 00    	movw   $0x1b,0x3c(%eax)$/;"	l
c010c8f9	obj/kernel.asm	/^c010c8f9:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010c8fc	obj/kernel.asm	/^c010c8fc:	66 c7 40 48 23 00    	movw   $0x23,0x48(%eax)$/;"	l
c010c902	obj/kernel.asm	/^c010c902:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010c905	obj/kernel.asm	/^c010c905:	0f b7 50 48          	movzwl 0x48(%eax),%edx$/;"	l
c010c909	obj/kernel.asm	/^c010c909:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010c90c	obj/kernel.asm	/^c010c90c:	66 89 50 28          	mov    %dx,0x28(%eax)$/;"	l
c010c910	obj/kernel.asm	/^c010c910:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010c913	obj/kernel.asm	/^c010c913:	0f b7 50 28          	movzwl 0x28(%eax),%edx$/;"	l
c010c917	obj/kernel.asm	/^c010c917:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010c91a	obj/kernel.asm	/^c010c91a:	66 89 50 2c          	mov    %dx,0x2c(%eax)$/;"	l
c010c91e	obj/kernel.asm	/^c010c91e:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010c921	obj/kernel.asm	/^c010c921:	8b 55 a4             	mov    -0x5c(%ebp),%edx$/;"	l
c010c924	obj/kernel.asm	/^c010c924:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010c927	obj/kernel.asm	/^c010c927:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c010c92a	obj/kernel.asm	/^c010c92a:	8b 50 18             	mov    0x18(%eax),%edx$/;"	l
c010c92d	obj/kernel.asm	/^c010c92d:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010c930	obj/kernel.asm	/^c010c930:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
c010c933	obj/kernel.asm	/^c010c933:	8b 45 9c             	mov    -0x64(%ebp),%eax$/;"	l
c010c936	obj/kernel.asm	/^c010c936:	c7 40 40 00 02 00 00 	movl   $0x200,0x40(%eax)$/;"	l
c010c93d	obj/kernel.asm	/^c010c93d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010c944	obj/kernel.asm	/^c010c944:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010c947	obj/kernel.asm	/^c010c947:	eb 2c                	jmp    c010c975 <load_icode+0x759>$/;"	l
c010c949	obj/kernel.asm	/^c010c949:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c94c	obj/kernel.asm	/^c010c94c:	ff 75 c8             	pushl  -0x38(%ebp)$/;"	l
c010c94f	obj/kernel.asm	/^c010c94f:	e8 08 8e ff ff       	call   c010575c <exit_mmap>$/;"	l
c010c954	obj/kernel.asm	/^c010c954:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c957	obj/kernel.asm	/^c010c957:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c95a	obj/kernel.asm	/^c010c95a:	ff 75 c8             	pushl  -0x38(%ebp)$/;"	l
c010c95d	obj/kernel.asm	/^c010c95d:	e8 44 f2 ff ff       	call   c010bba6 <put_pgdir>$/;"	l
c010c962	obj/kernel.asm	/^c010c962:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c965	obj/kernel.asm	/^c010c965:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c968	obj/kernel.asm	/^c010c968:	ff 75 c8             	pushl  -0x38(%ebp)$/;"	l
c010c96b	obj/kernel.asm	/^c010c96b:	e8 61 8b ff ff       	call   c01054d1 <mm_destroy>$/;"	l
c010c970	obj/kernel.asm	/^c010c970:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c973	obj/kernel.asm	/^c010c973:	eb cf                	jmp    c010c944 <load_icode+0x728>$/;"	l
c010c975	obj/kernel.asm	/^c010c975:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c010c978	obj/kernel.asm	/^c010c978:	c9                   	leave  $/;"	l
c010c979	obj/kernel.asm	/^c010c979:	c3                   	ret    $/;"	l
c010c97a	obj/kernel.asm	/^c010c97a <put_kargv>:$/;"	l
c010c97a	obj/kernel.asm	/^c010c97a:	55                   	push   %ebp$/;"	l
c010c97b	obj/kernel.asm	/^c010c97b:	89 e5                	mov    %esp,%ebp$/;"	l
c010c97d	obj/kernel.asm	/^c010c97d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010c980	obj/kernel.asm	/^c010c980:	eb 21                	jmp    c010c9a3 <put_kargv+0x29>$/;"	l
c010c982	obj/kernel.asm	/^c010c982:	83 6d 08 01          	subl   $0x1,0x8(%ebp)$/;"	l
c010c986	obj/kernel.asm	/^c010c986:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010c989	obj/kernel.asm	/^c010c989:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010c990	obj/kernel.asm	/^c010c990:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c993	obj/kernel.asm	/^c010c993:	01 d0                	add    %edx,%eax$/;"	l
c010c995	obj/kernel.asm	/^c010c995:	8b 00                	mov    (%eax),%eax$/;"	l
c010c997	obj/kernel.asm	/^c010c997:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c99a	obj/kernel.asm	/^c010c99a:	50                   	push   %eax$/;"	l
c010c99b	obj/kernel.asm	/^c010c99b:	e8 6e aa ff ff       	call   c010740e <kfree>$/;"	l
c010c9a0	obj/kernel.asm	/^c010c9a0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c9a3	obj/kernel.asm	/^c010c9a3:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010c9a7	obj/kernel.asm	/^c010c9a7:	7f d9                	jg     c010c982 <put_kargv+0x8>$/;"	l
c010c9a9	obj/kernel.asm	/^c010c9a9:	c9                   	leave  $/;"	l
c010c9aa	obj/kernel.asm	/^c010c9aa:	c3                   	ret    $/;"	l
c010c9ab	obj/kernel.asm	/^c010c9ab <copy_kargv>:$/;"	l
c010c9ab	obj/kernel.asm	/^c010c9ab:	55                   	push   %ebp$/;"	l
c010c9ac	obj/kernel.asm	/^c010c9ac:	89 e5                	mov    %esp,%ebp$/;"	l
c010c9ae	obj/kernel.asm	/^c010c9ae:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010c9b1	obj/kernel.asm	/^c010c9b1:	c7 45 f0 fd ff ff ff 	movl   $0xfffffffd,-0x10(%ebp)$/;"	l
c010c9b8	obj/kernel.asm	/^c010c9b8:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010c9bb	obj/kernel.asm	/^c010c9bb:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010c9c2	obj/kernel.asm	/^c010c9c2:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010c9c5	obj/kernel.asm	/^c010c9c5:	6a 00                	push   $0x0$/;"	l
c010c9c7	obj/kernel.asm	/^c010c9c7:	52                   	push   %edx$/;"	l
c010c9c8	obj/kernel.asm	/^c010c9c8:	50                   	push   %eax$/;"	l
c010c9c9	obj/kernel.asm	/^c010c9c9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010c9cc	obj/kernel.asm	/^c010c9cc:	e8 40 97 ff ff       	call   c0106111 <user_mem_check>$/;"	l
c010c9d1	obj/kernel.asm	/^c010c9d1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c9d4	obj/kernel.asm	/^c010c9d4:	85 c0                	test   %eax,%eax$/;"	l
c010c9d6	obj/kernel.asm	/^c010c9d6:	75 08                	jne    c010c9e0 <copy_kargv+0x35>$/;"	l
c010c9d8	obj/kernel.asm	/^c010c9d8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010c9db	obj/kernel.asm	/^c010c9db:	e9 a0 00 00 00       	jmp    c010ca80 <copy_kargv+0xd5>$/;"	l
c010c9e0	obj/kernel.asm	/^c010c9e0:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010c9e7	obj/kernel.asm	/^c010c9e7:	eb 74                	jmp    c010ca5d <copy_kargv+0xb2>$/;"	l
c010c9e9	obj/kernel.asm	/^c010c9e9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010c9ec	obj/kernel.asm	/^c010c9ec:	68 00 10 00 00       	push   $0x1000$/;"	l
c010c9f1	obj/kernel.asm	/^c010c9f1:	e8 00 aa ff ff       	call   c01073f6 <kmalloc>$/;"	l
c010c9f6	obj/kernel.asm	/^c010c9f6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010c9f9	obj/kernel.asm	/^c010c9f9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010c9fc	obj/kernel.asm	/^c010c9fc:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010ca00	obj/kernel.asm	/^c010ca00:	75 0a                	jne    c010ca0c <copy_kargv+0x61>$/;"	l
c010ca02	obj/kernel.asm	/^c010ca02:	90                   	nop$/;"	l
c010ca03	obj/kernel.asm	/^c010ca03:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c010ca0a	obj/kernel.asm	/^c010ca0a:	eb 60                	jmp    c010ca6c <copy_kargv+0xc1>$/;"	l
c010ca0c	obj/kernel.asm	/^c010ca0c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ca0f	obj/kernel.asm	/^c010ca0f:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010ca16	obj/kernel.asm	/^c010ca16:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c010ca19	obj/kernel.asm	/^c010ca19:	01 d0                	add    %edx,%eax$/;"	l
c010ca1b	obj/kernel.asm	/^c010ca1b:	8b 00                	mov    (%eax),%eax$/;"	l
c010ca1d	obj/kernel.asm	/^c010ca1d:	68 00 10 00 00       	push   $0x1000$/;"	l
c010ca22	obj/kernel.asm	/^c010ca22:	50                   	push   %eax$/;"	l
c010ca23	obj/kernel.asm	/^c010ca23:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010ca26	obj/kernel.asm	/^c010ca26:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ca29	obj/kernel.asm	/^c010ca29:	e8 03 98 ff ff       	call   c0106231 <copy_string>$/;"	l
c010ca2e	obj/kernel.asm	/^c010ca2e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ca31	obj/kernel.asm	/^c010ca31:	85 c0                	test   %eax,%eax$/;"	l
c010ca33	obj/kernel.asm	/^c010ca33:	75 10                	jne    c010ca45 <copy_kargv+0x9a>$/;"	l
c010ca35	obj/kernel.asm	/^c010ca35:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ca38	obj/kernel.asm	/^c010ca38:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010ca3b	obj/kernel.asm	/^c010ca3b:	e8 ce a9 ff ff       	call   c010740e <kfree>$/;"	l
c010ca40	obj/kernel.asm	/^c010ca40:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ca43	obj/kernel.asm	/^c010ca43:	eb 27                	jmp    c010ca6c <copy_kargv+0xc1>$/;"	l
c010ca45	obj/kernel.asm	/^c010ca45:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ca48	obj/kernel.asm	/^c010ca48:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010ca4f	obj/kernel.asm	/^c010ca4f:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010ca52	obj/kernel.asm	/^c010ca52:	01 c2                	add    %eax,%edx$/;"	l
c010ca54	obj/kernel.asm	/^c010ca54:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ca57	obj/kernel.asm	/^c010ca57:	89 02                	mov    %eax,(%edx)$/;"	l
c010ca59	obj/kernel.asm	/^c010ca59:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010ca5d	obj/kernel.asm	/^c010ca5d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ca60	obj/kernel.asm	/^c010ca60:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010ca63	obj/kernel.asm	/^c010ca63:	7c 84                	jl     c010c9e9 <copy_kargv+0x3e>$/;"	l
c010ca65	obj/kernel.asm	/^c010ca65:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ca6a	obj/kernel.asm	/^c010ca6a:	eb 14                	jmp    c010ca80 <copy_kargv+0xd5>$/;"	l
c010ca6c	obj/kernel.asm	/^c010ca6c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ca6f	obj/kernel.asm	/^c010ca6f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010ca72	obj/kernel.asm	/^c010ca72:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010ca75	obj/kernel.asm	/^c010ca75:	e8 00 ff ff ff       	call   c010c97a <put_kargv>$/;"	l
c010ca7a	obj/kernel.asm	/^c010ca7a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ca7d	obj/kernel.asm	/^c010ca7d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ca80	obj/kernel.asm	/^c010ca80:	c9                   	leave  $/;"	l
c010ca81	obj/kernel.asm	/^c010ca81:	c3                   	ret    $/;"	l
c010ca82	obj/kernel.asm	/^c010ca82 <do_execve>:$/;"	l
c010ca82	obj/kernel.asm	/^c010ca82:	55                   	push   %ebp$/;"	l
c010ca83	obj/kernel.asm	/^c010ca83:	89 e5                	mov    %esp,%ebp$/;"	l
c010ca85	obj/kernel.asm	/^c010ca85:	81 ec d8 00 00 00    	sub    $0xd8,%esp$/;"	l
c010ca8b	obj/kernel.asm	/^c010ca8b:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010ca90	obj/kernel.asm	/^c010ca90:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ca93	obj/kernel.asm	/^c010ca93:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ca96	obj/kernel.asm	/^c010ca96:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010ca9a	obj/kernel.asm	/^c010ca9a:	7e 06                	jle    c010caa2 <do_execve+0x20>$/;"	l
c010ca9c	obj/kernel.asm	/^c010ca9c:	83 7d 0c 20          	cmpl   $0x20,0xc(%ebp)$/;"	l
c010caa0	obj/kernel.asm	/^c010caa0:	7e 0a                	jle    c010caac <do_execve+0x2a>$/;"	l
c010caa2	obj/kernel.asm	/^c010caa2:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010caa7	obj/kernel.asm	/^c010caa7:	e9 f3 01 00 00       	jmp    c010cc9f <do_execve+0x21d>$/;"	l
c010caac	obj/kernel.asm	/^c010caac:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010caaf	obj/kernel.asm	/^c010caaf:	6a 33                	push   $0x33$/;"	l
c010cab1	obj/kernel.asm	/^c010cab1:	6a 00                	push   $0x0$/;"	l
c010cab3	obj/kernel.asm	/^c010cab3:	8d 45 b1             	lea    -0x4f(%ebp),%eax$/;"	l
c010cab6	obj/kernel.asm	/^c010cab6:	50                   	push   %eax$/;"	l
c010cab7	obj/kernel.asm	/^c010cab7:	e8 d3 6c 00 00       	call   c011378f <memset>$/;"	l
c010cabc	obj/kernel.asm	/^c010cabc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cabf	obj/kernel.asm	/^c010cabf:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010cac6	obj/kernel.asm	/^c010cac6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cac9	obj/kernel.asm	/^c010cac9:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010cacc	obj/kernel.asm	/^c010cacc:	e8 d9 e8 ff ff       	call   c010b3aa <lock_mm>$/;"	l
c010cad1	obj/kernel.asm	/^c010cad1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cad4	obj/kernel.asm	/^c010cad4:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010cad8	obj/kernel.asm	/^c010cad8:	75 1e                	jne    c010caf8 <do_execve+0x76>$/;"	l
c010cada	obj/kernel.asm	/^c010cada:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010cadf	obj/kernel.asm	/^c010cadf:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010cae2	obj/kernel.asm	/^c010cae2:	50                   	push   %eax$/;"	l
c010cae3	obj/kernel.asm	/^c010cae3:	68 0b 6c 11 c0       	push   $0xc0116c0b$/;"	l
c010cae8	obj/kernel.asm	/^c010cae8:	6a 33                	push   $0x33$/;"	l
c010caea	obj/kernel.asm	/^c010caea:	8d 45 b1             	lea    -0x4f(%ebp),%eax$/;"	l
c010caed	obj/kernel.asm	/^c010caed:	50                   	push   %eax$/;"	l
c010caee	obj/kernel.asm	/^c010caee:	e8 e6 73 00 00       	call   c0113ed9 <snprintf>$/;"	l
c010caf3	obj/kernel.asm	/^c010caf3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010caf6	obj/kernel.asm	/^c010caf6:	eb 2e                	jmp    c010cb26 <do_execve+0xa4>$/;"	l
c010caf8	obj/kernel.asm	/^c010caf8:	6a 33                	push   $0x33$/;"	l
c010cafa	obj/kernel.asm	/^c010cafa:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010cafd	obj/kernel.asm	/^c010cafd:	8d 45 b1             	lea    -0x4f(%ebp),%eax$/;"	l
c010cb00	obj/kernel.asm	/^c010cb00:	50                   	push   %eax$/;"	l
c010cb01	obj/kernel.asm	/^c010cb01:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010cb04	obj/kernel.asm	/^c010cb04:	e8 28 97 ff ff       	call   c0106231 <copy_string>$/;"	l
c010cb09	obj/kernel.asm	/^c010cb09:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cb0c	obj/kernel.asm	/^c010cb0c:	85 c0                	test   %eax,%eax$/;"	l
c010cb0e	obj/kernel.asm	/^c010cb0e:	75 16                	jne    c010cb26 <do_execve+0xa4>$/;"	l
c010cb10	obj/kernel.asm	/^c010cb10:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cb13	obj/kernel.asm	/^c010cb13:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010cb16	obj/kernel.asm	/^c010cb16:	e8 c6 e8 ff ff       	call   c010b3e1 <unlock_mm>$/;"	l
c010cb1b	obj/kernel.asm	/^c010cb1b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cb1e	obj/kernel.asm	/^c010cb1e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cb21	obj/kernel.asm	/^c010cb21:	e9 79 01 00 00       	jmp    c010cc9f <do_execve+0x21d>$/;"	l
c010cb26	obj/kernel.asm	/^c010cb26:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010cb29	obj/kernel.asm	/^c010cb29:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010cb2f	obj/kernel.asm	/^c010cb2f:	50                   	push   %eax$/;"	l
c010cb30	obj/kernel.asm	/^c010cb30:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010cb33	obj/kernel.asm	/^c010cb33:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010cb36	obj/kernel.asm	/^c010cb36:	e8 70 fe ff ff       	call   c010c9ab <copy_kargv>$/;"	l
c010cb3b	obj/kernel.asm	/^c010cb3b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cb3e	obj/kernel.asm	/^c010cb3e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cb41	obj/kernel.asm	/^c010cb41:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010cb45	obj/kernel.asm	/^c010cb45:	74 16                	je     c010cb5d <do_execve+0xdb>$/;"	l
c010cb47	obj/kernel.asm	/^c010cb47:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cb4a	obj/kernel.asm	/^c010cb4a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010cb4d	obj/kernel.asm	/^c010cb4d:	e8 8f e8 ff ff       	call   c010b3e1 <unlock_mm>$/;"	l
c010cb52	obj/kernel.asm	/^c010cb52:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cb55	obj/kernel.asm	/^c010cb55:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cb58	obj/kernel.asm	/^c010cb58:	e9 42 01 00 00       	jmp    c010cc9f <do_execve+0x21d>$/;"	l
c010cb5d	obj/kernel.asm	/^c010cb5d:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010cb60	obj/kernel.asm	/^c010cb60:	8b 00                	mov    (%eax),%eax$/;"	l
c010cb62	obj/kernel.asm	/^c010cb62:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010cb65	obj/kernel.asm	/^c010cb65:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cb68	obj/kernel.asm	/^c010cb68:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010cb6b	obj/kernel.asm	/^c010cb6b:	e8 71 e8 ff ff       	call   c010b3e1 <unlock_mm>$/;"	l
c010cb70	obj/kernel.asm	/^c010cb70:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cb73	obj/kernel.asm	/^c010cb73:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010cb78	obj/kernel.asm	/^c010cb78:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010cb7e	obj/kernel.asm	/^c010cb7e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cb81	obj/kernel.asm	/^c010cb81:	50                   	push   %eax$/;"	l
c010cb82	obj/kernel.asm	/^c010cb82:	e8 ed e4 ff ff       	call   c010b074 <files_closeall>$/;"	l
c010cb87	obj/kernel.asm	/^c010cb87:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cb8a	obj/kernel.asm	/^c010cb8a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010cb8d	obj/kernel.asm	/^c010cb8d:	6a 00                	push   $0x0$/;"	l
c010cb8f	obj/kernel.asm	/^c010cb8f:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010cb92	obj/kernel.asm	/^c010cb92:	e8 37 cd ff ff       	call   c01098ce <sysfile_open>$/;"	l
c010cb97	obj/kernel.asm	/^c010cb97:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cb9a	obj/kernel.asm	/^c010cb9a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010cb9d	obj/kernel.asm	/^c010cb9d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010cba0	obj/kernel.asm	/^c010cba0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cba3	obj/kernel.asm	/^c010cba3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010cba7	obj/kernel.asm	/^c010cba7:	79 05                	jns    c010cbae <do_execve+0x12c>$/;"	l
c010cba9	obj/kernel.asm	/^c010cba9:	e9 b7 00 00 00       	jmp    c010cc65 <do_execve+0x1e3>$/;"	l
c010cbae	obj/kernel.asm	/^c010cbae:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010cbb2	obj/kernel.asm	/^c010cbb2:	74 56                	je     c010cc0a <do_execve+0x188>$/;"	l
c010cbb4	obj/kernel.asm	/^c010cbb4:	a1 a8 21 15 c0       	mov    0xc01521a8,%eax$/;"	l
c010cbb9	obj/kernel.asm	/^c010cbb9:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010cbbc	obj/kernel.asm	/^c010cbbc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010cbbf	obj/kernel.asm	/^c010cbbf:	0f 22 d8             	mov    %eax,%cr3$/;"	l
c010cbc2	obj/kernel.asm	/^c010cbc2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cbc5	obj/kernel.asm	/^c010cbc5:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010cbc8	obj/kernel.asm	/^c010cbc8:	e8 c3 e7 ff ff       	call   c010b390 <mm_count_dec>$/;"	l
c010cbcd	obj/kernel.asm	/^c010cbcd:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cbd0	obj/kernel.asm	/^c010cbd0:	85 c0                	test   %eax,%eax$/;"	l
c010cbd2	obj/kernel.asm	/^c010cbd2:	75 2a                	jne    c010cbfe <do_execve+0x17c>$/;"	l
c010cbd4	obj/kernel.asm	/^c010cbd4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cbd7	obj/kernel.asm	/^c010cbd7:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010cbda	obj/kernel.asm	/^c010cbda:	e8 7d 8b ff ff       	call   c010575c <exit_mmap>$/;"	l
c010cbdf	obj/kernel.asm	/^c010cbdf:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cbe2	obj/kernel.asm	/^c010cbe2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cbe5	obj/kernel.asm	/^c010cbe5:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010cbe8	obj/kernel.asm	/^c010cbe8:	e8 b9 ef ff ff       	call   c010bba6 <put_pgdir>$/;"	l
c010cbed	obj/kernel.asm	/^c010cbed:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cbf0	obj/kernel.asm	/^c010cbf0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cbf3	obj/kernel.asm	/^c010cbf3:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010cbf6	obj/kernel.asm	/^c010cbf6:	e8 d6 88 ff ff       	call   c01054d1 <mm_destroy>$/;"	l
c010cbfb	obj/kernel.asm	/^c010cbfb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cbfe	obj/kernel.asm	/^c010cbfe:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010cc03	obj/kernel.asm	/^c010cc03:	c7 40 18 00 00 00 00 	movl   $0x0,0x18(%eax)$/;"	l
c010cc0a	obj/kernel.asm	/^c010cc0a:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010cc11	obj/kernel.asm	/^c010cc11:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010cc14	obj/kernel.asm	/^c010cc14:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010cc1a	obj/kernel.asm	/^c010cc1a:	50                   	push   %eax$/;"	l
c010cc1b	obj/kernel.asm	/^c010cc1b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010cc1e	obj/kernel.asm	/^c010cc1e:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010cc21	obj/kernel.asm	/^c010cc21:	e8 f6 f5 ff ff       	call   c010c21c <load_icode>$/;"	l
c010cc26	obj/kernel.asm	/^c010cc26:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cc29	obj/kernel.asm	/^c010cc29:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cc2c	obj/kernel.asm	/^c010cc2c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010cc30	obj/kernel.asm	/^c010cc30:	74 02                	je     c010cc34 <do_execve+0x1b2>$/;"	l
c010cc32	obj/kernel.asm	/^c010cc32:	eb 31                	jmp    c010cc65 <do_execve+0x1e3>$/;"	l
c010cc34	obj/kernel.asm	/^c010cc34:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010cc37	obj/kernel.asm	/^c010cc37:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010cc3d	obj/kernel.asm	/^c010cc3d:	50                   	push   %eax$/;"	l
c010cc3e	obj/kernel.asm	/^c010cc3e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010cc41	obj/kernel.asm	/^c010cc41:	e8 34 fd ff ff       	call   c010c97a <put_kargv>$/;"	l
c010cc46	obj/kernel.asm	/^c010cc46:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cc49	obj/kernel.asm	/^c010cc49:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010cc4e	obj/kernel.asm	/^c010cc4e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010cc51	obj/kernel.asm	/^c010cc51:	8d 55 b1             	lea    -0x4f(%ebp),%edx$/;"	l
c010cc54	obj/kernel.asm	/^c010cc54:	52                   	push   %edx$/;"	l
c010cc55	obj/kernel.asm	/^c010cc55:	50                   	push   %eax$/;"	l
c010cc56	obj/kernel.asm	/^c010cc56:	e8 6c e9 ff ff       	call   c010b5c7 <set_proc_name>$/;"	l
c010cc5b	obj/kernel.asm	/^c010cc5b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cc5e	obj/kernel.asm	/^c010cc5e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010cc63	obj/kernel.asm	/^c010cc63:	eb 3a                	jmp    c010cc9f <do_execve+0x21d>$/;"	l
c010cc65	obj/kernel.asm	/^c010cc65:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010cc68	obj/kernel.asm	/^c010cc68:	8d 85 30 ff ff ff    	lea    -0xd0(%ebp),%eax$/;"	l
c010cc6e	obj/kernel.asm	/^c010cc6e:	50                   	push   %eax$/;"	l
c010cc6f	obj/kernel.asm	/^c010cc6f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010cc72	obj/kernel.asm	/^c010cc72:	e8 03 fd ff ff       	call   c010c97a <put_kargv>$/;"	l
c010cc77	obj/kernel.asm	/^c010cc77:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cc7a	obj/kernel.asm	/^c010cc7a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cc7d	obj/kernel.asm	/^c010cc7d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010cc80	obj/kernel.asm	/^c010cc80:	e8 34 f3 ff ff       	call   c010bfb9 <do_exit>$/;"	l
c010cc85	obj/kernel.asm	/^c010cc85:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cc88	obj/kernel.asm	/^c010cc88:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010cc8b	obj/kernel.asm	/^c010cc8b:	68 15 6c 11 c0       	push   $0xc0116c15$/;"	l
c010cc90	obj/kernel.asm	/^c010cc90:	68 61 03 00 00       	push   $0x361$/;"	l
c010cc95	obj/kernel.asm	/^c010cc95:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010cc9a	obj/kernel.asm	/^c010cc9a:	e8 30 38 ff ff       	call   c01004cf <__panic>$/;"	l
c010cc9f	obj/kernel.asm	/^c010cc9f:	c9                   	leave  $/;"	l
c010cca0	obj/kernel.asm	/^c010cca0:	c3                   	ret    $/;"	l
c010cca1	obj/kernel.asm	/^c010cca1 <do_yield>:$/;"	l
c010cca1	obj/kernel.asm	/^c010cca1:	55                   	push   %ebp$/;"	l
c010cca2	obj/kernel.asm	/^c010cca2:	89 e5                	mov    %esp,%ebp$/;"	l
c010cca4	obj/kernel.asm	/^c010cca4:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010cca9	obj/kernel.asm	/^c010cca9:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010ccb0	obj/kernel.asm	/^c010ccb0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ccb5	obj/kernel.asm	/^c010ccb5:	5d                   	pop    %ebp$/;"	l
c010ccb6	obj/kernel.asm	/^c010ccb6:	c3                   	ret    $/;"	l
c010ccb7	obj/kernel.asm	/^c010ccb7 <do_wait>:$/;"	l
c010ccb7	obj/kernel.asm	/^c010ccb7:	55                   	push   %ebp$/;"	l
c010ccb8	obj/kernel.asm	/^c010ccb8:	89 e5                	mov    %esp,%ebp$/;"	l
c010ccba	obj/kernel.asm	/^c010ccba:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ccbd	obj/kernel.asm	/^c010ccbd:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010ccc2	obj/kernel.asm	/^c010ccc2:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010ccc5	obj/kernel.asm	/^c010ccc5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ccc8	obj/kernel.asm	/^c010ccc8:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010cccc	obj/kernel.asm	/^c010cccc:	74 21                	je     c010ccef <do_wait+0x38>$/;"	l
c010ccce	obj/kernel.asm	/^c010ccce:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ccd1	obj/kernel.asm	/^c010ccd1:	6a 01                	push   $0x1$/;"	l
c010ccd3	obj/kernel.asm	/^c010ccd3:	6a 04                	push   $0x4$/;"	l
c010ccd5	obj/kernel.asm	/^c010ccd5:	50                   	push   %eax$/;"	l
c010ccd6	obj/kernel.asm	/^c010ccd6:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010ccd9	obj/kernel.asm	/^c010ccd9:	e8 33 94 ff ff       	call   c0106111 <user_mem_check>$/;"	l
c010ccde	obj/kernel.asm	/^c010ccde:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cce1	obj/kernel.asm	/^c010cce1:	85 c0                	test   %eax,%eax$/;"	l
c010cce3	obj/kernel.asm	/^c010cce3:	75 0a                	jne    c010ccef <do_wait+0x38>$/;"	l
c010cce5	obj/kernel.asm	/^c010cce5:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010ccea	obj/kernel.asm	/^c010ccea:	e9 60 01 00 00       	jmp    c010ce4f <do_wait+0x198>$/;"	l
c010ccef	obj/kernel.asm	/^c010ccef:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c010ccf6	obj/kernel.asm	/^c010ccf6:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010ccfa	obj/kernel.asm	/^c010ccfa:	74 3c                	je     c010cd38 <do_wait+0x81>$/;"	l
c010ccfc	obj/kernel.asm	/^c010ccfc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ccff	obj/kernel.asm	/^c010ccff:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010cd02	obj/kernel.asm	/^c010cd02:	e8 c7 ec ff ff       	call   c010b9ce <find_proc>$/;"	l
c010cd07	obj/kernel.asm	/^c010cd07:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cd0a	obj/kernel.asm	/^c010cd0a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cd0d	obj/kernel.asm	/^c010cd0d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010cd11	obj/kernel.asm	/^c010cd11:	74 5a                	je     c010cd6d <do_wait+0xb6>$/;"	l
c010cd13	obj/kernel.asm	/^c010cd13:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cd16	obj/kernel.asm	/^c010cd16:	8b 50 14             	mov    0x14(%eax),%edx$/;"	l
c010cd19	obj/kernel.asm	/^c010cd19:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010cd1e	obj/kernel.asm	/^c010cd1e:	39 c2                	cmp    %eax,%edx$/;"	l
c010cd20	obj/kernel.asm	/^c010cd20:	75 4b                	jne    c010cd6d <do_wait+0xb6>$/;"	l
c010cd22	obj/kernel.asm	/^c010cd22:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010cd29	obj/kernel.asm	/^c010cd29:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cd2c	obj/kernel.asm	/^c010cd2c:	8b 00                	mov    (%eax),%eax$/;"	l
c010cd2e	obj/kernel.asm	/^c010cd2e:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010cd31	obj/kernel.asm	/^c010cd31:	75 3a                	jne    c010cd6d <do_wait+0xb6>$/;"	l
c010cd33	obj/kernel.asm	/^c010cd33:	e9 85 00 00 00       	jmp    c010cdbd <do_wait+0x106>$/;"	l
c010cd38	obj/kernel.asm	/^c010cd38:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010cd3d	obj/kernel.asm	/^c010cd3d:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010cd43	obj/kernel.asm	/^c010cd43:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cd46	obj/kernel.asm	/^c010cd46:	eb 1f                	jmp    c010cd67 <do_wait+0xb0>$/;"	l
c010cd48	obj/kernel.asm	/^c010cd48:	c7 45 f0 01 00 00 00 	movl   $0x1,-0x10(%ebp)$/;"	l
c010cd4f	obj/kernel.asm	/^c010cd4f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cd52	obj/kernel.asm	/^c010cd52:	8b 00                	mov    (%eax),%eax$/;"	l
c010cd54	obj/kernel.asm	/^c010cd54:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010cd57	obj/kernel.asm	/^c010cd57:	75 02                	jne    c010cd5b <do_wait+0xa4>$/;"	l
c010cd59	obj/kernel.asm	/^c010cd59:	eb 62                	jmp    c010cdbd <do_wait+0x106>$/;"	l
c010cd5b	obj/kernel.asm	/^c010cd5b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cd5e	obj/kernel.asm	/^c010cd5e:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010cd64	obj/kernel.asm	/^c010cd64:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cd67	obj/kernel.asm	/^c010cd67:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010cd6b	obj/kernel.asm	/^c010cd6b:	75 db                	jne    c010cd48 <do_wait+0x91>$/;"	l
c010cd6d	obj/kernel.asm	/^c010cd6d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010cd71	obj/kernel.asm	/^c010cd71:	74 40                	je     c010cdb3 <do_wait+0xfc>$/;"	l
c010cd73	obj/kernel.asm	/^c010cd73:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010cd78	obj/kernel.asm	/^c010cd78:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010cd7e	obj/kernel.asm	/^c010cd7e:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010cd83	obj/kernel.asm	/^c010cd83:	c7 80 90 00 00 00 01 	movl   $0x80000001,0x90(%eax)$/;"	l
c010cd8a	obj/kernel.asm	/^c010cd8a:	00 00 80 $/;"	l
c010cd8d	obj/kernel.asm	/^c010cd8d:	e8 3b 08 00 00       	call   c010d5cd <schedule>$/;"	l
c010cd92	obj/kernel.asm	/^c010cd92:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010cd97	obj/kernel.asm	/^c010cd97:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010cd9a	obj/kernel.asm	/^c010cd9a:	83 e0 01             	and    $0x1,%eax$/;"	l
c010cd9d	obj/kernel.asm	/^c010cd9d:	85 c0                	test   %eax,%eax$/;"	l
c010cd9f	obj/kernel.asm	/^c010cd9f:	74 0d                	je     c010cdae <do_wait+0xf7>$/;"	l
c010cda1	obj/kernel.asm	/^c010cda1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cda4	obj/kernel.asm	/^c010cda4:	6a f7                	push   $0xfffffff7$/;"	l
c010cda6	obj/kernel.asm	/^c010cda6:	e8 0e f2 ff ff       	call   c010bfb9 <do_exit>$/;"	l
c010cdab	obj/kernel.asm	/^c010cdab:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cdae	obj/kernel.asm	/^c010cdae:	e9 3c ff ff ff       	jmp    c010ccef <do_wait+0x38>$/;"	l
c010cdb3	obj/kernel.asm	/^c010cdb3:	b8 fe ff ff ff       	mov    $0xfffffffe,%eax$/;"	l
c010cdb8	obj/kernel.asm	/^c010cdb8:	e9 92 00 00 00       	jmp    c010ce4f <do_wait+0x198>$/;"	l
c010cdbd	obj/kernel.asm	/^c010cdbd:	a1 80 f0 14 c0       	mov    0xc014f080,%eax$/;"	l
c010cdc2	obj/kernel.asm	/^c010cdc2:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010cdc5	obj/kernel.asm	/^c010cdc5:	74 0a                	je     c010cdd1 <do_wait+0x11a>$/;"	l
c010cdc7	obj/kernel.asm	/^c010cdc7:	a1 84 f0 14 c0       	mov    0xc014f084,%eax$/;"	l
c010cdcc	obj/kernel.asm	/^c010cdcc:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010cdcf	obj/kernel.asm	/^c010cdcf:	75 17                	jne    c010cde8 <do_wait+0x131>$/;"	l
c010cdd1	obj/kernel.asm	/^c010cdd1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010cdd4	obj/kernel.asm	/^c010cdd4:	68 28 6c 11 c0       	push   $0xc0116c28$/;"	l
c010cdd9	obj/kernel.asm	/^c010cdd9:	68 9a 03 00 00       	push   $0x39a$/;"	l
c010cdde	obj/kernel.asm	/^c010cdde:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010cde3	obj/kernel.asm	/^c010cde3:	e8 e7 36 ff ff       	call   c01004cf <__panic>$/;"	l
c010cde8	obj/kernel.asm	/^c010cde8:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010cdec	obj/kernel.asm	/^c010cdec:	74 0e                	je     c010cdfc <do_wait+0x145>$/;"	l
c010cdee	obj/kernel.asm	/^c010cdee:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cdf1	obj/kernel.asm	/^c010cdf1:	8b 90 8c 00 00 00    	mov    0x8c(%eax),%edx$/;"	l
c010cdf7	obj/kernel.asm	/^c010cdf7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010cdfa	obj/kernel.asm	/^c010cdfa:	89 10                	mov    %edx,(%eax)$/;"	l
c010cdfc	obj/kernel.asm	/^c010cdfc:	e8 41 e4 ff ff       	call   c010b242 <__intr_save>$/;"	l
c010ce01	obj/kernel.asm	/^c010ce01:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ce04	obj/kernel.asm	/^c010ce04:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ce07	obj/kernel.asm	/^c010ce07:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010ce0a	obj/kernel.asm	/^c010ce0a:	e8 8a eb ff ff       	call   c010b999 <unhash_proc>$/;"	l
c010ce0f	obj/kernel.asm	/^c010ce0f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ce12	obj/kernel.asm	/^c010ce12:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ce15	obj/kernel.asm	/^c010ce15:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010ce18	obj/kernel.asm	/^c010ce18:	e8 ce e8 ff ff       	call   c010b6eb <remove_links>$/;"	l
c010ce1d	obj/kernel.asm	/^c010ce1d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ce20	obj/kernel.asm	/^c010ce20:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ce23	obj/kernel.asm	/^c010ce23:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010ce26	obj/kernel.asm	/^c010ce26:	e8 41 e4 ff ff       	call   c010b26c <__intr_restore>$/;"	l
c010ce2b	obj/kernel.asm	/^c010ce2b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ce2e	obj/kernel.asm	/^c010ce2e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ce31	obj/kernel.asm	/^c010ce31:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010ce34	obj/kernel.asm	/^c010ce34:	e8 ac ec ff ff       	call   c010bae5 <put_kstack>$/;"	l
c010ce39	obj/kernel.asm	/^c010ce39:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ce3c	obj/kernel.asm	/^c010ce3c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ce3f	obj/kernel.asm	/^c010ce3f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010ce42	obj/kernel.asm	/^c010ce42:	e8 c7 a5 ff ff       	call   c010740e <kfree>$/;"	l
c010ce47	obj/kernel.asm	/^c010ce47:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ce4a	obj/kernel.asm	/^c010ce4a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ce4f	obj/kernel.asm	/^c010ce4f:	c9                   	leave  $/;"	l
c010ce50	obj/kernel.asm	/^c010ce50:	c3                   	ret    $/;"	l
c010ce51	obj/kernel.asm	/^c010ce51 <do_kill>:$/;"	l
c010ce51	obj/kernel.asm	/^c010ce51:	55                   	push   %ebp$/;"	l
c010ce52	obj/kernel.asm	/^c010ce52:	89 e5                	mov    %esp,%ebp$/;"	l
c010ce54	obj/kernel.asm	/^c010ce54:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ce57	obj/kernel.asm	/^c010ce57:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ce5a	obj/kernel.asm	/^c010ce5a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ce5d	obj/kernel.asm	/^c010ce5d:	e8 6c eb ff ff       	call   c010b9ce <find_proc>$/;"	l
c010ce62	obj/kernel.asm	/^c010ce62:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ce65	obj/kernel.asm	/^c010ce65:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ce68	obj/kernel.asm	/^c010ce68:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ce6c	obj/kernel.asm	/^c010ce6c:	74 47                	je     c010ceb5 <do_kill+0x64>$/;"	l
c010ce6e	obj/kernel.asm	/^c010ce6e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ce71	obj/kernel.asm	/^c010ce71:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010ce74	obj/kernel.asm	/^c010ce74:	83 e0 01             	and    $0x1,%eax$/;"	l
c010ce77	obj/kernel.asm	/^c010ce77:	85 c0                	test   %eax,%eax$/;"	l
c010ce79	obj/kernel.asm	/^c010ce79:	75 33                	jne    c010ceae <do_kill+0x5d>$/;"	l
c010ce7b	obj/kernel.asm	/^c010ce7b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ce7e	obj/kernel.asm	/^c010ce7e:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010ce81	obj/kernel.asm	/^c010ce81:	83 c8 01             	or     $0x1,%eax$/;"	l
c010ce84	obj/kernel.asm	/^c010ce84:	89 c2                	mov    %eax,%edx$/;"	l
c010ce86	obj/kernel.asm	/^c010ce86:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ce89	obj/kernel.asm	/^c010ce89:	89 50 44             	mov    %edx,0x44(%eax)$/;"	l
c010ce8c	obj/kernel.asm	/^c010ce8c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ce8f	obj/kernel.asm	/^c010ce8f:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010ce95	obj/kernel.asm	/^c010ce95:	85 c0                	test   %eax,%eax$/;"	l
c010ce97	obj/kernel.asm	/^c010ce97:	79 0e                	jns    c010cea7 <do_kill+0x56>$/;"	l
c010ce99	obj/kernel.asm	/^c010ce99:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ce9c	obj/kernel.asm	/^c010ce9c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010ce9f	obj/kernel.asm	/^c010ce9f:	e8 9a 06 00 00       	call   c010d53e <wakeup_proc>$/;"	l
c010cea4	obj/kernel.asm	/^c010cea4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cea7	obj/kernel.asm	/^c010cea7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ceac	obj/kernel.asm	/^c010ceac:	eb 0c                	jmp    c010ceba <do_kill+0x69>$/;"	l
c010ceae	obj/kernel.asm	/^c010ceae:	b8 f7 ff ff ff       	mov    $0xfffffff7,%eax$/;"	l
c010ceb3	obj/kernel.asm	/^c010ceb3:	eb 05                	jmp    c010ceba <do_kill+0x69>$/;"	l
c010ceb5	obj/kernel.asm	/^c010ceb5:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010ceba	obj/kernel.asm	/^c010ceba:	c9                   	leave  $/;"	l
c010cebb	obj/kernel.asm	/^c010cebb:	c3                   	ret    $/;"	l
c010cebc	obj/kernel.asm	/^c010cebc <kernel_execve>:$/;"	l
c010cebc	obj/kernel.asm	/^c010cebc:	55                   	push   %ebp$/;"	l
c010cebd	obj/kernel.asm	/^c010cebd:	89 e5                	mov    %esp,%ebp$/;"	l
c010cebf	obj/kernel.asm	/^c010cebf:	53                   	push   %ebx$/;"	l
c010cec0	obj/kernel.asm	/^c010cec0:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010cec3	obj/kernel.asm	/^c010cec3:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c010ceca	obj/kernel.asm	/^c010ceca:	eb 04                	jmp    c010ced0 <kernel_execve+0x14>$/;"	l
c010cecc	obj/kernel.asm	/^c010cecc:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
c010ced0	obj/kernel.asm	/^c010ced0:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010ced3	obj/kernel.asm	/^c010ced3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c010ceda	obj/kernel.asm	/^c010ceda:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010cedd	obj/kernel.asm	/^c010cedd:	01 d0                	add    %edx,%eax$/;"	l
c010cedf	obj/kernel.asm	/^c010cedf:	8b 00                	mov    (%eax),%eax$/;"	l
c010cee1	obj/kernel.asm	/^c010cee1:	85 c0                	test   %eax,%eax$/;"	l
c010cee3	obj/kernel.asm	/^c010cee3:	75 e7                	jne    c010cecc <kernel_execve+0x10>$/;"	l
c010cee5	obj/kernel.asm	/^c010cee5:	b8 04 00 00 00       	mov    $0x4,%eax$/;"	l
c010ceea	obj/kernel.asm	/^c010ceea:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010ceed	obj/kernel.asm	/^c010ceed:	8b 4d f8             	mov    -0x8(%ebp),%ecx$/;"	l
c010cef0	obj/kernel.asm	/^c010cef0:	8b 5d 0c             	mov    0xc(%ebp),%ebx$/;"	l
c010cef3	obj/kernel.asm	/^c010cef3:	cd 80                	int    $0x80$/;"	l
c010cef5	obj/kernel.asm	/^c010cef5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cef8	obj/kernel.asm	/^c010cef8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010cefb	obj/kernel.asm	/^c010cefb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cefe	obj/kernel.asm	/^c010cefe:	5b                   	pop    %ebx$/;"	l
c010ceff	obj/kernel.asm	/^c010ceff:	5d                   	pop    %ebp$/;"	l
c010cf00	obj/kernel.asm	/^c010cf00:	c3                   	ret    $/;"	l
c010cf01	obj/kernel.asm	/^c010cf01 <user_main>:$/;"	l
c010cf01	obj/kernel.asm	/^c010cf01:	55                   	push   %ebp$/;"	l
c010cf02	obj/kernel.asm	/^c010cf02:	89 e5                	mov    %esp,%ebp$/;"	l
c010cf04	obj/kernel.asm	/^c010cf04:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010cf07	obj/kernel.asm	/^c010cf07:	c7 45 f0 44 6c 11 c0 	movl   $0xc0116c44,-0x10(%ebp)$/;"	l
c010cf0e	obj/kernel.asm	/^c010cf0e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010cf15	obj/kernel.asm	/^c010cf15:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010cf1a	obj/kernel.asm	/^c010cf1a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010cf1d	obj/kernel.asm	/^c010cf1d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010cf20	obj/kernel.asm	/^c010cf20:	68 44 6c 11 c0       	push   $0xc0116c44$/;"	l
c010cf25	obj/kernel.asm	/^c010cf25:	50                   	push   %eax$/;"	l
c010cf26	obj/kernel.asm	/^c010cf26:	68 48 6c 11 c0       	push   $0xc0116c48$/;"	l
c010cf2b	obj/kernel.asm	/^c010cf2b:	e8 3a 34 ff ff       	call   c010036a <cprintf>$/;"	l
c010cf30	obj/kernel.asm	/^c010cf30:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cf33	obj/kernel.asm	/^c010cf33:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010cf36	obj/kernel.asm	/^c010cf36:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010cf39	obj/kernel.asm	/^c010cf39:	50                   	push   %eax$/;"	l
c010cf3a	obj/kernel.asm	/^c010cf3a:	68 44 6c 11 c0       	push   $0xc0116c44$/;"	l
c010cf3f	obj/kernel.asm	/^c010cf3f:	e8 78 ff ff ff       	call   c010cebc <kernel_execve>$/;"	l
c010cf44	obj/kernel.asm	/^c010cf44:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cf47	obj/kernel.asm	/^c010cf47:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010cf4a	obj/kernel.asm	/^c010cf4a:	68 6f 6c 11 c0       	push   $0xc0116c6f$/;"	l
c010cf4f	obj/kernel.asm	/^c010cf4f:	68 e5 03 00 00       	push   $0x3e5$/;"	l
c010cf54	obj/kernel.asm	/^c010cf54:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010cf59	obj/kernel.asm	/^c010cf59:	e8 71 35 ff ff       	call   c01004cf <__panic>$/;"	l
c010cf5e	obj/kernel.asm	/^c010cf5e <init_main>:$/;"	l
c010cf5e	obj/kernel.asm	/^c010cf5e:	55                   	push   %ebp$/;"	l
c010cf5f	obj/kernel.asm	/^c010cf5f:	89 e5                	mov    %esp,%ebp$/;"	l
c010cf61	obj/kernel.asm	/^c010cf61:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010cf64	obj/kernel.asm	/^c010cf64:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cf67	obj/kernel.asm	/^c010cf67:	68 89 6c 11 c0       	push   $0xc0116c89$/;"	l
c010cf6c	obj/kernel.asm	/^c010cf6c:	e8 b7 27 00 00       	call   c010f728 <vfs_set_bootfs>$/;"	l
c010cf71	obj/kernel.asm	/^c010cf71:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cf74	obj/kernel.asm	/^c010cf74:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010cf77	obj/kernel.asm	/^c010cf77:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010cf7b	obj/kernel.asm	/^c010cf7b:	74 17                	je     c010cf94 <init_main+0x36>$/;"	l
c010cf7d	obj/kernel.asm	/^c010cf7d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010cf80	obj/kernel.asm	/^c010cf80:	68 90 6c 11 c0       	push   $0xc0116c90$/;"	l
c010cf85	obj/kernel.asm	/^c010cf85:	68 ed 03 00 00       	push   $0x3ed$/;"	l
c010cf8a	obj/kernel.asm	/^c010cf8a:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010cf8f	obj/kernel.asm	/^c010cf8f:	e8 3b 35 ff ff       	call   c01004cf <__panic>$/;"	l
c010cf94	obj/kernel.asm	/^c010cf94:	e8 15 69 ff ff       	call   c01038ae <nr_free_pages>$/;"	l
c010cf99	obj/kernel.asm	/^c010cf99:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010cf9c	obj/kernel.asm	/^c010cf9c:	e8 38 a3 ff ff       	call   c01072d9 <kallocated>$/;"	l
c010cfa1	obj/kernel.asm	/^c010cfa1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010cfa4	obj/kernel.asm	/^c010cfa4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010cfa7	obj/kernel.asm	/^c010cfa7:	6a 00                	push   $0x0$/;"	l
c010cfa9	obj/kernel.asm	/^c010cfa9:	6a 00                	push   $0x0$/;"	l
c010cfab	obj/kernel.asm	/^c010cfab:	68 01 cf 10 c0       	push   $0xc010cf01$/;"	l
c010cfb0	obj/kernel.asm	/^c010cfb0:	e8 8b ea ff ff       	call   c010ba40 <kernel_thread>$/;"	l
c010cfb5	obj/kernel.asm	/^c010cfb5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cfb8	obj/kernel.asm	/^c010cfb8:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010cfbb	obj/kernel.asm	/^c010cfbb:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010cfbf	obj/kernel.asm	/^c010cfbf:	7f 17                	jg     c010cfd8 <init_main+0x7a>$/;"	l
c010cfc1	obj/kernel.asm	/^c010cfc1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010cfc4	obj/kernel.asm	/^c010cfc4:	68 a9 6c 11 c0       	push   $0xc0116ca9$/;"	l
c010cfc9	obj/kernel.asm	/^c010cfc9:	68 f5 03 00 00       	push   $0x3f5$/;"	l
c010cfce	obj/kernel.asm	/^c010cfce:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010cfd3	obj/kernel.asm	/^c010cfd3:	e8 f7 34 ff ff       	call   c01004cf <__panic>$/;"	l
c010cfd8	obj/kernel.asm	/^c010cfd8:	e8 ca bd ff ff       	call   c0108da7 <check_sync>$/;"	l
c010cfdd	obj/kernel.asm	/^c010cfdd:	eb 05                	jmp    c010cfe4 <init_main+0x86>$/;"	l
c010cfdf	obj/kernel.asm	/^c010cfdf:	e8 e9 05 00 00       	call   c010d5cd <schedule>$/;"	l
c010cfe4	obj/kernel.asm	/^c010cfe4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010cfe7	obj/kernel.asm	/^c010cfe7:	6a 00                	push   $0x0$/;"	l
c010cfe9	obj/kernel.asm	/^c010cfe9:	6a 00                	push   $0x0$/;"	l
c010cfeb	obj/kernel.asm	/^c010cfeb:	e8 c7 fc ff ff       	call   c010ccb7 <do_wait>$/;"	l
c010cff0	obj/kernel.asm	/^c010cff0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010cff3	obj/kernel.asm	/^c010cff3:	85 c0                	test   %eax,%eax$/;"	l
c010cff5	obj/kernel.asm	/^c010cff5:	74 e8                	je     c010cfdf <init_main+0x81>$/;"	l
c010cff7	obj/kernel.asm	/^c010cff7:	e8 18 df ff ff       	call   c010af14 <fs_cleanup>$/;"	l
c010cffc	obj/kernel.asm	/^c010cffc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010cfff	obj/kernel.asm	/^c010cfff:	68 c4 6c 11 c0       	push   $0xc0116cc4$/;"	l
c010d004	obj/kernel.asm	/^c010d004:	e8 61 33 ff ff       	call   c010036a <cprintf>$/;"	l
c010d009	obj/kernel.asm	/^c010d009:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d00c	obj/kernel.asm	/^c010d00c:	a1 84 f0 14 c0       	mov    0xc014f084,%eax$/;"	l
c010d011	obj/kernel.asm	/^c010d011:	8b 80 94 00 00 00    	mov    0x94(%eax),%eax$/;"	l
c010d017	obj/kernel.asm	/^c010d017:	85 c0                	test   %eax,%eax$/;"	l
c010d019	obj/kernel.asm	/^c010d019:	75 1e                	jne    c010d039 <init_main+0xdb>$/;"	l
c010d01b	obj/kernel.asm	/^c010d01b:	a1 84 f0 14 c0       	mov    0xc014f084,%eax$/;"	l
c010d020	obj/kernel.asm	/^c010d020:	8b 80 98 00 00 00    	mov    0x98(%eax),%eax$/;"	l
c010d026	obj/kernel.asm	/^c010d026:	85 c0                	test   %eax,%eax$/;"	l
c010d028	obj/kernel.asm	/^c010d028:	75 0f                	jne    c010d039 <init_main+0xdb>$/;"	l
c010d02a	obj/kernel.asm	/^c010d02a:	a1 84 f0 14 c0       	mov    0xc014f084,%eax$/;"	l
c010d02f	obj/kernel.asm	/^c010d02f:	8b 80 9c 00 00 00    	mov    0x9c(%eax),%eax$/;"	l
c010d035	obj/kernel.asm	/^c010d035:	85 c0                	test   %eax,%eax$/;"	l
c010d037	obj/kernel.asm	/^c010d037:	74 19                	je     c010d052 <init_main+0xf4>$/;"	l
c010d039	obj/kernel.asm	/^c010d039:	68 e8 6c 11 c0       	push   $0xc0116ce8$/;"	l
c010d03e	obj/kernel.asm	/^c010d03e:	68 ff 69 11 c0       	push   $0xc01169ff$/;"	l
c010d043	obj/kernel.asm	/^c010d043:	68 01 04 00 00       	push   $0x401$/;"	l
c010d048	obj/kernel.asm	/^c010d048:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010d04d	obj/kernel.asm	/^c010d04d:	e8 7d 34 ff ff       	call   c01004cf <__panic>$/;"	l
c010d052	obj/kernel.asm	/^c010d052:	a1 c0 10 15 c0       	mov    0xc01510c0,%eax$/;"	l
c010d057	obj/kernel.asm	/^c010d057:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010d05a	obj/kernel.asm	/^c010d05a:	74 19                	je     c010d075 <init_main+0x117>$/;"	l
c010d05c	obj/kernel.asm	/^c010d05c:	68 33 6d 11 c0       	push   $0xc0116d33$/;"	l
c010d061	obj/kernel.asm	/^c010d061:	68 ff 69 11 c0       	push   $0xc01169ff$/;"	l
c010d066	obj/kernel.asm	/^c010d066:	68 02 04 00 00       	push   $0x402$/;"	l
c010d06b	obj/kernel.asm	/^c010d06b:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010d070	obj/kernel.asm	/^c010d070:	e8 5a 34 ff ff       	call   c01004cf <__panic>$/;"	l
c010d075	obj/kernel.asm	/^c010d075:	c7 45 e4 7c 23 15 c0 	movl   $0xc015237c,-0x1c(%ebp)$/;"	l
c010d07c	obj/kernel.asm	/^c010d07c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010d07f	obj/kernel.asm	/^c010d07f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d082	obj/kernel.asm	/^c010d082:	8b 15 84 f0 14 c0    	mov    0xc014f084,%edx$/;"	l
c010d088	obj/kernel.asm	/^c010d088:	83 c2 7c             	add    $0x7c,%edx$/;"	l
c010d08b	obj/kernel.asm	/^c010d08b:	39 d0                	cmp    %edx,%eax$/;"	l
c010d08d	obj/kernel.asm	/^c010d08d:	74 19                	je     c010d0a8 <init_main+0x14a>$/;"	l
c010d08f	obj/kernel.asm	/^c010d08f:	68 44 6d 11 c0       	push   $0xc0116d44$/;"	l
c010d094	obj/kernel.asm	/^c010d094:	68 ff 69 11 c0       	push   $0xc01169ff$/;"	l
c010d099	obj/kernel.asm	/^c010d099:	68 03 04 00 00       	push   $0x403$/;"	l
c010d09e	obj/kernel.asm	/^c010d09e:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010d0a3	obj/kernel.asm	/^c010d0a3:	e8 27 34 ff ff       	call   c01004cf <__panic>$/;"	l
c010d0a8	obj/kernel.asm	/^c010d0a8:	c7 45 e0 7c 23 15 c0 	movl   $0xc015237c,-0x20(%ebp)$/;"	l
c010d0af	obj/kernel.asm	/^c010d0af:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010d0b2	obj/kernel.asm	/^c010d0b2:	8b 00                	mov    (%eax),%eax$/;"	l
c010d0b4	obj/kernel.asm	/^c010d0b4:	8b 15 84 f0 14 c0    	mov    0xc014f084,%edx$/;"	l
c010d0ba	obj/kernel.asm	/^c010d0ba:	83 c2 7c             	add    $0x7c,%edx$/;"	l
c010d0bd	obj/kernel.asm	/^c010d0bd:	39 d0                	cmp    %edx,%eax$/;"	l
c010d0bf	obj/kernel.asm	/^c010d0bf:	74 19                	je     c010d0da <init_main+0x17c>$/;"	l
c010d0c1	obj/kernel.asm	/^c010d0c1:	68 74 6d 11 c0       	push   $0xc0116d74$/;"	l
c010d0c6	obj/kernel.asm	/^c010d0c6:	68 ff 69 11 c0       	push   $0xc01169ff$/;"	l
c010d0cb	obj/kernel.asm	/^c010d0cb:	68 04 04 00 00       	push   $0x404$/;"	l
c010d0d0	obj/kernel.asm	/^c010d0d0:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010d0d5	obj/kernel.asm	/^c010d0d5:	e8 f5 33 ff ff       	call   c01004cf <__panic>$/;"	l
c010d0da	obj/kernel.asm	/^c010d0da:	e8 cf 67 ff ff       	call   c01038ae <nr_free_pages>$/;"	l
c010d0df	obj/kernel.asm	/^c010d0df:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010d0e2	obj/kernel.asm	/^c010d0e2:	74 19                	je     c010d0fd <init_main+0x19f>$/;"	l
c010d0e4	obj/kernel.asm	/^c010d0e4:	68 a4 6d 11 c0       	push   $0xc0116da4$/;"	l
c010d0e9	obj/kernel.asm	/^c010d0e9:	68 ff 69 11 c0       	push   $0xc01169ff$/;"	l
c010d0ee	obj/kernel.asm	/^c010d0ee:	68 05 04 00 00       	push   $0x405$/;"	l
c010d0f3	obj/kernel.asm	/^c010d0f3:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010d0f8	obj/kernel.asm	/^c010d0f8:	e8 d2 33 ff ff       	call   c01004cf <__panic>$/;"	l
c010d0fd	obj/kernel.asm	/^c010d0fd:	e8 d7 a1 ff ff       	call   c01072d9 <kallocated>$/;"	l
c010d102	obj/kernel.asm	/^c010d102:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c010d105	obj/kernel.asm	/^c010d105:	74 19                	je     c010d120 <init_main+0x1c2>$/;"	l
c010d107	obj/kernel.asm	/^c010d107:	68 cc 6d 11 c0       	push   $0xc0116dcc$/;"	l
c010d10c	obj/kernel.asm	/^c010d10c:	68 ff 69 11 c0       	push   $0xc01169ff$/;"	l
c010d111	obj/kernel.asm	/^c010d111:	68 06 04 00 00       	push   $0x406$/;"	l
c010d116	obj/kernel.asm	/^c010d116:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010d11b	obj/kernel.asm	/^c010d11b:	e8 af 33 ff ff       	call   c01004cf <__panic>$/;"	l
c010d120	obj/kernel.asm	/^c010d120:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d123	obj/kernel.asm	/^c010d123:	68 f3 6d 11 c0       	push   $0xc0116df3$/;"	l
c010d128	obj/kernel.asm	/^c010d128:	e8 3d 32 ff ff       	call   c010036a <cprintf>$/;"	l
c010d12d	obj/kernel.asm	/^c010d12d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d130	obj/kernel.asm	/^c010d130:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d135	obj/kernel.asm	/^c010d135:	c9                   	leave  $/;"	l
c010d136	obj/kernel.asm	/^c010d136:	c3                   	ret    $/;"	l
c010d137	obj/kernel.asm	/^c010d137 <proc_init>:$/;"	l
c010d137	obj/kernel.asm	/^c010d137:	55                   	push   %ebp$/;"	l
c010d138	obj/kernel.asm	/^c010d138:	89 e5                	mov    %esp,%ebp$/;"	l
c010d13a	obj/kernel.asm	/^c010d13a:	53                   	push   %ebx$/;"	l
c010d13b	obj/kernel.asm	/^c010d13b:	83 ec 14             	sub    $0x14,%esp$/;"	l
c010d13e	obj/kernel.asm	/^c010d13e:	c7 45 ec 7c 23 15 c0 	movl   $0xc015237c,-0x14(%ebp)$/;"	l
c010d145	obj/kernel.asm	/^c010d145:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d148	obj/kernel.asm	/^c010d148:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010d14b	obj/kernel.asm	/^c010d14b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d14e	obj/kernel.asm	/^c010d14e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d151	obj/kernel.asm	/^c010d151:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010d154	obj/kernel.asm	/^c010d154:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d157	obj/kernel.asm	/^c010d157:	89 10                	mov    %edx,(%eax)$/;"	l
c010d159	obj/kernel.asm	/^c010d159:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010d160	obj/kernel.asm	/^c010d160:	eb 26                	jmp    c010d188 <proc_init+0x51>$/;"	l
c010d162	obj/kernel.asm	/^c010d162:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d165	obj/kernel.asm	/^c010d165:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010d168	obj/kernel.asm	/^c010d168:	05 c0 f0 14 c0       	add    $0xc014f0c0,%eax$/;"	l
c010d16d	obj/kernel.asm	/^c010d16d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010d170	obj/kernel.asm	/^c010d170:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d173	obj/kernel.asm	/^c010d173:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010d176	obj/kernel.asm	/^c010d176:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d179	obj/kernel.asm	/^c010d179:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d17c	obj/kernel.asm	/^c010d17c:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010d17f	obj/kernel.asm	/^c010d17f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d182	obj/kernel.asm	/^c010d182:	89 10                	mov    %edx,(%eax)$/;"	l
c010d184	obj/kernel.asm	/^c010d184:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010d188	obj/kernel.asm	/^c010d188:	81 7d f4 ff 03 00 00 	cmpl   $0x3ff,-0xc(%ebp)$/;"	l
c010d18f	obj/kernel.asm	/^c010d18f:	7e d1                	jle    c010d162 <proc_init+0x2b>$/;"	l
c010d191	obj/kernel.asm	/^c010d191:	e8 a9 e2 ff ff       	call   c010b43f <alloc_proc>$/;"	l
c010d196	obj/kernel.asm	/^c010d196:	a3 80 f0 14 c0       	mov    %eax,0xc014f080$/;"	l
c010d19b	obj/kernel.asm	/^c010d19b:	a1 80 f0 14 c0       	mov    0xc014f080,%eax$/;"	l
c010d1a0	obj/kernel.asm	/^c010d1a0:	85 c0                	test   %eax,%eax$/;"	l
c010d1a2	obj/kernel.asm	/^c010d1a2:	75 17                	jne    c010d1bb <proc_init+0x84>$/;"	l
c010d1a4	obj/kernel.asm	/^c010d1a4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010d1a7	obj/kernel.asm	/^c010d1a7:	68 0c 6e 11 c0       	push   $0xc0116e0c$/;"	l
c010d1ac	obj/kernel.asm	/^c010d1ac:	68 17 04 00 00       	push   $0x417$/;"	l
c010d1b1	obj/kernel.asm	/^c010d1b1:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010d1b6	obj/kernel.asm	/^c010d1b6:	e8 14 33 ff ff       	call   c01004cf <__panic>$/;"	l
c010d1bb	obj/kernel.asm	/^c010d1bb:	a1 80 f0 14 c0       	mov    0xc014f080,%eax$/;"	l
c010d1c0	obj/kernel.asm	/^c010d1c0:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%eax)$/;"	l
c010d1c7	obj/kernel.asm	/^c010d1c7:	a1 80 f0 14 c0       	mov    0xc014f080,%eax$/;"	l
c010d1cc	obj/kernel.asm	/^c010d1cc:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010d1d2	obj/kernel.asm	/^c010d1d2:	a1 80 f0 14 c0       	mov    0xc014f080,%eax$/;"	l
c010d1d7	obj/kernel.asm	/^c010d1d7:	ba 00 b0 14 c0       	mov    $0xc014b000,%edx$/;"	l
c010d1dc	obj/kernel.asm	/^c010d1dc:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010d1df	obj/kernel.asm	/^c010d1df:	a1 80 f0 14 c0       	mov    0xc014f080,%eax$/;"	l
c010d1e4	obj/kernel.asm	/^c010d1e4:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010d1eb	obj/kernel.asm	/^c010d1eb:	8b 1d 80 f0 14 c0    	mov    0xc014f080,%ebx$/;"	l
c010d1f1	obj/kernel.asm	/^c010d1f1:	e8 5f dd ff ff       	call   c010af55 <files_create>$/;"	l
c010d1f6	obj/kernel.asm	/^c010d1f6:	89 83 c4 00 00 00    	mov    %eax,0xc4(%ebx)$/;"	l
c010d1fc	obj/kernel.asm	/^c010d1fc:	8b 83 c4 00 00 00    	mov    0xc4(%ebx),%eax$/;"	l
c010d202	obj/kernel.asm	/^c010d202:	85 c0                	test   %eax,%eax$/;"	l
c010d204	obj/kernel.asm	/^c010d204:	75 17                	jne    c010d21d <proc_init+0xe6>$/;"	l
c010d206	obj/kernel.asm	/^c010d206:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010d209	obj/kernel.asm	/^c010d209:	68 24 6e 11 c0       	push   $0xc0116e24$/;"	l
c010d20e	obj/kernel.asm	/^c010d20e:	68 20 04 00 00       	push   $0x420$/;"	l
c010d213	obj/kernel.asm	/^c010d213:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010d218	obj/kernel.asm	/^c010d218:	e8 b2 32 ff ff       	call   c01004cf <__panic>$/;"	l
c010d21d	obj/kernel.asm	/^c010d21d:	a1 80 f0 14 c0       	mov    0xc014f080,%eax$/;"	l
c010d222	obj/kernel.asm	/^c010d222:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010d228	obj/kernel.asm	/^c010d228:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d22b	obj/kernel.asm	/^c010d22b:	50                   	push   %eax$/;"	l
c010d22c	obj/kernel.asm	/^c010d22c:	e8 da e1 ff ff       	call   c010b40b <files_count_inc>$/;"	l
c010d231	obj/kernel.asm	/^c010d231:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d234	obj/kernel.asm	/^c010d234:	a1 80 f0 14 c0       	mov    0xc014f080,%eax$/;"	l
c010d239	obj/kernel.asm	/^c010d239:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d23c	obj/kernel.asm	/^c010d23c:	68 46 6e 11 c0       	push   $0xc0116e46$/;"	l
c010d241	obj/kernel.asm	/^c010d241:	50                   	push   %eax$/;"	l
c010d242	obj/kernel.asm	/^c010d242:	e8 80 e3 ff ff       	call   c010b5c7 <set_proc_name>$/;"	l
c010d247	obj/kernel.asm	/^c010d247:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d24a	obj/kernel.asm	/^c010d24a:	a1 c0 10 15 c0       	mov    0xc01510c0,%eax$/;"	l
c010d24f	obj/kernel.asm	/^c010d24f:	83 c0 01             	add    $0x1,%eax$/;"	l
c010d252	obj/kernel.asm	/^c010d252:	a3 c0 10 15 c0       	mov    %eax,0xc01510c0$/;"	l
c010d257	obj/kernel.asm	/^c010d257:	a1 80 f0 14 c0       	mov    0xc014f080,%eax$/;"	l
c010d25c	obj/kernel.asm	/^c010d25c:	a3 88 f0 14 c0       	mov    %eax,0xc014f088$/;"	l
c010d261	obj/kernel.asm	/^c010d261:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010d264	obj/kernel.asm	/^c010d264:	6a 00                	push   $0x0$/;"	l
c010d266	obj/kernel.asm	/^c010d266:	6a 00                	push   $0x0$/;"	l
c010d268	obj/kernel.asm	/^c010d268:	68 5e cf 10 c0       	push   $0xc010cf5e$/;"	l
c010d26d	obj/kernel.asm	/^c010d26d:	e8 ce e7 ff ff       	call   c010ba40 <kernel_thread>$/;"	l
c010d272	obj/kernel.asm	/^c010d272:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d275	obj/kernel.asm	/^c010d275:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d278	obj/kernel.asm	/^c010d278:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010d27c	obj/kernel.asm	/^c010d27c:	7f 17                	jg     c010d295 <proc_init+0x15e>$/;"	l
c010d27e	obj/kernel.asm	/^c010d27e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010d281	obj/kernel.asm	/^c010d281:	68 4b 6e 11 c0       	push   $0xc0116e4b$/;"	l
c010d286	obj/kernel.asm	/^c010d286:	68 2b 04 00 00       	push   $0x42b$/;"	l
c010d28b	obj/kernel.asm	/^c010d28b:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010d290	obj/kernel.asm	/^c010d290:	e8 3a 32 ff ff       	call   c01004cf <__panic>$/;"	l
c010d295	obj/kernel.asm	/^c010d295:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d298	obj/kernel.asm	/^c010d298:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d29b	obj/kernel.asm	/^c010d29b:	e8 2e e7 ff ff       	call   c010b9ce <find_proc>$/;"	l
c010d2a0	obj/kernel.asm	/^c010d2a0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d2a3	obj/kernel.asm	/^c010d2a3:	a3 84 f0 14 c0       	mov    %eax,0xc014f084$/;"	l
c010d2a8	obj/kernel.asm	/^c010d2a8:	a1 84 f0 14 c0       	mov    0xc014f084,%eax$/;"	l
c010d2ad	obj/kernel.asm	/^c010d2ad:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d2b0	obj/kernel.asm	/^c010d2b0:	68 65 6e 11 c0       	push   $0xc0116e65$/;"	l
c010d2b5	obj/kernel.asm	/^c010d2b5:	50                   	push   %eax$/;"	l
c010d2b6	obj/kernel.asm	/^c010d2b6:	e8 0c e3 ff ff       	call   c010b5c7 <set_proc_name>$/;"	l
c010d2bb	obj/kernel.asm	/^c010d2bb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d2be	obj/kernel.asm	/^c010d2be:	a1 80 f0 14 c0       	mov    0xc014f080,%eax$/;"	l
c010d2c3	obj/kernel.asm	/^c010d2c3:	85 c0                	test   %eax,%eax$/;"	l
c010d2c5	obj/kernel.asm	/^c010d2c5:	74 0c                	je     c010d2d3 <proc_init+0x19c>$/;"	l
c010d2c7	obj/kernel.asm	/^c010d2c7:	a1 80 f0 14 c0       	mov    0xc014f080,%eax$/;"	l
c010d2cc	obj/kernel.asm	/^c010d2cc:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d2cf	obj/kernel.asm	/^c010d2cf:	85 c0                	test   %eax,%eax$/;"	l
c010d2d1	obj/kernel.asm	/^c010d2d1:	74 19                	je     c010d2ec <proc_init+0x1b5>$/;"	l
c010d2d3	obj/kernel.asm	/^c010d2d3:	68 6c 6e 11 c0       	push   $0xc0116e6c$/;"	l
c010d2d8	obj/kernel.asm	/^c010d2d8:	68 ff 69 11 c0       	push   $0xc01169ff$/;"	l
c010d2dd	obj/kernel.asm	/^c010d2dd:	68 31 04 00 00       	push   $0x431$/;"	l
c010d2e2	obj/kernel.asm	/^c010d2e2:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010d2e7	obj/kernel.asm	/^c010d2e7:	e8 e3 31 ff ff       	call   c01004cf <__panic>$/;"	l
c010d2ec	obj/kernel.asm	/^c010d2ec:	a1 84 f0 14 c0       	mov    0xc014f084,%eax$/;"	l
c010d2f1	obj/kernel.asm	/^c010d2f1:	85 c0                	test   %eax,%eax$/;"	l
c010d2f3	obj/kernel.asm	/^c010d2f3:	74 0d                	je     c010d302 <proc_init+0x1cb>$/;"	l
c010d2f5	obj/kernel.asm	/^c010d2f5:	a1 84 f0 14 c0       	mov    0xc014f084,%eax$/;"	l
c010d2fa	obj/kernel.asm	/^c010d2fa:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d2fd	obj/kernel.asm	/^c010d2fd:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c010d300	obj/kernel.asm	/^c010d300:	74 19                	je     c010d31b <proc_init+0x1e4>$/;"	l
c010d302	obj/kernel.asm	/^c010d302:	68 94 6e 11 c0       	push   $0xc0116e94$/;"	l
c010d307	obj/kernel.asm	/^c010d307:	68 ff 69 11 c0       	push   $0xc01169ff$/;"	l
c010d30c	obj/kernel.asm	/^c010d30c:	68 32 04 00 00       	push   $0x432$/;"	l
c010d311	obj/kernel.asm	/^c010d311:	68 d8 69 11 c0       	push   $0xc01169d8$/;"	l
c010d316	obj/kernel.asm	/^c010d316:	e8 b4 31 ff ff       	call   c01004cf <__panic>$/;"	l
c010d31b	obj/kernel.asm	/^c010d31b:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c010d31e	obj/kernel.asm	/^c010d31e:	c9                   	leave  $/;"	l
c010d31f	obj/kernel.asm	/^c010d31f:	c3                   	ret    $/;"	l
c010d320	obj/kernel.asm	/^c010d320 <cpu_idle>:$/;"	l
c010d320	obj/kernel.asm	/^c010d320:	55                   	push   %ebp$/;"	l
c010d321	obj/kernel.asm	/^c010d321:	89 e5                	mov    %esp,%ebp$/;"	l
c010d323	obj/kernel.asm	/^c010d323:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d326	obj/kernel.asm	/^c010d326:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010d32b	obj/kernel.asm	/^c010d32b:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010d32e	obj/kernel.asm	/^c010d32e:	85 c0                	test   %eax,%eax$/;"	l
c010d330	obj/kernel.asm	/^c010d330:	74 05                	je     c010d337 <cpu_idle+0x17>$/;"	l
c010d332	obj/kernel.asm	/^c010d332:	e8 96 02 00 00       	call   c010d5cd <schedule>$/;"	l
c010d337	obj/kernel.asm	/^c010d337:	eb ed                	jmp    c010d326 <cpu_idle+0x6>$/;"	l
c010d339	obj/kernel.asm	/^c010d339 <lab6_set_priority>:$/;"	l
c010d339	obj/kernel.asm	/^c010d339:	55                   	push   %ebp$/;"	l
c010d33a	obj/kernel.asm	/^c010d33a:	89 e5                	mov    %esp,%ebp$/;"	l
c010d33c	obj/kernel.asm	/^c010d33c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010d340	obj/kernel.asm	/^c010d340:	75 11                	jne    c010d353 <lab6_set_priority+0x1a>$/;"	l
c010d342	obj/kernel.asm	/^c010d342:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010d347	obj/kernel.asm	/^c010d347:	c7 80 c0 00 00 00 01 	movl   $0x1,0xc0(%eax)$/;"	l
c010d34e	obj/kernel.asm	/^c010d34e:	00 00 00 $/;"	l
c010d351	obj/kernel.asm	/^c010d351:	eb 0e                	jmp    c010d361 <lab6_set_priority+0x28>$/;"	l
c010d353	obj/kernel.asm	/^c010d353:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010d358	obj/kernel.asm	/^c010d358:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010d35b	obj/kernel.asm	/^c010d35b:	89 90 c0 00 00 00    	mov    %edx,0xc0(%eax)$/;"	l
c010d361	obj/kernel.asm	/^c010d361:	5d                   	pop    %ebp$/;"	l
c010d362	obj/kernel.asm	/^c010d362:	c3                   	ret    $/;"	l
c010d363	obj/kernel.asm	/^c010d363 <do_sleep>:$/;"	l
c010d363	obj/kernel.asm	/^c010d363:	55                   	push   %ebp$/;"	l
c010d364	obj/kernel.asm	/^c010d364:	89 e5                	mov    %esp,%ebp$/;"	l
c010d366	obj/kernel.asm	/^c010d366:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010d369	obj/kernel.asm	/^c010d369:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010d36d	obj/kernel.asm	/^c010d36d:	75 07                	jne    c010d376 <do_sleep+0x13>$/;"	l
c010d36f	obj/kernel.asm	/^c010d36f:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d374	obj/kernel.asm	/^c010d374:	eb 72                	jmp    c010d3e8 <do_sleep+0x85>$/;"	l
c010d376	obj/kernel.asm	/^c010d376:	e8 c7 de ff ff       	call   c010b242 <__intr_save>$/;"	l
c010d37b	obj/kernel.asm	/^c010d37b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d37e	obj/kernel.asm	/^c010d37e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010d381	obj/kernel.asm	/^c010d381:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010d386	obj/kernel.asm	/^c010d386:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010d389	obj/kernel.asm	/^c010d389:	52                   	push   %edx$/;"	l
c010d38a	obj/kernel.asm	/^c010d38a:	50                   	push   %eax$/;"	l
c010d38b	obj/kernel.asm	/^c010d38b:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c010d38e	obj/kernel.asm	/^c010d38e:	50                   	push   %eax$/;"	l
c010d38f	obj/kernel.asm	/^c010d38f:	e8 75 de ff ff       	call   c010b209 <timer_init>$/;"	l
c010d394	obj/kernel.asm	/^c010d394:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d397	obj/kernel.asm	/^c010d397:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d39a	obj/kernel.asm	/^c010d39a:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010d39f	obj/kernel.asm	/^c010d39f:	c7 00 01 00 00 00    	movl   $0x1,(%eax)$/;"	l
c010d3a5	obj/kernel.asm	/^c010d3a5:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010d3aa	obj/kernel.asm	/^c010d3aa:	c7 80 90 00 00 00 02 	movl   $0x80000002,0x90(%eax)$/;"	l
c010d3b1	obj/kernel.asm	/^c010d3b1:	00 00 80 $/;"	l
c010d3b4	obj/kernel.asm	/^c010d3b4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d3b7	obj/kernel.asm	/^c010d3b7:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d3ba	obj/kernel.asm	/^c010d3ba:	e8 a6 02 00 00       	call   c010d665 <add_timer>$/;"	l
c010d3bf	obj/kernel.asm	/^c010d3bf:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d3c2	obj/kernel.asm	/^c010d3c2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d3c5	obj/kernel.asm	/^c010d3c5:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d3c8	obj/kernel.asm	/^c010d3c8:	e8 9f de ff ff       	call   c010b26c <__intr_restore>$/;"	l
c010d3cd	obj/kernel.asm	/^c010d3cd:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d3d0	obj/kernel.asm	/^c010d3d0:	e8 f8 01 00 00       	call   c010d5cd <schedule>$/;"	l
c010d3d5	obj/kernel.asm	/^c010d3d5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d3d8	obj/kernel.asm	/^c010d3d8:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d3db	obj/kernel.asm	/^c010d3db:	e8 aa 03 00 00       	call   c010d78a <del_timer>$/;"	l
c010d3e0	obj/kernel.asm	/^c010d3e0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d3e3	obj/kernel.asm	/^c010d3e3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d3e8	obj/kernel.asm	/^c010d3e8:	c9                   	leave  $/;"	l
c010d3e9	obj/kernel.asm	/^c010d3e9:	c3                   	ret    $/;"	l
c010d3ea	obj/kernel.asm	/^c010d3ea <__intr_save>:$/;"	l
c010d3ea	obj/kernel.asm	/^c010d3ea:	55                   	push   %ebp$/;"	l
c010d3eb	obj/kernel.asm	/^c010d3eb:	89 e5                	mov    %esp,%ebp$/;"	l
c010d3ed	obj/kernel.asm	/^c010d3ed:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d3f0	obj/kernel.asm	/^c010d3f0:	9c                   	pushf  $/;"	l
c010d3f1	obj/kernel.asm	/^c010d3f1:	58                   	pop    %eax$/;"	l
c010d3f2	obj/kernel.asm	/^c010d3f2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d3f5	obj/kernel.asm	/^c010d3f5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d3f8	obj/kernel.asm	/^c010d3f8:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010d3fd	obj/kernel.asm	/^c010d3fd:	85 c0                	test   %eax,%eax$/;"	l
c010d3ff	obj/kernel.asm	/^c010d3ff:	74 0c                	je     c010d40d <__intr_save+0x23>$/;"	l
c010d401	obj/kernel.asm	/^c010d401:	e8 55 4e ff ff       	call   c010225b <intr_disable>$/;"	l
c010d406	obj/kernel.asm	/^c010d406:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010d40b	obj/kernel.asm	/^c010d40b:	eb 05                	jmp    c010d412 <__intr_save+0x28>$/;"	l
c010d40d	obj/kernel.asm	/^c010d40d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010d412	obj/kernel.asm	/^c010d412:	c9                   	leave  $/;"	l
c010d413	obj/kernel.asm	/^c010d413:	c3                   	ret    $/;"	l
c010d414	obj/kernel.asm	/^c010d414 <__intr_restore>:$/;"	l
c010d414	obj/kernel.asm	/^c010d414:	55                   	push   %ebp$/;"	l
c010d415	obj/kernel.asm	/^c010d415:	89 e5                	mov    %esp,%ebp$/;"	l
c010d417	obj/kernel.asm	/^c010d417:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d41a	obj/kernel.asm	/^c010d41a:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010d41e	obj/kernel.asm	/^c010d41e:	74 05                	je     c010d425 <__intr_restore+0x11>$/;"	l
c010d420	obj/kernel.asm	/^c010d420:	e8 30 4e ff ff       	call   c0102255 <intr_enable>$/;"	l
c010d425	obj/kernel.asm	/^c010d425:	c9                   	leave  $/;"	l
c010d426	obj/kernel.asm	/^c010d426:	c3                   	ret    $/;"	l
c010d427	obj/kernel.asm	/^c010d427 <sched_class_enqueue>:$/;"	l
c010d427	obj/kernel.asm	/^c010d427:	55                   	push   %ebp$/;"	l
c010d428	obj/kernel.asm	/^c010d428:	89 e5                	mov    %esp,%ebp$/;"	l
c010d42a	obj/kernel.asm	/^c010d42a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d42d	obj/kernel.asm	/^c010d42d:	a1 80 f0 14 c0       	mov    0xc014f080,%eax$/;"	l
c010d432	obj/kernel.asm	/^c010d432:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010d435	obj/kernel.asm	/^c010d435:	74 1a                	je     c010d451 <sched_class_enqueue+0x2a>$/;"	l
c010d437	obj/kernel.asm	/^c010d437:	a1 1c 11 15 c0       	mov    0xc015111c,%eax$/;"	l
c010d43c	obj/kernel.asm	/^c010d43c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010d43f	obj/kernel.asm	/^c010d43f:	8b 15 20 11 15 c0    	mov    0xc0151120,%edx$/;"	l
c010d445	obj/kernel.asm	/^c010d445:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d448	obj/kernel.asm	/^c010d448:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010d44b	obj/kernel.asm	/^c010d44b:	52                   	push   %edx$/;"	l
c010d44c	obj/kernel.asm	/^c010d44c:	ff d0                	call   *%eax$/;"	l
c010d44e	obj/kernel.asm	/^c010d44e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d451	obj/kernel.asm	/^c010d451:	c9                   	leave  $/;"	l
c010d452	obj/kernel.asm	/^c010d452:	c3                   	ret    $/;"	l
c010d453	obj/kernel.asm	/^c010d453 <sched_class_dequeue>:$/;"	l
c010d453	obj/kernel.asm	/^c010d453:	55                   	push   %ebp$/;"	l
c010d454	obj/kernel.asm	/^c010d454:	89 e5                	mov    %esp,%ebp$/;"	l
c010d456	obj/kernel.asm	/^c010d456:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d459	obj/kernel.asm	/^c010d459:	a1 1c 11 15 c0       	mov    0xc015111c,%eax$/;"	l
c010d45e	obj/kernel.asm	/^c010d45e:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010d461	obj/kernel.asm	/^c010d461:	8b 15 20 11 15 c0    	mov    0xc0151120,%edx$/;"	l
c010d467	obj/kernel.asm	/^c010d467:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d46a	obj/kernel.asm	/^c010d46a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010d46d	obj/kernel.asm	/^c010d46d:	52                   	push   %edx$/;"	l
c010d46e	obj/kernel.asm	/^c010d46e:	ff d0                	call   *%eax$/;"	l
c010d470	obj/kernel.asm	/^c010d470:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d473	obj/kernel.asm	/^c010d473:	c9                   	leave  $/;"	l
c010d474	obj/kernel.asm	/^c010d474:	c3                   	ret    $/;"	l
c010d475	obj/kernel.asm	/^c010d475 <sched_class_pick_next>:$/;"	l
c010d475	obj/kernel.asm	/^c010d475:	55                   	push   %ebp$/;"	l
c010d476	obj/kernel.asm	/^c010d476:	89 e5                	mov    %esp,%ebp$/;"	l
c010d478	obj/kernel.asm	/^c010d478:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d47b	obj/kernel.asm	/^c010d47b:	a1 1c 11 15 c0       	mov    0xc015111c,%eax$/;"	l
c010d480	obj/kernel.asm	/^c010d480:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010d483	obj/kernel.asm	/^c010d483:	8b 15 20 11 15 c0    	mov    0xc0151120,%edx$/;"	l
c010d489	obj/kernel.asm	/^c010d489:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d48c	obj/kernel.asm	/^c010d48c:	52                   	push   %edx$/;"	l
c010d48d	obj/kernel.asm	/^c010d48d:	ff d0                	call   *%eax$/;"	l
c010d48f	obj/kernel.asm	/^c010d48f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d492	obj/kernel.asm	/^c010d492:	c9                   	leave  $/;"	l
c010d493	obj/kernel.asm	/^c010d493:	c3                   	ret    $/;"	l
c010d494	obj/kernel.asm	/^c010d494 <sched_class_proc_tick>:$/;"	l
c010d494	obj/kernel.asm	/^c010d494:	55                   	push   %ebp$/;"	l
c010d495	obj/kernel.asm	/^c010d495:	89 e5                	mov    %esp,%ebp$/;"	l
c010d497	obj/kernel.asm	/^c010d497:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d49a	obj/kernel.asm	/^c010d49a:	a1 80 f0 14 c0       	mov    0xc014f080,%eax$/;"	l
c010d49f	obj/kernel.asm	/^c010d49f:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010d4a2	obj/kernel.asm	/^c010d4a2:	74 1c                	je     c010d4c0 <sched_class_proc_tick+0x2c>$/;"	l
c010d4a4	obj/kernel.asm	/^c010d4a4:	a1 1c 11 15 c0       	mov    0xc015111c,%eax$/;"	l
c010d4a9	obj/kernel.asm	/^c010d4a9:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010d4ac	obj/kernel.asm	/^c010d4ac:	8b 15 20 11 15 c0    	mov    0xc0151120,%edx$/;"	l
c010d4b2	obj/kernel.asm	/^c010d4b2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d4b5	obj/kernel.asm	/^c010d4b5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010d4b8	obj/kernel.asm	/^c010d4b8:	52                   	push   %edx$/;"	l
c010d4b9	obj/kernel.asm	/^c010d4b9:	ff d0                	call   *%eax$/;"	l
c010d4bb	obj/kernel.asm	/^c010d4bb:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d4be	obj/kernel.asm	/^c010d4be:	eb 0a                	jmp    c010d4ca <sched_class_proc_tick+0x36>$/;"	l
c010d4c0	obj/kernel.asm	/^c010d4c0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d4c3	obj/kernel.asm	/^c010d4c3:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010d4ca	obj/kernel.asm	/^c010d4ca:	c9                   	leave  $/;"	l
c010d4cb	obj/kernel.asm	/^c010d4cb:	c3                   	ret    $/;"	l
c010d4cc	obj/kernel.asm	/^c010d4cc <sched_init>:$/;"	l
c010d4cc	obj/kernel.asm	/^c010d4cc:	55                   	push   %ebp$/;"	l
c010d4cd	obj/kernel.asm	/^c010d4cd:	89 e5                	mov    %esp,%ebp$/;"	l
c010d4cf	obj/kernel.asm	/^c010d4cf:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d4d2	obj/kernel.asm	/^c010d4d2:	c7 45 f4 14 11 15 c0 	movl   $0xc0151114,-0xc(%ebp)$/;"	l
c010d4d9	obj/kernel.asm	/^c010d4d9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d4dc	obj/kernel.asm	/^c010d4dc:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010d4df	obj/kernel.asm	/^c010d4df:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d4e2	obj/kernel.asm	/^c010d4e2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d4e5	obj/kernel.asm	/^c010d4e5:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010d4e8	obj/kernel.asm	/^c010d4e8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d4eb	obj/kernel.asm	/^c010d4eb:	89 10                	mov    %edx,(%eax)$/;"	l
c010d4ed	obj/kernel.asm	/^c010d4ed:	c7 05 1c 11 15 c0 ec 	movl   $0xc014daec,0xc015111c$/;"	l
c010d4f4	obj/kernel.asm	/^c010d4f4:	da 14 c0 $/;"	d
c010d4f7	obj/kernel.asm	/^c010d4f7:	c7 05 20 11 15 c0 24 	movl   $0xc0151124,0xc0151120$/;"	l
c010d4fe	obj/kernel.asm	/^c010d4fe:	11 15 c0 $/;"	l
c010d501	obj/kernel.asm	/^c010d501:	a1 20 11 15 c0       	mov    0xc0151120,%eax$/;"	l
c010d506	obj/kernel.asm	/^c010d506:	c7 40 0c 14 00 00 00 	movl   $0x14,0xc(%eax)$/;"	l
c010d50d	obj/kernel.asm	/^c010d50d:	a1 1c 11 15 c0       	mov    0xc015111c,%eax$/;"	l
c010d512	obj/kernel.asm	/^c010d512:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d515	obj/kernel.asm	/^c010d515:	8b 15 20 11 15 c0    	mov    0xc0151120,%edx$/;"	l
c010d51b	obj/kernel.asm	/^c010d51b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d51e	obj/kernel.asm	/^c010d51e:	52                   	push   %edx$/;"	l
c010d51f	obj/kernel.asm	/^c010d51f:	ff d0                	call   *%eax$/;"	l
c010d521	obj/kernel.asm	/^c010d521:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d524	obj/kernel.asm	/^c010d524:	a1 1c 11 15 c0       	mov    0xc015111c,%eax$/;"	l
c010d529	obj/kernel.asm	/^c010d529:	8b 00                	mov    (%eax),%eax$/;"	l
c010d52b	obj/kernel.asm	/^c010d52b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d52e	obj/kernel.asm	/^c010d52e:	50                   	push   %eax$/;"	l
c010d52f	obj/kernel.asm	/^c010d52f:	68 bc 6e 11 c0       	push   $0xc0116ebc$/;"	l
c010d534	obj/kernel.asm	/^c010d534:	e8 31 2e ff ff       	call   c010036a <cprintf>$/;"	l
c010d539	obj/kernel.asm	/^c010d539:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d53c	obj/kernel.asm	/^c010d53c:	c9                   	leave  $/;"	l
c010d53d	obj/kernel.asm	/^c010d53d:	c3                   	ret    $/;"	l
c010d53e	obj/kernel.asm	/^c010d53e <wakeup_proc>:$/;"	l
c010d53e	obj/kernel.asm	/^c010d53e:	55                   	push   %ebp$/;"	l
c010d53f	obj/kernel.asm	/^c010d53f:	89 e5                	mov    %esp,%ebp$/;"	l
c010d541	obj/kernel.asm	/^c010d541:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d544	obj/kernel.asm	/^c010d544:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d547	obj/kernel.asm	/^c010d547:	8b 00                	mov    (%eax),%eax$/;"	l
c010d549	obj/kernel.asm	/^c010d549:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c010d54c	obj/kernel.asm	/^c010d54c:	75 16                	jne    c010d564 <wakeup_proc+0x26>$/;"	l
c010d54e	obj/kernel.asm	/^c010d54e:	68 cd 6e 11 c0       	push   $0xc0116ecd$/;"	l
c010d553	obj/kernel.asm	/^c010d553:	68 e8 6e 11 c0       	push   $0xc0116ee8$/;"	l
c010d558	obj/kernel.asm	/^c010d558:	6a 3b                	push   $0x3b$/;"	l
c010d55a	obj/kernel.asm	/^c010d55a:	68 fd 6e 11 c0       	push   $0xc0116efd$/;"	l
c010d55f	obj/kernel.asm	/^c010d55f:	e8 6b 2f ff ff       	call   c01004cf <__panic>$/;"	l
c010d564	obj/kernel.asm	/^c010d564:	e8 81 fe ff ff       	call   c010d3ea <__intr_save>$/;"	l
c010d569	obj/kernel.asm	/^c010d569:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d56c	obj/kernel.asm	/^c010d56c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d56f	obj/kernel.asm	/^c010d56f:	8b 00                	mov    (%eax),%eax$/;"	l
c010d571	obj/kernel.asm	/^c010d571:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010d574	obj/kernel.asm	/^c010d574:	74 30                	je     c010d5a6 <wakeup_proc+0x68>$/;"	l
c010d576	obj/kernel.asm	/^c010d576:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d579	obj/kernel.asm	/^c010d579:	c7 00 02 00 00 00    	movl   $0x2,(%eax)$/;"	l
c010d57f	obj/kernel.asm	/^c010d57f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d582	obj/kernel.asm	/^c010d582:	c7 80 90 00 00 00 00 	movl   $0x0,0x90(%eax)$/;"	l
c010d589	obj/kernel.asm	/^c010d589:	00 00 00 $/;"	l
c010d58c	obj/kernel.asm	/^c010d58c:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010d591	obj/kernel.asm	/^c010d591:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c010d594	obj/kernel.asm	/^c010d594:	74 27                	je     c010d5bd <wakeup_proc+0x7f>$/;"	l
c010d596	obj/kernel.asm	/^c010d596:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d599	obj/kernel.asm	/^c010d599:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010d59c	obj/kernel.asm	/^c010d59c:	e8 86 fe ff ff       	call   c010d427 <sched_class_enqueue>$/;"	l
c010d5a1	obj/kernel.asm	/^c010d5a1:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d5a4	obj/kernel.asm	/^c010d5a4:	eb 17                	jmp    c010d5bd <wakeup_proc+0x7f>$/;"	l
c010d5a6	obj/kernel.asm	/^c010d5a6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010d5a9	obj/kernel.asm	/^c010d5a9:	68 13 6f 11 c0       	push   $0xc0116f13$/;"	l
c010d5ae	obj/kernel.asm	/^c010d5ae:	6a 47                	push   $0x47$/;"	l
c010d5b0	obj/kernel.asm	/^c010d5b0:	68 fd 6e 11 c0       	push   $0xc0116efd$/;"	l
c010d5b5	obj/kernel.asm	/^c010d5b5:	e8 82 2f ff ff       	call   c010053c <__warn>$/;"	l
c010d5ba	obj/kernel.asm	/^c010d5ba:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d5bd	obj/kernel.asm	/^c010d5bd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d5c0	obj/kernel.asm	/^c010d5c0:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d5c3	obj/kernel.asm	/^c010d5c3:	e8 4c fe ff ff       	call   c010d414 <__intr_restore>$/;"	l
c010d5c8	obj/kernel.asm	/^c010d5c8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d5cb	obj/kernel.asm	/^c010d5cb:	c9                   	leave  $/;"	l
c010d5cc	obj/kernel.asm	/^c010d5cc:	c3                   	ret    $/;"	l
c010d5cd	obj/kernel.asm	/^c010d5cd <schedule>:$/;"	l
c010d5cd	obj/kernel.asm	/^c010d5cd:	55                   	push   %ebp$/;"	l
c010d5ce	obj/kernel.asm	/^c010d5ce:	89 e5                	mov    %esp,%ebp$/;"	l
c010d5d0	obj/kernel.asm	/^c010d5d0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d5d3	obj/kernel.asm	/^c010d5d3:	e8 12 fe ff ff       	call   c010d3ea <__intr_save>$/;"	l
c010d5d8	obj/kernel.asm	/^c010d5d8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d5db	obj/kernel.asm	/^c010d5db:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010d5e0	obj/kernel.asm	/^c010d5e0:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010d5e7	obj/kernel.asm	/^c010d5e7:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010d5ec	obj/kernel.asm	/^c010d5ec:	8b 00                	mov    (%eax),%eax$/;"	l
c010d5ee	obj/kernel.asm	/^c010d5ee:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010d5f1	obj/kernel.asm	/^c010d5f1:	75 11                	jne    c010d604 <schedule+0x37>$/;"	l
c010d5f3	obj/kernel.asm	/^c010d5f3:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010d5f8	obj/kernel.asm	/^c010d5f8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d5fb	obj/kernel.asm	/^c010d5fb:	50                   	push   %eax$/;"	l
c010d5fc	obj/kernel.asm	/^c010d5fc:	e8 26 fe ff ff       	call   c010d427 <sched_class_enqueue>$/;"	l
c010d601	obj/kernel.asm	/^c010d601:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d604	obj/kernel.asm	/^c010d604:	e8 6c fe ff ff       	call   c010d475 <sched_class_pick_next>$/;"	l
c010d609	obj/kernel.asm	/^c010d609:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d60c	obj/kernel.asm	/^c010d60c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d610	obj/kernel.asm	/^c010d610:	74 0e                	je     c010d620 <schedule+0x53>$/;"	l
c010d612	obj/kernel.asm	/^c010d612:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d615	obj/kernel.asm	/^c010d615:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d618	obj/kernel.asm	/^c010d618:	e8 36 fe ff ff       	call   c010d453 <sched_class_dequeue>$/;"	l
c010d61d	obj/kernel.asm	/^c010d61d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d620	obj/kernel.asm	/^c010d620:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010d624	obj/kernel.asm	/^c010d624:	75 08                	jne    c010d62e <schedule+0x61>$/;"	l
c010d626	obj/kernel.asm	/^c010d626:	a1 80 f0 14 c0       	mov    0xc014f080,%eax$/;"	l
c010d62b	obj/kernel.asm	/^c010d62b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d62e	obj/kernel.asm	/^c010d62e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d631	obj/kernel.asm	/^c010d631:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010d634	obj/kernel.asm	/^c010d634:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010d637	obj/kernel.asm	/^c010d637:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d63a	obj/kernel.asm	/^c010d63a:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010d63d	obj/kernel.asm	/^c010d63d:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010d642	obj/kernel.asm	/^c010d642:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010d645	obj/kernel.asm	/^c010d645:	74 0e                	je     c010d655 <schedule+0x88>$/;"	l
c010d647	obj/kernel.asm	/^c010d647:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d64a	obj/kernel.asm	/^c010d64a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d64d	obj/kernel.asm	/^c010d64d:	e8 32 e2 ff ff       	call   c010b884 <proc_run>$/;"	l
c010d652	obj/kernel.asm	/^c010d652:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d655	obj/kernel.asm	/^c010d655:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d658	obj/kernel.asm	/^c010d658:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d65b	obj/kernel.asm	/^c010d65b:	e8 b4 fd ff ff       	call   c010d414 <__intr_restore>$/;"	l
c010d660	obj/kernel.asm	/^c010d660:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d663	obj/kernel.asm	/^c010d663:	c9                   	leave  $/;"	l
c010d664	obj/kernel.asm	/^c010d664:	c3                   	ret    $/;"	l
c010d665	obj/kernel.asm	/^c010d665 <add_timer>:$/;"	l
c010d665	obj/kernel.asm	/^c010d665:	55                   	push   %ebp$/;"	l
c010d666	obj/kernel.asm	/^c010d666:	89 e5                	mov    %esp,%ebp$/;"	l
c010d668	obj/kernel.asm	/^c010d668:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010d66b	obj/kernel.asm	/^c010d66b:	e8 7a fd ff ff       	call   c010d3ea <__intr_save>$/;"	l
c010d670	obj/kernel.asm	/^c010d670:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d673	obj/kernel.asm	/^c010d673:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d676	obj/kernel.asm	/^c010d676:	8b 00                	mov    (%eax),%eax$/;"	l
c010d678	obj/kernel.asm	/^c010d678:	85 c0                	test   %eax,%eax$/;"	l
c010d67a	obj/kernel.asm	/^c010d67a:	74 0a                	je     c010d686 <add_timer+0x21>$/;"	l
c010d67c	obj/kernel.asm	/^c010d67c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d67f	obj/kernel.asm	/^c010d67f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d682	obj/kernel.asm	/^c010d682:	85 c0                	test   %eax,%eax$/;"	l
c010d684	obj/kernel.asm	/^c010d684:	75 16                	jne    c010d69c <add_timer+0x37>$/;"	l
c010d686	obj/kernel.asm	/^c010d686:	68 30 6f 11 c0       	push   $0xc0116f30$/;"	l
c010d68b	obj/kernel.asm	/^c010d68b:	68 e8 6e 11 c0       	push   $0xc0116ee8$/;"	l
c010d690	obj/kernel.asm	/^c010d690:	6a 6a                	push   $0x6a$/;"	l
c010d692	obj/kernel.asm	/^c010d692:	68 fd 6e 11 c0       	push   $0xc0116efd$/;"	l
c010d697	obj/kernel.asm	/^c010d697:	e8 33 2e ff ff       	call   c01004cf <__panic>$/;"	l
c010d69c	obj/kernel.asm	/^c010d69c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d69f	obj/kernel.asm	/^c010d69f:	83 c0 08             	add    $0x8,%eax$/;"	l
c010d6a2	obj/kernel.asm	/^c010d6a2:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010d6a5	obj/kernel.asm	/^c010d6a5:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d6a8	obj/kernel.asm	/^c010d6a8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d6ab	obj/kernel.asm	/^c010d6ab:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010d6ae	obj/kernel.asm	/^c010d6ae:	0f 94 c0             	sete   %al$/;"	l
c010d6b1	obj/kernel.asm	/^c010d6b1:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010d6b4	obj/kernel.asm	/^c010d6b4:	85 c0                	test   %eax,%eax$/;"	l
c010d6b6	obj/kernel.asm	/^c010d6b6:	75 16                	jne    c010d6ce <add_timer+0x69>$/;"	l
c010d6b8	obj/kernel.asm	/^c010d6b8:	68 5c 6f 11 c0       	push   $0xc0116f5c$/;"	l
c010d6bd	obj/kernel.asm	/^c010d6bd:	68 e8 6e 11 c0       	push   $0xc0116ee8$/;"	l
c010d6c2	obj/kernel.asm	/^c010d6c2:	6a 6b                	push   $0x6b$/;"	l
c010d6c4	obj/kernel.asm	/^c010d6c4:	68 fd 6e 11 c0       	push   $0xc0116efd$/;"	l
c010d6c9	obj/kernel.asm	/^c010d6c9:	e8 01 2e ff ff       	call   c01004cf <__panic>$/;"	l
c010d6ce	obj/kernel.asm	/^c010d6ce:	c7 45 e4 14 11 15 c0 	movl   $0xc0151114,-0x1c(%ebp)$/;"	l
c010d6d5	obj/kernel.asm	/^c010d6d5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010d6d8	obj/kernel.asm	/^c010d6d8:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d6db	obj/kernel.asm	/^c010d6db:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d6de	obj/kernel.asm	/^c010d6de:	eb 4a                	jmp    c010d72a <add_timer+0xc5>$/;"	l
c010d6e0	obj/kernel.asm	/^c010d6e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d6e3	obj/kernel.asm	/^c010d6e3:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010d6e6	obj/kernel.asm	/^c010d6e6:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d6e9	obj/kernel.asm	/^c010d6e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d6ec	obj/kernel.asm	/^c010d6ec:	8b 10                	mov    (%eax),%edx$/;"	l
c010d6ee	obj/kernel.asm	/^c010d6ee:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d6f1	obj/kernel.asm	/^c010d6f1:	8b 00                	mov    (%eax),%eax$/;"	l
c010d6f3	obj/kernel.asm	/^c010d6f3:	39 c2                	cmp    %eax,%edx$/;"	l
c010d6f5	obj/kernel.asm	/^c010d6f5:	73 13                	jae    c010d70a <add_timer+0xa5>$/;"	l
c010d6f7	obj/kernel.asm	/^c010d6f7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d6fa	obj/kernel.asm	/^c010d6fa:	8b 10                	mov    (%eax),%edx$/;"	l
c010d6fc	obj/kernel.asm	/^c010d6fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d6ff	obj/kernel.asm	/^c010d6ff:	8b 00                	mov    (%eax),%eax$/;"	l
c010d701	obj/kernel.asm	/^c010d701:	29 c2                	sub    %eax,%edx$/;"	l
c010d703	obj/kernel.asm	/^c010d703:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d706	obj/kernel.asm	/^c010d706:	89 10                	mov    %edx,(%eax)$/;"	l
c010d708	obj/kernel.asm	/^c010d708:	eb 29                	jmp    c010d733 <add_timer+0xce>$/;"	l
c010d70a	obj/kernel.asm	/^c010d70a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d70d	obj/kernel.asm	/^c010d70d:	8b 10                	mov    (%eax),%edx$/;"	l
c010d70f	obj/kernel.asm	/^c010d70f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d712	obj/kernel.asm	/^c010d712:	8b 00                	mov    (%eax),%eax$/;"	l
c010d714	obj/kernel.asm	/^c010d714:	29 c2                	sub    %eax,%edx$/;"	l
c010d716	obj/kernel.asm	/^c010d716:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d719	obj/kernel.asm	/^c010d719:	89 10                	mov    %edx,(%eax)$/;"	l
c010d71b	obj/kernel.asm	/^c010d71b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d71e	obj/kernel.asm	/^c010d71e:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010d721	obj/kernel.asm	/^c010d721:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010d724	obj/kernel.asm	/^c010d724:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d727	obj/kernel.asm	/^c010d727:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d72a	obj/kernel.asm	/^c010d72a:	81 7d f4 14 11 15 c0 	cmpl   $0xc0151114,-0xc(%ebp)$/;"	l
c010d731	obj/kernel.asm	/^c010d731:	75 ad                	jne    c010d6e0 <add_timer+0x7b>$/;"	l
c010d733	obj/kernel.asm	/^c010d733:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d736	obj/kernel.asm	/^c010d736:	8d 50 08             	lea    0x8(%eax),%edx$/;"	l
c010d739	obj/kernel.asm	/^c010d739:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d73c	obj/kernel.asm	/^c010d73c:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010d73f	obj/kernel.asm	/^c010d73f:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010d742	obj/kernel.asm	/^c010d742:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d745	obj/kernel.asm	/^c010d745:	8b 00                	mov    (%eax),%eax$/;"	l
c010d747	obj/kernel.asm	/^c010d747:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010d74a	obj/kernel.asm	/^c010d74a:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010d74d	obj/kernel.asm	/^c010d74d:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010d750	obj/kernel.asm	/^c010d750:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d753	obj/kernel.asm	/^c010d753:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c010d756	obj/kernel.asm	/^c010d756:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010d759	obj/kernel.asm	/^c010d759:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010d75c	obj/kernel.asm	/^c010d75c:	89 10                	mov    %edx,(%eax)$/;"	l
c010d75e	obj/kernel.asm	/^c010d75e:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c010d761	obj/kernel.asm	/^c010d761:	8b 10                	mov    (%eax),%edx$/;"	l
c010d763	obj/kernel.asm	/^c010d763:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010d766	obj/kernel.asm	/^c010d766:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d769	obj/kernel.asm	/^c010d769:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010d76c	obj/kernel.asm	/^c010d76c:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c010d76f	obj/kernel.asm	/^c010d76f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d772	obj/kernel.asm	/^c010d772:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010d775	obj/kernel.asm	/^c010d775:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010d778	obj/kernel.asm	/^c010d778:	89 10                	mov    %edx,(%eax)$/;"	l
c010d77a	obj/kernel.asm	/^c010d77a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d77d	obj/kernel.asm	/^c010d77d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d780	obj/kernel.asm	/^c010d780:	e8 8f fc ff ff       	call   c010d414 <__intr_restore>$/;"	l
c010d785	obj/kernel.asm	/^c010d785:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d788	obj/kernel.asm	/^c010d788:	c9                   	leave  $/;"	l
c010d789	obj/kernel.asm	/^c010d789:	c3                   	ret    $/;"	l
c010d78a	obj/kernel.asm	/^c010d78a <del_timer>:$/;"	l
c010d78a	obj/kernel.asm	/^c010d78a:	55                   	push   %ebp$/;"	l
c010d78b	obj/kernel.asm	/^c010d78b:	89 e5                	mov    %esp,%ebp$/;"	l
c010d78d	obj/kernel.asm	/^c010d78d:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010d790	obj/kernel.asm	/^c010d790:	e8 55 fc ff ff       	call   c010d3ea <__intr_save>$/;"	l
c010d795	obj/kernel.asm	/^c010d795:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d798	obj/kernel.asm	/^c010d798:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d79b	obj/kernel.asm	/^c010d79b:	83 c0 08             	add    $0x8,%eax$/;"	l
c010d79e	obj/kernel.asm	/^c010d79e:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010d7a1	obj/kernel.asm	/^c010d7a1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d7a4	obj/kernel.asm	/^c010d7a4:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d7a7	obj/kernel.asm	/^c010d7a7:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010d7aa	obj/kernel.asm	/^c010d7aa:	0f 94 c0             	sete   %al$/;"	l
c010d7ad	obj/kernel.asm	/^c010d7ad:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010d7b0	obj/kernel.asm	/^c010d7b0:	85 c0                	test   %eax,%eax$/;"	l
c010d7b2	obj/kernel.asm	/^c010d7b2:	0f 85 89 00 00 00    	jne    c010d841 <del_timer+0xb7>$/;"	l
c010d7b8	obj/kernel.asm	/^c010d7b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d7bb	obj/kernel.asm	/^c010d7bb:	8b 00                	mov    (%eax),%eax$/;"	l
c010d7bd	obj/kernel.asm	/^c010d7bd:	85 c0                	test   %eax,%eax$/;"	l
c010d7bf	obj/kernel.asm	/^c010d7bf:	74 35                	je     c010d7f6 <del_timer+0x6c>$/;"	l
c010d7c1	obj/kernel.asm	/^c010d7c1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d7c4	obj/kernel.asm	/^c010d7c4:	83 c0 08             	add    $0x8,%eax$/;"	l
c010d7c7	obj/kernel.asm	/^c010d7c7:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010d7ca	obj/kernel.asm	/^c010d7ca:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010d7cd	obj/kernel.asm	/^c010d7cd:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d7d0	obj/kernel.asm	/^c010d7d0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d7d3	obj/kernel.asm	/^c010d7d3:	81 7d f0 14 11 15 c0 	cmpl   $0xc0151114,-0x10(%ebp)$/;"	l
c010d7da	obj/kernel.asm	/^c010d7da:	74 1a                	je     c010d7f6 <del_timer+0x6c>$/;"	l
c010d7dc	obj/kernel.asm	/^c010d7dc:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d7df	obj/kernel.asm	/^c010d7df:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010d7e2	obj/kernel.asm	/^c010d7e2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d7e5	obj/kernel.asm	/^c010d7e5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d7e8	obj/kernel.asm	/^c010d7e8:	8b 10                	mov    (%eax),%edx$/;"	l
c010d7ea	obj/kernel.asm	/^c010d7ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d7ed	obj/kernel.asm	/^c010d7ed:	8b 00                	mov    (%eax),%eax$/;"	l
c010d7ef	obj/kernel.asm	/^c010d7ef:	01 c2                	add    %eax,%edx$/;"	l
c010d7f1	obj/kernel.asm	/^c010d7f1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010d7f4	obj/kernel.asm	/^c010d7f4:	89 10                	mov    %edx,(%eax)$/;"	l
c010d7f6	obj/kernel.asm	/^c010d7f6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d7f9	obj/kernel.asm	/^c010d7f9:	83 c0 08             	add    $0x8,%eax$/;"	l
c010d7fc	obj/kernel.asm	/^c010d7fc:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010d7ff	obj/kernel.asm	/^c010d7ff:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010d802	obj/kernel.asm	/^c010d802:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010d805	obj/kernel.asm	/^c010d805:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010d808	obj/kernel.asm	/^c010d808:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d80b	obj/kernel.asm	/^c010d80b:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010d80e	obj/kernel.asm	/^c010d80e:	8b 12                	mov    (%edx),%edx$/;"	l
c010d810	obj/kernel.asm	/^c010d810:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010d813	obj/kernel.asm	/^c010d813:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c010d816	obj/kernel.asm	/^c010d816:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010d819	obj/kernel.asm	/^c010d819:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010d81c	obj/kernel.asm	/^c010d81c:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d81f	obj/kernel.asm	/^c010d81f:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010d822	obj/kernel.asm	/^c010d822:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010d825	obj/kernel.asm	/^c010d825:	89 10                	mov    %edx,(%eax)$/;"	l
c010d827	obj/kernel.asm	/^c010d827:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010d82a	obj/kernel.asm	/^c010d82a:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010d82d	obj/kernel.asm	/^c010d82d:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010d830	obj/kernel.asm	/^c010d830:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010d833	obj/kernel.asm	/^c010d833:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d836	obj/kernel.asm	/^c010d836:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010d839	obj/kernel.asm	/^c010d839:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010d83c	obj/kernel.asm	/^c010d83c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010d83f	obj/kernel.asm	/^c010d83f:	89 10                	mov    %edx,(%eax)$/;"	l
c010d841	obj/kernel.asm	/^c010d841:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d844	obj/kernel.asm	/^c010d844:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010d847	obj/kernel.asm	/^c010d847:	e8 c8 fb ff ff       	call   c010d414 <__intr_restore>$/;"	l
c010d84c	obj/kernel.asm	/^c010d84c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d84f	obj/kernel.asm	/^c010d84f:	c9                   	leave  $/;"	l
c010d850	obj/kernel.asm	/^c010d850:	c3                   	ret    $/;"	l
c010d851	obj/kernel.asm	/^c010d851 <run_timer_list>:$/;"	l
c010d851	obj/kernel.asm	/^c010d851:	55                   	push   %ebp$/;"	l
c010d852	obj/kernel.asm	/^c010d852:	89 e5                	mov    %esp,%ebp$/;"	l
c010d854	obj/kernel.asm	/^c010d854:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010d857	obj/kernel.asm	/^c010d857:	e8 8e fb ff ff       	call   c010d3ea <__intr_save>$/;"	l
c010d85c	obj/kernel.asm	/^c010d85c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010d85f	obj/kernel.asm	/^c010d85f:	c7 45 e4 14 11 15 c0 	movl   $0xc0151114,-0x1c(%ebp)$/;"	l
c010d866	obj/kernel.asm	/^c010d866:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010d869	obj/kernel.asm	/^c010d869:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d86c	obj/kernel.asm	/^c010d86c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d86f	obj/kernel.asm	/^c010d86f:	81 7d f4 14 11 15 c0 	cmpl   $0xc0151114,-0xc(%ebp)$/;"	l
c010d876	obj/kernel.asm	/^c010d876:	0f 84 e3 00 00 00    	je     c010d95f <run_timer_list+0x10e>$/;"	l
c010d87c	obj/kernel.asm	/^c010d87c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d87f	obj/kernel.asm	/^c010d87f:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010d882	obj/kernel.asm	/^c010d882:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d885	obj/kernel.asm	/^c010d885:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d888	obj/kernel.asm	/^c010d888:	8b 00                	mov    (%eax),%eax$/;"	l
c010d88a	obj/kernel.asm	/^c010d88a:	85 c0                	test   %eax,%eax$/;"	l
c010d88c	obj/kernel.asm	/^c010d88c:	75 19                	jne    c010d8a7 <run_timer_list+0x56>$/;"	l
c010d88e	obj/kernel.asm	/^c010d88e:	68 7d 6f 11 c0       	push   $0xc0116f7d$/;"	l
c010d893	obj/kernel.asm	/^c010d893:	68 e8 6e 11 c0       	push   $0xc0116ee8$/;"	l
c010d898	obj/kernel.asm	/^c010d898:	68 96 00 00 00       	push   $0x96$/;"	l
c010d89d	obj/kernel.asm	/^c010d89d:	68 fd 6e 11 c0       	push   $0xc0116efd$/;"	l
c010d8a2	obj/kernel.asm	/^c010d8a2:	e8 28 2c ff ff       	call   c01004cf <__panic>$/;"	l
c010d8a7	obj/kernel.asm	/^c010d8a7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d8aa	obj/kernel.asm	/^c010d8aa:	8b 00                	mov    (%eax),%eax$/;"	l
c010d8ac	obj/kernel.asm	/^c010d8ac:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010d8af	obj/kernel.asm	/^c010d8af:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d8b2	obj/kernel.asm	/^c010d8b2:	89 10                	mov    %edx,(%eax)$/;"	l
c010d8b4	obj/kernel.asm	/^c010d8b4:	e9 99 00 00 00       	jmp    c010d952 <run_timer_list+0x101>$/;"	l
c010d8b9	obj/kernel.asm	/^c010d8b9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d8bc	obj/kernel.asm	/^c010d8bc:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010d8bf	obj/kernel.asm	/^c010d8bf:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010d8c2	obj/kernel.asm	/^c010d8c2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d8c5	obj/kernel.asm	/^c010d8c5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d8c8	obj/kernel.asm	/^c010d8c8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d8cb	obj/kernel.asm	/^c010d8cb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d8ce	obj/kernel.asm	/^c010d8ce:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010d8d1	obj/kernel.asm	/^c010d8d1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d8d4	obj/kernel.asm	/^c010d8d4:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010d8da	obj/kernel.asm	/^c010d8da:	85 c0                	test   %eax,%eax$/;"	l
c010d8dc	obj/kernel.asm	/^c010d8dc:	74 26                	je     c010d904 <run_timer_list+0xb3>$/;"	l
c010d8de	obj/kernel.asm	/^c010d8de:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d8e1	obj/kernel.asm	/^c010d8e1:	8b 80 90 00 00 00    	mov    0x90(%eax),%eax$/;"	l
c010d8e7	obj/kernel.asm	/^c010d8e7:	85 c0                	test   %eax,%eax$/;"	l
c010d8e9	obj/kernel.asm	/^c010d8e9:	78 37                	js     c010d922 <run_timer_list+0xd1>$/;"	l
c010d8eb	obj/kernel.asm	/^c010d8eb:	68 94 6f 11 c0       	push   $0xc0116f94$/;"	l
c010d8f0	obj/kernel.asm	/^c010d8f0:	68 e8 6e 11 c0       	push   $0xc0116ee8$/;"	l
c010d8f5	obj/kernel.asm	/^c010d8f5:	68 9c 00 00 00       	push   $0x9c$/;"	l
c010d8fa	obj/kernel.asm	/^c010d8fa:	68 fd 6e 11 c0       	push   $0xc0116efd$/;"	l
c010d8ff	obj/kernel.asm	/^c010d8ff:	e8 cb 2b ff ff       	call   c01004cf <__panic>$/;"	l
c010d904	obj/kernel.asm	/^c010d904:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010d907	obj/kernel.asm	/^c010d907:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d90a	obj/kernel.asm	/^c010d90a:	50                   	push   %eax$/;"	l
c010d90b	obj/kernel.asm	/^c010d90b:	68 b8 6f 11 c0       	push   $0xc0116fb8$/;"	l
c010d910	obj/kernel.asm	/^c010d910:	68 9f 00 00 00       	push   $0x9f$/;"	l
c010d915	obj/kernel.asm	/^c010d915:	68 fd 6e 11 c0       	push   $0xc0116efd$/;"	l
c010d91a	obj/kernel.asm	/^c010d91a:	e8 1d 2c ff ff       	call   c010053c <__warn>$/;"	l
c010d91f	obj/kernel.asm	/^c010d91f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d922	obj/kernel.asm	/^c010d922:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d925	obj/kernel.asm	/^c010d925:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010d928	obj/kernel.asm	/^c010d928:	e8 11 fc ff ff       	call   c010d53e <wakeup_proc>$/;"	l
c010d92d	obj/kernel.asm	/^c010d92d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d930	obj/kernel.asm	/^c010d930:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d933	obj/kernel.asm	/^c010d933:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010d936	obj/kernel.asm	/^c010d936:	e8 4f fe ff ff       	call   c010d78a <del_timer>$/;"	l
c010d93b	obj/kernel.asm	/^c010d93b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d93e	obj/kernel.asm	/^c010d93e:	81 7d f4 14 11 15 c0 	cmpl   $0xc0151114,-0xc(%ebp)$/;"	l
c010d945	obj/kernel.asm	/^c010d945:	75 02                	jne    c010d949 <run_timer_list+0xf8>$/;"	l
c010d947	obj/kernel.asm	/^c010d947:	eb 16                	jmp    c010d95f <run_timer_list+0x10e>$/;"	l
c010d949	obj/kernel.asm	/^c010d949:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010d94c	obj/kernel.asm	/^c010d94c:	83 e8 08             	sub    $0x8,%eax$/;"	l
c010d94f	obj/kernel.asm	/^c010d94f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d952	obj/kernel.asm	/^c010d952:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d955	obj/kernel.asm	/^c010d955:	8b 00                	mov    (%eax),%eax$/;"	l
c010d957	obj/kernel.asm	/^c010d957:	85 c0                	test   %eax,%eax$/;"	l
c010d959	obj/kernel.asm	/^c010d959:	0f 84 5a ff ff ff    	je     c010d8b9 <run_timer_list+0x68>$/;"	l
c010d95f	obj/kernel.asm	/^c010d95f:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010d964	obj/kernel.asm	/^c010d964:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d967	obj/kernel.asm	/^c010d967:	50                   	push   %eax$/;"	l
c010d968	obj/kernel.asm	/^c010d968:	e8 27 fb ff ff       	call   c010d494 <sched_class_proc_tick>$/;"	l
c010d96d	obj/kernel.asm	/^c010d96d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d970	obj/kernel.asm	/^c010d970:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010d973	obj/kernel.asm	/^c010d973:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010d976	obj/kernel.asm	/^c010d976:	e8 99 fa ff ff       	call   c010d414 <__intr_restore>$/;"	l
c010d97b	obj/kernel.asm	/^c010d97b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d97e	obj/kernel.asm	/^c010d97e:	c9                   	leave  $/;"	l
c010d97f	obj/kernel.asm	/^c010d97f:	c3                   	ret    $/;"	l
c010d980	obj/kernel.asm	/^c010d980 <skew_heap_merge>:$/;"	l
c010d980	obj/kernel.asm	/^c010d980:	55                   	push   %ebp$/;"	l
c010d981	obj/kernel.asm	/^c010d981:	89 e5                	mov    %esp,%ebp$/;"	l
c010d983	obj/kernel.asm	/^c010d983:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010d986	obj/kernel.asm	/^c010d986:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010d98a	obj/kernel.asm	/^c010d98a:	75 08                	jne    c010d994 <skew_heap_merge+0x14>$/;"	l
c010d98c	obj/kernel.asm	/^c010d98c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010d98f	obj/kernel.asm	/^c010d98f:	e9 b4 00 00 00       	jmp    c010da48 <skew_heap_merge+0xc8>$/;"	l
c010d994	obj/kernel.asm	/^c010d994:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010d998	obj/kernel.asm	/^c010d998:	75 08                	jne    c010d9a2 <skew_heap_merge+0x22>$/;"	l
c010d99a	obj/kernel.asm	/^c010d99a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d99d	obj/kernel.asm	/^c010d99d:	e9 a6 00 00 00       	jmp    c010da48 <skew_heap_merge+0xc8>$/;"	l
c010d9a2	obj/kernel.asm	/^c010d9a2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010d9a5	obj/kernel.asm	/^c010d9a5:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010d9a8	obj/kernel.asm	/^c010d9a8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010d9ab	obj/kernel.asm	/^c010d9ab:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010d9ae	obj/kernel.asm	/^c010d9ae:	ff d0                	call   *%eax$/;"	l
c010d9b0	obj/kernel.asm	/^c010d9b0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d9b3	obj/kernel.asm	/^c010d9b3:	83 f8 ff             	cmp    $0xffffffff,%eax$/;"	l
c010d9b6	obj/kernel.asm	/^c010d9b6:	75 49                	jne    c010da01 <skew_heap_merge+0x81>$/;"	l
c010d9b8	obj/kernel.asm	/^c010d9b8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d9bb	obj/kernel.asm	/^c010d9bb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010d9be	obj/kernel.asm	/^c010d9be:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010d9c1	obj/kernel.asm	/^c010d9c1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d9c4	obj/kernel.asm	/^c010d9c4:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010d9c7	obj/kernel.asm	/^c010d9c7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010d9ca	obj/kernel.asm	/^c010d9ca:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010d9cd	obj/kernel.asm	/^c010d9cd:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010d9d0	obj/kernel.asm	/^c010d9d0:	50                   	push   %eax$/;"	l
c010d9d1	obj/kernel.asm	/^c010d9d1:	e8 aa ff ff ff       	call   c010d980 <skew_heap_merge>$/;"	l
c010d9d6	obj/kernel.asm	/^c010d9d6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010d9d9	obj/kernel.asm	/^c010d9d9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010d9dc	obj/kernel.asm	/^c010d9dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d9df	obj/kernel.asm	/^c010d9df:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010d9e2	obj/kernel.asm	/^c010d9e2:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010d9e5	obj/kernel.asm	/^c010d9e5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d9e8	obj/kernel.asm	/^c010d9e8:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010d9eb	obj/kernel.asm	/^c010d9eb:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010d9ee	obj/kernel.asm	/^c010d9ee:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010d9f2	obj/kernel.asm	/^c010d9f2:	74 08                	je     c010d9fc <skew_heap_merge+0x7c>$/;"	l
c010d9f4	obj/kernel.asm	/^c010d9f4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010d9f7	obj/kernel.asm	/^c010d9f7:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010d9fa	obj/kernel.asm	/^c010d9fa:	89 10                	mov    %edx,(%eax)$/;"	l
c010d9fc	obj/kernel.asm	/^c010d9fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010d9ff	obj/kernel.asm	/^c010d9ff:	eb 47                	jmp    c010da48 <skew_heap_merge+0xc8>$/;"	l
c010da01	obj/kernel.asm	/^c010da01:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010da04	obj/kernel.asm	/^c010da04:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010da07	obj/kernel.asm	/^c010da07:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010da0a	obj/kernel.asm	/^c010da0a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010da0d	obj/kernel.asm	/^c010da0d:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010da10	obj/kernel.asm	/^c010da10:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010da13	obj/kernel.asm	/^c010da13:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010da16	obj/kernel.asm	/^c010da16:	50                   	push   %eax$/;"	l
c010da17	obj/kernel.asm	/^c010da17:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010da1a	obj/kernel.asm	/^c010da1a:	e8 61 ff ff ff       	call   c010d980 <skew_heap_merge>$/;"	l
c010da1f	obj/kernel.asm	/^c010da1f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010da22	obj/kernel.asm	/^c010da22:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010da25	obj/kernel.asm	/^c010da25:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010da28	obj/kernel.asm	/^c010da28:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010da2b	obj/kernel.asm	/^c010da2b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010da2e	obj/kernel.asm	/^c010da2e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010da31	obj/kernel.asm	/^c010da31:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010da34	obj/kernel.asm	/^c010da34:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010da37	obj/kernel.asm	/^c010da37:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010da3b	obj/kernel.asm	/^c010da3b:	74 08                	je     c010da45 <skew_heap_merge+0xc5>$/;"	l
c010da3d	obj/kernel.asm	/^c010da3d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010da40	obj/kernel.asm	/^c010da40:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010da43	obj/kernel.asm	/^c010da43:	89 10                	mov    %edx,(%eax)$/;"	l
c010da45	obj/kernel.asm	/^c010da45:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010da48	obj/kernel.asm	/^c010da48:	c9                   	leave  $/;"	l
c010da49	obj/kernel.asm	/^c010da49:	c3                   	ret    $/;"	l
c010da4a	obj/kernel.asm	/^c010da4a <proc_stride_comp_f>:$/;"	l
c010da4a	obj/kernel.asm	/^c010da4a:	55                   	push   %ebp$/;"	l
c010da4b	obj/kernel.asm	/^c010da4b:	89 e5                	mov    %esp,%ebp$/;"	l
c010da4d	obj/kernel.asm	/^c010da4d:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010da50	obj/kernel.asm	/^c010da50:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010da53	obj/kernel.asm	/^c010da53:	2d b0 00 00 00       	sub    $0xb0,%eax$/;"	l
c010da58	obj/kernel.asm	/^c010da58:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010da5b	obj/kernel.asm	/^c010da5b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010da5e	obj/kernel.asm	/^c010da5e:	2d b0 00 00 00       	sub    $0xb0,%eax$/;"	l
c010da63	obj/kernel.asm	/^c010da63:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010da66	obj/kernel.asm	/^c010da66:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010da69	obj/kernel.asm	/^c010da69:	8b 90 bc 00 00 00    	mov    0xbc(%eax),%edx$/;"	l
c010da6f	obj/kernel.asm	/^c010da6f:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010da72	obj/kernel.asm	/^c010da72:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax$/;"	l
c010da78	obj/kernel.asm	/^c010da78:	29 c2                	sub    %eax,%edx$/;"	l
c010da7a	obj/kernel.asm	/^c010da7a:	89 d0                	mov    %edx,%eax$/;"	l
c010da7c	obj/kernel.asm	/^c010da7c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010da7f	obj/kernel.asm	/^c010da7f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010da83	obj/kernel.asm	/^c010da83:	7e 07                	jle    c010da8c <proc_stride_comp_f+0x42>$/;"	l
c010da85	obj/kernel.asm	/^c010da85:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010da8a	obj/kernel.asm	/^c010da8a:	eb 12                	jmp    c010da9e <proc_stride_comp_f+0x54>$/;"	l
c010da8c	obj/kernel.asm	/^c010da8c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010da90	obj/kernel.asm	/^c010da90:	75 07                	jne    c010da99 <proc_stride_comp_f+0x4f>$/;"	l
c010da92	obj/kernel.asm	/^c010da92:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010da97	obj/kernel.asm	/^c010da97:	eb 05                	jmp    c010da9e <proc_stride_comp_f+0x54>$/;"	l
c010da99	obj/kernel.asm	/^c010da99:	b8 ff ff ff ff       	mov    $0xffffffff,%eax$/;"	l
c010da9e	obj/kernel.asm	/^c010da9e:	c9                   	leave  $/;"	l
c010da9f	obj/kernel.asm	/^c010da9f:	c3                   	ret    $/;"	l
c010daa0	obj/kernel.asm	/^c010daa0 <stride_init>:$/;"	l
c010daa0	obj/kernel.asm	/^c010daa0:	55                   	push   %ebp$/;"	l
c010daa1	obj/kernel.asm	/^c010daa1:	89 e5                	mov    %esp,%ebp$/;"	l
c010daa3	obj/kernel.asm	/^c010daa3:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010daa6	obj/kernel.asm	/^c010daa6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010daa9	obj/kernel.asm	/^c010daa9:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c010daac	obj/kernel.asm	/^c010daac:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010daaf	obj/kernel.asm	/^c010daaf:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c010dab2	obj/kernel.asm	/^c010dab2:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010dab5	obj/kernel.asm	/^c010dab5:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010dab8	obj/kernel.asm	/^c010dab8:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010dabb	obj/kernel.asm	/^c010dabb:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c010dabe	obj/kernel.asm	/^c010dabe:	89 10                	mov    %edx,(%eax)$/;"	l
c010dac0	obj/kernel.asm	/^c010dac0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dac3	obj/kernel.asm	/^c010dac3:	c7 40 10 00 00 00 00 	movl   $0x0,0x10(%eax)$/;"	l
c010daca	obj/kernel.asm	/^c010daca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dacd	obj/kernel.asm	/^c010dacd:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010dad4	obj/kernel.asm	/^c010dad4:	c9                   	leave  $/;"	l
c010dad5	obj/kernel.asm	/^c010dad5:	c3                   	ret    $/;"	l
c010dad6	obj/kernel.asm	/^c010dad6 <stride_enqueue>:$/;"	l
c010dad6	obj/kernel.asm	/^c010dad6:	55                   	push   %ebp$/;"	l
c010dad7	obj/kernel.asm	/^c010dad7:	89 e5                	mov    %esp,%ebp$/;"	l
c010dad9	obj/kernel.asm	/^c010dad9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010dadc	obj/kernel.asm	/^c010dadc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010dadf	obj/kernel.asm	/^c010dadf:	8d 90 b0 00 00 00    	lea    0xb0(%eax),%edx$/;"	l
c010dae5	obj/kernel.asm	/^c010dae5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dae8	obj/kernel.asm	/^c010dae8:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010daeb	obj/kernel.asm	/^c010daeb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010daee	obj/kernel.asm	/^c010daee:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c010daf1	obj/kernel.asm	/^c010daf1:	c7 45 ec 4a da 10 c0 	movl   $0xc010da4a,-0x14(%ebp)$/;"	l
c010daf8	obj/kernel.asm	/^c010daf8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010dafb	obj/kernel.asm	/^c010dafb:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010dafe	obj/kernel.asm	/^c010dafe:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010db01	obj/kernel.asm	/^c010db01:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010db07	obj/kernel.asm	/^c010db07:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010db0a	obj/kernel.asm	/^c010db0a:	8b 10                	mov    (%eax),%edx$/;"	l
c010db0c	obj/kernel.asm	/^c010db0c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010db0f	obj/kernel.asm	/^c010db0f:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010db12	obj/kernel.asm	/^c010db12:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010db15	obj/kernel.asm	/^c010db15:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010db18	obj/kernel.asm	/^c010db18:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010db1b	obj/kernel.asm	/^c010db1b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010db1e	obj/kernel.asm	/^c010db1e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010db21	obj/kernel.asm	/^c010db21:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010db24	obj/kernel.asm	/^c010db24:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010db27	obj/kernel.asm	/^c010db27:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010db2a	obj/kernel.asm	/^c010db2a:	e8 51 fe ff ff       	call   c010d980 <skew_heap_merge>$/;"	l
c010db2f	obj/kernel.asm	/^c010db2f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010db32	obj/kernel.asm	/^c010db32:	89 c2                	mov    %eax,%edx$/;"	l
c010db34	obj/kernel.asm	/^c010db34:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010db37	obj/kernel.asm	/^c010db37:	89 50 10             	mov    %edx,0x10(%eax)$/;"	l
c010db3a	obj/kernel.asm	/^c010db3a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010db3d	obj/kernel.asm	/^c010db3d:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010db43	obj/kernel.asm	/^c010db43:	85 c0                	test   %eax,%eax$/;"	l
c010db45	obj/kernel.asm	/^c010db45:	74 13                	je     c010db5a <stride_enqueue+0x84>$/;"	l
c010db47	obj/kernel.asm	/^c010db47:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010db4a	obj/kernel.asm	/^c010db4a:	8b 90 ac 00 00 00    	mov    0xac(%eax),%edx$/;"	l
c010db50	obj/kernel.asm	/^c010db50:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010db53	obj/kernel.asm	/^c010db53:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010db56	obj/kernel.asm	/^c010db56:	39 c2                	cmp    %eax,%edx$/;"	l
c010db58	obj/kernel.asm	/^c010db58:	7e 0f                	jle    c010db69 <stride_enqueue+0x93>$/;"	l
c010db5a	obj/kernel.asm	/^c010db5a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010db5d	obj/kernel.asm	/^c010db5d:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010db60	obj/kernel.asm	/^c010db60:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010db63	obj/kernel.asm	/^c010db63:	89 90 ac 00 00 00    	mov    %edx,0xac(%eax)$/;"	l
c010db69	obj/kernel.asm	/^c010db69:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010db6c	obj/kernel.asm	/^c010db6c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010db6f	obj/kernel.asm	/^c010db6f:	89 90 a0 00 00 00    	mov    %edx,0xa0(%eax)$/;"	l
c010db75	obj/kernel.asm	/^c010db75:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010db78	obj/kernel.asm	/^c010db78:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010db7b	obj/kernel.asm	/^c010db7b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010db7e	obj/kernel.asm	/^c010db7e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010db81	obj/kernel.asm	/^c010db81:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010db84	obj/kernel.asm	/^c010db84:	c9                   	leave  $/;"	l
c010db85	obj/kernel.asm	/^c010db85:	c3                   	ret    $/;"	l
c010db86	obj/kernel.asm	/^c010db86 <stride_dequeue>:$/;"	l
c010db86	obj/kernel.asm	/^c010db86:	55                   	push   %ebp$/;"	l
c010db87	obj/kernel.asm	/^c010db87:	89 e5                	mov    %esp,%ebp$/;"	l
c010db89	obj/kernel.asm	/^c010db89:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010db8c	obj/kernel.asm	/^c010db8c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010db8f	obj/kernel.asm	/^c010db8f:	8d 90 b0 00 00 00    	lea    0xb0(%eax),%edx$/;"	l
c010db95	obj/kernel.asm	/^c010db95:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010db98	obj/kernel.asm	/^c010db98:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010db9b	obj/kernel.asm	/^c010db9b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010db9e	obj/kernel.asm	/^c010db9e:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c010dba1	obj/kernel.asm	/^c010dba1:	c7 45 ec 4a da 10 c0 	movl   $0xc010da4a,-0x14(%ebp)$/;"	l
c010dba8	obj/kernel.asm	/^c010dba8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010dbab	obj/kernel.asm	/^c010dbab:	8b 00                	mov    (%eax),%eax$/;"	l
c010dbad	obj/kernel.asm	/^c010dbad:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010dbb0	obj/kernel.asm	/^c010dbb0:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010dbb3	obj/kernel.asm	/^c010dbb3:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c010dbb6	obj/kernel.asm	/^c010dbb6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010dbb9	obj/kernel.asm	/^c010dbb9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010dbbc	obj/kernel.asm	/^c010dbbc:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010dbbf	obj/kernel.asm	/^c010dbbf:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010dbc2	obj/kernel.asm	/^c010dbc2:	52                   	push   %edx$/;"	l
c010dbc3	obj/kernel.asm	/^c010dbc3:	50                   	push   %eax$/;"	l
c010dbc4	obj/kernel.asm	/^c010dbc4:	e8 b7 fd ff ff       	call   c010d980 <skew_heap_merge>$/;"	l
c010dbc9	obj/kernel.asm	/^c010dbc9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dbcc	obj/kernel.asm	/^c010dbcc:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010dbcf	obj/kernel.asm	/^c010dbcf:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010dbd3	obj/kernel.asm	/^c010dbd3:	74 08                	je     c010dbdd <stride_dequeue+0x57>$/;"	l
c010dbd5	obj/kernel.asm	/^c010dbd5:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010dbd8	obj/kernel.asm	/^c010dbd8:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010dbdb	obj/kernel.asm	/^c010dbdb:	89 10                	mov    %edx,(%eax)$/;"	l
c010dbdd	obj/kernel.asm	/^c010dbdd:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010dbe1	obj/kernel.asm	/^c010dbe1:	74 24                	je     c010dc07 <stride_dequeue+0x81>$/;"	l
c010dbe3	obj/kernel.asm	/^c010dbe3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010dbe6	obj/kernel.asm	/^c010dbe6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010dbe9	obj/kernel.asm	/^c010dbe9:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010dbec	obj/kernel.asm	/^c010dbec:	75 0b                	jne    c010dbf9 <stride_dequeue+0x73>$/;"	l
c010dbee	obj/kernel.asm	/^c010dbee:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010dbf1	obj/kernel.asm	/^c010dbf1:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010dbf4	obj/kernel.asm	/^c010dbf4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010dbf7	obj/kernel.asm	/^c010dbf7:	eb 09                	jmp    c010dc02 <stride_dequeue+0x7c>$/;"	l
c010dbf9	obj/kernel.asm	/^c010dbf9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010dbfc	obj/kernel.asm	/^c010dbfc:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010dbff	obj/kernel.asm	/^c010dbff:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010dc02	obj/kernel.asm	/^c010dc02:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dc05	obj/kernel.asm	/^c010dc05:	eb 03                	jmp    c010dc0a <stride_dequeue+0x84>$/;"	l
c010dc07	obj/kernel.asm	/^c010dc07:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010dc0a	obj/kernel.asm	/^c010dc0a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010dc0d	obj/kernel.asm	/^c010dc0d:	89 42 10             	mov    %eax,0x10(%edx)$/;"	l
c010dc10	obj/kernel.asm	/^c010dc10:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dc13	obj/kernel.asm	/^c010dc13:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010dc16	obj/kernel.asm	/^c010dc16:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010dc19	obj/kernel.asm	/^c010dc19:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dc1c	obj/kernel.asm	/^c010dc1c:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010dc1f	obj/kernel.asm	/^c010dc1f:	c9                   	leave  $/;"	l
c010dc20	obj/kernel.asm	/^c010dc20:	c3                   	ret    $/;"	l
c010dc21	obj/kernel.asm	/^c010dc21 <stride_pick_next>:$/;"	l
c010dc21	obj/kernel.asm	/^c010dc21:	55                   	push   %ebp$/;"	l
c010dc22	obj/kernel.asm	/^c010dc22:	89 e5                	mov    %esp,%ebp$/;"	l
c010dc24	obj/kernel.asm	/^c010dc24:	53                   	push   %ebx$/;"	l
c010dc25	obj/kernel.asm	/^c010dc25:	83 ec 10             	sub    $0x10,%esp$/;"	l
c010dc28	obj/kernel.asm	/^c010dc28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dc2b	obj/kernel.asm	/^c010dc2b:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010dc2e	obj/kernel.asm	/^c010dc2e:	85 c0                	test   %eax,%eax$/;"	l
c010dc30	obj/kernel.asm	/^c010dc30:	75 07                	jne    c010dc39 <stride_pick_next+0x18>$/;"	l
c010dc32	obj/kernel.asm	/^c010dc32:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010dc37	obj/kernel.asm	/^c010dc37:	eb 62                	jmp    c010dc9b <stride_pick_next+0x7a>$/;"	l
c010dc39	obj/kernel.asm	/^c010dc39:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dc3c	obj/kernel.asm	/^c010dc3c:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010dc3f	obj/kernel.asm	/^c010dc3f:	2d b0 00 00 00       	sub    $0xb0,%eax$/;"	l
c010dc44	obj/kernel.asm	/^c010dc44:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c010dc47	obj/kernel.asm	/^c010dc47:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010dc4a	obj/kernel.asm	/^c010dc4a:	8b 80 c0 00 00 00    	mov    0xc0(%eax),%eax$/;"	l
c010dc50	obj/kernel.asm	/^c010dc50:	85 c0                	test   %eax,%eax$/;"	l
c010dc52	obj/kernel.asm	/^c010dc52:	75 1a                	jne    c010dc6e <stride_pick_next+0x4d>$/;"	l
c010dc54	obj/kernel.asm	/^c010dc54:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010dc57	obj/kernel.asm	/^c010dc57:	8b 80 bc 00 00 00    	mov    0xbc(%eax),%eax$/;"	l
c010dc5d	obj/kernel.asm	/^c010dc5d:	8d 90 ff ff ff 7f    	lea    0x7fffffff(%eax),%edx$/;"	l
c010dc63	obj/kernel.asm	/^c010dc63:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010dc66	obj/kernel.asm	/^c010dc66:	89 90 bc 00 00 00    	mov    %edx,0xbc(%eax)$/;"	l
c010dc6c	obj/kernel.asm	/^c010dc6c:	eb 2a                	jmp    c010dc98 <stride_pick_next+0x77>$/;"	l
c010dc6e	obj/kernel.asm	/^c010dc6e:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010dc71	obj/kernel.asm	/^c010dc71:	8b 88 bc 00 00 00    	mov    0xbc(%eax),%ecx$/;"	l
c010dc77	obj/kernel.asm	/^c010dc77:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010dc7a	obj/kernel.asm	/^c010dc7a:	8b 98 c0 00 00 00    	mov    0xc0(%eax),%ebx$/;"	l
c010dc80	obj/kernel.asm	/^c010dc80:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax$/;"	l
c010dc85	obj/kernel.asm	/^c010dc85:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c010dc8a	obj/kernel.asm	/^c010dc8a:	f7 f3                	div    %ebx$/;"	l
c010dc8c	obj/kernel.asm	/^c010dc8c:	8d 14 01             	lea    (%ecx,%eax,1),%edx$/;"	l
c010dc8f	obj/kernel.asm	/^c010dc8f:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010dc92	obj/kernel.asm	/^c010dc92:	89 90 bc 00 00 00    	mov    %edx,0xbc(%eax)$/;"	l
c010dc98	obj/kernel.asm	/^c010dc98:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c010dc9b	obj/kernel.asm	/^c010dc9b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dc9e	obj/kernel.asm	/^c010dc9e:	5b                   	pop    %ebx$/;"	l
c010dc9f	obj/kernel.asm	/^c010dc9f:	5d                   	pop    %ebp$/;"	l
c010dca0	obj/kernel.asm	/^c010dca0:	c3                   	ret    $/;"	l
c010dca1	obj/kernel.asm	/^c010dca1 <stride_proc_tick>:$/;"	l
c010dca1	obj/kernel.asm	/^c010dca1:	55                   	push   %ebp$/;"	l
c010dca2	obj/kernel.asm	/^c010dca2:	89 e5                	mov    %esp,%ebp$/;"	l
c010dca4	obj/kernel.asm	/^c010dca4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010dca7	obj/kernel.asm	/^c010dca7:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010dcad	obj/kernel.asm	/^c010dcad:	85 c0                	test   %eax,%eax$/;"	l
c010dcaf	obj/kernel.asm	/^c010dcaf:	7e 15                	jle    c010dcc6 <stride_proc_tick+0x25>$/;"	l
c010dcb1	obj/kernel.asm	/^c010dcb1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010dcb4	obj/kernel.asm	/^c010dcb4:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010dcba	obj/kernel.asm	/^c010dcba:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010dcbd	obj/kernel.asm	/^c010dcbd:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010dcc0	obj/kernel.asm	/^c010dcc0:	89 90 ac 00 00 00    	mov    %edx,0xac(%eax)$/;"	l
c010dcc6	obj/kernel.asm	/^c010dcc6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010dcc9	obj/kernel.asm	/^c010dcc9:	8b 80 ac 00 00 00    	mov    0xac(%eax),%eax$/;"	l
c010dccf	obj/kernel.asm	/^c010dccf:	85 c0                	test   %eax,%eax$/;"	l
c010dcd1	obj/kernel.asm	/^c010dcd1:	75 0a                	jne    c010dcdd <stride_proc_tick+0x3c>$/;"	l
c010dcd3	obj/kernel.asm	/^c010dcd3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010dcd6	obj/kernel.asm	/^c010dcd6:	c7 40 10 01 00 00 00 	movl   $0x1,0x10(%eax)$/;"	l
c010dcdd	obj/kernel.asm	/^c010dcdd:	5d                   	pop    %ebp$/;"	l
c010dcde	obj/kernel.asm	/^c010dcde:	c3                   	ret    $/;"	l
c010dcdf	obj/kernel.asm	/^c010dcdf <sys_exit>:$/;"	l
c010dcdf	obj/kernel.asm	/^c010dcdf:	55                   	push   %ebp$/;"	l
c010dce0	obj/kernel.asm	/^c010dce0:	89 e5                	mov    %esp,%ebp$/;"	l
c010dce2	obj/kernel.asm	/^c010dce2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010dce5	obj/kernel.asm	/^c010dce5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dce8	obj/kernel.asm	/^c010dce8:	8b 00                	mov    (%eax),%eax$/;"	l
c010dcea	obj/kernel.asm	/^c010dcea:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dced	obj/kernel.asm	/^c010dced:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010dcf0	obj/kernel.asm	/^c010dcf0:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010dcf3	obj/kernel.asm	/^c010dcf3:	e8 c1 e2 ff ff       	call   c010bfb9 <do_exit>$/;"	l
c010dcf8	obj/kernel.asm	/^c010dcf8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dcfb	obj/kernel.asm	/^c010dcfb:	c9                   	leave  $/;"	l
c010dcfc	obj/kernel.asm	/^c010dcfc:	c3                   	ret    $/;"	l
c010dcfd	obj/kernel.asm	/^c010dcfd <sys_fork>:$/;"	l
c010dcfd	obj/kernel.asm	/^c010dcfd:	55                   	push   %ebp$/;"	l
c010dcfe	obj/kernel.asm	/^c010dcfe:	89 e5                	mov    %esp,%ebp$/;"	l
c010dd00	obj/kernel.asm	/^c010dd00:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010dd03	obj/kernel.asm	/^c010dd03:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010dd08	obj/kernel.asm	/^c010dd08:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010dd0b	obj/kernel.asm	/^c010dd0b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dd0e	obj/kernel.asm	/^c010dd0e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010dd11	obj/kernel.asm	/^c010dd11:	8b 40 44             	mov    0x44(%eax),%eax$/;"	l
c010dd14	obj/kernel.asm	/^c010dd14:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010dd17	obj/kernel.asm	/^c010dd17:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010dd1a	obj/kernel.asm	/^c010dd1a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010dd1d	obj/kernel.asm	/^c010dd1d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010dd20	obj/kernel.asm	/^c010dd20:	6a 00                	push   $0x0$/;"	l
c010dd22	obj/kernel.asm	/^c010dd22:	e8 4f e1 ff ff       	call   c010be76 <do_fork>$/;"	l
c010dd27	obj/kernel.asm	/^c010dd27:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dd2a	obj/kernel.asm	/^c010dd2a:	c9                   	leave  $/;"	l
c010dd2b	obj/kernel.asm	/^c010dd2b:	c3                   	ret    $/;"	l
c010dd2c	obj/kernel.asm	/^c010dd2c <sys_wait>:$/;"	l
c010dd2c	obj/kernel.asm	/^c010dd2c:	55                   	push   %ebp$/;"	l
c010dd2d	obj/kernel.asm	/^c010dd2d:	89 e5                	mov    %esp,%ebp$/;"	l
c010dd2f	obj/kernel.asm	/^c010dd2f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010dd32	obj/kernel.asm	/^c010dd32:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dd35	obj/kernel.asm	/^c010dd35:	8b 00                	mov    (%eax),%eax$/;"	l
c010dd37	obj/kernel.asm	/^c010dd37:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dd3a	obj/kernel.asm	/^c010dd3a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dd3d	obj/kernel.asm	/^c010dd3d:	83 c0 04             	add    $0x4,%eax$/;"	l
c010dd40	obj/kernel.asm	/^c010dd40:	8b 00                	mov    (%eax),%eax$/;"	l
c010dd42	obj/kernel.asm	/^c010dd42:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010dd45	obj/kernel.asm	/^c010dd45:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010dd48	obj/kernel.asm	/^c010dd48:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010dd4b	obj/kernel.asm	/^c010dd4b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010dd4e	obj/kernel.asm	/^c010dd4e:	e8 64 ef ff ff       	call   c010ccb7 <do_wait>$/;"	l
c010dd53	obj/kernel.asm	/^c010dd53:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dd56	obj/kernel.asm	/^c010dd56:	c9                   	leave  $/;"	l
c010dd57	obj/kernel.asm	/^c010dd57:	c3                   	ret    $/;"	l
c010dd58	obj/kernel.asm	/^c010dd58 <sys_exec>:$/;"	l
c010dd58	obj/kernel.asm	/^c010dd58:	55                   	push   %ebp$/;"	l
c010dd59	obj/kernel.asm	/^c010dd59:	89 e5                	mov    %esp,%ebp$/;"	l
c010dd5b	obj/kernel.asm	/^c010dd5b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010dd5e	obj/kernel.asm	/^c010dd5e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dd61	obj/kernel.asm	/^c010dd61:	8b 00                	mov    (%eax),%eax$/;"	l
c010dd63	obj/kernel.asm	/^c010dd63:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dd66	obj/kernel.asm	/^c010dd66:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dd69	obj/kernel.asm	/^c010dd69:	83 c0 04             	add    $0x4,%eax$/;"	l
c010dd6c	obj/kernel.asm	/^c010dd6c:	8b 00                	mov    (%eax),%eax$/;"	l
c010dd6e	obj/kernel.asm	/^c010dd6e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010dd71	obj/kernel.asm	/^c010dd71:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dd74	obj/kernel.asm	/^c010dd74:	83 c0 08             	add    $0x8,%eax$/;"	l
c010dd77	obj/kernel.asm	/^c010dd77:	8b 00                	mov    (%eax),%eax$/;"	l
c010dd79	obj/kernel.asm	/^c010dd79:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010dd7c	obj/kernel.asm	/^c010dd7c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010dd7f	obj/kernel.asm	/^c010dd7f:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010dd82	obj/kernel.asm	/^c010dd82:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010dd85	obj/kernel.asm	/^c010dd85:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010dd88	obj/kernel.asm	/^c010dd88:	e8 f5 ec ff ff       	call   c010ca82 <do_execve>$/;"	l
c010dd8d	obj/kernel.asm	/^c010dd8d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dd90	obj/kernel.asm	/^c010dd90:	c9                   	leave  $/;"	l
c010dd91	obj/kernel.asm	/^c010dd91:	c3                   	ret    $/;"	l
c010dd92	obj/kernel.asm	/^c010dd92 <sys_yield>:$/;"	l
c010dd92	obj/kernel.asm	/^c010dd92:	55                   	push   %ebp$/;"	l
c010dd93	obj/kernel.asm	/^c010dd93:	89 e5                	mov    %esp,%ebp$/;"	l
c010dd95	obj/kernel.asm	/^c010dd95:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010dd98	obj/kernel.asm	/^c010dd98:	e8 04 ef ff ff       	call   c010cca1 <do_yield>$/;"	l
c010dd9d	obj/kernel.asm	/^c010dd9d:	c9                   	leave  $/;"	l
c010dd9e	obj/kernel.asm	/^c010dd9e:	c3                   	ret    $/;"	l
c010dd9f	obj/kernel.asm	/^c010dd9f <sys_kill>:$/;"	l
c010dd9f	obj/kernel.asm	/^c010dd9f:	55                   	push   %ebp$/;"	l
c010dda0	obj/kernel.asm	/^c010dda0:	89 e5                	mov    %esp,%ebp$/;"	l
c010dda2	obj/kernel.asm	/^c010dda2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010dda5	obj/kernel.asm	/^c010dda5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dda8	obj/kernel.asm	/^c010dda8:	8b 00                	mov    (%eax),%eax$/;"	l
c010ddaa	obj/kernel.asm	/^c010ddaa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ddad	obj/kernel.asm	/^c010ddad:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ddb0	obj/kernel.asm	/^c010ddb0:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010ddb3	obj/kernel.asm	/^c010ddb3:	e8 99 f0 ff ff       	call   c010ce51 <do_kill>$/;"	l
c010ddb8	obj/kernel.asm	/^c010ddb8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ddbb	obj/kernel.asm	/^c010ddbb:	c9                   	leave  $/;"	l
c010ddbc	obj/kernel.asm	/^c010ddbc:	c3                   	ret    $/;"	l
c010ddbd	obj/kernel.asm	/^c010ddbd <sys_getpid>:$/;"	l
c010ddbd	obj/kernel.asm	/^c010ddbd:	55                   	push   %ebp$/;"	l
c010ddbe	obj/kernel.asm	/^c010ddbe:	89 e5                	mov    %esp,%ebp$/;"	l
c010ddc0	obj/kernel.asm	/^c010ddc0:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010ddc5	obj/kernel.asm	/^c010ddc5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ddc8	obj/kernel.asm	/^c010ddc8:	5d                   	pop    %ebp$/;"	l
c010ddc9	obj/kernel.asm	/^c010ddc9:	c3                   	ret    $/;"	l
c010ddca	obj/kernel.asm	/^c010ddca <sys_putc>:$/;"	l
c010ddca	obj/kernel.asm	/^c010ddca:	55                   	push   %ebp$/;"	l
c010ddcb	obj/kernel.asm	/^c010ddcb:	89 e5                	mov    %esp,%ebp$/;"	l
c010ddcd	obj/kernel.asm	/^c010ddcd:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ddd0	obj/kernel.asm	/^c010ddd0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ddd3	obj/kernel.asm	/^c010ddd3:	8b 00                	mov    (%eax),%eax$/;"	l
c010ddd5	obj/kernel.asm	/^c010ddd5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ddd8	obj/kernel.asm	/^c010ddd8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010dddb	obj/kernel.asm	/^c010dddb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010ddde	obj/kernel.asm	/^c010ddde:	e8 ad 25 ff ff       	call   c0100390 <cputchar>$/;"	l
c010dde3	obj/kernel.asm	/^c010dde3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dde6	obj/kernel.asm	/^c010dde6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ddeb	obj/kernel.asm	/^c010ddeb:	c9                   	leave  $/;"	l
c010ddec	obj/kernel.asm	/^c010ddec:	c3                   	ret    $/;"	l
c010dded	obj/kernel.asm	/^c010dded <sys_pgdir>:$/;"	l
c010dded	obj/kernel.asm	/^c010dded:	55                   	push   %ebp$/;"	l
c010ddee	obj/kernel.asm	/^c010ddee:	89 e5                	mov    %esp,%ebp$/;"	l
c010ddf0	obj/kernel.asm	/^c010ddf0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ddf3	obj/kernel.asm	/^c010ddf3:	e8 fd 71 ff ff       	call   c0104ff5 <print_pgdir>$/;"	l
c010ddf8	obj/kernel.asm	/^c010ddf8:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ddfd	obj/kernel.asm	/^c010ddfd:	c9                   	leave  $/;"	l
c010ddfe	obj/kernel.asm	/^c010ddfe:	c3                   	ret    $/;"	l
c010ddff	obj/kernel.asm	/^c010ddff <sys_gettime>:$/;"	l
c010ddff	obj/kernel.asm	/^c010ddff:	55                   	push   %ebp$/;"	l
c010de00	obj/kernel.asm	/^c010de00:	89 e5                	mov    %esp,%ebp$/;"	l
c010de02	obj/kernel.asm	/^c010de02:	a1 a0 21 15 c0       	mov    0xc01521a0,%eax$/;"	l
c010de07	obj/kernel.asm	/^c010de07:	5d                   	pop    %ebp$/;"	l
c010de08	obj/kernel.asm	/^c010de08:	c3                   	ret    $/;"	l
c010de09	obj/kernel.asm	/^c010de09 <sys_lab6_set_priority>:$/;"	l
c010de09	obj/kernel.asm	/^c010de09:	55                   	push   %ebp$/;"	l
c010de0a	obj/kernel.asm	/^c010de0a:	89 e5                	mov    %esp,%ebp$/;"	l
c010de0c	obj/kernel.asm	/^c010de0c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010de0f	obj/kernel.asm	/^c010de0f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010de12	obj/kernel.asm	/^c010de12:	8b 00                	mov    (%eax),%eax$/;"	l
c010de14	obj/kernel.asm	/^c010de14:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010de17	obj/kernel.asm	/^c010de17:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010de1a	obj/kernel.asm	/^c010de1a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010de1d	obj/kernel.asm	/^c010de1d:	e8 17 f5 ff ff       	call   c010d339 <lab6_set_priority>$/;"	l
c010de22	obj/kernel.asm	/^c010de22:	83 c4 10             	add    $0x10,%esp$/;"	l
c010de25	obj/kernel.asm	/^c010de25:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010de2a	obj/kernel.asm	/^c010de2a:	c9                   	leave  $/;"	l
c010de2b	obj/kernel.asm	/^c010de2b:	c3                   	ret    $/;"	l
c010de2c	obj/kernel.asm	/^c010de2c <sys_sleep>:$/;"	l
c010de2c	obj/kernel.asm	/^c010de2c:	55                   	push   %ebp$/;"	l
c010de2d	obj/kernel.asm	/^c010de2d:	89 e5                	mov    %esp,%ebp$/;"	l
c010de2f	obj/kernel.asm	/^c010de2f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010de32	obj/kernel.asm	/^c010de32:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010de35	obj/kernel.asm	/^c010de35:	8b 00                	mov    (%eax),%eax$/;"	l
c010de37	obj/kernel.asm	/^c010de37:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010de3a	obj/kernel.asm	/^c010de3a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010de3d	obj/kernel.asm	/^c010de3d:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010de40	obj/kernel.asm	/^c010de40:	e8 1e f5 ff ff       	call   c010d363 <do_sleep>$/;"	l
c010de45	obj/kernel.asm	/^c010de45:	83 c4 10             	add    $0x10,%esp$/;"	l
c010de48	obj/kernel.asm	/^c010de48:	c9                   	leave  $/;"	l
c010de49	obj/kernel.asm	/^c010de49:	c3                   	ret    $/;"	l
c010de4a	obj/kernel.asm	/^c010de4a <sys_open>:$/;"	l
c010de4a	obj/kernel.asm	/^c010de4a:	55                   	push   %ebp$/;"	l
c010de4b	obj/kernel.asm	/^c010de4b:	89 e5                	mov    %esp,%ebp$/;"	l
c010de4d	obj/kernel.asm	/^c010de4d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010de50	obj/kernel.asm	/^c010de50:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010de53	obj/kernel.asm	/^c010de53:	8b 00                	mov    (%eax),%eax$/;"	l
c010de55	obj/kernel.asm	/^c010de55:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010de58	obj/kernel.asm	/^c010de58:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010de5b	obj/kernel.asm	/^c010de5b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010de5e	obj/kernel.asm	/^c010de5e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010de61	obj/kernel.asm	/^c010de61:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010de64	obj/kernel.asm	/^c010de64:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010de67	obj/kernel.asm	/^c010de67:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010de6a	obj/kernel.asm	/^c010de6a:	e8 5f ba ff ff       	call   c01098ce <sysfile_open>$/;"	l
c010de6f	obj/kernel.asm	/^c010de6f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010de72	obj/kernel.asm	/^c010de72:	c9                   	leave  $/;"	l
c010de73	obj/kernel.asm	/^c010de73:	c3                   	ret    $/;"	l
c010de74	obj/kernel.asm	/^c010de74 <sys_close>:$/;"	l
c010de74	obj/kernel.asm	/^c010de74:	55                   	push   %ebp$/;"	l
c010de75	obj/kernel.asm	/^c010de75:	89 e5                	mov    %esp,%ebp$/;"	l
c010de77	obj/kernel.asm	/^c010de77:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010de7a	obj/kernel.asm	/^c010de7a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010de7d	obj/kernel.asm	/^c010de7d:	8b 00                	mov    (%eax),%eax$/;"	l
c010de7f	obj/kernel.asm	/^c010de7f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010de82	obj/kernel.asm	/^c010de82:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010de85	obj/kernel.asm	/^c010de85:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010de88	obj/kernel.asm	/^c010de88:	e8 90 ba ff ff       	call   c010991d <sysfile_close>$/;"	l
c010de8d	obj/kernel.asm	/^c010de8d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010de90	obj/kernel.asm	/^c010de90:	c9                   	leave  $/;"	l
c010de91	obj/kernel.asm	/^c010de91:	c3                   	ret    $/;"	l
c010de92	obj/kernel.asm	/^c010de92 <sys_read>:$/;"	l
c010de92	obj/kernel.asm	/^c010de92:	55                   	push   %ebp$/;"	l
c010de93	obj/kernel.asm	/^c010de93:	89 e5                	mov    %esp,%ebp$/;"	l
c010de95	obj/kernel.asm	/^c010de95:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010de98	obj/kernel.asm	/^c010de98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010de9b	obj/kernel.asm	/^c010de9b:	8b 00                	mov    (%eax),%eax$/;"	l
c010de9d	obj/kernel.asm	/^c010de9d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dea0	obj/kernel.asm	/^c010dea0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dea3	obj/kernel.asm	/^c010dea3:	83 c0 04             	add    $0x4,%eax$/;"	l
c010dea6	obj/kernel.asm	/^c010dea6:	8b 00                	mov    (%eax),%eax$/;"	l
c010dea8	obj/kernel.asm	/^c010dea8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010deab	obj/kernel.asm	/^c010deab:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010deae	obj/kernel.asm	/^c010deae:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010deb1	obj/kernel.asm	/^c010deb1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010deb4	obj/kernel.asm	/^c010deb4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010deb7	obj/kernel.asm	/^c010deb7:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010deba	obj/kernel.asm	/^c010deba:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010debd	obj/kernel.asm	/^c010debd:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010dec0	obj/kernel.asm	/^c010dec0:	e8 6e ba ff ff       	call   c0109933 <sysfile_read>$/;"	l
c010dec5	obj/kernel.asm	/^c010dec5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dec8	obj/kernel.asm	/^c010dec8:	c9                   	leave  $/;"	l
c010dec9	obj/kernel.asm	/^c010dec9:	c3                   	ret    $/;"	l
c010deca	obj/kernel.asm	/^c010deca <sys_write>:$/;"	l
c010deca	obj/kernel.asm	/^c010deca:	55                   	push   %ebp$/;"	l
c010decb	obj/kernel.asm	/^c010decb:	89 e5                	mov    %esp,%ebp$/;"	l
c010decd	obj/kernel.asm	/^c010decd:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ded0	obj/kernel.asm	/^c010ded0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ded3	obj/kernel.asm	/^c010ded3:	8b 00                	mov    (%eax),%eax$/;"	l
c010ded5	obj/kernel.asm	/^c010ded5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ded8	obj/kernel.asm	/^c010ded8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dedb	obj/kernel.asm	/^c010dedb:	83 c0 04             	add    $0x4,%eax$/;"	l
c010dede	obj/kernel.asm	/^c010dede:	8b 00                	mov    (%eax),%eax$/;"	l
c010dee0	obj/kernel.asm	/^c010dee0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010dee3	obj/kernel.asm	/^c010dee3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dee6	obj/kernel.asm	/^c010dee6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010dee9	obj/kernel.asm	/^c010dee9:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010deec	obj/kernel.asm	/^c010deec:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010deef	obj/kernel.asm	/^c010deef:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010def2	obj/kernel.asm	/^c010def2:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010def5	obj/kernel.asm	/^c010def5:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010def8	obj/kernel.asm	/^c010def8:	e8 8b bb ff ff       	call   c0109a88 <sysfile_write>$/;"	l
c010defd	obj/kernel.asm	/^c010defd:	83 c4 10             	add    $0x10,%esp$/;"	l
c010df00	obj/kernel.asm	/^c010df00:	c9                   	leave  $/;"	l
c010df01	obj/kernel.asm	/^c010df01:	c3                   	ret    $/;"	l
c010df02	obj/kernel.asm	/^c010df02 <sys_seek>:$/;"	l
c010df02	obj/kernel.asm	/^c010df02:	55                   	push   %ebp$/;"	l
c010df03	obj/kernel.asm	/^c010df03:	89 e5                	mov    %esp,%ebp$/;"	l
c010df05	obj/kernel.asm	/^c010df05:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010df08	obj/kernel.asm	/^c010df08:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010df0b	obj/kernel.asm	/^c010df0b:	8b 00                	mov    (%eax),%eax$/;"	l
c010df0d	obj/kernel.asm	/^c010df0d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010df10	obj/kernel.asm	/^c010df10:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010df13	obj/kernel.asm	/^c010df13:	83 c0 04             	add    $0x4,%eax$/;"	l
c010df16	obj/kernel.asm	/^c010df16:	8b 00                	mov    (%eax),%eax$/;"	l
c010df18	obj/kernel.asm	/^c010df18:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010df1b	obj/kernel.asm	/^c010df1b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010df1e	obj/kernel.asm	/^c010df1e:	83 c0 08             	add    $0x8,%eax$/;"	l
c010df21	obj/kernel.asm	/^c010df21:	8b 00                	mov    (%eax),%eax$/;"	l
c010df23	obj/kernel.asm	/^c010df23:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010df26	obj/kernel.asm	/^c010df26:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010df29	obj/kernel.asm	/^c010df29:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010df2c	obj/kernel.asm	/^c010df2c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010df2f	obj/kernel.asm	/^c010df2f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010df32	obj/kernel.asm	/^c010df32:	e8 ac bc ff ff       	call   c0109be3 <sysfile_seek>$/;"	l
c010df37	obj/kernel.asm	/^c010df37:	83 c4 10             	add    $0x10,%esp$/;"	l
c010df3a	obj/kernel.asm	/^c010df3a:	c9                   	leave  $/;"	l
c010df3b	obj/kernel.asm	/^c010df3b:	c3                   	ret    $/;"	l
c010df3c	obj/kernel.asm	/^c010df3c <sys_fstat>:$/;"	l
c010df3c	obj/kernel.asm	/^c010df3c:	55                   	push   %ebp$/;"	l
c010df3d	obj/kernel.asm	/^c010df3d:	89 e5                	mov    %esp,%ebp$/;"	l
c010df3f	obj/kernel.asm	/^c010df3f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010df42	obj/kernel.asm	/^c010df42:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010df45	obj/kernel.asm	/^c010df45:	8b 00                	mov    (%eax),%eax$/;"	l
c010df47	obj/kernel.asm	/^c010df47:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010df4a	obj/kernel.asm	/^c010df4a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010df4d	obj/kernel.asm	/^c010df4d:	83 c0 04             	add    $0x4,%eax$/;"	l
c010df50	obj/kernel.asm	/^c010df50:	8b 00                	mov    (%eax),%eax$/;"	l
c010df52	obj/kernel.asm	/^c010df52:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010df55	obj/kernel.asm	/^c010df55:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010df58	obj/kernel.asm	/^c010df58:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010df5b	obj/kernel.asm	/^c010df5b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010df5e	obj/kernel.asm	/^c010df5e:	e8 9c bc ff ff       	call   c0109bff <sysfile_fstat>$/;"	l
c010df63	obj/kernel.asm	/^c010df63:	83 c4 10             	add    $0x10,%esp$/;"	l
c010df66	obj/kernel.asm	/^c010df66:	c9                   	leave  $/;"	l
c010df67	obj/kernel.asm	/^c010df67:	c3                   	ret    $/;"	l
c010df68	obj/kernel.asm	/^c010df68 <sys_fsync>:$/;"	l
c010df68	obj/kernel.asm	/^c010df68:	55                   	push   %ebp$/;"	l
c010df69	obj/kernel.asm	/^c010df69:	89 e5                	mov    %esp,%ebp$/;"	l
c010df6b	obj/kernel.asm	/^c010df6b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010df6e	obj/kernel.asm	/^c010df6e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010df71	obj/kernel.asm	/^c010df71:	8b 00                	mov    (%eax),%eax$/;"	l
c010df73	obj/kernel.asm	/^c010df73:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010df76	obj/kernel.asm	/^c010df76:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010df79	obj/kernel.asm	/^c010df79:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010df7c	obj/kernel.asm	/^c010df7c:	e8 f3 bc ff ff       	call   c0109c74 <sysfile_fsync>$/;"	l
c010df81	obj/kernel.asm	/^c010df81:	83 c4 10             	add    $0x10,%esp$/;"	l
c010df84	obj/kernel.asm	/^c010df84:	c9                   	leave  $/;"	l
c010df85	obj/kernel.asm	/^c010df85:	c3                   	ret    $/;"	l
c010df86	obj/kernel.asm	/^c010df86 <sys_getcwd>:$/;"	l
c010df86	obj/kernel.asm	/^c010df86:	55                   	push   %ebp$/;"	l
c010df87	obj/kernel.asm	/^c010df87:	89 e5                	mov    %esp,%ebp$/;"	l
c010df89	obj/kernel.asm	/^c010df89:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010df8c	obj/kernel.asm	/^c010df8c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010df8f	obj/kernel.asm	/^c010df8f:	8b 00                	mov    (%eax),%eax$/;"	l
c010df91	obj/kernel.asm	/^c010df91:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010df94	obj/kernel.asm	/^c010df94:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010df97	obj/kernel.asm	/^c010df97:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010df9a	obj/kernel.asm	/^c010df9a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010df9d	obj/kernel.asm	/^c010df9d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010dfa0	obj/kernel.asm	/^c010dfa0:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010dfa3	obj/kernel.asm	/^c010dfa3:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010dfa6	obj/kernel.asm	/^c010dfa6:	e8 93 be ff ff       	call   c0109e3e <sysfile_getcwd>$/;"	l
c010dfab	obj/kernel.asm	/^c010dfab:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dfae	obj/kernel.asm	/^c010dfae:	c9                   	leave  $/;"	l
c010dfaf	obj/kernel.asm	/^c010dfaf:	c3                   	ret    $/;"	l
c010dfb0	obj/kernel.asm	/^c010dfb0 <sys_getdirentry>:$/;"	l
c010dfb0	obj/kernel.asm	/^c010dfb0:	55                   	push   %ebp$/;"	l
c010dfb1	obj/kernel.asm	/^c010dfb1:	89 e5                	mov    %esp,%ebp$/;"	l
c010dfb3	obj/kernel.asm	/^c010dfb3:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010dfb6	obj/kernel.asm	/^c010dfb6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dfb9	obj/kernel.asm	/^c010dfb9:	8b 00                	mov    (%eax),%eax$/;"	l
c010dfbb	obj/kernel.asm	/^c010dfbb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dfbe	obj/kernel.asm	/^c010dfbe:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dfc1	obj/kernel.asm	/^c010dfc1:	83 c0 04             	add    $0x4,%eax$/;"	l
c010dfc4	obj/kernel.asm	/^c010dfc4:	8b 00                	mov    (%eax),%eax$/;"	l
c010dfc6	obj/kernel.asm	/^c010dfc6:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010dfc9	obj/kernel.asm	/^c010dfc9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010dfcc	obj/kernel.asm	/^c010dfcc:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010dfcf	obj/kernel.asm	/^c010dfcf:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010dfd2	obj/kernel.asm	/^c010dfd2:	e8 ed be ff ff       	call   c0109ec4 <sysfile_getdirentry>$/;"	l
c010dfd7	obj/kernel.asm	/^c010dfd7:	83 c4 10             	add    $0x10,%esp$/;"	l
c010dfda	obj/kernel.asm	/^c010dfda:	c9                   	leave  $/;"	l
c010dfdb	obj/kernel.asm	/^c010dfdb:	c3                   	ret    $/;"	l
c010dfdc	obj/kernel.asm	/^c010dfdc <sys_dup>:$/;"	l
c010dfdc	obj/kernel.asm	/^c010dfdc:	55                   	push   %ebp$/;"	l
c010dfdd	obj/kernel.asm	/^c010dfdd:	89 e5                	mov    %esp,%ebp$/;"	l
c010dfdf	obj/kernel.asm	/^c010dfdf:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010dfe2	obj/kernel.asm	/^c010dfe2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dfe5	obj/kernel.asm	/^c010dfe5:	8b 00                	mov    (%eax),%eax$/;"	l
c010dfe7	obj/kernel.asm	/^c010dfe7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010dfea	obj/kernel.asm	/^c010dfea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010dfed	obj/kernel.asm	/^c010dfed:	83 c0 04             	add    $0x4,%eax$/;"	l
c010dff0	obj/kernel.asm	/^c010dff0:	8b 00                	mov    (%eax),%eax$/;"	l
c010dff2	obj/kernel.asm	/^c010dff2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010dff5	obj/kernel.asm	/^c010dff5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010dff8	obj/kernel.asm	/^c010dff8:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010dffb	obj/kernel.asm	/^c010dffb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010dffe	obj/kernel.asm	/^c010dffe:	e8 ad bf ff ff       	call   c0109fb0 <sysfile_dup>$/;"	l
c010e003	obj/kernel.asm	/^c010e003:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e006	obj/kernel.asm	/^c010e006:	c9                   	leave  $/;"	l
c010e007	obj/kernel.asm	/^c010e007:	c3                   	ret    $/;"	l
c010e008	obj/kernel.asm	/^c010e008 <syscall>:$/;"	l
c010e008	obj/kernel.asm	/^c010e008:	55                   	push   %ebp$/;"	l
c010e009	obj/kernel.asm	/^c010e009:	89 e5                	mov    %esp,%ebp$/;"	l
c010e00b	obj/kernel.asm	/^c010e00b:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e00e	obj/kernel.asm	/^c010e00e:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010e013	obj/kernel.asm	/^c010e013:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010e016	obj/kernel.asm	/^c010e016:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e019	obj/kernel.asm	/^c010e019:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e01c	obj/kernel.asm	/^c010e01c:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010e01f	obj/kernel.asm	/^c010e01f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e022	obj/kernel.asm	/^c010e022:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010e026	obj/kernel.asm	/^c010e026:	78 64                	js     c010e08c <syscall+0x84>$/;"	l
c010e028	obj/kernel.asm	/^c010e028:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e02b	obj/kernel.asm	/^c010e02b:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c010e030	obj/kernel.asm	/^c010e030:	77 5a                	ja     c010e08c <syscall+0x84>$/;"	l
c010e032	obj/kernel.asm	/^c010e032:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e035	obj/kernel.asm	/^c010e035:	8b 04 85 40 db 14 c0 	mov    -0x3feb24c0(,%eax,4),%eax$/;"	l
c010e03c	obj/kernel.asm	/^c010e03c:	85 c0                	test   %eax,%eax$/;"	l
c010e03e	obj/kernel.asm	/^c010e03e:	74 4c                	je     c010e08c <syscall+0x84>$/;"	l
c010e040	obj/kernel.asm	/^c010e040:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e043	obj/kernel.asm	/^c010e043:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c010e046	obj/kernel.asm	/^c010e046:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010e049	obj/kernel.asm	/^c010e049:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e04c	obj/kernel.asm	/^c010e04c:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c010e04f	obj/kernel.asm	/^c010e04f:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010e052	obj/kernel.asm	/^c010e052:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e055	obj/kernel.asm	/^c010e055:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c010e058	obj/kernel.asm	/^c010e058:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010e05b	obj/kernel.asm	/^c010e05b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e05e	obj/kernel.asm	/^c010e05e:	8b 00                	mov    (%eax),%eax$/;"	l
c010e060	obj/kernel.asm	/^c010e060:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e063	obj/kernel.asm	/^c010e063:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e066	obj/kernel.asm	/^c010e066:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e069	obj/kernel.asm	/^c010e069:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e06c	obj/kernel.asm	/^c010e06c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e06f	obj/kernel.asm	/^c010e06f:	8b 04 85 40 db 14 c0 	mov    -0x3feb24c0(,%eax,4),%eax$/;"	l
c010e076	obj/kernel.asm	/^c010e076:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e079	obj/kernel.asm	/^c010e079:	8d 55 dc             	lea    -0x24(%ebp),%edx$/;"	l
c010e07c	obj/kernel.asm	/^c010e07c:	52                   	push   %edx$/;"	l
c010e07d	obj/kernel.asm	/^c010e07d:	ff d0                	call   *%eax$/;"	l
c010e07f	obj/kernel.asm	/^c010e07f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e082	obj/kernel.asm	/^c010e082:	89 c2                	mov    %eax,%edx$/;"	l
c010e084	obj/kernel.asm	/^c010e084:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e087	obj/kernel.asm	/^c010e087:	89 50 1c             	mov    %edx,0x1c(%eax)$/;"	l
c010e08a	obj/kernel.asm	/^c010e08a:	eb 3a                	jmp    c010e0c6 <syscall+0xbe>$/;"	l
c010e08c	obj/kernel.asm	/^c010e08c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e08f	obj/kernel.asm	/^c010e08f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010e092	obj/kernel.asm	/^c010e092:	e8 99 43 ff ff       	call   c0102430 <print_trapframe>$/;"	l
c010e097	obj/kernel.asm	/^c010e097:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e09a	obj/kernel.asm	/^c010e09a:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010e09f	obj/kernel.asm	/^c010e09f:	8d 50 48             	lea    0x48(%eax),%edx$/;"	l
c010e0a2	obj/kernel.asm	/^c010e0a2:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010e0a7	obj/kernel.asm	/^c010e0a7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e0aa	obj/kernel.asm	/^c010e0aa:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e0ad	obj/kernel.asm	/^c010e0ad:	52                   	push   %edx$/;"	l
c010e0ae	obj/kernel.asm	/^c010e0ae:	50                   	push   %eax$/;"	l
c010e0af	obj/kernel.asm	/^c010e0af:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010e0b2	obj/kernel.asm	/^c010e0b2:	68 e8 6f 11 c0       	push   $0xc0116fe8$/;"	l
c010e0b7	obj/kernel.asm	/^c010e0b7:	68 cd 00 00 00       	push   $0xcd$/;"	l
c010e0bc	obj/kernel.asm	/^c010e0bc:	68 14 70 11 c0       	push   $0xc0117014$/;"	l
c010e0c1	obj/kernel.asm	/^c010e0c1:	e8 09 24 ff ff       	call   c01004cf <__panic>$/;"	l
c010e0c6	obj/kernel.asm	/^c010e0c6:	c9                   	leave  $/;"	l
c010e0c7	obj/kernel.asm	/^c010e0c7:	c3                   	ret    $/;"	l
c010e0c8	obj/kernel.asm	/^c010e0c8 <page2ppn>:$/;"	l
c010e0c8	obj/kernel.asm	/^c010e0c8:	55                   	push   %ebp$/;"	l
c010e0c9	obj/kernel.asm	/^c010e0c9:	89 e5                	mov    %esp,%ebp$/;"	l
c010e0cb	obj/kernel.asm	/^c010e0cb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e0ce	obj/kernel.asm	/^c010e0ce:	8b 15 ac 21 15 c0    	mov    0xc01521ac,%edx$/;"	l
c010e0d4	obj/kernel.asm	/^c010e0d4:	29 d0                	sub    %edx,%eax$/;"	l
c010e0d6	obj/kernel.asm	/^c010e0d6:	c1 f8 02             	sar    $0x2,%eax$/;"	l
c010e0d9	obj/kernel.asm	/^c010e0d9:	69 c0 39 8e e3 38    	imul   $0x38e38e39,%eax,%eax$/;"	l
c010e0df	obj/kernel.asm	/^c010e0df:	5d                   	pop    %ebp$/;"	l
c010e0e0	obj/kernel.asm	/^c010e0e0:	c3                   	ret    $/;"	l
c010e0e1	obj/kernel.asm	/^c010e0e1 <page2pa>:$/;"	l
c010e0e1	obj/kernel.asm	/^c010e0e1:	55                   	push   %ebp$/;"	l
c010e0e2	obj/kernel.asm	/^c010e0e2:	89 e5                	mov    %esp,%ebp$/;"	l
c010e0e4	obj/kernel.asm	/^c010e0e4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e0e7	obj/kernel.asm	/^c010e0e7:	e8 dc ff ff ff       	call   c010e0c8 <page2ppn>$/;"	l
c010e0ec	obj/kernel.asm	/^c010e0ec:	83 c4 04             	add    $0x4,%esp$/;"	l
c010e0ef	obj/kernel.asm	/^c010e0ef:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c010e0f2	obj/kernel.asm	/^c010e0f2:	c9                   	leave  $/;"	l
c010e0f3	obj/kernel.asm	/^c010e0f3:	c3                   	ret    $/;"	l
c010e0f4	obj/kernel.asm	/^c010e0f4 <page2kva>:$/;"	l
c010e0f4	obj/kernel.asm	/^c010e0f4:	55                   	push   %ebp$/;"	l
c010e0f5	obj/kernel.asm	/^c010e0f5:	89 e5                	mov    %esp,%ebp$/;"	l
c010e0f7	obj/kernel.asm	/^c010e0f7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e0fa	obj/kernel.asm	/^c010e0fa:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e0fd	obj/kernel.asm	/^c010e0fd:	e8 df ff ff ff       	call   c010e0e1 <page2pa>$/;"	l
c010e102	obj/kernel.asm	/^c010e102:	83 c4 04             	add    $0x4,%esp$/;"	l
c010e105	obj/kernel.asm	/^c010e105:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e108	obj/kernel.asm	/^c010e108:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e10b	obj/kernel.asm	/^c010e10b:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010e10e	obj/kernel.asm	/^c010e10e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e111	obj/kernel.asm	/^c010e111:	a1 c0 ef 14 c0       	mov    0xc014efc0,%eax$/;"	l
c010e116	obj/kernel.asm	/^c010e116:	39 45 f0             	cmp    %eax,-0x10(%ebp)$/;"	l
c010e119	obj/kernel.asm	/^c010e119:	72 14                	jb     c010e12f <page2kva+0x3b>$/;"	l
c010e11b	obj/kernel.asm	/^c010e11b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010e11e	obj/kernel.asm	/^c010e11e:	68 2c 70 11 c0       	push   $0xc011702c$/;"	l
c010e123	obj/kernel.asm	/^c010e123:	6a 65                	push   $0x65$/;"	l
c010e125	obj/kernel.asm	/^c010e125:	68 4f 70 11 c0       	push   $0xc011704f$/;"	l
c010e12a	obj/kernel.asm	/^c010e12a:	e8 a0 23 ff ff       	call   c01004cf <__panic>$/;"	l
c010e12f	obj/kernel.asm	/^c010e12f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e132	obj/kernel.asm	/^c010e132:	2d 00 00 00 40       	sub    $0x40000000,%eax$/;"	l
c010e137	obj/kernel.asm	/^c010e137:	c9                   	leave  $/;"	l
c010e138	obj/kernel.asm	/^c010e138:	c3                   	ret    $/;"	l
c010e139	obj/kernel.asm	/^c010e139 <swapfs_init>:$/;"	l
c010e139	obj/kernel.asm	/^c010e139:	55                   	push   %ebp$/;"	l
c010e13a	obj/kernel.asm	/^c010e13a:	89 e5                	mov    %esp,%ebp$/;"	l
c010e13c	obj/kernel.asm	/^c010e13c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e13f	obj/kernel.asm	/^c010e13f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e142	obj/kernel.asm	/^c010e142:	6a 01                	push   $0x1$/;"	l
c010e144	obj/kernel.asm	/^c010e144:	e8 3e 31 ff ff       	call   c0101287 <ide_device_valid>$/;"	l
c010e149	obj/kernel.asm	/^c010e149:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e14c	obj/kernel.asm	/^c010e14c:	85 c0                	test   %eax,%eax$/;"	l
c010e14e	obj/kernel.asm	/^c010e14e:	75 14                	jne    c010e164 <swapfs_init+0x2b>$/;"	l
c010e150	obj/kernel.asm	/^c010e150:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010e153	obj/kernel.asm	/^c010e153:	68 5d 70 11 c0       	push   $0xc011705d$/;"	l
c010e158	obj/kernel.asm	/^c010e158:	6a 0d                	push   $0xd$/;"	l
c010e15a	obj/kernel.asm	/^c010e15a:	68 77 70 11 c0       	push   $0xc0117077$/;"	l
c010e15f	obj/kernel.asm	/^c010e15f:	e8 6b 23 ff ff       	call   c01004cf <__panic>$/;"	l
c010e164	obj/kernel.asm	/^c010e164:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e167	obj/kernel.asm	/^c010e167:	6a 01                	push   $0x1$/;"	l
c010e169	obj/kernel.asm	/^c010e169:	e8 59 31 ff ff       	call   c01012c7 <ide_device_size>$/;"	l
c010e16e	obj/kernel.asm	/^c010e16e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e171	obj/kernel.asm	/^c010e171:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c010e174	obj/kernel.asm	/^c010e174:	a3 5c 22 15 c0       	mov    %eax,0xc015225c$/;"	l
c010e179	obj/kernel.asm	/^c010e179:	c9                   	leave  $/;"	l
c010e17a	obj/kernel.asm	/^c010e17a:	c3                   	ret    $/;"	l
c010e17b	obj/kernel.asm	/^c010e17b <swapfs_read>:$/;"	l
c010e17b	obj/kernel.asm	/^c010e17b:	55                   	push   %ebp$/;"	l
c010e17c	obj/kernel.asm	/^c010e17c:	89 e5                	mov    %esp,%ebp$/;"	l
c010e17e	obj/kernel.asm	/^c010e17e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e181	obj/kernel.asm	/^c010e181:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e184	obj/kernel.asm	/^c010e184:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010e187	obj/kernel.asm	/^c010e187:	e8 68 ff ff ff       	call   c010e0f4 <page2kva>$/;"	l
c010e18c	obj/kernel.asm	/^c010e18c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e18f	obj/kernel.asm	/^c010e18f:	89 c2                	mov    %eax,%edx$/;"	l
c010e191	obj/kernel.asm	/^c010e191:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e194	obj/kernel.asm	/^c010e194:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c010e197	obj/kernel.asm	/^c010e197:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e19a	obj/kernel.asm	/^c010e19a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e19e	obj/kernel.asm	/^c010e19e:	74 0a                	je     c010e1aa <swapfs_read+0x2f>$/;"	l
c010e1a0	obj/kernel.asm	/^c010e1a0:	a1 5c 22 15 c0       	mov    0xc015225c,%eax$/;"	l
c010e1a5	obj/kernel.asm	/^c010e1a5:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010e1a8	obj/kernel.asm	/^c010e1a8:	72 14                	jb     c010e1be <swapfs_read+0x43>$/;"	l
c010e1aa	obj/kernel.asm	/^c010e1aa:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e1ad	obj/kernel.asm	/^c010e1ad:	68 8d 70 11 c0       	push   $0xc011708d$/;"	l
c010e1b2	obj/kernel.asm	/^c010e1b2:	6a 14                	push   $0x14$/;"	l
c010e1b4	obj/kernel.asm	/^c010e1b4:	68 77 70 11 c0       	push   $0xc0117077$/;"	l
c010e1b9	obj/kernel.asm	/^c010e1b9:	e8 11 23 ff ff       	call   c01004cf <__panic>$/;"	l
c010e1be	obj/kernel.asm	/^c010e1be:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e1c1	obj/kernel.asm	/^c010e1c1:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010e1c4	obj/kernel.asm	/^c010e1c4:	6a 08                	push   $0x8$/;"	l
c010e1c6	obj/kernel.asm	/^c010e1c6:	52                   	push   %edx$/;"	l
c010e1c7	obj/kernel.asm	/^c010e1c7:	50                   	push   %eax$/;"	l
c010e1c8	obj/kernel.asm	/^c010e1c8:	6a 01                	push   $0x1$/;"	l
c010e1ca	obj/kernel.asm	/^c010e1ca:	e8 39 31 ff ff       	call   c0101308 <ide_read_secs>$/;"	l
c010e1cf	obj/kernel.asm	/^c010e1cf:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e1d2	obj/kernel.asm	/^c010e1d2:	c9                   	leave  $/;"	l
c010e1d3	obj/kernel.asm	/^c010e1d3:	c3                   	ret    $/;"	l
c010e1d4	obj/kernel.asm	/^c010e1d4 <swapfs_write>:$/;"	l
c010e1d4	obj/kernel.asm	/^c010e1d4:	55                   	push   %ebp$/;"	l
c010e1d5	obj/kernel.asm	/^c010e1d5:	89 e5                	mov    %esp,%ebp$/;"	l
c010e1d7	obj/kernel.asm	/^c010e1d7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e1da	obj/kernel.asm	/^c010e1da:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e1dd	obj/kernel.asm	/^c010e1dd:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010e1e0	obj/kernel.asm	/^c010e1e0:	e8 0f ff ff ff       	call   c010e0f4 <page2kva>$/;"	l
c010e1e5	obj/kernel.asm	/^c010e1e5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e1e8	obj/kernel.asm	/^c010e1e8:	89 c2                	mov    %eax,%edx$/;"	l
c010e1ea	obj/kernel.asm	/^c010e1ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010e1ed	obj/kernel.asm	/^c010e1ed:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c010e1f0	obj/kernel.asm	/^c010e1f0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e1f3	obj/kernel.asm	/^c010e1f3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e1f7	obj/kernel.asm	/^c010e1f7:	74 0a                	je     c010e203 <swapfs_write+0x2f>$/;"	l
c010e1f9	obj/kernel.asm	/^c010e1f9:	a1 5c 22 15 c0       	mov    0xc015225c,%eax$/;"	l
c010e1fe	obj/kernel.asm	/^c010e1fe:	39 45 f4             	cmp    %eax,-0xc(%ebp)$/;"	l
c010e201	obj/kernel.asm	/^c010e201:	72 14                	jb     c010e217 <swapfs_write+0x43>$/;"	l
c010e203	obj/kernel.asm	/^c010e203:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e206	obj/kernel.asm	/^c010e206:	68 8d 70 11 c0       	push   $0xc011708d$/;"	l
c010e20b	obj/kernel.asm	/^c010e20b:	6a 19                	push   $0x19$/;"	l
c010e20d	obj/kernel.asm	/^c010e20d:	68 77 70 11 c0       	push   $0xc0117077$/;"	l
c010e212	obj/kernel.asm	/^c010e212:	e8 b8 22 ff ff       	call   c01004cf <__panic>$/;"	l
c010e217	obj/kernel.asm	/^c010e217:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e21a	obj/kernel.asm	/^c010e21a:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010e21d	obj/kernel.asm	/^c010e21d:	6a 08                	push   $0x8$/;"	l
c010e21f	obj/kernel.asm	/^c010e21f:	52                   	push   %edx$/;"	l
c010e220	obj/kernel.asm	/^c010e220:	50                   	push   %eax$/;"	l
c010e221	obj/kernel.asm	/^c010e221:	6a 01                	push   $0x1$/;"	l
c010e223	obj/kernel.asm	/^c010e223:	e8 09 33 ff ff       	call   c0101531 <ide_write_secs>$/;"	l
c010e228	obj/kernel.asm	/^c010e228:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e22b	obj/kernel.asm	/^c010e22b:	c9                   	leave  $/;"	l
c010e22c	obj/kernel.asm	/^c010e22c:	c3                   	ret    $/;"	l
c010e22d	obj/kernel.asm	/^c010e22d <lock_vdev_list>:$/;"	l
c010e22d	obj/kernel.asm	/^c010e22d:	55                   	push   %ebp$/;"	l
c010e22e	obj/kernel.asm	/^c010e22e:	89 e5                	mov    %esp,%ebp$/;"	l
c010e230	obj/kernel.asm	/^c010e230:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e233	obj/kernel.asm	/^c010e233:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e236	obj/kernel.asm	/^c010e236:	68 40 11 15 c0       	push   $0xc0151140$/;"	l
c010e23b	obj/kernel.asm	/^c010e23b:	e8 c3 b2 ff ff       	call   c0109503 <down>$/;"	l
c010e240	obj/kernel.asm	/^c010e240:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e243	obj/kernel.asm	/^c010e243:	c9                   	leave  $/;"	l
c010e244	obj/kernel.asm	/^c010e244:	c3                   	ret    $/;"	l
c010e245	obj/kernel.asm	/^c010e245 <unlock_vdev_list>:$/;"	l
c010e245	obj/kernel.asm	/^c010e245:	55                   	push   %ebp$/;"	l
c010e246	obj/kernel.asm	/^c010e246:	89 e5                	mov    %esp,%ebp$/;"	l
c010e248	obj/kernel.asm	/^c010e248:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e24b	obj/kernel.asm	/^c010e24b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e24e	obj/kernel.asm	/^c010e24e:	68 40 11 15 c0       	push   $0xc0151140$/;"	l
c010e253	obj/kernel.asm	/^c010e253:	e8 90 b2 ff ff       	call   c01094e8 <up>$/;"	l
c010e258	obj/kernel.asm	/^c010e258:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e25b	obj/kernel.asm	/^c010e25b:	c9                   	leave  $/;"	l
c010e25c	obj/kernel.asm	/^c010e25c:	c3                   	ret    $/;"	l
c010e25d	obj/kernel.asm	/^c010e25d <vfs_devlist_init>:$/;"	l
c010e25d	obj/kernel.asm	/^c010e25d:	55                   	push   %ebp$/;"	l
c010e25e	obj/kernel.asm	/^c010e25e:	89 e5                	mov    %esp,%ebp$/;"	l
c010e260	obj/kernel.asm	/^c010e260:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e263	obj/kernel.asm	/^c010e263:	c7 45 f4 38 11 15 c0 	movl   $0xc0151138,-0xc(%ebp)$/;"	l
c010e26a	obj/kernel.asm	/^c010e26a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e26d	obj/kernel.asm	/^c010e26d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010e270	obj/kernel.asm	/^c010e270:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e273	obj/kernel.asm	/^c010e273:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e276	obj/kernel.asm	/^c010e276:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c010e279	obj/kernel.asm	/^c010e279:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e27c	obj/kernel.asm	/^c010e27c:	89 10                	mov    %edx,(%eax)$/;"	l
c010e27e	obj/kernel.asm	/^c010e27e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e281	obj/kernel.asm	/^c010e281:	6a 01                	push   $0x1$/;"	l
c010e283	obj/kernel.asm	/^c010e283:	68 40 11 15 c0       	push   $0xc0151140$/;"	l
c010e288	obj/kernel.asm	/^c010e288:	e8 f0 b0 ff ff       	call   c010937d <sem_init>$/;"	l
c010e28d	obj/kernel.asm	/^c010e28d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e290	obj/kernel.asm	/^c010e290:	c9                   	leave  $/;"	l
c010e291	obj/kernel.asm	/^c010e291:	c3                   	ret    $/;"	l
c010e292	obj/kernel.asm	/^c010e292 <vfs_cleanup>:$/;"	l
c010e292	obj/kernel.asm	/^c010e292:	55                   	push   %ebp$/;"	l
c010e293	obj/kernel.asm	/^c010e293:	89 e5                	mov    %esp,%ebp$/;"	l
c010e295	obj/kernel.asm	/^c010e295:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e298	obj/kernel.asm	/^c010e298:	c7 45 e8 38 11 15 c0 	movl   $0xc0151138,-0x18(%ebp)$/;"	l
c010e29f	obj/kernel.asm	/^c010e29f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e2a2	obj/kernel.asm	/^c010e2a2:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e2a5	obj/kernel.asm	/^c010e2a5:	39 45 e8             	cmp    %eax,-0x18(%ebp)$/;"	l
c010e2a8	obj/kernel.asm	/^c010e2a8:	0f 94 c0             	sete   %al$/;"	l
c010e2ab	obj/kernel.asm	/^c010e2ab:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010e2ae	obj/kernel.asm	/^c010e2ae:	85 c0                	test   %eax,%eax$/;"	l
c010e2b0	obj/kernel.asm	/^c010e2b0:	75 5b                	jne    c010e30d <vfs_cleanup+0x7b>$/;"	l
c010e2b2	obj/kernel.asm	/^c010e2b2:	e8 76 ff ff ff       	call   c010e22d <lock_vdev_list>$/;"	l
c010e2b7	obj/kernel.asm	/^c010e2b7:	c7 45 f0 38 11 15 c0 	movl   $0xc0151138,-0x10(%ebp)$/;"	l
c010e2be	obj/kernel.asm	/^c010e2be:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e2c1	obj/kernel.asm	/^c010e2c1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e2c4	obj/kernel.asm	/^c010e2c4:	eb 2b                	jmp    c010e2f1 <vfs_cleanup+0x5f>$/;"	l
c010e2c6	obj/kernel.asm	/^c010e2c6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e2c9	obj/kernel.asm	/^c010e2c9:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010e2cc	obj/kernel.asm	/^c010e2cc:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e2cf	obj/kernel.asm	/^c010e2cf:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e2d2	obj/kernel.asm	/^c010e2d2:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e2d5	obj/kernel.asm	/^c010e2d5:	85 c0                	test   %eax,%eax$/;"	l
c010e2d7	obj/kernel.asm	/^c010e2d7:	74 18                	je     c010e2f1 <vfs_cleanup+0x5f>$/;"	l
c010e2d9	obj/kernel.asm	/^c010e2d9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e2dc	obj/kernel.asm	/^c010e2dc:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e2df	obj/kernel.asm	/^c010e2df:	8b 40 7c             	mov    0x7c(%eax),%eax$/;"	l
c010e2e2	obj/kernel.asm	/^c010e2e2:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010e2e5	obj/kernel.asm	/^c010e2e5:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010e2e8	obj/kernel.asm	/^c010e2e8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e2eb	obj/kernel.asm	/^c010e2eb:	52                   	push   %edx$/;"	l
c010e2ec	obj/kernel.asm	/^c010e2ec:	ff d0                	call   *%eax$/;"	l
c010e2ee	obj/kernel.asm	/^c010e2ee:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e2f1	obj/kernel.asm	/^c010e2f1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e2f4	obj/kernel.asm	/^c010e2f4:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010e2f7	obj/kernel.asm	/^c010e2f7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e2fa	obj/kernel.asm	/^c010e2fa:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e2fd	obj/kernel.asm	/^c010e2fd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e300	obj/kernel.asm	/^c010e300:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e303	obj/kernel.asm	/^c010e303:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010e306	obj/kernel.asm	/^c010e306:	75 be                	jne    c010e2c6 <vfs_cleanup+0x34>$/;"	l
c010e308	obj/kernel.asm	/^c010e308:	e8 38 ff ff ff       	call   c010e245 <unlock_vdev_list>$/;"	l
c010e30d	obj/kernel.asm	/^c010e30d:	c9                   	leave  $/;"	l
c010e30e	obj/kernel.asm	/^c010e30e:	c3                   	ret    $/;"	l
c010e30f	obj/kernel.asm	/^c010e30f <vfs_get_root>:$/;"	l
c010e30f	obj/kernel.asm	/^c010e30f:	55                   	push   %ebp$/;"	l
c010e310	obj/kernel.asm	/^c010e310:	89 e5                	mov    %esp,%ebp$/;"	l
c010e312	obj/kernel.asm	/^c010e312:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e315	obj/kernel.asm	/^c010e315:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010e319	obj/kernel.asm	/^c010e319:	75 16                	jne    c010e331 <vfs_get_root+0x22>$/;"	l
c010e31b	obj/kernel.asm	/^c010e31b:	68 ac 70 11 c0       	push   $0xc01170ac$/;"	l
c010e320	obj/kernel.asm	/^c010e320:	68 bc 70 11 c0       	push   $0xc01170bc$/;"	l
c010e325	obj/kernel.asm	/^c010e325:	6a 45                	push   $0x45$/;"	l
c010e327	obj/kernel.asm	/^c010e327:	68 d1 70 11 c0       	push   $0xc01170d1$/;"	l
c010e32c	obj/kernel.asm	/^c010e32c:	e8 9e 21 ff ff       	call   c01004cf <__panic>$/;"	l
c010e331	obj/kernel.asm	/^c010e331:	c7 45 f4 f3 ff ff ff 	movl   $0xfffffff3,-0xc(%ebp)$/;"	l
c010e338	obj/kernel.asm	/^c010e338:	c7 45 e0 38 11 15 c0 	movl   $0xc0151138,-0x20(%ebp)$/;"	l
c010e33f	obj/kernel.asm	/^c010e33f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010e342	obj/kernel.asm	/^c010e342:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e345	obj/kernel.asm	/^c010e345:	39 45 e0             	cmp    %eax,-0x20(%ebp)$/;"	l
c010e348	obj/kernel.asm	/^c010e348:	0f 94 c0             	sete   %al$/;"	l
c010e34b	obj/kernel.asm	/^c010e34b:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010e34e	obj/kernel.asm	/^c010e34e:	85 c0                	test   %eax,%eax$/;"	l
c010e350	obj/kernel.asm	/^c010e350:	0f 85 cb 00 00 00    	jne    c010e421 <vfs_get_root+0x112>$/;"	l
c010e356	obj/kernel.asm	/^c010e356:	e8 d2 fe ff ff       	call   c010e22d <lock_vdev_list>$/;"	l
c010e35b	obj/kernel.asm	/^c010e35b:	c7 45 e8 38 11 15 c0 	movl   $0xc0151138,-0x18(%ebp)$/;"	l
c010e362	obj/kernel.asm	/^c010e362:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e365	obj/kernel.asm	/^c010e365:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e368	obj/kernel.asm	/^c010e368:	e9 94 00 00 00       	jmp    c010e401 <vfs_get_root+0xf2>$/;"	l
c010e36d	obj/kernel.asm	/^c010e36d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e370	obj/kernel.asm	/^c010e370:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010e373	obj/kernel.asm	/^c010e373:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010e376	obj/kernel.asm	/^c010e376:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e379	obj/kernel.asm	/^c010e379:	8b 00                	mov    (%eax),%eax$/;"	l
c010e37b	obj/kernel.asm	/^c010e37b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e37e	obj/kernel.asm	/^c010e37e:	50                   	push   %eax$/;"	l
c010e37f	obj/kernel.asm	/^c010e37f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e382	obj/kernel.asm	/^c010e382:	e8 a9 51 00 00       	call   c0113530 <strcmp>$/;"	l
c010e387	obj/kernel.asm	/^c010e387:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e38a	obj/kernel.asm	/^c010e38a:	85 c0                	test   %eax,%eax$/;"	l
c010e38c	obj/kernel.asm	/^c010e38c:	75 73                	jne    c010e401 <vfs_get_root+0xf2>$/;"	l
c010e38e	obj/kernel.asm	/^c010e38e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010e395	obj/kernel.asm	/^c010e395:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e398	obj/kernel.asm	/^c010e398:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e39b	obj/kernel.asm	/^c010e39b:	85 c0                	test   %eax,%eax$/;"	l
c010e39d	obj/kernel.asm	/^c010e39d:	74 1d                	je     c010e3bc <vfs_get_root+0xad>$/;"	l
c010e39f	obj/kernel.asm	/^c010e39f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e3a2	obj/kernel.asm	/^c010e3a2:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e3a5	obj/kernel.asm	/^c010e3a5:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c010e3a8	obj/kernel.asm	/^c010e3a8:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010e3ab	obj/kernel.asm	/^c010e3ab:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010e3ae	obj/kernel.asm	/^c010e3ae:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e3b1	obj/kernel.asm	/^c010e3b1:	52                   	push   %edx$/;"	l
c010e3b2	obj/kernel.asm	/^c010e3b2:	ff d0                	call   *%eax$/;"	l
c010e3b4	obj/kernel.asm	/^c010e3b4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e3b7	obj/kernel.asm	/^c010e3b7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e3ba	obj/kernel.asm	/^c010e3ba:	eb 25                	jmp    c010e3e1 <vfs_get_root+0xd2>$/;"	l
c010e3bc	obj/kernel.asm	/^c010e3bc:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e3bf	obj/kernel.asm	/^c010e3bf:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e3c2	obj/kernel.asm	/^c010e3c2:	85 c0                	test   %eax,%eax$/;"	l
c010e3c4	obj/kernel.asm	/^c010e3c4:	75 1b                	jne    c010e3e1 <vfs_get_root+0xd2>$/;"	l
c010e3c6	obj/kernel.asm	/^c010e3c6:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e3c9	obj/kernel.asm	/^c010e3c9:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e3cc	obj/kernel.asm	/^c010e3cc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e3cf	obj/kernel.asm	/^c010e3cf:	50                   	push   %eax$/;"	l
c010e3d0	obj/kernel.asm	/^c010e3d0:	e8 f0 0c 00 00       	call   c010f0c5 <inode_ref_inc>$/;"	l
c010e3d5	obj/kernel.asm	/^c010e3d5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e3d8	obj/kernel.asm	/^c010e3d8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e3db	obj/kernel.asm	/^c010e3db:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e3de	obj/kernel.asm	/^c010e3de:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e3e1	obj/kernel.asm	/^c010e3e1:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010e3e5	obj/kernel.asm	/^c010e3e5:	74 11                	je     c010e3f8 <vfs_get_root+0xe9>$/;"	l
c010e3e7	obj/kernel.asm	/^c010e3e7:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010e3ee	obj/kernel.asm	/^c010e3ee:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e3f1	obj/kernel.asm	/^c010e3f1:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010e3f4	obj/kernel.asm	/^c010e3f4:	89 10                	mov    %edx,(%eax)$/;"	l
c010e3f6	obj/kernel.asm	/^c010e3f6:	eb 24                	jmp    c010e41c <vfs_get_root+0x10d>$/;"	l
c010e3f8	obj/kernel.asm	/^c010e3f8:	c7 45 f4 f2 ff ff ff 	movl   $0xfffffff2,-0xc(%ebp)$/;"	l
c010e3ff	obj/kernel.asm	/^c010e3ff:	eb 1b                	jmp    c010e41c <vfs_get_root+0x10d>$/;"	l
c010e401	obj/kernel.asm	/^c010e401:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e404	obj/kernel.asm	/^c010e404:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010e407	obj/kernel.asm	/^c010e407:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010e40a	obj/kernel.asm	/^c010e40a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e40d	obj/kernel.asm	/^c010e40d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e410	obj/kernel.asm	/^c010e410:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e413	obj/kernel.asm	/^c010e413:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c010e416	obj/kernel.asm	/^c010e416:	0f 85 51 ff ff ff    	jne    c010e36d <vfs_get_root+0x5e>$/;"	l
c010e41c	obj/kernel.asm	/^c010e41c:	e8 24 fe ff ff       	call   c010e245 <unlock_vdev_list>$/;"	l
c010e421	obj/kernel.asm	/^c010e421:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e424	obj/kernel.asm	/^c010e424:	c9                   	leave  $/;"	l
c010e425	obj/kernel.asm	/^c010e425:	c3                   	ret    $/;"	l
c010e426	obj/kernel.asm	/^c010e426 <vfs_get_devname>:$/;"	l
c010e426	obj/kernel.asm	/^c010e426:	55                   	push   %ebp$/;"	l
c010e427	obj/kernel.asm	/^c010e427:	89 e5                	mov    %esp,%ebp$/;"	l
c010e429	obj/kernel.asm	/^c010e429:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e42c	obj/kernel.asm	/^c010e42c:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010e430	obj/kernel.asm	/^c010e430:	75 16                	jne    c010e448 <vfs_get_devname+0x22>$/;"	l
c010e432	obj/kernel.asm	/^c010e432:	68 e6 70 11 c0       	push   $0xc01170e6$/;"	l
c010e437	obj/kernel.asm	/^c010e437:	68 bc 70 11 c0       	push   $0xc01170bc$/;"	l
c010e43c	obj/kernel.asm	/^c010e43c:	6a 6a                	push   $0x6a$/;"	l
c010e43e	obj/kernel.asm	/^c010e43e:	68 d1 70 11 c0       	push   $0xc01170d1$/;"	l
c010e443	obj/kernel.asm	/^c010e443:	e8 87 20 ff ff       	call   c01004cf <__panic>$/;"	l
c010e448	obj/kernel.asm	/^c010e448:	c7 45 f0 38 11 15 c0 	movl   $0xc0151138,-0x10(%ebp)$/;"	l
c010e44f	obj/kernel.asm	/^c010e44f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e452	obj/kernel.asm	/^c010e452:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e455	obj/kernel.asm	/^c010e455:	eb 1b                	jmp    c010e472 <vfs_get_devname+0x4c>$/;"	l
c010e457	obj/kernel.asm	/^c010e457:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e45a	obj/kernel.asm	/^c010e45a:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010e45d	obj/kernel.asm	/^c010e45d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e460	obj/kernel.asm	/^c010e460:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e463	obj/kernel.asm	/^c010e463:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e466	obj/kernel.asm	/^c010e466:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010e469	obj/kernel.asm	/^c010e469:	75 07                	jne    c010e472 <vfs_get_devname+0x4c>$/;"	l
c010e46b	obj/kernel.asm	/^c010e46b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e46e	obj/kernel.asm	/^c010e46e:	8b 00                	mov    (%eax),%eax$/;"	l
c010e470	obj/kernel.asm	/^c010e470:	eb 1c                	jmp    c010e48e <vfs_get_devname+0x68>$/;"	l
c010e472	obj/kernel.asm	/^c010e472:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e475	obj/kernel.asm	/^c010e475:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e478	obj/kernel.asm	/^c010e478:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e47b	obj/kernel.asm	/^c010e47b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e47e	obj/kernel.asm	/^c010e47e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e481	obj/kernel.asm	/^c010e481:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e484	obj/kernel.asm	/^c010e484:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010e487	obj/kernel.asm	/^c010e487:	75 ce                	jne    c010e457 <vfs_get_devname+0x31>$/;"	l
c010e489	obj/kernel.asm	/^c010e489:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e48e	obj/kernel.asm	/^c010e48e:	c9                   	leave  $/;"	l
c010e48f	obj/kernel.asm	/^c010e48f:	c3                   	ret    $/;"	l
c010e490	obj/kernel.asm	/^c010e490 <check_devname_conflict>:$/;"	l
c010e490	obj/kernel.asm	/^c010e490:	55                   	push   %ebp$/;"	l
c010e491	obj/kernel.asm	/^c010e491:	89 e5                	mov    %esp,%ebp$/;"	l
c010e493	obj/kernel.asm	/^c010e493:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e496	obj/kernel.asm	/^c010e496:	c7 45 f0 38 11 15 c0 	movl   $0xc0151138,-0x10(%ebp)$/;"	l
c010e49d	obj/kernel.asm	/^c010e49d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e4a0	obj/kernel.asm	/^c010e4a0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e4a3	obj/kernel.asm	/^c010e4a3:	eb 28                	jmp    c010e4cd <check_devname_conflict+0x3d>$/;"	l
c010e4a5	obj/kernel.asm	/^c010e4a5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e4a8	obj/kernel.asm	/^c010e4a8:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010e4ab	obj/kernel.asm	/^c010e4ab:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e4ae	obj/kernel.asm	/^c010e4ae:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e4b1	obj/kernel.asm	/^c010e4b1:	8b 00                	mov    (%eax),%eax$/;"	l
c010e4b3	obj/kernel.asm	/^c010e4b3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e4b6	obj/kernel.asm	/^c010e4b6:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e4b9	obj/kernel.asm	/^c010e4b9:	50                   	push   %eax$/;"	l
c010e4ba	obj/kernel.asm	/^c010e4ba:	e8 71 50 00 00       	call   c0113530 <strcmp>$/;"	l
c010e4bf	obj/kernel.asm	/^c010e4bf:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e4c2	obj/kernel.asm	/^c010e4c2:	85 c0                	test   %eax,%eax$/;"	l
c010e4c4	obj/kernel.asm	/^c010e4c4:	75 07                	jne    c010e4cd <check_devname_conflict+0x3d>$/;"	l
c010e4c6	obj/kernel.asm	/^c010e4c6:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e4cb	obj/kernel.asm	/^c010e4cb:	eb 1c                	jmp    c010e4e9 <check_devname_conflict+0x59>$/;"	l
c010e4cd	obj/kernel.asm	/^c010e4cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e4d0	obj/kernel.asm	/^c010e4d0:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e4d3	obj/kernel.asm	/^c010e4d3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e4d6	obj/kernel.asm	/^c010e4d6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e4d9	obj/kernel.asm	/^c010e4d9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e4dc	obj/kernel.asm	/^c010e4dc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e4df	obj/kernel.asm	/^c010e4df:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010e4e2	obj/kernel.asm	/^c010e4e2:	75 c1                	jne    c010e4a5 <check_devname_conflict+0x15>$/;"	l
c010e4e4	obj/kernel.asm	/^c010e4e4:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010e4e9	obj/kernel.asm	/^c010e4e9:	c9                   	leave  $/;"	l
c010e4ea	obj/kernel.asm	/^c010e4ea:	c3                   	ret    $/;"	l
c010e4eb	obj/kernel.asm	/^c010e4eb <vfs_do_add>:$/;"	l
c010e4eb	obj/kernel.asm	/^c010e4eb:	55                   	push   %ebp$/;"	l
c010e4ec	obj/kernel.asm	/^c010e4ec:	89 e5                	mov    %esp,%ebp$/;"	l
c010e4ee	obj/kernel.asm	/^c010e4ee:	83 ec 38             	sub    $0x38,%esp$/;"	l
c010e4f1	obj/kernel.asm	/^c010e4f1:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010e4f5	obj/kernel.asm	/^c010e4f5:	75 19                	jne    c010e510 <vfs_do_add+0x25>$/;"	l
c010e4f7	obj/kernel.asm	/^c010e4f7:	68 ac 70 11 c0       	push   $0xc01170ac$/;"	l
c010e4fc	obj/kernel.asm	/^c010e4fc:	68 bc 70 11 c0       	push   $0xc01170bc$/;"	l
c010e501	obj/kernel.asm	/^c010e501:	68 8e 00 00 00       	push   $0x8e$/;"	l
c010e506	obj/kernel.asm	/^c010e506:	68 d1 70 11 c0       	push   $0xc01170d1$/;"	l
c010e50b	obj/kernel.asm	/^c010e50b:	e8 bf 1f ff ff       	call   c01004cf <__panic>$/;"	l
c010e510	obj/kernel.asm	/^c010e510:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010e514	obj/kernel.asm	/^c010e514:	75 06                	jne    c010e51c <vfs_do_add+0x31>$/;"	l
c010e516	obj/kernel.asm	/^c010e516:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c010e51a	obj/kernel.asm	/^c010e51a:	74 2c                	je     c010e548 <vfs_do_add+0x5d>$/;"	l
c010e51c	obj/kernel.asm	/^c010e51c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010e520	obj/kernel.asm	/^c010e520:	74 0d                	je     c010e52f <vfs_do_add+0x44>$/;"	l
c010e522	obj/kernel.asm	/^c010e522:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e525	obj/kernel.asm	/^c010e525:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010e528	obj/kernel.asm	/^c010e528:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010e52d	obj/kernel.asm	/^c010e52d:	74 19                	je     c010e548 <vfs_do_add+0x5d>$/;"	l
c010e52f	obj/kernel.asm	/^c010e52f:	68 f4 70 11 c0       	push   $0xc01170f4$/;"	l
c010e534	obj/kernel.asm	/^c010e534:	68 bc 70 11 c0       	push   $0xc01170bc$/;"	l
c010e539	obj/kernel.asm	/^c010e539:	68 8f 00 00 00       	push   $0x8f$/;"	l
c010e53e	obj/kernel.asm	/^c010e53e:	68 d1 70 11 c0       	push   $0xc01170d1$/;"	l
c010e543	obj/kernel.asm	/^c010e543:	e8 87 1f ff ff       	call   c01004cf <__panic>$/;"	l
c010e548	obj/kernel.asm	/^c010e548:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e54b	obj/kernel.asm	/^c010e54b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e54e	obj/kernel.asm	/^c010e54e:	e8 e2 4e 00 00       	call   c0113435 <strlen>$/;"	l
c010e553	obj/kernel.asm	/^c010e553:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e556	obj/kernel.asm	/^c010e556:	83 f8 1f             	cmp    $0x1f,%eax$/;"	l
c010e559	obj/kernel.asm	/^c010e559:	76 0a                	jbe    c010e565 <vfs_do_add+0x7a>$/;"	l
c010e55b	obj/kernel.asm	/^c010e55b:	b8 f4 ff ff ff       	mov    $0xfffffff4,%eax$/;"	l
c010e560	obj/kernel.asm	/^c010e560:	e9 0d 01 00 00       	jmp    c010e672 <vfs_do_add+0x187>$/;"	l
c010e565	obj/kernel.asm	/^c010e565:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c010e56c	obj/kernel.asm	/^c010e56c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e56f	obj/kernel.asm	/^c010e56f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e572	obj/kernel.asm	/^c010e572:	e8 bc 1c ff ff       	call   c0100233 <strdup>$/;"	l
c010e577	obj/kernel.asm	/^c010e577:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e57a	obj/kernel.asm	/^c010e57a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e57d	obj/kernel.asm	/^c010e57d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010e581	obj/kernel.asm	/^c010e581:	75 08                	jne    c010e58b <vfs_do_add+0xa0>$/;"	l
c010e583	obj/kernel.asm	/^c010e583:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e586	obj/kernel.asm	/^c010e586:	e9 e7 00 00 00       	jmp    c010e672 <vfs_do_add+0x187>$/;"	l
c010e58b	obj/kernel.asm	/^c010e58b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e58e	obj/kernel.asm	/^c010e58e:	6a 18                	push   $0x18$/;"	l
c010e590	obj/kernel.asm	/^c010e590:	e8 61 8e ff ff       	call   c01073f6 <kmalloc>$/;"	l
c010e595	obj/kernel.asm	/^c010e595:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e598	obj/kernel.asm	/^c010e598:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e59b	obj/kernel.asm	/^c010e59b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010e59f	obj/kernel.asm	/^c010e59f:	75 05                	jne    c010e5a6 <vfs_do_add+0xbb>$/;"	l
c010e5a1	obj/kernel.asm	/^c010e5a1:	e9 bb 00 00 00       	jmp    c010e661 <vfs_do_add+0x176>$/;"	l
c010e5a6	obj/kernel.asm	/^c010e5a6:	c7 45 f4 e9 ff ff ff 	movl   $0xffffffe9,-0xc(%ebp)$/;"	l
c010e5ad	obj/kernel.asm	/^c010e5ad:	e8 7b fc ff ff       	call   c010e22d <lock_vdev_list>$/;"	l
c010e5b2	obj/kernel.asm	/^c010e5b2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e5b5	obj/kernel.asm	/^c010e5b5:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010e5b8	obj/kernel.asm	/^c010e5b8:	e8 d3 fe ff ff       	call   c010e490 <check_devname_conflict>$/;"	l
c010e5bd	obj/kernel.asm	/^c010e5bd:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e5c0	obj/kernel.asm	/^c010e5c0:	85 c0                	test   %eax,%eax$/;"	l
c010e5c2	obj/kernel.asm	/^c010e5c2:	75 19                	jne    c010e5dd <vfs_do_add+0xf2>$/;"	l
c010e5c4	obj/kernel.asm	/^c010e5c4:	e8 7c fc ff ff       	call   c010e245 <unlock_vdev_list>$/;"	l
c010e5c9	obj/kernel.asm	/^c010e5c9:	90                   	nop$/;"	l
c010e5ca	obj/kernel.asm	/^c010e5ca:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e5cd	obj/kernel.asm	/^c010e5cd:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010e5d0	obj/kernel.asm	/^c010e5d0:	e8 39 8e ff ff       	call   c010740e <kfree>$/;"	l
c010e5d5	obj/kernel.asm	/^c010e5d5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e5d8	obj/kernel.asm	/^c010e5d8:	e9 84 00 00 00       	jmp    c010e661 <vfs_do_add+0x176>$/;"	l
c010e5dd	obj/kernel.asm	/^c010e5dd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e5e0	obj/kernel.asm	/^c010e5e0:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010e5e3	obj/kernel.asm	/^c010e5e3:	89 10                	mov    %edx,(%eax)$/;"	l
c010e5e5	obj/kernel.asm	/^c010e5e5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e5e8	obj/kernel.asm	/^c010e5e8:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010e5eb	obj/kernel.asm	/^c010e5eb:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e5ee	obj/kernel.asm	/^c010e5ee:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e5f1	obj/kernel.asm	/^c010e5f1:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c010e5f4	obj/kernel.asm	/^c010e5f4:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010e5f7	obj/kernel.asm	/^c010e5f7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e5fa	obj/kernel.asm	/^c010e5fa:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010e5fd	obj/kernel.asm	/^c010e5fd:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c010e600	obj/kernel.asm	/^c010e600:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e603	obj/kernel.asm	/^c010e603:	83 c0 10             	add    $0x10,%eax$/;"	l
c010e606	obj/kernel.asm	/^c010e606:	c7 45 e8 38 11 15 c0 	movl   $0xc0151138,-0x18(%ebp)$/;"	l
c010e60d	obj/kernel.asm	/^c010e60d:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010e610	obj/kernel.asm	/^c010e610:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e613	obj/kernel.asm	/^c010e613:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010e616	obj/kernel.asm	/^c010e616:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e619	obj/kernel.asm	/^c010e619:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010e61c	obj/kernel.asm	/^c010e61c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010e61f	obj/kernel.asm	/^c010e61f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e622	obj/kernel.asm	/^c010e622:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c010e625	obj/kernel.asm	/^c010e625:	89 55 d8             	mov    %edx,-0x28(%ebp)$/;"	l
c010e628	obj/kernel.asm	/^c010e628:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c010e62b	obj/kernel.asm	/^c010e62b:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c010e62e	obj/kernel.asm	/^c010e62e:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c010e631	obj/kernel.asm	/^c010e631:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010e634	obj/kernel.asm	/^c010e634:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010e637	obj/kernel.asm	/^c010e637:	89 10                	mov    %edx,(%eax)$/;"	l
c010e639	obj/kernel.asm	/^c010e639:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010e63c	obj/kernel.asm	/^c010e63c:	8b 10                	mov    (%eax),%edx$/;"	l
c010e63e	obj/kernel.asm	/^c010e63e:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c010e641	obj/kernel.asm	/^c010e641:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e644	obj/kernel.asm	/^c010e644:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010e647	obj/kernel.asm	/^c010e647:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010e64a	obj/kernel.asm	/^c010e64a:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c010e64d	obj/kernel.asm	/^c010e64d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010e650	obj/kernel.asm	/^c010e650:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c010e653	obj/kernel.asm	/^c010e653:	89 10                	mov    %edx,(%eax)$/;"	l
c010e655	obj/kernel.asm	/^c010e655:	e8 eb fb ff ff       	call   c010e245 <unlock_vdev_list>$/;"	l
c010e65a	obj/kernel.asm	/^c010e65a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e65f	obj/kernel.asm	/^c010e65f:	eb 11                	jmp    c010e672 <vfs_do_add+0x187>$/;"	l
c010e661	obj/kernel.asm	/^c010e661:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e664	obj/kernel.asm	/^c010e664:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010e667	obj/kernel.asm	/^c010e667:	e8 a2 8d ff ff       	call   c010740e <kfree>$/;"	l
c010e66c	obj/kernel.asm	/^c010e66c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e66f	obj/kernel.asm	/^c010e66f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e672	obj/kernel.asm	/^c010e672:	c9                   	leave  $/;"	l
c010e673	obj/kernel.asm	/^c010e673:	c3                   	ret    $/;"	l
c010e674	obj/kernel.asm	/^c010e674 <vfs_add_fs>:$/;"	l
c010e674	obj/kernel.asm	/^c010e674:	55                   	push   %ebp$/;"	l
c010e675	obj/kernel.asm	/^c010e675:	89 e5                	mov    %esp,%ebp$/;"	l
c010e677	obj/kernel.asm	/^c010e677:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e67a	obj/kernel.asm	/^c010e67a:	6a 00                	push   $0x0$/;"	l
c010e67c	obj/kernel.asm	/^c010e67c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010e67f	obj/kernel.asm	/^c010e67f:	6a 00                	push   $0x0$/;"	l
c010e681	obj/kernel.asm	/^c010e681:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e684	obj/kernel.asm	/^c010e684:	e8 62 fe ff ff       	call   c010e4eb <vfs_do_add>$/;"	l
c010e689	obj/kernel.asm	/^c010e689:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e68c	obj/kernel.asm	/^c010e68c:	c9                   	leave  $/;"	l
c010e68d	obj/kernel.asm	/^c010e68d:	c3                   	ret    $/;"	l
c010e68e	obj/kernel.asm	/^c010e68e <vfs_add_dev>:$/;"	l
c010e68e	obj/kernel.asm	/^c010e68e:	55                   	push   %ebp$/;"	l
c010e68f	obj/kernel.asm	/^c010e68f:	89 e5                	mov    %esp,%ebp$/;"	l
c010e691	obj/kernel.asm	/^c010e691:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e694	obj/kernel.asm	/^c010e694:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010e697	obj/kernel.asm	/^c010e697:	6a 00                	push   $0x0$/;"	l
c010e699	obj/kernel.asm	/^c010e699:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010e69c	obj/kernel.asm	/^c010e69c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e69f	obj/kernel.asm	/^c010e69f:	e8 47 fe ff ff       	call   c010e4eb <vfs_do_add>$/;"	l
c010e6a4	obj/kernel.asm	/^c010e6a4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e6a7	obj/kernel.asm	/^c010e6a7:	c9                   	leave  $/;"	l
c010e6a8	obj/kernel.asm	/^c010e6a8:	c3                   	ret    $/;"	l
c010e6a9	obj/kernel.asm	/^c010e6a9 <find_mount>:$/;"	l
c010e6a9	obj/kernel.asm	/^c010e6a9:	55                   	push   %ebp$/;"	l
c010e6aa	obj/kernel.asm	/^c010e6aa:	89 e5                	mov    %esp,%ebp$/;"	l
c010e6ac	obj/kernel.asm	/^c010e6ac:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e6af	obj/kernel.asm	/^c010e6af:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010e6b3	obj/kernel.asm	/^c010e6b3:	75 19                	jne    c010e6ce <find_mount+0x25>$/;"	l
c010e6b5	obj/kernel.asm	/^c010e6b5:	68 ac 70 11 c0       	push   $0xc01170ac$/;"	l
c010e6ba	obj/kernel.asm	/^c010e6ba:	68 bc 70 11 c0       	push   $0xc01170bc$/;"	l
c010e6bf	obj/kernel.asm	/^c010e6bf:	68 cd 00 00 00       	push   $0xcd$/;"	l
c010e6c4	obj/kernel.asm	/^c010e6c4:	68 d1 70 11 c0       	push   $0xc01170d1$/;"	l
c010e6c9	obj/kernel.asm	/^c010e6c9:	e8 01 1e ff ff       	call   c01004cf <__panic>$/;"	l
c010e6ce	obj/kernel.asm	/^c010e6ce:	c7 45 f0 38 11 15 c0 	movl   $0xc0151138,-0x10(%ebp)$/;"	l
c010e6d5	obj/kernel.asm	/^c010e6d5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e6d8	obj/kernel.asm	/^c010e6d8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e6db	obj/kernel.asm	/^c010e6db:	eb 3a                	jmp    c010e717 <find_mount+0x6e>$/;"	l
c010e6dd	obj/kernel.asm	/^c010e6dd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e6e0	obj/kernel.asm	/^c010e6e0:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010e6e3	obj/kernel.asm	/^c010e6e3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e6e6	obj/kernel.asm	/^c010e6e6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e6e9	obj/kernel.asm	/^c010e6e9:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e6ec	obj/kernel.asm	/^c010e6ec:	85 c0                	test   %eax,%eax$/;"	l
c010e6ee	obj/kernel.asm	/^c010e6ee:	74 27                	je     c010e717 <find_mount+0x6e>$/;"	l
c010e6f0	obj/kernel.asm	/^c010e6f0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e6f3	obj/kernel.asm	/^c010e6f3:	8b 00                	mov    (%eax),%eax$/;"	l
c010e6f5	obj/kernel.asm	/^c010e6f5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e6f8	obj/kernel.asm	/^c010e6f8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e6fb	obj/kernel.asm	/^c010e6fb:	50                   	push   %eax$/;"	l
c010e6fc	obj/kernel.asm	/^c010e6fc:	e8 2f 4e 00 00       	call   c0113530 <strcmp>$/;"	l
c010e701	obj/kernel.asm	/^c010e701:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e704	obj/kernel.asm	/^c010e704:	85 c0                	test   %eax,%eax$/;"	l
c010e706	obj/kernel.asm	/^c010e706:	75 0f                	jne    c010e717 <find_mount+0x6e>$/;"	l
c010e708	obj/kernel.asm	/^c010e708:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e70b	obj/kernel.asm	/^c010e70b:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010e70e	obj/kernel.asm	/^c010e70e:	89 10                	mov    %edx,(%eax)$/;"	l
c010e710	obj/kernel.asm	/^c010e710:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010e715	obj/kernel.asm	/^c010e715:	eb 1c                	jmp    c010e733 <find_mount+0x8a>$/;"	l
c010e717	obj/kernel.asm	/^c010e717:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e71a	obj/kernel.asm	/^c010e71a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e71d	obj/kernel.asm	/^c010e71d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e720	obj/kernel.asm	/^c010e720:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e723	obj/kernel.asm	/^c010e723:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e726	obj/kernel.asm	/^c010e726:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e729	obj/kernel.asm	/^c010e729:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010e72c	obj/kernel.asm	/^c010e72c:	75 af                	jne    c010e6dd <find_mount+0x34>$/;"	l
c010e72e	obj/kernel.asm	/^c010e72e:	b8 f3 ff ff ff       	mov    $0xfffffff3,%eax$/;"	l
c010e733	obj/kernel.asm	/^c010e733:	c9                   	leave  $/;"	l
c010e734	obj/kernel.asm	/^c010e734:	c3                   	ret    $/;"	l
c010e735	obj/kernel.asm	/^c010e735 <vfs_mount>:$/;"	l
c010e735	obj/kernel.asm	/^c010e735:	55                   	push   %ebp$/;"	l
c010e736	obj/kernel.asm	/^c010e736:	89 e5                	mov    %esp,%ebp$/;"	l
c010e738	obj/kernel.asm	/^c010e738:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e73b	obj/kernel.asm	/^c010e73b:	e8 ed fa ff ff       	call   c010e22d <lock_vdev_list>$/;"	l
c010e740	obj/kernel.asm	/^c010e740:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e743	obj/kernel.asm	/^c010e743:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c010e746	obj/kernel.asm	/^c010e746:	50                   	push   %eax$/;"	l
c010e747	obj/kernel.asm	/^c010e747:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e74a	obj/kernel.asm	/^c010e74a:	e8 5a ff ff ff       	call   c010e6a9 <find_mount>$/;"	l
c010e74f	obj/kernel.asm	/^c010e74f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e752	obj/kernel.asm	/^c010e752:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e755	obj/kernel.asm	/^c010e755:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e759	obj/kernel.asm	/^c010e759:	74 05                	je     c010e760 <vfs_mount+0x2b>$/;"	l
c010e75b	obj/kernel.asm	/^c010e75b:	e9 d4 00 00 00       	jmp    c010e834 <vfs_mount+0xff>$/;"	l
c010e760	obj/kernel.asm	/^c010e760:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e763	obj/kernel.asm	/^c010e763:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e766	obj/kernel.asm	/^c010e766:	85 c0                	test   %eax,%eax$/;"	l
c010e768	obj/kernel.asm	/^c010e768:	74 0c                	je     c010e776 <vfs_mount+0x41>$/;"	l
c010e76a	obj/kernel.asm	/^c010e76a:	c7 45 f4 f1 ff ff ff 	movl   $0xfffffff1,-0xc(%ebp)$/;"	l
c010e771	obj/kernel.asm	/^c010e771:	e9 be 00 00 00       	jmp    c010e834 <vfs_mount+0xff>$/;"	l
c010e776	obj/kernel.asm	/^c010e776:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e779	obj/kernel.asm	/^c010e779:	8b 00                	mov    (%eax),%eax$/;"	l
c010e77b	obj/kernel.asm	/^c010e77b:	85 c0                	test   %eax,%eax$/;"	l
c010e77d	obj/kernel.asm	/^c010e77d:	74 0a                	je     c010e789 <vfs_mount+0x54>$/;"	l
c010e77f	obj/kernel.asm	/^c010e77f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e782	obj/kernel.asm	/^c010e782:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e785	obj/kernel.asm	/^c010e785:	85 c0                	test   %eax,%eax$/;"	l
c010e787	obj/kernel.asm	/^c010e787:	75 19                	jne    c010e7a2 <vfs_mount+0x6d>$/;"	l
c010e789	obj/kernel.asm	/^c010e789:	68 50 71 11 c0       	push   $0xc0117150$/;"	l
c010e78e	obj/kernel.asm	/^c010e78e:	68 bc 70 11 c0       	push   $0xc01170bc$/;"	l
c010e793	obj/kernel.asm	/^c010e793:	68 eb 00 00 00       	push   $0xeb$/;"	l
c010e798	obj/kernel.asm	/^c010e798:	68 d1 70 11 c0       	push   $0xc01170d1$/;"	l
c010e79d	obj/kernel.asm	/^c010e79d:	e8 2d 1d ff ff       	call   c01004cf <__panic>$/;"	l
c010e7a2	obj/kernel.asm	/^c010e7a2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e7a5	obj/kernel.asm	/^c010e7a5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e7a8	obj/kernel.asm	/^c010e7a8:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010e7ab	obj/kernel.asm	/^c010e7ab:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010e7af	obj/kernel.asm	/^c010e7af:	74 0d                	je     c010e7be <vfs_mount+0x89>$/;"	l
c010e7b1	obj/kernel.asm	/^c010e7b1:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e7b4	obj/kernel.asm	/^c010e7b4:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010e7b7	obj/kernel.asm	/^c010e7b7:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010e7bc	obj/kernel.asm	/^c010e7bc:	74 19                	je     c010e7d7 <vfs_mount+0xa2>$/;"	l
c010e7be	obj/kernel.asm	/^c010e7be:	68 7c 71 11 c0       	push   $0xc011717c$/;"	l
c010e7c3	obj/kernel.asm	/^c010e7c3:	68 bc 70 11 c0       	push   $0xc01170bc$/;"	l
c010e7c8	obj/kernel.asm	/^c010e7c8:	68 ed 00 00 00       	push   $0xed$/;"	l
c010e7cd	obj/kernel.asm	/^c010e7cd:	68 d1 70 11 c0       	push   $0xc01170d1$/;"	l
c010e7d2	obj/kernel.asm	/^c010e7d2:	e8 f8 1c ff ff       	call   c01004cf <__panic>$/;"	l
c010e7d7	obj/kernel.asm	/^c010e7d7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e7da	obj/kernel.asm	/^c010e7da:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e7dd	obj/kernel.asm	/^c010e7dd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e7e0	obj/kernel.asm	/^c010e7e0:	83 c0 08             	add    $0x8,%eax$/;"	l
c010e7e3	obj/kernel.asm	/^c010e7e3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e7e6	obj/kernel.asm	/^c010e7e6:	50                   	push   %eax$/;"	l
c010e7e7	obj/kernel.asm	/^c010e7e7:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010e7ea	obj/kernel.asm	/^c010e7ea:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010e7ed	obj/kernel.asm	/^c010e7ed:	ff d0                	call   *%eax$/;"	l
c010e7ef	obj/kernel.asm	/^c010e7ef:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e7f2	obj/kernel.asm	/^c010e7f2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e7f5	obj/kernel.asm	/^c010e7f5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e7f9	obj/kernel.asm	/^c010e7f9:	75 39                	jne    c010e834 <vfs_mount+0xff>$/;"	l
c010e7fb	obj/kernel.asm	/^c010e7fb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e7fe	obj/kernel.asm	/^c010e7fe:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e801	obj/kernel.asm	/^c010e801:	85 c0                	test   %eax,%eax$/;"	l
c010e803	obj/kernel.asm	/^c010e803:	75 19                	jne    c010e81e <vfs_mount+0xe9>$/;"	l
c010e805	obj/kernel.asm	/^c010e805:	68 af 71 11 c0       	push   $0xc01171af$/;"	l
c010e80a	obj/kernel.asm	/^c010e80a:	68 bc 70 11 c0       	push   $0xc01170bc$/;"	l
c010e80f	obj/kernel.asm	/^c010e80f:	68 ef 00 00 00       	push   $0xef$/;"	l
c010e814	obj/kernel.asm	/^c010e814:	68 d1 70 11 c0       	push   $0xc01170d1$/;"	l
c010e819	obj/kernel.asm	/^c010e819:	e8 b1 1c ff ff       	call   c01004cf <__panic>$/;"	l
c010e81e	obj/kernel.asm	/^c010e81e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010e821	obj/kernel.asm	/^c010e821:	8b 00                	mov    (%eax),%eax$/;"	l
c010e823	obj/kernel.asm	/^c010e823:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e826	obj/kernel.asm	/^c010e826:	50                   	push   %eax$/;"	l
c010e827	obj/kernel.asm	/^c010e827:	68 c0 71 11 c0       	push   $0xc01171c0$/;"	l
c010e82c	obj/kernel.asm	/^c010e82c:	e8 39 1b ff ff       	call   c010036a <cprintf>$/;"	l
c010e831	obj/kernel.asm	/^c010e831:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e834	obj/kernel.asm	/^c010e834:	e8 0c fa ff ff       	call   c010e245 <unlock_vdev_list>$/;"	l
c010e839	obj/kernel.asm	/^c010e839:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e83c	obj/kernel.asm	/^c010e83c:	c9                   	leave  $/;"	l
c010e83d	obj/kernel.asm	/^c010e83d:	c3                   	ret    $/;"	l
c010e83e	obj/kernel.asm	/^c010e83e <vfs_unmount>:$/;"	l
c010e83e	obj/kernel.asm	/^c010e83e:	55                   	push   %ebp$/;"	l
c010e83f	obj/kernel.asm	/^c010e83f:	89 e5                	mov    %esp,%ebp$/;"	l
c010e841	obj/kernel.asm	/^c010e841:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010e844	obj/kernel.asm	/^c010e844:	e8 e4 f9 ff ff       	call   c010e22d <lock_vdev_list>$/;"	l
c010e849	obj/kernel.asm	/^c010e849:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e84c	obj/kernel.asm	/^c010e84c:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010e84f	obj/kernel.asm	/^c010e84f:	50                   	push   %eax$/;"	l
c010e850	obj/kernel.asm	/^c010e850:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010e853	obj/kernel.asm	/^c010e853:	e8 51 fe ff ff       	call   c010e6a9 <find_mount>$/;"	l
c010e858	obj/kernel.asm	/^c010e858:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e85b	obj/kernel.asm	/^c010e85b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e85e	obj/kernel.asm	/^c010e85e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e862	obj/kernel.asm	/^c010e862:	74 05                	je     c010e869 <vfs_unmount+0x2b>$/;"	l
c010e864	obj/kernel.asm	/^c010e864:	e9 a6 00 00 00       	jmp    c010e90f <vfs_unmount+0xd1>$/;"	l
c010e869	obj/kernel.asm	/^c010e869:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e86c	obj/kernel.asm	/^c010e86c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e86f	obj/kernel.asm	/^c010e86f:	85 c0                	test   %eax,%eax$/;"	l
c010e871	obj/kernel.asm	/^c010e871:	75 0c                	jne    c010e87f <vfs_unmount+0x41>$/;"	l
c010e873	obj/kernel.asm	/^c010e873:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c010e87a	obj/kernel.asm	/^c010e87a:	e9 90 00 00 00       	jmp    c010e90f <vfs_unmount+0xd1>$/;"	l
c010e87f	obj/kernel.asm	/^c010e87f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e882	obj/kernel.asm	/^c010e882:	8b 00                	mov    (%eax),%eax$/;"	l
c010e884	obj/kernel.asm	/^c010e884:	85 c0                	test   %eax,%eax$/;"	l
c010e886	obj/kernel.asm	/^c010e886:	74 0a                	je     c010e892 <vfs_unmount+0x54>$/;"	l
c010e888	obj/kernel.asm	/^c010e888:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e88b	obj/kernel.asm	/^c010e88b:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e88e	obj/kernel.asm	/^c010e88e:	85 c0                	test   %eax,%eax$/;"	l
c010e890	obj/kernel.asm	/^c010e890:	75 19                	jne    c010e8ab <vfs_unmount+0x6d>$/;"	l
c010e892	obj/kernel.asm	/^c010e892:	68 50 71 11 c0       	push   $0xc0117150$/;"	l
c010e897	obj/kernel.asm	/^c010e897:	68 bc 70 11 c0       	push   $0xc01170bc$/;"	l
c010e89c	obj/kernel.asm	/^c010e89c:	68 08 01 00 00       	push   $0x108$/;"	l
c010e8a1	obj/kernel.asm	/^c010e8a1:	68 d1 70 11 c0       	push   $0xc01170d1$/;"	l
c010e8a6	obj/kernel.asm	/^c010e8a6:	e8 24 1c ff ff       	call   c01004cf <__panic>$/;"	l
c010e8ab	obj/kernel.asm	/^c010e8ab:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e8ae	obj/kernel.asm	/^c010e8ae:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e8b1	obj/kernel.asm	/^c010e8b1:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c010e8b4	obj/kernel.asm	/^c010e8b4:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010e8b7	obj/kernel.asm	/^c010e8b7:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010e8ba	obj/kernel.asm	/^c010e8ba:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e8bd	obj/kernel.asm	/^c010e8bd:	52                   	push   %edx$/;"	l
c010e8be	obj/kernel.asm	/^c010e8be:	ff d0                	call   *%eax$/;"	l
c010e8c0	obj/kernel.asm	/^c010e8c0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e8c3	obj/kernel.asm	/^c010e8c3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e8c6	obj/kernel.asm	/^c010e8c6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e8ca	obj/kernel.asm	/^c010e8ca:	74 02                	je     c010e8ce <vfs_unmount+0x90>$/;"	l
c010e8cc	obj/kernel.asm	/^c010e8cc:	eb 41                	jmp    c010e90f <vfs_unmount+0xd1>$/;"	l
c010e8ce	obj/kernel.asm	/^c010e8ce:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e8d1	obj/kernel.asm	/^c010e8d1:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e8d4	obj/kernel.asm	/^c010e8d4:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010e8d7	obj/kernel.asm	/^c010e8d7:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010e8da	obj/kernel.asm	/^c010e8da:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010e8dd	obj/kernel.asm	/^c010e8dd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e8e0	obj/kernel.asm	/^c010e8e0:	52                   	push   %edx$/;"	l
c010e8e1	obj/kernel.asm	/^c010e8e1:	ff d0                	call   *%eax$/;"	l
c010e8e3	obj/kernel.asm	/^c010e8e3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e8e6	obj/kernel.asm	/^c010e8e6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e8e9	obj/kernel.asm	/^c010e8e9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010e8ed	obj/kernel.asm	/^c010e8ed:	75 20                	jne    c010e90f <vfs_unmount+0xd1>$/;"	l
c010e8ef	obj/kernel.asm	/^c010e8ef:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e8f2	obj/kernel.asm	/^c010e8f2:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010e8f9	obj/kernel.asm	/^c010e8f9:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e8fc	obj/kernel.asm	/^c010e8fc:	8b 00                	mov    (%eax),%eax$/;"	l
c010e8fe	obj/kernel.asm	/^c010e8fe:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010e901	obj/kernel.asm	/^c010e901:	50                   	push   %eax$/;"	l
c010e902	obj/kernel.asm	/^c010e902:	68 d0 71 11 c0       	push   $0xc01171d0$/;"	l
c010e907	obj/kernel.asm	/^c010e907:	e8 5e 1a ff ff       	call   c010036a <cprintf>$/;"	l
c010e90c	obj/kernel.asm	/^c010e90c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e90f	obj/kernel.asm	/^c010e90f:	e8 31 f9 ff ff       	call   c010e245 <unlock_vdev_list>$/;"	l
c010e914	obj/kernel.asm	/^c010e914:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e917	obj/kernel.asm	/^c010e917:	c9                   	leave  $/;"	l
c010e918	obj/kernel.asm	/^c010e918:	c3                   	ret    $/;"	l
c010e919	obj/kernel.asm	/^c010e919 <vfs_unmount_all>:$/;"	l
c010e919	obj/kernel.asm	/^c010e919:	55                   	push   %ebp$/;"	l
c010e91a	obj/kernel.asm	/^c010e91a:	89 e5                	mov    %esp,%ebp$/;"	l
c010e91c	obj/kernel.asm	/^c010e91c:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010e91f	obj/kernel.asm	/^c010e91f:	c7 45 e4 38 11 15 c0 	movl   $0xc0151138,-0x1c(%ebp)$/;"	l
c010e926	obj/kernel.asm	/^c010e926:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010e929	obj/kernel.asm	/^c010e929:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010e92c	obj/kernel.asm	/^c010e92c:	39 45 e4             	cmp    %eax,-0x1c(%ebp)$/;"	l
c010e92f	obj/kernel.asm	/^c010e92f:	0f 94 c0             	sete   %al$/;"	l
c010e932	obj/kernel.asm	/^c010e932:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010e935	obj/kernel.asm	/^c010e935:	85 c0                	test   %eax,%eax$/;"	l
c010e937	obj/kernel.asm	/^c010e937:	0f 85 f4 00 00 00    	jne    c010ea31 <vfs_unmount_all+0x118>$/;"	l
c010e93d	obj/kernel.asm	/^c010e93d:	e8 eb f8 ff ff       	call   c010e22d <lock_vdev_list>$/;"	l
c010e942	obj/kernel.asm	/^c010e942:	c7 45 f0 38 11 15 c0 	movl   $0xc0151138,-0x10(%ebp)$/;"	l
c010e949	obj/kernel.asm	/^c010e949:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010e94c	obj/kernel.asm	/^c010e94c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010e94f	obj/kernel.asm	/^c010e94f:	e9 bd 00 00 00       	jmp    c010ea11 <vfs_unmount_all+0xf8>$/;"	l
c010e954	obj/kernel.asm	/^c010e954:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010e957	obj/kernel.asm	/^c010e957:	83 e8 10             	sub    $0x10,%eax$/;"	l
c010e95a	obj/kernel.asm	/^c010e95a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010e95d	obj/kernel.asm	/^c010e95d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e960	obj/kernel.asm	/^c010e960:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010e963	obj/kernel.asm	/^c010e963:	85 c0                	test   %eax,%eax$/;"	l
c010e965	obj/kernel.asm	/^c010e965:	0f 84 a6 00 00 00    	je     c010ea11 <vfs_unmount_all+0xf8>$/;"	l
c010e96b	obj/kernel.asm	/^c010e96b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e96e	obj/kernel.asm	/^c010e96e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e971	obj/kernel.asm	/^c010e971:	85 c0                	test   %eax,%eax$/;"	l
c010e973	obj/kernel.asm	/^c010e973:	0f 84 98 00 00 00    	je     c010ea11 <vfs_unmount_all+0xf8>$/;"	l
c010e979	obj/kernel.asm	/^c010e979:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e97c	obj/kernel.asm	/^c010e97c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e97f	obj/kernel.asm	/^c010e97f:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c010e982	obj/kernel.asm	/^c010e982:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010e985	obj/kernel.asm	/^c010e985:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010e988	obj/kernel.asm	/^c010e988:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e98b	obj/kernel.asm	/^c010e98b:	52                   	push   %edx$/;"	l
c010e98c	obj/kernel.asm	/^c010e98c:	ff d0                	call   *%eax$/;"	l
c010e98e	obj/kernel.asm	/^c010e98e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e991	obj/kernel.asm	/^c010e991:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e994	obj/kernel.asm	/^c010e994:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010e998	obj/kernel.asm	/^c010e998:	74 1b                	je     c010e9b5 <vfs_unmount_all+0x9c>$/;"	l
c010e99a	obj/kernel.asm	/^c010e99a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e99d	obj/kernel.asm	/^c010e99d:	8b 00                	mov    (%eax),%eax$/;"	l
c010e99f	obj/kernel.asm	/^c010e99f:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010e9a2	obj/kernel.asm	/^c010e9a2:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010e9a5	obj/kernel.asm	/^c010e9a5:	50                   	push   %eax$/;"	l
c010e9a6	obj/kernel.asm	/^c010e9a6:	68 e4 71 11 c0       	push   $0xc01171e4$/;"	l
c010e9ab	obj/kernel.asm	/^c010e9ab:	e8 ba 19 ff ff       	call   c010036a <cprintf>$/;"	l
c010e9b0	obj/kernel.asm	/^c010e9b0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e9b3	obj/kernel.asm	/^c010e9b3:	eb 5c                	jmp    c010ea11 <vfs_unmount_all+0xf8>$/;"	l
c010e9b5	obj/kernel.asm	/^c010e9b5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e9b8	obj/kernel.asm	/^c010e9b8:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010e9bb	obj/kernel.asm	/^c010e9bb:	8b 40 78             	mov    0x78(%eax),%eax$/;"	l
c010e9be	obj/kernel.asm	/^c010e9be:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010e9c1	obj/kernel.asm	/^c010e9c1:	8b 52 08             	mov    0x8(%edx),%edx$/;"	l
c010e9c4	obj/kernel.asm	/^c010e9c4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010e9c7	obj/kernel.asm	/^c010e9c7:	52                   	push   %edx$/;"	l
c010e9c8	obj/kernel.asm	/^c010e9c8:	ff d0                	call   *%eax$/;"	l
c010e9ca	obj/kernel.asm	/^c010e9ca:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e9cd	obj/kernel.asm	/^c010e9cd:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010e9d0	obj/kernel.asm	/^c010e9d0:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010e9d4	obj/kernel.asm	/^c010e9d4:	74 1b                	je     c010e9f1 <vfs_unmount_all+0xd8>$/;"	l
c010e9d6	obj/kernel.asm	/^c010e9d6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e9d9	obj/kernel.asm	/^c010e9d9:	8b 00                	mov    (%eax),%eax$/;"	l
c010e9db	obj/kernel.asm	/^c010e9db:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010e9de	obj/kernel.asm	/^c010e9de:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010e9e1	obj/kernel.asm	/^c010e9e1:	50                   	push   %eax$/;"	l
c010e9e2	obj/kernel.asm	/^c010e9e2:	68 0c 72 11 c0       	push   $0xc011720c$/;"	l
c010e9e7	obj/kernel.asm	/^c010e9e7:	e8 7e 19 ff ff       	call   c010036a <cprintf>$/;"	l
c010e9ec	obj/kernel.asm	/^c010e9ec:	83 c4 10             	add    $0x10,%esp$/;"	l
c010e9ef	obj/kernel.asm	/^c010e9ef:	eb 20                	jmp    c010ea11 <vfs_unmount_all+0xf8>$/;"	l
c010e9f1	obj/kernel.asm	/^c010e9f1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e9f4	obj/kernel.asm	/^c010e9f4:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c010e9fb	obj/kernel.asm	/^c010e9fb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010e9fe	obj/kernel.asm	/^c010e9fe:	8b 00                	mov    (%eax),%eax$/;"	l
c010ea00	obj/kernel.asm	/^c010ea00:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ea03	obj/kernel.asm	/^c010ea03:	50                   	push   %eax$/;"	l
c010ea04	obj/kernel.asm	/^c010ea04:	68 d0 71 11 c0       	push   $0xc01171d0$/;"	l
c010ea09	obj/kernel.asm	/^c010ea09:	e8 5c 19 ff ff       	call   c010036a <cprintf>$/;"	l
c010ea0e	obj/kernel.asm	/^c010ea0e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ea11	obj/kernel.asm	/^c010ea11:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ea14	obj/kernel.asm	/^c010ea14:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010ea17	obj/kernel.asm	/^c010ea17:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010ea1a	obj/kernel.asm	/^c010ea1a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010ea1d	obj/kernel.asm	/^c010ea1d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ea20	obj/kernel.asm	/^c010ea20:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ea23	obj/kernel.asm	/^c010ea23:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010ea26	obj/kernel.asm	/^c010ea26:	0f 85 28 ff ff ff    	jne    c010e954 <vfs_unmount_all+0x3b>$/;"	l
c010ea2c	obj/kernel.asm	/^c010ea2c:	e8 14 f8 ff ff       	call   c010e245 <unlock_vdev_list>$/;"	l
c010ea31	obj/kernel.asm	/^c010ea31:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ea36	obj/kernel.asm	/^c010ea36:	c9                   	leave  $/;"	l
c010ea37	obj/kernel.asm	/^c010ea37:	c3                   	ret    $/;"	l
c010ea38	obj/kernel.asm	/^c010ea38 <get_cwd_nolock>:$/;"	l
c010ea38	obj/kernel.asm	/^c010ea38:	55                   	push   %ebp$/;"	l
c010ea39	obj/kernel.asm	/^c010ea39:	89 e5                	mov    %esp,%ebp$/;"	l
c010ea3b	obj/kernel.asm	/^c010ea3b:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010ea40	obj/kernel.asm	/^c010ea40:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010ea46	obj/kernel.asm	/^c010ea46:	8b 00                	mov    (%eax),%eax$/;"	l
c010ea48	obj/kernel.asm	/^c010ea48:	5d                   	pop    %ebp$/;"	l
c010ea49	obj/kernel.asm	/^c010ea49:	c3                   	ret    $/;"	l
c010ea4a	obj/kernel.asm	/^c010ea4a <set_cwd_nolock>:$/;"	l
c010ea4a	obj/kernel.asm	/^c010ea4a:	55                   	push   %ebp$/;"	l
c010ea4b	obj/kernel.asm	/^c010ea4b:	89 e5                	mov    %esp,%ebp$/;"	l
c010ea4d	obj/kernel.asm	/^c010ea4d:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010ea52	obj/kernel.asm	/^c010ea52:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010ea58	obj/kernel.asm	/^c010ea58:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010ea5b	obj/kernel.asm	/^c010ea5b:	89 10                	mov    %edx,(%eax)$/;"	l
c010ea5d	obj/kernel.asm	/^c010ea5d:	5d                   	pop    %ebp$/;"	l
c010ea5e	obj/kernel.asm	/^c010ea5e:	c3                   	ret    $/;"	l
c010ea5f	obj/kernel.asm	/^c010ea5f <lock_cfs>:$/;"	l
c010ea5f	obj/kernel.asm	/^c010ea5f:	55                   	push   %ebp$/;"	l
c010ea60	obj/kernel.asm	/^c010ea60:	89 e5                	mov    %esp,%ebp$/;"	l
c010ea62	obj/kernel.asm	/^c010ea62:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ea65	obj/kernel.asm	/^c010ea65:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010ea6a	obj/kernel.asm	/^c010ea6a:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010ea70	obj/kernel.asm	/^c010ea70:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ea73	obj/kernel.asm	/^c010ea73:	50                   	push   %eax$/;"	l
c010ea74	obj/kernel.asm	/^c010ea74:	e8 a8 c4 ff ff       	call   c010af21 <lock_files>$/;"	l
c010ea79	obj/kernel.asm	/^c010ea79:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ea7c	obj/kernel.asm	/^c010ea7c:	c9                   	leave  $/;"	l
c010ea7d	obj/kernel.asm	/^c010ea7d:	c3                   	ret    $/;"	l
c010ea7e	obj/kernel.asm	/^c010ea7e <unlock_cfs>:$/;"	l
c010ea7e	obj/kernel.asm	/^c010ea7e:	55                   	push   %ebp$/;"	l
c010ea7f	obj/kernel.asm	/^c010ea7f:	89 e5                	mov    %esp,%ebp$/;"	l
c010ea81	obj/kernel.asm	/^c010ea81:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ea84	obj/kernel.asm	/^c010ea84:	a1 88 f0 14 c0       	mov    0xc014f088,%eax$/;"	l
c010ea89	obj/kernel.asm	/^c010ea89:	8b 80 c4 00 00 00    	mov    0xc4(%eax),%eax$/;"	l
c010ea8f	obj/kernel.asm	/^c010ea8f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ea92	obj/kernel.asm	/^c010ea92:	50                   	push   %eax$/;"	l
c010ea93	obj/kernel.asm	/^c010ea93:	e8 a3 c4 ff ff       	call   c010af3b <unlock_files>$/;"	l
c010ea98	obj/kernel.asm	/^c010ea98:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ea9b	obj/kernel.asm	/^c010ea9b:	c9                   	leave  $/;"	l
c010ea9c	obj/kernel.asm	/^c010ea9c:	c3                   	ret    $/;"	l
c010ea9d	obj/kernel.asm	/^c010ea9d <vfs_get_curdir>:$/;"	l
c010ea9d	obj/kernel.asm	/^c010ea9d:	55                   	push   %ebp$/;"	l
c010ea9e	obj/kernel.asm	/^c010ea9e:	89 e5                	mov    %esp,%ebp$/;"	l
c010eaa0	obj/kernel.asm	/^c010eaa0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010eaa3	obj/kernel.asm	/^c010eaa3:	e8 90 ff ff ff       	call   c010ea38 <get_cwd_nolock>$/;"	l
c010eaa8	obj/kernel.asm	/^c010eaa8:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010eaab	obj/kernel.asm	/^c010eaab:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010eaaf	obj/kernel.asm	/^c010eaaf:	74 1d                	je     c010eace <vfs_get_curdir+0x31>$/;"	l
c010eab1	obj/kernel.asm	/^c010eab1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010eab4	obj/kernel.asm	/^c010eab4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010eab7	obj/kernel.asm	/^c010eab7:	e8 09 06 00 00       	call   c010f0c5 <inode_ref_inc>$/;"	l
c010eabc	obj/kernel.asm	/^c010eabc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010eabf	obj/kernel.asm	/^c010eabf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eac2	obj/kernel.asm	/^c010eac2:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010eac5	obj/kernel.asm	/^c010eac5:	89 10                	mov    %edx,(%eax)$/;"	l
c010eac7	obj/kernel.asm	/^c010eac7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010eacc	obj/kernel.asm	/^c010eacc:	eb 05                	jmp    c010ead3 <vfs_get_curdir+0x36>$/;"	l
c010eace	obj/kernel.asm	/^c010eace:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c010ead3	obj/kernel.asm	/^c010ead3:	c9                   	leave  $/;"	l
c010ead4	obj/kernel.asm	/^c010ead4:	c3                   	ret    $/;"	l
c010ead5	obj/kernel.asm	/^c010ead5 <vfs_set_curdir>:$/;"	l
c010ead5	obj/kernel.asm	/^c010ead5:	55                   	push   %ebp$/;"	l
c010ead6	obj/kernel.asm	/^c010ead6:	89 e5                	mov    %esp,%ebp$/;"	l
c010ead8	obj/kernel.asm	/^c010ead8:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010eadb	obj/kernel.asm	/^c010eadb:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010eae2	obj/kernel.asm	/^c010eae2:	e8 78 ff ff ff       	call   c010ea5f <lock_cfs>$/;"	l
c010eae7	obj/kernel.asm	/^c010eae7:	e8 4c ff ff ff       	call   c010ea38 <get_cwd_nolock>$/;"	l
c010eaec	obj/kernel.asm	/^c010eaec:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010eaef	obj/kernel.asm	/^c010eaef:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010eaf2	obj/kernel.asm	/^c010eaf2:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c010eaf5	obj/kernel.asm	/^c010eaf5:	0f 84 c2 00 00 00    	je     c010ebbd <vfs_set_curdir+0xe8>$/;"	l
c010eafb	obj/kernel.asm	/^c010eafb:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010eaff	obj/kernel.asm	/^c010eaff:	0f 84 96 00 00 00    	je     c010eb9b <vfs_set_curdir+0xc6>$/;"	l
c010eb05	obj/kernel.asm	/^c010eb05:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eb08	obj/kernel.asm	/^c010eb08:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010eb0b	obj/kernel.asm	/^c010eb0b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010eb0f	obj/kernel.asm	/^c010eb0f:	74 17                	je     c010eb28 <vfs_set_curdir+0x53>$/;"	l
c010eb11	obj/kernel.asm	/^c010eb11:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010eb14	obj/kernel.asm	/^c010eb14:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010eb17	obj/kernel.asm	/^c010eb17:	85 c0                	test   %eax,%eax$/;"	l
c010eb19	obj/kernel.asm	/^c010eb19:	74 0d                	je     c010eb28 <vfs_set_curdir+0x53>$/;"	l
c010eb1b	obj/kernel.asm	/^c010eb1b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010eb1e	obj/kernel.asm	/^c010eb1e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010eb21	obj/kernel.asm	/^c010eb21:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c010eb24	obj/kernel.asm	/^c010eb24:	85 c0                	test   %eax,%eax$/;"	l
c010eb26	obj/kernel.asm	/^c010eb26:	75 16                	jne    c010eb3e <vfs_set_curdir+0x69>$/;"	l
c010eb28	obj/kernel.asm	/^c010eb28:	68 38 72 11 c0       	push   $0xc0117238$/;"	l
c010eb2d	obj/kernel.asm	/^c010eb2d:	68 88 72 11 c0       	push   $0xc0117288$/;"	l
c010eb32	obj/kernel.asm	/^c010eb32:	6a 43                	push   $0x43$/;"	l
c010eb34	obj/kernel.asm	/^c010eb34:	68 9d 72 11 c0       	push   $0xc011729d$/;"	l
c010eb39	obj/kernel.asm	/^c010eb39:	e8 91 19 ff ff       	call   c01004cf <__panic>$/;"	l
c010eb3e	obj/kernel.asm	/^c010eb3e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010eb41	obj/kernel.asm	/^c010eb41:	68 b3 72 11 c0       	push   $0xc01172b3$/;"	l
c010eb46	obj/kernel.asm	/^c010eb46:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010eb49	obj/kernel.asm	/^c010eb49:	e8 49 07 00 00       	call   c010f297 <inode_check>$/;"	l
c010eb4e	obj/kernel.asm	/^c010eb4e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010eb51	obj/kernel.asm	/^c010eb51:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010eb54	obj/kernel.asm	/^c010eb54:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010eb57	obj/kernel.asm	/^c010eb57:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c010eb5a	obj/kernel.asm	/^c010eb5a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010eb5d	obj/kernel.asm	/^c010eb5d:	8d 55 e8             	lea    -0x18(%ebp),%edx$/;"	l
c010eb60	obj/kernel.asm	/^c010eb60:	52                   	push   %edx$/;"	l
c010eb61	obj/kernel.asm	/^c010eb61:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010eb64	obj/kernel.asm	/^c010eb64:	ff d0                	call   *%eax$/;"	l
c010eb66	obj/kernel.asm	/^c010eb66:	83 c4 10             	add    $0x10,%esp$/;"	l
c010eb69	obj/kernel.asm	/^c010eb69:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010eb6c	obj/kernel.asm	/^c010eb6c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010eb70	obj/kernel.asm	/^c010eb70:	74 02                	je     c010eb74 <vfs_set_curdir+0x9f>$/;"	l
c010eb72	obj/kernel.asm	/^c010eb72:	eb 49                	jmp    c010ebbd <vfs_set_curdir+0xe8>$/;"	l
c010eb74	obj/kernel.asm	/^c010eb74:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010eb77	obj/kernel.asm	/^c010eb77:	25 00 70 00 00       	and    $0x7000,%eax$/;"	l
c010eb7c	obj/kernel.asm	/^c010eb7c:	3d 00 20 00 00       	cmp    $0x2000,%eax$/;"	l
c010eb81	obj/kernel.asm	/^c010eb81:	74 0a                	je     c010eb8d <vfs_set_curdir+0xb8>$/;"	l
c010eb83	obj/kernel.asm	/^c010eb83:	c7 45 f4 ee ff ff ff 	movl   $0xffffffee,-0xc(%ebp)$/;"	l
c010eb8a	obj/kernel.asm	/^c010eb8a:	90                   	nop$/;"	l
c010eb8b	obj/kernel.asm	/^c010eb8b:	eb 30                	jmp    c010ebbd <vfs_set_curdir+0xe8>$/;"	l
c010eb8d	obj/kernel.asm	/^c010eb8d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010eb90	obj/kernel.asm	/^c010eb90:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010eb93	obj/kernel.asm	/^c010eb93:	e8 2d 05 00 00       	call   c010f0c5 <inode_ref_inc>$/;"	l
c010eb98	obj/kernel.asm	/^c010eb98:	83 c4 10             	add    $0x10,%esp$/;"	l
c010eb9b	obj/kernel.asm	/^c010eb9b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010eb9e	obj/kernel.asm	/^c010eb9e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010eba1	obj/kernel.asm	/^c010eba1:	e8 a4 fe ff ff       	call   c010ea4a <set_cwd_nolock>$/;"	l
c010eba6	obj/kernel.asm	/^c010eba6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010eba9	obj/kernel.asm	/^c010eba9:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ebad	obj/kernel.asm	/^c010ebad:	74 0e                	je     c010ebbd <vfs_set_curdir+0xe8>$/;"	l
c010ebaf	obj/kernel.asm	/^c010ebaf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ebb2	obj/kernel.asm	/^c010ebb2:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010ebb5	obj/kernel.asm	/^c010ebb5:	e8 25 05 00 00       	call   c010f0df <inode_ref_dec>$/;"	l
c010ebba	obj/kernel.asm	/^c010ebba:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ebbd	obj/kernel.asm	/^c010ebbd:	e8 bc fe ff ff       	call   c010ea7e <unlock_cfs>$/;"	l
c010ebc2	obj/kernel.asm	/^c010ebc2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ebc5	obj/kernel.asm	/^c010ebc5:	c9                   	leave  $/;"	l
c010ebc6	obj/kernel.asm	/^c010ebc6:	c3                   	ret    $/;"	l
c010ebc7	obj/kernel.asm	/^c010ebc7 <vfs_chdir>:$/;"	l
c010ebc7	obj/kernel.asm	/^c010ebc7:	55                   	push   %ebp$/;"	l
c010ebc8	obj/kernel.asm	/^c010ebc8:	89 e5                	mov    %esp,%ebp$/;"	l
c010ebca	obj/kernel.asm	/^c010ebca:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ebcd	obj/kernel.asm	/^c010ebcd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ebd0	obj/kernel.asm	/^c010ebd0:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c010ebd3	obj/kernel.asm	/^c010ebd3:	50                   	push   %eax$/;"	l
c010ebd4	obj/kernel.asm	/^c010ebd4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ebd7	obj/kernel.asm	/^c010ebd7:	e8 02 03 00 00       	call   c010eede <vfs_lookup>$/;"	l
c010ebdc	obj/kernel.asm	/^c010ebdc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ebdf	obj/kernel.asm	/^c010ebdf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ebe2	obj/kernel.asm	/^c010ebe2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ebe6	obj/kernel.asm	/^c010ebe6:	75 21                	jne    c010ec09 <vfs_chdir+0x42>$/;"	l
c010ebe8	obj/kernel.asm	/^c010ebe8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ebeb	obj/kernel.asm	/^c010ebeb:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ebee	obj/kernel.asm	/^c010ebee:	50                   	push   %eax$/;"	l
c010ebef	obj/kernel.asm	/^c010ebef:	e8 e1 fe ff ff       	call   c010ead5 <vfs_set_curdir>$/;"	l
c010ebf4	obj/kernel.asm	/^c010ebf4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ebf7	obj/kernel.asm	/^c010ebf7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ebfa	obj/kernel.asm	/^c010ebfa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ebfd	obj/kernel.asm	/^c010ebfd:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ec00	obj/kernel.asm	/^c010ec00:	50                   	push   %eax$/;"	l
c010ec01	obj/kernel.asm	/^c010ec01:	e8 d9 04 00 00       	call   c010f0df <inode_ref_dec>$/;"	l
c010ec06	obj/kernel.asm	/^c010ec06:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ec09	obj/kernel.asm	/^c010ec09:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ec0c	obj/kernel.asm	/^c010ec0c:	c9                   	leave  $/;"	l
c010ec0d	obj/kernel.asm	/^c010ec0d:	c3                   	ret    $/;"	l
c010ec0e	obj/kernel.asm	/^c010ec0e <vfs_getcwd>:$/;"	l
c010ec0e	obj/kernel.asm	/^c010ec0e:	55                   	push   %ebp$/;"	l
c010ec0f	obj/kernel.asm	/^c010ec0f:	89 e5                	mov    %esp,%ebp$/;"	l
c010ec11	obj/kernel.asm	/^c010ec11:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ec14	obj/kernel.asm	/^c010ec14:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ec17	obj/kernel.asm	/^c010ec17:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c010ec1a	obj/kernel.asm	/^c010ec1a:	50                   	push   %eax$/;"	l
c010ec1b	obj/kernel.asm	/^c010ec1b:	e8 7d fe ff ff       	call   c010ea9d <vfs_get_curdir>$/;"	l
c010ec20	obj/kernel.asm	/^c010ec20:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ec23	obj/kernel.asm	/^c010ec23:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ec26	obj/kernel.asm	/^c010ec26:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ec2a	obj/kernel.asm	/^c010ec2a:	74 08                	je     c010ec34 <vfs_getcwd+0x26>$/;"	l
c010ec2c	obj/kernel.asm	/^c010ec2c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ec2f	obj/kernel.asm	/^c010ec2f:	e9 07 01 00 00       	jmp    c010ed3b <vfs_getcwd+0x12d>$/;"	l
c010ec34	obj/kernel.asm	/^c010ec34:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ec37	obj/kernel.asm	/^c010ec37:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c010ec3a	obj/kernel.asm	/^c010ec3a:	85 c0                	test   %eax,%eax$/;"	l
c010ec3c	obj/kernel.asm	/^c010ec3c:	75 16                	jne    c010ec54 <vfs_getcwd+0x46>$/;"	l
c010ec3e	obj/kernel.asm	/^c010ec3e:	68 bb 72 11 c0       	push   $0xc01172bb$/;"	l
c010ec43	obj/kernel.asm	/^c010ec43:	68 88 72 11 c0       	push   $0xc0117288$/;"	l
c010ec48	obj/kernel.asm	/^c010ec48:	6a 6e                	push   $0x6e$/;"	l
c010ec4a	obj/kernel.asm	/^c010ec4a:	68 9d 72 11 c0       	push   $0xc011729d$/;"	l
c010ec4f	obj/kernel.asm	/^c010ec4f:	e8 7b 18 ff ff       	call   c01004cf <__panic>$/;"	l
c010ec54	obj/kernel.asm	/^c010ec54:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ec57	obj/kernel.asm	/^c010ec57:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c010ec5a	obj/kernel.asm	/^c010ec5a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ec5d	obj/kernel.asm	/^c010ec5d:	50                   	push   %eax$/;"	l
c010ec5e	obj/kernel.asm	/^c010ec5e:	e8 c3 f7 ff ff       	call   c010e426 <vfs_get_devname>$/;"	l
c010ec63	obj/kernel.asm	/^c010ec63:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ec66	obj/kernel.asm	/^c010ec66:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ec69	obj/kernel.asm	/^c010ec69:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ec6c	obj/kernel.asm	/^c010ec6c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010ec6f	obj/kernel.asm	/^c010ec6f:	e8 c1 47 00 00       	call   c0113435 <strlen>$/;"	l
c010ec74	obj/kernel.asm	/^c010ec74:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ec77	obj/kernel.asm	/^c010ec77:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ec7a	obj/kernel.asm	/^c010ec7a:	6a 00                	push   $0x0$/;"	l
c010ec7c	obj/kernel.asm	/^c010ec7c:	6a 01                	push   $0x1$/;"	l
c010ec7e	obj/kernel.asm	/^c010ec7e:	50                   	push   %eax$/;"	l
c010ec7f	obj/kernel.asm	/^c010ec7f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010ec82	obj/kernel.asm	/^c010ec82:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ec85	obj/kernel.asm	/^c010ec85:	e8 02 c1 ff ff       	call   c010ad8c <iobuf_move>$/;"	l
c010ec8a	obj/kernel.asm	/^c010ec8a:	83 c4 20             	add    $0x20,%esp$/;"	l
c010ec8d	obj/kernel.asm	/^c010ec8d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ec90	obj/kernel.asm	/^c010ec90:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ec94	obj/kernel.asm	/^c010ec94:	74 05                	je     c010ec9b <vfs_getcwd+0x8d>$/;"	l
c010ec96	obj/kernel.asm	/^c010ec96:	e9 8e 00 00 00       	jmp    c010ed29 <vfs_getcwd+0x11b>$/;"	l
c010ec9b	obj/kernel.asm	/^c010ec9b:	c6 45 e7 3a          	movb   $0x3a,-0x19(%ebp)$/;"	l
c010ec9f	obj/kernel.asm	/^c010ec9f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010eca2	obj/kernel.asm	/^c010eca2:	6a 00                	push   $0x0$/;"	l
c010eca4	obj/kernel.asm	/^c010eca4:	6a 01                	push   $0x1$/;"	l
c010eca6	obj/kernel.asm	/^c010eca6:	6a 01                	push   $0x1$/;"	l
c010eca8	obj/kernel.asm	/^c010eca8:	8d 45 e7             	lea    -0x19(%ebp),%eax$/;"	l
c010ecab	obj/kernel.asm	/^c010ecab:	50                   	push   %eax$/;"	l
c010ecac	obj/kernel.asm	/^c010ecac:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ecaf	obj/kernel.asm	/^c010ecaf:	e8 d8 c0 ff ff       	call   c010ad8c <iobuf_move>$/;"	l
c010ecb4	obj/kernel.asm	/^c010ecb4:	83 c4 20             	add    $0x20,%esp$/;"	l
c010ecb7	obj/kernel.asm	/^c010ecb7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ecba	obj/kernel.asm	/^c010ecba:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ecbe	obj/kernel.asm	/^c010ecbe:	74 02                	je     c010ecc2 <vfs_getcwd+0xb4>$/;"	l
c010ecc0	obj/kernel.asm	/^c010ecc0:	eb 67                	jmp    c010ed29 <vfs_getcwd+0x11b>$/;"	l
c010ecc2	obj/kernel.asm	/^c010ecc2:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ecc5	obj/kernel.asm	/^c010ecc5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ecc8	obj/kernel.asm	/^c010ecc8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010eccc	obj/kernel.asm	/^c010eccc:	74 17                	je     c010ece5 <vfs_getcwd+0xd7>$/;"	l
c010ecce	obj/kernel.asm	/^c010ecce:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ecd1	obj/kernel.asm	/^c010ecd1:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ecd4	obj/kernel.asm	/^c010ecd4:	85 c0                	test   %eax,%eax$/;"	l
c010ecd6	obj/kernel.asm	/^c010ecd6:	74 0d                	je     c010ece5 <vfs_getcwd+0xd7>$/;"	l
c010ecd8	obj/kernel.asm	/^c010ecd8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ecdb	obj/kernel.asm	/^c010ecdb:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ecde	obj/kernel.asm	/^c010ecde:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010ece1	obj/kernel.asm	/^c010ece1:	85 c0                	test   %eax,%eax$/;"	l
c010ece3	obj/kernel.asm	/^c010ece3:	75 16                	jne    c010ecfb <vfs_getcwd+0xed>$/;"	l
c010ece5	obj/kernel.asm	/^c010ece5:	68 d0 72 11 c0       	push   $0xc01172d0$/;"	l
c010ecea	obj/kernel.asm	/^c010ecea:	68 88 72 11 c0       	push   $0xc0117288$/;"	l
c010ecef	obj/kernel.asm	/^c010ecef:	6a 78                	push   $0x78$/;"	l
c010ecf1	obj/kernel.asm	/^c010ecf1:	68 9d 72 11 c0       	push   $0xc011729d$/;"	l
c010ecf6	obj/kernel.asm	/^c010ecf6:	e8 d4 17 ff ff       	call   c01004cf <__panic>$/;"	l
c010ecfb	obj/kernel.asm	/^c010ecfb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ecfe	obj/kernel.asm	/^c010ecfe:	68 21 73 11 c0       	push   $0xc0117321$/;"	l
c010ed03	obj/kernel.asm	/^c010ed03:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010ed06	obj/kernel.asm	/^c010ed06:	e8 8c 05 00 00       	call   c010f297 <inode_check>$/;"	l
c010ed0b	obj/kernel.asm	/^c010ed0b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ed0e	obj/kernel.asm	/^c010ed0e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ed11	obj/kernel.asm	/^c010ed11:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ed14	obj/kernel.asm	/^c010ed14:	8b 40 1c             	mov    0x1c(%eax),%eax$/;"	l
c010ed17	obj/kernel.asm	/^c010ed17:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c010ed1a	obj/kernel.asm	/^c010ed1a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ed1d	obj/kernel.asm	/^c010ed1d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010ed20	obj/kernel.asm	/^c010ed20:	52                   	push   %edx$/;"	l
c010ed21	obj/kernel.asm	/^c010ed21:	ff d0                	call   *%eax$/;"	l
c010ed23	obj/kernel.asm	/^c010ed23:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ed26	obj/kernel.asm	/^c010ed26:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ed29	obj/kernel.asm	/^c010ed29:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ed2c	obj/kernel.asm	/^c010ed2c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ed2f	obj/kernel.asm	/^c010ed2f:	50                   	push   %eax$/;"	l
c010ed30	obj/kernel.asm	/^c010ed30:	e8 aa 03 00 00       	call   c010f0df <inode_ref_dec>$/;"	l
c010ed35	obj/kernel.asm	/^c010ed35:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ed38	obj/kernel.asm	/^c010ed38:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ed3b	obj/kernel.asm	/^c010ed3b:	c9                   	leave  $/;"	l
c010ed3c	obj/kernel.asm	/^c010ed3c:	c3                   	ret    $/;"	l
c010ed3d	obj/kernel.asm	/^c010ed3d <get_device>:$/;"	l
c010ed3d	obj/kernel.asm	/^c010ed3d:	55                   	push   %ebp$/;"	l
c010ed3e	obj/kernel.asm	/^c010ed3e:	89 e5                	mov    %esp,%ebp$/;"	l
c010ed40	obj/kernel.asm	/^c010ed40:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010ed43	obj/kernel.asm	/^c010ed43:	c7 45 f0 ff ff ff ff 	movl   $0xffffffff,-0x10(%ebp)$/;"	l
c010ed4a	obj/kernel.asm	/^c010ed4a:	c7 45 ec ff ff ff ff 	movl   $0xffffffff,-0x14(%ebp)$/;"	l
c010ed51	obj/kernel.asm	/^c010ed51:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010ed58	obj/kernel.asm	/^c010ed58:	eb 32                	jmp    c010ed8c <get_device+0x4f>$/;"	l
c010ed5a	obj/kernel.asm	/^c010ed5a:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010ed5d	obj/kernel.asm	/^c010ed5d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ed60	obj/kernel.asm	/^c010ed60:	01 d0                	add    %edx,%eax$/;"	l
c010ed62	obj/kernel.asm	/^c010ed62:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ed65	obj/kernel.asm	/^c010ed65:	3c 3a                	cmp    $0x3a,%al$/;"	l
c010ed67	obj/kernel.asm	/^c010ed67:	75 08                	jne    c010ed71 <get_device+0x34>$/;"	l
c010ed69	obj/kernel.asm	/^c010ed69:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ed6c	obj/kernel.asm	/^c010ed6c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ed6f	obj/kernel.asm	/^c010ed6f:	eb 2a                	jmp    c010ed9b <get_device+0x5e>$/;"	l
c010ed71	obj/kernel.asm	/^c010ed71:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010ed74	obj/kernel.asm	/^c010ed74:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ed77	obj/kernel.asm	/^c010ed77:	01 d0                	add    %edx,%eax$/;"	l
c010ed79	obj/kernel.asm	/^c010ed79:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ed7c	obj/kernel.asm	/^c010ed7c:	3c 2f                	cmp    $0x2f,%al$/;"	l
c010ed7e	obj/kernel.asm	/^c010ed7e:	75 08                	jne    c010ed88 <get_device+0x4b>$/;"	l
c010ed80	obj/kernel.asm	/^c010ed80:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ed83	obj/kernel.asm	/^c010ed83:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ed86	obj/kernel.asm	/^c010ed86:	eb 13                	jmp    c010ed9b <get_device+0x5e>$/;"	l
c010ed88	obj/kernel.asm	/^c010ed88:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010ed8c	obj/kernel.asm	/^c010ed8c:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010ed8f	obj/kernel.asm	/^c010ed8f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ed92	obj/kernel.asm	/^c010ed92:	01 d0                	add    %edx,%eax$/;"	l
c010ed94	obj/kernel.asm	/^c010ed94:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ed97	obj/kernel.asm	/^c010ed97:	84 c0                	test   %al,%al$/;"	l
c010ed99	obj/kernel.asm	/^c010ed99:	75 bf                	jne    c010ed5a <get_device+0x1d>$/;"	l
c010ed9b	obj/kernel.asm	/^c010ed9b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010ed9f	obj/kernel.asm	/^c010ed9f:	79 21                	jns    c010edc2 <get_device+0x85>$/;"	l
c010eda1	obj/kernel.asm	/^c010eda1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010eda5	obj/kernel.asm	/^c010eda5:	74 1b                	je     c010edc2 <get_device+0x85>$/;"	l
c010eda7	obj/kernel.asm	/^c010eda7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010edaa	obj/kernel.asm	/^c010edaa:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010edad	obj/kernel.asm	/^c010edad:	89 10                	mov    %edx,(%eax)$/;"	l
c010edaf	obj/kernel.asm	/^c010edaf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010edb2	obj/kernel.asm	/^c010edb2:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010edb5	obj/kernel.asm	/^c010edb5:	e8 e3 fc ff ff       	call   c010ea9d <vfs_get_curdir>$/;"	l
c010edba	obj/kernel.asm	/^c010edba:	83 c4 10             	add    $0x10,%esp$/;"	l
c010edbd	obj/kernel.asm	/^c010edbd:	e9 1a 01 00 00       	jmp    c010eedc <get_device+0x19f>$/;"	l
c010edc2	obj/kernel.asm	/^c010edc2:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010edc6	obj/kernel.asm	/^c010edc6:	7e 41                	jle    c010ee09 <get_device+0xcc>$/;"	l
c010edc8	obj/kernel.asm	/^c010edc8:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010edcb	obj/kernel.asm	/^c010edcb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010edce	obj/kernel.asm	/^c010edce:	01 d0                	add    %edx,%eax$/;"	l
c010edd0	obj/kernel.asm	/^c010edd0:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c010edd3	obj/kernel.asm	/^c010edd3:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c010edd7	obj/kernel.asm	/^c010edd7:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010edda	obj/kernel.asm	/^c010edda:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eddd	obj/kernel.asm	/^c010eddd:	01 d0                	add    %edx,%eax$/;"	l
c010eddf	obj/kernel.asm	/^c010eddf:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ede2	obj/kernel.asm	/^c010ede2:	3c 2f                	cmp    $0x2f,%al$/;"	l
c010ede4	obj/kernel.asm	/^c010ede4:	74 ed                	je     c010edd3 <get_device+0x96>$/;"	l
c010ede6	obj/kernel.asm	/^c010ede6:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010ede9	obj/kernel.asm	/^c010ede9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010edec	obj/kernel.asm	/^c010edec:	01 c2                	add    %eax,%edx$/;"	l
c010edee	obj/kernel.asm	/^c010edee:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010edf1	obj/kernel.asm	/^c010edf1:	89 10                	mov    %edx,(%eax)$/;"	l
c010edf3	obj/kernel.asm	/^c010edf3:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010edf6	obj/kernel.asm	/^c010edf6:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010edf9	obj/kernel.asm	/^c010edf9:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010edfc	obj/kernel.asm	/^c010edfc:	e8 0e f5 ff ff       	call   c010e30f <vfs_get_root>$/;"	l
c010ee01	obj/kernel.asm	/^c010ee01:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ee04	obj/kernel.asm	/^c010ee04:	e9 d3 00 00 00       	jmp    c010eedc <get_device+0x19f>$/;"	l
c010ee09	obj/kernel.asm	/^c010ee09:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ee0c	obj/kernel.asm	/^c010ee0c:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ee0f	obj/kernel.asm	/^c010ee0f:	3c 2f                	cmp    $0x2f,%al$/;"	l
c010ee11	obj/kernel.asm	/^c010ee11:	75 23                	jne    c010ee36 <get_device+0xf9>$/;"	l
c010ee13	obj/kernel.asm	/^c010ee13:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ee16	obj/kernel.asm	/^c010ee16:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c010ee19	obj/kernel.asm	/^c010ee19:	e8 99 09 00 00       	call   c010f7b7 <vfs_get_bootfs>$/;"	l
c010ee1e	obj/kernel.asm	/^c010ee1e:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ee21	obj/kernel.asm	/^c010ee21:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ee24	obj/kernel.asm	/^c010ee24:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010ee28	obj/kernel.asm	/^c010ee28:	0f 84 93 00 00 00    	je     c010eec1 <get_device+0x184>$/;"	l
c010ee2e	obj/kernel.asm	/^c010ee2e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ee31	obj/kernel.asm	/^c010ee31:	e9 a6 00 00 00       	jmp    c010eedc <get_device+0x19f>$/;"	l
c010ee36	obj/kernel.asm	/^c010ee36:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ee39	obj/kernel.asm	/^c010ee39:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ee3c	obj/kernel.asm	/^c010ee3c:	3c 3a                	cmp    $0x3a,%al$/;"	l
c010ee3e	obj/kernel.asm	/^c010ee3e:	74 16                	je     c010ee56 <get_device+0x119>$/;"	l
c010ee40	obj/kernel.asm	/^c010ee40:	68 2c 73 11 c0       	push   $0xc011732c$/;"	l
c010ee45	obj/kernel.asm	/^c010ee45:	68 39 73 11 c0       	push   $0xc0117339$/;"	l
c010ee4a	obj/kernel.asm	/^c010ee4a:	6a 33                	push   $0x33$/;"	l
c010ee4c	obj/kernel.asm	/^c010ee4c:	68 4e 73 11 c0       	push   $0xc011734e$/;"	l
c010ee51	obj/kernel.asm	/^c010ee51:	e8 79 16 ff ff       	call   c01004cf <__panic>$/;"	l
c010ee56	obj/kernel.asm	/^c010ee56:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ee59	obj/kernel.asm	/^c010ee59:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c010ee5c	obj/kernel.asm	/^c010ee5c:	50                   	push   %eax$/;"	l
c010ee5d	obj/kernel.asm	/^c010ee5d:	e8 3b fc ff ff       	call   c010ea9d <vfs_get_curdir>$/;"	l
c010ee62	obj/kernel.asm	/^c010ee62:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ee65	obj/kernel.asm	/^c010ee65:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010ee68	obj/kernel.asm	/^c010ee68:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010ee6c	obj/kernel.asm	/^c010ee6c:	74 05                	je     c010ee73 <get_device+0x136>$/;"	l
c010ee6e	obj/kernel.asm	/^c010ee6e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010ee71	obj/kernel.asm	/^c010ee71:	eb 69                	jmp    c010eedc <get_device+0x19f>$/;"	l
c010ee73	obj/kernel.asm	/^c010ee73:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010ee76	obj/kernel.asm	/^c010ee76:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c010ee79	obj/kernel.asm	/^c010ee79:	85 c0                	test   %eax,%eax$/;"	l
c010ee7b	obj/kernel.asm	/^c010ee7b:	75 16                	jne    c010ee93 <get_device+0x156>$/;"	l
c010ee7d	obj/kernel.asm	/^c010ee7d:	68 66 73 11 c0       	push   $0xc0117366$/;"	l
c010ee82	obj/kernel.asm	/^c010ee82:	68 39 73 11 c0       	push   $0xc0117339$/;"	l
c010ee87	obj/kernel.asm	/^c010ee87:	6a 39                	push   $0x39$/;"	l
c010ee89	obj/kernel.asm	/^c010ee89:	68 4e 73 11 c0       	push   $0xc011734e$/;"	l
c010ee8e	obj/kernel.asm	/^c010ee8e:	e8 3c 16 ff ff       	call   c01004cf <__panic>$/;"	l
c010ee93	obj/kernel.asm	/^c010ee93:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010ee96	obj/kernel.asm	/^c010ee96:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c010ee99	obj/kernel.asm	/^c010ee99:	8b 40 74             	mov    0x74(%eax),%eax$/;"	l
c010ee9c	obj/kernel.asm	/^c010ee9c:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c010ee9f	obj/kernel.asm	/^c010ee9f:	8b 52 38             	mov    0x38(%edx),%edx$/;"	l
c010eea2	obj/kernel.asm	/^c010eea2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010eea5	obj/kernel.asm	/^c010eea5:	52                   	push   %edx$/;"	l
c010eea6	obj/kernel.asm	/^c010eea6:	ff d0                	call   *%eax$/;"	l
c010eea8	obj/kernel.asm	/^c010eea8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010eeab	obj/kernel.asm	/^c010eeab:	89 c2                	mov    %eax,%edx$/;"	l
c010eead	obj/kernel.asm	/^c010eead:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010eeb0	obj/kernel.asm	/^c010eeb0:	89 10                	mov    %edx,(%eax)$/;"	l
c010eeb2	obj/kernel.asm	/^c010eeb2:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010eeb5	obj/kernel.asm	/^c010eeb5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010eeb8	obj/kernel.asm	/^c010eeb8:	50                   	push   %eax$/;"	l
c010eeb9	obj/kernel.asm	/^c010eeb9:	e8 21 02 00 00       	call   c010f0df <inode_ref_dec>$/;"	l
c010eebe	obj/kernel.asm	/^c010eebe:	83 c4 10             	add    $0x10,%esp$/;"	l
c010eec1	obj/kernel.asm	/^c010eec1:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c010eec5	obj/kernel.asm	/^c010eec5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eec8	obj/kernel.asm	/^c010eec8:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010eecb	obj/kernel.asm	/^c010eecb:	3c 2f                	cmp    $0x2f,%al$/;"	l
c010eecd	obj/kernel.asm	/^c010eecd:	74 f2                	je     c010eec1 <get_device+0x184>$/;"	l
c010eecf	obj/kernel.asm	/^c010eecf:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010eed2	obj/kernel.asm	/^c010eed2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010eed5	obj/kernel.asm	/^c010eed5:	89 10                	mov    %edx,(%eax)$/;"	l
c010eed7	obj/kernel.asm	/^c010eed7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010eedc	obj/kernel.asm	/^c010eedc:	c9                   	leave  $/;"	l
c010eedd	obj/kernel.asm	/^c010eedd:	c3                   	ret    $/;"	l
c010eede	obj/kernel.asm	/^c010eede <vfs_lookup>:$/;"	l
c010eede	obj/kernel.asm	/^c010eede:	55                   	push   %ebp$/;"	l
c010eedf	obj/kernel.asm	/^c010eedf:	89 e5                	mov    %esp,%ebp$/;"	l
c010eee1	obj/kernel.asm	/^c010eee1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010eee4	obj/kernel.asm	/^c010eee4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eee7	obj/kernel.asm	/^c010eee7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010eeea	obj/kernel.asm	/^c010eeea:	8d 55 ec             	lea    -0x14(%ebp),%edx$/;"	l
c010eeed	obj/kernel.asm	/^c010eeed:	52                   	push   %edx$/;"	l
c010eeee	obj/kernel.asm	/^c010eeee:	8d 55 08             	lea    0x8(%ebp),%edx$/;"	l
c010eef1	obj/kernel.asm	/^c010eef1:	52                   	push   %edx$/;"	l
c010eef2	obj/kernel.asm	/^c010eef2:	50                   	push   %eax$/;"	l
c010eef3	obj/kernel.asm	/^c010eef3:	e8 45 fe ff ff       	call   c010ed3d <get_device>$/;"	l
c010eef8	obj/kernel.asm	/^c010eef8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010eefb	obj/kernel.asm	/^c010eefb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010eefe	obj/kernel.asm	/^c010eefe:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010ef02	obj/kernel.asm	/^c010ef02:	74 08                	je     c010ef0c <vfs_lookup+0x2e>$/;"	l
c010ef04	obj/kernel.asm	/^c010ef04:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ef07	obj/kernel.asm	/^c010ef07:	e9 96 00 00 00       	jmp    c010efa2 <vfs_lookup+0xc4>$/;"	l
c010ef0c	obj/kernel.asm	/^c010ef0c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ef0f	obj/kernel.asm	/^c010ef0f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ef12	obj/kernel.asm	/^c010ef12:	84 c0                	test   %al,%al$/;"	l
c010ef14	obj/kernel.asm	/^c010ef14:	74 7f                	je     c010ef95 <vfs_lookup+0xb7>$/;"	l
c010ef16	obj/kernel.asm	/^c010ef16:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ef19	obj/kernel.asm	/^c010ef19:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010ef1c	obj/kernel.asm	/^c010ef1c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010ef20	obj/kernel.asm	/^c010ef20:	74 17                	je     c010ef39 <vfs_lookup+0x5b>$/;"	l
c010ef22	obj/kernel.asm	/^c010ef22:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ef25	obj/kernel.asm	/^c010ef25:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ef28	obj/kernel.asm	/^c010ef28:	85 c0                	test   %eax,%eax$/;"	l
c010ef2a	obj/kernel.asm	/^c010ef2a:	74 0d                	je     c010ef39 <vfs_lookup+0x5b>$/;"	l
c010ef2c	obj/kernel.asm	/^c010ef2c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ef2f	obj/kernel.asm	/^c010ef2f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ef32	obj/kernel.asm	/^c010ef32:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c010ef35	obj/kernel.asm	/^c010ef35:	85 c0                	test   %eax,%eax$/;"	l
c010ef37	obj/kernel.asm	/^c010ef37:	75 16                	jne    c010ef4f <vfs_lookup+0x71>$/;"	l
c010ef39	obj/kernel.asm	/^c010ef39:	68 7c 73 11 c0       	push   $0xc011737c$/;"	l
c010ef3e	obj/kernel.asm	/^c010ef3e:	68 39 73 11 c0       	push   $0xc0117339$/;"	l
c010ef43	obj/kernel.asm	/^c010ef43:	6a 4f                	push   $0x4f$/;"	l
c010ef45	obj/kernel.asm	/^c010ef45:	68 4e 73 11 c0       	push   $0xc011734e$/;"	l
c010ef4a	obj/kernel.asm	/^c010ef4a:	e8 80 15 ff ff       	call   c01004cf <__panic>$/;"	l
c010ef4f	obj/kernel.asm	/^c010ef4f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010ef52	obj/kernel.asm	/^c010ef52:	68 cb 73 11 c0       	push   $0xc01173cb$/;"	l
c010ef57	obj/kernel.asm	/^c010ef57:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010ef5a	obj/kernel.asm	/^c010ef5a:	e8 38 03 00 00       	call   c010f297 <inode_check>$/;"	l
c010ef5f	obj/kernel.asm	/^c010ef5f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ef62	obj/kernel.asm	/^c010ef62:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ef65	obj/kernel.asm	/^c010ef65:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010ef68	obj/kernel.asm	/^c010ef68:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c010ef6b	obj/kernel.asm	/^c010ef6b:	8b 4d 08             	mov    0x8(%ebp),%ecx$/;"	l
c010ef6e	obj/kernel.asm	/^c010ef6e:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010ef71	obj/kernel.asm	/^c010ef71:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010ef74	obj/kernel.asm	/^c010ef74:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010ef77	obj/kernel.asm	/^c010ef77:	51                   	push   %ecx$/;"	l
c010ef78	obj/kernel.asm	/^c010ef78:	52                   	push   %edx$/;"	l
c010ef79	obj/kernel.asm	/^c010ef79:	ff d0                	call   *%eax$/;"	l
c010ef7b	obj/kernel.asm	/^c010ef7b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ef7e	obj/kernel.asm	/^c010ef7e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ef81	obj/kernel.asm	/^c010ef81:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010ef84	obj/kernel.asm	/^c010ef84:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ef87	obj/kernel.asm	/^c010ef87:	50                   	push   %eax$/;"	l
c010ef88	obj/kernel.asm	/^c010ef88:	e8 52 01 00 00       	call   c010f0df <inode_ref_dec>$/;"	l
c010ef8d	obj/kernel.asm	/^c010ef8d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ef90	obj/kernel.asm	/^c010ef90:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ef93	obj/kernel.asm	/^c010ef93:	eb 0d                	jmp    c010efa2 <vfs_lookup+0xc4>$/;"	l
c010ef95	obj/kernel.asm	/^c010ef95:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c010ef98	obj/kernel.asm	/^c010ef98:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ef9b	obj/kernel.asm	/^c010ef9b:	89 10                	mov    %edx,(%eax)$/;"	l
c010ef9d	obj/kernel.asm	/^c010ef9d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010efa2	obj/kernel.asm	/^c010efa2:	c9                   	leave  $/;"	l
c010efa3	obj/kernel.asm	/^c010efa3:	c3                   	ret    $/;"	l
c010efa4	obj/kernel.asm	/^c010efa4 <vfs_lookup_parent>:$/;"	l
c010efa4	obj/kernel.asm	/^c010efa4:	55                   	push   %ebp$/;"	l
c010efa5	obj/kernel.asm	/^c010efa5:	89 e5                	mov    %esp,%ebp$/;"	l
c010efa7	obj/kernel.asm	/^c010efa7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010efaa	obj/kernel.asm	/^c010efaa:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010efad	obj/kernel.asm	/^c010efad:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010efb0	obj/kernel.asm	/^c010efb0:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c010efb3	obj/kernel.asm	/^c010efb3:	52                   	push   %edx$/;"	l
c010efb4	obj/kernel.asm	/^c010efb4:	8d 55 08             	lea    0x8(%ebp),%edx$/;"	l
c010efb7	obj/kernel.asm	/^c010efb7:	52                   	push   %edx$/;"	l
c010efb8	obj/kernel.asm	/^c010efb8:	50                   	push   %eax$/;"	l
c010efb9	obj/kernel.asm	/^c010efb9:	e8 7f fd ff ff       	call   c010ed3d <get_device>$/;"	l
c010efbe	obj/kernel.asm	/^c010efbe:	83 c4 10             	add    $0x10,%esp$/;"	l
c010efc1	obj/kernel.asm	/^c010efc1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010efc4	obj/kernel.asm	/^c010efc4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010efc8	obj/kernel.asm	/^c010efc8:	74 05                	je     c010efcf <vfs_lookup_parent+0x2b>$/;"	l
c010efca	obj/kernel.asm	/^c010efca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010efcd	obj/kernel.asm	/^c010efcd:	eb 15                	jmp    c010efe4 <vfs_lookup_parent+0x40>$/;"	l
c010efcf	obj/kernel.asm	/^c010efcf:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010efd2	obj/kernel.asm	/^c010efd2:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010efd5	obj/kernel.asm	/^c010efd5:	89 10                	mov    %edx,(%eax)$/;"	l
c010efd7	obj/kernel.asm	/^c010efd7:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010efda	obj/kernel.asm	/^c010efda:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010efdd	obj/kernel.asm	/^c010efdd:	89 10                	mov    %edx,(%eax)$/;"	l
c010efdf	obj/kernel.asm	/^c010efdf:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010efe4	obj/kernel.asm	/^c010efe4:	c9                   	leave  $/;"	l
c010efe5	obj/kernel.asm	/^c010efe5:	c3                   	ret    $/;"	l
c010efe6	obj/kernel.asm	/^c010efe6 <inode_ref_count>:$/;"	l
c010efe6	obj/kernel.asm	/^c010efe6:	55                   	push   %ebp$/;"	l
c010efe7	obj/kernel.asm	/^c010efe7:	89 e5                	mov    %esp,%ebp$/;"	l
c010efe9	obj/kernel.asm	/^c010efe9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010efec	obj/kernel.asm	/^c010efec:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010efef	obj/kernel.asm	/^c010efef:	5d                   	pop    %ebp$/;"	l
c010eff0	obj/kernel.asm	/^c010eff0:	c3                   	ret    $/;"	l
c010eff1	obj/kernel.asm	/^c010eff1 <inode_open_count>:$/;"	l
c010eff1	obj/kernel.asm	/^c010eff1:	55                   	push   %ebp$/;"	l
c010eff2	obj/kernel.asm	/^c010eff2:	89 e5                	mov    %esp,%ebp$/;"	l
c010eff4	obj/kernel.asm	/^c010eff4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010eff7	obj/kernel.asm	/^c010eff7:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010effa	obj/kernel.asm	/^c010effa:	5d                   	pop    %ebp$/;"	l
c010effb	obj/kernel.asm	/^c010effb:	c3                   	ret    $/;"	l
c010effc	obj/kernel.asm	/^c010effc <__alloc_inode>:$/;"	l
c010effc	obj/kernel.asm	/^c010effc:	55                   	push   %ebp$/;"	l
c010effd	obj/kernel.asm	/^c010effd:	89 e5                	mov    %esp,%ebp$/;"	l
c010efff	obj/kernel.asm	/^c010efff:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f002	obj/kernel.asm	/^c010f002:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f005	obj/kernel.asm	/^c010f005:	6a 40                	push   $0x40$/;"	l
c010f007	obj/kernel.asm	/^c010f007:	e8 ea 83 ff ff       	call   c01073f6 <kmalloc>$/;"	l
c010f00c	obj/kernel.asm	/^c010f00c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f00f	obj/kernel.asm	/^c010f00f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f012	obj/kernel.asm	/^c010f012:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f016	obj/kernel.asm	/^c010f016:	74 09                	je     c010f021 <__alloc_inode+0x25>$/;"	l
c010f018	obj/kernel.asm	/^c010f018:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010f01b	obj/kernel.asm	/^c010f01b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f01e	obj/kernel.asm	/^c010f01e:	89 50 2c             	mov    %edx,0x2c(%eax)$/;"	l
c010f021	obj/kernel.asm	/^c010f021:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f024	obj/kernel.asm	/^c010f024:	c9                   	leave  $/;"	l
c010f025	obj/kernel.asm	/^c010f025:	c3                   	ret    $/;"	l
c010f026	obj/kernel.asm	/^c010f026 <inode_init>:$/;"	l
c010f026	obj/kernel.asm	/^c010f026:	55                   	push   %ebp$/;"	l
c010f027	obj/kernel.asm	/^c010f027:	89 e5                	mov    %esp,%ebp$/;"	l
c010f029	obj/kernel.asm	/^c010f029:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f02c	obj/kernel.asm	/^c010f02c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f02f	obj/kernel.asm	/^c010f02f:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%eax)$/;"	l
c010f036	obj/kernel.asm	/^c010f036:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f039	obj/kernel.asm	/^c010f039:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)$/;"	l
c010f040	obj/kernel.asm	/^c010f040:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f043	obj/kernel.asm	/^c010f043:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c010f046	obj/kernel.asm	/^c010f046:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c010f049	obj/kernel.asm	/^c010f049:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f04c	obj/kernel.asm	/^c010f04c:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c010f04f	obj/kernel.asm	/^c010f04f:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
c010f052	obj/kernel.asm	/^c010f052:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f055	obj/kernel.asm	/^c010f055:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f058	obj/kernel.asm	/^c010f058:	e8 68 00 00 00       	call   c010f0c5 <inode_ref_inc>$/;"	l
c010f05d	obj/kernel.asm	/^c010f05d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f060	obj/kernel.asm	/^c010f060:	c9                   	leave  $/;"	l
c010f061	obj/kernel.asm	/^c010f061:	c3                   	ret    $/;"	l
c010f062	obj/kernel.asm	/^c010f062 <inode_kill>:$/;"	l
c010f062	obj/kernel.asm	/^c010f062:	55                   	push   %ebp$/;"	l
c010f063	obj/kernel.asm	/^c010f063:	89 e5                	mov    %esp,%ebp$/;"	l
c010f065	obj/kernel.asm	/^c010f065:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f068	obj/kernel.asm	/^c010f068:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f06b	obj/kernel.asm	/^c010f06b:	e8 76 ff ff ff       	call   c010efe6 <inode_ref_count>$/;"	l
c010f070	obj/kernel.asm	/^c010f070:	83 c4 04             	add    $0x4,%esp$/;"	l
c010f073	obj/kernel.asm	/^c010f073:	85 c0                	test   %eax,%eax$/;"	l
c010f075	obj/kernel.asm	/^c010f075:	74 16                	je     c010f08d <inode_kill+0x2b>$/;"	l
c010f077	obj/kernel.asm	/^c010f077:	68 d4 73 11 c0       	push   $0xc01173d4$/;"	l
c010f07c	obj/kernel.asm	/^c010f07c:	68 ef 73 11 c0       	push   $0xc01173ef$/;"	l
c010f081	obj/kernel.asm	/^c010f081:	6a 29                	push   $0x29$/;"	l
c010f083	obj/kernel.asm	/^c010f083:	68 04 74 11 c0       	push   $0xc0117404$/;"	l
c010f088	obj/kernel.asm	/^c010f088:	e8 42 14 ff ff       	call   c01004cf <__panic>$/;"	l
c010f08d	obj/kernel.asm	/^c010f08d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f090	obj/kernel.asm	/^c010f090:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f093	obj/kernel.asm	/^c010f093:	e8 59 ff ff ff       	call   c010eff1 <inode_open_count>$/;"	l
c010f098	obj/kernel.asm	/^c010f098:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f09b	obj/kernel.asm	/^c010f09b:	85 c0                	test   %eax,%eax$/;"	l
c010f09d	obj/kernel.asm	/^c010f09d:	74 16                	je     c010f0b5 <inode_kill+0x53>$/;"	l
c010f09f	obj/kernel.asm	/^c010f09f:	68 18 74 11 c0       	push   $0xc0117418$/;"	l
c010f0a4	obj/kernel.asm	/^c010f0a4:	68 ef 73 11 c0       	push   $0xc01173ef$/;"	l
c010f0a9	obj/kernel.asm	/^c010f0a9:	6a 2a                	push   $0x2a$/;"	l
c010f0ab	obj/kernel.asm	/^c010f0ab:	68 04 74 11 c0       	push   $0xc0117404$/;"	l
c010f0b0	obj/kernel.asm	/^c010f0b0:	e8 1a 14 ff ff       	call   c01004cf <__panic>$/;"	l
c010f0b5	obj/kernel.asm	/^c010f0b5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f0b8	obj/kernel.asm	/^c010f0b8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f0bb	obj/kernel.asm	/^c010f0bb:	e8 4e 83 ff ff       	call   c010740e <kfree>$/;"	l
c010f0c0	obj/kernel.asm	/^c010f0c0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f0c3	obj/kernel.asm	/^c010f0c3:	c9                   	leave  $/;"	l
c010f0c4	obj/kernel.asm	/^c010f0c4:	c3                   	ret    $/;"	l
c010f0c5	obj/kernel.asm	/^c010f0c5 <inode_ref_inc>:$/;"	l
c010f0c5	obj/kernel.asm	/^c010f0c5:	55                   	push   %ebp$/;"	l
c010f0c6	obj/kernel.asm	/^c010f0c6:	89 e5                	mov    %esp,%ebp$/;"	l
c010f0c8	obj/kernel.asm	/^c010f0c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f0cb	obj/kernel.asm	/^c010f0cb:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010f0ce	obj/kernel.asm	/^c010f0ce:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010f0d1	obj/kernel.asm	/^c010f0d1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f0d4	obj/kernel.asm	/^c010f0d4:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
c010f0d7	obj/kernel.asm	/^c010f0d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f0da	obj/kernel.asm	/^c010f0da:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010f0dd	obj/kernel.asm	/^c010f0dd:	5d                   	pop    %ebp$/;"	l
c010f0de	obj/kernel.asm	/^c010f0de:	c3                   	ret    $/;"	l
c010f0df	obj/kernel.asm	/^c010f0df <inode_ref_dec>:$/;"	l
c010f0df	obj/kernel.asm	/^c010f0df:	55                   	push   %ebp$/;"	l
c010f0e0	obj/kernel.asm	/^c010f0e0:	89 e5                	mov    %esp,%ebp$/;"	l
c010f0e2	obj/kernel.asm	/^c010f0e2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f0e5	obj/kernel.asm	/^c010f0e5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f0e8	obj/kernel.asm	/^c010f0e8:	e8 f9 fe ff ff       	call   c010efe6 <inode_ref_count>$/;"	l
c010f0ed	obj/kernel.asm	/^c010f0ed:	83 c4 04             	add    $0x4,%esp$/;"	l
c010f0f0	obj/kernel.asm	/^c010f0f0:	85 c0                	test   %eax,%eax$/;"	l
c010f0f2	obj/kernel.asm	/^c010f0f2:	7f 16                	jg     c010f10a <inode_ref_dec+0x2b>$/;"	l
c010f0f4	obj/kernel.asm	/^c010f0f4:	68 34 74 11 c0       	push   $0xc0117434$/;"	l
c010f0f9	obj/kernel.asm	/^c010f0f9:	68 ef 73 11 c0       	push   $0xc01173ef$/;"	l
c010f0fe	obj/kernel.asm	/^c010f0fe:	6a 3f                	push   $0x3f$/;"	l
c010f100	obj/kernel.asm	/^c010f100:	68 04 74 11 c0       	push   $0xc0117404$/;"	l
c010f105	obj/kernel.asm	/^c010f105:	e8 c5 13 ff ff       	call   c01004cf <__panic>$/;"	l
c010f10a	obj/kernel.asm	/^c010f10a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f10d	obj/kernel.asm	/^c010f10d:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010f110	obj/kernel.asm	/^c010f110:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010f113	obj/kernel.asm	/^c010f113:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f116	obj/kernel.asm	/^c010f116:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
c010f119	obj/kernel.asm	/^c010f119:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f11c	obj/kernel.asm	/^c010f11c:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010f11f	obj/kernel.asm	/^c010f11f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f122	obj/kernel.asm	/^c010f122:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f126	obj/kernel.asm	/^c010f126:	0f 85 82 00 00 00    	jne    c010f1ae <inode_ref_dec+0xcf>$/;"	l
c010f12c	obj/kernel.asm	/^c010f12c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f12f	obj/kernel.asm	/^c010f12f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f132	obj/kernel.asm	/^c010f132:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f136	obj/kernel.asm	/^c010f136:	74 17                	je     c010f14f <inode_ref_dec+0x70>$/;"	l
c010f138	obj/kernel.asm	/^c010f138:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f13b	obj/kernel.asm	/^c010f13b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f13e	obj/kernel.asm	/^c010f13e:	85 c0                	test   %eax,%eax$/;"	l
c010f140	obj/kernel.asm	/^c010f140:	74 0d                	je     c010f14f <inode_ref_dec+0x70>$/;"	l
c010f142	obj/kernel.asm	/^c010f142:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f145	obj/kernel.asm	/^c010f145:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f148	obj/kernel.asm	/^c010f148:	8b 40 24             	mov    0x24(%eax),%eax$/;"	l
c010f14b	obj/kernel.asm	/^c010f14b:	85 c0                	test   %eax,%eax$/;"	l
c010f14d	obj/kernel.asm	/^c010f14d:	75 16                	jne    c010f165 <inode_ref_dec+0x86>$/;"	l
c010f14f	obj/kernel.asm	/^c010f14f:	68 50 74 11 c0       	push   $0xc0117450$/;"	l
c010f154	obj/kernel.asm	/^c010f154:	68 ef 73 11 c0       	push   $0xc01173ef$/;"	l
c010f159	obj/kernel.asm	/^c010f159:	6a 44                	push   $0x44$/;"	l
c010f15b	obj/kernel.asm	/^c010f15b:	68 04 74 11 c0       	push   $0xc0117404$/;"	l
c010f160	obj/kernel.asm	/^c010f160:	e8 6a 13 ff ff       	call   c01004cf <__panic>$/;"	l
c010f165	obj/kernel.asm	/^c010f165:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f168	obj/kernel.asm	/^c010f168:	68 a0 74 11 c0       	push   $0xc01174a0$/;"	l
c010f16d	obj/kernel.asm	/^c010f16d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010f170	obj/kernel.asm	/^c010f170:	e8 22 01 00 00       	call   c010f297 <inode_check>$/;"	l
c010f175	obj/kernel.asm	/^c010f175:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f178	obj/kernel.asm	/^c010f178:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f17b	obj/kernel.asm	/^c010f17b:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f17e	obj/kernel.asm	/^c010f17e:	8b 40 24             	mov    0x24(%eax),%eax$/;"	l
c010f181	obj/kernel.asm	/^c010f181:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f184	obj/kernel.asm	/^c010f184:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f187	obj/kernel.asm	/^c010f187:	ff d0                	call   *%eax$/;"	l
c010f189	obj/kernel.asm	/^c010f189:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f18c	obj/kernel.asm	/^c010f18c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f18f	obj/kernel.asm	/^c010f18f:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010f193	obj/kernel.asm	/^c010f193:	74 19                	je     c010f1ae <inode_ref_dec+0xcf>$/;"	l
c010f195	obj/kernel.asm	/^c010f195:	83 7d ec f1          	cmpl   $0xfffffff1,-0x14(%ebp)$/;"	l
c010f199	obj/kernel.asm	/^c010f199:	74 13                	je     c010f1ae <inode_ref_dec+0xcf>$/;"	l
c010f19b	obj/kernel.asm	/^c010f19b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f19e	obj/kernel.asm	/^c010f19e:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010f1a1	obj/kernel.asm	/^c010f1a1:	68 a8 74 11 c0       	push   $0xc01174a8$/;"	l
c010f1a6	obj/kernel.asm	/^c010f1a6:	e8 bf 11 ff ff       	call   c010036a <cprintf>$/;"	l
c010f1ab	obj/kernel.asm	/^c010f1ab:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f1ae	obj/kernel.asm	/^c010f1ae:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f1b1	obj/kernel.asm	/^c010f1b1:	c9                   	leave  $/;"	l
c010f1b2	obj/kernel.asm	/^c010f1b2:	c3                   	ret    $/;"	l
c010f1b3	obj/kernel.asm	/^c010f1b3 <inode_open_inc>:$/;"	l
c010f1b3	obj/kernel.asm	/^c010f1b3:	55                   	push   %ebp$/;"	l
c010f1b4	obj/kernel.asm	/^c010f1b4:	89 e5                	mov    %esp,%ebp$/;"	l
c010f1b6	obj/kernel.asm	/^c010f1b6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f1b9	obj/kernel.asm	/^c010f1b9:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010f1bc	obj/kernel.asm	/^c010f1bc:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010f1bf	obj/kernel.asm	/^c010f1bf:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f1c2	obj/kernel.asm	/^c010f1c2:	89 50 34             	mov    %edx,0x34(%eax)$/;"	l
c010f1c5	obj/kernel.asm	/^c010f1c5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f1c8	obj/kernel.asm	/^c010f1c8:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010f1cb	obj/kernel.asm	/^c010f1cb:	5d                   	pop    %ebp$/;"	l
c010f1cc	obj/kernel.asm	/^c010f1cc:	c3                   	ret    $/;"	l
c010f1cd	obj/kernel.asm	/^c010f1cd <inode_open_dec>:$/;"	l
c010f1cd	obj/kernel.asm	/^c010f1cd:	55                   	push   %ebp$/;"	l
c010f1ce	obj/kernel.asm	/^c010f1ce:	89 e5                	mov    %esp,%ebp$/;"	l
c010f1d0	obj/kernel.asm	/^c010f1d0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f1d3	obj/kernel.asm	/^c010f1d3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f1d6	obj/kernel.asm	/^c010f1d6:	e8 16 fe ff ff       	call   c010eff1 <inode_open_count>$/;"	l
c010f1db	obj/kernel.asm	/^c010f1db:	83 c4 04             	add    $0x4,%esp$/;"	l
c010f1de	obj/kernel.asm	/^c010f1de:	85 c0                	test   %eax,%eax$/;"	l
c010f1e0	obj/kernel.asm	/^c010f1e0:	7f 16                	jg     c010f1f8 <inode_open_dec+0x2b>$/;"	l
c010f1e2	obj/kernel.asm	/^c010f1e2:	68 c8 74 11 c0       	push   $0xc01174c8$/;"	l
c010f1e7	obj/kernel.asm	/^c010f1e7:	68 ef 73 11 c0       	push   $0xc01173ef$/;"	l
c010f1ec	obj/kernel.asm	/^c010f1ec:	6a 5c                	push   $0x5c$/;"	l
c010f1ee	obj/kernel.asm	/^c010f1ee:	68 04 74 11 c0       	push   $0xc0117404$/;"	l
c010f1f3	obj/kernel.asm	/^c010f1f3:	e8 d7 12 ff ff       	call   c01004cf <__panic>$/;"	l
c010f1f8	obj/kernel.asm	/^c010f1f8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f1fb	obj/kernel.asm	/^c010f1fb:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010f1fe	obj/kernel.asm	/^c010f1fe:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010f201	obj/kernel.asm	/^c010f201:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f204	obj/kernel.asm	/^c010f204:	89 50 34             	mov    %edx,0x34(%eax)$/;"	l
c010f207	obj/kernel.asm	/^c010f207:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f20a	obj/kernel.asm	/^c010f20a:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010f20d	obj/kernel.asm	/^c010f20d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f210	obj/kernel.asm	/^c010f210:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f214	obj/kernel.asm	/^c010f214:	75 7c                	jne    c010f292 <inode_open_dec+0xc5>$/;"	l
c010f216	obj/kernel.asm	/^c010f216:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f219	obj/kernel.asm	/^c010f219:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f21c	obj/kernel.asm	/^c010f21c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f220	obj/kernel.asm	/^c010f220:	74 17                	je     c010f239 <inode_open_dec+0x6c>$/;"	l
c010f222	obj/kernel.asm	/^c010f222:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f225	obj/kernel.asm	/^c010f225:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f228	obj/kernel.asm	/^c010f228:	85 c0                	test   %eax,%eax$/;"	l
c010f22a	obj/kernel.asm	/^c010f22a:	74 0d                	je     c010f239 <inode_open_dec+0x6c>$/;"	l
c010f22c	obj/kernel.asm	/^c010f22c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f22f	obj/kernel.asm	/^c010f22f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f232	obj/kernel.asm	/^c010f232:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f235	obj/kernel.asm	/^c010f235:	85 c0                	test   %eax,%eax$/;"	l
c010f237	obj/kernel.asm	/^c010f237:	75 16                	jne    c010f24f <inode_open_dec+0x82>$/;"	l
c010f239	obj/kernel.asm	/^c010f239:	68 e4 74 11 c0       	push   $0xc01174e4$/;"	l
c010f23e	obj/kernel.asm	/^c010f23e:	68 ef 73 11 c0       	push   $0xc01173ef$/;"	l
c010f243	obj/kernel.asm	/^c010f243:	6a 61                	push   $0x61$/;"	l
c010f245	obj/kernel.asm	/^c010f245:	68 04 74 11 c0       	push   $0xc0117404$/;"	l
c010f24a	obj/kernel.asm	/^c010f24a:	e8 80 12 ff ff       	call   c01004cf <__panic>$/;"	l
c010f24f	obj/kernel.asm	/^c010f24f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f252	obj/kernel.asm	/^c010f252:	68 32 75 11 c0       	push   $0xc0117532$/;"	l
c010f257	obj/kernel.asm	/^c010f257:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010f25a	obj/kernel.asm	/^c010f25a:	e8 38 00 00 00       	call   c010f297 <inode_check>$/;"	l
c010f25f	obj/kernel.asm	/^c010f25f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f262	obj/kernel.asm	/^c010f262:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f265	obj/kernel.asm	/^c010f265:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f268	obj/kernel.asm	/^c010f268:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c010f26b	obj/kernel.asm	/^c010f26b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f26e	obj/kernel.asm	/^c010f26e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f271	obj/kernel.asm	/^c010f271:	ff d0                	call   *%eax$/;"	l
c010f273	obj/kernel.asm	/^c010f273:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f276	obj/kernel.asm	/^c010f276:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f279	obj/kernel.asm	/^c010f279:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010f27d	obj/kernel.asm	/^c010f27d:	74 13                	je     c010f292 <inode_open_dec+0xc5>$/;"	l
c010f27f	obj/kernel.asm	/^c010f27f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f282	obj/kernel.asm	/^c010f282:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010f285	obj/kernel.asm	/^c010f285:	68 38 75 11 c0       	push   $0xc0117538$/;"	l
c010f28a	obj/kernel.asm	/^c010f28a:	e8 db 10 ff ff       	call   c010036a <cprintf>$/;"	l
c010f28f	obj/kernel.asm	/^c010f28f:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f292	obj/kernel.asm	/^c010f292:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f295	obj/kernel.asm	/^c010f295:	c9                   	leave  $/;"	l
c010f296	obj/kernel.asm	/^c010f296:	c3                   	ret    $/;"	l
c010f297	obj/kernel.asm	/^c010f297 <inode_check>:$/;"	l
c010f297	obj/kernel.asm	/^c010f297:	55                   	push   %ebp$/;"	l
c010f298	obj/kernel.asm	/^c010f298:	89 e5                	mov    %esp,%ebp$/;"	l
c010f29a	obj/kernel.asm	/^c010f29a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f29d	obj/kernel.asm	/^c010f29d:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010f2a1	obj/kernel.asm	/^c010f2a1:	74 0a                	je     c010f2ad <inode_check+0x16>$/;"	l
c010f2a3	obj/kernel.asm	/^c010f2a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f2a6	obj/kernel.asm	/^c010f2a6:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f2a9	obj/kernel.asm	/^c010f2a9:	85 c0                	test   %eax,%eax$/;"	l
c010f2ab	obj/kernel.asm	/^c010f2ab:	75 16                	jne    c010f2c3 <inode_check+0x2c>$/;"	l
c010f2ad	obj/kernel.asm	/^c010f2ad:	68 58 75 11 c0       	push   $0xc0117558$/;"	l
c010f2b2	obj/kernel.asm	/^c010f2b2:	68 ef 73 11 c0       	push   $0xc01173ef$/;"	l
c010f2b7	obj/kernel.asm	/^c010f2b7:	6a 6e                	push   $0x6e$/;"	l
c010f2b9	obj/kernel.asm	/^c010f2b9:	68 04 74 11 c0       	push   $0xc0117404$/;"	l
c010f2be	obj/kernel.asm	/^c010f2be:	e8 0c 12 ff ff       	call   c01004cf <__panic>$/;"	l
c010f2c3	obj/kernel.asm	/^c010f2c3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f2c6	obj/kernel.asm	/^c010f2c6:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f2c9	obj/kernel.asm	/^c010f2c9:	8b 00                	mov    (%eax),%eax$/;"	l
c010f2cb	obj/kernel.asm	/^c010f2cb:	3d 76 a4 4b 8c       	cmp    $0x8c4ba476,%eax$/;"	l
c010f2d0	obj/kernel.asm	/^c010f2d0:	74 16                	je     c010f2e8 <inode_check+0x51>$/;"	l
c010f2d2	obj/kernel.asm	/^c010f2d2:	68 80 75 11 c0       	push   $0xc0117580$/;"	l
c010f2d7	obj/kernel.asm	/^c010f2d7:	68 ef 73 11 c0       	push   $0xc01173ef$/;"	l
c010f2dc	obj/kernel.asm	/^c010f2dc:	6a 6f                	push   $0x6f$/;"	l
c010f2de	obj/kernel.asm	/^c010f2de:	68 04 74 11 c0       	push   $0xc0117404$/;"	l
c010f2e3	obj/kernel.asm	/^c010f2e3:	e8 e7 11 ff ff       	call   c01004cf <__panic>$/;"	l
c010f2e8	obj/kernel.asm	/^c010f2e8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f2eb	obj/kernel.asm	/^c010f2eb:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f2ee	obj/kernel.asm	/^c010f2ee:	e8 f3 fc ff ff       	call   c010efe6 <inode_ref_count>$/;"	l
c010f2f3	obj/kernel.asm	/^c010f2f3:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f2f6	obj/kernel.asm	/^c010f2f6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f2f9	obj/kernel.asm	/^c010f2f9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f2fc	obj/kernel.asm	/^c010f2fc:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f2ff	obj/kernel.asm	/^c010f2ff:	e8 ed fc ff ff       	call   c010eff1 <inode_open_count>$/;"	l
c010f304	obj/kernel.asm	/^c010f304:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f307	obj/kernel.asm	/^c010f307:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f30a	obj/kernel.asm	/^c010f30a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f30d	obj/kernel.asm	/^c010f30d:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c010f310	obj/kernel.asm	/^c010f310:	7c 06                	jl     c010f318 <inode_check+0x81>$/;"	l
c010f312	obj/kernel.asm	/^c010f312:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f316	obj/kernel.asm	/^c010f316:	79 16                	jns    c010f32e <inode_check+0x97>$/;"	l
c010f318	obj/kernel.asm	/^c010f318:	68 a8 75 11 c0       	push   $0xc01175a8$/;"	l
c010f31d	obj/kernel.asm	/^c010f31d:	68 ef 73 11 c0       	push   $0xc01173ef$/;"	l
c010f322	obj/kernel.asm	/^c010f322:	6a 71                	push   $0x71$/;"	l
c010f324	obj/kernel.asm	/^c010f324:	68 04 74 11 c0       	push   $0xc0117404$/;"	l
c010f329	obj/kernel.asm	/^c010f329:	e8 a1 11 ff ff       	call   c01004cf <__panic>$/;"	l
c010f32e	obj/kernel.asm	/^c010f32e:	81 7d f4 ff ff 00 00 	cmpl   $0xffff,-0xc(%ebp)$/;"	l
c010f335	obj/kernel.asm	/^c010f335:	7f 09                	jg     c010f340 <inode_check+0xa9>$/;"	l
c010f337	obj/kernel.asm	/^c010f337:	81 7d f0 ff ff 00 00 	cmpl   $0xffff,-0x10(%ebp)$/;"	l
c010f33e	obj/kernel.asm	/^c010f33e:	7e 16                	jle    c010f356 <inode_check+0xbf>$/;"	l
c010f340	obj/kernel.asm	/^c010f340:	68 d4 75 11 c0       	push   $0xc01175d4$/;"	l
c010f345	obj/kernel.asm	/^c010f345:	68 ef 73 11 c0       	push   $0xc01173ef$/;"	l
c010f34a	obj/kernel.asm	/^c010f34a:	6a 72                	push   $0x72$/;"	l
c010f34c	obj/kernel.asm	/^c010f34c:	68 04 74 11 c0       	push   $0xc0117404$/;"	l
c010f351	obj/kernel.asm	/^c010f351:	e8 79 11 ff ff       	call   c01004cf <__panic>$/;"	l
c010f356	obj/kernel.asm	/^c010f356:	c9                   	leave  $/;"	l
c010f357	obj/kernel.asm	/^c010f357:	c3                   	ret    $/;"	l
c010f358	obj/kernel.asm	/^c010f358 <vfs_open>:$/;"	l
c010f358	obj/kernel.asm	/^c010f358:	55                   	push   %ebp$/;"	l
c010f359	obj/kernel.asm	/^c010f359:	89 e5                	mov    %esp,%ebp$/;"	l
c010f35b	obj/kernel.asm	/^c010f35b:	53                   	push   %ebx$/;"	l
c010f35c	obj/kernel.asm	/^c010f35c:	83 ec 34             	sub    $0x34,%esp$/;"	l
c010f35f	obj/kernel.asm	/^c010f35f:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010f366	obj/kernel.asm	/^c010f366:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f369	obj/kernel.asm	/^c010f369:	83 e0 03             	and    $0x3,%eax$/;"	l
c010f36c	obj/kernel.asm	/^c010f36c:	85 c0                	test   %eax,%eax$/;"	l
c010f36e	obj/kernel.asm	/^c010f36e:	74 18                	je     c010f388 <vfs_open+0x30>$/;"	l
c010f370	obj/kernel.asm	/^c010f370:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c010f373	obj/kernel.asm	/^c010f373:	77 09                	ja     c010f37e <vfs_open+0x26>$/;"	l
c010f375	obj/kernel.asm	/^c010f375:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)$/;"	l
c010f37c	obj/kernel.asm	/^c010f37c:	eb 0b                	jmp    c010f389 <vfs_open+0x31>$/;"	l
c010f37e	obj/kernel.asm	/^c010f37e:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010f383	obj/kernel.asm	/^c010f383:	e9 84 02 00 00       	jmp    c010f60c <vfs_open+0x2b4>$/;"	l
c010f388	obj/kernel.asm	/^c010f388:	90                   	nop$/;"	l
c010f389	obj/kernel.asm	/^c010f389:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f38c	obj/kernel.asm	/^c010f38c:	83 e0 10             	and    $0x10,%eax$/;"	l
c010f38f	obj/kernel.asm	/^c010f38f:	85 c0                	test   %eax,%eax$/;"	l
c010f391	obj/kernel.asm	/^c010f391:	74 10                	je     c010f3a3 <vfs_open+0x4b>$/;"	l
c010f393	obj/kernel.asm	/^c010f393:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f397	obj/kernel.asm	/^c010f397:	75 0a                	jne    c010f3a3 <vfs_open+0x4b>$/;"	l
c010f399	obj/kernel.asm	/^c010f399:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010f39e	obj/kernel.asm	/^c010f39e:	e9 69 02 00 00       	jmp    c010f60c <vfs_open+0x2b4>$/;"	l
c010f3a3	obj/kernel.asm	/^c010f3a3:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f3a6	obj/kernel.asm	/^c010f3a6:	83 e0 08             	and    $0x8,%eax$/;"	l
c010f3a9	obj/kernel.asm	/^c010f3a9:	85 c0                	test   %eax,%eax$/;"	l
c010f3ab	obj/kernel.asm	/^c010f3ab:	0f 95 c0             	setne  %al$/;"	l
c010f3ae	obj/kernel.asm	/^c010f3ae:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010f3b1	obj/kernel.asm	/^c010f3b1:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f3b4	obj/kernel.asm	/^c010f3b4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f3b7	obj/kernel.asm	/^c010f3b7:	83 e0 04             	and    $0x4,%eax$/;"	l
c010f3ba	obj/kernel.asm	/^c010f3ba:	85 c0                	test   %eax,%eax$/;"	l
c010f3bc	obj/kernel.asm	/^c010f3bc:	0f 95 c0             	setne  %al$/;"	l
c010f3bf	obj/kernel.asm	/^c010f3bf:	0f b6 c0             	movzbl %al,%eax$/;"	l
c010f3c2	obj/kernel.asm	/^c010f3c2:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f3c5	obj/kernel.asm	/^c010f3c5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f3c8	obj/kernel.asm	/^c010f3c8:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c010f3cb	obj/kernel.asm	/^c010f3cb:	50                   	push   %eax$/;"	l
c010f3cc	obj/kernel.asm	/^c010f3cc:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f3cf	obj/kernel.asm	/^c010f3cf:	e8 0a fb ff ff       	call   c010eede <vfs_lookup>$/;"	l
c010f3d4	obj/kernel.asm	/^c010f3d4:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f3d7	obj/kernel.asm	/^c010f3d7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010f3da	obj/kernel.asm	/^c010f3da:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010f3de	obj/kernel.asm	/^c010f3de:	0f 84 b2 00 00 00    	je     c010f496 <vfs_open+0x13e>$/;"	l
c010f3e4	obj/kernel.asm	/^c010f3e4:	83 7d e8 f0          	cmpl   $0xfffffff0,-0x18(%ebp)$/;"	l
c010f3e8	obj/kernel.asm	/^c010f3e8:	0f 85 a0 00 00 00    	jne    c010f48e <vfs_open+0x136>$/;"	l
c010f3ee	obj/kernel.asm	/^c010f3ee:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010f3f2	obj/kernel.asm	/^c010f3f2:	0f 84 96 00 00 00    	je     c010f48e <vfs_open+0x136>$/;"	l
c010f3f8	obj/kernel.asm	/^c010f3f8:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010f3fb	obj/kernel.asm	/^c010f3fb:	8d 45 d4             	lea    -0x2c(%ebp),%eax$/;"	l
c010f3fe	obj/kernel.asm	/^c010f3fe:	50                   	push   %eax$/;"	l
c010f3ff	obj/kernel.asm	/^c010f3ff:	8d 45 d0             	lea    -0x30(%ebp),%eax$/;"	l
c010f402	obj/kernel.asm	/^c010f402:	50                   	push   %eax$/;"	l
c010f403	obj/kernel.asm	/^c010f403:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f406	obj/kernel.asm	/^c010f406:	e8 99 fb ff ff       	call   c010efa4 <vfs_lookup_parent>$/;"	l
c010f40b	obj/kernel.asm	/^c010f40b:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f40e	obj/kernel.asm	/^c010f40e:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010f411	obj/kernel.asm	/^c010f411:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010f415	obj/kernel.asm	/^c010f415:	74 08                	je     c010f41f <vfs_open+0xc7>$/;"	l
c010f417	obj/kernel.asm	/^c010f417:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f41a	obj/kernel.asm	/^c010f41a:	e9 ed 01 00 00       	jmp    c010f60c <vfs_open+0x2b4>$/;"	l
c010f41f	obj/kernel.asm	/^c010f41f:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c010f422	obj/kernel.asm	/^c010f422:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010f425	obj/kernel.asm	/^c010f425:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c010f429	obj/kernel.asm	/^c010f429:	74 17                	je     c010f442 <vfs_open+0xea>$/;"	l
c010f42b	obj/kernel.asm	/^c010f42b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f42e	obj/kernel.asm	/^c010f42e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f431	obj/kernel.asm	/^c010f431:	85 c0                	test   %eax,%eax$/;"	l
c010f433	obj/kernel.asm	/^c010f433:	74 0d                	je     c010f442 <vfs_open+0xea>$/;"	l
c010f435	obj/kernel.asm	/^c010f435:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f438	obj/kernel.asm	/^c010f438:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f43b	obj/kernel.asm	/^c010f43b:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010f43e	obj/kernel.asm	/^c010f43e:	85 c0                	test   %eax,%eax$/;"	l
c010f440	obj/kernel.asm	/^c010f440:	75 16                	jne    c010f458 <vfs_open+0x100>$/;"	l
c010f442	obj/kernel.asm	/^c010f442:	68 10 76 11 c0       	push   $0xc0117610$/;"	l
c010f447	obj/kernel.asm	/^c010f447:	68 5f 76 11 c0       	push   $0xc011765f$/;"	l
c010f44c	obj/kernel.asm	/^c010f44c:	6a 2c                	push   $0x2c$/;"	l
c010f44e	obj/kernel.asm	/^c010f44e:	68 74 76 11 c0       	push   $0xc0117674$/;"	l
c010f453	obj/kernel.asm	/^c010f453:	e8 77 10 ff ff       	call   c01004cf <__panic>$/;"	l
c010f458	obj/kernel.asm	/^c010f458:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f45b	obj/kernel.asm	/^c010f45b:	68 8a 76 11 c0       	push   $0xc011768a$/;"	l
c010f460	obj/kernel.asm	/^c010f460:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c010f463	obj/kernel.asm	/^c010f463:	e8 2f fe ff ff       	call   c010f297 <inode_check>$/;"	l
c010f468	obj/kernel.asm	/^c010f468:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f46b	obj/kernel.asm	/^c010f46b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010f46e	obj/kernel.asm	/^c010f46e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f471	obj/kernel.asm	/^c010f471:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c010f474	obj/kernel.asm	/^c010f474:	8b 4d d4             	mov    -0x2c(%ebp),%ecx$/;"	l
c010f477	obj/kernel.asm	/^c010f477:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c010f47a	obj/kernel.asm	/^c010f47a:	8d 5d d8             	lea    -0x28(%ebp),%ebx$/;"	l
c010f47d	obj/kernel.asm	/^c010f47d:	53                   	push   %ebx$/;"	l
c010f47e	obj/kernel.asm	/^c010f47e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010f481	obj/kernel.asm	/^c010f481:	51                   	push   %ecx$/;"	l
c010f482	obj/kernel.asm	/^c010f482:	52                   	push   %edx$/;"	l
c010f483	obj/kernel.asm	/^c010f483:	ff d0                	call   *%eax$/;"	l
c010f485	obj/kernel.asm	/^c010f485:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f488	obj/kernel.asm	/^c010f488:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010f48b	obj/kernel.asm	/^c010f48b:	90                   	nop$/;"	l
c010f48c	obj/kernel.asm	/^c010f48c:	eb 1e                	jmp    c010f4ac <vfs_open+0x154>$/;"	l
c010f48e	obj/kernel.asm	/^c010f48e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f491	obj/kernel.asm	/^c010f491:	e9 76 01 00 00       	jmp    c010f60c <vfs_open+0x2b4>$/;"	l
c010f496	obj/kernel.asm	/^c010f496:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f49a	obj/kernel.asm	/^c010f49a:	74 10                	je     c010f4ac <vfs_open+0x154>$/;"	l
c010f49c	obj/kernel.asm	/^c010f49c:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010f4a0	obj/kernel.asm	/^c010f4a0:	74 0a                	je     c010f4ac <vfs_open+0x154>$/;"	l
c010f4a2	obj/kernel.asm	/^c010f4a2:	b8 e9 ff ff ff       	mov    $0xffffffe9,%eax$/;"	l
c010f4a7	obj/kernel.asm	/^c010f4a7:	e9 60 01 00 00       	jmp    c010f60c <vfs_open+0x2b4>$/;"	l
c010f4ac	obj/kernel.asm	/^c010f4ac:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010f4af	obj/kernel.asm	/^c010f4af:	85 c0                	test   %eax,%eax$/;"	l
c010f4b1	obj/kernel.asm	/^c010f4b1:	75 16                	jne    c010f4c9 <vfs_open+0x171>$/;"	l
c010f4b3	obj/kernel.asm	/^c010f4b3:	68 91 76 11 c0       	push   $0xc0117691$/;"	l
c010f4b8	obj/kernel.asm	/^c010f4b8:	68 5f 76 11 c0       	push   $0xc011765f$/;"	l
c010f4bd	obj/kernel.asm	/^c010f4bd:	6a 31                	push   $0x31$/;"	l
c010f4bf	obj/kernel.asm	/^c010f4bf:	68 74 76 11 c0       	push   $0xc0117674$/;"	l
c010f4c4	obj/kernel.asm	/^c010f4c4:	e8 06 10 ff ff       	call   c01004cf <__panic>$/;"	l
c010f4c9	obj/kernel.asm	/^c010f4c9:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010f4cc	obj/kernel.asm	/^c010f4cc:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c010f4cf	obj/kernel.asm	/^c010f4cf:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c010f4d3	obj/kernel.asm	/^c010f4d3:	74 17                	je     c010f4ec <vfs_open+0x194>$/;"	l
c010f4d5	obj/kernel.asm	/^c010f4d5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010f4d8	obj/kernel.asm	/^c010f4d8:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f4db	obj/kernel.asm	/^c010f4db:	85 c0                	test   %eax,%eax$/;"	l
c010f4dd	obj/kernel.asm	/^c010f4dd:	74 0d                	je     c010f4ec <vfs_open+0x194>$/;"	l
c010f4df	obj/kernel.asm	/^c010f4df:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010f4e2	obj/kernel.asm	/^c010f4e2:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f4e5	obj/kernel.asm	/^c010f4e5:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f4e8	obj/kernel.asm	/^c010f4e8:	85 c0                	test   %eax,%eax$/;"	l
c010f4ea	obj/kernel.asm	/^c010f4ea:	75 16                	jne    c010f502 <vfs_open+0x1aa>$/;"	l
c010f4ec	obj/kernel.asm	/^c010f4ec:	68 a0 76 11 c0       	push   $0xc01176a0$/;"	l
c010f4f1	obj/kernel.asm	/^c010f4f1:	68 5f 76 11 c0       	push   $0xc011765f$/;"	l
c010f4f6	obj/kernel.asm	/^c010f4f6:	6a 33                	push   $0x33$/;"	l
c010f4f8	obj/kernel.asm	/^c010f4f8:	68 74 76 11 c0       	push   $0xc0117674$/;"	l
c010f4fd	obj/kernel.asm	/^c010f4fd:	e8 cd 0f ff ff       	call   c01004cf <__panic>$/;"	l
c010f502	obj/kernel.asm	/^c010f502:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f505	obj/kernel.asm	/^c010f505:	68 ed 76 11 c0       	push   $0xc01176ed$/;"	l
c010f50a	obj/kernel.asm	/^c010f50a:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c010f50d	obj/kernel.asm	/^c010f50d:	e8 85 fd ff ff       	call   c010f297 <inode_check>$/;"	l
c010f512	obj/kernel.asm	/^c010f512:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f515	obj/kernel.asm	/^c010f515:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010f518	obj/kernel.asm	/^c010f518:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f51b	obj/kernel.asm	/^c010f51b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f51e	obj/kernel.asm	/^c010f51e:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010f521	obj/kernel.asm	/^c010f521:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f524	obj/kernel.asm	/^c010f524:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010f527	obj/kernel.asm	/^c010f527:	52                   	push   %edx$/;"	l
c010f528	obj/kernel.asm	/^c010f528:	ff d0                	call   *%eax$/;"	l
c010f52a	obj/kernel.asm	/^c010f52a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f52d	obj/kernel.asm	/^c010f52d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010f530	obj/kernel.asm	/^c010f530:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010f534	obj/kernel.asm	/^c010f534:	74 17                	je     c010f54d <vfs_open+0x1f5>$/;"	l
c010f536	obj/kernel.asm	/^c010f536:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010f539	obj/kernel.asm	/^c010f539:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f53c	obj/kernel.asm	/^c010f53c:	50                   	push   %eax$/;"	l
c010f53d	obj/kernel.asm	/^c010f53d:	e8 9d fb ff ff       	call   c010f0df <inode_ref_dec>$/;"	l
c010f542	obj/kernel.asm	/^c010f542:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f545	obj/kernel.asm	/^c010f545:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f548	obj/kernel.asm	/^c010f548:	e9 bf 00 00 00       	jmp    c010f60c <vfs_open+0x2b4>$/;"	l
c010f54d	obj/kernel.asm	/^c010f54d:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010f550	obj/kernel.asm	/^c010f550:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f553	obj/kernel.asm	/^c010f553:	50                   	push   %eax$/;"	l
c010f554	obj/kernel.asm	/^c010f554:	e8 5a fc ff ff       	call   c010f1b3 <inode_open_inc>$/;"	l
c010f559	obj/kernel.asm	/^c010f559:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f55c	obj/kernel.asm	/^c010f55c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010f55f	obj/kernel.asm	/^c010f55f:	83 e0 10             	and    $0x10,%eax$/;"	l
c010f562	obj/kernel.asm	/^c010f562:	85 c0                	test   %eax,%eax$/;"	l
c010f564	obj/kernel.asm	/^c010f564:	75 0a                	jne    c010f570 <vfs_open+0x218>$/;"	l
c010f566	obj/kernel.asm	/^c010f566:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010f56a	obj/kernel.asm	/^c010f56a:	0f 84 8f 00 00 00    	je     c010f5ff <vfs_open+0x2a7>$/;"	l
c010f570	obj/kernel.asm	/^c010f570:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010f573	obj/kernel.asm	/^c010f573:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c010f576	obj/kernel.asm	/^c010f576:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c010f57a	obj/kernel.asm	/^c010f57a:	74 17                	je     c010f593 <vfs_open+0x23b>$/;"	l
c010f57c	obj/kernel.asm	/^c010f57c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010f57f	obj/kernel.asm	/^c010f57f:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f582	obj/kernel.asm	/^c010f582:	85 c0                	test   %eax,%eax$/;"	l
c010f584	obj/kernel.asm	/^c010f584:	74 0d                	je     c010f593 <vfs_open+0x23b>$/;"	l
c010f586	obj/kernel.asm	/^c010f586:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010f589	obj/kernel.asm	/^c010f589:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f58c	obj/kernel.asm	/^c010f58c:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010f58f	obj/kernel.asm	/^c010f58f:	85 c0                	test   %eax,%eax$/;"	l
c010f591	obj/kernel.asm	/^c010f591:	75 16                	jne    c010f5a9 <vfs_open+0x251>$/;"	l
c010f593	obj/kernel.asm	/^c010f593:	68 f4 76 11 c0       	push   $0xc01176f4$/;"	l
c010f598	obj/kernel.asm	/^c010f598:	68 5f 76 11 c0       	push   $0xc011765f$/;"	l
c010f59d	obj/kernel.asm	/^c010f59d:	6a 3a                	push   $0x3a$/;"	l
c010f59f	obj/kernel.asm	/^c010f59f:	68 74 76 11 c0       	push   $0xc0117674$/;"	l
c010f5a4	obj/kernel.asm	/^c010f5a4:	e8 26 0f ff ff       	call   c01004cf <__panic>$/;"	l
c010f5a9	obj/kernel.asm	/^c010f5a9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f5ac	obj/kernel.asm	/^c010f5ac:	68 45 77 11 c0       	push   $0xc0117745$/;"	l
c010f5b1	obj/kernel.asm	/^c010f5b1:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c010f5b4	obj/kernel.asm	/^c010f5b4:	e8 de fc ff ff       	call   c010f297 <inode_check>$/;"	l
c010f5b9	obj/kernel.asm	/^c010f5b9:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f5bc	obj/kernel.asm	/^c010f5bc:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c010f5bf	obj/kernel.asm	/^c010f5bf:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c010f5c2	obj/kernel.asm	/^c010f5c2:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c010f5c5	obj/kernel.asm	/^c010f5c5:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010f5c8	obj/kernel.asm	/^c010f5c8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f5cb	obj/kernel.asm	/^c010f5cb:	6a 00                	push   $0x0$/;"	l
c010f5cd	obj/kernel.asm	/^c010f5cd:	52                   	push   %edx$/;"	l
c010f5ce	obj/kernel.asm	/^c010f5ce:	ff d0                	call   *%eax$/;"	l
c010f5d0	obj/kernel.asm	/^c010f5d0:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f5d3	obj/kernel.asm	/^c010f5d3:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010f5d6	obj/kernel.asm	/^c010f5d6:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c010f5da	obj/kernel.asm	/^c010f5da:	74 23                	je     c010f5ff <vfs_open+0x2a7>$/;"	l
c010f5dc	obj/kernel.asm	/^c010f5dc:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010f5df	obj/kernel.asm	/^c010f5df:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f5e2	obj/kernel.asm	/^c010f5e2:	50                   	push   %eax$/;"	l
c010f5e3	obj/kernel.asm	/^c010f5e3:	e8 e5 fb ff ff       	call   c010f1cd <inode_open_dec>$/;"	l
c010f5e8	obj/kernel.asm	/^c010f5e8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f5eb	obj/kernel.asm	/^c010f5eb:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c010f5ee	obj/kernel.asm	/^c010f5ee:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f5f1	obj/kernel.asm	/^c010f5f1:	50                   	push   %eax$/;"	l
c010f5f2	obj/kernel.asm	/^c010f5f2:	e8 e8 fa ff ff       	call   c010f0df <inode_ref_dec>$/;"	l
c010f5f7	obj/kernel.asm	/^c010f5f7:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f5fa	obj/kernel.asm	/^c010f5fa:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010f5fd	obj/kernel.asm	/^c010f5fd:	eb 0d                	jmp    c010f60c <vfs_open+0x2b4>$/;"	l
c010f5ff	obj/kernel.asm	/^c010f5ff:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c010f602	obj/kernel.asm	/^c010f602:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c010f605	obj/kernel.asm	/^c010f605:	89 10                	mov    %edx,(%eax)$/;"	l
c010f607	obj/kernel.asm	/^c010f607:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f60c	obj/kernel.asm	/^c010f60c:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c010f60f	obj/kernel.asm	/^c010f60f:	c9                   	leave  $/;"	l
c010f610	obj/kernel.asm	/^c010f610:	c3                   	ret    $/;"	l
c010f611	obj/kernel.asm	/^c010f611 <vfs_close>:$/;"	l
c010f611	obj/kernel.asm	/^c010f611:	55                   	push   %ebp$/;"	l
c010f612	obj/kernel.asm	/^c010f612:	89 e5                	mov    %esp,%ebp$/;"	l
c010f614	obj/kernel.asm	/^c010f614:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f617	obj/kernel.asm	/^c010f617:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f61a	obj/kernel.asm	/^c010f61a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f61d	obj/kernel.asm	/^c010f61d:	e8 ab fb ff ff       	call   c010f1cd <inode_open_dec>$/;"	l
c010f622	obj/kernel.asm	/^c010f622:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f625	obj/kernel.asm	/^c010f625:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f628	obj/kernel.asm	/^c010f628:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f62b	obj/kernel.asm	/^c010f62b:	e8 af fa ff ff       	call   c010f0df <inode_ref_dec>$/;"	l
c010f630	obj/kernel.asm	/^c010f630:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f633	obj/kernel.asm	/^c010f633:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f638	obj/kernel.asm	/^c010f638:	c9                   	leave  $/;"	l
c010f639	obj/kernel.asm	/^c010f639:	c3                   	ret    $/;"	l
c010f63a	obj/kernel.asm	/^c010f63a <vfs_unlink>:$/;"	l
c010f63a	obj/kernel.asm	/^c010f63a:	55                   	push   %ebp$/;"	l
c010f63b	obj/kernel.asm	/^c010f63b:	89 e5                	mov    %esp,%ebp$/;"	l
c010f63d	obj/kernel.asm	/^c010f63d:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010f642	obj/kernel.asm	/^c010f642:	5d                   	pop    %ebp$/;"	l
c010f643	obj/kernel.asm	/^c010f643:	c3                   	ret    $/;"	l
c010f644	obj/kernel.asm	/^c010f644 <vfs_rename>:$/;"	l
c010f644	obj/kernel.asm	/^c010f644:	55                   	push   %ebp$/;"	l
c010f645	obj/kernel.asm	/^c010f645:	89 e5                	mov    %esp,%ebp$/;"	l
c010f647	obj/kernel.asm	/^c010f647:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010f64c	obj/kernel.asm	/^c010f64c:	5d                   	pop    %ebp$/;"	l
c010f64d	obj/kernel.asm	/^c010f64d:	c3                   	ret    $/;"	l
c010f64e	obj/kernel.asm	/^c010f64e <vfs_link>:$/;"	l
c010f64e	obj/kernel.asm	/^c010f64e:	55                   	push   %ebp$/;"	l
c010f64f	obj/kernel.asm	/^c010f64f:	89 e5                	mov    %esp,%ebp$/;"	l
c010f651	obj/kernel.asm	/^c010f651:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010f656	obj/kernel.asm	/^c010f656:	5d                   	pop    %ebp$/;"	l
c010f657	obj/kernel.asm	/^c010f657:	c3                   	ret    $/;"	l
c010f658	obj/kernel.asm	/^c010f658 <vfs_symlink>:$/;"	l
c010f658	obj/kernel.asm	/^c010f658:	55                   	push   %ebp$/;"	l
c010f659	obj/kernel.asm	/^c010f659:	89 e5                	mov    %esp,%ebp$/;"	l
c010f65b	obj/kernel.asm	/^c010f65b:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010f660	obj/kernel.asm	/^c010f660:	5d                   	pop    %ebp$/;"	l
c010f661	obj/kernel.asm	/^c010f661:	c3                   	ret    $/;"	l
c010f662	obj/kernel.asm	/^c010f662 <vfs_readlink>:$/;"	l
c010f662	obj/kernel.asm	/^c010f662:	55                   	push   %ebp$/;"	l
c010f663	obj/kernel.asm	/^c010f663:	89 e5                	mov    %esp,%ebp$/;"	l
c010f665	obj/kernel.asm	/^c010f665:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010f66a	obj/kernel.asm	/^c010f66a:	5d                   	pop    %ebp$/;"	l
c010f66b	obj/kernel.asm	/^c010f66b:	c3                   	ret    $/;"	l
c010f66c	obj/kernel.asm	/^c010f66c <vfs_mkdir>:$/;"	l
c010f66c	obj/kernel.asm	/^c010f66c:	55                   	push   %ebp$/;"	l
c010f66d	obj/kernel.asm	/^c010f66d:	89 e5                	mov    %esp,%ebp$/;"	l
c010f66f	obj/kernel.asm	/^c010f66f:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010f674	obj/kernel.asm	/^c010f674:	5d                   	pop    %ebp$/;"	l
c010f675	obj/kernel.asm	/^c010f675:	c3                   	ret    $/;"	l
c010f676	obj/kernel.asm	/^c010f676 <__alloc_fs>:$/;"	l
c010f676	obj/kernel.asm	/^c010f676:	55                   	push   %ebp$/;"	l
c010f677	obj/kernel.asm	/^c010f677:	89 e5                	mov    %esp,%ebp$/;"	l
c010f679	obj/kernel.asm	/^c010f679:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f67c	obj/kernel.asm	/^c010f67c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f67f	obj/kernel.asm	/^c010f67f:	68 80 00 00 00       	push   $0x80$/;"	l
c010f684	obj/kernel.asm	/^c010f684:	e8 6d 7d ff ff       	call   c01073f6 <kmalloc>$/;"	l
c010f689	obj/kernel.asm	/^c010f689:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f68c	obj/kernel.asm	/^c010f68c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f68f	obj/kernel.asm	/^c010f68f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f693	obj/kernel.asm	/^c010f693:	74 09                	je     c010f69e <__alloc_fs+0x28>$/;"	l
c010f695	obj/kernel.asm	/^c010f695:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c010f698	obj/kernel.asm	/^c010f698:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f69b	obj/kernel.asm	/^c010f69b:	89 50 6c             	mov    %edx,0x6c(%eax)$/;"	l
c010f69e	obj/kernel.asm	/^c010f69e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f6a1	obj/kernel.asm	/^c010f6a1:	c9                   	leave  $/;"	l
c010f6a2	obj/kernel.asm	/^c010f6a2:	c3                   	ret    $/;"	l
c010f6a3	obj/kernel.asm	/^c010f6a3 <vfs_init>:$/;"	l
c010f6a3	obj/kernel.asm	/^c010f6a3:	55                   	push   %ebp$/;"	l
c010f6a4	obj/kernel.asm	/^c010f6a4:	89 e5                	mov    %esp,%ebp$/;"	l
c010f6a6	obj/kernel.asm	/^c010f6a6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f6a9	obj/kernel.asm	/^c010f6a9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f6ac	obj/kernel.asm	/^c010f6ac:	6a 01                	push   $0x1$/;"	l
c010f6ae	obj/kernel.asm	/^c010f6ae:	68 4c 11 15 c0       	push   $0xc015114c$/;"	l
c010f6b3	obj/kernel.asm	/^c010f6b3:	e8 c5 9c ff ff       	call   c010937d <sem_init>$/;"	l
c010f6b8	obj/kernel.asm	/^c010f6b8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f6bb	obj/kernel.asm	/^c010f6bb:	e8 9d eb ff ff       	call   c010e25d <vfs_devlist_init>$/;"	l
c010f6c0	obj/kernel.asm	/^c010f6c0:	c9                   	leave  $/;"	l
c010f6c1	obj/kernel.asm	/^c010f6c1:	c3                   	ret    $/;"	l
c010f6c2	obj/kernel.asm	/^c010f6c2 <lock_bootfs>:$/;"	l
c010f6c2	obj/kernel.asm	/^c010f6c2:	55                   	push   %ebp$/;"	l
c010f6c3	obj/kernel.asm	/^c010f6c3:	89 e5                	mov    %esp,%ebp$/;"	l
c010f6c5	obj/kernel.asm	/^c010f6c5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f6c8	obj/kernel.asm	/^c010f6c8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f6cb	obj/kernel.asm	/^c010f6cb:	68 4c 11 15 c0       	push   $0xc015114c$/;"	l
c010f6d0	obj/kernel.asm	/^c010f6d0:	e8 2e 9e ff ff       	call   c0109503 <down>$/;"	l
c010f6d5	obj/kernel.asm	/^c010f6d5:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f6d8	obj/kernel.asm	/^c010f6d8:	c9                   	leave  $/;"	l
c010f6d9	obj/kernel.asm	/^c010f6d9:	c3                   	ret    $/;"	l
c010f6da	obj/kernel.asm	/^c010f6da <unlock_bootfs>:$/;"	l
c010f6da	obj/kernel.asm	/^c010f6da:	55                   	push   %ebp$/;"	l
c010f6db	obj/kernel.asm	/^c010f6db:	89 e5                	mov    %esp,%ebp$/;"	l
c010f6dd	obj/kernel.asm	/^c010f6dd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f6e0	obj/kernel.asm	/^c010f6e0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f6e3	obj/kernel.asm	/^c010f6e3:	68 4c 11 15 c0       	push   $0xc015114c$/;"	l
c010f6e8	obj/kernel.asm	/^c010f6e8:	e8 fb 9d ff ff       	call   c01094e8 <up>$/;"	l
c010f6ed	obj/kernel.asm	/^c010f6ed:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f6f0	obj/kernel.asm	/^c010f6f0:	c9                   	leave  $/;"	l
c010f6f1	obj/kernel.asm	/^c010f6f1:	c3                   	ret    $/;"	l
c010f6f2	obj/kernel.asm	/^c010f6f2 <change_bootfs>:$/;"	l
c010f6f2	obj/kernel.asm	/^c010f6f2:	55                   	push   %ebp$/;"	l
c010f6f3	obj/kernel.asm	/^c010f6f3:	89 e5                	mov    %esp,%ebp$/;"	l
c010f6f5	obj/kernel.asm	/^c010f6f5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f6f8	obj/kernel.asm	/^c010f6f8:	e8 c5 ff ff ff       	call   c010f6c2 <lock_bootfs>$/;"	l
c010f6fd	obj/kernel.asm	/^c010f6fd:	a1 58 11 15 c0       	mov    0xc0151158,%eax$/;"	l
c010f702	obj/kernel.asm	/^c010f702:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f705	obj/kernel.asm	/^c010f705:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f708	obj/kernel.asm	/^c010f708:	a3 58 11 15 c0       	mov    %eax,0xc0151158$/;"	l
c010f70d	obj/kernel.asm	/^c010f70d:	e8 c8 ff ff ff       	call   c010f6da <unlock_bootfs>$/;"	l
c010f712	obj/kernel.asm	/^c010f712:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f716	obj/kernel.asm	/^c010f716:	74 0e                	je     c010f726 <change_bootfs+0x34>$/;"	l
c010f718	obj/kernel.asm	/^c010f718:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f71b	obj/kernel.asm	/^c010f71b:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010f71e	obj/kernel.asm	/^c010f71e:	e8 bc f9 ff ff       	call   c010f0df <inode_ref_dec>$/;"	l
c010f723	obj/kernel.asm	/^c010f723:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f726	obj/kernel.asm	/^c010f726:	c9                   	leave  $/;"	l
c010f727	obj/kernel.asm	/^c010f727:	c3                   	ret    $/;"	l
c010f728	obj/kernel.asm	/^c010f728 <vfs_set_bootfs>:$/;"	l
c010f728	obj/kernel.asm	/^c010f728:	55                   	push   %ebp$/;"	l
c010f729	obj/kernel.asm	/^c010f729:	89 e5                	mov    %esp,%ebp$/;"	l
c010f72b	obj/kernel.asm	/^c010f72b:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f72e	obj/kernel.asm	/^c010f72e:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c010f735	obj/kernel.asm	/^c010f735:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010f739	obj/kernel.asm	/^c010f739:	74 66                	je     c010f7a1 <vfs_set_bootfs+0x79>$/;"	l
c010f73b	obj/kernel.asm	/^c010f73b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f73e	obj/kernel.asm	/^c010f73e:	6a 3a                	push   $0x3a$/;"	l
c010f740	obj/kernel.asm	/^c010f740:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f743	obj/kernel.asm	/^c010f743:	e8 88 3e 00 00       	call   c01135d0 <strchr>$/;"	l
c010f748	obj/kernel.asm	/^c010f748:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f74b	obj/kernel.asm	/^c010f74b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f74e	obj/kernel.asm	/^c010f74e:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f752	obj/kernel.asm	/^c010f752:	74 0d                	je     c010f761 <vfs_set_bootfs+0x39>$/;"	l
c010f754	obj/kernel.asm	/^c010f754:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f757	obj/kernel.asm	/^c010f757:	83 c0 01             	add    $0x1,%eax$/;"	l
c010f75a	obj/kernel.asm	/^c010f75a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010f75d	obj/kernel.asm	/^c010f75d:	84 c0                	test   %al,%al$/;"	l
c010f75f	obj/kernel.asm	/^c010f75f:	74 07                	je     c010f768 <vfs_set_bootfs+0x40>$/;"	l
c010f761	obj/kernel.asm	/^c010f761:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010f766	obj/kernel.asm	/^c010f766:	eb 4d                	jmp    c010f7b5 <vfs_set_bootfs+0x8d>$/;"	l
c010f768	obj/kernel.asm	/^c010f768:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f76b	obj/kernel.asm	/^c010f76b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010f76e	obj/kernel.asm	/^c010f76e:	e8 54 f4 ff ff       	call   c010ebc7 <vfs_chdir>$/;"	l
c010f773	obj/kernel.asm	/^c010f773:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f776	obj/kernel.asm	/^c010f776:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f779	obj/kernel.asm	/^c010f779:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f77d	obj/kernel.asm	/^c010f77d:	74 05                	je     c010f784 <vfs_set_bootfs+0x5c>$/;"	l
c010f77f	obj/kernel.asm	/^c010f77f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f782	obj/kernel.asm	/^c010f782:	eb 31                	jmp    c010f7b5 <vfs_set_bootfs+0x8d>$/;"	l
c010f784	obj/kernel.asm	/^c010f784:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f787	obj/kernel.asm	/^c010f787:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c010f78a	obj/kernel.asm	/^c010f78a:	50                   	push   %eax$/;"	l
c010f78b	obj/kernel.asm	/^c010f78b:	e8 0d f3 ff ff       	call   c010ea9d <vfs_get_curdir>$/;"	l
c010f790	obj/kernel.asm	/^c010f790:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f793	obj/kernel.asm	/^c010f793:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f796	obj/kernel.asm	/^c010f796:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010f79a	obj/kernel.asm	/^c010f79a:	74 05                	je     c010f7a1 <vfs_set_bootfs+0x79>$/;"	l
c010f79c	obj/kernel.asm	/^c010f79c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010f79f	obj/kernel.asm	/^c010f79f:	eb 14                	jmp    c010f7b5 <vfs_set_bootfs+0x8d>$/;"	l
c010f7a1	obj/kernel.asm	/^c010f7a1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f7a4	obj/kernel.asm	/^c010f7a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f7a7	obj/kernel.asm	/^c010f7a7:	50                   	push   %eax$/;"	l
c010f7a8	obj/kernel.asm	/^c010f7a8:	e8 45 ff ff ff       	call   c010f6f2 <change_bootfs>$/;"	l
c010f7ad	obj/kernel.asm	/^c010f7ad:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f7b0	obj/kernel.asm	/^c010f7b0:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f7b5	obj/kernel.asm	/^c010f7b5:	c9                   	leave  $/;"	l
c010f7b6	obj/kernel.asm	/^c010f7b6:	c3                   	ret    $/;"	l
c010f7b7	obj/kernel.asm	/^c010f7b7 <vfs_get_bootfs>:$/;"	l
c010f7b7	obj/kernel.asm	/^c010f7b7:	55                   	push   %ebp$/;"	l
c010f7b8	obj/kernel.asm	/^c010f7b8:	89 e5                	mov    %esp,%ebp$/;"	l
c010f7ba	obj/kernel.asm	/^c010f7ba:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f7bd	obj/kernel.asm	/^c010f7bd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010f7c4	obj/kernel.asm	/^c010f7c4:	a1 58 11 15 c0       	mov    0xc0151158,%eax$/;"	l
c010f7c9	obj/kernel.asm	/^c010f7c9:	85 c0                	test   %eax,%eax$/;"	l
c010f7cb	obj/kernel.asm	/^c010f7cb:	74 29                	je     c010f7f6 <vfs_get_bootfs+0x3f>$/;"	l
c010f7cd	obj/kernel.asm	/^c010f7cd:	e8 f0 fe ff ff       	call   c010f6c2 <lock_bootfs>$/;"	l
c010f7d2	obj/kernel.asm	/^c010f7d2:	a1 58 11 15 c0       	mov    0xc0151158,%eax$/;"	l
c010f7d7	obj/kernel.asm	/^c010f7d7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f7da	obj/kernel.asm	/^c010f7da:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f7de	obj/kernel.asm	/^c010f7de:	74 11                	je     c010f7f1 <vfs_get_bootfs+0x3a>$/;"	l
c010f7e0	obj/kernel.asm	/^c010f7e0:	a1 58 11 15 c0       	mov    0xc0151158,%eax$/;"	l
c010f7e5	obj/kernel.asm	/^c010f7e5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f7e8	obj/kernel.asm	/^c010f7e8:	50                   	push   %eax$/;"	l
c010f7e9	obj/kernel.asm	/^c010f7e9:	e8 d7 f8 ff ff       	call   c010f0c5 <inode_ref_inc>$/;"	l
c010f7ee	obj/kernel.asm	/^c010f7ee:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f7f1	obj/kernel.asm	/^c010f7f1:	e8 e4 fe ff ff       	call   c010f6da <unlock_bootfs>$/;"	l
c010f7f6	obj/kernel.asm	/^c010f7f6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010f7fa	obj/kernel.asm	/^c010f7fa:	75 07                	jne    c010f803 <vfs_get_bootfs+0x4c>$/;"	l
c010f7fc	obj/kernel.asm	/^c010f7fc:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c010f801	obj/kernel.asm	/^c010f801:	eb 0d                	jmp    c010f810 <vfs_get_bootfs+0x59>$/;"	l
c010f803	obj/kernel.asm	/^c010f803:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f806	obj/kernel.asm	/^c010f806:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c010f809	obj/kernel.asm	/^c010f809:	89 10                	mov    %edx,(%eax)$/;"	l
c010f80b	obj/kernel.asm	/^c010f80b:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f810	obj/kernel.asm	/^c010f810:	c9                   	leave  $/;"	l
c010f811	obj/kernel.asm	/^c010f811:	c3                   	ret    $/;"	l
c010f812	obj/kernel.asm	/^c010f812 <__intr_save>:$/;"	l
c010f812	obj/kernel.asm	/^c010f812:	55                   	push   %ebp$/;"	l
c010f813	obj/kernel.asm	/^c010f813:	89 e5                	mov    %esp,%ebp$/;"	l
c010f815	obj/kernel.asm	/^c010f815:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010f818	obj/kernel.asm	/^c010f818:	9c                   	pushf  $/;"	l
c010f819	obj/kernel.asm	/^c010f819:	58                   	pop    %eax$/;"	l
c010f81a	obj/kernel.asm	/^c010f81a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f81d	obj/kernel.asm	/^c010f81d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f820	obj/kernel.asm	/^c010f820:	25 00 02 00 00       	and    $0x200,%eax$/;"	l
c010f825	obj/kernel.asm	/^c010f825:	85 c0                	test   %eax,%eax$/;"	l
c010f827	obj/kernel.asm	/^c010f827:	74 0c                	je     c010f835 <__intr_save+0x23>$/;"	l
c010f829	obj/kernel.asm	/^c010f829:	e8 2d 2a ff ff       	call   c010225b <intr_disable>$/;"	l
c010f82e	obj/kernel.asm	/^c010f82e:	b8 01 00 00 00       	mov    $0x1,%eax$/;"	l
c010f833	obj/kernel.asm	/^c010f833:	eb 05                	jmp    c010f83a <__intr_save+0x28>$/;"	l
c010f835	obj/kernel.asm	/^c010f835:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f83a	obj/kernel.asm	/^c010f83a:	c9                   	leave  $/;"	l
c010f83b	obj/kernel.asm	/^c010f83b:	c3                   	ret    $/;"	l
c010f83c	obj/kernel.asm	/^c010f83c <__intr_restore>:$/;"	l
c010f83c	obj/kernel.asm	/^c010f83c:	55                   	push   %ebp$/;"	l
c010f83d	obj/kernel.asm	/^c010f83d:	89 e5                	mov    %esp,%ebp$/;"	l
c010f83f	obj/kernel.asm	/^c010f83f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f842	obj/kernel.asm	/^c010f842:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c010f846	obj/kernel.asm	/^c010f846:	74 05                	je     c010f84d <__intr_restore+0x11>$/;"	l
c010f848	obj/kernel.asm	/^c010f848:	e8 08 2a ff ff       	call   c0102255 <intr_enable>$/;"	l
c010f84d	obj/kernel.asm	/^c010f84d:	c9                   	leave  $/;"	l
c010f84e	obj/kernel.asm	/^c010f84e:	c3                   	ret    $/;"	l
c010f84f	obj/kernel.asm	/^c010f84f <dev_stdin_write>:$/;"	l
c010f84f	obj/kernel.asm	/^c010f84f:	55                   	push   %ebp$/;"	l
c010f850	obj/kernel.asm	/^c010f850:	89 e5                	mov    %esp,%ebp$/;"	l
c010f852	obj/kernel.asm	/^c010f852:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f855	obj/kernel.asm	/^c010f855:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f858	obj/kernel.asm	/^c010f858:	88 45 e4             	mov    %al,-0x1c(%ebp)$/;"	l
c010f85b	obj/kernel.asm	/^c010f85b:	80 7d e4 00          	cmpb   $0x0,-0x1c(%ebp)$/;"	l
c010f85f	obj/kernel.asm	/^c010f85f:	0f 84 84 00 00 00    	je     c010f8e9 <dev_stdin_write+0x9a>$/;"	l
c010f865	obj/kernel.asm	/^c010f865:	e8 a8 ff ff ff       	call   c010f812 <__intr_save>$/;"	l
c010f86a	obj/kernel.asm	/^c010f86a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010f86d	obj/kernel.asm	/^c010f86d:	a1 84 21 15 c0       	mov    0xc0152184,%eax$/;"	l
c010f872	obj/kernel.asm	/^c010f872:	99                   	cltd   $/;"	l
c010f873	obj/kernel.asm	/^c010f873:	c1 ea 14             	shr    $0x14,%edx$/;"	l
c010f876	obj/kernel.asm	/^c010f876:	01 d0                	add    %edx,%eax$/;"	l
c010f878	obj/kernel.asm	/^c010f878:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c010f87d	obj/kernel.asm	/^c010f87d:	29 d0                	sub    %edx,%eax$/;"	l
c010f87f	obj/kernel.asm	/^c010f87f:	89 c2                	mov    %eax,%edx$/;"	l
c010f881	obj/kernel.asm	/^c010f881:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax$/;"	l
c010f885	obj/kernel.asm	/^c010f885:	88 82 80 11 15 c0    	mov    %al,-0x3feaee80(%edx)$/;"	l
c010f88b	obj/kernel.asm	/^c010f88b:	8b 15 84 21 15 c0    	mov    0xc0152184,%edx$/;"	l
c010f891	obj/kernel.asm	/^c010f891:	a1 80 21 15 c0       	mov    0xc0152180,%eax$/;"	l
c010f896	obj/kernel.asm	/^c010f896:	29 c2                	sub    %eax,%edx$/;"	l
c010f898	obj/kernel.asm	/^c010f898:	89 d0                	mov    %edx,%eax$/;"	l
c010f89a	obj/kernel.asm	/^c010f89a:	3d ff 0f 00 00       	cmp    $0xfff,%eax$/;"	l
c010f89f	obj/kernel.asm	/^c010f89f:	7f 0d                	jg     c010f8ae <dev_stdin_write+0x5f>$/;"	l
c010f8a1	obj/kernel.asm	/^c010f8a1:	a1 84 21 15 c0       	mov    0xc0152184,%eax$/;"	l
c010f8a6	obj/kernel.asm	/^c010f8a6:	83 c0 01             	add    $0x1,%eax$/;"	l
c010f8a9	obj/kernel.asm	/^c010f8a9:	a3 84 21 15 c0       	mov    %eax,0xc0152184$/;"	l
c010f8ae	obj/kernel.asm	/^c010f8ae:	a1 40 df 14 c0       	mov    0xc014df40,%eax$/;"	l
c010f8b3	obj/kernel.asm	/^c010f8b3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f8b6	obj/kernel.asm	/^c010f8b6:	50                   	push   %eax$/;"	l
c010f8b7	obj/kernel.asm	/^c010f8b7:	e8 f5 98 ff ff       	call   c01091b1 <wait_queue_empty>$/;"	l
c010f8bc	obj/kernel.asm	/^c010f8bc:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f8bf	obj/kernel.asm	/^c010f8bf:	85 c0                	test   %eax,%eax$/;"	l
c010f8c1	obj/kernel.asm	/^c010f8c1:	75 18                	jne    c010f8db <dev_stdin_write+0x8c>$/;"	l
c010f8c3	obj/kernel.asm	/^c010f8c3:	a1 40 df 14 c0       	mov    0xc014df40,%eax$/;"	l
c010f8c8	obj/kernel.asm	/^c010f8c8:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010f8cb	obj/kernel.asm	/^c010f8cb:	6a 01                	push   $0x1$/;"	l
c010f8cd	obj/kernel.asm	/^c010f8cd:	68 04 00 00 80       	push   $0x80000004$/;"	l
c010f8d2	obj/kernel.asm	/^c010f8d2:	50                   	push   %eax$/;"	l
c010f8d3	obj/kernel.asm	/^c010f8d3:	e8 88 99 ff ff       	call   c0109260 <wakeup_queue>$/;"	l
c010f8d8	obj/kernel.asm	/^c010f8d8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f8db	obj/kernel.asm	/^c010f8db:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f8de	obj/kernel.asm	/^c010f8de:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010f8e1	obj/kernel.asm	/^c010f8e1:	e8 56 ff ff ff       	call   c010f83c <__intr_restore>$/;"	l
c010f8e6	obj/kernel.asm	/^c010f8e6:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f8e9	obj/kernel.asm	/^c010f8e9:	c9                   	leave  $/;"	l
c010f8ea	obj/kernel.asm	/^c010f8ea:	c3                   	ret    $/;"	l
c010f8eb	obj/kernel.asm	/^c010f8eb <dev_stdin_read>:$/;"	l
c010f8eb	obj/kernel.asm	/^c010f8eb:	55                   	push   %ebp$/;"	l
c010f8ec	obj/kernel.asm	/^c010f8ec:	89 e5                	mov    %esp,%ebp$/;"	l
c010f8ee	obj/kernel.asm	/^c010f8ee:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010f8f1	obj/kernel.asm	/^c010f8f1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c010f8f8	obj/kernel.asm	/^c010f8f8:	e8 15 ff ff ff       	call   c010f812 <__intr_save>$/;"	l
c010f8fd	obj/kernel.asm	/^c010f8fd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f900	obj/kernel.asm	/^c010f900:	e9 be 00 00 00       	jmp    c010f9c3 <dev_stdin_read+0xd8>$/;"	l
c010f905	obj/kernel.asm	/^c010f905:	8b 15 80 21 15 c0    	mov    0xc0152180,%edx$/;"	l
c010f90b	obj/kernel.asm	/^c010f90b:	a1 84 21 15 c0       	mov    0xc0152184,%eax$/;"	l
c010f910	obj/kernel.asm	/^c010f910:	39 c2                	cmp    %eax,%edx$/;"	l
c010f912	obj/kernel.asm	/^c010f912:	7d 2c                	jge    c010f940 <dev_stdin_read+0x55>$/;"	l
c010f914	obj/kernel.asm	/^c010f914:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010f917	obj/kernel.asm	/^c010f917:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010f91a	obj/kernel.asm	/^c010f91a:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c010f91d	obj/kernel.asm	/^c010f91d:	8b 15 80 21 15 c0    	mov    0xc0152180,%edx$/;"	l
c010f923	obj/kernel.asm	/^c010f923:	89 d1                	mov    %edx,%ecx$/;"	l
c010f925	obj/kernel.asm	/^c010f925:	c1 f9 1f             	sar    $0x1f,%ecx$/;"	l
c010f928	obj/kernel.asm	/^c010f928:	c1 e9 14             	shr    $0x14,%ecx$/;"	l
c010f92b	obj/kernel.asm	/^c010f92b:	01 ca                	add    %ecx,%edx$/;"	l
c010f92d	obj/kernel.asm	/^c010f92d:	81 e2 ff 0f 00 00    	and    $0xfff,%edx$/;"	l
c010f933	obj/kernel.asm	/^c010f933:	29 ca                	sub    %ecx,%edx$/;"	l
c010f935	obj/kernel.asm	/^c010f935:	0f b6 92 80 11 15 c0 	movzbl -0x3feaee80(%edx),%edx$/;"	l
c010f93c	obj/kernel.asm	/^c010f93c:	88 10                	mov    %dl,(%eax)$/;"	l
c010f93e	obj/kernel.asm	/^c010f93e:	eb 72                	jmp    c010f9b2 <dev_stdin_read+0xc7>$/;"	l
c010f940	obj/kernel.asm	/^c010f940:	8d 45 d8             	lea    -0x28(%ebp),%eax$/;"	l
c010f943	obj/kernel.asm	/^c010f943:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010f946	obj/kernel.asm	/^c010f946:	a1 40 df 14 c0       	mov    0xc014df40,%eax$/;"	l
c010f94b	obj/kernel.asm	/^c010f94b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010f94e	obj/kernel.asm	/^c010f94e:	68 04 00 00 80       	push   $0x80000004$/;"	l
c010f953	obj/kernel.asm	/^c010f953:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010f956	obj/kernel.asm	/^c010f956:	50                   	push   %eax$/;"	l
c010f957	obj/kernel.asm	/^c010f957:	e8 7f 99 ff ff       	call   c01092db <wait_current_set>$/;"	l
c010f95c	obj/kernel.asm	/^c010f95c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f95f	obj/kernel.asm	/^c010f95f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f962	obj/kernel.asm	/^c010f962:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010f965	obj/kernel.asm	/^c010f965:	e8 d2 fe ff ff       	call   c010f83c <__intr_restore>$/;"	l
c010f96a	obj/kernel.asm	/^c010f96a:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f96d	obj/kernel.asm	/^c010f96d:	e8 5b dc ff ff       	call   c010d5cd <schedule>$/;"	l
c010f972	obj/kernel.asm	/^c010f972:	e8 9b fe ff ff       	call   c010f812 <__intr_save>$/;"	l
c010f977	obj/kernel.asm	/^c010f977:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010f97a	obj/kernel.asm	/^c010f97a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f97d	obj/kernel.asm	/^c010f97d:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010f980	obj/kernel.asm	/^c010f980:	e8 4a 98 ff ff       	call   c01091cf <wait_in_queue>$/;"	l
c010f985	obj/kernel.asm	/^c010f985:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f988	obj/kernel.asm	/^c010f988:	85 c0                	test   %eax,%eax$/;"	l
c010f98a	obj/kernel.asm	/^c010f98a:	74 14                	je     c010f9a0 <dev_stdin_read+0xb5>$/;"	l
c010f98c	obj/kernel.asm	/^c010f98c:	a1 40 df 14 c0       	mov    0xc014df40,%eax$/;"	l
c010f991	obj/kernel.asm	/^c010f991:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010f994	obj/kernel.asm	/^c010f994:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010f997	obj/kernel.asm	/^c010f997:	50                   	push   %eax$/;"	l
c010f998	obj/kernel.asm	/^c010f998:	e8 56 96 ff ff       	call   c0108ff3 <wait_queue_del>$/;"	l
c010f99d	obj/kernel.asm	/^c010f99d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f9a0	obj/kernel.asm	/^c010f9a0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010f9a3	obj/kernel.asm	/^c010f9a3:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010f9a6	obj/kernel.asm	/^c010f9a6:	3d 04 00 00 80       	cmp    $0x80000004,%eax$/;"	l
c010f9ab	obj/kernel.asm	/^c010f9ab:	75 22                	jne    c010f9cf <dev_stdin_read+0xe4>$/;"	l
c010f9ad	obj/kernel.asm	/^c010f9ad:	e9 53 ff ff ff       	jmp    c010f905 <dev_stdin_read+0x1a>$/;"	l
c010f9b2	obj/kernel.asm	/^c010f9b2:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c010f9b6	obj/kernel.asm	/^c010f9b6:	a1 80 21 15 c0       	mov    0xc0152180,%eax$/;"	l
c010f9bb	obj/kernel.asm	/^c010f9bb:	83 c0 01             	add    $0x1,%eax$/;"	l
c010f9be	obj/kernel.asm	/^c010f9be:	a3 80 21 15 c0       	mov    %eax,0xc0152180$/;"	l
c010f9c3	obj/kernel.asm	/^c010f9c3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f9c6	obj/kernel.asm	/^c010f9c6:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c010f9c9	obj/kernel.asm	/^c010f9c9:	0f 82 36 ff ff ff    	jb     c010f905 <dev_stdin_read+0x1a>$/;"	l
c010f9cf	obj/kernel.asm	/^c010f9cf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010f9d2	obj/kernel.asm	/^c010f9d2:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010f9d5	obj/kernel.asm	/^c010f9d5:	e8 62 fe ff ff       	call   c010f83c <__intr_restore>$/;"	l
c010f9da	obj/kernel.asm	/^c010f9da:	83 c4 10             	add    $0x10,%esp$/;"	l
c010f9dd	obj/kernel.asm	/^c010f9dd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010f9e0	obj/kernel.asm	/^c010f9e0:	c9                   	leave  $/;"	l
c010f9e1	obj/kernel.asm	/^c010f9e1:	c3                   	ret    $/;"	l
c010f9e2	obj/kernel.asm	/^c010f9e2 <stdin_open>:$/;"	l
c010f9e2	obj/kernel.asm	/^c010f9e2:	55                   	push   %ebp$/;"	l
c010f9e3	obj/kernel.asm	/^c010f9e3:	89 e5                	mov    %esp,%ebp$/;"	l
c010f9e5	obj/kernel.asm	/^c010f9e5:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c010f9e9	obj/kernel.asm	/^c010f9e9:	74 07                	je     c010f9f2 <stdin_open+0x10>$/;"	l
c010f9eb	obj/kernel.asm	/^c010f9eb:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010f9f0	obj/kernel.asm	/^c010f9f0:	eb 05                	jmp    c010f9f7 <stdin_open+0x15>$/;"	l
c010f9f2	obj/kernel.asm	/^c010f9f2:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010f9f7	obj/kernel.asm	/^c010f9f7:	5d                   	pop    %ebp$/;"	l
c010f9f8	obj/kernel.asm	/^c010f9f8:	c3                   	ret    $/;"	l
c010f9f9	obj/kernel.asm	/^c010f9f9 <stdin_close>:$/;"	l
c010f9f9	obj/kernel.asm	/^c010f9f9:	55                   	push   %ebp$/;"	l
c010f9fa	obj/kernel.asm	/^c010f9fa:	89 e5                	mov    %esp,%ebp$/;"	l
c010f9fc	obj/kernel.asm	/^c010f9fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010fa01	obj/kernel.asm	/^c010fa01:	5d                   	pop    %ebp$/;"	l
c010fa02	obj/kernel.asm	/^c010fa02:	c3                   	ret    $/;"	l
c010fa03	obj/kernel.asm	/^c010fa03 <stdin_io>:$/;"	l
c010fa03	obj/kernel.asm	/^c010fa03:	55                   	push   %ebp$/;"	l
c010fa04	obj/kernel.asm	/^c010fa04:	89 e5                	mov    %esp,%ebp$/;"	l
c010fa06	obj/kernel.asm	/^c010fa06:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fa09	obj/kernel.asm	/^c010fa09:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010fa0d	obj/kernel.asm	/^c010fa0d:	75 37                	jne    c010fa46 <stdin_io+0x43>$/;"	l
c010fa0f	obj/kernel.asm	/^c010fa0f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fa12	obj/kernel.asm	/^c010fa12:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010fa15	obj/kernel.asm	/^c010fa15:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fa18	obj/kernel.asm	/^c010fa18:	8b 00                	mov    (%eax),%eax$/;"	l
c010fa1a	obj/kernel.asm	/^c010fa1a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010fa1d	obj/kernel.asm	/^c010fa1d:	52                   	push   %edx$/;"	l
c010fa1e	obj/kernel.asm	/^c010fa1e:	50                   	push   %eax$/;"	l
c010fa1f	obj/kernel.asm	/^c010fa1f:	e8 c7 fe ff ff       	call   c010f8eb <dev_stdin_read>$/;"	l
c010fa24	obj/kernel.asm	/^c010fa24:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fa27	obj/kernel.asm	/^c010fa27:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fa2a	obj/kernel.asm	/^c010fa2a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fa2e	obj/kernel.asm	/^c010fa2e:	7e 11                	jle    c010fa41 <stdin_io+0x3e>$/;"	l
c010fa30	obj/kernel.asm	/^c010fa30:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fa33	obj/kernel.asm	/^c010fa33:	8b 50 0c             	mov    0xc(%eax),%edx$/;"	l
c010fa36	obj/kernel.asm	/^c010fa36:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fa39	obj/kernel.asm	/^c010fa39:	29 c2                	sub    %eax,%edx$/;"	l
c010fa3b	obj/kernel.asm	/^c010fa3b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fa3e	obj/kernel.asm	/^c010fa3e:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010fa41	obj/kernel.asm	/^c010fa41:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fa44	obj/kernel.asm	/^c010fa44:	eb 05                	jmp    c010fa4b <stdin_io+0x48>$/;"	l
c010fa46	obj/kernel.asm	/^c010fa46:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010fa4b	obj/kernel.asm	/^c010fa4b:	c9                   	leave  $/;"	l
c010fa4c	obj/kernel.asm	/^c010fa4c:	c3                   	ret    $/;"	l
c010fa4d	obj/kernel.asm	/^c010fa4d <stdin_ioctl>:$/;"	l
c010fa4d	obj/kernel.asm	/^c010fa4d:	55                   	push   %ebp$/;"	l
c010fa4e	obj/kernel.asm	/^c010fa4e:	89 e5                	mov    %esp,%ebp$/;"	l
c010fa50	obj/kernel.asm	/^c010fa50:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010fa55	obj/kernel.asm	/^c010fa55:	5d                   	pop    %ebp$/;"	l
c010fa56	obj/kernel.asm	/^c010fa56:	c3                   	ret    $/;"	l
c010fa57	obj/kernel.asm	/^c010fa57 <stdin_device_init>:$/;"	l
c010fa57	obj/kernel.asm	/^c010fa57:	55                   	push   %ebp$/;"	l
c010fa58	obj/kernel.asm	/^c010fa58:	89 e5                	mov    %esp,%ebp$/;"	l
c010fa5a	obj/kernel.asm	/^c010fa5a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010fa5d	obj/kernel.asm	/^c010fa5d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fa60	obj/kernel.asm	/^c010fa60:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010fa66	obj/kernel.asm	/^c010fa66:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fa69	obj/kernel.asm	/^c010fa69:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
c010fa70	obj/kernel.asm	/^c010fa70:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fa73	obj/kernel.asm	/^c010fa73:	c7 40 08 e2 f9 10 c0 	movl   $0xc010f9e2,0x8(%eax)$/;"	l
c010fa7a	obj/kernel.asm	/^c010fa7a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fa7d	obj/kernel.asm	/^c010fa7d:	c7 40 0c f9 f9 10 c0 	movl   $0xc010f9f9,0xc(%eax)$/;"	l
c010fa84	obj/kernel.asm	/^c010fa84:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fa87	obj/kernel.asm	/^c010fa87:	c7 40 10 03 fa 10 c0 	movl   $0xc010fa03,0x10(%eax)$/;"	l
c010fa8e	obj/kernel.asm	/^c010fa8e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fa91	obj/kernel.asm	/^c010fa91:	c7 40 14 4d fa 10 c0 	movl   $0xc010fa4d,0x14(%eax)$/;"	l
c010fa98	obj/kernel.asm	/^c010fa98:	c7 05 84 21 15 c0 00 	movl   $0x0,0xc0152184$/;"	l
c010fa9f	obj/kernel.asm	/^c010fa9f:	00 00 00 $/;"	l
c010faa2	obj/kernel.asm	/^c010faa2:	a1 84 21 15 c0       	mov    0xc0152184,%eax$/;"	l
c010faa7	obj/kernel.asm	/^c010faa7:	a3 80 21 15 c0       	mov    %eax,0xc0152180$/;"	l
c010faac	obj/kernel.asm	/^c010faac:	a1 40 df 14 c0       	mov    0xc014df40,%eax$/;"	l
c010fab1	obj/kernel.asm	/^c010fab1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010fab4	obj/kernel.asm	/^c010fab4:	50                   	push   %eax$/;"	l
c010fab5	obj/kernel.asm	/^c010fab5:	e8 84 94 ff ff       	call   c0108f3e <wait_queue_init>$/;"	l
c010faba	obj/kernel.asm	/^c010faba:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fabd	obj/kernel.asm	/^c010fabd:	c9                   	leave  $/;"	l
c010fabe	obj/kernel.asm	/^c010fabe:	c3                   	ret    $/;"	l
c010fabf	obj/kernel.asm	/^c010fabf <dev_init_stdin>:$/;"	l
c010fabf	obj/kernel.asm	/^c010fabf:	55                   	push   %ebp$/;"	l
c010fac0	obj/kernel.asm	/^c010fac0:	89 e5                	mov    %esp,%ebp$/;"	l
c010fac2	obj/kernel.asm	/^c010fac2:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fac5	obj/kernel.asm	/^c010fac5:	e8 a1 09 00 00       	call   c011046b <dev_create_inode>$/;"	l
c010faca	obj/kernel.asm	/^c010faca:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010facd	obj/kernel.asm	/^c010facd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fad1	obj/kernel.asm	/^c010fad1:	75 14                	jne    c010fae7 <dev_init_stdin+0x28>$/;"	l
c010fad3	obj/kernel.asm	/^c010fad3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010fad6	obj/kernel.asm	/^c010fad6:	68 50 77 11 c0       	push   $0xc0117750$/;"	l
c010fadb	obj/kernel.asm	/^c010fadb:	6a 75                	push   $0x75$/;"	l
c010fadd	obj/kernel.asm	/^c010fadd:	68 69 77 11 c0       	push   $0xc0117769$/;"	l
c010fae2	obj/kernel.asm	/^c010fae2:	e8 e8 09 ff ff       	call   c01004cf <__panic>$/;"	l
c010fae7	obj/kernel.asm	/^c010fae7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010faea	obj/kernel.asm	/^c010faea:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010faed	obj/kernel.asm	/^c010faed:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010faf1	obj/kernel.asm	/^c010faf1:	74 0d                	je     c010fb00 <dev_init_stdin+0x41>$/;"	l
c010faf3	obj/kernel.asm	/^c010faf3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010faf6	obj/kernel.asm	/^c010faf6:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010faf9	obj/kernel.asm	/^c010faf9:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010fafe	obj/kernel.asm	/^c010fafe:	74 16                	je     c010fb16 <dev_init_stdin+0x57>$/;"	l
c010fb00	obj/kernel.asm	/^c010fb00:	68 84 77 11 c0       	push   $0xc0117784$/;"	l
c010fb05	obj/kernel.asm	/^c010fb05:	68 b7 77 11 c0       	push   $0xc01177b7$/;"	l
c010fb0a	obj/kernel.asm	/^c010fb0a:	6a 77                	push   $0x77$/;"	l
c010fb0c	obj/kernel.asm	/^c010fb0c:	68 69 77 11 c0       	push   $0xc0117769$/;"	l
c010fb11	obj/kernel.asm	/^c010fb11:	e8 b9 09 ff ff       	call   c01004cf <__panic>$/;"	l
c010fb16	obj/kernel.asm	/^c010fb16:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fb19	obj/kernel.asm	/^c010fb19:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010fb1c	obj/kernel.asm	/^c010fb1c:	50                   	push   %eax$/;"	l
c010fb1d	obj/kernel.asm	/^c010fb1d:	e8 35 ff ff ff       	call   c010fa57 <stdin_device_init>$/;"	l
c010fb22	obj/kernel.asm	/^c010fb22:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fb25	obj/kernel.asm	/^c010fb25:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010fb28	obj/kernel.asm	/^c010fb28:	6a 00                	push   $0x0$/;"	l
c010fb2a	obj/kernel.asm	/^c010fb2a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010fb2d	obj/kernel.asm	/^c010fb2d:	68 cc 77 11 c0       	push   $0xc01177cc$/;"	l
c010fb32	obj/kernel.asm	/^c010fb32:	e8 57 eb ff ff       	call   c010e68e <vfs_add_dev>$/;"	l
c010fb37	obj/kernel.asm	/^c010fb37:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fb3a	obj/kernel.asm	/^c010fb3a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010fb3d	obj/kernel.asm	/^c010fb3d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010fb41	obj/kernel.asm	/^c010fb41:	74 14                	je     c010fb57 <dev_init_stdin+0x98>$/;"	l
c010fb43	obj/kernel.asm	/^c010fb43:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010fb46	obj/kernel.asm	/^c010fb46:	68 d2 77 11 c0       	push   $0xc01177d2$/;"	l
c010fb4b	obj/kernel.asm	/^c010fb4b:	6a 7b                	push   $0x7b$/;"	l
c010fb4d	obj/kernel.asm	/^c010fb4d:	68 69 77 11 c0       	push   $0xc0117769$/;"	l
c010fb52	obj/kernel.asm	/^c010fb52:	e8 78 09 ff ff       	call   c01004cf <__panic>$/;"	l
c010fb57	obj/kernel.asm	/^c010fb57:	c9                   	leave  $/;"	l
c010fb58	obj/kernel.asm	/^c010fb58:	c3                   	ret    $/;"	l
c010fb59	obj/kernel.asm	/^c010fb59 <lock_disk0>:$/;"	l
c010fb59	obj/kernel.asm	/^c010fb59:	55                   	push   %ebp$/;"	l
c010fb5a	obj/kernel.asm	/^c010fb5a:	89 e5                	mov    %esp,%ebp$/;"	l
c010fb5c	obj/kernel.asm	/^c010fb5c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010fb5f	obj/kernel.asm	/^c010fb5f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010fb62	obj/kernel.asm	/^c010fb62:	68 94 21 15 c0       	push   $0xc0152194$/;"	l
c010fb67	obj/kernel.asm	/^c010fb67:	e8 97 99 ff ff       	call   c0109503 <down>$/;"	l
c010fb6c	obj/kernel.asm	/^c010fb6c:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fb6f	obj/kernel.asm	/^c010fb6f:	c9                   	leave  $/;"	l
c010fb70	obj/kernel.asm	/^c010fb70:	c3                   	ret    $/;"	l
c010fb71	obj/kernel.asm	/^c010fb71 <unlock_disk0>:$/;"	l
c010fb71	obj/kernel.asm	/^c010fb71:	55                   	push   %ebp$/;"	l
c010fb72	obj/kernel.asm	/^c010fb72:	89 e5                	mov    %esp,%ebp$/;"	l
c010fb74	obj/kernel.asm	/^c010fb74:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010fb77	obj/kernel.asm	/^c010fb77:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010fb7a	obj/kernel.asm	/^c010fb7a:	68 94 21 15 c0       	push   $0xc0152194$/;"	l
c010fb7f	obj/kernel.asm	/^c010fb7f:	e8 64 99 ff ff       	call   c01094e8 <up>$/;"	l
c010fb84	obj/kernel.asm	/^c010fb84:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fb87	obj/kernel.asm	/^c010fb87:	c9                   	leave  $/;"	l
c010fb88	obj/kernel.asm	/^c010fb88:	c3                   	ret    $/;"	l
c010fb89	obj/kernel.asm	/^c010fb89 <disk0_open>:$/;"	l
c010fb89	obj/kernel.asm	/^c010fb89:	55                   	push   %ebp$/;"	l
c010fb8a	obj/kernel.asm	/^c010fb8a:	89 e5                	mov    %esp,%ebp$/;"	l
c010fb8c	obj/kernel.asm	/^c010fb8c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010fb91	obj/kernel.asm	/^c010fb91:	5d                   	pop    %ebp$/;"	l
c010fb92	obj/kernel.asm	/^c010fb92:	c3                   	ret    $/;"	l
c010fb93	obj/kernel.asm	/^c010fb93 <disk0_close>:$/;"	l
c010fb93	obj/kernel.asm	/^c010fb93:	55                   	push   %ebp$/;"	l
c010fb94	obj/kernel.asm	/^c010fb94:	89 e5                	mov    %esp,%ebp$/;"	l
c010fb96	obj/kernel.asm	/^c010fb96:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010fb9b	obj/kernel.asm	/^c010fb9b:	5d                   	pop    %ebp$/;"	l
c010fb9c	obj/kernel.asm	/^c010fb9c:	c3                   	ret    $/;"	l
c010fb9d	obj/kernel.asm	/^c010fb9d <disk0_read_blks_nolock>:$/;"	l
c010fb9d	obj/kernel.asm	/^c010fb9d:	55                   	push   %ebp$/;"	l
c010fb9e	obj/kernel.asm	/^c010fb9e:	89 e5                	mov    %esp,%ebp$/;"	l
c010fba0	obj/kernel.asm	/^c010fba0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fba3	obj/kernel.asm	/^c010fba3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fba6	obj/kernel.asm	/^c010fba6:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010fba9	obj/kernel.asm	/^c010fba9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fbac	obj/kernel.asm	/^c010fbac:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fbaf	obj/kernel.asm	/^c010fbaf:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010fbb2	obj/kernel.asm	/^c010fbb2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fbb5	obj/kernel.asm	/^c010fbb5:	a1 90 21 15 c0       	mov    0xc0152190,%eax$/;"	l
c010fbba	obj/kernel.asm	/^c010fbba:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010fbbd	obj/kernel.asm	/^c010fbbd:	50                   	push   %eax$/;"	l
c010fbbe	obj/kernel.asm	/^c010fbbe:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010fbc1	obj/kernel.asm	/^c010fbc1:	6a 02                	push   $0x2$/;"	l
c010fbc3	obj/kernel.asm	/^c010fbc3:	e8 40 17 ff ff       	call   c0101308 <ide_read_secs>$/;"	l
c010fbc8	obj/kernel.asm	/^c010fbc8:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fbcb	obj/kernel.asm	/^c010fbcb:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010fbce	obj/kernel.asm	/^c010fbce:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010fbd2	obj/kernel.asm	/^c010fbd2:	74 20                	je     c010fbf4 <disk0_read_blks_nolock+0x57>$/;"	l
c010fbd4	obj/kernel.asm	/^c010fbd4:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010fbd7	obj/kernel.asm	/^c010fbd7:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010fbda	obj/kernel.asm	/^c010fbda:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010fbdd	obj/kernel.asm	/^c010fbdd:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010fbe0	obj/kernel.asm	/^c010fbe0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010fbe3	obj/kernel.asm	/^c010fbe3:	68 ec 77 11 c0       	push   $0xc01177ec$/;"	l
c010fbe8	obj/kernel.asm	/^c010fbe8:	6a 2e                	push   $0x2e$/;"	l
c010fbea	obj/kernel.asm	/^c010fbea:	68 34 78 11 c0       	push   $0xc0117834$/;"	l
c010fbef	obj/kernel.asm	/^c010fbef:	e8 db 08 ff ff       	call   c01004cf <__panic>$/;"	l
c010fbf4	obj/kernel.asm	/^c010fbf4:	c9                   	leave  $/;"	l
c010fbf5	obj/kernel.asm	/^c010fbf5:	c3                   	ret    $/;"	l
c010fbf6	obj/kernel.asm	/^c010fbf6 <disk0_write_blks_nolock>:$/;"	l
c010fbf6	obj/kernel.asm	/^c010fbf6:	55                   	push   %ebp$/;"	l
c010fbf7	obj/kernel.asm	/^c010fbf7:	89 e5                	mov    %esp,%ebp$/;"	l
c010fbf9	obj/kernel.asm	/^c010fbf9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fbfc	obj/kernel.asm	/^c010fbfc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fbff	obj/kernel.asm	/^c010fbff:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010fc02	obj/kernel.asm	/^c010fc02:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fc05	obj/kernel.asm	/^c010fc05:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fc08	obj/kernel.asm	/^c010fc08:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c010fc0b	obj/kernel.asm	/^c010fc0b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fc0e	obj/kernel.asm	/^c010fc0e:	a1 90 21 15 c0       	mov    0xc0152190,%eax$/;"	l
c010fc13	obj/kernel.asm	/^c010fc13:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010fc16	obj/kernel.asm	/^c010fc16:	50                   	push   %eax$/;"	l
c010fc17	obj/kernel.asm	/^c010fc17:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010fc1a	obj/kernel.asm	/^c010fc1a:	6a 02                	push   $0x2$/;"	l
c010fc1c	obj/kernel.asm	/^c010fc1c:	e8 10 19 ff ff       	call   c0101531 <ide_write_secs>$/;"	l
c010fc21	obj/kernel.asm	/^c010fc21:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fc24	obj/kernel.asm	/^c010fc24:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010fc27	obj/kernel.asm	/^c010fc27:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010fc2b	obj/kernel.asm	/^c010fc2b:	74 20                	je     c010fc4d <disk0_write_blks_nolock+0x57>$/;"	l
c010fc2d	obj/kernel.asm	/^c010fc2d:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010fc30	obj/kernel.asm	/^c010fc30:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010fc33	obj/kernel.asm	/^c010fc33:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010fc36	obj/kernel.asm	/^c010fc36:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010fc39	obj/kernel.asm	/^c010fc39:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c010fc3c	obj/kernel.asm	/^c010fc3c:	68 50 78 11 c0       	push   $0xc0117850$/;"	l
c010fc41	obj/kernel.asm	/^c010fc41:	6a 38                	push   $0x38$/;"	l
c010fc43	obj/kernel.asm	/^c010fc43:	68 34 78 11 c0       	push   $0xc0117834$/;"	l
c010fc48	obj/kernel.asm	/^c010fc48:	e8 82 08 ff ff       	call   c01004cf <__panic>$/;"	l
c010fc4d	obj/kernel.asm	/^c010fc4d:	c9                   	leave  $/;"	l
c010fc4e	obj/kernel.asm	/^c010fc4e:	c3                   	ret    $/;"	l
c010fc4f	obj/kernel.asm	/^c010fc4f <disk0_io>:$/;"	l
c010fc4f	obj/kernel.asm	/^c010fc4f:	55                   	push   %ebp$/;"	l
c010fc50	obj/kernel.asm	/^c010fc50:	89 e5                	mov    %esp,%ebp$/;"	l
c010fc52	obj/kernel.asm	/^c010fc52:	83 ec 28             	sub    $0x28,%esp$/;"	l
c010fc55	obj/kernel.asm	/^c010fc55:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fc58	obj/kernel.asm	/^c010fc58:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c010fc5b	obj/kernel.asm	/^c010fc5b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c010fc5e	obj/kernel.asm	/^c010fc5e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010fc61	obj/kernel.asm	/^c010fc61:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010fc64	obj/kernel.asm	/^c010fc64:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010fc67	obj/kernel.asm	/^c010fc67:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010fc6a	obj/kernel.asm	/^c010fc6a:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
c010fc70	obj/kernel.asm	/^c010fc70:	85 c0                	test   %eax,%eax$/;"	l
c010fc72	obj/kernel.asm	/^c010fc72:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c010fc75	obj/kernel.asm	/^c010fc75:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
c010fc78	obj/kernel.asm	/^c010fc78:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fc7b	obj/kernel.asm	/^c010fc7b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fc7e	obj/kernel.asm	/^c010fc7e:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010fc81	obj/kernel.asm	/^c010fc81:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010fc84	obj/kernel.asm	/^c010fc84:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c010fc87	obj/kernel.asm	/^c010fc87:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c010fc8c	obj/kernel.asm	/^c010fc8c:	85 c0                	test   %eax,%eax$/;"	l
c010fc8e	obj/kernel.asm	/^c010fc8e:	75 0c                	jne    c010fc9c <disk0_io+0x4d>$/;"	l
c010fc90	obj/kernel.asm	/^c010fc90:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fc93	obj/kernel.asm	/^c010fc93:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c010fc98	obj/kernel.asm	/^c010fc98:	85 c0                	test   %eax,%eax$/;"	l
c010fc9a	obj/kernel.asm	/^c010fc9a:	74 0a                	je     c010fca6 <disk0_io+0x57>$/;"	l
c010fc9c	obj/kernel.asm	/^c010fc9c:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010fca1	obj/kernel.asm	/^c010fca1:	e9 3b 01 00 00       	jmp    c010fde1 <disk0_io+0x192>$/;"	l
c010fca6	obj/kernel.asm	/^c010fca6:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c010fca9	obj/kernel.asm	/^c010fca9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fcac	obj/kernel.asm	/^c010fcac:	01 c2                	add    %eax,%edx$/;"	l
c010fcae	obj/kernel.asm	/^c010fcae:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fcb1	obj/kernel.asm	/^c010fcb1:	8b 00                	mov    (%eax),%eax$/;"	l
c010fcb3	obj/kernel.asm	/^c010fcb3:	39 c2                	cmp    %eax,%edx$/;"	l
c010fcb5	obj/kernel.asm	/^c010fcb5:	76 0a                	jbe    c010fcc1 <disk0_io+0x72>$/;"	l
c010fcb7	obj/kernel.asm	/^c010fcb7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010fcbc	obj/kernel.asm	/^c010fcbc:	e9 20 01 00 00       	jmp    c010fde1 <disk0_io+0x192>$/;"	l
c010fcc1	obj/kernel.asm	/^c010fcc1:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010fcc5	obj/kernel.asm	/^c010fcc5:	75 0a                	jne    c010fcd1 <disk0_io+0x82>$/;"	l
c010fcc7	obj/kernel.asm	/^c010fcc7:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010fccc	obj/kernel.asm	/^c010fccc:	e9 10 01 00 00       	jmp    c010fde1 <disk0_io+0x192>$/;"	l
c010fcd1	obj/kernel.asm	/^c010fcd1:	e8 83 fe ff ff       	call   c010fb59 <lock_disk0>$/;"	l
c010fcd6	obj/kernel.asm	/^c010fcd6:	e9 f2 00 00 00       	jmp    c010fdcd <disk0_io+0x17e>$/;"	l
c010fcdb	obj/kernel.asm	/^c010fcdb:	c7 45 e8 00 40 00 00 	movl   $0x4000,-0x18(%ebp)$/;"	l
c010fce2	obj/kernel.asm	/^c010fce2:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010fce6	obj/kernel.asm	/^c010fce6:	74 6a                	je     c010fd52 <disk0_io+0x103>$/;"	l
c010fce8	obj/kernel.asm	/^c010fce8:	a1 90 21 15 c0       	mov    0xc0152190,%eax$/;"	l
c010fced	obj/kernel.asm	/^c010fced:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010fcf0	obj/kernel.asm	/^c010fcf0:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
c010fcf3	obj/kernel.asm	/^c010fcf3:	52                   	push   %edx$/;"	l
c010fcf4	obj/kernel.asm	/^c010fcf4:	6a 00                	push   $0x0$/;"	l
c010fcf6	obj/kernel.asm	/^c010fcf6:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010fcf9	obj/kernel.asm	/^c010fcf9:	50                   	push   %eax$/;"	l
c010fcfa	obj/kernel.asm	/^c010fcfa:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010fcfd	obj/kernel.asm	/^c010fcfd:	e8 8a b0 ff ff       	call   c010ad8c <iobuf_move>$/;"	l
c010fd02	obj/kernel.asm	/^c010fd02:	83 c4 20             	add    $0x20,%esp$/;"	l
c010fd05	obj/kernel.asm	/^c010fd05:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010fd08	obj/kernel.asm	/^c010fd08:	85 c0                	test   %eax,%eax$/;"	l
c010fd0a	obj/kernel.asm	/^c010fd0a:	74 14                	je     c010fd20 <disk0_io+0xd1>$/;"	l
c010fd0c	obj/kernel.asm	/^c010fd0c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010fd0f	obj/kernel.asm	/^c010fd0f:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010fd12	obj/kernel.asm	/^c010fd12:	77 0c                	ja     c010fd20 <disk0_io+0xd1>$/;"	l
c010fd14	obj/kernel.asm	/^c010fd14:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010fd17	obj/kernel.asm	/^c010fd17:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c010fd1c	obj/kernel.asm	/^c010fd1c:	85 c0                	test   %eax,%eax$/;"	l
c010fd1e	obj/kernel.asm	/^c010fd1e:	74 16                	je     c010fd36 <disk0_io+0xe7>$/;"	l
c010fd20	obj/kernel.asm	/^c010fd20:	68 9c 78 11 c0       	push   $0xc011789c$/;"	l
c010fd25	obj/kernel.asm	/^c010fd25:	68 da 78 11 c0       	push   $0xc01178da$/;"	l
c010fd2a	obj/kernel.asm	/^c010fd2a:	6a 57                	push   $0x57$/;"	l
c010fd2c	obj/kernel.asm	/^c010fd2c:	68 34 78 11 c0       	push   $0xc0117834$/;"	l
c010fd31	obj/kernel.asm	/^c010fd31:	e8 99 07 ff ff       	call   c01004cf <__panic>$/;"	l
c010fd36	obj/kernel.asm	/^c010fd36:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010fd39	obj/kernel.asm	/^c010fd39:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010fd3c	obj/kernel.asm	/^c010fd3c:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010fd3f	obj/kernel.asm	/^c010fd3f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010fd42	obj/kernel.asm	/^c010fd42:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010fd45	obj/kernel.asm	/^c010fd45:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010fd48	obj/kernel.asm	/^c010fd48:	e8 a9 fe ff ff       	call   c010fbf6 <disk0_write_blks_nolock>$/;"	l
c010fd4d	obj/kernel.asm	/^c010fd4d:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fd50	obj/kernel.asm	/^c010fd50:	eb 6f                	jmp    c010fdc1 <disk0_io+0x172>$/;"	l
c010fd52	obj/kernel.asm	/^c010fd52:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010fd55	obj/kernel.asm	/^c010fd55:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c010fd58	obj/kernel.asm	/^c010fd58:	76 06                	jbe    c010fd60 <disk0_io+0x111>$/;"	l
c010fd5a	obj/kernel.asm	/^c010fd5a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fd5d	obj/kernel.asm	/^c010fd5d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c010fd60	obj/kernel.asm	/^c010fd60:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c010fd63	obj/kernel.asm	/^c010fd63:	c1 e8 0c             	shr    $0xc,%eax$/;"	l
c010fd66	obj/kernel.asm	/^c010fd66:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010fd69	obj/kernel.asm	/^c010fd69:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010fd6c	obj/kernel.asm	/^c010fd6c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010fd6f	obj/kernel.asm	/^c010fd6f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c010fd72	obj/kernel.asm	/^c010fd72:	e8 26 fe ff ff       	call   c010fb9d <disk0_read_blks_nolock>$/;"	l
c010fd77	obj/kernel.asm	/^c010fd77:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fd7a	obj/kernel.asm	/^c010fd7a:	a1 90 21 15 c0       	mov    0xc0152190,%eax$/;"	l
c010fd7f	obj/kernel.asm	/^c010fd7f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010fd82	obj/kernel.asm	/^c010fd82:	8d 55 e0             	lea    -0x20(%ebp),%edx$/;"	l
c010fd85	obj/kernel.asm	/^c010fd85:	52                   	push   %edx$/;"	l
c010fd86	obj/kernel.asm	/^c010fd86:	6a 01                	push   $0x1$/;"	l
c010fd88	obj/kernel.asm	/^c010fd88:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c010fd8b	obj/kernel.asm	/^c010fd8b:	50                   	push   %eax$/;"	l
c010fd8c	obj/kernel.asm	/^c010fd8c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c010fd8f	obj/kernel.asm	/^c010fd8f:	e8 f8 af ff ff       	call   c010ad8c <iobuf_move>$/;"	l
c010fd94	obj/kernel.asm	/^c010fd94:	83 c4 20             	add    $0x20,%esp$/;"	l
c010fd97	obj/kernel.asm	/^c010fd97:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010fd9a	obj/kernel.asm	/^c010fd9a:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c010fd9d	obj/kernel.asm	/^c010fd9d:	75 0c                	jne    c010fdab <disk0_io+0x15c>$/;"	l
c010fd9f	obj/kernel.asm	/^c010fd9f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010fda2	obj/kernel.asm	/^c010fda2:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c010fda7	obj/kernel.asm	/^c010fda7:	85 c0                	test   %eax,%eax$/;"	l
c010fda9	obj/kernel.asm	/^c010fda9:	74 16                	je     c010fdc1 <disk0_io+0x172>$/;"	l
c010fdab	obj/kernel.asm	/^c010fdab:	68 f0 78 11 c0       	push   $0xc01178f0$/;"	l
c010fdb0	obj/kernel.asm	/^c010fdb0:	68 da 78 11 c0       	push   $0xc01178da$/;"	l
c010fdb5	obj/kernel.asm	/^c010fdb5:	6a 62                	push   $0x62$/;"	l
c010fdb7	obj/kernel.asm	/^c010fdb7:	68 34 78 11 c0       	push   $0xc0117834$/;"	l
c010fdbc	obj/kernel.asm	/^c010fdbc:	e8 0e 07 ff ff       	call   c01004cf <__panic>$/;"	l
c010fdc1	obj/kernel.asm	/^c010fdc1:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c010fdc4	obj/kernel.asm	/^c010fdc4:	29 45 f4             	sub    %eax,-0xc(%ebp)$/;"	l
c010fdc7	obj/kernel.asm	/^c010fdc7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c010fdca	obj/kernel.asm	/^c010fdca:	01 45 f0             	add    %eax,-0x10(%ebp)$/;"	l
c010fdcd	obj/kernel.asm	/^c010fdcd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010fdd1	obj/kernel.asm	/^c010fdd1:	0f 85 04 ff ff ff    	jne    c010fcdb <disk0_io+0x8c>$/;"	l
c010fdd7	obj/kernel.asm	/^c010fdd7:	e8 95 fd ff ff       	call   c010fb71 <unlock_disk0>$/;"	l
c010fddc	obj/kernel.asm	/^c010fddc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010fde1	obj/kernel.asm	/^c010fde1:	c9                   	leave  $/;"	l
c010fde2	obj/kernel.asm	/^c010fde2:	c3                   	ret    $/;"	l
c010fde3	obj/kernel.asm	/^c010fde3 <disk0_ioctl>:$/;"	l
c010fde3	obj/kernel.asm	/^c010fde3:	55                   	push   %ebp$/;"	l
c010fde4	obj/kernel.asm	/^c010fde4:	89 e5                	mov    %esp,%ebp$/;"	l
c010fde6	obj/kernel.asm	/^c010fde6:	b8 ec ff ff ff       	mov    $0xffffffec,%eax$/;"	l
c010fdeb	obj/kernel.asm	/^c010fdeb:	5d                   	pop    %ebp$/;"	l
c010fdec	obj/kernel.asm	/^c010fdec:	c3                   	ret    $/;"	l
c010fded	obj/kernel.asm	/^c010fded <disk0_device_init>:$/;"	l
c010fded	obj/kernel.asm	/^c010fded:	55                   	push   %ebp$/;"	l
c010fdee	obj/kernel.asm	/^c010fdee:	89 e5                	mov    %esp,%ebp$/;"	l
c010fdf0	obj/kernel.asm	/^c010fdf0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010fdf3	obj/kernel.asm	/^c010fdf3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010fdf6	obj/kernel.asm	/^c010fdf6:	6a 02                	push   $0x2$/;"	l
c010fdf8	obj/kernel.asm	/^c010fdf8:	e8 8a 14 ff ff       	call   c0101287 <ide_device_valid>$/;"	l
c010fdfd	obj/kernel.asm	/^c010fdfd:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fe00	obj/kernel.asm	/^c010fe00:	85 c0                	test   %eax,%eax$/;"	l
c010fe02	obj/kernel.asm	/^c010fe02:	75 14                	jne    c010fe18 <disk0_device_init+0x2b>$/;"	l
c010fe04	obj/kernel.asm	/^c010fe04:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010fe07	obj/kernel.asm	/^c010fe07:	68 20 79 11 c0       	push   $0xc0117920$/;"	l
c010fe0c	obj/kernel.asm	/^c010fe0c:	6a 73                	push   $0x73$/;"	l
c010fe0e	obj/kernel.asm	/^c010fe0e:	68 34 78 11 c0       	push   $0xc0117834$/;"	l
c010fe13	obj/kernel.asm	/^c010fe13:	e8 b7 06 ff ff       	call   c01004cf <__panic>$/;"	l
c010fe18	obj/kernel.asm	/^c010fe18:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010fe1b	obj/kernel.asm	/^c010fe1b:	6a 02                	push   $0x2$/;"	l
c010fe1d	obj/kernel.asm	/^c010fe1d:	e8 a5 14 ff ff       	call   c01012c7 <ide_device_size>$/;"	l
c010fe22	obj/kernel.asm	/^c010fe22:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fe25	obj/kernel.asm	/^c010fe25:	c1 e8 03             	shr    $0x3,%eax$/;"	l
c010fe28	obj/kernel.asm	/^c010fe28:	89 c2                	mov    %eax,%edx$/;"	l
c010fe2a	obj/kernel.asm	/^c010fe2a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fe2d	obj/kernel.asm	/^c010fe2d:	89 10                	mov    %edx,(%eax)$/;"	l
c010fe2f	obj/kernel.asm	/^c010fe2f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fe32	obj/kernel.asm	/^c010fe32:	c7 40 04 00 10 00 00 	movl   $0x1000,0x4(%eax)$/;"	l
c010fe39	obj/kernel.asm	/^c010fe39:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fe3c	obj/kernel.asm	/^c010fe3c:	c7 40 08 89 fb 10 c0 	movl   $0xc010fb89,0x8(%eax)$/;"	l
c010fe43	obj/kernel.asm	/^c010fe43:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fe46	obj/kernel.asm	/^c010fe46:	c7 40 0c 93 fb 10 c0 	movl   $0xc010fb93,0xc(%eax)$/;"	l
c010fe4d	obj/kernel.asm	/^c010fe4d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fe50	obj/kernel.asm	/^c010fe50:	c7 40 10 4f fc 10 c0 	movl   $0xc010fc4f,0x10(%eax)$/;"	l
c010fe57	obj/kernel.asm	/^c010fe57:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fe5a	obj/kernel.asm	/^c010fe5a:	c7 40 14 e3 fd 10 c0 	movl   $0xc010fde3,0x14(%eax)$/;"	l
c010fe61	obj/kernel.asm	/^c010fe61:	83 ec 08             	sub    $0x8,%esp$/;"	l
c010fe64	obj/kernel.asm	/^c010fe64:	6a 01                	push   $0x1$/;"	l
c010fe66	obj/kernel.asm	/^c010fe66:	68 94 21 15 c0       	push   $0xc0152194$/;"	l
c010fe6b	obj/kernel.asm	/^c010fe6b:	e8 0d 95 ff ff       	call   c010937d <sem_init>$/;"	l
c010fe70	obj/kernel.asm	/^c010fe70:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fe73	obj/kernel.asm	/^c010fe73:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010fe76	obj/kernel.asm	/^c010fe76:	68 00 40 00 00       	push   $0x4000$/;"	l
c010fe7b	obj/kernel.asm	/^c010fe7b:	e8 76 75 ff ff       	call   c01073f6 <kmalloc>$/;"	l
c010fe80	obj/kernel.asm	/^c010fe80:	83 c4 10             	add    $0x10,%esp$/;"	l
c010fe83	obj/kernel.asm	/^c010fe83:	a3 90 21 15 c0       	mov    %eax,0xc0152190$/;"	l
c010fe88	obj/kernel.asm	/^c010fe88:	a1 90 21 15 c0       	mov    0xc0152190,%eax$/;"	l
c010fe8d	obj/kernel.asm	/^c010fe8d:	85 c0                	test   %eax,%eax$/;"	l
c010fe8f	obj/kernel.asm	/^c010fe8f:	75 14                	jne    c010fea5 <disk0_device_init+0xb8>$/;"	l
c010fe91	obj/kernel.asm	/^c010fe91:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010fe94	obj/kernel.asm	/^c010fe94:	68 3f 79 11 c0       	push   $0xc011793f$/;"	l
c010fe99	obj/kernel.asm	/^c010fe99:	6a 7f                	push   $0x7f$/;"	l
c010fe9b	obj/kernel.asm	/^c010fe9b:	68 34 78 11 c0       	push   $0xc0117834$/;"	l
c010fea0	obj/kernel.asm	/^c010fea0:	e8 2a 06 ff ff       	call   c01004cf <__panic>$/;"	l
c010fea5	obj/kernel.asm	/^c010fea5:	c9                   	leave  $/;"	l
c010fea6	obj/kernel.asm	/^c010fea6:	c3                   	ret    $/;"	l
c010fea7	obj/kernel.asm	/^c010fea7 <dev_init_disk0>:$/;"	l
c010fea7	obj/kernel.asm	/^c010fea7:	55                   	push   %ebp$/;"	l
c010fea8	obj/kernel.asm	/^c010fea8:	89 e5                	mov    %esp,%ebp$/;"	l
c010feaa	obj/kernel.asm	/^c010feaa:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010fead	obj/kernel.asm	/^c010fead:	e8 b9 05 00 00       	call   c011046b <dev_create_inode>$/;"	l
c010feb2	obj/kernel.asm	/^c010feb2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010feb5	obj/kernel.asm	/^c010feb5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c010feb9	obj/kernel.asm	/^c010feb9:	75 17                	jne    c010fed2 <dev_init_disk0+0x2b>$/;"	l
c010febb	obj/kernel.asm	/^c010febb:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010febe	obj/kernel.asm	/^c010febe:	68 5b 79 11 c0       	push   $0xc011795b$/;"	l
c010fec3	obj/kernel.asm	/^c010fec3:	68 87 00 00 00       	push   $0x87$/;"	l
c010fec8	obj/kernel.asm	/^c010fec8:	68 34 78 11 c0       	push   $0xc0117834$/;"	l
c010fecd	obj/kernel.asm	/^c010fecd:	e8 fd 05 ff ff       	call   c01004cf <__panic>$/;"	l
c010fed2	obj/kernel.asm	/^c010fed2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010fed5	obj/kernel.asm	/^c010fed5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c010fed8	obj/kernel.asm	/^c010fed8:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c010fedc	obj/kernel.asm	/^c010fedc:	74 0d                	je     c010feeb <dev_init_disk0+0x44>$/;"	l
c010fede	obj/kernel.asm	/^c010fede:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010fee1	obj/kernel.asm	/^c010fee1:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c010fee4	obj/kernel.asm	/^c010fee4:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c010fee9	obj/kernel.asm	/^c010fee9:	74 19                	je     c010ff04 <dev_init_disk0+0x5d>$/;"	l
c010feeb	obj/kernel.asm	/^c010feeb:	68 74 79 11 c0       	push   $0xc0117974$/;"	l
c010fef0	obj/kernel.asm	/^c010fef0:	68 da 78 11 c0       	push   $0xc01178da$/;"	l
c010fef5	obj/kernel.asm	/^c010fef5:	68 89 00 00 00       	push   $0x89$/;"	l
c010fefa	obj/kernel.asm	/^c010fefa:	68 34 78 11 c0       	push   $0xc0117834$/;"	l
c010feff	obj/kernel.asm	/^c010feff:	e8 cb 05 ff ff       	call   c01004cf <__panic>$/;"	l
c010ff04	obj/kernel.asm	/^c010ff04:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c010ff07	obj/kernel.asm	/^c010ff07:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ff0a	obj/kernel.asm	/^c010ff0a:	50                   	push   %eax$/;"	l
c010ff0b	obj/kernel.asm	/^c010ff0b:	e8 dd fe ff ff       	call   c010fded <disk0_device_init>$/;"	l
c010ff10	obj/kernel.asm	/^c010ff10:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ff13	obj/kernel.asm	/^c010ff13:	83 ec 04             	sub    $0x4,%esp$/;"	l
c010ff16	obj/kernel.asm	/^c010ff16:	6a 01                	push   $0x1$/;"	l
c010ff18	obj/kernel.asm	/^c010ff18:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c010ff1b	obj/kernel.asm	/^c010ff1b:	68 a7 79 11 c0       	push   $0xc01179a7$/;"	l
c010ff20	obj/kernel.asm	/^c010ff20:	e8 69 e7 ff ff       	call   c010e68e <vfs_add_dev>$/;"	l
c010ff25	obj/kernel.asm	/^c010ff25:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ff28	obj/kernel.asm	/^c010ff28:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c010ff2b	obj/kernel.asm	/^c010ff2b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c010ff2f	obj/kernel.asm	/^c010ff2f:	74 17                	je     c010ff48 <dev_init_disk0+0xa1>$/;"	l
c010ff31	obj/kernel.asm	/^c010ff31:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c010ff34	obj/kernel.asm	/^c010ff34:	68 ad 79 11 c0       	push   $0xc01179ad$/;"	l
c010ff39	obj/kernel.asm	/^c010ff39:	68 8d 00 00 00       	push   $0x8d$/;"	l
c010ff3e	obj/kernel.asm	/^c010ff3e:	68 34 78 11 c0       	push   $0xc0117834$/;"	l
c010ff43	obj/kernel.asm	/^c010ff43:	e8 87 05 ff ff       	call   c01004cf <__panic>$/;"	l
c010ff48	obj/kernel.asm	/^c010ff48:	c9                   	leave  $/;"	l
c010ff49	obj/kernel.asm	/^c010ff49:	c3                   	ret    $/;"	l
c010ff4a	obj/kernel.asm	/^c010ff4a <stdout_open>:$/;"	l
c010ff4a	obj/kernel.asm	/^c010ff4a:	55                   	push   %ebp$/;"	l
c010ff4b	obj/kernel.asm	/^c010ff4b:	89 e5                	mov    %esp,%ebp$/;"	l
c010ff4d	obj/kernel.asm	/^c010ff4d:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c010ff51	obj/kernel.asm	/^c010ff51:	74 07                	je     c010ff5a <stdout_open+0x10>$/;"	l
c010ff53	obj/kernel.asm	/^c010ff53:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010ff58	obj/kernel.asm	/^c010ff58:	eb 05                	jmp    c010ff5f <stdout_open+0x15>$/;"	l
c010ff5a	obj/kernel.asm	/^c010ff5a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ff5f	obj/kernel.asm	/^c010ff5f:	5d                   	pop    %ebp$/;"	l
c010ff60	obj/kernel.asm	/^c010ff60:	c3                   	ret    $/;"	l
c010ff61	obj/kernel.asm	/^c010ff61 <stdout_close>:$/;"	l
c010ff61	obj/kernel.asm	/^c010ff61:	55                   	push   %ebp$/;"	l
c010ff62	obj/kernel.asm	/^c010ff62:	89 e5                	mov    %esp,%ebp$/;"	l
c010ff64	obj/kernel.asm	/^c010ff64:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ff69	obj/kernel.asm	/^c010ff69:	5d                   	pop    %ebp$/;"	l
c010ff6a	obj/kernel.asm	/^c010ff6a:	c3                   	ret    $/;"	l
c010ff6b	obj/kernel.asm	/^c010ff6b <stdout_io>:$/;"	l
c010ff6b	obj/kernel.asm	/^c010ff6b:	55                   	push   %ebp$/;"	l
c010ff6c	obj/kernel.asm	/^c010ff6c:	89 e5                	mov    %esp,%ebp$/;"	l
c010ff6e	obj/kernel.asm	/^c010ff6e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c010ff71	obj/kernel.asm	/^c010ff71:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c010ff75	obj/kernel.asm	/^c010ff75:	74 45                	je     c010ffbc <stdout_io+0x51>$/;"	l
c010ff77	obj/kernel.asm	/^c010ff77:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ff7a	obj/kernel.asm	/^c010ff7a:	8b 00                	mov    (%eax),%eax$/;"	l
c010ff7c	obj/kernel.asm	/^c010ff7c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c010ff7f	obj/kernel.asm	/^c010ff7f:	eb 2a                	jmp    c010ffab <stdout_io+0x40>$/;"	l
c010ff81	obj/kernel.asm	/^c010ff81:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c010ff84	obj/kernel.asm	/^c010ff84:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c010ff87	obj/kernel.asm	/^c010ff87:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c010ff8a	obj/kernel.asm	/^c010ff8a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c010ff8d	obj/kernel.asm	/^c010ff8d:	0f be c0             	movsbl %al,%eax$/;"	l
c010ff90	obj/kernel.asm	/^c010ff90:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c010ff93	obj/kernel.asm	/^c010ff93:	50                   	push   %eax$/;"	l
c010ff94	obj/kernel.asm	/^c010ff94:	e8 f7 03 ff ff       	call   c0100390 <cputchar>$/;"	l
c010ff99	obj/kernel.asm	/^c010ff99:	83 c4 10             	add    $0x10,%esp$/;"	l
c010ff9c	obj/kernel.asm	/^c010ff9c:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ff9f	obj/kernel.asm	/^c010ff9f:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010ffa2	obj/kernel.asm	/^c010ffa2:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c010ffa5	obj/kernel.asm	/^c010ffa5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ffa8	obj/kernel.asm	/^c010ffa8:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c010ffab	obj/kernel.asm	/^c010ffab:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c010ffae	obj/kernel.asm	/^c010ffae:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c010ffb1	obj/kernel.asm	/^c010ffb1:	85 c0                	test   %eax,%eax$/;"	l
c010ffb3	obj/kernel.asm	/^c010ffb3:	75 cc                	jne    c010ff81 <stdout_io+0x16>$/;"	l
c010ffb5	obj/kernel.asm	/^c010ffb5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c010ffba	obj/kernel.asm	/^c010ffba:	eb 05                	jmp    c010ffc1 <stdout_io+0x56>$/;"	l
c010ffbc	obj/kernel.asm	/^c010ffbc:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010ffc1	obj/kernel.asm	/^c010ffc1:	c9                   	leave  $/;"	l
c010ffc2	obj/kernel.asm	/^c010ffc2:	c3                   	ret    $/;"	l
c010ffc3	obj/kernel.asm	/^c010ffc3 <stdout_ioctl>:$/;"	l
c010ffc3	obj/kernel.asm	/^c010ffc3:	55                   	push   %ebp$/;"	l
c010ffc4	obj/kernel.asm	/^c010ffc4:	89 e5                	mov    %esp,%ebp$/;"	l
c010ffc6	obj/kernel.asm	/^c010ffc6:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c010ffcb	obj/kernel.asm	/^c010ffcb:	5d                   	pop    %ebp$/;"	l
c010ffcc	obj/kernel.asm	/^c010ffcc:	c3                   	ret    $/;"	l
c010ffcd	obj/kernel.asm	/^c010ffcd <stdout_device_init>:$/;"	l
c010ffcd	obj/kernel.asm	/^c010ffcd:	55                   	push   %ebp$/;"	l
c010ffce	obj/kernel.asm	/^c010ffce:	89 e5                	mov    %esp,%ebp$/;"	l
c010ffd0	obj/kernel.asm	/^c010ffd0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ffd3	obj/kernel.asm	/^c010ffd3:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c010ffd9	obj/kernel.asm	/^c010ffd9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ffdc	obj/kernel.asm	/^c010ffdc:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
c010ffe3	obj/kernel.asm	/^c010ffe3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010ffe6	obj/kernel.asm	/^c010ffe6:	c7 40 08 4a ff 10 c0 	movl   $0xc010ff4a,0x8(%eax)$/;"	l
c010ffed	obj/kernel.asm	/^c010ffed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fff0	obj/kernel.asm	/^c010fff0:	c7 40 0c 61 ff 10 c0 	movl   $0xc010ff61,0xc(%eax)$/;"	l
c010fff7	obj/kernel.asm	/^c010fff7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c010fffa	obj/kernel.asm	/^c010fffa:	c7 40 10 6b ff 10 c0 	movl   $0xc010ff6b,0x10(%eax)$/;"	l
c0110001	obj/kernel.asm	/^c0110001:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110004	obj/kernel.asm	/^c0110004:	c7 40 14 c3 ff 10 c0 	movl   $0xc010ffc3,0x14(%eax)$/;"	l
c011000b	obj/kernel.asm	/^c011000b:	5d                   	pop    %ebp$/;"	l
c011000c	obj/kernel.asm	/^c011000c:	c3                   	ret    $/;"	l
c011000d	obj/kernel.asm	/^c011000d <dev_init_stdout>:$/;"	l
c011000d	obj/kernel.asm	/^c011000d:	55                   	push   %ebp$/;"	l
c011000e	obj/kernel.asm	/^c011000e:	89 e5                	mov    %esp,%ebp$/;"	l
c0110010	obj/kernel.asm	/^c0110010:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110013	obj/kernel.asm	/^c0110013:	e8 53 04 00 00       	call   c011046b <dev_create_inode>$/;"	l
c0110018	obj/kernel.asm	/^c0110018:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011001b	obj/kernel.asm	/^c011001b:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011001f	obj/kernel.asm	/^c011001f:	75 14                	jne    c0110035 <dev_init_stdout+0x28>$/;"	l
c0110021	obj/kernel.asm	/^c0110021:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0110024	obj/kernel.asm	/^c0110024:	68 c8 79 11 c0       	push   $0xc01179c8$/;"	l
c0110029	obj/kernel.asm	/^c0110029:	6a 37                	push   $0x37$/;"	l
c011002b	obj/kernel.asm	/^c011002b:	68 e2 79 11 c0       	push   $0xc01179e2$/;"	l
c0110030	obj/kernel.asm	/^c0110030:	e8 9a 04 ff ff       	call   c01004cf <__panic>$/;"	l
c0110035	obj/kernel.asm	/^c0110035:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110038	obj/kernel.asm	/^c0110038:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011003b	obj/kernel.asm	/^c011003b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011003f	obj/kernel.asm	/^c011003f:	74 0d                	je     c011004e <dev_init_stdout+0x41>$/;"	l
c0110041	obj/kernel.asm	/^c0110041:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110044	obj/kernel.asm	/^c0110044:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0110047	obj/kernel.asm	/^c0110047:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c011004c	obj/kernel.asm	/^c011004c:	74 16                	je     c0110064 <dev_init_stdout+0x57>$/;"	l
c011004e	obj/kernel.asm	/^c011004e:	68 fc 79 11 c0       	push   $0xc01179fc$/;"	l
c0110053	obj/kernel.asm	/^c0110053:	68 2f 7a 11 c0       	push   $0xc0117a2f$/;"	l
c0110058	obj/kernel.asm	/^c0110058:	6a 39                	push   $0x39$/;"	l
c011005a	obj/kernel.asm	/^c011005a:	68 e2 79 11 c0       	push   $0xc01179e2$/;"	l
c011005f	obj/kernel.asm	/^c011005f:	e8 6b 04 ff ff       	call   c01004cf <__panic>$/;"	l
c0110064	obj/kernel.asm	/^c0110064:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110067	obj/kernel.asm	/^c0110067:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011006a	obj/kernel.asm	/^c011006a:	50                   	push   %eax$/;"	l
c011006b	obj/kernel.asm	/^c011006b:	e8 5d ff ff ff       	call   c010ffcd <stdout_device_init>$/;"	l
c0110070	obj/kernel.asm	/^c0110070:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110073	obj/kernel.asm	/^c0110073:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0110076	obj/kernel.asm	/^c0110076:	6a 00                	push   $0x0$/;"	l
c0110078	obj/kernel.asm	/^c0110078:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c011007b	obj/kernel.asm	/^c011007b:	68 44 7a 11 c0       	push   $0xc0117a44$/;"	l
c0110080	obj/kernel.asm	/^c0110080:	e8 09 e6 ff ff       	call   c010e68e <vfs_add_dev>$/;"	l
c0110085	obj/kernel.asm	/^c0110085:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110088	obj/kernel.asm	/^c0110088:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011008b	obj/kernel.asm	/^c011008b:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c011008f	obj/kernel.asm	/^c011008f:	74 14                	je     c01100a5 <dev_init_stdout+0x98>$/;"	l
c0110091	obj/kernel.asm	/^c0110091:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0110094	obj/kernel.asm	/^c0110094:	68 4b 7a 11 c0       	push   $0xc0117a4b$/;"	l
c0110099	obj/kernel.asm	/^c0110099:	6a 3d                	push   $0x3d$/;"	l
c011009b	obj/kernel.asm	/^c011009b:	68 e2 79 11 c0       	push   $0xc01179e2$/;"	l
c01100a0	obj/kernel.asm	/^c01100a0:	e8 2a 04 ff ff       	call   c01004cf <__panic>$/;"	l
c01100a5	obj/kernel.asm	/^c01100a5:	c9                   	leave  $/;"	l
c01100a6	obj/kernel.asm	/^c01100a6:	c3                   	ret    $/;"	l
c01100a7	obj/kernel.asm	/^c01100a7 <dev_open>:$/;"	l
c01100a7	obj/kernel.asm	/^c01100a7:	55                   	push   %ebp$/;"	l
c01100a8	obj/kernel.asm	/^c01100a8:	89 e5                	mov    %esp,%ebp$/;"	l
c01100aa	obj/kernel.asm	/^c01100aa:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01100ad	obj/kernel.asm	/^c01100ad:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01100b0	obj/kernel.asm	/^c01100b0:	83 e0 3c             	and    $0x3c,%eax$/;"	l
c01100b3	obj/kernel.asm	/^c01100b3:	85 c0                	test   %eax,%eax$/;"	l
c01100b5	obj/kernel.asm	/^c01100b5:	74 07                	je     c01100be <dev_open+0x17>$/;"	l
c01100b7	obj/kernel.asm	/^c01100b7:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c01100bc	obj/kernel.asm	/^c01100bc:	eb 49                	jmp    c0110107 <dev_open+0x60>$/;"	l
c01100be	obj/kernel.asm	/^c01100be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01100c1	obj/kernel.asm	/^c01100c1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01100c4	obj/kernel.asm	/^c01100c4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01100c8	obj/kernel.asm	/^c01100c8:	74 0d                	je     c01100d7 <dev_open+0x30>$/;"	l
c01100ca	obj/kernel.asm	/^c01100ca:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01100cd	obj/kernel.asm	/^c01100cd:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01100d0	obj/kernel.asm	/^c01100d0:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c01100d5	obj/kernel.asm	/^c01100d5:	74 16                	je     c01100ed <dev_open+0x46>$/;"	l
c01100d7	obj/kernel.asm	/^c01100d7:	68 80 7a 11 c0       	push   $0xc0117a80$/;"	l
c01100dc	obj/kernel.asm	/^c01100dc:	68 b3 7a 11 c0       	push   $0xc0117ab3$/;"	l
c01100e1	obj/kernel.asm	/^c01100e1:	6a 11                	push   $0x11$/;"	l
c01100e3	obj/kernel.asm	/^c01100e3:	68 c8 7a 11 c0       	push   $0xc0117ac8$/;"	l
c01100e8	obj/kernel.asm	/^c01100e8:	e8 e2 03 ff ff       	call   c01004cf <__panic>$/;"	l
c01100ed	obj/kernel.asm	/^c01100ed:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01100f0	obj/kernel.asm	/^c01100f0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01100f3	obj/kernel.asm	/^c01100f3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01100f6	obj/kernel.asm	/^c01100f6:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01100f9	obj/kernel.asm	/^c01100f9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01100fc	obj/kernel.asm	/^c01100fc:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01100ff	obj/kernel.asm	/^c01100ff:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0110102	obj/kernel.asm	/^c0110102:	ff d0                	call   *%eax$/;"	l
c0110104	obj/kernel.asm	/^c0110104:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110107	obj/kernel.asm	/^c0110107:	c9                   	leave  $/;"	l
c0110108	obj/kernel.asm	/^c0110108:	c3                   	ret    $/;"	l
c0110109	obj/kernel.asm	/^c0110109 <dev_close>:$/;"	l
c0110109	obj/kernel.asm	/^c0110109:	55                   	push   %ebp$/;"	l
c011010a	obj/kernel.asm	/^c011010a:	89 e5                	mov    %esp,%ebp$/;"	l
c011010c	obj/kernel.asm	/^c011010c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011010f	obj/kernel.asm	/^c011010f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110112	obj/kernel.asm	/^c0110112:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110115	obj/kernel.asm	/^c0110115:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110119	obj/kernel.asm	/^c0110119:	74 0d                	je     c0110128 <dev_close+0x1f>$/;"	l
c011011b	obj/kernel.asm	/^c011011b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011011e	obj/kernel.asm	/^c011011e:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0110121	obj/kernel.asm	/^c0110121:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0110126	obj/kernel.asm	/^c0110126:	74 16                	je     c011013e <dev_close+0x35>$/;"	l
c0110128	obj/kernel.asm	/^c0110128:	68 80 7a 11 c0       	push   $0xc0117a80$/;"	l
c011012d	obj/kernel.asm	/^c011012d:	68 b3 7a 11 c0       	push   $0xc0117ab3$/;"	l
c0110132	obj/kernel.asm	/^c0110132:	6a 1a                	push   $0x1a$/;"	l
c0110134	obj/kernel.asm	/^c0110134:	68 c8 7a 11 c0       	push   $0xc0117ac8$/;"	l
c0110139	obj/kernel.asm	/^c0110139:	e8 91 03 ff ff       	call   c01004cf <__panic>$/;"	l
c011013e	obj/kernel.asm	/^c011013e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110141	obj/kernel.asm	/^c0110141:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110144	obj/kernel.asm	/^c0110144:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110147	obj/kernel.asm	/^c0110147:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c011014a	obj/kernel.asm	/^c011014a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011014d	obj/kernel.asm	/^c011014d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0110150	obj/kernel.asm	/^c0110150:	ff d0                	call   *%eax$/;"	l
c0110152	obj/kernel.asm	/^c0110152:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110155	obj/kernel.asm	/^c0110155:	c9                   	leave  $/;"	l
c0110156	obj/kernel.asm	/^c0110156:	c3                   	ret    $/;"	l
c0110157	obj/kernel.asm	/^c0110157 <dev_read>:$/;"	l
c0110157	obj/kernel.asm	/^c0110157:	55                   	push   %ebp$/;"	l
c0110158	obj/kernel.asm	/^c0110158:	89 e5                	mov    %esp,%ebp$/;"	l
c011015a	obj/kernel.asm	/^c011015a:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011015d	obj/kernel.asm	/^c011015d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110160	obj/kernel.asm	/^c0110160:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110163	obj/kernel.asm	/^c0110163:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110167	obj/kernel.asm	/^c0110167:	74 0d                	je     c0110176 <dev_read+0x1f>$/;"	l
c0110169	obj/kernel.asm	/^c0110169:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011016c	obj/kernel.asm	/^c011016c:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011016f	obj/kernel.asm	/^c011016f:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c0110174	obj/kernel.asm	/^c0110174:	74 16                	je     c011018c <dev_read+0x35>$/;"	l
c0110176	obj/kernel.asm	/^c0110176:	68 80 7a 11 c0       	push   $0xc0117a80$/;"	l
c011017b	obj/kernel.asm	/^c011017b:	68 b3 7a 11 c0       	push   $0xc0117ab3$/;"	l
c0110180	obj/kernel.asm	/^c0110180:	6a 23                	push   $0x23$/;"	l
c0110182	obj/kernel.asm	/^c0110182:	68 c8 7a 11 c0       	push   $0xc0117ac8$/;"	l
c0110187	obj/kernel.asm	/^c0110187:	e8 43 03 ff ff       	call   c01004cf <__panic>$/;"	l
c011018c	obj/kernel.asm	/^c011018c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011018f	obj/kernel.asm	/^c011018f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110192	obj/kernel.asm	/^c0110192:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110195	obj/kernel.asm	/^c0110195:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c0110198	obj/kernel.asm	/^c0110198:	83 ec 04             	sub    $0x4,%esp$/;"	l
c011019b	obj/kernel.asm	/^c011019b:	6a 00                	push   $0x0$/;"	l
c011019d	obj/kernel.asm	/^c011019d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01101a0	obj/kernel.asm	/^c01101a0:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01101a3	obj/kernel.asm	/^c01101a3:	ff d0                	call   *%eax$/;"	l
c01101a5	obj/kernel.asm	/^c01101a5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01101a8	obj/kernel.asm	/^c01101a8:	c9                   	leave  $/;"	l
c01101a9	obj/kernel.asm	/^c01101a9:	c3                   	ret    $/;"	l
c01101aa	obj/kernel.asm	/^c01101aa <dev_write>:$/;"	l
c01101aa	obj/kernel.asm	/^c01101aa:	55                   	push   %ebp$/;"	l
c01101ab	obj/kernel.asm	/^c01101ab:	89 e5                	mov    %esp,%ebp$/;"	l
c01101ad	obj/kernel.asm	/^c01101ad:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01101b0	obj/kernel.asm	/^c01101b0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01101b3	obj/kernel.asm	/^c01101b3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01101b6	obj/kernel.asm	/^c01101b6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01101ba	obj/kernel.asm	/^c01101ba:	74 0d                	je     c01101c9 <dev_write+0x1f>$/;"	l
c01101bc	obj/kernel.asm	/^c01101bc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01101bf	obj/kernel.asm	/^c01101bf:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01101c2	obj/kernel.asm	/^c01101c2:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c01101c7	obj/kernel.asm	/^c01101c7:	74 16                	je     c01101df <dev_write+0x35>$/;"	l
c01101c9	obj/kernel.asm	/^c01101c9:	68 80 7a 11 c0       	push   $0xc0117a80$/;"	l
c01101ce	obj/kernel.asm	/^c01101ce:	68 b3 7a 11 c0       	push   $0xc0117ab3$/;"	l
c01101d3	obj/kernel.asm	/^c01101d3:	6a 2c                	push   $0x2c$/;"	l
c01101d5	obj/kernel.asm	/^c01101d5:	68 c8 7a 11 c0       	push   $0xc0117ac8$/;"	l
c01101da	obj/kernel.asm	/^c01101da:	e8 f0 02 ff ff       	call   c01004cf <__panic>$/;"	l
c01101df	obj/kernel.asm	/^c01101df:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01101e2	obj/kernel.asm	/^c01101e2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01101e5	obj/kernel.asm	/^c01101e5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01101e8	obj/kernel.asm	/^c01101e8:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01101eb	obj/kernel.asm	/^c01101eb:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01101ee	obj/kernel.asm	/^c01101ee:	6a 01                	push   $0x1$/;"	l
c01101f0	obj/kernel.asm	/^c01101f0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01101f3	obj/kernel.asm	/^c01101f3:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01101f6	obj/kernel.asm	/^c01101f6:	ff d0                	call   *%eax$/;"	l
c01101f8	obj/kernel.asm	/^c01101f8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01101fb	obj/kernel.asm	/^c01101fb:	c9                   	leave  $/;"	l
c01101fc	obj/kernel.asm	/^c01101fc:	c3                   	ret    $/;"	l
c01101fd	obj/kernel.asm	/^c01101fd <dev_ioctl>:$/;"	l
c01101fd	obj/kernel.asm	/^c01101fd:	55                   	push   %ebp$/;"	l
c01101fe	obj/kernel.asm	/^c01101fe:	89 e5                	mov    %esp,%ebp$/;"	l
c0110200	obj/kernel.asm	/^c0110200:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110203	obj/kernel.asm	/^c0110203:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110206	obj/kernel.asm	/^c0110206:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110209	obj/kernel.asm	/^c0110209:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011020d	obj/kernel.asm	/^c011020d:	74 0d                	je     c011021c <dev_ioctl+0x1f>$/;"	l
c011020f	obj/kernel.asm	/^c011020f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110212	obj/kernel.asm	/^c0110212:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0110215	obj/kernel.asm	/^c0110215:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c011021a	obj/kernel.asm	/^c011021a:	74 16                	je     c0110232 <dev_ioctl+0x35>$/;"	l
c011021c	obj/kernel.asm	/^c011021c:	68 80 7a 11 c0       	push   $0xc0117a80$/;"	l
c0110221	obj/kernel.asm	/^c0110221:	68 b3 7a 11 c0       	push   $0xc0117ab3$/;"	l
c0110226	obj/kernel.asm	/^c0110226:	6a 35                	push   $0x35$/;"	l
c0110228	obj/kernel.asm	/^c0110228:	68 c8 7a 11 c0       	push   $0xc0117ac8$/;"	l
c011022d	obj/kernel.asm	/^c011022d:	e8 9d 02 ff ff       	call   c01004cf <__panic>$/;"	l
c0110232	obj/kernel.asm	/^c0110232:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110235	obj/kernel.asm	/^c0110235:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110238	obj/kernel.asm	/^c0110238:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011023b	obj/kernel.asm	/^c011023b:	8b 40 14             	mov    0x14(%eax),%eax$/;"	l
c011023e	obj/kernel.asm	/^c011023e:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0110241	obj/kernel.asm	/^c0110241:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0110244	obj/kernel.asm	/^c0110244:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0110247	obj/kernel.asm	/^c0110247:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c011024a	obj/kernel.asm	/^c011024a:	ff d0                	call   *%eax$/;"	l
c011024c	obj/kernel.asm	/^c011024c:	83 c4 10             	add    $0x10,%esp$/;"	l
c011024f	obj/kernel.asm	/^c011024f:	c9                   	leave  $/;"	l
c0110250	obj/kernel.asm	/^c0110250:	c3                   	ret    $/;"	l
c0110251	obj/kernel.asm	/^c0110251 <dev_fstat>:$/;"	l
c0110251	obj/kernel.asm	/^c0110251:	55                   	push   %ebp$/;"	l
c0110252	obj/kernel.asm	/^c0110252:	89 e5                	mov    %esp,%ebp$/;"	l
c0110254	obj/kernel.asm	/^c0110254:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110257	obj/kernel.asm	/^c0110257:	83 ec 04             	sub    $0x4,%esp$/;"	l
c011025a	obj/kernel.asm	/^c011025a:	6a 10                	push   $0x10$/;"	l
c011025c	obj/kernel.asm	/^c011025c:	6a 00                	push   $0x0$/;"	l
c011025e	obj/kernel.asm	/^c011025e:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0110261	obj/kernel.asm	/^c0110261:	e8 29 35 00 00       	call   c011378f <memset>$/;"	l
c0110266	obj/kernel.asm	/^c0110266:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110269	obj/kernel.asm	/^c0110269:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011026c	obj/kernel.asm	/^c011026c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011026f	obj/kernel.asm	/^c011026f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110273	obj/kernel.asm	/^c0110273:	74 17                	je     c011028c <dev_fstat+0x3b>$/;"	l
c0110275	obj/kernel.asm	/^c0110275:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110278	obj/kernel.asm	/^c0110278:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011027b	obj/kernel.asm	/^c011027b:	85 c0                	test   %eax,%eax$/;"	l
c011027d	obj/kernel.asm	/^c011027d:	74 0d                	je     c011028c <dev_fstat+0x3b>$/;"	l
c011027f	obj/kernel.asm	/^c011027f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110282	obj/kernel.asm	/^c0110282:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0110285	obj/kernel.asm	/^c0110285:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c0110288	obj/kernel.asm	/^c0110288:	85 c0                	test   %eax,%eax$/;"	l
c011028a	obj/kernel.asm	/^c011028a:	75 16                	jne    c01102a2 <dev_fstat+0x51>$/;"	l
c011028c	obj/kernel.asm	/^c011028c:	68 dc 7a 11 c0       	push   $0xc0117adc$/;"	l
c0110291	obj/kernel.asm	/^c0110291:	68 b3 7a 11 c0       	push   $0xc0117ab3$/;"	l
c0110296	obj/kernel.asm	/^c0110296:	6a 42                	push   $0x42$/;"	l
c0110298	obj/kernel.asm	/^c0110298:	68 c8 7a 11 c0       	push   $0xc0117ac8$/;"	l
c011029d	obj/kernel.asm	/^c011029d:	e8 2d 02 ff ff       	call   c01004cf <__panic>$/;"	l
c01102a2	obj/kernel.asm	/^c01102a2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01102a5	obj/kernel.asm	/^c01102a5:	68 2c 7b 11 c0       	push   $0xc0117b2c$/;"	l
c01102aa	obj/kernel.asm	/^c01102aa:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01102ad	obj/kernel.asm	/^c01102ad:	e8 e5 ef ff ff       	call   c010f297 <inode_check>$/;"	l
c01102b2	obj/kernel.asm	/^c01102b2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01102b5	obj/kernel.asm	/^c01102b5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01102b8	obj/kernel.asm	/^c01102b8:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01102bb	obj/kernel.asm	/^c01102bb:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c01102be	obj/kernel.asm	/^c01102be:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01102c1	obj/kernel.asm	/^c01102c1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01102c4	obj/kernel.asm	/^c01102c4:	52                   	push   %edx$/;"	l
c01102c5	obj/kernel.asm	/^c01102c5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01102c8	obj/kernel.asm	/^c01102c8:	ff d0                	call   *%eax$/;"	l
c01102ca	obj/kernel.asm	/^c01102ca:	83 c4 10             	add    $0x10,%esp$/;"	l
c01102cd	obj/kernel.asm	/^c01102cd:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01102d0	obj/kernel.asm	/^c01102d0:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01102d4	obj/kernel.asm	/^c01102d4:	74 05                	je     c01102db <dev_fstat+0x8a>$/;"	l
c01102d6	obj/kernel.asm	/^c01102d6:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01102d9	obj/kernel.asm	/^c01102d9:	eb 64                	jmp    c011033f <dev_fstat+0xee>$/;"	l
c01102db	obj/kernel.asm	/^c01102db:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01102de	obj/kernel.asm	/^c01102de:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01102e1	obj/kernel.asm	/^c01102e1:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01102e5	obj/kernel.asm	/^c01102e5:	74 0d                	je     c01102f4 <dev_fstat+0xa3>$/;"	l
c01102e7	obj/kernel.asm	/^c01102e7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01102ea	obj/kernel.asm	/^c01102ea:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01102ed	obj/kernel.asm	/^c01102ed:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c01102f2	obj/kernel.asm	/^c01102f2:	74 16                	je     c011030a <dev_fstat+0xb9>$/;"	l
c01102f4	obj/kernel.asm	/^c01102f4:	68 80 7a 11 c0       	push   $0xc0117a80$/;"	l
c01102f9	obj/kernel.asm	/^c01102f9:	68 b3 7a 11 c0       	push   $0xc0117ab3$/;"	l
c01102fe	obj/kernel.asm	/^c01102fe:	6a 45                	push   $0x45$/;"	l
c0110300	obj/kernel.asm	/^c0110300:	68 c8 7a 11 c0       	push   $0xc0117ac8$/;"	l
c0110305	obj/kernel.asm	/^c0110305:	e8 c5 01 ff ff       	call   c01004cf <__panic>$/;"	l
c011030a	obj/kernel.asm	/^c011030a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011030d	obj/kernel.asm	/^c011030d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0110310	obj/kernel.asm	/^c0110310:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110313	obj/kernel.asm	/^c0110313:	c7 40 04 01 00 00 00 	movl   $0x1,0x4(%eax)$/;"	l
c011031a	obj/kernel.asm	/^c011031a:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011031d	obj/kernel.asm	/^c011031d:	8b 10                	mov    (%eax),%edx$/;"	l
c011031f	obj/kernel.asm	/^c011031f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110322	obj/kernel.asm	/^c0110322:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0110325	obj/kernel.asm	/^c0110325:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110328	obj/kernel.asm	/^c0110328:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c011032b	obj/kernel.asm	/^c011032b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011032e	obj/kernel.asm	/^c011032e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110331	obj/kernel.asm	/^c0110331:	0f af d0             	imul   %eax,%edx$/;"	l
c0110334	obj/kernel.asm	/^c0110334:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110337	obj/kernel.asm	/^c0110337:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c011033a	obj/kernel.asm	/^c011033a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011033f	obj/kernel.asm	/^c011033f:	c9                   	leave  $/;"	l
c0110340	obj/kernel.asm	/^c0110340:	c3                   	ret    $/;"	l
c0110341	obj/kernel.asm	/^c0110341 <dev_gettype>:$/;"	l
c0110341	obj/kernel.asm	/^c0110341:	55                   	push   %ebp$/;"	l
c0110342	obj/kernel.asm	/^c0110342:	89 e5                	mov    %esp,%ebp$/;"	l
c0110344	obj/kernel.asm	/^c0110344:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110347	obj/kernel.asm	/^c0110347:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011034a	obj/kernel.asm	/^c011034a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011034d	obj/kernel.asm	/^c011034d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110351	obj/kernel.asm	/^c0110351:	74 0d                	je     c0110360 <dev_gettype+0x1f>$/;"	l
c0110353	obj/kernel.asm	/^c0110353:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110356	obj/kernel.asm	/^c0110356:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0110359	obj/kernel.asm	/^c0110359:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c011035e	obj/kernel.asm	/^c011035e:	74 16                	je     c0110376 <dev_gettype+0x35>$/;"	l
c0110360	obj/kernel.asm	/^c0110360:	68 80 7a 11 c0       	push   $0xc0117a80$/;"	l
c0110365	obj/kernel.asm	/^c0110365:	68 b3 7a 11 c0       	push   $0xc0117ab3$/;"	l
c011036a	obj/kernel.asm	/^c011036a:	6a 53                	push   $0x53$/;"	l
c011036c	obj/kernel.asm	/^c011036c:	68 c8 7a 11 c0       	push   $0xc0117ac8$/;"	l
c0110371	obj/kernel.asm	/^c0110371:	e8 59 01 ff ff       	call   c01004cf <__panic>$/;"	l
c0110376	obj/kernel.asm	/^c0110376:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110379	obj/kernel.asm	/^c0110379:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011037c	obj/kernel.asm	/^c011037c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011037f	obj/kernel.asm	/^c011037f:	8b 00                	mov    (%eax),%eax$/;"	l
c0110381	obj/kernel.asm	/^c0110381:	85 c0                	test   %eax,%eax$/;"	l
c0110383	obj/kernel.asm	/^c0110383:	74 07                	je     c011038c <dev_gettype+0x4b>$/;"	l
c0110385	obj/kernel.asm	/^c0110385:	ba 00 50 00 00       	mov    $0x5000,%edx$/;"	l
c011038a	obj/kernel.asm	/^c011038a:	eb 05                	jmp    c0110391 <dev_gettype+0x50>$/;"	l
c011038c	obj/kernel.asm	/^c011038c:	ba 00 40 00 00       	mov    $0x4000,%edx$/;"	l
c0110391	obj/kernel.asm	/^c0110391:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110394	obj/kernel.asm	/^c0110394:	89 10                	mov    %edx,(%eax)$/;"	l
c0110396	obj/kernel.asm	/^c0110396:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011039b	obj/kernel.asm	/^c011039b:	c9                   	leave  $/;"	l
c011039c	obj/kernel.asm	/^c011039c:	c3                   	ret    $/;"	l
c011039d	obj/kernel.asm	/^c011039d <dev_tryseek>:$/;"	l
c011039d	obj/kernel.asm	/^c011039d:	55                   	push   %ebp$/;"	l
c011039e	obj/kernel.asm	/^c011039e:	89 e5                	mov    %esp,%ebp$/;"	l
c01103a0	obj/kernel.asm	/^c01103a0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01103a3	obj/kernel.asm	/^c01103a3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01103a6	obj/kernel.asm	/^c01103a6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01103a9	obj/kernel.asm	/^c01103a9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01103ad	obj/kernel.asm	/^c01103ad:	74 0d                	je     c01103bc <dev_tryseek+0x1f>$/;"	l
c01103af	obj/kernel.asm	/^c01103af:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01103b2	obj/kernel.asm	/^c01103b2:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01103b5	obj/kernel.asm	/^c01103b5:	3d 34 12 00 00       	cmp    $0x1234,%eax$/;"	l
c01103ba	obj/kernel.asm	/^c01103ba:	74 16                	je     c01103d2 <dev_tryseek+0x35>$/;"	l
c01103bc	obj/kernel.asm	/^c01103bc:	68 80 7a 11 c0       	push   $0xc0117a80$/;"	l
c01103c1	obj/kernel.asm	/^c01103c1:	68 b3 7a 11 c0       	push   $0xc0117ab3$/;"	l
c01103c6	obj/kernel.asm	/^c01103c6:	6a 5f                	push   $0x5f$/;"	l
c01103c8	obj/kernel.asm	/^c01103c8:	68 c8 7a 11 c0       	push   $0xc0117ac8$/;"	l
c01103cd	obj/kernel.asm	/^c01103cd:	e8 fd 00 ff ff       	call   c01004cf <__panic>$/;"	l
c01103d2	obj/kernel.asm	/^c01103d2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01103d5	obj/kernel.asm	/^c01103d5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01103d8	obj/kernel.asm	/^c01103d8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01103db	obj/kernel.asm	/^c01103db:	8b 00                	mov    (%eax),%eax$/;"	l
c01103dd	obj/kernel.asm	/^c01103dd:	85 c0                	test   %eax,%eax$/;"	l
c01103df	obj/kernel.asm	/^c01103df:	74 38                	je     c0110419 <dev_tryseek+0x7c>$/;"	l
c01103e1	obj/kernel.asm	/^c01103e1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01103e4	obj/kernel.asm	/^c01103e4:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01103e7	obj/kernel.asm	/^c01103e7:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
c01103ea	obj/kernel.asm	/^c01103ea:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c01103ef	obj/kernel.asm	/^c01103ef:	f7 f1                	div    %ecx$/;"	l
c01103f1	obj/kernel.asm	/^c01103f1:	89 d0                	mov    %edx,%eax$/;"	l
c01103f3	obj/kernel.asm	/^c01103f3:	85 c0                	test   %eax,%eax$/;"	l
c01103f5	obj/kernel.asm	/^c01103f5:	75 22                	jne    c0110419 <dev_tryseek+0x7c>$/;"	l
c01103f7	obj/kernel.asm	/^c01103f7:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c01103fb	obj/kernel.asm	/^c01103fb:	78 1c                	js     c0110419 <dev_tryseek+0x7c>$/;"	l
c01103fd	obj/kernel.asm	/^c01103fd:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0110400	obj/kernel.asm	/^c0110400:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110403	obj/kernel.asm	/^c0110403:	8b 08                	mov    (%eax),%ecx$/;"	l
c0110405	obj/kernel.asm	/^c0110405:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110408	obj/kernel.asm	/^c0110408:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011040b	obj/kernel.asm	/^c011040b:	0f af c1             	imul   %ecx,%eax$/;"	l
c011040e	obj/kernel.asm	/^c011040e:	39 c2                	cmp    %eax,%edx$/;"	l
c0110410	obj/kernel.asm	/^c0110410:	73 07                	jae    c0110419 <dev_tryseek+0x7c>$/;"	l
c0110412	obj/kernel.asm	/^c0110412:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110417	obj/kernel.asm	/^c0110417:	eb 05                	jmp    c011041e <dev_tryseek+0x81>$/;"	l
c0110419	obj/kernel.asm	/^c0110419:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c011041e	obj/kernel.asm	/^c011041e:	c9                   	leave  $/;"	l
c011041f	obj/kernel.asm	/^c011041f:	c3                   	ret    $/;"	l
c0110420	obj/kernel.asm	/^c0110420 <dev_lookup>:$/;"	l
c0110420	obj/kernel.asm	/^c0110420:	55                   	push   %ebp$/;"	l
c0110421	obj/kernel.asm	/^c0110421:	89 e5                	mov    %esp,%ebp$/;"	l
c0110423	obj/kernel.asm	/^c0110423:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110426	obj/kernel.asm	/^c0110426:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110429	obj/kernel.asm	/^c0110429:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011042c	obj/kernel.asm	/^c011042c:	84 c0                	test   %al,%al$/;"	l
c011042e	obj/kernel.asm	/^c011042e:	74 07                	je     c0110437 <dev_lookup+0x17>$/;"	l
c0110430	obj/kernel.asm	/^c0110430:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c0110435	obj/kernel.asm	/^c0110435:	eb 1b                	jmp    c0110452 <dev_lookup+0x32>$/;"	l
c0110437	obj/kernel.asm	/^c0110437:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011043a	obj/kernel.asm	/^c011043a:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011043d	obj/kernel.asm	/^c011043d:	e8 83 ec ff ff       	call   c010f0c5 <inode_ref_inc>$/;"	l
c0110442	obj/kernel.asm	/^c0110442:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110445	obj/kernel.asm	/^c0110445:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0110448	obj/kernel.asm	/^c0110448:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011044b	obj/kernel.asm	/^c011044b:	89 10                	mov    %edx,(%eax)$/;"	l
c011044d	obj/kernel.asm	/^c011044d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110452	obj/kernel.asm	/^c0110452:	c9                   	leave  $/;"	l
c0110453	obj/kernel.asm	/^c0110453:	c3                   	ret    $/;"	l
c0110454	obj/kernel.asm	/^c0110454 <dev_init>:$/;"	l
c0110454	obj/kernel.asm	/^c0110454:	55                   	push   %ebp$/;"	l
c0110455	obj/kernel.asm	/^c0110455:	89 e5                	mov    %esp,%ebp$/;"	l
c0110457	obj/kernel.asm	/^c0110457:	83 ec 08             	sub    $0x8,%esp$/;"	l
c011045a	obj/kernel.asm	/^c011045a:	e8 60 f6 ff ff       	call   c010fabf <dev_init_stdin>$/;"	l
c011045f	obj/kernel.asm	/^c011045f:	e8 a9 fb ff ff       	call   c011000d <dev_init_stdout>$/;"	l
c0110464	obj/kernel.asm	/^c0110464:	e8 3e fa ff ff       	call   c010fea7 <dev_init_disk0>$/;"	l
c0110469	obj/kernel.asm	/^c0110469:	c9                   	leave  $/;"	l
c011046a	obj/kernel.asm	/^c011046a:	c3                   	ret    $/;"	l
c011046b	obj/kernel.asm	/^c011046b <dev_create_inode>:$/;"	l
c011046b	obj/kernel.asm	/^c011046b:	55                   	push   %ebp$/;"	l
c011046c	obj/kernel.asm	/^c011046c:	89 e5                	mov    %esp,%ebp$/;"	l
c011046e	obj/kernel.asm	/^c011046e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110471	obj/kernel.asm	/^c0110471:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110474	obj/kernel.asm	/^c0110474:	68 34 12 00 00       	push   $0x1234$/;"	l
c0110479	obj/kernel.asm	/^c0110479:	e8 7e eb ff ff       	call   c010effc <__alloc_inode>$/;"	l
c011047e	obj/kernel.asm	/^c011047e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110481	obj/kernel.asm	/^c0110481:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110484	obj/kernel.asm	/^c0110484:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110488	obj/kernel.asm	/^c0110488:	74 15                	je     c011049f <dev_create_inode+0x34>$/;"	l
c011048a	obj/kernel.asm	/^c011048a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c011048d	obj/kernel.asm	/^c011048d:	6a 00                	push   $0x0$/;"	l
c011048f	obj/kernel.asm	/^c011048f:	68 40 7b 11 c0       	push   $0xc0117b40$/;"	l
c0110494	obj/kernel.asm	/^c0110494:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0110497	obj/kernel.asm	/^c0110497:	e8 8a eb ff ff       	call   c010f026 <inode_init>$/;"	l
c011049c	obj/kernel.asm	/^c011049c:	83 c4 10             	add    $0x10,%esp$/;"	l
c011049f	obj/kernel.asm	/^c011049f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01104a2	obj/kernel.asm	/^c01104a2:	c9                   	leave  $/;"	l
c01104a3	obj/kernel.asm	/^c01104a3:	c3                   	ret    $/;"	l
c01104a4	obj/kernel.asm	/^c01104a4 <sfs_init>:$/;"	l
c01104a4	obj/kernel.asm	/^c01104a4:	55                   	push   %ebp$/;"	l
c01104a5	obj/kernel.asm	/^c01104a5:	89 e5                	mov    %esp,%ebp$/;"	l
c01104a7	obj/kernel.asm	/^c01104a7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01104aa	obj/kernel.asm	/^c01104aa:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01104ad	obj/kernel.asm	/^c01104ad:	68 80 7b 11 c0       	push   $0xc0117b80$/;"	l
c01104b2	obj/kernel.asm	/^c01104b2:	e8 7c 08 00 00       	call   c0110d33 <sfs_mount>$/;"	l
c01104b7	obj/kernel.asm	/^c01104b7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01104ba	obj/kernel.asm	/^c01104ba:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01104bd	obj/kernel.asm	/^c01104bd:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01104c1	obj/kernel.asm	/^c01104c1:	74 14                	je     c01104d7 <sfs_init+0x33>$/;"	l
c01104c3	obj/kernel.asm	/^c01104c3:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01104c6	obj/kernel.asm	/^c01104c6:	68 86 7b 11 c0       	push   $0xc0117b86$/;"	l
c01104cb	obj/kernel.asm	/^c01104cb:	6a 10                	push   $0x10$/;"	l
c01104cd	obj/kernel.asm	/^c01104cd:	68 a3 7b 11 c0       	push   $0xc0117ba3$/;"	l
c01104d2	obj/kernel.asm	/^c01104d2:	e8 f8 ff fe ff       	call   c01004cf <__panic>$/;"	l
c01104d7	obj/kernel.asm	/^c01104d7:	c9                   	leave  $/;"	l
c01104d8	obj/kernel.asm	/^c01104d8:	c3                   	ret    $/;"	l
c01104d9	obj/kernel.asm	/^c01104d9 <lock_sfs_fs>:$/;"	l
c01104d9	obj/kernel.asm	/^c01104d9:	55                   	push   %ebp$/;"	l
c01104da	obj/kernel.asm	/^c01104da:	89 e5                	mov    %esp,%ebp$/;"	l
c01104dc	obj/kernel.asm	/^c01104dc:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01104df	obj/kernel.asm	/^c01104df:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01104e2	obj/kernel.asm	/^c01104e2:	83 c0 3c             	add    $0x3c,%eax$/;"	l
c01104e5	obj/kernel.asm	/^c01104e5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01104e8	obj/kernel.asm	/^c01104e8:	50                   	push   %eax$/;"	l
c01104e9	obj/kernel.asm	/^c01104e9:	e8 15 90 ff ff       	call   c0109503 <down>$/;"	l
c01104ee	obj/kernel.asm	/^c01104ee:	83 c4 10             	add    $0x10,%esp$/;"	l
c01104f1	obj/kernel.asm	/^c01104f1:	c9                   	leave  $/;"	l
c01104f2	obj/kernel.asm	/^c01104f2:	c3                   	ret    $/;"	l
c01104f3	obj/kernel.asm	/^c01104f3 <lock_sfs_io>:$/;"	l
c01104f3	obj/kernel.asm	/^c01104f3:	55                   	push   %ebp$/;"	l
c01104f4	obj/kernel.asm	/^c01104f4:	89 e5                	mov    %esp,%ebp$/;"	l
c01104f6	obj/kernel.asm	/^c01104f6:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01104f9	obj/kernel.asm	/^c01104f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01104fc	obj/kernel.asm	/^c01104fc:	83 c0 48             	add    $0x48,%eax$/;"	l
c01104ff	obj/kernel.asm	/^c01104ff:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110502	obj/kernel.asm	/^c0110502:	50                   	push   %eax$/;"	l
c0110503	obj/kernel.asm	/^c0110503:	e8 fb 8f ff ff       	call   c0109503 <down>$/;"	l
c0110508	obj/kernel.asm	/^c0110508:	83 c4 10             	add    $0x10,%esp$/;"	l
c011050b	obj/kernel.asm	/^c011050b:	c9                   	leave  $/;"	l
c011050c	obj/kernel.asm	/^c011050c:	c3                   	ret    $/;"	l
c011050d	obj/kernel.asm	/^c011050d <unlock_sfs_fs>:$/;"	l
c011050d	obj/kernel.asm	/^c011050d:	55                   	push   %ebp$/;"	l
c011050e	obj/kernel.asm	/^c011050e:	89 e5                	mov    %esp,%ebp$/;"	l
c0110510	obj/kernel.asm	/^c0110510:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110513	obj/kernel.asm	/^c0110513:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110516	obj/kernel.asm	/^c0110516:	83 c0 3c             	add    $0x3c,%eax$/;"	l
c0110519	obj/kernel.asm	/^c0110519:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011051c	obj/kernel.asm	/^c011051c:	50                   	push   %eax$/;"	l
c011051d	obj/kernel.asm	/^c011051d:	e8 c6 8f ff ff       	call   c01094e8 <up>$/;"	l
c0110522	obj/kernel.asm	/^c0110522:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110525	obj/kernel.asm	/^c0110525:	c9                   	leave  $/;"	l
c0110526	obj/kernel.asm	/^c0110526:	c3                   	ret    $/;"	l
c0110527	obj/kernel.asm	/^c0110527 <unlock_sfs_io>:$/;"	l
c0110527	obj/kernel.asm	/^c0110527:	55                   	push   %ebp$/;"	l
c0110528	obj/kernel.asm	/^c0110528:	89 e5                	mov    %esp,%ebp$/;"	l
c011052a	obj/kernel.asm	/^c011052a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c011052d	obj/kernel.asm	/^c011052d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110530	obj/kernel.asm	/^c0110530:	83 c0 48             	add    $0x48,%eax$/;"	l
c0110533	obj/kernel.asm	/^c0110533:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110536	obj/kernel.asm	/^c0110536:	50                   	push   %eax$/;"	l
c0110537	obj/kernel.asm	/^c0110537:	e8 ac 8f ff ff       	call   c01094e8 <up>$/;"	l
c011053c	obj/kernel.asm	/^c011053c:	83 c4 10             	add    $0x10,%esp$/;"	l
c011053f	obj/kernel.asm	/^c011053f:	c9                   	leave  $/;"	l
c0110540	obj/kernel.asm	/^c0110540:	c3                   	ret    $/;"	l
c0110541	obj/kernel.asm	/^c0110541 <sfs_sync>:$/;"	l
c0110541	obj/kernel.asm	/^c0110541:	55                   	push   %ebp$/;"	l
c0110542	obj/kernel.asm	/^c0110542:	89 e5                	mov    %esp,%ebp$/;"	l
c0110544	obj/kernel.asm	/^c0110544:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110547	obj/kernel.asm	/^c0110547:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011054a	obj/kernel.asm	/^c011054a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011054d	obj/kernel.asm	/^c011054d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110551	obj/kernel.asm	/^c0110551:	74 0a                	je     c011055d <sfs_sync+0x1c>$/;"	l
c0110553	obj/kernel.asm	/^c0110553:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110556	obj/kernel.asm	/^c0110556:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0110559	obj/kernel.asm	/^c0110559:	85 c0                	test   %eax,%eax$/;"	l
c011055b	obj/kernel.asm	/^c011055b:	74 16                	je     c0110573 <sfs_sync+0x32>$/;"	l
c011055d	obj/kernel.asm	/^c011055d:	68 b8 7b 11 c0       	push   $0xc0117bb8$/;"	l
c0110562	obj/kernel.asm	/^c0110562:	68 e1 7b 11 c0       	push   $0xc0117be1$/;"	l
c0110567	obj/kernel.asm	/^c0110567:	6a 15                	push   $0x15$/;"	l
c0110569	obj/kernel.asm	/^c0110569:	68 f6 7b 11 c0       	push   $0xc0117bf6$/;"	l
c011056e	obj/kernel.asm	/^c011056e:	e8 5c ff fe ff       	call   c01004cf <__panic>$/;"	l
c0110573	obj/kernel.asm	/^c0110573:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110576	obj/kernel.asm	/^c0110576:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110579	obj/kernel.asm	/^c0110579:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011057c	obj/kernel.asm	/^c011057c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c011057f	obj/kernel.asm	/^c011057f:	e8 55 ff ff ff       	call   c01104d9 <lock_sfs_fs>$/;"	l
c0110584	obj/kernel.asm	/^c0110584:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110587	obj/kernel.asm	/^c0110587:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011058a	obj/kernel.asm	/^c011058a:	83 c0 60             	add    $0x60,%eax$/;"	l
c011058d	obj/kernel.asm	/^c011058d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0110590	obj/kernel.asm	/^c0110590:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110593	obj/kernel.asm	/^c0110593:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110596	obj/kernel.asm	/^c0110596:	eb 69                	jmp    c0110601 <sfs_sync+0xc0>$/;"	l
c0110598	obj/kernel.asm	/^c0110598:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011059b	obj/kernel.asm	/^c011059b:	83 e8 1c             	sub    $0x1c,%eax$/;"	l
c011059e	obj/kernel.asm	/^c011059e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01105a1	obj/kernel.asm	/^c01105a1:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01105a4	obj/kernel.asm	/^c01105a4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01105a7	obj/kernel.asm	/^c01105a7:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01105ab	obj/kernel.asm	/^c01105ab:	74 17                	je     c01105c4 <sfs_sync+0x83>$/;"	l
c01105ad	obj/kernel.asm	/^c01105ad:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01105b0	obj/kernel.asm	/^c01105b0:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01105b3	obj/kernel.asm	/^c01105b3:	85 c0                	test   %eax,%eax$/;"	l
c01105b5	obj/kernel.asm	/^c01105b5:	74 0d                	je     c01105c4 <sfs_sync+0x83>$/;"	l
c01105b7	obj/kernel.asm	/^c01105b7:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01105ba	obj/kernel.asm	/^c01105ba:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01105bd	obj/kernel.asm	/^c01105bd:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01105c0	obj/kernel.asm	/^c01105c0:	85 c0                	test   %eax,%eax$/;"	l
c01105c2	obj/kernel.asm	/^c01105c2:	75 16                	jne    c01105da <sfs_sync+0x99>$/;"	l
c01105c4	obj/kernel.asm	/^c01105c4:	68 0c 7c 11 c0       	push   $0xc0117c0c$/;"	l
c01105c9	obj/kernel.asm	/^c01105c9:	68 e1 7b 11 c0       	push   $0xc0117be1$/;"	l
c01105ce	obj/kernel.asm	/^c01105ce:	6a 1b                	push   $0x1b$/;"	l
c01105d0	obj/kernel.asm	/^c01105d0:	68 f6 7b 11 c0       	push   $0xc0117bf6$/;"	l
c01105d5	obj/kernel.asm	/^c01105d5:	e8 f5 fe fe ff       	call   c01004cf <__panic>$/;"	l
c01105da	obj/kernel.asm	/^c01105da:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01105dd	obj/kernel.asm	/^c01105dd:	68 5a 7c 11 c0       	push   $0xc0117c5a$/;"	l
c01105e2	obj/kernel.asm	/^c01105e2:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01105e5	obj/kernel.asm	/^c01105e5:	e8 ad ec ff ff       	call   c010f297 <inode_check>$/;"	l
c01105ea	obj/kernel.asm	/^c01105ea:	83 c4 10             	add    $0x10,%esp$/;"	l
c01105ed	obj/kernel.asm	/^c01105ed:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01105f0	obj/kernel.asm	/^c01105f0:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01105f3	obj/kernel.asm	/^c01105f3:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01105f6	obj/kernel.asm	/^c01105f6:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01105f9	obj/kernel.asm	/^c01105f9:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c01105fc	obj/kernel.asm	/^c01105fc:	ff d0                	call   *%eax$/;"	l
c01105fe	obj/kernel.asm	/^c01105fe:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110601	obj/kernel.asm	/^c0110601:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110604	obj/kernel.asm	/^c0110604:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0110607	obj/kernel.asm	/^c0110607:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011060a	obj/kernel.asm	/^c011060a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011060d	obj/kernel.asm	/^c011060d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110610	obj/kernel.asm	/^c0110610:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110613	obj/kernel.asm	/^c0110613:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c0110616	obj/kernel.asm	/^c0110616:	75 80                	jne    c0110598 <sfs_sync+0x57>$/;"	l
c0110618	obj/kernel.asm	/^c0110618:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011061b	obj/kernel.asm	/^c011061b:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c011061e	obj/kernel.asm	/^c011061e:	e8 ea fe ff ff       	call   c011050d <unlock_sfs_fs>$/;"	l
c0110623	obj/kernel.asm	/^c0110623:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110626	obj/kernel.asm	/^c0110626:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110629	obj/kernel.asm	/^c0110629:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c011062c	obj/kernel.asm	/^c011062c:	85 c0                	test   %eax,%eax$/;"	l
c011062e	obj/kernel.asm	/^c011062e:	74 56                	je     c0110686 <sfs_sync+0x145>$/;"	l
c0110630	obj/kernel.asm	/^c0110630:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110633	obj/kernel.asm	/^c0110633:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)$/;"	l
c011063a	obj/kernel.asm	/^c011063a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011063d	obj/kernel.asm	/^c011063d:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0110640	obj/kernel.asm	/^c0110640:	e8 b6 2c 00 00       	call   c01132fb <sfs_sync_super>$/;"	l
c0110645	obj/kernel.asm	/^c0110645:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110648	obj/kernel.asm	/^c0110648:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c011064b	obj/kernel.asm	/^c011064b:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c011064f	obj/kernel.asm	/^c011064f:	74 0f                	je     c0110660 <sfs_sync+0x11f>$/;"	l
c0110651	obj/kernel.asm	/^c0110651:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110654	obj/kernel.asm	/^c0110654:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c011065b	obj/kernel.asm	/^c011065b:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c011065e	obj/kernel.asm	/^c011065e:	eb 2b                	jmp    c011068b <sfs_sync+0x14a>$/;"	l
c0110660	obj/kernel.asm	/^c0110660:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110663	obj/kernel.asm	/^c0110663:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0110666	obj/kernel.asm	/^c0110666:	e8 06 2d 00 00       	call   c0113371 <sfs_sync_freemap>$/;"	l
c011066b	obj/kernel.asm	/^c011066b:	83 c4 10             	add    $0x10,%esp$/;"	l
c011066e	obj/kernel.asm	/^c011066e:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0110671	obj/kernel.asm	/^c0110671:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0110675	obj/kernel.asm	/^c0110675:	74 0f                	je     c0110686 <sfs_sync+0x145>$/;"	l
c0110677	obj/kernel.asm	/^c0110677:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011067a	obj/kernel.asm	/^c011067a:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c0110681	obj/kernel.asm	/^c0110681:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0110684	obj/kernel.asm	/^c0110684:	eb 05                	jmp    c011068b <sfs_sync+0x14a>$/;"	l
c0110686	obj/kernel.asm	/^c0110686:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011068b	obj/kernel.asm	/^c011068b:	c9                   	leave  $/;"	l
c011068c	obj/kernel.asm	/^c011068c:	c3                   	ret    $/;"	l
c011068d	obj/kernel.asm	/^c011068d <sfs_get_root>:$/;"	l
c011068d	obj/kernel.asm	/^c011068d:	55                   	push   %ebp$/;"	l
c011068e	obj/kernel.asm	/^c011068e:	89 e5                	mov    %esp,%ebp$/;"	l
c0110690	obj/kernel.asm	/^c0110690:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110693	obj/kernel.asm	/^c0110693:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110696	obj/kernel.asm	/^c0110696:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110699	obj/kernel.asm	/^c0110699:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011069d	obj/kernel.asm	/^c011069d:	74 0a                	je     c01106a9 <sfs_get_root+0x1c>$/;"	l
c011069f	obj/kernel.asm	/^c011069f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01106a2	obj/kernel.asm	/^c01106a2:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c01106a5	obj/kernel.asm	/^c01106a5:	85 c0                	test   %eax,%eax$/;"	l
c01106a7	obj/kernel.asm	/^c01106a7:	74 16                	je     c01106bf <sfs_get_root+0x32>$/;"	l
c01106a9	obj/kernel.asm	/^c01106a9:	68 b8 7b 11 c0       	push   $0xc0117bb8$/;"	l
c01106ae	obj/kernel.asm	/^c01106ae:	68 e1 7b 11 c0       	push   $0xc0117be1$/;"	l
c01106b3	obj/kernel.asm	/^c01106b3:	6a 36                	push   $0x36$/;"	l
c01106b5	obj/kernel.asm	/^c01106b5:	68 f6 7b 11 c0       	push   $0xc0117bf6$/;"	l
c01106ba	obj/kernel.asm	/^c01106ba:	e8 10 fe fe ff       	call   c01004cf <__panic>$/;"	l
c01106bf	obj/kernel.asm	/^c01106bf:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01106c2	obj/kernel.asm	/^c01106c2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01106c5	obj/kernel.asm	/^c01106c5:	6a 01                	push   $0x1$/;"	l
c01106c7	obj/kernel.asm	/^c01106c7:	8d 55 ec             	lea    -0x14(%ebp),%edx$/;"	l
c01106ca	obj/kernel.asm	/^c01106ca:	52                   	push   %edx$/;"	l
c01106cb	obj/kernel.asm	/^c01106cb:	50                   	push   %eax$/;"	l
c01106cc	obj/kernel.asm	/^c01106cc:	e8 fa 0a 00 00       	call   c01111cb <sfs_load_inode>$/;"	l
c01106d1	obj/kernel.asm	/^c01106d1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01106d4	obj/kernel.asm	/^c01106d4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01106d7	obj/kernel.asm	/^c01106d7:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01106db	obj/kernel.asm	/^c01106db:	74 14                	je     c01106f1 <sfs_get_root+0x64>$/;"	l
c01106dd	obj/kernel.asm	/^c01106dd:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01106e0	obj/kernel.asm	/^c01106e0:	68 60 7c 11 c0       	push   $0xc0117c60$/;"	l
c01106e5	obj/kernel.asm	/^c01106e5:	6a 37                	push   $0x37$/;"	l
c01106e7	obj/kernel.asm	/^c01106e7:	68 f6 7b 11 c0       	push   $0xc0117bf6$/;"	l
c01106ec	obj/kernel.asm	/^c01106ec:	e8 de fd fe ff       	call   c01004cf <__panic>$/;"	l
c01106f1	obj/kernel.asm	/^c01106f1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01106f4	obj/kernel.asm	/^c01106f4:	c9                   	leave  $/;"	l
c01106f5	obj/kernel.asm	/^c01106f5:	c3                   	ret    $/;"	l
c01106f6	obj/kernel.asm	/^c01106f6 <sfs_unmount>:$/;"	l
c01106f6	obj/kernel.asm	/^c01106f6:	55                   	push   %ebp$/;"	l
c01106f7	obj/kernel.asm	/^c01106f7:	89 e5                	mov    %esp,%ebp$/;"	l
c01106f9	obj/kernel.asm	/^c01106f9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01106fc	obj/kernel.asm	/^c01106fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01106ff	obj/kernel.asm	/^c01106ff:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110702	obj/kernel.asm	/^c0110702:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110706	obj/kernel.asm	/^c0110706:	74 0a                	je     c0110712 <sfs_unmount+0x1c>$/;"	l
c0110708	obj/kernel.asm	/^c0110708:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011070b	obj/kernel.asm	/^c011070b:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c011070e	obj/kernel.asm	/^c011070e:	85 c0                	test   %eax,%eax$/;"	l
c0110710	obj/kernel.asm	/^c0110710:	74 16                	je     c0110728 <sfs_unmount+0x32>$/;"	l
c0110712	obj/kernel.asm	/^c0110712:	68 b8 7b 11 c0       	push   $0xc0117bb8$/;"	l
c0110717	obj/kernel.asm	/^c0110717:	68 e1 7b 11 c0       	push   $0xc0117be1$/;"	l
c011071c	obj/kernel.asm	/^c011071c:	6a 41                	push   $0x41$/;"	l
c011071e	obj/kernel.asm	/^c011071e:	68 f6 7b 11 c0       	push   $0xc0117bf6$/;"	l
c0110723	obj/kernel.asm	/^c0110723:	e8 a7 fd fe ff       	call   c01004cf <__panic>$/;"	l
c0110728	obj/kernel.asm	/^c0110728:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011072b	obj/kernel.asm	/^c011072b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011072e	obj/kernel.asm	/^c011072e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110731	obj/kernel.asm	/^c0110731:	83 c0 60             	add    $0x60,%eax$/;"	l
c0110734	obj/kernel.asm	/^c0110734:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110737	obj/kernel.asm	/^c0110737:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011073a	obj/kernel.asm	/^c011073a:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011073d	obj/kernel.asm	/^c011073d:	39 45 ec             	cmp    %eax,-0x14(%ebp)$/;"	l
c0110740	obj/kernel.asm	/^c0110740:	0f 94 c0             	sete   %al$/;"	l
c0110743	obj/kernel.asm	/^c0110743:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0110746	obj/kernel.asm	/^c0110746:	85 c0                	test   %eax,%eax$/;"	l
c0110748	obj/kernel.asm	/^c0110748:	75 07                	jne    c0110751 <sfs_unmount+0x5b>$/;"	l
c011074a	obj/kernel.asm	/^c011074a:	b8 f1 ff ff ff       	mov    $0xfffffff1,%eax$/;"	l
c011074f	obj/kernel.asm	/^c011074f:	eb 69                	jmp    c01107ba <sfs_unmount+0xc4>$/;"	l
c0110751	obj/kernel.asm	/^c0110751:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110754	obj/kernel.asm	/^c0110754:	8b 40 34             	mov    0x34(%eax),%eax$/;"	l
c0110757	obj/kernel.asm	/^c0110757:	85 c0                	test   %eax,%eax$/;"	l
c0110759	obj/kernel.asm	/^c0110759:	74 16                	je     c0110771 <sfs_unmount+0x7b>$/;"	l
c011075b	obj/kernel.asm	/^c011075b:	68 79 7c 11 c0       	push   $0xc0117c79$/;"	l
c0110760	obj/kernel.asm	/^c0110760:	68 e1 7b 11 c0       	push   $0xc0117be1$/;"	l
c0110765	obj/kernel.asm	/^c0110765:	6a 45                	push   $0x45$/;"	l
c0110767	obj/kernel.asm	/^c0110767:	68 f6 7b 11 c0       	push   $0xc0117bf6$/;"	l
c011076c	obj/kernel.asm	/^c011076c:	e8 5e fd fe ff       	call   c01004cf <__panic>$/;"	l
c0110771	obj/kernel.asm	/^c0110771:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110774	obj/kernel.asm	/^c0110774:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0110777	obj/kernel.asm	/^c0110777:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011077a	obj/kernel.asm	/^c011077a:	50                   	push   %eax$/;"	l
c011077b	obj/kernel.asm	/^c011077b:	e8 bb 28 00 00       	call   c011303b <bitmap_destroy>$/;"	l
c0110780	obj/kernel.asm	/^c0110780:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110783	obj/kernel.asm	/^c0110783:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110786	obj/kernel.asm	/^c0110786:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0110789	obj/kernel.asm	/^c0110789:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011078c	obj/kernel.asm	/^c011078c:	50                   	push   %eax$/;"	l
c011078d	obj/kernel.asm	/^c011078d:	e8 7c 6c ff ff       	call   c010740e <kfree>$/;"	l
c0110792	obj/kernel.asm	/^c0110792:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110795	obj/kernel.asm	/^c0110795:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110798	obj/kernel.asm	/^c0110798:	8b 40 68             	mov    0x68(%eax),%eax$/;"	l
c011079b	obj/kernel.asm	/^c011079b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011079e	obj/kernel.asm	/^c011079e:	50                   	push   %eax$/;"	l
c011079f	obj/kernel.asm	/^c011079f:	e8 6a 6c ff ff       	call   c010740e <kfree>$/;"	l
c01107a4	obj/kernel.asm	/^c01107a4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01107a7	obj/kernel.asm	/^c01107a7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01107aa	obj/kernel.asm	/^c01107aa:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01107ad	obj/kernel.asm	/^c01107ad:	e8 5c 6c ff ff       	call   c010740e <kfree>$/;"	l
c01107b2	obj/kernel.asm	/^c01107b2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01107b5	obj/kernel.asm	/^c01107b5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01107ba	obj/kernel.asm	/^c01107ba:	c9                   	leave  $/;"	l
c01107bb	obj/kernel.asm	/^c01107bb:	c3                   	ret    $/;"	l
c01107bc	obj/kernel.asm	/^c01107bc <sfs_cleanup>:$/;"	l
c01107bc	obj/kernel.asm	/^c01107bc:	55                   	push   %ebp$/;"	l
c01107bd	obj/kernel.asm	/^c01107bd:	89 e5                	mov    %esp,%ebp$/;"	l
c01107bf	obj/kernel.asm	/^c01107bf:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01107c2	obj/kernel.asm	/^c01107c2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01107c5	obj/kernel.asm	/^c01107c5:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01107c8	obj/kernel.asm	/^c01107c8:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01107cc	obj/kernel.asm	/^c01107cc:	74 0a                	je     c01107d8 <sfs_cleanup+0x1c>$/;"	l
c01107ce	obj/kernel.asm	/^c01107ce:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01107d1	obj/kernel.asm	/^c01107d1:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c01107d4	obj/kernel.asm	/^c01107d4:	85 c0                	test   %eax,%eax$/;"	l
c01107d6	obj/kernel.asm	/^c01107d6:	74 16                	je     c01107ee <sfs_cleanup+0x32>$/;"	l
c01107d8	obj/kernel.asm	/^c01107d8:	68 b8 7b 11 c0       	push   $0xc0117bb8$/;"	l
c01107dd	obj/kernel.asm	/^c01107dd:	68 e1 7b 11 c0       	push   $0xc0117be1$/;"	l
c01107e2	obj/kernel.asm	/^c01107e2:	6a 54                	push   $0x54$/;"	l
c01107e4	obj/kernel.asm	/^c01107e4:	68 f6 7b 11 c0       	push   $0xc0117bf6$/;"	l
c01107e9	obj/kernel.asm	/^c01107e9:	e8 e1 fc fe ff       	call   c01004cf <__panic>$/;"	l
c01107ee	obj/kernel.asm	/^c01107ee:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01107f1	obj/kernel.asm	/^c01107f1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01107f4	obj/kernel.asm	/^c01107f4:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01107f7	obj/kernel.asm	/^c01107f7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01107fa	obj/kernel.asm	/^c01107fa:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01107fd	obj/kernel.asm	/^c01107fd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110800	obj/kernel.asm	/^c0110800:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0110803	obj/kernel.asm	/^c0110803:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0110806	obj/kernel.asm	/^c0110806:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0110809	obj/kernel.asm	/^c0110809:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
c011080c	obj/kernel.asm	/^c011080c:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c011080f	obj/kernel.asm	/^c011080f:	83 c2 0c             	add    $0xc,%edx$/;"	l
c0110812	obj/kernel.asm	/^c0110812:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110815	obj/kernel.asm	/^c0110815:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0110818	obj/kernel.asm	/^c0110818:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c011081b	obj/kernel.asm	/^c011081b:	50                   	push   %eax$/;"	l
c011081c	obj/kernel.asm	/^c011081c:	52                   	push   %edx$/;"	l
c011081d	obj/kernel.asm	/^c011081d:	68 8c 7c 11 c0       	push   $0xc0117c8c$/;"	l
c0110822	obj/kernel.asm	/^c0110822:	e8 43 fb fe ff       	call   c010036a <cprintf>$/;"	l
c0110827	obj/kernel.asm	/^c0110827:	83 c4 20             	add    $0x20,%esp$/;"	l
c011082a	obj/kernel.asm	/^c011082a:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0110831	obj/kernel.asm	/^c0110831:	eb 20                	jmp    c0110853 <sfs_cleanup+0x97>$/;"	l
c0110833	obj/kernel.asm	/^c0110833:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110836	obj/kernel.asm	/^c0110836:	8b 40 70             	mov    0x70(%eax),%eax$/;"	l
c0110839	obj/kernel.asm	/^c0110839:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011083c	obj/kernel.asm	/^c011083c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011083f	obj/kernel.asm	/^c011083f:	ff d0                	call   *%eax$/;"	l
c0110841	obj/kernel.asm	/^c0110841:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110844	obj/kernel.asm	/^c0110844:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110847	obj/kernel.asm	/^c0110847:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011084b	obj/kernel.asm	/^c011084b:	75 02                	jne    c011084f <sfs_cleanup+0x93>$/;"	l
c011084d	obj/kernel.asm	/^c011084d:	eb 0a                	jmp    c0110859 <sfs_cleanup+0x9d>$/;"	l
c011084f	obj/kernel.asm	/^c011084f:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0110853	obj/kernel.asm	/^c0110853:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%ebp)$/;"	l
c0110857	obj/kernel.asm	/^c0110857:	7e da                	jle    c0110833 <sfs_cleanup+0x77>$/;"	l
c0110859	obj/kernel.asm	/^c0110859:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011085d	obj/kernel.asm	/^c011085d:	74 21                	je     c0110880 <sfs_cleanup+0xc4>$/;"	l
c011085f	obj/kernel.asm	/^c011085f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110862	obj/kernel.asm	/^c0110862:	83 c0 0c             	add    $0xc,%eax$/;"	l
c0110865	obj/kernel.asm	/^c0110865:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110868	obj/kernel.asm	/^c0110868:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c011086b	obj/kernel.asm	/^c011086b:	50                   	push   %eax$/;"	l
c011086c	obj/kernel.asm	/^c011086c:	68 ab 7c 11 c0       	push   $0xc0117cab$/;"	l
c0110871	obj/kernel.asm	/^c0110871:	6a 5f                	push   $0x5f$/;"	l
c0110873	obj/kernel.asm	/^c0110873:	68 f6 7b 11 c0       	push   $0xc0117bf6$/;"	l
c0110878	obj/kernel.asm	/^c0110878:	e8 bf fc fe ff       	call   c010053c <__warn>$/;"	l
c011087d	obj/kernel.asm	/^c011087d:	83 c4 20             	add    $0x20,%esp$/;"	l
c0110880	obj/kernel.asm	/^c0110880:	c9                   	leave  $/;"	l
c0110881	obj/kernel.asm	/^c0110881:	c3                   	ret    $/;"	l
c0110882	obj/kernel.asm	/^c0110882 <sfs_init_read>:$/;"	l
c0110882	obj/kernel.asm	/^c0110882:	55                   	push   %ebp$/;"	l
c0110883	obj/kernel.asm	/^c0110883:	89 e5                	mov    %esp,%ebp$/;"	l
c0110885	obj/kernel.asm	/^c0110885:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0110888	obj/kernel.asm	/^c0110888:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011088b	obj/kernel.asm	/^c011088b:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c011088e	obj/kernel.asm	/^c011088e:	50                   	push   %eax$/;"	l
c011088f	obj/kernel.asm	/^c011088f:	68 00 10 00 00       	push   $0x1000$/;"	l
c0110894	obj/kernel.asm	/^c0110894:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0110897	obj/kernel.asm	/^c0110897:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c011089a	obj/kernel.asm	/^c011089a:	50                   	push   %eax$/;"	l
c011089b	obj/kernel.asm	/^c011089b:	e8 be a4 ff ff       	call   c010ad5e <iobuf_init>$/;"	l
c01108a0	obj/kernel.asm	/^c01108a0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01108a3	obj/kernel.asm	/^c01108a3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01108a6	obj/kernel.asm	/^c01108a6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01108a9	obj/kernel.asm	/^c01108a9:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01108ac	obj/kernel.asm	/^c01108ac:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01108af	obj/kernel.asm	/^c01108af:	6a 00                	push   $0x0$/;"	l
c01108b1	obj/kernel.asm	/^c01108b1:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01108b4	obj/kernel.asm	/^c01108b4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01108b7	obj/kernel.asm	/^c01108b7:	ff d0                	call   *%eax$/;"	l
c01108b9	obj/kernel.asm	/^c01108b9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01108bc	obj/kernel.asm	/^c01108bc:	c9                   	leave  $/;"	l
c01108bd	obj/kernel.asm	/^c01108bd:	c3                   	ret    $/;"	l
c01108be	obj/kernel.asm	/^c01108be <sfs_init_freemap>:$/;"	l
c01108be	obj/kernel.asm	/^c01108be:	55                   	push   %ebp$/;"	l
c01108bf	obj/kernel.asm	/^c01108bf:	89 e5                	mov    %esp,%ebp$/;"	l
c01108c1	obj/kernel.asm	/^c01108c1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01108c4	obj/kernel.asm	/^c01108c4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01108c7	obj/kernel.asm	/^c01108c7:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c01108ca	obj/kernel.asm	/^c01108ca:	50                   	push   %eax$/;"	l
c01108cb	obj/kernel.asm	/^c01108cb:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01108ce	obj/kernel.asm	/^c01108ce:	e8 90 27 00 00       	call   c0113063 <bitmap_getdata>$/;"	l
c01108d3	obj/kernel.asm	/^c01108d3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01108d6	obj/kernel.asm	/^c01108d6:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01108d9	obj/kernel.asm	/^c01108d9:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01108dd	obj/kernel.asm	/^c01108dd:	74 0f                	je     c01108ee <sfs_init_freemap+0x30>$/;"	l
c01108df	obj/kernel.asm	/^c01108df:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c01108e2	obj/kernel.asm	/^c01108e2:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01108e5	obj/kernel.asm	/^c01108e5:	89 c2                	mov    %eax,%edx$/;"	l
c01108e7	obj/kernel.asm	/^c01108e7:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01108ea	obj/kernel.asm	/^c01108ea:	39 c2                	cmp    %eax,%edx$/;"	l
c01108ec	obj/kernel.asm	/^c01108ec:	74 19                	je     c0110907 <sfs_init_freemap+0x49>$/;"	l
c01108ee	obj/kernel.asm	/^c01108ee:	68 c8 7c 11 c0       	push   $0xc0117cc8$/;"	l
c01108f3	obj/kernel.asm	/^c01108f3:	68 e1 7b 11 c0       	push   $0xc0117be1$/;"	l
c01108f8	obj/kernel.asm	/^c01108f8:	68 83 00 00 00       	push   $0x83$/;"	l
c01108fd	obj/kernel.asm	/^c01108fd:	68 f6 7b 11 c0       	push   $0xc0117bf6$/;"	l
c0110902	obj/kernel.asm	/^c0110902:	e8 c8 fb fe ff       	call   c01004cf <__panic>$/;"	l
c0110907	obj/kernel.asm	/^c0110907:	eb 31                	jmp    c011093a <sfs_init_freemap+0x7c>$/;"	l
c0110909	obj/kernel.asm	/^c0110909:	83 ec 04             	sub    $0x4,%esp$/;"	l
c011090c	obj/kernel.asm	/^c011090c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c011090f	obj/kernel.asm	/^c011090f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0110912	obj/kernel.asm	/^c0110912:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110915	obj/kernel.asm	/^c0110915:	e8 68 ff ff ff       	call   c0110882 <sfs_init_read>$/;"	l
c011091a	obj/kernel.asm	/^c011091a:	83 c4 10             	add    $0x10,%esp$/;"	l
c011091d	obj/kernel.asm	/^c011091d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110920	obj/kernel.asm	/^c0110920:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0110924	obj/kernel.asm	/^c0110924:	74 05                	je     c011092b <sfs_init_freemap+0x6d>$/;"	l
c0110926	obj/kernel.asm	/^c0110926:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110929	obj/kernel.asm	/^c0110929:	eb 1a                	jmp    c0110945 <sfs_init_freemap+0x87>$/;"	l
c011092b	obj/kernel.asm	/^c011092b:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c011092f	obj/kernel.asm	/^c011092f:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0110933	obj/kernel.asm	/^c0110933:	81 45 f4 00 10 00 00 	addl   $0x1000,-0xc(%ebp)$/;"	l
c011093a	obj/kernel.asm	/^c011093a:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c011093e	obj/kernel.asm	/^c011093e:	75 c9                	jne    c0110909 <sfs_init_freemap+0x4b>$/;"	l
c0110940	obj/kernel.asm	/^c0110940:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110945	obj/kernel.asm	/^c0110945:	c9                   	leave  $/;"	l
c0110946	obj/kernel.asm	/^c0110946:	c3                   	ret    $/;"	l
c0110947	obj/kernel.asm	/^c0110947 <sfs_do_mount>:$/;"	l
c0110947	obj/kernel.asm	/^c0110947:	55                   	push   %ebp$/;"	l
c0110948	obj/kernel.asm	/^c0110948:	89 e5                	mov    %esp,%ebp$/;"	l
c011094a	obj/kernel.asm	/^c011094a:	83 ec 58             	sub    $0x58,%esp$/;"	l
c011094d	obj/kernel.asm	/^c011094d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110950	obj/kernel.asm	/^c0110950:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110953	obj/kernel.asm	/^c0110953:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
c0110958	obj/kernel.asm	/^c0110958:	74 0a                	je     c0110964 <sfs_do_mount+0x1d>$/;"	l
c011095a	obj/kernel.asm	/^c011095a:	b8 f2 ff ff ff       	mov    $0xfffffff2,%eax$/;"	l
c011095f	obj/kernel.asm	/^c011095f:	e9 cd 03 00 00       	jmp    c0110d31 <sfs_do_mount+0x3ea>$/;"	l
c0110964	obj/kernel.asm	/^c0110964:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110967	obj/kernel.asm	/^c0110967:	6a 00                	push   $0x0$/;"	l
c0110969	obj/kernel.asm	/^c0110969:	e8 08 ed ff ff       	call   c010f676 <__alloc_fs>$/;"	l
c011096e	obj/kernel.asm	/^c011096e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110971	obj/kernel.asm	/^c0110971:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0110974	obj/kernel.asm	/^c0110974:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0110978	obj/kernel.asm	/^c0110978:	75 0a                	jne    c0110984 <sfs_do_mount+0x3d>$/;"	l
c011097a	obj/kernel.asm	/^c011097a:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c011097f	obj/kernel.asm	/^c011097f:	e9 ad 03 00 00       	jmp    c0110d31 <sfs_do_mount+0x3ea>$/;"	l
c0110984	obj/kernel.asm	/^c0110984:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110987	obj/kernel.asm	/^c0110987:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c011098a	obj/kernel.asm	/^c011098a:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c011098e	obj/kernel.asm	/^c011098e:	74 0a                	je     c011099a <sfs_do_mount+0x53>$/;"	l
c0110990	obj/kernel.asm	/^c0110990:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0110993	obj/kernel.asm	/^c0110993:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0110996	obj/kernel.asm	/^c0110996:	85 c0                	test   %eax,%eax$/;"	l
c0110998	obj/kernel.asm	/^c0110998:	74 19                	je     c01109b3 <sfs_do_mount+0x6c>$/;"	l
c011099a	obj/kernel.asm	/^c011099a:	68 b8 7b 11 c0       	push   $0xc0117bb8$/;"	l
c011099f	obj/kernel.asm	/^c011099f:	68 e1 7b 11 c0       	push   $0xc0117be1$/;"	l
c01109a4	obj/kernel.asm	/^c01109a4:	68 a3 00 00 00       	push   $0xa3$/;"	l
c01109a9	obj/kernel.asm	/^c01109a9:	68 f6 7b 11 c0       	push   $0xc0117bf6$/;"	l
c01109ae	obj/kernel.asm	/^c01109ae:	e8 1c fb fe ff       	call   c01004cf <__panic>$/;"	l
c01109b3	obj/kernel.asm	/^c01109b3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01109b6	obj/kernel.asm	/^c01109b6:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01109b9	obj/kernel.asm	/^c01109b9:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01109bc	obj/kernel.asm	/^c01109bc:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01109bf	obj/kernel.asm	/^c01109bf:	89 50 2c             	mov    %edx,0x2c(%eax)$/;"	l
c01109c2	obj/kernel.asm	/^c01109c2:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c01109c9	obj/kernel.asm	/^c01109c9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01109cc	obj/kernel.asm	/^c01109cc:	68 00 10 00 00       	push   $0x1000$/;"	l
c01109d1	obj/kernel.asm	/^c01109d1:	e8 20 6a ff ff       	call   c01073f6 <kmalloc>$/;"	l
c01109d6	obj/kernel.asm	/^c01109d6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01109d9	obj/kernel.asm	/^c01109d9:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01109dc	obj/kernel.asm	/^c01109dc:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01109df	obj/kernel.asm	/^c01109df:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c01109e2	obj/kernel.asm	/^c01109e2:	89 50 38             	mov    %edx,0x38(%eax)$/;"	l
c01109e5	obj/kernel.asm	/^c01109e5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01109e8	obj/kernel.asm	/^c01109e8:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01109eb	obj/kernel.asm	/^c01109eb:	85 c0                	test   %eax,%eax$/;"	l
c01109ed	obj/kernel.asm	/^c01109ed:	75 05                	jne    c01109f4 <sfs_do_mount+0xad>$/;"	l
c01109ef	obj/kernel.asm	/^c01109ef:	e9 2c 03 00 00       	jmp    c0110d20 <sfs_do_mount+0x3d9>$/;"	l
c01109f4	obj/kernel.asm	/^c01109f4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01109f7	obj/kernel.asm	/^c01109f7:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c01109fa	obj/kernel.asm	/^c01109fa:	6a 00                	push   $0x0$/;"	l
c01109fc	obj/kernel.asm	/^c01109fc:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01109ff	obj/kernel.asm	/^c01109ff:	e8 7e fe ff ff       	call   c0110882 <sfs_init_read>$/;"	l
c0110a04	obj/kernel.asm	/^c0110a04:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110a07	obj/kernel.asm	/^c0110a07:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110a0a	obj/kernel.asm	/^c0110a0a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110a0e	obj/kernel.asm	/^c0110a0e:	74 05                	je     c0110a15 <sfs_do_mount+0xce>$/;"	l
c0110a10	obj/kernel.asm	/^c0110a10:	e9 fd 02 00 00       	jmp    c0110d12 <sfs_do_mount+0x3cb>$/;"	l
c0110a15	obj/kernel.asm	/^c0110a15:	c7 45 f4 fd ff ff ff 	movl   $0xfffffffd,-0xc(%ebp)$/;"	l
c0110a1c	obj/kernel.asm	/^c0110a1c:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0110a1f	obj/kernel.asm	/^c0110a1f:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0110a22	obj/kernel.asm	/^c0110a22:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0110a25	obj/kernel.asm	/^c0110a25:	8b 00                	mov    (%eax),%eax$/;"	l
c0110a27	obj/kernel.asm	/^c0110a27:	3d 2a be 8d 2f       	cmp    $0x2f8dbe2a,%eax$/;"	l
c0110a2c	obj/kernel.asm	/^c0110a2c:	74 20                	je     c0110a4e <sfs_do_mount+0x107>$/;"	l
c0110a2e	obj/kernel.asm	/^c0110a2e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0110a31	obj/kernel.asm	/^c0110a31:	8b 00                	mov    (%eax),%eax$/;"	l
c0110a33	obj/kernel.asm	/^c0110a33:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0110a36	obj/kernel.asm	/^c0110a36:	68 2a be 8d 2f       	push   $0x2f8dbe2a$/;"	l
c0110a3b	obj/kernel.asm	/^c0110a3b:	50                   	push   %eax$/;"	l
c0110a3c	obj/kernel.asm	/^c0110a3c:	68 f4 7c 11 c0       	push   $0xc0117cf4$/;"	l
c0110a41	obj/kernel.asm	/^c0110a41:	e8 24 f9 fe ff       	call   c010036a <cprintf>$/;"	l
c0110a46	obj/kernel.asm	/^c0110a46:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110a49	obj/kernel.asm	/^c0110a49:	e9 c4 02 00 00       	jmp    c0110d12 <sfs_do_mount+0x3cb>$/;"	l
c0110a4e	obj/kernel.asm	/^c0110a4e:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0110a51	obj/kernel.asm	/^c0110a51:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0110a54	obj/kernel.asm	/^c0110a54:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110a57	obj/kernel.asm	/^c0110a57:	8b 00                	mov    (%eax),%eax$/;"	l
c0110a59	obj/kernel.asm	/^c0110a59:	39 c2                	cmp    %eax,%edx$/;"	l
c0110a5b	obj/kernel.asm	/^c0110a5b:	76 22                	jbe    c0110a7f <sfs_do_mount+0x138>$/;"	l
c0110a5d	obj/kernel.asm	/^c0110a5d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110a60	obj/kernel.asm	/^c0110a60:	8b 10                	mov    (%eax),%edx$/;"	l
c0110a62	obj/kernel.asm	/^c0110a62:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0110a65	obj/kernel.asm	/^c0110a65:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110a68	obj/kernel.asm	/^c0110a68:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0110a6b	obj/kernel.asm	/^c0110a6b:	52                   	push   %edx$/;"	l
c0110a6c	obj/kernel.asm	/^c0110a6c:	50                   	push   %eax$/;"	l
c0110a6d	obj/kernel.asm	/^c0110a6d:	68 2c 7d 11 c0       	push   $0xc0117d2c$/;"	l
c0110a72	obj/kernel.asm	/^c0110a72:	e8 f3 f8 fe ff       	call   c010036a <cprintf>$/;"	l
c0110a77	obj/kernel.asm	/^c0110a77:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110a7a	obj/kernel.asm	/^c0110a7a:	e9 93 02 00 00       	jmp    c0110d12 <sfs_do_mount+0x3cb>$/;"	l
c0110a7f	obj/kernel.asm	/^c0110a7f:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0110a82	obj/kernel.asm	/^c0110a82:	c6 40 2b 00          	movb   $0x0,0x2b(%eax)$/;"	l
c0110a86	obj/kernel.asm	/^c0110a86:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110a89	obj/kernel.asm	/^c0110a89:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c0110a8c	obj/kernel.asm	/^c0110a8c:	8b 0a                	mov    (%edx),%ecx$/;"	l
c0110a8e	obj/kernel.asm	/^c0110a8e:	89 08                	mov    %ecx,(%eax)$/;"	l
c0110a90	obj/kernel.asm	/^c0110a90:	8b 4a 04             	mov    0x4(%edx),%ecx$/;"	l
c0110a93	obj/kernel.asm	/^c0110a93:	89 48 04             	mov    %ecx,0x4(%eax)$/;"	l
c0110a96	obj/kernel.asm	/^c0110a96:	8b 4a 08             	mov    0x8(%edx),%ecx$/;"	l
c0110a99	obj/kernel.asm	/^c0110a99:	89 48 08             	mov    %ecx,0x8(%eax)$/;"	l
c0110a9c	obj/kernel.asm	/^c0110a9c:	8b 4a 0c             	mov    0xc(%edx),%ecx$/;"	l
c0110a9f	obj/kernel.asm	/^c0110a9f:	89 48 0c             	mov    %ecx,0xc(%eax)$/;"	l
c0110aa2	obj/kernel.asm	/^c0110aa2:	8b 4a 10             	mov    0x10(%edx),%ecx$/;"	l
c0110aa5	obj/kernel.asm	/^c0110aa5:	89 48 10             	mov    %ecx,0x10(%eax)$/;"	l
c0110aa8	obj/kernel.asm	/^c0110aa8:	8b 4a 14             	mov    0x14(%edx),%ecx$/;"	l
c0110aab	obj/kernel.asm	/^c0110aab:	89 48 14             	mov    %ecx,0x14(%eax)$/;"	l
c0110aae	obj/kernel.asm	/^c0110aae:	8b 4a 18             	mov    0x18(%edx),%ecx$/;"	l
c0110ab1	obj/kernel.asm	/^c0110ab1:	89 48 18             	mov    %ecx,0x18(%eax)$/;"	l
c0110ab4	obj/kernel.asm	/^c0110ab4:	8b 4a 1c             	mov    0x1c(%edx),%ecx$/;"	l
c0110ab7	obj/kernel.asm	/^c0110ab7:	89 48 1c             	mov    %ecx,0x1c(%eax)$/;"	l
c0110aba	obj/kernel.asm	/^c0110aba:	8b 4a 20             	mov    0x20(%edx),%ecx$/;"	l
c0110abd	obj/kernel.asm	/^c0110abd:	89 48 20             	mov    %ecx,0x20(%eax)$/;"	l
c0110ac0	obj/kernel.asm	/^c0110ac0:	8b 4a 24             	mov    0x24(%edx),%ecx$/;"	l
c0110ac3	obj/kernel.asm	/^c0110ac3:	89 48 24             	mov    %ecx,0x24(%eax)$/;"	l
c0110ac6	obj/kernel.asm	/^c0110ac6:	8b 52 28             	mov    0x28(%edx),%edx$/;"	l
c0110ac9	obj/kernel.asm	/^c0110ac9:	89 50 28             	mov    %edx,0x28(%eax)$/;"	l
c0110acc	obj/kernel.asm	/^c0110acc:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0110ad3	obj/kernel.asm	/^c0110ad3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110ad6	obj/kernel.asm	/^c0110ad6:	68 00 20 00 00       	push   $0x2000$/;"	l
c0110adb	obj/kernel.asm	/^c0110adb:	e8 16 69 ff ff       	call   c01073f6 <kmalloc>$/;"	l
c0110ae0	obj/kernel.asm	/^c0110ae0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110ae3	obj/kernel.asm	/^c0110ae3:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0110ae6	obj/kernel.asm	/^c0110ae6:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110ae9	obj/kernel.asm	/^c0110ae9:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0110aec	obj/kernel.asm	/^c0110aec:	89 50 68             	mov    %edx,0x68(%eax)$/;"	l
c0110aef	obj/kernel.asm	/^c0110aef:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110af2	obj/kernel.asm	/^c0110af2:	8b 40 68             	mov    0x68(%eax),%eax$/;"	l
c0110af5	obj/kernel.asm	/^c0110af5:	85 c0                	test   %eax,%eax$/;"	l
c0110af7	obj/kernel.asm	/^c0110af7:	75 05                	jne    c0110afe <sfs_do_mount+0x1b7>$/;"	l
c0110af9	obj/kernel.asm	/^c0110af9:	e9 14 02 00 00       	jmp    c0110d12 <sfs_do_mount+0x3cb>$/;"	l
c0110afe	obj/kernel.asm	/^c0110afe:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0110b05	obj/kernel.asm	/^c0110b05:	eb 2a                	jmp    c0110b31 <sfs_do_mount+0x1ea>$/;"	l
c0110b07	obj/kernel.asm	/^c0110b07:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110b0a	obj/kernel.asm	/^c0110b0a:	8d 14 c5 00 00 00 00 	lea    0x0(,%eax,8),%edx$/;"	l
c0110b11	obj/kernel.asm	/^c0110b11:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0110b14	obj/kernel.asm	/^c0110b14:	01 d0                	add    %edx,%eax$/;"	l
c0110b16	obj/kernel.asm	/^c0110b16:	89 45 b4             	mov    %eax,-0x4c(%ebp)$/;"	l
c0110b19	obj/kernel.asm	/^c0110b19:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0110b1c	obj/kernel.asm	/^c0110b1c:	8b 55 b4             	mov    -0x4c(%ebp),%edx$/;"	l
c0110b1f	obj/kernel.asm	/^c0110b1f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0110b22	obj/kernel.asm	/^c0110b22:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0110b25	obj/kernel.asm	/^c0110b25:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0110b28	obj/kernel.asm	/^c0110b28:	8b 45 b4             	mov    -0x4c(%ebp),%eax$/;"	l
c0110b2b	obj/kernel.asm	/^c0110b2b:	89 10                	mov    %edx,(%eax)$/;"	l
c0110b2d	obj/kernel.asm	/^c0110b2d:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0110b31	obj/kernel.asm	/^c0110b31:	81 7d f0 ff 03 00 00 	cmpl   $0x3ff,-0x10(%ebp)$/;"	l
c0110b38	obj/kernel.asm	/^c0110b38:	76 cd                	jbe    c0110b07 <sfs_do_mount+0x1c0>$/;"	l
c0110b3a	obj/kernel.asm	/^c0110b3a:	c7 45 d0 00 80 00 00 	movl   $0x8000,-0x30(%ebp)$/;"	l
c0110b41	obj/kernel.asm	/^c0110b41:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0110b44	obj/kernel.asm	/^c0110b44:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0110b47	obj/kernel.asm	/^c0110b47:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0110b4a	obj/kernel.asm	/^c0110b4a:	01 d0                	add    %edx,%eax$/;"	l
c0110b4c	obj/kernel.asm	/^c0110b4c:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0110b4f	obj/kernel.asm	/^c0110b4f:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0110b52	obj/kernel.asm	/^c0110b52:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0110b55	obj/kernel.asm	/^c0110b55:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0110b5a	obj/kernel.asm	/^c0110b5a:	f7 75 d0             	divl   -0x30(%ebp)$/;"	l
c0110b5d	obj/kernel.asm	/^c0110b5d:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0110b60	obj/kernel.asm	/^c0110b60:	29 d0                	sub    %edx,%eax$/;"	l
c0110b62	obj/kernel.asm	/^c0110b62:	89 45 c8             	mov    %eax,-0x38(%ebp)$/;"	l
c0110b65	obj/kernel.asm	/^c0110b65:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110b68	obj/kernel.asm	/^c0110b68:	ff 75 c8             	pushl  -0x38(%ebp)$/;"	l
c0110b6b	obj/kernel.asm	/^c0110b6b:	e8 8c 21 00 00       	call   c0112cfc <bitmap_create>$/;"	l
c0110b70	obj/kernel.asm	/^c0110b70:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110b73	obj/kernel.asm	/^c0110b73:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0110b76	obj/kernel.asm	/^c0110b76:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110b79	obj/kernel.asm	/^c0110b79:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0110b7c	obj/kernel.asm	/^c0110b7c:	89 50 30             	mov    %edx,0x30(%eax)$/;"	l
c0110b7f	obj/kernel.asm	/^c0110b7f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110b82	obj/kernel.asm	/^c0110b82:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0110b85	obj/kernel.asm	/^c0110b85:	85 c0                	test   %eax,%eax$/;"	l
c0110b87	obj/kernel.asm	/^c0110b87:	75 05                	jne    c0110b8e <sfs_do_mount+0x247>$/;"	l
c0110b89	obj/kernel.asm	/^c0110b89:	e9 76 01 00 00       	jmp    c0110d04 <sfs_do_mount+0x3bd>$/;"	l
c0110b8e	obj/kernel.asm	/^c0110b8e:	c7 45 c0 00 80 00 00 	movl   $0x8000,-0x40(%ebp)$/;"	l
c0110b95	obj/kernel.asm	/^c0110b95:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0110b98	obj/kernel.asm	/^c0110b98:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0110b9b	obj/kernel.asm	/^c0110b9b:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0110b9e	obj/kernel.asm	/^c0110b9e:	01 d0                	add    %edx,%eax$/;"	l
c0110ba0	obj/kernel.asm	/^c0110ba0:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0110ba3	obj/kernel.asm	/^c0110ba3:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0110ba8	obj/kernel.asm	/^c0110ba8:	f7 75 c0             	divl   -0x40(%ebp)$/;"	l
c0110bab	obj/kernel.asm	/^c0110bab:	89 45 bc             	mov    %eax,-0x44(%ebp)$/;"	l
c0110bae	obj/kernel.asm	/^c0110bae:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110bb1	obj/kernel.asm	/^c0110bb1:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0110bb4	obj/kernel.asm	/^c0110bb4:	ff 75 bc             	pushl  -0x44(%ebp)$/;"	l
c0110bb7	obj/kernel.asm	/^c0110bb7:	6a 02                	push   $0x2$/;"	l
c0110bb9	obj/kernel.asm	/^c0110bb9:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
c0110bbc	obj/kernel.asm	/^c0110bbc:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110bbf	obj/kernel.asm	/^c0110bbf:	e8 fa fc ff ff       	call   c01108be <sfs_init_freemap>$/;"	l
c0110bc4	obj/kernel.asm	/^c0110bc4:	83 c4 20             	add    $0x20,%esp$/;"	l
c0110bc7	obj/kernel.asm	/^c0110bc7:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110bca	obj/kernel.asm	/^c0110bca:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110bce	obj/kernel.asm	/^c0110bce:	74 14                	je     c0110be4 <sfs_do_mount+0x29d>$/;"	l
c0110bd0	obj/kernel.asm	/^c0110bd0:	90                   	nop$/;"	l
c0110bd1	obj/kernel.asm	/^c0110bd1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110bd4	obj/kernel.asm	/^c0110bd4:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
c0110bd7	obj/kernel.asm	/^c0110bd7:	e8 5f 24 00 00       	call   c011303b <bitmap_destroy>$/;"	l
c0110bdc	obj/kernel.asm	/^c0110bdc:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110bdf	obj/kernel.asm	/^c0110bdf:	e9 20 01 00 00       	jmp    c0110d04 <sfs_do_mount+0x3bd>$/;"	l
c0110be4	obj/kernel.asm	/^c0110be4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110be7	obj/kernel.asm	/^c0110be7:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110bea	obj/kernel.asm	/^c0110bea:	89 45 b8             	mov    %eax,-0x48(%ebp)$/;"	l
c0110bed	obj/kernel.asm	/^c0110bed:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)$/;"	l
c0110bf4	obj/kernel.asm	/^c0110bf4:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0110bfb	obj/kernel.asm	/^c0110bfb:	eb 1d                	jmp    c0110c1a <sfs_do_mount+0x2d3>$/;"	l
c0110bfd	obj/kernel.asm	/^c0110bfd:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110c00	obj/kernel.asm	/^c0110c00:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0110c03	obj/kernel.asm	/^c0110c03:	ff 75 c4             	pushl  -0x3c(%ebp)$/;"	l
c0110c06	obj/kernel.asm	/^c0110c06:	e8 b7 23 00 00       	call   c0112fc2 <bitmap_test>$/;"	l
c0110c0b	obj/kernel.asm	/^c0110c0b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110c0e	obj/kernel.asm	/^c0110c0e:	85 c0                	test   %eax,%eax$/;"	l
c0110c10	obj/kernel.asm	/^c0110c10:	74 04                	je     c0110c16 <sfs_do_mount+0x2cf>$/;"	l
c0110c12	obj/kernel.asm	/^c0110c12:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)$/;"	l
c0110c16	obj/kernel.asm	/^c0110c16:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0110c1a	obj/kernel.asm	/^c0110c1a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110c1d	obj/kernel.asm	/^c0110c1d:	3b 45 c8             	cmp    -0x38(%ebp),%eax$/;"	l
c0110c20	obj/kernel.asm	/^c0110c20:	72 db                	jb     c0110bfd <sfs_do_mount+0x2b6>$/;"	l
c0110c22	obj/kernel.asm	/^c0110c22:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110c25	obj/kernel.asm	/^c0110c25:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0110c28	obj/kernel.asm	/^c0110c28:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c0110c2b	obj/kernel.asm	/^c0110c2b:	74 19                	je     c0110c46 <sfs_do_mount+0x2ff>$/;"	l
c0110c2d	obj/kernel.asm	/^c0110c2d:	68 5c 7d 11 c0       	push   $0xc0117d5c$/;"	l
c0110c32	obj/kernel.asm	/^c0110c32:	68 e1 7b 11 c0       	push   $0xc0117be1$/;"	l
c0110c37	obj/kernel.asm	/^c0110c37:	68 e0 00 00 00       	push   $0xe0$/;"	l
c0110c3c	obj/kernel.asm	/^c0110c3c:	68 f6 7b 11 c0       	push   $0xc0117bf6$/;"	l
c0110c41	obj/kernel.asm	/^c0110c41:	e8 89 f8 fe ff       	call   c01004cf <__panic>$/;"	l
c0110c46	obj/kernel.asm	/^c0110c46:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110c49	obj/kernel.asm	/^c0110c49:	c7 40 34 00 00 00 00 	movl   $0x0,0x34(%eax)$/;"	l
c0110c50	obj/kernel.asm	/^c0110c50:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110c53	obj/kernel.asm	/^c0110c53:	83 c0 3c             	add    $0x3c,%eax$/;"	l
c0110c56	obj/kernel.asm	/^c0110c56:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110c59	obj/kernel.asm	/^c0110c59:	6a 01                	push   $0x1$/;"	l
c0110c5b	obj/kernel.asm	/^c0110c5b:	50                   	push   %eax$/;"	l
c0110c5c	obj/kernel.asm	/^c0110c5c:	e8 1c 87 ff ff       	call   c010937d <sem_init>$/;"	l
c0110c61	obj/kernel.asm	/^c0110c61:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110c64	obj/kernel.asm	/^c0110c64:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110c67	obj/kernel.asm	/^c0110c67:	83 c0 48             	add    $0x48,%eax$/;"	l
c0110c6a	obj/kernel.asm	/^c0110c6a:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110c6d	obj/kernel.asm	/^c0110c6d:	6a 01                	push   $0x1$/;"	l
c0110c6f	obj/kernel.asm	/^c0110c6f:	50                   	push   %eax$/;"	l
c0110c70	obj/kernel.asm	/^c0110c70:	e8 08 87 ff ff       	call   c010937d <sem_init>$/;"	l
c0110c75	obj/kernel.asm	/^c0110c75:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110c78	obj/kernel.asm	/^c0110c78:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110c7b	obj/kernel.asm	/^c0110c7b:	83 c0 54             	add    $0x54,%eax$/;"	l
c0110c7e	obj/kernel.asm	/^c0110c7e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110c81	obj/kernel.asm	/^c0110c81:	6a 01                	push   $0x1$/;"	l
c0110c83	obj/kernel.asm	/^c0110c83:	50                   	push   %eax$/;"	l
c0110c84	obj/kernel.asm	/^c0110c84:	e8 f4 86 ff ff       	call   c010937d <sem_init>$/;"	l
c0110c89	obj/kernel.asm	/^c0110c89:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110c8c	obj/kernel.asm	/^c0110c8c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110c8f	obj/kernel.asm	/^c0110c8f:	83 c0 60             	add    $0x60,%eax$/;"	l
c0110c92	obj/kernel.asm	/^c0110c92:	89 45 b0             	mov    %eax,-0x50(%ebp)$/;"	l
c0110c95	obj/kernel.asm	/^c0110c95:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0110c98	obj/kernel.asm	/^c0110c98:	8b 55 b0             	mov    -0x50(%ebp),%edx$/;"	l
c0110c9b	obj/kernel.asm	/^c0110c9b:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0110c9e	obj/kernel.asm	/^c0110c9e:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0110ca1	obj/kernel.asm	/^c0110ca1:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0110ca4	obj/kernel.asm	/^c0110ca4:	8b 45 b0             	mov    -0x50(%ebp),%eax$/;"	l
c0110ca7	obj/kernel.asm	/^c0110ca7:	89 10                	mov    %edx,(%eax)$/;"	l
c0110ca9	obj/kernel.asm	/^c0110ca9:	8b 45 b8             	mov    -0x48(%ebp),%eax$/;"	l
c0110cac	obj/kernel.asm	/^c0110cac:	2b 45 ec             	sub    -0x14(%ebp),%eax$/;"	l
c0110caf	obj/kernel.asm	/^c0110caf:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0110cb2	obj/kernel.asm	/^c0110cb2:	83 c2 0c             	add    $0xc,%edx$/;"	l
c0110cb5	obj/kernel.asm	/^c0110cb5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110cb8	obj/kernel.asm	/^c0110cb8:	ff 75 b8             	pushl  -0x48(%ebp)$/;"	l
c0110cbb	obj/kernel.asm	/^c0110cbb:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0110cbe	obj/kernel.asm	/^c0110cbe:	50                   	push   %eax$/;"	l
c0110cbf	obj/kernel.asm	/^c0110cbf:	52                   	push   %edx$/;"	l
c0110cc0	obj/kernel.asm	/^c0110cc0:	68 86 7d 11 c0       	push   $0xc0117d86$/;"	l
c0110cc5	obj/kernel.asm	/^c0110cc5:	e8 a0 f6 fe ff       	call   c010036a <cprintf>$/;"	l
c0110cca	obj/kernel.asm	/^c0110cca:	83 c4 20             	add    $0x20,%esp$/;"	l
c0110ccd	obj/kernel.asm	/^c0110ccd:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110cd0	obj/kernel.asm	/^c0110cd0:	c7 40 70 41 05 11 c0 	movl   $0xc0110541,0x70(%eax)$/;"	l
c0110cd7	obj/kernel.asm	/^c0110cd7:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110cda	obj/kernel.asm	/^c0110cda:	c7 40 74 8d 06 11 c0 	movl   $0xc011068d,0x74(%eax)$/;"	l
c0110ce1	obj/kernel.asm	/^c0110ce1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110ce4	obj/kernel.asm	/^c0110ce4:	c7 40 78 f6 06 11 c0 	movl   $0xc01106f6,0x78(%eax)$/;"	l
c0110ceb	obj/kernel.asm	/^c0110ceb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110cee	obj/kernel.asm	/^c0110cee:	c7 40 7c bc 07 11 c0 	movl   $0xc01107bc,0x7c(%eax)$/;"	l
c0110cf5	obj/kernel.asm	/^c0110cf5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110cf8	obj/kernel.asm	/^c0110cf8:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0110cfb	obj/kernel.asm	/^c0110cfb:	89 10                	mov    %edx,(%eax)$/;"	l
c0110cfd	obj/kernel.asm	/^c0110cfd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0110d02	obj/kernel.asm	/^c0110d02:	eb 2d                	jmp    c0110d31 <sfs_do_mount+0x3ea>$/;"	l
c0110d04	obj/kernel.asm	/^c0110d04:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110d07	obj/kernel.asm	/^c0110d07:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
c0110d0a	obj/kernel.asm	/^c0110d0a:	e8 ff 66 ff ff       	call   c010740e <kfree>$/;"	l
c0110d0f	obj/kernel.asm	/^c0110d0f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110d12	obj/kernel.asm	/^c0110d12:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110d15	obj/kernel.asm	/^c0110d15:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c0110d18	obj/kernel.asm	/^c0110d18:	e8 f1 66 ff ff       	call   c010740e <kfree>$/;"	l
c0110d1d	obj/kernel.asm	/^c0110d1d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110d20	obj/kernel.asm	/^c0110d20:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110d23	obj/kernel.asm	/^c0110d23:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0110d26	obj/kernel.asm	/^c0110d26:	e8 e3 66 ff ff       	call   c010740e <kfree>$/;"	l
c0110d2b	obj/kernel.asm	/^c0110d2b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110d2e	obj/kernel.asm	/^c0110d2e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110d31	obj/kernel.asm	/^c0110d31:	c9                   	leave  $/;"	l
c0110d32	obj/kernel.asm	/^c0110d32:	c3                   	ret    $/;"	l
c0110d33	obj/kernel.asm	/^c0110d33 <sfs_mount>:$/;"	l
c0110d33	obj/kernel.asm	/^c0110d33:	55                   	push   %ebp$/;"	l
c0110d34	obj/kernel.asm	/^c0110d34:	89 e5                	mov    %esp,%ebp$/;"	l
c0110d36	obj/kernel.asm	/^c0110d36:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110d39	obj/kernel.asm	/^c0110d39:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110d3c	obj/kernel.asm	/^c0110d3c:	68 47 09 11 c0       	push   $0xc0110947$/;"	l
c0110d41	obj/kernel.asm	/^c0110d41:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110d44	obj/kernel.asm	/^c0110d44:	e8 ec d9 ff ff       	call   c010e735 <vfs_mount>$/;"	l
c0110d49	obj/kernel.asm	/^c0110d49:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110d4c	obj/kernel.asm	/^c0110d4c:	c9                   	leave  $/;"	l
c0110d4d	obj/kernel.asm	/^c0110d4d:	c3                   	ret    $/;"	l
c0110d4e	obj/kernel.asm	/^c0110d4e <inode_ref_count>:$/;"	l
c0110d4e	obj/kernel.asm	/^c0110d4e:	55                   	push   %ebp$/;"	l
c0110d4f	obj/kernel.asm	/^c0110d4f:	89 e5                	mov    %esp,%ebp$/;"	l
c0110d51	obj/kernel.asm	/^c0110d51:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110d54	obj/kernel.asm	/^c0110d54:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0110d57	obj/kernel.asm	/^c0110d57:	5d                   	pop    %ebp$/;"	l
c0110d58	obj/kernel.asm	/^c0110d58:	c3                   	ret    $/;"	l
c0110d59	obj/kernel.asm	/^c0110d59 <lock_sin>:$/;"	l
c0110d59	obj/kernel.asm	/^c0110d59:	55                   	push   %ebp$/;"	l
c0110d5a	obj/kernel.asm	/^c0110d5a:	89 e5                	mov    %esp,%ebp$/;"	l
c0110d5c	obj/kernel.asm	/^c0110d5c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110d5f	obj/kernel.asm	/^c0110d5f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110d62	obj/kernel.asm	/^c0110d62:	83 c0 10             	add    $0x10,%eax$/;"	l
c0110d65	obj/kernel.asm	/^c0110d65:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110d68	obj/kernel.asm	/^c0110d68:	50                   	push   %eax$/;"	l
c0110d69	obj/kernel.asm	/^c0110d69:	e8 95 87 ff ff       	call   c0109503 <down>$/;"	l
c0110d6e	obj/kernel.asm	/^c0110d6e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110d71	obj/kernel.asm	/^c0110d71:	c9                   	leave  $/;"	l
c0110d72	obj/kernel.asm	/^c0110d72:	c3                   	ret    $/;"	l
c0110d73	obj/kernel.asm	/^c0110d73 <unlock_sin>:$/;"	l
c0110d73	obj/kernel.asm	/^c0110d73:	55                   	push   %ebp$/;"	l
c0110d74	obj/kernel.asm	/^c0110d74:	89 e5                	mov    %esp,%ebp$/;"	l
c0110d76	obj/kernel.asm	/^c0110d76:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110d79	obj/kernel.asm	/^c0110d79:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110d7c	obj/kernel.asm	/^c0110d7c:	83 c0 10             	add    $0x10,%eax$/;"	l
c0110d7f	obj/kernel.asm	/^c0110d7f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110d82	obj/kernel.asm	/^c0110d82:	50                   	push   %eax$/;"	l
c0110d83	obj/kernel.asm	/^c0110d83:	e8 60 87 ff ff       	call   c01094e8 <up>$/;"	l
c0110d88	obj/kernel.asm	/^c0110d88:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110d8b	obj/kernel.asm	/^c0110d8b:	c9                   	leave  $/;"	l
c0110d8c	obj/kernel.asm	/^c0110d8c:	c3                   	ret    $/;"	l
c0110d8d	obj/kernel.asm	/^c0110d8d <sfs_get_ops>:$/;"	l
c0110d8d	obj/kernel.asm	/^c0110d8d:	55                   	push   %ebp$/;"	l
c0110d8e	obj/kernel.asm	/^c0110d8e:	89 e5                	mov    %esp,%ebp$/;"	l
c0110d90	obj/kernel.asm	/^c0110d90:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110d93	obj/kernel.asm	/^c0110d93:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110d96	obj/kernel.asm	/^c0110d96:	66 89 45 f4          	mov    %ax,-0xc(%ebp)$/;"	l
c0110d9a	obj/kernel.asm	/^c0110d9a:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c0110d9e	obj/kernel.asm	/^c0110d9e:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0110da1	obj/kernel.asm	/^c0110da1:	74 0c                	je     c0110daf <sfs_get_ops+0x22>$/;"	l
c0110da3	obj/kernel.asm	/^c0110da3:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c0110da6	obj/kernel.asm	/^c0110da6:	75 0e                	jne    c0110db6 <sfs_get_ops+0x29>$/;"	l
c0110da8	obj/kernel.asm	/^c0110da8:	b8 c0 7d 11 c0       	mov    $0xc0117dc0,%eax$/;"	l
c0110dad	obj/kernel.asm	/^c0110dad:	eb 1d                	jmp    c0110dcc <sfs_get_ops+0x3f>$/;"	l
c0110daf	obj/kernel.asm	/^c0110daf:	b8 00 7e 11 c0       	mov    $0xc0117e00,%eax$/;"	l
c0110db4	obj/kernel.asm	/^c0110db4:	eb 16                	jmp    c0110dcc <sfs_get_ops+0x3f>$/;"	l
c0110db6	obj/kernel.asm	/^c0110db6:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax$/;"	l
c0110dba	obj/kernel.asm	/^c0110dba:	50                   	push   %eax$/;"	l
c0110dbb	obj/kernel.asm	/^c0110dbb:	68 40 7e 11 c0       	push   $0xc0117e40$/;"	l
c0110dc0	obj/kernel.asm	/^c0110dc0:	6a 2e                	push   $0x2e$/;"	l
c0110dc2	obj/kernel.asm	/^c0110dc2:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0110dc7	obj/kernel.asm	/^c0110dc7:	e8 03 f7 fe ff       	call   c01004cf <__panic>$/;"	l
c0110dcc	obj/kernel.asm	/^c0110dcc:	c9                   	leave  $/;"	l
c0110dcd	obj/kernel.asm	/^c0110dcd:	c3                   	ret    $/;"	l
c0110dce	obj/kernel.asm	/^c0110dce <sfs_hash_list>:$/;"	l
c0110dce	obj/kernel.asm	/^c0110dce:	55                   	push   %ebp$/;"	l
c0110dcf	obj/kernel.asm	/^c0110dcf:	89 e5                	mov    %esp,%ebp$/;"	l
c0110dd1	obj/kernel.asm	/^c0110dd1:	53                   	push   %ebx$/;"	l
c0110dd2	obj/kernel.asm	/^c0110dd2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0110dd5	obj/kernel.asm	/^c0110dd5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110dd8	obj/kernel.asm	/^c0110dd8:	8b 58 68             	mov    0x68(%eax),%ebx$/;"	l
c0110ddb	obj/kernel.asm	/^c0110ddb:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110dde	obj/kernel.asm	/^c0110dde:	6a 0a                	push   $0xa$/;"	l
c0110de0	obj/kernel.asm	/^c0110de0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0110de3	obj/kernel.asm	/^c0110de3:	e8 7c 31 00 00       	call   c0113f64 <hash32>$/;"	l
c0110de8	obj/kernel.asm	/^c0110de8:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110deb	obj/kernel.asm	/^c0110deb:	c1 e0 03             	shl    $0x3,%eax$/;"	l
c0110dee	obj/kernel.asm	/^c0110dee:	01 d8                	add    %ebx,%eax$/;"	l
c0110df0	obj/kernel.asm	/^c0110df0:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0110df3	obj/kernel.asm	/^c0110df3:	c9                   	leave  $/;"	l
c0110df4	obj/kernel.asm	/^c0110df4:	c3                   	ret    $/;"	l
c0110df5	obj/kernel.asm	/^c0110df5 <sfs_set_links>:$/;"	l
c0110df5	obj/kernel.asm	/^c0110df5:	55                   	push   %ebp$/;"	l
c0110df6	obj/kernel.asm	/^c0110df6:	89 e5                	mov    %esp,%ebp$/;"	l
c0110df8	obj/kernel.asm	/^c0110df8:	53                   	push   %ebx$/;"	l
c0110df9	obj/kernel.asm	/^c0110df9:	83 ec 44             	sub    $0x44,%esp$/;"	l
c0110dfc	obj/kernel.asm	/^c0110dfc:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110dff	obj/kernel.asm	/^c0110dff:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0110e02	obj/kernel.asm	/^c0110e02:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0110e05	obj/kernel.asm	/^c0110e05:	83 c2 60             	add    $0x60,%edx$/;"	l
c0110e08	obj/kernel.asm	/^c0110e08:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0110e0b	obj/kernel.asm	/^c0110e0b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110e0e	obj/kernel.asm	/^c0110e0e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110e11	obj/kernel.asm	/^c0110e11:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0110e14	obj/kernel.asm	/^c0110e14:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110e17	obj/kernel.asm	/^c0110e17:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0110e1a	obj/kernel.asm	/^c0110e1a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110e1d	obj/kernel.asm	/^c0110e1d:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110e20	obj/kernel.asm	/^c0110e20:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0110e23	obj/kernel.asm	/^c0110e23:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0110e26	obj/kernel.asm	/^c0110e26:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0110e29	obj/kernel.asm	/^c0110e29:	89 55 e0             	mov    %edx,-0x20(%ebp)$/;"	l
c0110e2c	obj/kernel.asm	/^c0110e2c:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0110e2f	obj/kernel.asm	/^c0110e2f:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0110e32	obj/kernel.asm	/^c0110e32:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0110e35	obj/kernel.asm	/^c0110e35:	89 10                	mov    %edx,(%eax)$/;"	l
c0110e37	obj/kernel.asm	/^c0110e37:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0110e3a	obj/kernel.asm	/^c0110e3a:	8b 10                	mov    (%eax),%edx$/;"	l
c0110e3c	obj/kernel.asm	/^c0110e3c:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0110e3f	obj/kernel.asm	/^c0110e3f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0110e42	obj/kernel.asm	/^c0110e42:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0110e45	obj/kernel.asm	/^c0110e45:	8b 55 dc             	mov    -0x24(%ebp),%edx$/;"	l
c0110e48	obj/kernel.asm	/^c0110e48:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0110e4b	obj/kernel.asm	/^c0110e4b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0110e4e	obj/kernel.asm	/^c0110e4e:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0110e51	obj/kernel.asm	/^c0110e51:	89 10                	mov    %edx,(%eax)$/;"	l
c0110e53	obj/kernel.asm	/^c0110e53:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110e56	obj/kernel.asm	/^c0110e56:	8d 58 24             	lea    0x24(%eax),%ebx$/;"	l
c0110e59	obj/kernel.asm	/^c0110e59:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110e5c	obj/kernel.asm	/^c0110e5c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110e5f	obj/kernel.asm	/^c0110e5f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110e62	obj/kernel.asm	/^c0110e62:	50                   	push   %eax$/;"	l
c0110e63	obj/kernel.asm	/^c0110e63:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110e66	obj/kernel.asm	/^c0110e66:	e8 63 ff ff ff       	call   c0110dce <sfs_hash_list>$/;"	l
c0110e6b	obj/kernel.asm	/^c0110e6b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110e6e	obj/kernel.asm	/^c0110e6e:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0110e71	obj/kernel.asm	/^c0110e71:	89 5d d4             	mov    %ebx,-0x2c(%ebp)$/;"	l
c0110e74	obj/kernel.asm	/^c0110e74:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0110e77	obj/kernel.asm	/^c0110e77:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0110e7a	obj/kernel.asm	/^c0110e7a:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0110e7d	obj/kernel.asm	/^c0110e7d:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c0110e80	obj/kernel.asm	/^c0110e80:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0110e83	obj/kernel.asm	/^c0110e83:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110e86	obj/kernel.asm	/^c0110e86:	8b 55 cc             	mov    -0x34(%ebp),%edx$/;"	l
c0110e89	obj/kernel.asm	/^c0110e89:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c0110e8c	obj/kernel.asm	/^c0110e8c:	8b 55 d0             	mov    -0x30(%ebp),%edx$/;"	l
c0110e8f	obj/kernel.asm	/^c0110e8f:	89 55 c4             	mov    %edx,-0x3c(%ebp)$/;"	l
c0110e92	obj/kernel.asm	/^c0110e92:	89 45 c0             	mov    %eax,-0x40(%ebp)$/;"	l
c0110e95	obj/kernel.asm	/^c0110e95:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0110e98	obj/kernel.asm	/^c0110e98:	8b 55 c8             	mov    -0x38(%ebp),%edx$/;"	l
c0110e9b	obj/kernel.asm	/^c0110e9b:	89 10                	mov    %edx,(%eax)$/;"	l
c0110e9d	obj/kernel.asm	/^c0110e9d:	8b 45 c0             	mov    -0x40(%ebp),%eax$/;"	l
c0110ea0	obj/kernel.asm	/^c0110ea0:	8b 10                	mov    (%eax),%edx$/;"	l
c0110ea2	obj/kernel.asm	/^c0110ea2:	8b 45 c4             	mov    -0x3c(%ebp),%eax$/;"	l
c0110ea5	obj/kernel.asm	/^c0110ea5:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0110ea8	obj/kernel.asm	/^c0110ea8:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0110eab	obj/kernel.asm	/^c0110eab:	8b 55 c0             	mov    -0x40(%ebp),%edx$/;"	l
c0110eae	obj/kernel.asm	/^c0110eae:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0110eb1	obj/kernel.asm	/^c0110eb1:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c0110eb4	obj/kernel.asm	/^c0110eb4:	8b 55 c4             	mov    -0x3c(%ebp),%edx$/;"	l
c0110eb7	obj/kernel.asm	/^c0110eb7:	89 10                	mov    %edx,(%eax)$/;"	l
c0110eb9	obj/kernel.asm	/^c0110eb9:	8b 5d fc             	mov    -0x4(%ebp),%ebx$/;"	l
c0110ebc	obj/kernel.asm	/^c0110ebc:	c9                   	leave  $/;"	l
c0110ebd	obj/kernel.asm	/^c0110ebd:	c3                   	ret    $/;"	l
c0110ebe	obj/kernel.asm	/^c0110ebe <sfs_remove_links>:$/;"	l
c0110ebe	obj/kernel.asm	/^c0110ebe:	55                   	push   %ebp$/;"	l
c0110ebf	obj/kernel.asm	/^c0110ebf:	89 e5                	mov    %esp,%ebp$/;"	l
c0110ec1	obj/kernel.asm	/^c0110ec1:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0110ec4	obj/kernel.asm	/^c0110ec4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110ec7	obj/kernel.asm	/^c0110ec7:	83 c0 1c             	add    $0x1c,%eax$/;"	l
c0110eca	obj/kernel.asm	/^c0110eca:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0110ecd	obj/kernel.asm	/^c0110ecd:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0110ed0	obj/kernel.asm	/^c0110ed0:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110ed3	obj/kernel.asm	/^c0110ed3:	8b 55 fc             	mov    -0x4(%ebp),%edx$/;"	l
c0110ed6	obj/kernel.asm	/^c0110ed6:	8b 12                	mov    (%edx),%edx$/;"	l
c0110ed8	obj/kernel.asm	/^c0110ed8:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c0110edb	obj/kernel.asm	/^c0110edb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110ede	obj/kernel.asm	/^c0110ede:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0110ee1	obj/kernel.asm	/^c0110ee1:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0110ee4	obj/kernel.asm	/^c0110ee4:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0110ee7	obj/kernel.asm	/^c0110ee7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110eea	obj/kernel.asm	/^c0110eea:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c0110eed	obj/kernel.asm	/^c0110eed:	89 10                	mov    %edx,(%eax)$/;"	l
c0110eef	obj/kernel.asm	/^c0110eef:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110ef2	obj/kernel.asm	/^c0110ef2:	83 c0 24             	add    $0x24,%eax$/;"	l
c0110ef5	obj/kernel.asm	/^c0110ef5:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0110ef8	obj/kernel.asm	/^c0110ef8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0110efb	obj/kernel.asm	/^c0110efb:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110efe	obj/kernel.asm	/^c0110efe:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0110f01	obj/kernel.asm	/^c0110f01:	8b 12                	mov    (%edx),%edx$/;"	l
c0110f03	obj/kernel.asm	/^c0110f03:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0110f06	obj/kernel.asm	/^c0110f06:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0110f09	obj/kernel.asm	/^c0110f09:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0110f0c	obj/kernel.asm	/^c0110f0c:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0110f0f	obj/kernel.asm	/^c0110f0f:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0110f12	obj/kernel.asm	/^c0110f12:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0110f15	obj/kernel.asm	/^c0110f15:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0110f18	obj/kernel.asm	/^c0110f18:	89 10                	mov    %edx,(%eax)$/;"	l
c0110f1a	obj/kernel.asm	/^c0110f1a:	c9                   	leave  $/;"	l
c0110f1b	obj/kernel.asm	/^c0110f1b:	c3                   	ret    $/;"	l
c0110f1c	obj/kernel.asm	/^c0110f1c <sfs_block_inuse>:$/;"	l
c0110f1c	obj/kernel.asm	/^c0110f1c:	55                   	push   %ebp$/;"	l
c0110f1d	obj/kernel.asm	/^c0110f1d:	89 e5                	mov    %esp,%ebp$/;"	l
c0110f1f	obj/kernel.asm	/^c0110f1f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110f22	obj/kernel.asm	/^c0110f22:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0110f26	obj/kernel.asm	/^c0110f26:	74 2a                	je     c0110f52 <sfs_block_inuse+0x36>$/;"	l
c0110f28	obj/kernel.asm	/^c0110f28:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110f2b	obj/kernel.asm	/^c0110f2b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110f2e	obj/kernel.asm	/^c0110f2e:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0110f31	obj/kernel.asm	/^c0110f31:	76 1f                	jbe    c0110f52 <sfs_block_inuse+0x36>$/;"	l
c0110f33	obj/kernel.asm	/^c0110f33:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110f36	obj/kernel.asm	/^c0110f36:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0110f39	obj/kernel.asm	/^c0110f39:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110f3c	obj/kernel.asm	/^c0110f3c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0110f3f	obj/kernel.asm	/^c0110f3f:	50                   	push   %eax$/;"	l
c0110f40	obj/kernel.asm	/^c0110f40:	e8 7d 20 00 00       	call   c0112fc2 <bitmap_test>$/;"	l
c0110f45	obj/kernel.asm	/^c0110f45:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110f48	obj/kernel.asm	/^c0110f48:	85 c0                	test   %eax,%eax$/;"	l
c0110f4a	obj/kernel.asm	/^c0110f4a:	0f 94 c0             	sete   %al$/;"	l
c0110f4d	obj/kernel.asm	/^c0110f4d:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0110f50	obj/kernel.asm	/^c0110f50:	eb 1e                	jmp    c0110f70 <sfs_block_inuse+0x54>$/;"	l
c0110f52	obj/kernel.asm	/^c0110f52:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110f55	obj/kernel.asm	/^c0110f55:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0110f58	obj/kernel.asm	/^c0110f58:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0110f5b	obj/kernel.asm	/^c0110f5b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0110f5e	obj/kernel.asm	/^c0110f5e:	50                   	push   %eax$/;"	l
c0110f5f	obj/kernel.asm	/^c0110f5f:	68 70 7e 11 c0       	push   $0xc0117e70$/;"	l
c0110f64	obj/kernel.asm	/^c0110f64:	6a 53                	push   $0x53$/;"	l
c0110f66	obj/kernel.asm	/^c0110f66:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0110f6b	obj/kernel.asm	/^c0110f6b:	e8 5f f5 fe ff       	call   c01004cf <__panic>$/;"	l
c0110f70	obj/kernel.asm	/^c0110f70:	c9                   	leave  $/;"	l
c0110f71	obj/kernel.asm	/^c0110f71:	c3                   	ret    $/;"	l
c0110f72	obj/kernel.asm	/^c0110f72 <sfs_block_alloc>:$/;"	l
c0110f72	obj/kernel.asm	/^c0110f72:	55                   	push   %ebp$/;"	l
c0110f73	obj/kernel.asm	/^c0110f73:	89 e5                	mov    %esp,%ebp$/;"	l
c0110f75	obj/kernel.asm	/^c0110f75:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0110f78	obj/kernel.asm	/^c0110f78:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110f7b	obj/kernel.asm	/^c0110f7b:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0110f7e	obj/kernel.asm	/^c0110f7e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110f81	obj/kernel.asm	/^c0110f81:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0110f84	obj/kernel.asm	/^c0110f84:	50                   	push   %eax$/;"	l
c0110f85	obj/kernel.asm	/^c0110f85:	e8 f2 1e 00 00       	call   c0112e7c <bitmap_alloc>$/;"	l
c0110f8a	obj/kernel.asm	/^c0110f8a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110f8d	obj/kernel.asm	/^c0110f8d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0110f90	obj/kernel.asm	/^c0110f90:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0110f94	obj/kernel.asm	/^c0110f94:	74 05                	je     c0110f9b <sfs_block_alloc+0x29>$/;"	l
c0110f96	obj/kernel.asm	/^c0110f96:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0110f99	obj/kernel.asm	/^c0110f99:	eb 7d                	jmp    c0111018 <sfs_block_alloc+0xa6>$/;"	l
c0110f9b	obj/kernel.asm	/^c0110f9b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110f9e	obj/kernel.asm	/^c0110f9e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0110fa1	obj/kernel.asm	/^c0110fa1:	85 c0                	test   %eax,%eax$/;"	l
c0110fa3	obj/kernel.asm	/^c0110fa3:	75 16                	jne    c0110fbb <sfs_block_alloc+0x49>$/;"	l
c0110fa5	obj/kernel.asm	/^c0110fa5:	68 a2 7e 11 c0       	push   $0xc0117ea2$/;"	l
c0110faa	obj/kernel.asm	/^c0110faa:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0110faf	obj/kernel.asm	/^c0110faf:	6a 5f                	push   $0x5f$/;"	l
c0110fb1	obj/kernel.asm	/^c0110fb1:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0110fb6	obj/kernel.asm	/^c0110fb6:	e8 14 f5 fe ff       	call   c01004cf <__panic>$/;"	l
c0110fbb	obj/kernel.asm	/^c0110fbb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110fbe	obj/kernel.asm	/^c0110fbe:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0110fc1	obj/kernel.asm	/^c0110fc1:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0110fc4	obj/kernel.asm	/^c0110fc4:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110fc7	obj/kernel.asm	/^c0110fc7:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0110fca	obj/kernel.asm	/^c0110fca:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0110fcd	obj/kernel.asm	/^c0110fcd:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c0110fd4	obj/kernel.asm	/^c0110fd4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0110fd7	obj/kernel.asm	/^c0110fd7:	8b 00                	mov    (%eax),%eax$/;"	l
c0110fd9	obj/kernel.asm	/^c0110fd9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0110fdc	obj/kernel.asm	/^c0110fdc:	50                   	push   %eax$/;"	l
c0110fdd	obj/kernel.asm	/^c0110fdd:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0110fe0	obj/kernel.asm	/^c0110fe0:	e8 37 ff ff ff       	call   c0110f1c <sfs_block_inuse>$/;"	l
c0110fe5	obj/kernel.asm	/^c0110fe5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0110fe8	obj/kernel.asm	/^c0110fe8:	85 c0                	test   %eax,%eax$/;"	l
c0110fea	obj/kernel.asm	/^c0110fea:	75 16                	jne    c0111002 <sfs_block_alloc+0x90>$/;"	l
c0110fec	obj/kernel.asm	/^c0110fec:	68 d4 7e 11 c0       	push   $0xc0117ed4$/;"	l
c0110ff1	obj/kernel.asm	/^c0110ff1:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0110ff6	obj/kernel.asm	/^c0110ff6:	6a 61                	push   $0x61$/;"	l
c0110ff8	obj/kernel.asm	/^c0110ff8:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0110ffd	obj/kernel.asm	/^c0110ffd:	e8 cd f4 fe ff       	call   c01004cf <__panic>$/;"	l
c0111002	obj/kernel.asm	/^c0111002:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111005	obj/kernel.asm	/^c0111005:	8b 00                	mov    (%eax),%eax$/;"	l
c0111007	obj/kernel.asm	/^c0111007:	83 ec 04             	sub    $0x4,%esp$/;"	l
c011100a	obj/kernel.asm	/^c011100a:	6a 01                	push   $0x1$/;"	l
c011100c	obj/kernel.asm	/^c011100c:	50                   	push   %eax$/;"	l
c011100d	obj/kernel.asm	/^c011100d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111010	obj/kernel.asm	/^c0111010:	e8 a9 23 00 00       	call   c01133be <sfs_clear_block>$/;"	l
c0111015	obj/kernel.asm	/^c0111015:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111018	obj/kernel.asm	/^c0111018:	c9                   	leave  $/;"	l
c0111019	obj/kernel.asm	/^c0111019:	c3                   	ret    $/;"	l
c011101a	obj/kernel.asm	/^c011101a <sfs_block_free>:$/;"	l
c011101a	obj/kernel.asm	/^c011101a:	55                   	push   %ebp$/;"	l
c011101b	obj/kernel.asm	/^c011101b:	89 e5                	mov    %esp,%ebp$/;"	l
c011101d	obj/kernel.asm	/^c011101d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111020	obj/kernel.asm	/^c0111020:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111023	obj/kernel.asm	/^c0111023:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111026	obj/kernel.asm	/^c0111026:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111029	obj/kernel.asm	/^c0111029:	e8 ee fe ff ff       	call   c0110f1c <sfs_block_inuse>$/;"	l
c011102e	obj/kernel.asm	/^c011102e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111031	obj/kernel.asm	/^c0111031:	85 c0                	test   %eax,%eax$/;"	l
c0111033	obj/kernel.asm	/^c0111033:	75 16                	jne    c011104b <sfs_block_free+0x31>$/;"	l
c0111035	obj/kernel.asm	/^c0111035:	68 f5 7e 11 c0       	push   $0xc0117ef5$/;"	l
c011103a	obj/kernel.asm	/^c011103a:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c011103f	obj/kernel.asm	/^c011103f:	6a 6a                	push   $0x6a$/;"	l
c0111041	obj/kernel.asm	/^c0111041:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0111046	obj/kernel.asm	/^c0111046:	e8 84 f4 fe ff       	call   c01004cf <__panic>$/;"	l
c011104b	obj/kernel.asm	/^c011104b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011104e	obj/kernel.asm	/^c011104e:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0111051	obj/kernel.asm	/^c0111051:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111054	obj/kernel.asm	/^c0111054:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111057	obj/kernel.asm	/^c0111057:	50                   	push   %eax$/;"	l
c0111058	obj/kernel.asm	/^c0111058:	e8 8d 1f 00 00       	call   c0112fea <bitmap_free>$/;"	l
c011105d	obj/kernel.asm	/^c011105d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111060	obj/kernel.asm	/^c0111060:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111063	obj/kernel.asm	/^c0111063:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111066	obj/kernel.asm	/^c0111066:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0111069	obj/kernel.asm	/^c0111069:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011106c	obj/kernel.asm	/^c011106c:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c011106f	obj/kernel.asm	/^c011106f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111072	obj/kernel.asm	/^c0111072:	c7 40 34 01 00 00 00 	movl   $0x1,0x34(%eax)$/;"	l
c0111079	obj/kernel.asm	/^c0111079:	c9                   	leave  $/;"	l
c011107a	obj/kernel.asm	/^c011107a:	c3                   	ret    $/;"	l
c011107b	obj/kernel.asm	/^c011107b <sfs_create_inode>:$/;"	l
c011107b	obj/kernel.asm	/^c011107b:	55                   	push   %ebp$/;"	l
c011107c	obj/kernel.asm	/^c011107c:	89 e5                	mov    %esp,%ebp$/;"	l
c011107e	obj/kernel.asm	/^c011107e:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0111081	obj/kernel.asm	/^c0111081:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111084	obj/kernel.asm	/^c0111084:	68 35 12 00 00       	push   $0x1235$/;"	l
c0111089	obj/kernel.asm	/^c0111089:	e8 6e df ff ff       	call   c010effc <__alloc_inode>$/;"	l
c011108e	obj/kernel.asm	/^c011108e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111091	obj/kernel.asm	/^c0111091:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111094	obj/kernel.asm	/^c0111094:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111098	obj/kernel.asm	/^c0111098:	0f 84 a5 00 00 00    	je     c0111143 <sfs_create_inode+0xc8>$/;"	l
c011109e	obj/kernel.asm	/^c011109e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01110a1	obj/kernel.asm	/^c01110a1:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c01110a5	obj/kernel.asm	/^c01110a5:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01110a8	obj/kernel.asm	/^c01110a8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01110ab	obj/kernel.asm	/^c01110ab:	50                   	push   %eax$/;"	l
c01110ac	obj/kernel.asm	/^c01110ac:	e8 dc fc ff ff       	call   c0110d8d <sfs_get_ops>$/;"	l
c01110b1	obj/kernel.asm	/^c01110b1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01110b4	obj/kernel.asm	/^c01110b4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01110b7	obj/kernel.asm	/^c01110b7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01110ba	obj/kernel.asm	/^c01110ba:	50                   	push   %eax$/;"	l
c01110bb	obj/kernel.asm	/^c01110bb:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01110be	obj/kernel.asm	/^c01110be:	e8 63 df ff ff       	call   c010f026 <inode_init>$/;"	l
c01110c3	obj/kernel.asm	/^c01110c3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01110c6	obj/kernel.asm	/^c01110c6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01110c9	obj/kernel.asm	/^c01110c9:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01110cc	obj/kernel.asm	/^c01110cc:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01110d0	obj/kernel.asm	/^c01110d0:	74 0d                	je     c01110df <sfs_create_inode+0x64>$/;"	l
c01110d2	obj/kernel.asm	/^c01110d2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01110d5	obj/kernel.asm	/^c01110d5:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01110d8	obj/kernel.asm	/^c01110d8:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c01110dd	obj/kernel.asm	/^c01110dd:	74 16                	je     c01110f5 <sfs_create_inode+0x7a>$/;"	l
c01110df	obj/kernel.asm	/^c01110df:	68 10 7f 11 c0       	push   $0xc0117f10$/;"	l
c01110e4	obj/kernel.asm	/^c01110e4:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c01110e9	obj/kernel.asm	/^c01110e9:	6a 77                	push   $0x77$/;"	l
c01110eb	obj/kernel.asm	/^c01110eb:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c01110f0	obj/kernel.asm	/^c01110f0:	e8 da f3 fe ff       	call   c01004cf <__panic>$/;"	l
c01110f5	obj/kernel.asm	/^c01110f5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01110f8	obj/kernel.asm	/^c01110f8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01110fb	obj/kernel.asm	/^c01110fb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01110fe	obj/kernel.asm	/^c01110fe:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0111101	obj/kernel.asm	/^c0111101:	89 10                	mov    %edx,(%eax)$/;"	l
c0111103	obj/kernel.asm	/^c0111103:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111106	obj/kernel.asm	/^c0111106:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c0111109	obj/kernel.asm	/^c0111109:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c011110c	obj/kernel.asm	/^c011110c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011110f	obj/kernel.asm	/^c011110f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0111116	obj/kernel.asm	/^c0111116:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111119	obj/kernel.asm	/^c0111119:	c7 40 0c 01 00 00 00 	movl   $0x1,0xc(%eax)$/;"	l
c0111120	obj/kernel.asm	/^c0111120:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111123	obj/kernel.asm	/^c0111123:	83 c0 10             	add    $0x10,%eax$/;"	l
c0111126	obj/kernel.asm	/^c0111126:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111129	obj/kernel.asm	/^c0111129:	6a 01                	push   $0x1$/;"	l
c011112b	obj/kernel.asm	/^c011112b:	50                   	push   %eax$/;"	l
c011112c	obj/kernel.asm	/^c011112c:	e8 4c 82 ff ff       	call   c010937d <sem_init>$/;"	l
c0111131	obj/kernel.asm	/^c0111131:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111134	obj/kernel.asm	/^c0111134:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0111137	obj/kernel.asm	/^c0111137:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c011113a	obj/kernel.asm	/^c011113a:	89 10                	mov    %edx,(%eax)$/;"	l
c011113c	obj/kernel.asm	/^c011113c:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111141	obj/kernel.asm	/^c0111141:	eb 05                	jmp    c0111148 <sfs_create_inode+0xcd>$/;"	l
c0111143	obj/kernel.asm	/^c0111143:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0111148	obj/kernel.asm	/^c0111148:	c9                   	leave  $/;"	l
c0111149	obj/kernel.asm	/^c0111149:	c3                   	ret    $/;"	l
c011114a	obj/kernel.asm	/^c011114a <lookup_sfs_nolock>:$/;"	l
c011114a	obj/kernel.asm	/^c011114a:	55                   	push   %ebp$/;"	l
c011114b	obj/kernel.asm	/^c011114b:	89 e5                	mov    %esp,%ebp$/;"	l
c011114d	obj/kernel.asm	/^c011114d:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111150	obj/kernel.asm	/^c0111150:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111153	obj/kernel.asm	/^c0111153:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111156	obj/kernel.asm	/^c0111156:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111159	obj/kernel.asm	/^c0111159:	e8 70 fc ff ff       	call   c0110dce <sfs_hash_list>$/;"	l
c011115e	obj/kernel.asm	/^c011115e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111161	obj/kernel.asm	/^c0111161:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111164	obj/kernel.asm	/^c0111164:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111167	obj/kernel.asm	/^c0111167:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011116a	obj/kernel.asm	/^c011116a:	eb 41                	jmp    c01111ad <lookup_sfs_nolock+0x63>$/;"	l
c011116c	obj/kernel.asm	/^c011116c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011116f	obj/kernel.asm	/^c011116f:	83 e8 24             	sub    $0x24,%eax$/;"	l
c0111172	obj/kernel.asm	/^c0111172:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111175	obj/kernel.asm	/^c0111175:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111178	obj/kernel.asm	/^c0111178:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011117b	obj/kernel.asm	/^c011117b:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c011117e	obj/kernel.asm	/^c011117e:	75 2d                	jne    c01111ad <lookup_sfs_nolock+0x63>$/;"	l
c0111180	obj/kernel.asm	/^c0111180:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111183	obj/kernel.asm	/^c0111183:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111186	obj/kernel.asm	/^c0111186:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111189	obj/kernel.asm	/^c0111189:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c011118c	obj/kernel.asm	/^c011118c:	e8 34 df ff ff       	call   c010f0c5 <inode_ref_inc>$/;"	l
c0111191	obj/kernel.asm	/^c0111191:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111194	obj/kernel.asm	/^c0111194:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c0111197	obj/kernel.asm	/^c0111197:	75 0f                	jne    c01111a8 <lookup_sfs_nolock+0x5e>$/;"	l
c0111199	obj/kernel.asm	/^c0111199:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011119c	obj/kernel.asm	/^c011119c:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c011119f	obj/kernel.asm	/^c011119f:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01111a2	obj/kernel.asm	/^c01111a2:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01111a5	obj/kernel.asm	/^c01111a5:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01111a8	obj/kernel.asm	/^c01111a8:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01111ab	obj/kernel.asm	/^c01111ab:	eb 1c                	jmp    c01111c9 <lookup_sfs_nolock+0x7f>$/;"	l
c01111ad	obj/kernel.asm	/^c01111ad:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01111b0	obj/kernel.asm	/^c01111b0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01111b3	obj/kernel.asm	/^c01111b3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01111b6	obj/kernel.asm	/^c01111b6:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c01111b9	obj/kernel.asm	/^c01111b9:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01111bc	obj/kernel.asm	/^c01111bc:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01111bf	obj/kernel.asm	/^c01111bf:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01111c2	obj/kernel.asm	/^c01111c2:	75 a8                	jne    c011116c <lookup_sfs_nolock+0x22>$/;"	l
c01111c4	obj/kernel.asm	/^c01111c4:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01111c9	obj/kernel.asm	/^c01111c9:	c9                   	leave  $/;"	l
c01111ca	obj/kernel.asm	/^c01111ca:	c3                   	ret    $/;"	l
c01111cb	obj/kernel.asm	/^c01111cb <sfs_load_inode>:$/;"	l
c01111cb	obj/kernel.asm	/^c01111cb:	55                   	push   %ebp$/;"	l
c01111cc	obj/kernel.asm	/^c01111cc:	89 e5                	mov    %esp,%ebp$/;"	l
c01111ce	obj/kernel.asm	/^c01111ce:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01111d1	obj/kernel.asm	/^c01111d1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01111d4	obj/kernel.asm	/^c01111d4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01111d7	obj/kernel.asm	/^c01111d7:	e8 fd f2 ff ff       	call   c01104d9 <lock_sfs_fs>$/;"	l
c01111dc	obj/kernel.asm	/^c01111dc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01111df	obj/kernel.asm	/^c01111df:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01111e2	obj/kernel.asm	/^c01111e2:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01111e5	obj/kernel.asm	/^c01111e5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01111e8	obj/kernel.asm	/^c01111e8:	e8 5d ff ff ff       	call   c011114a <lookup_sfs_nolock>$/;"	l
c01111ed	obj/kernel.asm	/^c01111ed:	83 c4 10             	add    $0x10,%esp$/;"	l
c01111f0	obj/kernel.asm	/^c01111f0:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01111f3	obj/kernel.asm	/^c01111f3:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01111f6	obj/kernel.asm	/^c01111f6:	85 c0                	test   %eax,%eax$/;"	l
c01111f8	obj/kernel.asm	/^c01111f8:	74 05                	je     c01111ff <sfs_load_inode+0x34>$/;"	l
c01111fa	obj/kernel.asm	/^c01111fa:	e9 ff 00 00 00       	jmp    c01112fe <sfs_load_inode+0x133>$/;"	l
c01111ff	obj/kernel.asm	/^c01111ff:	c7 45 f4 fc ff ff ff 	movl   $0xfffffffc,-0xc(%ebp)$/;"	l
c0111206	obj/kernel.asm	/^c0111206:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111209	obj/kernel.asm	/^c0111209:	6a 40                	push   $0x40$/;"	l
c011120b	obj/kernel.asm	/^c011120b:	e8 e6 61 ff ff       	call   c01073f6 <kmalloc>$/;"	l
c0111210	obj/kernel.asm	/^c0111210:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111213	obj/kernel.asm	/^c0111213:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111216	obj/kernel.asm	/^c0111216:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011121a	obj/kernel.asm	/^c011121a:	75 05                	jne    c0111221 <sfs_load_inode+0x56>$/;"	l
c011121c	obj/kernel.asm	/^c011121c:	e9 08 01 00 00       	jmp    c0111329 <sfs_load_inode+0x15e>$/;"	l
c0111221	obj/kernel.asm	/^c0111221:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111224	obj/kernel.asm	/^c0111224:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0111227	obj/kernel.asm	/^c0111227:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011122a	obj/kernel.asm	/^c011122a:	e8 ed fc ff ff       	call   c0110f1c <sfs_block_inuse>$/;"	l
c011122f	obj/kernel.asm	/^c011122f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111232	obj/kernel.asm	/^c0111232:	85 c0                	test   %eax,%eax$/;"	l
c0111234	obj/kernel.asm	/^c0111234:	75 19                	jne    c011124f <sfs_load_inode+0x84>$/;"	l
c0111236	obj/kernel.asm	/^c0111236:	68 f5 7e 11 c0       	push   $0xc0117ef5$/;"	l
c011123b	obj/kernel.asm	/^c011123b:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0111240	obj/kernel.asm	/^c0111240:	68 a8 00 00 00       	push   $0xa8$/;"	l
c0111245	obj/kernel.asm	/^c0111245:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c011124a	obj/kernel.asm	/^c011124a:	e8 80 f2 fe ff       	call   c01004cf <__panic>$/;"	l
c011124f	obj/kernel.asm	/^c011124f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111252	obj/kernel.asm	/^c0111252:	6a 00                	push   $0x0$/;"	l
c0111254	obj/kernel.asm	/^c0111254:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0111257	obj/kernel.asm	/^c0111257:	6a 40                	push   $0x40$/;"	l
c0111259	obj/kernel.asm	/^c0111259:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c011125c	obj/kernel.asm	/^c011125c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011125f	obj/kernel.asm	/^c011125f:	e8 3e 1f 00 00       	call   c01131a2 <sfs_rbuf>$/;"	l
c0111264	obj/kernel.asm	/^c0111264:	83 c4 20             	add    $0x20,%esp$/;"	l
c0111267	obj/kernel.asm	/^c0111267:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011126a	obj/kernel.asm	/^c011126a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011126e	obj/kernel.asm	/^c011126e:	74 05                	je     c0111275 <sfs_load_inode+0xaa>$/;"	l
c0111270	obj/kernel.asm	/^c0111270:	e9 a6 00 00 00       	jmp    c011131b <sfs_load_inode+0x150>$/;"	l
c0111275	obj/kernel.asm	/^c0111275:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111278	obj/kernel.asm	/^c0111278:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c011127c	obj/kernel.asm	/^c011127c:	66 85 c0             	test   %ax,%ax$/;"	l
c011127f	obj/kernel.asm	/^c011127f:	75 19                	jne    c011129a <sfs_load_inode+0xcf>$/;"	l
c0111281	obj/kernel.asm	/^c0111281:	68 46 7f 11 c0       	push   $0xc0117f46$/;"	l
c0111286	obj/kernel.asm	/^c0111286:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c011128b	obj/kernel.asm	/^c011128b:	68 ad 00 00 00       	push   $0xad$/;"	l
c0111290	obj/kernel.asm	/^c0111290:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0111295	obj/kernel.asm	/^c0111295:	e8 35 f2 fe ff       	call   c01004cf <__panic>$/;"	l
c011129a	obj/kernel.asm	/^c011129a:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c011129d	obj/kernel.asm	/^c011129d:	50                   	push   %eax$/;"	l
c011129e	obj/kernel.asm	/^c011129e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01112a1	obj/kernel.asm	/^c01112a1:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01112a4	obj/kernel.asm	/^c01112a4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01112a7	obj/kernel.asm	/^c01112a7:	e8 cf fd ff ff       	call   c011107b <sfs_create_inode>$/;"	l
c01112ac	obj/kernel.asm	/^c01112ac:	83 c4 10             	add    $0x10,%esp$/;"	l
c01112af	obj/kernel.asm	/^c01112af:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01112b2	obj/kernel.asm	/^c01112b2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01112b6	obj/kernel.asm	/^c01112b6:	74 02                	je     c01112ba <sfs_load_inode+0xef>$/;"	l
c01112b8	obj/kernel.asm	/^c01112b8:	eb 61                	jmp    c011131b <sfs_load_inode+0x150>$/;"	l
c01112ba	obj/kernel.asm	/^c01112ba:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01112bd	obj/kernel.asm	/^c01112bd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01112c0	obj/kernel.asm	/^c01112c0:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01112c4	obj/kernel.asm	/^c01112c4:	74 0d                	je     c01112d3 <sfs_load_inode+0x108>$/;"	l
c01112c6	obj/kernel.asm	/^c01112c6:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01112c9	obj/kernel.asm	/^c01112c9:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01112cc	obj/kernel.asm	/^c01112cc:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c01112d1	obj/kernel.asm	/^c01112d1:	74 19                	je     c01112ec <sfs_load_inode+0x121>$/;"	l
c01112d3	obj/kernel.asm	/^c01112d3:	68 10 7f 11 c0       	push   $0xc0117f10$/;"	l
c01112d8	obj/kernel.asm	/^c01112d8:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c01112dd	obj/kernel.asm	/^c01112dd:	68 b1 00 00 00       	push   $0xb1$/;"	l
c01112e2	obj/kernel.asm	/^c01112e2:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c01112e7	obj/kernel.asm	/^c01112e7:	e8 e3 f1 fe ff       	call   c01004cf <__panic>$/;"	l
c01112ec	obj/kernel.asm	/^c01112ec:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01112ef	obj/kernel.asm	/^c01112ef:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01112f2	obj/kernel.asm	/^c01112f2:	50                   	push   %eax$/;"	l
c01112f3	obj/kernel.asm	/^c01112f3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01112f6	obj/kernel.asm	/^c01112f6:	e8 fa fa ff ff       	call   c0110df5 <sfs_set_links>$/;"	l
c01112fb	obj/kernel.asm	/^c01112fb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01112fe	obj/kernel.asm	/^c01112fe:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111301	obj/kernel.asm	/^c0111301:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111304	obj/kernel.asm	/^c0111304:	e8 04 f2 ff ff       	call   c011050d <unlock_sfs_fs>$/;"	l
c0111309	obj/kernel.asm	/^c0111309:	83 c4 10             	add    $0x10,%esp$/;"	l
c011130c	obj/kernel.asm	/^c011130c:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c011130f	obj/kernel.asm	/^c011130f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111312	obj/kernel.asm	/^c0111312:	89 10                	mov    %edx,(%eax)$/;"	l
c0111314	obj/kernel.asm	/^c0111314:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111319	obj/kernel.asm	/^c0111319:	eb 1f                	jmp    c011133a <sfs_load_inode+0x16f>$/;"	l
c011131b	obj/kernel.asm	/^c011131b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011131e	obj/kernel.asm	/^c011131e:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0111321	obj/kernel.asm	/^c0111321:	e8 e8 60 ff ff       	call   c010740e <kfree>$/;"	l
c0111326	obj/kernel.asm	/^c0111326:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111329	obj/kernel.asm	/^c0111329:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011132c	obj/kernel.asm	/^c011132c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011132f	obj/kernel.asm	/^c011132f:	e8 d9 f1 ff ff       	call   c011050d <unlock_sfs_fs>$/;"	l
c0111334	obj/kernel.asm	/^c0111334:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111337	obj/kernel.asm	/^c0111337:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011133a	obj/kernel.asm	/^c011133a:	c9                   	leave  $/;"	l
c011133b	obj/kernel.asm	/^c011133b:	c3                   	ret    $/;"	l
c011133c	obj/kernel.asm	/^c011133c <sfs_bmap_get_sub_nolock>:$/;"	l
c011133c	obj/kernel.asm	/^c011133c:	55                   	push   %ebp$/;"	l
c011133d	obj/kernel.asm	/^c011133d:	89 e5                	mov    %esp,%ebp$/;"	l
c011133f	obj/kernel.asm	/^c011133f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0111342	obj/kernel.asm	/^c0111342:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c0111349	obj/kernel.asm	/^c0111349:	76 19                	jbe    c0111364 <sfs_bmap_get_sub_nolock+0x28>$/;"	l
c011134b	obj/kernel.asm	/^c011134b:	68 57 7f 11 c0       	push   $0xc0117f57$/;"	l
c0111350	obj/kernel.asm	/^c0111350:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0111355	obj/kernel.asm	/^c0111355:	68 ca 00 00 00       	push   $0xca$/;"	l
c011135a	obj/kernel.asm	/^c011135a:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c011135f	obj/kernel.asm	/^c011135f:	e8 6b f1 fe ff       	call   c01004cf <__panic>$/;"	l
c0111364	obj/kernel.asm	/^c0111364:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c011136b	obj/kernel.asm	/^c011136b:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011136e	obj/kernel.asm	/^c011136e:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0111371	obj/kernel.asm	/^c0111371:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111374	obj/kernel.asm	/^c0111374:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111377	obj/kernel.asm	/^c0111377:	8b 00                	mov    (%eax),%eax$/;"	l
c0111379	obj/kernel.asm	/^c0111379:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011137c	obj/kernel.asm	/^c011137c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011137f	obj/kernel.asm	/^c011137f:	85 c0                	test   %eax,%eax$/;"	l
c0111381	obj/kernel.asm	/^c0111381:	74 43                	je     c01113c6 <sfs_bmap_get_sub_nolock+0x8a>$/;"	l
c0111383	obj/kernel.asm	/^c0111383:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111386	obj/kernel.asm	/^c0111386:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111389	obj/kernel.asm	/^c0111389:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c011138c	obj/kernel.asm	/^c011138c:	50                   	push   %eax$/;"	l
c011138d	obj/kernel.asm	/^c011138d:	6a 04                	push   $0x4$/;"	l
c011138f	obj/kernel.asm	/^c011138f:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c0111392	obj/kernel.asm	/^c0111392:	50                   	push   %eax$/;"	l
c0111393	obj/kernel.asm	/^c0111393:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111396	obj/kernel.asm	/^c0111396:	e8 07 1e 00 00       	call   c01131a2 <sfs_rbuf>$/;"	l
c011139b	obj/kernel.asm	/^c011139b:	83 c4 20             	add    $0x20,%esp$/;"	l
c011139e	obj/kernel.asm	/^c011139e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01113a1	obj/kernel.asm	/^c01113a1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01113a5	obj/kernel.asm	/^c01113a5:	74 08                	je     c01113af <sfs_bmap_get_sub_nolock+0x73>$/;"	l
c01113a7	obj/kernel.asm	/^c01113a7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01113aa	obj/kernel.asm	/^c01113aa:	e9 db 00 00 00       	jmp    c011148a <sfs_bmap_get_sub_nolock+0x14e>$/;"	l
c01113af	obj/kernel.asm	/^c01113af:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01113b2	obj/kernel.asm	/^c01113b2:	85 c0                	test   %eax,%eax$/;"	l
c01113b4	obj/kernel.asm	/^c01113b4:	0f 85 8c 00 00 00    	jne    c0111446 <sfs_bmap_get_sub_nolock+0x10a>$/;"	l
c01113ba	obj/kernel.asm	/^c01113ba:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01113be	obj/kernel.asm	/^c01113be:	0f 84 82 00 00 00    	je     c0111446 <sfs_bmap_get_sub_nolock+0x10a>$/;"	l
c01113c4	obj/kernel.asm	/^c01113c4:	eb 2b                	jmp    c01113f1 <sfs_bmap_get_sub_nolock+0xb5>$/;"	l
c01113c6	obj/kernel.asm	/^c01113c6:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01113ca	obj/kernel.asm	/^c01113ca:	75 02                	jne    c01113ce <sfs_bmap_get_sub_nolock+0x92>$/;"	l
c01113cc	obj/kernel.asm	/^c01113cc:	eb 78                	jmp    c0111446 <sfs_bmap_get_sub_nolock+0x10a>$/;"	l
c01113ce	obj/kernel.asm	/^c01113ce:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01113d1	obj/kernel.asm	/^c01113d1:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c01113d4	obj/kernel.asm	/^c01113d4:	50                   	push   %eax$/;"	l
c01113d5	obj/kernel.asm	/^c01113d5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01113d8	obj/kernel.asm	/^c01113d8:	e8 95 fb ff ff       	call   c0110f72 <sfs_block_alloc>$/;"	l
c01113dd	obj/kernel.asm	/^c01113dd:	83 c4 10             	add    $0x10,%esp$/;"	l
c01113e0	obj/kernel.asm	/^c01113e0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01113e3	obj/kernel.asm	/^c01113e3:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01113e7	obj/kernel.asm	/^c01113e7:	74 08                	je     c01113f1 <sfs_bmap_get_sub_nolock+0xb5>$/;"	l
c01113e9	obj/kernel.asm	/^c01113e9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01113ec	obj/kernel.asm	/^c01113ec:	e9 99 00 00 00       	jmp    c011148a <sfs_bmap_get_sub_nolock+0x14e>$/;"	l
c01113f1	obj/kernel.asm	/^c01113f1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01113f4	obj/kernel.asm	/^c01113f4:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c01113f7	obj/kernel.asm	/^c01113f7:	50                   	push   %eax$/;"	l
c01113f8	obj/kernel.asm	/^c01113f8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01113fb	obj/kernel.asm	/^c01113fb:	e8 72 fb ff ff       	call   c0110f72 <sfs_block_alloc>$/;"	l
c0111400	obj/kernel.asm	/^c0111400:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111403	obj/kernel.asm	/^c0111403:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111406	obj/kernel.asm	/^c0111406:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011140a	obj/kernel.asm	/^c011140a:	74 02                	je     c011140e <sfs_bmap_get_sub_nolock+0xd2>$/;"	l
c011140c	obj/kernel.asm	/^c011140c:	eb 5b                	jmp    c0111469 <sfs_bmap_get_sub_nolock+0x12d>$/;"	l
c011140e	obj/kernel.asm	/^c011140e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111411	obj/kernel.asm	/^c0111411:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111414	obj/kernel.asm	/^c0111414:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0111417	obj/kernel.asm	/^c0111417:	50                   	push   %eax$/;"	l
c0111418	obj/kernel.asm	/^c0111418:	6a 04                	push   $0x4$/;"	l
c011141a	obj/kernel.asm	/^c011141a:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c011141d	obj/kernel.asm	/^c011141d:	50                   	push   %eax$/;"	l
c011141e	obj/kernel.asm	/^c011141e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111421	obj/kernel.asm	/^c0111421:	e8 19 1e 00 00       	call   c011323f <sfs_wbuf>$/;"	l
c0111426	obj/kernel.asm	/^c0111426:	83 c4 20             	add    $0x20,%esp$/;"	l
c0111429	obj/kernel.asm	/^c0111429:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011142c	obj/kernel.asm	/^c011142c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111430	obj/kernel.asm	/^c0111430:	74 14                	je     c0111446 <sfs_bmap_get_sub_nolock+0x10a>$/;"	l
c0111432	obj/kernel.asm	/^c0111432:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111435	obj/kernel.asm	/^c0111435:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111438	obj/kernel.asm	/^c0111438:	50                   	push   %eax$/;"	l
c0111439	obj/kernel.asm	/^c0111439:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011143c	obj/kernel.asm	/^c011143c:	e8 d9 fb ff ff       	call   c011101a <sfs_block_free>$/;"	l
c0111441	obj/kernel.asm	/^c0111441:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111444	obj/kernel.asm	/^c0111444:	eb 23                	jmp    c0111469 <sfs_bmap_get_sub_nolock+0x12d>$/;"	l
c0111446	obj/kernel.asm	/^c0111446:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111449	obj/kernel.asm	/^c0111449:	8b 10                	mov    (%eax),%edx$/;"	l
c011144b	obj/kernel.asm	/^c011144b:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011144e	obj/kernel.asm	/^c011144e:	39 c2                	cmp    %eax,%edx$/;"	l
c0111450	obj/kernel.asm	/^c0111450:	74 08                	je     c011145a <sfs_bmap_get_sub_nolock+0x11e>$/;"	l
c0111452	obj/kernel.asm	/^c0111452:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0111455	obj/kernel.asm	/^c0111455:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111458	obj/kernel.asm	/^c0111458:	89 10                	mov    %edx,(%eax)$/;"	l
c011145a	obj/kernel.asm	/^c011145a:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c011145d	obj/kernel.asm	/^c011145d:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0111460	obj/kernel.asm	/^c0111460:	89 10                	mov    %edx,(%eax)$/;"	l
c0111462	obj/kernel.asm	/^c0111462:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111467	obj/kernel.asm	/^c0111467:	eb 21                	jmp    c011148a <sfs_bmap_get_sub_nolock+0x14e>$/;"	l
c0111469	obj/kernel.asm	/^c0111469:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011146c	obj/kernel.asm	/^c011146c:	8b 10                	mov    (%eax),%edx$/;"	l
c011146e	obj/kernel.asm	/^c011146e:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111471	obj/kernel.asm	/^c0111471:	39 c2                	cmp    %eax,%edx$/;"	l
c0111473	obj/kernel.asm	/^c0111473:	74 12                	je     c0111487 <sfs_bmap_get_sub_nolock+0x14b>$/;"	l
c0111475	obj/kernel.asm	/^c0111475:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111478	obj/kernel.asm	/^c0111478:	83 ec 08             	sub    $0x8,%esp$/;"	l
c011147b	obj/kernel.asm	/^c011147b:	50                   	push   %eax$/;"	l
c011147c	obj/kernel.asm	/^c011147c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011147f	obj/kernel.asm	/^c011147f:	e8 96 fb ff ff       	call   c011101a <sfs_block_free>$/;"	l
c0111484	obj/kernel.asm	/^c0111484:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111487	obj/kernel.asm	/^c0111487:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011148a	obj/kernel.asm	/^c011148a:	c9                   	leave  $/;"	l
c011148b	obj/kernel.asm	/^c011148b:	c3                   	ret    $/;"	l
c011148c	obj/kernel.asm	/^c011148c <sfs_bmap_get_nolock>:$/;"	l
c011148c	obj/kernel.asm	/^c011148c:	55                   	push   %ebp$/;"	l
c011148d	obj/kernel.asm	/^c011148d:	89 e5                	mov    %esp,%ebp$/;"	l
c011148f	obj/kernel.asm	/^c011148f:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0111492	obj/kernel.asm	/^c0111492:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111495	obj/kernel.asm	/^c0111495:	8b 00                	mov    (%eax),%eax$/;"	l
c0111497	obj/kernel.asm	/^c0111497:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011149a	obj/kernel.asm	/^c011149a:	83 7d 10 0b          	cmpl   $0xb,0x10(%ebp)$/;"	l
c011149e	obj/kernel.asm	/^c011149e:	77 5e                	ja     c01114fe <sfs_bmap_get_nolock+0x72>$/;"	l
c01114a0	obj/kernel.asm	/^c01114a0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01114a3	obj/kernel.asm	/^c01114a3:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01114a6	obj/kernel.asm	/^c01114a6:	8b 44 90 0c          	mov    0xc(%eax,%edx,4),%eax$/;"	l
c01114aa	obj/kernel.asm	/^c01114aa:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01114ad	obj/kernel.asm	/^c01114ad:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01114b0	obj/kernel.asm	/^c01114b0:	85 c0                	test   %eax,%eax$/;"	l
c01114b2	obj/kernel.asm	/^c01114b2:	75 45                	jne    c01114f9 <sfs_bmap_get_nolock+0x6d>$/;"	l
c01114b4	obj/kernel.asm	/^c01114b4:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01114b8	obj/kernel.asm	/^c01114b8:	74 3f                	je     c01114f9 <sfs_bmap_get_nolock+0x6d>$/;"	l
c01114ba	obj/kernel.asm	/^c01114ba:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01114bd	obj/kernel.asm	/^c01114bd:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c01114c0	obj/kernel.asm	/^c01114c0:	50                   	push   %eax$/;"	l
c01114c1	obj/kernel.asm	/^c01114c1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01114c4	obj/kernel.asm	/^c01114c4:	e8 a9 fa ff ff       	call   c0110f72 <sfs_block_alloc>$/;"	l
c01114c9	obj/kernel.asm	/^c01114c9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01114cc	obj/kernel.asm	/^c01114cc:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01114cf	obj/kernel.asm	/^c01114cf:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01114d3	obj/kernel.asm	/^c01114d3:	74 08                	je     c01114dd <sfs_bmap_get_nolock+0x51>$/;"	l
c01114d5	obj/kernel.asm	/^c01114d5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01114d8	obj/kernel.asm	/^c01114d8:	e9 05 01 00 00       	jmp    c01115e2 <sfs_bmap_get_nolock+0x156>$/;"	l
c01114dd	obj/kernel.asm	/^c01114dd:	8b 4d e8             	mov    -0x18(%ebp),%ecx$/;"	l
c01114e0	obj/kernel.asm	/^c01114e0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01114e3	obj/kernel.asm	/^c01114e3:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01114e6	obj/kernel.asm	/^c01114e6:	89 4c 90 0c          	mov    %ecx,0xc(%eax,%edx,4)$/;"	l
c01114ea	obj/kernel.asm	/^c01114ea:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01114ed	obj/kernel.asm	/^c01114ed:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c01114f4	obj/kernel.asm	/^c01114f4:	e9 a6 00 00 00       	jmp    c011159f <sfs_bmap_get_nolock+0x113>$/;"	l
c01114f9	obj/kernel.asm	/^c01114f9:	e9 a1 00 00 00       	jmp    c011159f <sfs_bmap_get_nolock+0x113>$/;"	l
c01114fe	obj/kernel.asm	/^c01114fe:	83 6d 10 0c          	subl   $0xc,0x10(%ebp)$/;"	l
c0111502	obj/kernel.asm	/^c0111502:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c0111509	obj/kernel.asm	/^c0111509:	77 7d                	ja     c0111588 <sfs_bmap_get_nolock+0xfc>$/;"	l
c011150b	obj/kernel.asm	/^c011150b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011150e	obj/kernel.asm	/^c011150e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0111511	obj/kernel.asm	/^c0111511:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111514	obj/kernel.asm	/^c0111514:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111517	obj/kernel.asm	/^c0111517:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c011151a	obj/kernel.asm	/^c011151a:	50                   	push   %eax$/;"	l
c011151b	obj/kernel.asm	/^c011151b:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c011151e	obj/kernel.asm	/^c011151e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0111521	obj/kernel.asm	/^c0111521:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0111524	obj/kernel.asm	/^c0111524:	50                   	push   %eax$/;"	l
c0111525	obj/kernel.asm	/^c0111525:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111528	obj/kernel.asm	/^c0111528:	e8 0f fe ff ff       	call   c011133c <sfs_bmap_get_sub_nolock>$/;"	l
c011152d	obj/kernel.asm	/^c011152d:	83 c4 20             	add    $0x20,%esp$/;"	l
c0111530	obj/kernel.asm	/^c0111530:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111533	obj/kernel.asm	/^c0111533:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111537	obj/kernel.asm	/^c0111537:	74 08                	je     c0111541 <sfs_bmap_get_nolock+0xb5>$/;"	l
c0111539	obj/kernel.asm	/^c0111539:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011153c	obj/kernel.asm	/^c011153c:	e9 a1 00 00 00       	jmp    c01115e2 <sfs_bmap_get_nolock+0x156>$/;"	l
c0111541	obj/kernel.asm	/^c0111541:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111544	obj/kernel.asm	/^c0111544:	8b 50 3c             	mov    0x3c(%eax),%edx$/;"	l
c0111547	obj/kernel.asm	/^c0111547:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011154a	obj/kernel.asm	/^c011154a:	39 c2                	cmp    %eax,%edx$/;"	l
c011154c	obj/kernel.asm	/^c011154c:	74 38                	je     c0111586 <sfs_bmap_get_nolock+0xfa>$/;"	l
c011154e	obj/kernel.asm	/^c011154e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111551	obj/kernel.asm	/^c0111551:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0111554	obj/kernel.asm	/^c0111554:	85 c0                	test   %eax,%eax$/;"	l
c0111556	obj/kernel.asm	/^c0111556:	74 19                	je     c0111571 <sfs_bmap_get_nolock+0xe5>$/;"	l
c0111558	obj/kernel.asm	/^c0111558:	68 6e 7f 11 c0       	push   $0xc0117f6e$/;"	l
c011155d	obj/kernel.asm	/^c011155d:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0111562	obj/kernel.asm	/^c0111562:	68 18 01 00 00       	push   $0x118$/;"	l
c0111567	obj/kernel.asm	/^c0111567:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c011156c	obj/kernel.asm	/^c011156c:	e8 5e ef fe ff       	call   c01004cf <__panic>$/;"	l
c0111571	obj/kernel.asm	/^c0111571:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0111574	obj/kernel.asm	/^c0111574:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111577	obj/kernel.asm	/^c0111577:	89 50 3c             	mov    %edx,0x3c(%eax)$/;"	l
c011157a	obj/kernel.asm	/^c011157a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011157d	obj/kernel.asm	/^c011157d:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0111584	obj/kernel.asm	/^c0111584:	eb 19                	jmp    c011159f <sfs_bmap_get_nolock+0x113>$/;"	l
c0111586	obj/kernel.asm	/^c0111586:	eb 17                	jmp    c011159f <sfs_bmap_get_nolock+0x113>$/;"	l
c0111588	obj/kernel.asm	/^c0111588:	83 ec 04             	sub    $0x4,%esp$/;"	l
c011158b	obj/kernel.asm	/^c011158b:	68 84 7f 11 c0       	push   $0xc0117f84$/;"	l
c0111590	obj/kernel.asm	/^c0111590:	68 1e 01 00 00       	push   $0x11e$/;"	l
c0111595	obj/kernel.asm	/^c0111595:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c011159a	obj/kernel.asm	/^c011159a:	e8 30 ef fe ff       	call   c01004cf <__panic>$/;"	l
c011159f	obj/kernel.asm	/^c011159f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01115a2	obj/kernel.asm	/^c01115a2:	85 c0                	test   %eax,%eax$/;"	l
c01115a4	obj/kernel.asm	/^c01115a4:	74 2f                	je     c01115d5 <sfs_bmap_get_nolock+0x149>$/;"	l
c01115a6	obj/kernel.asm	/^c01115a6:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01115a9	obj/kernel.asm	/^c01115a9:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01115ac	obj/kernel.asm	/^c01115ac:	50                   	push   %eax$/;"	l
c01115ad	obj/kernel.asm	/^c01115ad:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01115b0	obj/kernel.asm	/^c01115b0:	e8 67 f9 ff ff       	call   c0110f1c <sfs_block_inuse>$/;"	l
c01115b5	obj/kernel.asm	/^c01115b5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01115b8	obj/kernel.asm	/^c01115b8:	85 c0                	test   %eax,%eax$/;"	l
c01115ba	obj/kernel.asm	/^c01115ba:	75 19                	jne    c01115d5 <sfs_bmap_get_nolock+0x149>$/;"	l
c01115bc	obj/kernel.asm	/^c01115bc:	68 b0 7f 11 c0       	push   $0xc0117fb0$/;"	l
c01115c1	obj/kernel.asm	/^c01115c1:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c01115c6	obj/kernel.asm	/^c01115c6:	68 21 01 00 00       	push   $0x121$/;"	l
c01115cb	obj/kernel.asm	/^c01115cb:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c01115d0	obj/kernel.asm	/^c01115d0:	e8 fa ee fe ff       	call   c01004cf <__panic>$/;"	l
c01115d5	obj/kernel.asm	/^c01115d5:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01115d8	obj/kernel.asm	/^c01115d8:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01115db	obj/kernel.asm	/^c01115db:	89 10                	mov    %edx,(%eax)$/;"	l
c01115dd	obj/kernel.asm	/^c01115dd:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01115e2	obj/kernel.asm	/^c01115e2:	c9                   	leave  $/;"	l
c01115e3	obj/kernel.asm	/^c01115e3:	c3                   	ret    $/;"	l
c01115e4	obj/kernel.asm	/^c01115e4 <sfs_bmap_free_sub_nolock>:$/;"	l
c01115e4	obj/kernel.asm	/^c01115e4:	55                   	push   %ebp$/;"	l
c01115e5	obj/kernel.asm	/^c01115e5:	89 e5                	mov    %esp,%ebp$/;"	l
c01115e7	obj/kernel.asm	/^c01115e7:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01115ea	obj/kernel.asm	/^c01115ea:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01115ed	obj/kernel.asm	/^c01115ed:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01115f0	obj/kernel.asm	/^c01115f0:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01115f3	obj/kernel.asm	/^c01115f3:	e8 24 f9 ff ff       	call   c0110f1c <sfs_block_inuse>$/;"	l
c01115f8	obj/kernel.asm	/^c01115f8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01115fb	obj/kernel.asm	/^c01115fb:	85 c0                	test   %eax,%eax$/;"	l
c01115fd	obj/kernel.asm	/^c01115fd:	74 09                	je     c0111608 <sfs_bmap_free_sub_nolock+0x24>$/;"	l
c01115ff	obj/kernel.asm	/^c01115ff:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c0111606	obj/kernel.asm	/^c0111606:	76 19                	jbe    c0111621 <sfs_bmap_free_sub_nolock+0x3d>$/;"	l
c0111608	obj/kernel.asm	/^c0111608:	68 d8 7f 11 c0       	push   $0xc0117fd8$/;"	l
c011160d	obj/kernel.asm	/^c011160d:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0111612	obj/kernel.asm	/^c0111612:	68 2b 01 00 00       	push   $0x12b$/;"	l
c0111617	obj/kernel.asm	/^c0111617:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c011161c	obj/kernel.asm	/^c011161c:	e8 ae ee fe ff       	call   c01004cf <__panic>$/;"	l
c0111621	obj/kernel.asm	/^c0111621:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0111628	obj/kernel.asm	/^c0111628:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011162b	obj/kernel.asm	/^c011162b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c011162e	obj/kernel.asm	/^c011162e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111631	obj/kernel.asm	/^c0111631:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111634	obj/kernel.asm	/^c0111634:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0111637	obj/kernel.asm	/^c0111637:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c011163a	obj/kernel.asm	/^c011163a:	6a 04                	push   $0x4$/;"	l
c011163c	obj/kernel.asm	/^c011163c:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c011163f	obj/kernel.asm	/^c011163f:	50                   	push   %eax$/;"	l
c0111640	obj/kernel.asm	/^c0111640:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111643	obj/kernel.asm	/^c0111643:	e8 5a 1b 00 00       	call   c01131a2 <sfs_rbuf>$/;"	l
c0111648	obj/kernel.asm	/^c0111648:	83 c4 20             	add    $0x20,%esp$/;"	l
c011164b	obj/kernel.asm	/^c011164b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011164e	obj/kernel.asm	/^c011164e:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111652	obj/kernel.asm	/^c0111652:	74 05                	je     c0111659 <sfs_bmap_free_sub_nolock+0x75>$/;"	l
c0111654	obj/kernel.asm	/^c0111654:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111657	obj/kernel.asm	/^c0111657:	eb 46                	jmp    c011169f <sfs_bmap_free_sub_nolock+0xbb>$/;"	l
c0111659	obj/kernel.asm	/^c0111659:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011165c	obj/kernel.asm	/^c011165c:	85 c0                	test   %eax,%eax$/;"	l
c011165e	obj/kernel.asm	/^c011165e:	74 3a                	je     c011169a <sfs_bmap_free_sub_nolock+0xb6>$/;"	l
c0111660	obj/kernel.asm	/^c0111660:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111663	obj/kernel.asm	/^c0111663:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0111666	obj/kernel.asm	/^c0111666:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111669	obj/kernel.asm	/^c0111669:	6a 04                	push   $0x4$/;"	l
c011166b	obj/kernel.asm	/^c011166b:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c011166e	obj/kernel.asm	/^c011166e:	50                   	push   %eax$/;"	l
c011166f	obj/kernel.asm	/^c011166f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111672	obj/kernel.asm	/^c0111672:	e8 c8 1b 00 00       	call   c011323f <sfs_wbuf>$/;"	l
c0111677	obj/kernel.asm	/^c0111677:	83 c4 20             	add    $0x20,%esp$/;"	l
c011167a	obj/kernel.asm	/^c011167a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011167d	obj/kernel.asm	/^c011167d:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0111681	obj/kernel.asm	/^c0111681:	74 05                	je     c0111688 <sfs_bmap_free_sub_nolock+0xa4>$/;"	l
c0111683	obj/kernel.asm	/^c0111683:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111686	obj/kernel.asm	/^c0111686:	eb 17                	jmp    c011169f <sfs_bmap_free_sub_nolock+0xbb>$/;"	l
c0111688	obj/kernel.asm	/^c0111688:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011168b	obj/kernel.asm	/^c011168b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c011168e	obj/kernel.asm	/^c011168e:	50                   	push   %eax$/;"	l
c011168f	obj/kernel.asm	/^c011168f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111692	obj/kernel.asm	/^c0111692:	e8 83 f9 ff ff       	call   c011101a <sfs_block_free>$/;"	l
c0111697	obj/kernel.asm	/^c0111697:	83 c4 10             	add    $0x10,%esp$/;"	l
c011169a	obj/kernel.asm	/^c011169a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011169f	obj/kernel.asm	/^c011169f:	c9                   	leave  $/;"	l
c01116a0	obj/kernel.asm	/^c01116a0:	c3                   	ret    $/;"	l
c01116a1	obj/kernel.asm	/^c01116a1 <sfs_bmap_free_nolock>:$/;"	l
c01116a1	obj/kernel.asm	/^c01116a1:	55                   	push   %ebp$/;"	l
c01116a2	obj/kernel.asm	/^c01116a2:	89 e5                	mov    %esp,%ebp$/;"	l
c01116a4	obj/kernel.asm	/^c01116a4:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01116a7	obj/kernel.asm	/^c01116a7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01116aa	obj/kernel.asm	/^c01116aa:	8b 00                	mov    (%eax),%eax$/;"	l
c01116ac	obj/kernel.asm	/^c01116ac:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01116af	obj/kernel.asm	/^c01116af:	83 7d 10 0b          	cmpl   $0xb,0x10(%ebp)$/;"	l
c01116b3	obj/kernel.asm	/^c01116b3:	77 43                	ja     c01116f8 <sfs_bmap_free_nolock+0x57>$/;"	l
c01116b5	obj/kernel.asm	/^c01116b5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01116b8	obj/kernel.asm	/^c01116b8:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01116bb	obj/kernel.asm	/^c01116bb:	8b 44 90 0c          	mov    0xc(%eax,%edx,4),%eax$/;"	l
c01116bf	obj/kernel.asm	/^c01116bf:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01116c2	obj/kernel.asm	/^c01116c2:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01116c6	obj/kernel.asm	/^c01116c6:	74 29                	je     c01116f1 <sfs_bmap_free_nolock+0x50>$/;"	l
c01116c8	obj/kernel.asm	/^c01116c8:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01116cb	obj/kernel.asm	/^c01116cb:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01116ce	obj/kernel.asm	/^c01116ce:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01116d1	obj/kernel.asm	/^c01116d1:	e8 44 f9 ff ff       	call   c011101a <sfs_block_free>$/;"	l
c01116d6	obj/kernel.asm	/^c01116d6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01116d9	obj/kernel.asm	/^c01116d9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01116dc	obj/kernel.asm	/^c01116dc:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01116df	obj/kernel.asm	/^c01116df:	c7 44 90 0c 00 00 00 	movl   $0x0,0xc(%eax,%edx,4)$/;"	l
c01116e6	obj/kernel.asm	/^c01116e6:	00 $/;"	l
c01116e7	obj/kernel.asm	/^c01116e7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01116ea	obj/kernel.asm	/^c01116ea:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c01116f1	obj/kernel.asm	/^c01116f1:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01116f6	obj/kernel.asm	/^c01116f6:	eb 4a                	jmp    c0111742 <sfs_bmap_free_nolock+0xa1>$/;"	l
c01116f8	obj/kernel.asm	/^c01116f8:	83 6d 10 0c          	subl   $0xc,0x10(%ebp)$/;"	l
c01116fc	obj/kernel.asm	/^c01116fc:	81 7d 10 ff 03 00 00 	cmpl   $0x3ff,0x10(%ebp)$/;"	l
c0111703	obj/kernel.asm	/^c0111703:	77 38                	ja     c011173d <sfs_bmap_free_nolock+0x9c>$/;"	l
c0111705	obj/kernel.asm	/^c0111705:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111708	obj/kernel.asm	/^c0111708:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011170b	obj/kernel.asm	/^c011170b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011170e	obj/kernel.asm	/^c011170e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0111712	obj/kernel.asm	/^c0111712:	74 22                	je     c0111736 <sfs_bmap_free_nolock+0x95>$/;"	l
c0111714	obj/kernel.asm	/^c0111714:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0111717	obj/kernel.asm	/^c0111717:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c011171a	obj/kernel.asm	/^c011171a:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c011171d	obj/kernel.asm	/^c011171d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111720	obj/kernel.asm	/^c0111720:	e8 bf fe ff ff       	call   c01115e4 <sfs_bmap_free_sub_nolock>$/;"	l
c0111725	obj/kernel.asm	/^c0111725:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111728	obj/kernel.asm	/^c0111728:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011172b	obj/kernel.asm	/^c011172b:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c011172f	obj/kernel.asm	/^c011172f:	74 05                	je     c0111736 <sfs_bmap_free_nolock+0x95>$/;"	l
c0111731	obj/kernel.asm	/^c0111731:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111734	obj/kernel.asm	/^c0111734:	eb 0c                	jmp    c0111742 <sfs_bmap_free_nolock+0xa1>$/;"	l
c0111736	obj/kernel.asm	/^c0111736:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011173b	obj/kernel.asm	/^c011173b:	eb 05                	jmp    c0111742 <sfs_bmap_free_nolock+0xa1>$/;"	l
c011173d	obj/kernel.asm	/^c011173d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111742	obj/kernel.asm	/^c0111742:	c9                   	leave  $/;"	l
c0111743	obj/kernel.asm	/^c0111743:	c3                   	ret    $/;"	l
c0111744	obj/kernel.asm	/^c0111744 <sfs_bmap_load_nolock>:$/;"	l
c0111744	obj/kernel.asm	/^c0111744:	55                   	push   %ebp$/;"	l
c0111745	obj/kernel.asm	/^c0111745:	89 e5                	mov    %esp,%ebp$/;"	l
c0111747	obj/kernel.asm	/^c0111747:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011174a	obj/kernel.asm	/^c011174a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011174d	obj/kernel.asm	/^c011174d:	8b 00                	mov    (%eax),%eax$/;"	l
c011174f	obj/kernel.asm	/^c011174f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111752	obj/kernel.asm	/^c0111752:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111755	obj/kernel.asm	/^c0111755:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111758	obj/kernel.asm	/^c0111758:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c011175b	obj/kernel.asm	/^c011175b:	73 19                	jae    c0111776 <sfs_bmap_load_nolock+0x32>$/;"	l
c011175d	obj/kernel.asm	/^c011175d:	68 0c 80 11 c0       	push   $0xc011800c$/;"	l
c0111762	obj/kernel.asm	/^c0111762:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0111767	obj/kernel.asm	/^c0111767:	68 64 01 00 00       	push   $0x164$/;"	l
c011176c	obj/kernel.asm	/^c011176c:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0111771	obj/kernel.asm	/^c0111771:	e8 59 ed fe ff       	call   c01004cf <__panic>$/;"	l
c0111776	obj/kernel.asm	/^c0111776:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111779	obj/kernel.asm	/^c0111779:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011177c	obj/kernel.asm	/^c011177c:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c011177f	obj/kernel.asm	/^c011177f:	0f 94 c0             	sete   %al$/;"	l
c0111782	obj/kernel.asm	/^c0111782:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0111785	obj/kernel.asm	/^c0111785:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111788	obj/kernel.asm	/^c0111788:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011178b	obj/kernel.asm	/^c011178b:	8d 45 e8             	lea    -0x18(%ebp),%eax$/;"	l
c011178e	obj/kernel.asm	/^c011178e:	50                   	push   %eax$/;"	l
c011178f	obj/kernel.asm	/^c011178f:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0111792	obj/kernel.asm	/^c0111792:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0111795	obj/kernel.asm	/^c0111795:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111798	obj/kernel.asm	/^c0111798:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011179b	obj/kernel.asm	/^c011179b:	e8 ec fc ff ff       	call   c011148c <sfs_bmap_get_nolock>$/;"	l
c01117a0	obj/kernel.asm	/^c01117a0:	83 c4 20             	add    $0x20,%esp$/;"	l
c01117a3	obj/kernel.asm	/^c01117a3:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01117a6	obj/kernel.asm	/^c01117a6:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01117aa	obj/kernel.asm	/^c01117aa:	74 05                	je     c01117b1 <sfs_bmap_load_nolock+0x6d>$/;"	l
c01117ac	obj/kernel.asm	/^c01117ac:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01117af	obj/kernel.asm	/^c01117af:	eb 57                	jmp    c0111808 <sfs_bmap_load_nolock+0xc4>$/;"	l
c01117b1	obj/kernel.asm	/^c01117b1:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01117b4	obj/kernel.asm	/^c01117b4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01117b7	obj/kernel.asm	/^c01117b7:	50                   	push   %eax$/;"	l
c01117b8	obj/kernel.asm	/^c01117b8:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01117bb	obj/kernel.asm	/^c01117bb:	e8 5c f7 ff ff       	call   c0110f1c <sfs_block_inuse>$/;"	l
c01117c0	obj/kernel.asm	/^c01117c0:	83 c4 10             	add    $0x10,%esp$/;"	l
c01117c3	obj/kernel.asm	/^c01117c3:	85 c0                	test   %eax,%eax$/;"	l
c01117c5	obj/kernel.asm	/^c01117c5:	75 19                	jne    c01117e0 <sfs_bmap_load_nolock+0x9c>$/;"	l
c01117c7	obj/kernel.asm	/^c01117c7:	68 f5 7e 11 c0       	push   $0xc0117ef5$/;"	l
c01117cc	obj/kernel.asm	/^c01117cc:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c01117d1	obj/kernel.asm	/^c01117d1:	68 6b 01 00 00       	push   $0x16b$/;"	l
c01117d6	obj/kernel.asm	/^c01117d6:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c01117db	obj/kernel.asm	/^c01117db:	e8 ef ec fe ff       	call   c01004cf <__panic>$/;"	l
c01117e0	obj/kernel.asm	/^c01117e0:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01117e4	obj/kernel.asm	/^c01117e4:	74 0f                	je     c01117f5 <sfs_bmap_load_nolock+0xb1>$/;"	l
c01117e6	obj/kernel.asm	/^c01117e6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01117e9	obj/kernel.asm	/^c01117e9:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01117ec	obj/kernel.asm	/^c01117ec:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c01117ef	obj/kernel.asm	/^c01117ef:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01117f2	obj/kernel.asm	/^c01117f2:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c01117f5	obj/kernel.asm	/^c01117f5:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c01117f9	obj/kernel.asm	/^c01117f9:	74 08                	je     c0111803 <sfs_bmap_load_nolock+0xbf>$/;"	l
c01117fb	obj/kernel.asm	/^c01117fb:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01117fe	obj/kernel.asm	/^c01117fe:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0111801	obj/kernel.asm	/^c0111801:	89 10                	mov    %edx,(%eax)$/;"	l
c0111803	obj/kernel.asm	/^c0111803:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111808	obj/kernel.asm	/^c0111808:	c9                   	leave  $/;"	l
c0111809	obj/kernel.asm	/^c0111809:	c3                   	ret    $/;"	l
c011180a	obj/kernel.asm	/^c011180a <sfs_bmap_truncate_nolock>:$/;"	l
c011180a	obj/kernel.asm	/^c011180a:	55                   	push   %ebp$/;"	l
c011180b	obj/kernel.asm	/^c011180b:	89 e5                	mov    %esp,%ebp$/;"	l
c011180d	obj/kernel.asm	/^c011180d:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0111810	obj/kernel.asm	/^c0111810:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111813	obj/kernel.asm	/^c0111813:	8b 00                	mov    (%eax),%eax$/;"	l
c0111815	obj/kernel.asm	/^c0111815:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111818	obj/kernel.asm	/^c0111818:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011181b	obj/kernel.asm	/^c011181b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011181e	obj/kernel.asm	/^c011181e:	85 c0                	test   %eax,%eax$/;"	l
c0111820	obj/kernel.asm	/^c0111820:	75 19                	jne    c011183b <sfs_bmap_truncate_nolock+0x31>$/;"	l
c0111822	obj/kernel.asm	/^c0111822:	68 21 80 11 c0       	push   $0xc0118021$/;"	l
c0111827	obj/kernel.asm	/^c0111827:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c011182c	obj/kernel.asm	/^c011182c:	68 7b 01 00 00       	push   $0x17b$/;"	l
c0111831	obj/kernel.asm	/^c0111831:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0111836	obj/kernel.asm	/^c0111836:	e8 94 ec fe ff       	call   c01004cf <__panic>$/;"	l
c011183b	obj/kernel.asm	/^c011183b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011183e	obj/kernel.asm	/^c011183e:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111841	obj/kernel.asm	/^c0111841:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0111844	obj/kernel.asm	/^c0111844:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0111847	obj/kernel.asm	/^c0111847:	50                   	push   %eax$/;"	l
c0111848	obj/kernel.asm	/^c0111848:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c011184b	obj/kernel.asm	/^c011184b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011184e	obj/kernel.asm	/^c011184e:	e8 4e fe ff ff       	call   c01116a1 <sfs_bmap_free_nolock>$/;"	l
c0111853	obj/kernel.asm	/^c0111853:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111856	obj/kernel.asm	/^c0111856:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111859	obj/kernel.asm	/^c0111859:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011185d	obj/kernel.asm	/^c011185d:	74 05                	je     c0111864 <sfs_bmap_truncate_nolock+0x5a>$/;"	l
c011185f	obj/kernel.asm	/^c011185f:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111862	obj/kernel.asm	/^c0111862:	eb 1e                	jmp    c0111882 <sfs_bmap_truncate_nolock+0x78>$/;"	l
c0111864	obj/kernel.asm	/^c0111864:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111867	obj/kernel.asm	/^c0111867:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011186a	obj/kernel.asm	/^c011186a:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c011186d	obj/kernel.asm	/^c011186d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111870	obj/kernel.asm	/^c0111870:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0111873	obj/kernel.asm	/^c0111873:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111876	obj/kernel.asm	/^c0111876:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c011187d	obj/kernel.asm	/^c011187d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111882	obj/kernel.asm	/^c0111882:	c9                   	leave  $/;"	l
c0111883	obj/kernel.asm	/^c0111883:	c3                   	ret    $/;"	l
c0111884	obj/kernel.asm	/^c0111884 <sfs_dirent_read_nolock>:$/;"	l
c0111884	obj/kernel.asm	/^c0111884:	55                   	push   %ebp$/;"	l
c0111885	obj/kernel.asm	/^c0111885:	89 e5                	mov    %esp,%ebp$/;"	l
c0111887	obj/kernel.asm	/^c0111887:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011188a	obj/kernel.asm	/^c011188a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011188d	obj/kernel.asm	/^c011188d:	8b 00                	mov    (%eax),%eax$/;"	l
c011188f	obj/kernel.asm	/^c011188f:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0111893	obj/kernel.asm	/^c0111893:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c0111897	obj/kernel.asm	/^c0111897:	75 15                	jne    c01118ae <sfs_dirent_read_nolock+0x2a>$/;"	l
c0111899	obj/kernel.asm	/^c0111899:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c011189d	obj/kernel.asm	/^c011189d:	78 0f                	js     c01118ae <sfs_dirent_read_nolock+0x2a>$/;"	l
c011189f	obj/kernel.asm	/^c011189f:	8b 55 10             	mov    0x10(%ebp),%edx$/;"	l
c01118a2	obj/kernel.asm	/^c01118a2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01118a5	obj/kernel.asm	/^c01118a5:	8b 00                	mov    (%eax),%eax$/;"	l
c01118a7	obj/kernel.asm	/^c01118a7:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01118aa	obj/kernel.asm	/^c01118aa:	39 c2                	cmp    %eax,%edx$/;"	l
c01118ac	obj/kernel.asm	/^c01118ac:	72 19                	jb     c01118c7 <sfs_dirent_read_nolock+0x43>$/;"	l
c01118ae	obj/kernel.asm	/^c01118ae:	68 34 80 11 c0       	push   $0xc0118034$/;"	l
c01118b3	obj/kernel.asm	/^c01118b3:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c01118b8	obj/kernel.asm	/^c01118b8:	68 8e 01 00 00       	push   $0x18e$/;"	l
c01118bd	obj/kernel.asm	/^c01118bd:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c01118c2	obj/kernel.asm	/^c01118c2:	e8 08 ec fe ff       	call   c01004cf <__panic>$/;"	l
c01118c7	obj/kernel.asm	/^c01118c7:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01118ca	obj/kernel.asm	/^c01118ca:	8d 55 f0             	lea    -0x10(%ebp),%edx$/;"	l
c01118cd	obj/kernel.asm	/^c01118cd:	52                   	push   %edx$/;"	l
c01118ce	obj/kernel.asm	/^c01118ce:	50                   	push   %eax$/;"	l
c01118cf	obj/kernel.asm	/^c01118cf:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01118d2	obj/kernel.asm	/^c01118d2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01118d5	obj/kernel.asm	/^c01118d5:	e8 6a fe ff ff       	call   c0111744 <sfs_bmap_load_nolock>$/;"	l
c01118da	obj/kernel.asm	/^c01118da:	83 c4 10             	add    $0x10,%esp$/;"	l
c01118dd	obj/kernel.asm	/^c01118dd:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01118e0	obj/kernel.asm	/^c01118e0:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01118e4	obj/kernel.asm	/^c01118e4:	74 05                	je     c01118eb <sfs_dirent_read_nolock+0x67>$/;"	l
c01118e6	obj/kernel.asm	/^c01118e6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01118e9	obj/kernel.asm	/^c01118e9:	eb 68                	jmp    c0111953 <sfs_dirent_read_nolock+0xcf>$/;"	l
c01118eb	obj/kernel.asm	/^c01118eb:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01118ee	obj/kernel.asm	/^c01118ee:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01118f1	obj/kernel.asm	/^c01118f1:	50                   	push   %eax$/;"	l
c01118f2	obj/kernel.asm	/^c01118f2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01118f5	obj/kernel.asm	/^c01118f5:	e8 22 f6 ff ff       	call   c0110f1c <sfs_block_inuse>$/;"	l
c01118fa	obj/kernel.asm	/^c01118fa:	83 c4 10             	add    $0x10,%esp$/;"	l
c01118fd	obj/kernel.asm	/^c01118fd:	85 c0                	test   %eax,%eax$/;"	l
c01118ff	obj/kernel.asm	/^c01118ff:	75 19                	jne    c011191a <sfs_dirent_read_nolock+0x96>$/;"	l
c0111901	obj/kernel.asm	/^c0111901:	68 f5 7e 11 c0       	push   $0xc0117ef5$/;"	l
c0111906	obj/kernel.asm	/^c0111906:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c011190b	obj/kernel.asm	/^c011190b:	68 95 01 00 00       	push   $0x195$/;"	l
c0111910	obj/kernel.asm	/^c0111910:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0111915	obj/kernel.asm	/^c0111915:	e8 b5 eb fe ff       	call   c01004cf <__panic>$/;"	l
c011191a	obj/kernel.asm	/^c011191a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011191d	obj/kernel.asm	/^c011191d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111920	obj/kernel.asm	/^c0111920:	6a 00                	push   $0x0$/;"	l
c0111922	obj/kernel.asm	/^c0111922:	50                   	push   %eax$/;"	l
c0111923	obj/kernel.asm	/^c0111923:	68 04 01 00 00       	push   $0x104$/;"	l
c0111928	obj/kernel.asm	/^c0111928:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c011192b	obj/kernel.asm	/^c011192b:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011192e	obj/kernel.asm	/^c011192e:	e8 6f 18 00 00       	call   c01131a2 <sfs_rbuf>$/;"	l
c0111933	obj/kernel.asm	/^c0111933:	83 c4 20             	add    $0x20,%esp$/;"	l
c0111936	obj/kernel.asm	/^c0111936:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111939	obj/kernel.asm	/^c0111939:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011193d	obj/kernel.asm	/^c011193d:	74 05                	je     c0111944 <sfs_dirent_read_nolock+0xc0>$/;"	l
c011193f	obj/kernel.asm	/^c011193f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111942	obj/kernel.asm	/^c0111942:	eb 0f                	jmp    c0111953 <sfs_dirent_read_nolock+0xcf>$/;"	l
c0111944	obj/kernel.asm	/^c0111944:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0111947	obj/kernel.asm	/^c0111947:	c6 80 03 01 00 00 00 	movb   $0x0,0x103(%eax)$/;"	l
c011194e	obj/kernel.asm	/^c011194e:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111953	obj/kernel.asm	/^c0111953:	c9                   	leave  $/;"	l
c0111954	obj/kernel.asm	/^c0111954:	c3                   	ret    $/;"	l
c0111955	obj/kernel.asm	/^c0111955 <sfs_dirent_search_nolock>:$/;"	l
c0111955	obj/kernel.asm	/^c0111955:	55                   	push   %ebp$/;"	l
c0111956	obj/kernel.asm	/^c0111956:	89 e5                	mov    %esp,%ebp$/;"	l
c0111958	obj/kernel.asm	/^c0111958:	83 ec 18             	sub    $0x18,%esp$/;"	l
c011195b	obj/kernel.asm	/^c011195b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011195e	obj/kernel.asm	/^c011195e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0111961	obj/kernel.asm	/^c0111961:	e8 cf 1a 00 00       	call   c0113435 <strlen>$/;"	l
c0111966	obj/kernel.asm	/^c0111966:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111969	obj/kernel.asm	/^c0111969:	3d ff 00 00 00       	cmp    $0xff,%eax$/;"	l
c011196e	obj/kernel.asm	/^c011196e:	76 19                	jbe    c0111989 <sfs_dirent_search_nolock+0x34>$/;"	l
c0111970	obj/kernel.asm	/^c0111970:	68 80 80 11 c0       	push   $0xc0118080$/;"	l
c0111975	obj/kernel.asm	/^c0111975:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c011197a	obj/kernel.asm	/^c011197a:	68 ba 01 00 00       	push   $0x1ba$/;"	l
c011197f	obj/kernel.asm	/^c011197f:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0111984	obj/kernel.asm	/^c0111984:	e8 46 eb fe ff       	call   c01004cf <__panic>$/;"	l
c0111989	obj/kernel.asm	/^c0111989:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011198c	obj/kernel.asm	/^c011198c:	68 04 01 00 00       	push   $0x104$/;"	l
c0111991	obj/kernel.asm	/^c0111991:	e8 60 5a ff ff       	call   c01073f6 <kmalloc>$/;"	l
c0111996	obj/kernel.asm	/^c0111996:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111999	obj/kernel.asm	/^c0111999:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011199c	obj/kernel.asm	/^c011199c:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01119a0	obj/kernel.asm	/^c01119a0:	75 0a                	jne    c01119ac <sfs_dirent_search_nolock+0x57>$/;"	l
c01119a2	obj/kernel.asm	/^c01119a2:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01119a7	obj/kernel.asm	/^c01119a7:	e9 bf 00 00 00       	jmp    c0111a6b <sfs_dirent_search_nolock+0x116>$/;"	l
c01119ac	obj/kernel.asm	/^c01119ac:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01119af	obj/kernel.asm	/^c01119af:	8b 00                	mov    (%eax),%eax$/;"	l
c01119b1	obj/kernel.asm	/^c01119b1:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c01119b4	obj/kernel.asm	/^c01119b4:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01119b7	obj/kernel.asm	/^c01119b7:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c01119bb	obj/kernel.asm	/^c01119bb:	74 08                	je     c01119c5 <sfs_dirent_search_nolock+0x70>$/;"	l
c01119bd	obj/kernel.asm	/^c01119bd:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c01119c0	obj/kernel.asm	/^c01119c0:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c01119c3	obj/kernel.asm	/^c01119c3:	89 10                	mov    %edx,(%eax)$/;"	l
c01119c5	obj/kernel.asm	/^c01119c5:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c01119cc	obj/kernel.asm	/^c01119cc:	eb 79                	jmp    c0111a47 <sfs_dirent_search_nolock+0xf2>$/;"	l
c01119ce	obj/kernel.asm	/^c01119ce:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01119d1	obj/kernel.asm	/^c01119d1:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01119d4	obj/kernel.asm	/^c01119d4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01119d7	obj/kernel.asm	/^c01119d7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01119da	obj/kernel.asm	/^c01119da:	e8 a5 fe ff ff       	call   c0111884 <sfs_dirent_read_nolock>$/;"	l
c01119df	obj/kernel.asm	/^c01119df:	83 c4 10             	add    $0x10,%esp$/;"	l
c01119e2	obj/kernel.asm	/^c01119e2:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01119e5	obj/kernel.asm	/^c01119e5:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01119e9	obj/kernel.asm	/^c01119e9:	74 02                	je     c01119ed <sfs_dirent_search_nolock+0x98>$/;"	l
c01119eb	obj/kernel.asm	/^c01119eb:	eb 6d                	jmp    c0111a5a <sfs_dirent_search_nolock+0x105>$/;"	l
c01119ed	obj/kernel.asm	/^c01119ed:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01119f0	obj/kernel.asm	/^c01119f0:	8b 00                	mov    (%eax),%eax$/;"	l
c01119f2	obj/kernel.asm	/^c01119f2:	85 c0                	test   %eax,%eax$/;"	l
c01119f4	obj/kernel.asm	/^c01119f4:	75 12                	jne    c0111a08 <sfs_dirent_search_nolock+0xb3>$/;"	l
c01119f6	obj/kernel.asm	/^c01119f6:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c01119fa	obj/kernel.asm	/^c01119fa:	74 0a                	je     c0111a06 <sfs_dirent_search_nolock+0xb1>$/;"	l
c01119fc	obj/kernel.asm	/^c01119fc:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c01119ff	obj/kernel.asm	/^c01119ff:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0111a02	obj/kernel.asm	/^c0111a02:	89 10                	mov    %edx,(%eax)$/;"	l
c0111a04	obj/kernel.asm	/^c0111a04:	eb 3d                	jmp    c0111a43 <sfs_dirent_search_nolock+0xee>$/;"	l
c0111a06	obj/kernel.asm	/^c0111a06:	eb 3b                	jmp    c0111a43 <sfs_dirent_search_nolock+0xee>$/;"	l
c0111a08	obj/kernel.asm	/^c0111a08:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111a0b	obj/kernel.asm	/^c0111a0b:	83 c0 04             	add    $0x4,%eax$/;"	l
c0111a0e	obj/kernel.asm	/^c0111a0e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111a11	obj/kernel.asm	/^c0111a11:	50                   	push   %eax$/;"	l
c0111a12	obj/kernel.asm	/^c0111a12:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0111a15	obj/kernel.asm	/^c0111a15:	e8 16 1b 00 00       	call   c0113530 <strcmp>$/;"	l
c0111a1a	obj/kernel.asm	/^c0111a1a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111a1d	obj/kernel.asm	/^c0111a1d:	85 c0                	test   %eax,%eax$/;"	l
c0111a1f	obj/kernel.asm	/^c0111a1f:	75 22                	jne    c0111a43 <sfs_dirent_search_nolock+0xee>$/;"	l
c0111a21	obj/kernel.asm	/^c0111a21:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0111a25	obj/kernel.asm	/^c0111a25:	74 08                	je     c0111a2f <sfs_dirent_search_nolock+0xda>$/;"	l
c0111a27	obj/kernel.asm	/^c0111a27:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0111a2a	obj/kernel.asm	/^c0111a2a:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0111a2d	obj/kernel.asm	/^c0111a2d:	89 10                	mov    %edx,(%eax)$/;"	l
c0111a2f	obj/kernel.asm	/^c0111a2f:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0111a33	obj/kernel.asm	/^c0111a33:	74 0c                	je     c0111a41 <sfs_dirent_search_nolock+0xec>$/;"	l
c0111a35	obj/kernel.asm	/^c0111a35:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111a38	obj/kernel.asm	/^c0111a38:	8b 10                	mov    (%eax),%edx$/;"	l
c0111a3a	obj/kernel.asm	/^c0111a3a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0111a3d	obj/kernel.asm	/^c0111a3d:	89 10                	mov    %edx,(%eax)$/;"	l
c0111a3f	obj/kernel.asm	/^c0111a3f:	eb 19                	jmp    c0111a5a <sfs_dirent_search_nolock+0x105>$/;"	l
c0111a41	obj/kernel.asm	/^c0111a41:	eb 17                	jmp    c0111a5a <sfs_dirent_search_nolock+0x105>$/;"	l
c0111a43	obj/kernel.asm	/^c0111a43:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0111a47	obj/kernel.asm	/^c0111a47:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111a4a	obj/kernel.asm	/^c0111a4a:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c0111a4d	obj/kernel.asm	/^c0111a4d:	0f 8c 7b ff ff ff    	jl     c01119ce <sfs_dirent_search_nolock+0x79>$/;"	l
c0111a53	obj/kernel.asm	/^c0111a53:	c7 45 f4 f0 ff ff ff 	movl   $0xfffffff0,-0xc(%ebp)$/;"	l
c0111a5a	obj/kernel.asm	/^c0111a5a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111a5d	obj/kernel.asm	/^c0111a5d:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0111a60	obj/kernel.asm	/^c0111a60:	e8 a9 59 ff ff       	call   c010740e <kfree>$/;"	l
c0111a65	obj/kernel.asm	/^c0111a65:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111a68	obj/kernel.asm	/^c0111a68:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111a6b	obj/kernel.asm	/^c0111a6b:	c9                   	leave  $/;"	l
c0111a6c	obj/kernel.asm	/^c0111a6c:	c3                   	ret    $/;"	l
c0111a6d	obj/kernel.asm	/^c0111a6d <sfs_dirent_findino_nolock>:$/;"	l
c0111a6d	obj/kernel.asm	/^c0111a6d:	55                   	push   %ebp$/;"	l
c0111a6e	obj/kernel.asm	/^c0111a6e:	89 e5                	mov    %esp,%ebp$/;"	l
c0111a70	obj/kernel.asm	/^c0111a70:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0111a73	obj/kernel.asm	/^c0111a73:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111a76	obj/kernel.asm	/^c0111a76:	8b 00                	mov    (%eax),%eax$/;"	l
c0111a78	obj/kernel.asm	/^c0111a78:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0111a7b	obj/kernel.asm	/^c0111a7b:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111a7e	obj/kernel.asm	/^c0111a7e:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0111a85	obj/kernel.asm	/^c0111a85:	eb 37                	jmp    c0111abe <sfs_dirent_findino_nolock+0x51>$/;"	l
c0111a87	obj/kernel.asm	/^c0111a87:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0111a8a	obj/kernel.asm	/^c0111a8a:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0111a8d	obj/kernel.asm	/^c0111a8d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111a90	obj/kernel.asm	/^c0111a90:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111a93	obj/kernel.asm	/^c0111a93:	e8 ec fd ff ff       	call   c0111884 <sfs_dirent_read_nolock>$/;"	l
c0111a98	obj/kernel.asm	/^c0111a98:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111a9b	obj/kernel.asm	/^c0111a9b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111a9e	obj/kernel.asm	/^c0111a9e:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0111aa2	obj/kernel.asm	/^c0111aa2:	74 05                	je     c0111aa9 <sfs_dirent_findino_nolock+0x3c>$/;"	l
c0111aa4	obj/kernel.asm	/^c0111aa4:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111aa7	obj/kernel.asm	/^c0111aa7:	eb 22                	jmp    c0111acb <sfs_dirent_findino_nolock+0x5e>$/;"	l
c0111aa9	obj/kernel.asm	/^c0111aa9:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0111aac	obj/kernel.asm	/^c0111aac:	8b 00                	mov    (%eax),%eax$/;"	l
c0111aae	obj/kernel.asm	/^c0111aae:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0111ab1	obj/kernel.asm	/^c0111ab1:	75 07                	jne    c0111aba <sfs_dirent_findino_nolock+0x4d>$/;"	l
c0111ab3	obj/kernel.asm	/^c0111ab3:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111ab8	obj/kernel.asm	/^c0111ab8:	eb 11                	jmp    c0111acb <sfs_dirent_findino_nolock+0x5e>$/;"	l
c0111aba	obj/kernel.asm	/^c0111aba:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0111abe	obj/kernel.asm	/^c0111abe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111ac1	obj/kernel.asm	/^c0111ac1:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0111ac4	obj/kernel.asm	/^c0111ac4:	7c c1                	jl     c0111a87 <sfs_dirent_findino_nolock+0x1a>$/;"	l
c0111ac6	obj/kernel.asm	/^c0111ac6:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c0111acb	obj/kernel.asm	/^c0111acb:	c9                   	leave  $/;"	l
c0111acc	obj/kernel.asm	/^c0111acc:	c3                   	ret    $/;"	l
c0111acd	obj/kernel.asm	/^c0111acd <sfs_lookup_once>:$/;"	l
c0111acd	obj/kernel.asm	/^c0111acd:	55                   	push   %ebp$/;"	l
c0111ace	obj/kernel.asm	/^c0111ace:	89 e5                	mov    %esp,%ebp$/;"	l
c0111ad0	obj/kernel.asm	/^c0111ad0:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0111ad3	obj/kernel.asm	/^c0111ad3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111ad6	obj/kernel.asm	/^c0111ad6:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111ad9	obj/kernel.asm	/^c0111ad9:	e8 7b f2 ff ff       	call   c0110d59 <lock_sin>$/;"	l
c0111ade	obj/kernel.asm	/^c0111ade:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111ae1	obj/kernel.asm	/^c0111ae1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111ae4	obj/kernel.asm	/^c0111ae4:	6a 00                	push   $0x0$/;"	l
c0111ae6	obj/kernel.asm	/^c0111ae6:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
c0111ae9	obj/kernel.asm	/^c0111ae9:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0111aec	obj/kernel.asm	/^c0111aec:	50                   	push   %eax$/;"	l
c0111aed	obj/kernel.asm	/^c0111aed:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0111af0	obj/kernel.asm	/^c0111af0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111af3	obj/kernel.asm	/^c0111af3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111af6	obj/kernel.asm	/^c0111af6:	e8 5a fe ff ff       	call   c0111955 <sfs_dirent_search_nolock>$/;"	l
c0111afb	obj/kernel.asm	/^c0111afb:	83 c4 20             	add    $0x20,%esp$/;"	l
c0111afe	obj/kernel.asm	/^c0111afe:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111b01	obj/kernel.asm	/^c0111b01:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111b04	obj/kernel.asm	/^c0111b04:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111b07	obj/kernel.asm	/^c0111b07:	e8 67 f2 ff ff       	call   c0110d73 <unlock_sin>$/;"	l
c0111b0c	obj/kernel.asm	/^c0111b0c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111b0f	obj/kernel.asm	/^c0111b0f:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111b13	obj/kernel.asm	/^c0111b13:	75 18                	jne    c0111b2d <sfs_lookup_once+0x60>$/;"	l
c0111b15	obj/kernel.asm	/^c0111b15:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111b18	obj/kernel.asm	/^c0111b18:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0111b1b	obj/kernel.asm	/^c0111b1b:	50                   	push   %eax$/;"	l
c0111b1c	obj/kernel.asm	/^c0111b1c:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0111b1f	obj/kernel.asm	/^c0111b1f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111b22	obj/kernel.asm	/^c0111b22:	e8 a4 f6 ff ff       	call   c01111cb <sfs_load_inode>$/;"	l
c0111b27	obj/kernel.asm	/^c0111b27:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111b2a	obj/kernel.asm	/^c0111b2a:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111b2d	obj/kernel.asm	/^c0111b2d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111b30	obj/kernel.asm	/^c0111b30:	c9                   	leave  $/;"	l
c0111b31	obj/kernel.asm	/^c0111b31:	c3                   	ret    $/;"	l
c0111b32	obj/kernel.asm	/^c0111b32 <sfs_opendir>:$/;"	l
c0111b32	obj/kernel.asm	/^c0111b32:	55                   	push   %ebp$/;"	l
c0111b33	obj/kernel.asm	/^c0111b33:	89 e5                	mov    %esp,%ebp$/;"	l
c0111b35	obj/kernel.asm	/^c0111b35:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111b38	obj/kernel.asm	/^c0111b38:	83 e0 03             	and    $0x3,%eax$/;"	l
c0111b3b	obj/kernel.asm	/^c0111b3b:	85 c0                	test   %eax,%eax$/;"	l
c0111b3d	obj/kernel.asm	/^c0111b3d:	74 07                	je     c0111b46 <sfs_opendir+0x14>$/;"	l
c0111b3f	obj/kernel.asm	/^c0111b3f:	b8 ef ff ff ff       	mov    $0xffffffef,%eax$/;"	l
c0111b44	obj/kernel.asm	/^c0111b44:	eb 17                	jmp    c0111b5d <sfs_opendir+0x2b>$/;"	l
c0111b46	obj/kernel.asm	/^c0111b46:	90                   	nop$/;"	l
c0111b47	obj/kernel.asm	/^c0111b47:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111b4a	obj/kernel.asm	/^c0111b4a:	83 e0 20             	and    $0x20,%eax$/;"	l
c0111b4d	obj/kernel.asm	/^c0111b4d:	85 c0                	test   %eax,%eax$/;"	l
c0111b4f	obj/kernel.asm	/^c0111b4f:	74 07                	je     c0111b58 <sfs_opendir+0x26>$/;"	l
c0111b51	obj/kernel.asm	/^c0111b51:	b8 ef ff ff ff       	mov    $0xffffffef,%eax$/;"	l
c0111b56	obj/kernel.asm	/^c0111b56:	eb 05                	jmp    c0111b5d <sfs_opendir+0x2b>$/;"	l
c0111b58	obj/kernel.asm	/^c0111b58:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111b5d	obj/kernel.asm	/^c0111b5d:	5d                   	pop    %ebp$/;"	l
c0111b5e	obj/kernel.asm	/^c0111b5e:	c3                   	ret    $/;"	l
c0111b5f	obj/kernel.asm	/^c0111b5f <sfs_openfile>:$/;"	l
c0111b5f	obj/kernel.asm	/^c0111b5f:	55                   	push   %ebp$/;"	l
c0111b60	obj/kernel.asm	/^c0111b60:	89 e5                	mov    %esp,%ebp$/;"	l
c0111b62	obj/kernel.asm	/^c0111b62:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111b67	obj/kernel.asm	/^c0111b67:	5d                   	pop    %ebp$/;"	l
c0111b68	obj/kernel.asm	/^c0111b68:	c3                   	ret    $/;"	l
c0111b69	obj/kernel.asm	/^c0111b69 <sfs_close>:$/;"	l
c0111b69	obj/kernel.asm	/^c0111b69:	55                   	push   %ebp$/;"	l
c0111b6a	obj/kernel.asm	/^c0111b6a:	89 e5                	mov    %esp,%ebp$/;"	l
c0111b6c	obj/kernel.asm	/^c0111b6c:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0111b6f	obj/kernel.asm	/^c0111b6f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111b72	obj/kernel.asm	/^c0111b72:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111b75	obj/kernel.asm	/^c0111b75:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111b79	obj/kernel.asm	/^c0111b79:	74 17                	je     c0111b92 <sfs_close+0x29>$/;"	l
c0111b7b	obj/kernel.asm	/^c0111b7b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111b7e	obj/kernel.asm	/^c0111b7e:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0111b81	obj/kernel.asm	/^c0111b81:	85 c0                	test   %eax,%eax$/;"	l
c0111b83	obj/kernel.asm	/^c0111b83:	74 0d                	je     c0111b92 <sfs_close+0x29>$/;"	l
c0111b85	obj/kernel.asm	/^c0111b85:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111b88	obj/kernel.asm	/^c0111b88:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0111b8b	obj/kernel.asm	/^c0111b8b:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0111b8e	obj/kernel.asm	/^c0111b8e:	85 c0                	test   %eax,%eax$/;"	l
c0111b90	obj/kernel.asm	/^c0111b90:	75 19                	jne    c0111bab <sfs_close+0x42>$/;"	l
c0111b92	obj/kernel.asm	/^c0111b92:	68 a4 80 11 c0       	push   $0xc01180a4$/;"	l
c0111b97	obj/kernel.asm	/^c0111b97:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0111b9c	obj/kernel.asm	/^c0111b9c:	68 1c 02 00 00       	push   $0x21c$/;"	l
c0111ba1	obj/kernel.asm	/^c0111ba1:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0111ba6	obj/kernel.asm	/^c0111ba6:	e8 24 e9 fe ff       	call   c01004cf <__panic>$/;"	l
c0111bab	obj/kernel.asm	/^c0111bab:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111bae	obj/kernel.asm	/^c0111bae:	68 f2 80 11 c0       	push   $0xc01180f2$/;"	l
c0111bb3	obj/kernel.asm	/^c0111bb3:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0111bb6	obj/kernel.asm	/^c0111bb6:	e8 dc d6 ff ff       	call   c010f297 <inode_check>$/;"	l
c0111bbb	obj/kernel.asm	/^c0111bbb:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111bbe	obj/kernel.asm	/^c0111bbe:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111bc1	obj/kernel.asm	/^c0111bc1:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0111bc4	obj/kernel.asm	/^c0111bc4:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c0111bc7	obj/kernel.asm	/^c0111bc7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111bca	obj/kernel.asm	/^c0111bca:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111bcd	obj/kernel.asm	/^c0111bcd:	ff d0                	call   *%eax$/;"	l
c0111bcf	obj/kernel.asm	/^c0111bcf:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111bd2	obj/kernel.asm	/^c0111bd2:	c9                   	leave  $/;"	l
c0111bd3	obj/kernel.asm	/^c0111bd3:	c3                   	ret    $/;"	l
c0111bd4	obj/kernel.asm	/^c0111bd4 <sfs_io_nolock>:$/;"	l
c0111bd4	obj/kernel.asm	/^c0111bd4:	55                   	push   %ebp$/;"	l
c0111bd5	obj/kernel.asm	/^c0111bd5:	89 e5                	mov    %esp,%ebp$/;"	l
c0111bd7	obj/kernel.asm	/^c0111bd7:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0111bda	obj/kernel.asm	/^c0111bda:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111bdd	obj/kernel.asm	/^c0111bdd:	8b 00                	mov    (%eax),%eax$/;"	l
c0111bdf	obj/kernel.asm	/^c0111bdf:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0111be2	obj/kernel.asm	/^c0111be2:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111be5	obj/kernel.asm	/^c0111be5:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0111be9	obj/kernel.asm	/^c0111be9:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c0111bed	obj/kernel.asm	/^c0111bed:	75 19                	jne    c0111c08 <sfs_io_nolock+0x34>$/;"	l
c0111bef	obj/kernel.asm	/^c0111bef:	68 f8 80 11 c0       	push   $0xc01180f8$/;"	l
c0111bf4	obj/kernel.asm	/^c0111bf4:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0111bf9	obj/kernel.asm	/^c0111bf9:	68 2b 02 00 00       	push   $0x22b$/;"	l
c0111bfe	obj/kernel.asm	/^c0111bfe:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0111c03	obj/kernel.asm	/^c0111c03:	e8 c7 e8 fe ff       	call   c01004cf <__panic>$/;"	l
c0111c08	obj/kernel.asm	/^c0111c08:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0111c0b	obj/kernel.asm	/^c0111c0b:	8b 10                	mov    (%eax),%edx$/;"	l
c0111c0d	obj/kernel.asm	/^c0111c0d:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0111c10	obj/kernel.asm	/^c0111c10:	01 d0                	add    %edx,%eax$/;"	l
c0111c12	obj/kernel.asm	/^c0111c12:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111c15	obj/kernel.asm	/^c0111c15:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0111c18	obj/kernel.asm	/^c0111c18:	c7 00 00 00 00 00    	movl   $0x0,(%eax)$/;"	l
c0111c1e	obj/kernel.asm	/^c0111c1e:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c0111c22	obj/kernel.asm	/^c0111c22:	78 12                	js     c0111c36 <sfs_io_nolock+0x62>$/;"	l
c0111c24	obj/kernel.asm	/^c0111c24:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0111c27	obj/kernel.asm	/^c0111c27:	3d ff ff ff 07       	cmp    $0x7ffffff,%eax$/;"	l
c0111c2c	obj/kernel.asm	/^c0111c2c:	77 08                	ja     c0111c36 <sfs_io_nolock+0x62>$/;"	l
c0111c2e	obj/kernel.asm	/^c0111c2e:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0111c31	obj/kernel.asm	/^c0111c31:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0111c34	obj/kernel.asm	/^c0111c34:	7e 0a                	jle    c0111c40 <sfs_io_nolock+0x6c>$/;"	l
c0111c36	obj/kernel.asm	/^c0111c36:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0111c3b	obj/kernel.asm	/^c0111c3b:	e9 51 02 00 00       	jmp    c0111e91 <sfs_io_nolock+0x2bd>$/;"	l
c0111c40	obj/kernel.asm	/^c0111c40:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0111c43	obj/kernel.asm	/^c0111c43:	3b 45 f4             	cmp    -0xc(%ebp),%eax$/;"	l
c0111c46	obj/kernel.asm	/^c0111c46:	75 0a                	jne    c0111c52 <sfs_io_nolock+0x7e>$/;"	l
c0111c48	obj/kernel.asm	/^c0111c48:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111c4d	obj/kernel.asm	/^c0111c4d:	e9 3f 02 00 00       	jmp    c0111e91 <sfs_io_nolock+0x2bd>$/;"	l
c0111c52	obj/kernel.asm	/^c0111c52:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111c55	obj/kernel.asm	/^c0111c55:	3d 00 00 00 08       	cmp    $0x8000000,%eax$/;"	l
c0111c5a	obj/kernel.asm	/^c0111c5a:	76 07                	jbe    c0111c63 <sfs_io_nolock+0x8f>$/;"	l
c0111c5c	obj/kernel.asm	/^c0111c5c:	c7 45 f4 00 00 00 08 	movl   $0x8000000,-0xc(%ebp)$/;"	l
c0111c63	obj/kernel.asm	/^c0111c63:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c0111c67	obj/kernel.asm	/^c0111c67:	75 2a                	jne    c0111c93 <sfs_io_nolock+0xbf>$/;"	l
c0111c69	obj/kernel.asm	/^c0111c69:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c0111c6c	obj/kernel.asm	/^c0111c6c:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111c6f	obj/kernel.asm	/^c0111c6f:	8b 00                	mov    (%eax),%eax$/;"	l
c0111c71	obj/kernel.asm	/^c0111c71:	39 c2                	cmp    %eax,%edx$/;"	l
c0111c73	obj/kernel.asm	/^c0111c73:	72 0a                	jb     c0111c7f <sfs_io_nolock+0xab>$/;"	l
c0111c75	obj/kernel.asm	/^c0111c75:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0111c7a	obj/kernel.asm	/^c0111c7a:	e9 12 02 00 00       	jmp    c0111e91 <sfs_io_nolock+0x2bd>$/;"	l
c0111c7f	obj/kernel.asm	/^c0111c7f:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0111c82	obj/kernel.asm	/^c0111c82:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111c85	obj/kernel.asm	/^c0111c85:	8b 00                	mov    (%eax),%eax$/;"	l
c0111c87	obj/kernel.asm	/^c0111c87:	39 c2                	cmp    %eax,%edx$/;"	l
c0111c89	obj/kernel.asm	/^c0111c89:	76 08                	jbe    c0111c93 <sfs_io_nolock+0xbf>$/;"	l
c0111c8b	obj/kernel.asm	/^c0111c8b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0111c8e	obj/kernel.asm	/^c0111c8e:	8b 00                	mov    (%eax),%eax$/;"	l
c0111c90	obj/kernel.asm	/^c0111c90:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111c93	obj/kernel.asm	/^c0111c93:	83 7d 1c 00          	cmpl   $0x0,0x1c(%ebp)$/;"	l
c0111c97	obj/kernel.asm	/^c0111c97:	74 10                	je     c0111ca9 <sfs_io_nolock+0xd5>$/;"	l
c0111c99	obj/kernel.asm	/^c0111c99:	c7 45 f0 3f 32 11 c0 	movl   $0xc011323f,-0x10(%ebp)$/;"	l
c0111ca0	obj/kernel.asm	/^c0111ca0:	c7 45 ec 81 31 11 c0 	movl   $0xc0113181,-0x14(%ebp)$/;"	l
c0111ca7	obj/kernel.asm	/^c0111ca7:	eb 0e                	jmp    c0111cb7 <sfs_io_nolock+0xe3>$/;"	l
c0111ca9	obj/kernel.asm	/^c0111ca9:	c7 45 f0 a2 31 11 c0 	movl   $0xc01131a2,-0x10(%ebp)$/;"	l
c0111cb0	obj/kernel.asm	/^c0111cb0:	c7 45 ec 60 31 11 c0 	movl   $0xc0113160,-0x14(%ebp)$/;"	l
c0111cb7	obj/kernel.asm	/^c0111cb7:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0111cbe	obj/kernel.asm	/^c0111cbe:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0111cc5	obj/kernel.asm	/^c0111cc5:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0111cc8	obj/kernel.asm	/^c0111cc8:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
c0111cce	obj/kernel.asm	/^c0111cce:	85 c0                	test   %eax,%eax$/;"	l
c0111cd0	obj/kernel.asm	/^c0111cd0:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c0111cd3	obj/kernel.asm	/^c0111cd3:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
c0111cd6	obj/kernel.asm	/^c0111cd6:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0111cd9	obj/kernel.asm	/^c0111cd9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111cdc	obj/kernel.asm	/^c0111cdc:	8d 90 ff 0f 00 00    	lea    0xfff(%eax),%edx$/;"	l
c0111ce2	obj/kernel.asm	/^c0111ce2:	85 c0                	test   %eax,%eax$/;"	l
c0111ce4	obj/kernel.asm	/^c0111ce4:	0f 48 c2             	cmovs  %edx,%eax$/;"	l
c0111ce7	obj/kernel.asm	/^c0111ce7:	c1 f8 0c             	sar    $0xc,%eax$/;"	l
c0111cea	obj/kernel.asm	/^c0111cea:	2b 45 e0             	sub    -0x20(%ebp),%eax$/;"	l
c0111ced	obj/kernel.asm	/^c0111ced:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0111cf0	obj/kernel.asm	/^c0111cf0:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0111cf3	obj/kernel.asm	/^c0111cf3:	99                   	cltd   $/;"	l
c0111cf4	obj/kernel.asm	/^c0111cf4:	c1 ea 14             	shr    $0x14,%edx$/;"	l
c0111cf7	obj/kernel.asm	/^c0111cf7:	01 d0                	add    %edx,%eax$/;"	l
c0111cf9	obj/kernel.asm	/^c0111cf9:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0111cfe	obj/kernel.asm	/^c0111cfe:	29 d0                	sub    %edx,%eax$/;"	l
c0111d00	obj/kernel.asm	/^c0111d00:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0111d03	obj/kernel.asm	/^c0111d03:	83 7d d4 00          	cmpl   $0x0,-0x2c(%ebp)$/;"	l
c0111d07	obj/kernel.asm	/^c0111d07:	0f 84 84 00 00 00    	je     c0111d91 <sfs_io_nolock+0x1bd>$/;"	l
c0111d0d	obj/kernel.asm	/^c0111d0d:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0111d11	obj/kernel.asm	/^c0111d11:	74 0a                	je     c0111d1d <sfs_io_nolock+0x149>$/;"	l
c0111d13	obj/kernel.asm	/^c0111d13:	b8 00 10 00 00       	mov    $0x1000,%eax$/;"	l
c0111d18	obj/kernel.asm	/^c0111d18:	2b 45 d4             	sub    -0x2c(%ebp),%eax$/;"	l
c0111d1b	obj/kernel.asm	/^c0111d1b:	eb 06                	jmp    c0111d23 <sfs_io_nolock+0x14f>$/;"	l
c0111d1d	obj/kernel.asm	/^c0111d1d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111d20	obj/kernel.asm	/^c0111d20:	2b 45 14             	sub    0x14(%ebp),%eax$/;"	l
c0111d23	obj/kernel.asm	/^c0111d23:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0111d26	obj/kernel.asm	/^c0111d26:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c0111d29	obj/kernel.asm	/^c0111d29:	50                   	push   %eax$/;"	l
c0111d2a	obj/kernel.asm	/^c0111d2a:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0111d2d	obj/kernel.asm	/^c0111d2d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111d30	obj/kernel.asm	/^c0111d30:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111d33	obj/kernel.asm	/^c0111d33:	e8 0c fa ff ff       	call   c0111744 <sfs_bmap_load_nolock>$/;"	l
c0111d38	obj/kernel.asm	/^c0111d38:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111d3b	obj/kernel.asm	/^c0111d3b:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111d3e	obj/kernel.asm	/^c0111d3e:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0111d42	obj/kernel.asm	/^c0111d42:	74 05                	je     c0111d49 <sfs_io_nolock+0x175>$/;"	l
c0111d44	obj/kernel.asm	/^c0111d44:	e9 11 01 00 00       	jmp    c0111e5a <sfs_io_nolock+0x286>$/;"	l
c0111d49	obj/kernel.asm	/^c0111d49:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0111d4c	obj/kernel.asm	/^c0111d4c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111d4f	obj/kernel.asm	/^c0111d4f:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
c0111d52	obj/kernel.asm	/^c0111d52:	50                   	push   %eax$/;"	l
c0111d53	obj/kernel.asm	/^c0111d53:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c0111d56	obj/kernel.asm	/^c0111d56:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0111d59	obj/kernel.asm	/^c0111d59:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111d5c	obj/kernel.asm	/^c0111d5c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111d5f	obj/kernel.asm	/^c0111d5f:	ff d0                	call   *%eax$/;"	l
c0111d61	obj/kernel.asm	/^c0111d61:	83 c4 20             	add    $0x20,%esp$/;"	l
c0111d64	obj/kernel.asm	/^c0111d64:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111d67	obj/kernel.asm	/^c0111d67:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0111d6b	obj/kernel.asm	/^c0111d6b:	74 05                	je     c0111d72 <sfs_io_nolock+0x19e>$/;"	l
c0111d6d	obj/kernel.asm	/^c0111d6d:	e9 e8 00 00 00       	jmp    c0111e5a <sfs_io_nolock+0x286>$/;"	l
c0111d72	obj/kernel.asm	/^c0111d72:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0111d75	obj/kernel.asm	/^c0111d75:	01 45 e4             	add    %eax,-0x1c(%ebp)$/;"	l
c0111d78	obj/kernel.asm	/^c0111d78:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0111d7c	obj/kernel.asm	/^c0111d7c:	75 05                	jne    c0111d83 <sfs_io_nolock+0x1af>$/;"	l
c0111d7e	obj/kernel.asm	/^c0111d7e:	e9 d7 00 00 00       	jmp    c0111e5a <sfs_io_nolock+0x286>$/;"	l
c0111d83	obj/kernel.asm	/^c0111d83:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0111d86	obj/kernel.asm	/^c0111d86:	01 45 10             	add    %eax,0x10(%ebp)$/;"	l
c0111d89	obj/kernel.asm	/^c0111d89:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
c0111d8d	obj/kernel.asm	/^c0111d8d:	83 6d dc 01          	subl   $0x1,-0x24(%ebp)$/;"	l
c0111d91	obj/kernel.asm	/^c0111d91:	c7 45 d0 00 10 00 00 	movl   $0x1000,-0x30(%ebp)$/;"	l
c0111d98	obj/kernel.asm	/^c0111d98:	eb 56                	jmp    c0111df0 <sfs_io_nolock+0x21c>$/;"	l
c0111d9a	obj/kernel.asm	/^c0111d9a:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c0111d9d	obj/kernel.asm	/^c0111d9d:	50                   	push   %eax$/;"	l
c0111d9e	obj/kernel.asm	/^c0111d9e:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0111da1	obj/kernel.asm	/^c0111da1:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111da4	obj/kernel.asm	/^c0111da4:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111da7	obj/kernel.asm	/^c0111da7:	e8 98 f9 ff ff       	call   c0111744 <sfs_bmap_load_nolock>$/;"	l
c0111dac	obj/kernel.asm	/^c0111dac:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111daf	obj/kernel.asm	/^c0111daf:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111db2	obj/kernel.asm	/^c0111db2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0111db6	obj/kernel.asm	/^c0111db6:	74 05                	je     c0111dbd <sfs_io_nolock+0x1e9>$/;"	l
c0111db8	obj/kernel.asm	/^c0111db8:	e9 9d 00 00 00       	jmp    c0111e5a <sfs_io_nolock+0x286>$/;"	l
c0111dbd	obj/kernel.asm	/^c0111dbd:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0111dc0	obj/kernel.asm	/^c0111dc0:	6a 01                	push   $0x1$/;"	l
c0111dc2	obj/kernel.asm	/^c0111dc2:	50                   	push   %eax$/;"	l
c0111dc3	obj/kernel.asm	/^c0111dc3:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0111dc6	obj/kernel.asm	/^c0111dc6:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111dc9	obj/kernel.asm	/^c0111dc9:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111dcc	obj/kernel.asm	/^c0111dcc:	ff d0                	call   *%eax$/;"	l
c0111dce	obj/kernel.asm	/^c0111dce:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111dd1	obj/kernel.asm	/^c0111dd1:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111dd4	obj/kernel.asm	/^c0111dd4:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0111dd8	obj/kernel.asm	/^c0111dd8:	74 02                	je     c0111ddc <sfs_io_nolock+0x208>$/;"	l
c0111dda	obj/kernel.asm	/^c0111dda:	eb 7e                	jmp    c0111e5a <sfs_io_nolock+0x286>$/;"	l
c0111ddc	obj/kernel.asm	/^c0111ddc:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0111ddf	obj/kernel.asm	/^c0111ddf:	01 45 e4             	add    %eax,-0x1c(%ebp)$/;"	l
c0111de2	obj/kernel.asm	/^c0111de2:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0111de5	obj/kernel.asm	/^c0111de5:	01 45 10             	add    %eax,0x10(%ebp)$/;"	l
c0111de8	obj/kernel.asm	/^c0111de8:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
c0111dec	obj/kernel.asm	/^c0111dec:	83 6d dc 01          	subl   $0x1,-0x24(%ebp)$/;"	l
c0111df0	obj/kernel.asm	/^c0111df0:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0111df4	obj/kernel.asm	/^c0111df4:	75 a4                	jne    c0111d9a <sfs_io_nolock+0x1c6>$/;"	l
c0111df6	obj/kernel.asm	/^c0111df6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111df9	obj/kernel.asm	/^c0111df9:	99                   	cltd   $/;"	l
c0111dfa	obj/kernel.asm	/^c0111dfa:	c1 ea 14             	shr    $0x14,%edx$/;"	l
c0111dfd	obj/kernel.asm	/^c0111dfd:	01 d0                	add    %edx,%eax$/;"	l
c0111dff	obj/kernel.asm	/^c0111dff:	25 ff 0f 00 00       	and    $0xfff,%eax$/;"	l
c0111e04	obj/kernel.asm	/^c0111e04:	29 d0                	sub    %edx,%eax$/;"	l
c0111e06	obj/kernel.asm	/^c0111e06:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0111e09	obj/kernel.asm	/^c0111e09:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c0111e0d	obj/kernel.asm	/^c0111e0d:	74 4b                	je     c0111e5a <sfs_io_nolock+0x286>$/;"	l
c0111e0f	obj/kernel.asm	/^c0111e0f:	8d 45 cc             	lea    -0x34(%ebp),%eax$/;"	l
c0111e12	obj/kernel.asm	/^c0111e12:	50                   	push   %eax$/;"	l
c0111e13	obj/kernel.asm	/^c0111e13:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0111e16	obj/kernel.asm	/^c0111e16:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111e19	obj/kernel.asm	/^c0111e19:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111e1c	obj/kernel.asm	/^c0111e1c:	e8 23 f9 ff ff       	call   c0111744 <sfs_bmap_load_nolock>$/;"	l
c0111e21	obj/kernel.asm	/^c0111e21:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111e24	obj/kernel.asm	/^c0111e24:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111e27	obj/kernel.asm	/^c0111e27:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0111e2b	obj/kernel.asm	/^c0111e2b:	74 02                	je     c0111e2f <sfs_io_nolock+0x25b>$/;"	l
c0111e2d	obj/kernel.asm	/^c0111e2d:	eb 2b                	jmp    c0111e5a <sfs_io_nolock+0x286>$/;"	l
c0111e2f	obj/kernel.asm	/^c0111e2f:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0111e32	obj/kernel.asm	/^c0111e32:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111e35	obj/kernel.asm	/^c0111e35:	6a 00                	push   $0x0$/;"	l
c0111e37	obj/kernel.asm	/^c0111e37:	50                   	push   %eax$/;"	l
c0111e38	obj/kernel.asm	/^c0111e38:	ff 75 d0             	pushl  -0x30(%ebp)$/;"	l
c0111e3b	obj/kernel.asm	/^c0111e3b:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0111e3e	obj/kernel.asm	/^c0111e3e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111e41	obj/kernel.asm	/^c0111e41:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0111e44	obj/kernel.asm	/^c0111e44:	ff d0                	call   *%eax$/;"	l
c0111e46	obj/kernel.asm	/^c0111e46:	83 c4 20             	add    $0x20,%esp$/;"	l
c0111e49	obj/kernel.asm	/^c0111e49:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111e4c	obj/kernel.asm	/^c0111e4c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0111e50	obj/kernel.asm	/^c0111e50:	74 02                	je     c0111e54 <sfs_io_nolock+0x280>$/;"	l
c0111e52	obj/kernel.asm	/^c0111e52:	eb 06                	jmp    c0111e5a <sfs_io_nolock+0x286>$/;"	l
c0111e54	obj/kernel.asm	/^c0111e54:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0111e57	obj/kernel.asm	/^c0111e57:	01 45 e4             	add    %eax,-0x1c(%ebp)$/;"	l
c0111e5a	obj/kernel.asm	/^c0111e5a:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0111e5d	obj/kernel.asm	/^c0111e5d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0111e60	obj/kernel.asm	/^c0111e60:	89 10                	mov    %edx,(%eax)$/;"	l
c0111e62	obj/kernel.asm	/^c0111e62:	8b 55 14             	mov    0x14(%ebp),%edx$/;"	l
c0111e65	obj/kernel.asm	/^c0111e65:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111e68	obj/kernel.asm	/^c0111e68:	01 c2                	add    %eax,%edx$/;"	l
c0111e6a	obj/kernel.asm	/^c0111e6a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111e6d	obj/kernel.asm	/^c0111e6d:	8b 00                	mov    (%eax),%eax$/;"	l
c0111e6f	obj/kernel.asm	/^c0111e6f:	8b 00                	mov    (%eax),%eax$/;"	l
c0111e71	obj/kernel.asm	/^c0111e71:	39 c2                	cmp    %eax,%edx$/;"	l
c0111e73	obj/kernel.asm	/^c0111e73:	76 19                	jbe    c0111e8e <sfs_io_nolock+0x2ba>$/;"	l
c0111e75	obj/kernel.asm	/^c0111e75:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111e78	obj/kernel.asm	/^c0111e78:	8b 00                	mov    (%eax),%eax$/;"	l
c0111e7a	obj/kernel.asm	/^c0111e7a:	8b 4d 14             	mov    0x14(%ebp),%ecx$/;"	l
c0111e7d	obj/kernel.asm	/^c0111e7d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0111e80	obj/kernel.asm	/^c0111e80:	01 ca                	add    %ecx,%edx$/;"	l
c0111e82	obj/kernel.asm	/^c0111e82:	89 10                	mov    %edx,(%eax)$/;"	l
c0111e84	obj/kernel.asm	/^c0111e84:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111e87	obj/kernel.asm	/^c0111e87:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0111e8e	obj/kernel.asm	/^c0111e8e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0111e91	obj/kernel.asm	/^c0111e91:	c9                   	leave  $/;"	l
c0111e92	obj/kernel.asm	/^c0111e92:	c3                   	ret    $/;"	l
c0111e93	obj/kernel.asm	/^c0111e93 <sfs_io>:$/;"	l
c0111e93	obj/kernel.asm	/^c0111e93:	55                   	push   %ebp$/;"	l
c0111e94	obj/kernel.asm	/^c0111e94:	89 e5                	mov    %esp,%ebp$/;"	l
c0111e96	obj/kernel.asm	/^c0111e96:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0111e99	obj/kernel.asm	/^c0111e99:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111e9c	obj/kernel.asm	/^c0111e9c:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0111e9f	obj/kernel.asm	/^c0111e9f:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111ea2	obj/kernel.asm	/^c0111ea2:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111ea6	obj/kernel.asm	/^c0111ea6:	74 0a                	je     c0111eb2 <sfs_io+0x1f>$/;"	l
c0111ea8	obj/kernel.asm	/^c0111ea8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111eab	obj/kernel.asm	/^c0111eab:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0111eae	obj/kernel.asm	/^c0111eae:	85 c0                	test   %eax,%eax$/;"	l
c0111eb0	obj/kernel.asm	/^c0111eb0:	74 19                	je     c0111ecb <sfs_io+0x38>$/;"	l
c0111eb2	obj/kernel.asm	/^c0111eb2:	68 14 81 11 c0       	push   $0xc0118114$/;"	l
c0111eb7	obj/kernel.asm	/^c0111eb7:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0111ebc	obj/kernel.asm	/^c0111ebc:	68 8c 02 00 00       	push   $0x28c$/;"	l
c0111ec1	obj/kernel.asm	/^c0111ec1:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0111ec6	obj/kernel.asm	/^c0111ec6:	e8 04 e6 fe ff       	call   c01004cf <__panic>$/;"	l
c0111ecb	obj/kernel.asm	/^c0111ecb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111ece	obj/kernel.asm	/^c0111ece:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0111ed1	obj/kernel.asm	/^c0111ed1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111ed4	obj/kernel.asm	/^c0111ed4:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0111ed7	obj/kernel.asm	/^c0111ed7:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0111edb	obj/kernel.asm	/^c0111edb:	74 0d                	je     c0111eea <sfs_io+0x57>$/;"	l
c0111edd	obj/kernel.asm	/^c0111edd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111ee0	obj/kernel.asm	/^c0111ee0:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0111ee3	obj/kernel.asm	/^c0111ee3:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0111ee8	obj/kernel.asm	/^c0111ee8:	74 19                	je     c0111f03 <sfs_io+0x70>$/;"	l
c0111eea	obj/kernel.asm	/^c0111eea:	68 10 7f 11 c0       	push   $0xc0117f10$/;"	l
c0111eef	obj/kernel.asm	/^c0111eef:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0111ef4	obj/kernel.asm	/^c0111ef4:	68 8d 02 00 00       	push   $0x28d$/;"	l
c0111ef9	obj/kernel.asm	/^c0111ef9:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0111efe	obj/kernel.asm	/^c0111efe:	e8 cc e5 fe ff       	call   c01004cf <__panic>$/;"	l
c0111f03	obj/kernel.asm	/^c0111f03:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0111f06	obj/kernel.asm	/^c0111f06:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0111f09	obj/kernel.asm	/^c0111f09:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111f0c	obj/kernel.asm	/^c0111f0c:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0111f0f	obj/kernel.asm	/^c0111f0f:	e8 45 ee ff ff       	call   c0110d59 <lock_sin>$/;"	l
c0111f14	obj/kernel.asm	/^c0111f14:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111f17	obj/kernel.asm	/^c0111f17:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111f1a	obj/kernel.asm	/^c0111f1a:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0111f1d	obj/kernel.asm	/^c0111f1d:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0111f20	obj/kernel.asm	/^c0111f20:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111f23	obj/kernel.asm	/^c0111f23:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0111f26	obj/kernel.asm	/^c0111f26:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0111f29	obj/kernel.asm	/^c0111f29:	8b 00                	mov    (%eax),%eax$/;"	l
c0111f2b	obj/kernel.asm	/^c0111f2b:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111f2e	obj/kernel.asm	/^c0111f2e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0111f31	obj/kernel.asm	/^c0111f31:	8d 4d e0             	lea    -0x20(%ebp),%ecx$/;"	l
c0111f34	obj/kernel.asm	/^c0111f34:	51                   	push   %ecx$/;"	l
c0111f35	obj/kernel.asm	/^c0111f35:	52                   	push   %edx$/;"	l
c0111f36	obj/kernel.asm	/^c0111f36:	50                   	push   %eax$/;"	l
c0111f37	obj/kernel.asm	/^c0111f37:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0111f3a	obj/kernel.asm	/^c0111f3a:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0111f3d	obj/kernel.asm	/^c0111f3d:	e8 92 fc ff ff       	call   c0111bd4 <sfs_io_nolock>$/;"	l
c0111f42	obj/kernel.asm	/^c0111f42:	83 c4 20             	add    $0x20,%esp$/;"	l
c0111f45	obj/kernel.asm	/^c0111f45:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0111f48	obj/kernel.asm	/^c0111f48:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111f4b	obj/kernel.asm	/^c0111f4b:	85 c0                	test   %eax,%eax$/;"	l
c0111f4d	obj/kernel.asm	/^c0111f4d:	74 12                	je     c0111f61 <sfs_io+0xce>$/;"	l
c0111f4f	obj/kernel.asm	/^c0111f4f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0111f52	obj/kernel.asm	/^c0111f52:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111f55	obj/kernel.asm	/^c0111f55:	50                   	push   %eax$/;"	l
c0111f56	obj/kernel.asm	/^c0111f56:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111f59	obj/kernel.asm	/^c0111f59:	e8 36 8f ff ff       	call   c010ae94 <iobuf_skip>$/;"	l
c0111f5e	obj/kernel.asm	/^c0111f5e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111f61	obj/kernel.asm	/^c0111f61:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0111f64	obj/kernel.asm	/^c0111f64:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0111f67	obj/kernel.asm	/^c0111f67:	e8 07 ee ff ff       	call   c0110d73 <unlock_sin>$/;"	l
c0111f6c	obj/kernel.asm	/^c0111f6c:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111f6f	obj/kernel.asm	/^c0111f6f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0111f72	obj/kernel.asm	/^c0111f72:	c9                   	leave  $/;"	l
c0111f73	obj/kernel.asm	/^c0111f73:	c3                   	ret    $/;"	l
c0111f74	obj/kernel.asm	/^c0111f74 <sfs_read>:$/;"	l
c0111f74	obj/kernel.asm	/^c0111f74:	55                   	push   %ebp$/;"	l
c0111f75	obj/kernel.asm	/^c0111f75:	89 e5                	mov    %esp,%ebp$/;"	l
c0111f77	obj/kernel.asm	/^c0111f77:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111f7a	obj/kernel.asm	/^c0111f7a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0111f7d	obj/kernel.asm	/^c0111f7d:	6a 00                	push   $0x0$/;"	l
c0111f7f	obj/kernel.asm	/^c0111f7f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111f82	obj/kernel.asm	/^c0111f82:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111f85	obj/kernel.asm	/^c0111f85:	e8 09 ff ff ff       	call   c0111e93 <sfs_io>$/;"	l
c0111f8a	obj/kernel.asm	/^c0111f8a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111f8d	obj/kernel.asm	/^c0111f8d:	c9                   	leave  $/;"	l
c0111f8e	obj/kernel.asm	/^c0111f8e:	c3                   	ret    $/;"	l
c0111f8f	obj/kernel.asm	/^c0111f8f <sfs_write>:$/;"	l
c0111f8f	obj/kernel.asm	/^c0111f8f:	55                   	push   %ebp$/;"	l
c0111f90	obj/kernel.asm	/^c0111f90:	89 e5                	mov    %esp,%ebp$/;"	l
c0111f92	obj/kernel.asm	/^c0111f92:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0111f95	obj/kernel.asm	/^c0111f95:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0111f98	obj/kernel.asm	/^c0111f98:	6a 01                	push   $0x1$/;"	l
c0111f9a	obj/kernel.asm	/^c0111f9a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111f9d	obj/kernel.asm	/^c0111f9d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0111fa0	obj/kernel.asm	/^c0111fa0:	e8 ee fe ff ff       	call   c0111e93 <sfs_io>$/;"	l
c0111fa5	obj/kernel.asm	/^c0111fa5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111fa8	obj/kernel.asm	/^c0111fa8:	c9                   	leave  $/;"	l
c0111fa9	obj/kernel.asm	/^c0111fa9:	c3                   	ret    $/;"	l
c0111faa	obj/kernel.asm	/^c0111faa <sfs_fstat>:$/;"	l
c0111faa	obj/kernel.asm	/^c0111faa:	55                   	push   %ebp$/;"	l
c0111fab	obj/kernel.asm	/^c0111fab:	89 e5                	mov    %esp,%ebp$/;"	l
c0111fad	obj/kernel.asm	/^c0111fad:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0111fb0	obj/kernel.asm	/^c0111fb0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0111fb3	obj/kernel.asm	/^c0111fb3:	6a 10                	push   $0x10$/;"	l
c0111fb5	obj/kernel.asm	/^c0111fb5:	6a 00                	push   $0x0$/;"	l
c0111fb7	obj/kernel.asm	/^c0111fb7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0111fba	obj/kernel.asm	/^c0111fba:	e8 d0 17 00 00       	call   c011378f <memset>$/;"	l
c0111fbf	obj/kernel.asm	/^c0111fbf:	83 c4 10             	add    $0x10,%esp$/;"	l
c0111fc2	obj/kernel.asm	/^c0111fc2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0111fc5	obj/kernel.asm	/^c0111fc5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0111fc8	obj/kernel.asm	/^c0111fc8:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0111fcc	obj/kernel.asm	/^c0111fcc:	74 17                	je     c0111fe5 <sfs_fstat+0x3b>$/;"	l
c0111fce	obj/kernel.asm	/^c0111fce:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111fd1	obj/kernel.asm	/^c0111fd1:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0111fd4	obj/kernel.asm	/^c0111fd4:	85 c0                	test   %eax,%eax$/;"	l
c0111fd6	obj/kernel.asm	/^c0111fd6:	74 0d                	je     c0111fe5 <sfs_fstat+0x3b>$/;"	l
c0111fd8	obj/kernel.asm	/^c0111fd8:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0111fdb	obj/kernel.asm	/^c0111fdb:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0111fde	obj/kernel.asm	/^c0111fde:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c0111fe1	obj/kernel.asm	/^c0111fe1:	85 c0                	test   %eax,%eax$/;"	l
c0111fe3	obj/kernel.asm	/^c0111fe3:	75 19                	jne    c0111ffe <sfs_fstat+0x54>$/;"	l
c0111fe5	obj/kernel.asm	/^c0111fe5:	68 40 81 11 c0       	push   $0xc0118140$/;"	l
c0111fea	obj/kernel.asm	/^c0111fea:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0111fef	obj/kernel.asm	/^c0111fef:	68 ae 02 00 00       	push   $0x2ae$/;"	l
c0111ff4	obj/kernel.asm	/^c0111ff4:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0111ff9	obj/kernel.asm	/^c0111ff9:	e8 d1 e4 fe ff       	call   c01004cf <__panic>$/;"	l
c0111ffe	obj/kernel.asm	/^c0111ffe:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0112001	obj/kernel.asm	/^c0112001:	68 90 81 11 c0       	push   $0xc0118190$/;"	l
c0112006	obj/kernel.asm	/^c0112006:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0112009	obj/kernel.asm	/^c0112009:	e8 89 d2 ff ff       	call   c010f297 <inode_check>$/;"	l
c011200e	obj/kernel.asm	/^c011200e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112011	obj/kernel.asm	/^c0112011:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112014	obj/kernel.asm	/^c0112014:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0112017	obj/kernel.asm	/^c0112017:	8b 40 28             	mov    0x28(%eax),%eax$/;"	l
c011201a	obj/kernel.asm	/^c011201a:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c011201d	obj/kernel.asm	/^c011201d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0112020	obj/kernel.asm	/^c0112020:	52                   	push   %edx$/;"	l
c0112021	obj/kernel.asm	/^c0112021:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112024	obj/kernel.asm	/^c0112024:	ff d0                	call   *%eax$/;"	l
c0112026	obj/kernel.asm	/^c0112026:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112029	obj/kernel.asm	/^c0112029:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011202c	obj/kernel.asm	/^c011202c:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112030	obj/kernel.asm	/^c0112030:	74 05                	je     c0112037 <sfs_fstat+0x8d>$/;"	l
c0112032	obj/kernel.asm	/^c0112032:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112035	obj/kernel.asm	/^c0112035:	eb 66                	jmp    c011209d <sfs_fstat+0xf3>$/;"	l
c0112037	obj/kernel.asm	/^c0112037:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011203a	obj/kernel.asm	/^c011203a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011203d	obj/kernel.asm	/^c011203d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0112041	obj/kernel.asm	/^c0112041:	74 0d                	je     c0112050 <sfs_fstat+0xa6>$/;"	l
c0112043	obj/kernel.asm	/^c0112043:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112046	obj/kernel.asm	/^c0112046:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0112049	obj/kernel.asm	/^c0112049:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c011204e	obj/kernel.asm	/^c011204e:	74 19                	je     c0112069 <sfs_fstat+0xbf>$/;"	l
c0112050	obj/kernel.asm	/^c0112050:	68 10 7f 11 c0       	push   $0xc0117f10$/;"	l
c0112055	obj/kernel.asm	/^c0112055:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c011205a	obj/kernel.asm	/^c011205a:	68 b1 02 00 00       	push   $0x2b1$/;"	l
c011205f	obj/kernel.asm	/^c011205f:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0112064	obj/kernel.asm	/^c0112064:	e8 66 e4 fe ff       	call   c01004cf <__panic>$/;"	l
c0112069	obj/kernel.asm	/^c0112069:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011206c	obj/kernel.asm	/^c011206c:	8b 00                	mov    (%eax),%eax$/;"	l
c011206e	obj/kernel.asm	/^c011206e:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112071	obj/kernel.asm	/^c0112071:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112074	obj/kernel.asm	/^c0112074:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c0112078	obj/kernel.asm	/^c0112078:	0f b7 d0             	movzwl %ax,%edx$/;"	l
c011207b	obj/kernel.asm	/^c011207b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011207e	obj/kernel.asm	/^c011207e:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0112081	obj/kernel.asm	/^c0112081:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112084	obj/kernel.asm	/^c0112084:	8b 50 08             	mov    0x8(%eax),%edx$/;"	l
c0112087	obj/kernel.asm	/^c0112087:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011208a	obj/kernel.asm	/^c011208a:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c011208d	obj/kernel.asm	/^c011208d:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112090	obj/kernel.asm	/^c0112090:	8b 10                	mov    (%eax),%edx$/;"	l
c0112092	obj/kernel.asm	/^c0112092:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112095	obj/kernel.asm	/^c0112095:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c0112098	obj/kernel.asm	/^c0112098:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011209d	obj/kernel.asm	/^c011209d:	c9                   	leave  $/;"	l
c011209e	obj/kernel.asm	/^c011209e:	c3                   	ret    $/;"	l
c011209f	obj/kernel.asm	/^c011209f <sfs_fsync>:$/;"	l
c011209f	obj/kernel.asm	/^c011209f:	55                   	push   %ebp$/;"	l
c01120a0	obj/kernel.asm	/^c01120a0:	89 e5                	mov    %esp,%ebp$/;"	l
c01120a2	obj/kernel.asm	/^c01120a2:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01120a5	obj/kernel.asm	/^c01120a5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01120a8	obj/kernel.asm	/^c01120a8:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01120ab	obj/kernel.asm	/^c01120ab:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01120ae	obj/kernel.asm	/^c01120ae:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01120b2	obj/kernel.asm	/^c01120b2:	74 0a                	je     c01120be <sfs_fsync+0x1f>$/;"	l
c01120b4	obj/kernel.asm	/^c01120b4:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01120b7	obj/kernel.asm	/^c01120b7:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c01120ba	obj/kernel.asm	/^c01120ba:	85 c0                	test   %eax,%eax$/;"	l
c01120bc	obj/kernel.asm	/^c01120bc:	74 19                	je     c01120d7 <sfs_fsync+0x38>$/;"	l
c01120be	obj/kernel.asm	/^c01120be:	68 14 81 11 c0       	push   $0xc0118114$/;"	l
c01120c3	obj/kernel.asm	/^c01120c3:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c01120c8	obj/kernel.asm	/^c01120c8:	68 bd 02 00 00       	push   $0x2bd$/;"	l
c01120cd	obj/kernel.asm	/^c01120cd:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c01120d2	obj/kernel.asm	/^c01120d2:	e8 f8 e3 fe ff       	call   c01004cf <__panic>$/;"	l
c01120d7	obj/kernel.asm	/^c01120d7:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01120da	obj/kernel.asm	/^c01120da:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01120dd	obj/kernel.asm	/^c01120dd:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01120e0	obj/kernel.asm	/^c01120e0:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01120e3	obj/kernel.asm	/^c01120e3:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c01120e7	obj/kernel.asm	/^c01120e7:	74 0d                	je     c01120f6 <sfs_fsync+0x57>$/;"	l
c01120e9	obj/kernel.asm	/^c01120e9:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c01120ec	obj/kernel.asm	/^c01120ec:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01120ef	obj/kernel.asm	/^c01120ef:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c01120f4	obj/kernel.asm	/^c01120f4:	74 19                	je     c011210f <sfs_fsync+0x70>$/;"	l
c01120f6	obj/kernel.asm	/^c01120f6:	68 10 7f 11 c0       	push   $0xc0117f10$/;"	l
c01120fb	obj/kernel.asm	/^c01120fb:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0112100	obj/kernel.asm	/^c0112100:	68 be 02 00 00       	push   $0x2be$/;"	l
c0112105	obj/kernel.asm	/^c0112105:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c011210a	obj/kernel.asm	/^c011210a:	e8 c0 e3 fe ff       	call   c01004cf <__panic>$/;"	l
c011210f	obj/kernel.asm	/^c011210f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112112	obj/kernel.asm	/^c0112112:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0112115	obj/kernel.asm	/^c0112115:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c011211c	obj/kernel.asm	/^c011211c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011211f	obj/kernel.asm	/^c011211f:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112122	obj/kernel.asm	/^c0112122:	85 c0                	test   %eax,%eax$/;"	l
c0112124	obj/kernel.asm	/^c0112124:	74 62                	je     c0112188 <sfs_fsync+0xe9>$/;"	l
c0112126	obj/kernel.asm	/^c0112126:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112129	obj/kernel.asm	/^c0112129:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c011212c	obj/kernel.asm	/^c011212c:	e8 28 ec ff ff       	call   c0110d59 <lock_sin>$/;"	l
c0112131	obj/kernel.asm	/^c0112131:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112134	obj/kernel.asm	/^c0112134:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112137	obj/kernel.asm	/^c0112137:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011213a	obj/kernel.asm	/^c011213a:	85 c0                	test   %eax,%eax$/;"	l
c011213c	obj/kernel.asm	/^c011213c:	74 3c                	je     c011217a <sfs_fsync+0xdb>$/;"	l
c011213e	obj/kernel.asm	/^c011213e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112141	obj/kernel.asm	/^c0112141:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%eax)$/;"	l
c0112148	obj/kernel.asm	/^c0112148:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011214b	obj/kernel.asm	/^c011214b:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c011214e	obj/kernel.asm	/^c011214e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112151	obj/kernel.asm	/^c0112151:	8b 00                	mov    (%eax),%eax$/;"	l
c0112153	obj/kernel.asm	/^c0112153:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112156	obj/kernel.asm	/^c0112156:	6a 00                	push   $0x0$/;"	l
c0112158	obj/kernel.asm	/^c0112158:	52                   	push   %edx$/;"	l
c0112159	obj/kernel.asm	/^c0112159:	6a 40                	push   $0x40$/;"	l
c011215b	obj/kernel.asm	/^c011215b:	50                   	push   %eax$/;"	l
c011215c	obj/kernel.asm	/^c011215c:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c011215f	obj/kernel.asm	/^c011215f:	e8 db 10 00 00       	call   c011323f <sfs_wbuf>$/;"	l
c0112164	obj/kernel.asm	/^c0112164:	83 c4 20             	add    $0x20,%esp$/;"	l
c0112167	obj/kernel.asm	/^c0112167:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011216a	obj/kernel.asm	/^c011216a:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011216e	obj/kernel.asm	/^c011216e:	74 0a                	je     c011217a <sfs_fsync+0xdb>$/;"	l
c0112170	obj/kernel.asm	/^c0112170:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112173	obj/kernel.asm	/^c0112173:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c011217a	obj/kernel.asm	/^c011217a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011217d	obj/kernel.asm	/^c011217d:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0112180	obj/kernel.asm	/^c0112180:	e8 ee eb ff ff       	call   c0110d73 <unlock_sin>$/;"	l
c0112185	obj/kernel.asm	/^c0112185:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112188	obj/kernel.asm	/^c0112188:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011218b	obj/kernel.asm	/^c011218b:	c9                   	leave  $/;"	l
c011218c	obj/kernel.asm	/^c011218c:	c3                   	ret    $/;"	l
c011218d	obj/kernel.asm	/^c011218d <sfs_namefile>:$/;"	l
c011218d	obj/kernel.asm	/^c011218d:	55                   	push   %ebp$/;"	l
c011218e	obj/kernel.asm	/^c011218e:	89 e5                	mov    %esp,%ebp$/;"	l
c0112190	obj/kernel.asm	/^c0112190:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112193	obj/kernel.asm	/^c0112193:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112196	obj/kernel.asm	/^c0112196:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0112199	obj/kernel.asm	/^c0112199:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c011219c	obj/kernel.asm	/^c011219c:	76 19                	jbe    c01121b7 <sfs_namefile+0x2a>$/;"	l
c011219e	obj/kernel.asm	/^c011219e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01121a1	obj/kernel.asm	/^c01121a1:	68 04 01 00 00       	push   $0x104$/;"	l
c01121a6	obj/kernel.asm	/^c01121a6:	e8 4b 52 ff ff       	call   c01073f6 <kmalloc>$/;"	l
c01121ab	obj/kernel.asm	/^c01121ab:	83 c4 10             	add    $0x10,%esp$/;"	l
c01121ae	obj/kernel.asm	/^c01121ae:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01121b1	obj/kernel.asm	/^c01121b1:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c01121b5	obj/kernel.asm	/^c01121b5:	75 0a                	jne    c01121c1 <sfs_namefile+0x34>$/;"	l
c01121b7	obj/kernel.asm	/^c01121b7:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01121bc	obj/kernel.asm	/^c01121bc:	e9 8c 02 00 00       	jmp    c011244d <sfs_namefile+0x2c0>$/;"	l
c01121c1	obj/kernel.asm	/^c01121c1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01121c4	obj/kernel.asm	/^c01121c4:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01121c7	obj/kernel.asm	/^c01121c7:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01121ca	obj/kernel.asm	/^c01121ca:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c01121ce	obj/kernel.asm	/^c01121ce:	74 0a                	je     c01121da <sfs_namefile+0x4d>$/;"	l
c01121d0	obj/kernel.asm	/^c01121d0:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01121d3	obj/kernel.asm	/^c01121d3:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c01121d6	obj/kernel.asm	/^c01121d6:	85 c0                	test   %eax,%eax$/;"	l
c01121d8	obj/kernel.asm	/^c01121d8:	74 19                	je     c01121f3 <sfs_namefile+0x66>$/;"	l
c01121da	obj/kernel.asm	/^c01121da:	68 14 81 11 c0       	push   $0xc0118114$/;"	l
c01121df	obj/kernel.asm	/^c01121df:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c01121e4	obj/kernel.asm	/^c01121e4:	68 da 02 00 00       	push   $0x2da$/;"	l
c01121e9	obj/kernel.asm	/^c01121e9:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c01121ee	obj/kernel.asm	/^c01121ee:	e8 dc e2 fe ff       	call   c01004cf <__panic>$/;"	l
c01121f3	obj/kernel.asm	/^c01121f3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c01121f6	obj/kernel.asm	/^c01121f6:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c01121f9	obj/kernel.asm	/^c01121f9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01121fc	obj/kernel.asm	/^c01121fc:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c01121ff	obj/kernel.asm	/^c01121ff:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0112203	obj/kernel.asm	/^c0112203:	74 0d                	je     c0112212 <sfs_namefile+0x85>$/;"	l
c0112205	obj/kernel.asm	/^c0112205:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0112208	obj/kernel.asm	/^c0112208:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011220b	obj/kernel.asm	/^c011220b:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0112210	obj/kernel.asm	/^c0112210:	74 19                	je     c011222b <sfs_namefile+0x9e>$/;"	l
c0112212	obj/kernel.asm	/^c0112212:	68 10 7f 11 c0       	push   $0xc0117f10$/;"	l
c0112217	obj/kernel.asm	/^c0112217:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c011221c	obj/kernel.asm	/^c011221c:	68 db 02 00 00       	push   $0x2db$/;"	l
c0112221	obj/kernel.asm	/^c0112221:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0112226	obj/kernel.asm	/^c0112226:	e8 a4 e2 fe ff       	call   c01004cf <__panic>$/;"	l
c011222b	obj/kernel.asm	/^c011222b:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c011222e	obj/kernel.asm	/^c011222e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112231	obj/kernel.asm	/^c0112231:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112234	obj/kernel.asm	/^c0112234:	8b 10                	mov    (%eax),%edx$/;"	l
c0112236	obj/kernel.asm	/^c0112236:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112239	obj/kernel.asm	/^c0112239:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c011223c	obj/kernel.asm	/^c011223c:	01 d0                	add    %edx,%eax$/;"	l
c011223e	obj/kernel.asm	/^c011223e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112241	obj/kernel.asm	/^c0112241:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112244	obj/kernel.asm	/^c0112244:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c0112247	obj/kernel.asm	/^c0112247:	83 e8 02             	sub    $0x2,%eax$/;"	l
c011224a	obj/kernel.asm	/^c011224a:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011224d	obj/kernel.asm	/^c011224d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112250	obj/kernel.asm	/^c0112250:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112253	obj/kernel.asm	/^c0112253:	e8 6d ce ff ff       	call   c010f0c5 <inode_ref_inc>$/;"	l
c0112258	obj/kernel.asm	/^c0112258:	83 c4 10             	add    $0x10,%esp$/;"	l
c011225b	obj/kernel.asm	/^c011225b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011225e	obj/kernel.asm	/^c011225e:	6a 00                	push   $0x0$/;"	l
c0112260	obj/kernel.asm	/^c0112260:	8d 45 c8             	lea    -0x38(%ebp),%eax$/;"	l
c0112263	obj/kernel.asm	/^c0112263:	50                   	push   %eax$/;"	l
c0112264	obj/kernel.asm	/^c0112264:	68 98 81 11 c0       	push   $0xc0118198$/;"	l
c0112269	obj/kernel.asm	/^c0112269:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c011226c	obj/kernel.asm	/^c011226c:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c011226f	obj/kernel.asm	/^c011226f:	e8 59 f8 ff ff       	call   c0111acd <sfs_lookup_once>$/;"	l
c0112274	obj/kernel.asm	/^c0112274:	83 c4 20             	add    $0x20,%esp$/;"	l
c0112277	obj/kernel.asm	/^c0112277:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011227a	obj/kernel.asm	/^c011227a:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011227e	obj/kernel.asm	/^c011227e:	74 05                	je     c0112285 <sfs_namefile+0xf8>$/;"	l
c0112280	obj/kernel.asm	/^c0112280:	e9 a9 01 00 00       	jmp    c011242e <sfs_namefile+0x2a1>$/;"	l
c0112285	obj/kernel.asm	/^c0112285:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112288	obj/kernel.asm	/^c0112288:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011228b	obj/kernel.asm	/^c011228b:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c011228e	obj/kernel.asm	/^c011228e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112291	obj/kernel.asm	/^c0112291:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112294	obj/kernel.asm	/^c0112294:	e8 46 ce ff ff       	call   c010f0df <inode_ref_dec>$/;"	l
c0112299	obj/kernel.asm	/^c0112299:	83 c4 10             	add    $0x10,%esp$/;"	l
c011229c	obj/kernel.asm	/^c011229c:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c011229f	obj/kernel.asm	/^c011229f:	39 45 08             	cmp    %eax,0x8(%ebp)$/;"	l
c01122a2	obj/kernel.asm	/^c01122a2:	75 77                	jne    c011231b <sfs_namefile+0x18e>$/;"	l
c01122a4	obj/kernel.asm	/^c01122a4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01122a7	obj/kernel.asm	/^c01122a7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01122aa	obj/kernel.asm	/^c01122aa:	e8 30 ce ff ff       	call   c010f0df <inode_ref_dec>$/;"	l
c01122af	obj/kernel.asm	/^c01122af:	83 c4 10             	add    $0x10,%esp$/;"	l
c01122b2	obj/kernel.asm	/^c01122b2:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01122b5	obj/kernel.asm	/^c01122b5:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01122b8	obj/kernel.asm	/^c01122b8:	2b 45 e8             	sub    -0x18(%ebp),%eax$/;"	l
c01122bb	obj/kernel.asm	/^c01122bb:	83 e8 02             	sub    $0x2,%eax$/;"	l
c01122be	obj/kernel.asm	/^c01122be:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01122c1	obj/kernel.asm	/^c01122c1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01122c4	obj/kernel.asm	/^c01122c4:	8b 00                	mov    (%eax),%eax$/;"	l
c01122c6	obj/kernel.asm	/^c01122c6:	83 c0 01             	add    $0x1,%eax$/;"	l
c01122c9	obj/kernel.asm	/^c01122c9:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01122cc	obj/kernel.asm	/^c01122cc:	ff 75 cc             	pushl  -0x34(%ebp)$/;"	l
c01122cf	obj/kernel.asm	/^c01122cf:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01122d2	obj/kernel.asm	/^c01122d2:	50                   	push   %eax$/;"	l
c01122d3	obj/kernel.asm	/^c01122d3:	e8 f7 14 00 00       	call   c01137cf <memmove>$/;"	l
c01122d8	obj/kernel.asm	/^c01122d8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01122db	obj/kernel.asm	/^c01122db:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01122de	obj/kernel.asm	/^c01122de:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01122e1	obj/kernel.asm	/^c01122e1:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01122e4	obj/kernel.asm	/^c01122e4:	c6 00 2f             	movb   $0x2f,(%eax)$/;"	l
c01122e7	obj/kernel.asm	/^c01122e7:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c01122ea	obj/kernel.asm	/^c01122ea:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01122ed	obj/kernel.asm	/^c01122ed:	01 d0                	add    %edx,%eax$/;"	l
c01122ef	obj/kernel.asm	/^c01122ef:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c01122f2	obj/kernel.asm	/^c01122f2:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01122f5	obj/kernel.asm	/^c01122f5:	ff 75 cc             	pushl  -0x34(%ebp)$/;"	l
c01122f8	obj/kernel.asm	/^c01122f8:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01122fb	obj/kernel.asm	/^c01122fb:	e8 94 8b ff ff       	call   c010ae94 <iobuf_skip>$/;"	l
c0112300	obj/kernel.asm	/^c0112300:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112303	obj/kernel.asm	/^c0112303:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112306	obj/kernel.asm	/^c0112306:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0112309	obj/kernel.asm	/^c0112309:	e8 00 51 ff ff       	call   c010740e <kfree>$/;"	l
c011230e	obj/kernel.asm	/^c011230e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112311	obj/kernel.asm	/^c0112311:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112316	obj/kernel.asm	/^c0112316:	e9 32 01 00 00       	jmp    c011244d <sfs_namefile+0x2c0>$/;"	l
c011231b	obj/kernel.asm	/^c011231b:	8b 45 c8             	mov    -0x38(%ebp),%eax$/;"	l
c011231e	obj/kernel.asm	/^c011231e:	89 45 08             	mov    %eax,0x8(%ebp)$/;"	l
c0112321	obj/kernel.asm	/^c0112321:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112324	obj/kernel.asm	/^c0112324:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0112327	obj/kernel.asm	/^c0112327:	83 7d d0 00          	cmpl   $0x0,-0x30(%ebp)$/;"	l
c011232b	obj/kernel.asm	/^c011232b:	74 0d                	je     c011233a <sfs_namefile+0x1ad>$/;"	l
c011232d	obj/kernel.asm	/^c011232d:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0112330	obj/kernel.asm	/^c0112330:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0112333	obj/kernel.asm	/^c0112333:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0112338	obj/kernel.asm	/^c0112338:	74 19                	je     c0112353 <sfs_namefile+0x1c6>$/;"	l
c011233a	obj/kernel.asm	/^c011233a:	68 10 7f 11 c0       	push   $0xc0117f10$/;"	l
c011233f	obj/kernel.asm	/^c011233f:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0112344	obj/kernel.asm	/^c0112344:	68 ee 02 00 00       	push   $0x2ee$/;"	l
c0112349	obj/kernel.asm	/^c0112349:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c011234e	obj/kernel.asm	/^c011234e:	e8 7c e1 fe ff       	call   c01004cf <__panic>$/;"	l
c0112353	obj/kernel.asm	/^c0112353:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c0112356	obj/kernel.asm	/^c0112356:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112359	obj/kernel.asm	/^c0112359:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011235c	obj/kernel.asm	/^c011235c:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011235f	obj/kernel.asm	/^c011235f:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0112362	obj/kernel.asm	/^c0112362:	74 0f                	je     c0112373 <sfs_namefile+0x1e6>$/;"	l
c0112364	obj/kernel.asm	/^c0112364:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112367	obj/kernel.asm	/^c0112367:	8b 00                	mov    (%eax),%eax$/;"	l
c0112369	obj/kernel.asm	/^c0112369:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c011236d	obj/kernel.asm	/^c011236d:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c0112371	obj/kernel.asm	/^c0112371:	74 19                	je     c011238c <sfs_namefile+0x1ff>$/;"	l
c0112373	obj/kernel.asm	/^c0112373:	68 9c 81 11 c0       	push   $0xc011819c$/;"	l
c0112378	obj/kernel.asm	/^c0112378:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c011237d	obj/kernel.asm	/^c011237d:	68 ef 02 00 00       	push   $0x2ef$/;"	l
c0112382	obj/kernel.asm	/^c0112382:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0112387	obj/kernel.asm	/^c0112387:	e8 43 e1 fe ff       	call   c01004cf <__panic>$/;"	l
c011238c	obj/kernel.asm	/^c011238c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011238f	obj/kernel.asm	/^c011238f:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0112392	obj/kernel.asm	/^c0112392:	e8 c2 e9 ff ff       	call   c0110d59 <lock_sin>$/;"	l
c0112397	obj/kernel.asm	/^c0112397:	83 c4 10             	add    $0x10,%esp$/;"	l
c011239a	obj/kernel.asm	/^c011239a:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c011239d	obj/kernel.asm	/^c011239d:	ff 75 d4             	pushl  -0x2c(%ebp)$/;"	l
c01123a0	obj/kernel.asm	/^c01123a0:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01123a3	obj/kernel.asm	/^c01123a3:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c01123a6	obj/kernel.asm	/^c01123a6:	e8 c2 f6 ff ff       	call   c0111a6d <sfs_dirent_findino_nolock>$/;"	l
c01123ab	obj/kernel.asm	/^c01123ab:	83 c4 10             	add    $0x10,%esp$/;"	l
c01123ae	obj/kernel.asm	/^c01123ae:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01123b1	obj/kernel.asm	/^c01123b1:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01123b4	obj/kernel.asm	/^c01123b4:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01123b7	obj/kernel.asm	/^c01123b7:	e8 b7 e9 ff ff       	call   c0110d73 <unlock_sin>$/;"	l
c01123bc	obj/kernel.asm	/^c01123bc:	83 c4 10             	add    $0x10,%esp$/;"	l
c01123bf	obj/kernel.asm	/^c01123bf:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01123c3	obj/kernel.asm	/^c01123c3:	74 03                	je     c01123c8 <sfs_namefile+0x23b>$/;"	l
c01123c5	obj/kernel.asm	/^c01123c5:	90                   	nop$/;"	l
c01123c6	obj/kernel.asm	/^c01123c6:	eb 66                	jmp    c011242e <sfs_namefile+0x2a1>$/;"	l
c01123c8	obj/kernel.asm	/^c01123c8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01123cb	obj/kernel.asm	/^c01123cb:	83 c0 04             	add    $0x4,%eax$/;"	l
c01123ce	obj/kernel.asm	/^c01123ce:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01123d1	obj/kernel.asm	/^c01123d1:	50                   	push   %eax$/;"	l
c01123d2	obj/kernel.asm	/^c01123d2:	e8 5e 10 00 00       	call   c0113435 <strlen>$/;"	l
c01123d7	obj/kernel.asm	/^c01123d7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01123da	obj/kernel.asm	/^c01123da:	83 c0 01             	add    $0x1,%eax$/;"	l
c01123dd	obj/kernel.asm	/^c01123dd:	89 45 cc             	mov    %eax,-0x34(%ebp)$/;"	l
c01123e0	obj/kernel.asm	/^c01123e0:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01123e3	obj/kernel.asm	/^c01123e3:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c01123e6	obj/kernel.asm	/^c01123e6:	76 09                	jbe    c01123f1 <sfs_namefile+0x264>$/;"	l
c01123e8	obj/kernel.asm	/^c01123e8:	c7 45 f0 fc ff ff ff 	movl   $0xfffffffc,-0x10(%ebp)$/;"	l
c01123ef	obj/kernel.asm	/^c01123ef:	eb 3d                	jmp    c011242e <sfs_namefile+0x2a1>$/;"	l
c01123f1	obj/kernel.asm	/^c01123f1:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01123f4	obj/kernel.asm	/^c01123f4:	29 45 e8             	sub    %eax,-0x18(%ebp)$/;"	l
c01123f7	obj/kernel.asm	/^c01123f7:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c01123fa	obj/kernel.asm	/^c01123fa:	f7 d8                	neg    %eax$/;"	l
c01123fc	obj/kernel.asm	/^c01123fc:	01 45 ec             	add    %eax,-0x14(%ebp)$/;"	l
c01123ff	obj/kernel.asm	/^c01123ff:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c0112402	obj/kernel.asm	/^c0112402:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0112405	obj/kernel.asm	/^c0112405:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112408	obj/kernel.asm	/^c0112408:	83 c0 04             	add    $0x4,%eax$/;"	l
c011240b	obj/kernel.asm	/^c011240b:	83 ec 04             	sub    $0x4,%esp$/;"	l
c011240e	obj/kernel.asm	/^c011240e:	52                   	push   %edx$/;"	l
c011240f	obj/kernel.asm	/^c011240f:	50                   	push   %eax$/;"	l
c0112410	obj/kernel.asm	/^c0112410:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0112413	obj/kernel.asm	/^c0112413:	e8 5a 14 00 00       	call   c0113872 <memcpy>$/;"	l
c0112418	obj/kernel.asm	/^c0112418:	83 c4 10             	add    $0x10,%esp$/;"	l
c011241b	obj/kernel.asm	/^c011241b:	8b 45 cc             	mov    -0x34(%ebp),%eax$/;"	l
c011241e	obj/kernel.asm	/^c011241e:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0112421	obj/kernel.asm	/^c0112421:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112424	obj/kernel.asm	/^c0112424:	01 d0                	add    %edx,%eax$/;"	l
c0112426	obj/kernel.asm	/^c0112426:	c6 00 2f             	movb   $0x2f,(%eax)$/;"	l
c0112429	obj/kernel.asm	/^c0112429:	e9 2d fe ff ff       	jmp    c011225b <sfs_namefile+0xce>$/;"	l
c011242e	obj/kernel.asm	/^c011242e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112431	obj/kernel.asm	/^c0112431:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112434	obj/kernel.asm	/^c0112434:	e8 a6 cc ff ff       	call   c010f0df <inode_ref_dec>$/;"	l
c0112439	obj/kernel.asm	/^c0112439:	83 c4 10             	add    $0x10,%esp$/;"	l
c011243c	obj/kernel.asm	/^c011243c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011243f	obj/kernel.asm	/^c011243f:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0112442	obj/kernel.asm	/^c0112442:	e8 c7 4f ff ff       	call   c010740e <kfree>$/;"	l
c0112447	obj/kernel.asm	/^c0112447:	83 c4 10             	add    $0x10,%esp$/;"	l
c011244a	obj/kernel.asm	/^c011244a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011244d	obj/kernel.asm	/^c011244d:	c9                   	leave  $/;"	l
c011244e	obj/kernel.asm	/^c011244e:	c3                   	ret    $/;"	l
c011244f	obj/kernel.asm	/^c011244f <sfs_getdirentry_sub_nolock>:$/;"	l
c011244f	obj/kernel.asm	/^c011244f:	55                   	push   %ebp$/;"	l
c0112450	obj/kernel.asm	/^c0112450:	89 e5                	mov    %esp,%ebp$/;"	l
c0112452	obj/kernel.asm	/^c0112452:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0112455	obj/kernel.asm	/^c0112455:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112458	obj/kernel.asm	/^c0112458:	8b 00                	mov    (%eax),%eax$/;"	l
c011245a	obj/kernel.asm	/^c011245a:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c011245d	obj/kernel.asm	/^c011245d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112460	obj/kernel.asm	/^c0112460:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0112467	obj/kernel.asm	/^c0112467:	eb 40                	jmp    c01124a9 <sfs_getdirentry_sub_nolock+0x5a>$/;"	l
c0112469	obj/kernel.asm	/^c0112469:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c011246c	obj/kernel.asm	/^c011246c:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c011246f	obj/kernel.asm	/^c011246f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0112472	obj/kernel.asm	/^c0112472:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112475	obj/kernel.asm	/^c0112475:	e8 0a f4 ff ff       	call   c0111884 <sfs_dirent_read_nolock>$/;"	l
c011247a	obj/kernel.asm	/^c011247a:	83 c4 10             	add    $0x10,%esp$/;"	l
c011247d	obj/kernel.asm	/^c011247d:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112480	obj/kernel.asm	/^c0112480:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0112484	obj/kernel.asm	/^c0112484:	74 05                	je     c011248b <sfs_getdirentry_sub_nolock+0x3c>$/;"	l
c0112486	obj/kernel.asm	/^c0112486:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112489	obj/kernel.asm	/^c0112489:	eb 2b                	jmp    c01124b6 <sfs_getdirentry_sub_nolock+0x67>$/;"	l
c011248b	obj/kernel.asm	/^c011248b:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c011248e	obj/kernel.asm	/^c011248e:	8b 00                	mov    (%eax),%eax$/;"	l
c0112490	obj/kernel.asm	/^c0112490:	85 c0                	test   %eax,%eax$/;"	l
c0112492	obj/kernel.asm	/^c0112492:	74 11                	je     c01124a5 <sfs_getdirentry_sub_nolock+0x56>$/;"	l
c0112494	obj/kernel.asm	/^c0112494:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0112498	obj/kernel.asm	/^c0112498:	75 07                	jne    c01124a1 <sfs_getdirentry_sub_nolock+0x52>$/;"	l
c011249a	obj/kernel.asm	/^c011249a:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011249f	obj/kernel.asm	/^c011249f:	eb 15                	jmp    c01124b6 <sfs_getdirentry_sub_nolock+0x67>$/;"	l
c01124a1	obj/kernel.asm	/^c01124a1:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c01124a5	obj/kernel.asm	/^c01124a5:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c01124a9	obj/kernel.asm	/^c01124a9:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01124ac	obj/kernel.asm	/^c01124ac:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c01124af	obj/kernel.asm	/^c01124af:	7c b8                	jl     c0112469 <sfs_getdirentry_sub_nolock+0x1a>$/;"	l
c01124b1	obj/kernel.asm	/^c01124b1:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c01124b6	obj/kernel.asm	/^c01124b6:	c9                   	leave  $/;"	l
c01124b7	obj/kernel.asm	/^c01124b7:	c3                   	ret    $/;"	l
c01124b8	obj/kernel.asm	/^c01124b8 <sfs_getdirentry>:$/;"	l
c01124b8	obj/kernel.asm	/^c01124b8:	55                   	push   %ebp$/;"	l
c01124b9	obj/kernel.asm	/^c01124b9:	89 e5                	mov    %esp,%ebp$/;"	l
c01124bb	obj/kernel.asm	/^c01124bb:	83 ec 28             	sub    $0x28,%esp$/;"	l
c01124be	obj/kernel.asm	/^c01124be:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01124c1	obj/kernel.asm	/^c01124c1:	68 04 01 00 00       	push   $0x104$/;"	l
c01124c6	obj/kernel.asm	/^c01124c6:	e8 2b 4f ff ff       	call   c01073f6 <kmalloc>$/;"	l
c01124cb	obj/kernel.asm	/^c01124cb:	83 c4 10             	add    $0x10,%esp$/;"	l
c01124ce	obj/kernel.asm	/^c01124ce:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01124d1	obj/kernel.asm	/^c01124d1:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c01124d5	obj/kernel.asm	/^c01124d5:	75 0a                	jne    c01124e1 <sfs_getdirentry+0x29>$/;"	l
c01124d7	obj/kernel.asm	/^c01124d7:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c01124dc	obj/kernel.asm	/^c01124dc:	e9 49 01 00 00       	jmp    c011262a <sfs_getdirentry+0x172>$/;"	l
c01124e1	obj/kernel.asm	/^c01124e1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01124e4	obj/kernel.asm	/^c01124e4:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01124e7	obj/kernel.asm	/^c01124e7:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01124ea	obj/kernel.asm	/^c01124ea:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01124ee	obj/kernel.asm	/^c01124ee:	74 0a                	je     c01124fa <sfs_getdirentry+0x42>$/;"	l
c01124f0	obj/kernel.asm	/^c01124f0:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01124f3	obj/kernel.asm	/^c01124f3:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c01124f6	obj/kernel.asm	/^c01124f6:	85 c0                	test   %eax,%eax$/;"	l
c01124f8	obj/kernel.asm	/^c01124f8:	74 19                	je     c0112513 <sfs_getdirentry+0x5b>$/;"	l
c01124fa	obj/kernel.asm	/^c01124fa:	68 14 81 11 c0       	push   $0xc0118114$/;"	l
c01124ff	obj/kernel.asm	/^c01124ff:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0112504	obj/kernel.asm	/^c0112504:	68 30 03 00 00       	push   $0x330$/;"	l
c0112509	obj/kernel.asm	/^c0112509:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c011250e	obj/kernel.asm	/^c011250e:	e8 bc df fe ff       	call   c01004cf <__panic>$/;"	l
c0112513	obj/kernel.asm	/^c0112513:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112516	obj/kernel.asm	/^c0112516:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112519	obj/kernel.asm	/^c0112519:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011251c	obj/kernel.asm	/^c011251c:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c011251f	obj/kernel.asm	/^c011251f:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0112523	obj/kernel.asm	/^c0112523:	74 0d                	je     c0112532 <sfs_getdirentry+0x7a>$/;"	l
c0112525	obj/kernel.asm	/^c0112525:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112528	obj/kernel.asm	/^c0112528:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011252b	obj/kernel.asm	/^c011252b:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0112530	obj/kernel.asm	/^c0112530:	74 19                	je     c011254b <sfs_getdirentry+0x93>$/;"	l
c0112532	obj/kernel.asm	/^c0112532:	68 10 7f 11 c0       	push   $0xc0117f10$/;"	l
c0112537	obj/kernel.asm	/^c0112537:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c011253c	obj/kernel.asm	/^c011253c:	68 31 03 00 00       	push   $0x331$/;"	l
c0112541	obj/kernel.asm	/^c0112541:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0112546	obj/kernel.asm	/^c0112546:	e8 84 df fe ff       	call   c01004cf <__panic>$/;"	l
c011254b	obj/kernel.asm	/^c011254b:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011254e	obj/kernel.asm	/^c011254e:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0112551	obj/kernel.asm	/^c0112551:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112554	obj/kernel.asm	/^c0112554:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0112557	obj/kernel.asm	/^c0112557:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c011255a	obj/kernel.asm	/^c011255a:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c011255e	obj/kernel.asm	/^c011255e:	78 0a                	js     c011256a <sfs_getdirentry+0xb2>$/;"	l
c0112560	obj/kernel.asm	/^c0112560:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0112563	obj/kernel.asm	/^c0112563:	0f b6 c0             	movzbl %al,%eax$/;"	l
c0112566	obj/kernel.asm	/^c0112566:	85 c0                	test   %eax,%eax$/;"	l
c0112568	obj/kernel.asm	/^c0112568:	74 18                	je     c0112582 <sfs_getdirentry+0xca>$/;"	l
c011256a	obj/kernel.asm	/^c011256a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011256d	obj/kernel.asm	/^c011256d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0112570	obj/kernel.asm	/^c0112570:	e8 99 4e ff ff       	call   c010740e <kfree>$/;"	l
c0112575	obj/kernel.asm	/^c0112575:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112578	obj/kernel.asm	/^c0112578:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c011257d	obj/kernel.asm	/^c011257d:	e9 a8 00 00 00       	jmp    c011262a <sfs_getdirentry+0x172>$/;"	l
c0112582	obj/kernel.asm	/^c0112582:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0112585	obj/kernel.asm	/^c0112585:	c1 e8 08             	shr    $0x8,%eax$/;"	l
c0112588	obj/kernel.asm	/^c0112588:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c011258b	obj/kernel.asm	/^c011258b:	8b 55 d8             	mov    -0x28(%ebp),%edx$/;"	l
c011258e	obj/kernel.asm	/^c011258e:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0112591	obj/kernel.asm	/^c0112591:	8b 00                	mov    (%eax),%eax$/;"	l
c0112593	obj/kernel.asm	/^c0112593:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112596	obj/kernel.asm	/^c0112596:	39 c2                	cmp    %eax,%edx$/;"	l
c0112598	obj/kernel.asm	/^c0112598:	76 15                	jbe    c01125af <sfs_getdirentry+0xf7>$/;"	l
c011259a	obj/kernel.asm	/^c011259a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011259d	obj/kernel.asm	/^c011259d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01125a0	obj/kernel.asm	/^c01125a0:	e8 69 4e ff ff       	call   c010740e <kfree>$/;"	l
c01125a5	obj/kernel.asm	/^c01125a5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01125a8	obj/kernel.asm	/^c01125a8:	b8 f0 ff ff ff       	mov    $0xfffffff0,%eax$/;"	l
c01125ad	obj/kernel.asm	/^c01125ad:	eb 7b                	jmp    c011262a <sfs_getdirentry+0x172>$/;"	l
c01125af	obj/kernel.asm	/^c01125af:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01125b2	obj/kernel.asm	/^c01125b2:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01125b5	obj/kernel.asm	/^c01125b5:	e8 9f e7 ff ff       	call   c0110d59 <lock_sin>$/;"	l
c01125ba	obj/kernel.asm	/^c01125ba:	83 c4 10             	add    $0x10,%esp$/;"	l
c01125bd	obj/kernel.asm	/^c01125bd:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01125c0	obj/kernel.asm	/^c01125c0:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c01125c3	obj/kernel.asm	/^c01125c3:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01125c6	obj/kernel.asm	/^c01125c6:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c01125c9	obj/kernel.asm	/^c01125c9:	e8 81 fe ff ff       	call   c011244f <sfs_getdirentry_sub_nolock>$/;"	l
c01125ce	obj/kernel.asm	/^c01125ce:	83 c4 10             	add    $0x10,%esp$/;"	l
c01125d1	obj/kernel.asm	/^c01125d1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01125d4	obj/kernel.asm	/^c01125d4:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01125d8	obj/kernel.asm	/^c01125d8:	74 10                	je     c01125ea <sfs_getdirentry+0x132>$/;"	l
c01125da	obj/kernel.asm	/^c01125da:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01125dd	obj/kernel.asm	/^c01125dd:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01125e0	obj/kernel.asm	/^c01125e0:	e8 8e e7 ff ff       	call   c0110d73 <unlock_sin>$/;"	l
c01125e5	obj/kernel.asm	/^c01125e5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01125e8	obj/kernel.asm	/^c01125e8:	eb 2f                	jmp    c0112619 <sfs_getdirentry+0x161>$/;"	l
c01125ea	obj/kernel.asm	/^c01125ea:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01125ed	obj/kernel.asm	/^c01125ed:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c01125f0	obj/kernel.asm	/^c01125f0:	e8 7e e7 ff ff       	call   c0110d73 <unlock_sin>$/;"	l
c01125f5	obj/kernel.asm	/^c01125f5:	83 c4 10             	add    $0x10,%esp$/;"	l
c01125f8	obj/kernel.asm	/^c01125f8:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01125fb	obj/kernel.asm	/^c01125fb:	83 c0 04             	add    $0x4,%eax$/;"	l
c01125fe	obj/kernel.asm	/^c01125fe:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112601	obj/kernel.asm	/^c0112601:	6a 00                	push   $0x0$/;"	l
c0112603	obj/kernel.asm	/^c0112603:	6a 01                	push   $0x1$/;"	l
c0112605	obj/kernel.asm	/^c0112605:	68 00 01 00 00       	push   $0x100$/;"	l
c011260a	obj/kernel.asm	/^c011260a:	50                   	push   %eax$/;"	l
c011260b	obj/kernel.asm	/^c011260b:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c011260e	obj/kernel.asm	/^c011260e:	e8 79 87 ff ff       	call   c010ad8c <iobuf_move>$/;"	l
c0112613	obj/kernel.asm	/^c0112613:	83 c4 20             	add    $0x20,%esp$/;"	l
c0112616	obj/kernel.asm	/^c0112616:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112619	obj/kernel.asm	/^c0112619:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011261c	obj/kernel.asm	/^c011261c:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c011261f	obj/kernel.asm	/^c011261f:	e8 ea 4d ff ff       	call   c010740e <kfree>$/;"	l
c0112624	obj/kernel.asm	/^c0112624:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112627	obj/kernel.asm	/^c0112627:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011262a	obj/kernel.asm	/^c011262a:	c9                   	leave  $/;"	l
c011262b	obj/kernel.asm	/^c011262b:	c3                   	ret    $/;"	l
c011262c	obj/kernel.asm	/^c011262c <sfs_reclaim>:$/;"	l
c011262c	obj/kernel.asm	/^c011262c:	55                   	push   %ebp$/;"	l
c011262d	obj/kernel.asm	/^c011262d:	89 e5                	mov    %esp,%ebp$/;"	l
c011262f	obj/kernel.asm	/^c011262f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112632	obj/kernel.asm	/^c0112632:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112635	obj/kernel.asm	/^c0112635:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0112638	obj/kernel.asm	/^c0112638:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c011263b	obj/kernel.asm	/^c011263b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c011263f	obj/kernel.asm	/^c011263f:	74 0a                	je     c011264b <sfs_reclaim+0x1f>$/;"	l
c0112641	obj/kernel.asm	/^c0112641:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112644	obj/kernel.asm	/^c0112644:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0112647	obj/kernel.asm	/^c0112647:	85 c0                	test   %eax,%eax$/;"	l
c0112649	obj/kernel.asm	/^c0112649:	74 19                	je     c0112664 <sfs_reclaim+0x38>$/;"	l
c011264b	obj/kernel.asm	/^c011264b:	68 14 81 11 c0       	push   $0xc0118114$/;"	l
c0112650	obj/kernel.asm	/^c0112650:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0112655	obj/kernel.asm	/^c0112655:	68 4e 03 00 00       	push   $0x34e$/;"	l
c011265a	obj/kernel.asm	/^c011265a:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c011265f	obj/kernel.asm	/^c011265f:	e8 6b de fe ff       	call   c01004cf <__panic>$/;"	l
c0112664	obj/kernel.asm	/^c0112664:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112667	obj/kernel.asm	/^c0112667:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011266a	obj/kernel.asm	/^c011266a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011266d	obj/kernel.asm	/^c011266d:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112670	obj/kernel.asm	/^c0112670:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0112674	obj/kernel.asm	/^c0112674:	74 0d                	je     c0112683 <sfs_reclaim+0x57>$/;"	l
c0112676	obj/kernel.asm	/^c0112676:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112679	obj/kernel.asm	/^c0112679:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c011267c	obj/kernel.asm	/^c011267c:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0112681	obj/kernel.asm	/^c0112681:	74 19                	je     c011269c <sfs_reclaim+0x70>$/;"	l
c0112683	obj/kernel.asm	/^c0112683:	68 10 7f 11 c0       	push   $0xc0117f10$/;"	l
c0112688	obj/kernel.asm	/^c0112688:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c011268d	obj/kernel.asm	/^c011268d:	68 4f 03 00 00       	push   $0x34f$/;"	l
c0112692	obj/kernel.asm	/^c0112692:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0112697	obj/kernel.asm	/^c0112697:	e8 33 de fe ff       	call   c01004cf <__panic>$/;"	l
c011269c	obj/kernel.asm	/^c011269c:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011269f	obj/kernel.asm	/^c011269f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01126a2	obj/kernel.asm	/^c01126a2:	c7 45 f4 f1 ff ff ff 	movl   $0xfffffff1,-0xc(%ebp)$/;"	l
c01126a9	obj/kernel.asm	/^c01126a9:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01126ac	obj/kernel.asm	/^c01126ac:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01126af	obj/kernel.asm	/^c01126af:	e8 25 de ff ff       	call   c01104d9 <lock_sfs_fs>$/;"	l
c01126b4	obj/kernel.asm	/^c01126b4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01126b7	obj/kernel.asm	/^c01126b7:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01126ba	obj/kernel.asm	/^c01126ba:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01126bd	obj/kernel.asm	/^c01126bd:	85 c0                	test   %eax,%eax$/;"	l
c01126bf	obj/kernel.asm	/^c01126bf:	7f 19                	jg     c01126da <sfs_reclaim+0xae>$/;"	l
c01126c1	obj/kernel.asm	/^c01126c1:	68 ce 81 11 c0       	push   $0xc01181ce$/;"	l
c01126c6	obj/kernel.asm	/^c01126c6:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c01126cb	obj/kernel.asm	/^c01126cb:	68 54 03 00 00       	push   $0x354$/;"	l
c01126d0	obj/kernel.asm	/^c01126d0:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c01126d5	obj/kernel.asm	/^c01126d5:	e8 f5 dd fe ff       	call   c01004cf <__panic>$/;"	l
c01126da	obj/kernel.asm	/^c01126da:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01126dd	obj/kernel.asm	/^c01126dd:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01126e0	obj/kernel.asm	/^c01126e0:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c01126e3	obj/kernel.asm	/^c01126e3:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01126e6	obj/kernel.asm	/^c01126e6:	89 50 0c             	mov    %edx,0xc(%eax)$/;"	l
c01126e9	obj/kernel.asm	/^c01126e9:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c01126ec	obj/kernel.asm	/^c01126ec:	8b 40 0c             	mov    0xc(%eax),%eax$/;"	l
c01126ef	obj/kernel.asm	/^c01126ef:	85 c0                	test   %eax,%eax$/;"	l
c01126f1	obj/kernel.asm	/^c01126f1:	0f 85 99 01 00 00    	jne    c0112890 <sfs_reclaim+0x264>$/;"	l
c01126f7	obj/kernel.asm	/^c01126f7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01126fa	obj/kernel.asm	/^c01126fa:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01126fd	obj/kernel.asm	/^c01126fd:	e8 4c e6 ff ff       	call   c0110d4e <inode_ref_count>$/;"	l
c0112702	obj/kernel.asm	/^c0112702:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112705	obj/kernel.asm	/^c0112705:	85 c0                	test   %eax,%eax$/;"	l
c0112707	obj/kernel.asm	/^c0112707:	0f 85 83 01 00 00    	jne    c0112890 <sfs_reclaim+0x264>$/;"	l
c011270d	obj/kernel.asm	/^c011270d:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112710	obj/kernel.asm	/^c0112710:	8b 00                	mov    (%eax),%eax$/;"	l
c0112712	obj/kernel.asm	/^c0112712:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c0112716	obj/kernel.asm	/^c0112716:	66 85 c0             	test   %ax,%ax$/;"	l
c0112719	obj/kernel.asm	/^c0112719:	75 73                	jne    c011278e <sfs_reclaim+0x162>$/;"	l
c011271b	obj/kernel.asm	/^c011271b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011271e	obj/kernel.asm	/^c011271e:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0112721	obj/kernel.asm	/^c0112721:	83 7d e0 00          	cmpl   $0x0,-0x20(%ebp)$/;"	l
c0112725	obj/kernel.asm	/^c0112725:	74 17                	je     c011273e <sfs_reclaim+0x112>$/;"	l
c0112727	obj/kernel.asm	/^c0112727:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011272a	obj/kernel.asm	/^c011272a:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c011272d	obj/kernel.asm	/^c011272d:	85 c0                	test   %eax,%eax$/;"	l
c011272f	obj/kernel.asm	/^c011272f:	74 0d                	je     c011273e <sfs_reclaim+0x112>$/;"	l
c0112731	obj/kernel.asm	/^c0112731:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0112734	obj/kernel.asm	/^c0112734:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0112737	obj/kernel.asm	/^c0112737:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c011273a	obj/kernel.asm	/^c011273a:	85 c0                	test   %eax,%eax$/;"	l
c011273c	obj/kernel.asm	/^c011273c:	75 19                	jne    c0112757 <sfs_reclaim+0x12b>$/;"	l
c011273e	obj/kernel.asm	/^c011273e:	68 e8 81 11 c0       	push   $0xc01181e8$/;"	l
c0112743	obj/kernel.asm	/^c0112743:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0112748	obj/kernel.asm	/^c0112748:	68 59 03 00 00       	push   $0x359$/;"	l
c011274d	obj/kernel.asm	/^c011274d:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0112752	obj/kernel.asm	/^c0112752:	e8 78 dd fe ff       	call   c01004cf <__panic>$/;"	l
c0112757	obj/kernel.asm	/^c0112757:	83 ec 08             	sub    $0x8,%esp$/;"	l
c011275a	obj/kernel.asm	/^c011275a:	68 39 82 11 c0       	push   $0xc0118239$/;"	l
c011275f	obj/kernel.asm	/^c011275f:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0112762	obj/kernel.asm	/^c0112762:	e8 30 cb ff ff       	call   c010f297 <inode_check>$/;"	l
c0112767	obj/kernel.asm	/^c0112767:	83 c4 10             	add    $0x10,%esp$/;"	l
c011276a	obj/kernel.asm	/^c011276a:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c011276d	obj/kernel.asm	/^c011276d:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0112770	obj/kernel.asm	/^c0112770:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0112773	obj/kernel.asm	/^c0112773:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0112776	obj/kernel.asm	/^c0112776:	6a 00                	push   $0x0$/;"	l
c0112778	obj/kernel.asm	/^c0112778:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011277b	obj/kernel.asm	/^c011277b:	ff d0                	call   *%eax$/;"	l
c011277d	obj/kernel.asm	/^c011277d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112780	obj/kernel.asm	/^c0112780:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112783	obj/kernel.asm	/^c0112783:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112787	obj/kernel.asm	/^c0112787:	74 05                	je     c011278e <sfs_reclaim+0x162>$/;"	l
c0112789	obj/kernel.asm	/^c0112789:	e9 02 01 00 00       	jmp    c0112890 <sfs_reclaim+0x264>$/;"	l
c011278e	obj/kernel.asm	/^c011278e:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112791	obj/kernel.asm	/^c0112791:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112794	obj/kernel.asm	/^c0112794:	85 c0                	test   %eax,%eax$/;"	l
c0112796	obj/kernel.asm	/^c0112796:	74 71                	je     c0112809 <sfs_reclaim+0x1dd>$/;"	l
c0112798	obj/kernel.asm	/^c0112798:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011279b	obj/kernel.asm	/^c011279b:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c011279e	obj/kernel.asm	/^c011279e:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c01127a2	obj/kernel.asm	/^c01127a2:	74 17                	je     c01127bb <sfs_reclaim+0x18f>$/;"	l
c01127a4	obj/kernel.asm	/^c01127a4:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01127a7	obj/kernel.asm	/^c01127a7:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01127aa	obj/kernel.asm	/^c01127aa:	85 c0                	test   %eax,%eax$/;"	l
c01127ac	obj/kernel.asm	/^c01127ac:	74 0d                	je     c01127bb <sfs_reclaim+0x18f>$/;"	l
c01127ae	obj/kernel.asm	/^c01127ae:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01127b1	obj/kernel.asm	/^c01127b1:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01127b4	obj/kernel.asm	/^c01127b4:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01127b7	obj/kernel.asm	/^c01127b7:	85 c0                	test   %eax,%eax$/;"	l
c01127b9	obj/kernel.asm	/^c01127b9:	75 19                	jne    c01127d4 <sfs_reclaim+0x1a8>$/;"	l
c01127bb	obj/kernel.asm	/^c01127bb:	68 a4 80 11 c0       	push   $0xc01180a4$/;"	l
c01127c0	obj/kernel.asm	/^c01127c0:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c01127c5	obj/kernel.asm	/^c01127c5:	68 5e 03 00 00       	push   $0x35e$/;"	l
c01127ca	obj/kernel.asm	/^c01127ca:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c01127cf	obj/kernel.asm	/^c01127cf:	e8 fb dc fe ff       	call   c01004cf <__panic>$/;"	l
c01127d4	obj/kernel.asm	/^c01127d4:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01127d7	obj/kernel.asm	/^c01127d7:	68 f2 80 11 c0       	push   $0xc01180f2$/;"	l
c01127dc	obj/kernel.asm	/^c01127dc:	ff 75 dc             	pushl  -0x24(%ebp)$/;"	l
c01127df	obj/kernel.asm	/^c01127df:	e8 b3 ca ff ff       	call   c010f297 <inode_check>$/;"	l
c01127e4	obj/kernel.asm	/^c01127e4:	83 c4 10             	add    $0x10,%esp$/;"	l
c01127e7	obj/kernel.asm	/^c01127e7:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c01127ea	obj/kernel.asm	/^c01127ea:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01127ed	obj/kernel.asm	/^c01127ed:	8b 40 18             	mov    0x18(%eax),%eax$/;"	l
c01127f0	obj/kernel.asm	/^c01127f0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01127f3	obj/kernel.asm	/^c01127f3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01127f6	obj/kernel.asm	/^c01127f6:	ff d0                	call   *%eax$/;"	l
c01127f8	obj/kernel.asm	/^c01127f8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01127fb	obj/kernel.asm	/^c01127fb:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01127fe	obj/kernel.asm	/^c01127fe:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112802	obj/kernel.asm	/^c0112802:	74 05                	je     c0112809 <sfs_reclaim+0x1dd>$/;"	l
c0112804	obj/kernel.asm	/^c0112804:	e9 87 00 00 00       	jmp    c0112890 <sfs_reclaim+0x264>$/;"	l
c0112809	obj/kernel.asm	/^c0112809:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011280c	obj/kernel.asm	/^c011280c:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c011280f	obj/kernel.asm	/^c011280f:	e8 aa e6 ff ff       	call   c0110ebe <sfs_remove_links>$/;"	l
c0112814	obj/kernel.asm	/^c0112814:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112817	obj/kernel.asm	/^c0112817:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011281a	obj/kernel.asm	/^c011281a:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c011281d	obj/kernel.asm	/^c011281d:	e8 eb dc ff ff       	call   c011050d <unlock_sfs_fs>$/;"	l
c0112822	obj/kernel.asm	/^c0112822:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112825	obj/kernel.asm	/^c0112825:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112828	obj/kernel.asm	/^c0112828:	8b 00                	mov    (%eax),%eax$/;"	l
c011282a	obj/kernel.asm	/^c011282a:	0f b7 40 06          	movzwl 0x6(%eax),%eax$/;"	l
c011282e	obj/kernel.asm	/^c011282e:	66 85 c0             	test   %ax,%ax$/;"	l
c0112831	obj/kernel.asm	/^c0112831:	75 37                	jne    c011286a <sfs_reclaim+0x23e>$/;"	l
c0112833	obj/kernel.asm	/^c0112833:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112836	obj/kernel.asm	/^c0112836:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0112839	obj/kernel.asm	/^c0112839:	83 ec 08             	sub    $0x8,%esp$/;"	l
c011283c	obj/kernel.asm	/^c011283c:	50                   	push   %eax$/;"	l
c011283d	obj/kernel.asm	/^c011283d:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0112840	obj/kernel.asm	/^c0112840:	e8 d5 e7 ff ff       	call   c011101a <sfs_block_free>$/;"	l
c0112845	obj/kernel.asm	/^c0112845:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112848	obj/kernel.asm	/^c0112848:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011284b	obj/kernel.asm	/^c011284b:	8b 00                	mov    (%eax),%eax$/;"	l
c011284d	obj/kernel.asm	/^c011284d:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0112850	obj/kernel.asm	/^c0112850:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0112853	obj/kernel.asm	/^c0112853:	83 7d d8 00          	cmpl   $0x0,-0x28(%ebp)$/;"	l
c0112857	obj/kernel.asm	/^c0112857:	74 11                	je     c011286a <sfs_reclaim+0x23e>$/;"	l
c0112859	obj/kernel.asm	/^c0112859:	83 ec 08             	sub    $0x8,%esp$/;"	l
c011285c	obj/kernel.asm	/^c011285c:	ff 75 d8             	pushl  -0x28(%ebp)$/;"	l
c011285f	obj/kernel.asm	/^c011285f:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0112862	obj/kernel.asm	/^c0112862:	e8 b3 e7 ff ff       	call   c011101a <sfs_block_free>$/;"	l
c0112867	obj/kernel.asm	/^c0112867:	83 c4 10             	add    $0x10,%esp$/;"	l
c011286a	obj/kernel.asm	/^c011286a:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c011286d	obj/kernel.asm	/^c011286d:	8b 00                	mov    (%eax),%eax$/;"	l
c011286f	obj/kernel.asm	/^c011286f:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112872	obj/kernel.asm	/^c0112872:	50                   	push   %eax$/;"	l
c0112873	obj/kernel.asm	/^c0112873:	e8 96 4b ff ff       	call   c010740e <kfree>$/;"	l
c0112878	obj/kernel.asm	/^c0112878:	83 c4 10             	add    $0x10,%esp$/;"	l
c011287b	obj/kernel.asm	/^c011287b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011287e	obj/kernel.asm	/^c011287e:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112881	obj/kernel.asm	/^c0112881:	e8 dc c7 ff ff       	call   c010f062 <inode_kill>$/;"	l
c0112886	obj/kernel.asm	/^c0112886:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112889	obj/kernel.asm	/^c0112889:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011288e	obj/kernel.asm	/^c011288e:	eb 11                	jmp    c01128a1 <sfs_reclaim+0x275>$/;"	l
c0112890	obj/kernel.asm	/^c0112890:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112893	obj/kernel.asm	/^c0112893:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c0112896	obj/kernel.asm	/^c0112896:	e8 72 dc ff ff       	call   c011050d <unlock_sfs_fs>$/;"	l
c011289b	obj/kernel.asm	/^c011289b:	83 c4 10             	add    $0x10,%esp$/;"	l
c011289e	obj/kernel.asm	/^c011289e:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01128a1	obj/kernel.asm	/^c01128a1:	c9                   	leave  $/;"	l
c01128a2	obj/kernel.asm	/^c01128a2:	c3                   	ret    $/;"	l
c01128a3	obj/kernel.asm	/^c01128a3 <sfs_gettype>:$/;"	l
c01128a3	obj/kernel.asm	/^c01128a3:	55                   	push   %ebp$/;"	l
c01128a4	obj/kernel.asm	/^c01128a4:	89 e5                	mov    %esp,%ebp$/;"	l
c01128a6	obj/kernel.asm	/^c01128a6:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01128a9	obj/kernel.asm	/^c01128a9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01128ac	obj/kernel.asm	/^c01128ac:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01128af	obj/kernel.asm	/^c01128af:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01128b3	obj/kernel.asm	/^c01128b3:	74 0d                	je     c01128c2 <sfs_gettype+0x1f>$/;"	l
c01128b5	obj/kernel.asm	/^c01128b5:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01128b8	obj/kernel.asm	/^c01128b8:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01128bb	obj/kernel.asm	/^c01128bb:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c01128c0	obj/kernel.asm	/^c01128c0:	74 19                	je     c01128db <sfs_gettype+0x38>$/;"	l
c01128c2	obj/kernel.asm	/^c01128c2:	68 10 7f 11 c0       	push   $0xc0117f10$/;"	l
c01128c7	obj/kernel.asm	/^c01128c7:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c01128cc	obj/kernel.asm	/^c01128cc:	68 79 03 00 00       	push   $0x379$/;"	l
c01128d1	obj/kernel.asm	/^c01128d1:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c01128d6	obj/kernel.asm	/^c01128d6:	e8 f4 db fe ff       	call   c01004cf <__panic>$/;"	l
c01128db	obj/kernel.asm	/^c01128db:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01128de	obj/kernel.asm	/^c01128de:	8b 00                	mov    (%eax),%eax$/;"	l
c01128e0	obj/kernel.asm	/^c01128e0:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01128e3	obj/kernel.asm	/^c01128e3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01128e6	obj/kernel.asm	/^c01128e6:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c01128ea	obj/kernel.asm	/^c01128ea:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c01128ed	obj/kernel.asm	/^c01128ed:	83 f8 02             	cmp    $0x2,%eax$/;"	l
c01128f0	obj/kernel.asm	/^c01128f0:	74 0c                	je     c01128fe <sfs_gettype+0x5b>$/;"	l
c01128f2	obj/kernel.asm	/^c01128f2:	83 f8 03             	cmp    $0x3,%eax$/;"	l
c01128f5	obj/kernel.asm	/^c01128f5:	74 27                	je     c011291e <sfs_gettype+0x7b>$/;"	l
c01128f7	obj/kernel.asm	/^c01128f7:	83 f8 01             	cmp    $0x1,%eax$/;"	l
c01128fa	obj/kernel.asm	/^c01128fa:	74 12                	je     c011290e <sfs_gettype+0x6b>$/;"	l
c01128fc	obj/kernel.asm	/^c01128fc:	eb 30                	jmp    c011292e <sfs_gettype+0x8b>$/;"	l
c01128fe	obj/kernel.asm	/^c01128fe:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112901	obj/kernel.asm	/^c0112901:	c7 00 00 20 00 00    	movl   $0x2000,(%eax)$/;"	l
c0112907	obj/kernel.asm	/^c0112907:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011290c	obj/kernel.asm	/^c011290c:	eb 3f                	jmp    c011294d <sfs_gettype+0xaa>$/;"	l
c011290e	obj/kernel.asm	/^c011290e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112911	obj/kernel.asm	/^c0112911:	c7 00 00 10 00 00    	movl   $0x1000,(%eax)$/;"	l
c0112917	obj/kernel.asm	/^c0112917:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011291c	obj/kernel.asm	/^c011291c:	eb 2f                	jmp    c011294d <sfs_gettype+0xaa>$/;"	l
c011291e	obj/kernel.asm	/^c011291e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112921	obj/kernel.asm	/^c0112921:	c7 00 00 30 00 00    	movl   $0x3000,(%eax)$/;"	l
c0112927	obj/kernel.asm	/^c0112927:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c011292c	obj/kernel.asm	/^c011292c:	eb 1f                	jmp    c011294d <sfs_gettype+0xaa>$/;"	l
c011292e	obj/kernel.asm	/^c011292e:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112931	obj/kernel.asm	/^c0112931:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0112935	obj/kernel.asm	/^c0112935:	0f b7 c0             	movzwl %ax,%eax$/;"	l
c0112938	obj/kernel.asm	/^c0112938:	50                   	push   %eax$/;"	l
c0112939	obj/kernel.asm	/^c0112939:	68 40 7e 11 c0       	push   $0xc0117e40$/;"	l
c011293e	obj/kernel.asm	/^c011293e:	68 85 03 00 00       	push   $0x385$/;"	l
c0112943	obj/kernel.asm	/^c0112943:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0112948	obj/kernel.asm	/^c0112948:	e8 82 db fe ff       	call   c01004cf <__panic>$/;"	l
c011294d	obj/kernel.asm	/^c011294d:	c9                   	leave  $/;"	l
c011294e	obj/kernel.asm	/^c011294e:	c3                   	ret    $/;"	l
c011294f	obj/kernel.asm	/^c011294f <sfs_tryseek>:$/;"	l
c011294f	obj/kernel.asm	/^c011294f:	55                   	push   %ebp$/;"	l
c0112950	obj/kernel.asm	/^c0112950:	89 e5                	mov    %esp,%ebp$/;"	l
c0112952	obj/kernel.asm	/^c0112952:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0112955	obj/kernel.asm	/^c0112955:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0112959	obj/kernel.asm	/^c0112959:	78 0a                	js     c0112965 <sfs_tryseek+0x16>$/;"	l
c011295b	obj/kernel.asm	/^c011295b:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011295e	obj/kernel.asm	/^c011295e:	3d ff ff ff 07       	cmp    $0x7ffffff,%eax$/;"	l
c0112963	obj/kernel.asm	/^c0112963:	76 0a                	jbe    c011296f <sfs_tryseek+0x20>$/;"	l
c0112965	obj/kernel.asm	/^c0112965:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c011296a	obj/kernel.asm	/^c011296a:	e9 b3 00 00 00       	jmp    c0112a22 <sfs_tryseek+0xd3>$/;"	l
c011296f	obj/kernel.asm	/^c011296f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112972	obj/kernel.asm	/^c0112972:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112975	obj/kernel.asm	/^c0112975:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112979	obj/kernel.asm	/^c0112979:	74 0d                	je     c0112988 <sfs_tryseek+0x39>$/;"	l
c011297b	obj/kernel.asm	/^c011297b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011297e	obj/kernel.asm	/^c011297e:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0112981	obj/kernel.asm	/^c0112981:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0112986	obj/kernel.asm	/^c0112986:	74 19                	je     c01129a1 <sfs_tryseek+0x52>$/;"	l
c0112988	obj/kernel.asm	/^c0112988:	68 10 7f 11 c0       	push   $0xc0117f10$/;"	l
c011298d	obj/kernel.asm	/^c011298d:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0112992	obj/kernel.asm	/^c0112992:	68 90 03 00 00       	push   $0x390$/;"	l
c0112997	obj/kernel.asm	/^c0112997:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c011299c	obj/kernel.asm	/^c011299c:	e8 2e db fe ff       	call   c01004cf <__panic>$/;"	l
c01129a1	obj/kernel.asm	/^c01129a1:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01129a4	obj/kernel.asm	/^c01129a4:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01129a7	obj/kernel.asm	/^c01129a7:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c01129aa	obj/kernel.asm	/^c01129aa:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01129ad	obj/kernel.asm	/^c01129ad:	8b 00                	mov    (%eax),%eax$/;"	l
c01129af	obj/kernel.asm	/^c01129af:	8b 00                	mov    (%eax),%eax$/;"	l
c01129b1	obj/kernel.asm	/^c01129b1:	39 c2                	cmp    %eax,%edx$/;"	l
c01129b3	obj/kernel.asm	/^c01129b3:	76 68                	jbe    c0112a1d <sfs_tryseek+0xce>$/;"	l
c01129b5	obj/kernel.asm	/^c01129b5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01129b8	obj/kernel.asm	/^c01129b8:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01129bb	obj/kernel.asm	/^c01129bb:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c01129bf	obj/kernel.asm	/^c01129bf:	74 17                	je     c01129d8 <sfs_tryseek+0x89>$/;"	l
c01129c1	obj/kernel.asm	/^c01129c1:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01129c4	obj/kernel.asm	/^c01129c4:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01129c7	obj/kernel.asm	/^c01129c7:	85 c0                	test   %eax,%eax$/;"	l
c01129c9	obj/kernel.asm	/^c01129c9:	74 0d                	je     c01129d8 <sfs_tryseek+0x89>$/;"	l
c01129cb	obj/kernel.asm	/^c01129cb:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01129ce	obj/kernel.asm	/^c01129ce:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c01129d1	obj/kernel.asm	/^c01129d1:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c01129d4	obj/kernel.asm	/^c01129d4:	85 c0                	test   %eax,%eax$/;"	l
c01129d6	obj/kernel.asm	/^c01129d6:	75 19                	jne    c01129f1 <sfs_tryseek+0xa2>$/;"	l
c01129d8	obj/kernel.asm	/^c01129d8:	68 e8 81 11 c0       	push   $0xc01181e8$/;"	l
c01129dd	obj/kernel.asm	/^c01129dd:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c01129e2	obj/kernel.asm	/^c01129e2:	68 92 03 00 00       	push   $0x392$/;"	l
c01129e7	obj/kernel.asm	/^c01129e7:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c01129ec	obj/kernel.asm	/^c01129ec:	e8 de da fe ff       	call   c01004cf <__panic>$/;"	l
c01129f1	obj/kernel.asm	/^c01129f1:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01129f4	obj/kernel.asm	/^c01129f4:	68 39 82 11 c0       	push   $0xc0118239$/;"	l
c01129f9	obj/kernel.asm	/^c01129f9:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01129fc	obj/kernel.asm	/^c01129fc:	e8 96 c8 ff ff       	call   c010f297 <inode_check>$/;"	l
c0112a01	obj/kernel.asm	/^c0112a01:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112a04	obj/kernel.asm	/^c0112a04:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112a07	obj/kernel.asm	/^c0112a07:	8b 40 3c             	mov    0x3c(%eax),%eax$/;"	l
c0112a0a	obj/kernel.asm	/^c0112a0a:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c0112a0d	obj/kernel.asm	/^c0112a0d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0112a10	obj/kernel.asm	/^c0112a10:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0112a13	obj/kernel.asm	/^c0112a13:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112a16	obj/kernel.asm	/^c0112a16:	ff d0                	call   *%eax$/;"	l
c0112a18	obj/kernel.asm	/^c0112a18:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112a1b	obj/kernel.asm	/^c0112a1b:	eb 05                	jmp    c0112a22 <sfs_tryseek+0xd3>$/;"	l
c0112a1d	obj/kernel.asm	/^c0112a1d:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112a22	obj/kernel.asm	/^c0112a22:	c9                   	leave  $/;"	l
c0112a23	obj/kernel.asm	/^c0112a23:	c3                   	ret    $/;"	l
c0112a24	obj/kernel.asm	/^c0112a24 <sfs_truncfile>:$/;"	l
c0112a24	obj/kernel.asm	/^c0112a24:	55                   	push   %ebp$/;"	l
c0112a25	obj/kernel.asm	/^c0112a25:	89 e5                	mov    %esp,%ebp$/;"	l
c0112a27	obj/kernel.asm	/^c0112a27:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0112a2a	obj/kernel.asm	/^c0112a2a:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0112a2e	obj/kernel.asm	/^c0112a2e:	78 0a                	js     c0112a3a <sfs_truncfile+0x16>$/;"	l
c0112a30	obj/kernel.asm	/^c0112a30:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112a33	obj/kernel.asm	/^c0112a33:	3d 00 00 00 08       	cmp    $0x8000000,%eax$/;"	l
c0112a38	obj/kernel.asm	/^c0112a38:	76 0a                	jbe    c0112a44 <sfs_truncfile+0x20>$/;"	l
c0112a3a	obj/kernel.asm	/^c0112a3a:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0112a3f	obj/kernel.asm	/^c0112a3f:	e9 9c 01 00 00       	jmp    c0112be0 <sfs_truncfile+0x1bc>$/;"	l
c0112a44	obj/kernel.asm	/^c0112a44:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112a47	obj/kernel.asm	/^c0112a47:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0112a4a	obj/kernel.asm	/^c0112a4a:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112a4d	obj/kernel.asm	/^c0112a4d:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0112a51	obj/kernel.asm	/^c0112a51:	74 0a                	je     c0112a5d <sfs_truncfile+0x39>$/;"	l
c0112a53	obj/kernel.asm	/^c0112a53:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112a56	obj/kernel.asm	/^c0112a56:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0112a59	obj/kernel.asm	/^c0112a59:	85 c0                	test   %eax,%eax$/;"	l
c0112a5b	obj/kernel.asm	/^c0112a5b:	74 19                	je     c0112a76 <sfs_truncfile+0x52>$/;"	l
c0112a5d	obj/kernel.asm	/^c0112a5d:	68 14 81 11 c0       	push   $0xc0118114$/;"	l
c0112a62	obj/kernel.asm	/^c0112a62:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0112a67	obj/kernel.asm	/^c0112a67:	68 9f 03 00 00       	push   $0x39f$/;"	l
c0112a6c	obj/kernel.asm	/^c0112a6c:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0112a71	obj/kernel.asm	/^c0112a71:	e8 59 da fe ff       	call   c01004cf <__panic>$/;"	l
c0112a76	obj/kernel.asm	/^c0112a76:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112a79	obj/kernel.asm	/^c0112a79:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112a7c	obj/kernel.asm	/^c0112a7c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112a7f	obj/kernel.asm	/^c0112a7f:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0112a82	obj/kernel.asm	/^c0112a82:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0112a86	obj/kernel.asm	/^c0112a86:	74 0d                	je     c0112a95 <sfs_truncfile+0x71>$/;"	l
c0112a88	obj/kernel.asm	/^c0112a88:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112a8b	obj/kernel.asm	/^c0112a8b:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0112a8e	obj/kernel.asm	/^c0112a8e:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0112a93	obj/kernel.asm	/^c0112a93:	74 19                	je     c0112aae <sfs_truncfile+0x8a>$/;"	l
c0112a95	obj/kernel.asm	/^c0112a95:	68 10 7f 11 c0       	push   $0xc0117f10$/;"	l
c0112a9a	obj/kernel.asm	/^c0112a9a:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0112a9f	obj/kernel.asm	/^c0112a9f:	68 a0 03 00 00       	push   $0x3a0$/;"	l
c0112aa4	obj/kernel.asm	/^c0112aa4:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0112aa9	obj/kernel.asm	/^c0112aa9:	e8 21 da fe ff       	call   c01004cf <__panic>$/;"	l
c0112aae	obj/kernel.asm	/^c0112aae:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112ab1	obj/kernel.asm	/^c0112ab1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0112ab4	obj/kernel.asm	/^c0112ab4:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0112ab7	obj/kernel.asm	/^c0112ab7:	8b 00                	mov    (%eax),%eax$/;"	l
c0112ab9	obj/kernel.asm	/^c0112ab9:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0112abc	obj/kernel.asm	/^c0112abc:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0112ac3	obj/kernel.asm	/^c0112ac3:	c7 45 d8 00 10 00 00 	movl   $0x1000,-0x28(%ebp)$/;"	l
c0112aca	obj/kernel.asm	/^c0112aca:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0112acd	obj/kernel.asm	/^c0112acd:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0112ad0	obj/kernel.asm	/^c0112ad0:	01 d0                	add    %edx,%eax$/;"	l
c0112ad2	obj/kernel.asm	/^c0112ad2:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0112ad5	obj/kernel.asm	/^c0112ad5:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0112ada	obj/kernel.asm	/^c0112ada:	f7 75 d8             	divl   -0x28(%ebp)$/;"	l
c0112add	obj/kernel.asm	/^c0112add:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c0112ae0	obj/kernel.asm	/^c0112ae0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0112ae3	obj/kernel.asm	/^c0112ae3:	8b 10                	mov    (%eax),%edx$/;"	l
c0112ae5	obj/kernel.asm	/^c0112ae5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112ae8	obj/kernel.asm	/^c0112ae8:	39 c2                	cmp    %eax,%edx$/;"	l
c0112aea	obj/kernel.asm	/^c0112aea:	75 2e                	jne    c0112b1a <sfs_truncfile+0xf6>$/;"	l
c0112aec	obj/kernel.asm	/^c0112aec:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0112aef	obj/kernel.asm	/^c0112aef:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112af2	obj/kernel.asm	/^c0112af2:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0112af5	obj/kernel.asm	/^c0112af5:	74 19                	je     c0112b10 <sfs_truncfile+0xec>$/;"	l
c0112af7	obj/kernel.asm	/^c0112af7:	68 42 82 11 c0       	push   $0xc0118242$/;"	l
c0112afc	obj/kernel.asm	/^c0112afc:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0112b01	obj/kernel.asm	/^c0112b01:	68 a7 03 00 00       	push   $0x3a7$/;"	l
c0112b06	obj/kernel.asm	/^c0112b06:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0112b0b	obj/kernel.asm	/^c0112b0b:	e8 bf d9 fe ff       	call   c01004cf <__panic>$/;"	l
c0112b10	obj/kernel.asm	/^c0112b10:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112b15	obj/kernel.asm	/^c0112b15:	e9 c6 00 00 00       	jmp    c0112be0 <sfs_truncfile+0x1bc>$/;"	l
c0112b1a	obj/kernel.asm	/^c0112b1a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112b1d	obj/kernel.asm	/^c0112b1d:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0112b20	obj/kernel.asm	/^c0112b20:	e8 34 e2 ff ff       	call   c0110d59 <lock_sin>$/;"	l
c0112b25	obj/kernel.asm	/^c0112b25:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112b28	obj/kernel.asm	/^c0112b28:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0112b2b	obj/kernel.asm	/^c0112b2b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112b2e	obj/kernel.asm	/^c0112b2e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112b31	obj/kernel.asm	/^c0112b31:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112b34	obj/kernel.asm	/^c0112b34:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0112b37	obj/kernel.asm	/^c0112b37:	73 2e                	jae    c0112b67 <sfs_truncfile+0x143>$/;"	l
c0112b39	obj/kernel.asm	/^c0112b39:	eb 22                	jmp    c0112b5d <sfs_truncfile+0x139>$/;"	l
c0112b3b	obj/kernel.asm	/^c0112b3b:	6a 00                	push   $0x0$/;"	l
c0112b3d	obj/kernel.asm	/^c0112b3d:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0112b40	obj/kernel.asm	/^c0112b40:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0112b43	obj/kernel.asm	/^c0112b43:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0112b46	obj/kernel.asm	/^c0112b46:	e8 f9 eb ff ff       	call   c0111744 <sfs_bmap_load_nolock>$/;"	l
c0112b4b	obj/kernel.asm	/^c0112b4b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112b4e	obj/kernel.asm	/^c0112b4e:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112b51	obj/kernel.asm	/^c0112b51:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112b55	obj/kernel.asm	/^c0112b55:	74 02                	je     c0112b59 <sfs_truncfile+0x135>$/;"	l
c0112b57	obj/kernel.asm	/^c0112b57:	eb 76                	jmp    c0112bcf <sfs_truncfile+0x1ab>$/;"	l
c0112b59	obj/kernel.asm	/^c0112b59:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0112b5d	obj/kernel.asm	/^c0112b5d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112b60	obj/kernel.asm	/^c0112b60:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0112b63	obj/kernel.asm	/^c0112b63:	75 d6                	jne    c0112b3b <sfs_truncfile+0x117>$/;"	l
c0112b65	obj/kernel.asm	/^c0112b65:	eb 32                	jmp    c0112b99 <sfs_truncfile+0x175>$/;"	l
c0112b67	obj/kernel.asm	/^c0112b67:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0112b6a	obj/kernel.asm	/^c0112b6a:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0112b6d	obj/kernel.asm	/^c0112b6d:	73 2a                	jae    c0112b99 <sfs_truncfile+0x175>$/;"	l
c0112b6f	obj/kernel.asm	/^c0112b6f:	eb 20                	jmp    c0112b91 <sfs_truncfile+0x16d>$/;"	l
c0112b71	obj/kernel.asm	/^c0112b71:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0112b74	obj/kernel.asm	/^c0112b74:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0112b77	obj/kernel.asm	/^c0112b77:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0112b7a	obj/kernel.asm	/^c0112b7a:	e8 8b ec ff ff       	call   c011180a <sfs_bmap_truncate_nolock>$/;"	l
c0112b7f	obj/kernel.asm	/^c0112b7f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112b82	obj/kernel.asm	/^c0112b82:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112b85	obj/kernel.asm	/^c0112b85:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112b89	obj/kernel.asm	/^c0112b89:	74 02                	je     c0112b8d <sfs_truncfile+0x169>$/;"	l
c0112b8b	obj/kernel.asm	/^c0112b8b:	eb 42                	jmp    c0112bcf <sfs_truncfile+0x1ab>$/;"	l
c0112b8d	obj/kernel.asm	/^c0112b8d:	83 6d f0 01          	subl   $0x1,-0x10(%ebp)$/;"	l
c0112b91	obj/kernel.asm	/^c0112b91:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0112b94	obj/kernel.asm	/^c0112b94:	3b 45 f0             	cmp    -0x10(%ebp),%eax$/;"	l
c0112b97	obj/kernel.asm	/^c0112b97:	75 d8                	jne    c0112b71 <sfs_truncfile+0x14d>$/;"	l
c0112b99	obj/kernel.asm	/^c0112b99:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0112b9c	obj/kernel.asm	/^c0112b9c:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112b9f	obj/kernel.asm	/^c0112b9f:	3b 45 d4             	cmp    -0x2c(%ebp),%eax$/;"	l
c0112ba2	obj/kernel.asm	/^c0112ba2:	74 19                	je     c0112bbd <sfs_truncfile+0x199>$/;"	l
c0112ba4	obj/kernel.asm	/^c0112ba4:	68 57 82 11 c0       	push   $0xc0118257$/;"	l
c0112ba9	obj/kernel.asm	/^c0112ba9:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0112bae	obj/kernel.asm	/^c0112bae:	68 c0 03 00 00       	push   $0x3c0$/;"	l
c0112bb3	obj/kernel.asm	/^c0112bb3:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0112bb8	obj/kernel.asm	/^c0112bb8:	e8 12 d9 fe ff       	call   c01004cf <__panic>$/;"	l
c0112bbd	obj/kernel.asm	/^c0112bbd:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0112bc0	obj/kernel.asm	/^c0112bc0:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0112bc3	obj/kernel.asm	/^c0112bc3:	89 10                	mov    %edx,(%eax)$/;"	l
c0112bc5	obj/kernel.asm	/^c0112bc5:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0112bc8	obj/kernel.asm	/^c0112bc8:	c7 40 08 01 00 00 00 	movl   $0x1,0x8(%eax)$/;"	l
c0112bcf	obj/kernel.asm	/^c0112bcf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112bd2	obj/kernel.asm	/^c0112bd2:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0112bd5	obj/kernel.asm	/^c0112bd5:	e8 99 e1 ff ff       	call   c0110d73 <unlock_sin>$/;"	l
c0112bda	obj/kernel.asm	/^c0112bda:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112bdd	obj/kernel.asm	/^c0112bdd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112be0	obj/kernel.asm	/^c0112be0:	c9                   	leave  $/;"	l
c0112be1	obj/kernel.asm	/^c0112be1:	c3                   	ret    $/;"	l
c0112be2	obj/kernel.asm	/^c0112be2 <sfs_lookup>:$/;"	l
c0112be2	obj/kernel.asm	/^c0112be2:	55                   	push   %ebp$/;"	l
c0112be3	obj/kernel.asm	/^c0112be3:	89 e5                	mov    %esp,%ebp$/;"	l
c0112be5	obj/kernel.asm	/^c0112be5:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112be8	obj/kernel.asm	/^c0112be8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112beb	obj/kernel.asm	/^c0112beb:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0112bee	obj/kernel.asm	/^c0112bee:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112bf1	obj/kernel.asm	/^c0112bf1:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112bf5	obj/kernel.asm	/^c0112bf5:	74 0a                	je     c0112c01 <sfs_lookup+0x1f>$/;"	l
c0112bf7	obj/kernel.asm	/^c0112bf7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112bfa	obj/kernel.asm	/^c0112bfa:	8b 40 6c             	mov    0x6c(%eax),%eax$/;"	l
c0112bfd	obj/kernel.asm	/^c0112bfd:	85 c0                	test   %eax,%eax$/;"	l
c0112bff	obj/kernel.asm	/^c0112bff:	74 19                	je     c0112c1a <sfs_lookup+0x38>$/;"	l
c0112c01	obj/kernel.asm	/^c0112c01:	68 14 81 11 c0       	push   $0xc0118114$/;"	l
c0112c06	obj/kernel.asm	/^c0112c06:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0112c0b	obj/kernel.asm	/^c0112c0b:	68 d0 03 00 00       	push   $0x3d0$/;"	l
c0112c10	obj/kernel.asm	/^c0112c10:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0112c15	obj/kernel.asm	/^c0112c15:	e8 b5 d8 fe ff       	call   c01004cf <__panic>$/;"	l
c0112c1a	obj/kernel.asm	/^c0112c1a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112c1d	obj/kernel.asm	/^c0112c1d:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112c20	obj/kernel.asm	/^c0112c20:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112c23	obj/kernel.asm	/^c0112c23:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112c26	obj/kernel.asm	/^c0112c26:	84 c0                	test   %al,%al$/;"	l
c0112c28	obj/kernel.asm	/^c0112c28:	74 0a                	je     c0112c34 <sfs_lookup+0x52>$/;"	l
c0112c2a	obj/kernel.asm	/^c0112c2a:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112c2d	obj/kernel.asm	/^c0112c2d:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0112c30	obj/kernel.asm	/^c0112c30:	3c 2f                	cmp    $0x2f,%al$/;"	l
c0112c32	obj/kernel.asm	/^c0112c32:	75 19                	jne    c0112c4d <sfs_lookup+0x6b>$/;"	l
c0112c34	obj/kernel.asm	/^c0112c34:	68 6c 82 11 c0       	push   $0xc011826c$/;"	l
c0112c39	obj/kernel.asm	/^c0112c39:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0112c3e	obj/kernel.asm	/^c0112c3e:	68 d1 03 00 00       	push   $0x3d1$/;"	l
c0112c43	obj/kernel.asm	/^c0112c43:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0112c48	obj/kernel.asm	/^c0112c48:	e8 82 d8 fe ff       	call   c01004cf <__panic>$/;"	l
c0112c4d	obj/kernel.asm	/^c0112c4d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112c50	obj/kernel.asm	/^c0112c50:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112c53	obj/kernel.asm	/^c0112c53:	e8 6d c4 ff ff       	call   c010f0c5 <inode_ref_inc>$/;"	l
c0112c58	obj/kernel.asm	/^c0112c58:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112c5b	obj/kernel.asm	/^c0112c5b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112c5e	obj/kernel.asm	/^c0112c5e:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112c61	obj/kernel.asm	/^c0112c61:	83 7d ec 00          	cmpl   $0x0,-0x14(%ebp)$/;"	l
c0112c65	obj/kernel.asm	/^c0112c65:	74 0d                	je     c0112c74 <sfs_lookup+0x92>$/;"	l
c0112c67	obj/kernel.asm	/^c0112c67:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112c6a	obj/kernel.asm	/^c0112c6a:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c0112c6d	obj/kernel.asm	/^c0112c6d:	3d 35 12 00 00       	cmp    $0x1235,%eax$/;"	l
c0112c72	obj/kernel.asm	/^c0112c72:	74 19                	je     c0112c8d <sfs_lookup+0xab>$/;"	l
c0112c74	obj/kernel.asm	/^c0112c74:	68 10 7f 11 c0       	push   $0xc0117f10$/;"	l
c0112c79	obj/kernel.asm	/^c0112c79:	68 bf 7e 11 c0       	push   $0xc0117ebf$/;"	l
c0112c7e	obj/kernel.asm	/^c0112c7e:	68 d3 03 00 00       	push   $0x3d3$/;"	l
c0112c83	obj/kernel.asm	/^c0112c83:	68 57 7e 11 c0       	push   $0xc0117e57$/;"	l
c0112c88	obj/kernel.asm	/^c0112c88:	e8 42 d8 fe ff       	call   c01004cf <__panic>$/;"	l
c0112c8d	obj/kernel.asm	/^c0112c8d:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112c90	obj/kernel.asm	/^c0112c90:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112c93	obj/kernel.asm	/^c0112c93:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112c96	obj/kernel.asm	/^c0112c96:	8b 00                	mov    (%eax),%eax$/;"	l
c0112c98	obj/kernel.asm	/^c0112c98:	0f b7 40 04          	movzwl 0x4(%eax),%eax$/;"	l
c0112c9c	obj/kernel.asm	/^c0112c9c:	66 83 f8 02          	cmp    $0x2,%ax$/;"	l
c0112ca0	obj/kernel.asm	/^c0112ca0:	74 15                	je     c0112cb7 <sfs_lookup+0xd5>$/;"	l
c0112ca2	obj/kernel.asm	/^c0112ca2:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112ca5	obj/kernel.asm	/^c0112ca5:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112ca8	obj/kernel.asm	/^c0112ca8:	e8 32 c4 ff ff       	call   c010f0df <inode_ref_dec>$/;"	l
c0112cad	obj/kernel.asm	/^c0112cad:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112cb0	obj/kernel.asm	/^c0112cb0:	b8 ee ff ff ff       	mov    $0xffffffee,%eax$/;"	l
c0112cb5	obj/kernel.asm	/^c0112cb5:	eb 43                	jmp    c0112cfa <sfs_lookup+0x118>$/;"	l
c0112cb7	obj/kernel.asm	/^c0112cb7:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112cba	obj/kernel.asm	/^c0112cba:	6a 00                	push   $0x0$/;"	l
c0112cbc	obj/kernel.asm	/^c0112cbc:	8d 45 e0             	lea    -0x20(%ebp),%eax$/;"	l
c0112cbf	obj/kernel.asm	/^c0112cbf:	50                   	push   %eax$/;"	l
c0112cc0	obj/kernel.asm	/^c0112cc0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0112cc3	obj/kernel.asm	/^c0112cc3:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0112cc6	obj/kernel.asm	/^c0112cc6:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0112cc9	obj/kernel.asm	/^c0112cc9:	e8 ff ed ff ff       	call   c0111acd <sfs_lookup_once>$/;"	l
c0112cce	obj/kernel.asm	/^c0112cce:	83 c4 20             	add    $0x20,%esp$/;"	l
c0112cd1	obj/kernel.asm	/^c0112cd1:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0112cd4	obj/kernel.asm	/^c0112cd4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112cd7	obj/kernel.asm	/^c0112cd7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112cda	obj/kernel.asm	/^c0112cda:	e8 00 c4 ff ff       	call   c010f0df <inode_ref_dec>$/;"	l
c0112cdf	obj/kernel.asm	/^c0112cdf:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112ce2	obj/kernel.asm	/^c0112ce2:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0112ce6	obj/kernel.asm	/^c0112ce6:	74 05                	je     c0112ced <sfs_lookup+0x10b>$/;"	l
c0112ce8	obj/kernel.asm	/^c0112ce8:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0112ceb	obj/kernel.asm	/^c0112ceb:	eb 0d                	jmp    c0112cfa <sfs_lookup+0x118>$/;"	l
c0112ced	obj/kernel.asm	/^c0112ced:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0112cf0	obj/kernel.asm	/^c0112cf0:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112cf3	obj/kernel.asm	/^c0112cf3:	89 10                	mov    %edx,(%eax)$/;"	l
c0112cf5	obj/kernel.asm	/^c0112cf5:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112cfa	obj/kernel.asm	/^c0112cfa:	c9                   	leave  $/;"	l
c0112cfb	obj/kernel.asm	/^c0112cfb:	c3                   	ret    $/;"	l
c0112cfc	obj/kernel.asm	/^c0112cfc <bitmap_create>:$/;"	l
c0112cfc	obj/kernel.asm	/^c0112cfc:	55                   	push   %ebp$/;"	l
c0112cfd	obj/kernel.asm	/^c0112cfd:	89 e5                	mov    %esp,%ebp$/;"	l
c0112cff	obj/kernel.asm	/^c0112cff:	56                   	push   %esi$/;"	l
c0112d00	obj/kernel.asm	/^c0112d00:	53                   	push   %ebx$/;"	l
c0112d01	obj/kernel.asm	/^c0112d01:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0112d04	obj/kernel.asm	/^c0112d04:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0112d08	obj/kernel.asm	/^c0112d08:	74 0b                	je     c0112d15 <bitmap_create+0x19>$/;"	l
c0112d0a	obj/kernel.asm	/^c0112d0a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112d0d	obj/kernel.asm	/^c0112d0d:	83 c0 20             	add    $0x20,%eax$/;"	l
c0112d10	obj/kernel.asm	/^c0112d10:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0112d13	obj/kernel.asm	/^c0112d13:	77 16                	ja     c0112d2b <bitmap_create+0x2f>$/;"	l
c0112d15	obj/kernel.asm	/^c0112d15:	68 8c 82 11 c0       	push   $0xc011828c$/;"	l
c0112d1a	obj/kernel.asm	/^c0112d1a:	68 b4 82 11 c0       	push   $0xc01182b4$/;"	l
c0112d1f	obj/kernel.asm	/^c0112d1f:	6a 15                	push   $0x15$/;"	l
c0112d21	obj/kernel.asm	/^c0112d21:	68 c9 82 11 c0       	push   $0xc01182c9$/;"	l
c0112d26	obj/kernel.asm	/^c0112d26:	e8 a4 d7 fe ff       	call   c01004cf <__panic>$/;"	l
c0112d2b	obj/kernel.asm	/^c0112d2b:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112d2e	obj/kernel.asm	/^c0112d2e:	6a 0c                	push   $0xc$/;"	l
c0112d30	obj/kernel.asm	/^c0112d30:	e8 c1 46 ff ff       	call   c01073f6 <kmalloc>$/;"	l
c0112d35	obj/kernel.asm	/^c0112d35:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112d38	obj/kernel.asm	/^c0112d38:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112d3b	obj/kernel.asm	/^c0112d3b:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0112d3f	obj/kernel.asm	/^c0112d3f:	75 0a                	jne    c0112d4b <bitmap_create+0x4f>$/;"	l
c0112d41	obj/kernel.asm	/^c0112d41:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112d46	obj/kernel.asm	/^c0112d46:	e9 2a 01 00 00       	jmp    c0112e75 <bitmap_create+0x179>$/;"	l
c0112d4b	obj/kernel.asm	/^c0112d4b:	c7 45 ec 20 00 00 00 	movl   $0x20,-0x14(%ebp)$/;"	l
c0112d52	obj/kernel.asm	/^c0112d52:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0112d55	obj/kernel.asm	/^c0112d55:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112d58	obj/kernel.asm	/^c0112d58:	01 d0                	add    %edx,%eax$/;"	l
c0112d5a	obj/kernel.asm	/^c0112d5a:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0112d5d	obj/kernel.asm	/^c0112d5d:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0112d62	obj/kernel.asm	/^c0112d62:	f7 75 ec             	divl   -0x14(%ebp)$/;"	l
c0112d65	obj/kernel.asm	/^c0112d65:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112d68	obj/kernel.asm	/^c0112d68:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112d6b	obj/kernel.asm	/^c0112d6b:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0112d6e	obj/kernel.asm	/^c0112d6e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112d71	obj/kernel.asm	/^c0112d71:	50                   	push   %eax$/;"	l
c0112d72	obj/kernel.asm	/^c0112d72:	e8 7f 46 ff ff       	call   c01073f6 <kmalloc>$/;"	l
c0112d77	obj/kernel.asm	/^c0112d77:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112d7a	obj/kernel.asm	/^c0112d7a:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0112d7d	obj/kernel.asm	/^c0112d7d:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0112d81	obj/kernel.asm	/^c0112d81:	75 18                	jne    c0112d9b <bitmap_create+0x9f>$/;"	l
c0112d83	obj/kernel.asm	/^c0112d83:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0112d86	obj/kernel.asm	/^c0112d86:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0112d89	obj/kernel.asm	/^c0112d89:	e8 80 46 ff ff       	call   c010740e <kfree>$/;"	l
c0112d8e	obj/kernel.asm	/^c0112d8e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112d91	obj/kernel.asm	/^c0112d91:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112d96	obj/kernel.asm	/^c0112d96:	e9 da 00 00 00       	jmp    c0112e75 <bitmap_create+0x179>$/;"	l
c0112d9b	obj/kernel.asm	/^c0112d9b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112d9e	obj/kernel.asm	/^c0112d9e:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0112da1	obj/kernel.asm	/^c0112da1:	89 10                	mov    %edx,(%eax)$/;"	l
c0112da3	obj/kernel.asm	/^c0112da3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112da6	obj/kernel.asm	/^c0112da6:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0112da9	obj/kernel.asm	/^c0112da9:	89 50 04             	mov    %edx,0x4(%eax)$/;"	l
c0112dac	obj/kernel.asm	/^c0112dac:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112daf	obj/kernel.asm	/^c0112daf:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0112db2	obj/kernel.asm	/^c0112db2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0112db5	obj/kernel.asm	/^c0112db5:	50                   	push   %eax$/;"	l
c0112db6	obj/kernel.asm	/^c0112db6:	6a ff                	push   $0xffffffff$/;"	l
c0112db8	obj/kernel.asm	/^c0112db8:	ff 75 e4             	pushl  -0x1c(%ebp)$/;"	l
c0112dbb	obj/kernel.asm	/^c0112dbb:	e8 cf 09 00 00       	call   c011378f <memset>$/;"	l
c0112dc0	obj/kernel.asm	/^c0112dc0:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112dc3	obj/kernel.asm	/^c0112dc3:	89 c2                	mov    %eax,%edx$/;"	l
c0112dc5	obj/kernel.asm	/^c0112dc5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112dc8	obj/kernel.asm	/^c0112dc8:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0112dcb	obj/kernel.asm	/^c0112dcb:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112dce	obj/kernel.asm	/^c0112dce:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0112dd1	obj/kernel.asm	/^c0112dd1:	3b 45 08             	cmp    0x8(%ebp),%eax$/;"	l
c0112dd4	obj/kernel.asm	/^c0112dd4:	0f 84 98 00 00 00    	je     c0112e72 <bitmap_create+0x176>$/;"	l
c0112dda	obj/kernel.asm	/^c0112dda:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0112ddd	obj/kernel.asm	/^c0112ddd:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0112de0	obj/kernel.asm	/^c0112de0:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0112de3	obj/kernel.asm	/^c0112de3:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0112de6	obj/kernel.asm	/^c0112de6:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0112de9	obj/kernel.asm	/^c0112de9:	89 c2                	mov    %eax,%edx$/;"	l
c0112deb	obj/kernel.asm	/^c0112deb:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112dee	obj/kernel.asm	/^c0112dee:	29 d0                	sub    %edx,%eax$/;"	l
c0112df0	obj/kernel.asm	/^c0112df0:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112df3	obj/kernel.asm	/^c0112df3:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112df6	obj/kernel.asm	/^c0112df6:	c1 e8 05             	shr    $0x5,%eax$/;"	l
c0112df9	obj/kernel.asm	/^c0112df9:	3b 45 e0             	cmp    -0x20(%ebp),%eax$/;"	l
c0112dfc	obj/kernel.asm	/^c0112dfc:	74 16                	je     c0112e14 <bitmap_create+0x118>$/;"	l
c0112dfe	obj/kernel.asm	/^c0112dfe:	68 de 82 11 c0       	push   $0xc01182de$/;"	l
c0112e03	obj/kernel.asm	/^c0112e03:	68 b4 82 11 c0       	push   $0xc01182b4$/;"	l
c0112e08	obj/kernel.asm	/^c0112e08:	6a 2a                	push   $0x2a$/;"	l
c0112e0a	obj/kernel.asm	/^c0112e0a:	68 c9 82 11 c0       	push   $0xc01182c9$/;"	l
c0112e0f	obj/kernel.asm	/^c0112e0f:	e8 bb d6 fe ff       	call   c01004cf <__panic>$/;"	l
c0112e14	obj/kernel.asm	/^c0112e14:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0112e18	obj/kernel.asm	/^c0112e18:	74 06                	je     c0112e20 <bitmap_create+0x124>$/;"	l
c0112e1a	obj/kernel.asm	/^c0112e1a:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%ebp)$/;"	l
c0112e1e	obj/kernel.asm	/^c0112e1e:	76 16                	jbe    c0112e36 <bitmap_create+0x13a>$/;"	l
c0112e20	obj/kernel.asm	/^c0112e20:	68 f8 82 11 c0       	push   $0xc01182f8$/;"	l
c0112e25	obj/kernel.asm	/^c0112e25:	68 b4 82 11 c0       	push   $0xc01182b4$/;"	l
c0112e2a	obj/kernel.asm	/^c0112e2a:	6a 2b                	push   $0x2b$/;"	l
c0112e2c	obj/kernel.asm	/^c0112e2c:	68 c9 82 11 c0       	push   $0xc01182c9$/;"	l
c0112e31	obj/kernel.asm	/^c0112e31:	e8 99 d6 fe ff       	call   c01004cf <__panic>$/;"	l
c0112e36	obj/kernel.asm	/^c0112e36:	eb 34                	jmp    c0112e6c <bitmap_create+0x170>$/;"	l
c0112e38	obj/kernel.asm	/^c0112e38:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112e3b	obj/kernel.asm	/^c0112e3b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112e3e	obj/kernel.asm	/^c0112e3e:	8b 55 e0             	mov    -0x20(%ebp),%edx$/;"	l
c0112e41	obj/kernel.asm	/^c0112e41:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0112e44	obj/kernel.asm	/^c0112e44:	01 c2                	add    %eax,%edx$/;"	l
c0112e46	obj/kernel.asm	/^c0112e46:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112e49	obj/kernel.asm	/^c0112e49:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112e4c	obj/kernel.asm	/^c0112e4c:	8b 4d e0             	mov    -0x20(%ebp),%ecx$/;"	l
c0112e4f	obj/kernel.asm	/^c0112e4f:	c1 e1 02             	shl    $0x2,%ecx$/;"	l
c0112e52	obj/kernel.asm	/^c0112e52:	01 c8                	add    %ecx,%eax$/;"	l
c0112e54	obj/kernel.asm	/^c0112e54:	8b 18                	mov    (%eax),%ebx$/;"	l
c0112e56	obj/kernel.asm	/^c0112e56:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112e59	obj/kernel.asm	/^c0112e59:	be 01 00 00 00       	mov    $0x1,%esi$/;"	l
c0112e5e	obj/kernel.asm	/^c0112e5e:	89 c1                	mov    %eax,%ecx$/;"	l
c0112e60	obj/kernel.asm	/^c0112e60:	d3 e6                	shl    %cl,%esi$/;"	d
c0112e62	obj/kernel.asm	/^c0112e62:	89 f0                	mov    %esi,%eax$/;"	l
c0112e64	obj/kernel.asm	/^c0112e64:	31 d8                	xor    %ebx,%eax$/;"	l
c0112e66	obj/kernel.asm	/^c0112e66:	89 02                	mov    %eax,(%edx)$/;"	l
c0112e68	obj/kernel.asm	/^c0112e68:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0112e6c	obj/kernel.asm	/^c0112e6c:	83 7d f4 1f          	cmpl   $0x1f,-0xc(%ebp)$/;"	l
c0112e70	obj/kernel.asm	/^c0112e70:	76 c6                	jbe    c0112e38 <bitmap_create+0x13c>$/;"	l
c0112e72	obj/kernel.asm	/^c0112e72:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112e75	obj/kernel.asm	/^c0112e75:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c0112e78	obj/kernel.asm	/^c0112e78:	5b                   	pop    %ebx$/;"	l
c0112e79	obj/kernel.asm	/^c0112e79:	5e                   	pop    %esi$/;"	l
c0112e7a	obj/kernel.asm	/^c0112e7a:	5d                   	pop    %ebp$/;"	l
c0112e7b	obj/kernel.asm	/^c0112e7b:	c3                   	ret    $/;"	l
c0112e7c	obj/kernel.asm	/^c0112e7c <bitmap_alloc>:$/;"	l
c0112e7c	obj/kernel.asm	/^c0112e7c:	55                   	push   %ebp$/;"	l
c0112e7d	obj/kernel.asm	/^c0112e7d:	89 e5                	mov    %esp,%ebp$/;"	l
c0112e7f	obj/kernel.asm	/^c0112e7f:	83 ec 28             	sub    $0x28,%esp$/;"	l
c0112e82	obj/kernel.asm	/^c0112e82:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112e85	obj/kernel.asm	/^c0112e85:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112e88	obj/kernel.asm	/^c0112e88:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0112e8b	obj/kernel.asm	/^c0112e8b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112e8e	obj/kernel.asm	/^c0112e8e:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0112e91	obj/kernel.asm	/^c0112e91:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0112e94	obj/kernel.asm	/^c0112e94:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0112e9b	obj/kernel.asm	/^c0112e9b:	e9 ad 00 00 00       	jmp    c0112f4d <bitmap_alloc+0xd1>$/;"	l
c0112ea0	obj/kernel.asm	/^c0112ea0:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112ea3	obj/kernel.asm	/^c0112ea3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0112eaa	obj/kernel.asm	/^c0112eaa:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112ead	obj/kernel.asm	/^c0112ead:	01 d0                	add    %edx,%eax$/;"	l
c0112eaf	obj/kernel.asm	/^c0112eaf:	8b 00                	mov    (%eax),%eax$/;"	l
c0112eb1	obj/kernel.asm	/^c0112eb1:	85 c0                	test   %eax,%eax$/;"	l
c0112eb3	obj/kernel.asm	/^c0112eb3:	0f 84 90 00 00 00    	je     c0112f49 <bitmap_alloc+0xcd>$/;"	l
c0112eb9	obj/kernel.asm	/^c0112eb9:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)$/;"	l
c0112ec0	obj/kernel.asm	/^c0112ec0:	eb 6b                	jmp    c0112f2d <bitmap_alloc+0xb1>$/;"	l
c0112ec2	obj/kernel.asm	/^c0112ec2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112ec5	obj/kernel.asm	/^c0112ec5:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0112eca	obj/kernel.asm	/^c0112eca:	89 c1                	mov    %eax,%ecx$/;"	l
c0112ecc	obj/kernel.asm	/^c0112ecc:	d3 e2                	shl    %cl,%edx$/;"	d
c0112ece	obj/kernel.asm	/^c0112ece:	89 d0                	mov    %edx,%eax$/;"	l
c0112ed0	obj/kernel.asm	/^c0112ed0:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0112ed3	obj/kernel.asm	/^c0112ed3:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112ed6	obj/kernel.asm	/^c0112ed6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0112edd	obj/kernel.asm	/^c0112edd:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112ee0	obj/kernel.asm	/^c0112ee0:	01 d0                	add    %edx,%eax$/;"	l
c0112ee2	obj/kernel.asm	/^c0112ee2:	8b 00                	mov    (%eax),%eax$/;"	l
c0112ee4	obj/kernel.asm	/^c0112ee4:	23 45 e4             	and    -0x1c(%ebp),%eax$/;"	l
c0112ee7	obj/kernel.asm	/^c0112ee7:	85 c0                	test   %eax,%eax$/;"	l
c0112ee9	obj/kernel.asm	/^c0112ee9:	74 3e                	je     c0112f29 <bitmap_alloc+0xad>$/;"	l
c0112eeb	obj/kernel.asm	/^c0112eeb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112eee	obj/kernel.asm	/^c0112eee:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0112ef5	obj/kernel.asm	/^c0112ef5:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112ef8	obj/kernel.asm	/^c0112ef8:	01 c2                	add    %eax,%edx$/;"	l
c0112efa	obj/kernel.asm	/^c0112efa:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112efd	obj/kernel.asm	/^c0112efd:	8d 0c 85 00 00 00 00 	lea    0x0(,%eax,4),%ecx$/;"	l
c0112f04	obj/kernel.asm	/^c0112f04:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0112f07	obj/kernel.asm	/^c0112f07:	01 c8                	add    %ecx,%eax$/;"	l
c0112f09	obj/kernel.asm	/^c0112f09:	8b 00                	mov    (%eax),%eax$/;"	l
c0112f0b	obj/kernel.asm	/^c0112f0b:	33 45 e4             	xor    -0x1c(%ebp),%eax$/;"	l
c0112f0e	obj/kernel.asm	/^c0112f0e:	89 02                	mov    %eax,(%edx)$/;"	l
c0112f10	obj/kernel.asm	/^c0112f10:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112f13	obj/kernel.asm	/^c0112f13:	c1 e0 05             	shl    $0x5,%eax$/;"	l
c0112f16	obj/kernel.asm	/^c0112f16:	89 c2                	mov    %eax,%edx$/;"	l
c0112f18	obj/kernel.asm	/^c0112f18:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112f1b	obj/kernel.asm	/^c0112f1b:	01 c2                	add    %eax,%edx$/;"	l
c0112f1d	obj/kernel.asm	/^c0112f1d:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112f20	obj/kernel.asm	/^c0112f20:	89 10                	mov    %edx,(%eax)$/;"	l
c0112f22	obj/kernel.asm	/^c0112f22:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0112f27	obj/kernel.asm	/^c0112f27:	eb 35                	jmp    c0112f5e <bitmap_alloc+0xe2>$/;"	l
c0112f29	obj/kernel.asm	/^c0112f29:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)$/;"	l
c0112f2d	obj/kernel.asm	/^c0112f2d:	83 7d f0 1f          	cmpl   $0x1f,-0x10(%ebp)$/;"	l
c0112f31	obj/kernel.asm	/^c0112f31:	76 8f                	jbe    c0112ec2 <bitmap_alloc+0x46>$/;"	l
c0112f33	obj/kernel.asm	/^c0112f33:	68 1d 83 11 c0       	push   $0xc011831d$/;"	l
c0112f38	obj/kernel.asm	/^c0112f38:	68 b4 82 11 c0       	push   $0xc01182b4$/;"	l
c0112f3d	obj/kernel.asm	/^c0112f3d:	6a 43                	push   $0x43$/;"	l
c0112f3f	obj/kernel.asm	/^c0112f3f:	68 c9 82 11 c0       	push   $0xc01182c9$/;"	l
c0112f44	obj/kernel.asm	/^c0112f44:	e8 86 d5 fe ff       	call   c01004cf <__panic>$/;"	l
c0112f49	obj/kernel.asm	/^c0112f49:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)$/;"	l
c0112f4d	obj/kernel.asm	/^c0112f4d:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112f50	obj/kernel.asm	/^c0112f50:	3b 45 e8             	cmp    -0x18(%ebp),%eax$/;"	l
c0112f53	obj/kernel.asm	/^c0112f53:	0f 82 47 ff ff ff    	jb     c0112ea0 <bitmap_alloc+0x24>$/;"	l
c0112f59	obj/kernel.asm	/^c0112f59:	b8 fc ff ff ff       	mov    $0xfffffffc,%eax$/;"	l
c0112f5e	obj/kernel.asm	/^c0112f5e:	c9                   	leave  $/;"	l
c0112f5f	obj/kernel.asm	/^c0112f5f:	c3                   	ret    $/;"	l
c0112f60	obj/kernel.asm	/^c0112f60 <bitmap_translate>:$/;"	l
c0112f60	obj/kernel.asm	/^c0112f60:	55                   	push   %ebp$/;"	l
c0112f61	obj/kernel.asm	/^c0112f61:	89 e5                	mov    %esp,%ebp$/;"	l
c0112f63	obj/kernel.asm	/^c0112f63:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0112f66	obj/kernel.asm	/^c0112f66:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112f69	obj/kernel.asm	/^c0112f69:	8b 00                	mov    (%eax),%eax$/;"	l
c0112f6b	obj/kernel.asm	/^c0112f6b:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0112f6e	obj/kernel.asm	/^c0112f6e:	77 16                	ja     c0112f86 <bitmap_translate+0x26>$/;"	l
c0112f70	obj/kernel.asm	/^c0112f70:	68 1f 83 11 c0       	push   $0xc011831f$/;"	l
c0112f75	obj/kernel.asm	/^c0112f75:	68 b4 82 11 c0       	push   $0xc01182b4$/;"	l
c0112f7a	obj/kernel.asm	/^c0112f7a:	6a 4c                	push   $0x4c$/;"	l
c0112f7c	obj/kernel.asm	/^c0112f7c:	68 c9 82 11 c0       	push   $0xc01182c9$/;"	l
c0112f81	obj/kernel.asm	/^c0112f81:	e8 49 d5 fe ff       	call   c01004cf <__panic>$/;"	l
c0112f86	obj/kernel.asm	/^c0112f86:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112f89	obj/kernel.asm	/^c0112f89:	c1 e8 05             	shr    $0x5,%eax$/;"	l
c0112f8c	obj/kernel.asm	/^c0112f8c:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0112f8f	obj/kernel.asm	/^c0112f8f:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0112f92	obj/kernel.asm	/^c0112f92:	83 e0 1f             	and    $0x1f,%eax$/;"	l
c0112f95	obj/kernel.asm	/^c0112f95:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0112f98	obj/kernel.asm	/^c0112f98:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0112f9b	obj/kernel.asm	/^c0112f9b:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0112f9e	obj/kernel.asm	/^c0112f9e:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0112fa1	obj/kernel.asm	/^c0112fa1:	c1 e2 02             	shl    $0x2,%edx$/;"	l
c0112fa4	obj/kernel.asm	/^c0112fa4:	01 c2                	add    %eax,%edx$/;"	l
c0112fa6	obj/kernel.asm	/^c0112fa6:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0112fa9	obj/kernel.asm	/^c0112fa9:	89 10                	mov    %edx,(%eax)$/;"	l
c0112fab	obj/kernel.asm	/^c0112fab:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112fae	obj/kernel.asm	/^c0112fae:	ba 01 00 00 00       	mov    $0x1,%edx$/;"	l
c0112fb3	obj/kernel.asm	/^c0112fb3:	89 c1                	mov    %eax,%ecx$/;"	l
c0112fb5	obj/kernel.asm	/^c0112fb5:	d3 e2                	shl    %cl,%edx$/;"	d
c0112fb7	obj/kernel.asm	/^c0112fb7:	89 d0                	mov    %edx,%eax$/;"	l
c0112fb9	obj/kernel.asm	/^c0112fb9:	89 c2                	mov    %eax,%edx$/;"	l
c0112fbb	obj/kernel.asm	/^c0112fbb:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0112fbe	obj/kernel.asm	/^c0112fbe:	89 10                	mov    %edx,(%eax)$/;"	l
c0112fc0	obj/kernel.asm	/^c0112fc0:	c9                   	leave  $/;"	l
c0112fc1	obj/kernel.asm	/^c0112fc1:	c3                   	ret    $/;"	l
c0112fc2	obj/kernel.asm	/^c0112fc2 <bitmap_test>:$/;"	l
c0112fc2	obj/kernel.asm	/^c0112fc2:	55                   	push   %ebp$/;"	l
c0112fc3	obj/kernel.asm	/^c0112fc3:	89 e5                	mov    %esp,%ebp$/;"	l
c0112fc5	obj/kernel.asm	/^c0112fc5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0112fc8	obj/kernel.asm	/^c0112fc8:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0112fcb	obj/kernel.asm	/^c0112fcb:	50                   	push   %eax$/;"	l
c0112fcc	obj/kernel.asm	/^c0112fcc:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c0112fcf	obj/kernel.asm	/^c0112fcf:	50                   	push   %eax$/;"	l
c0112fd0	obj/kernel.asm	/^c0112fd0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0112fd3	obj/kernel.asm	/^c0112fd3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112fd6	obj/kernel.asm	/^c0112fd6:	e8 85 ff ff ff       	call   c0112f60 <bitmap_translate>$/;"	l
c0112fdb	obj/kernel.asm	/^c0112fdb:	83 c4 10             	add    $0x10,%esp$/;"	l
c0112fde	obj/kernel.asm	/^c0112fde:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0112fe1	obj/kernel.asm	/^c0112fe1:	8b 10                	mov    (%eax),%edx$/;"	l
c0112fe3	obj/kernel.asm	/^c0112fe3:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0112fe6	obj/kernel.asm	/^c0112fe6:	21 d0                	and    %edx,%eax$/;"	l
c0112fe8	obj/kernel.asm	/^c0112fe8:	c9                   	leave  $/;"	l
c0112fe9	obj/kernel.asm	/^c0112fe9:	c3                   	ret    $/;"	l
c0112fea	obj/kernel.asm	/^c0112fea <bitmap_free>:$/;"	l
c0112fea	obj/kernel.asm	/^c0112fea:	55                   	push   %ebp$/;"	l
c0112feb	obj/kernel.asm	/^c0112feb:	89 e5                	mov    %esp,%ebp$/;"	l
c0112fed	obj/kernel.asm	/^c0112fed:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0112ff0	obj/kernel.asm	/^c0112ff0:	8d 45 f0             	lea    -0x10(%ebp),%eax$/;"	l
c0112ff3	obj/kernel.asm	/^c0112ff3:	50                   	push   %eax$/;"	l
c0112ff4	obj/kernel.asm	/^c0112ff4:	8d 45 f4             	lea    -0xc(%ebp),%eax$/;"	l
c0112ff7	obj/kernel.asm	/^c0112ff7:	50                   	push   %eax$/;"	l
c0112ff8	obj/kernel.asm	/^c0112ff8:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0112ffb	obj/kernel.asm	/^c0112ffb:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0112ffe	obj/kernel.asm	/^c0112ffe:	e8 5d ff ff ff       	call   c0112f60 <bitmap_translate>$/;"	l
c0113003	obj/kernel.asm	/^c0113003:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113006	obj/kernel.asm	/^c0113006:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113009	obj/kernel.asm	/^c0113009:	8b 10                	mov    (%eax),%edx$/;"	l
c011300b	obj/kernel.asm	/^c011300b:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011300e	obj/kernel.asm	/^c011300e:	21 d0                	and    %edx,%eax$/;"	l
c0113010	obj/kernel.asm	/^c0113010:	85 c0                	test   %eax,%eax$/;"	l
c0113012	obj/kernel.asm	/^c0113012:	74 16                	je     c011302a <bitmap_free+0x40>$/;"	l
c0113014	obj/kernel.asm	/^c0113014:	68 35 83 11 c0       	push   $0xc0118335$/;"	l
c0113019	obj/kernel.asm	/^c0113019:	68 b4 82 11 c0       	push   $0xc01182b4$/;"	l
c011301e	obj/kernel.asm	/^c011301e:	6a 5f                	push   $0x5f$/;"	l
c0113020	obj/kernel.asm	/^c0113020:	68 c9 82 11 c0       	push   $0xc01182c9$/;"	l
c0113025	obj/kernel.asm	/^c0113025:	e8 a5 d4 fe ff       	call   c01004cf <__panic>$/;"	l
c011302a	obj/kernel.asm	/^c011302a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011302d	obj/kernel.asm	/^c011302d:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0113030	obj/kernel.asm	/^c0113030:	8b 0a                	mov    (%edx),%ecx$/;"	l
c0113032	obj/kernel.asm	/^c0113032:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0113035	obj/kernel.asm	/^c0113035:	09 ca                	or     %ecx,%edx$/;"	l
c0113037	obj/kernel.asm	/^c0113037:	89 10                	mov    %edx,(%eax)$/;"	l
c0113039	obj/kernel.asm	/^c0113039:	c9                   	leave  $/;"	l
c011303a	obj/kernel.asm	/^c011303a:	c3                   	ret    $/;"	l
c011303b	obj/kernel.asm	/^c011303b <bitmap_destroy>:$/;"	l
c011303b	obj/kernel.asm	/^c011303b:	55                   	push   %ebp$/;"	l
c011303c	obj/kernel.asm	/^c011303c:	89 e5                	mov    %esp,%ebp$/;"	l
c011303e	obj/kernel.asm	/^c011303e:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0113041	obj/kernel.asm	/^c0113041:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113044	obj/kernel.asm	/^c0113044:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113047	obj/kernel.asm	/^c0113047:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011304a	obj/kernel.asm	/^c011304a:	50                   	push   %eax$/;"	l
c011304b	obj/kernel.asm	/^c011304b:	e8 be 43 ff ff       	call   c010740e <kfree>$/;"	l
c0113050	obj/kernel.asm	/^c0113050:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113053	obj/kernel.asm	/^c0113053:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0113056	obj/kernel.asm	/^c0113056:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113059	obj/kernel.asm	/^c0113059:	e8 b0 43 ff ff       	call   c010740e <kfree>$/;"	l
c011305e	obj/kernel.asm	/^c011305e:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113061	obj/kernel.asm	/^c0113061:	c9                   	leave  $/;"	l
c0113062	obj/kernel.asm	/^c0113062:	c3                   	ret    $/;"	l
c0113063	obj/kernel.asm	/^c0113063 <bitmap_getdata>:$/;"	l
c0113063	obj/kernel.asm	/^c0113063:	55                   	push   %ebp$/;"	l
c0113064	obj/kernel.asm	/^c0113064:	89 e5                	mov    %esp,%ebp$/;"	l
c0113066	obj/kernel.asm	/^c0113066:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c011306a	obj/kernel.asm	/^c011306a:	74 12                	je     c011307e <bitmap_getdata+0x1b>$/;"	l
c011306c	obj/kernel.asm	/^c011306c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011306f	obj/kernel.asm	/^c011306f:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0113072	obj/kernel.asm	/^c0113072:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx$/;"	l
c0113079	obj/kernel.asm	/^c0113079:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011307c	obj/kernel.asm	/^c011307c:	89 10                	mov    %edx,(%eax)$/;"	l
c011307e	obj/kernel.asm	/^c011307e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113081	obj/kernel.asm	/^c0113081:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113084	obj/kernel.asm	/^c0113084:	5d                   	pop    %ebp$/;"	l
c0113085	obj/kernel.asm	/^c0113085:	c3                   	ret    $/;"	l
c0113086	obj/kernel.asm	/^c0113086 <sfs_rwblock_nolock>:$/;"	l
c0113086	obj/kernel.asm	/^c0113086:	55                   	push   %ebp$/;"	l
c0113087	obj/kernel.asm	/^c0113087:	89 e5                	mov    %esp,%ebp$/;"	l
c0113089	obj/kernel.asm	/^c0113089:	83 ec 28             	sub    $0x28,%esp$/;"	l
c011308c	obj/kernel.asm	/^c011308c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0113090	obj/kernel.asm	/^c0113090:	75 06                	jne    c0113098 <sfs_rwblock_nolock+0x12>$/;"	l
c0113092	obj/kernel.asm	/^c0113092:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0113096	obj/kernel.asm	/^c0113096:	75 0b                	jne    c01130a3 <sfs_rwblock_nolock+0x1d>$/;"	l
c0113098	obj/kernel.asm	/^c0113098:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011309b	obj/kernel.asm	/^c011309b:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c011309e	obj/kernel.asm	/^c011309e:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c01130a1	obj/kernel.asm	/^c01130a1:	77 16                	ja     c01130b9 <sfs_rwblock_nolock+0x33>$/;"	l
c01130a3	obj/kernel.asm	/^c01130a3:	68 48 83 11 c0       	push   $0xc0118348$/;"	l
c01130a8	obj/kernel.asm	/^c01130a8:	68 7c 83 11 c0       	push   $0xc011837c$/;"	l
c01130ad	obj/kernel.asm	/^c01130ad:	6a 15                	push   $0x15$/;"	l
c01130af	obj/kernel.asm	/^c01130af:	68 91 83 11 c0       	push   $0xc0118391$/;"	l
c01130b4	obj/kernel.asm	/^c01130b4:	e8 16 d4 fe ff       	call   c01004cf <__panic>$/;"	l
c01130b9	obj/kernel.asm	/^c01130b9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01130bc	obj/kernel.asm	/^c01130bc:	c1 e0 0c             	shl    $0xc,%eax$/;"	l
c01130bf	obj/kernel.asm	/^c01130bf:	50                   	push   %eax$/;"	l
c01130c0	obj/kernel.asm	/^c01130c0:	68 00 10 00 00       	push   $0x1000$/;"	l
c01130c5	obj/kernel.asm	/^c01130c5:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01130c8	obj/kernel.asm	/^c01130c8:	8d 45 e4             	lea    -0x1c(%ebp),%eax$/;"	l
c01130cb	obj/kernel.asm	/^c01130cb:	50                   	push   %eax$/;"	l
c01130cc	obj/kernel.asm	/^c01130cc:	e8 8d 7c ff ff       	call   c010ad5e <iobuf_init>$/;"	l
c01130d1	obj/kernel.asm	/^c01130d1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01130d4	obj/kernel.asm	/^c01130d4:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01130d7	obj/kernel.asm	/^c01130d7:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01130da	obj/kernel.asm	/^c01130da:	8b 40 2c             	mov    0x2c(%eax),%eax$/;"	l
c01130dd	obj/kernel.asm	/^c01130dd:	8b 40 10             	mov    0x10(%eax),%eax$/;"	l
c01130e0	obj/kernel.asm	/^c01130e0:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01130e3	obj/kernel.asm	/^c01130e3:	8b 52 2c             	mov    0x2c(%edx),%edx$/;"	l
c01130e6	obj/kernel.asm	/^c01130e6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01130e9	obj/kernel.asm	/^c01130e9:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c01130ec	obj/kernel.asm	/^c01130ec:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c01130ef	obj/kernel.asm	/^c01130ef:	52                   	push   %edx$/;"	l
c01130f0	obj/kernel.asm	/^c01130f0:	ff d0                	call   *%eax$/;"	l
c01130f2	obj/kernel.asm	/^c01130f2:	83 c4 10             	add    $0x10,%esp$/;"	l
c01130f5	obj/kernel.asm	/^c01130f5:	c9                   	leave  $/;"	l
c01130f6	obj/kernel.asm	/^c01130f6:	c3                   	ret    $/;"	l
c01130f7	obj/kernel.asm	/^c01130f7 <sfs_rwblock>:$/;"	l
c01130f7	obj/kernel.asm	/^c01130f7:	55                   	push   %ebp$/;"	l
c01130f8	obj/kernel.asm	/^c01130f8:	89 e5                	mov    %esp,%ebp$/;"	l
c01130fa	obj/kernel.asm	/^c01130fa:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01130fd	obj/kernel.asm	/^c01130fd:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0113104	obj/kernel.asm	/^c0113104:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0113107	obj/kernel.asm	/^c0113107:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011310a	obj/kernel.asm	/^c011310a:	e8 e4 d3 ff ff       	call   c01104f3 <lock_sfs_io>$/;"	l
c011310f	obj/kernel.asm	/^c011310f:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113112	obj/kernel.asm	/^c0113112:	eb 33                	jmp    c0113147 <sfs_rwblock+0x50>$/;"	l
c0113114	obj/kernel.asm	/^c0113114:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0113117	obj/kernel.asm	/^c0113117:	6a 01                	push   $0x1$/;"	l
c0113119	obj/kernel.asm	/^c0113119:	ff 75 18             	pushl  0x18(%ebp)$/;"	l
c011311c	obj/kernel.asm	/^c011311c:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c011311f	obj/kernel.asm	/^c011311f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113122	obj/kernel.asm	/^c0113122:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113125	obj/kernel.asm	/^c0113125:	e8 5c ff ff ff       	call   c0113086 <sfs_rwblock_nolock>$/;"	l
c011312a	obj/kernel.asm	/^c011312a:	83 c4 20             	add    $0x20,%esp$/;"	l
c011312d	obj/kernel.asm	/^c011312d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113130	obj/kernel.asm	/^c0113130:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0113134	obj/kernel.asm	/^c0113134:	74 02                	je     c0113138 <sfs_rwblock+0x41>$/;"	l
c0113136	obj/kernel.asm	/^c0113136:	eb 15                	jmp    c011314d <sfs_rwblock+0x56>$/;"	l
c0113138	obj/kernel.asm	/^c0113138:	83 45 10 01          	addl   $0x1,0x10(%ebp)$/;"	l
c011313c	obj/kernel.asm	/^c011313c:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0113140	obj/kernel.asm	/^c0113140:	81 45 0c 00 10 00 00 	addl   $0x1000,0xc(%ebp)$/;"	l
c0113147	obj/kernel.asm	/^c0113147:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)$/;"	l
c011314b	obj/kernel.asm	/^c011314b:	75 c7                	jne    c0113114 <sfs_rwblock+0x1d>$/;"	l
c011314d	obj/kernel.asm	/^c011314d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0113150	obj/kernel.asm	/^c0113150:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113153	obj/kernel.asm	/^c0113153:	e8 cf d3 ff ff       	call   c0110527 <unlock_sfs_io>$/;"	l
c0113158	obj/kernel.asm	/^c0113158:	83 c4 10             	add    $0x10,%esp$/;"	l
c011315b	obj/kernel.asm	/^c011315b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011315e	obj/kernel.asm	/^c011315e:	c9                   	leave  $/;"	l
c011315f	obj/kernel.asm	/^c011315f:	c3                   	ret    $/;"	l
c0113160	obj/kernel.asm	/^c0113160 <sfs_rblock>:$/;"	l
c0113160	obj/kernel.asm	/^c0113160:	55                   	push   %ebp$/;"	l
c0113161	obj/kernel.asm	/^c0113161:	89 e5                	mov    %esp,%ebp$/;"	l
c0113163	obj/kernel.asm	/^c0113163:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0113166	obj/kernel.asm	/^c0113166:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0113169	obj/kernel.asm	/^c0113169:	6a 00                	push   $0x0$/;"	l
c011316b	obj/kernel.asm	/^c011316b:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c011316e	obj/kernel.asm	/^c011316e:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113171	obj/kernel.asm	/^c0113171:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113174	obj/kernel.asm	/^c0113174:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113177	obj/kernel.asm	/^c0113177:	e8 7b ff ff ff       	call   c01130f7 <sfs_rwblock>$/;"	l
c011317c	obj/kernel.asm	/^c011317c:	83 c4 20             	add    $0x20,%esp$/;"	l
c011317f	obj/kernel.asm	/^c011317f:	c9                   	leave  $/;"	l
c0113180	obj/kernel.asm	/^c0113180:	c3                   	ret    $/;"	l
c0113181	obj/kernel.asm	/^c0113181 <sfs_wblock>:$/;"	l
c0113181	obj/kernel.asm	/^c0113181:	55                   	push   %ebp$/;"	l
c0113182	obj/kernel.asm	/^c0113182:	89 e5                	mov    %esp,%ebp$/;"	l
c0113184	obj/kernel.asm	/^c0113184:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0113187	obj/kernel.asm	/^c0113187:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011318a	obj/kernel.asm	/^c011318a:	6a 01                	push   $0x1$/;"	l
c011318c	obj/kernel.asm	/^c011318c:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c011318f	obj/kernel.asm	/^c011318f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113192	obj/kernel.asm	/^c0113192:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113195	obj/kernel.asm	/^c0113195:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113198	obj/kernel.asm	/^c0113198:	e8 5a ff ff ff       	call   c01130f7 <sfs_rwblock>$/;"	l
c011319d	obj/kernel.asm	/^c011319d:	83 c4 20             	add    $0x20,%esp$/;"	l
c01131a0	obj/kernel.asm	/^c01131a0:	c9                   	leave  $/;"	l
c01131a1	obj/kernel.asm	/^c01131a1:	c3                   	ret    $/;"	l
c01131a2	obj/kernel.asm	/^c01131a2 <sfs_rbuf>:$/;"	l
c01131a2	obj/kernel.asm	/^c01131a2:	55                   	push   %ebp$/;"	l
c01131a3	obj/kernel.asm	/^c01131a3:	89 e5                	mov    %esp,%ebp$/;"	l
c01131a5	obj/kernel.asm	/^c01131a5:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01131a8	obj/kernel.asm	/^c01131a8:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c01131ac	obj/kernel.asm	/^c01131ac:	78 18                	js     c01131c6 <sfs_rbuf+0x24>$/;"	l
c01131ae	obj/kernel.asm	/^c01131ae:	81 7d 18 ff 0f 00 00 	cmpl   $0xfff,0x18(%ebp)$/;"	l
c01131b5	obj/kernel.asm	/^c01131b5:	7f 0f                	jg     c01131c6 <sfs_rbuf+0x24>$/;"	l
c01131b7	obj/kernel.asm	/^c01131b7:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
c01131ba	obj/kernel.asm	/^c01131ba:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01131bd	obj/kernel.asm	/^c01131bd:	01 d0                	add    %edx,%eax$/;"	l
c01131bf	obj/kernel.asm	/^c01131bf:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
c01131c4	obj/kernel.asm	/^c01131c4:	76 16                	jbe    c01131dc <sfs_rbuf+0x3a>$/;"	l
c01131c6	obj/kernel.asm	/^c01131c6:	68 a8 83 11 c0       	push   $0xc01183a8$/;"	l
c01131cb	obj/kernel.asm	/^c01131cb:	68 7c 83 11 c0       	push   $0xc011837c$/;"	l
c01131d0	obj/kernel.asm	/^c01131d0:	6a 55                	push   $0x55$/;"	l
c01131d2	obj/kernel.asm	/^c01131d2:	68 91 83 11 c0       	push   $0xc0118391$/;"	l
c01131d7	obj/kernel.asm	/^c01131d7:	e8 f3 d2 fe ff       	call   c01004cf <__panic>$/;"	l
c01131dc	obj/kernel.asm	/^c01131dc:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01131df	obj/kernel.asm	/^c01131df:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01131e2	obj/kernel.asm	/^c01131e2:	e8 0c d3 ff ff       	call   c01104f3 <lock_sfs_io>$/;"	l
c01131e7	obj/kernel.asm	/^c01131e7:	83 c4 10             	add    $0x10,%esp$/;"	l
c01131ea	obj/kernel.asm	/^c01131ea:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01131ed	obj/kernel.asm	/^c01131ed:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01131f0	obj/kernel.asm	/^c01131f0:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01131f3	obj/kernel.asm	/^c01131f3:	6a 01                	push   $0x1$/;"	l
c01131f5	obj/kernel.asm	/^c01131f5:	6a 00                	push   $0x0$/;"	l
c01131f7	obj/kernel.asm	/^c01131f7:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c01131fa	obj/kernel.asm	/^c01131fa:	50                   	push   %eax$/;"	l
c01131fb	obj/kernel.asm	/^c01131fb:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01131fe	obj/kernel.asm	/^c01131fe:	e8 83 fe ff ff       	call   c0113086 <sfs_rwblock_nolock>$/;"	l
c0113203	obj/kernel.asm	/^c0113203:	83 c4 20             	add    $0x20,%esp$/;"	l
c0113206	obj/kernel.asm	/^c0113206:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113209	obj/kernel.asm	/^c0113209:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c011320d	obj/kernel.asm	/^c011320d:	75 1d                	jne    c011322c <sfs_rbuf+0x8a>$/;"	l
c011320f	obj/kernel.asm	/^c011320f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113212	obj/kernel.asm	/^c0113212:	8b 50 38             	mov    0x38(%eax),%edx$/;"	l
c0113215	obj/kernel.asm	/^c0113215:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0113218	obj/kernel.asm	/^c0113218:	01 d0                	add    %edx,%eax$/;"	l
c011321a	obj/kernel.asm	/^c011321a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c011321d	obj/kernel.asm	/^c011321d:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113220	obj/kernel.asm	/^c0113220:	50                   	push   %eax$/;"	l
c0113221	obj/kernel.asm	/^c0113221:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113224	obj/kernel.asm	/^c0113224:	e8 49 06 00 00       	call   c0113872 <memcpy>$/;"	l
c0113229	obj/kernel.asm	/^c0113229:	83 c4 10             	add    $0x10,%esp$/;"	l
c011322c	obj/kernel.asm	/^c011322c:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011322f	obj/kernel.asm	/^c011322f:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113232	obj/kernel.asm	/^c0113232:	e8 f0 d2 ff ff       	call   c0110527 <unlock_sfs_io>$/;"	l
c0113237	obj/kernel.asm	/^c0113237:	83 c4 10             	add    $0x10,%esp$/;"	l
c011323a	obj/kernel.asm	/^c011323a:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011323d	obj/kernel.asm	/^c011323d:	c9                   	leave  $/;"	l
c011323e	obj/kernel.asm	/^c011323e:	c3                   	ret    $/;"	l
c011323f	obj/kernel.asm	/^c011323f <sfs_wbuf>:$/;"	l
c011323f	obj/kernel.asm	/^c011323f:	55                   	push   %ebp$/;"	l
c0113240	obj/kernel.asm	/^c0113240:	89 e5                	mov    %esp,%ebp$/;"	l
c0113242	obj/kernel.asm	/^c0113242:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0113245	obj/kernel.asm	/^c0113245:	83 7d 18 00          	cmpl   $0x0,0x18(%ebp)$/;"	l
c0113249	obj/kernel.asm	/^c0113249:	78 18                	js     c0113263 <sfs_wbuf+0x24>$/;"	l
c011324b	obj/kernel.asm	/^c011324b:	81 7d 18 ff 0f 00 00 	cmpl   $0xfff,0x18(%ebp)$/;"	l
c0113252	obj/kernel.asm	/^c0113252:	7f 0f                	jg     c0113263 <sfs_wbuf+0x24>$/;"	l
c0113254	obj/kernel.asm	/^c0113254:	8b 55 18             	mov    0x18(%ebp),%edx$/;"	l
c0113257	obj/kernel.asm	/^c0113257:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c011325a	obj/kernel.asm	/^c011325a:	01 d0                	add    %edx,%eax$/;"	l
c011325c	obj/kernel.asm	/^c011325c:	3d 00 10 00 00       	cmp    $0x1000,%eax$/;"	l
c0113261	obj/kernel.asm	/^c0113261:	76 16                	jbe    c0113279 <sfs_wbuf+0x3a>$/;"	l
c0113263	obj/kernel.asm	/^c0113263:	68 a8 83 11 c0       	push   $0xc01183a8$/;"	l
c0113268	obj/kernel.asm	/^c0113268:	68 7c 83 11 c0       	push   $0xc011837c$/;"	l
c011326d	obj/kernel.asm	/^c011326d:	6a 6b                	push   $0x6b$/;"	l
c011326f	obj/kernel.asm	/^c011326f:	68 91 83 11 c0       	push   $0xc0118391$/;"	l
c0113274	obj/kernel.asm	/^c0113274:	e8 56 d2 fe ff       	call   c01004cf <__panic>$/;"	l
c0113279	obj/kernel.asm	/^c0113279:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c011327c	obj/kernel.asm	/^c011327c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011327f	obj/kernel.asm	/^c011327f:	e8 6f d2 ff ff       	call   c01104f3 <lock_sfs_io>$/;"	l
c0113284	obj/kernel.asm	/^c0113284:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113287	obj/kernel.asm	/^c0113287:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011328a	obj/kernel.asm	/^c011328a:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c011328d	obj/kernel.asm	/^c011328d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0113290	obj/kernel.asm	/^c0113290:	6a 01                	push   $0x1$/;"	l
c0113292	obj/kernel.asm	/^c0113292:	6a 00                	push   $0x0$/;"	l
c0113294	obj/kernel.asm	/^c0113294:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0113297	obj/kernel.asm	/^c0113297:	50                   	push   %eax$/;"	l
c0113298	obj/kernel.asm	/^c0113298:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c011329b	obj/kernel.asm	/^c011329b:	e8 e6 fd ff ff       	call   c0113086 <sfs_rwblock_nolock>$/;"	l
c01132a0	obj/kernel.asm	/^c01132a0:	83 c4 20             	add    $0x20,%esp$/;"	l
c01132a3	obj/kernel.asm	/^c01132a3:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01132a6	obj/kernel.asm	/^c01132a6:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c01132aa	obj/kernel.asm	/^c01132aa:	75 3c                	jne    c01132e8 <sfs_wbuf+0xa9>$/;"	l
c01132ac	obj/kernel.asm	/^c01132ac:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01132af	obj/kernel.asm	/^c01132af:	8b 50 38             	mov    0x38(%eax),%edx$/;"	l
c01132b2	obj/kernel.asm	/^c01132b2:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c01132b5	obj/kernel.asm	/^c01132b5:	01 d0                	add    %edx,%eax$/;"	l
c01132b7	obj/kernel.asm	/^c01132b7:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01132ba	obj/kernel.asm	/^c01132ba:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01132bd	obj/kernel.asm	/^c01132bd:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01132c0	obj/kernel.asm	/^c01132c0:	50                   	push   %eax$/;"	l
c01132c1	obj/kernel.asm	/^c01132c1:	e8 ac 05 00 00       	call   c0113872 <memcpy>$/;"	l
c01132c6	obj/kernel.asm	/^c01132c6:	83 c4 10             	add    $0x10,%esp$/;"	l
c01132c9	obj/kernel.asm	/^c01132c9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01132cc	obj/kernel.asm	/^c01132cc:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01132cf	obj/kernel.asm	/^c01132cf:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01132d2	obj/kernel.asm	/^c01132d2:	6a 01                	push   $0x1$/;"	l
c01132d4	obj/kernel.asm	/^c01132d4:	6a 01                	push   $0x1$/;"	l
c01132d6	obj/kernel.asm	/^c01132d6:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c01132d9	obj/kernel.asm	/^c01132d9:	50                   	push   %eax$/;"	l
c01132da	obj/kernel.asm	/^c01132da:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01132dd	obj/kernel.asm	/^c01132dd:	e8 a4 fd ff ff       	call   c0113086 <sfs_rwblock_nolock>$/;"	l
c01132e2	obj/kernel.asm	/^c01132e2:	83 c4 20             	add    $0x20,%esp$/;"	l
c01132e5	obj/kernel.asm	/^c01132e5:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01132e8	obj/kernel.asm	/^c01132e8:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01132eb	obj/kernel.asm	/^c01132eb:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01132ee	obj/kernel.asm	/^c01132ee:	e8 34 d2 ff ff       	call   c0110527 <unlock_sfs_io>$/;"	l
c01132f3	obj/kernel.asm	/^c01132f3:	83 c4 10             	add    $0x10,%esp$/;"	l
c01132f6	obj/kernel.asm	/^c01132f6:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01132f9	obj/kernel.asm	/^c01132f9:	c9                   	leave  $/;"	l
c01132fa	obj/kernel.asm	/^c01132fa:	c3                   	ret    $/;"	l
c01132fb	obj/kernel.asm	/^c01132fb <sfs_sync_super>:$/;"	l
c01132fb	obj/kernel.asm	/^c01132fb:	55                   	push   %ebp$/;"	l
c01132fc	obj/kernel.asm	/^c01132fc:	89 e5                	mov    %esp,%ebp$/;"	l
c01132fe	obj/kernel.asm	/^c01132fe:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0113301	obj/kernel.asm	/^c0113301:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0113304	obj/kernel.asm	/^c0113304:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113307	obj/kernel.asm	/^c0113307:	e8 e7 d1 ff ff       	call   c01104f3 <lock_sfs_io>$/;"	l
c011330c	obj/kernel.asm	/^c011330c:	83 c4 10             	add    $0x10,%esp$/;"	l
c011330f	obj/kernel.asm	/^c011330f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113312	obj/kernel.asm	/^c0113312:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0113315	obj/kernel.asm	/^c0113315:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113318	obj/kernel.asm	/^c0113318:	68 00 10 00 00       	push   $0x1000$/;"	l
c011331d	obj/kernel.asm	/^c011331d:	6a 00                	push   $0x0$/;"	l
c011331f	obj/kernel.asm	/^c011331f:	50                   	push   %eax$/;"	l
c0113320	obj/kernel.asm	/^c0113320:	e8 6a 04 00 00       	call   c011378f <memset>$/;"	l
c0113325	obj/kernel.asm	/^c0113325:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113328	obj/kernel.asm	/^c0113328:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011332b	obj/kernel.asm	/^c011332b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011332e	obj/kernel.asm	/^c011332e:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0113331	obj/kernel.asm	/^c0113331:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113334	obj/kernel.asm	/^c0113334:	6a 2c                	push   $0x2c$/;"	l
c0113336	obj/kernel.asm	/^c0113336:	52                   	push   %edx$/;"	l
c0113337	obj/kernel.asm	/^c0113337:	50                   	push   %eax$/;"	l
c0113338	obj/kernel.asm	/^c0113338:	e8 35 05 00 00       	call   c0113872 <memcpy>$/;"	l
c011333d	obj/kernel.asm	/^c011333d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113340	obj/kernel.asm	/^c0113340:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113343	obj/kernel.asm	/^c0113343:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c0113346	obj/kernel.asm	/^c0113346:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0113349	obj/kernel.asm	/^c0113349:	6a 00                	push   $0x0$/;"	l
c011334b	obj/kernel.asm	/^c011334b:	6a 01                	push   $0x1$/;"	l
c011334d	obj/kernel.asm	/^c011334d:	6a 00                	push   $0x0$/;"	l
c011334f	obj/kernel.asm	/^c011334f:	50                   	push   %eax$/;"	l
c0113350	obj/kernel.asm	/^c0113350:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113353	obj/kernel.asm	/^c0113353:	e8 2e fd ff ff       	call   c0113086 <sfs_rwblock_nolock>$/;"	l
c0113358	obj/kernel.asm	/^c0113358:	83 c4 20             	add    $0x20,%esp$/;"	l
c011335b	obj/kernel.asm	/^c011335b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011335e	obj/kernel.asm	/^c011335e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0113361	obj/kernel.asm	/^c0113361:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113364	obj/kernel.asm	/^c0113364:	e8 be d1 ff ff       	call   c0110527 <unlock_sfs_io>$/;"	l
c0113369	obj/kernel.asm	/^c0113369:	83 c4 10             	add    $0x10,%esp$/;"	l
c011336c	obj/kernel.asm	/^c011336c:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011336f	obj/kernel.asm	/^c011336f:	c9                   	leave  $/;"	l
c0113370	obj/kernel.asm	/^c0113370:	c3                   	ret    $/;"	l
c0113371	obj/kernel.asm	/^c0113371 <sfs_sync_freemap>:$/;"	l
c0113371	obj/kernel.asm	/^c0113371:	55                   	push   %ebp$/;"	l
c0113372	obj/kernel.asm	/^c0113372:	89 e5                	mov    %esp,%ebp$/;"	l
c0113374	obj/kernel.asm	/^c0113374:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0113377	obj/kernel.asm	/^c0113377:	c7 45 f4 00 80 00 00 	movl   $0x8000,-0xc(%ebp)$/;"	l
c011337e	obj/kernel.asm	/^c011337e:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113381	obj/kernel.asm	/^c0113381:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0113384	obj/kernel.asm	/^c0113384:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113387	obj/kernel.asm	/^c0113387:	01 d0                	add    %edx,%eax$/;"	l
c0113389	obj/kernel.asm	/^c0113389:	83 e8 01             	sub    $0x1,%eax$/;"	l
c011338c	obj/kernel.asm	/^c011338c:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0113391	obj/kernel.asm	/^c0113391:	f7 75 f4             	divl   -0xc(%ebp)$/;"	l
c0113394	obj/kernel.asm	/^c0113394:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113397	obj/kernel.asm	/^c0113397:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011339a	obj/kernel.asm	/^c011339a:	8b 40 30             	mov    0x30(%eax),%eax$/;"	l
c011339d	obj/kernel.asm	/^c011339d:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01133a0	obj/kernel.asm	/^c01133a0:	6a 00                	push   $0x0$/;"	l
c01133a2	obj/kernel.asm	/^c01133a2:	50                   	push   %eax$/;"	l
c01133a3	obj/kernel.asm	/^c01133a3:	e8 bb fc ff ff       	call   c0113063 <bitmap_getdata>$/;"	l
c01133a8	obj/kernel.asm	/^c01133a8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01133ab	obj/kernel.asm	/^c01133ab:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c01133ae	obj/kernel.asm	/^c01133ae:	6a 02                	push   $0x2$/;"	l
c01133b0	obj/kernel.asm	/^c01133b0:	50                   	push   %eax$/;"	l
c01133b1	obj/kernel.asm	/^c01133b1:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01133b4	obj/kernel.asm	/^c01133b4:	e8 c8 fd ff ff       	call   c0113181 <sfs_wblock>$/;"	l
c01133b9	obj/kernel.asm	/^c01133b9:	83 c4 10             	add    $0x10,%esp$/;"	l
c01133bc	obj/kernel.asm	/^c01133bc:	c9                   	leave  $/;"	l
c01133bd	obj/kernel.asm	/^c01133bd:	c3                   	ret    $/;"	l
c01133be	obj/kernel.asm	/^c01133be <sfs_clear_block>:$/;"	l
c01133be	obj/kernel.asm	/^c01133be:	55                   	push   %ebp$/;"	l
c01133bf	obj/kernel.asm	/^c01133bf:	89 e5                	mov    %esp,%ebp$/;"	l
c01133c1	obj/kernel.asm	/^c01133c1:	83 ec 18             	sub    $0x18,%esp$/;"	l
c01133c4	obj/kernel.asm	/^c01133c4:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01133c7	obj/kernel.asm	/^c01133c7:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01133ca	obj/kernel.asm	/^c01133ca:	e8 24 d1 ff ff       	call   c01104f3 <lock_sfs_io>$/;"	l
c01133cf	obj/kernel.asm	/^c01133cf:	83 c4 10             	add    $0x10,%esp$/;"	l
c01133d2	obj/kernel.asm	/^c01133d2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01133d5	obj/kernel.asm	/^c01133d5:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01133d8	obj/kernel.asm	/^c01133d8:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01133db	obj/kernel.asm	/^c01133db:	68 00 10 00 00       	push   $0x1000$/;"	l
c01133e0	obj/kernel.asm	/^c01133e0:	6a 00                	push   $0x0$/;"	l
c01133e2	obj/kernel.asm	/^c01133e2:	50                   	push   %eax$/;"	l
c01133e3	obj/kernel.asm	/^c01133e3:	e8 a7 03 00 00       	call   c011378f <memset>$/;"	l
c01133e8	obj/kernel.asm	/^c01133e8:	83 c4 10             	add    $0x10,%esp$/;"	l
c01133eb	obj/kernel.asm	/^c01133eb:	eb 2f                	jmp    c011341c <sfs_clear_block+0x5e>$/;"	l
c01133ed	obj/kernel.asm	/^c01133ed:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01133f0	obj/kernel.asm	/^c01133f0:	8b 40 38             	mov    0x38(%eax),%eax$/;"	l
c01133f3	obj/kernel.asm	/^c01133f3:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c01133f6	obj/kernel.asm	/^c01133f6:	6a 01                	push   $0x1$/;"	l
c01133f8	obj/kernel.asm	/^c01133f8:	6a 01                	push   $0x1$/;"	l
c01133fa	obj/kernel.asm	/^c01133fa:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01133fd	obj/kernel.asm	/^c01133fd:	50                   	push   %eax$/;"	l
c01133fe	obj/kernel.asm	/^c01133fe:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113401	obj/kernel.asm	/^c0113401:	e8 80 fc ff ff       	call   c0113086 <sfs_rwblock_nolock>$/;"	l
c0113406	obj/kernel.asm	/^c0113406:	83 c4 20             	add    $0x20,%esp$/;"	l
c0113409	obj/kernel.asm	/^c0113409:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011340c	obj/kernel.asm	/^c011340c:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)$/;"	l
c0113410	obj/kernel.asm	/^c0113410:	74 02                	je     c0113414 <sfs_clear_block+0x56>$/;"	l
c0113412	obj/kernel.asm	/^c0113412:	eb 0e                	jmp    c0113422 <sfs_clear_block+0x64>$/;"	l
c0113414	obj/kernel.asm	/^c0113414:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c0113418	obj/kernel.asm	/^c0113418:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c011341c	obj/kernel.asm	/^c011341c:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0113420	obj/kernel.asm	/^c0113420:	75 cb                	jne    c01133ed <sfs_clear_block+0x2f>$/;"	l
c0113422	obj/kernel.asm	/^c0113422:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0113425	obj/kernel.asm	/^c0113425:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113428	obj/kernel.asm	/^c0113428:	e8 fa d0 ff ff       	call   c0110527 <unlock_sfs_io>$/;"	l
c011342d	obj/kernel.asm	/^c011342d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113430	obj/kernel.asm	/^c0113430:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113433	obj/kernel.asm	/^c0113433:	c9                   	leave  $/;"	l
c0113434	obj/kernel.asm	/^c0113434:	c3                   	ret    $/;"	l
c0113435	obj/kernel.asm	/^c0113435 <strlen>:$/;"	l
c0113435	obj/kernel.asm	/^c0113435:	55                   	push   %ebp$/;"	l
c0113436	obj/kernel.asm	/^c0113436:	89 e5                	mov    %esp,%ebp$/;"	l
c0113438	obj/kernel.asm	/^c0113438:	83 ec 10             	sub    $0x10,%esp$/;"	l
c011343b	obj/kernel.asm	/^c011343b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c0113442	obj/kernel.asm	/^c0113442:	eb 04                	jmp    c0113448 <strlen+0x13>$/;"	l
c0113444	obj/kernel.asm	/^c0113444:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0113448	obj/kernel.asm	/^c0113448:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011344b	obj/kernel.asm	/^c011344b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c011344e	obj/kernel.asm	/^c011344e:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0113451	obj/kernel.asm	/^c0113451:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113454	obj/kernel.asm	/^c0113454:	84 c0                	test   %al,%al$/;"	l
c0113456	obj/kernel.asm	/^c0113456:	75 ec                	jne    c0113444 <strlen+0xf>$/;"	l
c0113458	obj/kernel.asm	/^c0113458:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c011345b	obj/kernel.asm	/^c011345b:	c9                   	leave  $/;"	l
c011345c	obj/kernel.asm	/^c011345c:	c3                   	ret    $/;"	l
c011345d	obj/kernel.asm	/^c011345d <strnlen>:$/;"	l
c011345d	obj/kernel.asm	/^c011345d:	55                   	push   %ebp$/;"	l
c011345e	obj/kernel.asm	/^c011345e:	89 e5                	mov    %esp,%ebp$/;"	l
c0113460	obj/kernel.asm	/^c0113460:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0113463	obj/kernel.asm	/^c0113463:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c011346a	obj/kernel.asm	/^c011346a:	eb 04                	jmp    c0113470 <strnlen+0x13>$/;"	l
c011346c	obj/kernel.asm	/^c011346c:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0113470	obj/kernel.asm	/^c0113470:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0113473	obj/kernel.asm	/^c0113473:	3b 45 0c             	cmp    0xc(%ebp),%eax$/;"	l
c0113476	obj/kernel.asm	/^c0113476:	73 10                	jae    c0113488 <strnlen+0x2b>$/;"	l
c0113478	obj/kernel.asm	/^c0113478:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011347b	obj/kernel.asm	/^c011347b:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c011347e	obj/kernel.asm	/^c011347e:	89 55 08             	mov    %edx,0x8(%ebp)$/;"	l
c0113481	obj/kernel.asm	/^c0113481:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113484	obj/kernel.asm	/^c0113484:	84 c0                	test   %al,%al$/;"	l
c0113486	obj/kernel.asm	/^c0113486:	75 e4                	jne    c011346c <strnlen+0xf>$/;"	l
c0113488	obj/kernel.asm	/^c0113488:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c011348b	obj/kernel.asm	/^c011348b:	c9                   	leave  $/;"	l
c011348c	obj/kernel.asm	/^c011348c:	c3                   	ret    $/;"	l
c011348d	obj/kernel.asm	/^c011348d <strcat>:$/;"	l
c011348d	obj/kernel.asm	/^c011348d:	55                   	push   %ebp$/;"	l
c011348e	obj/kernel.asm	/^c011348e:	89 e5                	mov    %esp,%ebp$/;"	l
c0113490	obj/kernel.asm	/^c0113490:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0113493	obj/kernel.asm	/^c0113493:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113496	obj/kernel.asm	/^c0113496:	e8 9a ff ff ff       	call   c0113435 <strlen>$/;"	l
c011349b	obj/kernel.asm	/^c011349b:	83 c4 04             	add    $0x4,%esp$/;"	l
c011349e	obj/kernel.asm	/^c011349e:	89 c2                	mov    %eax,%edx$/;"	l
c01134a0	obj/kernel.asm	/^c01134a0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01134a3	obj/kernel.asm	/^c01134a3:	01 d0                	add    %edx,%eax$/;"	l
c01134a5	obj/kernel.asm	/^c01134a5:	83 ec 08             	sub    $0x8,%esp$/;"	l
c01134a8	obj/kernel.asm	/^c01134a8:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01134ab	obj/kernel.asm	/^c01134ab:	50                   	push   %eax$/;"	l
c01134ac	obj/kernel.asm	/^c01134ac:	e8 05 00 00 00       	call   c01134b6 <strcpy>$/;"	l
c01134b1	obj/kernel.asm	/^c01134b1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01134b4	obj/kernel.asm	/^c01134b4:	c9                   	leave  $/;"	l
c01134b5	obj/kernel.asm	/^c01134b5:	c3                   	ret    $/;"	l
c01134b6	obj/kernel.asm	/^c01134b6 <strcpy>:$/;"	l
c01134b6	obj/kernel.asm	/^c01134b6:	55                   	push   %ebp$/;"	l
c01134b7	obj/kernel.asm	/^c01134b7:	89 e5                	mov    %esp,%ebp$/;"	l
c01134b9	obj/kernel.asm	/^c01134b9:	57                   	push   %edi$/;"	l
c01134ba	obj/kernel.asm	/^c01134ba:	56                   	push   %esi$/;"	l
c01134bb	obj/kernel.asm	/^c01134bb:	83 ec 20             	sub    $0x20,%esp$/;"	l
c01134be	obj/kernel.asm	/^c01134be:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01134c1	obj/kernel.asm	/^c01134c1:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c01134c4	obj/kernel.asm	/^c01134c4:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01134c7	obj/kernel.asm	/^c01134c7:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01134ca	obj/kernel.asm	/^c01134ca:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c01134cd	obj/kernel.asm	/^c01134cd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01134d0	obj/kernel.asm	/^c01134d0:	89 d1                	mov    %edx,%ecx$/;"	l
c01134d2	obj/kernel.asm	/^c01134d2:	89 c2                	mov    %eax,%edx$/;"	l
c01134d4	obj/kernel.asm	/^c01134d4:	89 ce                	mov    %ecx,%esi$/;"	l
c01134d6	obj/kernel.asm	/^c01134d6:	89 d7                	mov    %edx,%edi$/;"	l
c01134d8	obj/kernel.asm	/^c01134d8:	ac                   	lods   %ds:(%esi),%al$/;"	l
c01134d9	obj/kernel.asm	/^c01134d9:	aa                   	stos   %al,%es:(%edi)$/;"	l
c01134da	obj/kernel.asm	/^c01134da:	84 c0                	test   %al,%al$/;"	l
c01134dc	obj/kernel.asm	/^c01134dc:	75 fa                	jne    c01134d8 <strcpy+0x22>$/;"	l
c01134de	obj/kernel.asm	/^c01134de:	89 fa                	mov    %edi,%edx$/;"	l
c01134e0	obj/kernel.asm	/^c01134e0:	89 f1                	mov    %esi,%ecx$/;"	l
c01134e2	obj/kernel.asm	/^c01134e2:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c01134e5	obj/kernel.asm	/^c01134e5:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c01134e8	obj/kernel.asm	/^c01134e8:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01134eb	obj/kernel.asm	/^c01134eb:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01134ee	obj/kernel.asm	/^c01134ee:	90                   	nop$/;"	l
c01134ef	obj/kernel.asm	/^c01134ef:	83 c4 20             	add    $0x20,%esp$/;"	l
c01134f2	obj/kernel.asm	/^c01134f2:	5e                   	pop    %esi$/;"	l
c01134f3	obj/kernel.asm	/^c01134f3:	5f                   	pop    %edi$/;"	l
c01134f4	obj/kernel.asm	/^c01134f4:	5d                   	pop    %ebp$/;"	l
c01134f5	obj/kernel.asm	/^c01134f5:	c3                   	ret    $/;"	l
c01134f6	obj/kernel.asm	/^c01134f6 <strncpy>:$/;"	l
c01134f6	obj/kernel.asm	/^c01134f6:	55                   	push   %ebp$/;"	l
c01134f7	obj/kernel.asm	/^c01134f7:	89 e5                	mov    %esp,%ebp$/;"	l
c01134f9	obj/kernel.asm	/^c01134f9:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01134fc	obj/kernel.asm	/^c01134fc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01134ff	obj/kernel.asm	/^c01134ff:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0113502	obj/kernel.asm	/^c0113502:	eb 21                	jmp    c0113525 <strncpy+0x2f>$/;"	l
c0113504	obj/kernel.asm	/^c0113504:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113507	obj/kernel.asm	/^c0113507:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c011350a	obj/kernel.asm	/^c011350a:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c011350d	obj/kernel.asm	/^c011350d:	88 10                	mov    %dl,(%eax)$/;"	l
c011350f	obj/kernel.asm	/^c011350f:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0113512	obj/kernel.asm	/^c0113512:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113515	obj/kernel.asm	/^c0113515:	84 c0                	test   %al,%al$/;"	l
c0113517	obj/kernel.asm	/^c0113517:	74 04                	je     c011351d <strncpy+0x27>$/;"	l
c0113519	obj/kernel.asm	/^c0113519:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c011351d	obj/kernel.asm	/^c011351d:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0113521	obj/kernel.asm	/^c0113521:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0113525	obj/kernel.asm	/^c0113525:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0113529	obj/kernel.asm	/^c0113529:	75 d9                	jne    c0113504 <strncpy+0xe>$/;"	l
c011352b	obj/kernel.asm	/^c011352b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011352e	obj/kernel.asm	/^c011352e:	c9                   	leave  $/;"	l
c011352f	obj/kernel.asm	/^c011352f:	c3                   	ret    $/;"	l
c0113530	obj/kernel.asm	/^c0113530 <strcmp>:$/;"	l
c0113530	obj/kernel.asm	/^c0113530:	55                   	push   %ebp$/;"	l
c0113531	obj/kernel.asm	/^c0113531:	89 e5                	mov    %esp,%ebp$/;"	l
c0113533	obj/kernel.asm	/^c0113533:	57                   	push   %edi$/;"	l
c0113534	obj/kernel.asm	/^c0113534:	56                   	push   %esi$/;"	l
c0113535	obj/kernel.asm	/^c0113535:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0113538	obj/kernel.asm	/^c0113538:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011353b	obj/kernel.asm	/^c011353b:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011353e	obj/kernel.asm	/^c011353e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113541	obj/kernel.asm	/^c0113541:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113544	obj/kernel.asm	/^c0113544:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0113547	obj/kernel.asm	/^c0113547:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011354a	obj/kernel.asm	/^c011354a:	89 d1                	mov    %edx,%ecx$/;"	l
c011354c	obj/kernel.asm	/^c011354c:	89 c2                	mov    %eax,%edx$/;"	l
c011354e	obj/kernel.asm	/^c011354e:	89 ce                	mov    %ecx,%esi$/;"	l
c0113550	obj/kernel.asm	/^c0113550:	89 d7                	mov    %edx,%edi$/;"	l
c0113552	obj/kernel.asm	/^c0113552:	ac                   	lods   %ds:(%esi),%al$/;"	l
c0113553	obj/kernel.asm	/^c0113553:	ae                   	scas   %es:(%edi),%al$/;"	l
c0113554	obj/kernel.asm	/^c0113554:	75 08                	jne    c011355e <strcmp+0x2e>$/;"	l
c0113556	obj/kernel.asm	/^c0113556:	84 c0                	test   %al,%al$/;"	l
c0113558	obj/kernel.asm	/^c0113558:	75 f8                	jne    c0113552 <strcmp+0x22>$/;"	l
c011355a	obj/kernel.asm	/^c011355a:	31 c0                	xor    %eax,%eax$/;"	l
c011355c	obj/kernel.asm	/^c011355c:	eb 04                	jmp    c0113562 <strcmp+0x32>$/;"	l
c011355e	obj/kernel.asm	/^c011355e:	19 c0                	sbb    %eax,%eax$/;"	l
c0113560	obj/kernel.asm	/^c0113560:	0c 01                	or     $0x1,%al$/;"	l
c0113562	obj/kernel.asm	/^c0113562:	89 fa                	mov    %edi,%edx$/;"	l
c0113564	obj/kernel.asm	/^c0113564:	89 f1                	mov    %esi,%ecx$/;"	l
c0113566	obj/kernel.asm	/^c0113566:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113569	obj/kernel.asm	/^c0113569:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c011356c	obj/kernel.asm	/^c011356c:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c011356f	obj/kernel.asm	/^c011356f:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113572	obj/kernel.asm	/^c0113572:	90                   	nop$/;"	l
c0113573	obj/kernel.asm	/^c0113573:	83 c4 20             	add    $0x20,%esp$/;"	l
c0113576	obj/kernel.asm	/^c0113576:	5e                   	pop    %esi$/;"	l
c0113577	obj/kernel.asm	/^c0113577:	5f                   	pop    %edi$/;"	l
c0113578	obj/kernel.asm	/^c0113578:	5d                   	pop    %ebp$/;"	l
c0113579	obj/kernel.asm	/^c0113579:	c3                   	ret    $/;"	l
c011357a	obj/kernel.asm	/^c011357a <strncmp>:$/;"	l
c011357a	obj/kernel.asm	/^c011357a:	55                   	push   %ebp$/;"	l
c011357b	obj/kernel.asm	/^c011357b:	89 e5                	mov    %esp,%ebp$/;"	l
c011357d	obj/kernel.asm	/^c011357d:	eb 0c                	jmp    c011358b <strncmp+0x11>$/;"	l
c011357f	obj/kernel.asm	/^c011357f:	83 6d 10 01          	subl   $0x1,0x10(%ebp)$/;"	l
c0113583	obj/kernel.asm	/^c0113583:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0113587	obj/kernel.asm	/^c0113587:	83 45 0c 01          	addl   $0x1,0xc(%ebp)$/;"	l
c011358b	obj/kernel.asm	/^c011358b:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c011358f	obj/kernel.asm	/^c011358f:	74 1a                	je     c01135ab <strncmp+0x31>$/;"	l
c0113591	obj/kernel.asm	/^c0113591:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113594	obj/kernel.asm	/^c0113594:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113597	obj/kernel.asm	/^c0113597:	84 c0                	test   %al,%al$/;"	l
c0113599	obj/kernel.asm	/^c0113599:	74 10                	je     c01135ab <strncmp+0x31>$/;"	l
c011359b	obj/kernel.asm	/^c011359b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011359e	obj/kernel.asm	/^c011359e:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c01135a1	obj/kernel.asm	/^c01135a1:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01135a4	obj/kernel.asm	/^c01135a4:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01135a7	obj/kernel.asm	/^c01135a7:	38 c2                	cmp    %al,%dl$/;"	l
c01135a9	obj/kernel.asm	/^c01135a9:	74 d4                	je     c011357f <strncmp+0x5>$/;"	l
c01135ab	obj/kernel.asm	/^c01135ab:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01135af	obj/kernel.asm	/^c01135af:	74 18                	je     c01135c9 <strncmp+0x4f>$/;"	l
c01135b1	obj/kernel.asm	/^c01135b1:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01135b4	obj/kernel.asm	/^c01135b4:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01135b7	obj/kernel.asm	/^c01135b7:	0f b6 d0             	movzbl %al,%edx$/;"	l
c01135ba	obj/kernel.asm	/^c01135ba:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01135bd	obj/kernel.asm	/^c01135bd:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01135c0	obj/kernel.asm	/^c01135c0:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01135c3	obj/kernel.asm	/^c01135c3:	29 c2                	sub    %eax,%edx$/;"	l
c01135c5	obj/kernel.asm	/^c01135c5:	89 d0                	mov    %edx,%eax$/;"	l
c01135c7	obj/kernel.asm	/^c01135c7:	eb 05                	jmp    c01135ce <strncmp+0x54>$/;"	l
c01135c9	obj/kernel.asm	/^c01135c9:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c01135ce	obj/kernel.asm	/^c01135ce:	5d                   	pop    %ebp$/;"	l
c01135cf	obj/kernel.asm	/^c01135cf:	c3                   	ret    $/;"	l
c01135d0	obj/kernel.asm	/^c01135d0 <strchr>:$/;"	l
c01135d0	obj/kernel.asm	/^c01135d0:	55                   	push   %ebp$/;"	l
c01135d1	obj/kernel.asm	/^c01135d1:	89 e5                	mov    %esp,%ebp$/;"	l
c01135d3	obj/kernel.asm	/^c01135d3:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01135d6	obj/kernel.asm	/^c01135d6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01135d9	obj/kernel.asm	/^c01135d9:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c01135dc	obj/kernel.asm	/^c01135dc:	eb 14                	jmp    c01135f2 <strchr+0x22>$/;"	l
c01135de	obj/kernel.asm	/^c01135de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01135e1	obj/kernel.asm	/^c01135e1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01135e4	obj/kernel.asm	/^c01135e4:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c01135e7	obj/kernel.asm	/^c01135e7:	75 05                	jne    c01135ee <strchr+0x1e>$/;"	l
c01135e9	obj/kernel.asm	/^c01135e9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01135ec	obj/kernel.asm	/^c01135ec:	eb 13                	jmp    c0113601 <strchr+0x31>$/;"	l
c01135ee	obj/kernel.asm	/^c01135ee:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c01135f2	obj/kernel.asm	/^c01135f2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01135f5	obj/kernel.asm	/^c01135f5:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01135f8	obj/kernel.asm	/^c01135f8:	84 c0                	test   %al,%al$/;"	l
c01135fa	obj/kernel.asm	/^c01135fa:	75 e2                	jne    c01135de <strchr+0xe>$/;"	l
c01135fc	obj/kernel.asm	/^c01135fc:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0113601	obj/kernel.asm	/^c0113601:	c9                   	leave  $/;"	l
c0113602	obj/kernel.asm	/^c0113602:	c3                   	ret    $/;"	l
c0113603	obj/kernel.asm	/^c0113603 <strfind>:$/;"	l
c0113603	obj/kernel.asm	/^c0113603:	55                   	push   %ebp$/;"	l
c0113604	obj/kernel.asm	/^c0113604:	89 e5                	mov    %esp,%ebp$/;"	l
c0113606	obj/kernel.asm	/^c0113606:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113609	obj/kernel.asm	/^c0113609:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c011360c	obj/kernel.asm	/^c011360c:	88 45 fc             	mov    %al,-0x4(%ebp)$/;"	l
c011360f	obj/kernel.asm	/^c011360f:	eb 11                	jmp    c0113622 <strfind+0x1f>$/;"	l
c0113611	obj/kernel.asm	/^c0113611:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113614	obj/kernel.asm	/^c0113614:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113617	obj/kernel.asm	/^c0113617:	3a 45 fc             	cmp    -0x4(%ebp),%al$/;"	l
c011361a	obj/kernel.asm	/^c011361a:	75 02                	jne    c011361e <strfind+0x1b>$/;"	l
c011361c	obj/kernel.asm	/^c011361c:	eb 0e                	jmp    c011362c <strfind+0x29>$/;"	l
c011361e	obj/kernel.asm	/^c011361e:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0113622	obj/kernel.asm	/^c0113622:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113625	obj/kernel.asm	/^c0113625:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113628	obj/kernel.asm	/^c0113628:	84 c0                	test   %al,%al$/;"	l
c011362a	obj/kernel.asm	/^c011362a:	75 e5                	jne    c0113611 <strfind+0xe>$/;"	l
c011362c	obj/kernel.asm	/^c011362c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011362f	obj/kernel.asm	/^c011362f:	c9                   	leave  $/;"	l
c0113630	obj/kernel.asm	/^c0113630:	c3                   	ret    $/;"	l
c0113631	obj/kernel.asm	/^c0113631 <strtol>:$/;"	l
c0113631	obj/kernel.asm	/^c0113631:	55                   	push   %ebp$/;"	l
c0113632	obj/kernel.asm	/^c0113632:	89 e5                	mov    %esp,%ebp$/;"	l
c0113634	obj/kernel.asm	/^c0113634:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0113637	obj/kernel.asm	/^c0113637:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)$/;"	l
c011363e	obj/kernel.asm	/^c011363e:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)$/;"	l
c0113645	obj/kernel.asm	/^c0113645:	eb 04                	jmp    c011364b <strtol+0x1a>$/;"	l
c0113647	obj/kernel.asm	/^c0113647:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c011364b	obj/kernel.asm	/^c011364b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011364e	obj/kernel.asm	/^c011364e:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113651	obj/kernel.asm	/^c0113651:	3c 20                	cmp    $0x20,%al$/;"	l
c0113653	obj/kernel.asm	/^c0113653:	74 f2                	je     c0113647 <strtol+0x16>$/;"	l
c0113655	obj/kernel.asm	/^c0113655:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113658	obj/kernel.asm	/^c0113658:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011365b	obj/kernel.asm	/^c011365b:	3c 09                	cmp    $0x9,%al$/;"	l
c011365d	obj/kernel.asm	/^c011365d:	74 e8                	je     c0113647 <strtol+0x16>$/;"	l
c011365f	obj/kernel.asm	/^c011365f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113662	obj/kernel.asm	/^c0113662:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113665	obj/kernel.asm	/^c0113665:	3c 2b                	cmp    $0x2b,%al$/;"	l
c0113667	obj/kernel.asm	/^c0113667:	75 06                	jne    c011366f <strtol+0x3e>$/;"	l
c0113669	obj/kernel.asm	/^c0113669:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c011366d	obj/kernel.asm	/^c011366d:	eb 15                	jmp    c0113684 <strtol+0x53>$/;"	l
c011366f	obj/kernel.asm	/^c011366f:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113672	obj/kernel.asm	/^c0113672:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113675	obj/kernel.asm	/^c0113675:	3c 2d                	cmp    $0x2d,%al$/;"	l
c0113677	obj/kernel.asm	/^c0113677:	75 0b                	jne    c0113684 <strtol+0x53>$/;"	l
c0113679	obj/kernel.asm	/^c0113679:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c011367d	obj/kernel.asm	/^c011367d:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)$/;"	l
c0113684	obj/kernel.asm	/^c0113684:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c0113688	obj/kernel.asm	/^c0113688:	74 06                	je     c0113690 <strtol+0x5f>$/;"	l
c011368a	obj/kernel.asm	/^c011368a:	83 7d 10 10          	cmpl   $0x10,0x10(%ebp)$/;"	l
c011368e	obj/kernel.asm	/^c011368e:	75 24                	jne    c01136b4 <strtol+0x83>$/;"	l
c0113690	obj/kernel.asm	/^c0113690:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113693	obj/kernel.asm	/^c0113693:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113696	obj/kernel.asm	/^c0113696:	3c 30                	cmp    $0x30,%al$/;"	l
c0113698	obj/kernel.asm	/^c0113698:	75 1a                	jne    c01136b4 <strtol+0x83>$/;"	l
c011369a	obj/kernel.asm	/^c011369a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011369d	obj/kernel.asm	/^c011369d:	83 c0 01             	add    $0x1,%eax$/;"	l
c01136a0	obj/kernel.asm	/^c01136a0:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01136a3	obj/kernel.asm	/^c01136a3:	3c 78                	cmp    $0x78,%al$/;"	l
c01136a5	obj/kernel.asm	/^c01136a5:	75 0d                	jne    c01136b4 <strtol+0x83>$/;"	l
c01136a7	obj/kernel.asm	/^c01136a7:	83 45 08 02          	addl   $0x2,0x8(%ebp)$/;"	l
c01136ab	obj/kernel.asm	/^c01136ab:	c7 45 10 10 00 00 00 	movl   $0x10,0x10(%ebp)$/;"	l
c01136b2	obj/kernel.asm	/^c01136b2:	eb 2a                	jmp    c01136de <strtol+0xad>$/;"	l
c01136b4	obj/kernel.asm	/^c01136b4:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01136b8	obj/kernel.asm	/^c01136b8:	75 17                	jne    c01136d1 <strtol+0xa0>$/;"	l
c01136ba	obj/kernel.asm	/^c01136ba:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01136bd	obj/kernel.asm	/^c01136bd:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01136c0	obj/kernel.asm	/^c01136c0:	3c 30                	cmp    $0x30,%al$/;"	l
c01136c2	obj/kernel.asm	/^c01136c2:	75 0d                	jne    c01136d1 <strtol+0xa0>$/;"	l
c01136c4	obj/kernel.asm	/^c01136c4:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c01136c8	obj/kernel.asm	/^c01136c8:	c7 45 10 08 00 00 00 	movl   $0x8,0x10(%ebp)$/;"	l
c01136cf	obj/kernel.asm	/^c01136cf:	eb 0d                	jmp    c01136de <strtol+0xad>$/;"	l
c01136d1	obj/kernel.asm	/^c01136d1:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)$/;"	l
c01136d5	obj/kernel.asm	/^c01136d5:	75 07                	jne    c01136de <strtol+0xad>$/;"	l
c01136d7	obj/kernel.asm	/^c01136d7:	c7 45 10 0a 00 00 00 	movl   $0xa,0x10(%ebp)$/;"	l
c01136de	obj/kernel.asm	/^c01136de:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01136e1	obj/kernel.asm	/^c01136e1:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01136e4	obj/kernel.asm	/^c01136e4:	3c 2f                	cmp    $0x2f,%al$/;"	l
c01136e6	obj/kernel.asm	/^c01136e6:	7e 1b                	jle    c0113703 <strtol+0xd2>$/;"	l
c01136e8	obj/kernel.asm	/^c01136e8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01136eb	obj/kernel.asm	/^c01136eb:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01136ee	obj/kernel.asm	/^c01136ee:	3c 39                	cmp    $0x39,%al$/;"	l
c01136f0	obj/kernel.asm	/^c01136f0:	7f 11                	jg     c0113703 <strtol+0xd2>$/;"	l
c01136f2	obj/kernel.asm	/^c01136f2:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01136f5	obj/kernel.asm	/^c01136f5:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01136f8	obj/kernel.asm	/^c01136f8:	0f be c0             	movsbl %al,%eax$/;"	l
c01136fb	obj/kernel.asm	/^c01136fb:	83 e8 30             	sub    $0x30,%eax$/;"	l
c01136fe	obj/kernel.asm	/^c01136fe:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113701	obj/kernel.asm	/^c0113701:	eb 48                	jmp    c011374b <strtol+0x11a>$/;"	l
c0113703	obj/kernel.asm	/^c0113703:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113706	obj/kernel.asm	/^c0113706:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113709	obj/kernel.asm	/^c0113709:	3c 60                	cmp    $0x60,%al$/;"	l
c011370b	obj/kernel.asm	/^c011370b:	7e 1b                	jle    c0113728 <strtol+0xf7>$/;"	l
c011370d	obj/kernel.asm	/^c011370d:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113710	obj/kernel.asm	/^c0113710:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113713	obj/kernel.asm	/^c0113713:	3c 7a                	cmp    $0x7a,%al$/;"	l
c0113715	obj/kernel.asm	/^c0113715:	7f 11                	jg     c0113728 <strtol+0xf7>$/;"	l
c0113717	obj/kernel.asm	/^c0113717:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011371a	obj/kernel.asm	/^c011371a:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011371d	obj/kernel.asm	/^c011371d:	0f be c0             	movsbl %al,%eax$/;"	l
c0113720	obj/kernel.asm	/^c0113720:	83 e8 57             	sub    $0x57,%eax$/;"	l
c0113723	obj/kernel.asm	/^c0113723:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113726	obj/kernel.asm	/^c0113726:	eb 23                	jmp    c011374b <strtol+0x11a>$/;"	l
c0113728	obj/kernel.asm	/^c0113728:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011372b	obj/kernel.asm	/^c011372b:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c011372e	obj/kernel.asm	/^c011372e:	3c 40                	cmp    $0x40,%al$/;"	l
c0113730	obj/kernel.asm	/^c0113730:	7e 3d                	jle    c011376f <strtol+0x13e>$/;"	l
c0113732	obj/kernel.asm	/^c0113732:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113735	obj/kernel.asm	/^c0113735:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113738	obj/kernel.asm	/^c0113738:	3c 5a                	cmp    $0x5a,%al$/;"	l
c011373a	obj/kernel.asm	/^c011373a:	7f 33                	jg     c011376f <strtol+0x13e>$/;"	l
c011373c	obj/kernel.asm	/^c011373c:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011373f	obj/kernel.asm	/^c011373f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113742	obj/kernel.asm	/^c0113742:	0f be c0             	movsbl %al,%eax$/;"	l
c0113745	obj/kernel.asm	/^c0113745:	83 e8 37             	sub    $0x37,%eax$/;"	l
c0113748	obj/kernel.asm	/^c0113748:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c011374b	obj/kernel.asm	/^c011374b:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c011374e	obj/kernel.asm	/^c011374e:	3b 45 10             	cmp    0x10(%ebp),%eax$/;"	l
c0113751	obj/kernel.asm	/^c0113751:	7c 02                	jl     c0113755 <strtol+0x124>$/;"	l
c0113753	obj/kernel.asm	/^c0113753:	eb 1a                	jmp    c011376f <strtol+0x13e>$/;"	l
c0113755	obj/kernel.asm	/^c0113755:	83 45 08 01          	addl   $0x1,0x8(%ebp)$/;"	l
c0113759	obj/kernel.asm	/^c0113759:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c011375c	obj/kernel.asm	/^c011375c:	0f af 45 10          	imul   0x10(%ebp),%eax$/;"	l
c0113760	obj/kernel.asm	/^c0113760:	89 c2                	mov    %eax,%edx$/;"	l
c0113762	obj/kernel.asm	/^c0113762:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113765	obj/kernel.asm	/^c0113765:	01 d0                	add    %edx,%eax$/;"	l
c0113767	obj/kernel.asm	/^c0113767:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c011376a	obj/kernel.asm	/^c011376a:	e9 6f ff ff ff       	jmp    c01136de <strtol+0xad>$/;"	l
c011376f	obj/kernel.asm	/^c011376f:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0113773	obj/kernel.asm	/^c0113773:	74 08                	je     c011377d <strtol+0x14c>$/;"	l
c0113775	obj/kernel.asm	/^c0113775:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113778	obj/kernel.asm	/^c0113778:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c011377b	obj/kernel.asm	/^c011377b:	89 10                	mov    %edx,(%eax)$/;"	l
c011377d	obj/kernel.asm	/^c011377d:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)$/;"	l
c0113781	obj/kernel.asm	/^c0113781:	74 07                	je     c011378a <strtol+0x159>$/;"	l
c0113783	obj/kernel.asm	/^c0113783:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c0113786	obj/kernel.asm	/^c0113786:	f7 d8                	neg    %eax$/;"	l
c0113788	obj/kernel.asm	/^c0113788:	eb 03                	jmp    c011378d <strtol+0x15c>$/;"	l
c011378a	obj/kernel.asm	/^c011378a:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c011378d	obj/kernel.asm	/^c011378d:	c9                   	leave  $/;"	l
c011378e	obj/kernel.asm	/^c011378e:	c3                   	ret    $/;"	l
c011378f	obj/kernel.asm	/^c011378f <memset>:$/;"	l
c011378f	obj/kernel.asm	/^c011378f:	55                   	push   %ebp$/;"	l
c0113790	obj/kernel.asm	/^c0113790:	89 e5                	mov    %esp,%ebp$/;"	l
c0113792	obj/kernel.asm	/^c0113792:	57                   	push   %edi$/;"	l
c0113793	obj/kernel.asm	/^c0113793:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0113796	obj/kernel.asm	/^c0113796:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113799	obj/kernel.asm	/^c0113799:	88 45 d8             	mov    %al,-0x28(%ebp)$/;"	l
c011379c	obj/kernel.asm	/^c011379c:	0f be 45 d8          	movsbl -0x28(%ebp),%eax$/;"	l
c01137a0	obj/kernel.asm	/^c01137a0:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c01137a3	obj/kernel.asm	/^c01137a3:	89 55 f8             	mov    %edx,-0x8(%ebp)$/;"	l
c01137a6	obj/kernel.asm	/^c01137a6:	88 45 f7             	mov    %al,-0x9(%ebp)$/;"	l
c01137a9	obj/kernel.asm	/^c01137a9:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01137ac	obj/kernel.asm	/^c01137ac:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01137af	obj/kernel.asm	/^c01137af:	8b 4d f0             	mov    -0x10(%ebp),%ecx$/;"	l
c01137b2	obj/kernel.asm	/^c01137b2:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax$/;"	l
c01137b6	obj/kernel.asm	/^c01137b6:	8b 55 f8             	mov    -0x8(%ebp),%edx$/;"	l
c01137b9	obj/kernel.asm	/^c01137b9:	89 d7                	mov    %edx,%edi$/;"	l
c01137bb	obj/kernel.asm	/^c01137bb:	f3 aa                	rep stos %al,%es:(%edi)$/;"	l
c01137bd	obj/kernel.asm	/^c01137bd:	89 fa                	mov    %edi,%edx$/;"	l
c01137bf	obj/kernel.asm	/^c01137bf:	89 4d ec             	mov    %ecx,-0x14(%ebp)$/;"	l
c01137c2	obj/kernel.asm	/^c01137c2:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c01137c5	obj/kernel.asm	/^c01137c5:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01137c8	obj/kernel.asm	/^c01137c8:	90                   	nop$/;"	l
c01137c9	obj/kernel.asm	/^c01137c9:	83 c4 24             	add    $0x24,%esp$/;"	l
c01137cc	obj/kernel.asm	/^c01137cc:	5f                   	pop    %edi$/;"	l
c01137cd	obj/kernel.asm	/^c01137cd:	5d                   	pop    %ebp$/;"	l
c01137ce	obj/kernel.asm	/^c01137ce:	c3                   	ret    $/;"	l
c01137cf	obj/kernel.asm	/^c01137cf <memmove>:$/;"	l
c01137cf	obj/kernel.asm	/^c01137cf:	55                   	push   %ebp$/;"	l
c01137d0	obj/kernel.asm	/^c01137d0:	89 e5                	mov    %esp,%ebp$/;"	l
c01137d2	obj/kernel.asm	/^c01137d2:	57                   	push   %edi$/;"	l
c01137d3	obj/kernel.asm	/^c01137d3:	56                   	push   %esi$/;"	l
c01137d4	obj/kernel.asm	/^c01137d4:	53                   	push   %ebx$/;"	l
c01137d5	obj/kernel.asm	/^c01137d5:	83 ec 30             	sub    $0x30,%esp$/;"	l
c01137d8	obj/kernel.asm	/^c01137d8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01137db	obj/kernel.asm	/^c01137db:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c01137de	obj/kernel.asm	/^c01137de:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01137e1	obj/kernel.asm	/^c01137e1:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c01137e4	obj/kernel.asm	/^c01137e4:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c01137e7	obj/kernel.asm	/^c01137e7:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c01137ea	obj/kernel.asm	/^c01137ea:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01137ed	obj/kernel.asm	/^c01137ed:	3b 45 ec             	cmp    -0x14(%ebp),%eax$/;"	l
c01137f0	obj/kernel.asm	/^c01137f0:	73 42                	jae    c0113834 <memmove+0x65>$/;"	l
c01137f2	obj/kernel.asm	/^c01137f2:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c01137f5	obj/kernel.asm	/^c01137f5:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c01137f8	obj/kernel.asm	/^c01137f8:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c01137fb	obj/kernel.asm	/^c01137fb:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01137fe	obj/kernel.asm	/^c01137fe:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113801	obj/kernel.asm	/^c0113801:	89 45 dc             	mov    %eax,-0x24(%ebp)$/;"	l
c0113804	obj/kernel.asm	/^c0113804:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113807	obj/kernel.asm	/^c0113807:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c011380a	obj/kernel.asm	/^c011380a:	89 c1                	mov    %eax,%ecx$/;"	l
c011380c	obj/kernel.asm	/^c011380c:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c011380f	obj/kernel.asm	/^c011380f:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113812	obj/kernel.asm	/^c0113812:	89 d7                	mov    %edx,%edi$/;"	l
c0113814	obj/kernel.asm	/^c0113814:	89 c6                	mov    %eax,%esi$/;"	l
c0113816	obj/kernel.asm	/^c0113816:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c0113818	obj/kernel.asm	/^c0113818:	8b 4d dc             	mov    -0x24(%ebp),%ecx$/;"	l
c011381b	obj/kernel.asm	/^c011381b:	83 e1 03             	and    $0x3,%ecx$/;"	l
c011381e	obj/kernel.asm	/^c011381e:	74 02                	je     c0113822 <memmove+0x53>$/;"	l
c0113820	obj/kernel.asm	/^c0113820:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c0113822	obj/kernel.asm	/^c0113822:	89 f0                	mov    %esi,%eax$/;"	l
c0113824	obj/kernel.asm	/^c0113824:	89 fa                	mov    %edi,%edx$/;"	l
c0113826	obj/kernel.asm	/^c0113826:	89 4d d8             	mov    %ecx,-0x28(%ebp)$/;"	l
c0113829	obj/kernel.asm	/^c0113829:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c011382c	obj/kernel.asm	/^c011382c:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c011382f	obj/kernel.asm	/^c011382f:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113832	obj/kernel.asm	/^c0113832:	eb 36                	jmp    c011386a <memmove+0x9b>$/;"	l
c0113834	obj/kernel.asm	/^c0113834:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113837	obj/kernel.asm	/^c0113837:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c011383a	obj/kernel.asm	/^c011383a:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011383d	obj/kernel.asm	/^c011383d:	01 c2                	add    %eax,%edx$/;"	l
c011383f	obj/kernel.asm	/^c011383f:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113842	obj/kernel.asm	/^c0113842:	8d 48 ff             	lea    -0x1(%eax),%ecx$/;"	l
c0113845	obj/kernel.asm	/^c0113845:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113848	obj/kernel.asm	/^c0113848:	8d 1c 01             	lea    (%ecx,%eax,1),%ebx$/;"	l
c011384b	obj/kernel.asm	/^c011384b:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c011384e	obj/kernel.asm	/^c011384e:	89 c1                	mov    %eax,%ecx$/;"	l
c0113850	obj/kernel.asm	/^c0113850:	89 d8                	mov    %ebx,%eax$/;"	l
c0113852	obj/kernel.asm	/^c0113852:	89 d6                	mov    %edx,%esi$/;"	l
c0113854	obj/kernel.asm	/^c0113854:	89 c7                	mov    %eax,%edi$/;"	l
c0113856	obj/kernel.asm	/^c0113856:	fd                   	std    $/;"	l
c0113857	obj/kernel.asm	/^c0113857:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c0113859	obj/kernel.asm	/^c0113859:	fc                   	cld    $/;"	l
c011385a	obj/kernel.asm	/^c011385a:	89 f8                	mov    %edi,%eax$/;"	l
c011385c	obj/kernel.asm	/^c011385c:	89 f2                	mov    %esi,%edx$/;"	l
c011385e	obj/kernel.asm	/^c011385e:	89 4d cc             	mov    %ecx,-0x34(%ebp)$/;"	l
c0113861	obj/kernel.asm	/^c0113861:	89 55 c8             	mov    %edx,-0x38(%ebp)$/;"	l
c0113864	obj/kernel.asm	/^c0113864:	89 45 c4             	mov    %eax,-0x3c(%ebp)$/;"	l
c0113867	obj/kernel.asm	/^c0113867:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011386a	obj/kernel.asm	/^c011386a:	83 c4 30             	add    $0x30,%esp$/;"	l
c011386d	obj/kernel.asm	/^c011386d:	5b                   	pop    %ebx$/;"	l
c011386e	obj/kernel.asm	/^c011386e:	5e                   	pop    %esi$/;"	l
c011386f	obj/kernel.asm	/^c011386f:	5f                   	pop    %edi$/;"	l
c0113870	obj/kernel.asm	/^c0113870:	5d                   	pop    %ebp$/;"	l
c0113871	obj/kernel.asm	/^c0113871:	c3                   	ret    $/;"	l
c0113872	obj/kernel.asm	/^c0113872 <memcpy>:$/;"	l
c0113872	obj/kernel.asm	/^c0113872:	55                   	push   %ebp$/;"	l
c0113873	obj/kernel.asm	/^c0113873:	89 e5                	mov    %esp,%ebp$/;"	l
c0113875	obj/kernel.asm	/^c0113875:	57                   	push   %edi$/;"	l
c0113876	obj/kernel.asm	/^c0113876:	56                   	push   %esi$/;"	l
c0113877	obj/kernel.asm	/^c0113877:	83 ec 20             	sub    $0x20,%esp$/;"	l
c011387a	obj/kernel.asm	/^c011387a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011387d	obj/kernel.asm	/^c011387d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113880	obj/kernel.asm	/^c0113880:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113883	obj/kernel.asm	/^c0113883:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113886	obj/kernel.asm	/^c0113886:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0113889	obj/kernel.asm	/^c0113889:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c011388c	obj/kernel.asm	/^c011388c:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c011388f	obj/kernel.asm	/^c011388f:	c1 e8 02             	shr    $0x2,%eax$/;"	l
c0113892	obj/kernel.asm	/^c0113892:	89 c1                	mov    %eax,%ecx$/;"	l
c0113894	obj/kernel.asm	/^c0113894:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0113897	obj/kernel.asm	/^c0113897:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011389a	obj/kernel.asm	/^c011389a:	89 d7                	mov    %edx,%edi$/;"	l
c011389c	obj/kernel.asm	/^c011389c:	89 c6                	mov    %eax,%esi$/;"	l
c011389e	obj/kernel.asm	/^c011389e:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)$/;"	l
c01138a0	obj/kernel.asm	/^c01138a0:	8b 4d ec             	mov    -0x14(%ebp),%ecx$/;"	l
c01138a3	obj/kernel.asm	/^c01138a3:	83 e1 03             	and    $0x3,%ecx$/;"	l
c01138a6	obj/kernel.asm	/^c01138a6:	74 02                	je     c01138aa <memcpy+0x38>$/;"	l
c01138a8	obj/kernel.asm	/^c01138a8:	f3 a4                	rep movsb %ds:(%esi),%es:(%edi)$/;"	l
c01138aa	obj/kernel.asm	/^c01138aa:	89 f0                	mov    %esi,%eax$/;"	l
c01138ac	obj/kernel.asm	/^c01138ac:	89 fa                	mov    %edi,%edx$/;"	l
c01138ae	obj/kernel.asm	/^c01138ae:	89 4d e8             	mov    %ecx,-0x18(%ebp)$/;"	l
c01138b1	obj/kernel.asm	/^c01138b1:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c01138b4	obj/kernel.asm	/^c01138b4:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c01138b7	obj/kernel.asm	/^c01138b7:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c01138ba	obj/kernel.asm	/^c01138ba:	90                   	nop$/;"	l
c01138bb	obj/kernel.asm	/^c01138bb:	83 c4 20             	add    $0x20,%esp$/;"	l
c01138be	obj/kernel.asm	/^c01138be:	5e                   	pop    %esi$/;"	l
c01138bf	obj/kernel.asm	/^c01138bf:	5f                   	pop    %edi$/;"	l
c01138c0	obj/kernel.asm	/^c01138c0:	5d                   	pop    %ebp$/;"	l
c01138c1	obj/kernel.asm	/^c01138c1:	c3                   	ret    $/;"	l
c01138c2	obj/kernel.asm	/^c01138c2 <memcmp>:$/;"	l
c01138c2	obj/kernel.asm	/^c01138c2:	55                   	push   %ebp$/;"	l
c01138c3	obj/kernel.asm	/^c01138c3:	89 e5                	mov    %esp,%ebp$/;"	l
c01138c5	obj/kernel.asm	/^c01138c5:	83 ec 10             	sub    $0x10,%esp$/;"	l
c01138c8	obj/kernel.asm	/^c01138c8:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01138cb	obj/kernel.asm	/^c01138cb:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c01138ce	obj/kernel.asm	/^c01138ce:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c01138d1	obj/kernel.asm	/^c01138d1:	89 45 f8             	mov    %eax,-0x8(%ebp)$/;"	l
c01138d4	obj/kernel.asm	/^c01138d4:	eb 30                	jmp    c0113906 <memcmp+0x44>$/;"	l
c01138d6	obj/kernel.asm	/^c01138d6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01138d9	obj/kernel.asm	/^c01138d9:	0f b6 10             	movzbl (%eax),%edx$/;"	l
c01138dc	obj/kernel.asm	/^c01138dc:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01138df	obj/kernel.asm	/^c01138df:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01138e2	obj/kernel.asm	/^c01138e2:	38 c2                	cmp    %al,%dl$/;"	l
c01138e4	obj/kernel.asm	/^c01138e4:	74 18                	je     c01138fe <memcmp+0x3c>$/;"	l
c01138e6	obj/kernel.asm	/^c01138e6:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c01138e9	obj/kernel.asm	/^c01138e9:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01138ec	obj/kernel.asm	/^c01138ec:	0f b6 d0             	movzbl %al,%edx$/;"	l
c01138ef	obj/kernel.asm	/^c01138ef:	8b 45 f8             	mov    -0x8(%ebp),%eax$/;"	l
c01138f2	obj/kernel.asm	/^c01138f2:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01138f5	obj/kernel.asm	/^c01138f5:	0f b6 c0             	movzbl %al,%eax$/;"	l
c01138f8	obj/kernel.asm	/^c01138f8:	29 c2                	sub    %eax,%edx$/;"	l
c01138fa	obj/kernel.asm	/^c01138fa:	89 d0                	mov    %edx,%eax$/;"	l
c01138fc	obj/kernel.asm	/^c01138fc:	eb 1a                	jmp    c0113918 <memcmp+0x56>$/;"	l
c01138fe	obj/kernel.asm	/^c01138fe:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)$/;"	l
c0113902	obj/kernel.asm	/^c0113902:	83 45 f8 01          	addl   $0x1,-0x8(%ebp)$/;"	l
c0113906	obj/kernel.asm	/^c0113906:	8b 45 10             	mov    0x10(%ebp),%eax$/;"	l
c0113909	obj/kernel.asm	/^c0113909:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c011390c	obj/kernel.asm	/^c011390c:	89 55 10             	mov    %edx,0x10(%ebp)$/;"	l
c011390f	obj/kernel.asm	/^c011390f:	85 c0                	test   %eax,%eax$/;"	l
c0113911	obj/kernel.asm	/^c0113911:	75 c3                	jne    c01138d6 <memcmp+0x14>$/;"	l
c0113913	obj/kernel.asm	/^c0113913:	b8 00 00 00 00       	mov    $0x0,%eax$/;"	l
c0113918	obj/kernel.asm	/^c0113918:	c9                   	leave  $/;"	l
c0113919	obj/kernel.asm	/^c0113919:	c3                   	ret    $/;"	l
c011391a	obj/kernel.asm	/^c011391a <printnum>:$/;"	l
c011391a	obj/kernel.asm	/^c011391a:	55                   	push   %ebp$/;"	l
c011391b	obj/kernel.asm	/^c011391b:	89 e5                	mov    %esp,%ebp$/;"	l
c011391d	obj/kernel.asm	/^c011391d:	83 ec 38             	sub    $0x38,%esp$/;"	l
c0113920	obj/kernel.asm	/^c0113920:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113923	obj/kernel.asm	/^c0113923:	89 45 d0             	mov    %eax,-0x30(%ebp)$/;"	l
c0113926	obj/kernel.asm	/^c0113926:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0113929	obj/kernel.asm	/^c0113929:	89 45 d4             	mov    %eax,-0x2c(%ebp)$/;"	l
c011392c	obj/kernel.asm	/^c011392c:	8b 45 d0             	mov    -0x30(%ebp),%eax$/;"	l
c011392f	obj/kernel.asm	/^c011392f:	8b 55 d4             	mov    -0x2c(%ebp),%edx$/;"	l
c0113932	obj/kernel.asm	/^c0113932:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113935	obj/kernel.asm	/^c0113935:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0113938	obj/kernel.asm	/^c0113938:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c011393b	obj/kernel.asm	/^c011393b:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c011393e	obj/kernel.asm	/^c011393e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113941	obj/kernel.asm	/^c0113941:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0113944	obj/kernel.asm	/^c0113944:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0113947	obj/kernel.asm	/^c0113947:	89 55 f0             	mov    %edx,-0x10(%ebp)$/;"	l
c011394a	obj/kernel.asm	/^c011394a:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c011394d	obj/kernel.asm	/^c011394d:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113950	obj/kernel.asm	/^c0113950:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)$/;"	l
c0113954	obj/kernel.asm	/^c0113954:	74 1c                	je     c0113972 <printnum+0x58>$/;"	l
c0113956	obj/kernel.asm	/^c0113956:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113959	obj/kernel.asm	/^c0113959:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c011395e	obj/kernel.asm	/^c011395e:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c0113961	obj/kernel.asm	/^c0113961:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0113964	obj/kernel.asm	/^c0113964:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113967	obj/kernel.asm	/^c0113967:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c011396c	obj/kernel.asm	/^c011396c:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c011396f	obj/kernel.asm	/^c011396f:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113972	obj/kernel.asm	/^c0113972:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113975	obj/kernel.asm	/^c0113975:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0113978	obj/kernel.asm	/^c0113978:	f7 75 e4             	divl   -0x1c(%ebp)$/;"	l
c011397b	obj/kernel.asm	/^c011397b:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c011397e	obj/kernel.asm	/^c011397e:	89 55 dc             	mov    %edx,-0x24(%ebp)$/;"	l
c0113981	obj/kernel.asm	/^c0113981:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113984	obj/kernel.asm	/^c0113984:	8b 55 f0             	mov    -0x10(%ebp),%edx$/;"	l
c0113987	obj/kernel.asm	/^c0113987:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c011398a	obj/kernel.asm	/^c011398a:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c011398d	obj/kernel.asm	/^c011398d:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113990	obj/kernel.asm	/^c0113990:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0113993	obj/kernel.asm	/^c0113993:	8b 45 1c             	mov    0x1c(%ebp),%eax$/;"	l
c0113996	obj/kernel.asm	/^c0113996:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c011399b	obj/kernel.asm	/^c011399b:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c011399e	obj/kernel.asm	/^c011399e:	77 44                	ja     c01139e4 <printnum+0xca>$/;"	l
c01139a0	obj/kernel.asm	/^c01139a0:	3b 55 d4             	cmp    -0x2c(%ebp),%edx$/;"	l
c01139a3	obj/kernel.asm	/^c01139a3:	72 05                	jb     c01139aa <printnum+0x90>$/;"	l
c01139a5	obj/kernel.asm	/^c01139a5:	3b 45 d0             	cmp    -0x30(%ebp),%eax$/;"	l
c01139a8	obj/kernel.asm	/^c01139a8:	77 3a                	ja     c01139e4 <printnum+0xca>$/;"	l
c01139aa	obj/kernel.asm	/^c01139aa:	8b 45 20             	mov    0x20(%ebp),%eax$/;"	l
c01139ad	obj/kernel.asm	/^c01139ad:	83 e8 01             	sub    $0x1,%eax$/;"	l
c01139b0	obj/kernel.asm	/^c01139b0:	ff 75 24             	pushl  0x24(%ebp)$/;"	l
c01139b3	obj/kernel.asm	/^c01139b3:	50                   	push   %eax$/;"	l
c01139b4	obj/kernel.asm	/^c01139b4:	ff 75 1c             	pushl  0x1c(%ebp)$/;"	l
c01139b7	obj/kernel.asm	/^c01139b7:	ff 75 ec             	pushl  -0x14(%ebp)$/;"	l
c01139ba	obj/kernel.asm	/^c01139ba:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c01139bd	obj/kernel.asm	/^c01139bd:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01139c0	obj/kernel.asm	/^c01139c0:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01139c3	obj/kernel.asm	/^c01139c3:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c01139c6	obj/kernel.asm	/^c01139c6:	e8 4f ff ff ff       	call   c011391a <printnum>$/;"	l
c01139cb	obj/kernel.asm	/^c01139cb:	83 c4 20             	add    $0x20,%esp$/;"	l
c01139ce	obj/kernel.asm	/^c01139ce:	eb 1e                	jmp    c01139ee <printnum+0xd4>$/;"	l
c01139d0	obj/kernel.asm	/^c01139d0:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01139d3	obj/kernel.asm	/^c01139d3:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c01139d6	obj/kernel.asm	/^c01139d6:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c01139d9	obj/kernel.asm	/^c01139d9:	ff 75 24             	pushl  0x24(%ebp)$/;"	l
c01139dc	obj/kernel.asm	/^c01139dc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c01139df	obj/kernel.asm	/^c01139df:	ff d0                	call   *%eax$/;"	l
c01139e1	obj/kernel.asm	/^c01139e1:	83 c4 10             	add    $0x10,%esp$/;"	l
c01139e4	obj/kernel.asm	/^c01139e4:	83 6d 20 01          	subl   $0x1,0x20(%ebp)$/;"	l
c01139e8	obj/kernel.asm	/^c01139e8:	83 7d 20 00          	cmpl   $0x0,0x20(%ebp)$/;"	l
c01139ec	obj/kernel.asm	/^c01139ec:	7f e2                	jg     c01139d0 <printnum+0xb6>$/;"	l
c01139ee	obj/kernel.asm	/^c01139ee:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c01139f1	obj/kernel.asm	/^c01139f1:	05 24 86 11 c0       	add    $0xc0118624,%eax$/;"	l
c01139f6	obj/kernel.asm	/^c01139f6:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c01139f9	obj/kernel.asm	/^c01139f9:	0f be c0             	movsbl %al,%eax$/;"	l
c01139fc	obj/kernel.asm	/^c01139fc:	83 ec 04             	sub    $0x4,%esp$/;"	l
c01139ff	obj/kernel.asm	/^c01139ff:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113a02	obj/kernel.asm	/^c0113a02:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113a05	obj/kernel.asm	/^c0113a05:	50                   	push   %eax$/;"	l
c0113a06	obj/kernel.asm	/^c0113a06:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113a09	obj/kernel.asm	/^c0113a09:	ff d0                	call   *%eax$/;"	l
c0113a0b	obj/kernel.asm	/^c0113a0b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113a0e	obj/kernel.asm	/^c0113a0e:	c9                   	leave  $/;"	l
c0113a0f	obj/kernel.asm	/^c0113a0f:	c3                   	ret    $/;"	l
c0113a10	obj/kernel.asm	/^c0113a10 <getuint>:$/;"	l
c0113a10	obj/kernel.asm	/^c0113a10:	55                   	push   %ebp$/;"	l
c0113a11	obj/kernel.asm	/^c0113a11:	89 e5                	mov    %esp,%ebp$/;"	l
c0113a13	obj/kernel.asm	/^c0113a13:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c0113a17	obj/kernel.asm	/^c0113a17:	7e 14                	jle    c0113a2d <getuint+0x1d>$/;"	l
c0113a19	obj/kernel.asm	/^c0113a19:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113a1c	obj/kernel.asm	/^c0113a1c:	8b 00                	mov    (%eax),%eax$/;"	l
c0113a1e	obj/kernel.asm	/^c0113a1e:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c0113a21	obj/kernel.asm	/^c0113a21:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0113a24	obj/kernel.asm	/^c0113a24:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0113a26	obj/kernel.asm	/^c0113a26:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0113a29	obj/kernel.asm	/^c0113a29:	8b 00                	mov    (%eax),%eax$/;"	l
c0113a2b	obj/kernel.asm	/^c0113a2b:	eb 30                	jmp    c0113a5d <getuint+0x4d>$/;"	l
c0113a2d	obj/kernel.asm	/^c0113a2d:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0113a31	obj/kernel.asm	/^c0113a31:	74 16                	je     c0113a49 <getuint+0x39>$/;"	l
c0113a33	obj/kernel.asm	/^c0113a33:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113a36	obj/kernel.asm	/^c0113a36:	8b 00                	mov    (%eax),%eax$/;"	l
c0113a38	obj/kernel.asm	/^c0113a38:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0113a3b	obj/kernel.asm	/^c0113a3b:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0113a3e	obj/kernel.asm	/^c0113a3e:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0113a40	obj/kernel.asm	/^c0113a40:	8b 00                	mov    (%eax),%eax$/;"	l
c0113a42	obj/kernel.asm	/^c0113a42:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0113a47	obj/kernel.asm	/^c0113a47:	eb 14                	jmp    c0113a5d <getuint+0x4d>$/;"	l
c0113a49	obj/kernel.asm	/^c0113a49:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113a4c	obj/kernel.asm	/^c0113a4c:	8b 00                	mov    (%eax),%eax$/;"	l
c0113a4e	obj/kernel.asm	/^c0113a4e:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0113a51	obj/kernel.asm	/^c0113a51:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0113a54	obj/kernel.asm	/^c0113a54:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0113a56	obj/kernel.asm	/^c0113a56:	8b 00                	mov    (%eax),%eax$/;"	l
c0113a58	obj/kernel.asm	/^c0113a58:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0113a5d	obj/kernel.asm	/^c0113a5d:	5d                   	pop    %ebp$/;"	l
c0113a5e	obj/kernel.asm	/^c0113a5e:	c3                   	ret    $/;"	l
c0113a5f	obj/kernel.asm	/^c0113a5f <getint>:$/;"	l
c0113a5f	obj/kernel.asm	/^c0113a5f:	55                   	push   %ebp$/;"	l
c0113a60	obj/kernel.asm	/^c0113a60:	89 e5                	mov    %esp,%ebp$/;"	l
c0113a62	obj/kernel.asm	/^c0113a62:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)$/;"	l
c0113a66	obj/kernel.asm	/^c0113a66:	7e 14                	jle    c0113a7c <getint+0x1d>$/;"	l
c0113a68	obj/kernel.asm	/^c0113a68:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113a6b	obj/kernel.asm	/^c0113a6b:	8b 00                	mov    (%eax),%eax$/;"	l
c0113a6d	obj/kernel.asm	/^c0113a6d:	8d 48 08             	lea    0x8(%eax),%ecx$/;"	l
c0113a70	obj/kernel.asm	/^c0113a70:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0113a73	obj/kernel.asm	/^c0113a73:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0113a75	obj/kernel.asm	/^c0113a75:	8b 50 04             	mov    0x4(%eax),%edx$/;"	l
c0113a78	obj/kernel.asm	/^c0113a78:	8b 00                	mov    (%eax),%eax$/;"	l
c0113a7a	obj/kernel.asm	/^c0113a7a:	eb 28                	jmp    c0113aa4 <getint+0x45>$/;"	l
c0113a7c	obj/kernel.asm	/^c0113a7c:	83 7d 0c 00          	cmpl   $0x0,0xc(%ebp)$/;"	l
c0113a80	obj/kernel.asm	/^c0113a80:	74 12                	je     c0113a94 <getint+0x35>$/;"	l
c0113a82	obj/kernel.asm	/^c0113a82:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113a85	obj/kernel.asm	/^c0113a85:	8b 00                	mov    (%eax),%eax$/;"	l
c0113a87	obj/kernel.asm	/^c0113a87:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0113a8a	obj/kernel.asm	/^c0113a8a:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0113a8d	obj/kernel.asm	/^c0113a8d:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0113a8f	obj/kernel.asm	/^c0113a8f:	8b 00                	mov    (%eax),%eax$/;"	l
c0113a91	obj/kernel.asm	/^c0113a91:	99                   	cltd   $/;"	l
c0113a92	obj/kernel.asm	/^c0113a92:	eb 10                	jmp    c0113aa4 <getint+0x45>$/;"	l
c0113a94	obj/kernel.asm	/^c0113a94:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113a97	obj/kernel.asm	/^c0113a97:	8b 00                	mov    (%eax),%eax$/;"	l
c0113a99	obj/kernel.asm	/^c0113a99:	8d 48 04             	lea    0x4(%eax),%ecx$/;"	l
c0113a9c	obj/kernel.asm	/^c0113a9c:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0113a9f	obj/kernel.asm	/^c0113a9f:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0113aa1	obj/kernel.asm	/^c0113aa1:	8b 00                	mov    (%eax),%eax$/;"	l
c0113aa3	obj/kernel.asm	/^c0113aa3:	99                   	cltd   $/;"	l
c0113aa4	obj/kernel.asm	/^c0113aa4:	5d                   	pop    %ebp$/;"	l
c0113aa5	obj/kernel.asm	/^c0113aa5:	c3                   	ret    $/;"	l
c0113aa6	obj/kernel.asm	/^c0113aa6 <printfmt>:$/;"	l
c0113aa6	obj/kernel.asm	/^c0113aa6:	55                   	push   %ebp$/;"	l
c0113aa7	obj/kernel.asm	/^c0113aa7:	89 e5                	mov    %esp,%ebp$/;"	l
c0113aa9	obj/kernel.asm	/^c0113aa9:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0113aac	obj/kernel.asm	/^c0113aac:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0113aaf	obj/kernel.asm	/^c0113aaf:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113ab2	obj/kernel.asm	/^c0113ab2:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113ab5	obj/kernel.asm	/^c0113ab5:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0113ab8	obj/kernel.asm	/^c0113ab8:	50                   	push   %eax$/;"	l
c0113ab9	obj/kernel.asm	/^c0113ab9:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0113abc	obj/kernel.asm	/^c0113abc:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113abf	obj/kernel.asm	/^c0113abf:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113ac2	obj/kernel.asm	/^c0113ac2:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113ac5	obj/kernel.asm	/^c0113ac5:	e8 05 00 00 00       	call   c0113acf <vprintfmt>$/;"	l
c0113aca	obj/kernel.asm	/^c0113aca:	83 c4 20             	add    $0x20,%esp$/;"	l
c0113acd	obj/kernel.asm	/^c0113acd:	c9                   	leave  $/;"	l
c0113ace	obj/kernel.asm	/^c0113ace:	c3                   	ret    $/;"	l
c0113acf	obj/kernel.asm	/^c0113acf <vprintfmt>:$/;"	l
c0113acf	obj/kernel.asm	/^c0113acf:	55                   	push   %ebp$/;"	l
c0113ad0	obj/kernel.asm	/^c0113ad0:	89 e5                	mov    %esp,%ebp$/;"	l
c0113ad2	obj/kernel.asm	/^c0113ad2:	56                   	push   %esi$/;"	l
c0113ad3	obj/kernel.asm	/^c0113ad3:	53                   	push   %ebx$/;"	l
c0113ad4	obj/kernel.asm	/^c0113ad4:	83 ec 20             	sub    $0x20,%esp$/;"	l
c0113ad7	obj/kernel.asm	/^c0113ad7:	eb 1b                	jmp    c0113af4 <vprintfmt+0x25>$/;"	l
c0113ad9	obj/kernel.asm	/^c0113ad9:	85 db                	test   %ebx,%ebx$/;"	l
c0113adb	obj/kernel.asm	/^c0113adb:	75 05                	jne    c0113ae2 <vprintfmt+0x13>$/;"	l
c0113add	obj/kernel.asm	/^c0113add:	e9 bb 03 00 00       	jmp    c0113e9d <vprintfmt+0x3ce>$/;"	l
c0113ae2	obj/kernel.asm	/^c0113ae2:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113ae5	obj/kernel.asm	/^c0113ae5:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113ae8	obj/kernel.asm	/^c0113ae8:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113aeb	obj/kernel.asm	/^c0113aeb:	53                   	push   %ebx$/;"	l
c0113aec	obj/kernel.asm	/^c0113aec:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113aef	obj/kernel.asm	/^c0113aef:	ff d0                	call   *%eax$/;"	l
c0113af1	obj/kernel.asm	/^c0113af1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113af4	obj/kernel.asm	/^c0113af4:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113af7	obj/kernel.asm	/^c0113af7:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0113afa	obj/kernel.asm	/^c0113afa:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c0113afd	obj/kernel.asm	/^c0113afd:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113b00	obj/kernel.asm	/^c0113b00:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c0113b03	obj/kernel.asm	/^c0113b03:	83 fb 25             	cmp    $0x25,%ebx$/;"	l
c0113b06	obj/kernel.asm	/^c0113b06:	75 d1                	jne    c0113ad9 <vprintfmt+0xa>$/;"	l
c0113b08	obj/kernel.asm	/^c0113b08:	c6 45 db 20          	movb   $0x20,-0x25(%ebp)$/;"	l
c0113b0c	obj/kernel.asm	/^c0113b0c:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c0113b13	obj/kernel.asm	/^c0113b13:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113b16	obj/kernel.asm	/^c0113b16:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113b19	obj/kernel.asm	/^c0113b19:	c7 45 dc 00 00 00 00 	movl   $0x0,-0x24(%ebp)$/;"	l
c0113b20	obj/kernel.asm	/^c0113b20:	8b 45 dc             	mov    -0x24(%ebp),%eax$/;"	l
c0113b23	obj/kernel.asm	/^c0113b23:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0113b26	obj/kernel.asm	/^c0113b26:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113b29	obj/kernel.asm	/^c0113b29:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0113b2c	obj/kernel.asm	/^c0113b2c:	89 55 14             	mov    %edx,0x14(%ebp)$/;"	l
c0113b2f	obj/kernel.asm	/^c0113b2f:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113b32	obj/kernel.asm	/^c0113b32:	0f b6 d8             	movzbl %al,%ebx$/;"	l
c0113b35	obj/kernel.asm	/^c0113b35:	8d 43 dd             	lea    -0x23(%ebx),%eax$/;"	l
c0113b38	obj/kernel.asm	/^c0113b38:	83 f8 55             	cmp    $0x55,%eax$/;"	l
c0113b3b	obj/kernel.asm	/^c0113b3b:	0f 87 2c 03 00 00    	ja     c0113e6d <vprintfmt+0x39e>$/;"	l
c0113b41	obj/kernel.asm	/^c0113b41:	8b 04 85 48 86 11 c0 	mov    -0x3fee79b8(,%eax,4),%eax$/;"	l
c0113b48	obj/kernel.asm	/^c0113b48:	ff e0                	jmp    *%eax$/;"	l
c0113b4a	obj/kernel.asm	/^c0113b4a:	c6 45 db 2d          	movb   $0x2d,-0x25(%ebp)$/;"	l
c0113b4e	obj/kernel.asm	/^c0113b4e:	eb d6                	jmp    c0113b26 <vprintfmt+0x57>$/;"	l
c0113b50	obj/kernel.asm	/^c0113b50:	c6 45 db 30          	movb   $0x30,-0x25(%ebp)$/;"	l
c0113b54	obj/kernel.asm	/^c0113b54:	eb d0                	jmp    c0113b26 <vprintfmt+0x57>$/;"	l
c0113b56	obj/kernel.asm	/^c0113b56:	c7 45 e4 00 00 00 00 	movl   $0x0,-0x1c(%ebp)$/;"	l
c0113b5d	obj/kernel.asm	/^c0113b5d:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0113b60	obj/kernel.asm	/^c0113b60:	89 d0                	mov    %edx,%eax$/;"	l
c0113b62	obj/kernel.asm	/^c0113b62:	c1 e0 02             	shl    $0x2,%eax$/;"	l
c0113b65	obj/kernel.asm	/^c0113b65:	01 d0                	add    %edx,%eax$/;"	l
c0113b67	obj/kernel.asm	/^c0113b67:	01 c0                	add    %eax,%eax$/;"	l
c0113b69	obj/kernel.asm	/^c0113b69:	01 d8                	add    %ebx,%eax$/;"	l
c0113b6b	obj/kernel.asm	/^c0113b6b:	83 e8 30             	sub    $0x30,%eax$/;"	l
c0113b6e	obj/kernel.asm	/^c0113b6e:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0113b71	obj/kernel.asm	/^c0113b71:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113b74	obj/kernel.asm	/^c0113b74:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113b77	obj/kernel.asm	/^c0113b77:	0f be d8             	movsbl %al,%ebx$/;"	l
c0113b7a	obj/kernel.asm	/^c0113b7a:	83 fb 2f             	cmp    $0x2f,%ebx$/;"	l
c0113b7d	obj/kernel.asm	/^c0113b7d:	7e 0b                	jle    c0113b8a <vprintfmt+0xbb>$/;"	l
c0113b7f	obj/kernel.asm	/^c0113b7f:	83 fb 39             	cmp    $0x39,%ebx$/;"	l
c0113b82	obj/kernel.asm	/^c0113b82:	7f 06                	jg     c0113b8a <vprintfmt+0xbb>$/;"	l
c0113b84	obj/kernel.asm	/^c0113b84:	83 45 14 01          	addl   $0x1,0x14(%ebp)$/;"	l
c0113b88	obj/kernel.asm	/^c0113b88:	eb d3                	jmp    c0113b5d <vprintfmt+0x8e>$/;"	l
c0113b8a	obj/kernel.asm	/^c0113b8a:	eb 2e                	jmp    c0113bba <vprintfmt+0xeb>$/;"	l
c0113b8c	obj/kernel.asm	/^c0113b8c:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0113b8f	obj/kernel.asm	/^c0113b8f:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0113b92	obj/kernel.asm	/^c0113b92:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0113b95	obj/kernel.asm	/^c0113b95:	8b 00                	mov    (%eax),%eax$/;"	l
c0113b97	obj/kernel.asm	/^c0113b97:	89 45 e4             	mov    %eax,-0x1c(%ebp)$/;"	l
c0113b9a	obj/kernel.asm	/^c0113b9a:	eb 1e                	jmp    c0113bba <vprintfmt+0xeb>$/;"	l
c0113b9c	obj/kernel.asm	/^c0113b9c:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0113ba0	obj/kernel.asm	/^c0113ba0:	79 07                	jns    c0113ba9 <vprintfmt+0xda>$/;"	l
c0113ba2	obj/kernel.asm	/^c0113ba2:	c7 45 e8 00 00 00 00 	movl   $0x0,-0x18(%ebp)$/;"	l
c0113ba9	obj/kernel.asm	/^c0113ba9:	e9 78 ff ff ff       	jmp    c0113b26 <vprintfmt+0x57>$/;"	l
c0113bae	obj/kernel.asm	/^c0113bae:	c7 45 dc 01 00 00 00 	movl   $0x1,-0x24(%ebp)$/;"	l
c0113bb5	obj/kernel.asm	/^c0113bb5:	e9 6c ff ff ff       	jmp    c0113b26 <vprintfmt+0x57>$/;"	l
c0113bba	obj/kernel.asm	/^c0113bba:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0113bbe	obj/kernel.asm	/^c0113bbe:	79 0d                	jns    c0113bcd <vprintfmt+0xfe>$/;"	l
c0113bc0	obj/kernel.asm	/^c0113bc0:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113bc3	obj/kernel.asm	/^c0113bc3:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113bc6	obj/kernel.asm	/^c0113bc6:	c7 45 e4 ff ff ff ff 	movl   $0xffffffff,-0x1c(%ebp)$/;"	l
c0113bcd	obj/kernel.asm	/^c0113bcd:	e9 54 ff ff ff       	jmp    c0113b26 <vprintfmt+0x57>$/;"	l
c0113bd2	obj/kernel.asm	/^c0113bd2:	83 45 e0 01          	addl   $0x1,-0x20(%ebp)$/;"	l
c0113bd6	obj/kernel.asm	/^c0113bd6:	e9 4b ff ff ff       	jmp    c0113b26 <vprintfmt+0x57>$/;"	l
c0113bdb	obj/kernel.asm	/^c0113bdb:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0113bde	obj/kernel.asm	/^c0113bde:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0113be1	obj/kernel.asm	/^c0113be1:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0113be4	obj/kernel.asm	/^c0113be4:	8b 00                	mov    (%eax),%eax$/;"	l
c0113be6	obj/kernel.asm	/^c0113be6:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113be9	obj/kernel.asm	/^c0113be9:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113bec	obj/kernel.asm	/^c0113bec:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113bef	obj/kernel.asm	/^c0113bef:	50                   	push   %eax$/;"	l
c0113bf0	obj/kernel.asm	/^c0113bf0:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113bf3	obj/kernel.asm	/^c0113bf3:	ff d0                	call   *%eax$/;"	l
c0113bf5	obj/kernel.asm	/^c0113bf5:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113bf8	obj/kernel.asm	/^c0113bf8:	e9 9b 02 00 00       	jmp    c0113e98 <vprintfmt+0x3c9>$/;"	l
c0113bfd	obj/kernel.asm	/^c0113bfd:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0113c00	obj/kernel.asm	/^c0113c00:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0113c03	obj/kernel.asm	/^c0113c03:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0113c06	obj/kernel.asm	/^c0113c06:	8b 18                	mov    (%eax),%ebx$/;"	l
c0113c08	obj/kernel.asm	/^c0113c08:	85 db                	test   %ebx,%ebx$/;"	l
c0113c0a	obj/kernel.asm	/^c0113c0a:	79 02                	jns    c0113c0e <vprintfmt+0x13f>$/;"	l
c0113c0c	obj/kernel.asm	/^c0113c0c:	f7 db                	neg    %ebx$/;"	l
c0113c0e	obj/kernel.asm	/^c0113c0e:	83 fb 18             	cmp    $0x18,%ebx$/;"	l
c0113c11	obj/kernel.asm	/^c0113c11:	7f 0b                	jg     c0113c1e <vprintfmt+0x14f>$/;"	l
c0113c13	obj/kernel.asm	/^c0113c13:	8b 34 9d c0 85 11 c0 	mov    -0x3fee7a40(,%ebx,4),%esi$/;"	l
c0113c1a	obj/kernel.asm	/^c0113c1a:	85 f6                	test   %esi,%esi$/;"	l
c0113c1c	obj/kernel.asm	/^c0113c1c:	75 1f                	jne    c0113c3d <vprintfmt+0x16e>$/;"	l
c0113c1e	obj/kernel.asm	/^c0113c1e:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0113c21	obj/kernel.asm	/^c0113c21:	53                   	push   %ebx$/;"	l
c0113c22	obj/kernel.asm	/^c0113c22:	68 35 86 11 c0       	push   $0xc0118635$/;"	l
c0113c27	obj/kernel.asm	/^c0113c27:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113c2a	obj/kernel.asm	/^c0113c2a:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113c2d	obj/kernel.asm	/^c0113c2d:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113c30	obj/kernel.asm	/^c0113c30:	e8 71 fe ff ff       	call   c0113aa6 <printfmt>$/;"	l
c0113c35	obj/kernel.asm	/^c0113c35:	83 c4 20             	add    $0x20,%esp$/;"	l
c0113c38	obj/kernel.asm	/^c0113c38:	e9 5b 02 00 00       	jmp    c0113e98 <vprintfmt+0x3c9>$/;"	l
c0113c3d	obj/kernel.asm	/^c0113c3d:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0113c40	obj/kernel.asm	/^c0113c40:	56                   	push   %esi$/;"	l
c0113c41	obj/kernel.asm	/^c0113c41:	68 3e 86 11 c0       	push   $0xc011863e$/;"	l
c0113c46	obj/kernel.asm	/^c0113c46:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113c49	obj/kernel.asm	/^c0113c49:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113c4c	obj/kernel.asm	/^c0113c4c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113c4f	obj/kernel.asm	/^c0113c4f:	e8 52 fe ff ff       	call   c0113aa6 <printfmt>$/;"	l
c0113c54	obj/kernel.asm	/^c0113c54:	83 c4 20             	add    $0x20,%esp$/;"	l
c0113c57	obj/kernel.asm	/^c0113c57:	e9 3c 02 00 00       	jmp    c0113e98 <vprintfmt+0x3c9>$/;"	l
c0113c5c	obj/kernel.asm	/^c0113c5c:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0113c5f	obj/kernel.asm	/^c0113c5f:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0113c62	obj/kernel.asm	/^c0113c62:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0113c65	obj/kernel.asm	/^c0113c65:	8b 30                	mov    (%eax),%esi$/;"	l
c0113c67	obj/kernel.asm	/^c0113c67:	85 f6                	test   %esi,%esi$/;"	l
c0113c69	obj/kernel.asm	/^c0113c69:	75 05                	jne    c0113c70 <vprintfmt+0x1a1>$/;"	l
c0113c6b	obj/kernel.asm	/^c0113c6b:	be 41 86 11 c0       	mov    $0xc0118641,%esi$/;"	l
c0113c70	obj/kernel.asm	/^c0113c70:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0113c74	obj/kernel.asm	/^c0113c74:	7e 42                	jle    c0113cb8 <vprintfmt+0x1e9>$/;"	l
c0113c76	obj/kernel.asm	/^c0113c76:	80 7d db 2d          	cmpb   $0x2d,-0x25(%ebp)$/;"	l
c0113c7a	obj/kernel.asm	/^c0113c7a:	74 3c                	je     c0113cb8 <vprintfmt+0x1e9>$/;"	l
c0113c7c	obj/kernel.asm	/^c0113c7c:	8b 45 e4             	mov    -0x1c(%ebp),%eax$/;"	l
c0113c7f	obj/kernel.asm	/^c0113c7f:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0113c82	obj/kernel.asm	/^c0113c82:	50                   	push   %eax$/;"	l
c0113c83	obj/kernel.asm	/^c0113c83:	56                   	push   %esi$/;"	l
c0113c84	obj/kernel.asm	/^c0113c84:	e8 d4 f7 ff ff       	call   c011345d <strnlen>$/;"	l
c0113c89	obj/kernel.asm	/^c0113c89:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113c8c	obj/kernel.asm	/^c0113c8c:	89 c2                	mov    %eax,%edx$/;"	l
c0113c8e	obj/kernel.asm	/^c0113c8e:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113c91	obj/kernel.asm	/^c0113c91:	29 d0                	sub    %edx,%eax$/;"	l
c0113c93	obj/kernel.asm	/^c0113c93:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0113c96	obj/kernel.asm	/^c0113c96:	eb 1a                	jmp    c0113cb2 <vprintfmt+0x1e3>$/;"	l
c0113c98	obj/kernel.asm	/^c0113c98:	0f be 45 db          	movsbl -0x25(%ebp),%eax$/;"	l
c0113c9c	obj/kernel.asm	/^c0113c9c:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113c9f	obj/kernel.asm	/^c0113c9f:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113ca2	obj/kernel.asm	/^c0113ca2:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113ca5	obj/kernel.asm	/^c0113ca5:	50                   	push   %eax$/;"	l
c0113ca6	obj/kernel.asm	/^c0113ca6:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113ca9	obj/kernel.asm	/^c0113ca9:	ff d0                	call   *%eax$/;"	l
c0113cab	obj/kernel.asm	/^c0113cab:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113cae	obj/kernel.asm	/^c0113cae:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c0113cb2	obj/kernel.asm	/^c0113cb2:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0113cb6	obj/kernel.asm	/^c0113cb6:	7f e0                	jg     c0113c98 <vprintfmt+0x1c9>$/;"	l
c0113cb8	obj/kernel.asm	/^c0113cb8:	eb 3b                	jmp    c0113cf5 <vprintfmt+0x226>$/;"	l
c0113cba	obj/kernel.asm	/^c0113cba:	83 7d dc 00          	cmpl   $0x0,-0x24(%ebp)$/;"	l
c0113cbe	obj/kernel.asm	/^c0113cbe:	74 1f                	je     c0113cdf <vprintfmt+0x210>$/;"	l
c0113cc0	obj/kernel.asm	/^c0113cc0:	83 fb 1f             	cmp    $0x1f,%ebx$/;"	l
c0113cc3	obj/kernel.asm	/^c0113cc3:	7e 05                	jle    c0113cca <vprintfmt+0x1fb>$/;"	l
c0113cc5	obj/kernel.asm	/^c0113cc5:	83 fb 7e             	cmp    $0x7e,%ebx$/;"	l
c0113cc8	obj/kernel.asm	/^c0113cc8:	7e 15                	jle    c0113cdf <vprintfmt+0x210>$/;"	l
c0113cca	obj/kernel.asm	/^c0113cca:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113ccd	obj/kernel.asm	/^c0113ccd:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113cd0	obj/kernel.asm	/^c0113cd0:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113cd3	obj/kernel.asm	/^c0113cd3:	6a 3f                	push   $0x3f$/;"	l
c0113cd5	obj/kernel.asm	/^c0113cd5:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113cd8	obj/kernel.asm	/^c0113cd8:	ff d0                	call   *%eax$/;"	l
c0113cda	obj/kernel.asm	/^c0113cda:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113cdd	obj/kernel.asm	/^c0113cdd:	eb 12                	jmp    c0113cf1 <vprintfmt+0x222>$/;"	l
c0113cdf	obj/kernel.asm	/^c0113cdf:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113ce2	obj/kernel.asm	/^c0113ce2:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113ce5	obj/kernel.asm	/^c0113ce5:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113ce8	obj/kernel.asm	/^c0113ce8:	53                   	push   %ebx$/;"	l
c0113ce9	obj/kernel.asm	/^c0113ce9:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113cec	obj/kernel.asm	/^c0113cec:	ff d0                	call   *%eax$/;"	l
c0113cee	obj/kernel.asm	/^c0113cee:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113cf1	obj/kernel.asm	/^c0113cf1:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c0113cf5	obj/kernel.asm	/^c0113cf5:	89 f0                	mov    %esi,%eax$/;"	l
c0113cf7	obj/kernel.asm	/^c0113cf7:	8d 70 01             	lea    0x1(%eax),%esi$/;"	l
c0113cfa	obj/kernel.asm	/^c0113cfa:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113cfd	obj/kernel.asm	/^c0113cfd:	0f be d8             	movsbl %al,%ebx$/;"	l
c0113d00	obj/kernel.asm	/^c0113d00:	85 db                	test   %ebx,%ebx$/;"	l
c0113d02	obj/kernel.asm	/^c0113d02:	74 10                	je     c0113d14 <vprintfmt+0x245>$/;"	l
c0113d04	obj/kernel.asm	/^c0113d04:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0113d08	obj/kernel.asm	/^c0113d08:	78 b0                	js     c0113cba <vprintfmt+0x1eb>$/;"	l
c0113d0a	obj/kernel.asm	/^c0113d0a:	83 6d e4 01          	subl   $0x1,-0x1c(%ebp)$/;"	l
c0113d0e	obj/kernel.asm	/^c0113d0e:	83 7d e4 00          	cmpl   $0x0,-0x1c(%ebp)$/;"	l
c0113d12	obj/kernel.asm	/^c0113d12:	79 a6                	jns    c0113cba <vprintfmt+0x1eb>$/;"	l
c0113d14	obj/kernel.asm	/^c0113d14:	eb 17                	jmp    c0113d2d <vprintfmt+0x25e>$/;"	l
c0113d16	obj/kernel.asm	/^c0113d16:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113d19	obj/kernel.asm	/^c0113d19:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113d1c	obj/kernel.asm	/^c0113d1c:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113d1f	obj/kernel.asm	/^c0113d1f:	6a 20                	push   $0x20$/;"	l
c0113d21	obj/kernel.asm	/^c0113d21:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113d24	obj/kernel.asm	/^c0113d24:	ff d0                	call   *%eax$/;"	l
c0113d26	obj/kernel.asm	/^c0113d26:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113d29	obj/kernel.asm	/^c0113d29:	83 6d e8 01          	subl   $0x1,-0x18(%ebp)$/;"	l
c0113d2d	obj/kernel.asm	/^c0113d2d:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0113d31	obj/kernel.asm	/^c0113d31:	7f e3                	jg     c0113d16 <vprintfmt+0x247>$/;"	l
c0113d33	obj/kernel.asm	/^c0113d33:	e9 60 01 00 00       	jmp    c0113e98 <vprintfmt+0x3c9>$/;"	l
c0113d38	obj/kernel.asm	/^c0113d38:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0113d3b	obj/kernel.asm	/^c0113d3b:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0113d3e	obj/kernel.asm	/^c0113d3e:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0113d41	obj/kernel.asm	/^c0113d41:	50                   	push   %eax$/;"	l
c0113d42	obj/kernel.asm	/^c0113d42:	e8 18 fd ff ff       	call   c0113a5f <getint>$/;"	l
c0113d47	obj/kernel.asm	/^c0113d47:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113d4a	obj/kernel.asm	/^c0113d4a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113d4d	obj/kernel.asm	/^c0113d4d:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0113d50	obj/kernel.asm	/^c0113d50:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113d53	obj/kernel.asm	/^c0113d53:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0113d56	obj/kernel.asm	/^c0113d56:	85 d2                	test   %edx,%edx$/;"	l
c0113d58	obj/kernel.asm	/^c0113d58:	79 26                	jns    c0113d80 <vprintfmt+0x2b1>$/;"	l
c0113d5a	obj/kernel.asm	/^c0113d5a:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113d5d	obj/kernel.asm	/^c0113d5d:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113d60	obj/kernel.asm	/^c0113d60:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113d63	obj/kernel.asm	/^c0113d63:	6a 2d                	push   $0x2d$/;"	l
c0113d65	obj/kernel.asm	/^c0113d65:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113d68	obj/kernel.asm	/^c0113d68:	ff d0                	call   *%eax$/;"	l
c0113d6a	obj/kernel.asm	/^c0113d6a:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113d6d	obj/kernel.asm	/^c0113d6d:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113d70	obj/kernel.asm	/^c0113d70:	8b 55 f4             	mov    -0xc(%ebp),%edx$/;"	l
c0113d73	obj/kernel.asm	/^c0113d73:	f7 d8                	neg    %eax$/;"	l
c0113d75	obj/kernel.asm	/^c0113d75:	83 d2 00             	adc    $0x0,%edx$/;"	l
c0113d78	obj/kernel.asm	/^c0113d78:	f7 da                	neg    %edx$/;"	l
c0113d7a	obj/kernel.asm	/^c0113d7a:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113d7d	obj/kernel.asm	/^c0113d7d:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0113d80	obj/kernel.asm	/^c0113d80:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c0113d87	obj/kernel.asm	/^c0113d87:	e9 a8 00 00 00       	jmp    c0113e34 <vprintfmt+0x365>$/;"	l
c0113d8c	obj/kernel.asm	/^c0113d8c:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0113d8f	obj/kernel.asm	/^c0113d8f:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0113d92	obj/kernel.asm	/^c0113d92:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0113d95	obj/kernel.asm	/^c0113d95:	50                   	push   %eax$/;"	l
c0113d96	obj/kernel.asm	/^c0113d96:	e8 75 fc ff ff       	call   c0113a10 <getuint>$/;"	l
c0113d9b	obj/kernel.asm	/^c0113d9b:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113d9e	obj/kernel.asm	/^c0113d9e:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113da1	obj/kernel.asm	/^c0113da1:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0113da4	obj/kernel.asm	/^c0113da4:	c7 45 ec 0a 00 00 00 	movl   $0xa,-0x14(%ebp)$/;"	l
c0113dab	obj/kernel.asm	/^c0113dab:	e9 84 00 00 00       	jmp    c0113e34 <vprintfmt+0x365>$/;"	l
c0113db0	obj/kernel.asm	/^c0113db0:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0113db3	obj/kernel.asm	/^c0113db3:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0113db6	obj/kernel.asm	/^c0113db6:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0113db9	obj/kernel.asm	/^c0113db9:	50                   	push   %eax$/;"	l
c0113dba	obj/kernel.asm	/^c0113dba:	e8 51 fc ff ff       	call   c0113a10 <getuint>$/;"	l
c0113dbf	obj/kernel.asm	/^c0113dbf:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113dc2	obj/kernel.asm	/^c0113dc2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113dc5	obj/kernel.asm	/^c0113dc5:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0113dc8	obj/kernel.asm	/^c0113dc8:	c7 45 ec 08 00 00 00 	movl   $0x8,-0x14(%ebp)$/;"	l
c0113dcf	obj/kernel.asm	/^c0113dcf:	eb 63                	jmp    c0113e34 <vprintfmt+0x365>$/;"	l
c0113dd1	obj/kernel.asm	/^c0113dd1:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113dd4	obj/kernel.asm	/^c0113dd4:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113dd7	obj/kernel.asm	/^c0113dd7:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113dda	obj/kernel.asm	/^c0113dda:	6a 30                	push   $0x30$/;"	l
c0113ddc	obj/kernel.asm	/^c0113ddc:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113ddf	obj/kernel.asm	/^c0113ddf:	ff d0                	call   *%eax$/;"	l
c0113de1	obj/kernel.asm	/^c0113de1:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113de4	obj/kernel.asm	/^c0113de4:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113de7	obj/kernel.asm	/^c0113de7:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113dea	obj/kernel.asm	/^c0113dea:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113ded	obj/kernel.asm	/^c0113ded:	6a 78                	push   $0x78$/;"	l
c0113def	obj/kernel.asm	/^c0113def:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113df2	obj/kernel.asm	/^c0113df2:	ff d0                	call   *%eax$/;"	l
c0113df4	obj/kernel.asm	/^c0113df4:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113df7	obj/kernel.asm	/^c0113df7:	8b 45 18             	mov    0x18(%ebp),%eax$/;"	l
c0113dfa	obj/kernel.asm	/^c0113dfa:	8d 50 04             	lea    0x4(%eax),%edx$/;"	l
c0113dfd	obj/kernel.asm	/^c0113dfd:	89 55 18             	mov    %edx,0x18(%ebp)$/;"	l
c0113e00	obj/kernel.asm	/^c0113e00:	8b 00                	mov    (%eax),%eax$/;"	l
c0113e02	obj/kernel.asm	/^c0113e02:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113e05	obj/kernel.asm	/^c0113e05:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0113e0c	obj/kernel.asm	/^c0113e0c:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c0113e13	obj/kernel.asm	/^c0113e13:	eb 1f                	jmp    c0113e34 <vprintfmt+0x365>$/;"	l
c0113e15	obj/kernel.asm	/^c0113e15:	83 ec 08             	sub    $0x8,%esp$/;"	l
c0113e18	obj/kernel.asm	/^c0113e18:	ff 75 e0             	pushl  -0x20(%ebp)$/;"	l
c0113e1b	obj/kernel.asm	/^c0113e1b:	8d 45 18             	lea    0x18(%ebp),%eax$/;"	l
c0113e1e	obj/kernel.asm	/^c0113e1e:	50                   	push   %eax$/;"	l
c0113e1f	obj/kernel.asm	/^c0113e1f:	e8 ec fb ff ff       	call   c0113a10 <getuint>$/;"	l
c0113e24	obj/kernel.asm	/^c0113e24:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113e27	obj/kernel.asm	/^c0113e27:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113e2a	obj/kernel.asm	/^c0113e2a:	89 55 f4             	mov    %edx,-0xc(%ebp)$/;"	l
c0113e2d	obj/kernel.asm	/^c0113e2d:	c7 45 ec 10 00 00 00 	movl   $0x10,-0x14(%ebp)$/;"	l
c0113e34	obj/kernel.asm	/^c0113e34:	0f be 55 db          	movsbl -0x25(%ebp),%edx$/;"	l
c0113e38	obj/kernel.asm	/^c0113e38:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113e3b	obj/kernel.asm	/^c0113e3b:	52                   	push   %edx$/;"	l
c0113e3c	obj/kernel.asm	/^c0113e3c:	ff 75 e8             	pushl  -0x18(%ebp)$/;"	l
c0113e3f	obj/kernel.asm	/^c0113e3f:	50                   	push   %eax$/;"	l
c0113e40	obj/kernel.asm	/^c0113e40:	ff 75 f4             	pushl  -0xc(%ebp)$/;"	l
c0113e43	obj/kernel.asm	/^c0113e43:	ff 75 f0             	pushl  -0x10(%ebp)$/;"	l
c0113e46	obj/kernel.asm	/^c0113e46:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113e49	obj/kernel.asm	/^c0113e49:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113e4c	obj/kernel.asm	/^c0113e4c:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113e4f	obj/kernel.asm	/^c0113e4f:	e8 c6 fa ff ff       	call   c011391a <printnum>$/;"	l
c0113e54	obj/kernel.asm	/^c0113e54:	83 c4 20             	add    $0x20,%esp$/;"	l
c0113e57	obj/kernel.asm	/^c0113e57:	eb 3f                	jmp    c0113e98 <vprintfmt+0x3c9>$/;"	l
c0113e59	obj/kernel.asm	/^c0113e59:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113e5c	obj/kernel.asm	/^c0113e5c:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113e5f	obj/kernel.asm	/^c0113e5f:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113e62	obj/kernel.asm	/^c0113e62:	53                   	push   %ebx$/;"	l
c0113e63	obj/kernel.asm	/^c0113e63:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113e66	obj/kernel.asm	/^c0113e66:	ff d0                	call   *%eax$/;"	l
c0113e68	obj/kernel.asm	/^c0113e68:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113e6b	obj/kernel.asm	/^c0113e6b:	eb 2b                	jmp    c0113e98 <vprintfmt+0x3c9>$/;"	l
c0113e6d	obj/kernel.asm	/^c0113e6d:	83 ec 04             	sub    $0x4,%esp$/;"	l
c0113e70	obj/kernel.asm	/^c0113e70:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113e73	obj/kernel.asm	/^c0113e73:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113e76	obj/kernel.asm	/^c0113e76:	6a 25                	push   $0x25$/;"	l
c0113e78	obj/kernel.asm	/^c0113e78:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113e7b	obj/kernel.asm	/^c0113e7b:	ff d0                	call   *%eax$/;"	l
c0113e7d	obj/kernel.asm	/^c0113e7d:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113e80	obj/kernel.asm	/^c0113e80:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0113e84	obj/kernel.asm	/^c0113e84:	eb 04                	jmp    c0113e8a <vprintfmt+0x3bb>$/;"	l
c0113e86	obj/kernel.asm	/^c0113e86:	83 6d 14 01          	subl   $0x1,0x14(%ebp)$/;"	l
c0113e8a	obj/kernel.asm	/^c0113e8a:	8b 45 14             	mov    0x14(%ebp),%eax$/;"	l
c0113e8d	obj/kernel.asm	/^c0113e8d:	83 e8 01             	sub    $0x1,%eax$/;"	l
c0113e90	obj/kernel.asm	/^c0113e90:	0f b6 00             	movzbl (%eax),%eax$/;"	l
c0113e93	obj/kernel.asm	/^c0113e93:	3c 25                	cmp    $0x25,%al$/;"	l
c0113e95	obj/kernel.asm	/^c0113e95:	75 ef                	jne    c0113e86 <vprintfmt+0x3b7>$/;"	l
c0113e97	obj/kernel.asm	/^c0113e97:	90                   	nop$/;"	l
c0113e98	obj/kernel.asm	/^c0113e98:	e9 3a fc ff ff       	jmp    c0113ad7 <vprintfmt+0x8>$/;"	l
c0113e9d	obj/kernel.asm	/^c0113e9d:	8d 65 f8             	lea    -0x8(%ebp),%esp$/;"	l
c0113ea0	obj/kernel.asm	/^c0113ea0:	5b                   	pop    %ebx$/;"	l
c0113ea1	obj/kernel.asm	/^c0113ea1:	5e                   	pop    %esi$/;"	l
c0113ea2	obj/kernel.asm	/^c0113ea2:	5d                   	pop    %ebp$/;"	l
c0113ea3	obj/kernel.asm	/^c0113ea3:	c3                   	ret    $/;"	l
c0113ea4	obj/kernel.asm	/^c0113ea4 <sprintputch>:$/;"	l
c0113ea4	obj/kernel.asm	/^c0113ea4:	55                   	push   %ebp$/;"	l
c0113ea5	obj/kernel.asm	/^c0113ea5:	89 e5                	mov    %esp,%ebp$/;"	l
c0113ea7	obj/kernel.asm	/^c0113ea7:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113eaa	obj/kernel.asm	/^c0113eaa:	8b 40 08             	mov    0x8(%eax),%eax$/;"	l
c0113ead	obj/kernel.asm	/^c0113ead:	8d 50 01             	lea    0x1(%eax),%edx$/;"	l
c0113eb0	obj/kernel.asm	/^c0113eb0:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113eb3	obj/kernel.asm	/^c0113eb3:	89 50 08             	mov    %edx,0x8(%eax)$/;"	l
c0113eb6	obj/kernel.asm	/^c0113eb6:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113eb9	obj/kernel.asm	/^c0113eb9:	8b 10                	mov    (%eax),%edx$/;"	l
c0113ebb	obj/kernel.asm	/^c0113ebb:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113ebe	obj/kernel.asm	/^c0113ebe:	8b 40 04             	mov    0x4(%eax),%eax$/;"	l
c0113ec1	obj/kernel.asm	/^c0113ec1:	39 c2                	cmp    %eax,%edx$/;"	l
c0113ec3	obj/kernel.asm	/^c0113ec3:	73 12                	jae    c0113ed7 <sprintputch+0x33>$/;"	l
c0113ec5	obj/kernel.asm	/^c0113ec5:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113ec8	obj/kernel.asm	/^c0113ec8:	8b 00                	mov    (%eax),%eax$/;"	l
c0113eca	obj/kernel.asm	/^c0113eca:	8d 48 01             	lea    0x1(%eax),%ecx$/;"	l
c0113ecd	obj/kernel.asm	/^c0113ecd:	8b 55 0c             	mov    0xc(%ebp),%edx$/;"	l
c0113ed0	obj/kernel.asm	/^c0113ed0:	89 0a                	mov    %ecx,(%edx)$/;"	l
c0113ed2	obj/kernel.asm	/^c0113ed2:	8b 55 08             	mov    0x8(%ebp),%edx$/;"	l
c0113ed5	obj/kernel.asm	/^c0113ed5:	88 10                	mov    %dl,(%eax)$/;"	l
c0113ed7	obj/kernel.asm	/^c0113ed7:	5d                   	pop    %ebp$/;"	l
c0113ed8	obj/kernel.asm	/^c0113ed8:	c3                   	ret    $/;"	l
c0113ed9	obj/kernel.asm	/^c0113ed9 <snprintf>:$/;"	l
c0113ed9	obj/kernel.asm	/^c0113ed9:	55                   	push   %ebp$/;"	l
c0113eda	obj/kernel.asm	/^c0113eda:	89 e5                	mov    %esp,%ebp$/;"	l
c0113edc	obj/kernel.asm	/^c0113edc:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0113edf	obj/kernel.asm	/^c0113edf:	8d 45 14             	lea    0x14(%ebp),%eax$/;"	l
c0113ee2	obj/kernel.asm	/^c0113ee2:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113ee5	obj/kernel.asm	/^c0113ee5:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113ee8	obj/kernel.asm	/^c0113ee8:	50                   	push   %eax$/;"	l
c0113ee9	obj/kernel.asm	/^c0113ee9:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113eec	obj/kernel.asm	/^c0113eec:	ff 75 0c             	pushl  0xc(%ebp)$/;"	l
c0113eef	obj/kernel.asm	/^c0113eef:	ff 75 08             	pushl  0x8(%ebp)$/;"	l
c0113ef2	obj/kernel.asm	/^c0113ef2:	e8 0b 00 00 00       	call   c0113f02 <vsnprintf>$/;"	l
c0113ef7	obj/kernel.asm	/^c0113ef7:	83 c4 10             	add    $0x10,%esp$/;"	l
c0113efa	obj/kernel.asm	/^c0113efa:	89 45 f4             	mov    %eax,-0xc(%ebp)$/;"	l
c0113efd	obj/kernel.asm	/^c0113efd:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113f00	obj/kernel.asm	/^c0113f00:	c9                   	leave  $/;"	l
c0113f01	obj/kernel.asm	/^c0113f01:	c3                   	ret    $/;"	l
c0113f02	obj/kernel.asm	/^c0113f02 <vsnprintf>:$/;"	l
c0113f02	obj/kernel.asm	/^c0113f02:	55                   	push   %ebp$/;"	l
c0113f03	obj/kernel.asm	/^c0113f03:	89 e5                	mov    %esp,%ebp$/;"	l
c0113f05	obj/kernel.asm	/^c0113f05:	83 ec 18             	sub    $0x18,%esp$/;"	l
c0113f08	obj/kernel.asm	/^c0113f08:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113f0b	obj/kernel.asm	/^c0113f0b:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0113f0e	obj/kernel.asm	/^c0113f0e:	8b 45 0c             	mov    0xc(%ebp),%eax$/;"	l
c0113f11	obj/kernel.asm	/^c0113f11:	8d 50 ff             	lea    -0x1(%eax),%edx$/;"	l
c0113f14	obj/kernel.asm	/^c0113f14:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113f17	obj/kernel.asm	/^c0113f17:	01 d0                	add    %edx,%eax$/;"	l
c0113f19	obj/kernel.asm	/^c0113f19:	89 45 f0             	mov    %eax,-0x10(%ebp)$/;"	l
c0113f1c	obj/kernel.asm	/^c0113f1c:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)$/;"	l
c0113f23	obj/kernel.asm	/^c0113f23:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)$/;"	l
c0113f27	obj/kernel.asm	/^c0113f27:	74 0a                	je     c0113f33 <vsnprintf+0x31>$/;"	l
c0113f29	obj/kernel.asm	/^c0113f29:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0113f2c	obj/kernel.asm	/^c0113f2c:	8b 45 f0             	mov    -0x10(%ebp),%eax$/;"	l
c0113f2f	obj/kernel.asm	/^c0113f2f:	39 c2                	cmp    %eax,%edx$/;"	l
c0113f31	obj/kernel.asm	/^c0113f31:	76 07                	jbe    c0113f3a <vsnprintf+0x38>$/;"	l
c0113f33	obj/kernel.asm	/^c0113f33:	b8 fd ff ff ff       	mov    $0xfffffffd,%eax$/;"	l
c0113f38	obj/kernel.asm	/^c0113f38:	eb 28                	jmp    c0113f62 <vsnprintf+0x60>$/;"	l
c0113f3a	obj/kernel.asm	/^c0113f3a:	83 ec 0c             	sub    $0xc,%esp$/;"	l
c0113f3d	obj/kernel.asm	/^c0113f3d:	ff 75 14             	pushl  0x14(%ebp)$/;"	l
c0113f40	obj/kernel.asm	/^c0113f40:	ff 75 10             	pushl  0x10(%ebp)$/;"	l
c0113f43	obj/kernel.asm	/^c0113f43:	8d 45 ec             	lea    -0x14(%ebp),%eax$/;"	l
c0113f46	obj/kernel.asm	/^c0113f46:	50                   	push   %eax$/;"	l
c0113f47	obj/kernel.asm	/^c0113f47:	68 d9 6a ff ff       	push   $0xffff6ad9$/;"	l
c0113f4c	obj/kernel.asm	/^c0113f4c:	68 a4 3e 11 c0       	push   $0xc0113ea4$/;"	l
c0113f51	obj/kernel.asm	/^c0113f51:	e8 79 fb ff ff       	call   c0113acf <vprintfmt>$/;"	l
c0113f56	obj/kernel.asm	/^c0113f56:	83 c4 20             	add    $0x20,%esp$/;"	l
c0113f59	obj/kernel.asm	/^c0113f59:	8b 45 ec             	mov    -0x14(%ebp),%eax$/;"	l
c0113f5c	obj/kernel.asm	/^c0113f5c:	c6 00 00             	movb   $0x0,(%eax)$/;"	l
c0113f5f	obj/kernel.asm	/^c0113f5f:	8b 45 f4             	mov    -0xc(%ebp),%eax$/;"	l
c0113f62	obj/kernel.asm	/^c0113f62:	c9                   	leave  $/;"	l
c0113f63	obj/kernel.asm	/^c0113f63:	c3                   	ret    $/;"	l
c0113f64	obj/kernel.asm	/^c0113f64 <hash32>:$/;"	l
c0113f64	obj/kernel.asm	/^c0113f64:	55                   	push   %ebp$/;"	l
c0113f65	obj/kernel.asm	/^c0113f65:	89 e5                	mov    %esp,%ebp$/;"	l
c0113f67	obj/kernel.asm	/^c0113f67:	83 ec 10             	sub    $0x10,%esp$/;"	l
c0113f6a	obj/kernel.asm	/^c0113f6a:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c0113f6d	obj/kernel.asm	/^c0113f6d:	69 c0 01 00 37 9e    	imul   $0x9e370001,%eax,%eax$/;"	l
c0113f73	obj/kernel.asm	/^c0113f73:	89 45 fc             	mov    %eax,-0x4(%ebp)$/;"	l
c0113f76	obj/kernel.asm	/^c0113f76:	b8 20 00 00 00       	mov    $0x20,%eax$/;"	l
c0113f7b	obj/kernel.asm	/^c0113f7b:	2b 45 0c             	sub    0xc(%ebp),%eax$/;"	l
c0113f7e	obj/kernel.asm	/^c0113f7e:	89 c2                	mov    %eax,%edx$/;"	l
c0113f80	obj/kernel.asm	/^c0113f80:	8b 45 fc             	mov    -0x4(%ebp),%eax$/;"	l
c0113f83	obj/kernel.asm	/^c0113f83:	89 d1                	mov    %edx,%ecx$/;"	l
c0113f85	obj/kernel.asm	/^c0113f85:	d3 e8                	shr    %cl,%eax$/;"	d
c0113f87	obj/kernel.asm	/^c0113f87:	c9                   	leave  $/;"	l
c0113f88	obj/kernel.asm	/^c0113f88:	c3                   	ret    $/;"	l
c0113f89	obj/kernel.asm	/^c0113f89 <rand>:$/;"	l
c0113f89	obj/kernel.asm	/^c0113f89:	55                   	push   %ebp$/;"	l
c0113f8a	obj/kernel.asm	/^c0113f8a:	89 e5                	mov    %esp,%ebp$/;"	l
c0113f8c	obj/kernel.asm	/^c0113f8c:	57                   	push   %edi$/;"	l
c0113f8d	obj/kernel.asm	/^c0113f8d:	56                   	push   %esi$/;"	l
c0113f8e	obj/kernel.asm	/^c0113f8e:	53                   	push   %ebx$/;"	l
c0113f8f	obj/kernel.asm	/^c0113f8f:	83 ec 24             	sub    $0x24,%esp$/;"	l
c0113f92	obj/kernel.asm	/^c0113f92:	a1 48 df 14 c0       	mov    0xc014df48,%eax$/;"	l
c0113f97	obj/kernel.asm	/^c0113f97:	8b 15 4c df 14 c0    	mov    0xc014df4c,%edx$/;"	l
c0113f9d	obj/kernel.asm	/^c0113f9d:	69 fa 6d e6 ec de    	imul   $0xdeece66d,%edx,%edi$/;"	l
c0113fa3	obj/kernel.asm	/^c0113fa3:	6b f0 05             	imul   $0x5,%eax,%esi$/;"	l
c0113fa6	obj/kernel.asm	/^c0113fa6:	01 fe                	add    %edi,%esi$/;"	l
c0113fa8	obj/kernel.asm	/^c0113fa8:	bf 6d e6 ec de       	mov    $0xdeece66d,%edi$/;"	l
c0113fad	obj/kernel.asm	/^c0113fad:	f7 e7                	mul    %edi$/;"	l
c0113faf	obj/kernel.asm	/^c0113faf:	01 d6                	add    %edx,%esi$/;"	l
c0113fb1	obj/kernel.asm	/^c0113fb1:	89 f2                	mov    %esi,%edx$/;"	l
c0113fb3	obj/kernel.asm	/^c0113fb3:	83 c0 0b             	add    $0xb,%eax$/;"	l
c0113fb6	obj/kernel.asm	/^c0113fb6:	83 d2 00             	adc    $0x0,%edx$/;"	l
c0113fb9	obj/kernel.asm	/^c0113fb9:	89 c7                	mov    %eax,%edi$/;"	l
c0113fbb	obj/kernel.asm	/^c0113fbb:	83 e7 ff             	and    $0xffffffff,%edi$/;"	l
c0113fbe	obj/kernel.asm	/^c0113fbe:	89 f9                	mov    %edi,%ecx$/;"	l
c0113fc0	obj/kernel.asm	/^c0113fc0:	0f b7 da             	movzwl %dx,%ebx$/;"	l
c0113fc3	obj/kernel.asm	/^c0113fc3:	89 0d 48 df 14 c0    	mov    %ecx,0xc014df48$/;"	l
c0113fc9	obj/kernel.asm	/^c0113fc9:	89 1d 4c df 14 c0    	mov    %ebx,0xc014df4c$/;"	l
c0113fcf	obj/kernel.asm	/^c0113fcf:	a1 48 df 14 c0       	mov    0xc014df48,%eax$/;"	l
c0113fd4	obj/kernel.asm	/^c0113fd4:	8b 15 4c df 14 c0    	mov    0xc014df4c,%edx$/;"	l
c0113fda	obj/kernel.asm	/^c0113fda:	0f ac d0 0c          	shrd   $0xc,%edx,%eax$/;"	l
c0113fde	obj/kernel.asm	/^c0113fde:	c1 ea 0c             	shr    $0xc,%edx$/;"	l
c0113fe1	obj/kernel.asm	/^c0113fe1:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c0113fe4	obj/kernel.asm	/^c0113fe4:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c0113fe7	obj/kernel.asm	/^c0113fe7:	c7 45 dc 00 00 00 80 	movl   $0x80000000,-0x24(%ebp)$/;"	l
c0113fee	obj/kernel.asm	/^c0113fee:	8b 45 e0             	mov    -0x20(%ebp),%eax$/;"	l
c0113ff1	obj/kernel.asm	/^c0113ff1:	8b 55 e4             	mov    -0x1c(%ebp),%edx$/;"	l
c0113ff4	obj/kernel.asm	/^c0113ff4:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c0113ff7	obj/kernel.asm	/^c0113ff7:	89 55 e8             	mov    %edx,-0x18(%ebp)$/;"	l
c0113ffa	obj/kernel.asm	/^c0113ffa:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0113ffd	obj/kernel.asm	/^c0113ffd:	89 45 ec             	mov    %eax,-0x14(%ebp)$/;"	l
c0114000	obj/kernel.asm	/^c0114000:	83 7d e8 00          	cmpl   $0x0,-0x18(%ebp)$/;"	l
c0114004	obj/kernel.asm	/^c0114004:	74 1c                	je     c0114022 <rand+0x99>$/;"	l
c0114006	obj/kernel.asm	/^c0114006:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114009	obj/kernel.asm	/^c0114009:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c011400e	obj/kernel.asm	/^c011400e:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c0114011	obj/kernel.asm	/^c0114011:	89 55 ec             	mov    %edx,-0x14(%ebp)$/;"	l
c0114014	obj/kernel.asm	/^c0114014:	8b 45 e8             	mov    -0x18(%ebp),%eax$/;"	l
c0114017	obj/kernel.asm	/^c0114017:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c011401c	obj/kernel.asm	/^c011401c:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c011401f	obj/kernel.asm	/^c011401f:	89 45 e8             	mov    %eax,-0x18(%ebp)$/;"	l
c0114022	obj/kernel.asm	/^c0114022:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0114025	obj/kernel.asm	/^c0114025:	8b 55 ec             	mov    -0x14(%ebp),%edx$/;"	l
c0114028	obj/kernel.asm	/^c0114028:	f7 75 dc             	divl   -0x24(%ebp)$/;"	l
c011402b	obj/kernel.asm	/^c011402b:	89 45 d8             	mov    %eax,-0x28(%ebp)$/;"	l
c011402e	obj/kernel.asm	/^c011402e:	89 55 d4             	mov    %edx,-0x2c(%ebp)$/;"	l
c0114031	obj/kernel.asm	/^c0114031:	8b 45 d8             	mov    -0x28(%ebp),%eax$/;"	l
c0114034	obj/kernel.asm	/^c0114034:	8b 55 e8             	mov    -0x18(%ebp),%edx$/;"	l
c0114037	obj/kernel.asm	/^c0114037:	89 45 e0             	mov    %eax,-0x20(%ebp)$/;"	l
c011403a	obj/kernel.asm	/^c011403a:	89 55 e4             	mov    %edx,-0x1c(%ebp)$/;"	l
c011403d	obj/kernel.asm	/^c011403d:	8b 45 d4             	mov    -0x2c(%ebp),%eax$/;"	l
c0114040	obj/kernel.asm	/^c0114040:	83 c4 24             	add    $0x24,%esp$/;"	l
c0114043	obj/kernel.asm	/^c0114043:	5b                   	pop    %ebx$/;"	l
c0114044	obj/kernel.asm	/^c0114044:	5e                   	pop    %esi$/;"	l
c0114045	obj/kernel.asm	/^c0114045:	5f                   	pop    %edi$/;"	l
c0114046	obj/kernel.asm	/^c0114046:	5d                   	pop    %ebp$/;"	l
c0114047	obj/kernel.asm	/^c0114047:	c3                   	ret    $/;"	l
c0114048	obj/kernel.asm	/^c0114048 <srand>:$/;"	l
c0114048	obj/kernel.asm	/^c0114048:	55                   	push   %ebp$/;"	l
c0114049	obj/kernel.asm	/^c0114049:	89 e5                	mov    %esp,%ebp$/;"	l
c011404b	obj/kernel.asm	/^c011404b:	8b 45 08             	mov    0x8(%ebp),%eax$/;"	l
c011404e	obj/kernel.asm	/^c011404e:	ba 00 00 00 00       	mov    $0x0,%edx$/;"	l
c0114053	obj/kernel.asm	/^c0114053:	a3 48 df 14 c0       	mov    %eax,0xc014df48$/;"	l
c0114058	obj/kernel.asm	/^c0114058:	89 15 4c df 14 c0    	mov    %edx,0xc014df4c$/;"	l
c011405e	obj/kernel.asm	/^c011405e:	5d                   	pop    %ebp$/;"	l
c011405f	obj/kernel.asm	/^c011405f:	c3                   	ret    $/;"	l
can_write	obj/kernel.asm	/^        can_write = 1;$/;"	d
ch	obj/kernel.asm	/^                ch = *fmt;$/;"	d
char	obj/kernel.asm	/^char *$/;"	l
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^     check_mm_struct = mm;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = NULL;$/;"	d
check_mm_struct	obj/kernel.asm	/^    check_mm_struct = mm_create();$/;"	d
cnt	obj/kernel.asm	/^    cnt = vcprintf(fmt, ap);$/;"	d
cnt	obj/kernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
cond_signal	obj/kernel.asm	/^cond_signal (condvar_t *cvp) {$/;"	l
cond_wait	obj/kernel.asm	/^cond_wait (condvar_t *cvp) {$/;"	l
const	obj/kernel.asm	/^        const struct userstabdata *usd = (struct userstabdata *)USTAB;$/;"	t
const	obj/kernel.asm	/^    const struct stab *stabs, *stab_end;$/;"	t
const	obj/kernel.asm	/^const char *$/;"	l
cp	obj/kernel.asm	/^        cp = (uint16_t*)(MONO_BUF + KERNBASE);$/;"	d
crt_buf	obj/kernel.asm	/^    crt_buf = (uint16_t*) cp;$/;"	d
crt_pos	obj/kernel.asm	/^    crt_pos = pos;$/;"	d
cur	obj/kernel.asm	/^				cur = aligned;$/;"	d
cur	obj/kernel.asm	/^			cur = (slob_t *)__slob_get_free_page(gfp);$/;"	d
cur	obj/kernel.asm	/^			cur = slobfree;$/;"	d
current	obj/kernel.asm	/^            current = proc;$/;"	d
current	obj/kernel.asm	/^    current = idleproc;$/;"	d
data	obj/kernel.asm	/^        data = (shift & E0ESC ? data : data & 0x7F);$/;"	d
data	obj/kernel.asm	/^    data = inb(KBDATAP);$/;"	d
default	obj/kernel.asm	/^        default:$/;"	l
default	obj/kernel.asm	/^    default: ret = -E_INVAL;$/;"	l
default	obj/kernel.asm	/^    default:$/;"	l
delta	obj/kernel.asm	/^			delta = aligned - cur;$/;"	d
did_init	obj/kernel.asm	/^    did_init = 1;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/kernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
ebp	obj/kernel.asm	/^        ebp = ((uint32_t *)ebp)[0];$/;"	d
eip	obj/kernel.asm	/^        eip = ((uint32_t *)ebp)[1];$/;"	d
end	obj/kernel.asm	/^                end = KMEMSIZE;$/;"	d
end	obj/kernel.asm	/^                end = ROUNDDOWN(end, PGSIZE);$/;"	d
end	obj/kernel.asm	/^        end = ph->p_va + ph->p_filesz;$/;"	d
end	obj/kernel.asm	/^        end = ph->p_va + ph->p_memsz;$/;"	d
endpos	obj/kernel.asm	/^            endpos = din->size;$/;"	d
endpos	obj/kernel.asm	/^        endpos = SFS_MAX_FILE_SIZE;$/;"	d
ent	obj/kernel.asm	/^        ent = din->indirect;$/;"	d
err	obj/kernel.asm	/^                err = -err;$/;"	d
err	obj/kernel.asm	/^            err = va_arg(ap, int);$/;"	d
execve_exit	obj/kernel.asm	/^execve_exit:$/;"	l
extern	obj/kernel.asm	/^         extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^     extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^    extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^extern size_t npage;$/;"	l
extern	obj/kernel.asm	/^extern struct Page *pages;$/;"	t
extern	obj/kernel.asm	/^extern struct mm_struct *check_mm_struct;$/;"	t
extern	obj/kernel.asm	/^extern void vfs_devlist_init(void);$/;"	l
failed	obj/kernel.asm	/^failed:$/;"	l
failed_cleanup	obj/kernel.asm	/^failed_cleanup:$/;"	l
failed_cleanup_din	obj/kernel.asm	/^failed_cleanup_din:$/;"	l
failed_cleanup_freemap	obj/kernel.asm	/^failed_cleanup_freemap:$/;"	l
failed_cleanup_fs	obj/kernel.asm	/^failed_cleanup_fs:$/;"	l
failed_cleanup_hash_list	obj/kernel.asm	/^failed_cleanup_hash_list:$/;"	l
failed_cleanup_name	obj/kernel.asm	/^failed_cleanup_name:$/;"	l
failed_cleanup_sfs_buffer	obj/kernel.asm	/^failed_cleanup_sfs_buffer:$/;"	l
failed_cleanup_vdev	obj/kernel.asm	/^failed_cleanup_vdev:$/;"	l
failed_nomem	obj/kernel.asm	/^failed_nomem:$/;"	l
failed_unlock	obj/kernel.asm	/^failed_unlock:$/;"	l
filesp	obj/kernel.asm	/^        filesp = old_filesp;$/;"	d
fork_out	obj/kernel.asm	/^fork_out:$/;"	l
forkrets	obj/kernel.asm	/^forkrets:$/;"	l
found	obj/kernel.asm	/^                        found = 1;$/;"	d
found	obj/kernel.asm	/^                        found = fsop_get_root(vdev->fs);$/;"	d
found	obj/kernel.asm	/^                        found = vdev->devnode;$/;"	d
found	obj/kernel.asm	/^found:$/;"	l
free_list	obj/kernel.asm	/^     free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^    free_list = free_list_store;$/;"	d
free_list	obj/kernel.asm	/^#define free_list (free_area.free_list)$/;"	d
good_files_struct	obj/kernel.asm	/^good_files_struct:$/;"	l
good_mm	obj/kernel.asm	/^good_mm:$/;"	l
haskid	obj/kernel.asm	/^            haskid = 1;$/;"	d
haskid	obj/kernel.asm	/^    haskid = 0;$/;"	d
initproc	obj/kernel.asm	/^    initproc = find_proc(pid);$/;"	d
inline	obj/kernel.asm	/^inline void $/;"	l
inside	obj/kernel.asm	/^    inside:$/;"	l
int	obj/kernel.asm	/^int dup_files(struct files_struct *to, struct files_struct *from);$/;"	l
int	obj/kernel.asm	/^int file_dup(int fd1, int fd2);$/;"	l
int	obj/kernel.asm	/^int file_mkfifo(const char *name, uint32_t open_flags);$/;"	l
int	obj/kernel.asm	/^int file_pipe(int fd[]);$/;"	l
int	obj/kernel.asm	/^int kern_init(void) __attribute__((noreturn));$/;"	l
int	obj/kernel.asm	/^int philosopher_using_condvar(void * arg) { \/* arg is the No. of philosopher 0~N-1*\/$/;"	l
int	obj/kernel.asm	/^int philosopher_using_semaphore(void * arg) \/* i：哲学家号码，从0到N-1 *\/$/;"	l
int	obj/kernel.asm	/^int state_condvar[N];                            \/\/ the philosopher's state: EATING, HUNGARY, THINKING  $/;"	l
int	obj/kernel.asm	/^int$/;"	l
iobase	obj/kernel.asm	/^        iobase = IO_BASE(ideno);$/;"	d
irq_mask	obj/kernel.asm	/^    irq_mask = mask;$/;"	d
is_panic	obj/kernel.asm	/^    is_panic = 1;$/;"	d
kern_entry	obj/kernel.asm	/^kern_entry:$/;"	l
kernel_thread_entry	obj/kernel.asm	/^kernel_thread_entry:        # void kernel_thread(void)$/;"	l
l	obj/kernel.asm	/^            l = m;$/;"	d
l	obj/kernel.asm	/^            l = true_m + 1;$/;"	d
l	obj/kernel.asm	/^          l = skew_heap_merge(a, b->right, comp);$/;"	d
l	obj/kernel.asm	/^          l = skew_heap_merge(a->right, b, comp);$/;"	d
l	obj/kernel.asm	/^        l = *region_right;$/;"	d
la	obj/kernel.asm	/^    la = ROUNDDOWN(la, PGSIZE);$/;"	d
last_pid	obj/kernel.asm	/^                        last_pid = 1;$/;"	d
last_pid	obj/kernel.asm	/^        last_pid = 1;$/;"	d
le	obj/kernel.asm	/^                le = list_next(le);$/;"	d
le	obj/kernel.asm	/^            le = list_next(le);$/;"	d
le	obj/kernel.asm	/^          le = len;$/;"	d
le	obj/kernel.asm	/^          le = list_next(le);$/;"	d
le	obj/kernel.asm	/^        le = list;$/;"	d
le	obj/kernel.asm	/^        le = list_next(le);$/;"	d
le	obj/kernel.asm	/^        le = list_prev(le);$/;"	d
le	obj/kernel.asm	/^     le = &free_list;$/;"	d
le	obj/kernel.asm	/^    le = &free_list;$/;"	d
le	obj/kernel.asm	/^    le = list_prev(&(base->page_link));$/;"	d
le2timer	obj/kernel.asm	/^#define le2timer(le, member)            \\$/;"	d
le_next	obj/kernel.asm	/^    le_next = list_next(le_prev);$/;"	d
le_prev	obj/kernel.asm	/^            le_prev = le;$/;"	d
len	obj/kernel.asm	/^          len = list_next(le);$/;"	d
lflag	obj/kernel.asm	/^        lflag = altflag = 0;$/;"	d
lline	obj/kernel.asm	/^        lline = lfile;$/;"	d
lline	obj/kernel.asm	/^        lline = lfun;$/;"	d
long	obj/kernel.asm	/^long SYSTEM_READ_TIMER( void ){$/;"	l
long	obj/kernel.asm	/^long$/;"	l
m	obj/kernel.asm	/^		m = slob_alloc(size + SLOB_UNIT, gfp, 0);$/;"	d
max_swap_offset	obj/kernel.asm	/^    max_swap_offset = ide_device_size(SWAP_DEV_NO) \/ (PGSIZE \/ SECTSIZE);$/;"	d
maxpa	obj/kernel.asm	/^                maxpa = end;$/;"	d
maxpa	obj/kernel.asm	/^        maxpa = KMEMSIZE;$/;"	d
mm	obj/kernel.asm	/^        mm = check_mm_struct;$/;"	d
mm	obj/kernel.asm	/^        mm = current->mm;$/;"	d
mm	obj/kernel.asm	/^        mm = oldmm;$/;"	d
monitor_init	obj/kernel.asm	/^monitor_init (monitor_t * mtp, size_t num_cv) {$/;"	l
monitor_t	obj/kernel.asm	/^monitor_t mt, *mtp=&mt;                                    \/\/ mp is mutex semaphore for monitor's procedures$/;"	l
nblks	obj/kernel.asm	/^            nblks = alen \/ DISK0_BLKSIZE;$/;"	d
nblks	obj/kernel.asm	/^            nblks = copied \/ DISK0_BLKSIZE;$/;"	d
nblks	obj/kernel.asm	/^    nblks = din->blocks;$/;"	d
next	obj/kernel.asm	/^            next = idleproc;$/;"	d
next	obj/kernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/kernel.asm	/^    next = seed;$/;"	d
next_safe	obj/kernel.asm	/^                    next_safe = MAX_PID;$/;"	d
next_safe	obj/kernel.asm	/^                next_safe = proc->pid;$/;"	d
next_safe	obj/kernel.asm	/^        next_safe = MAX_PID;$/;"	d
node	obj/kernel.asm	/^            node = info2node(sin, sfs_inode);$/;"	d
node	obj/kernel.asm	/^        node = parent, sin = vop_info(node, sfs_inode);$/;"	d
npage	obj/kernel.asm	/^    npage = maxpa \/ PGSIZE;$/;"	d
nr_free	obj/kernel.asm	/^     nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^     nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = 0;$/;"	d
nr_free	obj/kernel.asm	/^    nr_free = nr_free_store;$/;"	d
nr_free	obj/kernel.asm	/^#define nr_free (free_area.nr_free)$/;"	d
num	obj/kernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/kernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/kernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/kernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/kernel.asm	/^        number:$/;"	l
nvma	obj/kernel.asm	/^        nvma = vma_create(vma->vm_start, vma->vm_end, vma->vm_flags);$/;"	d
off	obj/kernel.asm	/^            off = start + PGSIZE - la, size = PGSIZE - off;$/;"	d
off	obj/kernel.asm	/^            off = start - la, size = PGSIZE - off, la += PGSIZE;$/;"	d
old	obj/kernel.asm	/^        old = bootfs_node, bootfs_node = node;$/;"	d
open_count	obj/kernel.asm	/^    open_count = node->open_count;$/;"	d
out	obj/kernel.asm	/^out:$/;"	l
out_unlock	obj/kernel.asm	/^out_unlock:$/;"	l
p	obj/kernel.asm	/^                p = "(null)";$/;"	d
p	obj/kernel.asm	/^               p = q;$/;"	d
p	obj/kernel.asm	/^        p = le2page(le,page_link);$/;"	d
p	obj/kernel.asm	/^      p = le2page(le, page_link);$/;"	d
p	obj/kernel.asm	/^    p = alloc_page();$/;"	d
p	obj/kernel.asm	/^    p = le2page(le, page_link);$/;"	d
p	obj/kernel.asm	/^    p = le2page(le,page_link) ;$/;"	d
p0	obj/kernel.asm	/^    p0 = p1 = p2 = NULL;$/;"	d
p1	obj/kernel.asm	/^    p1 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = alloc_page();$/;"	d
p2	obj/kernel.asm	/^    p2 = p0 + 1;$/;"	d
p_rpos	obj/kernel.asm	/^    p_rpos = p_wpos = 0;$/;"	d
pa	obj/kernel.asm	/^    pa = ROUNDDOWN(pa, PGSIZE);$/;"	d
padc	obj/kernel.asm	/^            padc = '-';$/;"	d
padc	obj/kernel.asm	/^            padc = '0';$/;"	d
page	obj/kernel.asm	/^              page = pmm_manager->alloc_pages(n);$/;"	d
pages	obj/kernel.asm	/^    pages = (struct Page *)ROUNDUP((void *)end, PGSIZE);$/;"	d
panic_dead	obj/kernel.asm	/^panic_dead:$/;"	l
part	obj/kernel.asm	/^            part = maxn;$/;"	d
part	obj/kernel.asm	/^        part = PGSIZE;$/;"	d
path	obj/kernel.asm	/^    path = argv[0];$/;"	d
pmm_manager	obj/kernel.asm	/^    pmm_manager = &default_pmm_manager;$/;"	d
pos	obj/kernel.asm	/^    pos = inb(addr_6845 + 1) << 8;$/;"	d
precision	obj/kernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/kernel.asm	/^            precision = va_arg(ap, int);$/;"	d
prev	obj/kernel.asm	/^				prev = cur;$/;"	d
prev	obj/kernel.asm	/^	prev = slobfree;$/;"	d
proc	obj/kernel.asm	/^            proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^            proc = le2proc(le, list_link);$/;"	d
proc	obj/kernel.asm	/^        proc = current->cptr;$/;"	d
proc	obj/kernel.asm	/^        proc = current->parent;$/;"	d
proc	obj/kernel.asm	/^        proc = find_proc(pid);$/;"	d
process_precision	obj/kernel.asm	/^        process_precision:$/;"	l
pte_t	obj/kernel.asm	/^pte_t *$/;"	l
ptep	obj/kernel.asm	/^    ptep = &((pte_t *)KADDR(PDE_ADDR(boot_pgdir[0])))[1];$/;"	d
ptr	obj/kernel.asm	/^    ptr = memmove(iob->io_base + 1, ptr, alen);$/;"	d
r	obj/kernel.asm	/^            r = m - 1;$/;"	d
r	obj/kernel.asm	/^          r = a->left;$/;"	d
r	obj/kernel.asm	/^          r = b->left;$/;"	d
readable	obj/kernel.asm	/^        readable = writable = 1;$/;"	d
ref_count	obj/kernel.asm	/^    ref_count = node->ref_count;$/;"	d
relocated	obj/kernel.asm	/^relocated:$/;"	l
repeat	obj/kernel.asm	/^    repeat:$/;"	l
repeat	obj/kernel.asm	/^repeat:$/;"	l
reswitch	obj/kernel.asm	/^    reswitch:$/;"	l
ret	obj/kernel.asm	/^                        ret = -E_NA_DEV;$/;"	d
ret	obj/kernel.asm	/^                        ret = 0, *node_store = found;$/;"	d
ret	obj/kernel.asm	/^                    ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^                ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^                ret = -E_NOTDIR;$/;"	d
ret	obj/kernel.asm	/^                ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^            ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^            ret = -E_INVAL_ELF;$/;"	d
ret	obj/kernel.asm	/^            ret = file_write(fd, buffer, alen, &alen);$/;"	d
ret	obj/kernel.asm	/^            ret = sfs_dirent_findino_nolock(sfs, sin, ino, entry);$/;"	d
ret	obj/kernel.asm	/^            ret = sfs_rwblock_nolock(sfs, sfs->sfs_buffer, blkno, 1, 1);$/;"	d
ret	obj/kernel.asm	/^            ret = vfs_getcwd(iob);$/;"	d
ret	obj/kernel.asm	/^            ret = vop_create(dir, name, excl, &node);$/;"	d
ret	obj/kernel.asm	/^        ret = -E_BUSY;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_INVAL_ELF;$/;"	d
ret	obj/kernel.asm	/^        ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^        ret = dup_mmap(mm, oldmm);$/;"	d
ret	obj/kernel.asm	/^        ret = file_read(fd, buffer, alen, &alen);$/;"	d
ret	obj/kernel.asm	/^        ret = page_insert(to, npage, start, perm);$/;"	d
ret	obj/kernel.asm	/^        ret = pmm_manager->nr_free_pages();$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_dirent_search_nolock(sfs, sin, name, &ino, slot, NULL);$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_io_nolock(sfs, sin, iob->io_base, iob->io_offset, &alen, write);$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_load_inode(sfs, node_store, ino);$/;"	d
ret	obj/kernel.asm	/^        ret = sfs_rwblock_nolock(sfs, sfs->sfs_buffer, SFS_BLKN_SUPER, 1, 0);$/;"	d
ret	obj/kernel.asm	/^        ret = vfs_set_curdir(node);$/;"	d
ret	obj/kernel.asm	/^        ret = vop_lookup(node, path, node_store);$/;"	d
ret	obj/kernel.asm	/^    ret = -E_EXISTS;$/;"	d
ret	obj/kernel.asm	/^    ret = -E_INVAL;$/;"	d
ret	obj/kernel.asm	/^    ret = -E_NOENT;$/;"	d
ret	obj/kernel.asm	/^    ret = -E_NO_MEM;$/;"	d
ret	obj/kernel.asm	/^    ret = 0;$/;"	d
ret	obj/kernel.asm	/^    ret = file_open(path, open_flags);$/;"	d
ret	obj/kernel.asm	/^    ret = iobuf_move(iob, entry->name, sfs_dentry_size, 1, NULL);$/;"	d
ret	obj/kernel.asm	/^    ret = proc->pid;$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_chdir(path);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_link(old_path, new_path);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_lookup(path, &node);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_rename(old_path, new_path);$/;"	d
ret	obj/kernel.asm	/^    ret = vfs_unlink(path);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_fstat(file->node, stat);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_fsync(file->node);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_namefile(node, iob);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_read(file->node, iob);$/;"	d
ret	obj/kernel.asm	/^    ret = vop_write(file->node, iob);$/;"	d
ret	obj/kernel.asm	/^   ret = 0;$/;"	d
rline	obj/kernel.asm	/^        rline = rfile;$/;"	d
rline	obj/kernel.asm	/^        rline = rfun;$/;"	d
rq	obj/kernel.asm	/^    rq = &__rq;$/;"	d
sched_class	obj/kernel.asm	/^    sched_class = &default_sched_class;$/;"	d
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA);$/;"	d
sectors	obj/kernel.asm	/^            sectors = *(unsigned int *)(ident + IDE_IDENT_MAX_LBA_EXT);$/;"	d
semaphore_t	obj/kernel.asm	/^semaphore_t s[N]; \/* 每个哲学家一个信号量 *\/$/;"	l
serial_exists	obj/kernel.asm	/^    serial_exists = (inb(COM1 + COM_LSR) != 0xFF);$/;"	d
set_pvalue	obj/kernel.asm	/^#define set_pvalue(x, v)            do { if ((x) != NULL) { *(x) = (v); } } while (0)$/;"	d
sfs_buf_op	obj/kernel.asm	/^        sfs_buf_op = sfs_rbuf, sfs_block_op = sfs_rblock;$/;"	d
sfs_buf_op	obj/kernel.asm	/^        sfs_buf_op = sfs_wbuf, sfs_block_op = sfs_wblock;$/;"	d
size	obj/kernel.asm	/^        size = (nblks != 0) ? (SFS_BLKSIZE - blkoff) : (endpos - offset);$/;"	d
size	obj/kernel.asm	/^    size = SFS_BLKSIZE;$/;"	d
size_t	obj/kernel.asm	/^size_t$/;"	l
slobfree	obj/kernel.asm	/^			slobfree = prev;$/;"	d
slobfree	obj/kernel.asm	/^	slobfree = cur;$/;"	d
sm	obj/kernel.asm	/^     sm = &swap_manager_fifo;$/;"	d
spin	obj/kernel.asm	/^spin:$/;"	l
src	obj/kernel.asm	/^            src = dst, dst = tmp;$/;"	d
stab_end	obj/kernel.asm	/^        stab_end = __STAB_END__;$/;"	d
stab_end	obj/kernel.asm	/^        stab_end = usd->stab_end;$/;"	d
stabs	obj/kernel.asm	/^        stabs = __STAB_BEGIN__;$/;"	d
stabs	obj/kernel.asm	/^        stabs = usd->stabs;$/;"	d
stabstr	obj/kernel.asm	/^        stabstr = __STABSTR_BEGIN__;$/;"	d
stabstr	obj/kernel.asm	/^        stabstr = usd->stabstr;$/;"	d
stabstr_end	obj/kernel.asm	/^        stabstr_end = __STABSTR_END__;$/;"	d
stabstr_end	obj/kernel.asm	/^        stabstr_end = usd->stabstr_end;$/;"	d
stacktop	obj/kernel.asm	/^    stacktop = (uintptr_t)uargv - sizeof(int);$/;"	d
start	obj/kernel.asm	/^            start = ROUNDDOWN(start + PTSIZE, PTSIZE);$/;"	d
start	obj/kernel.asm	/^            start = vma->vm_end;$/;"	d
start	obj/kernel.asm	/^    start = ROUNDDOWN(start, PTSIZE);$/;"	d
static	obj/kernel.asm	/^static __noinline uint32_t __down(semaphore_t *sem, uint32_t wait_state) {$/;"	l
static	obj/kernel.asm	/^static __noinline uint32_t$/;"	l
static	obj/kernel.asm	/^static __noinline void __up(semaphore_t *sem, uint32_t wait_state) {$/;"	l
static	obj/kernel.asm	/^static bigblock_t *bigblocks;$/;"	l
static	obj/kernel.asm	/^static bool did_init = 0;$/;"	l
static	obj/kernel.asm	/^static bool serial_exists = 0;$/;"	l
static	obj/kernel.asm	/^static bool$/;"	l
static	obj/kernel.asm	/^static char *disk0_buffer;$/;"	l
static	obj/kernel.asm	/^static char stdin_buffer[STDIN_BUFSIZE];$/;"	l
static	obj/kernel.asm	/^static const char *$/;"	l
static	obj/kernel.asm	/^static const struct inode_ops *$/;"	l
static	obj/kernel.asm	/^static inline bool$/;"	l
static	obj/kernel.asm	/^static inline char *$/;"	l
static	obj/kernel.asm	/^static inline int$/;"	l
static	obj/kernel.asm	/^static inline list_entry_t *$/;"	l
static	obj/kernel.asm	/^static inline ppn_t$/;"	l
static	obj/kernel.asm	/^static inline skew_heap_entry_t *$/;"	l
static	obj/kernel.asm	/^static inline struct Page *$/;"	l
static	obj/kernel.asm	/^static inline struct proc_struct *$/;"	l
static	obj/kernel.asm	/^static inline timer_t *$/;"	l
static	obj/kernel.asm	/^static inline uint32_t$/;"	l
static	obj/kernel.asm	/^static inline uint8_t$/;"	l
static	obj/kernel.asm	/^static inline uintptr_t$/;"	l
static	obj/kernel.asm	/^static inline void *$/;"	l
static	obj/kernel.asm	/^static inline void __slob_free_pages(unsigned long kva, int order)$/;"	l
static	obj/kernel.asm	/^static inline void invlpg(void *addr) __attribute__((always_inline));$/;"	l
static	obj/kernel.asm	/^static inline void$/;"	l
static	obj/kernel.asm	/^static int find_order(int size)$/;"	l
static	obj/kernel.asm	/^static int$/;"	l
static	obj/kernel.asm	/^static list_entry_t *$/;"	l
static	obj/kernel.asm	/^static list_entry_t vdev_list;     \/\/ device info list in vfs layer$/;"	l
static	obj/kernel.asm	/^static long long$/;"	l
static	obj/kernel.asm	/^static off_t p_rpos, p_wpos;$/;"	l
static	obj/kernel.asm	/^static semaphore_t disk0_sem;$/;"	l
static	obj/kernel.asm	/^static semaphore_t vdev_list_sem;$/;"	l
static	obj/kernel.asm	/^static size_t$/;"	l
static	obj/kernel.asm	/^static slob_t *slobfree = &arena;$/;"	l
static	obj/kernel.asm	/^static struct Page *$/;"	t
static	obj/kernel.asm	/^static struct file *$/;"	t
static	obj/kernel.asm	/^static struct inode *$/;"	t
static	obj/kernel.asm	/^static struct proc_struct *$/;"	t
static	obj/kernel.asm	/^static struct run_queue *rq;$/;"	t
static	obj/kernel.asm	/^static struct run_queue __rq;$/;"	t
static	obj/kernel.asm	/^static struct sched_class *sched_class;$/;"	t
static	obj/kernel.asm	/^static uint16_t addr_6845;$/;"	l
static	obj/kernel.asm	/^static uint16_t irq_mask = 0xFFFF & ~(1 << IRQ_SLAVE);$/;"	l
static	obj/kernel.asm	/^static uint32_t$/;"	l
static	obj/kernel.asm	/^static unsigned long long$/;"	l
static	obj/kernel.asm	/^static void *$/;"	l
static	obj/kernel.asm	/^static void *__kmalloc(size_t size, gfp_t gfp)$/;"	l
static	obj/kernel.asm	/^static void *slob_alloc(size_t size, gfp_t gfp, int align)$/;"	l
static	obj/kernel.asm	/^static void check_pgfault(void);$/;"	l
static	obj/kernel.asm	/^static void check_swap(void);$/;"	l
static	obj/kernel.asm	/^static void check_vma_struct(void);$/;"	l
static	obj/kernel.asm	/^static void lab1_switch_test(void);$/;"	l
static	obj/kernel.asm	/^static void print_ticks() {$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *b, int size);$/;"	l
static	obj/kernel.asm	/^static void slob_free(void *block, int size)$/;"	l
static	obj/kernel.asm	/^static void$/;"	l
static	obj/kernel.asm	/^static void* __slob_get_free_pages(gfp_t gfp, int order)$/;"	l
static	obj/kernel.asm	/^static volatile int in_swap_tick_event = 0;$/;"	l
static	obj/kernel.asm	/^static wait_queue_t __wait_queue, *wait_queue = &__wait_queue;$/;"	l
swap_init_ok	obj/kernel.asm	/^          swap_init_ok = 1;$/;"	d
switch_to	obj/kernel.asm	/^switch_to:                      # switch_to(from, to)$/;"	l
temp_ptep	obj/kernel.asm	/^     temp_ptep = get_pte(mm->pgdir, BEING_CHECK_VALID_VADDR, 1);$/;"	d
testfd	obj/kernel.asm	/^#define testfd(fd)                          ((fd) >= 0 && (fd) < FILES_STRUCT_NENTRY)$/;"	d
ticks	obj/kernel.asm	/^    ticks = 0;$/;"	d
timer	obj/kernel.asm	/^                timer = le2timer(le, timer_link);$/;"	d
try_again	obj/kernel.asm	/^        try_again:$/;"	l
uint32_t	obj/kernel.asm	/^uint32_t$/;"	l
unsigned	obj/kernel.asm	/^unsigned int ksize(const void *block)$/;"	l
vector0	obj/kernel.asm	/^vector0:$/;"	l
vector1	obj/kernel.asm	/^vector1:$/;"	l
vector10	obj/kernel.asm	/^vector10:$/;"	l
vector100	obj/kernel.asm	/^vector100:$/;"	l
vector101	obj/kernel.asm	/^vector101:$/;"	l
vector102	obj/kernel.asm	/^vector102:$/;"	l
vector103	obj/kernel.asm	/^vector103:$/;"	l
vector104	obj/kernel.asm	/^vector104:$/;"	l
vector105	obj/kernel.asm	/^vector105:$/;"	l
vector106	obj/kernel.asm	/^vector106:$/;"	l
vector107	obj/kernel.asm	/^vector107:$/;"	l
vector108	obj/kernel.asm	/^vector108:$/;"	l
vector109	obj/kernel.asm	/^vector109:$/;"	l
vector11	obj/kernel.asm	/^vector11:$/;"	l
vector110	obj/kernel.asm	/^vector110:$/;"	l
vector111	obj/kernel.asm	/^vector111:$/;"	l
vector112	obj/kernel.asm	/^vector112:$/;"	l
vector113	obj/kernel.asm	/^vector113:$/;"	l
vector114	obj/kernel.asm	/^vector114:$/;"	l
vector115	obj/kernel.asm	/^vector115:$/;"	l
vector116	obj/kernel.asm	/^vector116:$/;"	l
vector117	obj/kernel.asm	/^vector117:$/;"	l
vector118	obj/kernel.asm	/^vector118:$/;"	l
vector119	obj/kernel.asm	/^vector119:$/;"	l
vector12	obj/kernel.asm	/^vector12:$/;"	l
vector120	obj/kernel.asm	/^vector120:$/;"	l
vector121	obj/kernel.asm	/^vector121:$/;"	l
vector122	obj/kernel.asm	/^vector122:$/;"	l
vector123	obj/kernel.asm	/^vector123:$/;"	l
vector124	obj/kernel.asm	/^vector124:$/;"	l
vector125	obj/kernel.asm	/^vector125:$/;"	l
vector126	obj/kernel.asm	/^vector126:$/;"	l
vector127	obj/kernel.asm	/^vector127:$/;"	l
vector128	obj/kernel.asm	/^vector128:$/;"	l
vector129	obj/kernel.asm	/^vector129:$/;"	l
vector13	obj/kernel.asm	/^vector13:$/;"	l
vector130	obj/kernel.asm	/^vector130:$/;"	l
vector131	obj/kernel.asm	/^vector131:$/;"	l
vector132	obj/kernel.asm	/^vector132:$/;"	l
vector133	obj/kernel.asm	/^vector133:$/;"	l
vector134	obj/kernel.asm	/^vector134:$/;"	l
vector135	obj/kernel.asm	/^vector135:$/;"	l
vector136	obj/kernel.asm	/^vector136:$/;"	l
vector137	obj/kernel.asm	/^vector137:$/;"	l
vector138	obj/kernel.asm	/^vector138:$/;"	l
vector139	obj/kernel.asm	/^vector139:$/;"	l
vector14	obj/kernel.asm	/^vector14:$/;"	l
vector140	obj/kernel.asm	/^vector140:$/;"	l
vector141	obj/kernel.asm	/^vector141:$/;"	l
vector142	obj/kernel.asm	/^vector142:$/;"	l
vector143	obj/kernel.asm	/^vector143:$/;"	l
vector144	obj/kernel.asm	/^vector144:$/;"	l
vector145	obj/kernel.asm	/^vector145:$/;"	l
vector146	obj/kernel.asm	/^vector146:$/;"	l
vector147	obj/kernel.asm	/^vector147:$/;"	l
vector148	obj/kernel.asm	/^vector148:$/;"	l
vector149	obj/kernel.asm	/^vector149:$/;"	l
vector15	obj/kernel.asm	/^vector15:$/;"	l
vector150	obj/kernel.asm	/^vector150:$/;"	l
vector151	obj/kernel.asm	/^vector151:$/;"	l
vector152	obj/kernel.asm	/^vector152:$/;"	l
vector153	obj/kernel.asm	/^vector153:$/;"	l
vector154	obj/kernel.asm	/^vector154:$/;"	l
vector155	obj/kernel.asm	/^vector155:$/;"	l
vector156	obj/kernel.asm	/^vector156:$/;"	l
vector157	obj/kernel.asm	/^vector157:$/;"	l
vector158	obj/kernel.asm	/^vector158:$/;"	l
vector159	obj/kernel.asm	/^vector159:$/;"	l
vector16	obj/kernel.asm	/^vector16:$/;"	l
vector160	obj/kernel.asm	/^vector160:$/;"	l
vector161	obj/kernel.asm	/^vector161:$/;"	l
vector162	obj/kernel.asm	/^vector162:$/;"	l
vector163	obj/kernel.asm	/^vector163:$/;"	l
vector164	obj/kernel.asm	/^vector164:$/;"	l
vector165	obj/kernel.asm	/^vector165:$/;"	l
vector166	obj/kernel.asm	/^vector166:$/;"	l
vector167	obj/kernel.asm	/^vector167:$/;"	l
vector168	obj/kernel.asm	/^vector168:$/;"	l
vector169	obj/kernel.asm	/^vector169:$/;"	l
vector17	obj/kernel.asm	/^vector17:$/;"	l
vector170	obj/kernel.asm	/^vector170:$/;"	l
vector171	obj/kernel.asm	/^vector171:$/;"	l
vector172	obj/kernel.asm	/^vector172:$/;"	l
vector173	obj/kernel.asm	/^vector173:$/;"	l
vector174	obj/kernel.asm	/^vector174:$/;"	l
vector175	obj/kernel.asm	/^vector175:$/;"	l
vector176	obj/kernel.asm	/^vector176:$/;"	l
vector177	obj/kernel.asm	/^vector177:$/;"	l
vector178	obj/kernel.asm	/^vector178:$/;"	l
vector179	obj/kernel.asm	/^vector179:$/;"	l
vector18	obj/kernel.asm	/^vector18:$/;"	l
vector180	obj/kernel.asm	/^vector180:$/;"	l
vector181	obj/kernel.asm	/^vector181:$/;"	l
vector182	obj/kernel.asm	/^vector182:$/;"	l
vector183	obj/kernel.asm	/^vector183:$/;"	l
vector184	obj/kernel.asm	/^vector184:$/;"	l
vector185	obj/kernel.asm	/^vector185:$/;"	l
vector186	obj/kernel.asm	/^vector186:$/;"	l
vector187	obj/kernel.asm	/^vector187:$/;"	l
vector188	obj/kernel.asm	/^vector188:$/;"	l
vector189	obj/kernel.asm	/^vector189:$/;"	l
vector19	obj/kernel.asm	/^vector19:$/;"	l
vector190	obj/kernel.asm	/^vector190:$/;"	l
vector191	obj/kernel.asm	/^vector191:$/;"	l
vector192	obj/kernel.asm	/^vector192:$/;"	l
vector193	obj/kernel.asm	/^vector193:$/;"	l
vector194	obj/kernel.asm	/^vector194:$/;"	l
vector195	obj/kernel.asm	/^vector195:$/;"	l
vector196	obj/kernel.asm	/^vector196:$/;"	l
vector197	obj/kernel.asm	/^vector197:$/;"	l
vector198	obj/kernel.asm	/^vector198:$/;"	l
vector199	obj/kernel.asm	/^vector199:$/;"	l
vector2	obj/kernel.asm	/^vector2:$/;"	l
vector20	obj/kernel.asm	/^vector20:$/;"	l
vector200	obj/kernel.asm	/^vector200:$/;"	l
vector201	obj/kernel.asm	/^vector201:$/;"	l
vector202	obj/kernel.asm	/^vector202:$/;"	l
vector203	obj/kernel.asm	/^vector203:$/;"	l
vector204	obj/kernel.asm	/^vector204:$/;"	l
vector205	obj/kernel.asm	/^vector205:$/;"	l
vector206	obj/kernel.asm	/^vector206:$/;"	l
vector207	obj/kernel.asm	/^vector207:$/;"	l
vector208	obj/kernel.asm	/^vector208:$/;"	l
vector209	obj/kernel.asm	/^vector209:$/;"	l
vector21	obj/kernel.asm	/^vector21:$/;"	l
vector210	obj/kernel.asm	/^vector210:$/;"	l
vector211	obj/kernel.asm	/^vector211:$/;"	l
vector212	obj/kernel.asm	/^vector212:$/;"	l
vector213	obj/kernel.asm	/^vector213:$/;"	l
vector214	obj/kernel.asm	/^vector214:$/;"	l
vector215	obj/kernel.asm	/^vector215:$/;"	l
vector216	obj/kernel.asm	/^vector216:$/;"	l
vector217	obj/kernel.asm	/^vector217:$/;"	l
vector218	obj/kernel.asm	/^vector218:$/;"	l
vector219	obj/kernel.asm	/^vector219:$/;"	l
vector22	obj/kernel.asm	/^vector22:$/;"	l
vector220	obj/kernel.asm	/^vector220:$/;"	l
vector221	obj/kernel.asm	/^vector221:$/;"	l
vector222	obj/kernel.asm	/^vector222:$/;"	l
vector223	obj/kernel.asm	/^vector223:$/;"	l
vector224	obj/kernel.asm	/^vector224:$/;"	l
vector225	obj/kernel.asm	/^vector225:$/;"	l
vector226	obj/kernel.asm	/^vector226:$/;"	l
vector227	obj/kernel.asm	/^vector227:$/;"	l
vector228	obj/kernel.asm	/^vector228:$/;"	l
vector229	obj/kernel.asm	/^vector229:$/;"	l
vector23	obj/kernel.asm	/^vector23:$/;"	l
vector230	obj/kernel.asm	/^vector230:$/;"	l
vector231	obj/kernel.asm	/^vector231:$/;"	l
vector232	obj/kernel.asm	/^vector232:$/;"	l
vector233	obj/kernel.asm	/^vector233:$/;"	l
vector234	obj/kernel.asm	/^vector234:$/;"	l
vector235	obj/kernel.asm	/^vector235:$/;"	l
vector236	obj/kernel.asm	/^vector236:$/;"	l
vector237	obj/kernel.asm	/^vector237:$/;"	l
vector238	obj/kernel.asm	/^vector238:$/;"	l
vector239	obj/kernel.asm	/^vector239:$/;"	l
vector24	obj/kernel.asm	/^vector24:$/;"	l
vector240	obj/kernel.asm	/^vector240:$/;"	l
vector241	obj/kernel.asm	/^vector241:$/;"	l
vector242	obj/kernel.asm	/^vector242:$/;"	l
vector243	obj/kernel.asm	/^vector243:$/;"	l
vector244	obj/kernel.asm	/^vector244:$/;"	l
vector245	obj/kernel.asm	/^vector245:$/;"	l
vector246	obj/kernel.asm	/^vector246:$/;"	l
vector247	obj/kernel.asm	/^vector247:$/;"	l
vector248	obj/kernel.asm	/^vector248:$/;"	l
vector249	obj/kernel.asm	/^vector249:$/;"	l
vector25	obj/kernel.asm	/^vector25:$/;"	l
vector250	obj/kernel.asm	/^vector250:$/;"	l
vector251	obj/kernel.asm	/^vector251:$/;"	l
vector252	obj/kernel.asm	/^vector252:$/;"	l
vector253	obj/kernel.asm	/^vector253:$/;"	l
vector254	obj/kernel.asm	/^vector254:$/;"	l
vector255	obj/kernel.asm	/^vector255:$/;"	l
vector26	obj/kernel.asm	/^vector26:$/;"	l
vector27	obj/kernel.asm	/^vector27:$/;"	l
vector28	obj/kernel.asm	/^vector28:$/;"	l
vector29	obj/kernel.asm	/^vector29:$/;"	l
vector3	obj/kernel.asm	/^vector3:$/;"	l
vector30	obj/kernel.asm	/^vector30:$/;"	l
vector31	obj/kernel.asm	/^vector31:$/;"	l
vector32	obj/kernel.asm	/^vector32:$/;"	l
vector33	obj/kernel.asm	/^vector33:$/;"	l
vector34	obj/kernel.asm	/^vector34:$/;"	l
vector35	obj/kernel.asm	/^vector35:$/;"	l
vector36	obj/kernel.asm	/^vector36:$/;"	l
vector37	obj/kernel.asm	/^vector37:$/;"	l
vector38	obj/kernel.asm	/^vector38:$/;"	l
vector39	obj/kernel.asm	/^vector39:$/;"	l
vector4	obj/kernel.asm	/^vector4:$/;"	l
vector40	obj/kernel.asm	/^vector40:$/;"	l
vector41	obj/kernel.asm	/^vector41:$/;"	l
vector42	obj/kernel.asm	/^vector42:$/;"	l
vector43	obj/kernel.asm	/^vector43:$/;"	l
vector44	obj/kernel.asm	/^vector44:$/;"	l
vector45	obj/kernel.asm	/^vector45:$/;"	l
vector46	obj/kernel.asm	/^vector46:$/;"	l
vector47	obj/kernel.asm	/^vector47:$/;"	l
vector48	obj/kernel.asm	/^vector48:$/;"	l
vector49	obj/kernel.asm	/^vector49:$/;"	l
vector5	obj/kernel.asm	/^vector5:$/;"	l
vector50	obj/kernel.asm	/^vector50:$/;"	l
vector51	obj/kernel.asm	/^vector51:$/;"	l
vector52	obj/kernel.asm	/^vector52:$/;"	l
vector53	obj/kernel.asm	/^vector53:$/;"	l
vector54	obj/kernel.asm	/^vector54:$/;"	l
vector55	obj/kernel.asm	/^vector55:$/;"	l
vector56	obj/kernel.asm	/^vector56:$/;"	l
vector57	obj/kernel.asm	/^vector57:$/;"	l
vector58	obj/kernel.asm	/^vector58:$/;"	l
vector59	obj/kernel.asm	/^vector59:$/;"	l
vector6	obj/kernel.asm	/^vector6:$/;"	l
vector60	obj/kernel.asm	/^vector60:$/;"	l
vector61	obj/kernel.asm	/^vector61:$/;"	l
vector62	obj/kernel.asm	/^vector62:$/;"	l
vector63	obj/kernel.asm	/^vector63:$/;"	l
vector64	obj/kernel.asm	/^vector64:$/;"	l
vector65	obj/kernel.asm	/^vector65:$/;"	l
vector66	obj/kernel.asm	/^vector66:$/;"	l
vector67	obj/kernel.asm	/^vector67:$/;"	l
vector68	obj/kernel.asm	/^vector68:$/;"	l
vector69	obj/kernel.asm	/^vector69:$/;"	l
vector7	obj/kernel.asm	/^vector7:$/;"	l
vector70	obj/kernel.asm	/^vector70:$/;"	l
vector71	obj/kernel.asm	/^vector71:$/;"	l
vector72	obj/kernel.asm	/^vector72:$/;"	l
vector73	obj/kernel.asm	/^vector73:$/;"	l
vector74	obj/kernel.asm	/^vector74:$/;"	l
vector75	obj/kernel.asm	/^vector75:$/;"	l
vector76	obj/kernel.asm	/^vector76:$/;"	l
vector77	obj/kernel.asm	/^vector77:$/;"	l
vector78	obj/kernel.asm	/^vector78:$/;"	l
vector79	obj/kernel.asm	/^vector79:$/;"	l
vector8	obj/kernel.asm	/^vector8:$/;"	l
vector80	obj/kernel.asm	/^vector80:$/;"	l
vector81	obj/kernel.asm	/^vector81:$/;"	l
vector82	obj/kernel.asm	/^vector82:$/;"	l
vector83	obj/kernel.asm	/^vector83:$/;"	l
vector84	obj/kernel.asm	/^vector84:$/;"	l
vector85	obj/kernel.asm	/^vector85:$/;"	l
vector86	obj/kernel.asm	/^vector86:$/;"	l
vector87	obj/kernel.asm	/^vector87:$/;"	l
vector88	obj/kernel.asm	/^vector88:$/;"	l
vector89	obj/kernel.asm	/^vector89:$/;"	l
vector9	obj/kernel.asm	/^vector9:$/;"	l
vector90	obj/kernel.asm	/^vector90:$/;"	l
vector91	obj/kernel.asm	/^vector91:$/;"	l
vector92	obj/kernel.asm	/^vector92:$/;"	l
vector93	obj/kernel.asm	/^vector93:$/;"	l
vector94	obj/kernel.asm	/^vector94:$/;"	l
vector95	obj/kernel.asm	/^vector95:$/;"	l
vector96	obj/kernel.asm	/^vector96:$/;"	l
vector97	obj/kernel.asm	/^vector97:$/;"	l
vector98	obj/kernel.asm	/^vector98:$/;"	l
vector99	obj/kernel.asm	/^vector99:$/;"	l
vm_flags	obj/kernel.asm	/^        vm_flags = 0, perm = PTE_U;$/;"	d
vm_flags	obj/kernel.asm	/^    vm_flags = VM_READ | VM_WRITE | VM_STACK;$/;"	d
vma	obj/kernel.asm	/^                    vma = NULL;$/;"	d
vma	obj/kernel.asm	/^                    vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = le2vma(le, list_link);$/;"	d
vma	obj/kernel.asm	/^        vma = mm->mmap_cache;$/;"	d
void	obj/kernel.asm	/^void     $/;"	l
void	obj/kernel.asm	/^void $/;"	l
void	obj/kernel.asm	/^void *$/;"	l
void	obj/kernel.asm	/^void __attribute__((noinline))$/;"	l
void	obj/kernel.asm	/^void check_slab(void) {$/;"	l
void	obj/kernel.asm	/^void check_sync(void){$/;"	l
void	obj/kernel.asm	/^void files_closeall(struct files_struct *filesp);$/;"	l
void	obj/kernel.asm	/^void files_destroy(struct files_struct *filesp);$/;"	l
void	obj/kernel.asm	/^void forkrets(struct trapframe *tf);$/;"	l
void	obj/kernel.asm	/^void kfree(void *block)$/;"	l
void	obj/kernel.asm	/^void phi_put_forks_condvar(int i) {$/;"	l
void	obj/kernel.asm	/^void phi_put_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	l
void	obj/kernel.asm	/^void phi_take_forks_condvar(int i) {$/;"	l
void	obj/kernel.asm	/^void phi_take_forks_sema(int i) \/* i：哲学家号码从0到N-1 *\/$/;"	l
void	obj/kernel.asm	/^void phi_test_condvar (i) { $/;"	l
void	obj/kernel.asm	/^void phi_test_sema(i) \/* i：哲学家号码从0到N-1 *\/$/;"	l
void	obj/kernel.asm	/^void switch_to(struct context *from, struct context *to);$/;"	l
void	obj/kernel.asm	/^void$/;"	l
volatile	obj/kernel.asm	/^volatile size_t ticks;$/;"	l
volatile	obj/kernel.asm	/^volatile unsigned int swap_out_num=0;$/;"	l
vop_open_dec	obj/kernel.asm	/^#define vop_open_dec(node)                                          inode_open_dec(node)$/;"	d
vop_open_inc	obj/kernel.asm	/^#define vop_open_inc(node)                                          inode_open_inc(node)$/;"	d
wait_t	obj/kernel.asm	/^wait_t *$/;"	l
width	obj/kernel.asm	/^                width = 0;$/;"	d
width	obj/kernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/kernel.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/badarg.asm	/^DIR *$/;"	l
DIR	obj/user/badarg.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/badarg.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/badarg.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badarg.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badarg.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/badarg.asm	/^_start:$/;"	l
altflag	obj/user/badarg.asm	/^            altflag = 1;$/;"	d
base	obj/user/badarg.asm	/^            base = 10;$/;"	d
base	obj/user/badarg.asm	/^            base = 16;$/;"	d
base	obj/user/badarg.asm	/^            base = 8;$/;"	d
base	obj/user/badarg.asm	/^        base = 10;$/;"	d
ch	obj/user/badarg.asm	/^                ch = *fmt;$/;"	d
char	obj/user/badarg.asm	/^char *$/;"	l
cnt	obj/user/badarg.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/badarg.asm	/^        default:$/;"	l
dig	obj/user/badarg.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badarg.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/badarg.asm	/^                err = -err;$/;"	d
err	obj/user/badarg.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/badarg.asm	/^failed:$/;"	l
int	obj/user/badarg.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/badarg.asm	/^int$/;"	l
lflag	obj/user/badarg.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/badarg.asm	/^long$/;"	l
next	obj/user/badarg.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badarg.asm	/^    next = seed;$/;"	d
num	obj/user/badarg.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badarg.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badarg.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badarg.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/badarg.asm	/^        number:$/;"	l
p	obj/user/badarg.asm	/^                p = "(null)";$/;"	d
padc	obj/user/badarg.asm	/^            padc = '-';$/;"	d
padc	obj/user/badarg.asm	/^            padc = '0';$/;"	d
precision	obj/user/badarg.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badarg.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/badarg.asm	/^        process_precision:$/;"	l
reswitch	obj/user/badarg.asm	/^    reswitch:$/;"	l
ret	obj/user/badarg.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/badarg.asm	/^size_t$/;"	l
static	obj/user/badarg.asm	/^static char$/;"	l
static	obj/user/badarg.asm	/^static inline bool$/;"	l
static	obj/user/badarg.asm	/^static inline char *$/;"	l
static	obj/user/badarg.asm	/^static inline int$/;"	l
static	obj/user/badarg.asm	/^static inline void *$/;"	l
static	obj/user/badarg.asm	/^static inline void$/;"	l
static	obj/user/badarg.asm	/^static int$/;"	l
static	obj/user/badarg.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/badarg.asm	/^static long long$/;"	l
static	obj/user/badarg.asm	/^static unsigned long long$/;"	l
static	obj/user/badarg.asm	/^static void$/;"	l
step	obj/user/badarg.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/badarg.asm	/^uint32_t$/;"	l
unsigned	obj/user/badarg.asm	/^unsigned int$/;"	l
void	obj/user/badarg.asm	/^void *$/;"	l
void	obj/user/badarg.asm	/^void$/;"	l
width	obj/user/badarg.asm	/^                width = 0;$/;"	d
width	obj/user/badarg.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badarg.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/badsegment.asm	/^DIR *$/;"	l
DIR	obj/user/badsegment.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/badsegment.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/badsegment.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/badsegment.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/badsegment.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/badsegment.asm	/^_start:$/;"	l
altflag	obj/user/badsegment.asm	/^            altflag = 1;$/;"	d
base	obj/user/badsegment.asm	/^            base = 10;$/;"	d
base	obj/user/badsegment.asm	/^            base = 16;$/;"	d
base	obj/user/badsegment.asm	/^            base = 8;$/;"	d
base	obj/user/badsegment.asm	/^        base = 10;$/;"	d
ch	obj/user/badsegment.asm	/^                ch = *fmt;$/;"	d
char	obj/user/badsegment.asm	/^char *$/;"	l
cnt	obj/user/badsegment.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/badsegment.asm	/^        default:$/;"	l
dig	obj/user/badsegment.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/badsegment.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/badsegment.asm	/^                err = -err;$/;"	d
err	obj/user/badsegment.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/badsegment.asm	/^failed:$/;"	l
int	obj/user/badsegment.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/badsegment.asm	/^int$/;"	l
lflag	obj/user/badsegment.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/badsegment.asm	/^long$/;"	l
next	obj/user/badsegment.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/badsegment.asm	/^    next = seed;$/;"	d
num	obj/user/badsegment.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/badsegment.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/badsegment.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/badsegment.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/badsegment.asm	/^        number:$/;"	l
p	obj/user/badsegment.asm	/^                p = "(null)";$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '-';$/;"	d
padc	obj/user/badsegment.asm	/^            padc = '0';$/;"	d
precision	obj/user/badsegment.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/badsegment.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/badsegment.asm	/^        process_precision:$/;"	l
reswitch	obj/user/badsegment.asm	/^    reswitch:$/;"	l
ret	obj/user/badsegment.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/badsegment.asm	/^size_t$/;"	l
static	obj/user/badsegment.asm	/^static char$/;"	l
static	obj/user/badsegment.asm	/^static inline bool$/;"	l
static	obj/user/badsegment.asm	/^static inline char *$/;"	l
static	obj/user/badsegment.asm	/^static inline int$/;"	l
static	obj/user/badsegment.asm	/^static inline void *$/;"	l
static	obj/user/badsegment.asm	/^static inline void$/;"	l
static	obj/user/badsegment.asm	/^static int$/;"	l
static	obj/user/badsegment.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/badsegment.asm	/^static long long$/;"	l
static	obj/user/badsegment.asm	/^static unsigned long long$/;"	l
static	obj/user/badsegment.asm	/^static void$/;"	l
step	obj/user/badsegment.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/badsegment.asm	/^uint32_t$/;"	l
unsigned	obj/user/badsegment.asm	/^unsigned int$/;"	l
void	obj/user/badsegment.asm	/^void *$/;"	l
void	obj/user/badsegment.asm	/^void$/;"	l
width	obj/user/badsegment.asm	/^                width = 0;$/;"	d
width	obj/user/badsegment.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/badsegment.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/divzero.asm	/^DIR *$/;"	l
DIR	obj/user/divzero.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/divzero.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/divzero.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/divzero.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/divzero.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/divzero.asm	/^_start:$/;"	l
altflag	obj/user/divzero.asm	/^            altflag = 1;$/;"	d
base	obj/user/divzero.asm	/^            base = 10;$/;"	d
base	obj/user/divzero.asm	/^            base = 16;$/;"	d
base	obj/user/divzero.asm	/^            base = 8;$/;"	d
base	obj/user/divzero.asm	/^        base = 10;$/;"	d
ch	obj/user/divzero.asm	/^                ch = *fmt;$/;"	d
char	obj/user/divzero.asm	/^char *$/;"	l
cnt	obj/user/divzero.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/divzero.asm	/^        default:$/;"	l
dig	obj/user/divzero.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/divzero.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/divzero.asm	/^                err = -err;$/;"	d
err	obj/user/divzero.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/divzero.asm	/^failed:$/;"	l
int	obj/user/divzero.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/divzero.asm	/^int zero;$/;"	l
int	obj/user/divzero.asm	/^int$/;"	l
lflag	obj/user/divzero.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/divzero.asm	/^long$/;"	l
next	obj/user/divzero.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/divzero.asm	/^    next = seed;$/;"	d
num	obj/user/divzero.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/divzero.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/divzero.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/divzero.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/divzero.asm	/^        number:$/;"	l
p	obj/user/divzero.asm	/^                p = "(null)";$/;"	d
padc	obj/user/divzero.asm	/^            padc = '-';$/;"	d
padc	obj/user/divzero.asm	/^            padc = '0';$/;"	d
precision	obj/user/divzero.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/divzero.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/divzero.asm	/^        process_precision:$/;"	l
reswitch	obj/user/divzero.asm	/^    reswitch:$/;"	l
ret	obj/user/divzero.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/divzero.asm	/^size_t$/;"	l
static	obj/user/divzero.asm	/^static char$/;"	l
static	obj/user/divzero.asm	/^static inline bool$/;"	l
static	obj/user/divzero.asm	/^static inline char *$/;"	l
static	obj/user/divzero.asm	/^static inline int$/;"	l
static	obj/user/divzero.asm	/^static inline void *$/;"	l
static	obj/user/divzero.asm	/^static inline void$/;"	l
static	obj/user/divzero.asm	/^static int$/;"	l
static	obj/user/divzero.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/divzero.asm	/^static long long$/;"	l
static	obj/user/divzero.asm	/^static unsigned long long$/;"	l
static	obj/user/divzero.asm	/^static void$/;"	l
step	obj/user/divzero.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/divzero.asm	/^uint32_t$/;"	l
unsigned	obj/user/divzero.asm	/^unsigned int$/;"	l
void	obj/user/divzero.asm	/^void *$/;"	l
void	obj/user/divzero.asm	/^void$/;"	l
width	obj/user/divzero.asm	/^                width = 0;$/;"	d
width	obj/user/divzero.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/divzero.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/exit.asm	/^DIR *$/;"	l
DIR	obj/user/exit.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/exit.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/exit.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/exit.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/exit.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/exit.asm	/^_start:$/;"	l
altflag	obj/user/exit.asm	/^            altflag = 1;$/;"	d
base	obj/user/exit.asm	/^            base = 10;$/;"	d
base	obj/user/exit.asm	/^            base = 16;$/;"	d
base	obj/user/exit.asm	/^            base = 8;$/;"	d
base	obj/user/exit.asm	/^        base = 10;$/;"	d
ch	obj/user/exit.asm	/^                ch = *fmt;$/;"	d
char	obj/user/exit.asm	/^char *$/;"	l
cnt	obj/user/exit.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/exit.asm	/^        default:$/;"	l
dig	obj/user/exit.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/exit.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/exit.asm	/^                err = -err;$/;"	d
err	obj/user/exit.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/exit.asm	/^failed:$/;"	l
int	obj/user/exit.asm	/^int magic = -0x10384;$/;"	l
int	obj/user/exit.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/exit.asm	/^int$/;"	l
lflag	obj/user/exit.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/exit.asm	/^long$/;"	l
next	obj/user/exit.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/exit.asm	/^    next = seed;$/;"	d
num	obj/user/exit.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/exit.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/exit.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/exit.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/exit.asm	/^        number:$/;"	l
p	obj/user/exit.asm	/^                p = "(null)";$/;"	d
padc	obj/user/exit.asm	/^            padc = '-';$/;"	d
padc	obj/user/exit.asm	/^            padc = '0';$/;"	d
precision	obj/user/exit.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/exit.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/exit.asm	/^        process_precision:$/;"	l
reswitch	obj/user/exit.asm	/^    reswitch:$/;"	l
ret	obj/user/exit.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/exit.asm	/^size_t$/;"	l
static	obj/user/exit.asm	/^static char$/;"	l
static	obj/user/exit.asm	/^static inline bool$/;"	l
static	obj/user/exit.asm	/^static inline char *$/;"	l
static	obj/user/exit.asm	/^static inline int$/;"	l
static	obj/user/exit.asm	/^static inline void *$/;"	l
static	obj/user/exit.asm	/^static inline void$/;"	l
static	obj/user/exit.asm	/^static int$/;"	l
static	obj/user/exit.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/exit.asm	/^static long long$/;"	l
static	obj/user/exit.asm	/^static unsigned long long$/;"	l
static	obj/user/exit.asm	/^static void$/;"	l
step	obj/user/exit.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/exit.asm	/^uint32_t$/;"	l
unsigned	obj/user/exit.asm	/^unsigned int$/;"	l
void	obj/user/exit.asm	/^void *$/;"	l
void	obj/user/exit.asm	/^void$/;"	l
width	obj/user/exit.asm	/^                width = 0;$/;"	d
width	obj/user/exit.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/exit.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/faultread.asm	/^DIR *$/;"	l
DIR	obj/user/faultread.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/faultread.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/faultread.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultread.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultread.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/faultread.asm	/^_start:$/;"	l
altflag	obj/user/faultread.asm	/^            altflag = 1;$/;"	d
base	obj/user/faultread.asm	/^            base = 10;$/;"	d
base	obj/user/faultread.asm	/^            base = 16;$/;"	d
base	obj/user/faultread.asm	/^            base = 8;$/;"	d
base	obj/user/faultread.asm	/^        base = 10;$/;"	d
ch	obj/user/faultread.asm	/^                ch = *fmt;$/;"	d
char	obj/user/faultread.asm	/^char *$/;"	l
cnt	obj/user/faultread.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/faultread.asm	/^        default:$/;"	l
dig	obj/user/faultread.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultread.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/faultread.asm	/^                err = -err;$/;"	d
err	obj/user/faultread.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/faultread.asm	/^failed:$/;"	l
int	obj/user/faultread.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/faultread.asm	/^int$/;"	l
lflag	obj/user/faultread.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/faultread.asm	/^long$/;"	l
next	obj/user/faultread.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultread.asm	/^    next = seed;$/;"	d
num	obj/user/faultread.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultread.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultread.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultread.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultread.asm	/^        number:$/;"	l
p	obj/user/faultread.asm	/^                p = "(null)";$/;"	d
padc	obj/user/faultread.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultread.asm	/^            padc = '0';$/;"	d
precision	obj/user/faultread.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultread.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultread.asm	/^        process_precision:$/;"	l
reswitch	obj/user/faultread.asm	/^    reswitch:$/;"	l
ret	obj/user/faultread.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/faultread.asm	/^size_t$/;"	l
static	obj/user/faultread.asm	/^static char$/;"	l
static	obj/user/faultread.asm	/^static inline bool$/;"	l
static	obj/user/faultread.asm	/^static inline char *$/;"	l
static	obj/user/faultread.asm	/^static inline int$/;"	l
static	obj/user/faultread.asm	/^static inline void *$/;"	l
static	obj/user/faultread.asm	/^static inline void$/;"	l
static	obj/user/faultread.asm	/^static int$/;"	l
static	obj/user/faultread.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/faultread.asm	/^static long long$/;"	l
static	obj/user/faultread.asm	/^static unsigned long long$/;"	l
static	obj/user/faultread.asm	/^static void$/;"	l
step	obj/user/faultread.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/faultread.asm	/^uint32_t$/;"	l
unsigned	obj/user/faultread.asm	/^unsigned int$/;"	l
void	obj/user/faultread.asm	/^void *$/;"	l
void	obj/user/faultread.asm	/^void$/;"	l
width	obj/user/faultread.asm	/^                width = 0;$/;"	d
width	obj/user/faultread.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultread.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/faultreadkernel.asm	/^DIR *$/;"	l
DIR	obj/user/faultreadkernel.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/faultreadkernel.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/faultreadkernel.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/faultreadkernel.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/faultreadkernel.asm	/^_start:$/;"	l
altflag	obj/user/faultreadkernel.asm	/^            altflag = 1;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 10;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 16;$/;"	d
base	obj/user/faultreadkernel.asm	/^            base = 8;$/;"	d
base	obj/user/faultreadkernel.asm	/^        base = 10;$/;"	d
ch	obj/user/faultreadkernel.asm	/^                ch = *fmt;$/;"	d
char	obj/user/faultreadkernel.asm	/^char *$/;"	l
cnt	obj/user/faultreadkernel.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/faultreadkernel.asm	/^        default:$/;"	l
dig	obj/user/faultreadkernel.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/faultreadkernel.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/faultreadkernel.asm	/^                err = -err;$/;"	d
err	obj/user/faultreadkernel.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/faultreadkernel.asm	/^failed:$/;"	l
int	obj/user/faultreadkernel.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/faultreadkernel.asm	/^int$/;"	l
lflag	obj/user/faultreadkernel.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/faultreadkernel.asm	/^long$/;"	l
next	obj/user/faultreadkernel.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/faultreadkernel.asm	/^    next = seed;$/;"	d
num	obj/user/faultreadkernel.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/faultreadkernel.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/faultreadkernel.asm	/^        number:$/;"	l
p	obj/user/faultreadkernel.asm	/^                p = "(null)";$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '-';$/;"	d
padc	obj/user/faultreadkernel.asm	/^            padc = '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/faultreadkernel.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/faultreadkernel.asm	/^        process_precision:$/;"	l
reswitch	obj/user/faultreadkernel.asm	/^    reswitch:$/;"	l
ret	obj/user/faultreadkernel.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/faultreadkernel.asm	/^size_t$/;"	l
static	obj/user/faultreadkernel.asm	/^static char$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline bool$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline char *$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline int$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline void *$/;"	l
static	obj/user/faultreadkernel.asm	/^static inline void$/;"	l
static	obj/user/faultreadkernel.asm	/^static int$/;"	l
static	obj/user/faultreadkernel.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/faultreadkernel.asm	/^static long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static unsigned long long$/;"	l
static	obj/user/faultreadkernel.asm	/^static void$/;"	l
step	obj/user/faultreadkernel.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/faultreadkernel.asm	/^uint32_t$/;"	l
unsigned	obj/user/faultreadkernel.asm	/^unsigned int$/;"	l
void	obj/user/faultreadkernel.asm	/^void *$/;"	l
void	obj/user/faultreadkernel.asm	/^void$/;"	l
width	obj/user/faultreadkernel.asm	/^                width = 0;$/;"	d
width	obj/user/faultreadkernel.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/faultreadkernel.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/forktest.asm	/^DIR *$/;"	l
DIR	obj/user/forktest.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/forktest.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/forktest.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktest.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktest.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/forktest.asm	/^_start:$/;"	l
altflag	obj/user/forktest.asm	/^            altflag = 1;$/;"	d
base	obj/user/forktest.asm	/^            base = 10;$/;"	d
base	obj/user/forktest.asm	/^            base = 16;$/;"	d
base	obj/user/forktest.asm	/^            base = 8;$/;"	d
base	obj/user/forktest.asm	/^        base = 10;$/;"	d
ch	obj/user/forktest.asm	/^                ch = *fmt;$/;"	d
char	obj/user/forktest.asm	/^char *$/;"	l
cnt	obj/user/forktest.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
const	obj/user/forktest.asm	/^const int max_child = 32;$/;"	l
default	obj/user/forktest.asm	/^        default:$/;"	l
dig	obj/user/forktest.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktest.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/forktest.asm	/^                err = -err;$/;"	d
err	obj/user/forktest.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/forktest.asm	/^failed:$/;"	l
int	obj/user/forktest.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/forktest.asm	/^int$/;"	l
lflag	obj/user/forktest.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/forktest.asm	/^long$/;"	l
next	obj/user/forktest.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktest.asm	/^    next = seed;$/;"	d
num	obj/user/forktest.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktest.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktest.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktest.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/forktest.asm	/^        number:$/;"	l
p	obj/user/forktest.asm	/^                p = "(null)";$/;"	d
padc	obj/user/forktest.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktest.asm	/^            padc = '0';$/;"	d
precision	obj/user/forktest.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktest.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/forktest.asm	/^        process_precision:$/;"	l
reswitch	obj/user/forktest.asm	/^    reswitch:$/;"	l
ret	obj/user/forktest.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/forktest.asm	/^size_t$/;"	l
static	obj/user/forktest.asm	/^static char$/;"	l
static	obj/user/forktest.asm	/^static inline bool$/;"	l
static	obj/user/forktest.asm	/^static inline char *$/;"	l
static	obj/user/forktest.asm	/^static inline int$/;"	l
static	obj/user/forktest.asm	/^static inline void *$/;"	l
static	obj/user/forktest.asm	/^static inline void$/;"	l
static	obj/user/forktest.asm	/^static int$/;"	l
static	obj/user/forktest.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/forktest.asm	/^static long long$/;"	l
static	obj/user/forktest.asm	/^static unsigned long long$/;"	l
static	obj/user/forktest.asm	/^static void$/;"	l
step	obj/user/forktest.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/forktest.asm	/^uint32_t$/;"	l
unsigned	obj/user/forktest.asm	/^unsigned int$/;"	l
void	obj/user/forktest.asm	/^void *$/;"	l
void	obj/user/forktest.asm	/^void$/;"	l
width	obj/user/forktest.asm	/^                width = 0;$/;"	d
width	obj/user/forktest.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktest.asm	/^        width = precision = -1;$/;"	d
DEPTH	obj/user/forktree.asm	/^#define DEPTH 4$/;"	d
DIR	obj/user/forktree.asm	/^DIR *$/;"	l
DIR	obj/user/forktree.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/forktree.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/forktree.asm	/^#define MAX_ARGS            5$/;"	d
SLEEP_TIME	obj/user/forktree.asm	/^#define SLEEP_TIME 400$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/forktree.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/forktree.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/forktree.asm	/^_start:$/;"	l
altflag	obj/user/forktree.asm	/^            altflag = 1;$/;"	d
base	obj/user/forktree.asm	/^            base = 10;$/;"	d
base	obj/user/forktree.asm	/^            base = 16;$/;"	d
base	obj/user/forktree.asm	/^            base = 8;$/;"	d
base	obj/user/forktree.asm	/^        base = 10;$/;"	d
ch	obj/user/forktree.asm	/^                ch = *fmt;$/;"	d
char	obj/user/forktree.asm	/^char *$/;"	l
cnt	obj/user/forktree.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/forktree.asm	/^        default:$/;"	l
dig	obj/user/forktree.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/forktree.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/forktree.asm	/^                err = -err;$/;"	d
err	obj/user/forktree.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/forktree.asm	/^failed:$/;"	l
int	obj/user/forktree.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/forktree.asm	/^int$/;"	l
lflag	obj/user/forktree.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/forktree.asm	/^long$/;"	l
next	obj/user/forktree.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/forktree.asm	/^    next = seed;$/;"	d
num	obj/user/forktree.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/forktree.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/forktree.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/forktree.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/forktree.asm	/^        number:$/;"	l
p	obj/user/forktree.asm	/^                p = "(null)";$/;"	d
padc	obj/user/forktree.asm	/^            padc = '-';$/;"	d
padc	obj/user/forktree.asm	/^            padc = '0';$/;"	d
precision	obj/user/forktree.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/forktree.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/forktree.asm	/^        process_precision:$/;"	l
reswitch	obj/user/forktree.asm	/^    reswitch:$/;"	l
ret	obj/user/forktree.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/forktree.asm	/^size_t$/;"	l
static	obj/user/forktree.asm	/^static char$/;"	l
static	obj/user/forktree.asm	/^static inline bool$/;"	l
static	obj/user/forktree.asm	/^static inline char *$/;"	l
static	obj/user/forktree.asm	/^static inline int$/;"	l
static	obj/user/forktree.asm	/^static inline void *$/;"	l
static	obj/user/forktree.asm	/^static inline void$/;"	l
static	obj/user/forktree.asm	/^static int$/;"	l
static	obj/user/forktree.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/forktree.asm	/^static long long$/;"	l
static	obj/user/forktree.asm	/^static unsigned long long$/;"	l
static	obj/user/forktree.asm	/^static void$/;"	l
step	obj/user/forktree.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/forktree.asm	/^uint32_t$/;"	l
unsigned	obj/user/forktree.asm	/^unsigned int$/;"	l
void	obj/user/forktree.asm	/^void *$/;"	l
void	obj/user/forktree.asm	/^void forktree(const char *cur);$/;"	l
void	obj/user/forktree.asm	/^void$/;"	l
width	obj/user/forktree.asm	/^                width = 0;$/;"	d
width	obj/user/forktree.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/forktree.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/hello.asm	/^DIR *$/;"	l
DIR	obj/user/hello.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/hello.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/hello.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/hello.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/hello.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/hello.asm	/^_start:$/;"	l
altflag	obj/user/hello.asm	/^            altflag = 1;$/;"	d
base	obj/user/hello.asm	/^            base = 10;$/;"	d
base	obj/user/hello.asm	/^            base = 16;$/;"	d
base	obj/user/hello.asm	/^            base = 8;$/;"	d
base	obj/user/hello.asm	/^        base = 10;$/;"	d
ch	obj/user/hello.asm	/^                ch = *fmt;$/;"	d
char	obj/user/hello.asm	/^char *$/;"	l
cnt	obj/user/hello.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/hello.asm	/^        default:$/;"	l
dig	obj/user/hello.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/hello.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/hello.asm	/^                err = -err;$/;"	d
err	obj/user/hello.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/hello.asm	/^failed:$/;"	l
int	obj/user/hello.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/hello.asm	/^int$/;"	l
lflag	obj/user/hello.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/hello.asm	/^long$/;"	l
next	obj/user/hello.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/hello.asm	/^    next = seed;$/;"	d
num	obj/user/hello.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/hello.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/hello.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/hello.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/hello.asm	/^        number:$/;"	l
p	obj/user/hello.asm	/^                p = "(null)";$/;"	d
padc	obj/user/hello.asm	/^            padc = '-';$/;"	d
padc	obj/user/hello.asm	/^            padc = '0';$/;"	d
precision	obj/user/hello.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/hello.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/hello.asm	/^        process_precision:$/;"	l
reswitch	obj/user/hello.asm	/^    reswitch:$/;"	l
ret	obj/user/hello.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/hello.asm	/^size_t$/;"	l
static	obj/user/hello.asm	/^static char$/;"	l
static	obj/user/hello.asm	/^static inline bool$/;"	l
static	obj/user/hello.asm	/^static inline char *$/;"	l
static	obj/user/hello.asm	/^static inline int$/;"	l
static	obj/user/hello.asm	/^static inline void *$/;"	l
static	obj/user/hello.asm	/^static inline void$/;"	l
static	obj/user/hello.asm	/^static int$/;"	l
static	obj/user/hello.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/hello.asm	/^static long long$/;"	l
static	obj/user/hello.asm	/^static unsigned long long$/;"	l
static	obj/user/hello.asm	/^static void$/;"	l
step	obj/user/hello.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/hello.asm	/^uint32_t$/;"	l
unsigned	obj/user/hello.asm	/^unsigned int$/;"	l
void	obj/user/hello.asm	/^void *$/;"	l
void	obj/user/hello.asm	/^void$/;"	l
width	obj/user/hello.asm	/^                width = 0;$/;"	d
width	obj/user/hello.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/hello.asm	/^        width = precision = -1;$/;"	d
BUFSIZE	obj/user/ls.asm	/^#define BUFSIZE                         4096$/;"	d
DIR	obj/user/ls.asm	/^DIR *$/;"	l
DIR	obj/user/ls.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/ls.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/ls.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/ls.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/ls.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/ls.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/ls.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/ls.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/ls.asm	/^_start:$/;"	l
altflag	obj/user/ls.asm	/^            altflag = 1;$/;"	d
base	obj/user/ls.asm	/^            base = 10;$/;"	d
base	obj/user/ls.asm	/^            base = 16;$/;"	d
base	obj/user/ls.asm	/^            base = 8;$/;"	d
base	obj/user/ls.asm	/^        base = 10;$/;"	d
ch	obj/user/ls.asm	/^                ch = *fmt;$/;"	d
char	obj/user/ls.asm	/^char *$/;"	l
cnt	obj/user/ls.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/ls.asm	/^        default:$/;"	l
default	obj/user/ls.asm	/^    default:  type = 5; break;$/;"	l
dig	obj/user/ls.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/ls.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/ls.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/ls.asm	/^                err = -err;$/;"	d
err	obj/user/ls.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/ls.asm	/^failed:$/;"	l
int	obj/user/ls.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/ls.asm	/^int$/;"	l
lflag	obj/user/ls.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/ls.asm	/^long$/;"	l
next	obj/user/ls.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/ls.asm	/^    next = seed;$/;"	d
num	obj/user/ls.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/ls.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/ls.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/ls.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/ls.asm	/^        number:$/;"	l
p	obj/user/ls.asm	/^                p = "(null)";$/;"	d
padc	obj/user/ls.asm	/^            padc = '-';$/;"	d
padc	obj/user/ls.asm	/^            padc = '0';$/;"	d
precision	obj/user/ls.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/ls.asm	/^            precision = va_arg(ap, int);$/;"	d
printf	obj/user/ls.asm	/^#define printf(...)                     fprintf(1, __VA_ARGS__)$/;"	d
process_precision	obj/user/ls.asm	/^        process_precision:$/;"	l
reswitch	obj/user/ls.asm	/^    reswitch:$/;"	l
ret	obj/user/ls.asm	/^        ret = dup2(fd1, fd2);$/;"	d
ret	obj/user/ls.asm	/^    ret = fstat(fd, stat);$/;"	d
size_t	obj/user/ls.asm	/^size_t$/;"	l
static	obj/user/ls.asm	/^static char$/;"	l
static	obj/user/ls.asm	/^static inline bool$/;"	l
static	obj/user/ls.asm	/^static inline char *$/;"	l
static	obj/user/ls.asm	/^static inline int$/;"	l
static	obj/user/ls.asm	/^static inline void *$/;"	l
static	obj/user/ls.asm	/^static inline void$/;"	l
static	obj/user/ls.asm	/^static int$/;"	l
static	obj/user/ls.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/ls.asm	/^static long long$/;"	l
static	obj/user/ls.asm	/^static unsigned long long$/;"	l
static	obj/user/ls.asm	/^static void$/;"	l
step	obj/user/ls.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/ls.asm	/^uint32_t$/;"	l
unsigned	obj/user/ls.asm	/^unsigned int$/;"	l
void	obj/user/ls.asm	/^void *$/;"	l
void	obj/user/ls.asm	/^void$/;"	l
width	obj/user/ls.asm	/^                width = 0;$/;"	d
width	obj/user/ls.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/ls.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/matrix.asm	/^DIR *$/;"	l
DIR	obj/user/matrix.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/matrix.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/matrix.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/matrix.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/matrix.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/matrix.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/matrix.asm	/^_start:$/;"	l
altflag	obj/user/matrix.asm	/^            altflag = 1;$/;"	d
base	obj/user/matrix.asm	/^            base = 10;$/;"	d
base	obj/user/matrix.asm	/^            base = 16;$/;"	d
base	obj/user/matrix.asm	/^            base = 8;$/;"	d
base	obj/user/matrix.asm	/^        base = 10;$/;"	d
ch	obj/user/matrix.asm	/^                ch = *fmt;$/;"	d
char	obj/user/matrix.asm	/^char *$/;"	l
cnt	obj/user/matrix.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
const	obj/user/matrix.asm	/^const int total = 21;$/;"	l
default	obj/user/matrix.asm	/^        default:$/;"	l
dig	obj/user/matrix.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/matrix.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/matrix.asm	/^                err = -err;$/;"	d
err	obj/user/matrix.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/matrix.asm	/^failed:$/;"	l
int	obj/user/matrix.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/matrix.asm	/^int$/;"	l
lflag	obj/user/matrix.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/matrix.asm	/^long$/;"	l
next	obj/user/matrix.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/matrix.asm	/^    next = seed;$/;"	d
num	obj/user/matrix.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/matrix.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/matrix.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/matrix.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/matrix.asm	/^        number:$/;"	l
p	obj/user/matrix.asm	/^                p = "(null)";$/;"	d
padc	obj/user/matrix.asm	/^            padc = '-';$/;"	d
padc	obj/user/matrix.asm	/^            padc = '0';$/;"	d
precision	obj/user/matrix.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/matrix.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/matrix.asm	/^        process_precision:$/;"	l
reswitch	obj/user/matrix.asm	/^    reswitch:$/;"	l
ret	obj/user/matrix.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/matrix.asm	/^size_t$/;"	l
static	obj/user/matrix.asm	/^static char$/;"	l
static	obj/user/matrix.asm	/^static inline bool$/;"	l
static	obj/user/matrix.asm	/^static inline char *$/;"	l
static	obj/user/matrix.asm	/^static inline int$/;"	l
static	obj/user/matrix.asm	/^static inline void *$/;"	l
static	obj/user/matrix.asm	/^static inline void$/;"	l
static	obj/user/matrix.asm	/^static int mata[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int matb[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int matc[MATSIZE][MATSIZE];$/;"	l
static	obj/user/matrix.asm	/^static int$/;"	l
static	obj/user/matrix.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/matrix.asm	/^static long long$/;"	l
static	obj/user/matrix.asm	/^static unsigned long long$/;"	l
static	obj/user/matrix.asm	/^static void$/;"	l
step	obj/user/matrix.asm	/^                step = 0;$/;"	d
times	obj/user/matrix.asm	/^            times = (times * times + 10) * 100;$/;"	d
uint32_t	obj/user/matrix.asm	/^uint32_t$/;"	l
unsigned	obj/user/matrix.asm	/^unsigned int$/;"	l
void	obj/user/matrix.asm	/^void *$/;"	l
void	obj/user/matrix.asm	/^void$/;"	l
width	obj/user/matrix.asm	/^                width = 0;$/;"	d
width	obj/user/matrix.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/matrix.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/pgdir.asm	/^DIR *$/;"	l
DIR	obj/user/pgdir.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/pgdir.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/pgdir.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/pgdir.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/pgdir.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/pgdir.asm	/^_start:$/;"	l
altflag	obj/user/pgdir.asm	/^            altflag = 1;$/;"	d
base	obj/user/pgdir.asm	/^            base = 10;$/;"	d
base	obj/user/pgdir.asm	/^            base = 16;$/;"	d
base	obj/user/pgdir.asm	/^            base = 8;$/;"	d
base	obj/user/pgdir.asm	/^        base = 10;$/;"	d
ch	obj/user/pgdir.asm	/^                ch = *fmt;$/;"	d
char	obj/user/pgdir.asm	/^char *$/;"	l
cnt	obj/user/pgdir.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/pgdir.asm	/^        default:$/;"	l
dig	obj/user/pgdir.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/pgdir.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/pgdir.asm	/^                err = -err;$/;"	d
err	obj/user/pgdir.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/pgdir.asm	/^failed:$/;"	l
int	obj/user/pgdir.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/pgdir.asm	/^int$/;"	l
lflag	obj/user/pgdir.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/pgdir.asm	/^long$/;"	l
next	obj/user/pgdir.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/pgdir.asm	/^    next = seed;$/;"	d
num	obj/user/pgdir.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/pgdir.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/pgdir.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/pgdir.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/pgdir.asm	/^        number:$/;"	l
p	obj/user/pgdir.asm	/^                p = "(null)";$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '-';$/;"	d
padc	obj/user/pgdir.asm	/^            padc = '0';$/;"	d
precision	obj/user/pgdir.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/pgdir.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/pgdir.asm	/^        process_precision:$/;"	l
reswitch	obj/user/pgdir.asm	/^    reswitch:$/;"	l
ret	obj/user/pgdir.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/pgdir.asm	/^size_t$/;"	l
static	obj/user/pgdir.asm	/^static char$/;"	l
static	obj/user/pgdir.asm	/^static inline bool$/;"	l
static	obj/user/pgdir.asm	/^static inline char *$/;"	l
static	obj/user/pgdir.asm	/^static inline int$/;"	l
static	obj/user/pgdir.asm	/^static inline void *$/;"	l
static	obj/user/pgdir.asm	/^static inline void$/;"	l
static	obj/user/pgdir.asm	/^static int$/;"	l
static	obj/user/pgdir.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/pgdir.asm	/^static long long$/;"	l
static	obj/user/pgdir.asm	/^static unsigned long long$/;"	l
static	obj/user/pgdir.asm	/^static void$/;"	l
step	obj/user/pgdir.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/pgdir.asm	/^uint32_t$/;"	l
unsigned	obj/user/pgdir.asm	/^unsigned int$/;"	l
void	obj/user/pgdir.asm	/^void *$/;"	l
void	obj/user/pgdir.asm	/^void$/;"	l
width	obj/user/pgdir.asm	/^                width = 0;$/;"	d
width	obj/user/pgdir.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/pgdir.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/priority.asm	/^DIR *$/;"	l
DIR	obj/user/priority.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/priority.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/priority.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/priority.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/priority.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/priority.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/priority.asm	/^_start:$/;"	l
altflag	obj/user/priority.asm	/^            altflag = 1;$/;"	d
base	obj/user/priority.asm	/^            base = 10;$/;"	d
base	obj/user/priority.asm	/^            base = 16;$/;"	d
base	obj/user/priority.asm	/^            base = 8;$/;"	d
base	obj/user/priority.asm	/^        base = 10;$/;"	d
ch	obj/user/priority.asm	/^                ch = *fmt;$/;"	d
char	obj/user/priority.asm	/^char *$/;"	l
cnt	obj/user/priority.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/priority.asm	/^        default:$/;"	l
dig	obj/user/priority.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/priority.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/priority.asm	/^                err = -err;$/;"	d
err	obj/user/priority.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/priority.asm	/^failed:$/;"	l
int	obj/user/priority.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/priority.asm	/^int pids[TOTAL];$/;"	l
int	obj/user/priority.asm	/^int status[TOTAL];$/;"	l
int	obj/user/priority.asm	/^int$/;"	l
j	obj/user/priority.asm	/^          j = !j;$/;"	d
lflag	obj/user/priority.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/priority.asm	/^long$/;"	l
next	obj/user/priority.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/priority.asm	/^    next = seed;$/;"	d
num	obj/user/priority.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/priority.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/priority.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/priority.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/priority.asm	/^        number:$/;"	l
p	obj/user/priority.asm	/^                p = "(null)";$/;"	d
padc	obj/user/priority.asm	/^            padc = '-';$/;"	d
padc	obj/user/priority.asm	/^            padc = '0';$/;"	d
precision	obj/user/priority.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/priority.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/priority.asm	/^        process_precision:$/;"	l
reswitch	obj/user/priority.asm	/^    reswitch:$/;"	l
ret	obj/user/priority.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/priority.asm	/^size_t$/;"	l
static	obj/user/priority.asm	/^static char$/;"	l
static	obj/user/priority.asm	/^static inline bool$/;"	l
static	obj/user/priority.asm	/^static inline char *$/;"	l
static	obj/user/priority.asm	/^static inline int$/;"	l
static	obj/user/priority.asm	/^static inline void *$/;"	l
static	obj/user/priority.asm	/^static inline void$/;"	l
static	obj/user/priority.asm	/^static int$/;"	l
static	obj/user/priority.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/priority.asm	/^static long long$/;"	l
static	obj/user/priority.asm	/^static unsigned long long$/;"	l
static	obj/user/priority.asm	/^static void$/;"	l
step	obj/user/priority.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/priority.asm	/^uint32_t$/;"	l
unsigned	obj/user/priority.asm	/^unsigned int$/;"	l
void	obj/user/priority.asm	/^void *$/;"	l
void	obj/user/priority.asm	/^void$/;"	l
width	obj/user/priority.asm	/^                width = 0;$/;"	d
width	obj/user/priority.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/priority.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/sh.asm	/^DIR *$/;"	l
DIR	obj/user/sh.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/sh.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/sh.asm	/^#define MAX_ARGS            5$/;"	d
SYMBOLS	obj/user/sh.asm	/^#define SYMBOLS                         "<|>&;"$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/sh.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/sh.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/sh.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/sh.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/sh.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/sh.asm	/^_start:$/;"	l
again	obj/user/sh.asm	/^again:$/;"	l
altflag	obj/user/sh.asm	/^            altflag = 1;$/;"	d
argc	obj/user/sh.asm	/^    argc = 0;$/;"	d
base	obj/user/sh.asm	/^            base = 10;$/;"	d
base	obj/user/sh.asm	/^            base = 16;$/;"	d
base	obj/user/sh.asm	/^            base = 8;$/;"	d
base	obj/user/sh.asm	/^        base = 10;$/;"	d
ch	obj/user/sh.asm	/^                ch = *fmt;$/;"	d
char	obj/user/sh.asm	/^char *$/;"	l
char	obj/user/sh.asm	/^char shcwd[BUFSIZE];$/;"	l
cnt	obj/user/sh.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/sh.asm	/^        default:$/;"	l
dig	obj/user/sh.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/sh.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sh.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/sh.asm	/^                err = -err;$/;"	d
err	obj/user/sh.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/sh.asm	/^failed:$/;"	l
fd1	obj/user/sh.asm	/^        fd1 = ret, ret = dup2(fd1, fd2);$/;"	d
int	obj/user/sh.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/sh.asm	/^int$/;"	l
interactive	obj/user/sh.asm	/^        interactive = 0;$/;"	d
lflag	obj/user/sh.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/sh.asm	/^long$/;"	l
next	obj/user/sh.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/sh.asm	/^    next = seed;$/;"	d
num	obj/user/sh.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/sh.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/sh.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/sh.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/sh.asm	/^        number:$/;"	l
p	obj/user/sh.asm	/^                p = "(null)";$/;"	d
padc	obj/user/sh.asm	/^            padc = '-';$/;"	d
padc	obj/user/sh.asm	/^            padc = '0';$/;"	d
precision	obj/user/sh.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sh.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/sh.asm	/^        process_precision:$/;"	l
reswitch	obj/user/sh.asm	/^    reswitch:$/;"	l
ret	obj/user/sh.asm	/^                ret = 0;$/;"	d
ret	obj/user/sh.asm	/^            ret = runcmd(buffer);$/;"	d
ret	obj/user/sh.asm	/^        ret = dup2(fd1, fd2);$/;"	d
runit	obj/user/sh.asm	/^runit:$/;"	l
size_t	obj/user/sh.asm	/^size_t$/;"	l
static	obj/user/sh.asm	/^static char$/;"	l
static	obj/user/sh.asm	/^static inline bool$/;"	l
static	obj/user/sh.asm	/^static inline char *$/;"	l
static	obj/user/sh.asm	/^static inline int$/;"	l
static	obj/user/sh.asm	/^static inline void *$/;"	l
static	obj/user/sh.asm	/^static inline void$/;"	l
static	obj/user/sh.asm	/^static int$/;"	l
static	obj/user/sh.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/sh.asm	/^static long long$/;"	l
static	obj/user/sh.asm	/^static unsigned long long$/;"	l
static	obj/user/sh.asm	/^static void$/;"	l
step	obj/user/sh.asm	/^                step = 0;$/;"	d
token	obj/user/sh.asm	/^        token = *s, *s ++ = '\\0';$/;"	d
uint32_t	obj/user/sh.asm	/^uint32_t$/;"	l
unsigned	obj/user/sh.asm	/^unsigned int$/;"	l
void	obj/user/sh.asm	/^void *$/;"	l
void	obj/user/sh.asm	/^void$/;"	l
width	obj/user/sh.asm	/^                width = 0;$/;"	d
width	obj/user/sh.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/sh.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/sleep.asm	/^DIR *$/;"	l
DIR	obj/user/sleep.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/sleep.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/sleep.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/sleep.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/sleep.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/sleep.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/sleep.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/sleep.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/sleep.asm	/^_start:$/;"	l
altflag	obj/user/sleep.asm	/^            altflag = 1;$/;"	d
base	obj/user/sleep.asm	/^            base = 10;$/;"	d
base	obj/user/sleep.asm	/^            base = 16;$/;"	d
base	obj/user/sleep.asm	/^            base = 8;$/;"	d
base	obj/user/sleep.asm	/^        base = 10;$/;"	d
ch	obj/user/sleep.asm	/^                ch = *fmt;$/;"	d
char	obj/user/sleep.asm	/^char *$/;"	l
cnt	obj/user/sleep.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/sleep.asm	/^        default:$/;"	l
dig	obj/user/sleep.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/sleep.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sleep.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/sleep.asm	/^                err = -err;$/;"	d
err	obj/user/sleep.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/sleep.asm	/^failed:$/;"	l
int	obj/user/sleep.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/sleep.asm	/^int$/;"	l
lflag	obj/user/sleep.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/sleep.asm	/^long$/;"	l
next	obj/user/sleep.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/sleep.asm	/^    next = seed;$/;"	d
num	obj/user/sleep.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/sleep.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/sleep.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/sleep.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/sleep.asm	/^        number:$/;"	l
p	obj/user/sleep.asm	/^                p = "(null)";$/;"	d
padc	obj/user/sleep.asm	/^            padc = '-';$/;"	d
padc	obj/user/sleep.asm	/^            padc = '0';$/;"	d
precision	obj/user/sleep.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sleep.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/sleep.asm	/^        process_precision:$/;"	l
reswitch	obj/user/sleep.asm	/^    reswitch:$/;"	l
ret	obj/user/sleep.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/sleep.asm	/^size_t$/;"	l
static	obj/user/sleep.asm	/^static char$/;"	l
static	obj/user/sleep.asm	/^static inline bool$/;"	l
static	obj/user/sleep.asm	/^static inline char *$/;"	l
static	obj/user/sleep.asm	/^static inline int$/;"	l
static	obj/user/sleep.asm	/^static inline void *$/;"	l
static	obj/user/sleep.asm	/^static inline void$/;"	l
static	obj/user/sleep.asm	/^static int$/;"	l
static	obj/user/sleep.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/sleep.asm	/^static long long$/;"	l
static	obj/user/sleep.asm	/^static unsigned long long$/;"	l
static	obj/user/sleep.asm	/^static void$/;"	l
step	obj/user/sleep.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/sleep.asm	/^uint32_t$/;"	l
unsigned	obj/user/sleep.asm	/^unsigned int$/;"	l
void	obj/user/sleep.asm	/^void *$/;"	l
void	obj/user/sleep.asm	/^void$/;"	l
width	obj/user/sleep.asm	/^                width = 0;$/;"	d
width	obj/user/sleep.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/sleep.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/sleepkill.asm	/^DIR *$/;"	l
DIR	obj/user/sleepkill.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/sleepkill.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/sleepkill.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/sleepkill.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/sleepkill.asm	/^_start:$/;"	l
altflag	obj/user/sleepkill.asm	/^            altflag = 1;$/;"	d
base	obj/user/sleepkill.asm	/^            base = 10;$/;"	d
base	obj/user/sleepkill.asm	/^            base = 16;$/;"	d
base	obj/user/sleepkill.asm	/^            base = 8;$/;"	d
base	obj/user/sleepkill.asm	/^        base = 10;$/;"	d
ch	obj/user/sleepkill.asm	/^                ch = *fmt;$/;"	d
char	obj/user/sleepkill.asm	/^char *$/;"	l
cnt	obj/user/sleepkill.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/sleepkill.asm	/^        default:$/;"	l
dig	obj/user/sleepkill.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/sleepkill.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/sleepkill.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/sleepkill.asm	/^                err = -err;$/;"	d
err	obj/user/sleepkill.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/sleepkill.asm	/^failed:$/;"	l
int	obj/user/sleepkill.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/sleepkill.asm	/^int$/;"	l
lflag	obj/user/sleepkill.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/sleepkill.asm	/^long$/;"	l
next	obj/user/sleepkill.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/sleepkill.asm	/^    next = seed;$/;"	d
num	obj/user/sleepkill.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/sleepkill.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/sleepkill.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/sleepkill.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/sleepkill.asm	/^        number:$/;"	l
p	obj/user/sleepkill.asm	/^                p = "(null)";$/;"	d
padc	obj/user/sleepkill.asm	/^            padc = '-';$/;"	d
padc	obj/user/sleepkill.asm	/^            padc = '0';$/;"	d
precision	obj/user/sleepkill.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/sleepkill.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/sleepkill.asm	/^        process_precision:$/;"	l
reswitch	obj/user/sleepkill.asm	/^    reswitch:$/;"	l
ret	obj/user/sleepkill.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/sleepkill.asm	/^size_t$/;"	l
static	obj/user/sleepkill.asm	/^static char$/;"	l
static	obj/user/sleepkill.asm	/^static inline bool$/;"	l
static	obj/user/sleepkill.asm	/^static inline char *$/;"	l
static	obj/user/sleepkill.asm	/^static inline int$/;"	l
static	obj/user/sleepkill.asm	/^static inline void *$/;"	l
static	obj/user/sleepkill.asm	/^static inline void$/;"	l
static	obj/user/sleepkill.asm	/^static int$/;"	l
static	obj/user/sleepkill.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/sleepkill.asm	/^static long long$/;"	l
static	obj/user/sleepkill.asm	/^static unsigned long long$/;"	l
static	obj/user/sleepkill.asm	/^static void$/;"	l
step	obj/user/sleepkill.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/sleepkill.asm	/^uint32_t$/;"	l
unsigned	obj/user/sleepkill.asm	/^unsigned int$/;"	l
void	obj/user/sleepkill.asm	/^void *$/;"	l
void	obj/user/sleepkill.asm	/^void$/;"	l
width	obj/user/sleepkill.asm	/^                width = 0;$/;"	d
width	obj/user/sleepkill.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/sleepkill.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/softint.asm	/^DIR *$/;"	l
DIR	obj/user/softint.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/softint.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/softint.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/softint.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/softint.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/softint.asm	/^_start:$/;"	l
altflag	obj/user/softint.asm	/^            altflag = 1;$/;"	d
base	obj/user/softint.asm	/^            base = 10;$/;"	d
base	obj/user/softint.asm	/^            base = 16;$/;"	d
base	obj/user/softint.asm	/^            base = 8;$/;"	d
base	obj/user/softint.asm	/^        base = 10;$/;"	d
ch	obj/user/softint.asm	/^                ch = *fmt;$/;"	d
char	obj/user/softint.asm	/^char *$/;"	l
cnt	obj/user/softint.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/softint.asm	/^        default:$/;"	l
dig	obj/user/softint.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/softint.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/softint.asm	/^                err = -err;$/;"	d
err	obj/user/softint.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/softint.asm	/^failed:$/;"	l
int	obj/user/softint.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/softint.asm	/^int$/;"	l
lflag	obj/user/softint.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/softint.asm	/^long$/;"	l
next	obj/user/softint.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/softint.asm	/^    next = seed;$/;"	d
num	obj/user/softint.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/softint.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/softint.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/softint.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/softint.asm	/^        number:$/;"	l
p	obj/user/softint.asm	/^                p = "(null)";$/;"	d
padc	obj/user/softint.asm	/^            padc = '-';$/;"	d
padc	obj/user/softint.asm	/^            padc = '0';$/;"	d
precision	obj/user/softint.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/softint.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/softint.asm	/^        process_precision:$/;"	l
reswitch	obj/user/softint.asm	/^    reswitch:$/;"	l
ret	obj/user/softint.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/softint.asm	/^size_t$/;"	l
static	obj/user/softint.asm	/^static char$/;"	l
static	obj/user/softint.asm	/^static inline bool$/;"	l
static	obj/user/softint.asm	/^static inline char *$/;"	l
static	obj/user/softint.asm	/^static inline int$/;"	l
static	obj/user/softint.asm	/^static inline void *$/;"	l
static	obj/user/softint.asm	/^static inline void$/;"	l
static	obj/user/softint.asm	/^static int$/;"	l
static	obj/user/softint.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/softint.asm	/^static long long$/;"	l
static	obj/user/softint.asm	/^static unsigned long long$/;"	l
static	obj/user/softint.asm	/^static void$/;"	l
step	obj/user/softint.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/softint.asm	/^uint32_t$/;"	l
unsigned	obj/user/softint.asm	/^unsigned int$/;"	l
void	obj/user/softint.asm	/^void *$/;"	l
void	obj/user/softint.asm	/^void$/;"	l
width	obj/user/softint.asm	/^                width = 0;$/;"	d
width	obj/user/softint.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/softint.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/spin.asm	/^DIR *$/;"	l
DIR	obj/user/spin.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/spin.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/spin.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/spin.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/spin.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/spin.asm	/^_start:$/;"	l
altflag	obj/user/spin.asm	/^            altflag = 1;$/;"	d
base	obj/user/spin.asm	/^            base = 10;$/;"	d
base	obj/user/spin.asm	/^            base = 16;$/;"	d
base	obj/user/spin.asm	/^            base = 8;$/;"	d
base	obj/user/spin.asm	/^        base = 10;$/;"	d
ch	obj/user/spin.asm	/^                ch = *fmt;$/;"	d
char	obj/user/spin.asm	/^char *$/;"	l
cnt	obj/user/spin.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/spin.asm	/^        default:$/;"	l
dig	obj/user/spin.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/spin.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/spin.asm	/^                err = -err;$/;"	d
err	obj/user/spin.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/spin.asm	/^failed:$/;"	l
int	obj/user/spin.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/spin.asm	/^int$/;"	l
lflag	obj/user/spin.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/spin.asm	/^long$/;"	l
next	obj/user/spin.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/spin.asm	/^    next = seed;$/;"	d
num	obj/user/spin.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/spin.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/spin.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/spin.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/spin.asm	/^        number:$/;"	l
p	obj/user/spin.asm	/^                p = "(null)";$/;"	d
padc	obj/user/spin.asm	/^            padc = '-';$/;"	d
padc	obj/user/spin.asm	/^            padc = '0';$/;"	d
pid	obj/user/spin.asm	/^    pid = fork();$/;"	d
precision	obj/user/spin.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/spin.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/spin.asm	/^        process_precision:$/;"	l
reswitch	obj/user/spin.asm	/^    reswitch:$/;"	l
ret	obj/user/spin.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/spin.asm	/^size_t$/;"	l
static	obj/user/spin.asm	/^static char$/;"	l
static	obj/user/spin.asm	/^static inline bool$/;"	l
static	obj/user/spin.asm	/^static inline char *$/;"	l
static	obj/user/spin.asm	/^static inline int$/;"	l
static	obj/user/spin.asm	/^static inline void *$/;"	l
static	obj/user/spin.asm	/^static inline void$/;"	l
static	obj/user/spin.asm	/^static int$/;"	l
static	obj/user/spin.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/spin.asm	/^static long long$/;"	l
static	obj/user/spin.asm	/^static unsigned long long$/;"	l
static	obj/user/spin.asm	/^static void$/;"	l
step	obj/user/spin.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/spin.asm	/^uint32_t$/;"	l
unsigned	obj/user/spin.asm	/^unsigned int$/;"	l
void	obj/user/spin.asm	/^void *$/;"	l
void	obj/user/spin.asm	/^void$/;"	l
width	obj/user/spin.asm	/^                width = 0;$/;"	d
width	obj/user/spin.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/spin.asm	/^        width = precision = -1;$/;"	d
ARRAYSIZE	obj/user/testbss.asm	/^#define ARRAYSIZE (1024*1024)$/;"	d
DIR	obj/user/testbss.asm	/^DIR *$/;"	l
DIR	obj/user/testbss.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/testbss.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/testbss.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/testbss.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/testbss.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/testbss.asm	/^_start:$/;"	l
altflag	obj/user/testbss.asm	/^            altflag = 1;$/;"	d
base	obj/user/testbss.asm	/^            base = 10;$/;"	d
base	obj/user/testbss.asm	/^            base = 16;$/;"	d
base	obj/user/testbss.asm	/^            base = 8;$/;"	d
base	obj/user/testbss.asm	/^        base = 10;$/;"	d
ch	obj/user/testbss.asm	/^                ch = *fmt;$/;"	d
char	obj/user/testbss.asm	/^char *$/;"	l
cnt	obj/user/testbss.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/testbss.asm	/^        default:$/;"	l
dig	obj/user/testbss.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/testbss.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/testbss.asm	/^                err = -err;$/;"	d
err	obj/user/testbss.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/testbss.asm	/^failed:$/;"	l
int	obj/user/testbss.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/testbss.asm	/^int$/;"	l
lflag	obj/user/testbss.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/testbss.asm	/^long$/;"	l
next	obj/user/testbss.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/testbss.asm	/^    next = seed;$/;"	d
num	obj/user/testbss.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/testbss.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/testbss.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/testbss.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/testbss.asm	/^        number:$/;"	l
p	obj/user/testbss.asm	/^                p = "(null)";$/;"	d
padc	obj/user/testbss.asm	/^            padc = '-';$/;"	d
padc	obj/user/testbss.asm	/^            padc = '0';$/;"	d
precision	obj/user/testbss.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/testbss.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/testbss.asm	/^        process_precision:$/;"	l
reswitch	obj/user/testbss.asm	/^    reswitch:$/;"	l
ret	obj/user/testbss.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/testbss.asm	/^size_t$/;"	l
static	obj/user/testbss.asm	/^static char$/;"	l
static	obj/user/testbss.asm	/^static inline bool$/;"	l
static	obj/user/testbss.asm	/^static inline char *$/;"	l
static	obj/user/testbss.asm	/^static inline int$/;"	l
static	obj/user/testbss.asm	/^static inline void *$/;"	l
static	obj/user/testbss.asm	/^static inline void$/;"	l
static	obj/user/testbss.asm	/^static int$/;"	l
static	obj/user/testbss.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/testbss.asm	/^static long long$/;"	l
static	obj/user/testbss.asm	/^static unsigned long long$/;"	l
static	obj/user/testbss.asm	/^static void$/;"	l
step	obj/user/testbss.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/testbss.asm	/^uint32_t bigarray[ARRAYSIZE];$/;"	l
uint32_t	obj/user/testbss.asm	/^uint32_t$/;"	l
unsigned	obj/user/testbss.asm	/^unsigned int$/;"	l
void	obj/user/testbss.asm	/^void *$/;"	l
void	obj/user/testbss.asm	/^void$/;"	l
width	obj/user/testbss.asm	/^                width = 0;$/;"	d
width	obj/user/testbss.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/testbss.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/waitkill.asm	/^DIR *$/;"	l
DIR	obj/user/waitkill.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/waitkill.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/waitkill.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/waitkill.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/waitkill.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/waitkill.asm	/^_start:$/;"	l
altflag	obj/user/waitkill.asm	/^            altflag = 1;$/;"	d
base	obj/user/waitkill.asm	/^            base = 10;$/;"	d
base	obj/user/waitkill.asm	/^            base = 16;$/;"	d
base	obj/user/waitkill.asm	/^            base = 8;$/;"	d
base	obj/user/waitkill.asm	/^        base = 10;$/;"	d
ch	obj/user/waitkill.asm	/^                ch = *fmt;$/;"	d
char	obj/user/waitkill.asm	/^char *$/;"	l
cnt	obj/user/waitkill.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/waitkill.asm	/^        default:$/;"	l
dig	obj/user/waitkill.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/waitkill.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/waitkill.asm	/^                err = -err;$/;"	d
err	obj/user/waitkill.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/waitkill.asm	/^failed:$/;"	l
int	obj/user/waitkill.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/waitkill.asm	/^int parent, pid1, pid2;$/;"	l
int	obj/user/waitkill.asm	/^int$/;"	l
lflag	obj/user/waitkill.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/waitkill.asm	/^long$/;"	l
next	obj/user/waitkill.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/waitkill.asm	/^    next = seed;$/;"	d
num	obj/user/waitkill.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/waitkill.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/waitkill.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/waitkill.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/waitkill.asm	/^        number:$/;"	l
p	obj/user/waitkill.asm	/^                p = "(null)";$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '-';$/;"	d
padc	obj/user/waitkill.asm	/^            padc = '0';$/;"	d
parent	obj/user/waitkill.asm	/^    parent = getpid();$/;"	d
precision	obj/user/waitkill.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/waitkill.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/waitkill.asm	/^        process_precision:$/;"	l
reswitch	obj/user/waitkill.asm	/^    reswitch:$/;"	l
ret	obj/user/waitkill.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/waitkill.asm	/^size_t$/;"	l
static	obj/user/waitkill.asm	/^static char$/;"	l
static	obj/user/waitkill.asm	/^static inline bool$/;"	l
static	obj/user/waitkill.asm	/^static inline char *$/;"	l
static	obj/user/waitkill.asm	/^static inline int$/;"	l
static	obj/user/waitkill.asm	/^static inline void *$/;"	l
static	obj/user/waitkill.asm	/^static inline void$/;"	l
static	obj/user/waitkill.asm	/^static int$/;"	l
static	obj/user/waitkill.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/waitkill.asm	/^static long long$/;"	l
static	obj/user/waitkill.asm	/^static unsigned long long$/;"	l
static	obj/user/waitkill.asm	/^static void$/;"	l
step	obj/user/waitkill.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/waitkill.asm	/^uint32_t$/;"	l
unsigned	obj/user/waitkill.asm	/^unsigned int$/;"	l
void	obj/user/waitkill.asm	/^void *$/;"	l
void	obj/user/waitkill.asm	/^void$/;"	l
width	obj/user/waitkill.asm	/^                width = 0;$/;"	d
width	obj/user/waitkill.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/waitkill.asm	/^        width = precision = -1;$/;"	d
DIR	obj/user/yield.asm	/^DIR *$/;"	l
DIR	obj/user/yield.asm	/^DIR dir, *dirp=&dir;$/;"	l
Disassembly	obj/user/yield.asm	/^Disassembly of section .text:$/;"	l
MAX_ARGS	obj/user/yield.asm	/^#define MAX_ARGS            5$/;"	d
__HAVE_ARCH_MEMCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMCPY$/;"	d
__HAVE_ARCH_MEMMOVE	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMMOVE$/;"	d
__HAVE_ARCH_MEMSET	obj/user/yield.asm	/^#define __HAVE_ARCH_MEMSET$/;"	d
__HAVE_ARCH_STRCMP	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCMP$/;"	d
__HAVE_ARCH_STRCPY	obj/user/yield.asm	/^#define __HAVE_ARCH_STRCPY$/;"	d
_start	obj/user/yield.asm	/^_start:$/;"	l
altflag	obj/user/yield.asm	/^            altflag = 1;$/;"	d
base	obj/user/yield.asm	/^            base = 10;$/;"	d
base	obj/user/yield.asm	/^            base = 16;$/;"	d
base	obj/user/yield.asm	/^            base = 8;$/;"	d
base	obj/user/yield.asm	/^        base = 10;$/;"	d
ch	obj/user/yield.asm	/^                ch = *fmt;$/;"	d
char	obj/user/yield.asm	/^char *$/;"	l
cnt	obj/user/yield.asm	/^    cnt = vsnprintf(str, size, fmt, ap);$/;"	d
default	obj/user/yield.asm	/^        default:$/;"	l
dig	obj/user/yield.asm	/^            dig = *s - '0';$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'A' + 10;$/;"	d
dig	obj/user/yield.asm	/^            dig = *s - 'a' + 10;$/;"	d
err	obj/user/yield.asm	/^                err = -err;$/;"	d
err	obj/user/yield.asm	/^            err = va_arg(ap, int);$/;"	d
failed	obj/user/yield.asm	/^failed:$/;"	l
int	obj/user/yield.asm	/^int main(int argc, char *argv[]);$/;"	l
int	obj/user/yield.asm	/^int$/;"	l
lflag	obj/user/yield.asm	/^        lflag = altflag = 0;$/;"	d
long	obj/user/yield.asm	/^long$/;"	l
next	obj/user/yield.asm	/^    next = (next * 0x5DEECE66DLL + 0xBLL) & ((1LL << 48) - 1);$/;"	d
next	obj/user/yield.asm	/^    next = seed;$/;"	d
num	obj/user/yield.asm	/^                num = -(long long)num;$/;"	d
num	obj/user/yield.asm	/^            num = (unsigned long long)(uintptr_t)va_arg(ap, void *);$/;"	d
num	obj/user/yield.asm	/^            num = getint(&ap, lflag);$/;"	d
num	obj/user/yield.asm	/^            num = getuint(&ap, lflag);$/;"	d
number	obj/user/yield.asm	/^        number:$/;"	l
p	obj/user/yield.asm	/^                p = "(null)";$/;"	d
padc	obj/user/yield.asm	/^            padc = '-';$/;"	d
padc	obj/user/yield.asm	/^            padc = '0';$/;"	d
precision	obj/user/yield.asm	/^                precision = precision * 10 + ch - '0';$/;"	d
precision	obj/user/yield.asm	/^            precision = va_arg(ap, int);$/;"	d
process_precision	obj/user/yield.asm	/^        process_precision:$/;"	l
reswitch	obj/user/yield.asm	/^    reswitch:$/;"	l
ret	obj/user/yield.asm	/^        ret = dup2(fd1, fd2);$/;"	d
size_t	obj/user/yield.asm	/^size_t$/;"	l
static	obj/user/yield.asm	/^static char$/;"	l
static	obj/user/yield.asm	/^static inline bool$/;"	l
static	obj/user/yield.asm	/^static inline char *$/;"	l
static	obj/user/yield.asm	/^static inline int$/;"	l
static	obj/user/yield.asm	/^static inline void *$/;"	l
static	obj/user/yield.asm	/^static inline void$/;"	l
static	obj/user/yield.asm	/^static int$/;"	l
static	obj/user/yield.asm	/^static lock_t fork_lock = INIT_LOCK;$/;"	l
static	obj/user/yield.asm	/^static long long$/;"	l
static	obj/user/yield.asm	/^static unsigned long long$/;"	l
static	obj/user/yield.asm	/^static void$/;"	l
step	obj/user/yield.asm	/^                step = 0;$/;"	d
uint32_t	obj/user/yield.asm	/^uint32_t$/;"	l
unsigned	obj/user/yield.asm	/^unsigned int$/;"	l
void	obj/user/yield.asm	/^void *$/;"	l
void	obj/user/yield.asm	/^void$/;"	l
width	obj/user/yield.asm	/^                width = 0;$/;"	d
width	obj/user/yield.asm	/^                width = precision, precision = -1;$/;"	d
width	obj/user/yield.asm	/^        width = precision = -1;$/;"	d
OBJPREFIX	tools/function.mk	/^OBJPREFIX	:= __objs_$/;"	m
add_dependency	tools/function.mk	/^add_dependency = $(eval $(1): $(2))$/;"	m
add_files	tools/function.mk	/^add_files = $(eval $(call do_add_files_to_packet,$(1),$(2),$(3),$(4),$(5)))$/;"	m
add_objs	tools/function.mk	/^add_objs = $(eval $(call do_add_objs_to_packet,$(1),$(2)))$/;"	m
cc_compile	tools/function.mk	/^cc_compile = $(eval $(call do_cc_compile,$(1),$(2),$(3),$(4)))$/;"	m
cc_template	tools/function.mk	/^define cc_template$/;"	m
create_target	tools/function.mk	/^create_target = $(eval $(call do_create_target,$(1),$(2),$(3),$(4),$(5)))$/;"	m
do_add_files_to_packet	tools/function.mk	/^define do_add_files_to_packet$/;"	m
do_add_objs_to_packet	tools/function.mk	/^define do_add_objs_to_packet$/;"	m
do_cc_compile	tools/function.mk	/^define do_cc_compile$/;"	m
do_create_target	tools/function.mk	/^define do_create_target$/;"	m
do_finish_all	tools/function.mk	/^define do_finish_all$/;"	m
finish_all	tools/function.mk	/^finish_all = $(eval $(call do_finish_all))$/;"	m
listf	tools/function.mk	/^listf = $(filter $(if $(2),$(addprefix %.,$(2)),%),\\$/;"	m
packetname	tools/function.mk	/^packetname = $(if $(1),$(addprefix $(OBJPREFIX),$(1)),$(OBJPREFIX))$/;"	m
read_packet	tools/function.mk	/^read_packet = $(foreach p,$(call packetname,$(1)),$($(p)))$/;"	m
todep	tools/function.mk	/^todep = $(patsubst %.o,%.d,$(call toobj,$(1),$(2)))$/;"	m
toobj	tools/function.mk	/^toobj = $(addprefix $(OBJDIR)$(SLASH)$(if $(2),$(2)$(SLASH)),\\$/;"	m
totarget	tools/function.mk	/^totarget = $(addprefix $(BINDIR)$(SLASH),$(1))$/;"	m
build_run	tools/grade.sh	/^build_run() {$/;"	f
check_regexps	tools/grade.sh	/^check_regexps() {$/;"	f
check_result	tools/grade.sh	/^check_result() {$/;"	f
default_check	tools/grade.sh	/^default_check() {$/;"	f
fail	tools/grade.sh	/^fail() {$/;"	f
get_time	tools/grade.sh	/^get_time() {$/;"	f
make_print	tools/grade.sh	/^make_print() {$/;"	f
pass	tools/grade.sh	/^pass() {$/;"	f
quick_check	tools/grade.sh	/^quick_check() {$/;"	f
quick_run	tools/grade.sh	/^quick_run() {$/;"	f
run_qemu	tools/grade.sh	/^run_qemu() {$/;"	f
run_test	tools/grade.sh	/^run_test() {$/;"	f
show_build_tag	tools/grade.sh	/^show_build_tag() {$/;"	f
show_check_tag	tools/grade.sh	/^show_check_tag() {$/;"	f
show_final	tools/grade.sh	/^show_final() {$/;"	f
show_msg	tools/grade.sh	/^show_msg() {$/;"	f
show_part	tools/grade.sh	/^show_part() {$/;"	f
show_time	tools/grade.sh	/^show_time() {$/;"	f
update_score	tools/grade.sh	/^update_score() {$/;"	f
GOLDEN_RATIO_PRIME_32	tools/mksfs.c	37;"	d	file:
HASH_LIST_SIZE	tools/mksfs.c	40;"	d	file:
HASH_SHIFT	tools/mksfs.c	39;"	d	file:
SFS_BLKBITS	tools/mksfs.c	118;"	d	file:
SFS_BLKN_FREEMAP	tools/mksfs.c	125;"	d	file:
SFS_BLKN_ROOT	tools/mksfs.c	124;"	d	file:
SFS_BLKN_SUPER	tools/mksfs.c	123;"	d	file:
SFS_BLKSIZE	tools/mksfs.c	112;"	d	file:
SFS_BLK_NENTRY	tools/mksfs.c	376;"	d	file:
SFS_L0_NBLKS	tools/mksfs.c	377;"	d	file:
SFS_L1_NBLKS	tools/mksfs.c	378;"	d	file:
SFS_L2_NBLKS	tools/mksfs.c	379;"	d	file:
SFS_LN_NBLKS	tools/mksfs.c	380;"	d	file:
SFS_MAGIC	tools/mksfs.c	110;"	d	file:
SFS_MAX_FILE_SIZE	tools/mksfs.c	116;"	d	file:
SFS_MAX_FNAME_LEN	tools/mksfs.c	115;"	d	file:
SFS_MAX_INFO_LEN	tools/mksfs.c	114;"	d	file:
SFS_MAX_NBLKS	tools/mksfs.c	113;"	d	file:
SFS_NDIRECT	tools/mksfs.c	111;"	d	file:
SFS_TYPE_DIR	tools/mksfs.c	120;"	d	file:
SFS_TYPE_FILE	tools/mksfs.c	119;"	d	file:
SFS_TYPE_LINK	tools/mksfs.c	121;"	d	file:
_GNU_SOURCE	tools/mksfs.c	1;"	d	file:
__error	tools/mksfs.c	17;"	d	file:
__hash32	tools/mksfs.c	/^__hash32(uint32_t val, unsigned int bits) {$/;"	f	file:
__sp_nil	tools/mksfs.c	/^    } __sp_nil, *sp_root, *sp_end;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::subpath	file:
add_dir	tools/mksfs.c	/^add_dir(struct sfs_fs *sfs, struct cache_inode *parent, const char *dirname, int curfd, int fd, ino_t real) {$/;"	f	file:
add_entry	tools/mksfs.c	/^add_entry(struct sfs_fs *sfs, struct cache_inode *current, struct cache_inode *file, const char *name) {$/;"	f	file:
add_file	tools/mksfs.c	/^add_file(struct sfs_fs *sfs, struct cache_inode *current, const char *filename, int fd, ino_t real) {$/;"	f	file:
add_link	tools/mksfs.c	/^add_link(struct sfs_fs *sfs, struct cache_inode *current, const char *filename, ino_t real) {$/;"	f	file:
alloc_cache_block	tools/mksfs.c	/^alloc_cache_block(struct sfs_fs *sfs, uint32_t ino) {$/;"	f	file:
alloc_cache_inode	tools/mksfs.c	/^alloc_cache_inode(struct sfs_fs *sfs, ino_t real, uint32_t ino, uint16_t type) {$/;"	f	file:
append_block	tools/mksfs.c	/^append_block(struct sfs_fs *sfs, struct cache_inode *file, size_t size, uint32_t ino, const char *filename) {$/;"	f	file:
blocks	tools/mksfs.c	/^        uint32_t blocks;$/;"	m	struct:cache_inode::inode	file:
blocks	tools/mksfs.c	/^        uint32_t blocks;$/;"	m	struct:sfs_fs::__anon15	file:
blocks	tools/mksfs.c	/^    struct cache_block *blocks[HASH_LIST_SIZE];$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::cache_block	file:
bool	tools/mksfs.c	/^typedef int bool;$/;"	t	file:
bug	tools/mksfs.c	31;"	d	file:
cache	tools/mksfs.c	/^    void *cache;$/;"	m	struct:cache_block	file:
cache_block	tools/mksfs.c	/^struct cache_block {$/;"	s	file:
cache_inode	tools/mksfs.c	/^struct cache_inode {$/;"	s	file:
close_sfs	tools/mksfs.c	/^close_sfs(struct sfs_fs *sfs) {$/;"	f
create_img	tools/mksfs.c	/^create_img(struct sfs_fs *sfs, const char *home) {$/;"	f
create_sfs	tools/mksfs.c	/^create_sfs(int imgfd) {$/;"	f
db_indirect	tools/mksfs.c	/^        uint32_t db_indirect;$/;"	m	struct:cache_inode::inode	file:
direct	tools/mksfs.c	/^        uint32_t direct[SFS_NDIRECT];$/;"	m	struct:cache_inode::inode	file:
flush_cache_block	tools/mksfs.c	/^flush_cache_block(struct sfs_fs *sfs, struct cache_block *cb) {$/;"	f	file:
flush_cache_inode	tools/mksfs.c	/^flush_cache_inode(struct sfs_fs *sfs, struct cache_inode *ci) {$/;"	f	file:
hash32	tools/mksfs.c	/^hash32(uint32_t val) {$/;"	f	file:
hash64	tools/mksfs.c	/^hash64(uint64_t val) {$/;"	f	file:
hash_next	tools/mksfs.c	/^    struct cache_block *hash_next;$/;"	m	struct:cache_block	typeref:struct:cache_block::cache_block	file:
hash_next	tools/mksfs.c	/^    struct cache_inode *hash_next;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::cache_inode	file:
imgfd	tools/mksfs.c	/^    int imgfd;$/;"	m	struct:sfs_fs	file:
indirect	tools/mksfs.c	/^        uint32_t indirect;$/;"	m	struct:cache_inode::inode	file:
info	tools/mksfs.c	/^        char info[SFS_MAX_INFO_LEN + 1];$/;"	m	struct:sfs_fs::__anon15	file:
ino	tools/mksfs.c	/^    uint32_t ino;$/;"	m	struct:cache_block	file:
ino	tools/mksfs.c	/^    uint32_t ino;$/;"	m	struct:cache_inode	file:
ino	tools/mksfs.c	/^    uint32_t ino;$/;"	m	struct:sfs_entry	file:
inode	tools/mksfs.c	/^    struct inode {$/;"	s	struct:cache_inode	file:
inode	tools/mksfs.c	/^    } inode;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::inode	file:
inodes	tools/mksfs.c	/^    struct cache_inode *inodes[HASH_LIST_SIZE];$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::cache_inode	file:
l1	tools/mksfs.c	/^    struct cache_block *l1, *l2;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::cache_block	file:
l2	tools/mksfs.c	/^    struct cache_block *l1, *l2;$/;"	m	struct:cache_inode	typeref:struct:cache_inode::	file:
magic	tools/mksfs.c	/^        uint32_t magic;$/;"	m	struct:sfs_fs::__anon15	file:
main	tools/mksfs.c	/^main(int argc, char **argv) {$/;"	f
name	tools/mksfs.c	/^    char name[SFS_MAX_FNAME_LEN + 1];$/;"	m	struct:sfs_entry	file:
nblks	tools/mksfs.c	/^    uint32_t nblks;$/;"	m	struct:cache_inode	file:
next	tools/mksfs.c	/^        struct subpath *next, *prev;$/;"	m	struct:sfs_fs::subpath	typeref:struct:sfs_fs::subpath::subpath	file:
next_ino	tools/mksfs.c	/^    uint32_t ninos, next_ino;$/;"	m	struct:sfs_fs	file:
ninos	tools/mksfs.c	/^    uint32_t ninos, next_ino;$/;"	m	struct:sfs_fs	file:
nlinks	tools/mksfs.c	/^        uint16_t nlinks;$/;"	m	struct:cache_inode::inode	file:
open_bug	tools/mksfs.c	364;"	d	file:
open_dir	tools/mksfs.c	/^open_dir(struct sfs_fs *sfs, struct cache_inode *current, struct cache_inode *parent) {$/;"	f
open_file	tools/mksfs.c	/^open_file(struct sfs_fs *sfs, struct cache_inode *file, const char *filename, int fd) {$/;"	f
open_img	tools/mksfs.c	/^open_img(const char *imgname) {$/;"	f
open_link	tools/mksfs.c	/^open_link(struct sfs_fs *sfs, struct cache_inode *file, const char *filename) {$/;"	f
prev	tools/mksfs.c	/^        struct subpath *next, *prev;$/;"	m	struct:sfs_fs::subpath	typeref:struct:sfs_fs::subpath::	file:
real	tools/mksfs.c	/^    ino_t real;$/;"	m	struct:cache_inode	file:
root	tools/mksfs.c	/^    struct cache_inode *root;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::cache_inode	file:
safe_fchdir	tools/mksfs.c	/^safe_fchdir(int fd) {$/;"	f
safe_fstat	tools/mksfs.c	/^safe_fstat(int fd) {$/;"	f
safe_lstat	tools/mksfs.c	/^safe_lstat(const char *name) {$/;"	f
safe_malloc	tools/mksfs.c	/^safe_malloc(size_t size) {$/;"	f
safe_stat	tools/mksfs.c	/^safe_stat(const char *filename) {$/;"	f
safe_strdup	tools/mksfs.c	/^safe_strdup(const char *str) {$/;"	f
search_cache_block	tools/mksfs.c	/^search_cache_block(struct sfs_fs *sfs, uint32_t ino) {$/;"	f
search_cache_inode	tools/mksfs.c	/^search_cache_inode(struct sfs_fs *sfs, ino_t real) {$/;"	f
sfs_alloc_ino	tools/mksfs.c	/^sfs_alloc_ino(struct sfs_fs *sfs) {$/;"	f	file:
sfs_entry	tools/mksfs.c	/^struct sfs_entry {$/;"	s	file:
sfs_fs	tools/mksfs.c	/^struct sfs_fs {$/;"	s	file:
show_fullpath	tools/mksfs.c	370;"	d	file:
size	tools/mksfs.c	/^        uint32_t size;$/;"	m	struct:cache_inode::inode	file:
sp_end	tools/mksfs.c	/^    } __sp_nil, *sp_root, *sp_end;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::subpath	file:
sp_root	tools/mksfs.c	/^    } __sp_nil, *sp_root, *sp_end;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::subpath	file:
static_assert	tools/mksfs.c	33;"	d	file:
static_check	tools/mksfs.c	/^static_check(void) {$/;"	f	file:
subname	tools/mksfs.c	/^        char *subname;$/;"	m	struct:sfs_fs::subpath	file:
subpath	tools/mksfs.c	/^    struct subpath {$/;"	s	struct:sfs_fs	file:
subpath_pop	tools/mksfs.c	/^subpath_pop(struct sfs_fs *sfs) {$/;"	f	file:
subpath_push	tools/mksfs.c	/^subpath_push(struct sfs_fs *sfs, const char *subname) {$/;"	f	file:
subpath_show	tools/mksfs.c	/^subpath_show(FILE *fout, struct sfs_fs *sfs, const char *name) {$/;"	f	file:
super	tools/mksfs.c	/^    } super;$/;"	m	struct:sfs_fs	typeref:struct:sfs_fs::__anon15	file:
type	tools/mksfs.c	/^        uint16_t type;$/;"	m	struct:cache_inode::inode	file:
unused_blocks	tools/mksfs.c	/^        uint32_t unused_blocks;$/;"	m	struct:sfs_fs::__anon15	file:
update_cache	tools/mksfs.c	/^update_cache(struct sfs_fs *sfs, struct cache_block **cbp, uint32_t *inop) {$/;"	f	file:
warn	tools/mksfs.c	30;"	d	file:
write_block	tools/mksfs.c	/^write_block(struct sfs_fs *sfs, void *data, size_t len, uint32_t ino) {$/;"	f	file:
main	tools/sign.c	/^main(int argc, char *argv[]) {$/;"	f
main	tools/vector.c	/^main(void) {$/;"	f
main	user/badarg.c	/^main(void) {$/;"	f
main	user/badsegment.c	/^main(void) {$/;"	f
main	user/divzero.c	/^main(void) {$/;"	f
zero	user/divzero.c	/^int zero;$/;"	v
magic	user/exit.c	/^int magic = -0x10384;$/;"	v
main	user/exit.c	/^main(void) {$/;"	f
main	user/faultread.c	/^main(void) {$/;"	f
main	user/faultreadkernel.c	/^main(void) {$/;"	f
main	user/forktest.c	/^main(void) {$/;"	f
max_child	user/forktest.c	/^const int max_child = 32;$/;"	v
DEPTH	user/forktree.c	5;"	d	file:
SLEEP_TIME	user/forktree.c	6;"	d	file:
forkchild	user/forktree.c	/^forkchild(const char *cur, char branch) {$/;"	f
forktree	user/forktree.c	/^forktree(const char *cur) {$/;"	f
main	user/forktree.c	/^main(void) {$/;"	f
main	user/hello.c	/^main(void) {$/;"	f
closedir	user/libs/dir.c	/^closedir(DIR *dirp) {$/;"	f
dir	user/libs/dir.c	/^DIR dir, *dirp=&dir;$/;"	v
dirp	user/libs/dir.c	/^DIR dir, *dirp=&dir;$/;"	v
getcwd	user/libs/dir.c	/^getcwd(char *buffer, size_t len) {$/;"	f
opendir	user/libs/dir.c	/^opendir(const char *path) {$/;"	f
readdir	user/libs/dir.c	/^readdir(DIR *dirp) {$/;"	f
DIR	user/libs/dir.h	/^} DIR;$/;"	t	typeref:struct:__anon16
__USER_LIBS_DIR_H__	user/libs/dir.h	2;"	d
dirent	user/libs/dir.h	/^    struct dirent dirent;$/;"	m	struct:__anon16	typeref:struct:__anon16::dirent
fd	user/libs/dir.h	/^    int fd;$/;"	m	struct:__anon16
close	user/libs/file.c	/^close(int fd) {$/;"	f
dup2	user/libs/file.c	/^dup2(int fd1, int fd2) {$/;"	f
fstat	user/libs/file.c	/^fstat(int fd, struct stat *stat) {$/;"	f
fsync	user/libs/file.c	/^fsync(int fd) {$/;"	f
open	user/libs/file.c	/^open(const char *path, uint32_t open_flags) {$/;"	f
print_stat	user/libs/file.c	/^print_stat(const char *name, int fd, struct stat *stat) {$/;"	f
read	user/libs/file.c	/^read(int fd, void *base, size_t len) {$/;"	f
seek	user/libs/file.c	/^seek(int fd, off_t pos, int whence) {$/;"	f
transmode	user/libs/file.c	/^transmode(struct stat *stat) {$/;"	f	file:
write	user/libs/file.c	/^write(int fd, void *base, size_t len) {$/;"	f
__USER_LIBS_FILE_H__	user/libs/file.h	2;"	d
_start	user/libs/initcode.S	/^_start:$/;"	l
INIT_LOCK	user/libs/lock.h	8;"	d
__USER_LIBS_LOCK_H__	user/libs/lock.h	2;"	d
lock	user/libs/lock.h	/^lock(lock_t *l) {$/;"	f
lock_init	user/libs/lock.h	/^lock_init(lock_t *l) {$/;"	f
lock_t	user/libs/lock.h	/^typedef volatile bool lock_t;$/;"	t
try_lock	user/libs/lock.h	/^try_lock(lock_t *l) {$/;"	f
unlock	user/libs/lock.h	/^unlock(lock_t *l) {$/;"	f
__panic	user/libs/panic.c	/^__panic(const char *file, int line, const char *fmt, ...) {$/;"	f
__warn	user/libs/panic.c	/^__warn(const char *file, int line, const char *fmt, ...) {$/;"	f
cprintf	user/libs/stdio.c	/^cprintf(const char *fmt, ...) {$/;"	f
cputch	user/libs/stdio.c	/^cputch(int c, int *cnt) {$/;"	f	file:
cputs	user/libs/stdio.c	/^cputs(const char *str) {$/;"	f
fprintf	user/libs/stdio.c	/^fprintf(int fd, const char *fmt, ...) {$/;"	f
fputch	user/libs/stdio.c	/^fputch(char c, int *cnt, int fd) {$/;"	f	file:
vcprintf	user/libs/stdio.c	/^vcprintf(const char *fmt, va_list ap) {$/;"	f
vfprintf	user/libs/stdio.c	/^vfprintf(int fd, const char *fmt, va_list ap) {$/;"	f
MAX_ARGS	user/libs/syscall.c	9;"	d	file:
sys_close	user/libs/syscall.c	/^sys_close(int fd) {$/;"	f
sys_dup	user/libs/syscall.c	/^sys_dup(int fd1, int fd2) {$/;"	f
sys_exec	user/libs/syscall.c	/^sys_exec(const char *name, int argc, const char **argv) {$/;"	f
sys_exit	user/libs/syscall.c	/^sys_exit(int error_code) {$/;"	f
sys_fork	user/libs/syscall.c	/^sys_fork(void) {$/;"	f
sys_fstat	user/libs/syscall.c	/^sys_fstat(int fd, struct stat *stat) {$/;"	f
sys_fsync	user/libs/syscall.c	/^sys_fsync(int fd) {$/;"	f
sys_getcwd	user/libs/syscall.c	/^sys_getcwd(char *buffer, size_t len) {$/;"	f
sys_getdirentry	user/libs/syscall.c	/^sys_getdirentry(int fd, struct dirent *dirent) {$/;"	f
sys_getpid	user/libs/syscall.c	/^sys_getpid(void) {$/;"	f
sys_gettime	user/libs/syscall.c	/^sys_gettime(void) {$/;"	f
sys_kill	user/libs/syscall.c	/^sys_kill(int pid) {$/;"	f
sys_lab6_set_priority	user/libs/syscall.c	/^sys_lab6_set_priority(uint32_t priority)$/;"	f
sys_open	user/libs/syscall.c	/^sys_open(const char *path, uint32_t open_flags) {$/;"	f
sys_pgdir	user/libs/syscall.c	/^sys_pgdir(void) {$/;"	f
sys_putc	user/libs/syscall.c	/^sys_putc(int c) {$/;"	f
sys_read	user/libs/syscall.c	/^sys_read(int fd, void *base, size_t len) {$/;"	f
sys_seek	user/libs/syscall.c	/^sys_seek(int fd, off_t pos, int whence) {$/;"	f
sys_sleep	user/libs/syscall.c	/^sys_sleep(unsigned int time) {$/;"	f
sys_wait	user/libs/syscall.c	/^sys_wait(int pid, int *store) {$/;"	f
sys_write	user/libs/syscall.c	/^sys_write(int fd, void *base, size_t len) {$/;"	f
sys_yield	user/libs/syscall.c	/^sys_yield(void) {$/;"	f
syscall	user/libs/syscall.c	/^syscall(int num, ...) {$/;"	f	file:
__USER_LIBS_SYSCALL_H__	user/libs/syscall.h	2;"	d
__exec	user/libs/ulib.c	/^__exec(const char *name, const char **argv) {$/;"	f
exit	user/libs/ulib.c	/^exit(int error_code) {$/;"	f
fork	user/libs/ulib.c	/^fork(void) {$/;"	f
fork_lock	user/libs/ulib.c	/^static lock_t fork_lock = INIT_LOCK;$/;"	v	file:
getpid	user/libs/ulib.c	/^getpid(void) {$/;"	f
gettime_msec	user/libs/ulib.c	/^gettime_msec(void) {$/;"	f
kill	user/libs/ulib.c	/^kill(int pid) {$/;"	f
lab6_set_priority	user/libs/ulib.c	/^lab6_set_priority(uint32_t priority)$/;"	f
lock_fork	user/libs/ulib.c	/^lock_fork(void) {$/;"	f
print_pgdir	user/libs/ulib.c	/^print_pgdir(void) {$/;"	f
sleep	user/libs/ulib.c	/^sleep(unsigned int time) {$/;"	f
unlock_fork	user/libs/ulib.c	/^unlock_fork(void) {$/;"	f
wait	user/libs/ulib.c	/^wait(void) {$/;"	f
waitpid	user/libs/ulib.c	/^waitpid(int pid, int *store) {$/;"	f
yield	user/libs/ulib.c	/^yield(void) {$/;"	f
__USER_LIBS_ULIB_H__	user/libs/ulib.h	2;"	d
__exec0	user/libs/ulib.h	40;"	d
assert	user/libs/ulib.h	15;"	d
exec	user/libs/ulib.h	43;"	d
nexec	user/libs/ulib.h	44;"	d
panic	user/libs/ulib.h	12;"	d
static_assert	user/libs/ulib.h	23;"	d
warn	user/libs/ulib.h	9;"	d
initfd	user/libs/umain.c	/^initfd(int fd2, const char *path, uint32_t open_flags) {$/;"	f	file:
umain	user/libs/umain.c	/^umain(int argc, char *argv[]) {$/;"	f
BUFSIZE	user/ls.c	11;"	d	file:
getmode	user/ls.c	/^getmode(uint32_t st_mode) {$/;"	f	file:
getstat	user/ls.c	/^getstat(const char *name, struct stat *stat) {$/;"	f	file:
ls	user/ls.c	/^ls(const char *path) {$/;"	f
lsdir	user/ls.c	/^lsdir(const char *path) {$/;"	f
lsstat	user/ls.c	/^lsstat(struct stat *stat, const char *filename) {$/;"	f
main	user/ls.c	/^main(int argc, char **argv) {$/;"	f
printf	user/ls.c	10;"	d	file:
MATSIZE	user/matrix.c	6;"	d	file:
main	user/matrix.c	/^main(void) {$/;"	f
mata	user/matrix.c	/^static int mata[MATSIZE][MATSIZE];$/;"	v	file:
matb	user/matrix.c	/^static int matb[MATSIZE][MATSIZE];$/;"	v	file:
matc	user/matrix.c	/^static int matc[MATSIZE][MATSIZE];$/;"	v	file:
total	user/matrix.c	/^const int total = 21;$/;"	v
work	user/matrix.c	/^work(unsigned int times) {$/;"	f
main	user/pgdir.c	/^main(void) {$/;"	f
MAX_TIME	user/priority.c	8;"	d	file:
SLEEP_TIME	user/priority.c	9;"	d	file:
TOTAL	user/priority.c	6;"	d	file:
acc	user/priority.c	/^unsigned int acc[TOTAL];$/;"	v
main	user/priority.c	/^main(void) {$/;"	f
pids	user/priority.c	/^int pids[TOTAL];$/;"	v
spin_delay	user/priority.c	/^spin_delay(void)$/;"	f	file:
status	user/priority.c	/^int status[TOTAL];$/;"	v
BUFSIZE	user/sh.c	12;"	d	file:
SYMBOLS	user/sh.c	14;"	d	file:
WHITESPACE	user/sh.c	13;"	d	file:
gettoken	user/sh.c	/^gettoken(char **p1, char **p2) {$/;"	f
main	user/sh.c	/^main(int argc, char **argv) {$/;"	f
printf	user/sh.c	9;"	d	file:
putc	user/sh.c	10;"	d	file:
readline	user/sh.c	/^readline(const char *prompt) {$/;"	f
reopen	user/sh.c	/^reopen(int fd2, const char *filename, uint32_t open_flags) {$/;"	f
runcmd	user/sh.c	/^runcmd(char *cmd) {$/;"	f
shcwd	user/sh.c	/^char shcwd[BUFSIZE];$/;"	v
testfile	user/sh.c	/^testfile(const char *name) {$/;"	f
usage	user/sh.c	/^usage(void) {$/;"	f
main	user/sleep.c	/^main(void) {$/;"	f
sleepy	user/sleep.c	/^sleepy(int pid) {$/;"	f
main	user/sleepkill.c	/^main(void) {$/;"	f
main	user/softint.c	/^main(void) {$/;"	f
main	user/spin.c	/^main(void) {$/;"	f
ARRAYSIZE	user/testbss.c	4;"	d	file:
bigarray	user/testbss.c	/^uint32_t bigarray[ARRAYSIZE];$/;"	v
main	user/testbss.c	/^main(void) {$/;"	f
do_yield	user/waitkill.c	/^do_yield(void) {$/;"	f
loop	user/waitkill.c	/^loop(void) {$/;"	f
main	user/waitkill.c	/^main(void) {$/;"	f
parent	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid1	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
pid2	user/waitkill.c	/^int parent, pid1, pid2;$/;"	v
work	user/waitkill.c	/^work(void) {$/;"	f
main	user/yield.c	/^main(void) {$/;"	f
